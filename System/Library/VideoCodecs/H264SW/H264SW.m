void sub_215FBC3CC()
{
  const __CFAllocator *v0;
  CFDictionaryRef v1;
  void *values;
  void *keys[2];

  keys[1] = *(void **)MEMORY[0x24BDAC8D0];
  v0 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  keys[0] = *(void **)MEMORY[0x24BDF9988];
  values = (void *)*MEMORY[0x24BDBD268];
  v1 = CFDictionaryCreate(v0, (const void **)keys, (const void **)&values, 1, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  VTRegisterVideoDecoderWithInfo();
  if (v1)
    CFRelease(v1);
}

void VCPAVCRegisterDecoder()
{
  if (qword_253D724B0 != -1)
    dispatch_once_f(&qword_253D724B0, 0, (dispatch_function_t)sub_215FBC3CC);
}

uint64_t sub_215FBC4B8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;

  VTVideoDecoderGetClassID();
  v4 = CMDerivedObjectCreate();
  FigSignalErrorAt3();
  *a3 = 0;
  return v4;
}

uint64_t sub_215FBC5A8()
{
  _QWORD *DerivedStorage;
  uint64_t v1;
  const void *v2;
  uint64_t result;

  DerivedStorage = (_QWORD *)CMBaseObjectGetDerivedStorage();
  v1 = DerivedStorage[3];
  if (v1)
  {
    sub_2160C66B0(v1);
    DerivedStorage[3] = 0;
  }
  v2 = (const void *)DerivedStorage[143];
  if (v2)
  {
    CFRelease(v2);
    DerivedStorage[143] = 0;
  }
  *DerivedStorage = 0;
  result = FigFormatDescriptionRelease();
  DerivedStorage[2] = 0;
  return result;
}

__CFString *sub_215FBC5F8(uint64_t a1)
{
  __CFString *Mutable;

  Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0);
  CFStringAppendFormat(Mutable, 0, CFSTR("<H264VideoDecoder %p>"), a1);
  return Mutable;
}

uint64_t sub_215FBC64C(uint64_t a1, const void *a2, const __CFAllocator *a3, _QWORD *a4)
{
  uint64_t DerivedStorage;
  const void **v8;
  const void *v9;
  const __CFAllocator *v10;
  CFNumberType v11;
  const void *v12;
  const UInt8 *v14;
  uint64_t v15;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x24BDF9420]))
  {
    switch(*(_DWORD *)(DerivedStorage + 32))
    {
      case 0:
        v8 = (const void **)MEMORY[0x24BDF9470];
        break;
      case 1:
        v8 = (const void **)MEMORY[0x24BDF9488];
        break;
      case 2:
        v8 = (const void **)MEMORY[0x24BDF9478];
        break;
      case 3:
        v8 = (const void **)MEMORY[0x24BDF9480];
        break;
      default:
        return FigSignalErrorAt3();
    }
    v12 = *v8;
LABEL_16:
    v12 = CFRetain(v12);
    goto LABEL_17;
  }
  if (!CFEqual(a2, (CFTypeRef)*MEMORY[0x24BDF9438]))
  {
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x24BDF9448]))
    {
      if (qword_254E15F80 != -1)
        dispatch_once_f(&qword_254E15F80, 0, (dispatch_function_t)sub_215FBCDDC);
      v12 = (const void *)qword_254E15F88;
      if (qword_254E15F88)
        goto LABEL_16;
      return FigSignalErrorAt3();
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x24BDF9460]))
    {
      v9 = (const void *)(DerivedStorage + 52);
      goto LABEL_22;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x24BDF9428]))
    {
      v9 = (const void *)(DerivedStorage + 56);
      goto LABEL_22;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x24BDF9400]))
    {
      v14 = (const UInt8 *)(DerivedStorage + 1088);
      v15 = *(unsigned __int16 *)(DerivedStorage + 1084);
    }
    else
    {
      if (!CFEqual(a2, (CFTypeRef)*MEMORY[0x24BDF9408]))
      {
        if (!CFEqual(a2, (CFTypeRef)*MEMORY[0x24BDF9450]))
        {
          if (CFEqual(a2, (CFTypeRef)*MEMORY[0x24BDF9430]))
          {
            v12 = *(const void **)(DerivedStorage + 1144);
            if (!v12)
              goto LABEL_17;
            goto LABEL_16;
          }
          return FigSignalErrorAt3();
        }
        v9 = (const void *)(DerivedStorage + 60);
LABEL_22:
        v10 = a3;
        v11 = kCFNumberSInt32Type;
        goto LABEL_6;
      }
      v14 = (const UInt8 *)(DerivedStorage + 1104);
      v15 = *(unsigned __int16 *)(DerivedStorage + 1086);
    }
    v12 = CFDataCreate(a3, v14, 2 * v15);
    goto LABEL_17;
  }
  v9 = (const void *)(DerivedStorage + 1128);
  v10 = a3;
  v11 = kCFNumberDoubleType;
LABEL_6:
  v12 = CFNumberCreate(v10, v11, v9);
LABEL_17:
  *a4 = v12;
  return 0;
}

uint64_t sub_215FBC934(uint64_t a1, const void *a2, const __CFString *a3)
{
  uint64_t DerivedStorage;
  CFTypeID TypeID;
  uint64_t result;
  CFTypeID v8;
  int v9;
  CFTypeID v10;
  void *v11;
  CFTypeID v12;
  CFTypeID v13;
  char *v14;
  CFTypeID v15;
  int v16;
  CFTypeID v17;
  const void *v18;
  CFTypeRef v19;
  double valuePtr;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x24BDF9420]))
  {
    if (!a3)
    {
LABEL_5:
      result = 0;
      *(_DWORD *)(DerivedStorage + 32) = 0;
      return result;
    }
    TypeID = CFStringGetTypeID();
    if (TypeID == CFGetTypeID(a3))
    {
      if (CFEqual(a3, (CFTypeRef)*MEMORY[0x24BDF9470]))
        goto LABEL_5;
      if (CFEqual(a3, (CFTypeRef)*MEMORY[0x24BDF9488]))
      {
        result = 0;
        v9 = 1;
LABEL_32:
        *(_DWORD *)(DerivedStorage + 32) = v9;
        return result;
      }
      if (CFEqual(a3, (CFTypeRef)*MEMORY[0x24BDF9478]))
      {
        result = 0;
        v9 = 2;
        goto LABEL_32;
      }
      if (CFEqual(a3, (CFTypeRef)*MEMORY[0x24BDF9480]))
      {
        result = 0;
        v9 = 3;
        goto LABEL_32;
      }
    }
    return FigSignalErrorAt3();
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x24BDF9438]))
  {
    if (!a3)
    {
      result = 0;
      *(_QWORD *)(DerivedStorage + 1128) = 0x3FF0000000000000;
      return result;
    }
    v8 = CFNumberGetTypeID();
    if (v8 == CFGetTypeID(a3))
    {
      valuePtr = 1.0;
      CFNumberGetValue((CFNumberRef)a3, kCFNumberDoubleType, &valuePtr);
      if (valuePtr >= 0.0 && valuePtr <= 1.0)
      {
        result = 0;
        *(double *)(DerivedStorage + 1128) = valuePtr;
        return result;
      }
      return FigSignalErrorAt3();
    }
    return 0;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x24BDF9448]))
    return FigSignalErrorAt3();
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x24BDF9460]))
  {
    if (!a3)
    {
      result = 0;
      *(_DWORD *)(DerivedStorage + 52) = 0;
      return result;
    }
    v10 = CFNumberGetTypeID();
    if (v10 != CFGetTypeID(a3))
      return 0;
    v11 = (void *)(DerivedStorage + 52);
    goto LABEL_37;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x24BDF9428]))
  {
    if (a3)
    {
      v12 = CFNumberGetTypeID();
      if (v12 == CFGetTypeID(a3))
      {
        v11 = (void *)(DerivedStorage + 56);
LABEL_37:
        CFNumberGetValue((CFNumberRef)a3, kCFNumberSInt32Type, v11);
        return 0;
      }
      return 0;
    }
    result = 0;
    *(_DWORD *)(DerivedStorage + 56) = 0;
  }
  else if (CFEqual(a2, (CFTypeRef)*MEMORY[0x24BDF9450]))
  {
    if (a3)
    {
      v13 = CFNumberGetTypeID();
      if (v13 == CFGetTypeID(a3))
      {
        v11 = (void *)(DerivedStorage + 60);
        goto LABEL_37;
      }
      return 0;
    }
    if (*(_QWORD *)(DerivedStorage + 24))
    {
      v16 = sub_215FBD058(*(_DWORD *)(DerivedStorage + 1068), *(_DWORD *)(DerivedStorage + 1072));
      result = 0;
      *(_DWORD *)(DerivedStorage + 60) = v16;
    }
    else
    {
      result = 0;
      *(_DWORD *)(DerivedStorage + 60) = 0;
    }
  }
  else
  {
    if (CFEqual(a2, CFSTR("NegotiationDetails")))
    {
      *(_BYTE *)(DerivedStorage + 64) = 0;
      v14 = (char *)(DerivedStorage + 64);
      if (a3)
      {
        v15 = CFStringGetTypeID();
        if (v15 == CFGetTypeID(a3))
          CFStringGetCString(a3, v14, 1001, 0);
      }
      return 0;
    }
    if (!CFEqual(a2, (CFTypeRef)*MEMORY[0x24BDF9430]))
      return FigSignalErrorAt3();
    if (a3)
    {
      v17 = CFBooleanGetTypeID();
      if (v17 != CFGetTypeID(a3))
        return FigSignalErrorAt3();
    }
    v18 = *(const void **)(DerivedStorage + 1144);
    if (v18)
      CFRelease(v18);
    if (a3)
      v19 = CFRetain(a3);
    else
      v19 = 0;
    result = 0;
    *(_QWORD *)(DerivedStorage + 1144) = v19;
  }
  return result;
}

void sub_215FBCDDC()
{
  void *v0;
  uint64_t i;
  const void *v2;
  void *values[6];

  values[5] = *(void **)MEMORY[0x24BDAC8D0];
  values[0] = sub_215FBCF34((void *)*MEMORY[0x24BDF9470], 1.0);
  values[1] = sub_215FBCF34((void *)*MEMORY[0x24BDF9488], 1.0);
  values[2] = sub_215FBCF34((void *)*MEMORY[0x24BDF9478], 1.0);
  v0 = (void *)*MEMORY[0x24BDF9480];
  values[3] = sub_215FBCF34((void *)*MEMORY[0x24BDF9480], 1.0);
  values[4] = sub_215FBCF34(v0, 0.5);
  qword_254E15F88 = (uint64_t)CFArrayCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], (const void **)values, 5, MEMORY[0x24BDBD690]);
  if (!qword_254E15F88)
    FigSignalErrorAt3();
  for (i = 0; i != 5; ++i)
  {
    v2 = values[i];
    if (v2)
      CFRelease(v2);
  }
}

CFDictionaryRef sub_215FBCF34(void *a1, double a2)
{
  void *v3;
  const __CFAllocator *v4;
  CFNumberRef v5;
  CFDictionaryRef v6;
  double valuePtr;
  void *values[2];
  void *keys[3];

  keys[2] = *(void **)MEMORY[0x24BDAC8D0];
  valuePtr = a2;
  v3 = (void *)*MEMORY[0x24BDF9438];
  keys[0] = *(void **)MEMORY[0x24BDF9420];
  keys[1] = v3;
  v4 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  v5 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], kCFNumberDoubleType, &valuePtr);
  values[0] = a1;
  values[1] = v5;
  v6 = CFDictionaryCreate(v4, (const void **)keys, (const void **)values, 2, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  if (!v6)
    FigSignalErrorAt3();
  if (v5)
    CFRelease(v5);
  return v6;
}

uint64_t sub_215FBD058(int a1, int a2)
{
  uint64_t result;
  unsigned int v5;
  Boolean keyExistsAndHasValidFormat;

  keyExistsAndHasValidFormat = 0;
  LODWORD(result) = CFPreferencesGetAppIntegerValue(CFSTR("ThreadCountH264SWDecoder"), CFSTR("com.apple.coremedia"), &keyExistsAndHasValidFormat);
  if ((a2 * a1) <= 0x1FE000)
    v5 = 3;
  else
    v5 = 4;
  if (keyExistsAndHasValidFormat)
    return result;
  else
    return v5;
}

uint64_t sub_215FBD0B8(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage;
  BOOL v4;
  int v5;
  Boolean keyExistsAndHasValidFormat;

  VTVideoDecoderGetCMBaseObject();
  DerivedStorage = CMBaseObjectGetDerivedStorage();
  *(_QWORD *)DerivedStorage = a2;
  FigFormatDescriptionRelease();
  *(_QWORD *)(DerivedStorage + 16) = FigFormatDescriptionRetain();
  *(_QWORD *)(DerivedStorage + 24) = 0;
  keyExistsAndHasValidFormat = 0;
  if (CFPreferencesGetAppBooleanValue(CFSTR("ForceSyncH264SWDecoder"), CFSTR("com.apple.coremedia"), &keyExistsAndHasValidFormat))
  {
    v4 = keyExistsAndHasValidFormat == 0;
  }
  else
  {
    v4 = 1;
  }
  v5 = !v4;
  *(_DWORD *)(DerivedStorage + 1076) = v5;
  sub_215FBDB24(DerivedStorage);
  return 0;
}

uint64_t sub_215FBD148(uint64_t a1, uint64_t a2, opaqueCMSampleBuffer *a3, char a4, int *a5)
{
  uint64_t DerivedStorage;
  uint64_t v10;
  __CVPixelBufferPool *PixelBufferPool;
  uint64_t v12;
  uint64_t v13;
  __CVBuffer *v14;
  OSType PixelFormatType;
  int BytesPerRowOfPlane;
  int v18;
  int Height;
  uint64_t v20;
  __CVBuffer *BaseAddressOfPlane;
  void *v22;
  CVPixelBufferRef pixelBufferOut;
  uint64_t v24;
  int v25;
  OSType v26;
  uint64_t v27;
  int v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _DWORD v36[7];
  void *v37;
  int v38;
  __int128 v39;
  __int128 v40;
  int v41;
  int v42;
  size_t extraRowsOnBottom[2];

  VTVideoDecoderGetCMBaseObject();
  DerivedStorage = CMBaseObjectGetDerivedStorage();
  v10 = DerivedStorage;
  v42 = 0;
  if (a5)
    v42 = *a5;
  if (!*(_QWORD *)(DerivedStorage + 24))
  {
    v13 = sub_215FBDF18();
    if ((_DWORD)v13)
      goto LABEL_10;
  }
  pixelBufferOut = 0;
  PixelBufferPool = (__CVPixelBufferPool *)VTDecoderSessionGetPixelBufferPool();
  v12 = CVPixelBufferPoolCreatePixelBuffer(0, PixelBufferPool, &pixelBufferOut);
  if ((_DWORD)v12)
  {
    v13 = v12;
    FigSignalErrorAt3();
LABEL_9:
    CVPixelBufferRelease(pixelBufferOut);
LABEL_10:
    VTDecoderSessionEmitDecodedFrame();
    v14 = 0;
    goto LABEL_11;
  }
  extraRowsOnBottom[0] = 0;
  v13 = CVPixelBufferLockBaseAddress(pixelBufferOut, 0);
  if ((_DWORD)v13)
    goto LABEL_9;
  PixelFormatType = CVPixelBufferGetPixelFormatType(pixelBufferOut);
  if ((PixelFormatType | 0x10) == 0x34323076)
  {
    BaseAddressOfPlane = (__CVBuffer *)CVPixelBufferGetBaseAddressOfPlane(pixelBufferOut, 0);
    BytesPerRowOfPlane = CVPixelBufferGetBytesPerRowOfPlane(pixelBufferOut, 0);
    v22 = CVPixelBufferGetBaseAddressOfPlane(pixelBufferOut, 1uLL);
    v18 = CVPixelBufferGetBytesPerRowOfPlane(pixelBufferOut, 1uLL);
  }
  else
  {
    BaseAddressOfPlane = (__CVBuffer *)CVPixelBufferGetBaseAddress(pixelBufferOut);
    BytesPerRowOfPlane = CVPixelBufferGetBytesPerRow(pixelBufferOut);
    v22 = 0;
    v18 = 0;
  }
  CVPixelBufferGetExtendedPixels(pixelBufferOut, 0, 0, 0, extraRowsOnBottom);
  Height = CVPixelBufferGetHeight(pixelBufferOut);
  v14 = pixelBufferOut;
  if ((a4 & 1) != 0 && !*(_DWORD *)(v10 + 1076))
  {
    pixelBufferOut = BaseAddressOfPlane;
    v24 = 0;
    v25 = BytesPerRowOfPlane;
    v26 = PixelFormatType;
    v27 = 0;
    v28 = LODWORD(extraRowsOnBottom[0]) + Height;
    v29 = 0u;
    v30 = 0u;
    v31 = 0u;
    v32 = 0u;
    v33 = 0u;
    v34 = 0u;
    v35 = 0u;
    memset(v36, 0, sizeof(v36));
    v37 = v22;
    v39 = 0u;
    v40 = 0u;
    v38 = v18;
    v41 = 0;
    v20 = sub_215FBE220(v10, a2, 0, a3, v14, &pixelBufferOut, &v42);
  }
  else
  {
    pixelBufferOut = BaseAddressOfPlane;
    v24 = 0;
    v25 = BytesPerRowOfPlane;
    v26 = PixelFormatType;
    v27 = 0;
    v28 = LODWORD(extraRowsOnBottom[0]) + Height;
    v29 = 0u;
    v30 = 0u;
    v31 = 0u;
    v32 = 0u;
    v33 = 0u;
    v34 = 0u;
    v35 = 0u;
    memset(v36, 0, sizeof(v36));
    v37 = v22;
    v39 = 0u;
    v40 = 0u;
    v38 = v18;
    v41 = 0;
    v20 = sub_215FBE4F8(v10, a2, 0, a3, v14, &pixelBufferOut, &v42);
  }
  v13 = v20;
  if (a5)
    *a5 = v42;
LABEL_11:
  CVPixelBufferRelease(v14);
  return v13;
}

uint64_t sub_215FBD46C(uint64_t a1, CFTypeRef *a2)
{
  if (qword_254E15F90 == -1)
  {
    if (!a2)
      return FigSignalErrorAt3();
  }
  else
  {
    dispatch_once_f(&qword_254E15F90, 0, (dispatch_function_t)sub_215FBF1B8);
    if (!a2)
      return FigSignalErrorAt3();
  }
  if (qword_254E15F98)
  {
    *a2 = CFRetain((CFTypeRef)qword_254E15F98);
    return 0;
  }
  return FigSignalErrorAt3();
}

const opaqueCMFormatDescription *sub_215FBD528()
{
  const opaqueCMFormatDescription *v0;
  const opaqueCMFormatDescription *v1;
  uint64_t DerivedStorage;
  int v3;
  const opaqueCMFormatDescription *result;
  const __CFBoolean *Extension;
  const __CFBoolean *v6;
  CFTypeID TypeID;
  int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  __int16 v12;
  int v13;
  int v14;
  unsigned int v15[16];
  char v16[500];
  unsigned int v17[256];
  char v18[3000];
  unsigned int v19[16];
  _BYTE v20[1500];
  uint64_t v21;

  MEMORY[0x24BDAC7A8]();
  v1 = v0;
  v21 = *MEMORY[0x24BDAC8D0];
  VTVideoDecoderGetCMBaseObject();
  DerivedStorage = CMBaseObjectGetDerivedStorage();
  v3 = *(_DWORD *)(DerivedStorage + 1080);
  v10 = 0;
  v9 = 0;
  result = *(const opaqueCMFormatDescription **)(DerivedStorage + 16);
  if (result)
  {
    if (*(_QWORD *)(DerivedStorage + 24))
    {
      Extension = (const __CFBoolean *)CMFormatDescriptionGetExtension(result, (CFStringRef)*MEMORY[0x24BDC0B60]);
      if (Extension)
      {
        v6 = Extension;
        TypeID = CFBooleanGetTypeID();
        if (TypeID == CFGetTypeID(v6))
          LOBYTE(v3) = CFBooleanGetValue(v6);
      }
      if (*(_DWORD *)(DerivedStorage + 1080) == v3)
      {
        v12 = 0;
        if (!sub_215FBE874(v1, &v14, &v13, v20, v19, (_DWORD *)&v10 + 1, v18, v17, &v10, v16, (uint64_t)v15, &v9, (uint64_t)&v12 + 1, (uint64_t)&v12, &v11, &v11, &v14, &v8))
        {
          LOBYTE(result) = sub_2160C5BE0(*(_QWORD *)(DerivedStorage + 24), (uint64_t)v20, (uint64_t)v19, HIDWORD(v10), (uint64_t)v18, (uint64_t)v17, v10, (uint64_t)v16, v15, v9);
          return (const opaqueCMFormatDescription *)result;
        }
        FigSignalErrorAt3();
      }
    }
    LOBYTE(result) = 0;
  }
  return (const opaqueCMFormatDescription *)result;
}

uint64_t sub_215FBD710(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage;
  BOOL v4;
  int v5;
  Boolean keyExistsAndHasValidFormat;

  VTVideoDecoderGetCMBaseObject();
  DerivedStorage = CMBaseObjectGetDerivedStorage();
  *(_QWORD *)(DerivedStorage + 8) = a2;
  FigFormatDescriptionRelease();
  *(_QWORD *)(DerivedStorage + 16) = FigFormatDescriptionRetain();
  *(_QWORD *)(DerivedStorage + 24) = 0;
  keyExistsAndHasValidFormat = 0;
  if (CFPreferencesGetAppBooleanValue(CFSTR("ForceSyncH264SWDecoder"), CFSTR("com.apple.coremedia"), &keyExistsAndHasValidFormat))
  {
    v4 = keyExistsAndHasValidFormat == 0;
  }
  else
  {
    v4 = 1;
  }
  v5 = !v4;
  *(_DWORD *)(DerivedStorage + 1076) = v5;
  return 0;
}

uint64_t sub_215FBD798(uint64_t a1, uint64_t a2, opaqueCMSampleBuffer *a3, uint64_t a4, uint64_t a5, __CVBuffer *a6, uint64_t a7, char a8, int *a9)
{
  uint64_t DerivedStorage;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  OSType PixelFormatType;
  int v20;
  uint64_t v21;
  CMVideoDimensions Dimensions;
  char *v24;
  uint64_t v25;
  char *v26;
  char *BaseAddressOfPlane;
  size_t BytesPerRowOfPlane;
  char *v29;
  uint64_t v30;
  int v31;
  OSType v32;
  uint64_t v33;
  int v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _DWORD v42[7];
  char *v43;
  int v44;
  __int128 v45;
  __int128 v46;
  int v47;
  int v48[3];

  VTVideoDecoderGetCMBaseObject();
  DerivedStorage = CMBaseObjectGetDerivedStorage();
  v48[0] = 0;
  v16 = CVPixelBufferLockBaseAddress(a6, 0);
  if ((_DWORD)v16)
  {
    v17 = v16;
LABEL_17:
    CVPixelBufferUnlockBaseAddress(a6, 0);
    VTTileDecoderSessionEmitDecodedTile();
    return v17;
  }
  if (a9)
    v48[0] = *a9;
  if (!*(_QWORD *)(DerivedStorage + 24))
  {
    v21 = sub_215FBDF18();
    if ((_DWORD)v21)
    {
      v17 = v21;
      goto LABEL_17;
    }
    Dimensions = CMVideoFormatDescriptionGetDimensions(*(CMVideoFormatDescriptionRef *)(DerivedStorage + 16));
    if (*(_DWORD *)(DerivedStorage + 1068) > Dimensions.width || *(_DWORD *)(DerivedStorage + 1072) > Dimensions.height)
    {
      v17 = 4294954387;
      goto LABEL_16;
    }
  }
  BaseAddressOfPlane = (char *)CVPixelBufferGetBaseAddressOfPlane(a6, 0);
  v26 = (char *)CVPixelBufferGetBaseAddressOfPlane(a6, 1uLL);
  BytesPerRowOfPlane = CVPixelBufferGetBytesPerRowOfPlane(a6, 0);
  v18 = CVPixelBufferGetBytesPerRowOfPlane(a6, 1uLL);
  PixelFormatType = CVPixelBufferGetPixelFormatType(a6);
  if ((PixelFormatType | 0x10) != 0x34323076
    || (a7 >= 0 ? (v20 = HIDWORD(a7)) : (v20 = HIDWORD(a7) + 1),
        *(_DWORD *)(DerivedStorage + 1068) > a5 || *(_DWORD *)(DerivedStorage + 1072) > HIDWORD(a5)))
  {
    v17 = 4294954394;
LABEL_16:
    FigSignalErrorAt3();
    goto LABEL_17;
  }
  v24 = &v26[v18 * ((uint64_t)v20 >> 1) + (int)a7];
  if ((a8 & 1) != 0 && !*(_DWORD *)(DerivedStorage + 1076))
  {
    v29 = &BaseAddressOfPlane[BytesPerRowOfPlane * (a7 >> 32) + (int)a7];
    v30 = 0;
    v31 = BytesPerRowOfPlane;
    v32 = PixelFormatType;
    v33 = 0;
    v34 = HIDWORD(a5);
    v35 = 0u;
    v36 = 0u;
    v37 = 0u;
    v38 = 0u;
    v39 = 0u;
    v40 = 0u;
    v41 = 0u;
    memset(v42, 0, sizeof(v42));
    v43 = v24;
    v45 = 0u;
    v46 = 0u;
    v44 = v18;
    v47 = 0;
    v25 = sub_215FBE220(DerivedStorage, 0, a2, a3, a6, &v29, v48);
  }
  else
  {
    v29 = &BaseAddressOfPlane[BytesPerRowOfPlane * (a7 >> 32) + (int)a7];
    v30 = 0;
    v31 = BytesPerRowOfPlane;
    v32 = PixelFormatType;
    v33 = 0;
    v34 = HIDWORD(a5);
    v35 = 0u;
    v36 = 0u;
    v37 = 0u;
    v38 = 0u;
    v39 = 0u;
    v40 = 0u;
    v41 = 0u;
    memset(v42, 0, sizeof(v42));
    v43 = v24;
    v45 = 0u;
    v46 = 0u;
    v44 = v18;
    v47 = 0;
    v25 = sub_215FBE4F8(DerivedStorage, 0, a2, a3, a6, &v29, v48);
  }
  v17 = v25;
  if (a9)
    *a9 = v48[0];
  return v17;
}

void sub_215FBDB24(uint64_t a1)
{
  int v2;
  CFPropertyListRef Extension;
  const void *v4;
  CFTypeID TypeID;
  const CFDictionaryKeyCallBacks *v6;
  const CFDictionaryValueCallBacks *v7;
  __CFDictionary *Mutable;
  __CFArray *v9;
  __CFDictionary *v10;
  const void *v11;
  __CFDictionary *v12;
  CMVideoDimensions Dimensions;
  int v14;
  int v15;
  CFMutableDictionaryRef v16;
  __CFDictionary *v17;
  CFMutableArrayRef v18;
  __CFArray *v19;
  CFNumberRef v20;
  CFNumberRef v21;
  int v22;
  int v23;
  __CFDictionary *v24;
  int valuePtr;

  v2 = 875704422;
  Extension = CMFormatDescriptionGetExtension(*(CMFormatDescriptionRef *)(a1 + 16), (CFStringRef)*MEMORY[0x24BDC0B60]);
  if (!Extension
    || (v4 = Extension, TypeID = CFBooleanGetTypeID(), TypeID != CFGetTypeID(v4))
    || !CFBooleanGetValue((CFBooleanRef)v4))
  {
    v2 = 875704438;
  }
  valuePtr = v2;
  if (*(_DWORD *)(a1 + 44))
  {
    v6 = (const CFDictionaryKeyCallBacks *)MEMORY[0x24BDBD6A0];
    v7 = (const CFDictionaryValueCallBacks *)MEMORY[0x24BDBD6B0];
    Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
    sub_215FBDE54(Mutable, (const void *)*MEMORY[0x24BDC5748], 1630697081);
    v9 = CFArrayCreateMutable(0, 0, MEMORY[0x24BDBD690]);
    v10 = CFDictionaryCreateMutable(0, 0, v6, v7);
    sub_215FBDE54(v10, (const void *)*MEMORY[0x24BDC5728], 2);
    v11 = (const void *)*MEMORY[0x24BDC5718];
    sub_215FBDE54(v10, (const void *)*MEMORY[0x24BDC5718], 32);
    CFArrayAppendValue(v9, v10);
    CFRelease(v10);
    v12 = CFDictionaryCreateMutable(0, 0, v6, v7);
    sub_215FBDE54(v12, v11, 8);
    CFArrayAppendValue(v9, v12);
    CFRelease(v12);
    CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x24BDC5790], v9);
    CFRelease(v9);
    sub_215FBDE54(Mutable, v11, 24);
    CVPixelFormatDescriptionRegisterDescriptionWithPixelFormatType(Mutable, 0x61327679u);
    CFRelease(Mutable);
    valuePtr = 1630697081;
  }
  Dimensions = CMVideoFormatDescriptionGetDimensions(*(CMVideoFormatDescriptionRef *)(a1 + 16));
  v14 = *(_DWORD *)(a1 + 1068);
  v15 = *(_DWORD *)(a1 + 1072);
  v16 = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  if (v16)
  {
    v17 = v16;
    v18 = CFArrayCreateMutable(0, 0, MEMORY[0x24BDBD690]);
    if (v18)
    {
      v19 = v18;
      v20 = CFNumberCreate(0, kCFNumberSInt32Type, &valuePtr);
      if (v20)
      {
        v21 = v20;
        CFArrayAppendValue(v19, v20);
        CFRelease(v21);
        CFDictionaryAddValue(v17, (const void *)*MEMORY[0x24BDC56B8], v19);
        CFRelease(v19);
        sub_215FBDEB4(v17, (const void *)*MEMORY[0x24BDC5708], Dimensions.width);
        sub_215FBDEB4(v17, (const void *)*MEMORY[0x24BDC5650], Dimensions.height);
        v22 = v14 - Dimensions.width;
        v23 = v15 - Dimensions.height;
        if (v22 >= 1)
          sub_215FBDEB4(v17, (const void *)*MEMORY[0x24BDC5628], v22);
        if (v23 >= 1)
          sub_215FBDEB4(v17, (const void *)*MEMORY[0x24BDC5610], v23 & ~(v23 >> 31));
        VTDecoderSessionSetPixelBufferAttributes();
        v24 = v17;
      }
      else
      {
        CFRelease(v17);
        v24 = v19;
      }
      CFRelease(v24);
    }
    else
    {
      CFRelease(v17);
    }
  }
}

void sub_215FBDE54(__CFDictionary *a1, const void *a2, int a3)
{
  CFNumberRef v5;
  int valuePtr;

  valuePtr = a3;
  v5 = CFNumberCreate(0, kCFNumberSInt32Type, &valuePtr);
  CFDictionarySetValue(a1, a2, v5);
  CFRelease(v5);
}

void sub_215FBDEB4(__CFDictionary *a1, const void *a2, int a3)
{
  CFNumberRef v5;
  CFNumberRef v6;
  int valuePtr;

  valuePtr = a3;
  v5 = CFNumberCreate(0, kCFNumberSInt32Type, &valuePtr);
  if (v5)
  {
    v6 = v5;
    CFDictionaryAddValue(a1, a2, v5);
    CFRelease(v6);
  }
}

uint64_t sub_215FBDF18()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  const opaqueCMFormatDescription *v4;
  const void *v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int AppIntegerValue;
  int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  int MachThreadPriorityValue;
  uint64_t v19;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  unint64_t v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  Boolean keyExistsAndHasValidFormat;
  unsigned int v29[16];
  char v30[500];
  unsigned int v31[256];
  unsigned int v32[750];
  unsigned int v33[16];
  unsigned int v34[375];
  uint64_t v35;

  v0 = MEMORY[0x24BDAC7A8]();
  v2 = v1;
  v3 = v0;
  v35 = *MEMORY[0x24BDAC8D0];
  v4 = *(const opaqueCMFormatDescription **)(v0 + 16);
  v5 = *(const void **)(v3 + 1144);
  v27 = 0;
  v26 = 0;
  v21 = 0;
  v22 = xmmword_2160ED0D0;
  v23 = xmmword_2160ED0E0;
  v24 = 0xFFFFFFFF00000002;
  v25 = -1;
  v6 = sub_215FBE874(v4, (int *)(v3 + 40), (_DWORD *)(v3 + 44), v34, v33, &v27, (char *)v32, v31, (_DWORD *)&v26 + 1, v30, (uint64_t)v29, &v26, v3 + 48, v3 + 49, (_DWORD *)(v3 + 1068), (_DWORD *)(v3 + 1072), (_DWORD *)(v3 + 1080), &v21);
  if ((_DWORD)v6)
    goto LABEL_2;
  v7 = v21;
  if ((_DWORD)v21)
    *(_DWORD *)(v3 + 1076) = 1;
  v8 = *(_DWORD *)(v3 + 60);
  if (!v8)
  {
    v9 = *(_DWORD *)(v3 + 1068);
    v10 = *(_DWORD *)(v3 + 1072);
    keyExistsAndHasValidFormat = 0;
    AppIntegerValue = CFPreferencesGetAppIntegerValue(CFSTR("ThreadCountH264SWDecoder"), CFSTR("com.apple.coremedia"), &keyExistsAndHasValidFormat);
    if ((v10 * v9) <= 0x1FE000)
      v12 = 3;
    else
      v12 = 4;
    if (keyExistsAndHasValidFormat)
      v8 = AppIntegerValue;
    else
      v8 = v12;
    *(_DWORD *)(v3 + 60) = v8;
  }
  if (v7)
    v13 = 0;
  else
    v13 = v2;
  if (v13 == 1)
  {
    DWORD2(v22) = -3;
    HIDWORD(v22) = v8;
    *(_QWORD *)&v23 = 0xFFFFFFFF00000001;
    v8 = 1;
  }
  LODWORD(v22) = v8;
  sub_2160C5BA0((_DWORD *)&v21 + 1);
  sub_2160C5BB0((_DWORD *)&v21 + 1);
  v15 = HIDWORD(v26);
  v14 = v27;
  v16 = v26;
  v17 = HIDWORD(v21);
  if (v5)
    CFEqual(v5, (CFTypeRef)*MEMORY[0x24BDBD268]);
  MachThreadPriorityValue = FigThreadGetMachThreadPriorityValue();
  v19 = v13
      ? sub_2160C5F3C((uint64_t *)(v3 + 24), v34, v33, v14, v32, v31, v15, (uint64_t)v30, v29, v16, (unsigned int *)&v22, v17, 0, MachThreadPriorityValue, (uint64_t)sub_215FBEE1C): sub_2160C5F3C((uint64_t *)(v3 + 24), v34, v33,
          v14,
          v32,
          v31,
          v15,
          (uint64_t)v30,
          v29,
          v16,
          (unsigned int *)&v22,
          v17,
          0,
          MachThreadPriorityValue,
          0);
  v6 = v19;
  if ((_DWORD)v19)
LABEL_2:
    FigSignalErrorAt3();
  else
    sub_215FBDB24(v3);
  return v6;
}

uint64_t sub_215FBE220(uint64_t a1, uint64_t a2, uint64_t a3, CMSampleBufferRef sbuf, __CVBuffer *a5, _QWORD *a6, int *a7)
{
  OpaqueCMBlockBuffer *DataBuffer;
  size_t DataLength;
  CFTypeRef v15;
  _BOOL4 v16;
  int v17;
  uint64_t v18;
  char *v19;
  void *v20;
  char *v21;
  int v22;
  uint64_t v23;
  char *dataPointerOut;
  char *v27;
  CMBlockBufferRef theBuffer;

  DataBuffer = CMSampleBufferGetDataBuffer(sbuf);
  DataLength = CMBlockBufferGetDataLength(DataBuffer);
  v27 = 0;
  theBuffer = 0;
  v15 = CMGetAttachment(sbuf, (CFStringRef)*MEMORY[0x24BDC0D00], 0);
  if (v15)
    v16 = CFEqual(v15, (CFTypeRef)*MEMORY[0x24BDBD270]) != 0;
  else
    v16 = 0;
  if (a7)
    v17 = *a7;
  else
    v17 = 0;
  CVPixelBufferRetain(a5);
  if (!sub_215FBF008(a1, sbuf))
  {
    v18 = 0;
    v17 = 2;
    goto LABEL_11;
  }
  dataPointerOut = 0;
  CMBlockBufferCreateWithMemoryBlock(0, 0, DataLength + 16, 0, 0, 0, DataLength, 1u, &theBuffer);
  CMBlockBufferGetDataPointer(theBuffer, 0, 0, 0, &dataPointerOut);
  CMBlockBufferCopyDataBytes(DataBuffer, 0, DataLength, dataPointerOut);
  CMBlockBufferGetDataPointer(theBuffer, 0, 0, 0, &v27);
  if (*(_DWORD *)(a1 + 44))
  {
    v18 = 4294954396;
LABEL_11:
    if (*(_QWORD *)a1)
    {
      VTDecoderSessionEmitDecodedFrame();
    }
    else if (*(_QWORD *)(a1 + 8))
    {
      VTTileDecoderSessionEmitDecodedTile();
    }
    if (theBuffer)
      CFRelease(theBuffer);
    if (a5)
    {
      CVPixelBufferUnlockBaseAddress(a5, 0);
      CVPixelBufferRelease(a5);
    }
    goto LABEL_24;
  }
  v19 = (char *)CFAllocatorAllocate(0, 72, 0);
  v20 = v19;
  *v19 = *(_BYTE *)(a1 + 48);
  v19[1] = *(_BYTE *)(a1 + 49);
  *((_QWORD *)v19 + 1) = *(_QWORD *)a1;
  *((_QWORD *)v19 + 2) = *(_QWORD *)(a1 + 8);
  *((_QWORD *)v19 + 3) = a2;
  *((_QWORD *)v19 + 4) = a3;
  *((_DWORD *)v19 + 10) = v17;
  v21 = v27;
  *((_QWORD *)v19 + 6) = theBuffer;
  *((_QWORD *)v19 + 7) = a5;
  v19[64] = *(_BYTE *)(a1 + 1120);
  *(_WORD *)(v19 + 65) = 0;
  v19[67] = 0;
  a6[25] = v19 + 65;
  a6[26] = v19 + 66;
  a6[27] = v19 + 67;
  if (v16)
    v22 = 7;
  else
    v22 = 0;
  v23 = sub_2160C94D0(0, *(_DWORD *)(a1 + 40), DataLength, 0, (uint64_t)v21, *(int **)(a1 + 24), v22, 0, 0, (uint64_t)a6, (uint64_t)v19);
  v18 = v23;
  if ((_DWORD)v23)
  {
    sub_215FBEE1C(v23, v20);
    FigSignalErrorAt3();
  }
LABEL_24:
  if (a7)
    *a7 = v17;
  return v18;
}

uint64_t sub_215FBE4F8(uint64_t a1, int a2, int a3, CMSampleBufferRef sbuf, __CVBuffer *a5, _QWORD *a6, int *a7)
{
  OpaqueCMBlockBuffer *DataBuffer;
  size_t DataLength;
  CFTypeRef v14;
  _BOOL4 v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  unsigned __int16 v21;
  unsigned __int16 v22;
  const void *v23;
  int v24;
  int v25;
  const void *v26;
  int v27;
  char *dataPointerOut;
  char v29;
  __int16 v30;
  char *v31;
  CMBlockBufferRef theBuffer;

  DataBuffer = CMSampleBufferGetDataBuffer(sbuf);
  DataLength = CMBlockBufferGetDataLength(DataBuffer);
  v31 = 0;
  theBuffer = 0;
  v14 = CMGetAttachment(sbuf, (CFStringRef)*MEMORY[0x24BDC0D00], 0);
  if (v14)
    v15 = CFEqual(v14, (CFTypeRef)*MEMORY[0x24BDBD270]) != 0;
  else
    v15 = 0;
  v30 = 0;
  v29 = 0;
  if (a7)
    v16 = *a7;
  else
    v16 = 0;
  if (!sub_215FBF008(a1, sbuf))
  {
    v17 = 0;
    v16 = 2;
    if (!a5)
      goto LABEL_19;
LABEL_18:
    CVPixelBufferUnlockBaseAddress(a5, 0);
    goto LABEL_19;
  }
  dataPointerOut = 0;
  CMBlockBufferCreateWithMemoryBlock(0, 0, DataLength + 16, 0, 0, 0, DataLength, 1u, &theBuffer);
  CMBlockBufferGetDataPointer(theBuffer, 0, 0, 0, &dataPointerOut);
  CMBlockBufferCopyDataBytes(DataBuffer, 0, DataLength, dataPointerOut);
  CMBlockBufferGetDataPointer(theBuffer, 0, 0, 0, &v31);
  if (*(_DWORD *)(a1 + 44))
  {
    v17 = 4294954396;
    goto LABEL_17;
  }
  a6[25] = (char *)&v30 + 1;
  a6[26] = &v30;
  a6[27] = &v29;
  if (v15)
    v18 = 5;
  else
    v18 = 0;
  v19 = sub_2160C94D0(0, *(_DWORD *)(a1 + 40), DataLength, 0, (uint64_t)v31, *(int **)(a1 + 24), v18, 0, 0, (uint64_t)a6, 0);
  if ((_DWORD)v19)
  {
    v17 = v19;
LABEL_17:
    FigSignalErrorAt3();
    if (!a5)
      goto LABEL_19;
    goto LABEL_18;
  }
  *(_DWORD *)(a1 + 1084) = 0;
  v21 = sub_2160B24EC(*(_QWORD *)(a1 + 24));
  v22 = sub_2160B2514(*(_QWORD *)(a1 + 24));
  v23 = (const void *)sub_2160B2500(*(_QWORD *)(a1 + 24));
  if ((v21 & 0xFFF8) != 0)
    v24 = 8;
  else
    v24 = v21;
  if ((v22 & 0xFFF8) != 0)
    v25 = 8;
  else
    v25 = v22;
  if (v23 && v24)
  {
    memcpy((void *)(a1 + 1088), v23, (2 * v24));
    *(_WORD *)(a1 + 1084) = v24;
  }
  v26 = (const void *)sub_2160B2528(*(_QWORD *)(a1 + 24));
  if (v26 && v25)
  {
    memcpy((void *)(a1 + 1104), v26, (2 * v25));
    *(_WORD *)(a1 + 1086) = v25;
  }
  v27 = HIBYTE(v30) && !*(_BYTE *)(a1 + 1120) && (_BYTE)v30 == 0;
  if (*(_QWORD *)a1)
    sub_215FBEF70(a5, v27);
  v17 = 0;
  if (a5)
    goto LABEL_18;
LABEL_19:
  if (*(_QWORD *)a1)
  {
    VTDecoderSessionEmitDecodedFrame();
  }
  else if (*(_QWORD *)(a1 + 8))
  {
    VTTileDecoderSessionEmitDecodedTile();
  }
  if (theBuffer)
    CFRelease(theBuffer);
  if (a7)
    *a7 = v16;
  return v17;
}

uint64_t sub_215FBE874(const opaqueCMFormatDescription *a1, int *a2, _DWORD *a3, _BYTE *a4, unsigned int *a5, _DWORD *a6, char *a7, unsigned int *a8, _DWORD *a9, char *a10, uint64_t a11, _DWORD *a12, uint64_t a13, uint64_t a14, _DWORD *a15, _DWORD *a16, _DWORD *a17, _DWORD *a18)
{
  CFPropertyListRef Extension;
  const void *v23;
  CFTypeID TypeID;
  const void *Value;
  const void *ValueAtIndex;
  CFTypeID v27;
  CFTypeID v28;
  const UInt8 *BytePtr;
  unint64_t Length;
  int v31;
  int v32;
  UInt8 v33;
  uint64_t v34;
  unint64_t v36;
  unsigned int *v37;
  _BYTE *v38;
  size_t v39;
  unint64_t v40;
  unsigned int v41;
  int v42;
  BOOL v43;
  BOOL v44;
  int v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  size_t v50;
  unint64_t v51;
  uint64_t v52;
  unsigned int v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  char *v57;
  unint64_t v58;
  size_t v59;
  unint64_t v60;
  uint64_t v61;
  unsigned int v62;
  int v63;
  UInt8 v64;
  int v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  int v69;
  const UInt8 *v70;
  BOOL v74;

  *a15 = 0;
  *a16 = 0;
  *a17 = 0;
  Extension = CMFormatDescriptionGetExtension(a1, (CFStringRef)*MEMORY[0x24BDC0B80]);
  if (!Extension
    || (v23 = Extension, TypeID = CFDictionaryGetTypeID(), TypeID != CFGetTypeID(v23))
    || (Value = CFDictionaryGetValue((CFDictionaryRef)v23, CFSTR("avcC"))) == 0
    || (ValueAtIndex = Value, v27 = CFArrayGetTypeID(), v27 == CFGetTypeID(ValueAtIndex))
    && (ValueAtIndex = CFArrayGetValueAtIndex((CFArrayRef)ValueAtIndex, 0)) == 0
    || (v28 = CFDataGetTypeID(), v28 != CFGetTypeID(ValueAtIndex)))
  {
    LOWORD(v31) = FigSignalErrorAt3();
    return (__int16)v31;
  }
  BytePtr = CFDataGetBytePtr((CFDataRef)ValueAtIndex);
  Length = CFDataGetLength((CFDataRef)ValueAtIndex);
  LOWORD(v31) = -50;
  if (a4 && a7)
  {
    v74 = 0;
    if (Length - 3001 < 0xFFFFFFFFFFFFF44ELL)
      goto LABEL_11;
    v32 = BytePtr[1];
    v33 = BytePtr[4];
    v34 = BytePtr[5] & 0x1F;
    *a6 = v34;
    if (v34 > 0x10)
      goto LABEL_11;
    v64 = v33;
    v65 = v32;
    v70 = BytePtr;
    v67 = Length;
    if ((_DWORD)v34)
    {
      v66 = 0;
      v69 = 0;
      v36 = 6;
      v37 = a5;
      v38 = a4;
      while (1)
      {
        if (v36 + 1 >= Length)
          goto LABEL_52;
        v39 = BytePtr[v36 + 1] | (BytePtr[v36] << 8);
        *v37 = v39;
        if (v39 > 0x1F4 || (int)v39 + (int)v38 - (int)a4 > 1498)
          goto LABEL_11;
        v40 = v36 + 2;
        if (v36 + 2 + v39 > Length)
          goto LABEL_52;
        memcpy(v38, &v70[v40], v39);
        v68 = *v37;
        v41 = sub_215FBEEFC((uint64_t)v38, *v37);
        *v37 = v41;
        v38[v41] = 0;
        v42 = *v38 & 0x1F;
        if (v42 != 7)
          goto LABEL_25;
        Length = v67;
        if (!BYTE4(v66))
          break;
        ++BYTE4(v66);
        v42 = 7;
LABEL_26:
        v36 = v40 + v68;
        v44 = v42 == 13;
        v45 = v69;
        if (v44)
          v45 = v69 + 1;
        v69 = v45;
        v46 = *v37++;
        v38 += v46;
        --v34;
        BytePtr = v70;
        if (!v34)
          goto LABEL_31;
      }
      v31 = sub_2160BE74C();
      v43 = v74;
      v74 = v74;
      if (v31)
        goto LABEL_61;
      LOBYTE(v66) = v43;
      v42 = *v38 & 0x1F;
      BYTE4(v66) = 1;
LABEL_25:
      Length = v67;
      goto LABEL_26;
    }
    v66 = 0;
    LOBYTE(v69) = 0;
    v36 = 6;
LABEL_31:
    if (v36 >= Length)
    {
LABEL_52:
      LOWORD(v31) = -12909;
      return (__int16)v31;
    }
    v47 = BytePtr[v36];
    *a9 = v47;
    v48 = v36 + 1;
    if ((_DWORD)v47)
    {
      v49 = a7;
      while (v48 + 1 < Length)
      {
        v50 = v70[v48 + 1] | (v70[v48] << 8);
        *a8 = v50;
        if (v50 > 0xBB8 || (int)v50 + (int)v49 - (int)a7 > 3000)
          goto LABEL_11;
        v51 = v48 + 2;
        if (v51 + v50 > Length)
          goto LABEL_52;
        memcpy(v49, &v70[v51], v50);
        v52 = *a8;
        v48 = v51 + v52;
        v53 = sub_215FBEEFC((uint64_t)v49, v52);
        Length = v67;
        *a8++ = v53;
        v49 += v53;
        if (!--v47)
          goto LABEL_39;
      }
      goto LABEL_52;
    }
LABEL_39:
    LOBYTE(v54) = 0;
    *a12 = 0;
    if ((v65 - 100) <= 0x2C && ((1 << (v65 - 100)) & 0x100000400401) != 0)
    {
      if (v48 + 3 >= Length)
      {
        LOBYTE(v54) = 0;
      }
      else
      {
        v54 = v70[v48 + 3];
        *a12 = v54;
        if (v54 > 0x10)
        {
LABEL_11:
          LOWORD(v31) = -12910;
          return (__int16)v31;
        }
        if ((_DWORD)v54)
        {
          v55 = v48 + 5;
          if (v48 + 5 < Length)
          {
            v56 = 0;
            v57 = a10;
            v58 = v48 + 4;
            while (1)
            {
              v59 = v70[v55] | (v70[v58] << 8);
              *(_DWORD *)(a11 + 4 * v56) = v59;
              if (v59 > 0x1F4 || (int)v59 + (int)v57 - (int)a10 > 500)
                goto LABEL_11;
              v60 = v58 + 2;
              if (v58 + 2 + v59 > Length)
                goto LABEL_52;
              memcpy(v57, &v70[v60], v59);
              v61 = *(unsigned int *)(a11 + 4 * v56);
              v62 = sub_215FBEEFC((uint64_t)v57, *(_DWORD *)(a11 + 4 * v56));
              *(_DWORD *)(a11 + 4 * v56++) = v62;
              if (v56 < v54)
              {
                v58 = v60 + v61;
                v57 += v62;
                v55 = v60 + v61 + 1;
                Length = v67;
                if (v55 < v67)
                  continue;
              }
              break;
            }
          }
        }
      }
    }
    if (BYTE4(v66) >= 2u && (_BYTE)v66
      || BYTE4(v66) >= 2u && (_BYTE)v54 + (_BYTE)v69
      || v66 + (v54 + v69) > 1)
    {
      goto LABEL_11;
    }
    if (!(_BYTE)v66)
      goto LABEL_62;
    LOWORD(v31) = sub_2160BE74C();
LABEL_61:
    if (!(_WORD)v31)
    {
LABEL_62:
      *a15 = 0;
      *a16 = 0;
      *a17 = 0;
      *a3 = 0;
      *a18 = 0;
      switch(v64 & 3)
      {
        case 3:
          LOWORD(v31) = 0;
          v63 = 5;
          break;
        case 1:
          LOWORD(v31) = 0;
          v63 = 4;
          break;
        case 0:
          LOWORD(v31) = 0;
          v63 = 3;
          break;
        default:
          LOWORD(v31) = -1;
          return (__int16)v31;
      }
      *a2 = v63;
    }
  }
  return (__int16)v31;
}

void sub_215FBEE1C(int a1, void *ptr)
{
  _BOOL4 v3;
  __CVBuffer *v4;
  const void *v5;
  __CVBuffer *v6;

  if (*((_BYTE *)ptr + 65) && !*((_BYTE *)ptr + 64))
  {
    v3 = *((_BYTE *)ptr + 66) == 0;
    if (a1)
      goto LABEL_8;
  }
  else
  {
    v3 = 0;
    if (a1)
      goto LABEL_8;
  }
  if (*((_QWORD *)ptr + 1))
    sub_215FBEF70(*((__CVBuffer **)ptr + 7), v3);
LABEL_8:
  v4 = (__CVBuffer *)*((_QWORD *)ptr + 7);
  if (v4)
    CVPixelBufferUnlockBaseAddress(v4, 0);
  if (*((_QWORD *)ptr + 1))
  {
    VTDecoderSessionEmitDecodedFrame();
  }
  else if (*((_QWORD *)ptr + 2))
  {
    VTTileDecoderSessionEmitDecodedTile();
  }
  v5 = (const void *)*((_QWORD *)ptr + 6);
  if (v5)
    CFRelease(v5);
  v6 = (__CVBuffer *)*((_QWORD *)ptr + 7);
  if (v6)
    CVPixelBufferRelease(v6);
  CFAllocatorDeallocate(0, ptr);
}

uint64_t sub_215FBEEFC(uint64_t a1, unsigned int a2)
{
  int v3;
  uint64_t result;
  unint64_t i;

  if (!a2)
    return 0;
  v3 = 0;
  result = 0;
  for (i = 0; i < a2; ++i)
  {
    if (v3 == 2)
    {
      if (*(_BYTE *)(a1 + i) == 3)
      {
        if (++i >= a2)
          return result;
        v3 = 0;
      }
      else
      {
        v3 = 2;
      }
    }
    *(_BYTE *)(a1 + result) = *(_BYTE *)(a1 + i);
    if (*(_BYTE *)(a1 + i))
      v3 = 0;
    else
      ++v3;
    result = (result + 1);
  }
  return result;
}

void sub_215FBEF70(__CVBuffer *a1, int a2)
{
  int v4;
  CFNumberRef v5;
  int valuePtr;

  CVBufferSetAttachment(a1, (CFStringRef)*MEMORY[0x24BDC5470], (CFTypeRef)*MEMORY[0x24BDC5478], kCVAttachmentMode_ShouldPropagate);
  if (a2)
    v4 = 2;
  else
    v4 = 1;
  valuePtr = v4;
  v5 = CFNumberCreate(0, kCFNumberSInt32Type, &valuePtr);
  CVBufferSetAttachment(a1, (CFStringRef)*MEMORY[0x24BDC54E0], v5, kCVAttachmentMode_ShouldPropagate);
  CFRelease(v5);
}

uint64_t sub_215FBF008(uint64_t a1, CMSampleBufferRef sbuf)
{
  const __CFArray *SampleAttachmentsArray;
  const __CFDictionary *ValueAtIndex;
  const __CFDictionary *v5;
  const void *Value;
  const void *v7;
  const void *v8;
  int v9;
  const void **v10;
  const void *v11;
  const void *v12;
  uint64_t result;
  double v14;
  unsigned int v15;
  double v16;
  const void *v17;
  BOOL v21;

  SampleAttachmentsArray = CMSampleBufferGetSampleAttachmentsArray(sbuf, 0);
  if (!SampleAttachmentsArray
    || (ValueAtIndex = (const __CFDictionary *)CFArrayGetValueAtIndex(SampleAttachmentsArray, 0)) == 0)
  {
    *(_BYTE *)(a1 + 36) = 0;
    return 1;
  }
  v5 = ValueAtIndex;
  Value = CFDictionaryGetValue(ValueAtIndex, (const void *)*MEMORY[0x24BDC0CB8]);
  v7 = CFDictionaryGetValue(v5, (const void *)*MEMORY[0x24BDC0CC8]);
  v8 = CFDictionaryGetValue(v5, (const void *)*MEMORY[0x24BDC0CD0]);
  v9 = *(_DWORD *)(a1 + 32);
  v10 = (const void **)MEMORY[0x24BDBD270];
  if (v9 == 3)
  {
    if (v7)
    {
      v11 = (const void *)*MEMORY[0x24BDBD268];
      v12 = v7;
LABEL_11:
      if (!CFEqual(v12, v11))
        goto LABEL_16;
    }
  }
  else if (v9 == 2)
  {
    if (v7 && !CFEqual(v7, (CFTypeRef)*MEMORY[0x24BDBD268]))
    {
      if (!v8)
        goto LABEL_16;
      v11 = *v10;
      v12 = v8;
      goto LABEL_11;
    }
  }
  else if (v9 == 1 && Value)
  {
    v11 = (const void *)*MEMORY[0x24BDBD270];
    v12 = Value;
    goto LABEL_11;
  }
  v14 = *(double *)(a1 + 1128) + *(double *)(a1 + 1136);
  *(double *)(a1 + 1136) = v14;
  if (v14 >= 1.0)
  {
    v16 = v14 + -1.0;
    *(double *)(a1 + 1136) = v16;
    if (v16 >= 1.0)
      *(_QWORD *)(a1 + 1136) = 0x3FF0000000000000;
    v15 = 1;
    goto LABEL_20;
  }
LABEL_16:
  v15 = 0;
LABEL_20:
  v17 = *v10;
  if (v8 == *v10 || v7 != v17 || *(_BYTE *)(a1 + 36) == 0)
    result = v15;
  else
    result = 0;
  if (v7 != v17 || v8 == v17)
  {
    *(_BYTE *)(a1 + 36) = 0;
  }
  else
  {
    if ((_DWORD)result)
      v21 = 1;
    else
      v21 = Value == (const void *)*MEMORY[0x24BDBD268];
    if (!v21)
    {
      result = 0;
      *(_BYTE *)(a1 + 36) = 1;
    }
  }
  return result;
}

void sub_215FBF1B8()
{
  void *v0;
  uint64_t v1;
  const __CFDictionary *v2;
  const __CFAllocator *v3;
  CFArrayRef v4;
  uint64_t i;
  const void *v6;
  CFDictionaryRef v7;
  CFDictionaryRef v8;
  CFDictionaryRef v9;
  CFDictionaryRef v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  CFArrayRef v16;
  void *v17;
  CFDictionaryRef v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  void *keys;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  void *values[5];

  values[4] = *(void **)MEMORY[0x24BDAC8D0];
  v30 = 0u;
  v29 = 0u;
  v28 = 0u;
  v27 = 0u;
  v26 = 0u;
  v23 = 0u;
  v22 = 0u;
  v21 = 0u;
  v20 = 0u;
  v19 = 0u;
  v0 = (void *)*MEMORY[0x24BDF9850];
  v1 = *MEMORY[0x24BDF9800];
  keys = (void *)*MEMORY[0x24BDF9840];
  v25 = v1;
  v2 = (const __CFDictionary *)*MEMORY[0x24BDF9810];
  v17 = v0;
  v18 = v2;
  values[0] = sub_215FBF5A4((void *)*MEMORY[0x24BDF9470]);
  values[1] = sub_215FBF5A4((void *)*MEMORY[0x24BDF9488]);
  values[2] = sub_215FBF5A4((void *)*MEMORY[0x24BDF9478]);
  values[3] = sub_215FBF5A4((void *)*MEMORY[0x24BDF9480]);
  v3 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  v4 = CFArrayCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], (const void **)values, 4, MEMORY[0x24BDBD690]);
  if (!v4)
    FigSignalErrorAt3();
  for (i = 0; i != 4; ++i)
  {
    v6 = values[i];
    if (v6)
      CFRelease(v6);
  }
  if (!v4)
  {
    FigSignalErrorAt3();
    return;
  }
  *(_QWORD *)&v26 = *MEMORY[0x24BDF9828];
  *(_QWORD *)&v19 = v4;
  v7 = CFDictionaryCreate(v3, (const void **)&keys, (const void **)&v17, 3, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  if (!v7)
  {
    FigSignalErrorAt3();
    v16 = v4;
LABEL_17:
    CFRelease(v16);
    return;
  }
  v8 = v7;
  v9 = CFDictionaryCreate(v3, 0, 0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  v10 = v9;
  if (!v9)
    goto LABEL_14;
  v11 = *MEMORY[0x24BDF9438];
  keys = (void *)*MEMORY[0x24BDF9420];
  v25 = v11;
  v17 = v8;
  v18 = v9;
  v12 = *MEMORY[0x24BDF9460];
  *(_QWORD *)&v26 = *MEMORY[0x24BDF9448];
  *((_QWORD *)&v26 + 1) = v12;
  *(_QWORD *)&v19 = v9;
  *((_QWORD *)&v19 + 1) = v9;
  v13 = *MEMORY[0x24BDF9400];
  *(_QWORD *)&v27 = *MEMORY[0x24BDF9428];
  *((_QWORD *)&v27 + 1) = v13;
  *(_QWORD *)&v20 = v9;
  *((_QWORD *)&v20 + 1) = v9;
  v14 = *MEMORY[0x24BDF9450];
  *(_QWORD *)&v28 = *MEMORY[0x24BDF9408];
  *((_QWORD *)&v28 + 1) = v14;
  *(_QWORD *)&v21 = v9;
  *((_QWORD *)&v21 + 1) = v9;
  v15 = *MEMORY[0x24BDF9430];
  *(_QWORD *)&v29 = CFSTR("NegotiationDetails");
  *((_QWORD *)&v29 + 1) = v15;
  *(_QWORD *)&v22 = v9;
  *((_QWORD *)&v22 + 1) = v9;
  qword_254E15F98 = (uint64_t)CFDictionaryCreate(v3, (const void **)&keys, (const void **)&v17, 10, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  if (!qword_254E15F98)
LABEL_14:
    FigSignalErrorAt3();
  CFRelease(v4);
  CFRelease(v8);
  if (v10)
  {
    v16 = v10;
    goto LABEL_17;
  }
}

CFDictionaryRef sub_215FBF5A4(void *a1)
{
  CFDictionaryRef v1;
  void *values;
  void *keys;

  keys = (void *)*MEMORY[0x24BDF9420];
  values = a1;
  v1 = CFDictionaryCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], (const void **)&keys, (const void **)&values, 1, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  if (!v1)
    FigSignalErrorAt3();
  return v1;
}

uint32x2_t sub_215FBF660(int16x8_t *a1, _DWORD *a2, _DWORD *a3)
{
  int16x8_t v3;
  int16x8_t v4;
  int16x8_t v5;
  int16x8_t v6;
  int16x8_t v7;
  int16x8_t v8;
  int16x8_t v9;
  int16x8_t v10;
  int16x8_t v11;
  int16x8_t v12;
  int16x8_t v13;
  int16x8_t v14;
  int16x8_t v15;
  int16x8_t v16;
  int16x8_t v17;
  int32x4_t v18;
  int32x4_t v19;
  int32x4_t v20;
  int32x4_t v21;
  int16x8_t v22;
  uint32x2_t result;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = vaddq_s16(v3, *a1);
  v7 = vsubq_s16(*a1, v3);
  v8 = vaddq_s16(v5, v4);
  v9 = vsubq_s16(v4, v5);
  v10 = vaddq_s16(v8, v6);
  v11 = vsubq_s16(v6, v8);
  v12 = vaddq_s16(v9, v7);
  v13 = vsubq_s16(v7, v9);
  v14 = vtrn1q_s16(v10, v12);
  v15 = vtrn2q_s16(v10, v12);
  v16 = vtrn1q_s16(v11, v13);
  v17 = vtrn2q_s16(v11, v13);
  v18 = (int32x4_t)vaddq_s16(v15, v14);
  v19 = (int32x4_t)vsubq_s16(v14, v15);
  v20 = (int32x4_t)vaddq_s16(v17, v16);
  v21 = (int32x4_t)vsubq_s16(v16, v17);
  v22 = vaddq_s16((int16x8_t)vmaxq_u16((uint16x8_t)vabsq_s16((int16x8_t)vtrn1q_s32(v19, v21)), (uint16x8_t)vabsq_s16((int16x8_t)vtrn2q_s32(v19, v21))), (int16x8_t)vmaxq_u16((uint16x8_t)vabsq_s16((int16x8_t)vtrn1q_s32(v18, v20)), (uint16x8_t)vabsq_s16((int16x8_t)vtrn2q_s32(v18, v20))));
  result = vpaddl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v22, v22));
  *a2 = result.i32[0];
  *a3 = result.i32[1];
  return result;
}

uint64_t sub_215FBF6E8(uint8x8_t *a1, int a2, uint8x8_t *a3, int a4)
{
  return sub_215FBF6F0(a1, a2, a3, a4, 16);
}

uint64_t sub_215FBF6F0(uint8x8_t *a1, int a2, uint8x8_t *a3, int a4, int a5)
{
  int v5;
  int32x4_t v6;
  int32x4_t v7;
  uint8x16_t v8;
  uint8x16_t *v9;
  uint8x16_t v10;
  uint8x8_t *v11;
  uint8x16_t v12;
  uint8x16_t *v13;
  uint8x16_t v14;
  uint8x8_t *v15;
  int16x8_t v16;
  int16x8_t v17;
  int16x8_t v18;
  int16x8_t v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int32x4_t v36;
  int32x4_t v37;
  int32x4_t v38;
  int32x4_t v39;
  uint16x8_t v40;
  int16x8_t v41;
  int16x8_t v42;
  int16x8_t v43;
  int16x8_t v44;
  int16x8_t v45;
  int16x8_t v46;
  int16x8_t v47;
  int16x8_t v48;
  int16x8_t v49;
  int16x8_t v50;
  int16x8_t v51;
  int16x8_t v52;
  int32x4_t v53;
  int32x4_t v54;
  int32x4_t v55;
  int32x4_t v56;
  uint16x8_t v57;

  v5 = a5 + 4;
  v6 = 0uLL;
  v7 = 0uLL;
  do
  {
    v8 = *(uint8x16_t *)&a1->i8[a2];
    v9 = (uint8x16_t *)((char *)a1 + a2 + a2);
    v10 = *v9;
    v11 = (uint8x8_t *)&v9->i8[a2];
    v12 = *(uint8x16_t *)&a3->i8[a4];
    v13 = (uint8x16_t *)((char *)a3 + a4 + a4);
    v14 = *v13;
    v15 = (uint8x8_t *)&v13->i8[a4];
    v16 = (int16x8_t)vsubl_u8(*a1, *a3);
    v17 = (int16x8_t)vsubl_u8(*(uint8x8_t *)v8.i8, *(uint8x8_t *)v12.i8);
    v18 = (int16x8_t)vsubl_u8(*(uint8x8_t *)v10.i8, *(uint8x8_t *)v14.i8);
    v19 = (int16x8_t)vsubl_u8(*v11, *v15);
    v20 = (int16x8_t)vsubl_high_u8(*(uint8x16_t *)a1->i8, *(uint8x16_t *)a3->i8);
    v21 = (int16x8_t)vsubl_high_u8(v8, v12);
    v22 = (int16x8_t)vsubl_high_u8(v10, v14);
    v23 = (int16x8_t)vsubl_high_u8(*(uint8x16_t *)v11->i8, *(uint8x16_t *)v15->i8);
    v24 = vaddq_s16(v17, v16);
    v25 = vsubq_s16(v16, v17);
    v26 = vaddq_s16(v19, v18);
    v27 = vsubq_s16(v18, v19);
    v28 = vaddq_s16(v26, v24);
    v29 = vsubq_s16(v24, v26);
    v30 = vaddq_s16(v27, v25);
    v31 = vsubq_s16(v25, v27);
    v32 = vtrn1q_s16(v28, v30);
    v33 = vtrn2q_s16(v28, v30);
    v34 = vtrn1q_s16(v29, v31);
    v35 = vtrn2q_s16(v29, v31);
    v36 = (int32x4_t)vaddq_s16(v33, v32);
    v37 = (int32x4_t)vsubq_s16(v32, v33);
    v38 = (int32x4_t)vaddq_s16(v35, v34);
    v39 = (int32x4_t)vsubq_s16(v34, v35);
    v40 = (uint16x8_t)vaddq_s16((int16x8_t)vmaxq_u16((uint16x8_t)vabsq_s16((int16x8_t)vtrn1q_s32(v37, v39)), (uint16x8_t)vabsq_s16((int16x8_t)vtrn2q_s32(v37, v39))), (int16x8_t)vmaxq_u16((uint16x8_t)vabsq_s16((int16x8_t)vtrn1q_s32(v36, v38)), (uint16x8_t)vabsq_s16((int16x8_t)vtrn2q_s32(v36, v38))));
    v41 = vaddq_s16(v21, v20);
    v42 = vsubq_s16(v20, v21);
    v43 = vaddq_s16(v23, v22);
    v44 = vsubq_s16(v22, v23);
    v45 = vaddq_s16(v43, v41);
    v46 = vsubq_s16(v41, v43);
    v47 = vaddq_s16(v44, v42);
    v48 = vsubq_s16(v42, v44);
    v49 = vtrn1q_s16(v45, v47);
    v50 = vtrn2q_s16(v45, v47);
    v51 = vtrn1q_s16(v46, v48);
    v52 = vtrn2q_s16(v46, v48);
    v53 = (int32x4_t)vaddq_s16(v50, v49);
    v54 = (int32x4_t)vsubq_s16(v49, v50);
    v55 = (int32x4_t)vaddq_s16(v52, v51);
    v56 = (int32x4_t)vsubq_s16(v51, v52);
    v57 = (uint16x8_t)vaddq_s16((int16x8_t)vmaxq_u16((uint16x8_t)vabsq_s16((int16x8_t)vtrn1q_s32(v54, v56)), (uint16x8_t)vabsq_s16((int16x8_t)vtrn2q_s32(v54, v56))), (int16x8_t)vmaxq_u16((uint16x8_t)vabsq_s16((int16x8_t)vtrn1q_s32(v53, v55)), (uint16x8_t)vabsq_s16((int16x8_t)vtrn2q_s32(v53, v55))));
    v6 = (int32x4_t)vaddw_high_u16(vaddw_u16((uint32x4_t)v6, *(uint16x4_t *)v40.i8), v40);
    v7 = (int32x4_t)vaddw_high_u16(vaddw_u16((uint32x4_t)v7, *(uint16x4_t *)v57.i8), v57);
    v5 -= 4;
    a1 = (uint8x8_t *)((char *)v11 + a2);
    a3 = (uint8x8_t *)((char *)v15 + a4);
  }
  while (v5 > 4);
  return vaddvq_s32(vaddq_s32(v7, v6));
}

uint64_t sub_215FBF868(uint8x8_t *a1, int a2, uint8x8_t *a3, int a4)
{
  return sub_215FBF6F0(a1, a2, a3, a4, 8);
}

uint64_t sub_215FBF870(uint8x8_t *a1, int a2, uint8x8_t *a3, int a4)
{
  return sub_215FBF878(a1, a2, a3, a4, 16);
}

uint64_t sub_215FBF878(uint8x8_t *a1, int a2, uint8x8_t *a3, int a4, int a5)
{
  int v5;
  int32x4_t v6;
  int32x4_t v7;
  uint8x8_t *v8;
  uint8x8_t v9;
  uint8x8_t *v10;
  uint8x8_t *v11;
  uint8x8_t v12;
  uint8x8_t *v13;
  int16x8_t v14;
  int16x8_t v15;
  int16x8_t v16;
  int16x8_t v17;
  int16x8_t v18;
  int16x8_t v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int32x4_t v30;
  int32x4_t v31;
  int32x4_t v32;
  int32x4_t v33;
  uint16x8_t v34;

  v5 = a5 + 4;
  v6 = 0uLL;
  v7 = 0uLL;
  do
  {
    v8 = (uint8x8_t *)((char *)a1 + a2 + a2);
    v9 = *v8;
    v10 = (uint8x8_t *)((char *)v8 + a2);
    v11 = (uint8x8_t *)((char *)a3 + a4 + a4);
    v12 = *v11;
    v13 = (uint8x8_t *)((char *)v11 + a4);
    v14 = (int16x8_t)vsubl_u8(*a1, *a3);
    v15 = (int16x8_t)vsubl_u8(*(uint8x8_t *)((char *)a1 + a2), *(uint8x8_t *)((char *)a3 + a4));
    v16 = (int16x8_t)vsubl_u8(v9, v12);
    v17 = (int16x8_t)vsubl_u8(*v10, *v13);
    v18 = vaddq_s16(v15, v14);
    v19 = vsubq_s16(v14, v15);
    v20 = vaddq_s16(v17, v16);
    v21 = vsubq_s16(v16, v17);
    v22 = vaddq_s16(v20, v18);
    v23 = vsubq_s16(v18, v20);
    v24 = vaddq_s16(v21, v19);
    v25 = vsubq_s16(v19, v21);
    v26 = vtrn1q_s16(v22, v24);
    v27 = vtrn2q_s16(v22, v24);
    v28 = vtrn1q_s16(v23, v25);
    v29 = vtrn2q_s16(v23, v25);
    v30 = (int32x4_t)vaddq_s16(v27, v26);
    v31 = (int32x4_t)vsubq_s16(v26, v27);
    v32 = (int32x4_t)vaddq_s16(v29, v28);
    v33 = (int32x4_t)vsubq_s16(v28, v29);
    v34 = (uint16x8_t)vaddq_s16((int16x8_t)vmaxq_u16((uint16x8_t)vabsq_s16((int16x8_t)vtrn1q_s32(v31, v33)), (uint16x8_t)vabsq_s16((int16x8_t)vtrn2q_s32(v31, v33))), (int16x8_t)vmaxq_u16((uint16x8_t)vabsq_s16((int16x8_t)vtrn1q_s32(v30, v32)), (uint16x8_t)vabsq_s16((int16x8_t)vtrn2q_s32(v30, v32))));
    v7 = (int32x4_t)vaddw_u16((uint32x4_t)v7, *(uint16x4_t *)v34.i8);
    v6 = (int32x4_t)vaddw_high_u16((uint32x4_t)v6, v34);
    v5 -= 4;
    a1 = (uint8x8_t *)((char *)v10 + a2);
    a3 = (uint8x8_t *)((char *)v13 + a4);
  }
  while (v5 > 4);
  return vaddvq_s32(vaddq_s32(v7, v6));
}

uint64_t sub_215FBF96C(uint8x8_t *a1, int a2, uint8x8_t *a3, int a4)
{
  return sub_215FBF878(a1, a2, a3, a4, 8);
}

uint64_t sub_215FBF974(uint8x8_t *a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  return sub_215FBF97C(a1, a2, a3, a4, a5, 16);
}

uint64_t sub_215FBF97C(uint8x8_t *a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v6;
  int32x4_t v7;
  int32x4_t v8;
  int v9;
  uint8x16_t v10;
  uint8x16_t *v11;
  uint8x16_t v12;
  uint8x8_t *v13;
  uint8x16_t *v14;
  uint8x16_t v15;
  uint8x16_t *v16;
  uint8x16_t *v17;
  uint8x16_t v18;
  uint8x16_t *v19;
  uint8x16_t v20;
  uint8x16_t v21;
  uint8x16_t v22;
  uint8x16_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int16x8_t v39;
  int16x8_t v40;
  int16x8_t v41;
  int16x8_t v42;
  int16x8_t v43;
  int32x4_t v44;
  int32x4_t v45;
  int32x4_t v46;
  int32x4_t v47;
  uint16x8_t v48;
  int16x8_t v49;
  int16x8_t v50;
  int16x8_t v51;
  int16x8_t v52;
  int16x8_t v53;
  int16x8_t v54;
  int16x8_t v55;
  int16x8_t v56;
  int16x8_t v57;
  int16x8_t v58;
  int16x8_t v59;
  int16x8_t v60;
  int32x4_t v61;
  int32x4_t v62;
  int32x4_t v63;
  int32x4_t v64;
  uint16x8_t v65;

  v6 = 0;
  v7 = 0uLL;
  v8 = 0uLL;
  v9 = a6 + 4;
  do
  {
    v10 = *(uint8x16_t *)&a1->i8[a2];
    v11 = (uint8x16_t *)((char *)a1 + a2 + a2);
    v12 = *v11;
    v13 = (uint8x8_t *)&v11->i8[a2];
    v14 = (uint8x16_t *)(a3 + v6 + a5);
    v15 = *v14;
    v16 = (uint8x16_t *)((char *)v14 + a5);
    v17 = (uint8x16_t *)(a4 + v6 + a5);
    v18 = *v17;
    v19 = (uint8x16_t *)((char *)v17 + a5);
    v20 = vrhaddq_u8(*(uint8x16_t *)(a3 + v6), *(uint8x16_t *)(a4 + v6));
    v21 = vrhaddq_u8(v15, v18);
    v22 = vrhaddq_u8(*v16, *v19);
    v23 = vrhaddq_u8(*(uint8x16_t *)((char *)v16 + a5), *(uint8x16_t *)((char *)v19 + a5));
    v24 = (int16x8_t)vsubl_u8(*a1, *(uint8x8_t *)v20.i8);
    v25 = (int16x8_t)vsubl_u8(*(uint8x8_t *)v10.i8, *(uint8x8_t *)v21.i8);
    v26 = (int16x8_t)vsubl_u8(*(uint8x8_t *)v12.i8, *(uint8x8_t *)v22.i8);
    v27 = (int16x8_t)vsubl_u8(*v13, *(uint8x8_t *)v23.i8);
    v28 = (int16x8_t)vsubl_high_u8(*(uint8x16_t *)a1->i8, v20);
    v29 = (int16x8_t)vsubl_high_u8(v10, v21);
    v30 = (int16x8_t)vsubl_high_u8(v12, v22);
    v31 = (int16x8_t)vsubl_high_u8(*(uint8x16_t *)v13->i8, v23);
    v32 = vaddq_s16(v25, v24);
    v33 = vsubq_s16(v24, v25);
    v34 = vaddq_s16(v27, v26);
    v35 = vsubq_s16(v26, v27);
    v36 = vaddq_s16(v34, v32);
    v37 = vsubq_s16(v32, v34);
    v38 = vaddq_s16(v35, v33);
    v39 = vsubq_s16(v33, v35);
    v40 = vtrn1q_s16(v36, v38);
    v41 = vtrn2q_s16(v36, v38);
    v42 = vtrn1q_s16(v37, v39);
    v43 = vtrn2q_s16(v37, v39);
    v44 = (int32x4_t)vaddq_s16(v41, v40);
    v45 = (int32x4_t)vsubq_s16(v40, v41);
    v46 = (int32x4_t)vaddq_s16(v43, v42);
    v47 = (int32x4_t)vsubq_s16(v42, v43);
    v48 = (uint16x8_t)vaddq_s16((int16x8_t)vmaxq_u16((uint16x8_t)vabsq_s16((int16x8_t)vtrn1q_s32(v45, v47)), (uint16x8_t)vabsq_s16((int16x8_t)vtrn2q_s32(v45, v47))), (int16x8_t)vmaxq_u16((uint16x8_t)vabsq_s16((int16x8_t)vtrn1q_s32(v44, v46)), (uint16x8_t)vabsq_s16((int16x8_t)vtrn2q_s32(v44, v46))));
    v49 = vaddq_s16(v29, v28);
    v50 = vsubq_s16(v28, v29);
    v51 = vaddq_s16(v31, v30);
    v52 = vsubq_s16(v30, v31);
    v53 = vaddq_s16(v51, v49);
    v54 = vsubq_s16(v49, v51);
    v55 = vaddq_s16(v52, v50);
    v56 = vsubq_s16(v50, v52);
    v57 = vtrn1q_s16(v53, v55);
    v58 = vtrn2q_s16(v53, v55);
    v59 = vtrn1q_s16(v54, v56);
    v60 = vtrn2q_s16(v54, v56);
    v61 = (int32x4_t)vaddq_s16(v58, v57);
    v62 = (int32x4_t)vsubq_s16(v57, v58);
    v63 = (int32x4_t)vaddq_s16(v60, v59);
    v64 = (int32x4_t)vsubq_s16(v59, v60);
    v65 = (uint16x8_t)vaddq_s16((int16x8_t)vmaxq_u16((uint16x8_t)vabsq_s16((int16x8_t)vtrn1q_s32(v62, v64)), (uint16x8_t)vabsq_s16((int16x8_t)vtrn2q_s32(v62, v64))), (int16x8_t)vmaxq_u16((uint16x8_t)vabsq_s16((int16x8_t)vtrn1q_s32(v61, v63)), (uint16x8_t)vabsq_s16((int16x8_t)vtrn2q_s32(v61, v63))));
    v7 = (int32x4_t)vaddw_high_u16(vaddw_u16((uint32x4_t)v7, *(uint16x4_t *)v48.i8), v48);
    v8 = (int32x4_t)vaddw_high_u16(vaddw_u16((uint32x4_t)v8, *(uint16x4_t *)v65.i8), v65);
    v9 -= 4;
    v6 += 4 * a5;
    a1 = (uint8x8_t *)((char *)v13 + a2);
  }
  while (v9 > 4);
  return vaddvq_s32(vaddq_s32(v8, v7));
}

uint64_t sub_215FBFB28(uint8x8_t *a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  return sub_215FBF97C(a1, a2, a3, a4, a5, 8);
}

uint64_t sub_215FBFB30(uint8x8_t *a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  return sub_215FBFB38(a1, a2, a3, a4, a5, 16);
}

uint64_t sub_215FBFB38(uint8x8_t *a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v6;
  int32x4_t v7;
  int32x4_t v8;
  int v9;
  uint8x8_t *v10;
  uint8x8_t v11;
  uint8x8_t *v12;
  uint8x8_t *v13;
  uint8x8_t v14;
  uint8x8_t *v15;
  uint8x8_t *v16;
  uint8x8_t v17;
  uint8x8_t *v18;
  int16x8_t v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int32x4_t v35;
  int32x4_t v36;
  int32x4_t v37;
  int32x4_t v38;
  uint16x8_t v39;

  v6 = 0;
  v7 = 0uLL;
  v8 = 0uLL;
  v9 = a6 + 4;
  do
  {
    v10 = (uint8x8_t *)((char *)a1 + a2 + a2);
    v11 = *v10;
    v12 = (uint8x8_t *)((char *)v10 + a2);
    v13 = (uint8x8_t *)(a3 + v6 + a5);
    v14 = *v13;
    v15 = (uint8x8_t *)((char *)v13 + a5);
    v16 = (uint8x8_t *)(a4 + v6 + a5);
    v17 = *v16;
    v18 = (uint8x8_t *)((char *)v16 + a5);
    v19 = (int16x8_t)vsubl_u8(*a1, vrhadd_u8(*(uint8x8_t *)(a3 + v6), *(uint8x8_t *)(a4 + v6)));
    v20 = (int16x8_t)vsubl_u8(*(uint8x8_t *)((char *)a1 + a2), vrhadd_u8(v14, v17));
    v21 = (int16x8_t)vsubl_u8(v11, vrhadd_u8(*v15, *v18));
    v22 = (int16x8_t)vsubl_u8(*v12, vrhadd_u8(*(uint8x8_t *)((char *)v15 + a5), *(uint8x8_t *)((char *)v18 + a5)));
    v23 = vaddq_s16(v20, v19);
    v24 = vsubq_s16(v19, v20);
    v25 = vaddq_s16(v22, v21);
    v26 = vsubq_s16(v21, v22);
    v27 = vaddq_s16(v25, v23);
    v28 = vsubq_s16(v23, v25);
    v29 = vaddq_s16(v26, v24);
    v30 = vsubq_s16(v24, v26);
    v31 = vtrn1q_s16(v27, v29);
    v32 = vtrn2q_s16(v27, v29);
    v33 = vtrn1q_s16(v28, v30);
    v34 = vtrn2q_s16(v28, v30);
    v35 = (int32x4_t)vaddq_s16(v32, v31);
    v36 = (int32x4_t)vsubq_s16(v31, v32);
    v37 = (int32x4_t)vaddq_s16(v34, v33);
    v38 = (int32x4_t)vsubq_s16(v33, v34);
    v39 = (uint16x8_t)vaddq_s16((int16x8_t)vmaxq_u16((uint16x8_t)vabsq_s16((int16x8_t)vtrn1q_s32(v36, v38)), (uint16x8_t)vabsq_s16((int16x8_t)vtrn2q_s32(v36, v38))), (int16x8_t)vmaxq_u16((uint16x8_t)vabsq_s16((int16x8_t)vtrn1q_s32(v35, v37)), (uint16x8_t)vabsq_s16((int16x8_t)vtrn2q_s32(v35, v37))));
    v8 = (int32x4_t)vaddw_u16((uint32x4_t)v8, *(uint16x4_t *)v39.i8);
    v7 = (int32x4_t)vaddw_high_u16((uint32x4_t)v7, v39);
    v9 -= 4;
    v6 += 4 * a5;
    a1 = (uint8x8_t *)((char *)v12 + a2);
  }
  while (v9 > 4);
  return vaddvq_s32(vaddq_s32(v8, v7));
}

uint64_t sub_215FBFC60(uint8x8_t *a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  return sub_215FBFB38(a1, a2, a3, a4, a5, 8);
}

uint64_t sub_215FBFC68(int16x8_t *a1)
{
  int16x8_t v1;
  int16x8_t v2;
  int16x8_t v3;
  int16x8_t v4;
  int16x8_t v5;
  int16x8_t v6;
  int16x8_t v7;
  int16x8_t v8;
  int16x8_t v9;
  int16x8_t v10;
  int16x8_t v11;
  int16x8_t v12;
  int16x8_t v13;
  int16x8_t v14;
  int16x8_t v15;
  int16x8_t v16;
  int16x8_t v17;
  int16x8_t v18;
  int16x8_t v19;
  int32x4_t v20;
  int32x4_t v21;
  int32x4_t v22;
  int32x4_t v23;
  uint16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int32x4_t v37;
  int32x4_t v38;
  int32x4_t v39;
  int32x4_t v40;
  uint16x8_t v41;
  int32x4_t v42;
  int32x4_t v43;
  int32x4_t v44;
  int32x4_t v45;
  int32x4_t v46;
  unsigned int v47;
  int32x4_t v48;

  v1 = a1[1];
  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  v7 = a1[7];
  v8 = vaddq_s16(v2, *a1);
  v9 = vsubq_s16(*a1, v2);
  v10 = vaddq_s16(v6, v4);
  v11 = vsubq_s16(v4, v6);
  v12 = vaddq_s16(v10, v8);
  v13 = vsubq_s16(v8, v10);
  v14 = vaddq_s16(v11, v9);
  v15 = vsubq_s16(v9, v11);
  v16 = vtrn1q_s16(v12, v14);
  v17 = vtrn2q_s16(v12, v14);
  v18 = vtrn1q_s16(v13, v15);
  v19 = vtrn2q_s16(v13, v15);
  v20 = (int32x4_t)vaddq_s16(v17, v16);
  v21 = (int32x4_t)vsubq_s16(v16, v17);
  v22 = (int32x4_t)vaddq_s16(v19, v18);
  v23 = (int32x4_t)vsubq_s16(v18, v19);
  v24 = (uint16x8_t)vaddq_s16((int16x8_t)vmaxq_u16((uint16x8_t)vabsq_s16((int16x8_t)vtrn1q_s32(v21, v23)), (uint16x8_t)vabsq_s16((int16x8_t)vtrn2q_s32(v21, v23))), (int16x8_t)vmaxq_u16((uint16x8_t)vabsq_s16((int16x8_t)vtrn1q_s32(v20, v22)), (uint16x8_t)vabsq_s16((int16x8_t)vtrn2q_s32(v20, v22))));
  v25 = vaddq_s16(v3, v1);
  v26 = vsubq_s16(v1, v3);
  v27 = vaddq_s16(v7, v5);
  v28 = vsubq_s16(v5, v7);
  v29 = vaddq_s16(v27, v25);
  v30 = vsubq_s16(v25, v27);
  v31 = vaddq_s16(v28, v26);
  v32 = vsubq_s16(v26, v28);
  v33 = vtrn1q_s16(v29, v31);
  v34 = vtrn2q_s16(v29, v31);
  v35 = vtrn1q_s16(v30, v32);
  v36 = vtrn2q_s16(v30, v32);
  v37 = (int32x4_t)vaddq_s16(v34, v33);
  v38 = (int32x4_t)vsubq_s16(v33, v34);
  v39 = (int32x4_t)vaddq_s16(v36, v35);
  v40 = (int32x4_t)vsubq_s16(v35, v36);
  v41 = (uint16x8_t)vaddq_s16((int16x8_t)vmaxq_u16((uint16x8_t)vabsq_s16((int16x8_t)vtrn1q_s32(v38, v40)), (uint16x8_t)vabsq_s16((int16x8_t)vtrn2q_s32(v38, v40))), (int16x8_t)vmaxq_u16((uint16x8_t)vabsq_s16((int16x8_t)vtrn1q_s32(v37, v39)), (uint16x8_t)vabsq_s16((int16x8_t)vtrn2q_s32(v37, v39))));
  v42 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v24.i8);
  v43 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v41.i8);
  v44 = (int32x4_t)vmovl_high_u16(v24);
  v45 = (int32x4_t)vmovl_high_u16(v41);
  v46 = 0uLL;
  v47 = 20;
  v48 = 0uLL;
  do
  {
    v48 = vaddq_s32(vaddq_s32(v48, v42), v44);
    v46 = vaddq_s32(vaddq_s32(v46, v43), v45);
    v47 -= 4;
  }
  while (v47 > 4);
  return vaddvq_s32(vaddq_s32(v46, v48));
}

uint64_t sub_215FBFD98(uint8x8_t *a1, int a2, uint8x8_t *a3, int a4)
{
  int16x8_t v4;
  int16x8_t v5;
  int16x8_t v6;
  int16x8_t v7;
  int16x8_t v8;
  int16x8_t v9;
  int16x8_t v10;
  int16x8_t v11;
  int16x8_t v12;
  int16x8_t v13;
  int16x8_t v14;
  int16x8_t v15;
  int16x8_t v16;
  int16x8_t v17;
  int16x8_t v18;
  int16x8_t v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int16x8_t v39;
  int16x8_t v40;
  int16x8_t v41;
  int16x8_t v42;
  int16x8_t v43;
  int32x4_t v44;
  int32x4_t v45;
  int32x4_t v46;
  int32x4_t v47;
  int32x4_t v48;
  int32x4_t v49;
  int32x4_t v50;
  int32x4_t v51;
  int16x8_t v52;
  int16x8_t v53;
  int16x8_t v54;
  int16x8_t v55;
  int16x8_t v56;
  int16x8_t v57;
  int16x8_t v58;
  int16x8_t v59;
  int16x8_t v60;
  int16x8_t v61;
  int16x8_t v62;
  int16x8_t v63;
  int64x2_t v64;
  int64x2_t v65;
  int64x2_t v66;
  int64x2_t v67;
  int16x8_t v68;
  int16x8_t v69;
  int16x8_t v70;
  int16x8_t v71;
  uint16x8_t v72;
  uint16x8_t v73;

  v4 = (int16x8_t)vsubl_u8(*a1, *a3);
  v5 = (int16x8_t)vsubl_u8(*(uint8x8_t *)((char *)a1 + a2), *(uint8x8_t *)((char *)a3 + a4));
  v6 = (int16x8_t)vsubl_u8(*(uint8x8_t *)((char *)a1 + 2 * a2), *(uint8x8_t *)((char *)a3 + 2 * a4));
  v7 = (int16x8_t)vsubl_u8(*(uint8x8_t *)((char *)a1 + 3 * a2), *(uint8x8_t *)((char *)a3 + 3 * a4));
  v8 = (int16x8_t)vsubl_u8(*(uint8x8_t *)((char *)a1 + 4 * a2), *(uint8x8_t *)((char *)a3 + 4 * a4));
  v9 = (int16x8_t)vsubl_u8(*(uint8x8_t *)((char *)a1 + 5 * a2), *(uint8x8_t *)((char *)a3 + 5 * a4));
  v10 = (int16x8_t)vsubl_u8(*(uint8x8_t *)((char *)a1 + 6 * a2), *(uint8x8_t *)((char *)a3 + 6 * a4));
  v11 = (int16x8_t)vsubl_u8(*(uint8x8_t *)((char *)&a1[a2] - a2), *(uint8x8_t *)((char *)&a3[a4] - a4));
  v12 = vaddq_s16(v5, v4);
  v13 = vsubq_s16(v4, v5);
  v14 = vaddq_s16(v7, v6);
  v15 = vsubq_s16(v6, v7);
  v16 = vaddq_s16(v9, v8);
  v17 = vsubq_s16(v8, v9);
  v18 = vaddq_s16(v11, v10);
  v19 = vsubq_s16(v10, v11);
  v20 = vaddq_s16(v14, v12);
  v21 = vsubq_s16(v12, v14);
  v22 = vaddq_s16(v15, v13);
  v23 = vsubq_s16(v13, v15);
  v24 = vaddq_s16(v18, v16);
  v25 = vsubq_s16(v16, v18);
  v26 = vaddq_s16(v19, v17);
  v27 = vsubq_s16(v17, v19);
  v28 = vaddq_s16(v24, v20);
  v29 = vsubq_s16(v20, v24);
  v30 = vaddq_s16(v26, v22);
  v31 = vsubq_s16(v22, v26);
  v32 = vaddq_s16(v25, v21);
  v33 = vsubq_s16(v21, v25);
  v34 = vaddq_s16(v27, v23);
  v35 = vsubq_s16(v23, v27);
  v36 = vtrn1q_s16(v28, v30);
  v37 = vtrn2q_s16(v28, v30);
  v38 = vtrn1q_s16(v32, v34);
  v39 = vtrn2q_s16(v32, v34);
  v40 = vtrn1q_s16(v29, v31);
  v41 = vtrn2q_s16(v29, v31);
  v42 = vtrn1q_s16(v33, v35);
  v43 = vtrn2q_s16(v33, v35);
  v44 = (int32x4_t)vaddq_s16(v37, v36);
  v45 = (int32x4_t)vsubq_s16(v36, v37);
  v46 = (int32x4_t)vaddq_s16(v39, v38);
  v47 = (int32x4_t)vsubq_s16(v38, v39);
  v48 = (int32x4_t)vaddq_s16(v41, v40);
  v49 = (int32x4_t)vsubq_s16(v40, v41);
  v50 = (int32x4_t)vaddq_s16(v43, v42);
  v51 = (int32x4_t)vsubq_s16(v42, v43);
  v52 = (int16x8_t)vtrn1q_s32(v44, v46);
  v53 = (int16x8_t)vtrn2q_s32(v44, v46);
  v54 = (int16x8_t)vtrn1q_s32(v45, v47);
  v55 = (int16x8_t)vtrn2q_s32(v45, v47);
  v56 = (int16x8_t)vtrn1q_s32(v48, v50);
  v57 = (int16x8_t)vtrn2q_s32(v48, v50);
  v58 = (int16x8_t)vtrn1q_s32(v49, v51);
  v59 = (int16x8_t)vtrn2q_s32(v49, v51);
  v60 = vaddq_s16(v53, v52);
  v61 = vsubq_s16(v52, v53);
  v62 = vaddq_s16(v55, v54);
  v63 = vsubq_s16(v54, v55);
  v64 = (int64x2_t)vaddq_s16(v57, v56);
  v65 = (int64x2_t)vsubq_s16(v56, v57);
  v66 = (int64x2_t)vaddq_s16(v59, v58);
  v67 = (int64x2_t)vsubq_s16(v58, v59);
  v68 = (int16x8_t)vzip2q_s64((int64x2_t)v60, v64);
  v69 = (int16x8_t)vzip2q_s64((int64x2_t)v62, v66);
  v70 = (int16x8_t)vzip2q_s64((int64x2_t)v61, v65);
  v60.i64[1] = v64.i64[0];
  v71 = (int16x8_t)vzip2q_s64((int64x2_t)v63, v67);
  v62.i64[1] = v66.i64[0];
  v72 = (uint16x8_t)vaddq_s16((int16x8_t)vmaxq_u16((uint16x8_t)vabsq_s16(v62), (uint16x8_t)vabsq_s16(v69)), (int16x8_t)vmaxq_u16((uint16x8_t)vabsq_s16(v60), (uint16x8_t)vabsq_s16(v68)));
  v61.i64[1] = v65.i64[0];
  v63.i64[1] = v67.i64[0];
  v73 = (uint16x8_t)vaddq_s16((int16x8_t)vmaxq_u16((uint16x8_t)vabsq_s16(v63), (uint16x8_t)vabsq_s16(v71)), (int16x8_t)vmaxq_u16((uint16x8_t)vabsq_s16(v61), (uint16x8_t)vabsq_s16(v70)));
  return ((vaddvq_s32((int32x4_t)vaddw_high_u16(vaddw_u16(vaddw_high_u16(vmovl_u16(*(uint16x4_t *)v72.i8), v72), *(uint16x4_t *)v73.i8), v73))+ 1) >> 1);
}

uint64_t sub_215FBFF88(int16x8_t *a1, int a2)
{
  int16x8_t v2;
  int16x8_t v3;
  int16x8_t v4;
  int16x8_t v5;
  int16x8_t v6;
  int16x8_t v7;
  int16x8_t v8;
  int16x8_t v9;
  int16x8_t v10;
  int16x8_t v11;
  int16x8_t v12;
  int16x8_t v13;
  int16x8_t v14;
  int16x8_t v15;
  int16x8_t v16;
  int16x8_t v17;
  int16x8_t v18;
  int16x8_t v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int16x8_t v39;
  int16x8_t v40;
  int32x4_t v41;
  int32x4_t v42;
  int32x4_t v43;
  int32x4_t v44;
  int32x4_t v45;
  int32x4_t v46;
  int32x4_t v47;
  int32x4_t v48;
  int16x8_t v49;
  int16x8_t v50;
  int16x8_t v51;
  int16x8_t v52;
  int16x8_t v53;
  int16x8_t v54;
  int16x8_t v55;
  int16x8_t v56;
  int16x8_t v57;
  int16x8_t v58;
  int16x8_t v59;
  int16x8_t v60;
  int64x2_t v61;
  int64x2_t v62;
  int64x2_t v63;
  int64x2_t v64;
  int16x8_t v65;
  int16x8_t v66;
  int16x8_t v67;
  int16x8_t v68;
  uint16x8_t v69;
  uint16x8_t v70;

  v2 = *(int16x8_t *)((char *)a1 + 2 * a2);
  v3 = *(int16x8_t *)((char *)a1 + 4 * a2);
  v4 = *(int16x8_t *)((char *)a1 + 6 * a2);
  v5 = *(int16x8_t *)((char *)a1 + 8 * a2);
  v6 = *(int16x8_t *)((char *)a1 + 10 * a2);
  v7 = *(int16x8_t *)((char *)a1 + 12 * a2);
  v8 = *(int16x8_t *)((char *)a1 + 14 * a2);
  v9 = vaddq_s16(v2, *a1);
  v10 = vsubq_s16(*a1, v2);
  v11 = vaddq_s16(v4, v3);
  v12 = vsubq_s16(v3, v4);
  v13 = vaddq_s16(v6, v5);
  v14 = vsubq_s16(v5, v6);
  v15 = vaddq_s16(v8, v7);
  v16 = vsubq_s16(v7, v8);
  v17 = vaddq_s16(v11, v9);
  v18 = vsubq_s16(v9, v11);
  v19 = vaddq_s16(v12, v10);
  v20 = vsubq_s16(v10, v12);
  v21 = vaddq_s16(v15, v13);
  v22 = vsubq_s16(v13, v15);
  v23 = vaddq_s16(v16, v14);
  v24 = vsubq_s16(v14, v16);
  v25 = vaddq_s16(v21, v17);
  v26 = vsubq_s16(v17, v21);
  v27 = vaddq_s16(v23, v19);
  v28 = vsubq_s16(v19, v23);
  v29 = vaddq_s16(v22, v18);
  v30 = vsubq_s16(v18, v22);
  v31 = vaddq_s16(v24, v20);
  v32 = vsubq_s16(v20, v24);
  v33 = vtrn1q_s16(v25, v27);
  v34 = vtrn2q_s16(v25, v27);
  v35 = vtrn1q_s16(v29, v31);
  v36 = vtrn2q_s16(v29, v31);
  v37 = vtrn1q_s16(v26, v28);
  v38 = vtrn2q_s16(v26, v28);
  v39 = vtrn1q_s16(v30, v32);
  v40 = vtrn2q_s16(v30, v32);
  v41 = (int32x4_t)vaddq_s16(v34, v33);
  v42 = (int32x4_t)vsubq_s16(v33, v34);
  v43 = (int32x4_t)vaddq_s16(v36, v35);
  v44 = (int32x4_t)vsubq_s16(v35, v36);
  v45 = (int32x4_t)vaddq_s16(v38, v37);
  v46 = (int32x4_t)vsubq_s16(v37, v38);
  v47 = (int32x4_t)vaddq_s16(v40, v39);
  v48 = (int32x4_t)vsubq_s16(v39, v40);
  v49 = (int16x8_t)vtrn1q_s32(v41, v43);
  v50 = (int16x8_t)vtrn2q_s32(v41, v43);
  v51 = (int16x8_t)vtrn1q_s32(v42, v44);
  v52 = (int16x8_t)vtrn2q_s32(v42, v44);
  v53 = (int16x8_t)vtrn1q_s32(v45, v47);
  v54 = (int16x8_t)vtrn2q_s32(v45, v47);
  v55 = (int16x8_t)vtrn1q_s32(v46, v48);
  v56 = (int16x8_t)vtrn2q_s32(v46, v48);
  v57 = vaddq_s16(v50, v49);
  v58 = vsubq_s16(v49, v50);
  v59 = vaddq_s16(v52, v51);
  v60 = vsubq_s16(v51, v52);
  v61 = (int64x2_t)vaddq_s16(v54, v53);
  v62 = (int64x2_t)vsubq_s16(v53, v54);
  v63 = (int64x2_t)vaddq_s16(v56, v55);
  v64 = (int64x2_t)vsubq_s16(v55, v56);
  v65 = (int16x8_t)vzip2q_s64((int64x2_t)v57, v61);
  v66 = (int16x8_t)vzip2q_s64((int64x2_t)v59, v63);
  v67 = (int16x8_t)vzip2q_s64((int64x2_t)v58, v62);
  v57.i64[1] = v61.i64[0];
  v68 = (int16x8_t)vzip2q_s64((int64x2_t)v60, v64);
  v59.i64[1] = v63.i64[0];
  v69 = (uint16x8_t)vaddq_s16((int16x8_t)vmaxq_u16((uint16x8_t)vabsq_s16(v59), (uint16x8_t)vabsq_s16(v66)), (int16x8_t)vmaxq_u16((uint16x8_t)vabsq_s16(v57), (uint16x8_t)vabsq_s16(v65)));
  v58.i64[1] = v62.i64[0];
  v60.i64[1] = v64.i64[0];
  v70 = (uint16x8_t)vaddq_s16((int16x8_t)vmaxq_u16((uint16x8_t)vabsq_s16(v60), (uint16x8_t)vabsq_s16(v68)), (int16x8_t)vmaxq_u16((uint16x8_t)vabsq_s16(v58), (uint16x8_t)vabsq_s16(v67)));
  return ((vaddvq_s32((int32x4_t)vaddw_high_u16(vaddw_u16(vaddw_high_u16(vmovl_u16(*(uint16x4_t *)v69.i8), v69), *(uint16x4_t *)v70.i8), v70))+ 1) >> 1);
}

uint64_t sub_215FC0130(int16x8_t *a1, int a2)
{
  int v4;
  int v5;
  int v6;

  v4 = sub_215FBFF88(a1, a2);
  v5 = sub_215FBFF88(a1 + 1, a2) + v4;
  v6 = sub_215FBFF88(a1 + 16, a2);
  return v5 + v6 + sub_215FBFF88(a1 + 17, a2);
}

uint64_t sub_215FC0194(uint8x8_t *a1, int a2, uint8x8_t *a3, int a4)
{
  unsigned int v4;
  uint8x8_t *v5;
  uint8x16_t *v6;
  uint64_t v7;
  uint8x16_t v8;
  uint8x16_t v9;
  uint8x16_t *v10;
  uint8x16_t v11;
  uint8x8_t *v12;
  uint8x16_t v13;
  int16x8_t v14;
  int16x8_t v15;
  int16x8_t v16;
  int16x8_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint8x16_t v22;
  uint8x16_t v23;
  uint8x16_t v24;
  uint8x16_t v25;
  uint8x16_t v26;
  uint8x16_t v27;
  uint8x16_t v28;
  uint8x16_t v29;

  v4 = 0;
  v5 = (uint8x8_t *)((char *)a1 + a2);
  v6 = (uint8x16_t *)((char *)v5 + a2);
  v7 = a2;
  v8 = *v6;
  v9 = *(uint8x16_t *)((char *)v6 + a2);
  v10 = (uint8x16_t *)((char *)a3 + a4);
  v11 = *v10;
  v12 = (uint8x8_t *)&v10->i8[a4];
  v13 = *(uint8x16_t *)&v12->i8[a4];
  v14 = (int16x8_t)vabal_u8(vabdl_u8(*(uint8x8_t *)v8.i8, *v12), *a1, *a3);
  v15 = (int16x8_t)vabal_high_u8(vabdl_high_u8(v8, *(uint8x16_t *)v12->i8), *(uint8x16_t *)a1->i8, *(uint8x16_t *)a3->i8);
  v16 = (int16x8_t)vabal_u8(vabdl_u8(*(uint8x8_t *)v9.i8, *(uint8x8_t *)v13.i8), *v5, *(uint8x8_t *)v11.i8);
  v17 = (int16x8_t)vabal_high_u8(vabdl_high_u8(v9, v13), *(uint8x16_t *)v5->i8, v11);
  v18 = 4 * a2;
  v19 = 7 * a2;
  v20 = 6 * a2;
  v21 = 5 * a2;
  do
  {
    v22 = *(uint8x16_t *)&a3->i8[4 * a4];
    v23 = *(uint8x16_t *)&a3->i8[5 * a4];
    v24 = *(uint8x16_t *)&a3->i8[6 * a4];
    v25 = *(uint8x16_t *)&a3->i8[7 * a4];
    a3 = (uint8x8_t *)((char *)a3 + 2 * a4 + a4 + a4);
    v26 = *(uint8x16_t *)&a1->i8[v18];
    v27 = *(uint8x16_t *)&a1->i8[v21];
    v28 = *(uint8x16_t *)&a1->i8[v20];
    v29 = *(uint8x16_t *)&a1->i8[v19];
    a1 = (uint8x8_t *)((char *)a1 + 2 * v7 + v7 + v7);
    v14 = (int16x8_t)vabal_u8(vabal_u8((uint16x8_t)v14, *(uint8x8_t *)v26.i8, *(uint8x8_t *)v22.i8), *(uint8x8_t *)v28.i8, *(uint8x8_t *)v24.i8);
    v15 = (int16x8_t)vabal_high_u8(vabal_high_u8((uint16x8_t)v15, v26, v22), v28, v24);
    v16 = (int16x8_t)vabal_u8(vabal_u8((uint16x8_t)v16, *(uint8x8_t *)v27.i8, *(uint8x8_t *)v23.i8), *(uint8x8_t *)v29.i8, *(uint8x8_t *)v25.i8);
    v17 = (int16x8_t)vabal_high_u8(vabal_high_u8((uint16x8_t)v17, v27, v23), v29, v25);
    v4 += 4;
  }
  while (v4 < 0xC);
  return vaddlvq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v16, v17), vaddq_s16(v15, v14)));
}

uint64_t sub_215FC02AC(uint8x16_t *a1, int a2, uint8x16_t *a3, int a4)
{
  uint8x16_t *v4;
  uint8x16_t v5;
  uint8x16_t *v6;
  uint8x16_t v7;
  uint8x16_t *v8;
  uint8x16_t v9;
  uint8x16_t *v10;
  uint8x16_t v11;
  uint8x16_t *v12;
  uint8x16_t v13;
  uint8x16_t *v14;
  uint8x16_t v15;
  uint8x16_t *v16;
  uint8x16_t *v17;
  uint8x16_t v18;
  uint8x16_t *v19;
  uint8x16_t v20;
  uint8x16_t *v21;
  uint8x16_t v22;
  uint8x16_t v23;
  uint8x16_t *v24;
  uint8x16_t v25;
  uint8x16_t *v26;

  v4 = (uint8x16_t *)((char *)a1 + a2);
  v5 = *v4;
  v6 = (uint8x16_t *)((char *)v4 + a2);
  v7 = *v6;
  v8 = (uint8x16_t *)((char *)v6 + a2);
  v9 = *v8;
  v10 = (uint8x16_t *)((char *)a3 + a4);
  v11 = *v10;
  v12 = (uint8x16_t *)((char *)v10 + a4);
  v13 = *v12;
  v14 = (uint8x16_t *)((char *)v12 + a4);
  v15 = *v14;
  v16 = (uint8x16_t *)((char *)v14 + a4);
  v17 = (uint8x16_t *)((char *)v8 + a2);
  v18 = *v17;
  v19 = (uint8x16_t *)((char *)v17 + a2);
  v20 = *v19;
  v21 = (uint8x16_t *)((char *)v19 + a2);
  v22 = *(uint8x16_t *)((char *)v21 + a2);
  v23 = *v21;
  v24 = (uint8x16_t *)((char *)v16 + a4);
  v25 = *v24;
  v26 = (uint8x16_t *)((char *)v24 + a4);
  return vaddlvq_u16((uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vabal_u8(vabal_u8(vabal_u8(vabdl_u8(*(uint8x8_t *)v9.i8, *(uint8x8_t *)v15.i8), *(uint8x8_t *)v5.i8, *(uint8x8_t *)v11.i8), *(uint8x8_t *)v20.i8, *(uint8x8_t *)v25.i8), *(uint8x8_t *)v22.i8, *(uint8x8_t *)&v26->i8[a4]), (int16x8_t)vabal_high_u8(vabal_high_u8(vabal_high_u8(vabdl_high_u8(v9, v15), v5, v11), v20, v25), v22, *(uint8x16_t *)((char *)v26 + a4))), vaddq_s16(
                                     (int16x8_t)vabal_high_u8(vabal_high_u8(vabal_high_u8(vabdl_high_u8(v7, v13), *a1, *a3), v18, *v16), v23, *v26), (int16x8_t)vabal_u8(vabal_u8(vabal_u8(vabdl_u8(*(uint8x8_t *)v7.i8, *(uint8x8_t *)v13.i8), *(uint8x8_t *)a1->i8, *(uint8x8_t *)a3->i8), *(uint8x8_t *)v18.i8, *(uint8x8_t *)v16->i8), *(uint8x8_t *)v23.i8, *(uint8x8_t *)v26->i8))));
}

uint64_t sub_215FC0374(uint8x8_t *a1, int a2, uint8x8_t *a3, int a4)
{
  unsigned int v4;
  uint8x8_t *v5;
  uint8x8_t *v6;
  uint64_t v7;
  uint8x8_t v8;
  uint8x8_t v9;
  uint8x8_t *v10;
  uint8x8_t v11;
  uint8x8_t *v12;
  int16x8_t v13;
  int16x8_t v14;
  int16x8_t v15;
  int16x8_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint8x8_t v21;
  uint8x8_t v22;
  uint8x8_t v23;
  uint8x8_t v24;
  uint8x8_t v25;
  uint8x8_t v26;
  uint8x8_t v27;
  uint8x8_t v28;

  v4 = 0;
  v5 = (uint8x8_t *)((char *)a1 + a2);
  v6 = (uint8x8_t *)((char *)v5 + a2);
  v7 = a2;
  v8 = *v6;
  v9 = *(uint8x8_t *)((char *)v6 + a2);
  v10 = (uint8x8_t *)((char *)a3 + a4);
  v11 = *v10;
  v12 = (uint8x8_t *)((char *)v10 + a4);
  v13 = (int16x8_t)vabdl_u8(*a1, *a3);
  v14 = (int16x8_t)vabdl_u8(*v5, v11);
  v15 = (int16x8_t)vabdl_u8(v8, *v12);
  v16 = (int16x8_t)vabdl_u8(v9, *(uint8x8_t *)((char *)v12 + a4));
  v17 = 4 * a2;
  v18 = 7 * a2;
  v19 = 6 * a2;
  v20 = 5 * a2;
  do
  {
    v21 = *(uint8x8_t *)((char *)a3 + 4 * a4);
    v22 = *(uint8x8_t *)((char *)a3 + 5 * a4);
    v23 = *(uint8x8_t *)((char *)a3 + 6 * a4);
    v24 = *(uint8x8_t *)((char *)a3 + 7 * a4);
    a3 = (uint8x8_t *)((char *)a3 + 2 * a4 + a4 + a4);
    v25 = *(uint8x8_t *)((char *)a1 + v17);
    v26 = *(uint8x8_t *)((char *)a1 + v20);
    v27 = *(uint8x8_t *)((char *)a1 + v19);
    v28 = *(uint8x8_t *)((char *)a1 + v18);
    a1 = (uint8x8_t *)((char *)a1 + 2 * v7 + v7 + v7);
    v13 = (int16x8_t)vabal_u8((uint16x8_t)v13, v25, v21);
    v14 = (int16x8_t)vabal_u8((uint16x8_t)v14, v26, v22);
    v15 = (int16x8_t)vabal_u8((uint16x8_t)v15, v27, v23);
    v16 = (int16x8_t)vabal_u8((uint16x8_t)v16, v28, v24);
    v4 += 4;
  }
  while (v4 < 0xC);
  return vaddlvq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v15, v16), vaddq_s16(v14, v13)));
}

uint64_t sub_215FC046C(uint8x8_t *a1, int a2, uint8x8_t *a3, int a4)
{
  uint8x8_t *v4;
  uint8x8_t v5;
  uint8x8_t *v6;
  uint8x8_t v7;
  uint8x8_t *v8;
  uint8x8_t v9;
  uint8x8_t *v10;
  uint8x8_t v11;
  uint8x8_t *v12;
  uint8x8_t v13;
  uint8x8_t *v14;
  uint8x8_t v15;
  uint8x8_t *v16;
  uint8x8_t *v17;
  uint8x8_t v18;
  uint8x8_t *v19;

  v4 = (uint8x8_t *)((char *)a1 + a2);
  v5 = *v4;
  v6 = (uint8x8_t *)((char *)v4 + a2);
  v7 = *v6;
  v8 = (uint8x8_t *)((char *)v6 + a2);
  v9 = *v8;
  v10 = (uint8x8_t *)((char *)a3 + a4);
  v11 = *v10;
  v12 = (uint8x8_t *)((char *)v10 + a4);
  v13 = *v12;
  v14 = (uint8x8_t *)((char *)v12 + a4);
  v15 = *v14;
  v16 = (uint8x8_t *)((char *)v14 + a4);
  v17 = (uint8x8_t *)((char *)v8 + a2);
  v18 = *v17;
  v19 = (uint8x8_t *)((char *)v17 + a2);
  return vaddlvq_u16((uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vabal_u8(vabdl_u8(v7, v13), *(uint8x8_t *)((char *)v19 + a2), *(uint8x8_t *)((char *)v16 + a4 + a4)), (int16x8_t)vabal_u8(vabdl_u8(v9, v15), *(uint8x8_t *)((char *)v19 + a2 + a2), *(uint8x8_t *)((char *)v16 + a4 + a4 + a4))), vaddq_s16((int16x8_t)vabal_u8(vabdl_u8(v5, v11), *v19, *(uint8x8_t *)((char *)v16 + a4)), (int16x8_t)vabal_u8(vabdl_u8(*a1, *a3), v18, *v16))));
}

uint64_t sub_215FC0514(uint8x16_t *a1, int a2, uint8x16_t *a3, uint8x16_t *a4, int a5)
{
  uint8x16_t v5;
  uint8x16_t *v6;
  uint8x16_t v7;
  uint8x16_t *v8;
  uint8x16_t v9;
  uint8x16_t v10;
  uint8x16_t v11;
  uint8x16_t *v12;
  uint8x16_t v13;
  uint8x16_t *v14;
  uint8x16_t v15;
  uint8x16_t v16;
  uint8x16_t *v17;
  uint8x16_t v18;
  uint8x16_t *v19;
  uint8x16_t v20;
  uint8x16_t *v21;
  unsigned int v22;
  int16x8_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  uint8x16_t v27;
  uint8x16_t v28;
  uint8x16_t v29;
  uint8x16_t v30;
  uint8x16_t v31;
  uint8x16_t *v32;
  uint8x16_t v33;
  uint8x16_t *v34;
  uint8x16_t v35;
  uint8x16_t *v36;
  uint8x16_t v37;
  uint8x16_t v38;
  uint8x16_t v39;
  uint8x16_t v40;
  uint8x16_t v41;

  v5 = *a1;
  v6 = (uint8x16_t *)((char *)a1 + a2);
  v7 = *v6;
  v8 = (uint8x16_t *)((char *)v6 + a2);
  v9 = *v8;
  v10 = *(uint8x16_t *)((char *)v8 + a2);
  v11 = *a3;
  v12 = (uint8x16_t *)((char *)a3 + a5);
  v13 = *v12;
  v14 = (uint8x16_t *)((char *)v12 + a5);
  v15 = *v14;
  v16 = *(uint8x16_t *)((char *)v14 + a5);
  if (a4)
  {
    v17 = (uint8x16_t *)((char *)a4 + a5 + a5);
    v18 = *v17;
    v19 = (uint8x16_t *)((char *)v17 + a5);
    v20 = *v19;
    v21 = (uint8x16_t *)((char *)v19 + a5);
    v11 = vrhaddq_u8(v11, *a4);
    v13 = vrhaddq_u8(v13, *(uint8x16_t *)((char *)a4 + a5));
    v15 = vrhaddq_u8(v15, v18);
    v16 = vrhaddq_u8(v16, v20);
  }
  else
  {
    v21 = 0;
  }
  v22 = 0;
  v23 = (int16x8_t)vabal_u8(vabdl_u8(*(uint8x8_t *)v9.i8, *(uint8x8_t *)v15.i8), *(uint8x8_t *)v5.i8, *(uint8x8_t *)v11.i8);
  v24 = (int16x8_t)vabal_high_u8(vabdl_high_u8(v9, v15), v5, v11);
  v25 = (int16x8_t)vabal_u8(vabdl_u8(*(uint8x8_t *)v10.i8, *(uint8x8_t *)v16.i8), *(uint8x8_t *)v7.i8, *(uint8x8_t *)v13.i8);
  v26 = (int16x8_t)vabal_high_u8(vabdl_high_u8(v10, v16), v7, v13);
  do
  {
    v27 = *(uint8x16_t *)((char *)a3 + 4 * a5);
    v28 = *(uint8x16_t *)((char *)a3 + 5 * a5);
    v29 = *(uint8x16_t *)((char *)a3 + 6 * a5);
    v30 = *(uint8x16_t *)((char *)a3 + 7 * a5);
    if (v21)
    {
      v31 = *v21;
      v32 = (uint8x16_t *)((char *)v21 + a5);
      v33 = *v32;
      v34 = (uint8x16_t *)((char *)v32 + a5);
      v35 = *v34;
      v36 = (uint8x16_t *)((char *)v34 + a5);
      v37 = *v36;
      v21 = (uint8x16_t *)((char *)v36 + a5);
      v27 = vrhaddq_u8(v27, v31);
      v28 = vrhaddq_u8(v28, v33);
      v29 = vrhaddq_u8(v29, v35);
      v30 = vrhaddq_u8(v30, v37);
    }
    a3 = (uint8x16_t *)((char *)a3 + 2 * a5 + a5 + a5);
    v38 = *(uint8x16_t *)((char *)a1 + 4 * a2);
    v39 = *(uint8x16_t *)((char *)a1 + 5 * a2);
    v40 = *(uint8x16_t *)((char *)a1 + 6 * a2);
    v41 = *(uint8x16_t *)((char *)a1 + 7 * a2);
    a1 = (uint8x16_t *)((char *)a1 + 2 * a2 + a2 + a2);
    v23 = (int16x8_t)vabal_u8(vabal_u8((uint16x8_t)v23, *(uint8x8_t *)v38.i8, *(uint8x8_t *)v27.i8), *(uint8x8_t *)v40.i8, *(uint8x8_t *)v29.i8);
    v24 = (int16x8_t)vabal_high_u8(vabal_high_u8((uint16x8_t)v24, v38, v27), v40, v29);
    v25 = (int16x8_t)vabal_u8(vabal_u8((uint16x8_t)v25, *(uint8x8_t *)v39.i8, *(uint8x8_t *)v28.i8), *(uint8x8_t *)v41.i8, *(uint8x8_t *)v30.i8);
    v26 = (int16x8_t)vabal_high_u8(vabal_high_u8((uint16x8_t)v26, v39, v28), v41, v30);
    v22 += 4;
  }
  while (v22 < 0xC);
  return vaddlvq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v25, v26), vaddq_s16(v24, v23)));
}

uint64_t sub_215FC0694(uint8x16_t *a1, int a2, uint8x16_t *a3, uint8x16_t *a4, int a5)
{
  uint8x8_t *v5;
  uint8x16_t *v6;
  uint8x16_t *v7;
  uint8x16_t v8;
  uint8x16_t *v9;
  uint8x16_t v10;
  uint8x16_t *v11;
  uint8x16_t v12;
  uint8x16_t *v13;
  uint8x16_t v14;
  uint8x16_t *v15;
  uint8x16_t v16;
  uint8x16_t *v17;
  uint8x16_t v18;
  uint8x16_t *v19;
  uint8x16_t v20;
  uint8x16_t *v21;
  uint8x16_t v22;
  uint8x16_t *v23;
  uint8x16_t v24;
  uint8x16_t *v25;
  uint8x16_t v26;
  uint8x16_t *v27;
  uint8x16_t v28;
  uint8x16_t *v29;
  uint8x16_t v30;
  uint8x16_t v31;
  uint8x16_t *v32;

  v5 = (uint8x8_t *)&a1->i8[a2];
  v6 = (uint8x16_t *)((char *)v5 + a2);
  v7 = (uint8x16_t *)((char *)v6 + a2);
  v8 = *a3;
  v9 = (uint8x16_t *)((char *)a3 + a5);
  v10 = *v9;
  v11 = (uint8x16_t *)((char *)v9 + a5);
  v12 = *v11;
  v13 = (uint8x16_t *)((char *)v11 + a5);
  v14 = *v13;
  if (a4)
  {
    v15 = (uint8x16_t *)((char *)a4 + a5 + a5);
    v16 = *v15;
    v17 = (uint8x16_t *)((char *)v15 + a5);
    v18 = *v17;
    v19 = (uint8x16_t *)((char *)v17 + a5);
    v8 = vrhaddq_u8(v8, *a4);
    v10 = vrhaddq_u8(v10, *(uint8x16_t *)((char *)a4 + a5));
    v12 = vrhaddq_u8(v12, v16);
    v14 = vrhaddq_u8(v14, v18);
  }
  else
  {
    v19 = 0;
  }
  v20 = *v7;
  v21 = (uint8x16_t *)((char *)v7 + a2);
  v22 = *v21;
  v23 = (uint8x16_t *)((char *)v21 + a2);
  v24 = *v23;
  v25 = (uint8x16_t *)((char *)v23 + a2);
  v26 = *(uint8x16_t *)((char *)v13 + a5);
  v27 = (uint8x16_t *)((char *)v13 + a5 + a5);
  v28 = *v27;
  v29 = (uint8x16_t *)((char *)v27 + a5);
  v30 = *v29;
  v31 = *(uint8x16_t *)((char *)v29 + a5);
  if (v19)
  {
    v32 = (uint8x16_t *)((char *)v19 + a5 + a5);
    v26 = vrhaddq_u8(v26, *v19);
    v28 = vrhaddq_u8(v28, *(uint8x16_t *)((char *)v19 + a5));
    v30 = vrhaddq_u8(v30, *v32);
    v31 = vrhaddq_u8(v31, *(uint8x16_t *)((char *)v32 + a5));
  }
  return vaddlvq_u16((uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vabal_u8(vabal_u8(vabal_u8(vabdl_u8(*(uint8x8_t *)v20.i8, *(uint8x8_t *)v14.i8), *v5, *(uint8x8_t *)v10.i8), *(uint8x8_t *)v24.i8, *(uint8x8_t *)v28.i8), *(uint8x8_t *)&v25->i8[a2], *(uint8x8_t *)v31.i8), (int16x8_t)vabal_high_u8(vabal_high_u8(vabal_high_u8(vabdl_high_u8(v20, v14), *(uint8x16_t *)v5->i8, v10), v24, v28), *(uint8x16_t *)((char *)v25 + a2), v31)), vaddq_s16(
                                     (int16x8_t)vabal_high_u8(vabal_high_u8(vabal_high_u8(vabdl_high_u8(*v6, v12), *a1, v8), v22, v26), *v25, v30), (int16x8_t)vabal_u8(vabal_u8(vabal_u8(vabdl_u8(*(uint8x8_t *)v6->i8, *(uint8x8_t *)v12.i8), *(uint8x8_t *)a1->i8, *(uint8x8_t *)v8.i8), *(uint8x8_t *)v22.i8, *(uint8x8_t *)v26.i8), *(uint8x8_t *)v25->i8, *(uint8x8_t *)v30.i8))));
}

uint64_t sub_215FC07CC(uint8x8_t *a1, int a2, uint8x8_t *a3, uint8x8_t *a4, int a5)
{
  uint8x8_t *v5;
  uint8x8_t v6;
  uint8x8_t *v7;
  uint8x8_t v8;
  uint8x8_t *v9;
  uint8x8_t v10;
  uint8x8_t *v11;
  uint8x8_t v12;
  uint8x8_t v13;
  uint8x8_t *v14;
  uint8x8_t v15;
  uint8x8_t *v16;
  uint8x8_t v17;
  uint8x8_t *v18;
  unsigned int v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  uint8x8_t v24;
  uint8x8_t v25;
  uint8x8_t v26;
  uint8x8_t v27;
  uint8x8_t v28;
  uint8x8_t *v29;
  uint8x8_t v30;
  uint8x8_t *v31;
  uint8x8_t v32;
  uint8x8_t *v33;
  uint8x8_t v34;
  uint8x8_t v35;
  uint8x8_t v36;
  uint8x8_t v37;
  uint8x8_t v38;

  v5 = (uint8x8_t *)((char *)a1 + a2);
  v6 = *v5;
  v7 = (uint8x8_t *)((char *)v5 + a2);
  v8 = *a3;
  v9 = (uint8x8_t *)((char *)a3 + a5);
  v10 = *v9;
  v11 = (uint8x8_t *)((char *)v9 + a5);
  v12 = *v11;
  v13 = *(uint8x8_t *)((char *)v11 + a5);
  if (a4)
  {
    v14 = (uint8x8_t *)((char *)a4 + a5 + a5);
    v15 = *v14;
    v16 = (uint8x8_t *)((char *)v14 + a5);
    v17 = *v16;
    v18 = (uint8x8_t *)((char *)v16 + a5);
    v8 = vrhadd_u8(v8, *a4);
    v10 = vrhadd_u8(v10, *(uint8x8_t *)((char *)a4 + a5));
    v12 = vrhadd_u8(v12, v15);
    v13 = vrhadd_u8(v13, v17);
  }
  else
  {
    v18 = 0;
  }
  v19 = 0;
  v20 = (int16x8_t)vabdl_u8(*a1, v8);
  v21 = (int16x8_t)vabdl_u8(v6, v10);
  v22 = (int16x8_t)vabdl_u8(*v7, v12);
  v23 = (int16x8_t)vabdl_u8(*(uint8x8_t *)((char *)v7 + a2), v13);
  do
  {
    v24 = *(uint8x8_t *)((char *)a3 + 4 * a5);
    v25 = *(uint8x8_t *)((char *)a3 + 5 * a5);
    v26 = *(uint8x8_t *)((char *)a3 + 6 * a5);
    v27 = *(uint8x8_t *)((char *)a3 + 7 * a5);
    if (v18)
    {
      v28 = *v18;
      v29 = (uint8x8_t *)((char *)v18 + a5);
      v30 = *v29;
      v31 = (uint8x8_t *)((char *)v29 + a5);
      v32 = *v31;
      v33 = (uint8x8_t *)((char *)v31 + a5);
      v34 = *v33;
      v18 = (uint8x8_t *)((char *)v33 + a5);
      v24 = vrhadd_u8(v24, v28);
      v25 = vrhadd_u8(v25, v30);
      v26 = vrhadd_u8(v26, v32);
      v27 = vrhadd_u8(v27, v34);
    }
    a3 = (uint8x8_t *)((char *)a3 + 2 * a5 + a5 + a5);
    v35 = *(uint8x8_t *)((char *)a1 + 4 * a2);
    v36 = *(uint8x8_t *)((char *)a1 + 5 * a2);
    v37 = *(uint8x8_t *)((char *)a1 + 6 * a2);
    v38 = *(uint8x8_t *)((char *)a1 + 7 * a2);
    a1 = (uint8x8_t *)((char *)a1 + 2 * a2 + a2 + a2);
    v20 = (int16x8_t)vabal_u8((uint16x8_t)v20, v35, v24);
    v21 = (int16x8_t)vabal_u8((uint16x8_t)v21, v36, v25);
    v22 = (int16x8_t)vabal_u8((uint16x8_t)v22, v37, v26);
    v23 = (int16x8_t)vabal_u8((uint16x8_t)v23, v38, v27);
    v19 += 4;
  }
  while (v19 < 0xC);
  return vaddlvq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v22, v23), vaddq_s16(v21, v20)));
}

uint64_t sub_215FC092C(uint8x8_t *a1, int a2, uint8x8_t *a3, uint8x8_t *a4, int a5)
{
  uint8x8_t *v5;
  uint8x8_t *v6;
  uint8x8_t *v7;
  uint8x8_t v8;
  uint8x8_t *v9;
  uint8x8_t v10;
  uint8x8_t *v11;
  uint8x8_t v12;
  uint8x8_t *v13;
  uint8x8_t v14;
  uint8x8_t *v15;
  uint8x8_t v16;
  uint8x8_t *v17;
  uint8x8_t v18;
  uint8x8_t *v19;
  uint8x8_t v20;
  uint8x8_t *v21;
  uint8x8_t v22;
  uint8x8_t *v23;
  uint8x8_t v24;
  uint8x8_t *v25;
  uint8x8_t v26;
  uint8x8_t *v27;
  uint8x8_t v28;
  uint8x8_t *v29;
  uint8x8_t v30;
  uint8x8_t v31;
  uint8x8_t *v32;

  v5 = (uint8x8_t *)((char *)a1 + a2);
  v6 = (uint8x8_t *)((char *)v5 + a2);
  v7 = (uint8x8_t *)((char *)v6 + a2);
  v8 = *a3;
  v9 = (uint8x8_t *)((char *)a3 + a5);
  v10 = *v9;
  v11 = (uint8x8_t *)((char *)v9 + a5);
  v12 = *v11;
  v13 = (uint8x8_t *)((char *)v11 + a5);
  v14 = *v13;
  if (a4)
  {
    v15 = (uint8x8_t *)((char *)a4 + a5 + a5);
    v16 = *v15;
    v17 = (uint8x8_t *)((char *)v15 + a5);
    v18 = *v17;
    v19 = (uint8x8_t *)((char *)v17 + a5);
    v8 = vrhadd_u8(v8, *a4);
    v10 = vrhadd_u8(v10, *(uint8x8_t *)((char *)a4 + a5));
    v12 = vrhadd_u8(v12, v16);
    v14 = vrhadd_u8(v14, v18);
  }
  else
  {
    v19 = 0;
  }
  v20 = *v7;
  v21 = (uint8x8_t *)((char *)v7 + a2);
  v22 = *v21;
  v23 = (uint8x8_t *)((char *)v21 + a2);
  v24 = *v23;
  v25 = (uint8x8_t *)((char *)v23 + a2);
  v26 = *(uint8x8_t *)((char *)v13 + a5);
  v27 = (uint8x8_t *)((char *)v13 + a5 + a5);
  v28 = *v27;
  v29 = (uint8x8_t *)((char *)v27 + a5);
  v30 = *v29;
  v31 = *(uint8x8_t *)((char *)v29 + a5);
  if (v19)
  {
    v32 = (uint8x8_t *)((char *)v19 + a5 + a5);
    v26 = vrhadd_u8(v26, *v19);
    v28 = vrhadd_u8(v28, *(uint8x8_t *)((char *)v19 + a5));
    v30 = vrhadd_u8(v30, *v32);
    v31 = vrhadd_u8(v31, *(uint8x8_t *)((char *)v32 + a5));
  }
  return vaddlvq_u16((uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vabal_u8(vabdl_u8(*v6, v12), *v25, v30), (int16x8_t)vabal_u8(vabdl_u8(v20, v14), *(uint8x8_t *)((char *)v25 + a2), v31)), vaddq_s16((int16x8_t)vabal_u8(vabdl_u8(*v5, v10), v24, v28), (int16x8_t)vabal_u8(vabdl_u8(*a1, v8), v22, v26))));
}

double sub_215FC0A44(uint8x16_t **a1, _WORD *a2)
{
  double result;

  *(_QWORD *)&result = sub_215FC0A68(a1[7], (uint8x16_t *)((char *)a1[3] + *((int *)a1 + 1) * (uint64_t)*((int *)a1 + 4) + *(int *)a1), *((_DWORD *)a1 + 4), a2);
  return result;
}

__int16 sub_215FC0A68@<H0>(uint8x16_t *a1@<X0>, uint8x16_t *a2@<X1>, int a3@<W2>, _WORD *a4@<X3>)
{
  uint8x16_t v4;
  uint8x16_t v5;
  uint8x16_t v6;
  uint8x16_t *v7;
  uint8x16_t v8;
  uint8x16_t *v9;
  uint8x16_t v10;
  uint8x16_t *v11;
  uint8x16_t v12;
  uint8x16_t *v13;
  uint16x8_t v14;
  uint16x8_t v15;
  uint8x16_t v16;
  uint8x16_t v17;
  uint8x16_t v18;
  uint8x16_t v19;
  uint8x16_t v20;
  uint8x16_t *v21;
  uint8x16_t v22;
  uint8x16_t *v23;
  uint8x16_t v24;
  uint8x16_t *v25;
  uint8x16_t v26;
  uint8x16_t *v27;
  uint8x16_t v28;
  uint8x16_t v29;
  uint8x16_t v30;
  uint8x16_t v31;
  uint8x16_t v32;
  uint8x16_t *v33;
  uint8x16_t v34;
  uint8x16_t *v35;
  uint8x16_t v36;
  uint8x16_t *v37;
  uint8x16_t v38;
  uint8x16_t *v39;
  uint16x8_t v40;
  uint16x8_t v41;
  uint8x16_t v42;
  uint8x16_t v43;
  uint8x16_t v44;
  uint8x16_t v45;
  uint8x16_t v46;
  uint8x16_t *v47;
  uint8x16_t v48;
  uint8x8_t *v49;
  uint8x16_t v50;
  int16x8_t v51;
  int16x8_t v52;
  int16x8_t v53;
  __int16 v54;
  __int16 v55;
  __int16 result;

  v4 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v7 = (uint8x16_t *)((char *)a2 + a3);
  v8 = *v7;
  v9 = (uint8x16_t *)((char *)v7 + a3);
  v10 = *v9;
  v11 = (uint8x16_t *)((char *)v9 + a3);
  v12 = *v11;
  v13 = (uint8x16_t *)((char *)v11 + a3);
  v14 = vabdl_u8(*(uint8x8_t *)v4.i8, *(uint8x8_t *)v8.i8);
  v15 = vabdl_high_u8(v4, v8);
  v17 = a1[4];
  v16 = a1[5];
  v19 = a1[6];
  v18 = a1[7];
  v20 = *v13;
  v21 = (uint8x16_t *)((char *)v13 + a3);
  v22 = *v21;
  v23 = (uint8x16_t *)((char *)v21 + a3);
  v24 = *v23;
  v25 = (uint8x16_t *)((char *)v23 + a3);
  v26 = *v25;
  v27 = (uint8x16_t *)((char *)v25 + a3);
  v29 = a1[8];
  v28 = a1[9];
  v31 = a1[10];
  v30 = a1[11];
  v32 = *v27;
  v33 = (uint8x16_t *)((char *)v27 + a3);
  v34 = *v33;
  v35 = (uint8x16_t *)((char *)v33 + a3);
  v36 = *v35;
  v37 = (uint8x16_t *)((char *)v35 + a3);
  v38 = *v37;
  v39 = (uint8x16_t *)((char *)v37 + a3);
  v40 = vabdl_u8(*(uint8x8_t *)v28.i8, *(uint8x8_t *)v34.i8);
  v41 = vabdl_high_u8(v28, v34);
  v43 = a1[12];
  v42 = a1[13];
  v45 = a1[14];
  v44 = a1[15];
  v46 = *v39;
  v47 = (uint8x16_t *)((char *)v39 + a3);
  v48 = *v47;
  v49 = (uint8x8_t *)&v47->i8[a3];
  v50 = *(uint8x16_t *)&v49->i8[a3];
  v51 = (int16x8_t)vabal_high_u8(vabal_high_u8(vabal_high_u8(vabal_high_u8(vabal_high_u8(vabal_high_u8(vabal_high_u8(v15, *a1, *a2), v6, v10), v5, v12), v17, v20), v16, v22), v19, v24), v18, v26);
  v52 = (int16x8_t)vabal_u8(vabal_u8(vabal_u8(vabal_u8(vabal_u8(vabal_u8(vabal_u8(v40, *(uint8x8_t *)v29.i8, *(uint8x8_t *)v32.i8), *(uint8x8_t *)v31.i8, *(uint8x8_t *)v36.i8), *(uint8x8_t *)v30.i8, *(uint8x8_t *)v38.i8), *(uint8x8_t *)v43.i8, *(uint8x8_t *)v46.i8), *(uint8x8_t *)v42.i8, *(uint8x8_t *)v48.i8), *(uint8x8_t *)v45.i8, *v49), *(uint8x8_t *)v44.i8, *(uint8x8_t *)v50.i8);
  v53 = (int16x8_t)vabal_high_u8(vabal_high_u8(vabal_high_u8(vabal_high_u8(vabal_high_u8(vabal_high_u8(vabal_high_u8(v41, v29, v32), v31, v36), v30, v38), v43, v46), v42, v48), v45, *(uint8x16_t *)v49->i8), v44, v50);
  v14.i16[0] = vaddvq_s16((int16x8_t)vabal_u8(vabal_u8(vabal_u8(vabal_u8(vabal_u8(vabal_u8(vabal_u8(v14, *(uint8x8_t *)a1->i8, *(uint8x8_t *)a2->i8), *(uint8x8_t *)v6.i8, *(uint8x8_t *)v10.i8), *(uint8x8_t *)v5.i8, *(uint8x8_t *)v12.i8), *(uint8x8_t *)v17.i8, *(uint8x8_t *)v20.i8), *(uint8x8_t *)v16.i8, *(uint8x8_t *)v22.i8), *(uint8x8_t *)v19.i8, *(uint8x8_t *)v24.i8), *(uint8x8_t *)v18.i8, *(uint8x8_t *)v26.i8));
  a4[12] = v14.i16[0];
  v51.i16[0] = vaddvq_s16(v51);
  a4[13] = v51.i16[0];
  v54 = v51.i16[0];
  v51.i16[0] = vaddvq_s16(v52);
  a4[14] = v51.i16[0];
  v55 = v51.i16[0];
  result = vaddvq_s16(v53);
  a4[15] = result;
  a4[8] = v55 + v14.i16[0];
  a4[9] = result + v54;
  a4[4] = v54 + v14.i16[0];
  a4[5] = result + v55;
  *a4 = result + v54 + v55 + v14.i16[0];
  return result;
}

int16x4_t sub_215FC0BFC(uint8x8_t *a1, int a2, uint8x8_t *a3, uint8x8_t *a4, uint8x8_t *a5, uint8x8_t *a6, int a7, int16x4_t *a8)
{
  int8x16_t v8;
  int8x16_t v9;
  int8x16_t v10;
  int8x16_t v11;
  uint8x8_t *v12;
  int v13;
  uint64_t v14;
  int16x4_t result;

  v8 = (int8x16_t)vabal_high_u8(vabdl_u8(*a1, *a3), *(uint8x16_t *)a1->i8, *(uint8x16_t *)a3->i8);
  v9 = (int8x16_t)vabal_high_u8(vabdl_u8(*a1, *a4), *(uint8x16_t *)a1->i8, *(uint8x16_t *)a4->i8);
  v10 = (int8x16_t)vabal_high_u8(vabdl_u8(*a1, *a5), *(uint8x16_t *)a1->i8, *(uint8x16_t *)a5->i8);
  v11 = (int8x16_t)vabal_high_u8(vabdl_u8(*a1, *a6), *(uint8x16_t *)a1->i8, *(uint8x16_t *)a6->i8);
  v12 = (uint8x8_t *)((char *)a1 + a2);
  v13 = 15;
  v14 = a7;
  do
  {
    v8 = (int8x16_t)vabal_high_u8(vabal_u8((uint16x8_t)v8, *v12, *(uint8x8_t *)((char *)a3 + v14)), *(uint8x16_t *)v12->i8, *(uint8x16_t *)&a3->i8[v14]);
    v9 = (int8x16_t)vabal_high_u8(vabal_u8((uint16x8_t)v9, *v12, *(uint8x8_t *)((char *)a4 + v14)), *(uint8x16_t *)v12->i8, *(uint8x16_t *)&a4->i8[v14]);
    v10 = (int8x16_t)vabal_high_u8(vabal_u8((uint16x8_t)v10, *v12, *(uint8x8_t *)((char *)a5 + v14)), *(uint8x16_t *)v12->i8, *(uint8x16_t *)&a5->i8[v14]);
    v11 = (int8x16_t)vabal_high_u8(vabal_u8((uint16x8_t)v11, *v12, *(uint8x8_t *)((char *)a6 + v14)), *(uint8x16_t *)v12->i8, *(uint8x16_t *)&a6->i8[v14]);
    v12 = (uint8x8_t *)((char *)v12 + a2);
    v14 += a7;
    --v13;
  }
  while (v13);
  result = vpadd_s16(vpadd_s16(vadd_s16(*(int16x4_t *)v8.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL)), vadd_s16(*(int16x4_t *)v9.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v9, v9, 8uLL))), vpadd_s16(vadd_s16(*(int16x4_t *)v10.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v10, v10, 8uLL)), vadd_s16(*(int16x4_t *)v11.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v11, v11, 8uLL))));
  *a8 = result;
  return result;
}

int16x4_t sub_215FC0CBC(uint8x8_t *a1, int a2, uint8x8_t *a3, uint8x8_t *a4, uint8x8_t *a5, int a6, int16x4_t *a7)
{
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;
  uint8x8_t *v10;
  int v11;
  uint64_t v12;
  int16x4_t result;

  v7 = (int8x16_t)vabal_high_u8(vabdl_u8(*a1, *a3), *(uint8x16_t *)a1->i8, *(uint8x16_t *)a3->i8);
  v8 = (int8x16_t)vabal_high_u8(vabdl_u8(*a1, *a4), *(uint8x16_t *)a1->i8, *(uint8x16_t *)a4->i8);
  v9 = (int8x16_t)vabal_high_u8(vabdl_u8(*a1, *a5), *(uint8x16_t *)a1->i8, *(uint8x16_t *)a5->i8);
  v10 = (uint8x8_t *)((char *)a1 + a2);
  v11 = 15;
  v12 = a6;
  do
  {
    v7 = (int8x16_t)vabal_high_u8(vabal_u8((uint16x8_t)v7, *v10, *(uint8x8_t *)((char *)a3 + v12)), *(uint8x16_t *)v10->i8, *(uint8x16_t *)&a3->i8[v12]);
    v8 = (int8x16_t)vabal_high_u8(vabal_u8((uint16x8_t)v8, *v10, *(uint8x8_t *)((char *)a4 + v12)), *(uint8x16_t *)v10->i8, *(uint8x16_t *)&a4->i8[v12]);
    v9 = (int8x16_t)vabal_high_u8(vabal_u8((uint16x8_t)v9, *v10, *(uint8x8_t *)((char *)a5 + v12)), *(uint8x16_t *)v10->i8, *(uint8x16_t *)&a5->i8[v12]);
    v10 = (uint8x8_t *)((char *)v10 + a2);
    v12 += a6;
    --v11;
  }
  while (v11);
  result = vpadd_s16(vpadd_s16(vadd_s16(*(int16x4_t *)v7.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v7, v7, 8uLL)), vadd_s16(*(int16x4_t *)v8.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL))), vpadd_s16(vadd_s16(*(int16x4_t *)v9.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v9, v9, 8uLL)), 0));
  *a7 = result;
  return result;
}

int16x4_t sub_215FC0D60(uint8x8_t *a1, int a2, uint8x8_t *a3, uint8x8_t *a4, uint8x8_t *a5, uint8x8_t *a6, int a7, int16x4_t *a8)
{
  int8x16_t v8;
  int8x16_t v9;
  int8x16_t v10;
  int8x16_t v11;
  uint8x8_t *v12;
  int v13;
  uint64_t v14;
  int16x4_t result;

  v8 = (int8x16_t)vabal_high_u8(vabdl_u8(*a1, *a3), *(uint8x16_t *)a1->i8, *(uint8x16_t *)a3->i8);
  v9 = (int8x16_t)vabal_high_u8(vabdl_u8(*a1, *a4), *(uint8x16_t *)a1->i8, *(uint8x16_t *)a4->i8);
  v10 = (int8x16_t)vabal_high_u8(vabdl_u8(*a1, *a5), *(uint8x16_t *)a1->i8, *(uint8x16_t *)a5->i8);
  v11 = (int8x16_t)vabal_high_u8(vabdl_u8(*a1, *a6), *(uint8x16_t *)a1->i8, *(uint8x16_t *)a6->i8);
  v12 = (uint8x8_t *)((char *)a1 + a2);
  v13 = 7;
  v14 = a7;
  do
  {
    v8 = (int8x16_t)vabal_high_u8(vabal_u8((uint16x8_t)v8, *v12, *(uint8x8_t *)((char *)a3 + v14)), *(uint8x16_t *)v12->i8, *(uint8x16_t *)&a3->i8[v14]);
    v9 = (int8x16_t)vabal_high_u8(vabal_u8((uint16x8_t)v9, *v12, *(uint8x8_t *)((char *)a4 + v14)), *(uint8x16_t *)v12->i8, *(uint8x16_t *)&a4->i8[v14]);
    v10 = (int8x16_t)vabal_high_u8(vabal_u8((uint16x8_t)v10, *v12, *(uint8x8_t *)((char *)a5 + v14)), *(uint8x16_t *)v12->i8, *(uint8x16_t *)&a5->i8[v14]);
    v11 = (int8x16_t)vabal_high_u8(vabal_u8((uint16x8_t)v11, *v12, *(uint8x8_t *)((char *)a6 + v14)), *(uint8x16_t *)v12->i8, *(uint8x16_t *)&a6->i8[v14]);
    v12 = (uint8x8_t *)((char *)v12 + a2);
    v14 += a7;
    --v13;
  }
  while (v13);
  result = vpadd_s16(vpadd_s16(vadd_s16(*(int16x4_t *)v8.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL)), vadd_s16(*(int16x4_t *)v9.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v9, v9, 8uLL))), vpadd_s16(vadd_s16(*(int16x4_t *)v10.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v10, v10, 8uLL)), vadd_s16(*(int16x4_t *)v11.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v11, v11, 8uLL))));
  *a8 = result;
  return result;
}

int16x4_t sub_215FC0E20(uint8x8_t *a1, int a2, uint8x8_t *a3, uint8x8_t *a4, uint8x8_t *a5, int a6, int16x4_t *a7)
{
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;
  uint8x8_t *v10;
  int v11;
  uint64_t v12;
  int16x4_t result;

  v7 = (int8x16_t)vabal_high_u8(vabdl_u8(*a1, *a3), *(uint8x16_t *)a1->i8, *(uint8x16_t *)a3->i8);
  v8 = (int8x16_t)vabal_high_u8(vabdl_u8(*a1, *a4), *(uint8x16_t *)a1->i8, *(uint8x16_t *)a4->i8);
  v9 = (int8x16_t)vabal_high_u8(vabdl_u8(*a1, *a5), *(uint8x16_t *)a1->i8, *(uint8x16_t *)a5->i8);
  v10 = (uint8x8_t *)((char *)a1 + a2);
  v11 = 7;
  v12 = a6;
  do
  {
    v7 = (int8x16_t)vabal_high_u8(vabal_u8((uint16x8_t)v7, *v10, *(uint8x8_t *)((char *)a3 + v12)), *(uint8x16_t *)v10->i8, *(uint8x16_t *)&a3->i8[v12]);
    v8 = (int8x16_t)vabal_high_u8(vabal_u8((uint16x8_t)v8, *v10, *(uint8x8_t *)((char *)a4 + v12)), *(uint8x16_t *)v10->i8, *(uint8x16_t *)&a4->i8[v12]);
    v9 = (int8x16_t)vabal_high_u8(vabal_u8((uint16x8_t)v9, *v10, *(uint8x8_t *)((char *)a5 + v12)), *(uint8x16_t *)v10->i8, *(uint8x16_t *)&a5->i8[v12]);
    v10 = (uint8x8_t *)((char *)v10 + a2);
    v12 += a6;
    --v11;
  }
  while (v11);
  result = vpadd_s16(vpadd_s16(vadd_s16(*(int16x4_t *)v7.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v7, v7, 8uLL)), vadd_s16(*(int16x4_t *)v8.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL))), vpadd_s16(vadd_s16(*(int16x4_t *)v9.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v9, v9, 8uLL)), 0));
  *a7 = result;
  return result;
}

int16x4_t sub_215FC0EC4(uint8x8_t *a1, int a2, uint8x8_t *a3, uint8x8_t *a4, uint8x8_t *a5, uint8x8_t *a6, int a7, int16x4_t *a8)
{
  int8x16_t v8;
  int8x16_t v9;
  int8x16_t v10;
  int8x16_t v11;
  uint8x8_t *v12;
  int v13;
  uint64_t v14;
  int16x4_t result;

  v8 = (int8x16_t)vabdl_u8(*a1, *a3);
  v9 = (int8x16_t)vabdl_u8(*a1, *a4);
  v10 = (int8x16_t)vabdl_u8(*a1, *a5);
  v11 = (int8x16_t)vabdl_u8(*a1, *a6);
  v12 = (uint8x8_t *)((char *)a1 + a2);
  v13 = 15;
  v14 = a7;
  do
  {
    v8 = (int8x16_t)vabal_u8((uint16x8_t)v8, *v12, *(uint8x8_t *)((char *)a3 + v14));
    v9 = (int8x16_t)vabal_u8((uint16x8_t)v9, *v12, *(uint8x8_t *)((char *)a4 + v14));
    v10 = (int8x16_t)vabal_u8((uint16x8_t)v10, *v12, *(uint8x8_t *)((char *)a5 + v14));
    v11 = (int8x16_t)vabal_u8((uint16x8_t)v11, *v12, *(uint8x8_t *)((char *)a6 + v14));
    v12 = (uint8x8_t *)((char *)v12 + a2);
    v14 += a7;
    --v13;
  }
  while (v13);
  result = vpadd_s16(vpadd_s16(vadd_s16(*(int16x4_t *)v8.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL)), vadd_s16(*(int16x4_t *)v9.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v9, v9, 8uLL))), vpadd_s16(vadd_s16(*(int16x4_t *)v10.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v10, v10, 8uLL)), vadd_s16(*(int16x4_t *)v11.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v11, v11, 8uLL))));
  *a8 = result;
  return result;
}

int16x4_t sub_215FC0F64(uint8x8_t *a1, int a2, uint8x8_t *a3, uint8x8_t *a4, uint8x8_t *a5, int a6, int16x4_t *a7)
{
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;
  uint8x8_t *v10;
  int v11;
  uint64_t v12;
  int16x4_t result;

  v7 = (int8x16_t)vabdl_u8(*a1, *a3);
  v8 = (int8x16_t)vabdl_u8(*a1, *a4);
  v9 = (int8x16_t)vabdl_u8(*a1, *a5);
  v10 = (uint8x8_t *)((char *)a1 + a2);
  v11 = 15;
  v12 = a6;
  do
  {
    v7 = (int8x16_t)vabal_u8((uint16x8_t)v7, *v10, *(uint8x8_t *)((char *)a3 + v12));
    v8 = (int8x16_t)vabal_u8((uint16x8_t)v8, *v10, *(uint8x8_t *)((char *)a4 + v12));
    v9 = (int8x16_t)vabal_u8((uint16x8_t)v9, *v10, *(uint8x8_t *)((char *)a5 + v12));
    v10 = (uint8x8_t *)((char *)v10 + a2);
    v12 += a6;
    --v11;
  }
  while (v11);
  result = vpadd_s16(vpadd_s16(vadd_s16(*(int16x4_t *)v7.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v7, v7, 8uLL)), vadd_s16(*(int16x4_t *)v8.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL))), vpadd_s16(vadd_s16(*(int16x4_t *)v9.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v9, v9, 8uLL)), 0));
  *a7 = result;
  return result;
}

int16x4_t sub_215FC0FF0(uint8x8_t *a1, int a2, uint8x8_t *a3, uint8x8_t *a4, uint8x8_t *a5, uint8x8_t *a6, int a7, int16x4_t *a8)
{
  int8x16_t v8;
  int8x16_t v9;
  int8x16_t v10;
  int8x16_t v11;
  uint8x8_t *v12;
  int v13;
  uint64_t v14;
  int16x4_t result;

  v8 = (int8x16_t)vabdl_u8(*a1, *a3);
  v9 = (int8x16_t)vabdl_u8(*a1, *a4);
  v10 = (int8x16_t)vabdl_u8(*a1, *a5);
  v11 = (int8x16_t)vabdl_u8(*a1, *a6);
  v12 = (uint8x8_t *)((char *)a1 + a2);
  v13 = 7;
  v14 = a7;
  do
  {
    v8 = (int8x16_t)vabal_u8((uint16x8_t)v8, *v12, *(uint8x8_t *)((char *)a3 + v14));
    v9 = (int8x16_t)vabal_u8((uint16x8_t)v9, *v12, *(uint8x8_t *)((char *)a4 + v14));
    v10 = (int8x16_t)vabal_u8((uint16x8_t)v10, *v12, *(uint8x8_t *)((char *)a5 + v14));
    v11 = (int8x16_t)vabal_u8((uint16x8_t)v11, *v12, *(uint8x8_t *)((char *)a6 + v14));
    v12 = (uint8x8_t *)((char *)v12 + a2);
    v14 += a7;
    --v13;
  }
  while (v13);
  result = vpadd_s16(vpadd_s16(vadd_s16(*(int16x4_t *)v8.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL)), vadd_s16(*(int16x4_t *)v9.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v9, v9, 8uLL))), vpadd_s16(vadd_s16(*(int16x4_t *)v10.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v10, v10, 8uLL)), vadd_s16(*(int16x4_t *)v11.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v11, v11, 8uLL))));
  *a8 = result;
  return result;
}

int16x4_t sub_215FC1090(uint8x8_t *a1, int a2, uint8x8_t *a3, uint8x8_t *a4, uint8x8_t *a5, int a6, int16x4_t *a7)
{
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;
  uint8x8_t *v10;
  int v11;
  uint64_t v12;
  int16x4_t result;

  v7 = (int8x16_t)vabdl_u8(*a1, *a3);
  v8 = (int8x16_t)vabdl_u8(*a1, *a4);
  v9 = (int8x16_t)vabdl_u8(*a1, *a5);
  v10 = (uint8x8_t *)((char *)a1 + a2);
  v11 = 7;
  v12 = a6;
  do
  {
    v7 = (int8x16_t)vabal_u8((uint16x8_t)v7, *v10, *(uint8x8_t *)((char *)a3 + v12));
    v8 = (int8x16_t)vabal_u8((uint16x8_t)v8, *v10, *(uint8x8_t *)((char *)a4 + v12));
    v9 = (int8x16_t)vabal_u8((uint16x8_t)v9, *v10, *(uint8x8_t *)((char *)a5 + v12));
    v10 = (uint8x8_t *)((char *)v10 + a2);
    v12 += a6;
    --v11;
  }
  while (v11);
  result = vpadd_s16(vpadd_s16(vadd_s16(*(int16x4_t *)v7.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v7, v7, 8uLL)), vadd_s16(*(int16x4_t *)v8.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL))), vpadd_s16(vadd_s16(*(int16x4_t *)v9.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v9, v9, 8uLL)), 0));
  *a7 = result;
  return result;
}

uint16x8_t sub_215FC111C(uint8x16_t *a1, unsigned int a2, uint8x16_t *a3, unsigned int a4, uint16x8_t *a5, int a6)
{
  int v6;
  uint8x16_t v7;
  uint8x16_t v8;
  uint8x16_t v9;
  uint8x16_t v10;
  uint16x8_t v11;
  uint16x8_t result;

  v6 = a6 + 2;
  do
  {
    v7 = *a1;
    v8 = *a3;
    v9 = *(uint8x16_t *)((char *)a1 + a2);
    a1 = (uint8x16_t *)((char *)a1 + a2 + (unint64_t)a2);
    v10 = *(uint8x16_t *)((char *)a3 + a4);
    a3 = (uint8x16_t *)((char *)a3 + a4 + (unint64_t)a4);
    v11 = vsubl_u8(*(uint8x8_t *)v7.i8, *(uint8x8_t *)v8.i8);
    result = vsubl_high_u8(v7, v8);
    *a5 = v11;
    a5[1] = result;
    a5[2] = vsubl_u8(*(uint8x8_t *)v9.i8, *(uint8x8_t *)v10.i8);
    a5[3] = vsubl_high_u8(v9, v10);
    v6 -= 2;
    a5 += 4;
  }
  while (v6 > 2);
  return result;
}

uint16x8_t sub_215FC1174(uint8x8_t *a1, unsigned int a2, uint8x8_t *a3, unsigned int a4, uint16x8_t *a5, int a6)
{
  int v6;
  uint8x8_t v7;
  uint8x8_t v8;
  uint8x8_t v9;
  uint8x8_t v10;
  uint16x8_t result;

  v6 = a6 + 2;
  do
  {
    v7 = *a1;
    v8 = *a3;
    v9 = *(uint8x8_t *)((char *)a1 + a2);
    a1 = (uint8x8_t *)((char *)a1 + a2 + (unint64_t)a2);
    v10 = *(uint8x8_t *)((char *)a3 + a4);
    a3 = (uint8x8_t *)((char *)a3 + a4 + (unint64_t)a4);
    result = vsubl_u8(v7, v8);
    *a5 = result;
    a5[1] = vsubl_u8(v9, v10);
    a5 += 2;
    v6 -= 2;
  }
  while (v6 > 2);
  return result;
}

uint8x16_t sub_215FC11BC(uint8x8_t *a1, int a2, uint16x8_t *a3, int a4)
{
  int v4;
  uint8x16_t *v5;
  uint8x16_t v6;
  uint16x8_t v7;
  uint16x8_t v8;
  uint8x16_t result;

  v4 = a4 + 2;
  do
  {
    v5 = (uint8x16_t *)((char *)a1 + a2);
    v6 = *v5;
    v7 = a3[2];
    v8 = a3[3];
    *(int8x16_t *)a1->i8 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8(*a3, *a1)), (int16x8_t)vaddw_high_u8(a3[1], *(uint8x16_t *)a1->i8));
    a1 = (uint8x8_t *)&v5->i8[a2];
    result = (uint8x16_t)vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8(v7, *(uint8x8_t *)v6.i8)), (int16x8_t)vaddw_high_u8(v8, v6));
    *v5 = result;
    v4 -= 2;
    a3 += 4;
  }
  while (v4 > 2);
  return result;
}

int8x16_t *sub_215FC1218(int8x16_t *result, int a2, uint8x16_t *a3, uint16x8_t *a4, int a5)
{
  int v5;
  uint8x16_t v6;
  uint8x16_t v7;
  int8x16_t v8;

  v5 = a5 + 2;
  do
  {
    v6 = *a3;
    v7 = a3[1];
    a3 += 2;
    v8 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8(a4[2], *(uint8x8_t *)v7.i8)), (int16x8_t)vaddw_high_u8(a4[3], v7));
    *result = vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8(*a4, *(uint8x8_t *)v6.i8)), (int16x8_t)vaddw_high_u8(a4[1], v6));
    *(int8x16_t *)((char *)result + a2) = v8;
    result = (int8x16_t *)((char *)result + a2 + (uint64_t)a2);
    v5 -= 2;
    a4 += 4;
  }
  while (v5 > 2);
  return result;
}

int8x8_t sub_215FC1270(int8x8_t *a1, int a2, uint8x16_t *a3, uint16x8_t *a4)
{
  uint8x16_t v4;
  uint8x16_t v5;
  uint8x16_t v6;
  uint16x8_t v7;
  uint16x8_t v8;
  uint16x8_t v9;
  uint16x8_t v10;
  uint16x8_t v11;
  uint16x8_t v12;
  int8x8_t v13;
  int8x8_t result;

  v4 = a3[1];
  v5 = a3[2];
  v6 = a3[3];
  v7 = a4[2];
  v8 = a4[3];
  v9 = a4[4];
  v10 = a4[5];
  v11 = a4[6];
  v12 = a4[7];
  v13 = vqmovun_s16((int16x8_t)vaddw_high_u8(a4[1], *a3));
  *a1 = vqmovun_s16((int16x8_t)vaddw_u8(*a4, *(uint8x8_t *)a3->i8));
  *(int8x8_t *)((char *)a1 + a2) = v13;
  *(int8x8_t *)((char *)a1 + 2 * a2) = vqmovun_s16((int16x8_t)vaddw_u8(v7, *(uint8x8_t *)v4.i8));
  result = vqmovun_s16((int16x8_t)vaddw_high_u8(v12, v6));
  *(int8x8_t *)((char *)a1 + 3 * a2) = vqmovun_s16((int16x8_t)vaddw_high_u8(v8, v4));
  *(int8x8_t *)((char *)a1 + 4 * a2) = vqmovun_s16((int16x8_t)vaddw_u8(v9, *(uint8x8_t *)v5.i8));
  *(int8x8_t *)((char *)a1 + 5 * a2) = vqmovun_s16((int16x8_t)vaddw_high_u8(v10, v5));
  *(int8x8_t *)((char *)a1 + 6 * a2) = vqmovun_s16((int16x8_t)vaddw_u8(v11, *(uint8x8_t *)v6.i8));
  *(int8x8_t *)((char *)&a1[a2] - a2) = result;
  return result;
}

uint64_t sub_215FC1308(int16x8_t *a1, int16x8_t *a2)
{
  int16x8_t v2;
  int16x8_t v3;

  v2 = vsubq_s16(*a1, *a2);
  v3 = vsubq_s16(a1[1], a2[1]);
  return vaddvq_s32(vmlal_high_s16(vmlal_s16(vmlal_high_s16(vmull_s16(*(int16x4_t *)v2.i8, *(int16x4_t *)v2.i8), v2, v2), *(int16x4_t *)v3.i8, *(int16x4_t *)v3.i8), v3, v3));
}

uint64_t **sub_215FC1334()
{
  uint64_t **v0;
  uint64_t **v1;

  v0 = (uint64_t **)sub_2160CB5E8(0x10uLL);
  v1 = v0;
  if (v0 && sub_215FC1380((uint64_t)v0))
  {
    sub_215FC13E0(v1);
    free(v1);
    return 0;
  }
  return v1;
}

uint64_t sub_215FC1380(uint64_t a1)
{
  void *v2;
  uint64_t result;

  v2 = malloc_type_calloc(1uLL, 0x10uLL, 0x20040A4A59CD2uLL);
  *(_QWORD *)a1 = v2;
  if (!v2)
    return 4294958327;
  sub_215FC2234();
  result = 0;
  *(_QWORD *)(*(_QWORD *)a1 + 8) = 0;
  **(_QWORD **)a1 = 0;
  return result;
}

void sub_215FC13E0(uint64_t **a1)
{
  uint64_t *v2;
  uint64_t v3;

  v2 = *a1;
  if (v2)
  {
    if (v2[1])
    {
      MEMORY[0x2199F4C34](v2[1], 0x1030C40B34BA92BLL);
      (*a1)[1] = 0;
      v2 = *a1;
    }
    if (*v2)
    {
      v3 = sub_215FCDBA8(*v2);
      MEMORY[0x2199F4C34](v3, 0x1030C40708365FFLL);
      **a1 = 0;
      v2 = *a1;
    }
    free(v2);
    *a1 = 0;
  }
}

uint64_t sub_215FC1468(uint64_t result)
{
  *(_QWORD *)(**(_QWORD **)result + 16) = *(_QWORD *)(**(_QWORD **)result + 24);
  return result;
}

uint64_t sub_215FC147C(uint64_t **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int *v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  int v22;

  v10 = (*a1)[1];
  if (v10)
    MEMORY[0x2199F4C34](v10, 0x1030C40B34BA92BLL);
  (*a1)[1] = operator new();
  v11 = (*a1)[1];
  if (!v11)
    return 4294958327;
  *(_QWORD *)(v11 + 8) = v11 + 16;
  *(_DWORD *)(v11 + 16) = *(_DWORD *)(a2 + 1328);
  *(_DWORD *)(v11 + 20) = *(unsigned __int8 *)(a2 + 1337);
  *(_DWORD *)(v11 + 24) = *(unsigned __int8 *)(a2 + 1338);
  *(_DWORD *)(v11 + 28) = *(_DWORD *)(a3 + 72);
  *(_DWORD *)v11 = *(_DWORD *)(a4 + 16);
  *(_BYTE *)(v11 + 4) = *(_DWORD *)(a4 + 20);
  *(_BYTE *)(v11 + 40) = *(_BYTE *)(a4 + 32);
  *(_BYTE *)(v11 + 41) = *(_BYTE *)(a4 + 33);
  *(_BYTE *)(v11 + 42) = *(_DWORD *)(a4 + 64);
  *(_BYTE *)(v11 + 43) = *(_DWORD *)(a4 + 68);
  *(_WORD *)(v11 + 44) = *(unsigned __int8 *)(a4 + 2716);
  *(_DWORD *)(v11 + 48) = *(_DWORD *)(a4 + 2720);
  *(_QWORD *)(v11 + 32) = 0;
  v12 = **a1;
  if (v12)
  {
    v13 = sub_215FCDBA8(v12);
    MEMORY[0x2199F4C34](v13, 0x1030C40708365FFLL);
  }
  v14 = operator new();
  sub_215FCDBA4(v14, (*(_DWORD *)(a2 + 1328) + 1));
  **a1 = v14;
  if (!**a1)
    return 4294958327;
  v15 = *(unsigned int **)(a5 + 16);
  if (*(_BYTE *)(a5 + 36))
    v15 = (unsigned int *)((char *)v15 + 1);
  if ((unint64_t)v15 <= *(_QWORD *)(a5 + 24))
    v16 = v15;
  else
    v16 = *(unsigned int **)(a5 + 24);
  v17 = bswap32(*v16);
  *(_QWORD *)(a5 + 16) = v16;
  *(_DWORD *)(a5 + 32) = v17;
  *(_BYTE *)(a5 + 36) = 0;
  a1[1] = (uint64_t *)v16;
  v18 = *(_QWORD *)(a5 + 24) - (_QWORD)v16;
  v19 = **a1;
  v20 = (*a1)[1];
  v21 = *(_DWORD *)(v20 + 28) + *(_DWORD *)(v20 + 48) + 26;
  v22 = **(_DWORD **)(v20 + 8) + 1;
  sub_215FCDAC4(v19, v16, v18);
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(v19 + 24);
  sub_215FCD830(v19, *(char *)(v20 + 4), v22, *(__int16 *)(v20 + 44), v21);
  return 0;
}

void sub_215FC1660(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x2199F4C34](v1, 0x1030C40708365FFLL);
  _Unwind_Resume(a1);
}

uint64_t sub_215FC1684(uint64_t result)
{
  *(_QWORD *)(**(_QWORD **)result + 24) = *(_QWORD *)(**(_QWORD **)result + 16);
  return result;
}

uint64_t sub_215FC1698(uint64_t **a1, uint64_t a2)
{
  uint64_t v3;
  _DWORD *v5;
  int v6;
  int v7;
  unsigned int *v8;
  int v9;
  unint64_t v10;
  char *v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t result;

  v3 = **a1;
  if (v3)
  {
    sub_215FCDAB8(v3);
    v5 = (_DWORD *)**a1;
    v6 = v5[8] - v5[14];
    v7 = v5[16];
    v8 = *(unsigned int **)(a2 + 16);
    v9 = *(unsigned __int8 *)(a2 + 36);
    v10 = (8 * (*((_DWORD *)a1 + 2) - (_DWORD)v8) - v9 - v7 + 8 * v6 - 32);
    if ((int)v10 >= 1)
    {
      v11 = (char *)v8 + (v10 >> 3);
      v12 = (v10 & 7) + v9;
      LOBYTE(v9) = v12 & 7;
      v8 = (unsigned int *)&v11[v12 >> 3];
      v13 = bswap32(*v8);
      if ((unint64_t)v8 > *(_QWORD *)(a2 + 24))
        v8 = *(unsigned int **)(a2 + 24);
      v14 = v13 << v9;
      goto LABEL_8;
    }
    if ((v10 & 0x80000000) == 0)
    {
      v14 = *(_DWORD *)(a2 + 32);
LABEL_8:
      result = 0;
      *(_QWORD *)(a2 + 16) = v8;
      *(_DWORD *)(a2 + 32) = v14;
      *(_BYTE *)(a2 + 36) = v9;
      return result;
    }
    puts("{OptimizedCabacDecoder::EndSliceBody} bitstream parsing error!!!!!!!!!!!!!!");
  }
  return 4294958327;
}

BOOL sub_215FC1768(uint64_t **a1, unsigned int a2)
{
  uint64_t v3;
  _BOOL8 v4;

  v3 = **a1;
  v4 = sub_215FC2C90((unsigned int *)v3, (_BYTE *)(v3+ *(_DWORD *)(v3 + 76)+ (*(_BYTE *)(v3 + 112) & ~(*(_BYTE *)(v3 + 112) >> 1) & 1)+ (*(_BYTE *)(*(_QWORD *)(v3 + 104) + 48 * a2) & ~(*(_BYTE *)(*(_QWORD *)(v3 + 104)+ 48 * a2) >> 1) & 1u)+ 208));
  if (v4)
    sub_215FCD97C(v3, a2);
  return v4;
}

BOOL sub_215FC17EC(uint64_t **a1)
{
  return sub_215FC2DF0(**a1);
}

uint64_t sub_215FC17F8(uint64_t **a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int v11;
  int v12;
  BOOL v13;
  unsigned __int8 *v14;
  unsigned int v15;
  _DWORD *v16;
  int v17;
  int v18;
  unsigned int *v19;
  int v20;
  unint64_t v21;
  char *v22;
  unint64_t v23;
  unsigned int v24;
  unsigned int v25;
  int v26;

  *(_QWORD *)((*a1)[1] + 32) = a4;
  v8 = **a1;
  *(_WORD *)(v8 + 8) = 0;
  *(_BYTE *)(v8 + 10) = 0;
  *(_DWORD *)(v8 + 12) = 0;
  result = sub_215FC998C(**a1, (*a1)[1], a5, *a2, (uint64_t)a2, a4);
  if ((_DWORD)result)
    return result;
  v10 = *((_QWORD *)a2 + 5);
  v11 = *(unsigned __int8 *)(v10 + 1);
  v12 = *(unsigned __int8 *)(v10 + 2);
  if (*(_BYTE *)(v10 + 1))
    v13 = 0;
  else
    v13 = v12 == 25;
  if (v13)
  {
    v15 = 0;
    *(_BYTE *)(v10 + 54) = 0;
  }
  else
  {
    v14 = (unsigned __int8 *)*((_QWORD *)a2 + 6);
    v15 = sub_2160CC288(*(unsigned __int8 *)(v10 + 1), v12, *(unsigned __int8 *)(v10 + 3), (uint64_t)v14);
    if (!v15)
    {
      if (*((_DWORD *)v14 + 2) != 3 && *(_BYTE *)(*((_QWORD *)a2 + 5) + 1) && v14[272] == 4)
        sub_2160CC9E0(*v14, v11, v10 + 4, v10 + 20, (int *)(v10 + 36), (uint64_t)(v14 + 16), 0, 3);
      v15 = 0;
    }
  }
  if (*a1)
  {
    v16 = (_DWORD *)**a1;
    if (v16)
    {
      v17 = v16[8] - v16[14];
      v18 = v16[16];
      v19 = *(unsigned int **)(a3 + 16);
      v20 = *(unsigned __int8 *)(a3 + 36);
      v21 = (8 * (*((_DWORD *)a1 + 2) - (_DWORD)v19) - v20 - v18 + 8 * v17 - 32);
      if ((int)v21 >= 1)
      {
        v22 = (char *)v19 + (v21 >> 3);
        v23 = (v21 & 7) + v20;
        LOBYTE(v20) = v23 & 7;
        v19 = (unsigned int *)&v22[v23 >> 3];
        v24 = bswap32(*v19);
        if ((unint64_t)v19 > *(_QWORD *)(a3 + 24))
          v19 = *(unsigned int **)(a3 + 24);
        v25 = v24 << v20;
        goto LABEL_21;
      }
      if ((v21 & 0x80000000) == 0)
      {
        v25 = *(_DWORD *)(a3 + 32);
LABEL_21:
        v26 = 0;
        *(_QWORD *)(a3 + 16) = v19;
        *(_DWORD *)(a3 + 32) = v25;
        *(_BYTE *)(a3 + 36) = v20;
        goto LABEL_24;
      }
      puts("{OptimizedCabacDecoder::UpdateBitStreamPtr} bitstream parsing error!!!!!!!!!!!!!!");
    }
  }
  v26 = -8969;
LABEL_24:
  result = v26 | v15;
  if (!(_DWORD)result)
  {
    if (*(_QWORD *)(a3 + 16) - *(_QWORD *)a3 <= *(int *)(a3 + 12))
      return 0;
    else
      return 4294958327;
  }
  return result;
}

uint64_t sub_215FC19CC(uint64_t **a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int v11;
  int v12;
  BOOL v13;
  unsigned __int8 *v14;
  unsigned int v15;
  _DWORD *v16;
  int v17;
  int v18;
  unsigned int *v19;
  int v20;
  unint64_t v21;
  char *v22;
  unint64_t v23;
  unsigned int v24;
  unsigned int v25;
  int v26;

  *(_QWORD *)((*a1)[1] + 32) = a4;
  v8 = **a1;
  *(_WORD *)(v8 + 8) = 0;
  *(_BYTE *)(v8 + 10) = 0;
  *(_DWORD *)(v8 + 12) = 0;
  result = sub_215FCCB94(**a1, (*a1)[1], a5, *a2, (uint64_t)a2, a4);
  if ((_DWORD)result)
    return result;
  v10 = *((_QWORD *)a2 + 5);
  v11 = *(unsigned __int8 *)(v10 + 1);
  v12 = *(unsigned __int8 *)(v10 + 2);
  if (*(_BYTE *)(v10 + 1))
    v13 = 0;
  else
    v13 = v12 == 25;
  if (v13)
  {
    v15 = 0;
    *(_BYTE *)(v10 + 54) = 0;
  }
  else
  {
    v14 = (unsigned __int8 *)*((_QWORD *)a2 + 6);
    v15 = sub_2160CC288(*(unsigned __int8 *)(v10 + 1), v12, *(unsigned __int8 *)(v10 + 3), (uint64_t)v14);
    if (!v15)
    {
      if (*((_DWORD *)v14 + 2) != 3 && *(_BYTE *)(*((_QWORD *)a2 + 5) + 1) && v14[272] == 4)
        sub_2160CC9E0(*v14, v11, v10 + 4, v10 + 20, (int *)(v10 + 36), (uint64_t)(v14 + 16), 0, 3);
      v15 = 0;
    }
  }
  if (*a1)
  {
    v16 = (_DWORD *)**a1;
    if (v16)
    {
      v17 = v16[8] - v16[14];
      v18 = v16[16];
      v19 = *(unsigned int **)(a3 + 16);
      v20 = *(unsigned __int8 *)(a3 + 36);
      v21 = (8 * (*((_DWORD *)a1 + 2) - (_DWORD)v19) - v20 - v18 + 8 * v17 - 32);
      if ((int)v21 >= 1)
      {
        v22 = (char *)v19 + (v21 >> 3);
        v23 = (v21 & 7) + v20;
        LOBYTE(v20) = v23 & 7;
        v19 = (unsigned int *)&v22[v23 >> 3];
        v24 = bswap32(*v19);
        if ((unint64_t)v19 > *(_QWORD *)(a3 + 24))
          v19 = *(unsigned int **)(a3 + 24);
        v25 = v24 << v20;
        goto LABEL_21;
      }
      if ((v21 & 0x80000000) == 0)
      {
        v25 = *(_DWORD *)(a3 + 32);
LABEL_21:
        v26 = 0;
        *(_QWORD *)(a3 + 16) = v19;
        *(_DWORD *)(a3 + 32) = v25;
        *(_BYTE *)(a3 + 36) = v20;
        goto LABEL_24;
      }
      puts("{OptimizedCabacDecoder::UpdateBitStreamPtr} bitstream parsing error!!!!!!!!!!!!!!");
    }
  }
  v26 = -8969;
LABEL_24:
  result = v26 | v15;
  if (!(_DWORD)result)
  {
    if (*(_QWORD *)(a3 + 16) - *(_QWORD *)a3 <= *(int *)(a3 + 12))
      return 0;
    else
      return 4294958327;
  }
  return result;
}

uint64_t sub_215FC1BA0(uint64_t **a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  unsigned __int8 *v15;
  uint64_t v16;
  int v17;
  unsigned int v18;
  uint64_t result;
  unsigned int v20;
  int v21;
  uint8x8_t v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  int v31;
  char v32;
  int v33;
  char *v34;
  uint64_t v35;
  int v36;
  char v37;
  int v38;
  char *v39;
  uint64_t v40;
  int v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  int v46;
  BOOL v47;
  _BOOL4 v48;
  uint64_t v49;
  char *v50;
  char v51;
  unsigned __int8 *v52;
  char v53;
  char v54;
  uint64_t i;
  uint64_t v56;
  unsigned __int8 *v57;
  int v58;
  uint64_t v59;
  unsigned __int16 v60;
  unsigned __int8 v61;
  uint64_t v62;
  unsigned __int16 v63;
  unsigned __int8 v64;
  char v65;
  int v66;
  char v67;
  _BYTE *v68;
  unsigned __int8 *v69;
  unsigned int v70;
  BOOL v71;
  char v72;
  char v73;
  unsigned int *v74;
  unsigned int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  __int16 v80;
  __int16 v81;
  _BYTE v82[32];
  __int128 v83;
  __int128 v84;
  __int128 v85;
  _OWORD v86[4];
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;

  v98 = *MEMORY[0x24BDAC8D0];
  v10 = *((_QWORD *)a2 + 22) + 80;
  *(_QWORD *)((*a1)[1] + 32) = *((_QWORD *)a2 + 7);
  bzero(*((void **)a2 + 7), 0x330uLL);
  v97 = 0;
  v95 = 0u;
  v96 = 0u;
  v93 = 0u;
  v94 = 0u;
  v91 = 0u;
  v92 = 0u;
  v89 = 0u;
  v90 = 0u;
  v88 = 0u;
  v11 = **a1;
  *(_WORD *)(v11 + 8) = 0;
  *(_BYTE *)(v11 + 10) = 0;
  *(_DWORD *)(v11 + 12) = 0;
  v12 = sub_215FC67C0(**a1, (*a1)[1], (uint64_t)&v88, v10, *a2, (uint64_t)a2, a6);
  if ((v12 & 0x80000000) != 0)
    return 4294958327;
  v13 = v12;
  v86[1] = v94;
  v86[2] = v95;
  v86[3] = v96;
  v87 = v97;
  v83 = v90;
  v84 = v91;
  v85 = v92;
  v86[0] = v93;
  *(_OWORD *)v82 = v88;
  *(_OWORD *)&v82[16] = v89;
  v14 = *((unsigned __int8 *)a2 + 28);
  v16 = *((_QWORD *)a2 + 5);
  v15 = (unsigned __int8 *)*((_QWORD *)a2 + 6);
  v17 = *((unsigned __int8 *)a2 + 31);
  v81 = 0;
  v18 = v88;
  LODWORD(result) = sub_2160CC60C(v14, v88, (char *)&v81 + 1, &v81);
  if (!(_DWORD)result)
  {
    *(_BYTE *)v16 = v18;
    v20 = HIBYTE(v81);
    *(_BYTE *)(v16 + 1) = HIBYTE(v81);
    v21 = v81;
    *(_BYTE *)(v16 + 2) = v81;
    if (v20 || v21 != 25)
    {
      LODWORD(result) = sub_2160CC688(v20, v21, *(unsigned __int8 *)(v16 + 3), (uint64_t)v15, *((unsigned __int8 *)a2 + 31));
      if (!(_DWORD)result)
      {
        v23 = *((_DWORD *)v15 + 2);
        if (v23 == 3)
          goto LABEL_113;
        v24 = v15[272];
        if (*(_BYTE *)(*((_QWORD *)a2 + 5) + 1) && (_DWORD)v24 == 4)
        {
          v25 = HIBYTE(v81);
          v78 = v81;
          v79 = *((_DWORD *)v15 + 2);
          v76 = v15[3];
          v77 = v15[2];
          v22.i32[0] = *(_DWORD *)&v82[20];
          *(uint32x4_t *)(v16 + 4) = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(v22));
          v26 = v16 + 4;
          v27 = v16 + 20;
          v28 = v16 + 36;
          LODWORD(result) = sub_2160CC9E0(*v15, *(unsigned __int8 *)(v16 + 1), v16 + 4, v16 + 20, (int *)(v16 + 36), (uint64_t)(v15 + 16), 0, 3);
          if ((_DWORD)result)
            goto LABEL_120;
          v29 = (unint64_t)v82 | 0xC;
          if ((v17 == 2 || v77) && (v25 != 2 || v78 != 4))
          {
            v30 = 0;
            v31 = 0;
            do
            {
              if (v25 == 3 && !*(_DWORD *)(v26 + 4 * v30) || *(_DWORD *)(v27 + 4 * v30) == 5)
                v32 = 32;
              else
                v32 = *(_BYTE *)(v29 + v30);
              if (*(int *)(v28 + 4 * v30) >= 1)
              {
                v33 = 0;
                v34 = (char *)&v15[16 * v31 + 24];
                do
                {
                  *v34 = v32;
                  v34 += 16;
                  ++v33;
                }
                while (v33 < *(_DWORD *)(v28 + 4 * v30));
                v31 += v33;
              }
              ++v30;
            }
            while (v30 != 4);
          }
          if ((v17 == 2 || v76) && (v25 != 2 || v78 != 4))
          {
            v35 = 0;
            v36 = 0;
            do
            {
              if (v25 == 3 && !*(_DWORD *)(v26 + 4 * v35) || *(_DWORD *)(v27 + 4 * v35) == 4)
                v37 = 32;
              else
                v37 = *(_BYTE *)(v35 + v29 + 4);
              if (*(int *)(v28 + 4 * v35) >= 1)
              {
                v38 = 0;
                v39 = (char *)&v15[16 * v36 + 25];
                do
                {
                  *v39 = v37;
                  v39 += 16;
                  ++v38;
                }
                while (v38 < *(_DWORD *)(v28 + 4 * v35));
                v36 += v38;
              }
              ++v35;
            }
            while (v35 != 4);
          }
          v40 = 0;
          v41 = 0;
          v42 = (char *)v86 + 10;
          v23 = v79;
          do
          {
            if (*(int *)(v28 + 4 * v40) >= 1)
            {
              v43 = 0;
              v44 = (uint64_t)&v15[16 * v41 + 22];
              v45 = v42;
              do
              {
                *(_DWORD *)(v44 - 6) = *(_DWORD *)(v45 - 66);
                *(_DWORD *)(v44 - 2) = *(_DWORD *)(v45 - 2);
                ++v43;
                v44 += 16;
                v45 += 4;
              }
              while (v43 < *(int *)(v28 + 4 * v40));
              v41 += v43;
            }
            ++v40;
            v42 += 16;
          }
          while (v40 != 4);
        }
        else if (*(_BYTE *)(*((_QWORD *)a2 + 5) + 1))
        {
          v46 = v15[3];
          v47 = v17 != 2 && v15[2] == 0;
          v48 = !v47;
          if ((_DWORD)v24 == 2)
          {
            if (v48)
            {
              v49 = 0;
              v50 = (char *)(v15 + 24);
              do
              {
                if (v50[7] == 5)
                  v51 = 32;
                else
                  v51 = *(_BYTE *)(((unint64_t)v82 | 0xC) + v49);
                *v50 = v51;
                v50 += 16;
                ++v49;
              }
              while (v49 != 2);
            }
            v52 = v15 + 16;
            if (v17 == 2 || v46)
            {
              v53 = v82[14];
              if (v15[31] == 4)
                v53 = 32;
              v15[25] = v53;
              if (v15[47] == 4)
                v54 = 32;
              else
                v54 = v82[15];
              v15[41] = v54;
            }
            for (i = 0; i != 8; i += 4)
            {
              if (v52[15] != 5)
                *(_DWORD *)v52 = *(_DWORD *)&v82[i + 16];
              v52 += 16;
            }
            v56 = 0;
            v57 = v15 + 20;
            do
            {
              if (v57[11] != 4)
                *(_DWORD *)v57 = *(_DWORD *)&v82[v56 + 24];
              v56 += 4;
              v57 += 16;
            }
            while (v56 != 8);
          }
          else
          {
            if (v48)
            {
              if (v15[31] == 5)
                v65 = 32;
              else
                v65 = v82[12];
              v15[24] = v65;
            }
            v66 = v15[31];
            if (v17 == 2 || v46)
            {
              v67 = v82[13];
              if (v66 == 4)
                v67 = 32;
              v15[25] = v67;
            }
            if (v66 != 5)
              *((_DWORD *)v15 + 4) = *(_DWORD *)&v82[14];
            if ((_DWORD)v24)
            {
              v68 = &v82[20];
              v69 = v15 + 20;
              do
              {
                if (v69[11] != 4)
                  *(_DWORD *)v69 = *(_DWORD *)(v68 - 2);
                v68 += 4;
                v69 += 16;
                --v24;
              }
              while (v24);
            }
          }
        }
        else
        {
          v58 = *((_DWORD *)v15 + 2);
          if (v23 == 1)
          {
            v59 = 0;
            v60 = *(_WORD *)&v82[12];
            do
            {
              v15[v59 + 305] = v60 & 1;
              if ((v60 & 1) != 0)
                v61 = 0;
              else
                v61 = v82[v59 + 29];
              v15[v59 + 325] = v61;
              v60 >>= 1;
              --v59;
            }
            while (v59 != -16);
            v58 = *((_DWORD *)v15 + 2);
          }
          if (v58 == 7)
          {
            v62 = 0;
            v63 = *(_WORD *)&v82[12];
            do
            {
              v15[v62 + 309] = v63 & 1;
              if ((v63 & 1) != 0)
                v64 = 0;
              else
                v64 = v82[v62 + 17];
              v15[v62 + 329] = v64;
              v63 >>= 1;
              --v62;
            }
            while (v62 != -4);
          }
          v15[289] = v82[30];
        }
        if (v23 != 2)
LABEL_113:
          v70 = HIWORD(v18) & 0x3F;
        else
          v70 = 0;
        v80 = 0;
        LODWORD(result) = sub_2160CC930(*(unsigned __int8 *)(v16 + 1), *(unsigned __int8 *)(v16 + 2), v70, &v80, (char *)&v80 + 1, 0, 0);
        *(_BYTE *)(v16 + 53) = v80;
        *(_BYTE *)(v16 + 52) = HIBYTE(v80);
        if (v70)
          v71 = 1;
        else
          v71 = v23 == 2;
        v72 = v82[8];
        if (!v71)
          v72 = 0;
        *(_BYTE *)(v16 + 54) = v72;
      }
    }
    else
    {
      LODWORD(result) = 0;
      *(_BYTE *)(v16 + 54) = 0;
    }
  }
LABEL_120:
  v73 = ((v13 & 7) + *(_BYTE *)(a5 + 36)) & 7;
  v74 = (unsigned int *)(*(_QWORD *)(a5 + 16)
                       + ((unint64_t)v13 >> 3)
                       + ((unint64_t)((v13 & 7) + *(unsigned __int8 *)(a5 + 36)) >> 3));
  v75 = bswap32(*v74);
  if ((unint64_t)v74 > *(_QWORD *)(a5 + 24))
    v74 = *(unsigned int **)(a5 + 24);
  *(_QWORD *)(a5 + 16) = v74;
  *(_DWORD *)(a5 + 32) = v75 << v73;
  *(_BYTE *)(a5 + 36) = v73;
  if ((uint64_t)v74 - *(_QWORD *)a5 <= *(int *)(a5 + 12))
    return result;
  else
    return 4294958327;
}

uint64_t sub_215FC2234()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  __int128 v10;
  uint64_t v11;
  __int128 *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  __int128 *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  __int128 *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  int v45;
  char v46;
  char *v47;
  uint64_t i;
  int v49;
  char v50;
  char *v51;
  int v52;
  char v53;
  char *v54;
  int v55;
  char v56;
  char *v57;
  int v58;
  char v59;
  char *v60;
  uint64_t result;

  if ((byte_254E15FA0 & 1) == 0)
  {
    v0 = 0;
    byte_254E15FA0 = 1;
    dword_254E15FA1 = 922815232;
    word_254E15FA5 = 17664;
    unk_254E15FA7 = xmmword_2160ED110;
    unk_254E15FB7 = 0x7FE272EB7FE55FEELL;
    unk_254E15FBF = xmmword_2160ED120;
    unk_254E15FCF = unk_2160ED130;
    unk_254E15FDF = 0x7DEA4CF952FB38FCLL;
    unk_254E16027 = xmmword_2160ED188;
    unk_254E16037 = unk_2160ED198;
    unk_254E16047 = xmmword_2160ED1A8;
    unk_254E15FE7 = xmmword_2160ED148;
    unk_254E15FF7 = unk_2160ED158;
    unk_254E16007 = xmmword_2160ED168;
    unk_254E16017 = unk_2160ED178;
    xmmword_254E16071 = unk_2160ED1D2;
    unk_254E16081 = xmmword_2160ED1E2;
    xmmword_254E16051 = *(__int128 *)((char *)&xmmword_2160ED1A8 + 10);
    unk_254E16061 = xmmword_2160ED1C2;
    unk_254E160CB = unk_2160ED22C;
    xmmword_254E160B1 = xmmword_2160ED212;
    unk_254E160C1 = unk_2160ED222;
    xmmword_254E16091 = unk_2160ED1F2;
    unk_254E160A1 = xmmword_2160ED202;
    word_254E1613B = 25074;
    xmmword_254E160DB = xmmword_2160ED23C;
    unk_254E160EB = unk_2160ED24C;
    xmmword_254E1611B = xmmword_2160ED27C;
    unk_254E1612B = unk_2160ED28C;
    xmmword_254E160FB = xmmword_2160ED25C;
    unk_254E1610B = unk_2160ED26C;
    xmmword_254E1615F = xmmword_2160ED2BE;
    unk_254E1616F = unk_2160ED2CE;
    xmmword_254E1613F = xmmword_2160ED29E;
    unk_254E1614F = unk_2160ED2AE;
    unk_254E161A9 = *(__int128 *)((char *)&xmmword_2160ED2FE + 10);
    xmmword_254E1618F = unk_2160ED2EE;
    unk_254E1619F = xmmword_2160ED2FE;
    xmmword_254E1617F = xmmword_2160ED2DE;
    xmmword_254E161D9 = xmmword_2160ED338;
    unk_254E161E9 = unk_2160ED348;
    xmmword_254E161B9 = xmmword_2160ED318;
    unk_254E161C9 = unk_2160ED328;
    unk_254E16223 = *(__int128 *)((char *)&xmmword_2160ED378 + 10);
    xmmword_254E16209 = unk_2160ED368;
    unk_254E16219 = xmmword_2160ED378;
    v1 = &dword_254E16233;
    xmmword_254E161F9 = xmmword_2160ED358;
    do
    {
      *v1 = *(_DWORD *)((char *)&unk_2160ED392 + v0);
      *((_WORD *)v1 + 2) = *(_WORD *)((char *)&unk_2160ED392 + v0 + 4);
      v0 += 8;
      v1 = (int *)((char *)v1 + 658);
    }
    while (v0 != 24);
    v2 = 0;
    v3 = &qword_254E16239;
    do
    {
      *v3 = qword_2160ED3AA[v2];
      v2 += 3;
      v3 = (uint64_t *)((char *)v3 + 658);
    }
    while (v2 != 9);
    v4 = &qword_254E16241;
    v5 = 1u;
    do
    {
      *v4 = qword_2160ED3AA[v5];
      v5 += 3;
      v4 = (uint64_t *)((char *)v4 + 658);
    }
    while (v5 != 10);
    v6 = &qword_254E16249;
    v7 = 2u;
    do
    {
      *v6 = qword_2160ED3AA[v7];
      v7 += 3;
      v6 = (uint64_t *)((char *)v6 + 658);
    }
    while (v7 != 11);
    v8 = 0;
    v9 = &xmmword_254E16251;
    do
    {
      v10 = *(_OWORD *)((char *)&unk_2160ED3F2 + v8 + 16);
      *v9 = *(_OWORD *)((char *)&unk_2160ED3F2 + v8);
      v9[1] = v10;
      *((_QWORD *)v9 + 4) = *(_QWORD *)((char *)&unk_2160ED3F2 + v8 + 32);
      v8 += 40;
      v9 = (__int128 *)((char *)v9 + 658);
    }
    while (v8 != 120);
    v11 = 0;
    v12 = &xmmword_254E16279;
    do
    {
      v13 = *(_OWORD *)((char *)&unk_2160ED46A + v11 + 80);
      v12[4] = *(_OWORD *)((char *)&unk_2160ED46A + v11 + 64);
      v12[5] = v13;
      v12[6] = *(_OWORD *)((char *)&unk_2160ED46A + v11 + 96);
      *(__int128 *)((char *)v12 + 106) = *(_OWORD *)((char *)&unk_2160ED46A + v11 + 106);
      v14 = *(_OWORD *)((char *)&unk_2160ED46A + v11 + 16);
      *v12 = *(_OWORD *)((char *)&unk_2160ED46A + v11);
      v12[1] = v14;
      v15 = *(_OWORD *)((char *)&unk_2160ED46A + v11 + 32);
      v16 = *(_OWORD *)((char *)&unk_2160ED46A + v11 + 48);
      v11 += 122;
      v12[2] = v15;
      v12[3] = v16;
      v12 = (__int128 *)((char *)v12 + 658);
    }
    while (v11 != 366);
    v17 = 0;
    v18 = &xmmword_254E162F3;
    do
    {
      v19 = *(_OWORD *)((char *)&unk_2160ED5D8 + v17 + 80);
      v18[4] = *(_OWORD *)((char *)&unk_2160ED5D8 + v17 + 64);
      v18[5] = v19;
      v18[6] = *(_OWORD *)((char *)&unk_2160ED5D8 + v17 + 96);
      *(__int128 *)((char *)v18 + 106) = *(_OWORD *)((char *)&unk_2160ED5D8 + v17 + 106);
      v20 = *(_OWORD *)((char *)&unk_2160ED5D8 + v17 + 16);
      *v18 = *(_OWORD *)((char *)&unk_2160ED5D8 + v17);
      v18[1] = v20;
      v21 = *(_OWORD *)((char *)&unk_2160ED5D8 + v17 + 32);
      v22 = *(_OWORD *)((char *)&unk_2160ED5D8 + v17 + 48);
      v17 += 122;
      v18[2] = v21;
      v18[3] = v22;
      v18 = (__int128 *)((char *)v18 + 658);
    }
    while (v17 != 366);
    v23 = 0;
    v24 = &xmmword_254E1636D;
    do
    {
      v25 = *(_OWORD *)((char *)&unk_2160ED746 + v23 + 80);
      v24[4] = *(_OWORD *)((char *)&unk_2160ED746 + v23 + 64);
      v24[5] = v25;
      *((_WORD *)v24 + 48) = *(_WORD *)((char *)&unk_2160ED746 + v23 + 96);
      v26 = *(_OWORD *)((char *)&unk_2160ED746 + v23 + 16);
      *v24 = *(_OWORD *)((char *)&unk_2160ED746 + v23);
      v24[1] = v26;
      v28 = *(_OWORD *)((char *)&unk_2160ED746 + v23 + 32);
      v27 = *(_OWORD *)((char *)&unk_2160ED746 + v23 + 48);
      v23 += 98;
      v24[2] = v28;
      v24[3] = v27;
      v24 = (__int128 *)((char *)v24 + 658);
    }
    while (v23 != 294);
    v29 = 0;
    v30 = &xmmword_254E163D1;
    do
    {
      v31 = *(_OWORD *)((char *)&unk_2160ED86C + v29 + 80);
      v30[4] = *(_OWORD *)((char *)&unk_2160ED86C + v29 + 64);
      v30[5] = v31;
      v30[6] = *(_OWORD *)((char *)&unk_2160ED86C + v29 + 96);
      *(__int128 *)((char *)v30 + 106) = *(_OWORD *)((char *)&unk_2160ED86C + v29 + 106);
      v32 = *(_OWORD *)((char *)&unk_2160ED86C + v29 + 16);
      *v30 = *(_OWORD *)((char *)&unk_2160ED86C + v29);
      v30[1] = v32;
      v33 = *(_OWORD *)((char *)&unk_2160ED86C + v29 + 32);
      v34 = *(_OWORD *)((char *)&unk_2160ED86C + v29 + 48);
      v29 += 122;
      v30[2] = v33;
      v30[3] = v34;
      v30 = (__int128 *)((char *)v30 + 658);
    }
    while (v29 != 366);
    v35 = 0;
    v36 = &xmmword_254E1644B;
    do
    {
      v37 = *(_OWORD *)((char *)&unk_2160ED9DA + v35 + 80);
      v36[4] = *(_OWORD *)((char *)&unk_2160ED9DA + v35 + 64);
      v36[5] = v37;
      v36[6] = *(_OWORD *)((char *)&unk_2160ED9DA + v35 + 96);
      *(__int128 *)((char *)v36 + 106) = *(_OWORD *)((char *)&unk_2160ED9DA + v35 + 106);
      v38 = *(_OWORD *)((char *)&unk_2160ED9DA + v35 + 16);
      *v36 = *(_OWORD *)((char *)&unk_2160ED9DA + v35);
      v36[1] = v38;
      v39 = *(_OWORD *)((char *)&unk_2160ED9DA + v35 + 32);
      v40 = *(_OWORD *)((char *)&unk_2160ED9DA + v35 + 48);
      v35 += 122;
      v36[2] = v39;
      v36[3] = v40;
      v36 = (__int128 *)((char *)v36 + 658);
    }
    while (v35 != 366);
    v41 = 0;
    v42 = (char *)&unk_254E17460;
    do
    {
      v43 = 0;
      v44 = &byte_2160EDB49;
      do
      {
        v45 = (__int16)(*v44 + (unsigned __int16)((v41 * *(v44 - 1)) >> 4));
        if (v45 <= 1)
          v45 = 1;
        if (v45 >= 126)
          v45 = 126;
        if (v45 >= 0x40)
          v46 = 2 * v45 - 127;
        else
          v46 = (2 * v45) ^ 0x7E;
        v42[v43++] = v46;
        v44 += 2;
      }
      while (v43 != 11);
      v47 = &byte_2160EDB5F;
      for (i = 60; i != 70; ++i)
      {
        v49 = (__int16)(*v47 + (unsigned __int16)((v41 * *(v47 - 1)) >> 4));
        if (v49 <= 1)
          v49 = 1;
        if (v49 >= 126)
          v49 = 126;
        if (v49 >= 0x40)
          v50 = 2 * v49 - 127;
        else
          v50 = (2 * v49) ^ 0x7E;
        v42[i] = v50;
        v47 += 2;
      }
      v51 = (char *)&dword_254E15FA1 + 1;
      do
      {
        v52 = (__int16)(*v51 + (unsigned __int16)((v41 * *(v51 - 1)) >> 4));
        if (v52 <= 1)
          v52 = 1;
        if (v52 >= 126)
          v52 = 126;
        if (v52 >= 0x40)
          v53 = 2 * v52 - 127;
        else
          v53 = (2 * v52) ^ 0x7E;
        v42[i++] = v53;
        v51 += 2;
      }
      while (i != 399);
      v54 = &byte_2160EDB73;
      do
      {
        v55 = (__int16)(*v54 + (unsigned __int16)((v41 * *(v54 - 1)) >> 4));
        if (v55 <= 1)
          v55 = 1;
        if (v55 >= 126)
          v55 = 126;
        if (v55 >= 0x40)
          v56 = 2 * v55 - 127;
        else
          v56 = (2 * v55) ^ 0x7E;
        v42[i++] = v56;
        v54 += 2;
      }
      while (i != 402);
      v57 = &byte_2160EDB79;
      do
      {
        v58 = (__int16)(*v57 + (unsigned __int16)((v41 * *(v57 - 1)) >> 4));
        if (v58 <= 1)
          v58 = 1;
        if (v58 >= 126)
          v58 = 126;
        if (v58 >= 0x40)
          v59 = 2 * v58 - 127;
        else
          v59 = (2 * v58) ^ 0x7E;
        v42[i++] = v59;
        v57 += 2;
      }
      while (i != 460);
      v60 = (char *)&unk_254E17460 + 460 * v41;
      sub_215FC2864((__int16)v41, 0, (uint64_t)(v60 + 23920));
      sub_215FC2864((__int16)v41, 1u, (uint64_t)(v60 + 47840));
      result = sub_215FC2864((__int16)v41++, 2u, (uint64_t)(v60 + 71760));
      v42 += 460;
    }
    while (v41 != 52);
  }
  return result;
}

uint64_t sub_215FC2864(uint64_t result, unsigned __int16 a2, uint64_t a3)
{
  uint64_t v3;
  char *v4;
  int v5;
  char v6;
  uint64_t v7;
  char *v8;
  int v9;
  char v10;
  uint64_t v11;
  int16x8_t v12;
  const char *v13;
  int16x8_t v14;
  int16x8_t v15;
  uint32x4_t v16;
  uint32x4_t v17;
  uint32x4_t v18;
  uint32x4_t v19;
  int32x4_t v20;
  int32x4_t v21;
  int32x4_t v22;
  int32x4_t v23;
  int32x4_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int8x16_t v27;
  int8x16_t v28;
  int8x16_t v29;
  char *v30;
  int v31;
  char v32;
  uint64_t v33;
  char *v34;
  int v35;
  char v36;
  uint64_t v37;
  char *v38;
  int v39;
  char v40;
  char *v41;
  uint64_t i;
  int v43;
  char v44;
  uint64_t v45;
  char *v46;
  int v47;
  char v48;
  uint64_t v49;
  char *v50;
  int v51;
  char v52;
  int8x16x2_t v53;

  v3 = 0;
  v4 = &byte_2160EDB49;
  do
  {
    v5 = (__int16)(*v4 + (unsigned __int16)((*(v4 - 1) * (_DWORD)result) >> 4));
    if (v5 <= 1)
      v5 = 1;
    if (v5 >= 126)
      v5 = 126;
    if (v5 >= 0x40)
      v6 = 2 * v5 - 127;
    else
      v6 = (2 * v5) ^ 0x7E;
    *(_BYTE *)(a3 + v3++) = v6;
    v4 += 2;
  }
  while (v3 != 11);
  v7 = 0;
  v8 = (char *)&unk_2160EDBEC + 26 * a2 + 1;
  do
  {
    v9 = (__int16)(*v8 + (unsigned __int16)((*(v8 - 1) * (_DWORD)result) >> 4));
    if (v9 <= 1)
      v9 = 1;
    if (v9 >= 126)
      v9 = 126;
    if (v9 >= 0x40)
      v10 = 2 * v9 - 127;
    else
      v10 = (2 * v9) ^ 0x7E;
    *(_BYTE *)(a3 + 11 + v7++) = v10;
    v8 += 2;
  }
  while (v7 != 13);
  v11 = 0;
  v12 = vdupq_n_s16(result);
  v13 = (char *)&unk_2160EDC3A + 32 * a2;
  v53 = vld2q_s8(v13);
  v14 = vmovl_high_s8(v53.val[0]);
  v15 = vmovl_s8(*(int8x8_t *)v53.val[0].i8);
  v16 = (uint32x4_t)vmull_s16(*(int16x4_t *)v12.i8, *(int16x4_t *)v15.i8);
  v17 = (uint32x4_t)vmull_s16(*(int16x4_t *)v12.i8, *(int16x4_t *)v14.i8);
  v18 = (uint32x4_t)vmull_high_s16(v12, v14);
  v19 = vshrq_n_u32((uint32x4_t)vmull_high_s16(v12, v15), 4uLL);
  v20 = (int32x4_t)vmovl_s8(*(int8x8_t *)v53.val[1].i8);
  v53.val[0] = (int8x16_t)vmovl_high_s8(v53.val[1]);
  v53.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v53.val[0].i8);
  v53.val[0] = (int8x16_t)vaddw_high_u16(vshrq_n_u32(v18, 4uLL), (uint16x8_t)v53.val[0]);
  v21 = vshrq_n_s32(vshlq_n_s32((int32x4_t)vsraq_n_u32(vmovl_u16(*(uint16x4_t *)v20.i8), v16, 4uLL), 0x10uLL), 0x10uLL);
  v22 = vshrq_n_s32(vshlq_n_s32((int32x4_t)vaddw_high_u16(v19, (uint16x8_t)v20), 0x10uLL), 0x10uLL);
  v20.i64[0] = 0x100000001;
  v20.i64[1] = 0x100000001;
  v53.val[0] = (int8x16_t)vmaxq_s32(vshrq_n_s32(vshlq_n_s32((int32x4_t)v53.val[0], 0x10uLL), 0x10uLL), v20);
  v53.val[1] = (int8x16_t)vmaxq_s32(vshrq_n_s32(vshlq_n_s32((int32x4_t)vsraq_n_u32((uint32x4_t)v53.val[1], v17, 4uLL), 0x10uLL), 0x10uLL), v20);
  v23 = vmaxq_s32(v22, v20);
  v24 = vmaxq_s32(v21, v20);
  v20.i64[0] = 0x7E0000007ELL;
  v20.i64[1] = 0x7E0000007ELL;
  v25 = (int16x8_t)vminq_s32(v24, v20);
  v26 = (int16x8_t)vminq_s32(v23, v20);
  v53.val[1] = (int8x16_t)vminq_s32((int32x4_t)v53.val[1], v20);
  v53.val[0] = (int8x16_t)vminq_s32((int32x4_t)v53.val[0], v20);
  v20.i64[0] = 0x4000000040;
  v20.i64[1] = 0x4000000040;
  v27 = vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vcgtq_u32((uint32x4_t)v20, (uint32x4_t)v25), (int16x8_t)vcgtq_u32((uint32x4_t)v20, (uint32x4_t)v26)), (int8x16_t)vuzp1q_s16((int16x8_t)vcgtq_u32((uint32x4_t)v20, (uint32x4_t)v53.val[1]), (int16x8_t)vcgtq_u32((uint32x4_t)v20, (uint32x4_t)v53.val[0])));
  v28 = vuzp1q_s8((int8x16_t)vuzp1q_s16(v25, v26), (int8x16_t)vuzp1q_s16((int16x8_t)v53.val[1], (int16x8_t)v53.val[0]));
  v29 = vaddq_s8(v28, v28);
  v53.val[0].i64[0] = 0x7E7E7E7E7E7E7E7ELL;
  v53.val[0].i64[1] = 0x7E7E7E7E7E7E7E7ELL;
  v53.val[1].i64[0] = 0x8181818181818181;
  v53.val[1].i64[1] = 0x8181818181818181;
  *(int8x16_t *)(a3 + 24) = vbslq_s8(v27, veorq_s8(v29, v53.val[0]), vaddq_s8(v29, v53.val[1]));
  v30 = (char *)&unk_2160EDC9A + 28 * a2 + 1;
  do
  {
    v31 = (__int16)(*v30 + (unsigned __int16)((*(v30 - 1) * (_DWORD)result) >> 4));
    if (v31 <= 1)
      v31 = 1;
    if (v31 >= 126)
      v31 = 126;
    if (v31 >= 0x40)
      v32 = 2 * v31 - 127;
    else
      v32 = (2 * v31) ^ 0x7E;
    *(_BYTE *)(a3 + 40 + v11++) = v32;
    v30 += 2;
  }
  while (v11 != 14);
  v33 = 0;
  v34 = (char *)&unk_2160EDCEE + 12 * a2 + 1;
  do
  {
    v35 = (__int16)(*v34 + (unsigned __int16)((*(v34 - 1) * (_DWORD)result) >> 4));
    if (v35 <= 1)
      v35 = 1;
    if (v35 >= 126)
      v35 = 126;
    if (v35 >= 0x40)
      v36 = 2 * v35 - 127;
    else
      v36 = (2 * v35) ^ 0x7E;
    *(_BYTE *)(a3 + 54 + v33++) = v36;
    v34 += 2;
  }
  while (v33 != 6);
  v37 = 0;
  v38 = &byte_2160EDB5F;
  do
  {
    v39 = (__int16)(*v38 + (unsigned __int16)((*(v38 - 1) * (_DWORD)result) >> 4));
    if (v39 <= 1)
      v39 = 1;
    if (v39 >= 126)
      v39 = 126;
    if (v39 >= 0x40)
      v40 = 2 * v39 - 127;
    else
      v40 = (2 * v39) ^ 0x7E;
    *(_BYTE *)(a3 + 60 + v37++) = v40;
    v38 += 2;
  }
  while (v37 != 10);
  v41 = (char *)&dword_254E16233 + 658 * a2 + 1;
  for (i = 70; i != 399; ++i)
  {
    v43 = (__int16)(*v41 + (unsigned __int16)((*(v41 - 1) * (_DWORD)result) >> 4));
    if (v43 <= 1)
      v43 = 1;
    if (v43 >= 126)
      v43 = 126;
    if (v43 >= 0x40)
      v44 = 2 * v43 - 127;
    else
      v44 = (2 * v43) ^ 0x7E;
    *(_BYTE *)(a3 + i) = v44;
    v41 += 2;
  }
  v45 = 0;
  v46 = (char *)&unk_2160EDD12 + 6 * a2 + 1;
  do
  {
    v47 = (__int16)(*v46 + (unsigned __int16)((*(v46 - 1) * (_DWORD)result) >> 4));
    if (v47 <= 1)
      v47 = 1;
    if (v47 >= 126)
      v47 = 126;
    if (v47 >= 0x40)
      v48 = 2 * v47 - 127;
    else
      v48 = (2 * v47) ^ 0x7E;
    *(_BYTE *)(a3 + 399 + v45++) = v48;
    v46 += 2;
  }
  while (v45 != 3);
  v49 = 0;
  v50 = (char *)&unk_2160EDD24 + 116 * a2 + 1;
  do
  {
    v51 = (__int16)(*v50 + (unsigned __int16)((*(v50 - 1) * (_DWORD)result) >> 4));
    if (v51 <= 1)
      v51 = 1;
    if (v51 >= 126)
      v51 = 126;
    if (v51 >= 0x40)
      v52 = 2 * v51 - 127;
    else
      v52 = (2 * v51) ^ 0x7E;
    *(_BYTE *)(a3 + 402 + v49++) = v52;
    v50 += 2;
  }
  while (v49 != 58);
  return result;
}

BOOL sub_215FC2C90(unsigned int *a1, _BYTE *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  _BOOL8 v6;
  _BYTE *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  unsigned int *v13;
  unsigned int *v14;
  uint64_t v15;

  v2 = *a2;
  v3 = byte_2160EDEA0[4 * v2 + (*a1 >> 6)];
  v4 = *a1 - v3;
  *a1 = v4;
  v5 = *((_QWORD *)a1 + 2);
  if (v5 >= v4 << 55)
  {
    *((_QWORD *)a1 + 2) = v5 - (v4 << 55);
    *a1 = v3;
    v6 = (v2 & 1) == 0;
    v7 = &unk_2160EE120;
  }
  else
  {
    v6 = v2 & 1;
    v7 = &unk_2160EE0A0;
  }
  *a2 = v7[v2];
  v8 = *a1;
  v9 = byte_2160EE1B4[v8];
  *a1 = (_DWORD)v8 << v9;
  v10 = *((_QWORD *)a1 + 2) << v9;
  *((_QWORD *)a1 + 2) = v10;
  v11 = a1[16];
  v12 = v9 - v11;
  if (v9 > v11)
  {
    v13 = (unsigned int *)*((_QWORD *)a1 + 4);
    v14 = v13 + 1;
    *((_QWORD *)a1 + 4) = v13 + 1;
    v15 = bswap32(*v13);
    if ((unint64_t)v14 > *((_QWORD *)a1 + 6))
      v14 = (unsigned int *)*((_QWORD *)a1 + 6);
    *((_QWORD *)a1 + 4) = v14;
    *((_QWORD *)a1 + 2) = (v15 << v12) | v10;
    v11 = 32;
    v9 = v12;
  }
  a1[16] = v11 - v9;
  return v6;
}

BOOL sub_215FC2D70(unsigned int *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  unsigned int *v8;
  unsigned int *v9;
  uint64_t v10;

  v1 = *a1;
  v2 = v1 << 54;
  v3 = *((_QWORD *)a1 + 2);
  if (v3 < v1 << 54)
    v4 = 0;
  else
    v4 = v1 << 54;
  v5 = 2 * (v3 - v4);
  *((_QWORD *)a1 + 2) = v5;
  v6 = a1[16];
  v7 = 1;
  if (v6 <= 0)
  {
    v7 = 1 - v6;
    v8 = (unsigned int *)*((_QWORD *)a1 + 4);
    v9 = v8 + 1;
    *((_QWORD *)a1 + 4) = v8 + 1;
    v10 = bswap32(*v8);
    if ((unint64_t)v9 > *((_QWORD *)a1 + 6))
      v9 = (unsigned int *)*((_QWORD *)a1 + 6);
    *((_QWORD *)a1 + 4) = v9;
    *((_QWORD *)a1 + 2) = (v10 << v7) | v5;
    v6 = 32;
  }
  a1[16] = v6 - v7;
  return v3 >= v2;
}

BOOL sub_215FC2DF0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  signed int v5;
  uint64_t v6;
  int v7;
  signed int v8;
  unsigned int *v9;
  unsigned int *v10;
  uint64_t v11;

  v1 = (*(_DWORD *)a1 - 2);
  *(_DWORD *)a1 = v1;
  v2 = *(_QWORD *)(a1 + 16);
  v3 = v1 << 55;
  if (v1 <= 0xFF && v2 < v3)
  {
    v5 = __clz((_DWORD)v1 << 23);
    *(_DWORD *)a1 = (_DWORD)v1 << v5;
    v6 = v2 << v5;
    *(_QWORD *)(a1 + 16) = v2 << v5;
    v7 = *(_DWORD *)(a1 + 64);
    v8 = v5 - v7;
    if (v5 > v7)
    {
      v9 = *(unsigned int **)(a1 + 32);
      v10 = v9 + 1;
      *(_QWORD *)(a1 + 32) = v9 + 1;
      v11 = bswap32(*v9);
      if ((unint64_t)v10 > *(_QWORD *)(a1 + 48))
        v10 = *(unsigned int **)(a1 + 48);
      *(_QWORD *)(a1 + 32) = v10;
      *(_QWORD *)(a1 + 16) = (v11 << v8) | v6;
      v7 = 32;
      v5 = v8;
    }
    *(_DWORD *)(a1 + 64) = v7 - v5;
  }
  return v2 >= v3;
}

uint64_t sub_215FC2E80(unsigned int *a1, int a2, int a3, int a4, unsigned int a5)
{
  _BYTE *v8;
  unsigned int v9;
  uint64_t v10;
  _BOOL4 v11;
  int v12;
  unsigned int v13;
  int v14;
  int v15;

  v8 = (char *)a1 + (a3 + a2) + 208;
  if (!sub_215FC2C90(a1, v8))
    return 0;
  v9 = a4 - 1;
  LODWORD(v10) = 1;
  if (v9 < 2)
    goto LABEL_6;
  do
  {
    v11 = sub_215FC2C90(a1, v8);
    v10 = (v10 + v11);
  }
  while (v11 && v10 < v9);
  if (v11)
  {
LABEL_6:
    v12 = 0;
    do
    {
      v13 = a5;
      v14 = sub_215FC2D70(a1);
      v12 |= v14 << a5;
      a5 += v14;
    }
    while (v14 && a5 < 0xF);
    if (a5)
    {
      a5 = 0;
      v15 = v13 + v14 - 1;
      do
        a5 |= sub_215FC2D70(a1) << v15--;
      while (v15 != -1);
    }
    return v12 + (_DWORD)v10 + a5;
  }
  return v10;
}

uint64_t sub_215FC2F64(uint64_t a1)
{
  if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 229)))
    return 0;
  if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 230)))
    return sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 231)) ^ 3u;
  return 1;
}

uint64_t sub_215FC2FBC(uint64_t a1)
{
  int v2;
  int v3;
  _BOOL4 v4;
  _BOOL4 v5;
  BOOL v6;
  char v7;

  if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 244)))
  {
    if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 245)))
    {
      if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 246)))
        v2 = 2;
      else
        v2 = 0;
      v3 = v2 | sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 247));
      v4 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 247));
      v5 = v4;
      if (v3 == 2)
      {
        v6 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 247));
        if (v5)
          v7 = 9;
        else
          v7 = 7;
        return (v7 + v6);
      }
      else
      {
        return byte_2160EE1A0[v4 | (2 * v3)];
      }
    }
    else if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 247)))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
  else
  {
    return 0;
  }
}

uint64_t sub_215FC309C(unsigned int *a1, unsigned __int8 *a2, unsigned __int8 *a3, int a4)
{
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int v15;
  int v16;
  _BOOL8 v17;
  uint64_t v18;
  _BOOL4 v19;
  int v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  int v33;

  if ((*a3 & 1) == 0 || (a3[1] & 2) != 0)
    v8 = 73;
  else
    v8 = (((char)(4 * *a3) >> 7) + 74);
  if ((*a2 & 1) == 0 || (a2[1] & 4) != 0)
    v9 = 0;
  else
    v9 = ~(*a2 >> 4) & 2;
  v10 = sub_215FC2C90(a1, (_BYTE *)a1 + v9 + v8 + 208);
  v11 = v10;
  if ((*a2 & 1) != 0)
  {
    v12 = ~(*a2 >> 4) & 2;
    if ((a2[1] & 8) != 0)
      v12 = 0;
  }
  else
  {
    v12 = 0;
  }
  v13 = 73;
  if (!v10)
    v13 = 74;
  v14 = sub_215FC2C90(a1, (_BYTE *)a1 + v12 + v13 + 208);
  if (v14)
    v15 = 2;
  else
    v15 = 0;
  v16 = v15 | v11;
  if ((*a3 & 1) != 0)
  {
    v17 = (*a3 & 0x20) == 0;
    if ((a3[1] & 8) != 0)
      v17 = 0;
  }
  else
  {
    v17 = 0;
  }
  if (v11)
    v18 = 73;
  else
    v18 = 75;
  v19 = sub_215FC2C90(a1, (_BYTE *)a1 + v17 + v18 + 208);
  if (v19)
    v20 = 4;
  else
    v20 = 0;
  v21 = v16 | v20;
  if (v14)
    v22 = 73;
  else
    v22 = 75;
  if (sub_215FC2C90(a1, (_BYTE *)a1 + v22 + !v19 + 208))
    v23 = 8;
  else
    v23 = 0;
  v24 = v21 | v23;
  if (a4)
  {
    v25 = *a3;
    if ((v25 & 1) != 0)
    {
      if ((a3[1] & 0x30) != 0)
        v26 = 78;
      else
        v26 = ((v25 >> 5) & 1) + 77;
    }
    else
    {
      v26 = 77;
    }
    v27 = *a2;
    if ((v27 & 1) != 0)
    {
      v28 = (v27 >> 4) & 2;
      if ((a2[1] & 0x30) != 0)
        v28 = 2;
    }
    else
    {
      v28 = 0;
    }
    if (sub_215FC2C90(a1, (_BYTE *)a1 + v28 + v26 + 208))
    {
      v29 = *a3;
      if ((v29 & 1) != 0)
      {
        if ((a3[1] & 0x30) == 0x20)
          v30 = 82;
        else
          v30 = ((v29 >> 5) & 1) + 81;
      }
      else
      {
        v30 = 81;
      }
      v31 = *a2;
      if ((v31 & 1) != 0)
      {
        if ((a2[1] & 0x30) == 0x20)
          v32 = 2;
        else
          v32 = (v31 >> 4) & 2;
      }
      else
      {
        v32 = 0;
      }
      if (sub_215FC2C90(a1, (_BYTE *)a1 + v32 + v30 + 208))
        v33 = 32;
      else
        v33 = 16;
      return v33 | v24;
    }
  }
  return v24;
}

uint64_t sub_215FC332C(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1+ (((*a2 & ((*a2 << 25) >> 31)) + (*a3 & ((*a3 << 25) >> 31))) | 0x40)+ 208)))
  {
    if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 275)))
    {
      if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 275)))
        return 3;
      else
        return 2;
    }
    else
    {
      return 1;
    }
  }
  else
  {
    return 0;
  }
}

BOOL sub_215FC33B8(unsigned int *a1, _BYTE *a2, _BYTE *a3)
{
  uint64_t v3;
  uint64_t v4;

  if (a3[5])
    v3 = (*a3 & 1) + 399;
  else
    v3 = 399;
  if (a2[5])
    v4 = *a2 & 1;
  else
    v4 = 0;
  return sub_215FC2C90(a1, (_BYTE *)a1 + v4 + v3 + 208);
}

BOOL sub_215FC340C(unsigned int *a1, _BYTE *a2, _BYTE *a3)
{
  uint64_t v3;
  uint64_t v4;

  if (a3[6])
    v3 = *a3 & 1 | 0x46;
  else
    v3 = 70;
  if (a2[6])
    v4 = *a2 & 1;
  else
    v4 = 0;
  return sub_215FC2C90(a1, (_BYTE *)a1 + v4 + v3 + 208);
}

uint64_t sub_215FC3460(uint64_t a1, _BYTE *a2, _BYTE *a3, int a4, unsigned int a5, char a6, int a7, int a8)
{
  char v9;
  int v10;
  _BOOL4 v11;
  _BOOL4 v12;
  int v13;
  int v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  int v18;
  unsigned int v19;

  if (a5 > 1)
  {
    v11 = 0;
    v9 = a6;
    v10 = a8;
    if ((a5 & 1) != 0)
      goto LABEL_3;
  }
  else
  {
    v9 = a2[(a4 | (2 * (a5 & 1))) + 12];
    v10 = a2[(a5 & 1) + 2];
    v11 = (*a2 & 5) != 1;
    if ((a5 & 1) != 0)
    {
LABEL_3:
      v12 = 1;
      goto LABEL_6;
    }
  }
  a6 = a3[(a5 & 0xFE | a4) + 12];
  a8 = a3[(a5 >> 1) + 2];
  v12 = (*a3 & 5) == 1;
LABEL_6:
  if (v10)
    v13 = 0;
  else
    v13 = a7;
  v14 = v11 | v13;
  if (v9 < 1)
    v14 = 1;
  LODWORD(v15) = v12 & ((a8 != 0) | ~a7);
  if (a6 > 0)
    v15 = v15;
  else
    v15 = 0;
  v16 = v14 == 0;
  v17 = 56;
  if (!v16)
    v17 = 54;
  if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + (v17 | v15) + 208)))
  {
    if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 266)))
    {
      v18 = 2;
      do
      {
        v19 = v18;
        if (!sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 267)))
          break;
        v18 = v19 + 1;
      }
      while (v19 < 0x1F);
    }
    else
    {
      LOBYTE(v19) = 1;
    }
  }
  else
  {
    LOBYTE(v19) = 0;
  }
  return v19;
}

uint64_t sub_215FC35AC(uint64_t a1, _BYTE *a2, _BYTE *a3, int a4, unsigned int a5, uint64_t a6, int a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unsigned __int8 *v12;
  _BOOL4 v13;
  unsigned int v14;
  int v15;
  int v16;
  char *v17;
  unsigned __int8 *v18;
  _BOOL4 v19;
  int v20;
  int v21;
  _BOOL4 v22;
  int v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  int v27;
  unsigned int v28;

  v9 = a5 & 1;
  v10 = a4 & 0xFFFFFFFD | (2 * (a5 & 1));
  if (a5 >= 2)
  {
    v13 = 0;
    v11 = (char *)(a6 + v10);
    v12 = (unsigned __int8 *)(a8 + v9);
  }
  else
  {
    v11 = &a2[v10 + 12];
    v12 = &a2[v9 + 2];
    v13 = (*a2 & 5) != 1;
  }
  v14 = a5 >> 1;
  v15 = *v11;
  v16 = *v12;
  if ((a5 & 1) != 0)
  {
    v17 = (char *)(a6 + (a4 | (4 * v14)));
    v18 = (unsigned __int8 *)(a8 + (a5 & 0xFE));
    v19 = 1;
  }
  else
  {
    v17 = &a3[(a5 & 0xFE | a4) + 12];
    v18 = &a3[v14 + 2];
    v19 = (*a3 & 5) == 1;
  }
  v20 = *v18;
  if (v16)
    v21 = 0;
  else
    v21 = a7;
  v22 = v20 != 0;
  v23 = v13 | v21;
  if (v15 < 1)
    v23 = 1;
  LODWORD(v24) = v19 & (v22 | ~a7);
  if (*v17 > 0)
    v24 = v24;
  else
    v24 = 0;
  v25 = v23 == 0;
  v26 = 56;
  if (!v25)
    v26 = 54;
  if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + (v26 | v24) + 208)))
  {
    if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 266)))
    {
      v27 = 2;
      do
      {
        v28 = v27;
        if (!sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 267)))
          break;
        v27 = v28 + 1;
      }
      while (v28 < 0x1F);
    }
    else
    {
      LOBYTE(v28) = 1;
    }
  }
  else
  {
    LOBYTE(v28) = 0;
  }
  return v28;
}

uint64_t sub_215FC3714(unsigned int *a1, int a2, int a3, int a4)
{
  int v6;
  int v7;
  unsigned int v8;
  int v9;
  int v10;
  _BOOL4 v11;
  uint64_t result;
  int v13;
  int v14;

  if (a4 >= 0)
    v6 = a4;
  else
    v6 = -a4;
  if (a3 >= 0)
    v7 = a3;
  else
    v7 = -a3;
  v8 = v6 + v7;
  if (v8 <= 0x20)
    v9 = 1;
  else
    v9 = 2;
  if (v8 >= 3)
    v10 = v9;
  else
    v10 = 0;
  v11 = sub_215FC2C90(a1, (_BYTE *)a1 + (v10 + a2) + 208);
  result = 0;
  if (v11)
  {
    if (sub_215FC2C90(a1, (_BYTE *)a1 + (a2 + 3) + 208))
    {
      if (sub_215FC2C90(a1, (_BYTE *)a1 + (a2 + 4) + 208))
      {
        if (sub_215FC2C90(a1, (_BYTE *)a1 + (a2 + 5) + 208))
          v13 = sub_215FC2E80(a1, a2, 6, 6, 3u) + 4;
        else
          v13 = 3;
      }
      else
      {
        v13 = 2;
      }
    }
    else
    {
      v13 = 1;
    }
    v14 = sub_215FC2D70(a1);
    return (v13 ^ (v14 << 31 >> 31)) + v14;
  }
  return result;
}

BOOL sub_215FC3808(uint64_t a1, uint64_t a2, unsigned __int8 *a3, _BYTE *a4)
{
  _BOOL4 v5;
  int v6;
  int v7;
  _BOOL8 result;
  uint64_t v9;
  __int16 v10;
  __int16 v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  _DWORD v19[16];
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v5 = (*a4 & 1) != 0 && a4[4] || !(*a4 & 1);
  v6 = *a3;
  if ((v6 & 1) != 0 && a3[4])
    v7 = 2;
  else
    v7 = ~(2 * v6) & 2;
  result = sub_215FC2C90((unsigned int *)a1, (_BYTE *)((v7 + v5) + a1 + 293));
  *(_BYTE *)(a1 + 10) |= result;
  if (result)
  {
    v9 = 0;
    v10 = 0;
    while (1)
    {
      result = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v9 + 313));
      if (result)
      {
        v11 = v10 + 1;
        v19[v10] = v9;
        result = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v9 + 374));
        ++v10;
        if (result)
          break;
      }
      if (v9++ >= 0xE)
      {
        if ((_DWORD)v9 == 15)
        {
          v11 = v10 + 1;
          v19[v10] = 15;
        }
        else
        {
          v11 = v10;
        }
        break;
      }
    }
    if (((v11 - 1) & 0x8000) == 0)
    {
      v12 = 0;
      v13 = 0;
      v14 = (__int16)(v11 - 1);
      do
      {
        LODWORD(v15) = v13 + 228;
        if (v13 >= 3)
          LODWORD(v15) = 231;
        if (v12)
          v15 = 227;
        else
          v15 = v15;
        if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v15 + 208)))
        {
          if (v12 >= 4)
            v16 = 9;
          else
            v16 = v12 + 5;
          ++v12;
          v17 = sub_215FC2E80((unsigned int *)a1, 227, v16, 14, 0) + 2;
        }
        else
        {
          ++v13;
          LOWORD(v17) = 1;
        }
        result = sub_215FC2D70((unsigned int *)a1);
        v18 = (__int16)v14;
        *(_WORD *)(*(_QWORD *)(a1 + 3216) + 2 * (int)v19[(unsigned __int16)v14--]) = (v17 ^ ((__int16)(result << 15) >> 15))
                                                                                     + result;
      }
      while (v18 > 0);
    }
  }
  return result;
}

BOOL sub_215FC3A08(uint64_t a1, uint64_t a2, unsigned __int8 *a3, _BYTE *a4)
{
  _BOOL4 v5;
  int v6;
  int v7;
  _BOOL8 result;
  uint64_t v9;
  __int16 v10;
  __int16 v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  _DWORD v19[16];
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v5 = (*a4 & 1) != 0 && a4[4] || !(*a4 & 1);
  v6 = *a3;
  if ((v6 & 1) != 0 && a3[4])
    v7 = 2;
  else
    v7 = ~(2 * v6) & 2;
  result = sub_215FC2C90((unsigned int *)a1, (_BYTE *)((v7 + v5) + a1 + 293));
  *(_BYTE *)(a1 + 10) |= result;
  if (result)
  {
    v9 = 0;
    v10 = 0;
    while (1)
    {
      result = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v9 + 485));
      if (result)
      {
        v11 = v10 + 1;
        v19[v10] = v9;
        result = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v9 + 546));
        ++v10;
        if (result)
          break;
      }
      if (v9++ >= 0xE)
      {
        if ((_DWORD)v9 == 15)
        {
          v11 = v10 + 1;
          v19[v10] = 15;
        }
        else
        {
          v11 = v10;
        }
        break;
      }
    }
    if (((v11 - 1) & 0x8000) == 0)
    {
      v12 = 0;
      v13 = 0;
      v14 = (__int16)(v11 - 1);
      do
      {
        LODWORD(v15) = v13 + 228;
        if (v13 >= 3)
          LODWORD(v15) = 231;
        if (v12)
          v15 = 227;
        else
          v15 = v15;
        if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v15 + 208)))
        {
          if (v12 >= 4)
            v16 = 9;
          else
            v16 = v12 + 5;
          ++v12;
          v17 = sub_215FC2E80((unsigned int *)a1, 227, v16, 14, 0) + 2;
        }
        else
        {
          ++v13;
          LOWORD(v17) = 1;
        }
        result = sub_215FC2D70((unsigned int *)a1);
        v18 = (__int16)v14;
        *(_WORD *)(*(_QWORD *)(a1 + 3216) + 2 * (int)v19[(unsigned __int16)v14--]) = (v17 ^ ((__int16)(result << 15) >> 15))
                                                                                     + result;
      }
      while (v18 > 0);
    }
  }
  return result;
}

BOOL sub_215FC3C08(uint64_t a1, uint64_t a2, uint64_t a3, char a4, unsigned int a5, uint64_t a6, unsigned __int8 *a7)
{
  char v10;
  unsigned int v11;
  unsigned int v12;
  _BOOL8 result;
  uint64_t v14;
  __int16 v15;
  __int16 v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  _DWORD v24[4];
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v10 = a4 + 8;
  if ((*(_BYTE *)a3 & 1) != 0)
    v11 = 0;
  else
    v11 = a5;
  if ((*(_BYTE *)a2 & 1) != 0)
    v12 = 0;
  else
    v12 = a5;
  result = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1+ ((*(unsigned __int16 *)(a3 + 10) >> (a4 + 8)) & *(_BYTE *)a3 & 1 | v11 | (2* ((*(unsigned __int16 *)(a2 + 10) >> v10) & *(_BYTE *)a2 & 1 | v12)))+ 97+ 208));
  *(_WORD *)(a1 + 14) |= result << v10;
  if (result)
  {
    v14 = 0;
    v15 = 0;
    while (1)
    {
      result = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v14 + 357));
      if (result)
      {
        v16 = v15 + 1;
        v24[v15] = v14;
        result = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v14 + 418));
        ++v15;
        if (result)
          break;
      }
      if (v14++ >= 2)
      {
        if ((_DWORD)v14 == 3)
        {
          v16 = v15 + 1;
          v24[v15] = 3;
        }
        else
        {
          v16 = v15;
        }
        break;
      }
    }
    if (((v16 - 1) & 0x8000) == 0)
    {
      v17 = 0;
      v18 = 0;
      v19 = (__int16)(v16 - 1);
      do
      {
        LODWORD(v20) = v18 + 258;
        if (v18 >= 3)
          LODWORD(v20) = 261;
        if (v17)
          v20 = 257;
        else
          v20 = v20;
        if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v20 + 208)))
        {
          if (v17 >= 4)
            v21 = 4;
          else
            v21 = v17;
          ++v17;
          v22 = sub_215FC2E80((unsigned int *)a1, 262, v21, 14, 0) + 2;
        }
        else
        {
          ++v18;
          LOWORD(v22) = 1;
        }
        result = sub_215FC2D70((unsigned int *)a1);
        v23 = (__int16)v19;
        *(_WORD *)(a6 + 2 * (int)v24[(unsigned __int16)v19--]) = ((v22 ^ ((__int16)(result << 15) >> 15)) + result)
                                                                 * *a7;
      }
      while (v23 > 0);
    }
  }
  return result;
}

BOOL sub_215FC3E10(uint64_t a1, uint64_t a2, uint64_t a3, char a4, unsigned int a5, uint64_t a6, unsigned __int8 *a7)
{
  char v10;
  unsigned int v11;
  unsigned int v12;
  _BOOL8 result;
  uint64_t v14;
  __int16 v15;
  __int16 v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  _DWORD v24[4];
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v10 = a4 + 8;
  if ((*(_BYTE *)a3 & 1) != 0)
    v11 = 0;
  else
    v11 = a5;
  if ((*(_BYTE *)a2 & 1) != 0)
    v12 = 0;
  else
    v12 = a5;
  result = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1+ ((*(unsigned __int16 *)(a3 + 10) >> (a4 + 8)) & *(_BYTE *)a3 & 1 | v11 | (2* ((*(unsigned __int16 *)(a2 + 10) >> v10) & *(_BYTE *)a2 & 1 | v12)))+ 97+ 208));
  *(_WORD *)(a1 + 14) |= result << v10;
  if (result)
  {
    v14 = 0;
    v15 = 0;
    while (1)
    {
      result = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v14 + 529));
      if (result)
      {
        v16 = v15 + 1;
        v24[v15] = v14;
        result = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v14 + 590));
        ++v15;
        if (result)
          break;
      }
      if (v14++ >= 2)
      {
        if ((_DWORD)v14 == 3)
        {
          v16 = v15 + 1;
          v24[v15] = 3;
        }
        else
        {
          v16 = v15;
        }
        break;
      }
    }
    if (((v16 - 1) & 0x8000) == 0)
    {
      v17 = 0;
      v18 = 0;
      v19 = (__int16)(v16 - 1);
      do
      {
        LODWORD(v20) = v18 + 258;
        if (v18 >= 3)
          LODWORD(v20) = 261;
        if (v17)
          v20 = 257;
        else
          v20 = v20;
        if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v20 + 208)))
        {
          if (v17 >= 4)
            v21 = 4;
          else
            v21 = v17;
          ++v17;
          v22 = sub_215FC2E80((unsigned int *)a1, 262, v21, 14, 0) + 2;
        }
        else
        {
          ++v18;
          LOWORD(v22) = 1;
        }
        result = sub_215FC2D70((unsigned int *)a1);
        v23 = (__int16)v19;
        *(_WORD *)(a6 + 2 * (int)v24[(unsigned __int16)v19--]) = ((v22 ^ ((__int16)(result << 15) >> 15)) + result)
                                                                 * *a7;
      }
      while (v23 > 0);
    }
  }
  return result;
}

BOOL sub_215FC4018(uint64_t a1, unsigned __int8 *a2, _BYTE *a3, uint64_t a4)
{
  _BOOL4 v6;
  int v7;
  int v8;
  _BOOL8 result;
  uint64_t v10;
  __int16 v11;
  __int16 v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  _DWORD v20[16];
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v6 = (*a3 & 1) != 0 && a3[4] || !(*a3 & 1);
  v7 = *a2;
  if ((v7 & 1) != 0 && a2[4])
    v8 = 2;
  else
    v8 = ~(2 * v7) & 2;
  result = sub_215FC2C90((unsigned int *)a1, (_BYTE *)((v8 + v6) + a1 + 293));
  *(_BYTE *)(a1 + 10) |= result;
  if (result)
  {
    v10 = 0;
    v11 = 0;
    while (1)
    {
      result = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v10 + 313));
      if (result)
      {
        v12 = v11 + 1;
        v20[v11] = v10;
        result = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v10 + 374));
        ++v11;
        if (result)
          break;
      }
      if (v10++ >= 0xE)
      {
        if ((_DWORD)v10 == 15)
        {
          v12 = v11 + 1;
          v20[v11] = 15;
        }
        else
        {
          v12 = v11;
        }
        break;
      }
    }
    if (((v12 - 1) & 0x8000) == 0)
    {
      v13 = 0;
      v14 = 0;
      v15 = (__int16)(v12 - 1);
      do
      {
        LODWORD(v16) = v14 + 228;
        if (v14 >= 3)
          LODWORD(v16) = 231;
        if (v13)
          v16 = 227;
        else
          v16 = v16;
        if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v16 + 208)))
        {
          if (v13 >= 4)
            v17 = 9;
          else
            v17 = v13 + 5;
          ++v13;
          v18 = sub_215FC2E80((unsigned int *)a1, 227, v17, 14, 0) + 2;
        }
        else
        {
          ++v14;
          LOWORD(v18) = 1;
        }
        result = sub_215FC2D70((unsigned int *)a1);
        v19 = (__int16)v15;
        *(_WORD *)(a4 + 2 * (int)v20[(unsigned __int16)v15--]) = (v18 ^ ((__int16)(result << 15) >> 15)) + result;
      }
      while (v19 > 0);
    }
  }
  return result;
}

BOOL sub_215FC4218(uint64_t a1, unsigned __int8 *a2, _BYTE *a3, uint64_t a4)
{
  _BOOL4 v6;
  int v7;
  int v8;
  _BOOL8 result;
  uint64_t v10;
  __int16 v11;
  __int16 v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  _DWORD v20[16];
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v6 = (*a3 & 1) != 0 && a3[4] || !(*a3 & 1);
  v7 = *a2;
  if ((v7 & 1) != 0 && a2[4])
    v8 = 2;
  else
    v8 = ~(2 * v7) & 2;
  result = sub_215FC2C90((unsigned int *)a1, (_BYTE *)((v8 + v6) + a1 + 293));
  *(_BYTE *)(a1 + 10) |= result;
  if (result)
  {
    v10 = 0;
    v11 = 0;
    while (1)
    {
      result = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v10 + 485));
      if (result)
      {
        v12 = v11 + 1;
        v20[v11] = v10;
        result = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v10 + 546));
        ++v11;
        if (result)
          break;
      }
      if (v10++ >= 0xE)
      {
        if ((_DWORD)v10 == 15)
        {
          v12 = v11 + 1;
          v20[v11] = 15;
        }
        else
        {
          v12 = v11;
        }
        break;
      }
    }
    if (((v12 - 1) & 0x8000) == 0)
    {
      v13 = 0;
      v14 = 0;
      v15 = (__int16)(v12 - 1);
      do
      {
        LODWORD(v16) = v14 + 228;
        if (v14 >= 3)
          LODWORD(v16) = 231;
        if (v13)
          v16 = 227;
        else
          v16 = v16;
        if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v16 + 208)))
        {
          if (v13 >= 4)
            v17 = 9;
          else
            v17 = v13 + 5;
          ++v13;
          v18 = sub_215FC2E80((unsigned int *)a1, 227, v17, 14, 0) + 2;
        }
        else
        {
          ++v14;
          LOWORD(v18) = 1;
        }
        result = sub_215FC2D70((unsigned int *)a1);
        v19 = (__int16)v15;
        *(_WORD *)(a4 + 2 * (int)v20[(unsigned __int16)v15--]) = (v18 ^ ((__int16)(result << 15) >> 15)) + result;
      }
      while (v19 > 0);
    }
  }
  return result;
}

BOOL sub_215FC4418(uint64_t a1, _BYTE *a2, _BYTE *a3, unsigned int a4, uint64_t a5)
{
  unsigned int v6;
  _BYTE *v7;
  _BYTE *v8;
  unsigned int v10;
  unsigned int v11;
  _BOOL4 v12;
  __int16 v13;
  uint64_t v14;
  __int16 v15;
  __int16 v16;
  __int16 v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  uint64_t v21;
  int v22;
  int v23;
  __int16 v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  _BOOL8 result;
  __int16 v29;
  uint64_t v30;
  __int16 v31;
  __int16 v32;
  unsigned int v33;
  unsigned int v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  int v38;
  int v39;
  int v40;
  _BYTE *v41;
  _BYTE *v42;
  unsigned int v43;
  _WORD v44[4];
  uint64_t v45;

  v6 = a4;
  v7 = a3;
  v8 = a2;
  v45 = *MEMORY[0x24BDAC8D0];
  if ((*a3 & 1) != 0)
    v10 = 0;
  else
    v10 = a4;
  if ((*a2 & 1) != 0)
    v11 = 0;
  else
    v11 = a4;
  v12 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + (a3[11] & *a3 & 1 | v10 | (2 * (a2[11] & *a2 & 1 | v11))) + 97 + 208));
  if (v12)
    v13 = 256;
  else
    v13 = 0;
  *(_WORD *)(a1 + 14) |= v13;
  if (v12)
  {
    v41 = v7;
    v42 = v8;
    v43 = v6;
    v14 = 0;
    v15 = 0;
    while (1)
    {
      if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v14 + 357)))
      {
        v16 = v15 + 1;
        v44[v15++] = v14;
        if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v14 + 418)))
          break;
      }
      if (v14++ >= 2)
      {
        if ((_DWORD)v14 == 3)
        {
          v16 = v15 + 1;
          v44[v15] = 3;
        }
        else
        {
          v16 = v15;
        }
        break;
      }
    }
    v17 = v16 - 1;
    if (((v16 - 1) & 0x8000) == 0)
    {
      v18 = 0;
      v19 = 0;
      v20 = v17;
      do
      {
        LODWORD(v21) = v19 + 258;
        if (v19 >= 3)
          LODWORD(v21) = 261;
        if (v18)
          v21 = 257;
        else
          v21 = v21;
        if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v21 + 208)))
        {
          if (v18 >= 4)
            v22 = 4;
          else
            v22 = v18;
          ++v18;
          v23 = sub_215FC2E80((unsigned int *)a1, 257, v22 + 5, 14, 0) + 2;
        }
        else
        {
          ++v19;
          LOWORD(v23) = 1;
        }
        v24 = sub_215FC2D70((unsigned int *)a1);
        v25 = (__int16)v20;
        *(_WORD *)(a5 + 2 * (unsigned __int16)v44[(unsigned __int16)v20--]) = (v23 ^ ((__int16)(v24 << 15) >> 15))
                                                                              + v24;
      }
      while (v25 > 0);
    }
    v6 = v43;
    v7 = v41;
    v8 = v42;
  }
  if ((*v7 & 1) != 0)
    v26 = 0;
  else
    v26 = v6;
  if ((*v8 & 1) != 0)
    v27 = 0;
  else
    v27 = v6;
  result = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1+ (*v7 & 1 & (*((unsigned __int16 *)v7 + 5) >> 9) | v26 | (2* (*v8 & 1 & (*((unsigned __int16 *)v8 + 5) >> 9) | v27)))+ 97+ 208));
  if (result)
    v29 = 512;
  else
    v29 = 0;
  *(_WORD *)(a1 + 14) |= v29;
  if (result)
  {
    v30 = 0;
    v31 = 0;
    while (1)
    {
      result = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v30 + 357));
      if (result)
      {
        v32 = v31 + 1;
        v44[v31] = v30;
        result = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v30 + 418));
        ++v31;
        if (result)
          break;
      }
      if (v30++ >= 2)
      {
        if ((_DWORD)v30 == 3)
        {
          v32 = v31 + 1;
          v44[v31] = 3;
        }
        else
        {
          v32 = v31;
        }
        break;
      }
    }
    if (((v32 - 1) & 0x8000) == 0)
    {
      v33 = 0;
      v34 = 0;
      v35 = a5 + 8;
      v36 = (__int16)(v32 - 1);
      do
      {
        LODWORD(v37) = v34 + 258;
        if (v34 >= 3)
          LODWORD(v37) = 261;
        if (v33)
          v37 = 257;
        else
          v37 = v37;
        if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v37 + 208)))
        {
          if (v33 >= 4)
            v38 = 4;
          else
            v38 = v33;
          ++v33;
          v39 = sub_215FC2E80((unsigned int *)a1, 257, v38 + 5, 14, 0) + 2;
        }
        else
        {
          ++v34;
          LOWORD(v39) = 1;
        }
        result = sub_215FC2D70((unsigned int *)a1);
        v40 = (__int16)v36;
        *(_WORD *)(v35 + 2 * (unsigned __int16)v44[(unsigned __int16)v36--]) = (v39 ^ ((__int16)(result << 15) >> 15))
                                                                               + result;
      }
      while (v40 > 0);
    }
  }
  return result;
}

BOOL sub_215FC47C0(uint64_t a1, _BYTE *a2, _BYTE *a3, unsigned int a4, uint64_t a5)
{
  unsigned int v6;
  _BYTE *v7;
  _BYTE *v8;
  unsigned int v10;
  unsigned int v11;
  _BOOL4 v12;
  __int16 v13;
  uint64_t v14;
  __int16 v15;
  __int16 v16;
  __int16 v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  uint64_t v21;
  int v22;
  int v23;
  __int16 v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  _BOOL8 result;
  __int16 v29;
  uint64_t v30;
  __int16 v31;
  __int16 v32;
  unsigned int v33;
  unsigned int v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  int v38;
  int v39;
  int v40;
  _BYTE *v41;
  _BYTE *v42;
  unsigned int v43;
  _WORD v44[4];
  uint64_t v45;

  v6 = a4;
  v7 = a3;
  v8 = a2;
  v45 = *MEMORY[0x24BDAC8D0];
  if ((*a3 & 1) != 0)
    v10 = 0;
  else
    v10 = a4;
  if ((*a2 & 1) != 0)
    v11 = 0;
  else
    v11 = a4;
  v12 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + (a3[11] & *a3 & 1 | v10 | (2 * (a2[11] & *a2 & 1 | v11))) + 97 + 208));
  if (v12)
    v13 = 256;
  else
    v13 = 0;
  *(_WORD *)(a1 + 14) |= v13;
  if (v12)
  {
    v41 = v7;
    v42 = v8;
    v43 = v6;
    v14 = 0;
    v15 = 0;
    while (1)
    {
      if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v14 + 529)))
      {
        v16 = v15 + 1;
        v44[v15++] = v14;
        if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v14 + 590)))
          break;
      }
      if (v14++ >= 2)
      {
        if ((_DWORD)v14 == 3)
        {
          v16 = v15 + 1;
          v44[v15] = 3;
        }
        else
        {
          v16 = v15;
        }
        break;
      }
    }
    v17 = v16 - 1;
    if (((v16 - 1) & 0x8000) == 0)
    {
      v18 = 0;
      v19 = 0;
      v20 = v17;
      do
      {
        LODWORD(v21) = v19 + 258;
        if (v19 >= 3)
          LODWORD(v21) = 261;
        if (v18)
          v21 = 257;
        else
          v21 = v21;
        if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v21 + 208)))
        {
          if (v18 >= 4)
            v22 = 4;
          else
            v22 = v18;
          ++v18;
          v23 = sub_215FC2E80((unsigned int *)a1, 257, v22 + 5, 14, 0) + 2;
        }
        else
        {
          ++v19;
          LOWORD(v23) = 1;
        }
        v24 = sub_215FC2D70((unsigned int *)a1);
        v25 = (__int16)v20;
        *(_WORD *)(a5 + 2 * (unsigned __int16)v44[(unsigned __int16)v20--]) = (v23 ^ ((__int16)(v24 << 15) >> 15))
                                                                              + v24;
      }
      while (v25 > 0);
    }
    v6 = v43;
    v7 = v41;
    v8 = v42;
  }
  if ((*v7 & 1) != 0)
    v26 = 0;
  else
    v26 = v6;
  if ((*v8 & 1) != 0)
    v27 = 0;
  else
    v27 = v6;
  result = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1+ (*v7 & 1 & (*((unsigned __int16 *)v7 + 5) >> 9) | v26 | (2* (*v8 & 1 & (*((unsigned __int16 *)v8 + 5) >> 9) | v27)))+ 97+ 208));
  if (result)
    v29 = 512;
  else
    v29 = 0;
  *(_WORD *)(a1 + 14) |= v29;
  if (result)
  {
    v30 = 0;
    v31 = 0;
    while (1)
    {
      result = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v30 + 529));
      if (result)
      {
        v32 = v31 + 1;
        v44[v31] = v30;
        result = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v30 + 590));
        ++v31;
        if (result)
          break;
      }
      if (v30++ >= 2)
      {
        if ((_DWORD)v30 == 3)
        {
          v32 = v31 + 1;
          v44[v31] = 3;
        }
        else
        {
          v32 = v31;
        }
        break;
      }
    }
    if (((v32 - 1) & 0x8000) == 0)
    {
      v33 = 0;
      v34 = 0;
      v35 = a5 + 8;
      v36 = (__int16)(v32 - 1);
      do
      {
        LODWORD(v37) = v34 + 258;
        if (v34 >= 3)
          LODWORD(v37) = 261;
        if (v33)
          v37 = 257;
        else
          v37 = v37;
        if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v37 + 208)))
        {
          if (v33 >= 4)
            v38 = 4;
          else
            v38 = v33;
          ++v33;
          v39 = sub_215FC2E80((unsigned int *)a1, 257, v38 + 5, 14, 0) + 2;
        }
        else
        {
          ++v34;
          LOWORD(v39) = 1;
        }
        result = sub_215FC2D70((unsigned int *)a1);
        v40 = (__int16)v36;
        *(_WORD *)(v35 + 2 * (unsigned __int16)v44[(unsigned __int16)v36--]) = (v39 ^ ((__int16)(result << 15) >> 15))
                                                                               + result;
      }
      while (v40 > 0);
    }
  }
  return result;
}

BOOL sub_215FC4B68(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, char a5, int a6, uint64_t a7)
{
  char v9;
  int v10;
  int v11;
  int v12;
  int v13;
  _BOOL8 result;
  uint64_t v15;
  __int16 v16;
  __int16 v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  uint64_t v21;
  int v22;
  int v23;
  int v24;
  _WORD v25[16];
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v9 = a4 + 4 * a5;
  if (a4 >= 2)
  {
    v11 = (*(unsigned __int16 *)(a1 + 14) >> (v9 - 2)) & 1;
    if ((a4 & 1) != 0)
    {
LABEL_6:
      v12 = (*(unsigned __int16 *)(a1 + 14) >> (v9 - 1)) & 1;
      goto LABEL_12;
    }
  }
  else
  {
    if ((*(_BYTE *)a2 & 1) != 0)
      v10 = 0;
    else
      v10 = a6;
    v11 = (*(unsigned __int16 *)(a2 + 10) >> (v9 + 2)) & *(_BYTE *)a2 & 1 | v10;
    if ((a4 & 1) != 0)
      goto LABEL_6;
  }
  if ((*(_BYTE *)a3 & 1) != 0)
    v13 = 0;
  else
    v13 = a6;
  v12 = (*(unsigned __int16 *)(a3 + 10) >> (v9 + 1)) & *(_BYTE *)a3 & 1 | v13;
LABEL_12:
  result = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + (v12 + 2 * v11 + 101) + 208));
  *(_WORD *)(a1 + 14) |= result << v9;
  if (result)
  {
    v15 = 0;
    v16 = 0;
    while (1)
    {
      result = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v15 + 360));
      if (result)
      {
        v17 = v16 + 1;
        v25[v16] = v15;
        result = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v15 + 421));
        ++v16;
        if (result)
          break;
      }
      if (v15++ >= 0xD)
      {
        if ((_DWORD)v15 == 14)
        {
          v17 = v16 + 1;
          v25[v16] = 14;
        }
        else
        {
          v17 = v16;
        }
        break;
      }
    }
    if (((v17 - 1) & 0x8000) == 0)
    {
      v18 = 0;
      v19 = 0;
      v20 = (__int16)(v17 - 1);
      do
      {
        LODWORD(v21) = v19 + 267;
        if (v19 >= 3)
          LODWORD(v21) = 270;
        if (v18)
          v21 = 266;
        else
          v21 = v21;
        if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v21 + 208)))
        {
          if (v18 >= 4)
            v22 = 9;
          else
            v22 = v18 + 5;
          ++v18;
          v23 = sub_215FC2E80((unsigned int *)a1, 266, v22, 14, 0) + 2;
        }
        else
        {
          ++v19;
          LOWORD(v23) = 1;
        }
        result = sub_215FC2D70((unsigned int *)a1);
        v24 = (__int16)v20;
        *(_WORD *)(a7 + 2 * (unsigned __int16)v25[(unsigned __int16)v20--]) = (v23 ^ ((__int16)(result << 15) >> 15))
                                                                              + result;
      }
      while (v24 > 0);
    }
  }
  return result;
}

BOOL sub_215FC4DAC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, char a5, int a6, uint64_t a7)
{
  char v9;
  int v10;
  int v11;
  int v12;
  int v13;
  _BOOL8 result;
  uint64_t v15;
  __int16 v16;
  __int16 v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  uint64_t v21;
  int v22;
  int v23;
  int v24;
  _WORD v25[16];
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v9 = a4 + 4 * a5;
  if (a4 >= 2)
  {
    v11 = (*(unsigned __int16 *)(a1 + 14) >> (v9 - 2)) & 1;
    if ((a4 & 1) != 0)
    {
LABEL_6:
      v12 = (*(unsigned __int16 *)(a1 + 14) >> (v9 - 1)) & 1;
      goto LABEL_12;
    }
  }
  else
  {
    if ((*(_BYTE *)a2 & 1) != 0)
      v10 = 0;
    else
      v10 = a6;
    v11 = (*(unsigned __int16 *)(a2 + 10) >> (v9 + 2)) & *(_BYTE *)a2 & 1 | v10;
    if ((a4 & 1) != 0)
      goto LABEL_6;
  }
  if ((*(_BYTE *)a3 & 1) != 0)
    v13 = 0;
  else
    v13 = a6;
  v12 = (*(unsigned __int16 *)(a3 + 10) >> (v9 + 1)) & *(_BYTE *)a3 & 1 | v13;
LABEL_12:
  result = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + (v12 + 2 * v11 + 101) + 208));
  *(_WORD *)(a1 + 14) |= result << v9;
  if (result)
  {
    v15 = 0;
    v16 = 0;
    while (1)
    {
      result = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v15 + 532));
      if (result)
      {
        v17 = v16 + 1;
        v25[v16] = v15;
        result = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v15 + 593));
        ++v16;
        if (result)
          break;
      }
      if (v15++ >= 0xD)
      {
        if ((_DWORD)v15 == 14)
        {
          v17 = v16 + 1;
          v25[v16] = 14;
        }
        else
        {
          v17 = v16;
        }
        break;
      }
    }
    if (((v17 - 1) & 0x8000) == 0)
    {
      v18 = 0;
      v19 = 0;
      v20 = (__int16)(v17 - 1);
      do
      {
        LODWORD(v21) = v19 + 267;
        if (v19 >= 3)
          LODWORD(v21) = 270;
        if (v18)
          v21 = 266;
        else
          v21 = v21;
        if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v21 + 208)))
        {
          if (v18 >= 4)
            v22 = 9;
          else
            v22 = v18 + 5;
          ++v18;
          v23 = sub_215FC2E80((unsigned int *)a1, 266, v22, 14, 0) + 2;
        }
        else
        {
          ++v19;
          LOWORD(v23) = 1;
        }
        result = sub_215FC2D70((unsigned int *)a1);
        v24 = (__int16)v20;
        *(_WORD *)(a7 + 2 * (unsigned __int16)v25[(unsigned __int16)v20--]) = (v23 ^ ((__int16)(result << 15) >> 15))
                                                                              + result;
      }
      while (v24 > 0);
    }
  }
  return result;
}

void sub_215FC4FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, int a6, unsigned int a7, uint64_t a8, char a9, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unsigned int v17;
  uint64_t i;
  __int16 v19;
  unsigned int v20;
  char *v21;
  char *v22;
  unsigned int v23;
  __int16 v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  uint64_t v28;
  int v29;
  int v30;
  __int16 v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  _BOOL4 v51;
  int v52;
  __int16 v53;
  int v54;
  int v55;
  __int16 v56;
  __int16 v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  __int16 v64;
  int v65;
  uint64_t v66;
  char v67;
  _OWORD *v68;
  int v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  int v74;
  int v75;
  int v76;
  _BOOL4 v77;
  uint64_t v78;
  __int16 v79;
  uint64_t v80;
  __int16 v81;
  unsigned int v82;
  unsigned int v83;
  int v84;
  uint64_t v85;
  int v86;
  int v87;
  __int16 v88;
  int v89;
  uint64_t v90;
  int v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  _BOOL4 v105;
  int v106;
  __int16 v107;
  int v108;
  int v109;
  __int16 v110;
  __int16 v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  __int16 v118;
  int v119;
  char v120;
  uint64_t v121;
  unsigned int j;
  _OWORD *v123;
  unsigned int v124;
  uint64_t v125;
  uint64_t v126;
  unsigned int v127;
  uint64_t v128;
  int v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v136;
  uint64_t v137;
  int v138;
  int v140;
  uint64_t v141;
  int v142;
  _WORD v143[128];
  uint64_t v144;

  v144 = *MEMORY[0x24BDAC8D0];
  v127 = a7 & 0xF;
  v124 = a7 >> 4;
  v138 = a5 | a6;
  v123 = *(_OWORD **)(a1 + 3216);
  if (*(_BYTE *)(a10 + 1422192))
  {
    v12 = *(_QWORD *)(a1 + 3216);
    if (a5)
    {
      *v123 = 0u;
      v123[1] = 0u;
      sub_215FC3808(a1, a2, (unsigned __int8 *)a3, (_BYTE *)a4);
      v13 = *(_QWORD *)(a1 + 3216) + 34;
    }
    else
    {
      v13 = (uint64_t)(v123 + 2);
    }
    *(_QWORD *)(a1 + 3216) = v13;
    bzero((void *)(v12 + 32), 0x310uLL);
    if (a9)
    {
      for (i = 0; i != 4; ++i)
      {
        if (((v127 >> i) & 1) != 0)
        {
          v19 = 0;
          v20 = -1;
          v21 = &byte_2160EE3B4;
          v22 = &byte_2160EE3F4;
          while (1)
          {
            ++v20;
            v23 = *v21++;
            if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(v23 + a1 + 610)))
            {
              v24 = v19 + 1;
              *(_DWORD *)&v143[2 * v19++] = v20;
              if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(*v22 + a1 + 625)))
                break;
            }
            ++v22;
            if (v20 >= 0x3E)
            {
              if (v20 == 62)
              {
                v24 = v19 + 1;
                *(_DWORD *)&v143[2 * v19] = 63;
              }
              else
              {
                v24 = v19;
              }
              break;
            }
          }
          if (((v24 - 1) & 0x8000) == 0)
          {
            v25 = 0;
            v26 = 0;
            v27 = (__int16)(v24 - 1);
            do
            {
              LODWORD(v28) = v26 + 427;
              if (v26 >= 3)
                LODWORD(v28) = 430;
              if (v25)
                v28 = 426;
              else
                v28 = v28;
              if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v28 + 208)))
              {
                if (v25 >= 4)
                  v29 = 9;
                else
                  v29 = v25 + 5;
                ++v25;
                v30 = sub_215FC2E80((unsigned int *)a1, 426, v29, 14, 0) + 2;
              }
              else
              {
                ++v26;
                LOWORD(v30) = 1;
              }
              v31 = sub_215FC2D70((unsigned int *)a1);
              v32 = (__int16)v27;
              *(_WORD *)(*(_QWORD *)(a1 + 3216) + 2 * *(int *)&v143[2 * (unsigned __int16)v27--]) = (v30 ^ ((__int16)(v31 << 15) >> 15)) + v31;
            }
            while (v32 > 0);
          }
          *(_BYTE *)(a8 + 4 * i) = 1;
          *(_WORD *)(a1 + 12) |= 15 << (4 * i);
        }
        *(_QWORD *)(a1 + 3216) += 128;
      }
LABEL_85:
      v68 = v123;
      if ((v124 & 3) != 0)
      {
        if (v138)
          v69 = 0;
        else
          v69 = 3;
        sub_215FC3C08(a1, a3, a4, 0, v138, (uint64_t)(v123 + 50), (unsigned __int8 *)(a10 + 1422194 + 16 * (v69 + 1)));
        sub_215FC3C08(a1, a3, a4, 1, v138, (uint64_t)v123 + 808, (unsigned __int8 *)(a10 + 1422194 + 16 * (v69 + 2)));
      }
      *(_QWORD *)(a1 + 3216) = (char *)v123 + 546;
      if ((v124 & 2) == 0)
      {
LABEL_175:
        *(_QWORD *)(a1 + 3216) = (char *)v68 + 802;
        return;
      }
      v70 = 0;
      v71 = 3;
      if (v138)
        v71 = 0;
      v141 = v71;
      while (1)
      {
        if (v70 < 4)
          v72 = 1;
        else
          v72 = 2;
        if ((v70 & 2) != 0)
        {
          v74 = (*(unsigned __int16 *)(a1 + 14) >> (v70 - 2)) & 1;
          if ((v70 & 1) == 0)
            goto LABEL_103;
        }
        else
        {
          v73 = v138;
          if ((*(_BYTE *)a3 & 1) != 0)
            v73 = 0;
          v74 = (*(unsigned __int16 *)(a3 + 10) >> (v70 + 2)) & *(_BYTE *)a3 & 1 | v73;
          if ((v70 & 1) == 0)
          {
LABEL_103:
            v76 = v138;
            if ((*(_BYTE *)a4 & 1) != 0)
              v76 = 0;
            v75 = (*(unsigned __int16 *)(a4 + 10) >> (v70 + 1)) & *(_BYTE *)a4 & 1 | v76;
            goto LABEL_106;
          }
        }
        v75 = (*(unsigned __int16 *)(a1 + 14) >> (v70 - 1)) & 1;
LABEL_106:
        v77 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + (v75 + 2 * v74 + 101) + 208));
        *(_WORD *)(a1 + 14) |= v77 << v70;
        if (v77)
        {
          v78 = 0;
          v79 = 0;
          v80 = a10 + 16 * (v72 + v141) + 1422195;
          while (1)
          {
            if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v78 + 360)))
            {
              v81 = v79 + 1;
              *(_DWORD *)&v143[2 * v79++] = v78;
              if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v78 + 421)))
                break;
            }
            if (v78++ >= 0xD)
            {
              if ((_DWORD)v78 == 14)
              {
                v81 = v79 + 1;
                *(_DWORD *)&v143[2 * v79] = 14;
              }
              else
              {
                v81 = v79;
              }
              break;
            }
          }
          if (((v81 - 1) & 0x8000) == 0)
          {
            v82 = 0;
            v83 = 0;
            v84 = (__int16)(v81 - 1);
            do
            {
              LODWORD(v85) = v83 + 267;
              if (v83 >= 3)
                LODWORD(v85) = 270;
              if (v82)
                v85 = 266;
              else
                v85 = v85;
              if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v85 + 208)))
              {
                if (v82 >= 4)
                  v86 = 9;
                else
                  v86 = v82 + 5;
                ++v82;
                v87 = sub_215FC2E80((unsigned int *)a1, 266, v86, 14, 0) + 2;
              }
              else
              {
                ++v83;
                LOWORD(v87) = 1;
              }
              v88 = sub_215FC2D70((unsigned int *)a1);
              v89 = (__int16)v84;
              v90 = *(int *)&v143[2 * (unsigned __int16)v84];
              *(_WORD *)(*(_QWORD *)(a1 + 3216) + 2 * v90) = ((v87 ^ ((__int16)(v88 << 15) >> 15)) + v88)
                                                           * *(unsigned __int8 *)(v80 + v90);
              --v84;
            }
            while (v89 > 0);
          }
        }
        *(_QWORD *)(a1 + 3216) += 32;
        if (++v70 == 8)
          return;
      }
    }
    v33 = 48;
    if (v138)
      v33 = 0;
    v34 = a10 + v33 + a5 + 1422194;
    if (a5)
      v35 = 15;
    else
      v35 = 16;
    if (a5)
      v36 = 89;
    else
      v36 = 93;
    v37 = 0;
    v38 = 1;
    if (!a5)
      v38 = 2;
    v128 = v38;
    v140 = v35;
    v39 = v35 - 1;
    v130 = v36;
    while (1)
    {
      v125 = v37;
      if (((v127 >> v37) & 1) != 0)
        break;
      *(_QWORD *)(a1 + 3216) += 128;
LABEL_84:
      v37 = v125 + 1;
      if (v125 == 3)
        goto LABEL_85;
    }
    v40 = 0;
    v41 = 4 * v37;
    v132 = 4 * v37;
    while (1)
    {
      v42 = v40 + v41;
      v43 = ((v40 + v41) >> 1) & 2 | v40 & 1;
      v44 = ((v40 + v41) >> 1) & 4 | v40 & 2;
      v45 = v44 >> 1;
      if ((_DWORD)v44)
      {
        v46 = (*(unsigned __int16 *)(a1 + 12) >> (v42 - byte_2160EE440[v45])) & 1;
        if (!(_DWORD)v43)
          goto LABEL_53;
      }
      else
      {
        v48 = v138;
        if ((*(_BYTE *)a3 & 1) != 0)
          v48 = 0;
        v46 = (*(unsigned __int16 *)(a3 + 8) >> byte_2160EE444[v43]) & *(_BYTE *)a3 & 1 | v48;
        if (!(_DWORD)v43)
        {
LABEL_53:
          v49 = (*(unsigned __int16 *)(a4 + 8) >> byte_2160EE458[v45]) & *(_BYTE *)a4 & 1;
          v50 = v138;
          if ((*(_BYTE *)a4 & 1) != 0)
            v50 = 0;
          v47 = v49 | v50;
          goto LABEL_56;
        }
      }
      v47 = (*(unsigned __int16 *)(a1 + 12) >> byte_2160EE448[v42]) & 1;
LABEL_56:
      v51 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + (v36 + 2 * v46 + v47) + 208));
      *(_WORD *)(a1 + 12) |= v51 << v42;
      if (v51)
      {
        v136 = v40 + v41;
        v52 = 0;
        v53 = 0;
        v54 = word_2160EE434[v128];
        v55 = word_2160EE1A8[v128];
        do
        {
          if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + (v52 + v54) + 208)))
          {
            *(_DWORD *)&v143[2 * v53] = v52;
            if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + (v54 + 61 + v52) + 208)))
              v52 = v140;
            ++v53;
          }
          ++v52;
        }
        while (v52 < v39);
        if (v52 == v39)
        {
          v56 = v53++;
          *(_DWORD *)&v143[2 * v56] = v39;
        }
        v57 = v53 - 1;
        if (((v53 - 1) & 0x8000) == 0)
        {
          v58 = 0;
          v59 = 0;
          v60 = v57;
          do
          {
            if (v59 < 3)
              v61 = v59 + 1;
            else
              v61 = 4;
            if (v58)
              v61 = 0;
            if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + (v61 + v55) + 208)))
            {
              if (v58 >= 4)
                v62 = 9;
              else
                v62 = v58 + 5;
              ++v58;
              v63 = sub_215FC2E80((unsigned int *)a1, v55, v62, 14, 0) + 2;
            }
            else
            {
              ++v59;
              LOWORD(v63) = 1;
            }
            v64 = sub_215FC2D70((unsigned int *)a1);
            v65 = (__int16)v60;
            v66 = *(int *)&v143[2 * (unsigned __int16)v60];
            *(_WORD *)(*(_QWORD *)(a1 + 3216) + 2 * v66) = ((v63 ^ ((__int16)(v64 << 15) >> 15)) + v64)
                                                         * *(unsigned __int8 *)(v34 + v66);
            --v60;
          }
          while (v65 > 0);
        }
        v67 = 1;
        v36 = v130;
        v41 = v132;
        v42 = v136;
      }
      else
      {
        v67 = 0;
      }
      *(_BYTE *)(a8 + v42) = v67;
      *(_QWORD *)(a1 + 3216) += 32;
      if (++v40 == 4)
        goto LABEL_84;
    }
  }
  bzero(*(void **)(a2 + 32), 0x330uLL);
  v14 = *(_QWORD *)(a1 + 3216);
  if (a5)
  {
    sub_215FC4018(a1, (unsigned __int8 *)a3, (_BYTE *)a4, v14);
    v15 = *(_QWORD *)(a1 + 3216) + 34;
    v16 = 15;
    v17 = 1;
  }
  else
  {
    v15 = v14 + 32;
    v16 = 16;
    v17 = 2;
  }
  v131 = v17;
  v91 = 4 * v17 + 85;
  *(_QWORD *)(a1 + 3216) = v15;
  v142 = v16;
  v92 = v16 - 1;
  v93 = 0;
  v129 = v91;
  do
  {
    v126 = v93;
    if (((v127 >> v93) & 1) != 0)
    {
      v94 = 0;
      v95 = 4 * v93;
      v133 = 4 * v93;
      while (1)
      {
        v96 = v94 + v95;
        v97 = ((v94 + v95) >> 1) & 2 | v94 & 1;
        v98 = ((v94 + v95) >> 1) & 4 | v94 & 2;
        v99 = v98 >> 1;
        if ((_DWORD)v98)
        {
          v100 = (*(unsigned __int16 *)(a1 + 12) >> (v96 - byte_2160EE440[v99])) & 1;
          if (!(_DWORD)v97)
            goto LABEL_140;
        }
        else
        {
          v102 = v138;
          if ((*(_BYTE *)a3 & 1) != 0)
            v102 = 0;
          v100 = (*(unsigned __int16 *)(a3 + 8) >> byte_2160EE444[v97]) & *(_BYTE *)a3 & 1 | v102;
          if (!(_DWORD)v97)
          {
LABEL_140:
            v103 = (*(unsigned __int16 *)(a4 + 8) >> byte_2160EE458[v99]) & *(_BYTE *)a4 & 1;
            v104 = v138;
            if ((*(_BYTE *)a4 & 1) != 0)
              v104 = 0;
            v101 = v103 | v104;
            goto LABEL_143;
          }
        }
        v101 = (*(unsigned __int16 *)(a1 + 12) >> byte_2160EE448[v96]) & 1;
LABEL_143:
        v105 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + (v91 + 2 * v100 + v101) + 208));
        *(_WORD *)(a1 + 12) |= v105 << v96;
        if (v105)
        {
          v137 = v94 + v95;
          v106 = 0;
          v107 = 0;
          v108 = word_2160EE434[v131];
          v109 = word_2160EE1A8[v131];
          do
          {
            if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + (v106 + v108) + 208)))
            {
              v143[v107] = v106;
              if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + (v108 + 61 + v106) + 208)))
                v106 = v142;
              ++v107;
            }
            ++v106;
          }
          while (v106 < v92);
          if (v106 == v92)
          {
            v110 = v107++;
            v143[v110] = v92;
          }
          v111 = v107 - 1;
          if (((v107 - 1) & 0x8000) == 0)
          {
            v112 = 0;
            v113 = 0;
            v114 = v111;
            do
            {
              if (v113 < 3)
                v115 = v113 + 1;
              else
                v115 = 4;
              if (v112)
                v115 = 0;
              if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + (v115 + v109) + 208)))
              {
                if (v112 >= 4)
                  v116 = 9;
                else
                  v116 = v112 + 5;
                ++v112;
                v117 = sub_215FC2E80((unsigned int *)a1, v109, v116, 14, 0) + 2;
              }
              else
              {
                ++v113;
                LOWORD(v117) = 1;
              }
              v118 = sub_215FC2D70((unsigned int *)a1);
              v119 = (__int16)v114;
              *(_WORD *)(v15 + 2 * (unsigned __int16)v143[(unsigned __int16)v114--]) = (v117 ^ ((__int16)(v118 << 15) >> 15))
                                                                                       + v118;
            }
            while (v119 > 0);
          }
          v120 = 1;
          v91 = v129;
          v95 = v133;
          v96 = v137;
        }
        else
        {
          v120 = 0;
        }
        *(_BYTE *)(a8 + v96) = v120;
        v15 = *(_QWORD *)(a1 + 3216) + 32;
        *(_QWORD *)(a1 + 3216) = v15;
        if (++v94 == 4)
          goto LABEL_171;
      }
    }
    v15 += 128;
    *(_QWORD *)(a1 + 3216) = v15;
LABEL_171:
    v93 = v126 + 1;
  }
  while (v126 != 3);
  v68 = v123;
  if ((v124 & 3) != 0)
  {
    sub_215FC4418(a1, (_BYTE *)a3, (_BYTE *)a4, v138, (uint64_t)(v123 + 50));
    v68 = v123;
  }
  v121 = (uint64_t)v68 + 546;
  *(_QWORD *)(a1 + 3216) = (char *)v68 + 546;
  if ((v124 & 2) == 0)
    goto LABEL_175;
  for (j = 0; j != 8; ++j)
  {
    sub_215FC4B68(a1, a3, a4, j & 3, j >> 2, v138, v121);
    v121 = *(_QWORD *)(a1 + 3216) + 32;
    *(_QWORD *)(a1 + 3216) = v121;
  }
}

void sub_215FC5BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, int a6, unsigned int a7, uint64_t a8, char a9, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unsigned int v17;
  uint64_t i;
  __int16 v19;
  unsigned int v20;
  char *v21;
  char *v22;
  unsigned int v23;
  __int16 v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  uint64_t v28;
  int v29;
  int v30;
  __int16 v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  _BOOL4 v51;
  int v52;
  __int16 v53;
  int v54;
  int v55;
  __int16 v56;
  __int16 v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  __int16 v64;
  int v65;
  uint64_t v66;
  char v67;
  _OWORD *v68;
  int v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  int v74;
  int v75;
  int v76;
  _BOOL4 v77;
  uint64_t v78;
  __int16 v79;
  uint64_t v80;
  __int16 v81;
  unsigned int v82;
  unsigned int v83;
  int v84;
  uint64_t v85;
  int v86;
  int v87;
  __int16 v88;
  int v89;
  uint64_t v90;
  int v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  _BOOL4 v105;
  int v106;
  __int16 v107;
  int v108;
  int v109;
  __int16 v110;
  __int16 v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  __int16 v118;
  int v119;
  char v120;
  uint64_t v121;
  unsigned int j;
  _OWORD *v123;
  unsigned int v124;
  uint64_t v125;
  uint64_t v126;
  unsigned int v127;
  uint64_t v128;
  int v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v136;
  uint64_t v137;
  int v138;
  int v140;
  uint64_t v141;
  int v142;
  _WORD v143[128];
  uint64_t v144;

  v144 = *MEMORY[0x24BDAC8D0];
  v127 = a7 & 0xF;
  v124 = a7 >> 4;
  v138 = a5 | a6;
  v123 = *(_OWORD **)(a1 + 3216);
  if (*(_BYTE *)(a10 + 1422192))
  {
    v12 = *(_QWORD *)(a1 + 3216);
    if (a5)
    {
      *v123 = 0u;
      v123[1] = 0u;
      sub_215FC3A08(a1, a2, (unsigned __int8 *)a3, (_BYTE *)a4);
      v13 = *(_QWORD *)(a1 + 3216) + 34;
    }
    else
    {
      v13 = (uint64_t)(v123 + 2);
    }
    *(_QWORD *)(a1 + 3216) = v13;
    bzero((void *)(v12 + 32), 0x310uLL);
    if (a9)
    {
      for (i = 0; i != 4; ++i)
      {
        if (((v127 >> i) & 1) != 0)
        {
          v19 = 0;
          v20 = -1;
          v21 = &byte_2160EE45C;
          v22 = &byte_2160EE3F4;
          while (1)
          {
            ++v20;
            v23 = *v21++;
            if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(v23 + a1 + 644)))
            {
              v24 = v19 + 1;
              *(_DWORD *)&v143[2 * v19++] = v20;
              if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(*v22 + a1 + 659)))
                break;
            }
            ++v22;
            if (v20 >= 0x3E)
            {
              if (v20 == 62)
              {
                v24 = v19 + 1;
                *(_DWORD *)&v143[2 * v19] = 63;
              }
              else
              {
                v24 = v19;
              }
              break;
            }
          }
          if (((v24 - 1) & 0x8000) == 0)
          {
            v25 = 0;
            v26 = 0;
            v27 = (__int16)(v24 - 1);
            do
            {
              LODWORD(v28) = v26 + 427;
              if (v26 >= 3)
                LODWORD(v28) = 430;
              if (v25)
                v28 = 426;
              else
                v28 = v28;
              if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v28 + 208)))
              {
                if (v25 >= 4)
                  v29 = 9;
                else
                  v29 = v25 + 5;
                ++v25;
                v30 = sub_215FC2E80((unsigned int *)a1, 426, v29, 14, 0) + 2;
              }
              else
              {
                ++v26;
                LOWORD(v30) = 1;
              }
              v31 = sub_215FC2D70((unsigned int *)a1);
              v32 = (__int16)v27;
              *(_WORD *)(*(_QWORD *)(a1 + 3216) + 2 * *(int *)&v143[2 * (unsigned __int16)v27--]) = (v30 ^ ((__int16)(v31 << 15) >> 15)) + v31;
            }
            while (v32 > 0);
          }
          *(_BYTE *)(a8 + 4 * i) = 1;
          *(_WORD *)(a1 + 12) |= 15 << (4 * i);
        }
        *(_QWORD *)(a1 + 3216) += 128;
      }
LABEL_85:
      v68 = v123;
      if ((v124 & 3) != 0)
      {
        if (v138)
          v69 = 0;
        else
          v69 = 3;
        sub_215FC3E10(a1, a3, a4, 0, v138, (uint64_t)(v123 + 50), (unsigned __int8 *)(a10 + 1422418 + 16 * (v69 + 1)));
        sub_215FC3E10(a1, a3, a4, 1, v138, (uint64_t)v123 + 808, (unsigned __int8 *)(a10 + 1422418 + 16 * (v69 + 2)));
      }
      *(_QWORD *)(a1 + 3216) = (char *)v123 + 546;
      if ((v124 & 2) == 0)
      {
LABEL_175:
        *(_QWORD *)(a1 + 3216) = (char *)v68 + 802;
        return;
      }
      v70 = 0;
      v71 = 3;
      if (v138)
        v71 = 0;
      v141 = v71;
      while (1)
      {
        if (v70 < 4)
          v72 = 1;
        else
          v72 = 2;
        if ((v70 & 2) != 0)
        {
          v74 = (*(unsigned __int16 *)(a1 + 14) >> (v70 - 2)) & 1;
          if ((v70 & 1) == 0)
            goto LABEL_103;
        }
        else
        {
          v73 = v138;
          if ((*(_BYTE *)a3 & 1) != 0)
            v73 = 0;
          v74 = (*(unsigned __int16 *)(a3 + 10) >> (v70 + 2)) & *(_BYTE *)a3 & 1 | v73;
          if ((v70 & 1) == 0)
          {
LABEL_103:
            v76 = v138;
            if ((*(_BYTE *)a4 & 1) != 0)
              v76 = 0;
            v75 = (*(unsigned __int16 *)(a4 + 10) >> (v70 + 1)) & *(_BYTE *)a4 & 1 | v76;
            goto LABEL_106;
          }
        }
        v75 = (*(unsigned __int16 *)(a1 + 14) >> (v70 - 1)) & 1;
LABEL_106:
        v77 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + (v75 + 2 * v74 + 101) + 208));
        *(_WORD *)(a1 + 14) |= v77 << v70;
        if (v77)
        {
          v78 = 0;
          v79 = 0;
          v80 = a10 + 16 * (v72 + v141) + 1422419;
          while (1)
          {
            if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v78 + 532)))
            {
              v81 = v79 + 1;
              *(_DWORD *)&v143[2 * v79++] = v78;
              if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v78 + 593)))
                break;
            }
            if (v78++ >= 0xD)
            {
              if ((_DWORD)v78 == 14)
              {
                v81 = v79 + 1;
                *(_DWORD *)&v143[2 * v79] = 14;
              }
              else
              {
                v81 = v79;
              }
              break;
            }
          }
          if (((v81 - 1) & 0x8000) == 0)
          {
            v82 = 0;
            v83 = 0;
            v84 = (__int16)(v81 - 1);
            do
            {
              LODWORD(v85) = v83 + 267;
              if (v83 >= 3)
                LODWORD(v85) = 270;
              if (v82)
                v85 = 266;
              else
                v85 = v85;
              if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v85 + 208)))
              {
                if (v82 >= 4)
                  v86 = 9;
                else
                  v86 = v82 + 5;
                ++v82;
                v87 = sub_215FC2E80((unsigned int *)a1, 266, v86, 14, 0) + 2;
              }
              else
              {
                ++v83;
                LOWORD(v87) = 1;
              }
              v88 = sub_215FC2D70((unsigned int *)a1);
              v89 = (__int16)v84;
              v90 = *(int *)&v143[2 * (unsigned __int16)v84];
              *(_WORD *)(*(_QWORD *)(a1 + 3216) + 2 * v90) = ((v87 ^ ((__int16)(v88 << 15) >> 15)) + v88)
                                                           * *(unsigned __int8 *)(v80 + v90);
              --v84;
            }
            while (v89 > 0);
          }
        }
        *(_QWORD *)(a1 + 3216) += 32;
        if (++v70 == 8)
          return;
      }
    }
    v33 = 48;
    if (v138)
      v33 = 0;
    v34 = a10 + v33 + a5 + 1422418;
    if (a5)
      v35 = 15;
    else
      v35 = 16;
    if (a5)
      v36 = 89;
    else
      v36 = 93;
    v37 = 0;
    v38 = 1;
    if (!a5)
      v38 = 2;
    v128 = v38;
    v140 = v35;
    v39 = v35 - 1;
    v130 = v36;
    while (1)
    {
      v125 = v37;
      if (((v127 >> v37) & 1) != 0)
        break;
      *(_QWORD *)(a1 + 3216) += 128;
LABEL_84:
      v37 = v125 + 1;
      if (v125 == 3)
        goto LABEL_85;
    }
    v40 = 0;
    v41 = 4 * v37;
    v132 = 4 * v37;
    while (1)
    {
      v42 = v40 + v41;
      v43 = ((v40 + v41) >> 1) & 2 | v40 & 1;
      v44 = ((v40 + v41) >> 1) & 4 | v40 & 2;
      v45 = v44 >> 1;
      if ((_DWORD)v44)
      {
        v46 = (*(unsigned __int16 *)(a1 + 12) >> (v42 - byte_2160EE440[v45])) & 1;
        if (!(_DWORD)v43)
          goto LABEL_53;
      }
      else
      {
        v48 = v138;
        if ((*(_BYTE *)a3 & 1) != 0)
          v48 = 0;
        v46 = (*(unsigned __int16 *)(a3 + 8) >> byte_2160EE444[v43]) & *(_BYTE *)a3 & 1 | v48;
        if (!(_DWORD)v43)
        {
LABEL_53:
          v49 = (*(unsigned __int16 *)(a4 + 8) >> byte_2160EE458[v45]) & *(_BYTE *)a4 & 1;
          v50 = v138;
          if ((*(_BYTE *)a4 & 1) != 0)
            v50 = 0;
          v47 = v49 | v50;
          goto LABEL_56;
        }
      }
      v47 = (*(unsigned __int16 *)(a1 + 12) >> byte_2160EE448[v42]) & 1;
LABEL_56:
      v51 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + (v36 + 2 * v46 + v47) + 208));
      *(_WORD *)(a1 + 12) |= v51 << v42;
      if (v51)
      {
        v136 = v40 + v41;
        v52 = 0;
        v53 = 0;
        v54 = word_2160EE49C[v128];
        v55 = word_2160EE1A8[v128];
        do
        {
          if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + (v52 + v54) + 208)))
          {
            *(_DWORD *)&v143[2 * v53] = v52;
            if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + (v54 + 61 + v52) + 208)))
              v52 = v140;
            ++v53;
          }
          ++v52;
        }
        while (v52 < v39);
        if (v52 == v39)
        {
          v56 = v53++;
          *(_DWORD *)&v143[2 * v56] = v39;
        }
        v57 = v53 - 1;
        if (((v53 - 1) & 0x8000) == 0)
        {
          v58 = 0;
          v59 = 0;
          v60 = v57;
          do
          {
            if (v59 < 3)
              v61 = v59 + 1;
            else
              v61 = 4;
            if (v58)
              v61 = 0;
            if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + (v61 + v55) + 208)))
            {
              if (v58 >= 4)
                v62 = 9;
              else
                v62 = v58 + 5;
              ++v58;
              v63 = sub_215FC2E80((unsigned int *)a1, v55, v62, 14, 0) + 2;
            }
            else
            {
              ++v59;
              LOWORD(v63) = 1;
            }
            v64 = sub_215FC2D70((unsigned int *)a1);
            v65 = (__int16)v60;
            v66 = *(int *)&v143[2 * (unsigned __int16)v60];
            *(_WORD *)(*(_QWORD *)(a1 + 3216) + 2 * v66) = ((v63 ^ ((__int16)(v64 << 15) >> 15)) + v64)
                                                         * *(unsigned __int8 *)(v34 + v66);
            --v60;
          }
          while (v65 > 0);
        }
        v67 = 1;
        v36 = v130;
        v41 = v132;
        v42 = v136;
      }
      else
      {
        v67 = 0;
      }
      *(_BYTE *)(a8 + v42) = v67;
      *(_QWORD *)(a1 + 3216) += 32;
      if (++v40 == 4)
        goto LABEL_84;
    }
  }
  bzero(*(void **)(a2 + 32), 0x330uLL);
  v14 = *(_QWORD *)(a1 + 3216);
  if (a5)
  {
    sub_215FC4218(a1, (unsigned __int8 *)a3, (_BYTE *)a4, v14);
    v15 = *(_QWORD *)(a1 + 3216) + 34;
    v16 = 15;
    v17 = 1;
  }
  else
  {
    v15 = v14 + 32;
    v16 = 16;
    v17 = 2;
  }
  v131 = v17;
  v91 = 4 * v17 + 85;
  *(_QWORD *)(a1 + 3216) = v15;
  v142 = v16;
  v92 = v16 - 1;
  v93 = 0;
  v129 = v91;
  do
  {
    v126 = v93;
    if (((v127 >> v93) & 1) != 0)
    {
      v94 = 0;
      v95 = 4 * v93;
      v133 = 4 * v93;
      while (1)
      {
        v96 = v94 + v95;
        v97 = ((v94 + v95) >> 1) & 2 | v94 & 1;
        v98 = ((v94 + v95) >> 1) & 4 | v94 & 2;
        v99 = v98 >> 1;
        if ((_DWORD)v98)
        {
          v100 = (*(unsigned __int16 *)(a1 + 12) >> (v96 - byte_2160EE440[v99])) & 1;
          if (!(_DWORD)v97)
            goto LABEL_140;
        }
        else
        {
          v102 = v138;
          if ((*(_BYTE *)a3 & 1) != 0)
            v102 = 0;
          v100 = (*(unsigned __int16 *)(a3 + 8) >> byte_2160EE444[v97]) & *(_BYTE *)a3 & 1 | v102;
          if (!(_DWORD)v97)
          {
LABEL_140:
            v103 = (*(unsigned __int16 *)(a4 + 8) >> byte_2160EE458[v99]) & *(_BYTE *)a4 & 1;
            v104 = v138;
            if ((*(_BYTE *)a4 & 1) != 0)
              v104 = 0;
            v101 = v103 | v104;
            goto LABEL_143;
          }
        }
        v101 = (*(unsigned __int16 *)(a1 + 12) >> byte_2160EE448[v96]) & 1;
LABEL_143:
        v105 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + (v91 + 2 * v100 + v101) + 208));
        *(_WORD *)(a1 + 12) |= v105 << v96;
        if (v105)
        {
          v137 = v94 + v95;
          v106 = 0;
          v107 = 0;
          v108 = word_2160EE49C[v131];
          v109 = word_2160EE1A8[v131];
          do
          {
            if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + (v106 + v108) + 208)))
            {
              v143[v107] = v106;
              if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + (v108 + 61 + v106) + 208)))
                v106 = v142;
              ++v107;
            }
            ++v106;
          }
          while (v106 < v92);
          if (v106 == v92)
          {
            v110 = v107++;
            v143[v110] = v92;
          }
          v111 = v107 - 1;
          if (((v107 - 1) & 0x8000) == 0)
          {
            v112 = 0;
            v113 = 0;
            v114 = v111;
            do
            {
              if (v113 < 3)
                v115 = v113 + 1;
              else
                v115 = 4;
              if (v112)
                v115 = 0;
              if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + (v115 + v109) + 208)))
              {
                if (v112 >= 4)
                  v116 = 9;
                else
                  v116 = v112 + 5;
                ++v112;
                v117 = sub_215FC2E80((unsigned int *)a1, v109, v116, 14, 0) + 2;
              }
              else
              {
                ++v113;
                LOWORD(v117) = 1;
              }
              v118 = sub_215FC2D70((unsigned int *)a1);
              v119 = (__int16)v114;
              *(_WORD *)(v15 + 2 * (unsigned __int16)v143[(unsigned __int16)v114--]) = (v117 ^ ((__int16)(v118 << 15) >> 15))
                                                                                       + v118;
            }
            while (v119 > 0);
          }
          v120 = 1;
          v91 = v129;
          v95 = v133;
          v96 = v137;
        }
        else
        {
          v120 = 0;
        }
        *(_BYTE *)(a8 + v96) = v120;
        v15 = *(_QWORD *)(a1 + 3216) + 32;
        *(_QWORD *)(a1 + 3216) = v15;
        if (++v94 == 4)
          goto LABEL_171;
      }
    }
    v15 += 128;
    *(_QWORD *)(a1 + 3216) = v15;
LABEL_171:
    v93 = v126 + 1;
  }
  while (v126 != 3);
  v68 = v123;
  if ((v124 & 3) != 0)
  {
    sub_215FC47C0(a1, (_BYTE *)a3, (_BYTE *)a4, v138, (uint64_t)(v123 + 50));
    v68 = v123;
  }
  v121 = (uint64_t)v68 + 546;
  *(_QWORD *)(a1 + 3216) = (char *)v68 + 546;
  if ((v124 & 2) == 0)
    goto LABEL_175;
  for (j = 0; j != 8; ++j)
  {
    sub_215FC4DAC(a1, a3, a4, j & 3, j >> 2, v138, v121);
    v121 = *(_QWORD *)(a1 + 3216) + 32;
    *(_QWORD *)(a1 + 3216) = v121;
  }
}

uint64_t sub_215FC67C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, int a7)
{
  uint64_t v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  char v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  unsigned __int8 v21;
  unsigned int v22;
  unsigned __int8 v23;
  _BOOL4 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  _BOOL4 v28;
  char v29;
  char v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  BOOL v34;
  _BOOL4 v35;
  BOOL v36;
  int v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  _BOOL4 v42;
  _BOOL4 v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  unsigned __int8 *v50;
  unsigned int v51;
  _BOOL4 v52;
  _BOOL4 v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  int v57;
  int v58;
  uint64_t v59;
  _BYTE *v60;
  unsigned int v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  int v66;
  unsigned int *v67;
  unsigned int *v68;
  uint64_t v69;
  int v70;
  int v71;
  uint64_t v72;
  int v73;
  unsigned int *v74;
  unsigned int *v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int v78;
  uint64_t v79;
  int v80;
  int v81;
  unsigned int *v82;
  unsigned int *v83;
  uint64_t v84;
  unsigned int v85;
  uint64_t v86;
  int v87;
  int v88;
  unsigned int *v89;
  unsigned int *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t result;
  unsigned int v95;
  _BOOL4 v96;
  int v97;
  char v98;
  char v99;
  unsigned __int8 v100;
  unsigned int v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  char v109;
  char v111;
  char v112;
  uint64_t v113;
  char v114;
  int v115;
  unsigned int v116;
  _BOOL4 v117;
  _BOOL4 v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  int v122;
  int v123;
  uint64_t v124;
  _BYTE *v125;
  BOOL v126;
  BOOL v127;
  unsigned int v128;
  unsigned int v129;
  _BOOL4 v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  char v137;

  v12 = *(char *)(a2 + 4);
  v13 = *(unsigned __int8 *)(a1 + v12 + 668);
  v14 = *(unsigned __int8 *)(a1 + v12 + 678);
  v15 = *(unsigned __int16 *)(a1 + 2 * v12 + 688);
  v16 = *(_BYTE *)(a6 + 185);
  if (v16)
  {
    if (!a7 && (*(_DWORD *)(a6 + 16) & 1) != 0)
    {
      v17 = 0;
      goto LABEL_11;
    }
    if (*(_BYTE *)(a6 + 188))
      v17 = sub_215FC340C((unsigned int *)a1, (_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * a5), (_BYTE *)(a1 + 112));
    else
      v17 = 0;
    v16 = v17 + 1;
  }
  else
  {
    v17 = 0;
  }
  *(_BYTE *)(a6 + 31) = v16;
LABEL_11:
  *(_QWORD *)(a1 + 3216) = *(_QWORD *)(a2 + 32);
  switch(*(_BYTE *)(a2 + 4))
  {
    case 0:
    case 5:
      if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 222)))
      {
        if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 225)))
        {
          if (sub_215FC2DF0(a1))
          {
            v20 = 0;
            v21 = 30;
          }
          else
          {
            v51 = v15;
            v133 = v13;
            v52 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 226));
            v53 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 227));
            v54 = 19;
            if (!v53)
              v54 = 20;
            v55 = a1 + v54;
            if (v52)
              v56 = 2;
            else
              v56 = 0;
            v57 = v56 | v53;
            if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(v55 + 208)))
              v58 = 2;
            else
              v58 = 0;
            v59 = v58 | (4 * v57) | sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 228));
            if (((0xF0F0uLL >> v59) & 1) != 0)
              v60 = (char *)&unk_2160EE4B8
                  + (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 228)) | (2 * v59));
            else
              v60 = (char *)&unk_2160EE4A8 + v59;
            v15 = v51;
            v20 = 0;
            v21 = *v60 + 5;
            v13 = v133;
          }
        }
        else
        {
          v20 = 0;
          v21 = 5;
        }
      }
      else
      {
        v24 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 223));
        v25 = 16;
        if (v24)
          v25 = 17;
        v26 = v13;
        if (v24)
          v27 = 2;
        else
          v27 = 0;
        v28 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v25 + 208));
        v20 = 0;
        v29 = v27 | v28;
        v13 = v26;
        if (v28)
          v30 = 2;
        else
          v30 = 0;
        v21 = v29 ^ v30;
      }
      break;
    case 2:
    case 7:
      if ((*(_BYTE *)(a1 + 112) & 1) != 0)
        v23 = ((char)(16 * *(_BYTE *)(a1 + 112)) >> 7) + 4;
      else
        v23 = 3;
      v22 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 104) + 48 * a5);
      if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1+ (v22 & ~(v22 >> 3) & 1)+ (unint64_t)v23+ 208)))
      {
        if (sub_215FC2DF0(a1))
        {
          v20 = 0;
          v21 = 25;
        }
        else
        {
          v129 = v15;
          v132 = v13;
          v126 = v17;
          v41 = a1 + 208;
          v42 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 214));
          v43 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 215));
          if (v42)
            v44 = 2;
          else
            v44 = 0;
          v45 = v44 | v43;
          v46 = 8;
          if (v43)
          {
            v47 = 9;
          }
          else
          {
            v46 = 9;
            v47 = 10;
          }
          if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(v41 + v46)))
            v48 = 2;
          else
            v48 = 0;
          v49 = v48 | (4 * v45) | sub_215FC2C90((unsigned int *)a1, (_BYTE *)(v41 + v47));
          if (((0xF0F0uLL >> v49) & 1) != 0)
            v50 = (unsigned __int8 *)&unk_2160EE4B8
                + (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 218)) | (2 * v49));
          else
            v50 = (unsigned __int8 *)&unk_2160EE4A8 + v49;
          v15 = v129;
          v13 = v132;
          v20 = 0;
          v21 = *v50;
          v17 = v126;
        }
      }
      else
      {
        v21 = 0;
        v20 = 0;
      }
      break;
    default:
      v31 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 104) + 48 * a5);
      v32 = ((char)(8 * *(_BYTE *)(a1 + 112)) >> 7) + 28;
      v33 = v31 & 3;
      v34 = ((v31 >> 4) & 1) == 0;
      if (v33 != 1)
        v34 = 0;
      if ((*(_BYTE *)(a1 + 112) & 3) != 1)
        LOBYTE(v32) = 27;
      v35 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + (v32 + v34) + 208));
      v21 = 0;
      if (v35)
      {
        if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 238)))
        {
          v128 = v15;
          v131 = v13;
          v36 = v17;
          if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 239)))
            v37 = 2;
          else
            v37 = 0;
          v38 = v37 | sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 240));
          if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 240)))
            v39 = 2;
          else
            v39 = 0;
          v40 = v39 | (4 * v38) | sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 240));
          if ((_DWORD)v40 == 13)
          {
            v17 = v36;
            v13 = v131;
            if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 240)))
            {
              if (sub_215FC2DF0(a1))
              {
                v21 = 48;
              }
              else
              {
                v117 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 241));
                v118 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 242));
                v119 = 34;
                if (!v118)
                  v119 = 35;
                v120 = a1 + v119;
                if (v117)
                  v121 = 2;
                else
                  v121 = 0;
                v122 = v121 | v118;
                if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(v120 + 208)))
                  v123 = 2;
                else
                  v123 = 0;
                v124 = v123 | (4 * v122) | sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 243));
                if (((0xF0F0uLL >> v124) & 1) != 0)
                  v125 = (char *)&unk_2160EE4B8
                       + (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 243)) | (2 * v124));
                else
                  v125 = (char *)&unk_2160EE4A8 + v124;
                v15 = v128;
                v13 = v131;
                v21 = *v125 + 23;
              }
            }
            else
            {
              v21 = 23;
            }
          }
          else
          {
            v17 = v36;
            if ((unint64_t)(v40 - 8) > 4)
              v21 = byte_2160EE4D8[v40];
            else
              v21 = (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 240)) & 0xF1 | (2 * (v40 & 7))) + 12;
            v13 = v131;
          }
        }
        else if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 240)))
        {
          v21 = 2;
        }
        else
        {
          v21 = 1;
        }
      }
      v20 = v21 == 0;
      break;
  }
  v61 = v21;
  v62 = *(_DWORD *)a3 & 0xFFFFFF00 | v21;
  *(_DWORD *)a3 = v62;
  if (v21 == v14)
  {
    v63 = *(_QWORD *)(a1 + 3216);
    *(_DWORD *)a3 = v62 & 0x1FC080FF | 0xA0004000;
    v64 = *(_QWORD *)(a1 + 16) << 9;
    *(_QWORD *)(a1 + 16) = v64;
    v65 = *(_DWORD *)(a1 + 64);
    v66 = 9;
    if (v65 <= 8)
    {
      v66 = 9 - v65;
      v67 = *(unsigned int **)(a1 + 32);
      v68 = v67 + 1;
      *(_QWORD *)(a1 + 32) = v67 + 1;
      v69 = bswap32(*v67);
      if ((unint64_t)v68 > *(_QWORD *)(a1 + 48))
        v68 = *(unsigned int **)(a1 + 48);
      *(_QWORD *)(a1 + 32) = v68;
      v64 |= v69 << v66;
      v65 = 32;
    }
    v70 = v65 - v66;
    *(_DWORD *)(a1 + 64) = v70;
    v71 = v70 & 7;
    v72 = v64 << (v70 & 7);
    *(_QWORD *)(a1 + 16) = v72;
    v73 = v71 - v70;
    if (v71 > v70)
    {
      v74 = *(unsigned int **)(a1 + 32);
      v75 = v74 + 1;
      *(_QWORD *)(a1 + 32) = v74 + 1;
      v76 = bswap32(*v74);
      if ((unint64_t)v75 > *(_QWORD *)(a1 + 48))
        v75 = *(unsigned int **)(a1 + 48);
      *(_QWORD *)(a1 + 32) = v75;
      v72 |= v76 << v73;
      *(_QWORD *)(a1 + 16) = v72;
      v70 = 32;
      v71 = v73;
    }
    *(_DWORD *)(a1 + 64) = v70 - v71;
    *(_DWORD *)(a1 + 28) = HIDWORD(v72);
    v77 = 32;
    do
    {
      v78 = *(_DWORD *)(a1 + 28);
      v79 = *(_QWORD *)(a1 + 16) << 8;
      *(_QWORD *)(a1 + 16) = v79;
      v80 = *(_DWORD *)(a1 + 64);
      if (v80 > 7)
      {
        v81 = 8;
      }
      else
      {
        v81 = 8 - v80;
        v82 = *(unsigned int **)(a1 + 32);
        v83 = v82 + 1;
        *(_QWORD *)(a1 + 32) = v82 + 1;
        v84 = bswap32(*v82);
        if ((unint64_t)v83 > *(_QWORD *)(a1 + 48))
          v83 = *(unsigned int **)(a1 + 48);
        *(_QWORD *)(a1 + 32) = v83;
        v79 |= v84 << v81;
        *(_QWORD *)(a1 + 16) = v79;
        v80 = 32;
      }
      *(_DWORD *)(a1 + 64) = v80 - v81;
      *(_DWORD *)(a1 + 28) = HIDWORD(v79);
      *(_WORD *)(v63 + v77) = HIBYTE(v78);
      v85 = *(_DWORD *)(a1 + 28);
      v86 = *(_QWORD *)(a1 + 16) << 8;
      *(_QWORD *)(a1 + 16) = v86;
      v87 = *(_DWORD *)(a1 + 64);
      if (v87 > 7)
      {
        v88 = 8;
      }
      else
      {
        v88 = 8 - v87;
        v89 = *(unsigned int **)(a1 + 32);
        v90 = v89 + 1;
        *(_QWORD *)(a1 + 32) = v89 + 1;
        v91 = bswap32(*v89);
        if ((unint64_t)v90 > *(_QWORD *)(a1 + 48))
          v90 = *(unsigned int **)(a1 + 48);
        *(_QWORD *)(a1 + 32) = v90;
        v86 |= v91 << v88;
        *(_QWORD *)(a1 + 16) = v86;
        v87 = 32;
      }
      *(_DWORD *)(a1 + 64) = v87 - v88;
      *(_DWORD *)(a1 + 28) = HIDWORD(v86);
      *(_WORD *)(v63 + v77 + 2) = HIBYTE(v85);
      v77 += 4;
    }
    while ((_DWORD)v77 != 800);
    *(_QWORD *)a1 = 510;
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a1 + 112) & 0xC3 | 0x20;
    *(_BYTE *)(a1 + 116) = 1;
    *(_DWORD *)(a1 + 120) = 0x3FFFFFF;
    v92 = 48 * a5;
    *(_BYTE *)(*(_QWORD *)(a1 + 104) + v92) &= ~4u;
    *(_BYTE *)(*(_QWORD *)(a1 + 104) + v92) &= ~8u;
    *(_BYTE *)(*(_QWORD *)(a1 + 104) + v92) &= ~0x10u;
    *(_BYTE *)(*(_QWORD *)(a1 + 104) + v92) |= 0x20u;
    *(_BYTE *)(*(_QWORD *)(a1 + 104) + v92) &= ~0x40u;
    *(_BYTE *)(a1 + 112) &= ~0x40u;
    *(_BYTE *)(*(_QWORD *)(a1 + 104) + v92 + 4) = 1;
    *(_WORD *)(*(_QWORD *)(a1 + 104) + v92 + 8) = -1;
    *(_WORD *)(*(_QWORD *)(a1 + 104) + v92 + 10) = 1023;
    *(_DWORD *)(*(_QWORD *)(a1 + 104) + v92 + 12) = 0;
    *(_DWORD *)(a1 + 124) = 0;
    v93 = *(_QWORD *)(a1 + 104) + v92;
    *(_OWORD *)(v93 + 16) = 0u;
    *(_OWORD *)(v93 + 32) = 0u;
    *(_OWORD *)(a1 + 128) = 0u;
    *(_OWORD *)(a1 + 144) = 0u;
    *(_BYTE *)(a1 + 118) = v17;
    *(_BYTE *)(*(_QWORD *)(a1 + 104) + v92 + 6) = v17;
    *(_BYTE *)(*(_QWORD *)(a6 + 40) + 3) = 0;
    *(_BYTE *)(a1 + 117) = 0;
    *(_BYTE *)(*(_QWORD *)(a1 + 104) + v92 + 5) = 0;
    *(_BYTE *)(*(_QWORD *)(a6 + 48) + 272) = 0;
    *(_BYTE *)(*(_QWORD *)(a6 + 40) + 54) = 0;
    goto LABEL_157;
  }
  v137 = 1;
  *(_BYTE *)(*(_QWORD *)(a6 + 40) + 3) = 0;
  v130 = v20;
  if (v21 == v15 || v21 == v15 >> 8)
  {
    result = sub_215FC7564(a1, (_BYTE *)a2, a3, v18, *(_QWORD *)(a1 + 104) + 48 * a5, a1 + 112, (BOOL *)&v137, **(unsigned __int8 **)(a6 + 48));
    *(_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * a5) &= ~0x40u;
    *(_BYTE *)(a1 + 112) &= ~0x40u;
    if ((result & 0x80000000) != 0)
      return result;
LABEL_114:
    v127 = v17;
    if (v61 <= v13)
    {
      v101 = v13;
      v102 = a5;
      v103 = sub_215FC309C((unsigned int *)a1, (unsigned __int8 *)(*(_QWORD *)(a1 + 104) + 48 * a5), (unsigned __int8 *)(a1 + 112), *(unsigned __int8 *)(*(_QWORD *)(a6 + 48) + 1));
      v100 = v103;
      v134 = v101;
      v96 = v61 == v101;
      if ((v103 & 0xF) != 0)
      {
        if (*(_BYTE *)(a6 + 184) && v61 != v134 && v137)
        {
          if (v130 && !**(_BYTE **)(a6 + 48))
          {
            v96 = 0;
          }
          else
          {
            v96 = 0;
            *(_BYTE *)(*(_QWORD *)(a6 + 40) + 3) = sub_215FC33B8((unsigned int *)a1, (_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * a5), (_BYTE *)(a1 + 112));
          }
        }
      }
      else if (!v103)
      {
        *(_DWORD *)(a1 + 4) = 0;
        *(_WORD *)(a3 + 4) = 0;
        *(_BYTE *)(a3 + 6) = 0;
        v108 = v134;
LABEL_144:
        if (v96)
          v109 = 8;
        else
          v109 = 0;
        if (v61 > v108 || v96)
          v111 = 4;
        else
          v111 = 0;
        if (v130)
          v112 = 16;
        else
          v112 = 0;
        *(_BYTE *)(a1 + 112) = v112 | v109 | v111 | *(_BYTE *)(a1 + 112) & 0xC3;
        *(_BYTE *)(a1 + 113) = v100;
        *(_BYTE *)(a1 + 116) = *(_BYTE *)(a1 + 10);
        *(_DWORD *)(a1 + 120) = *(_DWORD *)(a1 + 12);
        v113 = 48 * v102;
        *(_BYTE *)(*(_QWORD *)(a1 + 104) + v113) = *(_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * v102) & 0xF7 | v109;
        *(_BYTE *)(*(_QWORD *)(a1 + 104) + v113) = *(_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * v102) & 0xFB | v111;
        *(_BYTE *)(*(_QWORD *)(a1 + 104) + v113) = *(_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * v102) & 0xEF | v112;
        *(_BYTE *)(*(_QWORD *)(a1 + 104) + v113) = *(_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * v102) & 0xDF;
        *(_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * v102 + 1) = v100;
        *(_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * v102 + 4) = *(_BYTE *)(a1 + 10);
        *(_WORD *)(*(_QWORD *)(a1 + 104) + 48 * v102 + 8) = *(_WORD *)(a1 + 12);
        *(_WORD *)(*(_QWORD *)(a1 + 104) + 48 * v102 + 10) = *(_WORD *)(a1 + 14);
        *(_BYTE *)(a1 + 118) = v127;
        *(_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * v102 + 6) = v127;
        v114 = *(_BYTE *)(*(_QWORD *)(a6 + 40) + 3);
        *(_BYTE *)(a1 + 117) = v114;
        *(_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * v102 + 5) = v114;
        *(_DWORD *)a3 = *(_DWORD *)a3 & 0xFFC0FFFF | ((v100 & 0x3F) << 16);
        *(_DWORD *)(a3 + 8) = *(_DWORD *)(a1 + 4);
LABEL_157:
        sub_215FC74FC(a1, a5);
        v115 = 8 * (*(_DWORD *)(a1 + 32) - *(_DWORD *)(a1 + 56)) - *(_DWORD *)(a1 + 64) - 32;
        result = (v115 - *(_DWORD *)(a1 + 72));
        *(_DWORD *)(a1 + 72) = v115;
        return result;
      }
      v13 = v134;
    }
    else
    {
      v96 = 0;
      v97 = v61 + ~v13;
      v98 = (v97 >> 2) % 3u;
      if (v97 >= 12)
        v99 = 15;
      else
        v99 = 0;
      v100 = v99 | (16 * v98);
    }
    if (*(_DWORD *)(a1 + 4))
      v104 = a1 + 1;
    else
      v104 = a1;
    if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(v104 + 268)))
    {
      if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 270)))
      {
        v135 = v13;
        v105 = 1;
        do
          ++v105;
        while (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 271)) && v105 < 0x34);
        v106 = (((v105 & 1) - 1) ^ ((v105 + 1) >> 1)) + !(v105 & 1);
        if (v106 - 26 < 0xFFFFFFCC)
          v106 = 0;
        v13 = v135;
      }
      else
      {
        v106 = 1;
      }
    }
    else
    {
      v106 = 0;
    }
    *(_DWORD *)(a1 + 4) = v106;
    if (*(_BYTE *)(a6 + 29) || *(_BYTE *)(a6 + 31) == 2)
    {
      v107 = v61 > v13;
      v108 = v13;
      v102 = a5;
      sub_215FC5BD8(a1, a2, *(_QWORD *)(a1 + 104) + 48 * a5, a1 + 112, v107, v96, v100, a4, *(_BYTE *)(*(_QWORD *)(a6 + 40) + 3), a6);
    }
    else
    {
      v116 = v61 > v13;
      v108 = v13;
      v102 = a5;
      sub_215FC4FF0(a1, a2, *(_QWORD *)(a1 + 104) + 48 * a5, a1 + 112, v116, v96, v100, a4, *(_BYTE *)(*(_QWORD *)(a6 + 40) + 3), a6);
    }
    goto LABEL_144;
  }
  if (*(_BYTE *)(a6 + 184) && v21 == v13)
  {
    v95 = a5;
    *(_BYTE *)(*(_QWORD *)(a6 + 40) + 3) = sub_215FC33B8((unsigned int *)a1, (_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * a5), (_BYTE *)(a1 + 112));
  }
  else
  {
    v95 = a5;
  }
  result = sub_215FC8850(a1, v61, (_BYTE *)a2, a3, v13, v19, *(_QWORD *)(a1 + 104) + 48 * v95, a1 + 112, *(_BYTE *)(*(_QWORD *)(a6 + 40) + 3), *(_BYTE *)(*(_QWORD *)(a6 + 48) + 1));
  if ((result & 0x80000000) == 0)
    goto LABEL_114;
  return result;
}

uint64_t sub_215FC74FC(uint64_t result, unsigned int a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(result + 104);
  v3 = 48 * a2;
  *(_BYTE *)(result + 88) = *(_BYTE *)(v2 + v3) & 1;
  *(_BYTE *)(result + 112) = *(_BYTE *)(result + 112) & 0xFC | 1;
  *(_BYTE *)(v2 + v3) &= ~2u;
  *(_BYTE *)(*(_QWORD *)(result + 104) + v3) |= 1u;
  if (a2 + 1 == *(_DWORD *)(result + 80))
  {
    *(_BYTE *)(result + 112) &= ~1u;
    *(_BYTE *)(result + 88) = 0;
  }
  return result;
}

uint64_t sub_215FC7564(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, BOOL *a7, int a8)
{
  _BOOL4 v13;
  _BOOL4 v14;
  _WORD *v15;
  int v16;
  int v17;
  int v18;
  int v19;
  char v20;
  int v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  _WORD *v26;
  unsigned int *v27;
  int v28;
  char v29;
  unsigned int v30;
  unsigned int v31;
  __int16 *v32;
  __int128 *v33;
  __int16 v34;
  int v35;
  __int16 *v36;
  __int128 *v37;
  __int16 v38;
  __int16 v39;
  __int16 *v40;
  __int16 v41;
  int v42;
  int v43;
  __int16 *v44;
  __int128 *v45;
  __int16 v46;
  __int16 *v47;
  __int16 v48;
  __int16 v49;
  __int16 v50;
  __int16 *v51;
  __int16 v52;
  __int16 v53;
  __int16 *v54;
  __int16 v55;
  __int16 v56;
  __int16 v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  char v65;
  uint64_t v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  BOOL v75;
  BOOL v76;
  BOOL v77;
  unsigned int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  int v85;
  unsigned int v86;
  int v87;
  int v88;
  unsigned int v89;
  int v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE *v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  int v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  _WORD *v102;
  uint64_t *v103;
  int v104;
  char v105;
  unsigned int v106;
  __int16 *v107;
  __int128 *v108;
  __int16 v109;
  int v110;
  unsigned int v111;
  __int16 *v112;
  __int128 *v113;
  __int16 v114;
  __int16 v115;
  int v116;
  __int16 *v117;
  int v118;
  int v119;
  __int16 v120;
  __int16 *v121;
  __int16 v122;
  int v123;
  __int16 v124;
  __int16 *v125;
  __int16 v126;
  __int16 v127;
  int v128;
  int v129;
  int v130;
  __int16 *v131;
  uint64_t v132;
  uint64_t v133;
  int *v134;
  unsigned __int8 *v135;
  int v136;
  char v137;
  unsigned int v138;
  __int16 *v139;
  __int16 *v140;
  __int16 v141;
  int v142;
  unsigned int v143;
  __int16 *v144;
  __int16 *v145;
  __int16 v146;
  __int16 v147;
  int v148;
  __int16 *v149;
  int v150;
  int v151;
  __int16 v152;
  __int16 v153;
  int v154;
  __int16 v155;
  __int16 *v156;
  __int16 v157;
  __int16 v158;
  int v159;
  int v160;
  int v161;
  __int16 *v162;
  __int128 v163;
  __int128 v164;
  char v165;
  char v166;
  char v167;
  int v169;
  _BOOL4 v170;
  uint64_t v171;
  __int16 v172;
  int v173;
  _DWORD *v174;
  __int16 v175;
  int v176;
  __int16 v177;
  uint64_t v178;
  uint64_t v180;
  __int16 v182;
  int v183;
  __int16 *v184;
  __int16 v185;
  __int16 *v186;
  int v187;
  unsigned __int8 v188;
  __int128 *v189;
  int v190;
  __int128 *v191;
  int v192;
  _DWORD *v193;
  __int16 v194;
  int v195;
  __int16 *v196;
  char v198;
  char v199;
  char v200;
  char v201;
  uint64_t v202;
  _BYTE v203[20];
  int v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  uint64_t v209;

  v209 = *MEMORY[0x24BDAC8D0];
  if (a2[42])
    v13 = 1;
  else
    v13 = *(unsigned __int16 *)(a1 + 8) == 2;
  if (a2[43])
    v14 = 1;
  else
    v14 = *(unsigned __int16 *)(a1 + 8) == 2;
  v202 = -1;
  v207 = 0u;
  v208 = 0u;
  *(_DWORD *)a3 &= ~0x4000u;
  v15 = (_WORD *)(a3 + 24);
  v205 = 0u;
  v206 = 0u;
  if (a2[4] == 5 || !a2[4])
  {
    v16 = sub_215FC2F64(a1);
    *(_BYTE *)(a3 + 20) = v16;
    v198 = v16;
    v17 = sub_215FC2F64(a1);
    *(_BYTE *)(a3 + 21) = v17;
    v199 = v17;
    v18 = sub_215FC2F64(a1);
    *(_BYTE *)(a3 + 22) = v18;
    v200 = v18;
    v19 = sub_215FC2F64(a1);
    *(_BYTE *)(a3 + 23) = v19;
    v201 = v19;
    *a7 = (v16 | v17 | v18 | v19) == 0;
    *(_DWORD *)a3 = *(_DWORD *)a3 & 0x1FFFFFFF | 0x80000000;
    *(_OWORD *)(a3 + 136) = 0u;
    *(_OWORD *)(a3 + 120) = 0u;
    *(_OWORD *)(a3 + 104) = 0u;
    *(_OWORD *)(a3 + 88) = 0u;
    *(_QWORD *)(a3 + 12) = 0xFFFFFFFF00000000;
    if (v13)
    {
      LOBYTE(v202) = sub_215FC35AC(a1, (_BYTE *)a5, (_BYTE *)a6, 0, 0, (uint64_t)&v202, 0, (uint64_t)&v198);
      *(_BYTE *)(a3 + 12) = v202;
      BYTE2(v202) = sub_215FC35AC(a1, (_BYTE *)a5, (_BYTE *)a6, 0, 1u, (uint64_t)&v202, 0, (uint64_t)&v198);
      *(_BYTE *)(a3 + 13) = BYTE2(v202);
      BYTE4(v202) = sub_215FC35AC(a1, (_BYTE *)a5, (_BYTE *)a6, 0, 2u, (uint64_t)&v202, 0, (uint64_t)&v198);
      *(_BYTE *)(a3 + 14) = BYTE4(v202);
      v20 = sub_215FC35AC(a1, (_BYTE *)a5, (_BYTE *)a6, 0, 3u, (uint64_t)&v202, 0, (uint64_t)&v198);
      BYTE6(v202) = v20;
      *(_BYTE *)(a3 + 15) = v20;
      if ((*(_BYTE *)(a3 + 12) | *(_BYTE *)(a3 + 13) | *(_BYTE *)(a3 + 14) | v20) > 0x1Fu)
        return 4293967296;
    }
    if ((*(_BYTE *)a5 & 1) != 0)
    {
      v21 = *(_DWORD *)(a5 + 24);
      LODWORD(v207) = *(_DWORD *)(a5 + 16);
      DWORD2(v207) = v21;
      v22 = *(_DWORD *)(a5 + 40);
      LODWORD(v208) = *(_DWORD *)(a5 + 32);
      DWORD2(v208) = v22;
    }
    v178 = a5;
    if ((*(_BYTE *)a6 & 1) != 0)
    {
      v23 = *(_DWORD *)(a6 + 24);
      LODWORD(v205) = *(_DWORD *)(a6 + 16);
      DWORD2(v205) = v23;
      v24 = *(_DWORD *)(a6 + 40);
      LODWORD(v206) = *(_DWORD *)(a6 + 32);
      DWORD2(v206) = v24;
    }
    v180 = a6;
    v25 = 0;
    v26 = v203;
    v27 = (unsigned int *)a1;
    while (1)
    {
      v28 = *(&v198 + v25);
      v29 = v25 >> 1;
      v30 = 4 * (v25 & 1);
      v31 = v30 | 2;
      if (v28 == 2)
      {
        v36 = (__int16 *)&v207 + 2 * v30;
        v37 = &v205 + (v29 & 0x3F);
        v38 = sub_215FC3714(v27, 40, *v36, *(__int16 *)v37);
        *v26 = v38;
        v39 = sub_215FC3714(v27, 47, v36[1], *((__int16 *)v37 + 1));
        v26[1] = v39;
        v40 = (__int16 *)&v207 + 2 * v31;
        v26[4] = sub_215FC3714(v27, 40, *v40, v38);
        v41 = sub_215FC3714(v27, 47, v40[1], v39);
        v26[5] = v41;
        v42 = *((_DWORD *)v26 + 2);
        *((_DWORD *)&v205 + ((4 * (v25 >> 1)) | 2u)) = v42;
        *(_DWORD *)v37 = v42;
        v43 = *(_DWORD *)v26;
        *(_DWORD *)v36 = *(_DWORD *)v26;
        *(_DWORD *)v40 = v42;
      }
      else
      {
        if (v28 != 1)
        {
          if (*(&v198 + v25))
          {
            v186 = (__int16 *)&v207 + 2 * v30;
            v191 = &v205 + (v29 & 0x3F);
            v48 = sub_215FC3714(v27, 40, *v186, *(__int16 *)v191);
            *v26 = v48;
            v49 = v48;
            v182 = v48;
            v50 = sub_215FC3714(v27, 47, v186[1], *((__int16 *)v191 + 1));
            v26[1] = v50;
            v51 = (__int16 *)&v207 + 2 * v31;
            v52 = sub_215FC3714(v27, 40, *v51, v49);
            v26[4] = v52;
            v53 = sub_215FC3714(v27, 47, v51[1], v50);
            v26[5] = v53;
            v54 = (__int16 *)&v205 + 2 * ((4 * (v25 >> 1)) | 2u);
            v55 = sub_215FC3714((unsigned int *)a1, 40, v49, *v54);
            v26[8] = v55;
            v56 = sub_215FC3714((unsigned int *)a1, 47, v50, v54[1]);
            v26[9] = v56;
            v26[12] = sub_215FC3714((unsigned int *)a1, 40, v52, v55);
            v57 = sub_215FC3714((unsigned int *)a1, 47, v53, v56);
            v26[13] = v57;
            v58 = *((_DWORD *)v26 + 4);
            *(_DWORD *)v186 = v58;
            v59 = *((_DWORD *)v26 + 6);
            *(_DWORD *)v51 = v59;
            v60 = *((_DWORD *)v26 + 2);
            *(_DWORD *)v191 = v60;
            *(_DWORD *)v54 = v59;
            *v15 = v182;
            v15[1] = v50;
            v15[2] = v60;
            v15[3] = v53;
            v27 = (unsigned int *)a1;
            v15[4] = v58;
            v15[5] = v56;
            v15[6] = v59;
            v15[7] = v57;
          }
          else
          {
            v32 = (__int16 *)&v207 + 2 * v30;
            v33 = &v205 + (v29 & 0x3F);
            *v26 = sub_215FC3714(v27, 40, *v32, *(__int16 *)v33);
            v34 = sub_215FC3714(v27, 47, v32[1], *((__int16 *)v33 + 1));
            v26[1] = v34;
            v35 = *(_DWORD *)v26;
            *((_DWORD *)&v205 + ((4 * (v25 >> 1)) | 2u)) = *(_DWORD *)v26;
            *(_DWORD *)v33 = v35;
            *((_DWORD *)&v207 + v31) = v35;
            *(_DWORD *)v32 = v35;
            *v15 = v35;
            v15[1] = v34;
          }
          goto LABEL_24;
        }
        v44 = (__int16 *)&v207 + 2 * v30;
        v45 = &v205 + (v29 & 0x3F);
        v46 = sub_215FC3714(v27, 40, *v44, *(__int16 *)v45);
        *v26 = v46;
        v39 = sub_215FC3714(v27, 47, v44[1], *((__int16 *)v45 + 1));
        v26[1] = v39;
        v47 = (__int16 *)&v205 + 2 * ((4 * (v25 >> 1)) | 2u);
        v26[4] = sub_215FC3714(v27, 40, v46, *v47);
        v41 = sub_215FC3714(v27, 47, v39, v47[1]);
        v26[5] = v41;
        v43 = *(_DWORD *)v26;
        *(_DWORD *)v45 = *(_DWORD *)v26;
        v42 = *((_DWORD *)v26 + 2);
        *((_DWORD *)&v207 + v31) = v42;
        *(_DWORD *)v47 = v42;
        *(_DWORD *)v44 = v42;
      }
      *v15 = v43;
      v15[1] = v39;
      v15[2] = v42;
      v15[3] = v41;
LABEL_24:
      ++v25;
      v26 += 16;
      v15 += 8;
      if (v25 == 4)
      {
        v61 = DWORD2(v207);
        *(_DWORD *)(v178 + 16) = v207;
        *(_DWORD *)(v178 + 24) = v61;
        v62 = DWORD2(v208);
        *(_DWORD *)(v178 + 32) = v208;
        *(_DWORD *)(v178 + 40) = v62;
        v63 = DWORD2(v205);
        *(_DWORD *)(v180 + 16) = v205;
        *(_DWORD *)(v180 + 24) = v63;
        v64 = DWORD2(v206);
        *(_DWORD *)(v180 + 32) = v206;
        *(_DWORD *)(v180 + 40) = v64;
        *(_BYTE *)(v178 + 12) = BYTE4(v202);
        v65 = BYTE6(v202);
        *(_BYTE *)(v178 + 14) = BYTE6(v202);
        *(_BYTE *)(v180 + 12) = BYTE2(v202);
        v66 = 148;
        *(_BYTE *)(v180 + 14) = v65;
        return v66;
      }
    }
  }
  v170 = v14;
  v67 = sub_215FC2FBC(a1);
  *(_BYTE *)(a3 + 20) = v67;
  v198 = v67;
  v68 = sub_215FC2FBC(a1);
  *(_BYTE *)(a3 + 21) = v68;
  v199 = v68;
  v69 = sub_215FC2FBC(a1);
  *(_BYTE *)(a3 + 22) = v69;
  v200 = v69;
  v70 = sub_215FC2FBC(a1);
  v71 = v70;
  *(_BYTE *)(a3 + 23) = v70;
  v201 = v70;
  v75 = v67 < 4 && v68 < 4 && v69 < 4 && v70 < 4;
  if (!a8)
  {
    v76 = !v67 || v68 == 0;
    v77 = v76 || v69 == 0;
    if (v77 || v70 == 0)
      v75 = 0;
  }
  *a7 = v75;
  LOBYTE(v202) = byte_2160EE574[v67];
  v183 = v202;
  *(_BYTE *)(a3 + 12) = v202;
  v79 = byte_2160EE581[v67];
  BYTE1(v202) = v79;
  *(_BYTE *)(a3 + 16) = v79;
  BYTE2(v202) = byte_2160EE574[v68];
  v176 = BYTE2(v202);
  *(_BYTE *)(a3 + 13) = BYTE2(v202);
  BYTE3(v202) = byte_2160EE581[v68];
  v192 = BYTE3(v202);
  *(_BYTE *)(a3 + 17) = BYTE3(v202);
  BYTE4(v202) = byte_2160EE574[v69];
  v187 = BYTE4(v202);
  *(_BYTE *)(a3 + 14) = BYTE4(v202);
  BYTE5(v202) = byte_2160EE581[v69];
  v173 = BYTE5(v202);
  *(_BYTE *)(a3 + 18) = BYTE5(v202);
  v80 = byte_2160EE574[v70];
  BYTE6(v202) = v80;
  *(_BYTE *)(a3 + 15) = v80;
  HIBYTE(v202) = byte_2160EE581[v70];
  v171 = a3;
  v169 = HIBYTE(v202);
  *(_BYTE *)(a3 + 19) = HIBYTE(v202);
  if (v13)
  {
    v66 = 0;
    if (v67 && !v183)
    {
      v81 = sub_215FC35AC(a1, (_BYTE *)a5, (_BYTE *)a6, 0, 0, (uint64_t)&v202, 1, (uint64_t)&v198);
      LOBYTE(v202) = v81;
      LOBYTE(v183) = v81;
      if (v81 >= 0x20)
        v66 = 4293967296;
      else
        v66 = 0;
    }
    if (v68 && !v176)
    {
      v82 = sub_215FC35AC(a1, (_BYTE *)a5, (_BYTE *)a6, 0, 1u, (uint64_t)&v202, 1, (uint64_t)&v198);
      BYTE2(v202) = v82;
      LOBYTE(v176) = v82;
      if (v82 >= 0x20)
        v83 = -1000000;
      else
        v83 = 0;
      v66 = (v83 + v66);
    }
    if (v69 && !v187)
    {
      v84 = sub_215FC35AC(a1, (_BYTE *)a5, (_BYTE *)a6, 0, 2u, (uint64_t)&v202, 1, (uint64_t)&v198);
      BYTE4(v202) = v84;
      LOBYTE(v187) = v84;
      if (v84 >= 0x20)
        v85 = -1000000;
      else
        v85 = 0;
      v66 = (v85 + v66);
    }
    if (v71 && !v80)
    {
      v86 = sub_215FC35AC(a1, (_BYTE *)a5, (_BYTE *)a6, 0, 3u, (uint64_t)&v202, 1, (uint64_t)&v198);
      LOBYTE(v80) = v86;
      BYTE6(v202) = v86;
      if (v86 >= 0x20)
        v87 = -1000000;
      else
        v87 = 0;
      v66 = (v87 + v66);
    }
  }
  else
  {
    v66 = 0;
  }
  if (!v170)
  {
    v91 = v79;
    v93 = a5;
    v92 = a6;
    v94 = (_BYTE *)a3;
    goto LABEL_91;
  }
  if (v67 && !v79)
  {
    v79 = sub_215FC35AC(a1, (_BYTE *)a5, (_BYTE *)a6, 1, 0, (uint64_t)&v202, 1, (uint64_t)&v198);
    BYTE1(v202) = v79;
    if (v79 >= 0x20)
      v88 = -1000000;
    else
      v88 = 0;
    v66 = (v88 + v66);
  }
  if (v68)
  {
    LOBYTE(v89) = v192;
    if (!v192)
    {
      v89 = sub_215FC35AC(a1, (_BYTE *)a5, (_BYTE *)a6, 1, 1u, (uint64_t)&v202, 1, (uint64_t)&v198);
      BYTE3(v202) = v89;
      if (v89 >= 0x20)
        v90 = -1000000;
      else
        v90 = 0;
      v66 = (v90 + v66);
    }
  }
  else
  {
    LOBYTE(v89) = v192;
  }
  LOBYTE(v192) = v89;
  if (!v69)
  {
    v91 = v79;
    goto LABEL_100;
  }
  v91 = v79;
  if (v173)
  {
LABEL_100:
    v93 = a5;
    v92 = a6;
    goto LABEL_101;
  }
  v93 = a5;
  v92 = a6;
  v96 = sub_215FC35AC(a1, (_BYTE *)a5, (_BYTE *)a6, 1, 2u, (uint64_t)&v202, 1, (uint64_t)&v198);
  BYTE5(v202) = v96;
  LOBYTE(v173) = v96;
  if (v96 >= 0x20)
    v97 = -1000000;
  else
    v97 = 0;
  v66 = (v97 + v66);
LABEL_101:
  v94 = (_BYTE *)a3;
  if (v71)
  {
    LOBYTE(v95) = v169;
    if (!v169)
    {
      v95 = sub_215FC35AC(a1, (_BYTE *)v93, (_BYTE *)v92, 1, 3u, (uint64_t)&v202, 1, (uint64_t)&v198);
      HIBYTE(v202) = v95;
      if (v95 >= 0x20)
        v98 = -1000000;
      else
        v98 = 0;
      v66 = (v98 + v66);
    }
    goto LABEL_107;
  }
LABEL_91:
  LOBYTE(v95) = v169;
LABEL_107:
  if ((v66 & 0x80000000) == 0)
  {
    v94[12] = v183;
    v94[13] = v176;
    v94[14] = v187;
    v94[15] = v80;
    v94[16] = v91;
    v94[17] = v192;
    v94[18] = v173;
    v94[19] = v95;
    if ((*(_BYTE *)v93 & 1) != 0)
    {
      v99 = *(_OWORD *)(v93 + 32);
      v207 = *(_OWORD *)(v93 + 16);
      v208 = v99;
    }
    if ((*(_BYTE *)v92 & 1) != 0)
    {
      v100 = *(_OWORD *)(v92 + 32);
      v205 = *(_OWORD *)(v92 + 16);
      v206 = v100;
    }
    v101 = 0;
    v102 = v203;
    v103 = &v202;
    do
    {
      v104 = v101 & 1;
      v105 = v101 >> 1;
      v106 = *(&v198 + v101);
      if (!*(&v198 + v101) || *(unsigned __int8 *)v103 == 255)
      {
        *((_DWORD *)&v205 + ((4 * v105) | 2u)) = 0;
        *((_DWORD *)&v205 + 4 * (v105 & 0x3F)) = 0;
        *((_DWORD *)&v207 + ((4 * (v101 & 1)) | 2)) = 0;
        *(_QWORD *)v15 = 0;
        *((_QWORD *)v15 + 1) = 0;
        *((_DWORD *)&v207 + (4 * v104)) = 0;
      }
      else if (v106 > 3)
      {
        v111 = 4 * v104;
        if (v106 > 9)
        {
          v184 = (__int16 *)&v207 + 2 * v111;
          v189 = &v205 + (v105 & 0x3F);
          v194 = sub_215FC3714((unsigned int *)a1, 40, *v184, *(__int16 *)v189);
          *v102 = v194;
          v120 = sub_215FC3714((unsigned int *)a1, 47, v184[1], *((__int16 *)v189 + 1));
          v102[1] = v120;
          v177 = v120;
          v121 = (__int16 *)&v207 + 2 * ((4 * (v101 & 1)) | 2);
          v174 = v121;
          v122 = sub_215FC3714((unsigned int *)a1, 40, *v121, v194);
          v102[4] = v122;
          v123 = v121[1];
          LODWORD(v121) = v120;
          v124 = sub_215FC3714((unsigned int *)a1, 47, v123, v120);
          v102[5] = v124;
          v125 = (__int16 *)&v205 + 2 * ((4 * v105) | 2u);
          v126 = sub_215FC3714((unsigned int *)a1, 40, v194, *v125);
          v102[8] = v126;
          LOWORD(v121) = sub_215FC3714((unsigned int *)a1, 47, (int)v121, v125[1]);
          v102[9] = (_WORD)v121;
          v102[12] = sub_215FC3714((unsigned int *)a1, 40, v122, v126);
          v127 = sub_215FC3714((unsigned int *)a1, 47, v124, (__int16)v121);
          v102[13] = v127;
          v128 = *((_DWORD *)v102 + 4);
          *(_DWORD *)v184 = v128;
          v129 = *((_DWORD *)v102 + 6);
          *v174 = v129;
          v130 = *((_DWORD *)v102 + 2);
          *(_DWORD *)v189 = v130;
          *(_DWORD *)v125 = v129;
          *v15 = v194;
          v15[1] = v177;
          v15[2] = v130;
          v15[3] = v124;
          v15[4] = v128;
          v15[5] = (_WORD)v121;
          v15[6] = v129;
          v15[7] = v127;
        }
        else
        {
          v112 = (__int16 *)&v207 + 2 * v111;
          v188 = 4 * v105;
          v113 = &v205 + (v105 & 0x3F);
          v114 = sub_215FC3714((unsigned int *)a1, 40, *v112, *(__int16 *)v113);
          *v102 = v114;
          v193 = v112;
          v115 = sub_215FC3714((unsigned int *)a1, 47, v112[1], *((__int16 *)v113 + 1));
          v102[1] = v115;
          if ((v106 & 1) != 0)
          {
            v131 = (__int16 *)&v207 + 2 * (v111 | 2);
            v102[4] = sub_215FC3714((unsigned int *)a1, 40, *v131, v114);
            v102[5] = sub_215FC3714((unsigned int *)a1, 47, v131[1], v115);
            v119 = *((_DWORD *)v102 + 2);
            *((_DWORD *)&v205 + (v188 | 2u)) = v119;
            *(_DWORD *)v113 = v119;
            v118 = *(_DWORD *)v102;
            *v193 = *(_DWORD *)v102;
            *(_DWORD *)v131 = v119;
          }
          else
          {
            v116 = v114;
            v117 = (__int16 *)&v205 + 2 * (v188 | 2u);
            v102[4] = sub_215FC3714((unsigned int *)a1, 40, v116, *v117);
            v102[5] = sub_215FC3714((unsigned int *)a1, 47, v115, v117[1]);
            v118 = *(_DWORD *)v102;
            *(_DWORD *)v113 = *(_DWORD *)v102;
            v119 = *((_DWORD *)v102 + 2);
            *(_DWORD *)v117 = v119;
            *((_DWORD *)&v207 + (v111 | 2)) = v119;
            *v193 = v119;
          }
          *(_DWORD *)v15 = v118;
          *((_DWORD *)v15 + 1) = v119;
        }
      }
      else
      {
        v107 = (__int16 *)&v207 + 2 * (4 * v104);
        v108 = &v205 + (v105 & 0x3F);
        *v102 = sub_215FC3714((unsigned int *)a1, 40, *v107, *(__int16 *)v108);
        v109 = sub_215FC3714((unsigned int *)a1, 47, v107[1], *((__int16 *)v108 + 1));
        v102[1] = v109;
        v110 = *(_DWORD *)v102;
        *((_DWORD *)&v205 + ((4 * v105) | 2u)) = *(_DWORD *)v102;
        *(_DWORD *)v108 = v110;
        *((_DWORD *)&v207 + ((4 * (v101 & 1)) | 2)) = v110;
        *(_DWORD *)v107 = v110;
        *v15 = v110;
        v15[1] = v109;
      }
      ++v101;
      v102 += 16;
      v15 += 8;
      v103 = (uint64_t *)((char *)v103 + 2);
    }
    while (v101 != 4);
    v132 = 0;
    v133 = v171 + 88;
    v134 = &v204;
    v135 = (unsigned __int8 *)&v202 + 1;
    do
    {
      v136 = v132 & 1;
      v137 = v132 >> 1;
      v138 = *(&v198 + v132);
      if (!*(&v198 + v132) || *v135 == 255)
      {
        *((_DWORD *)&v205 + ((4 * (v137 & 0x3F)) | 3u)) = 0;
        *((_DWORD *)&v205 + ((4 * (v137 & 0x3F)) | 1u)) = 0;
        *((_DWORD *)&v207 + ((4 * v136) | 3u)) = 0;
        *(_QWORD *)v133 = 0;
        *(_QWORD *)(v133 + 8) = 0;
        *((_DWORD *)&v207 + ((4 * (v132 & 1)) | 1)) = 0;
      }
      else if (v138 > 3)
      {
        v143 = (4 * (v137 & 0x3F)) | 1;
        if (v138 > 9)
        {
          v196 = (__int16 *)&v205 + 2 * v143;
          v152 = sub_215FC3714((unsigned int *)a1, 40, *((__int16 *)&v207 + 2 * ((4 * v136) | 1u)), *v196);
          *((_WORD *)v134 - 8) = v152;
          v185 = v152;
          v153 = sub_215FC3714((unsigned int *)a1, 47, *((__int16 *)&v207 + 2 * ((4 * v136) | 1u) + 1), v196[1]);
          *((_WORD *)v134 - 7) = v153;
          v175 = v153;
          v172 = sub_215FC3714((unsigned int *)a1, 40, *((__int16 *)&v207 + 2 * ((4 * (v132 & 1)) | 3)), v152);
          *((_WORD *)v134 - 4) = v172;
          v154 = v153;
          v155 = sub_215FC3714((unsigned int *)a1, 47, *((__int16 *)&v207 + 2 * ((4 * (v132 & 1)) | 3) + 1), v153);
          *((_WORD *)v134 - 3) = v155;
          v156 = (__int16 *)&v205 + 2 * ((4 * (v137 & 0x3F)) | 3u);
          v157 = sub_215FC3714((unsigned int *)a1, 40, v152, *v156);
          *(_WORD *)v134 = v157;
          LOWORD(v154) = sub_215FC3714((unsigned int *)a1, 47, v154, v156[1]);
          *((_WORD *)v134 + 1) = v154;
          *((_WORD *)v134 + 4) = sub_215FC3714((unsigned int *)a1, 40, v172, v157);
          v158 = sub_215FC3714((unsigned int *)a1, 47, v155, (__int16)v154);
          *((_WORD *)v134 + 5) = v158;
          v159 = *v134;
          *((_DWORD *)&v207 + ((4 * v136) | 1u)) = *v134;
          v160 = v134[2];
          *((_DWORD *)&v207 + ((4 * (v132 & 1)) | 3)) = v160;
          v161 = *(v134 - 2);
          *(_DWORD *)v196 = v161;
          *(_DWORD *)v156 = v160;
          *(_WORD *)v133 = v185;
          *(_WORD *)(v133 + 2) = v175;
          *(_WORD *)(v133 + 4) = v161;
          *(_WORD *)(v133 + 6) = v155;
          *(_WORD *)(v133 + 8) = v159;
          *(_WORD *)(v133 + 10) = v154;
          *(_WORD *)(v133 + 12) = v160;
          *(_WORD *)(v133 + 14) = v158;
        }
        else
        {
          v195 = 4 * v136;
          v144 = (__int16 *)&v207 + 2 * ((4 * (v132 & 1)) | 1);
          v190 = 4 * (v137 & 0x3F);
          v145 = (__int16 *)&v205 + 2 * v143;
          v146 = sub_215FC3714((unsigned int *)a1, 40, *v144, *v145);
          *((_WORD *)v134 - 8) = v146;
          v147 = sub_215FC3714((unsigned int *)a1, 47, v144[1], v145[1]);
          *((_WORD *)v134 - 7) = v147;
          if ((v138 & 1) != 0)
          {
            v162 = (__int16 *)&v207 + 2 * (v195 | 3u);
            *((_WORD *)v134 - 4) = sub_215FC3714((unsigned int *)a1, 40, *v162, v146);
            *((_WORD *)v134 - 3) = sub_215FC3714((unsigned int *)a1, 47, v162[1], v147);
            v151 = *(v134 - 2);
            *((_DWORD *)&v205 + (v190 | 3u)) = v151;
            *(_DWORD *)v145 = v151;
            v150 = *(v134 - 4);
            *(_DWORD *)v144 = v150;
            *(_DWORD *)v162 = v151;
          }
          else
          {
            v148 = v146;
            v149 = (__int16 *)&v205 + 2 * (v190 | 3u);
            *((_WORD *)v134 - 4) = sub_215FC3714((unsigned int *)a1, 40, v148, *v149);
            *((_WORD *)v134 - 3) = sub_215FC3714((unsigned int *)a1, 47, v147, v149[1]);
            v150 = *(v134 - 4);
            *(_DWORD *)v145 = v150;
            v151 = *(v134 - 2);
            *(_DWORD *)v149 = v151;
            *((_DWORD *)&v207 + (v195 | 3u)) = v151;
            *(_DWORD *)v144 = v151;
          }
          *(_DWORD *)v133 = v150;
          *(_DWORD *)(v133 + 4) = v151;
        }
      }
      else
      {
        v139 = (__int16 *)&v207 + 2 * ((4 * v136) | 1u);
        v140 = (__int16 *)&v205 + 2 * ((4 * (v137 & 0x3F)) | 1u);
        *((_WORD *)v134 - 8) = sub_215FC3714((unsigned int *)a1, 40, *v139, *v140);
        v141 = sub_215FC3714((unsigned int *)a1, 47, v139[1], v140[1]);
        *((_WORD *)v134 - 7) = v141;
        v142 = *(v134 - 4);
        *((_DWORD *)&v205 + ((4 * (v137 & 0x3F)) | 3u)) = v142;
        *(_DWORD *)v140 = v142;
        *((_DWORD *)&v207 + ((4 * (v132 & 1)) | 3)) = v142;
        *(_DWORD *)v139 = v142;
        *(_WORD *)v133 = v142;
        *(_WORD *)(v133 + 2) = v141;
      }
      ++v132;
      v134 += 8;
      v133 += 16;
      v135 += 2;
    }
    while (v132 != 4);
    v66 = 0;
    v163 = v208;
    *(_OWORD *)(a5 + 16) = v207;
    *(_OWORD *)(a5 + 32) = v163;
    v164 = v206;
    *(_OWORD *)(a6 + 16) = v205;
    *(_OWORD *)(a6 + 32) = v164;
    *(_BYTE *)(a5 + 12) = BYTE4(v202);
    v165 = BYTE6(v202);
    *(_BYTE *)(a5 + 14) = BYTE6(v202);
    *(_BYTE *)(a6 + 12) = BYTE2(v202);
    *(_BYTE *)(a6 + 14) = v165;
    *(_BYTE *)(a5 + 13) = BYTE5(v202);
    v166 = HIBYTE(v202);
    *(_BYTE *)(a5 + 15) = HIBYTE(v202);
    *(_BYTE *)(a6 + 13) = BYTE3(v202);
    *(_BYTE *)(a6 + 15) = v166;
    *(_BYTE *)(a5 + 2) = v200;
    v167 = v201;
    *(_BYTE *)(a5 + 3) = v201;
    *(_BYTE *)(a6 + 2) = v199;
    *(_BYTE *)(a6 + 3) = v167;
  }
  return v66;
}

uint64_t sub_215FC8850(uint64_t a1, unsigned int a2, _BYTE *a3, uint64_t a4, unsigned int a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10)
{
  uint64_t v12;
  _BOOL4 v15;
  _BOOL4 v16;
  __int16 *v17;
  unsigned __int8 v18;
  __int16 *v19;
  unsigned __int8 v20;
  uint64_t v21;
  __int16 v22;
  uint64_t v23;
  __int16 v24;
  uint64_t v25;
  BOOL v26;
  char v27;
  char v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  int v34;
  int v35;
  unsigned __int8 v36;
  unsigned __int8 v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  uint64_t v41;
  unsigned int v43;
  unsigned int v44;
  int v46;
  int v47;
  int v48;
  unsigned __int8 *v49;
  unsigned int v50;
  unsigned __int8 *v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  char v55;
  int v56;
  char v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  __int16 v64;
  int v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  int v69;
  __int16 v70;
  int v71;
  int v72;
  int v73;
  __int16 v74;
  int v75;
  __int16 v76;
  __int16 v77;
  __int16 v78;
  _BOOL4 v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  __int16 v83;
  _WORD *v84;
  __int16 v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  __int16 v104;
  __int16 v105;
  int v106;
  int v107;
  __int16 v108;
  __int16 v109;
  int v110;
  int v111;
  __int16 v112;
  unsigned __int8 v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  _WORD *v122;
  __int16 v123;
  __int16 v124;
  int v125;
  _WORD *v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  __int16 v141;
  __int16 v142;
  int v143;
  int v144;
  unsigned __int8 v145;
  unsigned __int8 v146;
  unsigned int v147;
  char v148;
  unsigned int v150;
  int v152;
  __int16 v153;
  unsigned int v155;
  char v156;
  unsigned int v157;
  _OWORD *v158;
  __int16 *v159;
  __int16 v160;
  __int16 v161;
  _OWORD *v162;
  __int16 *v163;
  __int16 v164;
  __int16 v165;

  v12 = a4;
  if (a3[42])
    v15 = 1;
  else
    v15 = *(unsigned __int16 *)(a1 + 8) == 2;
  if (a3[43])
    v16 = 1;
  else
    v16 = *(unsigned __int16 *)(a1 + 8) == 2;
  v17 = (__int16 *)(a7 + 16);
  v18 = *(_BYTE *)a7;
  v19 = (__int16 *)(a8 + 16);
  v20 = *(_BYTE *)a8;
  if (a2 == a5)
  {
    v158 = (_OWORD *)(a7 + 16);
    v162 = (_OWORD *)(a8 + 16);
    v21 = 0;
    v22 = 0;
    if (a9)
      v23 = 4;
    else
      v23 = 16;
    do
    {
      v24 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 276));
      if ((v24 & 1) == 0)
      {
        v25 = v12;
        v26 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 277));
        if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 277)))
          v27 = 2;
        else
          v27 = 0;
        v28 = v27 | v26;
        if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 277)))
          v29 = 4;
        else
          v29 = 0;
        v30 = v28 | v29;
        v12 = v25;
        *(_BYTE *)(v25 + v21 + 14) = v30;
      }
      v22 = v24 | (2 * v22);
      ++v21;
    }
    while (v23 != v21);
    *(_WORD *)(v12 + 12) = v22;
    if (a10)
    {
      v32 = a7;
      v31 = a8;
      v33 = sub_215FC332C(a1, (unsigned __int8 *)a7, (unsigned __int8 *)a8);
    }
    else
    {
      v33 = 0;
      v32 = a7;
      v31 = a8;
    }
    *(_BYTE *)(v12 + 30) = v33;
    *(_DWORD *)v12 = *(_DWORD *)v12 & 0x1FFFBFFF | 0x80004000;
    *(_BYTE *)v32 = *(_BYTE *)v32 & 0xBF | ((v33 != 0) << 6);
    *(_BYTE *)v31 = *(_BYTE *)v31 & 0xBF | ((*(_BYTE *)(v12 + 30) != 0) << 6);
    *(_DWORD *)(v32 + 12) = 0;
    *(_DWORD *)(v31 + 12) = 0;
    *v158 = 0u;
    v158[1] = 0u;
    *v162 = 0u;
    v162[1] = 0u;
    return 28;
  }
  if (a2 > a5)
  {
    if (a10)
      v34 = sub_215FC332C(a1, (unsigned __int8 *)a7, (unsigned __int8 *)a8);
    else
      v34 = 0;
    *(_BYTE *)(v12 + 30) = v34;
    *(_DWORD *)v12 = *(_DWORD *)v12 & 0x1FFFBFFF | 0x4000;
    *(_BYTE *)a7 = *(_BYTE *)a7 & 0xBF | ((v34 != 0) << 6);
    *(_BYTE *)a8 = *(_BYTE *)a8 & 0xBF | ((*(_BYTE *)(v12 + 30) != 0) << 6);
    *(_DWORD *)(a7 + 12) = 0;
    *(_DWORD *)(a8 + 12) = 0;
    *(_OWORD *)v17 = 0u;
    *(_OWORD *)(a7 + 32) = 0u;
    *(_OWORD *)v19 = 0u;
    *(_OWORD *)(a8 + 32) = 0u;
    return 28;
  }
  *(_DWORD *)a4 &= ~0x4000u;
  *(_BYTE *)a7 &= ~0x40u;
  *(_BYTE *)a8 &= ~0x40u;
  if (a3[4] != 5 && a3[4])
  {
    if (a2)
    {
      v159 = (__int16 *)(a7 + 16);
      v163 = (__int16 *)(a8 + 16);
      if (a2 > 3)
      {
        v152 = a2 & 1;
        *(_DWORD *)a4 = (*(_DWORD *)a4 & 0x1FFFFFFF | (v152 << 29)) + 0x20000000;
        v49 = &byte_2160EE518[a2];
        v50 = *v49;
        v51 = &byte_2160EE546[a2];
        v52 = *v51;
        v53 = v49[23];
        v54 = v51[23];
        if (v15)
        {
          if (v50)
          {
            v41 = 0;
          }
          else
          {
            v87 = v54;
            v88 = v53;
            v89 = sub_215FC3460(a1, (_BYTE *)a7, (_BYTE *)a8, 0, 0, 0, 1, a2);
            v53 = v88;
            v54 = v87;
            v50 = v89;
            if (v89 >= 0x20)
              v41 = 4293967296;
            else
              v41 = 0;
          }
          if (!v53)
          {
            v90 = v54;
            v147 = v52;
            v91 = v50;
            v92 = sub_215FC3460(a1, (_BYTE *)a7, (_BYTE *)a8, 0, 2 - v152, v50, 1, a2);
            v50 = v91;
            v52 = v147;
            v54 = v90;
            v53 = v92;
            if (v92 >= 0x20)
              v93 = -1000000;
            else
              v93 = 0;
            v41 = (v93 + v41);
          }
        }
        else
        {
          v41 = 0;
        }
        v157 = v53;
        v155 = v50;
        if (v16)
        {
          if (!v52)
          {
            v94 = v54;
            v95 = sub_215FC3460(a1, (_BYTE *)a7, (_BYTE *)a8, 1, 0, 0, 1, a2);
            v50 = v155;
            v53 = v157;
            v54 = v94;
            v52 = v95;
            if (v95 >= 0x20)
              v96 = -1000000;
            else
              v96 = 0;
            v41 = (v96 + v41);
          }
          if (!v54)
          {
            v97 = sub_215FC3460(a1, (_BYTE *)a7, (_BYTE *)a8, 1, 2 - v152, v52, 1, a2);
            v50 = v155;
            v53 = v157;
            v54 = v97;
            if (v97 >= 0x20)
              v98 = -1000000;
            else
              v98 = 0;
            v41 = (v98 + v41);
          }
        }
        if ((v41 & 0x80000000) == 0)
        {
          *(_BYTE *)(a4 + 12) = v50;
          *(_BYTE *)(a4 + 13) = v53;
          *(_BYTE *)(a4 + 14) = v52;
          *(_BYTE *)(a4 + 15) = v54;
          v145 = v20;
          v146 = v18;
          v150 = v54;
          v148 = v52;
          if (v152)
          {
            if (v50 == 255)
            {
              v101 = 0;
              v102 = 0;
              *(_WORD *)(a4 + 16) = 0;
            }
            else
            {
              if ((v18 & 1) != 0)
                v105 = *v159;
              else
                v105 = 0;
              if ((v20 & 1) != 0)
                v117 = *v163;
              else
                v117 = 0;
              v102 = sub_215FC3714((unsigned int *)a1, 40, v105, v117);
              *(_WORD *)(a4 + 16) = v102;
              if ((v18 & 1) != 0)
                v119 = *(__int16 *)(a7 + 18);
              else
                v119 = 0;
              if ((v20 & 1) != 0)
                v121 = *(__int16 *)(a8 + 18);
              else
                v121 = 0;
              v101 = sub_215FC3714((unsigned int *)a1, 47, v119, v121);
              v54 = v150;
              v53 = v157;
              LOBYTE(v50) = v155;
            }
            *(_WORD *)(a4 + 18) = v101;
            v164 = v102;
            v161 = v101;
            if (v53 == 255)
            {
              v126 = (_WORD *)a4;
              v123 = 0;
              v124 = 0;
              *(_WORD *)(a4 + 20) = 0;
            }
            else
            {
              if ((v18 & 1) != 0)
              {
                v124 = sub_215FC3714((unsigned int *)a1, 40, *(__int16 *)(a7 + 32), v102);
                v126 = (_WORD *)a4;
                *(_WORD *)(a4 + 20) = v124;
                v127 = *(__int16 *)(a7 + 34);
              }
              else
              {
                v124 = sub_215FC3714((unsigned int *)a1, 40, 0, v102);
                v127 = 0;
                v126 = (_WORD *)a4;
                *(_WORD *)(a4 + 20) = v124;
              }
              v123 = sub_215FC3714((unsigned int *)a1, 47, v127, v101);
              v54 = v150;
              LOBYTE(v53) = v157;
              LOBYTE(v50) = v155;
            }
            v126[11] = v123;
            if (v52 == 255)
            {
              v131 = 0;
              v132 = 0;
              v126[12] = 0;
            }
            else
            {
              if ((v146 & 1) != 0)
                v133 = *(__int16 *)(a7 + 20);
              else
                v133 = 0;
              if ((v145 & 1) != 0)
                v135 = *(__int16 *)(a8 + 20);
              else
                v135 = 0;
              v137 = sub_215FC3714((unsigned int *)a1, 40, v133, v135);
              v126[12] = v137;
              if ((v146 & 1) != 0)
                v138 = *(__int16 *)(a7 + 22);
              else
                v138 = 0;
              if ((v145 & 1) != 0)
                v140 = *(__int16 *)(a8 + 22);
              else
                v140 = 0;
              v131 = sub_215FC3714((unsigned int *)a1, 47, v138, v140);
              v54 = v150;
              LOBYTE(v53) = v157;
              LOBYTE(v50) = v155;
              v132 = v137;
            }
            v126[13] = v131;
            if (v54 == 255)
            {
              LOWORD(v128) = 0;
              v142 = 0;
              v126[14] = 0;
            }
            else
            {
              v153 = v132;
              if ((v146 & 1) != 0)
              {
                v142 = sub_215FC3714((unsigned int *)a1, 40, *(__int16 *)(a7 + 36), v132);
                v126[14] = v142;
                v144 = *(__int16 *)(a7 + 38);
              }
              else
              {
                v142 = sub_215FC3714((unsigned int *)a1, 40, 0, v132);
                v144 = 0;
                v126[14] = v142;
              }
              LOWORD(v128) = sub_215FC3714((unsigned int *)a1, 47, v144, v131);
              LOBYTE(v54) = v150;
              LOWORD(v132) = v153;
              LOBYTE(v53) = v157;
              LOBYTE(v50) = v155;
            }
            v126[15] = v128;
            *(_BYTE *)(a7 + 12) = v50;
            *(_BYTE *)(a7 + 13) = v148;
            *(_BYTE *)(a8 + 12) = v53;
            *(_BYTE *)(a8 + 13) = v54;
            *(_WORD *)(a7 + 24) = v164;
            *(_WORD *)(a7 + 16) = v164;
            *(_WORD *)(a7 + 26) = v161;
            *(_WORD *)(a7 + 18) = v161;
            *(_WORD *)(a7 + 28) = v132;
            *(_WORD *)(a7 + 20) = v132;
            *(_WORD *)(a7 + 30) = v131;
            *(_WORD *)(a7 + 22) = v131;
            *(_WORD *)(a8 + 24) = v124;
            *(_WORD *)(a8 + 16) = v124;
            *(_WORD *)(a8 + 26) = v123;
            *(_WORD *)(a8 + 18) = v123;
            *(_WORD *)(a8 + 28) = v142;
            v141 = v128;
            *(_WORD *)(a8 + 20) = v142;
          }
          else
          {
            if (v50 == 255)
            {
              v99 = 0;
              v100 = 0;
              *(_WORD *)(a4 + 16) = 0;
            }
            else
            {
              if ((v18 & 1) != 0)
                v104 = *v159;
              else
                v104 = 0;
              if ((v20 & 1) != 0)
                v116 = *v163;
              else
                v116 = 0;
              v100 = sub_215FC3714((unsigned int *)a1, 40, v104, v116);
              *(_WORD *)(a4 + 16) = v100;
              if ((v18 & 1) != 0)
                v118 = *(__int16 *)(a7 + 18);
              else
                v118 = 0;
              if ((v20 & 1) != 0)
                v120 = *(__int16 *)(a8 + 18);
              else
                v120 = 0;
              v99 = sub_215FC3714((unsigned int *)a1, 47, v118, v120);
              v54 = v150;
              v53 = v157;
              LOBYTE(v50) = v155;
            }
            *(_WORD *)(a4 + 18) = v99;
            v160 = v99;
            if (v53 == 255)
            {
              v122 = (_WORD *)a4;
              v123 = 0;
              v124 = 0;
              *(_WORD *)(a4 + 20) = 0;
            }
            else
            {
              if ((v20 & 1) != 0)
              {
                v124 = sub_215FC3714((unsigned int *)a1, 40, v100, *(__int16 *)(a8 + 32));
                v122 = (_WORD *)a4;
                *(_WORD *)(a4 + 20) = v124;
                v125 = *(__int16 *)(a8 + 34);
              }
              else
              {
                v124 = sub_215FC3714((unsigned int *)a1, 40, v100, 0);
                v125 = 0;
                v122 = (_WORD *)a4;
                *(_WORD *)(a4 + 20) = v124;
              }
              v123 = sub_215FC3714((unsigned int *)a1, 47, v99, v125);
              v54 = v150;
              LOBYTE(v53) = v157;
              LOBYTE(v50) = v155;
            }
            v122[11] = v123;
            v165 = v100;
            if (v52 == 255)
            {
              v128 = 0;
              v129 = 0;
              v122[12] = 0;
            }
            else
            {
              if ((v146 & 1) != 0)
                v130 = *(__int16 *)(a7 + 20);
              else
                v130 = 0;
              if ((v145 & 1) != 0)
                v134 = *(__int16 *)(a8 + 20);
              else
                v134 = 0;
              v129 = sub_215FC3714((unsigned int *)a1, 40, v130, v134);
              v122[12] = v129;
              if ((v146 & 1) != 0)
                v136 = *(__int16 *)(a7 + 22);
              else
                v136 = 0;
              if ((v145 & 1) != 0)
                v139 = *(__int16 *)(a8 + 22);
              else
                v139 = 0;
              v128 = sub_215FC3714((unsigned int *)a1, 47, v136, v139);
              v54 = v150;
              LOBYTE(v53) = v157;
              LOBYTE(v50) = v155;
            }
            v122[13] = v128;
            if (v54 == 255)
            {
              v141 = 0;
              v142 = 0;
              v122[14] = 0;
            }
            else
            {
              if ((v145 & 1) != 0)
              {
                v142 = sub_215FC3714((unsigned int *)a1, 40, v129, *(__int16 *)(a8 + 36));
                v122[14] = v142;
                v143 = *(__int16 *)(a8 + 38);
              }
              else
              {
                v142 = sub_215FC3714((unsigned int *)a1, 40, v129, 0);
                v143 = 0;
                v122[14] = v142;
              }
              v141 = sub_215FC3714((unsigned int *)a1, 47, v128, v143);
              LOBYTE(v54) = v150;
              LOBYTE(v53) = v157;
              LOBYTE(v50) = v155;
            }
            v122[15] = v141;
            *(_BYTE *)(a7 + 12) = v53;
            *(_BYTE *)(a7 + 13) = v54;
            *(_BYTE *)(a8 + 12) = v50;
            *(_BYTE *)(a8 + 13) = v148;
            *(_WORD *)(a7 + 24) = v124;
            *(_WORD *)(a7 + 16) = v124;
            *(_WORD *)(a7 + 26) = v123;
            *(_WORD *)(a7 + 18) = v123;
            *(_WORD *)(a7 + 28) = v142;
            *(_WORD *)(a7 + 20) = v142;
            *(_WORD *)(a7 + 30) = v141;
            *(_WORD *)(a7 + 22) = v141;
            *(_WORD *)(a8 + 24) = v165;
            *(_WORD *)(a8 + 16) = v165;
            *(_WORD *)(a8 + 26) = v160;
            *(_WORD *)(a8 + 18) = v160;
            *(_WORD *)(a8 + 28) = v129;
            *(_WORD *)(a8 + 20) = v129;
          }
          *(_WORD *)(a8 + 30) = v128;
          *(_WORD *)(a8 + 22) = v128;
          *(_BYTE *)(a7 + 14) = v53;
          *(_BYTE *)(a7 + 15) = v54;
          *(_BYTE *)(a8 + 14) = v53;
          *(_BYTE *)(a8 + 15) = v54;
          *(_WORD *)(a7 + 40) = v124;
          *(_WORD *)(a7 + 32) = v124;
          *(_WORD *)(a7 + 42) = v123;
          *(_WORD *)(a7 + 34) = v123;
          *(_WORD *)(a7 + 44) = v142;
          *(_WORD *)(a7 + 36) = v142;
          *(_WORD *)(a7 + 46) = v141;
          *(_WORD *)(a7 + 38) = v141;
          *(_WORD *)(a8 + 40) = v124;
          *(_WORD *)(a8 + 32) = v124;
          *(_WORD *)(a8 + 42) = v123;
          *(_WORD *)(a8 + 34) = v123;
          *(_WORD *)(a8 + 44) = v142;
          *(_WORD *)(a8 + 36) = v142;
          *(_WORD *)(a8 + 46) = v141;
          *(_WORD *)(a8 + 38) = v141;
          *(_BYTE *)(a7 + 3) = a2;
          *(_BYTE *)(a7 + 2) = a2;
          *(_BYTE *)(a8 + 3) = a2;
          v41 = 28;
          *(_BYTE *)(a8 + 2) = a2;
        }
      }
      else
      {
        *(_DWORD *)a4 &= 0x1FFFFFFFu;
        v43 = byte_2160EE518[a2];
        *(_BYTE *)(a4 + 12) = v43;
        v44 = byte_2160EE546[a2];
        *(_BYTE *)(a4 + 13) = v44;
        if (v43)
          v15 = 0;
        if (v15)
        {
          v43 = sub_215FC3460(a1, (_BYTE *)a7, (_BYTE *)a8, 0, 0, 0, 1, a2);
          if (v43 >= 0x20)
            v41 = 4293967296;
          else
            v41 = 0;
        }
        else
        {
          v41 = 0;
        }
        if (v44)
          v79 = 0;
        else
          v79 = v16;
        if (v79)
        {
          v80 = v43;
          v81 = sub_215FC3460(a1, (_BYTE *)a7, (_BYTE *)a8, 1, 0, 0, 1, a2);
          v43 = v80;
          v44 = v81;
          if (v81 >= 0x20)
            v82 = -1000000;
          else
            v82 = 0;
          v41 = (v82 + v41);
        }
        if ((v41 & 0x80000000) == 0)
        {
          *(_BYTE *)(a4 + 12) = v43;
          *(_BYTE *)(a4 + 13) = v44;
          v156 = v43;
          if (v43 == 255)
          {
            v83 = 0;
            v84 = (_WORD *)a4;
            v85 = 0;
            *(_WORD *)(a4 + 14) = 0;
          }
          else
          {
            if ((v18 & 1) != 0)
              v86 = *v159;
            else
              v86 = 0;
            if ((v20 & 1) != 0)
              v103 = *v163;
            else
              v103 = 0;
            v85 = sub_215FC3714((unsigned int *)a1, 40, v86, v103);
            *(_WORD *)(a4 + 14) = v85;
            if ((v18 & 1) != 0)
              v106 = *(__int16 *)(a7 + 18);
            else
              v106 = 0;
            if ((v20 & 1) != 0)
              v107 = *(__int16 *)(a8 + 18);
            else
              v107 = 0;
            v83 = sub_215FC3714((unsigned int *)a1, 47, v106, v107);
            v84 = (_WORD *)a4;
            LOBYTE(v43) = v156;
          }
          v84[8] = v83;
          if (v44 == 255)
          {
            v108 = 0;
            v109 = 0;
            v84[9] = 0;
          }
          else
          {
            if ((v18 & 1) != 0)
              v110 = *(__int16 *)(a7 + 20);
            else
              v110 = 0;
            if ((v20 & 1) != 0)
              v111 = *(__int16 *)(a8 + 20);
            else
              v111 = 0;
            v112 = sub_215FC3714((unsigned int *)a1, 40, v110, v111);
            v113 = v18;
            v109 = v112;
            *(_WORD *)(a4 + 18) = v112;
            if ((v113 & 1) != 0)
              v114 = *(__int16 *)(a7 + 22);
            else
              v114 = 0;
            if ((v20 & 1) != 0)
              v115 = *(__int16 *)(a8 + 22);
            else
              v115 = 0;
            v108 = sub_215FC3714((unsigned int *)a1, 47, v114, v115);
            v84 = (_WORD *)a4;
            LOBYTE(v43) = v156;
          }
          v84[10] = v108;
          *(_BYTE *)(a7 + 14) = v43;
          *(_BYTE *)(a7 + 12) = v43;
          *(_BYTE *)(a7 + 15) = v44;
          *(_BYTE *)(a7 + 13) = v44;
          *(_BYTE *)(a8 + 14) = v43;
          *(_BYTE *)(a8 + 12) = v43;
          *(_BYTE *)(a8 + 15) = v44;
          *(_BYTE *)(a8 + 13) = v44;
          *(_BYTE *)(a7 + 3) = a2;
          *(_BYTE *)(a7 + 2) = a2;
          *(_BYTE *)(a8 + 3) = a2;
          *(_BYTE *)(a8 + 2) = a2;
          *(_WORD *)(a7 + 40) = v85;
          *(_WORD *)(a7 + 32) = v85;
          *(_WORD *)(a7 + 24) = v85;
          *(_WORD *)(a7 + 16) = v85;
          *(_WORD *)(a7 + 42) = v83;
          *(_WORD *)(a7 + 34) = v83;
          *(_WORD *)(a7 + 26) = v83;
          *(_WORD *)(a7 + 18) = v83;
          *(_WORD *)(a8 + 40) = v85;
          *(_WORD *)(a8 + 32) = v85;
          *(_WORD *)(a8 + 24) = v85;
          *(_WORD *)(a8 + 16) = v85;
          *(_WORD *)(a8 + 42) = v83;
          *(_WORD *)(a8 + 34) = v83;
          *(_WORD *)(a8 + 26) = v83;
          *(_WORD *)(a8 + 18) = v83;
          *(_WORD *)(a7 + 44) = v109;
          *(_WORD *)(a7 + 36) = v109;
          *(_WORD *)(a7 + 28) = v109;
          *(_WORD *)(a7 + 20) = v109;
          *(_WORD *)(a7 + 46) = v108;
          *(_WORD *)(a7 + 38) = v108;
          *(_WORD *)(a7 + 30) = v108;
          *(_WORD *)(a7 + 22) = v108;
          *(_WORD *)(a8 + 44) = v109;
          *(_WORD *)(a8 + 36) = v109;
          *(_WORD *)(a8 + 28) = v109;
          *(_WORD *)(a8 + 20) = v109;
          *(_WORD *)(a8 + 46) = v108;
          *(_WORD *)(a8 + 38) = v108;
          *(_WORD *)(a8 + 30) = v108;
          v41 = 18;
          *(_WORD *)(a8 + 22) = v108;
        }
      }
    }
    else
    {
      v41 = 0;
      *(_WORD *)(a7 + 2) = 0;
      *(_WORD *)(a8 + 2) = 0;
      *(_DWORD *)(a7 + 12) = 0;
      *(_DWORD *)(a8 + 12) = 0;
      *(_OWORD *)v17 = 0u;
      *(_OWORD *)(a7 + 32) = 0u;
      *(_OWORD *)v19 = 0u;
      *(_OWORD *)(a8 + 32) = 0u;
    }
  }
  else
  {
    *(_DWORD *)a4 = *(_DWORD *)a4 & 0x1FFFFFFF | ((a2 & 3) << 29);
    if (v15)
    {
      v35 = sub_215FC3460(a1, (_BYTE *)a7, (_BYTE *)a8, 0, 0, 0, 0, a2);
      if (a2)
      {
        v36 = v20;
        v37 = v18;
        v38 = v35;
        v39 = sub_215FC3460(a1, (_BYTE *)a7, (_BYTE *)a8, 0, __rbit32(a2) >> 30, v35, 0, a2);
        v35 = v38;
        v18 = v37;
        v20 = v36;
        v40 = v39;
      }
      else
      {
        v40 = 0;
      }
    }
    else
    {
      v40 = 0;
      v35 = 0;
    }
    if ((v35 | v40) > 0x1F)
    {
      return 4293967296;
    }
    else if (a2 == 1)
    {
      *(_BYTE *)(v12 + 12) = v35;
      *(_BYTE *)(v12 + 13) = v40;
      *(_WORD *)(v12 + 14) = -1;
      if ((v18 & 1) != 0)
        v47 = *v17;
      else
        v47 = 0;
      v57 = v35;
      if ((v20 & 1) != 0)
        v58 = *v19;
      else
        v58 = 0;
      v62 = sub_215FC3714((unsigned int *)a1, 40, v47, v58);
      *(_WORD *)(v12 + 16) = v62;
      if ((v18 & 1) != 0)
        v63 = *(__int16 *)(a7 + 18);
      else
        v63 = 0;
      if ((v20 & 1) != 0)
      {
        v68 = v12;
        v69 = sub_215FC3714((unsigned int *)a1, 47, v63, *(__int16 *)(a8 + 18));
        *(_WORD *)(v68 + 18) = v69;
        v70 = sub_215FC3714((unsigned int *)a1, 40, v62, *(__int16 *)(a8 + 32));
        *(_WORD *)(v68 + 20) = v70;
        v71 = *(__int16 *)(a8 + 34);
      }
      else
      {
        v68 = v12;
        v69 = sub_215FC3714((unsigned int *)a1, 47, v63, 0);
        *(_WORD *)(v68 + 18) = v69;
        v70 = sub_215FC3714((unsigned int *)a1, 40, v62, 0);
        v71 = 0;
        *(_WORD *)(v68 + 20) = v70;
      }
      v76 = sub_215FC3714((unsigned int *)a1, 47, v69, v71);
      *(_WORD *)(v68 + 22) = v76;
      *(_QWORD *)(v68 + 24) = 0;
      *(_WORD *)(a7 + 40) = v70;
      *(_WORD *)(a7 + 32) = v70;
      *(_WORD *)(a7 + 24) = v70;
      *(_WORD *)(a7 + 16) = v70;
      *(_WORD *)(a7 + 42) = v76;
      *(_WORD *)(a7 + 34) = v76;
      *(_WORD *)(a7 + 26) = v76;
      *(_WORD *)(a7 + 18) = v76;
      *(_WORD *)(a8 + 24) = v62;
      *(_WORD *)(a8 + 16) = v62;
      *(_WORD *)(a8 + 40) = v70;
      *(_WORD *)(a8 + 32) = v70;
      *(_WORD *)(a8 + 26) = v69;
      *(_WORD *)(a8 + 18) = v69;
      *(_WORD *)(a8 + 42) = v76;
      *(_WORD *)(a8 + 34) = v76;
      *(_BYTE *)(a7 + 14) = v40;
      *(_BYTE *)(a7 + 12) = v40;
      *(_BYTE *)(a8 + 12) = v57;
      v41 = 28;
      *(_BYTE *)(a8 + 14) = v40;
    }
    else
    {
      if (a2 == 2)
      {
        *(_BYTE *)(v12 + 12) = v35;
        *(_BYTE *)(v12 + 13) = v40;
        *(_WORD *)(v12 + 14) = -1;
        if ((v18 & 1) != 0)
          v46 = *v17;
        else
          v46 = 0;
        v55 = v35;
        if ((v20 & 1) != 0)
          v56 = *v19;
        else
          v56 = 0;
        v60 = sub_215FC3714((unsigned int *)a1, 40, v46, v56);
        *(_WORD *)(v12 + 16) = v60;
        if ((v18 & 1) != 0)
          v61 = *(__int16 *)(a7 + 18);
        else
          v61 = 0;
        if ((v20 & 1) != 0)
        {
          v66 = v12;
          v67 = *(__int16 *)(a8 + 18);
        }
        else
        {
          v66 = v12;
          v67 = 0;
        }
        v73 = sub_215FC3714((unsigned int *)a1, 47, v61, v67);
        *(_WORD *)(v66 + 18) = v73;
        if ((v18 & 1) != 0)
        {
          v74 = sub_215FC3714((unsigned int *)a1, 40, *(__int16 *)(a7 + 32), v60);
          *(_WORD *)(v66 + 20) = v74;
          v75 = *(__int16 *)(a7 + 34);
        }
        else
        {
          v74 = sub_215FC3714((unsigned int *)a1, 40, 0, v60);
          v75 = 0;
          *(_WORD *)(v66 + 20) = v74;
        }
        v78 = sub_215FC3714((unsigned int *)a1, 47, v75, v73);
        *(_WORD *)(v66 + 22) = v78;
        *(_QWORD *)(v66 + 24) = 0;
        *(_WORD *)(a7 + 24) = v60;
        *(_WORD *)(a7 + 16) = v60;
        *(_WORD *)(a7 + 40) = v74;
        *(_WORD *)(a7 + 32) = v74;
        *(_WORD *)(a7 + 26) = v73;
        *(_WORD *)(a7 + 18) = v73;
        *(_WORD *)(a7 + 42) = v78;
        *(_WORD *)(a7 + 34) = v78;
        *(_WORD *)(a8 + 40) = v74;
        *(_WORD *)(a8 + 32) = v74;
        *(_WORD *)(a8 + 24) = v74;
        *(_WORD *)(a8 + 16) = v74;
        *(_WORD *)(a8 + 42) = v78;
        *(_WORD *)(a8 + 34) = v78;
        *(_WORD *)(a8 + 26) = v78;
        *(_WORD *)(a8 + 18) = v78;
        *(_BYTE *)(a7 + 12) = v55;
        *(_BYTE *)(a7 + 14) = v40;
        *(_BYTE *)(a8 + 14) = v40;
        v41 = 28;
      }
      else
      {
        *(_BYTE *)(v12 + 12) = v35;
        *(_BYTE *)(v12 + 13) = -1;
        if ((v18 & 1) != 0)
          v48 = *v17;
        else
          v48 = 0;
        LOBYTE(v40) = v35;
        if ((v20 & 1) != 0)
          v59 = *v19;
        else
          v59 = 0;
        v64 = sub_215FC3714((unsigned int *)a1, 40, v48, v59);
        *(_WORD *)(v12 + 14) = v64;
        if ((v18 & 1) != 0)
          v65 = *(__int16 *)(a7 + 18);
        else
          v65 = 0;
        if ((v20 & 1) != 0)
          v72 = *(__int16 *)(a8 + 18);
        else
          v72 = 0;
        v77 = sub_215FC3714((unsigned int *)a1, 47, v65, v72);
        *(_WORD *)(v12 + 16) = v77;
        *(_DWORD *)(v12 + 18) = 0;
        *(_WORD *)(a7 + 40) = v64;
        *(_WORD *)(a7 + 32) = v64;
        *(_WORD *)(a7 + 24) = v64;
        *(_WORD *)(a7 + 16) = v64;
        *(_WORD *)(a7 + 42) = v77;
        *(_WORD *)(a7 + 34) = v77;
        *(_WORD *)(a7 + 26) = v77;
        *(_WORD *)(a7 + 18) = v77;
        *(_WORD *)(a8 + 40) = v64;
        *(_WORD *)(a8 + 32) = v64;
        *(_WORD *)(a8 + 24) = v64;
        *(_WORD *)(a8 + 16) = v64;
        *(_WORD *)(a8 + 42) = v77;
        *(_WORD *)(a8 + 34) = v77;
        *(_WORD *)(a8 + 26) = v77;
        *(_WORD *)(a8 + 18) = v77;
        *(_BYTE *)(a7 + 14) = v40;
        *(_BYTE *)(a7 + 12) = v40;
        *(_BYTE *)(a8 + 14) = v40;
        v41 = 18;
      }
      *(_BYTE *)(a8 + 12) = v40;
    }
  }
  return v41;
}

uint64_t sub_215FC998C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  _BYTE *v15;
  _BYTE *v16;
  unsigned int v17;
  unsigned __int8 v18;
  _BOOL4 v19;
  char v20;
  char v21;
  _BOOL4 v22;
  uint64_t v23;
  _BYTE *v24;
  unsigned int v25;
  char v26;
  _BOOL4 v27;
  char v28;
  char v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  BOOL v33;
  _BOOL4 v34;
  unsigned int v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  _BOOL4 v41;
  _BOOL4 v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int v48;
  _BOOL4 v49;
  uint64_t v50;
  unsigned int v51;
  _BOOL4 v52;
  _BOOL4 v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  int v57;
  int v58;
  uint64_t v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  int v64;
  unsigned int *v65;
  unsigned int *v66;
  uint64_t v67;
  int v68;
  int v69;
  uint64_t v70;
  int v71;
  unsigned int *v72;
  unsigned int *v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int v76;
  uint64_t v77;
  int v78;
  int v79;
  unsigned int *v80;
  unsigned int *v81;
  uint64_t v82;
  unsigned int v83;
  uint64_t v84;
  int v85;
  int v86;
  unsigned int *v87;
  unsigned int *v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  _BOOL4 v94;
  int v95;
  char v96;
  unsigned __int8 v97;
  _BOOL4 v98;
  BOOL v99;
  unsigned int v100;
  int v102;
  uint64_t v103;
  uint64_t v104;
  unsigned int v105;
  unsigned int v106;
  char v107;
  char v109;
  char v110;
  uint64_t v111;
  _BOOL4 v112;
  _BOOL4 v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  int v117;
  int v118;
  uint64_t v119;
  unsigned int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  _BOOL4 v127;
  char v129;

  v11 = *(char *)(a2 + 4);
  v12 = *(unsigned __int8 *)(a1 + v11 + 668);
  v13 = *(unsigned __int8 *)(a1 + v11 + 678);
  v14 = *(unsigned __int16 *)(a1 + 2 * v11 + 688);
  *(_BYTE *)(a5 + 31) = 0;
  *(_QWORD *)(a1 + 3216) = *(_QWORD *)(a2 + 32);
  v15 = *(_BYTE **)(a5 + 40);
  switch(*(_BYTE *)(a2 + 4))
  {
    case 0:
    case 5:
      if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 222)))
      {
        if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 225)))
        {
          if (sub_215FC2DF0(a1))
          {
            LOBYTE(v16) = 30;
          }
          else
          {
            v126 = v14;
            v51 = v12;
            v52 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 226));
            v53 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 227));
            v54 = 19;
            if (!v53)
              v54 = 20;
            v55 = a1 + v54;
            if (v52)
              v56 = 2;
            else
              v56 = 0;
            v57 = v56 | v53;
            if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(v55 + 208)))
              v58 = 2;
            else
              v58 = 0;
            v59 = v58 | (4 * v57) | sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 228));
            if (((0xF0F0uLL >> v59) & 1) != 0)
              v16 = (char *)&unk_2160EE4B8
                  + (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 228)) | (2 * v59));
            else
              v16 = (char *)&unk_2160EE4A8 + v59;
            LOBYTE(v16) = *v16 + 5;
            v12 = v51;
            v14 = v126;
          }
        }
        else
        {
          LOBYTE(v16) = 5;
        }
      }
      else
      {
        v22 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 223));
        v23 = 16;
        if (v22)
          v23 = 17;
        v24 = v15;
        v25 = v12;
        if (v22)
          v26 = 2;
        else
          v26 = 0;
        v27 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v23 + 208));
        v28 = v26 | v27;
        v12 = v25;
        v15 = v24;
        if (v27)
          v29 = 2;
        else
          v29 = 0;
        LOBYTE(v16) = v28 ^ v29;
      }
      v19 = 0;
      v20 = 2 * (v16 < 5u);
      if (v16 <= 4u)
        v21 = (char)v16;
      else
        v21 = (_BYTE)v16 - 5;
      goto LABEL_81;
    case 2:
    case 7:
      if ((*(_BYTE *)(a1 + 112) & 1) != 0)
        v18 = ((char)(16 * *(_BYTE *)(a1 + 112)) >> 7) + 4;
      else
        v18 = 3;
      v17 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 104) + 48 * a4);
      if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1+ (v17 & ~(v17 >> 3) & 1)+ (unint64_t)v18+ 208)))
      {
        if (sub_215FC2DF0(a1))
        {
          v19 = 0;
          v20 = 0;
          LOBYTE(v16) = 25;
          v21 = 25;
        }
        else
        {
          v125 = v14;
          v122 = a3;
          v120 = v12;
          v40 = a1 + 208;
          v41 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 214));
          v42 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 215));
          if (v41)
            v43 = 2;
          else
            v43 = 0;
          v44 = v43 | v42;
          v45 = 8;
          if (v42)
          {
            v46 = 9;
          }
          else
          {
            v45 = 9;
            v46 = 10;
          }
          if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(v40 + v45)))
            v47 = 2;
          else
            v47 = 0;
          v48 = v47 | (4 * v44);
          v49 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(v40 + v46));
          v50 = v48 | v49;
          if (((0xF0F0uLL >> (v48 | v49)) & 1) != 0)
            v16 = (char *)&unk_2160EE4B8
                + (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 218)) | (2 * v50));
          else
            v16 = (char *)&unk_2160EE4A8 + v50;
          v19 = 0;
          v20 = 0;
          LOBYTE(v16) = *v16;
          v21 = (char)v16;
          v12 = v120;
          a3 = v122;
          v14 = v125;
        }
      }
      else
      {
        LOBYTE(v16) = 0;
        v19 = 0;
        v20 = 0;
        v21 = 0;
      }
      goto LABEL_81;
    default:
      v30 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 104) + 48 * a4);
      v31 = ((char)(8 * *(_BYTE *)(a1 + 112)) >> 7) + 28;
      v32 = v30 & 3;
      v33 = ((v30 >> 4) & 1) == 0;
      if (v32 != 1)
        v33 = 0;
      if ((*(_BYTE *)(a1 + 112) & 3) != 1)
        LOBYTE(v31) = 27;
      v34 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + (v31 + v33) + 208));
      LOBYTE(v16) = 0;
      if (!v34)
        goto LABEL_76;
      if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 238)))
      {
        v124 = v14;
        v121 = a3;
        v35 = v12;
        if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 239)))
          v36 = 2;
        else
          v36 = 0;
        v37 = v36 | sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 240));
        if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 240)))
          v38 = 2;
        else
          v38 = 0;
        v39 = v38 | (4 * v37) | sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 240));
        if ((_DWORD)v39 == 13)
        {
          v14 = v124;
          if (!sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 240)))
          {
            LOBYTE(v16) = 23;
            goto LABEL_73;
          }
          if (sub_215FC2DF0(a1))
          {
            LOBYTE(v16) = 48;
LABEL_73:
            a3 = v121;
            goto LABEL_76;
          }
          v112 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 241));
          v113 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 242));
          v114 = 34;
          if (!v113)
            v114 = 35;
          v115 = a1 + v114;
          if (v112)
            v116 = 2;
          else
            v116 = 0;
          v117 = v116 | v113;
          if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(v115 + 208)))
            v118 = 2;
          else
            v118 = 0;
          v119 = v118 | (4 * v117) | sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 243));
          if (((0xF0F0uLL >> v119) & 1) != 0)
            v16 = (char *)&unk_2160EE4B8
                + (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 243)) | (2 * v119));
          else
            v16 = (char *)&unk_2160EE4A8 + v119;
          v12 = v35;
          a3 = v121;
          v14 = v124;
          LOBYTE(v16) = *v16 + 23;
        }
        else
        {
          if ((unint64_t)(v39 - 8) > 4)
            LOBYTE(v16) = byte_2160EE4D8[v39];
          else
            LODWORD(v16) = (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 240)) & 0xFFFFFFF1 | (2 * (v39 & 7))) + 12;
          a3 = v121;
          v14 = v124;
        }
      }
      else if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 240)))
      {
        LOBYTE(v16) = 2;
      }
      else
      {
        LOBYTE(v16) = 1;
      }
LABEL_76:
      v19 = v16 == 0;
      v21 = (_BYTE)v16 - 23;
      if (v16 <= 0x16u)
        v20 = 3;
      else
        v20 = 0;
      if (v16 <= 0x16u)
        v21 = (char)v16;
LABEL_81:
      *v15 = (_BYTE)v16;
      v15[1] = v20;
      v15[2] = v21;
      v60 = v16;
      if (v16 != v13)
      {
        v129 = 1;
        *(_BYTE *)(*(_QWORD *)(a5 + 40) + 3) = 0;
        v127 = v19;
        if (v16 == v14 || v16 == v14 >> 8)
        {
          v93 = sub_215FCB690(a1, (unsigned __int8 *)a2, *(_QWORD *)(a1 + 104) + 48 * a4, a1 + 112, (BOOL *)&v129, **(unsigned __int8 **)(a5 + 48), a5);
          *(_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * a4) &= ~0x40u;
          *(_BYTE *)(a1 + 112) &= ~0x40u;
          if ((v93 & 0x80000000) == 0)
            goto LABEL_106;
        }
        else
        {
          if (*(_BYTE *)(a5 + 184) && v16 == v12)
          {
            v100 = a4;
            *(_BYTE *)(*(_QWORD *)(a5 + 40) + 3) = sub_215FC33B8((unsigned int *)a1, (_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * a4), (_BYTE *)(a1 + 112));
          }
          else
          {
            v100 = a4;
          }
          if ((sub_215FCA688(a1, v60, (unsigned __int8 *)a2, v12, (char *)(*(_QWORD *)(a1 + 104) + 48 * v100), (char *)(a1 + 112), *(unsigned __int8 *)(*(_QWORD *)(a5 + 40) + 3), *(unsigned __int8 *)(*(_QWORD *)(a5 + 48) + 1), a6, a5) & 0x80000000) == 0)
          {
LABEL_106:
            v123 = a3;
            if (v60 <= v12)
            {
              v97 = sub_215FC309C((unsigned int *)a1, (unsigned __int8 *)(*(_QWORD *)(a1 + 104) + 48 * a4), (unsigned __int8 *)(a1 + 112), *(unsigned __int8 *)(*(_QWORD *)(a5 + 48) + 1));
              v94 = v60 == v12;
              v96 = v97 & 0xF;
              if ((v97 & 0xF) != 0)
              {
                v98 = v127;
                if (*(_BYTE *)(a5 + 184) && v60 != v12 && v129)
                {
                  if (v127 && !**(_BYTE **)(a5 + 48))
                  {
                    v94 = 0;
                  }
                  else
                  {
                    v99 = sub_215FC33B8((unsigned int *)a1, (_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * a4), (_BYTE *)(a1 + 112));
                    v98 = v127;
                    v94 = 0;
                    *(_BYTE *)(*(_QWORD *)(a5 + 40) + 3) = v99;
                  }
                }
                goto LABEL_126;
              }
            }
            else
            {
              v94 = 0;
              v95 = v60 + ~v12;
              if (v95 >= 12)
                v96 = 15;
              else
                v96 = 0;
              v97 = v96 | (16 * ((v95 >> 2) % 3u));
            }
            v98 = v127;
LABEL_126:
            *(_BYTE *)(*(_QWORD *)(a5 + 40) + 52) = v96;
            *(_BYTE *)(a6 + 816) = v96;
            *(_BYTE *)(*(_QWORD *)(a5 + 40) + 53) = v97 >> 4;
            *(_BYTE *)(a6 + 817) = v97 >> 4;
            if (v60 > v12 || v97)
            {
              if (*(_DWORD *)(a1 + 4))
                v104 = a1 + 1;
              else
                v104 = a1;
              if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(v104 + 268)))
              {
                if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 270)))
                {
                  v105 = 1;
                  do
                    ++v105;
                  while (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 271)) && v105 < 0x34);
                  v106 = (((v105 & 1) - 1) ^ ((v105 + 1) >> 1)) + !(v105 & 1);
                  if (v106 - 26 < 0xFFFFFFCC)
                    v106 = 0;
                }
                else
                {
                  v106 = 1;
                }
              }
              else
              {
                v106 = 0;
              }
              *(_DWORD *)(a1 + 4) = v106;
              v103 = a4;
              sub_215FC4FF0(a1, a2, *(_QWORD *)(a1 + 104) + 48 * a4, a1 + 112, v60 > v12, v94, v97, v123, *(_BYTE *)(*(_QWORD *)(a5 + 40) + 3), a5);
              v102 = *(_DWORD *)(a1 + 4);
              v98 = v127;
            }
            else
            {
              LOBYTE(v102) = 0;
              *(_DWORD *)(a1 + 4) = 0;
              v103 = a4;
            }
            v15[54] = v102;
            if (v94)
              v107 = 8;
            else
              v107 = 0;
            *(_WORD *)(a1 + 86) = (*(__int16 *)(a1 + 86) + *(_DWORD *)(a1 + 4) + 52) % 0x34u;
            if (v60 > v12 || v94)
              v109 = 4;
            else
              v109 = 0;
            if (v98)
              v110 = 16;
            else
              v110 = 0;
            *(_BYTE *)(a1 + 112) = v110 | v107 | v109 | *(_BYTE *)(a1 + 112) & 0xC3;
            *(_BYTE *)(a1 + 113) = v97;
            *(_BYTE *)(a1 + 116) = *(_BYTE *)(a1 + 10);
            *(_DWORD *)(a1 + 120) = *(_DWORD *)(a1 + 12);
            *(_BYTE *)(a1 + 118) = 0;
            *(_BYTE *)(a1 + 117) = *(_BYTE *)(*(_QWORD *)(a5 + 40) + 3);
            v111 = 48 * v103;
            *(_BYTE *)(*(_QWORD *)(a1 + 104) + v111) = *(_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * v103) & 0xF7 | v107;
            *(_BYTE *)(*(_QWORD *)(a1 + 104) + v111) = *(_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * v103) & 0xFB | v109;
            *(_BYTE *)(*(_QWORD *)(a1 + 104) + v111) = *(_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * v103) & 0xEF | v110;
            *(_BYTE *)(*(_QWORD *)(a1 + 104) + v111) = *(_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * v103) & 0xDF;
            *(_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * v103 + 1) = v97;
            *(_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * v103 + 4) = *(_BYTE *)(a1 + 10);
            *(_WORD *)(*(_QWORD *)(a1 + 104) + 48 * v103 + 8) = *(_WORD *)(a1 + 12);
            *(_WORD *)(*(_QWORD *)(a1 + 104) + 48 * v103 + 10) = *(_WORD *)(a1 + 14);
            *(_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * v103 + 6) = 0;
            *(_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * v103 + 5) = *(_BYTE *)(*(_QWORD *)(a5 + 40) + 3);
            goto LABEL_156;
          }
        }
        return 4294958327;
      }
      v61 = *(_QWORD *)(a1 + 3216);
      v62 = *(_QWORD *)(a1 + 16) << 9;
      *(_QWORD *)(a1 + 16) = v62;
      v63 = *(_DWORD *)(a1 + 64);
      v64 = 9;
      if (v63 <= 8)
      {
        v64 = 9 - v63;
        v65 = *(unsigned int **)(a1 + 32);
        v66 = v65 + 1;
        *(_QWORD *)(a1 + 32) = v65 + 1;
        v67 = bswap32(*v65);
        if ((unint64_t)v66 > *(_QWORD *)(a1 + 48))
          v66 = *(unsigned int **)(a1 + 48);
        *(_QWORD *)(a1 + 32) = v66;
        v62 |= v67 << v64;
        v63 = 32;
      }
      v68 = v63 - v64;
      *(_DWORD *)(a1 + 64) = v68;
      v69 = v68 & 7;
      v70 = v62 << (v68 & 7);
      *(_QWORD *)(a1 + 16) = v70;
      v71 = v69 - v68;
      if (v69 > v68)
      {
        v72 = *(unsigned int **)(a1 + 32);
        v73 = v72 + 1;
        *(_QWORD *)(a1 + 32) = v72 + 1;
        v74 = bswap32(*v72);
        if ((unint64_t)v73 > *(_QWORD *)(a1 + 48))
          v73 = *(unsigned int **)(a1 + 48);
        *(_QWORD *)(a1 + 32) = v73;
        v70 |= v74 << v71;
        *(_QWORD *)(a1 + 16) = v70;
        v68 = 32;
        v69 = v71;
      }
      *(_DWORD *)(a1 + 64) = v68 - v69;
      *(_DWORD *)(a1 + 28) = HIDWORD(v70);
      v75 = 32;
      do
      {
        v76 = *(_DWORD *)(a1 + 28);
        v77 = *(_QWORD *)(a1 + 16) << 8;
        *(_QWORD *)(a1 + 16) = v77;
        v78 = *(_DWORD *)(a1 + 64);
        if (v78 > 7)
        {
          v79 = 8;
        }
        else
        {
          v79 = 8 - v78;
          v80 = *(unsigned int **)(a1 + 32);
          v81 = v80 + 1;
          *(_QWORD *)(a1 + 32) = v80 + 1;
          v82 = bswap32(*v80);
          if ((unint64_t)v81 > *(_QWORD *)(a1 + 48))
            v81 = *(unsigned int **)(a1 + 48);
          *(_QWORD *)(a1 + 32) = v81;
          v77 |= v82 << v79;
          *(_QWORD *)(a1 + 16) = v77;
          v78 = 32;
        }
        *(_DWORD *)(a1 + 64) = v78 - v79;
        *(_DWORD *)(a1 + 28) = HIDWORD(v77);
        *(_WORD *)(v61 + v75) = HIBYTE(v76);
        v83 = *(_DWORD *)(a1 + 28);
        v84 = *(_QWORD *)(a1 + 16) << 8;
        *(_QWORD *)(a1 + 16) = v84;
        v85 = *(_DWORD *)(a1 + 64);
        if (v85 > 7)
        {
          v86 = 8;
        }
        else
        {
          v86 = 8 - v85;
          v87 = *(unsigned int **)(a1 + 32);
          v88 = v87 + 1;
          *(_QWORD *)(a1 + 32) = v87 + 1;
          v89 = bswap32(*v87);
          if ((unint64_t)v88 > *(_QWORD *)(a1 + 48))
            v88 = *(unsigned int **)(a1 + 48);
          *(_QWORD *)(a1 + 32) = v88;
          v84 |= v89 << v86;
          *(_QWORD *)(a1 + 16) = v84;
          v85 = 32;
        }
        *(_DWORD *)(a1 + 64) = v85 - v86;
        *(_DWORD *)(a1 + 28) = HIDWORD(v84);
        *(_WORD *)(v61 + v75 + 2) = HIBYTE(v83);
        v75 += 4;
      }
      while ((_DWORD)v75 != 800);
      *(_QWORD *)a1 = 510;
      v90 = *(_BYTE *)(a1 + 112);
      *(_BYTE *)(a1 + 116) = 1;
      *(_DWORD *)(a1 + 120) = 0x3FFFFFF;
      *(_BYTE *)(a1 + 112) = v90 & 0x83 | 0x20;
      v91 = 48 * a4;
      *(_BYTE *)(*(_QWORD *)(a1 + 104) + v91) &= ~4u;
      *(_BYTE *)(*(_QWORD *)(a1 + 104) + v91) &= ~8u;
      *(_BYTE *)(*(_QWORD *)(a1 + 104) + v91) &= ~0x10u;
      *(_BYTE *)(*(_QWORD *)(a1 + 104) + v91) |= 0x20u;
      *(_BYTE *)(*(_QWORD *)(a1 + 104) + v91) &= ~0x40u;
      *(_BYTE *)(*(_QWORD *)(a1 + 104) + v91 + 4) = 1;
      *(_WORD *)(*(_QWORD *)(a1 + 104) + v91 + 8) = -1;
      *(_WORD *)(*(_QWORD *)(a1 + 104) + v91 + 10) = 1023;
      *(_DWORD *)(*(_QWORD *)(a1 + 104) + v91 + 12) = 0;
      *(_DWORD *)(a1 + 124) = 0;
      v92 = *(_QWORD *)(a1 + 104) + v91;
      *(_OWORD *)(v92 + 16) = 0u;
      *(_OWORD *)(v92 + 32) = 0u;
      *(_OWORD *)(a1 + 128) = 0u;
      *(_OWORD *)(a1 + 144) = 0u;
      *(_BYTE *)(a1 + 118) = 0;
      *(_BYTE *)(*(_QWORD *)(a1 + 104) + v91 + 6) = 0;
      *(_BYTE *)(*(_QWORD *)(a5 + 40) + 3) = 0;
      *(_BYTE *)(a1 + 117) = 0;
      *(_BYTE *)(*(_QWORD *)(a1 + 104) + v91 + 5) = 0;
      *(_BYTE *)(*(_QWORD *)(a5 + 48) + 272) = 0;
      v15[54] = 0;
LABEL_156:
      sub_215FC74FC(a1, a4);
      return 0;
  }
}

uint64_t sub_215FCA688(uint64_t a1, unsigned int a2, unsigned __int8 *a3, unsigned int a4, char *a5, char *a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  uint64_t v12;
  _BOOL4 v14;
  uint64_t v16;
  BOOL v17;
  BOOL v18;
  char v19;
  char v20;
  char v21;
  BOOL v22;
  BOOL v23;
  char v24;
  char v25;
  char v26;
  int v27;
  _BYTE *v28;
  unsigned __int8 v29;
  char v30;
  _BOOL4 v31;
  unsigned __int8 v32;
  __int16 *v33;
  __int16 *v34;
  int v35;
  int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  uint64_t v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  uint64_t v45;
  int v46;
  int v47;
  int v48;
  unsigned int v49;
  int v50;
  int v51;
  char *v52;
  int v53;
  uint64_t v54;
  int v55;
  int v56;
  int v57;
  uint64_t v58;
  int v59;
  int v60;
  int v61;
  __int16 v62;
  int v63;
  uint64_t v64;
  __int16 v65;
  int v66;
  int v67;
  int v68;
  __int16 v69;
  int v70;
  __int16 v71;
  __int16 v72;
  __int16 v73;
  _BOOL4 v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  __int16 v78;
  __int16 v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  int v92;
  char v93;
  int v94;
  char v95;
  char v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  __int16 v102;
  __int16 v103;
  int v104;
  char v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  __int16 v116;
  __int16 v117;
  int v118;
  int v119;
  int v120;
  __int16 v121;
  uint64_t v122;
  int v123;
  int v124;
  unsigned int v125;
  int v126;
  __int16 v127;
  uint64_t v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  __int16 v140;
  __int16 v141;
  int v142;
  int v143;
  __int16 v145;
  int v146;
  int v147;
  uint64_t v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v154;
  unsigned int v155;
  char v157;
  __int16 v158;
  __int16 v159;
  __int16 v160;

  v10 = (unsigned __int8 *)a6;
  v11 = (unsigned __int8 *)a5;
  v12 = a1;
  if (a2 >= a4)
  {
    if (a2 == a4)
    {
      v16 = 0;
      if (a7)
      {
        do
        {
          v17 = sub_215FC2C90((unsigned int *)v12, (_BYTE *)(v12 + 276));
          *(_BYTE *)(a9 + v16 + 1138) = v17;
          if (!v17)
          {
            v18 = sub_215FC2C90((unsigned int *)v12, (_BYTE *)(v12 + 277));
            if (sub_215FC2C90((unsigned int *)v12, (_BYTE *)(v12 + 277)))
              v19 = 2;
            else
              v19 = 0;
            v20 = v19 | v18;
            if (sub_215FC2C90((unsigned int *)v12, (_BYTE *)(v12 + 277)))
              v21 = 4;
            else
              v21 = 0;
            *(_BYTE *)(a9 + v16 + 1158) = v20 | v21;
          }
          ++v16;
        }
        while (v16 != 4);
      }
      else
      {
        do
        {
          v22 = sub_215FC2C90((unsigned int *)v12, (_BYTE *)(v12 + 276));
          *(_BYTE *)(a9 + v16 + 1122) = v22;
          if (!v22)
          {
            v23 = sub_215FC2C90((unsigned int *)v12, (_BYTE *)(v12 + 277));
            if (sub_215FC2C90((unsigned int *)v12, (_BYTE *)(v12 + 277)))
              v24 = 2;
            else
              v24 = 0;
            v25 = v24 | v23;
            if (sub_215FC2C90((unsigned int *)v12, (_BYTE *)(v12 + 277)))
              v26 = 4;
            else
              v26 = 0;
            *(_BYTE *)(a9 + v16 + 1142) = v25 | v26;
          }
          ++v16;
        }
        while (v16 != 16);
      }
      if (a8)
      {
        a1 = v12;
        v11 = (unsigned __int8 *)a5;
        v10 = (unsigned __int8 *)a6;
        goto LABEL_28;
      }
      v28 = (_BYTE *)(a9 + 1121);
      *(_BYTE *)(a9 + 1121) = 0;
      v11 = (unsigned __int8 *)a5;
      v10 = (unsigned __int8 *)a6;
    }
    else
    {
      if (a8)
      {
LABEL_28:
        v27 = sub_215FC332C(a1, v11, v10);
        v28 = (_BYTE *)(a9 + 1121);
        *(_BYTE *)(a9 + 1121) = v27;
        v29 = *v11;
        if (v27)
        {
          v30 = 64;
LABEL_55:
          *v11 = v30 | v29 & 0xBF;
          *v10 = *v10 & 0xBF | ((*v28 != 0) << 6);
          *((_DWORD *)v11 + 3) = 0;
          *((_DWORD *)v10 + 3) = 0;
          *((_OWORD *)v11 + 1) = 0u;
          *((_OWORD *)v11 + 2) = 0u;
          *((_OWORD *)v10 + 1) = 0u;
          *((_OWORD *)v10 + 2) = 0u;
          return 28;
        }
LABEL_54:
        v30 = 0;
        goto LABEL_55;
      }
      v28 = (_BYTE *)(a9 + 1121);
      *(_BYTE *)(a9 + 1121) = 0;
    }
    v29 = *v11;
    goto LABEL_54;
  }
  if (a3[42])
    v14 = 1;
  else
    v14 = *(unsigned __int16 *)(a1 + 8) == 2;
  if (a3[43])
    v31 = 1;
  else
    v31 = *(unsigned __int16 *)(a1 + 8) == 2;
  v32 = *a5;
  v157 = *a6;
  *a5 &= ~0x40u;
  v33 = (__int16 *)(a5 + 16);
  *a6 &= ~0x40u;
  v34 = (__int16 *)(a6 + 16);
  v35 = a3[4];
  if (v35 == 5 || v35 == 0)
  {
    if (v14)
    {
      v37 = sub_215FC3460(a1, a5, a6, 0, 0, 0, 0, a2);
      v38 = v37;
      if (a2)
        v39 = sub_215FC3460(v12, v11, v10, 0, __rbit32(a2) >> 30, v37, 0, a2);
      else
        v39 = 0;
    }
    else
    {
      v39 = 0;
      v38 = 0;
    }
    if ((v38 | v39) > 0x1F)
      return 4293967296;
    if (a2 != 1)
    {
      if (a2 == 2)
      {
        if ((v32 & 1) != 0)
          v46 = *v33;
        else
          v46 = 0;
        if ((v157 & 1) != 0)
          v50 = *v34;
        else
          v50 = 0;
        v54 = *(_QWORD *)(a10 + 48);
        v55 = sub_215FC3714((unsigned int *)v12, 40, v46, v50);
        if ((v32 & 1) != 0)
        {
          v56 = *((__int16 *)v11 + 9);
          if ((v157 & 1) != 0)
            goto LABEL_83;
        }
        else
        {
          v56 = 0;
          if ((v157 & 1) != 0)
          {
LABEL_83:
            v57 = *((__int16 *)v10 + 9);
LABEL_94:
            v68 = sub_215FC3714((unsigned int *)v12, 47, v56, v57);
            if ((v32 & 1) != 0)
            {
              v69 = sub_215FC3714((unsigned int *)v12, 40, *((__int16 *)v11 + 16), v55);
              v70 = *((__int16 *)v11 + 17);
            }
            else
            {
              v69 = sub_215FC3714((unsigned int *)v12, 40, 0, v55);
              v70 = 0;
            }
            v73 = sub_215FC3714((unsigned int *)v12, 47, v70, v68);
            *(_BYTE *)(v54 + 24) = v38;
            *(_BYTE *)(v54 + 40) = v39;
            *(_WORD *)(v54 + 16) = v55;
            *(_WORD *)(v54 + 18) = v68;
            *(_WORD *)(v54 + 32) = v69;
            *(_WORD *)(v54 + 34) = v73;
            *((_WORD *)v11 + 12) = v55;
            *((_WORD *)v11 + 8) = v55;
            *((_WORD *)v11 + 20) = v69;
            *((_WORD *)v11 + 16) = v69;
            *((_WORD *)v11 + 13) = v68;
            *((_WORD *)v11 + 9) = v68;
            *((_WORD *)v11 + 21) = v73;
            *((_WORD *)v11 + 17) = v73;
            *((_WORD *)v10 + 20) = v69;
            *((_WORD *)v10 + 16) = v69;
            *((_WORD *)v10 + 12) = v69;
            *((_WORD *)v10 + 8) = v69;
            *((_WORD *)v10 + 21) = v73;
            *((_WORD *)v10 + 17) = v73;
            *((_WORD *)v10 + 13) = v73;
            *((_WORD *)v10 + 9) = v73;
            v11[12] = v38;
            v11[14] = v39;
            v10[14] = v39;
            v45 = 28;
            v10[12] = v39;
            return v45;
          }
        }
        v57 = 0;
        goto LABEL_94;
      }
      if ((v32 & 1) != 0)
        v48 = *v33;
      else
        v48 = 0;
      v52 = (char *)v11;
      if ((v157 & 1) != 0)
        v53 = *v34;
      else
        v53 = 0;
      v64 = *(_QWORD *)(a10 + 48);
      v65 = sub_215FC3714((unsigned int *)v12, 40, v48, v53);
      if ((v32 & 1) != 0)
      {
        v66 = *((__int16 *)v52 + 9);
        if ((v157 & 1) != 0)
          goto LABEL_91;
      }
      else
      {
        v66 = 0;
        if ((v157 & 1) != 0)
        {
LABEL_91:
          v67 = *((__int16 *)v10 + 9);
LABEL_101:
          v72 = sub_215FC3714((unsigned int *)v12, 47, v66, v67);
          *(_BYTE *)(v64 + 24) = v38;
          *(_WORD *)(v64 + 16) = v65;
          *(_WORD *)(v64 + 18) = v72;
          *((_WORD *)v52 + 20) = v65;
          *((_WORD *)v52 + 16) = v65;
          *((_WORD *)v52 + 12) = v65;
          *((_WORD *)v52 + 8) = v65;
          *((_WORD *)v52 + 21) = v72;
          *((_WORD *)v52 + 17) = v72;
          *((_WORD *)v52 + 13) = v72;
          *((_WORD *)v52 + 9) = v72;
          *((_WORD *)v10 + 20) = v65;
          *((_WORD *)v10 + 16) = v65;
          *((_WORD *)v10 + 12) = v65;
          *((_WORD *)v10 + 8) = v65;
          *((_WORD *)v10 + 21) = v72;
          *((_WORD *)v10 + 17) = v72;
          *((_WORD *)v10 + 13) = v72;
          *((_WORD *)v10 + 9) = v72;
          v52[14] = v38;
          v52[12] = v38;
          v10[14] = v38;
          v45 = 18;
          v10[12] = v38;
          return v45;
        }
      }
      v67 = 0;
      goto LABEL_101;
    }
    if ((v32 & 1) != 0)
      v47 = *v33;
    else
      v47 = 0;
    if ((v157 & 1) != 0)
      v51 = *v34;
    else
      v51 = 0;
    v58 = *(_QWORD *)(a10 + 48);
    v59 = sub_215FC3714((unsigned int *)v12, 40, v47, v51);
    if ((v32 & 1) != 0)
    {
      v60 = *((__int16 *)v11 + 9);
      if ((v157 & 1) != 0)
        goto LABEL_87;
    }
    else
    {
      v60 = 0;
      if ((v157 & 1) != 0)
      {
LABEL_87:
        v61 = sub_215FC3714((unsigned int *)v12, 47, v60, *((__int16 *)v10 + 9));
        v62 = sub_215FC3714((unsigned int *)v12, 40, v59, *((__int16 *)v10 + 16));
        v63 = *((__int16 *)v10 + 17);
LABEL_98:
        v71 = sub_215FC3714((unsigned int *)v12, 47, v61, v63);
        *(_BYTE *)(v58 + 24) = v38;
        *(_BYTE *)(v58 + 40) = v39;
        *(_WORD *)(v58 + 16) = v59;
        *(_WORD *)(v58 + 18) = v61;
        *(_WORD *)(v58 + 32) = v62;
        *(_WORD *)(v58 + 34) = v71;
        *((_WORD *)v11 + 20) = v62;
        *((_WORD *)v11 + 16) = v62;
        *((_WORD *)v11 + 12) = v62;
        *((_WORD *)v11 + 8) = v62;
        *((_WORD *)v11 + 21) = v71;
        *((_WORD *)v11 + 17) = v71;
        *((_WORD *)v11 + 13) = v71;
        *((_WORD *)v11 + 9) = v71;
        *((_WORD *)v10 + 12) = v59;
        *((_WORD *)v10 + 8) = v59;
        *((_WORD *)v10 + 20) = v62;
        *((_WORD *)v10 + 16) = v62;
        *((_WORD *)v10 + 13) = v61;
        *((_WORD *)v10 + 9) = v61;
        *((_WORD *)v10 + 21) = v71;
        *((_WORD *)v10 + 17) = v71;
        v11[14] = v39;
        v11[12] = v39;
        v10[12] = v38;
        v45 = 28;
        v10[14] = v39;
        return v45;
      }
    }
    v61 = sub_215FC3714((unsigned int *)v12, 47, v60, 0);
    v62 = sub_215FC3714((unsigned int *)v12, 40, v59, 0);
    v63 = 0;
    goto LABEL_98;
  }
  if (a2)
  {
    v40 = byte_2160EE518[a2];
    v41 = *(_QWORD *)(a10 + 48);
    v42 = byte_2160EE546[a2];
    if (a2 > 3)
    {
      v49 = byte_2160EE518[a2 + 23];
      v150 = byte_2160EE546[a2 + 23];
      v148 = *(_QWORD *)(a10 + 48);
      if (v14)
      {
        if (byte_2160EE518[a2])
        {
          v45 = 0;
        }
        else
        {
          v81 = byte_2160EE518[a2 + 23];
          v82 = byte_2160EE546[a2];
          v83 = sub_215FC3460(a1, a5, a6, 0, 0, 0, 1, a2);
          v42 = v82;
          v41 = v148;
          v49 = v81;
          v40 = v83;
          *(_BYTE *)(v148 + 24) = v83;
          if (v83 >= 0x20)
            v45 = 4293967296;
          else
            v45 = 0;
        }
        if (!v49)
        {
          v151 = v40;
          v84 = v42;
          v85 = sub_215FC3460(v12, v11, v10, 0, 2 - (a2 & 1), v40, 1, a2);
          v42 = v84;
          v40 = v151;
          v41 = v148;
          v49 = v85;
          *(_BYTE *)(v148 + 40) = v85;
          if (v85 >= 0x20)
            v86 = -1000000;
          else
            v86 = 0;
          v45 = (v86 + v45);
        }
      }
      else
      {
        v45 = 0;
      }
      v152 = v40;
      v149 = v49;
      if (v31)
      {
        if (!v42)
        {
          v87 = sub_215FC3460(v12, v11, v10, 1, 0, 0, 1, a2);
          v49 = v149;
          v40 = v152;
          v42 = v87;
          *(_BYTE *)(v41 + 25) = v87;
          if (v87 >= 0x20)
            v88 = -1000000;
          else
            v88 = 0;
          v45 = (v88 + v45);
        }
        if (!v150)
        {
          v89 = v42;
          v90 = sub_215FC3460(v12, v11, v10, 1, 2 - (a2 & 1), v42, 1, a2);
          v42 = v89;
          v49 = v149;
          v40 = v152;
          *(_BYTE *)(v41 + 41) = v90;
          v150 = v90;
          if (v90 >= 0x20)
            v91 = -1000000;
          else
            v91 = 0;
          v45 = (v91 + v45);
        }
      }
      if ((v45 & 0x80000000) == 0)
      {
        v155 = v42;
        if ((a2 & 1) != 0)
        {
          if (v40 == 255)
          {
            v147 = 0;
            v94 = 0;
            v95 = v157;
          }
          else
          {
            if ((v32 & 1) != 0)
              v99 = *v33;
            else
              v99 = 0;
            v95 = v157;
            if ((v157 & 1) != 0)
              v110 = *v34;
            else
              v110 = 0;
            v94 = sub_215FC3714((unsigned int *)v12, 40, v99, v110);
            if ((v32 & 1) != 0)
              v112 = *((__int16 *)v11 + 9);
            else
              v112 = 0;
            if ((v157 & 1) != 0)
              v114 = *((__int16 *)v10 + 9);
            else
              v114 = 0;
            v119 = sub_215FC3714((unsigned int *)v12, 47, v112, v114);
            *(_WORD *)(v41 + 16) = v94;
            v147 = v119;
            *(_WORD *)(v41 + 18) = v119;
            LOBYTE(v40) = v152;
            v49 = v149;
          }
          if (v49 == 255)
          {
            v116 = 0;
            v117 = 0;
          }
          else
          {
            if ((v32 & 1) != 0)
            {
              v117 = sub_215FC3714((unsigned int *)v12, 40, *((__int16 *)v11 + 16), v94);
              v120 = *((__int16 *)v11 + 17);
            }
            else
            {
              v117 = sub_215FC3714((unsigned int *)v12, 40, 0, v94);
              v120 = 0;
            }
            v127 = sub_215FC3714((unsigned int *)v12, 47, v120, v147);
            v128 = v41;
            v116 = v127;
            *(_WORD *)(v128 + 32) = v117;
            *(_WORD *)(v128 + 34) = v127;
            LOBYTE(v40) = v152;
            LOBYTE(v49) = v149;
          }
          if (v155 == 255)
          {
            v129 = 0;
            v130 = 0;
          }
          else
          {
            if ((v32 & 1) != 0)
              v131 = *((__int16 *)v11 + 10);
            else
              v131 = 0;
            if ((v95 & 1) != 0)
              v133 = *((__int16 *)v10 + 10);
            else
              v133 = 0;
            v135 = sub_215FC3714((unsigned int *)v12, 40, v131, v133);
            if ((v32 & 1) != 0)
              v136 = *((__int16 *)v11 + 11);
            else
              v136 = 0;
            v138 = v135;
            if ((v95 & 1) != 0)
              v139 = *((__int16 *)v10 + 11);
            else
              v139 = 0;
            v129 = sub_215FC3714((unsigned int *)v12, 47, v136, v139);
            v130 = v138;
            *(_WORD *)(v148 + 20) = v138;
            *(_WORD *)(v148 + 22) = v129;
            LOBYTE(v40) = v152;
            LOBYTE(v49) = v149;
          }
          v160 = v94;
          if (v150 == 255)
          {
            LOWORD(v123) = 0;
            v141 = 0;
            LOBYTE(v125) = -1;
          }
          else
          {
            v145 = v130;
            if ((v32 & 1) != 0)
            {
              v141 = sub_215FC3714((unsigned int *)v12, 40, *((__int16 *)v11 + 18), v130);
              v143 = *((__int16 *)v11 + 19);
            }
            else
            {
              v141 = sub_215FC3714((unsigned int *)v12, 40, 0, v130);
              v143 = 0;
            }
            LOWORD(v123) = sub_215FC3714((unsigned int *)v12, 47, v143, v129);
            *(_WORD *)(v148 + 36) = v141;
            *(_WORD *)(v148 + 38) = v123;
            LOBYTE(v125) = v150;
            LOBYTE(v40) = v152;
            LOBYTE(v49) = v149;
            LOWORD(v130) = v145;
          }
          v11[12] = v40;
          v11[13] = v155;
          v10[12] = v49;
          v10[13] = v125;
          *((_WORD *)v11 + 12) = v160;
          *((_WORD *)v11 + 8) = v160;
          *((_WORD *)v11 + 13) = v147;
          *((_WORD *)v11 + 9) = v147;
          *((_WORD *)v11 + 14) = v130;
          *((_WORD *)v11 + 10) = v130;
          *((_WORD *)v11 + 15) = v129;
          *((_WORD *)v11 + 11) = v129;
          *((_WORD *)v10 + 12) = v117;
          *((_WORD *)v10 + 8) = v117;
          *((_WORD *)v10 + 13) = v116;
          *((_WORD *)v10 + 9) = v116;
          *((_WORD *)v10 + 14) = v141;
          v140 = v123;
          *((_WORD *)v10 + 10) = v141;
        }
        else
        {
          if (v40 == 255)
          {
            v146 = 0;
            v92 = 0;
            v93 = v157;
          }
          else
          {
            if ((v32 & 1) != 0)
              v98 = *v33;
            else
              v98 = 0;
            v93 = v157;
            if ((v157 & 1) != 0)
              v109 = *v34;
            else
              v109 = 0;
            v92 = sub_215FC3714((unsigned int *)v12, 40, v98, v109);
            if ((v32 & 1) != 0)
              v111 = *((__int16 *)v11 + 9);
            else
              v111 = 0;
            if ((v157 & 1) != 0)
              v113 = *((__int16 *)v10 + 9);
            else
              v113 = 0;
            v115 = sub_215FC3714((unsigned int *)v12, 47, v111, v113);
            *(_WORD *)(v41 + 16) = v92;
            v146 = v115;
            *(_WORD *)(v41 + 18) = v115;
            LOBYTE(v40) = v152;
            v49 = v149;
          }
          if (v49 == 255)
          {
            v116 = 0;
            v117 = 0;
          }
          else
          {
            if ((v93 & 1) != 0)
            {
              v117 = sub_215FC3714((unsigned int *)v12, 40, v92, *((__int16 *)v10 + 16));
              v118 = *((__int16 *)v10 + 17);
            }
            else
            {
              v117 = sub_215FC3714((unsigned int *)v12, 40, v92, 0);
              v118 = 0;
            }
            v121 = sub_215FC3714((unsigned int *)v12, 47, v146, v118);
            v122 = v41;
            v116 = v121;
            *(_WORD *)(v122 + 32) = v117;
            *(_WORD *)(v122 + 34) = v121;
            LOBYTE(v40) = v152;
            LOBYTE(v49) = v149;
          }
          if (v155 == 255)
          {
            v123 = 0;
            v124 = 0;
            v125 = v150;
          }
          else
          {
            if ((v32 & 1) != 0)
              v126 = *((__int16 *)v11 + 10);
            else
              v126 = 0;
            if ((v93 & 1) != 0)
              v132 = *((__int16 *)v10 + 10);
            else
              v132 = 0;
            v158 = v92;
            v92 = sub_215FC3714((unsigned int *)v12, 40, v126, v132);
            if ((v32 & 1) != 0)
              v134 = *((__int16 *)v11 + 11);
            else
              v134 = 0;
            v125 = v150;
            if ((v93 & 1) != 0)
              v137 = *((__int16 *)v10 + 11);
            else
              v137 = 0;
            v123 = sub_215FC3714((unsigned int *)v12, 47, v134, v137);
            v124 = v92;
            *(_WORD *)(v148 + 20) = v92;
            *(_WORD *)(v148 + 22) = v123;
            LOBYTE(v40) = v152;
            LOBYTE(v49) = v149;
            LOWORD(v92) = v158;
          }
          if (v125 == 255)
          {
            v140 = 0;
            v141 = 0;
          }
          else
          {
            v159 = v124;
            if ((v93 & 1) != 0)
            {
              v141 = sub_215FC3714((unsigned int *)v12, 40, v124, *((__int16 *)v10 + 18));
              v142 = *((__int16 *)v10 + 19);
            }
            else
            {
              v141 = sub_215FC3714((unsigned int *)v12, 40, v124, 0);
              v142 = 0;
            }
            v140 = sub_215FC3714((unsigned int *)v12, 47, v123, v142);
            *(_WORD *)(v148 + 36) = v141;
            *(_WORD *)(v148 + 38) = v140;
            LOBYTE(v40) = v152;
            LOBYTE(v49) = v149;
            LOWORD(v124) = v159;
          }
          v11[12] = v49;
          v11[13] = v125;
          v10[12] = v40;
          v10[13] = v155;
          *((_WORD *)v11 + 12) = v117;
          *((_WORD *)v11 + 8) = v117;
          *((_WORD *)v11 + 13) = v116;
          *((_WORD *)v11 + 9) = v116;
          *((_WORD *)v11 + 14) = v141;
          *((_WORD *)v11 + 10) = v141;
          *((_WORD *)v11 + 15) = v140;
          *((_WORD *)v11 + 11) = v140;
          *((_WORD *)v10 + 12) = v92;
          *((_WORD *)v10 + 8) = v92;
          *((_WORD *)v10 + 13) = v146;
          *((_WORD *)v10 + 9) = v146;
          *((_WORD *)v10 + 14) = v124;
          *((_WORD *)v10 + 10) = v124;
        }
        *((_WORD *)v10 + 15) = v123;
        *((_WORD *)v10 + 11) = v123;
        v11[14] = v49;
        v11[15] = v125;
        v10[14] = v49;
        v10[15] = v125;
        *((_WORD *)v11 + 20) = v117;
        *((_WORD *)v11 + 16) = v117;
        *((_WORD *)v11 + 21) = v116;
        *((_WORD *)v11 + 17) = v116;
        *((_WORD *)v11 + 22) = v141;
        *((_WORD *)v11 + 18) = v141;
        *((_WORD *)v11 + 23) = v140;
        *((_WORD *)v11 + 19) = v140;
        *((_WORD *)v10 + 20) = v117;
        *((_WORD *)v10 + 16) = v117;
        *((_WORD *)v10 + 21) = v116;
        *((_WORD *)v10 + 17) = v116;
        *((_WORD *)v10 + 22) = v141;
        *((_WORD *)v10 + 18) = v141;
        *((_WORD *)v10 + 23) = v140;
        *((_WORD *)v10 + 19) = v140;
        v11[3] = a2;
        v11[2] = a2;
        v10[3] = a2;
        v45 = 28;
        v10[2] = a2;
      }
    }
    else
    {
      if (byte_2160EE518[a2])
        v14 = 0;
      if (v14)
      {
        v43 = byte_2160EE546[a2];
        v44 = sub_215FC3460(a1, a5, a6, 0, 0, 0, 1, a2);
        v42 = v43;
        v40 = v44;
        *(_BYTE *)(v41 + 24) = v44;
        if (v44 >= 0x20)
          v45 = 4293967296;
        else
          v45 = 0;
      }
      else
      {
        v45 = 0;
      }
      if (v42)
        v74 = 0;
      else
        v74 = v31;
      if (v74)
      {
        v75 = v40;
        v76 = sub_215FC3460(v12, v11, v10, 1, 0, 0, 1, a2);
        v40 = v75;
        v42 = v76;
        *(_BYTE *)(v41 + 25) = v76;
        if (v76 >= 0x20)
          v77 = -1000000;
        else
          v77 = 0;
        v45 = (v77 + v45);
      }
      if ((v45 & 0x80000000) == 0)
      {
        v154 = v42;
        if (v40 == 255)
        {
          v78 = 0;
          v79 = 0;
        }
        else
        {
          if ((v32 & 1) != 0)
            v80 = *v33;
          else
            v80 = 0;
          v96 = v40;
          if ((v157 & 1) != 0)
            v97 = *v34;
          else
            v97 = 0;
          v79 = sub_215FC3714((unsigned int *)v12, 40, v80, v97);
          if ((v32 & 1) != 0)
            v100 = *((__int16 *)v11 + 9);
          else
            v100 = 0;
          if ((v157 & 1) != 0)
            v101 = *((__int16 *)v10 + 9);
          else
            v101 = 0;
          v78 = sub_215FC3714((unsigned int *)v12, 47, v100, v101);
          *(_WORD *)(v41 + 16) = v79;
          *(_WORD *)(v41 + 18) = v78;
          LOBYTE(v40) = v96;
          v42 = v154;
        }
        if (v42 == 255)
        {
          v102 = 0;
          v103 = 0;
        }
        else
        {
          if ((v32 & 1) != 0)
            v104 = *((__int16 *)v11 + 10);
          else
            v104 = 0;
          v105 = v40;
          if ((v157 & 1) != 0)
            v106 = *((__int16 *)v10 + 10);
          else
            v106 = 0;
          v103 = sub_215FC3714((unsigned int *)v12, 40, v104, v106);
          if ((v32 & 1) != 0)
            v107 = *((__int16 *)v11 + 11);
          else
            v107 = 0;
          if ((v157 & 1) != 0)
            v108 = *((__int16 *)v10 + 11);
          else
            v108 = 0;
          v102 = sub_215FC3714((unsigned int *)v12, 47, v107, v108);
          *(_WORD *)(v41 + 20) = v103;
          *(_WORD *)(v41 + 22) = v102;
          LOBYTE(v40) = v105;
          LOBYTE(v42) = v154;
        }
        v11[14] = v40;
        v11[12] = v40;
        v11[15] = v42;
        v11[13] = v42;
        v10[14] = v40;
        v10[12] = v40;
        v10[15] = v42;
        v10[13] = v42;
        v11[3] = a2;
        v11[2] = a2;
        v10[3] = a2;
        v10[2] = a2;
        *((_WORD *)v11 + 20) = v79;
        *((_WORD *)v11 + 16) = v79;
        *((_WORD *)v11 + 12) = v79;
        *((_WORD *)v11 + 8) = v79;
        *((_WORD *)v11 + 21) = v78;
        *((_WORD *)v11 + 17) = v78;
        *((_WORD *)v11 + 13) = v78;
        *((_WORD *)v11 + 9) = v78;
        *((_WORD *)v10 + 20) = v79;
        *((_WORD *)v10 + 16) = v79;
        *((_WORD *)v10 + 12) = v79;
        *((_WORD *)v10 + 8) = v79;
        *((_WORD *)v10 + 21) = v78;
        *((_WORD *)v10 + 17) = v78;
        *((_WORD *)v10 + 13) = v78;
        *((_WORD *)v10 + 9) = v78;
        *((_WORD *)v11 + 22) = v103;
        *((_WORD *)v11 + 18) = v103;
        *((_WORD *)v11 + 14) = v103;
        *((_WORD *)v11 + 10) = v103;
        *((_WORD *)v11 + 23) = v102;
        *((_WORD *)v11 + 19) = v102;
        *((_WORD *)v11 + 15) = v102;
        *((_WORD *)v11 + 11) = v102;
        *((_WORD *)v10 + 22) = v103;
        *((_WORD *)v10 + 18) = v103;
        *((_WORD *)v10 + 14) = v103;
        *((_WORD *)v10 + 10) = v103;
        *((_WORD *)v10 + 23) = v102;
        *((_WORD *)v10 + 19) = v102;
        *((_WORD *)v10 + 15) = v102;
        v45 = 18;
        *((_WORD *)v10 + 11) = v102;
      }
    }
  }
  else
  {
    v45 = 0;
    *((_WORD *)a5 + 1) = 0;
    *((_WORD *)a6 + 1) = 0;
    *((_DWORD *)a5 + 3) = 0;
    *((_DWORD *)a6 + 3) = 0;
    *(_OWORD *)v33 = 0u;
    *((_OWORD *)a5 + 2) = 0u;
    *(_OWORD *)v34 = 0u;
    *((_OWORD *)a6 + 2) = 0u;
  }
  return v45;
}

uint64_t sub_215FCB690(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, BOOL *a5, int a6, uint64_t a7)
{
  _BOOL4 v9;
  _BOOL4 v10;
  _DWORD *v11;
  int v12;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  char *i;
  char v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  __int16 *v34;
  __int128 *v35;
  _BYTE *v36;
  __int16 v37;
  _WORD *v38;
  int v39;
  char v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  __int128 *v44;
  __int16 v45;
  _WORD *v46;
  __int16 v47;
  __int16 *v48;
  __int16 v49;
  _BYTE *v50;
  int v51;
  __int16 v52;
  int v53;
  __int128 *v54;
  __int16 v55;
  __int16 v56;
  int v57;
  __int16 *v58;
  _BYTE *v59;
  int v60;
  __int16 v61;
  int v62;
  uint64_t v63;
  __int128 *v64;
  __int16 v65;
  _WORD *v66;
  __int16 v67;
  int v68;
  char *v69;
  int v70;
  __int16 v71;
  __int16 *v72;
  __int16 v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  int v81;
  int v82;
  int v83;
  unsigned __int8 v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  BOOL v93;
  BOOL v94;
  BOOL v95;
  int v97;
  int v98;
  int v99;
  int v100;
  unsigned int v101;
  uint64_t v102;
  unsigned int v103;
  int v104;
  unsigned int v105;
  int v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  int v116;
  uint64_t v117;
  __int128 v118;
  __int128 v119;
  uint64_t v120;
  int v121;
  _WORD *v122;
  char *v123;
  int v124;
  char v125;
  unsigned int v126;
  __int16 *v127;
  __int128 *v128;
  int v129;
  uint64_t v130;
  int v131;
  unsigned int v132;
  uint64_t v133;
  __int16 *v134;
  __int128 *v135;
  __int16 v136;
  int v137;
  __int128 *v138;
  __int16 v139;
  int v140;
  __int16 *v141;
  int v142;
  int v143;
  __int128 *v144;
  __int16 v145;
  __int16 *v146;
  __int16 *v147;
  __int16 v148;
  __int16 *v149;
  int v150;
  uint64_t v151;
  int v152;
  _WORD *v153;
  char *v154;
  int v155;
  char v156;
  unsigned int v157;
  int v158;
  __int16 *v159;
  __int16 *v160;
  int v161;
  uint64_t v162;
  int v163;
  unsigned int v164;
  uint64_t v165;
  __int16 *v166;
  __int16 *v167;
  __int16 v168;
  int v169;
  _DWORD *v170;
  __int16 v171;
  int v172;
  __int16 *v173;
  int v174;
  int v175;
  __int16 *v176;
  __int16 v177;
  __int16 *v178;
  __int16 *v179;
  __int16 v180;
  __int16 *v181;
  int v182;
  __int128 v183;
  __int128 v184;
  unsigned __int8 v185;
  unsigned __int8 v186;
  char v187;
  __int16 v189;
  __int16 v190;
  __int16 v191;
  __int16 v192;
  __int16 v195;
  int v196;
  unsigned __int8 v197;
  __int16 *v198;
  int v199;
  _DWORD *v200;
  _DWORD *v201;
  int v202;
  int v203;
  __int128 *v204;
  int v205;
  __int16 *v206;
  __int16 *v207;
  int v208;
  _DWORD *v209;
  __int16 v210;
  _DWORD *v211;
  __int16 v212;
  __int16 *v213;
  __int16 *v214;
  int v215;
  char v216;
  char v217;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  char v223;
  char v224;
  char v225;
  char v226;
  unsigned __int8 v227;
  unsigned __int8 v228;
  unsigned __int8 v229;
  unsigned __int8 v230;
  unsigned __int8 v231;
  unsigned __int8 v232;
  unsigned __int8 v233;
  unsigned __int8 v234;
  _BYTE v235[20];
  _BYTE v236[108];
  __int128 v237;
  __int128 v238;
  __int128 v239;
  __int128 v240;
  uint64_t v241;

  v241 = *MEMORY[0x24BDAC8D0];
  if (a2[42])
    v9 = 1;
  else
    v9 = *(unsigned __int16 *)(a1 + 8) == 2;
  if (a2[43])
    v10 = 1;
  else
    v10 = *(unsigned __int16 *)(a1 + 8) == 2;
  v239 = 0u;
  v240 = 0u;
  v237 = 0u;
  v238 = 0u;
  v11 = *(_DWORD **)(a7 + 40);
  v221 = *(_QWORD *)(a7 + 48) + 16;
  v12 = a2[4];
  if (v12 == 5 || v12 == 0)
  {
    v14 = sub_215FC2F64(a1);
    v11[1] = v14;
    v223 = v14;
    v15 = sub_215FC2F64(a1);
    v11[2] = v15;
    v224 = v15;
    v16 = sub_215FC2F64(a1);
    v11[3] = v16;
    v225 = v16;
    v17 = sub_215FC2F64(a1);
    v11[4] = v17;
    v226 = v17;
    *a5 = (v14 | v15 | v16 | v17) == 0;
    if (v9)
    {
      v18 = sub_215FC35AC(a1, (_BYTE *)a3, (_BYTE *)a4, 0, 0, (uint64_t)&v227, 0, (uint64_t)&v223);
      v227 = v18;
      v19 = sub_215FC35AC(a1, (_BYTE *)a3, (_BYTE *)a4, 0, 1u, (uint64_t)&v227, 0, (uint64_t)&v223);
      v229 = v19;
      v20 = sub_215FC35AC(a1, (_BYTE *)a3, (_BYTE *)a4, 0, 2u, (uint64_t)&v227, 0, (uint64_t)&v223);
      v231 = v20;
      v21 = sub_215FC35AC(a1, (_BYTE *)a3, (_BYTE *)a4, 0, 3u, (uint64_t)&v227, 0, (uint64_t)&v223);
      v233 = v21;
      if ((v19 | v18 | v20 | v21) > 0x1F)
        return 4293967296;
    }
    if ((*(_BYTE *)a3 & 1) != 0)
    {
      v22 = *(_DWORD *)(a3 + 24);
      LODWORD(v239) = *(_DWORD *)(a3 + 16);
      DWORD2(v239) = v22;
      v23 = *(_DWORD *)(a3 + 40);
      LODWORD(v240) = *(_DWORD *)(a3 + 32);
      DWORD2(v240) = v23;
    }
    if ((*(_BYTE *)a4 & 1) != 0)
    {
      v24 = *(_DWORD *)(a4 + 24);
      LODWORD(v237) = *(_DWORD *)(a4 + 16);
      DWORD2(v237) = v24;
      v25 = *(_DWORD *)(a4 + 40);
      LODWORD(v238) = *(_DWORD *)(a4 + 32);
      DWORD2(v238) = v25;
    }
    v26 = 0;
    v27 = 0;
    v28 = 0;
    for (i = (char *)&v227; ; i += 2)
    {
      v30 = v27 >> 1;
      v31 = *(&v223 + v27);
      v32 = 4 * (v27 & 1);
      if (v31 == 2)
      {
        v213 = (__int16 *)&v239 + 2 * v32;
        v219 = i;
        v44 = &v237 + (v30 & 0x3F);
        v45 = sub_215FC3714((unsigned int *)a1, 40, *v213, *(__int16 *)v44);
        v46 = &v235[v26];
        *(_WORD *)&v235[v26] = v45;
        v47 = sub_215FC3714((unsigned int *)a1, 47, v213[1], *((__int16 *)v44 + 1));
        v46[1] = v47;
        v48 = (__int16 *)&v239 + 2 * ((4 * (v27 & 1)) | 2);
        v49 = sub_215FC3714((unsigned int *)a1, 40, *v48, v45);
        v50 = &v235[32 * v27];
        v46[4] = v49;
        v51 = v47;
        v36 = v50 + 8;
        v43 = v221;
        v52 = sub_215FC3714((unsigned int *)a1, 47, v48[1], v51);
        v41 = 2;
        v38 = v50 + 10;
        v46[5] = v52;
        v53 = *(_DWORD *)&v235[v26 + 8];
        *((_DWORD *)&v237 + ((4 * v30) | 2u)) = v53;
        *(_DWORD *)v44 = v53;
        i = v219;
        *(_DWORD *)v213 = *(_DWORD *)&v235[v26];
        *(_DWORD *)v48 = v53;
      }
      else
      {
        if (v31 != 1)
        {
          v33 = (4 * (v27 & 1)) | 2;
          if (*(&v223 + v27))
          {
            v207 = (__int16 *)&v239 + 2 * v32;
            v64 = &v237 + (v30 & 0x3F);
            v65 = sub_215FC3714((unsigned int *)a1, 40, *v207, *(__int16 *)v64);
            v66 = &v235[v26];
            *(_WORD *)&v235[v26] = v65;
            v67 = sub_215FC3714((unsigned int *)a1, 47, v207[1], *((__int16 *)v64 + 1));
            v66[1] = v67;
            v68 = *((__int16 *)&v239 + 2 * v33);
            v69 = (char *)&v239 + 4 * v33;
            v201 = v69;
            v70 = v65;
            v71 = sub_215FC3714((unsigned int *)a1, 40, v68, v65);
            v66[4] = v71;
            v195 = sub_215FC3714((unsigned int *)a1, 47, *((__int16 *)v69 + 1), v67);
            v66[5] = v195;
            v72 = (__int16 *)&v237 + 2 * ((4 * v30) | 2u);
            LOWORD(v70) = sub_215FC3714((unsigned int *)a1, 40, v70, *v72);
            v66[8] = v70;
            v73 = sub_215FC3714((unsigned int *)a1, 47, v67, v72[1]);
            v66[9] = v73;
            v66[12] = sub_215FC3714((unsigned int *)a1, 40, v71, (__int16)v70);
            v36 = &v236[v26 + 4];
            v66[13] = sub_215FC3714((unsigned int *)a1, 47, v195, v73);
            v38 = &v236[v26 + 6];
            *(_DWORD *)v207 = *(_DWORD *)&v235[v26 + 16];
            v74 = *(_DWORD *)&v236[v26 + 4];
            *v201 = v74;
            *((_DWORD *)&v237 + 4 * (v30 & 0x3F)) = *(_DWORD *)&v235[v26 + 8];
            *(_DWORD *)v72 = v74;
            v40 = *i;
            v43 = v221;
            v75 = v221 + 16 * v28;
            *(_BYTE *)(v75 + 8) = *i;
            *(_WORD *)v75 = *(_WORD *)&v235[v26];
            *(_WORD *)(v75 + 2) = *(_WORD *)&v235[v26 + 2];
            v76 = v221 + 16 * (v28 + 1);
            *(_BYTE *)(v76 + 8) = v40;
            *(_WORD *)v76 = *(_WORD *)&v235[v26 + 8];
            *(_WORD *)(v76 + 2) = *(_WORD *)&v235[v26 + 10];
            v77 = v221 + 16 * (v28 + 2);
            *(_BYTE *)(v77 + 8) = v40;
            *(_WORD *)v77 = *(_WORD *)&v235[v26 + 16];
            *(_WORD *)(v77 + 2) = *(_WORD *)&v235[v26 + 18];
            v42 = v28 + 3;
            v41 = 4;
          }
          else
          {
            v34 = (__int16 *)&v239 + 2 * v32;
            v35 = &v237 + (v30 & 0x3F);
            *(_WORD *)&v235[v26] = sub_215FC3714((unsigned int *)a1, 40, *v34, *(__int16 *)v35);
            v36 = &v235[32 * v27];
            v37 = sub_215FC3714((unsigned int *)a1, 47, v34[1], *((__int16 *)v35 + 1));
            v38 = v36 + 2;
            *(_WORD *)&v235[v26 + 2] = v37;
            v39 = *(_DWORD *)&v235[v26];
            *((_DWORD *)&v237 + ((4 * v30) | 2u)) = v39;
            *(_DWORD *)v35 = v39;
            *((_DWORD *)&v239 + v33) = v39;
            *(_DWORD *)v34 = v39;
            v40 = *i;
            v41 = 1;
            v42 = v28;
            v43 = v221;
          }
          goto LABEL_27;
        }
        v214 = (__int16 *)&v239 + 2 * v32;
        v220 = v26;
        v54 = &v237 + (v30 & 0x3F);
        v55 = sub_215FC3714((unsigned int *)a1, 40, *v214, *(__int16 *)v54);
        v46 = &v235[v220];
        *(_WORD *)&v235[v220] = v55;
        v56 = sub_215FC3714((unsigned int *)a1, 47, v214[1], *((__int16 *)v54 + 1));
        v46[1] = v56;
        v57 = v55;
        v58 = (__int16 *)&v237 + 2 * ((4 * v30) | 2u);
        v59 = &v235[32 * v27];
        v46[4] = sub_215FC3714((unsigned int *)a1, 40, v57, *v58);
        v60 = v56;
        v36 = v59 + 8;
        v43 = v221;
        v61 = sub_215FC3714((unsigned int *)a1, 47, v60, v58[1]);
        v41 = 2;
        v38 = v59 + 10;
        v46[5] = v61;
        *(_DWORD *)v54 = *(_DWORD *)&v235[v220];
        v62 = *(_DWORD *)&v235[v220 + 8];
        *(_DWORD *)v58 = v62;
        *((_DWORD *)&v239 + ((4 * (v27 & 1)) | 2)) = v62;
        v26 = v220;
        *(_DWORD *)v214 = v62;
      }
      v40 = *i;
      v63 = v43 + 16 * v28;
      *(_BYTE *)(v63 + 8) = *i;
      *(_WORD *)v63 = *v46;
      *(_WORD *)(v63 + 2) = v46[1];
      v42 = v28 + 1;
LABEL_27:
      v78 = v43 + 16 * (int)v42;
      *(_BYTE *)(v78 + 8) = v40;
      *(_WORD *)v78 = *(_WORD *)v36;
      *(_WORD *)(v78 + 2) = *v38;
      v28 += v41;
      ++v27;
      v26 += 32;
      if (v26 == 128)
      {
        v79 = 0;
        v80 = DWORD2(v239);
        *(_DWORD *)(a3 + 16) = v239;
        *(_DWORD *)(a3 + 24) = v80;
        v81 = DWORD2(v240);
        *(_DWORD *)(a3 + 32) = v240;
        *(_DWORD *)(a3 + 40) = v81;
        v82 = DWORD2(v237);
        *(_DWORD *)(a4 + 16) = v237;
        *(_DWORD *)(a4 + 24) = v82;
        v83 = DWORD2(v238);
        *(_DWORD *)(a4 + 32) = v238;
        *(_DWORD *)(a4 + 40) = v83;
        *(_BYTE *)(a3 + 12) = v231;
        v84 = v233;
        *(_BYTE *)(a3 + 14) = v233;
        *(_BYTE *)(a4 + 12) = v229;
        *(_BYTE *)(a4 + 14) = v84;
        return v79;
      }
    }
  }
  v85 = sub_215FC2FBC(a1);
  v11[1] = v85;
  v223 = v85;
  v86 = sub_215FC2FBC(a1);
  v11[2] = v86;
  v224 = v86;
  v87 = sub_215FC2FBC(a1);
  v11[3] = v87;
  v225 = v87;
  v88 = sub_215FC2FBC(a1);
  v89 = v88;
  v11[4] = v88;
  v226 = v88;
  v93 = v85 < 4 && v86 < 4 && v87 < 4 && v88 < 4;
  if (!a6)
  {
    v94 = !v85 || v86 == 0;
    v95 = v94 || v87 == 0;
    if (v95 || v88 == 0)
      v93 = 0;
  }
  *a5 = v93;
  v97 = byte_2160EE574[v85];
  v227 = byte_2160EE574[v85];
  v196 = byte_2160EE581[v85];
  v228 = byte_2160EE581[v85];
  v98 = byte_2160EE574[v86];
  v229 = byte_2160EE574[v86];
  v202 = byte_2160EE581[v86];
  v230 = byte_2160EE581[v86];
  v99 = byte_2160EE574[v87];
  v231 = byte_2160EE574[v87];
  v208 = byte_2160EE581[v87];
  v232 = byte_2160EE581[v87];
  v100 = byte_2160EE574[v88];
  v233 = byte_2160EE574[v88];
  v215 = byte_2160EE581[v88];
  v234 = byte_2160EE581[v88];
  v79 = 0;
  if (v9)
  {
    if (v85 && !v97)
    {
      v101 = sub_215FC35AC(a1, (_BYTE *)a3, (_BYTE *)a4, 0, 0, (uint64_t)&v227, 1, (uint64_t)&v223);
      v227 = v101;
      if (v101 >= 0x20)
        v79 = 4293967296;
      else
        v79 = 0;
    }
    if (!v86 || v98)
    {
      v102 = a4;
      if (!v87)
        goto LABEL_74;
    }
    else
    {
      v102 = a4;
      v103 = sub_215FC35AC(a1, (_BYTE *)a3, (_BYTE *)a4, 0, 1u, (uint64_t)&v227, 1, (uint64_t)&v223);
      v229 = v103;
      if (v103 >= 0x20)
        v104 = -1000000;
      else
        v104 = 0;
      v79 = (v104 + v79);
      if (!v87)
      {
LABEL_74:
        if (v89 && !v100)
        {
          v107 = sub_215FC35AC(a1, (_BYTE *)a3, (_BYTE *)v102, 0, 3u, (uint64_t)&v227, 1, (uint64_t)&v223);
          v233 = v107;
          if (v107 >= 0x20)
            v108 = -1000000;
          else
            v108 = 0;
          v79 = (v108 + v79);
        }
        goto LABEL_80;
      }
    }
    if (!v99)
    {
      v105 = sub_215FC35AC(a1, (_BYTE *)a3, (_BYTE *)v102, 0, 2u, (uint64_t)&v227, 1, (uint64_t)&v223);
      v231 = v105;
      if (v105 >= 0x20)
        v106 = -1000000;
      else
        v106 = 0;
      v79 = (v106 + v79);
    }
    goto LABEL_74;
  }
  v102 = a4;
LABEL_80:
  if (v10)
  {
    if (v85 && !v196)
    {
      v109 = sub_215FC35AC(a1, (_BYTE *)a3, (_BYTE *)v102, 1, 0, (uint64_t)&v227, 1, (uint64_t)&v223);
      v228 = v109;
      if (v109 >= 0x20)
        v110 = -1000000;
      else
        v110 = 0;
      v79 = (v110 + v79);
    }
    if (v86 && !v202)
    {
      v111 = sub_215FC35AC(a1, (_BYTE *)a3, (_BYTE *)v102, 1, 1u, (uint64_t)&v227, 1, (uint64_t)&v223);
      v230 = v111;
      if (v111 >= 0x20)
        v112 = -1000000;
      else
        v112 = 0;
      v79 = (v112 + v79);
    }
    if (v87 && !v208)
    {
      v113 = sub_215FC35AC(a1, (_BYTE *)a3, (_BYTE *)v102, 1, 2u, (uint64_t)&v227, 1, (uint64_t)&v223);
      v232 = v113;
      if (v113 >= 0x20)
        v114 = -1000000;
      else
        v114 = 0;
      v79 = (v114 + v79);
    }
    if (v89 && !v215)
    {
      v115 = sub_215FC35AC(a1, (_BYTE *)a3, (_BYTE *)v102, 1, 3u, (uint64_t)&v227, 1, (uint64_t)&v223);
      v234 = v115;
      if (v115 >= 0x20)
        v116 = -1000000;
      else
        v116 = 0;
      v79 = (v116 + v79);
    }
  }
  v117 = v221;
  if ((v79 & 0x80000000) == 0)
  {
    if ((*(_BYTE *)a3 & 1) != 0)
    {
      v118 = *(_OWORD *)(a3 + 32);
      v239 = *(_OWORD *)(a3 + 16);
      v240 = v118;
    }
    if ((*(_BYTE *)v102 & 1) != 0)
    {
      v119 = *(_OWORD *)(v102 + 32);
      v237 = *(_OWORD *)(v102 + 16);
      v238 = v119;
    }
    v120 = 0;
    v121 = 0;
    v122 = v235;
    v123 = (char *)&v227;
    do
    {
      v124 = v120 & 1;
      v125 = v120 >> 1;
      v126 = *(&v223 + v120);
      if (*(&v223 + v120))
      {
        if (*v123 == 255)
        {
          *((_DWORD *)&v237 + ((4 * v125) | 2u)) = 0;
          *((_DWORD *)&v237 + 4 * (v125 & 0x3F)) = 0;
          *((_DWORD *)&v239 + ((4 * (v120 & 1)) | 2)) = 0;
          *((_DWORD *)&v239 + (4 * v124)) = 0;
          if (v126 <= 3)
            v131 = v121;
          else
            v131 = v121 + 1;
          LODWORD(v130) = v131 + 2 * (v126 > 9) + 1;
        }
        else
        {
          v216 = *v123;
          if (v126 > 3)
          {
            v132 = 4 * v124;
            v133 = v117 + 16 * v121;
            if (v126 > 9)
            {
              v198 = (__int16 *)&v239 + 2 * v132;
              v144 = &v237 + (v125 & 0x3F);
              v204 = v144;
              v210 = sub_215FC3714((unsigned int *)a1, 40, *v198, *(__int16 *)v144);
              *v122 = v210;
              v145 = sub_215FC3714((unsigned int *)a1, 47, v198[1], *((__int16 *)v144 + 1));
              v122[1] = v145;
              v146 = (__int16 *)&v239 + 2 * ((4 * (v120 & 1)) | 2);
              v189 = sub_215FC3714((unsigned int *)a1, 40, *v146, v210);
              v122[4] = v189;
              v191 = sub_215FC3714((unsigned int *)a1, 47, v146[1], v145);
              v122[5] = v191;
              v147 = (__int16 *)&v237 + 2 * ((4 * v125) | 2u);
              LOWORD(v144) = sub_215FC3714((unsigned int *)a1, 40, v210, *v147);
              v122[8] = (_WORD)v144;
              v148 = sub_215FC3714((unsigned int *)a1, 47, v145, v147[1]);
              v122[9] = v148;
              v122[12] = sub_215FC3714((unsigned int *)a1, 40, v189, (__int16)v144);
              v122[13] = sub_215FC3714((unsigned int *)a1, 47, v191, v148);
              *(_DWORD *)v198 = *((_DWORD *)v122 + 4);
              LODWORD(v130) = *((_DWORD *)v122 + 6);
              *(_DWORD *)v146 = v130;
              *(_DWORD *)v204 = *((_DWORD *)v122 + 2);
              *(_DWORD *)v147 = v130;
              *(_WORD *)v133 = v210;
              *(_WORD *)(v133 + 2) = v122[1];
              *(_BYTE *)(v133 + 8) = v216;
              *(_WORD *)(v133 + 16) = v122[4];
              *(_WORD *)(v133 + 18) = v122[5];
              *(_BYTE *)(v133 + 24) = v216;
              *(_WORD *)(v133 + 32) = v122[8];
              *(_WORD *)(v133 + 34) = v122[9];
              *(_BYTE *)(v133 + 40) = v216;
              *(_WORD *)(v133 + 48) = v122[12];
              *(_WORD *)(v133 + 50) = v122[13];
              *(_BYTE *)(v133 + 56) = v216;
              LODWORD(v130) = v121 + 4;
            }
            else
            {
              v203 = 4 * v124;
              v134 = (__int16 *)&v239 + 2 * v132;
              v197 = 4 * v125;
              v135 = &v237 + (v125 & 0x3F);
              v136 = sub_215FC3714((unsigned int *)a1, 40, *v134, *(__int16 *)v135);
              *v122 = v136;
              v209 = v134;
              v137 = v134[1];
              v138 = v135;
              v139 = sub_215FC3714((unsigned int *)a1, 47, v137, *((__int16 *)v135 + 1));
              v122[1] = v139;
              if ((v126 & 1) != 0)
              {
                v149 = (__int16 *)&v239 + 2 * (v203 | 2u);
                v122[4] = sub_215FC3714((unsigned int *)a1, 40, *v149, v136);
                v122[5] = sub_215FC3714((unsigned int *)a1, 47, v149[1], v139);
                v150 = *((_DWORD *)v122 + 2);
                *((_DWORD *)&v237 + (v197 | 2u)) = v150;
                *(_DWORD *)v138 = v150;
                v142 = *(_DWORD *)v122;
                *v209 = *(_DWORD *)v122;
                *(_DWORD *)v149 = v150;
              }
              else
              {
                v140 = v136;
                v141 = (__int16 *)&v237 + 2 * (v197 | 2u);
                v122[4] = sub_215FC3714((unsigned int *)a1, 40, v140, *v141);
                v122[5] = sub_215FC3714((unsigned int *)a1, 47, v139, v141[1]);
                v142 = *(_DWORD *)v122;
                *(_DWORD *)v138 = *(_DWORD *)v122;
                v143 = *((_DWORD *)v122 + 2);
                *(_DWORD *)v141 = v143;
                *((_DWORD *)&v239 + (v203 | 2u)) = v143;
                *v209 = v143;
              }
              *(_WORD *)v133 = v142;
              *(_WORD *)(v133 + 2) = v122[1];
              *(_BYTE *)(v133 + 8) = v216;
              *(_WORD *)(v133 + 16) = v122[4];
              *(_WORD *)(v133 + 18) = v122[5];
              *(_BYTE *)(v133 + 24) = v216;
              LODWORD(v130) = v121 + 2;
            }
            v117 = v221;
          }
          else
          {
            v127 = (__int16 *)&v239 + 2 * (4 * v124);
            v128 = &v237 + (v125 & 0x3F);
            *v122 = sub_215FC3714((unsigned int *)a1, 40, *v127, *(__int16 *)v128);
            v122[1] = sub_215FC3714((unsigned int *)a1, 47, v127[1], *((__int16 *)v128 + 1));
            v129 = *(_DWORD *)v122;
            *((_DWORD *)&v237 + ((4 * v125) | 2u)) = *(_DWORD *)v122;
            *(_DWORD *)v128 = v129;
            *((_DWORD *)&v239 + ((4 * (v120 & 1)) | 2)) = v129;
            *(_DWORD *)v127 = v129;
            v117 = v221;
            v130 = v221 + 16 * v121;
            *(_WORD *)v130 = v129;
            *(_WORD *)(v130 + 2) = v122[1];
            *(_BYTE *)(v130 + 8) = v216;
            LODWORD(v130) = v121 + 1;
          }
        }
      }
      else
      {
        *((_DWORD *)&v237 + ((4 * v125) | 2u)) = 0;
        *((_DWORD *)&v237 + 4 * (v125 & 0x3F)) = 0;
        *((_DWORD *)&v239 + ((4 * (v120 & 1)) | 2)) = 0;
        *((_DWORD *)&v239 + (4 * v124)) = 0;
        v130 = v121 + 1;
        *(_DWORD *)(v117 + 16 * v121) = 0;
        if (!a6)
        {
          *(_DWORD *)(v117 + 16 * v130) = 0;
          v130 = v117 + 16 * v121;
          *(_DWORD *)(v130 + 32) = 0;
          *(_DWORD *)(v130 + 48) = 0;
          LODWORD(v130) = v121 + 4;
        }
      }
      ++v120;
      v122 += 16;
      v123 += 2;
      v121 = v130;
    }
    while (v120 != 4);
    v151 = 0;
    v152 = 0;
    v153 = v236;
    v154 = (char *)&v228;
    do
    {
      v155 = v151 & 1;
      v156 = v151 >> 1;
      v157 = *(&v223 + v151);
      if (*(&v223 + v151))
      {
        v158 = *v154;
        if (v158 == 255)
        {
          *((_DWORD *)&v237 + ((4 * (v156 & 0x3F)) | 3u)) = 0;
          *((_DWORD *)&v237 + ((4 * (v156 & 0x3F)) | 1u)) = 0;
          *((_DWORD *)&v239 + ((4 * v155) | 3u)) = 0;
          *((_DWORD *)&v239 + ((4 * (v151 & 1)) | 1)) = 0;
          if (v157 <= 3)
            v163 = v152;
          else
            v163 = v152 + 1;
          LODWORD(v162) = v163 + 2 * (v157 > 9) + 1;
        }
        else if (v157 > 3)
        {
          v217 = *v154;
          v164 = (4 * (v156 & 0x3F)) | 1;
          v165 = v117 + 16 * v152;
          if (v157 > 9)
          {
            v176 = (__int16 *)&v239 + 2 * ((4 * v155) | 1u);
            v200 = v176;
            v206 = (__int16 *)&v237 + 2 * v164;
            v212 = sub_215FC3714((unsigned int *)a1, 40, *v176, *v206);
            *(v153 - 8) = v212;
            v177 = sub_215FC3714((unsigned int *)a1, 47, v176[1], v206[1]);
            *(v153 - 7) = v177;
            v178 = (__int16 *)&v239 + 2 * ((4 * (v151 & 1)) | 3);
            v192 = sub_215FC3714((unsigned int *)a1, 40, *v178, v212);
            *(v153 - 4) = v192;
            v190 = sub_215FC3714((unsigned int *)a1, 47, v178[1], v177);
            *(v153 - 3) = v190;
            v179 = (__int16 *)&v237 + 2 * ((4 * (v156 & 0x3F)) | 3u);
            LOWORD(v176) = sub_215FC3714((unsigned int *)a1, 40, v212, *v179);
            *v153 = (_WORD)v176;
            v180 = sub_215FC3714((unsigned int *)a1, 47, v177, v179[1]);
            v153[1] = v180;
            v153[4] = sub_215FC3714((unsigned int *)a1, 40, v192, (__int16)v176);
            v153[5] = sub_215FC3714((unsigned int *)a1, 47, v190, v180);
            *v200 = *(_DWORD *)v153;
            LODWORD(v162) = *((_DWORD *)v153 + 2);
            *(_DWORD *)v178 = v162;
            *(_DWORD *)v206 = *((_DWORD *)v153 - 2);
            *(_DWORD *)v179 = v162;
            *(_WORD *)(v165 + 4) = v212;
            *(_WORD *)(v165 + 6) = *(v153 - 7);
            *(_BYTE *)(v165 + 9) = v217;
            *(_WORD *)(v165 + 20) = *(v153 - 4);
            *(_WORD *)(v165 + 22) = *(v153 - 3);
            *(_BYTE *)(v165 + 25) = v217;
            *(_WORD *)(v165 + 36) = *v153;
            *(_WORD *)(v165 + 38) = v153[1];
            *(_BYTE *)(v165 + 41) = v217;
            *(_WORD *)(v165 + 52) = v153[4];
            *(_WORD *)(v165 + 54) = v153[5];
            *(_BYTE *)(v165 + 57) = v217;
            LODWORD(v162) = v152 + 4;
          }
          else
          {
            v205 = 4 * v155;
            v166 = (__int16 *)&v239 + 2 * ((4 * (v151 & 1)) | 1);
            v199 = 4 * (v156 & 0x3F);
            v167 = (__int16 *)&v237 + 2 * v164;
            v168 = sub_215FC3714((unsigned int *)a1, 40, *v166, *v167);
            *(v153 - 8) = v168;
            v211 = v166;
            v169 = v166[1];
            v170 = v167;
            v171 = sub_215FC3714((unsigned int *)a1, 47, v169, v167[1]);
            *(v153 - 7) = v171;
            if ((v157 & 1) != 0)
            {
              v181 = (__int16 *)&v239 + 2 * (v205 | 3u);
              *(v153 - 4) = sub_215FC3714((unsigned int *)a1, 40, *v181, v168);
              *(v153 - 3) = sub_215FC3714((unsigned int *)a1, 47, v181[1], v171);
              v182 = *((_DWORD *)v153 - 2);
              *((_DWORD *)&v237 + (v199 | 3u)) = v182;
              *v170 = v182;
              v174 = *((_DWORD *)v153 - 4);
              *v211 = v174;
              *(_DWORD *)v181 = v182;
            }
            else
            {
              v172 = v168;
              v173 = (__int16 *)&v237 + 2 * (v199 | 3u);
              *(v153 - 4) = sub_215FC3714((unsigned int *)a1, 40, v172, *v173);
              *(v153 - 3) = sub_215FC3714((unsigned int *)a1, 47, v171, v173[1]);
              v174 = *((_DWORD *)v153 - 4);
              *v170 = v174;
              v175 = *((_DWORD *)v153 - 2);
              *(_DWORD *)v173 = v175;
              *((_DWORD *)&v239 + (v205 | 3u)) = v175;
              *v211 = v175;
            }
            *(_WORD *)(v165 + 4) = v174;
            *(_WORD *)(v165 + 6) = *(v153 - 7);
            *(_BYTE *)(v165 + 9) = v217;
            *(_WORD *)(v165 + 20) = *(v153 - 4);
            *(_WORD *)(v165 + 22) = *(v153 - 3);
            *(_BYTE *)(v165 + 25) = v217;
            LODWORD(v162) = v152 + 2;
          }
          v117 = v221;
        }
        else
        {
          v159 = (__int16 *)&v239 + 2 * ((4 * v155) | 1u);
          v160 = (__int16 *)&v237 + 2 * ((4 * (v156 & 0x3F)) | 1u);
          *(v153 - 8) = sub_215FC3714((unsigned int *)a1, 40, *v159, *v160);
          *(v153 - 7) = sub_215FC3714((unsigned int *)a1, 47, v159[1], v160[1]);
          v161 = *((_DWORD *)v153 - 4);
          *((_DWORD *)&v237 + ((4 * (v156 & 0x3F)) | 3u)) = v161;
          *(_DWORD *)v160 = v161;
          *((_DWORD *)&v239 + ((4 * (v151 & 1)) | 3)) = v161;
          *(_DWORD *)v159 = v161;
          v117 = v221;
          v162 = v221 + 16 * v152;
          *(_WORD *)(v162 + 4) = v161;
          *(_WORD *)(v162 + 6) = *(v153 - 7);
          *(_BYTE *)(v162 + 9) = v158;
          LODWORD(v162) = v152 + 1;
        }
      }
      else
      {
        *((_DWORD *)&v237 + ((4 * (v156 & 0x3F)) | 3u)) = 0;
        *((_DWORD *)&v237 + ((4 * (v156 & 0x3F)) | 1u)) = 0;
        *((_DWORD *)&v239 + ((4 * v155) | 3u)) = 0;
        *((_DWORD *)&v239 + ((4 * (v151 & 1)) | 1)) = 0;
        *(_DWORD *)(v117 + 16 * v152 + 4) = 0;
        v162 = v152 + 1;
        if (!a6)
        {
          *(_DWORD *)(v117 + 16 * v162 + 4) = 0;
          v162 = v117 + 16 * v152;
          *(_DWORD *)(v162 + 36) = 0;
          *(_DWORD *)(v162 + 52) = 0;
          LODWORD(v162) = v152 + 4;
        }
      }
      ++v151;
      v153 += 16;
      v154 += 2;
      v152 = v162;
    }
    while (v151 != 4);
    v79 = 0;
    v183 = v240;
    *(_OWORD *)(a3 + 16) = v239;
    *(_OWORD *)(a3 + 32) = v183;
    v184 = v238;
    *(_OWORD *)(a4 + 16) = v237;
    *(_OWORD *)(a4 + 32) = v184;
    *(_BYTE *)(a3 + 12) = v231;
    v185 = v233;
    *(_BYTE *)(a3 + 14) = v233;
    *(_BYTE *)(a4 + 12) = v229;
    *(_BYTE *)(a4 + 14) = v185;
    *(_BYTE *)(a3 + 13) = v232;
    v186 = v234;
    *(_BYTE *)(a3 + 15) = v234;
    *(_BYTE *)(a4 + 13) = v230;
    *(_BYTE *)(a4 + 15) = v186;
    *(_BYTE *)(a3 + 2) = v225;
    v187 = v226;
    *(_BYTE *)(a3 + 3) = v226;
    *(_BYTE *)(a4 + 2) = v224;
    *(_BYTE *)(a4 + 3) = v187;
  }
  return v79;
}

uint64_t sub_215FCCB94(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  unsigned int v11;
  int v12;
  unsigned int v13;
  _BYTE *v14;
  _BYTE *v15;
  unsigned int v16;
  unsigned __int8 v17;
  _BOOL4 v18;
  char v19;
  char v20;
  _BOOL4 v21;
  uint64_t v22;
  unsigned int v23;
  char v24;
  _BOOL4 v25;
  char v26;
  char v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  BOOL v31;
  _BOOL4 v32;
  _BYTE *v33;
  int v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  _BOOL4 v39;
  _BOOL4 v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  int v46;
  _BOOL4 v47;
  uint64_t v48;
  unsigned int v49;
  _BOOL4 v50;
  _BOOL4 v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  int v56;
  uint64_t v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  int v62;
  unsigned int *v63;
  unsigned int *v64;
  uint64_t v65;
  int v66;
  int v67;
  uint64_t v68;
  int v69;
  unsigned int *v70;
  unsigned int *v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int v74;
  uint64_t v75;
  int v76;
  int v77;
  unsigned int *v78;
  unsigned int *v79;
  uint64_t v80;
  unsigned int v81;
  uint64_t v82;
  int v83;
  int v84;
  unsigned int *v85;
  unsigned int *v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  _BOOL4 v92;
  int v93;
  char v94;
  unsigned __int8 v95;
  uint64_t v96;
  unsigned int v97;
  uint64_t v98;
  _BYTE *v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  char v104;
  char v106;
  char v107;
  uint64_t v108;
  _BOOL4 v110;
  _BOOL4 v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  int v115;
  int v116;
  uint64_t v117;
  unsigned int v118;
  unsigned int v119;
  _BYTE *v120;
  _BYTE *v121;
  _BOOL4 v122;
  char v125;

  v10 = *(char *)(a2 + 4);
  v11 = *(unsigned __int8 *)(a1 + v10 + 668);
  v12 = *(unsigned __int8 *)(a1 + v10 + 678);
  v13 = *(unsigned __int16 *)(a1 + 2 * v10 + 688);
  *(_BYTE *)(a5 + 31) = 0;
  *(_QWORD *)(a1 + 3216) = *(_QWORD *)(a2 + 32);
  v14 = *(_BYTE **)(a5 + 40);
  switch(*(_BYTE *)(a2 + 4))
  {
    case 0:
    case 5:
      if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 222)))
      {
        if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 225)))
        {
          if (sub_215FC2DF0(a1))
          {
            LOBYTE(v15) = 30;
          }
          else
          {
            v49 = v11;
            v50 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 226));
            v51 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 227));
            v52 = 19;
            if (!v51)
              v52 = 20;
            v53 = a1 + v52;
            if (v50)
              v54 = 2;
            else
              v54 = 0;
            v55 = v54 | v51;
            if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(v53 + 208)))
              v56 = 2;
            else
              v56 = 0;
            v57 = v56 | (4 * v55) | sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 228));
            if (((0xF0F0uLL >> v57) & 1) != 0)
              v15 = (char *)&unk_2160EE4B8
                  + (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 228)) | (2 * v57));
            else
              v15 = (char *)&unk_2160EE4A8 + v57;
            LOBYTE(v15) = *v15 + 5;
            v11 = v49;
          }
        }
        else
        {
          LOBYTE(v15) = 5;
        }
      }
      else
      {
        v21 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 223));
        v22 = 16;
        if (v21)
          v22 = 17;
        v23 = v11;
        if (v21)
          v24 = 2;
        else
          v24 = 0;
        v25 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + v22 + 208));
        v26 = v24 | v25;
        v11 = v23;
        if (v25)
          v27 = 2;
        else
          v27 = 0;
        LOBYTE(v15) = v26 ^ v27;
      }
      v18 = 0;
      v19 = 2 * (v15 < 5u);
      if (v15 <= 4u)
        v20 = (char)v15;
      else
        v20 = (_BYTE)v15 - 5;
      break;
    case 2:
    case 7:
      if ((*(_BYTE *)(a1 + 112) & 1) != 0)
        v17 = ((char)(16 * *(_BYTE *)(a1 + 112)) >> 7) + 4;
      else
        v17 = 3;
      v16 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 104) + 48 * a4);
      if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1+ (v16 & ~(v16 >> 3) & 1)+ (unint64_t)v17+ 208)))
      {
        if (sub_215FC2DF0(a1))
        {
          v18 = 0;
          v19 = 0;
          LOBYTE(v15) = 25;
          v20 = 25;
        }
        else
        {
          v119 = v11;
          v120 = v14;
          v38 = a1 + 208;
          v39 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 214));
          v40 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 215));
          if (v39)
            v41 = 2;
          else
            v41 = 0;
          v42 = v41 | v40;
          v43 = 8;
          if (v40)
          {
            v44 = 9;
          }
          else
          {
            v43 = 9;
            v44 = 10;
          }
          if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(v38 + v43)))
            v45 = 2;
          else
            v45 = 0;
          v46 = v45 | (4 * v42);
          v47 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(v38 + v44));
          v48 = v46 | v47;
          if (((0xF0F0uLL >> (v46 | v47)) & 1) != 0)
            v15 = (char *)&unk_2160EE4B8
                + (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 218)) | (2 * v48));
          else
            v15 = (char *)&unk_2160EE4A8 + v48;
          v14 = v120;
          v18 = 0;
          v19 = 0;
          LOBYTE(v15) = *v15;
          v20 = (char)v15;
          v11 = v119;
        }
      }
      else
      {
        LOBYTE(v15) = 0;
        v18 = 0;
        v19 = 0;
        v20 = 0;
      }
      break;
    default:
      v28 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 104) + 48 * a4);
      v29 = ((char)(8 * *(_BYTE *)(a1 + 112)) >> 7) + 28;
      v30 = v28 & 3;
      v31 = ((v28 >> 4) & 1) == 0;
      if (v30 != 1)
        v31 = 0;
      if ((*(_BYTE *)(a1 + 112) & 3) != 1)
        LOBYTE(v29) = 27;
      v32 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + (v29 + v31) + 208));
      LOBYTE(v15) = 0;
      if (v32)
      {
        if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 238)))
        {
          v118 = v11;
          v33 = v14;
          if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 239)))
            v34 = 2;
          else
            v34 = 0;
          v35 = v34 | sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 240));
          if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 240)))
            v36 = 2;
          else
            v36 = 0;
          v37 = v36 | (4 * v35) | sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 240));
          if ((_DWORD)v37 == 13)
          {
            v14 = v33;
            if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 240)))
            {
              if (sub_215FC2DF0(a1))
              {
                LOBYTE(v15) = 48;
              }
              else
              {
                v110 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 241));
                v111 = sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 242));
                v112 = 34;
                if (!v111)
                  v112 = 35;
                v113 = a1 + v112;
                if (v110)
                  v114 = 2;
                else
                  v114 = 0;
                v115 = v114 | v111;
                if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(v113 + 208)))
                  v116 = 2;
                else
                  v116 = 0;
                v117 = v116 | (4 * v115) | sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 243));
                if (((0xF0F0uLL >> v117) & 1) != 0)
                  v15 = (char *)&unk_2160EE4B8
                      + (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 243)) | (2 * v117));
                else
                  v15 = (char *)&unk_2160EE4A8 + v117;
                v11 = v118;
                LOBYTE(v15) = *v15 + 23;
              }
            }
            else
            {
              LOBYTE(v15) = 23;
            }
          }
          else
          {
            v14 = v33;
            if ((unint64_t)(v37 - 8) > 4)
              LOBYTE(v15) = byte_2160EE4D8[v37];
            else
              LODWORD(v15) = (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 240)) & 0xFFFFFFF1 | (2 * (v37 & 7)))
                           + 12;
          }
        }
        else if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 240)))
        {
          LOBYTE(v15) = 2;
        }
        else
        {
          LOBYTE(v15) = 1;
        }
      }
      v18 = v15 == 0;
      v20 = (_BYTE)v15 - 23;
      if (v15 <= 0x16u)
        v19 = 3;
      else
        v19 = 0;
      if (v15 <= 0x16u)
        v20 = (char)v15;
      break;
  }
  *v14 = (_BYTE)v15;
  v14[1] = v19;
  v14[2] = v20;
  v58 = v15;
  if (v15 == v12)
  {
    v59 = *(_QWORD *)(a1 + 3216);
    v60 = *(_QWORD *)(a1 + 16) << 9;
    *(_QWORD *)(a1 + 16) = v60;
    v61 = *(_DWORD *)(a1 + 64);
    v62 = 9;
    if (v61 <= 8)
    {
      v62 = 9 - v61;
      v63 = *(unsigned int **)(a1 + 32);
      v64 = v63 + 1;
      *(_QWORD *)(a1 + 32) = v63 + 1;
      v65 = bswap32(*v63);
      if ((unint64_t)v64 > *(_QWORD *)(a1 + 48))
        v64 = *(unsigned int **)(a1 + 48);
      *(_QWORD *)(a1 + 32) = v64;
      v60 |= v65 << v62;
      v61 = 32;
    }
    v66 = v61 - v62;
    *(_DWORD *)(a1 + 64) = v66;
    v67 = v66 & 7;
    v68 = v60 << (v66 & 7);
    *(_QWORD *)(a1 + 16) = v68;
    v69 = v67 - v66;
    if (v67 > v66)
    {
      v70 = *(unsigned int **)(a1 + 32);
      v71 = v70 + 1;
      *(_QWORD *)(a1 + 32) = v70 + 1;
      v72 = bswap32(*v70);
      if ((unint64_t)v71 > *(_QWORD *)(a1 + 48))
        v71 = *(unsigned int **)(a1 + 48);
      *(_QWORD *)(a1 + 32) = v71;
      v68 |= v72 << v69;
      *(_QWORD *)(a1 + 16) = v68;
      v66 = 32;
      v67 = v69;
    }
    *(_DWORD *)(a1 + 64) = v66 - v67;
    *(_DWORD *)(a1 + 28) = HIDWORD(v68);
    v73 = 32;
    do
    {
      v74 = *(_DWORD *)(a1 + 28);
      v75 = *(_QWORD *)(a1 + 16) << 8;
      *(_QWORD *)(a1 + 16) = v75;
      v76 = *(_DWORD *)(a1 + 64);
      if (v76 > 7)
      {
        v77 = 8;
      }
      else
      {
        v77 = 8 - v76;
        v78 = *(unsigned int **)(a1 + 32);
        v79 = v78 + 1;
        *(_QWORD *)(a1 + 32) = v78 + 1;
        v80 = bswap32(*v78);
        if ((unint64_t)v79 > *(_QWORD *)(a1 + 48))
          v79 = *(unsigned int **)(a1 + 48);
        *(_QWORD *)(a1 + 32) = v79;
        v75 |= v80 << v77;
        *(_QWORD *)(a1 + 16) = v75;
        v76 = 32;
      }
      *(_DWORD *)(a1 + 64) = v76 - v77;
      *(_DWORD *)(a1 + 28) = HIDWORD(v75);
      *(_WORD *)(v59 + v73) = HIBYTE(v74);
      v81 = *(_DWORD *)(a1 + 28);
      v82 = *(_QWORD *)(a1 + 16) << 8;
      *(_QWORD *)(a1 + 16) = v82;
      v83 = *(_DWORD *)(a1 + 64);
      if (v83 > 7)
      {
        v84 = 8;
      }
      else
      {
        v84 = 8 - v83;
        v85 = *(unsigned int **)(a1 + 32);
        v86 = v85 + 1;
        *(_QWORD *)(a1 + 32) = v85 + 1;
        v87 = bswap32(*v85);
        if ((unint64_t)v86 > *(_QWORD *)(a1 + 48))
          v86 = *(unsigned int **)(a1 + 48);
        *(_QWORD *)(a1 + 32) = v86;
        v82 |= v87 << v84;
        *(_QWORD *)(a1 + 16) = v82;
        v83 = 32;
      }
      *(_DWORD *)(a1 + 64) = v83 - v84;
      *(_DWORD *)(a1 + 28) = HIDWORD(v82);
      *(_WORD *)(v59 + v73 + 2) = HIBYTE(v81);
      v73 += 4;
    }
    while ((_DWORD)v73 != 800);
    *(_QWORD *)a1 = 510;
    v88 = *(_BYTE *)(a1 + 112);
    *(_BYTE *)(a1 + 116) = 1;
    *(_DWORD *)(a1 + 120) = 0x3FFFFFF;
    *(_BYTE *)(a1 + 112) = v88 & 0x83 | 0x20;
    v89 = 48 * a4;
    *(_BYTE *)(*(_QWORD *)(a1 + 104) + v89) &= ~4u;
    *(_BYTE *)(*(_QWORD *)(a1 + 104) + v89) &= ~8u;
    *(_BYTE *)(*(_QWORD *)(a1 + 104) + v89) &= ~0x10u;
    *(_BYTE *)(*(_QWORD *)(a1 + 104) + v89) |= 0x20u;
    *(_BYTE *)(*(_QWORD *)(a1 + 104) + v89) &= ~0x40u;
    *(_BYTE *)(*(_QWORD *)(a1 + 104) + v89 + 4) = 1;
    *(_WORD *)(*(_QWORD *)(a1 + 104) + v89 + 8) = -1;
    *(_WORD *)(*(_QWORD *)(a1 + 104) + v89 + 10) = 1023;
    *(_DWORD *)(*(_QWORD *)(a1 + 104) + v89 + 12) = 0;
    *(_DWORD *)(a1 + 124) = 0;
    v90 = *(_QWORD *)(a1 + 104) + v89;
    *(_OWORD *)(v90 + 16) = 0u;
    *(_OWORD *)(v90 + 32) = 0u;
    *(_OWORD *)(a1 + 128) = 0u;
    *(_OWORD *)(a1 + 144) = 0u;
    *(_BYTE *)(a1 + 118) = 0;
    *(_BYTE *)(*(_QWORD *)(a1 + 104) + v89 + 6) = 0;
    *(_BYTE *)(*(_QWORD *)(a5 + 40) + 3) = 0;
    *(_BYTE *)(a1 + 117) = 0;
    *(_BYTE *)(*(_QWORD *)(a1 + 104) + v89 + 5) = 0;
    *(_BYTE *)(*(_QWORD *)(a5 + 48) + 272) = 0;
    v14[54] = 0;
    goto LABEL_147;
  }
  v125 = 1;
  *(_BYTE *)(*(_QWORD *)(a5 + 40) + 3) = 0;
  v122 = v18;
  if (v15 == v13 || v15 == v13 >> 8)
  {
    v91 = sub_215FCB690(a1, (unsigned __int8 *)a2, *(_QWORD *)(a1 + 104) + 48 * a4, a1 + 112, (BOOL *)&v125, **(unsigned __int8 **)(a5 + 48), a5);
    *(_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * a4) &= ~0x40u;
    *(_BYTE *)(a1 + 112) &= ~0x40u;
    if ((v91 & 0x80000000) == 0)
      goto LABEL_104;
  }
  else
  {
    if (*(_BYTE *)(a5 + 184) && v15 == v11)
    {
      v102 = a4;
      *(_BYTE *)(*(_QWORD *)(a5 + 40) + 3) = sub_215FC33B8((unsigned int *)a1, (_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * a4), (_BYTE *)(a1 + 112));
    }
    else
    {
      v102 = a4;
    }
    if ((sub_215FCA688(a1, v58, (unsigned __int8 *)a2, v11, (char *)(*(_QWORD *)(a1 + 104) + 48 * v102), (char *)(a1 + 112), *(unsigned __int8 *)(*(_QWORD *)(a5 + 40) + 3), *(unsigned __int8 *)(*(_QWORD *)(a5 + 48) + 1), a6, a5) & 0x80000000) == 0)
    {
LABEL_104:
      v121 = v14;
      if (v58 <= v11)
      {
        v96 = a4;
        v97 = sub_215FC309C((unsigned int *)a1, (unsigned __int8 *)(*(_QWORD *)(a1 + 104) + 48 * a4), (unsigned __int8 *)(a1 + 112), *(unsigned __int8 *)(*(_QWORD *)(a5 + 48) + 1));
        v95 = v97;
        v92 = v58 == v11;
        v94 = v97 & 0xF;
        if ((v97 & 0xF) == 0)
        {
          *(_BYTE *)(a6 + 816) = 0;
          *(_BYTE *)(a6 + 817) = v97 >> 4;
          if (!v97)
          {
            LOBYTE(v103) = 0;
            *(_DWORD *)(a1 + 4) = 0;
            v99 = v121;
LABEL_134:
            v99[54] = v103;
            if (v92)
              v104 = 8;
            else
              v104 = 0;
            *(_WORD *)(a1 + 86) = (*(__int16 *)(a1 + 86) + *(_DWORD *)(a1 + 4) + 52) % 0x34u;
            if (v58 > v11 || v92)
              v106 = 4;
            else
              v106 = 0;
            if (v122)
              v107 = 16;
            else
              v107 = 0;
            *(_BYTE *)(a1 + 112) = v107 | v104 | v106 | *(_BYTE *)(a1 + 112) & 0xC3;
            *(_BYTE *)(a1 + 113) = v95;
            *(_BYTE *)(a1 + 116) = *(_BYTE *)(a1 + 10);
            *(_DWORD *)(a1 + 120) = *(_DWORD *)(a1 + 12);
            *(_BYTE *)(a1 + 118) = 0;
            *(_BYTE *)(a1 + 117) = *(_BYTE *)(*(_QWORD *)(a5 + 40) + 3);
            v108 = 48 * v96;
            *(_BYTE *)(*(_QWORD *)(a1 + 104) + v108) = *(_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * v96) & 0xF7 | v104;
            *(_BYTE *)(*(_QWORD *)(a1 + 104) + v108) = *(_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * v96) & 0xFB | v106;
            *(_BYTE *)(*(_QWORD *)(a1 + 104) + v108) = *(_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * v96) & 0xEF | v107;
            *(_BYTE *)(*(_QWORD *)(a1 + 104) + v108) = *(_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * v96) & 0xDF;
            *(_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * v96 + 1) = v95;
            *(_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * v96 + 4) = *(_BYTE *)(a1 + 10);
            *(_WORD *)(*(_QWORD *)(a1 + 104) + 48 * v96 + 8) = *(_WORD *)(a1 + 12);
            *(_WORD *)(*(_QWORD *)(a1 + 104) + 48 * v96 + 10) = *(_WORD *)(a1 + 14);
            *(_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * v96 + 6) = 0;
            *(_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * v96 + 5) = *(_BYTE *)(*(_QWORD *)(a5 + 40) + 3);
LABEL_147:
            sub_215FC74FC(a1, a4);
            return 0;
          }
LABEL_117:
          if (*(_DWORD *)(a1 + 4))
            v98 = a1 + 1;
          else
            v98 = a1;
          v99 = v121;
          if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(v98 + 268)))
          {
            if (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 270)))
            {
              v100 = 1;
              do
                ++v100;
              while (sub_215FC2C90((unsigned int *)a1, (_BYTE *)(a1 + 271)) && v100 < 0x34);
              v101 = (((v100 & 1) - 1) ^ ((v100 + 1) >> 1)) + !(v100 & 1);
              if (v101 - 26 < 0xFFFFFFCC)
                v101 = 0;
            }
            else
            {
              v101 = 1;
            }
          }
          else
          {
            v101 = 0;
          }
          *(_DWORD *)(a1 + 4) = v101;
          v96 = a4;
          sub_215FC5BD8(a1, a2, *(_QWORD *)(a1 + 104) + 48 * a4, a1 + 112, v58 > v11, v92, v95, a3, *(_BYTE *)(*(_QWORD *)(a5 + 40) + 3), a5);
          v103 = *(_DWORD *)(a1 + 4);
          goto LABEL_134;
        }
        if (*(_BYTE *)(a5 + 184) && v58 != v11 && v125 && (!v122 || **(_BYTE **)(a5 + 48)))
          *(_BYTE *)(*(_QWORD *)(a5 + 40) + 3) = sub_215FC33B8((unsigned int *)a1, (_BYTE *)(*(_QWORD *)(a1 + 104) + 48 * a4), (_BYTE *)(a1 + 112));
      }
      else
      {
        v92 = 0;
        v93 = v58 + ~v11;
        if (v93 >= 12)
          v94 = 15;
        else
          v94 = 0;
        v95 = v94 | (16 * ((v93 >> 2) % 3u));
      }
      *(_BYTE *)(a6 + 816) = v94;
      *(_BYTE *)(a6 + 817) = v95 >> 4;
      goto LABEL_117;
    }
  }
  return 4294958327;
}

void *sub_215FCD830(uint64_t a1, int a2, int a3, int a4, unsigned int a5)
{
  BOOL v8;
  void *v9;
  uint64_t v10;
  void *result;
  unsigned int *v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  unsigned int *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  BOOL v22;
  int v23;

  v8 = a2 == 7 || a2 == 2;
  v9 = (void *)(a1 + 208);
  if (v8)
    v10 = 0;
  else
    v10 = a4 + 1;
  result = memcpy(v9, (char *)&unk_254E17460 + 23920 * v10 + 460 * a5, 0x1CCuLL);
  v12 = *(unsigned int **)(a1 + 32);
  v13 = *(_DWORD *)(a1 + 64);
  *(_DWORD *)(a1 + 72) = 8 * ((_DWORD)v12 - *(_DWORD *)(a1 + 56)) - v13 - 32;
  v14 = v13 & 7;
  v15 = *(_QWORD *)(a1 + 16) << (v13 & 7);
  *(_QWORD *)(a1 + 16) = v15;
  v16 = v14 - v13;
  if (v14 > v13)
  {
    v17 = v12 + 1;
    *(_QWORD *)(a1 + 32) = v12 + 1;
    v18 = bswap32(*v12);
    if ((unint64_t)v17 > *(_QWORD *)(a1 + 48))
      v17 = *(unsigned int **)(a1 + 48);
    *(_QWORD *)(a1 + 32) = v17;
    v15 |= v18 << v16;
    *(_QWORD *)(a1 + 16) = v15;
    v13 = 32;
    v14 = v16;
  }
  v19 = 0;
  *(_DWORD *)(a1 + 64) = v13 - v14;
  *(_DWORD *)(a1 + 28) = HIDWORD(v15);
  *(_QWORD *)a1 = 510;
  *(_BYTE *)(a1 + 84) = 0;
  *(_BYTE *)(a1 + 112) &= ~1u;
  if ((a3 + 1) > 1)
    v20 = a3 + 1;
  else
    v20 = 1;
  v21 = 48 * v20;
  do
  {
    *(_BYTE *)(*(_QWORD *)(a1 + 104) + v19) &= ~1u;
    v19 += 48;
  }
  while (v21 != v19);
  *(_BYTE *)(a1 + 88) = 0;
  if (a2)
    v22 = a2 == 5;
  else
    v22 = 1;
  if (v22)
    v23 = 11;
  else
    v23 = 24;
  *(_DWORD *)(a1 + 76) = v23;
  *(_DWORD *)(a1 + 80) = a3;
  return result;
}

uint64_t sub_215FCD97C(uint64_t result, unsigned int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(result + 104);
  v3 = 48 * a2;
  *(_BYTE *)(result + 88) = *(_BYTE *)(v2 + v3) & 1;
  *(_DWORD *)(result + 4) = 0;
  *(_BYTE *)(result + 112) = *(_BYTE *)(result + 112) & 0x80 | 3;
  *(_BYTE *)(result + 113) = 0;
  *(_BYTE *)(result + 116) = 0;
  *(_DWORD *)(result + 120) = 0;
  *(_BYTE *)(v2 + v3) |= 2u;
  *(_BYTE *)(*(_QWORD *)(result + 104) + v3) |= 1u;
  *(_BYTE *)(*(_QWORD *)(result + 104) + v3) &= ~4u;
  *(_BYTE *)(*(_QWORD *)(result + 104) + v3) &= ~8u;
  *(_BYTE *)(*(_QWORD *)(result + 104) + v3) &= ~0x10u;
  *(_BYTE *)(*(_QWORD *)(result + 104) + v3) &= ~0x20u;
  *(_BYTE *)(*(_QWORD *)(result + 104) + v3) &= ~0x40u;
  *(_BYTE *)(*(_QWORD *)(result + 104) + v3 + 1) = 0;
  *(_BYTE *)(*(_QWORD *)(result + 104) + v3 + 4) = 0;
  *(_WORD *)(*(_QWORD *)(result + 104) + v3 + 8) = 0;
  *(_WORD *)(*(_QWORD *)(result + 104) + v3 + 10) = 0;
  *(_BYTE *)(result + 118) = 0;
  *(_BYTE *)(*(_QWORD *)(result + 104) + v3 + 6) = 0;
  *(_BYTE *)(result + 117) = 0;
  *(_BYTE *)(*(_QWORD *)(result + 104) + v3 + 5) = 0;
  *(_DWORD *)(*(_QWORD *)(result + 104) + v3 + 12) = 0;
  *(_DWORD *)(result + 124) = 0;
  v4 = *(_QWORD *)(result + 104) + v3;
  *(_OWORD *)(v4 + 16) = 0u;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(result + 128) = 0u;
  *(_OWORD *)(result + 144) = 0u;
  if (a2 + 1 == *(_DWORD *)(result + 80))
  {
    *(_BYTE *)(result + 112) &= ~1u;
    *(_BYTE *)(result + 88) = 0;
  }
  return result;
}

uint64_t sub_215FCDAB8(uint64_t result)
{
  *(_QWORD *)(result + 24) = *(_QWORD *)(result + 16);
  return result;
}

uint64_t sub_215FCDAC4(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  uint64_t result;

  *(_QWORD *)(a1 + 48) = (char *)a2 + a3 + 8;
  *(_QWORD *)(a1 + 56) = a2;
  *(_DWORD *)(a1 + 28) = sub_2160ECB34(*a2);
  result = sub_2160ECB34(a2[1]);
  *(_DWORD *)(a1 + 24) = result;
  *(_QWORD *)(a1 + 32) = ((unint64_t)(a2 + 1) & 0xFFFFFFFFFFFFFFFCLL) + 4;
  *(_QWORD *)(a1 + 64) = 32 - 8 * (a2 & 3u);
  return result;
}

uint64_t sub_215FCDB30(uint64_t a1)
{
  uint64_t v2;

  v2 = operator new[]();
  *(_QWORD *)(a1 + 96) = v2;
  *(_QWORD *)(a1 + 104) = v2 + 48;
  *(_OWORD *)(a1 + 668) = xmmword_2160EE4F0;
  *(_DWORD *)(a1 + 684) = 6448;
  *(_OWORD *)(a1 + 688) = xmmword_2160EE500;
  *(_DWORD *)(a1 + 704) = 0;
  return a1;
}

uint64_t sub_215FCDBA8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(a1 + 96);
  v2 = *(_QWORD *)(a1 + 96);
  if (v2)
  {
    MEMORY[0x2199F4C28](v2, 0x1000C807B7DF2DDLL);
    *v3 = 0;
    v3[1] = 0;
  }
  return a1;
}

uint64_t sub_215FCDBEC(uint64_t result, uint64_t a2, unsigned int a3, unsigned int a4, int a5, unsigned int a6, int a7, uint64_t a8, int a9, char a10, _DWORD *a11)
{
  _DWORD *v11;
  int8x16_t *v12;
  unsigned int v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int8x16_t v21;
  uint16x8_t v22;
  unsigned __int128 v23;
  uint64_t v24;
  unsigned int v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  __int16 v29;
  int8x16_t v30;
  int8x16_t v31;
  int8x16_t v32;
  uint64_t v33;
  char *v34;
  int8x16_t *v35;
  char *v36;
  int8x16_t *v37;
  int16x8_t v38;
  int16x8_t v39;

  if (a10)
    v11 = a11;
  else
    v11 = &dword_2160F71A8[(a4 >> 1) & 0x1F];
  LODWORD(v12) = *v11;
  if (a5 - a4 >= 2)
  {
    v13 = (a5 - a4) >> 1;
    v14 = (char *)(a8 + a9 * a4);
    v15 = &v14[a9];
    v16 = a2 + (a4 >> 1) * a7;
    v17 = result + a6 * a4;
    v18 = v17 + a6;
    v19 = 2 * a6 - a3;
    result = a7 - a3;
    v20 = 2 * (a9 - a3);
    v21.i64[0] = 0x101010101010101;
    v21.i64[1] = 0x101010101010101;
    v22.i64[0] = -1;
    v22.i64[1] = -1;
    do
    {
      if (a3 >= 0x10)
      {
        v24 = 0;
        v23 = 0uLL;
        v25 = a3 >> 4;
        do
        {
          v26 = *(int16x8_t *)(v17 + v24);
          v27 = *(int16x8_t *)(v18 + v24);
          v28 = *(int16x8_t *)(v16 + v24);
          v29 = (unsigned __int16)v12 & 0xFFF;
          v23 = *(_OWORD *)&vaddq_s16(vaddq_s16(v26, (int16x8_t)v23), vaddq_s16(v27, v28)) & __PAIR128__(0xFFF0FFF0FFF0FFFLL, 0xFFF0FFF0FFF0FFFLL);
          v12 = (int8x16_t *)((char *)&unk_2160F5146 + ((unsigned __int16)v12 & 0xFFF));
          v30 = (int8x16_t)vqsubq_u8(vqaddq_u8((uint8x16_t)v26, (uint8x16_t)vandq_s8(*v12, v21)), (uint8x16_t)vandq_s8((int8x16_t)vshlq_u16(*(uint16x8_t *)v12, v22), v21));
          v31 = (int8x16_t)vqsubq_u8(vqaddq_u8((uint8x16_t)v27, (uint8x16_t)vandq_s8(v12[1], v21)), (uint8x16_t)vandq_s8((int8x16_t)vshlq_u16((uint16x8_t)v12[1], v22), v21));
          v32 = (int8x16_t)vqsubq_u8(vqaddq_u8((uint8x16_t)v28, (uint8x16_t)vandq_s8(v12[2], v21)), (uint8x16_t)vandq_s8((int8x16_t)vshlq_u16((uint16x8_t)v12[2], v22), v21));
          v33 = v32.i64[0];
          v34 = v14 + 32;
          vst2_s8(v14, *(int8x8x2_t *)((char *)&v30 - 8));
          v35 = (int8x16_t *)(v14 + 16);
          *v35 = vzip2q_s8(v32, v30);
          v36 = v15 + 32;
          vst2_s8(v15, *(int8x8x2_t *)((char *)&v31 - 8));
          v37 = (int8x16_t *)(v15 + 16);
          LOWORD(v12) = v29 + 48;
          *v37 = vzip2q_s8(v32, v31);
          v14 = v34;
          v15 = v36;
          v24 += 16;
          --v25;
        }
        while (v25);
        v17 += v24;
        v18 += v24;
        v16 += v24;
      }
      else
      {
        v23 = 0uLL;
      }
      v38 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v23, (int8x16_t)0, 8uLL), (int16x8_t)v23);
      v39 = vaddq_s16(v38, (int16x8_t)vextq_s8((int8x16_t)v38, (int8x16_t)0, 4uLL));
      a4 += 2;
      LODWORD(v12) = (dword_2160F71A8[(a4 >> 1) & 0x1F] + vaddq_s16(v39, vdupq_lane_s16(*(int16x4_t *)v39.i8, 1)).u16[0]) & 0xFFF;
      v17 += v19;
      v18 += v19;
      v16 += result;
      v14 += v20;
      v15 += v20;
      --v13;
    }
    while (v13);
  }
  *a11 = (_DWORD)v12;
  return result;
}

uint64_t sub_215FCDDA4(uint64_t result, uint64_t a2, unsigned int a3, unsigned int a4, int a5, unsigned int a6, int a7, uint64_t a8, int a9, uint64_t a10)
{
  unsigned int v10;
  int v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int8x16_t v19;
  uint16x8_t v20;
  unsigned __int128 v21;
  uint64_t v22;
  int8x16_t *v23;
  int8x16_t v24;
  uint8x16_t v25;
  uint8x16_t v26;
  uint8x16_t v27;
  uint8x16_t v28;
  int8x16_t v29;
  uint8x16_t v30;
  uint8x16_t v31;
  unsigned int v32;
  uint8x16_t v33;
  uint8x16_t v34;
  int16x8_t v35;
  int8x16_t v36;
  int8x16_t v37;
  int8x16_t v38;
  uint64_t v39;
  char *v40;
  int8x16_t *v41;
  char *v42;
  int8x16_t *v43;
  int16x8_t v44;
  int16x8_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int v49;
  unsigned int v50;

  if (a5 - a4 >= 2)
  {
    v10 = (a5 - a4) >> 1;
    v11 = dword_2160F71A8[(a4 >> 1) & 0x1F];
    v12 = (char *)(a8 + a9 * a4);
    v13 = &v12[a9];
    v14 = a2 + (a4 >> 1) * a7;
    v15 = result + a6 * a4;
    v16 = v15 + a6;
    v49 = a3 >> 4;
    v50 = a3;
    v17 = 2 * a6 - a3;
    result = a7 - a3;
    v18 = 2 * (a9 - a3);
    v19.i64[0] = 0x101010101010101;
    v19.i64[1] = 0x101010101010101;
    v20.i64[0] = -1;
    v20.i64[1] = -1;
    v47 = result;
    v48 = v17;
    v46 = v18;
    do
    {
      if (a3 >= 0x10)
      {
        v22 = 0;
        v23 = (int8x16_t *)((char *)&unk_2160F5146 + (v11 & 0xFFF));
        v24 = v23[1];
        v25 = (uint8x16_t)vandq_s8(*v23, v19);
        v26 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u16(*(uint16x8_t *)v23, v20), v19);
        v27 = (uint8x16_t)vandq_s8(v24, v19);
        v28 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u16((uint16x8_t)v24, v20), v19);
        v29 = v23[2];
        v30 = (uint8x16_t)vandq_s8(v29, v19);
        v31 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u16((uint16x8_t)v29, v20), v19);
        v21 = 0uLL;
        v32 = v49;
        do
        {
          v33.i8[0] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v15 + v22));
          v33.i8[1] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v15 + v22 + 1));
          v33.i8[2] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v15 + v22 + 2));
          v33.i8[3] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v15 + v22 + 3));
          v33.i8[4] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v15 + v22 + 4));
          v33.i8[5] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v15 + v22 + 5));
          v33.i8[6] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v15 + v22 + 6));
          v34.i8[0] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v16 + v22));
          v33.i8[7] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v15 + v22 + 7));
          v34.i8[1] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v16 + v22 + 1));
          v33.i8[8] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v15 + v22 + 8));
          v34.i8[2] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v16 + v22 + 2));
          v33.i8[9] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v15 + v22 + 9));
          v34.i8[3] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v16 + v22 + 3));
          v33.i8[10] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v15 + v22 + 10));
          v34.i8[4] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v16 + v22 + 4));
          v33.i8[11] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v15 + v22 + 11));
          v34.i8[5] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v16 + v22 + 5));
          v34.i8[6] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v16 + v22 + 6));
          v33.i8[12] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v15 + v22 + 12));
          v34.i8[7] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v16 + v22 + 7));
          v34.i8[8] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v16 + v22 + 8));
          v33.i8[13] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v15 + v22 + 13));
          v34.i8[9] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v16 + v22 + 9));
          v34.i8[10] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v16 + v22 + 10));
          v33.i8[14] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v15 + v22 + 14));
          v34.i8[11] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v16 + v22 + 11));
          v34.i8[12] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v16 + v22 + 12));
          v33.i8[15] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v15 + v22 + 15));
          v34.i8[13] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v16 + v22 + 13));
          v34.i8[14] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v16 + v22 + 14));
          v34.i8[15] = *(_BYTE *)(a10 + *(unsigned __int8 *)(v16 + v22 + 15));
          v35 = *(int16x8_t *)(v14 + v22);
          v36 = (int8x16_t)vqsubq_u8(vqaddq_u8(v34, v27), v28);
          v37 = (int8x16_t)vqsubq_u8(vqaddq_u8((uint8x16_t)v35, v30), v31);
          v38 = (int8x16_t)vqsubq_u8(vqaddq_u8(v33, v25), v26);
          v39 = v37.i64[0];
          v40 = v12 + 32;
          vst2_s8(v12, *(int8x8x2_t *)((char *)&v38 - 8));
          v41 = (int8x16_t *)(v12 + 16);
          v21 = *(_OWORD *)&vaddq_s16(vaddq_s16((int16x8_t)v33, vaddq_s16((int16x8_t)v21, v35)), (int16x8_t)v34) & __PAIR128__(0xFFF0FFF0FFF0FFFLL, 0xFFF0FFF0FFF0FFFLL);
          *v41 = vzip2q_s8(v37, v38);
          v42 = v13 + 32;
          vst2_s8(v13, *(int8x8x2_t *)((char *)&v36 - 8));
          v43 = (int8x16_t *)(v13 + 16);
          *v43 = vzip2q_s8(v37, v36);
          v22 += 16;
          v12 = v40;
          v13 = v42;
          --v32;
        }
        while (v32);
        v15 += v22;
        v16 += v22;
        v14 += v22;
        v13 = v42;
        v12 = v40;
        a3 = v50;
        result = v47;
        v17 = v48;
        v18 = v46;
      }
      else
      {
        v21 = 0uLL;
      }
      v44 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v21, (int8x16_t)0, 8uLL), (int16x8_t)v21);
      v45 = vaddq_s16(v44, (int16x8_t)vextq_s8((int8x16_t)v44, (int8x16_t)0, 4uLL));
      a4 += 2;
      v11 = dword_2160F71A8[(a4 >> 1) & 0x1F] + (vaddq_s16(v45, vdupq_lane_s16(*(int16x4_t *)v45.i8, 1)).u16[0] & 0xFFF);
      v15 += v17;
      v16 += v17;
      v14 += result;
      v12 += v18;
      v13 += v18;
      --v10;
    }
    while (v10);
  }
  return result;
}

uint64_t sub_215FCE134(uint64_t result, uint64_t a2, unsigned int a3, unsigned int a4, int a5, unsigned int a6, int a7, uint64_t a8, uint64_t a9, unsigned int a10, int a11, char a12, _DWORD *a13)
{
  _DWORD *v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int8x16_t v23;
  uint16x8_t v24;
  unsigned __int128 v25;
  uint64_t v26;
  unsigned int v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  uint8x16_t v31;
  int8x16_t v32;
  int16x8_t v33;
  int16x8_t v34;

  if (a12)
    v13 = a13;
  else
    v13 = &dword_2160F71A8[(a4 >> 1) & 0x1F];
  LODWORD(v14) = *v13;
  if (a5 - a4 >= 2)
  {
    v15 = (a5 - a4) >> 1;
    v16 = a9 + (a4 >> 1) * a11;
    v17 = a8 + a10 * a4;
    v18 = v17 + a10;
    v19 = a2 + (a4 >> 1) * a7;
    v20 = result + a6 * a4;
    v21 = v20 + a6;
    result = 2 * a6 - a3;
    v22 = 2 * a10 - a3;
    v23.i64[0] = 0x101010101010101;
    v23.i64[1] = 0x101010101010101;
    v24.i64[0] = -1;
    v24.i64[1] = -1;
    do
    {
      if (a3 >= 0x10)
      {
        v26 = 0;
        v25 = 0uLL;
        v27 = a3 >> 4;
        do
        {
          v14 &= 0xFFFu;
          v28 = *(int16x8_t *)(v20 + v26);
          v29 = *(int16x8_t *)(v21 + v26);
          v30 = *(int16x8_t *)(v19 + v26);
          v25 = *(_OWORD *)&vaddq_s16(vaddq_s16(v28, (int16x8_t)v25), vaddq_s16(v29, v30)) & __PAIR128__(0xFFF0FFF0FFF0FFFLL, 0xFFF0FFF0FFF0FFFLL);
          v31 = vqsubq_u8(vqaddq_u8((uint8x16_t)v29, (uint8x16_t)vandq_s8(*(int8x16_t *)((char *)&unk_2160F5146 + v14 + 16), v23)), (uint8x16_t)vandq_s8((int8x16_t)vshlq_u16(*(uint16x8_t *)((char *)&unk_2160F5146 + v14 + 16), v24), v23));
          v32 = *(int8x16_t *)((char *)&unk_2160F5146 + v14 + 32);
          *(uint8x16_t *)(v17 + v26) = vqsubq_u8(vqaddq_u8((uint8x16_t)v28, (uint8x16_t)vandq_s8(*(int8x16_t *)((char *)&unk_2160F5146 + v14), v23)), (uint8x16_t)vandq_s8((int8x16_t)vshlq_u16(*(uint16x8_t *)((char *)&unk_2160F5146 + v14), v24), v23));
          *(uint8x16_t *)(v18 + v26) = v31;
          *(uint8x16_t *)(v16 + v26) = vqsubq_u8(vqaddq_u8((uint8x16_t)v30, (uint8x16_t)vandq_s8(v32, v23)), (uint8x16_t)vandq_s8((int8x16_t)vshlq_u16((uint16x8_t)v32, v24), v23));
          LOWORD(v14) = v14 + 48;
          v26 += 16;
          --v27;
        }
        while (v27);
        v20 += v26;
        v21 += v26;
        v19 += v26;
        v17 += v26;
        v18 += v26;
        v16 += v26;
      }
      else
      {
        v25 = 0uLL;
      }
      a4 += 2;
      v33 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v25, (int8x16_t)0, 8uLL), (int16x8_t)v25);
      v34 = vaddq_s16(v33, (int16x8_t)vextq_s8((int8x16_t)v33, (int8x16_t)0, 4uLL));
      LODWORD(v14) = (dword_2160F71A8[(a4 >> 1) & 0x1F] + vaddq_s16(v34, vdupq_lane_s16(*(int16x4_t *)v34.i8, 1)).u16[0]) & 0xFFF;
      v20 += result;
      v21 += result;
      v19 += a7 - a3;
      v17 += v22;
      v18 += v22;
      v16 += a11 - a3;
      --v15;
    }
    while (v15);
  }
  *a13 = v14;
  return result;
}

BOOL sub_215FCE2EC(int16x8_t *a1, int16x8_t *a2, uint16x8_t *a3, int a4, int a5)
{
  uint32x4_t v5;
  uint32x4_t v6;
  int8x16_t v7;
  unsigned int v8;
  int16x8_t v9;
  int16x8_t v10;
  uint16x8_t v11;
  uint16x8_t v12;
  uint16x8_t v13;
  uint16x8_t v14;
  int16x8_t v15;
  int16x8_t v16;
  uint32x4_t v17;
  uint32x4_t v18;
  uint32x4_t v19;
  uint32x4_t v20;
  int8x16_t v21;
  int8x16_t v22;

  v5 = (uint32x4_t)vdupq_n_s32(2 * a4);
  v6 = (uint32x4_t)vdupq_n_s32(~a5);
  v7 = 0uLL;
  v8 = -2;
  do
  {
    v9 = *a2;
    v10 = a2[1];
    a2 += 2;
    v11 = *a3;
    v12 = a3[1];
    a3 += 2;
    v13 = (uint16x8_t)vabsq_s16(v9);
    v14 = (uint16x8_t)vabsq_s16(v10);
    v15 = vcltzq_s16(v9);
    v16 = vcltzq_s16(v10);
    v17 = vmlal_u16(v5, *(uint16x4_t *)v13.i8, *(uint16x4_t *)v11.i8);
    v18 = vmlal_high_u16(v5, v13, v11);
    v19 = vmlal_u16(v5, *(uint16x4_t *)v14.i8, *(uint16x4_t *)v12.i8);
    v20 = vmlal_high_u16(v5, v14, v12);
    v21 = (int8x16_t)vqmovn_high_u32(vqmovn_u32(vshlq_u32(v17, v6)), vshlq_u32(v18, v6));
    v22 = (int8x16_t)vqmovn_high_u32(vqmovn_u32(vshlq_u32(v19, v6)), vshlq_u32(v20, v6));
    v7 = vorrq_s8(vorrq_s8(v21, v7), v22);
    v8 += 2;
    *a1 = vsubq_s16((int16x8_t)veorq_s8(v21, (int8x16_t)v15), v15);
    a1[1] = vsubq_s16((int16x8_t)veorq_s8(v22, (int8x16_t)v16), v16);
    a1 += 2;
  }
  while (v8 < 6);
  v5.i16[0] = vmaxvq_u16((uint16x8_t)v7);
  return v5.i32[0] != 0;
}

int16x8_t *sub_215FCE398(int16x8_t *result, int16x8_t *a2, int16x8_t *a3, int a4)
{
  int32x4_t v4;
  unsigned int v5;
  int16x8_t v6;
  int16x8_t v7;
  int16x8_t v8;
  int16x8_t v9;
  int16x8_t v10;
  int16x8_t v11;

  v4 = vdupq_n_s32(a4 - 6);
  v5 = -2;
  do
  {
    v6 = *a2;
    v7 = a2[1];
    a2 += 2;
    v8 = *a3;
    v9 = a3[1];
    a3 += 2;
    v10 = vshlq_n_s16(v8, 4uLL);
    v11 = vshlq_n_s16(v9, 4uLL);
    v5 += 2;
    *result = vqmovn_high_s32(vqmovn_s32(vrshlq_s32(vmull_s16(*(int16x4_t *)v6.i8, *(int16x4_t *)v10.i8), v4)), vrshlq_s32(vmull_high_s16(v6, v10), v4));
    result[1] = vqmovn_high_s32(vqmovn_s32(vrshlq_s32(vmull_s16(*(int16x4_t *)v7.i8, *(int16x4_t *)v11.i8), v4)), vrshlq_s32(vmull_high_s16(v7, v11), v4));
    result += 2;
  }
  while (v5 < 6);
  return result;
}

int16x8_t *sub_215FCE3F8(int16x8_t *a1, unsigned __int8 a2, uint64_t a3, _OWORD *a4, _DWORD *a5, uint64_t a6)
{
  int v9;
  unint64_t v10;
  uint64_t v11;
  int16x8_t *result;
  int v13;
  uint64_t i;
  int16x8_t v15[8];
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v9 = a2 & 0x1F;
  v10 = 1431655766 * (1 << ((a2 & 0x1F) + 15));
  v11 = a2 >> 5;
  result = (int16x8_t *)sub_215FCE2EC(v15, a1, &xmmword_2160F2DD0[8 * v11], HIDWORD(v10) + (v10 >> 63), v9 + 15);
  v13 = (int)result;
  if ((_DWORD)result)
  {
    for (i = 0; i != 64; ++i)
      *((_WORD *)a4 + (unsigned __int16)word_2160F33D0[i]) = v15[0].i16[i];
    result = sub_215FCE398((int16x8_t *)a6, v15, &xmmword_2160F30D0[8 * v11], v9);
  }
  else
  {
    a4[6] = 0u;
    a4[7] = 0u;
    a4[4] = 0u;
    a4[5] = 0u;
    a4[2] = 0u;
    a4[3] = 0u;
    *a4 = 0u;
    a4[1] = 0u;
    *(_OWORD *)(a6 + 96) = 0u;
    *(_OWORD *)(a6 + 112) = 0u;
    *(_OWORD *)(a6 + 64) = 0u;
    *(_OWORD *)(a6 + 80) = 0u;
    *(_OWORD *)(a6 + 32) = 0u;
    *(_OWORD *)(a6 + 48) = 0u;
    *(_OWORD *)a6 = 0u;
    *(_OWORD *)(a6 + 16) = 0u;
  }
  *a5 = v13;
  return result;
}

BOOL sub_215FCE528(uint64_t a1, int a2, int a3)
{
  unsigned int v6;
  void *v7;
  _BOOL8 v8;
  unint64_t v9;
  void *v10;
  BOOL v11;

  v6 = sub_2160C4FB0();
  *(_WORD *)(a1 + 2) = a2;
  *(_WORD *)a1 = a3;
  *(_DWORD *)(a1 + 4) = a3 * a2;
  v7 = sub_2160CB5D4(8 * v6);
  *(_QWORD *)(a1 + 8) = v7;
  v8 = v7 == 0;
  if (v7 && v6)
  {
    v9 = 0;
    do
    {
      v10 = sub_2160CB5D4(4 * *(unsigned int *)(a1 + 4));
      *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8 * v9++) = v10;
      v8 = v10 == 0;
      if (v10)
        v11 = v9 >= v6;
      else
        v11 = 1;
    }
    while (!v11);
  }
  if (v8)
    sub_215FCE5D0(a1);
  else
    sub_215FCE640(a1);
  return v8;
}

void sub_215FCE5D0(uint64_t a1)
{
  unsigned int v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v2 = sub_2160C4FB0();
  v3 = *(void **)(a1 + 8);
  if (v3)
  {
    if (v2)
    {
      v4 = 0;
      v5 = 8 * v2;
      do
      {
        v6 = *(void **)(*(_QWORD *)(a1 + 8) + v4);
        if (v6)
        {
          j__free(v6);
          *(_QWORD *)(*(_QWORD *)(a1 + 8) + v4) = 0;
        }
        v4 += 8;
      }
      while (v5 != v4);
      v3 = *(void **)(a1 + 8);
    }
    j__free(v3);
    *(_QWORD *)(a1 + 8) = 0;
  }
}

uint64_t sub_215FCE640(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  void *v5;

  result = sub_2160C4FB0();
  if ((_DWORD)result)
  {
    v3 = 0;
    v4 = result;
    while (1)
    {
      v5 = *(void **)(*(_QWORD *)(a1 + 8) + 8 * v3);
      if (!v5)
        break;
      bzero(v5, 4 * *(unsigned int *)(a1 + 4));
      if (++v3 >= v4)
        return 0;
    }
    return 1;
  }
  return result;
}

uint64_t sub_215FCE6A4(uint64_t result, uint64_t a2, unsigned int a3, unsigned int a4, int a5, unsigned int a6, int a7, int8x16_t *a8, int a9)
{
  unsigned int v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int16x8_t v17;
  uint16x8_t v18;
  uint16x8_t v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  unsigned __int128 v24;
  uint64_t v25;
  unsigned int v26;
  __int16 v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int8x16_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int16x8_t v39;
  int16x8_t v40;
  int8x16_t v41;
  int16x8_t v42;
  int16x8_t v43;
  int8x16_t v44;
  int16x8_t v45;
  int8x16_t v46;
  int16x8_t v47;
  int8x16_t v48;
  char *v49;
  int8x16_t *v50;
  char *v51;
  int8x16_t *v52;
  int16x8_t v53;
  int16x8_t v54;

  if (a5 - a4 >= 2)
  {
    v9 = (a5 - a4) >> 1;
    v10 = &a8->i8[a9 * a4];
    v11 = &v10[a9];
    v12 = a2 + (a4 >> 1) * a7;
    v13 = result + a6 * a4;
    v14 = v13 + a6;
    LODWORD(a8) = dword_2160F71A8[(a4 >> 1) & 0x1F];
    v15 = 2 * a6 - a3;
    v16 = a7 - a3;
    result = 2 * (a9 - a3);
    v17.i64[0] = 0xDC00DC00DC00DCLL;
    v17.i64[1] = 0xDC00DC00DC00DCLL;
    v18.i64[0] = 0x100010001000100;
    v18.i64[1] = 0x100010001000100;
    v19.i64[0] = 0x7000700070007;
    v19.i64[1] = 0x7000700070007;
    v20.i64[0] = 0x10001000100010;
    v20.i64[1] = 0x10001000100010;
    v21.i64[0] = 0xEB00EB00EB00EBLL;
    v21.i64[1] = 0xEB00EB00EB00EBLL;
    v22.i64[0] = 0xE100E100E100E1;
    v22.i64[1] = 0xE100E100E100E1;
    v23.i64[0] = 0xF000F000F000F0;
    v23.i64[1] = 0xF000F000F000F0;
    do
    {
      if (a3 >= 0x10)
      {
        v25 = 0;
        v24 = 0uLL;
        v26 = a3 >> 4;
        do
        {
          v27 = (unsigned __int16)a8 & 0xFFF;
          v28 = *(int16x8_t *)(v13 + v25);
          v29 = *(int16x8_t *)(v14 + v25);
          v30 = *(int16x8_t *)(v12 + v25);
          a8 = (int8x16_t *)((char *)&unk_2160F6176 + ((unsigned __int16)a8 & 0xFFF));
          v31 = a8[1];
          v32 = (int16x8_t)vzip1q_s8(*a8, (int8x16_t)0);
          v33 = vaddq_s16(vaddq_s16(v28, (int16x8_t)v24), vaddq_s16(v29, v30));
          v34 = (int16x8_t)vzip2q_s8(*a8, (int8x16_t)0);
          v35 = vminq_s16(vaddq_s16((int16x8_t)vshlq_u16(vqsubq_u16((uint16x8_t)vmlaq_s16(vaddq_s16(v32, v32), (int16x8_t)vzip1q_s8((int8x16_t)v28, (int8x16_t)0), v17), v18), v19), v20), v21);
          v36 = (int16x8_t)vzip1q_s8(v31, (int8x16_t)0);
          v37 = vminq_s16(vaddq_s16((int16x8_t)vshlq_u16(vqsubq_u16(vmlal_u8((uint16x8_t)vaddq_s16(v34, v34), (uint8x8_t)vmovn_s16((int16x8_t)vzip2q_s8((int8x16_t)v28, (int8x16_t)0)), (uint8x8_t)0xDCDCDCDCDCDCDCDCLL), v18), v19), v20), v21);
          v38 = vminq_s16(vaddq_s16((int16x8_t)vshlq_u16(vqsubq_u16((uint16x8_t)vmlaq_s16(vaddq_s16(v36, v36), (int16x8_t)vzip1q_s8((int8x16_t)v29, (int8x16_t)0), v17), v18), v19), v20), v21);
          *(int8x8_t *)v35.i8 = vqmovun_s16(v35);
          v39 = (int16x8_t)vzip2q_s8(v31, (int8x16_t)0);
          *(int8x8_t *)v37.i8 = vqmovun_s16(v37);
          v40 = vminq_s16(vaddq_s16((int16x8_t)vshlq_u16(vqsubq_u16(vmlal_u8((uint16x8_t)vaddq_s16(v39, v39), (uint8x8_t)vmovn_s16((int16x8_t)vzip2q_s8((int8x16_t)v29, (int8x16_t)0)), (uint8x8_t)0xDCDCDCDCDCDCDCDCLL), v18), v19), v20), v21);
          *(int8x8_t *)v38.i8 = vqmovun_s16(v38);
          v41 = a8[2];
          v42 = (int16x8_t)vzip1q_s8(v41, (int8x16_t)0);
          *(int8x8_t *)v40.i8 = vqmovun_s16(v40);
          v43 = vminq_s16(vaddq_s16((int16x8_t)vshlq_u16(vqsubq_u16((uint16x8_t)vmlaq_s16(vaddq_s16(v42, v42), (int16x8_t)vzip1q_s8((int8x16_t)v30, (int8x16_t)0), v22), v18), v19), v20), v23);
          *(int8x8_t *)v43.i8 = vqmovun_s16(v43);
          v44 = (int8x16_t)vzip1q_s64((int64x2_t)v35, (int64x2_t)v37);
          v45 = (int16x8_t)vzip2q_s8(v41, (int8x16_t)0);
          v46 = (int8x16_t)vzip1q_s64((int64x2_t)v38, (int64x2_t)v40);
          v47 = vminq_s16(vaddq_s16((int16x8_t)vshlq_u16(vqsubq_u16(vmlal_u8((uint16x8_t)vaddq_s16(v45, v45), (uint8x8_t)vmovn_s16((int16x8_t)vzip2q_s8((int8x16_t)v30, (int8x16_t)0)), (uint8x8_t)0xE1E1E1E1E1E1E1E1), v18), v19), v20), v23);
          *(int8x8_t *)v47.i8 = vqmovun_s16(v47);
          v48 = (int8x16_t)vzip1q_s64((int64x2_t)v43, (int64x2_t)v47);
          v24 = *(_OWORD *)&v33 & __PAIR128__(0xFFF0FFF0FFF0FFFLL, 0xFFF0FFF0FFF0FFFLL);
          v42.i64[0] = v48.i64[0];
          v49 = v10 + 32;
          vst2_s8(v10, (int8x8x2_t)v42);
          v50 = (int8x16_t *)(v10 + 16);
          *v50 = vzip2q_s8(v48, v44);
          v51 = v11 + 32;
          LOWORD(a8) = v27 + 48;
          vst2_s8(v11, *(int8x8x2_t *)((char *)&v46 - 8));
          v52 = (int8x16_t *)(v11 + 16);
          *v52 = vzip2q_s8(v48, v46);
          v10 = v49;
          v11 = v51;
          v25 += 16;
          --v26;
        }
        while (v26);
        v13 += v25;
        v14 += v25;
        v12 += v25;
      }
      else
      {
        v24 = 0uLL;
      }
      a4 += 2;
      v53 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v24, (int8x16_t)0, 8uLL), (int16x8_t)v24);
      v54 = vaddq_s16(v53, (int16x8_t)vextq_s8((int8x16_t)v53, (int8x16_t)0, 4uLL));
      LODWORD(a8) = dword_2160F71A8[(a4 >> 1) & 0x1F]
                  + (vaddq_s16(v54, vdupq_lane_s16(*(int16x4_t *)v54.i8, 1)).u16[0] & 0xFFF);
      v13 += v15;
      v14 += v15;
      v12 += v16;
      v10 += result;
      v11 += result;
      --v9;
    }
    while (v9);
  }
  return result;
}

uint64_t sub_215FCE90C(uint64_t result, uint64_t a2, unsigned int a3, unsigned int a4, int a5, unsigned int a6, int a7, uint64_t a8, int a9)
{
  unsigned int v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  int8x16_t v18;
  int8x16_t v19;
  int8x16_t v20;
  uint64_t v21;
  char *v22;
  int8x16_t *v23;
  char *v24;
  int8x16_t *v25;

  if (a5 - a4 >= 2)
  {
    v9 = (a5 - a4) >> 1;
    v10 = (char *)(a8 + a9 * a4);
    v11 = &v10[a9];
    v12 = a2 + (a4 >> 1) * a7;
    v13 = result + a6 * a4;
    v14 = v13 + a6;
    v15 = 2 * a6 - a3;
    v16 = 2 * (a9 - a3);
    do
    {
      if (a3 >= 0x10)
      {
        result = 0;
        v17 = a3 >> 4;
        do
        {
          v18 = *(int8x16_t *)(v13 + result);
          v19 = *(int8x16_t *)(v14 + result);
          v20 = *(int8x16_t *)(v12 + result);
          v21 = *(_QWORD *)(v12 + result);
          v22 = v10 + 32;
          vst2_s8(v10, *(int8x8x2_t *)((char *)&v18 - 8));
          v23 = (int8x16_t *)(v10 + 16);
          *v23 = vzip2q_s8(v20, v18);
          v24 = v11 + 32;
          vst2_s8(v11, *(int8x8x2_t *)((char *)&v19 - 8));
          v25 = (int8x16_t *)(v11 + 16);
          *v25 = vzip2q_s8(v20, v19);
          v10 = v22;
          v11 = v24;
          result += 16;
          --v17;
        }
        while (v17);
        v13 += result;
        v14 += result;
        v12 += result;
      }
      v13 += v15;
      v14 += v15;
      v12 += a7 - a3;
      v10 += v16;
      v11 += v16;
      --v9;
    }
    while (v9);
  }
  return result;
}

uint64_t sub_215FCE9DC(uint64_t result, uint64_t a2, unsigned int a3, unsigned int a4, int a5, unsigned int a6, int a7, uint64_t a8, int8x16_t a9, int a10, uint64_t a11)
{
  unsigned int v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  int8x16_t v20;
  unint64_t v21;
  int8x16_t v22;
  char *v23;
  int8x16_t *v24;
  char *v25;
  int8x16_t *v26;
  int8x8x2_t v27;

  if (a5 - a4 >= 2)
  {
    v11 = (a5 - a4) >> 1;
    v12 = (char *)(a8 + a10 * a4);
    v13 = &v12[a10];
    v14 = a2 + (a4 >> 1) * a7;
    v15 = result + a6 * a4;
    v16 = v15 + a6;
    v17 = 2 * a6 - a3;
    v18 = 2 * (a10 - a3);
    do
    {
      if (a3 >= 0x10)
      {
        result = 0;
        v19 = a3 >> 4;
        do
        {
          a9.i8[0] = *(_BYTE *)(a11 + *(unsigned __int8 *)(v15 + result));
          a9.i8[1] = *(_BYTE *)(a11 + *(unsigned __int8 *)(v15 + result + 1));
          a9.i8[2] = *(_BYTE *)(a11 + *(unsigned __int8 *)(v15 + result + 2));
          a9.i8[3] = *(_BYTE *)(a11 + *(unsigned __int8 *)(v15 + result + 3));
          a9.i8[4] = *(_BYTE *)(a11 + *(unsigned __int8 *)(v15 + result + 4));
          a9.i8[5] = *(_BYTE *)(a11 + *(unsigned __int8 *)(v15 + result + 5));
          a9.i8[6] = *(_BYTE *)(a11 + *(unsigned __int8 *)(v15 + result + 6));
          v27.val[1] = (int8x8_t)a9.i64[0];
          v27.val[1].i8[7] = *(_BYTE *)(a11 + *(unsigned __int8 *)(v15 + result + 7));
          v20.i64[0] = (uint64_t)v27.val[1];
          v20.i8[8] = *(_BYTE *)(a11 + *(unsigned __int8 *)(v15 + result + 8));
          v20.i8[9] = *(_BYTE *)(a11 + *(unsigned __int8 *)(v15 + result + 9));
          v20.i8[10] = *(_BYTE *)(a11 + *(unsigned __int8 *)(v15 + result + 10));
          v20.i8[11] = *(_BYTE *)(a11 + *(unsigned __int8 *)(v15 + result + 11));
          v20.i8[12] = *(_BYTE *)(a11 + *(unsigned __int8 *)(v15 + result + 12));
          v20.i8[13] = *(_BYTE *)(a11 + *(unsigned __int8 *)(v15 + result + 13));
          v20.i8[14] = *(_BYTE *)(a11 + *(unsigned __int8 *)(v15 + result + 14));
          v20.i8[15] = *(_BYTE *)(a11 + *(unsigned __int8 *)(v15 + result + 15));
          LOBYTE(v21) = *(_BYTE *)(a11 + *(unsigned __int8 *)(v16 + result));
          BYTE1(v21) = *(_BYTE *)(a11 + *(unsigned __int8 *)(v16 + result + 1));
          BYTE2(v21) = *(_BYTE *)(a11 + *(unsigned __int8 *)(v16 + result + 2));
          BYTE3(v21) = *(_BYTE *)(a11 + *(unsigned __int8 *)(v16 + result + 3));
          BYTE4(v21) = *(_BYTE *)(a11 + *(unsigned __int8 *)(v16 + result + 4));
          BYTE5(v21) = *(_BYTE *)(a11 + *(unsigned __int8 *)(v16 + result + 5));
          BYTE6(v21) = *(_BYTE *)(a11 + *(unsigned __int8 *)(v16 + result + 6));
          HIBYTE(v21) = *(_BYTE *)(a11 + *(unsigned __int8 *)(v16 + result + 7));
          a9.i64[0] = v21;
          a9.i8[8] = *(_BYTE *)(a11 + *(unsigned __int8 *)(v16 + result + 8));
          a9.i8[9] = *(_BYTE *)(a11 + *(unsigned __int8 *)(v16 + result + 9));
          a9.i8[10] = *(_BYTE *)(a11 + *(unsigned __int8 *)(v16 + result + 10));
          a9.i8[11] = *(_BYTE *)(a11 + *(unsigned __int8 *)(v16 + result + 11));
          a9.i8[12] = *(_BYTE *)(a11 + *(unsigned __int8 *)(v16 + result + 12));
          a9.i8[13] = *(_BYTE *)(a11 + *(unsigned __int8 *)(v16 + result + 13));
          a9.i8[14] = *(_BYTE *)(a11 + *(unsigned __int8 *)(v16 + result + 14));
          a9.i8[15] = *(_BYTE *)(a11 + *(unsigned __int8 *)(v16 + result + 15));
          v22 = *(int8x16_t *)(v14 + result);
          v27.val[0] = *(int8x8_t *)(v14 + result);
          v23 = v12 + 32;
          vst2_s8(v12, v27);
          v24 = (int8x16_t *)(v12 + 16);
          *v24 = vzip2q_s8(v22, v20);
          v25 = v13 + 32;
          vst2_s8(v13, *(int8x8x2_t *)(&v21 - 1));
          v26 = (int8x16_t *)(v13 + 16);
          *v26 = vzip2q_s8(v22, a9);
          result += 16;
          v12 = v23;
          v13 = v25;
          --v19;
        }
        while (v19);
        v15 += result;
        v16 += result;
        v14 += result;
        v13 = v25;
        v12 = v23;
      }
      v15 += v17;
      v16 += v17;
      v14 += a7 - a3;
      v12 += v18;
      v13 += v18;
      --v11;
    }
    while (v11);
  }
  return result;
}

uint64_t sub_215FCEC48(uint64_t result, uint64_t a2, unsigned int a3, unsigned int a4, int a5, unsigned int a6, int a7, uint64_t a8, uint64_t a9, unsigned int a10, int a11)
{
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  __int128 v21;
  __int128 v22;

  if (a5 - a4 >= 2)
  {
    v11 = (a5 - a4) >> 1;
    v12 = a9 + (a4 >> 1) * a11;
    v13 = a8 + a10 * a4;
    v14 = v13 + a10;
    v15 = a2 + (a4 >> 1) * a7;
    v16 = result + a6 * a4;
    v17 = v16 + a6;
    v18 = 2 * a6 - a3;
    result = 2 * a10 - a3;
    do
    {
      if (a3 >= 0x10)
      {
        v19 = 0;
        v20 = a3 >> 4;
        do
        {
          v21 = *(_OWORD *)(v17 + v19);
          v22 = *(_OWORD *)(v15 + v19);
          *(_OWORD *)(v13 + v19) = *(_OWORD *)(v16 + v19);
          *(_OWORD *)(v14 + v19) = v21;
          *(_OWORD *)(v12 + v19) = v22;
          v19 += 16;
          --v20;
        }
        while (v20);
        v12 += v19;
        v14 += v19;
        v13 += v19;
        v15 += v19;
        v17 += v19;
        v16 += v19;
      }
      v16 += v18;
      v17 += v18;
      v15 += a7 - a3;
      v13 += result;
      v14 += result;
      v12 += a11 - a3;
      --v11;
    }
    while (v11);
  }
  return result;
}

int16x8_t sub_215FCED20(int16x8_t *a1, int16x8_t *a2)
{
  int16x8_t v2;
  int16x8_t v3;
  int16x8_t v4;
  int16x8_t v5;
  int16x8_t v6;
  int32x4_t v7;
  int16x8_t v8;
  int16x8_t v9;
  int32x4_t v10;
  int32x4_t v11;
  int32x4_t v12;
  int32x4_t v13;
  int32x4_t v14;
  int32x4_t v15;
  int32x4_t v16;
  int64x2_t v17;
  int64x2_t v18;
  int64x2_t v19;
  int64x2_t v20;
  int64x2_t v21;
  int64x2_t v22;
  int64x2_t v23;
  int64x2_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int16x8_t v39;
  int16x8_t v40;
  int16x8_t v41;
  int16x8_t v42;
  int16x8_t v43;
  int16x8_t v44;
  int16x8_t v45;
  int16x8_t v46;
  int16x8_t v47;
  int16x8_t v48;
  int16x8_t v49;
  int16x8_t v50;
  int16x8_t v51;
  int16x8_t v52;
  int16x8_t v53;
  int16x8_t v54;
  int16x8_t v55;
  int16x8_t v56;
  int16x8_t v57;
  int16x8_t v58;
  int16x8_t v59;
  int32x4_t v60;
  int32x4_t v61;
  int32x4_t v62;
  int32x4_t v63;
  int32x4_t v64;
  int32x4_t v65;
  int32x4_t v66;
  int32x4_t v67;
  int64x2_t v68;
  int64x2_t v69;
  int64x2_t v70;
  int64x2_t v71;
  int64x2_t v72;
  int64x2_t v73;
  int64x2_t v74;
  int64x2_t v75;
  int16x8_t v76;
  int16x8_t v77;
  int16x8_t v78;
  int16x8_t v79;
  int16x8_t v80;
  int16x8_t v81;
  int16x8_t v82;
  int16x8_t v83;
  int16x8_t v84;
  int16x8_t v85;
  int16x8_t v86;
  int16x8_t v87;
  int16x8_t v88;
  int16x8_t v89;
  int16x8_t v90;
  int16x8_t v91;
  int16x8_t v92;
  int16x8_t v93;
  int16x8_t v94;
  int16x8_t v95;
  int16x8_t v96;
  int16x8_t v97;
  int16x8_t v98;
  int16x8_t v99;
  int16x8_t result;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v6 = a1[5];
  v7 = (int32x4_t)vtrn1q_s16(*a1, v2);
  v8 = a1[6];
  v9 = a1[7];
  v10 = (int32x4_t)vtrn2q_s16(*a1, v2);
  v11 = (int32x4_t)vtrn1q_s16(v3, v4);
  v12 = (int32x4_t)vtrn2q_s16(v3, v4);
  v13 = (int32x4_t)vtrn1q_s16(v5, v6);
  v14 = (int32x4_t)vtrn2q_s16(v5, v6);
  v15 = (int32x4_t)vtrn1q_s16(v8, v9);
  v16 = (int32x4_t)vtrn2q_s16(v8, v9);
  v17 = (int64x2_t)vtrn1q_s32(v7, v11);
  v18 = (int64x2_t)vtrn2q_s32(v7, v11);
  v19 = (int64x2_t)vtrn1q_s32(v10, v12);
  v20 = (int64x2_t)vtrn2q_s32(v10, v12);
  v21 = (int64x2_t)vtrn1q_s32(v13, v15);
  v22 = (int64x2_t)vtrn2q_s32(v13, v15);
  v23 = (int64x2_t)vtrn1q_s32(v14, v16);
  v24 = (int64x2_t)vtrn2q_s32(v14, v16);
  v25 = (int16x8_t)vzip1q_s64(v17, v21);
  v26 = (int16x8_t)vzip1q_s64(v19, v23);
  v27 = (int16x8_t)vzip1q_s64(v18, v22);
  v28 = (int16x8_t)vzip1q_s64(v20, v24);
  v29 = (int16x8_t)vzip2q_s64(v17, v21);
  v30 = (int16x8_t)vzip2q_s64(v19, v23);
  v31 = (int16x8_t)vzip2q_s64(v18, v22);
  v32 = (int16x8_t)vzip2q_s64(v20, v24);
  v33 = vaddq_s16(v32, v25);
  v34 = vaddq_s16(v31, v26);
  v35 = vaddq_s16(v30, v27);
  v36 = vaddq_s16(v29, v28);
  v37 = vsubq_s16(v25, v32);
  v38 = vsubq_s16(v26, v31);
  v39 = vsubq_s16(v27, v30);
  v40 = vsubq_s16(v28, v29);
  v41 = vaddq_s16(v36, v33);
  v42 = vaddq_s16(v35, v34);
  v43 = vsubq_s16(v33, v36);
  v44 = vsubq_s16(v34, v35);
  v45 = vsraq_n_s16(vaddq_s16(vaddq_s16(v38, v37), v39), v37, 1uLL);
  v46 = vsubq_s16(v37, vsraq_n_s16(vaddq_s16(v40, v39), v39, 1uLL));
  v47 = vsubq_s16(vaddq_s16(v37, v40), vsraq_n_s16(v38, v38, 1uLL));
  v48 = vsraq_n_s16(vaddq_s16(vsubq_s16(v38, v39), v40), v40, 1uLL);
  v49 = vaddq_s16(v41, v42);
  v50 = vsubq_s16(v41, v42);
  v51 = vshrq_n_s16(v43, 1uLL);
  v52 = vsraq_n_s16(v43, v44, 1uLL);
  v53 = vsubq_s16(v51, v44);
  v54 = vshrq_n_s16(v46, 2uLL);
  v55 = vsraq_n_s16(v46, v47, 2uLL);
  v56 = vsubq_s16(v47, v54);
  v57 = vshrq_n_s16(v45, 2uLL);
  v58 = vsraq_n_s16(v45, v48, 2uLL);
  v59 = vsubq_s16(v57, v48);
  v60 = (int32x4_t)vtrn1q_s16(v49, v58);
  v61 = (int32x4_t)vtrn2q_s16(v49, v58);
  v62 = (int32x4_t)vtrn1q_s16(v52, v55);
  v63 = (int32x4_t)vtrn2q_s16(v52, v55);
  v64 = (int32x4_t)vtrn1q_s16(v50, v56);
  v65 = (int32x4_t)vtrn2q_s16(v50, v56);
  v66 = (int32x4_t)vtrn1q_s16(v53, v59);
  v67 = (int32x4_t)vtrn2q_s16(v53, v59);
  v68 = (int64x2_t)vtrn1q_s32(v60, v62);
  v69 = (int64x2_t)vtrn2q_s32(v60, v62);
  v70 = (int64x2_t)vtrn1q_s32(v61, v63);
  v71 = (int64x2_t)vtrn2q_s32(v61, v63);
  v72 = (int64x2_t)vtrn1q_s32(v64, v66);
  v73 = (int64x2_t)vtrn2q_s32(v64, v66);
  v74 = (int64x2_t)vtrn1q_s32(v65, v67);
  v75 = (int64x2_t)vtrn2q_s32(v65, v67);
  v76 = (int16x8_t)vzip1q_s64(v68, v72);
  v77 = (int16x8_t)vzip1q_s64(v70, v74);
  v78 = (int16x8_t)vzip1q_s64(v69, v73);
  v79 = (int16x8_t)vzip1q_s64(v71, v75);
  v80 = (int16x8_t)vzip2q_s64(v68, v72);
  v81 = (int16x8_t)vzip2q_s64(v70, v74);
  v82 = (int16x8_t)vzip2q_s64(v69, v73);
  v83 = (int16x8_t)vzip2q_s64(v71, v75);
  v84 = vaddq_s16(v83, v76);
  v85 = vaddq_s16(v82, v77);
  v86 = vaddq_s16(v81, v78);
  v87 = vaddq_s16(v80, v79);
  v88 = vsubq_s16(v76, v83);
  v89 = vsubq_s16(v77, v82);
  v90 = vsubq_s16(v78, v81);
  v91 = vsubq_s16(v79, v80);
  v92 = vaddq_s16(v87, v84);
  v93 = vaddq_s16(v86, v85);
  v94 = vsubq_s16(v84, v87);
  v95 = vsubq_s16(v85, v86);
  v96 = vsraq_n_s16(vaddq_s16(vaddq_s16(v89, v88), v90), v88, 1uLL);
  v97 = vsubq_s16(v88, vsraq_n_s16(vaddq_s16(v91, v90), v90, 1uLL));
  v98 = vsubq_s16(vaddq_s16(v88, v91), vsraq_n_s16(v89, v89, 1uLL));
  v99 = vsraq_n_s16(vaddq_s16(vsubq_s16(v89, v90), v91), v91, 1uLL);
  *a2 = vaddq_s16(v92, v93);
  a2[1] = vsraq_n_s16(v96, v99, 2uLL);
  a2[2] = vsraq_n_s16(v94, v95, 1uLL);
  a2[3] = vsraq_n_s16(v97, v98, 2uLL);
  a2[4] = vsubq_s16(v92, v93);
  a2[5] = vsubq_s16(v98, vshrq_n_s16(v97, 2uLL));
  result = vsubq_s16(vshrq_n_s16(v96, 2uLL), v99);
  a2[6] = vsubq_s16(vshrq_n_s16(v94, 1uLL), v95);
  a2[7] = result;
  return result;
}

int16x8_t sub_215FCEF1C(int16x8_t *a1, int16x8_t *a2)
{
  int16x8_t v2;
  int16x8_t v3;
  int16x8_t v4;
  int16x8_t v5;
  int16x8_t v6;
  int16x8_t v7;
  int16x8_t v8;
  int32x4_t v9;
  int32x4_t v10;
  int32x4_t v11;
  int32x4_t v12;
  int32x4_t v13;
  int32x4_t v14;
  int32x4_t v15;
  int32x4_t v16;
  int64x2_t v17;
  int64x2_t v18;
  int64x2_t v19;
  int64x2_t v20;
  int64x2_t v21;
  int64x2_t v22;
  int64x2_t v23;
  int64x2_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int16x8_t v39;
  int16x8_t v40;
  int16x8_t v41;
  int16x8_t v42;
  int16x8_t v43;
  int16x8_t v44;
  int16x8_t v45;
  int16x8_t v46;
  int16x8_t v47;
  int16x8_t v48;
  int16x8_t v49;
  int16x8_t v50;
  int16x8_t v51;
  int16x8_t v52;
  int16x8_t v53;
  int16x8_t v54;
  int16x8_t v55;
  int16x8_t v56;
  int16x8_t v57;
  int16x8_t v58;
  int32x4_t v59;
  int32x4_t v60;
  int32x4_t v61;
  int32x4_t v62;
  int32x4_t v63;
  int32x4_t v64;
  int32x4_t v65;
  int32x4_t v66;
  int64x2_t v67;
  int64x2_t v68;
  int64x2_t v69;
  int64x2_t v70;
  int64x2_t v71;
  int64x2_t v72;
  int64x2_t v73;
  int64x2_t v74;
  int16x8_t v75;
  int16x8_t v76;
  int16x8_t v77;
  int16x8_t v78;
  int16x8_t v79;
  int16x8_t v80;
  int16x8_t v81;
  int16x8_t v82;
  int16x8_t v83;
  int16x8_t v84;
  int16x8_t v85;
  int16x8_t v86;
  int16x8_t v87;
  int16x8_t v88;
  int16x8_t v89;
  int16x8_t v90;
  int16x8_t v91;
  int16x8_t v92;
  int16x8_t v93;
  int16x8_t v94;
  int16x8_t v95;
  int16x8_t v96;
  int16x8_t v97;
  int16x8_t v98;
  int16x8_t v99;
  int16x8_t v100;
  int16x8_t v101;
  int16x8_t result;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v6 = a1[5];
  v7 = a1[6];
  v8 = a1[7];
  v9 = (int32x4_t)vtrn1q_s16(*a1, v2);
  v10 = (int32x4_t)vtrn2q_s16(*a1, v2);
  v11 = (int32x4_t)vtrn1q_s16(v3, v4);
  v12 = (int32x4_t)vtrn2q_s16(v3, v4);
  v13 = (int32x4_t)vtrn1q_s16(v5, v6);
  v14 = (int32x4_t)vtrn2q_s16(v5, v6);
  v15 = (int32x4_t)vtrn1q_s16(v7, v8);
  v16 = (int32x4_t)vtrn2q_s16(v7, v8);
  v17 = (int64x2_t)vtrn1q_s32(v9, v11);
  v18 = (int64x2_t)vtrn2q_s32(v9, v11);
  v19 = (int64x2_t)vtrn1q_s32(v10, v12);
  v20 = (int64x2_t)vtrn2q_s32(v10, v12);
  v21 = (int64x2_t)vtrn1q_s32(v13, v15);
  v22 = (int64x2_t)vtrn2q_s32(v13, v15);
  v23 = (int64x2_t)vtrn1q_s32(v14, v16);
  v24 = (int64x2_t)vtrn2q_s32(v14, v16);
  v25 = (int16x8_t)vzip1q_s64(v17, v21);
  v26 = (int16x8_t)vzip1q_s64(v19, v23);
  v27 = (int16x8_t)vzip1q_s64(v18, v22);
  v28 = (int16x8_t)vzip1q_s64(v20, v24);
  v29 = (int16x8_t)vzip2q_s64(v17, v21);
  v30 = (int16x8_t)vzip2q_s64(v19, v23);
  v31 = (int16x8_t)vzip2q_s64(v18, v22);
  v32 = (int16x8_t)vzip2q_s64(v20, v24);
  v33 = vaddq_s16(v29, v25);
  v34 = vsubq_s16(v25, v29);
  v35 = vsubq_s16(vshrq_n_s16(v27, 1uLL), v31);
  v36 = vsraq_n_s16(v27, v31, 1uLL);
  v37 = vsubq_s16(v30, vsraq_n_s16(vaddq_s16(v28, v32), v32, 1uLL));
  v38 = vsubq_s16(vaddq_s16(v32, v26), vsraq_n_s16(v28, v28, 1uLL));
  v39 = vaddq_s16(vsraq_n_s16(v30, v30, 1uLL), vsubq_s16(v32, v26));
  v40 = vsraq_n_s16(vaddq_s16(vaddq_s16(v28, v30), v26), v26, 1uLL);
  v41 = vaddq_s16(v36, v33);
  v42 = vsubq_s16(v33, v36);
  v43 = vaddq_s16(v35, v34);
  v44 = vsubq_s16(v34, v35);
  v45 = vshrq_n_s16(v37, 2uLL);
  v46 = vsraq_n_s16(v37, v40, 2uLL);
  v47 = vsubq_s16(v40, v45);
  v48 = vshrq_n_s16(v38, 2uLL);
  v49 = vsraq_n_s16(v38, v39, 2uLL);
  v50 = vsubq_s16(v48, v39);
  v51 = vaddq_s16(v47, v41);
  v52 = vaddq_s16(v50, v43);
  v53 = vaddq_s16(v49, v44);
  v54 = vaddq_s16(v46, v42);
  v55 = vsubq_s16(v42, v46);
  v56 = vsubq_s16(v44, v49);
  v57 = vsubq_s16(v43, v50);
  v58 = vsubq_s16(v41, v47);
  v59 = (int32x4_t)vtrn1q_s16(v51, v52);
  v60 = (int32x4_t)vtrn2q_s16(v51, v52);
  v61 = (int32x4_t)vtrn1q_s16(v53, v54);
  v62 = (int32x4_t)vtrn2q_s16(v53, v54);
  v63 = (int32x4_t)vtrn1q_s16(v55, v56);
  v64 = (int32x4_t)vtrn2q_s16(v55, v56);
  v65 = (int32x4_t)vtrn1q_s16(v57, v58);
  v66 = (int32x4_t)vtrn2q_s16(v57, v58);
  v67 = (int64x2_t)vtrn1q_s32(v59, v61);
  v68 = (int64x2_t)vtrn2q_s32(v59, v61);
  v69 = (int64x2_t)vtrn1q_s32(v60, v62);
  v70 = (int64x2_t)vtrn2q_s32(v60, v62);
  v71 = (int64x2_t)vtrn1q_s32(v63, v65);
  v72 = (int64x2_t)vtrn2q_s32(v63, v65);
  v73 = (int64x2_t)vtrn1q_s32(v64, v66);
  v74 = (int64x2_t)vtrn2q_s32(v64, v66);
  v75 = (int16x8_t)vzip1q_s64(v67, v71);
  v76 = (int16x8_t)vzip1q_s64(v69, v73);
  v77 = (int16x8_t)vzip1q_s64(v68, v72);
  v78 = (int16x8_t)vzip1q_s64(v70, v74);
  v79 = (int16x8_t)vzip2q_s64(v67, v71);
  v80 = (int16x8_t)vzip2q_s64(v69, v73);
  v81 = (int16x8_t)vzip2q_s64(v68, v72);
  v82 = (int16x8_t)vzip2q_s64(v70, v74);
  v83 = vaddq_s16(v79, v75);
  v84 = vsubq_s16(v75, v79);
  v85 = vsubq_s16(vshrq_n_s16(v77, 1uLL), v81);
  v86 = vsraq_n_s16(v77, v81, 1uLL);
  v87 = vsubq_s16(v80, vsraq_n_s16(vaddq_s16(v78, v82), v82, 1uLL));
  v88 = vsubq_s16(vaddq_s16(v82, v76), vsraq_n_s16(v78, v78, 1uLL));
  v89 = vaddq_s16(vsraq_n_s16(v80, v80, 1uLL), vsubq_s16(v82, v76));
  v90 = vsraq_n_s16(vaddq_s16(vaddq_s16(v78, v80), v76), v76, 1uLL);
  v91 = vaddq_s16(v86, v83);
  v92 = vsubq_s16(v83, v86);
  v93 = vaddq_s16(v85, v84);
  v94 = vsubq_s16(v84, v85);
  v95 = vshrq_n_s16(v87, 2uLL);
  v96 = vsraq_n_s16(v87, v90, 2uLL);
  v97 = vsubq_s16(v90, v95);
  v98 = vshrq_n_s16(v88, 2uLL);
  v99 = vsraq_n_s16(v88, v89, 2uLL);
  v100 = vsubq_s16(v98, v89);
  v101 = vaddq_s16(v100, v93);
  result = vrshrq_n_s16(vsubq_s16(v93, v100), 6uLL);
  *a2 = vrshrq_n_s16(vaddq_s16(v97, v91), 6uLL);
  a2[1] = vrshrq_n_s16(v101, 6uLL);
  a2[2] = vrshrq_n_s16(vaddq_s16(v99, v94), 6uLL);
  a2[3] = vrshrq_n_s16(vaddq_s16(v96, v92), 6uLL);
  a2[4] = vrshrq_n_s16(vsubq_s16(v92, v96), 6uLL);
  a2[5] = vrshrq_n_s16(vsubq_s16(v94, v99), 6uLL);
  a2[6] = result;
  a2[7] = vrshrq_n_s16(vsubq_s16(v91, v97), 6uLL);
  return result;
}

uint64_t sub_215FCF138(uint64_t result, _QWORD *a2, int *a3)
{
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  BOOL v8;
  int v9;
  int v10;

  v4 = a3[4];
  v3 = a3[5];
  v5 = *((_QWORD *)a3 + 27);
  v6 = v4 - v3;
  v7 = *a3;
  *((_OWORD *)a3 + 8) = 0u;
  *((_OWORD *)a3 + 9) = 0u;
  if (v7)
    v8 = v4 <= (int)result;
  else
    v8 = 1;
  if (!v8)
  {
    *((_QWORD *)a3 + 16) = a2;
    a2[14] = *(_QWORD *)(*(_QWORD *)(v5 + 1256) + 8 * (v4 - 1));
    if (v6 > (int)result)
    {
      *((_QWORD *)a3 + 19) = a2 + 150;
      a2[164] = *(_QWORD *)(*(_QWORD *)(v5 + 1256) + 8 * (v6 - 1));
    }
  }
  v9 = v6 + 1;
  v10 = v7 + 1;
  if (v6 >= (int)result)
  {
    *((_QWORD *)a3 + 17) = a2 + 50;
    a2[64] = *(_QWORD *)(*(_QWORD *)(v5 + 1256) + 8 * v6);
  }
  if (v10 != v3 && v10 != 0 && v9 >= (int)result)
  {
    *((_QWORD *)a3 + 18) = a2 + 100;
    a2[114] = *(_QWORD *)(*(_QWORD *)(v5 + 1256) + 8 * v9);
  }
  return result;
}

int64x2_t sub_215FCF1E4(int *a1, unsigned int a2, int64x2_t result)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  __int128 *v9;
  uint64_t v10;
  char v11;
  int v12;
  unsigned int v13;
  uint64_t v14;
  __int128 v15;
  int64x2_t *v16;
  int64x2_t *v17;
  int64x2_t *v18;
  int64x2_t *v19;
  __int128 *v20;
  _OWORD *v21;
  uint64_t v22;
  __int128 v23;
  int8x16_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int32x4_t v27;
  int64x2_t *v28;
  int32x4_t v29;
  int64x2_t *v30;
  int32x4_t v31;
  int64x2_t *v32;
  int32x4_t v33;
  int64x2_t v34;

  v3 = a1[4];
  v4 = *((_QWORD *)a1 + 27);
  v5 = *((_QWORD *)a1 + 6);
  v6 = *(unsigned __int8 *)(v5 + 272);
  if (*(_BYTE *)(v5 + 272))
  {
    v8 = *a1;
    v7 = a1[1];
    v9 = *(__int128 **)(*((_QWORD *)a1 + 22) + 112);
    v10 = **((_QWORD **)a1 + 42);
    v11 = *((_BYTE *)a1 + 31);
    v12 = *(_DWORD *)(v4 + 1168);
    v13 = 2 * v12;
    v14 = sub_2160CE3E8(*(_QWORD *)(*(_QWORD *)(v4 + 1152) + 8 * a2), v6);
    *(_QWORD *)(*(_QWORD *)(v4 + 1256) + 8 * v3) = v14;
    v15 = *v9;
    *(_OWORD *)v14 = *v9;
    *(_BYTE *)(v14 + 14) = v11;
    v16 = (int64x2_t *)(v10 + 8 * (4 * v8) + 8 * (4 * v7 * 4 * v12));
    result = (int64x2_t)vqtbl1q_s8((int8x16_t)(unint64_t)v14, (int8x16_t)xmmword_2160EE590);
    if ((_DWORD)v6 == 1)
    {
      *v16 = result;
      v16[1] = result;
      v17 = &v16[v13];
      *v17 = result;
      v17[1] = result;
      v18 = (int64x2_t *)((char *)v16 + 8 * (8 * v12));
      *v18 = result;
      v18[1] = result;
      v19 = &v18[v13];
      *v19 = result;
      v19[1] = result;
    }
    else
    {
      v20 = v9 + 1;
      v21 = (_OWORD *)(v14 + 16);
      v22 = v6 - 1;
      do
      {
        v23 = *v20++;
        *v21++ = v23;
        --v22;
      }
      while (v22);
      v24 = *(int8x16_t *)&word_254E10E30[40 * WORD5(v15) + 8];
      v25 = (int16x8_t)vzip2q_s8(v24, (int8x16_t)0);
      v26 = (int16x8_t)vzip1q_s8(v24, (int8x16_t)0);
      v27 = (int32x4_t)vzip1q_s16(v26, (int16x8_t)0);
      *v16 = vaddq_s64((int64x2_t)vzip1q_s32(v27, (int32x4_t)0), result);
      v16[1] = vaddq_s64((int64x2_t)vzip2q_s32(v27, (int32x4_t)0), result);
      v28 = &v16[v13];
      v29 = (int32x4_t)vzip2q_s16(v26, (int16x8_t)0);
      *v28 = vaddq_s64((int64x2_t)vzip1q_s32(v29, (int32x4_t)0), result);
      v28[1] = vaddq_s64((int64x2_t)vzip2q_s32(v29, (int32x4_t)0), result);
      v30 = &v28[v13];
      v31 = (int32x4_t)vzip1q_s16(v25, (int16x8_t)0);
      *v30 = vaddq_s64((int64x2_t)vzip1q_s32(v31, (int32x4_t)0), result);
      v30[1] = vaddq_s64((int64x2_t)vzip2q_s32(v31, (int32x4_t)0), result);
      v32 = &v30[v13];
      v33 = (int32x4_t)vzip2q_s16(v25, (int16x8_t)0);
      v34 = vaddq_s64((int64x2_t)vzip1q_s32(v33, (int32x4_t)0), result);
      result = vaddq_s64((int64x2_t)vzip2q_s32(v33, (int32x4_t)0), result);
      *v32 = v34;
      v32[1] = result;
    }
  }
  else if (*(_DWORD *)(v4 + 1164) > (int)v3)
  {
    *(_QWORD *)(*(_QWORD *)(v4 + 1256) + 8 * v3) = *(_QWORD *)(v4 + 8 * *((unsigned __int8 *)a1 + 31) + 1232);
  }
  return result;
}

uint64_t sub_215FCF3A0(unint64_t *a1, int a2, uint64_t *a3, int a4, int8x16_t a5, int8x16_t a6, int8x16_t a7, int8x16_t a8, int8x16_t a9, int8x16_t a10, int8x16_t a11, int8x16_t a12)
{
  int8x16_t v12;
  int8x16_t v13;
  int8x16_t v14;
  int8x16_t v15;
  int8x16_t v16;
  int8x16_t v17;
  int8x16_t v18;
  int8x16_t v19;
  uint8x16_t v20;
  uint8x16_t v21;
  uint8x16_t v22;
  uint8x16_t v23;
  uint8x16_t v24;
  uint8x16_t v25;
  uint8x16_t v26;
  uint8x16_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int16x8_t v39;
  int16x8_t v40;
  int16x8_t v41;
  int16x8_t v42;
  int16x8_t v43;
  int16x8_t v44;
  int16x8_t v45;
  int16x8_t v46;
  int16x8_t v47;
  int16x8_t v48;
  int16x8_t v49;
  int16x8_t v50;
  int16x8_t v51;
  int16x8_t v52;
  int16x8_t v53;
  int16x8_t v54;
  int16x8_t v55;
  int32x4_t v56;
  int32x4_t v57;
  int32x4_t v58;
  int32x4_t v59;
  int32x4_t v60;
  int32x4_t v61;
  int32x4_t v62;
  int32x4_t v63;
  int64x2_t v64;
  int64x2_t v65;
  int64x2_t v66;
  int64x2_t v67;
  int64x2_t v68;
  int64x2_t v69;
  int64x2_t v70;
  int64x2_t v71;
  int16x8_t v72;
  int16x8_t v73;
  int16x8_t v74;
  int16x8_t v75;
  int16x8_t v76;
  int16x8_t v77;
  int16x8_t v78;
  int16x8_t v79;
  int16x8_t v80;
  int16x8_t v81;
  int16x8_t v82;
  int16x8_t v83;
  int16x8_t v84;
  int16x8_t v85;
  int16x8_t v86;
  int16x8_t v87;
  int16x8_t v88;
  int16x8_t v89;
  int16x8_t v90;
  int16x8_t v91;
  int16x8_t v92;
  int16x8_t v93;
  int16x8_t v94;
  int16x8_t v95;
  int16x8_t v96;
  int16x8_t v97;
  int16x8_t v98;
  int16x8_t v99;
  uint16x8_t v100;

  a5.i64[0] = *(unint64_t *)((char *)a1 + a2);
  a6.i64[0] = *(unint64_t *)((char *)a1 + 2 * a2);
  a7.i64[0] = *(unint64_t *)((char *)a1 + 3 * a2);
  a8.i64[0] = *(unint64_t *)((char *)a1 + 4 * a2);
  a9.i64[0] = *a1;
  a10.i64[0] = *(unint64_t *)((char *)a1 + 5 * a2);
  a11.i64[0] = *(unint64_t *)((char *)a1 + 6 * a2);
  a12.i64[0] = *(unint64_t *)((char *)&a1[a2] - a2);
  v12.i64[0] = *a3;
  v13.i64[0] = *(uint64_t *)((char *)a3 + a4);
  v14.i64[0] = *(uint64_t *)((char *)a3 + 2 * a4);
  v15.i64[0] = *(uint64_t *)((char *)a3 + 3 * a4);
  v16.i64[0] = *(uint64_t *)((char *)a3 + 4 * a4);
  v17.i64[0] = *(uint64_t *)((char *)a3 + 5 * a4);
  v18.i64[0] = *(uint64_t *)((char *)a3 + 6 * a4);
  v19.i64[0] = *(uint64_t *)((char *)&a3[a4] - a4);
  v20 = (uint8x16_t)vzip1q_s8(v12, a9);
  v21 = (uint8x16_t)vzip1q_s8(v13, a5);
  v22 = (uint8x16_t)vzip1q_s8(v14, a6);
  v23 = (uint8x16_t)vzip1q_s8(v15, a7);
  v24 = (uint8x16_t)vzip1q_s8(v16, a8);
  v25 = (uint8x16_t)vzip1q_s8(v17, a10);
  v26 = (uint8x16_t)vzip1q_s8(v18, a11);
  v27 = (uint8x16_t)vzip1q_s8(v19, a12);
  v28 = vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v24.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v24), (int16x8_t)xmmword_2160EE5A0));
  v29 = vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v25.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v25), (int16x8_t)xmmword_2160EE5A0));
  v30 = vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v26.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v26), (int16x8_t)xmmword_2160EE5A0));
  v31 = vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v27.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v27), (int16x8_t)xmmword_2160EE5A0));
  v32 = vaddq_s16(v28, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v20.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v20), (int16x8_t)xmmword_2160EE5A0)));
  v33 = vaddq_s16(v29, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v21.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v21), (int16x8_t)xmmword_2160EE5A0)));
  v34 = vsubq_s16(vaddq_s16(v28, v28), v32);
  v35 = vsubq_s16(vaddq_s16(v29, v29), v33);
  v36 = vaddq_s16(v30, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v22.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v22), (int16x8_t)xmmword_2160EE5A0)));
  v37 = vaddq_s16(v31, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v23.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v23), (int16x8_t)xmmword_2160EE5A0)));
  v38 = vsubq_s16(vaddq_s16(v30, v30), v36);
  v39 = vsubq_s16(vaddq_s16(v31, v31), v37);
  v40 = vaddq_s16(v36, v32);
  v41 = vaddq_s16(v37, v33);
  v42 = vsubq_s16(vaddq_s16(v36, v36), v40);
  v43 = vsubq_s16(vaddq_s16(v37, v37), v41);
  v44 = vaddq_s16(v38, v34);
  v45 = vaddq_s16(v39, v35);
  v46 = vsubq_s16(vaddq_s16(v38, v38), v44);
  v47 = vsubq_s16(vaddq_s16(v39, v39), v45);
  v48 = vaddq_s16(v41, v40);
  v49 = vaddq_s16(v43, v42);
  v50 = vsubq_s16(vaddq_s16(v41, v41), v48);
  v51 = vsubq_s16(vaddq_s16(v43, v43), v49);
  v52 = vaddq_s16(v45, v44);
  v53 = vaddq_s16(v47, v46);
  v54 = vsubq_s16(vaddq_s16(v45, v45), v52);
  v55 = vsubq_s16(vaddq_s16(v47, v47), v53);
  v56 = (int32x4_t)vzip1q_s16(v48, v50);
  v57 = (int32x4_t)vzip2q_s16(v48, v50);
  v58 = (int32x4_t)vzip1q_s16(v49, v51);
  v59 = (int32x4_t)vzip2q_s16(v49, v51);
  v60 = (int32x4_t)vzip1q_s16(v52, v54);
  v61 = (int32x4_t)vzip2q_s16(v52, v54);
  v62 = (int32x4_t)vzip1q_s16(v53, v55);
  v63 = (int32x4_t)vzip2q_s16(v53, v55);
  v64 = (int64x2_t)vzip1q_s32(v56, v58);
  v65 = (int64x2_t)vzip2q_s32(v56, v58);
  v66 = (int64x2_t)vzip1q_s32(v57, v59);
  v67 = (int64x2_t)vzip2q_s32(v57, v59);
  v68 = (int64x2_t)vzip1q_s32(v60, v62);
  v69 = (int64x2_t)vzip2q_s32(v60, v62);
  v70 = (int64x2_t)vzip1q_s32(v61, v63);
  v71 = (int64x2_t)vzip2q_s32(v61, v63);
  v72 = (int16x8_t)vzip1q_s64(v64, v68);
  v73 = (int16x8_t)vzip2q_s64(v64, v68);
  v74 = (int16x8_t)vzip1q_s64(v66, v70);
  v75 = (int16x8_t)vzip2q_s64(v66, v70);
  v76 = (int16x8_t)vzip1q_s64(v65, v69);
  v77 = (int16x8_t)vzip2q_s64(v65, v69);
  v78 = (int16x8_t)vzip1q_s64(v67, v71);
  v79 = (int16x8_t)vzip2q_s64(v67, v71);
  v80 = vaddq_s16(v72, v74);
  v81 = vaddq_s16(v73, v75);
  v82 = vsubq_s16(vaddq_s16(v74, v74), v80);
  v83 = vsubq_s16(vaddq_s16(v75, v75), v81);
  v84 = vaddq_s16(v76, v78);
  v85 = vaddq_s16(v77, v79);
  v86 = vsubq_s16(vaddq_s16(v78, v78), v84);
  v87 = vsubq_s16(vaddq_s16(v79, v79), v85);
  v88 = vaddq_s16(v80, v84);
  v89 = vaddq_s16(v81, v85);
  v90 = vsubq_s16(vaddq_s16(v84, v84), v88);
  v91 = vsubq_s16(vaddq_s16(v85, v85), v89);
  v92 = vaddq_s16(v82, v86);
  v93 = vaddq_s16(v83, v87);
  v94 = vsubq_s16(vaddq_s16(v86, v86), v92);
  v95 = vsubq_s16(vaddq_s16(v87, v87), v93);
  v96 = vaddq_s16(v88, v89);
  v97 = vaddq_s16(v90, v91);
  v98 = vaddq_s16(v92, v93);
  v99 = vaddq_s16(v94, v95);
  v100 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(vabsq_s16(vsubq_s16(vaddq_s16(v89, v89), v96)), vabsq_s16(v96)), vabsq_s16(v97)), vaddq_s16(vabsq_s16(vsubq_s16(vaddq_s16(v91, v91), v97)), vabsq_s16(v98))), vaddq_s16(vaddq_s16(vabsq_s16(vsubq_s16(vaddq_s16(v93, v93), v98)), vabsq_s16(v99)), vabsq_s16(vsubq_s16(vaddq_s16(v95, v95), v99))));
  v89.i64[0] = -1;
  v89.i64[1] = -1;
  return (vpaddq_s16(vpaddq_s16(vpaddq_s16((int16x8_t)vshlq_u16(v100, (uint16x8_t)v89), (int16x8_t)0), (int16x8_t)0), (int16x8_t)0).u16[0]+ 1) >> 1;
}

uint64_t sub_215FCF6C0(int16x8_t *a1, unsigned int a2)
{
  int v4;
  int v5;
  int v6;

  v4 = sub_2160C5930(a1, a2);
  v5 = sub_2160C5930(a1 + 1, a2) + v4;
  v6 = sub_2160C5930(a1 + 16, a2);
  return v5 + v6 + sub_2160C5930(a1 + 17, a2);
}

uint64_t sub_215FCF724(unint64_t a1, int32x4_t a2, int8x16_t a3, double a4, double a5, double a6, int8x16_t a7, int16x8_t a8)
{
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  _BOOL4 v12;
  _BOOL4 v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  unsigned int v18;
  uint64_t v19;
  unsigned int v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  uint8x8_t v28;
  uint64_t v29;
  int16x8_t *v30;
  int16x8_t *v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD *v36;

  v9 = *(_BYTE **)(a1 + 40);
  v10 = *(_BYTE **)(a1 + 128);
  v11 = *(_QWORD *)(a1 + 136);
  v12 = v11 != 0;
  if (!*(_BYTE *)(*(_QWORD *)(a1 + 48) + 4))
  {
    v13 = v10 != 0;
    goto LABEL_25;
  }
  if (v10)
  {
    if (v10[48] == 34)
    {
      v13 = v10[32] != 34 && v10 != 0;
      if (!v11)
        goto LABEL_16;
LABEL_11:
      if (*(_BYTE *)(v11 + 48) == 34)
      {
        if (*(_BYTE *)(v11 + 32) == 34)
          v12 = 0;
      }
      else
      {
        v12 = 1;
      }
      goto LABEL_18;
    }
    v13 = 1;
    if (v11)
      goto LABEL_11;
  }
  else
  {
    v13 = 0;
    if (v11)
      goto LABEL_11;
  }
LABEL_16:
  v12 = 0;
LABEL_18:
  if ((*(_BYTE *)(a1 + 185) & (v10 != 0)) != 0 && *(_BYTE *)(a1 + 31) == 1 && v10[144] == 1 && v13)
  {
    v14 = *(_QWORD *)(a1 + 168);
    v13 = *(_BYTE *)(v14 + 48) != 34 || *(unsigned __int8 *)(v14 + 32) != 34;
  }
LABEL_25:
  v15 = v9[52];
  *(_BYTE *)(*(_QWORD *)(a1 + 176) + 64) = 0;
  if (v9[1] || v9[2])
  {
LABEL_27:
    sub_21609F5B4(a1, *(_QWORD *)(a1 + 64), a1 + 1424192);
    v16 = *(_QWORD *)(a1 + 216);
    v17 = *(_DWORD *)(v16 + 168);
    if (*(_BYTE *)(a1 + 31))
    {
      v18 = *(_DWORD *)(a1 + 16);
      v19 = *(_QWORD *)(v16 + 64)
          + 32 * v17 * (v18 / (2 * *(_DWORD *)(a1 + 20)))
          + ((8 * (v18 % (2 * *(_DWORD *)(a1 + 20)))) & 0xFFFFFFF0);
      v20 = ((int)(v18 << 31) >> 31) & (16 * v17);
    }
    else
    {
      v19 = *(_QWORD *)(v16 + 64) + (16 * *(_DWORD *)a1);
      v20 = 16 * v17 * *(_DWORD *)(a1 + 4);
    }
    sub_216086D08(v19 + v20);
    v29 = *(_QWORD *)(a1 + 176);
    *(_QWORD *)(v29 + 32) = 0x1212121212121212;
    *(_QWORD *)(v29 + 40) = 0x1212121212121212;
    goto LABEL_31;
  }
  if (v9[3] == 1)
  {
    *(_BYTE *)(*(_QWORD *)(a1 + 176) + 64) = 1;
    v34 = *(_QWORD *)(a1 + 64);
    if (v15)
    {
      v35 = a1 + 1422656;
      v36 = *(_OWORD **)(a1 + 64);
      if (*(_BYTE *)(a1 + 31))
        sub_2160A0428(a1, v36, v35);
      else
        sub_2160A9190(a1, v36, v35, *(double *)a2.i64, a3, a4, a5, a6, a7);
    }
    else
    {
      v34 += 768;
    }
    if (*(_BYTE *)(a1 + 31))
      sub_216090D84((int *)a1, v34, *(double *)a2.i64, *(double *)a3.i64, a4, *(int8x8_t *)&a5, *(uint8x8_t *)&a6);
    else
      sub_21608E484((int *)a1, v34, *(double *)a2.i64, *(double *)a3.i64, a4, a5, a6, (int16x8_t)a7, a8);
  }
  else
  {
    if (v9[3])
      goto LABEL_27;
    v33 = *(_QWORD *)(a1 + 64);
    if (v15)
      sub_2160A5C40(a1, *(_OWORD **)(a1 + 64));
    else
      v33 += 768;
    if (*(_BYTE *)(a1 + 31))
      sub_21608FDCC((int *)a1, v33, a2);
    else
      sub_2160870CC((int *)a1, v33);
  }
LABEL_31:
  v30 = *(int16x8_t **)(a1 + 64);
  if (!v9[53])
  {
    v31 = v30 + 48;
    return sub_216085DC8((int *)a1, v31, v12, v13, v13, *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + 289), v21, v22, v23, v24, v25, v26, v27, v28);
  }
  v31 = v30 + 32;
  result = sub_2160AA18C(a1, (int16x8_t *)v30[32].i8);
  if (!(_DWORD)result)
    return sub_216085DC8((int *)a1, v31, v12, v13, v13, *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + 289), v21, v22, v23, v24, v25, v26, v27, v28);
  return result;
}

uint64_t sub_215FCF9F8(unint64_t a1, double a2, int8x16_t a3, double a4, double a5, double a6, int8x16_t a7, int16x8_t a8)
{
  _BYTE *v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v9 = *(_BYTE **)(a1 + 40);
  v10 = v9[52];
  *(_BYTE *)(*(_QWORD *)(a1 + 176) + 64) = 0;
  if (!v9[1] && !v9[2])
  {
    if (v9[3] == 1)
    {
      *(_BYTE *)(*(_QWORD *)(a1 + 176) + 64) = 1;
      v19 = *(_QWORD *)(a1 + 64);
      if (v10)
        sub_2160A9190(a1, *(_OWORD **)(a1 + 64), a1 + 1422656, a2, a3, a4, a5, a6, a7);
      else
        v19 += 768;
      sub_21608E484((int *)a1, v19, a2, *(double *)a3.i64, a4, a5, a6, (int16x8_t)a7, a8);
    }
    else
    {
      if (v9[3])
        goto LABEL_3;
      v18 = *(_QWORD *)(a1 + 64);
      if (v10)
        sub_2160A5C40(a1, *(_OWORD **)(a1 + 64));
      else
        v18 += 768;
      sub_2160870CC((int *)a1, v18);
    }
    return 0;
  }
LABEL_3:
  sub_21609F5B4(a1, *(_QWORD *)(a1 + 64), a1 + 1424192);
  v11 = *(_QWORD *)(a1 + 216);
  v12 = *(_DWORD *)(v11 + 168);
  if (*(_BYTE *)(a1 + 31) == 1)
  {
    v15 = *(_DWORD *)(a1 + 16);
    v13 = *(_QWORD *)(v11 + 64)
        + 32 * v12 * (v15 / (2 * *(_DWORD *)(a1 + 20)))
        + ((8 * (v15 % (2 * *(_DWORD *)(a1 + 20)))) & 0xFFFFFFF0);
    v14 = ((int)(v15 << 31) >> 31) & (16 * v12);
  }
  else
  {
    v13 = *(_QWORD *)(v11 + 64) + (16 * *(_DWORD *)a1);
    v14 = 16 * *(_DWORD *)(a1 + 4) * v12;
  }
  result = sub_216086D08(v13 + v14);
  v17 = *(_QWORD *)(a1 + 176);
  *(_QWORD *)(v17 + 32) = 0x1212121212121212;
  *(_QWORD *)(v17 + 40) = 0x1212121212121212;
  return result;
}

uint64_t sub_215FCFC40(uint64_t a1, int32x4_t a2, int8x16_t a3, double a4, double a5, double a6, int8x16_t a7, int16x8_t a8)
{
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  _BOOL4 v12;
  _BOOL4 v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  char v23;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  uint8x8_t v32;
  uint64_t v33;
  int16x8_t *v34;
  int16x8_t *v35;
  uint64_t result;
  uint64_t v37;
  int v38;
  uint64_t v39;
  _BOOL4 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD *v45;

  v9 = *(_BYTE **)(a1 + 40);
  v10 = *(_BYTE **)(a1 + 128);
  v11 = *(_QWORD *)(a1 + 136);
  v12 = v11 != 0;
  if (!*(_BYTE *)(*(_QWORD *)(a1 + 48) + 4))
  {
    v13 = v10 != 0;
    goto LABEL_25;
  }
  if (v10)
  {
    if (v10[48] == 34)
    {
      v13 = v10[32] != 34 && v10 != 0;
      if (!v11)
        goto LABEL_16;
LABEL_11:
      if (*(_BYTE *)(v11 + 48) == 34)
      {
        if (*(_BYTE *)(v11 + 32) == 34)
          v12 = 0;
      }
      else
      {
        v12 = 1;
      }
      goto LABEL_18;
    }
    v13 = 1;
    if (v11)
      goto LABEL_11;
  }
  else
  {
    v13 = 0;
    if (v11)
      goto LABEL_11;
  }
LABEL_16:
  v12 = 0;
LABEL_18:
  if ((*(_BYTE *)(a1 + 185) & (v10 != 0)) != 0 && *(_BYTE *)(a1 + 31) == 1 && v10[144] == 1 && v13)
  {
    v14 = *(_QWORD *)(a1 + 168);
    v13 = *(_BYTE *)(v14 + 48) != 34 || *(unsigned __int8 *)(v14 + 32) != 34;
  }
LABEL_25:
  v15 = v9[52];
  *(_BYTE *)(*(_QWORD *)(a1 + 176) + 64) = 0;
  if (!v9[1] && !v9[2])
  {
    if (v9[3] == 1)
    {
      *(_BYTE *)(*(_QWORD *)(a1 + 176) + 64) = 1;
      v43 = *(_QWORD *)(a1 + 64);
      if (v15)
      {
        v44 = a1 + 1422656;
        v45 = *(_OWORD **)(a1 + 64);
        if (*(_BYTE *)(a1 + 31))
          sub_2160A3034(a1, v45, v44);
        else
          sub_2160A9990(a1, v45, v44, *(double *)a2.i64, a3, a4, a5, a6, a7);
      }
      else
      {
        v43 += 768;
      }
      if (*(_BYTE *)(a1 + 31))
        sub_216090D84((int *)a1, v43, *(double *)a2.i64, *(double *)a3.i64, a4, *(int8x8_t *)&a5, *(uint8x8_t *)&a6);
      else
        sub_21608E484((int *)a1, v43, *(double *)a2.i64, *(double *)a3.i64, a4, a5, a6, (int16x8_t)a7, a8);
      goto LABEL_36;
    }
    if (!v9[3])
    {
      v42 = *(_QWORD *)(a1 + 64);
      if (v15)
        sub_2160A8DBC(a1, *(_OWORD **)(a1 + 64));
      else
        v42 += 768;
      if (*(_BYTE *)(a1 + 31))
        sub_21608FDCC((int *)a1, v42, a2);
      else
        sub_2160870CC((int *)a1, v42);
      goto LABEL_36;
    }
  }
  sub_21609FD64(a1, *(_QWORD *)(a1 + 64), a1 + 1424288);
  v16 = *(_QWORD *)(a1 + 216);
  v17 = *(_DWORD *)(v16 + 168);
  if (*(_BYTE *)(a1 + 31) == 2)
  {
    v18 = *(_DWORD *)(a1 + 16);
    v19 = *(_QWORD *)(v16 + 64)
        + 32 * v17 * (v18 / (2 * *(_DWORD *)(a1 + 20)))
        + ((8 * (v18 % (2 * *(_DWORD *)(a1 + 20)))) & 0xFFFFFFF0);
    v17 &= (int)(v18 << 31) >> 31;
  }
  else
  {
    v20 = *(_DWORD *)(a1 + 4);
    v21 = *(unsigned __int8 *)(v16 + 32);
    v19 = *(_QWORD *)(v16 + 64) + (16 * *(_DWORD *)a1);
    v22 = 32 * v20 * v17;
    if (v21)
    {
      v23 = 5;
    }
    else
    {
      v22 = 16 * v20 * v17;
      v23 = 4;
    }
    v24 = v19 + (v20 << v23) * v17;
    if (*(_BYTE *)(a1 + 30))
      v19 = v24;
    else
      v17 = v22;
  }
  sub_216086D08(v19 + v17);
  v33 = *(_QWORD *)(a1 + 176);
  *(_QWORD *)(v33 + 32) = 0x1212121212121212;
  *(_QWORD *)(v33 + 40) = 0x1212121212121212;
LABEL_36:
  v34 = *(int16x8_t **)(a1 + 64);
  if (v9[53])
  {
    v35 = v34 + 32;
    result = sub_2160AA24C(a1, (int16x8_t *)v34[32].i8);
    if ((_DWORD)result)
      return result;
  }
  else
  {
    v35 = v34 + 48;
  }
  v37 = *(_QWORD *)(a1 + 48);
  v38 = *(unsigned __int8 *)(v37 + 289);
  v39 = *(_QWORD *)(a1 + 128);
  v40 = v13;
  if (v39)
  {
    v40 = v13;
    if (*(_BYTE *)(a1 + 31) == 2)
    {
      v40 = v13;
      if (!*(_BYTE *)(v39 + 144))
      {
        v40 = v13;
        if (*(_BYTE *)(v37 + 4))
        {
          v41 = *(_QWORD *)(a1 + 168);
          v40 = *(_BYTE *)(v41 + 48) != 34 || *(_BYTE *)(v41 + 32) != 34;
        }
      }
    }
  }
  return sub_216085DC8((int *)a1, v35, v12, v13, v40, v38, v25, v26, v27, v28, v29, v30, v31, v32);
}

uint64_t sub_215FCFFAC(uint64_t a1)
{
  uint64_t v1;
  _WORD *v2;
  __int16 v3;

  if ((((_BYTE)a1 + 16) & 0xF) != 0)
    return 4294958327;
  v2 = (_WORD *)(a1 + 78);
  if (*(_BYTE *)a1)
  {
    v3 = 0;
    *(_BYTE *)(a1 + 272) = 4;
    *(_QWORD *)(a1 + 16) = 0;
    *(_WORD *)(a1 + 30) = 768;
    *(_WORD *)(a1 + 46) = 768;
    *(_WORD *)(a1 + 62) = 768;
    *(_WORD *)(a1 + 24) = 8224;
    *(_QWORD *)(a1 + 32) = 0;
    *(_WORD *)(a1 + 40) = 8224;
    *(_QWORD *)(a1 + 48) = 0;
    *(_WORD *)(a1 + 56) = 8224;
    *(_QWORD *)(a1 + 64) = 0;
    *(_WORD *)(a1 + 72) = 8224;
  }
  else
  {
    *(_BYTE *)(a1 + 272) = 16;
    *(_QWORD *)(a1 + 16) = 0;
    *(_WORD *)(a1 + 24) = 8224;
    *(_WORD *)(a1 + 30) = 768;
    *(_QWORD *)(a1 + 32) = 0;
    *(_WORD *)(a1 + 40) = 8224;
    *(_WORD *)(a1 + 46) = 768;
    *(_QWORD *)(a1 + 48) = 0;
    *(_WORD *)(a1 + 56) = 8224;
    *(_WORD *)(a1 + 62) = 768;
    *(_QWORD *)(a1 + 64) = 0;
    *(_WORD *)(a1 + 72) = 8224;
    *(_WORD *)(a1 + 78) = 768;
    *(_QWORD *)(a1 + 80) = 0;
    *(_WORD *)(a1 + 88) = 8224;
    *(_WORD *)(a1 + 94) = 768;
    *(_QWORD *)(a1 + 96) = 0;
    *(_WORD *)(a1 + 104) = 8224;
    *(_WORD *)(a1 + 110) = 768;
    *(_QWORD *)(a1 + 112) = 0;
    *(_WORD *)(a1 + 120) = 8224;
    *(_WORD *)(a1 + 126) = 768;
    *(_QWORD *)(a1 + 128) = 0;
    *(_WORD *)(a1 + 136) = 8224;
    *(_WORD *)(a1 + 142) = 768;
    *(_QWORD *)(a1 + 144) = 0;
    *(_WORD *)(a1 + 152) = 8224;
    *(_WORD *)(a1 + 158) = 768;
    *(_QWORD *)(a1 + 160) = 0;
    *(_WORD *)(a1 + 168) = 8224;
    *(_WORD *)(a1 + 174) = 768;
    *(_QWORD *)(a1 + 176) = 0;
    *(_WORD *)(a1 + 184) = 8224;
    *(_WORD *)(a1 + 190) = 768;
    *(_QWORD *)(a1 + 192) = 0;
    *(_WORD *)(a1 + 200) = 8224;
    *(_WORD *)(a1 + 206) = 768;
    *(_QWORD *)(a1 + 208) = 0;
    *(_WORD *)(a1 + 216) = 8224;
    *(_WORD *)(a1 + 222) = 768;
    *(_QWORD *)(a1 + 224) = 0;
    *(_WORD *)(a1 + 232) = 8224;
    *(_WORD *)(a1 + 238) = 768;
    *(_QWORD *)(a1 + 240) = 0;
    *(_WORD *)(a1 + 248) = 8224;
    *(_WORD *)(a1 + 254) = 768;
    *(_WORD *)(a1 + 264) = 8224;
    v2 = (_WORD *)(a1 + 270);
    v3 = 255;
    *(_QWORD *)(a1 + 256) = 0;
  }
  v1 = 0;
  *v2 = 768;
  *(_WORD *)(a1 + 26) = v3;
  *(_DWORD *)(a1 + 8) = 3;
  return v1;
}

uint64_t sub_215FD0104(uint64_t a1)
{
  uint64_t v1;
  _OWORD *v2;
  __int16 v3;

  if ((((_BYTE)a1 + 16) & 0xF) != 0)
    return 4294958327;
  v2 = (_OWORD *)(a1 + 48);
  if (*(_BYTE *)a1)
  {
    v3 = 0;
    *(_BYTE *)(a1 + 272) = 4;
    *(_OWORD *)(a1 + 16) = xmmword_2160EE5B0;
    *(_OWORD *)(a1 + 32) = xmmword_2160EE5B0;
  }
  else
  {
    *(_BYTE *)(a1 + 272) = 16;
    *(_OWORD *)(a1 + 16) = xmmword_2160EE5B0;
    *(_OWORD *)(a1 + 32) = xmmword_2160EE5B0;
    *(_OWORD *)(a1 + 48) = xmmword_2160EE5B0;
    *(_OWORD *)(a1 + 80) = xmmword_2160EE5B0;
    *(_OWORD *)(a1 + 96) = xmmword_2160EE5B0;
    *(_OWORD *)(a1 + 112) = xmmword_2160EE5B0;
    *(_OWORD *)(a1 + 128) = xmmword_2160EE5B0;
    *(_OWORD *)(a1 + 144) = xmmword_2160EE5B0;
    *(_OWORD *)(a1 + 160) = xmmword_2160EE5B0;
    *(_OWORD *)(a1 + 176) = xmmword_2160EE5B0;
    *(_OWORD *)(a1 + 192) = xmmword_2160EE5B0;
    *(_OWORD *)(a1 + 208) = xmmword_2160EE5B0;
    *(_OWORD *)(a1 + 224) = xmmword_2160EE5B0;
    v2 = (_OWORD *)(a1 + 256);
    v3 = 255;
    *(_OWORD *)(a1 + 240) = xmmword_2160EE5B0;
  }
  v1 = 0;
  *v2 = xmmword_2160EE5B0;
  *(_OWORD *)(a1 + 64) = xmmword_2160EE5B0;
  *(_WORD *)(a1 + 26) = v3;
  *(_DWORD *)(a1 + 8) = 3;
  return v1;
}

float sub_215FD0198(int16x8_t *a1, int16x8_t *a2)
{
  int16x8_t v2;
  int16x8_t v3;
  int32x4_t v4;
  int32x4_t v5;
  float result;

  v2 = vsubq_s16(*a1, *a2);
  v3 = vsubq_s16(a1[1], a2[1]);
  v4 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v3.i8, *(int16x4_t *)v3.i8), vmull_high_s16(v3, v3)), vpaddq_s32(vmull_s16(*(int16x4_t *)v2.i8, *(int16x4_t *)v2.i8), vmull_high_s16(v2, v2)));
  v5 = vaddq_s32(v4, (int32x4_t)vextq_s8((int8x16_t)v4, (int8x16_t)0, 8uLL));
  LODWORD(result) = vaddq_s32(v5, vdupq_lane_s32(*(int32x2_t *)v5.i8, 1)).u32[0];
  return result;
}

void sub_215FD01E0()
{
  off_253D72348[0] = (uint64_t (*)())sub_215FD0348;
  off_253D72350[0] = (uint64_t (*)())sub_215FD03C4;
  off_253D72358[0] = (uint64_t (*)())sub_215FD0440;
  off_253D72360 = (uint64_t (*)())sub_215FD04BC;
  off_253D72310[0] = (uint64_t (*)())sub_215FD0538;
  off_253D72318[0] = (uint64_t (*)())sub_215FD0558;
  off_253D72320[0] = (uint64_t (*)())sub_215FD0578;
  off_253D72328 = (uint64_t (*)())sub_215FD0598;
  off_253D722D8[0] = (uint64_t (*)())sub_215FD05B8;
  off_253D722E0[0] = (uint64_t (*)())sub_215FD05D8;
  off_253D722E8[0] = (uint64_t (*)())sub_215FD05F8;
  off_253D722F0 = (uint64_t (*)())sub_215FD0618;
  off_253D72230[0] = (uint64_t (*)())sub_215FD0638;
  off_253D72238[0] = (uint64_t (*)())sub_215FD0748;
  off_253D72240[0] = (uint64_t (*)())sub_215FD0858;
  off_253D72248 = (uint64_t (*)())sub_215FD0968;
  off_253D72268[0] = (uint64_t (*)())sub_215FD0A78;
  off_253D72270[0] = (uint64_t (*)())sub_215FD0ADC;
  off_253D72278[0] = (uint64_t (*)())sub_215FD0B40;
  off_253D72280 = (uint64_t (*)())sub_215FD0BA4;
  off_253D722A0[0] = (uint64_t (*)())sub_215FD0C08;
  off_253D722A8[0] = (uint64_t (*)())sub_215FD0C6C;
  off_253D722B0[0] = (uint64_t (*)())sub_215FD0CD0;
  off_253D722B8 = (uint64_t (*)())sub_215FD0D34;
  off_253D72380[0] = (uint64_t (*)())sub_215FD0D98;
  off_253D72388[0] = (uint64_t (*)())sub_215FD0E14;
  off_253D72390[0] = (uint64_t (*)())sub_215FD0E90;
  off_253D72398 = (uint64_t (*)())sub_215FD0F0C;
  off_253D72430 = (uint64_t (*)())sub_215FC0A44;
}

uint64_t sub_215FD0348(unsigned int a1, uint64_t a2, _WORD *a3)
{
  uint8x16_t *v4;
  int v5;
  uint64_t result;

  v4 = *(uint8x16_t **)(a2 + 56);
  v5 = *(_DWORD *)(a2 + 16);
  if (sub_2160DDCC0(a1))
    result = sub_215FC0514(v4, 16, 0, 0, v5);
  else
    result = sub_215FC0194((uint8x8_t *)v4, 16, 0, v5);
  *a3 = result;
  return result;
}

uint64_t sub_215FD03C4(unsigned int a1, uint64_t a2, _WORD *a3)
{
  uint8x16_t *v4;
  int v5;
  uint64_t result;

  v4 = *(uint8x16_t **)(a2 + 56);
  v5 = *(_DWORD *)(a2 + 16);
  if (sub_2160DDCC0(a1))
    result = sub_215FC0694(v4, 16, 0, 0, v5);
  else
    result = sub_215FC02AC(v4, 16, 0, v5);
  *a3 = result;
  return result;
}

uint64_t sub_215FD0440(unsigned int a1, uint64_t a2, _WORD *a3)
{
  uint8x8_t *v4;
  int v5;
  uint64_t result;

  v4 = *(uint8x8_t **)(a2 + 56);
  v5 = *(_DWORD *)(a2 + 16);
  if (sub_2160DDCC0(a1))
    result = sub_215FC07CC(v4, 16, 0, 0, v5);
  else
    result = sub_215FC0374(v4, 16, 0, v5);
  *a3 = result;
  return result;
}

uint64_t sub_215FD04BC(unsigned int a1, uint64_t a2, _WORD *a3)
{
  uint8x8_t *v4;
  int v5;
  uint64_t result;

  v4 = *(uint8x8_t **)(a2 + 56);
  v5 = *(_DWORD *)(a2 + 16);
  if (sub_2160DDCC0(a1))
    result = sub_215FC092C(v4, 16, 0, 0, v5);
  else
    result = sub_215FC046C(v4, 16, 0, v5);
  *a3 = result;
  return result;
}

int16x4_t sub_215FD0538(uint8x8_t **a1, uint64_t a2, int16x4_t *a3)
{
  return sub_215FC0CBC(*(uint8x8_t **)(a2 + 56), 16, *a1, a1[1], a1[2], *(_DWORD *)(a2 + 16), a3);
}

int16x4_t sub_215FD0558(uint8x8_t **a1, uint64_t a2, int16x4_t *a3)
{
  return sub_215FC0E20(*(uint8x8_t **)(a2 + 56), 16, *a1, a1[1], a1[2], *(_DWORD *)(a2 + 16), a3);
}

int16x4_t sub_215FD0578(uint8x8_t **a1, uint64_t a2, int16x4_t *a3)
{
  return sub_215FC0F64(*(uint8x8_t **)(a2 + 56), 16, *a1, a1[1], a1[2], *(_DWORD *)(a2 + 16), a3);
}

int16x4_t sub_215FD0598(uint8x8_t **a1, uint64_t a2, int16x4_t *a3)
{
  return sub_215FC1090(*(uint8x8_t **)(a2 + 56), 16, *a1, a1[1], a1[2], *(_DWORD *)(a2 + 16), a3);
}

int16x4_t sub_215FD05B8(uint8x8_t **a1, uint64_t a2, int16x4_t *a3)
{
  return sub_215FC0BFC(*(uint8x8_t **)(a2 + 56), 16, *a1, a1[1], a1[2], a1[3], *(_DWORD *)(a2 + 16), a3);
}

int16x4_t sub_215FD05D8(uint8x8_t **a1, uint64_t a2, int16x4_t *a3)
{
  return sub_215FC0D60(*(uint8x8_t **)(a2 + 56), 16, *a1, a1[1], a1[2], a1[3], *(_DWORD *)(a2 + 16), a3);
}

int16x4_t sub_215FD05F8(uint8x8_t **a1, uint64_t a2, int16x4_t *a3)
{
  return sub_215FC0EC4(*(uint8x8_t **)(a2 + 56), 16, *a1, a1[1], a1[2], a1[3], *(_DWORD *)(a2 + 16), a3);
}

int16x4_t sub_215FD0618(uint8x8_t **a1, uint64_t a2, int16x4_t *a3)
{
  return sub_215FC0FF0(*(uint8x8_t **)(a2 + 56), 16, *a1, a1[1], a1[2], a1[3], *(_DWORD *)(a2 + 16), a3);
}

int16x4_t sub_215FD0638(unsigned int a1, uint64_t a2, int16x4_t *a3)
{
  int v4;
  uint8x8_t *v5;
  int16x4_t result;

  v4 = *(_DWORD *)(a2 + 16);
  v5 = *(uint8x8_t **)(a2 + 56);
  if (!sub_2160DDE40(a1))
    return sub_215FC0BFC(v5, 16, 0, 0, 0, 0, v4, a3);
  a3->i16[0] = sub_215FC0514((uint8x16_t *)v5, 16, 0, 0, v4);
  a3->i16[1] = sub_215FC0514((uint8x16_t *)v5, 16, 0, 0, v4);
  a3->i16[2] = sub_215FC0514((uint8x16_t *)v5, 16, 0, 0, v4);
  a3->i16[3] = sub_215FC0514((uint8x16_t *)v5, 16, 0, 0, v4);
  return result;
}

int16x4_t sub_215FD0748(unsigned int a1, uint64_t a2, int16x4_t *a3)
{
  int v4;
  uint8x8_t *v5;
  int16x4_t result;

  v4 = *(_DWORD *)(a2 + 16);
  v5 = *(uint8x8_t **)(a2 + 56);
  if (!sub_2160DDE40(a1))
    return sub_215FC0D60(v5, 16, 0, 0, 0, 0, v4, a3);
  a3->i16[0] = sub_215FC0694((uint8x16_t *)v5, 16, 0, 0, v4);
  a3->i16[1] = sub_215FC0694((uint8x16_t *)v5, 16, 0, 0, v4);
  a3->i16[2] = sub_215FC0694((uint8x16_t *)v5, 16, 0, 0, v4);
  a3->i16[3] = sub_215FC0694((uint8x16_t *)v5, 16, 0, 0, v4);
  return result;
}

int16x4_t sub_215FD0858(unsigned int a1, uint64_t a2, int16x4_t *a3)
{
  int v4;
  uint8x8_t *v5;
  int16x4_t result;

  v4 = *(_DWORD *)(a2 + 16);
  v5 = *(uint8x8_t **)(a2 + 56);
  if (!sub_2160DDE40(a1))
    return sub_215FC0EC4(v5, 16, 0, 0, 0, 0, v4, a3);
  a3->i16[0] = sub_215FC07CC(v5, 16, 0, 0, v4);
  a3->i16[1] = sub_215FC07CC(v5, 16, 0, 0, v4);
  a3->i16[2] = sub_215FC07CC(v5, 16, 0, 0, v4);
  a3->i16[3] = sub_215FC07CC(v5, 16, 0, 0, v4);
  return result;
}

int16x4_t sub_215FD0968(unsigned int a1, uint64_t a2, int16x4_t *a3)
{
  int v4;
  uint8x8_t *v5;
  int16x4_t result;

  v4 = *(_DWORD *)(a2 + 16);
  v5 = *(uint8x8_t **)(a2 + 56);
  if (!sub_2160DDE40(a1))
    return sub_215FC0FF0(v5, 16, 0, 0, 0, 0, v4, a3);
  a3->i16[0] = sub_215FC092C(v5, 16, 0, 0, v4);
  a3->i16[1] = sub_215FC092C(v5, 16, 0, 0, v4);
  a3->i16[2] = sub_215FC092C(v5, 16, 0, 0, v4);
  a3->i16[3] = sub_215FC092C(v5, 16, 0, 0, v4);
  return result;
}

int16x4_t sub_215FD0A78(uint8x8_t **a1, uint64_t a2, uint64_t a3)
{
  int v6;

  v6 = *(_DWORD *)(a2 + 16);
  sub_215FC0CBC(*(uint8x8_t **)(a2 + 56), 16, *a1, a1[1], a1[2], v6, (int16x4_t *)a3);
  return sub_215FC0CBC(*(uint8x8_t **)(a2 + 56), 16, a1[3], a1[4], a1[5], v6, (int16x4_t *)(a3 + 6));
}

int16x4_t sub_215FD0ADC(uint8x8_t **a1, uint64_t a2, uint64_t a3)
{
  int v6;

  v6 = *(_DWORD *)(a2 + 16);
  sub_215FC0E20(*(uint8x8_t **)(a2 + 56), 16, *a1, a1[1], a1[2], v6, (int16x4_t *)a3);
  return sub_215FC0E20(*(uint8x8_t **)(a2 + 56), 16, a1[3], a1[4], a1[5], v6, (int16x4_t *)(a3 + 6));
}

int16x4_t sub_215FD0B40(uint8x8_t **a1, uint64_t a2, uint64_t a3)
{
  int v6;

  v6 = *(_DWORD *)(a2 + 16);
  sub_215FC0F64(*(uint8x8_t **)(a2 + 56), 16, *a1, a1[1], a1[2], v6, (int16x4_t *)a3);
  return sub_215FC0F64(*(uint8x8_t **)(a2 + 56), 16, a1[3], a1[4], a1[5], v6, (int16x4_t *)(a3 + 6));
}

int16x4_t sub_215FD0BA4(uint8x8_t **a1, uint64_t a2, uint64_t a3)
{
  int v6;

  v6 = *(_DWORD *)(a2 + 16);
  sub_215FC1090(*(uint8x8_t **)(a2 + 56), 16, *a1, a1[1], a1[2], v6, (int16x4_t *)a3);
  return sub_215FC1090(*(uint8x8_t **)(a2 + 56), 16, a1[3], a1[4], a1[5], v6, (int16x4_t *)(a3 + 6));
}

int16x4_t sub_215FD0C08(uint8x8_t **a1, uint64_t a2, int16x4_t *a3)
{
  int v6;

  v6 = *(_DWORD *)(a2 + 16);
  sub_215FC0BFC(*(uint8x8_t **)(a2 + 56), 16, *a1, a1[1], a1[2], a1[3], v6, a3);
  return sub_215FC0BFC(*(uint8x8_t **)(a2 + 56), 16, a1[4], a1[5], a1[6], a1[7], v6, a3 + 1);
}

int16x4_t sub_215FD0C6C(uint8x8_t **a1, uint64_t a2, int16x4_t *a3)
{
  int v6;

  v6 = *(_DWORD *)(a2 + 16);
  sub_215FC0D60(*(uint8x8_t **)(a2 + 56), 16, *a1, a1[1], a1[2], a1[3], v6, a3);
  return sub_215FC0D60(*(uint8x8_t **)(a2 + 56), 16, a1[4], a1[5], a1[6], a1[7], v6, a3 + 1);
}

int16x4_t sub_215FD0CD0(uint8x8_t **a1, uint64_t a2, int16x4_t *a3)
{
  int v6;

  v6 = *(_DWORD *)(a2 + 16);
  sub_215FC0EC4(*(uint8x8_t **)(a2 + 56), 16, *a1, a1[1], a1[2], a1[3], v6, a3);
  return sub_215FC0EC4(*(uint8x8_t **)(a2 + 56), 16, a1[4], a1[5], a1[6], a1[7], v6, a3 + 1);
}

int16x4_t sub_215FD0D34(uint8x8_t **a1, uint64_t a2, int16x4_t *a3)
{
  int v6;

  v6 = *(_DWORD *)(a2 + 16);
  sub_215FC0FF0(*(uint8x8_t **)(a2 + 56), 16, *a1, a1[1], a1[2], a1[3], v6, a3);
  return sub_215FC0FF0(*(uint8x8_t **)(a2 + 56), 16, a1[4], a1[5], a1[6], a1[7], v6, a3 + 1);
}

uint64_t sub_215FD0D98(unsigned int a1, uint64_t a2, _WORD *a3)
{
  uint8x8_t *v4;
  int v5;
  uint64_t result;

  v4 = *(uint8x8_t **)(a2 + 56);
  v5 = *(_DWORD *)(a2 + 16);
  if (sub_2160DDCC0(a1))
    result = sub_215FBF974(v4, 16, 0, 0, v5);
  else
    result = sub_215FBF6E8(v4, 16, 0, v5);
  *a3 = result;
  return result;
}

uint64_t sub_215FD0E14(unsigned int a1, uint64_t a2, _WORD *a3)
{
  uint8x8_t *v4;
  int v5;
  uint64_t result;

  v4 = *(uint8x8_t **)(a2 + 56);
  v5 = *(_DWORD *)(a2 + 16);
  if (sub_2160DDCC0(a1))
    result = sub_215FBFB28(v4, 16, 0, 0, v5);
  else
    result = sub_215FBF868(v4, 16, 0, v5);
  *a3 = result;
  return result;
}

uint64_t sub_215FD0E90(unsigned int a1, uint64_t a2, _WORD *a3)
{
  uint8x8_t *v4;
  int v5;
  uint64_t result;

  v4 = *(uint8x8_t **)(a2 + 56);
  v5 = *(_DWORD *)(a2 + 16);
  if (sub_2160DDCC0(a1))
    result = sub_215FBFB30(v4, 16, 0, 0, v5);
  else
    result = sub_215FBF870(v4, 16, 0, v5);
  *a3 = result;
  return result;
}

uint64_t sub_215FD0F0C(unsigned int a1, uint64_t a2, _WORD *a3)
{
  uint8x8_t *v4;
  int v5;
  uint64_t result;

  v4 = *(uint8x8_t **)(a2 + 56);
  v5 = *(_DWORD *)(a2 + 16);
  if (sub_2160DDCC0(a1))
    result = sub_215FBFC60(v4, 16, 0, 0, v5);
  else
    result = sub_215FBF96C(v4, 16, 0, v5);
  *a3 = result;
  return result;
}

void sub_215FD0F88()
{
  off_253D723C8 = (uint64_t (*)(int8x16_t *, int, int8x16_t *, int))sub_215FBF6E8;
  off_253D723E0 = (uint64_t (*)())sub_215FBF868;
  off_253D723F0 = (uint64_t (*)(uint64_t *, int, uint64_t *, int, double, double, int8x16_t, int8x16_t, int8x16_t, int8x16_t, int8x16_t, int8x16_t))sub_215FBF870;
  off_253D72408 = (uint64_t (*)())sub_215FBF96C;
  off_253D723D8 = (uint64_t (*)(int8x16_t *, int, uint64_t, uint64_t, int))sub_215FBF974;
  off_253D723E8 = (uint64_t (*)())sub_215FBFB28;
  off_253D723F8 = (uint64_t (*)(unint64_t *, int, uint64_t, uint64_t, int, double, double, uint8x16_t, int8x16_t, int8x16_t, uint8x16_t, int8x16_t, uint8x16_t))sub_215FBFB30;
  off_253D72410 = (uint64_t (*)())sub_215FBFC60;
  off_253D72418 = (uint64_t (*)())sub_215FBF660;
  off_253D723D0 = (uint64_t (*)())sub_215FBFC68;
  off_253D72400 = (uint64_t (*)())sub_215FBFD98;
  off_253D723C0 = (uint64_t (*)())sub_215FC0130;
}

void sub_215FD1080()
{
  off_253D723B8 = (uint64_t (*)())sub_215FC1308;
}

void sub_215FD1098()
{
  off_253D724A8 = (uint64_t (*)())sub_215FCED20;
  off_253D724A0 = (uint64_t (*)())sub_215FCEF1C;
  off_253D72498 = (uint64_t (*)())sub_215FCE3F8;
}

void sub_215FD10D8()
{
  qword_254E2EA20 = (uint64_t)sub_215FD8E5C;
  *(_QWORD *)algn_254E2EA28 = sub_215FD8E84;
  qword_254E2EA30 = (uint64_t)sub_215FD8EC4;
  unk_254E2EA38 = sub_215FD9074;
  off_253D72438 = (uint64_t (*)())sub_215FD9440;
  off_253D72440 = (uint64_t (*)())sub_215FD9484;
  off_253D72448 = (uint64_t (*)())sub_215FD94E8;
  off_253D72450 = (uint64_t (*)())sub_215FD9590;
  off_253D72458 = (uint64_t (*)())sub_215FD9600;
  off_253D72460 = (uint64_t (*)())sub_215FD9674;
  off_253D72468 = (uint64_t (*)())sub_215FD96F8;
  off_253D72470 = (uint64_t (*)())sub_215FD977C;
  off_253D72478 = (uint64_t (*)())sub_215FD97EC;
  off_253D72480 = (uint64_t (*)())sub_215FD9334;
  off_253D72490 = (uint64_t (*)())sub_215FD92BC;
  off_253D72488 = (uint64_t (*)())sub_215FD91F4;
}

void sub_215FD11AC()
{
  off_253D72218[0] = (uint64_t (*)())sub_215FC11BC;
  off_253D72220[0] = (uint64_t (*)())sub_215FC1218;
  off_253D72420 = (uint64_t (*)())sub_215FC111C;
  off_253D72428 = (uint64_t (*)())sub_215FC1174;
  off_253D72228[0] = (uint64_t (*)())sub_215FC1270;
}

uint64_t sub_215FD1214(uint64_t a1, __n128 a2, int32x2_t a3, int32x2_t a4, int32x2_t a5, int32x2_t a6)
{
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _WORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  char *v19;
  int v20;
  int v21;
  int v22;
  int v23;
  unsigned __int8 v24;
  int v25;
  int v26;
  unsigned __int8 v27;
  unsigned __int8 v28;
  __int16 v29;
  __int16 v30;
  char v31;
  int v32;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  int v38;
  char v39;
  int v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  unsigned __int16 *v51;
  int v52;
  uint64_t v53;
  unint64_t v54;
  BOOL v55;
  uint64_t v57;
  unsigned int v58;
  unsigned __int16 *v59;
  uint64_t v60;
  int v61;
  unint64_t v62;
  uint64_t v63;
  unsigned int v64;
  unsigned __int16 *v65;
  uint64_t v66;
  int v67;
  unsigned int v68;
  uint64_t v69;
  unsigned int v70;
  unsigned __int16 *v71;
  uint64_t v72;
  BOOL v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  int v81;
  int v83;
  int v84;
  unsigned __int8 v85;
  uint64_t v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned __int16 *v93;
  uint64_t v94;
  unsigned int v95;
  unsigned int v96;
  unsigned __int16 *v97;
  int v98;
  int v99;
  int v100;
  unsigned int v101;
  int v102;
  unsigned __int8 *v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  BOOL v107;
  uint64_t v108;
  unsigned __int8 v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  uint64_t result;
  char v115;
  uint64_t v116;
  BOOL v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unsigned __int8 *v125;
  uint64_t v126;
  int v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unsigned int v135;
  unsigned int v136;
  int v137;
  unsigned int v138;
  int v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  unsigned int v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  int v149;
  unsigned int v150;
  uint64_t v151;
  int v152;
  unsigned int v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  int v161;
  uint64_t v162;
  unint64_t v163;
  BOOL v164;
  BOOL v165;
  uint64_t v166;
  unsigned int v167;
  const float *v168;
  int32x2_t v169;
  int32x2_t v170;
  char *v171;
  unsigned int v172;
  int v173;
  int v174;
  _BOOL4 v175;
  uint64_t v176;
  BOOL v177;
  char v178;
  int v179;
  int v180;
  char v181;
  unsigned int v182;
  __int16 *v183;
  int v184;
  int v185;
  unsigned __int16 *v186;
  uint64_t v187;
  int v188;
  unint64_t v189;
  uint64_t v190;
  unsigned int v191;
  unsigned __int16 *v192;
  uint64_t v193;
  int v194;
  unsigned int v195;
  uint64_t v196;
  unsigned int v197;
  unsigned __int16 *v198;
  uint64_t v199;
  BOOL v200;
  unsigned int v201;
  int v202;
  int v203;
  int v204;
  unsigned int v205;
  int v206;
  uint64_t v207;
  uint64_t v208;
  unint64_t v209;
  int v210;
  int v212;
  int v213;
  int v214;
  uint64_t v215;
  unsigned int v216;
  unsigned int v217;
  unsigned int v218;
  unsigned int v219;
  unsigned int v220;
  unsigned int v221;
  unsigned __int16 *v222;
  uint64_t v223;
  unsigned int v224;
  unsigned int v225;
  unsigned __int16 *v226;
  int v227;
  unsigned int v228;
  int v229;
  uint64_t v230;
  unsigned int v231;
  unsigned int v232;
  uint64_t v233;
  char v234;
  uint64_t v235;
  int v236;
  uint64_t v237;
  int v238;
  unsigned int v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  _DWORD *v243;
  int v244;
  int v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  unint64_t v249;
  _WORD *v250;
  unsigned int v251;
  unsigned int v252;
  unsigned int v253;
  unsigned int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  uint64_t v259;
  uint64_t v260;
  unsigned int v261;
  unsigned __int8 *v262;
  unsigned int v263;
  unsigned int v264;
  uint64_t v265;
  char v266;
  _BYTE *v267;
  int v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  int v273;
  uint64_t v274;
  unint64_t v275;
  BOOL v277;
  uint64_t v278;
  unsigned int v279;
  unsigned __int16 *v280;
  uint64_t v281;
  int v282;
  unint64_t v283;
  uint64_t v284;
  unsigned int v285;
  unsigned __int16 *v286;
  uint64_t v287;
  int v288;
  BOOL v289;
  uint64_t v290;
  uint64_t v291;
  unsigned int v292;
  unsigned int v293;
  int v294;
  int v295;
  int v296;
  int v297;
  unint64_t v298;
  int v299;
  int v301;
  BOOL v303;
  int v304;
  unsigned __int8 v305;
  unsigned int v306;
  unsigned int v307;
  unsigned int v308;
  int v309;
  int v310;
  int v311;
  unsigned int v312;
  unsigned __int16 *v313;
  uint64_t v314;
  unsigned int v315;
  unsigned int v316;
  unsigned __int16 *v317;
  int v318;
  int v319;
  _WORD *v320;
  unsigned __int8 v321;
  unsigned __int8 v322;
  int v323;
  int v324;
  int v325;
  int v326;
  int v327;
  unsigned __int8 v328;
  int v329;
  int v330;
  int v331;
  unsigned __int8 v332;
  unsigned __int8 v333;
  unsigned __int8 v334;
  int v335;
  uint64_t v336;
  unsigned __int8 v337;
  unsigned __int8 v338;
  int v339;
  int v340;
  int v341;
  int v342;
  int v343;
  char *v344;
  uint64_t v345;
  _QWORD v346[2];
  __n128 v347;
  __n128 v348;
  __n128 v349;
  _DWORD v350[3];
  __n128 v351;
  __n128 v352;
  __n128 v353;
  _DWORD v354[3];
  __int16 v355;
  int v356;
  uint64_t v357;

  v357 = *MEMORY[0x24BDAC8D0];
  v8 = a1 + 48;
  v7 = *(_BYTE **)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 168);
  v10 = *(_WORD **)(*(_QWORD *)(a1 + 176) + 112);
  v11 = v7[272];
  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(unsigned __int8 *)(v12 + 1);
  v14 = *(_QWORD *)(a1 + 128);
  v15 = *(_QWORD *)(a1 + 136);
  v17 = *(_QWORD *)(a1 + 144);
  v16 = *(_QWORD *)(a1 + 152);
  v18 = *(unsigned __int8 *)(a1 + 31);
  if (!v14)
  {
    v19 = byte_254E10D40;
    if (v18 != 1)
    {
      v24 = 1;
      if (v18 == 2)
      {
        v20 = 1;
        if (v15)
          goto LABEL_8;
LABEL_19:
        v21 = 1;
        if (!v17)
          goto LABEL_20;
        goto LABEL_10;
      }
      v25 = 0;
      goto LABEL_38;
    }
    v24 = 1;
LABEL_44:
    if (v15)
    {
      v27 = 1;
      if (*(_BYTE *)(v15 + 144) == 1)
      {
        if (*(_BYTE *)(v15 + 126))
          v27 = 2;
        else
          v27 = 1;
      }
      if (v17)
      {
LABEL_50:
        v28 = 1;
        if (*(_BYTE *)(v17 + 144) == 1)
        {
          if (*(_BYTE *)(v17 + 126))
            v28 = 2;
          else
            v28 = 1;
        }
        if (v16)
          goto LABEL_55;
        goto LABEL_61;
      }
    }
    else
    {
      v27 = 1;
      if (v17)
        goto LABEL_50;
    }
    v28 = 1;
    if (v16)
    {
LABEL_55:
      v328 = 1;
      if (*(_BYTE *)(v16 + 144) != 1)
      {
LABEL_63:
        if (v9)
        {
          v30 = 1;
          if (*(_BYTE *)(v9 + 144) == 1)
          {
            v25 = 0;
            if (*(_BYTE *)(v9 + 126))
              v30 = 2;
            else
              v30 = 1;
          }
          else
          {
            v25 = 0;
          }
        }
        else
        {
          v25 = 0;
          v30 = 1;
        }
        v29 = 1;
        goto LABEL_71;
      }
      if (*(_BYTE *)(v16 + 126))
        v31 = 2;
      else
        v31 = 1;
LABEL_62:
      v328 = v31;
      goto LABEL_63;
    }
LABEL_61:
    v31 = 1;
    goto LABEL_62;
  }
  if (v18 == 1)
  {
    if (*(_BYTE *)(v14 + 144) == 1)
    {
      if ((*(_BYTE *)(a1 + 16) & 1) != 0)
        v19 = (char *)&unk_254E10DD8;
      else
        v19 = (char *)&unk_254E10DA8;
    }
    else
    {
      v19 = byte_254E10D40;
    }
    v24 = 1;
    if (*(_BYTE *)(v14 + 144) == 1)
    {
      if (*(_BYTE *)(v14 + 126))
        v24 = 2;
      else
        v24 = 1;
    }
    goto LABEL_44;
  }
  v19 = byte_254E10D40;
  if (v18 != 2)
  {
    v25 = 0;
    v24 = 1;
LABEL_38:
    v27 = 1;
    v28 = 1;
    v29 = 1;
    v328 = 1;
    v30 = 1;
LABEL_71:
    v342 = 1;
    v327 = 1;
    v22 = 1;
    v21 = 1;
    v20 = 1;
    goto LABEL_72;
  }
  if (!*(_BYTE *)(v14 + 144))
    v19 = (char *)&unk_254E10D78;
  v20 = 1;
  if (!*(_BYTE *)(v14 + 144))
  {
    if (*(_BYTE *)(v14 + 126))
      v20 = 2;
    else
      v20 = 1;
    if (v15)
      goto LABEL_8;
    goto LABEL_19;
  }
  if (!v15)
    goto LABEL_19;
LABEL_8:
  v21 = 1;
  if (*(_BYTE *)(v15 + 144))
  {
    if (v17)
      goto LABEL_10;
LABEL_20:
    v22 = 1;
    if (v16)
      goto LABEL_12;
LABEL_21:
    v23 = 1;
    goto LABEL_22;
  }
  if (*(_BYTE *)(v15 + 126))
    v21 = 2;
  else
    v21 = 1;
  if (!v17)
    goto LABEL_20;
LABEL_10:
  v22 = 1;
  if (!*(_BYTE *)(v17 + 144))
  {
    if (*(_BYTE *)(v17 + 126))
      v22 = 2;
    else
      v22 = 1;
    if (v16)
      goto LABEL_12;
    goto LABEL_21;
  }
  if (!v16)
    goto LABEL_21;
LABEL_12:
  v327 = 1;
  if (*(_BYTE *)(v16 + 144))
    goto LABEL_23;
  if (*(_BYTE *)(v16 + 126))
    v23 = 2;
  else
    v23 = 1;
LABEL_22:
  v327 = v23;
LABEL_23:
  if (!v9)
  {
    v25 = 1;
    goto LABEL_36;
  }
  v25 = 1;
  if (*(_BYTE *)(v9 + 144))
  {
LABEL_36:
    v24 = 1;
    v27 = 1;
    v28 = 1;
    v29 = 1;
    v328 = 1;
    v30 = 1;
    v342 = 1;
    goto LABEL_72;
  }
  if (*(_BYTE *)(v9 + 126))
    v26 = 2;
  else
    v26 = 1;
  v342 = v26;
  v24 = 1;
  v27 = 1;
  v28 = 1;
  v29 = 1;
  v328 = 1;
  v30 = 1;
LABEL_72:
  v343 = *(unsigned __int8 *)(v12 + 1);
  v344 = v19;
  v345 = v14;
  if ((_DWORD)v11 == 2)
  {
    v320 = v10;
    v325 = v20;
    if (byte_2160F76AA[v13])
    {
      if (((v7[2] == 0) & ~v25) == 0 && ((_DWORD)v13 != 2 || *(_BYTE *)(v12 + 2) != 4))
        goto LABEL_113;
    }
    else
    {
      if (byte_2160F76B0[v13])
        v36 = v25;
      else
        v36 = 1;
      if ((v36 & 1) != 0)
        goto LABEL_113;
      if (!v7[3])
      {
        v7[25] = 0;
        *(_BYTE *)(*(_QWORD *)v8 + 41) = 0;
        v7 = *(_BYTE **)v8;
      }
      if (v7[2])
        goto LABEL_113;
    }
    v7[24] = 0;
    *(_BYTE *)(*(_QWORD *)v8 + 40) = 0;
LABEL_113:
    v37 = 0;
    v337 = v24;
    v329 = v24;
    v330 = v22;
    v332 = v28;
    v334 = v27;
    v335 = v27;
    v340 = v21;
    v38 = v21;
    v324 = v28;
    v321 = v30;
    v323 = v22;
    v39 = 1;
    v40 = v20;
    while (1)
    {
      v41 = v39;
      v42 = *(_QWORD *)v8;
      v43 = *(_QWORD *)v8 + 16;
      if (*(_BYTE *)(v43 + 16 * v37 + 15) != 3)
        break;
LABEL_257:
      *(_WORD *)(v43 + 16 * v37) += v12;
      *(_WORD *)(*(_QWORD *)(a1 + 48) + 16 * v37 + 18) += v29;
      *(_WORD *)(*(_QWORD *)(a1 + 48) + 16 * v37 + 20) += v25;
      *(_WORD *)(*(_QWORD *)(a1 + 48) + 16 * v37 + 22) += v30;
      v103 = (unsigned __int8 *)(*(_QWORD *)(a1 + 48) + 16 + 16 * v37);
      v104 = v103[8];
      v105 = v103[9];
      v106 = *(unsigned __int8 *)(a1 + 31);
      v107 = v106 == 2;
      if (v106 == 2)
        v104 >>= v104 != 32;
      v108 = *(_QWORD *)(a1 + 264);
      v109 = *(_BYTE *)(v108 + v104);
      if (v107)
        v105 >>= v105 != 32;
      v110 = *(_BYTE *)(v108 + v105 + 33);
      v103[12] = v109;
      *(_BYTE *)(*(_QWORD *)(a1 + 48) + 16 * v37 + 29) = v110;
      v111 = *(_QWORD *)(a1 + 48) + 16 * v37;
      v112 = v111 + 16;
      v113 = *(unsigned __int8 *)(v111 + 31);
      if (v113 == 5)
      {
        *(_BYTE *)(v112 + 8) = 32;
        *(_BYTE *)(*(_QWORD *)v8 + 16 * v37 + 28) = 0;
        *(_DWORD *)(*(_QWORD *)v8 + 16 * v37 + 16) = 0;
      }
      else if (v113 == 4)
      {
        *(_BYTE *)(v112 + 9) = 32;
        *(_BYTE *)(*(_QWORD *)v8 + 16 * v37 + 29) = 0;
        *(_DWORD *)(*(_QWORD *)v8 + 16 * v37 + 20) = 0;
      }
      v39 = 0;
      v37 = 1;
      if ((v41 & 1) == 0)
      {
        result = 0;
        *v320 = *(_WORD *)(*(_QWORD *)v8 + 16);
        v320[1] = *(_WORD *)(*(_QWORD *)v8 + 18);
        v320[2] = *(_WORD *)(*(_QWORD *)v8 + 20);
        v320[3] = *(_WORD *)(*(_QWORD *)v8 + 22);
        v320[4] = *(_WORD *)(*(_QWORD *)v8 + 24);
        v320[5] = *(_WORD *)(*(_QWORD *)v8 + 26);
        v320[6] = *(_WORD *)(*(_QWORD *)v8 + 28);
        v320[7] = *(_WORD *)(*(_QWORD *)v8 + 30);
        v320[8] = *(_WORD *)(*(_QWORD *)v8 + 32);
        v320[9] = *(_WORD *)(*(_QWORD *)v8 + 34);
        v320[10] = *(_WORD *)(*(_QWORD *)v8 + 36);
        v320[11] = *(_WORD *)(*(_QWORD *)v8 + 38);
        v320[12] = *(_WORD *)(*(_QWORD *)v8 + 40);
        v320[13] = *(_WORD *)(*(_QWORD *)v8 + 42);
        v320[14] = *(_WORD *)(*(_QWORD *)v8 + 44);
        v320[15] = *(_WORD *)(*(_QWORD *)v8 + 46);
        return result;
      }
    }
    v44 = *(_QWORD *)(a1 + 128);
    if (v44)
      v45 = *(_QWORD *)(v44 + 112);
    else
      v45 = 0;
    v46 = *(_QWORD *)(a1 + 136);
    if (v46)
      v47 = *(_QWORD *)(v46 + 112);
    else
      v47 = 0;
    v48 = *(_QWORD *)(a1 + 144);
    if (v48)
      v49 = *(_QWORD *)(v48 + 112);
    else
      v49 = 0;
    if (*(unsigned __int16 *)(v42 + 26) >= 0x103u)
      v50 = 259;
    else
      v50 = *(unsigned __int16 *)(v42 + 26);
    v51 = &word_254E10E30[40 * v50];
    v52 = LOBYTE(v51[v37 + 24]);
    v53 = *((unsigned __int8 *)v51 + v37 + 32);
    v54 = ((unint64_t)v19[v53] >> 1) & 0xF;
    if (v14)
    {
      v55 = v53 >= 8 && *(_BYTE *)(a1 + 31) == 2;
      if (v55 && *(_BYTE *)(v14 + 144) == 0)
      {
        v57 = *(_QWORD *)(a1 + 168);
        if (!v57)
        {
          v40 = v342;
          if ((v19[v53] & 1) == 0)
          {
LABEL_148:
            v45 = 0;
            goto LABEL_153;
          }
          v45 = 0;
          v40 = v342;
LABEL_150:
          v59 = &word_254E10E30[40 * v50];
          v60 = *((unsigned __int8 *)v59 + v54);
          if (v60 < *((unsigned __int8 *)v59 + v53))
          {
            a2 = *(__n128 *)(v43 + 16 * v60);
            v351 = a2;
LABEL_152:
            v61 = 1;
            goto LABEL_154;
          }
LABEL_153:
          v61 = 0;
          v351.n128_u64[0] = 0;
          v351.n128_u16[4] = 8224;
LABEL_154:
          v62 = v19[v53 + 16];
          v63 = (v62 >> 1) & 0xF;
          if ((v62 & 1) != 0)
          {
            v65 = &word_254E10E30[40 * v50];
            v66 = *((unsigned __int8 *)v65 + v63);
            if (v66 < *((unsigned __int8 *)v65 + v53))
            {
              a2 = *(__n128 *)(v43 + 16 * v66);
              v352 = a2;
LABEL_165:
              v67 = 1;
LABEL_167:
              if ((_DWORD)v13 == 4
                && ((v61 & v67) != 1 || !v351.n128_u8[8] && !v351.n128_u32[0] || !v352.n128_u8[8] && !v352.n128_u32[0]))
              {
                goto LABEL_257;
              }
              v68 = byte_2160EE5C0[v53] + v52;
              v69 = *(unsigned int *)((char *)&unk_2160EE620
                                    + dword_2160EE6E4[byte_2160EE5D0[v53]]
                                    + dword_2160EE660[v68]);
              if (v68 > 0xF)
              {
                if (byte_2160EE5D0[v53])
                  v73 = 1;
                else
                  v73 = v49 == 0;
                if (!v73)
                {
                  v74 = *(unsigned __int16 *)(v49 + 10);
                  if (v74 >= 0x103)
                    v74 = 259;
                  a2 = *(__n128 *)(v49 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v74] + v69));
                  v353 = a2;
                  LOBYTE(v69) = a2.n128_u8[8];
                  if (a2.n128_u8[8] != 32)
                    LODWORD(v69) = v353.n128_u8[8] / v332 * v330;
                  v353.n128_u8[8] = v69;
                  LOBYTE(v69) = v353.n128_u8[9];
                  if (v353.n128_u8[9] != 32)
                    LODWORD(v69) = v353.n128_u8[9] / v332 * v330;
                  v353.n128_u8[9] = v69;
                  v353.n128_u16[1] = v353.n128_i16[1] * v324 / v323;
                  v75 = v353.n128_i16[3] * v324 / v323;
                  goto LABEL_198;
                }
              }
              else
              {
                if (byte_2160EE5D0[v53] >= 2u)
                {
                  v70 = *(unsigned __int16 *)(v42 + 26);
                  if (v70 >= 0x103)
                    v70 = 259;
                  v71 = &word_254E10E30[40 * v70];
                  v72 = *((unsigned __int8 *)v71 + v69);
                  if (v72 < *((unsigned __int8 *)v71 + v53))
                  {
                    a2 = *(__n128 *)(v43 + 16 * v72);
                    v353 = a2;
LABEL_199:
                    v77 = 1;
LABEL_256:
                    v347.n128_u64[0] = __PAIR64__(v67, v61);
                    v347.n128_u32[2] = v77;
                    sub_215FD3F54(a1, v37, (int *)&v347, (uint64_t)&v351, v346, (int32x2_t)a2.n128_u64[0], a3, a4, a5, a6);
                    LOWORD(v12) = v346[0];
                    v29 = WORD1(v346[0]);
                    LOWORD(v25) = WORD2(v346[0]);
                    v30 = HIWORD(v346[0]);
                    LODWORD(v13) = v343;
                    v19 = v344;
                    v14 = v345;
                    goto LABEL_257;
                  }
                  goto LABEL_200;
                }
                if (v47)
                {
                  v76 = *(unsigned __int16 *)(v47 + 10);
                  if (v76 >= 0x103)
                    v76 = 259;
                  a2 = *(__n128 *)(v47 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v76] + v69));
                  v353 = a2;
                  LOBYTE(v69) = a2.n128_u8[8];
                  if (a2.n128_u8[8] != 32)
                    LODWORD(v69) = v353.n128_u8[8] / v334 * v340;
                  v353.n128_u8[8] = v69;
                  LOBYTE(v69) = v353.n128_u8[9];
                  if (v353.n128_u8[9] != 32)
                    LODWORD(v69) = v353.n128_u8[9] / v334 * v340;
                  v353.n128_u8[9] = v69;
                  v353.n128_u16[1] = v353.n128_i16[1] * v335 / v38;
                  v75 = v353.n128_i16[3] * v335 / v38;
LABEL_198:
                  v353.n128_u16[3] = v75;
                  goto LABEL_199;
                }
              }
LABEL_200:
              v353.n128_u64[0] = 0;
              v353.n128_u16[4] = 8224;
              v78 = *(_QWORD *)(a1 + 152);
              if (v78)
                v79 = *(_QWORD *)(v78 + 112);
              else
                v79 = 0;
              v80 = ((unint64_t)v19[v53 + 32] >> 1) & 0xF;
              v81 = ((v53 >> 1) | ((_BYTE)v53 << 7));
              if ((v81 - 4) >= 2 && v81 != 1)
              {
                if (!__PAIR16__((_DWORD)v53 << 7 >> 24, (_BYTE)v53 << 7))
                {
                  if ((v19[v53 + 32] & 1) == 0)
                  {
                    if (v79)
                    {
                      v89 = *(unsigned __int16 *)(v79 + 10);
                      if (v89 >= 0x103)
                        v89 = 259;
                      a2 = *(__n128 *)(v79 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v89] + v80));
                      v353 = a2;
                      LOBYTE(v80) = a2.n128_u8[8];
                      if (a2.n128_u8[8] != 32)
                        LODWORD(v80) = v353.n128_u8[8] / v328 * v327;
                      v353.n128_u8[8] = v80;
                      if (v353.n128_u8[9] == 32)
                        LOBYTE(v101) = 32;
                      else
                        v101 = v353.n128_u8[9] / v328 * v327;
                      v77 = 0;
                      v353.n128_u8[9] = v101;
                      v98 = v328;
                      v99 = v353.n128_i16[1] * v328;
                      v100 = v327;
LABEL_254:
                      v353.n128_u16[1] = v99 / v100;
                      v102 = v353.n128_i16[3] * v98 / v100;
LABEL_255:
                      v353.n128_u16[3] = v102;
                      goto LABEL_256;
                    }
LABEL_246:
                    v77 = 0;
                    v353.n128_u64[0] = 0;
                    v353.n128_u16[4] = 8224;
                    goto LABEL_256;
                  }
                  v96 = *(unsigned __int16 *)(v42 + 26);
                  if (v96 >= 0x103)
                    v96 = 259;
                  v97 = &word_254E10E30[40 * v96];
                  v94 = *((unsigned __int8 *)v97 + v80);
                  v95 = *(unsigned __int8 *)v97;
LABEL_244:
                  if (v94 < v95)
                  {
                    v77 = 0;
                    a2 = *(__n128 *)(v43 + 16 * v94);
                    v353 = a2;
                    goto LABEL_256;
                  }
                  goto LABEL_246;
                }
                if ((v19[v53 + 32] & 1) == 0)
                {
                  if (v47)
                  {
                    v90 = *(unsigned __int16 *)(v47 + 10);
                    if (v90 >= 0x103)
                      v90 = 259;
                    a2 = *(__n128 *)(v47 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v90] + v80));
                    v353 = a2;
                    LOBYTE(v80) = a2.n128_u8[8];
                    if (a2.n128_u8[8] != 32)
                      LODWORD(v80) = v353.n128_u8[8] / v334 * v340;
                    v353.n128_u8[8] = v80;
                    if (v353.n128_u8[9] == 32)
                      LOBYTE(v91) = 32;
                    else
                      v91 = v353.n128_u8[9] / v334 * v340;
                    v77 = 0;
                    v353.n128_u8[9] = v91;
                    v353.n128_u16[1] = v353.n128_i16[1] * v335 / v38;
                    v102 = v353.n128_i16[3] * v335 / v38;
                    goto LABEL_255;
                  }
                  goto LABEL_246;
                }
LABEL_238:
                v92 = *(unsigned __int16 *)(v42 + 26);
                if (v92 >= 0x103)
                  v92 = 259;
                v93 = &word_254E10E30[40 * v92];
                v94 = *((unsigned __int8 *)v93 + v80);
                v95 = *((unsigned __int8 *)v93 + v53);
                goto LABEL_244;
              }
              if ((v19[v53 + 32] & 1) != 0)
                goto LABEL_238;
              if (!v45)
                goto LABEL_246;
              v83 = *(unsigned __int8 *)(a1 + 31);
              if (v53 >= 9 && v83 == 2 && !*(_BYTE *)(v14 + 144))
                goto LABEL_216;
              if (v53 < 2 || v83 != 1)
              {
                v84 = v325;
                v85 = v337;
                goto LABEL_217;
              }
              v84 = v325;
              v85 = v337;
              if (*(_BYTE *)(v14 + 144) == 1)
              {
LABEL_216:
                v44 = *(_QWORD *)(a1 + 168);
                v84 = v342;
                v85 = v321;
              }
LABEL_217:
              v86 = *(_QWORD *)(v44 + 112);
              v87 = *(unsigned __int16 *)(v86 + 10);
              if (v87 >= 0x103)
                v87 = 259;
              a2 = *(__n128 *)(v86 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v87] + v80));
              v353 = a2;
              LOBYTE(v80) = a2.n128_u8[8];
              if (a2.n128_u8[8] != 32)
                LODWORD(v80) = v353.n128_u8[8] / v85 * v84;
              v353.n128_u8[8] = v80;
              if (v353.n128_u8[9] == 32)
                LOBYTE(v88) = 32;
              else
                v88 = v353.n128_u8[9] / v85 * v84;
              v77 = 0;
              v353.n128_u8[9] = v88;
              v327 = v84;
              v328 = v85;
              v98 = v85;
              v99 = v353.n128_i16[1] * v85;
              v100 = v84;
              goto LABEL_254;
            }
          }
          else if (v47)
          {
            v64 = *(unsigned __int16 *)(v47 + 10);
            if (v64 >= 0x103)
              v64 = 259;
            a2 = *(__n128 *)(v47 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v64] + v63));
            v352 = a2;
            LOBYTE(v64) = a2.n128_u8[8];
            if (a2.n128_u8[8] != 32)
              v64 = v352.n128_u8[8] / v334 * v340;
            v352.n128_u8[8] = v64;
            LOBYTE(v64) = v352.n128_u8[9];
            if (v352.n128_u8[9] != 32)
              v64 = v352.n128_u8[9] / v334 * v340;
            v352.n128_u8[9] = v64;
            v352.n128_u16[1] = v352.n128_i16[1] * v335 / v38;
            v352.n128_u16[3] = v352.n128_i16[3] * v335 / v38;
            goto LABEL_165;
          }
          v67 = 0;
          v352.n128_u64[0] = 0;
          v352.n128_u16[4] = 8224;
          goto LABEL_167;
        }
        v45 = *(_QWORD *)(v57 + 112);
        v40 = v342;
      }
    }
    if ((v19[v53] & 1) == 0)
    {
      if (v45)
      {
        v58 = *(unsigned __int16 *)(v45 + 10);
        if (v58 >= 0x103)
          v58 = 259;
        a2 = *(__n128 *)(v45 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v58] + v54));
        v351 = a2;
        LOBYTE(v54) = a2.n128_u8[8];
        if (a2.n128_u8[8] != 32)
          LODWORD(v54) = v351.n128_u8[8] / v337 * v40;
        v351.n128_u8[8] = v54;
        LOBYTE(v54) = v351.n128_u8[9];
        if (v351.n128_u8[9] != 32)
          LODWORD(v54) = v351.n128_u8[9] / v337 * v40;
        v351.n128_u8[9] = v54;
        v351.n128_u16[1] = v351.n128_i16[1] * v329 / v40;
        v351.n128_u16[3] = v351.n128_i16[3] * v329 / v40;
        goto LABEL_152;
      }
      goto LABEL_148;
    }
    goto LABEL_150;
  }
  if ((_DWORD)v11 == 1)
  {
    if (byte_2160F76AA[v13])
    {
      LOWORD(v32) = (v7[2] == 0) & (unsigned __int16)~(_WORD)v25;
      if (!(_WORD)v32)
      {
        if ((_DWORD)v13 != 2)
          goto LABEL_102;
        v32 = *(unsigned __int8 *)(v12 + 2);
        if (v32 != 4)
          goto LABEL_102;
      }
    }
    else
    {
      if (byte_2160F76B0[v13])
        LOWORD(v32) = v25;
      else
        LOWORD(v32) = 1;
      if ((v32 & 1) != 0)
        goto LABEL_102;
      if (!v7[3])
      {
        v7[25] = 0;
        v7 = *(_BYTE **)v8;
      }
      LOWORD(v32) = v7[2];
      if (v7[2] || (v32 = *(unsigned __int8 *)(a1 + 31), v32 == 2))
      {
LABEL_102:
        v34 = *(_QWORD *)v8;
        if (*(_BYTE *)(*(_QWORD *)v8 + 31) == 3)
        {
LABEL_625:
          *(_WORD *)(v34 + 16) += v29;
          *(_WORD *)(*(_QWORD *)(a1 + 48) + 18) += v32;
          *(_WORD *)(*(_QWORD *)(a1 + 48) + 20) += v12;
          *(_WORD *)(*(_QWORD *)(a1 + 48) + 22) += (_WORD)v7;
          v262 = *(unsigned __int8 **)(a1 + 48);
          v263 = v262[24];
          v264 = v262[25];
          if (*(_BYTE *)(a1 + 31) == 2)
          {
            v263 >>= v263 != 32;
            v264 >>= v264 != 32;
          }
          v265 = *(_QWORD *)(a1 + 264);
          v266 = *(_BYTE *)(v265 + v264 + 33);
          v262[28] = *(_BYTE *)(v265 + v263);
          *(_BYTE *)(*(_QWORD *)(a1 + 48) + 29) = v266;
          v267 = *(_BYTE **)(a1 + 48);
          v268 = v267[31];
          if (v268 == 5)
          {
            v267[24] = 32;
            *(_BYTE *)(*(_QWORD *)v8 + 28) = 0;
            *(_DWORD *)(*(_QWORD *)v8 + 16) = 0;
          }
          else if (v268 == 4)
          {
            v267[25] = 32;
            *(_BYTE *)(*(_QWORD *)v8 + 29) = 0;
            *(_DWORD *)(*(_QWORD *)v8 + 20) = 0;
          }
          result = 0;
          goto LABEL_632;
        }
        v35 = *(_QWORD *)(a1 + 128);
        if (v35)
          v12 = *(_QWORD *)(v35 + 112);
        else
          v12 = 0;
        v131 = *(_QWORD *)(a1 + 136);
        if (v131)
          v132 = *(_QWORD *)(v131 + 112);
        else
          v132 = 0;
        v133 = *(_QWORD *)(a1 + 144);
        if (v133)
        {
          v134 = *(_QWORD *)(v133 + 112);
          if (v12)
            goto LABEL_319;
        }
        else
        {
          v134 = 0;
          if (v12)
          {
LABEL_319:
            v135 = *(unsigned __int16 *)(v12 + 10);
            if (v135 >= 0x103)
              v135 = 259;
            a2 = *(__n128 *)(v12
                           + 16
                           * *((unsigned __int8 *)&word_254E10E30[40 * v135]
                             + (((unint64_t)*v19 >> 1) & 0xF)));
            v351 = a2;
            if (a2.n128_u8[8] == 32)
              LOBYTE(v136) = 32;
            else
              v136 = v351.n128_u8[8] / v24 * v20;
            v351.n128_u8[8] = v136;
            LOBYTE(v251) = v351.n128_u8[9];
            if (v351.n128_u8[9] != 32)
              v251 = v351.n128_u8[9] / v24 * v20;
            v351.n128_u8[9] = v251;
            v351.n128_u16[1] = v351.n128_i16[1] * v24 / v20;
            v351.n128_u16[3] = v351.n128_i16[3] * v24 / v20;
            LODWORD(v7) = 1;
            if (v132)
              goto LABEL_592;
            goto LABEL_325;
          }
        }
        LODWORD(v7) = 0;
        v351.n128_u64[0] = 0;
        v351.n128_u16[4] = 8224;
        LOBYTE(v136) = 32;
        if (v132)
        {
LABEL_592:
          v252 = *(unsigned __int16 *)(v132 + 10);
          if (v252 >= 0x103)
            v252 = 259;
          a2 = *(__n128 *)(v132 + 16 * LOBYTE(word_254E10E30[40 * v252 + 5]));
          v352 = a2;
          if (a2.n128_u8[8] == 32)
            LOBYTE(v138) = 32;
          else
            v138 = v352.n128_u8[8] / v27 * v21;
          v352.n128_u8[8] = v138;
          LOBYTE(v253) = v352.n128_u8[9];
          if (v352.n128_u8[9] != 32)
            v253 = v352.n128_u8[9] / v27 * v21;
          v352.n128_u8[9] = v253;
          v352.n128_u16[1] = v352.n128_i16[1] * v27 / v21;
          v352.n128_u16[3] = v352.n128_i16[3] * v27 / v21;
          v137 = 1;
LABEL_600:
          if ((_DWORD)v13 == 4)
          {
            if (!v12
              || !v132
              || !(_BYTE)v136 && (LOWORD(v12) = v351.n128_u16[0], !v351.n128_u32[0])
              || !(_BYTE)v138 && (LOWORD(v12) = v352.n128_u16[0], !v352.n128_u32[0]))
            {
              LOWORD(v32) = 0;
              v29 = 0;
              LODWORD(v346[0]) = 0;
              goto LABEL_625;
            }
          }
          if (v134)
          {
            v254 = *(unsigned __int16 *)(v134 + 10);
            if (v254 >= 0x103)
              v254 = 259;
            a2 = *(__n128 *)(v134 + 16 * LOBYTE(word_254E10E30[40 * v254 + 5]));
            v353 = a2;
            LOBYTE(v134) = a2.n128_u8[8];
            if (a2.n128_u8[8] != 32)
              LODWORD(v134) = v353.n128_u8[8] / v28 * v22;
            v353.n128_u8[8] = v134;
            LOBYTE(v134) = v353.n128_u8[9];
            if (v353.n128_u8[9] != 32)
              LODWORD(v134) = v353.n128_u8[9] / v28 * v22;
            v353.n128_u8[9] = v134;
            v255 = v28;
            v256 = v353.n128_i16[1] * v28;
            v257 = v22;
          }
          else
          {
            v353.n128_u64[0] = 0;
            v353.n128_u16[4] = 8224;
            v259 = *(_QWORD *)(a1 + 152);
            if (!v259 || (v260 = *(_QWORD *)(v259 + 112)) == 0)
            {
              v258 = 0;
              v353.n128_u32[1] = 0;
              v353.n128_u16[4] = 8224;
              goto LABEL_624;
            }
            v261 = *(unsigned __int16 *)(v260 + 10);
            if (v261 >= 0x103)
              v261 = 259;
            a2 = *(__n128 *)(v260
                           + 16
                           * *((unsigned __int8 *)&word_254E10E30[40 * v261]
                             + (((unint64_t)v19[32] >> 1) & 0xF)));
            v353 = a2;
            LOBYTE(v260) = a2.n128_u8[8];
            if (a2.n128_u8[8] != 32)
              LODWORD(v260) = v353.n128_u8[8] / v328 * v327;
            v353.n128_u8[8] = v260;
            LOBYTE(v260) = v353.n128_u8[9];
            if (v353.n128_u8[9] != 32)
              LODWORD(v260) = v353.n128_u8[9] / v328 * v327;
            v353.n128_u8[9] = v260;
            v255 = v328;
            v256 = v353.n128_i16[1] * v328;
            v257 = v327;
          }
          v353.n128_u16[1] = v256 / v257;
          v353.n128_u16[3] = v353.n128_i16[3] * v255 / v257;
          v258 = 1;
LABEL_624:
          v347.n128_u64[0] = __PAIR64__(v137, v7);
          v347.n128_u32[2] = v258;
          sub_215FD3D78(a1, 0, &v347, (uint64_t)&v351, v346, 0, 0, (int32x2_t)a2.n128_u64[0], a3, a4);
          v29 = v346[0];
          LOWORD(v32) = WORD1(v346[0]);
          LOWORD(v12) = WORD2(v346[0]);
          LOWORD(v7) = HIWORD(v346[0]);
          goto LABEL_625;
        }
LABEL_325:
        v137 = 0;
        v352.n128_u64[0] = 0;
        v352.n128_u16[4] = 8224;
        LOBYTE(v138) = 32;
        goto LABEL_600;
      }
    }
    v7[24] = 0;
    goto LABEL_102;
  }
  if (byte_2160F76AA[v13])
  {
    if (((v7[2] == 0) & ~v25) != 0)
    {
      if (!v7[272])
        goto LABEL_290;
      goto LABEL_288;
    }
    if ((_DWORD)v13 == 2 && *(_BYTE *)(v12 + 2) == 4 && (_DWORD)v11 != 0)
    {
LABEL_288:
      v120 = 24;
      do
      {
        *(_BYTE *)(*(_QWORD *)v8 + v120) = 0;
        v120 += 16;
        --v11;
      }
      while (v11);
    }
  }
  else
  {
    if (byte_2160F76B0[v13])
      v115 = v25;
    else
      v115 = 1;
    if ((v115 & 1) == 0)
    {
      if (!v7[3] && v7[272])
      {
        v116 = 0;
        do
        {
          *(_BYTE *)(*(_QWORD *)v8 + v116 + 25) = 0;
          v116 += 16;
        }
        while (16 * v11 != v116);
        v7 = *(_BYTE **)v8;
      }
      if (v7[2])
        v117 = 1;
      else
        v117 = (_DWORD)v11 == 0;
      if (!v117)
      {
        v118 = 0;
        v119 = 16 * v11;
        do
        {
          *(_BYTE *)(*(_QWORD *)v8 + v118 + 24) = 0;
          v118 += 16;
        }
        while (v119 != v118);
      }
    }
  }
LABEL_290:
  v331 = v22;
  v333 = v28;
  v322 = v30;
  v326 = v20;
  v341 = v21;
  v121 = *(_QWORD *)v8;
  v122 = *(unsigned __int8 *)(*(_QWORD *)v8 + 272);
  v338 = v24;
  v339 = *(unsigned __int8 *)(*(_QWORD *)v8 + 5);
  v356 = 0;
  v123 = v122;
  if ((_DWORD)v122)
  {
    v124 = v121 + 16;
    v125 = (unsigned __int8 *)(v121 + 31);
    v126 = v122;
    v127 = v20;
    while (1)
    {
      v128 = *v125;
      v125 += 16;
      if (v128 == 3)
        break;
      if (!--v126)
        goto LABEL_327;
    }
    if (v339 != 1)
    {
      v355 = 0;
LABEL_327:
      v139 = v20;
      goto LABEL_328;
    }
    v129 = *(_QWORD *)(a1 + 128);
    if (v129)
      v130 = *(_QWORD *)(v129 + 112);
    else
      v130 = 0;
    v269 = *(_QWORD *)(a1 + 136);
    if (v269)
      v270 = *(_QWORD *)(v269 + 112);
    else
      v270 = 0;
    v271 = *(_QWORD *)(a1 + 144);
    if (v271)
      v272 = *(_QWORD *)(v271 + 112);
    else
      v272 = 0;
    if (*(unsigned __int16 *)(v121 + 26) >= 0x103u)
      v273 = 259;
    else
      v273 = *(unsigned __int16 *)(v121 + 26);
    v274 = LOBYTE(word_254E10E30[40 * v273 + 16]);
    v275 = ((unint64_t)v19[v274] >> 1) & 0xF;
    if (v14)
    {
      v277 = v274 >= 8 && *(_BYTE *)(a1 + 31) == 2 && *(_BYTE *)(v14 + 144) == 0;
      v139 = v20;
      if (v277)
      {
        v278 = *(_QWORD *)(a1 + 168);
        if (!v278)
        {
          v139 = v342;
          if ((v19[v274] & 1) == 0)
          {
LABEL_669:
            v130 = 0;
            goto LABEL_674;
          }
          v130 = 0;
          v139 = v342;
LABEL_671:
          v280 = &word_254E10E30[40 * v273];
          v281 = *((unsigned __int8 *)v280 + v275);
          if (v281 < *((unsigned __int8 *)v280 + v274))
          {
            a2 = *(__n128 *)(v124 + 16 * v281);
            v351 = a2;
LABEL_673:
            v282 = 1;
            goto LABEL_675;
          }
LABEL_674:
          v282 = 0;
          v351.n128_u64[0] = 0;
          v351.n128_u16[4] = 8224;
LABEL_675:
          v283 = v19[v274 + 16];
          v284 = (v283 >> 1) & 0xF;
          if ((v283 & 1) != 0)
          {
            v286 = &word_254E10E30[40 * v273];
            v287 = *((unsigned __int8 *)v286 + v284);
            if (v287 < *((unsigned __int8 *)v286 + v274))
            {
              a2 = *(__n128 *)(v124 + 16 * v287);
              v352 = a2;
LABEL_686:
              v288 = 1;
              goto LABEL_688;
            }
          }
          else if (v270)
          {
            v285 = *(unsigned __int16 *)(v270 + 10);
            if (v285 >= 0x103)
              v285 = 259;
            a2 = *(__n128 *)(v270 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v285] + v284));
            v352 = a2;
            LOBYTE(v285) = a2.n128_u8[8];
            if (a2.n128_u8[8] != 32)
              v285 = v352.n128_u8[8] / v27 * v341;
            v352.n128_u8[8] = v285;
            LOBYTE(v285) = v352.n128_u8[9];
            if (v352.n128_u8[9] != 32)
              v285 = v352.n128_u8[9] / v27 * v341;
            v352.n128_u8[9] = v285;
            v352.n128_u16[1] = v352.n128_i16[1] * v27 / v341;
            v352.n128_u16[3] = v352.n128_i16[3] * v27 / v341;
            goto LABEL_686;
          }
          v288 = 0;
          v352.n128_u64[0] = 0;
          v352.n128_u16[4] = 8224;
LABEL_688:
          if (byte_2160EE5D0[v274])
            v289 = 1;
          else
            v289 = v272 == 0;
          if (!v289)
          {
            v292 = *(unsigned __int16 *)(v272 + 10);
            if (v292 >= 0x103)
              v292 = 259;
            a2 = *(__n128 *)(v272
                           + 16
                           * *((unsigned __int8 *)&word_254E10E30[40 * v292]
                             + *(unsigned int *)((char *)&unk_2160EE620
                                               + dword_2160EE6E4[byte_2160EE5D0[v274]]
                                               + dword_2160EE660[byte_2160EE5C0[v274] + 16])));
            v353 = a2;
            LOBYTE(v293) = a2.n128_u8[8];
            if (a2.n128_u8[8] != 32)
              v293 = v353.n128_u8[8] / v28 * v22;
            v122 = v123;
            v353.n128_u8[8] = v293;
            LOBYTE(v293) = v353.n128_u8[9];
            if (v353.n128_u8[9] != 32)
              v293 = v353.n128_u8[9] / v28 * v22;
            v353.n128_u8[9] = v293;
            v294 = v28;
            v295 = v353.n128_i16[1] * v28;
            v296 = v22;
LABEL_702:
            v353.n128_u16[1] = v295 / v296;
            v353.n128_u16[3] = v353.n128_i16[3] * v294 / v296;
            v297 = 1;
LABEL_763:
            v354[0] = v282;
            v354[1] = v288;
            v354[2] = v297;
            v318 = ((v352.n128_u8[9] - v353.n128_u8[9]) & ((v352.n128_u8[9] - v353.n128_u8[9]) >> 31)) + v353.n128_u8[9];
            v319 = ((v352.n128_u8[8] - v353.n128_u8[8]) & ((v352.n128_u8[8] - v353.n128_u8[8]) >> 31))
                 + v353.n128_u8[8]
                 - v351.n128_u8[8];
            LOBYTE(v355) = v351.n128_u8[8] + (v319 & (v319 >> 31));
            HIBYTE(v355) = v351.n128_u8[9] + ((v318 - v351.n128_u8[9]) & ((v318 - v351.n128_u8[9]) >> 31));
            if (v355 == 32
              && (v351.n128_u8[9] + ((v318 - v351.n128_u8[9]) & ((v318 - v351.n128_u8[9]) >> 31))) == 32)
            {
              v355 = 0;
              v356 = 1;
            }
LABEL_328:
            v336 = a1 + 1424480;
            v140 = 24;
            v141 = 31;
            while (1)
            {
              v142 = v140 - 24;
              v143 = *(_QWORD *)v8;
              if (*(_BYTE *)(*(_QWORD *)v8 + v141) != 3)
              {
                v146 = *(_QWORD *)(a1 + 128);
                if (v146)
                  v147 = *(_QWORD *)(v146 + 112);
                else
                  v147 = 0;
                v154 = *(_QWORD *)(a1 + 136);
                if (v154)
                  v155 = *(_QWORD *)(v154 + 112);
                else
                  v155 = 0;
                v156 = *(_QWORD *)(a1 + 144);
                if (v156)
                  v157 = *(_QWORD *)(v156 + 112);
                else
                  v157 = 0;
                v158 = v143 + 16;
                if (*(unsigned __int16 *)(v143 + 26) >= 0x103u)
                  v159 = 259;
                else
                  v159 = *(unsigned __int16 *)(v143 + 26);
                v160 = v159 + 4 * v159;
                v161 = LOBYTE(word_254E10E30[8 * v160 + v140]);
                v162 = *((unsigned __int8 *)&word_254E10E30[8 * v160 + 4] + v140);
                v163 = ((unint64_t)v19[v162] >> 1) & 0xF;
                if (v14
                  && (v162 >= 8 ? (v164 = *(_BYTE *)(a1 + 31) == 2) : (v164 = 0),
                      v164 ? (v165 = *(_BYTE *)(v14 + 144) == 0) : (v165 = 0),
                      v165))
                {
                  v166 = *(_QWORD *)(a1 + 168);
                  if (v166)
                  {
                    v147 = *(_QWORD *)(v166 + 112);
                    v139 = v342;
                    goto LABEL_369;
                  }
                  v139 = v342;
                  if ((v19[v162] & 1) == 0)
                    goto LABEL_391;
                  v147 = 0;
                  v139 = v342;
                }
                else
                {
LABEL_369:
                  if ((v19[v162] & 1) == 0)
                  {
                    if (v147)
                    {
                      v167 = *(unsigned __int16 *)(v147 + 10);
                      if (v167 >= 0x103)
                        v167 = 259;
                      a2 = *(__n128 *)(v147 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v167] + v163));
                      v347 = a2;
                      LOBYTE(v163) = a2.n128_u8[8];
                      if (a2.n128_u8[8] != 32)
                        LODWORD(v163) = v347.n128_u8[8] / v338 * v139;
                      v347.n128_u8[8] = v163;
                      LOBYTE(v163) = v347.n128_u8[9];
                      if (v347.n128_u8[9] != 32)
                        LODWORD(v163) = v347.n128_u8[9] / v338 * v139;
                      v347.n128_u8[9] = v163;
                      v347.n128_u16[1] = v347.n128_i16[1] * v338 / v139;
                      v347.n128_u16[3] = v347.n128_i16[3] * v338 / v139;
LABEL_437:
                      v188 = 1;
LABEL_439:
                      v189 = v19[v162 + 16];
                      v190 = (v189 >> 1) & 0xF;
                      if ((v189 & 1) != 0)
                      {
                        v192 = &word_254E10E30[40 * v159];
                        v193 = *((unsigned __int8 *)v192 + v190);
                        if (v193 < *((unsigned __int8 *)v192 + v162))
                        {
                          a2 = *(__n128 *)(v158 + 16 * v193);
                          v348 = a2;
                          goto LABEL_450;
                        }
                      }
                      else if (v155)
                      {
                        v191 = *(unsigned __int16 *)(v155 + 10);
                        if (v191 >= 0x103)
                          v191 = 259;
                        a2 = *(__n128 *)(v155 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v191] + v190));
                        v348 = a2;
                        LOBYTE(v191) = a2.n128_u8[8];
                        if (a2.n128_u8[8] != 32)
                          v191 = v348.n128_u8[8] / v27 * v341;
                        v348.n128_u8[8] = v191;
                        LOBYTE(v191) = v348.n128_u8[9];
                        if (v348.n128_u8[9] != 32)
                          v191 = v348.n128_u8[9] / v27 * v341;
                        v348.n128_u8[9] = v191;
                        v348.n128_u16[1] = v348.n128_i16[1] * v27 / v341;
                        v348.n128_u16[3] = v348.n128_i16[3] * v27 / v341;
LABEL_450:
                        v194 = 1;
LABEL_452:
                        if ((_DWORD)v13 == 4
                          && ((v188 & v194) != 1
                           || !v347.n128_u8[8] && !v347.n128_u32[0]
                           || !v348.n128_u8[8] && !v348.n128_u32[0]))
                        {
                          LODWORD(v346[0]) = 0;
LABEL_548:
                          v122 = v123;
                          goto LABEL_549;
                        }
                        v195 = v161 + byte_2160EE5C0[v162];
                        v196 = *(unsigned int *)((char *)&unk_2160EE620
                                               + dword_2160EE6E4[byte_2160EE5D0[v162]]
                                               + dword_2160EE660[v195]);
                        if (v195 > 0xF)
                        {
                          if (byte_2160EE5D0[v162])
                            v200 = 1;
                          else
                            v200 = v157 == 0;
                          if (v200)
                            goto LABEL_486;
                          v201 = *(unsigned __int16 *)(v157 + 10);
                          if (v201 >= 0x103)
                            v201 = 259;
                          a2 = *(__n128 *)(v157 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v201] + v196));
                          v349 = a2;
                          LOBYTE(v201) = a2.n128_u8[8];
                          if (a2.n128_u8[8] != 32)
                            v201 = v349.n128_u8[8] / v333 * v331;
                          v349.n128_u8[8] = v201;
                          LOBYTE(v201) = v349.n128_u8[9];
                          if (v349.n128_u8[9] != 32)
                            v201 = v349.n128_u8[9] / v333 * v331;
                          v349.n128_u8[9] = v201;
                          v203 = v331;
                          v202 = v333;
                          v204 = v349.n128_i16[1] * v333;
                        }
                        else
                        {
                          if (byte_2160EE5D0[v162] >= 2u)
                          {
                            v197 = *(unsigned __int16 *)(v143 + 26);
                            if (v197 >= 0x103)
                              v197 = 259;
                            v198 = &word_254E10E30[40 * v197];
                            v199 = *((unsigned __int8 *)v198 + v196);
                            if (v199 < *((unsigned __int8 *)v198 + v162))
                            {
                              a2 = *(__n128 *)(v158 + 16 * v199);
                              v349 = a2;
                              goto LABEL_485;
                            }
LABEL_486:
                            v349.n128_u64[0] = 0;
                            v349.n128_u16[4] = 8224;
                            v207 = *(_QWORD *)(a1 + 152);
                            if (v207)
                              v208 = *(_QWORD *)(v207 + 112);
                            else
                              v208 = 0;
                            v209 = ((unint64_t)v19[v162 + 32] >> 1) & 0xF;
                            v210 = ((v162 >> 1) | ((_BYTE)v162 << 7));
                            if ((v210 - 4) >= 2 && v210 != 1)
                            {
                              if (!__PAIR16__((_DWORD)v162 << 7 >> 24, (_BYTE)v162 << 7))
                              {
                                if ((v19[v162 + 32] & 1) == 0)
                                {
                                  if (v208)
                                  {
                                    v218 = *(unsigned __int16 *)(v208 + 10);
                                    if (v218 >= 0x103)
                                      v218 = 259;
                                    a2 = *(__n128 *)(v208
                                                   + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v218] + v209));
                                    v349 = a2;
                                    LOBYTE(v218) = a2.n128_u8[8];
                                    LOBYTE(v213) = v327;
                                    LOBYTE(v214) = v328;
                                    if (a2.n128_u8[8] != 32)
                                      v218 = v349.n128_u8[8] / v328 * v327;
                                    v349.n128_u8[8] = v218;
                                    if (v349.n128_u8[9] == 32)
                                      LOBYTE(v228) = 32;
                                    else
                                      v228 = v349.n128_u8[9] / v328 * v327;
                                    v206 = 0;
                                    v349.n128_u8[9] = v228;
                                    v227 = v349.n128_i16[1];
                                    goto LABEL_545;
                                  }
LABEL_535:
                                  v206 = 0;
                                  v349.n128_u64[0] = 0;
                                  v349.n128_u16[4] = 8224;
                                  goto LABEL_547;
                                }
                                v225 = *(unsigned __int16 *)(v143 + 26);
                                if (v225 >= 0x103)
                                  v225 = 259;
                                v226 = &word_254E10E30[40 * v225];
                                v223 = *((unsigned __int8 *)v226 + v209);
                                v224 = *(unsigned __int8 *)v226;
LABEL_533:
                                if (v223 >= v224)
                                  goto LABEL_535;
                                v206 = 0;
                                a2 = *(__n128 *)(v158 + 16 * v223);
                                v349 = a2;
LABEL_547:
                                v350[0] = v188;
                                v350[1] = v194;
                                v350[2] = v206;
                                sub_215FD3D78(a1, v142, v350, (uint64_t)&v347, v346, 0, 0, (int32x2_t)a2.n128_u64[0], a3, a4);
                                LODWORD(v13) = v343;
                                v19 = v344;
                                v14 = v345;
                                goto LABEL_548;
                              }
                              if ((v19[v162 + 32] & 1) == 0)
                              {
                                if (!v155)
                                  goto LABEL_535;
                                v219 = *(unsigned __int16 *)(v155 + 10);
                                if (v219 >= 0x103)
                                  v219 = 259;
                                a2 = *(__n128 *)(v155 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v219] + v209));
                                v349 = a2;
                                LOBYTE(v219) = a2.n128_u8[8];
                                if (a2.n128_u8[8] != 32)
                                  v219 = v349.n128_u8[8] / v27 * v341;
                                v349.n128_u8[8] = v219;
                                if (v349.n128_u8[9] == 32)
                                  LOBYTE(v220) = 32;
                                else
                                  v220 = v349.n128_u8[9] / v27 * v341;
                                v206 = 0;
                                v349.n128_u8[9] = v220;
                                v214 = v27;
                                v229 = v349.n128_i16[1] * v27;
                                v213 = v341;
                                goto LABEL_546;
                              }
LABEL_524:
                              v221 = *(unsigned __int16 *)(v143 + 26);
                              if (v221 >= 0x103)
                                v221 = 259;
                              v222 = &word_254E10E30[40 * v221];
                              v223 = *((unsigned __int8 *)v222 + v209);
                              v224 = *((unsigned __int8 *)v222 + v162);
                              goto LABEL_533;
                            }
                            if ((v19[v162 + 32] & 1) != 0)
                              goto LABEL_524;
                            if (!v147)
                              goto LABEL_535;
                            v212 = *(unsigned __int8 *)(a1 + 31);
                            if (v162 >= 9 && v212 == 2 && !*(_BYTE *)(v14 + 144))
                            {
LABEL_502:
                              v146 = *(_QWORD *)(a1 + 168);
                              v213 = v342;
                              LOBYTE(v214) = v322;
                            }
                            else if (v162 >= 2 && v212 == 1)
                            {
                              v213 = v326;
                              LOBYTE(v214) = v338;
                              if (*(_BYTE *)(v14 + 144) == 1)
                                goto LABEL_502;
                            }
                            else
                            {
                              v213 = v326;
                              LOBYTE(v214) = v338;
                            }
                            v215 = *(_QWORD *)(v146 + 112);
                            v216 = *(unsigned __int16 *)(v215 + 10);
                            if (v216 >= 0x103)
                              v216 = 259;
                            a2 = *(__n128 *)(v215 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v216] + v209));
                            v349 = a2;
                            LOBYTE(v215) = a2.n128_u8[8];
                            if (a2.n128_u8[8] != 32)
                              LODWORD(v215) = v349.n128_u8[8] / v214 * v213;
                            v349.n128_u8[8] = v215;
                            if (v349.n128_u8[9] == 32)
                              LOBYTE(v217) = 32;
                            else
                              v217 = v349.n128_u8[9] / v214 * v213;
                            v206 = 0;
                            v349.n128_u8[9] = v217;
                            v227 = v349.n128_i16[1];
                            v327 = v213;
                            v328 = v214;
LABEL_545:
                            v214 = v214;
                            v229 = v227 * v214;
                            v213 = v213;
LABEL_546:
                            v349.n128_u16[1] = v229 / v213;
                            v349.n128_u16[3] = v349.n128_i16[3] * v214 / v213;
                            goto LABEL_547;
                          }
                          if (!v155)
                            goto LABEL_486;
                          v205 = *(unsigned __int16 *)(v155 + 10);
                          if (v205 >= 0x103)
                            v205 = 259;
                          a2 = *(__n128 *)(v155 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v205] + v196));
                          v349 = a2;
                          LOBYTE(v205) = a2.n128_u8[8];
                          if (a2.n128_u8[8] != 32)
                            v205 = v349.n128_u8[8] / v27 * v341;
                          v349.n128_u8[8] = v205;
                          LOBYTE(v205) = v349.n128_u8[9];
                          if (v349.n128_u8[9] != 32)
                            v205 = v349.n128_u8[9] / v27 * v341;
                          v349.n128_u8[9] = v205;
                          v202 = v27;
                          v204 = v349.n128_i16[1] * v27;
                          v203 = v341;
                        }
                        v349.n128_u16[1] = v204 / v203;
                        v349.n128_u16[3] = v349.n128_i16[3] * v202 / v203;
LABEL_485:
                        v206 = 1;
                        goto LABEL_547;
                      }
                      v194 = 0;
                      v348.n128_u64[0] = 0;
                      v348.n128_u16[4] = 8224;
                      goto LABEL_452;
                    }
LABEL_391:
                    v147 = 0;
LABEL_438:
                    v188 = 0;
                    v347.n128_u64[0] = 0;
                    v347.n128_u16[4] = 8224;
                    goto LABEL_439;
                  }
                }
                v186 = &word_254E10E30[40 * v159];
                v187 = *((unsigned __int8 *)v186 + v163);
                if (v187 < *((unsigned __int8 *)v186 + v162))
                {
                  a2 = *(__n128 *)(v158 + 16 * v187);
                  v347 = a2;
                  goto LABEL_437;
                }
                goto LABEL_438;
              }
              v144 = *(unsigned __int16 *)(v143 + 26);
              if (v144 >= 0x103)
                v144 = 259;
              v145 = *((unsigned __int8 *)&word_254E10E30[40 * v144 + 4] + v140);
              if (*(_BYTE *)v143)
                LODWORD(v145) = byte_2160EE6A4[v145];
              v148 = *(_QWORD *)(a1 + 328);
              if (!v148)
                return 4294958327;
              v149 = *(unsigned __int8 *)(a1 + 31);
              if (v149 == 2)
              {
                v150 = *(_DWORD *)(a1 + 16);
                if (*(_BYTE *)(v148 + 33))
                {
                  if ((*(_DWORD *)(a1 + 16) & 1) != *(_BYTE *)(v148 + 38))
                  {
                    v148 = *(_QWORD *)(v148 + 1352);
                    if (!v148)
                      return 4294958327;
                  }
                }
              }
              else
              {
                v150 = *(_DWORD *)(a1 + 16);
              }
              v151 = *(_QWORD *)(v148 + 1256);
              v152 = *(unsigned __int8 *)(*(_QWORD *)(v151 + 8 * v150) + 14);
              if (*(_BYTE *)(a1 + 29))
              {
                if (!*(_BYTE *)(v148 + 33))
                {
                  if (*(_BYTE *)(*(_QWORD *)(v151 + 8 * v150) + 14))
                  {
                    v153 = 2 * v150;
                    if (*(_BYTE *)(*(_QWORD *)(v151 + 16 * v150) + 14) != 1)
                    {
                      v150 = v153 + *(unsigned __int8 *)(*(_QWORD *)(a1 + 216) + 37);
                      goto LABEL_401;
                    }
LABEL_398:
                    v150 = v153 | (v145 > 7);
                  }
                  else
                  {
                    v172 = *(_DWORD *)(a1 + 20);
                    v173 = v172 * (v150 / v172);
                    v174 = v150 % v172;
                    if (v145 <= 7)
                      v172 = 0;
                    v150 = v174 + v172 + 2 * v173;
                  }
                  v171 = (char *)&unk_2160EE600;
                  goto LABEL_400;
                }
              }
              else if (*(_BYTE *)(v148 + 33))
              {
                if (!*(_BYTE *)(a1 + 31))
                {
                  v150 = v150 % *(_DWORD *)(a1 + 20) + v150 / (2 * *(_DWORD *)(a1 + 20)) * *(_DWORD *)(a1 + 20);
                  goto LABEL_389;
                }
LABEL_382:
                v150 >>= 1;
                if (v149 != 2)
                  goto LABEL_389;
                goto LABEL_401;
              }
              if (!*(_BYTE *)(a1 + 31))
                goto LABEL_401;
              if (*(_BYTE *)(v148 + 33))
                goto LABEL_382;
              if (v149 == 1 && v152 == 2)
              {
                v168 = (const float *)(a1 + 80);
                v169 = (int32x2_t)vld1_dup_f32(v168);
                v170 = vabd_s32(v169, *(int32x2_t *)(v148 + 1284));
                a3 = vdup_lane_s32(v170, 1);
                a2.n128_u64[0] = (unint64_t)vcge_u32((uint32x2_t)v170, (uint32x2_t)a3);
                v150 = (v150 & 0xFFFFFFFE) - a2.n128_u32[0];
LABEL_389:
                v171 = (char *)&unk_2160EE5E0 + 16 * (*(_DWORD *)(a1 + 4) & 1);
LABEL_400:
                LOBYTE(v145) = v171[v145];
                goto LABEL_401;
              }
              if (v149 == 2 && v152 == 1)
              {
                v153 = v150 & 0xFFFFFFFE;
                goto LABEL_398;
              }
LABEL_401:
              *(_QWORD *)v336 = *(_QWORD *)(v151 + 8 * v150);
              if (v339 != 1)
              {
                sub_215FD4218(a1, v142, (char)v145, (uint64_t)v346, v148, v150);
                goto LABEL_420;
              }
              *(_BYTE *)(v143 + v141 - 7) = v355;
              *(_BYTE *)(*(_QWORD *)v8 + v141 - 6) = HIBYTE(v355);
              v346[0] = 0;
              if (v356 != 1)
              {
                if (*(_BYTE *)(**(_QWORD **)(a1 + 232) + 1364))
                  goto LABEL_404;
                LODWORD(v145) = (char)v145;
                v182 = *(unsigned __int16 *)(*(_QWORD *)v336 + 10);
                if (v182 >= 0x103)
                  v182 = 259;
                v183 = (__int16 *)(*(_QWORD *)v336
                                 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v182] + v145));
                if (*((_BYTE *)v183 + 8) == 32)
                {
                  if (*((_BYTE *)v183 + 9))
                    goto LABEL_404;
                  v184 = v183[2] * v183[2];
                  v185 = v183[3];
LABEL_529:
                  v175 = (v184 + v185 * v185) < 3;
                }
                else
                {
                  if (!*((_BYTE *)v183 + 8))
                  {
                    v184 = *v183 * *v183;
                    v185 = v183[1];
                    goto LABEL_529;
                  }
LABEL_404:
                  v175 = 0;
                }
                v176 = *(_QWORD *)v8 + v141;
                if (*(_BYTE *)(v176 - 7))
                  v177 = 0;
                else
                  v177 = v175;
                v178 = *(_BYTE *)(v176 - 7) == 32 || v177;
                v179 = *(unsigned __int8 *)(v176 - 6);
                if (v179)
                  v175 = 0;
                v180 = v179 == 32 || v175;
                if (v180 == 1 && (v178 & 1) != 0)
                  goto LABEL_421;
                sub_215FD3D78(a1, v142, v354, (uint64_t)&v351, v346, v178, v180, (int32x2_t)a2.n128_u64[0], a3, a4);
LABEL_420:
                v122 = v123;
                LODWORD(v13) = v343;
                v19 = v344;
              }
LABEL_421:
              if (v355 == 32)
              {
                v14 = v345;
                if (HIBYTE(v355) == 32)
                  return 4294958327;
                v181 = 5;
              }
              else
              {
                if (HIBYTE(v355) == 32)
                  v181 = 4;
                else
                  v181 = 6;
                v14 = v345;
              }
              *(_BYTE *)(*(_QWORD *)v8 + v141) = v181;
              v143 = *(_QWORD *)v8;
LABEL_549:
              *(_WORD *)(v143 + v141 - 15) += LOWORD(v346[0]);
              *(_WORD *)(*(_QWORD *)(a1 + 48) + v141 - 13) += WORD1(v346[0]);
              *(_WORD *)(*(_QWORD *)(a1 + 48) + v141 - 11) += WORD2(v346[0]);
              *(_WORD *)(*(_QWORD *)(a1 + 48) + v141 - 9) += HIWORD(v346[0]);
              v230 = *(_QWORD *)(a1 + 48) + v141;
              v231 = *(unsigned __int8 *)(v230 - 7);
              v232 = *(unsigned __int8 *)(v230 - 6);
              if (*(_BYTE *)(a1 + 31) == 2)
              {
                v231 >>= v231 != 32;
                v232 >>= v232 != 32;
              }
              v233 = *(_QWORD *)(a1 + 264);
              v234 = *(_BYTE *)(v233 + v232 + 33);
              *(_BYTE *)(v230 - 3) = *(_BYTE *)(v233 + v231);
              *(_BYTE *)(*(_QWORD *)(a1 + 48) + v141 - 2) = v234;
              v235 = *(_QWORD *)(a1 + 48);
              v236 = *(unsigned __int8 *)(v235 + v141);
              if (v236 == 5)
              {
                *(_BYTE *)(v235 + v141 - 7) = 32;
                *(_BYTE *)(*(_QWORD *)v8 + v141 - 3) = 0;
                *(_DWORD *)(*(_QWORD *)v8 + v141 - 15) = 0;
              }
              else if (v236 == 4)
              {
                *(_BYTE *)(v235 + v141 - 6) = 32;
                *(_BYTE *)(*(_QWORD *)v8 + v141 - 2) = 0;
                *(_DWORD *)(*(_QWORD *)v8 + v141 - 11) = 0;
              }
              ++v140;
              v141 += 16;
              if ((int)v140 - 24 >= v122)
                goto LABEL_558;
            }
          }
          v353.n128_u64[0] = 0;
          v353.n128_u16[4] = 8224;
          v290 = *(_QWORD *)(a1 + 152);
          if (v290)
            v291 = *(_QWORD *)(v290 + 112);
          else
            v291 = 0;
          v298 = ((unint64_t)v19[v274 + 32] >> 1) & 0xF;
          v299 = ((v274 >> 1) | ((_BYTE)v274 << 7));
          if ((v299 - 4) < 2 || v299 == 1)
          {
            if ((v19[v274 + 32] & 1) == 0)
            {
              if (!v130)
                goto LABEL_758;
              v301 = *(unsigned __int8 *)(a1 + 31);
              if (v274 < 9 || v301 != 2 || (v327 = v342, v328 = v322, *(_BYTE *)(v14 + 144)))
              {
                v303 = v274 > 1 && v301 == 1;
                v304 = v342;
                if (!v303 || *(_BYTE *)(v14 + 144) != 1)
                  v304 = v127;
                v327 = v304;
                if (v303 && *(_BYTE *)(v14 + 144) == 1)
                  v305 = v322;
                else
                  v305 = v338;
                v328 = v305;
              }
              v306 = *(unsigned __int16 *)(v130 + 10);
              if (v306 >= 0x103)
                v306 = 259;
              a2 = *(__n128 *)(v130 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v306] + v298));
              v353 = a2;
              LOBYTE(v306) = a2.n128_u8[8];
              if (a2.n128_u8[8] != 32)
                v306 = v353.n128_u8[8] / v328 * v327;
              v122 = v123;
              v353.n128_u8[8] = v306;
              LOBYTE(v306) = v353.n128_u8[9];
              if (v353.n128_u8[9] != 32)
                v306 = v353.n128_u8[9] / v328 * v327;
              v297 = 0;
              v353.n128_u8[9] = v306;
              v309 = v328;
              v310 = v353.n128_i16[1] * v328;
              v311 = v327;
LABEL_762:
              v353.n128_u16[1] = v310 / v311;
              v353.n128_u16[3] = v353.n128_i16[3] * v309 / v311;
              goto LABEL_763;
            }
          }
          else
          {
            if (!__PAIR16__((_DWORD)v274 << 7 >> 24, (_BYTE)v274 << 7))
            {
              if ((v19[v274 + 32] & 1) == 0)
              {
                if (v291)
                {
                  v307 = *(unsigned __int16 *)(v291 + 10);
                  if (v307 >= 0x103)
                    v307 = 259;
                  a2 = *(__n128 *)(v291 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v307] + v298));
                  v353 = a2;
                  LOBYTE(v307) = a2.n128_u8[8];
                  if (a2.n128_u8[8] != 32)
                    v307 = v353.n128_u8[8] / v328 * v327;
                  v353.n128_u8[8] = v307;
                  LOBYTE(v307) = v353.n128_u8[9];
                  v122 = v123;
                  if (v353.n128_u8[9] != 32)
                    v307 = v353.n128_u8[9] / v328 * v327;
                  v353.n128_u8[9] = v307;
                  v294 = v328;
                  v295 = v353.n128_i16[1] * v328;
                  v296 = v327;
                  goto LABEL_702;
                }
                goto LABEL_758;
              }
              v316 = *(unsigned __int16 *)(v121 + 26);
              if (v316 >= 0x103)
                v316 = 259;
              v317 = &word_254E10E30[40 * v316];
              v314 = *((unsigned __int8 *)v317 + v298);
              v315 = *(unsigned __int8 *)v317;
              goto LABEL_756;
            }
            if ((v19[v274 + 32] & 1) == 0)
            {
              if (!v270)
                goto LABEL_758;
              v308 = *(unsigned __int16 *)(v270 + 10);
              if (v308 >= 0x103)
                v308 = 259;
              a2 = *(__n128 *)(v270 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v308] + v298));
              v353 = a2;
              LOBYTE(v308) = a2.n128_u8[8];
              if (a2.n128_u8[8] != 32)
                v308 = v353.n128_u8[8] / v27 * v341;
              v353.n128_u8[8] = v308;
              LOBYTE(v308) = v353.n128_u8[9];
              v122 = v123;
              if (v353.n128_u8[9] != 32)
                v308 = v353.n128_u8[9] / v27 * v341;
              v297 = 0;
              v353.n128_u8[9] = v308;
              v309 = v27;
              v310 = v353.n128_i16[1] * v27;
              v311 = v341;
              goto LABEL_762;
            }
          }
          v312 = *(unsigned __int16 *)(v121 + 26);
          if (v312 >= 0x103)
            v312 = 259;
          v313 = &word_254E10E30[40 * v312];
          v314 = *((unsigned __int8 *)v313 + v298);
          v315 = *((unsigned __int8 *)v313 + v274);
LABEL_756:
          if (v314 < v315)
          {
            v297 = 0;
            a2 = *(__n128 *)(v124 + 16 * v314);
            v353 = a2;
LABEL_759:
            v122 = v123;
            goto LABEL_763;
          }
LABEL_758:
          v297 = 0;
          v353.n128_u64[0] = 0;
          v353.n128_u16[4] = 8224;
          goto LABEL_759;
        }
        v130 = *(_QWORD *)(v278 + 112);
        v139 = v342;
      }
    }
    else
    {
      v139 = v20;
    }
    if ((v19[v274] & 1) == 0)
    {
      if (v130)
      {
        v279 = *(unsigned __int16 *)(v130 + 10);
        if (v279 >= 0x103)
          v279 = 259;
        a2 = *(__n128 *)(v130 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v279] + v275));
        v351 = a2;
        LOBYTE(v275) = a2.n128_u8[8];
        if (a2.n128_u8[8] != 32)
          LODWORD(v275) = v351.n128_u8[8] / v338 * v139;
        v351.n128_u8[8] = v275;
        LOBYTE(v275) = v351.n128_u8[9];
        if (v351.n128_u8[9] != 32)
          LODWORD(v275) = v351.n128_u8[9] / v338 * v139;
        v351.n128_u8[9] = v275;
        v351.n128_u16[1] = v351.n128_i16[1] * v338 / v139;
        v351.n128_u16[3] = v351.n128_i16[3] * v338 / v139;
        goto LABEL_673;
      }
      goto LABEL_669;
    }
    goto LABEL_671;
  }
LABEL_558:
  if ((_DWORD)v13 == 5)
  {
    v237 = *(_QWORD *)v8;
  }
  else
  {
    v237 = *(_QWORD *)(a1 + 48);
    if (**(_BYTE **)(a1 + 40))
      goto LABEL_584;
  }
  v238 = *(unsigned __int8 *)(v237 + 31);
  v347.n128_u64[0] = 0;
  v239 = 1;
  if (v238 == 5)
  {
    v347.n128_u32[0] = 1;
    LODWORD(v240) = 1;
  }
  else if (v238 == 4)
  {
    LODWORD(v240) = 0;
    v239 = 0;
    v347.n128_u32[1] = 1;
  }
  else
  {
    LODWORD(v240) = 0;
  }
  v240 = v240;
  if ((_DWORD)v122 == 16)
  {
    if (v240 <= v239)
    {
      v241 = v239 + 1;
      v242 = v237 + 136;
      do
      {
        v243 = (_DWORD *)(v242 + 4 * v240);
        v244 = *(v243 - 30);
        if (!((*(v243 - 22) - v244) | (*(v243 - 26) - v244) | (*(v243 - 18) - v244) | (*(v243 - 14) - v244) | (*(v243 - 10) - v244) | (*(v243 - 6) - v244) | (*(v243 - 2) - v244) | (v243[2] - v244) | (v243[6] - v244) | (v243[10] - v244) | (v243[14] - v244) | (v243[18] - v244) | (v243[22] - v244) | (v243[26] - v244) | (v243[30] - v244)))
        {
          v245 = *(unsigned __int8 *)(v242 + v240 - 112);
          if ((*(unsigned __int8 *)(v242 + v240 - 80) - v245) | (*(unsigned __int8 *)(v242 + v240 - 96) - v245) | (*(unsigned __int8 *)(v242 + v240 - 64) - v245) | (*(unsigned __int8 *)(v242 + v240 - 48) - v245) | (*(unsigned __int8 *)(v242 + v240 - 32) - v245) | (*(unsigned __int8 *)(v242 + v240 - 16) - v245) | (*(unsigned __int8 *)(v242 + v240) - v245) | (*(unsigned __int8 *)(v242 + v240 + 16) - v245) | (*(unsigned __int8 *)(v242 + v240 + 32) - v245) | (*(unsigned __int8 *)(v242 + v240 + 48) - v245) | (*(unsigned __int8 *)(v242 + v240 + 64) - v245) | (*(unsigned __int8 *)(v242 + v240 + 80) - v245) | (*(unsigned __int8 *)(v242 + v240 + 96) - v245) | (*(unsigned __int8 *)(v242 + v240 + 112) - v245) | (*(unsigned __int8 *)(v242 + v240 + 128) - v245))
            break;
          v347.n128_u32[v240] = 1;
        }
        ++v240;
      }
      while (v241 != v240);
    }
  }
  else if (v240 <= v239)
  {
    v246 = v239 + 1;
    v247 = v237 + 72;
    do
    {
      v248 = v247 + 4 * v240;
      if (!((*(_DWORD *)(v248 - 24) - *(_DWORD *)(v248 - 56)) | (*(_DWORD *)(v248 - 40) - *(_DWORD *)(v248 - 56)) | (*(_DWORD *)(v248 - 8) - *(_DWORD *)(v248 - 56))))
      {
        if ((*(unsigned __int8 *)(v247 + v240 - 16) - *(unsigned __int8 *)(v247 + v240 - 48)) | (*(unsigned __int8 *)(v247 + v240 - 32)
                                                                                                - *(unsigned __int8 *)(v247 + v240 - 48)) | (*(unsigned __int8 *)(v247 + v240) - *(unsigned __int8 *)(v247 + v240 - 48)))
          break;
        v347.n128_u32[v240] = 1;
      }
      ++v240;
    }
    while (v246 != v240);
  }
  if ((v347.n128_u32[1] & v347.n128_u32[0]) != 0)
  {
    result = 0;
    *(_BYTE *)(v237 + 272) = 1;
    *(_WORD *)(*(_QWORD *)v8 + 26) = 256;
LABEL_632:
    *v10 = *(_WORD *)(*(_QWORD *)v8 + 16);
    v10[1] = *(_WORD *)(*(_QWORD *)v8 + 18);
    v10[2] = *(_WORD *)(*(_QWORD *)v8 + 20);
    v10[3] = *(_WORD *)(*(_QWORD *)v8 + 22);
    v10[4] = *(_WORD *)(*(_QWORD *)v8 + 24);
    v10[5] = *(_WORD *)(*(_QWORD *)v8 + 26);
    v10[6] = *(_WORD *)(*(_QWORD *)v8 + 28);
    v10[7] = *(_WORD *)(*(_QWORD *)v8 + 30);
    return result;
  }
  v122 = v123;
LABEL_584:
  *v10 = *(_WORD *)(v237 + 16);
  v10[1] = *(_WORD *)(*(_QWORD *)v8 + 18);
  v10[2] = *(_WORD *)(*(_QWORD *)v8 + 20);
  v10[3] = *(_WORD *)(*(_QWORD *)v8 + 22);
  v10[4] = *(_WORD *)(*(_QWORD *)v8 + 24);
  v10[5] = *(_WORD *)(*(_QWORD *)v8 + 26);
  v10[6] = *(_WORD *)(*(_QWORD *)v8 + 28);
  v10[7] = *(_WORD *)(*(_QWORD *)v8 + 30);
  v10[8] = *(_WORD *)(*(_QWORD *)v8 + 32);
  v10[9] = *(_WORD *)(*(_QWORD *)v8 + 34);
  v10[10] = *(_WORD *)(*(_QWORD *)v8 + 36);
  v10[11] = *(_WORD *)(*(_QWORD *)v8 + 38);
  v10[12] = *(_WORD *)(*(_QWORD *)v8 + 40);
  v10[13] = *(_WORD *)(*(_QWORD *)v8 + 42);
  v10[14] = *(_WORD *)(*(_QWORD *)v8 + 44);
  v10[15] = *(_WORD *)(*(_QWORD *)v8 + 46);
  v10[16] = *(_WORD *)(*(_QWORD *)v8 + 48);
  v10[17] = *(_WORD *)(*(_QWORD *)v8 + 50);
  v10[18] = *(_WORD *)(*(_QWORD *)v8 + 52);
  v10[19] = *(_WORD *)(*(_QWORD *)v8 + 54);
  v10[20] = *(_WORD *)(*(_QWORD *)v8 + 56);
  v10[21] = *(_WORD *)(*(_QWORD *)v8 + 58);
  v10[22] = *(_WORD *)(*(_QWORD *)v8 + 60);
  v10[23] = *(_WORD *)(*(_QWORD *)v8 + 62);
  v10[24] = *(_WORD *)(*(_QWORD *)v8 + 64);
  v10[25] = *(_WORD *)(*(_QWORD *)v8 + 66);
  v10[26] = *(_WORD *)(*(_QWORD *)v8 + 68);
  v10[27] = *(_WORD *)(*(_QWORD *)v8 + 70);
  v10[28] = *(_WORD *)(*(_QWORD *)v8 + 72);
  v10[29] = *(_WORD *)(*(_QWORD *)v8 + 74);
  v10[30] = *(_WORD *)(*(_QWORD *)v8 + 76);
  v10[31] = *(_WORD *)(*(_QWORD *)v8 + 78);
  if (v122 >= 5)
  {
    v249 = 0;
    do
    {
      v250 = &v10[v249 / 2 + 39];
      *(v250 - 7) = *(_WORD *)(*(_QWORD *)v8 + v249 + 80);
      *(v250 - 6) = *(_WORD *)(*(_QWORD *)v8 + v249 + 82);
      *(v250 - 5) = *(_WORD *)(*(_QWORD *)v8 + v249 + 84);
      *(v250 - 4) = *(_WORD *)(*(_QWORD *)v8 + v249 + 86);
      *(v250 - 3) = *(_WORD *)(*(_QWORD *)v8 + v249 + 88);
      *(v250 - 2) = *(_WORD *)(*(_QWORD *)v8 + v249 + 90);
      *(v250 - 1) = *(_WORD *)(*(_QWORD *)v8 + v249 + 92);
      *v250 = *(_WORD *)(*(_QWORD *)v8 + v249 + 94);
      v249 += 16;
    }
    while (16 * v122 - 64 != v249);
  }
  return 0;
}

uint64_t sub_215FD3D78(uint64_t result, int a2, _DWORD *a3, uint64_t a4, _WORD *a5, char a6, char a7, int32x2_t a8, int32x2_t a9, int32x2_t a10)
{
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  __int16 v17;
  int v18;
  __int16 v19;
  int v20;
  int v21;
  BOOL v22;
  int v23;
  int v24;
  int v25;
  int32x2_t v26;
  int32x2_t v27;

  v10 = *(unsigned __int8 *)(*(_QWORD *)(result + 40) + 1);
  v11 = *(_QWORD *)(result + 48) + 16 * a2;
  v12 = *(unsigned __int8 *)(v11 + 24);
  v13 = *(unsigned __int8 *)(v11 + 25);
  LOWORD(v14) = *(_WORD *)a4;
  LOWORD(v15) = *(_WORD *)(a4 + 2);
  a8.i16[0] = *(_WORD *)(a4 + 4);
  a8.i16[2] = *(_WORD *)(a4 + 6);
  if (!*a3 || a3[1] || a3[2])
  {
    a9.i16[0] = *(_WORD *)(a4 + 20);
    a9.i16[2] = *(_WORD *)(a4 + 22);
    a10.i16[0] = *(_WORD *)(a4 + 36);
    a10.i16[2] = *(_WORD *)(a4 + 38);
    if ((a6 & 1) != 0)
    {
LABEL_39:
      if ((a7 & 1) != 0 || v10 != 5 && v10 != 3)
        return result;
      v24 = *(unsigned __int8 *)(a4 + 25);
      v25 = *(unsigned __int8 *)(a4 + 41);
      if (*(unsigned __int8 *)(a4 + 9) == v13)
      {
        if (v24 != v13 && v25 != v13)
          goto LABEL_52;
        goto LABEL_51;
      }
      if (v24 == v13)
      {
        if (v25 != v13)
        {
          a8 = a9;
LABEL_52:
          a5[2] = a8.i16[0];
          a5[3] = a8.i16[2];
          return result;
        }
      }
      else if (v25 == v13)
      {
        a8 = a10;
        goto LABEL_52;
      }
LABEL_51:
      v26 = vshr_n_s32(vshl_n_s32(a9, 0x10uLL), 0x10uLL);
      v27 = vshr_n_s32(vshl_n_s32(a8, 0x10uLL), 0x10uLL);
      a8 = vmin_s32(vmax_s32(vmin_s32(v27, v26), vshr_n_s32(vshl_n_s32(a10, 0x10uLL), 0x10uLL)), vmax_s32(v27, v26));
      goto LABEL_52;
    }
    LOWORD(v16) = *(_WORD *)(a4 + 16);
    v17 = *(_WORD *)(a4 + 18);
    LOWORD(v18) = *(_WORD *)(a4 + 32);
    v19 = *(_WORD *)(a4 + 34);
    result = *(unsigned __int8 *)(a4 + 24);
    v20 = *(unsigned __int8 *)(a4 + 40);
    if (*(unsigned __int8 *)(a4 + 8) == v12)
    {
      if ((_DWORD)result == v12 || v20 == v12)
      {
LABEL_18:
        v21 = (__int16)v16;
        v14 = (__int16)v14;
        v22 = (__int16)v14 <= (__int16)v16;
        if ((__int16)v14 >= (__int16)v16)
          v16 = (__int16)v16;
        else
          v16 = (__int16)v14;
        v15 = (__int16)v15;
        if (v22)
          v14 = v21;
        if ((__int16)v15 >= v17)
          v23 = v17;
        else
          v23 = (__int16)v15;
        if ((__int16)v15 <= v17)
          v15 = v17;
        if (v16 <= (__int16)v18)
          v18 = (__int16)v18;
        else
          v18 = v16;
        if (v23 <= v19)
          v23 = v19;
        if (v18 < v14)
          LOWORD(v14) = v18;
        if (v23 < v15)
          LOWORD(v15) = v23;
      }
    }
    else if ((_DWORD)result == v12)
    {
      if (v20 == v12)
        goto LABEL_18;
      LOWORD(v14) = *(_WORD *)(a4 + 16);
      LOWORD(v15) = *(_WORD *)(a4 + 18);
    }
    else
    {
      if (v20 != v12)
        goto LABEL_18;
      LOWORD(v14) = *(_WORD *)(a4 + 32);
      LOWORD(v15) = *(_WORD *)(a4 + 34);
    }
    *a5 = v14;
    a5[1] = v15;
    goto LABEL_39;
  }
  if ((a6 & 1) == 0)
  {
    *a5 = v14;
    a5[1] = v15;
  }
  if ((a7 & 1) == 0)
    goto LABEL_52;
  return result;
}

uint64_t sub_215FD3F54(uint64_t a1, unsigned int a2, int *a3, uint64_t a4, _WORD *a5, int32x2_t a6, int32x2_t a7, int32x2_t a8, int32x2_t a9, int32x2_t a10)
{
  uint64_t v10;
  unsigned __int8 *v11;
  int v12;
  unsigned int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  uint64_t result;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int32x2_t v27;
  int32x2_t v28;
  int32x2_t v29;
  int32x2_t v30;
  int32x2_t v31;

  v10 = *(_QWORD *)(a1 + 48);
  v11 = (unsigned __int8 *)(v10 + 16 * a2);
  if (v11[31] == 3)
  {
    a2 = 0;
    v12 = 4112;
  }
  else
  {
    v13 = *(unsigned __int16 *)(v10 + 26);
    if (v13 >= 0x103)
      v13 = 259;
    v12 = word_254E10E30[40 * v13 + 24 + a2];
  }
  v14 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 40) + 1);
  v15 = v11[24];
  v17 = *a3;
  v16 = a3[1];
  v18 = a3[2];
  a8.i16[0] = *(_WORD *)a4;
  a8.i16[2] = *(_WORD *)(a4 + 2);
  a9.i16[0] = *(_WORD *)(a4 + 32);
  a9.i16[2] = *(_WORD *)(a4 + 34);
  a6.i16[0] = *(_WORD *)(a4 + 4);
  a7.i16[0] = *(_WORD *)(a4 + 36);
  result = *(unsigned __int8 *)(a4 + 8);
  v20 = *(unsigned __int8 *)(a4 + 40);
  if (v12 == 4104)
  {
    if (!a2 && (_DWORD)result == v15)
      goto LABEL_22;
    if (a2 == 1 && v20 == v15)
      goto LABEL_11;
    a10.i16[0] = *(_WORD *)(a4 + 16);
    a10.i16[2] = *(_WORD *)(a4 + 18);
    v21 = *(unsigned __int8 *)(a4 + 24);
LABEL_19:
    if (!v17 || v16 || v18)
    {
      if ((_DWORD)result == v15)
      {
        if (v21 != v15 && v20 != v15)
          goto LABEL_22;
      }
      else if (v21 == v15)
      {
        if (v20 != v15)
          goto LABEL_23;
      }
      else if (v20 == v15)
      {
LABEL_11:
        a10 = a9;
        goto LABEL_23;
      }
      v27 = vshr_n_s32(vshl_n_s32(a10, 0x10uLL), 0x10uLL);
      v28 = vshr_n_s32(vshl_n_s32(a8, 0x10uLL), 0x10uLL);
      v29 = vmin_s32(v28, v27);
      a8 = vmax_s32(v28, v27);
      a10 = vmin_s32(vmax_s32(v29, vshr_n_s32(vshl_n_s32(a9, 0x10uLL), 0x10uLL)), a8);
      goto LABEL_23;
    }
LABEL_22:
    a10 = a8;
    goto LABEL_23;
  }
  a10.i16[0] = *(_WORD *)(a4 + 16);
  a10.i16[2] = *(_WORD *)(a4 + 18);
  v21 = *(unsigned __int8 *)(a4 + 24);
  if (v12 != 2064)
    goto LABEL_19;
  if (a2 || v21 != v15)
  {
    if (a2 == 1 && (_DWORD)result == v15)
      goto LABEL_22;
    goto LABEL_19;
  }
LABEL_23:
  a6.i16[2] = *(_WORD *)(a4 + 6);
  a7.i16[2] = *(_WORD *)(a4 + 38);
  v22 = v11[25];
  *a5 = a10.i16[0];
  a5[1] = a10.i16[2];
  if (v14 == 5 || v14 == 3)
  {
    v23 = *(unsigned __int8 *)(a4 + 9);
    v24 = *(unsigned __int8 *)(a4 + 41);
    if (v12 == 4104)
    {
      if (!a2 && v23 == v22)
        goto LABEL_39;
      if (a2 == 1 && v24 == v22)
        goto LABEL_60;
      a8.i16[0] = *(_WORD *)(a4 + 20);
      a8.i16[2] = *(_WORD *)(a4 + 22);
      v25 = *(unsigned __int8 *)(a4 + 25);
    }
    else
    {
      a8.i16[0] = *(_WORD *)(a4 + 20);
      a8.i16[2] = *(_WORD *)(a4 + 22);
      v25 = *(unsigned __int8 *)(a4 + 25);
      if (v12 == 2064)
      {
        if (!a2 && v25 == v22)
          goto LABEL_62;
        if (a2 == 1 && v23 == v22)
          goto LABEL_39;
      }
    }
    if (v17 && !v16 && !v18)
      goto LABEL_39;
    if (v23 == v22)
    {
      if (v25 != v22 && v24 != v22)
      {
LABEL_39:
        a8 = a6;
LABEL_62:
        a5[2] = a8.i16[0];
        a5[3] = a8.i16[2];
        return result;
      }
      goto LABEL_61;
    }
    if (v25 == v22)
    {
      if (v24 != v22)
        goto LABEL_62;
      goto LABEL_61;
    }
    if (v24 != v22)
    {
LABEL_61:
      v30 = vshr_n_s32(vshl_n_s32(a8, 0x10uLL), 0x10uLL);
      v31 = vshr_n_s32(vshl_n_s32(a6, 0x10uLL), 0x10uLL);
      a8 = vmin_s32(vmax_s32(vmin_s32(v31, v30), vshr_n_s32(vshl_n_s32(a7, 0x10uLL), 0x10uLL)), vmax_s32(v31, v30));
      goto LABEL_62;
    }
LABEL_60:
    a8 = a7;
    goto LABEL_62;
  }
  return result;
}

uint64_t sub_215FD4218(uint64_t result, int a2, unsigned int a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  int *v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  unsigned __int8 i;
  unsigned __int8 j;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  uint64_t v33;
  unsigned __int8 v34;
  char v35;
  BOOL v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  int v41;
  int v42;
  int v43;
  BOOL v44;
  int v45;
  int v46;
  int v47;
  int v48;
  unsigned int v49;
  unsigned int v50;
  _BYTE *v51;
  char v53;

  v6 = *(_QWORD *)(result + 48);
  v7 = *(unsigned __int8 *)(result + 187);
  v8 = *(_QWORD *)(result + 216);
  v9 = *(_DWORD *)(result + 296);
  v10 = *(_QWORD *)(result + 1424480);
  v11 = *(unsigned __int8 *)(v10 + 14);
  v12 = *(unsigned __int16 *)(v10 + 10);
  if (v12 >= 0x103)
    v12 = 259;
  v13 = (int *)(v10 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v12] + a3));
  v14 = *((unsigned __int8 *)v13 + 8);
  if (v14 == 32)
  {
    v14 = *((unsigned __int8 *)v13 + 9);
    if (v14 == 32)
    {
      v15 = *(uint64_t **)(result + 224);
      v16 = *v15;
      v17 = *(unsigned __int8 *)(result + 31);
      v18 = *v15;
      if (v17 == 2)
      {
        v18 = *v15;
        if ((*(_BYTE *)(result + 16) & 1) != 0)
        {
          v18 = *v15;
          if (!*(_BYTE *)(v16 + 38))
            v18 = *(_QWORD *)(v16 + 1352);
        }
      }
      i = 0;
      j = 0;
      LOWORD(v21) = 0;
      v22 = 0;
      LOBYTE(v14) = 0;
      v23 = **(_QWORD **)(result + 232);
      goto LABEL_99;
    }
    v21 = v13[1];
    v24 = *((unsigned __int8 *)v13 + 13);
    if (v24 <= 0x50 && v9 != 0)
    {
      i = *(_BYTE *)(*(_QWORD *)(result + 288) + v24);
      v18 = *(_QWORD *)(*(_QWORD *)(result + 304) + 8 * v24);
      if (!*(_BYTE *)(v8 + 1362) || v11 != 2 || (v14 & 1) == 0)
        goto LABEL_44;
      goto LABEL_41;
    }
    v26 = *(_DWORD *)(result + 240);
    v29 = *(_QWORD *)(result + 264);
    i = 0;
    if (v26)
    {
      while (*(unsigned __int8 *)(*(_QWORD *)(result + 272) + i) != (_DWORD)v24)
      {
        if (v26 <= ++i)
        {
          for (i = 0; i < v26; ++i)
          {
            if (*(unsigned __int8 *)(v29 + i) == (_DWORD)v24)
              break;
          }
          break;
        }
      }
    }
    if (v26 <= i)
      i = 32;
    if (*((_BYTE *)v13 + 13) && (v33 = *(_QWORD *)(result + 256), *(_DWORD *)(v33 + 48) > (v24 - 1)))
      v18 = *(_QWORD *)(*(_QWORD *)(v33 + 40) + 8 * (v24 - 1));
    else
      v18 = 0;
    if (*(_BYTE *)(v8 + 1362) && v11 == 2 && (v14 & 1) != 0 && (a6 & 1) == 0 && *(_BYTE *)(v18 + 33))
    {
      if (v26)
      {
        v34 = 0;
        while (*(unsigned __int8 *)(*(_QWORD *)(result + 280) + v34) != (_DWORD)v24)
        {
          ++v34;
          j = 32;
          if (v26 <= v34)
            goto LABEL_98;
        }
        j = v34;
        goto LABEL_98;
      }
LABEL_171:
      j = 32;
      goto LABEL_98;
    }
    if (v26)
    {
      v32 = 0;
      while (*(unsigned __int8 *)(v29 + v32) != (_DWORD)v24)
      {
        if (v26 <= ++v32)
        {
          for (j = 0; j < v26; ++j)
          {
            if (*(unsigned __int8 *)(*(_QWORD *)(result + 280) + j) == (_DWORD)v24)
              break;
          }
          goto LABEL_96;
        }
      }
LABEL_95:
      j = v32;
LABEL_96:
      if (v26 <= j)
        j = 32;
      goto LABEL_98;
    }
    goto LABEL_94;
  }
  v21 = *v13;
  v24 = *((unsigned __int8 *)v13 + 12);
  if (v24 <= 0x50 && v9 != 0)
  {
    i = *(_BYTE *)(*(_QWORD *)(result + 288) + v24);
    v18 = *(_QWORD *)(*(_QWORD *)(result + 304) + 8 * v24);
    if (!*(_BYTE *)(v8 + 1362) || v11 != 2 || (v14 & 1) == 0)
      goto LABEL_44;
LABEL_41:
    if ((a6 & 1) == 0 && *(_BYTE *)(v18 + 33))
    {
      v30 = *(_QWORD *)(result + 320);
LABEL_45:
      j = *(_BYTE *)(v30 + v24);
      goto LABEL_98;
    }
LABEL_44:
    v30 = *(_QWORD *)(result + 312);
    goto LABEL_45;
  }
  v26 = *(_DWORD *)(result + 240);
  v27 = *(_QWORD *)(result + 264);
  i = 0;
  if (v26)
  {
    while (*(unsigned __int8 *)(*(_QWORD *)(result + 272) + i) != (_DWORD)v24)
    {
      if (v26 <= ++i)
      {
        for (i = 0; i < v26; ++i)
        {
          if (*(unsigned __int8 *)(v27 + i) == (_DWORD)v24)
            break;
        }
        break;
      }
    }
  }
  if (v26 <= i)
    i = 32;
  if (*((_BYTE *)v13 + 12) && (v31 = *(_QWORD *)(result + 256), *(_DWORD *)(v31 + 48) > (v24 - 1)))
    v18 = *(_QWORD *)(*(_QWORD *)(v31 + 40) + 8 * (v24 - 1));
  else
    v18 = 0;
  if (!*(_BYTE *)(v8 + 1362) || v11 != 2 || (v14 & 1) == 0 || (a6 & 1) != 0 || !*(_BYTE *)(v18 + 33))
  {
    if (v26)
    {
      v32 = 0;
      while (*(unsigned __int8 *)(v27 + v32) != (_DWORD)v24)
      {
        if (v26 <= ++v32)
        {
          for (j = 0; j < v26; ++j)
          {
            if (*(unsigned __int8 *)(*(_QWORD *)(result + 280) + j) == (_DWORD)v24)
              break;
          }
          goto LABEL_96;
        }
      }
      goto LABEL_95;
    }
LABEL_94:
    j = 0;
    goto LABEL_96;
  }
  if (!v26)
    goto LABEL_171;
  j = 0;
  while (*(unsigned __int8 *)(*(_QWORD *)(result + 280) + j) != (_DWORD)v24)
  {
    if (v26 <= ++j)
      goto LABEL_171;
  }
LABEL_98:
  v22 = HIWORD(v21);
  v17 = *(unsigned __int8 *)(result + 31);
  v15 = *(uint64_t **)(result + 224);
  v16 = v15[i];
  v23 = **(_QWORD **)(result + 232);
  if (i > 0x1Fu)
    goto LABEL_113;
LABEL_99:
  if (v17 == 2)
  {
    if (*(unsigned __int8 *)(a5 + 33) | (v11 == 2))
    {
      if (v11 == 2)
        v35 = v14 & 1;
      else
        v35 = (*(_DWORD *)(result + 16) & 1) != *(_BYTE *)(v18 + 38);
      i = v35 | (2 * i);
      goto LABEL_112;
    }
    if (v11 == 1)
    {
      i *= 2;
LABEL_112:
      v17 = 2;
      goto LABEL_113;
    }
  }
  if (!*(_BYTE *)(v8 + 1362) || v11 != 2)
  {
LABEL_113:
    if (v7 == 1 && v11 != 2)
    {
      v22 = (__int16)(v22 + (v22 >> 15)) >> 1;
      goto LABEL_126;
    }
    goto LABEL_116;
  }
  if ((v14 & 1) != 0)
  {
    if (*(_BYTE *)(v18 + 33))
      v16 = v15[j];
    else
      j = i + 1;
    goto LABEL_117;
  }
LABEL_116:
  j = i;
LABEL_117:
  if (v7 == 2 && v17 != 2)
  {
    v36 = v11 == 2 && v17 == 1;
    v37 = 1;
    if (v36)
      v37 = 2;
    v22 <<= v37;
    goto LABEL_141;
  }
  i = j;
LABEL_126:
  if (v17 != 2 || v11 != 1)
  {
    if (v17 == 1 && v11 == 2)
    {
      LOWORD(v22) = 2 * v22;
    }
    else if (v17 == 2)
    {
      goto LABEL_129;
    }
    j = i;
LABEL_141:
    v43 = *(_DWORD *)(v16 + 1280);
    v41 = *(_DWORD *)(v23 + 1280) - v43;
    v42 = *(_DWORD *)(v8 + 1280) - v43;
    i = j;
    goto LABEL_142;
  }
  v22 = (__int16)(v22 + ((unsigned __int16)(v22 & 0x8000) >> 15)) >> 1;
LABEL_129:
  if ((*(_DWORD *)(result + 16) & 1) != 0)
    v38 = 1288;
  else
    v38 = 1284;
  if ((*(_DWORD *)(result + 16) & 1) == (i & 1))
    v39 = 1284;
  else
    v39 = 1288;
  v40 = *(_DWORD *)(v16 + v39);
  v41 = *(_DWORD *)(v23 + v38) - v40;
  v42 = *(_DWORD *)(v8 + v38) - v40;
LABEL_142:
  if (*(_BYTE *)(v16 + 1364))
    v44 = 1;
  else
    v44 = v41 == 0;
  if (v44)
  {
    *(_QWORD *)a4 = (unsigned __int16)v21 | ((unsigned __int16)v22 << 16);
  }
  else
  {
    if (v42 >= 127)
      v42 = 127;
    if (v42 <= -128)
      v42 = -128;
    if (v41 >= 127)
      v41 = 127;
    if (v41 <= -128)
      v41 = -128;
    v45 = (v41 + ((v41 & 0x80) >> 7)) << 24 >> 25;
    if (v41 <= -2)
      v45 = -v45;
    v46 = v42 * (__int16)((__int16)(v45 + 0x4000) / v41);
    v47 = (v46 + 32) >> 6;
    if (v46 > 65503)
      v47 = 1023;
    if (v46 >= -65568)
      v48 = v47;
    else
      v48 = -1024;
    v49 = (v48 * (__int16)v21 + 128) >> 8;
    *(_WORD *)a4 = v49;
    v50 = (v48 * (__int16)v22 + 128) >> 8;
    *(_WORD *)(a4 + 2) = v50;
    *(_WORD *)(a4 + 4) = v49 - v21;
    *(_WORD *)(a4 + 6) = v50 - v22;
  }
  v51 = (_BYTE *)(v6 + 16 * a2);
  v51[24] = i;
  v51[25] = 0;
  v53 = *(_BYTE *)(result + 31) == 2 && i != 32;
  v51[28] = *(_BYTE *)(*(_QWORD *)(result + 264) + (i >> v53));
  v51[29] = *(_BYTE *)(*(_QWORD *)(result + 264) + 33);
  return result;
}

uint64_t sub_215FD485C(uint64_t a1, int16x8_t a2, int16x8_t a3)
{
  _OWORD *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char i;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  unsigned __int16 *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int16 *v28;
  uint64_t v29;
  unsigned int v30;
  int v31;
  uint64_t v32;
  unsigned __int16 *v33;
  uint64_t v34;
  unsigned int v35;
  int v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  unsigned int v40;
  unsigned __int16 *v41;
  uint64_t v42;
  int16x8_t v43;
  BOOL v44;
  unsigned int v45;
  unsigned int v46;
  __int32 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  unsigned int v53;
  int16x8_t v54;
  unsigned int v55;
  unsigned __int16 *v56;
  uint64_t v57;
  unsigned int v58;
  unsigned int v59;
  unsigned __int16 *v60;
  unsigned int v61;
  unsigned int v62;
  unsigned __int8 *v63;
  unsigned int v64;
  unsigned int v65;
  int v66;
  BOOL v67;
  uint64_t v68;
  unsigned __int8 v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t result;
  BOOL v75;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int v84;
  int v85;
  unsigned int v86;
  int v87;
  unsigned int v88;
  __int32 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unsigned __int8 *v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unsigned int v101;
  unsigned __int8 *v102;
  unsigned int v103;
  unsigned int v104;
  uint64_t v105;
  char v106;
  _BYTE *v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  unsigned __int16 *v116;
  uint64_t v117;
  unsigned int v118;
  int v119;
  uint64_t v120;
  unsigned __int16 *v121;
  uint64_t v122;
  unsigned int v123;
  int v124;
  BOOL v125;
  uint64_t v126;
  uint64_t v127;
  unsigned int v128;
  int v129;
  uint64_t v130;
  int v131;
  unsigned int v132;
  unsigned __int16 *v133;
  uint64_t v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned __int16 *v138;
  unsigned int v139;
  unsigned int v140;
  int v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int v146;
  uint64_t v147;
  unsigned int v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  unsigned int v154;
  uint64_t v155;
  int v156;
  unsigned int v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unsigned __int16 *v167;
  uint64_t v168;
  unsigned int v169;
  int v170;
  uint64_t v171;
  unsigned __int16 *v172;
  uint64_t v173;
  unsigned int v174;
  int v175;
  int v176;
  unsigned int v177;
  uint64_t v178;
  unsigned int v179;
  unsigned __int16 *v180;
  uint64_t v181;
  __int128 v182;
  BOOL v183;
  unsigned int v184;
  unsigned int v185;
  int v186;
  uint64_t v187;
  uint64_t v188;
  const float *v189;
  int32x2_t v190;
  int32x2_t v191;
  char *v192;
  uint64_t v193;
  int v194;
  unsigned int v196;
  __int128 v197;
  unsigned int v198;
  unsigned __int16 *v199;
  uint64_t v200;
  unsigned int v201;
  unsigned int v202;
  int v203;
  int v204;
  _BOOL4 v205;
  uint64_t v206;
  BOOL v207;
  char v208;
  int v209;
  int v210;
  char v211;
  unsigned int v212;
  __int16 *v213;
  int v214;
  int v215;
  unsigned int v216;
  unsigned __int16 *v217;
  unsigned int v218;
  unsigned int v219;
  uint64_t v220;
  unsigned int v221;
  unsigned int v222;
  uint64_t v223;
  char v224;
  uint64_t v225;
  int v226;
  uint64_t v227;
  _OWORD *v228;
  int v229;
  unsigned int v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  _DWORD *v234;
  int v235;
  int v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  unint64_t v240;
  _OWORD *v241;
  int v242;
  int v243;
  int16x8_t v244;
  int16x8_t v245;
  int16x8_t v246;
  __int128 v247;
  _DWORD v248[3];
  int16x8_t v249;
  int16x8_t v250;
  int16x8_t v251;
  _DWORD v252[3];
  __int16 v253;
  int v254;
  uint64_t v255;

  v255 = *MEMORY[0x24BDAC8D0];
  v4 = *(_OWORD **)(*(_QWORD *)(a1 + 176) + 112);
  v6 = *(_QWORD *)(a1 + 40);
  v5 = *(_BYTE **)(a1 + 48);
  v7 = v5[272];
  v8 = *(unsigned __int8 *)(v6 + 1);
  v243 = *(unsigned __int8 *)(v6 + 1);
  if ((_DWORD)v7 == 2)
  {
    v241 = *(_OWORD **)(*(_QWORD *)(a1 + 176) + 112);
    if (byte_2160F76AA[v8])
    {
      if ((v5[2] || *(_BYTE *)(a1 + 31) == 2) && ((_DWORD)v8 != 2 || *(_BYTE *)(v6 + 2) != 4))
        goto LABEL_38;
    }
    else
    {
      if (!byte_2160F76B0[v8] || *(_BYTE *)(a1 + 31) == 2)
        goto LABEL_38;
      if (!v5[3])
      {
        v5[25] = 0;
        *(_BYTE *)(*(_QWORD *)(a1 + 48) + 41) = 0;
        v5 = *(_BYTE **)(a1 + 48);
      }
      if (v5[2])
        goto LABEL_38;
    }
    v5[24] = 0;
    *(_BYTE *)(*(_QWORD *)(a1 + 48) + 40) = 0;
LABEL_38:
    v13 = 0;
    for (i = 1; ; i = 0)
    {
      v15 = i;
      v16 = *(_QWORD *)(a1 + 48);
      v17 = v16 + 16;
      if (*(_BYTE *)(v16 + 16 + 16 * v13 + 15) != 3)
        break;
LABEL_129:
      a3.i64[0] = *(_QWORD *)(v17 + 16 * v13);
      a3 = vaddq_s16(a2, a3);
      *(_QWORD *)(v17 + 16 * v13) = a3.i64[0];
      v63 = (unsigned __int8 *)(*(_QWORD *)(a1 + 48) + 16 + 16 * v13);
      v64 = v63[8];
      v65 = v63[9];
      v66 = *(unsigned __int8 *)(a1 + 31);
      v67 = v66 == 2;
      if (v66 == 2)
        v64 >>= v64 != 32;
      v68 = *(_QWORD *)(a1 + 264);
      v69 = *(_BYTE *)(v68 + v64);
      if (v67)
        v65 >>= v65 != 32;
      v70 = *(_BYTE *)(v68 + v65 + 33);
      v63[12] = v69;
      *(_BYTE *)(*(_QWORD *)(a1 + 48) + 16 * v13 + 29) = v70;
      v71 = *(_QWORD *)(a1 + 48) + 16 * v13;
      v72 = v71 + 16;
      v73 = *(unsigned __int8 *)(v71 + 31);
      if (v73 == 5)
      {
        *(_BYTE *)(v72 + 8) = 32;
        *(_BYTE *)(*(_QWORD *)(a1 + 48) + 16 * v13 + 28) = 0;
        *(_DWORD *)(*(_QWORD *)(a1 + 48) + 16 * v13 + 16) = 0;
      }
      else if (v73 == 4)
      {
        *(_BYTE *)(v72 + 9) = 32;
        *(_BYTE *)(*(_QWORD *)(a1 + 48) + 16 * v13 + 29) = 0;
        *(_DWORD *)(*(_QWORD *)(a1 + 48) + 16 * v13 + 20) = 0;
      }
      v13 = 1;
      if ((v15 & 1) == 0)
      {
        result = 0;
        *v241 = *(_OWORD *)(*(_QWORD *)(a1 + 48) + 16);
        v241[1] = *(_OWORD *)(*(_QWORD *)(a1 + 48) + 32);
        return result;
      }
    }
    v18 = *(_QWORD *)(a1 + 128);
    if (v18)
      v19 = *(_QWORD *)(v18 + 112);
    else
      v19 = 0;
    v20 = *(_QWORD *)(a1 + 136);
    if (v20)
      v21 = *(_QWORD *)(v20 + 112);
    else
      v21 = 0;
    v22 = *(_QWORD *)(a1 + 144);
    if (v22)
      v23 = *(_QWORD *)(v22 + 112);
    else
      v23 = 0;
    if (*(unsigned __int16 *)(v16 + 26) >= 0x103u)
      v24 = 259;
    else
      v24 = *(unsigned __int16 *)(v16 + 26);
    v25 = &word_254E10E30[40 * v24];
    v26 = *((unsigned __int8 *)v25 + v13 + 32);
    v27 = byte_2160EE6B4[v26];
    if (((0x505uLL >> v26) & 1) != 0)
    {
      if (v19)
      {
        v30 = *(unsigned __int16 *)(v19 + 10);
        if (v30 >= 0x103)
          v30 = 259;
        a3 = *(int16x8_t *)(v19 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v30] + v27));
        goto LABEL_59;
      }
    }
    else
    {
      v28 = &word_254E10E30[40 * v24];
      v29 = *((unsigned __int8 *)v28 + v27);
      if (v29 < *((unsigned __int8 *)v28 + v26))
      {
        a3 = *(int16x8_t *)(v17 + 16 * v29);
LABEL_59:
        v249 = a3;
        v31 = 1;
        goto LABEL_61;
      }
    }
    v31 = 0;
    v249.i64[0] = 0;
    v249.i16[4] = 8224;
LABEL_61:
    v32 = byte_2160EE6C4[v26];
    if (((0x33uLL >> v26) & 1) != 0)
    {
      if (v21)
      {
        v35 = *(unsigned __int16 *)(v21 + 10);
        if (v35 >= 0x103)
          v35 = 259;
        a3 = *(int16x8_t *)(v21 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v35] + v32));
        goto LABEL_68;
      }
    }
    else
    {
      v33 = &word_254E10E30[40 * v24];
      v34 = *((unsigned __int8 *)v33 + v32);
      if (v34 < *((unsigned __int8 *)v33 + v26))
      {
        a3 = *(int16x8_t *)(v17 + 16 * v34);
LABEL_68:
        v250 = a3;
        v36 = 1;
LABEL_70:
        v37 = LOBYTE(v25[v13 + 24]);
        if ((_DWORD)v8 == 4 && ((v31 & v36) != 1 || !v249.i8[8] && !v249.i32[0] || !v250.i8[8] && !v250.i32[0]))
          goto LABEL_129;
        v38 = byte_2160EE5C0[v26] + v37;
        v39 = *(unsigned int *)((char *)&unk_2160EE620 + dword_2160EE6E4[byte_2160EE5D0[v26]] + dword_2160EE660[v38]);
        if (v38 > 0xF)
        {
          if (byte_2160EE5D0[v26])
            v44 = 1;
          else
            v44 = v23 == 0;
          if (!v44)
          {
            v45 = *(unsigned __int16 *)(v23 + 10);
            if (v45 >= 0x103)
              v45 = 259;
            v43 = *(int16x8_t *)(v23 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v45] + v39));
            goto LABEL_93;
          }
        }
        else if (byte_2160EE5D0[v26] < 2u)
        {
          if (v21)
          {
            v46 = *(unsigned __int16 *)(v21 + 10);
            if (v46 >= 0x103)
              v46 = 259;
            v43 = *(int16x8_t *)(v21 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v46] + v39));
            goto LABEL_93;
          }
        }
        else
        {
          v40 = *(unsigned __int16 *)(v16 + 26);
          if (v40 >= 0x103)
            v40 = 259;
          v41 = &word_254E10E30[40 * v40];
          v42 = *((unsigned __int8 *)v41 + v39);
          if (v42 < *((unsigned __int8 *)v41 + v26))
          {
            v43 = *(int16x8_t *)(v17 + 16 * v42);
LABEL_93:
            v251 = v43;
            v47 = 1;
LABEL_128:
            v245.i64[0] = __PAIR64__(v36, v31);
            v245.i32[2] = v47;
            sub_215FD622C(a1, v13, v245.i32, &v249, &v244);
            a2 = v244;
            LODWORD(v8) = v243;
            goto LABEL_129;
          }
        }
        v48 = *(_QWORD *)(a1 + 152);
        if (v48)
          v49 = *(_QWORD *)(v48 + 112);
        else
          v49 = 0;
        v50 = byte_2160EE6D4[v26];
        v51 = ((v26 >> 1) | ((_BYTE)v26 << 7));
        if ((v51 - 4) < 2 || v51 == 1)
        {
          if (((0x537uLL >> v26) & 1) != 0)
          {
            if (v19)
            {
              v47 = 0;
              v53 = *(unsigned __int16 *)(v19 + 10);
              if (v53 >= 0x103)
                v53 = 259;
              v54 = *(int16x8_t *)(v19 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v53] + v50));
              goto LABEL_118;
            }
            goto LABEL_127;
          }
        }
        else
        {
          if (!__PAIR16__((_DWORD)v26 << 7 >> 24, (_BYTE)v26 << 7))
          {
            if (((0x537uLL >> v26) & 1) != 0)
            {
              if (v49)
              {
                v47 = 0;
                v61 = *(unsigned __int16 *)(v49 + 10);
                if (v61 >= 0x103)
                  v61 = 259;
                v54 = *(int16x8_t *)(v49 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v61] + v50));
                goto LABEL_118;
              }
LABEL_127:
              v47 = 0;
              v251.i64[0] = 0;
              v251.i16[4] = 8224;
              goto LABEL_128;
            }
            v55 = *(unsigned __int16 *)(v16 + 26);
            if (v55 >= 0x103)
              v55 = 259;
            v56 = &word_254E10E30[40 * v55];
            v57 = *((unsigned __int8 *)v56 + v50);
            v58 = *(unsigned __int8 *)v56;
LABEL_116:
            if (v57 < v58)
            {
              v47 = 0;
              v54 = *(int16x8_t *)(v17 + 16 * v57);
LABEL_118:
              v251 = v54;
              goto LABEL_128;
            }
            goto LABEL_127;
          }
          if (((0x537uLL >> v26) & 1) != 0)
          {
            if (v21)
            {
              v47 = 0;
              v62 = *(unsigned __int16 *)(v21 + 10);
              if (v62 >= 0x103)
                v62 = 259;
              v54 = *(int16x8_t *)(v21 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v62] + v50));
              goto LABEL_118;
            }
            goto LABEL_127;
          }
        }
        v59 = *(unsigned __int16 *)(v16 + 26);
        if (v59 >= 0x103)
          v59 = 259;
        v60 = &word_254E10E30[40 * v59];
        v57 = *((unsigned __int8 *)v60 + v50);
        v58 = *((unsigned __int8 *)v60 + v26);
        goto LABEL_116;
      }
    }
    v36 = 0;
    v250.i64[0] = 0;
    v250.i16[4] = 8224;
    goto LABEL_70;
  }
  if ((_DWORD)v7 == 1)
  {
    if (byte_2160F76AA[v8])
    {
      if (v5[2] && ((_DWORD)v8 != 2 || *(_BYTE *)(v6 + 2) != 4))
        goto LABEL_29;
    }
    else
    {
      if (!byte_2160F76B0[v8])
        goto LABEL_29;
      if (!v5[3])
      {
        v5[25] = 0;
        v5 = *(_BYTE **)(a1 + 48);
      }
      if (v5[2])
      {
LABEL_29:
        v10 = *(_QWORD *)(a1 + 48);
        if (*(_BYTE *)(v10 + 31) == 3)
        {
LABEL_204:
          a3.i64[0] = *(_QWORD *)(v10 + 16);
          *(_QWORD *)(v10 + 16) = vaddq_s16(a2, a3).u64[0];
          v102 = *(unsigned __int8 **)(a1 + 48);
          v103 = v102[24];
          v104 = v102[25];
          if (*(_BYTE *)(a1 + 31) == 2)
          {
            v103 >>= v103 != 32;
            v104 >>= v104 != 32;
          }
          v105 = *(_QWORD *)(a1 + 264);
          v106 = *(_BYTE *)(v105 + v104 + 33);
          v102[28] = *(_BYTE *)(v105 + v103);
          *(_BYTE *)(*(_QWORD *)(a1 + 48) + 29) = v106;
          v107 = *(_BYTE **)(a1 + 48);
          v108 = v107[31];
          if (v108 == 5)
          {
            v107[24] = 32;
            *(_BYTE *)(*(_QWORD *)(a1 + 48) + 28) = 0;
            *(_DWORD *)(*(_QWORD *)(a1 + 48) + 16) = 0;
          }
          else if (v108 == 4)
          {
            v107[25] = 32;
            *(_BYTE *)(*(_QWORD *)(a1 + 48) + 29) = 0;
            *(_DWORD *)(*(_QWORD *)(a1 + 48) + 20) = 0;
          }
          result = 0;
          *v4 = *(_OWORD *)(*(_QWORD *)(a1 + 48) + 16);
          return result;
        }
        v11 = *(_QWORD *)(a1 + 128);
        if (v11)
          v12 = *(_QWORD *)(v11 + 112);
        else
          v12 = 0;
        v80 = *(_QWORD *)(a1 + 136);
        if (v80)
          v81 = *(_QWORD *)(v80 + 112);
        else
          v81 = 0;
        v82 = *(_QWORD *)(a1 + 144);
        if (v82)
        {
          v83 = *(_QWORD *)(v82 + 112);
          if (v12)
            goto LABEL_162;
        }
        else
        {
          v83 = 0;
          if (v12)
          {
LABEL_162:
            v84 = *(unsigned __int16 *)(v12 + 10);
            if (v84 >= 0x103)
              v84 = 259;
            v249 = *(int16x8_t *)(v12 + 16 * HIBYTE(word_254E10E30[40 * v84 + 2]));
            v85 = 1;
            if (v81)
              goto LABEL_165;
            goto LABEL_170;
          }
        }
        v85 = 0;
        v249.i64[0] = 0;
        v249.i16[4] = 8224;
        if (v81)
        {
LABEL_165:
          v86 = *(unsigned __int16 *)(v81 + 10);
          if (v86 >= 0x103)
            v86 = 259;
          v250 = *(int16x8_t *)(v81 + 16 * LOBYTE(word_254E10E30[40 * v86 + 5]));
          v87 = 1;
LABEL_171:
          if ((_DWORD)v8 == 4 && (!v12 || !v81 || !v249.i8[8] && !v249.i32[0] || !v250.i8[8] && !v250.i32[0]))
          {
            v244.i32[0] = 0;
LABEL_203:
            a2 = v244;
            goto LABEL_204;
          }
          if (v83)
          {
            v88 = *(unsigned __int16 *)(v83 + 10);
            if (v88 >= 0x103)
              v88 = 259;
            v251 = *(int16x8_t *)(v83 + 16 * LOBYTE(word_254E10E30[40 * v88 + 5]));
          }
          else
          {
            v99 = *(_QWORD *)(a1 + 152);
            if (!v99 || (v100 = *(_QWORD *)(v99 + 112)) == 0)
            {
              v89 = 0;
              v251.i64[0] = 0;
              v251.i16[4] = 8224;
              goto LABEL_202;
            }
            v101 = *(unsigned __int16 *)(v100 + 10);
            if (v101 >= 0x103)
              v101 = 259;
            v251 = *(int16x8_t *)(v100 + 16 * HIBYTE(word_254E10E30[40 * v101 + 7]));
          }
          v89 = 1;
LABEL_202:
          v245.i64[0] = __PAIR64__(v87, v85);
          v245.i32[2] = v89;
          sub_215FD6108(a1, 0, &v245, &v249, &v244, 0, 0);
          goto LABEL_203;
        }
LABEL_170:
        v87 = 0;
        v250.i64[0] = 0;
        v250.i16[4] = 8224;
        goto LABEL_171;
      }
    }
    v5[24] = 0;
    goto LABEL_29;
  }
  if (byte_2160F76AA[v8])
  {
    if (!v5[2] && *(_BYTE *)(a1 + 31) != 2)
    {
      if (!v5[272])
        goto LABEL_187;
      goto LABEL_185;
    }
    if ((_DWORD)v8 == 2 && *(_BYTE *)(v6 + 2) == 4 && (_DWORD)v7 != 0)
    {
LABEL_185:
      v90 = 24;
      do
      {
        *(_BYTE *)(*(_QWORD *)(a1 + 48) + v90) = 0;
        v90 += 16;
        --v7;
      }
      while (v7);
    }
  }
  else if (byte_2160F76B0[v8] && *(_BYTE *)(a1 + 31) != 2)
  {
    if (v5[3])
      v75 = 1;
    else
      v75 = (_DWORD)v7 == 0;
    if (!v75)
    {
      v76 = 0;
      do
      {
        *(_BYTE *)(*(_QWORD *)(a1 + 48) + v76 + 25) = 0;
        v76 += 16;
      }
      while (16 * v7 != v76);
      v5 = *(_BYTE **)(a1 + 48);
    }
    if (v5[2])
      v77 = 1;
    else
      v77 = (_DWORD)v7 == 0;
    if (!v77)
    {
      v78 = 0;
      v79 = 16 * v7;
      do
      {
        *(_BYTE *)(*(_QWORD *)(a1 + 48) + v78 + 24) = 0;
        v78 += 16;
      }
      while (v79 != v78);
    }
  }
LABEL_187:
  v91 = *(_QWORD *)(a1 + 48);
  v92 = *(unsigned __int8 *)(v91 + 272);
  v242 = *(unsigned __int8 *)(v91 + 5);
  v254 = 0;
  if ((_DWORD)v92)
  {
    v93 = v91 + 16;
    v94 = (unsigned __int8 *)(v91 + 31);
    v95 = v92;
    while (1)
    {
      v96 = *v94;
      v94 += 16;
      if (v96 == 3)
        break;
      if (!--v95)
        goto LABEL_281;
    }
    if (v242 != 1)
    {
      v253 = 0;
LABEL_281:
      v143 = a1 + 1424480;
      v144 = 24;
      v145 = 31;
      while (1)
      {
        v146 = v144 - 24;
        v147 = *(_QWORD *)(a1 + 48);
        if (*(_BYTE *)(v147 + v145) == 3)
        {
          v148 = *(unsigned __int16 *)(v147 + 26);
          if (v148 >= 0x103)
            v148 = 259;
          v149 = *((unsigned __int8 *)&word_254E10E30[40 * v148 + 4] + v144);
          if (*(_BYTE *)v147)
            LODWORD(v149) = byte_2160EE6A4[v149];
          v152 = *(_QWORD *)(a1 + 328);
          if (!v152)
            return 4294958327;
          v153 = *(unsigned __int8 *)(a1 + 31);
          if (v153 == 2)
          {
            v154 = *(_DWORD *)(a1 + 16);
            if (*(_BYTE *)(v152 + 33))
            {
              if ((*(_DWORD *)(a1 + 16) & 1) != *(_BYTE *)(v152 + 38))
              {
                v152 = *(_QWORD *)(v152 + 1352);
                if (!v152)
                  return 4294958327;
              }
            }
          }
          else
          {
            v154 = *(_DWORD *)(a1 + 16);
          }
          v155 = *(_QWORD *)(v152 + 1256);
          v156 = *(unsigned __int8 *)(*(_QWORD *)(v155 + 8 * v154) + 14);
          if (*(_BYTE *)(a1 + 29))
          {
            if (!*(_BYTE *)(v152 + 33))
            {
              if (*(_BYTE *)(*(_QWORD *)(v155 + 8 * v154) + 14))
              {
                v157 = 2 * v154;
                if (*(_BYTE *)(*(_QWORD *)(v155 + 16 * v154) + 14) != 1)
                {
                  v154 = v157 + *(unsigned __int8 *)(*(_QWORD *)(a1 + 216) + 37);
                  goto LABEL_392;
                }
LABEL_389:
                v154 = v157 | (v149 > 7);
              }
              else
              {
                v202 = *(_DWORD *)(a1 + 20);
                v203 = v202 * (v154 / v202);
                v204 = v154 % v202;
                if (v149 <= 7)
                  v202 = 0;
                v154 = v204 + v202 + 2 * v203;
              }
              v192 = (char *)&unk_2160EE600;
LABEL_391:
              LOBYTE(v149) = v192[v149];
LABEL_392:
              *(_QWORD *)v143 = *(_QWORD *)(v155 + 8 * v154);
              if (v242 == 1)
              {
                *(_BYTE *)(v147 + v145 - 7) = v253;
                *(_BYTE *)(*(_QWORD *)(a1 + 48) + v145 - 6) = HIBYTE(v253);
                v244.i64[0] = 0;
                if (v254 != 1)
                {
                  if (*(_BYTE *)(**(_QWORD **)(a1 + 232) + 1364))
                    goto LABEL_395;
                  v212 = *(unsigned __int16 *)(*(_QWORD *)v143 + 10);
                  if (v212 >= 0x103)
                    v212 = 259;
                  v213 = (__int16 *)(*(_QWORD *)v143
                                   + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v212] + (char)v149));
                  if (*((_BYTE *)v213 + 8) == 32)
                  {
                    if (*((_BYTE *)v213 + 9))
                      goto LABEL_395;
                    v214 = v213[2] * v213[2];
                    v215 = v213[3];
LABEL_432:
                    v205 = (v214 + v215 * v215) < 3;
                  }
                  else
                  {
                    if (!*((_BYTE *)v213 + 8))
                    {
                      v214 = *v213 * *v213;
                      v215 = v213[1];
                      goto LABEL_432;
                    }
LABEL_395:
                    v205 = 0;
                  }
                  v206 = *(_QWORD *)(a1 + 48) + v145;
                  if (*(_BYTE *)(v206 - 7))
                    v207 = 0;
                  else
                    v207 = v205;
                  v208 = *(_BYTE *)(v206 - 7) == 32 || v207;
                  v209 = *(unsigned __int8 *)(v206 - 6);
                  if (v209)
                    v205 = 0;
                  v210 = v209 == 32 || v205;
                  if (v210 != 1 || (v208 & 1) == 0)
                  {
                    sub_215FD6108(a1, v146, v252, &v249, &v244, v208, v210);
                    goto LABEL_411;
                  }
                }
              }
              else
              {
                sub_215FD4218(a1, v146, (char)v149, (uint64_t)&v244, v152, v154);
LABEL_411:
                LODWORD(v8) = v243;
              }
              if (v253 == 32)
              {
                if (HIBYTE(v253) == 32)
                  return 4294958327;
                v211 = 5;
              }
              else if (HIBYTE(v253) == 32)
              {
                v211 = 4;
              }
              else
              {
                v211 = 6;
              }
              *(_BYTE *)(*(_QWORD *)(a1 + 48) + v145) = v211;
              v147 = *(_QWORD *)(a1 + 48);
              goto LABEL_444;
            }
LABEL_345:
            if (!*(_BYTE *)(a1 + 31))
              goto LABEL_392;
            if (*(_BYTE *)(v152 + 33))
              goto LABEL_347;
            if (v153 != 1 || v156 != 2)
            {
              if (v153 == 2 && v156 == 1)
              {
                v157 = v154 & 0xFFFFFFFE;
                goto LABEL_389;
              }
              goto LABEL_392;
            }
            v189 = (const float *)(a1 + 80);
            v190 = (int32x2_t)vld1_dup_f32(v189);
            v191 = vabd_s32(v190, *(int32x2_t *)(v152 + 1284));
            v154 = (v154 & 0xFFFFFFFE) - vcge_u32((uint32x2_t)v191, (uint32x2_t)vdup_lane_s32(v191, 1)).u32[0];
          }
          else
          {
            if (!*(_BYTE *)(v152 + 33))
              goto LABEL_345;
            if (*(_BYTE *)(a1 + 31))
            {
LABEL_347:
              v154 >>= 1;
              if (v153 == 2)
                goto LABEL_392;
            }
            else
            {
              v154 = v154 % *(_DWORD *)(a1 + 20) + v154 / (2 * *(_DWORD *)(a1 + 20)) * *(_DWORD *)(a1 + 20);
            }
          }
          v192 = (char *)&unk_2160EE5E0 + 16 * (*(_DWORD *)(a1 + 4) & 1);
          goto LABEL_391;
        }
        v150 = *(_QWORD *)(a1 + 128);
        if (v150)
          v151 = *(_QWORD *)(v150 + 112);
        else
          v151 = 0;
        v158 = *(_QWORD *)(a1 + 136);
        if (v158)
          v159 = *(_QWORD *)(v158 + 112);
        else
          v159 = 0;
        v160 = *(_QWORD *)(a1 + 144);
        if (v160)
          v161 = *(_QWORD *)(v160 + 112);
        else
          v161 = 0;
        v162 = v147 + 16;
        if (*(unsigned __int16 *)(v147 + 26) >= 0x103u)
          v163 = 259;
        else
          v163 = *(unsigned __int16 *)(v147 + 26);
        v164 = v163 + 4 * v163;
        v165 = *((unsigned __int8 *)&word_254E10E30[8 * v164 + 4] + v144);
        v166 = byte_2160EE6B4[v165];
        if (((0x505uLL >> v165) & 1) != 0)
        {
          if (v151)
          {
            v169 = *(unsigned __int16 *)(v151 + 10);
            if (v169 >= 0x103)
              v169 = 259;
            a2 = *(int16x8_t *)(v151 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v169] + v166));
            goto LABEL_318;
          }
        }
        else
        {
          v167 = &word_254E10E30[40 * v163];
          v168 = *((unsigned __int8 *)v167 + v166);
          if (v168 < *((unsigned __int8 *)v167 + v165))
          {
            a2 = *(int16x8_t *)(v162 + 16 * v168);
LABEL_318:
            v245 = a2;
            v170 = 1;
            goto LABEL_320;
          }
        }
        v170 = 0;
        v245.i64[0] = 0;
        v245.i16[4] = 8224;
LABEL_320:
        v171 = byte_2160EE6C4[v165];
        if (((0x33uLL >> v165) & 1) != 0)
        {
          if (v159)
          {
            v174 = *(unsigned __int16 *)(v159 + 10);
            if (v174 >= 0x103)
              v174 = 259;
            a2 = *(int16x8_t *)(v159 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v174] + v171));
            goto LABEL_327;
          }
        }
        else
        {
          v172 = &word_254E10E30[40 * v163];
          v173 = *((unsigned __int8 *)v172 + v171);
          if (v173 < *((unsigned __int8 *)v172 + v165))
          {
            a2 = *(int16x8_t *)(v162 + 16 * v173);
LABEL_327:
            v246 = a2;
            v175 = 1;
            goto LABEL_329;
          }
        }
        v175 = 0;
        v246.i64[0] = 0;
        v246.i16[4] = 8224;
LABEL_329:
        v176 = LOBYTE(word_254E10E30[8 * v164 + v144]);
        if ((_DWORD)v8 != 4 || (v170 & v175) == 1 && (v245.i8[8] || v245.i32[0]) && (v246.i8[8] || v246.i32[0]))
        {
          v177 = v176 + byte_2160EE5C0[v165];
          v178 = *(unsigned int *)((char *)&unk_2160EE620 + dword_2160EE6E4[byte_2160EE5D0[v165]]
                                                          + dword_2160EE660[v177]);
          if (v177 > 0xF)
          {
            if (byte_2160EE5D0[v165])
              v183 = 1;
            else
              v183 = v161 == 0;
            if (v183)
              goto LABEL_361;
            v184 = *(unsigned __int16 *)(v161 + 10);
            if (v184 >= 0x103)
              v184 = 259;
            v182 = *(_OWORD *)(v161 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v184] + v178));
          }
          else
          {
            if (byte_2160EE5D0[v165] >= 2u)
            {
              v179 = *(unsigned __int16 *)(v147 + 26);
              if (v179 >= 0x103)
                v179 = 259;
              v180 = &word_254E10E30[40 * v179];
              v181 = *((unsigned __int8 *)v180 + v178);
              if (v181 < *((unsigned __int8 *)v180 + v165))
              {
                v182 = *(_OWORD *)(v162 + 16 * v181);
                goto LABEL_360;
              }
LABEL_361:
              v187 = *(_QWORD *)(a1 + 152);
              if (v187)
                v188 = *(_QWORD *)(v187 + 112);
              else
                v188 = 0;
              v193 = byte_2160EE6D4[v165];
              v194 = ((v165 >> 1) | ((_BYTE)v165 << 7));
              if ((v194 - 4) < 2 || v194 == 1)
              {
                if (((0x537uLL >> v165) & 1) == 0)
                  goto LABEL_425;
                if (!v151)
                  goto LABEL_442;
                v186 = 0;
                v196 = *(unsigned __int16 *)(v151 + 10);
                if (v196 >= 0x103)
                  v196 = 259;
                v197 = *(_OWORD *)(v151 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v196] + v193));
              }
              else
              {
                if (!__PAIR16__((_DWORD)v165 << 7 >> 24, (_BYTE)v165 << 7))
                {
                  if (((0x537uLL >> v165) & 1) == 0)
                  {
                    v198 = *(unsigned __int16 *)(v147 + 26);
                    if (v198 >= 0x103)
                      v198 = 259;
                    v199 = &word_254E10E30[40 * v198];
                    v200 = *((unsigned __int8 *)v199 + v193);
                    v201 = *(unsigned __int8 *)v199;
                    goto LABEL_428;
                  }
                  if (v188)
                  {
                    v186 = 0;
                    v218 = *(unsigned __int16 *)(v188 + 10);
                    if (v218 >= 0x103)
                      v218 = 259;
                    v197 = *(_OWORD *)(v188 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v218] + v193));
                    goto LABEL_441;
                  }
LABEL_442:
                  v186 = 0;
                  *(_QWORD *)&v247 = 0;
                  WORD4(v247) = 8224;
LABEL_443:
                  v248[0] = v170;
                  v248[1] = v175;
                  v248[2] = v186;
                  sub_215FD6108(a1, v146, v248, &v245, &v244, 0, 0);
                  LODWORD(v8) = v243;
                  goto LABEL_444;
                }
                if (((0x537uLL >> v165) & 1) == 0)
                {
LABEL_425:
                  v216 = *(unsigned __int16 *)(v147 + 26);
                  if (v216 >= 0x103)
                    v216 = 259;
                  v217 = &word_254E10E30[40 * v216];
                  v200 = *((unsigned __int8 *)v217 + v193);
                  v201 = *((unsigned __int8 *)v217 + v165);
LABEL_428:
                  if (v200 < v201)
                  {
                    v186 = 0;
                    v197 = *(_OWORD *)(v162 + 16 * v200);
                    goto LABEL_441;
                  }
                  goto LABEL_442;
                }
                if (!v159)
                  goto LABEL_442;
                v186 = 0;
                v219 = *(unsigned __int16 *)(v159 + 10);
                if (v219 >= 0x103)
                  v219 = 259;
                v197 = *(_OWORD *)(v159 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v219] + v193));
              }
LABEL_441:
              v247 = v197;
              goto LABEL_443;
            }
            if (!v159)
              goto LABEL_361;
            v185 = *(unsigned __int16 *)(v159 + 10);
            if (v185 >= 0x103)
              v185 = 259;
            v182 = *(_OWORD *)(v159 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v185] + v178));
          }
LABEL_360:
          v247 = v182;
          v186 = 1;
          goto LABEL_443;
        }
        v244.i32[0] = 0;
LABEL_444:
        a2.i64[0] = *(_QWORD *)(v147 + v145 - 15);
        a2 = vaddq_s16(v244, a2);
        *(_QWORD *)(v147 + v145 - 15) = a2.i64[0];
        v220 = *(_QWORD *)(a1 + 48) + v145;
        v221 = *(unsigned __int8 *)(v220 - 7);
        v222 = *(unsigned __int8 *)(v220 - 6);
        if (*(_BYTE *)(a1 + 31) == 2)
        {
          v221 >>= v221 != 32;
          v222 >>= v222 != 32;
        }
        v223 = *(_QWORD *)(a1 + 264);
        v224 = *(_BYTE *)(v223 + v222 + 33);
        *(_BYTE *)(v220 - 3) = *(_BYTE *)(v223 + v221);
        *(_BYTE *)(*(_QWORD *)(a1 + 48) + v145 - 2) = v224;
        v225 = *(_QWORD *)(a1 + 48);
        v226 = *(unsigned __int8 *)(v225 + v145);
        if (v226 == 5)
        {
          *(_BYTE *)(v225 + v145 - 7) = 32;
          *(_BYTE *)(*(_QWORD *)(a1 + 48) + v145 - 3) = 0;
          *(_DWORD *)(*(_QWORD *)(a1 + 48) + v145 - 15) = 0;
        }
        else if (v226 == 4)
        {
          *(_BYTE *)(v225 + v145 - 6) = 32;
          *(_BYTE *)(*(_QWORD *)(a1 + 48) + v145 - 2) = 0;
          *(_DWORD *)(*(_QWORD *)(a1 + 48) + v145 - 11) = 0;
        }
        ++v144;
        v145 += 16;
        if ((int)v144 - 24 >= v92)
          goto LABEL_451;
      }
    }
    v97 = *(_QWORD *)(a1 + 128);
    if (v97)
      v98 = *(_QWORD *)(v97 + 112);
    else
      v98 = 0;
    v109 = *(_QWORD *)(a1 + 136);
    if (v109)
      v110 = *(_QWORD *)(v109 + 112);
    else
      v110 = 0;
    v111 = *(_QWORD *)(a1 + 144);
    if (v111)
      v112 = *(_QWORD *)(v111 + 112);
    else
      v112 = 0;
    if (*(unsigned __int16 *)(v91 + 26) >= 0x103u)
      v113 = 259;
    else
      v113 = *(unsigned __int16 *)(v91 + 26);
    v114 = LOBYTE(word_254E10E30[40 * v113 + 16]);
    v115 = byte_2160EE6B4[v114];
    if (((0x505uLL >> v114) & 1) != 0)
    {
      if (v98)
      {
        v118 = *(unsigned __int16 *)(v98 + 10);
        if (v118 >= 0x103)
          v118 = 259;
        a2 = *(int16x8_t *)(v98 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v118] + v115));
        goto LABEL_228;
      }
    }
    else
    {
      v116 = &word_254E10E30[40 * v113];
      v117 = *((unsigned __int8 *)v116 + v115);
      if (v117 < *((unsigned __int8 *)v116 + v114))
      {
        a2 = *(int16x8_t *)(v93 + 16 * v117);
LABEL_228:
        v249 = a2;
        v119 = 1;
        goto LABEL_230;
      }
    }
    v119 = 0;
    v249.i64[0] = 0;
    v249.i16[4] = 8224;
LABEL_230:
    v120 = byte_2160EE6C4[v114];
    if (((0x33uLL >> v114) & 1) != 0)
    {
      if (v110)
      {
        v123 = *(unsigned __int16 *)(v110 + 10);
        if (v123 >= 0x103)
          v123 = 259;
        a2 = *(int16x8_t *)(v110 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v123] + v120));
        goto LABEL_237;
      }
    }
    else
    {
      v121 = &word_254E10E30[40 * v113];
      v122 = *((unsigned __int8 *)v121 + v120);
      if (v122 < *((unsigned __int8 *)v121 + v114))
      {
        a2 = *(int16x8_t *)(v93 + 16 * v122);
LABEL_237:
        v250 = a2;
        v124 = 1;
        goto LABEL_239;
      }
    }
    v124 = 0;
    v250.i64[0] = 0;
    v250.i16[4] = 8224;
LABEL_239:
    if (byte_2160EE5D0[v114])
      v125 = 1;
    else
      v125 = v112 == 0;
    if (!v125)
    {
      v128 = *(unsigned __int16 *)(v112 + 10);
      if (v128 >= 0x103)
        v128 = 259;
      a2 = *(int16x8_t *)(v112
                        + 16
                        * *((unsigned __int8 *)&word_254E10E30[40 * v128]
                          + *(unsigned int *)((char *)&unk_2160EE620
                                            + dword_2160EE6E4[byte_2160EE5D0[v114]]
                                            + dword_2160EE660[byte_2160EE5C0[v114] + 16])));
      v251 = a2;
      v129 = 1;
      goto LABEL_278;
    }
    v251.i64[0] = 0;
    v251.i16[4] = 8224;
    v126 = *(_QWORD *)(a1 + 152);
    if (v126)
      v127 = *(_QWORD *)(v126 + 112);
    else
      v127 = 0;
    v130 = byte_2160EE6D4[v114];
    v131 = ((v114 >> 1) | ((_BYTE)v114 << 7));
    if ((v131 - 4) < 2 || v131 == 1)
    {
      if (((0x537uLL >> v114) & 1) != 0)
      {
        if (v98)
        {
          v129 = 0;
          v136 = *(unsigned __int16 *)(v98 + 10);
          if (v136 >= 0x103)
            v136 = 259;
          a2 = *(int16x8_t *)(v98 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v136] + v130));
          goto LABEL_268;
        }
        goto LABEL_277;
      }
    }
    else
    {
      if (!__PAIR16__((_DWORD)v114 << 7 >> 24, (_BYTE)v114 << 7))
      {
        if (((0x537uLL >> v114) & 1) != 0)
        {
          if (v127)
          {
            v129 = 0;
            v139 = *(unsigned __int16 *)(v127 + 10);
            if (v139 >= 0x103)
              v139 = 259;
            a2 = *(int16x8_t *)(v127 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v139] + v130));
            goto LABEL_268;
          }
LABEL_277:
          v129 = 0;
          v251.i64[0] = 0;
          v251.i16[4] = 8224;
          goto LABEL_278;
        }
        v132 = *(unsigned __int16 *)(v91 + 26);
        if (v132 >= 0x103)
          v132 = 259;
        v133 = &word_254E10E30[40 * v132];
        v134 = *((unsigned __int8 *)v133 + v130);
        v135 = *(unsigned __int8 *)v133;
LABEL_266:
        if (v134 < v135)
        {
          v129 = 0;
          a2 = *(int16x8_t *)(v93 + 16 * v134);
LABEL_268:
          v251 = a2;
LABEL_278:
          v252[0] = v119;
          v252[1] = v124;
          v252[2] = v129;
          v141 = ((v250.u8[8] - v251.u8[8]) & ((v250.u8[8] - v251.u8[8]) >> 31)) + v251.u8[8] - v249.u8[8];
          LOBYTE(v253) = v249.i8[8] + (v141 & (v141 >> 31));
          v142 = ((v250.u8[9] - v251.u8[9]) & ((v250.u8[9] - v251.u8[9]) >> 31)) + v251.u8[9] - v249.u8[9];
          HIBYTE(v253) = v249.i8[9] + (v142 & (v142 >> 31));
          if (v253 == 32 && (v249.i8[9] + (v142 & (v142 >> 31))) == 32)
          {
            v253 = 0;
            v254 = 1;
          }
          goto LABEL_281;
        }
        goto LABEL_277;
      }
      if (((0x537uLL >> v114) & 1) != 0)
      {
        if (v110)
        {
          v129 = 0;
          v140 = *(unsigned __int16 *)(v110 + 10);
          if (v140 >= 0x103)
            v140 = 259;
          a2 = *(int16x8_t *)(v110 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v140] + v130));
          goto LABEL_268;
        }
        goto LABEL_277;
      }
    }
    v137 = *(unsigned __int16 *)(v91 + 26);
    if (v137 >= 0x103)
      v137 = 259;
    v138 = &word_254E10E30[40 * v137];
    v134 = *((unsigned __int8 *)v138 + v130);
    v135 = *((unsigned __int8 *)v138 + v114);
    goto LABEL_266;
  }
LABEL_451:
  if ((_DWORD)v8 == 5)
  {
    v227 = *(_QWORD *)(a1 + 48);
    v228 = v4;
    goto LABEL_454;
  }
  v227 = *(_QWORD *)(a1 + 48);
  v228 = v4;
  if (!**(_BYTE **)(a1 + 40))
  {
LABEL_454:
    v229 = *(unsigned __int8 *)(v227 + 31);
    v245.i64[0] = 0;
    v230 = 1;
    if (v229 == 5)
    {
      v245.i32[0] = 1;
      LODWORD(v231) = 1;
    }
    else if (v229 == 4)
    {
      LODWORD(v231) = 0;
      v230 = 0;
      v245.i32[1] = 1;
    }
    else
    {
      LODWORD(v231) = 0;
    }
    v231 = v231;
    if ((_DWORD)v92 == 16)
    {
      if (v231 <= v230)
      {
        v232 = v230 + 1;
        v233 = v227 + 136;
        do
        {
          v234 = (_DWORD *)(v233 + 4 * v231);
          v235 = *(v234 - 30);
          if (!((*(v234 - 22) - v235) | (*(v234 - 26) - v235) | (*(v234 - 18) - v235) | (*(v234 - 14) - v235) | (*(v234 - 10) - v235) | (*(v234 - 6) - v235) | (*(v234 - 2) - v235) | (v234[2] - v235) | (v234[6] - v235) | (v234[10] - v235) | (v234[14] - v235) | (v234[18] - v235) | (v234[22] - v235) | (v234[26] - v235) | (v234[30] - v235)))
          {
            v236 = *(unsigned __int8 *)(v233 + v231 - 112);
            if ((*(unsigned __int8 *)(v233 + v231 - 80) - v236) | (*(unsigned __int8 *)(v233 + v231 - 96) - v236) | (*(unsigned __int8 *)(v233 + v231 - 64) - v236) | (*(unsigned __int8 *)(v233 + v231 - 48) - v236) | (*(unsigned __int8 *)(v233 + v231 - 32) - v236) | (*(unsigned __int8 *)(v233 + v231 - 16) - v236) | (*(unsigned __int8 *)(v233 + v231) - v236) | (*(unsigned __int8 *)(v233 + v231 + 16) - v236) | (*(unsigned __int8 *)(v233 + v231 + 32) - v236) | (*(unsigned __int8 *)(v233 + v231 + 48) - v236) | (*(unsigned __int8 *)(v233 + v231 + 64) - v236) | (*(unsigned __int8 *)(v233 + v231 + 80) - v236) | (*(unsigned __int8 *)(v233 + v231 + 96) - v236) | (*(unsigned __int8 *)(v233 + v231 + 112) - v236) | (*(unsigned __int8 *)(v233 + v231 + 128) - v236))
              break;
            v245.i32[v231] = 1;
          }
          ++v231;
        }
        while (v232 != v231);
      }
    }
    else if (v231 <= v230)
    {
      v237 = v230 + 1;
      v238 = v227 + 72;
      do
      {
        v239 = v238 + 4 * v231;
        if (!((*(_DWORD *)(v239 - 24) - *(_DWORD *)(v239 - 56)) | (*(_DWORD *)(v239 - 40) - *(_DWORD *)(v239 - 56)) | (*(_DWORD *)(v239 - 8) - *(_DWORD *)(v239 - 56))))
        {
          if ((*(unsigned __int8 *)(v238 + v231 - 16) - *(unsigned __int8 *)(v238 + v231 - 48)) | (*(unsigned __int8 *)(v238 + v231 - 32)
                                                                                                  - *(unsigned __int8 *)(v238 + v231 - 48)) | (*(unsigned __int8 *)(v238 + v231) - *(unsigned __int8 *)(v238 + v231 - 48)))
            break;
          v245.i32[v231] = 1;
        }
        ++v231;
      }
      while (v237 != v231);
    }
    if ((v245.i32[1] & v245.i32[0]) != 0)
    {
      result = 0;
      *(_BYTE *)(v227 + 272) = 1;
      *(_WORD *)(*(_QWORD *)(a1 + 48) + 26) = 256;
      *v228 = *(_OWORD *)(*(_QWORD *)(a1 + 48) + 16);
      return result;
    }
  }
  *v228 = *(_OWORD *)(v227 + 16);
  v228[1] = *(_OWORD *)(*(_QWORD *)(a1 + 48) + 32);
  v228[2] = *(_OWORD *)(*(_QWORD *)(a1 + 48) + 48);
  v228[3] = *(_OWORD *)(*(_QWORD *)(a1 + 48) + 64);
  if (v92 >= 5)
  {
    v240 = 0;
    do
    {
      v228[v240 / 0x10 + 4] = *(_OWORD *)(*(_QWORD *)(a1 + 48) + v240 + 80);
      v240 += 16;
    }
    while (16 * v92 - 64 != v240);
  }
  return 0;
}

uint64_t sub_215FD6108(uint64_t result, int a2, _DWORD *a3, int16x8_t *a4, _DWORD *a5, char a6, char a7)
{
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  int16x8_t v11;
  int16x8_t v12;
  int16x8_t v13;
  int16x8_t v14;
  int v16;
  int v17;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(result + 40) + 1);
  v8 = *(_QWORD *)(result + 48) + 16 * a2;
  v9 = *(unsigned __int8 *)(v8 + 24);
  v10 = *(unsigned __int8 *)(v8 + 25);
  v11 = *a4;
  if (*a3 && !a3[1] && !a3[2])
  {
    if ((a6 & 1) == 0)
      *a5 = v11.i32[0];
    if ((a7 & 1) != 0)
      return result;
LABEL_37:
    a5[1] = v11.i32[1];
    return result;
  }
  v12 = a4[1];
  v13 = a4[2];
  if ((a6 & 1) == 0)
  {
    if (v9 == v11.u8[8])
    {
      if (v9 != v12.u8[8])
      {
        v14 = *a4;
        if (v9 != v13.u8[8])
          goto LABEL_18;
      }
    }
    else if (v9 == v12.u8[8])
    {
      v14 = a4[1];
      if (v9 != v13.u8[8])
        goto LABEL_18;
    }
    else
    {
      v14 = a4[2];
      if (v9 == v13.u8[8])
      {
LABEL_18:
        *a5 = v14.i32[0];
        goto LABEL_19;
      }
    }
    v14.i32[0] = vminq_s16(vmaxq_s16(vminq_s16(v11, v12), v13), vmaxq_s16(v11, v12)).u32[0];
    goto LABEL_18;
  }
LABEL_19:
  if ((a7 & 1) == 0 && (v7 == 5 || v7 == 3))
  {
    v16 = a4[1].u8[9];
    v17 = a4[2].u8[9];
    if (a4->u8[9] == v10)
    {
      if (v16 != v10 && v17 != v10)
        goto LABEL_37;
    }
    else if (v16 == v10)
    {
      if (v17 != v10)
      {
        v11.i32[1] = v12.i32[1];
        goto LABEL_37;
      }
    }
    else if (v17 == v10)
    {
      v11.i32[1] = v13.i32[1];
      goto LABEL_37;
    }
    v11.i64[0] = vminq_s16(vmaxq_s16(vminq_s16(v11, v12), v13), vmaxq_s16(v11, v12)).u64[0];
    goto LABEL_37;
  }
  return result;
}

uint64_t sub_215FD622C(uint64_t a1, unsigned int a2, int *a3, int16x8_t *a4, _DWORD *a5)
{
  uint64_t v5;
  int v6;
  unsigned __int8 *v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  _BOOL4 v14;
  unsigned int v15;
  int v16;
  int16x8_t v17;
  int16x8_t v18;
  unsigned __int8 v19;
  unsigned __int8 v20;
  uint64_t result;
  int16x8_t v22;
  BOOL v23;
  int v24;
  int v25;
  unsigned __int8 v26;

  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 40) + 1);
  v7 = (unsigned __int8 *)(v5 + 16 * a2);
  v8 = v7[31];
  v9 = v7[24];
  v10 = v7[25];
  v12 = *a3;
  v11 = a3[1];
  v13 = a3[2];
  v23 = v8 == 3;
  v14 = v8 != 3;
  if (v23)
  {
    a2 = 0;
    v17 = *a4;
    v18 = a4[2];
    v19 = a4->i64[1];
    v20 = a4[2].i64[1];
    v16 = 4112;
LABEL_9:
    v22 = a4[1];
    result = v22.u8[8];
    goto LABEL_10;
  }
  v15 = *(unsigned __int16 *)(v5 + 26);
  if (v15 >= 0x103)
    v15 = 259;
  v16 = word_254E10E30[40 * v15 + 24 + a2];
  v17 = *a4;
  v18 = a4[2];
  v19 = a4->i64[1];
  v20 = a4[2].i64[1];
  result = 4104;
  if (v16 == 4104)
  {
    if (!a2 && v9 == v19)
    {
      a2 = 0;
      v16 = 4104;
      v14 = 1;
LABEL_13:
      v22.i32[0] = v17.i32[0];
      goto LABEL_32;
    }
    v16 = 4104;
    if (a2 == 1 && v9 == v20)
    {
      v14 = 1;
      v22 = a4[2];
      a2 = 1;
      goto LABEL_32;
    }
    goto LABEL_9;
  }
  v22 = a4[1];
  result = v22.u8[8];
  if (v16 == 2064)
  {
    if (!a2 && v9 == v22.u8[8])
    {
      v14 = 0;
      a2 = 0;
      v16 = 2064;
      goto LABEL_32;
    }
    v14 = 0;
    v16 = 2064;
    if (a2 == 1 && v9 == v19)
    {
      a2 = 1;
      goto LABEL_13;
    }
  }
  else
  {
    v14 = 0;
  }
LABEL_10:
  if (v12 && !v11 && !v13)
    goto LABEL_13;
  if (v9 == v19)
  {
    if (v9 != result && v9 != v20)
      goto LABEL_13;
    goto LABEL_31;
  }
  if (v9 != result)
  {
    if (v9 == v20)
    {
      v22.i32[0] = v18.i32[0];
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  if (v9 == v20)
LABEL_31:
    v22.i32[0] = vminq_s16(vmaxq_s16(vminq_s16(v17, v22), v18), vmaxq_s16(v17, v22)).u32[0];
LABEL_32:
  *a5 = v22.i32[0];
  v23 = v6 == 5 || v6 == 3;
  if (v23)
  {
    v24 = a4->u8[9];
    v25 = a4[2].u8[9];
    if (v14)
    {
      if (!a2 && v24 == v10)
        goto LABEL_64;
      if (a2 == 1 && v25 == v10)
        goto LABEL_42;
    }
    v26 = BYTE1(a4[1].i64[1]);
    if (v16 == 2064)
    {
      if (!a2 && v10 == v26)
        goto LABEL_46;
      if (a2 == 1 && v24 == v10)
        goto LABEL_64;
    }
    if (v12 && !v11 && !v13)
      goto LABEL_64;
    if (v24 == v10)
    {
      if (v10 != v26 && v25 != v10)
        goto LABEL_64;
    }
    else if (v10 == v26)
    {
      if (v25 != v10)
      {
LABEL_46:
        v17 = a4[1];
        goto LABEL_64;
      }
    }
    else if (v25 == v10)
    {
LABEL_42:
      v17.i32[1] = v18.i32[1];
LABEL_64:
      a5[1] = v17.i32[1];
      return result;
    }
    v17.i64[0] = vminq_s16(vmaxq_s16(vminq_s16(v17, a4[1]), v18), vmaxq_s16(v17, a4[1])).u64[0];
    goto LABEL_64;
  }
  return result;
}

uint64_t sub_215FD648C(uint64_t a1, uint64_t a2, int16x8_t a3, int16x8_t a4)
{
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char i;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  unsigned __int16 *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 *v30;
  uint64_t v31;
  unsigned int v32;
  int v33;
  uint64_t v34;
  unsigned __int16 *v35;
  uint64_t v36;
  unsigned int v37;
  int v38;
  int v39;
  unsigned int v40;
  uint64_t v41;
  unsigned int v42;
  unsigned __int16 *v43;
  uint64_t v44;
  int16x8_t v45;
  BOOL v46;
  unsigned int v47;
  unsigned int v48;
  __int32 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  unsigned int v55;
  int16x8_t v56;
  unsigned int v57;
  unsigned __int16 *v58;
  uint64_t v59;
  unsigned int v60;
  unsigned int v61;
  unsigned __int16 *v62;
  unsigned int v63;
  unsigned int v64;
  unsigned __int8 *v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  BOOL v69;
  uint64_t v70;
  unsigned __int8 v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t result;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  int v90;
  unsigned int v91;
  __int32 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned __int8 *v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int v104;
  unsigned __int8 *v105;
  unsigned int v106;
  unsigned int v107;
  uint64_t v108;
  char v109;
  _BYTE *v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  unsigned __int16 *v119;
  uint64_t v120;
  unsigned int v121;
  int v122;
  uint64_t v123;
  unsigned __int16 *v124;
  uint64_t v125;
  unsigned int v126;
  int v127;
  BOOL v128;
  uint64_t v129;
  uint64_t v130;
  unsigned int v131;
  int v132;
  uint64_t v133;
  int v134;
  unsigned int v135;
  unsigned __int16 *v136;
  uint64_t v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned __int16 *v141;
  unsigned int v142;
  unsigned int v143;
  int v144;
  int v145;
  uint64_t v146;
  uint64_t v147;
  int v148;
  uint64_t v149;
  unsigned int v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  int v155;
  unsigned int v156;
  uint64_t v157;
  int v158;
  unsigned int v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unsigned __int16 *v169;
  uint64_t v170;
  unsigned int v171;
  int v172;
  uint64_t v173;
  unsigned __int16 *v174;
  uint64_t v175;
  unsigned int v176;
  int v177;
  int v178;
  unsigned int v179;
  uint64_t v180;
  unsigned int v181;
  unsigned __int16 *v182;
  uint64_t v183;
  __int128 v184;
  BOOL v185;
  unsigned int v186;
  unsigned int v187;
  int v188;
  uint64_t v189;
  uint64_t v190;
  const float *v191;
  int32x2_t v192;
  int32x2_t v193;
  char *v194;
  uint64_t v195;
  int v196;
  unsigned int v198;
  __int128 v199;
  unsigned int v200;
  unsigned __int16 *v201;
  uint64_t v202;
  unsigned int v203;
  unsigned int v204;
  int v205;
  int v206;
  _BOOL4 v207;
  uint64_t v208;
  BOOL v209;
  char v210;
  int v211;
  int v212;
  char v213;
  unsigned int v214;
  __int16 *v215;
  int v216;
  int v217;
  unsigned int v218;
  unsigned __int16 *v219;
  unsigned int v220;
  unsigned int v221;
  uint64_t v222;
  unsigned int v223;
  unsigned int v224;
  uint64_t v225;
  char v226;
  uint64_t v227;
  int v228;
  uint64_t v229;
  _OWORD *v230;
  int v231;
  unsigned int v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  _DWORD *v236;
  int v237;
  int v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  unint64_t v242;
  uint64_t v243;
  unint64_t v244;
  uint64_t v245;
  _OWORD *v246;
  uint64_t v249;
  int v250;
  int v251;
  int16x8_t v252;
  int16x8_t v253;
  int16x8_t v254;
  __int128 v255;
  _DWORD v256[3];
  int16x8_t v257;
  int16x8_t v258;
  int16x8_t v259;
  _DWORD v260[3];
  __int16 v261;
  int v262;
  uint64_t v263;

  v263 = *MEMORY[0x24BDAC8D0];
  v5 = *(_OWORD **)(*(_QWORD *)(a1 + 176) + 112);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 40) + 1);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + 272);
  *(_BYTE *)(a2 + 1104) = v7;
  v251 = v6;
  if ((_DWORD)v7 == 2)
  {
    v246 = v5;
    if (byte_2160F76AA[v6])
    {
      v10 = *(_BYTE **)(a1 + 48);
      if ((v10[2] || *(_BYTE *)(a1 + 31) == 2) && ((_DWORD)v6 != 2 || *(_BYTE *)(*(_QWORD *)(a1 + 40) + 2) != 4))
        goto LABEL_38;
    }
    else
    {
      if (!byte_2160F76B0[v6] || *(_BYTE *)(a1 + 31) == 2)
        goto LABEL_38;
      v10 = *(_BYTE **)(a1 + 48);
      if (!v10[3])
      {
        v10[25] = 0;
        *(_BYTE *)(*(_QWORD *)(a1 + 48) + 41) = 0;
        v10 = *(_BYTE **)(a1 + 48);
      }
      if (v10[2])
        goto LABEL_38;
    }
    v10[24] = 0;
    *(_BYTE *)(*(_QWORD *)(a1 + 48) + 40) = 0;
LABEL_38:
    v15 = 0;
    for (i = 1; ; i = 0)
    {
      v17 = i;
      v18 = *(_QWORD *)(a1 + 48);
      v19 = v18 + 16;
      if (*(_BYTE *)(v18 + 16 + 16 * v15 + 15) != 3)
        break;
LABEL_129:
      a4.i64[0] = *(_QWORD *)(v19 + 16 * v15);
      a4 = vaddq_s16(a3, a4);
      *(_QWORD *)(v19 + 16 * v15) = a4.i64[0];
      v65 = (unsigned __int8 *)(*(_QWORD *)(a1 + 48) + 16 + 16 * v15);
      v66 = v65[8];
      v67 = v65[9];
      v68 = *(unsigned __int8 *)(a1 + 31);
      v69 = v68 == 2;
      if (v68 == 2)
        v66 >>= v66 != 32;
      v70 = *(_QWORD *)(a1 + 264);
      v71 = *(_BYTE *)(v70 + v66);
      if (v69)
        v67 >>= v67 != 32;
      v72 = *(_BYTE *)(v70 + v67 + 33);
      v65[12] = v71;
      *(_BYTE *)(*(_QWORD *)(a1 + 48) + 16 * v15 + 29) = v72;
      v73 = *(_QWORD *)(a1 + 48) + 16 * v15;
      v74 = v73 + 16;
      v75 = *(unsigned __int8 *)(v73 + 31);
      if (v75 == 5)
      {
        *(_BYTE *)(v74 + 8) = 32;
        *(_BYTE *)(*(_QWORD *)(a1 + 48) + 16 * v15 + 28) = 0;
        *(_DWORD *)(*(_QWORD *)(a1 + 48) + 16 * v15 + 16) = 0;
      }
      else if (v75 == 4)
      {
        *(_BYTE *)(v74 + 9) = 32;
        *(_BYTE *)(*(_QWORD *)(a1 + 48) + 16 * v15 + 29) = 0;
        *(_DWORD *)(*(_QWORD *)(a1 + 48) + 16 * v15 + 20) = 0;
      }
      v15 = 1;
      if ((v17 & 1) == 0)
      {
        result = 0;
        *v246 = *(_OWORD *)(*(_QWORD *)(a1 + 48) + 16);
        v246[1] = *(_OWORD *)(*(_QWORD *)(a1 + 48) + 32);
        *(_OWORD *)(a2 + 848) = *(_OWORD *)(*(_QWORD *)(a1 + 48) + 16);
        *(_OWORD *)(a2 + 864) = *(_OWORD *)(*(_QWORD *)(a1 + 48) + 32);
        return result;
      }
    }
    v20 = *(_QWORD *)(a1 + 128);
    if (v20)
      v21 = *(_QWORD *)(v20 + 112);
    else
      v21 = 0;
    v22 = *(_QWORD *)(a1 + 136);
    if (v22)
      v23 = *(_QWORD *)(v22 + 112);
    else
      v23 = 0;
    v24 = *(_QWORD *)(a1 + 144);
    if (v24)
      v25 = *(_QWORD *)(v24 + 112);
    else
      v25 = 0;
    if (*(unsigned __int16 *)(v18 + 26) >= 0x103u)
      v26 = 259;
    else
      v26 = *(unsigned __int16 *)(v18 + 26);
    v27 = &word_254E10E30[40 * v26];
    v28 = *((unsigned __int8 *)v27 + v15 + 32);
    v29 = byte_2160EE6B4[v28];
    if (((0x505uLL >> v28) & 1) != 0)
    {
      if (v21)
      {
        v32 = *(unsigned __int16 *)(v21 + 10);
        if (v32 >= 0x103)
          v32 = 259;
        a4 = *(int16x8_t *)(v21 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v32] + v29));
        goto LABEL_59;
      }
    }
    else
    {
      v30 = &word_254E10E30[40 * v26];
      v31 = *((unsigned __int8 *)v30 + v29);
      if (v31 < *((unsigned __int8 *)v30 + v28))
      {
        a4 = *(int16x8_t *)(v19 + 16 * v31);
LABEL_59:
        v257 = a4;
        v33 = 1;
        goto LABEL_61;
      }
    }
    v33 = 0;
    v257.i64[0] = 0;
    v257.i16[4] = 8224;
LABEL_61:
    v34 = byte_2160EE6C4[v28];
    if (((0x33uLL >> v28) & 1) != 0)
    {
      if (v23)
      {
        v37 = *(unsigned __int16 *)(v23 + 10);
        if (v37 >= 0x103)
          v37 = 259;
        a4 = *(int16x8_t *)(v23 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v37] + v34));
        goto LABEL_68;
      }
    }
    else
    {
      v35 = &word_254E10E30[40 * v26];
      v36 = *((unsigned __int8 *)v35 + v34);
      if (v36 < *((unsigned __int8 *)v35 + v28))
      {
        a4 = *(int16x8_t *)(v19 + 16 * v36);
LABEL_68:
        v258 = a4;
        v38 = 1;
LABEL_70:
        v39 = LOBYTE(v27[v15 + 24]);
        if ((_DWORD)v6 == 4 && ((v33 & v38) != 1 || !v257.i8[8] && !v257.i32[0] || !v258.i8[8] && !v258.i32[0]))
          goto LABEL_129;
        v40 = byte_2160EE5C0[v28] + v39;
        v41 = *(unsigned int *)((char *)&unk_2160EE620 + dword_2160EE6E4[byte_2160EE5D0[v28]] + dword_2160EE660[v40]);
        if (v40 > 0xF)
        {
          if (byte_2160EE5D0[v28])
            v46 = 1;
          else
            v46 = v25 == 0;
          if (!v46)
          {
            v47 = *(unsigned __int16 *)(v25 + 10);
            if (v47 >= 0x103)
              v47 = 259;
            v45 = *(int16x8_t *)(v25 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v47] + v41));
            goto LABEL_93;
          }
        }
        else if (byte_2160EE5D0[v28] < 2u)
        {
          if (v23)
          {
            v48 = *(unsigned __int16 *)(v23 + 10);
            if (v48 >= 0x103)
              v48 = 259;
            v45 = *(int16x8_t *)(v23 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v48] + v41));
            goto LABEL_93;
          }
        }
        else
        {
          v42 = *(unsigned __int16 *)(v18 + 26);
          if (v42 >= 0x103)
            v42 = 259;
          v43 = &word_254E10E30[40 * v42];
          v44 = *((unsigned __int8 *)v43 + v41);
          if (v44 < *((unsigned __int8 *)v43 + v28))
          {
            v45 = *(int16x8_t *)(v19 + 16 * v44);
LABEL_93:
            v259 = v45;
            v49 = 1;
LABEL_128:
            v253.i64[0] = __PAIR64__(v38, v33);
            v253.i32[2] = v49;
            sub_215FD622C(a1, v15, v253.i32, &v257, &v252);
            a3 = v252;
            LODWORD(v6) = v251;
            goto LABEL_129;
          }
        }
        v50 = *(_QWORD *)(a1 + 152);
        if (v50)
          v51 = *(_QWORD *)(v50 + 112);
        else
          v51 = 0;
        v52 = byte_2160EE6D4[v28];
        v53 = ((v28 >> 1) | ((_BYTE)v28 << 7));
        if ((v53 - 4) < 2 || v53 == 1)
        {
          if (((0x537uLL >> v28) & 1) != 0)
          {
            if (v21)
            {
              v49 = 0;
              v55 = *(unsigned __int16 *)(v21 + 10);
              if (v55 >= 0x103)
                v55 = 259;
              v56 = *(int16x8_t *)(v21 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v55] + v52));
              goto LABEL_118;
            }
            goto LABEL_127;
          }
        }
        else
        {
          if (!__PAIR16__((_DWORD)v28 << 7 >> 24, (_BYTE)v28 << 7))
          {
            if (((0x537uLL >> v28) & 1) != 0)
            {
              if (v51)
              {
                v49 = 0;
                v63 = *(unsigned __int16 *)(v51 + 10);
                if (v63 >= 0x103)
                  v63 = 259;
                v56 = *(int16x8_t *)(v51 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v63] + v52));
                goto LABEL_118;
              }
LABEL_127:
              v49 = 0;
              v259.i64[0] = 0;
              v259.i16[4] = 8224;
              goto LABEL_128;
            }
            v57 = *(unsigned __int16 *)(v18 + 26);
            if (v57 >= 0x103)
              v57 = 259;
            v58 = &word_254E10E30[40 * v57];
            v59 = *((unsigned __int8 *)v58 + v52);
            v60 = *(unsigned __int8 *)v58;
LABEL_116:
            if (v59 < v60)
            {
              v49 = 0;
              v56 = *(int16x8_t *)(v19 + 16 * v59);
LABEL_118:
              v259 = v56;
              goto LABEL_128;
            }
            goto LABEL_127;
          }
          if (((0x537uLL >> v28) & 1) != 0)
          {
            if (v23)
            {
              v49 = 0;
              v64 = *(unsigned __int16 *)(v23 + 10);
              if (v64 >= 0x103)
                v64 = 259;
              v56 = *(int16x8_t *)(v23 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v64] + v52));
              goto LABEL_118;
            }
            goto LABEL_127;
          }
        }
        v61 = *(unsigned __int16 *)(v18 + 26);
        if (v61 >= 0x103)
          v61 = 259;
        v62 = &word_254E10E30[40 * v61];
        v59 = *((unsigned __int8 *)v62 + v52);
        v60 = *((unsigned __int8 *)v62 + v28);
        goto LABEL_116;
      }
    }
    v38 = 0;
    v258.i64[0] = 0;
    v258.i16[4] = 8224;
    goto LABEL_70;
  }
  v8 = (_OWORD *)(a2 + 848);
  if ((_DWORD)v7 == 1)
  {
    if (byte_2160F76AA[v6])
    {
      v9 = *(_BYTE **)(a1 + 48);
      if (v9[2] && ((_DWORD)v6 != 2 || *(_BYTE *)(*(_QWORD *)(a1 + 40) + 2) != 4))
        goto LABEL_29;
    }
    else
    {
      if (!byte_2160F76B0[v6])
        goto LABEL_29;
      v9 = *(_BYTE **)(a1 + 48);
      if (!v9[3])
      {
        v9[25] = 0;
        v9 = *(_BYTE **)(a1 + 48);
      }
      if (v9[2])
      {
LABEL_29:
        v12 = *(_QWORD *)(a1 + 48);
        if (*(_BYTE *)(v12 + 31) == 3)
        {
LABEL_204:
          a4.i64[0] = *(_QWORD *)(v12 + 16);
          *(_QWORD *)(v12 + 16) = vaddq_s16(a3, a4).u64[0];
          *v8 = *(_OWORD *)(*(_QWORD *)(a1 + 48) + 16);
          v105 = *(unsigned __int8 **)(a1 + 48);
          v106 = v105[24];
          v107 = v105[25];
          if (*(_BYTE *)(a1 + 31) == 2)
          {
            v106 >>= v106 != 32;
            v107 >>= v107 != 32;
          }
          v108 = *(_QWORD *)(a1 + 264);
          v109 = *(_BYTE *)(v108 + v107 + 33);
          v105[28] = *(_BYTE *)(v108 + v106);
          *(_BYTE *)(*(_QWORD *)(a1 + 48) + 29) = v109;
          v110 = *(_BYTE **)(a1 + 48);
          v111 = v110[31];
          if (v111 == 5)
          {
            v110[24] = 32;
            *(_BYTE *)(*(_QWORD *)(a1 + 48) + 28) = 0;
            *(_DWORD *)(*(_QWORD *)(a1 + 48) + 16) = 0;
          }
          else if (v111 == 4)
          {
            v110[25] = 32;
            *(_BYTE *)(*(_QWORD *)(a1 + 48) + 29) = 0;
            *(_DWORD *)(*(_QWORD *)(a1 + 48) + 20) = 0;
          }
          result = 0;
          *v5 = *(_OWORD *)(*(_QWORD *)(a1 + 48) + 16);
          return result;
        }
        v13 = *(_QWORD *)(a1 + 128);
        if (v13)
          v14 = *(_QWORD *)(v13 + 112);
        else
          v14 = 0;
        v83 = *(_QWORD *)(a1 + 136);
        if (v83)
          v84 = *(_QWORD *)(v83 + 112);
        else
          v84 = 0;
        v85 = *(_QWORD *)(a1 + 144);
        if (v85)
        {
          v86 = *(_QWORD *)(v85 + 112);
          if (v14)
            goto LABEL_162;
        }
        else
        {
          v86 = 0;
          if (v14)
          {
LABEL_162:
            v87 = *(unsigned __int16 *)(v14 + 10);
            if (v87 >= 0x103)
              v87 = 259;
            v257 = *(int16x8_t *)(v14 + 16 * HIBYTE(word_254E10E30[40 * v87 + 2]));
            v88 = 1;
            if (v84)
              goto LABEL_165;
            goto LABEL_170;
          }
        }
        v88 = 0;
        v257.i64[0] = 0;
        v257.i16[4] = 8224;
        if (v84)
        {
LABEL_165:
          v89 = *(unsigned __int16 *)(v84 + 10);
          if (v89 >= 0x103)
            v89 = 259;
          v258 = *(int16x8_t *)(v84 + 16 * LOBYTE(word_254E10E30[40 * v89 + 5]));
          v90 = 1;
LABEL_171:
          if ((_DWORD)v6 == 4 && (!v14 || !v84 || !v257.i8[8] && !v257.i32[0] || !v258.i8[8] && !v258.i32[0]))
          {
            v252.i32[0] = 0;
LABEL_203:
            a3 = v252;
            goto LABEL_204;
          }
          if (v86)
          {
            v91 = *(unsigned __int16 *)(v86 + 10);
            if (v91 >= 0x103)
              v91 = 259;
            v259 = *(int16x8_t *)(v86 + 16 * LOBYTE(word_254E10E30[40 * v91 + 5]));
          }
          else
          {
            v102 = *(_QWORD *)(a1 + 152);
            if (!v102 || (v103 = *(_QWORD *)(v102 + 112)) == 0)
            {
              v92 = 0;
              v259.i64[0] = 0;
              v259.i16[4] = 8224;
              goto LABEL_202;
            }
            v104 = *(unsigned __int16 *)(v103 + 10);
            if (v104 >= 0x103)
              v104 = 259;
            v259 = *(int16x8_t *)(v103 + 16 * HIBYTE(word_254E10E30[40 * v104 + 7]));
          }
          v92 = 1;
LABEL_202:
          v253.i64[0] = __PAIR64__(v90, v88);
          v253.i32[2] = v92;
          sub_215FD6108(a1, 0, &v253, &v257, &v252, 0, 0);
          goto LABEL_203;
        }
LABEL_170:
        v90 = 0;
        v258.i64[0] = 0;
        v258.i16[4] = 8224;
        goto LABEL_171;
      }
    }
    v9[24] = 0;
    goto LABEL_29;
  }
  if (byte_2160F76AA[v6])
  {
    if (!*(_BYTE *)(*(_QWORD *)(a1 + 48) + 2) && *(_BYTE *)(a1 + 31) != 2)
    {
      if (!(_DWORD)v7)
        goto LABEL_187;
      goto LABEL_185;
    }
    if ((_DWORD)v6 == 2 && *(_BYTE *)(*(_QWORD *)(a1 + 40) + 2) == 4 && (_DWORD)v7 != 0)
    {
LABEL_185:
      v93 = 24;
      do
      {
        *(_BYTE *)(*(_QWORD *)(a1 + 48) + v93) = 0;
        v93 += 16;
        --v7;
      }
      while (v7);
    }
  }
  else if (byte_2160F76B0[v6] && *(_BYTE *)(a1 + 31) != 2)
  {
    v77 = *(_QWORD *)(a1 + 48);
    if (*(_BYTE *)(v77 + 3))
      v78 = 1;
    else
      v78 = (_DWORD)v7 == 0;
    if (!v78)
    {
      v79 = 0;
      do
      {
        *(_BYTE *)(*(_QWORD *)(a1 + 48) + v79 + 25) = 0;
        v79 += 16;
      }
      while (16 * v7 != v79);
      v77 = *(_QWORD *)(a1 + 48);
    }
    if (*(_BYTE *)(v77 + 2))
      v80 = 1;
    else
      v80 = (_DWORD)v7 == 0;
    if (!v80)
    {
      v81 = 0;
      v82 = 16 * v7;
      do
      {
        *(_BYTE *)(*(_QWORD *)(a1 + 48) + v81 + 24) = 0;
        v81 += 16;
      }
      while (v82 != v81);
    }
  }
LABEL_187:
  v94 = *(_QWORD *)(a1 + 48);
  v95 = *(unsigned __int8 *)(v94 + 272);
  v250 = *(unsigned __int8 *)(v94 + 5);
  v262 = 0;
  if ((_DWORD)v95)
  {
    v96 = v94 + 16;
    v97 = (unsigned __int8 *)(v94 + 31);
    v98 = v95;
    while (1)
    {
      v99 = *v97;
      v97 += 16;
      if (v99 == 3)
        break;
      if (!--v98)
        goto LABEL_281;
    }
    if (v250 != 1)
    {
      v261 = 0;
LABEL_281:
      v249 = a1 + 1424480;
      v146 = 24;
      v147 = 31;
      while (1)
      {
        v148 = v146 - 24;
        v149 = *(_QWORD *)(a1 + 48);
        if (*(_BYTE *)(v149 + v147) == 3)
        {
          v150 = *(unsigned __int16 *)(v149 + 26);
          if (v150 >= 0x103)
            v150 = 259;
          v151 = *((unsigned __int8 *)&word_254E10E30[40 * v150 + 4] + v146);
          if (*(_BYTE *)v149)
            LODWORD(v151) = byte_2160EE6A4[v151];
          v154 = *(_QWORD *)(a1 + 328);
          if (!v154)
            return 4294958327;
          v155 = *(unsigned __int8 *)(a1 + 31);
          if (v155 == 2)
          {
            v156 = *(_DWORD *)(a1 + 16);
            if (*(_BYTE *)(v154 + 33))
            {
              if ((*(_DWORD *)(a1 + 16) & 1) != *(_BYTE *)(v154 + 38))
              {
                v154 = *(_QWORD *)(v154 + 1352);
                if (!v154)
                  return 4294958327;
              }
            }
          }
          else
          {
            v156 = *(_DWORD *)(a1 + 16);
          }
          v157 = *(_QWORD *)(v154 + 1256);
          v158 = *(unsigned __int8 *)(*(_QWORD *)(v157 + 8 * v156) + 14);
          if (*(_BYTE *)(a1 + 29))
          {
            if (!*(_BYTE *)(v154 + 33))
            {
              if (*(_BYTE *)(*(_QWORD *)(v157 + 8 * v156) + 14))
              {
                v159 = 2 * v156;
                if (*(_BYTE *)(*(_QWORD *)(v157 + 16 * v156) + 14) != 1)
                {
                  v156 = v159 + *(unsigned __int8 *)(*(_QWORD *)(a1 + 216) + 37);
                  goto LABEL_392;
                }
LABEL_389:
                v156 = v159 | (v151 > 7);
              }
              else
              {
                v204 = *(_DWORD *)(a1 + 20);
                v205 = v204 * (v156 / v204);
                v206 = v156 % v204;
                if (v151 <= 7)
                  v204 = 0;
                v156 = v206 + v204 + 2 * v205;
              }
              v194 = (char *)&unk_2160EE600;
LABEL_391:
              LOBYTE(v151) = v194[v151];
LABEL_392:
              *(_QWORD *)v249 = *(_QWORD *)(v157 + 8 * v156);
              if (v250 == 1)
              {
                *(_BYTE *)(v149 + v147 - 7) = v261;
                *(_BYTE *)(*(_QWORD *)(a1 + 48) + v147 - 6) = HIBYTE(v261);
                v252.i64[0] = 0;
                if (v262 != 1)
                {
                  if (*(_BYTE *)(**(_QWORD **)(a1 + 232) + 1364))
                    goto LABEL_395;
                  v214 = *(unsigned __int16 *)(*(_QWORD *)v249 + 10);
                  if (v214 >= 0x103)
                    v214 = 259;
                  v215 = (__int16 *)(*(_QWORD *)v249
                                   + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v214] + (char)v151));
                  if (*((_BYTE *)v215 + 8) == 32)
                  {
                    if (*((_BYTE *)v215 + 9))
                      goto LABEL_395;
                    v216 = v215[2] * v215[2];
                    v217 = v215[3];
LABEL_432:
                    v207 = (v216 + v217 * v217) < 3;
                  }
                  else
                  {
                    if (!*((_BYTE *)v215 + 8))
                    {
                      v216 = *v215 * *v215;
                      v217 = v215[1];
                      goto LABEL_432;
                    }
LABEL_395:
                    v207 = 0;
                  }
                  v208 = *(_QWORD *)(a1 + 48) + v147;
                  if (*(_BYTE *)(v208 - 7))
                    v209 = 0;
                  else
                    v209 = v207;
                  v210 = *(_BYTE *)(v208 - 7) == 32 || v209;
                  v211 = *(unsigned __int8 *)(v208 - 6);
                  if (v211)
                    v207 = 0;
                  v212 = v211 == 32 || v207;
                  if (v212 != 1 || (v210 & 1) == 0)
                  {
                    sub_215FD6108(a1, v148, v260, &v257, &v252, v210, v212);
                    goto LABEL_411;
                  }
                }
              }
              else
              {
                sub_215FD4218(a1, v148, (char)v151, (uint64_t)&v252, v154, v156);
LABEL_411:
                LODWORD(v6) = v251;
              }
              if (v261 == 32)
              {
                if (HIBYTE(v261) == 32)
                  return 4294958327;
                v213 = 5;
              }
              else if (HIBYTE(v261) == 32)
              {
                v213 = 4;
              }
              else
              {
                v213 = 6;
              }
              *(_BYTE *)(*(_QWORD *)(a1 + 48) + v147) = v213;
              v149 = *(_QWORD *)(a1 + 48);
              goto LABEL_444;
            }
LABEL_345:
            if (!*(_BYTE *)(a1 + 31))
              goto LABEL_392;
            if (*(_BYTE *)(v154 + 33))
              goto LABEL_347;
            if (v155 != 1 || v158 != 2)
            {
              if (v155 == 2 && v158 == 1)
              {
                v159 = v156 & 0xFFFFFFFE;
                goto LABEL_389;
              }
              goto LABEL_392;
            }
            v191 = (const float *)(a1 + 80);
            v192 = (int32x2_t)vld1_dup_f32(v191);
            v193 = vabd_s32(v192, *(int32x2_t *)(v154 + 1284));
            v156 = (v156 & 0xFFFFFFFE) - vcge_u32((uint32x2_t)v193, (uint32x2_t)vdup_lane_s32(v193, 1)).u32[0];
          }
          else
          {
            if (!*(_BYTE *)(v154 + 33))
              goto LABEL_345;
            if (*(_BYTE *)(a1 + 31))
            {
LABEL_347:
              v156 >>= 1;
              if (v155 == 2)
                goto LABEL_392;
            }
            else
            {
              v156 = v156 % *(_DWORD *)(a1 + 20) + v156 / (2 * *(_DWORD *)(a1 + 20)) * *(_DWORD *)(a1 + 20);
            }
          }
          v194 = (char *)&unk_2160EE5E0 + 16 * (*(_DWORD *)(a1 + 4) & 1);
          goto LABEL_391;
        }
        v152 = *(_QWORD *)(a1 + 128);
        if (v152)
          v153 = *(_QWORD *)(v152 + 112);
        else
          v153 = 0;
        v160 = *(_QWORD *)(a1 + 136);
        if (v160)
          v161 = *(_QWORD *)(v160 + 112);
        else
          v161 = 0;
        v162 = *(_QWORD *)(a1 + 144);
        if (v162)
          v163 = *(_QWORD *)(v162 + 112);
        else
          v163 = 0;
        v164 = v149 + 16;
        if (*(unsigned __int16 *)(v149 + 26) >= 0x103u)
          v165 = 259;
        else
          v165 = *(unsigned __int16 *)(v149 + 26);
        v166 = v165 + 4 * v165;
        v167 = *((unsigned __int8 *)&word_254E10E30[8 * v166 + 4] + v146);
        v168 = byte_2160EE6B4[v167];
        if (((0x505uLL >> v167) & 1) != 0)
        {
          if (v153)
          {
            v171 = *(unsigned __int16 *)(v153 + 10);
            if (v171 >= 0x103)
              v171 = 259;
            a3 = *(int16x8_t *)(v153 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v171] + v168));
            goto LABEL_318;
          }
        }
        else
        {
          v169 = &word_254E10E30[40 * v165];
          v170 = *((unsigned __int8 *)v169 + v168);
          if (v170 < *((unsigned __int8 *)v169 + v167))
          {
            a3 = *(int16x8_t *)(v164 + 16 * v170);
LABEL_318:
            v253 = a3;
            v172 = 1;
            goto LABEL_320;
          }
        }
        v172 = 0;
        v253.i64[0] = 0;
        v253.i16[4] = 8224;
LABEL_320:
        v173 = byte_2160EE6C4[v167];
        if (((0x33uLL >> v167) & 1) != 0)
        {
          if (v161)
          {
            v176 = *(unsigned __int16 *)(v161 + 10);
            if (v176 >= 0x103)
              v176 = 259;
            a3 = *(int16x8_t *)(v161 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v176] + v173));
            goto LABEL_327;
          }
        }
        else
        {
          v174 = &word_254E10E30[40 * v165];
          v175 = *((unsigned __int8 *)v174 + v173);
          if (v175 < *((unsigned __int8 *)v174 + v167))
          {
            a3 = *(int16x8_t *)(v164 + 16 * v175);
LABEL_327:
            v254 = a3;
            v177 = 1;
            goto LABEL_329;
          }
        }
        v177 = 0;
        v254.i64[0] = 0;
        v254.i16[4] = 8224;
LABEL_329:
        v178 = LOBYTE(word_254E10E30[8 * v166 + v146]);
        if ((_DWORD)v6 != 4 || (v172 & v177) == 1 && (v253.i8[8] || v253.i32[0]) && (v254.i8[8] || v254.i32[0]))
        {
          v179 = v178 + byte_2160EE5C0[v167];
          v180 = *(unsigned int *)((char *)&unk_2160EE620 + dword_2160EE6E4[byte_2160EE5D0[v167]]
                                                          + dword_2160EE660[v179]);
          if (v179 > 0xF)
          {
            if (byte_2160EE5D0[v167])
              v185 = 1;
            else
              v185 = v163 == 0;
            if (v185)
              goto LABEL_361;
            v186 = *(unsigned __int16 *)(v163 + 10);
            if (v186 >= 0x103)
              v186 = 259;
            v184 = *(_OWORD *)(v163 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v186] + v180));
          }
          else
          {
            if (byte_2160EE5D0[v167] >= 2u)
            {
              v181 = *(unsigned __int16 *)(v149 + 26);
              if (v181 >= 0x103)
                v181 = 259;
              v182 = &word_254E10E30[40 * v181];
              v183 = *((unsigned __int8 *)v182 + v180);
              if (v183 < *((unsigned __int8 *)v182 + v167))
              {
                v184 = *(_OWORD *)(v164 + 16 * v183);
                goto LABEL_360;
              }
LABEL_361:
              v189 = *(_QWORD *)(a1 + 152);
              if (v189)
                v190 = *(_QWORD *)(v189 + 112);
              else
                v190 = 0;
              v195 = byte_2160EE6D4[v167];
              v196 = ((v167 >> 1) | ((_BYTE)v167 << 7));
              if ((v196 - 4) < 2 || v196 == 1)
              {
                if (((0x537uLL >> v167) & 1) == 0)
                  goto LABEL_425;
                if (!v153)
                  goto LABEL_442;
                v188 = 0;
                v198 = *(unsigned __int16 *)(v153 + 10);
                if (v198 >= 0x103)
                  v198 = 259;
                v199 = *(_OWORD *)(v153 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v198] + v195));
              }
              else
              {
                if (!__PAIR16__((_DWORD)v167 << 7 >> 24, (_BYTE)v167 << 7))
                {
                  if (((0x537uLL >> v167) & 1) == 0)
                  {
                    v200 = *(unsigned __int16 *)(v149 + 26);
                    if (v200 >= 0x103)
                      v200 = 259;
                    v201 = &word_254E10E30[40 * v200];
                    v202 = *((unsigned __int8 *)v201 + v195);
                    v203 = *(unsigned __int8 *)v201;
                    goto LABEL_428;
                  }
                  if (v190)
                  {
                    v188 = 0;
                    v220 = *(unsigned __int16 *)(v190 + 10);
                    if (v220 >= 0x103)
                      v220 = 259;
                    v199 = *(_OWORD *)(v190 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v220] + v195));
                    goto LABEL_441;
                  }
LABEL_442:
                  v188 = 0;
                  *(_QWORD *)&v255 = 0;
                  WORD4(v255) = 8224;
LABEL_443:
                  v256[0] = v172;
                  v256[1] = v177;
                  v256[2] = v188;
                  sub_215FD6108(a1, v148, v256, &v253, &v252, 0, 0);
                  LODWORD(v6) = v251;
                  goto LABEL_444;
                }
                if (((0x537uLL >> v167) & 1) == 0)
                {
LABEL_425:
                  v218 = *(unsigned __int16 *)(v149 + 26);
                  if (v218 >= 0x103)
                    v218 = 259;
                  v219 = &word_254E10E30[40 * v218];
                  v202 = *((unsigned __int8 *)v219 + v195);
                  v203 = *((unsigned __int8 *)v219 + v167);
LABEL_428:
                  if (v202 < v203)
                  {
                    v188 = 0;
                    v199 = *(_OWORD *)(v164 + 16 * v202);
                    goto LABEL_441;
                  }
                  goto LABEL_442;
                }
                if (!v161)
                  goto LABEL_442;
                v188 = 0;
                v221 = *(unsigned __int16 *)(v161 + 10);
                if (v221 >= 0x103)
                  v221 = 259;
                v199 = *(_OWORD *)(v161 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v221] + v195));
              }
LABEL_441:
              v255 = v199;
              goto LABEL_443;
            }
            if (!v161)
              goto LABEL_361;
            v187 = *(unsigned __int16 *)(v161 + 10);
            if (v187 >= 0x103)
              v187 = 259;
            v184 = *(_OWORD *)(v161 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v187] + v180));
          }
LABEL_360:
          v255 = v184;
          v188 = 1;
          goto LABEL_443;
        }
        v252.i32[0] = 0;
LABEL_444:
        a3.i64[0] = *(_QWORD *)(v149 + v147 - 15);
        a3 = vaddq_s16(v252, a3);
        *(_QWORD *)(v149 + v147 - 15) = a3.i64[0];
        v222 = *(_QWORD *)(a1 + 48) + v147;
        v223 = *(unsigned __int8 *)(v222 - 7);
        v224 = *(unsigned __int8 *)(v222 - 6);
        if (*(_BYTE *)(a1 + 31) == 2)
        {
          v223 >>= v223 != 32;
          v224 >>= v224 != 32;
        }
        v225 = *(_QWORD *)(a1 + 264);
        v226 = *(_BYTE *)(v225 + v224 + 33);
        *(_BYTE *)(v222 - 3) = *(_BYTE *)(v225 + v223);
        *(_BYTE *)(*(_QWORD *)(a1 + 48) + v147 - 2) = v226;
        v227 = *(_QWORD *)(a1 + 48);
        v228 = *(unsigned __int8 *)(v227 + v147);
        if (v228 == 5)
        {
          *(_BYTE *)(v227 + v147 - 7) = 32;
          *(_BYTE *)(*(_QWORD *)(a1 + 48) + v147 - 3) = 0;
          *(_DWORD *)(*(_QWORD *)(a1 + 48) + v147 - 15) = 0;
        }
        else if (v228 == 4)
        {
          *(_BYTE *)(v227 + v147 - 6) = 32;
          *(_BYTE *)(*(_QWORD *)(a1 + 48) + v147 - 2) = 0;
          *(_DWORD *)(*(_QWORD *)(a1 + 48) + v147 - 11) = 0;
        }
        ++v146;
        v147 += 16;
        if ((int)v146 - 24 >= v95)
          goto LABEL_451;
      }
    }
    v100 = *(_QWORD *)(a1 + 128);
    if (v100)
      v101 = *(_QWORD *)(v100 + 112);
    else
      v101 = 0;
    v112 = *(_QWORD *)(a1 + 136);
    if (v112)
      v113 = *(_QWORD *)(v112 + 112);
    else
      v113 = 0;
    v114 = *(_QWORD *)(a1 + 144);
    if (v114)
      v115 = *(_QWORD *)(v114 + 112);
    else
      v115 = 0;
    if (*(unsigned __int16 *)(v94 + 26) >= 0x103u)
      v116 = 259;
    else
      v116 = *(unsigned __int16 *)(v94 + 26);
    v117 = LOBYTE(word_254E10E30[40 * v116 + 16]);
    v118 = byte_2160EE6B4[v117];
    if (((0x505uLL >> v117) & 1) != 0)
    {
      if (v101)
      {
        v121 = *(unsigned __int16 *)(v101 + 10);
        if (v121 >= 0x103)
          v121 = 259;
        a3 = *(int16x8_t *)(v101 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v121] + v118));
        goto LABEL_228;
      }
    }
    else
    {
      v119 = &word_254E10E30[40 * v116];
      v120 = *((unsigned __int8 *)v119 + v118);
      if (v120 < *((unsigned __int8 *)v119 + v117))
      {
        a3 = *(int16x8_t *)(v96 + 16 * v120);
LABEL_228:
        v257 = a3;
        v122 = 1;
        goto LABEL_230;
      }
    }
    v122 = 0;
    v257.i64[0] = 0;
    v257.i16[4] = 8224;
LABEL_230:
    v123 = byte_2160EE6C4[v117];
    if (((0x33uLL >> v117) & 1) != 0)
    {
      if (v113)
      {
        v126 = *(unsigned __int16 *)(v113 + 10);
        if (v126 >= 0x103)
          v126 = 259;
        a3 = *(int16x8_t *)(v113 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v126] + v123));
        goto LABEL_237;
      }
    }
    else
    {
      v124 = &word_254E10E30[40 * v116];
      v125 = *((unsigned __int8 *)v124 + v123);
      if (v125 < *((unsigned __int8 *)v124 + v117))
      {
        a3 = *(int16x8_t *)(v96 + 16 * v125);
LABEL_237:
        v258 = a3;
        v127 = 1;
        goto LABEL_239;
      }
    }
    v127 = 0;
    v258.i64[0] = 0;
    v258.i16[4] = 8224;
LABEL_239:
    if (byte_2160EE5D0[v117])
      v128 = 1;
    else
      v128 = v115 == 0;
    if (!v128)
    {
      v131 = *(unsigned __int16 *)(v115 + 10);
      if (v131 >= 0x103)
        v131 = 259;
      a3 = *(int16x8_t *)(v115
                        + 16
                        * *((unsigned __int8 *)&word_254E10E30[40 * v131]
                          + *(unsigned int *)((char *)&unk_2160EE620
                                            + dword_2160EE6E4[byte_2160EE5D0[v117]]
                                            + dword_2160EE660[byte_2160EE5C0[v117] + 16])));
      v259 = a3;
      v132 = 1;
      goto LABEL_278;
    }
    v259.i64[0] = 0;
    v259.i16[4] = 8224;
    v129 = *(_QWORD *)(a1 + 152);
    if (v129)
      v130 = *(_QWORD *)(v129 + 112);
    else
      v130 = 0;
    v133 = byte_2160EE6D4[v117];
    v134 = ((v117 >> 1) | ((_BYTE)v117 << 7));
    if ((v134 - 4) < 2 || v134 == 1)
    {
      if (((0x537uLL >> v117) & 1) != 0)
      {
        if (v101)
        {
          v132 = 0;
          v139 = *(unsigned __int16 *)(v101 + 10);
          if (v139 >= 0x103)
            v139 = 259;
          a3 = *(int16x8_t *)(v101 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v139] + v133));
          goto LABEL_268;
        }
        goto LABEL_277;
      }
    }
    else
    {
      if (!__PAIR16__((_DWORD)v117 << 7 >> 24, (_BYTE)v117 << 7))
      {
        if (((0x537uLL >> v117) & 1) != 0)
        {
          if (v130)
          {
            v132 = 0;
            v142 = *(unsigned __int16 *)(v130 + 10);
            if (v142 >= 0x103)
              v142 = 259;
            a3 = *(int16x8_t *)(v130 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v142] + v133));
            goto LABEL_268;
          }
LABEL_277:
          v132 = 0;
          v259.i64[0] = 0;
          v259.i16[4] = 8224;
          goto LABEL_278;
        }
        v135 = *(unsigned __int16 *)(v94 + 26);
        if (v135 >= 0x103)
          v135 = 259;
        v136 = &word_254E10E30[40 * v135];
        v137 = *((unsigned __int8 *)v136 + v133);
        v138 = *(unsigned __int8 *)v136;
LABEL_266:
        if (v137 < v138)
        {
          v132 = 0;
          a3 = *(int16x8_t *)(v96 + 16 * v137);
LABEL_268:
          v259 = a3;
LABEL_278:
          v260[0] = v122;
          v260[1] = v127;
          v260[2] = v132;
          v144 = ((v258.u8[8] - v259.u8[8]) & ((v258.u8[8] - v259.u8[8]) >> 31)) + v259.u8[8] - v257.u8[8];
          LOBYTE(v261) = v257.i8[8] + (v144 & (v144 >> 31));
          v145 = ((v258.u8[9] - v259.u8[9]) & ((v258.u8[9] - v259.u8[9]) >> 31)) + v259.u8[9] - v257.u8[9];
          HIBYTE(v261) = v257.i8[9] + (v145 & (v145 >> 31));
          if (v261 == 32 && (v257.i8[9] + (v145 & (v145 >> 31))) == 32)
          {
            v261 = 0;
            v262 = 1;
          }
          goto LABEL_281;
        }
        goto LABEL_277;
      }
      if (((0x537uLL >> v117) & 1) != 0)
      {
        if (v113)
        {
          v132 = 0;
          v143 = *(unsigned __int16 *)(v113 + 10);
          if (v143 >= 0x103)
            v143 = 259;
          a3 = *(int16x8_t *)(v113 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v143] + v133));
          goto LABEL_268;
        }
        goto LABEL_277;
      }
    }
    v140 = *(unsigned __int16 *)(v94 + 26);
    if (v140 >= 0x103)
      v140 = 259;
    v141 = &word_254E10E30[40 * v140];
    v137 = *((unsigned __int8 *)v141 + v133);
    v138 = *((unsigned __int8 *)v141 + v117);
    goto LABEL_266;
  }
LABEL_451:
  if ((_DWORD)v6 == 5)
  {
    v229 = *(_QWORD *)(a1 + 48);
    v230 = v5;
  }
  else
  {
    v229 = *(_QWORD *)(a1 + 48);
    v230 = v5;
    if (**(_BYTE **)(a1 + 40))
    {
LABEL_476:
      *v230 = *(_OWORD *)(v229 + 16);
      v230[1] = *(_OWORD *)(*(_QWORD *)(a1 + 48) + 32);
      v230[2] = *(_OWORD *)(*(_QWORD *)(a1 + 48) + 48);
      v230[3] = *(_OWORD *)(*(_QWORD *)(a1 + 48) + 64);
      if (v95 >= 5)
      {
        v242 = 0;
        do
        {
          v230[v242 / 0x10 + 4] = *(_OWORD *)(*(_QWORD *)(a1 + 48) + v242 + 80);
          v242 += 16;
        }
        while (16 * v95 - 64 != v242);
      }
      goto LABEL_479;
    }
  }
  v231 = *(unsigned __int8 *)(v229 + 31);
  v253.i64[0] = 0;
  v232 = 1;
  if (v231 == 5)
  {
    v253.i32[0] = 1;
    LODWORD(v233) = 1;
  }
  else if (v231 == 4)
  {
    LODWORD(v233) = 0;
    v232 = 0;
    v253.i32[1] = 1;
  }
  else
  {
    LODWORD(v233) = 0;
  }
  v233 = v233;
  if ((_DWORD)v95 == 16)
  {
    if (v233 <= v232)
    {
      v234 = v232 + 1;
      v235 = v229 + 136;
      do
      {
        v236 = (_DWORD *)(v235 + 4 * v233);
        v237 = *(v236 - 30);
        if (!((*(v236 - 22) - v237) | (*(v236 - 26) - v237) | (*(v236 - 18) - v237) | (*(v236 - 14) - v237) | (*(v236 - 10) - v237) | (*(v236 - 6) - v237) | (*(v236 - 2) - v237) | (v236[2] - v237) | (v236[6] - v237) | (v236[10] - v237) | (v236[14] - v237) | (v236[18] - v237) | (v236[22] - v237) | (v236[26] - v237) | (v236[30] - v237)))
        {
          v238 = *(unsigned __int8 *)(v235 + v233 - 112);
          if ((*(unsigned __int8 *)(v235 + v233 - 80) - v238) | (*(unsigned __int8 *)(v235 + v233 - 96) - v238) | (*(unsigned __int8 *)(v235 + v233 - 64) - v238) | (*(unsigned __int8 *)(v235 + v233 - 48) - v238) | (*(unsigned __int8 *)(v235 + v233 - 32) - v238) | (*(unsigned __int8 *)(v235 + v233 - 16) - v238) | (*(unsigned __int8 *)(v235 + v233) - v238) | (*(unsigned __int8 *)(v235 + v233 + 16) - v238) | (*(unsigned __int8 *)(v235 + v233 + 32) - v238) | (*(unsigned __int8 *)(v235 + v233 + 48) - v238) | (*(unsigned __int8 *)(v235 + v233 + 64) - v238) | (*(unsigned __int8 *)(v235 + v233 + 80) - v238) | (*(unsigned __int8 *)(v235 + v233 + 96) - v238) | (*(unsigned __int8 *)(v235 + v233 + 112) - v238) | (*(unsigned __int8 *)(v235 + v233 + 128) - v238))
            break;
          v253.i32[v233] = 1;
        }
        ++v233;
      }
      while (v234 != v233);
    }
  }
  else if (v233 <= v232)
  {
    v239 = v232 + 1;
    v240 = v229 + 72;
    do
    {
      v241 = v240 + 4 * v233;
      if (!((*(_DWORD *)(v241 - 24) - *(_DWORD *)(v241 - 56)) | (*(_DWORD *)(v241 - 40) - *(_DWORD *)(v241 - 56)) | (*(_DWORD *)(v241 - 8) - *(_DWORD *)(v241 - 56))))
      {
        if ((*(unsigned __int8 *)(v240 + v233 - 16) - *(unsigned __int8 *)(v240 + v233 - 48)) | (*(unsigned __int8 *)(v240 + v233 - 32)
                                                                                                - *(unsigned __int8 *)(v240 + v233 - 48)) | (*(unsigned __int8 *)(v240 + v233) - *(unsigned __int8 *)(v240 + v233 - 48)))
          break;
        v253.i32[v233] = 1;
      }
      ++v233;
    }
    while (v239 != v233);
  }
  if ((v253.i32[1] & v253.i32[0]) == 0)
    goto LABEL_476;
  *(_BYTE *)(v229 + 272) = 1;
  *(_WORD *)(*(_QWORD *)(a1 + 48) + 26) = 256;
  *v230 = *(_OWORD *)(*(_QWORD *)(a1 + 48) + 16);
LABEL_479:
  v243 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + 272);
  *(_BYTE *)(a2 + 1104) = v243;
  if (v243)
  {
    v244 = 0;
    v245 = 16 * v243;
    do
    {
      v8[v244 / 0x10] = *(_OWORD *)(*(_QWORD *)(a1 + 48) + v244 + 16);
      v244 += 16;
    }
    while (v245 != v244);
  }
  return 0;
}

int16x8_t sub_215FD7DD4(uint64_t a1, int16x8_t result, int16x8_t a3)
{
  int16x8_t *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  unsigned __int16 *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int16 *v26;
  uint64_t v27;
  unsigned int v28;
  int v29;
  uint64_t v30;
  unsigned __int16 *v31;
  uint64_t v32;
  unsigned int v33;
  int v34;
  int v35;
  unsigned int v36;
  uint64_t v37;
  unsigned int v38;
  unsigned __int16 *v39;
  uint64_t v40;
  __int128 v41;
  BOOL v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  unsigned int v51;
  __int128 v52;
  unsigned int v53;
  unsigned __int16 *v54;
  uint64_t v55;
  unsigned int v56;
  unsigned int v57;
  unsigned __int16 *v58;
  unsigned int v59;
  unsigned int v60;
  unsigned __int8 *v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  BOOL v65;
  uint64_t v66;
  unsigned __int8 v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  int16x8_t *v72;
  BOOL v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int v86;
  uint64_t v87;
  int i;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned int v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  unsigned __int16 *v101;
  uint64_t v102;
  unsigned int v103;
  int v104;
  uint64_t v105;
  unsigned __int16 *v106;
  uint64_t v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  uint64_t v111;
  unsigned int v112;
  unsigned __int16 *v113;
  uint64_t v114;
  __int128 v115;
  BOOL v116;
  unsigned int v117;
  unsigned int v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  unsigned int v125;
  __int128 v126;
  unsigned int v127;
  unsigned __int16 *v128;
  uint64_t v129;
  unsigned int v130;
  unsigned int v131;
  unsigned __int16 *v132;
  unsigned int v133;
  unsigned int v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unsigned int v138;
  unsigned int v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  int v144;
  int16x8_t *v145;
  int v146;
  unsigned int v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t *v150;
  _DWORD *v151;
  int v152;
  int v153;
  uint64_t v154;
  uint64_t *v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  unsigned __int8 *v159;
  unsigned int v160;
  unsigned int v161;
  uint64_t v162;
  char v163;
  _BYTE *v164;
  int v165;
  int16x8_t *v166;
  int16x8_t v167;
  int16x8_t v168;
  int16x8_t v169;
  __int128 v170;
  int v171;
  int v172;
  int v173;
  uint64_t v174;

  v174 = *MEMORY[0x24BDAC8D0];
  v4 = *(int16x8_t **)(*(_QWORD *)(a1 + 176) + 112);
  v6 = *(_QWORD *)(a1 + 40);
  v5 = *(_BYTE **)(a1 + 48);
  v7 = v5[272];
  v8 = *(unsigned __int8 *)(v6 + 1);
  if ((_DWORD)v7 == 2)
  {
    if (!byte_2160F76AA[v8])
      return result;
    v166 = *(int16x8_t **)(*(_QWORD *)(a1 + 176) + 112);
    if (!v5[2] && *(_BYTE *)(a1 + 31) != 2 || (_DWORD)v8 == 2 && *(_BYTE *)(v6 + 2) == 4)
    {
      v5[24] = 0;
      *(_BYTE *)(*(_QWORD *)(a1 + 48) + 40) = 0;
    }
    v11 = 0;
    v12 = 1;
    while (1)
    {
      v13 = v12;
      v14 = *(_QWORD *)(a1 + 128);
      if (v14)
        v15 = *(_QWORD *)(v14 + 112);
      else
        v15 = 0;
      v16 = *(_QWORD *)(a1 + 136);
      if (v16)
        v17 = *(_QWORD *)(v16 + 112);
      else
        v17 = 0;
      v18 = *(_QWORD *)(a1 + 144);
      if (v18)
        v19 = *(_QWORD *)(v18 + 112);
      else
        v19 = 0;
      v20 = *(_QWORD *)(a1 + 48);
      v21 = v20 + 16;
      if (*(unsigned __int16 *)(v20 + 26) >= 0x103u)
        v22 = 259;
      else
        v22 = *(unsigned __int16 *)(v20 + 26);
      v23 = &word_254E10E30[40 * v22];
      v24 = *((unsigned __int8 *)v23 + v11 + 32);
      v25 = byte_2160EE6B4[v24];
      if (((0x505uLL >> v24) & 1) != 0)
      {
        if (v15)
        {
          v28 = *(unsigned __int16 *)(v15 + 10);
          if (v28 >= 0x103)
            v28 = 259;
          a3 = *(int16x8_t *)(v15 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v28] + v25));
          goto LABEL_37;
        }
      }
      else
      {
        v26 = &word_254E10E30[40 * v22];
        v27 = *((unsigned __int8 *)v26 + v25);
        if (v27 < *((unsigned __int8 *)v26 + v24))
        {
          a3 = *(int16x8_t *)(v21 + 16 * v27);
LABEL_37:
          v168 = a3;
          v29 = 1;
          goto LABEL_39;
        }
      }
      v29 = 0;
      v168.i64[0] = 0;
      v168.i16[4] = 8224;
LABEL_39:
      v30 = byte_2160EE6C4[v24];
      if (((0x33uLL >> v24) & 1) != 0)
      {
        if (!v17)
        {
LABEL_47:
          v34 = 0;
          v169.i64[0] = 0;
          v169.i16[4] = 8224;
          goto LABEL_48;
        }
        v33 = *(unsigned __int16 *)(v17 + 10);
        if (v33 >= 0x103)
          v33 = 259;
        a3 = *(int16x8_t *)(v17 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v33] + v30));
      }
      else
      {
        v31 = &word_254E10E30[40 * v22];
        v32 = *((unsigned __int8 *)v31 + v30);
        if (v32 >= *((unsigned __int8 *)v31 + v24))
          goto LABEL_47;
        a3 = *(int16x8_t *)(v21 + 16 * v32);
      }
      v169 = a3;
      v34 = 1;
LABEL_48:
      v35 = LOBYTE(v23[v11 + 24]);
      if ((_DWORD)v8 == 4 && ((v29 & v34) != 1 || !v168.i8[8] && !v168.i32[0] || !v169.i8[8] && !v169.i32[0]))
        goto LABEL_107;
      v36 = byte_2160EE5C0[v24] + v35;
      v37 = *(unsigned int *)((char *)&unk_2160EE620 + dword_2160EE6E4[byte_2160EE5D0[v24]] + dword_2160EE660[v36]);
      if (v36 > 0xF)
      {
        if (byte_2160EE5D0[v24])
          v42 = 1;
        else
          v42 = v19 == 0;
        if (v42)
          goto LABEL_72;
        v43 = *(unsigned __int16 *)(v19 + 10);
        if (v43 >= 0x103)
          v43 = 259;
        v41 = *(_OWORD *)(v19 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v43] + v37));
      }
      else if (byte_2160EE5D0[v24] < 2u)
      {
        if (!v17)
          goto LABEL_72;
        v44 = *(unsigned __int16 *)(v17 + 10);
        if (v44 >= 0x103)
          v44 = 259;
        v41 = *(_OWORD *)(v17 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v44] + v37));
      }
      else
      {
        v38 = *(unsigned __int16 *)(v20 + 26);
        if (v38 >= 0x103)
          v38 = 259;
        v39 = &word_254E10E30[40 * v38];
        v40 = *((unsigned __int8 *)v39 + v37);
        if (v40 >= *((unsigned __int8 *)v39 + v24))
        {
LABEL_72:
          v46 = *(_QWORD *)(a1 + 152);
          if (v46)
            v47 = *(_QWORD *)(v46 + 112);
          else
            v47 = 0;
          v48 = byte_2160EE6D4[v24];
          v49 = ((v24 >> 1) | ((_BYTE)v24 << 7));
          if ((v49 - 4) < 2 || v49 == 1)
          {
            if (((0x537uLL >> v24) & 1) != 0)
            {
              if (!v15)
                goto LABEL_105;
              v45 = 0;
              v51 = *(unsigned __int16 *)(v15 + 10);
              if (v51 >= 0x103)
                v51 = 259;
              v52 = *(_OWORD *)(v15 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v51] + v48));
              goto LABEL_96;
            }
          }
          else
          {
            if (!__PAIR16__((_DWORD)v24 << 7 >> 24, (_BYTE)v24 << 7))
            {
              if (((0x537uLL >> v24) & 1) == 0)
              {
                v53 = *(unsigned __int16 *)(v20 + 26);
                if (v53 >= 0x103)
                  v53 = 259;
                v54 = &word_254E10E30[40 * v53];
                v55 = *((unsigned __int8 *)v54 + v48);
                v56 = *(unsigned __int8 *)v54;
                goto LABEL_94;
              }
              if (!v47)
                goto LABEL_105;
              v45 = 0;
              v59 = *(unsigned __int16 *)(v47 + 10);
              if (v59 >= 0x103)
                v59 = 259;
              v52 = *(_OWORD *)(v47 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v59] + v48));
LABEL_96:
              v170 = v52;
              goto LABEL_106;
            }
            if (((0x537uLL >> v24) & 1) != 0)
            {
              if (!v17)
              {
LABEL_105:
                v45 = 0;
                *(_QWORD *)&v170 = 0;
                WORD4(v170) = 8224;
                goto LABEL_106;
              }
              v45 = 0;
              v60 = *(unsigned __int16 *)(v17 + 10);
              if (v60 >= 0x103)
                v60 = 259;
              v52 = *(_OWORD *)(v17 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v60] + v48));
              goto LABEL_96;
            }
          }
          v57 = *(unsigned __int16 *)(v20 + 26);
          if (v57 >= 0x103)
            v57 = 259;
          v58 = &word_254E10E30[40 * v57];
          v55 = *((unsigned __int8 *)v58 + v48);
          v56 = *((unsigned __int8 *)v58 + v24);
LABEL_94:
          if (v55 >= v56)
            goto LABEL_105;
          v45 = 0;
          v52 = *(_OWORD *)(v21 + 16 * v55);
          goto LABEL_96;
        }
        v41 = *(_OWORD *)(v21 + 16 * v40);
      }
      v170 = v41;
      v45 = 1;
LABEL_106:
      v171 = v29;
      v172 = v34;
      v173 = v45;
      sub_215FD622C(a1, v11, &v171, &v168, &v167);
      result = v167;
LABEL_107:
      a3.i64[0] = *(_QWORD *)(v21 + 16 * v11);
      a3 = vaddq_s16(result, a3);
      *(_QWORD *)(v21 + 16 * v11) = a3.i64[0];
      v61 = (unsigned __int8 *)(*(_QWORD *)(a1 + 48) + 16 + 16 * v11);
      v62 = v61[8];
      v63 = v61[9];
      v64 = *(unsigned __int8 *)(a1 + 31);
      v65 = v64 == 2;
      if (v64 == 2)
        v62 >>= v62 != 32;
      v66 = *(_QWORD *)(a1 + 264);
      v67 = *(_BYTE *)(v66 + v62);
      if (v65)
        v63 >>= v63 != 32;
      v68 = *(_BYTE *)(v66 + v63 + 33);
      v61[12] = v67;
      *(_BYTE *)(*(_QWORD *)(a1 + 48) + 16 * v11 + 29) = v68;
      v69 = *(_QWORD *)(a1 + 48) + 16 * v11;
      v70 = v69 + 16;
      v71 = *(unsigned __int8 *)(v69 + 31);
      if (v71 == 5)
      {
        *(_BYTE *)(v70 + 8) = 32;
        *(_BYTE *)(*(_QWORD *)(a1 + 48) + 16 * v11 + 28) = 0;
        *(_DWORD *)(*(_QWORD *)(a1 + 48) + 16 * v11 + 16) = 0;
      }
      else if (v71 == 4)
      {
        *(_BYTE *)(v70 + 9) = 32;
        *(_BYTE *)(*(_QWORD *)(a1 + 48) + 16 * v11 + 29) = 0;
        *(_DWORD *)(*(_QWORD *)(a1 + 48) + 16 * v11 + 20) = 0;
      }
      v12 = 0;
      v11 = 1;
      if ((v13 & 1) == 0)
      {
        *v166 = *(int16x8_t *)(*(_QWORD *)(a1 + 48) + 16);
        v4 = v166 + 1;
        v72 = (int16x8_t *)(*(_QWORD *)(a1 + 48) + 32);
        goto LABEL_304;
      }
    }
  }
  if ((_DWORD)v7 != 1)
  {
    if (!byte_2160F76AA[v8])
      return result;
    if (v5[2] || *(_BYTE *)(a1 + 31) == 2)
    {
      if ((_DWORD)v8 != 2 || (*(_BYTE *)(v6 + 2) == 4 ? (v73 = (_DWORD)v7 == 0) : (v73 = 1), v73))
      {
LABEL_166:
        if ((_DWORD)v7)
        {
          for (i = 0; i < (int)v7; ++i)
          {
            v89 = *(_QWORD *)(a1 + 128);
            if (v89)
              v90 = *(_QWORD *)(v89 + 112);
            else
              v90 = 0;
            v91 = *(_QWORD *)(a1 + 136);
            if (v91)
              v92 = *(_QWORD *)(v91 + 112);
            else
              v92 = 0;
            v93 = *(_QWORD *)(a1 + 144);
            if (v93)
              v94 = *(_QWORD *)(v93 + 112);
            else
              v94 = 0;
            v95 = *(_QWORD *)(a1 + 48);
            v96 = v95 + 16;
            v97 = *(unsigned __int16 *)(v95 + 26);
            if (v97 >= 0x103)
              v97 = 259;
            if (*(_BYTE *)(v95 + 16 + 16 * i + 15) == 3)
            {
              i = 0;
              v98 = 16;
            }
            else
            {
              v98 = LOBYTE(word_254E10E30[40 * v97 + 24 + i]);
            }
            v99 = *((unsigned __int8 *)&word_254E10E30[40 * v97 + 16] + i);
            v100 = byte_2160EE6B4[v99];
            if (((0x505uLL >> v99) & 1) != 0)
            {
              if (v90)
              {
                v103 = *(unsigned __int16 *)(v90 + 10);
                if (v103 >= 0x103)
                  v103 = 259;
                result = *(int16x8_t *)(v90 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v103] + v100));
                goto LABEL_189;
              }
            }
            else
            {
              v101 = &word_254E10E30[40 * v97];
              v102 = *((unsigned __int8 *)v101 + v100);
              if (v102 < *((unsigned __int8 *)v101 + v99))
              {
                result = *(int16x8_t *)(v96 + 16 * v102);
LABEL_189:
                v168 = result;
                v104 = 1;
                goto LABEL_191;
              }
            }
            v104 = 0;
            v168.i64[0] = 0;
            v168.i16[4] = 8224;
LABEL_191:
            v105 = byte_2160EE6C4[v99];
            if (((0x33uLL >> v99) & 1) != 0)
            {
              if (!v92)
              {
LABEL_199:
                v109 = 0;
                v169.i64[0] = 0;
                v169.i16[4] = 8224;
                goto LABEL_200;
              }
              v108 = *(unsigned __int16 *)(v92 + 10);
              if (v108 >= 0x103)
                v108 = 259;
              result = *(int16x8_t *)(v92 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v108] + v105));
            }
            else
            {
              v106 = &word_254E10E30[40 * v97];
              v107 = *((unsigned __int8 *)v106 + v105);
              if (v107 >= *((unsigned __int8 *)v106 + v99))
                goto LABEL_199;
              result = *(int16x8_t *)(v96 + 16 * v107);
            }
            v169 = result;
            v109 = 1;
LABEL_200:
            if ((_DWORD)v8 != 4 || (v104 & v109) == 1 && (v168.i8[8] || v168.i32[0]) && (v169.i8[8] || v169.i32[0]))
            {
              v110 = v98 + byte_2160EE5C0[v99];
              v111 = *(unsigned int *)((char *)&unk_2160EE620
                                     + dword_2160EE6E4[byte_2160EE5D0[v99]]
                                     + dword_2160EE660[v110]);
              if (v110 > 0xF)
              {
                if (byte_2160EE5D0[v99])
                  v116 = 1;
                else
                  v116 = v94 == 0;
                if (v116)
                  goto LABEL_225;
                v117 = *(unsigned __int16 *)(v94 + 10);
                if (v117 >= 0x103)
                  v117 = 259;
                v115 = *(_OWORD *)(v94 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v117] + v111));
              }
              else
              {
                if (byte_2160EE5D0[v99] >= 2u)
                {
                  v112 = *(unsigned __int16 *)(v95 + 26);
                  if (v112 >= 0x103)
                    v112 = 259;
                  v113 = &word_254E10E30[40 * v112];
                  v114 = *((unsigned __int8 *)v113 + v111);
                  if (v114 < *((unsigned __int8 *)v113 + v99))
                  {
                    v115 = *(_OWORD *)(v96 + 16 * v114);
                    goto LABEL_224;
                  }
LABEL_225:
                  v120 = *(_QWORD *)(a1 + 152);
                  if (v120)
                    v121 = *(_QWORD *)(v120 + 112);
                  else
                    v121 = 0;
                  v122 = byte_2160EE6D4[v99];
                  v123 = ((v99 >> 1) | ((_BYTE)v99 << 7));
                  if ((v123 - 4) < 2 || v123 == 1)
                  {
                    if (((0x537uLL >> v99) & 1) == 0)
                      goto LABEL_244;
                    if (!v90)
                      goto LABEL_258;
                    v119 = 0;
                    v125 = *(unsigned __int16 *)(v90 + 10);
                    if (v125 >= 0x103)
                      v125 = 259;
                    v126 = *(_OWORD *)(v90 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v125] + v122));
                  }
                  else
                  {
                    if (!__PAIR16__((_DWORD)v99 << 7 >> 24, (_BYTE)v99 << 7))
                    {
                      if (((0x537uLL >> v99) & 1) == 0)
                      {
                        v127 = *(unsigned __int16 *)(v95 + 26);
                        if (v127 >= 0x103)
                          v127 = 259;
                        v128 = &word_254E10E30[40 * v127];
                        v129 = *((unsigned __int8 *)v128 + v122);
                        v130 = *(unsigned __int8 *)v128;
                        goto LABEL_247;
                      }
                      if (v121)
                      {
                        v119 = 0;
                        v133 = *(unsigned __int16 *)(v121 + 10);
                        if (v133 >= 0x103)
                          v133 = 259;
                        v126 = *(_OWORD *)(v121 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v133] + v122));
                        goto LABEL_257;
                      }
LABEL_258:
                      v119 = 0;
                      *(_QWORD *)&v170 = 0;
                      WORD4(v170) = 8224;
LABEL_259:
                      v171 = v104;
                      v172 = v109;
                      v173 = v119;
                      sub_215FD6108(a1, i, &v171, &v168, &v167, 0, 0);
                      goto LABEL_260;
                    }
                    if (((0x537uLL >> v99) & 1) == 0)
                    {
LABEL_244:
                      v131 = *(unsigned __int16 *)(v95 + 26);
                      if (v131 >= 0x103)
                        v131 = 259;
                      v132 = &word_254E10E30[40 * v131];
                      v129 = *((unsigned __int8 *)v132 + v122);
                      v130 = *((unsigned __int8 *)v132 + v99);
LABEL_247:
                      if (v129 < v130)
                      {
                        v119 = 0;
                        v126 = *(_OWORD *)(v96 + 16 * v129);
                        goto LABEL_257;
                      }
                      goto LABEL_258;
                    }
                    if (!v92)
                      goto LABEL_258;
                    v119 = 0;
                    v134 = *(unsigned __int16 *)(v92 + 10);
                    if (v134 >= 0x103)
                      v134 = 259;
                    v126 = *(_OWORD *)(v92 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v134] + v122));
                  }
LABEL_257:
                  v170 = v126;
                  goto LABEL_259;
                }
                if (!v92)
                  goto LABEL_225;
                v118 = *(unsigned __int16 *)(v92 + 10);
                if (v118 >= 0x103)
                  v118 = 259;
                v115 = *(_OWORD *)(v92 + 16 * *((unsigned __int8 *)&word_254E10E30[40 * v118] + v111));
              }
LABEL_224:
              v170 = v115;
              v119 = 1;
              goto LABEL_259;
            }
            v167.i32[0] = 0;
LABEL_260:
            v135 = 16 * i;
            result.i64[0] = *(_QWORD *)(v96 + v135);
            result = vaddq_s16(v167, result);
            *(_QWORD *)(v96 + v135) = result.i64[0];
            v136 = *(_QWORD *)(a1 + 48) + 16;
            v137 = v136 + v135;
            v138 = *(unsigned __int8 *)(v137 + 8);
            v139 = *(unsigned __int8 *)(v137 + 9);
            if (*(_BYTE *)(a1 + 31) == 2)
            {
              v138 >>= v138 != 32;
              v139 >>= v139 != 32;
            }
            v140 = *(_QWORD *)(a1 + 264);
            v141 = *(_BYTE *)(v140 + v139 + 33);
            *(_BYTE *)(v136 + 16 * i + 12) = *(_BYTE *)(v140 + v138);
            *(_BYTE *)(*(_QWORD *)(a1 + 48) + 16 * i + 29) = v141;
            v142 = *(_QWORD *)(a1 + 48) + 16 * i;
            v143 = v142 + 16;
            v144 = *(unsigned __int8 *)(v142 + 31);
            if (v144 == 5)
            {
              *(_BYTE *)(v143 + 8) = 32;
              *(_BYTE *)(*(_QWORD *)(a1 + 48) + 16 * i + 28) = 0;
              *(_DWORD *)(*(_QWORD *)(a1 + 48) + 16 * i + 16) = 0;
            }
            else if (v144 == 4)
            {
              *(_BYTE *)(v143 + 9) = 32;
              *(_BYTE *)(*(_QWORD *)(a1 + 48) + 16 * i + 29) = 0;
              *(_DWORD *)(*(_QWORD *)(a1 + 48) + 16 * i + 20) = 0;
            }
          }
        }
LABEL_267:
        if ((_DWORD)v8 == 5)
        {
          v145 = *(int16x8_t **)(a1 + 48);
        }
        else
        {
          v145 = *(int16x8_t **)(a1 + 48);
          if (**(_BYTE **)(a1 + 40))
            goto LABEL_291;
        }
        v146 = v145[1].u8[15];
        v168.i64[0] = 0;
        v147 = 1;
        if (v146 == 5)
        {
          v168.i32[0] = 1;
          LODWORD(v148) = 1;
        }
        else if (v146 == 4)
        {
          LODWORD(v148) = 0;
          v147 = 0;
          v168.i32[1] = 1;
        }
        else
        {
          LODWORD(v148) = 0;
        }
        v148 = v148;
        if ((_DWORD)v7 == 16)
        {
          if (v148 <= v147)
          {
            v149 = v147 + 1;
            v150 = &v145[8].i64[1];
            do
            {
              v151 = (_DWORD *)v150 + v148;
              v152 = *(v151 - 30);
              if (!((*(v151 - 22) - v152) | (*(v151 - 26) - v152) | (*(v151 - 18) - v152) | (*(v151 - 14) - v152) | (*(v151 - 10) - v152) | (*(v151 - 6) - v152) | (*(v151 - 2) - v152) | (v151[2] - v152) | (v151[6] - v152) | (v151[10] - v152) | (v151[14] - v152) | (v151[18] - v152) | (v151[22] - v152) | (v151[26] - v152) | (v151[30] - v152)))
              {
                v153 = *((unsigned __int8 *)v150 + v148 - 112);
                if ((*((unsigned __int8 *)v150 + v148 - 80) - v153) | (*((unsigned __int8 *)v150 + v148 - 96) - v153) | (*((unsigned __int8 *)v150 + v148 - 64) - v153) | (*((unsigned __int8 *)v150 + v148 - 48) - v153) | (*((unsigned __int8 *)v150 + v148 - 32) - v153) | (*((unsigned __int8 *)v150 + v148 - 16) - v153) | (*((unsigned __int8 *)v150 + v148) - v153) | (*((unsigned __int8 *)v150 + v148 + 16) - v153) | (*((unsigned __int8 *)v150 + v148 + 32) - v153) | (*((unsigned __int8 *)v150 + v148 + 48) - v153) | (*((unsigned __int8 *)v150 + v148 + 64) - v153) | (*((unsigned __int8 *)v150 + v148 + 80) - v153) | (*((unsigned __int8 *)v150 + v148 + 96) - v153) | (*((unsigned __int8 *)v150 + v148 + 112) - v153) | (*((unsigned __int8 *)v150 + v148 + 128) - v153))
                  break;
                v168.i32[v148] = 1;
              }
              ++v148;
            }
            while (v149 != v148);
          }
        }
        else if (v148 <= v147)
        {
          v154 = v147 + 1;
          v155 = &v145[4].i64[1];
          do
          {
            v156 = (uint64_t)v155 + 4 * v148;
            if (!((*(_DWORD *)(v156 - 24) - *(_DWORD *)(v156 - 56)) | (*(_DWORD *)(v156 - 40) - *(_DWORD *)(v156 - 56)) | (*(_DWORD *)(v156 - 8) - *(_DWORD *)(v156 - 56))))
            {
              if ((*((unsigned __int8 *)v155 + v148 - 16) - *((unsigned __int8 *)v155 + v148 - 48)) | (*((unsigned __int8 *)v155 + v148 - 32) - *((unsigned __int8 *)v155 + v148 - 48)) | (*((unsigned __int8 *)v155 + v148) - *((unsigned __int8 *)v155 + v148 - 48)))
                break;
              v168.i32[v148] = 1;
            }
            ++v148;
          }
          while (v154 != v148);
        }
        if ((v168.i32[1] & v168.i32[0]) != 0)
        {
          v145[17].i8[0] = 1;
          *(_WORD *)(*(_QWORD *)(a1 + 48) + 26) = 256;
          goto LABEL_303;
        }
LABEL_291:
        *v4 = v145[1];
        v4[1] = *(int16x8_t *)(*(_QWORD *)(a1 + 48) + 32);
        v4[2] = *(int16x8_t *)(*(_QWORD *)(a1 + 48) + 48);
        result = *(int16x8_t *)(*(_QWORD *)(a1 + 48) + 64);
        v4[3] = result;
        if (v7 >= 5)
        {
          v157 = 0;
          do
          {
            result = *(int16x8_t *)(*(_QWORD *)(a1 + 48) + v157 + 80);
            v4[v157 / 0x10 + 4] = result;
            v157 += 16;
          }
          while (16 * v7 - 64 != v157);
        }
        return result;
      }
    }
    else if (!v5[272])
    {
      goto LABEL_267;
    }
    v87 = 24;
    do
    {
      *(_BYTE *)(*(_QWORD *)(a1 + 48) + v87) = 0;
      v87 += 16;
      --v7;
    }
    while (v7);
    LODWORD(v7) = *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + 272);
    goto LABEL_166;
  }
  if (!byte_2160F76AA[v8])
    return result;
  if (!v5[2] && *(_BYTE *)(a1 + 31) != 2 || (_DWORD)v8 == 2 && *(_BYTE *)(v6 + 2) == 4)
    v5[24] = 0;
  v9 = *(_QWORD *)(a1 + 128);
  if (v9)
    v10 = *(_QWORD *)(v9 + 112);
  else
    v10 = 0;
  v74 = *(_QWORD *)(a1 + 136);
  if (v74)
    v75 = *(_QWORD *)(v74 + 112);
  else
    v75 = 0;
  v76 = *(_QWORD *)(a1 + 144);
  if (v76)
  {
    v77 = *(_QWORD *)(v76 + 112);
    if (v10)
      goto LABEL_135;
  }
  else
  {
    v77 = 0;
    if (v10)
    {
LABEL_135:
      v78 = *(unsigned __int16 *)(v10 + 10);
      if (v78 >= 0x103)
        v78 = 259;
      result = *(int16x8_t *)(v10 + 16 * HIBYTE(word_254E10E30[40 * v78 + 2]));
      v168 = result;
      v79 = 1;
      if (v75)
        goto LABEL_138;
LABEL_143:
      v81 = 0;
      v169.i64[0] = 0;
      v169.i16[4] = 8224;
      goto LABEL_144;
    }
  }
  v79 = 0;
  v168.i64[0] = 0;
  v168.i16[4] = 8224;
  if (!v75)
    goto LABEL_143;
LABEL_138:
  v80 = *(unsigned __int16 *)(v75 + 10);
  if (v80 >= 0x103)
    v80 = 259;
  result = *(int16x8_t *)(v75 + 16 * LOBYTE(word_254E10E30[40 * v80 + 5]));
  v169 = result;
  v81 = 1;
LABEL_144:
  if ((_DWORD)v8 != 4 || v10 && v75 && (v168.i8[8] || v168.i32[0]) && (v169.i8[8] || v169.i32[0]))
  {
    if (v77)
    {
      v82 = *(unsigned __int16 *)(v77 + 10);
      if (v82 >= 0x103)
        v82 = 259;
      v170 = *(_OWORD *)(v77 + 16 * LOBYTE(word_254E10E30[40 * v82 + 5]));
    }
    else
    {
      v84 = *(_QWORD *)(a1 + 152);
      if (!v84 || (v85 = *(_QWORD *)(v84 + 112)) == 0)
      {
        v83 = 0;
        *(_QWORD *)&v170 = 0;
        WORD4(v170) = 8224;
        goto LABEL_296;
      }
      v86 = *(unsigned __int16 *)(v85 + 10);
      if (v86 >= 0x103)
        v86 = 259;
      v170 = *(_OWORD *)(v85 + 16 * HIBYTE(word_254E10E30[40 * v86 + 7]));
    }
    v83 = 1;
LABEL_296:
    v171 = v79;
    v172 = v81;
    v173 = v83;
    sub_215FD6108(a1, 0, &v171, &v168, &v167, 0, 0);
    goto LABEL_297;
  }
  v167.i32[0] = 0;
LABEL_297:
  v158 = *(_QWORD *)(a1 + 48);
  result.i64[0] = *(_QWORD *)(v158 + 16);
  *(_QWORD *)(v158 + 16) = vaddq_s16(v167, result).u64[0];
  v159 = *(unsigned __int8 **)(a1 + 48);
  v160 = v159[24];
  v161 = v159[25];
  if (*(_BYTE *)(a1 + 31) == 2)
  {
    v160 >>= v160 != 32;
    v161 >>= v161 != 32;
  }
  v162 = *(_QWORD *)(a1 + 264);
  v163 = *(_BYTE *)(v162 + v161 + 33);
  v159[28] = *(_BYTE *)(v162 + v160);
  *(_BYTE *)(*(_QWORD *)(a1 + 48) + 29) = v163;
  v164 = *(_BYTE **)(a1 + 48);
  v165 = v164[31];
  if (v165 == 5)
  {
    v164[24] = 32;
    *(_BYTE *)(*(_QWORD *)(a1 + 48) + 28) = 0;
    *(_DWORD *)(*(_QWORD *)(a1 + 48) + 16) = 0;
  }
  else if (v165 == 4)
  {
    v164[25] = 32;
    *(_BYTE *)(*(_QWORD *)(a1 + 48) + 29) = 0;
    *(_DWORD *)(*(_QWORD *)(a1 + 48) + 20) = 0;
  }
LABEL_303:
  v72 = (int16x8_t *)(*(_QWORD *)(a1 + 48) + 16);
LABEL_304:
  result = *v72;
  *v4 = *v72;
  return result;
}

uint64_t sub_215FD8E5C(uint64_t result, int a2, _OWORD *a3)
{
  __int128 v3;
  unsigned int v4;

  v3 = *(_OWORD *)(result - a2);
  v4 = -4;
  do
  {
    *a3 = v3;
    a3[1] = v3;
    a3[2] = v3;
    a3[3] = v3;
    a3 += 4;
    v4 += 4;
  }
  while (v4 < 0xC);
  return result;
}

int8x16_t sub_215FD8E84(uint64_t a1, int a2, int8x16_t *a3)
{
  const char *v3;
  unsigned int v4;
  const char *v5;
  int8x16_t v6;
  const char *v7;
  int8x16_t v8;
  const char *v9;
  int8x16_t v10;
  int8x16_t result;

  v3 = (const char *)(a1 - 1);
  v4 = -4;
  do
  {
    v6 = vld1q_dup_s8(v3);
    v5 = &v3[a2];
    *a3 = v6;
    v8 = vld1q_dup_s8(v5);
    v7 = &v5[a2];
    a3[1] = v8;
    v10 = vld1q_dup_s8(v7);
    v9 = &v7[a2];
    a3[2] = v10;
    result = vld1q_dup_s8(v9);
    v3 = &v9[a2];
    a3[3] = result;
    a3 += 4;
    v4 += 4;
  }
  while (v4 < 0xC);
  return result;
}

__int8 *sub_215FD8EC4(__int8 *result, int a2, int8x16_t *a3, char a4)
{
  int v4;
  int8x16_t v5;
  __int8 *v6;
  __int8 v7;
  __int8 *v8;
  __int8 *v9;
  uint64_t v10;
  __int8 *v11;
  __int8 *v12;
  uint64_t v13;
  __int8 *v14;
  __int8 *v15;
  uint64_t v16;
  __int8 *v17;
  uint8x16_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint8x8_t v22;
  __int8 *v23;
  uint8x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  unsigned int v28;

  v4 = a4 & 3;
  if (v4 == 3)
  {
    v19 = 3 * a2;
    v20 = 5 * a2;
    v21 = 7 * a2;
    v22.i8[0] = result[v21 - 1];
    v22.i8[1] = result[6 * a2 - 1];
    v22.i8[2] = result[v20 - 1];
    v22.i8[3] = result[4 * a2 - 1];
    v22.i8[4] = result[v19 - 1];
    v22.i8[5] = result[2 * a2 - 1];
    v22.i8[6] = result[a2 - 1];
    v22.i8[7] = *(result - 1);
    v23 = &result[8 * a2 - 1];
    v24.i8[0] = v23[v21];
    v24.i8[1] = v23[6 * a2];
    v24.i8[2] = v23[v20];
    v24.i8[3] = v23[4 * a2];
    v24.i8[4] = v23[v19];
    v24.i8[5] = v23[2 * a2];
    v24.i8[6] = v23[a2];
    v24.i8[7] = *v23;
    v25 = (int16x8_t)vaddw_u8(vaddw_u8(vaddw_high_u8(vmovl_u8(v22), *(uint8x16_t *)&result[-a2]), *(uint8x8_t *)&result[-a2]), v24);
    v25.i16[0] = vaddvq_s16(v25);
    v26 = vdupq_lane_s16(*(int16x4_t *)v25.i8, 0);
    v5 = vrshrn_high_n_s16(vrshrn_n_s16(v26, 5uLL), v26, 5uLL);
  }
  else
  {
    if (v4 == 2)
    {
      v18 = *(uint8x16_t *)&result[-a2];
      goto LABEL_7;
    }
    v5.i64[0] = 0x8080808080808080;
    v5.i64[1] = 0x8080808080808080;
    if (v4 == 1)
    {
      v7 = *(result - 1);
      v6 = result - 1;
      v8 = &v6[a2];
      v9 = &v6[2 * a2];
      v10 = 3 * a2;
      v11 = &v6[v10];
      v12 = &v6[4 * a2];
      v13 = 5 * a2;
      v14 = &v6[v13];
      v15 = &v6[6 * a2];
      v16 = 7 * a2;
      v17 = &v6[v16];
      result = &v6[8 * a2];
      v18.i8[0] = result[v16];
      v18.i8[1] = result[6 * a2];
      v18.i8[2] = result[v13];
      v18.i8[3] = result[4 * a2];
      v18.i8[4] = result[v10];
      v18.i8[5] = result[2 * a2];
      v18.i8[6] = result[a2];
      v18.i8[7] = *result;
      v18.i8[8] = *v17;
      v18.i8[9] = *v15;
      v18.i8[10] = *v14;
      v18.i8[11] = *v12;
      v18.i8[12] = *v11;
      v18.i8[13] = *v9;
      v18.i8[14] = *v8;
      v18.i8[15] = v7;
LABEL_7:
      v18.i16[0] = vaddlvq_u8(v18);
      v27 = vdupq_n_s16(v18.u32[0]);
      v5 = vrshrn_high_n_s16(vrshrn_n_s16(v27, 4uLL), v27, 4uLL);
    }
  }
  v28 = -4;
  do
  {
    *a3 = v5;
    a3[1] = v5;
    a3[2] = v5;
    a3[3] = v5;
    a3 += 4;
    v28 += 4;
  }
  while (v28 < 0xC);
  return result;
}

uint64_t sub_215FD9074(uint64_t a1, int a2, int8x16_t *a3)
{
  uint64_t result;
  __int8 v4;
  unsigned __int8 *v5;
  int8x16_t v6;
  uint8x8_t v7;
  int16x8_t v8;
  uint8x8_t v9;
  int8x16_t v10;
  int8x16_t v11;
  int8x16_t v12;
  int16x8_t v13;
  int16x8_t v14;
  int16x8_t v15;
  int16x8_t v16;
  int16x8_t v17;
  unsigned int v18;
  int16x8_t v19;
  int16x8_t v20;
  int8x8_t v21;
  int8x16_t v22;

  v4 = *(_BYTE *)(a1 - 1);
  result = a1 - 1;
  v5 = (unsigned __int8 *)(result - a2);
  v6 = *(int8x16_t *)(v5 + 1);
  v7.i8[0] = v5[8 * a2 - a2];
  v7.i8[1] = v5[6 * a2];
  v7.i8[2] = v5[5 * a2];
  v7.i8[3] = v5[4 * a2];
  v7.i8[4] = v5[3 * a2];
  v7.i8[5] = v5[2 * a2];
  v7.i8[6] = v4;
  v7.i8[7] = *v5;
  v8 = (int16x8_t)vmlsl_u8(vmull_u8((uint8x8_t)*(_OWORD *)&vextq_s8(v6, v6, 8uLL), (uint8x8_t)0x807060504030201), (uint8x8_t)vrev64_s8(vext_s8(vdup_n_s8(*v5), *(int8x8_t *)v6.i8, 7uLL)), (uint8x8_t)0x807060504030201);
  v9.i8[0] = v5[9 * a2];
  v9.i8[1] = v5[10 * a2];
  v9.i8[2] = v5[11 * a2];
  v9.i8[3] = v5[12 * a2];
  v9.i8[4] = v5[13 * a2];
  v9.i8[5] = v5[14 * a2];
  v9.i8[6] = v5[15 * a2];
  v9.i8[7] = v5[16 * a2];
  v10 = (int8x16_t)vmovl_high_u8((uint8x16_t)v6);
  v11 = (int8x16_t)vmovl_u8(v9);
  v12 = (int8x16_t)vmlsl_u8(vmull_u8(v9, (uint8x8_t)0x807060504030201), v7, (uint8x8_t)0x807060504030201);
  v13 = vdupq_lane_s16(vshl_n_s16(vadd_s16((int16x4_t)*(_OWORD *)&vextq_s8(v11, v11, 8uLL), (int16x4_t)*(_OWORD *)&vextq_s8(v10, v10, 8uLL)), 4uLL), 3);
  *(int16x4_t *)v10.i8 = vpadd_s16(vadd_s16(*(int16x4_t *)v8.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v8, (int8x16_t)v8, 8uLL)), vadd_s16(*(int16x4_t *)v12.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v12, v12, 8uLL)));
  *(int16x4_t *)v10.i8 = vpadd_s16(*(int16x4_t *)v10.i8, *(int16x4_t *)v10.i8);
  *(int16x4_t *)v12.i8 = vrshr_n_s16(vsra_n_s16(*(int16x4_t *)v10.i8, *(int16x4_t *)v10.i8, 2uLL), 4uLL);
  v14 = vdupq_lane_s16(*(int16x4_t *)v12.i8, 1);
  v8.i64[0] = 0x6000600060006;
  v8.i64[1] = 0x6000600060006;
  v15 = vmlaq_lane_s16(v13, v8, *(int16x4_t *)v12.i8, 1);
  v16 = vmlaq_lane_s16(v15, (int16x8_t)xmmword_2160EE730, *(int16x4_t *)v12.i8, 0);
  v17 = vmlaq_lane_s16(v15, (int16x8_t)xmmword_2160EE740, *(int16x4_t *)v12.i8, 0);
  v18 = -2;
  do
  {
    v19 = vaddq_s16(v16, v14);
    v20 = vaddq_s16(v17, v14);
    v21 = vqrshrun_n_s16(v16, 5uLL);
    v16 = vaddq_s16(v19, v14);
    v22 = vqrshrun_high_n_s16(v21, v17, 5uLL);
    v17 = vaddq_s16(v20, v14);
    *a3 = v22;
    a3[1] = vqrshrun_high_n_s16(vqrshrun_n_s16(v19, 5uLL), v20, 5uLL);
    a3 += 2;
    v18 += 2;
  }
  while (v18 < 0xE);
  return result;
}

uint16x8_t sub_215FD91F4(const float *a1, uint64_t a2, uint64_t a3, uint16x8_t *a4, unsigned int *a5, int a6, unsigned int a7)
{
  uint64_t v10;
  int v11;
  int32x4_t v12;
  int32x4_t v13;
  uint8x16_t v14;
  uint8x16_t v15;
  uint64_t v16;
  const float *v17;
  const float *v18;
  uint8x8_t v19;
  const float *v20;
  uint8x8_t v21;
  const float *v22;
  uint8x8_t v23;
  uint8x8_t v24;
  uint16x8_t result;
  int32x4_t v26;

  v10 = *a5;
  if (a7 <= 8)
    v11 = a7;
  else
    v11 = 2;
  *(double *)v12.i64 = ((double (*)(const float *, uint64_t, _QWORD))off_24D4DE550[a6])(a1, a2, *a5);
  v26 = v12;
  *(double *)v13.i64 = ((double (*)(const float *, uint64_t, uint64_t))off_24D4DE550[v11])(a1, a2, v10);
  v14 = (uint8x16_t)vtrn1q_s32(v26, v13);
  v15 = (uint8x16_t)vtrn2q_s32(v26, v13);
  v16 = (3 * a2);
  v17 = a1;
  v19 = (uint8x8_t)vld1_dup_f32(v17);
  v18 = (const float *)((char *)v17 + v16);
  v20 = (const float *)((char *)a1 + a2);
  v21 = (uint8x8_t)vld1_dup_f32(v20);
  v22 = (const float *)((char *)a1 + (2 * a2));
  v23 = (uint8x8_t)vld1_dup_f32(v22);
  v24 = (uint8x8_t)vld1_dup_f32(v18);
  *a4 = vsubl_u8(v19, *(uint8x8_t *)v14.i8);
  a4[1] = vsubl_u8(v21, *(uint8x8_t *)v15.i8);
  result = vsubw_high_u8(vmovl_u8(v24), v15);
  a4[2] = vsubw_high_u8(vmovl_u8(v23), v14);
  a4[3] = result;
  return result;
}

uint16x8_t sub_215FD92BC(__int32 *a1, uint64_t a2, uint8x16_t *a3, uint16x8_t *a4, unsigned int *a5, int a6)
{
  unsigned int v8;
  uint8x16_t v10;
  uint8x8_t v11;
  uint8x8_t v12;
  uint16x8_t v13;
  uint16x8_t result;

  v8 = a2;
  *(double *)v10.i64 = ((double (*)(__int32 *, uint64_t, _QWORD))off_24D4DE550[a6])(a1, a2, *a5);
  *a3 = v10;
  v11.i32[0] = *a1;
  v11.i32[1] = *(__int32 *)((char *)a1 + v8);
  v12.i32[0] = *(__int32 *)((char *)a1 + 2 * v8);
  v12.i32[1] = *(__int32 *)((char *)a1 + 3 * v8);
  v13 = vsubl_u8(v11, *(uint8x8_t *)v10.i8);
  result = vsubw_high_u8(vmovl_u8(v12), v10);
  *a4 = v13;
  a4[1] = result;
  return result;
}

uint8x16_t sub_215FD9334(uint64_t a1, int a2, uint8x16_t *a3, __int32 *a4, double a5, int8x8_t a6, double a7, uint32x4_t a8, uint32x4_t a9)
{
  int8x16_t *v9;
  int8x16_t v10;
  __int8 *v11;
  __int32 v12;
  int8x16_t v13;
  __int8 *v14;
  const char *v15;
  int8x16_t v16;
  int8x16_t v17;
  int8x16_t v18;
  int8x16_t v19;
  int8x16_t v20;
  int8x16_t v21;
  int8x16_t v22;
  uint8x16_t result;

  v9 = (int8x16_t *)(a1 - a2);
  v10 = *v9;
  if ((*a4 & 0xFF0000) == 0)
  {
    a6 = vdup_lane_s8(*(int8x8_t *)v10.i8, 7);
    v10.u64[1] = (unint64_t)a6;
  }
  v12 = v9[-1].u8[15];
  v11 = &v9[-1].i8[15];
  a6.i32[0] = v12;
  if ((*a4 & 0xFF00) == 0)
  {
    *(int8x8_t *)v13.i8 = vdup_lane_s8(a6, 0);
    v13.i64[1] = vextq_s8(v10, v10, 8uLL).u64[0];
    v10 = v13;
  }
  if (*a4)
  {
    v14 = &v11[a2];
    v15 = &v14[8 * a2 - a2];
    v16 = vld1q_dup_s8(v15);
    v16.i8[9] = v14[6 * a2];
    v16.i8[10] = v14[5 * a2];
    v16.i8[11] = v14[4 * a2];
    v16.i8[12] = v14[3 * a2];
    v16.i8[13] = v14[2 * a2];
    v16.i8[14] = v14[a2];
    v16.i8[15] = *v14;
    v17 = vdupq_lane_s8(a6, 0);
  }
  else
  {
    v17 = vdupq_lane_s8(a6, 0);
    v16 = v17;
  }
  a8.i32[0] = *a4;
  a9.i32[0] = 0x1000000;
  v18 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_u32(a9, a8), 0);
  *(int8x8_t *)v19.i8 = vdup_laneq_s8(v16, 15);
  v19.u64[1] = (unint64_t)vdup_lane_s8(*(int8x8_t *)v10.i8, 0);
  v20 = vbslq_s8(v18, v19, v17);
  v21 = vextq_s8(v16, v20, 1uLL);
  v22 = (int8x16_t)vrhaddq_u8(vhaddq_u8((uint8x16_t)vextq_s8(v21, v10, 1uLL), (uint8x16_t)v16), (uint8x16_t)v21);
  v18.i64[0] = vextq_s8(v22, v22, 8uLL).u64[0];
  *(int8x8_t *)v22.i8 = vdup_lane_s8(*(int8x8_t *)v22.i8, 7);
  v22.i64[1] = v18.i64[0];
  result = vrhaddq_u8(vhaddq_u8((uint8x16_t)vextq_s8(v20, v10, 0xFuLL), (uint8x16_t)vextq_s8(v10, vdupq_laneq_s8(v10, 15), 1uLL)), (uint8x16_t)v10);
  a3[-1] = (uint8x16_t)v22;
  *a3 = result;
  a3[1].i8[0] = result.i8[15];
  return result;
}

double sub_215FD9440(_QWORD *a1, int a2, double *a3)
{
  double result;

  result = *a3;
  *a1 = *(_QWORD *)a3;
  *(double *)((char *)a1 + a2) = result;
  *(double *)((char *)a1 + 2 * a2) = result;
  *(double *)((char *)a1 + 3 * a2) = result;
  *(double *)((char *)a1 + 4 * a2) = result;
  *(double *)((char *)a1 + 5 * a2) = result;
  *(double *)((char *)a1 + 6 * a2) = result;
  *(double *)((char *)&a1[a2] - a2) = result;
  return result;
}

int8x8_t sub_215FD9484(int8x8_t *a1, int a2, uint64_t a3)
{
  int8x8_t v3;
  int8x8_t v4;
  int8x8_t v5;
  int8x8_t v6;
  int8x8_t v7;
  int8x8_t result;

  v3 = *(int8x8_t *)(a3 - 9);
  v4 = vdup_lane_s8(v3, 4);
  v5 = vdup_lane_s8(v3, 3);
  v6 = vdup_lane_s8(v3, 2);
  v7 = vdup_lane_s8(v3, 1);
  *a1 = vdup_lane_s8(v3, 7);
  *(int8x8_t *)((char *)a1 + a2) = vdup_lane_s8(v3, 6);
  *(int8x8_t *)((char *)a1 + 2 * a2) = vdup_lane_s8(v3, 5);
  result = vdup_lane_s8(v3, 0);
  *(int8x8_t *)((char *)a1 + 3 * a2) = v4;
  *(int8x8_t *)((char *)a1 + 4 * a2) = v5;
  *(int8x8_t *)((char *)a1 + 5 * a2) = v6;
  *(int8x8_t *)((char *)a1 + 6 * a2) = v7;
  *(int8x8_t *)((char *)&a1[a2] - a2) = result;
  return result;
}

int8x8_t *sub_215FD94E8(int8x8_t *result, int a2, uint8x8_t *a3, _WORD *a4)
{
  uint8x8_t v4;
  int8x8_t v5;
  int16x8_t v6;
  int16x4_t v7;
  int16x4_t v8;
  int16x8_t v9;

  if (*a4)
  {
    if ((unsigned __int16)*a4 <= 0xFFu)
    {
      v4 = *(uint8x8_t *)((char *)a3 - 9);
LABEL_8:
      v7 = (int16x4_t)vpaddl_u8(v4);
      v8 = vpadd_s16(v7, v7);
      *(int16x4_t *)v9.i8 = vpadd_s16(v8, v8);
      v9.i64[1] = v9.i64[0];
      v5 = vrshrn_n_s16(v9, 3uLL);
      goto LABEL_9;
    }
    if (!*a4)
    {
      v4 = *a3;
      goto LABEL_8;
    }
    v6 = (int16x8_t)vaddl_u8(*a3, *(uint8x8_t *)((char *)a3 - 9));
    *(int16x4_t *)v6.i8 = vadd_s16(*(int16x4_t *)v6.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v6, (int8x16_t)v6, 8uLL));
    *(int16x4_t *)v6.i8 = vpadd_s16(*(int16x4_t *)v6.i8, *(int16x4_t *)v6.i8);
    *(int16x4_t *)v6.i8 = vpadd_s16(*(int16x4_t *)v6.i8, *(int16x4_t *)v6.i8);
    v6.i64[1] = v6.i64[0];
    v5 = vrshrn_n_s16(v6, 4uLL);
  }
  else
  {
    v5 = (int8x8_t)0x8080808080808080;
  }
LABEL_9:
  *result = v5;
  *(int8x8_t *)((char *)result + a2) = v5;
  *(int8x8_t *)((char *)result + 2 * a2) = v5;
  *(int8x8_t *)((char *)result + 3 * a2) = v5;
  *(int8x8_t *)((char *)result + 4 * a2) = v5;
  *(int8x8_t *)((char *)result + 5 * a2) = v5;
  *(int8x8_t *)((char *)result + 6 * a2) = v5;
  *(int8x8_t *)((char *)&result[a2] - a2) = v5;
  return result;
}

double sub_215FD9590(_QWORD *a1, int a2, int8x16_t *a3)
{
  int8x16_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  double result;

  v3 = (int8x16_t)vrhaddq_u8(vhaddq_u8((uint8x16_t)vextq_s8(*a3, a3[1], 2uLL), *(uint8x16_t *)a3), (uint8x16_t)vextq_s8(*a3, a3[1], 1uLL));
  *a1 = v3.i64[0];
  *(_QWORD *)((char *)a1 + a2) = vextq_s8(v3, v3, 1uLL).u64[0];
  *(_QWORD *)((char *)a1 + 2 * a2) = vextq_s8(v3, v3, 2uLL).u64[0];
  v4 = vextq_s8(v3, v3, 3uLL).u64[0];
  v5 = vextq_s8(v3, v3, 4uLL).u64[0];
  v6 = vextq_s8(v3, v3, 5uLL).u64[0];
  v7 = vextq_s8(v3, v3, 6uLL).u64[0];
  *(_QWORD *)&result = vextq_s8(v3, v3, 7uLL).u64[0];
  *(_QWORD *)((char *)a1 + 3 * a2) = v4;
  *(_QWORD *)((char *)a1 + 4 * a2) = v5;
  *(_QWORD *)((char *)a1 + 5 * a2) = v6;
  *(_QWORD *)((char *)a1 + 6 * a2) = v7;
  *(double *)((char *)&a1[a2] - a2) = result;
  return result;
}

int8x16_t sub_215FD9600(_QWORD *a1, int a2, uint64_t a3)
{
  int8x16_t result;

  result = (int8x16_t)vrhaddq_u8(vhaddq_u8((uint8x16_t)vextq_s8(*(int8x16_t *)(a3 - 9), *(int8x16_t *)(a3 + 7), 2uLL), *(uint8x16_t *)(a3 - 9)), (uint8x16_t)vextq_s8(*(int8x16_t *)(a3 - 9), *(int8x16_t *)(a3 + 7), 1uLL));
  *a1 = vextq_s8(result, result, 7uLL).u64[0];
  *(_QWORD *)((char *)a1 + a2) = vextq_s8(result, result, 6uLL).u64[0];
  *(_QWORD *)((char *)a1 + 2 * a2) = vextq_s8(result, result, 5uLL).u64[0];
  *(_QWORD *)((char *)a1 + 3 * a2) = vextq_s8(result, result, 4uLL).u64[0];
  *(_QWORD *)((char *)a1 + 4 * a2) = vextq_s8(result, result, 3uLL).u64[0];
  *(_QWORD *)((char *)a1 + 5 * a2) = vextq_s8(result, result, 2uLL).u64[0];
  *(_QWORD *)((char *)a1 + 6 * a2) = vextq_s8(result, result, 1uLL).u64[0];
  *(_QWORD *)((char *)&a1[a2] - a2) = result.i64[0];
  return result;
}

int8x8_t sub_215FD9674(_QWORD *a1, int a2, uint64_t a3)
{
  int8x16_t v3;
  uint8x16_t v4;
  uint8x16_t v5;
  uint8x16_t v6;
  int8x16_t v7;
  int8x16_t v8;
  int8x8_t v9;
  int8x8_t v10;
  int8x8_t result;

  v3 = *(int8x16_t *)(a3 - 8);
  v4 = (uint8x16_t)vextq_s8(v3, v3, 2uLL);
  v5 = (uint8x16_t)vextq_s8(v3, v3, 1uLL);
  v6 = vhaddq_u8(v4, (uint8x16_t)v3);
  v7 = (int8x16_t)vrhaddq_u8(v4, v5);
  v8 = (int8x16_t)vrhaddq_u8(v6, v5);
  v7.i64[0] = vextq_s8(v7, v7, 6uLL).u64[0];
  v5.i64[0] = vextq_s8(v8, v8, 6uLL).u64[0];
  *a1 = v7.i64[0];
  *(_QWORD *)((char *)a1 + a2) = v5.i64[0];
  *(int8x8_t *)v8.i8 = vext_s8(*(int8x8_t *)v8.i8, *(int8x8_t *)v8.i8, 6uLL);
  *(int8x8_t *)((char *)a1 + 2 * a2) = vext_s8(*(int8x8_t *)v8.i8, *(int8x8_t *)v7.i8, 7uLL);
  v9 = vuzp1_s8(*(int8x8_t *)v8.i8, *(int8x8_t *)v8.i8);
  *(int8x8_t *)v8.i8 = vuzp2_s8(*(int8x8_t *)v8.i8, *(int8x8_t *)v8.i8);
  v10 = vext_s8(*(int8x8_t *)v8.i8, *(int8x8_t *)v7.i8, 6uLL);
  result = vext_s8(*(int8x8_t *)v8.i8, *(int8x8_t *)v7.i8, 5uLL);
  *(int8x8_t *)((char *)a1 + 3 * a2) = vext_s8(v9, *(int8x8_t *)v5.i8, 7uLL);
  *(int8x8_t *)((char *)a1 + 4 * a2) = v10;
  *(int8x8_t *)((char *)a1 + 5 * a2) = vext_s8(v9, *(int8x8_t *)v5.i8, 6uLL);
  *(int8x8_t *)((char *)a1 + 6 * a2) = result;
  *(int8x8_t *)((char *)&a1[a2] - a2) = vext_s8(v9, *(int8x8_t *)v5.i8, 5uLL);
  return result;
}

int8x8_t sub_215FD96F8(int8x8_t *a1, int a2, uint64_t a3)
{
  int8x16_t v3;
  uint8x16_t v4;
  int8x16_t v5;
  int8x8_t v6;
  int8x8_t v7;
  int8x8_t v8;
  int8x8_t v9;
  int8x8_t result;

  v3 = *(int8x16_t *)(a3 - 9);
  v4 = (uint8x16_t)vextq_s8(v3, v3, 1uLL);
  v5 = (int8x16_t)vrhaddq_u8(vhaddq_u8((uint8x16_t)vextq_s8(v3, v3, 0xFuLL), v4), (uint8x16_t)v3);
  v6 = (int8x8_t)vextq_s8(v5, v5, 8uLL).u64[0];
  *(uint8x8_t *)v3.i8 = vrhadd_u8(*(uint8x8_t *)v4.i8, *(uint8x8_t *)v3.i8);
  *(int8x8_t *)v4.i8 = vzip2_s8(*(int8x8_t *)v5.i8, *(int8x8_t *)v3.i8);
  *a1 = vext_s8(*(int8x8_t *)v4.i8, v6, 7uLL);
  *(int8x8_t *)((char *)a1 + a2) = vext_s8(*(int8x8_t *)v4.i8, v6, 5uLL);
  *(int8x8_t *)((char *)a1 + 2 * a2) = vext_s8(*(int8x8_t *)v4.i8, v6, 3uLL);
  *(int8x8_t *)v3.i8 = vzip1_s8(*(int8x8_t *)v5.i8, *(int8x8_t *)v3.i8);
  *(int8x8_t *)v5.i8 = vext_s8(*(int8x8_t *)v4.i8, v6, 1uLL);
  v7 = vext_s8(*(int8x8_t *)v3.i8, *(int8x8_t *)v4.i8, 7uLL);
  v8 = vext_s8(*(int8x8_t *)v3.i8, *(int8x8_t *)v4.i8, 5uLL);
  v9 = vext_s8(*(int8x8_t *)v3.i8, *(int8x8_t *)v4.i8, 3uLL);
  result = vext_s8(*(int8x8_t *)v3.i8, *(int8x8_t *)v4.i8, 1uLL);
  *(int8x8_t *)((char *)a1 + 3 * a2) = *(int8x8_t *)v5.i8;
  *(int8x8_t *)((char *)a1 + 4 * a2) = v7;
  *(int8x8_t *)((char *)a1 + 5 * a2) = v8;
  *(int8x8_t *)((char *)a1 + 6 * a2) = v9;
  *(int8x8_t *)((char *)&a1[a2] - a2) = result;
  return result;
}

double sub_215FD977C(_QWORD *a1, int a2, uint8x16_t *a3)
{
  int8x16_t v3;
  uint8x16_t v4;
  uint8x16_t v5;
  int8x16_t v6;
  int8x16_t v7;
  unint64_t v8;
  double result;

  v3 = *(int8x16_t *)a3;
  v4 = (uint8x16_t)vextq_s8(v3, v3, 1uLL);
  v5 = vhaddq_u8((uint8x16_t)vextq_s8(v3, v3, 2uLL), *a3);
  v6 = (int8x16_t)vrhaddq_u8(v4, *a3);
  v7 = (int8x16_t)vrhaddq_u8(v5, v4);
  *a1 = v6.i64[0];
  *(_QWORD *)((char *)a1 + a2) = v7.i64[0];
  *(_QWORD *)((char *)a1 + 2 * a2) = vextq_s8(v6, v6, 1uLL).u64[0];
  v8 = vextq_s8(v6, v6, 2uLL).u64[0];
  *(_QWORD *)&result = vextq_s8(v6, v6, 3uLL).u64[0];
  *(_QWORD *)((char *)a1 + 3 * a2) = vextq_s8(v7, v7, 1uLL).u64[0];
  *(_QWORD *)((char *)a1 + 4 * a2) = v8;
  *(_QWORD *)((char *)a1 + 5 * a2) = vextq_s8(v7, v7, 2uLL).u64[0];
  *(double *)((char *)a1 + 6 * a2) = result;
  *(_QWORD *)((char *)&a1[a2] - a2) = vextq_s8(v7, v7, 3uLL).u64[0];
  return result;
}

int8x8_t sub_215FD97EC(int8x8_t *a1, int a2, uint64_t a3)
{
  int8x8_t v3;
  int8x8_t v4;
  int8x8_t v5;
  uint8x8_t v6;
  uint8x8_t v7;
  int8x8_t v8;
  int8x8_t v9;
  int8x8_t v10;
  int8x8_t result;

  v3 = *(int8x8_t *)(a3 - 9);
  v4 = vdup_lane_s8(v3, 0);
  v5 = vrev64_s8(v3);
  v6 = (uint8x8_t)vext_s8(v5, v3, 1uLL);
  v7 = vhadd_u8((uint8x8_t)vext_s8(v5, v4, 2uLL), (uint8x8_t)v5);
  v8 = (int8x8_t)vrhadd_u8(v6, (uint8x8_t)v5);
  v9 = (int8x8_t)vrhadd_u8(v7, v6);
  v10 = vzip1_s8(v8, v9);
  result = vzip2_s8(v8, v9);
  *a1 = v10;
  *(int8x8_t *)((char *)a1 + a2) = vext_s8(v10, result, 2uLL);
  *(int8x8_t *)((char *)a1 + 2 * a2) = vext_s8(v10, result, 4uLL);
  *(int8x8_t *)((char *)a1 + 3 * a2) = vext_s8(v10, result, 6uLL);
  *(int8x8_t *)((char *)a1 + 4 * a2) = result;
  *(int8x8_t *)((char *)a1 + 5 * a2) = vext_s8(result, v4, 2uLL);
  *(int8x8_t *)((char *)a1 + 6 * a2) = vext_s8(result, v4, 4uLL);
  *(int8x8_t *)((char *)&a1[a2] - a2) = v4;
  return result;
}

double sub_215FD9868(uint64_t a1, int a2)
{
  const float *v2;
  double result;

  v2 = (const float *)(a1 - a2);
  *(_QWORD *)&result = vld1q_dup_f32(v2).u64[0];
  return result;
}

double sub_215FD9874(uint64_t a1, int a2, int32x4_t a3, int32x4_t a4)
{
  uint64_t v4;
  unsigned __int8 v5;

  v5 = *(_BYTE *)(a1 - 1);
  v4 = a1 - 1;
  a3.i8[0] = v5;
  a3.i8[1] = v5;
  a3.i8[2] = v5;
  a3.i8[3] = v5;
  a3.i8[8] = *(_BYTE *)(v4 + 2 * a2);
  a3.i8[9] = a3.i8[8];
  a3.i8[10] = a3.i8[8];
  a3.i8[11] = a3.i8[8];
  a4.i8[0] = *(_BYTE *)(v4 + a2);
  a4.i8[1] = a4.i8[0];
  a4.i8[2] = a4.i8[0];
  a4.i8[3] = a4.i8[0];
  a4.i8[8] = *(_BYTE *)(v4 + 3 * a2);
  a4.i8[9] = a4.i8[8];
  a4.i8[10] = a4.i8[8];
  a4.i8[11] = a4.i8[8];
  a3.i64[0] = vtrn1q_s32(a3, a4).u64[0];
  return *(double *)a3.i64;
}

uint64_t sub_215FD98D4(uint64_t a1, uint64_t a2, unsigned int a3)
{
  __n128 v3;

  v3.n128_u64[0] = 0x8080808080808080;
  v3.n128_u64[1] = 0x8080808080808080;
  return ((uint64_t (*)(__n128))((char *)sub_215FD98F8
                                         + 4 * byte_2160EE770[(a3 | (a3 >> 7)) & 3]))(v3);
}

double sub_215FD98F8(uint64_t a1, int a2)
{
  double result;

  *(_QWORD *)&result = vdupq_n_s8((*(unsigned __int8 *)(a1 - 1)
                                 + *(unsigned __int8 *)(a1 + a2 - 1)
                                 + *(unsigned __int8 *)(a1 + 2 * a2 - 1)
                                 + *(unsigned __int8 *)(a1 + 2 * a2 + a2 - 1)
                                 + 2) >> 2).u64[0];
  return result;
}

double sub_215FD998C(uint64_t a1, int a2, int a3)
{
  int32x2_t v3;
  int8x8_t v4;
  int32x4_t v5;
  int32x4_t v6;
  double result;

  v3 = *(int32x2_t *)(a1 - a2);
  if ((a3 & 0xFF0000) == 0)
    v3 = vzip1_s32(v3, (int32x2_t)vdup_lane_s8((int8x8_t)v3, 3));
  v4 = vdup_lane_s8((int8x8_t)v3, 7);
  *(uint8x8_t *)v5.i8 = vrhadd_u8(vhadd_u8((uint8x8_t)v3, (uint8x8_t)vext_s8((int8x8_t)v3, v4, 2uLL)), (uint8x8_t)vext_s8((int8x8_t)v3, v4, 1uLL));
  *(int8x8_t *)v6.i8 = vext_s8(*(int8x8_t *)v5.i8, *(int8x8_t *)v5.i8, 1uLL);
  v5.u64[1] = (unint64_t)vext_s8(*(int8x8_t *)v5.i8, *(int8x8_t *)v5.i8, 2uLL);
  v6.u64[1] = (unint64_t)vext_s8(*(int8x8_t *)v5.i8, *(int8x8_t *)v5.i8, 3uLL);
  *(_QWORD *)&result = vtrn1q_s32(v5, v6).u64[0];
  return result;
}

double sub_215FD99D4(uint64_t a1, int a2)
{
  const float *v2;
  __int8 *v3;
  int8x8_t v4;
  int8x8_t v5;
  int8x8_t v6;
  int32x4_t v7;
  int32x4_t v8;
  double result;

  v2 = (const float *)(a1 - a2);
  v3 = (__int8 *)(a1 - 1 - a2);
  v4.i8[0] = *v3;
  v4.i8[1] = *v3;
  v4.i8[2] = *v3;
  v4.i8[3] = v3[4 * a2];
  v4.i8[4] = v3[3 * a2];
  v4.i8[5] = v3[2 * a2];
  v4.i8[6] = *(_BYTE *)(a1 - 1);
  v4.i8[7] = *v3;
  v5 = (int8x8_t)vld1_dup_f32(v2);
  v6 = (int8x8_t)vrhadd_u8(vhadd_u8((uint8x8_t)vext_s8(v4, v5, 3uLL), (uint8x8_t)vext_s8(v4, v5, 5uLL)), (uint8x8_t)vext_s8(v4, v5, 4uLL));
  *(int8x8_t *)v7.i8 = vext_s8(v6, v6, 2uLL);
  *(int8x8_t *)v8.i8 = vext_s8(v6, v6, 3uLL);
  v8.u64[1] = (unint64_t)vext_s8(v6, v6, 1uLL);
  v7.u64[1] = (unint64_t)v6;
  *(_QWORD *)&result = vtrn1q_s32(v8, v7).u64[0];
  return result;
}

double sub_215FD9A4C(uint64_t a1, int a2)
{
  const float *v2;
  int8x8_t v3;
  __int8 *v4;
  uint8x8_t v5;
  uint8x8_t v6;
  int8x8_t v7;
  int32x4_t v8;
  int32x4_t v9;
  double result;

  v2 = (const float *)(a1 - a2);
  v3 = (int8x8_t)vld1_dup_f32(v2);
  v4 = (__int8 *)(a1 - 1 - a2);
  v3.i8[0] = v4[3 * a2];
  v3.i8[1] = v4[2 * a2];
  v3.i8[2] = *(_BYTE *)(a1 - 1);
  v3.i8[3] = *v4;
  v5 = (uint8x8_t)vext_s8(v3, v3, 3uLL);
  v6 = (uint8x8_t)vext_s8(v3, v3, 4uLL);
  v7 = (int8x8_t)vrhadd_u8(vhadd_u8((uint8x8_t)v3, (uint8x8_t)vext_s8(v3, v3, 2uLL)), (uint8x8_t)vext_s8(v3, v3, 1uLL));
  *(uint8x8_t *)v8.i8 = vrhadd_u8(v5, v6);
  *(int8x8_t *)v9.i8 = vext_s8(v7, v7, 2uLL);
  v8.u64[1] = (unint64_t)vext_s8(vdup_lane_s8(v7, 1), *(int8x8_t *)v8.i8, 7uLL);
  v9.u64[1] = (unint64_t)vext_s8(vdup_lane_s8(v7, 0), *(int8x8_t *)v9.i8, 7uLL);
  *(_QWORD *)&result = vtrn1q_s32(v8, v9).u64[0];
  return result;
}

double sub_215FD9ABC(uint64_t a1, int a2)
{
  __int8 *v2;
  int8x8_t v3;
  const float *v4;
  int8x8_t v5;
  uint8x8_t v6;
  uint8x8_t v7;
  int32x2_t v8;
  int8x8_t v9;
  int32x2_t v10;
  int32x4_t v11;
  int32x4_t v12;
  double result;

  v2 = (__int8 *)(a1 - 1 - a2);
  v3.i8[0] = *v2;
  v3.i8[1] = *v2;
  v3.i8[2] = *v2;
  v3.i8[3] = v2[4 * a2];
  v3.i8[4] = v2[3 * a2];
  v3.i8[5] = v2[2 * a2];
  v3.i8[6] = *(_BYTE *)(a1 - 1);
  v4 = (const float *)(a1 - a2);
  v3.i8[7] = v3.i8[0];
  v5 = (int8x8_t)vld1_dup_f32(v4);
  v6 = (uint8x8_t)vext_s8(v3, v5, 3uLL);
  v7 = (uint8x8_t)vext_s8(v3, v5, 4uLL);
  v8 = (int32x2_t)vrhadd_u8(vhadd_u8(v6, (uint8x8_t)vext_s8(v3, v5, 5uLL)), v7);
  v9 = (int8x8_t)vdup_lane_s32(v8, 1);
  v10 = (int32x2_t)vzip1_s8((int8x8_t)vrhadd_u8(v6, v7), (int8x8_t)v8);
  *(int32x2_t *)v11.i8 = vdup_lane_s32(v10, 1);
  *(int8x8_t *)v12.i8 = vext_s8((int8x8_t)v10, v9, 6uLL);
  v12.u64[1] = (unint64_t)vext_s8((int8x8_t)v10, (int8x8_t)v10, 2uLL);
  v11.u64[1] = (unint64_t)v10;
  *(_QWORD *)&result = vtrn1q_s32(v12, v11).u64[0];
  return result;
}

double sub_215FD9B44(uint64_t a1, int a2, int a3)
{
  int32x2_t v3;
  uint8x8_t v4;
  int32x4_t v5;
  int32x4_t v6;
  double result;

  v3 = *(int32x2_t *)(a1 - a2);
  if ((a3 & 0xFF0000) == 0)
    v3 = vzip1_s32(v3, (int32x2_t)vdup_lane_s8((int8x8_t)v3, 3));
  v4 = (uint8x8_t)vext_s8((int8x8_t)v3, (int8x8_t)v3, 1uLL);
  *(uint8x8_t *)v5.i8 = vrhadd_u8(vhadd_u8((uint8x8_t)v3, (uint8x8_t)vext_s8((int8x8_t)v3, (int8x8_t)v3, 2uLL)), v4);
  *(uint8x8_t *)v6.i8 = vrhadd_u8((uint8x8_t)v3, v4);
  v6.u64[1] = (unint64_t)vext_s8(*(int8x8_t *)v6.i8, *(int8x8_t *)v6.i8, 1uLL);
  v5.u64[1] = (unint64_t)vext_s8(*(int8x8_t *)v5.i8, *(int8x8_t *)v6.i8, 1uLL);
  *(_QWORD *)&result = vtrn1q_s32(v6, v5).u64[0];
  return result;
}

double sub_215FD9B88(uint64_t a1, int a2)
{
  uint64_t v2;
  __int8 v3;
  int8x8_t v4;
  int8x8_t v5;
  uint8x8_t v6;
  int8x8_t v7;
  int8x8_t v8;
  int32x4_t v9;
  int32x4_t v10;
  double result;

  v3 = *(_BYTE *)(a1 - 1);
  v2 = a1 - 1;
  v4 = vdup_n_s8(*(unsigned __int8 *)(v2 + 3 * a2));
  v5.i8[0] = *(_BYTE *)(v2 + 3 * a2);
  v5.i8[1] = *(_BYTE *)(v2 + 2 * a2);
  v5.i8[2] = *(_BYTE *)(v2 + a2);
  v5.i8[3] = v3;
  v5.i8[4] = v3;
  v5.i8[5] = v3;
  v5.i8[6] = v3;
  v5.i8[7] = v3;
  v6 = (uint8x8_t)vext_s8(v4, v5, 7uLL);
  v7 = (int8x8_t)vrhadd_u8(vhadd_u8((uint8x8_t)v5, (uint8x8_t)vext_s8(v4, v5, 6uLL)), v6);
  v8 = vdup_lane_s8(v7, 0);
  *(int8x8_t *)v9.i8 = vrev64_s8(vzip1_s8(v7, (int8x8_t)vrhadd_u8((uint8x8_t)v5, v6)));
  *(int8x8_t *)v10.i8 = vext_s8(*(int8x8_t *)v9.i8, *(int8x8_t *)v9.i8, 2uLL);
  v9.u64[1] = (unint64_t)vdup_lane_s32(*(int32x2_t *)v9.i8, 1);
  v10.u64[1] = (unint64_t)v8;
  *(_QWORD *)&result = vtrn1q_s32(v9, v10).u64[0];
  return result;
}

char *sub_215FD9BFC(uint64_t a1, unsigned int a2, int a3, int a4, unsigned int a5, _WORD *a6, unsigned int a7, uint64_t a8, char a9)
{
  unsigned int v10;
  int v16;
  char *result;
  char **v18;
  char **v19;
  char **v20;
  char **v21;
  char *v22;
  uint64_t v23;
  char *v24;
  _WORD *v25;
  unsigned __int16 *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;

  v10 = a7;
  v16 = 4 * *(_DWORD *)(a1 + 16);
  result = (char *)sub_2160CE3E8(*(_QWORD *)(*(_QWORD *)a1 + 8 * a5), a7);
  *(_QWORD *)(*(_QWORD *)(a1 + 104) + 8 * a2) = result;
  if (v10 == 1)
  {
    *(_WORD *)result = *a6;
    *((_WORD *)result + 1) = a6[1];
    *((_WORD *)result + 2) = a6[2];
    *((_WORD *)result + 3) = a6[3];
    *((_WORD *)result + 4) = a6[4];
    *((_WORD *)result + 5) = a6[5];
    *((_WORD *)result + 6) = a6[6];
    *((_WORD *)result + 7) = a6[7];
    v18 = (char **)(a8 + 8 * (4 * a3) + 8 * (4 * a4 * v16));
    *v18 = result;
    v18[1] = result;
    v18[2] = result;
    v18[3] = result;
    v19 = &v18[4 * *(_DWORD *)(a1 + 16)];
    *v19 = result;
    v19[1] = result;
    v19[2] = result;
    v19[3] = result;
    v20 = &v19[4 * *(_DWORD *)(a1 + 16)];
    *v20 = result;
    v20[1] = result;
    v20[2] = result;
    v20[3] = result;
    v21 = &v20[4 * *(_DWORD *)(a1 + 16)];
    *v21 = result;
    v21[1] = result;
    v21[2] = result;
    v22 = result;
  }
  else
  {
    if ((int)(v10 - 1) >= 0)
    {
      v23 = (16 * (v10 - 1)) | 8;
      v24 = &result[v23];
      v25 = (_WORD *)((char *)a6 + v23);
      do
      {
        *((_WORD *)v24 - 4) = *(v25 - 4);
        *((_WORD *)v24 - 3) = *(v25 - 3);
        *((_WORD *)v24 - 2) = *(v25 - 2);
        *((_WORD *)v24 - 1) = *(v25 - 1);
        *(_WORD *)v24 = *v25;
        *((_WORD *)v24 + 1) = v25[1];
        *((_WORD *)v24 + 2) = v25[2];
        *((_WORD *)v24 + 3) = v25[3];
        v24 -= 16;
        v25 -= 8;
        --v10;
      }
      while (v10);
    }
    v26 = &word_254E10E30[40 * *((unsigned __int16 *)result + 5)];
    v27 = (_QWORD *)(a8 + 8 * (4 * a3) + 8 * (4 * a4 * v16));
    *v27 = &result[v26[8] & 0xF0];
    v27[1] = &result[*((_BYTE *)v26 + 17) & 0xF0];
    v27[2] = &result[v26[9] & 0xF0];
    v27[3] = &result[*((_BYTE *)v26 + 19) & 0xF0];
    v28 = &v27[4 * *(_DWORD *)(a1 + 16)];
    *v28 = &result[v26[10] & 0xF0];
    v28[1] = &result[*((_BYTE *)v26 + 21) & 0xF0];
    v28[2] = &result[v26[11] & 0xF0];
    v28[3] = &result[*((_BYTE *)v26 + 23) & 0xF0];
    v29 = &v28[4 * *(_DWORD *)(a1 + 16)];
    *v29 = &result[v26[12] & 0xF0];
    v29[1] = &result[*((_BYTE *)v26 + 25) & 0xF0];
    v29[2] = &result[v26[13] & 0xF0];
    v29[3] = &result[*((_BYTE *)v26 + 27) & 0xF0];
    v21 = (char **)&v29[4 * *(_DWORD *)(a1 + 16)];
    *v21 = &result[v26[14] & 0xF0];
    v21[1] = &result[*((_BYTE *)v26 + 29) & 0xF0];
    v21[2] = &result[v26[15] & 0xF0];
    v22 = &result[*((_BYTE *)v26 + 31) & 0xF0];
  }
  v21[3] = v22;
  result[14] = a9;
  return result;
}

uint64_t sub_215FD9ED0(uint64_t a1, uint64_t a2, int8x16_t *a3, unsigned int a4, int8x16_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int v18;
  size_t v19;
  int v20;
  unsigned int v21;
  int v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  int v29;

  v14 = *(_QWORD *)(a1 + 40);
  v16 = *(_DWORD *)(a1 + 132);
  v15 = *(unsigned int *)(a1 + 136);
  v17 = *(unsigned int *)(a1 + 152);
  v18 = *(_DWORD *)(a2 + 28);
  if ((int)v16 >= (int)v18)
    v19 = v18;
  else
    v19 = v16;
  v20 = *(_DWORD *)(a2 + 44);
  if (*(_DWORD *)(a1 + 100) >= *(_DWORD *)(a2 + 40))
    v21 = *(_DWORD *)(a2 + 40);
  else
    v21 = *(_DWORD *)(a1 + 100);
  v22 = *(_DWORD *)(a2 + 52);
  result = *(_QWORD *)(a1 + 32) + (v20 + v22 * v15);
  v24 = v14 + v20 + ((v22 * v17) >> 1);
  if (*(_BYTE *)a1 && *(_BYTE *)(a1 + 3))
  {
    v25 = a4;
    if (!*(_BYTE *)(a1 + 5))
      v25 = 0;
    a3 = (int8x16_t *)((char *)a3 + v25);
    if (*(_BYTE *)(a1 + 5))
      v26 = v15;
    else
      v26 = 0;
    result += v26;
    a4 <<= a10;
    if (*(_BYTE *)(a1 + 5))
      v27 = v17;
    else
      v27 = 0;
    v24 += v27;
    LODWORD(v15) = 2 * v15;
    LODWORD(v17) = 2 * v17;
  }
  v28 = (v19 & 0xF) == 0;
  if ((result & 0xF) != 0)
    v28 = 0;
  if ((v15 & 0xF) != 0)
    v28 = 0;
  if ((v24 & 0xF) != 0)
    v28 = 0;
  if ((v17 & 0xF) != 0)
    v28 = 0;
  if ((a3 & 0xF) != 0)
    v28 = 0;
  if ((a4 & 0xF) != 0)
    v28 = 0;
  if (v15 >= v19 && v17 <= v15 && a4 >= v19)
  {
    if (a8)
    {
      if (v28)
        return sub_215FCE9DC(result, v24, v19, 0, v21, v15, v17, (uint64_t)a3, a5, a4, a8);
      else
        return sub_2160C5630(result, v24, v19, 0, v21, v15, v17, a3, a4, a8);
    }
    else
    {
      v29 = *(_DWORD *)(a2 + 20);
      if (v28)
      {
        if (v29 == 875704438)
        {
          return sub_215FCEC48(result, v24, v19, 0, v21, v15, v17, (uint64_t)a3, *(_QWORD *)(a2 + 176), a4, *(_DWORD *)(a2 + 184));
        }
        else if (*(_DWORD *)(a2 + 136))
        {
          return sub_215FCE6A4(result, v24, v19, 0, v21, v15, v17, a3, a4);
        }
        else
        {
          return sub_215FCE90C(result, v24, v19, 0, v21, v15, v17, (uint64_t)a3, a4);
        }
      }
      else if (v29 == 875704438)
      {
        return (uint64_t)sub_2160C51D8((char *)result, v24, v19, 0, v21, v15, v17, a3->i8, *(char **)(a2 + 176), a4, *(_DWORD *)(a2 + 184));
      }
      else if (*(_DWORD *)(a2 + 136))
      {
        return sub_2160C53A4(result, v24, v19, 0, v21, v15, v17, a3, a4);
      }
      else
      {
        return sub_2160C52B4(result, v24, v19, 0, v21, v15, v17, a3, a4);
      }
    }
  }
  return result;
}

uint64_t sub_215FDA0B8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  int v17;
  int v18;
  int v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  int v26;

  v13 = *(_QWORD *)(a1 + 40);
  v14 = *(unsigned int *)(a1 + 136);
  v15 = *(unsigned int *)(a1 + 152);
  if (*(_DWORD *)(a1 + 132) >= *(_DWORD *)(a2 + 28))
    v16 = *(_DWORD *)(a2 + 28);
  else
    v16 = *(_DWORD *)(a1 + 132);
  v17 = *(_DWORD *)(a2 + 44);
  if (*(_DWORD *)(a1 + 100) >= *(_DWORD *)(a2 + 40))
    v18 = *(_DWORD *)(a2 + 40);
  else
    v18 = *(_DWORD *)(a1 + 100);
  v19 = *(_DWORD *)(a2 + 52);
  result = *(_QWORD *)(a1 + 32) + (v17 + v19 * v14);
  v21 = v13 + v17 + ((v19 * v15) >> 1);
  if (*(_BYTE *)a1 && *(_BYTE *)(a1 + 3))
  {
    v22 = a4;
    if (!*(_BYTE *)(a1 + 5))
      v22 = 0;
    a3 += v22;
    if (*(_BYTE *)(a1 + 5))
      v23 = v14;
    else
      v23 = 0;
    result += v23;
    a4 <<= a9;
    if (*(_BYTE *)(a1 + 5))
      v24 = v15;
    else
      v24 = 0;
    v21 += v24;
    LODWORD(v14) = 2 * v14;
    LODWORD(v15) = 2 * v15;
  }
  v25 = (v16 & 0xF) == 0;
  if ((result & 0xF) != 0)
    v25 = 0;
  if ((v14 & 0xF) != 0)
    v25 = 0;
  if ((v21 & 0xF) != 0)
    v25 = 0;
  if ((v15 & 0xF) != 0)
    v25 = 0;
  if ((a3 & 0xF) != 0)
    v25 = 0;
  if ((a4 & 0xF) != 0)
    v25 = 0;
  if (v14 >= v16 && v15 <= v14 && a4 >= v16)
  {
    if (a7)
    {
      if (v25)
        return sub_215FCDDA4(result, v21, v16, 0, v18, v14, v15, a3, a4, a7);
      else
        return sub_2160C4D68(result, v21, v16, 0, v18, v14, v15, (_BYTE *)a3, a4, a7);
    }
    else if (v25)
    {
      v26 = 0;
      if (*(_DWORD *)(a2 + 20) == 875704438)
        return sub_215FCE134(result, v21, v16, 0, v18, v14, v15, a3, *(_QWORD *)(a2 + 176), a4, *(_DWORD *)(a2 + 184), 0, &v26);
      else
        return sub_215FCDBEC(result, v21, v16, 0, v18, v14, v15, a3, a4, 0, &v26);
    }
    else
    {
      return sub_2160C4B3C(result, v21, v16, 0, v18, v14, v15, (_BYTE *)a3, a4);
    }
  }
  return result;
}

uint64_t sub_215FDA254(uint64_t result, int a2, int a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  _OWORD *v11;
  _OWORD *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  BOOL v17;
  int v18;
  int v19;
  int v20;
  _OWORD *v21;
  _OWORD *v22;
  int v23;
  uint64_t v24;
  int v25;
  BOOL v26;

  if ((int)result <= a2)
  {
    do
    {
      v5 = (int)result / a3;
      v6 = (int)result % a3;
      v7 = *(_DWORD *)(a4 + 136);
      v8 = *(_DWORD *)(a5 + 136);
      v9 = 16 * ((int)result / a3);
      if (*(_BYTE *)a5)
      {
        if (*(_BYTE *)a4)
          v10 = 32 * v5;
        else
          v10 = 16 * ((int)result / a3);
        v11 = (_OWORD *)(*(_QWORD *)(a4 + 32)
                       + 16 * v6
                       + (v10 * v7)
                       + v7 * (unint64_t)*(unsigned __int8 *)(a4 + 5));
        v12 = (_OWORD *)(*(_QWORD *)(a5 + 32)
                       + 16 * v6
                       + (32 * v5 * v8)
                       + v8 * (unint64_t)*(unsigned __int8 *)(a5 + 5));
        v7 *= 2;
        v13 = 2 * v8;
      }
      else
      {
        v11 = (_OWORD *)(*(_QWORD *)(a4 + 32) + 16 * v6 + (v9 * v7));
        v12 = (_OWORD *)(*(_QWORD *)(a5 + 32) + 16 * v6 + (v8 * v9));
        v13 = *(_DWORD *)(a5 + 136);
      }
      v14 = v7;
      v15 = v13;
      v16 = -16;
      do
      {
        *v12 = *v11;
        v11 = (_OWORD *)((char *)v11 + v14);
        v12 = (_OWORD *)((char *)v12 + v15);
        v17 = __CFADD__(v16++, 1);
      }
      while (!v17);
      v18 = *(_DWORD *)(a4 + 152);
      v19 = *(_DWORD *)(a5 + 152);
      if (*(_BYTE *)a5)
      {
        v20 = 8 * v5;
        if (*(_BYTE *)a4)
          v20 = 16 * ((int)result / a3);
        v21 = (_OWORD *)(*(_QWORD *)(a4 + 40)
                       + 16 * v6
                       + (v20 * v18)
                       + v18 * (unint64_t)*(unsigned __int8 *)(a4 + 5));
        v22 = (_OWORD *)(*(_QWORD *)(a5 + 40)
                       + 16 * v6
                       + (v9 * v19)
                       + v19 * (unint64_t)*(unsigned __int8 *)(a5 + 5));
        v18 *= 2;
        v19 *= 2;
      }
      else
      {
        v23 = 8 * v5;
        v21 = (_OWORD *)(*(_QWORD *)(a4 + 40) + 16 * v6 + (v18 * 8 * v5));
        v22 = (_OWORD *)(*(_QWORD *)(a5 + 40) + 16 * v6 + (v19 * v23));
      }
      v24 = v18;
      v25 = -8;
      do
      {
        *v22 = *v21;
        v21 = (_OWORD *)((char *)v21 + v24);
        v22 = (_OWORD *)((char *)v22 + v19);
        v17 = __CFADD__(v25++, 1);
      }
      while (!v17);
      v26 = (_DWORD)result == a2;
      result = (result + 1);
    }
    while (!v26);
  }
  return result;
}

uint64_t sub_215FDA3D4(uint64_t result, int a2, int a3, uint64_t a4)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  _QWORD *v15;
  int v16;
  BOOL v17;

  if ((int)result <= a2)
  {
    do
    {
      v4 = (int)result / a3;
      v5 = *(_DWORD *)(a4 + 136);
      v6 = 16 * ((int)result % a3);
      v7 = *(_QWORD *)(a4 + 32) + v6;
      if (*(_BYTE *)a4)
      {
        v8 = (_QWORD *)(v7 + (32 * v4 * v5) + v5 * (unint64_t)*(unsigned __int8 *)(a4 + 5));
        v9 = 2 * v5;
      }
      else
      {
        v8 = (_QWORD *)(v7 + (16 * v4 * v5));
        v9 = *(_DWORD *)(a4 + 136);
      }
      v10 = v6;
      v11 = v9;
      v12 = 16;
      do
      {
        *v8 = 0x8080808080808080;
        v8[1] = 0x8080808080808080;
        v8 = (_QWORD *)((char *)v8 + v11);
        --v12;
      }
      while (v12);
      v13 = *(_DWORD *)(a4 + 152);
      v14 = *(_QWORD *)(a4 + 40) + v10;
      if (*(_BYTE *)a4)
      {
        v15 = (_QWORD *)(v14 + (16 * v4 * v13) + v13 * (unint64_t)*(unsigned __int8 *)(a4 + 5));
        v13 *= 2;
      }
      else
      {
        v15 = (_QWORD *)(v14 + (8 * v4 * v13));
      }
      v16 = 8;
      do
      {
        *v15 = 0x8080808080808080;
        v15[1] = 0x8080808080808080;
        v15 = (_QWORD *)((char *)v15 + v13);
        --v16;
      }
      while (v16);
      v17 = (_DWORD)result == a2;
      result = (result + 1);
    }
    while (!v17);
  }
  return result;
}

uint64_t sub_215FDA4B8(uint64_t result)
{
  int v1;
  int v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int i;
  _QWORD *v7;
  int v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int j;
  _QWORD *v14;

  v1 = *(_DWORD *)(result + 100);
  if (v1)
  {
    v2 = 0;
    v3 = *(_QWORD *)(result + 32);
    v4 = *(_DWORD *)(result + 132);
    v5 = *(unsigned int *)(result + 136);
    do
    {
      if (v4)
      {
        for (i = 0; i < v4; i += 16)
        {
          v7 = (_QWORD *)(v3 + i);
          *v7 = 0x8080808080808080;
          v7[1] = 0x8080808080808080;
        }
      }
      v3 += v5;
      ++v2;
    }
    while (v2 != v1);
  }
  v8 = *(_DWORD *)(result + 116);
  if (v8)
  {
    v9 = 0;
    v10 = *(_QWORD *)(result + 40);
    v11 = *(_DWORD *)(result + 148);
    v12 = *(unsigned int *)(result + 152);
    do
    {
      if (v11)
      {
        for (j = 0; j < v11; j += 16)
        {
          v14 = (_QWORD *)(v10 + j);
          *v14 = 0x8080808080808080;
          v14[1] = 0x8080808080808080;
        }
      }
      v10 += v12;
      ++v9;
    }
    while (v9 != v8);
  }
  return result;
}

_DWORD *sub_215FDA544(_DWORD *result, void **a2, unsigned int a3)
{
  int v3;
  char *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;

  v3 = result[25];
  if (v3)
  {
    v4 = (char *)*a2;
    v5 = result[33];
    v6 = result[34];
    v7 = a3;
    v8 = (char *)*((_QWORD *)result + 6);
    do
    {
      result = memcpy(v4, v8, v5);
      v8 += v6;
      v4 += v7;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_215FDA5A4(int a1, unsigned int a2, uint64_t a3, int a4, int a5)
{
  int v9;
  unsigned int v10;
  int v11;
  char v12;
  unint64_t v13;
  void *v14;
  void *v15;
  unsigned int v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  int v27;
  int32x2_t v28;
  int v29;
  int v30;
  int v31;
  int32x2_t v32;
  int v33;
  void *v34;
  void *v35;
  void *v36;

  v9 = (-a1 & 0xF) + a1;
  v10 = (-a2 & 0xF) + a2;
  v11 = v9 + 64;
  v12 = (a4 - 3) < 2;
  v13 = ((v10 + 80 + (v10 >> 1) + 64) * (v9 + 64)) << v12;
  *(_DWORD *)(a3 + 24) = v13;
  v14 = sub_2160CB5FC((void *)v13);
  *(_QWORD *)(a3 + 8) = v14;
  if (!v14)
    goto LABEL_14;
  v15 = sub_2160CB5FC((void *)v13);
  *(_QWORD *)(a3 + 16) = v15;
  if (!v15)
    goto LABEL_14;
  *(_OWORD *)(a3 + 352) = 0u;
  *(_OWORD *)(a3 + 368) = 0u;
  v16 = ((v10 + 80) * v11) << v12;
  *(_OWORD *)(a3 + 320) = 0u;
  *(_OWORD *)(a3 + 336) = 0u;
  *(_OWORD *)(a3 + 288) = 0u;
  *(_OWORD *)(a3 + 304) = 0u;
  *(_OWORD *)(a3 + 256) = 0u;
  *(_OWORD *)(a3 + 272) = 0u;
  *(_OWORD *)(a3 + 224) = 0u;
  *(_OWORD *)(a3 + 240) = 0u;
  *(_OWORD *)(a3 + 192) = 0u;
  *(_OWORD *)(a3 + 208) = 0u;
  *(_OWORD *)(a3 + 160) = 0u;
  *(_OWORD *)(a3 + 176) = 0u;
  v17 = sub_2160CB5FC((void *)(2 * v16));
  *(_QWORD *)(a3 + 160) = v17;
  if (!v17)
    goto LABEL_14;
  *(_DWORD *)(a3 + 288) = -1;
  *(_QWORD *)(a3 + 280) = 0;
  v18 = (40 * v11);
  v19 = (v18 + 32);
  v20 = *(_QWORD *)(a3 + 8);
  v21 = *(_QWORD *)(a3 + 16);
  v22 = v20 + v19;
  v23 = v20 + v16 + v18 + 32;
  *(_QWORD *)(a3 + 32) = v22;
  *(_QWORD *)(a3 + 40) = v23;
  *(_QWORD *)(a3 + 64) = v21 + v19;
  *(_QWORD *)(a3 + 72) = v21 + v16 + v18 + 32;
  *(_QWORD *)(a3 + 80) = v22;
  *(_QWORD *)(a3 + 88) = v23;
  *(_QWORD *)(a3 + 48) = v22;
  *(_QWORD *)(a3 + 56) = v23;
  *(_DWORD *)(a3 + 128) = a1;
  *(_DWORD *)(a3 + 132) = v9;
  *(_DWORD *)(a3 + 136) = v11;
  *(_DWORD *)(a3 + 144) = (a1 & 1) + a1;
  *(_DWORD *)(a3 + 148) = v9;
  *(_DWORD *)(a3 + 152) = v11;
  *(_DWORD *)(a3 + 96) = a2;
  *(_DWORD *)(a3 + 100) = v10;
  *(_DWORD *)(a3 + 112) = a2 >> 1;
  *(_DWORD *)(a3 + 116) = v10 >> 1;
  v24 = sub_2160DDB20(a3, a4, a5);
  *(_QWORD *)(a3 + 384) = v24;
  if (!v24)
    goto LABEL_14;
  *((_DWORD *)v24 + 11) = 0;
  if (a4 == 4)
  {
    v25 = sub_2160DDB20(a3, 4, a5);
    *(_QWORD *)(a3 + 392) = v25;
    if (!v25)
      goto LABEL_14;
    *((_DWORD *)v25 + 11) = 2;
    v26 = sub_2160DDB20(a3, 4, a5);
    *(_QWORD *)(a3 + 400) = v26;
    if (!v26)
      goto LABEL_14;
    *((_DWORD *)v26 + 11) = 1;
  }
  else
  {
    *(_QWORD *)(a3 + 392) = 0;
    *(_QWORD *)(a3 + 400) = 0;
  }
  v27 = 4 * v11 + 4;
  *(_QWORD *)(a3 + 408) = 0x400000000;
  *(_DWORD *)(a3 + 416) = 4 * v11;
  *(_DWORD *)(a3 + 420) = v27;
  *(_QWORD *)(a3 + 424) = 0xC00000008;
  *(int32x2_t *)(a3 + 432) = vadd_s32(vdup_n_s32(4 * v11), (int32x2_t)0xC00000008);
  *(_DWORD *)(a3 + 448) = 12 * v11;
  *(_QWORD *)(a3 + 472) = 0x400000000;
  *(_QWORD *)(a3 + 488) = 0xC00000008;
  *(_DWORD *)(a3 + 504) = 16 * v11;
  *(_DWORD *)(a3 + 508) = (16 * v11) | 4;
  *(_DWORD *)(a3 + 512) = 24 * v11;
  v28 = (int32x2_t)vorr_s8((int8x8_t)vdup_n_s32(16 * v11), (int8x8_t)0xC00000008);
  *(int32x2_t *)(a3 + 520) = v28;
  v29 = 8 * v11 + 8;
  *(_DWORD *)(a3 + 440) = 8 * v11;
  v30 = (8 * v11) | 4;
  *(_DWORD *)(a3 + 444) = v30;
  *(_DWORD *)(a3 + 452) = v27 + 8 * v11;
  *(_DWORD *)(a3 + 456) = v29;
  v31 = 8 * v11 + 12;
  *(_DWORD *)(a3 + 460) = v31;
  *(_DWORD *)(a3 + 464) = v29 + 4 * v11;
  *(_DWORD *)(a3 + 468) = v29 + v27;
  *(_DWORD *)(a3 + 480) = 8 * v11;
  *(_DWORD *)(a3 + 484) = v30;
  *(_DWORD *)(a3 + 496) = v29;
  *(_DWORD *)(a3 + 500) = v31;
  *(_DWORD *)(a3 + 516) = v30 + 16 * v11;
  v32.i32[0] = 8 * v11;
  v32.i32[1] = v30;
  *(int32x2_t *)(a3 + 528) = vadd_s32(vdup_lane_s32(v28, 0), v32);
  *(_OWORD *)(a3 + 544) = xmmword_2160EE7B0;
  *(_DWORD *)(a3 + 560) = v9 + 2;
  *(_DWORD *)(a3 + 564) = v9 - 1;
  *(_DWORD *)(a3 + 568) = v10 + 2;
  *(_DWORD *)(a3 + 572) = v10 - 1;
  *(_DWORD *)(a3 + 576) = v9 + 2;
  *(_DWORD *)(a3 + 580) = v9 - 1;
  *(_DWORD *)(a3 + 584) = v10 + 2;
  *(_DWORD *)(a3 + 588) = v10 - 1;
  sub_215FE4E04(a3 + 592, v9 + 64);
  v33 = *(_DWORD *)(a3 + 116);
  v34 = sub_2160CB5D4((((unint64_t)*(unsigned int *)(a3 + 148) >> 3) & 0x1FFFFFFE) + 4);
  *(_QWORD *)(a3 + 1096) = v34;
  if (v34)
  {
    v35 = sub_2160CB5D4(4 * ((v33 << v12) + 19));
    *(_QWORD *)(a3 + 1104) = v35;
    if (v35)
    {
      v36 = sub_2160CB5D4(4 * (v33 + 19));
      *(_QWORD *)(a3 + 1112) = v36;
      if (v36)
      {
        sub_215FE4E70(a3, v9 + 64);
        return 0;
      }
    }
  }
LABEL_14:
  sub_215FDA8F8(a3);
  return 4294967188;
}

void sub_215FDA8F8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  if (a1)
  {
    j__free(*(void **)(a1 + 160));
    j__free(*(void **)(a1 + 8));
    *(_QWORD *)(a1 + 8) = 0;
    j__free(*(void **)(a1 + 16));
    *(_QWORD *)(a1 + 16) = 0;
    v2 = *(void **)(a1 + 384);
    if (v2)
    {
      sub_2160DDBD0((uint64_t)v2);
      v2 = *(void **)(a1 + 384);
    }
    j__free(v2);
    *(_QWORD *)(a1 + 384) = 0;
    v3 = *(_QWORD *)(a1 + 392);
    if (v3)
      sub_2160DDBD0(v3);
    v4 = *(_QWORD *)(a1 + 400);
    if (v4)
      sub_2160DDBD0(v4);
    j__free(*(void **)(a1 + 392));
    j__free(*(void **)(a1 + 400));
    *(_OWORD *)(a1 + 392) = 0u;
    j__free(*(void **)(a1 + 1096));
    j__free(*(void **)(a1 + 1104));
    *(_OWORD *)(a1 + 1096) = 0u;
    j__free(*(void **)(a1 + 1112));
    *(_QWORD *)(a1 + 1112) = 0;
  }
}

uint64_t sub_215FDA9B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int32x4_t *v3;
  int v4;
  int8x16_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  int v21;
  _OWORD *v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  __int16 *v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  char v45;
  char v46;
  uint64_t v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  int32x4_t *v51;
  unsigned __int32 v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int32 v59;
  __int32 v60;
  int32x4_t v61;
  int32x4_t v62;
  int8x16_t v63;
  int8x16_t v64;
  int8x16_t v65;
  int8x16_t v66;
  int32x4_t v67;
  int32x4_t v68;
  int v69;
  unsigned int v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  int32x4_t v80;
  __n128 v81;
  unsigned int v82;
  int8x8_t *v83;
  uint64_t v84;
  int v85;
  unsigned int v86;
  int v87;
  uint64_t v88;
  unsigned int v89;
  unsigned int v90;
  uint8x16_t *v91;
  uint8x16_t *v92;
  uint8x16_t v93;
  uint8x16_t v94;
  uint8x16_t v95;
  uint8x16_t *v96;
  uint8x16_t *v97;
  uint8x16_t v98;
  uint8x16_t v99;
  uint8x16_t v100;
  uint8x16_t v101;
  uint64_t v102;
  unsigned int v103;
  int8x16_t v104;
  int16x8_t v105;
  int16x8_t v106;
  int8x8_t v107;
  uint64_t v108;
  unsigned int v109;
  uint64_t v110;
  int8x16_t v111;
  int16x8_t v112;
  int16x8_t v113;
  int8x8_t v114;
  uint64_t v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  int32x4_t *v124;
  int v125;
  uint64_t v126;
  _QWORD *v127;
  _QWORD *v128;
  int32x4_t v129;
  uint64_t v130;
  int8x16_t v131;
  uint64_t v132;
  int8x16_t v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int32x4_t *v143;
  uint64_t v144;
  int v145;
  int v146;
  int32x4_t v147;
  _OWORD v148[2];
  _QWORD v149[2];
  _DWORD v150[2];
  _OWORD v151[112];
  _OWORD v152[112];
  _QWORD v153[4];
  _QWORD v154[4];
  _BYTE v155[128];
  _BYTE v156[128];
  uint64_t v157;
  _BYTE v158[240];
  uint64_t v159;
  _BYTE v160[240];
  _DWORD v161[2];
  _DWORD v162[2];
  uint64_t v163;

  v0 = MEMORY[0x24BDAC7A8]();
  v116 = v1;
  v117 = v2;
  v3 = (int32x4_t *)v0;
  v163 = *MEMORY[0x24BDAC8D0];
  v4 = *(_DWORD *)(v0 + 4);
  v5 = *(int8x16_t **)(v0 + 216);
  v6 = (16 * *(_DWORD *)v0);
  v7 = v5[10].u32[2];
  v8 = v5[4].i64[0] + v6 + (16 * v4 * v7);
  v9 = v5[11].u32[2];
  v10 = v5[4].i64[1] + v6 + (8 * v4 * v9);
  v143 = (int32x4_t *)v0;
  v144 = *(_QWORD *)(v0 + 48);
  v121 = v9;
  v122 = v10;
  v120 = v8;
  if (*(_BYTE *)(v144 + 272))
  {
    v130 = v5[10].u32[2];
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v132 = v0 + 224;
    v139 = 16 * *(unsigned __int8 *)(v144 + 272);
    v141 = *(_QWORD *)(*(_QWORD *)(v0 + 176) + 112);
    v14 = v144 + 24;
    v15 = 24;
    while (1)
    {
      v16 = (unsigned __int8 *)(v14 + v11);
      v17 = *(unsigned __int8 *)(v14 + v11 + 7);
      v18 = *(unsigned __int16 *)(v144 + 26);
      if (v18 >= 0x103)
        v18 = 259;
      v19 = word_254E10E30[40 * v18 + v15];
      v20 = *((unsigned __int8 *)&word_254E10E30[40 * v18 + 4] + v15);
      v21 = byte_2160EE5C0[v20];
      v146 = byte_2160EE5D0[v20];
      if (v17 == 6)
        break;
      v35 = (v17 - 4);
      v22 = &v152[7 * v12];
      v136 = v19;
      v36 = v12 + 1;
      v37 = v13;
      v38 = *(unsigned __int8 *)(v14 + v35 + v11);
      v39 = (__int16 *)(v141 + 4 * v35 + v11);
      v40 = *v39;
      *((_DWORD *)v22 + 4) = v40;
      LODWORD(v39) = v39[1];
      *((_DWORD *)v22 + 5) = (_DWORD)v39;
      v41 = *(_QWORD *)(v132 + 8 * v35);
      *((_QWORD *)v22 + 5) = *(_QWORD *)(v41 + 8 * v38);
      *((_DWORD *)v22 + 6) = v40;
      *((_DWORD *)v22 + 7) = (_DWORD)v39;
      sub_2160DDB74(*(pthread_mutex_t **)(*(_QWORD *)(v41 + 8 * v38) + 416));
      v28 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v132 + 8 * v35) + 8 * v38) + 416);
      *((_DWORD *)v22 + 8) = v17;
      *((_DWORD *)v22 + 9) = v38;
      v13 = v37;
      v12 = v36;
      v19 = v136;
      v34 = v146;
      if (*(_DWORD *)(v28 + 64))
        goto LABEL_11;
LABEL_12:
      *(_DWORD *)v22 = v21;
      *((_DWORD *)v22 + 1) = v34;
      *((_DWORD *)v22 + 2) = v19;
      *((_DWORD *)v22 + 3) = v19 >> 8;
      v11 += 16;
      ++v15;
      v14 = v144 + 24;
      if (v139 == v11)
      {
        v3 = v143;
        v5 = (int8x16_t *)v143[13].i64[1];
        v9 = v121;
        v10 = v122;
        v8 = v120;
        v7 = v130;
        goto LABEL_15;
      }
    }
    v22 = &v151[7 * v13];
    v23 = *v16;
    v24 = *(__int16 *)(v141 + v11);
    *((_DWORD *)v22 + 4) = v24;
    v25 = *(__int16 *)(v141 + v11 + 2);
    *((_DWORD *)v22 + 5) = v25;
    v26 = v143[14].i64[0];
    *((_QWORD *)v22 + 5) = *(_QWORD *)(v26 + 8 * v23);
    *((_DWORD *)v22 + 6) = v24;
    *((_DWORD *)v22 + 7) = v25;
    *((_DWORD *)v22 + 8) = 6;
    *((_DWORD *)v22 + 9) = v23;
    sub_2160DDB74(*(pthread_mutex_t **)(*(_QWORD *)(v26 + 8 * v23) + 416));
    v27 = v143[14].i64[1];
    v28 = *(_QWORD *)(*(_QWORD *)(v143[14].i64[0] + 8 * v23) + 416);
    v29 = *(_DWORD *)(v28 + 64);
    v30 = v16[1];
    v31 = *(__int16 *)(v141 + v11 + 4);
    *((_DWORD *)v22 + 16) = v31;
    v32 = *(__int16 *)(v141 + v11 + 6);
    *((_DWORD *)v22 + 17) = v32;
    *((_QWORD *)v22 + 11) = *(_QWORD *)(v27 + 8 * v30);
    *((_DWORD *)v22 + 18) = v31;
    *((_DWORD *)v22 + 19) = v32;
    *((_DWORD *)v22 + 20) = 6;
    *((_DWORD *)v22 + 21) = v30;
    sub_2160DDB74(*(pthread_mutex_t **)(*(_QWORD *)(v27 + 8 * v30) + 416));
    v33 = *(_QWORD *)(*(_QWORD *)(v143[14].i64[1] + 8 * v30) + 416);
    if (*(_DWORD *)(v33 + 64))
      sub_2160DDC10((pthread_mutex_t *)v33);
    v13 = (v13 + 1);
    v34 = v146;
    if (!v29)
      goto LABEL_12;
LABEL_11:
    sub_2160DDC10((pthread_mutex_t *)v28);
    goto LABEL_12;
  }
  LODWORD(v13) = 0;
  v12 = 0;
LABEL_15:
  v137 = 0;
  v42 = 0;
  v145 = 0;
  v150[0] = v13;
  v150[1] = v12;
  v149[0] = v151;
  v149[1] = v152;
  v131 = v5[37];
  v133 = v5[36];
  v129 = vshlq_n_s32(*v3, 4uLL);
  v162[0] = 16;
  v162[1] = v7;
  v43 = v8 + v7;
  v161[0] = 16;
  v161[1] = v9;
  v44 = 2 * v7;
  v45 = 1;
  v154[0] = &v159;
  v154[1] = &v157;
  v126 = 2;
  v154[2] = v8;
  v153[0] = v156;
  v153[1] = v155;
  v153[2] = v10;
  v119 = v43;
  v118 = v44;
  do
  {
    v46 = v45;
    v125 = v150[v42];
    if (!v125)
      goto LABEL_51;
    v123 = v45;
    v142 = 0;
    v47 = 0;
    v48 = v162[v42];
    v49 = v161[v42];
    v124 = (int32x4_t *)v149[v42];
    v127 = &v153[2 * v42];
    v128 = &v154[2 * v42];
    v134 = v49;
    v135 = v48;
    do
    {
      v138 = v127[v47];
      v140 = v128[v47];
      v50 = v125;
      v51 = v124;
      do
      {
        v53 = v51->u32[0];
        v52 = v51->u32[1];
        v54 = v52 * v48;
        v55 = (_BYTE *)(v140 + v53 + v54);
        v56 = (v52 >> 1) * v49;
        v57 = v51[v142 + 2].i64[1];
        v58 = *(_QWORD *)(v57 + 416);
        v60 = v51[v142 + 1].i32[0];
        v59 = v51[v142 + 1].i32[1];
        v61.i64[0] = 0x100000001;
        v61.i64[1] = 0x100000001;
        v62 = vaddq_s32(vshlq_s32(v51[v142 + 1], v61), vaddq_s32(v129, *v51));
        v63 = (int8x16_t)vzip1q_s32(v62, v62);
        v64 = (int8x16_t)vcgtq_s32((int32x4_t)v63, (int32x4_t)v133);
        v65 = vorrq_s8(vbicq_s8(v133, v64), vandq_s8(v63, v64));
        v66 = (int8x16_t)vcgtq_s32((int32x4_t)v65, (int32x4_t)v131);
        v67 = (int32x4_t)vorrq_s8(vandq_s8(v131, v66), vbicq_s8(v65, v66));
        v65.i64[0] = -1;
        v65.i64[1] = -1;
        v68 = vaddq_s32(*v51, (int32x4_t)v65);
        v148[0] = v67;
        v148[1] = vaddq_s32(v67, vzip2q_s32(v68, v68));
        v69 = v59 & 3;
        v70 = byte_2160EED7C[v59 & 3 | (4 * (v60 & 3))];
        v147 = v67;
        if ((v137 & 1) != 0)
        {
          v71 = v3[3].i64[0];
          if (*(_DWORD *)(v71 + 356))
            v72 = 1;
          else
            v72 = *(_DWORD *)(v71 + 360) == 1;
          v145 = 0;
          LODWORD(v73) = 0;
          LODWORD(v74) = 0;
          if (((v59 | v60) & 1) == 0)
          {
LABEL_31:
            v82 = v70 & 3;
            if (v72)
            {
              sub_215FDEB6C(v58, (int *)v148, v82, v55, v48, v72, v145, (uint64_t)v143, v51, v73 - (_DWORD)v55);
              goto LABEL_35;
            }
            goto LABEL_33;
          }
          goto LABEL_24;
        }
        if (v47 == 1)
        {
          v72 = *(_DWORD *)(v3[3].i64[0] + 360);
          v73 = *v128 + v53 + v54;
          v74 = *v127 + v53 + v56;
          v145 = v72;
          if (((v59 | v60) & 1) == 0)
            goto LABEL_31;
LABEL_24:
          if (v72)
          {
            sub_215FDF60C(v58, (int *)v148, v70, (uint64_t)v55, v48, v72, v145, (uint64_t)v143, v51, v73 - (_DWORD)v55);
            goto LABEL_35;
          }
          goto LABEL_28;
        }
        LODWORD(v74) = 0;
        if (((v59 | v60) & 1) == 0)
        {
          v82 = v70 & 3;
LABEL_33:
          sub_215FDC2F4(v58, (int *)v148, v82);
          goto LABEL_34;
        }
LABEL_28:
        sub_215FDCD68(v58, v148, v70);
LABEL_34:
        v72 = 0;
LABEL_35:
        v83 = (int8x8_t *)(v138 + v53 + v56);
        v84 = v57 + 32;
        v85 = v60 & 3 | (4 * (v147.i8[4] & 1));
        v86 = v69 & 0xFFFFFFFB | (4 * (v147.i8[12] & 1));
        if (v72)
        {
          v87 = v74 - (_DWORD)v83;
          v3 = v143;
          v49 = v134;
          sub_215FE3754(v84, v148, v85, v86, v83, v134, v72, v145, *(double *)v147.i64, v75, v76, v77, v78, v79, v80, v81, (uint64_t)v143, v51, v87,
            v47);
        }
        else
        {
          v49 = v134;
          v3 = v143;
          sub_215FE2560(v84, (uint64_t)v148, v85, v86);
        }
        v51 += 7;
        --v50;
        v48 = v135;
      }
      while (v50);
      ++v47;
      v142 += 3;
    }
    while (v47 != v126);
    v9 = v121;
    v10 = v122;
    v43 = v119;
    v8 = v120;
    v44 = v118;
    v46 = v123;
    if ((v123 & 1) == 0)
      break;
    v88 = 0;
    v89 = 0;
    v90 = 0;
    if (v72)
    {
      v91 = (uint8x16_t *)v158;
      v92 = (uint8x16_t *)v160;
      do
      {
        v94 = v91[-1];
        v93 = *v91;
        if (!v145)
        {
          v94 = vrhaddq_u8(v94, v92[-1]);
          v93 = vrhaddq_u8(v93, *v92);
        }
        v95 = *(uint8x16_t *)&v155[v88];
        if (!v145)
          v95 = vrhaddq_u8(v95, *(uint8x16_t *)&v156[v88]);
        *(uint8x16_t *)(v120 + v90) = v94;
        *(uint8x16_t *)(v119 + v90) = v93;
        *(uint8x16_t *)(v122 + v89) = v95;
        v90 += v118;
        v88 += 16;
        v89 += v121;
        v92 += 2;
        v91 += 2;
      }
      while ((_DWORD)v88 != 128);
    }
    else
    {
      v97 = (uint8x16_t *)v158;
      v96 = (uint8x16_t *)v160;
      do
      {
        v98 = *v96;
        v99 = *v97;
        v100 = *(uint8x16_t *)&v156[v88];
        v101 = *(uint8x16_t *)&v155[v88];
        *(uint8x16_t *)(v120 + v89) = vrhaddq_u8(v96[-1], v97[-1]);
        *(uint8x16_t *)(v119 + v89) = vrhaddq_u8(v98, v99);
        *(uint8x16_t *)(v122 + v90) = vrhaddq_u8(v100, v101);
        v89 += v118;
        v88 += 16;
        v90 += v121;
        v97 += 2;
        v96 += 2;
      }
      while ((_DWORD)v88 != 128);
    }
LABEL_51:
    v45 = 0;
    --v126;
    v137 = 1;
    v42 = 1;
  }
  while ((v46 & 1) != 0);
  if (v116)
  {
    v102 = 0;
    v103 = 0;
    do
    {
      v104 = *(int8x16_t *)(v43 + v103);
      v105 = (int16x8_t)vzip1q_s8(v104, (int8x16_t)0);
      v106 = vaddq_s16(*(int16x8_t *)(v116 + v102 + 48), (int16x8_t)vzip2q_s8(v104, (int8x16_t)0));
      v107 = vqmovun_s16(vaddq_s16(*(int16x8_t *)(v116 + v102 + 32), v105));
      *(int8x16_t *)(v8 + v103) = vqmovun_high_s16(vqmovun_s16(vaddq_s16(*(int16x8_t *)(v116 + v102), (int16x8_t)vzip1q_s8(*(int8x16_t *)(v8 + v103), (int8x16_t)0))), vaddq_s16(*(int16x8_t *)(v116 + v102 + 16), (int16x8_t)vzip2q_s8(*(int8x16_t *)(v8 + v103), (int8x16_t)0)));
      *(int8x16_t *)(v43 + v103) = vqmovun_high_s16(v107, v106);
      v103 += v44;
      v102 += 64;
    }
    while ((_DWORD)v102 != 512);
  }
  if (v117)
  {
    v108 = 0;
    v109 = 0;
    v110 = v10 + v9;
    do
    {
      v111 = *(int8x16_t *)(v110 + v109);
      v112 = (int16x8_t)vzip1q_s8(v111, (int8x16_t)0);
      v113 = vaddq_s16(*(int16x8_t *)(v117 + v108 + 48), (int16x8_t)vzip2q_s8(v111, (int8x16_t)0));
      v114 = vqmovun_s16(vaddq_s16(*(int16x8_t *)(v117 + v108 + 32), v112));
      *(int8x16_t *)(v10 + v109) = vqmovun_high_s16(vqmovun_s16(vaddq_s16(*(int16x8_t *)(v117 + v108), (int16x8_t)vzip1q_s8(*(int8x16_t *)(v10 + v109), (int8x16_t)0))), vaddq_s16(*(int16x8_t *)(v117 + v108 + 16), (int16x8_t)vzip2q_s8(*(int8x16_t *)(v10 + v109), (int8x16_t)0)));
      *(int8x16_t *)(v110 + v109) = vqmovun_high_s16(v114, v113);
      v109 += 2 * v9;
      v108 += 64;
    }
    while ((_DWORD)v108 != 256);
  }
  return 0;
}

uint64_t sub_215FDB200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int32x4_t *v3;
  int v4;
  int32x4_t *v5;
  uint64_t v6;
  uint64_t v7;
  __int32 v8;
  uint64_t v9;
  __int32 v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  int v31;
  int v32;
  _OWORD *v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  __int16 *v41;
  int v42;
  int v43;
  uint64_t v44;
  int v45;
  pthread_mutex_t **v46;
  uint64_t v47;
  __int16 *v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  uint64_t v58;
  int v59;
  pthread_mutex_t **v60;
  pthread_mutex_t *v61;
  uint64_t v62;
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  int v68;
  pthread_mutex_t *v69;
  int v70;
  int v71;
  int v72;
  uint64_t v73;
  int v74;
  pthread_mutex_t **v75;
  pthread_mutex_t *v76;
  uint64_t result;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  unsigned int *v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  unsigned int v98;
  uint64_t v99;
  uint64_t v100;
  _BYTE *v101;
  uint64_t v102;
  unsigned int v103;
  unsigned int v104;
  int v105;
  int v106;
  __int32 v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  uint64_t v113;
  double v114;
  double v115;
  double v116;
  double v117;
  double v118;
  double v119;
  int32x4_t v120;
  __n128 v121;
  int v122;
  int v123;
  __int32 v124;
  __int32 v125;
  uint64_t v126;
  unsigned int v127;
  unsigned int v128;
  uint8x16_t *v129;
  uint8x16_t *v130;
  uint8x16_t v131;
  uint8x16_t v132;
  uint8x16_t v133;
  uint64_t v134;
  char v135;
  char v136;
  uint64_t v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  int32x4_t *v141;
  unsigned __int32 v142;
  uint64_t v143;
  uint64_t v144;
  _BYTE *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  __int32 v149;
  __int32 v150;
  int32x4_t v151;
  int32x4_t v152;
  int32x4_t v153;
  int8x16_t v154;
  int32x4_t v155;
  int8x16_t v156;
  int32x4_t v157;
  int32x4_t v158;
  uint64_t v159;
  char v160;
  unsigned int v161;
  uint64_t v162;
  int v163;
  uint64_t v164;
  uint64_t v165;
  double v166;
  double v167;
  double v168;
  double v169;
  double v170;
  int32x4_t v171;
  __n128 v172;
  unsigned int v173;
  int v174;
  int v175;
  uint64_t v176;
  int v177;
  int8x8_t *v178;
  uint64_t v179;
  int v180;
  int v181;
  int v182;
  uint64_t v183;
  unsigned int v184;
  unsigned int v185;
  uint8x16_t *v186;
  uint8x16_t *v187;
  uint8x16_t v188;
  uint8x16_t v189;
  uint8x16_t v190;
  uint8x16_t *v191;
  uint8x16_t *v192;
  uint8x16_t v193;
  uint8x16_t v194;
  uint8x16_t v195;
  uint8x16_t v196;
  uint64_t v197;
  unsigned int v198;
  uint16x8_t v199;
  uint8x16_t v200;
  int16x8_t v201;
  int8x16_t v202;
  uint64_t v203;
  unsigned int v204;
  int8x16_t v205;
  int16x8_t v206;
  int16x8_t v207;
  int8x8_t v208;
  int v209;
  uint64_t v210;
  uint64_t v211;
  unsigned int v212;
  uint16x8_t v213;
  uint8x16_t v214;
  int16x8_t v215;
  int8x16_t v216;
  uint64_t v217;
  unsigned int v218;
  int8x16_t v219;
  int16x8_t v220;
  int16x8_t v221;
  int8x8_t v222;
  __int32 v223;
  int v224;
  uint64_t v225;
  uint64_t v226;
  unsigned int v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char v231;
  unsigned int *v232;
  int v233;
  uint64_t v234;
  _QWORD *v235;
  _QWORD *v236;
  int v237;
  char v238;
  int v239;
  int32x4_t *v240;
  __int32 v241;
  int v242;
  int v243;
  uint64_t v244;
  __int32 v245;
  _QWORD *v246;
  __int32 v247;
  _QWORD *v248;
  __int32 v249;
  int32x4_t v250;
  int v251;
  int32x4_t v252;
  __int32 v253;
  int32x4_t v254;
  __int32 v255;
  unsigned int v256;
  __int32 v257;
  unsigned int v258;
  unsigned int v259;
  int v260;
  unsigned int v261;
  char v262;
  int sig;
  char v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  int32x4_t v274;
  unsigned int v275;
  uint64_t v276;
  int v277;
  uint64_t v278;
  uint64_t v279;
  int32x4_t v280;
  int32x4_t *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  int32x4_t v286;
  int32x4_t v287;
  _QWORD v288[2];
  _DWORD v289[2];
  _OWORD v290[112];
  _OWORD v291[112];
  _BYTE *v292;
  _BYTE *v293;
  uint64_t v294;
  _BYTE *v295;
  _BYTE *v296;
  uint64_t v297;
  _BYTE v298[128];
  _BYTE v299[128];
  _BYTE v300[16];
  _BYTE v301[240];
  _BYTE v302[16];
  _BYTE v303[240];
  int v304;
  unsigned int v305;
  int v306;
  unsigned int v307;
  uint64_t v308;

  v0 = MEMORY[0x24BDAC7A8]();
  v230 = v2;
  v3 = (int32x4_t *)v0;
  v308 = *MEMORY[0x24BDAC8D0];
  v4 = *(_DWORD *)(v0 + 4);
  v5 = *(int32x4_t **)(v0 + 216);
  v6 = (16 * *(_DWORD *)v0);
  v7 = v5[4].i64[0] + v6;
  v8 = v5[10].i32[2];
  v9 = v5[4].i64[1] + v6;
  v10 = v5[11].i32[2];
  if (v5[2].i8[0])
    v11 = 5;
  else
    v11 = 4;
  if (v5[2].i8[0])
    v12 = 4;
  else
    v12 = 3;
  v13 = ((v4 << v11) * v8);
  v14 = ((v4 << v12) * v10);
  if (*(_BYTE *)(v0 + 30))
    v15 = v5[11].u32[2];
  else
    v15 = 0;
  v16 = v9 + v15 + v14;
  if (*(_BYTE *)(v0 + 30))
    v17 = v5[10].u32[2];
  else
    v17 = 0;
  v18 = v7 + v17 + v13;
  v19 = 2 * v8;
  v223 = v5[11].i32[2];
  v20 = 2 * v10;
  v21 = *(_QWORD *)(v0 + 48);
  v22 = *(unsigned __int8 *)(v21 + 272);
  v228 = v16;
  v229 = v1;
  v281 = (int32x4_t *)v0;
  v227 = v20;
  v226 = v18;
  if (*(_BYTE *)(v21 + 272))
  {
    v257 = v5[10].i32[2];
    v260 = 2 * v8;
    v23 = 0;
    v24 = 0;
    v275 = 0;
    v283 = *(_QWORD *)(*(_QWORD *)(v0 + 176) + 112);
    v266 = v0 + 224;
    v269 = 16 * v22;
    v25 = v21 + 24;
    v26 = 24;
    v272 = *(_QWORD *)(v0 + 48);
    v278 = v21 + 24;
    while (1)
    {
      v27 = *(unsigned __int8 *)(v25 + v23 + 7);
      v28 = *(unsigned __int16 *)(v21 + 26);
      if (v28 >= 0x103)
        v28 = 259;
      v29 = word_254E10E30[40 * v28 + v26];
      v30 = *((unsigned __int8 *)&word_254E10E30[40 * v28 + 4] + v26);
      v31 = byte_2160EE5C0[v30];
      v32 = byte_2160EE5D0[v30];
      if (v27 == 6)
      {
        if (v3[1].i8[15] == 2)
        {
          v33 = &v290[7 * v275];
          v55 = *(unsigned __int8 *)(v25 + v23);
          v56 = *(__int16 *)(v283 + v23);
          *((_DWORD *)v33 + 4) = v56;
          v57 = *(__int16 *)(v283 + v23 + 2);
          *((_DWORD *)v33 + 5) = v57;
          v58 = *(_QWORD *)(v3[14].i64[0] + ((4 * v55) & 0x3F8));
          v59 = v3[1].u8[14];
          *((_QWORD *)v33 + 5) = v58;
          *((_DWORD *)v33 + 6) = v56;
          *((_DWORD *)v33 + 7) = v57;
          if ((v55 & 1) != 0 || !v59)
          {
            if (v59)
            {
              *((_DWORD *)v33 + 7) = v57 + 2;
            }
            else if ((v55 & 1) != 0)
            {
              *((_DWORD *)v33 + 7) = v57 - 2;
              goto LABEL_36;
            }
            v60 = (pthread_mutex_t **)(v58 + 424);
          }
          else
          {
LABEL_36:
            v60 = (pthread_mutex_t **)(v58 + 432);
          }
          v61 = *v60;
          sub_2160DDB74(*v60);
          *((_QWORD *)v33 + 6) = v61;
          *((_DWORD *)v33 + 8) = 6;
          *((_DWORD *)v33 + 9) = v55;
          sig = v61[1].__sig;
          v70 = *(unsigned __int8 *)(v25 + v23 + 1);
          v71 = *(__int16 *)(v283 + v23 + 4);
          *((_DWORD *)v33 + 16) = v71;
          v72 = *(__int16 *)(v283 + v23 + 6);
          *((_DWORD *)v33 + 17) = v72;
          v73 = *(_QWORD *)(v281[14].i64[1] + ((4 * v70) & 0x3F8));
          v74 = v281[1].u8[14];
          *((_QWORD *)v33 + 11) = v73;
          *((_DWORD *)v33 + 18) = v71;
          *((_DWORD *)v33 + 19) = v72;
          if ((v70 & 1) != 0 || !v74)
          {
            if (v74)
            {
              *((_DWORD *)v33 + 19) = v72 + 2;
            }
            else if ((v70 & 1) != 0)
            {
              *((_DWORD *)v33 + 19) = v72 - 2;
              goto LABEL_67;
            }
            v75 = (pthread_mutex_t **)(v73 + 424);
          }
          else
          {
LABEL_67:
            v75 = (pthread_mutex_t **)(v73 + 432);
          }
          v76 = *v75;
          sub_2160DDB74(*v75);
          *((_QWORD *)v33 + 12) = v76;
          *((_DWORD *)v33 + 20) = 6;
          *((_DWORD *)v33 + 21) = v70;
          if (!LODWORD(v76[1].__sig))
            goto LABEL_75;
          v69 = v76;
          goto LABEL_74;
        }
        if (!v3[1].i8[15])
        {
          v33 = &v290[7 * v275];
          v34 = *(unsigned __int8 *)(v25 + v23);
          v35 = v283 + v23;
          v36 = *(__int16 *)(v283 + v23);
          *((_DWORD *)v33 + 4) = v36;
          v37 = *(__int16 *)(v283 + v23 + 2);
          *((_DWORD *)v33 + 5) = v37;
          v38 = *(_QWORD *)(v3[14].i64[0] + 8 * v34);
          *((_QWORD *)v33 + 5) = v38;
          *((_DWORD *)v33 + 6) = v36;
          *((_DWORD *)v33 + 7) = v37;
          if (v3[1].i8[13])
          {
            if (v3[1].i8[14])
            {
              if (!*(_BYTE *)(v38 + 37))
              {
                v39 = 2;
                goto LABEL_53;
              }
            }
            else if (*(_BYTE *)(v38 + 37))
            {
              v39 = -2;
LABEL_53:
              *((_DWORD *)v33 + 7) = v39 + v37;
            }
          }
          *((_DWORD *)v33 + 8) = 6;
          *((_DWORD *)v33 + 9) = v34;
          v61 = *(pthread_mutex_t **)(v38 + 416);
          sub_2160DDB74(v61);
          sig = v61[1].__sig;
          v62 = *(unsigned __int8 *)(v278 + v23 + 1);
          v63 = *(__int16 *)(v35 + 4);
          *((_DWORD *)v33 + 16) = v63;
          v64 = *(__int16 *)(v35 + 6);
          *((_DWORD *)v33 + 17) = v64;
          v65 = v281[14].i64[1];
          v66 = *(_QWORD *)(v65 + 8 * v62);
          *((_QWORD *)v33 + 11) = v66;
          *((_DWORD *)v33 + 18) = v63;
          *((_DWORD *)v33 + 19) = v64;
          if (v281[1].i8[13])
          {
            v67 = *(unsigned __int8 *)(v66 + 37);
            if (v281[1].i8[14])
            {
              if (!v67)
              {
                v68 = 2;
                goto LABEL_60;
              }
            }
            else if (v67)
            {
              v68 = -2;
LABEL_60:
              *((_DWORD *)v33 + 19) = v68 + v64;
            }
          }
          *((_DWORD *)v33 + 20) = 6;
          *((_DWORD *)v33 + 21) = v62;
          sub_2160DDB74(*(pthread_mutex_t **)(*(_QWORD *)(v65 + 8 * v62) + 416));
          v69 = *(pthread_mutex_t **)(*(_QWORD *)(v281[14].i64[1] + 8 * v62) + 416);
          if (!LODWORD(v69[1].__sig))
          {
LABEL_75:
            ++v275;
            v25 = v278;
            if (!sig)
              goto LABEL_49;
LABEL_48:
            sub_2160DDC10(v61);
            goto LABEL_49;
          }
LABEL_74:
          sub_2160DDC10(v69);
          goto LABEL_75;
        }
LABEL_25:
        v40 = (v27 - 4);
        v33 = &v291[7 * v24];
        LODWORD(v25) = *(unsigned __int8 *)(v25 + v40 + v23);
        v41 = (__int16 *)(v283 + 4 * v40 + v23);
        v42 = *v41;
        *((_DWORD *)v33 + 4) = v42;
        v43 = v41[1];
        *((_DWORD *)v33 + 5) = v43;
        v44 = *(_QWORD *)(*(_QWORD *)(v266 + 8 * v40) + ((4 * (int)v25) & 0x3F8));
        v45 = v3[1].u8[14];
        *((_QWORD *)v33 + 5) = v44;
        *((_DWORD *)v33 + 6) = v42;
        *((_DWORD *)v33 + 7) = v43;
        if ((v25 & 1) != 0 || !v45)
        {
          if (v45)
          {
            *((_DWORD *)v33 + 7) = v43 + 2;
          }
          else if ((v25 & 1) != 0)
          {
            *((_DWORD *)v33 + 7) = v43 - 2;
            goto LABEL_27;
          }
          v46 = (pthread_mutex_t **)(v44 + 424);
        }
        else
        {
LABEL_27:
          v46 = (pthread_mutex_t **)(v44 + 432);
        }
        ++v24;
        v61 = *v46;
        sub_2160DDB74(*v46);
        *((_QWORD *)v33 + 6) = v61;
        goto LABEL_47;
      }
      if (v3[1].i8[15])
        goto LABEL_25;
      v47 = (v27 - 4);
      v33 = &v291[7 * v24];
      v25 = *(unsigned __int8 *)(v25 + v47 + v23);
      v48 = (__int16 *)(v283 + 4 * v47 + v23);
      v49 = *v48;
      *((_DWORD *)v33 + 4) = v49;
      v50 = v48[1];
      *((_DWORD *)v33 + 5) = v50;
      v51 = *(_QWORD *)(v266 + 8 * v47);
      v52 = *(_QWORD *)(v51 + 8 * v25);
      *((_QWORD *)v33 + 5) = v52;
      *((_DWORD *)v33 + 6) = v49;
      *((_DWORD *)v33 + 7) = v50;
      if (v3[1].i8[13])
      {
        v53 = *(unsigned __int8 *)(v52 + 37);
        if (v3[1].i8[14])
        {
          if (!v53)
          {
            v54 = 2;
LABEL_45:
            *((_DWORD *)v33 + 7) = v54 + v50;
          }
        }
        else if (v53)
        {
          v54 = -2;
          goto LABEL_45;
        }
      }
      ++v24;
      sub_2160DDB74(*(pthread_mutex_t **)(*(_QWORD *)(v51 + 8 * v25) + 416));
      v61 = *(pthread_mutex_t **)(*(_QWORD *)(*(_QWORD *)(v266 + 8 * v47) + 8 * v25) + 416);
      sub_2160DDB74(v61);
LABEL_47:
      *((_DWORD *)v33 + 8) = v27;
      *((_DWORD *)v33 + 9) = v25;
      v25 = v278;
      if (LODWORD(v61[1].__sig))
        goto LABEL_48;
LABEL_49:
      *(_DWORD *)v33 = v31;
      *((_DWORD *)v33 + 1) = v32;
      *((_DWORD *)v33 + 2) = v29;
      *((_DWORD *)v33 + 3) = v29 >> 8;
      v23 += 16;
      ++v26;
      v21 = v272;
      v3 = v281;
      if (v269 == v23)
      {
        v5 = (int32x4_t *)v281[13].i64[1];
        v16 = v228;
        v1 = v229;
        v20 = v227;
        v18 = v226;
        v19 = v260;
        v8 = v257;
        LODWORD(v22) = v275;
        goto LABEL_80;
      }
    }
  }
  v24 = 0;
LABEL_80:
  v289[0] = v22;
  v289[1] = v24;
  v288[0] = v290;
  v288[1] = v291;
  result = v18 + v19;
  v78 = 4 * v8;
  v225 = result;
  v224 = v78;
  if (v3[1].i8[15])
  {
    v264 = 0;
    v79 = 0;
    v80 = 0;
    v255 = v5[36].i32[0];
    v253 = v5[36].i32[1];
    v251 = v5[36].i32[2];
    v249 = v5[36].i32[3];
    v247 = v5[37].i32[0];
    v245 = v5[37].i32[1];
    v81 = 151;
    if (v3[1].i8[15] == 2)
      v81 = 155;
    v82 = 150;
    if (v3[1].i8[15] == 2)
      v82 = 154;
    v241 = v5->i32[v81];
    v243 = v5->i32[v82];
    v237 = 16 * ((unsigned __int32)v3->i32[1] >> (v3[1].i8[15] == 2));
    v239 = 16 * v3->i32[0];
    v306 = 16;
    v307 = v19;
    v304 = 16;
    v305 = v20;
    v295 = v302;
    v296 = v300;
    v83 = 1;
    v297 = v18;
    v234 = 2;
    v292 = v299;
    v293 = v298;
    v294 = v16;
    v84 = v230;
    while (1)
    {
      v85 = v83;
      v233 = v289[v79];
      if (v233)
      {
        v231 = v83;
        v86 = v80;
        v87 = 0;
        v88 = 0;
        v89 = *(&v306 + v79);
        v90 = *(&v304 + v79);
        v232 = (unsigned int *)v288[v79];
        v235 = &(&v292)[2 * v79];
        v236 = &(&v295)[2 * v79];
        v261 = v89;
        v258 = v90;
        do
        {
          v270 = v235[v88];
          v273 = v236[v88];
          v91 = v233;
          v92 = v232;
          v276 = v88;
          v267 = v87;
          do
          {
            v94 = *v92;
            v93 = v92[1];
            v95 = v93 * v89;
            v96 = (uint64_t *)((char *)v92 + v87 + 48);
            if (!v3[1].i8[15])
              v96 = (uint64_t *)(*(_QWORD *)((char *)v92 + v87 + 40) + 416);
            v282 = *(_QWORD *)((char *)v92 + v87 + 40);
            v284 = (v93 >> 1) * v90;
            if ((v264 & 1) != 0)
            {
              v97 = v3[3].i64[0];
              if (*(_DWORD *)(v97 + 356))
                v98 = 1;
              else
                v98 = *(_DWORD *)(v97 + 360) == 1;
              v100 = 0;
              LODWORD(v99) = 0;
              LODWORD(v279) = 0;
            }
            else if (v88 == 1)
            {
              v98 = *(_DWORD *)(v3[3].i64[0] + 360);
              v99 = *v236 + v94 + v95;
              v279 = *v235 + v94 + (v93 >> 1) * v90;
              v100 = v98;
            }
            else
            {
              v98 = 0;
              LODWORD(v99) = 0;
              LODWORD(v279) = 0;
              v100 = v86;
            }
            v101 = (_BYTE *)(v273 + v94 + v95);
            v102 = *v96;
            v103 = v92[2];
            v104 = v92[3];
            v105 = *(unsigned int *)((char *)v92 + v87 + 16);
            v106 = *(unsigned int *)((char *)v92 + v87 + 20);
            v107 = v94 + v239 + (v105 >> 2);
            v108 = v93 + v237;
            v109 = v93 + v237 + (v106 >> 2);
            if (v107 <= v255)
              v107 = v255;
            if (v109 <= v251)
              v109 = v251;
            if (v107 >= v247)
              v107 = v247;
            if (v109 >= v243)
              v109 = v243;
            v286.i32[0] = v107;
            v286.i32[2] = v109;
            v110 = v103 - 1;
            v111 = v104 - 1;
            v287.i32[0] = v107 + v103 - 1;
            v287.i32[2] = v109 + v104 - 1;
            v112 = byte_2160EED7C[v106 & 3 | (4 * (v105 & 3))];
            v113 = (uint64_t)v3;
            if (((v106 | v105) & 1) != 0)
              sub_215FDF60C(v102, v286.i32, v112, (uint64_t)v101, v89, v98, v100, (uint64_t)v3, v92, v99 - (_DWORD)v101);
            else
              sub_215FDEB6C(v102, v286.i32, v112 & 3, v101, v89, v98, v100, (uint64_t)v3, v92, v99 - (_DWORD)v101);
            v123 = *(unsigned int *)((char *)v92 + v267 + 24);
            v122 = *(unsigned int *)((char *)v92 + v267 + 28);
            v124 = v94 + v239 + (v123 >> 2);
            v125 = v108 + (v122 >> 2);
            if (v124 <= v253)
              v124 = v253;
            if (v125 <= v249)
              v125 = v249;
            if (v124 >= v245)
              v124 = v245;
            if (v125 >= v241)
              v125 = v241;
            v286.i32[1] = v124;
            v286.i32[3] = v125;
            v287.i32[1] = v124 + v110;
            v287.i32[3] = v125 + v111;
            v88 = v276;
            v90 = v258;
            v86 = v100;
            sub_215FE3754(v282 + 32, &v286, v123 & 7, v122 & 7, (int8x8_t *)(v270 + v94 + v284), v258, v98, v100, v114, v115, v116, v117, v118, v119, v120, v121, v113, v92, v279 - (v270 + v94 + v284),
              v276);
            v87 = v267;
            v92 += 28;
            --v91;
            v3 = (int32x4_t *)v113;
            v89 = v261;
          }
          while (v91);
          v88 = v276 + 1;
          v87 = v267 + 48;
        }
        while (v276 + 1 != v234);
        v16 = v228;
        v1 = v229;
        v84 = v230;
        v20 = v227;
        result = v225;
        v18 = v226;
        v78 = v224;
        v85 = v231;
        if ((v231 & 1) == 0)
          goto LABEL_170;
        v80 = v100;
        v126 = 0;
        v127 = 0;
        v128 = 0;
        v129 = (uint8x16_t *)v301;
        v130 = (uint8x16_t *)v303;
        do
        {
          v132 = v129[-1];
          v131 = *v129;
          if (!(_DWORD)v100)
          {
            v132 = vrhaddq_u8(v132, v130[-1]);
            v131 = vrhaddq_u8(v131, *v130);
          }
          v133 = *(uint8x16_t *)&v298[v126];
          if (!(_DWORD)v100)
            v133 = vrhaddq_u8(v133, *(uint8x16_t *)&v299[v126]);
          *(uint8x16_t *)(v226 + v128) = v132;
          *(uint8x16_t *)(v225 + v128) = v131;
          *(uint8x16_t *)(v228 + v127) = v133;
          v128 += v224;
          v126 += 16;
          v127 += v227;
          v130 += 2;
          v129 += 2;
        }
        while ((_DWORD)v126 != 128);
      }
      v83 = 0;
      --v234;
      v264 = 1;
      v79 = 1;
      if ((v85 & 1) == 0)
        goto LABEL_170;
    }
  }
  v262 = 0;
  v134 = 0;
  v277 = 0;
  v252 = v5[37];
  v254 = v5[36];
  v250 = vshlq_n_s32(*v3, 4uLL);
  v306 = 16;
  v307 = v19;
  v304 = 16;
  v305 = v20;
  v295 = v302;
  v296 = v300;
  v297 = v18;
  v135 = 1;
  v244 = 2;
  v292 = v299;
  v293 = v298;
  v294 = v16;
  v84 = v230;
  do
  {
    v136 = v135;
    v242 = v289[v134];
    if (!v242)
      goto LABEL_169;
    v238 = v135;
    v285 = 0;
    v137 = 0;
    v138 = *(&v306 + v134);
    v139 = *(&v304 + v134);
    v240 = (int32x4_t *)v288[v134];
    v246 = &(&v292)[2 * v134];
    v248 = &(&v295)[2 * v134];
    v256 = v138;
    v259 = v139;
    do
    {
      v265 = v246[v137];
      v268 = v248[v137];
      v140 = v242;
      v141 = v240;
      v271 = v137;
      do
      {
        v143 = v141->u32[0];
        v142 = v141->u32[1];
        v144 = v142 * v138;
        v145 = (_BYTE *)(v268 + v143 + v144);
        v146 = (v142 >> 1) * v139;
        v147 = v141[v285 + 2].i64[1];
        v148 = *(_QWORD *)(v147 + 416);
        v150 = v141[v285 + 1].i32[0];
        v149 = v141[v285 + 1].i32[1];
        v151.i64[0] = 0x100000001;
        v151.i64[1] = 0x100000001;
        v152 = vaddq_s32(vshlq_s32(v141[v285 + 1], v151), vaddq_s32(v250, *v141));
        v153 = vzip1q_s32(v152, v152);
        v154 = (int8x16_t)vcgtq_s32(v153, v254);
        v155 = (int32x4_t)vorrq_s8(vbicq_s8((int8x16_t)v254, v154), vandq_s8((int8x16_t)v153, v154));
        v156 = (int8x16_t)vcgtq_s32(v155, v252);
        v157 = (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)v252, v156), vbicq_s8((int8x16_t)v155, v156));
        v155.i64[0] = -1;
        v155.i64[1] = -1;
        v158 = vaddq_s32(*v141, v155);
        v286 = v157;
        v287 = vaddq_s32(v157, vzip2q_s32(v158, v158));
        v159 = v149 & 3;
        v160 = v149 | v150;
        v161 = byte_2160EED7C[v159 & 0xFFFFFFFFFFFFFFF3 | (4 * (v150 & 3))];
        v280 = v157;
        v274 = v287;
        if ((v262 & 1) != 0)
        {
          v162 = v3[3].i64[0];
          if (*(_DWORD *)(v162 + 356))
            v163 = 1;
          else
            v163 = *(_DWORD *)(v162 + 360) == 1;
          v277 = 0;
          LODWORD(v164) = 0;
          LODWORD(v165) = 0;
          if ((v160 & 1) == 0)
          {
LABEL_145:
            v173 = v161 & 3;
            if (v163)
            {
              sub_215FDEB6C(v148, v286.i32, v173, v145, v138, v163, v277, (uint64_t)v3, v141, v164 - (_DWORD)v145);
              goto LABEL_149;
            }
            goto LABEL_147;
          }
          goto LABEL_138;
        }
        if (v137 == 1)
        {
          v163 = *(_DWORD *)(v3[3].i64[0] + 360);
          v164 = *v248 + v143 + v144;
          v165 = *v246 + v143 + v146;
          v277 = v163;
          if ((v160 & 1) == 0)
            goto LABEL_145;
LABEL_138:
          if (v163)
          {
            sub_215FDF60C(v148, v286.i32, v161, (uint64_t)v145, v138, v163, v277, (uint64_t)v3, v141, v164 - (_DWORD)v145);
            goto LABEL_149;
          }
          goto LABEL_142;
        }
        LODWORD(v165) = 0;
        if ((v160 & 1) == 0)
        {
          v173 = v161 & 3;
LABEL_147:
          sub_215FDC2F4(v148, v286.i32, v173);
          goto LABEL_148;
        }
LABEL_142:
        sub_215FDCD68(v148, &v286, v161);
LABEL_148:
        v163 = 0;
LABEL_149:
        LOBYTE(v174) = v280.i8[12];
        v175 = v141[v285 + 1].i32[3] - v141[v285 + 1].i32[1];
        if (v175)
        {
          LODWORD(v159) = v175 + v159;
          v176 = (uint64_t)v281;
          v139 = v259;
          if (v159 >= 4)
          {
            v166 = *(double *)v274.i64;
            v177 = v141[v285 + 1].i32[3] - v141[v285 + 1].i32[1];
            v174 = v280.i32[3] + v177 / 2;
            v286.i32[3] = v174;
            v287.i32[3] = v274.i32[3] + v177 / 2;
            LODWORD(v159) = v159 & 3;
          }
        }
        else
        {
          v176 = (uint64_t)v281;
          v139 = v259;
        }
        v178 = (int8x8_t *)(v265 + v143 + v146);
        v179 = v147 + 32;
        v180 = v150 & 3 | (4 * (v280.i8[4] & 1));
        v181 = (4 * (v174 & 1)) | v159;
        if (v163)
        {
          v182 = v165 - (_DWORD)v178;
          v137 = v271;
          sub_215FE3754(v179, &v286, v180, v181, v178, v139, v163, v277, *(double *)v280.i64, v166, v167, v168, v169, v170, v171, v172, v176, v141, v182,
            v271);
        }
        else
        {
          v137 = v271;
          sub_215FE2560(v179, (uint64_t)&v286, v180, v181);
        }
        v141 += 7;
        --v140;
        v3 = v281;
        v138 = v256;
      }
      while (v140);
      ++v137;
      v285 += 3;
    }
    while (v137 != v244);
    v16 = v228;
    v1 = v229;
    v84 = v230;
    v20 = v227;
    result = v225;
    v18 = v226;
    v78 = v224;
    v136 = v238;
    if ((v238 & 1) == 0)
      break;
    v183 = 0;
    v184 = 0;
    v185 = 0;
    if (v163)
    {
      v186 = (uint8x16_t *)v301;
      v187 = (uint8x16_t *)v303;
      do
      {
        v189 = v186[-1];
        v188 = *v186;
        if (!v277)
        {
          v189 = vrhaddq_u8(v189, v187[-1]);
          v188 = vrhaddq_u8(v188, *v187);
        }
        v190 = *(uint8x16_t *)&v298[v183];
        if (!v277)
          v190 = vrhaddq_u8(v190, *(uint8x16_t *)&v299[v183]);
        *(uint8x16_t *)(v226 + v185) = v189;
        *(uint8x16_t *)(v225 + v185) = v188;
        *(uint8x16_t *)(v228 + v184) = v190;
        v185 += v224;
        v183 += 16;
        v184 += v227;
        v187 += 2;
        v186 += 2;
      }
      while ((_DWORD)v183 != 128);
    }
    else
    {
      v192 = (uint8x16_t *)v301;
      v191 = (uint8x16_t *)v303;
      do
      {
        v193 = *v191;
        v194 = *v192;
        v195 = *(uint8x16_t *)&v299[v183];
        v196 = *(uint8x16_t *)&v298[v183];
        *(uint8x16_t *)(v226 + v184) = vrhaddq_u8(v191[-1], v192[-1]);
        *(uint8x16_t *)(v225 + v184) = vrhaddq_u8(v193, v194);
        *(uint8x16_t *)(v228 + v185) = vrhaddq_u8(v195, v196);
        v184 += v224;
        v183 += 16;
        v185 += v227;
        v192 += 2;
        v191 += 2;
      }
      while ((_DWORD)v183 != 128);
    }
LABEL_169:
    v135 = 0;
    --v244;
    v262 = 1;
    v134 = 1;
  }
  while ((v136 & 1) != 0);
LABEL_170:
  if (v84)
  {
    if (v3[1].i8[15])
    {
      v197 = 0;
      v198 = 0;
      v199.i64[0] = 0xFF00FF00FF00FFLL;
      v199.i64[1] = 0xFF00FF00FF00FFLL;
      do
      {
        v200 = *(uint8x16_t *)(result + v198);
        v201 = (int16x8_t)vaddw_high_u8(*(uint16x8_t *)(v84 + v197 + 48), v200);
        v202 = (int8x16_t)vminq_u16((uint16x8_t)vmaxq_s16((int16x8_t)vaddw_u8(*(uint16x8_t *)(v84 + v197 + 32), *(uint8x8_t *)v200.i8), (int16x8_t)0), v199);
        *(int8x16_t *)(v18 + v198) = vuzp1q_s8((int8x16_t)vminq_u16((uint16x8_t)vmaxq_s16((int16x8_t)vaddw_u8(*(uint16x8_t *)(v84 + v197), *(uint8x8_t *)(v18 + v198)), (int16x8_t)0), v199), (int8x16_t)vminq_u16((uint16x8_t)vmaxq_s16((int16x8_t)vaddw_high_u8(*(uint16x8_t *)(v84 + v197 + 16), *(uint8x16_t *)(v18 + v198)), (int16x8_t)0), v199));
        *(int8x16_t *)(result + v198) = vuzp1q_s8(v202, (int8x16_t)vminq_u16((uint16x8_t)vmaxq_s16(v201, (int16x8_t)0), v199));
        v198 += v78;
        v197 += 64;
      }
      while ((_DWORD)v197 != 512);
    }
    else
    {
      v203 = 0;
      v204 = 0;
      do
      {
        v205 = *(int8x16_t *)(result + v204);
        v206 = (int16x8_t)vzip1q_s8(v205, (int8x16_t)0);
        v207 = vaddq_s16(*(int16x8_t *)(v84 + v203 + 48), (int16x8_t)vzip2q_s8(v205, (int8x16_t)0));
        v208 = vqmovun_s16(vaddq_s16(*(int16x8_t *)(v84 + v203 + 32), v206));
        *(int8x16_t *)(v18 + v204) = vqmovun_high_s16(vqmovun_s16(vaddq_s16(*(int16x8_t *)(v84 + v203), (int16x8_t)vzip1q_s8(*(int8x16_t *)(v18 + v204), (int8x16_t)0))), vaddq_s16(*(int16x8_t *)(v84 + v203 + 16), (int16x8_t)vzip2q_s8(*(int8x16_t *)(v18 + v204), (int8x16_t)0)));
        *(int8x16_t *)(result + v204) = vqmovun_high_s16(v208, v207);
        v204 += v78;
        v203 += 64;
      }
      while ((_DWORD)v203 != 512);
    }
  }
  if (v1)
  {
    v209 = 4 * v223;
    v210 = v16 + v20;
    if (v3[1].i8[15])
    {
      v211 = 0;
      v212 = 0;
      v213.i64[0] = 0xFF00FF00FF00FFLL;
      v213.i64[1] = 0xFF00FF00FF00FFLL;
      do
      {
        v214 = *(uint8x16_t *)(v210 + v212);
        v215 = (int16x8_t)vaddw_high_u8(*(uint16x8_t *)(v1 + v211 + 48), v214);
        v216 = (int8x16_t)vminq_u16((uint16x8_t)vmaxq_s16((int16x8_t)vaddw_u8(*(uint16x8_t *)(v1 + v211 + 32), *(uint8x8_t *)v214.i8), (int16x8_t)0), v213);
        *(int8x16_t *)(v16 + v212) = vuzp1q_s8((int8x16_t)vminq_u16((uint16x8_t)vmaxq_s16((int16x8_t)vaddw_u8(*(uint16x8_t *)(v1 + v211), *(uint8x8_t *)(v16 + v212)), (int16x8_t)0), v213), (int8x16_t)vminq_u16((uint16x8_t)vmaxq_s16((int16x8_t)vaddw_high_u8(*(uint16x8_t *)(v1 + v211 + 16), *(uint8x16_t *)(v16 + v212)), (int16x8_t)0), v213));
        *(int8x16_t *)(v210 + v212) = vuzp1q_s8(v216, (int8x16_t)vminq_u16((uint16x8_t)vmaxq_s16(v215, (int16x8_t)0), v213));
        v212 += v209;
        v211 += 64;
      }
      while ((_DWORD)v211 != 256);
    }
    else
    {
      v217 = 0;
      v218 = 0;
      do
      {
        v219 = *(int8x16_t *)(v210 + v218);
        v220 = (int16x8_t)vzip1q_s8(v219, (int8x16_t)0);
        v221 = vaddq_s16(*(int16x8_t *)(v1 + v217 + 48), (int16x8_t)vzip2q_s8(v219, (int8x16_t)0));
        v222 = vqmovun_s16(vaddq_s16(*(int16x8_t *)(v1 + v217 + 32), v220));
        *(int8x16_t *)(v16 + v218) = vqmovun_high_s16(vqmovun_s16(vaddq_s16(*(int16x8_t *)(v1 + v217), (int16x8_t)vzip1q_s8(*(int8x16_t *)(v16 + v218), (int8x16_t)0))), vaddq_s16(*(int16x8_t *)(v1 + v217 + 16), (int16x8_t)vzip2q_s8(*(int8x16_t *)(v16 + v218), (int8x16_t)0)));
        *(int8x16_t *)(v210 + v218) = vqmovun_high_s16(v222, v221);
        v218 += v209;
        v217 += 64;
      }
      while ((_DWORD)v217 != 256);
    }
  }
  return result;
}

uint64_t sub_215FDC2F4(uint64_t a1, int *a2, unsigned int a3)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t result;
  unint64_t v16;
  __n128 *v17;
  __n128 *v18;

  v3 = *(unsigned int *)(a1 + 40);
  v4 = a2[2];
  v5 = *a2;
  v6 = a2[4];
  v7 = v4 >> 4;
  v8 = v4 & 0xF;
  v9 = a2[6] >> 4;
  v10 = a2[6] & 0xF;
  v11 = *a2 >> 4;
  v12 = v5 & 0xF;
  v13 = v6 - v5;
  v14 = *(_QWORD *)(a1 + 32) + ((v7 + 2) * v3) + ((uint64_t)(v11 + 2) << 10);
  result = ((_BYTE)v7 - (_BYTE)v9) & 0xF;
  v16 = v14 + ((unint64_t)a3 << 8);
  v17 = (__n128 *)(v16 + v3);
  v18 = (__n128 *)(v16 + 16 * v8);
  if (v11 == v6 >> 4)
  {
    if (v13 < 8)
    {
      if (v13 == 7)
      {
        if ((v10 & ~(v7 - v9)) - (_DWORD)v8 + (_DWORD)result == -1)
        {
          if (v7 != v9)
            return ((uint64_t (*)(__n128, __n128))((char *)&loc_215FDC7E8 + 4 * byte_2160EE8F8[v12]))((__n128)0, *v17);
        }
        else
        {
          return ((uint64_t (*)(__n128, __n128))((char *)&loc_215FDC6F8 + 4 * byte_2160EE8E8[v12]))((__n128)0, *v18);
        }
      }
      else if ((v10 & ~(v7 - v9)) - (_DWORD)v8 + (_DWORD)result == -1)
      {
        if (v7 != v9)
          return ((uint64_t (*)(__n128, __n128))((char *)&loc_215FDCB38 + 4 * byte_2160EE8D8[v12]))((__n128)0, *v17);
      }
      else
      {
        return ((uint64_t (*)(__n128, __n128))((char *)&loc_215FDCA48 + 4 * byte_2160EE8C8[v12]))((__n128)0, *v18);
      }
    }
    else if ((v10 & ~(v7 - v9)) - (_DWORD)v8 + (_DWORD)result == -1)
    {
      if (v7 != v9)
        return ((uint64_t (*)(__n128, __n128))((char *)&loc_215FDC490 + 4 * byte_2160EE918[v12]))((__n128)0, *v17);
    }
    else
    {
      return ((uint64_t (*)(__n128, __n128))((char *)&loc_215FDC3A0 + 4 * byte_2160EE908[v12]))((__n128)0, *v18);
    }
  }
  else if (v13 < 8)
  {
    if (v13 == 7)
    {
      if ((v10 & ~(v7 - v9)) - (_DWORD)v8 + (_DWORD)result == -1)
      {
        if (v7 != v9)
          return ((uint64_t (*)(__n128, __n128))((char *)&loc_215FDC994 + 4 * byte_2160EE898[v12]))(*v17, v17[64]);
      }
      else
      {
        return ((uint64_t (*)(__n128, __n128))((char *)&loc_215FDC8DC + 4 * byte_2160EE888[v12]))(*v18, v18[64]);
      }
    }
    else if ((v10 & ~(v7 - v9)) - (_DWORD)v8 + (_DWORD)result == -1)
    {
      if (v7 != v9)
        return ((uint64_t (*)(__n128, __n128))((char *)&loc_215FDCCDC + 4 * byte_2160EE878[v12]))(*v17, v17[64]);
    }
    else
    {
      return ((uint64_t (*)(__n128, __n128))((char *)&loc_215FDCC24 + 4 * byte_2160EE868[v12]))(*v18, v18[64]);
    }
  }
  else if ((v10 & ~(v7 - v9)) - (_DWORD)v8 + (_DWORD)result == -1)
  {
    if (v7 != v9)
      return ((uint64_t (*)(__n128, __n128))((char *)&loc_215FDC63C + 4 * byte_2160EE8B8[v12]))(*v17, v17[64]);
  }
  else
  {
    return ((uint64_t (*)(__n128, __n128))((char *)&loc_215FDC584 + 4 * byte_2160EE8A8[v12]))(*v18, v18[64]);
  }
  return result;
}

void sub_215FDCD68(uint64_t a1, _DWORD *a2, unsigned int a3)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;

  v3 = (a3 >> 4) & 1;
  v4 = (a3 >> 6) & 1;
  v5 = a2[2];
  v6 = *a2 + v3;
  v7 = a2[4];
  v8 = v7 + v3;
  v9 = (v7 + v3) >> 4;
  v10 = a2[6];
  v11 = v10 & 0xF;
  v12 = v6 & 0xF;
  v13 = v8 - v6;
  v14 = *a2 + v4;
  v15 = (v10 + ((a3 & 0x80) >> 7)) >> 4;
  v16 = (v5 >> 4) - (v10 >> 4);
  v17 = v16 & 0xF;
  v18 = v11 & ~v16;
  v19 = (v15 - (v5 >> 4)) & ((a3 & 0x80) >> 7);
  v20 = v18 - (v5 & 0xF) + v17 + 1;
  if ((v9 - (v6 >> 4)) | (((v7 + v4) >> 4) - (v14 >> 4)))
  {
    if (v13 >= 8)
    {
      if (v20 == v19)
      {
        if (v19)
          __asm { BR              X17 }
        __asm { BR              X17 }
      }
      __asm { BR              X23 }
    }
    if (v13 == 7)
    {
      if (v20 == v19)
      {
        if (v19)
          __asm { BR              X17 }
        __asm { BR              X17 }
      }
      __asm { BR              X23 }
    }
    if (v20 == v19)
    {
      if (v19)
        __asm { BR              X17 }
      __asm { BR              X17 }
    }
    __asm { BR              X23 }
  }
  if (v13 >= 8)
  {
    if (v20 == v19)
    {
      if (v19)
        __asm { BR              X16 }
      __asm { BR              X16 }
    }
    __asm { BR              X20 }
  }
  if (v13 == 7)
  {
    if (v20 == v19)
    {
      if (v19)
        __asm { BR              X16 }
      __asm { BR              X16 }
    }
    __asm { BR              X20 }
  }
  if (v20 == v19)
  {
    if (v19)
      __asm { BR              X16 }
    __asm { BR              X16 }
  }
  __asm { BR              X20 }
}

uint64_t sub_215FDE9D4(__n128 a1, int8x16_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(__n128, __n128))((char *)sub_215FDEA90 + 4 * *(unsigned __int8 *)(v3 + v2)))(a1, (__n128)vextq_s8(a2, vdupq_lane_s8(*(int8x8_t *)a2.i8, 1), 1uLL));
}

void sub_215FDEA90(double a1, uint8x16_t a2, int8x16_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _DWORD *a7)
{
  int v7;

  *a7 = vrhaddq_u8(a2, (uint8x16_t)vextq_s8(a3, vdupq_lane_s8(*(int8x8_t *)a3.i8, 1), 1uLL)).u32[0];
  if (v7 == 1)
    JUMPOUT(0x215FDEB58);
  JUMPOUT(0x215FDE9BCLL);
}

uint64_t sub_215FDEB6C(uint64_t result, int *a2, unsigned int a3, _BYTE *a4, unsigned int a5, int a6, int a7, uint64_t a8, _DWORD *a9, int a10)
{
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  unint64_t v20;
  __int128 *v21;
  __int128 *v22;
  unsigned int v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  BOOL v28;
  unint64_t v29;
  __int128 *v30;
  __int128 *v31;
  int v32;
  uint64_t v33;
  unint64_t v34;
  int v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  unint64_t v44;
  int v45;
  uint64_t v46;
  unint64_t v47;
  int v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  unint64_t v54;
  int v55;
  uint64_t v56;
  unint64_t v57;
  int v59;
  int v60;
  int v63;
  int v64;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;

  v70 = *MEMORY[0x24BDAC8D0];
  v14 = *(unsigned int *)(result + 40);
  v15 = a2[2];
  v16 = a2[4];
  v17 = v15 & 0xF;
  v59 = a2[6] >> 4;
  v60 = v15 >> 4;
  v18 = *a2 >> 4;
  v63 = a2[6] & 0xF;
  v19 = v16 - *a2;
  v64 = (v63 & ~(v60 - v59)) - v17 + (((_BYTE)v60 - (_BYTE)v59) & 0xF) + 1;
  v20 = *(_QWORD *)(result + 32)
      + ((v60 + 2) * v14)
      + ((uint64_t)(v18 + 2) << 10)
      + ((unint64_t)a3 << 8);
  v21 = (__int128 *)(v20 + v14);
  v22 = (__int128 *)(v20 + 16 * v17);
  v23 = __clz(v19 | 1);
  if (v16 == *a2)
    ++v23;
  v69 = *(_OWORD *)((char *)&xmmword_2160EED8C[*a2 & 0xFLL] + 7680 - (v23 << 8));
  if (v18 == v16 >> 4)
  {
    if (v19 < 8)
    {
      if (v19 == 7)
      {
        if ((v63 & ~(v60 - v59)) - (_DWORD)v17 + (((_BYTE)v60 - (_BYTE)v59) & 0xF) != -1)
        {
          v38 = 0;
          do
          {
            v39 = 0;
            v68 = *v22;
            do
            {
              *((_BYTE *)&v67 + v39) = *(_BYTE *)((unint64_t)&v68 | *((_BYTE *)&v69 + v39) & 0xF);
              ++v39;
            }
            while (v39 != 16);
            if (a6)
              result = sub_215FE4918(8, (unsigned __int8 *)&v67, a4, a7, a8, a9, a10);
            else
              *(_QWORD *)a4 = v67;
            ++v22;
            a4 += a5;
            ++v38;
          }
          while (v38 != v64);
        }
        if (v60 != v59)
        {
          v40 = 0;
          do
          {
            v41 = 0;
            v68 = *v21;
            do
            {
              *((_BYTE *)&v67 + v41) = *(_BYTE *)((unint64_t)&v68 | *((_BYTE *)&v69 + v41) & 0xF);
              ++v41;
            }
            while (v41 != 16);
            if (a6)
              result = sub_215FE4918(8, (unsigned __int8 *)&v67, a4, a7, a8, a9, a10);
            else
              *(_QWORD *)a4 = v67;
            ++v21;
            a4 += a5;
            v28 = v40++ == v63;
          }
          while (!v28);
        }
      }
      else
      {
        if ((v63 & ~(v60 - v59)) - (_DWORD)v17 + (((_BYTE)v60 - (_BYTE)v59) & 0xF) != -1)
        {
          v48 = 0;
          do
          {
            v49 = 0;
            v68 = *v22;
            do
            {
              *((_BYTE *)&v67 + v49) = *(_BYTE *)((unint64_t)&v68 | *((_BYTE *)&v69 + v49) & 0xF);
              ++v49;
            }
            while (v49 != 16);
            if (a6)
              result = sub_215FE4918(4, (unsigned __int8 *)&v67, a4, a7, a8, a9, a10);
            else
              *(_DWORD *)a4 = v67;
            ++v22;
            a4 += a5;
            ++v48;
          }
          while (v48 != v64);
        }
        if (v60 != v59)
        {
          v50 = 0;
          do
          {
            v51 = 0;
            v68 = *v21;
            do
            {
              *((_BYTE *)&v67 + v51) = *(_BYTE *)((unint64_t)&v68 | *((_BYTE *)&v69 + v51) & 0xF);
              ++v51;
            }
            while (v51 != 16);
            if (a6)
              result = sub_215FE4918(4, (unsigned __int8 *)&v67, a4, a7, a8, a9, a10);
            else
              *(_DWORD *)a4 = v67;
            ++v21;
            a4 += a5;
            v28 = v50++ == v63;
          }
          while (!v28);
        }
      }
    }
    else
    {
      if ((v63 & ~(v60 - v59)) - (_DWORD)v17 + (((_BYTE)v60 - (_BYTE)v59) & 0xF) != -1)
      {
        v24 = 0;
        do
        {
          v25 = 0;
          v68 = *v22;
          do
          {
            *((_BYTE *)&v67 + v25) = *(_BYTE *)((unint64_t)&v68 | *((_BYTE *)&v69 + v25) & 0xF);
            ++v25;
          }
          while (v25 != 16);
          if (a6)
            result = sub_215FE4918(16, (unsigned __int8 *)&v67, a4, a7, a8, a9, a10);
          else
            *(_OWORD *)a4 = v67;
          ++v22;
          a4 += a5;
          ++v24;
        }
        while (v24 != v64);
      }
      if (v60 != v59)
      {
        v26 = 0;
        do
        {
          v27 = 0;
          v68 = *v21;
          do
          {
            *((_BYTE *)&v67 + v27) = *(_BYTE *)((unint64_t)&v68 | *((_BYTE *)&v69 + v27) & 0xF);
            ++v27;
          }
          while (v27 != 16);
          if (a6)
            result = sub_215FE4918(16, (unsigned __int8 *)&v67, a4, a7, a8, a9, a10);
          else
            *(_OWORD *)a4 = v67;
          ++v21;
          a4 += a5;
          v28 = v26++ == v63;
        }
        while (!v28);
      }
    }
  }
  else
  {
    v29 = v20 + 1024;
    v30 = (__int128 *)(v29 + v14);
    v31 = (__int128 *)(v29 + 16 * v17);
    if (v19 < 8)
    {
      if (v19 == 7)
      {
        if ((v63 & ~(v60 - v59)) - (_DWORD)v17 + (((_BYTE)v60 - (_BYTE)v59) & 0xF) != -1)
        {
          v42 = 0;
          do
          {
            v43 = 0;
            v68 = *v22;
            v66 = *v31;
            do
            {
              if ((*((_BYTE *)&v69 + v43) & 0x10) != 0)
                v44 = (unint64_t)&v66;
              else
                v44 = (unint64_t)&v68;
              *((_BYTE *)&v67 + v43) = *(_BYTE *)(v44 & 0xFFFFFFFFFFFFFFF0 | *((_BYTE *)&v69 + v43) & 0xF);
              ++v43;
            }
            while (v43 != 16);
            if (a6)
              result = sub_215FE4918(8, (unsigned __int8 *)&v67, a4, a7, a8, a9, a10);
            else
              *(_QWORD *)a4 = v67;
            ++v22;
            ++v31;
            a4 += a5;
            ++v42;
          }
          while (v42 != v64);
        }
        if (v60 != v59)
        {
          v45 = 0;
          do
          {
            v46 = 0;
            v68 = *v21;
            v66 = *v30;
            do
            {
              if ((*((_BYTE *)&v69 + v46) & 0x10) != 0)
                v47 = (unint64_t)&v66;
              else
                v47 = (unint64_t)&v68;
              *((_BYTE *)&v67 + v46) = *(_BYTE *)(v47 & 0xFFFFFFFFFFFFFFF0 | *((_BYTE *)&v69 + v46) & 0xF);
              ++v46;
            }
            while (v46 != 16);
            if (a6)
              result = sub_215FE4918(8, (unsigned __int8 *)&v67, a4, a7, a8, a9, a10);
            else
              *(_QWORD *)a4 = v67;
            ++v21;
            ++v30;
            a4 += a5;
            v28 = v45++ == v63;
          }
          while (!v28);
        }
      }
      else
      {
        if ((v63 & ~(v60 - v59)) - (_DWORD)v17 + (((_BYTE)v60 - (_BYTE)v59) & 0xF) != -1)
        {
          v52 = 0;
          do
          {
            v53 = 0;
            v68 = *v22;
            v66 = *v31;
            do
            {
              if ((*((_BYTE *)&v69 + v53) & 0x10) != 0)
                v54 = (unint64_t)&v66;
              else
                v54 = (unint64_t)&v68;
              *((_BYTE *)&v67 + v53) = *(_BYTE *)(v54 & 0xFFFFFFFFFFFFFFF0 | *((_BYTE *)&v69 + v53) & 0xF);
              ++v53;
            }
            while (v53 != 16);
            if (a6)
              result = sub_215FE4918(4, (unsigned __int8 *)&v67, a4, a7, a8, a9, a10);
            else
              *(_DWORD *)a4 = v67;
            ++v22;
            ++v31;
            a4 += a5;
            ++v52;
          }
          while (v52 != v64);
        }
        if (v60 != v59)
        {
          v55 = 0;
          do
          {
            v56 = 0;
            v68 = *v21;
            v66 = *v30;
            do
            {
              if ((*((_BYTE *)&v69 + v56) & 0x10) != 0)
                v57 = (unint64_t)&v66;
              else
                v57 = (unint64_t)&v68;
              *((_BYTE *)&v67 + v56) = *(_BYTE *)(v57 & 0xFFFFFFFFFFFFFFF0 | *((_BYTE *)&v69 + v56) & 0xF);
              ++v56;
            }
            while (v56 != 16);
            if (a6)
              result = sub_215FE4918(4, (unsigned __int8 *)&v67, a4, a7, a8, a9, a10);
            else
              *(_DWORD *)a4 = v67;
            ++v21;
            ++v30;
            a4 += a5;
            v28 = v55++ == v63;
          }
          while (!v28);
        }
      }
    }
    else
    {
      if ((v63 & ~(v60 - v59)) - (_DWORD)v17 + (((_BYTE)v60 - (_BYTE)v59) & 0xF) != -1)
      {
        v32 = 0;
        do
        {
          v33 = 0;
          v68 = *v22;
          v66 = *v31;
          do
          {
            if ((*((_BYTE *)&v69 + v33) & 0x10) != 0)
              v34 = (unint64_t)&v66;
            else
              v34 = (unint64_t)&v68;
            *((_BYTE *)&v67 + v33) = *(_BYTE *)(v34 & 0xFFFFFFFFFFFFFFF0 | *((_BYTE *)&v69 + v33) & 0xF);
            ++v33;
          }
          while (v33 != 16);
          if (a6)
            result = sub_215FE4918(16, (unsigned __int8 *)&v67, a4, a7, a8, a9, a10);
          else
            *(_OWORD *)a4 = v67;
          ++v22;
          ++v31;
          a4 += a5;
          ++v32;
        }
        while (v32 != v64);
      }
      if (v60 != v59)
      {
        v35 = 0;
        do
        {
          v36 = 0;
          v68 = *v21;
          v66 = *v30;
          do
          {
            if ((*((_BYTE *)&v69 + v36) & 0x10) != 0)
              v37 = (unint64_t)&v66;
            else
              v37 = (unint64_t)&v68;
            *((_BYTE *)&v67 + v36) = *(_BYTE *)(v37 & 0xFFFFFFFFFFFFFFF0 | *((_BYTE *)&v69 + v36) & 0xF);
            ++v36;
          }
          while (v36 != 16);
          if (a6)
            result = sub_215FE4918(16, (unsigned __int8 *)&v67, a4, a7, a8, a9, a10);
          else
            *(_OWORD *)a4 = v67;
          ++v21;
          ++v30;
          a4 += a5;
          v28 = v35++ == v63;
        }
        while (!v28);
      }
    }
  }
  return result;
}

uint64_t sub_215FDF60C(uint64_t a1, int *a2, unsigned int a3, uint64_t a4, unsigned int a5, int a6, int a7, uint64_t a8, _DWORD *a9, int a10)
{
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t result;
  uint64_t v37;
  unsigned int v38;
  unsigned int v39;
  char *v40;
  int16x8_t v41;
  __int128 v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t i7;
  unint64_t v48;
  uint8x16_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t i;
  uint8x16_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t nn;
  unint64_t v58;
  uint8x16_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t m;
  uint8x16_t v63;
  int v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t i6;
  unint64_t v70;
  uint8x16_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t i3;
  unint64_t v76;
  uint8x16_t v77;
  int v78;
  int v79;
  uint64_t v80;
  char *v81;
  uint64_t j;
  uint8x16_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t jj;
  uint8x16_t v88;
  int v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t i1;
  unint64_t v95;
  uint8x8_t v96;
  int v97;
  uint64_t v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t i4;
  unint64_t v103;
  int16x8_t v104;
  uint8x8_t v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  char *v109;
  uint64_t i8;
  unint64_t v111;
  uint8x16_t v112;
  BOOL v113;
  int v114;
  int v115;
  uint64_t v116;
  char *v117;
  uint64_t n;
  uint8x8_t v119;
  uint64_t v120;
  int v121;
  int v122;
  uint64_t v123;
  char *v124;
  uint64_t kk;
  int16x8_t v126;
  uint8x8_t v127;
  uint64_t v128;
  unint64_t v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t k;
  uint8x16_t v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  char *v138;
  uint64_t i2;
  unint64_t v140;
  uint8x16_t v141;
  uint64_t v142;
  int v143;
  uint64_t v144;
  char *v145;
  uint64_t i5;
  unint64_t v147;
  uint8x16_t v148;
  unint64_t v149;
  int v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t ii;
  uint8x16_t v154;
  unint64_t v155;
  int v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t mm;
  uint8x16_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  unsigned int v176;
  unsigned int v177;
  unsigned int v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  int v182;
  int v183;
  int v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  int v196;
  __int128 *v199;
  __int128 *v201;
  __int128 v202;
  char v203;
  char v204;
  char v205;
  char v206;
  char v207;
  char v208;
  char v209;
  char v210;
  char v211;
  char v212;
  char v213;
  char v214;
  char v215;
  char v216;
  char v217;
  char v218;
  uint8x16_t v219;
  uint8x16_t v220;
  __int128 v221;
  uint8x16_t v222;
  char v223;
  char v224;
  char v225;
  char v226;
  char v227;
  char v228;
  char v229;
  char v230;
  char v231;
  char v232;
  char v233;
  char v234;
  char v235;
  char v236;
  char v237;
  char v238;
  __int128 v239;
  int16x8_t v240;
  uint64_t v241;

  v241 = *MEMORY[0x24BDAC8D0];
  v12 = a2[2];
  v13 = v12 + ((a3 & 0x80) >> 7);
  v14 = (a3 >> 4) & 1;
  v15 = v12 >> 4;
  v16 = *a2;
  v17 = *a2 + v14;
  v18 = a2[4];
  v19 = v18 + v14;
  v20 = v19 >> 4;
  v21 = *(unsigned int *)(a1 + 40);
  v22 = a2[6];
  v23 = v12 & 0xF;
  v24 = v22 + ((a3 & 0x80) >> 7);
  v25 = (a3 >> 6) & 1;
  v26 = v19 - v17;
  v27 = v16 + v25;
  v28 = v24 >> 4;
  v29 = v24 & 0xF;
  v30 = (v18 + v25) >> 4;
  v196 = v22 & 0xF;
  v31 = ((v24 >> 4) - (v12 >> 4)) & ((a3 & 0x80) >> 7);
  v32 = (v196 & ~(v15 - (v22 >> 4))) - (v12 & 0xF) + ((v15 - (v22 >> 4)) & 0xF) + 1;
  v33 = v32 - v31;
  v34 = *(_QWORD *)(a1 + 32);
  v35 = v34 + ((v15 + 2) * v21) + ((uint64_t)((v17 >> 4) + 2) << 10) + ((unint64_t)(a3 & 3) << 8);
  result = v34 + (((v13 >> 4) + 2) * v21) + ((uint64_t)((v27 >> 4) + 2) << 10) + ((a3 << 6) & 0x300);
  v192 = v35 + 16 * v23;
  v37 = 16 * (v13 & 0xFu);
  v201 = (__int128 *)(result + v37);
  v38 = __clz(v26 | 1);
  if (v18 == v16)
    v39 = v38 + 1;
  else
    v39 = v38;
  v40 = (char *)xmmword_2160EED8C + 7680 - (v39 << 8);
  v41 = *(int16x8_t *)&v40[16 * (v17 & 0xF)];
  v42 = *(_OWORD *)&v40[16 * (v27 & 0xF)];
  v239 = v42;
  v240 = v41;
  if (!((v20 - (v17 >> 4)) | (v30 - (v27 >> 4))))
  {
    if (v26 >= 8)
    {
      if (v32 == v31)
      {
        v50 = 0;
        if (v31)
        {
LABEL_24:
          v51 = 0;
          v223 = *(_BYTE *)(v192 + v50);
          v224 = *(_BYTE *)(v192 + v50 + 1);
          v225 = *(_BYTE *)(v192 + v50 + 2);
          v226 = *(_BYTE *)(v192 + v50 + 3);
          v227 = *(_BYTE *)(v192 + v50 + 4);
          v228 = *(_BYTE *)(v192 + v50 + 5);
          v229 = *(_BYTE *)(v192 + v50 + 6);
          v230 = *(_BYTE *)(v192 + v50 + 7);
          v231 = *(_BYTE *)(v192 + v50 + 8);
          v232 = *(_BYTE *)(v192 + v50 + 9);
          v233 = *(_BYTE *)(v192 + v50 + 10);
          v234 = *(_BYTE *)(v192 + v50 + 11);
          v235 = *(_BYTE *)(v192 + v50 + 12);
          v236 = *(_BYTE *)(v192 + v50 + 13);
          v237 = *(_BYTE *)(v192 + v50 + 14);
          v238 = *(_BYTE *)(v192 + v50 + 15);
          v221 = *v201;
          do
          {
            v222.i8[v51] = *(&v223 + (v240.i8[v51] & 0xF));
            ++v51;
          }
          while (v51 != 16);
          for (i = 0; i != 16; ++i)
            v220.i8[i] = *(_BYTE *)((unint64_t)&v221 | *((_BYTE *)&v239 + i) & 0xF);
          v53 = vrhaddq_u8(v222, v220);
          v219 = v53;
          if (a6)
          {
            result = sub_215FE4918(16, (unsigned __int8 *)&v219, (_BYTE *)a4, a7, a8, a9, a10);
            if (!v29)
              return result;
          }
          else
          {
            *(_BYTE *)a4 = v53.i8[0];
            *(_QWORD *)(a4 + 1) = *(uint64_t *)((char *)v219.i64 + 1);
            *(_DWORD *)(a4 + 9) = *(__int32 *)((char *)&v219.i32[2] + 1);
            *(_WORD *)(a4 + 13) = *(__int16 *)((char *)&v219.i16[6] + 1);
            *(_BYTE *)(a4 + 15) = v219.i8[15];
            if (!v29)
              return result;
          }
          ++v201;
          v84 = a5;
          a4 += a5;
          goto LABEL_202;
        }
      }
      else
      {
        v165 = result;
        v170 = v31;
        v173 = v24 & 0xF;
        LODWORD(v50) = 0;
        v78 = 0;
        if (v33 <= 1)
          v79 = 1;
        else
          v79 = v32 - v31;
        do
        {
          v80 = 0;
          v81 = (char *)(v192 + v50);
          v223 = *v81;
          v224 = v81[1];
          v225 = v81[2];
          v226 = v81[3];
          v227 = v81[4];
          v228 = v81[5];
          v229 = v81[6];
          v230 = v81[7];
          v231 = v81[8];
          v232 = v81[9];
          v233 = v81[10];
          v234 = v81[11];
          v235 = v81[12];
          v236 = v81[13];
          v237 = v81[14];
          v238 = v81[15];
          v221 = *(__int128 *)((char *)v201 + v50);
          do
          {
            v222.i8[v80] = *(&v223 + (v240.i8[v80] & 0xF));
            ++v80;
          }
          while (v80 != 16);
          for (j = 0; j != 16; ++j)
            v220.i8[j] = *(_BYTE *)((unint64_t)&v221 | *((_BYTE *)&v239 + j) & 0xF);
          v83 = vrhaddq_u8(v222, v220);
          v219 = v83;
          if (a6)
            result = sub_215FE4918(16, (unsigned __int8 *)&v219, (_BYTE *)a4, a7, a8, a9, a10);
          else
            *(uint8x16_t *)a4 = v83;
          v50 = (v50 + 16);
          a4 += a5;
          ++v78;
        }
        while (v78 != v79);
        if (v28 == v15)
          return result;
        v201 = (__int128 *)(v165 + v21);
        v29 = v173;
        if (v170)
          goto LABEL_24;
      }
      v84 = a5;
LABEL_202:
      v129 = 0;
      v130 = 0;
      v131 = v35 + v21;
      do
      {
        v132 = 0;
        v223 = *(_BYTE *)(v131 + v129);
        v224 = *(_BYTE *)(v131 + v129 + 1);
        v225 = *(_BYTE *)(v131 + v129 + 2);
        v226 = *(_BYTE *)(v131 + v129 + 3);
        v227 = *(_BYTE *)(v131 + v129 + 4);
        v228 = *(_BYTE *)(v131 + v129 + 5);
        v229 = *(_BYTE *)(v131 + v129 + 6);
        v230 = *(_BYTE *)(v131 + v129 + 7);
        v231 = *(_BYTE *)(v131 + v129 + 8);
        v232 = *(_BYTE *)(v131 + v129 + 9);
        v233 = *(_BYTE *)(v131 + v129 + 10);
        v234 = *(_BYTE *)(v131 + v129 + 11);
        v235 = *(_BYTE *)(v131 + v129 + 12);
        v236 = *(_BYTE *)(v131 + v129 + 13);
        v237 = *(_BYTE *)(v131 + v129 + 14);
        v238 = *(_BYTE *)(v131 + v129 + 15);
        v221 = v201[v129 / 0x10];
        do
        {
          v222.i8[v132] = *(&v223 + (v240.i8[v132] & 0xF));
          ++v132;
        }
        while (v132 != 16);
        for (k = 0; k != 16; ++k)
          v220.i8[k] = *(_BYTE *)((unint64_t)&v221 | *((_BYTE *)&v239 + k) & 0xF);
        v134 = vrhaddq_u8(v222, v220);
        v219 = v134;
        if (a6)
        {
          result = sub_215FE4918(16, (unsigned __int8 *)&v219, (_BYTE *)a4, a7, a8, a9, a10);
        }
        else
        {
          *(_BYTE *)a4 = v134.i8[0];
          *(_QWORD *)(a4 + 1) = *(uint64_t *)((char *)v219.i64 + 1);
          *(_DWORD *)(a4 + 9) = *(__int32 *)((char *)&v219.i32[2] + 1);
          *(_WORD *)(a4 + 13) = *(__int16 *)((char *)&v219.i16[6] + 1);
          *(_BYTE *)(a4 + 15) = v219.i8[15];
        }
        v129 += 16;
        a4 += v84;
        v113 = v130++ == v196;
      }
      while (!v113);
      return result;
    }
    if (v26 == 7)
    {
      if (v32 == v31)
      {
        v60 = 0;
        if (v31)
        {
LABEL_50:
          v61 = 0;
          v223 = *(_BYTE *)(v192 + v60);
          v224 = *(_BYTE *)(v192 + v60 + 1);
          v225 = *(_BYTE *)(v192 + v60 + 2);
          v226 = *(_BYTE *)(v192 + v60 + 3);
          v227 = *(_BYTE *)(v192 + v60 + 4);
          v228 = *(_BYTE *)(v192 + v60 + 5);
          v229 = *(_BYTE *)(v192 + v60 + 6);
          v230 = *(_BYTE *)(v192 + v60 + 7);
          v231 = *(_BYTE *)(v192 + v60 + 8);
          v232 = *(_BYTE *)(v192 + v60 + 9);
          v233 = *(_BYTE *)(v192 + v60 + 10);
          v234 = *(_BYTE *)(v192 + v60 + 11);
          v235 = *(_BYTE *)(v192 + v60 + 12);
          v236 = *(_BYTE *)(v192 + v60 + 13);
          v237 = *(_BYTE *)(v192 + v60 + 14);
          v238 = *(_BYTE *)(v192 + v60 + 15);
          v221 = *v201;
          do
          {
            v222.i8[v61] = *(&v223 + (v240.i8[v61] & 0xF));
            ++v61;
          }
          while (v61 != 16);
          for (m = 0; m != 16; ++m)
            v220.i8[m] = *(_BYTE *)((unint64_t)&v221 | *((_BYTE *)&v239 + m) & 0xF);
          v63 = vrhaddq_u8(v222, v220);
          v219 = v63;
          if (a6)
          {
            result = sub_215FE4918(8, (unsigned __int8 *)&v219, (_BYTE *)a4, a7, a8, a9, a10);
          }
          else
          {
            *(_BYTE *)a4 = v63.i8[0];
            *(_DWORD *)(a4 + 1) = *(__int32 *)((char *)v219.i32 + 1);
            *(_WORD *)(a4 + 5) = *(__int16 *)((char *)&v219.i16[2] + 1);
            *(_BYTE *)(a4 + 7) = v219.i8[7];
          }
          if (!v29)
            return result;
          ++v201;
          v120 = a5;
          a4 += a5;
          goto LABEL_254;
        }
      }
      else
      {
        v168 = result;
        v171 = v31;
        v174 = v24 & 0xF;
        LODWORD(v60) = 0;
        v114 = 0;
        if (v33 <= 1)
          v115 = 1;
        else
          v115 = v32 - v31;
        do
        {
          v116 = 0;
          v117 = (char *)(v192 + v60);
          v223 = *v117;
          v224 = v117[1];
          v225 = v117[2];
          v226 = v117[3];
          v227 = v117[4];
          v228 = v117[5];
          v229 = v117[6];
          v230 = v117[7];
          v231 = v117[8];
          v232 = v117[9];
          v233 = v117[10];
          v234 = v117[11];
          v235 = v117[12];
          v236 = v117[13];
          v237 = v117[14];
          v238 = v117[15];
          v221 = *(__int128 *)((char *)v201 + v60);
          do
          {
            v222.i8[v116] = *(&v223 + (v240.i8[v116] & 0xF));
            ++v116;
          }
          while (v116 != 16);
          for (n = 0; n != 16; ++n)
            v220.i8[n] = *(_BYTE *)((unint64_t)&v221 | *((_BYTE *)&v239 + n) & 0xF);
          v119 = vrhadd_u8(*(uint8x8_t *)v222.i8, *(uint8x8_t *)v220.i8);
          *(uint8x8_t *)v219.i8 = v119;
          v219.u64[1] = (unint64_t)vrhadd_u8((uint8x8_t)v222.u64[1], (uint8x8_t)v220.u64[1]);
          if (a6)
            result = sub_215FE4918(8, (unsigned __int8 *)&v219, (_BYTE *)a4, a7, a8, a9, a10);
          else
            *(uint8x8_t *)a4 = v119;
          v60 = (v60 + 16);
          a4 += a5;
          ++v114;
        }
        while (v114 != v115);
        if (v28 == v15)
          return result;
        v201 = (__int128 *)(v168 + v21);
        v29 = v174;
        if (v171)
          goto LABEL_50;
      }
      v120 = a5;
LABEL_254:
      v149 = 0;
      v150 = 0;
      v151 = v35 + v21;
      do
      {
        v152 = 0;
        v223 = *(_BYTE *)(v151 + v149);
        v224 = *(_BYTE *)(v151 + v149 + 1);
        v225 = *(_BYTE *)(v151 + v149 + 2);
        v226 = *(_BYTE *)(v151 + v149 + 3);
        v227 = *(_BYTE *)(v151 + v149 + 4);
        v228 = *(_BYTE *)(v151 + v149 + 5);
        v229 = *(_BYTE *)(v151 + v149 + 6);
        v230 = *(_BYTE *)(v151 + v149 + 7);
        v231 = *(_BYTE *)(v151 + v149 + 8);
        v232 = *(_BYTE *)(v151 + v149 + 9);
        v233 = *(_BYTE *)(v151 + v149 + 10);
        v234 = *(_BYTE *)(v151 + v149 + 11);
        v235 = *(_BYTE *)(v151 + v149 + 12);
        v236 = *(_BYTE *)(v151 + v149 + 13);
        v237 = *(_BYTE *)(v151 + v149 + 14);
        v238 = *(_BYTE *)(v151 + v149 + 15);
        v221 = v201[v149 / 0x10];
        do
        {
          v222.i8[v152] = *(&v223 + (v240.i8[v152] & 0xF));
          ++v152;
        }
        while (v152 != 16);
        for (ii = 0; ii != 16; ++ii)
          v220.i8[ii] = *(_BYTE *)((unint64_t)&v221 | *((_BYTE *)&v239 + ii) & 0xF);
        v154 = vrhaddq_u8(v222, v220);
        v219 = v154;
        if (a6)
        {
          result = sub_215FE4918(8, (unsigned __int8 *)&v219, (_BYTE *)a4, a7, a8, a9, a10);
        }
        else
        {
          *(_BYTE *)a4 = v154.i8[0];
          *(_DWORD *)(a4 + 1) = *(__int32 *)((char *)v219.i32 + 1);
          *(_WORD *)(a4 + 5) = *(__int16 *)((char *)&v219.i16[2] + 1);
          *(_BYTE *)(a4 + 7) = v219.i8[7];
        }
        v149 += 16;
        a4 += v120;
        v113 = v150++ == v196;
      }
      while (!v113);
      return result;
    }
    if (v32 == v31)
    {
      v85 = 0;
      if (v31)
      {
LABEL_107:
        v86 = 0;
        v223 = *(_BYTE *)(v192 + v85);
        v224 = *(_BYTE *)(v192 + v85 + 1);
        v225 = *(_BYTE *)(v192 + v85 + 2);
        v226 = *(_BYTE *)(v192 + v85 + 3);
        v227 = *(_BYTE *)(v192 + v85 + 4);
        v228 = *(_BYTE *)(v192 + v85 + 5);
        v229 = *(_BYTE *)(v192 + v85 + 6);
        v230 = *(_BYTE *)(v192 + v85 + 7);
        v231 = *(_BYTE *)(v192 + v85 + 8);
        v232 = *(_BYTE *)(v192 + v85 + 9);
        v233 = *(_BYTE *)(v192 + v85 + 10);
        v234 = *(_BYTE *)(v192 + v85 + 11);
        v235 = *(_BYTE *)(v192 + v85 + 12);
        v236 = *(_BYTE *)(v192 + v85 + 13);
        v237 = *(_BYTE *)(v192 + v85 + 14);
        v238 = *(_BYTE *)(v192 + v85 + 15);
        v221 = *v201;
        do
        {
          v222.i8[v86] = *(&v223 + (v240.i8[v86] & 0xF));
          ++v86;
        }
        while (v86 != 16);
        for (jj = 0; jj != 16; ++jj)
          v220.i8[jj] = *(_BYTE *)((unint64_t)&v221 | *((_BYTE *)&v239 + jj) & 0xF);
        v88 = vrhaddq_u8(v222, v220);
        v219 = v88;
        if (a6)
        {
          result = sub_215FE4918(4, (unsigned __int8 *)&v219, (_BYTE *)a4, a7, a8, a9, a10);
        }
        else
        {
          *(_BYTE *)a4 = v88.i8[0];
          *(_WORD *)(a4 + 1) = *(__int16 *)((char *)v219.i16 + 1);
          *(_BYTE *)(a4 + 3) = v219.i8[3];
        }
        if (!v29)
          return result;
        ++v201;
        v128 = a5;
        a4 += a5;
        goto LABEL_268;
      }
    }
    else
    {
      v169 = result;
      v172 = v31;
      v175 = v24 & 0xF;
      LODWORD(v85) = 0;
      v121 = 0;
      if (v33 <= 1)
        v122 = 1;
      else
        v122 = v32 - v31;
      do
      {
        v123 = 0;
        v124 = (char *)(v192 + v85);
        v223 = *v124;
        v224 = v124[1];
        v225 = v124[2];
        v226 = v124[3];
        v227 = v124[4];
        v228 = v124[5];
        v229 = v124[6];
        v230 = v124[7];
        v231 = v124[8];
        v232 = v124[9];
        v233 = v124[10];
        v234 = v124[11];
        v235 = v124[12];
        v236 = v124[13];
        v237 = v124[14];
        v238 = v124[15];
        v221 = *(__int128 *)((char *)v201 + v85);
        do
        {
          v222.i8[v123] = *(&v223 + (v240.i8[v123] & 0xF));
          ++v123;
        }
        while (v123 != 16);
        for (kk = 0; kk != 16; ++kk)
          v220.i8[kk] = *(_BYTE *)((unint64_t)&v221 | *((_BYTE *)&v239 + kk) & 0xF);
        LODWORD(v42) = v222.i32[0];
        v126 = (int16x8_t)vmovl_u8(*(uint8x8_t *)&v42);
        v41.i32[0] = v220.i32[0];
        *(uint16x4_t *)v126.i8 = vrhadd_u16(*(uint16x4_t *)v126.i8, (uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v41.i8));
        v219.i32[0] = vmovn_s16(v126).u32[0];
        v127 = vrhadd_u8(*(uint8x8_t *)((char *)v222.i64 + 4), *(uint8x8_t *)((char *)v220.i64 + 4));
        *(uint8x8_t *)((char *)v219.i64 + 4) = v127;
        v127.i32[0] = v222.i32[3];
        v41 = (int16x8_t)vmovl_u8(v127);
        *(uint16x4_t *)v41.i8 = vrhadd_u16(*(uint16x4_t *)v41.i8, (uint16x4_t)*(_OWORD *)&vmovl_u8((uint8x8_t)__PAIR64__(v220.u32[2], v220.u32[3])));
        *(int8x8_t *)v41.i8 = vmovn_s16(v41);
        v219.i32[3] = v41.i32[0];
        if (a6)
        {
          result = sub_215FE4918(4, (unsigned __int8 *)&v219, (_BYTE *)a4, a7, a8, a9, a10);
        }
        else
        {
          *(int8x8_t *)&v42 = vmovn_s16(v126);
          *(_DWORD *)a4 = v42;
        }
        v85 = (v85 + 16);
        a4 += a5;
        ++v121;
      }
      while (v121 != v122);
      if (v28 == v15)
        return result;
      v201 = (__int128 *)(v169 + v21);
      v29 = v175;
      if (v172)
        goto LABEL_107;
    }
    v128 = a5;
LABEL_268:
    v155 = 0;
    v156 = 0;
    v157 = v35 + v21;
    do
    {
      v158 = 0;
      v223 = *(_BYTE *)(v157 + v155);
      v224 = *(_BYTE *)(v157 + v155 + 1);
      v225 = *(_BYTE *)(v157 + v155 + 2);
      v226 = *(_BYTE *)(v157 + v155 + 3);
      v227 = *(_BYTE *)(v157 + v155 + 4);
      v228 = *(_BYTE *)(v157 + v155 + 5);
      v229 = *(_BYTE *)(v157 + v155 + 6);
      v230 = *(_BYTE *)(v157 + v155 + 7);
      v231 = *(_BYTE *)(v157 + v155 + 8);
      v232 = *(_BYTE *)(v157 + v155 + 9);
      v233 = *(_BYTE *)(v157 + v155 + 10);
      v234 = *(_BYTE *)(v157 + v155 + 11);
      v235 = *(_BYTE *)(v157 + v155 + 12);
      v236 = *(_BYTE *)(v157 + v155 + 13);
      v237 = *(_BYTE *)(v157 + v155 + 14);
      v238 = *(_BYTE *)(v157 + v155 + 15);
      v221 = v201[v155 / 0x10];
      do
      {
        v222.i8[v158] = *(&v223 + (v240.i8[v158] & 0xF));
        ++v158;
      }
      while (v158 != 16);
      for (mm = 0; mm != 16; ++mm)
        v220.i8[mm] = *(_BYTE *)((unint64_t)&v221 | *((_BYTE *)&v239 + mm) & 0xF);
      v160 = vrhaddq_u8(v222, v220);
      v219 = v160;
      if (a6)
      {
        result = sub_215FE4918(4, (unsigned __int8 *)&v219, (_BYTE *)a4, a7, a8, a9, a10);
      }
      else
      {
        *(_BYTE *)a4 = v160.i8[0];
        *(_WORD *)(a4 + 1) = *(__int16 *)((char *)v219.i16 + 1);
        *(_BYTE *)(a4 + 3) = v219.i8[3];
      }
      v155 += 16;
      a4 += v128;
      v113 = v156++ == v196;
    }
    while (!v113);
    return result;
  }
  v43 = v35 + 1024;
  v188 = v35 + 1024 + 16 * v23;
  v199 = (__int128 *)(result + 1024 + v37);
  if (v26 < 8)
  {
    if (v26 == 7)
    {
      if (v32 == v31)
      {
        v54 = 0;
        if (v31)
        {
LABEL_34:
          v55 = 0;
          v223 = *(_BYTE *)(v192 + v54);
          v224 = *(_BYTE *)(v192 + v54 + 1);
          v225 = *(_BYTE *)(v192 + v54 + 2);
          v226 = *(_BYTE *)(v192 + v54 + 3);
          v227 = *(_BYTE *)(v192 + v54 + 4);
          v228 = *(_BYTE *)(v192 + v54 + 5);
          v229 = *(_BYTE *)(v192 + v54 + 6);
          v230 = *(_BYTE *)(v192 + v54 + 7);
          v231 = *(_BYTE *)(v192 + v54 + 8);
          v232 = *(_BYTE *)(v192 + v54 + 9);
          v233 = *(_BYTE *)(v192 + v54 + 10);
          v234 = *(_BYTE *)(v192 + v54 + 11);
          v235 = *(_BYTE *)(v192 + v54 + 12);
          v236 = *(_BYTE *)(v192 + v54 + 13);
          v237 = *(_BYTE *)(v192 + v54 + 14);
          v238 = *(_BYTE *)(v192 + v54 + 15);
          v203 = *(_BYTE *)(v188 + v54);
          v204 = *(_BYTE *)(v188 + v54 + 1);
          v205 = *(_BYTE *)(v188 + v54 + 2);
          v206 = *(_BYTE *)(v188 + v54 + 3);
          v207 = *(_BYTE *)(v188 + v54 + 4);
          v208 = *(_BYTE *)(v188 + v54 + 5);
          v209 = *(_BYTE *)(v188 + v54 + 6);
          v210 = *(_BYTE *)(v188 + v54 + 7);
          v211 = *(_BYTE *)(v188 + v54 + 8);
          v212 = *(_BYTE *)(v188 + v54 + 9);
          v213 = *(_BYTE *)(v188 + v54 + 10);
          v214 = *(_BYTE *)(v188 + v54 + 11);
          v215 = *(_BYTE *)(v188 + v54 + 12);
          v216 = *(_BYTE *)(v188 + v54 + 13);
          v217 = *(_BYTE *)(v188 + v54 + 14);
          v218 = *(_BYTE *)(v188 + v54 + 15);
          v221 = *v201;
          v202 = *v199;
          do
          {
            if ((v240.i8[v55] & 0x10) != 0)
              v56 = &v203;
            else
              v56 = &v223;
            v222.i8[v55] = v56[v240.i8[v55] & 0xF];
            ++v55;
          }
          while (v55 != 16);
          for (nn = 0; nn != 16; ++nn)
          {
            if ((*((_BYTE *)&v239 + nn) & 0x10) != 0)
              v58 = (unint64_t)&v202;
            else
              v58 = (unint64_t)&v221;
            v220.i8[nn] = *(_BYTE *)(v58 & 0xFFFFFFFFFFFFFFF0 | *((_BYTE *)&v239 + nn) & 0xF);
          }
          v59 = vrhaddq_u8(v222, v220);
          v219 = v59;
          if (a6)
          {
            result = sub_215FE4918(8, (unsigned __int8 *)&v219, (_BYTE *)a4, a7, a8, a9, a10);
            if (!v29)
              return result;
          }
          else
          {
            *(_BYTE *)a4 = v59.i8[0];
            *(_DWORD *)(a4 + 1) = *(__int32 *)((char *)v219.i32 + 1);
            *(_WORD *)(a4 + 5) = *(__int16 *)((char *)&v219.i16[2] + 1);
            *(_BYTE *)(a4 + 7) = v219.i8[7];
            if (!v29)
              return result;
          }
          ++v201;
          ++v199;
          v190 = a5;
          a4 += a5;
          goto LABEL_215;
        }
      }
      else
      {
        v162 = result + 1024;
        v166 = result;
        LODWORD(v54) = 0;
        v89 = 0;
        if (v33 <= 1)
          v33 = 1;
        v177 = v33;
        do
        {
          v90 = 0;
          v91 = (char *)(v192 + v54);
          v223 = *v91;
          v224 = v91[1];
          v225 = v91[2];
          v226 = v91[3];
          v227 = v91[4];
          v228 = v91[5];
          v229 = v91[6];
          v230 = v91[7];
          v231 = v91[8];
          v232 = v91[9];
          v233 = v91[10];
          v234 = v91[11];
          v235 = v91[12];
          v236 = v91[13];
          v237 = v91[14];
          v238 = v91[15];
          v92 = (char *)(v188 + v54);
          v203 = *v92;
          v204 = v92[1];
          v205 = v92[2];
          v206 = v92[3];
          v207 = v92[4];
          v208 = v92[5];
          v209 = v92[6];
          v210 = v92[7];
          v211 = v92[8];
          v212 = v92[9];
          v213 = v92[10];
          v214 = v92[11];
          v215 = v92[12];
          v216 = v92[13];
          v217 = v92[14];
          v218 = v92[15];
          v221 = *(__int128 *)((char *)v201 + v54);
          v202 = *(__int128 *)((char *)v199 + v54);
          do
          {
            if ((v240.i8[v90] & 0x10) != 0)
              v93 = &v203;
            else
              v93 = &v223;
            v222.i8[v90] = v93[v240.i8[v90] & 0xF];
            ++v90;
          }
          while (v90 != 16);
          for (i1 = 0; i1 != 16; ++i1)
          {
            if ((*((_BYTE *)&v239 + i1) & 0x10) != 0)
              v95 = (unint64_t)&v202;
            else
              v95 = (unint64_t)&v221;
            v220.i8[i1] = *(_BYTE *)(v95 & 0xFFFFFFFFFFFFFFF0 | *((_BYTE *)&v239 + i1) & 0xF);
          }
          v96 = vrhadd_u8(*(uint8x8_t *)v222.i8, *(uint8x8_t *)v220.i8);
          *(uint8x8_t *)v219.i8 = v96;
          v219.u64[1] = (unint64_t)vrhadd_u8((uint8x8_t)v222.u64[1], (uint8x8_t)v220.u64[1]);
          if (a6)
          {
            v183 = v54;
            result = sub_215FE4918(8, (unsigned __int8 *)&v219, (_BYTE *)a4, a7, a8, a9, a10);
            LODWORD(v54) = v183;
          }
          else
          {
            *(uint8x8_t *)a4 = v96;
          }
          v54 = (v54 + 16);
          a4 += a5;
          ++v89;
        }
        while (v89 != v177);
        v43 = v35 + 1024;
        if (v28 == v15)
          return result;
        v201 = (__int128 *)(v166 + v21);
        v199 = (__int128 *)(v162 + v21);
        if (v31)
          goto LABEL_34;
      }
      v190 = a5;
LABEL_215:
      v135 = 0;
      v136 = 0;
      v186 = v35 + v21;
      v180 = v43 + v21;
      do
      {
        v137 = 0;
        v223 = *(_BYTE *)(v186 + v135);
        v224 = *(_BYTE *)(v186 + v135 + 1);
        v225 = *(_BYTE *)(v186 + v135 + 2);
        v226 = *(_BYTE *)(v186 + v135 + 3);
        v227 = *(_BYTE *)(v186 + v135 + 4);
        v228 = *(_BYTE *)(v186 + v135 + 5);
        v229 = *(_BYTE *)(v186 + v135 + 6);
        v230 = *(_BYTE *)(v186 + v135 + 7);
        v231 = *(_BYTE *)(v186 + v135 + 8);
        v232 = *(_BYTE *)(v186 + v135 + 9);
        v233 = *(_BYTE *)(v186 + v135 + 10);
        v234 = *(_BYTE *)(v186 + v135 + 11);
        v235 = *(_BYTE *)(v186 + v135 + 12);
        v236 = *(_BYTE *)(v186 + v135 + 13);
        v237 = *(_BYTE *)(v186 + v135 + 14);
        v238 = *(_BYTE *)(v186 + v135 + 15);
        v203 = *(_BYTE *)(v180 + v135);
        v204 = *(_BYTE *)(v180 + v135 + 1);
        v205 = *(_BYTE *)(v180 + v135 + 2);
        v206 = *(_BYTE *)(v180 + v135 + 3);
        v207 = *(_BYTE *)(v180 + v135 + 4);
        v208 = *(_BYTE *)(v180 + v135 + 5);
        v209 = *(_BYTE *)(v180 + v135 + 6);
        v210 = *(_BYTE *)(v180 + v135 + 7);
        v211 = *(_BYTE *)(v180 + v135 + 8);
        v212 = *(_BYTE *)(v180 + v135 + 9);
        v213 = *(_BYTE *)(v180 + v135 + 10);
        v214 = *(_BYTE *)(v180 + v135 + 11);
        v215 = *(_BYTE *)(v180 + v135 + 12);
        v216 = *(_BYTE *)(v180 + v135 + 13);
        v217 = *(_BYTE *)(v180 + v135 + 14);
        v218 = *(_BYTE *)(v180 + v135 + 15);
        v221 = *(__int128 *)((char *)v201 + v135);
        v202 = *(__int128 *)((char *)v199 + v135);
        do
        {
          if ((v240.i8[v137] & 0x10) != 0)
            v138 = &v203;
          else
            v138 = &v223;
          v222.i8[v137] = v138[v240.i8[v137] & 0xF];
          ++v137;
        }
        while (v137 != 16);
        for (i2 = 0; i2 != 16; ++i2)
        {
          if ((*((_BYTE *)&v239 + i2) & 0x10) != 0)
            v140 = (unint64_t)&v202;
          else
            v140 = (unint64_t)&v221;
          v220.i8[i2] = *(_BYTE *)(v140 & 0xFFFFFFFFFFFFFFF0 | *((_BYTE *)&v239 + i2) & 0xF);
        }
        v141 = vrhaddq_u8(v222, v220);
        v219 = v141;
        if (a6)
        {
          v194 = v135;
          result = sub_215FE4918(8, (unsigned __int8 *)&v219, (_BYTE *)a4, a7, a8, a9, a10);
          v135 = v194;
        }
        else
        {
          *(_BYTE *)a4 = v141.i8[0];
          *(_DWORD *)(a4 + 1) = *(__int32 *)((char *)v219.i32 + 1);
          *(_WORD *)(a4 + 5) = *(__int16 *)((char *)&v219.i16[2] + 1);
          *(_BYTE *)(a4 + 7) = v219.i8[7];
        }
        v135 += 16;
        a4 += v190;
        v113 = v136++ == v196;
      }
      while (!v113);
      return result;
    }
    if (v32 == v31)
    {
      v72 = 0;
      if (v31)
      {
LABEL_78:
        v73 = 0;
        v223 = *(_BYTE *)(v192 + v72);
        v224 = *(_BYTE *)(v192 + v72 + 1);
        v225 = *(_BYTE *)(v192 + v72 + 2);
        v226 = *(_BYTE *)(v192 + v72 + 3);
        v227 = *(_BYTE *)(v192 + v72 + 4);
        v228 = *(_BYTE *)(v192 + v72 + 5);
        v229 = *(_BYTE *)(v192 + v72 + 6);
        v230 = *(_BYTE *)(v192 + v72 + 7);
        v231 = *(_BYTE *)(v192 + v72 + 8);
        v232 = *(_BYTE *)(v192 + v72 + 9);
        v233 = *(_BYTE *)(v192 + v72 + 10);
        v234 = *(_BYTE *)(v192 + v72 + 11);
        v235 = *(_BYTE *)(v192 + v72 + 12);
        v236 = *(_BYTE *)(v192 + v72 + 13);
        v237 = *(_BYTE *)(v192 + v72 + 14);
        v238 = *(_BYTE *)(v192 + v72 + 15);
        v203 = *(_BYTE *)(v188 + v72);
        v204 = *(_BYTE *)(v188 + v72 + 1);
        v205 = *(_BYTE *)(v188 + v72 + 2);
        v206 = *(_BYTE *)(v188 + v72 + 3);
        v207 = *(_BYTE *)(v188 + v72 + 4);
        v208 = *(_BYTE *)(v188 + v72 + 5);
        v209 = *(_BYTE *)(v188 + v72 + 6);
        v210 = *(_BYTE *)(v188 + v72 + 7);
        v211 = *(_BYTE *)(v188 + v72 + 8);
        v212 = *(_BYTE *)(v188 + v72 + 9);
        v213 = *(_BYTE *)(v188 + v72 + 10);
        v214 = *(_BYTE *)(v188 + v72 + 11);
        v215 = *(_BYTE *)(v188 + v72 + 12);
        v216 = *(_BYTE *)(v188 + v72 + 13);
        v217 = *(_BYTE *)(v188 + v72 + 14);
        v218 = *(_BYTE *)(v188 + v72 + 15);
        v221 = *v201;
        v202 = *v199;
        do
        {
          if ((v240.i8[v73] & 0x10) != 0)
            v74 = &v203;
          else
            v74 = &v223;
          v222.i8[v73] = v74[v240.i8[v73] & 0xF];
          ++v73;
        }
        while (v73 != 16);
        for (i3 = 0; i3 != 16; ++i3)
        {
          if ((*((_BYTE *)&v239 + i3) & 0x10) != 0)
            v76 = (unint64_t)&v202;
          else
            v76 = (unint64_t)&v221;
          v220.i8[i3] = *(_BYTE *)(v76 & 0xFFFFFFFFFFFFFFF0 | *((_BYTE *)&v239 + i3) & 0xF);
        }
        v77 = vrhaddq_u8(v222, v220);
        v219 = v77;
        if (a6)
        {
          result = sub_215FE4918(4, (unsigned __int8 *)&v219, (_BYTE *)a4, a7, a8, a9, a10);
          if (!v29)
            return result;
        }
        else
        {
          *(_BYTE *)a4 = v77.i8[0];
          *(_WORD *)(a4 + 1) = *(__int16 *)((char *)v219.i16 + 1);
          *(_BYTE *)(a4 + 3) = v219.i8[3];
          if (!v29)
            return result;
        }
        ++v201;
        ++v199;
        v191 = a5;
        a4 += a5;
        goto LABEL_234;
      }
    }
    else
    {
      v163 = result + 1024;
      v167 = result;
      LODWORD(v72) = 0;
      v97 = 0;
      if (v33 <= 1)
        v33 = 1;
      v178 = v33;
      do
      {
        v98 = 0;
        v99 = (char *)(v192 + v72);
        v223 = *v99;
        v224 = v99[1];
        v225 = v99[2];
        v226 = v99[3];
        v227 = v99[4];
        v228 = v99[5];
        v229 = v99[6];
        v230 = v99[7];
        v231 = v99[8];
        v232 = v99[9];
        v233 = v99[10];
        v234 = v99[11];
        v235 = v99[12];
        v236 = v99[13];
        v237 = v99[14];
        v238 = v99[15];
        v100 = (char *)(v188 + v72);
        v203 = *v100;
        v204 = v100[1];
        v205 = v100[2];
        v206 = v100[3];
        v207 = v100[4];
        v208 = v100[5];
        v209 = v100[6];
        v210 = v100[7];
        v211 = v100[8];
        v212 = v100[9];
        v213 = v100[10];
        v214 = v100[11];
        v215 = v100[12];
        v216 = v100[13];
        v217 = v100[14];
        v218 = v100[15];
        v221 = *(__int128 *)((char *)v201 + v72);
        v202 = *(__int128 *)((char *)v199 + v72);
        do
        {
          if ((v240.i8[v98] & 0x10) != 0)
            v101 = &v203;
          else
            v101 = &v223;
          v222.i8[v98] = v101[v240.i8[v98] & 0xF];
          ++v98;
        }
        while (v98 != 16);
        for (i4 = 0; i4 != 16; ++i4)
        {
          if ((*((_BYTE *)&v239 + i4) & 0x10) != 0)
            v103 = (unint64_t)&v202;
          else
            v103 = (unint64_t)&v221;
          v220.i8[i4] = *(_BYTE *)(v103 & 0xFFFFFFFFFFFFFFF0 | *((_BYTE *)&v239 + i4) & 0xF);
        }
        LODWORD(v42) = v222.i32[0];
        v104 = (int16x8_t)vmovl_u8(*(uint8x8_t *)&v42);
        v41.i32[0] = v220.i32[0];
        *(uint16x4_t *)v104.i8 = vrhadd_u16(*(uint16x4_t *)v104.i8, (uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v41.i8));
        v219.i32[0] = vmovn_s16(v104).u32[0];
        v105 = vrhadd_u8(*(uint8x8_t *)((char *)v222.i64 + 4), *(uint8x8_t *)((char *)v220.i64 + 4));
        *(uint8x8_t *)((char *)v219.i64 + 4) = v105;
        v105.i32[0] = v222.i32[3];
        v41 = (int16x8_t)vmovl_u8(v105);
        *(uint16x4_t *)v41.i8 = vrhadd_u16(*(uint16x4_t *)v41.i8, (uint16x4_t)*(_OWORD *)&vmovl_u8((uint8x8_t)__PAIR64__(v220.u32[2], v220.u32[3])));
        *(int8x8_t *)v41.i8 = vmovn_s16(v41);
        v219.i32[3] = v41.i32[0];
        if (a6)
        {
          v184 = v72;
          result = sub_215FE4918(4, (unsigned __int8 *)&v219, (_BYTE *)a4, a7, a8, a9, a10);
          LODWORD(v72) = v184;
        }
        else
        {
          *(int8x8_t *)&v42 = vmovn_s16(v104);
          *(_DWORD *)a4 = v42;
        }
        v72 = (v72 + 16);
        a4 += a5;
        ++v97;
      }
      while (v97 != v178);
      v43 = v35 + 1024;
      if (v28 == v15)
        return result;
      v201 = (__int128 *)(v167 + v21);
      v199 = (__int128 *)(v163 + v21);
      if (v31)
        goto LABEL_78;
    }
    v191 = a5;
LABEL_234:
    v142 = 0;
    v143 = 0;
    v187 = v35 + v21;
    v181 = v43 + v21;
    do
    {
      v144 = 0;
      v223 = *(_BYTE *)(v187 + v142);
      v224 = *(_BYTE *)(v187 + v142 + 1);
      v225 = *(_BYTE *)(v187 + v142 + 2);
      v226 = *(_BYTE *)(v187 + v142 + 3);
      v227 = *(_BYTE *)(v187 + v142 + 4);
      v228 = *(_BYTE *)(v187 + v142 + 5);
      v229 = *(_BYTE *)(v187 + v142 + 6);
      v230 = *(_BYTE *)(v187 + v142 + 7);
      v231 = *(_BYTE *)(v187 + v142 + 8);
      v232 = *(_BYTE *)(v187 + v142 + 9);
      v233 = *(_BYTE *)(v187 + v142 + 10);
      v234 = *(_BYTE *)(v187 + v142 + 11);
      v235 = *(_BYTE *)(v187 + v142 + 12);
      v236 = *(_BYTE *)(v187 + v142 + 13);
      v237 = *(_BYTE *)(v187 + v142 + 14);
      v238 = *(_BYTE *)(v187 + v142 + 15);
      v203 = *(_BYTE *)(v181 + v142);
      v204 = *(_BYTE *)(v181 + v142 + 1);
      v205 = *(_BYTE *)(v181 + v142 + 2);
      v206 = *(_BYTE *)(v181 + v142 + 3);
      v207 = *(_BYTE *)(v181 + v142 + 4);
      v208 = *(_BYTE *)(v181 + v142 + 5);
      v209 = *(_BYTE *)(v181 + v142 + 6);
      v210 = *(_BYTE *)(v181 + v142 + 7);
      v211 = *(_BYTE *)(v181 + v142 + 8);
      v212 = *(_BYTE *)(v181 + v142 + 9);
      v213 = *(_BYTE *)(v181 + v142 + 10);
      v214 = *(_BYTE *)(v181 + v142 + 11);
      v215 = *(_BYTE *)(v181 + v142 + 12);
      v216 = *(_BYTE *)(v181 + v142 + 13);
      v217 = *(_BYTE *)(v181 + v142 + 14);
      v218 = *(_BYTE *)(v181 + v142 + 15);
      v221 = *(__int128 *)((char *)v201 + v142);
      v202 = *(__int128 *)((char *)v199 + v142);
      do
      {
        if ((v240.i8[v144] & 0x10) != 0)
          v145 = &v203;
        else
          v145 = &v223;
        v222.i8[v144] = v145[v240.i8[v144] & 0xF];
        ++v144;
      }
      while (v144 != 16);
      for (i5 = 0; i5 != 16; ++i5)
      {
        if ((*((_BYTE *)&v239 + i5) & 0x10) != 0)
          v147 = (unint64_t)&v202;
        else
          v147 = (unint64_t)&v221;
        v220.i8[i5] = *(_BYTE *)(v147 & 0xFFFFFFFFFFFFFFF0 | *((_BYTE *)&v239 + i5) & 0xF);
      }
      v148 = vrhaddq_u8(v222, v220);
      v219 = v148;
      if (a6)
      {
        v195 = v142;
        result = sub_215FE4918(4, (unsigned __int8 *)&v219, (_BYTE *)a4, a7, a8, a9, a10);
        v142 = v195;
      }
      else
      {
        *(_BYTE *)a4 = v148.i8[0];
        *(_WORD *)(a4 + 1) = *(__int16 *)((char *)v219.i16 + 1);
        *(_BYTE *)(a4 + 3) = v219.i8[3];
      }
      v142 += 16;
      a4 += v191;
      v113 = v143++ == v196;
    }
    while (!v113);
    return result;
  }
  if (v32 == v31)
  {
    v44 = 0;
    if (v31)
      goto LABEL_8;
    goto LABEL_75;
  }
  v161 = result + 1024;
  v164 = result;
  LODWORD(v44) = 0;
  v64 = 0;
  if (v33 <= 1)
    v33 = 1;
  v176 = v33;
  do
  {
    v65 = 0;
    v66 = (char *)(v192 + v44);
    v223 = *v66;
    v224 = v66[1];
    v225 = v66[2];
    v226 = v66[3];
    v227 = v66[4];
    v228 = v66[5];
    v229 = v66[6];
    v230 = v66[7];
    v231 = v66[8];
    v232 = v66[9];
    v233 = v66[10];
    v234 = v66[11];
    v235 = v66[12];
    v236 = v66[13];
    v237 = v66[14];
    v238 = v66[15];
    v67 = (char *)(v188 + v44);
    v203 = *v67;
    v204 = v67[1];
    v205 = v67[2];
    v206 = v67[3];
    v207 = v67[4];
    v208 = v67[5];
    v209 = v67[6];
    v210 = v67[7];
    v211 = v67[8];
    v212 = v67[9];
    v213 = v67[10];
    v214 = v67[11];
    v215 = v67[12];
    v216 = v67[13];
    v217 = v67[14];
    v218 = v67[15];
    v221 = *(__int128 *)((char *)v201 + v44);
    v202 = *(__int128 *)((char *)v199 + v44);
    do
    {
      if ((v240.i8[v65] & 0x10) != 0)
        v68 = &v203;
      else
        v68 = &v223;
      v222.i8[v65] = v68[v240.i8[v65] & 0xF];
      ++v65;
    }
    while (v65 != 16);
    for (i6 = 0; i6 != 16; ++i6)
    {
      if ((*((_BYTE *)&v239 + i6) & 0x10) != 0)
        v70 = (unint64_t)&v202;
      else
        v70 = (unint64_t)&v221;
      v220.i8[i6] = *(_BYTE *)(v70 & 0xFFFFFFFFFFFFFFF0 | *((_BYTE *)&v239 + i6) & 0xF);
    }
    v71 = vrhaddq_u8(v222, v220);
    v219 = v71;
    if (a6)
    {
      v182 = v44;
      result = sub_215FE4918(16, (unsigned __int8 *)&v219, (_BYTE *)a4, a7, a8, a9, a10);
      LODWORD(v44) = v182;
    }
    else
    {
      *(uint8x16_t *)a4 = v71;
    }
    v44 = (v44 + 16);
    a4 += a5;
    ++v64;
  }
  while (v64 != v176);
  v43 = v35 + 1024;
  if (v28 != v15)
  {
    v201 = (__int128 *)(v164 + v21);
    v199 = (__int128 *)(v161 + v21);
    if (v31)
    {
LABEL_8:
      v45 = 0;
      v223 = *(_BYTE *)(v192 + v44);
      v224 = *(_BYTE *)(v192 + v44 + 1);
      v225 = *(_BYTE *)(v192 + v44 + 2);
      v226 = *(_BYTE *)(v192 + v44 + 3);
      v227 = *(_BYTE *)(v192 + v44 + 4);
      v228 = *(_BYTE *)(v192 + v44 + 5);
      v229 = *(_BYTE *)(v192 + v44 + 6);
      v230 = *(_BYTE *)(v192 + v44 + 7);
      v231 = *(_BYTE *)(v192 + v44 + 8);
      v232 = *(_BYTE *)(v192 + v44 + 9);
      v233 = *(_BYTE *)(v192 + v44 + 10);
      v234 = *(_BYTE *)(v192 + v44 + 11);
      v235 = *(_BYTE *)(v192 + v44 + 12);
      v236 = *(_BYTE *)(v192 + v44 + 13);
      v237 = *(_BYTE *)(v192 + v44 + 14);
      v238 = *(_BYTE *)(v192 + v44 + 15);
      v203 = *(_BYTE *)(v188 + v44);
      v204 = *(_BYTE *)(v188 + v44 + 1);
      v205 = *(_BYTE *)(v188 + v44 + 2);
      v206 = *(_BYTE *)(v188 + v44 + 3);
      v207 = *(_BYTE *)(v188 + v44 + 4);
      v208 = *(_BYTE *)(v188 + v44 + 5);
      v209 = *(_BYTE *)(v188 + v44 + 6);
      v210 = *(_BYTE *)(v188 + v44 + 7);
      v211 = *(_BYTE *)(v188 + v44 + 8);
      v212 = *(_BYTE *)(v188 + v44 + 9);
      v213 = *(_BYTE *)(v188 + v44 + 10);
      v214 = *(_BYTE *)(v188 + v44 + 11);
      v215 = *(_BYTE *)(v188 + v44 + 12);
      v216 = *(_BYTE *)(v188 + v44 + 13);
      v217 = *(_BYTE *)(v188 + v44 + 14);
      v218 = *(_BYTE *)(v188 + v44 + 15);
      v221 = *v201;
      v202 = *v199;
      do
      {
        if ((v240.i8[v45] & 0x10) != 0)
          v46 = &v203;
        else
          v46 = &v223;
        v222.i8[v45] = v46[v240.i8[v45] & 0xF];
        ++v45;
      }
      while (v45 != 16);
      for (i7 = 0; i7 != 16; ++i7)
      {
        if ((*((_BYTE *)&v239 + i7) & 0x10) != 0)
          v48 = (unint64_t)&v202;
        else
          v48 = (unint64_t)&v221;
        v220.i8[i7] = *(_BYTE *)(v48 & 0xFFFFFFFFFFFFFFF0 | *((_BYTE *)&v239 + i7) & 0xF);
      }
      v49 = vrhaddq_u8(v222, v220);
      v219 = v49;
      if (a6)
      {
        result = sub_215FE4918(16, (unsigned __int8 *)&v219, (_BYTE *)a4, a7, a8, a9, a10);
        if (!v29)
          return result;
      }
      else
      {
        *(_BYTE *)a4 = v49.i8[0];
        *(_QWORD *)(a4 + 1) = *(uint64_t *)((char *)v219.i64 + 1);
        *(_DWORD *)(a4 + 9) = *(__int32 *)((char *)&v219.i32[2] + 1);
        *(_WORD *)(a4 + 13) = *(__int16 *)((char *)&v219.i16[6] + 1);
        *(_BYTE *)(a4 + 15) = v219.i8[15];
        if (!v29)
          return result;
      }
      ++v201;
      ++v199;
      v189 = a5;
      a4 += a5;
      goto LABEL_155;
    }
LABEL_75:
    v189 = a5;
LABEL_155:
    v106 = 0;
    v107 = 0;
    v185 = v35 + v21;
    v179 = v43 + v21;
    do
    {
      v108 = 0;
      v223 = *(_BYTE *)(v185 + v106);
      v224 = *(_BYTE *)(v185 + v106 + 1);
      v225 = *(_BYTE *)(v185 + v106 + 2);
      v226 = *(_BYTE *)(v185 + v106 + 3);
      v227 = *(_BYTE *)(v185 + v106 + 4);
      v228 = *(_BYTE *)(v185 + v106 + 5);
      v229 = *(_BYTE *)(v185 + v106 + 6);
      v230 = *(_BYTE *)(v185 + v106 + 7);
      v231 = *(_BYTE *)(v185 + v106 + 8);
      v232 = *(_BYTE *)(v185 + v106 + 9);
      v233 = *(_BYTE *)(v185 + v106 + 10);
      v234 = *(_BYTE *)(v185 + v106 + 11);
      v235 = *(_BYTE *)(v185 + v106 + 12);
      v236 = *(_BYTE *)(v185 + v106 + 13);
      v237 = *(_BYTE *)(v185 + v106 + 14);
      v238 = *(_BYTE *)(v185 + v106 + 15);
      v203 = *(_BYTE *)(v179 + v106);
      v204 = *(_BYTE *)(v179 + v106 + 1);
      v205 = *(_BYTE *)(v179 + v106 + 2);
      v206 = *(_BYTE *)(v179 + v106 + 3);
      v207 = *(_BYTE *)(v179 + v106 + 4);
      v208 = *(_BYTE *)(v179 + v106 + 5);
      v209 = *(_BYTE *)(v179 + v106 + 6);
      v210 = *(_BYTE *)(v179 + v106 + 7);
      v211 = *(_BYTE *)(v179 + v106 + 8);
      v212 = *(_BYTE *)(v179 + v106 + 9);
      v213 = *(_BYTE *)(v179 + v106 + 10);
      v214 = *(_BYTE *)(v179 + v106 + 11);
      v215 = *(_BYTE *)(v179 + v106 + 12);
      v216 = *(_BYTE *)(v179 + v106 + 13);
      v217 = *(_BYTE *)(v179 + v106 + 14);
      v218 = *(_BYTE *)(v179 + v106 + 15);
      v221 = *(__int128 *)((char *)v201 + v106);
      v202 = *(__int128 *)((char *)v199 + v106);
      do
      {
        if ((v240.i8[v108] & 0x10) != 0)
          v109 = &v203;
        else
          v109 = &v223;
        v222.i8[v108] = v109[v240.i8[v108] & 0xF];
        ++v108;
      }
      while (v108 != 16);
      for (i8 = 0; i8 != 16; ++i8)
      {
        if ((*((_BYTE *)&v239 + i8) & 0x10) != 0)
          v111 = (unint64_t)&v202;
        else
          v111 = (unint64_t)&v221;
        v220.i8[i8] = *(_BYTE *)(v111 & 0xFFFFFFFFFFFFFFF0 | *((_BYTE *)&v239 + i8) & 0xF);
      }
      v112 = vrhaddq_u8(v222, v220);
      v219 = v112;
      if (a6)
      {
        v193 = v106;
        result = sub_215FE4918(16, (unsigned __int8 *)&v219, (_BYTE *)a4, a7, a8, a9, a10);
        v106 = v193;
      }
      else
      {
        *(_BYTE *)a4 = v112.i8[0];
        *(_QWORD *)(a4 + 1) = *(uint64_t *)((char *)v219.i64 + 1);
        *(_DWORD *)(a4 + 9) = *(__int32 *)((char *)&v219.i32[2] + 1);
        *(_WORD *)(a4 + 13) = *(__int16 *)((char *)&v219.i16[6] + 1);
        *(_BYTE *)(a4 + 15) = v219.i8[15];
      }
      v106 += 16;
      a4 += v189;
      v113 = v107++ == v196;
    }
    while (!v113);
  }
  return result;
}

uint64_t sub_215FE2560(uint64_t a1, uint64_t a2, __int16 a3, __int16 a4)
{
  __n128 v4;
  __n128 v5;
  __n128 v6;
  __n128 v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  uint64_t v12;

  v4 = (__n128)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)(unsigned __int16)((8 - a4) * (8 - a3)), (int8x16_t)xmmword_2160EE800), (int8x16_t)xmmword_2160EE7C0), (int8x16_t)xmmword_2160EE7D0);
  v5 = (__n128)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)(unsigned __int16)((8 - a4) * a3), (int8x16_t)xmmword_2160EE800), (int8x16_t)xmmword_2160EE7C0), (int8x16_t)xmmword_2160EE7D0);
  v6 = (__n128)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)(unsigned __int16)((8 - a3) * a4), (int8x16_t)xmmword_2160EE800), (int8x16_t)xmmword_2160EE7C0), (int8x16_t)xmmword_2160EE7D0);
  v7 = (__n128)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)(unsigned __int16)(a4 * a3), (int8x16_t)xmmword_2160EE800), (int8x16_t)xmmword_2160EE7C0), (int8x16_t)xmmword_2160EE7D0);
  v8 = *(_DWORD *)(a2 + 4);
  v9 = *(unsigned __int16 *)(*(_QWORD *)(a1 + 1096) + 2 * (v8 >> 4) + 2);
  v10 = v9 >> 13;
  v11 = ((v9 >> 14) & 1) + ((v9 >> 13) & 1);
  v12 = v8 & 0xE;
  if ((v10 & 1) != 0)
  {
    if (v11 == 1)
      return ((uint64_t (*)(__n128, __n128, __n128, __n128))((char *)&loc_215FE27A4 + 4 * word_2160EEC14[v12]))(v4, v5, v6, v7);
    else
      return ((uint64_t (*)(__n128, __n128, __n128, __n128))((char *)sub_215FE2834 + 4 * word_2160EEBC8[v12]))(v4, v5, v6, v7);
  }
  else if (v11 == 1)
  {
    return ((uint64_t (*)(__n128, __n128, __n128, __n128))((char *)&loc_215FE2778 + 4 * word_2160EED04[v12]))(v4, v5, v6, v7);
  }
  else
  {
    return ((uint64_t (*)(__n128, __n128, __n128, __n128))((char *)&loc_215FE27F4 + 4 * word_2160EEC8C[v12]))(v4, v5, v6, v7);
  }
}

uint64_t sub_215FE2834@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t result;
  _DWORD *v10;
  unsigned int *v11;

  if (a1)
  {
    if (v4)
      v8 = v3;
    else
      v8 = 0;
    result = (v8 + 2 * *(_DWORD *)(v6 + 4));
  }
  else
  {
    result = *(unsigned int *)(v7 + 4);
  }
  v10 = (_DWORD *)(v6 + 8);
  v11 = (unsigned int *)(v7 + 8);
  if (v5 < 8)
  {
    if (v5 == 7)
    {
      if (v1)
      {
        if (!v4)
          v3 = 0;
        if (a1)
          return ((uint64_t (*)(_QWORD))((char *)sub_215FE35B0 + 4 * byte_2160EEBF5[v2]))((v3 + 2 * *v10));
        else
          return ((uint64_t (*)(_QWORD))((char *)sub_215FE35B0 + 4 * byte_2160EEBF5[v2]))(*v11);
      }
    }
    else if (v1)
    {
      if (!v4)
        v3 = 0;
      if (a1)
        return ((uint64_t (*)(_QWORD))((char *)sub_215FE36B0 + 4 * byte_2160EEBE6[v2]))((v3 + 2 * *v10));
      else
        return ((uint64_t (*)(_QWORD))((char *)sub_215FE36B0 + 4 * byte_2160EEBE6[v2]))(*v11);
    }
  }
  else if (v1)
  {
    if (!v4)
      v3 = 0;
    if (a1)
      return ((uint64_t (*)(_QWORD))((char *)sub_215FE347C + 4 * byte_2160EEC04[v2]))((v3 + 2 * *v10));
    else
      return ((uint64_t (*)(_QWORD))((char *)sub_215FE347C + 4 * byte_2160EEC04[v2]))(*v11);
  }
  return result;
}

void sub_215FE283C()
{
  JUMPOUT(0x215FE2884);
}

void sub_215FE2930(int16x8_t a1, int16x8_t a2, int16x8_t a3, int16x8_t a4, double a5, int16x8_t a6, int16x8_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int8x16_t *a13)
{
  int v13;
  int16x8_t v14;
  uint16x8_t v15;
  int16x8_t v16;
  int16x8_t v17;
  int8x16_t v18;
  int8x16_t v19;
  int8x16_t v20;

  v20 = vextq_s8(v19, v18, 2uLL);
  *a13 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(vmlaq_s16(vmulq_s16(a7, a1), a6, a2), (int16x8_t)vzip1q_s8(v19, a8), a3), (int16x8_t)vzip1q_s8(v20, a8), a4), v14), v15)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(vmlaq_s16(vmulq_s16(v17, a1), v16, a2), (int16x8_t)vzip2q_s8(v19, a8), a3), (int16x8_t)vzip2q_s8(v20, a8),
                                        a4),
                                      v14),
                        v15));
  if (v13 != 1)
    JUMPOUT(0x215FE28E8);
}

void sub_215FE29E4()
{
  JUMPOUT(0x215FE2980);
}

void sub_215FE2A60(int16x8_t a1, int16x8_t a2, int16x8_t a3, int16x8_t a4, double a5, int16x8_t a6, int16x8_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int8x8_t *a13)
{
  int v13;
  int16x8_t v14;
  uint16x8_t v15;
  int8x16_t v16;
  int8x16_t v17;

  *a13 = vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(vmlaq_s16(vmulq_s16(a7, a1), a6, a2), (int16x8_t)vzip1q_s8(v17, a8), a3), (int16x8_t)vzip1q_s8(vextq_s8(v17, v16, 2uLL), a8), a4), v14), v15));
  if (v13 != 1)
    JUMPOUT(0x215FE2A18);
}

void sub_215FE2AEC()
{
  JUMPOUT(0x215FE2AB0);
}

void sub_215FE2B60(int16x8_t a1, int16x8_t a2, int16x8_t a3, int16x8_t a4, double a5, int16x8_t a6, int16x8_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, _DWORD *a13)
{
  int v13;
  int16x8_t v14;
  uint16x8_t v15;
  int8x16_t v16;
  int8x16_t v17;

  *a13 = vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(vmlaq_s16(vmulq_s16(a7, a1), a6, a2), (int16x8_t)vzip1q_s8(v17, a8), a3), (int16x8_t)vzip1q_s8(vextq_s8(v17, v16, 2uLL), a8), a4), v14), v15)).u32[0];
  if (v13 != 1)
    JUMPOUT(0x215FE2B18);
}

void sub_215FE2BEC()
{
  JUMPOUT(0x215FE2BB0);
}

uint64_t sub_215FE2BF4@<X0>(int a1@<W8>)
{
  unsigned int *v1;
  _DWORD *v2;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;

  v1 = (unsigned int *)(v10 + 8);
  v2 = (_DWORD *)(v9 + 8);
  if (v8 < 8)
    JUMPOUT(0x215FE29ECLL);
  if (!v4)
    JUMPOUT(0x215FE3744);
  if (!v7)
    v6 = 0;
  if (a1)
    return ((uint64_t (*)(_QWORD))((char *)sub_215FE2930 + 4 * word_2160EED5E[v5]))((v6 + 2 * *v2));
  else
    return ((uint64_t (*)(_QWORD))((char *)sub_215FE2930 + 4 * word_2160EED5E[v5]))(*v1);
}

void sub_215FE2BFC()
{
  JUMPOUT(0x215FE2C44);
}

void sub_215FE2CE0(int16x8_t a1, int16x8_t a2, int16x8_t a3, int16x8_t a4, int16x8_t a5, int16x8_t a6, int8x16_t a7, int16x8_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int8x16_t *a13)
{
  int v13;
  uint16x8_t v14;
  int16x8_t v15;
  int16x8_t v16;
  int8x16_t v17;
  int8x16_t v18;
  int8x16_t v19;

  v19 = vextq_s8(v18, v17, 2uLL);
  *a13 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(vmlaq_s16(vmulq_s16(a6, a1), a5, a2), (int16x8_t)vzip1q_s8(v19, a7), a4), (int16x8_t)vzip1q_s8(v18, a7), a3), a8), v14)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(vmlaq_s16(vmulq_s16(v16, a1), v15, a2), (int16x8_t)vzip2q_s8(v19, a7), a4), (int16x8_t)vzip2q_s8(v18, a7),
                                        a3),
                                      a8),
                        v14));
  if (v13 != 1)
    JUMPOUT(0x215FE2CA8);
}

void sub_215FE2D94()
{
  JUMPOUT(0x215FE2D30);
}

void sub_215FE2E00(int16x8_t a1, int16x8_t a2, int16x8_t a3, int16x8_t a4, int16x8_t a5, int16x8_t a6, int8x16_t a7, int16x8_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int8x8_t *a13)
{
  int v13;
  uint16x8_t v14;
  int8x16_t v15;
  int8x16_t v16;

  *a13 = vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(vmlaq_s16(vmulq_s16(a6, a1), a5, a2), (int16x8_t)vzip1q_s8(vextq_s8(v16, v15, 2uLL), a7), a4), (int16x8_t)vzip1q_s8(v16, a7), a3), a8), v14));
  if (v13 != 1)
    JUMPOUT(0x215FE2DC8);
}

void sub_215FE2E8C()
{
  JUMPOUT(0x215FE2E50);
}

void sub_215FE2EF0(int16x8_t a1, int16x8_t a2, int16x8_t a3, int16x8_t a4, int16x8_t a5, int16x8_t a6, int8x16_t a7, int16x8_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, _DWORD *a13)
{
  int v13;
  uint16x8_t v14;
  int8x16_t v15;
  int8x16_t v16;

  *a13 = vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(vmlaq_s16(vmulq_s16(a6, a1), a5, a2), (int16x8_t)vzip1q_s8(vextq_s8(v16, v15, 2uLL), a7), a4), (int16x8_t)vzip1q_s8(v16, a7), a3), a8), v14)).u32[0];
  if (v13 != 1)
    JUMPOUT(0x215FE2EB8);
}

void sub_215FE2F7C()
{
  JUMPOUT(0x215FE2F40);
}

uint64_t sub_215FE2F84@<X0>(int a1@<W8>, __n128 a2@<Q0>, __n128 a3@<Q1>, __n128 a4@<Q2>, __n128 a5@<Q3>, int8x16_t a6@<Q7>)
{
  __n128 v6;
  __n128 v7;
  _DWORD *v8;
  unsigned int *v9;
  uint64_t v10;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  int8x16_t v19;

  v6 = (__n128)vzip1q_s8(vextq_s8(v19, a6, 0xEuLL), (int8x16_t)0);
  v7 = (__n128)vzip1q_s8(a6, (int8x16_t)0);
  v8 = (_DWORD *)(v17 + 8);
  v9 = (unsigned int *)(v18 + 8);
  if (v16 < 8)
    JUMPOUT(0x215FE2D9CLL);
  if (!v12)
    JUMPOUT(0x215FE3744);
  if (!v15)
    v14 = 0;
  if (a1)
    v10 = (v14 + 2 * *v8);
  else
    v10 = *v9;
  return ((uint64_t (*)(uint64_t, __n128, __n128, __n128, __n128, __n128, __n128))((char *)sub_215FE2CE0
                                                                                          + 4 * word_2160EEC6E[v13]))(v10, a2, a3, a4, a5, v7, v6);
}

void sub_215FE2F8C()
{
  JUMPOUT(0x215FE2FD4);
}

void sub_215FE3094(int16x8_t a1, int16x8_t a2, int16x8_t a3, int16x8_t a4, double a5, int16x8_t a6, int16x8_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int8x16_t *a13)
{
  int v13;
  int16x8_t v14;
  uint16x8_t v15;
  int16x8_t v16;
  int16x8_t v17;
  int8x16_t v18;
  int8x16_t v19;
  int8x16_t v20;

  v20 = vextq_s8(v19, v18, 2uLL);
  *a13 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(vmlaq_s16(vmulq_s16(a7, a1), a6, a2), (int16x8_t)vzip1q_s8(v20, a8), a4), (int16x8_t)vzip1q_s8(v19, a8), a3), v14), v15)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(vmlaq_s16(vmulq_s16(v17, a1), v16, a2), (int16x8_t)vzip2q_s8(v20, a8), a4), (int16x8_t)vzip2q_s8(v19, a8),
                                        a3),
                                      v14),
                        v15));
  if (v13 != 1)
    JUMPOUT(0x215FE303CLL);
}

void sub_215FE3148()
{
  JUMPOUT(0x215FE30E4);
}

void sub_215FE31D8(int16x8_t a1, int16x8_t a2, int16x8_t a3, int16x8_t a4, double a5, int16x8_t a6, int16x8_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int8x8_t *a13)
{
  int v13;
  int16x8_t v14;
  uint16x8_t v15;
  int8x16_t v16;
  int8x16_t v17;

  *a13 = vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(vmlaq_s16(vmulq_s16(a7, a1), a6, a2), (int16x8_t)vzip1q_s8(vextq_s8(v17, v16, 2uLL), a8), a4), (int16x8_t)vzip1q_s8(v17, a8), a3), v14), v15));
  if (v13 != 1)
    JUMPOUT(0x215FE3180);
}

void sub_215FE3264()
{
  JUMPOUT(0x215FE3228);
}

void sub_215FE32E8(int16x8_t a1, int16x8_t a2, int16x8_t a3, int16x8_t a4, double a5, int16x8_t a6, int16x8_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, _DWORD *a13)
{
  int v13;
  int16x8_t v14;
  uint16x8_t v15;
  int8x16_t v16;
  int8x16_t v17;

  *a13 = vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(vmlaq_s16(vmulq_s16(a7, a1), a6, a2), (int16x8_t)vzip1q_s8(vextq_s8(v17, v16, 2uLL), a8), a4), (int16x8_t)vzip1q_s8(v17, a8), a3), v14), v15)).u32[0];
  if (v13 != 1)
    JUMPOUT(0x215FE3290);
}

void sub_215FE3374()
{
  JUMPOUT(0x215FE3338);
}

uint64_t sub_215FE337C@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  unsigned int *v2;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;

  v1 = (_DWORD *)(v9 + 8);
  v2 = (unsigned int *)(v10 + 8);
  if (v8 < 8)
    JUMPOUT(0x215FE3150);
  if (!v4)
    JUMPOUT(0x215FE3744);
  if (!v7)
    v6 = 0;
  if (a1)
    return ((uint64_t (*)(_QWORD))((char *)sub_215FE3094 + 4 * word_2160EECE6[v5]))((v6 + 2 * *v1));
  else
    return ((uint64_t (*)(_QWORD))((char *)sub_215FE3094 + 4 * word_2160EECE6[v5]))(*v2);
}

void sub_215FE3384()
{
  JUMPOUT(0x215FE33CCLL);
}

void sub_215FE347C(int16x8_t a1, int16x8_t a2, int16x8_t a3, int16x8_t a4, double a5, int16x8_t a6, int16x8_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int8x16_t *a13)
{
  int v13;
  int16x8_t v14;
  uint16x8_t v15;
  int16x8_t v16;
  int16x8_t v17;
  int8x16_t v18;
  int8x16_t v19;
  int8x16_t v20;

  v20 = vextq_s8(v19, v18, 2uLL);
  *a13 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(vmlaq_s16(vmulq_s16(a7, a1), a6, a2), (int16x8_t)vzip1q_s8(v20, a8), a4), (int16x8_t)vzip1q_s8(v19, a8), a3), v14), v15)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(vmlaq_s16(vmulq_s16(v17, a1), v16, a2), (int16x8_t)vzip2q_s8(v20, a8), a4), (int16x8_t)vzip2q_s8(v19, a8),
                                        a3),
                                      v14),
                        v15));
  if (v13 != 1)
    JUMPOUT(0x215FE3434);
}

void sub_215FE3530()
{
  JUMPOUT(0x215FE34CCLL);
}

void sub_215FE35B0(int16x8_t a1, int16x8_t a2, int16x8_t a3, int16x8_t a4, double a5, int16x8_t a6, int16x8_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int8x8_t *a13)
{
  int v13;
  int16x8_t v14;
  uint16x8_t v15;
  int8x16_t v16;
  int8x16_t v17;

  *a13 = vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(vmlaq_s16(vmulq_s16(a7, a1), a6, a2), (int16x8_t)vzip1q_s8(vextq_s8(v17, v16, 2uLL), a8), a4), (int16x8_t)vzip1q_s8(v17, a8), a3), v14), v15));
  if (v13 != 1)
    JUMPOUT(0x215FE3568);
}

void sub_215FE363C()
{
  JUMPOUT(0x215FE3600);
}

void sub_215FE36B0(int16x8_t a1, int16x8_t a2, int16x8_t a3, int16x8_t a4, double a5, int16x8_t a6, int16x8_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, _DWORD *a13)
{
  int v13;
  int16x8_t v14;
  uint16x8_t v15;
  int8x16_t v16;
  int8x16_t v17;

  *a13 = vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(vmlaq_s16(vmulq_s16(a7, a1), a6, a2), (int16x8_t)vzip1q_s8(vextq_s8(v17, v16, 2uLL), a8), a4), (int16x8_t)vzip1q_s8(v17, a8), a3), v14), v15)).u32[0];
  if (v13 != 1)
    JUMPOUT(0x215FE3668);
}

void sub_215FE373C()
{
  JUMPOUT(0x215FE3700);
}

uint64_t sub_215FE3748@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  unsigned int *v2;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;

  v1 = (_DWORD *)(v9 + 8);
  v2 = (unsigned int *)(v10 + 8);
  if (v8 < 8)
    JUMPOUT(0x215FE3538);
  if (!v4)
    JUMPOUT(0x215FE3744);
  if (!v7)
    v6 = 0;
  if (a1)
    return ((uint64_t (*)(_QWORD))((char *)sub_215FE347C + 4 * byte_2160EEC04[v5]))((v6 + 2 * *v1));
  else
    return ((uint64_t (*)(_QWORD))((char *)sub_215FE347C + 4 * byte_2160EEC04[v5]))(*v2);
}

uint64_t sub_215FE3754(uint64_t a1, _DWORD *a2, __int32 a3, int a4, int8x8_t *a5, unsigned int a6, int a7, int a8, double a9, double a10, double a11, double a12, double a13, double a14, int32x4_t a15, __n128 a16, uint64_t a17, _DWORD *a18, int a19, int a20)
{
  __int128 v20;
  __int128 v21;
  _DWORD *v22;
  _BOOL4 v23;
  BOOL v24;
  int v25;
  int v26;
  int v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  BOOL v32;
  char v33;
  int v34;
  int v35;
  int v36;
  signed int v37;
  int *v38;
  _DWORD *v39;
  uint64_t v40;
  int v41;
  int v42;
  unsigned __int8 v43;
  int8x8_t v44;
  int32x2_t v45;
  int32x4_t v46;
  int v47;
  int *v48;
  _DWORD *v49;
  unint64_t v50;
  uint64_t v51;
  int8x16_t v52;
  int8x16_t v53;
  int8x16_t *v54;
  uint64_t i;
  int8x16_t *v56;
  int8x16_t v57;
  int v58;
  __int32 v59;
  int v60;
  int v61;
  int v62;
  uint64_t v63;
  unsigned int v64;
  int32x4_t v65;
  unsigned int v66;
  unsigned int v67;
  int8x16_t *v68;
  uint64_t v69;
  uint64_t result;
  int8x16_t *v71;
  int v72;
  int v73;
  int16x8_t v74;
  int16x8_t v75;
  int *v76;
  _DWORD *v77;
  int v78;
  uint8x8_t v79;
  uint8x8_t v80;
  int32x4_t v81;
  int32x4_t v82;
  uint64_t v83;
  uint16x8_t v84;
  int32x4_t v85;
  int32x4_t v86;
  uint16x8_t v87;
  int32x4_t v88;
  int32x4_t v89;
  int8x16_t *v90;
  uint64_t m;
  int8x16_t *v92;
  int16x8_t v93;
  int8x16_t v94;
  uint16x8_t v95;
  int8x16_t v96;
  uint16x8_t v97;
  int8x8_t v98;
  uint16x8_t v99;
  uint16x8_t v100;
  int16x8_t v101;
  _DWORD *v102;
  int v103;
  uint64_t v104;
  int8x16_t *v105;
  uint64_t j;
  int8x16_t *v107;
  int16x8_t v108;
  int8x16_t v109;
  uint16x8_t v110;
  int8x16_t v111;
  uint16x8_t v112;
  int16x8_t v113;
  int8x8_t v114;
  _DWORD *v115;
  __int32 v116;
  int v117;
  int v118;
  int v119;
  unsigned __int8 *v120;
  unsigned int v121;
  unsigned int v122;
  uint16x8_t v123;
  int v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  int32x4_t v129;
  int32x4_t v130;
  int *v131;
  _DWORD *v132;
  unsigned int v133;
  uint16x8_t v134;
  int32x4_t v135;
  int32x4_t v136;
  int32x4_t v137;
  int32x4_t v138;
  int32x4_t v139;
  int32x4_t v140;
  int v141;
  unsigned __int8 *v142;
  int32x4_t v143;
  int32x4_t v144;
  uint8x16_t v145;
  int8x16_t v146;
  int32x4_t v147;
  int8x16_t v148;
  int32x4_t v149;
  int32x4_t v150;
  int32x4_t v151;
  int32x4_t v152;
  int32x4_t v153;
  int32x4_t v154;
  int32x4_t v155;
  int32x4_t v156;
  int v157;
  unsigned __int8 *v158;
  int32x4_t v159;
  int8x16_t v160;
  int32x4_t v161;
  int32x4_t v162;
  int32x4_t v163;
  int v164;
  int16x4_t v165;
  int16x4_t v166;
  int8x16_t v167;
  uint64_t v168;
  int8x16_t *v169;
  uint64_t k;
  int8x16_t *v171;
  int16x4_t v172;
  int16x4_t v173;
  int16x4_t v174;
  int16x8_t v175;
  int16x8_t v176;
  _DWORD *v177;
  int32x4_t v178;
  int32x4_t v179;
  int32x4_t v180;
  int32x4_t v181;
  int v182;
  unsigned __int8 *v183;
  int32x4_t v184;
  int32x4_t v185;
  int16x8_t v186;
  int v187;
  int32x4_t v188;
  int32x4_t v189;
  int32x4_t v190;
  int32x4_t v191;
  int v192;
  int32x4_t v193;
  int32x4_t v194;
  int16x8_t v195;
  uint64_t v196;
  int v197;
  int16x8_t v198;
  int16x8_t v199;
  int32x4_t v200;
  uint64_t v201;
  int16x8_t v202;
  int32x4_t v203;
  _BOOL4 v204;
  int v205;
  __n128 v206;
  uint64_t v207;
  __int128 v209;
  int32x4_t v210;
  int16x4_t v211;
  int v212;
  __int128 v213;
  int32x4_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  int8x16_t v220;
  uint8x8_t v221;
  uint8x8_t v222;
  uint8x8_t v223;
  uint8x8_t v224;
  int8x16_t v225;
  int8x16_t v226;
  int8x16_t v227;
  int8x16_t v228;
  uint64_t v229;

  v22 = a18;
  v229 = *MEMORY[0x24BDAC8D0];
  if (*(_BYTE *)(a17 + 31))
  {
    v23 = *(_BYTE *)(a17 + 31) == 2 && *(_BYTE *)(a1 + 3) != 0;
    if (*(_BYTE *)(a17 + 30))
      v24 = (a18[12 * a20 + 9] & 1) == 0;
    else
      v24 = 0;
    if (v24)
      v25 = 1;
    else
      v25 = (*(_BYTE *)(a17 + 30) == 0) & a18[12 * a20 + 9];
  }
  else
  {
    if (*(_BYTE *)a1)
      v23 = *(_BYTE *)(a1 + 3) != 0;
    else
      v23 = 0;
    v25 = *(unsigned __int8 *)(a1 + 5);
  }
  v26 = *(_DWORD *)(a1 + 152);
  v27 = a2[1];
  v28 = *(unsigned __int16 *)(*(_QWORD *)(a1 + 1096) + 2 * (v27 >> 4) + 2);
  v29 = v28 & 0x1FFF;
  v30 = (v28 >> 13) & 1;
  v31 = ((v28 >> 14) & 1) + v30;
  if ((_DWORD)v30)
    v32 = v31 == 1;
  else
    v32 = 0;
  v33 = !v32;
  if (a7 || (v33 & 1) != 0)
  {
    v43 = 8 - a4;
    v44.i32[0] = 8 - a3;
    v44.i32[1] = a3;
    v45 = (int32x2_t)vand_s8(v44, (int8x8_t)0xFF000000FFLL);
    *(int32x2_t *)v46.i8 = vmul_s32(vdup_n_s32(a4), v45);
    v47 = (int)a2[3] >> 1;
    v212 = ((a2[7] - 1) >> 1) - v47;
    v48 = (int *)(*(_QWORD *)(a1 + 1104) + 4 * v47 + 36);
    v49 = (_DWORD *)(*(_QWORD *)(a1 + 1112) + 4 * v47 + 36);
    v217 = *(_QWORD *)(a1 + 40) + (16 * v29);
    v50 = ((unint64_t)*(unsigned __int16 *)(*(_QWORD *)(a1 + 1096) + 2 * (v27 >> 4) + 2) >> 11) & 0x10;
    if ((v33 & 1) != 0)
    {
      v51 = 0;
      v52 = xmmword_2160EF08C[v30];
      v53.i64[0] = 0x1010101010101010;
      v53.i64[1] = 0x1010101010101010;
      v225 = vaddq_s8(xmmword_2160EF08C[v31], v53);
      v226 = v52;
      v228.i8[0] = v27 & 0xE;
      v228.i8[1] = v27 & 0xE | 1;
      v228.i8[2] = (v27 & 0xE) + 2;
      v228.i8[3] = (v27 & 0xE) + 3;
      v228.i8[4] = (v27 & 0xE) + 4;
      v228.i8[5] = (v27 & 0xE) + 5;
      v228.i8[6] = (v27 & 0xE) + 6;
      v228.i8[7] = (v27 & 0xE) + 7;
      v228.i8[8] = (v27 & 0xE) + 8;
      v228.i8[9] = (v27 & 0xE) + 9;
      v228.i8[10] = (v27 & 0xE) + 10;
      v228.i8[11] = (v27 & 0xE) + 11;
      v228.i8[12] = (v27 & 0xE) + 12;
      v228.i8[13] = (v27 & 0xE) + 13;
      v228.i8[14] = (v27 & 0xE) + 14;
      v227.i64[0] = *(uint64_t *)((char *)v228.i64 + 2);
      v228.i8[15] = (v27 & 0xE) + 15;
      v227.i32[2] = *(__int32 *)((char *)&v228.i32[2] + 2);
      v227.i16[6] = v228.i16[7];
      v227.i8[14] = v27 & 0xE | 0x10;
      v227.i8[15] = v27 & 0xE | 0x11;
      do
      {
        if ((v228.i8[v51] & 0x10) != 0)
          v54 = &v225;
        else
          v54 = &v226;
        v228.i8[v51] = *(_BYTE *)((unint64_t)v54 & 0xFFFFFFFFFFFFFFF0 | v228.i8[v51] & 0xF);
        ++v51;
      }
      while (v51 != 16);
      for (i = 0; i != 16; ++i)
      {
        if ((v227.i8[i] & 0x10) != 0)
          v56 = &v225;
        else
          v56 = &v226;
        v227.i8[i] = *(_BYTE *)((unint64_t)v56 & 0xFFFFFFFFFFFFFFF0 | v227.i8[i] & 0xF);
      }
      v22 = a18;
    }
    else
    {
      v57 = vdupq_n_s8(a2[1] & 0xE);
      v227 = vaddq_s8(v57, (int8x16_t)xmmword_2160EE7F0);
      v228 = vaddq_s8(v57, (int8x16_t)xmmword_2160EE7E0);
    }
    v58 = v43;
    v59 = v45.i32[1];
    v205 = v212 + 1;
    v216 = v217 + v50;
    v60 = a2[5];
    if (v23)
    {
      if (v25)
        v61 = v26;
      else
        v61 = 0;
      v62 = v61 + 2 * *v49;
    }
    else
    {
      v62 = *v48;
    }
    v63 = 0;
    v64 = v43 * v45.i32[0];
    v65.i64[0] = v46.i64[0];
    v65.i64[1] = v46.i64[0];
    v214 = v65;
    v66 = v58 * v59;
    v67 = v60 - v27;
    v226 = *(int8x16_t *)(v217 + v62);
    v225 = *(int8x16_t *)(v216 + v62);
    do
    {
      if ((v228.i8[v63] & 0x10) != 0)
        v68 = &v225;
      else
        v68 = &v226;
      v223.i8[v63] = v68->i8[v228.i8[v63] & 0xF];
      ++v63;
    }
    while (v63 != 16);
    v69 = 0;
    result = (uint64_t)&v226;
    do
    {
      if ((v227.i8[v69] & 0x10) != 0)
        v71 = &v225;
      else
        v71 = &v226;
      v221.i8[v69] = v71->i8[v227.i8[v69] & 0xF];
      ++v69;
    }
    while (v69 != 16);
    if (v23)
    {
      if (v25)
        v72 = v26;
      else
        v72 = 0;
      v73 = v72 + 2 * v49[1];
    }
    else
    {
      v73 = v48[1];
    }
    v74 = (int16x8_t)vmovl_u8(v223);
    v75 = (int16x8_t)vmovl_u8(v221);
    v76 = v48 + 2;
    v77 = v49 + 2;
    v204 = v23;
    if (v67 < 8)
    {
      if (v67 == 7)
      {
        if (v212 != -1)
        {
          v103 = 0;
          v199 = vdupq_n_s16(v66);
          v202 = vdupq_n_s16(v64);
          v46.i64[1] = v46.i64[0];
          v196 = a6;
          v194 = vrev64q_s32(v46);
          if (!v25)
            v26 = 0;
          v192 = v26;
          do
          {
            v226 = *(int8x16_t *)(v217 + v73);
            v225 = *(int8x16_t *)(v216 + v73);
            if (v23)
              v73 = v192 + 2 * *v77;
            else
              v73 = *v76;
            v104 = 0;
            ++v76;
            do
            {
              if ((v228.i8[v104] & 0x10) != 0)
                v105 = &v225;
              else
                v105 = &v226;
              v223.i8[v104] = v105->i8[v228.i8[v104] & 0xF];
              ++v104;
            }
            while (v104 != 16);
            for (j = 0; j != 16; ++j)
            {
              if ((v227.i8[j] & 0x10) != 0)
                v107 = &v225;
              else
                v107 = &v226;
              v221.i8[j] = v107->i8[v227.i8[j] & 0xF];
            }
            *(uint8x8_t *)a15.i8 = v223;
            a16.n128_u64[0] = (unint64_t)v221;
            v108 = vmlaq_s16(vmulq_s16(v75, v199), v74, v202);
            *(uint8x8_t *)v109.i8 = v221;
            v109.u64[1] = (unint64_t)v223;
            v110 = vmovl_u8((uint8x8_t)vqtbl1_s8(v109, (int8x8_t)0xF060D040B020900));
            *(uint8x8_t *)v111.i8 = v223;
            v111.u64[1] = (unint64_t)v221;
            v112 = vmovl_u8((uint8x8_t)vqtbl1_s8(v111, (int8x8_t)0xF060D040B020900));
            v113 = vaddq_s16(v108, vuzp1q_s16((int16x8_t)vmlaq_s32(vmulq_s32(v194, (int32x4_t)vmovl_u16(*(uint16x4_t *)v110.i8)), v214, (int32x4_t)vmovl_u16(*(uint16x4_t *)v112.i8)), (int16x8_t)vmlaq_s32(vmulq_s32(v194, (int32x4_t)vmovl_high_u16(v110)), v214, (int32x4_t)vmovl_high_u16(v112))));
            v114 = vrshrn_n_s16(v113, 6uLL);
            v220 = vrshrn_high_n_s16(v114, v113, 6uLL);
            if (a7)
            {
              v115 = v77;
              v210 = a15;
              v206 = a16;
              result = sub_215FE4A60(8, (uint64_t)&v220, (uint64_t)a5, a8, a17, v22, a19);
              a16 = v206;
              a15 = v210;
              v77 = v115;
              v22 = a18;
              v23 = v204;
            }
            else
            {
              *a5 = v114;
            }
            ++v77;
            v74 = (int16x8_t)vmovl_u8(*(uint8x8_t *)a15.i8);
            v75 = (int16x8_t)vmovl_u8((uint8x8_t)a16.n128_u64[0]);
            a5 = (int8x8_t *)((char *)a5 + v196);
            v24 = v103++ == v212;
          }
          while (!v24);
        }
      }
      else if (v212 != -1)
      {
        v164 = 0;
        v165 = vdup_n_s16(v64);
        v207 = a6;
        v166 = vdup_n_s16(v66);
        v167.i64[0] = v46.i64[0];
        v167.i64[1] = v46.i64[0];
        v46.i64[1] = v46.i64[0];
        v200 = vrev64q_s32(v46);
        v203 = (int32x4_t)v167;
        if (!v25)
          v26 = 0;
        v197 = v26;
        do
        {
          v226 = *(int8x16_t *)(v217 + v73);
          v225 = *(int8x16_t *)(v216 + v73);
          if (v23)
            v73 = v197 + 2 * *v77;
          else
            v73 = *v76;
          v168 = 0;
          ++v76;
          do
          {
            if ((v228.i8[v168] & 0x10) != 0)
              v169 = &v225;
            else
              v169 = &v226;
            v223.i8[v168] = v169->i8[v228.i8[v168] & 0xF];
            ++v168;
          }
          while (v168 != 16);
          for (k = 0; k != 16; ++k)
          {
            if ((v227.i8[k] & 0x10) != 0)
              v171 = &v225;
            else
              v171 = &v226;
            v221.i8[k] = v171->i8[v227.i8[k] & 0xF];
          }
          v172 = vmul_s16(*(int16x4_t *)v75.i8, v166);
          v167.i32[0] = v223.i32[0];
          v173 = (int16x4_t)vmovl_u8(*(uint8x8_t *)v167.i8).u64[0];
          v167.i32[0] = v221.i32[0];
          v75.i64[0] = vmovl_u8(*(uint8x8_t *)v167.i8).u64[0];
          v174 = vmla_s16(v172, *(int16x4_t *)v74.i8, v165);
          v175 = (int16x8_t)vmlaq_s32(vmulq_s32(v200, (int32x4_t)vmovl_u16((uint16x4_t)vtrn2_s16(vrev32_s16(*(int16x4_t *)v75.i8), v173))), v203, (int32x4_t)vmovl_u16((uint16x4_t)vtrn2_s16(vrev32_s16(v173), *(int16x4_t *)v75.i8)));
          *(int16x4_t *)v175.i8 = vadd_s16(v174, vmovn_s32((int32x4_t)v175));
          v176.i64[0] = v175.i64[0];
          v176.i64[1] = v175.i64[0];
          v167 = vrshrn_high_n_s16(vrshrn_n_s16(v176, 6uLL), v176, 6uLL);
          v220 = v167;
          if (a7)
          {
            v177 = v77;
            v215 = v75.i64[0];
            v211 = v173;
            result = sub_215FE4A60(4, (uint64_t)&v220, (uint64_t)a5, a8, a17, v22, a19);
            v173 = v211;
            v75.i64[0] = v215;
            v77 = v177;
            v22 = a18;
            v23 = v204;
          }
          else
          {
            *(uint16x4_t *)v175.i8 = vshr_n_u16((uint16x4_t)vadd_s16(*(int16x4_t *)v175.i8, (int16x4_t)0x20002000200020), 6uLL);
            a5->i32[0] = vmovn_s16(v175).u32[0];
          }
          ++v77;
          a5 = (int8x8_t *)((char *)a5 + v207);
          *(int16x4_t *)v74.i8 = v173;
          v24 = v164++ == v212;
        }
        while (!v24);
      }
    }
    else
    {
      v78 = 0;
      v79 = v224;
      v80 = v222;
      v201 = a6;
      v195 = vdupq_n_s16(v66);
      v198 = vdupq_n_s16(v64);
      v81.i64[0] = v46.i64[0];
      v81.i64[1] = v46.i64[0];
      v191 = vdupq_lane_s32(*(int32x2_t *)v46.i8, 0);
      v193 = vrev64q_s32(v81);
      v82 = vdupq_lane_s32(*(int32x2_t *)v46.i8, 1);
      if (!v25)
        v26 = 0;
      v187 = v26;
      v189 = vdupq_n_s32(v64);
      v190 = v82;
      v188 = vdupq_n_s32(v66);
      while (v78 != v205)
      {
        v226 = *(int8x16_t *)(v217 + v73);
        v225 = *(int8x16_t *)(v216 + v73);
        if (v23)
          v73 = v187 + 2 * *v77;
        else
          v73 = *v76;
        v83 = 0;
        v84 = vmovl_u8(v80);
        v85 = (int32x4_t)vmovl_high_u16(v84);
        v86 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v84.i8);
        v87 = vmovl_u8(v79);
        v88 = (int32x4_t)vmovl_high_u16(v87);
        v89 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v87.i8);
        ++v76;
        do
        {
          if ((v228.i8[v83] & 0x10) != 0)
            v90 = &v225;
          else
            v90 = &v226;
          v223.i8[v83] = v90->i8[v228.i8[v83] & 0xF];
          ++v83;
        }
        while (v83 != 16);
        for (m = 0; m != 16; ++m)
        {
          if ((v227.i8[m] & 0x10) != 0)
            v92 = &v225;
          else
            v92 = &v226;
          v221.i8[m] = v92->i8[v227.i8[m] & 0xF];
        }
        v93 = vmlaq_s16(vmulq_s16(v75, v195), v74, v198);
        *(uint8x8_t *)&v20 = v221;
        v80 = v222;
        *(uint8x8_t *)v94.i8 = v221;
        *(uint8x8_t *)&v21 = v223;
        v79 = v224;
        v94.u64[1] = (unint64_t)v223;
        v95 = vmovl_u8((uint8x8_t)vqtbl1_s8(v94, (int8x8_t)0xF060D040B020900));
        *(uint8x8_t *)v96.i8 = v223;
        v96.u64[1] = (unint64_t)v221;
        v97 = vmovl_u8((uint8x8_t)vqtbl1_s8(v96, (int8x8_t)0xF060D040B020900));
        v98 = vrshrn_n_s16(vaddq_s16(v93, vuzp1q_s16((int16x8_t)vmlaq_s32(vmulq_s32(v193, (int32x4_t)vmovl_u16(*(uint16x4_t *)v95.i8)), v214, (int32x4_t)vmovl_u16(*(uint16x4_t *)v97.i8)), (int16x8_t)vmlaq_s32(vmulq_s32(v193, (int32x4_t)vmovl_high_u16(v95)), v214, (int32x4_t)vmovl_high_u16(v97)))), 6uLL);
        v99 = vmovl_u8(v224);
        v100 = vmovl_u8(v222);
        v101 = vuzp1q_s16((int16x8_t)vmlaq_s32(vmlaq_s32(vmlaq_s32(vmulq_s32(v188, v86), v189, v89), v191, (int32x4_t)vmovl_u16(*(uint16x4_t *)v99.i8)), v190, (int32x4_t)vmovl_u16(*(uint16x4_t *)v100.i8)), (int16x8_t)vmlaq_s32(vmlaq_s32(vmlaq_s32(vmulq_s32(v188, v85), v189, v88), v191, (int32x4_t)vmovl_high_u16(v99)), v190, (int32x4_t)vmovl_high_u16(v100)));
        v220 = vrshrn_high_n_s16(v98, v101, 6uLL);
        if (a7)
        {
          v102 = v77;
          v209 = v21;
          v213 = v20;
          result = sub_215FE4A60(16, (uint64_t)&v220, (uint64_t)a5, a8, a17, v22, a19);
          v21 = v209;
          v20 = v213;
          v77 = v102;
          v22 = a18;
          v23 = v204;
        }
        else
        {
          *a5 = v98;
          a5[1] = vrshrn_n_s16(v101, 6uLL);
        }
        ++v77;
        v74 = (int16x8_t)vmovl_u8(*(uint8x8_t *)&v21);
        v75 = (int16x8_t)vmovl_u8(*(uint8x8_t *)&v20);
        a5 = (int8x8_t *)((char *)a5 + v201);
        ++v78;
      }
    }
  }
  else
  {
    v34 = a2[3];
    v35 = a2[5];
    v36 = ((a2[7] - 1) >> 1) - (v34 >> 1);
    v37 = v27 & 0x8000000E;
    v38 = (int *)(*(_QWORD *)(a1 + 1104) + 4 * (v34 >> 1) + 36);
    v39 = (_DWORD *)(*(_QWORD *)(a1 + 1112) + 4 * (v34 >> 1) + 36);
    v40 = *(_QWORD *)(a1 + 40) + 16 * v29;
    if (v23)
    {
      if (v25)
        v41 = *(_DWORD *)(a1 + 152);
      else
        v41 = 0;
      v42 = v41 + 2 * *v39;
    }
    else
    {
      v42 = *v38;
    }
    v116 = 8 - a3;
    v117 = 8 - a4;
    v118 = v36 + 1;
    result = (v35 - v27);
    if (v37 <= 0)
      v119 = -(-v37 & 0xF);
    else
      v119 = v27 & 0xE;
    v120 = (unsigned __int8 *)(v40 + v42 + (uint64_t)v119);
    v121 = *v120;
    v122 = v120[1];
    v123 = vmovl_u8(*(uint8x8_t *)(v120 + 2));
    if (v23)
    {
      if (v25)
        v124 = v26;
      else
        v124 = 0;
      v125 = v124 + 2 * v39[1];
    }
    else
    {
      v125 = v38[1];
    }
    v126 = v117 * v116;
    v127 = v117 * a3;
    v128 = v116 * a4;
    v129 = (int32x4_t)vmovl_high_u16(v123);
    v130 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v123.i8);
    v131 = v38 + 2;
    v132 = v39 + 2;
    v133 = a4 * a3;
    if (result < 8)
    {
      if ((_DWORD)result == 7)
      {
        if (v118)
        {
          result = a6;
          v153 = vdupq_n_s32(v127);
          v154 = vdupq_n_s32(v126);
          v155 = vdupq_n_s32(v128);
          v156 = vdupq_n_s32(v133);
          if (!v25)
            v26 = 0;
          do
          {
            if (v23)
              v157 = v26 + 2 * *v132;
            else
              v157 = *v131;
            v158 = (unsigned __int8 *)(v40 + v119 + (uint64_t)v125);
            ++v131;
            v159 = (int32x4_t)vdupq_lane_s64(v130.i64[0], 0);
            v159.i64[0] = __PAIR64__(v122, v121);
            ++v132;
            v121 = *v158;
            v122 = v158[1];
            v160 = (int8x16_t)vmovl_u8(*(uint8x8_t *)(v158 + 2));
            v161 = vmlaq_s32(vmulq_s32((int32x4_t)vextq_s8((int8x16_t)v130, (int8x16_t)v129, 8uLL), v154), v129, v153);
            v129 = (int32x4_t)vmovl_high_u16((uint16x8_t)v160);
            v162 = vmlaq_s32(vmulq_s32(v159, v154), v130, v153);
            v130 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v160.i8);
            v163 = (int32x4_t)vdupq_lane_s64(v130.i64[0], 0);
            v163.i64[0] = __PAIR64__(v122, v121);
            *a5 = vrshrn_n_s16(vuzp1q_s16((int16x8_t)vmlaq_s32(vmlaq_s32(v162, v155, v163), v156, v130), (int16x8_t)vmlaq_s32(vmlaq_s32(v161, v155, (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vextq_s8(v160, v160, 4uLL))), v156, v129)), 6uLL);
            a5 = (int8x8_t *)((char *)a5 + a6);
            v125 = v157;
            --v118;
          }
          while (v118);
        }
      }
      else if (v118)
      {
        result = a6;
        v178 = vdupq_n_s32(v127);
        v179 = vdupq_n_s32(v126);
        v180 = vdupq_n_s32(v128);
        v181 = vdupq_n_s32(v133);
        if (!v25)
          v26 = 0;
        do
        {
          if (v23)
            v182 = v26 + 2 * *v132;
          else
            v182 = *v131;
          v183 = (unsigned __int8 *)(v40 + v119 + (uint64_t)v125);
          v184 = (int32x4_t)vdupq_lane_s64(v130.i64[0], 0);
          ++v131;
          v184.i64[0] = __PAIR64__(v122, v121);
          v121 = *v183;
          v122 = v183[1];
          a15.i32[0] = *(_DWORD *)(v183 + 2);
          v185 = vmlaq_s32(vmulq_s32(v184, v179), v130, v178);
          v130 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)a15.i8));
          a15 = (int32x4_t)vdupq_lane_s64(v130.i64[0], 0);
          a15.i64[0] = __PAIR64__(v122, v121);
          ++v132;
          v186 = (int16x8_t)vmlaq_s32(vmlaq_s32(v185, v180, a15), v181, v130);
          *(int16x4_t *)v186.i8 = vmovn_s32((int32x4_t)v186);
          a5->i32[0] = vrshrn_n_s16(v186, 6uLL).u32[0];
          a5 = (int8x8_t *)((char *)a5 + a6);
          v125 = v182;
          --v118;
        }
        while (v118);
      }
    }
    else if (v118)
    {
      v134 = vmovl_u8(*(uint8x8_t *)(v120 + 10));
      v135 = (int32x4_t)vmovl_high_u16(v134);
      v136 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v134.i8);
      result = a6;
      v137 = vdupq_n_s32(v127);
      v138 = vdupq_n_s32(v126);
      v139 = vdupq_n_s32(v128);
      v140 = vdupq_n_s32(v133);
      if (!v25)
        v26 = 0;
      do
      {
        if (v23)
          v141 = v26 + 2 * *v132;
        else
          v141 = *v131;
        v142 = (unsigned __int8 *)(v40 + v119 + (uint64_t)v125);
        ++v131;
        ++v132;
        v143 = (int32x4_t)vdupq_lane_s64(v130.i64[0], 0);
        v143.i64[0] = __PAIR64__(v122, v121);
        v121 = *v142;
        v122 = v142[1];
        v144 = vmulq_s32((int32x4_t)vextq_s8((int8x16_t)v129, (int8x16_t)v136, 8uLL), v138);
        v145 = *(uint8x16_t *)(v142 + 2);
        v146 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v145.i8);
        v147 = vmlaq_s32(vmulq_s32((int32x4_t)vextq_s8((int8x16_t)v130, (int8x16_t)v129, 8uLL), v138), v129, v137);
        v129 = (int32x4_t)vmovl_high_u16((uint16x8_t)v146);
        v148 = (int8x16_t)vmovl_high_u8(v145);
        v149 = vmlaq_s32(vmulq_s32((int32x4_t)vextq_s8((int8x16_t)v136, (int8x16_t)v135, 8uLL), v138), v135, v137);
        v135 = (int32x4_t)vmovl_high_u16((uint16x8_t)v148);
        v150 = vmlaq_s32(v144, v136, v137);
        v136 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v148.i8);
        v151 = vmlaq_s32(vmulq_s32(v143, v138), v130, v137);
        v130 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v146.i8);
        v152 = (int32x4_t)vdupq_lane_s64(v130.i64[0], 0);
        v152.i64[0] = __PAIR64__(v122, v121);
        *(int8x16_t *)a5->i8 = vrshrn_high_n_s16(vrshrn_n_s16(vuzp1q_s16((int16x8_t)vmlaq_s32(vmlaq_s32(v151, v139, v152), v140, v130), (int16x8_t)vmlaq_s32(vmlaq_s32(v147, v139, (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vextq_s8(v146, v146, 4uLL))), v140, v129)), 6uLL), vuzp1q_s16((int16x8_t)vmlaq_s32(vmlaq_s32(v150, v139,
                                                  (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vextq_s8(v146, v148, 0xCuLL))), v140, v136), (int16x8_t)vmlaq_s32(vmlaq_s32(v149, v139, (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vextq_s8(v148, v148, 4uLL))), v140, v135)), 6uLL);
        a5 = (int8x8_t *)((char *)a5 + a6);
        v125 = v141;
        --v118;
      }
      while (v118);
    }
  }
  return result;
}

uint64_t sub_215FE4918(uint64_t result, unsigned __int8 *a2, _BYTE *a3, int a4, uint64_t a5, _DWORD *a6, int a7)
{
  _DWORD *v7;
  char v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  _DWORD *v23;
  int v24;
  int v25;
  int v26;
  int v27;

  v7 = *(_DWORD **)(a5 + 48);
  if (a4)
  {
    v8 = *(_BYTE *)(a5 + 31) == 2;
    if ((int)result >= 1)
    {
      v9 = (int)a6[9] >> v8;
      v10 = (int)a6[21] >> v8;
      v11 = (uint64_t)&v7[96 * v9 + 3 * v10];
      v12 = *(_DWORD *)(v11 + 1900);
      v13 = *(_DWORD *)(v11 + 14188);
      v14 = v7[87];
      v15 = v7[83] + 1;
      v16 = (v7[3 * v9 + 283] + v7[3 * v10 + 379] + 1) >> 1;
      do
      {
        v17 = *a2++;
        v18 = ((v14 + v12 * a3[a7] + v13 * v17) >> v15) + v16;
        if (v18 >= 255)
          v18 = 255;
        *a3++ = v18 & ~(v18 >> 31);
        result = (result - 1);
      }
      while ((_DWORD)result);
    }
  }
  else
  {
    v19 = a6[8];
    v20 = (int)a6[9] >> (*(_BYTE *)(a5 + 31) == 2);
    if (v19 == 5)
    {
      v23 = &v7[3 * v20];
      v22 = v23[187];
      v21 = v23[379];
    }
    else
    {
      v21 = v7[3 * ((int)a6[9] >> (*(_BYTE *)(a5 + 31) == 2)) + 283];
      if (v19 == 4)
        v22 = v7[3 * v20 + 91];
      else
        v22 = 0;
    }
    if ((int)result >= 1)
    {
      v24 = v7[85];
      v25 = v7[83];
      do
      {
        v26 = *a2++;
        v27 = ((v24 + v22 * v26) >> v25) + v21;
        if (v27 >= 255)
          v27 = 255;
        *a3++ = v27 & ~(v27 >> 31);
        result = (result - 1);
      }
      while ((_DWORD)result);
    }
  }
  return result;
}

uint64_t sub_215FE4A60(uint64_t result, uint64_t a2, uint64_t a3, int a4, uint64_t a5, _DWORD *a6, int a7)
{
  _DWORD *v7;
  char v8;
  uint64_t v9;
  int v10;
  int v11;
  _DWORD *v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  _DWORD *v19;
  _DWORD *v20;
  _DWORD *v21;
  int v22;
  int v23;
  uint64_t v24;
  _BYTE *v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int *v30;
  int *v31;
  int *v32;
  int *v33;
  int *v34;
  int *v35;
  int v36;
  int v37;
  int v38;
  int v39;
  uint64_t v40;
  int v41;
  int v42;
  _BYTE *v43;
  int v44;
  int v45;

  v7 = *(_DWORD **)(a5 + 48);
  if (a4)
  {
    v8 = *(_BYTE *)(a5 + 31) == 2;
    if ((int)result >= 1)
    {
      v9 = 0;
      v10 = (int)a6[9] >> v8;
      v11 = (int)a6[21] >> v8;
      v12 = &v7[96 * v10 + 3 * v11];
      v13 = v12[476];
      v14 = v12[3548];
      v15 = v12[477];
      v16 = v12[3549];
      v17 = v7[88];
      v18 = v7[84] + 1;
      v19 = v7 + 283;
      v20 = &v19[3 * v10];
      v21 = &v19[3 * v11];
      v22 = (v20[1] + v21[97] + 1) >> 1;
      v23 = (v20[2] + v21[98] + 1) >> 1;
      v24 = a3 + a7;
      do
      {
        v25 = (_BYTE *)(a3 + v9);
        v26 = ((v17 + v13 * *(unsigned __int8 *)(v24 + v9) + v14 * *(unsigned __int8 *)(a2 + v9)) >> v18) + v22;
        if (v26 >= 255)
          v26 = 255;
        *v25 = v26 & ~(v26 >> 31);
        v27 = ((v17 + v15 * *(unsigned __int8 *)(v24 + v9 + 1) + v16 * *(unsigned __int8 *)(a2 + v9 + 1)) >> v18) + v23;
        if (v27 >= 255)
          v27 = 255;
        v25[1] = v27 & ~(v27 >> 31);
        v9 += 2;
      }
      while ((int)v9 < (int)result);
    }
    return result;
  }
  v28 = a6[8];
  v29 = (int)a6[9] >> (*(_BYTE *)(a5 + 31) == 2);
  if (v28 == 5)
  {
    v35 = &v7[3 * v29];
    v31 = v35 + 188;
    v32 = v35 + 380;
    v33 = v35 + 189;
    v34 = v35 + 381;
    goto LABEL_14;
  }
  if (v28 == 4)
  {
    v30 = &v7[3 * v29];
    v31 = v30 + 92;
    v32 = v30 + 284;
    v33 = v30 + 93;
    v34 = v30 + 285;
LABEL_14:
    v36 = *v32;
    v37 = *v33;
    v38 = *v31;
    v39 = *v34;
    goto LABEL_16;
  }
  v38 = 0;
  v37 = 0;
  v36 = 0;
  v39 = 0;
LABEL_16:
  if ((int)result >= 1)
  {
    v40 = 0;
    v41 = v7[86];
    v42 = v7[84];
    do
    {
      v43 = (_BYTE *)(a3 + v40);
      v44 = ((v41 + v38 * *(unsigned __int8 *)(a2 + v40)) >> v42) + v36;
      if (v44 >= 255)
        v44 = 255;
      *v43 = v44 & ~(v44 >> 31);
      v45 = ((v41 + v37 * *(unsigned __int8 *)(a2 + v40 + 1)) >> v42) + v39;
      if (v45 >= 255)
        v45 = 255;
      v43[1] = v45 & ~(v45 >> 31);
      v40 += 2;
    }
    while ((int)v40 < (int)result);
  }
  return result;
}

void sub_215FE4C4C(uint64_t a1, uint64_t a2, int a3, int a4)
{
  pthread_mutex_t *v8;
  BOOL v9;
  pthread_mutex_t *v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  void *v15;

  *(_QWORD *)(a1 + 48) = sub_2160EC80C();
  v8 = sub_2160EC80C();
  *(_QWORD *)(a1 + 56) = v8;
  if (*(_QWORD *)(a1 + 48))
    v9 = v8 == 0;
  else
    v9 = 1;
  if (v9)
    goto LABEL_6;
  *(_QWORD *)(a1 + 112) = sub_2160EC80C();
  v10 = sub_2160EC80C();
  *(_QWORD *)(a1 + 120) = v10;
  if (!*(_QWORD *)(a1 + 112) || !v10)
    goto LABEL_6;
  *(_DWORD *)(a1 + 72) = 1;
  *(_QWORD *)(a1 + 64) = 0x100000001;
  *(_OWORD *)(a1 + 128) = xmmword_2160EF0C0;
  v11 = *(_DWORD *)(a2 + 132);
  v12 = *(_DWORD *)(a2 + 100) << ((a3 - 3) < 2);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 32);
  v13 = (v12 + 64) * (v11 + 64);
  *(_QWORD *)(a1 + 88) = sub_2160CB618(v13);
  *(_QWORD *)(a1 + 96) = sub_2160CB618(v13);
  *(_QWORD *)(a1 + 104) = sub_2160CB618(v13);
  if (!a3 && a4)
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_DWORD *)(a1 + 40) = 0;
    return;
  }
  v14 = (v11 >> 4) + 4;
  v15 = sub_2160CB618((unint64_t)(((v12 >> 4) + 4) * v14) << 10);
  *(_QWORD *)(a1 + 32) = v15;
  if (!v15)
  {
LABEL_6:
    sub_2160DDBD0(a1);
    return;
  }
  *(_DWORD *)(a1 + 40) = v14 << 10;
}

void sub_215FE4D84(uint64_t a1)
{
  void *v2;

  if (a1)
  {
    j__free(*(void **)(a1 + 88));
    j__free(*(void **)(a1 + 96));
    j__free(*(void **)(a1 + 104));
    *(_QWORD *)(a1 + 88) = 0;
    *(_QWORD *)(a1 + 96) = 0;
    *(_QWORD *)(a1 + 104) = 0;
    v2 = *(void **)(a1 + 32);
    if (v2)
    {
      j__free(v2);
      *(_QWORD *)(a1 + 32) = 0;
    }
    sub_2160EC854(*(pthread_mutex_t **)(a1 + 48));
    *(_QWORD *)(a1 + 48) = 0;
    sub_2160EC854(*(pthread_mutex_t **)(a1 + 56));
    *(_QWORD *)(a1 + 56) = 0;
    sub_2160EC854(*(pthread_mutex_t **)(a1 + 112));
    *(_QWORD *)(a1 + 112) = 0;
    sub_2160EC854(*(pthread_mutex_t **)(a1 + 120));
    *(_QWORD *)(a1 + 120) = 0;
  }
}

uint64_t sub_215FE4E04(uint64_t result, int a2)
{
  _DWORD *v2;
  unint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;

  v2 = (_DWORD *)(result + 252);
  v3 = 0xFFFFFFFFFFFFFFEBLL;
  do
  {
    v4 = *((char *)&unk_2160EF140 + v3 + 142);
    v5 = *((char *)&unk_2160EF140 + v3 + 163);
    v6 = *((char *)&unk_2160EF140 + v3 + 184);
    v7 = *((char *)&unk_2160EF140 + v3 + 205);
    v8 = *((char *)&unk_2160EF140 + v3 + 226);
    *(v2 - 63) = *((char *)&unk_2160EF140 + v3 + 121) * a2;
    *(v2 - 42) = v4 * a2;
    *(v2 - 21) = v5 * a2;
    *v2 = v6 * a2;
    v2[21] = v7 * a2;
    v2[42] = v8 * a2;
    ++v2;
  }
  while (!__CFADD__(v3++, 1));
  return result;
}

uint64_t sub_215FE4E70(uint64_t result, int a2)
{
  _WORD *v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64x2_t v9;
  int64x2_t v10;
  int64x2_t v11;
  int32x2_t v12;
  int v13;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  unsigned int v19;
  uint64_t v20;
  int v21;
  _DWORD *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;

  if (result && a2)
  {
    v2 = *(_WORD **)(result + 1096);
    v3 = *(_QWORD *)(result + 1104);
    v4 = *(_DWORD *)(result + 148);
    v5 = *(unsigned int *)(result + 116);
    *v2 = 0x4000;
    v6 = (v4 >> 4) - 1;
    if (v4 >= 0x20)
    {
      v7 = 0;
      if (v6 <= 1)
        v8 = 1;
      else
        v8 = v6;
      v9 = (uint64x2_t)vdupq_n_s64(v8 - 1);
      v10 = (int64x2_t)xmmword_2160EF0D0;
      v11 = vdupq_n_s64(2uLL);
      do
      {
        v12 = vmovn_s64((int64x2_t)vcgeq_u64(v9, (uint64x2_t)v10));
        if ((v12.i8[0] & 1) != 0)
          v2[v7 + 1] = v7 & 0x1FFE | 0xA000;
        if ((v12.i8[4] & 1) != 0)
          v2[v7 + 2] = v7 & 0x1FFE | 0xA001;
        v7 += 2;
        v10 = vaddq_s64(v10, v11);
      }
      while ((((_DWORD)v8 + 1) & 0x1FFFFFFE) != v7);
    }
    v2[v6 + 1] = v6 & 0x1FFF | 0x6000;
    *(_DWORD *)(v3 + 32) = 0;
    *(_OWORD *)v3 = 0u;
    *(_OWORD *)(v3 + 16) = 0u;
    if ((int)v5 >= 1)
    {
      v13 = 0;
      v14 = (_DWORD *)(v3 + 36);
      v15 = v5;
      do
      {
        *v14++ = v13;
        v13 += a2;
        --v15;
      }
      while (v15);
    }
    v16 = 0;
    v17 = v3 + 4 * (int)v5 + 36;
    do
    {
      *(_DWORD *)(v17 + v16) = (v5 - 1) * a2;
      v16 += 4;
    }
    while (v16 != 36);
    if ((int)v5 >= 0)
      v18 = v5;
    else
      v18 = v5 + 1;
    v19 = v18 >> 1;
    if (*(_BYTE *)result)
      v5 = v5;
    else
      v5 = v19;
    v20 = *(_QWORD *)(result + 1112);
    if (v20)
    {
      *(_DWORD *)(v20 + 32) = 0;
      *(_OWORD *)v20 = 0u;
      *(_OWORD *)(v20 + 16) = 0u;
      if ((int)v5 >= 1)
      {
        v21 = 0;
        v22 = (_DWORD *)(v20 + 36);
        v23 = v5;
        do
        {
          *v22++ = v21;
          v21 += a2;
          --v23;
        }
        while (v23);
      }
      v24 = 0;
      v25 = (v5 - 1) * a2;
      v26 = v20 + 4 * (int)v5 + 36;
      do
      {
        *(_DWORD *)(v26 + v24) = v25;
        v24 += 4;
      }
      while (v24 != 36);
    }
  }
  return result;
}

uint64_t sub_215FE4FF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  unsigned __int32 v12;
  double v13;
  double v14;
  int16x8_t v15;
  uint64_t result;
  int v17;
  unint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;

  v2 = *(_QWORD *)(a1 + 24);
  v1 = *(_QWORD *)(a1 + 32);
  v3 = *(unsigned int *)(v2 + 132);
  v4 = *(unsigned int *)(v2 + 136);
  v5 = v3 >> 4;
  v6 = *(_DWORD *)(a1 + 44);
  if (v6)
    v7 = 5;
  else
    v7 = 4;
  v8 = *(_DWORD *)(v2 + 100) >> v7;
  v9 = v5 + 4;
  v10 = *(_QWORD *)(v2 + 32);
  v11 = *(_BYTE *)(v2 + 3);
  if (v11)
  {
    v11 = *(_BYTE *)v2 | (v6 != 0);
    if (v11)
    {
      if (*(unsigned __int8 *)(v2 + 5) | (v6 == 1))
        v10 += v4;
      LODWORD(v4) = 2 * v4;
    }
    else
    {
      v11 = 0;
    }
  }
  v12 = v11;
  sub_215FE5158(v10, (int *)(v2 + 600), *(_DWORD *)(v2 + 132) >> 4, (__int128 *)(v1 + (v9 << 10)), v11);
  result = sub_215FE54BC(v1 + (v9 << 10), 0, v1, (int)v5 + 4, v13, v14, v15);
  if (v8 >= 2)
  {
    v17 = 0;
    v18 = v3;
    v19 = v8 >> 1;
    v20 = v2 + 760;
    v21 = (2 * v9);
    v22 = v8 - 1;
    v23 = 16 * (int)v4;
    v24 = ((v18 << 6) & 0x3FFFFFFC00) + 4096;
    v25 = (__int128 *)(v1 + (v21 << 10));
    do
    {
      result = (uint64_t)sub_215FE5158(v10, (int *)(v20 + 84 * ((v17 == 0) | (2 * (v22 == v17))) + 8), v5, v25, v12);
      v10 += v23;
      ++v17;
      v25 = (__int128 *)((char *)v25 + v24);
    }
    while (v19 != v17);
  }
  return result;
}

__int128 *sub_215FE5158(uint64_t a1, int *a2, int a3, __int128 *a4, unsigned __int32 a5)
{
  int *v7;
  uint64_t v8;
  _BYTE *v9;
  __int128 *v10;
  int32x4_t v11;
  double v12;
  int32x4_t v13;
  int32x4_t v14;
  uint64_t v15;
  _OWORD *v16;
  int8x16_t *v17;
  const char *v18;
  const __int16 *v19;
  int8x16_t v20;
  int8x16_t v21;
  _BYTE *v22;
  int16x8_t v23;
  __int128 *v24;
  int v25;
  _WORD *v26;
  int v27;
  char v28;
  char v29;
  char v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  int32x4_t v34;
  double v35;
  int32x4_t v36;
  int32x4_t v37;
  int8x16_t v38;
  _WORD *v39;
  int8x16_t v40;
  __int128 *v43;
  int *v44;
  _BYTE v45[512];
  _BYTE v46[512];
  _WORD v47[256];
  int v48;
  __int128 v49;
  int v50;
  __int128 v51;
  _QWORD v52[5];

  v7 = a2;
  v8 = a1;
  v52[3] = *MEMORY[0x24BDAC8D0];
  v9 = v46;
  v10 = a4 + 80;
  memset(v52, 0, 20);
  v50 = 0;
  v51 = xmmword_2160EE7E0;
  v43 = a4 + 64;
  sub_215FE57E8((uint64_t)(a4 + 64), (uint64_t)(a4 + 80), a1, a2, (int *)v52, (int *)v52, &v50, a5, (int8x16_t)xmmword_2160EE7E0);
  sub_215FE5C04((uint64_t)(a4 + 160), (uint64_t)v47, v8, (uint64_t)v7, a5, v11, v12, v13, v14);
  v15 = 0;
  v16 = v45;
  do
  {
    v17 = (int8x16_t *)&a4[v15];
    v18 = (const char *)&a4[v15 + 160];
    v19 = &v47[v15 * 16];
    v20 = vld1q_dup_s8(v18);
    v17[96] = v20;
    v17[32] = v20;
    v21 = (int8x16_t)vld1q_dup_s16(v19);
    v16[32] = v21;
    v16[33] = v21;
    v16[1] = v21;
    v16 += 2;
    ++v15;
  }
  while (v15 != 16);
  v22 = v45;
  sub_215FE7838((uint64_t)(a4 + 112), (uint64_t)v45, (uint64_t)v46, (uint64_t)v47, v21);
  sub_215FE7AB8(v43, v10, a4 + 112, -64, 0);
  v24 = a4 + 128;
  if (a3 == 1)
  {
    v39 = v47;
  }
  else
  {
    v44 = v7;
    v25 = 0;
    v22 = v45;
    v26 = v47;
    do
    {
      if (v25)
        v27 = -16;
      else
        v27 = 0;
      if (v25)
        v28 = 13;
      else
        v28 = 0;
      if (v25)
        v29 = 14;
      else
        v29 = 0;
      if (v25)
        v30 = 15;
      else
        v30 = 0;
      if (v25)
        v31 = 5.44760372e-270;
      else
        v31 = 0.0;
      LODWORD(v52[0]) = v27;
      BYTE4(v52[0]) = 0;
      *(double *)((char *)v52 + 5) = v31;
      if (v25)
        *(double *)v23.i64 = COERCE_DOUBLE(0xC000B000A0009);
      else
        *(double *)v23.i64 = 0.0;
      *(_DWORD *)((char *)&v52[1] + 5) = vmovn_s16(v23).u32[0];
      BYTE1(v52[2]) = v28;
      v32 = (uint64_t)v22;
      v33 = (uint64_t)v26;
      BYTE2(v52[2]) = v29;
      v22 = v9;
      BYTE3(v52[2]) = v30;
      v50 = 0;
      v51 = xmmword_2160EE7E0;
      v48 = 16;
      v49 = xmmword_2160EE7E0;
      sub_215FE57E8((uint64_t)v24, (uint64_t)(v24 + 16), v8, v44, (int *)v52, &v50, &v48, a5, (int8x16_t)xmmword_2160EE7E0);
      v8 += 16;
      sub_215FE5C04((uint64_t)(v24 + 96), v32, v8, (uint64_t)v44, a5, v34, v35, v36, v37);
      sub_215FE7838((uint64_t)(v24 + 48), (uint64_t)v9, v33, v32, v38);
      v24 += 64;
      ++v25;
      v9 = (_BYTE *)v33;
      v26 = (_WORD *)v32;
    }
    while (a3 - 1 != v25);
    v39 = (_WORD *)v32;
    v9 = (_BYTE *)v33;
    v7 = v44;
  }
  LODWORD(v52[0]) = -16;
  *(_OWORD *)((char *)v52 + 4) = xmmword_2160EE7E0;
  if (a3 == 1)
    memset(v52, 0, 20);
  v50 = 0;
  v51 = xmmword_2160EE7E0;
  v48 = 0;
  *(_QWORD *)&v49 = 0xF0F0F0F0F0F0F0FLL;
  *((_QWORD *)&v49 + 1) = 0xF0F0F0F0F0F0F0FLL;
  sub_215FE5748(v8, v7, (int *)v52, &v50, &v48, (uint64_t)v24, (uint64_t)v9, (uint64_t)v39, (int8x16_t)xmmword_2160EE7E0, (uint64_t)v22, a5);
  sub_215FE5748(v8, v7, dword_2160EF168, &dword_2160EF168[5], &dword_2160EF168[5], (uint64_t)(v24 + 64), (uint64_t)v39, (uint64_t)v22, v40, (uint64_t)v9, a5);
  return sub_215FE7AB8(v24 + 64, v24 + 80, v24 + 112, 64, 0xFu);
}

uint64_t sub_215FE54BC(uint64_t result, unsigned int a2, uint64_t a3, int a4, double a5, double a6, int16x8_t a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int32x2_t *v12;
  __int8 v13;
  __int8 v14;
  __int8 v15;
  __int8 v16;
  __int8 v17;
  __int8 v18;
  __int8 v19;
  int32x2_t v20;
  __int8 v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int32 v24;

  if (a4)
  {
    v7 = 0;
    v8 = 16 * a2;
    do
    {
      v9 = 0;
      v10 = a3;
      do
      {
        v11 = 0;
        v12 = (int32x2_t *)(result + v8 + (v9 << 8));
        v13 = v12->i8[0];
        v14 = v12->i8[1];
        v15 = v12->i8[2];
        v16 = v12->i8[3];
        v17 = v12->i8[4];
        v18 = v12->i8[5];
        v19 = v12->i8[6];
        v20 = v12[1];
        v21 = v12->i8[7];
        LODWORD(v22) = vdup_lane_s32(v20, 1).u32[0];
        *(int8x8_t *)a7.i8 = vzip1_s8((int8x8_t)v20, (int8x8_t)v20);
        BYTE4(v22) = v13;
        BYTE5(v22) = v14;
        BYTE6(v22) = v15;
        HIBYTE(v22) = v16;
        do
        {
          v23 = v10 + v11;
          *(_BYTE *)v23 = v13;
          *(_BYTE *)(v23 + 1) = v14;
          *(_BYTE *)(v23 + 2) = v15;
          *(_BYTE *)(v23 + 3) = v16;
          *(_BYTE *)(v23 + 4) = v17;
          *(_BYTE *)(v23 + 5) = v18;
          *(_BYTE *)(v23 + 6) = v19;
          *(_BYTE *)(v23 + 7) = v21;
          v24 = vmovn_s16(a7).u32[0];
          *(_DWORD *)(v23 + 8) = v24;
          *(_QWORD *)(v23 + 12) = v22;
          *(_BYTE *)(v23 + 20) = v17;
          *(_BYTE *)(v23 + 21) = v18;
          *(_BYTE *)(v23 + 22) = v19;
          *(_BYTE *)(v23 + 23) = v21;
          *(_DWORD *)(v23 + 24) = v24;
          *(_QWORD *)(v23 + 28) = v22;
          *(_BYTE *)(v23 + 36) = v17;
          *(_BYTE *)(v23 + 37) = v18;
          *(_BYTE *)(v23 + 38) = v19;
          *(_BYTE *)(v23 + 39) = v21;
          *(_DWORD *)(v23 + 40) = v24;
          *(_QWORD *)(v23 + 44) = v22;
          *(_BYTE *)(v23 + 52) = v17;
          *(_BYTE *)(v23 + 53) = v18;
          *(_BYTE *)(v23 + 54) = v19;
          *(_BYTE *)(v23 + 55) = v21;
          v11 += 64;
          *(int32x2_t *)(v23 + 56) = v20;
        }
        while ((_DWORD)v11 != 256);
        ++v9;
        v10 += 256;
      }
      while (v9 != 4);
      result += 1024;
      a3 += 1024;
      ++v7;
    }
    while (v7 != a4);
  }
  return result;
}

uint64_t sub_215FE55C0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  unsigned __int32 v12;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  int16x8_t v22;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 24);
  v2 = *(unsigned int *)(v1 + 132);
  v3 = *(unsigned int *)(v1 + 136);
  v4 = v2 >> 4;
  v5 = *(_DWORD *)(a1 + 44);
  if (v5)
    v6 = 5;
  else
    v6 = 4;
  v7 = *(_DWORD *)(v1 + 100) >> v6;
  v8 = v4 + 4;
  v9 = *(_QWORD *)(v1 + 32);
  v10 = *(_BYTE *)(v1 + 3);
  if (v10)
  {
    v10 = *(_BYTE *)v1 | (v5 != 0);
    if (v10)
    {
      v11 = v9 + v3;
      LODWORD(v3) = 2 * v3;
      if (*(unsigned __int8 *)(v1 + 5) | (v5 == 1))
        v9 = v11;
    }
    else
    {
      v10 = 0;
    }
  }
  v12 = v10;
  v13 = v9 + 16 * (v7 >> 1) * v3;
  v14 = (__int128 *)(*(_QWORD *)(a1 + 32) + (v8 << 11) + ((unint64_t)((v7 >> 1) * v8) << 10));
  if (v7 >> 1 >= v7)
  {
    v19 = v8;
  }
  else
  {
    v25 = *(_QWORD *)(a1 + 24);
    v15 = v1 + 760;
    v16 = 16 * (int)v3;
    v24 = v8;
    v17 = -(v7 >> 1);
    v18 = ((v2 << 6) & 0x3FFFFFFC00) + 4096;
    do
    {
      sub_215FE5158(v13, (int *)(v15 + 84 * ((v17 == 0) | (2 * (v7 + v17 == 1))) + 8), v4, v14, v12);
      v13 += v16;
      --v17;
      v14 = (__int128 *)((char *)v14 + v18);
    }
    while (v7 + v17);
    LODWORD(v8) = v4 + 4;
    v1 = v25;
    v19 = v24;
  }
  sub_215FE5158(v13, (int *)(v1 + 684), v4, v14, v12);
  return sub_215FE54BC((uint64_t)v14, 0xFu, (uint64_t)&v14[64 * v19], v8, v20, v21, v22);
}

uint64_t sub_215FE5748(uint64_t a1, int *a2, int *a3, int *a4, int *a5, uint64_t a6, uint64_t a7, uint64_t a8, int8x16_t a9, uint64_t a10, int a11)
{
  uint64_t v14;
  int8x16_t *v15;
  const char *v16;
  const __int16 *v17;
  int8x16_t v18;
  int16x8_t v19;
  int16x8_t *v20;

  sub_215FE57E8(a6, a6 + 256, a1, a2, a3, a4, a5, a11, a9);
  v14 = 0;
  v15 = (int8x16_t *)a6;
  do
  {
    v16 = &v15[32].i8[15];
    v17 = (const __int16 *)(a8 + 30 + v14);
    v18 = vld1q_dup_s8(v16);
    v19 = vld1q_dup_s16(v17);
    v15[96] = v18;
    v20 = (int16x8_t *)(a10 + 16 + v14);
    v20[-1] = v19;
    *v20 = v19;
    ++v15;
    v14 += 32;
  }
  while (v14 != 512);
  return sub_215FE7838(a6 + 768, a7, a8, a10, v18);
}

uint64_t sub_215FE57E8(uint64_t result, uint64_t a2, uint64_t a3, int *a4, int *a5, int *a6, int *a7, int a8, int8x16_t a9)
{
  int32x4_t v9;
  int32x4_t v10;
  uint8x8_t v11;
  int8x8_t v12;
  int32x4_t v13;
  int32x4_t v14;
  int8x16_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  int32x4_t v21;
  int32x4_t v22;
  uint16x8_t v23;
  uint32x4_t v24;
  uint64_t v25;
  unsigned __int8 *v26;
  __int32 v27;
  __int32 v28;
  uint64_t v29;
  unsigned int v30;
  unsigned __int8 v31;
  uint16x8_t v32;
  int8x8_t v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  int8x16_t v38;
  int8x16_t v39;
  int32x2_t v40;
  int32x4_t v41;
  int32x4_t v42;
  int32x4_t v43;
  __int32 v44;
  int8x16_t v45;
  int8x16_t v46;
  int32x2_t v47;
  int32x4_t v48;
  int32x2_t v49;
  int32x4_t v50;
  unsigned __int32 v51;
  __int32 v52;
  __int32 v53;
  int32x2_t v54;
  int32x2_t v55;
  __int32 v56;
  int v57;
  int16x4_t v58;
  int8x16_t v59;
  int16x4_t v60;
  int8x16_t v61;
  int8x16_t v62;
  uint32x4_t v63;
  int32x4_t v64;
  int32x4_t v65;
  int v66;
  int8x16_t v67;
  int32x4_t v68;
  int32x4_t v69;
  int32x4_t v70;
  int32x4_t v71;
  int32x4_t v72;
  unsigned int v73;
  uint32x4_t v74;
  int v75;
  unsigned int v76;
  int32x4_t v77;
  int32x4_t v78;
  int32x4_t v79;
  int32x4_t v80;
  int16x8_t v81;
  uint64_t v82;
  uint64_t v83;

  v16 = 0;
  v83 = *a5;
  v82 = *a6;
  v17 = *a7;
  v18 = *((unsigned __int8 *)a5 + 5);
  v19 = *((unsigned __int8 *)a6 + 5);
  v20 = *((unsigned __int8 *)a7 + 5);
  a9.i64[0] = 0x1400000014;
  v21.i64[0] = 0x400000004;
  v21.i64[1] = 0x400000004;
  v22.i64[0] = 0x1000000010;
  v22.i64[1] = 0x1000000010;
  v23.i64[0] = 0x14001400140014;
  v23.i64[1] = 0x14001400140014;
  v24.i64[0] = 0xFF000000FFLL;
  v24.i64[1] = 0xFF000000FFLL;
  do
  {
    v25 = a3 + ((uint64_t)*a4 << (a8 != 0));
    v26 = (unsigned __int8 *)(v25 + v83);
    if (v18)
    {
      v27 = v26[15];
      if (v18 == 1)
      {
        v28 = v26[14];
        goto LABEL_7;
      }
    }
    else
    {
      v27 = *v26;
    }
    v28 = v27;
LABEL_7:
    v29 = v25 + v82;
    v13.i8[0] = *(_BYTE *)(v25 + v82);
    if (v19)
    {
      v30 = *(unsigned __int8 *)(v29 + 15);
      if (v19 == 1)
      {
        v14.i8[0] = *(_BYTE *)(v29 + 3);
        v14.i8[4] = *(_BYTE *)(v29 + 4);
        v31 = *(_BYTE *)(v29 + 2);
        v11.i32[0] = *(_DWORD *)(v29 + 5);
        v32 = vmovl_u8(v11);
        v11.i32[0] = *(_DWORD *)(v29 + 9);
        v33 = (int8x8_t)vmovl_u8(v11).u64[0];
        v12.i8[0] = *(_BYTE *)(v29 + 13);
        v12.i8[4] = *(_BYTE *)(v29 + 14);
        v13.i8[4] = *(_BYTE *)(v25 + v82 + 1);
        *(int8x8_t *)v13.i8 = vqtbl3_s8(*(int8x16x3_t *)v13.i8, (int8x8_t)0x2624222014100400);
        goto LABEL_12;
      }
    }
    else
    {
      v30 = v13.i32[0];
    }
    *(int8x8_t *)v13.i8 = vdup_n_s8(v30);
    v33 = (int8x8_t)vdup_n_s16(v30);
    v31 = v30;
    v12 = (int8x8_t)vdup_n_s32(v30);
LABEL_12:
    v34 = v25 + v17;
    v15.i8[0] = *(_BYTE *)(v25 + v17);
    v15.i8[4] = *(_BYTE *)(v25 + v17 + 1);
    if (v20)
    {
      if (v20 == 1)
      {
        LOBYTE(v35) = *(_BYTE *)(v34 + 2);
        goto LABEL_18;
      }
      v35 = *(unsigned __int8 *)(v34 + 15);
    }
    else
    {
      v35 = v15.i32[0];
    }
    *(int32x2_t *)v15.i8 = vdup_n_s32(v35);
LABEL_18:
    v36 = result + v16;
    v37 = a2 + v16;
    v38 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v13.i8);
    v39 = (int8x16_t)vmovl_high_u16((uint16x8_t)v38);
    v45 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v38.i8);
    v40.i32[0] = vdup_lane_s32(*(int32x2_t *)v45.i8, 1).u32[0];
    v41 = (int32x4_t)vextq_s8(v45, v39, 8uLL);
    v42 = (int32x4_t)vextq_s8(a9, v45, 0xCuLL);
    v43 = (int32x4_t)vextq_s8(v45, v39, 0xCuLL);
    v44 = v45.i32[0];
    v40.i32[1] = v31;
    *(int32x2_t *)v9.i8 = vmul_s32(v40, (int32x2_t)0x1400000014);
    v45.i64[0] = *(_QWORD *)&v33 & 0xFF00FF00FF00FFLL;
    v46 = (int8x16_t)vmovl_u16((uint16x4_t)(*(_QWORD *)&v33 & 0xFF00FF00FF00FFLL));
    *(int8x8_t *)v10.i8 = vand_s8(v12, (int8x8_t)0xFF000000FFLL);
    v47 = (int32x2_t)vand_s8(*(int8x8_t *)v15.i8, (int8x8_t)0xFF000000FFLL);
    v48.i64[0] = vextq_s8(v46, v46, 8uLL).u64[0];
    *(int32x2_t *)v15.i8 = vmul_s32(*(int32x2_t *)v10.i8, (int32x2_t)0x1400000014);
    v49 = vadd_s32(*(int32x2_t *)v48.i8, *(int32x2_t *)v15.i8);
    v48.i64[1] = v10.i64[0];
    v50.i64[0] = vextq_s8(v46, (int8x16_t)v10, 0xCuLL).u64[0];
    v51 = vdup_lane_s32(*(int32x2_t *)v10.i8, 1).u32[0];
    v52 = v10.i32[0];
    v10 = vmulq_s32(v48, v21);
    *(_BYTE *)(result + v16 + 1) = v13.i8[1];
    v53 = v52 + v10.i32[3];
    v54 = vdup_lane_s32(v47, 0);
    v55 = vadd_s32(vadd_s32(v49, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v10, (int8x16_t)v10, 4uLL)), v47);
    v56 = v47.i32[0];
    v57 = 5 * v47.i32[1];
    *(_BYTE *)v36 = v13.i8[0];
    *(_BYTE *)(v36 + 2) = v31;
    *(_BYTE *)(v36 + 11) = v33.i8[4];
    *(int8x8_t *)(v36 + 3) = vext_s8(*(int8x8_t *)v13.i8, vuzp1_s8(v33, (int8x8_t)0x1400000014), 2uLL);
    *(_BYTE *)(v36 + 12) = v33.i8[6];
    *(_BYTE *)(v36 + 13) = v12.i8[0];
    *(_BYTE *)(v36 + 14) = v12.i8[4];
    *(_BYTE *)(v36 + 15) = v30;
    v58 = (int16x4_t)vextq_s8(v38, v38, 4uLL).u64[0];
    v59 = (int8x16_t)vmull_s16(v58, (int16x4_t)0x4000400040004);
    v60 = (int16x4_t)vextq_s8(v38, v45, 0xCuLL).u64[0];
    v61 = vextq_s8((int8x16_t)vmull_s16(*(int16x4_t *)v38.i8, (int16x4_t)0x140014FFFBFFFBLL), (int8x16_t)v9, 8uLL);
    v9.i32[3] = vdup_lane_s32(*(int32x2_t *)&v59, 0).i32[1];
    v62 = (int8x16_t)vmull_s16(v60, (int16x4_t)0x4000400040004);
    v9.i32[2] = -5 * v31;
    v63 = (uint32x4_t)vaddq_s32(v41, (int32x4_t)vextq_s8(v59, v62, 4uLL));
    v64 = vaddq_s32(v9, v22);
    v42.i32[0] = v27;
    v42.i32[3] = v31;
    v65 = vaddq_s32(v64, v42);
    v66 = v64.i32[0] + v28 - 5 * v27 + 20 * v44 + v45.i32[2] - 5 * v31;
    v67 = (int8x16_t)vmull_high_u16((uint16x8_t)v38, v23);
    v68 = (int32x4_t)vmlal_high_u16(v63, (uint16x8_t)v38, v23);
    v9 = (int32x4_t)vmull_u16(*(uint16x4_t *)v45.i8, (uint16x4_t)0x14001400140014);
    v69 = vmlal_s16(v65, *(int16x4_t *)v38.i8, (int16x4_t)0x140014FFFBFFFBLL);
    v70 = (int32x4_t)vextq_s8(v67, (int8x16_t)v9, 4uLL);
    v71 = (int32x4_t)vextq_s8(v61, v61, 0xCuLL);
    v71.i32[3] = v67.i32[0];
    v72 = (int32x4_t)vextq_s8(v39, v46, 0xCuLL);
    v73 = (v66 >> 5) & ~(v66 >> 31);
    if (v73 >= 0xFF)
      LOBYTE(v73) = -1;
    *(_BYTE *)v37 = v73;
    v74 = (uint32x4_t)vaddq_s32((int32x4_t)vextq_s8(v39, v46, 8uLL), (int32x4_t)vextq_s8(v62, (int8x16_t)v10, 4uLL));
    v75 = v53 + 20 * v30 + 20 * v56 + v35 - v57 + 16;
    v76 = (v75 >> 5) & ~(v75 >> 31);
    if (v76 >= 0xFF)
      LOBYTE(v76) = -1;
    v77 = vmlal_s16(vaddq_s32(v69, vaddq_s32(v71, v43)), v58, (int16x4_t)0x4000400040004);
    v78 = vshrq_n_s32(vaddq_s32(vmlal_s16(vaddq_s32(v68, vaddq_s32(v70, v72)), v60, (int16x4_t)0x4000400040004), v22), 5uLL);
    v79 = vshrq_n_s32(v77, 5uLL);
    v14 = (int32x4_t)vextq_s8((int8x16_t)v9, v15, 4uLL);
    v50.i64[1] = __PAIR64__(v30, v51);
    *(int8x8_t *)(v37 + 1) = vmovn_s16(vuzp1q_s16((int16x8_t)vminq_u32((uint32x4_t)vmaxq_s32(v79, (int32x4_t)0), v24), (int16x8_t)vminq_u32((uint32x4_t)vmaxq_s32(v78, (int32x4_t)0), v24)));
    v54.i32[0] = v30;
    v78.i32[0] = vdup_lane_s32(*(int32x2_t *)v15.i8, 1).u32[0];
    v78.i32[1] = 20 * v30;
    v11 = (uint8x8_t)vmin_u32((uint32x2_t)vmax_s32(vshr_n_s32(vadd_s32(vmla_s32(vadd_s32(v55, *(int32x2_t *)v78.i8), v54, (int32x2_t)0x400000004), (int32x2_t)0x1000000010), 5uLL), 0), (uint32x2_t)0xFF000000FFLL);
    v80 = vaddq_s32(vaddq_s32((int32x4_t)vmlal_u16(v74, *(uint16x4_t *)v45.i8, (uint16x4_t)0x14001400140014), v14), v50);
    v13 = vaddq_s32(v10, v22);
    v81 = (int16x8_t)vminq_u32((uint32x4_t)vmaxq_s32(vshrq_n_s32(vaddq_s32(v80, v13), 5uLL), (int32x4_t)0), v24);
    *(int16x4_t *)v81.i8 = vmovn_s32((int32x4_t)v81);
    v12 = vmovn_s16(v81);
    *(_DWORD *)(v37 + 9) = v12.i32[0];
    *(_BYTE *)(v37 + 14) = v11.i8[4];
    *(_BYTE *)(v37 + 13) = v11.i8[0];
    *(_BYTE *)(v37 + 15) = v76;
    ++a4;
    v16 += 16;
  }
  while ((_DWORD)v16 != 256);
  return result;
}

uint64_t sub_215FE5C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int32 a5, int32x4_t a6, double a7, int32x4_t a8, int32x4_t a9)
{
  int32x4_t v9;
  int8x16_t v10;
  int16x8_t v11;
  int8x16_t v12;
  unsigned __int8 *v13;
  int v14;
  int v15;
  unsigned __int8 *v16;
  int v17;
  int v18;
  uint64_t result;
  unsigned __int8 *v20;
  int v21;
  int v22;
  int v23;
  unsigned __int8 *v24;
  int v25;
  int v26;
  int v27;
  int v28;
  unsigned __int8 *v29;
  int32x4_t v30;
  int32x4_t v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int32x4_t v66;
  int8x16_t v67;
  unsigned __int8 *v68;
  __int16 v69;
  unsigned int v70;
  int v71;
  BOOL v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  unsigned __int8 *v85;
  unsigned __int8 *v86;
  unsigned __int8 *v87;
  _WORD *v88;
  int v89;
  unsigned int v90;
  char v91;
  char v92;
  int v93;
  unsigned int v94;
  char v95;
  char v96;
  int v97;
  unsigned int v98;
  char v99;
  int v100;
  int v101;
  int v102;
  unsigned int v103;
  char v104;
  char v105;
  int v106;
  int v107;
  char v108;
  char v109;
  int v110;
  char v111;
  char v112;
  int v113;
  int v114;
  unsigned int v115;
  char v116;
  char v117;
  int v118;
  int v119;
  char v120;
  char v121;
  int v122;
  int v123;
  unsigned int v124;
  char v125;
  char v126;
  int v127;
  unsigned int v128;
  char v129;
  char v130;
  int v131;
  int v132;
  unsigned int v133;
  char v134;
  char v135;
  int v136;
  unsigned int v137;
  char v138;
  int v139;
  unsigned int v140;
  int v141;
  unsigned int v142;
  int v143;
  unsigned int v144;
  uint64_t v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  unsigned int v151;
  int v152;
  char v153;
  char v154;
  int v155;
  unsigned int v156;
  int v157;
  unsigned int v158;
  int v159;
  unsigned int v160;
  int v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  int v165;
  unsigned int v166;
  unsigned int v167;
  int v168;
  unsigned int v169;
  int v170;
  unsigned int v171;
  int v172;
  unsigned int v173;
  int v174;
  unsigned int v175;
  int v176;
  unsigned int v177;
  int v178;
  unsigned int v179;
  unsigned int v180;
  int v181;
  unsigned int v182;
  int v183;
  unsigned int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  unsigned int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  unsigned int v206;
  unsigned int v207;
  int v208;
  unsigned int v209;
  unsigned int v210;
  int v211;
  unsigned int v212;
  unsigned int v213;
  int v214;
  unsigned int v215;
  unsigned int v216;
  int v217;
  unsigned int v218;
  unsigned int v219;
  int v220;
  unsigned int v221;
  unsigned int v222;
  int v223;
  unsigned int v224;
  unsigned int v225;
  int v226;
  unsigned int v227;
  unsigned int v228;
  int v229;
  unsigned int v230;
  unsigned int v231;
  int v232;
  unsigned int v233;
  unsigned int v234;
  int v235;
  unsigned int v236;
  unsigned int v237;
  int v238;
  unsigned int v239;
  unsigned int v240;
  int v241;
  unsigned int v242;
  unsigned int v243;
  int v244;
  unsigned int v245;
  unsigned int v246;
  int v247;
  unsigned int v248;
  unsigned int v249;
  int v250;
  unsigned int v251;
  int v252;
  unsigned int v253;
  int v254;
  char v255;
  unsigned int v256;
  int v257;
  unsigned int v258;
  int v259;
  char v260;
  unsigned int v261;
  int v262;
  unsigned int v263;
  int v264;
  unsigned int v265;
  int v266;
  unsigned int v267;
  int v268;
  unsigned int v269;
  int v270;
  char v271;
  unsigned int v272;
  int v273;
  char v274;
  unsigned int v275;
  int v276;
  char v277;
  unsigned int v278;
  int v279;
  char v280;
  unsigned int v281;
  int32x4_t v282;
  char v283;
  int32x4_t v284;
  int32x4_t v285;
  int8x8_t v286;
  char v290;
  char v291;
  char v292;
  char v293;
  int v294;
  int v295;
  int v296;
  int v297;
  int v298;
  int v299;
  int v300;
  int v301;
  unsigned int v302;
  int v303;
  int v304;
  int v305;
  int v306;
  int v307;
  int v308;
  int v309;
  int32x4_t *v310;
  int v311;
  int v312;
  int v313;
  int v314;
  int v315;
  int v316;
  int v317;
  int v318;
  int v319;
  int v320;
  unsigned __int16 v321;
  int v322;
  int v323;
  int v324;
  int v325;
  int v326;
  int v327;
  unsigned __int16 v328;
  unsigned __int16 v329;
  unsigned __int16 v330;
  int v331;
  int v332;
  int v333;
  int v334;
  unsigned int v335;
  int v336;
  int v337;
  int v338;
  int v339;
  int v340;
  int v341;
  int v342;
  int v343;
  int v344;
  int v345;
  int v346;
  int v347;
  int v348;
  int v349;
  int v350;
  int v351;
  int v352;
  int v353;
  int v354;
  int v355;
  int v356;
  int v357;
  unsigned int v358;
  int v359;
  int v360;
  int v361;
  int v362;
  int v363;
  int v364;
  int v365;
  int v366;
  int v367;
  int v368;
  int v369;
  int v370;
  int v371;
  int v372;
  int v373;
  int v374;
  int v375;
  int v376;
  int v377;
  int v378;
  int v379;
  int v380;
  int v381;
  int v382;
  int v383;
  int v384;
  int v385;
  int v386;
  int v387;
  int v388;
  int v389;
  int v390;
  int v391;
  int v392;
  int v393;
  unint64_t v394;
  int v395;
  int v396;
  int v397;
  int v398;
  int v399;
  int v400;
  int v401;
  int v402;
  int v403;
  int v404;
  int v405;
  int v406;
  int v407;
  int v408;
  int v409;
  int v410;
  int v411;
  int v412;
  int v413;
  int v414;
  int v415;
  int v416;
  int v417;
  int v418;
  int v419;
  int v420;
  int v421;
  int v422;
  int v423;
  int v424;
  int v425;
  int v426;
  int v427;
  int v428;
  int v429;
  int v430;
  int v431;
  int v432;
  int v433;
  int v434;
  int v435;
  int v436;
  int v437;
  int v438;
  int v439;
  int v440;
  int v441;
  int v442;
  int v443;
  int v444;
  int v445;
  int v446;
  int v447;
  int v448;
  int v449;
  uint64_t v450;
  int v451;
  uint64_t v452;
  int v453;
  int v454;
  int v455;
  int v456;
  int v457;
  int v458;
  int v459;
  int v460;
  unint64_t v461;
  int v462;
  int v463;
  int v464;
  int v465;
  int v466;

  a8.i32[0] = 0;
  v452 = 0;
  v9 = *(int32x4_t *)(a4 - 8);
  a6.i32[0] = a5;
  a9.i32[0] = a5;
  v10 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vceqq_s32(a9, a8), 0);
  v11 = (int16x8_t)vaddq_s32(v9, v9);
  v12 = vbslq_s8(v10, (int8x16_t)v9, (int8x16_t)v11);
  v13 = (unsigned __int8 *)(a3 + v12.i32[0]);
  v14 = *v13;
  LODWORD(v394) = v13[1];
  HIDWORD(v394) = v13[2];
  v397 = v13[3];
  v399 = v13[4];
  v15 = 2 * *(_DWORD *)(a4 + 8);
  if (!a5)
    v15 = *(_DWORD *)(a4 + 8);
  v401 = v13[5];
  v403 = v13[6];
  v405 = v13[7];
  v377 = v13[8];
  v379 = v13[9];
  v381 = v13[10];
  v385 = v13[11];
  v387 = v13[12];
  v389 = v13[13];
  v391 = v13[14];
  v453 = v13[15];
  v16 = (unsigned __int8 *)(a3 + v12.i32[1]);
  v17 = *v16;
  v18 = v16[1];
  v339 = v16[2];
  v340 = v16[3];
  v341 = v16[4];
  v343 = v16[5];
  v344 = v16[6];
  v345 = v16[7];
  v346 = v16[8];
  v347 = v16[9];
  v349 = v16[10];
  v351 = v16[11];
  v353 = v16[12];
  v355 = v16[13];
  result = v16[14];
  v342 = v16[15];
  v20 = (unsigned __int8 *)(a3 + v12.i32[2]);
  v21 = *v20;
  v22 = v20[1];
  v23 = v20[2];
  v407 = v20[3];
  v410 = v20[4];
  v413 = v20[5];
  v416 = v20[6];
  v419 = v20[7];
  v429 = v20[8];
  v433 = v20[9];
  v435 = v20[10];
  v441 = v20[11];
  v444 = v20[12];
  v446 = v20[13];
  v448 = v20[14];
  v451 = v20[15];
  v24 = (unsigned __int8 *)(a3 + v12.i32[3]);
  v25 = *v24;
  v26 = v24[1];
  v27 = v24[2];
  v28 = v24[3];
  v409 = v24[4];
  v412 = v24[5];
  v415 = v24[6];
  v418 = v24[7];
  v421 = v24[8];
  v423 = v24[9];
  v425 = v24[10];
  v427 = v24[11];
  v431 = v24[12];
  v437 = v24[13];
  v439 = v24[14];
  v443 = v24[15];
  v29 = (unsigned __int8 *)(a3 + v15);
  v310 = (int32x4_t *)(a4 + 12);
  v30.i64[0] = 0x10000000100000;
  v30.i64[1] = 0x10000000100000;
  v31.i64[0] = 0xE0000000E0000000;
  v31.i64[1] = 0xE0000000E0000000;
  v32 = *v29;
  v33 = v29[1];
  v34 = v29[2];
  v35 = v29[3];
  v36 = v29[4];
  v37 = v29[5];
  v38 = v29[6];
  v39 = v29[7];
  v40 = v29[8];
  v41 = v29[9];
  v42 = v29[10];
  v43 = v29[11];
  v44 = v29[12];
  v45 = v29[13];
  v46 = v29[14];
  v47 = v29[15];
  while (1)
  {
    v48 = v32;
    v49 = v39;
    v50 = v43;
    v51 = v41;
    if ((_DWORD)v452 == 256)
      break;
    v52 = v46;
    v11.i32[0] = 0;
    v321 = v25;
    v464 = v48;
    v301 = v18;
    v53 = v44;
    v463 = v44;
    v329 = v22;
    v330 = v21;
    v54 = v21 + v25;
    v55 = v42;
    v466 = v42;
    v462 = v45;
    v56 = -5 * (v48 + v17) + 20 * v54 + v14;
    v461 = __PAIR64__(v34, v33);
    v322 = v26;
    v465 = v50;
    v57 = -5 * (v33 + v18) + 20 * (v22 + v26) + v394;
    v327 = v27;
    v328 = v23;
    v58 = -5 * (v34 + v339) + 20 * (v23 + v27) + HIDWORD(v394);
    v326 = v28;
    v59 = -5 * (v35 + v340) + 20 * (v407 + v28) + v397;
    v60 = -5 * (v36 + v341) + 20 * (v410 + v409) + v399;
    v61 = -5 * (v37 + v343) + 20 * (v413 + v412) + v401;
    v62 = -5 * (v38 + v344) + 20 * (v416 + v415) + v403;
    v455 = v49;
    v460 = v35;
    v63 = -5 * (v49 + v345) + 20 * (v419 + v418) + v405;
    v384 = v40;
    v296 = -5 * (v40 + v346) + 20 * (v421 + v429) + v377;
    v383 = v51;
    v459 = v36;
    v64 = -5 * (v51 + v347) + 20 * (v423 + v433) + v379;
    v458 = v37;
    v65 = -5 * (v55 + v349) + 20 * (v425 + v435) + v381;
    v457 = v38;
    v299 = -5 * (v50 + v351) + 20 * (v427 + v441) + v385;
    v298 = -5 * (v53 + v353) + 20 * (v431 + v444) + v387;
    v297 = -5 * (v45 + v355) + 20 * (v437 + v446) + v389;
    v456 = v52;
    v295 = -5 * (v52 + result) + 20 * (v439 + v448) + v391;
    v300 = result;
    v361 = v47;
    v66 = *v310++;
    v294 = -5 * (v47 + v342) + 20 * (v443 + v451) + v453;
    v67 = vbslq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vceqq_s32(a6, (int32x4_t)v11), 0), (int8x16_t)v66, (int8x16_t)vaddq_s32(v66, v66));
    v68 = (unsigned __int8 *)(a3 + v67.i32[0]);
    v371 = *v68;
    v69 = v56 + v371;
    v70 = (v56 + v371 + 16) >> 5;
    v71 = (__int16)(v56 + v371);
    if (v71 < -16)
      LOBYTE(v70) = 0;
    v72 = v71 <= 8175;
    v73 = v68[1];
    v362 = v73;
    v74 = v68[2];
    v359 = v74;
    v75 = v68[3];
    v360 = v75;
    v76 = v68[4];
    v77 = v68[5];
    v78 = v68[6];
    v79 = v68[7];
    v80 = v68[8];
    v81 = v68[9];
    v82 = v68[10];
    v83 = v68[11];
    v357 = v68[12];
    v454 = v68[13];
    v358 = v68[14];
    v84 = v68[15];
    v85 = (unsigned __int8 *)(a3 + v67.i32[1]);
    v311 = *v85;
    v364 = v85[1];
    v363 = v85[2];
    v366 = v85[3];
    v367 = v85[4];
    v368 = v85[5];
    v369 = v85[6];
    v370 = v85[7];
    v365 = v85[8];
    v372 = v85[9];
    v373 = v85[10];
    v374 = v85[11];
    v375 = v85[12];
    v376 = v85[13];
    v378 = v85[14];
    v380 = v85[15];
    v86 = (unsigned __int8 *)(a3 + v67.i32[2]);
    v406 = *v86;
    v404 = v86[1];
    v402 = v86[2];
    v400 = v86[3];
    v398 = v86[4];
    v396 = v86[5];
    v395 = v86[6];
    v393 = v86[7];
    v392 = v86[8];
    v390 = v86[9];
    v382 = v86[10];
    v388 = v86[11];
    v386 = v86[12];
    v323 = v86[13];
    v324 = v86[14];
    v325 = v86[15];
    v87 = (unsigned __int8 *)(a3 + v67.i32[3]);
    v338 = *v87;
    v335 = v87[1];
    v302 = v87[2];
    v303 = v87[3];
    v304 = v87[4];
    v305 = v87[5];
    v306 = v87[6];
    v337 = v87[7];
    v332 = v87[8];
    v331 = v87[9];
    v334 = v87[10];
    v333 = v87[11];
    v336 = v87[12];
    v309 = v87[13];
    v308 = v87[14];
    v307 = v87[15];
    v88 = (_WORD *)(a2 + 2 * v452);
    *v88 = v69;
    v88[1] = v57 + v73;
    v89 = (__int16)(v57 + v73);
    v90 = (v57 + v73 + 16) >> 5;
    if (v72)
      v91 = v70;
    else
      v91 = -1;
    if (v89 >= -16)
      v92 = v90;
    else
      v92 = 0;
    v88[2] = v58 + v74;
    v93 = (__int16)(v58 + v74);
    v94 = (v58 + v74 + 16) >> 5;
    if (v89 > 8175)
      v95 = -1;
    else
      v95 = v92;
    v293 = v95;
    if (v93 >= -16)
      v96 = v94;
    else
      v96 = 0;
    v72 = v93 <= 8175;
    v88[3] = v59 + v75;
    v97 = (__int16)(v59 + v75);
    v98 = (v59 + v75 + 16) >> 5;
    if (v72)
      v99 = v96;
    else
      v99 = -1;
    if (v97 < -16)
      LOBYTE(v98) = 0;
    v72 = v97 <= 8175;
    v100 = v60 + v76;
    v101 = v76;
    v316 = v77;
    v317 = v76;
    v88[4] = v60 + v76;
    v102 = (__int16)(v60 + v76);
    v103 = (v100 + 16) >> 5;
    if (v72)
      v104 = v98;
    else
      v104 = -1;
    v291 = v104;
    v292 = v99;
    if (v102 >= -16)
      v105 = v103;
    else
      v105 = 0;
    v72 = v102 <= 8175;
    v106 = v77;
    v88[5] = v61 + v77;
    v107 = (__int16)(v61 + v77);
    if (v72)
      v108 = v105;
    else
      v108 = -1;
    v290 = v108;
    if (v107 >= -16)
      v109 = (v61 + v77 + 16) >> 5;
    else
      v109 = 0;
    v72 = v107 <= 8175;
    v318 = v78;
    v319 = v79;
    v88[6] = v62 + v78;
    v110 = (__int16)(v62 + v78);
    if (v72)
      v111 = v109;
    else
      v111 = -1;
    if (v110 >= -16)
      v112 = (v62 + v78 + 16) >> 5;
    else
      v112 = 0;
    v72 = v110 <= 8175;
    v113 = v79;
    v88[7] = v63 + v79;
    v114 = (__int16)(v63 + v79);
    v115 = (v63 + v79 + 16) >> 5;
    if (v72)
      v116 = v112;
    else
      v116 = -1;
    if (v114 >= -16)
      v117 = v115;
    else
      v117 = 0;
    v72 = v114 <= 8175;
    v118 = v80;
    v320 = v80;
    v88[8] = v296 + v80;
    v119 = (__int16)(v296 + v80);
    if (v72)
      v120 = v117;
    else
      v120 = -1;
    if (v119 >= -16)
      v121 = (v296 + v80 + 16) >> 5;
    else
      v121 = 0;
    v72 = v119 <= 8175;
    v122 = v81;
    v312 = v81;
    v313 = v82;
    v88[9] = v64 + v81;
    v123 = (__int16)(v64 + v81);
    v124 = (v64 + v81 + 16) >> 5;
    if (v72)
      v125 = v121;
    else
      v125 = -1;
    if (v123 >= -16)
      v126 = v124;
    else
      v126 = 0;
    v72 = v123 <= 8175;
    v88[10] = v65 + v82;
    v127 = (__int16)(v65 + v82);
    v128 = (v65 + v82 + 16) >> 5;
    if (v72)
      v129 = v126;
    else
      v129 = -1;
    if (v127 >= -16)
      v130 = v128;
    else
      v130 = 0;
    v72 = v127 <= 8175;
    v131 = v83;
    v314 = v83;
    v88[11] = v299 + v83;
    v132 = (__int16)(v299 + v83);
    v133 = (v299 + v83 + 16) >> 5;
    if (v72)
      v134 = v130;
    else
      v134 = -1;
    if (v132 >= -16)
      v135 = v133;
    else
      v135 = 0;
    v88[12] = v298 + v357;
    v136 = (__int16)(v298 + v357);
    v137 = (v298 + v357 + 16) >> 5;
    if (v132 > 8175)
      v138 = -1;
    else
      v138 = v135;
    if (v136 < -16)
      LOBYTE(v137) = 0;
    v88[13] = v297 + v454;
    v139 = (__int16)(v297 + v454);
    v140 = (v297 + v454 + 16) >> 5;
    if (v136 > 8175)
      LOBYTE(v137) = -1;
    if (v139 < -16)
      LOBYTE(v140) = 0;
    v72 = v139 <= 8175;
    v88[14] = v295 + v358;
    v141 = (__int16)(v295 + v358);
    v142 = (v295 + v358 + 16) >> 5;
    if (!v72)
      LOBYTE(v140) = -1;
    if (v141 < -16)
      LOBYTE(v142) = 0;
    v72 = v141 <= 8175;
    v315 = v84;
    v88[15] = v294 + v84;
    v143 = (__int16)(v294 + v84);
    v144 = (v294 + v84 + 16) >> 5;
    if (!v72)
      LOBYTE(v142) = -1;
    if (v143 < -16)
      LOBYTE(v144) = 0;
    v72 = v143 <= 8175;
    v145 = a1 + v452;
    *(_BYTE *)v145 = v91;
    *(_BYTE *)(v145 + 1) = v293;
    *(_BYTE *)(v145 + 2) = v292;
    *(_BYTE *)(v145 + 3) = v291;
    *(_BYTE *)(v145 + 4) = v290;
    *(_BYTE *)(v145 + 5) = v111;
    *(_BYTE *)(v145 + 6) = v116;
    *(_BYTE *)(v145 + 7) = v120;
    *(_BYTE *)(v145 + 8) = v125;
    *(_BYTE *)(v145 + 9) = v129;
    *(_BYTE *)(v145 + 10) = v134;
    *(_BYTE *)(v145 + 11) = v138;
    *(_BYTE *)(v145 + 12) = v137;
    *(_BYTE *)(v145 + 13) = v140;
    *(_BYTE *)(v145 + 14) = v142;
    if (!v72)
      LOBYTE(v144) = -1;
    *(_BYTE *)(v145 + 15) = v144;
    v146 = v343 + 65531 * (v106 + (unsigned __int16)v413) + v368 + 20 * (v412 + v458);
    v147 = v346 + 65531 * (v118 + (unsigned __int16)v429) + v365 + 20 * (v384 + v421);
    v148 = v351 + 65531 * (v131 + (unsigned __int16)v441) + v374 + 20 * (v465 + v427);
    v149 = v300 + 65531 * (v358 + (unsigned __int16)v448) + v378 + 20 * (v52 + v439);
    v88[16] = v17 - 5 * (v371 + v330) + v311 + 20 * (v25 + v464);
    v150 = (__int16)(v17 - 5 * (v371 + v330) + v311 + 20 * (v25 + v464) + 16);
    v151 = (v17 + 65531 * (v371 + v330) + v311 + 20 * (v25 + v464) + 16) >> 5;
    if (v150 < 0)
      LOBYTE(v151) = 0;
    v88[17] = v301 - 5 * (v362 + v329) + v364 + 20 * (v322 + v461);
    v152 = (__int16)(v301 - 5 * (v362 + v329) + v364 + 20 * (v322 + v461) + 16);
    if (v150 >= 0x2000)
      v153 = -1;
    else
      v153 = v151;
    if (v152 >= 0)
      v154 = (v301 + 65531 * (v362 + v329) + v364 + 20 * (v322 + (_DWORD)v461) + 16) >> 5;
    else
      v154 = 0;
    v72 = v152 < 0x2000;
    v88[18] = v339 - 5 * (v359 + v328) + v363 + 20 * (v327 + WORD2(v461));
    v155 = (__int16)(v339 - 5 * (v359 + v328) + v363 + 20 * (v327 + WORD2(v461)) + 16);
    v156 = (v339 + 65531 * (v359 + v328) + v363 + 20 * (v327 + HIDWORD(v461)) + 16) >> 5;
    if (!v72)
      v154 = -1;
    if (v155 < 0)
      LOBYTE(v156) = 0;
    v72 = v155 < 0x2000;
    v88[19] = v340 - 5 * (v360 + v407) + v366 + 20 * (v326 + v460);
    v157 = (__int16)(v340 - 5 * (v360 + v407) + v366 + 20 * (v326 + v460) + 16);
    v158 = (v340 + 65531 * (v360 + (unsigned __int16)v407) + v366 + 20 * (v326 + v460) + 16) >> 5;
    if (!v72)
      LOBYTE(v156) = -1;
    if (v157 < 0)
      LOBYTE(v158) = 0;
    v72 = v157 < 0x2000;
    v88[20] = v341 - 5 * (v101 + v410) + v367 + 20 * (v409 + v459);
    v159 = (__int16)(v341 - 5 * (v101 + v410) + v367 + 20 * (v409 + v459) + 16);
    v160 = (v341 + 65531 * (v101 + (unsigned __int16)v410) + v367 + 20 * (v409 + v459) + 16) >> 5;
    if (!v72)
      LOBYTE(v158) = -1;
    if (v159 < 0)
      LOBYTE(v160) = 0;
    v72 = v159 < 0x2000;
    v88[21] = v146;
    v161 = (__int16)(v146 + 16);
    v162 = (v146 + 16) >> 5;
    if (!v72)
      LOBYTE(v160) = -1;
    if (v161 < 0)
      LOBYTE(v162) = 0;
    v72 = v161 < 0x2000;
    v88[22] = v344 - 5 * (v78 + v416) + v369 + 20 * (v415 + v457);
    v163 = (__int16)(v344 - 5 * (v78 + v416) + v369 + 20 * (v415 + v457) + 16);
    v164 = (v344 + 65531 * (v78 + (unsigned __int16)v416) + v369 + 20 * (v415 + v457) + 16) >> 5;
    if (!v72)
      LOBYTE(v162) = -1;
    if (v163 < 0)
      LOBYTE(v164) = 0;
    v72 = v163 < 0x2000;
    v88[23] = v345 - 5 * (v113 + v419) + v370 + 20 * (v418 + v455);
    v165 = (__int16)(v345 - 5 * (v113 + v419) + v370 + 20 * (v418 + v455) + 16);
    v166 = (v345 + 65531 * (v113 + (unsigned __int16)v419) + v370 + 20 * (v418 + v455) + 16) >> 5;
    if (!v72)
      LOBYTE(v164) = -1;
    if (v165 < 0)
      LOBYTE(v166) = 0;
    v72 = v165 < 0x2000;
    v88[24] = v147;
    v167 = v147 + 16;
    v168 = (__int16)v167;
    v169 = v167 >> 5;
    if (!v72)
      LOBYTE(v166) = -1;
    if (v168 < 0)
      LOBYTE(v169) = 0;
    v72 = v168 < 0x2000;
    v88[25] = v347 - 5 * (v122 + v433) + v372 + 20 * (v383 + v423);
    v170 = (__int16)(v347 - 5 * (v122 + v433) + v372 + 20 * (v383 + v423) + 16);
    v171 = (v347 + 65531 * (v122 + (unsigned __int16)v433) + v372 + 20 * (v383 + v423) + 16) >> 5;
    if (!v72)
      LOBYTE(v169) = -1;
    if (v170 < 0)
      LOBYTE(v171) = 0;
    v72 = v170 < 0x2000;
    v88[26] = v349 - 5 * (v82 + v435) + v373 + 20 * (v466 + v425);
    v172 = (__int16)(v349 - 5 * (v82 + v435) + v373 + 20 * (v466 + v425) + 16);
    v173 = (v349 + 65531 * (v82 + (unsigned __int16)v435) + v373 + 20 * (v466 + v425) + 16) >> 5;
    if (!v72)
      LOBYTE(v171) = -1;
    if (v172 < 0)
      LOBYTE(v173) = 0;
    v72 = v172 < 0x2000;
    v88[27] = v148;
    v174 = (__int16)(v148 + 16);
    v175 = (v148 + 16) >> 5;
    if (!v72)
      LOBYTE(v173) = -1;
    if (v174 < 0)
      LOBYTE(v175) = 0;
    v72 = v174 < 0x2000;
    v88[28] = v353 - 5 * (v357 + v444) + v375 + 20 * (v463 + v431);
    v176 = (__int16)(v353 - 5 * (v357 + v444) + v375 + 20 * (v463 + v431) + 16);
    v177 = (v353 + 65531 * (v357 + (unsigned __int16)v444) + v375 + 20 * (v463 + v431) + 16) >> 5;
    if (!v72)
      LOBYTE(v175) = -1;
    if (v176 < 0)
      LOBYTE(v177) = 0;
    v72 = v176 < 0x2000;
    v88[29] = v355 - 5 * (v454 + v446) + v376 + 20 * (v462 + v437);
    v178 = (__int16)(v355 - 5 * (v454 + v446) + v376 + 20 * (v462 + v437) + 16);
    v179 = (v355 + 65531 * (v454 + (unsigned __int16)v446) + v376 + 20 * (v462 + v437) + 16) >> 5;
    if (!v72)
      LOBYTE(v177) = -1;
    if (v178 < 0)
      LOBYTE(v179) = 0;
    v72 = v178 < 0x2000;
    v88[30] = v149;
    v180 = v149 + 16;
    v181 = (__int16)v180;
    v182 = v180 >> 5;
    if (!v72)
      LOBYTE(v179) = -1;
    if (v181 < 0)
      LOBYTE(v182) = 0;
    v72 = v181 < 0x2000;
    v88[31] = v342 - 5 * (v84 + v451) + v380 + 20 * (v361 + v443);
    v183 = (__int16)(v342 - 5 * (v84 + v451) + v380 + 20 * (v361 + v443) + 16);
    v184 = (v342 + 65531 * (v84 + (unsigned __int16)v451) + v380 + 20 * (v361 + v443) + 16) >> 5;
    if (!v72)
      LOBYTE(v182) = -1;
    if (v183 < 0)
      LOBYTE(v184) = 0;
    *(_BYTE *)(v145 + 16) = v153;
    *(_BYTE *)(v145 + 17) = v154;
    *(_BYTE *)(v145 + 18) = v156;
    *(_BYTE *)(v145 + 19) = v158;
    *(_BYTE *)(v145 + 20) = v160;
    *(_BYTE *)(v145 + 21) = v162;
    *(_BYTE *)(v145 + 22) = v164;
    *(_BYTE *)(v145 + 23) = v166;
    *(_BYTE *)(v145 + 24) = v169;
    *(_BYTE *)(v145 + 25) = v171;
    *(_BYTE *)(v145 + 26) = v173;
    *(_BYTE *)(v145 + 27) = v175;
    *(_BYTE *)(v145 + 28) = v177;
    *(_BYTE *)(v145 + 29) = v179;
    *(_BYTE *)(v145 + 30) = v182;
    if (v183 >= 0x2000)
      LOBYTE(v184) = -1;
    *(_BYTE *)(v145 + 31) = v184;
    v356 = 20 * (v311 + v371) + v321;
    v354 = 20 * (v364 + v362) + (unsigned __int16)v322;
    v352 = 20 * (v363 + v359) + (unsigned __int16)v327;
    v350 = 20 * (v366 + v360) + (unsigned __int16)v326;
    v348 = 65531 * (v366 + (unsigned __int16)v326) + (unsigned __int16)v407;
    v408 = 20 * (v367 + v317) + (unsigned __int16)v409;
    v185 = 65531 * (v367 + (unsigned __int16)v409) + (unsigned __int16)v410;
    v411 = 20 * (v368 + v316) + (unsigned __int16)v412;
    v186 = 65531 * (v368 + (unsigned __int16)v412) + (unsigned __int16)v413;
    v414 = 20 * (v369 + v318) + (unsigned __int16)v415;
    v187 = 65531 * (v369 + (unsigned __int16)v415) + (unsigned __int16)v416;
    v417 = 20 * (v370 + v319) + (unsigned __int16)v418;
    v188 = 65531 * (v370 + (unsigned __int16)v418) + (unsigned __int16)v419;
    v420 = 20 * (v365 + v320) + (unsigned __int16)v421;
    v422 = 65531 * (v365 + (unsigned __int16)v421) + (unsigned __int16)v429;
    v430 = 20 * (v372 + v312) + (unsigned __int16)v423;
    v424 = 65531 * (v372 + (unsigned __int16)v423) + (unsigned __int16)v433;
    v434 = 20 * (v373 + v82) + (unsigned __int16)v425;
    v426 = 65531 * (v373 + (unsigned __int16)v425) + (unsigned __int16)v435;
    v436 = 20 * (v374 + v314) + (unsigned __int16)v427;
    v428 = 65531 * (v374 + (unsigned __int16)v427) + (unsigned __int16)v441;
    v442 = 20 * (v375 + v357) + (unsigned __int16)v431;
    v432 = 65531 * (v375 + (unsigned __int16)v431) + (unsigned __int16)v444;
    v445 = 20 * (v376 + v454) + (unsigned __int16)v437;
    v438 = 65531 * (v376 + (unsigned __int16)v437) + (unsigned __int16)v446;
    v447 = 20 * (v378 + v358) + (unsigned __int16)v439;
    v440 = 65531 * (v378 + (unsigned __int16)v439) + (unsigned __int16)v448;
    v449 = 20 * (v380 + v315) + (unsigned __int16)v443;
    v189 = 65531 * (v311 + v321) + v330 + v406 + 20 * (v371 + v464);
    v190 = 65531 * (v364 + (unsigned __int16)v322) + v329 + v404 + 20 * (v362 + v461);
    v191 = 65531 * (v363 + (unsigned __int16)v327) + v328 + v402 + 20 * (v359 + HIDWORD(v461));
    v192 = v348 + v400 + 20 * (v360 + v460);
    v193 = v185 + v398 + 20 * (v317 + v459);
    v194 = v186 + v396 + 20 * (v316 + v458);
    v195 = v187 + v395 + 20 * (v318 + v457);
    v196 = v188 + v393 + 20 * (v319 + v455);
    v197 = v422 + v392 + 20 * (v320 + v384);
    v198 = v424 + v390 + 20 * (v312 + v383);
    v199 = v426 + v382 + 20 * (v82 + v466);
    v200 = v428 + v388 + 20 * (v314 + v465);
    v201 = v432 + v386 + 20 * (v357 + v463);
    v202 = v438 + v323 + 20 * (v454 + v462);
    v203 = v440 + v324 + 20 * (v358 + v456);
    v204 = 65531 * (v380 + (unsigned __int16)v443) + (unsigned __int16)v451 + v325 + 20 * (v315 + v361);
    v88[32] = v189;
    v189 += 16;
    v205 = (__int16)v189;
    v206 = v189 >> 5;
    if (v205 < 0)
      LOBYTE(v206) = 0;
    v72 = v205 < 0x2000;
    v88[33] = v190;
    v207 = v190 + 16;
    v208 = (__int16)v207;
    v209 = v207 >> 5;
    if (!v72)
      LOBYTE(v206) = -1;
    if (v208 < 0)
      LOBYTE(v209) = 0;
    v72 = v208 < 0x2000;
    v88[34] = v191;
    v210 = v191 + 16;
    v211 = (__int16)v210;
    v212 = v210 >> 5;
    if (!v72)
      LOBYTE(v209) = -1;
    if (v211 < 0)
      LOBYTE(v212) = 0;
    v72 = v211 < 0x2000;
    v88[35] = v192;
    v213 = v192 + 16;
    v214 = (__int16)v213;
    v215 = v213 >> 5;
    if (!v72)
      LOBYTE(v212) = -1;
    if (v214 < 0)
      LOBYTE(v215) = 0;
    v72 = v214 < 0x2000;
    v88[36] = v193;
    v216 = v193 + 16;
    v217 = (__int16)v216;
    v218 = v216 >> 5;
    if (!v72)
      LOBYTE(v215) = -1;
    if (v217 < 0)
      LOBYTE(v218) = 0;
    v72 = v217 < 0x2000;
    v88[37] = v194;
    v219 = v194 + 16;
    v220 = (__int16)v219;
    v221 = v219 >> 5;
    if (!v72)
      LOBYTE(v218) = -1;
    if (v220 < 0)
      LOBYTE(v221) = 0;
    v72 = v220 < 0x2000;
    v88[38] = v195;
    v222 = v195 + 16;
    v223 = (__int16)(v195 + 16);
    v224 = v222 >> 5;
    if (!v72)
      LOBYTE(v221) = -1;
    if (v223 < 0)
      LOBYTE(v224) = 0;
    v72 = v223 < 0x2000;
    v88[39] = v196;
    v225 = v196 + 16;
    v226 = (__int16)(v196 + 16);
    v227 = v225 >> 5;
    if (!v72)
      LOBYTE(v224) = -1;
    if (v226 < 0)
      LOBYTE(v227) = 0;
    v72 = v226 < 0x2000;
    v88[40] = v197;
    v228 = v197 + 16;
    v229 = (__int16)v228;
    v230 = v228 >> 5;
    if (!v72)
      LOBYTE(v227) = -1;
    if (v229 < 0)
      LOBYTE(v230) = 0;
    v72 = v229 < 0x2000;
    v88[41] = v198;
    v231 = v198 + 16;
    v232 = (__int16)v231;
    v233 = v231 >> 5;
    if (!v72)
      LOBYTE(v230) = -1;
    if (v232 < 0)
      LOBYTE(v233) = 0;
    v72 = v232 < 0x2000;
    v88[42] = v199;
    v234 = v199 + 16;
    v235 = (__int16)(v199 + 16);
    v236 = v234 >> 5;
    if (!v72)
      LOBYTE(v233) = -1;
    if (v235 < 0)
      LOBYTE(v236) = 0;
    v72 = v235 < 0x2000;
    v88[43] = v200;
    v237 = v200 + 16;
    v238 = (__int16)v237;
    v239 = v237 >> 5;
    if (!v72)
      LOBYTE(v236) = -1;
    if (v238 < 0)
      LOBYTE(v239) = 0;
    v72 = v238 < 0x2000;
    v88[44] = v201;
    v240 = v201 + 16;
    v241 = (__int16)v240;
    v242 = v240 >> 5;
    if (!v72)
      LOBYTE(v239) = -1;
    if (v241 < 0)
      LOBYTE(v242) = 0;
    v72 = v241 < 0x2000;
    v88[45] = v202;
    v243 = v202 + 16;
    v244 = (__int16)v243;
    v245 = v243 >> 5;
    if (!v72)
      LOBYTE(v242) = -1;
    if (v244 < 0)
      LOBYTE(v245) = 0;
    v72 = v244 < 0x2000;
    v88[46] = v203;
    v246 = v203 + 16;
    v247 = (__int16)(v203 + 16);
    v248 = v246 >> 5;
    if (!v72)
      LOBYTE(v245) = -1;
    if (v247 < 0)
      LOBYTE(v248) = 0;
    v72 = v247 < 0x2000;
    v88[47] = v204;
    v249 = v204 + 16;
    v250 = (__int16)v249;
    v251 = v249 >> 5;
    if (!v72)
      LOBYTE(v248) = -1;
    if (v250 < 0)
      LOBYTE(v251) = 0;
    *(_BYTE *)(v145 + 32) = v206;
    *(_BYTE *)(v145 + 33) = v209;
    *(_BYTE *)(v145 + 34) = v212;
    *(_BYTE *)(v145 + 35) = v215;
    *(_BYTE *)(v145 + 36) = v218;
    *(_BYTE *)(v145 + 37) = v221;
    *(_BYTE *)(v145 + 38) = v224;
    *(_BYTE *)(v145 + 39) = v227;
    *(_BYTE *)(v145 + 40) = v230;
    *(_BYTE *)(v145 + 41) = v233;
    *(_BYTE *)(v145 + 42) = v236;
    *(_BYTE *)(v145 + 43) = v239;
    *(_BYTE *)(v145 + 44) = v242;
    *(_BYTE *)(v145 + 45) = v245;
    *(_BYTE *)(v145 + 46) = v248;
    if (v250 >= 0x2000)
      LOBYTE(v251) = -1;
    *(_BYTE *)(v145 + 47) = v251;
    v47 = v307;
    v88[48] = v356 - 5 * (v406 + v464) + v338;
    v88[49] = v354 - 5 * (v404 + v461) + v335;
    v88[50] = v352 - 5 * (v402 + WORD2(v461)) + v302;
    v88[51] = v350 - 5 * (v400 + v460) + v303;
    v88[52] = v408 - 5 * (v398 + v459) + v304;
    v88[53] = v411 - 5 * (v396 + v458) + v305;
    v88[54] = v414 - 5 * (v395 + v457) + v306;
    v88[55] = v417 - 5 * (v393 + v455) + v337;
    v88[56] = v420 - 5 * (v392 + v384) + v332;
    v88[57] = v430 - 5 * (v390 + v383) + v331;
    v88[58] = v434 - 5 * (v382 + v466) + v334;
    v88[59] = v436 - 5 * (v388 + v465) + v333;
    v88[60] = v442 - 5 * (v386 + v463) + v336;
    v88[61] = v445 - 5 * (v323 + v462) + v309;
    v88[62] = v447 - 5 * (v324 + v456) + v308;
    v88[63] = v449 - 5 * (v325 + v361) + v307;
    v34 = v302;
    v252 = ((v356 + 65531 * (v406 + (unsigned __int16)v464) + v338) << 16) + 0x100000;
    v253 = v252 >> 21;
    if (v252 < 0)
      LOBYTE(v253) = 0;
    v254 = ((v354 + 65531 * (v404 + (unsigned __int16)v461) + v335) << 16) + 0x100000;
    if (v252 > 0x1FFFFFFF)
      v255 = -1;
    else
      v255 = v253;
    v256 = v254 >> 21;
    if (v254 < 0)
      LOBYTE(v256) = 0;
    v72 = v254 <= 0x1FFFFFFF;
    v35 = v303;
    v257 = ((v352 + 65531 * (v402 + WORD2(v461)) + v302) << 16) + 0x100000;
    if (!v72)
      LOBYTE(v256) = -1;
    v258 = v257 >> 21;
    if (v257 < 0)
      LOBYTE(v258) = 0;
    v72 = v257 <= 0x1FFFFFFF;
    v259 = ((v350 + 65531 * (v400 + (unsigned __int16)v460) + v303) << 16) + 0x100000;
    if (v72)
      v260 = v258;
    else
      v260 = -1;
    v261 = v259 >> 21;
    if (v259 < 0)
      LOBYTE(v261) = 0;
    v72 = v259 <= 0x1FFFFFFF;
    v262 = ((v408 + 65531 * (v398 + (unsigned __int16)v459) + v304) << 16) + 0x100000;
    if (!v72)
      LOBYTE(v261) = -1;
    v263 = v262 >> 21;
    if (v262 < 0)
      LOBYTE(v263) = 0;
    v72 = v262 <= 0x1FFFFFFF;
    v36 = v304;
    v264 = ((v411 + 65531 * (v396 + (unsigned __int16)v458) + v305) << 16) + 0x100000;
    if (!v72)
      LOBYTE(v263) = -1;
    v265 = v264 >> 21;
    if (v264 < 0)
      LOBYTE(v265) = 0;
    v72 = v264 <= 0x1FFFFFFF;
    v37 = v305;
    v266 = ((v414 + 65531 * (v395 + (unsigned __int16)v457) + v306) << 16) + 0x100000;
    if (!v72)
      LOBYTE(v265) = -1;
    v267 = v266 >> 21;
    if (v266 < 0)
      LOBYTE(v267) = 0;
    v72 = v266 <= 0x1FFFFFFF;
    v38 = v306;
    v268 = ((v417 + 65531 * (v393 + (unsigned __int16)v455) + v337) << 16) + 0x100000;
    if (!v72)
      LOBYTE(v267) = -1;
    v269 = v268 >> 21;
    if (v268 < 0)
      LOBYTE(v269) = 0;
    v72 = v268 <= 0x1FFFFFFF;
    v270 = ((v420 + 65531 * (v392 + (unsigned __int16)v384) + v332) << 16) + 0x100000;
    if (v72)
      v271 = v269;
    else
      v271 = -1;
    v272 = v270 >> 21;
    if (v270 < 0)
      LOBYTE(v272) = 0;
    v72 = v270 <= 0x1FFFFFFF;
    v273 = ((v430 + 65531 * (v390 + (unsigned __int16)v383) + v331) << 16) + 0x100000;
    if (v72)
      v274 = v272;
    else
      v274 = -1;
    v275 = v273 >> 21;
    if (v273 < 0)
      LOBYTE(v275) = 0;
    v72 = v273 <= 0x1FFFFFFF;
    v276 = ((v434 + 65531 * (v382 + (unsigned __int16)v466) + v334) << 16) + 0x100000;
    if (v72)
      v277 = v275;
    else
      v277 = -1;
    v278 = v276 >> 21;
    if (v276 < 0)
      LOBYTE(v278) = 0;
    v72 = v276 <= 0x1FFFFFFF;
    v279 = ((v436 + 65531 * (v388 + (unsigned __int16)v465) + v333) << 16) + 0x100000;
    if (v72)
      v280 = v278;
    else
      v280 = -1;
    v281 = v279 >> 21;
    if (v279 < 0)
      LOBYTE(v281) = 0;
    v72 = v279 <= 0x1FFFFFFF;
    v45 = v309;
    *(_BYTE *)(v145 + 48) = v255;
    v46 = v308;
    *(_BYTE *)(v145 + 49) = v256;
    *(_BYTE *)(v145 + 50) = v260;
    *(_BYTE *)(v145 + 51) = v261;
    v33 = v335;
    v44 = v336;
    *(_BYTE *)(v145 + 52) = v263;
    *(_BYTE *)(v145 + 53) = v265;
    *(_BYTE *)(v145 + 54) = v267;
    *(_BYTE *)(v145 + 55) = v271;
    *(_BYTE *)(v145 + 56) = v274;
    *(_BYTE *)(v145 + 57) = v277;
    v282.i32[0] = v442 + 65531 * (v386 + (unsigned __int16)v463) + v336;
    v41 = v331;
    v40 = v332;
    v282.i32[1] = v445 + 65531 * (v323 + (unsigned __int16)v462) + v309;
    *(_BYTE *)(v145 + 58) = v280;
    v43 = v333;
    v42 = v334;
    HIDWORD(v450) = v449 + 65531 * (v325 + (unsigned __int16)v361) + v307;
    LODWORD(v450) = v447 + 65531 * (v324 + (unsigned __int16)v456) + v308;
    v282.i64[1] = v450;
    if (v72)
      v283 = v281;
    else
      v283 = -1;
    *(_BYTE *)(v145 + 59) = v283;
    v284 = vaddq_s32(vshlq_n_s32(v282, 0x10uLL), v30);
    v285 = (int32x4_t)vshrq_n_u32((uint32x4_t)v284, 0x15uLL);
    v286 = (int8x8_t)vmovn_s32(vcgtq_s32(v284, v31));
    v11 = (int16x8_t)vcltzq_s32(v284);
    *(int8x8_t *)v11.i8 = vorr_s8(vbic_s8((int8x8_t)vmovn_s32(v285), (int8x8_t)vmovn_s32((int32x4_t)v11)), v286);
    *(int8x8_t *)v11.i8 = vmovn_s16(v11);
    *(_DWORD *)(v145 + 60) = v11.i32[0];
    v39 = v337;
    v452 += 64;
    v342 = v315;
    v429 = v365;
    v433 = v372;
    v435 = v373;
    v441 = v374;
    v444 = v375;
    v446 = v376;
    v448 = v378;
    v451 = v380;
    v421 = v392;
    v423 = v390;
    v425 = v382;
    v427 = v388;
    v431 = v386;
    v437 = v323;
    v439 = v324;
    v443 = v325;
    result = v358;
    v355 = v454;
    v353 = v357;
    v351 = v314;
    v349 = v313;
    v347 = v312;
    v346 = v320;
    v453 = v361;
    v391 = v456;
    v389 = v462;
    v387 = v463;
    v385 = v465;
    v381 = v466;
    v32 = v338;
    v379 = v383;
    v377 = v384;
    v418 = v393;
    v412 = v396;
    v415 = v395;
    v409 = v398;
    v28 = v400;
    v27 = v402;
    v26 = v404;
    v25 = v406;
    v419 = v370;
    v416 = v369;
    v413 = v368;
    v410 = v367;
    v407 = v366;
    v23 = v363;
    v22 = v364;
    v21 = v311;
    v345 = v319;
    v344 = v318;
    v343 = v316;
    v341 = v317;
    v340 = v360;
    v339 = v359;
    v18 = v362;
    v17 = v371;
    v405 = v455;
    v403 = v457;
    v401 = v458;
    v399 = v459;
    v397 = v460;
    v394 = v461;
    v14 = v464;
  }
  return result;
}

uint64_t sub_215FE7838(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, int8x16_t a5)
{
  int32x4_t v5;
  uint64_t v6;
  __int16 *v7;
  int32x4_t v8;
  int32x4_t v9;
  int32x4_t v10;
  uint32x4_t v11;
  __int16 *v12;
  __int32 v13;
  int16x8_t v14;
  int16x4_t v15;
  __int16 *v16;
  int8x16_t v17;
  int32x4_t v18;
  int32x4_t v19;
  int32x4_t v20;
  int32x2_t v21;
  int32x4_t v22;
  int32x4_t v23;
  int32x4_t v24;
  int8x16_t v25;
  int32x4_t v26;
  int32x4_t v27;
  int32x2_t v28;
  int32x4_t v29;
  int32x4_t v30;
  int32x4_t v31;
  int32x4_t v32;
  int32x4_t v33;
  int8x16_t v34;
  int32x4_t v35;
  int32x4_t v36;
  unsigned __int32 v37;
  int32x4_t v38;
  int32x4_t v39;
  int32x4_t v40;
  int8x16_t v41;
  int32x4_t v42;
  int32x4_t v43;
  int32x4_t v44;
  int32x4_t v45;
  int32x4_t v46;
  int32x4_t v47;
  int32x4_t v48;
  int32x4_t v49;
  int32x4_t v50;
  int32x4_t v51;
  int32x4_t v52;
  int32x4_t v53;
  int8x16_t v54;
  int32x4_t v55;
  int32x4_t v56;

  v6 = 0;
  v7 = (__int16 *)(a2 + 30);
  a5.i64[0] = 0x400000004;
  v8.i64[0] = 0x400000004;
  v8.i64[1] = 0x400000004;
  v9.i64[0] = 0x1400000014;
  v9.i64[1] = 0x1400000014;
  v10.i64[0] = 0x20000000200;
  v10.i64[1] = 0x20000000200;
  v11.i64[0] = 0xFF000000FFLL;
  v11.i64[1] = 0xFF000000FFLL;
  do
  {
    v12 = (__int16 *)(a3 + 2 * v6);
    v13 = *v12;
    v14 = *(int16x8_t *)(v12 + 1);
    v15.i32[0] = *(_DWORD *)(v12 + 13);
    v15.i16[2] = v12[15];
    v16 = (__int16 *)(a4 + 2 * v6);
    v15.i16[3] = *v16;
    v17 = (int8x16_t)vmovl_s16(v15);
    v5.i32[0] = *(_DWORD *)(v12 + 9);
    v5.i16[2] = v12[11];
    v5.i16[3] = v12[12];
    v18 = vmovl_s16(*(int16x4_t *)v5.i8);
    v19 = vmovl_high_s16(v14);
    v20 = vmovl_s16(*(int16x4_t *)v14.i8);
    v21 = (int32x2_t)vextq_s8((int8x16_t)v20, (int8x16_t)v20, 4uLL).u64[0];
    v22 = (int32x4_t)vextq_s8((int8x16_t)v20, (int8x16_t)v19, 0xCuLL);
    v23 = (int32x4_t)vextq_s8(a5, (int8x16_t)v20, 0xCuLL);
    v24 = (int32x4_t)vextq_s8((int8x16_t)v20, (int8x16_t)v19, 8uLL);
    v25 = (int8x16_t)vzip1q_s32(v20, v20);
    v26 = vdupq_lane_s32(*(int32x2_t *)v20.i8, 0);
    LODWORD(v12) = -5 * v20.i32[0];
    v27 = (int32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v19, v18), (int8x16_t)v19, 4uLL);
    v27.i32[3] = v17.i32[0];
    v28 = vmul_s32(v21, (int32x2_t)0x400000004);
    v29 = vmulq_s32(v27, v8);
    v23.i32[0] = v13;
    v30 = vaddw_s16((int32x4_t)vextq_s8((int8x16_t)v19, (int8x16_t)v18, 0xCuLL), *(int16x4_t *)v5.i8);
    v31 = vaddw_s16((int32x4_t)vextq_s8((int8x16_t)v18, v17, 0xCuLL), v15);
    v32 = vaddw_high_s16(v22, v14);
    v33 = vaddw_s16(v23, *(int16x4_t *)v14.i8);
    v34 = vextq_s8(v17, v17, 8uLL);
    *(int32x2_t *)v34.i8 = vmul_s32(*(int32x2_t *)v34.i8, (int32x2_t)0x400000004);
    v35 = v24;
    v35.i32[0] = v28.i32[1];
    v24.i32[3] = v28.i32[0];
    v36 = vaddq_s32(v24, v10);
    v37 = vaddq_s32(v35, v10).u32[0];
    v38 = vmulq_s32(vmovl_s16(vuzp2_s16(*(int16x4_t *)v5.i8, (int16x4_t)vext_s8(*(int8x8_t *)v5.i8, (int8x8_t)v15, 4uLL))), v8);
    v39 = vmulq_s32(vmovl_s16(vuzp2_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v14, (int8x16_t)v14, 8uLL), (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v14, (int8x16_t)v5, 0xCuLL))), v8);
    v40 = vmulq_s32(vmovl_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v14, (int8x16_t)v14, 4uLL)), v8);
    v41 = vextq_s8((int8x16_t)v24, (int8x16_t)v35, 0xCuLL);
    v42 = (int32x4_t)vextq_s8(v41, (int8x16_t)v40, 0xCuLL);
    v43 = vdupq_laneq_s32(v40, 3);
    v40.i32[0] = v37;
    v44 = vtrn2q_s32(vrev64q_s32(vaddq_s32(vrev64q_s32(v18), v10)), v38);
    v45 = vtrn2q_s32(vrev64q_s32(vaddq_s32(vrev64q_s32(v19), v10)), v39);
    v46 = vaddq_s32(v27, v10);
    v26.i32[0] = *(v7 - 1);
    v47 = (int32x4_t)vextq_s8(v25, (int8x16_t)v36, 0xCuLL);
    v26.i32[1] = *v7;
    v26.i32[2] = v13;
    v48 = vaddq_s32(v36, v26);
    v49 = vaddq_s32(v40, v47);
    v50 = (int32x4_t)vextq_s8((int8x16_t)v18, v17, 8uLL);
    v51 = vdupq_lane_s32(*(int32x2_t *)v19.i8, 1);
    v51.i32[0] = -5 * *v7;
    v51.i32[1] = -5 * v13;
    v51.i32[2] = (int)v12;
    v52 = (int32x4_t)vextq_s8((int8x16_t)v19, (int8x16_t)v18, 8uLL);
    v19.i32[0] = v16[1];
    v19.i32[1] = v16[2];
    v53 = vaddq_s32(v49, v52);
    v42.i64[0] = v41.i64[0];
    v54 = (int8x16_t)vdupq_laneq_s32(v38, 3);
    v55 = (int32x4_t)vextq_s8((int8x16_t)v39, (int8x16_t)v38, 0xCuLL);
    v43.i32[2] = v39.i32[1];
    v56 = (int32x4_t)vextq_s8(vextq_s8(v54, v54, 4uLL), v34, 0xCuLL);
    v56.i32[3] = -5 * v19.i32[0];
    v5 = vzip1q_s32(vuzp1q_s32(v43, v43), v29);
    *(int8x16_t *)(result + v6) = vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vminq_u32((uint32x4_t)vmaxq_s32(vshrq_n_s32(vmlaq_s32(vaddq_s32(v48, vaddq_s32(v51, v42)), v33, v9), 0xAuLL), (int32x4_t)0), v11), (int16x8_t)vminq_u32((uint32x4_t)vmaxq_s32(vshrq_n_s32(vmlaq_s32(vaddq_s32(v53, v5), v32, v9), 0xAuLL), (int32x4_t)0), v11)), (int8x16_t)vuzp1q_s16(
                                                 (int16x8_t)vminq_u32((uint32x4_t)vmaxq_s32(vshrq_n_s32(vmlaq_s32(vaddq_s32(vaddq_s32(vaddq_s32(v45, v50), vzip1q_s32(v29, v46)), vzip2q_s32(vuzp1q_s32(v55, v55), v29)), v30, v9), 0xAuLL), (int32x4_t)0), v11), (int16x8_t)vminq_u32((uint32x4_t)vmaxq_s32(vshrq_n_s32(vmlaq_s32(vaddq_s32(vaddq_s32(
                                                                                    vaddq_s32(v44, (int32x4_t)vextq_s8(v17, (int8x16_t)v19, 8uLL)), vzip2q_s32(v29, v46)), v56), v31, v9), 0xAuLL), (int32x4_t)0), v11)));
    v6 += 16;
    v7 += 16;
  }
  while ((_DWORD)v6 != 256);
  return result;
}

__int128 *sub_215FE7AB8(__int128 *result, __int128 *a2, __int128 *a3, int a4, unsigned int a5)
{
  uint64_t v5;
  const char *v6;
  const char *v7;
  const char *v8;
  __int128 v9;
  int8x16_t v10;
  int8x16_t v11;
  int8x16_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v5 = 16;
  do
  {
    v9 = *result;
    v14 = *a2;
    v15 = v9;
    v13 = *a3;
    v6 = (char *)&v15 + a5;
    v10 = vld1q_dup_s8(v6);
    result[a4] = (__int128)v10;
    v7 = (char *)&v14 + a5;
    v11 = vld1q_dup_s8(v7);
    a2[a4] = (__int128)v11;
    v8 = (char *)&v13 + a5;
    v12 = vld1q_dup_s8(v8);
    a3[a4] = (__int128)v12;
    ++result;
    ++a2;
    ++a3;
    --v5;
  }
  while (v5);
  return result;
}

uint64_t sub_215FE7B60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  __int16 *v9;
  unsigned int v10;
  uint64_t v11;
  int v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(a1 + 48);
  v2 = *(unsigned __int8 *)(v1 + 272);
  if (*(_BYTE *)(v1 + 272))
  {
    v3 = 0;
    v16 = v1 + 16;
    v14 = *(unsigned __int8 *)(v1 + 272);
    do
    {
      v4 = v16 + 16 * v3;
      v5 = *(unsigned __int8 *)(v4 + 15);
      v6 = *(unsigned __int16 *)(v1 + 26);
      if (v6 >= 0x103)
        v6 = 259;
      v7 = word_254E10E30[40 * v6 + 24 + v3];
      v8 = v7 >> 8;
      v9 = (__int16 *)(*(_QWORD *)(*(_QWORD *)(a1 + 176) + 112) + 16 * v3);
      if (v5 == 6)
      {
        v15 = v9[1] & 3 | (4 * (*v9 & 3u));
        if (v7 == 4)
        {
          if (v8 == 8)
            __asm { BR              X8 }
          __asm { BR              X8 }
        }
        if (v7 == 8)
        {
          if (v8 == 4)
            __asm { BR              X10 }
          if (v8 == 8)
            __asm { BR              X10 }
          if (v8 == 16)
            __asm { BR              X10 }
        }
        else if (v7 == 16)
        {
          if (v8 == 16)
            __asm { BR              X10 }
          __asm { BR              X10 }
        }
        v1 = *(_QWORD *)(a1 + 48);
        v2 = v14;
      }
      else
      {
        v10 = v5 - 4;
        if (v10 > 2)
          return 4294958327;
        v11 = v9[2 * v10 + 1] & 3 | (4 * ((unsigned __int16)v9[2 * v10] & 3u));
        if ((_DWORD)v2 == 1)
          __asm { BR              X12 }
        v12 = word_254E10E30[40 * v6 + 24 + v3];
        if (v12 == 4)
        {
          if (v8 == 8)
            __asm { BR              X8 }
          __asm { BR              X8 }
        }
        if (v12 == 8)
        {
          if (v8 == 4)
            __asm { BR              X8 }
          if (v8 == 8)
            __asm { BR              X8 }
          if (v8 == 16)
            __asm { BR              X8 }
        }
        else if (v12 == 16)
        {
          if (v8 == 16)
            __asm { BR              X8 }
          __asm { BR              X8 }
        }
      }
      ++v3;
    }
    while (v3 != v2);
  }
  return 0;
}

uint16x8_t sub_215FF1C64(uint16x8_t *a1, unsigned int *a2, int a3, int16x8_t *a4)
{
  int64x2_t v4;
  int64x2_t v5;
  int64x2_t v6;
  int16x8_t v7;
  int16x8_t v8;
  int16x8_t v9;
  uint64_t v10;
  int8x16_t v11;
  int8x16_t v12;
  int8x16_t v13;
  int8x16_t v14;
  int8x16_t v15;
  int8x16_t v16;
  int16x8_t v17;
  int16x8_t v18;
  int16x8_t v19;
  int16x8_t v20;
  uint16x8_t v21;
  uint16x8_t result;

  v7 = a4[1];
  v9 = a4[2];
  v8 = a4[3];
  v10 = 2 * a3;
  v11 = (int8x16_t)vshlq_n_s64((int64x2_t)*(unsigned int *)((char *)a2 + a3 + 4), 0x20uLL);
  v12 = vorrq_s8(v11, (int8x16_t)*(unsigned int *)((char *)a2 + a3));
  v11.i32[0] = *(unsigned int *)((char *)a2 + a3 + 2);
  v4.i32[0] = *(unsigned int *)((char *)a2 + a3 + 6);
  v13 = (int8x16_t)vshlq_n_s64(v4, 0x20uLL);
  v14 = vorrq_s8(v13, v11);
  v13.i32[0] = *(unsigned int *)((char *)a2 + v10);
  v5.i32[0] = *(unsigned int *)((char *)a2 + v10 + 4);
  v15 = (int8x16_t)vshlq_n_s64(v5, 0x20uLL);
  v16 = vorrq_s8(v15, v13);
  v15.i32[0] = *(unsigned int *)((char *)a2 + v10 + 2);
  v6.i32[0] = *(unsigned int *)((char *)a2 + v10 + 6);
  v17 = (int16x8_t)vzip1q_s8(v12, (int8x16_t)0);
  v18 = (int16x8_t)vzip1q_s8(v14, (int8x16_t)0);
  v19 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v6, 0x20uLL), v15), (int8x16_t)0);
  v20.i64[0] = 0x20002000200020;
  v20.i64[1] = 0x20002000200020;
  v15.i64[0] = 0x5000500050005;
  v15.i64[1] = 0x5000500050005;
  v21 = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(vmlaq_s16(vmulq_s16(v7, (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)*(unsigned int *)((char *)a2 + 6), 0x20uLL), (int8x16_t)*(unsigned int *)((char *)a2 + 2)), (int8x16_t)0)), *a4, (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)a2[1], 0x20uLL), (int8x16_t)*a2), (int8x16_t)0)), v9, v17),
                          v8,
                          v18),
                        v20),
          (uint16x8_t)v15);
  result = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(vmlaq_s16(vmulq_s16(v7, v18), *a4, v17), v9, (int16x8_t)vzip1q_s8(v16, (int8x16_t)0)), v8, v19), v20), (uint16x8_t)v15);
  *a1 = v21;
  a1[1] = result;
  return result;
}

int64x2_t sub_215FF1D58(int64x2_t *a1, _WORD *a2, int a3, int a4, int a5)
{
  int32x4_t v5;
  _WORD *v6;
  _WORD *v7;
  uint64_t v8;
  unsigned __int16 *v9;
  unint64_t v10;
  unsigned __int16 *v11;
  int16x8_t v12;
  int16x8_t v13;
  unint64_t v14;
  unint64_t v15;
  int16x8_t v16;
  int16x8_t v17;
  int16x8_t v18;
  uint64x2_t v19;
  int16x8_t v20;
  uint16x8_t v21;
  int16x8_t v22;
  int64x2_t result;

  v5 = (int32x4_t)xmmword_2160EE830;
  v6 = a2 + 1;
  v7 = a2 + 2;
  v8 = a3;
  v9 = (_WORD *)((char *)a2 + a3);
  WORD2(v10) = a2[2];
  LOWORD(v10) = *a2;
  v11 = &a2[v8];
  WORD1(v10) = *v6;
  v12 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)(((a4 << 16) * (8 - a5)) | ((8 - a5) * (8 - a4))), (int8x16_t)xmmword_2160EE800), (int8x16_t)xmmword_2160EE820), (int8x16_t)xmmword_2160EE830);
  HIDWORD(v10) = WORD2(v10);
  v13 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)(((a4 << 16) * a5) & 0xFFFF0000 | (unsigned __int16)((8 - a4) * a5)), (int8x16_t)xmmword_2160EE800), (int8x16_t)xmmword_2160EE820), (int8x16_t)xmmword_2160EE830);
  v5.i32[0] = *v9;
  v5.i16[2] = v9[1];
  *(int16x4_t *)v5.i8 = vmovn_s32(v5);
  LODWORD(v14) = v5.i32[0];
  HIDWORD(v14) = *(unsigned __int16 *)((char *)v7 + a3);
  v5.i32[0] = *v11;
  v5.i16[2] = v11[1];
  LODWORD(v15) = vmovn_s32(v5).u32[0];
  HIDWORD(v15) = (unsigned __int16)v7[v8];
  v16 = (int16x8_t)vzip1q_s8(vqtbl1q_s8((int8x16_t)v14, (int8x16_t)xmmword_2160EE840), (int8x16_t)0);
  v17 = (int16x8_t)vzip1q_s8(vqtbl1q_s8((int8x16_t)v15, (int8x16_t)xmmword_2160EE840), (int8x16_t)0);
  v18 = vmlaq_s16(vmulq_s16((int16x8_t)vzip1q_s8(vqtbl1q_s8((int8x16_t)v10, (int8x16_t)xmmword_2160EE840), (int8x16_t)0), v12), v16, v13);
  v19 = (uint64x2_t)vdupq_n_s64(0xFFFFFFE0uLL);
  v20.i64[0] = 0x20002000200020;
  v20.i64[1] = 0x20002000200020;
  v21.i64[0] = 0x5000500050005;
  v21.i64[1] = 0x5000500050005;
  v22 = vmlaq_s16(vmulq_s16(v16, v12), v17, v13);
  result = vzip1q_s64((int64x2_t)vqtbl1q_s8((int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16((int16x8_t)vshlq_u64((uint64x2_t)v18, v19), vaddq_s16(v18, v20)), v21), (int8x16_t)xmmword_2160EE850), (int64x2_t)vqtbl1q_s8((int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v22, v20), (int16x8_t)vshlq_u64((uint64x2_t)v22, v19)), v21), (int8x16_t)xmmword_2160EE850));
  *a1 = result;
  return result;
}

uint64_t sub_215FF1EA4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int16 *v5;
  uint64_t v6;
  unsigned int v7;
  unsigned __int16 *v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  int v24;
  uint64_t v25;
  _QWORD *v26;
  char v27;

  v2 = result;
  v3 = *(unsigned __int8 *)(result + 1104);
  if (*(_BYTE *)(result + 1104))
  {
    v4 = 0;
    v26 = *(_QWORD **)(a2 + 64);
    v25 = result + 848;
    v24 = 16 * *(_DWORD *)(result + 828);
    v21 = *(unsigned __int8 *)(result + 1104);
    v20 = result;
    do
    {
      v5 = (__int16 *)(v25 + 16 * v4);
      v6 = *((unsigned __int8 *)v5 + 15);
      v7 = *(unsigned __int16 *)(v2 + 858);
      if (v7 >= 0x103)
        v7 = 259;
      v8 = &word_254E10E30[40 * v7];
      v9 = v8[v4 + 24];
      v10 = v9 >> 8;
      if (v6 == 6)
      {
        v23 = v9 >> 8;
        v11 = *(_QWORD *)(*v26 + 8 * *((unsigned __int8 *)v5 + 8));
        v12 = v5[1];
        v22 = v12 & 3 | (4 * (*v5 & 3u));
        v27 = v8[v4 + 24];
        v13 = *(_DWORD *)(v11 + 148);
        v14 = (v12 >> 3) + ((v24 + byte_2160EE5D0[*((unsigned __int8 *)v8 + v4 + 32)]) >> 1);
        if (v14 <= -8)
          v15 = -8;
        else
          v15 = v14;
        v16 = v13 - 1;
        if (v15 < v13)
          v16 = v15;
        if (v27 == 4)
        {
          if (v23 == 8)
            __asm { BR              X8 }
          __asm { BR              X8 }
        }
        result = *(int *)(v11 + 184) * (uint64_t)v16;
        if (v27 == 8)
        {
          if (v23 == 4)
            __asm { BR              X10 }
          if (v23 == 8)
            __asm { BR              X10 }
          if (v23 == 16)
            __asm { BR              X10 }
        }
        else if (v27 == 16)
        {
          if (v23 == 16)
            __asm { BR              X10 }
          __asm { BR              X10 }
        }
        v2 = v20;
        v3 = v21;
      }
      else
      {
        v17 = (v6 - 4);
        v18 = *(_QWORD *)(v26[v17] + 8 * *((unsigned __int8 *)v5 + v17 + 8));
        v19 = v5[2 * v17 + 1] & 3 | (4 * ((unsigned __int16)v5[2 * v17] & 3u));
        result = *(unsigned int *)(v18 + 164);
        if ((_DWORD)v3 == 1)
          __asm { BR              X10 }
        if (v9 == 4)
        {
          if (v10 == 8)
            __asm { BR              X8 }
          __asm { BR              X8 }
        }
        if (v9 == 8)
        {
          if (v10 == 4)
            __asm { BR              X9 }
          if (v10 == 8)
            __asm { BR              X9 }
          if (v10 == 16)
            __asm { BR              X9 }
        }
        else if (v9 == 16)
        {
          if (v10 == 16)
            __asm { BR              X10 }
          __asm { BR              X10 }
        }
      }
      ++v4;
    }
    while (v4 != v3);
  }
  return result;
}

uint64_t sub_215FFD760(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int16 *v5;
  uint64_t v6;
  unsigned int v7;
  unsigned __int16 *v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;
  unsigned __int16 *v14;
  unsigned __int16 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = result;
  v3 = *(unsigned __int8 *)(result + 1104);
  if (*(_BYTE *)(result + 1104))
  {
    v4 = 0;
    v20 = result + 848;
    v17 = result;
    v18 = *(unsigned __int8 *)(result + 1104);
    do
    {
      v5 = (unsigned __int16 *)(v20 + 16 * v4);
      v6 = *((unsigned __int8 *)v5 + 15);
      v7 = *(unsigned __int16 *)(v2 + 858);
      if (v7 >= 0x103)
        v7 = 259;
      v8 = &word_254E10E30[40 * v7];
      v9 = v8[v4 + 24];
      v10 = v9 >> 8;
      v22 = v4;
      if (v6 == 6)
      {
        v19 = v9 >> 8;
        v21 = v5[1] & 3 | (4 * (*v5 & 3u));
        result = 2
               * *(_DWORD *)(*(_QWORD *)(a2 + 72) + 136)
               * byte_2160EE5D0[*((unsigned __int8 *)v8 + v4 + 32)];
        if (v9 == 4)
        {
          if (v19 == 8)
            __asm { BR              X8 }
          __asm { BR              X8 }
        }
        if (v9 == 8)
        {
          if (v19 == 4)
            __asm { BR              X10 }
          if (v19 == 8)
            __asm { BR              X10 }
          if (v19 == 16)
            __asm { BR              X10 }
        }
        else if (v9 == 16)
        {
          if (v19 == 16)
            __asm { BR              X10 }
          __asm { BR              X10 }
        }
        v2 = v17;
        v3 = v18;
      }
      else
      {
        v11 = (v6 - 4);
        v12 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 64) + 8 * v11)
                        + 8 * *((unsigned __int8 *)v5 + v11 + 8));
        if (*(_BYTE *)(a2 + 20))
        {
          if (*(_BYTE *)(a2 + 21))
          {
            v13 = 2 * (*(_BYTE *)(v12 + 37) == 0);
          }
          else if (*(_BYTE *)(v12 + 37))
          {
            v13 = -2;
          }
          else
          {
            v13 = 0;
          }
        }
        else
        {
          v13 = 0;
        }
        v14 = &v5[2 * v11];
        v15 = v14[1];
        v16 = v15 & 3 | (4 * (*v14 & 3u));
        result = (__int16)(v13 + v15);
        if ((_DWORD)v3 == 1)
          __asm { BR              X9 }
        if (v9 == 4)
        {
          if (v10 == 8)
            __asm { BR              X8 }
          __asm { BR              X8 }
        }
        if (v9 == 8)
        {
          if (v10 == 4)
            __asm { BR              X9 }
          if (v10 == 8)
            __asm { BR              X9 }
          if (v10 == 16)
            __asm { BR              X9 }
        }
        else if (v9 == 16)
        {
          if (v10 == 16)
            __asm { BR              X9 }
          __asm { BR              X9 }
        }
      }
      v4 = v22 + 1;
    }
    while (v22 + 1 != v3);
  }
  return result;
}

uint64_t sub_21600941C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned __int16 *v7;
  unsigned int v8;
  unsigned __int16 *v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  unsigned __int16 *v13;
  unsigned __int16 v14;
  uint64_t v15;
  unsigned int v16;
  int v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v22 = *(_QWORD *)(result + 48);
  v1 = *(unsigned __int8 *)(v22 + 272);
  if (*(_BYTE *)(v22 + 272))
  {
    v2 = result;
    v3 = 0;
    v18 = result + 224;
    v21 = *(_QWORD *)(*(_QWORD *)(result + 176) + 112);
    v20 = result;
    do
    {
      v4 = v22 + 16 + 16 * v3;
      v5 = *(unsigned __int8 *)(v4 + 15);
      v6 = *(unsigned __int16 *)(v22 + 26);
      if (v6 >= 0x103)
        v6 = 259;
      v7 = &word_254E10E30[40 * v6];
      v8 = v7[v3 + 24];
      v9 = (unsigned __int16 *)(v21 + 16 * v3);
      if (v5 == 6)
      {
        v19 = v8 >> 8;
        result = (__int16)v9[2];
        v23 = v9[1] & 3 | (4 * (*v9 & 3u));
        if (v8 == 4)
        {
          if (v19 == 8)
            __asm { BR              X8 }
          __asm { BR              X8 }
        }
        if (v8 == 8)
        {
          v1 = *(unsigned __int8 *)(v22 + 272);
          if (v19 == 4)
            __asm { BR              X10 }
          if (v19 == 8)
            __asm { BR              X10 }
          if (v19 == 16)
            __asm { BR              X10 }
        }
        else
        {
          v1 = *(unsigned __int8 *)(v22 + 272);
          if (v8 == 16)
          {
            if (v19 == 16)
              __asm { BR              X10 }
            __asm { BR              X10 }
          }
        }
        v2 = v20;
      }
      else
      {
        v10 = (v5 - 4);
        v11 = *(_QWORD *)(*(_QWORD *)(v18 + 8 * v10) + 8 * *(unsigned __int8 *)(v4 + v10 + 8));
        if (*(_BYTE *)(v2 + 29))
        {
          if (*(_BYTE *)(v2 + 30))
          {
            v12 = 2 * (*(_BYTE *)(v11 + 37) == 0);
          }
          else if (*(_BYTE *)(v11 + 37))
          {
            v12 = -2;
          }
          else
          {
            v12 = 0;
          }
        }
        else
        {
          v12 = 0;
        }
        v13 = &v9[2 * v10];
        v14 = v13[1];
        v15 = v14 & 3 | (4 * (*v13 & 3u));
        result = (__int16)(v12 + v14);
        if ((_DWORD)v1 == 1)
          __asm { BR              X9 }
        v16 = v8 >> 8;
        v17 = v7[v3 + 24];
        if (v17 == 4)
        {
          if (v16 == 8)
            __asm { BR              X8 }
          __asm { BR              X8 }
        }
        if (v17 == 8)
        {
          v2 = v20;
          if (v16 == 4)
            __asm { BR              X9 }
          if (v16 == 8)
            __asm { BR              X9 }
          if (v16 == 16)
            __asm { BR              X9 }
        }
        else
        {
          v2 = v20;
          if (v17 == 16)
          {
            if (v16 == 16)
              __asm { BR              X9 }
            __asm { BR              X9 }
          }
        }
      }
      ++v3;
    }
    while (v3 != v1);
  }
  return result;
}

uint64_t sub_2160150BC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned __int16 *v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  unsigned __int16 *v13;
  unsigned __int16 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v20 = *(_QWORD *)(result + 48);
  v1 = *(unsigned __int8 *)(v20 + 272);
  if (*(_BYTE *)(v20 + 272))
  {
    v2 = result;
    v3 = 0;
    v19 = *(_QWORD *)(*(_QWORD *)(result + 176) + 112);
    v17 = result + 224;
    v21 = result;
    do
    {
      v22 = v3;
      v4 = v20 + 16 + 16 * v3;
      v5 = *(unsigned __int8 *)(v4 + 15);
      v6 = *(unsigned __int16 *)(v20 + 26);
      if (v6 >= 0x103)
        v6 = 259;
      v7 = word_254E10E30[40 * v6 + 24 + v3];
      v8 = v7 >> 8;
      v9 = (unsigned __int16 *)(v19 + 16 * v3);
      if (v5 == 6)
      {
        v18 = v7 >> 8;
        result = (__int16)v9[2];
        v16 = v9[1] & 3 | (4 * (*v9 & 3u));
        if (v7 == 4)
        {
          if (v18 == 8)
            __asm { BR              X8 }
          __asm { BR              X8 }
        }
        v2 = v21;
        if (v7 == 8)
        {
          if (v18 == 4)
            __asm { BR              X10 }
          if (v18 == 8)
            __asm { BR              X10 }
          if (v18 == 16)
            __asm { BR              X10 }
        }
        else if (v7 == 16)
        {
          if (v18 == 16)
            __asm { BR              X10 }
          __asm { BR              X10 }
        }
        v1 = *(unsigned __int8 *)(v20 + 272);
      }
      else
      {
        v10 = (v5 - 4);
        v11 = *(_QWORD *)(*(_QWORD *)(v17 + 8 * v10) + 8 * *(unsigned __int8 *)(v4 + v10 + 8));
        if (*(_BYTE *)(v2 + 29))
        {
          if (*(_BYTE *)(v2 + 30))
          {
            v12 = 2 * (*(_BYTE *)(v11 + 37) == 0);
          }
          else if (*(_BYTE *)(v11 + 37))
          {
            v12 = -2;
          }
          else
          {
            v12 = 0;
          }
        }
        else
        {
          v12 = 0;
        }
        v13 = &v9[2 * v10];
        v14 = v13[1];
        v15 = v14 & 3 | (4 * (*v13 & 3u));
        result = (__int16)(v12 + v14);
        if ((_DWORD)v1 == 1)
          __asm { BR              X9 }
        if (v7 == 4)
        {
          if (v8 == 8)
            __asm { BR              X8 }
          __asm { BR              X8 }
        }
        if (v7 == 8)
        {
          v2 = v21;
          if (v8 == 4)
            __asm { BR              X9 }
          if (v8 == 8)
            __asm { BR              X9 }
          if (v8 == 16)
            __asm { BR              X9 }
        }
        else
        {
          v2 = v21;
          if (v7 == 16)
            __asm { BR              X9 }
        }
      }
      v3 = v22 + 1;
    }
    while (v22 + 1 != v1);
  }
  return result;
}

uint64_t sub_21601F2F0(uint64_t result, uint64_t a2, int8x16_t *a3, int a4, uint64_t a5, int16x8_t *a6, int a7, uint64_t a8, int8x16_t a9, double a10, double a11, int8x16_t a12, double a13, double a14, int8x16_t a15, int a16)
{
  _DWORD *v16;
  int v17;
  _DWORD *v18;
  int v19;
  int v20;
  int32x4_t v21;
  int32x4_t v22;
  uint64_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int32x4_t v26;
  int v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int32x4_t v31;
  int32x4_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int32x4_t v39;
  int32x4_t v40;
  int16x8_t v41;
  int16x8_t v42;
  int8x16_t v43;
  int16x8_t v44;
  int16x8_t v45;
  int16x8_t v46;
  int16x8_t v47;
  _DWORD *v48;
  int v49;
  int v50;
  int32x4_t v51;
  int32x4_t v52;
  uint64_t v53;
  int16x8_t v54;
  int16x8_t v55;
  int32x4_t v56;
  int v57;
  int16x8_t v58;
  int16x8_t v59;
  int16x8_t v60;
  int32x4_t v61;
  int32x4_t v62;
  int16x8_t v63;
  int16x8_t v64;
  int16x8_t v65;
  int16x8_t v66;
  int16x8_t v67;
  int16x8_t v68;
  int32x4_t v69;
  int32x4_t v70;
  int16x8_t v71;
  int16x8_t v72;
  int8x16_t v73;
  int16x8_t v74;
  int16x8_t v75;
  int16x8_t v76;
  int16x8_t v77;
  int16x8_t v78;
  int16x8_t v79;
  int16x8_t v80;
  int16x8_t v81;
  int16x8_t v82;
  int16x8_t v83;
  int16x8_t v84;
  int16x8_t v85;

  v16 = *(_DWORD **)(a8 + 48);
  v17 = v16[90];
  if (v17 == 1)
  {
    if (a7)
    {
      v48 = &v16[4 * a16];
      v49 = *((unsigned __int8 *)v48 + 24);
      v50 = v16[3 * *((unsigned __int8 *)v48 + 24) + 283];
      LODWORD(v48) = *((unsigned __int8 *)v48 + 25);
      a9.i32[0] = v16[87];
      v51 = (int32x4_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE800);
      v52 = (int32x4_t)vqtbl1q_s8((int8x16_t)((v50 + v16[3 * v48 + 379] + 1) >> 1), (int8x16_t)xmmword_2160EE800);
      v53 = (uint64_t)&v16[96 * v49 + 3 * v48];
      a12.i32[0] = *(_DWORD *)(v53 + 14188);
      v54 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
      a15.i32[0] = *(_DWORD *)(v53 + 1900);
      v55 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(a15, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
      v56 = vdupq_n_s32(~v16[83]);
      if ((2 * a7) <= 1)
        v57 = 1;
      else
        v57 = 2 * a7;
      do
      {
        v58 = *(int16x8_t *)(result + 16);
        v59 = vmulq_s16(*(int16x8_t *)result, v55);
        v60 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)result, *(int16x4_t *)v55.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)result, v55));
        v61 = (int32x4_t)vzip1q_s16(v59, v60);
        v62 = (int32x4_t)vzip2q_s16(v59, v60);
        v63 = *(int16x8_t *)(a2 + 16);
        v64 = vmulq_s16(*(int16x8_t *)a2, v54);
        v65 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)a2, *(int16x4_t *)v54.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)a2, v54));
        v66 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v61, v51), (int32x4_t)vzip1q_s16(v64, v65)), v56), v52)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v62, v51), (int32x4_t)vzip2q_s16(v64, v65)), v56), v52));
        v67 = vmulq_s16(v58, v55);
        v68 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v58.i8, *(int16x4_t *)v55.i8), (int16x8_t)vmull_high_s16(v58, v55));
        v69 = (int32x4_t)vzip1q_s16(v67, v68);
        v70 = (int32x4_t)vzip2q_s16(v67, v68);
        v71 = vmulq_s16(v63, v54);
        v72 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v63.i8, *(int16x4_t *)v54.i8), (int16x8_t)vmull_high_s16(v63, v54));
        v73 = vqmovun_high_s16(vqmovun_s16(v66), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v69, v51), (int32x4_t)vzip1q_s16(v71, v72)), v56), v52)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v70, v51), (int32x4_t)vzip2q_s16(v71, v72)), v56), v52)));
        v74 = (int16x8_t)vzip1q_s8(v73, (int8x16_t)0);
        v75 = (int16x8_t)vzip2q_s8(v73, (int8x16_t)0);
        if (a5)
        {
          v76 = *a6;
          v77 = a6[1];
          a6 += 2;
          v74 = vaddq_s16(v76, v74);
          v75 = vaddq_s16(v77, v75);
        }
        *a3 = vqmovun_high_s16(vqmovun_s16(v74), v75);
        a3 = (int8x16_t *)((char *)a3 + a4);
        result += 32;
        a2 += 32;
        --v57;
      }
      while (v57);
    }
  }
  else if (v17 == 2)
  {
    if (a7)
    {
      v18 = &v16[4 * a16];
      v19 = *((unsigned __int8 *)v18 + 24);
      v20 = v16[3 * *((unsigned __int8 *)v18 + 24) + 283];
      LODWORD(v18) = *((unsigned __int8 *)v18 + 25);
      a9.i32[0] = v16[87];
      v21 = (int32x4_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE800);
      v22 = (int32x4_t)vqtbl1q_s8((int8x16_t)((v20 + v16[3 * v18 + 379] + 1) >> 1), (int8x16_t)xmmword_2160EE800);
      v23 = (uint64_t)&v16[96 * v19 + 3 * v18];
      a12.i32[0] = *(_DWORD *)(v23 + 14188);
      v24 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
      a15.i32[0] = *(_DWORD *)(v23 + 1900);
      v25 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(a15, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
      v26 = vdupq_n_s32(~v16[83]);
      if ((2 * a7) <= 1)
        v27 = 1;
      else
        v27 = 2 * a7;
      do
      {
        v28 = *(int16x8_t *)(result + 16);
        v29 = vmulq_s16(*(int16x8_t *)result, v25);
        v30 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)result, *(int16x4_t *)v25.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)result, v25));
        v31 = (int32x4_t)vzip1q_s16(v29, v30);
        v32 = (int32x4_t)vzip2q_s16(v29, v30);
        v33 = *(int16x8_t *)(a2 + 16);
        v34 = vmulq_s16(*(int16x8_t *)a2, v24);
        v35 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)a2, *(int16x4_t *)v24.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)a2, v24));
        v36 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v31, v21), (int32x4_t)vzip1q_s16(v34, v35)), v26), v22)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v32, v21), (int32x4_t)vzip2q_s16(v34, v35)), v26), v22));
        v37 = vmulq_s16(v28, v25);
        v38 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v28.i8, *(int16x4_t *)v25.i8), (int16x8_t)vmull_high_s16(v28, v25));
        v39 = (int32x4_t)vzip1q_s16(v37, v38);
        v40 = (int32x4_t)vzip2q_s16(v37, v38);
        v41 = vmulq_s16(v33, v24);
        v42 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v33.i8, *(int16x4_t *)v24.i8), (int16x8_t)vmull_high_s16(v33, v24));
        v43 = vqmovun_high_s16(vqmovun_s16(v36), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v39, v21), (int32x4_t)vzip1q_s16(v41, v42)), v26), v22)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v40, v21), (int32x4_t)vzip2q_s16(v41, v42)), v26), v22)));
        v44 = (int16x8_t)vzip1q_s8(v43, (int8x16_t)0);
        v45 = (int16x8_t)vzip2q_s8(v43, (int8x16_t)0);
        if (a5)
        {
          v46 = *a6;
          v47 = a6[1];
          a6 += 2;
          v44 = vaddq_s16(v46, v44);
          v45 = vaddq_s16(v47, v45);
        }
        *a3 = vqmovun_high_s16(vqmovun_s16(v44), v45);
        a3 = (int8x16_t *)((char *)a3 + a4);
        result += 32;
        a2 += 32;
        --v27;
      }
      while (v27);
    }
  }
  else if (a7 >= 1)
  {
    do
    {
      v78 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)result, *(uint16x8_t *)a2);
      v79 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(result + 16), *(uint16x8_t *)(a2 + 16));
      v80 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(result + 32), *(uint16x8_t *)(a2 + 32));
      v81 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(result + 48), *(uint16x8_t *)(a2 + 48));
      if (a5)
      {
        v82 = *a6;
        v83 = a6[1];
        v84 = a6[2];
        v85 = a6[3];
        a6 += 4;
        v78 = vaddq_s16(v82, v78);
        v79 = vaddq_s16(v83, v79);
        v80 = vaddq_s16(v84, v80);
        v81 = vaddq_s16(v85, v81);
      }
      *a3 = vqmovun_high_s16(vqmovun_s16(v78), v79);
      *(int8x16_t *)((char *)a3 + a4) = vqmovun_high_s16(vqmovun_s16(v80), v81);
      a3 = (int8x16_t *)((char *)a3 + 2 * a4);
      result += 64;
      a2 += 64;
      --a7;
    }
    while (a7);
  }
  return result;
}

uint64_t sub_21601F6C4(uint64_t result, uint64_t a2, int8x16_t *a3, int a4, uint64_t a5, int16x8_t *a6, int a7, uint64_t a8, int8x16_t a9, double a10, int8x16_t a11, int8x16_t a12, int a13)
{
  _DWORD *v13;
  int v14;
  _DWORD *v15;
  unsigned int v16;
  uint64_t v17;
  _DWORD *v18;
  int16x8_t v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int32x4_t v23;
  int32x4_t v24;
  int v25;
  int32x4_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int32x4_t v30;
  int32x4_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int32x4_t v38;
  int32x4_t v39;
  int16x8_t v40;
  int16x8_t v41;
  int8x16_t v42;
  int16x8_t v43;
  int16x8_t v44;
  int16x8_t v45;
  int16x8_t v46;
  _DWORD *v47;
  unsigned int v48;
  uint64_t v49;
  _DWORD *v50;
  int16x8_t v51;
  int16x8_t v52;
  int16x8_t v53;
  int16x8_t v54;
  int32x4_t v55;
  int32x4_t v56;
  int v57;
  int32x4_t v58;
  int16x8_t v59;
  int16x8_t v60;
  int16x8_t v61;
  int32x4_t v62;
  int32x4_t v63;
  int16x8_t v64;
  int16x8_t v65;
  int16x8_t v66;
  int16x8_t v67;
  int16x8_t v68;
  int16x8_t v69;
  int32x4_t v70;
  int32x4_t v71;
  int16x8_t v72;
  int16x8_t v73;
  int8x16_t v74;
  int16x8_t v75;
  int16x8_t v76;
  int16x8_t v77;
  int16x8_t v78;
  int16x8_t v79;
  int16x8_t v80;
  int16x8_t v81;
  int16x8_t v82;
  int16x8_t v83;
  int16x8_t v84;
  int16x8_t v85;
  int16x8_t v86;

  v13 = *(_DWORD **)(a8 + 48);
  v14 = v13[90];
  if (v14 == 1)
  {
    if (a7)
    {
      v47 = &v13[4 * a13];
      v48 = *((unsigned __int8 *)v47 + 24);
      v49 = 3 * *((unsigned __int8 *)v47 + 25);
      v50 = &v13[96 * v48 + v49];
      a9.i32[0] = v50[476];
      a11.i32[0] = v50[477];
      v51 = (int16x8_t)vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE7D0);
      v52 = vzip1q_s16((int16x8_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE7D0), v51);
      v51.i32[0] = v50[3548];
      v53 = (int16x8_t)vqtbl1q_s8((int8x16_t)v51, (int8x16_t)xmmword_2160EE7D0);
      a12.i32[0] = v50[3549];
      v54 = vzip1q_s16(v53, (int16x8_t)vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE7D0));
      v53.i32[0] = v13[88];
      v55 = (int32x4_t)vqtbl1q_s8((int8x16_t)v53, (int8x16_t)xmmword_2160EE800);
      v56 = vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)((v13[3 * v48 + 284] + v13[v49 + 380] + 1) >> 1), (int8x16_t)xmmword_2160EE800), (int32x4_t)vqtbl1q_s8((int8x16_t)((v13[3 * v48 + 285] + v13[v49 + 381] + 1) >> 1), (int8x16_t)xmmword_2160EE800));
      v57 = 2 * a7;
      v58 = vdupq_n_s32(~v13[84]);
      if ((2 * a7) <= 1)
        v57 = 1;
      do
      {
        v59 = *(int16x8_t *)(result + 16);
        v60 = vmulq_s16(*(int16x8_t *)result, v52);
        v61 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)result, *(int16x4_t *)v52.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)result, v52));
        v62 = (int32x4_t)vzip1q_s16(v60, v61);
        v63 = (int32x4_t)vzip2q_s16(v60, v61);
        v64 = *(int16x8_t *)(a2 + 16);
        v65 = vmulq_s16(*(int16x8_t *)a2, v54);
        v66 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)a2, *(int16x4_t *)v54.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)a2, v54));
        v67 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v62, v55), (int32x4_t)vzip1q_s16(v65, v66)), v58), v56)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v63, v55), (int32x4_t)vzip2q_s16(v65, v66)), v58), v56));
        v68 = vmulq_s16(v59, v52);
        v69 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v59.i8, *(int16x4_t *)v52.i8), (int16x8_t)vmull_high_s16(v59, v52));
        v70 = (int32x4_t)vzip1q_s16(v68, v69);
        v71 = (int32x4_t)vzip2q_s16(v68, v69);
        v72 = vmulq_s16(v64, v54);
        v73 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v64.i8, *(int16x4_t *)v54.i8), (int16x8_t)vmull_high_s16(v64, v54));
        v74 = vqmovun_high_s16(vqmovun_s16(v67), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v70, v55), (int32x4_t)vzip1q_s16(v72, v73)), v58), v56)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v71, v55), (int32x4_t)vzip2q_s16(v72, v73)), v58), v56)));
        v75 = (int16x8_t)vzip1q_s8(v74, (int8x16_t)0);
        v76 = (int16x8_t)vzip2q_s8(v74, (int8x16_t)0);
        if (a5)
        {
          v77 = *a6;
          v78 = a6[1];
          a6 += 2;
          v75 = vaddq_s16(v77, v75);
          v76 = vaddq_s16(v78, v76);
        }
        *a3 = vqmovun_high_s16(vqmovun_s16(v75), v76);
        a3 = (int8x16_t *)((char *)a3 + a4);
        result += 32;
        a2 += 32;
        --v57;
      }
      while (v57);
    }
  }
  else if (v14 == 2)
  {
    if (a7)
    {
      v15 = &v13[4 * a13];
      v16 = *((unsigned __int8 *)v15 + 24);
      v17 = 3 * *((unsigned __int8 *)v15 + 25);
      v18 = &v13[96 * v16 + v17];
      a9.i32[0] = v18[476];
      a11.i32[0] = v18[477];
      v19 = (int16x8_t)vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE7D0);
      v20 = vzip1q_s16((int16x8_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE7D0), v19);
      v19.i32[0] = v18[3548];
      v21 = (int16x8_t)vqtbl1q_s8((int8x16_t)v19, (int8x16_t)xmmword_2160EE7D0);
      a12.i32[0] = v18[3549];
      v22 = vzip1q_s16(v21, (int16x8_t)vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE7D0));
      v21.i32[0] = v13[88];
      v23 = (int32x4_t)vqtbl1q_s8((int8x16_t)v21, (int8x16_t)xmmword_2160EE800);
      v24 = vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)((v13[3 * v16 + 284] + v13[v17 + 380] + 1) >> 1), (int8x16_t)xmmword_2160EE800), (int32x4_t)vqtbl1q_s8((int8x16_t)((v13[3 * v16 + 285] + v13[v17 + 381] + 1) >> 1), (int8x16_t)xmmword_2160EE800));
      v25 = 2 * a7;
      v26 = vdupq_n_s32(~v13[84]);
      if ((2 * a7) <= 1)
        v25 = 1;
      do
      {
        v27 = *(int16x8_t *)(result + 16);
        v28 = vmulq_s16(*(int16x8_t *)result, v20);
        v29 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)result, *(int16x4_t *)v20.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)result, v20));
        v30 = (int32x4_t)vzip1q_s16(v28, v29);
        v31 = (int32x4_t)vzip2q_s16(v28, v29);
        v32 = *(int16x8_t *)(a2 + 16);
        v33 = vmulq_s16(*(int16x8_t *)a2, v22);
        v34 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)a2, *(int16x4_t *)v22.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)a2, v22));
        v35 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v30, v23), (int32x4_t)vzip1q_s16(v33, v34)), v26), v24)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v31, v23), (int32x4_t)vzip2q_s16(v33, v34)), v26), v24));
        v36 = vmulq_s16(v27, v20);
        v37 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v27.i8, *(int16x4_t *)v20.i8), (int16x8_t)vmull_high_s16(v27, v20));
        v38 = (int32x4_t)vzip1q_s16(v36, v37);
        v39 = (int32x4_t)vzip2q_s16(v36, v37);
        v40 = vmulq_s16(v32, v22);
        v41 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v32.i8, *(int16x4_t *)v22.i8), (int16x8_t)vmull_high_s16(v32, v22));
        v42 = vqmovun_high_s16(vqmovun_s16(v35), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v38, v23), (int32x4_t)vzip1q_s16(v40, v41)), v26), v24)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v39, v23), (int32x4_t)vzip2q_s16(v40, v41)), v26), v24)));
        v43 = (int16x8_t)vzip1q_s8(v42, (int8x16_t)0);
        v44 = (int16x8_t)vzip2q_s8(v42, (int8x16_t)0);
        if (a5)
        {
          v45 = *a6;
          v46 = a6[1];
          a6 += 2;
          v43 = vaddq_s16(v45, v43);
          v44 = vaddq_s16(v46, v44);
        }
        *a3 = vqmovun_high_s16(vqmovun_s16(v43), v44);
        a3 = (int8x16_t *)((char *)a3 + a4);
        result += 32;
        a2 += 32;
        --v25;
      }
      while (v25);
    }
  }
  else if (a7 >= 1)
  {
    do
    {
      v79 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)result, *(uint16x8_t *)a2);
      v80 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(result + 16), *(uint16x8_t *)(a2 + 16));
      v81 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(result + 32), *(uint16x8_t *)(a2 + 32));
      v82 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(result + 48), *(uint16x8_t *)(a2 + 48));
      if (a5)
      {
        v83 = *a6;
        v84 = a6[1];
        v85 = a6[2];
        v86 = a6[3];
        a6 += 4;
        v79 = vaddq_s16(v83, v79);
        v80 = vaddq_s16(v84, v80);
        v81 = vaddq_s16(v85, v81);
        v82 = vaddq_s16(v86, v82);
      }
      *a3 = vqmovun_high_s16(vqmovun_s16(v79), v80);
      *(int8x16_t *)((char *)a3 + a4) = vqmovun_high_s16(vqmovun_s16(v81), v82);
      a3 = (int8x16_t *)((char *)a3 + 2 * a4);
      result += 64;
      a2 += 64;
      --a7;
    }
    while (a7);
  }
  return result;
}

uint64_t sub_21601FAF8(uint64_t result, uint64_t a2, int8x8_t *a3, int a4, uint64_t a5, int16x8_t *a6, int a7, uint64_t a8, int8x16_t a9, double a10, double a11, int8x16_t a12, double a13, double a14, int8x16_t a15, int a16)
{
  _DWORD *v16;
  int v17;
  _DWORD *v18;
  int v19;
  int32x4_t v20;
  int32x4_t v21;
  uint64_t v22;
  int16x8_t v23;
  int32x4_t v24;
  int16x8_t v25;
  int v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int32x4_t v30;
  int32x4_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int32x4_t v38;
  int32x4_t v39;
  int16x8_t v40;
  int16x8_t v41;
  int8x16_t v42;
  int16x8_t v43;
  int16x8_t v44;
  int16x8_t v45;
  int16x8_t v46;
  _DWORD *v47;
  int v48;
  int32x4_t v49;
  int32x4_t v50;
  uint64_t v51;
  int16x8_t v52;
  int32x4_t v53;
  int16x8_t v54;
  int v55;
  int16x8_t v56;
  int16x8_t v57;
  int16x8_t v58;
  int32x4_t v59;
  int32x4_t v60;
  int16x8_t v61;
  int16x8_t v62;
  int16x8_t v63;
  int16x8_t v64;
  int16x8_t v65;
  int16x8_t v66;
  int32x4_t v67;
  int32x4_t v68;
  int16x8_t v69;
  int16x8_t v70;
  int8x16_t v71;
  int16x8_t v72;
  int16x8_t v73;
  int16x8_t v74;
  int16x8_t v75;
  int16x8_t v76;
  int16x8_t v77;
  int16x8_t v78;
  int16x8_t v79;
  int16x8_t v80;
  int16x8_t v81;
  int16x8_t v82;
  int16x8_t v83;

  v16 = *(_DWORD **)(a8 + 48);
  v17 = v16[90];
  if (v17 == 1)
  {
    if (a7)
    {
      v47 = &v16[4 * a16];
      v48 = *((unsigned __int8 *)v47 + 24);
      LODWORD(v47) = *((unsigned __int8 *)v47 + 25);
      a9.i32[0] = v16[87];
      v49 = (int32x4_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE800);
      v50 = (int32x4_t)vqtbl1q_s8((int8x16_t)((v16[3 * v48 + 283] + v16[3 * v47 + 379] + 1) >> 1), (int8x16_t)xmmword_2160EE800);
      v51 = (uint64_t)&v16[96 * v48 + 3 * v47];
      a12.i32[0] = *(_DWORD *)(v51 + 14188);
      v52 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
      a15.i32[0] = *(_DWORD *)(v51 + 1900);
      v53 = vdupq_n_s32(~v16[83]);
      v54 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(a15, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
      if ((2 * a7) <= 1)
        v55 = 1;
      else
        v55 = 2 * a7;
      do
      {
        v56 = *(int16x8_t *)(result + 16);
        v57 = vmulq_s16(*(int16x8_t *)result, v54);
        v58 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)result, *(int16x4_t *)v54.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)result, v54));
        v59 = (int32x4_t)vzip1q_s16(v57, v58);
        v60 = (int32x4_t)vzip2q_s16(v57, v58);
        v61 = *(int16x8_t *)(a2 + 16);
        v62 = vmulq_s16(*(int16x8_t *)a2, v52);
        v63 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)a2, *(int16x4_t *)v52.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)a2, v52));
        v64 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v59, v49), (int32x4_t)vzip1q_s16(v62, v63)), v53), v50)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v60, v49), (int32x4_t)vzip2q_s16(v62, v63)), v53), v50));
        v65 = vmulq_s16(v56, v54);
        v66 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v56.i8, *(int16x4_t *)v54.i8), (int16x8_t)vmull_high_s16(v56, v54));
        v67 = (int32x4_t)vzip1q_s16(v65, v66);
        v68 = (int32x4_t)vzip2q_s16(v65, v66);
        v69 = vmulq_s16(v61, v52);
        v70 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v61.i8, *(int16x4_t *)v52.i8), (int16x8_t)vmull_high_s16(v61, v52));
        v71 = vqmovun_high_s16(vqmovun_s16(v64), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v67, v49), (int32x4_t)vzip1q_s16(v69, v70)), v53), v50)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v68, v49), (int32x4_t)vzip2q_s16(v69, v70)), v53), v50)));
        v72 = (int16x8_t)vzip1q_s8(v71, (int8x16_t)0);
        v73 = (int16x8_t)vzip2q_s8(v71, (int8x16_t)0);
        if (a5)
        {
          v74 = *a6;
          v75 = a6[2];
          a6 += 4;
          v72 = vaddq_s16(v74, v72);
          v73 = vaddq_s16(v75, v73);
        }
        *a3 = vqmovun_s16(v72);
        *(int8x8_t *)((char *)a3 + a4) = vqmovun_s16(v73);
        a3 = (int8x8_t *)((char *)a3 + 2 * a4);
        result += 32;
        a2 += 32;
        --v55;
      }
      while (v55);
    }
  }
  else if (v17 == 2)
  {
    if (a7)
    {
      v18 = &v16[4 * a16];
      v19 = *((unsigned __int8 *)v18 + 24);
      LODWORD(v18) = *((unsigned __int8 *)v18 + 25);
      a9.i32[0] = v16[87];
      v20 = (int32x4_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE800);
      v21 = (int32x4_t)vqtbl1q_s8((int8x16_t)((v16[3 * v19 + 283] + v16[3 * v18 + 379] + 1) >> 1), (int8x16_t)xmmword_2160EE800);
      v22 = (uint64_t)&v16[96 * v19 + 3 * v18];
      a12.i32[0] = *(_DWORD *)(v22 + 14188);
      v23 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
      a15.i32[0] = *(_DWORD *)(v22 + 1900);
      v24 = vdupq_n_s32(~v16[83]);
      v25 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(a15, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
      if ((2 * a7) <= 1)
        v26 = 1;
      else
        v26 = 2 * a7;
      do
      {
        v27 = *(int16x8_t *)(result + 16);
        v28 = vmulq_s16(*(int16x8_t *)result, v25);
        v29 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)result, *(int16x4_t *)v25.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)result, v25));
        v30 = (int32x4_t)vzip1q_s16(v28, v29);
        v31 = (int32x4_t)vzip2q_s16(v28, v29);
        v32 = *(int16x8_t *)(a2 + 16);
        v33 = vmulq_s16(*(int16x8_t *)a2, v23);
        v34 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)a2, *(int16x4_t *)v23.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)a2, v23));
        v35 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v30, v20), (int32x4_t)vzip1q_s16(v33, v34)), v24), v21)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v31, v20), (int32x4_t)vzip2q_s16(v33, v34)), v24), v21));
        v36 = vmulq_s16(v27, v25);
        v37 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v27.i8, *(int16x4_t *)v25.i8), (int16x8_t)vmull_high_s16(v27, v25));
        v38 = (int32x4_t)vzip1q_s16(v36, v37);
        v39 = (int32x4_t)vzip2q_s16(v36, v37);
        v40 = vmulq_s16(v32, v23);
        v41 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v32.i8, *(int16x4_t *)v23.i8), (int16x8_t)vmull_high_s16(v32, v23));
        v42 = vqmovun_high_s16(vqmovun_s16(v35), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v38, v20), (int32x4_t)vzip1q_s16(v40, v41)), v24), v21)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v39, v20), (int32x4_t)vzip2q_s16(v40, v41)), v24), v21)));
        v43 = (int16x8_t)vzip1q_s8(v42, (int8x16_t)0);
        v44 = (int16x8_t)vzip2q_s8(v42, (int8x16_t)0);
        if (a5)
        {
          v45 = *a6;
          v46 = a6[2];
          a6 += 4;
          v43 = vaddq_s16(v45, v43);
          v44 = vaddq_s16(v46, v44);
        }
        *a3 = vqmovun_s16(v43);
        *(int8x8_t *)((char *)a3 + a4) = vqmovun_s16(v44);
        a3 = (int8x8_t *)((char *)a3 + 2 * a4);
        result += 32;
        a2 += 32;
        --v26;
      }
      while (v26);
    }
  }
  else if (a7 >= 1)
  {
    do
    {
      v76 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)result, *(uint16x8_t *)a2);
      v77 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(result + 16), *(uint16x8_t *)(a2 + 16));
      v78 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(result + 32), *(uint16x8_t *)(a2 + 32));
      v79 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(result + 48), *(uint16x8_t *)(a2 + 48));
      if (a5)
      {
        v80 = *a6;
        v81 = a6[2];
        v82 = a6[4];
        v83 = a6[6];
        a6 += 8;
        v76 = vaddq_s16(v80, v76);
        v77 = vaddq_s16(v81, v77);
        v78 = vaddq_s16(v82, v78);
        v79 = vaddq_s16(v83, v79);
      }
      *a3 = vqmovun_s16(v76);
      *(int8x8_t *)((char *)a3 + a4) = vqmovun_s16(v77);
      *(int8x8_t *)((char *)a3 + 2 * a4) = vqmovun_s16(v78);
      *(int8x8_t *)((char *)a3 + 3 * a4) = vqmovun_s16(v79);
      a3 = (int8x8_t *)((char *)a3 + 4 * a4);
      result += 64;
      a2 += 64;
      --a7;
    }
    while (a7);
  }
  return result;
}

uint64_t sub_21601FF04(uint64_t result, uint64_t a2, int8x8_t *a3, int a4, uint64_t a5, int16x8_t *a6, int a7, uint64_t a8, int8x16_t a9, double a10, int8x16_t a11, int8x16_t a12, int a13)
{
  _DWORD *v13;
  int v14;
  _DWORD *v15;
  unsigned int v16;
  uint64_t v17;
  _DWORD *v18;
  int16x8_t v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int32x4_t v23;
  int32x4_t v24;
  int32x4_t v25;
  int v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int32x4_t v30;
  int32x4_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int32x4_t v38;
  int32x4_t v39;
  int16x8_t v40;
  int16x8_t v41;
  int8x16_t v42;
  int16x8_t v43;
  int16x8_t v44;
  int16x8_t v45;
  int16x8_t v46;
  _DWORD *v47;
  unsigned int v48;
  uint64_t v49;
  _DWORD *v50;
  int16x8_t v51;
  int16x8_t v52;
  int16x8_t v53;
  int16x8_t v54;
  int32x4_t v55;
  int32x4_t v56;
  int32x4_t v57;
  int v58;
  int16x8_t v59;
  int16x8_t v60;
  int16x8_t v61;
  int32x4_t v62;
  int32x4_t v63;
  int16x8_t v64;
  int16x8_t v65;
  int16x8_t v66;
  int16x8_t v67;
  int16x8_t v68;
  int16x8_t v69;
  int32x4_t v70;
  int32x4_t v71;
  int16x8_t v72;
  int16x8_t v73;
  int8x16_t v74;
  int16x8_t v75;
  int16x8_t v76;
  int16x8_t v77;
  int16x8_t v78;
  int16x8_t v79;
  int16x8_t v80;
  int16x8_t v81;
  int16x8_t v82;
  int16x8_t v83;
  int16x8_t v84;
  int16x8_t v85;
  int16x8_t v86;

  v13 = *(_DWORD **)(a8 + 48);
  v14 = v13[90];
  if (v14 == 1)
  {
    if (a7)
    {
      v47 = &v13[4 * a13];
      v48 = *((unsigned __int8 *)v47 + 24);
      v49 = 3 * *((unsigned __int8 *)v47 + 25);
      v50 = &v13[96 * v48 + v49];
      a9.i32[0] = v50[476];
      a11.i32[0] = v50[477];
      v51 = (int16x8_t)vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE7D0);
      v52 = vzip1q_s16((int16x8_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE7D0), v51);
      v51.i32[0] = v50[3548];
      v53 = (int16x8_t)vqtbl1q_s8((int8x16_t)v51, (int8x16_t)xmmword_2160EE7D0);
      a12.i32[0] = v50[3549];
      v54 = vzip1q_s16(v53, (int16x8_t)vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE7D0));
      v53.i32[0] = v13[88];
      v55 = (int32x4_t)vqtbl1q_s8((int8x16_t)v53, (int8x16_t)xmmword_2160EE800);
      v56 = vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)((v13[3 * v48 + 284] + v13[v49 + 380] + 1) >> 1), (int8x16_t)xmmword_2160EE800), (int32x4_t)vqtbl1q_s8((int8x16_t)((v13[3 * v48 + 285] + v13[v49 + 381] + 1) >> 1), (int8x16_t)xmmword_2160EE800));
      v57 = vdupq_n_s32(~v13[84]);
      v58 = 2 * a7;
      if ((2 * a7) <= 1)
        v58 = 1;
      do
      {
        v59 = *(int16x8_t *)(result + 16);
        v60 = vmulq_s16(*(int16x8_t *)result, v52);
        v61 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)result, *(int16x4_t *)v52.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)result, v52));
        v62 = (int32x4_t)vzip1q_s16(v60, v61);
        v63 = (int32x4_t)vzip2q_s16(v60, v61);
        v64 = *(int16x8_t *)(a2 + 16);
        v65 = vmulq_s16(*(int16x8_t *)a2, v54);
        v66 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)a2, *(int16x4_t *)v54.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)a2, v54));
        v67 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v62, v55), (int32x4_t)vzip1q_s16(v65, v66)), v57), v56)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v63, v55), (int32x4_t)vzip2q_s16(v65, v66)), v57), v56));
        v68 = vmulq_s16(v59, v52);
        v69 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v59.i8, *(int16x4_t *)v52.i8), (int16x8_t)vmull_high_s16(v59, v52));
        v70 = (int32x4_t)vzip1q_s16(v68, v69);
        v71 = (int32x4_t)vzip2q_s16(v68, v69);
        v72 = vmulq_s16(v64, v54);
        v73 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v64.i8, *(int16x4_t *)v54.i8), (int16x8_t)vmull_high_s16(v64, v54));
        v74 = vqmovun_high_s16(vqmovun_s16(v67), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v70, v55), (int32x4_t)vzip1q_s16(v72, v73)), v57), v56)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v71, v55), (int32x4_t)vzip2q_s16(v72, v73)), v57), v56)));
        v75 = (int16x8_t)vzip1q_s8(v74, (int8x16_t)0);
        v76 = (int16x8_t)vzip2q_s8(v74, (int8x16_t)0);
        if (a5)
        {
          v77 = *a6;
          v78 = a6[2];
          a6 += 4;
          v75 = vaddq_s16(v77, v75);
          v76 = vaddq_s16(v78, v76);
        }
        *a3 = vqmovun_s16(v75);
        *(int8x8_t *)((char *)a3 + a4) = vqmovun_s16(v76);
        a3 = (int8x8_t *)((char *)a3 + 2 * a4);
        result += 32;
        a2 += 32;
        --v58;
      }
      while (v58);
    }
  }
  else if (v14 == 2)
  {
    if (a7)
    {
      v15 = &v13[4 * a13];
      v16 = *((unsigned __int8 *)v15 + 24);
      v17 = 3 * *((unsigned __int8 *)v15 + 25);
      v18 = &v13[96 * v16 + v17];
      a9.i32[0] = v18[476];
      a11.i32[0] = v18[477];
      v19 = (int16x8_t)vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE7D0);
      v20 = vzip1q_s16((int16x8_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE7D0), v19);
      v19.i32[0] = v18[3548];
      v21 = (int16x8_t)vqtbl1q_s8((int8x16_t)v19, (int8x16_t)xmmword_2160EE7D0);
      a12.i32[0] = v18[3549];
      v22 = vzip1q_s16(v21, (int16x8_t)vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE7D0));
      v21.i32[0] = v13[88];
      v23 = (int32x4_t)vqtbl1q_s8((int8x16_t)v21, (int8x16_t)xmmword_2160EE800);
      v24 = vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)((v13[3 * v16 + 284] + v13[v17 + 380] + 1) >> 1), (int8x16_t)xmmword_2160EE800), (int32x4_t)vqtbl1q_s8((int8x16_t)((v13[3 * v16 + 285] + v13[v17 + 381] + 1) >> 1), (int8x16_t)xmmword_2160EE800));
      v25 = vdupq_n_s32(~v13[84]);
      v26 = 2 * a7;
      if ((2 * a7) <= 1)
        v26 = 1;
      do
      {
        v27 = *(int16x8_t *)(result + 16);
        v28 = vmulq_s16(*(int16x8_t *)result, v20);
        v29 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)result, *(int16x4_t *)v20.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)result, v20));
        v30 = (int32x4_t)vzip1q_s16(v28, v29);
        v31 = (int32x4_t)vzip2q_s16(v28, v29);
        v32 = *(int16x8_t *)(a2 + 16);
        v33 = vmulq_s16(*(int16x8_t *)a2, v22);
        v34 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)a2, *(int16x4_t *)v22.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)a2, v22));
        v35 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v30, v23), (int32x4_t)vzip1q_s16(v33, v34)), v25), v24)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v31, v23), (int32x4_t)vzip2q_s16(v33, v34)), v25), v24));
        v36 = vmulq_s16(v27, v20);
        v37 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v27.i8, *(int16x4_t *)v20.i8), (int16x8_t)vmull_high_s16(v27, v20));
        v38 = (int32x4_t)vzip1q_s16(v36, v37);
        v39 = (int32x4_t)vzip2q_s16(v36, v37);
        v40 = vmulq_s16(v32, v22);
        v41 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v32.i8, *(int16x4_t *)v22.i8), (int16x8_t)vmull_high_s16(v32, v22));
        v42 = vqmovun_high_s16(vqmovun_s16(v35), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v38, v23), (int32x4_t)vzip1q_s16(v40, v41)), v25), v24)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v39, v23), (int32x4_t)vzip2q_s16(v40, v41)), v25), v24)));
        v43 = (int16x8_t)vzip1q_s8(v42, (int8x16_t)0);
        v44 = (int16x8_t)vzip2q_s8(v42, (int8x16_t)0);
        if (a5)
        {
          v45 = *a6;
          v46 = a6[2];
          a6 += 4;
          v43 = vaddq_s16(v45, v43);
          v44 = vaddq_s16(v46, v44);
        }
        *a3 = vqmovun_s16(v43);
        *(int8x8_t *)((char *)a3 + a4) = vqmovun_s16(v44);
        a3 = (int8x8_t *)((char *)a3 + 2 * a4);
        result += 32;
        a2 += 32;
        --v26;
      }
      while (v26);
    }
  }
  else if (a7 >= 1)
  {
    do
    {
      v79 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)result, *(uint16x8_t *)a2);
      v80 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(result + 16), *(uint16x8_t *)(a2 + 16));
      v81 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(result + 32), *(uint16x8_t *)(a2 + 32));
      v82 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(result + 48), *(uint16x8_t *)(a2 + 48));
      if (a5)
      {
        v83 = *a6;
        v84 = a6[2];
        v85 = a6[4];
        v86 = a6[6];
        a6 += 8;
        v79 = vaddq_s16(v83, v79);
        v80 = vaddq_s16(v84, v80);
        v81 = vaddq_s16(v85, v81);
        v82 = vaddq_s16(v86, v82);
      }
      *a3 = vqmovun_s16(v79);
      *(int8x8_t *)((char *)a3 + a4) = vqmovun_s16(v80);
      *(int8x8_t *)((char *)a3 + 2 * a4) = vqmovun_s16(v81);
      *(int8x8_t *)((char *)a3 + 3 * a4) = vqmovun_s16(v82);
      a3 = (int8x8_t *)((char *)a3 + 4 * a4);
      result += 64;
      a2 += 64;
      --a7;
    }
    while (a7);
  }
  return result;
}

int8x8_t sub_216020370(uint16x8_t *a1, uint16x8_t *a2, int8x8_t *a3, int a4, uint64_t a5, int16x8_t *a6, uint64_t a7, int a8, int8x16_t a9, double a10, int8x16_t a11, int8x16_t a12)
{
  _DWORD *v12;
  int v13;
  _DWORD *v14;
  _DWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int16x8_t v18;
  int16x8_t v19;
  int16x8_t v20;
  int16x8_t v21;
  int32x4_t v22;
  int32x4_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int32x4_t v27;
  int32x4_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int32x4_t v32;
  int32x4_t v33;
  int32x4_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int32x4_t v38;
  int32x4_t v39;
  int16x8_t v40;
  int16x8_t v41;
  int8x16_t v42;
  int16x8_t v43;
  int16x8_t v44;
  int8x8_t result;

  v12 = *(_DWORD **)(a7 + 48);
  v13 = v12[90];
  if (v13 != 2 && v13 != 1)
  {
    v43 = (int16x8_t)vrhaddq_u16(*a1, *a2);
    v44 = (int16x8_t)vrhaddq_u16(a1[1], a2[1]);
    if (!a5)
      goto LABEL_5;
    goto LABEL_4;
  }
  v14 = &v12[4 * a8];
  v15 = &v12[96 * *((unsigned __int8 *)v14 + 24) + 3 * *((unsigned __int8 *)v14 + 25)];
  v16 = (uint64_t)&v12[3 * *((unsigned __int8 *)v14 + 24) + 283];
  v17 = (uint64_t)&v12[3 * *((unsigned __int8 *)v14 + 25) + 283];
  a9.i32[0] = v15[476];
  a11.i32[0] = v15[477];
  v18 = (int16x8_t)vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE7D0);
  v19 = vzip1q_s16((int16x8_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE7D0), v18);
  v18.i32[0] = v15[3548];
  v20 = (int16x8_t)vqtbl1q_s8((int8x16_t)v18, (int8x16_t)xmmword_2160EE7D0);
  a12.i32[0] = v15[3549];
  v21 = vzip1q_s16(v20, (int16x8_t)vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE7D0));
  v20.i32[0] = v12[88];
  v22 = (int32x4_t)vqtbl1q_s8((int8x16_t)v20, (int8x16_t)xmmword_2160EE800);
  v23 = vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)((*(_DWORD *)(v16 + 4) + *(_DWORD *)(v17 + 388) + 1) >> 1), (int8x16_t)xmmword_2160EE800), (int32x4_t)vqtbl1q_s8((int8x16_t)((*(_DWORD *)(v16 + 8) + *(_DWORD *)(v17 + 392) + 1) >> 1), (int8x16_t)xmmword_2160EE800));
  v24 = (int16x8_t)a1[1];
  v25 = vmulq_s16(*(int16x8_t *)a1, v19);
  v26 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)a1->i8, *(int16x4_t *)v19.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)a1, v19));
  v27 = (int32x4_t)vzip1q_s16(v25, v26);
  v28 = (int32x4_t)vzip2q_s16(v25, v26);
  v29 = (int16x8_t)a2[1];
  v30 = vmulq_s16(*(int16x8_t *)a2, v21);
  v31 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)a2->i8, *(int16x4_t *)v21.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)a2, v21));
  v32 = (int32x4_t)vzip1q_s16(v30, v31);
  v33 = vaddq_s32(vaddq_s32(v28, v22), (int32x4_t)vzip2q_s16(v30, v31));
  v34 = vdupq_n_s32(~v12[84]);
  v35 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v27, v22), v32), v34), v23)), vaddq_s32(vshlq_s32(v33, v34), v23));
  v36 = vmulq_s16(v24, v19);
  v37 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v24.i8, *(int16x4_t *)v19.i8), (int16x8_t)vmull_high_s16(v24, v19));
  v38 = (int32x4_t)vzip1q_s16(v36, v37);
  v39 = (int32x4_t)vzip2q_s16(v36, v37);
  v40 = vmulq_s16(v29, v21);
  v41 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v29.i8, *(int16x4_t *)v21.i8), (int16x8_t)vmull_high_s16(v29, v21));
  v42 = vqmovun_high_s16(vqmovun_s16(v35), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v38, v22), (int32x4_t)vzip1q_s16(v40, v41)), v34), v23)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v39, v22), (int32x4_t)vzip2q_s16(v40, v41)), v34), v23)));
  v43 = (int16x8_t)vzip1q_s8(v42, (int8x16_t)0);
  v44 = (int16x8_t)vzip2q_s8(v42, (int8x16_t)0);
  if (a5)
  {
LABEL_4:
    v43 = vaddq_s16(*a6, v43);
    v44 = vaddq_s16(a6[2], v44);
  }
LABEL_5:
  result = vqmovun_s16(v44);
  *a3 = vqmovun_s16(v43);
  *(int8x8_t *)((char *)a3 + a4) = result;
  return result;
}

int16x4_t *sub_21602054C(int16x4_t *result, int16x4_t *a2, _DWORD *a3, int a4, uint64_t a5, uint64_t *a6, int a7, uint64_t a8, int16x8_t a9, int16x8_t a10, int16x8_t a11, int8x16_t a12, uint16x8_t a13, uint16x8_t a14, int8x16_t a15, uint16x8_t a16, int a17)
{
  int16x8_t v17;
  int16x8_t v18;
  int16x8_t v19;
  _DWORD *v20;
  int v21;
  _DWORD *v22;
  int v23;
  int32x4_t v24;
  int32x4_t v25;
  uint64_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int32x4_t v29;
  int v30;
  int16x8_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int32x4_t v35;
  int32x4_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int16x8_t v39;
  int16x8_t v40;
  int16x8_t v41;
  int32x4_t v42;
  int32x4_t v43;
  int16x8_t v44;
  int16x8_t v45;
  int8x16_t v46;
  _DWORD *v47;
  int v48;
  int32x4_t v49;
  int32x4_t v50;
  uint64_t v51;
  int16x8_t v52;
  int16x8_t v53;
  int32x4_t v54;
  int v55;
  int16x8_t v56;
  int16x8_t v57;
  int16x8_t v58;
  int16x8_t v59;
  int32x4_t v60;
  int32x4_t v61;
  int16x8_t v62;
  int16x8_t v63;
  int16x8_t v64;
  int16x8_t v65;
  int16x8_t v66;
  int32x4_t v67;
  int32x4_t v68;
  int16x8_t v69;
  int16x8_t v70;
  int8x16_t v71;
  int16x8_t v72;

  v20 = *(_DWORD **)(a8 + 48);
  v21 = v20[90];
  if (v21 == 1)
  {
    if (a7)
    {
      v47 = &v20[4 * a17];
      v48 = *((unsigned __int8 *)v47 + 24);
      LODWORD(v47) = *((unsigned __int8 *)v47 + 25);
      a9.i32[0] = v20[87];
      v49 = (int32x4_t)vqtbl1q_s8((int8x16_t)a9, (int8x16_t)xmmword_2160EE800);
      v50 = (int32x4_t)vqtbl1q_s8((int8x16_t)((v20[3 * v48 + 283] + v20[3 * v47 + 379] + 1) >> 1), (int8x16_t)xmmword_2160EE800);
      v51 = (uint64_t)&v20[96 * v48 + 3 * v47];
      a12.i32[0] = *(_DWORD *)(v51 + 14188);
      v52 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
      a15.i32[0] = *(_DWORD *)(v51 + 1900);
      v53 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(a15, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
      v54 = vdupq_n_s32(~v20[83]);
      if ((2 * a7) <= 1)
        v55 = 1;
      else
        v55 = 2 * a7;
      v56 = (int16x8_t)vmull_s16(0, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v53, (int8x16_t)v53, 8uLL));
      v57 = (int16x8_t)vmull_s16(0, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v52, (int8x16_t)v52, 8uLL));
      do
      {
        *(int16x4_t *)v17.i8 = *result;
        *(int16x4_t *)v18.i8 = result[1];
        v58 = vmulq_s16(v17, v53);
        v59 = vuzp2q_s16((int16x8_t)vmull_s16(*result, *(int16x4_t *)v53.i8), v56);
        v60 = (int32x4_t)vzip1q_s16(v58, v59);
        v61 = (int32x4_t)vzip2q_s16(v58, v59);
        *(int16x4_t *)v58.i8 = *a2;
        *(int16x4_t *)v19.i8 = a2[1];
        v62 = vmulq_s16(v58, v52);
        v63 = vuzp2q_s16((int16x8_t)vmull_s16(*a2, *(int16x4_t *)v52.i8), v57);
        v64 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v60, v49), (int32x4_t)vzip1q_s16(v62, v63)), v54), v50)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v61, v49), (int32x4_t)vzip2q_s16(v62, v63)), v54), v50));
        v65 = vmulq_s16(v18, v53);
        v66 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v18.i8, *(int16x4_t *)v53.i8), v56);
        v67 = (int32x4_t)vzip1q_s16(v65, v66);
        v68 = (int32x4_t)vzip2q_s16(v65, v66);
        v69 = vmulq_s16(v19, v52);
        v19 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v19.i8, *(int16x4_t *)v52.i8), v57);
        v70 = (int16x8_t)vaddq_s32(vaddq_s32(v67, v49), (int32x4_t)vzip1q_s16(v69, v19));
        v71 = vqmovun_high_s16(vqmovun_s16(v64), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32((int32x4_t)v70, v54), v50)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v68, v49), (int32x4_t)vzip2q_s16(v69, v19)), v54), v50)));
        v18 = (int16x8_t)vzip1q_s8(v71, (int8x16_t)0);
        v17 = (int16x8_t)vzip2q_s8(v71, (int8x16_t)0);
        if (a5)
        {
          v64.i64[0] = *a6;
          v70.i64[0] = a6[4];
          a6 += 8;
          v18 = vaddq_s16(v64, v18);
          v17 = vaddq_s16(v70, v17);
        }
        *a3 = vqmovun_s16(v18).u32[0];
        *(_DWORD *)((char *)a3 + a4) = vqmovun_s16(v17).u32[0];
        a3 = (_DWORD *)((char *)a3 + 2 * a4);
        result += 2;
        a2 += 2;
        --v55;
      }
      while (v55);
    }
  }
  else if (v21 == 2)
  {
    if (a7)
    {
      v22 = &v20[4 * a17];
      v23 = *((unsigned __int8 *)v22 + 24);
      LODWORD(v22) = *((unsigned __int8 *)v22 + 25);
      a9.i32[0] = v20[87];
      v24 = (int32x4_t)vqtbl1q_s8((int8x16_t)a9, (int8x16_t)xmmword_2160EE800);
      v25 = (int32x4_t)vqtbl1q_s8((int8x16_t)((v20[3 * v23 + 283] + v20[3 * v22 + 379] + 1) >> 1), (int8x16_t)xmmword_2160EE800);
      v26 = (uint64_t)&v20[96 * v23 + 3 * v22];
      a12.i32[0] = *(_DWORD *)(v26 + 14188);
      v27 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
      a15.i32[0] = *(_DWORD *)(v26 + 1900);
      v28 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(a15, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
      v29 = vdupq_n_s32(~v20[83]);
      if ((2 * a7) <= 1)
        v30 = 1;
      else
        v30 = 2 * a7;
      v31 = (int16x8_t)vmull_s16(0, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v28, (int8x16_t)v28, 8uLL));
      v32 = (int16x8_t)vmull_s16(0, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v27, (int8x16_t)v27, 8uLL));
      do
      {
        *(int16x4_t *)v17.i8 = *result;
        *(int16x4_t *)v18.i8 = result[1];
        v33 = vmulq_s16(v17, v28);
        v34 = vuzp2q_s16((int16x8_t)vmull_s16(*result, *(int16x4_t *)v28.i8), v31);
        v35 = (int32x4_t)vzip1q_s16(v33, v34);
        v36 = (int32x4_t)vzip2q_s16(v33, v34);
        *(int16x4_t *)v33.i8 = *a2;
        *(int16x4_t *)v19.i8 = a2[1];
        v37 = vmulq_s16(v33, v27);
        v38 = vuzp2q_s16((int16x8_t)vmull_s16(*a2, *(int16x4_t *)v27.i8), v32);
        v39 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v35, v24), (int32x4_t)vzip1q_s16(v37, v38)), v29), v25)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v36, v24), (int32x4_t)vzip2q_s16(v37, v38)), v29), v25));
        v40 = vmulq_s16(v18, v28);
        v41 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v18.i8, *(int16x4_t *)v28.i8), v31);
        v42 = (int32x4_t)vzip1q_s16(v40, v41);
        v43 = (int32x4_t)vzip2q_s16(v40, v41);
        v44 = vmulq_s16(v19, v27);
        v19 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v19.i8, *(int16x4_t *)v27.i8), v32);
        v45 = (int16x8_t)vaddq_s32(vaddq_s32(v42, v24), (int32x4_t)vzip1q_s16(v44, v19));
        v46 = vqmovun_high_s16(vqmovun_s16(v39), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32((int32x4_t)v45, v29), v25)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v43, v24), (int32x4_t)vzip2q_s16(v44, v19)), v29), v25)));
        v18 = (int16x8_t)vzip1q_s8(v46, (int8x16_t)0);
        v17 = (int16x8_t)vzip2q_s8(v46, (int8x16_t)0);
        if (a5)
        {
          v39.i64[0] = *a6;
          v45.i64[0] = a6[4];
          a6 += 8;
          v18 = vaddq_s16(v39, v18);
          v17 = vaddq_s16(v45, v17);
        }
        *a3 = vqmovun_s16(v18).u32[0];
        *(_DWORD *)((char *)a3 + a4) = vqmovun_s16(v17).u32[0];
        a3 = (_DWORD *)((char *)a3 + 2 * a4);
        result += 2;
        a2 += 2;
        --v30;
      }
      while (v30);
    }
  }
  else if (a7 >= 1)
  {
    do
    {
      *(int16x4_t *)a9.i8 = *result;
      *(int16x4_t *)a10.i8 = result[1];
      *(int16x4_t *)a13.i8 = result[2];
      *(int16x4_t *)a14.i8 = result[3];
      *(int16x4_t *)a11.i8 = *a2;
      *(int16x4_t *)a15.i8 = a2[1];
      *(int16x4_t *)a16.i8 = a2[2];
      *(int16x4_t *)v17.i8 = a2[3];
      v72 = (int16x8_t)vrhaddq_u16((uint16x8_t)a9, (uint16x8_t)a11);
      a11 = (int16x8_t)vrhaddq_u16((uint16x8_t)a10, (uint16x8_t)a15);
      a10 = (int16x8_t)vrhaddq_u16(a13, a16);
      a9 = (int16x8_t)vrhaddq_u16(a14, (uint16x8_t)v17);
      if (a5)
      {
        a13.i64[0] = *a6;
        a14.i64[0] = a6[4];
        a15.i64[0] = a6[8];
        a16.i64[0] = a6[12];
        a6 += 16;
        v72 = vaddq_s16(v72, (int16x8_t)a13);
        a11 = vaddq_s16(a11, (int16x8_t)a14);
        a10 = vaddq_s16(a10, (int16x8_t)a15);
        a9 = vaddq_s16(a9, (int16x8_t)a16);
      }
      *a3 = vqmovun_s16(v72).u32[0];
      *(_DWORD *)((char *)a3 + a4) = vqmovun_s16(a11).u32[0];
      *(_DWORD *)((char *)a3 + 2 * a4) = vqmovun_s16(a10).u32[0];
      *(_DWORD *)((char *)a3 + 3 * a4) = vqmovun_s16(a9).u32[0];
      a3 += a4;
      result += 4;
      a2 += 4;
      --a7;
    }
    while (a7);
  }
  return result;
}

double sub_216020958(int16x4_t *a1, int16x4_t *a2, _DWORD *a3, int a4, uint64_t a5, uint64_t *a6, uint64_t a7, int a8, int8x16_t a9, uint16x8_t a10, int8x16_t a11, int8x16_t a12, uint16x8_t a13, uint16x8_t a14, uint16x8_t a15, uint16x8_t a16)
{
  int16x8_t v16;
  int16x8_t v17;
  int16x8_t v18;
  _DWORD *v19;
  int v20;
  _DWORD *v21;
  unsigned int v22;
  uint64_t v23;
  _DWORD *v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int32x4_t v29;
  int32x4_t v30;
  int32x4_t v31;
  char v32;
  int16x4_t v33;
  int16x4_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int32x4_t v38;
  int32x4_t v39;
  int16x8_t v40;
  int16x8_t v41;
  int16x8_t v42;
  char v43;
  int16x8_t v44;
  int16x8_t v45;
  int16x8_t v46;
  int32x4_t v47;
  int32x4_t v48;
  int16x8_t v49;
  int16x8_t v50;
  int16x8_t v51;
  int8x16_t v52;
  _DWORD *v53;
  unsigned int v54;
  uint64_t v55;
  _DWORD *v56;
  int16x8_t v57;
  int16x8_t v58;
  int16x8_t v59;
  int32x4_t v60;
  int32x4_t v61;
  int32x4_t v62;
  char v63;
  int16x4_t v64;
  int16x4_t v65;
  int16x8_t v66;
  int16x8_t v67;
  int16x8_t v68;
  int32x4_t v69;
  int32x4_t v70;
  int16x8_t v71;
  int16x8_t v72;
  int16x8_t v73;
  char v74;
  int16x8_t v75;
  int16x8_t v76;
  int16x8_t v77;
  int32x4_t v78;
  int32x4_t v79;
  int16x8_t v80;
  int16x8_t v81;
  int16x8_t v82;
  int8x16_t v83;
  int16x8_t v84;
  int16x8_t v85;
  int16x8_t v86;

  v19 = *(_DWORD **)(a7 + 48);
  v20 = v19[90];
  if (v20 == 1)
  {
    v53 = &v19[4 * a8];
    v54 = *((unsigned __int8 *)v53 + 24);
    v55 = 3 * *((unsigned __int8 *)v53 + 25);
    v56 = &v19[96 * v54 + v55];
    a9.i32[0] = v56[476];
    a11.i32[0] = v56[477];
    v57 = (int16x8_t)vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE7D0);
    v26 = vzip1q_s16((int16x8_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE7D0), v57);
    v57.i32[0] = v56[3548];
    v58 = (int16x8_t)vqtbl1q_s8((int8x16_t)v57, (int8x16_t)xmmword_2160EE7D0);
    a12.i32[0] = v56[3549];
    v59 = vzip1q_s16(v58, (int16x8_t)vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE7D0));
    v58.i32[0] = v19[88];
    v60 = (int32x4_t)vqtbl1q_s8((int8x16_t)v58, (int8x16_t)xmmword_2160EE800);
    v61 = vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)((v19[3 * v54 + 284] + v19[v55 + 380] + 1) >> 1), (int8x16_t)xmmword_2160EE800), (int32x4_t)vqtbl1q_s8((int8x16_t)((v19[3 * v54 + 285] + v19[v55 + 381] + 1) >> 1), (int8x16_t)xmmword_2160EE800));
    v62 = vdupq_n_s32(~v19[84]);
    v63 = 1;
    v64 = (int16x4_t)vextq_s8((int8x16_t)v26, (int8x16_t)v26, 8uLL).u64[0];
    v65 = (int16x4_t)vextq_s8((int8x16_t)v59, (int8x16_t)v59, 8uLL).u64[0];
    do
    {
      *(int16x4_t *)v16.i8 = *a1;
      *(int16x4_t *)v17.i8 = a1[1];
      v66 = vmulq_s16(v26, v16);
      v67 = (int16x8_t)vmull_s16(0, v64);
      v68 = vuzp2q_s16((int16x8_t)vmull_s16(*a1, *(int16x4_t *)v26.i8), v67);
      v69 = (int32x4_t)vzip1q_s16(v66, v68);
      v70 = (int32x4_t)vzip2q_s16(v66, v68);
      *(int16x4_t *)v66.i8 = *a2;
      *(int16x4_t *)v18.i8 = a2[1];
      v71 = vmulq_s16(v59, v66);
      v72 = (int16x8_t)vmull_s16(0, v65);
      v73 = vuzp2q_s16((int16x8_t)vmull_s16(*a2, *(int16x4_t *)v59.i8), v72);
      v74 = v63;
      v75 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v69, v60), (int32x4_t)vzip1q_s16(v71, v73)), v62), v61)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v70, v60), (int32x4_t)vzip2q_s16(v71, v73)), v62), v61));
      v76 = vmulq_s16(v26, v17);
      v77 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v17.i8, *(int16x4_t *)v26.i8), v67);
      v78 = (int32x4_t)vzip1q_s16(v76, v77);
      v79 = (int32x4_t)vzip2q_s16(v76, v77);
      v80 = vmulq_s16(v59, v18);
      v81 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v18.i8, *(int16x4_t *)v59.i8), v72);
      v18 = vzip1q_s16(v80, v81);
      v82 = (int16x8_t)vaddq_s32(vaddq_s32(v78, v60), (int32x4_t)v18);
      v83 = vqmovun_high_s16(vqmovun_s16(v75), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32((int32x4_t)v82, v62), v61)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v79, v60), (int32x4_t)vzip2q_s16(v80, v81)), v62), v61)));
      v17 = (int16x8_t)vzip1q_s8(v83, (int8x16_t)0);
      v16 = (int16x8_t)vzip2q_s8(v83, (int8x16_t)0);
      if (a5)
      {
        v75.i64[0] = *a6;
        v82.i64[0] = a6[4];
        a6 += 8;
        v17 = vaddq_s16(v75, v17);
        v16 = vaddq_s16(v82, v16);
      }
      v63 = 0;
      *a3 = vqmovun_s16(v17).u32[0];
      *(_DWORD *)((char *)a3 + a4) = vqmovun_s16(v16).u32[0];
      a3 = (_DWORD *)((char *)a3 + 2 * a4);
      a1 += 2;
      a2 += 2;
    }
    while ((v74 & 1) != 0);
  }
  else if (v20 == 2)
  {
    v21 = &v19[4 * a8];
    v22 = *((unsigned __int8 *)v21 + 24);
    v23 = 3 * *((unsigned __int8 *)v21 + 25);
    v24 = &v19[96 * v22 + v23];
    a9.i32[0] = v24[476];
    a11.i32[0] = v24[477];
    v25 = (int16x8_t)vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE7D0);
    v26 = vzip1q_s16((int16x8_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE7D0), v25);
    v25.i32[0] = v24[3548];
    v27 = (int16x8_t)vqtbl1q_s8((int8x16_t)v25, (int8x16_t)xmmword_2160EE7D0);
    a12.i32[0] = v24[3549];
    v28 = vzip1q_s16(v27, (int16x8_t)vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE7D0));
    v27.i32[0] = v19[88];
    v29 = (int32x4_t)vqtbl1q_s8((int8x16_t)v27, (int8x16_t)xmmword_2160EE800);
    v30 = vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)((v19[3 * v22 + 284] + v19[v23 + 380] + 1) >> 1), (int8x16_t)xmmword_2160EE800), (int32x4_t)vqtbl1q_s8((int8x16_t)((v19[3 * v22 + 285] + v19[v23 + 381] + 1) >> 1), (int8x16_t)xmmword_2160EE800));
    v31 = vdupq_n_s32(~v19[84]);
    v32 = 1;
    v33 = (int16x4_t)vextq_s8((int8x16_t)v26, (int8x16_t)v26, 8uLL).u64[0];
    v34 = (int16x4_t)vextq_s8((int8x16_t)v28, (int8x16_t)v28, 8uLL).u64[0];
    do
    {
      *(int16x4_t *)v16.i8 = *a1;
      *(int16x4_t *)v17.i8 = a1[1];
      v35 = vmulq_s16(v26, v16);
      v36 = (int16x8_t)vmull_s16(0, v33);
      v37 = vuzp2q_s16((int16x8_t)vmull_s16(*a1, *(int16x4_t *)v26.i8), v36);
      v38 = (int32x4_t)vzip1q_s16(v35, v37);
      v39 = (int32x4_t)vzip2q_s16(v35, v37);
      *(int16x4_t *)v35.i8 = *a2;
      *(int16x4_t *)v18.i8 = a2[1];
      v40 = vmulq_s16(v28, v35);
      v41 = (int16x8_t)vmull_s16(0, v34);
      v42 = vuzp2q_s16((int16x8_t)vmull_s16(*a2, *(int16x4_t *)v28.i8), v41);
      v43 = v32;
      v44 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v38, v29), (int32x4_t)vzip1q_s16(v40, v42)), v31), v30)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v39, v29), (int32x4_t)vzip2q_s16(v40, v42)), v31), v30));
      v45 = vmulq_s16(v26, v17);
      v46 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v17.i8, *(int16x4_t *)v26.i8), v36);
      v47 = (int32x4_t)vzip1q_s16(v45, v46);
      v48 = (int32x4_t)vzip2q_s16(v45, v46);
      v49 = vmulq_s16(v28, v18);
      v50 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v18.i8, *(int16x4_t *)v28.i8), v41);
      v18 = vzip1q_s16(v49, v50);
      v51 = (int16x8_t)vaddq_s32(vaddq_s32(v47, v29), (int32x4_t)v18);
      v52 = vqmovun_high_s16(vqmovun_s16(v44), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32((int32x4_t)v51, v31), v30)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v48, v29), (int32x4_t)vzip2q_s16(v49, v50)), v31), v30)));
      v17 = (int16x8_t)vzip1q_s8(v52, (int8x16_t)0);
      v16 = (int16x8_t)vzip2q_s8(v52, (int8x16_t)0);
      if (a5)
      {
        v44.i64[0] = *a6;
        v51.i64[0] = a6[4];
        a6 += 8;
        v17 = vaddq_s16(v44, v17);
        v16 = vaddq_s16(v51, v16);
      }
      v32 = 0;
      *a3 = vqmovun_s16(v17).u32[0];
      *(_DWORD *)((char *)a3 + a4) = vqmovun_s16(v16).u32[0];
      a3 = (_DWORD *)((char *)a3 + 2 * a4);
      a1 += 2;
      a2 += 2;
    }
    while ((v43 & 1) != 0);
  }
  else
  {
    *(int16x4_t *)a9.i8 = *a1;
    *(int16x4_t *)a10.i8 = a1[1];
    *(int16x4_t *)a13.i8 = a1[2];
    *(int16x4_t *)a14.i8 = a1[3];
    *(int16x4_t *)a11.i8 = *a2;
    *(int16x4_t *)a15.i8 = a2[1];
    *(int16x4_t *)a16.i8 = a2[2];
    *(int16x4_t *)v16.i8 = a2[3];
    v84 = (int16x8_t)vrhaddq_u16((uint16x8_t)a9, (uint16x8_t)a11);
    v85 = (int16x8_t)vrhaddq_u16(a10, a15);
    v26 = (int16x8_t)vrhaddq_u16(a13, a16);
    v86 = (int16x8_t)vrhaddq_u16(a14, (uint16x8_t)v16);
    if (a5)
    {
      a13.i64[0] = *a6;
      a14.i64[0] = a6[4];
      a15.i64[0] = a6[8];
      a16.i64[0] = a6[12];
      v84 = vaddq_s16(v84, (int16x8_t)a13);
      v85 = vaddq_s16(v85, (int16x8_t)a14);
      v26 = vaddq_s16(v26, (int16x8_t)a15);
      v86 = vaddq_s16(v86, (int16x8_t)a16);
    }
    *a3 = vqmovun_s16(v84).u32[0];
    *(_DWORD *)((char *)a3 + a4) = vqmovun_s16(v85).u32[0];
    *(int8x8_t *)v26.i8 = vqmovun_s16(v26);
    *(_DWORD *)((char *)a3 + 2 * a4) = v26.i32[0];
    *(_DWORD *)((char *)a3 + 3 * a4) = vqmovun_s16(v86).u32[0];
  }
  return *(double *)v26.i64;
}

int8x8_t sub_216020D8C(int16x4_t *a1, int16x4_t *a2, _DWORD *a3, int a4, uint64_t a5, uint64_t *a6, uint64_t a7, int a8, int8x16_t a9, uint16x8_t a10, int8x16_t a11, int8x16_t a12, double a13, double a14, int16x8_t a15)
{
  int16x8_t v15;
  _DWORD *v16;
  int v17;
  _DWORD *v18;
  unsigned int v19;
  uint64_t v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int32x4_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int32x4_t v34;
  int32x4_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int32x4_t v39;
  int32x4_t v40;
  int32x4_t v41;
  int16x8_t v42;
  int16x8_t v43;
  int16x8_t v44;
  int32x4_t v45;
  int32x4_t v46;
  int16x8_t v47;
  int16x8_t v48;
  int8x16_t v49;
  int16x8_t v50;
  int16x8_t v51;
  int8x8_t result;

  v16 = *(_DWORD **)(a7 + 48);
  v17 = v16[90];
  if (v17 == 2 || v17 == 1)
  {
    v18 = &v16[4 * a8];
    v19 = *((unsigned __int8 *)v18 + 24);
    v20 = 3 * *((unsigned __int8 *)v18 + 25);
    v21 = &v16[96 * v19 + v20];
    v22 = (uint64_t)&v16[3 * v19 + 283];
    v23 = (uint64_t)&v16[v20 + 283];
    a9.i32[0] = v21[476];
    a11.i32[0] = v21[477];
    v24 = (int16x8_t)vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE7D0);
    v25 = vzip1q_s16((int16x8_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE7D0), v24);
    v24.i32[0] = v21[3548];
    v26 = (int16x8_t)vqtbl1q_s8((int8x16_t)v24, (int8x16_t)xmmword_2160EE7D0);
    a12.i32[0] = v21[3549];
    v27 = vzip1q_s16(v26, (int16x8_t)vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE7D0));
    v26.i32[0] = v16[88];
    v28 = (int16x8_t)vqtbl1q_s8((int8x16_t)v26, (int8x16_t)xmmword_2160EE800);
    v29 = (int16x8_t)vqtbl1q_s8((int8x16_t)((*(_DWORD *)(v22 + 4) + *(_DWORD *)(v23 + 388) + 1) >> 1), (int8x16_t)xmmword_2160EE800);
    v30 = vzip1q_s32((int32x4_t)v29, (int32x4_t)vqtbl1q_s8((int8x16_t)((*(_DWORD *)(v22 + 8) + *(_DWORD *)(v23 + 392) + 1) >> 1), (int8x16_t)xmmword_2160EE800));
    a12.i64[1] = 0;
    *(int16x4_t *)v29.i8 = *a1;
    *(int16x4_t *)a15.i8 = a1[1];
    v31 = vmulq_s16(v25, v29);
    v32 = (int16x8_t)vmull_s16(0, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v25, (int8x16_t)v25, 8uLL));
    v33 = vuzp2q_s16((int16x8_t)vmull_s16(*a1, *(int16x4_t *)v25.i8), v32);
    v34 = (int32x4_t)vzip1q_s16(v31, v33);
    v35 = (int32x4_t)vzip2q_s16(v31, v33);
    *(int16x4_t *)v31.i8 = *a2;
    *(int16x4_t *)v15.i8 = a2[1];
    v36 = vmulq_s16(v27, v31);
    v37 = (int16x8_t)vmull_s16(0, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v27, (int8x16_t)v27, 8uLL));
    v38 = vuzp2q_s16((int16x8_t)vmull_s16(*a2, *(int16x4_t *)v27.i8), v37);
    v39 = (int32x4_t)vzip1q_s16(v36, v38);
    v40 = vaddq_s32(vaddq_s32(v35, (int32x4_t)v28), (int32x4_t)vzip2q_s16(v36, v38));
    v41 = vdupq_n_s32(~v16[84]);
    v42 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v34, (int32x4_t)v28), v39), v41), v30)), vaddq_s32(vshlq_s32(v40, v41), v30));
    v43 = vmulq_s16(v25, a15);
    v44 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)a15.i8, *(int16x4_t *)v25.i8), v32);
    v45 = (int32x4_t)vzip1q_s16(v43, v44);
    v46 = (int32x4_t)vzip2q_s16(v43, v44);
    v47 = vmulq_s16(v27, v15);
    v48 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v15.i8, *(int16x4_t *)v27.i8), v37);
    v49 = vqmovun_high_s16(vqmovun_s16(v42), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v45, (int32x4_t)v28), (int32x4_t)vzip1q_s16(v47, v48)), v41), v30)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v46, (int32x4_t)v28), (int32x4_t)vzip2q_s16(v47, v48)), v41), v30)));
    v50 = (int16x8_t)vzip1q_s8(v49, (int8x16_t)0);
    v51 = (int16x8_t)vzip2q_s8(v49, (int8x16_t)0);
    if (a5)
    {
      v28.i64[0] = *a6;
      a12.i64[0] = a6[4];
      v50 = vaddq_s16(v28, v50);
      v51 = vaddq_s16((int16x8_t)a12, v51);
    }
  }
  else
  {
    *(int16x4_t *)a9.i8 = *a1;
    *(int16x4_t *)a11.i8 = a1[1];
    *(int16x4_t *)a10.i8 = *a2;
    *(int16x4_t *)a12.i8 = a2[1];
    v50 = (int16x8_t)vrhaddq_u16((uint16x8_t)a9, a10);
    v51 = (int16x8_t)vrhaddq_u16((uint16x8_t)a11, (uint16x8_t)a12);
    if (a5)
    {
      a11.i64[0] = *a6;
      a12.i64[0] = a6[4];
      v50 = vaddq_s16(v50, (int16x8_t)a11);
      v51 = vaddq_s16(v51, (int16x8_t)a12);
    }
  }
  result = vqmovun_s16(v51);
  *a3 = vqmovun_s16(v50).u32[0];
  *(_DWORD *)((char *)a3 + a4) = result.i32[0];
  return result;
}

uint64_t sub_216020F78(uint64_t result, int a2, __n128 *a3, int a4, uint64_t a5, unsigned int a6, int8x16_t a7, double a8, double a9, double a10, int8x16_t a11, int8x16_t a12)
{
  int32x4_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int8x16_t v17;
  int16x8_t v18;
  int32x4_t v19;
  int32x4_t v20;
  int32x4_t v21;
  uint64_t *v22;
  int v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int32x4_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int32x4_t v30;
  int16x8_t v31;
  int8x16_t v32;

  v13 = *(_QWORD *)(a5 + 48);
  v14 = v13 + 16 * a6;
  v15 = *(unsigned __int8 *)(v14 + 31) - 4;
  v16 = v13 + 384 * v15 + 12 * *(unsigned __int8 *)(v14 + v15 + 24);
  a7.i32[0] = *(_DWORD *)(v16 + 364);
  v17 = (int8x16_t)xmmword_2160EE7D0;
  v18 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(a7, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
  v17.i32[0] = *(_DWORD *)(v13 + 340);
  v19 = (int32x4_t)vqtbl1q_s8(v17, (int8x16_t)xmmword_2160EE800);
  a11.i32[0] = *(_DWORD *)(v16 + 1132);
  v20 = vdupq_n_s32(-*(_DWORD *)(v13 + 332));
  v21 = (int32x4_t)vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE800);
  v22 = (uint64_t *)(result + 8);
  v23 = 16;
  do
  {
    a12.i64[0] = *(v22 - 1);
    v12.i64[0] = *v22;
    v24 = (int16x8_t)vzip1q_s8(a12, (int8x16_t)0);
    v25 = vmulq_s16(v24, v18);
    v26 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v24.i8, *(int16x4_t *)v18.i8), (int16x8_t)vmull_high_s16(v24, v18));
    v27 = (int32x4_t)vzip1q_s16(v25, v26);
    v28 = (int16x8_t)vzip1q_s8((int8x16_t)v12, (int8x16_t)0);
    v29 = vmulq_s16(v28, v18);
    v30 = (int32x4_t)vzip2q_s16(v25, v26);
    v31 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v28.i8, *(int16x4_t *)v18.i8), (int16x8_t)vmull_high_s16(v28, v18));
    v12 = vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v29, v31), v19), v20), v21);
    v32 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(v27, v19), v20), v21)), vaddq_s32(vshlq_s32(vaddq_s32(v30, v19), v20), v21))), vqmovn_high_s32(vqmovn_s32(v12), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v29, v31), v19), v20), v21)));
    a12 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vzip1q_s8(v32, (int8x16_t)0)), (int16x8_t)vzip2q_s8(v32, (int8x16_t)0));
    *a3 = (__n128)a12;
    a3 = (__n128 *)((char *)a3 + a4);
    v22 = (uint64_t *)((char *)v22 + a2);
    --v23;
  }
  while (v23);
  return result;
}

uint64_t sub_216021098(uint64_t result, int a2, int8x16_t *a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7, double a8, int8x16_t a9, double a10, int8x16_t a11, double a12, int16x8_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int16x8_t v18;
  int32x4_t v19;
  int32x4_t v20;
  int32x4_t v21;
  uint64_t *v22;
  int16x8_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int32x4_t v26;
  int32x4_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int8x16_t v31;
  int16x8_t v32;

  v13 = 0;
  v14 = *(_QWORD *)(a6 + 48);
  v15 = v14 + 16 * a7;
  v16 = *(unsigned __int8 *)(v15 + 31) - 4;
  v17 = v14 + 384 * v16 + 12 * *(unsigned __int8 *)(v15 + v16 + 24);
  a9.i32[0] = *(_DWORD *)(v17 + 364);
  v18 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
  a9.i32[0] = *(_DWORD *)(v14 + 340);
  v19 = (int32x4_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE800);
  a11.i32[0] = *(_DWORD *)(v17 + 1132);
  v20 = (int32x4_t)vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE800);
  v21 = vdupq_n_s32(-*(_DWORD *)(v14 + 332));
  v22 = (uint64_t *)(result + 8);
  do
  {
    a13.i64[0] = *(v22 - 1);
    v23 = (int16x8_t)vzip1q_s8((int8x16_t)a13, (int8x16_t)0);
    v24 = vmulq_s16(v23, v18);
    v25 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v23.i8, *(int16x4_t *)v18.i8), (int16x8_t)vmull_high_s16(v23, v18));
    v26 = (int32x4_t)vzip1q_s16(v24, v25);
    v27 = (int32x4_t)vzip2q_s16(v24, v25);
    v24.i64[0] = *v22;
    v28 = (int16x8_t)vzip1q_s8((int8x16_t)v24, (int8x16_t)0);
    v29 = vmulq_s16(v28, v18);
    v30 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v28.i8, *(int16x4_t *)v18.i8), (int16x8_t)vmull_high_s16(v28, v18));
    v31 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(v26, v19), v21), v20)), vaddq_s32(vshlq_s32(vaddq_s32(v27, v19), v21), v20))), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v29, v30), v19), v21), v20)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v29, v30), v19), v21), v20)));
    v32 = (int16x8_t)vzip1q_s8(v31, (int8x16_t)0);
    a13 = vaddq_s16(*(int16x8_t *)(a5 + v13 + 16), (int16x8_t)vzip2q_s8(v31, (int8x16_t)0));
    *a3 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(*(int16x8_t *)(a5 + v13), v32)), a13);
    a3 = (int8x16_t *)((char *)a3 + a4);
    v13 += 32;
    v22 = (uint64_t *)((char *)v22 + a2);
  }
  while ((_DWORD)v13 != 512);
  return result;
}

int16x8_t *sub_2160211D0(int16x8_t *result, int8x16_t *a2, int a3, uint64_t a4, int16x8_t *a5, int a6, uint64_t a7, int a8, int8x16_t a9, int8x16_t a10, int8x16_t a11)
{
  _DWORD *v11;
  _DWORD *v12;
  uint64_t v13;
  int32x4_t v14;
  int32x4_t v15;
  int8x16_t v16;
  int32x4_t v17;
  int16x8_t v18;
  int v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int8x16_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;

  v11 = *(_DWORD **)(a7 + 48);
  if (v11[89] == 1 || v11[90] == 1)
  {
    if (a6)
    {
      v12 = &v11[4 * a8];
      v13 = *((unsigned __int8 *)v12 + 31) - 4;
      LODWORD(v12) = *((unsigned __int8 *)v12 + v13 + 24);
      a9.i32[0] = v11[85];
      v14 = (int32x4_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE800);
      a10.i32[0] = v11[96 * v13 + 283 + 3 * v12];
      v15 = (int32x4_t)vqtbl1q_s8(a10, (int8x16_t)xmmword_2160EE800);
      a11.i32[0] = v11[96 * v13 + 91 + 3 * v12];
      v16 = vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE7D0);
      v17 = vdupq_n_s32(-v11[83]);
      v18 = (int16x8_t)vqtbl1q_s8(v16, (int8x16_t)xmmword_2160EE800);
      if ((2 * a6) <= 1)
        v19 = 1;
      else
        v19 = 2 * a6;
      do
      {
        v20 = result[1];
        v21 = vmulq_s16(*result, v18);
        v22 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)result->i8, *(int16x4_t *)v18.i8), (int16x8_t)vmull_high_s16(*result, v18));
        v23 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v21, v22), v14), v17), v15)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v21, v22), v14), v17), v15));
        v24 = vmulq_s16(v20, v18);
        v25 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v20.i8, *(int16x4_t *)v18.i8), (int16x8_t)vmull_high_s16(v20, v18));
        v26 = vqmovun_high_s16(vqmovun_s16(v23), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v24, v25), v14), v17), v15)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v24, v25), v14), v17), v15)));
        v27 = (int16x8_t)vzip1q_s8(v26, (int8x16_t)0);
        v28 = (int16x8_t)vzip2q_s8(v26, (int8x16_t)0);
        if (a4)
        {
          v29 = *a5;
          v30 = a5[1];
          a5 += 2;
          v27 = vaddq_s16(v29, v27);
          v28 = vaddq_s16(v30, v28);
        }
        *a2 = vqmovun_high_s16(vqmovun_s16(v27), v28);
        a2 = (int8x16_t *)((char *)a2 + a3);
        result += 2;
        --v19;
      }
      while (v19);
    }
  }
  else if (a6 >= 1)
  {
    do
    {
      v32 = *result;
      v31 = result[1];
      v34 = result[2];
      v33 = result[3];
      if (a4)
      {
        v35 = *a5;
        v36 = a5[1];
        v37 = a5[2];
        v38 = a5[3];
        a5 += 4;
        v32 = vaddq_s16(v35, v32);
        v31 = vaddq_s16(v36, v31);
        v34 = vaddq_s16(v37, v34);
        v33 = vaddq_s16(v38, v33);
      }
      *a2 = vqmovun_high_s16(vqmovun_s16(v32), v31);
      *(int8x16_t *)((char *)a2 + a3) = vqmovun_high_s16(vqmovun_s16(v34), v33);
      a2 = (int8x16_t *)((char *)a2 + 2 * a3);
      result += 4;
      --a6;
    }
    while (a6);
  }
  return result;
}

uint64_t sub_216021388(uint64_t result, int a2, __n128 *a3, int a4, uint64_t a5, unsigned int a6, int8x16_t a7, double a8, int8x16_t a9, int8x16_t a10, int8x16_t a11, int8x16_t a12)
{
  int32x4_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _DWORD *v16;
  int16x8_t v17;
  int16x8_t v18;
  int32x4_t v19;
  int32x4_t v20;
  int32x4_t v21;
  uint64_t *v22;
  int v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int32x4_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int32x4_t v30;
  int16x8_t v31;
  int8x16_t v32;

  v13 = *(_QWORD *)(a5 + 48);
  v14 = v13 + 16 * a6;
  v15 = *(unsigned __int8 *)(v14 + 31) - 4;
  v16 = (_DWORD *)(v13 + 384 * v15 + 12 * *(unsigned __int8 *)(v14 + v15 + 24));
  a7.i32[0] = v16[92];
  a9.i32[0] = v16[93];
  v17 = (int16x8_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE7D0);
  v18 = vzip1q_s16((int16x8_t)vqtbl1q_s8(a7, (int8x16_t)xmmword_2160EE7D0), v17);
  v17.i32[0] = *(_DWORD *)(v13 + 344);
  v19 = (int32x4_t)vqtbl1q_s8((int8x16_t)v17, (int8x16_t)xmmword_2160EE800);
  a10.i32[0] = v16[284];
  a11.i32[0] = v16[285];
  v20 = vdupq_n_s32(-*(_DWORD *)(v13 + 336));
  v21 = vzip1q_s32((int32x4_t)vqtbl1q_s8(a10, (int8x16_t)xmmword_2160EE800), (int32x4_t)vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE800));
  v22 = (uint64_t *)(result + 8);
  v23 = 8;
  do
  {
    a12.i64[0] = *(v22 - 1);
    v12.i64[0] = *v22;
    v24 = (int16x8_t)vzip1q_s8(a12, (int8x16_t)0);
    v25 = vmulq_s16(v18, v24);
    v26 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v24.i8, *(int16x4_t *)v18.i8), (int16x8_t)vmull_high_s16(v24, v18));
    v27 = (int32x4_t)vzip1q_s16(v25, v26);
    v28 = (int16x8_t)vzip1q_s8((int8x16_t)v12, (int8x16_t)0);
    v29 = vmulq_s16(v18, v28);
    v30 = (int32x4_t)vzip2q_s16(v25, v26);
    v31 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v28.i8, *(int16x4_t *)v18.i8), (int16x8_t)vmull_high_s16(v28, v18));
    v12 = vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v29, v31), v19), v20), v21);
    v32 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(v27, v19), v20), v21)), vaddq_s32(vshlq_s32(vaddq_s32(v30, v19), v20), v21))), vqmovn_high_s32(vqmovn_s32(v12), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v29, v31), v19), v20), v21)));
    a12 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vzip1q_s8(v32, (int8x16_t)0)), (int16x8_t)vzip2q_s8(v32, (int8x16_t)0));
    *a3 = (__n128)a12;
    a3 = (__n128 *)((char *)a3 + a4);
    v22 = (uint64_t *)((char *)v22 + a2);
    --v23;
  }
  while (v23);
  return result;
}

uint64_t sub_2160214BC(uint64_t result, int a2, int8x16_t *a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7, int8x16_t a8, double a9, int8x16_t a10, int8x16_t a11, int8x16_t a12, int16x8_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _DWORD *v17;
  int16x8_t v18;
  int16x8_t v19;
  int32x4_t v20;
  int32x4_t v21;
  int32x4_t v22;
  uint64_t *v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int32x4_t v27;
  int32x4_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int8x16_t v32;
  int16x8_t v33;

  v13 = 0;
  v14 = *(_QWORD *)(a6 + 48);
  v15 = v14 + 16 * a7;
  v16 = *(unsigned __int8 *)(v15 + 31) - 4;
  v17 = (_DWORD *)(v14 + 384 * v16 + 12 * *(unsigned __int8 *)(v15 + v16 + 24));
  a8.i32[0] = v17[92];
  a10.i32[0] = v17[93];
  v18 = (int16x8_t)vqtbl1q_s8(a10, (int8x16_t)xmmword_2160EE7D0);
  v19 = vzip1q_s16((int16x8_t)vqtbl1q_s8(a8, (int8x16_t)xmmword_2160EE7D0), v18);
  v18.i32[0] = *(_DWORD *)(v14 + 344);
  v20 = (int32x4_t)vqtbl1q_s8((int8x16_t)v18, (int8x16_t)xmmword_2160EE800);
  a11.i32[0] = v17[284];
  a12.i32[0] = v17[285];
  v21 = vzip1q_s32((int32x4_t)vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE800), (int32x4_t)vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE800));
  v22 = vdupq_n_s32(-*(_DWORD *)(v14 + 336));
  v23 = (uint64_t *)(result + 8);
  do
  {
    a13.i64[0] = *(v23 - 1);
    v24 = (int16x8_t)vzip1q_s8((int8x16_t)a13, (int8x16_t)0);
    v25 = vmulq_s16(v19, v24);
    v26 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v24.i8, *(int16x4_t *)v19.i8), (int16x8_t)vmull_high_s16(v24, v19));
    v27 = (int32x4_t)vzip1q_s16(v25, v26);
    v28 = (int32x4_t)vzip2q_s16(v25, v26);
    v25.i64[0] = *v23;
    v29 = (int16x8_t)vzip1q_s8((int8x16_t)v25, (int8x16_t)0);
    v30 = vmulq_s16(v19, v29);
    v31 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v29.i8, *(int16x4_t *)v19.i8), (int16x8_t)vmull_high_s16(v29, v19));
    v32 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(v27, v20), v22), v21)), vaddq_s32(vshlq_s32(vaddq_s32(v28, v20), v22), v21))), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v30, v31), v20), v22), v21)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v30, v31), v20), v22), v21)));
    v33 = (int16x8_t)vzip1q_s8(v32, (int8x16_t)0);
    a13 = vaddq_s16(*(int16x8_t *)(a5 + v13 + 16), (int16x8_t)vzip2q_s8(v32, (int8x16_t)0));
    *a3 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(*(int16x8_t *)(a5 + v13), v33)), a13);
    a3 = (int8x16_t *)((char *)a3 + a4);
    v13 += 32;
    v23 = (uint64_t *)((char *)v23 + a2);
  }
  while ((_DWORD)v13 != 256);
  return result;
}

int16x8_t *sub_216021608(int16x8_t *result, int8x16_t *a2, int a3, uint64_t a4, int16x8_t *a5, int a6, uint64_t a7, int a8, int8x16_t a9, double a10, int8x16_t a11, int8x16_t a12, int8x16_t a13)
{
  _DWORD *v13;
  _DWORD *v14;
  uint64_t v15;
  _DWORD *v16;
  int16x8_t v17;
  int16x8_t v18;
  int32x4_t v19;
  int32x4_t v20;
  int32x4_t v21;
  int v22;
  int16x8_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int8x16_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int16x8_t v39;
  int16x8_t v40;
  int16x8_t v41;

  v13 = *(_DWORD **)(a7 + 48);
  if (v13[89] == 1 || v13[90] == 1)
  {
    if (a6)
    {
      v14 = &v13[4 * a8];
      v15 = *((unsigned __int8 *)v14 + 31) - 4;
      v16 = &v13[96 * v15 + 3 * *((unsigned __int8 *)v14 + v15 + 24)];
      a9.i32[0] = v16[92];
      a11.i32[0] = v16[93];
      v17 = (int16x8_t)vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE7D0);
      v18 = vzip1q_s16((int16x8_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE7D0), v17);
      v17.i32[0] = v13[86];
      v19 = (int32x4_t)vqtbl1q_s8((int8x16_t)v17, (int8x16_t)xmmword_2160EE800);
      a12.i32[0] = v16[284];
      a13.i32[0] = v16[285];
      v20 = vzip1q_s32((int32x4_t)vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE800), (int32x4_t)vqtbl1q_s8(a13, (int8x16_t)xmmword_2160EE800));
      v21 = vdupq_n_s32(-v13[84]);
      v22 = 2 * a6;
      if ((2 * a6) <= 1)
        v22 = 1;
      do
      {
        v23 = result[1];
        v24 = vmulq_s16(*result, v18);
        v25 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)result->i8, *(int16x4_t *)v18.i8), (int16x8_t)vmull_high_s16(*result, v18));
        v26 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v24, v25), v19), v21), v20)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v24, v25), v19), v21), v20));
        v27 = vmulq_s16(v23, v18);
        v28 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v23.i8, *(int16x4_t *)v18.i8), (int16x8_t)vmull_high_s16(v23, v18));
        v29 = vqmovun_high_s16(vqmovun_s16(v26), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v27, v28), v19), v21), v20)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v27, v28), v19), v21), v20)));
        v30 = (int16x8_t)vzip1q_s8(v29, (int8x16_t)0);
        v31 = (int16x8_t)vzip2q_s8(v29, (int8x16_t)0);
        if (a4)
        {
          v32 = *a5;
          v33 = a5[1];
          a5 += 2;
          v30 = vaddq_s16(v32, v30);
          v31 = vaddq_s16(v33, v31);
        }
        *a2 = vqmovun_high_s16(vqmovun_s16(v30), v31);
        a2 = (int8x16_t *)((char *)a2 + a3);
        result += 2;
        --v22;
      }
      while (v22);
    }
  }
  else if (a6 >= 1)
  {
    do
    {
      v35 = *result;
      v34 = result[1];
      v37 = result[2];
      v36 = result[3];
      if (a4)
      {
        v38 = *a5;
        v39 = a5[1];
        v40 = a5[2];
        v41 = a5[3];
        a5 += 4;
        v35 = vaddq_s16(v38, v35);
        v34 = vaddq_s16(v39, v34);
        v37 = vaddq_s16(v40, v37);
        v36 = vaddq_s16(v41, v36);
      }
      *a2 = vqmovun_high_s16(vqmovun_s16(v35), v34);
      *(int8x16_t *)((char *)a2 + a3) = vqmovun_high_s16(vqmovun_s16(v37), v36);
      a2 = (int8x16_t *)((char *)a2 + 2 * a3);
      result += 4;
      --a6;
    }
    while (a6);
  }
  return result;
}

int16x8_t *sub_2160217C4(int16x8_t *result, int8x8_t *a2, int a3, uint64_t a4, int16x8_t *a5, int a6, uint64_t a7, int a8, int8x16_t a9, int8x16_t a10, double a11, int8x16_t a12)
{
  _DWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  int32x4_t v15;
  int32x4_t v16;
  int16x8_t v17;
  int32x4_t v18;
  int v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int8x16_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;

  v12 = *(_DWORD **)(a7 + 48);
  if (v12[89] == 1 || v12[90] == 1)
  {
    if (a6)
    {
      v13 = &v12[4 * a8];
      v14 = *((unsigned __int8 *)v13 + 31) - 4;
      LODWORD(v13) = *((unsigned __int8 *)v13 + v14 + 24);
      a9.i32[0] = v12[85];
      v15 = (int32x4_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE800);
      a10.i32[0] = v12[96 * v14 + 283 + 3 * v13];
      v16 = (int32x4_t)vqtbl1q_s8(a10, (int8x16_t)xmmword_2160EE800);
      a12.i32[0] = v12[96 * v14 + 91 + 3 * v13];
      v17 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
      v18 = vdupq_n_s32(-v12[83]);
      if ((2 * a6) <= 1)
        v19 = 1;
      else
        v19 = 2 * a6;
      do
      {
        v20 = result[1];
        v21 = vmulq_s16(*result, v17);
        v22 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)result->i8, *(int16x4_t *)v17.i8), (int16x8_t)vmull_high_s16(*result, v17));
        v23 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v21, v22), v15), v18), v16)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v21, v22), v15), v18), v16));
        v24 = vmulq_s16(v20, v17);
        v25 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v20.i8, *(int16x4_t *)v17.i8), (int16x8_t)vmull_high_s16(v20, v17));
        v26 = vqmovun_high_s16(vqmovun_s16(v23), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v24, v25), v15), v18), v16)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v24, v25), v15), v18), v16)));
        v27 = (int16x8_t)vzip1q_s8(v26, (int8x16_t)0);
        v28 = (int16x8_t)vzip2q_s8(v26, (int8x16_t)0);
        if (a4)
        {
          v29 = *a5;
          v30 = a5[2];
          a5 += 4;
          v27 = vaddq_s16(v29, v27);
          v28 = vaddq_s16(v30, v28);
        }
        *a2 = vqmovun_s16(v27);
        *(int8x8_t *)((char *)a2 + a3) = vqmovun_s16(v28);
        a2 = (int8x8_t *)((char *)a2 + 2 * a3);
        result += 2;
        --v19;
      }
      while (v19);
    }
  }
  else if (a6 >= 1)
  {
    do
    {
      v32 = *result;
      v31 = result[1];
      v34 = result[2];
      v33 = result[3];
      if (a4)
      {
        v35 = *a5;
        v36 = a5[2];
        v37 = a5[4];
        v38 = a5[6];
        a5 += 8;
        v32 = vaddq_s16(v35, v32);
        v31 = vaddq_s16(v36, v31);
        v34 = vaddq_s16(v37, v34);
        v33 = vaddq_s16(v38, v33);
      }
      *a2 = vqmovun_s16(v32);
      *(int8x8_t *)((char *)a2 + a3) = vqmovun_s16(v31);
      *(int8x8_t *)((char *)a2 + 2 * a3) = vqmovun_s16(v34);
      *(int8x8_t *)((char *)a2 + 3 * a3) = vqmovun_s16(v33);
      a2 = (int8x8_t *)((char *)a2 + 4 * a3);
      result += 4;
      --a6;
    }
    while (a6);
  }
  return result;
}

int16x8_t *sub_2160219A4(int16x8_t *result, int8x8_t *a2, int a3, uint64_t a4, int16x8_t *a5, int a6, uint64_t a7, int a8, int8x16_t a9, double a10, int8x16_t a11, int8x16_t a12, int8x16_t a13)
{
  _DWORD *v13;
  _DWORD *v14;
  uint64_t v15;
  _DWORD *v16;
  int16x8_t v17;
  int16x8_t v18;
  int32x4_t v19;
  int32x4_t v20;
  int v21;
  int32x4_t v22;
  int16x8_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int8x16_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int16x8_t v39;
  int16x8_t v40;
  int16x8_t v41;

  v13 = *(_DWORD **)(a7 + 48);
  if (v13[89] == 1 || v13[90] == 1)
  {
    if (a6)
    {
      v14 = &v13[4 * a8];
      v15 = *((unsigned __int8 *)v14 + 31) - 4;
      v16 = &v13[96 * v15 + 3 * *((unsigned __int8 *)v14 + v15 + 24)];
      a9.i32[0] = v16[92];
      a11.i32[0] = v16[93];
      v17 = (int16x8_t)vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE7D0);
      v18 = vzip1q_s16((int16x8_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE7D0), v17);
      v17.i32[0] = v13[86];
      v19 = (int32x4_t)vqtbl1q_s8((int8x16_t)v17, (int8x16_t)xmmword_2160EE800);
      a12.i32[0] = v16[284];
      a13.i32[0] = v16[285];
      v20 = vzip1q_s32((int32x4_t)vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE800), (int32x4_t)vqtbl1q_s8(a13, (int8x16_t)xmmword_2160EE800));
      v21 = 2 * a6;
      v22 = vdupq_n_s32(-v13[84]);
      if ((2 * a6) <= 1)
        v21 = 1;
      do
      {
        v23 = result[1];
        v24 = vmulq_s16(*result, v18);
        v25 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)result->i8, *(int16x4_t *)v18.i8), (int16x8_t)vmull_high_s16(*result, v18));
        v26 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v24, v25), v19), v22), v20)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v24, v25), v19), v22), v20));
        v27 = vmulq_s16(v23, v18);
        v28 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v23.i8, *(int16x4_t *)v18.i8), (int16x8_t)vmull_high_s16(v23, v18));
        v29 = vqmovun_high_s16(vqmovun_s16(v26), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v27, v28), v19), v22), v20)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v27, v28), v19), v22), v20)));
        v30 = (int16x8_t)vzip1q_s8(v29, (int8x16_t)0);
        v31 = (int16x8_t)vzip2q_s8(v29, (int8x16_t)0);
        if (a4)
        {
          v32 = *a5;
          v33 = a5[2];
          a5 += 4;
          v30 = vaddq_s16(v32, v30);
          v31 = vaddq_s16(v33, v31);
        }
        *a2 = vqmovun_s16(v30);
        *(int8x8_t *)((char *)a2 + a3) = vqmovun_s16(v31);
        a2 = (int8x8_t *)((char *)a2 + 2 * a3);
        result += 2;
        --v21;
      }
      while (v21);
    }
  }
  else if (a6 >= 1)
  {
    do
    {
      v35 = *result;
      v34 = result[1];
      v37 = result[2];
      v36 = result[3];
      if (a4)
      {
        v38 = *a5;
        v39 = a5[2];
        v40 = a5[4];
        v41 = a5[6];
        a5 += 8;
        v35 = vaddq_s16(v38, v35);
        v34 = vaddq_s16(v39, v34);
        v37 = vaddq_s16(v40, v37);
        v36 = vaddq_s16(v41, v36);
      }
      *a2 = vqmovun_s16(v35);
      *(int8x8_t *)((char *)a2 + a3) = vqmovun_s16(v34);
      *(int8x8_t *)((char *)a2 + 2 * a3) = vqmovun_s16(v37);
      *(int8x8_t *)((char *)a2 + 3 * a3) = vqmovun_s16(v36);
      a2 = (int8x8_t *)((char *)a2 + 4 * a3);
      result += 4;
      --a6;
    }
    while (a6);
  }
  return result;
}

int8x8_t sub_216021B88(int16x8_t *a1, int8x8_t *a2, int a3, uint64_t a4, int16x8_t *a5, uint64_t a6, int a7, int8x16_t a8, double a9, int8x16_t a10, int8x16_t a11, int8x16_t a12)
{
  _DWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  _DWORD *v15;
  int16x8_t v16;
  int16x8_t v17;
  int32x4_t v18;
  int32x4_t v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int32x4_t v23;
  int32x4_t v24;
  int32x4_t v25;
  int32x4_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int8x16_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int8x8_t result;

  v12 = *(_DWORD **)(a6 + 48);
  if (v12[89] != 1 && v12[90] != 1)
  {
    v31 = *a1;
    v32 = a1[1];
    if (!a4)
      goto LABEL_5;
    goto LABEL_4;
  }
  v13 = &v12[4 * a7];
  v14 = *((unsigned __int8 *)v13 + 31) - 4;
  v15 = &v12[96 * v14 + 3 * *((unsigned __int8 *)v13 + v14 + 24)];
  a8.i32[0] = v15[92];
  a10.i32[0] = v15[93];
  v16 = (int16x8_t)vqtbl1q_s8(a10, (int8x16_t)xmmword_2160EE7D0);
  v17 = vzip1q_s16((int16x8_t)vqtbl1q_s8(a8, (int8x16_t)xmmword_2160EE7D0), v16);
  v16.i32[0] = v12[86];
  v18 = (int32x4_t)vqtbl1q_s8((int8x16_t)v16, (int8x16_t)xmmword_2160EE800);
  a11.i32[0] = v15[284];
  a12.i32[0] = v15[285];
  v19 = vzip1q_s32((int32x4_t)vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE800), (int32x4_t)vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE800));
  v20 = a1[1];
  v21 = vmulq_s16(*a1, v17);
  v22 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)a1->i8, *(int16x4_t *)v17.i8), (int16x8_t)vmull_high_s16(*a1, v17));
  v23 = (int32x4_t)vzip1q_s16(v21, v22);
  v24 = (int32x4_t)vzip2q_s16(v21, v22);
  v25 = vaddq_s32(v23, v18);
  v26 = vdupq_n_s32(-v12[84]);
  v27 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(v25, v26), v19)), vaddq_s32(vshlq_s32(vaddq_s32(v24, v18), v26), v19));
  v28 = vmulq_s16(v20, v17);
  v29 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v20.i8, *(int16x4_t *)v17.i8), (int16x8_t)vmull_high_s16(v20, v17));
  v30 = vqmovun_high_s16(vqmovun_s16(v27), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v28, v29), v18), v26), v19)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v28, v29), v18), v26), v19)));
  v31 = (int16x8_t)vzip1q_s8(v30, (int8x16_t)0);
  v32 = (int16x8_t)vzip2q_s8(v30, (int8x16_t)0);
  if (a4)
  {
LABEL_4:
    v31 = vaddq_s16(*a5, v31);
    v32 = vaddq_s16(a5[2], v32);
  }
LABEL_5:
  result = vqmovun_s16(v31);
  *a2 = result;
  *(int8x8_t *)((char *)a2 + a3) = vqmovun_s16(v32);
  return result;
}

int16x4_t *sub_216021CD0(int16x4_t *result, _DWORD *a2, int a3, uint64_t a4, uint64_t *a5, int a6, uint64_t a7, int a8, int16x8_t a9, int16x8_t a10, int16x8_t a11, int16x8_t a12, int16x8_t a13, int16x8_t a14, int16x8_t a15, int16x8_t a16)
{
  _DWORD *v16;
  _DWORD *v17;
  uint64_t v18;
  int32x4_t v19;
  int32x4_t v20;
  int16x8_t v21;
  int32x4_t v22;
  int v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int8x16_t v31;

  v16 = *(_DWORD **)(a7 + 48);
  if (v16[89] == 1 || v16[90] == 1)
  {
    if (a6)
    {
      v17 = &v16[4 * a8];
      v18 = *((unsigned __int8 *)v17 + 31) - 4;
      LODWORD(v17) = *((unsigned __int8 *)v17 + v18 + 24);
      a9.i32[0] = v16[85];
      v19 = (int32x4_t)vqtbl1q_s8((int8x16_t)a9, (int8x16_t)xmmword_2160EE800);
      a10.i32[0] = v16[96 * v18 + 283 + 3 * v17];
      v20 = (int32x4_t)vqtbl1q_s8((int8x16_t)a10, (int8x16_t)xmmword_2160EE800);
      a12.i32[0] = v16[96 * v18 + 91 + 3 * v17];
      v21 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8((int8x16_t)a12, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
      v22 = vdupq_n_s32(-v16[83]);
      if ((2 * a6) <= 1)
        v23 = 1;
      else
        v23 = 2 * a6;
      v24 = (int16x8_t)vmull_s16(0, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v21, (int8x16_t)v21, 8uLL));
      do
      {
        *(int16x4_t *)a15.i8 = *result;
        *(int16x4_t *)a16.i8 = result[1];
        v25 = vmulq_s16(a15, v21);
        v26 = vuzp2q_s16((int16x8_t)vmull_s16(*result, *(int16x4_t *)v21.i8), v24);
        v27 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v25, v26), v19), v22), v20)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v25, v26), v19), v22), v20));
        v28 = vmulq_s16(a16, v21);
        v29 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)a16.i8, *(int16x4_t *)v21.i8), v24);
        v30 = vzip1q_s16(v28, v29);
        v31 = vqmovun_high_s16(vqmovun_s16(v27), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)v30, v19), v22), v20)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v28, v29), v19), v22), v20)));
        a16 = (int16x8_t)vzip1q_s8(v31, (int8x16_t)0);
        a15 = (int16x8_t)vzip2q_s8(v31, (int8x16_t)0);
        if (a4)
        {
          v27.i64[0] = *a5;
          v30.i64[0] = a5[4];
          a5 += 8;
          a16 = vaddq_s16(v27, a16);
          a15 = vaddq_s16(v30, a15);
        }
        *a2 = vqmovun_s16(a16).u32[0];
        *(_DWORD *)((char *)a2 + a3) = vqmovun_s16(a15).u32[0];
        a2 = (_DWORD *)((char *)a2 + 2 * a3);
        result += 2;
        --v23;
      }
      while (v23);
    }
  }
  else if (a6 >= 1)
  {
    do
    {
      *(int16x4_t *)a10.i8 = *result;
      *(int16x4_t *)a11.i8 = result[1];
      *(int16x4_t *)a12.i8 = result[2];
      *(int16x4_t *)a9.i8 = result[3];
      if (a4)
      {
        a13.i64[0] = *a5;
        a14.i64[0] = a5[4];
        a15.i64[0] = a5[8];
        a16.i64[0] = a5[12];
        a5 += 16;
        a10 = vaddq_s16(a13, a10);
        a11 = vaddq_s16(a14, a11);
        a12 = vaddq_s16(a15, a12);
        a9 = vaddq_s16(a16, a9);
      }
      *a2 = vqmovun_s16(a10).u32[0];
      *(_DWORD *)((char *)a2 + a3) = vqmovun_s16(a11).u32[0];
      *(_DWORD *)((char *)a2 + 2 * a3) = vqmovun_s16(a12).u32[0];
      *(_DWORD *)((char *)a2 + 3 * a3) = vqmovun_s16(a9).u32[0];
      a2 += a3;
      result += 4;
      --a6;
    }
    while (a6);
  }
  return result;
}

double sub_216021EB0(int16x4_t *a1, _DWORD *a2, int a3, uint64_t a4, uint64_t *a5, uint64_t a6, int a7, int16x8_t a8, int16x8_t a9, int16x8_t a10, int16x8_t a11, int8x16_t a12, int16x8_t a13, int16x8_t a14, int16x8_t a15)
{
  _DWORD *v15;
  _DWORD *v16;
  uint64_t v17;
  _DWORD *v18;
  int16x8_t v19;
  int32x4_t v20;
  int32x4_t v21;
  int32x4_t v22;
  char v23;
  int16x8_t v24;
  char v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int8x16_t v32;

  v15 = *(_DWORD **)(a6 + 48);
  if (v15[89] == 1 || v15[90] == 1)
  {
    v16 = &v15[4 * a7];
    v17 = *((unsigned __int8 *)v16 + 31) - 4;
    v18 = &v15[96 * v17 + 3 * *((unsigned __int8 *)v16 + v17 + 24)];
    a8.i32[0] = v18[92];
    a10.i32[0] = v18[93];
    v19 = (int16x8_t)vqtbl1q_s8((int8x16_t)a10, (int8x16_t)xmmword_2160EE7D0);
    a8 = vzip1q_s16((int16x8_t)vqtbl1q_s8((int8x16_t)a8, (int8x16_t)xmmword_2160EE7D0), v19);
    v19.i32[0] = v15[86];
    v20 = (int32x4_t)vqtbl1q_s8((int8x16_t)v19, (int8x16_t)xmmword_2160EE800);
    a11.i32[0] = v18[284];
    a12.i32[0] = v18[285];
    v21 = vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)a11, (int8x16_t)xmmword_2160EE800), (int32x4_t)vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE800));
    v22 = vdupq_n_s32(-v15[84]);
    v23 = 1;
    v24 = (int16x8_t)vmull_s16(0, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)a8, (int8x16_t)a8, 8uLL));
    do
    {
      v25 = v23;
      *(int16x4_t *)a14.i8 = *a1;
      *(int16x4_t *)a15.i8 = a1[1];
      v26 = vmulq_s16(a8, a14);
      v27 = vuzp2q_s16((int16x8_t)vmull_s16(*a1, *(int16x4_t *)a8.i8), v24);
      v28 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v26, v27), v20), v22), v21)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v26, v27), v20), v22), v21));
      v29 = vmulq_s16(a8, a15);
      v30 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)a15.i8, *(int16x4_t *)a8.i8), v24);
      v31 = vzip1q_s16(v29, v30);
      v32 = vqmovun_high_s16(vqmovun_s16(v28), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)v31, v20), v22), v21)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v29, v30), v20), v22), v21)));
      a15 = (int16x8_t)vzip1q_s8(v32, (int8x16_t)0);
      a14 = (int16x8_t)vzip2q_s8(v32, (int8x16_t)0);
      if (a4)
      {
        v28.i64[0] = *a5;
        v31.i64[0] = a5[4];
        a5 += 8;
        a15 = vaddq_s16(v28, a15);
        a14 = vaddq_s16(v31, a14);
      }
      v23 = 0;
      *a2 = vqmovun_s16(a15).u32[0];
      *(_DWORD *)((char *)a2 + a3) = vqmovun_s16(a14).u32[0];
      a2 = (_DWORD *)((char *)a2 + 2 * a3);
      a1 += 2;
    }
    while ((v25 & 1) != 0);
  }
  else
  {
    *(int16x4_t *)a10.i8 = *a1;
    *(int16x4_t *)a11.i8 = a1[1];
    *(int16x4_t *)a8.i8 = a1[2];
    *(int16x4_t *)a9.i8 = a1[3];
    if (a4)
    {
      a12.i64[0] = *a5;
      a13.i64[0] = a5[4];
      a14.i64[0] = a5[8];
      a15.i64[0] = a5[12];
      a10 = vaddq_s16((int16x8_t)a12, a10);
      a11 = vaddq_s16(a13, a11);
      a8 = vaddq_s16(a14, a8);
      a9 = vaddq_s16(a15, a9);
    }
    *a2 = vqmovun_s16(a10).u32[0];
    *(_DWORD *)((char *)a2 + a3) = vqmovun_s16(a11).u32[0];
    *(int8x8_t *)a8.i8 = vqmovun_s16(a8);
    *(_DWORD *)((char *)a2 + 2 * a3) = a8.i32[0];
    *(_DWORD *)((char *)a2 + 3 * a3) = vqmovun_s16(a9).u32[0];
  }
  return *(double *)a8.i64;
}

int8x8_t sub_21602206C(int16x4_t *a1, _DWORD *a2, int a3, uint64_t a4, unint64_t *a5, uint64_t a6, int a7, int16x8_t a8, int16x8_t a9, int8x16_t a10, int8x16_t a11, int8x16_t a12, int16x8_t a13)
{
  _DWORD *v13;
  _DWORD *v14;
  uint64_t v15;
  _DWORD *v16;
  int16x8_t v17;
  int16x8_t v18;
  int32x4_t v19;
  int32x4_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int32x4_t v24;
  int32x4_t v25;
  int32x4_t v26;
  int32x4_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int8x8_t result;

  v13 = *(_DWORD **)(a6 + 48);
  if (v13[89] != 1 && v13[90] != 1)
  {
    *(int16x4_t *)a8.i8 = *a1;
    *(int16x4_t *)a9.i8 = a1[1];
    if (!a4)
      goto LABEL_5;
    goto LABEL_4;
  }
  v14 = &v13[4 * a7];
  v15 = *((unsigned __int8 *)v14 + 31) - 4;
  v16 = &v13[96 * v15 + 3 * *((unsigned __int8 *)v14 + v15 + 24)];
  a8.i32[0] = v16[92];
  a10.i32[0] = v16[93];
  v17 = (int16x8_t)vqtbl1q_s8(a10, (int8x16_t)xmmword_2160EE7D0);
  v18 = vzip1q_s16((int16x8_t)vqtbl1q_s8((int8x16_t)a8, (int8x16_t)xmmword_2160EE7D0), v17);
  v17.i32[0] = v13[86];
  v19 = (int32x4_t)vqtbl1q_s8((int8x16_t)v17, (int8x16_t)xmmword_2160EE800);
  a11.i32[0] = v16[284];
  a12.i32[0] = v16[285];
  v20 = vzip1q_s32((int32x4_t)vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE800), (int32x4_t)vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE800));
  a11.i8[8] = 0;
  a11.i8[9] = 0;
  a11.i8[10] = 0;
  a11.i8[11] = 0;
  a11.i8[12] = 0;
  a11.i8[13] = 0;
  a11.i8[14] = 0;
  a11.i8[15] = 0;
  *(int16x4_t *)a12.i8 = *a1;
  *(int16x4_t *)a13.i8 = a1[1];
  v21 = vmulq_s16(v18, (int16x8_t)a12);
  v22 = (int16x8_t)vmull_s16(0, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v18, (int8x16_t)v18, 8uLL));
  v23 = vuzp2q_s16((int16x8_t)vmull_s16(*a1, *(int16x4_t *)v18.i8), v22);
  v24 = (int32x4_t)vzip1q_s16(v21, v23);
  v25 = (int32x4_t)vzip2q_s16(v21, v23);
  v26 = vaddq_s32(v24, v19);
  v27 = vdupq_n_s32(-v13[84]);
  v28 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(v26, v27), v20)), vaddq_s32(vshlq_s32(vaddq_s32(v25, v19), v27), v20));
  v29 = vmulq_s16(v18, a13);
  v30 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)a13.i8, *(int16x4_t *)v18.i8), v22);
  a10 = vqmovun_high_s16(vqmovun_s16(v28), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v29, v30), v19), v27), v20)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v29, v30), v19), v27), v20)));
  a8 = (int16x8_t)vzip1q_s8(a10, (int8x16_t)0);
  a9 = (int16x8_t)vzip2q_s8(a10, (int8x16_t)0);
  if (a4)
  {
LABEL_4:
    a10.i64[0] = *a5;
    a11.i64[0] = a5[4];
    a8 = vaddq_s16((int16x8_t)a10, a8);
    a9 = vaddq_s16((int16x8_t)a11, a9);
  }
LABEL_5:
  result = vqmovun_s16(a8);
  *a2 = result.i32[0];
  *(_DWORD *)((char *)a2 + a3) = vqmovun_s16(a9).u32[0];
  return result;
}

uint64_t sub_2160221B4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  unsigned __int16 *v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  __int16 *v10;
  _DWORD *v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  __int16 *v18;
  __int16 v19;
  __int16 v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v31 = result;
  v30 = *(_QWORD *)(result + 48);
  v1 = *(unsigned __int8 *)(v30 + 272);
  if (*(_BYTE *)(v30 + 272))
  {
    v2 = 0;
    v28 = 16 * *(_DWORD *)result;
    v24 = result + 224;
    v27 = 16 * *(_DWORD *)(result + 4);
    v29 = *(_QWORD *)(*(_QWORD *)(result + 176) + 112);
    do
    {
      v3 = v30 + 16 + 16 * v2;
      v4 = *(unsigned __int8 *)(v3 + 15);
      v5 = *(unsigned __int16 *)(v30 + 26);
      if (v5 >= 0x103)
        v5 = 259;
      v6 = &word_254E10E30[40 * v5];
      v7 = v6[v2 + 24];
      v8 = v7 >> 8;
      v9 = *((unsigned __int8 *)v6 + v2 + 32);
      v10 = (__int16 *)(v29 + 16 * v2);
      if (v4 == 6)
      {
        v26 = v7 >> 8;
        v25 = v10[1] & 3 | (4 * (*v10 & 3u));
        v11 = *(_DWORD **)(*(_QWORD *)(v31 + 232) + 8 * *(unsigned __int8 *)(v3 + 9));
        v12 = v11[41];
        v13 = v28 + byte_2160EE5C0[v9] + (v10[2] >> 2);
        v14 = v27 + byte_2160EE5D0[v9] + (v10[3] >> 2);
        if (v13 <= -18)
          v13 = -18;
        if (v14 <= -18)
          v14 = -18;
        v15 = v11[33];
        if (v13 >= v12 + 1)
          v13 = v12 + 1;
        if (v14 >= v15 + 1)
          v16 = v15 + 1;
        else
          v16 = v14;
        result = (v13 + v16 * v11[42]);
        if (v7 == 4)
        {
          if (v26 == 8)
            __asm { BR              X8 }
          __asm { BR              X8 }
        }
        if (v7 == 8)
        {
          v1 = *(unsigned __int8 *)(v30 + 272);
          if (v26 == 4)
            __asm { BR              X10 }
          if (v26 == 8)
            __asm { BR              X10 }
          if (v26 == 16)
            __asm { BR              X10 }
        }
        else
        {
          v1 = *(unsigned __int8 *)(v30 + 272);
          if (v7 == 16)
          {
            if (v26 == 16)
              __asm { BR              X10 }
            __asm { BR              X10 }
          }
        }
      }
      else
      {
        v17 = (v4 - 4);
        v18 = &v10[2 * v17];
        v19 = *v18;
        v20 = v18[1];
        v21 = *(_QWORD *)(*(_QWORD *)(v24 + 8 * v17) + 8 * *(unsigned __int8 *)(v3 + v17 + 8));
        v22 = v20 & 3 | (4 * (v19 & 3u));
        result = *(unsigned int *)(v21 + 164);
        if ((_DWORD)v1 == 1)
          __asm { BR              X10 }
        v23 = v6[v2 + 24];
        if (v23 == 4)
        {
          if (v8 == 8)
            __asm { BR              X8 }
          __asm { BR              X8 }
        }
        if (v23 == 8)
        {
          if (v8 == 4)
            __asm { BR              X9 }
          if (v8 == 8)
            __asm { BR              X9 }
          if (v8 == 16)
            __asm { BR              X9 }
        }
        else if (v23 == 16)
        {
          __asm { BR              X10 }
        }
      }
      ++v2;
    }
    while (v2 != v1);
  }
  return result;
}

uint64_t sub_21602BD08(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned __int16 *v7;
  unsigned int v8;
  unsigned __int16 *v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  unsigned __int16 *v13;
  unsigned __int16 v14;
  uint64_t v15;
  unsigned int v16;
  int v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v22 = *(_QWORD *)(result + 48);
  v1 = *(unsigned __int8 *)(v22 + 272);
  if (*(_BYTE *)(v22 + 272))
  {
    v2 = result;
    v3 = 0;
    v18 = result + 224;
    v21 = *(_QWORD *)(*(_QWORD *)(result + 176) + 112);
    v20 = result;
    do
    {
      v4 = v22 + 16 + 16 * v3;
      v5 = *(unsigned __int8 *)(v4 + 15);
      v6 = *(unsigned __int16 *)(v22 + 26);
      if (v6 >= 0x103)
        v6 = 259;
      v7 = &word_254E10E30[40 * v6];
      v8 = v7[v3 + 24];
      v9 = (unsigned __int16 *)(v21 + 16 * v3);
      if (v5 == 6)
      {
        v19 = v8 >> 8;
        result = (__int16)v9[2];
        v23 = v9[1] & 3 | (4 * (*v9 & 3u));
        if (v8 == 4)
        {
          if (v19 == 8)
            __asm { BR              X8 }
          __asm { BR              X8 }
        }
        if (v8 == 8)
        {
          v1 = *(unsigned __int8 *)(v22 + 272);
          if (v19 == 4)
            __asm { BR              X10 }
          if (v19 == 8)
            __asm { BR              X10 }
          if (v19 == 16)
            __asm { BR              X10 }
        }
        else
        {
          v1 = *(unsigned __int8 *)(v22 + 272);
          if (v8 == 16)
          {
            if (v19 == 16)
              __asm { BR              X10 }
            __asm { BR              X10 }
          }
        }
        v2 = v20;
      }
      else
      {
        v10 = (v5 - 4);
        v11 = *(_QWORD *)(*(_QWORD *)(v18 + 8 * v10) + 8 * *(unsigned __int8 *)(v4 + v10 + 8));
        if (*(_BYTE *)(v2 + 29))
        {
          if (*(_BYTE *)(v2 + 30))
          {
            v12 = 2 * (*(_BYTE *)(v11 + 37) == 0);
          }
          else if (*(_BYTE *)(v11 + 37))
          {
            v12 = -2;
          }
          else
          {
            v12 = 0;
          }
        }
        else
        {
          v12 = 0;
        }
        v13 = &v9[2 * v10];
        v14 = v13[1];
        v15 = v14 & 3 | (4 * (*v13 & 3u));
        result = (__int16)(v12 + v14);
        if ((_DWORD)v1 == 1)
          __asm { BR              X9 }
        v16 = v8 >> 8;
        v17 = v7[v3 + 24];
        if (v17 == 4)
        {
          if (v16 == 8)
            __asm { BR              X8 }
          __asm { BR              X8 }
        }
        if (v17 == 8)
        {
          v2 = v20;
          if (v16 == 4)
            __asm { BR              X9 }
          if (v16 == 8)
            __asm { BR              X9 }
          if (v16 == 16)
            __asm { BR              X9 }
        }
        else
        {
          v2 = v20;
          if (v17 == 16)
          {
            if (v16 == 16)
              __asm { BR              X9 }
            __asm { BR              X9 }
          }
        }
      }
      ++v3;
    }
    while (v3 != v1);
  }
  return result;
}

uint64_t sub_2160379A8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  __int128 v6;
  __int16 *v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  __int16 v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  __int16 *v17;
  __int16 v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  unsigned int v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;

  v3 = a1;
  if (*(_BYTE *)(a1 + 817))
  {
    if (*(_BYTE *)(a1 + 832))
      result = 0;
    else
      result = a2 + 624;
  }
  else
  {
    result = 0;
  }
  v35 = *(unsigned __int8 *)(v3 + 1104);
  if (*(_BYTE *)(v3 + 1104))
  {
    v5 = 0;
    v36 = *(_QWORD **)(a2 + 64);
    v31 = v3 + 848;
    v33 = 16 * *(_DWORD *)(v3 + 828);
    v30 = v33 | 0xF;
    v6 = 0uLL;
    v34 = result;
    v32 = v3;
    do
    {
      v7 = (__int16 *)(v31 + 16 * v5);
      v8 = *((unsigned __int8 *)v7 + 15);
      v9 = *(unsigned __int16 *)(v3 + 858);
      if (v9 >= 0x103)
        v9 = 259;
      v37 = word_254E10E30[40 * v9 + 24 + v5];
      v10 = v37 >> 8;
      v38 = v5;
      v39 = v2;
      v40 = v6;
      if (v8 == 6)
      {
        v11 = *(_QWORD *)(*v36 + 8 * *((unsigned __int8 *)v7 + 8));
        if (!v11)
          return result;
        v12 = *v7;
        v13 = v7[1];
        if ((v30 + (v13 >> 2)) / 16 < 0)
          v14 = -1;
        else
          v14 = (v30 + (v13 >> 2)) / 16;
        if (*(_DWORD *)(v11 + 12) <= v14)
        {
          sub_2160EC880(*(pthread_mutex_t **)(v11 + 16));
          while (*(_DWORD *)(v11 + 12) <= v14)
            sub_2160EC918(*(pthread_cond_t **)(v11 + 24), *(pthread_mutex_t **)(v11 + 16));
          sub_2160EC88C(*(pthread_mutex_t **)(v11 + 16));
          result = v34;
          v2 = v39;
          v6 = v40;
        }
        v24 = *(_QWORD *)(v36[1] + 8 * *((unsigned __int8 *)v7 + 9));
        if (!v24)
          return result;
        v29 = v37 >> 8;
        v25 = v7[3];
        if ((v30 + (v25 >> 2)) / 16 < 0)
          v26 = -1;
        else
          v26 = (v30 + (v25 >> 2)) / 16;
        if (*(_DWORD *)(v24 + 12) <= v26)
        {
          sub_2160EC880(*(pthread_mutex_t **)(v24 + 16));
          while (*(_DWORD *)(v24 + 12) <= v26)
            sub_2160EC918(*(pthread_cond_t **)(v24 + 24), *(pthread_mutex_t **)(v24 + 16));
          sub_2160EC88C(*(pthread_mutex_t **)(v24 + 16));
          result = v34;
          v2 = v39;
          v6 = v40;
        }
        v28 = v13 & 3 | (4 * (v12 & 3u));
        if (v37 == 4)
        {
          if (v10 == 8)
            __asm { BR              X8 }
          __asm { BR              X8 }
        }
        if (v37 == 8)
        {
          if (v29 == 4)
            __asm { BR              X8 }
          if (v29 == 8)
            __asm { BR              X8 }
          if (v29 == 16)
            __asm { BR              X8 }
        }
        else if (v37 == 16)
        {
          if (v29 == 16)
            __asm { BR              X9 }
          __asm { BR              X9 }
        }
        v3 = v32;
      }
      else
      {
        v15 = (v8 - 4);
        v16 = *(_QWORD *)(v36[v15] + 8 * *((unsigned __int8 *)v7 + v15 + 8));
        if (!v16)
          return result;
        v17 = &v7[2 * v15];
        v18 = *v17;
        v19 = v17[1];
        v20 = v33 + (v19 >> 2);
        v21 = v20 + 15;
        if (v20 < -15)
          v21 = v20 + 30;
        v22 = v21 >> 4;
        if (v22 < 0)
          v23 = -1;
        else
          v23 = v22;
        if (*(_DWORD *)(v16 + 12) <= v23)
        {
          sub_2160EC880(*(pthread_mutex_t **)(v16 + 16));
          while (*(_DWORD *)(v16 + 12) <= v23)
            sub_2160EC918(*(pthread_cond_t **)(v16 + 24), *(pthread_mutex_t **)(v16 + 16));
          sub_2160EC88C(*(pthread_mutex_t **)(v16 + 16));
          result = v34;
          v2 = v39;
          v6 = v40;
        }
        v27 = v19 & 3 | (4 * (v18 & 3u));
        if ((_DWORD)v35 == 1)
          __asm { BR              X12 }
        if (v37 == 4)
        {
          if (v10 == 8)
            __asm { BR              X8 }
          __asm { BR              X8 }
        }
        v5 = v38;
        if (v37 == 8)
        {
          v3 = v32;
          if (v10 == 4)
            __asm { BR              X8 }
          if (v10 == 8)
            __asm { BR              X8 }
          if (v10 == 16)
            __asm { BR              X8 }
        }
        else
        {
          v3 = v32;
          if (v37 == 16)
          {
            if (v10 == 16)
              __asm { BR              X8 }
            __asm { BR              X8 }
          }
        }
      }
      ++v5;
    }
    while (v5 != v35);
  }
  return result;
}

uint64_t sub_2160409DC(uint64_t result, uint64_t a2)
{
  __int128 v2;
  uint64_t v3;
  __int128 v4;
  __int16 *v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  __int16 v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  __int16 *v15;
  __int16 v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  _QWORD *v32;
  unsigned int v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;

  v31 = *(unsigned __int8 *)(result + 1104);
  if (*(_BYTE *)(result + 1104))
  {
    v3 = 0;
    v29 = result + 848;
    v30 = 16 * *(_DWORD *)(result + 828);
    v32 = *(_QWORD **)(a2 + 64);
    v28 = v30 | 0xF;
    v4 = 0uLL;
    v27 = result;
    do
    {
      v5 = (__int16 *)(v29 + 16 * v3);
      v6 = *((unsigned __int8 *)v5 + 15);
      v7 = *(unsigned __int16 *)(result + 858);
      if (v7 >= 0x103)
        v7 = 259;
      v8 = word_254E10E30[40 * v7 + 24 + v3];
      v33 = v8 >> 8;
      v35 = v2;
      v36 = v4;
      v34 = v3;
      if (v6 == 6)
      {
        v9 = *(_QWORD *)(*v32 + 8 * *((unsigned __int8 *)v5 + 8));
        if (!v9)
          return result;
        v10 = *v5;
        v11 = v5[1];
        if ((v28 + (v11 >> 2)) / 16 < 0)
          v12 = -1;
        else
          v12 = (v28 + (v11 >> 2)) / 16;
        if (*(_DWORD *)(v9 + 12) <= v12)
        {
          sub_2160EC880(*(pthread_mutex_t **)(v9 + 16));
          while (*(_DWORD *)(v9 + 12) <= v12)
            sub_2160EC918(*(pthread_cond_t **)(v9 + 24), *(pthread_mutex_t **)(v9 + 16));
          sub_2160EC88C(*(pthread_mutex_t **)(v9 + 16));
          v2 = v35;
          v4 = v36;
        }
        v22 = v5[3];
        v23 = *(_QWORD *)(v32[1] + 8 * *((unsigned __int8 *)v5 + 9));
        if ((v28 + (v22 >> 2)) / 16 < 0)
          v24 = -1;
        else
          v24 = (v28 + (v22 >> 2)) / 16;
        if (*(_DWORD *)(v23 + 12) <= v24)
        {
          sub_2160EC880(*(pthread_mutex_t **)(v23 + 16));
          while (*(_DWORD *)(v23 + 12) <= v24)
            sub_2160EC918(*(pthread_cond_t **)(v23 + 24), *(pthread_mutex_t **)(v23 + 16));
          sub_2160EC88C(*(pthread_mutex_t **)(v23 + 16));
          v2 = v35;
          v4 = v36;
        }
        v26 = v11 & 3 | (4 * (v10 & 3u));
        if (v8 == 4)
        {
          if (v33 == 8)
            __asm { BR              X8 }
          __asm { BR              X8 }
        }
        if (v8 == 8)
        {
          if (v33 == 4)
            __asm { BR              X12 }
          if (v33 == 8)
            __asm { BR              X12 }
          if (v33 == 16)
            __asm { BR              X12 }
        }
        else if (v8 == 16)
        {
          if (v33 == 16)
            __asm { BR              X12 }
          __asm { BR              X12 }
        }
      }
      else
      {
        v13 = (v6 - 4);
        v14 = *(_QWORD *)(v32[v13] + 8 * *((unsigned __int8 *)v5 + v13 + 8));
        if (!v14)
          return result;
        v15 = &v5[2 * v13];
        v16 = *v15;
        v17 = v15[1];
        v18 = v30 + (v17 >> 2);
        v19 = v18 + 15;
        if (v18 < -15)
          v19 = v18 + 30;
        v20 = v19 >> 4;
        if (v20 < 0)
          v21 = -1;
        else
          v21 = v20;
        if (*(_DWORD *)(v14 + 12) <= v21)
        {
          sub_2160EC880(*(pthread_mutex_t **)(v14 + 16));
          while (*(_DWORD *)(v14 + 12) <= v21)
            sub_2160EC918(*(pthread_cond_t **)(v14 + 24), *(pthread_mutex_t **)(v14 + 16));
          sub_2160EC88C(*(pthread_mutex_t **)(v14 + 16));
          v2 = v35;
          v4 = v36;
        }
        v25 = v17 & 3 | (4 * (v16 & 3u));
        if ((_DWORD)v31 == 1)
          __asm { BR              X12 }
        if (v8 == 4)
        {
          if (v33 == 8)
            __asm { BR              X9 }
          __asm { BR              X9 }
        }
        if (v8 == 8)
        {
          if (v33 == 4)
            __asm { BR              X11 }
          if (v33 == 8)
            __asm { BR              X11 }
          if (v33 == 16)
            __asm { BR              X11 }
        }
        else if (v8 == 16)
        {
          if (v33 == 16)
            __asm { BR              X11 }
          __asm { BR              X11 }
        }
      }
      v3 = v34 + 1;
      result = v27;
    }
    while (v34 + 1 != v31);
  }
  return result;
}

void sub_216041E74(double a1, double a2, double a3, double a4, double a5, int16x8_t a6, uint64_t a7, uint64_t a8, int8x8x2_t *a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int8x16_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a66;
  uint64_t a73;
  int v73;
  int v74;
  int8x8_t *v75;
  int16x8_t *v76;
  int8x8_t *v77;
  int16x8_t *v78;
  uint64_t v79;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  int8x16_t v85;
  int16x8_t v86;
  uint16x8_t v87;
  int v88;
  char *v89;
  int8x8x2_t v90;
  uint64_t v91;
  char v93;
  unint64_t *v94;
  char v95;
  int16x8_t v96;
  int16x8_t v97;
  int16x8_t v98;
  int16x8_t v99;
  int16x8_t v100;
  int16x8_t v101;
  int16x8_t v102;
  char *v107;
  unsigned int k;
  int8x8_t *v109;
  unsigned int i;
  uint8x8_t *v113;
  int8x16_t v115;
  uint8x8_t v116;
  uint8x16_t v117;
  unsigned int j;
  uint64_t v123;
  uint64_t v124;
  int v125;
  int v126;
  int8x16_t v127;
  int16x8_t v128;
  int8x16_t v129;
  int16x8_t v130;
  int8x16_t v131;
  int16x8_t v132;
  int8x16_t v133;
  int16x8_t v134;
  int8x16_t v137;
  int16x8_t v138;
  int16x8_t v139;
  int16x8_t v142;
  int8x16_t v143;
  int16x8_t v144;
  int16x8_t v145;
  int16x8_t v146;
  int16x8_t v147;
  int8x8x2_t v148;
  int8x8x2_t v149;

  v88 = v73 + v74 - 8;
  v89 = (char *)&STACK[0x240];
  do
  {
    v90 = *a9;
    a9 = (int8x8x2_t *)((char *)a9 + v84);
    v91 = v85.i64[0];
    vst2_s8(v89, v90);
    v89 += 16;
  }
  while (!__CFADD__(v88++, 1));
  v93 = 1;
  v94 = &STACK[0x240];
  do
  {
    v95 = v93;
    v97 = *(int16x8_t *)v94;
    v96 = *((int16x8_t *)v94 + 1);
    v99 = *((int16x8_t *)v94 + 2);
    v98 = *((int16x8_t *)v94 + 3);
    if (a73)
    {
      v100 = *v76;
      a6 = v76[2];
      v101 = v76[4];
      v102 = v76[6];
      v76 += 8;
      v97 = vaddq_s16(v100, v97);
      v96 = vaddq_s16(a6, v96);
      v99 = vaddq_s16(v101, v99);
      v98 = vaddq_s16(v102, v98);
    }
    v93 = 0;
    *v75 = vqmovun_s16(v97);
    *(int8x8_t *)((char *)v75 + v84) = vqmovun_s16(v96);
    *(int8x8_t *)((char *)v75 + v79) = vqmovun_s16(v99);
    *(int8x8_t *)((char *)v75 + a58) = vqmovun_s16(v98);
    v75 = (int8x8_t *)((char *)v75 + a44);
    v94 += 8;
  }
  while ((v95 & 1) != 0);
  if (a13 == 64)
  {
    __asm { PRFM            #0, [X24] }
    v107 = (char *)&STACK[0x640];
    for (i = 5; i > 2; --i)
    {
      v113 = _X24;
      _X24 = (uint8x8_t *)((char *)_X24 + v84);
      __asm { PRFM            #0, [X24] }
      *(uint8x8_t *)v98.i8 = *v113;
      v115 = vextq_s8((int8x16_t)v98, v85, 2uLL);
      v115.i16[3] = v113[1].i16[0];
      v116 = vrhadd_u8(*v113, *(uint8x8_t *)v115.i8);
      v115.i64[0] = v85.i64[0];
      vst2_s8(v107, *(int8x8x2_t *)((char *)&v115 - 8));
      v107 += 16;
    }
    *(uint8x8_t *)v98.i8 = *_X24;
    v117 = (uint8x16_t)vextq_s8((int8x16_t)v98, v85, 2uLL);
    v117.i16[3] = _X24[1].i16[0];
    v98.i64[0] = vrhaddq_u8((uint8x16_t)v98, v117).u64[0];
  }
  else if (a13 == 4)
  {
    _X8 = (char *)_X24 + v84;
    __asm { PRFM            #0, [X8] }
    *(uint8x8_t *)v98.i8 = *_X24;
    v107 = (char *)&STACK[0x640];
    for (j = 5; j > 2; --j)
    {
      _X10 = (char *)_X24 + a41;
      _X24 = (uint8x8_t *)((char *)_X24 + v84);
      __asm { PRFM            #0, [X10] }
      *(uint8x8_t *)v99.i8 = *_X24;
      v149.val[0] = (int8x8_t)vrhadd_u8(*(uint8x8_t *)v98.i8, *_X24);
      v149.val[1] = (int8x8_t)v85.i64[0];
      vst2_s8(v107, v149);
      v107 += 16;
      v98 = v99;
    }
    *(uint8x8_t *)v98.i8 = *(uint8x8_t *)((char *)_X24 + v84);
    v98.i64[0] = vrhaddq_u8((uint8x16_t)v99, (uint8x16_t)v98).u64[0];
  }
  else
  {
    if (a13)
    {
      v124 = 0;
      v125 = a66 * v82;
      v126 = a66 * v82 - (8 * v82 + 8 * a66) + 64;
      v127 = v85;
      v127.i32[0] = v126 | (v126 << 16);
      v128 = (int16x8_t)vqtbl1q_s8(v127, a47);
      v129 = v85;
      v129.i32[0] = (8 * v82 - v125) | ((8 * v82 - v125) << 16);
      v130 = (int16x8_t)vqtbl1q_s8(v129, a47);
      v131 = v85;
      v131.i32[0] = (8 * a66 - v125) | ((8 * a66 - v125) << 16);
      v132 = (int16x8_t)vqtbl1q_s8(v131, a47);
      v133 = v85;
      v133.i32[0] = 65537 * a66 * v82;
      v134 = (int16x8_t)vqtbl1q_s8(v133, a47);
      *(int16x8_t *)(v83 - 224) = v128;
      *(int16x8_t *)(v83 - 208) = v130;
      *(int16x8_t *)(v83 - 192) = v132;
      *(int16x8_t *)(v83 - 176) = v134;
      _X9 = (char *)_X24 + v84;
      __asm { PRFM            #0, [X9] }
      *(uint8x8_t *)a6.i8 = *_X24;
      v137 = vqtbl1q_s8((int8x16_t)a6, (int8x16_t)xmmword_2160EE810);
      v137.i16[3] = _X24[1].i16[0];
      v138 = (int16x8_t)vzip1q_s8(v137, v85);
      v139 = (int16x8_t)vzip1q_s8((int8x16_t)a6, v85);
      do
      {
        _X9 = (char *)_X24 + a41;
        _X24 = (uint8x8_t *)((char *)_X24 + v84);
        __asm { PRFM            #0, [X9] }
        v142 = vmlaq_s16(vmulq_s16(v130, v138), v128, v139);
        *(uint8x8_t *)v138.i8 = *_X24;
        v139 = (int16x8_t)vzip1q_s8((int8x16_t)v138, v85);
        v143 = vqtbl1q_s8((int8x16_t)v138, (int8x16_t)xmmword_2160EE810);
        v143.i16[3] = _X24[1].i16[0];
        v138 = (int16x8_t)vzip1q_s8(v143, v85);
        *(uint16x8_t *)((char *)&STACK[0x640] + v124) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v142, v132, v139), v134, v138), v86), v87);
        v124 += 16;
      }
      while ((_DWORD)v124 != 64);
LABEL_23:
      v144 = *(int16x8_t *)&STACK[0x640];
      v145 = *(int16x8_t *)&STACK[0x650];
      v146 = *(int16x8_t *)&STACK[0x660];
      v147 = *(int16x8_t *)&STACK[0x670];
      if (v81)
      {
        v144 = vaddq_s16(*v78, v144);
        v145 = vaddq_s16(v78[2], v145);
        v146 = vaddq_s16(v78[4], v146);
        v147 = vaddq_s16(v78[6], v147);
      }
      *v77 = vqmovun_s16(v144);
      *(int8x8_t *)((char *)v77 + v84) = vqmovun_s16(v145);
      *(int8x8_t *)((char *)v77 + v79) = vqmovun_s16(v146);
      *(int8x8_t *)((char *)v77 + a58) = vqmovun_s16(v147);
      JUMPOUT(0x21604A7E4);
    }
    __asm { PRFM            #0, [X24] }
    v107 = (char *)&STACK[0x640];
    for (k = 5; k > 2; --k)
    {
      v109 = (int8x8_t *)_X24;
      _X24 = (uint8x8_t *)((char *)_X24 + v84);
      __asm { PRFM            #0, [X24] }
      v148.val[0] = *v109;
      v148.val[1] = (int8x8_t)v85.i64[0];
      vst2_s8(v107, v148);
      v107 += 16;
    }
    *(uint8x8_t *)v98.i8 = *_X24;
  }
  v123 = v85.i64[0];
  vst2_s8(v107, (int8x8x2_t)v98);
  goto LABEL_23;
}

void sub_216041EB0(uint64_t a1@<X5>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int8x16_t v58;
  int16x8_t v59;
  int16x8_t v60;
  uint64_t v61;
  int8x16_t *v62;
  int8x16_t *v63;
  int16x8_t v64;
  int16x8_t v65;
  int16x8_t v66;
  int16x8_t v67;
  int16x8_t v68;
  uint64_t v69;
  int8x16_t *v70;
  int16x8_t v71;
  int16x8_t v72;
  uint64_t v73;
  int8x16_t *v74;
  int8x16_t *v75;
  int16x8_t v76;
  int16x8_t v77;
  int16x8_t v78;
  int16x8_t v79;
  int16x8_t v80;
  int8x16_t *v81;
  int16x8_t v82;
  int16x8_t v83;

  v61 = 0;
  v62 = (int8x16_t *)(v56 + a18 + v57);
  v63 = (int8x16_t *)((char *)v62 + v57 + v57);
  v64 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v63 + v57), v58);
  v65 = (int16x8_t)vzip1q_s8(*v63, v58);
  v66 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v62 + v57), v58);
  v67 = (int16x8_t)vzip1q_s8(*v62, v58);
  v68 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v56 + a18), v58);
  v69 = a55 + a2;
  v70 = (int8x16_t *)(a38 + a10 + v69);
  do
  {
    v71 = v67;
    v67 = v66;
    v66 = v65;
    v65 = v64;
    v64 = (int16x8_t)vzip1q_s8(*v70, v58);
    v72 = vsubq_s16(vshlq_n_s16(vaddq_s16(v67, v66), 2uLL), vaddq_s16(v71, v65));
    *(uint16x8_t *)(a1 + v61) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v68, v72), vshlq_n_s16(v72, 2uLL)), vaddq_s16(v64, v59)), v60))), (uint16x8_t)v67);
    v61 += 32;
    v70 = (int8x16_t *)((char *)v70 + v57);
    v68 = v71;
  }
  while ((_DWORD)v61 != 512);
  v73 = 0;
  v74 = (int8x16_t *)(v56 + a18 + 8 + v57);
  v75 = (int8x16_t *)((char *)v74 + v57 + v57);
  v76 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v75 + v57), v58);
  v77 = (int16x8_t)vzip1q_s8(*v75, v58);
  v78 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v74 + v57), v58);
  v79 = (int16x8_t)vzip1q_s8(*v74, v58);
  v80 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v56 + a18 + 8), v58);
  v81 = (int8x16_t *)(a38 + a6 + v69);
  do
  {
    v82 = v79;
    v79 = v78;
    v78 = v77;
    v77 = v76;
    v76 = (int16x8_t)vzip1q_s8(*v81, v58);
    v83 = vsubq_s16(vshlq_n_s16(vaddq_s16(v79, v78), 2uLL), vaddq_s16(v82, v77));
    *(uint16x8_t *)(v55 + v73) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v80, v83), vshlq_n_s16(v83, 2uLL)), vaddq_s16(v76, v59)), v60))), (uint16x8_t)v79);
    v73 += 32;
    v81 = (int8x16_t *)((char *)v81 + v57);
    v80 = v82;
  }
  while ((_DWORD)v73 != 512);
  __asm { BR              X8 }
}

void sub_216042024(uint64_t a1@<X5>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int8x16_t v58;
  int16x8_t v59;
  int16x8_t v60;
  uint64_t v61;
  int8x16_t *v62;
  int8x16_t *v63;
  int16x8_t v64;
  int16x8_t v65;
  int16x8_t v66;
  int16x8_t v67;
  int16x8_t v68;
  uint64_t v69;
  int8x16_t *v70;
  int16x8_t v71;
  char *v72;
  int16x8_t v73;
  uint64_t v74;
  uint64_t v75;
  int8x16_t *v76;
  int8x16_t *v77;
  int16x8_t v78;
  int16x8_t v79;
  int16x8_t v80;
  int16x8_t v81;
  int16x8_t v82;
  int8x16_t *v83;
  int16x8_t v84;
  char *v85;
  int16x8_t v86;
  uint64_t v87;

  v61 = 0;
  v62 = (int8x16_t *)(v56 + a18 + v57);
  v63 = (int8x16_t *)((char *)v62 + v57 + v57);
  v64 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v63 + v57), v58);
  v65 = (int16x8_t)vzip1q_s8(*v63, v58);
  v66 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v62 + v57), v58);
  v67 = (int16x8_t)vzip1q_s8(*v62, v58);
  v68 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v56 + a18), v58);
  v69 = a55 + a2;
  v70 = (int8x16_t *)(a38 + a10 + v69);
  do
  {
    v71 = v67;
    v67 = v66;
    v66 = v65;
    v65 = v64;
    v72 = (char *)(a1 + v61);
    v64 = (int16x8_t)vzip1q_s8(*v70, v58);
    v73 = vsubq_s16(vshlq_n_s16(vaddq_s16(v67, v66), 2uLL), vaddq_s16(v71, v65));
    *(int8x8_t *)v73.i8 = vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v68, v73), vshlq_n_s16(v73, 2uLL)), vaddq_s16(v64, v59)), v60));
    v74 = v58.i64[0];
    vst2_s8(v72, (int8x8x2_t)v73);
    v61 += 32;
    v70 = (int8x16_t *)((char *)v70 + v57);
    v68 = v71;
  }
  while ((_DWORD)v61 != 512);
  v75 = 0;
  v76 = (int8x16_t *)(v56 + a18 + 8 + v57);
  v77 = (int8x16_t *)((char *)v76 + v57 + v57);
  v78 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v77 + v57), v58);
  v79 = (int16x8_t)vzip1q_s8(*v77, v58);
  v80 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v76 + v57), v58);
  v81 = (int16x8_t)vzip1q_s8(*v76, v58);
  v82 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v56 + a18 + 8), v58);
  v83 = (int8x16_t *)(a38 + a6 + v69);
  do
  {
    v84 = v81;
    v81 = v80;
    v80 = v79;
    v79 = v78;
    v85 = (char *)(v55 + v75);
    v78 = (int16x8_t)vzip1q_s8(*v83, v58);
    v86 = vsubq_s16(vshlq_n_s16(vaddq_s16(v81, v80), 2uLL), vaddq_s16(v84, v79));
    *(int8x8_t *)v86.i8 = vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v82, v86), vshlq_n_s16(v86, 2uLL)), vaddq_s16(v78, v59)), v60));
    v87 = v58.i64[0];
    vst2_s8(v85, (int8x8x2_t)v86);
    v75 += 32;
    v83 = (int8x16_t *)((char *)v83 + v57);
    v82 = v84;
  }
  while ((_DWORD)v75 != 512);
  __asm { BR              X8 }
}

void sub_216042198(uint64_t a1@<X5>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int8x16_t v58;
  int16x8_t v59;
  int16x8_t v60;
  uint64_t v61;
  int8x16_t *v62;
  int8x16_t *v63;
  int16x8_t v64;
  int16x8_t v65;
  int16x8_t v66;
  int16x8_t v67;
  int16x8_t v68;
  uint64_t v69;
  int8x16_t *v70;
  int16x8_t v71;
  int16x8_t v72;
  uint64_t v73;
  int8x16_t *v74;
  int8x16_t *v75;
  int16x8_t v76;
  int16x8_t v77;
  int16x8_t v78;
  int16x8_t v79;
  int16x8_t v80;
  int8x16_t *v81;
  int16x8_t v82;
  int16x8_t v83;

  v61 = 0;
  v62 = (int8x16_t *)(v56 + a18 + v57);
  v63 = (int8x16_t *)((char *)v62 + v57 + v57);
  v64 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v63 + v57), v58);
  v65 = (int16x8_t)vzip1q_s8(*v63, v58);
  v66 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v62 + v57), v58);
  v67 = (int16x8_t)vzip1q_s8(*v62, v58);
  v68 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v56 + a18), v58);
  v69 = a55 + a2;
  v70 = (int8x16_t *)(a38 + a10 + v69);
  do
  {
    v71 = v67;
    v67 = v66;
    v66 = v65;
    v65 = v64;
    v64 = (int16x8_t)vzip1q_s8(*v70, v58);
    v72 = vsubq_s16(vshlq_n_s16(vaddq_s16(v67, v66), 2uLL), vaddq_s16(v71, v65));
    *(uint16x8_t *)(a1 + v61) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v68, v72), vshlq_n_s16(v72, 2uLL)), vaddq_s16(v64, v59)), v60))), (uint16x8_t)v66);
    v61 += 32;
    v70 = (int8x16_t *)((char *)v70 + v57);
    v68 = v71;
  }
  while ((_DWORD)v61 != 512);
  v73 = 0;
  v74 = (int8x16_t *)(v56 + a18 + 8 + v57);
  v75 = (int8x16_t *)((char *)v74 + v57 + v57);
  v76 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v75 + v57), v58);
  v77 = (int16x8_t)vzip1q_s8(*v75, v58);
  v78 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v74 + v57), v58);
  v79 = (int16x8_t)vzip1q_s8(*v74, v58);
  v80 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v56 + a18 + 8), v58);
  v81 = (int8x16_t *)(a38 + a6 + v69);
  do
  {
    v82 = v79;
    v79 = v78;
    v78 = v77;
    v77 = v76;
    v76 = (int16x8_t)vzip1q_s8(*v81, v58);
    v83 = vsubq_s16(vshlq_n_s16(vaddq_s16(v79, v78), 2uLL), vaddq_s16(v82, v77));
    *(uint16x8_t *)(v55 + v73) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v80, v83), vshlq_n_s16(v83, 2uLL)), vaddq_s16(v76, v59)), v60))), (uint16x8_t)v78);
    v73 += 32;
    v81 = (int8x16_t *)((char *)v81 + v57);
    v80 = v82;
  }
  while ((_DWORD)v73 != 512);
  __asm { BR              X8 }
}

void sub_21604230C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int8x16_t v55;
  int16x8_t v56;
  int16x8_t v57;
  uint64_t v58;
  int8x16_t *v59;
  int8x16_t v60;
  int16x8_t v61;
  int16x8_t v62;
  uint64_t v63;
  int8x16_t *v64;
  int8x16_t v65;
  int16x8_t v66;
  int16x8_t v67;

  v58 = 0;
  v59 = (int8x16_t *)(v53 - 2);
  do
  {
    v60 = *v59;
    v59 = (int8x16_t *)((char *)v59 + v54);
    v61 = (int16x8_t)vzip1q_s8(vextq_s8(v60, v60, 2uLL), v55);
    v62 = vsubq_s16(vshlq_n_s16(vaddq_s16(v61, (int16x8_t)vzip1q_s8(vextq_s8(v60, v60, 3uLL), v55)), 2uLL), vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v60, v60, 1uLL), v55), (int16x8_t)vzip1q_s8(vextq_s8(v60, v60, 4uLL), v55)));
    *(uint16x8_t *)(a6 + v58) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vshlq_n_s16(v62, 2uLL), vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v60, v55), (int16x8_t)vzip1q_s8(vextq_s8(v60, v60, 5uLL), v55)), v62)), v56), v57))), (uint16x8_t)v61);
    v58 += 32;
  }
  while ((_DWORD)v58 != 512);
  v63 = 0;
  v64 = (int8x16_t *)(v53 + 6);
  do
  {
    v65 = *v64;
    v64 = (int8x16_t *)((char *)v64 + v54);
    v66 = (int16x8_t)vzip1q_s8(vextq_s8(v65, v65, 2uLL), v55);
    v67 = vsubq_s16(vshlq_n_s16(vaddq_s16(v66, (int16x8_t)vzip1q_s8(vextq_s8(v65, v65, 3uLL), v55)), 2uLL), vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v65, v65, 1uLL), v55), (int16x8_t)vzip1q_s8(vextq_s8(v65, v65, 4uLL), v55)));
    *(uint16x8_t *)(v52 + v63) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vshlq_n_s16(v67, 2uLL), vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v65, v55), (int16x8_t)vzip1q_s8(vextq_s8(v65, v65, 5uLL), v55)), v67)), v56), v57))), (uint16x8_t)v66);
    v63 += 32;
  }
  while ((_DWORD)v63 != 512);
  __asm { BR              X8 }
}

void sub_216042414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  uint64_t v52;

  sub_2160811CC((char *)&STACK[0x240], v52, STACK[0x208], 16, 2, 2u);
  __asm { BR              X8 }
}

void sub_2160427E8(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int8x16_t *a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,int a30,int8x16_t *a31,uint64_t a32,int a33,int a34,uint64_t a35,int a36,int a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44,uint64_t a45,int8x16_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int8x16_t *a51,uint64_t a52,int16x8_t *a53,int a54,int a55,int a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  uint64_t a67;
  uint64_t a71;
  uint64_t a72;
  uint64_t v72;
  int8x16_t *v73;
  int16x8_t *v74;
  int8x16_t *v75;
  int8x16_t *v77;
  uint64_t v78;
  uint64_t v79;
  int8x16_t v80;
  int v81;
  int16x8_t v83;
  uint16x8_t v84;
  int8x16_t v86;
  uint64_t v87;
  char *v88;
  int8x16_t *v89;
  uint64_t v91;
  int16x8_t v92;
  int16x8_t v93;
  int16x8_t v94;
  int16x8_t v95;
  int16x8_t v96;
  int16x8_t v97;
  int16x8_t v98;
  int16x8_t v99;
  uint64_t v100;
  uint64_t v101;
  unsigned int v106;
  int8x16_t *v107;
  int8x16_t *v108;
  int8x8x2_t v110;
  uint64_t v111;
  int8x8x2_t v112;
  int8x16_t v113;
  char *v114;
  uint64_t v115;
  int8x16_t *v117;
  unsigned int v118;
  int8x16_t v121;
  uint8x16_t v122;
  int8x16_t v123;
  int8x16_t v124;
  uint8x16_t v125;
  uint8x16_t v128;
  unsigned int v129;
  int8x16_t v132;
  uint64_t v133;
  int8x16_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  int v138;
  int8x16_t v139;
  int16x8_t v140;
  int8x16_t v141;
  int8x16_t v142;
  int16x8_t v143;
  int16x8_t v144;
  int8x16_t v145;
  int16x8_t v146;
  int8x16_t v149;
  int16x8_t v150;
  int16x8_t v151;
  int8x16_t *v152;
  int16x8_t v155;
  int8x16_t v156;
  uint64_t v157;
  int8x16_t v160;
  int16x8_t v161;
  int16x8_t v164;
  int8x16_t v165;
  uint64_t v166;
  unsigned int v168;
  int8x16_t *v169;
  int8x16_t *v170;
  int8x8x2_t v172;
  uint64_t v173;
  int8x8x2_t v174;
  int8x16_t v175;
  char *i8;
  uint64_t v177;
  int8x16_t *v179;
  unsigned int v180;
  int8x16_t v183;
  uint8x16_t v184;
  int8x16_t v185;
  int8x16_t v186;
  uint8x16_t v187;
  uint8x16_t v190;
  unsigned int v191;
  int8x16_t v194;
  uint64_t v195;
  int8x16_t v196;
  char *v197;
  uint64_t v198;
  int16x8_t *v199;
  uint64_t v200;
  int v201;
  int8x16_t v202;
  int16x8_t v203;
  int8x16_t v204;
  int8x16_t v205;
  int16x8_t v206;
  int16x8_t v207;
  int8x16_t v208;
  int16x8_t v209;
  int8x16_t v212;
  int16x8_t v213;
  int16x8_t v214;
  int8x16_t *v215;
  int16x8_t v218;
  int8x16_t v219;
  uint64_t v220;
  int8x16_t v223;
  int16x8_t v224;
  int16x8_t v225;
  int16x8_t v228;
  int8x16_t v229;
  uint64_t v230;
  int16x8_t v231;
  int16x8_t v232;
  int16x8_t v233;
  int16x8_t v234;
  int16x8_t v235;
  int16x8_t v236;
  int16x8_t v237;
  int16x8_t v238;
  uint64_t v239;
  uint64_t v240;

  v81 = a22 + a44 - 16;
  v83.i64[0] = 0x20002000200020;
  v83.i64[1] = 0x20002000200020;
  v84.i64[0] = 0x5000500050005;
  v84.i64[1] = 0x5000500050005;
  _X16 = a51;
  do
  {
    v86 = *v75;
    v75 = (int8x16_t *)((char *)v75 + v79);
    v87 = v80.i64[0];
    v88 = a1 + 32;
    vst2_s8(a1, (int8x8x2_t)v86);
    v89 = (int8x16_t *)(a1 + 16);
    *v89 = vzip2q_s8(v86, v80);
    a1 = v88;
  }
  while (!__CFADD__(v81++, 1));
  v91 = 0;
  do
  {
    v92 = *(int16x8_t *)(a6 + v91 + 528);
    v93 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v91), *(uint16x8_t *)(a6 + v91 + 512));
    v94 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v91 + 16), (uint16x8_t)v92);
    v95 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v91 + 32), *(uint16x8_t *)(a6 + v91 + 544));
    v96 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v91 + 48), *(uint16x8_t *)(a6 + v91 + 560));
    if (a72)
    {
      v97 = *v74;
      v92 = v74[1];
      v98 = v74[2];
      v99 = v74[3];
      v74 += 4;
      v93 = vaddq_s16(v97, v93);
      v94 = vaddq_s16(v92, v94);
      v95 = vaddq_s16(v98, v95);
      v96 = vaddq_s16(v99, v96);
    }
    *v77 = vqmovun_high_s16(vqmovun_s16(v93), v94);
    *(int8x16_t *)((char *)v77 + v79) = vqmovun_high_s16(vqmovun_s16(v95), v96);
    v77 = (int8x16_t *)((char *)v77 + v72);
    v91 += 64;
  }
  while ((_DWORD)v91 != 512);
  if (a65 == 64)
  {
    __asm { PRFM            #0, [X26] }
    v117 = (int8x16_t *)(a45 + a15 + a67 + a14 + 16);
    v118 = 9;
    v107 = a31;
    v101 = a32;
    v100 = a39;
    do
    {
      _X11 = &v117->i8[v79];
      __asm { PRFUM           #0, [X11,#-0x10] }
      v121 = v117[-1];
      v122 = (uint8x16_t)vextq_s8(v121, v121, 2uLL);
      v122.i16[7] = v117->i16[0];
      v123 = (int8x16_t)vrhaddq_u8((uint8x16_t)v121, v122);
      v122.i64[0] = v80.i64[0];
      v107[3] = vzip2q_s8(v123, v80);
      v107 += 2;
      vst2_s8(v107->i8, *(int8x8x2_t *)((char *)&v122 - 8));
      --v118;
      v117 = (int8x16_t *)((char *)v117 + v79);
    }
    while (v118 > 2);
    v124 = v117[-1];
    v125 = (uint8x16_t)vextq_s8(v124, v124, 2uLL);
    v125.i16[7] = v117->i16[0];
  }
  else
  {
    v100 = a39;
    v101 = a32;
    if (a65 != 4)
    {
      if (a65)
      {
        v137 = 0;
        v138 = a30 * a55 - (8 * a55 + 8 * a30) + 64;
        v139 = v80;
        v139.i32[0] = v138 | (v138 << 16);
        v140 = (int16x8_t)vqtbl1q_s8(v139, a46);
        v141 = v80;
        v141.i32[0] = (8 * a55 - a30 * a55) | ((8 * a55 - a30 * a55) << 16);
        v142 = v80;
        v142.i32[0] = (8 * a30 - a30 * a55) | ((8 * a30 - a30 * a55) << 16);
        v143 = (int16x8_t)vqtbl1q_s8(v141, a46);
        v144 = (int16x8_t)vqtbl1q_s8(v142, a46);
        v145 = v80;
        v145.i32[0] = 65537 * a30 * a55;
        v146 = (int16x8_t)vqtbl1q_s8(v145, a46);
        *(int16x8_t *)(v78 - 224) = v140;
        *(int16x8_t *)(v78 - 208) = v143;
        *(int16x8_t *)(v78 - 192) = v144;
        *(int16x8_t *)(v78 - 176) = v146;
        _X9 = &_X26->i8[v79];
        __asm { PRFM            #0, [X9] }
        v92.i64[0] = _X26->i64[0];
        v149 = vqtbl1q_s8((int8x16_t)v92, (int8x16_t)xmmword_2160EE810);
        v149.i16[3] = _X26->i16[4];
        v150 = (int16x8_t)vzip1q_s8(v149, v80);
        v151 = (int16x8_t)vzip1q_s8((int8x16_t)v92, v80);
        v152 = _X26;
        do
        {
          _X11 = &v152->i8[a39];
          v152 = (int8x16_t *)((char *)v152 + v79);
          __asm { PRFM            #0, [X11] }
          v155 = vmlaq_s16(vmulq_s16(v143, v150), v140, v151);
          v150.i64[0] = v152->i64[0];
          v151 = (int16x8_t)vzip1q_s8((int8x16_t)v150, v80);
          v156 = vqtbl1q_s8((int8x16_t)v150, (int8x16_t)xmmword_2160EE810);
          v156.i16[3] = v152->i16[4];
          v150 = (int16x8_t)vzip1q_s8(v156, v80);
          *(uint16x8_t *)((char *)&STACK[0x640] + v137) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v155, v144, v151), v146, v150), v83), v84);
          v137 += 32;
        }
        while ((_DWORD)v137 != 256);
        v157 = 0;
        _X9 = &_X26->i8[v79 + 8];
        __asm { PRFM            #0, [X9] }
        v151.i64[0] = _X26->i64[1];
        v160 = vqtbl1q_s8((int8x16_t)v151, (int8x16_t)xmmword_2160EE810);
        v160.i16[3] = _X26[1].i16[0];
        v161 = (int16x8_t)vzip1q_s8(v160, v80);
        v92 = (int16x8_t)vzip1q_s8((int8x16_t)v151, v80);
        do
        {
          _X9 = &_X26->i8[a32];
          _X26 = (int8x16_t *)((char *)_X26 + v79);
          __asm { PRFM            #0, [X9] }
          v164 = vmlaq_s16(vmulq_s16(v143, v161), v140, v92);
          v161.i64[0] = _X26->i64[1];
          v92 = (int16x8_t)vzip1q_s8((int8x16_t)v161, v80);
          v165 = vqtbl1q_s8((int8x16_t)v161, (int8x16_t)xmmword_2160EE810);
          v165.i16[3] = _X26[1].i16[0];
          v161 = (int16x8_t)vzip1q_s8(v165, v80);
          *(uint16x8_t *)(a41 + v157) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v164, v144, v92), v146, v161), v83), v84);
          v157 += 32;
        }
        while ((_DWORD)v157 != 256);
LABEL_26:
        if (a37 == 64)
        {
          __asm { PRFM            #0, [X16] }
          v179 = (int8x16_t *)(a50 + a28 + a52 + a27 + 16);
          v180 = 9;
          v169 = a17;
          v166 = a71;
          do
          {
            _X11 = &v179->i8[v79];
            __asm { PRFUM           #0, [X11,#-0x10] }
            v183 = v179[-1];
            v184 = (uint8x16_t)vextq_s8(v183, v183, 2uLL);
            v184.i16[7] = v179->i16[0];
            v185 = (int8x16_t)vrhaddq_u8((uint8x16_t)v183, v184);
            v184.i64[0] = v80.i64[0];
            v169[3] = vzip2q_s8(v185, v80);
            v169 += 2;
            vst2_s8(v169->i8, *(int8x8x2_t *)((char *)&v184 - 8));
            --v180;
            v179 = (int8x16_t *)((char *)v179 + v79);
          }
          while (v180 > 2);
          v186 = v179[-1];
          v187 = (uint8x16_t)vextq_s8(v186, v186, 2uLL);
          v187.i16[7] = v179->i16[0];
        }
        else
        {
          v166 = a71;
          if (a37 != 4)
          {
            if (a37)
            {
              v200 = 0;
              v201 = a34 * a56 - (8 * a56 + 8 * a34) + 64;
              v202 = v80;
              v202.i32[0] = v201 | (v201 << 16);
              v203 = (int16x8_t)vqtbl1q_s8(v202, a46);
              v204 = v80;
              v204.i32[0] = (8 * a56 - a34 * a56) | ((8 * a56 - a34 * a56) << 16);
              v205 = v80;
              v205.i32[0] = (8 * a34 - a34 * a56) | ((8 * a34 - a34 * a56) << 16);
              v206 = (int16x8_t)vqtbl1q_s8(v204, a46);
              v207 = (int16x8_t)vqtbl1q_s8(v205, a46);
              v208 = v80;
              v208.i32[0] = 65537 * a34 * a56;
              v209 = (int16x8_t)vqtbl1q_s8(v208, a46);
              *(int16x8_t *)(v78 - 160) = v203;
              *(int16x8_t *)(v78 - 144) = v206;
              *(int16x8_t *)(v78 - 128) = v207;
              *(int16x8_t *)(v78 - 112) = v209;
              _X9 = &a51->i8[v79];
              __asm { PRFM            #0, [X9] }
              v92.i64[0] = a51->i64[0];
              v212 = vqtbl1q_s8((int8x16_t)v92, (int8x16_t)xmmword_2160EE810);
              v212.i16[3] = a51->i16[4];
              v213 = (int16x8_t)vzip1q_s8(v212, v80);
              v214 = (int16x8_t)vzip1q_s8((int8x16_t)v92, v80);
              v215 = a51;
              do
              {
                _X11 = (uint64_t)v215->i64 + v100;
                v215 = (int8x16_t *)((char *)v215 + v79);
                __asm { PRFM            #0, [X11] }
                v218 = vmlaq_s16(vmulq_s16(v206, v213), v203, v214);
                v213.i64[0] = v215->i64[0];
                v214 = (int16x8_t)vzip1q_s8((int8x16_t)v213, v80);
                v219 = vqtbl1q_s8((int8x16_t)v213, (int8x16_t)xmmword_2160EE810);
                v219.i16[3] = v215->i16[4];
                v213 = (int16x8_t)vzip1q_s8(v219, v80);
                *(uint16x8_t *)(a38 + v200) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v218, v207, v214), v209, v213), v83), v84);
                v200 += 32;
              }
              while ((_DWORD)v200 != 256);
              v220 = 0;
              _X9 = &a51->i8[v79 + 8];
              __asm { PRFM            #0, [X9] }
              v214.i64[0] = a51->i64[1];
              v223 = vqtbl1q_s8((int8x16_t)v214, (int8x16_t)xmmword_2160EE810);
              v223.i16[3] = a51[1].i16[0];
              v224 = (int16x8_t)vzip1q_s8(v223, v80);
              v225 = (int16x8_t)vzip1q_s8((int8x16_t)v214, v80);
              v199 = a53;
              do
              {
                _X9 = &_X16->i8[v101];
                __asm { PRFM            #0, [X9] }
                v228 = vmlaq_s16(vmulq_s16(v206, v224), v203, v225);
                v224.i64[0] = *(uint64_t *)((char *)&_X16->i64[1] + v79);
                v225 = (int16x8_t)vzip1q_s8((int8x16_t)v224, v80);
                v229 = vqtbl1q_s8((int8x16_t)v224, (int8x16_t)xmmword_2160EE810);
                v229.i16[3] = *(__int16 *)((char *)_X16[1].i16 + v79);
                v224 = (int16x8_t)vzip1q_s8(v229, v80);
                *(uint16x8_t *)(a18 + v220) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v228, v207, v225), v209, v224), v83), v84);
                v220 += 32;
                _X16 = (int8x16_t *)((char *)_X16 + v79);
              }
              while ((_DWORD)v220 != 256);
              goto LABEL_44;
            }
            __asm { PRFM            #0, [X16] }
            v168 = 9;
            v169 = a17;
            do
            {
              v170 = _X16;
              _X16 = (int8x16_t *)((char *)_X16 + v79);
              __asm { PRFM            #0, [X16] }
              v172 = (int8x8x2_t)*v170;
              v169[3] = vzip2q_s8(*v170, v80);
              v169 += 2;
              v173 = v80.i64[0];
              vst2_s8(v169->i8, v172);
              --v168;
            }
            while (v168 > 2);
            v174 = (int8x8x2_t)*_X16;
            v175 = vzip2q_s8(*_X16, v80);
            i8 = v169[2].i8;
            v177 = v80.i64[0];
            vst2_s8(i8, v174);
LABEL_39:
            v199 = a53;
            v169[3] = v175;
LABEL_44:
            v230 = 0;
            while (1)
            {
              v231 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x640] + v230), *(uint16x8_t *)((char *)&STACK[0x640] + v230 + 256));
              v232 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x640] + v230 + 16), *(uint16x8_t *)((char *)&STACK[0x640] + v230 + 272));
              v233 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x640] + v230 + 32), *(uint16x8_t *)((char *)&STACK[0x640] + v230 + 288));
              v234 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x640] + v230 + 48), *(uint16x8_t *)((char *)&STACK[0x640] + v230 + 304));
              if (v166)
              {
                v235 = *v199;
                v236 = v199[1];
                v237 = v199[2];
                v238 = v199[3];
                v199 += 4;
                v231 = vaddq_s16(v235, v231);
                v232 = vaddq_s16(v236, v232);
                v233 = vaddq_s16(v237, v233);
                v234 = vaddq_s16(v238, v234);
              }
              *v73 = vqmovun_high_s16(vqmovun_s16(v231), v232);
              *(int8x16_t *)((char *)v73 + v79) = vqmovun_high_s16(vqmovun_s16(v233), v234);
              v73 = (int8x16_t *)((char *)v73 + v72);
              v230 += 64;
              if ((_DWORD)v230 == 256)
              {
                if (v240 + 1 != v239)
                  JUMPOUT(0x216040C30);
                JUMPOUT(0x21604B6F8);
              }
            }
          }
          _X8 = &a51->i8[v79];
          __asm { PRFM            #0, [X8] }
          v190 = *(uint8x16_t *)a51;
          v191 = 9;
          v169 = a17;
          do
          {
            _X10 = &_X16->i8[v100];
            __asm { PRFM            #0, [X10] }
            v186 = *(int8x16_t *)((char *)_X16 + v79);
            v194 = (int8x16_t)vrhaddq_u8(v190, (uint8x16_t)v186);
            v195 = v80.i64[0];
            v169[3] = vzip2q_s8(v194, v80);
            v169 += 2;
            vst2_s8(v169->i8, (int8x8x2_t)v194);
            --v191;
            _X16 = (int8x16_t *)((char *)_X16 + v79);
            v190 = (uint8x16_t)v186;
          }
          while (v191 > 2);
          v187 = *(uint8x16_t *)((char *)_X16 + v79);
        }
        v196 = (int8x16_t)vrhaddq_u8((uint8x16_t)v186, v187);
        v197 = v169[2].i8;
        v198 = v80.i64[0];
        vst2_s8(v197, (int8x8x2_t)v196);
        v175 = vzip2q_s8(v196, v80);
        goto LABEL_39;
      }
      __asm { PRFM            #0, [X26] }
      v106 = 9;
      v107 = a31;
      do
      {
        v108 = _X26;
        _X26 = (int8x16_t *)((char *)_X26 + v79);
        __asm { PRFM            #0, [X26] }
        v110 = (int8x8x2_t)*v108;
        v107[3] = vzip2q_s8(*v108, v80);
        v107 += 2;
        v111 = v80.i64[0];
        vst2_s8(v107->i8, v110);
        --v106;
      }
      while (v106 > 2);
      v112 = (int8x8x2_t)*_X26;
      v113 = vzip2q_s8(*_X26, v80);
      v114 = v107[2].i8;
      v115 = v80.i64[0];
      vst2_s8(v114, v112);
LABEL_21:
      v107[3] = v113;
      goto LABEL_26;
    }
    _X8 = &_X26->i8[v79];
    __asm { PRFM            #0, [X8] }
    v128 = *(uint8x16_t *)_X26;
    v129 = 9;
    v107 = a31;
    do
    {
      _X10 = &_X26->i8[a39];
      _X26 = (int8x16_t *)((char *)_X26 + v79);
      __asm { PRFM            #0, [X10] }
      v124 = *_X26;
      v132 = (int8x16_t)vrhaddq_u8(v128, *(uint8x16_t *)_X26);
      v133 = v80.i64[0];
      v107[3] = vzip2q_s8(v132, v80);
      v107 += 2;
      vst2_s8(v107->i8, (int8x8x2_t)v132);
      --v129;
      v128 = (uint8x16_t)v124;
    }
    while (v129 > 2);
    v125 = *(uint8x16_t *)((char *)_X26 + v79);
  }
  v134 = (int8x16_t)vrhaddq_u8((uint8x16_t)v124, v125);
  v135 = v107[2].i8;
  v136 = v80.i64[0];
  vst2_s8(v135, (int8x8x2_t)v134);
  v113 = vzip2q_s8(v134, v80);
  goto LABEL_21;
}

void sub_21604284C(int8x16_t a1, int8x16_t a2, double a3, double a4, int8x16_t a5, int8x16_t a6, int8x16_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int64x2_t *a28)
{
  unsigned int *v28;
  unsigned int *v29;
  unint64_t v30;
  int64x2_t v31;
  int8x16_t v32;
  double v33;
  double v34;
  int8x16_t v35;
  int8x16_t v36;
  int8x16_t v37;
  int8x16_t v38;

  v30 = STACK[0x208];
  v31 = sub_2160855B4((int64x2_t *)&STACK[0x240], v29, STACK[0x208], a1, a2, a3, a4, a5, a6, a7, a8);
  sub_2160855B4(a28, v28, v30, (int8x16_t)v31, v32, v33, v34, v35, v36, v37, v38);
  JUMPOUT(0x216042B0CLL);
}

void sub_216042B30(int8x16_t a1, int8x16_t a2, int8x16_t a3, int8x16_t a4, uint16x8_t a5, uint16x8_t a6, uint16x8_t a7, uint16x8_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int64x2_t *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,int a40,uint64_t a41,uint64_t a42,int64x2_t *a43,uint64_t a44,uint64_t a45,int64x2_t *a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,_WORD *a56,uint64_t a57,uint64_t *a58,int a59,int a60,int a61,uint64_t a62,uint64_t a63)
{
  uint64_t a73;
  uint64_t a74;
  uint64_t a75;
  uint64_t v75;
  uint64_t v76;
  _DWORD *v77;
  int v78;
  __int32 *v79;
  unint64_t *v80;
  unsigned __int32 *v81;
  _WORD *v82;
  _DWORD *v83;
  uint64_t v84;
  uint16x8_t v85;
  int8x16_t v86;
  int64x2_t v87;
  int64x2_t v88;
  int8x16_t v89;
  int8x16_t v90;
  int16x8_t v91;
  int16x8_t v92;
  int16x8_t v93;
  unint64_t v94;
  char v95;
  unint64_t *v96;
  char v97;
  int16x8_t v98;
  int64x2_t v99;
  uint16x8_t v100;
  int16x8_t v101;
  int16x8_t v102;
  uint16x8_t v103;
  int16x8_t v104;
  int16x8_t v105;
  uint16x8_t v106;
  int16x8_t v107;
  int16x8_t v108;
  int16x8_t v109;
  int16x8_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;

  a1.i32[0] = *(unsigned __int32 *)((char *)v81 + v84);
  a2.i32[0] = *(unsigned __int32 *)((char *)v81 + a73);
  a3.i32[0] = *(unsigned __int32 *)((char *)v81 + v75);
  a4.i32[0] = *v81;
  v87 = (int64x2_t)vzip1q_s8(a4, v86);
  v88 = (int64x2_t)vzip1q_s8(a3, v86);
  v89 = (int8x16_t)vzip1q_s64(v87, (int64x2_t)vzip1q_s8(a1, v86));
  v90 = (int8x16_t)vzip1q_s64((int64x2_t)vzip1q_s8(a2, v86), v88);
  *(int8x16_t *)&STACK[0x440] = v89;
  *(int8x16_t *)&STACK[0x450] = v90;
  v89.i32[0] = *v79;
  v90.i32[0] = *(__int32 *)((char *)v79 + v84);
  v88.i32[0] = *(__int32 *)((char *)v79 + a73);
  v87.i32[0] = *(__int32 *)((char *)v79 + v75);
  v91 = (int16x8_t)vzip1q_s8((int8x16_t)v88, v86);
  v92 = (int16x8_t)vzip1q_s64((int64x2_t)vzip1q_s8(v89, v86), (int64x2_t)vzip1q_s8(v90, v86));
  v93 = (int16x8_t)vzip1q_s64((int64x2_t)v91, (int64x2_t)vzip1q_s8((int8x16_t)v87, v86));
  *(int16x8_t *)&STACK[0x460] = v92;
  *(int16x8_t *)&STACK[0x470] = v93;
  v94 = STACK[0x208];
  v95 = 1;
  v96 = &STACK[0x240];
  while (1)
  {
    v97 = v95;
    v92.i64[0] = *v96;
    v93.i64[0] = v96[1];
    a5.i64[0] = v96[2];
    a6.i64[0] = v96[3];
    v91.i64[0] = v96[64];
    a7.i64[0] = v96[65];
    a8.i64[0] = v96[66];
    v85.i64[0] = v96[67];
    v98 = (int16x8_t)vrhaddq_u16((uint16x8_t)v92, (uint16x8_t)v91);
    v91 = (int16x8_t)vrhaddq_u16((uint16x8_t)v93, a7);
    v93 = (int16x8_t)vrhaddq_u16(a5, a8);
    v92 = (int16x8_t)vrhaddq_u16(a6, v85);
    if (a75)
    {
      a5.i64[0] = *v80;
      a6.i64[0] = v80[4];
      a7.i64[0] = v80[8];
      a8.i64[0] = v80[12];
      v80 += 16;
      v98 = vaddq_s16(v98, (int16x8_t)a5);
      v91 = vaddq_s16(v91, (int16x8_t)a6);
      v93 = vaddq_s16(v93, (int16x8_t)a7);
      v92 = vaddq_s16(v92, (int16x8_t)a8);
    }
    v95 = 0;
    v96 += 4;
    *v83 = vqmovun_s16(v98).u32[0];
    *(_DWORD *)((char *)v83 + v84) = vqmovun_s16(v91).u32[0];
    *(_DWORD *)((char *)v83 + a73) = vqmovun_s16(v93).u32[0];
    *(_DWORD *)((char *)v83 + v75) = vqmovun_s16(v92).u32[0];
    v83 = (_DWORD *)((char *)v83 + v76);
    if ((v97 & 1) == 0)
    {
      sub_215FF1D58((int64x2_t *)&STACK[0x640], v82, v94, a60, v78);
      sub_215FF1D58(a46, (_WORD *)((char *)v82 + a30), v94, a60, v78);
      sub_215FF1D58(a43, a56, v94, a61, a40);
      v99 = sub_215FF1D58(a26, (_WORD *)((char *)a56 + a30), v94, a61, a40);
      v99.i64[0] = STACK[0x640];
      v100.i64[0] = STACK[0x648];
      v101.i64[0] = STACK[0x650];
      v102.i64[0] = STACK[0x658];
      v103.i64[0] = STACK[0x740];
      v104.i64[0] = STACK[0x748];
      v105.i64[0] = STACK[0x750];
      v106.i64[0] = STACK[0x758];
      v107 = (int16x8_t)vrhaddq_u16((uint16x8_t)v99, v103);
      v108 = (int16x8_t)vrhaddq_u16(v100, (uint16x8_t)v104);
      v109 = (int16x8_t)vrhaddq_u16((uint16x8_t)v101, (uint16x8_t)v105);
      v110 = (int16x8_t)vrhaddq_u16((uint16x8_t)v102, v106);
      if (a74)
      {
        v101.i64[0] = *a58;
        v102.i64[0] = a58[4];
        v104.i64[0] = a58[8];
        v105.i64[0] = a58[12];
        v107 = vaddq_s16(v107, v101);
        v108 = vaddq_s16(v108, v102);
        v109 = vaddq_s16(v109, v104);
        v110 = vaddq_s16(v110, v105);
      }
      v111 = STACK[0x210];
      *v77 = vqmovun_s16(v107).u32[0];
      *(_DWORD *)((char *)v77 + v111) = vqmovun_s16(v108).u32[0];
      *(_DWORD *)((char *)v77 + a73) = vqmovun_s16(v109).u32[0];
      *(_DWORD *)((char *)v77 + a63) = vqmovun_s16(v110).u32[0];
      if (v113 + 1 != v112)
        JUMPOUT(0x216040C30);
      JUMPOUT(0x21604B6F8);
    }
  }
}

void sub_216042B9C(uint64_t a1@<X5>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int8x16_t v58;
  int16x8_t v59;
  int16x8_t v60;
  uint64_t v61;
  int8x16_t *v62;
  int8x16_t *v63;
  int16x8_t v64;
  int16x8_t v65;
  int16x8_t v66;
  int16x8_t v67;
  int16x8_t v68;
  uint64_t v69;
  int8x16_t *v70;
  int16x8_t v71;
  int16x8_t v72;
  uint64_t v73;
  int8x16_t *v74;
  int8x16_t *v75;
  int16x8_t v76;
  int16x8_t v77;
  int16x8_t v78;
  int16x8_t v79;
  int16x8_t v80;
  int8x16_t *v81;
  int16x8_t v82;
  int16x8_t v83;

  v61 = 0;
  v62 = (int8x16_t *)(v56 + a18 + v57);
  v63 = (int8x16_t *)((char *)v62 + v57 + v57);
  v64 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v63 + v57), v58);
  v65 = (int16x8_t)vzip1q_s8(*v63, v58);
  v66 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v62 + v57), v58);
  v67 = (int16x8_t)vzip1q_s8(*v62, v58);
  v68 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v56 + a18), v58);
  v69 = a55 + a2;
  v70 = (int8x16_t *)(a38 + a10 + v69);
  do
  {
    v71 = v67;
    v67 = v66;
    v66 = v65;
    v65 = v64;
    v64 = (int16x8_t)vzip1q_s8(*v70, v58);
    v72 = vsubq_s16(vshlq_n_s16(vaddq_s16(v67, v66), 2uLL), vaddq_s16(v71, v65));
    *(uint16x8_t *)(a1 + v61) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v68, v72), vshlq_n_s16(v72, 2uLL)), vaddq_s16(v64, v59)), v60))), (uint16x8_t)v67);
    v61 += 32;
    v70 = (int8x16_t *)((char *)v70 + v57);
    v68 = v71;
  }
  while ((_DWORD)v61 != 256);
  v73 = 0;
  v74 = (int8x16_t *)(v56 + a18 + 8 + v57);
  v75 = (int8x16_t *)((char *)v74 + v57 + v57);
  v76 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v75 + v57), v58);
  v77 = (int16x8_t)vzip1q_s8(*v75, v58);
  v78 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v74 + v57), v58);
  v79 = (int16x8_t)vzip1q_s8(*v74, v58);
  v80 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v56 + a18 + 8), v58);
  v81 = (int8x16_t *)(a38 + a6 + v69);
  do
  {
    v82 = v79;
    v79 = v78;
    v78 = v77;
    v77 = v76;
    v76 = (int16x8_t)vzip1q_s8(*v81, v58);
    v83 = vsubq_s16(vshlq_n_s16(vaddq_s16(v79, v78), 2uLL), vaddq_s16(v82, v77));
    *(uint16x8_t *)(v55 + v73) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v80, v83), vshlq_n_s16(v83, 2uLL)), vaddq_s16(v76, v59)), v60))), (uint16x8_t)v79);
    v73 += 32;
    v81 = (int8x16_t *)((char *)v81 + v57);
    v80 = v82;
  }
  while ((_DWORD)v73 != 256);
  __asm { BR              X8 }
}

void sub_216042D10(uint64_t a1@<X5>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int8x16_t v58;
  int16x8_t v59;
  int16x8_t v60;
  uint64_t v61;
  int8x16_t *v62;
  int8x16_t *v63;
  int16x8_t v64;
  int16x8_t v65;
  int16x8_t v66;
  int16x8_t v67;
  int16x8_t v68;
  uint64_t v69;
  int8x16_t *v70;
  int16x8_t v71;
  char *v72;
  int16x8_t v73;
  uint64_t v74;
  uint64_t v75;
  int8x16_t *v76;
  int8x16_t *v77;
  int16x8_t v78;
  int16x8_t v79;
  int16x8_t v80;
  int16x8_t v81;
  int16x8_t v82;
  int8x16_t *v83;
  int16x8_t v84;
  char *v85;
  int16x8_t v86;
  uint64_t v87;

  v61 = 0;
  v62 = (int8x16_t *)(v56 + a18 + v57);
  v63 = (int8x16_t *)((char *)v62 + v57 + v57);
  v64 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v63 + v57), v58);
  v65 = (int16x8_t)vzip1q_s8(*v63, v58);
  v66 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v62 + v57), v58);
  v67 = (int16x8_t)vzip1q_s8(*v62, v58);
  v68 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v56 + a18), v58);
  v69 = a55 + a2;
  v70 = (int8x16_t *)(a38 + a10 + v69);
  do
  {
    v71 = v67;
    v67 = v66;
    v66 = v65;
    v65 = v64;
    v72 = (char *)(a1 + v61);
    v64 = (int16x8_t)vzip1q_s8(*v70, v58);
    v73 = vsubq_s16(vshlq_n_s16(vaddq_s16(v67, v66), 2uLL), vaddq_s16(v71, v65));
    *(int8x8_t *)v73.i8 = vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v68, v73), vshlq_n_s16(v73, 2uLL)), vaddq_s16(v64, v59)), v60));
    v74 = v58.i64[0];
    vst2_s8(v72, (int8x8x2_t)v73);
    v61 += 32;
    v70 = (int8x16_t *)((char *)v70 + v57);
    v68 = v71;
  }
  while ((_DWORD)v61 != 256);
  v75 = 0;
  v76 = (int8x16_t *)(v56 + a18 + 8 + v57);
  v77 = (int8x16_t *)((char *)v76 + v57 + v57);
  v78 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v77 + v57), v58);
  v79 = (int16x8_t)vzip1q_s8(*v77, v58);
  v80 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v76 + v57), v58);
  v81 = (int16x8_t)vzip1q_s8(*v76, v58);
  v82 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v56 + a18 + 8), v58);
  v83 = (int8x16_t *)(a38 + a6 + v69);
  do
  {
    v84 = v81;
    v81 = v80;
    v80 = v79;
    v79 = v78;
    v85 = (char *)(v55 + v75);
    v78 = (int16x8_t)vzip1q_s8(*v83, v58);
    v86 = vsubq_s16(vshlq_n_s16(vaddq_s16(v81, v80), 2uLL), vaddq_s16(v84, v79));
    *(int8x8_t *)v86.i8 = vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v82, v86), vshlq_n_s16(v86, 2uLL)), vaddq_s16(v78, v59)), v60));
    v87 = v58.i64[0];
    vst2_s8(v85, (int8x8x2_t)v86);
    v75 += 32;
    v83 = (int8x16_t *)((char *)v83 + v57);
    v82 = v84;
  }
  while ((_DWORD)v75 != 256);
  __asm { BR              X8 }
}

void sub_216042E84(uint64_t a1@<X5>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int8x16_t v58;
  int16x8_t v59;
  int16x8_t v60;
  uint64_t v61;
  int8x16_t *v62;
  int8x16_t *v63;
  int16x8_t v64;
  int16x8_t v65;
  int16x8_t v66;
  int16x8_t v67;
  int16x8_t v68;
  uint64_t v69;
  int8x16_t *v70;
  int16x8_t v71;
  int16x8_t v72;
  uint64_t v73;
  int8x16_t *v74;
  int8x16_t *v75;
  int16x8_t v76;
  int16x8_t v77;
  int16x8_t v78;
  int16x8_t v79;
  int16x8_t v80;
  int8x16_t *v81;
  int16x8_t v82;
  int16x8_t v83;

  v61 = 0;
  v62 = (int8x16_t *)(v56 + a18 + v57);
  v63 = (int8x16_t *)((char *)v62 + v57 + v57);
  v64 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v63 + v57), v58);
  v65 = (int16x8_t)vzip1q_s8(*v63, v58);
  v66 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v62 + v57), v58);
  v67 = (int16x8_t)vzip1q_s8(*v62, v58);
  v68 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v56 + a18), v58);
  v69 = a55 + a2;
  v70 = (int8x16_t *)(a38 + a10 + v69);
  do
  {
    v71 = v67;
    v67 = v66;
    v66 = v65;
    v65 = v64;
    v64 = (int16x8_t)vzip1q_s8(*v70, v58);
    v72 = vsubq_s16(vshlq_n_s16(vaddq_s16(v67, v66), 2uLL), vaddq_s16(v71, v65));
    *(uint16x8_t *)(a1 + v61) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v68, v72), vshlq_n_s16(v72, 2uLL)), vaddq_s16(v64, v59)), v60))), (uint16x8_t)v66);
    v61 += 32;
    v70 = (int8x16_t *)((char *)v70 + v57);
    v68 = v71;
  }
  while ((_DWORD)v61 != 256);
  v73 = 0;
  v74 = (int8x16_t *)(v56 + a18 + 8 + v57);
  v75 = (int8x16_t *)((char *)v74 + v57 + v57);
  v76 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v75 + v57), v58);
  v77 = (int16x8_t)vzip1q_s8(*v75, v58);
  v78 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v74 + v57), v58);
  v79 = (int16x8_t)vzip1q_s8(*v74, v58);
  v80 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v56 + a18 + 8), v58);
  v81 = (int8x16_t *)(a38 + a6 + v69);
  do
  {
    v82 = v79;
    v79 = v78;
    v78 = v77;
    v77 = v76;
    v76 = (int16x8_t)vzip1q_s8(*v81, v58);
    v83 = vsubq_s16(vshlq_n_s16(vaddq_s16(v79, v78), 2uLL), vaddq_s16(v82, v77));
    *(uint16x8_t *)(v55 + v73) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v80, v83), vshlq_n_s16(v83, 2uLL)), vaddq_s16(v76, v59)), v60))), (uint16x8_t)v78);
    v73 += 32;
    v81 = (int8x16_t *)((char *)v81 + v57);
    v80 = v82;
  }
  while ((_DWORD)v73 != 256);
  __asm { BR              X8 }
}

void sub_216042FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int8x16_t v55;
  int16x8_t v56;
  int16x8_t v57;
  uint64_t v58;
  int8x16_t *v59;
  int8x16_t v60;
  int16x8_t v61;
  int16x8_t v62;
  uint64_t v63;
  int8x16_t *v64;
  int8x16_t v65;
  int16x8_t v66;
  int16x8_t v67;

  v58 = 0;
  v59 = (int8x16_t *)(v53 - 2);
  do
  {
    v60 = *v59;
    v59 = (int8x16_t *)((char *)v59 + v54);
    v61 = (int16x8_t)vzip1q_s8(vextq_s8(v60, v60, 2uLL), v55);
    v62 = vsubq_s16(vshlq_n_s16(vaddq_s16(v61, (int16x8_t)vzip1q_s8(vextq_s8(v60, v60, 3uLL), v55)), 2uLL), vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v60, v60, 1uLL), v55), (int16x8_t)vzip1q_s8(vextq_s8(v60, v60, 4uLL), v55)));
    *(uint16x8_t *)(a6 + v58) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vshlq_n_s16(v62, 2uLL), vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v60, v55), (int16x8_t)vzip1q_s8(vextq_s8(v60, v60, 5uLL), v55)), v62)), v56), v57))), (uint16x8_t)v61);
    v58 += 32;
  }
  while ((_DWORD)v58 != 256);
  v63 = 0;
  v64 = (int8x16_t *)(v53 + 6);
  do
  {
    v65 = *v64;
    v64 = (int8x16_t *)((char *)v64 + v54);
    v66 = (int16x8_t)vzip1q_s8(vextq_s8(v65, v65, 2uLL), v55);
    v67 = vsubq_s16(vshlq_n_s16(vaddq_s16(v66, (int16x8_t)vzip1q_s8(vextq_s8(v65, v65, 3uLL), v55)), 2uLL), vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v65, v65, 1uLL), v55), (int16x8_t)vzip1q_s8(vextq_s8(v65, v65, 4uLL), v55)));
    *(uint16x8_t *)(v52 + v63) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vshlq_n_s16(v67, 2uLL), vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v65, v55), (int16x8_t)vzip1q_s8(vextq_s8(v65, v65, 5uLL), v55)), v67)), v56), v57))), (uint16x8_t)v66);
    v63 += 32;
  }
  while ((_DWORD)v63 != 256);
  __asm { BR              X8 }
}

void sub_216043100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  uint64_t v52;

  sub_2160811CC((char *)&STACK[0x240], v52, STACK[0x208], 8, 2, 2u);
  __asm { BR              X8 }
}

void sub_2160434D4(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int8x16_t *a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,int a30,int8x16_t *a31,uint64_t a32,int a33,int a34,uint64_t a35,int a36,int a37,uint16x8_t *a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44,uint64_t a45,int8x16_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int8x16_t *a51,uint64_t a52,int16x8_t *a53,int a54,int a55,int a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  uint64_t a67;
  uint64_t a71;
  uint64_t a72;
  uint64_t v72;
  int8x16_t *v73;
  int16x8_t *v74;
  int8x16_t *v75;
  int8x16_t *v77;
  uint64_t v78;
  uint64_t v79;
  int8x16_t v80;
  int v81;
  int16x8_t v83;
  uint16x8_t v84;
  int8x16_t v86;
  uint64_t v87;
  char *v88;
  int8x16_t *v89;
  uint64_t v91;
  int16x8_t v92;
  int16x8_t v93;
  int16x8_t v94;
  int16x8_t v95;
  int16x8_t v96;
  int16x8_t v97;
  int16x8_t v98;
  int16x8_t v99;
  uint64_t v100;
  uint64_t v101;
  unsigned int v106;
  int8x16_t *v107;
  int8x16_t *v108;
  int8x8x2_t v110;
  uint64_t v111;
  int8x8x2_t v112;
  int8x16_t v113;
  char *v114;
  uint64_t v115;
  int8x16_t *v117;
  unsigned int v118;
  int8x16_t v121;
  uint8x16_t v122;
  int8x16_t v123;
  int8x16_t v124;
  uint8x16_t v125;
  uint8x16_t v128;
  unsigned int v129;
  int8x16_t v132;
  uint64_t v133;
  int8x16_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  int v138;
  int8x16_t v139;
  int16x8_t v140;
  int8x16_t v141;
  int8x16_t v142;
  int16x8_t v143;
  int16x8_t v144;
  int8x16_t v145;
  int16x8_t v146;
  int8x16_t v149;
  int16x8_t v150;
  int16x8_t v151;
  int8x16_t *v152;
  int16x8_t v155;
  int8x16_t v156;
  uint64_t v157;
  int8x16_t v160;
  int16x8_t v161;
  int16x8_t v164;
  int8x16_t v165;
  uint16x8_t *v166;
  uint64_t v167;
  unsigned int v169;
  int8x16_t *v170;
  int8x16_t *v171;
  int8x8x2_t v173;
  uint64_t v174;
  int8x8x2_t v175;
  int8x16_t v176;
  char *i8;
  uint64_t v178;
  int8x16_t *v180;
  unsigned int v181;
  int8x16_t v184;
  uint8x16_t v185;
  int8x16_t v186;
  int8x16_t v187;
  uint8x16_t v188;
  uint8x16_t v191;
  unsigned int v192;
  int8x16_t v195;
  uint64_t v196;
  int8x16_t v197;
  char *v198;
  uint64_t v199;
  int16x8_t *v200;
  uint64_t v201;
  int v202;
  int8x16_t v203;
  int16x8_t v204;
  int8x16_t v205;
  int8x16_t v206;
  int16x8_t v207;
  int16x8_t v208;
  int8x16_t v209;
  int16x8_t v210;
  int8x16_t v213;
  int16x8_t v214;
  int16x8_t v215;
  int8x16_t *v216;
  int16x8_t v219;
  int8x16_t v220;
  uint64_t v221;
  int8x16_t v224;
  int16x8_t v225;
  int16x8_t v226;
  int16x8_t v229;
  int8x16_t v230;
  char v231;
  uint16x8_t *v232;
  char v233;
  int16x8_t v234;
  int16x8_t v235;
  int16x8_t v236;
  int16x8_t v237;
  int16x8_t v238;
  int16x8_t v239;
  int16x8_t v240;
  int16x8_t v241;
  uint64_t v242;
  uint64_t v243;

  v81 = a22 + a44 - 8;
  v83.i64[0] = 0x20002000200020;
  v83.i64[1] = 0x20002000200020;
  v84.i64[0] = 0x5000500050005;
  v84.i64[1] = 0x5000500050005;
  _X16 = a51;
  do
  {
    v86 = *v75;
    v75 = (int8x16_t *)((char *)v75 + v79);
    v87 = v80.i64[0];
    v88 = a1 + 32;
    vst2_s8(a1, (int8x8x2_t)v86);
    v89 = (int8x16_t *)(a1 + 16);
    *v89 = vzip2q_s8(v86, v80);
    a1 = v88;
  }
  while (!__CFADD__(v81++, 1));
  v91 = 0;
  do
  {
    v92 = *(int16x8_t *)(a6 + v91 + 528);
    v93 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v91), *(uint16x8_t *)(a6 + v91 + 512));
    v94 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v91 + 16), (uint16x8_t)v92);
    v95 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v91 + 32), *(uint16x8_t *)(a6 + v91 + 544));
    v96 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v91 + 48), *(uint16x8_t *)(a6 + v91 + 560));
    if (a72)
    {
      v97 = *v74;
      v92 = v74[1];
      v98 = v74[2];
      v99 = v74[3];
      v74 += 4;
      v93 = vaddq_s16(v97, v93);
      v94 = vaddq_s16(v92, v94);
      v95 = vaddq_s16(v98, v95);
      v96 = vaddq_s16(v99, v96);
    }
    *v77 = vqmovun_high_s16(vqmovun_s16(v93), v94);
    *(int8x16_t *)((char *)v77 + v79) = vqmovun_high_s16(vqmovun_s16(v95), v96);
    v77 = (int8x16_t *)((char *)v77 + v72);
    v91 += 64;
  }
  while ((_DWORD)v91 != 256);
  if (a65 == 64)
  {
    __asm { PRFM            #0, [X26] }
    v117 = (int8x16_t *)(a45 + a15 + a67 + a14 + 16);
    v118 = 5;
    v107 = a31;
    v101 = a32;
    v100 = a39;
    do
    {
      _X11 = &v117->i8[v79];
      __asm { PRFUM           #0, [X11,#-0x10] }
      v121 = v117[-1];
      v122 = (uint8x16_t)vextq_s8(v121, v121, 2uLL);
      v122.i16[7] = v117->i16[0];
      v123 = (int8x16_t)vrhaddq_u8((uint8x16_t)v121, v122);
      v122.i64[0] = v80.i64[0];
      v107[3] = vzip2q_s8(v123, v80);
      v107 += 2;
      vst2_s8(v107->i8, *(int8x8x2_t *)((char *)&v122 - 8));
      --v118;
      v117 = (int8x16_t *)((char *)v117 + v79);
    }
    while (v118 > 2);
    v124 = v117[-1];
    v125 = (uint8x16_t)vextq_s8(v124, v124, 2uLL);
    v125.i16[7] = v117->i16[0];
  }
  else
  {
    v100 = a39;
    v101 = a32;
    if (a65 != 4)
    {
      if (a65)
      {
        v137 = 0;
        v138 = a30 * a55 - (8 * a55 + 8 * a30) + 64;
        v139 = v80;
        v139.i32[0] = v138 | (v138 << 16);
        v140 = (int16x8_t)vqtbl1q_s8(v139, a46);
        v141 = v80;
        v141.i32[0] = (8 * a55 - a30 * a55) | ((8 * a55 - a30 * a55) << 16);
        v142 = v80;
        v142.i32[0] = (8 * a30 - a30 * a55) | ((8 * a30 - a30 * a55) << 16);
        v143 = (int16x8_t)vqtbl1q_s8(v141, a46);
        v144 = (int16x8_t)vqtbl1q_s8(v142, a46);
        v145 = v80;
        v145.i32[0] = 65537 * a30 * a55;
        v146 = (int16x8_t)vqtbl1q_s8(v145, a46);
        *(int16x8_t *)(v78 - 224) = v140;
        *(int16x8_t *)(v78 - 208) = v143;
        *(int16x8_t *)(v78 - 192) = v144;
        *(int16x8_t *)(v78 - 176) = v146;
        _X9 = &_X26->i8[v79];
        __asm { PRFM            #0, [X9] }
        v92.i64[0] = _X26->i64[0];
        v149 = vqtbl1q_s8((int8x16_t)v92, (int8x16_t)xmmword_2160EE810);
        v149.i16[3] = _X26->i16[4];
        v150 = (int16x8_t)vzip1q_s8(v149, v80);
        v151 = (int16x8_t)vzip1q_s8((int8x16_t)v92, v80);
        v152 = _X26;
        do
        {
          _X11 = &v152->i8[a39];
          v152 = (int8x16_t *)((char *)v152 + v79);
          __asm { PRFM            #0, [X11] }
          v155 = vmlaq_s16(vmulq_s16(v143, v150), v140, v151);
          v150.i64[0] = v152->i64[0];
          v151 = (int16x8_t)vzip1q_s8((int8x16_t)v150, v80);
          v156 = vqtbl1q_s8((int8x16_t)v150, (int8x16_t)xmmword_2160EE810);
          v156.i16[3] = v152->i16[4];
          v150 = (int16x8_t)vzip1q_s8(v156, v80);
          *(uint16x8_t *)((char *)&STACK[0x640] + v137) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v155, v144, v151), v146, v150), v83), v84);
          v137 += 32;
        }
        while ((_DWORD)v137 != 128);
        v157 = 0;
        _X9 = &_X26->i8[v79 + 8];
        __asm { PRFM            #0, [X9] }
        v151.i64[0] = _X26->i64[1];
        v160 = vqtbl1q_s8((int8x16_t)v151, (int8x16_t)xmmword_2160EE810);
        v160.i16[3] = _X26[1].i16[0];
        v161 = (int16x8_t)vzip1q_s8(v160, v80);
        v92 = (int16x8_t)vzip1q_s8((int8x16_t)v151, v80);
        do
        {
          _X9 = &_X26->i8[a32];
          _X26 = (int8x16_t *)((char *)_X26 + v79);
          __asm { PRFM            #0, [X9] }
          v164 = vmlaq_s16(vmulq_s16(v143, v161), v140, v92);
          v161.i64[0] = _X26->i64[1];
          v92 = (int16x8_t)vzip1q_s8((int8x16_t)v161, v80);
          v165 = vqtbl1q_s8((int8x16_t)v161, (int8x16_t)xmmword_2160EE810);
          v165.i16[3] = _X26[1].i16[0];
          v161 = (int16x8_t)vzip1q_s8(v165, v80);
          *(uint16x8_t *)(a41 + v157) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v164, v144, v92), v146, v161), v83), v84);
          v157 += 32;
        }
        while ((_DWORD)v157 != 128);
LABEL_26:
        if (a37 == 64)
        {
          __asm { PRFM            #0, [X16] }
          v180 = (int8x16_t *)(a50 + a28 + a52 + a27 + 16);
          v181 = 5;
          v170 = a17;
          v166 = a38;
          v167 = a71;
          do
          {
            _X11 = &v180->i8[v79];
            __asm { PRFUM           #0, [X11,#-0x10] }
            v184 = v180[-1];
            v185 = (uint8x16_t)vextq_s8(v184, v184, 2uLL);
            v185.i16[7] = v180->i16[0];
            v186 = (int8x16_t)vrhaddq_u8((uint8x16_t)v184, v185);
            v185.i64[0] = v80.i64[0];
            v170[3] = vzip2q_s8(v186, v80);
            v170 += 2;
            vst2_s8(v170->i8, *(int8x8x2_t *)((char *)&v185 - 8));
            --v181;
            v180 = (int8x16_t *)((char *)v180 + v79);
          }
          while (v181 > 2);
          v187 = v180[-1];
          v188 = (uint8x16_t)vextq_s8(v187, v187, 2uLL);
          v188.i16[7] = v180->i16[0];
        }
        else
        {
          v166 = a38;
          v167 = a71;
          if (a37 != 4)
          {
            if (a37)
            {
              v201 = 0;
              v202 = a34 * a56 - (8 * a56 + 8 * a34) + 64;
              v203 = v80;
              v203.i32[0] = v202 | (v202 << 16);
              v204 = (int16x8_t)vqtbl1q_s8(v203, a46);
              v205 = v80;
              v205.i32[0] = (8 * a56 - a34 * a56) | ((8 * a56 - a34 * a56) << 16);
              v206 = v80;
              v206.i32[0] = (8 * a34 - a34 * a56) | ((8 * a34 - a34 * a56) << 16);
              v207 = (int16x8_t)vqtbl1q_s8(v205, a46);
              v208 = (int16x8_t)vqtbl1q_s8(v206, a46);
              v209 = v80;
              v209.i32[0] = 65537 * a34 * a56;
              v210 = (int16x8_t)vqtbl1q_s8(v209, a46);
              *(int16x8_t *)(v78 - 160) = v204;
              *(int16x8_t *)(v78 - 144) = v207;
              *(int16x8_t *)(v78 - 128) = v208;
              *(int16x8_t *)(v78 - 112) = v210;
              _X9 = &a51->i8[v79];
              __asm { PRFM            #0, [X9] }
              v92.i64[0] = a51->i64[0];
              v213 = vqtbl1q_s8((int8x16_t)v92, (int8x16_t)xmmword_2160EE810);
              v213.i16[3] = a51->i16[4];
              v214 = (int16x8_t)vzip1q_s8(v213, v80);
              v215 = (int16x8_t)vzip1q_s8((int8x16_t)v92, v80);
              v216 = a51;
              do
              {
                _X11 = (uint64_t)v216->i64 + v100;
                v216 = (int8x16_t *)((char *)v216 + v79);
                __asm { PRFM            #0, [X11] }
                v219 = vmlaq_s16(vmulq_s16(v207, v214), v204, v215);
                v214.i64[0] = v216->i64[0];
                v215 = (int16x8_t)vzip1q_s8((int8x16_t)v214, v80);
                v220 = vqtbl1q_s8((int8x16_t)v214, (int8x16_t)xmmword_2160EE810);
                v220.i16[3] = v216->i16[4];
                v214 = (int16x8_t)vzip1q_s8(v220, v80);
                a38[v201] = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v219, v208, v215), v210, v214), v83), v84);
                v201 += 2;
              }
              while ((_DWORD)(v201 * 16) != 128);
              v221 = 0;
              _X9 = &a51->i8[v79 + 8];
              __asm { PRFM            #0, [X9] }
              v215.i64[0] = a51->i64[1];
              v224 = vqtbl1q_s8((int8x16_t)v215, (int8x16_t)xmmword_2160EE810);
              v224.i16[3] = a51[1].i16[0];
              v225 = (int16x8_t)vzip1q_s8(v224, v80);
              v226 = (int16x8_t)vzip1q_s8((int8x16_t)v215, v80);
              v200 = a53;
              do
              {
                _X9 = &_X16->i8[v101];
                __asm { PRFM            #0, [X9] }
                v229 = vmlaq_s16(vmulq_s16(v207, v225), v204, v226);
                v225.i64[0] = *(uint64_t *)((char *)&_X16->i64[1] + v79);
                v226 = (int16x8_t)vzip1q_s8((int8x16_t)v225, v80);
                v230 = vqtbl1q_s8((int8x16_t)v225, (int8x16_t)xmmword_2160EE810);
                v230.i16[3] = *(__int16 *)((char *)_X16[1].i16 + v79);
                v225 = (int16x8_t)vzip1q_s8(v230, v80);
                *(uint16x8_t *)(a18 + v221) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v229, v208, v226), v210, v225), v83), v84);
                v221 += 32;
                _X16 = (int8x16_t *)((char *)_X16 + v79);
              }
              while ((_DWORD)v221 != 128);
              goto LABEL_44;
            }
            __asm { PRFM            #0, [X16] }
            v169 = 5;
            v170 = a17;
            do
            {
              v171 = _X16;
              _X16 = (int8x16_t *)((char *)_X16 + v79);
              __asm { PRFM            #0, [X16] }
              v173 = (int8x8x2_t)*v171;
              v170[3] = vzip2q_s8(*v171, v80);
              v170 += 2;
              v174 = v80.i64[0];
              vst2_s8(v170->i8, v173);
              --v169;
            }
            while (v169 > 2);
            v175 = (int8x8x2_t)*_X16;
            v176 = vzip2q_s8(*_X16, v80);
            i8 = v170[2].i8;
            v178 = v80.i64[0];
            vst2_s8(i8, v175);
LABEL_39:
            v200 = a53;
            v170[3] = v176;
LABEL_44:
            v231 = 1;
            v232 = v166;
            while (1)
            {
              v233 = v231;
              v234 = (int16x8_t)vrhaddq_u16(v232[-16], *v232);
              v235 = (int16x8_t)vrhaddq_u16(v232[-15], v232[1]);
              v236 = (int16x8_t)vrhaddq_u16(v232[-14], v232[2]);
              v237 = (int16x8_t)vrhaddq_u16(v232[-13], v232[3]);
              if (v167)
              {
                v238 = *v200;
                v239 = v200[1];
                v240 = v200[2];
                v241 = v200[3];
                v200 += 4;
                v234 = vaddq_s16(v238, v234);
                v235 = vaddq_s16(v239, v235);
                v236 = vaddq_s16(v240, v236);
                v237 = vaddq_s16(v241, v237);
              }
              v231 = 0;
              v232 += 4;
              *v73 = vqmovun_high_s16(vqmovun_s16(v234), v235);
              *(int8x16_t *)((char *)v73 + v79) = vqmovun_high_s16(vqmovun_s16(v236), v237);
              v73 = (int8x16_t *)((char *)v73 + v72);
              if ((v233 & 1) == 0)
              {
                if (v243 + 1 != v242)
                  JUMPOUT(0x216040C30);
                JUMPOUT(0x21604B6F8);
              }
            }
          }
          _X8 = &a51->i8[v79];
          __asm { PRFM            #0, [X8] }
          v191 = *(uint8x16_t *)a51;
          v192 = 5;
          v170 = a17;
          do
          {
            _X10 = &_X16->i8[v100];
            __asm { PRFM            #0, [X10] }
            v187 = *(int8x16_t *)((char *)_X16 + v79);
            v195 = (int8x16_t)vrhaddq_u8(v191, (uint8x16_t)v187);
            v196 = v80.i64[0];
            v170[3] = vzip2q_s8(v195, v80);
            v170 += 2;
            vst2_s8(v170->i8, (int8x8x2_t)v195);
            --v192;
            _X16 = (int8x16_t *)((char *)_X16 + v79);
            v191 = (uint8x16_t)v187;
          }
          while (v192 > 2);
          v188 = *(uint8x16_t *)((char *)_X16 + v79);
        }
        v197 = (int8x16_t)vrhaddq_u8((uint8x16_t)v187, v188);
        v198 = v170[2].i8;
        v199 = v80.i64[0];
        vst2_s8(v198, (int8x8x2_t)v197);
        v176 = vzip2q_s8(v197, v80);
        goto LABEL_39;
      }
      __asm { PRFM            #0, [X26] }
      v106 = 5;
      v107 = a31;
      do
      {
        v108 = _X26;
        _X26 = (int8x16_t *)((char *)_X26 + v79);
        __asm { PRFM            #0, [X26] }
        v110 = (int8x8x2_t)*v108;
        v107[3] = vzip2q_s8(*v108, v80);
        v107 += 2;
        v111 = v80.i64[0];
        vst2_s8(v107->i8, v110);
        --v106;
      }
      while (v106 > 2);
      v112 = (int8x8x2_t)*_X26;
      v113 = vzip2q_s8(*_X26, v80);
      v114 = v107[2].i8;
      v115 = v80.i64[0];
      vst2_s8(v114, v112);
LABEL_21:
      v107[3] = v113;
      goto LABEL_26;
    }
    _X8 = &_X26->i8[v79];
    __asm { PRFM            #0, [X8] }
    v128 = *(uint8x16_t *)_X26;
    v129 = 5;
    v107 = a31;
    do
    {
      _X10 = &_X26->i8[a39];
      _X26 = (int8x16_t *)((char *)_X26 + v79);
      __asm { PRFM            #0, [X10] }
      v124 = *_X26;
      v132 = (int8x16_t)vrhaddq_u8(v128, *(uint8x16_t *)_X26);
      v133 = v80.i64[0];
      v107[3] = vzip2q_s8(v132, v80);
      v107 += 2;
      vst2_s8(v107->i8, (int8x8x2_t)v132);
      --v129;
      v128 = (uint8x16_t)v124;
    }
    while (v129 > 2);
    v125 = *(uint8x16_t *)((char *)_X26 + v79);
  }
  v134 = (int8x16_t)vrhaddq_u8((uint8x16_t)v124, v125);
  v135 = v107[2].i8;
  v136 = v80.i64[0];
  vst2_s8(v135, (int8x8x2_t)v134);
  v113 = vzip2q_s8(v134, v80);
  goto LABEL_21;
}

void sub_216043538(int8x16_t a1, int8x16_t a2, double a3, double a4, int8x16_t a5, int8x16_t a6, int8x16_t a7, int8x16_t a8)
{
  unsigned int *v8;

  sub_2160855B4((int64x2_t *)&STACK[0x240], v8, STACK[0x208], a1, a2, a3, a4, a5, a6, a7, a8);
  JUMPOUT(0x2160436D8);
}

void sub_216043704(int8x16_t a1, int8x16_t a2, int8x16_t a3, int8x16_t a4, uint16x8_t a5, uint16x8_t a6, uint16x8_t a7, uint16x8_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int64x2_t *a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,_WORD *a55,uint64_t a56,uint64_t *a57,int a58,int a59,int a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a73;
  uint64_t a74;
  uint64_t v74;
  uint64_t v75;
  int v76;
  _DWORD *v77;
  int v78;
  int v79;
  unint64_t *v80;
  unsigned __int32 *v81;
  _WORD *v82;
  _DWORD *v83;
  uint64_t v84;
  uint16x8_t v85;
  int8x16_t v86;
  int64x2_t v87;
  uint16x8_t v88;
  uint16x8_t v89;
  int16x8_t v90;
  int16x8_t v91;
  int16x8_t v92;
  int16x8_t v93;
  int64x2_t v94;
  int16x8_t v95;
  uint16x8_t v96;
  int16x8_t v97;
  int16x8_t v98;
  int16x8_t v99;

  a1.i32[0] = *v81;
  a2.i32[0] = *(unsigned __int32 *)((char *)v81 + v84);
  a3.i32[0] = *(unsigned __int32 *)((char *)v81 + v75);
  a4.i32[0] = *(unsigned __int32 *)((char *)v81 + v74);
  v87 = (int64x2_t)vzip1q_s8(a3, v86);
  v88 = (uint16x8_t)vzip1q_s64((int64x2_t)vzip1q_s8(a1, v86), (int64x2_t)vzip1q_s8(a2, v86));
  v89 = (uint16x8_t)vzip1q_s64(v87, (int64x2_t)vzip1q_s8(a4, v86));
  *(uint16x8_t *)&STACK[0x440] = v88;
  *(uint16x8_t *)&STACK[0x450] = v89;
  v88.i64[0] = STACK[0x240];
  v89.i64[0] = STACK[0x248];
  a5.i64[0] = STACK[0x250];
  a6.i64[0] = STACK[0x258];
  v87.i64[0] = STACK[0x440];
  a7.i64[0] = STACK[0x448];
  a8.i64[0] = STACK[0x450];
  v85.i64[0] = STACK[0x458];
  v90 = (int16x8_t)vrhaddq_u16(v88, (uint16x8_t)v87);
  v91 = (int16x8_t)vrhaddq_u16(v89, a7);
  v92 = (int16x8_t)vrhaddq_u16(a5, a8);
  v93 = (int16x8_t)vrhaddq_u16(a6, v85);
  if (a74)
  {
    a5.i64[0] = *v80;
    a6.i64[0] = v80[4];
    a7.i64[0] = v80[8];
    a8.i64[0] = v80[12];
    v90 = vaddq_s16(v90, (int16x8_t)a5);
    v91 = vaddq_s16(v91, (int16x8_t)a6);
    v92 = vaddq_s16(v92, (int16x8_t)a7);
    v93 = vaddq_s16(v93, (int16x8_t)a8);
  }
  *v83 = vqmovun_s16(v90).u32[0];
  *(_DWORD *)((char *)v83 + v84) = vqmovun_s16(v91).u32[0];
  *(_DWORD *)((char *)v83 + v75) = vqmovun_s16(v92).u32[0];
  *(_DWORD *)((char *)v83 + v74) = vqmovun_s16(v93).u32[0];
  sub_215FF1D58((int64x2_t *)&STACK[0x640], v82, v76, a59, v78);
  v94 = sub_215FF1D58(a42, a55, v76, a60, v79);
  v94.i64[0] = STACK[0x640];
  v95.i64[0] = STACK[0x648];
  v96.i64[0] = STACK[0x740];
  v97.i64[0] = STACK[0x748];
  v98 = (int16x8_t)vrhaddq_u16((uint16x8_t)v94, v96);
  v99 = (int16x8_t)vrhaddq_u16((uint16x8_t)v95, (uint16x8_t)v97);
  if (a73)
  {
    v95.i64[0] = *a57;
    v97.i64[0] = a57[4];
    v98 = vaddq_s16(v98, v95);
    v99 = vaddq_s16(v99, v97);
  }
  *v77 = vqmovun_s16(v98).u32[0];
  *(_DWORD *)((char *)v77 + STACK[0x210]) = vqmovun_s16(v99).u32[0];
  JUMPOUT(0x216045E48);
}

void sub_216043738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int8x16_t *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29,int8x16_t *a30,uint64_t a31,int a32,int a33,uint64_t a34,int a35,int a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int8x16_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int8x16_t *a49,uint64_t a50,int16x8_t *a51,int a52,int a53,int a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,int a63)
{
  uint64_t a65;
  uint64_t a71;
  uint64_t a72;
  uint64_t v72;
  int8x16_t *v73;
  uint64_t v74;
  int16x8_t *v75;
  uint64_t v76;
  int8x16_t *v78;
  uint64_t v79;
  uint64_t v80;
  int8x16_t v81;
  int16x8_t v82;
  int16x8_t v83;
  uint64_t v84;
  int8x16_t *v85;
  int8x16_t *v86;
  int16x8_t v87;
  int16x8_t v88;
  int16x8_t v89;
  int16x8_t v90;
  int16x8_t v91;
  int8x16_t *v92;
  int16x8_t v93;
  int16x8_t v94;
  uint64_t v95;
  int8x16_t *v96;
  int8x16_t *v97;
  int16x8_t v98;
  int16x8_t v99;
  int16x8_t v100;
  int16x8_t v101;
  int16x8_t v102;
  int8x16_t *v103;
  int16x8_t v104;
  uint16x8_t v105;
  int16x8_t v107;
  int16x8_t v108;
  uint64_t v109;
  int16x8_t v110;
  int16x8_t v111;
  int16x8_t v112;
  int16x8_t v113;
  int16x8_t v114;
  int16x8_t v115;
  int16x8_t v116;
  int16x8_t v117;
  uint64_t v118;
  uint64_t v119;
  unsigned int v125;
  int8x16_t *v126;
  int8x16_t *v127;
  int8x8x2_t v129;
  uint64_t v130;
  int8x8x2_t v131;
  int8x16_t v132;
  char *v133;
  uint64_t v134;
  int8x16_t *v136;
  unsigned int v137;
  int8x16_t v140;
  uint8x16_t v141;
  int8x16_t v142;
  int8x16_t v143;
  uint8x16_t v144;
  uint8x16_t v147;
  unsigned int v148;
  int8x16_t v151;
  uint64_t v152;
  int8x16_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  int v157;
  int8x16_t v158;
  int16x8_t v159;
  int8x16_t v160;
  int8x16_t v161;
  int16x8_t v162;
  int16x8_t v163;
  int8x16_t v164;
  int16x8_t v165;
  int8x16_t v168;
  int16x8_t v169;
  int16x8_t v170;
  int8x16_t *v171;
  int16x8_t v174;
  int8x16_t v175;
  uint64_t v176;
  int8x16_t v179;
  int16x8_t v180;
  int16x8_t v183;
  int8x16_t v184;
  uint64_t v185;
  unsigned int v187;
  int8x16_t *v188;
  int8x16_t *v189;
  int8x8x2_t v191;
  uint64_t v192;
  int8x8x2_t v193;
  int8x16_t v194;
  char *i8;
  uint64_t v196;
  int8x16_t *v198;
  unsigned int v199;
  int8x16_t v202;
  uint8x16_t v203;
  int8x16_t v204;
  int8x16_t v205;
  uint8x16_t v206;
  uint8x16_t v209;
  unsigned int v210;
  int8x16_t v213;
  uint64_t v214;
  int8x16_t v215;
  char *v216;
  uint64_t v217;
  int16x8_t *v218;
  uint64_t v219;
  int v220;
  int8x16_t v221;
  int16x8_t v222;
  int8x16_t v223;
  int8x16_t v224;
  int16x8_t v225;
  int16x8_t v226;
  int8x16_t v227;
  int16x8_t v228;
  int8x16_t v231;
  int16x8_t v232;
  int16x8_t v233;
  int8x16_t *v234;
  int16x8_t v237;
  int8x16_t v238;
  uint64_t v239;
  int8x16_t v242;
  int16x8_t v243;
  int16x8_t v244;
  int16x8_t v247;
  int8x16_t v248;
  uint64_t v249;
  int16x8_t v250;
  int16x8_t v251;
  int16x8_t v252;
  int16x8_t v253;
  int16x8_t v254;
  int16x8_t v255;
  int16x8_t v256;
  int16x8_t v257;

  v84 = 0;
  v85 = (int8x16_t *)(v76 + a24 + v80);
  v86 = (int8x16_t *)((char *)v85 + v80 + v80);
  v87 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v86 + v80), v81);
  v88 = (int16x8_t)vzip1q_s8(*v86, v81);
  v89 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v85 + v80), v81);
  v90 = (int16x8_t)vzip1q_s8(*v85, v81);
  v91 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v76 + a24), v81);
  v92 = (int8x16_t *)(a47 + a16 + a50 + a25);
  do
  {
    v93 = v90;
    v90 = v89;
    v89 = v88;
    v88 = v87;
    v87 = (int16x8_t)vzip1q_s8(*v92, v81);
    v94 = vsubq_s16(vshlq_n_s16(vaddq_s16(v90, v89), 2uLL), vaddq_s16(v93, v88));
    *(uint16x8_t *)(a1 + v84) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v91, v94), vshlq_n_s16(v94, 2uLL)), vaddq_s16(v87, v82)), v83))), (uint16x8_t)v90);
    v84 += 32;
    v92 = (int8x16_t *)((char *)v92 + v80);
    v91 = v93;
  }
  while ((_DWORD)v84 != 512);
  v95 = 0;
  v96 = (int8x16_t *)(v76 + a24 + 8 + v80);
  v97 = (int8x16_t *)((char *)v96 + v80 + v80);
  v98 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v97 + v80), v81);
  v99 = (int16x8_t)vzip1q_s8(*v97, v81);
  v100 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v96 + v80), v81);
  v101 = (int16x8_t)vzip1q_s8(*v96, v81);
  v102 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v76 + a24 + 8), v81);
  v103 = (int8x16_t *)(a47 + a12 + a50 + a25);
  v104.i64[0] = 0x20002000200020;
  v104.i64[1] = 0x20002000200020;
  v105.i64[0] = 0x5000500050005;
  v105.i64[1] = 0x5000500050005;
  _X16 = a49;
  do
  {
    v107 = v101;
    v101 = v100;
    v100 = v99;
    v99 = v98;
    v98 = (int16x8_t)vzip1q_s8(*v103, v81);
    v108 = vsubq_s16(vshlq_n_s16(vaddq_s16(v101, v100), 2uLL), vaddq_s16(v107, v99));
    *(uint16x8_t *)(v74 + v95) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v102, v108), vshlq_n_s16(v108, 2uLL)), vaddq_s16(v98, v82)), v83))), (uint16x8_t)v101);
    v95 += 32;
    v103 = (int8x16_t *)((char *)v103 + v80);
    v102 = v107;
  }
  while ((_DWORD)v95 != 512);
  v109 = 0;
  do
  {
    v110 = *(int16x8_t *)(a6 + v109 + 528);
    v111 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v109), *(uint16x8_t *)(a6 + v109 + 512));
    v112 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v109 + 16), (uint16x8_t)v110);
    v113 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v109 + 32), *(uint16x8_t *)(a6 + v109 + 544));
    v114 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v109 + 48), *(uint16x8_t *)(a6 + v109 + 560));
    if (a72)
    {
      v115 = *v75;
      v110 = v75[1];
      v116 = v75[2];
      v117 = v75[3];
      v75 += 4;
      v111 = vaddq_s16(v115, v111);
      v112 = vaddq_s16(v110, v112);
      v113 = vaddq_s16(v116, v113);
      v114 = vaddq_s16(v117, v114);
    }
    *v78 = vqmovun_high_s16(vqmovun_s16(v111), v112);
    *(int8x16_t *)((char *)v78 + v80) = vqmovun_high_s16(vqmovun_s16(v113), v114);
    v78 = (int8x16_t *)((char *)v78 + v72);
    v109 += 64;
  }
  while ((_DWORD)v109 != 512);
  if (a63 == 64)
  {
    __asm { PRFM            #0, [X26] }
    v136 = (int8x16_t *)(a43 + a15 + a65 + a14 + 16);
    v137 = 9;
    v126 = a30;
    v119 = a31;
    v118 = a38;
    do
    {
      _X11 = &v136->i8[v80];
      __asm { PRFUM           #0, [X11,#-0x10] }
      v140 = v136[-1];
      v141 = (uint8x16_t)vextq_s8(v140, v140, 2uLL);
      v141.i16[7] = v136->i16[0];
      v142 = (int8x16_t)vrhaddq_u8((uint8x16_t)v140, v141);
      v141.i64[0] = v81.i64[0];
      v126[3] = vzip2q_s8(v142, v81);
      v126 += 2;
      vst2_s8(v126->i8, *(int8x8x2_t *)((char *)&v141 - 8));
      --v137;
      v136 = (int8x16_t *)((char *)v136 + v80);
    }
    while (v137 > 2);
    v143 = v136[-1];
    v144 = (uint8x16_t)vextq_s8(v143, v143, 2uLL);
    v144.i16[7] = v136->i16[0];
  }
  else
  {
    v118 = a38;
    v119 = a31;
    if (a63 != 4)
    {
      if (a63)
      {
        v156 = 0;
        v157 = a29 * a53 - (8 * a53 + 8 * a29) + 64;
        v158 = v81;
        v158.i32[0] = v157 | (v157 << 16);
        v159 = (int16x8_t)vqtbl1q_s8(v158, a44);
        v160 = v81;
        v160.i32[0] = (8 * a53 - a29 * a53) | ((8 * a53 - a29 * a53) << 16);
        v161 = v81;
        v161.i32[0] = (8 * a29 - a29 * a53) | ((8 * a29 - a29 * a53) << 16);
        v162 = (int16x8_t)vqtbl1q_s8(v160, a44);
        v163 = (int16x8_t)vqtbl1q_s8(v161, a44);
        v164 = v81;
        v164.i32[0] = 65537 * a29 * a53;
        v165 = (int16x8_t)vqtbl1q_s8(v164, a44);
        *(int16x8_t *)(v79 - 224) = v159;
        *(int16x8_t *)(v79 - 208) = v162;
        *(int16x8_t *)(v79 - 192) = v163;
        *(int16x8_t *)(v79 - 176) = v165;
        _X9 = &_X26->i8[v80];
        __asm { PRFM            #0, [X9] }
        v110.i64[0] = _X26->i64[0];
        v168 = vqtbl1q_s8((int8x16_t)v110, (int8x16_t)xmmword_2160EE810);
        v168.i16[3] = _X26->i16[4];
        v169 = (int16x8_t)vzip1q_s8(v168, v81);
        v170 = (int16x8_t)vzip1q_s8((int8x16_t)v110, v81);
        v171 = _X26;
        do
        {
          _X11 = &v171->i8[a38];
          v171 = (int8x16_t *)((char *)v171 + v80);
          __asm { PRFM            #0, [X11] }
          v174 = vmlaq_s16(vmulq_s16(v162, v169), v159, v170);
          v169.i64[0] = v171->i64[0];
          v170 = (int16x8_t)vzip1q_s8((int8x16_t)v169, v81);
          v175 = vqtbl1q_s8((int8x16_t)v169, (int8x16_t)xmmword_2160EE810);
          v175.i16[3] = v171->i16[4];
          v169 = (int16x8_t)vzip1q_s8(v175, v81);
          *(uint16x8_t *)((char *)&STACK[0x640] + v156) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v174, v163, v170), v165, v169), v104), v105);
          v156 += 32;
        }
        while ((_DWORD)v156 != 256);
        v176 = 0;
        _X9 = &_X26->i8[v80 + 8];
        __asm { PRFM            #0, [X9] }
        v170.i64[0] = _X26->i64[1];
        v179 = vqtbl1q_s8((int8x16_t)v170, (int8x16_t)xmmword_2160EE810);
        v179.i16[3] = _X26[1].i16[0];
        v180 = (int16x8_t)vzip1q_s8(v179, v81);
        v110 = (int16x8_t)vzip1q_s8((int8x16_t)v170, v81);
        do
        {
          _X9 = &_X26->i8[a31];
          _X26 = (int8x16_t *)((char *)_X26 + v80);
          __asm { PRFM            #0, [X9] }
          v183 = vmlaq_s16(vmulq_s16(v162, v180), v159, v110);
          v180.i64[0] = _X26->i64[1];
          v110 = (int16x8_t)vzip1q_s8((int8x16_t)v180, v81);
          v184 = vqtbl1q_s8((int8x16_t)v180, (int8x16_t)xmmword_2160EE810);
          v184.i16[3] = _X26[1].i16[0];
          v180 = (int16x8_t)vzip1q_s8(v184, v81);
          *(uint16x8_t *)(a40 + v176) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v183, v163, v110), v165, v180), v104), v105);
          v176 += 32;
        }
        while ((_DWORD)v176 != 256);
LABEL_27:
        if (a36 == 64)
        {
          __asm { PRFM            #0, [X16] }
          v198 = (int8x16_t *)(a48 + a27 + a50 + a26 + 16);
          v199 = 9;
          v188 = a17;
          v185 = a71;
          do
          {
            _X11 = &v198->i8[v80];
            __asm { PRFUM           #0, [X11,#-0x10] }
            v202 = v198[-1];
            v203 = (uint8x16_t)vextq_s8(v202, v202, 2uLL);
            v203.i16[7] = v198->i16[0];
            v204 = (int8x16_t)vrhaddq_u8((uint8x16_t)v202, v203);
            v203.i64[0] = v81.i64[0];
            v188[3] = vzip2q_s8(v204, v81);
            v188 += 2;
            vst2_s8(v188->i8, *(int8x8x2_t *)((char *)&v203 - 8));
            --v199;
            v198 = (int8x16_t *)((char *)v198 + v80);
          }
          while (v199 > 2);
          v205 = v198[-1];
          v206 = (uint8x16_t)vextq_s8(v205, v205, 2uLL);
          v206.i16[7] = v198->i16[0];
        }
        else
        {
          v185 = a71;
          if (a36 != 4)
          {
            if (a36)
            {
              v219 = 0;
              v220 = a33 * a54 - (8 * a54 + 8 * a33) + 64;
              v221 = v81;
              v221.i32[0] = v220 | (v220 << 16);
              v222 = (int16x8_t)vqtbl1q_s8(v221, a44);
              v223 = v81;
              v223.i32[0] = (8 * a54 - a33 * a54) | ((8 * a54 - a33 * a54) << 16);
              v224 = v81;
              v224.i32[0] = (8 * a33 - a33 * a54) | ((8 * a33 - a33 * a54) << 16);
              v225 = (int16x8_t)vqtbl1q_s8(v223, a44);
              v226 = (int16x8_t)vqtbl1q_s8(v224, a44);
              v227 = v81;
              v227.i32[0] = 65537 * a33 * a54;
              v228 = (int16x8_t)vqtbl1q_s8(v227, a44);
              *(int16x8_t *)(v79 - 160) = v222;
              *(int16x8_t *)(v79 - 144) = v225;
              *(int16x8_t *)(v79 - 128) = v226;
              *(int16x8_t *)(v79 - 112) = v228;
              _X9 = &a49->i8[v80];
              __asm { PRFM            #0, [X9] }
              v110.i64[0] = a49->i64[0];
              v231 = vqtbl1q_s8((int8x16_t)v110, (int8x16_t)xmmword_2160EE810);
              v231.i16[3] = a49->i16[4];
              v232 = (int16x8_t)vzip1q_s8(v231, v81);
              v233 = (int16x8_t)vzip1q_s8((int8x16_t)v110, v81);
              v234 = a49;
              do
              {
                _X11 = (uint64_t)v234->i64 + v118;
                v234 = (int8x16_t *)((char *)v234 + v80);
                __asm { PRFM            #0, [X11] }
                v237 = vmlaq_s16(vmulq_s16(v225, v232), v222, v233);
                v232.i64[0] = v234->i64[0];
                v233 = (int16x8_t)vzip1q_s8((int8x16_t)v232, v81);
                v238 = vqtbl1q_s8((int8x16_t)v232, (int8x16_t)xmmword_2160EE810);
                v238.i16[3] = v234->i16[4];
                v232 = (int16x8_t)vzip1q_s8(v238, v81);
                *(uint16x8_t *)(a37 + v219) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v237, v226, v233), v228, v232), v104), v105);
                v219 += 32;
              }
              while ((_DWORD)v219 != 256);
              v239 = 0;
              _X9 = &a49->i8[v80 + 8];
              __asm { PRFM            #0, [X9] }
              v233.i64[0] = a49->i64[1];
              v242 = vqtbl1q_s8((int8x16_t)v233, (int8x16_t)xmmword_2160EE810);
              v242.i16[3] = a49[1].i16[0];
              v243 = (int16x8_t)vzip1q_s8(v242, v81);
              v244 = (int16x8_t)vzip1q_s8((int8x16_t)v233, v81);
              v218 = a51;
              do
              {
                _X9 = &_X16->i8[v119];
                __asm { PRFM            #0, [X9] }
                v247 = vmlaq_s16(vmulq_s16(v225, v243), v222, v244);
                v243.i64[0] = *(uint64_t *)((char *)&_X16->i64[1] + v80);
                v244 = (int16x8_t)vzip1q_s8((int8x16_t)v243, v81);
                v248 = vqtbl1q_s8((int8x16_t)v243, (int8x16_t)xmmword_2160EE810);
                v248.i16[3] = *(__int16 *)((char *)_X16[1].i16 + v80);
                v243 = (int16x8_t)vzip1q_s8(v248, v81);
                *(uint16x8_t *)(a18 + v239) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v247, v226, v244), v228, v243), v104), v105);
                v239 += 32;
                _X16 = (int8x16_t *)((char *)_X16 + v80);
              }
              while ((_DWORD)v239 != 256);
              goto LABEL_45;
            }
            __asm { PRFM            #0, [X16] }
            v187 = 9;
            v188 = a17;
            do
            {
              v189 = _X16;
              _X16 = (int8x16_t *)((char *)_X16 + v80);
              __asm { PRFM            #0, [X16] }
              v191 = (int8x8x2_t)*v189;
              v188[3] = vzip2q_s8(*v189, v81);
              v188 += 2;
              v192 = v81.i64[0];
              vst2_s8(v188->i8, v191);
              --v187;
            }
            while (v187 > 2);
            v193 = (int8x8x2_t)*_X16;
            v194 = vzip2q_s8(*_X16, v81);
            i8 = v188[2].i8;
            v196 = v81.i64[0];
            vst2_s8(i8, v193);
LABEL_40:
            v218 = a51;
            v188[3] = v194;
LABEL_45:
            v249 = 0;
            while (1)
            {
              v250 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x640] + v249), *(uint16x8_t *)((char *)&STACK[0x640] + v249 + 256));
              v251 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x640] + v249 + 16), *(uint16x8_t *)((char *)&STACK[0x640] + v249 + 272));
              v252 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x640] + v249 + 32), *(uint16x8_t *)((char *)&STACK[0x640] + v249 + 288));
              v253 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x640] + v249 + 48), *(uint16x8_t *)((char *)&STACK[0x640] + v249 + 304));
              if (v185)
              {
                v254 = *v218;
                v255 = v218[1];
                v256 = v218[2];
                v257 = v218[3];
                v218 += 4;
                v250 = vaddq_s16(v254, v250);
                v251 = vaddq_s16(v255, v251);
                v252 = vaddq_s16(v256, v252);
                v253 = vaddq_s16(v257, v253);
              }
              *v73 = vqmovun_high_s16(vqmovun_s16(v250), v251);
              *(int8x16_t *)((char *)v73 + v80) = vqmovun_high_s16(vqmovun_s16(v252), v253);
              v73 = (int8x16_t *)((char *)v73 + v72);
              v249 += 64;
              if ((_DWORD)v249 == 256)
                JUMPOUT(0x21604A7E4);
            }
          }
          _X8 = &a49->i8[v80];
          __asm { PRFM            #0, [X8] }
          v209 = *(uint8x16_t *)a49;
          v210 = 9;
          v188 = a17;
          do
          {
            _X10 = &_X16->i8[v118];
            __asm { PRFM            #0, [X10] }
            v205 = *(int8x16_t *)((char *)_X16 + v80);
            v213 = (int8x16_t)vrhaddq_u8(v209, (uint8x16_t)v205);
            v214 = v81.i64[0];
            v188[3] = vzip2q_s8(v213, v81);
            v188 += 2;
            vst2_s8(v188->i8, (int8x8x2_t)v213);
            --v210;
            _X16 = (int8x16_t *)((char *)_X16 + v80);
            v209 = (uint8x16_t)v205;
          }
          while (v210 > 2);
          v206 = *(uint8x16_t *)((char *)_X16 + v80);
        }
        v215 = (int8x16_t)vrhaddq_u8((uint8x16_t)v205, v206);
        v216 = v188[2].i8;
        v217 = v81.i64[0];
        vst2_s8(v216, (int8x8x2_t)v215);
        v194 = vzip2q_s8(v215, v81);
        goto LABEL_40;
      }
      __asm { PRFM            #0, [X26] }
      v125 = 9;
      v126 = a30;
      do
      {
        v127 = _X26;
        _X26 = (int8x16_t *)((char *)_X26 + v80);
        __asm { PRFM            #0, [X26] }
        v129 = (int8x8x2_t)*v127;
        v126[3] = vzip2q_s8(*v127, v81);
        v126 += 2;
        v130 = v81.i64[0];
        vst2_s8(v126->i8, v129);
        --v125;
      }
      while (v125 > 2);
      v131 = (int8x8x2_t)*_X26;
      v132 = vzip2q_s8(*_X26, v81);
      v133 = v126[2].i8;
      v134 = v81.i64[0];
      vst2_s8(v133, v131);
LABEL_22:
      v126[3] = v132;
      goto LABEL_27;
    }
    _X8 = &_X26->i8[v80];
    __asm { PRFM            #0, [X8] }
    v147 = *(uint8x16_t *)_X26;
    v148 = 9;
    v126 = a30;
    do
    {
      _X10 = &_X26->i8[a38];
      _X26 = (int8x16_t *)((char *)_X26 + v80);
      __asm { PRFM            #0, [X10] }
      v143 = *_X26;
      v151 = (int8x16_t)vrhaddq_u8(v147, *(uint8x16_t *)_X26);
      v152 = v81.i64[0];
      v126[3] = vzip2q_s8(v151, v81);
      v126 += 2;
      vst2_s8(v126->i8, (int8x8x2_t)v151);
      --v148;
      v147 = (uint8x16_t)v143;
    }
    while (v148 > 2);
    v144 = *(uint8x16_t *)((char *)_X26 + v80);
  }
  v153 = (int8x16_t)vrhaddq_u8((uint8x16_t)v143, v144);
  v154 = v126[2].i8;
  v155 = v81.i64[0];
  vst2_s8(v154, (int8x8x2_t)v153);
  v132 = vzip2q_s8(v153, v81);
  goto LABEL_22;
}

void sub_2160438D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int8x16_t *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29,int8x16_t *a30,uint64_t a31,int a32,int a33,uint64_t a34,int a35,int a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int8x16_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int8x16_t *a49,uint64_t a50,int16x8_t *a51,int a52,int a53,int a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,int a63)
{
  uint64_t a65;
  uint64_t a71;
  uint64_t a72;
  uint64_t v72;
  int8x16_t *v73;
  uint64_t v74;
  int16x8_t *v75;
  uint64_t v76;
  int8x16_t *v78;
  uint64_t v79;
  uint64_t v80;
  int8x16_t v81;
  int16x8_t v82;
  int16x8_t v83;
  uint64_t v84;
  int8x16_t *v85;
  int8x16_t *v86;
  int16x8_t v87;
  int16x8_t v88;
  int16x8_t v89;
  int16x8_t v90;
  int16x8_t v91;
  int8x16_t *v92;
  int16x8_t v93;
  char *v94;
  int16x8_t v95;
  uint64_t v96;
  uint64_t v97;
  int8x16_t *v98;
  int8x16_t *v99;
  int16x8_t v100;
  int16x8_t v101;
  int16x8_t v102;
  int16x8_t v103;
  int16x8_t v104;
  int8x16_t *v105;
  int16x8_t v106;
  uint16x8_t v107;
  int16x8_t v109;
  char *v110;
  int16x8_t v111;
  uint64_t v112;
  uint64_t v113;
  int16x8_t v114;
  int16x8_t v115;
  int16x8_t v116;
  int16x8_t v117;
  int16x8_t v118;
  int16x8_t v119;
  int16x8_t v120;
  int16x8_t v121;
  uint64_t v122;
  uint64_t v123;
  unsigned int v129;
  int8x16_t *v130;
  int8x16_t *v131;
  int8x8x2_t v133;
  uint64_t v134;
  int8x8x2_t v135;
  int8x16_t v136;
  char *v137;
  uint64_t v138;
  int8x16_t *v140;
  unsigned int v141;
  int8x16_t v144;
  uint8x16_t v145;
  int8x16_t v146;
  int8x16_t v147;
  uint8x16_t v148;
  uint8x16_t v151;
  unsigned int v152;
  int8x16_t v155;
  uint64_t v156;
  int8x16_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  int v161;
  int8x16_t v162;
  int16x8_t v163;
  int8x16_t v164;
  int8x16_t v165;
  int16x8_t v166;
  int16x8_t v167;
  int8x16_t v168;
  int16x8_t v169;
  int8x16_t v172;
  int16x8_t v173;
  int16x8_t v174;
  int8x16_t *v175;
  int16x8_t v178;
  int8x16_t v179;
  uint64_t v180;
  int8x16_t v183;
  int16x8_t v184;
  int16x8_t v187;
  int8x16_t v188;
  uint64_t v189;
  unsigned int v191;
  int8x16_t *v192;
  int8x16_t *v193;
  int8x8x2_t v195;
  uint64_t v196;
  int8x8x2_t v197;
  int8x16_t v198;
  char *i8;
  uint64_t v200;
  int8x16_t *v202;
  unsigned int v203;
  int8x16_t v206;
  uint8x16_t v207;
  int8x16_t v208;
  int8x16_t v209;
  uint8x16_t v210;
  uint8x16_t v213;
  unsigned int v214;
  int8x16_t v217;
  uint64_t v218;
  int8x16_t v219;
  char *v220;
  uint64_t v221;
  int16x8_t *v222;
  uint64_t v223;
  int v224;
  int8x16_t v225;
  int16x8_t v226;
  int8x16_t v227;
  int8x16_t v228;
  int16x8_t v229;
  int16x8_t v230;
  int8x16_t v231;
  int16x8_t v232;
  int8x16_t v235;
  int16x8_t v236;
  int16x8_t v237;
  int8x16_t *v238;
  int16x8_t v241;
  int8x16_t v242;
  uint64_t v243;
  int8x16_t v246;
  int16x8_t v247;
  int16x8_t v248;
  int16x8_t v251;
  int8x16_t v252;
  uint64_t v253;
  int16x8_t v254;
  int16x8_t v255;
  int16x8_t v256;
  int16x8_t v257;
  int16x8_t v258;
  int16x8_t v259;
  int16x8_t v260;
  int16x8_t v261;

  v84 = 0;
  v85 = (int8x16_t *)(v76 + a24 + v80);
  v86 = (int8x16_t *)((char *)v85 + v80 + v80);
  v87 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v86 + v80), v81);
  v88 = (int16x8_t)vzip1q_s8(*v86, v81);
  v89 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v85 + v80), v81);
  v90 = (int16x8_t)vzip1q_s8(*v85, v81);
  v91 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v76 + a24), v81);
  v92 = (int8x16_t *)(a47 + a16 + a50 + a25);
  do
  {
    v93 = v90;
    v90 = v89;
    v89 = v88;
    v88 = v87;
    v94 = (char *)(a1 + v84);
    v87 = (int16x8_t)vzip1q_s8(*v92, v81);
    v95 = vsubq_s16(vshlq_n_s16(vaddq_s16(v90, v89), 2uLL), vaddq_s16(v93, v88));
    *(int8x8_t *)v95.i8 = vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v91, v95), vshlq_n_s16(v95, 2uLL)), vaddq_s16(v87, v82)), v83));
    v96 = v81.i64[0];
    vst2_s8(v94, (int8x8x2_t)v95);
    v84 += 32;
    v92 = (int8x16_t *)((char *)v92 + v80);
    v91 = v93;
  }
  while ((_DWORD)v84 != 512);
  v97 = 0;
  v98 = (int8x16_t *)(v76 + a24 + 8 + v80);
  v99 = (int8x16_t *)((char *)v98 + v80 + v80);
  v100 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v99 + v80), v81);
  v101 = (int16x8_t)vzip1q_s8(*v99, v81);
  v102 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v98 + v80), v81);
  v103 = (int16x8_t)vzip1q_s8(*v98, v81);
  v104 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v76 + a24 + 8), v81);
  v105 = (int8x16_t *)(a47 + a12 + a50 + a25);
  v106.i64[0] = 0x20002000200020;
  v106.i64[1] = 0x20002000200020;
  v107.i64[0] = 0x5000500050005;
  v107.i64[1] = 0x5000500050005;
  _X16 = a49;
  do
  {
    v109 = v103;
    v103 = v102;
    v102 = v101;
    v101 = v100;
    v110 = (char *)(v74 + v97);
    v100 = (int16x8_t)vzip1q_s8(*v105, v81);
    v111 = vsubq_s16(vshlq_n_s16(vaddq_s16(v103, v102), 2uLL), vaddq_s16(v109, v101));
    *(int8x8_t *)v111.i8 = vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v104, v111), vshlq_n_s16(v111, 2uLL)), vaddq_s16(v100, v82)), v83));
    v112 = v81.i64[0];
    vst2_s8(v110, (int8x8x2_t)v111);
    v97 += 32;
    v105 = (int8x16_t *)((char *)v105 + v80);
    v104 = v109;
  }
  while ((_DWORD)v97 != 512);
  v113 = 0;
  do
  {
    v114 = *(int16x8_t *)(a6 + v113 + 528);
    v115 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v113), *(uint16x8_t *)(a6 + v113 + 512));
    v116 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v113 + 16), (uint16x8_t)v114);
    v117 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v113 + 32), *(uint16x8_t *)(a6 + v113 + 544));
    v118 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v113 + 48), *(uint16x8_t *)(a6 + v113 + 560));
    if (a72)
    {
      v119 = *v75;
      v114 = v75[1];
      v120 = v75[2];
      v121 = v75[3];
      v75 += 4;
      v115 = vaddq_s16(v119, v115);
      v116 = vaddq_s16(v114, v116);
      v117 = vaddq_s16(v120, v117);
      v118 = vaddq_s16(v121, v118);
    }
    *v78 = vqmovun_high_s16(vqmovun_s16(v115), v116);
    *(int8x16_t *)((char *)v78 + v80) = vqmovun_high_s16(vqmovun_s16(v117), v118);
    v78 = (int8x16_t *)((char *)v78 + v72);
    v113 += 64;
  }
  while ((_DWORD)v113 != 512);
  if (a63 == 64)
  {
    __asm { PRFM            #0, [X26] }
    v140 = (int8x16_t *)(a43 + a15 + a65 + a14 + 16);
    v141 = 9;
    v130 = a30;
    v123 = a31;
    v122 = a38;
    do
    {
      _X11 = &v140->i8[v80];
      __asm { PRFUM           #0, [X11,#-0x10] }
      v144 = v140[-1];
      v145 = (uint8x16_t)vextq_s8(v144, v144, 2uLL);
      v145.i16[7] = v140->i16[0];
      v146 = (int8x16_t)vrhaddq_u8((uint8x16_t)v144, v145);
      v145.i64[0] = v81.i64[0];
      v130[3] = vzip2q_s8(v146, v81);
      v130 += 2;
      vst2_s8(v130->i8, *(int8x8x2_t *)((char *)&v145 - 8));
      --v141;
      v140 = (int8x16_t *)((char *)v140 + v80);
    }
    while (v141 > 2);
    v147 = v140[-1];
    v148 = (uint8x16_t)vextq_s8(v147, v147, 2uLL);
    v148.i16[7] = v140->i16[0];
  }
  else
  {
    v122 = a38;
    v123 = a31;
    if (a63 != 4)
    {
      if (a63)
      {
        v160 = 0;
        v161 = a29 * a53 - (8 * a53 + 8 * a29) + 64;
        v162 = v81;
        v162.i32[0] = v161 | (v161 << 16);
        v163 = (int16x8_t)vqtbl1q_s8(v162, a44);
        v164 = v81;
        v164.i32[0] = (8 * a53 - a29 * a53) | ((8 * a53 - a29 * a53) << 16);
        v165 = v81;
        v165.i32[0] = (8 * a29 - a29 * a53) | ((8 * a29 - a29 * a53) << 16);
        v166 = (int16x8_t)vqtbl1q_s8(v164, a44);
        v167 = (int16x8_t)vqtbl1q_s8(v165, a44);
        v168 = v81;
        v168.i32[0] = 65537 * a29 * a53;
        v169 = (int16x8_t)vqtbl1q_s8(v168, a44);
        *(int16x8_t *)(v79 - 224) = v163;
        *(int16x8_t *)(v79 - 208) = v166;
        *(int16x8_t *)(v79 - 192) = v167;
        *(int16x8_t *)(v79 - 176) = v169;
        _X9 = &_X26->i8[v80];
        __asm { PRFM            #0, [X9] }
        v114.i64[0] = _X26->i64[0];
        v172 = vqtbl1q_s8((int8x16_t)v114, (int8x16_t)xmmword_2160EE810);
        v172.i16[3] = _X26->i16[4];
        v173 = (int16x8_t)vzip1q_s8(v172, v81);
        v174 = (int16x8_t)vzip1q_s8((int8x16_t)v114, v81);
        v175 = _X26;
        do
        {
          _X11 = &v175->i8[a38];
          v175 = (int8x16_t *)((char *)v175 + v80);
          __asm { PRFM            #0, [X11] }
          v178 = vmlaq_s16(vmulq_s16(v166, v173), v163, v174);
          v173.i64[0] = v175->i64[0];
          v174 = (int16x8_t)vzip1q_s8((int8x16_t)v173, v81);
          v179 = vqtbl1q_s8((int8x16_t)v173, (int8x16_t)xmmword_2160EE810);
          v179.i16[3] = v175->i16[4];
          v173 = (int16x8_t)vzip1q_s8(v179, v81);
          *(uint16x8_t *)((char *)&STACK[0x640] + v160) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v178, v167, v174), v169, v173), v106), v107);
          v160 += 32;
        }
        while ((_DWORD)v160 != 256);
        v180 = 0;
        _X9 = &_X26->i8[v80 + 8];
        __asm { PRFM            #0, [X9] }
        v174.i64[0] = _X26->i64[1];
        v183 = vqtbl1q_s8((int8x16_t)v174, (int8x16_t)xmmword_2160EE810);
        v183.i16[3] = _X26[1].i16[0];
        v184 = (int16x8_t)vzip1q_s8(v183, v81);
        v114 = (int16x8_t)vzip1q_s8((int8x16_t)v174, v81);
        do
        {
          _X9 = &_X26->i8[a31];
          _X26 = (int8x16_t *)((char *)_X26 + v80);
          __asm { PRFM            #0, [X9] }
          v187 = vmlaq_s16(vmulq_s16(v166, v184), v163, v114);
          v184.i64[0] = _X26->i64[1];
          v114 = (int16x8_t)vzip1q_s8((int8x16_t)v184, v81);
          v188 = vqtbl1q_s8((int8x16_t)v184, (int8x16_t)xmmword_2160EE810);
          v188.i16[3] = _X26[1].i16[0];
          v184 = (int16x8_t)vzip1q_s8(v188, v81);
          *(uint16x8_t *)(a40 + v180) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v187, v167, v114), v169, v184), v106), v107);
          v180 += 32;
        }
        while ((_DWORD)v180 != 256);
LABEL_27:
        if (a36 == 64)
        {
          __asm { PRFM            #0, [X16] }
          v202 = (int8x16_t *)(a48 + a27 + a50 + a26 + 16);
          v203 = 9;
          v192 = a17;
          v189 = a71;
          do
          {
            _X11 = &v202->i8[v80];
            __asm { PRFUM           #0, [X11,#-0x10] }
            v206 = v202[-1];
            v207 = (uint8x16_t)vextq_s8(v206, v206, 2uLL);
            v207.i16[7] = v202->i16[0];
            v208 = (int8x16_t)vrhaddq_u8((uint8x16_t)v206, v207);
            v207.i64[0] = v81.i64[0];
            v192[3] = vzip2q_s8(v208, v81);
            v192 += 2;
            vst2_s8(v192->i8, *(int8x8x2_t *)((char *)&v207 - 8));
            --v203;
            v202 = (int8x16_t *)((char *)v202 + v80);
          }
          while (v203 > 2);
          v209 = v202[-1];
          v210 = (uint8x16_t)vextq_s8(v209, v209, 2uLL);
          v210.i16[7] = v202->i16[0];
        }
        else
        {
          v189 = a71;
          if (a36 != 4)
          {
            if (a36)
            {
              v223 = 0;
              v224 = a33 * a54 - (8 * a54 + 8 * a33) + 64;
              v225 = v81;
              v225.i32[0] = v224 | (v224 << 16);
              v226 = (int16x8_t)vqtbl1q_s8(v225, a44);
              v227 = v81;
              v227.i32[0] = (8 * a54 - a33 * a54) | ((8 * a54 - a33 * a54) << 16);
              v228 = v81;
              v228.i32[0] = (8 * a33 - a33 * a54) | ((8 * a33 - a33 * a54) << 16);
              v229 = (int16x8_t)vqtbl1q_s8(v227, a44);
              v230 = (int16x8_t)vqtbl1q_s8(v228, a44);
              v231 = v81;
              v231.i32[0] = 65537 * a33 * a54;
              v232 = (int16x8_t)vqtbl1q_s8(v231, a44);
              *(int16x8_t *)(v79 - 160) = v226;
              *(int16x8_t *)(v79 - 144) = v229;
              *(int16x8_t *)(v79 - 128) = v230;
              *(int16x8_t *)(v79 - 112) = v232;
              _X9 = &a49->i8[v80];
              __asm { PRFM            #0, [X9] }
              v114.i64[0] = a49->i64[0];
              v235 = vqtbl1q_s8((int8x16_t)v114, (int8x16_t)xmmword_2160EE810);
              v235.i16[3] = a49->i16[4];
              v236 = (int16x8_t)vzip1q_s8(v235, v81);
              v237 = (int16x8_t)vzip1q_s8((int8x16_t)v114, v81);
              v238 = a49;
              do
              {
                _X11 = (uint64_t)v238->i64 + v122;
                v238 = (int8x16_t *)((char *)v238 + v80);
                __asm { PRFM            #0, [X11] }
                v241 = vmlaq_s16(vmulq_s16(v229, v236), v226, v237);
                v236.i64[0] = v238->i64[0];
                v237 = (int16x8_t)vzip1q_s8((int8x16_t)v236, v81);
                v242 = vqtbl1q_s8((int8x16_t)v236, (int8x16_t)xmmword_2160EE810);
                v242.i16[3] = v238->i16[4];
                v236 = (int16x8_t)vzip1q_s8(v242, v81);
                *(uint16x8_t *)(a37 + v223) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v241, v230, v237), v232, v236), v106), v107);
                v223 += 32;
              }
              while ((_DWORD)v223 != 256);
              v243 = 0;
              _X9 = &a49->i8[v80 + 8];
              __asm { PRFM            #0, [X9] }
              v237.i64[0] = a49->i64[1];
              v246 = vqtbl1q_s8((int8x16_t)v237, (int8x16_t)xmmword_2160EE810);
              v246.i16[3] = a49[1].i16[0];
              v247 = (int16x8_t)vzip1q_s8(v246, v81);
              v248 = (int16x8_t)vzip1q_s8((int8x16_t)v237, v81);
              v222 = a51;
              do
              {
                _X9 = &_X16->i8[v123];
                __asm { PRFM            #0, [X9] }
                v251 = vmlaq_s16(vmulq_s16(v229, v247), v226, v248);
                v247.i64[0] = *(uint64_t *)((char *)&_X16->i64[1] + v80);
                v248 = (int16x8_t)vzip1q_s8((int8x16_t)v247, v81);
                v252 = vqtbl1q_s8((int8x16_t)v247, (int8x16_t)xmmword_2160EE810);
                v252.i16[3] = *(__int16 *)((char *)_X16[1].i16 + v80);
                v247 = (int16x8_t)vzip1q_s8(v252, v81);
                *(uint16x8_t *)(a18 + v243) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v251, v230, v248), v232, v247), v106), v107);
                v243 += 32;
                _X16 = (int8x16_t *)((char *)_X16 + v80);
              }
              while ((_DWORD)v243 != 256);
              goto LABEL_45;
            }
            __asm { PRFM            #0, [X16] }
            v191 = 9;
            v192 = a17;
            do
            {
              v193 = _X16;
              _X16 = (int8x16_t *)((char *)_X16 + v80);
              __asm { PRFM            #0, [X16] }
              v195 = (int8x8x2_t)*v193;
              v192[3] = vzip2q_s8(*v193, v81);
              v192 += 2;
              v196 = v81.i64[0];
              vst2_s8(v192->i8, v195);
              --v191;
            }
            while (v191 > 2);
            v197 = (int8x8x2_t)*_X16;
            v198 = vzip2q_s8(*_X16, v81);
            i8 = v192[2].i8;
            v200 = v81.i64[0];
            vst2_s8(i8, v197);
LABEL_40:
            v222 = a51;
            v192[3] = v198;
LABEL_45:
            v253 = 0;
            while (1)
            {
              v254 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x640] + v253), *(uint16x8_t *)((char *)&STACK[0x640] + v253 + 256));
              v255 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x640] + v253 + 16), *(uint16x8_t *)((char *)&STACK[0x640] + v253 + 272));
              v256 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x640] + v253 + 32), *(uint16x8_t *)((char *)&STACK[0x640] + v253 + 288));
              v257 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x640] + v253 + 48), *(uint16x8_t *)((char *)&STACK[0x640] + v253 + 304));
              if (v189)
              {
                v258 = *v222;
                v259 = v222[1];
                v260 = v222[2];
                v261 = v222[3];
                v222 += 4;
                v254 = vaddq_s16(v258, v254);
                v255 = vaddq_s16(v259, v255);
                v256 = vaddq_s16(v260, v256);
                v257 = vaddq_s16(v261, v257);
              }
              *v73 = vqmovun_high_s16(vqmovun_s16(v254), v255);
              *(int8x16_t *)((char *)v73 + v80) = vqmovun_high_s16(vqmovun_s16(v256), v257);
              v73 = (int8x16_t *)((char *)v73 + v72);
              v253 += 64;
              if ((_DWORD)v253 == 256)
                JUMPOUT(0x21604A7E4);
            }
          }
          _X8 = &a49->i8[v80];
          __asm { PRFM            #0, [X8] }
          v213 = *(uint8x16_t *)a49;
          v214 = 9;
          v192 = a17;
          do
          {
            _X10 = &_X16->i8[v122];
            __asm { PRFM            #0, [X10] }
            v209 = *(int8x16_t *)((char *)_X16 + v80);
            v217 = (int8x16_t)vrhaddq_u8(v213, (uint8x16_t)v209);
            v218 = v81.i64[0];
            v192[3] = vzip2q_s8(v217, v81);
            v192 += 2;
            vst2_s8(v192->i8, (int8x8x2_t)v217);
            --v214;
            _X16 = (int8x16_t *)((char *)_X16 + v80);
            v213 = (uint8x16_t)v209;
          }
          while (v214 > 2);
          v210 = *(uint8x16_t *)((char *)_X16 + v80);
        }
        v219 = (int8x16_t)vrhaddq_u8((uint8x16_t)v209, v210);
        v220 = v192[2].i8;
        v221 = v81.i64[0];
        vst2_s8(v220, (int8x8x2_t)v219);
        v198 = vzip2q_s8(v219, v81);
        goto LABEL_40;
      }
      __asm { PRFM            #0, [X26] }
      v129 = 9;
      v130 = a30;
      do
      {
        v131 = _X26;
        _X26 = (int8x16_t *)((char *)_X26 + v80);
        __asm { PRFM            #0, [X26] }
        v133 = (int8x8x2_t)*v131;
        v130[3] = vzip2q_s8(*v131, v81);
        v130 += 2;
        v134 = v81.i64[0];
        vst2_s8(v130->i8, v133);
        --v129;
      }
      while (v129 > 2);
      v135 = (int8x8x2_t)*_X26;
      v136 = vzip2q_s8(*_X26, v81);
      v137 = v130[2].i8;
      v138 = v81.i64[0];
      vst2_s8(v137, v135);
LABEL_22:
      v130[3] = v136;
      goto LABEL_27;
    }
    _X8 = &_X26->i8[v80];
    __asm { PRFM            #0, [X8] }
    v151 = *(uint8x16_t *)_X26;
    v152 = 9;
    v130 = a30;
    do
    {
      _X10 = &_X26->i8[a38];
      _X26 = (int8x16_t *)((char *)_X26 + v80);
      __asm { PRFM            #0, [X10] }
      v147 = *_X26;
      v155 = (int8x16_t)vrhaddq_u8(v151, *(uint8x16_t *)_X26);
      v156 = v81.i64[0];
      v130[3] = vzip2q_s8(v155, v81);
      v130 += 2;
      vst2_s8(v130->i8, (int8x8x2_t)v155);
      --v152;
      v151 = (uint8x16_t)v147;
    }
    while (v152 > 2);
    v148 = *(uint8x16_t *)((char *)_X26 + v80);
  }
  v157 = (int8x16_t)vrhaddq_u8((uint8x16_t)v147, v148);
  v158 = v130[2].i8;
  v159 = v81.i64[0];
  vst2_s8(v158, (int8x8x2_t)v157);
  v136 = vzip2q_s8(v157, v81);
  goto LABEL_22;
}

void sub_216043A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int8x16_t *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29,int8x16_t *a30,uint64_t a31,int a32,int a33,uint64_t a34,int a35,int a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int8x16_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int8x16_t *a49,uint64_t a50,int16x8_t *a51,int a52,int a53,int a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,int a63)
{
  uint64_t a65;
  uint64_t a71;
  uint64_t a72;
  uint64_t v72;
  int8x16_t *v73;
  uint64_t v74;
  int16x8_t *v75;
  uint64_t v76;
  int8x16_t *v78;
  uint64_t v79;
  uint64_t v80;
  int8x16_t v81;
  int16x8_t v82;
  int16x8_t v83;
  uint64_t v84;
  int8x16_t *v85;
  int8x16_t *v86;
  int16x8_t v87;
  int16x8_t v88;
  int16x8_t v89;
  int16x8_t v90;
  int16x8_t v91;
  int8x16_t *v92;
  int16x8_t v93;
  int16x8_t v94;
  uint64_t v95;
  int8x16_t *v96;
  int8x16_t *v97;
  int16x8_t v98;
  int16x8_t v99;
  int16x8_t v100;
  int16x8_t v101;
  int16x8_t v102;
  int8x16_t *v103;
  int16x8_t v104;
  uint16x8_t v105;
  int16x8_t v107;
  int16x8_t v108;
  uint64_t v109;
  int16x8_t v110;
  int16x8_t v111;
  int16x8_t v112;
  int16x8_t v113;
  int16x8_t v114;
  int16x8_t v115;
  int16x8_t v116;
  int16x8_t v117;
  uint64_t v118;
  uint64_t v119;
  unsigned int v125;
  int8x16_t *v126;
  int8x16_t *v127;
  int8x8x2_t v129;
  uint64_t v130;
  int8x8x2_t v131;
  int8x16_t v132;
  char *v133;
  uint64_t v134;
  int8x16_t *v136;
  unsigned int v137;
  int8x16_t v140;
  uint8x16_t v141;
  int8x16_t v142;
  int8x16_t v143;
  uint8x16_t v144;
  uint8x16_t v147;
  unsigned int v148;
  int8x16_t v151;
  uint64_t v152;
  int8x16_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  int v157;
  int8x16_t v158;
  int16x8_t v159;
  int8x16_t v160;
  int8x16_t v161;
  int16x8_t v162;
  int16x8_t v163;
  int8x16_t v164;
  int16x8_t v165;
  int8x16_t v168;
  int16x8_t v169;
  int16x8_t v170;
  int8x16_t *v171;
  int16x8_t v174;
  int8x16_t v175;
  uint64_t v176;
  int8x16_t v179;
  int16x8_t v180;
  int16x8_t v183;
  int8x16_t v184;
  uint64_t v185;
  unsigned int v187;
  int8x16_t *v188;
  int8x16_t *v189;
  int8x8x2_t v191;
  uint64_t v192;
  int8x8x2_t v193;
  int8x16_t v194;
  char *i8;
  uint64_t v196;
  int8x16_t *v198;
  unsigned int v199;
  int8x16_t v202;
  uint8x16_t v203;
  int8x16_t v204;
  int8x16_t v205;
  uint8x16_t v206;
  uint8x16_t v209;
  unsigned int v210;
  int8x16_t v213;
  uint64_t v214;
  int8x16_t v215;
  char *v216;
  uint64_t v217;
  int16x8_t *v218;
  uint64_t v219;
  int v220;
  int8x16_t v221;
  int16x8_t v222;
  int8x16_t v223;
  int8x16_t v224;
  int16x8_t v225;
  int16x8_t v226;
  int8x16_t v227;
  int16x8_t v228;
  int8x16_t v231;
  int16x8_t v232;
  int16x8_t v233;
  int8x16_t *v234;
  int16x8_t v237;
  int8x16_t v238;
  uint64_t v239;
  int8x16_t v242;
  int16x8_t v243;
  int16x8_t v244;
  int16x8_t v247;
  int8x16_t v248;
  uint64_t v249;
  int16x8_t v250;
  int16x8_t v251;
  int16x8_t v252;
  int16x8_t v253;
  int16x8_t v254;
  int16x8_t v255;
  int16x8_t v256;
  int16x8_t v257;

  v84 = 0;
  v85 = (int8x16_t *)(v76 + a24 + v80);
  v86 = (int8x16_t *)((char *)v85 + v80 + v80);
  v87 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v86 + v80), v81);
  v88 = (int16x8_t)vzip1q_s8(*v86, v81);
  v89 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v85 + v80), v81);
  v90 = (int16x8_t)vzip1q_s8(*v85, v81);
  v91 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v76 + a24), v81);
  v92 = (int8x16_t *)(a47 + a16 + a50 + a25);
  do
  {
    v93 = v90;
    v90 = v89;
    v89 = v88;
    v88 = v87;
    v87 = (int16x8_t)vzip1q_s8(*v92, v81);
    v94 = vsubq_s16(vshlq_n_s16(vaddq_s16(v90, v89), 2uLL), vaddq_s16(v93, v88));
    *(uint16x8_t *)(a1 + v84) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v91, v94), vshlq_n_s16(v94, 2uLL)), vaddq_s16(v87, v82)), v83))), (uint16x8_t)v89);
    v84 += 32;
    v92 = (int8x16_t *)((char *)v92 + v80);
    v91 = v93;
  }
  while ((_DWORD)v84 != 512);
  v95 = 0;
  v96 = (int8x16_t *)(v76 + a24 + 8 + v80);
  v97 = (int8x16_t *)((char *)v96 + v80 + v80);
  v98 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v97 + v80), v81);
  v99 = (int16x8_t)vzip1q_s8(*v97, v81);
  v100 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v96 + v80), v81);
  v101 = (int16x8_t)vzip1q_s8(*v96, v81);
  v102 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v76 + a24 + 8), v81);
  v103 = (int8x16_t *)(a47 + a12 + a50 + a25);
  v104.i64[0] = 0x20002000200020;
  v104.i64[1] = 0x20002000200020;
  v105.i64[0] = 0x5000500050005;
  v105.i64[1] = 0x5000500050005;
  _X16 = a49;
  do
  {
    v107 = v101;
    v101 = v100;
    v100 = v99;
    v99 = v98;
    v98 = (int16x8_t)vzip1q_s8(*v103, v81);
    v108 = vsubq_s16(vshlq_n_s16(vaddq_s16(v101, v100), 2uLL), vaddq_s16(v107, v99));
    *(uint16x8_t *)(v74 + v95) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v102, v108), vshlq_n_s16(v108, 2uLL)), vaddq_s16(v98, v82)), v83))), (uint16x8_t)v100);
    v95 += 32;
    v103 = (int8x16_t *)((char *)v103 + v80);
    v102 = v107;
  }
  while ((_DWORD)v95 != 512);
  v109 = 0;
  do
  {
    v110 = *(int16x8_t *)(a6 + v109 + 528);
    v111 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v109), *(uint16x8_t *)(a6 + v109 + 512));
    v112 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v109 + 16), (uint16x8_t)v110);
    v113 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v109 + 32), *(uint16x8_t *)(a6 + v109 + 544));
    v114 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v109 + 48), *(uint16x8_t *)(a6 + v109 + 560));
    if (a72)
    {
      v115 = *v75;
      v110 = v75[1];
      v116 = v75[2];
      v117 = v75[3];
      v75 += 4;
      v111 = vaddq_s16(v115, v111);
      v112 = vaddq_s16(v110, v112);
      v113 = vaddq_s16(v116, v113);
      v114 = vaddq_s16(v117, v114);
    }
    *v78 = vqmovun_high_s16(vqmovun_s16(v111), v112);
    *(int8x16_t *)((char *)v78 + v80) = vqmovun_high_s16(vqmovun_s16(v113), v114);
    v78 = (int8x16_t *)((char *)v78 + v72);
    v109 += 64;
  }
  while ((_DWORD)v109 != 512);
  if (a63 == 64)
  {
    __asm { PRFM            #0, [X26] }
    v136 = (int8x16_t *)(a43 + a15 + a65 + a14 + 16);
    v137 = 9;
    v126 = a30;
    v119 = a31;
    v118 = a38;
    do
    {
      _X11 = &v136->i8[v80];
      __asm { PRFUM           #0, [X11,#-0x10] }
      v140 = v136[-1];
      v141 = (uint8x16_t)vextq_s8(v140, v140, 2uLL);
      v141.i16[7] = v136->i16[0];
      v142 = (int8x16_t)vrhaddq_u8((uint8x16_t)v140, v141);
      v141.i64[0] = v81.i64[0];
      v126[3] = vzip2q_s8(v142, v81);
      v126 += 2;
      vst2_s8(v126->i8, *(int8x8x2_t *)((char *)&v141 - 8));
      --v137;
      v136 = (int8x16_t *)((char *)v136 + v80);
    }
    while (v137 > 2);
    v143 = v136[-1];
    v144 = (uint8x16_t)vextq_s8(v143, v143, 2uLL);
    v144.i16[7] = v136->i16[0];
  }
  else
  {
    v118 = a38;
    v119 = a31;
    if (a63 != 4)
    {
      if (a63)
      {
        v156 = 0;
        v157 = a29 * a53 - (8 * a53 + 8 * a29) + 64;
        v158 = v81;
        v158.i32[0] = v157 | (v157 << 16);
        v159 = (int16x8_t)vqtbl1q_s8(v158, a44);
        v160 = v81;
        v160.i32[0] = (8 * a53 - a29 * a53) | ((8 * a53 - a29 * a53) << 16);
        v161 = v81;
        v161.i32[0] = (8 * a29 - a29 * a53) | ((8 * a29 - a29 * a53) << 16);
        v162 = (int16x8_t)vqtbl1q_s8(v160, a44);
        v163 = (int16x8_t)vqtbl1q_s8(v161, a44);
        v164 = v81;
        v164.i32[0] = 65537 * a29 * a53;
        v165 = (int16x8_t)vqtbl1q_s8(v164, a44);
        *(int16x8_t *)(v79 - 224) = v159;
        *(int16x8_t *)(v79 - 208) = v162;
        *(int16x8_t *)(v79 - 192) = v163;
        *(int16x8_t *)(v79 - 176) = v165;
        _X9 = &_X26->i8[v80];
        __asm { PRFM            #0, [X9] }
        v110.i64[0] = _X26->i64[0];
        v168 = vqtbl1q_s8((int8x16_t)v110, (int8x16_t)xmmword_2160EE810);
        v168.i16[3] = _X26->i16[4];
        v169 = (int16x8_t)vzip1q_s8(v168, v81);
        v170 = (int16x8_t)vzip1q_s8((int8x16_t)v110, v81);
        v171 = _X26;
        do
        {
          _X11 = &v171->i8[a38];
          v171 = (int8x16_t *)((char *)v171 + v80);
          __asm { PRFM            #0, [X11] }
          v174 = vmlaq_s16(vmulq_s16(v162, v169), v159, v170);
          v169.i64[0] = v171->i64[0];
          v170 = (int16x8_t)vzip1q_s8((int8x16_t)v169, v81);
          v175 = vqtbl1q_s8((int8x16_t)v169, (int8x16_t)xmmword_2160EE810);
          v175.i16[3] = v171->i16[4];
          v169 = (int16x8_t)vzip1q_s8(v175, v81);
          *(uint16x8_t *)((char *)&STACK[0x640] + v156) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v174, v163, v170), v165, v169), v104), v105);
          v156 += 32;
        }
        while ((_DWORD)v156 != 256);
        v176 = 0;
        _X9 = &_X26->i8[v80 + 8];
        __asm { PRFM            #0, [X9] }
        v170.i64[0] = _X26->i64[1];
        v179 = vqtbl1q_s8((int8x16_t)v170, (int8x16_t)xmmword_2160EE810);
        v179.i16[3] = _X26[1].i16[0];
        v180 = (int16x8_t)vzip1q_s8(v179, v81);
        v110 = (int16x8_t)vzip1q_s8((int8x16_t)v170, v81);
        do
        {
          _X9 = &_X26->i8[a31];
          _X26 = (int8x16_t *)((char *)_X26 + v80);
          __asm { PRFM            #0, [X9] }
          v183 = vmlaq_s16(vmulq_s16(v162, v180), v159, v110);
          v180.i64[0] = _X26->i64[1];
          v110 = (int16x8_t)vzip1q_s8((int8x16_t)v180, v81);
          v184 = vqtbl1q_s8((int8x16_t)v180, (int8x16_t)xmmword_2160EE810);
          v184.i16[3] = _X26[1].i16[0];
          v180 = (int16x8_t)vzip1q_s8(v184, v81);
          *(uint16x8_t *)(a40 + v176) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v183, v163, v110), v165, v180), v104), v105);
          v176 += 32;
        }
        while ((_DWORD)v176 != 256);
LABEL_27:
        if (a36 == 64)
        {
          __asm { PRFM            #0, [X16] }
          v198 = (int8x16_t *)(a48 + a27 + a50 + a26 + 16);
          v199 = 9;
          v188 = a17;
          v185 = a71;
          do
          {
            _X11 = &v198->i8[v80];
            __asm { PRFUM           #0, [X11,#-0x10] }
            v202 = v198[-1];
            v203 = (uint8x16_t)vextq_s8(v202, v202, 2uLL);
            v203.i16[7] = v198->i16[0];
            v204 = (int8x16_t)vrhaddq_u8((uint8x16_t)v202, v203);
            v203.i64[0] = v81.i64[0];
            v188[3] = vzip2q_s8(v204, v81);
            v188 += 2;
            vst2_s8(v188->i8, *(int8x8x2_t *)((char *)&v203 - 8));
            --v199;
            v198 = (int8x16_t *)((char *)v198 + v80);
          }
          while (v199 > 2);
          v205 = v198[-1];
          v206 = (uint8x16_t)vextq_s8(v205, v205, 2uLL);
          v206.i16[7] = v198->i16[0];
        }
        else
        {
          v185 = a71;
          if (a36 != 4)
          {
            if (a36)
            {
              v219 = 0;
              v220 = a33 * a54 - (8 * a54 + 8 * a33) + 64;
              v221 = v81;
              v221.i32[0] = v220 | (v220 << 16);
              v222 = (int16x8_t)vqtbl1q_s8(v221, a44);
              v223 = v81;
              v223.i32[0] = (8 * a54 - a33 * a54) | ((8 * a54 - a33 * a54) << 16);
              v224 = v81;
              v224.i32[0] = (8 * a33 - a33 * a54) | ((8 * a33 - a33 * a54) << 16);
              v225 = (int16x8_t)vqtbl1q_s8(v223, a44);
              v226 = (int16x8_t)vqtbl1q_s8(v224, a44);
              v227 = v81;
              v227.i32[0] = 65537 * a33 * a54;
              v228 = (int16x8_t)vqtbl1q_s8(v227, a44);
              *(int16x8_t *)(v79 - 160) = v222;
              *(int16x8_t *)(v79 - 144) = v225;
              *(int16x8_t *)(v79 - 128) = v226;
              *(int16x8_t *)(v79 - 112) = v228;
              _X9 = &a49->i8[v80];
              __asm { PRFM            #0, [X9] }
              v110.i64[0] = a49->i64[0];
              v231 = vqtbl1q_s8((int8x16_t)v110, (int8x16_t)xmmword_2160EE810);
              v231.i16[3] = a49->i16[4];
              v232 = (int16x8_t)vzip1q_s8(v231, v81);
              v233 = (int16x8_t)vzip1q_s8((int8x16_t)v110, v81);
              v234 = a49;
              do
              {
                _X11 = (uint64_t)v234->i64 + v118;
                v234 = (int8x16_t *)((char *)v234 + v80);
                __asm { PRFM            #0, [X11] }
                v237 = vmlaq_s16(vmulq_s16(v225, v232), v222, v233);
                v232.i64[0] = v234->i64[0];
                v233 = (int16x8_t)vzip1q_s8((int8x16_t)v232, v81);
                v238 = vqtbl1q_s8((int8x16_t)v232, (int8x16_t)xmmword_2160EE810);
                v238.i16[3] = v234->i16[4];
                v232 = (int16x8_t)vzip1q_s8(v238, v81);
                *(uint16x8_t *)(a37 + v219) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v237, v226, v233), v228, v232), v104), v105);
                v219 += 32;
              }
              while ((_DWORD)v219 != 256);
              v239 = 0;
              _X9 = &a49->i8[v80 + 8];
              __asm { PRFM            #0, [X9] }
              v233.i64[0] = a49->i64[1];
              v242 = vqtbl1q_s8((int8x16_t)v233, (int8x16_t)xmmword_2160EE810);
              v242.i16[3] = a49[1].i16[0];
              v243 = (int16x8_t)vzip1q_s8(v242, v81);
              v244 = (int16x8_t)vzip1q_s8((int8x16_t)v233, v81);
              v218 = a51;
              do
              {
                _X9 = &_X16->i8[v119];
                __asm { PRFM            #0, [X9] }
                v247 = vmlaq_s16(vmulq_s16(v225, v243), v222, v244);
                v243.i64[0] = *(uint64_t *)((char *)&_X16->i64[1] + v80);
                v244 = (int16x8_t)vzip1q_s8((int8x16_t)v243, v81);
                v248 = vqtbl1q_s8((int8x16_t)v243, (int8x16_t)xmmword_2160EE810);
                v248.i16[3] = *(__int16 *)((char *)_X16[1].i16 + v80);
                v243 = (int16x8_t)vzip1q_s8(v248, v81);
                *(uint16x8_t *)(a18 + v239) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v247, v226, v244), v228, v243), v104), v105);
                v239 += 32;
                _X16 = (int8x16_t *)((char *)_X16 + v80);
              }
              while ((_DWORD)v239 != 256);
              goto LABEL_45;
            }
            __asm { PRFM            #0, [X16] }
            v187 = 9;
            v188 = a17;
            do
            {
              v189 = _X16;
              _X16 = (int8x16_t *)((char *)_X16 + v80);
              __asm { PRFM            #0, [X16] }
              v191 = (int8x8x2_t)*v189;
              v188[3] = vzip2q_s8(*v189, v81);
              v188 += 2;
              v192 = v81.i64[0];
              vst2_s8(v188->i8, v191);
              --v187;
            }
            while (v187 > 2);
            v193 = (int8x8x2_t)*_X16;
            v194 = vzip2q_s8(*_X16, v81);
            i8 = v188[2].i8;
            v196 = v81.i64[0];
            vst2_s8(i8, v193);
LABEL_40:
            v218 = a51;
            v188[3] = v194;
LABEL_45:
            v249 = 0;
            while (1)
            {
              v250 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x640] + v249), *(uint16x8_t *)((char *)&STACK[0x640] + v249 + 256));
              v251 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x640] + v249 + 16), *(uint16x8_t *)((char *)&STACK[0x640] + v249 + 272));
              v252 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x640] + v249 + 32), *(uint16x8_t *)((char *)&STACK[0x640] + v249 + 288));
              v253 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x640] + v249 + 48), *(uint16x8_t *)((char *)&STACK[0x640] + v249 + 304));
              if (v185)
              {
                v254 = *v218;
                v255 = v218[1];
                v256 = v218[2];
                v257 = v218[3];
                v218 += 4;
                v250 = vaddq_s16(v254, v250);
                v251 = vaddq_s16(v255, v251);
                v252 = vaddq_s16(v256, v252);
                v253 = vaddq_s16(v257, v253);
              }
              *v73 = vqmovun_high_s16(vqmovun_s16(v250), v251);
              *(int8x16_t *)((char *)v73 + v80) = vqmovun_high_s16(vqmovun_s16(v252), v253);
              v73 = (int8x16_t *)((char *)v73 + v72);
              v249 += 64;
              if ((_DWORD)v249 == 256)
                JUMPOUT(0x21604A7E4);
            }
          }
          _X8 = &a49->i8[v80];
          __asm { PRFM            #0, [X8] }
          v209 = *(uint8x16_t *)a49;
          v210 = 9;
          v188 = a17;
          do
          {
            _X10 = &_X16->i8[v118];
            __asm { PRFM            #0, [X10] }
            v205 = *(int8x16_t *)((char *)_X16 + v80);
            v213 = (int8x16_t)vrhaddq_u8(v209, (uint8x16_t)v205);
            v214 = v81.i64[0];
            v188[3] = vzip2q_s8(v213, v81);
            v188 += 2;
            vst2_s8(v188->i8, (int8x8x2_t)v213);
            --v210;
            _X16 = (int8x16_t *)((char *)_X16 + v80);
            v209 = (uint8x16_t)v205;
          }
          while (v210 > 2);
          v206 = *(uint8x16_t *)((char *)_X16 + v80);
        }
        v215 = (int8x16_t)vrhaddq_u8((uint8x16_t)v205, v206);
        v216 = v188[2].i8;
        v217 = v81.i64[0];
        vst2_s8(v216, (int8x8x2_t)v215);
        v194 = vzip2q_s8(v215, v81);
        goto LABEL_40;
      }
      __asm { PRFM            #0, [X26] }
      v125 = 9;
      v126 = a30;
      do
      {
        v127 = _X26;
        _X26 = (int8x16_t *)((char *)_X26 + v80);
        __asm { PRFM            #0, [X26] }
        v129 = (int8x8x2_t)*v127;
        v126[3] = vzip2q_s8(*v127, v81);
        v126 += 2;
        v130 = v81.i64[0];
        vst2_s8(v126->i8, v129);
        --v125;
      }
      while (v125 > 2);
      v131 = (int8x8x2_t)*_X26;
      v132 = vzip2q_s8(*_X26, v81);
      v133 = v126[2].i8;
      v134 = v81.i64[0];
      vst2_s8(v133, v131);
LABEL_22:
      v126[3] = v132;
      goto LABEL_27;
    }
    _X8 = &_X26->i8[v80];
    __asm { PRFM            #0, [X8] }
    v147 = *(uint8x16_t *)_X26;
    v148 = 9;
    v126 = a30;
    do
    {
      _X10 = &_X26->i8[a38];
      _X26 = (int8x16_t *)((char *)_X26 + v80);
      __asm { PRFM            #0, [X10] }
      v143 = *_X26;
      v151 = (int8x16_t)vrhaddq_u8(v147, *(uint8x16_t *)_X26);
      v152 = v81.i64[0];
      v126[3] = vzip2q_s8(v151, v81);
      v126 += 2;
      vst2_s8(v126->i8, (int8x8x2_t)v151);
      --v148;
      v147 = (uint8x16_t)v143;
    }
    while (v148 > 2);
    v144 = *(uint8x16_t *)((char *)_X26 + v80);
  }
  v153 = (int8x16_t)vrhaddq_u8((uint8x16_t)v143, v144);
  v154 = v126[2].i8;
  v155 = v81.i64[0];
  vst2_s8(v154, (int8x8x2_t)v153);
  v132 = vzip2q_s8(v153, v81);
  goto LABEL_22;
}

void sub_216043C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int8x16_t *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29,int8x16_t *a30,uint64_t a31,int a32,int a33,uint64_t a34,int a35,int a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int8x16_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int8x16_t *a49,uint64_t a50,int16x8_t *a51,int a52,int a53,int a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,int a63)
{
  uint64_t a65;
  uint64_t a71;
  uint64_t a72;
  uint64_t v72;
  int8x16_t *v73;
  uint64_t v74;
  int16x8_t *v75;
  uint64_t v76;
  int8x16_t *v78;
  uint64_t v79;
  uint64_t v80;
  int8x16_t v81;
  int16x8_t v82;
  int16x8_t v83;
  uint64_t v84;
  int8x16_t *v85;
  int8x16_t v86;
  int16x8_t v87;
  int16x8_t v88;
  uint64_t v89;
  int8x16_t *v90;
  int16x8_t v91;
  uint16x8_t v92;
  int8x16_t v94;
  int16x8_t v95;
  int16x8_t v96;
  uint64_t v97;
  int16x8_t v98;
  int16x8_t v99;
  int16x8_t v100;
  int16x8_t v101;
  int16x8_t v102;
  int16x8_t v103;
  int16x8_t v104;
  int16x8_t v105;
  uint64_t v106;
  uint64_t v107;
  unsigned int v113;
  int8x16_t *v114;
  int8x16_t *v115;
  int8x8x2_t v117;
  uint64_t v118;
  int8x8x2_t v119;
  int8x16_t v120;
  char *v121;
  uint64_t v122;
  int8x16_t *v124;
  unsigned int v125;
  int8x16_t v128;
  uint8x16_t v129;
  int8x16_t v130;
  int8x16_t v131;
  uint8x16_t v132;
  uint8x16_t v135;
  unsigned int v136;
  int8x16_t v139;
  uint64_t v140;
  int8x16_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  int v145;
  int8x16_t v146;
  int16x8_t v147;
  int8x16_t v148;
  int8x16_t v149;
  int16x8_t v150;
  int16x8_t v151;
  int8x16_t v152;
  int16x8_t v153;
  int8x16_t v156;
  int16x8_t v157;
  int16x8_t v158;
  int8x16_t *v159;
  int16x8_t v162;
  int8x16_t v163;
  uint64_t v164;
  int8x16_t v167;
  int16x8_t v168;
  int16x8_t v171;
  int8x16_t v172;
  uint64_t v173;
  unsigned int v175;
  int8x16_t *v176;
  int8x16_t *v177;
  int8x8x2_t v179;
  uint64_t v180;
  int8x8x2_t v181;
  int8x16_t v182;
  char *i8;
  uint64_t v184;
  int8x16_t *v186;
  unsigned int v187;
  int8x16_t v190;
  uint8x16_t v191;
  int8x16_t v192;
  int8x16_t v193;
  uint8x16_t v194;
  uint8x16_t v197;
  unsigned int v198;
  int8x16_t v201;
  uint64_t v202;
  int8x16_t v203;
  char *v204;
  uint64_t v205;
  int16x8_t *v206;
  uint64_t v207;
  int v208;
  int8x16_t v209;
  int16x8_t v210;
  int8x16_t v211;
  int8x16_t v212;
  int16x8_t v213;
  int16x8_t v214;
  int8x16_t v215;
  int16x8_t v216;
  int8x16_t v219;
  int16x8_t v220;
  int16x8_t v221;
  int8x16_t *v222;
  int16x8_t v225;
  int8x16_t v226;
  uint64_t v227;
  int8x16_t v230;
  int16x8_t v231;
  int16x8_t v232;
  int16x8_t v235;
  int8x16_t v236;
  uint64_t v237;
  int16x8_t v238;
  int16x8_t v239;
  int16x8_t v240;
  int16x8_t v241;
  int16x8_t v242;
  int16x8_t v243;
  int16x8_t v244;
  int16x8_t v245;

  v84 = 0;
  v85 = (int8x16_t *)(v76 - 2);
  do
  {
    v86 = *v85;
    v85 = (int8x16_t *)((char *)v85 + v80);
    v87 = (int16x8_t)vzip1q_s8(vextq_s8(v86, v86, 2uLL), v81);
    v88 = vsubq_s16(vshlq_n_s16(vaddq_s16(v87, (int16x8_t)vzip1q_s8(vextq_s8(v86, v86, 3uLL), v81)), 2uLL), vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v86, v86, 1uLL), v81), (int16x8_t)vzip1q_s8(vextq_s8(v86, v86, 4uLL), v81)));
    *(uint16x8_t *)(a1 + v84) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vshlq_n_s16(v88, 2uLL), vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v86, v81), (int16x8_t)vzip1q_s8(vextq_s8(v86, v86, 5uLL), v81)), v88)), v82), v83))), (uint16x8_t)v87);
    v84 += 32;
  }
  while ((_DWORD)v84 != 512);
  v89 = 0;
  v90 = (int8x16_t *)(v76 + 6);
  v91.i64[0] = 0x20002000200020;
  v91.i64[1] = 0x20002000200020;
  v92.i64[0] = 0x5000500050005;
  v92.i64[1] = 0x5000500050005;
  _X16 = a49;
  do
  {
    v94 = *v90;
    v90 = (int8x16_t *)((char *)v90 + v80);
    v95 = (int16x8_t)vzip1q_s8(vextq_s8(v94, v94, 2uLL), v81);
    v96 = vsubq_s16(vshlq_n_s16(vaddq_s16(v95, (int16x8_t)vzip1q_s8(vextq_s8(v94, v94, 3uLL), v81)), 2uLL), vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v94, v94, 1uLL), v81), (int16x8_t)vzip1q_s8(vextq_s8(v94, v94, 4uLL), v81)));
    *(uint16x8_t *)(v74 + v89) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vshlq_n_s16(v96, 2uLL), vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v94, v81), (int16x8_t)vzip1q_s8(vextq_s8(v94, v94, 5uLL), v81)), v96)), v82), v83))), (uint16x8_t)v95);
    v89 += 32;
  }
  while ((_DWORD)v89 != 512);
  v97 = 0;
  do
  {
    v98 = *(int16x8_t *)(a6 + v97 + 528);
    v99 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v97), *(uint16x8_t *)(a6 + v97 + 512));
    v100 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v97 + 16), (uint16x8_t)v98);
    v101 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v97 + 32), *(uint16x8_t *)(a6 + v97 + 544));
    v102 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v97 + 48), *(uint16x8_t *)(a6 + v97 + 560));
    if (a72)
    {
      v103 = *v75;
      v98 = v75[1];
      v104 = v75[2];
      v105 = v75[3];
      v75 += 4;
      v99 = vaddq_s16(v103, v99);
      v100 = vaddq_s16(v98, v100);
      v101 = vaddq_s16(v104, v101);
      v102 = vaddq_s16(v105, v102);
    }
    *v78 = vqmovun_high_s16(vqmovun_s16(v99), v100);
    *(int8x16_t *)((char *)v78 + v80) = vqmovun_high_s16(vqmovun_s16(v101), v102);
    v78 = (int8x16_t *)((char *)v78 + v72);
    v97 += 64;
  }
  while ((_DWORD)v97 != 512);
  if (a63 == 64)
  {
    __asm { PRFM            #0, [X26] }
    v124 = (int8x16_t *)(a43 + a15 + a65 + a14 + 16);
    v125 = 9;
    v114 = a30;
    v107 = a31;
    v106 = a38;
    do
    {
      _X11 = &v124->i8[v80];
      __asm { PRFUM           #0, [X11,#-0x10] }
      v128 = v124[-1];
      v129 = (uint8x16_t)vextq_s8(v128, v128, 2uLL);
      v129.i16[7] = v124->i16[0];
      v130 = (int8x16_t)vrhaddq_u8((uint8x16_t)v128, v129);
      v129.i64[0] = v81.i64[0];
      v114[3] = vzip2q_s8(v130, v81);
      v114 += 2;
      vst2_s8(v114->i8, *(int8x8x2_t *)((char *)&v129 - 8));
      --v125;
      v124 = (int8x16_t *)((char *)v124 + v80);
    }
    while (v125 > 2);
    v131 = v124[-1];
    v132 = (uint8x16_t)vextq_s8(v131, v131, 2uLL);
    v132.i16[7] = v124->i16[0];
  }
  else
  {
    v106 = a38;
    v107 = a31;
    if (a63 != 4)
    {
      if (a63)
      {
        v144 = 0;
        v145 = a29 * a53 - (8 * a53 + 8 * a29) + 64;
        v146 = v81;
        v146.i32[0] = v145 | (v145 << 16);
        v147 = (int16x8_t)vqtbl1q_s8(v146, a44);
        v148 = v81;
        v148.i32[0] = (8 * a53 - a29 * a53) | ((8 * a53 - a29 * a53) << 16);
        v149 = v81;
        v149.i32[0] = (8 * a29 - a29 * a53) | ((8 * a29 - a29 * a53) << 16);
        v150 = (int16x8_t)vqtbl1q_s8(v148, a44);
        v151 = (int16x8_t)vqtbl1q_s8(v149, a44);
        v152 = v81;
        v152.i32[0] = 65537 * a29 * a53;
        v153 = (int16x8_t)vqtbl1q_s8(v152, a44);
        *(int16x8_t *)(v79 - 224) = v147;
        *(int16x8_t *)(v79 - 208) = v150;
        *(int16x8_t *)(v79 - 192) = v151;
        *(int16x8_t *)(v79 - 176) = v153;
        _X9 = &_X26->i8[v80];
        __asm { PRFM            #0, [X9] }
        v98.i64[0] = _X26->i64[0];
        v156 = vqtbl1q_s8((int8x16_t)v98, (int8x16_t)xmmword_2160EE810);
        v156.i16[3] = _X26->i16[4];
        v157 = (int16x8_t)vzip1q_s8(v156, v81);
        v158 = (int16x8_t)vzip1q_s8((int8x16_t)v98, v81);
        v159 = _X26;
        do
        {
          _X11 = &v159->i8[a38];
          v159 = (int8x16_t *)((char *)v159 + v80);
          __asm { PRFM            #0, [X11] }
          v162 = vmlaq_s16(vmulq_s16(v150, v157), v147, v158);
          v157.i64[0] = v159->i64[0];
          v158 = (int16x8_t)vzip1q_s8((int8x16_t)v157, v81);
          v163 = vqtbl1q_s8((int8x16_t)v157, (int8x16_t)xmmword_2160EE810);
          v163.i16[3] = v159->i16[4];
          v157 = (int16x8_t)vzip1q_s8(v163, v81);
          *(uint16x8_t *)((char *)&STACK[0x640] + v144) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v162, v151, v158), v153, v157), v91), v92);
          v144 += 32;
        }
        while ((_DWORD)v144 != 256);
        v164 = 0;
        _X9 = &_X26->i8[v80 + 8];
        __asm { PRFM            #0, [X9] }
        v158.i64[0] = _X26->i64[1];
        v167 = vqtbl1q_s8((int8x16_t)v158, (int8x16_t)xmmword_2160EE810);
        v167.i16[3] = _X26[1].i16[0];
        v168 = (int16x8_t)vzip1q_s8(v167, v81);
        v98 = (int16x8_t)vzip1q_s8((int8x16_t)v158, v81);
        do
        {
          _X9 = &_X26->i8[a31];
          _X26 = (int8x16_t *)((char *)_X26 + v80);
          __asm { PRFM            #0, [X9] }
          v171 = vmlaq_s16(vmulq_s16(v150, v168), v147, v98);
          v168.i64[0] = _X26->i64[1];
          v98 = (int16x8_t)vzip1q_s8((int8x16_t)v168, v81);
          v172 = vqtbl1q_s8((int8x16_t)v168, (int8x16_t)xmmword_2160EE810);
          v172.i16[3] = _X26[1].i16[0];
          v168 = (int16x8_t)vzip1q_s8(v172, v81);
          *(uint16x8_t *)(a40 + v164) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v171, v151, v98), v153, v168), v91), v92);
          v164 += 32;
        }
        while ((_DWORD)v164 != 256);
LABEL_27:
        if (a36 == 64)
        {
          __asm { PRFM            #0, [X16] }
          v186 = (int8x16_t *)(a48 + a27 + a50 + a26 + 16);
          v187 = 9;
          v176 = a17;
          v173 = a71;
          do
          {
            _X11 = &v186->i8[v80];
            __asm { PRFUM           #0, [X11,#-0x10] }
            v190 = v186[-1];
            v191 = (uint8x16_t)vextq_s8(v190, v190, 2uLL);
            v191.i16[7] = v186->i16[0];
            v192 = (int8x16_t)vrhaddq_u8((uint8x16_t)v190, v191);
            v191.i64[0] = v81.i64[0];
            v176[3] = vzip2q_s8(v192, v81);
            v176 += 2;
            vst2_s8(v176->i8, *(int8x8x2_t *)((char *)&v191 - 8));
            --v187;
            v186 = (int8x16_t *)((char *)v186 + v80);
          }
          while (v187 > 2);
          v193 = v186[-1];
          v194 = (uint8x16_t)vextq_s8(v193, v193, 2uLL);
          v194.i16[7] = v186->i16[0];
        }
        else
        {
          v173 = a71;
          if (a36 != 4)
          {
            if (a36)
            {
              v207 = 0;
              v208 = a33 * a54 - (8 * a54 + 8 * a33) + 64;
              v209 = v81;
              v209.i32[0] = v208 | (v208 << 16);
              v210 = (int16x8_t)vqtbl1q_s8(v209, a44);
              v211 = v81;
              v211.i32[0] = (8 * a54 - a33 * a54) | ((8 * a54 - a33 * a54) << 16);
              v212 = v81;
              v212.i32[0] = (8 * a33 - a33 * a54) | ((8 * a33 - a33 * a54) << 16);
              v213 = (int16x8_t)vqtbl1q_s8(v211, a44);
              v214 = (int16x8_t)vqtbl1q_s8(v212, a44);
              v215 = v81;
              v215.i32[0] = 65537 * a33 * a54;
              v216 = (int16x8_t)vqtbl1q_s8(v215, a44);
              *(int16x8_t *)(v79 - 160) = v210;
              *(int16x8_t *)(v79 - 144) = v213;
              *(int16x8_t *)(v79 - 128) = v214;
              *(int16x8_t *)(v79 - 112) = v216;
              _X9 = &a49->i8[v80];
              __asm { PRFM            #0, [X9] }
              v98.i64[0] = a49->i64[0];
              v219 = vqtbl1q_s8((int8x16_t)v98, (int8x16_t)xmmword_2160EE810);
              v219.i16[3] = a49->i16[4];
              v220 = (int16x8_t)vzip1q_s8(v219, v81);
              v221 = (int16x8_t)vzip1q_s8((int8x16_t)v98, v81);
              v222 = a49;
              do
              {
                _X11 = (uint64_t)v222->i64 + v106;
                v222 = (int8x16_t *)((char *)v222 + v80);
                __asm { PRFM            #0, [X11] }
                v225 = vmlaq_s16(vmulq_s16(v213, v220), v210, v221);
                v220.i64[0] = v222->i64[0];
                v221 = (int16x8_t)vzip1q_s8((int8x16_t)v220, v81);
                v226 = vqtbl1q_s8((int8x16_t)v220, (int8x16_t)xmmword_2160EE810);
                v226.i16[3] = v222->i16[4];
                v220 = (int16x8_t)vzip1q_s8(v226, v81);
                *(uint16x8_t *)(a37 + v207) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v225, v214, v221), v216, v220), v91), v92);
                v207 += 32;
              }
              while ((_DWORD)v207 != 256);
              v227 = 0;
              _X9 = &a49->i8[v80 + 8];
              __asm { PRFM            #0, [X9] }
              v221.i64[0] = a49->i64[1];
              v230 = vqtbl1q_s8((int8x16_t)v221, (int8x16_t)xmmword_2160EE810);
              v230.i16[3] = a49[1].i16[0];
              v231 = (int16x8_t)vzip1q_s8(v230, v81);
              v232 = (int16x8_t)vzip1q_s8((int8x16_t)v221, v81);
              v206 = a51;
              do
              {
                _X9 = &_X16->i8[v107];
                __asm { PRFM            #0, [X9] }
                v235 = vmlaq_s16(vmulq_s16(v213, v231), v210, v232);
                v231.i64[0] = *(uint64_t *)((char *)&_X16->i64[1] + v80);
                v232 = (int16x8_t)vzip1q_s8((int8x16_t)v231, v81);
                v236 = vqtbl1q_s8((int8x16_t)v231, (int8x16_t)xmmword_2160EE810);
                v236.i16[3] = *(__int16 *)((char *)_X16[1].i16 + v80);
                v231 = (int16x8_t)vzip1q_s8(v236, v81);
                *(uint16x8_t *)(a18 + v227) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v235, v214, v232), v216, v231), v91), v92);
                v227 += 32;
                _X16 = (int8x16_t *)((char *)_X16 + v80);
              }
              while ((_DWORD)v227 != 256);
              goto LABEL_45;
            }
            __asm { PRFM            #0, [X16] }
            v175 = 9;
            v176 = a17;
            do
            {
              v177 = _X16;
              _X16 = (int8x16_t *)((char *)_X16 + v80);
              __asm { PRFM            #0, [X16] }
              v179 = (int8x8x2_t)*v177;
              v176[3] = vzip2q_s8(*v177, v81);
              v176 += 2;
              v180 = v81.i64[0];
              vst2_s8(v176->i8, v179);
              --v175;
            }
            while (v175 > 2);
            v181 = (int8x8x2_t)*_X16;
            v182 = vzip2q_s8(*_X16, v81);
            i8 = v176[2].i8;
            v184 = v81.i64[0];
            vst2_s8(i8, v181);
LABEL_40:
            v206 = a51;
            v176[3] = v182;
LABEL_45:
            v237 = 0;
            while (1)
            {
              v238 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x640] + v237), *(uint16x8_t *)((char *)&STACK[0x640] + v237 + 256));
              v239 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x640] + v237 + 16), *(uint16x8_t *)((char *)&STACK[0x640] + v237 + 272));
              v240 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x640] + v237 + 32), *(uint16x8_t *)((char *)&STACK[0x640] + v237 + 288));
              v241 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x640] + v237 + 48), *(uint16x8_t *)((char *)&STACK[0x640] + v237 + 304));
              if (v173)
              {
                v242 = *v206;
                v243 = v206[1];
                v244 = v206[2];
                v245 = v206[3];
                v206 += 4;
                v238 = vaddq_s16(v242, v238);
                v239 = vaddq_s16(v243, v239);
                v240 = vaddq_s16(v244, v240);
                v241 = vaddq_s16(v245, v241);
              }
              *v73 = vqmovun_high_s16(vqmovun_s16(v238), v239);
              *(int8x16_t *)((char *)v73 + v80) = vqmovun_high_s16(vqmovun_s16(v240), v241);
              v73 = (int8x16_t *)((char *)v73 + v72);
              v237 += 64;
              if ((_DWORD)v237 == 256)
                JUMPOUT(0x21604A7E4);
            }
          }
          _X8 = &a49->i8[v80];
          __asm { PRFM            #0, [X8] }
          v197 = *(uint8x16_t *)a49;
          v198 = 9;
          v176 = a17;
          do
          {
            _X10 = &_X16->i8[v106];
            __asm { PRFM            #0, [X10] }
            v193 = *(int8x16_t *)((char *)_X16 + v80);
            v201 = (int8x16_t)vrhaddq_u8(v197, (uint8x16_t)v193);
            v202 = v81.i64[0];
            v176[3] = vzip2q_s8(v201, v81);
            v176 += 2;
            vst2_s8(v176->i8, (int8x8x2_t)v201);
            --v198;
            _X16 = (int8x16_t *)((char *)_X16 + v80);
            v197 = (uint8x16_t)v193;
          }
          while (v198 > 2);
          v194 = *(uint8x16_t *)((char *)_X16 + v80);
        }
        v203 = (int8x16_t)vrhaddq_u8((uint8x16_t)v193, v194);
        v204 = v176[2].i8;
        v205 = v81.i64[0];
        vst2_s8(v204, (int8x8x2_t)v203);
        v182 = vzip2q_s8(v203, v81);
        goto LABEL_40;
      }
      __asm { PRFM            #0, [X26] }
      v113 = 9;
      v114 = a30;
      do
      {
        v115 = _X26;
        _X26 = (int8x16_t *)((char *)_X26 + v80);
        __asm { PRFM            #0, [X26] }
        v117 = (int8x8x2_t)*v115;
        v114[3] = vzip2q_s8(*v115, v81);
        v114 += 2;
        v118 = v81.i64[0];
        vst2_s8(v114->i8, v117);
        --v113;
      }
      while (v113 > 2);
      v119 = (int8x8x2_t)*_X26;
      v120 = vzip2q_s8(*_X26, v81);
      v121 = v114[2].i8;
      v122 = v81.i64[0];
      vst2_s8(v121, v119);
LABEL_22:
      v114[3] = v120;
      goto LABEL_27;
    }
    _X8 = &_X26->i8[v80];
    __asm { PRFM            #0, [X8] }
    v135 = *(uint8x16_t *)_X26;
    v136 = 9;
    v114 = a30;
    do
    {
      _X10 = &_X26->i8[a38];
      _X26 = (int8x16_t *)((char *)_X26 + v80);
      __asm { PRFM            #0, [X10] }
      v131 = *_X26;
      v139 = (int8x16_t)vrhaddq_u8(v135, *(uint8x16_t *)_X26);
      v140 = v81.i64[0];
      v114[3] = vzip2q_s8(v139, v81);
      v114 += 2;
      vst2_s8(v114->i8, (int8x8x2_t)v139);
      --v136;
      v135 = (uint8x16_t)v131;
    }
    while (v136 > 2);
    v132 = *(uint8x16_t *)((char *)_X26 + v80);
  }
  v141 = (int8x16_t)vrhaddq_u8((uint8x16_t)v131, v132);
  v142 = v114[2].i8;
  v143 = v81.i64[0];
  vst2_s8(v142, (int8x8x2_t)v141);
  v120 = vzip2q_s8(v141, v81);
  goto LABEL_22;
}

void sub_216043D28(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int8x16_t *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29,int8x16_t *a30,uint64_t a31,int a32,int a33,uint64_t a34,int a35,int a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int8x16_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int8x16_t *a49,uint64_t a50,int16x8_t *a51,int a52,int a53,int a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,int a63)
{
  uint64_t a65;
  uint64_t a71;
  uint64_t a72;
  uint64_t v72;
  int v73;
  int8x16_t *v74;
  int16x8_t *v75;
  uint64_t v76;
  int8x16_t *v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  int8x16_t v82;
  unint64_t v83;
  int16x8_t v84;
  uint16x8_t v85;
  uint64_t v87;
  int16x8_t v88;
  int16x8_t v89;
  int16x8_t v90;
  int16x8_t v91;
  int16x8_t v92;
  int16x8_t v93;
  int16x8_t v94;
  int16x8_t v95;
  uint64_t v96;
  uint64_t v97;
  unsigned int v103;
  int8x16_t *v104;
  int8x16_t *v105;
  int8x8x2_t v107;
  uint64_t v108;
  int8x8x2_t v109;
  int8x16_t v110;
  char *v111;
  uint64_t v112;
  int8x16_t *v114;
  unsigned int v115;
  int8x16_t v118;
  uint8x16_t v119;
  int8x16_t v120;
  int8x16_t v121;
  uint8x16_t v122;
  uint8x16_t v125;
  unsigned int v126;
  int8x16_t v129;
  uint64_t v130;
  int8x16_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  int8x16_t v136;
  int16x8_t v137;
  int8x16_t v138;
  int8x16_t v139;
  int16x8_t v140;
  int16x8_t v141;
  int8x16_t v142;
  int16x8_t v143;
  int8x16_t v146;
  int16x8_t v147;
  int16x8_t v148;
  int8x16_t *v149;
  int16x8_t v152;
  int8x16_t v153;
  uint64_t v154;
  int8x16_t v157;
  int16x8_t v158;
  int16x8_t v161;
  int8x16_t v162;
  uint64_t v163;
  unsigned int v165;
  int8x16_t *v166;
  int8x16_t *v167;
  int8x8x2_t v169;
  uint64_t v170;
  int8x8x2_t v171;
  int8x16_t v172;
  char *i8;
  uint64_t v174;
  int8x16_t *v176;
  unsigned int v177;
  int8x16_t v180;
  uint8x16_t v181;
  int8x16_t v182;
  int8x16_t v183;
  uint8x16_t v184;
  uint8x16_t v187;
  unsigned int v188;
  int8x16_t v191;
  uint64_t v192;
  int8x16_t v193;
  char *v194;
  uint64_t v195;
  int16x8_t *v196;
  uint64_t v197;
  int v198;
  int8x16_t v199;
  int16x8_t v200;
  int8x16_t v201;
  int8x16_t v202;
  int16x8_t v203;
  int16x8_t v204;
  int8x16_t v205;
  int16x8_t v206;
  int8x16_t v209;
  int16x8_t v210;
  int16x8_t v211;
  int8x16_t *v212;
  int16x8_t v215;
  int8x16_t v216;
  uint64_t v217;
  int8x16_t v220;
  int16x8_t v221;
  int16x8_t v222;
  int16x8_t v225;
  int8x16_t v226;
  uint64_t v227;
  int16x8_t v228;
  int16x8_t v229;
  int16x8_t v230;
  int16x8_t v231;
  int16x8_t v232;
  int16x8_t v233;
  int16x8_t v234;
  int16x8_t v235;

  *(_OWORD *)&STACK[0x220] = v80;
  *(_OWORD *)&STACK[0x230] = v81;
  sub_2160811CC(a1, v76, v73, 16, 2, 2u);
  v82 = *(int8x16_t *)&STACK[0x230];
  v83 = STACK[0x210];
  v84.i64[0] = 0x20002000200020;
  v84.i64[1] = 0x20002000200020;
  v85.i64[0] = 0x5000500050005;
  v85.i64[1] = 0x5000500050005;
  _X16 = a49;
  v87 = 0;
  do
  {
    v88 = *(int16x8_t *)((char *)&STACK[0x240] + v87 + 528);
    v89 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x240] + v87), *(uint16x8_t *)((char *)&STACK[0x240] + v87 + 512));
    v90 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x240] + v87 + 16), (uint16x8_t)v88);
    v91 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x240] + v87 + 32), *(uint16x8_t *)((char *)&STACK[0x240] + v87 + 544));
    v92 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x240] + v87 + 48), *(uint16x8_t *)((char *)&STACK[0x240] + v87 + 560));
    if (a72)
    {
      v93 = *v75;
      v88 = v75[1];
      v94 = v75[2];
      v95 = v75[3];
      v75 += 4;
      v89 = vaddq_s16(v93, v89);
      v90 = vaddq_s16(v88, v90);
      v91 = vaddq_s16(v94, v91);
      v92 = vaddq_s16(v95, v92);
    }
    *v78 = vqmovun_high_s16(vqmovun_s16(v89), v90);
    *(int8x16_t *)((char *)v78 + v83) = vqmovun_high_s16(vqmovun_s16(v91), v92);
    v78 = (int8x16_t *)((char *)v78 + v72);
    v87 += 64;
  }
  while ((_DWORD)v87 != 512);
  if (a63 == 64)
  {
    __asm { PRFM            #0, [X26] }
    v114 = (int8x16_t *)(a43 + a15 + a65 + a14 + 16);
    v115 = 9;
    v104 = a30;
    v97 = a31;
    v96 = a38;
    do
    {
      _X11 = &v114->i8[v83];
      __asm { PRFUM           #0, [X11,#-0x10] }
      v118 = v114[-1];
      v119 = (uint8x16_t)vextq_s8(v118, v118, 2uLL);
      v119.i16[7] = v114->i16[0];
      v120 = (int8x16_t)vrhaddq_u8((uint8x16_t)v118, v119);
      v119.i64[0] = v82.i64[0];
      v104[3] = vzip2q_s8(v120, v82);
      v104 += 2;
      vst2_s8(v104->i8, *(int8x8x2_t *)((char *)&v119 - 8));
      --v115;
      v114 = (int8x16_t *)((char *)v114 + v83);
    }
    while (v115 > 2);
    v121 = v114[-1];
    v122 = (uint8x16_t)vextq_s8(v121, v121, 2uLL);
    v122.i16[7] = v114->i16[0];
  }
  else
  {
    v96 = a38;
    v97 = a31;
    if (a63 != 4)
    {
      if (a63)
      {
        v134 = 0;
        v135 = a29 * a53 - (8 * a53 + 8 * a29) + 64;
        v136 = v82;
        v136.i32[0] = v135 | (v135 << 16);
        v137 = (int16x8_t)vqtbl1q_s8(v136, a44);
        v138 = v82;
        v138.i32[0] = (8 * a53 - a29 * a53) | ((8 * a53 - a29 * a53) << 16);
        v139 = v82;
        v139.i32[0] = (8 * a29 - a29 * a53) | ((8 * a29 - a29 * a53) << 16);
        v140 = (int16x8_t)vqtbl1q_s8(v138, a44);
        v141 = (int16x8_t)vqtbl1q_s8(v139, a44);
        v142 = v82;
        v142.i32[0] = 65537 * a29 * a53;
        v143 = (int16x8_t)vqtbl1q_s8(v142, a44);
        *(int16x8_t *)(v79 - 224) = v137;
        *(int16x8_t *)(v79 - 208) = v140;
        *(int16x8_t *)(v79 - 192) = v141;
        *(int16x8_t *)(v79 - 176) = v143;
        _X9 = &_X26->i8[v83];
        __asm { PRFM            #0, [X9] }
        v88.i64[0] = _X26->i64[0];
        v146 = vqtbl1q_s8((int8x16_t)v88, (int8x16_t)xmmword_2160EE810);
        v146.i16[3] = _X26->i16[4];
        v147 = (int16x8_t)vzip1q_s8(v146, v82);
        v148 = (int16x8_t)vzip1q_s8((int8x16_t)v88, v82);
        v149 = _X26;
        do
        {
          _X11 = &v149->i8[a38];
          v149 = (int8x16_t *)((char *)v149 + v83);
          __asm { PRFM            #0, [X11] }
          v152 = vmlaq_s16(vmulq_s16(v140, v147), v137, v148);
          v147.i64[0] = v149->i64[0];
          v148 = (int16x8_t)vzip1q_s8((int8x16_t)v147, v82);
          v153 = vqtbl1q_s8((int8x16_t)v147, (int8x16_t)xmmword_2160EE810);
          v153.i16[3] = v149->i16[4];
          v147 = (int16x8_t)vzip1q_s8(v153, v82);
          *(uint16x8_t *)((char *)&STACK[0x640] + v134) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v152, v141, v148), v143, v147), v84), v85);
          v134 += 32;
        }
        while ((_DWORD)v134 != 256);
        v154 = 0;
        _X9 = &_X26->i8[v83 + 8];
        __asm { PRFM            #0, [X9] }
        v148.i64[0] = _X26->i64[1];
        v157 = vqtbl1q_s8((int8x16_t)v148, (int8x16_t)xmmword_2160EE810);
        v157.i16[3] = _X26[1].i16[0];
        v158 = (int16x8_t)vzip1q_s8(v157, v82);
        v88 = (int16x8_t)vzip1q_s8((int8x16_t)v148, v82);
        do
        {
          _X9 = &_X26->i8[a31];
          _X26 = (int8x16_t *)((char *)_X26 + v83);
          __asm { PRFM            #0, [X9] }
          v161 = vmlaq_s16(vmulq_s16(v140, v158), v137, v88);
          v158.i64[0] = _X26->i64[1];
          v88 = (int16x8_t)vzip1q_s8((int8x16_t)v158, v82);
          v162 = vqtbl1q_s8((int8x16_t)v158, (int8x16_t)xmmword_2160EE810);
          v162.i16[3] = _X26[1].i16[0];
          v158 = (int16x8_t)vzip1q_s8(v162, v82);
          *(uint16x8_t *)(a40 + v154) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v161, v141, v88), v143, v158), v84), v85);
          v154 += 32;
        }
        while ((_DWORD)v154 != 256);
LABEL_23:
        if (a36 == 64)
        {
          __asm { PRFM            #0, [X16] }
          v176 = (int8x16_t *)(a48 + a27 + a50 + a26 + 16);
          v177 = 9;
          v166 = a17;
          v163 = a71;
          do
          {
            _X11 = &v176->i8[v83];
            __asm { PRFUM           #0, [X11,#-0x10] }
            v180 = v176[-1];
            v181 = (uint8x16_t)vextq_s8(v180, v180, 2uLL);
            v181.i16[7] = v176->i16[0];
            v182 = (int8x16_t)vrhaddq_u8((uint8x16_t)v180, v181);
            v181.i64[0] = v82.i64[0];
            v166[3] = vzip2q_s8(v182, v82);
            v166 += 2;
            vst2_s8(v166->i8, *(int8x8x2_t *)((char *)&v181 - 8));
            --v177;
            v176 = (int8x16_t *)((char *)v176 + v83);
          }
          while (v177 > 2);
          v183 = v176[-1];
          v184 = (uint8x16_t)vextq_s8(v183, v183, 2uLL);
          v184.i16[7] = v176->i16[0];
        }
        else
        {
          v163 = a71;
          if (a36 != 4)
          {
            if (a36)
            {
              v197 = 0;
              v198 = a33 * a54 - (8 * a54 + 8 * a33) + 64;
              v199 = v82;
              v199.i32[0] = v198 | (v198 << 16);
              v200 = (int16x8_t)vqtbl1q_s8(v199, a44);
              v201 = v82;
              v201.i32[0] = (8 * a54 - a33 * a54) | ((8 * a54 - a33 * a54) << 16);
              v202 = v82;
              v202.i32[0] = (8 * a33 - a33 * a54) | ((8 * a33 - a33 * a54) << 16);
              v203 = (int16x8_t)vqtbl1q_s8(v201, a44);
              v204 = (int16x8_t)vqtbl1q_s8(v202, a44);
              v205 = v82;
              v205.i32[0] = 65537 * a33 * a54;
              v206 = (int16x8_t)vqtbl1q_s8(v205, a44);
              *(int16x8_t *)(v79 - 160) = v200;
              *(int16x8_t *)(v79 - 144) = v203;
              *(int16x8_t *)(v79 - 128) = v204;
              *(int16x8_t *)(v79 - 112) = v206;
              _X9 = &a49->i8[v83];
              __asm { PRFM            #0, [X9] }
              v88.i64[0] = a49->i64[0];
              v209 = vqtbl1q_s8((int8x16_t)v88, (int8x16_t)xmmword_2160EE810);
              v209.i16[3] = a49->i16[4];
              v210 = (int16x8_t)vzip1q_s8(v209, v82);
              v211 = (int16x8_t)vzip1q_s8((int8x16_t)v88, v82);
              v212 = a49;
              do
              {
                _X11 = (uint64_t)v212->i64 + v96;
                v212 = (int8x16_t *)((char *)v212 + v83);
                __asm { PRFM            #0, [X11] }
                v215 = vmlaq_s16(vmulq_s16(v203, v210), v200, v211);
                v210.i64[0] = v212->i64[0];
                v211 = (int16x8_t)vzip1q_s8((int8x16_t)v210, v82);
                v216 = vqtbl1q_s8((int8x16_t)v210, (int8x16_t)xmmword_2160EE810);
                v216.i16[3] = v212->i16[4];
                v210 = (int16x8_t)vzip1q_s8(v216, v82);
                *(uint16x8_t *)(a37 + v197) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v215, v204, v211), v206, v210), v84), v85);
                v197 += 32;
              }
              while ((_DWORD)v197 != 256);
              v217 = 0;
              _X9 = (unint64_t)&a49->u64[1] + v83;
              __asm { PRFM            #0, [X9] }
              v211.i64[0] = a49->i64[1];
              v220 = vqtbl1q_s8((int8x16_t)v211, (int8x16_t)xmmword_2160EE810);
              v220.i16[3] = a49[1].i16[0];
              v221 = (int16x8_t)vzip1q_s8(v220, v82);
              v222 = (int16x8_t)vzip1q_s8((int8x16_t)v211, v82);
              v196 = a51;
              do
              {
                _X9 = &_X16->i8[v97];
                __asm { PRFM            #0, [X9] }
                v225 = vmlaq_s16(vmulq_s16(v203, v221), v200, v222);
                v221.i64[0] = *(uint64_t *)((char *)&_X16->i64[1] + v83);
                v222 = (int16x8_t)vzip1q_s8((int8x16_t)v221, v82);
                v226 = vqtbl1q_s8((int8x16_t)v221, (int8x16_t)xmmword_2160EE810);
                v226.i16[3] = *(__int16 *)((char *)_X16[1].i16 + v83);
                v221 = (int16x8_t)vzip1q_s8(v226, v82);
                *(uint16x8_t *)(a18 + v217) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v225, v204, v222), v206, v221), v84), v85);
                v217 += 32;
                _X16 = (int8x16_t *)((char *)_X16 + v83);
              }
              while ((_DWORD)v217 != 256);
              goto LABEL_41;
            }
            __asm { PRFM            #0, [X16] }
            v165 = 9;
            v166 = a17;
            do
            {
              v167 = _X16;
              _X16 = (int8x16_t *)((char *)_X16 + v83);
              __asm { PRFM            #0, [X16] }
              v169 = (int8x8x2_t)*v167;
              v166[3] = vzip2q_s8(*v167, v82);
              v166 += 2;
              v170 = v82.i64[0];
              vst2_s8(v166->i8, v169);
              --v165;
            }
            while (v165 > 2);
            v171 = (int8x8x2_t)*_X16;
            v172 = vzip2q_s8(*_X16, v82);
            i8 = v166[2].i8;
            v174 = v82.i64[0];
            vst2_s8(i8, v171);
LABEL_36:
            v196 = a51;
            v166[3] = v172;
LABEL_41:
            v227 = 0;
            while (1)
            {
              v228 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x640] + v227), *(uint16x8_t *)((char *)&STACK[0x640] + v227 + 256));
              v229 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x640] + v227 + 16), *(uint16x8_t *)((char *)&STACK[0x640] + v227 + 272));
              v230 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x640] + v227 + 32), *(uint16x8_t *)((char *)&STACK[0x640] + v227 + 288));
              v231 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x640] + v227 + 48), *(uint16x8_t *)((char *)&STACK[0x640] + v227 + 304));
              if (v163)
              {
                v232 = *v196;
                v233 = v196[1];
                v234 = v196[2];
                v235 = v196[3];
                v196 += 4;
                v228 = vaddq_s16(v232, v228);
                v229 = vaddq_s16(v233, v229);
                v230 = vaddq_s16(v234, v230);
                v231 = vaddq_s16(v235, v231);
              }
              *v74 = vqmovun_high_s16(vqmovun_s16(v228), v229);
              *(int8x16_t *)((char *)v74 + v83) = vqmovun_high_s16(vqmovun_s16(v230), v231);
              v74 = (int8x16_t *)((char *)v74 + v72);
              v227 += 64;
              if ((_DWORD)v227 == 256)
                JUMPOUT(0x21604A7E4);
            }
          }
          _X8 = &a49->i8[v83];
          __asm { PRFM            #0, [X8] }
          v187 = *(uint8x16_t *)a49;
          v188 = 9;
          v166 = a17;
          do
          {
            _X10 = &_X16->i8[v96];
            __asm { PRFM            #0, [X10] }
            v183 = *(int8x16_t *)((char *)_X16 + v83);
            v191 = (int8x16_t)vrhaddq_u8(v187, (uint8x16_t)v183);
            v192 = v82.i64[0];
            v166[3] = vzip2q_s8(v191, v82);
            v166 += 2;
            vst2_s8(v166->i8, (int8x8x2_t)v191);
            --v188;
            _X16 = (int8x16_t *)((char *)_X16 + v83);
            v187 = (uint8x16_t)v183;
          }
          while (v188 > 2);
          v184 = *(uint8x16_t *)((char *)_X16 + v83);
        }
        v193 = (int8x16_t)vrhaddq_u8((uint8x16_t)v183, v184);
        v194 = v166[2].i8;
        v195 = v82.i64[0];
        vst2_s8(v194, (int8x8x2_t)v193);
        v172 = vzip2q_s8(v193, v82);
        goto LABEL_36;
      }
      __asm { PRFM            #0, [X26] }
      v103 = 9;
      v104 = a30;
      do
      {
        v105 = _X26;
        _X26 = (int8x16_t *)((char *)_X26 + v83);
        __asm { PRFM            #0, [X26] }
        v107 = (int8x8x2_t)*v105;
        v104[3] = vzip2q_s8(*v105, v82);
        v104 += 2;
        v108 = v82.i64[0];
        vst2_s8(v104->i8, v107);
        --v103;
      }
      while (v103 > 2);
      v109 = (int8x8x2_t)*_X26;
      v110 = vzip2q_s8(*_X26, v82);
      v111 = v104[2].i8;
      v112 = v82.i64[0];
      vst2_s8(v111, v109);
LABEL_18:
      v104[3] = v110;
      goto LABEL_23;
    }
    _X8 = &_X26->i8[v83];
    __asm { PRFM            #0, [X8] }
    v125 = *(uint8x16_t *)_X26;
    v126 = 9;
    v104 = a30;
    do
    {
      _X10 = &_X26->i8[a38];
      _X26 = (int8x16_t *)((char *)_X26 + v83);
      __asm { PRFM            #0, [X10] }
      v121 = *_X26;
      v129 = (int8x16_t)vrhaddq_u8(v125, *(uint8x16_t *)_X26);
      v130 = v82.i64[0];
      v104[3] = vzip2q_s8(v129, v82);
      v104 += 2;
      vst2_s8(v104->i8, (int8x8x2_t)v129);
      --v126;
      v125 = (uint8x16_t)v121;
    }
    while (v126 > 2);
    v122 = *(uint8x16_t *)((char *)_X26 + v83);
  }
  v131 = (int8x16_t)vrhaddq_u8((uint8x16_t)v121, v122);
  v132 = v104[2].i8;
  v133 = v82.i64[0];
  vst2_s8(v132, (int8x8x2_t)v131);
  v110 = vzip2q_s8(v131, v82);
  goto LABEL_18;
}

void sub_216044790(int8x16_t a1, int8x16_t a2, double a3, double a4, int8x16_t a5, int8x16_t a6, int8x16_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int64x2_t *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int64x2_t *a44)
{
  unsigned int *v44;
  unsigned int *v45;
  unint64_t v46;
  int64x2_t v47;
  int8x16_t v48;
  double v49;
  double v50;
  int8x16_t v51;
  int8x16_t v52;
  int8x16_t v53;
  int8x16_t v54;

  v46 = STACK[0x208];
  v47 = sub_2160855B4(a44, v45, STACK[0x208], a1, a2, a3, a4, a5, a6, a7, a8);
  sub_2160855B4(a21, v44, v46, (int8x16_t)v47, v48, v49, v50, v51, v52, v53, v54);
  JUMPOUT(0x216044A48);
}

void sub_216044BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int8x16_t *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29,int8x16_t *a30,uint64_t a31,int a32,int a33,uint64_t a34,int a35,int a36,uint16x8_t *a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int8x16_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int8x16_t *a49,uint64_t a50,int16x8_t *a51,int a52,int a53,int a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,int a63)
{
  uint64_t a65;
  uint64_t a71;
  uint64_t a72;
  uint64_t v72;
  int8x16_t *v73;
  uint64_t v74;
  int16x8_t *v75;
  uint64_t v76;
  int8x16_t *v78;
  uint64_t v79;
  uint64_t v80;
  int8x16_t v81;
  int16x8_t v82;
  int16x8_t v83;
  uint64_t v84;
  int8x16_t *v85;
  int8x16_t *v86;
  int16x8_t v87;
  int16x8_t v88;
  int16x8_t v89;
  int16x8_t v90;
  int16x8_t v91;
  int8x16_t *v92;
  int16x8_t v93;
  int16x8_t v94;
  uint64_t v95;
  int8x16_t *v96;
  int8x16_t *v97;
  int16x8_t v98;
  int16x8_t v99;
  int16x8_t v100;
  int16x8_t v101;
  int16x8_t v102;
  int8x16_t *v103;
  int16x8_t v104;
  uint16x8_t v105;
  int16x8_t v107;
  int16x8_t v108;
  uint64_t v109;
  int16x8_t v110;
  int16x8_t v111;
  int16x8_t v112;
  int16x8_t v113;
  int16x8_t v114;
  int16x8_t v115;
  int16x8_t v116;
  int16x8_t v117;
  uint64_t v118;
  uint64_t v119;
  unsigned int v125;
  int8x16_t *v126;
  int8x16_t *v127;
  int8x8x2_t v129;
  uint64_t v130;
  int8x8x2_t v131;
  int8x16_t v132;
  char *v133;
  uint64_t v134;
  int8x16_t *v136;
  unsigned int v137;
  int8x16_t v140;
  uint8x16_t v141;
  int8x16_t v142;
  int8x16_t v143;
  uint8x16_t v144;
  uint8x16_t v147;
  unsigned int v148;
  int8x16_t v151;
  uint64_t v152;
  int8x16_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  int v157;
  int8x16_t v158;
  int16x8_t v159;
  int8x16_t v160;
  int8x16_t v161;
  int16x8_t v162;
  int16x8_t v163;
  int8x16_t v164;
  int16x8_t v165;
  int8x16_t v168;
  int16x8_t v169;
  int16x8_t v170;
  int8x16_t *v171;
  int16x8_t v174;
  int8x16_t v175;
  uint64_t v176;
  int8x16_t v179;
  int16x8_t v180;
  int16x8_t v183;
  int8x16_t v184;
  uint16x8_t *v185;
  uint64_t v186;
  unsigned int v188;
  int8x16_t *v189;
  int8x16_t *v190;
  int8x8x2_t v192;
  uint64_t v193;
  int8x8x2_t v194;
  int8x16_t v195;
  char *i8;
  uint64_t v197;
  int8x16_t *v199;
  unsigned int v200;
  int8x16_t v203;
  uint8x16_t v204;
  int8x16_t v205;
  int8x16_t v206;
  uint8x16_t v207;
  uint8x16_t v210;
  unsigned int v211;
  int8x16_t v214;
  uint64_t v215;
  int8x16_t v216;
  char *v217;
  uint64_t v218;
  int16x8_t *v219;
  uint64_t v220;
  int v221;
  int8x16_t v222;
  int16x8_t v223;
  int8x16_t v224;
  int8x16_t v225;
  int16x8_t v226;
  int16x8_t v227;
  int8x16_t v228;
  int16x8_t v229;
  int8x16_t v232;
  int16x8_t v233;
  int16x8_t v234;
  int8x16_t *v235;
  int16x8_t v238;
  int8x16_t v239;
  uint64_t v240;
  int8x16_t v243;
  int16x8_t v244;
  int16x8_t v245;
  int16x8_t v248;
  int8x16_t v249;
  char v250;
  uint16x8_t *v251;
  char v252;
  int16x8_t v253;
  int16x8_t v254;
  int16x8_t v255;
  int16x8_t v256;
  int16x8_t v257;
  int16x8_t v258;
  int16x8_t v259;
  int16x8_t v260;

  v84 = 0;
  v85 = (int8x16_t *)(v76 + a24 + v80);
  v86 = (int8x16_t *)((char *)v85 + v80 + v80);
  v87 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v86 + v80), v81);
  v88 = (int16x8_t)vzip1q_s8(*v86, v81);
  v89 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v85 + v80), v81);
  v90 = (int16x8_t)vzip1q_s8(*v85, v81);
  v91 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v76 + a24), v81);
  v92 = (int8x16_t *)(a47 + a16 + a50 + a25);
  do
  {
    v93 = v90;
    v90 = v89;
    v89 = v88;
    v88 = v87;
    v87 = (int16x8_t)vzip1q_s8(*v92, v81);
    v94 = vsubq_s16(vshlq_n_s16(vaddq_s16(v90, v89), 2uLL), vaddq_s16(v93, v88));
    *(uint16x8_t *)(a1 + v84) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v91, v94), vshlq_n_s16(v94, 2uLL)), vaddq_s16(v87, v82)), v83))), (uint16x8_t)v90);
    v84 += 32;
    v92 = (int8x16_t *)((char *)v92 + v80);
    v91 = v93;
  }
  while ((_DWORD)v84 != 256);
  v95 = 0;
  v96 = (int8x16_t *)(v76 + a24 + 8 + v80);
  v97 = (int8x16_t *)((char *)v96 + v80 + v80);
  v98 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v97 + v80), v81);
  v99 = (int16x8_t)vzip1q_s8(*v97, v81);
  v100 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v96 + v80), v81);
  v101 = (int16x8_t)vzip1q_s8(*v96, v81);
  v102 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v76 + a24 + 8), v81);
  v103 = (int8x16_t *)(a47 + a12 + a50 + a25);
  v104.i64[0] = 0x20002000200020;
  v104.i64[1] = 0x20002000200020;
  v105.i64[0] = 0x5000500050005;
  v105.i64[1] = 0x5000500050005;
  _X16 = a49;
  do
  {
    v107 = v101;
    v101 = v100;
    v100 = v99;
    v99 = v98;
    v98 = (int16x8_t)vzip1q_s8(*v103, v81);
    v108 = vsubq_s16(vshlq_n_s16(vaddq_s16(v101, v100), 2uLL), vaddq_s16(v107, v99));
    *(uint16x8_t *)(v74 + v95) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v102, v108), vshlq_n_s16(v108, 2uLL)), vaddq_s16(v98, v82)), v83))), (uint16x8_t)v101);
    v95 += 32;
    v103 = (int8x16_t *)((char *)v103 + v80);
    v102 = v107;
  }
  while ((_DWORD)v95 != 256);
  v109 = 0;
  do
  {
    v110 = *(int16x8_t *)(a6 + v109 + 528);
    v111 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v109), *(uint16x8_t *)(a6 + v109 + 512));
    v112 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v109 + 16), (uint16x8_t)v110);
    v113 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v109 + 32), *(uint16x8_t *)(a6 + v109 + 544));
    v114 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v109 + 48), *(uint16x8_t *)(a6 + v109 + 560));
    if (a72)
    {
      v115 = *v75;
      v110 = v75[1];
      v116 = v75[2];
      v117 = v75[3];
      v75 += 4;
      v111 = vaddq_s16(v115, v111);
      v112 = vaddq_s16(v110, v112);
      v113 = vaddq_s16(v116, v113);
      v114 = vaddq_s16(v117, v114);
    }
    *v78 = vqmovun_high_s16(vqmovun_s16(v111), v112);
    *(int8x16_t *)((char *)v78 + v80) = vqmovun_high_s16(vqmovun_s16(v113), v114);
    v78 = (int8x16_t *)((char *)v78 + v72);
    v109 += 64;
  }
  while ((_DWORD)v109 != 256);
  if (a63 == 64)
  {
    __asm { PRFM            #0, [X26] }
    v136 = (int8x16_t *)(a43 + a15 + a65 + a14 + 16);
    v137 = 5;
    v126 = a30;
    v119 = a31;
    v118 = a38;
    do
    {
      _X11 = &v136->i8[v80];
      __asm { PRFUM           #0, [X11,#-0x10] }
      v140 = v136[-1];
      v141 = (uint8x16_t)vextq_s8(v140, v140, 2uLL);
      v141.i16[7] = v136->i16[0];
      v142 = (int8x16_t)vrhaddq_u8((uint8x16_t)v140, v141);
      v141.i64[0] = v81.i64[0];
      v126[3] = vzip2q_s8(v142, v81);
      v126 += 2;
      vst2_s8(v126->i8, *(int8x8x2_t *)((char *)&v141 - 8));
      --v137;
      v136 = (int8x16_t *)((char *)v136 + v80);
    }
    while (v137 > 2);
    v143 = v136[-1];
    v144 = (uint8x16_t)vextq_s8(v143, v143, 2uLL);
    v144.i16[7] = v136->i16[0];
  }
  else
  {
    v118 = a38;
    v119 = a31;
    if (a63 != 4)
    {
      if (a63)
      {
        v156 = 0;
        v157 = a29 * a53 - (8 * a53 + 8 * a29) + 64;
        v158 = v81;
        v158.i32[0] = v157 | (v157 << 16);
        v159 = (int16x8_t)vqtbl1q_s8(v158, a44);
        v160 = v81;
        v160.i32[0] = (8 * a53 - a29 * a53) | ((8 * a53 - a29 * a53) << 16);
        v161 = v81;
        v161.i32[0] = (8 * a29 - a29 * a53) | ((8 * a29 - a29 * a53) << 16);
        v162 = (int16x8_t)vqtbl1q_s8(v160, a44);
        v163 = (int16x8_t)vqtbl1q_s8(v161, a44);
        v164 = v81;
        v164.i32[0] = 65537 * a29 * a53;
        v165 = (int16x8_t)vqtbl1q_s8(v164, a44);
        *(int16x8_t *)(v79 - 224) = v159;
        *(int16x8_t *)(v79 - 208) = v162;
        *(int16x8_t *)(v79 - 192) = v163;
        *(int16x8_t *)(v79 - 176) = v165;
        _X9 = &_X26->i8[v80];
        __asm { PRFM            #0, [X9] }
        v110.i64[0] = _X26->i64[0];
        v168 = vqtbl1q_s8((int8x16_t)v110, (int8x16_t)xmmword_2160EE810);
        v168.i16[3] = _X26->i16[4];
        v169 = (int16x8_t)vzip1q_s8(v168, v81);
        v170 = (int16x8_t)vzip1q_s8((int8x16_t)v110, v81);
        v171 = _X26;
        do
        {
          _X11 = &v171->i8[a38];
          v171 = (int8x16_t *)((char *)v171 + v80);
          __asm { PRFM            #0, [X11] }
          v174 = vmlaq_s16(vmulq_s16(v162, v169), v159, v170);
          v169.i64[0] = v171->i64[0];
          v170 = (int16x8_t)vzip1q_s8((int8x16_t)v169, v81);
          v175 = vqtbl1q_s8((int8x16_t)v169, (int8x16_t)xmmword_2160EE810);
          v175.i16[3] = v171->i16[4];
          v169 = (int16x8_t)vzip1q_s8(v175, v81);
          *(uint16x8_t *)((char *)&STACK[0x640] + v156) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v174, v163, v170), v165, v169), v104), v105);
          v156 += 32;
        }
        while ((_DWORD)v156 != 128);
        v176 = 0;
        _X9 = &_X26->i8[v80 + 8];
        __asm { PRFM            #0, [X9] }
        v170.i64[0] = _X26->i64[1];
        v179 = vqtbl1q_s8((int8x16_t)v170, (int8x16_t)xmmword_2160EE810);
        v179.i16[3] = _X26[1].i16[0];
        v180 = (int16x8_t)vzip1q_s8(v179, v81);
        v110 = (int16x8_t)vzip1q_s8((int8x16_t)v170, v81);
        do
        {
          _X9 = &_X26->i8[a31];
          _X26 = (int8x16_t *)((char *)_X26 + v80);
          __asm { PRFM            #0, [X9] }
          v183 = vmlaq_s16(vmulq_s16(v162, v180), v159, v110);
          v180.i64[0] = _X26->i64[1];
          v110 = (int16x8_t)vzip1q_s8((int8x16_t)v180, v81);
          v184 = vqtbl1q_s8((int8x16_t)v180, (int8x16_t)xmmword_2160EE810);
          v184.i16[3] = _X26[1].i16[0];
          v180 = (int16x8_t)vzip1q_s8(v184, v81);
          *(uint16x8_t *)(a40 + v176) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v183, v163, v110), v165, v180), v104), v105);
          v176 += 32;
        }
        while ((_DWORD)v176 != 128);
LABEL_27:
        if (a36 == 64)
        {
          __asm { PRFM            #0, [X16] }
          v199 = (int8x16_t *)(a48 + a27 + a50 + a26 + 16);
          v200 = 5;
          v189 = a17;
          v185 = a37;
          v186 = a71;
          do
          {
            _X11 = &v199->i8[v80];
            __asm { PRFUM           #0, [X11,#-0x10] }
            v203 = v199[-1];
            v204 = (uint8x16_t)vextq_s8(v203, v203, 2uLL);
            v204.i16[7] = v199->i16[0];
            v205 = (int8x16_t)vrhaddq_u8((uint8x16_t)v203, v204);
            v204.i64[0] = v81.i64[0];
            v189[3] = vzip2q_s8(v205, v81);
            v189 += 2;
            vst2_s8(v189->i8, *(int8x8x2_t *)((char *)&v204 - 8));
            --v200;
            v199 = (int8x16_t *)((char *)v199 + v80);
          }
          while (v200 > 2);
          v206 = v199[-1];
          v207 = (uint8x16_t)vextq_s8(v206, v206, 2uLL);
          v207.i16[7] = v199->i16[0];
        }
        else
        {
          v185 = a37;
          v186 = a71;
          if (a36 != 4)
          {
            if (a36)
            {
              v220 = 0;
              v221 = a33 * a54 - (8 * a54 + 8 * a33) + 64;
              v222 = v81;
              v222.i32[0] = v221 | (v221 << 16);
              v223 = (int16x8_t)vqtbl1q_s8(v222, a44);
              v224 = v81;
              v224.i32[0] = (8 * a54 - a33 * a54) | ((8 * a54 - a33 * a54) << 16);
              v225 = v81;
              v225.i32[0] = (8 * a33 - a33 * a54) | ((8 * a33 - a33 * a54) << 16);
              v226 = (int16x8_t)vqtbl1q_s8(v224, a44);
              v227 = (int16x8_t)vqtbl1q_s8(v225, a44);
              v228 = v81;
              v228.i32[0] = 65537 * a33 * a54;
              v229 = (int16x8_t)vqtbl1q_s8(v228, a44);
              *(int16x8_t *)(v79 - 160) = v223;
              *(int16x8_t *)(v79 - 144) = v226;
              *(int16x8_t *)(v79 - 128) = v227;
              *(int16x8_t *)(v79 - 112) = v229;
              _X9 = &a49->i8[v80];
              __asm { PRFM            #0, [X9] }
              v110.i64[0] = a49->i64[0];
              v232 = vqtbl1q_s8((int8x16_t)v110, (int8x16_t)xmmword_2160EE810);
              v232.i16[3] = a49->i16[4];
              v233 = (int16x8_t)vzip1q_s8(v232, v81);
              v234 = (int16x8_t)vzip1q_s8((int8x16_t)v110, v81);
              v235 = a49;
              do
              {
                _X11 = (uint64_t)v235->i64 + v118;
                v235 = (int8x16_t *)((char *)v235 + v80);
                __asm { PRFM            #0, [X11] }
                v238 = vmlaq_s16(vmulq_s16(v226, v233), v223, v234);
                v233.i64[0] = v235->i64[0];
                v234 = (int16x8_t)vzip1q_s8((int8x16_t)v233, v81);
                v239 = vqtbl1q_s8((int8x16_t)v233, (int8x16_t)xmmword_2160EE810);
                v239.i16[3] = v235->i16[4];
                v233 = (int16x8_t)vzip1q_s8(v239, v81);
                a37[v220] = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v238, v227, v234), v229, v233), v104), v105);
                v220 += 2;
              }
              while ((_DWORD)(v220 * 16) != 128);
              v240 = 0;
              _X9 = &a49->i8[v80 + 8];
              __asm { PRFM            #0, [X9] }
              v234.i64[0] = a49->i64[1];
              v243 = vqtbl1q_s8((int8x16_t)v234, (int8x16_t)xmmword_2160EE810);
              v243.i16[3] = a49[1].i16[0];
              v244 = (int16x8_t)vzip1q_s8(v243, v81);
              v245 = (int16x8_t)vzip1q_s8((int8x16_t)v234, v81);
              v219 = a51;
              do
              {
                _X9 = &_X16->i8[v119];
                __asm { PRFM            #0, [X9] }
                v248 = vmlaq_s16(vmulq_s16(v226, v244), v223, v245);
                v244.i64[0] = *(uint64_t *)((char *)&_X16->i64[1] + v80);
                v245 = (int16x8_t)vzip1q_s8((int8x16_t)v244, v81);
                v249 = vqtbl1q_s8((int8x16_t)v244, (int8x16_t)xmmword_2160EE810);
                v249.i16[3] = *(__int16 *)((char *)_X16[1].i16 + v80);
                v244 = (int16x8_t)vzip1q_s8(v249, v81);
                *(uint16x8_t *)(a18 + v240) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v248, v227, v245), v229, v244), v104), v105);
                v240 += 32;
                _X16 = (int8x16_t *)((char *)_X16 + v80);
              }
              while ((_DWORD)v240 != 128);
              goto LABEL_45;
            }
            __asm { PRFM            #0, [X16] }
            v188 = 5;
            v189 = a17;
            do
            {
              v190 = _X16;
              _X16 = (int8x16_t *)((char *)_X16 + v80);
              __asm { PRFM            #0, [X16] }
              v192 = (int8x8x2_t)*v190;
              v189[3] = vzip2q_s8(*v190, v81);
              v189 += 2;
              v193 = v81.i64[0];
              vst2_s8(v189->i8, v192);
              --v188;
            }
            while (v188 > 2);
            v194 = (int8x8x2_t)*_X16;
            v195 = vzip2q_s8(*_X16, v81);
            i8 = v189[2].i8;
            v197 = v81.i64[0];
            vst2_s8(i8, v194);
LABEL_40:
            v219 = a51;
            v189[3] = v195;
LABEL_45:
            v250 = 1;
            v251 = v185;
            while (1)
            {
              v252 = v250;
              v253 = (int16x8_t)vrhaddq_u16(v251[-16], *v251);
              v254 = (int16x8_t)vrhaddq_u16(v251[-15], v251[1]);
              v255 = (int16x8_t)vrhaddq_u16(v251[-14], v251[2]);
              v256 = (int16x8_t)vrhaddq_u16(v251[-13], v251[3]);
              if (v186)
              {
                v257 = *v219;
                v258 = v219[1];
                v259 = v219[2];
                v260 = v219[3];
                v219 += 4;
                v253 = vaddq_s16(v257, v253);
                v254 = vaddq_s16(v258, v254);
                v255 = vaddq_s16(v259, v255);
                v256 = vaddq_s16(v260, v256);
              }
              v250 = 0;
              v251 += 4;
              *v73 = vqmovun_high_s16(vqmovun_s16(v253), v254);
              *(int8x16_t *)((char *)v73 + v80) = vqmovun_high_s16(vqmovun_s16(v255), v256);
              v73 = (int8x16_t *)((char *)v73 + v72);
              if ((v252 & 1) == 0)
                JUMPOUT(0x21604A7E4);
            }
          }
          _X8 = &a49->i8[v80];
          __asm { PRFM            #0, [X8] }
          v210 = *(uint8x16_t *)a49;
          v211 = 5;
          v189 = a17;
          do
          {
            _X10 = &_X16->i8[v118];
            __asm { PRFM            #0, [X10] }
            v206 = *(int8x16_t *)((char *)_X16 + v80);
            v214 = (int8x16_t)vrhaddq_u8(v210, (uint8x16_t)v206);
            v215 = v81.i64[0];
            v189[3] = vzip2q_s8(v214, v81);
            v189 += 2;
            vst2_s8(v189->i8, (int8x8x2_t)v214);
            --v211;
            _X16 = (int8x16_t *)((char *)_X16 + v80);
            v210 = (uint8x16_t)v206;
          }
          while (v211 > 2);
          v207 = *(uint8x16_t *)((char *)_X16 + v80);
        }
        v216 = (int8x16_t)vrhaddq_u8((uint8x16_t)v206, v207);
        v217 = v189[2].i8;
        v218 = v81.i64[0];
        vst2_s8(v217, (int8x8x2_t)v216);
        v195 = vzip2q_s8(v216, v81);
        goto LABEL_40;
      }
      __asm { PRFM            #0, [X26] }
      v125 = 5;
      v126 = a30;
      do
      {
        v127 = _X26;
        _X26 = (int8x16_t *)((char *)_X26 + v80);
        __asm { PRFM            #0, [X26] }
        v129 = (int8x8x2_t)*v127;
        v126[3] = vzip2q_s8(*v127, v81);
        v126 += 2;
        v130 = v81.i64[0];
        vst2_s8(v126->i8, v129);
        --v125;
      }
      while (v125 > 2);
      v131 = (int8x8x2_t)*_X26;
      v132 = vzip2q_s8(*_X26, v81);
      v133 = v126[2].i8;
      v134 = v81.i64[0];
      vst2_s8(v133, v131);
LABEL_22:
      v126[3] = v132;
      goto LABEL_27;
    }
    _X8 = &_X26->i8[v80];
    __asm { PRFM            #0, [X8] }
    v147 = *(uint8x16_t *)_X26;
    v148 = 5;
    v126 = a30;
    do
    {
      _X10 = &_X26->i8[a38];
      _X26 = (int8x16_t *)((char *)_X26 + v80);
      __asm { PRFM            #0, [X10] }
      v143 = *_X26;
      v151 = (int8x16_t)vrhaddq_u8(v147, *(uint8x16_t *)_X26);
      v152 = v81.i64[0];
      v126[3] = vzip2q_s8(v151, v81);
      v126 += 2;
      vst2_s8(v126->i8, (int8x8x2_t)v151);
      --v148;
      v147 = (uint8x16_t)v143;
    }
    while (v148 > 2);
    v144 = *(uint8x16_t *)((char *)_X26 + v80);
  }
  v153 = (int8x16_t)vrhaddq_u8((uint8x16_t)v143, v144);
  v154 = v126[2].i8;
  v155 = v81.i64[0];
  vst2_s8(v154, (int8x8x2_t)v153);
  v132 = vzip2q_s8(v153, v81);
  goto LABEL_22;
}

void sub_216044D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int8x16_t *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29,int8x16_t *a30,uint64_t a31,int a32,int a33,uint64_t a34,int a35,int a36,uint16x8_t *a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int8x16_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int8x16_t *a49,uint64_t a50,int16x8_t *a51,int a52,int a53,int a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,int a63)
{
  uint64_t a65;
  uint64_t a71;
  uint64_t a72;
  uint64_t v72;
  int8x16_t *v73;
  uint64_t v74;
  int16x8_t *v75;
  uint64_t v76;
  int8x16_t *v78;
  uint64_t v79;
  uint64_t v80;
  int8x16_t v81;
  int16x8_t v82;
  int16x8_t v83;
  uint64_t v84;
  int8x16_t *v85;
  int8x16_t *v86;
  int16x8_t v87;
  int16x8_t v88;
  int16x8_t v89;
  int16x8_t v90;
  int16x8_t v91;
  int8x16_t *v92;
  int16x8_t v93;
  char *v94;
  int16x8_t v95;
  uint64_t v96;
  uint64_t v97;
  int8x16_t *v98;
  int8x16_t *v99;
  int16x8_t v100;
  int16x8_t v101;
  int16x8_t v102;
  int16x8_t v103;
  int16x8_t v104;
  int8x16_t *v105;
  int16x8_t v106;
  uint16x8_t v107;
  int16x8_t v109;
  char *v110;
  int16x8_t v111;
  uint64_t v112;
  uint64_t v113;
  int16x8_t v114;
  int16x8_t v115;
  int16x8_t v116;
  int16x8_t v117;
  int16x8_t v118;
  int16x8_t v119;
  int16x8_t v120;
  int16x8_t v121;
  uint64_t v122;
  uint64_t v123;
  unsigned int v129;
  int8x16_t *v130;
  int8x16_t *v131;
  int8x8x2_t v133;
  uint64_t v134;
  int8x8x2_t v135;
  int8x16_t v136;
  char *v137;
  uint64_t v138;
  int8x16_t *v140;
  unsigned int v141;
  int8x16_t v144;
  uint8x16_t v145;
  int8x16_t v146;
  int8x16_t v147;
  uint8x16_t v148;
  uint8x16_t v151;
  unsigned int v152;
  int8x16_t v155;
  uint64_t v156;
  int8x16_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  int v161;
  int8x16_t v162;
  int16x8_t v163;
  int8x16_t v164;
  int8x16_t v165;
  int16x8_t v166;
  int16x8_t v167;
  int8x16_t v168;
  int16x8_t v169;
  int8x16_t v172;
  int16x8_t v173;
  int16x8_t v174;
  int8x16_t *v175;
  int16x8_t v178;
  int8x16_t v179;
  uint64_t v180;
  int8x16_t v183;
  int16x8_t v184;
  int16x8_t v187;
  int8x16_t v188;
  uint16x8_t *v189;
  uint64_t v190;
  unsigned int v192;
  int8x16_t *v193;
  int8x16_t *v194;
  int8x8x2_t v196;
  uint64_t v197;
  int8x8x2_t v198;
  int8x16_t v199;
  char *i8;
  uint64_t v201;
  int8x16_t *v203;
  unsigned int v204;
  int8x16_t v207;
  uint8x16_t v208;
  int8x16_t v209;
  int8x16_t v210;
  uint8x16_t v211;
  uint8x16_t v214;
  unsigned int v215;
  int8x16_t v218;
  uint64_t v219;
  int8x16_t v220;
  char *v221;
  uint64_t v222;
  int16x8_t *v223;
  uint64_t v224;
  int v225;
  int8x16_t v226;
  int16x8_t v227;
  int8x16_t v228;
  int8x16_t v229;
  int16x8_t v230;
  int16x8_t v231;
  int8x16_t v232;
  int16x8_t v233;
  int8x16_t v236;
  int16x8_t v237;
  int16x8_t v238;
  int8x16_t *v239;
  int16x8_t v242;
  int8x16_t v243;
  uint64_t v244;
  int8x16_t v247;
  int16x8_t v248;
  int16x8_t v249;
  int16x8_t v252;
  int8x16_t v253;
  char v254;
  uint16x8_t *v255;
  char v256;
  int16x8_t v257;
  int16x8_t v258;
  int16x8_t v259;
  int16x8_t v260;
  int16x8_t v261;
  int16x8_t v262;
  int16x8_t v263;
  int16x8_t v264;

  v84 = 0;
  v85 = (int8x16_t *)(v76 + a24 + v80);
  v86 = (int8x16_t *)((char *)v85 + v80 + v80);
  v87 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v86 + v80), v81);
  v88 = (int16x8_t)vzip1q_s8(*v86, v81);
  v89 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v85 + v80), v81);
  v90 = (int16x8_t)vzip1q_s8(*v85, v81);
  v91 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v76 + a24), v81);
  v92 = (int8x16_t *)(a47 + a16 + a50 + a25);
  do
  {
    v93 = v90;
    v90 = v89;
    v89 = v88;
    v88 = v87;
    v94 = (char *)(a1 + v84);
    v87 = (int16x8_t)vzip1q_s8(*v92, v81);
    v95 = vsubq_s16(vshlq_n_s16(vaddq_s16(v90, v89), 2uLL), vaddq_s16(v93, v88));
    *(int8x8_t *)v95.i8 = vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v91, v95), vshlq_n_s16(v95, 2uLL)), vaddq_s16(v87, v82)), v83));
    v96 = v81.i64[0];
    vst2_s8(v94, (int8x8x2_t)v95);
    v84 += 32;
    v92 = (int8x16_t *)((char *)v92 + v80);
    v91 = v93;
  }
  while ((_DWORD)v84 != 256);
  v97 = 0;
  v98 = (int8x16_t *)(v76 + a24 + 8 + v80);
  v99 = (int8x16_t *)((char *)v98 + v80 + v80);
  v100 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v99 + v80), v81);
  v101 = (int16x8_t)vzip1q_s8(*v99, v81);
  v102 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v98 + v80), v81);
  v103 = (int16x8_t)vzip1q_s8(*v98, v81);
  v104 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v76 + a24 + 8), v81);
  v105 = (int8x16_t *)(a47 + a12 + a50 + a25);
  v106.i64[0] = 0x20002000200020;
  v106.i64[1] = 0x20002000200020;
  v107.i64[0] = 0x5000500050005;
  v107.i64[1] = 0x5000500050005;
  _X16 = a49;
  do
  {
    v109 = v103;
    v103 = v102;
    v102 = v101;
    v101 = v100;
    v110 = (char *)(v74 + v97);
    v100 = (int16x8_t)vzip1q_s8(*v105, v81);
    v111 = vsubq_s16(vshlq_n_s16(vaddq_s16(v103, v102), 2uLL), vaddq_s16(v109, v101));
    *(int8x8_t *)v111.i8 = vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v104, v111), vshlq_n_s16(v111, 2uLL)), vaddq_s16(v100, v82)), v83));
    v112 = v81.i64[0];
    vst2_s8(v110, (int8x8x2_t)v111);
    v97 += 32;
    v105 = (int8x16_t *)((char *)v105 + v80);
    v104 = v109;
  }
  while ((_DWORD)v97 != 256);
  v113 = 0;
  do
  {
    v114 = *(int16x8_t *)(a6 + v113 + 528);
    v115 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v113), *(uint16x8_t *)(a6 + v113 + 512));
    v116 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v113 + 16), (uint16x8_t)v114);
    v117 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v113 + 32), *(uint16x8_t *)(a6 + v113 + 544));
    v118 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v113 + 48), *(uint16x8_t *)(a6 + v113 + 560));
    if (a72)
    {
      v119 = *v75;
      v114 = v75[1];
      v120 = v75[2];
      v121 = v75[3];
      v75 += 4;
      v115 = vaddq_s16(v119, v115);
      v116 = vaddq_s16(v114, v116);
      v117 = vaddq_s16(v120, v117);
      v118 = vaddq_s16(v121, v118);
    }
    *v78 = vqmovun_high_s16(vqmovun_s16(v115), v116);
    *(int8x16_t *)((char *)v78 + v80) = vqmovun_high_s16(vqmovun_s16(v117), v118);
    v78 = (int8x16_t *)((char *)v78 + v72);
    v113 += 64;
  }
  while ((_DWORD)v113 != 256);
  if (a63 == 64)
  {
    __asm { PRFM            #0, [X26] }
    v140 = (int8x16_t *)(a43 + a15 + a65 + a14 + 16);
    v141 = 5;
    v130 = a30;
    v123 = a31;
    v122 = a38;
    do
    {
      _X11 = &v140->i8[v80];
      __asm { PRFUM           #0, [X11,#-0x10] }
      v144 = v140[-1];
      v145 = (uint8x16_t)vextq_s8(v144, v144, 2uLL);
      v145.i16[7] = v140->i16[0];
      v146 = (int8x16_t)vrhaddq_u8((uint8x16_t)v144, v145);
      v145.i64[0] = v81.i64[0];
      v130[3] = vzip2q_s8(v146, v81);
      v130 += 2;
      vst2_s8(v130->i8, *(int8x8x2_t *)((char *)&v145 - 8));
      --v141;
      v140 = (int8x16_t *)((char *)v140 + v80);
    }
    while (v141 > 2);
    v147 = v140[-1];
    v148 = (uint8x16_t)vextq_s8(v147, v147, 2uLL);
    v148.i16[7] = v140->i16[0];
  }
  else
  {
    v122 = a38;
    v123 = a31;
    if (a63 != 4)
    {
      if (a63)
      {
        v160 = 0;
        v161 = a29 * a53 - (8 * a53 + 8 * a29) + 64;
        v162 = v81;
        v162.i32[0] = v161 | (v161 << 16);
        v163 = (int16x8_t)vqtbl1q_s8(v162, a44);
        v164 = v81;
        v164.i32[0] = (8 * a53 - a29 * a53) | ((8 * a53 - a29 * a53) << 16);
        v165 = v81;
        v165.i32[0] = (8 * a29 - a29 * a53) | ((8 * a29 - a29 * a53) << 16);
        v166 = (int16x8_t)vqtbl1q_s8(v164, a44);
        v167 = (int16x8_t)vqtbl1q_s8(v165, a44);
        v168 = v81;
        v168.i32[0] = 65537 * a29 * a53;
        v169 = (int16x8_t)vqtbl1q_s8(v168, a44);
        *(int16x8_t *)(v79 - 224) = v163;
        *(int16x8_t *)(v79 - 208) = v166;
        *(int16x8_t *)(v79 - 192) = v167;
        *(int16x8_t *)(v79 - 176) = v169;
        _X9 = &_X26->i8[v80];
        __asm { PRFM            #0, [X9] }
        v114.i64[0] = _X26->i64[0];
        v172 = vqtbl1q_s8((int8x16_t)v114, (int8x16_t)xmmword_2160EE810);
        v172.i16[3] = _X26->i16[4];
        v173 = (int16x8_t)vzip1q_s8(v172, v81);
        v174 = (int16x8_t)vzip1q_s8((int8x16_t)v114, v81);
        v175 = _X26;
        do
        {
          _X11 = &v175->i8[a38];
          v175 = (int8x16_t *)((char *)v175 + v80);
          __asm { PRFM            #0, [X11] }
          v178 = vmlaq_s16(vmulq_s16(v166, v173), v163, v174);
          v173.i64[0] = v175->i64[0];
          v174 = (int16x8_t)vzip1q_s8((int8x16_t)v173, v81);
          v179 = vqtbl1q_s8((int8x16_t)v173, (int8x16_t)xmmword_2160EE810);
          v179.i16[3] = v175->i16[4];
          v173 = (int16x8_t)vzip1q_s8(v179, v81);
          *(uint16x8_t *)((char *)&STACK[0x640] + v160) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v178, v167, v174), v169, v173), v106), v107);
          v160 += 32;
        }
        while ((_DWORD)v160 != 128);
        v180 = 0;
        _X9 = &_X26->i8[v80 + 8];
        __asm { PRFM            #0, [X9] }
        v174.i64[0] = _X26->i64[1];
        v183 = vqtbl1q_s8((int8x16_t)v174, (int8x16_t)xmmword_2160EE810);
        v183.i16[3] = _X26[1].i16[0];
        v184 = (int16x8_t)vzip1q_s8(v183, v81);
        v114 = (int16x8_t)vzip1q_s8((int8x16_t)v174, v81);
        do
        {
          _X9 = &_X26->i8[a31];
          _X26 = (int8x16_t *)((char *)_X26 + v80);
          __asm { PRFM            #0, [X9] }
          v187 = vmlaq_s16(vmulq_s16(v166, v184), v163, v114);
          v184.i64[0] = _X26->i64[1];
          v114 = (int16x8_t)vzip1q_s8((int8x16_t)v184, v81);
          v188 = vqtbl1q_s8((int8x16_t)v184, (int8x16_t)xmmword_2160EE810);
          v188.i16[3] = _X26[1].i16[0];
          v184 = (int16x8_t)vzip1q_s8(v188, v81);
          *(uint16x8_t *)(a40 + v180) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v187, v167, v114), v169, v184), v106), v107);
          v180 += 32;
        }
        while ((_DWORD)v180 != 128);
LABEL_27:
        if (a36 == 64)
        {
          __asm { PRFM            #0, [X16] }
          v203 = (int8x16_t *)(a48 + a27 + a50 + a26 + 16);
          v204 = 5;
          v193 = a17;
          v189 = a37;
          v190 = a71;
          do
          {
            _X11 = &v203->i8[v80];
            __asm { PRFUM           #0, [X11,#-0x10] }
            v207 = v203[-1];
            v208 = (uint8x16_t)vextq_s8(v207, v207, 2uLL);
            v208.i16[7] = v203->i16[0];
            v209 = (int8x16_t)vrhaddq_u8((uint8x16_t)v207, v208);
            v208.i64[0] = v81.i64[0];
            v193[3] = vzip2q_s8(v209, v81);
            v193 += 2;
            vst2_s8(v193->i8, *(int8x8x2_t *)((char *)&v208 - 8));
            --v204;
            v203 = (int8x16_t *)((char *)v203 + v80);
          }
          while (v204 > 2);
          v210 = v203[-1];
          v211 = (uint8x16_t)vextq_s8(v210, v210, 2uLL);
          v211.i16[7] = v203->i16[0];
        }
        else
        {
          v189 = a37;
          v190 = a71;
          if (a36 != 4)
          {
            if (a36)
            {
              v224 = 0;
              v225 = a33 * a54 - (8 * a54 + 8 * a33) + 64;
              v226 = v81;
              v226.i32[0] = v225 | (v225 << 16);
              v227 = (int16x8_t)vqtbl1q_s8(v226, a44);
              v228 = v81;
              v228.i32[0] = (8 * a54 - a33 * a54) | ((8 * a54 - a33 * a54) << 16);
              v229 = v81;
              v229.i32[0] = (8 * a33 - a33 * a54) | ((8 * a33 - a33 * a54) << 16);
              v230 = (int16x8_t)vqtbl1q_s8(v228, a44);
              v231 = (int16x8_t)vqtbl1q_s8(v229, a44);
              v232 = v81;
              v232.i32[0] = 65537 * a33 * a54;
              v233 = (int16x8_t)vqtbl1q_s8(v232, a44);
              *(int16x8_t *)(v79 - 160) = v227;
              *(int16x8_t *)(v79 - 144) = v230;
              *(int16x8_t *)(v79 - 128) = v231;
              *(int16x8_t *)(v79 - 112) = v233;
              _X9 = &a49->i8[v80];
              __asm { PRFM            #0, [X9] }
              v114.i64[0] = a49->i64[0];
              v236 = vqtbl1q_s8((int8x16_t)v114, (int8x16_t)xmmword_2160EE810);
              v236.i16[3] = a49->i16[4];
              v237 = (int16x8_t)vzip1q_s8(v236, v81);
              v238 = (int16x8_t)vzip1q_s8((int8x16_t)v114, v81);
              v239 = a49;
              do
              {
                _X11 = (uint64_t)v239->i64 + v122;
                v239 = (int8x16_t *)((char *)v239 + v80);
                __asm { PRFM            #0, [X11] }
                v242 = vmlaq_s16(vmulq_s16(v230, v237), v227, v238);
                v237.i64[0] = v239->i64[0];
                v238 = (int16x8_t)vzip1q_s8((int8x16_t)v237, v81);
                v243 = vqtbl1q_s8((int8x16_t)v237, (int8x16_t)xmmword_2160EE810);
                v243.i16[3] = v239->i16[4];
                v237 = (int16x8_t)vzip1q_s8(v243, v81);
                a37[v224] = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v242, v231, v238), v233, v237), v106), v107);
                v224 += 2;
              }
              while ((_DWORD)(v224 * 16) != 128);
              v244 = 0;
              _X9 = &a49->i8[v80 + 8];
              __asm { PRFM            #0, [X9] }
              v238.i64[0] = a49->i64[1];
              v247 = vqtbl1q_s8((int8x16_t)v238, (int8x16_t)xmmword_2160EE810);
              v247.i16[3] = a49[1].i16[0];
              v248 = (int16x8_t)vzip1q_s8(v247, v81);
              v249 = (int16x8_t)vzip1q_s8((int8x16_t)v238, v81);
              v223 = a51;
              do
              {
                _X9 = &_X16->i8[v123];
                __asm { PRFM            #0, [X9] }
                v252 = vmlaq_s16(vmulq_s16(v230, v248), v227, v249);
                v248.i64[0] = *(uint64_t *)((char *)&_X16->i64[1] + v80);
                v249 = (int16x8_t)vzip1q_s8((int8x16_t)v248, v81);
                v253 = vqtbl1q_s8((int8x16_t)v248, (int8x16_t)xmmword_2160EE810);
                v253.i16[3] = *(__int16 *)((char *)_X16[1].i16 + v80);
                v248 = (int16x8_t)vzip1q_s8(v253, v81);
                *(uint16x8_t *)(a18 + v244) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v252, v231, v249), v233, v248), v106), v107);
                v244 += 32;
                _X16 = (int8x16_t *)((char *)_X16 + v80);
              }
              while ((_DWORD)v244 != 128);
              goto LABEL_45;
            }
            __asm { PRFM            #0, [X16] }
            v192 = 5;
            v193 = a17;
            do
            {
              v194 = _X16;
              _X16 = (int8x16_t *)((char *)_X16 + v80);
              __asm { PRFM            #0, [X16] }
              v196 = (int8x8x2_t)*v194;
              v193[3] = vzip2q_s8(*v194, v81);
              v193 += 2;
              v197 = v81.i64[0];
              vst2_s8(v193->i8, v196);
              --v192;
            }
            while (v192 > 2);
            v198 = (int8x8x2_t)*_X16;
            v199 = vzip2q_s8(*_X16, v81);
            i8 = v193[2].i8;
            v201 = v81.i64[0];
            vst2_s8(i8, v198);
LABEL_40:
            v223 = a51;
            v193[3] = v199;
LABEL_45:
            v254 = 1;
            v255 = v189;
            while (1)
            {
              v256 = v254;
              v257 = (int16x8_t)vrhaddq_u16(v255[-16], *v255);
              v258 = (int16x8_t)vrhaddq_u16(v255[-15], v255[1]);
              v259 = (int16x8_t)vrhaddq_u16(v255[-14], v255[2]);
              v260 = (int16x8_t)vrhaddq_u16(v255[-13], v255[3]);
              if (v190)
              {
                v261 = *v223;
                v262 = v223[1];
                v263 = v223[2];
                v264 = v223[3];
                v223 += 4;
                v257 = vaddq_s16(v261, v257);
                v258 = vaddq_s16(v262, v258);
                v259 = vaddq_s16(v263, v259);
                v260 = vaddq_s16(v264, v260);
              }
              v254 = 0;
              v255 += 4;
              *v73 = vqmovun_high_s16(vqmovun_s16(v257), v258);
              *(int8x16_t *)((char *)v73 + v80) = vqmovun_high_s16(vqmovun_s16(v259), v260);
              v73 = (int8x16_t *)((char *)v73 + v72);
              if ((v256 & 1) == 0)
                JUMPOUT(0x21604A7E4);
            }
          }
          _X8 = &a49->i8[v80];
          __asm { PRFM            #0, [X8] }
          v214 = *(uint8x16_t *)a49;
          v215 = 5;
          v193 = a17;
          do
          {
            _X10 = &_X16->i8[v122];
            __asm { PRFM            #0, [X10] }
            v210 = *(int8x16_t *)((char *)_X16 + v80);
            v218 = (int8x16_t)vrhaddq_u8(v214, (uint8x16_t)v210);
            v219 = v81.i64[0];
            v193[3] = vzip2q_s8(v218, v81);
            v193 += 2;
            vst2_s8(v193->i8, (int8x8x2_t)v218);
            --v215;
            _X16 = (int8x16_t *)((char *)_X16 + v80);
            v214 = (uint8x16_t)v210;
          }
          while (v215 > 2);
          v211 = *(uint8x16_t *)((char *)_X16 + v80);
        }
        v220 = (int8x16_t)vrhaddq_u8((uint8x16_t)v210, v211);
        v221 = v193[2].i8;
        v222 = v81.i64[0];
        vst2_s8(v221, (int8x8x2_t)v220);
        v199 = vzip2q_s8(v220, v81);
        goto LABEL_40;
      }
      __asm { PRFM            #0, [X26] }
      v129 = 5;
      v130 = a30;
      do
      {
        v131 = _X26;
        _X26 = (int8x16_t *)((char *)_X26 + v80);
        __asm { PRFM            #0, [X26] }
        v133 = (int8x8x2_t)*v131;
        v130[3] = vzip2q_s8(*v131, v81);
        v130 += 2;
        v134 = v81.i64[0];
        vst2_s8(v130->i8, v133);
        --v129;
      }
      while (v129 > 2);
      v135 = (int8x8x2_t)*_X26;
      v136 = vzip2q_s8(*_X26, v81);
      v137 = v130[2].i8;
      v138 = v81.i64[0];
      vst2_s8(v137, v135);
LABEL_22:
      v130[3] = v136;
      goto LABEL_27;
    }
    _X8 = &_X26->i8[v80];
    __asm { PRFM            #0, [X8] }
    v151 = *(uint8x16_t *)_X26;
    v152 = 5;
    v130 = a30;
    do
    {
      _X10 = &_X26->i8[a38];
      _X26 = (int8x16_t *)((char *)_X26 + v80);
      __asm { PRFM            #0, [X10] }
      v147 = *_X26;
      v155 = (int8x16_t)vrhaddq_u8(v151, *(uint8x16_t *)_X26);
      v156 = v81.i64[0];
      v130[3] = vzip2q_s8(v155, v81);
      v130 += 2;
      vst2_s8(v130->i8, (int8x8x2_t)v155);
      --v152;
      v151 = (uint8x16_t)v147;
    }
    while (v152 > 2);
    v148 = *(uint8x16_t *)((char *)_X26 + v80);
  }
  v157 = (int8x16_t)vrhaddq_u8((uint8x16_t)v147, v148);
  v158 = v130[2].i8;
  v159 = v81.i64[0];
  vst2_s8(v158, (int8x8x2_t)v157);
  v136 = vzip2q_s8(v157, v81);
  goto LABEL_22;
}

void sub_216044F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int8x16_t *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29,int8x16_t *a30,uint64_t a31,int a32,int a33,uint64_t a34,int a35,int a36,uint16x8_t *a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int8x16_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int8x16_t *a49,uint64_t a50,int16x8_t *a51,int a52,int a53,int a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,int a63)
{
  uint64_t a65;
  uint64_t a71;
  uint64_t a72;
  uint64_t v72;
  int8x16_t *v73;
  uint64_t v74;
  int16x8_t *v75;
  uint64_t v76;
  int8x16_t *v78;
  uint64_t v79;
  uint64_t v80;
  int8x16_t v81;
  int16x8_t v82;
  int16x8_t v83;
  uint64_t v84;
  int8x16_t *v85;
  int8x16_t *v86;
  int16x8_t v87;
  int16x8_t v88;
  int16x8_t v89;
  int16x8_t v90;
  int16x8_t v91;
  int8x16_t *v92;
  int16x8_t v93;
  int16x8_t v94;
  uint64_t v95;
  int8x16_t *v96;
  int8x16_t *v97;
  int16x8_t v98;
  int16x8_t v99;
  int16x8_t v100;
  int16x8_t v101;
  int16x8_t v102;
  int8x16_t *v103;
  int16x8_t v104;
  uint16x8_t v105;
  int16x8_t v107;
  int16x8_t v108;
  uint64_t v109;
  int16x8_t v110;
  int16x8_t v111;
  int16x8_t v112;
  int16x8_t v113;
  int16x8_t v114;
  int16x8_t v115;
  int16x8_t v116;
  int16x8_t v117;
  uint64_t v118;
  uint64_t v119;
  unsigned int v125;
  int8x16_t *v126;
  int8x16_t *v127;
  int8x8x2_t v129;
  uint64_t v130;
  int8x8x2_t v131;
  int8x16_t v132;
  char *v133;
  uint64_t v134;
  int8x16_t *v136;
  unsigned int v137;
  int8x16_t v140;
  uint8x16_t v141;
  int8x16_t v142;
  int8x16_t v143;
  uint8x16_t v144;
  uint8x16_t v147;
  unsigned int v148;
  int8x16_t v151;
  uint64_t v152;
  int8x16_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  int v157;
  int8x16_t v158;
  int16x8_t v159;
  int8x16_t v160;
  int8x16_t v161;
  int16x8_t v162;
  int16x8_t v163;
  int8x16_t v164;
  int16x8_t v165;
  int8x16_t v168;
  int16x8_t v169;
  int16x8_t v170;
  int8x16_t *v171;
  int16x8_t v174;
  int8x16_t v175;
  uint64_t v176;
  int8x16_t v179;
  int16x8_t v180;
  int16x8_t v183;
  int8x16_t v184;
  uint16x8_t *v185;
  uint64_t v186;
  unsigned int v188;
  int8x16_t *v189;
  int8x16_t *v190;
  int8x8x2_t v192;
  uint64_t v193;
  int8x8x2_t v194;
  int8x16_t v195;
  char *i8;
  uint64_t v197;
  int8x16_t *v199;
  unsigned int v200;
  int8x16_t v203;
  uint8x16_t v204;
  int8x16_t v205;
  int8x16_t v206;
  uint8x16_t v207;
  uint8x16_t v210;
  unsigned int v211;
  int8x16_t v214;
  uint64_t v215;
  int8x16_t v216;
  char *v217;
  uint64_t v218;
  int16x8_t *v219;
  uint64_t v220;
  int v221;
  int8x16_t v222;
  int16x8_t v223;
  int8x16_t v224;
  int8x16_t v225;
  int16x8_t v226;
  int16x8_t v227;
  int8x16_t v228;
  int16x8_t v229;
  int8x16_t v232;
  int16x8_t v233;
  int16x8_t v234;
  int8x16_t *v235;
  int16x8_t v238;
  int8x16_t v239;
  uint64_t v240;
  int8x16_t v243;
  int16x8_t v244;
  int16x8_t v245;
  int16x8_t v248;
  int8x16_t v249;
  char v250;
  uint16x8_t *v251;
  char v252;
  int16x8_t v253;
  int16x8_t v254;
  int16x8_t v255;
  int16x8_t v256;
  int16x8_t v257;
  int16x8_t v258;
  int16x8_t v259;
  int16x8_t v260;

  v84 = 0;
  v85 = (int8x16_t *)(v76 + a24 + v80);
  v86 = (int8x16_t *)((char *)v85 + v80 + v80);
  v87 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v86 + v80), v81);
  v88 = (int16x8_t)vzip1q_s8(*v86, v81);
  v89 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v85 + v80), v81);
  v90 = (int16x8_t)vzip1q_s8(*v85, v81);
  v91 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v76 + a24), v81);
  v92 = (int8x16_t *)(a47 + a16 + a50 + a25);
  do
  {
    v93 = v90;
    v90 = v89;
    v89 = v88;
    v88 = v87;
    v87 = (int16x8_t)vzip1q_s8(*v92, v81);
    v94 = vsubq_s16(vshlq_n_s16(vaddq_s16(v90, v89), 2uLL), vaddq_s16(v93, v88));
    *(uint16x8_t *)(a1 + v84) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v91, v94), vshlq_n_s16(v94, 2uLL)), vaddq_s16(v87, v82)), v83))), (uint16x8_t)v89);
    v84 += 32;
    v92 = (int8x16_t *)((char *)v92 + v80);
    v91 = v93;
  }
  while ((_DWORD)v84 != 256);
  v95 = 0;
  v96 = (int8x16_t *)(v76 + a24 + 8 + v80);
  v97 = (int8x16_t *)((char *)v96 + v80 + v80);
  v98 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v97 + v80), v81);
  v99 = (int16x8_t)vzip1q_s8(*v97, v81);
  v100 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v96 + v80), v81);
  v101 = (int16x8_t)vzip1q_s8(*v96, v81);
  v102 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v76 + a24 + 8), v81);
  v103 = (int8x16_t *)(a47 + a12 + a50 + a25);
  v104.i64[0] = 0x20002000200020;
  v104.i64[1] = 0x20002000200020;
  v105.i64[0] = 0x5000500050005;
  v105.i64[1] = 0x5000500050005;
  _X16 = a49;
  do
  {
    v107 = v101;
    v101 = v100;
    v100 = v99;
    v99 = v98;
    v98 = (int16x8_t)vzip1q_s8(*v103, v81);
    v108 = vsubq_s16(vshlq_n_s16(vaddq_s16(v101, v100), 2uLL), vaddq_s16(v107, v99));
    *(uint16x8_t *)(v74 + v95) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v102, v108), vshlq_n_s16(v108, 2uLL)), vaddq_s16(v98, v82)), v83))), (uint16x8_t)v100);
    v95 += 32;
    v103 = (int8x16_t *)((char *)v103 + v80);
    v102 = v107;
  }
  while ((_DWORD)v95 != 256);
  v109 = 0;
  do
  {
    v110 = *(int16x8_t *)(a6 + v109 + 528);
    v111 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v109), *(uint16x8_t *)(a6 + v109 + 512));
    v112 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v109 + 16), (uint16x8_t)v110);
    v113 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v109 + 32), *(uint16x8_t *)(a6 + v109 + 544));
    v114 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v109 + 48), *(uint16x8_t *)(a6 + v109 + 560));
    if (a72)
    {
      v115 = *v75;
      v110 = v75[1];
      v116 = v75[2];
      v117 = v75[3];
      v75 += 4;
      v111 = vaddq_s16(v115, v111);
      v112 = vaddq_s16(v110, v112);
      v113 = vaddq_s16(v116, v113);
      v114 = vaddq_s16(v117, v114);
    }
    *v78 = vqmovun_high_s16(vqmovun_s16(v111), v112);
    *(int8x16_t *)((char *)v78 + v80) = vqmovun_high_s16(vqmovun_s16(v113), v114);
    v78 = (int8x16_t *)((char *)v78 + v72);
    v109 += 64;
  }
  while ((_DWORD)v109 != 256);
  if (a63 == 64)
  {
    __asm { PRFM            #0, [X26] }
    v136 = (int8x16_t *)(a43 + a15 + a65 + a14 + 16);
    v137 = 5;
    v126 = a30;
    v119 = a31;
    v118 = a38;
    do
    {
      _X11 = &v136->i8[v80];
      __asm { PRFUM           #0, [X11,#-0x10] }
      v140 = v136[-1];
      v141 = (uint8x16_t)vextq_s8(v140, v140, 2uLL);
      v141.i16[7] = v136->i16[0];
      v142 = (int8x16_t)vrhaddq_u8((uint8x16_t)v140, v141);
      v141.i64[0] = v81.i64[0];
      v126[3] = vzip2q_s8(v142, v81);
      v126 += 2;
      vst2_s8(v126->i8, *(int8x8x2_t *)((char *)&v141 - 8));
      --v137;
      v136 = (int8x16_t *)((char *)v136 + v80);
    }
    while (v137 > 2);
    v143 = v136[-1];
    v144 = (uint8x16_t)vextq_s8(v143, v143, 2uLL);
    v144.i16[7] = v136->i16[0];
  }
  else
  {
    v118 = a38;
    v119 = a31;
    if (a63 != 4)
    {
      if (a63)
      {
        v156 = 0;
        v157 = a29 * a53 - (8 * a53 + 8 * a29) + 64;
        v158 = v81;
        v158.i32[0] = v157 | (v157 << 16);
        v159 = (int16x8_t)vqtbl1q_s8(v158, a44);
        v160 = v81;
        v160.i32[0] = (8 * a53 - a29 * a53) | ((8 * a53 - a29 * a53) << 16);
        v161 = v81;
        v161.i32[0] = (8 * a29 - a29 * a53) | ((8 * a29 - a29 * a53) << 16);
        v162 = (int16x8_t)vqtbl1q_s8(v160, a44);
        v163 = (int16x8_t)vqtbl1q_s8(v161, a44);
        v164 = v81;
        v164.i32[0] = 65537 * a29 * a53;
        v165 = (int16x8_t)vqtbl1q_s8(v164, a44);
        *(int16x8_t *)(v79 - 224) = v159;
        *(int16x8_t *)(v79 - 208) = v162;
        *(int16x8_t *)(v79 - 192) = v163;
        *(int16x8_t *)(v79 - 176) = v165;
        _X9 = &_X26->i8[v80];
        __asm { PRFM            #0, [X9] }
        v110.i64[0] = _X26->i64[0];
        v168 = vqtbl1q_s8((int8x16_t)v110, (int8x16_t)xmmword_2160EE810);
        v168.i16[3] = _X26->i16[4];
        v169 = (int16x8_t)vzip1q_s8(v168, v81);
        v170 = (int16x8_t)vzip1q_s8((int8x16_t)v110, v81);
        v171 = _X26;
        do
        {
          _X11 = &v171->i8[a38];
          v171 = (int8x16_t *)((char *)v171 + v80);
          __asm { PRFM            #0, [X11] }
          v174 = vmlaq_s16(vmulq_s16(v162, v169), v159, v170);
          v169.i64[0] = v171->i64[0];
          v170 = (int16x8_t)vzip1q_s8((int8x16_t)v169, v81);
          v175 = vqtbl1q_s8((int8x16_t)v169, (int8x16_t)xmmword_2160EE810);
          v175.i16[3] = v171->i16[4];
          v169 = (int16x8_t)vzip1q_s8(v175, v81);
          *(uint16x8_t *)((char *)&STACK[0x640] + v156) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v174, v163, v170), v165, v169), v104), v105);
          v156 += 32;
        }
        while ((_DWORD)v156 != 128);
        v176 = 0;
        _X9 = &_X26->i8[v80 + 8];
        __asm { PRFM            #0, [X9] }
        v170.i64[0] = _X26->i64[1];
        v179 = vqtbl1q_s8((int8x16_t)v170, (int8x16_t)xmmword_2160EE810);
        v179.i16[3] = _X26[1].i16[0];
        v180 = (int16x8_t)vzip1q_s8(v179, v81);
        v110 = (int16x8_t)vzip1q_s8((int8x16_t)v170, v81);
        do
        {
          _X9 = &_X26->i8[a31];
          _X26 = (int8x16_t *)((char *)_X26 + v80);
          __asm { PRFM            #0, [X9] }
          v183 = vmlaq_s16(vmulq_s16(v162, v180), v159, v110);
          v180.i64[0] = _X26->i64[1];
          v110 = (int16x8_t)vzip1q_s8((int8x16_t)v180, v81);
          v184 = vqtbl1q_s8((int8x16_t)v180, (int8x16_t)xmmword_2160EE810);
          v184.i16[3] = _X26[1].i16[0];
          v180 = (int16x8_t)vzip1q_s8(v184, v81);
          *(uint16x8_t *)(a40 + v176) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v183, v163, v110), v165, v180), v104), v105);
          v176 += 32;
        }
        while ((_DWORD)v176 != 128);
LABEL_27:
        if (a36 == 64)
        {
          __asm { PRFM            #0, [X16] }
          v199 = (int8x16_t *)(a48 + a27 + a50 + a26 + 16);
          v200 = 5;
          v189 = a17;
          v185 = a37;
          v186 = a71;
          do
          {
            _X11 = &v199->i8[v80];
            __asm { PRFUM           #0, [X11,#-0x10] }
            v203 = v199[-1];
            v204 = (uint8x16_t)vextq_s8(v203, v203, 2uLL);
            v204.i16[7] = v199->i16[0];
            v205 = (int8x16_t)vrhaddq_u8((uint8x16_t)v203, v204);
            v204.i64[0] = v81.i64[0];
            v189[3] = vzip2q_s8(v205, v81);
            v189 += 2;
            vst2_s8(v189->i8, *(int8x8x2_t *)((char *)&v204 - 8));
            --v200;
            v199 = (int8x16_t *)((char *)v199 + v80);
          }
          while (v200 > 2);
          v206 = v199[-1];
          v207 = (uint8x16_t)vextq_s8(v206, v206, 2uLL);
          v207.i16[7] = v199->i16[0];
        }
        else
        {
          v185 = a37;
          v186 = a71;
          if (a36 != 4)
          {
            if (a36)
            {
              v220 = 0;
              v221 = a33 * a54 - (8 * a54 + 8 * a33) + 64;
              v222 = v81;
              v222.i32[0] = v221 | (v221 << 16);
              v223 = (int16x8_t)vqtbl1q_s8(v222, a44);
              v224 = v81;
              v224.i32[0] = (8 * a54 - a33 * a54) | ((8 * a54 - a33 * a54) << 16);
              v225 = v81;
              v225.i32[0] = (8 * a33 - a33 * a54) | ((8 * a33 - a33 * a54) << 16);
              v226 = (int16x8_t)vqtbl1q_s8(v224, a44);
              v227 = (int16x8_t)vqtbl1q_s8(v225, a44);
              v228 = v81;
              v228.i32[0] = 65537 * a33 * a54;
              v229 = (int16x8_t)vqtbl1q_s8(v228, a44);
              *(int16x8_t *)(v79 - 160) = v223;
              *(int16x8_t *)(v79 - 144) = v226;
              *(int16x8_t *)(v79 - 128) = v227;
              *(int16x8_t *)(v79 - 112) = v229;
              _X9 = &a49->i8[v80];
              __asm { PRFM            #0, [X9] }
              v110.i64[0] = a49->i64[0];
              v232 = vqtbl1q_s8((int8x16_t)v110, (int8x16_t)xmmword_2160EE810);
              v232.i16[3] = a49->i16[4];
              v233 = (int16x8_t)vzip1q_s8(v232, v81);
              v234 = (int16x8_t)vzip1q_s8((int8x16_t)v110, v81);
              v235 = a49;
              do
              {
                _X11 = (uint64_t)v235->i64 + v118;
                v235 = (int8x16_t *)((char *)v235 + v80);
                __asm { PRFM            #0, [X11] }
                v238 = vmlaq_s16(vmulq_s16(v226, v233), v223, v234);
                v233.i64[0] = v235->i64[0];
                v234 = (int16x8_t)vzip1q_s8((int8x16_t)v233, v81);
                v239 = vqtbl1q_s8((int8x16_t)v233, (int8x16_t)xmmword_2160EE810);
                v239.i16[3] = v235->i16[4];
                v233 = (int16x8_t)vzip1q_s8(v239, v81);
                a37[v220] = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v238, v227, v234), v229, v233), v104), v105);
                v220 += 2;
              }
              while ((_DWORD)(v220 * 16) != 128);
              v240 = 0;
              _X9 = &a49->i8[v80 + 8];
              __asm { PRFM            #0, [X9] }
              v234.i64[0] = a49->i64[1];
              v243 = vqtbl1q_s8((int8x16_t)v234, (int8x16_t)xmmword_2160EE810);
              v243.i16[3] = a49[1].i16[0];
              v244 = (int16x8_t)vzip1q_s8(v243, v81);
              v245 = (int16x8_t)vzip1q_s8((int8x16_t)v234, v81);
              v219 = a51;
              do
              {
                _X9 = &_X16->i8[v119];
                __asm { PRFM            #0, [X9] }
                v248 = vmlaq_s16(vmulq_s16(v226, v244), v223, v245);
                v244.i64[0] = *(uint64_t *)((char *)&_X16->i64[1] + v80);
                v245 = (int16x8_t)vzip1q_s8((int8x16_t)v244, v81);
                v249 = vqtbl1q_s8((int8x16_t)v244, (int8x16_t)xmmword_2160EE810);
                v249.i16[3] = *(__int16 *)((char *)_X16[1].i16 + v80);
                v244 = (int16x8_t)vzip1q_s8(v249, v81);
                *(uint16x8_t *)(a18 + v240) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v248, v227, v245), v229, v244), v104), v105);
                v240 += 32;
                _X16 = (int8x16_t *)((char *)_X16 + v80);
              }
              while ((_DWORD)v240 != 128);
              goto LABEL_45;
            }
            __asm { PRFM            #0, [X16] }
            v188 = 5;
            v189 = a17;
            do
            {
              v190 = _X16;
              _X16 = (int8x16_t *)((char *)_X16 + v80);
              __asm { PRFM            #0, [X16] }
              v192 = (int8x8x2_t)*v190;
              v189[3] = vzip2q_s8(*v190, v81);
              v189 += 2;
              v193 = v81.i64[0];
              vst2_s8(v189->i8, v192);
              --v188;
            }
            while (v188 > 2);
            v194 = (int8x8x2_t)*_X16;
            v195 = vzip2q_s8(*_X16, v81);
            i8 = v189[2].i8;
            v197 = v81.i64[0];
            vst2_s8(i8, v194);
LABEL_40:
            v219 = a51;
            v189[3] = v195;
LABEL_45:
            v250 = 1;
            v251 = v185;
            while (1)
            {
              v252 = v250;
              v253 = (int16x8_t)vrhaddq_u16(v251[-16], *v251);
              v254 = (int16x8_t)vrhaddq_u16(v251[-15], v251[1]);
              v255 = (int16x8_t)vrhaddq_u16(v251[-14], v251[2]);
              v256 = (int16x8_t)vrhaddq_u16(v251[-13], v251[3]);
              if (v186)
              {
                v257 = *v219;
                v258 = v219[1];
                v259 = v219[2];
                v260 = v219[3];
                v219 += 4;
                v253 = vaddq_s16(v257, v253);
                v254 = vaddq_s16(v258, v254);
                v255 = vaddq_s16(v259, v255);
                v256 = vaddq_s16(v260, v256);
              }
              v250 = 0;
              v251 += 4;
              *v73 = vqmovun_high_s16(vqmovun_s16(v253), v254);
              *(int8x16_t *)((char *)v73 + v80) = vqmovun_high_s16(vqmovun_s16(v255), v256);
              v73 = (int8x16_t *)((char *)v73 + v72);
              if ((v252 & 1) == 0)
                JUMPOUT(0x21604A7E4);
            }
          }
          _X8 = &a49->i8[v80];
          __asm { PRFM            #0, [X8] }
          v210 = *(uint8x16_t *)a49;
          v211 = 5;
          v189 = a17;
          do
          {
            _X10 = &_X16->i8[v118];
            __asm { PRFM            #0, [X10] }
            v206 = *(int8x16_t *)((char *)_X16 + v80);
            v214 = (int8x16_t)vrhaddq_u8(v210, (uint8x16_t)v206);
            v215 = v81.i64[0];
            v189[3] = vzip2q_s8(v214, v81);
            v189 += 2;
            vst2_s8(v189->i8, (int8x8x2_t)v214);
            --v211;
            _X16 = (int8x16_t *)((char *)_X16 + v80);
            v210 = (uint8x16_t)v206;
          }
          while (v211 > 2);
          v207 = *(uint8x16_t *)((char *)_X16 + v80);
        }
        v216 = (int8x16_t)vrhaddq_u8((uint8x16_t)v206, v207);
        v217 = v189[2].i8;
        v218 = v81.i64[0];
        vst2_s8(v217, (int8x8x2_t)v216);
        v195 = vzip2q_s8(v216, v81);
        goto LABEL_40;
      }
      __asm { PRFM            #0, [X26] }
      v125 = 5;
      v126 = a30;
      do
      {
        v127 = _X26;
        _X26 = (int8x16_t *)((char *)_X26 + v80);
        __asm { PRFM            #0, [X26] }
        v129 = (int8x8x2_t)*v127;
        v126[3] = vzip2q_s8(*v127, v81);
        v126 += 2;
        v130 = v81.i64[0];
        vst2_s8(v126->i8, v129);
        --v125;
      }
      while (v125 > 2);
      v131 = (int8x8x2_t)*_X26;
      v132 = vzip2q_s8(*_X26, v81);
      v133 = v126[2].i8;
      v134 = v81.i64[0];
      vst2_s8(v133, v131);
LABEL_22:
      v126[3] = v132;
      goto LABEL_27;
    }
    _X8 = &_X26->i8[v80];
    __asm { PRFM            #0, [X8] }
    v147 = *(uint8x16_t *)_X26;
    v148 = 5;
    v126 = a30;
    do
    {
      _X10 = &_X26->i8[a38];
      _X26 = (int8x16_t *)((char *)_X26 + v80);
      __asm { PRFM            #0, [X10] }
      v143 = *_X26;
      v151 = (int8x16_t)vrhaddq_u8(v147, *(uint8x16_t *)_X26);
      v152 = v81.i64[0];
      v126[3] = vzip2q_s8(v151, v81);
      v126 += 2;
      vst2_s8(v126->i8, (int8x8x2_t)v151);
      --v148;
      v147 = (uint8x16_t)v143;
    }
    while (v148 > 2);
    v144 = *(uint8x16_t *)((char *)_X26 + v80);
  }
  v153 = (int8x16_t)vrhaddq_u8((uint8x16_t)v143, v144);
  v154 = v126[2].i8;
  v155 = v81.i64[0];
  vst2_s8(v154, (int8x8x2_t)v153);
  v132 = vzip2q_s8(v153, v81);
  goto LABEL_22;
}

void sub_2160450BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int8x16_t *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29,int8x16_t *a30,uint64_t a31,int a32,int a33,uint64_t a34,int a35,int a36,uint16x8_t *a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int8x16_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int8x16_t *a49,uint64_t a50,int16x8_t *a51,int a52,int a53,int a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,int a63)
{
  uint64_t a65;
  uint64_t a71;
  uint64_t a72;
  uint64_t v72;
  int8x16_t *v73;
  uint64_t v74;
  int16x8_t *v75;
  uint64_t v76;
  int8x16_t *v78;
  uint64_t v79;
  uint64_t v80;
  int8x16_t v81;
  int16x8_t v82;
  int16x8_t v83;
  uint64_t v84;
  int8x16_t *v85;
  int8x16_t v86;
  int16x8_t v87;
  int16x8_t v88;
  uint64_t v89;
  int8x16_t *v90;
  int16x8_t v91;
  uint16x8_t v92;
  int8x16_t v94;
  int16x8_t v95;
  int16x8_t v96;
  uint64_t v97;
  int16x8_t v98;
  int16x8_t v99;
  int16x8_t v100;
  int16x8_t v101;
  int16x8_t v102;
  int16x8_t v103;
  int16x8_t v104;
  int16x8_t v105;
  uint64_t v106;
  uint64_t v107;
  unsigned int v113;
  int8x16_t *v114;
  int8x16_t *v115;
  int8x8x2_t v117;
  uint64_t v118;
  int8x8x2_t v119;
  int8x16_t v120;
  char *v121;
  uint64_t v122;
  int8x16_t *v124;
  unsigned int v125;
  int8x16_t v128;
  uint8x16_t v129;
  int8x16_t v130;
  int8x16_t v131;
  uint8x16_t v132;
  uint8x16_t v135;
  unsigned int v136;
  int8x16_t v139;
  uint64_t v140;
  int8x16_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  int v145;
  int8x16_t v146;
  int16x8_t v147;
  int8x16_t v148;
  int8x16_t v149;
  int16x8_t v150;
  int16x8_t v151;
  int8x16_t v152;
  int16x8_t v153;
  int8x16_t v156;
  int16x8_t v157;
  int16x8_t v158;
  int8x16_t *v159;
  int16x8_t v162;
  int8x16_t v163;
  uint64_t v164;
  int8x16_t v167;
  int16x8_t v168;
  int16x8_t v171;
  int8x16_t v172;
  uint16x8_t *v173;
  uint64_t v174;
  unsigned int v176;
  int8x16_t *v177;
  int8x16_t *v178;
  int8x8x2_t v180;
  uint64_t v181;
  int8x8x2_t v182;
  int8x16_t v183;
  char *i8;
  uint64_t v185;
  int8x16_t *v187;
  unsigned int v188;
  int8x16_t v191;
  uint8x16_t v192;
  int8x16_t v193;
  int8x16_t v194;
  uint8x16_t v195;
  uint8x16_t v198;
  unsigned int v199;
  int8x16_t v202;
  uint64_t v203;
  int8x16_t v204;
  char *v205;
  uint64_t v206;
  int16x8_t *v207;
  uint64_t v208;
  int v209;
  int8x16_t v210;
  int16x8_t v211;
  int8x16_t v212;
  int8x16_t v213;
  int16x8_t v214;
  int16x8_t v215;
  int8x16_t v216;
  int16x8_t v217;
  int8x16_t v220;
  int16x8_t v221;
  int16x8_t v222;
  int8x16_t *v223;
  int16x8_t v226;
  int8x16_t v227;
  uint64_t v228;
  int8x16_t v231;
  int16x8_t v232;
  int16x8_t v233;
  int16x8_t v236;
  int8x16_t v237;
  char v238;
  uint16x8_t *v239;
  char v240;
  int16x8_t v241;
  int16x8_t v242;
  int16x8_t v243;
  int16x8_t v244;
  int16x8_t v245;
  int16x8_t v246;
  int16x8_t v247;
  int16x8_t v248;

  v84 = 0;
  v85 = (int8x16_t *)(v76 - 2);
  do
  {
    v86 = *v85;
    v85 = (int8x16_t *)((char *)v85 + v80);
    v87 = (int16x8_t)vzip1q_s8(vextq_s8(v86, v86, 2uLL), v81);
    v88 = vsubq_s16(vshlq_n_s16(vaddq_s16(v87, (int16x8_t)vzip1q_s8(vextq_s8(v86, v86, 3uLL), v81)), 2uLL), vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v86, v86, 1uLL), v81), (int16x8_t)vzip1q_s8(vextq_s8(v86, v86, 4uLL), v81)));
    *(uint16x8_t *)(a1 + v84) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vshlq_n_s16(v88, 2uLL), vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v86, v81), (int16x8_t)vzip1q_s8(vextq_s8(v86, v86, 5uLL), v81)), v88)), v82), v83))), (uint16x8_t)v87);
    v84 += 32;
  }
  while ((_DWORD)v84 != 256);
  v89 = 0;
  v90 = (int8x16_t *)(v76 + 6);
  v91.i64[0] = 0x20002000200020;
  v91.i64[1] = 0x20002000200020;
  v92.i64[0] = 0x5000500050005;
  v92.i64[1] = 0x5000500050005;
  _X16 = a49;
  do
  {
    v94 = *v90;
    v90 = (int8x16_t *)((char *)v90 + v80);
    v95 = (int16x8_t)vzip1q_s8(vextq_s8(v94, v94, 2uLL), v81);
    v96 = vsubq_s16(vshlq_n_s16(vaddq_s16(v95, (int16x8_t)vzip1q_s8(vextq_s8(v94, v94, 3uLL), v81)), 2uLL), vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v94, v94, 1uLL), v81), (int16x8_t)vzip1q_s8(vextq_s8(v94, v94, 4uLL), v81)));
    *(uint16x8_t *)(v74 + v89) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vshlq_n_s16(v96, 2uLL), vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v94, v81), (int16x8_t)vzip1q_s8(vextq_s8(v94, v94, 5uLL), v81)), v96)), v82), v83))), (uint16x8_t)v95);
    v89 += 32;
  }
  while ((_DWORD)v89 != 256);
  v97 = 0;
  do
  {
    v98 = *(int16x8_t *)(a6 + v97 + 528);
    v99 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v97), *(uint16x8_t *)(a6 + v97 + 512));
    v100 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v97 + 16), (uint16x8_t)v98);
    v101 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v97 + 32), *(uint16x8_t *)(a6 + v97 + 544));
    v102 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v97 + 48), *(uint16x8_t *)(a6 + v97 + 560));
    if (a72)
    {
      v103 = *v75;
      v98 = v75[1];
      v104 = v75[2];
      v105 = v75[3];
      v75 += 4;
      v99 = vaddq_s16(v103, v99);
      v100 = vaddq_s16(v98, v100);
      v101 = vaddq_s16(v104, v101);
      v102 = vaddq_s16(v105, v102);
    }
    *v78 = vqmovun_high_s16(vqmovun_s16(v99), v100);
    *(int8x16_t *)((char *)v78 + v80) = vqmovun_high_s16(vqmovun_s16(v101), v102);
    v78 = (int8x16_t *)((char *)v78 + v72);
    v97 += 64;
  }
  while ((_DWORD)v97 != 256);
  if (a63 == 64)
  {
    __asm { PRFM            #0, [X26] }
    v124 = (int8x16_t *)(a43 + a15 + a65 + a14 + 16);
    v125 = 5;
    v114 = a30;
    v107 = a31;
    v106 = a38;
    do
    {
      _X11 = &v124->i8[v80];
      __asm { PRFUM           #0, [X11,#-0x10] }
      v128 = v124[-1];
      v129 = (uint8x16_t)vextq_s8(v128, v128, 2uLL);
      v129.i16[7] = v124->i16[0];
      v130 = (int8x16_t)vrhaddq_u8((uint8x16_t)v128, v129);
      v129.i64[0] = v81.i64[0];
      v114[3] = vzip2q_s8(v130, v81);
      v114 += 2;
      vst2_s8(v114->i8, *(int8x8x2_t *)((char *)&v129 - 8));
      --v125;
      v124 = (int8x16_t *)((char *)v124 + v80);
    }
    while (v125 > 2);
    v131 = v124[-1];
    v132 = (uint8x16_t)vextq_s8(v131, v131, 2uLL);
    v132.i16[7] = v124->i16[0];
  }
  else
  {
    v106 = a38;
    v107 = a31;
    if (a63 != 4)
    {
      if (a63)
      {
        v144 = 0;
        v145 = a29 * a53 - (8 * a53 + 8 * a29) + 64;
        v146 = v81;
        v146.i32[0] = v145 | (v145 << 16);
        v147 = (int16x8_t)vqtbl1q_s8(v146, a44);
        v148 = v81;
        v148.i32[0] = (8 * a53 - a29 * a53) | ((8 * a53 - a29 * a53) << 16);
        v149 = v81;
        v149.i32[0] = (8 * a29 - a29 * a53) | ((8 * a29 - a29 * a53) << 16);
        v150 = (int16x8_t)vqtbl1q_s8(v148, a44);
        v151 = (int16x8_t)vqtbl1q_s8(v149, a44);
        v152 = v81;
        v152.i32[0] = 65537 * a29 * a53;
        v153 = (int16x8_t)vqtbl1q_s8(v152, a44);
        *(int16x8_t *)(v79 - 224) = v147;
        *(int16x8_t *)(v79 - 208) = v150;
        *(int16x8_t *)(v79 - 192) = v151;
        *(int16x8_t *)(v79 - 176) = v153;
        _X9 = &_X26->i8[v80];
        __asm { PRFM            #0, [X9] }
        v98.i64[0] = _X26->i64[0];
        v156 = vqtbl1q_s8((int8x16_t)v98, (int8x16_t)xmmword_2160EE810);
        v156.i16[3] = _X26->i16[4];
        v157 = (int16x8_t)vzip1q_s8(v156, v81);
        v158 = (int16x8_t)vzip1q_s8((int8x16_t)v98, v81);
        v159 = _X26;
        do
        {
          _X11 = &v159->i8[a38];
          v159 = (int8x16_t *)((char *)v159 + v80);
          __asm { PRFM            #0, [X11] }
          v162 = vmlaq_s16(vmulq_s16(v150, v157), v147, v158);
          v157.i64[0] = v159->i64[0];
          v158 = (int16x8_t)vzip1q_s8((int8x16_t)v157, v81);
          v163 = vqtbl1q_s8((int8x16_t)v157, (int8x16_t)xmmword_2160EE810);
          v163.i16[3] = v159->i16[4];
          v157 = (int16x8_t)vzip1q_s8(v163, v81);
          *(uint16x8_t *)((char *)&STACK[0x640] + v144) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v162, v151, v158), v153, v157), v91), v92);
          v144 += 32;
        }
        while ((_DWORD)v144 != 128);
        v164 = 0;
        _X9 = &_X26->i8[v80 + 8];
        __asm { PRFM            #0, [X9] }
        v158.i64[0] = _X26->i64[1];
        v167 = vqtbl1q_s8((int8x16_t)v158, (int8x16_t)xmmword_2160EE810);
        v167.i16[3] = _X26[1].i16[0];
        v168 = (int16x8_t)vzip1q_s8(v167, v81);
        v98 = (int16x8_t)vzip1q_s8((int8x16_t)v158, v81);
        do
        {
          _X9 = &_X26->i8[a31];
          _X26 = (int8x16_t *)((char *)_X26 + v80);
          __asm { PRFM            #0, [X9] }
          v171 = vmlaq_s16(vmulq_s16(v150, v168), v147, v98);
          v168.i64[0] = _X26->i64[1];
          v98 = (int16x8_t)vzip1q_s8((int8x16_t)v168, v81);
          v172 = vqtbl1q_s8((int8x16_t)v168, (int8x16_t)xmmword_2160EE810);
          v172.i16[3] = _X26[1].i16[0];
          v168 = (int16x8_t)vzip1q_s8(v172, v81);
          *(uint16x8_t *)(a40 + v164) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v171, v151, v98), v153, v168), v91), v92);
          v164 += 32;
        }
        while ((_DWORD)v164 != 128);
LABEL_27:
        if (a36 == 64)
        {
          __asm { PRFM            #0, [X16] }
          v187 = (int8x16_t *)(a48 + a27 + a50 + a26 + 16);
          v188 = 5;
          v177 = a17;
          v173 = a37;
          v174 = a71;
          do
          {
            _X11 = &v187->i8[v80];
            __asm { PRFUM           #0, [X11,#-0x10] }
            v191 = v187[-1];
            v192 = (uint8x16_t)vextq_s8(v191, v191, 2uLL);
            v192.i16[7] = v187->i16[0];
            v193 = (int8x16_t)vrhaddq_u8((uint8x16_t)v191, v192);
            v192.i64[0] = v81.i64[0];
            v177[3] = vzip2q_s8(v193, v81);
            v177 += 2;
            vst2_s8(v177->i8, *(int8x8x2_t *)((char *)&v192 - 8));
            --v188;
            v187 = (int8x16_t *)((char *)v187 + v80);
          }
          while (v188 > 2);
          v194 = v187[-1];
          v195 = (uint8x16_t)vextq_s8(v194, v194, 2uLL);
          v195.i16[7] = v187->i16[0];
        }
        else
        {
          v173 = a37;
          v174 = a71;
          if (a36 != 4)
          {
            if (a36)
            {
              v208 = 0;
              v209 = a33 * a54 - (8 * a54 + 8 * a33) + 64;
              v210 = v81;
              v210.i32[0] = v209 | (v209 << 16);
              v211 = (int16x8_t)vqtbl1q_s8(v210, a44);
              v212 = v81;
              v212.i32[0] = (8 * a54 - a33 * a54) | ((8 * a54 - a33 * a54) << 16);
              v213 = v81;
              v213.i32[0] = (8 * a33 - a33 * a54) | ((8 * a33 - a33 * a54) << 16);
              v214 = (int16x8_t)vqtbl1q_s8(v212, a44);
              v215 = (int16x8_t)vqtbl1q_s8(v213, a44);
              v216 = v81;
              v216.i32[0] = 65537 * a33 * a54;
              v217 = (int16x8_t)vqtbl1q_s8(v216, a44);
              *(int16x8_t *)(v79 - 160) = v211;
              *(int16x8_t *)(v79 - 144) = v214;
              *(int16x8_t *)(v79 - 128) = v215;
              *(int16x8_t *)(v79 - 112) = v217;
              _X9 = &a49->i8[v80];
              __asm { PRFM            #0, [X9] }
              v98.i64[0] = a49->i64[0];
              v220 = vqtbl1q_s8((int8x16_t)v98, (int8x16_t)xmmword_2160EE810);
              v220.i16[3] = a49->i16[4];
              v221 = (int16x8_t)vzip1q_s8(v220, v81);
              v222 = (int16x8_t)vzip1q_s8((int8x16_t)v98, v81);
              v223 = a49;
              do
              {
                _X11 = (uint64_t)v223->i64 + v106;
                v223 = (int8x16_t *)((char *)v223 + v80);
                __asm { PRFM            #0, [X11] }
                v226 = vmlaq_s16(vmulq_s16(v214, v221), v211, v222);
                v221.i64[0] = v223->i64[0];
                v222 = (int16x8_t)vzip1q_s8((int8x16_t)v221, v81);
                v227 = vqtbl1q_s8((int8x16_t)v221, (int8x16_t)xmmword_2160EE810);
                v227.i16[3] = v223->i16[4];
                v221 = (int16x8_t)vzip1q_s8(v227, v81);
                a37[v208] = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v226, v215, v222), v217, v221), v91), v92);
                v208 += 2;
              }
              while ((_DWORD)(v208 * 16) != 128);
              v228 = 0;
              _X9 = &a49->i8[v80 + 8];
              __asm { PRFM            #0, [X9] }
              v222.i64[0] = a49->i64[1];
              v231 = vqtbl1q_s8((int8x16_t)v222, (int8x16_t)xmmword_2160EE810);
              v231.i16[3] = a49[1].i16[0];
              v232 = (int16x8_t)vzip1q_s8(v231, v81);
              v233 = (int16x8_t)vzip1q_s8((int8x16_t)v222, v81);
              v207 = a51;
              do
              {
                _X9 = &_X16->i8[v107];
                __asm { PRFM            #0, [X9] }
                v236 = vmlaq_s16(vmulq_s16(v214, v232), v211, v233);
                v232.i64[0] = *(uint64_t *)((char *)&_X16->i64[1] + v80);
                v233 = (int16x8_t)vzip1q_s8((int8x16_t)v232, v81);
                v237 = vqtbl1q_s8((int8x16_t)v232, (int8x16_t)xmmword_2160EE810);
                v237.i16[3] = *(__int16 *)((char *)_X16[1].i16 + v80);
                v232 = (int16x8_t)vzip1q_s8(v237, v81);
                *(uint16x8_t *)(a18 + v228) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v236, v215, v233), v217, v232), v91), v92);
                v228 += 32;
                _X16 = (int8x16_t *)((char *)_X16 + v80);
              }
              while ((_DWORD)v228 != 128);
              goto LABEL_45;
            }
            __asm { PRFM            #0, [X16] }
            v176 = 5;
            v177 = a17;
            do
            {
              v178 = _X16;
              _X16 = (int8x16_t *)((char *)_X16 + v80);
              __asm { PRFM            #0, [X16] }
              v180 = (int8x8x2_t)*v178;
              v177[3] = vzip2q_s8(*v178, v81);
              v177 += 2;
              v181 = v81.i64[0];
              vst2_s8(v177->i8, v180);
              --v176;
            }
            while (v176 > 2);
            v182 = (int8x8x2_t)*_X16;
            v183 = vzip2q_s8(*_X16, v81);
            i8 = v177[2].i8;
            v185 = v81.i64[0];
            vst2_s8(i8, v182);
LABEL_40:
            v207 = a51;
            v177[3] = v183;
LABEL_45:
            v238 = 1;
            v239 = v173;
            while (1)
            {
              v240 = v238;
              v241 = (int16x8_t)vrhaddq_u16(v239[-16], *v239);
              v242 = (int16x8_t)vrhaddq_u16(v239[-15], v239[1]);
              v243 = (int16x8_t)vrhaddq_u16(v239[-14], v239[2]);
              v244 = (int16x8_t)vrhaddq_u16(v239[-13], v239[3]);
              if (v174)
              {
                v245 = *v207;
                v246 = v207[1];
                v247 = v207[2];
                v248 = v207[3];
                v207 += 4;
                v241 = vaddq_s16(v245, v241);
                v242 = vaddq_s16(v246, v242);
                v243 = vaddq_s16(v247, v243);
                v244 = vaddq_s16(v248, v244);
              }
              v238 = 0;
              v239 += 4;
              *v73 = vqmovun_high_s16(vqmovun_s16(v241), v242);
              *(int8x16_t *)((char *)v73 + v80) = vqmovun_high_s16(vqmovun_s16(v243), v244);
              v73 = (int8x16_t *)((char *)v73 + v72);
              if ((v240 & 1) == 0)
                JUMPOUT(0x21604A7E4);
            }
          }
          _X8 = &a49->i8[v80];
          __asm { PRFM            #0, [X8] }
          v198 = *(uint8x16_t *)a49;
          v199 = 5;
          v177 = a17;
          do
          {
            _X10 = &_X16->i8[v106];
            __asm { PRFM            #0, [X10] }
            v194 = *(int8x16_t *)((char *)_X16 + v80);
            v202 = (int8x16_t)vrhaddq_u8(v198, (uint8x16_t)v194);
            v203 = v81.i64[0];
            v177[3] = vzip2q_s8(v202, v81);
            v177 += 2;
            vst2_s8(v177->i8, (int8x8x2_t)v202);
            --v199;
            _X16 = (int8x16_t *)((char *)_X16 + v80);
            v198 = (uint8x16_t)v194;
          }
          while (v199 > 2);
          v195 = *(uint8x16_t *)((char *)_X16 + v80);
        }
        v204 = (int8x16_t)vrhaddq_u8((uint8x16_t)v194, v195);
        v205 = v177[2].i8;
        v206 = v81.i64[0];
        vst2_s8(v205, (int8x8x2_t)v204);
        v183 = vzip2q_s8(v204, v81);
        goto LABEL_40;
      }
      __asm { PRFM            #0, [X26] }
      v113 = 5;
      v114 = a30;
      do
      {
        v115 = _X26;
        _X26 = (int8x16_t *)((char *)_X26 + v80);
        __asm { PRFM            #0, [X26] }
        v117 = (int8x8x2_t)*v115;
        v114[3] = vzip2q_s8(*v115, v81);
        v114 += 2;
        v118 = v81.i64[0];
        vst2_s8(v114->i8, v117);
        --v113;
      }
      while (v113 > 2);
      v119 = (int8x8x2_t)*_X26;
      v120 = vzip2q_s8(*_X26, v81);
      v121 = v114[2].i8;
      v122 = v81.i64[0];
      vst2_s8(v121, v119);
LABEL_22:
      v114[3] = v120;
      goto LABEL_27;
    }
    _X8 = &_X26->i8[v80];
    __asm { PRFM            #0, [X8] }
    v135 = *(uint8x16_t *)_X26;
    v136 = 5;
    v114 = a30;
    do
    {
      _X10 = &_X26->i8[a38];
      _X26 = (int8x16_t *)((char *)_X26 + v80);
      __asm { PRFM            #0, [X10] }
      v131 = *_X26;
      v139 = (int8x16_t)vrhaddq_u8(v135, *(uint8x16_t *)_X26);
      v140 = v81.i64[0];
      v114[3] = vzip2q_s8(v139, v81);
      v114 += 2;
      vst2_s8(v114->i8, (int8x8x2_t)v139);
      --v136;
      v135 = (uint8x16_t)v131;
    }
    while (v136 > 2);
    v132 = *(uint8x16_t *)((char *)_X26 + v80);
  }
  v141 = (int8x16_t)vrhaddq_u8((uint8x16_t)v131, v132);
  v142 = v114[2].i8;
  v143 = v81.i64[0];
  vst2_s8(v142, (int8x8x2_t)v141);
  v120 = vzip2q_s8(v141, v81);
  goto LABEL_22;
}

void sub_2160451E4(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int8x16_t *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29,int8x16_t *a30,uint64_t a31,int a32,int a33,uint64_t a34,int a35,int a36,uint16x8_t *a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int8x16_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int8x16_t *a49,uint64_t a50,int16x8_t *a51,int a52,int a53,int a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,int a63)
{
  uint64_t a65;
  uint64_t a71;
  uint64_t a72;
  uint64_t v72;
  int v73;
  int8x16_t *v74;
  int16x8_t *v75;
  uint64_t v76;
  int8x16_t *v78;
  uint64_t v79;
  int8x16_t v80;
  unint64_t v81;
  int16x8_t v82;
  uint16x8_t v83;
  uint64_t v85;
  int16x8_t v86;
  int16x8_t v87;
  int16x8_t v88;
  int16x8_t v89;
  int16x8_t v90;
  int16x8_t v91;
  int16x8_t v92;
  int16x8_t v93;
  uint64_t v94;
  uint64_t v95;
  unsigned int v101;
  int8x16_t *v102;
  int8x16_t *v103;
  int8x8x2_t v105;
  uint64_t v106;
  int8x8x2_t v107;
  int8x16_t v108;
  char *v109;
  uint64_t v110;
  int8x16_t *v112;
  unsigned int v113;
  int8x16_t v116;
  uint8x16_t v117;
  int8x16_t v118;
  int8x16_t v119;
  uint8x16_t v120;
  uint8x16_t v123;
  unsigned int v124;
  int8x16_t v127;
  uint64_t v128;
  int8x16_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  int v133;
  int8x16_t v134;
  int16x8_t v135;
  int8x16_t v136;
  int8x16_t v137;
  int16x8_t v138;
  int16x8_t v139;
  int8x16_t v140;
  int16x8_t v141;
  int8x16_t v144;
  int16x8_t v145;
  int16x8_t v146;
  int8x16_t *v147;
  int16x8_t v150;
  int8x16_t v151;
  uint64_t v152;
  int8x16_t v155;
  int16x8_t v156;
  int16x8_t v159;
  int8x16_t v160;
  uint16x8_t *v161;
  uint64_t v162;
  unsigned int v164;
  int8x16_t *v165;
  int8x16_t *v166;
  int8x8x2_t v168;
  uint64_t v169;
  int8x8x2_t v170;
  int8x16_t v171;
  char *i8;
  uint64_t v173;
  int8x16_t *v175;
  unsigned int v176;
  int8x16_t v179;
  uint8x16_t v180;
  int8x16_t v181;
  int8x16_t v182;
  uint8x16_t v183;
  uint8x16_t v186;
  unsigned int v187;
  int8x16_t v190;
  uint64_t v191;
  int8x16_t v192;
  char *v193;
  uint64_t v194;
  int16x8_t *v195;
  uint64_t v196;
  int v197;
  int8x16_t v198;
  int16x8_t v199;
  int8x16_t v200;
  int8x16_t v201;
  int16x8_t v202;
  int16x8_t v203;
  int8x16_t v204;
  int16x8_t v205;
  int8x16_t v208;
  int16x8_t v209;
  int16x8_t v210;
  int8x16_t *v211;
  int16x8_t v214;
  int8x16_t v215;
  uint64_t v216;
  int8x16_t v219;
  int16x8_t v220;
  int16x8_t v221;
  int16x8_t v224;
  int8x16_t v225;
  char v226;
  uint16x8_t *v227;
  char v228;
  int16x8_t v229;
  int16x8_t v230;
  int16x8_t v231;
  int16x8_t v232;
  int16x8_t v233;
  int16x8_t v234;
  int16x8_t v235;
  int16x8_t v236;

  sub_2160811CC(a1, v76, v73, 8, 2, 2u);
  v80 = *(int8x16_t *)&STACK[0x230];
  v81 = STACK[0x210];
  v82.i64[0] = 0x20002000200020;
  v82.i64[1] = 0x20002000200020;
  v83.i64[0] = 0x5000500050005;
  v83.i64[1] = 0x5000500050005;
  _X16 = a49;
  v85 = 0;
  do
  {
    v86 = *(int16x8_t *)((char *)&STACK[0x240] + v85 + 528);
    v87 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x240] + v85), *(uint16x8_t *)((char *)&STACK[0x240] + v85 + 512));
    v88 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x240] + v85 + 16), (uint16x8_t)v86);
    v89 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x240] + v85 + 32), *(uint16x8_t *)((char *)&STACK[0x240] + v85 + 544));
    v90 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x240] + v85 + 48), *(uint16x8_t *)((char *)&STACK[0x240] + v85 + 560));
    if (a72)
    {
      v91 = *v75;
      v86 = v75[1];
      v92 = v75[2];
      v93 = v75[3];
      v75 += 4;
      v87 = vaddq_s16(v91, v87);
      v88 = vaddq_s16(v86, v88);
      v89 = vaddq_s16(v92, v89);
      v90 = vaddq_s16(v93, v90);
    }
    *v78 = vqmovun_high_s16(vqmovun_s16(v87), v88);
    *(int8x16_t *)((char *)v78 + v81) = vqmovun_high_s16(vqmovun_s16(v89), v90);
    v78 = (int8x16_t *)((char *)v78 + v72);
    v85 += 64;
  }
  while ((_DWORD)v85 != 256);
  if (a63 == 64)
  {
    __asm { PRFM            #0, [X26] }
    v112 = (int8x16_t *)(a43 + a15 + a65 + a14 + 16);
    v113 = 5;
    v102 = a30;
    v95 = a31;
    v94 = a38;
    do
    {
      _X11 = &v112->i8[v81];
      __asm { PRFUM           #0, [X11,#-0x10] }
      v116 = v112[-1];
      v117 = (uint8x16_t)vextq_s8(v116, v116, 2uLL);
      v117.i16[7] = v112->i16[0];
      v118 = (int8x16_t)vrhaddq_u8((uint8x16_t)v116, v117);
      v117.i64[0] = v80.i64[0];
      v102[3] = vzip2q_s8(v118, v80);
      v102 += 2;
      vst2_s8(v102->i8, *(int8x8x2_t *)((char *)&v117 - 8));
      --v113;
      v112 = (int8x16_t *)((char *)v112 + v81);
    }
    while (v113 > 2);
    v119 = v112[-1];
    v120 = (uint8x16_t)vextq_s8(v119, v119, 2uLL);
    v120.i16[7] = v112->i16[0];
  }
  else
  {
    v94 = a38;
    v95 = a31;
    if (a63 != 4)
    {
      if (a63)
      {
        v132 = 0;
        v133 = a29 * a53 - (8 * a53 + 8 * a29) + 64;
        v134 = v80;
        v134.i32[0] = v133 | (v133 << 16);
        v135 = (int16x8_t)vqtbl1q_s8(v134, a44);
        v136 = v80;
        v136.i32[0] = (8 * a53 - a29 * a53) | ((8 * a53 - a29 * a53) << 16);
        v137 = v80;
        v137.i32[0] = (8 * a29 - a29 * a53) | ((8 * a29 - a29 * a53) << 16);
        v138 = (int16x8_t)vqtbl1q_s8(v136, a44);
        v139 = (int16x8_t)vqtbl1q_s8(v137, a44);
        v140 = v80;
        v140.i32[0] = 65537 * a29 * a53;
        v141 = (int16x8_t)vqtbl1q_s8(v140, a44);
        *(int16x8_t *)(v79 - 224) = v135;
        *(int16x8_t *)(v79 - 208) = v138;
        *(int16x8_t *)(v79 - 192) = v139;
        *(int16x8_t *)(v79 - 176) = v141;
        _X9 = &_X26->i8[v81];
        __asm { PRFM            #0, [X9] }
        v86.i64[0] = _X26->i64[0];
        v144 = vqtbl1q_s8((int8x16_t)v86, (int8x16_t)xmmword_2160EE810);
        v144.i16[3] = _X26->i16[4];
        v145 = (int16x8_t)vzip1q_s8(v144, v80);
        v146 = (int16x8_t)vzip1q_s8((int8x16_t)v86, v80);
        v147 = _X26;
        do
        {
          _X11 = &v147->i8[a38];
          v147 = (int8x16_t *)((char *)v147 + v81);
          __asm { PRFM            #0, [X11] }
          v150 = vmlaq_s16(vmulq_s16(v138, v145), v135, v146);
          v145.i64[0] = v147->i64[0];
          v146 = (int16x8_t)vzip1q_s8((int8x16_t)v145, v80);
          v151 = vqtbl1q_s8((int8x16_t)v145, (int8x16_t)xmmword_2160EE810);
          v151.i16[3] = v147->i16[4];
          v145 = (int16x8_t)vzip1q_s8(v151, v80);
          *(uint16x8_t *)((char *)&STACK[0x640] + v132) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v150, v139, v146), v141, v145), v82), v83);
          v132 += 32;
        }
        while ((_DWORD)v132 != 128);
        v152 = 0;
        _X9 = &_X26->i8[v81 + 8];
        __asm { PRFM            #0, [X9] }
        v146.i64[0] = _X26->i64[1];
        v155 = vqtbl1q_s8((int8x16_t)v146, (int8x16_t)xmmword_2160EE810);
        v155.i16[3] = _X26[1].i16[0];
        v156 = (int16x8_t)vzip1q_s8(v155, v80);
        v86 = (int16x8_t)vzip1q_s8((int8x16_t)v146, v80);
        do
        {
          _X9 = &_X26->i8[a31];
          _X26 = (int8x16_t *)((char *)_X26 + v81);
          __asm { PRFM            #0, [X9] }
          v159 = vmlaq_s16(vmulq_s16(v138, v156), v135, v86);
          v156.i64[0] = _X26->i64[1];
          v86 = (int16x8_t)vzip1q_s8((int8x16_t)v156, v80);
          v160 = vqtbl1q_s8((int8x16_t)v156, (int8x16_t)xmmword_2160EE810);
          v160.i16[3] = _X26[1].i16[0];
          v156 = (int16x8_t)vzip1q_s8(v160, v80);
          *(uint16x8_t *)(a40 + v152) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v159, v139, v86), v141, v156), v82), v83);
          v152 += 32;
        }
        while ((_DWORD)v152 != 128);
LABEL_23:
        if (a36 == 64)
        {
          __asm { PRFM            #0, [X16] }
          v175 = (int8x16_t *)(a48 + a27 + a50 + a26 + 16);
          v176 = 5;
          v165 = a17;
          v161 = a37;
          v162 = a71;
          do
          {
            _X11 = &v175->i8[v81];
            __asm { PRFUM           #0, [X11,#-0x10] }
            v179 = v175[-1];
            v180 = (uint8x16_t)vextq_s8(v179, v179, 2uLL);
            v180.i16[7] = v175->i16[0];
            v181 = (int8x16_t)vrhaddq_u8((uint8x16_t)v179, v180);
            v180.i64[0] = v80.i64[0];
            v165[3] = vzip2q_s8(v181, v80);
            v165 += 2;
            vst2_s8(v165->i8, *(int8x8x2_t *)((char *)&v180 - 8));
            --v176;
            v175 = (int8x16_t *)((char *)v175 + v81);
          }
          while (v176 > 2);
          v182 = v175[-1];
          v183 = (uint8x16_t)vextq_s8(v182, v182, 2uLL);
          v183.i16[7] = v175->i16[0];
        }
        else
        {
          v161 = a37;
          v162 = a71;
          if (a36 != 4)
          {
            if (a36)
            {
              v196 = 0;
              v197 = a33 * a54 - (8 * a54 + 8 * a33) + 64;
              v198 = v80;
              v198.i32[0] = v197 | (v197 << 16);
              v199 = (int16x8_t)vqtbl1q_s8(v198, a44);
              v200 = v80;
              v200.i32[0] = (8 * a54 - a33 * a54) | ((8 * a54 - a33 * a54) << 16);
              v201 = v80;
              v201.i32[0] = (8 * a33 - a33 * a54) | ((8 * a33 - a33 * a54) << 16);
              v202 = (int16x8_t)vqtbl1q_s8(v200, a44);
              v203 = (int16x8_t)vqtbl1q_s8(v201, a44);
              v204 = v80;
              v204.i32[0] = 65537 * a33 * a54;
              v205 = (int16x8_t)vqtbl1q_s8(v204, a44);
              *(int16x8_t *)(v79 - 160) = v199;
              *(int16x8_t *)(v79 - 144) = v202;
              *(int16x8_t *)(v79 - 128) = v203;
              *(int16x8_t *)(v79 - 112) = v205;
              _X9 = &a49->i8[v81];
              __asm { PRFM            #0, [X9] }
              v86.i64[0] = a49->i64[0];
              v208 = vqtbl1q_s8((int8x16_t)v86, (int8x16_t)xmmword_2160EE810);
              v208.i16[3] = a49->i16[4];
              v209 = (int16x8_t)vzip1q_s8(v208, v80);
              v210 = (int16x8_t)vzip1q_s8((int8x16_t)v86, v80);
              v211 = a49;
              do
              {
                _X11 = (uint64_t)v211->i64 + v94;
                v211 = (int8x16_t *)((char *)v211 + v81);
                __asm { PRFM            #0, [X11] }
                v214 = vmlaq_s16(vmulq_s16(v202, v209), v199, v210);
                v209.i64[0] = v211->i64[0];
                v210 = (int16x8_t)vzip1q_s8((int8x16_t)v209, v80);
                v215 = vqtbl1q_s8((int8x16_t)v209, (int8x16_t)xmmword_2160EE810);
                v215.i16[3] = v211->i16[4];
                v209 = (int16x8_t)vzip1q_s8(v215, v80);
                a37[v196] = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v214, v203, v210), v205, v209), v82), v83);
                v196 += 2;
              }
              while ((_DWORD)(v196 * 16) != 128);
              v216 = 0;
              _X9 = (unint64_t)&a49->u64[1] + v81;
              __asm { PRFM            #0, [X9] }
              v210.i64[0] = a49->i64[1];
              v219 = vqtbl1q_s8((int8x16_t)v210, (int8x16_t)xmmword_2160EE810);
              v219.i16[3] = a49[1].i16[0];
              v220 = (int16x8_t)vzip1q_s8(v219, v80);
              v221 = (int16x8_t)vzip1q_s8((int8x16_t)v210, v80);
              v195 = a51;
              do
              {
                _X9 = &_X16->i8[v95];
                __asm { PRFM            #0, [X9] }
                v224 = vmlaq_s16(vmulq_s16(v202, v220), v199, v221);
                v220.i64[0] = *(uint64_t *)((char *)&_X16->i64[1] + v81);
                v221 = (int16x8_t)vzip1q_s8((int8x16_t)v220, v80);
                v225 = vqtbl1q_s8((int8x16_t)v220, (int8x16_t)xmmword_2160EE810);
                v225.i16[3] = *(__int16 *)((char *)_X16[1].i16 + v81);
                v220 = (int16x8_t)vzip1q_s8(v225, v80);
                *(uint16x8_t *)(a18 + v216) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v224, v203, v221), v205, v220), v82), v83);
                v216 += 32;
                _X16 = (int8x16_t *)((char *)_X16 + v81);
              }
              while ((_DWORD)v216 != 128);
              goto LABEL_41;
            }
            __asm { PRFM            #0, [X16] }
            v164 = 5;
            v165 = a17;
            do
            {
              v166 = _X16;
              _X16 = (int8x16_t *)((char *)_X16 + v81);
              __asm { PRFM            #0, [X16] }
              v168 = (int8x8x2_t)*v166;
              v165[3] = vzip2q_s8(*v166, v80);
              v165 += 2;
              v169 = v80.i64[0];
              vst2_s8(v165->i8, v168);
              --v164;
            }
            while (v164 > 2);
            v170 = (int8x8x2_t)*_X16;
            v171 = vzip2q_s8(*_X16, v80);
            i8 = v165[2].i8;
            v173 = v80.i64[0];
            vst2_s8(i8, v170);
LABEL_36:
            v195 = a51;
            v165[3] = v171;
LABEL_41:
            v226 = 1;
            v227 = v161;
            while (1)
            {
              v228 = v226;
              v229 = (int16x8_t)vrhaddq_u16(v227[-16], *v227);
              v230 = (int16x8_t)vrhaddq_u16(v227[-15], v227[1]);
              v231 = (int16x8_t)vrhaddq_u16(v227[-14], v227[2]);
              v232 = (int16x8_t)vrhaddq_u16(v227[-13], v227[3]);
              if (v162)
              {
                v233 = *v195;
                v234 = v195[1];
                v235 = v195[2];
                v236 = v195[3];
                v195 += 4;
                v229 = vaddq_s16(v233, v229);
                v230 = vaddq_s16(v234, v230);
                v231 = vaddq_s16(v235, v231);
                v232 = vaddq_s16(v236, v232);
              }
              v226 = 0;
              v227 += 4;
              *v74 = vqmovun_high_s16(vqmovun_s16(v229), v230);
              *(int8x16_t *)((char *)v74 + v81) = vqmovun_high_s16(vqmovun_s16(v231), v232);
              v74 = (int8x16_t *)((char *)v74 + v72);
              if ((v228 & 1) == 0)
                JUMPOUT(0x21604A7E4);
            }
          }
          _X8 = &a49->i8[v81];
          __asm { PRFM            #0, [X8] }
          v186 = *(uint8x16_t *)a49;
          v187 = 5;
          v165 = a17;
          do
          {
            _X10 = &_X16->i8[v94];
            __asm { PRFM            #0, [X10] }
            v182 = *(int8x16_t *)((char *)_X16 + v81);
            v190 = (int8x16_t)vrhaddq_u8(v186, (uint8x16_t)v182);
            v191 = v80.i64[0];
            v165[3] = vzip2q_s8(v190, v80);
            v165 += 2;
            vst2_s8(v165->i8, (int8x8x2_t)v190);
            --v187;
            _X16 = (int8x16_t *)((char *)_X16 + v81);
            v186 = (uint8x16_t)v182;
          }
          while (v187 > 2);
          v183 = *(uint8x16_t *)((char *)_X16 + v81);
        }
        v192 = (int8x16_t)vrhaddq_u8((uint8x16_t)v182, v183);
        v193 = v165[2].i8;
        v194 = v80.i64[0];
        vst2_s8(v193, (int8x8x2_t)v192);
        v171 = vzip2q_s8(v192, v80);
        goto LABEL_36;
      }
      __asm { PRFM            #0, [X26] }
      v101 = 5;
      v102 = a30;
      do
      {
        v103 = _X26;
        _X26 = (int8x16_t *)((char *)_X26 + v81);
        __asm { PRFM            #0, [X26] }
        v105 = (int8x8x2_t)*v103;
        v102[3] = vzip2q_s8(*v103, v80);
        v102 += 2;
        v106 = v80.i64[0];
        vst2_s8(v102->i8, v105);
        --v101;
      }
      while (v101 > 2);
      v107 = (int8x8x2_t)*_X26;
      v108 = vzip2q_s8(*_X26, v80);
      v109 = v102[2].i8;
      v110 = v80.i64[0];
      vst2_s8(v109, v107);
LABEL_18:
      v102[3] = v108;
      goto LABEL_23;
    }
    _X8 = &_X26->i8[v81];
    __asm { PRFM            #0, [X8] }
    v123 = *(uint8x16_t *)_X26;
    v124 = 5;
    v102 = a30;
    do
    {
      _X10 = &_X26->i8[a38];
      _X26 = (int8x16_t *)((char *)_X26 + v81);
      __asm { PRFM            #0, [X10] }
      v119 = *_X26;
      v127 = (int8x16_t)vrhaddq_u8(v123, *(uint8x16_t *)_X26);
      v128 = v80.i64[0];
      v102[3] = vzip2q_s8(v127, v80);
      v102 += 2;
      vst2_s8(v102->i8, (int8x8x2_t)v127);
      --v124;
      v123 = (uint8x16_t)v119;
    }
    while (v124 > 2);
    v120 = *(uint8x16_t *)((char *)_X26 + v81);
  }
  v129 = (int8x16_t)vrhaddq_u8((uint8x16_t)v119, v120);
  v130 = v102[2].i8;
  v131 = v80.i64[0];
  vst2_s8(v130, (int8x8x2_t)v129);
  v108 = vzip2q_s8(v129, v80);
  goto LABEL_18;
}

void sub_216045C20(int64x2_t *a1, int8x16_t a2, int8x16_t a3, double a4, double a5, int8x16_t a6, int8x16_t a7, int8x16_t a8, int8x16_t a9)
{
  int v9;
  unsigned int *v10;

  sub_2160855B4(a1, v10, v9, a2, a3, a4, a5, a6, a7, a8, a9);
  JUMPOUT(0x216045D40);
}

void sub_216045E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint16x8_t *a32)
{
  uint64_t v32;
  unint64_t v33;

  v33 = STACK[0x208];
  sub_216080ED8((uint16x8_t *)&STACK[0x240], 0x20u, v32, STACK[0x208], 16);
  sub_216080ED8(a32, 0x20u, v32 + 8, v33, 16);
  JUMPOUT(0x216046174);
}

void sub_216046514(int8x16_t a1, int8x16_t a2, double a3, double a4, int8x16_t a5, int8x16_t a6, int8x16_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, unsigned int *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int64x2_t *a28)
{
  _DWORD *v28;
  uint64_t v29;
  uint64_t *v30;
  _WORD *v31;
  int v32;
  unsigned int *v33;
  _DWORD *v34;
  uint64_t v35;
  int v36;
  uint64_t *v37;
  int64x2_t v38;
  int8x16_t v39;
  double v40;
  double v41;
  int8x16_t v42;
  int8x16_t v43;
  int8x16_t v44;
  int8x16_t v45;
  int16x8_t v46;
  int16x8_t v47;
  int16x8_t v48;
  int16x8_t v49;
  int16x8_t v50;
  int16x8_t v51;
  int16x8_t v52;
  int16x8_t v53;
  char v54;
  uint64_t *i;
  char v56;
  int16x8_t v57;
  int16x8_t v58;
  int16x8_t v59;
  int16x8_t v60;
  int16x8_t v61;
  int16x8_t v62;
  int64x2_t v63;
  int16x8_t v64;
  uint64_t v65;
  int64x2_t *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64x2_t v73;
  uint64_t v74;
  uint64_t v75;

  v38 = sub_2160855B4((int64x2_t *)&STACK[0x240], a11, v32, a1, a2, a3, a4, a5, a6, a7, a8);
  v46 = (int16x8_t)sub_2160855B4(a28, v33, v32, (int8x16_t)v38, v39, v40, v41, v42, v43, v44, v45);
  v54 = 1;
  for (i = &v72; ; i += 4)
  {
    v56 = v54;
    v46.i64[0] = *i;
    v47.i64[0] = i[1];
    v48.i64[0] = i[2];
    v49.i64[0] = i[3];
    if (v70)
    {
      v50.i64[0] = *v37;
      v51.i64[0] = v37[4];
      v52.i64[0] = v37[8];
      v53.i64[0] = v37[12];
      v37 += 16;
      v46 = vaddq_s16(v50, v46);
      v47 = vaddq_s16(v51, v47);
      v48 = vaddq_s16(v52, v48);
      v49 = vaddq_s16(v53, v49);
    }
    v54 = 0;
    *v34 = vqmovun_s16(v46).u32[0];
    *(_DWORD *)((char *)v34 + v71) = vqmovun_s16(v47).u32[0];
    *(_DWORD *)((char *)v34 + v29) = vqmovun_s16(v48).u32[0];
    *(_DWORD *)((char *)v34 + v68) = vqmovun_s16(v49).u32[0];
    v34 = (_DWORD *)((char *)v34 + v67);
    if ((v56 & 1) == 0)
    {
      sub_215FF1D58(&v73, v31, v32, v36, v69);
      v63 = sub_215FF1D58(v66, (_WORD *)((char *)v31 + v65), v32, v36, v69);
      v62.i64[0] = v73.i64[1];
      v61.i64[0] = v73.i64[0];
      v63.i64[0] = v74;
      v64.i64[0] = v75;
      if (v35)
      {
        v57.i64[0] = *v30;
        v58.i64[0] = v30[4];
        v59.i64[0] = v30[8];
        v60.i64[0] = v30[12];
        v61 = vaddq_s16(v57, v61);
        v62 = vaddq_s16(v58, v62);
        v63 = (int64x2_t)vaddq_s16(v59, (int16x8_t)v63);
        v64 = vaddq_s16(v60, v64);
      }
      *v28 = vqmovun_s16(v61).u32[0];
      *(_DWORD *)((char *)v28 + v71) = vqmovun_s16(v62).u32[0];
      *(_DWORD *)((char *)v28 + v29) = vqmovun_s16((int16x8_t)v63).u32[0];
      *(_DWORD *)((char *)v28 + v68) = vqmovun_s16(v64).u32[0];
      JUMPOUT(0x21604A7E4);
    }
  }
}

void sub_216046538(double a1, int8x16_t a2, int8x16_t a3, double a4, int8x16_t a5, int8x16_t a6, int8x16_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, unsigned int *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int64x2_t *a28)
{
  _DWORD *v28;
  uint64_t v29;
  uint64_t *v30;
  _WORD *v31;
  int v32;
  unsigned int *v33;
  _DWORD *v34;
  uint64_t v35;
  int v36;
  uint64_t *v37;
  double v38;
  int8x16_t v39;
  int8x16_t v40;
  double v41;
  int8x16_t v42;
  int8x16_t v43;
  int8x16_t v44;
  int8x16_t v45;
  int16x8_t v46;
  int16x8_t v47;
  int16x8_t v48;
  int16x8_t v49;
  int16x8_t v50;
  int16x8_t v51;
  int16x8_t v52;
  int16x8_t v53;
  char v54;
  uint64_t *i;
  char v56;
  int16x8_t v57;
  int16x8_t v58;
  int16x8_t v59;
  int16x8_t v60;
  int16x8_t v61;
  int16x8_t v62;
  int64x2_t v63;
  int16x8_t v64;
  uint64_t v65;
  int64x2_t *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64x2_t v73;
  uint64_t v74;
  uint64_t v75;

  *(_QWORD *)&v38 = sub_216085708((int64x2_t *)&STACK[0x240], a11, v32, a1, a2, a3, a4, a5, a6, a7, a8).u64[0];
  v46 = (int16x8_t)sub_216085708(a28, v33, v32, v38, v39, v40, v41, v42, v43, v44, v45);
  v54 = 1;
  for (i = &v72; ; i += 4)
  {
    v56 = v54;
    v46.i64[0] = *i;
    v47.i64[0] = i[1];
    v48.i64[0] = i[2];
    v49.i64[0] = i[3];
    if (v70)
    {
      v50.i64[0] = *v37;
      v51.i64[0] = v37[4];
      v52.i64[0] = v37[8];
      v53.i64[0] = v37[12];
      v37 += 16;
      v46 = vaddq_s16(v50, v46);
      v47 = vaddq_s16(v51, v47);
      v48 = vaddq_s16(v52, v48);
      v49 = vaddq_s16(v53, v49);
    }
    v54 = 0;
    *v34 = vqmovun_s16(v46).u32[0];
    *(_DWORD *)((char *)v34 + v71) = vqmovun_s16(v47).u32[0];
    *(_DWORD *)((char *)v34 + v29) = vqmovun_s16(v48).u32[0];
    *(_DWORD *)((char *)v34 + v68) = vqmovun_s16(v49).u32[0];
    v34 = (_DWORD *)((char *)v34 + v67);
    if ((v56 & 1) == 0)
    {
      sub_215FF1D58(&v73, v31, v32, v36, v69);
      v63 = sub_215FF1D58(v66, (_WORD *)((char *)v31 + v65), v32, v36, v69);
      v62.i64[0] = v73.i64[1];
      v61.i64[0] = v73.i64[0];
      v63.i64[0] = v74;
      v64.i64[0] = v75;
      if (v35)
      {
        v57.i64[0] = *v30;
        v58.i64[0] = v30[4];
        v59.i64[0] = v30[8];
        v60.i64[0] = v30[12];
        v61 = vaddq_s16(v57, v61);
        v62 = vaddq_s16(v58, v62);
        v63 = (int64x2_t)vaddq_s16(v59, (int16x8_t)v63);
        v64 = vaddq_s16(v60, v64);
      }
      *v28 = vqmovun_s16(v61).u32[0];
      *(_DWORD *)((char *)v28 + v71) = vqmovun_s16(v62).u32[0];
      *(_DWORD *)((char *)v28 + v29) = vqmovun_s16((int16x8_t)v63).u32[0];
      *(_DWORD *)((char *)v28 + v68) = vqmovun_s16(v64).u32[0];
      JUMPOUT(0x21604A7E4);
    }
  }
}

void sub_21604655C(int8x16_t a1, double a2, int8x16_t a3, double a4, int8x16_t a5, int8x16_t a6, int8x16_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, unsigned int *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int64x2_t *a28)
{
  _DWORD *v28;
  uint64_t v29;
  uint64_t *v30;
  _WORD *v31;
  int v32;
  unsigned int *v33;
  _DWORD *v34;
  uint64_t v35;
  int v36;
  uint64_t *v37;
  int64x2_t v38;
  double v39;
  int8x16_t v40;
  double v41;
  int8x16_t v42;
  int8x16_t v43;
  int8x16_t v44;
  int8x16_t v45;
  int16x8_t v46;
  int16x8_t v47;
  int16x8_t v48;
  int16x8_t v49;
  int16x8_t v50;
  int16x8_t v51;
  int16x8_t v52;
  int16x8_t v53;
  char v54;
  uint64_t *i;
  char v56;
  int16x8_t v57;
  int16x8_t v58;
  int16x8_t v59;
  int16x8_t v60;
  int16x8_t v61;
  int16x8_t v62;
  int64x2_t v63;
  int16x8_t v64;
  uint64_t v65;
  int64x2_t *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64x2_t v73;
  uint64_t v74;
  uint64_t v75;

  v38 = sub_21608584C((int64x2_t *)&STACK[0x240], a11, v32, a1, a2, a3, a4, a5, a6, a7, a8);
  v46 = (int16x8_t)sub_21608584C(a28, v33, v32, (int8x16_t)v38, v39, v40, v41, v42, v43, v44, v45);
  v54 = 1;
  for (i = &v72; ; i += 4)
  {
    v56 = v54;
    v46.i64[0] = *i;
    v47.i64[0] = i[1];
    v48.i64[0] = i[2];
    v49.i64[0] = i[3];
    if (v70)
    {
      v50.i64[0] = *v37;
      v51.i64[0] = v37[4];
      v52.i64[0] = v37[8];
      v53.i64[0] = v37[12];
      v37 += 16;
      v46 = vaddq_s16(v50, v46);
      v47 = vaddq_s16(v51, v47);
      v48 = vaddq_s16(v52, v48);
      v49 = vaddq_s16(v53, v49);
    }
    v54 = 0;
    *v34 = vqmovun_s16(v46).u32[0];
    *(_DWORD *)((char *)v34 + v71) = vqmovun_s16(v47).u32[0];
    *(_DWORD *)((char *)v34 + v29) = vqmovun_s16(v48).u32[0];
    *(_DWORD *)((char *)v34 + v68) = vqmovun_s16(v49).u32[0];
    v34 = (_DWORD *)((char *)v34 + v67);
    if ((v56 & 1) == 0)
    {
      sub_215FF1D58(&v73, v31, v32, v36, v69);
      v63 = sub_215FF1D58(v66, (_WORD *)((char *)v31 + v65), v32, v36, v69);
      v62.i64[0] = v73.i64[1];
      v61.i64[0] = v73.i64[0];
      v63.i64[0] = v74;
      v64.i64[0] = v75;
      if (v35)
      {
        v57.i64[0] = *v30;
        v58.i64[0] = v30[4];
        v59.i64[0] = v30[8];
        v60.i64[0] = v30[12];
        v61 = vaddq_s16(v57, v61);
        v62 = vaddq_s16(v58, v62);
        v63 = (int64x2_t)vaddq_s16(v59, (int16x8_t)v63);
        v64 = vaddq_s16(v60, v64);
      }
      *v28 = vqmovun_s16(v61).u32[0];
      *(_DWORD *)((char *)v28 + v71) = vqmovun_s16(v62).u32[0];
      *(_DWORD *)((char *)v28 + v29) = vqmovun_s16((int16x8_t)v63).u32[0];
      *(_DWORD *)((char *)v28 + v68) = vqmovun_s16(v64).u32[0];
      JUMPOUT(0x21604A7E4);
    }
  }
}

void sub_216046580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, _QWORD *a20)
{
  _DWORD *v20;
  uint64_t v21;
  uint64_t *v22;
  _WORD *v23;
  int v24;
  uint64_t v25;
  _DWORD *v26;
  uint64_t v27;
  int v28;
  uint64_t *v29;
  int16x8_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  char v38;
  uint64_t *i;
  char v40;
  int16x8_t v41;
  int16x8_t v42;
  int16x8_t v43;
  int16x8_t v44;
  int16x8_t v45;
  int16x8_t v46;
  int64x2_t v47;
  int16x8_t v48;
  uint64_t v49;
  int64x2_t *v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int64x2_t v57;
  uint64_t v58;
  uint64_t v59;

  sub_216082C54(&STACK[0x240], 8u, a3, v24);
  v30 = sub_216082C54(a20, 8u, v25, v24);
  v38 = 1;
  for (i = &v56; ; i += 4)
  {
    v40 = v38;
    v30.i64[0] = *i;
    v31.i64[0] = i[1];
    v32.i64[0] = i[2];
    v33.i64[0] = i[3];
    if (v54)
    {
      v34.i64[0] = *v29;
      v35.i64[0] = v29[4];
      v36.i64[0] = v29[8];
      v37.i64[0] = v29[12];
      v29 += 16;
      v30 = vaddq_s16(v34, v30);
      v31 = vaddq_s16(v35, v31);
      v32 = vaddq_s16(v36, v32);
      v33 = vaddq_s16(v37, v33);
    }
    v38 = 0;
    *v26 = vqmovun_s16(v30).u32[0];
    *(_DWORD *)((char *)v26 + v55) = vqmovun_s16(v31).u32[0];
    *(_DWORD *)((char *)v26 + v21) = vqmovun_s16(v32).u32[0];
    *(_DWORD *)((char *)v26 + v52) = vqmovun_s16(v33).u32[0];
    v26 = (_DWORD *)((char *)v26 + v51);
    if ((v40 & 1) == 0)
    {
      sub_215FF1D58(&v57, v23, v24, v28, v53);
      v47 = sub_215FF1D58(v50, (_WORD *)((char *)v23 + v49), v24, v28, v53);
      v46.i64[0] = v57.i64[1];
      v45.i64[0] = v57.i64[0];
      v47.i64[0] = v58;
      v48.i64[0] = v59;
      if (v27)
      {
        v41.i64[0] = *v22;
        v42.i64[0] = v22[4];
        v43.i64[0] = v22[8];
        v44.i64[0] = v22[12];
        v45 = vaddq_s16(v41, v45);
        v46 = vaddq_s16(v42, v46);
        v47 = (int64x2_t)vaddq_s16(v43, (int16x8_t)v47);
        v48 = vaddq_s16(v44, v48);
      }
      *v20 = vqmovun_s16(v45).u32[0];
      *(_DWORD *)((char *)v20 + v55) = vqmovun_s16(v46).u32[0];
      *(_DWORD *)((char *)v20 + v21) = vqmovun_s16((int16x8_t)v47).u32[0];
      *(_DWORD *)((char *)v20 + v52) = vqmovun_s16(v48).u32[0];
      JUMPOUT(0x21604A7E4);
    }
  }
}

void sub_2160465A8(int8x16_t a1, double a2, double a3, double a4, double a5, int8x16_t a6, int8x16_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,_QWORD *a28)
{
  _DWORD *v28;
  uint64_t v29;
  uint64_t *v30;
  _WORD *v31;
  int v32;
  uint64_t v33;
  _DWORD *v34;
  uint64_t v35;
  int v36;
  uint64_t *v37;
  int8x16_t v38;
  double v39;
  double v40;
  double v41;
  double v42;
  int8x16_t v43;
  int8x16_t v44;
  int8x16_t v45;
  int16x8_t v46;
  int16x8_t v47;
  int16x8_t v48;
  int16x8_t v49;
  int16x8_t v50;
  int16x8_t v51;
  int16x8_t v52;
  int16x8_t v53;
  char v54;
  uint64_t *i;
  char v56;
  int16x8_t v57;
  int16x8_t v58;
  int16x8_t v59;
  int16x8_t v60;
  int16x8_t v61;
  int16x8_t v62;
  int64x2_t v63;
  int16x8_t v64;
  uint64_t v65;
  int64x2_t *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64x2_t v73;
  uint64_t v74;
  uint64_t v75;

  *(double *)v38.i64 = sub_216082E28(&STACK[0x240], 8u, a11, v32, a1, a2, a3, a4, a5, a6, a7, a8);
  sub_216082E28(a28, 8u, v33, v32, v38, v39, v40, v41, v42, v43, v44, v45);
  v54 = 1;
  for (i = &v72; ; i += 4)
  {
    v56 = v54;
    v46.i64[0] = *i;
    v47.i64[0] = i[1];
    v48.i64[0] = i[2];
    v49.i64[0] = i[3];
    if (v70)
    {
      v50.i64[0] = *v37;
      v51.i64[0] = v37[4];
      v52.i64[0] = v37[8];
      v53.i64[0] = v37[12];
      v37 += 16;
      v46 = vaddq_s16(v50, v46);
      v47 = vaddq_s16(v51, v47);
      v48 = vaddq_s16(v52, v48);
      v49 = vaddq_s16(v53, v49);
    }
    v54 = 0;
    *v34 = vqmovun_s16(v46).u32[0];
    *(_DWORD *)((char *)v34 + v71) = vqmovun_s16(v47).u32[0];
    *(_DWORD *)((char *)v34 + v29) = vqmovun_s16(v48).u32[0];
    *(_DWORD *)((char *)v34 + v68) = vqmovun_s16(v49).u32[0];
    v34 = (_DWORD *)((char *)v34 + v67);
    if ((v56 & 1) == 0)
    {
      sub_215FF1D58(&v73, v31, v32, v36, v69);
      v63 = sub_215FF1D58(v66, (_WORD *)((char *)v31 + v65), v32, v36, v69);
      v62.i64[0] = v73.i64[1];
      v61.i64[0] = v73.i64[0];
      v63.i64[0] = v74;
      v64.i64[0] = v75;
      if (v35)
      {
        v57.i64[0] = *v30;
        v58.i64[0] = v30[4];
        v59.i64[0] = v30[8];
        v60.i64[0] = v30[12];
        v61 = vaddq_s16(v57, v61);
        v62 = vaddq_s16(v58, v62);
        v63 = (int64x2_t)vaddq_s16(v59, (int16x8_t)v63);
        v64 = vaddq_s16(v60, v64);
      }
      *v28 = vqmovun_s16(v61).u32[0];
      *(_DWORD *)((char *)v28 + v71) = vqmovun_s16(v62).u32[0];
      *(_DWORD *)((char *)v28 + v29) = vqmovun_s16((int16x8_t)v63).u32[0];
      *(_DWORD *)((char *)v28 + v68) = vqmovun_s16(v64).u32[0];
      JUMPOUT(0x21604A7E4);
    }
  }
}

void sub_2160465D0(int64x2_t a1, int64x2_t a2, int64x2_t a3, int64x2_t a4, int64x2_t a5, int64x2_t a6, int64x2_t a7, int64x2_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,double *a28)
{
  _DWORD *v28;
  uint64_t v29;
  uint64_t *v30;
  _WORD *v31;
  int v32;
  uint64_t v33;
  _DWORD *v34;
  uint64_t v35;
  int v36;
  uint64_t *v37;
  int64x2_t v38;
  int64x2_t v39;
  int64x2_t v40;
  int64x2_t v41;
  int64x2_t v42;
  int64x2_t v43;
  int64x2_t v44;
  int64x2_t v45;
  int16x8_t v46;
  int16x8_t v47;
  int16x8_t v48;
  int16x8_t v49;
  int16x8_t v50;
  int16x8_t v51;
  int16x8_t v52;
  int16x8_t v53;
  char v54;
  uint64_t *i;
  char v56;
  int16x8_t v57;
  int16x8_t v58;
  int16x8_t v59;
  int16x8_t v60;
  int16x8_t v61;
  int16x8_t v62;
  int64x2_t v63;
  int16x8_t v64;
  uint64_t v65;
  int64x2_t *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64x2_t v73;
  uint64_t v74;
  uint64_t v75;

  *(double *)v38.i64 = sub_216083108((double *)&STACK[0x240], 8u, a11, v32, a1, a2, a3, a4, a5, a6, a7, a8);
  sub_216083108(a28, 8u, v33, v32, v38, v39, v40, v41, v42, v43, v44, v45);
  v54 = 1;
  for (i = &v72; ; i += 4)
  {
    v56 = v54;
    v46.i64[0] = *i;
    v47.i64[0] = i[1];
    v48.i64[0] = i[2];
    v49.i64[0] = i[3];
    if (v70)
    {
      v50.i64[0] = *v37;
      v51.i64[0] = v37[4];
      v52.i64[0] = v37[8];
      v53.i64[0] = v37[12];
      v37 += 16;
      v46 = vaddq_s16(v50, v46);
      v47 = vaddq_s16(v51, v47);
      v48 = vaddq_s16(v52, v48);
      v49 = vaddq_s16(v53, v49);
    }
    v54 = 0;
    *v34 = vqmovun_s16(v46).u32[0];
    *(_DWORD *)((char *)v34 + v71) = vqmovun_s16(v47).u32[0];
    *(_DWORD *)((char *)v34 + v29) = vqmovun_s16(v48).u32[0];
    *(_DWORD *)((char *)v34 + v68) = vqmovun_s16(v49).u32[0];
    v34 = (_DWORD *)((char *)v34 + v67);
    if ((v56 & 1) == 0)
    {
      sub_215FF1D58(&v73, v31, v32, v36, v69);
      v63 = sub_215FF1D58(v66, (_WORD *)((char *)v31 + v65), v32, v36, v69);
      v62.i64[0] = v73.i64[1];
      v61.i64[0] = v73.i64[0];
      v63.i64[0] = v74;
      v64.i64[0] = v75;
      if (v35)
      {
        v57.i64[0] = *v30;
        v58.i64[0] = v30[4];
        v59.i64[0] = v30[8];
        v60.i64[0] = v30[12];
        v61 = vaddq_s16(v57, v61);
        v62 = vaddq_s16(v58, v62);
        v63 = (int64x2_t)vaddq_s16(v59, (int16x8_t)v63);
        v64 = vaddq_s16(v60, v64);
      }
      *v28 = vqmovun_s16(v61).u32[0];
      *(_DWORD *)((char *)v28 + v71) = vqmovun_s16(v62).u32[0];
      *(_DWORD *)((char *)v28 + v29) = vqmovun_s16((int16x8_t)v63).u32[0];
      *(_DWORD *)((char *)v28 + v68) = vqmovun_s16(v64).u32[0];
      JUMPOUT(0x21604A7E4);
    }
  }
}

void sub_2160465F8(double a1, double a2, double a3, double a4, double a5, double a6, int8x16_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,_QWORD *a28)
{
  _DWORD *v28;
  uint64_t v29;
  uint64_t *v30;
  _WORD *v31;
  int v32;
  uint64_t v33;
  _DWORD *v34;
  uint64_t v35;
  int v36;
  uint64_t *v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  int8x16_t v44;
  int8x16_t v45;
  int16x8_t v46;
  int16x8_t v47;
  int16x8_t v48;
  int16x8_t v49;
  int16x8_t v50;
  int16x8_t v51;
  int16x8_t v52;
  int16x8_t v53;
  char v54;
  uint64_t *i;
  char v56;
  int16x8_t v57;
  int16x8_t v58;
  int16x8_t v59;
  int16x8_t v60;
  int16x8_t v61;
  int16x8_t v62;
  int64x2_t v63;
  int16x8_t v64;
  uint64_t v65;
  int64x2_t *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64x2_t v73;
  uint64_t v74;
  uint64_t v75;

  v38 = sub_2160835B4(&STACK[0x240], 8u, a11, v32, a1, a2, a3, a4, a5, a6, a7, a8);
  sub_2160835B4(a28, 8u, v33, v32, v38, v39, v40, v41, v42, v43, v44, v45);
  v54 = 1;
  for (i = &v72; ; i += 4)
  {
    v56 = v54;
    v46.i64[0] = *i;
    v47.i64[0] = i[1];
    v48.i64[0] = i[2];
    v49.i64[0] = i[3];
    if (v70)
    {
      v50.i64[0] = *v37;
      v51.i64[0] = v37[4];
      v52.i64[0] = v37[8];
      v53.i64[0] = v37[12];
      v37 += 16;
      v46 = vaddq_s16(v50, v46);
      v47 = vaddq_s16(v51, v47);
      v48 = vaddq_s16(v52, v48);
      v49 = vaddq_s16(v53, v49);
    }
    v54 = 0;
    *v34 = vqmovun_s16(v46).u32[0];
    *(_DWORD *)((char *)v34 + v71) = vqmovun_s16(v47).u32[0];
    *(_DWORD *)((char *)v34 + v29) = vqmovun_s16(v48).u32[0];
    *(_DWORD *)((char *)v34 + v68) = vqmovun_s16(v49).u32[0];
    v34 = (_DWORD *)((char *)v34 + v67);
    if ((v56 & 1) == 0)
    {
      sub_215FF1D58(&v73, v31, v32, v36, v69);
      v63 = sub_215FF1D58(v66, (_WORD *)((char *)v31 + v65), v32, v36, v69);
      v62.i64[0] = v73.i64[1];
      v61.i64[0] = v73.i64[0];
      v63.i64[0] = v74;
      v64.i64[0] = v75;
      if (v35)
      {
        v57.i64[0] = *v30;
        v58.i64[0] = v30[4];
        v59.i64[0] = v30[8];
        v60.i64[0] = v30[12];
        v61 = vaddq_s16(v57, v61);
        v62 = vaddq_s16(v58, v62);
        v63 = (int64x2_t)vaddq_s16(v59, (int16x8_t)v63);
        v64 = vaddq_s16(v60, v64);
      }
      *v28 = vqmovun_s16(v61).u32[0];
      *(_DWORD *)((char *)v28 + v71) = vqmovun_s16(v62).u32[0];
      *(_DWORD *)((char *)v28 + v29) = vqmovun_s16((int16x8_t)v63).u32[0];
      *(_DWORD *)((char *)v28 + v68) = vqmovun_s16(v64).u32[0];
      JUMPOUT(0x21604A7E4);
    }
  }
}

void sub_216046620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, _QWORD *a20)
{
  _DWORD *v20;
  uint64_t v21;
  uint64_t *v22;
  _WORD *v23;
  int v24;
  uint64_t v25;
  _DWORD *v26;
  uint64_t v27;
  int v28;
  uint64_t *v29;
  int16x8_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  char v38;
  uint64_t *i;
  char v40;
  int16x8_t v41;
  int16x8_t v42;
  int16x8_t v43;
  int16x8_t v44;
  int16x8_t v45;
  int16x8_t v46;
  int64x2_t v47;
  int16x8_t v48;
  uint64_t v49;
  int64x2_t *v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int64x2_t v57;
  uint64_t v58;
  uint64_t v59;

  sub_216083890(&STACK[0x240], 8u, a3, v24);
  v30 = sub_216083890(a20, 8u, v25, v24);
  v38 = 1;
  for (i = &v56; ; i += 4)
  {
    v40 = v38;
    v30.i64[0] = *i;
    v31.i64[0] = i[1];
    v32.i64[0] = i[2];
    v33.i64[0] = i[3];
    if (v54)
    {
      v34.i64[0] = *v29;
      v35.i64[0] = v29[4];
      v36.i64[0] = v29[8];
      v37.i64[0] = v29[12];
      v29 += 16;
      v30 = vaddq_s16(v34, v30);
      v31 = vaddq_s16(v35, v31);
      v32 = vaddq_s16(v36, v32);
      v33 = vaddq_s16(v37, v33);
    }
    v38 = 0;
    *v26 = vqmovun_s16(v30).u32[0];
    *(_DWORD *)((char *)v26 + v55) = vqmovun_s16(v31).u32[0];
    *(_DWORD *)((char *)v26 + v21) = vqmovun_s16(v32).u32[0];
    *(_DWORD *)((char *)v26 + v52) = vqmovun_s16(v33).u32[0];
    v26 = (_DWORD *)((char *)v26 + v51);
    if ((v40 & 1) == 0)
    {
      sub_215FF1D58(&v57, v23, v24, v28, v53);
      v47 = sub_215FF1D58(v50, (_WORD *)((char *)v23 + v49), v24, v28, v53);
      v46.i64[0] = v57.i64[1];
      v45.i64[0] = v57.i64[0];
      v47.i64[0] = v58;
      v48.i64[0] = v59;
      if (v27)
      {
        v41.i64[0] = *v22;
        v42.i64[0] = v22[4];
        v43.i64[0] = v22[8];
        v44.i64[0] = v22[12];
        v45 = vaddq_s16(v41, v45);
        v46 = vaddq_s16(v42, v46);
        v47 = (int64x2_t)vaddq_s16(v43, (int16x8_t)v47);
        v48 = vaddq_s16(v44, v48);
      }
      *v20 = vqmovun_s16(v45).u32[0];
      *(_DWORD *)((char *)v20 + v55) = vqmovun_s16(v46).u32[0];
      *(_DWORD *)((char *)v20 + v21) = vqmovun_s16((int16x8_t)v47).u32[0];
      *(_DWORD *)((char *)v20 + v52) = vqmovun_s16(v48).u32[0];
      JUMPOUT(0x21604A7E4);
    }
  }
}

void sub_216046648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, _QWORD *a20)
{
  _DWORD *v20;
  uint64_t v21;
  uint64_t *v22;
  _WORD *v23;
  int v24;
  uint64_t v25;
  _DWORD *v26;
  uint64_t v27;
  int v28;
  uint64_t *v29;
  int16x8_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  char v38;
  uint64_t *i;
  char v40;
  int16x8_t v41;
  int16x8_t v42;
  int16x8_t v43;
  int16x8_t v44;
  int16x8_t v45;
  int16x8_t v46;
  int64x2_t v47;
  int16x8_t v48;
  uint64_t v49;
  int64x2_t *v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int64x2_t v57;
  uint64_t v58;
  uint64_t v59;

  sub_216083A54(&STACK[0x240], 8u, a3, v24);
  sub_216083A54(a20, 8u, v25, v24);
  v38 = 1;
  for (i = &v56; ; i += 4)
  {
    v40 = v38;
    v30.i64[0] = *i;
    v31.i64[0] = i[1];
    v32.i64[0] = i[2];
    v33.i64[0] = i[3];
    if (v54)
    {
      v34.i64[0] = *v29;
      v35.i64[0] = v29[4];
      v36.i64[0] = v29[8];
      v37.i64[0] = v29[12];
      v29 += 16;
      v30 = vaddq_s16(v34, v30);
      v31 = vaddq_s16(v35, v31);
      v32 = vaddq_s16(v36, v32);
      v33 = vaddq_s16(v37, v33);
    }
    v38 = 0;
    *v26 = vqmovun_s16(v30).u32[0];
    *(_DWORD *)((char *)v26 + v55) = vqmovun_s16(v31).u32[0];
    *(_DWORD *)((char *)v26 + v21) = vqmovun_s16(v32).u32[0];
    *(_DWORD *)((char *)v26 + v52) = vqmovun_s16(v33).u32[0];
    v26 = (_DWORD *)((char *)v26 + v51);
    if ((v40 & 1) == 0)
    {
      sub_215FF1D58(&v57, v23, v24, v28, v53);
      v47 = sub_215FF1D58(v50, (_WORD *)((char *)v23 + v49), v24, v28, v53);
      v46.i64[0] = v57.i64[1];
      v45.i64[0] = v57.i64[0];
      v47.i64[0] = v58;
      v48.i64[0] = v59;
      if (v27)
      {
        v41.i64[0] = *v22;
        v42.i64[0] = v22[4];
        v43.i64[0] = v22[8];
        v44.i64[0] = v22[12];
        v45 = vaddq_s16(v41, v45);
        v46 = vaddq_s16(v42, v46);
        v47 = (int64x2_t)vaddq_s16(v43, (int16x8_t)v47);
        v48 = vaddq_s16(v44, v48);
      }
      *v20 = vqmovun_s16(v45).u32[0];
      *(_DWORD *)((char *)v20 + v55) = vqmovun_s16(v46).u32[0];
      *(_DWORD *)((char *)v20 + v21) = vqmovun_s16((int16x8_t)v47).u32[0];
      *(_DWORD *)((char *)v20 + v52) = vqmovun_s16(v48).u32[0];
      JUMPOUT(0x21604A7E4);
    }
  }
}

void sub_216046670(int8x16_t a1, int8x16_t a2, int8x16_t a3, int8x16_t a4, int8x16_t a5, int64x2_t a6, int64x2_t a7, int64x2_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int64x2_t *a28)
{
  _DWORD *v28;
  uint64_t v29;
  uint64_t *v30;
  _WORD *v31;
  int v32;
  uint64_t v33;
  _DWORD *v34;
  uint64_t v35;
  int v36;
  uint64_t *v37;
  int64x2_t v38;
  int8x16_t v39;
  int8x16_t v40;
  int8x16_t v41;
  int8x16_t v42;
  int64x2_t v43;
  int64x2_t v44;
  int64x2_t v45;
  int16x8_t v46;
  int16x8_t v47;
  int16x8_t v48;
  int16x8_t v49;
  int16x8_t v50;
  int16x8_t v51;
  int16x8_t v52;
  int16x8_t v53;
  char v54;
  uint64_t *i;
  char v56;
  int16x8_t v57;
  int16x8_t v58;
  int16x8_t v59;
  int16x8_t v60;
  int16x8_t v61;
  int16x8_t v62;
  int64x2_t v63;
  int16x8_t v64;
  uint64_t v65;
  int64x2_t *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64x2_t v73;
  uint64_t v74;
  uint64_t v75;

  v38 = sub_2160859A0((int64x2_t *)&STACK[0x240], a11, v32, a1, a2, a3, a4, a5, a6, a7, a8);
  v46 = (int16x8_t)sub_2160859A0(a28, v33, v32, (int8x16_t)v38, v39, v40, v41, v42, v43, v44, v45);
  v54 = 1;
  for (i = &v72; ; i += 4)
  {
    v56 = v54;
    v46.i64[0] = *i;
    v47.i64[0] = i[1];
    v48.i64[0] = i[2];
    v49.i64[0] = i[3];
    if (v70)
    {
      v50.i64[0] = *v37;
      v51.i64[0] = v37[4];
      v52.i64[0] = v37[8];
      v53.i64[0] = v37[12];
      v37 += 16;
      v46 = vaddq_s16(v50, v46);
      v47 = vaddq_s16(v51, v47);
      v48 = vaddq_s16(v52, v48);
      v49 = vaddq_s16(v53, v49);
    }
    v54 = 0;
    *v34 = vqmovun_s16(v46).u32[0];
    *(_DWORD *)((char *)v34 + v71) = vqmovun_s16(v47).u32[0];
    *(_DWORD *)((char *)v34 + v29) = vqmovun_s16(v48).u32[0];
    *(_DWORD *)((char *)v34 + v68) = vqmovun_s16(v49).u32[0];
    v34 = (_DWORD *)((char *)v34 + v67);
    if ((v56 & 1) == 0)
    {
      sub_215FF1D58(&v73, v31, v32, v36, v69);
      v63 = sub_215FF1D58(v66, (_WORD *)((char *)v31 + v65), v32, v36, v69);
      v62.i64[0] = v73.i64[1];
      v61.i64[0] = v73.i64[0];
      v63.i64[0] = v74;
      v64.i64[0] = v75;
      if (v35)
      {
        v57.i64[0] = *v30;
        v58.i64[0] = v30[4];
        v59.i64[0] = v30[8];
        v60.i64[0] = v30[12];
        v61 = vaddq_s16(v57, v61);
        v62 = vaddq_s16(v58, v62);
        v63 = (int64x2_t)vaddq_s16(v59, (int16x8_t)v63);
        v64 = vaddq_s16(v60, v64);
      }
      *v28 = vqmovun_s16(v61).u32[0];
      *(_DWORD *)((char *)v28 + v71) = vqmovun_s16(v62).u32[0];
      *(_DWORD *)((char *)v28 + v29) = vqmovun_s16((int16x8_t)v63).u32[0];
      *(_DWORD *)((char *)v28 + v68) = vqmovun_s16(v64).u32[0];
      JUMPOUT(0x21604A7E4);
    }
  }
}

void sub_216046694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, _QWORD *a20)
{
  _DWORD *v20;
  uint64_t v21;
  uint64_t *v22;
  _WORD *v23;
  int v24;
  uint64_t v25;
  _DWORD *v26;
  uint64_t v27;
  int v28;
  uint64_t *v29;
  int16x8_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  char v38;
  uint64_t *i;
  char v40;
  int16x8_t v41;
  int16x8_t v42;
  int16x8_t v43;
  int16x8_t v44;
  int16x8_t v45;
  int16x8_t v46;
  int64x2_t v47;
  int16x8_t v48;
  uint64_t v49;
  int64x2_t *v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int64x2_t v57;
  uint64_t v58;
  uint64_t v59;

  sub_2160841C4(&STACK[0x240], 8u, a3, v24);
  sub_2160841C4(a20, 8u, v25, v24);
  v38 = 1;
  for (i = &v56; ; i += 4)
  {
    v40 = v38;
    v30.i64[0] = *i;
    v31.i64[0] = i[1];
    v32.i64[0] = i[2];
    v33.i64[0] = i[3];
    if (v54)
    {
      v34.i64[0] = *v29;
      v35.i64[0] = v29[4];
      v36.i64[0] = v29[8];
      v37.i64[0] = v29[12];
      v29 += 16;
      v30 = vaddq_s16(v34, v30);
      v31 = vaddq_s16(v35, v31);
      v32 = vaddq_s16(v36, v32);
      v33 = vaddq_s16(v37, v33);
    }
    v38 = 0;
    *v26 = vqmovun_s16(v30).u32[0];
    *(_DWORD *)((char *)v26 + v55) = vqmovun_s16(v31).u32[0];
    *(_DWORD *)((char *)v26 + v21) = vqmovun_s16(v32).u32[0];
    *(_DWORD *)((char *)v26 + v52) = vqmovun_s16(v33).u32[0];
    v26 = (_DWORD *)((char *)v26 + v51);
    if ((v40 & 1) == 0)
    {
      sub_215FF1D58(&v57, v23, v24, v28, v53);
      v47 = sub_215FF1D58(v50, (_WORD *)((char *)v23 + v49), v24, v28, v53);
      v46.i64[0] = v57.i64[1];
      v45.i64[0] = v57.i64[0];
      v47.i64[0] = v58;
      v48.i64[0] = v59;
      if (v27)
      {
        v41.i64[0] = *v22;
        v42.i64[0] = v22[4];
        v43.i64[0] = v22[8];
        v44.i64[0] = v22[12];
        v45 = vaddq_s16(v41, v45);
        v46 = vaddq_s16(v42, v46);
        v47 = (int64x2_t)vaddq_s16(v43, (int16x8_t)v47);
        v48 = vaddq_s16(v44, v48);
      }
      *v20 = vqmovun_s16(v45).u32[0];
      *(_DWORD *)((char *)v20 + v55) = vqmovun_s16(v46).u32[0];
      *(_DWORD *)((char *)v20 + v21) = vqmovun_s16((int16x8_t)v47).u32[0];
      *(_DWORD *)((char *)v20 + v52) = vqmovun_s16(v48).u32[0];
      JUMPOUT(0x21604A7E4);
    }
  }
}

void sub_2160466BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, _QWORD *a20)
{
  _DWORD *v20;
  uint64_t v21;
  uint64_t *v22;
  _WORD *v23;
  int v24;
  uint64_t v25;
  _DWORD *v26;
  uint64_t v27;
  int v28;
  uint64_t *v29;
  int16x8_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  char v38;
  uint64_t *i;
  char v40;
  int16x8_t v41;
  int16x8_t v42;
  int16x8_t v43;
  int16x8_t v44;
  int16x8_t v45;
  int16x8_t v46;
  int64x2_t v47;
  int16x8_t v48;
  uint64_t v49;
  int64x2_t *v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int64x2_t v57;
  uint64_t v58;
  uint64_t v59;

  sub_216084934(&STACK[0x240], 8u, a3, v24);
  v30 = sub_216084934(a20, 8u, v25, v24);
  v38 = 1;
  for (i = &v56; ; i += 4)
  {
    v40 = v38;
    v30.i64[0] = *i;
    v31.i64[0] = i[1];
    v32.i64[0] = i[2];
    v33.i64[0] = i[3];
    if (v54)
    {
      v34.i64[0] = *v29;
      v35.i64[0] = v29[4];
      v36.i64[0] = v29[8];
      v37.i64[0] = v29[12];
      v29 += 16;
      v30 = vaddq_s16(v34, v30);
      v31 = vaddq_s16(v35, v31);
      v32 = vaddq_s16(v36, v32);
      v33 = vaddq_s16(v37, v33);
    }
    v38 = 0;
    *v26 = vqmovun_s16(v30).u32[0];
    *(_DWORD *)((char *)v26 + v55) = vqmovun_s16(v31).u32[0];
    *(_DWORD *)((char *)v26 + v21) = vqmovun_s16(v32).u32[0];
    *(_DWORD *)((char *)v26 + v52) = vqmovun_s16(v33).u32[0];
    v26 = (_DWORD *)((char *)v26 + v51);
    if ((v40 & 1) == 0)
    {
      sub_215FF1D58(&v57, v23, v24, v28, v53);
      v47 = sub_215FF1D58(v50, (_WORD *)((char *)v23 + v49), v24, v28, v53);
      v46.i64[0] = v57.i64[1];
      v45.i64[0] = v57.i64[0];
      v47.i64[0] = v58;
      v48.i64[0] = v59;
      if (v27)
      {
        v41.i64[0] = *v22;
        v42.i64[0] = v22[4];
        v43.i64[0] = v22[8];
        v44.i64[0] = v22[12];
        v45 = vaddq_s16(v41, v45);
        v46 = vaddq_s16(v42, v46);
        v47 = (int64x2_t)vaddq_s16(v43, (int16x8_t)v47);
        v48 = vaddq_s16(v44, v48);
      }
      *v20 = vqmovun_s16(v45).u32[0];
      *(_DWORD *)((char *)v20 + v55) = vqmovun_s16(v46).u32[0];
      *(_DWORD *)((char *)v20 + v21) = vqmovun_s16((int16x8_t)v47).u32[0];
      *(_DWORD *)((char *)v20 + v52) = vqmovun_s16(v48).u32[0];
      JUMPOUT(0x21604A7E4);
    }
  }
}

void sub_2160466E4(int8x16_t a1, double a2, double a3, double a4, double a5, int8x16_t a6, int8x16_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,_QWORD *a28)
{
  _DWORD *v28;
  uint64_t v29;
  uint64_t *v30;
  _WORD *v31;
  int v32;
  uint64_t v33;
  _DWORD *v34;
  uint64_t v35;
  int v36;
  uint64_t *v37;
  int8x16_t v38;
  double v39;
  double v40;
  double v41;
  double v42;
  int8x16_t v43;
  int8x16_t v44;
  int8x16_t v45;
  int16x8_t v46;
  int16x8_t v47;
  int16x8_t v48;
  int16x8_t v49;
  int16x8_t v50;
  int16x8_t v51;
  int16x8_t v52;
  int16x8_t v53;
  char v54;
  uint64_t *i;
  char v56;
  int16x8_t v57;
  int16x8_t v58;
  int16x8_t v59;
  int16x8_t v60;
  int16x8_t v61;
  int16x8_t v62;
  int64x2_t v63;
  int16x8_t v64;
  uint64_t v65;
  int64x2_t *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64x2_t v73;
  uint64_t v74;
  uint64_t v75;

  *(double *)v38.i64 = sub_216084B08(&STACK[0x240], 8u, a11, v32, a1, a2, a3, a4, a5, a6, a7, a8);
  sub_216084B08(a28, 8u, v33, v32, v38, v39, v40, v41, v42, v43, v44, v45);
  v54 = 1;
  for (i = &v72; ; i += 4)
  {
    v56 = v54;
    v46.i64[0] = *i;
    v47.i64[0] = i[1];
    v48.i64[0] = i[2];
    v49.i64[0] = i[3];
    if (v70)
    {
      v50.i64[0] = *v37;
      v51.i64[0] = v37[4];
      v52.i64[0] = v37[8];
      v53.i64[0] = v37[12];
      v37 += 16;
      v46 = vaddq_s16(v50, v46);
      v47 = vaddq_s16(v51, v47);
      v48 = vaddq_s16(v52, v48);
      v49 = vaddq_s16(v53, v49);
    }
    v54 = 0;
    *v34 = vqmovun_s16(v46).u32[0];
    *(_DWORD *)((char *)v34 + v71) = vqmovun_s16(v47).u32[0];
    *(_DWORD *)((char *)v34 + v29) = vqmovun_s16(v48).u32[0];
    *(_DWORD *)((char *)v34 + v68) = vqmovun_s16(v49).u32[0];
    v34 = (_DWORD *)((char *)v34 + v67);
    if ((v56 & 1) == 0)
    {
      sub_215FF1D58(&v73, v31, v32, v36, v69);
      v63 = sub_215FF1D58(v66, (_WORD *)((char *)v31 + v65), v32, v36, v69);
      v62.i64[0] = v73.i64[1];
      v61.i64[0] = v73.i64[0];
      v63.i64[0] = v74;
      v64.i64[0] = v75;
      if (v35)
      {
        v57.i64[0] = *v30;
        v58.i64[0] = v30[4];
        v59.i64[0] = v30[8];
        v60.i64[0] = v30[12];
        v61 = vaddq_s16(v57, v61);
        v62 = vaddq_s16(v58, v62);
        v63 = (int64x2_t)vaddq_s16(v59, (int16x8_t)v63);
        v64 = vaddq_s16(v60, v64);
      }
      *v28 = vqmovun_s16(v61).u32[0];
      *(_DWORD *)((char *)v28 + v71) = vqmovun_s16(v62).u32[0];
      *(_DWORD *)((char *)v28 + v29) = vqmovun_s16((int16x8_t)v63).u32[0];
      *(_DWORD *)((char *)v28 + v68) = vqmovun_s16(v64).u32[0];
      JUMPOUT(0x21604A7E4);
    }
  }
}

void sub_21604670C(int64x2_t a1, int64x2_t a2, int64x2_t a3, int64x2_t a4, int64x2_t a5, int64x2_t a6, int64x2_t a7, int64x2_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,double *a28)
{
  _DWORD *v28;
  uint64_t v29;
  uint64_t *v30;
  _WORD *v31;
  int v32;
  uint64_t v33;
  _DWORD *v34;
  uint64_t v35;
  int v36;
  uint64_t *v37;
  int64x2_t v38;
  int64x2_t v39;
  int64x2_t v40;
  int64x2_t v41;
  int64x2_t v42;
  int64x2_t v43;
  int64x2_t v44;
  int64x2_t v45;
  int16x8_t v46;
  int16x8_t v47;
  int16x8_t v48;
  int16x8_t v49;
  int16x8_t v50;
  int16x8_t v51;
  int16x8_t v52;
  int16x8_t v53;
  char v54;
  uint64_t *i;
  char v56;
  int16x8_t v57;
  int16x8_t v58;
  int16x8_t v59;
  int16x8_t v60;
  int16x8_t v61;
  int16x8_t v62;
  int64x2_t v63;
  int16x8_t v64;
  uint64_t v65;
  int64x2_t *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64x2_t v73;
  uint64_t v74;
  uint64_t v75;

  *(double *)v38.i64 = sub_216084DEC((double *)&STACK[0x240], 8u, a11, v32, a1, a2, a3, a4, a5, a6, a7, a8);
  sub_216084DEC(a28, 8u, v33, v32, v38, v39, v40, v41, v42, v43, v44, v45);
  v54 = 1;
  for (i = &v72; ; i += 4)
  {
    v56 = v54;
    v46.i64[0] = *i;
    v47.i64[0] = i[1];
    v48.i64[0] = i[2];
    v49.i64[0] = i[3];
    if (v70)
    {
      v50.i64[0] = *v37;
      v51.i64[0] = v37[4];
      v52.i64[0] = v37[8];
      v53.i64[0] = v37[12];
      v37 += 16;
      v46 = vaddq_s16(v50, v46);
      v47 = vaddq_s16(v51, v47);
      v48 = vaddq_s16(v52, v48);
      v49 = vaddq_s16(v53, v49);
    }
    v54 = 0;
    *v34 = vqmovun_s16(v46).u32[0];
    *(_DWORD *)((char *)v34 + v71) = vqmovun_s16(v47).u32[0];
    *(_DWORD *)((char *)v34 + v29) = vqmovun_s16(v48).u32[0];
    *(_DWORD *)((char *)v34 + v68) = vqmovun_s16(v49).u32[0];
    v34 = (_DWORD *)((char *)v34 + v67);
    if ((v56 & 1) == 0)
    {
      sub_215FF1D58(&v73, v31, v32, v36, v69);
      v63 = sub_215FF1D58(v66, (_WORD *)((char *)v31 + v65), v32, v36, v69);
      v62.i64[0] = v73.i64[1];
      v61.i64[0] = v73.i64[0];
      v63.i64[0] = v74;
      v64.i64[0] = v75;
      if (v35)
      {
        v57.i64[0] = *v30;
        v58.i64[0] = v30[4];
        v59.i64[0] = v30[8];
        v60.i64[0] = v30[12];
        v61 = vaddq_s16(v57, v61);
        v62 = vaddq_s16(v58, v62);
        v63 = (int64x2_t)vaddq_s16(v59, (int16x8_t)v63);
        v64 = vaddq_s16(v60, v64);
      }
      *v28 = vqmovun_s16(v61).u32[0];
      *(_DWORD *)((char *)v28 + v71) = vqmovun_s16(v62).u32[0];
      *(_DWORD *)((char *)v28 + v29) = vqmovun_s16((int16x8_t)v63).u32[0];
      *(_DWORD *)((char *)v28 + v68) = vqmovun_s16(v64).u32[0];
      JUMPOUT(0x21604A7E4);
    }
  }
}

void sub_216046734(double a1, double a2, double a3, double a4, double a5, double a6, int8x16_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,_QWORD *a28)
{
  int v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  int8x16_t v36;
  int8x16_t v37;

  v30 = sub_216085298(&STACK[0x240], 8u, a11, v28, a1, a2, a3, a4, a5, a6, a7, a8);
  sub_216085298(a28, 8u, v29, v28, v30, v31, v32, v33, v34, v35, v36, v37);
  JUMPOUT(0x216046758);
}

void sub_216046894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint16x8_t *a32)
{
  uint64_t v32;
  unint64_t v33;

  v33 = STACK[0x208];
  sub_216080ED8((uint16x8_t *)&STACK[0x240], 0x20u, v32, STACK[0x208], 8);
  sub_216080ED8(a32, 0x20u, v32 + 8, v33, 8);
  JUMPOUT(0x216046C10);
}

void sub_216046F84(int8x16_t a1, int8x16_t a2, double a3, double a4, int8x16_t a5, int8x16_t a6, int8x16_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, unsigned int *a11)
{
  _DWORD *v11;
  uint64_t v12;
  uint64_t *v13;
  _WORD *v14;
  int v15;
  _DWORD *v16;
  uint64_t v17;
  int v18;
  uint64_t *v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int64x2_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int64x2_t v30;
  int16x8_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64x2_t v40;

  v26 = sub_2160855B4((int64x2_t *)&STACK[0x240], a11, v15, a1, a2, a3, a4, a5, a6, a7, a8);
  v24.i64[0] = v36;
  v25.i64[0] = v37;
  v26.i64[0] = v38;
  v27.i64[0] = v39;
  if (v34)
  {
    v20.i64[0] = *v19;
    v21.i64[0] = v19[4];
    v22.i64[0] = v19[8];
    v23.i64[0] = v19[12];
    v24 = vaddq_s16(v20, v24);
    v25 = vaddq_s16(v21, v25);
    v26 = (int64x2_t)vaddq_s16(v22, (int16x8_t)v26);
    v27 = vaddq_s16(v23, v27);
  }
  *v16 = vqmovun_s16(v24).u32[0];
  *(_DWORD *)((char *)v16 + v35) = vqmovun_s16(v25).u32[0];
  *(_DWORD *)((char *)v16 + v12) = vqmovun_s16((int16x8_t)v26).u32[0];
  *(_DWORD *)((char *)v16 + v32) = vqmovun_s16(v27).u32[0];
  v30 = sub_215FF1D58(&v40, v14, v15, v18, v33);
  v31.i64[0] = v40.i64[1];
  v30.i64[0] = v40.i64[0];
  if (v17)
  {
    v28.i64[0] = *v13;
    v29.i64[0] = v13[4];
    v30 = (int64x2_t)vaddq_s16(v28, (int16x8_t)v30);
    v31 = vaddq_s16(v29, v31);
  }
  *v11 = vqmovun_s16((int16x8_t)v30).u32[0];
  *(_DWORD *)((char *)v11 + v35) = vqmovun_s16(v31).u32[0];
  JUMPOUT(0x21604A7E4);
}

void sub_216046F98(double a1, int8x16_t a2, int8x16_t a3, double a4, int8x16_t a5, int8x16_t a6, int8x16_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, unsigned int *a11)
{
  _DWORD *v11;
  uint64_t v12;
  uint64_t *v13;
  _WORD *v14;
  int v15;
  _DWORD *v16;
  uint64_t v17;
  int v18;
  uint64_t *v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int64x2_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int64x2_t v30;
  int16x8_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64x2_t v40;

  v26 = sub_216085708((int64x2_t *)&STACK[0x240], a11, v15, a1, a2, a3, a4, a5, a6, a7, a8);
  v24.i64[0] = v36;
  v25.i64[0] = v37;
  v26.i64[0] = v38;
  v27.i64[0] = v39;
  if (v34)
  {
    v20.i64[0] = *v19;
    v21.i64[0] = v19[4];
    v22.i64[0] = v19[8];
    v23.i64[0] = v19[12];
    v24 = vaddq_s16(v20, v24);
    v25 = vaddq_s16(v21, v25);
    v26 = (int64x2_t)vaddq_s16(v22, (int16x8_t)v26);
    v27 = vaddq_s16(v23, v27);
  }
  *v16 = vqmovun_s16(v24).u32[0];
  *(_DWORD *)((char *)v16 + v35) = vqmovun_s16(v25).u32[0];
  *(_DWORD *)((char *)v16 + v12) = vqmovun_s16((int16x8_t)v26).u32[0];
  *(_DWORD *)((char *)v16 + v32) = vqmovun_s16(v27).u32[0];
  v30 = sub_215FF1D58(&v40, v14, v15, v18, v33);
  v31.i64[0] = v40.i64[1];
  v30.i64[0] = v40.i64[0];
  if (v17)
  {
    v28.i64[0] = *v13;
    v29.i64[0] = v13[4];
    v30 = (int64x2_t)vaddq_s16(v28, (int16x8_t)v30);
    v31 = vaddq_s16(v29, v31);
  }
  *v11 = vqmovun_s16((int16x8_t)v30).u32[0];
  *(_DWORD *)((char *)v11 + v35) = vqmovun_s16(v31).u32[0];
  JUMPOUT(0x21604A7E4);
}

void sub_216046FAC(int8x16_t a1, double a2, int8x16_t a3, double a4, int8x16_t a5, int8x16_t a6, int8x16_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, unsigned int *a11)
{
  _DWORD *v11;
  uint64_t v12;
  uint64_t *v13;
  _WORD *v14;
  int v15;
  _DWORD *v16;
  uint64_t v17;
  int v18;
  uint64_t *v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int64x2_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int64x2_t v30;
  int16x8_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64x2_t v40;

  v26 = sub_21608584C((int64x2_t *)&STACK[0x240], a11, v15, a1, a2, a3, a4, a5, a6, a7, a8);
  v24.i64[0] = v36;
  v25.i64[0] = v37;
  v26.i64[0] = v38;
  v27.i64[0] = v39;
  if (v34)
  {
    v20.i64[0] = *v19;
    v21.i64[0] = v19[4];
    v22.i64[0] = v19[8];
    v23.i64[0] = v19[12];
    v24 = vaddq_s16(v20, v24);
    v25 = vaddq_s16(v21, v25);
    v26 = (int64x2_t)vaddq_s16(v22, (int16x8_t)v26);
    v27 = vaddq_s16(v23, v27);
  }
  *v16 = vqmovun_s16(v24).u32[0];
  *(_DWORD *)((char *)v16 + v35) = vqmovun_s16(v25).u32[0];
  *(_DWORD *)((char *)v16 + v12) = vqmovun_s16((int16x8_t)v26).u32[0];
  *(_DWORD *)((char *)v16 + v32) = vqmovun_s16(v27).u32[0];
  v30 = sub_215FF1D58(&v40, v14, v15, v18, v33);
  v31.i64[0] = v40.i64[1];
  v30.i64[0] = v40.i64[0];
  if (v17)
  {
    v28.i64[0] = *v13;
    v29.i64[0] = v13[4];
    v30 = (int64x2_t)vaddq_s16(v28, (int16x8_t)v30);
    v31 = vaddq_s16(v29, v31);
  }
  *v11 = vqmovun_s16((int16x8_t)v30).u32[0];
  *(_DWORD *)((char *)v11 + v35) = vqmovun_s16(v31).u32[0];
  JUMPOUT(0x21604A7E4);
}

void sub_216046FC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  _WORD *v6;
  int v7;
  _DWORD *v8;
  uint64_t v9;
  int v10;
  uint64_t *v11;
  int16x8_t v12;
  int16x8_t v13;
  int16x8_t v14;
  int16x8_t v15;
  int16x8_t v16;
  int16x8_t v17;
  int16x8_t v18;
  int16x8_t v19;
  int16x8_t v20;
  int16x8_t v21;
  int64x2_t v22;
  int16x8_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64x2_t v32;

  v18 = sub_216082C54(&STACK[0x240], 8u, a3, v7);
  v16.i64[0] = v28;
  v17.i64[0] = v29;
  v18.i64[0] = v30;
  v19.i64[0] = v31;
  if (v26)
  {
    v12.i64[0] = *v11;
    v13.i64[0] = v11[4];
    v14.i64[0] = v11[8];
    v15.i64[0] = v11[12];
    v16 = vaddq_s16(v12, v16);
    v17 = vaddq_s16(v13, v17);
    v18 = vaddq_s16(v14, v18);
    v19 = vaddq_s16(v15, v19);
  }
  *v8 = vqmovun_s16(v16).u32[0];
  *(_DWORD *)((char *)v8 + v27) = vqmovun_s16(v17).u32[0];
  *(_DWORD *)((char *)v8 + v4) = vqmovun_s16(v18).u32[0];
  *(_DWORD *)((char *)v8 + v24) = vqmovun_s16(v19).u32[0];
  v22 = sub_215FF1D58(&v32, v6, v7, v10, v25);
  v23.i64[0] = v32.i64[1];
  v22.i64[0] = v32.i64[0];
  if (v9)
  {
    v20.i64[0] = *v5;
    v21.i64[0] = v5[4];
    v22 = (int64x2_t)vaddq_s16(v20, (int16x8_t)v22);
    v23 = vaddq_s16(v21, v23);
  }
  *v3 = vqmovun_s16((int16x8_t)v22).u32[0];
  *(_DWORD *)((char *)v3 + v27) = vqmovun_s16(v23).u32[0];
  JUMPOUT(0x21604A7E4);
}

void sub_216046FD4(int8x16_t a1, double a2, double a3, double a4, double a5, int8x16_t a6, int8x16_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  _DWORD *v11;
  uint64_t v12;
  uint64_t *v13;
  _WORD *v14;
  int v15;
  _DWORD *v16;
  uint64_t v17;
  int v18;
  uint64_t *v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int64x2_t v30;
  int16x8_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64x2_t v40;

  sub_216082E28(&STACK[0x240], 8u, a11, v15, a1, a2, a3, a4, a5, a6, a7, a8);
  v24.i64[0] = v36;
  v25.i64[0] = v37;
  v26.i64[0] = v38;
  v27.i64[0] = v39;
  if (v34)
  {
    v20.i64[0] = *v19;
    v21.i64[0] = v19[4];
    v22.i64[0] = v19[8];
    v23.i64[0] = v19[12];
    v24 = vaddq_s16(v20, v24);
    v25 = vaddq_s16(v21, v25);
    v26 = vaddq_s16(v22, v26);
    v27 = vaddq_s16(v23, v27);
  }
  *v16 = vqmovun_s16(v24).u32[0];
  *(_DWORD *)((char *)v16 + v35) = vqmovun_s16(v25).u32[0];
  *(_DWORD *)((char *)v16 + v12) = vqmovun_s16(v26).u32[0];
  *(_DWORD *)((char *)v16 + v32) = vqmovun_s16(v27).u32[0];
  v30 = sub_215FF1D58(&v40, v14, v15, v18, v33);
  v31.i64[0] = v40.i64[1];
  v30.i64[0] = v40.i64[0];
  if (v17)
  {
    v28.i64[0] = *v13;
    v29.i64[0] = v13[4];
    v30 = (int64x2_t)vaddq_s16(v28, (int16x8_t)v30);
    v31 = vaddq_s16(v29, v31);
  }
  *v11 = vqmovun_s16((int16x8_t)v30).u32[0];
  *(_DWORD *)((char *)v11 + v35) = vqmovun_s16(v31).u32[0];
  JUMPOUT(0x21604A7E4);
}

void sub_216046FE8(int64x2_t a1, int64x2_t a2, int64x2_t a3, int64x2_t a4, int64x2_t a5, int64x2_t a6, int64x2_t a7, int64x2_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  _DWORD *v11;
  uint64_t v12;
  uint64_t *v13;
  _WORD *v14;
  int v15;
  _DWORD *v16;
  uint64_t v17;
  int v18;
  uint64_t *v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int64x2_t v30;
  int16x8_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64x2_t v40;

  sub_216083108((double *)&STACK[0x240], 8u, a11, v15, a1, a2, a3, a4, a5, a6, a7, a8);
  v24.i64[0] = v36;
  v25.i64[0] = v37;
  v26.i64[0] = v38;
  v27.i64[0] = v39;
  if (v34)
  {
    v20.i64[0] = *v19;
    v21.i64[0] = v19[4];
    v22.i64[0] = v19[8];
    v23.i64[0] = v19[12];
    v24 = vaddq_s16(v20, v24);
    v25 = vaddq_s16(v21, v25);
    v26 = vaddq_s16(v22, v26);
    v27 = vaddq_s16(v23, v27);
  }
  *v16 = vqmovun_s16(v24).u32[0];
  *(_DWORD *)((char *)v16 + v35) = vqmovun_s16(v25).u32[0];
  *(_DWORD *)((char *)v16 + v12) = vqmovun_s16(v26).u32[0];
  *(_DWORD *)((char *)v16 + v32) = vqmovun_s16(v27).u32[0];
  v30 = sub_215FF1D58(&v40, v14, v15, v18, v33);
  v31.i64[0] = v40.i64[1];
  v30.i64[0] = v40.i64[0];
  if (v17)
  {
    v28.i64[0] = *v13;
    v29.i64[0] = v13[4];
    v30 = (int64x2_t)vaddq_s16(v28, (int16x8_t)v30);
    v31 = vaddq_s16(v29, v31);
  }
  *v11 = vqmovun_s16((int16x8_t)v30).u32[0];
  *(_DWORD *)((char *)v11 + v35) = vqmovun_s16(v31).u32[0];
  JUMPOUT(0x21604A7E4);
}

void sub_216046FFC(double a1, double a2, double a3, double a4, double a5, double a6, int8x16_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  _DWORD *v11;
  uint64_t v12;
  uint64_t *v13;
  _WORD *v14;
  int v15;
  _DWORD *v16;
  uint64_t v17;
  int v18;
  uint64_t *v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int64x2_t v30;
  int16x8_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64x2_t v40;

  sub_2160835B4(&STACK[0x240], 8u, a11, v15, a1, a2, a3, a4, a5, a6, a7, a8);
  v24.i64[0] = v36;
  v25.i64[0] = v37;
  v26.i64[0] = v38;
  v27.i64[0] = v39;
  if (v34)
  {
    v20.i64[0] = *v19;
    v21.i64[0] = v19[4];
    v22.i64[0] = v19[8];
    v23.i64[0] = v19[12];
    v24 = vaddq_s16(v20, v24);
    v25 = vaddq_s16(v21, v25);
    v26 = vaddq_s16(v22, v26);
    v27 = vaddq_s16(v23, v27);
  }
  *v16 = vqmovun_s16(v24).u32[0];
  *(_DWORD *)((char *)v16 + v35) = vqmovun_s16(v25).u32[0];
  *(_DWORD *)((char *)v16 + v12) = vqmovun_s16(v26).u32[0];
  *(_DWORD *)((char *)v16 + v32) = vqmovun_s16(v27).u32[0];
  v30 = sub_215FF1D58(&v40, v14, v15, v18, v33);
  v31.i64[0] = v40.i64[1];
  v30.i64[0] = v40.i64[0];
  if (v17)
  {
    v28.i64[0] = *v13;
    v29.i64[0] = v13[4];
    v30 = (int64x2_t)vaddq_s16(v28, (int16x8_t)v30);
    v31 = vaddq_s16(v29, v31);
  }
  *v11 = vqmovun_s16((int16x8_t)v30).u32[0];
  *(_DWORD *)((char *)v11 + v35) = vqmovun_s16(v31).u32[0];
  JUMPOUT(0x21604A7E4);
}

void sub_216047010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  _WORD *v6;
  int v7;
  _DWORD *v8;
  uint64_t v9;
  int v10;
  uint64_t *v11;
  int16x8_t v12;
  int16x8_t v13;
  int16x8_t v14;
  int16x8_t v15;
  int16x8_t v16;
  int16x8_t v17;
  int16x8_t v18;
  int16x8_t v19;
  int16x8_t v20;
  int16x8_t v21;
  int64x2_t v22;
  int16x8_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64x2_t v32;

  v18 = sub_216083890(&STACK[0x240], 8u, a3, v7);
  v16.i64[0] = v28;
  v17.i64[0] = v29;
  v18.i64[0] = v30;
  v19.i64[0] = v31;
  if (v26)
  {
    v12.i64[0] = *v11;
    v13.i64[0] = v11[4];
    v14.i64[0] = v11[8];
    v15.i64[0] = v11[12];
    v16 = vaddq_s16(v12, v16);
    v17 = vaddq_s16(v13, v17);
    v18 = vaddq_s16(v14, v18);
    v19 = vaddq_s16(v15, v19);
  }
  *v8 = vqmovun_s16(v16).u32[0];
  *(_DWORD *)((char *)v8 + v27) = vqmovun_s16(v17).u32[0];
  *(_DWORD *)((char *)v8 + v4) = vqmovun_s16(v18).u32[0];
  *(_DWORD *)((char *)v8 + v24) = vqmovun_s16(v19).u32[0];
  v22 = sub_215FF1D58(&v32, v6, v7, v10, v25);
  v23.i64[0] = v32.i64[1];
  v22.i64[0] = v32.i64[0];
  if (v9)
  {
    v20.i64[0] = *v5;
    v21.i64[0] = v5[4];
    v22 = (int64x2_t)vaddq_s16(v20, (int16x8_t)v22);
    v23 = vaddq_s16(v21, v23);
  }
  *v3 = vqmovun_s16((int16x8_t)v22).u32[0];
  *(_DWORD *)((char *)v3 + v27) = vqmovun_s16(v23).u32[0];
  JUMPOUT(0x21604A7E4);
}

void sub_216047024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  _WORD *v6;
  int v7;
  _DWORD *v8;
  uint64_t v9;
  int v10;
  uint64_t *v11;
  int16x8_t v12;
  int16x8_t v13;
  int16x8_t v14;
  int16x8_t v15;
  int16x8_t v16;
  int16x8_t v17;
  int16x8_t v18;
  int16x8_t v19;
  int16x8_t v20;
  int16x8_t v21;
  int64x2_t v22;
  int16x8_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64x2_t v32;

  sub_216083A54(&STACK[0x240], 8u, a3, v7);
  v16.i64[0] = v28;
  v17.i64[0] = v29;
  v18.i64[0] = v30;
  v19.i64[0] = v31;
  if (v26)
  {
    v12.i64[0] = *v11;
    v13.i64[0] = v11[4];
    v14.i64[0] = v11[8];
    v15.i64[0] = v11[12];
    v16 = vaddq_s16(v12, v16);
    v17 = vaddq_s16(v13, v17);
    v18 = vaddq_s16(v14, v18);
    v19 = vaddq_s16(v15, v19);
  }
  *v8 = vqmovun_s16(v16).u32[0];
  *(_DWORD *)((char *)v8 + v27) = vqmovun_s16(v17).u32[0];
  *(_DWORD *)((char *)v8 + v4) = vqmovun_s16(v18).u32[0];
  *(_DWORD *)((char *)v8 + v24) = vqmovun_s16(v19).u32[0];
  v22 = sub_215FF1D58(&v32, v6, v7, v10, v25);
  v23.i64[0] = v32.i64[1];
  v22.i64[0] = v32.i64[0];
  if (v9)
  {
    v20.i64[0] = *v5;
    v21.i64[0] = v5[4];
    v22 = (int64x2_t)vaddq_s16(v20, (int16x8_t)v22);
    v23 = vaddq_s16(v21, v23);
  }
  *v3 = vqmovun_s16((int16x8_t)v22).u32[0];
  *(_DWORD *)((char *)v3 + v27) = vqmovun_s16(v23).u32[0];
  JUMPOUT(0x21604A7E4);
}

void sub_216047038(int8x16_t a1, int8x16_t a2, int8x16_t a3, int8x16_t a4, int8x16_t a5, int64x2_t a6, int64x2_t a7, int64x2_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  _DWORD *v11;
  uint64_t v12;
  uint64_t *v13;
  _WORD *v14;
  int v15;
  _DWORD *v16;
  uint64_t v17;
  int v18;
  uint64_t *v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int64x2_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int64x2_t v30;
  int16x8_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64x2_t v40;

  v26 = sub_2160859A0((int64x2_t *)&STACK[0x240], a11, v15, a1, a2, a3, a4, a5, a6, a7, a8);
  v24.i64[0] = v36;
  v25.i64[0] = v37;
  v26.i64[0] = v38;
  v27.i64[0] = v39;
  if (v34)
  {
    v20.i64[0] = *v19;
    v21.i64[0] = v19[4];
    v22.i64[0] = v19[8];
    v23.i64[0] = v19[12];
    v24 = vaddq_s16(v20, v24);
    v25 = vaddq_s16(v21, v25);
    v26 = (int64x2_t)vaddq_s16(v22, (int16x8_t)v26);
    v27 = vaddq_s16(v23, v27);
  }
  *v16 = vqmovun_s16(v24).u32[0];
  *(_DWORD *)((char *)v16 + v35) = vqmovun_s16(v25).u32[0];
  *(_DWORD *)((char *)v16 + v12) = vqmovun_s16((int16x8_t)v26).u32[0];
  *(_DWORD *)((char *)v16 + v32) = vqmovun_s16(v27).u32[0];
  v30 = sub_215FF1D58(&v40, v14, v15, v18, v33);
  v31.i64[0] = v40.i64[1];
  v30.i64[0] = v40.i64[0];
  if (v17)
  {
    v28.i64[0] = *v13;
    v29.i64[0] = v13[4];
    v30 = (int64x2_t)vaddq_s16(v28, (int16x8_t)v30);
    v31 = vaddq_s16(v29, v31);
  }
  *v11 = vqmovun_s16((int16x8_t)v30).u32[0];
  *(_DWORD *)((char *)v11 + v35) = vqmovun_s16(v31).u32[0];
  JUMPOUT(0x21604A7E4);
}

void sub_21604704C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  _WORD *v6;
  int v7;
  _DWORD *v8;
  uint64_t v9;
  int v10;
  uint64_t *v11;
  int16x8_t v12;
  int16x8_t v13;
  int16x8_t v14;
  int16x8_t v15;
  int16x8_t v16;
  int16x8_t v17;
  int16x8_t v18;
  int16x8_t v19;
  int16x8_t v20;
  int16x8_t v21;
  int64x2_t v22;
  int16x8_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64x2_t v32;

  sub_2160841C4(&STACK[0x240], 8u, a3, v7);
  v16.i64[0] = v28;
  v17.i64[0] = v29;
  v18.i64[0] = v30;
  v19.i64[0] = v31;
  if (v26)
  {
    v12.i64[0] = *v11;
    v13.i64[0] = v11[4];
    v14.i64[0] = v11[8];
    v15.i64[0] = v11[12];
    v16 = vaddq_s16(v12, v16);
    v17 = vaddq_s16(v13, v17);
    v18 = vaddq_s16(v14, v18);
    v19 = vaddq_s16(v15, v19);
  }
  *v8 = vqmovun_s16(v16).u32[0];
  *(_DWORD *)((char *)v8 + v27) = vqmovun_s16(v17).u32[0];
  *(_DWORD *)((char *)v8 + v4) = vqmovun_s16(v18).u32[0];
  *(_DWORD *)((char *)v8 + v24) = vqmovun_s16(v19).u32[0];
  v22 = sub_215FF1D58(&v32, v6, v7, v10, v25);
  v23.i64[0] = v32.i64[1];
  v22.i64[0] = v32.i64[0];
  if (v9)
  {
    v20.i64[0] = *v5;
    v21.i64[0] = v5[4];
    v22 = (int64x2_t)vaddq_s16(v20, (int16x8_t)v22);
    v23 = vaddq_s16(v21, v23);
  }
  *v3 = vqmovun_s16((int16x8_t)v22).u32[0];
  *(_DWORD *)((char *)v3 + v27) = vqmovun_s16(v23).u32[0];
  JUMPOUT(0x21604A7E4);
}

void sub_216047060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  _WORD *v6;
  int v7;
  _DWORD *v8;
  uint64_t v9;
  int v10;
  uint64_t *v11;
  int16x8_t v12;
  int16x8_t v13;
  int16x8_t v14;
  int16x8_t v15;
  int16x8_t v16;
  int16x8_t v17;
  int16x8_t v18;
  int16x8_t v19;
  int16x8_t v20;
  int16x8_t v21;
  int64x2_t v22;
  int16x8_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64x2_t v32;

  v18 = sub_216084934(&STACK[0x240], 8u, a3, v7);
  v16.i64[0] = v28;
  v17.i64[0] = v29;
  v18.i64[0] = v30;
  v19.i64[0] = v31;
  if (v26)
  {
    v12.i64[0] = *v11;
    v13.i64[0] = v11[4];
    v14.i64[0] = v11[8];
    v15.i64[0] = v11[12];
    v16 = vaddq_s16(v12, v16);
    v17 = vaddq_s16(v13, v17);
    v18 = vaddq_s16(v14, v18);
    v19 = vaddq_s16(v15, v19);
  }
  *v8 = vqmovun_s16(v16).u32[0];
  *(_DWORD *)((char *)v8 + v27) = vqmovun_s16(v17).u32[0];
  *(_DWORD *)((char *)v8 + v4) = vqmovun_s16(v18).u32[0];
  *(_DWORD *)((char *)v8 + v24) = vqmovun_s16(v19).u32[0];
  v22 = sub_215FF1D58(&v32, v6, v7, v10, v25);
  v23.i64[0] = v32.i64[1];
  v22.i64[0] = v32.i64[0];
  if (v9)
  {
    v20.i64[0] = *v5;
    v21.i64[0] = v5[4];
    v22 = (int64x2_t)vaddq_s16(v20, (int16x8_t)v22);
    v23 = vaddq_s16(v21, v23);
  }
  *v3 = vqmovun_s16((int16x8_t)v22).u32[0];
  *(_DWORD *)((char *)v3 + v27) = vqmovun_s16(v23).u32[0];
  JUMPOUT(0x21604A7E4);
}

void sub_216047074(int8x16_t a1, double a2, double a3, double a4, double a5, int8x16_t a6, int8x16_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  _DWORD *v11;
  uint64_t v12;
  uint64_t *v13;
  _WORD *v14;
  int v15;
  _DWORD *v16;
  uint64_t v17;
  int v18;
  uint64_t *v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int64x2_t v30;
  int16x8_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64x2_t v40;

  sub_216084B08(&STACK[0x240], 8u, a11, v15, a1, a2, a3, a4, a5, a6, a7, a8);
  v24.i64[0] = v36;
  v25.i64[0] = v37;
  v26.i64[0] = v38;
  v27.i64[0] = v39;
  if (v34)
  {
    v20.i64[0] = *v19;
    v21.i64[0] = v19[4];
    v22.i64[0] = v19[8];
    v23.i64[0] = v19[12];
    v24 = vaddq_s16(v20, v24);
    v25 = vaddq_s16(v21, v25);
    v26 = vaddq_s16(v22, v26);
    v27 = vaddq_s16(v23, v27);
  }
  *v16 = vqmovun_s16(v24).u32[0];
  *(_DWORD *)((char *)v16 + v35) = vqmovun_s16(v25).u32[0];
  *(_DWORD *)((char *)v16 + v12) = vqmovun_s16(v26).u32[0];
  *(_DWORD *)((char *)v16 + v32) = vqmovun_s16(v27).u32[0];
  v30 = sub_215FF1D58(&v40, v14, v15, v18, v33);
  v31.i64[0] = v40.i64[1];
  v30.i64[0] = v40.i64[0];
  if (v17)
  {
    v28.i64[0] = *v13;
    v29.i64[0] = v13[4];
    v30 = (int64x2_t)vaddq_s16(v28, (int16x8_t)v30);
    v31 = vaddq_s16(v29, v31);
  }
  *v11 = vqmovun_s16((int16x8_t)v30).u32[0];
  *(_DWORD *)((char *)v11 + v35) = vqmovun_s16(v31).u32[0];
  JUMPOUT(0x21604A7E4);
}

void sub_216047088(int64x2_t a1, int64x2_t a2, int64x2_t a3, int64x2_t a4, int64x2_t a5, int64x2_t a6, int64x2_t a7, int64x2_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  _DWORD *v11;
  uint64_t v12;
  uint64_t *v13;
  _WORD *v14;
  int v15;
  _DWORD *v16;
  uint64_t v17;
  int v18;
  uint64_t *v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int64x2_t v30;
  int16x8_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64x2_t v40;

  sub_216084DEC((double *)&STACK[0x240], 8u, a11, v15, a1, a2, a3, a4, a5, a6, a7, a8);
  v24.i64[0] = v36;
  v25.i64[0] = v37;
  v26.i64[0] = v38;
  v27.i64[0] = v39;
  if (v34)
  {
    v20.i64[0] = *v19;
    v21.i64[0] = v19[4];
    v22.i64[0] = v19[8];
    v23.i64[0] = v19[12];
    v24 = vaddq_s16(v20, v24);
    v25 = vaddq_s16(v21, v25);
    v26 = vaddq_s16(v22, v26);
    v27 = vaddq_s16(v23, v27);
  }
  *v16 = vqmovun_s16(v24).u32[0];
  *(_DWORD *)((char *)v16 + v35) = vqmovun_s16(v25).u32[0];
  *(_DWORD *)((char *)v16 + v12) = vqmovun_s16(v26).u32[0];
  *(_DWORD *)((char *)v16 + v32) = vqmovun_s16(v27).u32[0];
  v30 = sub_215FF1D58(&v40, v14, v15, v18, v33);
  v31.i64[0] = v40.i64[1];
  v30.i64[0] = v40.i64[0];
  if (v17)
  {
    v28.i64[0] = *v13;
    v29.i64[0] = v13[4];
    v30 = (int64x2_t)vaddq_s16(v28, (int16x8_t)v30);
    v31 = vaddq_s16(v29, v31);
  }
  *v11 = vqmovun_s16((int16x8_t)v30).u32[0];
  *(_DWORD *)((char *)v11 + v35) = vqmovun_s16(v31).u32[0];
  JUMPOUT(0x21604A7E4);
}

void sub_21604709C(double a1, double a2, double a3, double a4, double a5, double a6, int8x16_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v11;

  sub_216085298(&STACK[0x240], 8u, a11, v11, a1, a2, a3, a4, a5, a6, a7, a8);
  JUMPOUT(0x2160470ACLL);
}

void sub_21604717C(uint64_t a1@<X5>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  uint64_t v55;
  uint64_t v56;
  int8x16_t v57;
  int16x8_t v58;
  int16x8_t v59;
  uint64_t v60;
  int8x16_t *v61;
  int8x16_t *v62;
  int16x8_t v63;
  int16x8_t v64;
  int16x8_t v65;
  int16x8_t v66;
  int16x8_t v67;
  int8x16_t *v68;
  int16x8_t v69;
  int16x8_t v70;

  v60 = 0;
  v61 = (int8x16_t *)(v55 + a18 + v56);
  v62 = (int8x16_t *)((char *)v61 + v56 + v56);
  v63 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v62 + v56), v57);
  v64 = (int16x8_t)vzip1q_s8(*v62, v57);
  v65 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v61 + v56), v57);
  v66 = (int16x8_t)vzip1q_s8(*v61, v57);
  v67 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v55 + a18), v57);
  v68 = (int8x16_t *)(a38 + a10 + a55 + a2);
  do
  {
    v69 = v66;
    v66 = v65;
    v65 = v64;
    v64 = v63;
    v63 = (int16x8_t)vzip1q_s8(*v68, v57);
    v70 = vsubq_s16(vshlq_n_s16(vaddq_s16(v66, v65), 2uLL), vaddq_s16(v69, v64));
    *(uint16x8_t *)(a1 + v60) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v67, v70), vshlq_n_s16(v70, 2uLL)), vaddq_s16(v63, v58)), v59))), (uint16x8_t)v66);
    v60 += 16;
    v68 = (int8x16_t *)((char *)v68 + v56);
    v67 = v69;
  }
  while ((_DWORD)v60 != 256);
  __asm { BR              X8 }
}

void sub_216047240(uint64_t a1@<X5>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  uint64_t v55;
  uint64_t v56;
  int8x16_t v57;
  int16x8_t v58;
  int16x8_t v59;
  uint64_t v60;
  int8x16_t *v61;
  int8x16_t *v62;
  int16x8_t v63;
  int16x8_t v64;
  int16x8_t v65;
  int16x8_t v66;
  int16x8_t v67;
  int8x16_t *v68;
  int16x8_t v69;
  char *v70;
  int16x8_t v71;
  uint64_t v72;

  v60 = 0;
  v61 = (int8x16_t *)(v55 + a18 + v56);
  v62 = (int8x16_t *)((char *)v61 + v56 + v56);
  v63 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v62 + v56), v57);
  v64 = (int16x8_t)vzip1q_s8(*v62, v57);
  v65 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v61 + v56), v57);
  v66 = (int16x8_t)vzip1q_s8(*v61, v57);
  v67 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v55 + a18), v57);
  v68 = (int8x16_t *)(a38 + a10 + a55 + a2);
  do
  {
    v69 = v66;
    v66 = v65;
    v65 = v64;
    v64 = v63;
    v70 = (char *)(a1 + v60);
    v63 = (int16x8_t)vzip1q_s8(*v68, v57);
    v71 = vsubq_s16(vshlq_n_s16(vaddq_s16(v66, v65), 2uLL), vaddq_s16(v69, v64));
    *(int8x8_t *)v71.i8 = vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v67, v71), vshlq_n_s16(v71, 2uLL)), vaddq_s16(v63, v58)), v59));
    v72 = v57.i64[0];
    vst2_s8(v70, (int8x8x2_t)v71);
    v60 += 16;
    v68 = (int8x16_t *)((char *)v68 + v56);
    v67 = v69;
  }
  while ((_DWORD)v60 != 256);
  __asm { BR              X8 }
}

void sub_216047304(uint64_t a1@<X5>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  uint64_t v55;
  uint64_t v56;
  int8x16_t v57;
  int16x8_t v58;
  int16x8_t v59;
  uint64_t v60;
  int8x16_t *v61;
  int8x16_t *v62;
  int16x8_t v63;
  int16x8_t v64;
  int16x8_t v65;
  int16x8_t v66;
  int16x8_t v67;
  int8x16_t *v68;
  int16x8_t v69;
  int16x8_t v70;

  v60 = 0;
  v61 = (int8x16_t *)(v55 + a18 + v56);
  v62 = (int8x16_t *)((char *)v61 + v56 + v56);
  v63 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v62 + v56), v57);
  v64 = (int16x8_t)vzip1q_s8(*v62, v57);
  v65 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v61 + v56), v57);
  v66 = (int16x8_t)vzip1q_s8(*v61, v57);
  v67 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v55 + a18), v57);
  v68 = (int8x16_t *)(a38 + a10 + a55 + a2);
  do
  {
    v69 = v66;
    v66 = v65;
    v65 = v64;
    v64 = v63;
    v63 = (int16x8_t)vzip1q_s8(*v68, v57);
    v70 = vsubq_s16(vshlq_n_s16(vaddq_s16(v66, v65), 2uLL), vaddq_s16(v69, v64));
    *(uint16x8_t *)(a1 + v60) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v67, v70), vshlq_n_s16(v70, 2uLL)), vaddq_s16(v63, v58)), v59))), (uint16x8_t)v65);
    v60 += 16;
    v68 = (int8x16_t *)((char *)v68 + v56);
    v67 = v69;
  }
  while ((_DWORD)v60 != 256);
  __asm { BR              X8 }
}

void sub_2160473C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  uint64_t v52;
  uint64_t v53;
  int8x16_t v54;
  int16x8_t v55;
  int16x8_t v56;
  uint64_t v57;
  int8x16_t *v58;
  int8x16_t v59;
  int16x8_t v60;
  int16x8_t v61;

  v57 = 0;
  v58 = (int8x16_t *)(v52 - 2);
  do
  {
    v59 = *v58;
    v58 = (int8x16_t *)((char *)v58 + v53);
    v60 = (int16x8_t)vzip1q_s8(vextq_s8(v59, v59, 2uLL), v54);
    v61 = vsubq_s16(vshlq_n_s16(vaddq_s16(v60, (int16x8_t)vzip1q_s8(vextq_s8(v59, v59, 3uLL), v54)), 2uLL), vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v59, v59, 1uLL), v54), (int16x8_t)vzip1q_s8(vextq_s8(v59, v59, 4uLL), v54)));
    *(uint16x8_t *)(a6 + v57) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vshlq_n_s16(v61, 2uLL), vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v59, v54), (int16x8_t)vzip1q_s8(vextq_s8(v59, v59, 5uLL), v54)), v61)), v55), v56))), (uint16x8_t)v60);
    v57 += 16;
  }
  while ((_DWORD)v57 != 256);
  __asm { BR              X8 }
}

void sub_216047450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  uint64_t v52;

  sub_216082AA8((char *)&STACK[0x240], v52, STACK[0x208], 16, 2, 2u);
  __asm { BR              X8 }
}

void sub_216047690(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35,char *a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,int a42,uint64_t a43,int8x16_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int16x8_t *a51,int a52,int a53,int a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,int a63)
{
  uint64_t a71;
  uint64_t a72;
  uint64_t v72;
  int8x8_t *v73;
  int8x8_t *v74;
  int v75;
  int v76;
  int16x8_t *v77;
  int8x8x2_t *v78;
  int8x8_t *v80;
  uint64_t v81;
  uint64_t v82;
  int8x16_t v83;
  int v84;
  int16x8_t v86;
  uint16x8_t v87;
  int8x8x2_t v89;
  uint64_t v90;
  uint64_t v92;
  int16x8_t v93;
  int16x8_t v94;
  int16x8_t v95;
  int16x8_t v96;
  int16x8_t v97;
  int16x8_t v98;
  int16x8_t v99;
  int16x8_t v100;
  uint64_t v101;
  char *v106;
  unsigned int j;
  int8x8_t *v108;
  unsigned int v111;
  uint8x8_t *v112;
  int8x16_t v114;
  uint8x8_t v115;
  uint8x16_t v118;
  unsigned int i;
  uint64_t v122;
  uint64_t v123;
  int v124;
  int v125;
  int8x16_t v126;
  int8x16_t v127;
  int8x16_t v128;
  int16x8_t v129;
  int8x16_t v130;
  int16x8_t v131;
  int8x16_t v134;
  int16x8_t v135;
  int16x8_t v138;
  int8x16_t v139;
  uint16x8_t *v140;
  uint64_t v141;
  unsigned int v143;
  char *v144;
  int8x8_t *v145;
  _WORD *v148;
  unsigned int v149;
  int8x16_t v152;
  uint8x8_t v153;
  uint8x16_t v154;
  unsigned int v157;
  uint64_t v160;
  uint64_t v161;
  int v162;
  int v163;
  int8x16_t v164;
  int16x8_t v165;
  int8x16_t v166;
  int16x8_t v167;
  int8x16_t v168;
  int16x8_t v169;
  int8x16_t v170;
  int16x8_t v171;
  int8x16_t v174;
  int16x8_t v175;
  int16x8_t v176;
  int16x8_t v179;
  int8x16_t v180;
  char v181;
  uint16x8_t *v182;
  char v184;
  int16x8_t v185;
  int16x8_t v186;
  int16x8_t v187;
  int16x8_t v188;
  int16x8_t v189;
  int16x8_t v190;
  int16x8_t v191;
  int16x8_t v192;
  uint64_t v193;
  uint64_t v194;
  int8x8x2_t v195;
  int8x8x2_t v196;
  int8x8x2_t v197;
  int8x8x2_t v198;

  v84 = a22 + a42 - 16;
  v86.i64[0] = 0x20002000200020;
  v86.i64[1] = 0x20002000200020;
  v87.i64[0] = 0x5000500050005;
  v87.i64[1] = 0x5000500050005;
  _X16 = v73;
  do
  {
    v89 = *v78;
    v78 = (int8x8x2_t *)((char *)v78 + v82);
    v90 = v83.i64[0];
    vst2_s8(a1, v89);
    a1 += 16;
  }
  while (!__CFADD__(v84++, 1));
  v92 = 0;
  do
  {
    v93 = *(int16x8_t *)(a6 + v92 + 48);
    v94 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v92), *(uint16x8_t *)(a6 + v92 + 512));
    v95 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v92 + 16), *(uint16x8_t *)(a6 + v92 + 528));
    v96 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v92 + 32), *(uint16x8_t *)(a6 + v92 + 544));
    v97 = (int16x8_t)vrhaddq_u16((uint16x8_t)v93, *(uint16x8_t *)(a6 + v92 + 560));
    if (a72)
    {
      v98 = *v77;
      v93 = v77[2];
      v99 = v77[4];
      v100 = v77[6];
      v77 += 8;
      v94 = vaddq_s16(v98, v94);
      v95 = vaddq_s16(v93, v95);
      v96 = vaddq_s16(v99, v96);
      v97 = vaddq_s16(v100, v97);
    }
    *v80 = vqmovun_s16(v94);
    *(int8x8_t *)((char *)v80 + v82) = vqmovun_s16(v95);
    *(int8x8_t *)((char *)v80 + v72) = vqmovun_s16(v96);
    *(int8x8_t *)((char *)v80 + a56) = vqmovun_s16(v97);
    v80 = (int8x8_t *)((char *)v80 + a40);
    v92 += 64;
  }
  while ((_DWORD)v92 != 256);
  if (a63 == 64)
  {
    __asm { PRFM            #0, [X26] }
    v106 = (char *)&STACK[0x640];
    v111 = 9;
    v101 = a37;
    do
    {
      v112 = _X26;
      _X26 = (uint8x8_t *)((char *)_X26 + v82);
      __asm { PRFM            #0, [X26] }
      *(uint8x8_t *)v97.i8 = *v112;
      v114 = vextq_s8((int8x16_t)v97, v83, 2uLL);
      v114.i16[3] = v112[1].i16[0];
      v115 = vrhadd_u8(*v112, *(uint8x8_t *)v114.i8);
      v114.i64[0] = v83.i64[0];
      vst2_s8(v106, *(int8x8x2_t *)((char *)&v114 - 8));
      v106 += 16;
      --v111;
    }
    while (v111 > 2);
    *(uint8x8_t *)v97.i8 = *_X26;
    v96 = (int16x8_t)vextq_s8((int8x16_t)v97, v83, 2uLL);
    v96.i16[3] = _X26[1].i16[0];
    v97 = (int16x8_t)vrhaddq_u8((uint8x16_t)v97, (uint8x16_t)v96);
  }
  else
  {
    v101 = a37;
    if (a63 == 4)
    {
      _X8 = (char *)_X26 + v82;
      __asm { PRFM            #0, [X8] }
      *(uint8x8_t *)v118.i8 = *_X26;
      v106 = (char *)&STACK[0x640];
      for (i = 9; i > 2; --i)
      {
        _X10 = (char *)_X26 + a37;
        _X26 = (uint8x8_t *)((char *)_X26 + v82);
        __asm { PRFM            #0, [X10] }
        *(uint8x8_t *)v96.i8 = *_X26;
        v197.val[0] = (int8x8_t)vrhadd_u8(*(uint8x8_t *)v118.i8, *_X26);
        v197.val[1] = (int8x8_t)v83.i64[0];
        vst2_s8(v106, v197);
        v106 += 16;
        v118 = (uint8x16_t)v96;
      }
      *(uint8x8_t *)v118.i8 = *(uint8x8_t *)((char *)_X26 + v82);
      v97 = (int16x8_t)vrhaddq_u8((uint8x16_t)v96, v118);
    }
    else
    {
      if (a63)
      {
        v123 = 0;
        v124 = v75 * a53;
        v125 = v75 * a53 - (8 * a53 + 8 * v75) + 64;
        v126 = v83;
        v126.i32[0] = v125 | (v125 << 16);
        v97 = (int16x8_t)vqtbl1q_s8(v126, a44);
        v127 = v83;
        v127.i32[0] = (8 * a53 - v124) | ((8 * a53 - v124) << 16);
        v96 = (int16x8_t)vqtbl1q_s8(v127, a44);
        v128 = v83;
        v128.i32[0] = (8 * v75 - v124) | ((8 * v75 - v124) << 16);
        v129 = (int16x8_t)vqtbl1q_s8(v128, a44);
        v130 = v83;
        v130.i32[0] = 65537 * v75 * a53;
        v131 = (int16x8_t)vqtbl1q_s8(v130, a44);
        *(int16x8_t *)(v81 - 224) = v97;
        *(int16x8_t *)(v81 - 208) = v96;
        *(int16x8_t *)(v81 - 192) = v129;
        *(int16x8_t *)(v81 - 176) = v131;
        _X9 = (char *)_X26 + v82;
        __asm { PRFM            #0, [X9] }
        *(uint8x8_t *)v93.i8 = *_X26;
        v134 = vqtbl1q_s8((int8x16_t)v93, (int8x16_t)xmmword_2160EE810);
        v134.i16[3] = _X26[1].i16[0];
        v135 = (int16x8_t)vzip1q_s8(v134, v83);
        v93 = (int16x8_t)vzip1q_s8((int8x16_t)v93, v83);
        do
        {
          _X9 = (char *)_X26 + a37;
          _X26 = (uint8x8_t *)((char *)_X26 + v82);
          __asm { PRFM            #0, [X9] }
          v138 = vmlaq_s16(vmulq_s16(v96, v135), v97, v93);
          *(uint8x8_t *)v135.i8 = *_X26;
          v93 = (int16x8_t)vzip1q_s8((int8x16_t)v135, v83);
          v139 = vqtbl1q_s8((int8x16_t)v135, (int8x16_t)xmmword_2160EE810);
          v139.i16[3] = _X26[1].i16[0];
          v135 = (int16x8_t)vzip1q_s8(v139, v83);
          *(uint16x8_t *)((char *)&STACK[0x640] + v123) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v138, v129, v93), v131, v135), v86), v87);
          v123 += 16;
        }
        while ((_DWORD)v123 != 128);
LABEL_23:
        if (a35 == 64)
        {
          __asm { PRFM            #0, [X16] }
          v148 = (_WORD *)(a48 + a28 + a50 + a27 + 8);
          v149 = 9;
          v140 = (uint16x8_t *)a36;
          v144 = a36;
          v141 = a71;
          do
          {
            _X11 = (char *)v148 + v82;
            __asm { PRFUM           #0, [X11,#-8] }
            v97.i64[0] = *((_QWORD *)v148 - 1);
            v152 = vextq_s8((int8x16_t)v97, v83, 2uLL);
            v152.i16[3] = *v148;
            v153 = vrhadd_u8(*(uint8x8_t *)v97.i8, *(uint8x8_t *)v152.i8);
            v152.i64[0] = v83.i64[0];
            vst2_s8(v144, *(int8x8x2_t *)((char *)&v152 - 8));
            v144 += 16;
            v148 = (_WORD *)((char *)v148 + v82);
            --v149;
          }
          while (v149 > 2);
          v97.i64[0] = *((_QWORD *)v148 - 1);
          v154 = (uint8x16_t)vextq_s8((int8x16_t)v97, v83, 2uLL);
          v154.i16[3] = *v148;
          v97.i64[0] = vrhaddq_u8((uint8x16_t)v97, v154).u64[0];
        }
        else
        {
          v140 = (uint16x8_t *)a36;
          v141 = a71;
          if (a35 == 4)
          {
            _X8 = (uint64_t)v73 + v82;
            __asm { PRFM            #0, [X8] }
            *(int8x8_t *)v97.i8 = *v73;
            v157 = 9;
            v144 = a36;
            do
            {
              _X10 = (char *)_X16 + v101;
              __asm { PRFM            #0, [X10] }
              *(int8x8_t *)v96.i8 = *(int8x8_t *)((char *)_X16 + v82);
              v198.val[0] = (int8x8_t)vrhadd_u8(*(uint8x8_t *)v97.i8, *(uint8x8_t *)v96.i8);
              v198.val[1] = (int8x8_t)v83.i64[0];
              vst2_s8(v144, v198);
              v144 += 16;
              --v157;
              _X16 = (int8x8_t *)((char *)_X16 + v82);
              v97 = v96;
            }
            while (v157 > 2);
            *(int8x8_t *)v97.i8 = *(int8x8_t *)((char *)_X16 + v82);
            v97.i64[0] = vrhaddq_u8((uint8x16_t)v96, (uint8x16_t)v97).u64[0];
          }
          else
          {
            if (a35)
            {
              v161 = 0;
              v162 = v76 * a54;
              v163 = v76 * a54 - (8 * a54 + 8 * v76) + 64;
              v164 = v83;
              v164.i32[0] = v163 | (v163 << 16);
              v165 = (int16x8_t)vqtbl1q_s8(v164, a44);
              v166 = v83;
              v166.i32[0] = (8 * a54 - v162) | ((8 * a54 - v162) << 16);
              v167 = (int16x8_t)vqtbl1q_s8(v166, a44);
              v168 = v83;
              v168.i32[0] = (8 * v76 - v162) | ((8 * v76 - v162) << 16);
              v169 = (int16x8_t)vqtbl1q_s8(v168, a44);
              v170 = v83;
              v170.i32[0] = 65537 * v76 * a54;
              v171 = (int16x8_t)vqtbl1q_s8(v170, a44);
              *(int16x8_t *)(v81 - 160) = v165;
              *(int16x8_t *)(v81 - 144) = v167;
              *(int16x8_t *)(v81 - 128) = v169;
              *(int16x8_t *)(v81 - 112) = v171;
              _X9 = (uint64_t)v73 + v82;
              __asm { PRFM            #0, [X9] }
              *(int8x8_t *)v93.i8 = *v73;
              v174 = vqtbl1q_s8((int8x16_t)v93, (int8x16_t)xmmword_2160EE810);
              v174.i16[3] = v73[1].i16[0];
              v175 = (int16x8_t)vzip1q_s8(v174, v83);
              v176 = (int16x8_t)vzip1q_s8((int8x16_t)v93, v83);
              do
              {
                _X9 = (char *)_X16 + v101;
                __asm { PRFM            #0, [X9] }
                v179 = vmlaq_s16(vmulq_s16(v167, v175), v165, v176);
                *(int8x8_t *)v175.i8 = *(int8x8_t *)((char *)_X16 + v82);
                v176 = (int16x8_t)vzip1q_s8((int8x16_t)v175, v83);
                v180 = vqtbl1q_s8((int8x16_t)v175, (int8x16_t)xmmword_2160EE810);
                v180.i16[3] = *(__int16 *)((char *)_X16[1].i16 + v82);
                v175 = (int16x8_t)vzip1q_s8(v180, v83);
                *(uint16x8_t *)&a36[v161] = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v179, v169, v176), v171, v175), v86), v87);
                v161 += 16;
                _X16 = (int8x8_t *)((char *)_X16 + v82);
              }
              while ((_DWORD)v161 != 128);
              goto LABEL_38;
            }
            __asm { PRFM            #0, [X16] }
            v143 = 9;
            v144 = a36;
            do
            {
              v145 = _X16;
              _X16 = (int8x8_t *)((char *)_X16 + v82);
              __asm { PRFM            #0, [X16] }
              v196.val[0] = *v145;
              v196.val[1] = (int8x8_t)v83.i64[0];
              vst2_s8(v144, v196);
              v144 += 16;
              --v143;
            }
            while (v143 > 2);
            *(int8x8_t *)v97.i8 = *_X16;
          }
        }
        v160 = v83.i64[0];
        vst2_s8(v144, (int8x8x2_t)v97);
LABEL_38:
        v181 = 1;
        v182 = v140;
        while (1)
        {
          v184 = v181;
          v185 = (int16x8_t)vrhaddq_u16(v182[-16], *v182);
          v186 = (int16x8_t)vrhaddq_u16(v182[-15], v182[1]);
          v187 = (int16x8_t)vrhaddq_u16(v182[-14], v182[2]);
          v188 = (int16x8_t)vrhaddq_u16(v182[-13], v182[3]);
          if (v141)
          {
            v189 = *a51;
            v190 = a51[2];
            v191 = a51[4];
            v192 = a51[6];
            a51 += 8;
            v185 = vaddq_s16(v189, v185);
            v186 = vaddq_s16(v190, v186);
            v187 = vaddq_s16(v191, v187);
            v188 = vaddq_s16(v192, v188);
          }
          v181 = 0;
          v182 += 4;
          *v74 = vqmovun_s16(v185);
          *(int8x8_t *)((char *)v74 + v82) = vqmovun_s16(v186);
          *(int8x8_t *)((char *)v74 + v72) = vqmovun_s16(v187);
          *(int8x8_t *)((char *)v74 + a56) = vqmovun_s16(v188);
          v74 = (int8x8_t *)((char *)v74 + a40);
          if ((v184 & 1) == 0)
          {
            if (v194 + 1 != v193)
              JUMPOUT(0x216040C30);
            JUMPOUT(0x21604B6F8);
          }
        }
      }
      __asm { PRFM            #0, [X26] }
      v106 = (char *)&STACK[0x640];
      for (j = 9; j > 2; --j)
      {
        v108 = (int8x8_t *)_X26;
        _X26 = (uint8x8_t *)((char *)_X26 + v82);
        __asm { PRFM            #0, [X26] }
        v195.val[0] = *v108;
        v195.val[1] = (int8x8_t)v83.i64[0];
        vst2_s8(v106, v195);
        v106 += 16;
      }
      *(uint8x8_t *)v97.i8 = *_X26;
    }
  }
  v122 = v83.i64[0];
  vst2_s8(v106, (int8x8x2_t)v97);
  goto LABEL_23;
}

void sub_2160476E4(uint64_t a1@<X5>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  uint64_t v55;
  uint64_t v56;
  int8x16_t v57;
  int16x8_t v58;
  int16x8_t v59;
  uint64_t v60;
  int8x16_t *v61;
  int8x16_t *v62;
  int16x8_t v63;
  int16x8_t v64;
  int16x8_t v65;
  int16x8_t v66;
  int16x8_t v67;
  int8x16_t *v68;
  int16x8_t v69;
  int16x8_t v70;

  v60 = 0;
  v61 = (int8x16_t *)(v55 + a18 + v56);
  v62 = (int8x16_t *)((char *)v61 + v56 + v56);
  v63 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v62 + v56), v57);
  v64 = (int16x8_t)vzip1q_s8(*v62, v57);
  v65 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v61 + v56), v57);
  v66 = (int16x8_t)vzip1q_s8(*v61, v57);
  v67 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v55 + a18), v57);
  v68 = (int8x16_t *)(a38 + a10 + a55 + a2);
  do
  {
    v69 = v66;
    v66 = v65;
    v65 = v64;
    v64 = v63;
    v63 = (int16x8_t)vzip1q_s8(*v68, v57);
    v70 = vsubq_s16(vshlq_n_s16(vaddq_s16(v66, v65), 2uLL), vaddq_s16(v69, v64));
    *(uint16x8_t *)(a1 + v60) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v67, v70), vshlq_n_s16(v70, 2uLL)), vaddq_s16(v63, v58)), v59))), (uint16x8_t)v66);
    v60 += 16;
    v68 = (int8x16_t *)((char *)v68 + v56);
    v67 = v69;
  }
  while ((_DWORD)v60 != 64);
  __asm { BR              X8 }
}

void sub_2160477A8(uint64_t a1@<X5>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  uint64_t v55;
  uint64_t v56;
  int8x16_t v57;
  int16x8_t v58;
  int16x8_t v59;
  uint64_t v60;
  int8x16_t *v61;
  int8x16_t *v62;
  int16x8_t v63;
  int16x8_t v64;
  int16x8_t v65;
  int16x8_t v66;
  int16x8_t v67;
  int8x16_t *v68;
  int16x8_t v69;
  char *v70;
  int16x8_t v71;
  uint64_t v72;

  v60 = 0;
  v61 = (int8x16_t *)(v55 + a18 + v56);
  v62 = (int8x16_t *)((char *)v61 + v56 + v56);
  v63 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v62 + v56), v57);
  v64 = (int16x8_t)vzip1q_s8(*v62, v57);
  v65 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v61 + v56), v57);
  v66 = (int16x8_t)vzip1q_s8(*v61, v57);
  v67 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v55 + a18), v57);
  v68 = (int8x16_t *)(a38 + a10 + a55 + a2);
  do
  {
    v69 = v66;
    v66 = v65;
    v65 = v64;
    v64 = v63;
    v70 = (char *)(a1 + v60);
    v63 = (int16x8_t)vzip1q_s8(*v68, v57);
    v71 = vsubq_s16(vshlq_n_s16(vaddq_s16(v66, v65), 2uLL), vaddq_s16(v69, v64));
    *(int8x8_t *)v71.i8 = vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v67, v71), vshlq_n_s16(v71, 2uLL)), vaddq_s16(v63, v58)), v59));
    v72 = v57.i64[0];
    vst2_s8(v70, (int8x8x2_t)v71);
    v60 += 16;
    v68 = (int8x16_t *)((char *)v68 + v56);
    v67 = v69;
  }
  while ((_DWORD)v60 != 64);
  __asm { BR              X8 }
}

void sub_21604786C(uint64_t a1@<X5>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  uint64_t v55;
  uint64_t v56;
  int8x16_t v57;
  int16x8_t v58;
  int16x8_t v59;
  uint64_t v60;
  int8x16_t *v61;
  int8x16_t *v62;
  int16x8_t v63;
  int16x8_t v64;
  int16x8_t v65;
  int16x8_t v66;
  int16x8_t v67;
  int8x16_t *v68;
  int16x8_t v69;
  int16x8_t v70;

  v60 = 0;
  v61 = (int8x16_t *)(v55 + a18 + v56);
  v62 = (int8x16_t *)((char *)v61 + v56 + v56);
  v63 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v62 + v56), v57);
  v64 = (int16x8_t)vzip1q_s8(*v62, v57);
  v65 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v61 + v56), v57);
  v66 = (int16x8_t)vzip1q_s8(*v61, v57);
  v67 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v55 + a18), v57);
  v68 = (int8x16_t *)(a38 + a10 + a55 + a2);
  do
  {
    v69 = v66;
    v66 = v65;
    v65 = v64;
    v64 = v63;
    v63 = (int16x8_t)vzip1q_s8(*v68, v57);
    v70 = vsubq_s16(vshlq_n_s16(vaddq_s16(v66, v65), 2uLL), vaddq_s16(v69, v64));
    *(uint16x8_t *)(a1 + v60) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v67, v70), vshlq_n_s16(v70, 2uLL)), vaddq_s16(v63, v58)), v59))), (uint16x8_t)v65);
    v60 += 16;
    v68 = (int8x16_t *)((char *)v68 + v56);
    v67 = v69;
  }
  while ((_DWORD)v60 != 64);
  __asm { BR              X8 }
}

void sub_216047930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _QWORD *a11)
{
  uint64_t v11;
  unint64_t v12;

  v12 = STACK[0x208];
  sub_216082C54(&STACK[0x240], 0x10u, v11, STACK[0x208]);
  sub_216082C54(a11, 0x10u, v11 + 4, v12);
  JUMPOUT(0x216047B70);
}

void sub_216047B98(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int16x8_t *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint16x8_t *a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,int a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,unsigned int *a48,uint64_t a49,int16x8_t *a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a68;
  uint64_t a69;
  int v69;
  uint64_t v70;
  int v71;
  int8x8_t *v72;
  int16x8_t *v73;
  int8x8x2_t *v74;
  unsigned int *v75;
  int8x8_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  int8x8x2_t v82;
  uint64_t v83;
  int16x8_t v85;
  int16x8_t v86;
  int16x8_t v87;
  int16x8_t v88;
  int16x8_t v89;
  int16x8_t v90;
  uint64_t v91;
  uint64_t v92;

  v80 = v69 + a40 - 4;
  do
  {
    v82 = *v74;
    v74 = (int8x8x2_t *)((char *)v74 + v78);
    v83 = v79;
    vst2_s8(a1, v82);
    a1 += 16;
  }
  while (!__CFADD__(v80++, 1));
  v85 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x240], *(uint16x8_t *)&STACK[0x440]);
  v86 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x250], *(uint16x8_t *)&STACK[0x450]);
  v87 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x260], *(uint16x8_t *)&STACK[0x460]);
  v88 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x270], *(uint16x8_t *)&STACK[0x470]);
  if (a69)
  {
    v85 = vaddq_s16(*v73, v85);
    v86 = vaddq_s16(v73[2], v86);
    v87 = vaddq_s16(v73[4], v87);
    v88 = vaddq_s16(v73[6], v88);
  }
  *v76 = vqmovun_s16(v85);
  *(int8x8_t *)((char *)v76 + v78) = vqmovun_s16(v86);
  *(int8x8_t *)((char *)v76 + v70) = vqmovun_s16(v87);
  *(int8x8_t *)((char *)v76 + a54) = vqmovun_s16(v88);
  sub_215FF1C64((uint16x8_t *)&STACK[0x640], v75, v71, (int16x8_t *)(v77 - 224));
  sub_215FF1C64(a34, a48, v71, a10);
  v89 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x640], *(uint16x8_t *)&STACK[0x740]);
  v90 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x650], *(uint16x8_t *)&STACK[0x750]);
  if (a68)
  {
    v89 = vaddq_s16(*a50, v89);
    v90 = vaddq_s16(a50[2], v90);
  }
  *v72 = vqmovun_s16(v89);
  *(int8x8_t *)((char *)v72 + STACK[0x210]) = vqmovun_s16(v90);
  if (v92 + 1 != v91)
    JUMPOUT(0x216040C30);
  JUMPOUT(0x21604B6F8);
}

void sub_216047BC8(uint64_t a1@<X5>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  uint64_t v55;
  uint64_t v56;
  int8x16_t v57;
  int16x8_t v58;
  int16x8_t v59;
  uint64_t v60;
  int8x16_t *v61;
  int8x16_t *v62;
  int16x8_t v63;
  int16x8_t v64;
  int16x8_t v65;
  int16x8_t v66;
  int16x8_t v67;
  int8x16_t *v68;
  int16x8_t v69;
  int16x8_t v70;

  v60 = 0;
  v61 = (int8x16_t *)(v55 + a18 + v56);
  v62 = (int8x16_t *)((char *)v61 + v56 + v56);
  v63 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v62 + v56), v57);
  v64 = (int16x8_t)vzip1q_s8(*v62, v57);
  v65 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v61 + v56), v57);
  v66 = (int16x8_t)vzip1q_s8(*v61, v57);
  v67 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v55 + a18), v57);
  v68 = (int8x16_t *)(a38 + a10 + a55 + a2);
  do
  {
    v69 = v66;
    v66 = v65;
    v65 = v64;
    v64 = v63;
    v63 = (int16x8_t)vzip1q_s8(*v68, v57);
    v70 = vsubq_s16(vshlq_n_s16(vaddq_s16(v66, v65), 2uLL), vaddq_s16(v69, v64));
    *(uint16x8_t *)(a1 + v60) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v67, v70), vshlq_n_s16(v70, 2uLL)), vaddq_s16(v63, v58)), v59))), (uint16x8_t)v66);
    v60 += 16;
    v68 = (int8x16_t *)((char *)v68 + v56);
    v67 = v69;
  }
  while ((_DWORD)v60 != 128);
  __asm { BR              X8 }
}

void sub_216047C8C(uint64_t a1@<X5>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  uint64_t v55;
  uint64_t v56;
  int8x16_t v57;
  int16x8_t v58;
  int16x8_t v59;
  uint64_t v60;
  int8x16_t *v61;
  int8x16_t *v62;
  int16x8_t v63;
  int16x8_t v64;
  int16x8_t v65;
  int16x8_t v66;
  int16x8_t v67;
  int8x16_t *v68;
  int16x8_t v69;
  char *v70;
  int16x8_t v71;
  uint64_t v72;

  v60 = 0;
  v61 = (int8x16_t *)(v55 + a18 + v56);
  v62 = (int8x16_t *)((char *)v61 + v56 + v56);
  v63 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v62 + v56), v57);
  v64 = (int16x8_t)vzip1q_s8(*v62, v57);
  v65 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v61 + v56), v57);
  v66 = (int16x8_t)vzip1q_s8(*v61, v57);
  v67 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v55 + a18), v57);
  v68 = (int8x16_t *)(a38 + a10 + a55 + a2);
  do
  {
    v69 = v66;
    v66 = v65;
    v65 = v64;
    v64 = v63;
    v70 = (char *)(a1 + v60);
    v63 = (int16x8_t)vzip1q_s8(*v68, v57);
    v71 = vsubq_s16(vshlq_n_s16(vaddq_s16(v66, v65), 2uLL), vaddq_s16(v69, v64));
    *(int8x8_t *)v71.i8 = vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v67, v71), vshlq_n_s16(v71, 2uLL)), vaddq_s16(v63, v58)), v59));
    v72 = v57.i64[0];
    vst2_s8(v70, (int8x8x2_t)v71);
    v60 += 16;
    v68 = (int8x16_t *)((char *)v68 + v56);
    v67 = v69;
  }
  while ((_DWORD)v60 != 128);
  __asm { BR              X8 }
}

void sub_216047D50(uint64_t a1@<X5>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  uint64_t v55;
  uint64_t v56;
  int8x16_t v57;
  int16x8_t v58;
  int16x8_t v59;
  uint64_t v60;
  int8x16_t *v61;
  int8x16_t *v62;
  int16x8_t v63;
  int16x8_t v64;
  int16x8_t v65;
  int16x8_t v66;
  int16x8_t v67;
  int8x16_t *v68;
  int16x8_t v69;
  int16x8_t v70;

  v60 = 0;
  v61 = (int8x16_t *)(v55 + a18 + v56);
  v62 = (int8x16_t *)((char *)v61 + v56 + v56);
  v63 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v62 + v56), v57);
  v64 = (int16x8_t)vzip1q_s8(*v62, v57);
  v65 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v61 + v56), v57);
  v66 = (int16x8_t)vzip1q_s8(*v61, v57);
  v67 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v55 + a18), v57);
  v68 = (int8x16_t *)(a38 + a10 + a55 + a2);
  do
  {
    v69 = v66;
    v66 = v65;
    v65 = v64;
    v64 = v63;
    v63 = (int16x8_t)vzip1q_s8(*v68, v57);
    v70 = vsubq_s16(vshlq_n_s16(vaddq_s16(v66, v65), 2uLL), vaddq_s16(v69, v64));
    *(uint16x8_t *)(a1 + v60) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v67, v70), vshlq_n_s16(v70, 2uLL)), vaddq_s16(v63, v58)), v59))), (uint16x8_t)v65);
    v60 += 16;
    v68 = (int8x16_t *)((char *)v68 + v56);
    v67 = v69;
  }
  while ((_DWORD)v60 != 128);
  __asm { BR              X8 }
}

void sub_216047E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  uint64_t v52;
  uint64_t v53;
  int8x16_t v54;
  int16x8_t v55;
  int16x8_t v56;
  uint64_t v57;
  int8x16_t *v58;
  int8x16_t v59;
  int16x8_t v60;
  int16x8_t v61;

  v57 = 0;
  v58 = (int8x16_t *)(v52 - 2);
  do
  {
    v59 = *v58;
    v58 = (int8x16_t *)((char *)v58 + v53);
    v60 = (int16x8_t)vzip1q_s8(vextq_s8(v59, v59, 2uLL), v54);
    v61 = vsubq_s16(vshlq_n_s16(vaddq_s16(v60, (int16x8_t)vzip1q_s8(vextq_s8(v59, v59, 3uLL), v54)), 2uLL), vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v59, v59, 1uLL), v54), (int16x8_t)vzip1q_s8(vextq_s8(v59, v59, 4uLL), v54)));
    *(uint16x8_t *)(a6 + v57) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vshlq_n_s16(v61, 2uLL), vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v59, v54), (int16x8_t)vzip1q_s8(vextq_s8(v59, v59, 5uLL), v54)), v61)), v55), v56))), (uint16x8_t)v60);
    v57 += 16;
  }
  while ((_DWORD)v57 != 128);
  __asm { BR              X8 }
}

void sub_216047E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  uint64_t v52;

  sub_216082AA8((char *)&STACK[0x240], v52, STACK[0x208], 8, 2, 2u);
  __asm { BR              X8 }
}

void sub_2160480DC(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35,char *a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,int a42,uint64_t a43,int8x16_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int16x8_t *a51,int a52,int a53,int a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,int a63)
{
  uint64_t a71;
  uint64_t a72;
  uint64_t v72;
  int8x8_t *v73;
  int8x8_t *v74;
  int v75;
  int v76;
  int16x8_t *v77;
  int8x8x2_t *v78;
  int8x8_t *v80;
  uint64_t v81;
  uint64_t v82;
  int8x16_t v83;
  int v84;
  int16x8_t v86;
  uint16x8_t v87;
  int8x8x2_t v89;
  uint64_t v90;
  char v92;
  unint64_t *v93;
  char v94;
  int16x8_t v95;
  int16x8_t v96;
  int16x8_t v97;
  int16x8_t v98;
  int16x8_t v99;
  int16x8_t v100;
  int16x8_t v101;
  int16x8_t v102;
  uint64_t v103;
  char *v108;
  unsigned int j;
  int8x8_t *v110;
  unsigned int v113;
  uint8x8_t *v114;
  int8x16_t v116;
  uint8x8_t v117;
  uint8x16_t v120;
  unsigned int i;
  uint64_t v124;
  uint64_t v125;
  int v126;
  int v127;
  int8x16_t v128;
  int8x16_t v129;
  int8x16_t v130;
  int16x8_t v131;
  int8x16_t v132;
  int16x8_t v133;
  int8x16_t v136;
  int16x8_t v137;
  int16x8_t v140;
  int8x16_t v141;
  uint64_t v142;
  unsigned int v144;
  char *v145;
  int8x8_t *v146;
  _WORD *v149;
  unsigned int v150;
  int8x16_t v153;
  uint8x8_t v154;
  uint8x16_t v155;
  unsigned int v158;
  uint64_t v161;
  uint64_t v162;
  int v163;
  int v164;
  int8x16_t v165;
  int16x8_t v166;
  int8x16_t v167;
  int16x8_t v168;
  int8x16_t v169;
  int16x8_t v170;
  int8x16_t v171;
  int16x8_t v172;
  int8x16_t v175;
  int16x8_t v176;
  int16x8_t v177;
  int16x8_t v180;
  int8x16_t v181;
  int16x8_t v182;
  int16x8_t v183;
  int16x8_t v184;
  int8x8x2_t v185;
  int8x8x2_t v186;
  int8x8x2_t v187;
  int8x8x2_t v188;

  v84 = a22 + a42 - 8;
  v86.i64[0] = 0x20002000200020;
  v86.i64[1] = 0x20002000200020;
  v87.i64[0] = 0x5000500050005;
  v87.i64[1] = 0x5000500050005;
  _X15 = v73;
  do
  {
    v89 = *v78;
    v78 = (int8x8x2_t *)((char *)v78 + v82);
    v90 = v83.i64[0];
    vst2_s8(a1, v89);
    a1 += 16;
  }
  while (!__CFADD__(v84++, 1));
  v92 = 1;
  v93 = &STACK[0x240];
  do
  {
    v94 = v92;
    v95 = *((int16x8_t *)v93 + 3);
    v96 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)v93, *((uint16x8_t *)v93 + 32));
    v97 = (int16x8_t)vrhaddq_u16(*((uint16x8_t *)v93 + 1), *((uint16x8_t *)v93 + 33));
    v98 = (int16x8_t)vrhaddq_u16(*((uint16x8_t *)v93 + 2), *((uint16x8_t *)v93 + 34));
    v99 = (int16x8_t)vrhaddq_u16((uint16x8_t)v95, *((uint16x8_t *)v93 + 35));
    if (a72)
    {
      v100 = *v77;
      v95 = v77[2];
      v101 = v77[4];
      v102 = v77[6];
      v77 += 8;
      v96 = vaddq_s16(v100, v96);
      v97 = vaddq_s16(v95, v97);
      v98 = vaddq_s16(v101, v98);
      v99 = vaddq_s16(v102, v99);
    }
    v92 = 0;
    v93 += 8;
    *v80 = vqmovun_s16(v96);
    *(int8x8_t *)((char *)v80 + v82) = vqmovun_s16(v97);
    *(int8x8_t *)((char *)v80 + v72) = vqmovun_s16(v98);
    *(int8x8_t *)((char *)v80 + a56) = vqmovun_s16(v99);
    v80 = (int8x8_t *)((char *)v80 + a40);
  }
  while ((v94 & 1) != 0);
  if (a63 == 64)
  {
    __asm { PRFM            #0, [X26] }
    v108 = (char *)&STACK[0x640];
    v113 = 5;
    v103 = a37;
    do
    {
      v114 = _X26;
      _X26 = (uint8x8_t *)((char *)_X26 + v82);
      __asm { PRFM            #0, [X26] }
      *(uint8x8_t *)v99.i8 = *v114;
      v116 = vextq_s8((int8x16_t)v99, v83, 2uLL);
      v116.i16[3] = v114[1].i16[0];
      v117 = vrhadd_u8(*v114, *(uint8x8_t *)v116.i8);
      v116.i64[0] = v83.i64[0];
      vst2_s8(v108, *(int8x8x2_t *)((char *)&v116 - 8));
      v108 += 16;
      --v113;
    }
    while (v113 > 2);
    *(uint8x8_t *)v99.i8 = *_X26;
    v98 = (int16x8_t)vextq_s8((int8x16_t)v99, v83, 2uLL);
    v98.i16[3] = _X26[1].i16[0];
    v99 = (int16x8_t)vrhaddq_u8((uint8x16_t)v99, (uint8x16_t)v98);
  }
  else
  {
    v103 = a37;
    if (a63 == 4)
    {
      _X8 = (char *)_X26 + v82;
      __asm { PRFM            #0, [X8] }
      *(uint8x8_t *)v120.i8 = *_X26;
      v108 = (char *)&STACK[0x640];
      for (i = 5; i > 2; --i)
      {
        _X10 = (char *)_X26 + a37;
        _X26 = (uint8x8_t *)((char *)_X26 + v82);
        __asm { PRFM            #0, [X10] }
        *(uint8x8_t *)v98.i8 = *_X26;
        v187.val[0] = (int8x8_t)vrhadd_u8(*(uint8x8_t *)v120.i8, *_X26);
        v187.val[1] = (int8x8_t)v83.i64[0];
        vst2_s8(v108, v187);
        v108 += 16;
        v120 = (uint8x16_t)v98;
      }
      *(uint8x8_t *)v120.i8 = *(uint8x8_t *)((char *)_X26 + v82);
      v99 = (int16x8_t)vrhaddq_u8((uint8x16_t)v98, v120);
    }
    else
    {
      if (a63)
      {
        v125 = 0;
        v126 = v75 * a53;
        v127 = v75 * a53 - (8 * a53 + 8 * v75) + 64;
        v128 = v83;
        v128.i32[0] = v127 | (v127 << 16);
        v99 = (int16x8_t)vqtbl1q_s8(v128, a44);
        v129 = v83;
        v129.i32[0] = (8 * a53 - v126) | ((8 * a53 - v126) << 16);
        v98 = (int16x8_t)vqtbl1q_s8(v129, a44);
        v130 = v83;
        v130.i32[0] = (8 * v75 - v126) | ((8 * v75 - v126) << 16);
        v131 = (int16x8_t)vqtbl1q_s8(v130, a44);
        v132 = v83;
        v132.i32[0] = 65537 * v75 * a53;
        v133 = (int16x8_t)vqtbl1q_s8(v132, a44);
        *(int16x8_t *)(v81 - 224) = v99;
        *(int16x8_t *)(v81 - 208) = v98;
        *(int16x8_t *)(v81 - 192) = v131;
        *(int16x8_t *)(v81 - 176) = v133;
        _X9 = (char *)_X26 + v82;
        __asm { PRFM            #0, [X9] }
        *(uint8x8_t *)v95.i8 = *_X26;
        v136 = vqtbl1q_s8((int8x16_t)v95, (int8x16_t)xmmword_2160EE810);
        v136.i16[3] = _X26[1].i16[0];
        v137 = (int16x8_t)vzip1q_s8(v136, v83);
        v95 = (int16x8_t)vzip1q_s8((int8x16_t)v95, v83);
        do
        {
          _X9 = (char *)_X26 + a37;
          _X26 = (uint8x8_t *)((char *)_X26 + v82);
          __asm { PRFM            #0, [X9] }
          v140 = vmlaq_s16(vmulq_s16(v98, v137), v99, v95);
          *(uint8x8_t *)v137.i8 = *_X26;
          v95 = (int16x8_t)vzip1q_s8((int8x16_t)v137, v83);
          v141 = vqtbl1q_s8((int8x16_t)v137, (int8x16_t)xmmword_2160EE810);
          v141.i16[3] = _X26[1].i16[0];
          v137 = (int16x8_t)vzip1q_s8(v141, v83);
          *(uint16x8_t *)((char *)&STACK[0x640] + v125) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v140, v131, v95), v133, v137), v86), v87);
          v125 += 16;
        }
        while ((_DWORD)v125 != 64);
LABEL_23:
        if (a35 == 64)
        {
          __asm { PRFM            #0, [X15] }
          v149 = (_WORD *)(a48 + a28 + a50 + a27 + 8);
          v150 = 5;
          v145 = a36;
          v142 = a71;
          do
          {
            _X11 = (char *)v149 + v82;
            __asm { PRFUM           #0, [X11,#-8] }
            v99.i64[0] = *((_QWORD *)v149 - 1);
            v153 = vextq_s8((int8x16_t)v99, v83, 2uLL);
            v153.i16[3] = *v149;
            v154 = vrhadd_u8(*(uint8x8_t *)v99.i8, *(uint8x8_t *)v153.i8);
            v153.i64[0] = v83.i64[0];
            vst2_s8(v145, *(int8x8x2_t *)((char *)&v153 - 8));
            v145 += 16;
            v149 = (_WORD *)((char *)v149 + v82);
            --v150;
          }
          while (v150 > 2);
          v99.i64[0] = *((_QWORD *)v149 - 1);
          v155 = (uint8x16_t)vextq_s8((int8x16_t)v99, v83, 2uLL);
          v155.i16[3] = *v149;
          v99.i64[0] = vrhaddq_u8((uint8x16_t)v99, v155).u64[0];
        }
        else
        {
          v142 = a71;
          if (a35 == 4)
          {
            _X8 = (uint64_t)v73 + v82;
            __asm { PRFM            #0, [X8] }
            *(int8x8_t *)v99.i8 = *v73;
            v158 = 5;
            v145 = a36;
            do
            {
              _X10 = (char *)_X15 + v103;
              __asm { PRFM            #0, [X10] }
              *(int8x8_t *)v98.i8 = *(int8x8_t *)((char *)_X15 + v82);
              v188.val[0] = (int8x8_t)vrhadd_u8(*(uint8x8_t *)v99.i8, *(uint8x8_t *)v98.i8);
              v188.val[1] = (int8x8_t)v83.i64[0];
              vst2_s8(v145, v188);
              v145 += 16;
              --v158;
              _X15 = (int8x8_t *)((char *)_X15 + v82);
              v99 = v98;
            }
            while (v158 > 2);
            *(int8x8_t *)v99.i8 = *(int8x8_t *)((char *)_X15 + v82);
            v99.i64[0] = vrhaddq_u8((uint8x16_t)v98, (uint8x16_t)v99).u64[0];
          }
          else
          {
            if (a35)
            {
              v162 = 0;
              v163 = v76 * a54;
              v164 = v76 * a54 - (8 * a54 + 8 * v76) + 64;
              v165 = v83;
              v165.i32[0] = v164 | (v164 << 16);
              v166 = (int16x8_t)vqtbl1q_s8(v165, a44);
              v167 = v83;
              v167.i32[0] = (8 * a54 - v163) | ((8 * a54 - v163) << 16);
              v168 = (int16x8_t)vqtbl1q_s8(v167, a44);
              v169 = v83;
              v169.i32[0] = (8 * v76 - v163) | ((8 * v76 - v163) << 16);
              v170 = (int16x8_t)vqtbl1q_s8(v169, a44);
              v171 = v83;
              v171.i32[0] = 65537 * v76 * a54;
              v172 = (int16x8_t)vqtbl1q_s8(v171, a44);
              *(int16x8_t *)(v81 - 160) = v166;
              *(int16x8_t *)(v81 - 144) = v168;
              *(int16x8_t *)(v81 - 128) = v170;
              *(int16x8_t *)(v81 - 112) = v172;
              _X9 = (uint64_t)v73 + v82;
              __asm { PRFM            #0, [X9] }
              *(int8x8_t *)v95.i8 = *v73;
              v175 = vqtbl1q_s8((int8x16_t)v95, (int8x16_t)xmmword_2160EE810);
              v175.i16[3] = v73[1].i16[0];
              v176 = (int16x8_t)vzip1q_s8(v175, v83);
              v177 = (int16x8_t)vzip1q_s8((int8x16_t)v95, v83);
              do
              {
                _X9 = (char *)_X15 + v103;
                __asm { PRFM            #0, [X9] }
                v180 = vmlaq_s16(vmulq_s16(v168, v176), v166, v177);
                *(int8x8_t *)v176.i8 = *(int8x8_t *)((char *)_X15 + v82);
                v177 = (int16x8_t)vzip1q_s8((int8x16_t)v176, v83);
                v181 = vqtbl1q_s8((int8x16_t)v176, (int8x16_t)xmmword_2160EE810);
                v181.i16[3] = *(__int16 *)((char *)_X15[1].i16 + v82);
                v176 = (int16x8_t)vzip1q_s8(v181, v83);
                *(uint16x8_t *)&a36[v162] = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v180, v170, v177), v172, v176), v86), v87);
                v162 += 16;
                _X15 = (int8x8_t *)((char *)_X15 + v82);
              }
              while ((_DWORD)v162 != 64);
LABEL_38:
              v182 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x640], *(uint16x8_t *)&STACK[0x740]);
              v183 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x650], *(uint16x8_t *)&STACK[0x750]);
              v184 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x660], *(uint16x8_t *)&STACK[0x760]);
              if (v142)
              {
                v182 = vaddq_s16(*a51, v182);
                v183 = vaddq_s16(a51[2], v183);
                v184 = vaddq_s16(a51[4], v184);
              }
              *v74 = vqmovun_s16(v182);
              *(int8x8_t *)((char *)v74 + v82) = vqmovun_s16(v183);
              *(int8x8_t *)((char *)v74 + v72) = vqmovun_s16(v184);
              JUMPOUT(0x21604A7E0);
            }
            __asm { PRFM            #0, [X15] }
            v144 = 5;
            v145 = a36;
            do
            {
              v146 = _X15;
              _X15 = (int8x8_t *)((char *)_X15 + v82);
              __asm { PRFM            #0, [X15] }
              v186.val[0] = *v146;
              v186.val[1] = (int8x8_t)v83.i64[0];
              vst2_s8(v145, v186);
              v145 += 16;
              --v144;
            }
            while (v144 > 2);
            *(int8x8_t *)v99.i8 = *_X15;
          }
        }
        v161 = v83.i64[0];
        vst2_s8(v145, (int8x8x2_t)v99);
        goto LABEL_38;
      }
      __asm { PRFM            #0, [X26] }
      v108 = (char *)&STACK[0x640];
      for (j = 5; j > 2; --j)
      {
        v110 = (int8x8_t *)_X26;
        _X26 = (uint8x8_t *)((char *)_X26 + v82);
        __asm { PRFM            #0, [X26] }
        v185.val[0] = *v110;
        v185.val[1] = (int8x8_t)v83.i64[0];
        vst2_s8(v108, v185);
        v108 += 16;
      }
      *(uint8x8_t *)v99.i8 = *_X26;
    }
  }
  v124 = v83.i64[0];
  vst2_s8(v108, (int8x8x2_t)v99);
  goto LABEL_23;
}

void sub_216048130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34,char *a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int8x16_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int16x8_t *a49,int a50,int a51,int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61,uint64_t a62,uint64_t a63)
{
  uint64_t a69;
  uint64_t a70;
  uint64_t v70;
  int8x8_t *v71;
  int8x8_t *v72;
  int v73;
  int v74;
  int16x8_t *v75;
  uint64_t v76;
  int8x8_t *v78;
  uint64_t v79;
  uint64_t v80;
  int8x16_t v81;
  int16x8_t v82;
  int16x8_t v83;
  uint64_t v84;
  int8x16_t *v85;
  int8x16_t *v86;
  int16x8_t v87;
  int16x8_t v88;
  int16x8_t v89;
  int16x8_t v90;
  int16x8_t v91;
  int8x16_t *v92;
  int16x8_t v93;
  uint16x8_t v94;
  int16x8_t v96;
  int16x8_t v97;
  uint64_t v98;
  int16x8_t v99;
  int16x8_t v100;
  int16x8_t v101;
  int16x8_t v102;
  int16x8_t v103;
  int16x8_t v104;
  int16x8_t v105;
  int16x8_t v106;
  uint64_t v107;
  char *v113;
  unsigned int j;
  int8x8_t *v115;
  unsigned int v118;
  uint8x8_t *v119;
  int8x16_t v121;
  uint8x8_t v122;
  uint8x16_t v125;
  unsigned int i;
  uint64_t v129;
  uint64_t v130;
  int v131;
  int v132;
  int8x16_t v133;
  int8x16_t v134;
  int8x16_t v135;
  int16x8_t v136;
  int8x16_t v137;
  int16x8_t v138;
  int8x16_t v141;
  int16x8_t v142;
  int16x8_t v145;
  int8x16_t v146;
  uint16x8_t *v147;
  uint64_t v148;
  unsigned int v150;
  char *v151;
  int8x8_t *v152;
  _WORD *v155;
  unsigned int v156;
  int8x16_t v159;
  uint8x8_t v160;
  uint8x16_t v161;
  unsigned int v164;
  uint64_t v167;
  uint64_t v168;
  int v169;
  int v170;
  int8x16_t v171;
  int16x8_t v172;
  int8x16_t v173;
  int16x8_t v174;
  int8x16_t v175;
  int16x8_t v176;
  int8x16_t v177;
  int16x8_t v178;
  int8x16_t v181;
  int16x8_t v182;
  int16x8_t v183;
  int16x8_t v186;
  int8x16_t v187;
  char v188;
  uint16x8_t *v189;
  char v191;
  int16x8_t v192;
  int16x8_t v193;
  int16x8_t v194;
  int16x8_t v195;
  int16x8_t v196;
  int16x8_t v197;
  int16x8_t v198;
  int16x8_t v199;
  int8x8x2_t v200;
  int8x8x2_t v201;
  int8x8x2_t v202;
  int8x8x2_t v203;

  v84 = 0;
  v85 = (int8x16_t *)(v76 + a24 + v80);
  v86 = (int8x16_t *)((char *)v85 + v80 + v80);
  v87 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v86 + v80), v81);
  v88 = (int16x8_t)vzip1q_s8(*v86, v81);
  v89 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v85 + v80), v81);
  v90 = (int16x8_t)vzip1q_s8(*v85, v81);
  v91 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v76 + a24), v81);
  v92 = (int8x16_t *)(a45 + a16 + a48 + a25);
  v93.i64[0] = 0x20002000200020;
  v93.i64[1] = 0x20002000200020;
  v94.i64[0] = 0x5000500050005;
  v94.i64[1] = 0x5000500050005;
  _X16 = v71;
  do
  {
    v96 = v90;
    v90 = v89;
    v89 = v88;
    v88 = v87;
    v87 = (int16x8_t)vzip1q_s8(*v92, v81);
    v97 = vsubq_s16(vshlq_n_s16(vaddq_s16(v90, v89), 2uLL), vaddq_s16(v96, v88));
    *(uint16x8_t *)(a1 + v84) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v91, v97), vshlq_n_s16(v97, 2uLL)), vaddq_s16(v87, v82)), v83))), (uint16x8_t)v90);
    v84 += 16;
    v92 = (int8x16_t *)((char *)v92 + v80);
    v91 = v96;
  }
  while ((_DWORD)v84 != 256);
  v98 = 0;
  do
  {
    v99 = *(int16x8_t *)(a6 + v98 + 48);
    v100 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v98), *(uint16x8_t *)(a6 + v98 + 512));
    v101 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v98 + 16), *(uint16x8_t *)(a6 + v98 + 528));
    v102 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v98 + 32), *(uint16x8_t *)(a6 + v98 + 544));
    v103 = (int16x8_t)vrhaddq_u16((uint16x8_t)v99, *(uint16x8_t *)(a6 + v98 + 560));
    if (a70)
    {
      v104 = *v75;
      v99 = v75[2];
      v105 = v75[4];
      v106 = v75[6];
      v75 += 8;
      v100 = vaddq_s16(v104, v100);
      v101 = vaddq_s16(v99, v101);
      v102 = vaddq_s16(v105, v102);
      v103 = vaddq_s16(v106, v103);
    }
    *v78 = vqmovun_s16(v100);
    *(int8x8_t *)((char *)v78 + v80) = vqmovun_s16(v101);
    *(int8x8_t *)((char *)v78 + v70) = vqmovun_s16(v102);
    *(int8x8_t *)((char *)v78 + a54) = vqmovun_s16(v103);
    v78 = (int8x8_t *)((char *)v78 + a39);
    v98 += 64;
  }
  while ((_DWORD)v98 != 256);
  if (a61 == 64)
  {
    __asm { PRFM            #0, [X26] }
    v113 = (char *)&STACK[0x640];
    v118 = 9;
    v107 = a36;
    do
    {
      v119 = _X26;
      _X26 = (uint8x8_t *)((char *)_X26 + v80);
      __asm { PRFM            #0, [X26] }
      *(uint8x8_t *)v103.i8 = *v119;
      v121 = vextq_s8((int8x16_t)v103, v81, 2uLL);
      v121.i16[3] = v119[1].i16[0];
      v122 = vrhadd_u8(*v119, *(uint8x8_t *)v121.i8);
      v121.i64[0] = v81.i64[0];
      vst2_s8(v113, *(int8x8x2_t *)((char *)&v121 - 8));
      v113 += 16;
      --v118;
    }
    while (v118 > 2);
    *(uint8x8_t *)v103.i8 = *_X26;
    v102 = (int16x8_t)vextq_s8((int8x16_t)v103, v81, 2uLL);
    v102.i16[3] = _X26[1].i16[0];
    v103 = (int16x8_t)vrhaddq_u8((uint8x16_t)v103, (uint8x16_t)v102);
  }
  else
  {
    v107 = a36;
    if (a61 == 4)
    {
      _X8 = (char *)_X26 + v80;
      __asm { PRFM            #0, [X8] }
      *(uint8x8_t *)v125.i8 = *_X26;
      v113 = (char *)&STACK[0x640];
      for (i = 9; i > 2; --i)
      {
        _X10 = (char *)_X26 + a36;
        _X26 = (uint8x8_t *)((char *)_X26 + v80);
        __asm { PRFM            #0, [X10] }
        *(uint8x8_t *)v102.i8 = *_X26;
        v202.val[0] = (int8x8_t)vrhadd_u8(*(uint8x8_t *)v125.i8, *_X26);
        v202.val[1] = (int8x8_t)v81.i64[0];
        vst2_s8(v113, v202);
        v113 += 16;
        v125 = (uint8x16_t)v102;
      }
      *(uint8x8_t *)v125.i8 = *(uint8x8_t *)((char *)_X26 + v80);
      v103 = (int16x8_t)vrhaddq_u8((uint8x16_t)v102, v125);
    }
    else
    {
      if (a61)
      {
        v130 = 0;
        v131 = v73 * a51;
        v132 = v73 * a51 - (8 * a51 + 8 * v73) + 64;
        v133 = v81;
        v133.i32[0] = v132 | (v132 << 16);
        v103 = (int16x8_t)vqtbl1q_s8(v133, a42);
        v134 = v81;
        v134.i32[0] = (8 * a51 - v131) | ((8 * a51 - v131) << 16);
        v102 = (int16x8_t)vqtbl1q_s8(v134, a42);
        v135 = v81;
        v135.i32[0] = (8 * v73 - v131) | ((8 * v73 - v131) << 16);
        v136 = (int16x8_t)vqtbl1q_s8(v135, a42);
        v137 = v81;
        v137.i32[0] = 65537 * v73 * a51;
        v138 = (int16x8_t)vqtbl1q_s8(v137, a42);
        *(int16x8_t *)(v79 - 224) = v103;
        *(int16x8_t *)(v79 - 208) = v102;
        *(int16x8_t *)(v79 - 192) = v136;
        *(int16x8_t *)(v79 - 176) = v138;
        _X9 = (char *)_X26 + v80;
        __asm { PRFM            #0, [X9] }
        *(uint8x8_t *)v99.i8 = *_X26;
        v141 = vqtbl1q_s8((int8x16_t)v99, (int8x16_t)xmmword_2160EE810);
        v141.i16[3] = _X26[1].i16[0];
        v142 = (int16x8_t)vzip1q_s8(v141, v81);
        v99 = (int16x8_t)vzip1q_s8((int8x16_t)v99, v81);
        do
        {
          _X9 = (char *)_X26 + a36;
          _X26 = (uint8x8_t *)((char *)_X26 + v80);
          __asm { PRFM            #0, [X9] }
          v145 = vmlaq_s16(vmulq_s16(v102, v142), v103, v99);
          *(uint8x8_t *)v142.i8 = *_X26;
          v99 = (int16x8_t)vzip1q_s8((int8x16_t)v142, v81);
          v146 = vqtbl1q_s8((int8x16_t)v142, (int8x16_t)xmmword_2160EE810);
          v146.i16[3] = _X26[1].i16[0];
          v142 = (int16x8_t)vzip1q_s8(v146, v81);
          *(uint16x8_t *)((char *)&STACK[0x640] + v130) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v145, v136, v99), v138, v142), v93), v94);
          v130 += 16;
        }
        while ((_DWORD)v130 != 128);
LABEL_22:
        if (a34 == 64)
        {
          __asm { PRFM            #0, [X16] }
          v155 = (_WORD *)(a46 + a27 + a48 + a26 + 8);
          v156 = 9;
          v147 = (uint16x8_t *)a35;
          v151 = a35;
          v148 = a69;
          do
          {
            _X11 = (char *)v155 + v80;
            __asm { PRFUM           #0, [X11,#-8] }
            v103.i64[0] = *((_QWORD *)v155 - 1);
            v159 = vextq_s8((int8x16_t)v103, v81, 2uLL);
            v159.i16[3] = *v155;
            v160 = vrhadd_u8(*(uint8x8_t *)v103.i8, *(uint8x8_t *)v159.i8);
            v159.i64[0] = v81.i64[0];
            vst2_s8(v151, *(int8x8x2_t *)((char *)&v159 - 8));
            v151 += 16;
            v155 = (_WORD *)((char *)v155 + v80);
            --v156;
          }
          while (v156 > 2);
          v103.i64[0] = *((_QWORD *)v155 - 1);
          v161 = (uint8x16_t)vextq_s8((int8x16_t)v103, v81, 2uLL);
          v161.i16[3] = *v155;
          v103.i64[0] = vrhaddq_u8((uint8x16_t)v103, v161).u64[0];
        }
        else
        {
          v147 = (uint16x8_t *)a35;
          v148 = a69;
          if (a34 == 4)
          {
            _X8 = (uint64_t)v71 + v80;
            __asm { PRFM            #0, [X8] }
            *(int8x8_t *)v103.i8 = *v71;
            v164 = 9;
            v151 = a35;
            do
            {
              _X10 = (char *)_X16 + v107;
              __asm { PRFM            #0, [X10] }
              *(int8x8_t *)v102.i8 = *(int8x8_t *)((char *)_X16 + v80);
              v203.val[0] = (int8x8_t)vrhadd_u8(*(uint8x8_t *)v103.i8, *(uint8x8_t *)v102.i8);
              v203.val[1] = (int8x8_t)v81.i64[0];
              vst2_s8(v151, v203);
              v151 += 16;
              --v164;
              _X16 = (int8x8_t *)((char *)_X16 + v80);
              v103 = v102;
            }
            while (v164 > 2);
            *(int8x8_t *)v103.i8 = *(int8x8_t *)((char *)_X16 + v80);
            v103.i64[0] = vrhaddq_u8((uint8x16_t)v102, (uint8x16_t)v103).u64[0];
          }
          else
          {
            if (a34)
            {
              v168 = 0;
              v169 = v74 * a52;
              v170 = v74 * a52 - (8 * a52 + 8 * v74) + 64;
              v171 = v81;
              v171.i32[0] = v170 | (v170 << 16);
              v172 = (int16x8_t)vqtbl1q_s8(v171, a42);
              v173 = v81;
              v173.i32[0] = (8 * a52 - v169) | ((8 * a52 - v169) << 16);
              v174 = (int16x8_t)vqtbl1q_s8(v173, a42);
              v175 = v81;
              v175.i32[0] = (8 * v74 - v169) | ((8 * v74 - v169) << 16);
              v176 = (int16x8_t)vqtbl1q_s8(v175, a42);
              v177 = v81;
              v177.i32[0] = 65537 * v74 * a52;
              v178 = (int16x8_t)vqtbl1q_s8(v177, a42);
              *(int16x8_t *)(v79 - 160) = v172;
              *(int16x8_t *)(v79 - 144) = v174;
              *(int16x8_t *)(v79 - 128) = v176;
              *(int16x8_t *)(v79 - 112) = v178;
              _X9 = (uint64_t)v71 + v80;
              __asm { PRFM            #0, [X9] }
              *(int8x8_t *)v99.i8 = *v71;
              v181 = vqtbl1q_s8((int8x16_t)v99, (int8x16_t)xmmword_2160EE810);
              v181.i16[3] = v71[1].i16[0];
              v182 = (int16x8_t)vzip1q_s8(v181, v81);
              v183 = (int16x8_t)vzip1q_s8((int8x16_t)v99, v81);
              do
              {
                _X9 = (char *)_X16 + v107;
                __asm { PRFM            #0, [X9] }
                v186 = vmlaq_s16(vmulq_s16(v174, v182), v172, v183);
                *(int8x8_t *)v182.i8 = *(int8x8_t *)((char *)_X16 + v80);
                v183 = (int16x8_t)vzip1q_s8((int8x16_t)v182, v81);
                v187 = vqtbl1q_s8((int8x16_t)v182, (int8x16_t)xmmword_2160EE810);
                v187.i16[3] = *(__int16 *)((char *)_X16[1].i16 + v80);
                v182 = (int16x8_t)vzip1q_s8(v187, v81);
                *(uint16x8_t *)&a35[v168] = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v186, v176, v183), v178, v182), v93), v94);
                v168 += 16;
                _X16 = (int8x8_t *)((char *)_X16 + v80);
              }
              while ((_DWORD)v168 != 128);
              goto LABEL_37;
            }
            __asm { PRFM            #0, [X16] }
            v150 = 9;
            v151 = a35;
            do
            {
              v152 = _X16;
              _X16 = (int8x8_t *)((char *)_X16 + v80);
              __asm { PRFM            #0, [X16] }
              v201.val[0] = *v152;
              v201.val[1] = (int8x8_t)v81.i64[0];
              vst2_s8(v151, v201);
              v151 += 16;
              --v150;
            }
            while (v150 > 2);
            *(int8x8_t *)v103.i8 = *_X16;
          }
        }
        v167 = v81.i64[0];
        vst2_s8(v151, (int8x8x2_t)v103);
LABEL_37:
        v188 = 1;
        v189 = v147;
        while (1)
        {
          v191 = v188;
          v192 = (int16x8_t)vrhaddq_u16(v189[-16], *v189);
          v193 = (int16x8_t)vrhaddq_u16(v189[-15], v189[1]);
          v194 = (int16x8_t)vrhaddq_u16(v189[-14], v189[2]);
          v195 = (int16x8_t)vrhaddq_u16(v189[-13], v189[3]);
          if (v148)
          {
            v196 = *a49;
            v197 = a49[2];
            v198 = a49[4];
            v199 = a49[6];
            a49 += 8;
            v192 = vaddq_s16(v196, v192);
            v193 = vaddq_s16(v197, v193);
            v194 = vaddq_s16(v198, v194);
            v195 = vaddq_s16(v199, v195);
          }
          v188 = 0;
          v189 += 4;
          *v72 = vqmovun_s16(v192);
          *(int8x8_t *)((char *)v72 + v80) = vqmovun_s16(v193);
          *(int8x8_t *)((char *)v72 + v70) = vqmovun_s16(v194);
          *(int8x8_t *)((char *)v72 + a54) = vqmovun_s16(v195);
          v72 = (int8x8_t *)((char *)v72 + a39);
          if ((v191 & 1) == 0)
            JUMPOUT(0x21604A7E4);
        }
      }
      __asm { PRFM            #0, [X26] }
      v113 = (char *)&STACK[0x640];
      for (j = 9; j > 2; --j)
      {
        v115 = (int8x8_t *)_X26;
        _X26 = (uint8x8_t *)((char *)_X26 + v80);
        __asm { PRFM            #0, [X26] }
        v200.val[0] = *v115;
        v200.val[1] = (int8x8_t)v81.i64[0];
        vst2_s8(v113, v200);
        v113 += 16;
      }
      *(uint8x8_t *)v103.i8 = *_X26;
    }
  }
  v129 = v81.i64[0];
  vst2_s8(v113, (int8x8x2_t)v103);
  goto LABEL_22;
}

void sub_216048218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34,char *a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int8x16_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int16x8_t *a49,int a50,int a51,int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61,uint64_t a62,uint64_t a63)
{
  uint64_t a69;
  uint64_t a70;
  uint64_t v70;
  int8x8_t *v71;
  int8x8_t *v72;
  int v73;
  int v74;
  int16x8_t *v75;
  uint64_t v76;
  int8x8_t *v78;
  uint64_t v79;
  uint64_t v80;
  int8x16_t v81;
  int16x8_t v82;
  int16x8_t v83;
  uint64_t v84;
  int8x16_t *v85;
  int8x16_t *v86;
  int16x8_t v87;
  int16x8_t v88;
  int16x8_t v89;
  int16x8_t v90;
  int16x8_t v91;
  int8x16_t *v92;
  int16x8_t v93;
  uint16x8_t v94;
  int16x8_t v96;
  char *v97;
  int16x8_t v98;
  uint64_t v99;
  uint64_t v100;
  int16x8_t v101;
  int16x8_t v102;
  int16x8_t v103;
  int16x8_t v104;
  int16x8_t v105;
  int16x8_t v106;
  int16x8_t v107;
  int16x8_t v108;
  uint64_t v109;
  char *v115;
  unsigned int j;
  int8x8_t *v117;
  unsigned int v120;
  uint8x8_t *v121;
  int8x16_t v123;
  uint8x8_t v124;
  uint8x16_t v127;
  unsigned int i;
  uint64_t v131;
  uint64_t v132;
  int v133;
  int v134;
  int8x16_t v135;
  int8x16_t v136;
  int8x16_t v137;
  int16x8_t v138;
  int8x16_t v139;
  int16x8_t v140;
  int8x16_t v143;
  int16x8_t v144;
  int16x8_t v147;
  int8x16_t v148;
  uint16x8_t *v149;
  uint64_t v150;
  unsigned int v152;
  char *v153;
  int8x8_t *v154;
  _WORD *v157;
  unsigned int v158;
  int8x16_t v161;
  uint8x8_t v162;
  uint8x16_t v163;
  unsigned int v166;
  uint64_t v169;
  uint64_t v170;
  int v171;
  int v172;
  int8x16_t v173;
  int16x8_t v174;
  int8x16_t v175;
  int16x8_t v176;
  int8x16_t v177;
  int16x8_t v178;
  int8x16_t v179;
  int16x8_t v180;
  int8x16_t v183;
  int16x8_t v184;
  int16x8_t v185;
  int16x8_t v188;
  int8x16_t v189;
  char v190;
  uint16x8_t *v191;
  char v193;
  int16x8_t v194;
  int16x8_t v195;
  int16x8_t v196;
  int16x8_t v197;
  int16x8_t v198;
  int16x8_t v199;
  int16x8_t v200;
  int16x8_t v201;
  int8x8x2_t v202;
  int8x8x2_t v203;
  int8x8x2_t v204;
  int8x8x2_t v205;

  v84 = 0;
  v85 = (int8x16_t *)(v76 + a24 + v80);
  v86 = (int8x16_t *)((char *)v85 + v80 + v80);
  v87 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v86 + v80), v81);
  v88 = (int16x8_t)vzip1q_s8(*v86, v81);
  v89 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v85 + v80), v81);
  v90 = (int16x8_t)vzip1q_s8(*v85, v81);
  v91 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v76 + a24), v81);
  v92 = (int8x16_t *)(a45 + a16 + a48 + a25);
  v93.i64[0] = 0x20002000200020;
  v93.i64[1] = 0x20002000200020;
  v94.i64[0] = 0x5000500050005;
  v94.i64[1] = 0x5000500050005;
  _X16 = v71;
  do
  {
    v96 = v90;
    v90 = v89;
    v89 = v88;
    v88 = v87;
    v97 = (char *)(a1 + v84);
    v87 = (int16x8_t)vzip1q_s8(*v92, v81);
    v98 = vsubq_s16(vshlq_n_s16(vaddq_s16(v90, v89), 2uLL), vaddq_s16(v96, v88));
    *(int8x8_t *)v98.i8 = vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v91, v98), vshlq_n_s16(v98, 2uLL)), vaddq_s16(v87, v82)), v83));
    v99 = v81.i64[0];
    vst2_s8(v97, (int8x8x2_t)v98);
    v84 += 16;
    v92 = (int8x16_t *)((char *)v92 + v80);
    v91 = v96;
  }
  while ((_DWORD)v84 != 256);
  v100 = 0;
  do
  {
    v101 = *(int16x8_t *)(a6 + v100 + 48);
    v102 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v100), *(uint16x8_t *)(a6 + v100 + 512));
    v103 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v100 + 16), *(uint16x8_t *)(a6 + v100 + 528));
    v104 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v100 + 32), *(uint16x8_t *)(a6 + v100 + 544));
    v105 = (int16x8_t)vrhaddq_u16((uint16x8_t)v101, *(uint16x8_t *)(a6 + v100 + 560));
    if (a70)
    {
      v106 = *v75;
      v101 = v75[2];
      v107 = v75[4];
      v108 = v75[6];
      v75 += 8;
      v102 = vaddq_s16(v106, v102);
      v103 = vaddq_s16(v101, v103);
      v104 = vaddq_s16(v107, v104);
      v105 = vaddq_s16(v108, v105);
    }
    *v78 = vqmovun_s16(v102);
    *(int8x8_t *)((char *)v78 + v80) = vqmovun_s16(v103);
    *(int8x8_t *)((char *)v78 + v70) = vqmovun_s16(v104);
    *(int8x8_t *)((char *)v78 + a54) = vqmovun_s16(v105);
    v78 = (int8x8_t *)((char *)v78 + a39);
    v100 += 64;
  }
  while ((_DWORD)v100 != 256);
  if (a61 == 64)
  {
    __asm { PRFM            #0, [X26] }
    v115 = (char *)&STACK[0x640];
    v120 = 9;
    v109 = a36;
    do
    {
      v121 = _X26;
      _X26 = (uint8x8_t *)((char *)_X26 + v80);
      __asm { PRFM            #0, [X26] }
      *(uint8x8_t *)v105.i8 = *v121;
      v123 = vextq_s8((int8x16_t)v105, v81, 2uLL);
      v123.i16[3] = v121[1].i16[0];
      v124 = vrhadd_u8(*v121, *(uint8x8_t *)v123.i8);
      v123.i64[0] = v81.i64[0];
      vst2_s8(v115, *(int8x8x2_t *)((char *)&v123 - 8));
      v115 += 16;
      --v120;
    }
    while (v120 > 2);
    *(uint8x8_t *)v105.i8 = *_X26;
    v104 = (int16x8_t)vextq_s8((int8x16_t)v105, v81, 2uLL);
    v104.i16[3] = _X26[1].i16[0];
    v105 = (int16x8_t)vrhaddq_u8((uint8x16_t)v105, (uint8x16_t)v104);
  }
  else
  {
    v109 = a36;
    if (a61 == 4)
    {
      _X8 = (char *)_X26 + v80;
      __asm { PRFM            #0, [X8] }
      *(uint8x8_t *)v127.i8 = *_X26;
      v115 = (char *)&STACK[0x640];
      for (i = 9; i > 2; --i)
      {
        _X10 = (char *)_X26 + a36;
        _X26 = (uint8x8_t *)((char *)_X26 + v80);
        __asm { PRFM            #0, [X10] }
        *(uint8x8_t *)v104.i8 = *_X26;
        v204.val[0] = (int8x8_t)vrhadd_u8(*(uint8x8_t *)v127.i8, *_X26);
        v204.val[1] = (int8x8_t)v81.i64[0];
        vst2_s8(v115, v204);
        v115 += 16;
        v127 = (uint8x16_t)v104;
      }
      *(uint8x8_t *)v127.i8 = *(uint8x8_t *)((char *)_X26 + v80);
      v105 = (int16x8_t)vrhaddq_u8((uint8x16_t)v104, v127);
    }
    else
    {
      if (a61)
      {
        v132 = 0;
        v133 = v73 * a51;
        v134 = v73 * a51 - (8 * a51 + 8 * v73) + 64;
        v135 = v81;
        v135.i32[0] = v134 | (v134 << 16);
        v105 = (int16x8_t)vqtbl1q_s8(v135, a42);
        v136 = v81;
        v136.i32[0] = (8 * a51 - v133) | ((8 * a51 - v133) << 16);
        v104 = (int16x8_t)vqtbl1q_s8(v136, a42);
        v137 = v81;
        v137.i32[0] = (8 * v73 - v133) | ((8 * v73 - v133) << 16);
        v138 = (int16x8_t)vqtbl1q_s8(v137, a42);
        v139 = v81;
        v139.i32[0] = 65537 * v73 * a51;
        v140 = (int16x8_t)vqtbl1q_s8(v139, a42);
        *(int16x8_t *)(v79 - 224) = v105;
        *(int16x8_t *)(v79 - 208) = v104;
        *(int16x8_t *)(v79 - 192) = v138;
        *(int16x8_t *)(v79 - 176) = v140;
        _X9 = (char *)_X26 + v80;
        __asm { PRFM            #0, [X9] }
        *(uint8x8_t *)v101.i8 = *_X26;
        v143 = vqtbl1q_s8((int8x16_t)v101, (int8x16_t)xmmword_2160EE810);
        v143.i16[3] = _X26[1].i16[0];
        v144 = (int16x8_t)vzip1q_s8(v143, v81);
        v101 = (int16x8_t)vzip1q_s8((int8x16_t)v101, v81);
        do
        {
          _X9 = (char *)_X26 + a36;
          _X26 = (uint8x8_t *)((char *)_X26 + v80);
          __asm { PRFM            #0, [X9] }
          v147 = vmlaq_s16(vmulq_s16(v104, v144), v105, v101);
          *(uint8x8_t *)v144.i8 = *_X26;
          v101 = (int16x8_t)vzip1q_s8((int8x16_t)v144, v81);
          v148 = vqtbl1q_s8((int8x16_t)v144, (int8x16_t)xmmword_2160EE810);
          v148.i16[3] = _X26[1].i16[0];
          v144 = (int16x8_t)vzip1q_s8(v148, v81);
          *(uint16x8_t *)((char *)&STACK[0x640] + v132) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v147, v138, v101), v140, v144), v93), v94);
          v132 += 16;
        }
        while ((_DWORD)v132 != 128);
LABEL_22:
        if (a34 == 64)
        {
          __asm { PRFM            #0, [X16] }
          v157 = (_WORD *)(a46 + a27 + a48 + a26 + 8);
          v158 = 9;
          v149 = (uint16x8_t *)a35;
          v153 = a35;
          v150 = a69;
          do
          {
            _X11 = (char *)v157 + v80;
            __asm { PRFUM           #0, [X11,#-8] }
            v105.i64[0] = *((_QWORD *)v157 - 1);
            v161 = vextq_s8((int8x16_t)v105, v81, 2uLL);
            v161.i16[3] = *v157;
            v162 = vrhadd_u8(*(uint8x8_t *)v105.i8, *(uint8x8_t *)v161.i8);
            v161.i64[0] = v81.i64[0];
            vst2_s8(v153, *(int8x8x2_t *)((char *)&v161 - 8));
            v153 += 16;
            v157 = (_WORD *)((char *)v157 + v80);
            --v158;
          }
          while (v158 > 2);
          v105.i64[0] = *((_QWORD *)v157 - 1);
          v163 = (uint8x16_t)vextq_s8((int8x16_t)v105, v81, 2uLL);
          v163.i16[3] = *v157;
          v105.i64[0] = vrhaddq_u8((uint8x16_t)v105, v163).u64[0];
        }
        else
        {
          v149 = (uint16x8_t *)a35;
          v150 = a69;
          if (a34 == 4)
          {
            _X8 = (uint64_t)v71 + v80;
            __asm { PRFM            #0, [X8] }
            *(int8x8_t *)v105.i8 = *v71;
            v166 = 9;
            v153 = a35;
            do
            {
              _X10 = (char *)_X16 + v109;
              __asm { PRFM            #0, [X10] }
              *(int8x8_t *)v104.i8 = *(int8x8_t *)((char *)_X16 + v80);
              v205.val[0] = (int8x8_t)vrhadd_u8(*(uint8x8_t *)v105.i8, *(uint8x8_t *)v104.i8);
              v205.val[1] = (int8x8_t)v81.i64[0];
              vst2_s8(v153, v205);
              v153 += 16;
              --v166;
              _X16 = (int8x8_t *)((char *)_X16 + v80);
              v105 = v104;
            }
            while (v166 > 2);
            *(int8x8_t *)v105.i8 = *(int8x8_t *)((char *)_X16 + v80);
            v105.i64[0] = vrhaddq_u8((uint8x16_t)v104, (uint8x16_t)v105).u64[0];
          }
          else
          {
            if (a34)
            {
              v170 = 0;
              v171 = v74 * a52;
              v172 = v74 * a52 - (8 * a52 + 8 * v74) + 64;
              v173 = v81;
              v173.i32[0] = v172 | (v172 << 16);
              v174 = (int16x8_t)vqtbl1q_s8(v173, a42);
              v175 = v81;
              v175.i32[0] = (8 * a52 - v171) | ((8 * a52 - v171) << 16);
              v176 = (int16x8_t)vqtbl1q_s8(v175, a42);
              v177 = v81;
              v177.i32[0] = (8 * v74 - v171) | ((8 * v74 - v171) << 16);
              v178 = (int16x8_t)vqtbl1q_s8(v177, a42);
              v179 = v81;
              v179.i32[0] = 65537 * v74 * a52;
              v180 = (int16x8_t)vqtbl1q_s8(v179, a42);
              *(int16x8_t *)(v79 - 160) = v174;
              *(int16x8_t *)(v79 - 144) = v176;
              *(int16x8_t *)(v79 - 128) = v178;
              *(int16x8_t *)(v79 - 112) = v180;
              _X9 = (uint64_t)v71 + v80;
              __asm { PRFM            #0, [X9] }
              *(int8x8_t *)v101.i8 = *v71;
              v183 = vqtbl1q_s8((int8x16_t)v101, (int8x16_t)xmmword_2160EE810);
              v183.i16[3] = v71[1].i16[0];
              v184 = (int16x8_t)vzip1q_s8(v183, v81);
              v185 = (int16x8_t)vzip1q_s8((int8x16_t)v101, v81);
              do
              {
                _X9 = (char *)_X16 + v109;
                __asm { PRFM            #0, [X9] }
                v188 = vmlaq_s16(vmulq_s16(v176, v184), v174, v185);
                *(int8x8_t *)v184.i8 = *(int8x8_t *)((char *)_X16 + v80);
                v185 = (int16x8_t)vzip1q_s8((int8x16_t)v184, v81);
                v189 = vqtbl1q_s8((int8x16_t)v184, (int8x16_t)xmmword_2160EE810);
                v189.i16[3] = *(__int16 *)((char *)_X16[1].i16 + v80);
                v184 = (int16x8_t)vzip1q_s8(v189, v81);
                *(uint16x8_t *)&a35[v170] = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v188, v178, v185), v180, v184), v93), v94);
                v170 += 16;
                _X16 = (int8x8_t *)((char *)_X16 + v80);
              }
              while ((_DWORD)v170 != 128);
              goto LABEL_37;
            }
            __asm { PRFM            #0, [X16] }
            v152 = 9;
            v153 = a35;
            do
            {
              v154 = _X16;
              _X16 = (int8x8_t *)((char *)_X16 + v80);
              __asm { PRFM            #0, [X16] }
              v203.val[0] = *v154;
              v203.val[1] = (int8x8_t)v81.i64[0];
              vst2_s8(v153, v203);
              v153 += 16;
              --v152;
            }
            while (v152 > 2);
            *(int8x8_t *)v105.i8 = *_X16;
          }
        }
        v169 = v81.i64[0];
        vst2_s8(v153, (int8x8x2_t)v105);
LABEL_37:
        v190 = 1;
        v191 = v149;
        while (1)
        {
          v193 = v190;
          v194 = (int16x8_t)vrhaddq_u16(v191[-16], *v191);
          v195 = (int16x8_t)vrhaddq_u16(v191[-15], v191[1]);
          v196 = (int16x8_t)vrhaddq_u16(v191[-14], v191[2]);
          v197 = (int16x8_t)vrhaddq_u16(v191[-13], v191[3]);
          if (v150)
          {
            v198 = *a49;
            v199 = a49[2];
            v200 = a49[4];
            v201 = a49[6];
            a49 += 8;
            v194 = vaddq_s16(v198, v194);
            v195 = vaddq_s16(v199, v195);
            v196 = vaddq_s16(v200, v196);
            v197 = vaddq_s16(v201, v197);
          }
          v190 = 0;
          v191 += 4;
          *v72 = vqmovun_s16(v194);
          *(int8x8_t *)((char *)v72 + v80) = vqmovun_s16(v195);
          *(int8x8_t *)((char *)v72 + v70) = vqmovun_s16(v196);
          *(int8x8_t *)((char *)v72 + a54) = vqmovun_s16(v197);
          v72 = (int8x8_t *)((char *)v72 + a39);
          if ((v193 & 1) == 0)
            JUMPOUT(0x21604A7E4);
        }
      }
      __asm { PRFM            #0, [X26] }
      v115 = (char *)&STACK[0x640];
      for (j = 9; j > 2; --j)
      {
        v117 = (int8x8_t *)_X26;
        _X26 = (uint8x8_t *)((char *)_X26 + v80);
        __asm { PRFM            #0, [X26] }
        v202.val[0] = *v117;
        v202.val[1] = (int8x8_t)v81.i64[0];
        vst2_s8(v115, v202);
        v115 += 16;
      }
      *(uint8x8_t *)v105.i8 = *_X26;
    }
  }
  v131 = v81.i64[0];
  vst2_s8(v115, (int8x8x2_t)v105);
  goto LABEL_22;
}

void sub_216048300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34,char *a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int8x16_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int16x8_t *a49,int a50,int a51,int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61,uint64_t a62,uint64_t a63)
{
  uint64_t a69;
  uint64_t a70;
  uint64_t v70;
  int8x8_t *v71;
  int8x8_t *v72;
  int v73;
  int v74;
  int16x8_t *v75;
  uint64_t v76;
  int8x8_t *v78;
  uint64_t v79;
  uint64_t v80;
  int8x16_t v81;
  int16x8_t v82;
  int16x8_t v83;
  uint64_t v84;
  int8x16_t *v85;
  int8x16_t *v86;
  int16x8_t v87;
  int16x8_t v88;
  int16x8_t v89;
  int16x8_t v90;
  int16x8_t v91;
  int8x16_t *v92;
  int16x8_t v93;
  uint16x8_t v94;
  int16x8_t v96;
  int16x8_t v97;
  uint64_t v98;
  int16x8_t v99;
  int16x8_t v100;
  int16x8_t v101;
  int16x8_t v102;
  int16x8_t v103;
  int16x8_t v104;
  int16x8_t v105;
  int16x8_t v106;
  uint64_t v107;
  char *v113;
  unsigned int j;
  int8x8_t *v115;
  unsigned int v118;
  uint8x8_t *v119;
  int8x16_t v121;
  uint8x8_t v122;
  uint8x16_t v125;
  unsigned int i;
  uint64_t v129;
  uint64_t v130;
  int v131;
  int v132;
  int8x16_t v133;
  int8x16_t v134;
  int8x16_t v135;
  int16x8_t v136;
  int8x16_t v137;
  int16x8_t v138;
  int8x16_t v141;
  int16x8_t v142;
  int16x8_t v145;
  int8x16_t v146;
  uint16x8_t *v147;
  uint64_t v148;
  unsigned int v150;
  char *v151;
  int8x8_t *v152;
  _WORD *v155;
  unsigned int v156;
  int8x16_t v159;
  uint8x8_t v160;
  uint8x16_t v161;
  unsigned int v164;
  uint64_t v167;
  uint64_t v168;
  int v169;
  int v170;
  int8x16_t v171;
  int16x8_t v172;
  int8x16_t v173;
  int16x8_t v174;
  int8x16_t v175;
  int16x8_t v176;
  int8x16_t v177;
  int16x8_t v178;
  int8x16_t v181;
  int16x8_t v182;
  int16x8_t v183;
  int16x8_t v186;
  int8x16_t v187;
  char v188;
  uint16x8_t *v189;
  char v191;
  int16x8_t v192;
  int16x8_t v193;
  int16x8_t v194;
  int16x8_t v195;
  int16x8_t v196;
  int16x8_t v197;
  int16x8_t v198;
  int16x8_t v199;
  int8x8x2_t v200;
  int8x8x2_t v201;
  int8x8x2_t v202;
  int8x8x2_t v203;

  v84 = 0;
  v85 = (int8x16_t *)(v76 + a24 + v80);
  v86 = (int8x16_t *)((char *)v85 + v80 + v80);
  v87 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v86 + v80), v81);
  v88 = (int16x8_t)vzip1q_s8(*v86, v81);
  v89 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v85 + v80), v81);
  v90 = (int16x8_t)vzip1q_s8(*v85, v81);
  v91 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v76 + a24), v81);
  v92 = (int8x16_t *)(a45 + a16 + a48 + a25);
  v93.i64[0] = 0x20002000200020;
  v93.i64[1] = 0x20002000200020;
  v94.i64[0] = 0x5000500050005;
  v94.i64[1] = 0x5000500050005;
  _X16 = v71;
  do
  {
    v96 = v90;
    v90 = v89;
    v89 = v88;
    v88 = v87;
    v87 = (int16x8_t)vzip1q_s8(*v92, v81);
    v97 = vsubq_s16(vshlq_n_s16(vaddq_s16(v90, v89), 2uLL), vaddq_s16(v96, v88));
    *(uint16x8_t *)(a1 + v84) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v91, v97), vshlq_n_s16(v97, 2uLL)), vaddq_s16(v87, v82)), v83))), (uint16x8_t)v89);
    v84 += 16;
    v92 = (int8x16_t *)((char *)v92 + v80);
    v91 = v96;
  }
  while ((_DWORD)v84 != 256);
  v98 = 0;
  do
  {
    v99 = *(int16x8_t *)(a6 + v98 + 48);
    v100 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v98), *(uint16x8_t *)(a6 + v98 + 512));
    v101 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v98 + 16), *(uint16x8_t *)(a6 + v98 + 528));
    v102 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v98 + 32), *(uint16x8_t *)(a6 + v98 + 544));
    v103 = (int16x8_t)vrhaddq_u16((uint16x8_t)v99, *(uint16x8_t *)(a6 + v98 + 560));
    if (a70)
    {
      v104 = *v75;
      v99 = v75[2];
      v105 = v75[4];
      v106 = v75[6];
      v75 += 8;
      v100 = vaddq_s16(v104, v100);
      v101 = vaddq_s16(v99, v101);
      v102 = vaddq_s16(v105, v102);
      v103 = vaddq_s16(v106, v103);
    }
    *v78 = vqmovun_s16(v100);
    *(int8x8_t *)((char *)v78 + v80) = vqmovun_s16(v101);
    *(int8x8_t *)((char *)v78 + v70) = vqmovun_s16(v102);
    *(int8x8_t *)((char *)v78 + a54) = vqmovun_s16(v103);
    v78 = (int8x8_t *)((char *)v78 + a39);
    v98 += 64;
  }
  while ((_DWORD)v98 != 256);
  if (a61 == 64)
  {
    __asm { PRFM            #0, [X26] }
    v113 = (char *)&STACK[0x640];
    v118 = 9;
    v107 = a36;
    do
    {
      v119 = _X26;
      _X26 = (uint8x8_t *)((char *)_X26 + v80);
      __asm { PRFM            #0, [X26] }
      *(uint8x8_t *)v103.i8 = *v119;
      v121 = vextq_s8((int8x16_t)v103, v81, 2uLL);
      v121.i16[3] = v119[1].i16[0];
      v122 = vrhadd_u8(*v119, *(uint8x8_t *)v121.i8);
      v121.i64[0] = v81.i64[0];
      vst2_s8(v113, *(int8x8x2_t *)((char *)&v121 - 8));
      v113 += 16;
      --v118;
    }
    while (v118 > 2);
    *(uint8x8_t *)v103.i8 = *_X26;
    v102 = (int16x8_t)vextq_s8((int8x16_t)v103, v81, 2uLL);
    v102.i16[3] = _X26[1].i16[0];
    v103 = (int16x8_t)vrhaddq_u8((uint8x16_t)v103, (uint8x16_t)v102);
  }
  else
  {
    v107 = a36;
    if (a61 == 4)
    {
      _X8 = (char *)_X26 + v80;
      __asm { PRFM            #0, [X8] }
      *(uint8x8_t *)v125.i8 = *_X26;
      v113 = (char *)&STACK[0x640];
      for (i = 9; i > 2; --i)
      {
        _X10 = (char *)_X26 + a36;
        _X26 = (uint8x8_t *)((char *)_X26 + v80);
        __asm { PRFM            #0, [X10] }
        *(uint8x8_t *)v102.i8 = *_X26;
        v202.val[0] = (int8x8_t)vrhadd_u8(*(uint8x8_t *)v125.i8, *_X26);
        v202.val[1] = (int8x8_t)v81.i64[0];
        vst2_s8(v113, v202);
        v113 += 16;
        v125 = (uint8x16_t)v102;
      }
      *(uint8x8_t *)v125.i8 = *(uint8x8_t *)((char *)_X26 + v80);
      v103 = (int16x8_t)vrhaddq_u8((uint8x16_t)v102, v125);
    }
    else
    {
      if (a61)
      {
        v130 = 0;
        v131 = v73 * a51;
        v132 = v73 * a51 - (8 * a51 + 8 * v73) + 64;
        v133 = v81;
        v133.i32[0] = v132 | (v132 << 16);
        v103 = (int16x8_t)vqtbl1q_s8(v133, a42);
        v134 = v81;
        v134.i32[0] = (8 * a51 - v131) | ((8 * a51 - v131) << 16);
        v102 = (int16x8_t)vqtbl1q_s8(v134, a42);
        v135 = v81;
        v135.i32[0] = (8 * v73 - v131) | ((8 * v73 - v131) << 16);
        v136 = (int16x8_t)vqtbl1q_s8(v135, a42);
        v137 = v81;
        v137.i32[0] = 65537 * v73 * a51;
        v138 = (int16x8_t)vqtbl1q_s8(v137, a42);
        *(int16x8_t *)(v79 - 224) = v103;
        *(int16x8_t *)(v79 - 208) = v102;
        *(int16x8_t *)(v79 - 192) = v136;
        *(int16x8_t *)(v79 - 176) = v138;
        _X9 = (char *)_X26 + v80;
        __asm { PRFM            #0, [X9] }
        *(uint8x8_t *)v99.i8 = *_X26;
        v141 = vqtbl1q_s8((int8x16_t)v99, (int8x16_t)xmmword_2160EE810);
        v141.i16[3] = _X26[1].i16[0];
        v142 = (int16x8_t)vzip1q_s8(v141, v81);
        v99 = (int16x8_t)vzip1q_s8((int8x16_t)v99, v81);
        do
        {
          _X9 = (char *)_X26 + a36;
          _X26 = (uint8x8_t *)((char *)_X26 + v80);
          __asm { PRFM            #0, [X9] }
          v145 = vmlaq_s16(vmulq_s16(v102, v142), v103, v99);
          *(uint8x8_t *)v142.i8 = *_X26;
          v99 = (int16x8_t)vzip1q_s8((int8x16_t)v142, v81);
          v146 = vqtbl1q_s8((int8x16_t)v142, (int8x16_t)xmmword_2160EE810);
          v146.i16[3] = _X26[1].i16[0];
          v142 = (int16x8_t)vzip1q_s8(v146, v81);
          *(uint16x8_t *)((char *)&STACK[0x640] + v130) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v145, v136, v99), v138, v142), v93), v94);
          v130 += 16;
        }
        while ((_DWORD)v130 != 128);
LABEL_22:
        if (a34 == 64)
        {
          __asm { PRFM            #0, [X16] }
          v155 = (_WORD *)(a46 + a27 + a48 + a26 + 8);
          v156 = 9;
          v147 = (uint16x8_t *)a35;
          v151 = a35;
          v148 = a69;
          do
          {
            _X11 = (char *)v155 + v80;
            __asm { PRFUM           #0, [X11,#-8] }
            v103.i64[0] = *((_QWORD *)v155 - 1);
            v159 = vextq_s8((int8x16_t)v103, v81, 2uLL);
            v159.i16[3] = *v155;
            v160 = vrhadd_u8(*(uint8x8_t *)v103.i8, *(uint8x8_t *)v159.i8);
            v159.i64[0] = v81.i64[0];
            vst2_s8(v151, *(int8x8x2_t *)((char *)&v159 - 8));
            v151 += 16;
            v155 = (_WORD *)((char *)v155 + v80);
            --v156;
          }
          while (v156 > 2);
          v103.i64[0] = *((_QWORD *)v155 - 1);
          v161 = (uint8x16_t)vextq_s8((int8x16_t)v103, v81, 2uLL);
          v161.i16[3] = *v155;
          v103.i64[0] = vrhaddq_u8((uint8x16_t)v103, v161).u64[0];
        }
        else
        {
          v147 = (uint16x8_t *)a35;
          v148 = a69;
          if (a34 == 4)
          {
            _X8 = (uint64_t)v71 + v80;
            __asm { PRFM            #0, [X8] }
            *(int8x8_t *)v103.i8 = *v71;
            v164 = 9;
            v151 = a35;
            do
            {
              _X10 = (char *)_X16 + v107;
              __asm { PRFM            #0, [X10] }
              *(int8x8_t *)v102.i8 = *(int8x8_t *)((char *)_X16 + v80);
              v203.val[0] = (int8x8_t)vrhadd_u8(*(uint8x8_t *)v103.i8, *(uint8x8_t *)v102.i8);
              v203.val[1] = (int8x8_t)v81.i64[0];
              vst2_s8(v151, v203);
              v151 += 16;
              --v164;
              _X16 = (int8x8_t *)((char *)_X16 + v80);
              v103 = v102;
            }
            while (v164 > 2);
            *(int8x8_t *)v103.i8 = *(int8x8_t *)((char *)_X16 + v80);
            v103.i64[0] = vrhaddq_u8((uint8x16_t)v102, (uint8x16_t)v103).u64[0];
          }
          else
          {
            if (a34)
            {
              v168 = 0;
              v169 = v74 * a52;
              v170 = v74 * a52 - (8 * a52 + 8 * v74) + 64;
              v171 = v81;
              v171.i32[0] = v170 | (v170 << 16);
              v172 = (int16x8_t)vqtbl1q_s8(v171, a42);
              v173 = v81;
              v173.i32[0] = (8 * a52 - v169) | ((8 * a52 - v169) << 16);
              v174 = (int16x8_t)vqtbl1q_s8(v173, a42);
              v175 = v81;
              v175.i32[0] = (8 * v74 - v169) | ((8 * v74 - v169) << 16);
              v176 = (int16x8_t)vqtbl1q_s8(v175, a42);
              v177 = v81;
              v177.i32[0] = 65537 * v74 * a52;
              v178 = (int16x8_t)vqtbl1q_s8(v177, a42);
              *(int16x8_t *)(v79 - 160) = v172;
              *(int16x8_t *)(v79 - 144) = v174;
              *(int16x8_t *)(v79 - 128) = v176;
              *(int16x8_t *)(v79 - 112) = v178;
              _X9 = (uint64_t)v71 + v80;
              __asm { PRFM            #0, [X9] }
              *(int8x8_t *)v99.i8 = *v71;
              v181 = vqtbl1q_s8((int8x16_t)v99, (int8x16_t)xmmword_2160EE810);
              v181.i16[3] = v71[1].i16[0];
              v182 = (int16x8_t)vzip1q_s8(v181, v81);
              v183 = (int16x8_t)vzip1q_s8((int8x16_t)v99, v81);
              do
              {
                _X9 = (char *)_X16 + v107;
                __asm { PRFM            #0, [X9] }
                v186 = vmlaq_s16(vmulq_s16(v174, v182), v172, v183);
                *(int8x8_t *)v182.i8 = *(int8x8_t *)((char *)_X16 + v80);
                v183 = (int16x8_t)vzip1q_s8((int8x16_t)v182, v81);
                v187 = vqtbl1q_s8((int8x16_t)v182, (int8x16_t)xmmword_2160EE810);
                v187.i16[3] = *(__int16 *)((char *)_X16[1].i16 + v80);
                v182 = (int16x8_t)vzip1q_s8(v187, v81);
                *(uint16x8_t *)&a35[v168] = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v186, v176, v183), v178, v182), v93), v94);
                v168 += 16;
                _X16 = (int8x8_t *)((char *)_X16 + v80);
              }
              while ((_DWORD)v168 != 128);
              goto LABEL_37;
            }
            __asm { PRFM            #0, [X16] }
            v150 = 9;
            v151 = a35;
            do
            {
              v152 = _X16;
              _X16 = (int8x8_t *)((char *)_X16 + v80);
              __asm { PRFM            #0, [X16] }
              v201.val[0] = *v152;
              v201.val[1] = (int8x8_t)v81.i64[0];
              vst2_s8(v151, v201);
              v151 += 16;
              --v150;
            }
            while (v150 > 2);
            *(int8x8_t *)v103.i8 = *_X16;
          }
        }
        v167 = v81.i64[0];
        vst2_s8(v151, (int8x8x2_t)v103);
LABEL_37:
        v188 = 1;
        v189 = v147;
        while (1)
        {
          v191 = v188;
          v192 = (int16x8_t)vrhaddq_u16(v189[-16], *v189);
          v193 = (int16x8_t)vrhaddq_u16(v189[-15], v189[1]);
          v194 = (int16x8_t)vrhaddq_u16(v189[-14], v189[2]);
          v195 = (int16x8_t)vrhaddq_u16(v189[-13], v189[3]);
          if (v148)
          {
            v196 = *a49;
            v197 = a49[2];
            v198 = a49[4];
            v199 = a49[6];
            a49 += 8;
            v192 = vaddq_s16(v196, v192);
            v193 = vaddq_s16(v197, v193);
            v194 = vaddq_s16(v198, v194);
            v195 = vaddq_s16(v199, v195);
          }
          v188 = 0;
          v189 += 4;
          *v72 = vqmovun_s16(v192);
          *(int8x8_t *)((char *)v72 + v80) = vqmovun_s16(v193);
          *(int8x8_t *)((char *)v72 + v70) = vqmovun_s16(v194);
          *(int8x8_t *)((char *)v72 + a54) = vqmovun_s16(v195);
          v72 = (int8x8_t *)((char *)v72 + a39);
          if ((v191 & 1) == 0)
            JUMPOUT(0x21604A7E4);
        }
      }
      __asm { PRFM            #0, [X26] }
      v113 = (char *)&STACK[0x640];
      for (j = 9; j > 2; --j)
      {
        v115 = (int8x8_t *)_X26;
        _X26 = (uint8x8_t *)((char *)_X26 + v80);
        __asm { PRFM            #0, [X26] }
        v200.val[0] = *v115;
        v200.val[1] = (int8x8_t)v81.i64[0];
        vst2_s8(v113, v200);
        v113 += 16;
      }
      *(uint8x8_t *)v103.i8 = *_X26;
    }
  }
  v129 = v81.i64[0];
  vst2_s8(v113, (int8x8x2_t)v103);
  goto LABEL_22;
}

void sub_2160483E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34,char *a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int8x16_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int16x8_t *a49,int a50,int a51,int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61,uint64_t a62,uint64_t a63)
{
  uint64_t a69;
  uint64_t a70;
  uint64_t v70;
  int8x8_t *v71;
  int8x8_t *v72;
  int v73;
  int v74;
  int16x8_t *v75;
  uint64_t v76;
  int8x8_t *v78;
  uint64_t v79;
  uint64_t v80;
  int8x16_t v81;
  int16x8_t v82;
  int16x8_t v83;
  uint64_t v84;
  int8x16_t *v85;
  int16x8_t v86;
  uint16x8_t v87;
  int8x16_t v89;
  int16x8_t v90;
  int16x8_t v91;
  uint64_t v92;
  int16x8_t v93;
  int16x8_t v94;
  int16x8_t v95;
  int16x8_t v96;
  int16x8_t v97;
  int16x8_t v98;
  int16x8_t v99;
  int16x8_t v100;
  uint64_t v101;
  char *v107;
  unsigned int j;
  int8x8_t *v109;
  unsigned int v112;
  uint8x8_t *v113;
  int8x16_t v115;
  uint8x8_t v116;
  uint8x16_t v119;
  unsigned int i;
  uint64_t v123;
  uint64_t v124;
  int v125;
  int v126;
  int8x16_t v127;
  int8x16_t v128;
  int8x16_t v129;
  int16x8_t v130;
  int8x16_t v131;
  int16x8_t v132;
  int8x16_t v135;
  int16x8_t v136;
  int16x8_t v139;
  int8x16_t v140;
  uint16x8_t *v141;
  uint64_t v142;
  unsigned int v144;
  char *v145;
  int8x8_t *v146;
  _WORD *v149;
  unsigned int v150;
  int8x16_t v153;
  uint8x8_t v154;
  uint8x16_t v155;
  unsigned int v158;
  uint64_t v161;
  uint64_t v162;
  int v163;
  int v164;
  int8x16_t v165;
  int16x8_t v166;
  int8x16_t v167;
  int16x8_t v168;
  int8x16_t v169;
  int16x8_t v170;
  int8x16_t v171;
  int16x8_t v172;
  int8x16_t v175;
  int16x8_t v176;
  int16x8_t v177;
  int16x8_t v180;
  int8x16_t v181;
  char v182;
  uint16x8_t *v183;
  char v185;
  int16x8_t v186;
  int16x8_t v187;
  int16x8_t v188;
  int16x8_t v189;
  int16x8_t v190;
  int16x8_t v191;
  int16x8_t v192;
  int16x8_t v193;
  int8x8x2_t v194;
  int8x8x2_t v195;
  int8x8x2_t v196;
  int8x8x2_t v197;

  v84 = 0;
  v85 = (int8x16_t *)(v76 - 2);
  v86.i64[0] = 0x20002000200020;
  v86.i64[1] = 0x20002000200020;
  v87.i64[0] = 0x5000500050005;
  v87.i64[1] = 0x5000500050005;
  _X16 = v71;
  do
  {
    v89 = *v85;
    v85 = (int8x16_t *)((char *)v85 + v80);
    v90 = (int16x8_t)vzip1q_s8(vextq_s8(v89, v89, 2uLL), v81);
    v91 = vsubq_s16(vshlq_n_s16(vaddq_s16(v90, (int16x8_t)vzip1q_s8(vextq_s8(v89, v89, 3uLL), v81)), 2uLL), vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v89, v89, 1uLL), v81), (int16x8_t)vzip1q_s8(vextq_s8(v89, v89, 4uLL), v81)));
    *(uint16x8_t *)(a1 + v84) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vshlq_n_s16(v91, 2uLL), vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v89, v81), (int16x8_t)vzip1q_s8(vextq_s8(v89, v89, 5uLL), v81)), v91)), v82), v83))), (uint16x8_t)v90);
    v84 += 16;
  }
  while ((_DWORD)v84 != 256);
  v92 = 0;
  do
  {
    v93 = *(int16x8_t *)(a6 + v92 + 48);
    v94 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v92), *(uint16x8_t *)(a6 + v92 + 512));
    v95 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v92 + 16), *(uint16x8_t *)(a6 + v92 + 528));
    v96 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(a6 + v92 + 32), *(uint16x8_t *)(a6 + v92 + 544));
    v97 = (int16x8_t)vrhaddq_u16((uint16x8_t)v93, *(uint16x8_t *)(a6 + v92 + 560));
    if (a70)
    {
      v98 = *v75;
      v93 = v75[2];
      v99 = v75[4];
      v100 = v75[6];
      v75 += 8;
      v94 = vaddq_s16(v98, v94);
      v95 = vaddq_s16(v93, v95);
      v96 = vaddq_s16(v99, v96);
      v97 = vaddq_s16(v100, v97);
    }
    *v78 = vqmovun_s16(v94);
    *(int8x8_t *)((char *)v78 + v80) = vqmovun_s16(v95);
    *(int8x8_t *)((char *)v78 + v70) = vqmovun_s16(v96);
    *(int8x8_t *)((char *)v78 + a54) = vqmovun_s16(v97);
    v78 = (int8x8_t *)((char *)v78 + a39);
    v92 += 64;
  }
  while ((_DWORD)v92 != 256);
  if (a61 == 64)
  {
    __asm { PRFM            #0, [X26] }
    v107 = (char *)&STACK[0x640];
    v112 = 9;
    v101 = a36;
    do
    {
      v113 = _X26;
      _X26 = (uint8x8_t *)((char *)_X26 + v80);
      __asm { PRFM            #0, [X26] }
      *(uint8x8_t *)v97.i8 = *v113;
      v115 = vextq_s8((int8x16_t)v97, v81, 2uLL);
      v115.i16[3] = v113[1].i16[0];
      v116 = vrhadd_u8(*v113, *(uint8x8_t *)v115.i8);
      v115.i64[0] = v81.i64[0];
      vst2_s8(v107, *(int8x8x2_t *)((char *)&v115 - 8));
      v107 += 16;
      --v112;
    }
    while (v112 > 2);
    *(uint8x8_t *)v97.i8 = *_X26;
    v96 = (int16x8_t)vextq_s8((int8x16_t)v97, v81, 2uLL);
    v96.i16[3] = _X26[1].i16[0];
    v97 = (int16x8_t)vrhaddq_u8((uint8x16_t)v97, (uint8x16_t)v96);
  }
  else
  {
    v101 = a36;
    if (a61 == 4)
    {
      _X8 = (char *)_X26 + v80;
      __asm { PRFM            #0, [X8] }
      *(uint8x8_t *)v119.i8 = *_X26;
      v107 = (char *)&STACK[0x640];
      for (i = 9; i > 2; --i)
      {
        _X10 = (char *)_X26 + a36;
        _X26 = (uint8x8_t *)((char *)_X26 + v80);
        __asm { PRFM            #0, [X10] }
        *(uint8x8_t *)v96.i8 = *_X26;
        v196.val[0] = (int8x8_t)vrhadd_u8(*(uint8x8_t *)v119.i8, *_X26);
        v196.val[1] = (int8x8_t)v81.i64[0];
        vst2_s8(v107, v196);
        v107 += 16;
        v119 = (uint8x16_t)v96;
      }
      *(uint8x8_t *)v119.i8 = *(uint8x8_t *)((char *)_X26 + v80);
      v97 = (int16x8_t)vrhaddq_u8((uint8x16_t)v96, v119);
    }
    else
    {
      if (a61)
      {
        v124 = 0;
        v125 = v73 * a51;
        v126 = v73 * a51 - (8 * a51 + 8 * v73) + 64;
        v127 = v81;
        v127.i32[0] = v126 | (v126 << 16);
        v97 = (int16x8_t)vqtbl1q_s8(v127, a42);
        v128 = v81;
        v128.i32[0] = (8 * a51 - v125) | ((8 * a51 - v125) << 16);
        v96 = (int16x8_t)vqtbl1q_s8(v128, a42);
        v129 = v81;
        v129.i32[0] = (8 * v73 - v125) | ((8 * v73 - v125) << 16);
        v130 = (int16x8_t)vqtbl1q_s8(v129, a42);
        v131 = v81;
        v131.i32[0] = 65537 * v73 * a51;
        v132 = (int16x8_t)vqtbl1q_s8(v131, a42);
        *(int16x8_t *)(v79 - 224) = v97;
        *(int16x8_t *)(v79 - 208) = v96;
        *(int16x8_t *)(v79 - 192) = v130;
        *(int16x8_t *)(v79 - 176) = v132;
        _X9 = (char *)_X26 + v80;
        __asm { PRFM            #0, [X9] }
        *(uint8x8_t *)v93.i8 = *_X26;
        v135 = vqtbl1q_s8((int8x16_t)v93, (int8x16_t)xmmword_2160EE810);
        v135.i16[3] = _X26[1].i16[0];
        v136 = (int16x8_t)vzip1q_s8(v135, v81);
        v93 = (int16x8_t)vzip1q_s8((int8x16_t)v93, v81);
        do
        {
          _X9 = (char *)_X26 + a36;
          _X26 = (uint8x8_t *)((char *)_X26 + v80);
          __asm { PRFM            #0, [X9] }
          v139 = vmlaq_s16(vmulq_s16(v96, v136), v97, v93);
          *(uint8x8_t *)v136.i8 = *_X26;
          v93 = (int16x8_t)vzip1q_s8((int8x16_t)v136, v81);
          v140 = vqtbl1q_s8((int8x16_t)v136, (int8x16_t)xmmword_2160EE810);
          v140.i16[3] = _X26[1].i16[0];
          v136 = (int16x8_t)vzip1q_s8(v140, v81);
          *(uint16x8_t *)((char *)&STACK[0x640] + v124) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v139, v130, v93), v132, v136), v86), v87);
          v124 += 16;
        }
        while ((_DWORD)v124 != 128);
LABEL_22:
        if (a34 == 64)
        {
          __asm { PRFM            #0, [X16] }
          v149 = (_WORD *)(a46 + a27 + a48 + a26 + 8);
          v150 = 9;
          v141 = (uint16x8_t *)a35;
          v145 = a35;
          v142 = a69;
          do
          {
            _X11 = (char *)v149 + v80;
            __asm { PRFUM           #0, [X11,#-8] }
            v97.i64[0] = *((_QWORD *)v149 - 1);
            v153 = vextq_s8((int8x16_t)v97, v81, 2uLL);
            v153.i16[3] = *v149;
            v154 = vrhadd_u8(*(uint8x8_t *)v97.i8, *(uint8x8_t *)v153.i8);
            v153.i64[0] = v81.i64[0];
            vst2_s8(v145, *(int8x8x2_t *)((char *)&v153 - 8));
            v145 += 16;
            v149 = (_WORD *)((char *)v149 + v80);
            --v150;
          }
          while (v150 > 2);
          v97.i64[0] = *((_QWORD *)v149 - 1);
          v155 = (uint8x16_t)vextq_s8((int8x16_t)v97, v81, 2uLL);
          v155.i16[3] = *v149;
          v97.i64[0] = vrhaddq_u8((uint8x16_t)v97, v155).u64[0];
        }
        else
        {
          v141 = (uint16x8_t *)a35;
          v142 = a69;
          if (a34 == 4)
          {
            _X8 = (uint64_t)v71 + v80;
            __asm { PRFM            #0, [X8] }
            *(int8x8_t *)v97.i8 = *v71;
            v158 = 9;
            v145 = a35;
            do
            {
              _X10 = (char *)_X16 + v101;
              __asm { PRFM            #0, [X10] }
              *(int8x8_t *)v96.i8 = *(int8x8_t *)((char *)_X16 + v80);
              v197.val[0] = (int8x8_t)vrhadd_u8(*(uint8x8_t *)v97.i8, *(uint8x8_t *)v96.i8);
              v197.val[1] = (int8x8_t)v81.i64[0];
              vst2_s8(v145, v197);
              v145 += 16;
              --v158;
              _X16 = (int8x8_t *)((char *)_X16 + v80);
              v97 = v96;
            }
            while (v158 > 2);
            *(int8x8_t *)v97.i8 = *(int8x8_t *)((char *)_X16 + v80);
            v97.i64[0] = vrhaddq_u8((uint8x16_t)v96, (uint8x16_t)v97).u64[0];
          }
          else
          {
            if (a34)
            {
              v162 = 0;
              v163 = v74 * a52;
              v164 = v74 * a52 - (8 * a52 + 8 * v74) + 64;
              v165 = v81;
              v165.i32[0] = v164 | (v164 << 16);
              v166 = (int16x8_t)vqtbl1q_s8(v165, a42);
              v167 = v81;
              v167.i32[0] = (8 * a52 - v163) | ((8 * a52 - v163) << 16);
              v168 = (int16x8_t)vqtbl1q_s8(v167, a42);
              v169 = v81;
              v169.i32[0] = (8 * v74 - v163) | ((8 * v74 - v163) << 16);
              v170 = (int16x8_t)vqtbl1q_s8(v169, a42);
              v171 = v81;
              v171.i32[0] = 65537 * v74 * a52;
              v172 = (int16x8_t)vqtbl1q_s8(v171, a42);
              *(int16x8_t *)(v79 - 160) = v166;
              *(int16x8_t *)(v79 - 144) = v168;
              *(int16x8_t *)(v79 - 128) = v170;
              *(int16x8_t *)(v79 - 112) = v172;
              _X9 = (uint64_t)v71 + v80;
              __asm { PRFM            #0, [X9] }
              *(int8x8_t *)v93.i8 = *v71;
              v175 = vqtbl1q_s8((int8x16_t)v93, (int8x16_t)xmmword_2160EE810);
              v175.i16[3] = v71[1].i16[0];
              v176 = (int16x8_t)vzip1q_s8(v175, v81);
              v177 = (int16x8_t)vzip1q_s8((int8x16_t)v93, v81);
              do
              {
                _X9 = (char *)_X16 + v101;
                __asm { PRFM            #0, [X9] }
                v180 = vmlaq_s16(vmulq_s16(v168, v176), v166, v177);
                *(int8x8_t *)v176.i8 = *(int8x8_t *)((char *)_X16 + v80);
                v177 = (int16x8_t)vzip1q_s8((int8x16_t)v176, v81);
                v181 = vqtbl1q_s8((int8x16_t)v176, (int8x16_t)xmmword_2160EE810);
                v181.i16[3] = *(__int16 *)((char *)_X16[1].i16 + v80);
                v176 = (int16x8_t)vzip1q_s8(v181, v81);
                *(uint16x8_t *)&a35[v162] = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v180, v170, v177), v172, v176), v86), v87);
                v162 += 16;
                _X16 = (int8x8_t *)((char *)_X16 + v80);
              }
              while ((_DWORD)v162 != 128);
              goto LABEL_37;
            }
            __asm { PRFM            #0, [X16] }
            v144 = 9;
            v145 = a35;
            do
            {
              v146 = _X16;
              _X16 = (int8x8_t *)((char *)_X16 + v80);
              __asm { PRFM            #0, [X16] }
              v195.val[0] = *v146;
              v195.val[1] = (int8x8_t)v81.i64[0];
              vst2_s8(v145, v195);
              v145 += 16;
              --v144;
            }
            while (v144 > 2);
            *(int8x8_t *)v97.i8 = *_X16;
          }
        }
        v161 = v81.i64[0];
        vst2_s8(v145, (int8x8x2_t)v97);
LABEL_37:
        v182 = 1;
        v183 = v141;
        while (1)
        {
          v185 = v182;
          v186 = (int16x8_t)vrhaddq_u16(v183[-16], *v183);
          v187 = (int16x8_t)vrhaddq_u16(v183[-15], v183[1]);
          v188 = (int16x8_t)vrhaddq_u16(v183[-14], v183[2]);
          v189 = (int16x8_t)vrhaddq_u16(v183[-13], v183[3]);
          if (v142)
          {
            v190 = *a49;
            v191 = a49[2];
            v192 = a49[4];
            v193 = a49[6];
            a49 += 8;
            v186 = vaddq_s16(v190, v186);
            v187 = vaddq_s16(v191, v187);
            v188 = vaddq_s16(v192, v188);
            v189 = vaddq_s16(v193, v189);
          }
          v182 = 0;
          v183 += 4;
          *v72 = vqmovun_s16(v186);
          *(int8x8_t *)((char *)v72 + v80) = vqmovun_s16(v187);
          *(int8x8_t *)((char *)v72 + v70) = vqmovun_s16(v188);
          *(int8x8_t *)((char *)v72 + a54) = vqmovun_s16(v189);
          v72 = (int8x8_t *)((char *)v72 + a39);
          if ((v185 & 1) == 0)
            JUMPOUT(0x21604A7E4);
        }
      }
      __asm { PRFM            #0, [X26] }
      v107 = (char *)&STACK[0x640];
      for (j = 9; j > 2; --j)
      {
        v109 = (int8x8_t *)_X26;
        _X26 = (uint8x8_t *)((char *)_X26 + v80);
        __asm { PRFM            #0, [X26] }
        v194.val[0] = *v109;
        v194.val[1] = (int8x8_t)v81.i64[0];
        vst2_s8(v107, v194);
        v107 += 16;
      }
      *(uint8x8_t *)v97.i8 = *_X26;
    }
  }
  v123 = v81.i64[0];
  vst2_s8(v107, (int8x8x2_t)v97);
  goto LABEL_22;
}

void sub_216048490(char *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34,char *a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int8x16_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int16x8_t *a49,int a50,int a51,int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61,uint64_t a62,uint64_t a63)
{
  uint64_t a69;
  uint64_t a70;
  uint64_t v70;
  int8x8_t *v71;
  int8x8_t *v72;
  int v73;
  int v74;
  int16x8_t *v75;
  uint64_t v76;
  int8x8_t *v78;
  uint64_t v79;
  int8x16_t v80;
  unint64_t v81;
  int16x8_t v82;
  uint16x8_t v83;
  uint64_t v85;
  int16x8_t v86;
  int16x8_t v87;
  int16x8_t v88;
  int16x8_t v89;
  int16x8_t v90;
  int16x8_t v91;
  int16x8_t v92;
  int16x8_t v93;
  uint64_t v94;
  char *v100;
  unsigned int j;
  int8x8_t *v102;
  unsigned int v105;
  uint8x8_t *v106;
  int8x16_t v108;
  uint8x8_t v109;
  uint8x16_t v112;
  unsigned int i;
  uint64_t v116;
  uint64_t v117;
  int v118;
  int v119;
  int8x16_t v120;
  int8x16_t v121;
  int8x16_t v122;
  int16x8_t v123;
  int8x16_t v124;
  int16x8_t v125;
  int8x16_t v128;
  int16x8_t v129;
  int16x8_t v132;
  int8x16_t v133;
  uint16x8_t *v134;
  uint64_t v135;
  unsigned int v137;
  char *v138;
  int8x8_t *v139;
  _WORD *v142;
  unsigned int v143;
  int8x16_t v146;
  uint8x8_t v147;
  uint8x16_t v148;
  unsigned int v151;
  uint64_t v154;
  uint64_t v155;
  int v156;
  int v157;
  int8x16_t v158;
  int16x8_t v159;
  int8x16_t v160;
  int16x8_t v161;
  int8x16_t v162;
  int16x8_t v163;
  int8x16_t v164;
  int16x8_t v165;
  int8x16_t v168;
  int16x8_t v169;
  int16x8_t v170;
  int16x8_t v173;
  int8x16_t v174;
  char v175;
  uint16x8_t *v176;
  char v178;
  int16x8_t v179;
  int16x8_t v180;
  int16x8_t v181;
  int16x8_t v182;
  int16x8_t v183;
  int16x8_t v184;
  int16x8_t v185;
  int16x8_t v186;
  int8x8x2_t v187;
  int8x8x2_t v188;
  int8x8x2_t v189;
  int8x8x2_t v190;

  sub_216082AA8(a1, v76, a4, 16, 2, 2u);
  v80 = *(int8x16_t *)&STACK[0x230];
  v81 = STACK[0x210];
  v82.i64[0] = 0x20002000200020;
  v82.i64[1] = 0x20002000200020;
  v83.i64[0] = 0x5000500050005;
  v83.i64[1] = 0x5000500050005;
  _X16 = v71;
  v85 = 0;
  do
  {
    v86 = *(int16x8_t *)((char *)&STACK[0x240] + v85 + 48);
    v87 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x240] + v85), *(uint16x8_t *)((char *)&STACK[0x240] + v85 + 512));
    v88 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x240] + v85 + 16), *(uint16x8_t *)((char *)&STACK[0x240] + v85 + 528));
    v89 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)((char *)&STACK[0x240] + v85 + 32), *(uint16x8_t *)((char *)&STACK[0x240] + v85 + 544));
    v90 = (int16x8_t)vrhaddq_u16((uint16x8_t)v86, *(uint16x8_t *)((char *)&STACK[0x240] + v85 + 560));
    if (a70)
    {
      v91 = *v75;
      v86 = v75[2];
      v92 = v75[4];
      v93 = v75[6];
      v75 += 8;
      v87 = vaddq_s16(v91, v87);
      v88 = vaddq_s16(v86, v88);
      v89 = vaddq_s16(v92, v89);
      v90 = vaddq_s16(v93, v90);
    }
    *v78 = vqmovun_s16(v87);
    *(int8x8_t *)((char *)v78 + v81) = vqmovun_s16(v88);
    *(int8x8_t *)((char *)v78 + v70) = vqmovun_s16(v89);
    *(int8x8_t *)((char *)v78 + a54) = vqmovun_s16(v90);
    v78 = (int8x8_t *)((char *)v78 + a39);
    v85 += 64;
  }
  while ((_DWORD)v85 != 256);
  if (a61 == 64)
  {
    __asm { PRFM            #0, [X26] }
    v100 = (char *)&STACK[0x640];
    v105 = 9;
    v94 = a36;
    do
    {
      v106 = _X26;
      _X26 = (uint8x8_t *)((char *)_X26 + v81);
      __asm { PRFM            #0, [X26] }
      *(uint8x8_t *)v90.i8 = *v106;
      v108 = vextq_s8((int8x16_t)v90, v80, 2uLL);
      v108.i16[3] = v106[1].i16[0];
      v109 = vrhadd_u8(*v106, *(uint8x8_t *)v108.i8);
      v108.i64[0] = v80.i64[0];
      vst2_s8(v100, *(int8x8x2_t *)((char *)&v108 - 8));
      v100 += 16;
      --v105;
    }
    while (v105 > 2);
    *(uint8x8_t *)v90.i8 = *_X26;
    v89 = (int16x8_t)vextq_s8((int8x16_t)v90, v80, 2uLL);
    v89.i16[3] = _X26[1].i16[0];
    v90 = (int16x8_t)vrhaddq_u8((uint8x16_t)v90, (uint8x16_t)v89);
  }
  else
  {
    v94 = a36;
    if (a61 == 4)
    {
      _X8 = (char *)_X26 + v81;
      __asm { PRFM            #0, [X8] }
      *(uint8x8_t *)v112.i8 = *_X26;
      v100 = (char *)&STACK[0x640];
      for (i = 9; i > 2; --i)
      {
        _X10 = (char *)_X26 + a36;
        _X26 = (uint8x8_t *)((char *)_X26 + v81);
        __asm { PRFM            #0, [X10] }
        *(uint8x8_t *)v89.i8 = *_X26;
        v189.val[0] = (int8x8_t)vrhadd_u8(*(uint8x8_t *)v112.i8, *_X26);
        v189.val[1] = (int8x8_t)v80.i64[0];
        vst2_s8(v100, v189);
        v100 += 16;
        v112 = (uint8x16_t)v89;
      }
      *(uint8x8_t *)v112.i8 = *(uint8x8_t *)((char *)_X26 + v81);
      v90 = (int16x8_t)vrhaddq_u8((uint8x16_t)v89, v112);
    }
    else
    {
      if (a61)
      {
        v117 = 0;
        v118 = v73 * a51;
        v119 = v73 * a51 - (8 * a51 + 8 * v73) + 64;
        v120 = v80;
        v120.i32[0] = v119 | (v119 << 16);
        v90 = (int16x8_t)vqtbl1q_s8(v120, a42);
        v121 = v80;
        v121.i32[0] = (8 * a51 - v118) | ((8 * a51 - v118) << 16);
        v89 = (int16x8_t)vqtbl1q_s8(v121, a42);
        v122 = v80;
        v122.i32[0] = (8 * v73 - v118) | ((8 * v73 - v118) << 16);
        v123 = (int16x8_t)vqtbl1q_s8(v122, a42);
        v124 = v80;
        v124.i32[0] = 65537 * v73 * a51;
        v125 = (int16x8_t)vqtbl1q_s8(v124, a42);
        *(int16x8_t *)(v79 - 224) = v90;
        *(int16x8_t *)(v79 - 208) = v89;
        *(int16x8_t *)(v79 - 192) = v123;
        *(int16x8_t *)(v79 - 176) = v125;
        _X9 = (char *)_X26 + v81;
        __asm { PRFM            #0, [X9] }
        *(uint8x8_t *)v86.i8 = *_X26;
        v128 = vqtbl1q_s8((int8x16_t)v86, (int8x16_t)xmmword_2160EE810);
        v128.i16[3] = _X26[1].i16[0];
        v129 = (int16x8_t)vzip1q_s8(v128, v80);
        v86 = (int16x8_t)vzip1q_s8((int8x16_t)v86, v80);
        do
        {
          _X9 = (char *)_X26 + a36;
          _X26 = (uint8x8_t *)((char *)_X26 + v81);
          __asm { PRFM            #0, [X9] }
          v132 = vmlaq_s16(vmulq_s16(v89, v129), v90, v86);
          *(uint8x8_t *)v129.i8 = *_X26;
          v86 = (int16x8_t)vzip1q_s8((int8x16_t)v129, v80);
          v133 = vqtbl1q_s8((int8x16_t)v129, (int8x16_t)xmmword_2160EE810);
          v133.i16[3] = _X26[1].i16[0];
          v129 = (int16x8_t)vzip1q_s8(v133, v80);
          *(uint16x8_t *)((char *)&STACK[0x640] + v117) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v132, v123, v86), v125, v129), v82), v83);
          v117 += 16;
        }
        while ((_DWORD)v117 != 128);
LABEL_20:
        if (a34 == 64)
        {
          __asm { PRFM            #0, [X16] }
          v142 = (_WORD *)(a46 + a27 + a48 + a26 + 8);
          v143 = 9;
          v134 = (uint16x8_t *)a35;
          v138 = a35;
          v135 = a69;
          do
          {
            _X11 = (char *)v142 + v81;
            __asm { PRFUM           #0, [X11,#-8] }
            v90.i64[0] = *((_QWORD *)v142 - 1);
            v146 = vextq_s8((int8x16_t)v90, v80, 2uLL);
            v146.i16[3] = *v142;
            v147 = vrhadd_u8(*(uint8x8_t *)v90.i8, *(uint8x8_t *)v146.i8);
            v146.i64[0] = v80.i64[0];
            vst2_s8(v138, *(int8x8x2_t *)((char *)&v146 - 8));
            v138 += 16;
            v142 = (_WORD *)((char *)v142 + v81);
            --v143;
          }
          while (v143 > 2);
          v90.i64[0] = *((_QWORD *)v142 - 1);
          v148 = (uint8x16_t)vextq_s8((int8x16_t)v90, v80, 2uLL);
          v148.i16[3] = *v142;
          v90.i64[0] = vrhaddq_u8((uint8x16_t)v90, v148).u64[0];
        }
        else
        {
          v134 = (uint16x8_t *)a35;
          v135 = a69;
          if (a34 == 4)
          {
            _X8 = (uint64_t)v71 + v81;
            __asm { PRFM            #0, [X8] }
            *(int8x8_t *)v90.i8 = *v71;
            v151 = 9;
            v138 = a35;
            do
            {
              _X10 = (char *)_X16 + v94;
              __asm { PRFM            #0, [X10] }
              *(int8x8_t *)v89.i8 = *(int8x8_t *)((char *)_X16 + v81);
              v190.val[0] = (int8x8_t)vrhadd_u8(*(uint8x8_t *)v90.i8, *(uint8x8_t *)v89.i8);
              v190.val[1] = (int8x8_t)v80.i64[0];
              vst2_s8(v138, v190);
              v138 += 16;
              --v151;
              _X16 = (int8x8_t *)((char *)_X16 + v81);
              v90 = v89;
            }
            while (v151 > 2);
            *(int8x8_t *)v90.i8 = *(int8x8_t *)((char *)_X16 + v81);
            v90.i64[0] = vrhaddq_u8((uint8x16_t)v89, (uint8x16_t)v90).u64[0];
          }
          else
          {
            if (a34)
            {
              v155 = 0;
              v156 = v74 * a52;
              v157 = v74 * a52 - (8 * a52 + 8 * v74) + 64;
              v158 = v80;
              v158.i32[0] = v157 | (v157 << 16);
              v159 = (int16x8_t)vqtbl1q_s8(v158, a42);
              v160 = v80;
              v160.i32[0] = (8 * a52 - v156) | ((8 * a52 - v156) << 16);
              v161 = (int16x8_t)vqtbl1q_s8(v160, a42);
              v162 = v80;
              v162.i32[0] = (8 * v74 - v156) | ((8 * v74 - v156) << 16);
              v163 = (int16x8_t)vqtbl1q_s8(v162, a42);
              v164 = v80;
              v164.i32[0] = 65537 * v74 * a52;
              v165 = (int16x8_t)vqtbl1q_s8(v164, a42);
              *(int16x8_t *)(v79 - 160) = v159;
              *(int16x8_t *)(v79 - 144) = v161;
              *(int16x8_t *)(v79 - 128) = v163;
              *(int16x8_t *)(v79 - 112) = v165;
              _X9 = (uint64_t)v71 + v81;
              __asm { PRFM            #0, [X9] }
              *(int8x8_t *)v86.i8 = *v71;
              v168 = vqtbl1q_s8((int8x16_t)v86, (int8x16_t)xmmword_2160EE810);
              v168.i16[3] = v71[1].i16[0];
              v169 = (int16x8_t)vzip1q_s8(v168, v80);
              v170 = (int16x8_t)vzip1q_s8((int8x16_t)v86, v80);
              do
              {
                _X9 = (char *)_X16 + v94;
                __asm { PRFM            #0, [X9] }
                v173 = vmlaq_s16(vmulq_s16(v161, v169), v159, v170);
                *(int8x8_t *)v169.i8 = *(int8x8_t *)((char *)_X16 + v81);
                v170 = (int16x8_t)vzip1q_s8((int8x16_t)v169, v80);
                v174 = vqtbl1q_s8((int8x16_t)v169, (int8x16_t)xmmword_2160EE810);
                v174.i16[3] = *(__int16 *)((char *)_X16[1].i16 + v81);
                v169 = (int16x8_t)vzip1q_s8(v174, v80);
                *(uint16x8_t *)&a35[v155] = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v173, v163, v170), v165, v169), v82), v83);
                v155 += 16;
                _X16 = (int8x8_t *)((char *)_X16 + v81);
              }
              while ((_DWORD)v155 != 128);
              goto LABEL_35;
            }
            __asm { PRFM            #0, [X16] }
            v137 = 9;
            v138 = a35;
            do
            {
              v139 = _X16;
              _X16 = (int8x8_t *)((char *)_X16 + v81);
              __asm { PRFM            #0, [X16] }
              v188.val[0] = *v139;
              v188.val[1] = (int8x8_t)v80.i64[0];
              vst2_s8(v138, v188);
              v138 += 16;
              --v137;
            }
            while (v137 > 2);
            *(int8x8_t *)v90.i8 = *_X16;
          }
        }
        v154 = v80.i64[0];
        vst2_s8(v138, (int8x8x2_t)v90);
LABEL_35:
        v175 = 1;
        v176 = v134;
        while (1)
        {
          v178 = v175;
          v179 = (int16x8_t)vrhaddq_u16(v176[-16], *v176);
          v180 = (int16x8_t)vrhaddq_u16(v176[-15], v176[1]);
          v181 = (int16x8_t)vrhaddq_u16(v176[-14], v176[2]);
          v182 = (int16x8_t)vrhaddq_u16(v176[-13], v176[3]);
          if (v135)
          {
            v183 = *a49;
            v184 = a49[2];
            v185 = a49[4];
            v186 = a49[6];
            a49 += 8;
            v179 = vaddq_s16(v183, v179);
            v180 = vaddq_s16(v184, v180);
            v181 = vaddq_s16(v185, v181);
            v182 = vaddq_s16(v186, v182);
          }
          v175 = 0;
          v176 += 4;
          *v72 = vqmovun_s16(v179);
          *(int8x8_t *)((char *)v72 + v81) = vqmovun_s16(v180);
          *(int8x8_t *)((char *)v72 + v70) = vqmovun_s16(v181);
          *(int8x8_t *)((char *)v72 + a54) = vqmovun_s16(v182);
          v72 = (int8x8_t *)((char *)v72 + a39);
          if ((v178 & 1) == 0)
            JUMPOUT(0x21604A7E4);
        }
      }
      __asm { PRFM            #0, [X26] }
      v100 = (char *)&STACK[0x640];
      for (j = 9; j > 2; --j)
      {
        v102 = (int8x8_t *)_X26;
        _X26 = (uint8x8_t *)((char *)_X26 + v81);
        __asm { PRFM            #0, [X26] }
        v187.val[0] = *v102;
        v187.val[1] = (int8x8_t)v80.i64[0];
        vst2_s8(v100, v187);
        v100 += 16;
      }
      *(uint8x8_t *)v90.i8 = *_X26;
    }
  }
  v116 = v80.i64[0];
  vst2_s8(v100, (int8x8x2_t)v90);
  goto LABEL_20;
}

void sub_216048BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int16x8_t *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint16x8_t *a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,unsigned int *a47,uint64_t a48,int16x8_t *a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a67;
  uint64_t a68;
  uint64_t v68;
  int v69;
  int8x8_t *v70;
  uint64_t v71;
  int16x8_t *v72;
  uint64_t v73;
  unsigned int *v74;
  int8x8_t *v75;
  uint64_t v76;
  uint64_t v77;
  int8x16_t v78;
  int16x8_t v79;
  int16x8_t v80;
  uint64_t v81;
  int8x16_t *v82;
  int8x16_t *v83;
  int16x8_t v84;
  int16x8_t v85;
  int16x8_t v86;
  int16x8_t v87;
  int16x8_t v88;
  int8x16_t *v89;
  int16x8_t v90;
  int16x8_t v91;
  int16x8_t v92;
  int16x8_t v93;
  int16x8_t v94;
  int16x8_t v95;
  int16x8_t v96;
  int16x8_t v97;

  v81 = 0;
  v82 = (int8x16_t *)(v73 + a24 + v77);
  v83 = (int8x16_t *)((char *)v82 + v77 + v77);
  v84 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v83 + v77), v78);
  v85 = (int16x8_t)vzip1q_s8(*v83, v78);
  v86 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v82 + v77), v78);
  v87 = (int16x8_t)vzip1q_s8(*v82, v78);
  v88 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v73 + a24), v78);
  v89 = (int8x16_t *)(a45 + a16 + a48 + v71);
  do
  {
    v90 = v87;
    v87 = v86;
    v86 = v85;
    v85 = v84;
    v84 = (int16x8_t)vzip1q_s8(*v89, v78);
    v91 = vsubq_s16(vshlq_n_s16(vaddq_s16(v87, v86), 2uLL), vaddq_s16(v90, v85));
    *(uint16x8_t *)(a1 + v81) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v88, v91), vshlq_n_s16(v91, 2uLL)), vaddq_s16(v84, v79)), v80))), (uint16x8_t)v87);
    v81 += 16;
    v89 = (int8x16_t *)((char *)v89 + v77);
    v88 = v90;
  }
  while ((_DWORD)v81 != 64);
  v92 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x240], *(uint16x8_t *)&STACK[0x440]);
  v93 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x250], *(uint16x8_t *)&STACK[0x450]);
  v94 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x260], *(uint16x8_t *)&STACK[0x460]);
  v95 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x270], *(uint16x8_t *)&STACK[0x470]);
  if (a68)
  {
    v92 = vaddq_s16(*v72, v92);
    v93 = vaddq_s16(v72[2], v93);
    v94 = vaddq_s16(v72[4], v94);
    v95 = vaddq_s16(v72[6], v95);
  }
  *v75 = vqmovun_s16(v92);
  *(int8x8_t *)((char *)v75 + v77) = vqmovun_s16(v93);
  *(int8x8_t *)((char *)v75 + v68) = vqmovun_s16(v94);
  *(int8x8_t *)((char *)v75 + a53) = vqmovun_s16(v95);
  sub_215FF1C64((uint16x8_t *)&STACK[0x640], v74, v69, (int16x8_t *)(v76 - 224));
  sub_215FF1C64(a34, a47, v69, a10);
  v96 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x640], *(uint16x8_t *)&STACK[0x740]);
  v97 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x650], *(uint16x8_t *)&STACK[0x750]);
  if (a67)
  {
    v96 = vaddq_s16(*a49, v96);
    v97 = vaddq_s16(a49[2], v97);
  }
  *v70 = vqmovun_s16(v96);
  *(int8x8_t *)((char *)v70 + STACK[0x210]) = vqmovun_s16(v97);
  JUMPOUT(0x21604A7E4);
}

void sub_216048CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int16x8_t *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint16x8_t *a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,unsigned int *a47,uint64_t a48,int16x8_t *a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a67;
  uint64_t a68;
  uint64_t v68;
  int v69;
  int8x8_t *v70;
  uint64_t v71;
  int16x8_t *v72;
  uint64_t v73;
  unsigned int *v74;
  int8x8_t *v75;
  uint64_t v76;
  uint64_t v77;
  int8x16_t v78;
  int16x8_t v79;
  int16x8_t v80;
  uint64_t v81;
  int8x16_t *v82;
  int8x16_t *v83;
  int16x8_t v84;
  int16x8_t v85;
  int16x8_t v86;
  int16x8_t v87;
  int16x8_t v88;
  int8x16_t *v89;
  int16x8_t v90;
  char *v91;
  int16x8_t v92;
  uint64_t v93;
  int16x8_t v94;
  int16x8_t v95;
  int16x8_t v96;
  int16x8_t v97;
  int16x8_t v98;
  int16x8_t v99;

  v81 = 0;
  v82 = (int8x16_t *)(v73 + a24 + v77);
  v83 = (int8x16_t *)((char *)v82 + v77 + v77);
  v84 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v83 + v77), v78);
  v85 = (int16x8_t)vzip1q_s8(*v83, v78);
  v86 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v82 + v77), v78);
  v87 = (int16x8_t)vzip1q_s8(*v82, v78);
  v88 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v73 + a24), v78);
  v89 = (int8x16_t *)(a45 + a16 + a48 + v71);
  do
  {
    v90 = v87;
    v87 = v86;
    v86 = v85;
    v85 = v84;
    v91 = (char *)(a1 + v81);
    v84 = (int16x8_t)vzip1q_s8(*v89, v78);
    v92 = vsubq_s16(vshlq_n_s16(vaddq_s16(v87, v86), 2uLL), vaddq_s16(v90, v85));
    *(int8x8_t *)v92.i8 = vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v88, v92), vshlq_n_s16(v92, 2uLL)), vaddq_s16(v84, v79)), v80));
    v93 = v78.i64[0];
    vst2_s8(v91, (int8x8x2_t)v92);
    v81 += 16;
    v89 = (int8x16_t *)((char *)v89 + v77);
    v88 = v90;
  }
  while ((_DWORD)v81 != 64);
  v94 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x240], *(uint16x8_t *)&STACK[0x440]);
  v95 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x250], *(uint16x8_t *)&STACK[0x450]);
  v96 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x260], *(uint16x8_t *)&STACK[0x460]);
  v97 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x270], *(uint16x8_t *)&STACK[0x470]);
  if (a68)
  {
    v94 = vaddq_s16(*v72, v94);
    v95 = vaddq_s16(v72[2], v95);
    v96 = vaddq_s16(v72[4], v96);
    v97 = vaddq_s16(v72[6], v97);
  }
  *v75 = vqmovun_s16(v94);
  *(int8x8_t *)((char *)v75 + v77) = vqmovun_s16(v95);
  *(int8x8_t *)((char *)v75 + v68) = vqmovun_s16(v96);
  *(int8x8_t *)((char *)v75 + a53) = vqmovun_s16(v97);
  sub_215FF1C64((uint16x8_t *)&STACK[0x640], v74, v69, (int16x8_t *)(v76 - 224));
  sub_215FF1C64(a34, a47, v69, a10);
  v98 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x640], *(uint16x8_t *)&STACK[0x740]);
  v99 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x650], *(uint16x8_t *)&STACK[0x750]);
  if (a67)
  {
    v98 = vaddq_s16(*a49, v98);
    v99 = vaddq_s16(a49[2], v99);
  }
  *v70 = vqmovun_s16(v98);
  *(int8x8_t *)((char *)v70 + STACK[0x210]) = vqmovun_s16(v99);
  JUMPOUT(0x21604A7E4);
}

void sub_216048D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int16x8_t *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint16x8_t *a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,unsigned int *a47,uint64_t a48,int16x8_t *a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a67;
  uint64_t a68;
  uint64_t v68;
  int v69;
  int8x8_t *v70;
  uint64_t v71;
  int16x8_t *v72;
  uint64_t v73;
  unsigned int *v74;
  int8x8_t *v75;
  uint64_t v76;
  uint64_t v77;
  int8x16_t v78;
  int16x8_t v79;
  int16x8_t v80;
  uint64_t v81;
  int8x16_t *v82;
  int8x16_t *v83;
  int16x8_t v84;
  int16x8_t v85;
  int16x8_t v86;
  int16x8_t v87;
  int16x8_t v88;
  int8x16_t *v89;
  int16x8_t v90;
  int16x8_t v91;
  int16x8_t v92;
  int16x8_t v93;
  int16x8_t v94;
  int16x8_t v95;
  int16x8_t v96;
  int16x8_t v97;

  v81 = 0;
  v82 = (int8x16_t *)(v73 + a24 + v77);
  v83 = (int8x16_t *)((char *)v82 + v77 + v77);
  v84 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v83 + v77), v78);
  v85 = (int16x8_t)vzip1q_s8(*v83, v78);
  v86 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v82 + v77), v78);
  v87 = (int16x8_t)vzip1q_s8(*v82, v78);
  v88 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v73 + a24), v78);
  v89 = (int8x16_t *)(a45 + a16 + a48 + v71);
  do
  {
    v90 = v87;
    v87 = v86;
    v86 = v85;
    v85 = v84;
    v84 = (int16x8_t)vzip1q_s8(*v89, v78);
    v91 = vsubq_s16(vshlq_n_s16(vaddq_s16(v87, v86), 2uLL), vaddq_s16(v90, v85));
    *(uint16x8_t *)(a1 + v81) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v88, v91), vshlq_n_s16(v91, 2uLL)), vaddq_s16(v84, v79)), v80))), (uint16x8_t)v86);
    v81 += 16;
    v89 = (int8x16_t *)((char *)v89 + v77);
    v88 = v90;
  }
  while ((_DWORD)v81 != 64);
  v92 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x240], *(uint16x8_t *)&STACK[0x440]);
  v93 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x250], *(uint16x8_t *)&STACK[0x450]);
  v94 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x260], *(uint16x8_t *)&STACK[0x460]);
  v95 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x270], *(uint16x8_t *)&STACK[0x470]);
  if (a68)
  {
    v92 = vaddq_s16(*v72, v92);
    v93 = vaddq_s16(v72[2], v93);
    v94 = vaddq_s16(v72[4], v94);
    v95 = vaddq_s16(v72[6], v95);
  }
  *v75 = vqmovun_s16(v92);
  *(int8x8_t *)((char *)v75 + v77) = vqmovun_s16(v93);
  *(int8x8_t *)((char *)v75 + v68) = vqmovun_s16(v94);
  *(int8x8_t *)((char *)v75 + a53) = vqmovun_s16(v95);
  sub_215FF1C64((uint16x8_t *)&STACK[0x640], v74, v69, (int16x8_t *)(v76 - 224));
  sub_215FF1C64(a34, a47, v69, a10);
  v96 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x640], *(uint16x8_t *)&STACK[0x740]);
  v97 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x650], *(uint16x8_t *)&STACK[0x750]);
  if (a67)
  {
    v96 = vaddq_s16(*a49, v96);
    v97 = vaddq_s16(a49[2], v97);
  }
  *v70 = vqmovun_s16(v96);
  *(int8x8_t *)((char *)v70 + STACK[0x210]) = vqmovun_s16(v97);
  JUMPOUT(0x21604A7E4);
}

void sub_216048E28(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _QWORD *a9)
{
  int v9;
  uint64_t v10;

  sub_216082C54(a1, 0x10u, v10, v9);
  sub_216082C54(a9, 0x10u, v10 + 4, v9);
  JUMPOUT(0x216048FFCLL);
}

void sub_216049100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34,char *a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int8x16_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int16x8_t *a49,int a50,int a51,int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61,uint64_t a62,uint64_t a63)
{
  uint64_t a69;
  uint64_t a70;
  uint64_t v70;
  int8x8_t *v71;
  int8x8_t *v72;
  int v73;
  int v74;
  int16x8_t *v75;
  uint64_t v76;
  int8x8_t *v78;
  uint64_t v79;
  uint64_t v80;
  int8x16_t v81;
  int16x8_t v82;
  int16x8_t v83;
  uint64_t v84;
  int8x16_t *v85;
  int8x16_t *v86;
  int16x8_t v87;
  int16x8_t v88;
  int16x8_t v89;
  int16x8_t v90;
  int16x8_t v91;
  int8x16_t *v92;
  int16x8_t v93;
  uint16x8_t v94;
  int16x8_t v96;
  int16x8_t v97;
  char v98;
  unint64_t *v99;
  char v100;
  int16x8_t v101;
  int16x8_t v102;
  int16x8_t v103;
  int16x8_t v104;
  int16x8_t v105;
  int16x8_t v106;
  int16x8_t v107;
  int16x8_t v108;
  uint64_t v109;
  char *v115;
  unsigned int j;
  int8x8_t *v117;
  unsigned int v120;
  uint8x8_t *v121;
  int8x16_t v123;
  uint8x8_t v124;
  uint8x16_t v127;
  unsigned int i;
  uint64_t v131;
  uint64_t v132;
  int v133;
  int v134;
  int8x16_t v135;
  int8x16_t v136;
  int8x16_t v137;
  int16x8_t v138;
  int8x16_t v139;
  int16x8_t v140;
  int8x16_t v143;
  int16x8_t v144;
  int16x8_t v147;
  int8x16_t v148;
  uint64_t v149;
  unsigned int v151;
  char *v152;
  int8x8_t *v153;
  _WORD *v156;
  unsigned int v157;
  int8x16_t v160;
  uint8x8_t v161;
  uint8x16_t v162;
  unsigned int v165;
  uint64_t v168;
  uint64_t v169;
  int v170;
  int v171;
  int8x16_t v172;
  int16x8_t v173;
  int8x16_t v174;
  int16x8_t v175;
  int8x16_t v176;
  int16x8_t v177;
  int8x16_t v178;
  int16x8_t v179;
  int8x16_t v182;
  int16x8_t v183;
  int16x8_t v184;
  int16x8_t v187;
  int8x16_t v188;
  int16x8_t v189;
  int16x8_t v190;
  int16x8_t v191;
  int8x8x2_t v192;
  int8x8x2_t v193;
  int8x8x2_t v194;
  int8x8x2_t v195;

  v84 = 0;
  v85 = (int8x16_t *)(v76 + a24 + v80);
  v86 = (int8x16_t *)((char *)v85 + v80 + v80);
  v87 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v86 + v80), v81);
  v88 = (int16x8_t)vzip1q_s8(*v86, v81);
  v89 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v85 + v80), v81);
  v90 = (int16x8_t)vzip1q_s8(*v85, v81);
  v91 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v76 + a24), v81);
  v92 = (int8x16_t *)(a45 + a16 + a48 + a25);
  v93.i64[0] = 0x20002000200020;
  v93.i64[1] = 0x20002000200020;
  v94.i64[0] = 0x5000500050005;
  v94.i64[1] = 0x5000500050005;
  _X15 = v71;
  do
  {
    v96 = v90;
    v90 = v89;
    v89 = v88;
    v88 = v87;
    v87 = (int16x8_t)vzip1q_s8(*v92, v81);
    v97 = vsubq_s16(vshlq_n_s16(vaddq_s16(v90, v89), 2uLL), vaddq_s16(v96, v88));
    *(uint16x8_t *)(a1 + v84) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v91, v97), vshlq_n_s16(v97, 2uLL)), vaddq_s16(v87, v82)), v83))), (uint16x8_t)v90);
    v84 += 16;
    v92 = (int8x16_t *)((char *)v92 + v80);
    v91 = v96;
  }
  while ((_DWORD)v84 != 128);
  v98 = 1;
  v99 = &STACK[0x240];
  do
  {
    v100 = v98;
    v101 = *((int16x8_t *)v99 + 3);
    v102 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)v99, *((uint16x8_t *)v99 + 32));
    v103 = (int16x8_t)vrhaddq_u16(*((uint16x8_t *)v99 + 1), *((uint16x8_t *)v99 + 33));
    v104 = (int16x8_t)vrhaddq_u16(*((uint16x8_t *)v99 + 2), *((uint16x8_t *)v99 + 34));
    v105 = (int16x8_t)vrhaddq_u16((uint16x8_t)v101, *((uint16x8_t *)v99 + 35));
    if (a70)
    {
      v106 = *v75;
      v101 = v75[2];
      v107 = v75[4];
      v108 = v75[6];
      v75 += 8;
      v102 = vaddq_s16(v106, v102);
      v103 = vaddq_s16(v101, v103);
      v104 = vaddq_s16(v107, v104);
      v105 = vaddq_s16(v108, v105);
    }
    v98 = 0;
    v99 += 8;
    *v78 = vqmovun_s16(v102);
    *(int8x8_t *)((char *)v78 + v80) = vqmovun_s16(v103);
    *(int8x8_t *)((char *)v78 + v70) = vqmovun_s16(v104);
    *(int8x8_t *)((char *)v78 + a54) = vqmovun_s16(v105);
    v78 = (int8x8_t *)((char *)v78 + a39);
  }
  while ((v100 & 1) != 0);
  if (a61 == 64)
  {
    __asm { PRFM            #0, [X26] }
    v115 = (char *)&STACK[0x640];
    v120 = 5;
    v109 = a36;
    do
    {
      v121 = _X26;
      _X26 = (uint8x8_t *)((char *)_X26 + v80);
      __asm { PRFM            #0, [X26] }
      *(uint8x8_t *)v105.i8 = *v121;
      v123 = vextq_s8((int8x16_t)v105, v81, 2uLL);
      v123.i16[3] = v121[1].i16[0];
      v124 = vrhadd_u8(*v121, *(uint8x8_t *)v123.i8);
      v123.i64[0] = v81.i64[0];
      vst2_s8(v115, *(int8x8x2_t *)((char *)&v123 - 8));
      v115 += 16;
      --v120;
    }
    while (v120 > 2);
    *(uint8x8_t *)v105.i8 = *_X26;
    v104 = (int16x8_t)vextq_s8((int8x16_t)v105, v81, 2uLL);
    v104.i16[3] = _X26[1].i16[0];
    v105 = (int16x8_t)vrhaddq_u8((uint8x16_t)v105, (uint8x16_t)v104);
  }
  else
  {
    v109 = a36;
    if (a61 == 4)
    {
      _X8 = (char *)_X26 + v80;
      __asm { PRFM            #0, [X8] }
      *(uint8x8_t *)v127.i8 = *_X26;
      v115 = (char *)&STACK[0x640];
      for (i = 5; i > 2; --i)
      {
        _X10 = (char *)_X26 + a36;
        _X26 = (uint8x8_t *)((char *)_X26 + v80);
        __asm { PRFM            #0, [X10] }
        *(uint8x8_t *)v104.i8 = *_X26;
        v194.val[0] = (int8x8_t)vrhadd_u8(*(uint8x8_t *)v127.i8, *_X26);
        v194.val[1] = (int8x8_t)v81.i64[0];
        vst2_s8(v115, v194);
        v115 += 16;
        v127 = (uint8x16_t)v104;
      }
      *(uint8x8_t *)v127.i8 = *(uint8x8_t *)((char *)_X26 + v80);
      v105 = (int16x8_t)vrhaddq_u8((uint8x16_t)v104, v127);
    }
    else
    {
      if (a61)
      {
        v132 = 0;
        v133 = v73 * a51;
        v134 = v73 * a51 - (8 * a51 + 8 * v73) + 64;
        v135 = v81;
        v135.i32[0] = v134 | (v134 << 16);
        v105 = (int16x8_t)vqtbl1q_s8(v135, a42);
        v136 = v81;
        v136.i32[0] = (8 * a51 - v133) | ((8 * a51 - v133) << 16);
        v104 = (int16x8_t)vqtbl1q_s8(v136, a42);
        v137 = v81;
        v137.i32[0] = (8 * v73 - v133) | ((8 * v73 - v133) << 16);
        v138 = (int16x8_t)vqtbl1q_s8(v137, a42);
        v139 = v81;
        v139.i32[0] = 65537 * v73 * a51;
        v140 = (int16x8_t)vqtbl1q_s8(v139, a42);
        *(int16x8_t *)(v79 - 224) = v105;
        *(int16x8_t *)(v79 - 208) = v104;
        *(int16x8_t *)(v79 - 192) = v138;
        *(int16x8_t *)(v79 - 176) = v140;
        _X9 = (char *)_X26 + v80;
        __asm { PRFM            #0, [X9] }
        *(uint8x8_t *)v101.i8 = *_X26;
        v143 = vqtbl1q_s8((int8x16_t)v101, (int8x16_t)xmmword_2160EE810);
        v143.i16[3] = _X26[1].i16[0];
        v144 = (int16x8_t)vzip1q_s8(v143, v81);
        v101 = (int16x8_t)vzip1q_s8((int8x16_t)v101, v81);
        do
        {
          _X9 = (char *)_X26 + a36;
          _X26 = (uint8x8_t *)((char *)_X26 + v80);
          __asm { PRFM            #0, [X9] }
          v147 = vmlaq_s16(vmulq_s16(v104, v144), v105, v101);
          *(uint8x8_t *)v144.i8 = *_X26;
          v101 = (int16x8_t)vzip1q_s8((int8x16_t)v144, v81);
          v148 = vqtbl1q_s8((int8x16_t)v144, (int8x16_t)xmmword_2160EE810);
          v148.i16[3] = _X26[1].i16[0];
          v144 = (int16x8_t)vzip1q_s8(v148, v81);
          *(uint16x8_t *)((char *)&STACK[0x640] + v132) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v147, v138, v101), v140, v144), v93), v94);
          v132 += 16;
        }
        while ((_DWORD)v132 != 64);
LABEL_22:
        if (a34 == 64)
        {
          __asm { PRFM            #0, [X15] }
          v156 = (_WORD *)(a46 + a27 + a48 + a26 + 8);
          v157 = 5;
          v152 = a35;
          v149 = a69;
          do
          {
            _X11 = (char *)v156 + v80;
            __asm { PRFUM           #0, [X11,#-8] }
            v105.i64[0] = *((_QWORD *)v156 - 1);
            v160 = vextq_s8((int8x16_t)v105, v81, 2uLL);
            v160.i16[3] = *v156;
            v161 = vrhadd_u8(*(uint8x8_t *)v105.i8, *(uint8x8_t *)v160.i8);
            v160.i64[0] = v81.i64[0];
            vst2_s8(v152, *(int8x8x2_t *)((char *)&v160 - 8));
            v152 += 16;
            v156 = (_WORD *)((char *)v156 + v80);
            --v157;
          }
          while (v157 > 2);
          v105.i64[0] = *((_QWORD *)v156 - 1);
          v162 = (uint8x16_t)vextq_s8((int8x16_t)v105, v81, 2uLL);
          v162.i16[3] = *v156;
          v105.i64[0] = vrhaddq_u8((uint8x16_t)v105, v162).u64[0];
        }
        else
        {
          v149 = a69;
          if (a34 == 4)
          {
            _X8 = (uint64_t)v71 + v80;
            __asm { PRFM            #0, [X8] }
            *(int8x8_t *)v105.i8 = *v71;
            v165 = 5;
            v152 = a35;
            do
            {
              _X10 = (char *)_X15 + v109;
              __asm { PRFM            #0, [X10] }
              *(int8x8_t *)v104.i8 = *(int8x8_t *)((char *)_X15 + v80);
              v195.val[0] = (int8x8_t)vrhadd_u8(*(uint8x8_t *)v105.i8, *(uint8x8_t *)v104.i8);
              v195.val[1] = (int8x8_t)v81.i64[0];
              vst2_s8(v152, v195);
              v152 += 16;
              --v165;
              _X15 = (int8x8_t *)((char *)_X15 + v80);
              v105 = v104;
            }
            while (v165 > 2);
            *(int8x8_t *)v105.i8 = *(int8x8_t *)((char *)_X15 + v80);
            v105.i64[0] = vrhaddq_u8((uint8x16_t)v104, (uint8x16_t)v105).u64[0];
          }
          else
          {
            if (a34)
            {
              v169 = 0;
              v170 = v74 * a52;
              v171 = v74 * a52 - (8 * a52 + 8 * v74) + 64;
              v172 = v81;
              v172.i32[0] = v171 | (v171 << 16);
              v173 = (int16x8_t)vqtbl1q_s8(v172, a42);
              v174 = v81;
              v174.i32[0] = (8 * a52 - v170) | ((8 * a52 - v170) << 16);
              v175 = (int16x8_t)vqtbl1q_s8(v174, a42);
              v176 = v81;
              v176.i32[0] = (8 * v74 - v170) | ((8 * v74 - v170) << 16);
              v177 = (int16x8_t)vqtbl1q_s8(v176, a42);
              v178 = v81;
              v178.i32[0] = 65537 * v74 * a52;
              v179 = (int16x8_t)vqtbl1q_s8(v178, a42);
              *(int16x8_t *)(v79 - 160) = v173;
              *(int16x8_t *)(v79 - 144) = v175;
              *(int16x8_t *)(v79 - 128) = v177;
              *(int16x8_t *)(v79 - 112) = v179;
              _X9 = (uint64_t)v71 + v80;
              __asm { PRFM            #0, [X9] }
              *(int8x8_t *)v101.i8 = *v71;
              v182 = vqtbl1q_s8((int8x16_t)v101, (int8x16_t)xmmword_2160EE810);
              v182.i16[3] = v71[1].i16[0];
              v183 = (int16x8_t)vzip1q_s8(v182, v81);
              v184 = (int16x8_t)vzip1q_s8((int8x16_t)v101, v81);
              do
              {
                _X9 = (char *)_X15 + v109;
                __asm { PRFM            #0, [X9] }
                v187 = vmlaq_s16(vmulq_s16(v175, v183), v173, v184);
                *(int8x8_t *)v183.i8 = *(int8x8_t *)((char *)_X15 + v80);
                v184 = (int16x8_t)vzip1q_s8((int8x16_t)v183, v81);
                v188 = vqtbl1q_s8((int8x16_t)v183, (int8x16_t)xmmword_2160EE810);
                v188.i16[3] = *(__int16 *)((char *)_X15[1].i16 + v80);
                v183 = (int16x8_t)vzip1q_s8(v188, v81);
                *(uint16x8_t *)&a35[v169] = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v187, v177, v184), v179, v183), v93), v94);
                v169 += 16;
                _X15 = (int8x8_t *)((char *)_X15 + v80);
              }
              while ((_DWORD)v169 != 64);
LABEL_37:
              v189 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x640], *(uint16x8_t *)&STACK[0x740]);
              v190 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x650], *(uint16x8_t *)&STACK[0x750]);
              v191 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x660], *(uint16x8_t *)&STACK[0x760]);
              if (v149)
              {
                v189 = vaddq_s16(*a49, v189);
                v190 = vaddq_s16(a49[2], v190);
                v191 = vaddq_s16(a49[4], v191);
              }
              *v72 = vqmovun_s16(v189);
              *(int8x8_t *)((char *)v72 + v80) = vqmovun_s16(v190);
              *(int8x8_t *)((char *)v72 + v70) = vqmovun_s16(v191);
              JUMPOUT(0x21604A7E0);
            }
            __asm { PRFM            #0, [X15] }
            v151 = 5;
            v152 = a35;
            do
            {
              v153 = _X15;
              _X15 = (int8x8_t *)((char *)_X15 + v80);
              __asm { PRFM            #0, [X15] }
              v193.val[0] = *v153;
              v193.val[1] = (int8x8_t)v81.i64[0];
              vst2_s8(v152, v193);
              v152 += 16;
              --v151;
            }
            while (v151 > 2);
            *(int8x8_t *)v105.i8 = *_X15;
          }
        }
        v168 = v81.i64[0];
        vst2_s8(v152, (int8x8x2_t)v105);
        goto LABEL_37;
      }
      __asm { PRFM            #0, [X26] }
      v115 = (char *)&STACK[0x640];
      for (j = 5; j > 2; --j)
      {
        v117 = (int8x8_t *)_X26;
        _X26 = (uint8x8_t *)((char *)_X26 + v80);
        __asm { PRFM            #0, [X26] }
        v192.val[0] = *v117;
        v192.val[1] = (int8x8_t)v81.i64[0];
        vst2_s8(v115, v192);
        v115 += 16;
      }
      *(uint8x8_t *)v105.i8 = *_X26;
    }
  }
  v131 = v81.i64[0];
  vst2_s8(v115, (int8x8x2_t)v105);
  goto LABEL_22;
}

void sub_2160491E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34,char *a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int8x16_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int16x8_t *a49,int a50,int a51,int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61,uint64_t a62,uint64_t a63)
{
  uint64_t a69;
  uint64_t a70;
  uint64_t v70;
  int8x8_t *v71;
  int8x8_t *v72;
  int v73;
  int v74;
  int16x8_t *v75;
  uint64_t v76;
  int8x8_t *v78;
  uint64_t v79;
  uint64_t v80;
  int8x16_t v81;
  int16x8_t v82;
  int16x8_t v83;
  uint64_t v84;
  int8x16_t *v85;
  int8x16_t *v86;
  int16x8_t v87;
  int16x8_t v88;
  int16x8_t v89;
  int16x8_t v90;
  int16x8_t v91;
  int8x16_t *v92;
  int16x8_t v93;
  uint16x8_t v94;
  int16x8_t v96;
  char *v97;
  int16x8_t v98;
  uint64_t v99;
  char v100;
  unint64_t *v101;
  char v102;
  int16x8_t v103;
  int16x8_t v104;
  int16x8_t v105;
  int16x8_t v106;
  int16x8_t v107;
  int16x8_t v108;
  int16x8_t v109;
  int16x8_t v110;
  uint64_t v111;
  char *v117;
  unsigned int j;
  int8x8_t *v119;
  unsigned int v122;
  uint8x8_t *v123;
  int8x16_t v125;
  uint8x8_t v126;
  uint8x16_t v129;
  unsigned int i;
  uint64_t v133;
  uint64_t v134;
  int v135;
  int v136;
  int8x16_t v137;
  int8x16_t v138;
  int8x16_t v139;
  int16x8_t v140;
  int8x16_t v141;
  int16x8_t v142;
  int8x16_t v145;
  int16x8_t v146;
  int16x8_t v149;
  int8x16_t v150;
  uint64_t v151;
  unsigned int v153;
  char *v154;
  int8x8_t *v155;
  _WORD *v158;
  unsigned int v159;
  int8x16_t v162;
  uint8x8_t v163;
  uint8x16_t v164;
  unsigned int v167;
  uint64_t v170;
  uint64_t v171;
  int v172;
  int v173;
  int8x16_t v174;
  int16x8_t v175;
  int8x16_t v176;
  int16x8_t v177;
  int8x16_t v178;
  int16x8_t v179;
  int8x16_t v180;
  int16x8_t v181;
  int8x16_t v184;
  int16x8_t v185;
  int16x8_t v186;
  int16x8_t v189;
  int8x16_t v190;
  int16x8_t v191;
  int16x8_t v192;
  int16x8_t v193;
  int8x8x2_t v194;
  int8x8x2_t v195;
  int8x8x2_t v196;
  int8x8x2_t v197;

  v84 = 0;
  v85 = (int8x16_t *)(v76 + a24 + v80);
  v86 = (int8x16_t *)((char *)v85 + v80 + v80);
  v87 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v86 + v80), v81);
  v88 = (int16x8_t)vzip1q_s8(*v86, v81);
  v89 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v85 + v80), v81);
  v90 = (int16x8_t)vzip1q_s8(*v85, v81);
  v91 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v76 + a24), v81);
  v92 = (int8x16_t *)(a45 + a16 + a48 + a25);
  v93.i64[0] = 0x20002000200020;
  v93.i64[1] = 0x20002000200020;
  v94.i64[0] = 0x5000500050005;
  v94.i64[1] = 0x5000500050005;
  _X15 = v71;
  do
  {
    v96 = v90;
    v90 = v89;
    v89 = v88;
    v88 = v87;
    v97 = (char *)(a1 + v84);
    v87 = (int16x8_t)vzip1q_s8(*v92, v81);
    v98 = vsubq_s16(vshlq_n_s16(vaddq_s16(v90, v89), 2uLL), vaddq_s16(v96, v88));
    *(int8x8_t *)v98.i8 = vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v91, v98), vshlq_n_s16(v98, 2uLL)), vaddq_s16(v87, v82)), v83));
    v99 = v81.i64[0];
    vst2_s8(v97, (int8x8x2_t)v98);
    v84 += 16;
    v92 = (int8x16_t *)((char *)v92 + v80);
    v91 = v96;
  }
  while ((_DWORD)v84 != 128);
  v100 = 1;
  v101 = &STACK[0x240];
  do
  {
    v102 = v100;
    v103 = *((int16x8_t *)v101 + 3);
    v104 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)v101, *((uint16x8_t *)v101 + 32));
    v105 = (int16x8_t)vrhaddq_u16(*((uint16x8_t *)v101 + 1), *((uint16x8_t *)v101 + 33));
    v106 = (int16x8_t)vrhaddq_u16(*((uint16x8_t *)v101 + 2), *((uint16x8_t *)v101 + 34));
    v107 = (int16x8_t)vrhaddq_u16((uint16x8_t)v103, *((uint16x8_t *)v101 + 35));
    if (a70)
    {
      v108 = *v75;
      v103 = v75[2];
      v109 = v75[4];
      v110 = v75[6];
      v75 += 8;
      v104 = vaddq_s16(v108, v104);
      v105 = vaddq_s16(v103, v105);
      v106 = vaddq_s16(v109, v106);
      v107 = vaddq_s16(v110, v107);
    }
    v100 = 0;
    v101 += 8;
    *v78 = vqmovun_s16(v104);
    *(int8x8_t *)((char *)v78 + v80) = vqmovun_s16(v105);
    *(int8x8_t *)((char *)v78 + v70) = vqmovun_s16(v106);
    *(int8x8_t *)((char *)v78 + a54) = vqmovun_s16(v107);
    v78 = (int8x8_t *)((char *)v78 + a39);
  }
  while ((v102 & 1) != 0);
  if (a61 == 64)
  {
    __asm { PRFM            #0, [X26] }
    v117 = (char *)&STACK[0x640];
    v122 = 5;
    v111 = a36;
    do
    {
      v123 = _X26;
      _X26 = (uint8x8_t *)((char *)_X26 + v80);
      __asm { PRFM            #0, [X26] }
      *(uint8x8_t *)v107.i8 = *v123;
      v125 = vextq_s8((int8x16_t)v107, v81, 2uLL);
      v125.i16[3] = v123[1].i16[0];
      v126 = vrhadd_u8(*v123, *(uint8x8_t *)v125.i8);
      v125.i64[0] = v81.i64[0];
      vst2_s8(v117, *(int8x8x2_t *)((char *)&v125 - 8));
      v117 += 16;
      --v122;
    }
    while (v122 > 2);
    *(uint8x8_t *)v107.i8 = *_X26;
    v106 = (int16x8_t)vextq_s8((int8x16_t)v107, v81, 2uLL);
    v106.i16[3] = _X26[1].i16[0];
    v107 = (int16x8_t)vrhaddq_u8((uint8x16_t)v107, (uint8x16_t)v106);
  }
  else
  {
    v111 = a36;
    if (a61 == 4)
    {
      _X8 = (char *)_X26 + v80;
      __asm { PRFM            #0, [X8] }
      *(uint8x8_t *)v129.i8 = *_X26;
      v117 = (char *)&STACK[0x640];
      for (i = 5; i > 2; --i)
      {
        _X10 = (char *)_X26 + a36;
        _X26 = (uint8x8_t *)((char *)_X26 + v80);
        __asm { PRFM            #0, [X10] }
        *(uint8x8_t *)v106.i8 = *_X26;
        v196.val[0] = (int8x8_t)vrhadd_u8(*(uint8x8_t *)v129.i8, *_X26);
        v196.val[1] = (int8x8_t)v81.i64[0];
        vst2_s8(v117, v196);
        v117 += 16;
        v129 = (uint8x16_t)v106;
      }
      *(uint8x8_t *)v129.i8 = *(uint8x8_t *)((char *)_X26 + v80);
      v107 = (int16x8_t)vrhaddq_u8((uint8x16_t)v106, v129);
    }
    else
    {
      if (a61)
      {
        v134 = 0;
        v135 = v73 * a51;
        v136 = v73 * a51 - (8 * a51 + 8 * v73) + 64;
        v137 = v81;
        v137.i32[0] = v136 | (v136 << 16);
        v107 = (int16x8_t)vqtbl1q_s8(v137, a42);
        v138 = v81;
        v138.i32[0] = (8 * a51 - v135) | ((8 * a51 - v135) << 16);
        v106 = (int16x8_t)vqtbl1q_s8(v138, a42);
        v139 = v81;
        v139.i32[0] = (8 * v73 - v135) | ((8 * v73 - v135) << 16);
        v140 = (int16x8_t)vqtbl1q_s8(v139, a42);
        v141 = v81;
        v141.i32[0] = 65537 * v73 * a51;
        v142 = (int16x8_t)vqtbl1q_s8(v141, a42);
        *(int16x8_t *)(v79 - 224) = v107;
        *(int16x8_t *)(v79 - 208) = v106;
        *(int16x8_t *)(v79 - 192) = v140;
        *(int16x8_t *)(v79 - 176) = v142;
        _X9 = (char *)_X26 + v80;
        __asm { PRFM            #0, [X9] }
        *(uint8x8_t *)v103.i8 = *_X26;
        v145 = vqtbl1q_s8((int8x16_t)v103, (int8x16_t)xmmword_2160EE810);
        v145.i16[3] = _X26[1].i16[0];
        v146 = (int16x8_t)vzip1q_s8(v145, v81);
        v103 = (int16x8_t)vzip1q_s8((int8x16_t)v103, v81);
        do
        {
          _X9 = (char *)_X26 + a36;
          _X26 = (uint8x8_t *)((char *)_X26 + v80);
          __asm { PRFM            #0, [X9] }
          v149 = vmlaq_s16(vmulq_s16(v106, v146), v107, v103);
          *(uint8x8_t *)v146.i8 = *_X26;
          v103 = (int16x8_t)vzip1q_s8((int8x16_t)v146, v81);
          v150 = vqtbl1q_s8((int8x16_t)v146, (int8x16_t)xmmword_2160EE810);
          v150.i16[3] = _X26[1].i16[0];
          v146 = (int16x8_t)vzip1q_s8(v150, v81);
          *(uint16x8_t *)((char *)&STACK[0x640] + v134) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v149, v140, v103), v142, v146), v93), v94);
          v134 += 16;
        }
        while ((_DWORD)v134 != 64);
LABEL_22:
        if (a34 == 64)
        {
          __asm { PRFM            #0, [X15] }
          v158 = (_WORD *)(a46 + a27 + a48 + a26 + 8);
          v159 = 5;
          v154 = a35;
          v151 = a69;
          do
          {
            _X11 = (char *)v158 + v80;
            __asm { PRFUM           #0, [X11,#-8] }
            v107.i64[0] = *((_QWORD *)v158 - 1);
            v162 = vextq_s8((int8x16_t)v107, v81, 2uLL);
            v162.i16[3] = *v158;
            v163 = vrhadd_u8(*(uint8x8_t *)v107.i8, *(uint8x8_t *)v162.i8);
            v162.i64[0] = v81.i64[0];
            vst2_s8(v154, *(int8x8x2_t *)((char *)&v162 - 8));
            v154 += 16;
            v158 = (_WORD *)((char *)v158 + v80);
            --v159;
          }
          while (v159 > 2);
          v107.i64[0] = *((_QWORD *)v158 - 1);
          v164 = (uint8x16_t)vextq_s8((int8x16_t)v107, v81, 2uLL);
          v164.i16[3] = *v158;
          v107.i64[0] = vrhaddq_u8((uint8x16_t)v107, v164).u64[0];
        }
        else
        {
          v151 = a69;
          if (a34 == 4)
          {
            _X8 = (uint64_t)v71 + v80;
            __asm { PRFM            #0, [X8] }
            *(int8x8_t *)v107.i8 = *v71;
            v167 = 5;
            v154 = a35;
            do
            {
              _X10 = (char *)_X15 + v111;
              __asm { PRFM            #0, [X10] }
              *(int8x8_t *)v106.i8 = *(int8x8_t *)((char *)_X15 + v80);
              v197.val[0] = (int8x8_t)vrhadd_u8(*(uint8x8_t *)v107.i8, *(uint8x8_t *)v106.i8);
              v197.val[1] = (int8x8_t)v81.i64[0];
              vst2_s8(v154, v197);
              v154 += 16;
              --v167;
              _X15 = (int8x8_t *)((char *)_X15 + v80);
              v107 = v106;
            }
            while (v167 > 2);
            *(int8x8_t *)v107.i8 = *(int8x8_t *)((char *)_X15 + v80);
            v107.i64[0] = vrhaddq_u8((uint8x16_t)v106, (uint8x16_t)v107).u64[0];
          }
          else
          {
            if (a34)
            {
              v171 = 0;
              v172 = v74 * a52;
              v173 = v74 * a52 - (8 * a52 + 8 * v74) + 64;
              v174 = v81;
              v174.i32[0] = v173 | (v173 << 16);
              v175 = (int16x8_t)vqtbl1q_s8(v174, a42);
              v176 = v81;
              v176.i32[0] = (8 * a52 - v172) | ((8 * a52 - v172) << 16);
              v177 = (int16x8_t)vqtbl1q_s8(v176, a42);
              v178 = v81;
              v178.i32[0] = (8 * v74 - v172) | ((8 * v74 - v172) << 16);
              v179 = (int16x8_t)vqtbl1q_s8(v178, a42);
              v180 = v81;
              v180.i32[0] = 65537 * v74 * a52;
              v181 = (int16x8_t)vqtbl1q_s8(v180, a42);
              *(int16x8_t *)(v79 - 160) = v175;
              *(int16x8_t *)(v79 - 144) = v177;
              *(int16x8_t *)(v79 - 128) = v179;
              *(int16x8_t *)(v79 - 112) = v181;
              _X9 = (uint64_t)v71 + v80;
              __asm { PRFM            #0, [X9] }
              *(int8x8_t *)v103.i8 = *v71;
              v184 = vqtbl1q_s8((int8x16_t)v103, (int8x16_t)xmmword_2160EE810);
              v184.i16[3] = v71[1].i16[0];
              v185 = (int16x8_t)vzip1q_s8(v184, v81);
              v186 = (int16x8_t)vzip1q_s8((int8x16_t)v103, v81);
              do
              {
                _X9 = (char *)_X15 + v111;
                __asm { PRFM            #0, [X9] }
                v189 = vmlaq_s16(vmulq_s16(v177, v185), v175, v186);
                *(int8x8_t *)v185.i8 = *(int8x8_t *)((char *)_X15 + v80);
                v186 = (int16x8_t)vzip1q_s8((int8x16_t)v185, v81);
                v190 = vqtbl1q_s8((int8x16_t)v185, (int8x16_t)xmmword_2160EE810);
                v190.i16[3] = *(__int16 *)((char *)_X15[1].i16 + v80);
                v185 = (int16x8_t)vzip1q_s8(v190, v81);
                *(uint16x8_t *)&a35[v171] = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v189, v179, v186), v181, v185), v93), v94);
                v171 += 16;
                _X15 = (int8x8_t *)((char *)_X15 + v80);
              }
              while ((_DWORD)v171 != 64);
LABEL_37:
              v191 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x640], *(uint16x8_t *)&STACK[0x740]);
              v192 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x650], *(uint16x8_t *)&STACK[0x750]);
              v193 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x660], *(uint16x8_t *)&STACK[0x760]);
              if (v151)
              {
                v191 = vaddq_s16(*a49, v191);
                v192 = vaddq_s16(a49[2], v192);
                v193 = vaddq_s16(a49[4], v193);
              }
              *v72 = vqmovun_s16(v191);
              *(int8x8_t *)((char *)v72 + v80) = vqmovun_s16(v192);
              *(int8x8_t *)((char *)v72 + v70) = vqmovun_s16(v193);
              JUMPOUT(0x21604A7E0);
            }
            __asm { PRFM            #0, [X15] }
            v153 = 5;
            v154 = a35;
            do
            {
              v155 = _X15;
              _X15 = (int8x8_t *)((char *)_X15 + v80);
              __asm { PRFM            #0, [X15] }
              v195.val[0] = *v155;
              v195.val[1] = (int8x8_t)v81.i64[0];
              vst2_s8(v154, v195);
              v154 += 16;
              --v153;
            }
            while (v153 > 2);
            *(int8x8_t *)v107.i8 = *_X15;
          }
        }
        v170 = v81.i64[0];
        vst2_s8(v154, (int8x8x2_t)v107);
        goto LABEL_37;
      }
      __asm { PRFM            #0, [X26] }
      v117 = (char *)&STACK[0x640];
      for (j = 5; j > 2; --j)
      {
        v119 = (int8x8_t *)_X26;
        _X26 = (uint8x8_t *)((char *)_X26 + v80);
        __asm { PRFM            #0, [X26] }
        v194.val[0] = *v119;
        v194.val[1] = (int8x8_t)v81.i64[0];
        vst2_s8(v117, v194);
        v117 += 16;
      }
      *(uint8x8_t *)v107.i8 = *_X26;
    }
  }
  v133 = v81.i64[0];
  vst2_s8(v117, (int8x8x2_t)v107);
  goto LABEL_22;
}

void sub_2160492D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34,char *a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int8x16_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int16x8_t *a49,int a50,int a51,int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61,uint64_t a62,uint64_t a63)
{
  uint64_t a69;
  uint64_t a70;
  uint64_t v70;
  int8x8_t *v71;
  int8x8_t *v72;
  int v73;
  int v74;
  int16x8_t *v75;
  uint64_t v76;
  int8x8_t *v78;
  uint64_t v79;
  uint64_t v80;
  int8x16_t v81;
  int16x8_t v82;
  int16x8_t v83;
  uint64_t v84;
  int8x16_t *v85;
  int8x16_t *v86;
  int16x8_t v87;
  int16x8_t v88;
  int16x8_t v89;
  int16x8_t v90;
  int16x8_t v91;
  int8x16_t *v92;
  int16x8_t v93;
  uint16x8_t v94;
  int16x8_t v96;
  int16x8_t v97;
  char v98;
  unint64_t *v99;
  char v100;
  int16x8_t v101;
  int16x8_t v102;
  int16x8_t v103;
  int16x8_t v104;
  int16x8_t v105;
  int16x8_t v106;
  int16x8_t v107;
  int16x8_t v108;
  uint64_t v109;
  char *v115;
  unsigned int j;
  int8x8_t *v117;
  unsigned int v120;
  uint8x8_t *v121;
  int8x16_t v123;
  uint8x8_t v124;
  uint8x16_t v127;
  unsigned int i;
  uint64_t v131;
  uint64_t v132;
  int v133;
  int v134;
  int8x16_t v135;
  int8x16_t v136;
  int8x16_t v137;
  int16x8_t v138;
  int8x16_t v139;
  int16x8_t v140;
  int8x16_t v143;
  int16x8_t v144;
  int16x8_t v147;
  int8x16_t v148;
  uint64_t v149;
  unsigned int v151;
  char *v152;
  int8x8_t *v153;
  _WORD *v156;
  unsigned int v157;
  int8x16_t v160;
  uint8x8_t v161;
  uint8x16_t v162;
  unsigned int v165;
  uint64_t v168;
  uint64_t v169;
  int v170;
  int v171;
  int8x16_t v172;
  int16x8_t v173;
  int8x16_t v174;
  int16x8_t v175;
  int8x16_t v176;
  int16x8_t v177;
  int8x16_t v178;
  int16x8_t v179;
  int8x16_t v182;
  int16x8_t v183;
  int16x8_t v184;
  int16x8_t v187;
  int8x16_t v188;
  int16x8_t v189;
  int16x8_t v190;
  int16x8_t v191;
  int8x8x2_t v192;
  int8x8x2_t v193;
  int8x8x2_t v194;
  int8x8x2_t v195;

  v84 = 0;
  v85 = (int8x16_t *)(v76 + a24 + v80);
  v86 = (int8x16_t *)((char *)v85 + v80 + v80);
  v87 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v86 + v80), v81);
  v88 = (int16x8_t)vzip1q_s8(*v86, v81);
  v89 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v85 + v80), v81);
  v90 = (int16x8_t)vzip1q_s8(*v85, v81);
  v91 = (int16x8_t)vzip1q_s8(*(int8x16_t *)(v76 + a24), v81);
  v92 = (int8x16_t *)(a45 + a16 + a48 + a25);
  v93.i64[0] = 0x20002000200020;
  v93.i64[1] = 0x20002000200020;
  v94.i64[0] = 0x5000500050005;
  v94.i64[1] = 0x5000500050005;
  _X15 = v71;
  do
  {
    v96 = v90;
    v90 = v89;
    v89 = v88;
    v88 = v87;
    v87 = (int16x8_t)vzip1q_s8(*v92, v81);
    v97 = vsubq_s16(vshlq_n_s16(vaddq_s16(v90, v89), 2uLL), vaddq_s16(v96, v88));
    *(uint16x8_t *)(a1 + v84) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v91, v97), vshlq_n_s16(v97, 2uLL)), vaddq_s16(v87, v82)), v83))), (uint16x8_t)v89);
    v84 += 16;
    v92 = (int8x16_t *)((char *)v92 + v80);
    v91 = v96;
  }
  while ((_DWORD)v84 != 128);
  v98 = 1;
  v99 = &STACK[0x240];
  do
  {
    v100 = v98;
    v101 = *((int16x8_t *)v99 + 3);
    v102 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)v99, *((uint16x8_t *)v99 + 32));
    v103 = (int16x8_t)vrhaddq_u16(*((uint16x8_t *)v99 + 1), *((uint16x8_t *)v99 + 33));
    v104 = (int16x8_t)vrhaddq_u16(*((uint16x8_t *)v99 + 2), *((uint16x8_t *)v99 + 34));
    v105 = (int16x8_t)vrhaddq_u16((uint16x8_t)v101, *((uint16x8_t *)v99 + 35));
    if (a70)
    {
      v106 = *v75;
      v101 = v75[2];
      v107 = v75[4];
      v108 = v75[6];
      v75 += 8;
      v102 = vaddq_s16(v106, v102);
      v103 = vaddq_s16(v101, v103);
      v104 = vaddq_s16(v107, v104);
      v105 = vaddq_s16(v108, v105);
    }
    v98 = 0;
    v99 += 8;
    *v78 = vqmovun_s16(v102);
    *(int8x8_t *)((char *)v78 + v80) = vqmovun_s16(v103);
    *(int8x8_t *)((char *)v78 + v70) = vqmovun_s16(v104);
    *(int8x8_t *)((char *)v78 + a54) = vqmovun_s16(v105);
    v78 = (int8x8_t *)((char *)v78 + a39);
  }
  while ((v100 & 1) != 0);
  if (a61 == 64)
  {
    __asm { PRFM            #0, [X26] }
    v115 = (char *)&STACK[0x640];
    v120 = 5;
    v109 = a36;
    do
    {
      v121 = _X26;
      _X26 = (uint8x8_t *)((char *)_X26 + v80);
      __asm { PRFM            #0, [X26] }
      *(uint8x8_t *)v105.i8 = *v121;
      v123 = vextq_s8((int8x16_t)v105, v81, 2uLL);
      v123.i16[3] = v121[1].i16[0];
      v124 = vrhadd_u8(*v121, *(uint8x8_t *)v123.i8);
      v123.i64[0] = v81.i64[0];
      vst2_s8(v115, *(int8x8x2_t *)((char *)&v123 - 8));
      v115 += 16;
      --v120;
    }
    while (v120 > 2);
    *(uint8x8_t *)v105.i8 = *_X26;
    v104 = (int16x8_t)vextq_s8((int8x16_t)v105, v81, 2uLL);
    v104.i16[3] = _X26[1].i16[0];
    v105 = (int16x8_t)vrhaddq_u8((uint8x16_t)v105, (uint8x16_t)v104);
  }
  else
  {
    v109 = a36;
    if (a61 == 4)
    {
      _X8 = (char *)_X26 + v80;
      __asm { PRFM            #0, [X8] }
      *(uint8x8_t *)v127.i8 = *_X26;
      v115 = (char *)&STACK[0x640];
      for (i = 5; i > 2; --i)
      {
        _X10 = (char *)_X26 + a36;
        _X26 = (uint8x8_t *)((char *)_X26 + v80);
        __asm { PRFM            #0, [X10] }
        *(uint8x8_t *)v104.i8 = *_X26;
        v194.val[0] = (int8x8_t)vrhadd_u8(*(uint8x8_t *)v127.i8, *_X26);
        v194.val[1] = (int8x8_t)v81.i64[0];
        vst2_s8(v115, v194);
        v115 += 16;
        v127 = (uint8x16_t)v104;
      }
      *(uint8x8_t *)v127.i8 = *(uint8x8_t *)((char *)_X26 + v80);
      v105 = (int16x8_t)vrhaddq_u8((uint8x16_t)v104, v127);
    }
    else
    {
      if (a61)
      {
        v132 = 0;
        v133 = v73 * a51;
        v134 = v73 * a51 - (8 * a51 + 8 * v73) + 64;
        v135 = v81;
        v135.i32[0] = v134 | (v134 << 16);
        v105 = (int16x8_t)vqtbl1q_s8(v135, a42);
        v136 = v81;
        v136.i32[0] = (8 * a51 - v133) | ((8 * a51 - v133) << 16);
        v104 = (int16x8_t)vqtbl1q_s8(v136, a42);
        v137 = v81;
        v137.i32[0] = (8 * v73 - v133) | ((8 * v73 - v133) << 16);
        v138 = (int16x8_t)vqtbl1q_s8(v137, a42);
        v139 = v81;
        v139.i32[0] = 65537 * v73 * a51;
        v140 = (int16x8_t)vqtbl1q_s8(v139, a42);
        *(int16x8_t *)(v79 - 224) = v105;
        *(int16x8_t *)(v79 - 208) = v104;
        *(int16x8_t *)(v79 - 192) = v138;
        *(int16x8_t *)(v79 - 176) = v140;
        _X9 = (char *)_X26 + v80;
        __asm { PRFM            #0, [X9] }
        *(uint8x8_t *)v101.i8 = *_X26;
        v143 = vqtbl1q_s8((int8x16_t)v101, (int8x16_t)xmmword_2160EE810);
        v143.i16[3] = _X26[1].i16[0];
        v144 = (int16x8_t)vzip1q_s8(v143, v81);
        v101 = (int16x8_t)vzip1q_s8((int8x16_t)v101, v81);
        do
        {
          _X9 = (char *)_X26 + a36;
          _X26 = (uint8x8_t *)((char *)_X26 + v80);
          __asm { PRFM            #0, [X9] }
          v147 = vmlaq_s16(vmulq_s16(v104, v144), v105, v101);
          *(uint8x8_t *)v144.i8 = *_X26;
          v101 = (int16x8_t)vzip1q_s8((int8x16_t)v144, v81);
          v148 = vqtbl1q_s8((int8x16_t)v144, (int8x16_t)xmmword_2160EE810);
          v148.i16[3] = _X26[1].i16[0];
          v144 = (int16x8_t)vzip1q_s8(v148, v81);
          *(uint16x8_t *)((char *)&STACK[0x640] + v132) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v147, v138, v101), v140, v144), v93), v94);
          v132 += 16;
        }
        while ((_DWORD)v132 != 64);
LABEL_22:
        if (a34 == 64)
        {
          __asm { PRFM            #0, [X15] }
          v156 = (_WORD *)(a46 + a27 + a48 + a26 + 8);
          v157 = 5;
          v152 = a35;
          v149 = a69;
          do
          {
            _X11 = (char *)v156 + v80;
            __asm { PRFUM           #0, [X11,#-8] }
            v105.i64[0] = *((_QWORD *)v156 - 1);
            v160 = vextq_s8((int8x16_t)v105, v81, 2uLL);
            v160.i16[3] = *v156;
            v161 = vrhadd_u8(*(uint8x8_t *)v105.i8, *(uint8x8_t *)v160.i8);
            v160.i64[0] = v81.i64[0];
            vst2_s8(v152, *(int8x8x2_t *)((char *)&v160 - 8));
            v152 += 16;
            v156 = (_WORD *)((char *)v156 + v80);
            --v157;
          }
          while (v157 > 2);
          v105.i64[0] = *((_QWORD *)v156 - 1);
          v162 = (uint8x16_t)vextq_s8((int8x16_t)v105, v81, 2uLL);
          v162.i16[3] = *v156;
          v105.i64[0] = vrhaddq_u8((uint8x16_t)v105, v162).u64[0];
        }
        else
        {
          v149 = a69;
          if (a34 == 4)
          {
            _X8 = (uint64_t)v71 + v80;
            __asm { PRFM            #0, [X8] }
            *(int8x8_t *)v105.i8 = *v71;
            v165 = 5;
            v152 = a35;
            do
            {
              _X10 = (char *)_X15 + v109;
              __asm { PRFM            #0, [X10] }
              *(int8x8_t *)v104.i8 = *(int8x8_t *)((char *)_X15 + v80);
              v195.val[0] = (int8x8_t)vrhadd_u8(*(uint8x8_t *)v105.i8, *(uint8x8_t *)v104.i8);
              v195.val[1] = (int8x8_t)v81.i64[0];
              vst2_s8(v152, v195);
              v152 += 16;
              --v165;
              _X15 = (int8x8_t *)((char *)_X15 + v80);
              v105 = v104;
            }
            while (v165 > 2);
            *(int8x8_t *)v105.i8 = *(int8x8_t *)((char *)_X15 + v80);
            v105.i64[0] = vrhaddq_u8((uint8x16_t)v104, (uint8x16_t)v105).u64[0];
          }
          else
          {
            if (a34)
            {
              v169 = 0;
              v170 = v74 * a52;
              v171 = v74 * a52 - (8 * a52 + 8 * v74) + 64;
              v172 = v81;
              v172.i32[0] = v171 | (v171 << 16);
              v173 = (int16x8_t)vqtbl1q_s8(v172, a42);
              v174 = v81;
              v174.i32[0] = (8 * a52 - v170) | ((8 * a52 - v170) << 16);
              v175 = (int16x8_t)vqtbl1q_s8(v174, a42);
              v176 = v81;
              v176.i32[0] = (8 * v74 - v170) | ((8 * v74 - v170) << 16);
              v177 = (int16x8_t)vqtbl1q_s8(v176, a42);
              v178 = v81;
              v178.i32[0] = 65537 * v74 * a52;
              v179 = (int16x8_t)vqtbl1q_s8(v178, a42);
              *(int16x8_t *)(v79 - 160) = v173;
              *(int16x8_t *)(v79 - 144) = v175;
              *(int16x8_t *)(v79 - 128) = v177;
              *(int16x8_t *)(v79 - 112) = v179;
              _X9 = (uint64_t)v71 + v80;
              __asm { PRFM            #0, [X9] }
              *(int8x8_t *)v101.i8 = *v71;
              v182 = vqtbl1q_s8((int8x16_t)v101, (int8x16_t)xmmword_2160EE810);
              v182.i16[3] = v71[1].i16[0];
              v183 = (int16x8_t)vzip1q_s8(v182, v81);
              v184 = (int16x8_t)vzip1q_s8((int8x16_t)v101, v81);
              do
              {
                _X9 = (char *)_X15 + v109;
                __asm { PRFM            #0, [X9] }
                v187 = vmlaq_s16(vmulq_s16(v175, v183), v173, v184);
                *(int8x8_t *)v183.i8 = *(int8x8_t *)((char *)_X15 + v80);
                v184 = (int16x8_t)vzip1q_s8((int8x16_t)v183, v81);
                v188 = vqtbl1q_s8((int8x16_t)v183, (int8x16_t)xmmword_2160EE810);
                v188.i16[3] = *(__int16 *)((char *)_X15[1].i16 + v80);
                v183 = (int16x8_t)vzip1q_s8(v188, v81);
                *(uint16x8_t *)&a35[v169] = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v187, v177, v184), v179, v183), v93), v94);
                v169 += 16;
                _X15 = (int8x8_t *)((char *)_X15 + v80);
              }
              while ((_DWORD)v169 != 64);
LABEL_37:
              v189 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x640], *(uint16x8_t *)&STACK[0x740]);
              v190 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x650], *(uint16x8_t *)&STACK[0x750]);
              v191 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x660], *(uint16x8_t *)&STACK[0x760]);
              if (v149)
              {
                v189 = vaddq_s16(*a49, v189);
                v190 = vaddq_s16(a49[2], v190);
                v191 = vaddq_s16(a49[4], v191);
              }
              *v72 = vqmovun_s16(v189);
              *(int8x8_t *)((char *)v72 + v80) = vqmovun_s16(v190);
              *(int8x8_t *)((char *)v72 + v70) = vqmovun_s16(v191);
              JUMPOUT(0x21604A7E0);
            }
            __asm { PRFM            #0, [X15] }
            v151 = 5;
            v152 = a35;
            do
            {
              v153 = _X15;
              _X15 = (int8x8_t *)((char *)_X15 + v80);
              __asm { PRFM            #0, [X15] }
              v193.val[0] = *v153;
              v193.val[1] = (int8x8_t)v81.i64[0];
              vst2_s8(v152, v193);
              v152 += 16;
              --v151;
            }
            while (v151 > 2);
            *(int8x8_t *)v105.i8 = *_X15;
          }
        }
        v168 = v81.i64[0];
        vst2_s8(v152, (int8x8x2_t)v105);
        goto LABEL_37;
      }
      __asm { PRFM            #0, [X26] }
      v115 = (char *)&STACK[0x640];
      for (j = 5; j > 2; --j)
      {
        v117 = (int8x8_t *)_X26;
        _X26 = (uint8x8_t *)((char *)_X26 + v80);
        __asm { PRFM            #0, [X26] }
        v192.val[0] = *v117;
        v192.val[1] = (int8x8_t)v81.i64[0];
        vst2_s8(v115, v192);
        v115 += 16;
      }
      *(uint8x8_t *)v105.i8 = *_X26;
    }
  }
  v131 = v81.i64[0];
  vst2_s8(v115, (int8x8x2_t)v105);
  goto LABEL_22;
}

void sub_2160493B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34,char *a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int8x16_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int16x8_t *a49,int a50,int a51,int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61,uint64_t a62,uint64_t a63)
{
  uint64_t a69;
  uint64_t a70;
  uint64_t v70;
  int8x8_t *v71;
  int8x8_t *v72;
  int v73;
  int v74;
  int16x8_t *v75;
  uint64_t v76;
  int8x8_t *v78;
  uint64_t v79;
  uint64_t v80;
  int8x16_t v81;
  int16x8_t v82;
  int16x8_t v83;
  uint64_t v84;
  int8x16_t *v85;
  int16x8_t v86;
  uint16x8_t v87;
  int8x16_t v89;
  int16x8_t v90;
  int16x8_t v91;
  char v92;
  unint64_t *v93;
  char v94;
  int16x8_t v95;
  int16x8_t v96;
  int16x8_t v97;
  int16x8_t v98;
  int16x8_t v99;
  int16x8_t v100;
  int16x8_t v101;
  int16x8_t v102;
  uint64_t v103;
  char *v109;
  unsigned int j;
  int8x8_t *v111;
  unsigned int v114;
  uint8x8_t *v115;
  int8x16_t v117;
  uint8x8_t v118;
  uint8x16_t v121;
  unsigned int i;
  uint64_t v125;
  uint64_t v126;
  int v127;
  int v128;
  int8x16_t v129;
  int8x16_t v130;
  int8x16_t v131;
  int16x8_t v132;
  int8x16_t v133;
  int16x8_t v134;
  int8x16_t v137;
  int16x8_t v138;
  int16x8_t v141;
  int8x16_t v142;
  uint64_t v143;
  unsigned int v145;
  char *v146;
  int8x8_t *v147;
  _WORD *v150;
  unsigned int v151;
  int8x16_t v154;
  uint8x8_t v155;
  uint8x16_t v156;
  unsigned int v159;
  uint64_t v162;
  uint64_t v163;
  int v164;
  int v165;
  int8x16_t v166;
  int16x8_t v167;
  int8x16_t v168;
  int16x8_t v169;
  int8x16_t v170;
  int16x8_t v171;
  int8x16_t v172;
  int16x8_t v173;
  int8x16_t v176;
  int16x8_t v177;
  int16x8_t v178;
  int16x8_t v181;
  int8x16_t v182;
  int16x8_t v183;
  int16x8_t v184;
  int16x8_t v185;
  int8x8x2_t v186;
  int8x8x2_t v187;
  int8x8x2_t v188;
  int8x8x2_t v189;

  v84 = 0;
  v85 = (int8x16_t *)(v76 - 2);
  v86.i64[0] = 0x20002000200020;
  v86.i64[1] = 0x20002000200020;
  v87.i64[0] = 0x5000500050005;
  v87.i64[1] = 0x5000500050005;
  _X15 = v71;
  do
  {
    v89 = *v85;
    v85 = (int8x16_t *)((char *)v85 + v80);
    v90 = (int16x8_t)vzip1q_s8(vextq_s8(v89, v89, 2uLL), v81);
    v91 = vsubq_s16(vshlq_n_s16(vaddq_s16(v90, (int16x8_t)vzip1q_s8(vextq_s8(v89, v89, 3uLL), v81)), 2uLL), vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v89, v89, 1uLL), v81), (int16x8_t)vzip1q_s8(vextq_s8(v89, v89, 4uLL), v81)));
    *(uint16x8_t *)(a1 + v84) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vshlq_n_s16(v91, 2uLL), vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v89, v81), (int16x8_t)vzip1q_s8(vextq_s8(v89, v89, 5uLL), v81)), v91)), v82), v83))), (uint16x8_t)v90);
    v84 += 16;
  }
  while ((_DWORD)v84 != 128);
  v92 = 1;
  v93 = &STACK[0x240];
  do
  {
    v94 = v92;
    v95 = *((int16x8_t *)v93 + 3);
    v96 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)v93, *((uint16x8_t *)v93 + 32));
    v97 = (int16x8_t)vrhaddq_u16(*((uint16x8_t *)v93 + 1), *((uint16x8_t *)v93 + 33));
    v98 = (int16x8_t)vrhaddq_u16(*((uint16x8_t *)v93 + 2), *((uint16x8_t *)v93 + 34));
    v99 = (int16x8_t)vrhaddq_u16((uint16x8_t)v95, *((uint16x8_t *)v93 + 35));
    if (a70)
    {
      v100 = *v75;
      v95 = v75[2];
      v101 = v75[4];
      v102 = v75[6];
      v75 += 8;
      v96 = vaddq_s16(v100, v96);
      v97 = vaddq_s16(v95, v97);
      v98 = vaddq_s16(v101, v98);
      v99 = vaddq_s16(v102, v99);
    }
    v92 = 0;
    v93 += 8;
    *v78 = vqmovun_s16(v96);
    *(int8x8_t *)((char *)v78 + v80) = vqmovun_s16(v97);
    *(int8x8_t *)((char *)v78 + v70) = vqmovun_s16(v98);
    *(int8x8_t *)((char *)v78 + a54) = vqmovun_s16(v99);
    v78 = (int8x8_t *)((char *)v78 + a39);
  }
  while ((v94 & 1) != 0);
  if (a61 == 64)
  {
    __asm { PRFM            #0, [X26] }
    v109 = (char *)&STACK[0x640];
    v114 = 5;
    v103 = a36;
    do
    {
      v115 = _X26;
      _X26 = (uint8x8_t *)((char *)_X26 + v80);
      __asm { PRFM            #0, [X26] }
      *(uint8x8_t *)v99.i8 = *v115;
      v117 = vextq_s8((int8x16_t)v99, v81, 2uLL);
      v117.i16[3] = v115[1].i16[0];
      v118 = vrhadd_u8(*v115, *(uint8x8_t *)v117.i8);
      v117.i64[0] = v81.i64[0];
      vst2_s8(v109, *(int8x8x2_t *)((char *)&v117 - 8));
      v109 += 16;
      --v114;
    }
    while (v114 > 2);
    *(uint8x8_t *)v99.i8 = *_X26;
    v98 = (int16x8_t)vextq_s8((int8x16_t)v99, v81, 2uLL);
    v98.i16[3] = _X26[1].i16[0];
    v99 = (int16x8_t)vrhaddq_u8((uint8x16_t)v99, (uint8x16_t)v98);
  }
  else
  {
    v103 = a36;
    if (a61 == 4)
    {
      _X8 = (char *)_X26 + v80;
      __asm { PRFM            #0, [X8] }
      *(uint8x8_t *)v121.i8 = *_X26;
      v109 = (char *)&STACK[0x640];
      for (i = 5; i > 2; --i)
      {
        _X10 = (char *)_X26 + a36;
        _X26 = (uint8x8_t *)((char *)_X26 + v80);
        __asm { PRFM            #0, [X10] }
        *(uint8x8_t *)v98.i8 = *_X26;
        v188.val[0] = (int8x8_t)vrhadd_u8(*(uint8x8_t *)v121.i8, *_X26);
        v188.val[1] = (int8x8_t)v81.i64[0];
        vst2_s8(v109, v188);
        v109 += 16;
        v121 = (uint8x16_t)v98;
      }
      *(uint8x8_t *)v121.i8 = *(uint8x8_t *)((char *)_X26 + v80);
      v99 = (int16x8_t)vrhaddq_u8((uint8x16_t)v98, v121);
    }
    else
    {
      if (a61)
      {
        v126 = 0;
        v127 = v73 * a51;
        v128 = v73 * a51 - (8 * a51 + 8 * v73) + 64;
        v129 = v81;
        v129.i32[0] = v128 | (v128 << 16);
        v99 = (int16x8_t)vqtbl1q_s8(v129, a42);
        v130 = v81;
        v130.i32[0] = (8 * a51 - v127) | ((8 * a51 - v127) << 16);
        v98 = (int16x8_t)vqtbl1q_s8(v130, a42);
        v131 = v81;
        v131.i32[0] = (8 * v73 - v127) | ((8 * v73 - v127) << 16);
        v132 = (int16x8_t)vqtbl1q_s8(v131, a42);
        v133 = v81;
        v133.i32[0] = 65537 * v73 * a51;
        v134 = (int16x8_t)vqtbl1q_s8(v133, a42);
        *(int16x8_t *)(v79 - 224) = v99;
        *(int16x8_t *)(v79 - 208) = v98;
        *(int16x8_t *)(v79 - 192) = v132;
        *(int16x8_t *)(v79 - 176) = v134;
        _X9 = (char *)_X26 + v80;
        __asm { PRFM            #0, [X9] }
        *(uint8x8_t *)v95.i8 = *_X26;
        v137 = vqtbl1q_s8((int8x16_t)v95, (int8x16_t)xmmword_2160EE810);
        v137.i16[3] = _X26[1].i16[0];
        v138 = (int16x8_t)vzip1q_s8(v137, v81);
        v95 = (int16x8_t)vzip1q_s8((int8x16_t)v95, v81);
        do
        {
          _X9 = (char *)_X26 + a36;
          _X26 = (uint8x8_t *)((char *)_X26 + v80);
          __asm { PRFM            #0, [X9] }
          v141 = vmlaq_s16(vmulq_s16(v98, v138), v99, v95);
          *(uint8x8_t *)v138.i8 = *_X26;
          v95 = (int16x8_t)vzip1q_s8((int8x16_t)v138, v81);
          v142 = vqtbl1q_s8((int8x16_t)v138, (int8x16_t)xmmword_2160EE810);
          v142.i16[3] = _X26[1].i16[0];
          v138 = (int16x8_t)vzip1q_s8(v142, v81);
          *(uint16x8_t *)((char *)&STACK[0x640] + v126) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v141, v132, v95), v134, v138), v86), v87);
          v126 += 16;
        }
        while ((_DWORD)v126 != 64);
LABEL_22:
        if (a34 == 64)
        {
          __asm { PRFM            #0, [X15] }
          v150 = (_WORD *)(a46 + a27 + a48 + a26 + 8);
          v151 = 5;
          v146 = a35;
          v143 = a69;
          do
          {
            _X11 = (char *)v150 + v80;
            __asm { PRFUM           #0, [X11,#-8] }
            v99.i64[0] = *((_QWORD *)v150 - 1);
            v154 = vextq_s8((int8x16_t)v99, v81, 2uLL);
            v154.i16[3] = *v150;
            v155 = vrhadd_u8(*(uint8x8_t *)v99.i8, *(uint8x8_t *)v154.i8);
            v154.i64[0] = v81.i64[0];
            vst2_s8(v146, *(int8x8x2_t *)((char *)&v154 - 8));
            v146 += 16;
            v150 = (_WORD *)((char *)v150 + v80);
            --v151;
          }
          while (v151 > 2);
          v99.i64[0] = *((_QWORD *)v150 - 1);
          v156 = (uint8x16_t)vextq_s8((int8x16_t)v99, v81, 2uLL);
          v156.i16[3] = *v150;
          v99.i64[0] = vrhaddq_u8((uint8x16_t)v99, v156).u64[0];
        }
        else
        {
          v143 = a69;
          if (a34 == 4)
          {
            _X8 = (uint64_t)v71 + v80;
            __asm { PRFM            #0, [X8] }
            *(int8x8_t *)v99.i8 = *v71;
            v159 = 5;
            v146 = a35;
            do
            {
              _X10 = (char *)_X15 + v103;
              __asm { PRFM            #0, [X10] }
              *(int8x8_t *)v98.i8 = *(int8x8_t *)((char *)_X15 + v80);
              v189.val[0] = (int8x8_t)vrhadd_u8(*(uint8x8_t *)v99.i8, *(uint8x8_t *)v98.i8);
              v189.val[1] = (int8x8_t)v81.i64[0];
              vst2_s8(v146, v189);
              v146 += 16;
              --v159;
              _X15 = (int8x8_t *)((char *)_X15 + v80);
              v99 = v98;
            }
            while (v159 > 2);
            *(int8x8_t *)v99.i8 = *(int8x8_t *)((char *)_X15 + v80);
            v99.i64[0] = vrhaddq_u8((uint8x16_t)v98, (uint8x16_t)v99).u64[0];
          }
          else
          {
            if (a34)
            {
              v163 = 0;
              v164 = v74 * a52;
              v165 = v74 * a52 - (8 * a52 + 8 * v74) + 64;
              v166 = v81;
              v166.i32[0] = v165 | (v165 << 16);
              v167 = (int16x8_t)vqtbl1q_s8(v166, a42);
              v168 = v81;
              v168.i32[0] = (8 * a52 - v164) | ((8 * a52 - v164) << 16);
              v169 = (int16x8_t)vqtbl1q_s8(v168, a42);
              v170 = v81;
              v170.i32[0] = (8 * v74 - v164) | ((8 * v74 - v164) << 16);
              v171 = (int16x8_t)vqtbl1q_s8(v170, a42);
              v172 = v81;
              v172.i32[0] = 65537 * v74 * a52;
              v173 = (int16x8_t)vqtbl1q_s8(v172, a42);
              *(int16x8_t *)(v79 - 160) = v167;
              *(int16x8_t *)(v79 - 144) = v169;
              *(int16x8_t *)(v79 - 128) = v171;
              *(int16x8_t *)(v79 - 112) = v173;
              _X9 = (uint64_t)v71 + v80;
              __asm { PRFM            #0, [X9] }
              *(int8x8_t *)v95.i8 = *v71;
              v176 = vqtbl1q_s8((int8x16_t)v95, (int8x16_t)xmmword_2160EE810);
              v176.i16[3] = v71[1].i16[0];
              v177 = (int16x8_t)vzip1q_s8(v176, v81);
              v178 = (int16x8_t)vzip1q_s8((int8x16_t)v95, v81);
              do
              {
                _X9 = (char *)_X15 + v103;
                __asm { PRFM            #0, [X9] }
                v181 = vmlaq_s16(vmulq_s16(v169, v177), v167, v178);
                *(int8x8_t *)v177.i8 = *(int8x8_t *)((char *)_X15 + v80);
                v178 = (int16x8_t)vzip1q_s8((int8x16_t)v177, v81);
                v182 = vqtbl1q_s8((int8x16_t)v177, (int8x16_t)xmmword_2160EE810);
                v182.i16[3] = *(__int16 *)((char *)_X15[1].i16 + v80);
                v177 = (int16x8_t)vzip1q_s8(v182, v81);
                *(uint16x8_t *)&a35[v163] = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v181, v171, v178), v173, v177), v86), v87);
                v163 += 16;
                _X15 = (int8x8_t *)((char *)_X15 + v80);
              }
              while ((_DWORD)v163 != 64);
LABEL_37:
              v183 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x640], *(uint16x8_t *)&STACK[0x740]);
              v184 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x650], *(uint16x8_t *)&STACK[0x750]);
              v185 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x660], *(uint16x8_t *)&STACK[0x760]);
              if (v143)
              {
                v183 = vaddq_s16(*a49, v183);
                v184 = vaddq_s16(a49[2], v184);
                v185 = vaddq_s16(a49[4], v185);
              }
              *v72 = vqmovun_s16(v183);
              *(int8x8_t *)((char *)v72 + v80) = vqmovun_s16(v184);
              *(int8x8_t *)((char *)v72 + v70) = vqmovun_s16(v185);
              JUMPOUT(0x21604A7E0);
            }
            __asm { PRFM            #0, [X15] }
            v145 = 5;
            v146 = a35;
            do
            {
              v147 = _X15;
              _X15 = (int8x8_t *)((char *)_X15 + v80);
              __asm { PRFM            #0, [X15] }
              v187.val[0] = *v147;
              v187.val[1] = (int8x8_t)v81.i64[0];
              vst2_s8(v146, v187);
              v146 += 16;
              --v145;
            }
            while (v145 > 2);
            *(int8x8_t *)v99.i8 = *_X15;
          }
        }
        v162 = v81.i64[0];
        vst2_s8(v146, (int8x8x2_t)v99);
        goto LABEL_37;
      }
      __asm { PRFM            #0, [X26] }
      v109 = (char *)&STACK[0x640];
      for (j = 5; j > 2; --j)
      {
        v111 = (int8x8_t *)_X26;
        _X26 = (uint8x8_t *)((char *)_X26 + v80);
        __asm { PRFM            #0, [X26] }
        v186.val[0] = *v111;
        v186.val[1] = (int8x8_t)v81.i64[0];
        vst2_s8(v109, v186);
        v109 += 16;
      }
      *(uint8x8_t *)v99.i8 = *_X26;
    }
  }
  v125 = v81.i64[0];
  vst2_s8(v109, (int8x8x2_t)v99);
  goto LABEL_22;
}

void sub_216049460(char *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34,char *a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int8x16_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int16x8_t *a49,int a50,int a51,int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61,uint64_t a62,uint64_t a63)
{
  uint64_t a69;
  uint64_t a70;
  uint64_t v70;
  int8x8_t *v71;
  int8x8_t *v72;
  int v73;
  int v74;
  int16x8_t *v75;
  uint64_t v76;
  int8x8_t *v78;
  uint64_t v79;
  int8x16_t v80;
  unint64_t v81;
  int16x8_t v82;
  uint16x8_t v83;
  char v85;
  unint64_t *v86;
  char v87;
  int16x8_t v88;
  int16x8_t v89;
  int16x8_t v90;
  int16x8_t v91;
  int16x8_t v92;
  int16x8_t v93;
  int16x8_t v94;
  int16x8_t v95;
  uint64_t v96;
  char *v102;
  unsigned int j;
  int8x8_t *v104;
  unsigned int v107;
  uint8x8_t *v108;
  int8x16_t v110;
  uint8x8_t v111;
  uint8x16_t v114;
  unsigned int i;
  uint64_t v118;
  uint64_t v119;
  int v120;
  int v121;
  int8x16_t v122;
  int8x16_t v123;
  int8x16_t v124;
  int16x8_t v125;
  int8x16_t v126;
  int16x8_t v127;
  int8x16_t v130;
  int16x8_t v131;
  int16x8_t v134;
  int8x16_t v135;
  uint64_t v136;
  unsigned int v138;
  char *v139;
  int8x8_t *v140;
  _WORD *v143;
  unsigned int v144;
  int8x16_t v147;
  uint8x8_t v148;
  uint8x16_t v149;
  unsigned int v152;
  uint64_t v155;
  uint64_t v156;
  int v157;
  int v158;
  int8x16_t v159;
  int16x8_t v160;
  int8x16_t v161;
  int16x8_t v162;
  int8x16_t v163;
  int16x8_t v164;
  int8x16_t v165;
  int16x8_t v166;
  int8x16_t v169;
  int16x8_t v170;
  int16x8_t v171;
  int16x8_t v174;
  int8x16_t v175;
  int16x8_t v176;
  int16x8_t v177;
  int16x8_t v178;
  int8x8x2_t v179;
  int8x8x2_t v180;
  int8x8x2_t v181;
  int8x8x2_t v182;

  sub_216082AA8(a1, v76, a4, 8, 2, 2u);
  v80 = *(int8x16_t *)&STACK[0x230];
  v81 = STACK[0x210];
  v82.i64[0] = 0x20002000200020;
  v82.i64[1] = 0x20002000200020;
  v83.i64[0] = 0x5000500050005;
  v83.i64[1] = 0x5000500050005;
  _X15 = v71;
  v85 = 1;
  v86 = &STACK[0x240];
  do
  {
    v87 = v85;
    v88 = *((int16x8_t *)v86 + 3);
    v89 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)v86, *((uint16x8_t *)v86 + 32));
    v90 = (int16x8_t)vrhaddq_u16(*((uint16x8_t *)v86 + 1), *((uint16x8_t *)v86 + 33));
    v91 = (int16x8_t)vrhaddq_u16(*((uint16x8_t *)v86 + 2), *((uint16x8_t *)v86 + 34));
    v92 = (int16x8_t)vrhaddq_u16((uint16x8_t)v88, *((uint16x8_t *)v86 + 35));
    if (a70)
    {
      v93 = *v75;
      v88 = v75[2];
      v94 = v75[4];
      v95 = v75[6];
      v75 += 8;
      v89 = vaddq_s16(v93, v89);
      v90 = vaddq_s16(v88, v90);
      v91 = vaddq_s16(v94, v91);
      v92 = vaddq_s16(v95, v92);
    }
    v85 = 0;
    v86 += 8;
    *v78 = vqmovun_s16(v89);
    *(int8x8_t *)((char *)v78 + v81) = vqmovun_s16(v90);
    *(int8x8_t *)((char *)v78 + v70) = vqmovun_s16(v91);
    *(int8x8_t *)((char *)v78 + a54) = vqmovun_s16(v92);
    v78 = (int8x8_t *)((char *)v78 + a39);
  }
  while ((v87 & 1) != 0);
  if (a61 == 64)
  {
    __asm { PRFM            #0, [X26] }
    v102 = (char *)&STACK[0x640];
    v107 = 5;
    v96 = a36;
    do
    {
      v108 = _X26;
      _X26 = (uint8x8_t *)((char *)_X26 + v81);
      __asm { PRFM            #0, [X26] }
      *(uint8x8_t *)v92.i8 = *v108;
      v110 = vextq_s8((int8x16_t)v92, v80, 2uLL);
      v110.i16[3] = v108[1].i16[0];
      v111 = vrhadd_u8(*v108, *(uint8x8_t *)v110.i8);
      v110.i64[0] = v80.i64[0];
      vst2_s8(v102, *(int8x8x2_t *)((char *)&v110 - 8));
      v102 += 16;
      --v107;
    }
    while (v107 > 2);
    *(uint8x8_t *)v92.i8 = *_X26;
    v91 = (int16x8_t)vextq_s8((int8x16_t)v92, v80, 2uLL);
    v91.i16[3] = _X26[1].i16[0];
    v92 = (int16x8_t)vrhaddq_u8((uint8x16_t)v92, (uint8x16_t)v91);
  }
  else
  {
    v96 = a36;
    if (a61 == 4)
    {
      _X8 = (char *)_X26 + v81;
      __asm { PRFM            #0, [X8] }
      *(uint8x8_t *)v114.i8 = *_X26;
      v102 = (char *)&STACK[0x640];
      for (i = 5; i > 2; --i)
      {
        _X10 = (char *)_X26 + a36;
        _X26 = (uint8x8_t *)((char *)_X26 + v81);
        __asm { PRFM            #0, [X10] }
        *(uint8x8_t *)v91.i8 = *_X26;
        v181.val[0] = (int8x8_t)vrhadd_u8(*(uint8x8_t *)v114.i8, *_X26);
        v181.val[1] = (int8x8_t)v80.i64[0];
        vst2_s8(v102, v181);
        v102 += 16;
        v114 = (uint8x16_t)v91;
      }
      *(uint8x8_t *)v114.i8 = *(uint8x8_t *)((char *)_X26 + v81);
      v92 = (int16x8_t)vrhaddq_u8((uint8x16_t)v91, v114);
    }
    else
    {
      if (a61)
      {
        v119 = 0;
        v120 = v73 * a51;
        v121 = v73 * a51 - (8 * a51 + 8 * v73) + 64;
        v122 = v80;
        v122.i32[0] = v121 | (v121 << 16);
        v92 = (int16x8_t)vqtbl1q_s8(v122, a42);
        v123 = v80;
        v123.i32[0] = (8 * a51 - v120) | ((8 * a51 - v120) << 16);
        v91 = (int16x8_t)vqtbl1q_s8(v123, a42);
        v124 = v80;
        v124.i32[0] = (8 * v73 - v120) | ((8 * v73 - v120) << 16);
        v125 = (int16x8_t)vqtbl1q_s8(v124, a42);
        v126 = v80;
        v126.i32[0] = 65537 * v73 * a51;
        v127 = (int16x8_t)vqtbl1q_s8(v126, a42);
        *(int16x8_t *)(v79 - 224) = v92;
        *(int16x8_t *)(v79 - 208) = v91;
        *(int16x8_t *)(v79 - 192) = v125;
        *(int16x8_t *)(v79 - 176) = v127;
        _X9 = (char *)_X26 + v81;
        __asm { PRFM            #0, [X9] }
        *(uint8x8_t *)v88.i8 = *_X26;
        v130 = vqtbl1q_s8((int8x16_t)v88, (int8x16_t)xmmword_2160EE810);
        v130.i16[3] = _X26[1].i16[0];
        v131 = (int16x8_t)vzip1q_s8(v130, v80);
        v88 = (int16x8_t)vzip1q_s8((int8x16_t)v88, v80);
        do
        {
          _X9 = (char *)_X26 + a36;
          _X26 = (uint8x8_t *)((char *)_X26 + v81);
          __asm { PRFM            #0, [X9] }
          v134 = vmlaq_s16(vmulq_s16(v91, v131), v92, v88);
          *(uint8x8_t *)v131.i8 = *_X26;
          v88 = (int16x8_t)vzip1q_s8((int8x16_t)v131, v80);
          v135 = vqtbl1q_s8((int8x16_t)v131, (int8x16_t)xmmword_2160EE810);
          v135.i16[3] = _X26[1].i16[0];
          v131 = (int16x8_t)vzip1q_s8(v135, v80);
          *(uint16x8_t *)((char *)&STACK[0x640] + v119) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v134, v125, v88), v127, v131), v82), v83);
          v119 += 16;
        }
        while ((_DWORD)v119 != 64);
LABEL_20:
        if (a34 == 64)
        {
          __asm { PRFM            #0, [X15] }
          v143 = (_WORD *)(a46 + a27 + a48 + a26 + 8);
          v144 = 5;
          v139 = a35;
          v136 = a69;
          do
          {
            _X11 = (char *)v143 + v81;
            __asm { PRFUM           #0, [X11,#-8] }
            v92.i64[0] = *((_QWORD *)v143 - 1);
            v147 = vextq_s8((int8x16_t)v92, v80, 2uLL);
            v147.i16[3] = *v143;
            v148 = vrhadd_u8(*(uint8x8_t *)v92.i8, *(uint8x8_t *)v147.i8);
            v147.i64[0] = v80.i64[0];
            vst2_s8(v139, *(int8x8x2_t *)((char *)&v147 - 8));
            v139 += 16;
            v143 = (_WORD *)((char *)v143 + v81);
            --v144;
          }
          while (v144 > 2);
          v92.i64[0] = *((_QWORD *)v143 - 1);
          v149 = (uint8x16_t)vextq_s8((int8x16_t)v92, v80, 2uLL);
          v149.i16[3] = *v143;
          v92.i64[0] = vrhaddq_u8((uint8x16_t)v92, v149).u64[0];
        }
        else
        {
          v136 = a69;
          if (a34 == 4)
          {
            _X8 = (uint64_t)v71 + v81;
            __asm { PRFM            #0, [X8] }
            *(int8x8_t *)v92.i8 = *v71;
            v152 = 5;
            v139 = a35;
            do
            {
              _X10 = (char *)_X15 + v96;
              __asm { PRFM            #0, [X10] }
              *(int8x8_t *)v91.i8 = *(int8x8_t *)((char *)_X15 + v81);
              v182.val[0] = (int8x8_t)vrhadd_u8(*(uint8x8_t *)v92.i8, *(uint8x8_t *)v91.i8);
              v182.val[1] = (int8x8_t)v80.i64[0];
              vst2_s8(v139, v182);
              v139 += 16;
              --v152;
              _X15 = (int8x8_t *)((char *)_X15 + v81);
              v92 = v91;
            }
            while (v152 > 2);
            *(int8x8_t *)v92.i8 = *(int8x8_t *)((char *)_X15 + v81);
            v92.i64[0] = vrhaddq_u8((uint8x16_t)v91, (uint8x16_t)v92).u64[0];
          }
          else
          {
            if (a34)
            {
              v156 = 0;
              v157 = v74 * a52;
              v158 = v74 * a52 - (8 * a52 + 8 * v74) + 64;
              v159 = v80;
              v159.i32[0] = v158 | (v158 << 16);
              v160 = (int16x8_t)vqtbl1q_s8(v159, a42);
              v161 = v80;
              v161.i32[0] = (8 * a52 - v157) | ((8 * a52 - v157) << 16);
              v162 = (int16x8_t)vqtbl1q_s8(v161, a42);
              v163 = v80;
              v163.i32[0] = (8 * v74 - v157) | ((8 * v74 - v157) << 16);
              v164 = (int16x8_t)vqtbl1q_s8(v163, a42);
              v165 = v80;
              v165.i32[0] = 65537 * v74 * a52;
              v166 = (int16x8_t)vqtbl1q_s8(v165, a42);
              *(int16x8_t *)(v79 - 160) = v160;
              *(int16x8_t *)(v79 - 144) = v162;
              *(int16x8_t *)(v79 - 128) = v164;
              *(int16x8_t *)(v79 - 112) = v166;
              _X9 = (uint64_t)v71 + v81;
              __asm { PRFM            #0, [X9] }
              *(int8x8_t *)v88.i8 = *v71;
              v169 = vqtbl1q_s8((int8x16_t)v88, (int8x16_t)xmmword_2160EE810);
              v169.i16[3] = v71[1].i16[0];
              v170 = (int16x8_t)vzip1q_s8(v169, v80);
              v171 = (int16x8_t)vzip1q_s8((int8x16_t)v88, v80);
              do
              {
                _X9 = (char *)_X15 + v96;
                __asm { PRFM            #0, [X9] }
                v174 = vmlaq_s16(vmulq_s16(v162, v170), v160, v171);
                *(int8x8_t *)v170.i8 = *(int8x8_t *)((char *)_X15 + v81);
                v171 = (int16x8_t)vzip1q_s8((int8x16_t)v170, v80);
                v175 = vqtbl1q_s8((int8x16_t)v170, (int8x16_t)xmmword_2160EE810);
                v175.i16[3] = *(__int16 *)((char *)_X15[1].i16 + v81);
                v170 = (int16x8_t)vzip1q_s8(v175, v80);
                *(uint16x8_t *)&a35[v156] = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v174, v164, v171), v166, v170), v82), v83);
                v156 += 16;
                _X15 = (int8x8_t *)((char *)_X15 + v81);
              }
              while ((_DWORD)v156 != 64);
LABEL_35:
              v176 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x640], *(uint16x8_t *)&STACK[0x740]);
              v177 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x650], *(uint16x8_t *)&STACK[0x750]);
              v178 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)&STACK[0x660], *(uint16x8_t *)&STACK[0x760]);
              if (v136)
              {
                v176 = vaddq_s16(*a49, v176);
                v177 = vaddq_s16(a49[2], v177);
                v178 = vaddq_s16(a49[4], v178);
              }
              *v72 = vqmovun_s16(v176);
              *(int8x8_t *)((char *)v72 + v81) = vqmovun_s16(v177);
              *(int8x8_t *)((char *)v72 + v70) = vqmovun_s16(v178);
              JUMPOUT(0x21604A7E0);
            }
            __asm { PRFM            #0, [X15] }
            v138 = 5;
            v139 = a35;
            do
            {
              v140 = _X15;
              _X15 = (int8x8_t *)((char *)_X15 + v81);
              __asm { PRFM            #0, [X15] }
              v180.val[0] = *v140;
              v180.val[1] = (int8x8_t)v80.i64[0];
              vst2_s8(v139, v180);
              v139 += 16;
              --v138;
            }
            while (v138 > 2);
            *(int8x8_t *)v92.i8 = *_X15;
          }
        }
        v155 = v80.i64[0];
        vst2_s8(v139, (int8x8x2_t)v92);
        goto LABEL_35;
      }
      __asm { PRFM            #0, [X26] }
      v102 = (char *)&STACK[0x640];
      for (j = 5; j > 2; --j)
      {
        v104 = (int8x8_t *)_X26;
        _X26 = (uint8x8_t *)((char *)_X26 + v81);
        __asm { PRFM            #0, [X26] }
        v179.val[0] = *v104;
        v179.val[1] = (int8x8_t)v80.i64[0];
        vst2_s8(v102, v179);
        v102 += 16;
      }
      *(uint8x8_t *)v92.i8 = *_X26;
    }
  }
  v118 = v80.i64[0];
  vst2_s8(v102, (int8x8x2_t)v92);
  goto LABEL_20;
}

void sub_216049B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_216080ED8((uint16x8_t *)&STACK[0x240], 0x10u, a3, STACK[0x208], 16);
  JUMPOUT(0x216049D68);
}

void sub_21604A02C()
{
  uint64_t v0;

  sub_216080ED8((uint16x8_t *)&STACK[0x240], 0x10u, v0, STACK[0x208], 4);
  JUMPOUT(0x21604A2B0);
}

void sub_21604A368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_216080ED8((uint16x8_t *)&STACK[0x240], 0x10u, a3, STACK[0x208], 8);
  JUMPOUT(0x21604A53CLL);
}

void sub_21604A8B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int8x16_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int16x8_t *a66;
  uint64_t a67;
  int v67;
  uint64_t v68;
  int8x16_t *v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  int v77;
  __int128 v78;
  int8x16_t v79;
  int16x8_t v80;
  int16x8_t v81;
  int16x8_t v82;
  int16x8_t v83;
  uint8x16_t v90;
  char *i8;
  unsigned int v92;
  __int128 v93;
  uint64_t v94;
  char *v95;
  uint8x16_t v98;
  int8x16_t v99;
  int8x16_t v100;
  int8x16_t *v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unsigned int i;
  int8x16_t *v107;
  uint8x16_t v109;
  int8x16_t v110;
  uint8x16_t v111;
  char v112;
  char v113;
  char v114;
  char v115;
  char v116;
  char v117;
  char v118;
  char v119;
  uint64_t v120;
  int8x16_t v123;
  int16x8_t v124;
  int16x8_t v125;
  uint64_t v126;
  int16x8_t v127;
  uint16x8_t v128;
  int8x16_t *v129;
  int16x8_t v132;
  int8x16_t v133;
  uint64_t v134;
  int8x16_t v137;
  int16x8_t v138;
  int16x8_t v139;
  uint64_t v140;
  int16x8_t v141;
  uint16x8_t v142;
  int16x8_t v145;
  int8x16_t v146;
  uint64_t v147;
  int16x8_t *v148;
  int16x8_t v149;
  int16x8_t v150;
  int16x8_t v151;
  int16x8_t v152;
  int16x8_t v153;
  int16x8_t v154;
  int16x8_t v155;
  int16x8_t v156;
  int v157;
  unint64_t v158;
  int v159;
  unint64_t v160;

  v74 = 0;
  if (a67)
  {
    v75 = 0;
    do
    {
      *(int8x16_t *)(a57 + v75) = vqmovun_high_s16(vqmovun_s16(vaddq_s16(*(int16x8_t *)(a67 + v74), (int16x8_t)vzip1q_s8(*(int8x16_t *)(v68 + v75), (int8x16_t)0))), vaddq_s16(*(int16x8_t *)(a67 + v74 + 16), (int16x8_t)vzip2q_s8(*(int8x16_t *)(v68 + v75), (int8x16_t)0)));
      v75 += STACK[0x208];
      v74 += 32;
    }
    while ((_DWORD)v74 != 512);
  }
  else
  {
    v159 = 16;
    v160 = STACK[0x208];
    do
    {
      *(_OWORD *)(a57 + v74) = *(_OWORD *)(v68 + v74);
      v74 += v160;
      --v159;
    }
    while (v159);
  }
  if (!a7)
  {
    v102 = 0;
    if (a66)
    {
      v103 = 0;
      v104 = STACK[0x208];
      do
      {
        *(int8x16_t *)((char *)v70 + v103) = vqmovun_high_s16(vqmovun_s16(vaddq_s16(*(int16x8_t *)((char *)a66 + v102), (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)_X24 + v103), (int8x16_t)0))), vaddq_s16(*(int16x8_t *)((char *)&a66[1] + v102), (int16x8_t)vzip2q_s8(*(int8x16_t *)((char *)_X24 + v103), (int8x16_t)0)));
        v103 += v104;
        v102 += 32;
      }
      while ((_DWORD)v102 != 256);
    }
    else
    {
      v157 = 8;
      v158 = STACK[0x208];
      do
      {
        *(int8x16_t *)((char *)v70 + v102) = *(int8x16_t *)((char *)_X24 + v102);
        v102 += v158;
        --v157;
      }
      while (v157);
    }
    goto LABEL_26;
  }
  v76 = v67 * v71;
  v77 = v67 * v71 - (8 * v71 + 8 * v67) + 64;
  v78 = 0uLL;
  v79.i64[1] = a41.i64[1];
  v80 = (int16x8_t)vqtbl1q_s8((int8x16_t)(v77 | (v77 << 16)), a41);
  v81 = (int16x8_t)vqtbl1q_s8((int8x16_t)((8 * v71 - v76) | ((8 * v71 - v76) << 16)), a41);
  v82 = (int16x8_t)vqtbl1q_s8((int8x16_t)((8 * v67 - v76) | ((8 * v67 - v76) << 16)), a41);
  *(int16x8_t *)(v72 - 224) = v80;
  *(int16x8_t *)(v72 - 208) = v81;
  v83 = (int16x8_t)vqtbl1q_s8((int8x16_t)(65537 * v67 * v71), a41);
  *(int16x8_t *)(v72 - 192) = v82;
  *(int16x8_t *)(v72 - 176) = v83;
  if (a7 == 64)
  {
    __asm { PRFM            #0, [X24] }
    v101 = (int8x16_t *)&STACK[0x620];
    for (i = 9; i > 2; --i)
    {
      v107 = _X24;
      _X24 = (int8x16_t *)((char *)_X24 + v73);
      __asm { PRFM            #0, [X24] }
      v109 = (uint8x16_t)vextq_s8(*v107, *v107, 2uLL);
      v109.i16[7] = v107[1].i16[0];
      v110 = (int8x16_t)vrhaddq_u8(*(uint8x16_t *)v107, v109);
      v101[3] = vzip2q_s8(v110, (int8x16_t)0);
      v101 += 2;
      vst2_s8(v101->i8, *(int8x8x2_t *)((char *)&v78 - 8));
    }
    v111 = (uint8x16_t)vextq_s8(*_X24, *_X24, 2uLL);
    v111.i16[7] = _X24[1].i16[0];
    v100 = (int8x16_t)vrhaddq_u8(*(uint8x16_t *)_X24, v111);
    i8 = v101[2].i8;
    v94 = a63;
    goto LABEL_17;
  }
  if (a7 == 4)
  {
    _X8 = &_X24->i8[v73];
    __asm { PRFM            #0, [X8] }
    v90 = *(uint8x16_t *)_X24;
    i8 = (char *)&STACK[0x640];
    v92 = 9;
    v93 = 0uLL;
    v94 = a63;
    do
    {
      v95 = i8;
      _X8 = &_X24->i8[2 * v73];
      _X24 = (int8x16_t *)((char *)_X24 + v73);
      __asm { PRFM            #0, [X8] }
      v98 = *(uint8x16_t *)_X24;
      v99 = (int8x16_t)vrhaddq_u8(v90, *(uint8x16_t *)_X24);
      i8 = v95 + 32;
      vst2_s8(v95, *(int8x8x2_t *)((char *)&v93 - 8));
      v95 += 16;
      *(int8x16_t *)v95 = vzip2q_s8(v99, (int8x16_t)0);
      --v92;
      v90 = v98;
    }
    while (v92 > 2);
    v100 = (int8x16_t)vrhaddq_u8(v98, *(uint8x16_t *)((char *)_X24 + v73));
    v101 = (int8x16_t *)(i8 - 32);
LABEL_17:
    v112 = 0;
    v113 = 0;
    v114 = 0;
    v115 = 0;
    v116 = 0;
    v117 = 0;
    v118 = 0;
    v119 = 0;
    vst2_s8(i8, (int8x8x2_t)v100);
    v101[3] = vzip2q_s8(v100, (int8x16_t)0);
    goto LABEL_22;
  }
  v120 = 0;
  *(int16x8_t *)(v72 - 208) = v81;
  *(int16x8_t *)(v72 - 176) = v83;
  _X9 = &_X24->i8[v73];
  __asm { PRFM            #0, [X9] }
  v79.i64[0] = _X24->i64[0];
  v123 = vqtbl1q_s8(v79, (int8x16_t)xmmword_2160EE810);
  v123.i16[3] = _X24->i16[4];
  v124 = (int16x8_t)vzip1q_s8(v123, (int8x16_t)0);
  v125 = (int16x8_t)vzip1q_s8(v79, (int8x16_t)0);
  v126 = 2 * v73;
  v127.i64[0] = 0x20002000200020;
  v127.i64[1] = 0x20002000200020;
  v128.i64[0] = 0x5000500050005;
  v128.i64[1] = 0x5000500050005;
  v129 = _X24;
  v94 = a63;
  do
  {
    _X13 = &v129->i8[v126];
    v129 = (int8x16_t *)((char *)v129 + v73);
    __asm { PRFM            #0, [X13] }
    v132 = vmlaq_s16(vmulq_s16(v81, v124), v80, v125);
    v124.i64[0] = v129->i64[0];
    v125 = (int16x8_t)vzip1q_s8((int8x16_t)v124, (int8x16_t)0);
    v133 = vqtbl1q_s8((int8x16_t)v124, (int8x16_t)xmmword_2160EE810);
    v133.i16[3] = v129->i16[4];
    v124 = (int16x8_t)vzip1q_s8(v133, (int8x16_t)0);
    *(uint16x8_t *)((char *)&STACK[0x640] + v120) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v132, v82, v125), v83, v124), v127), v128);
    v120 += 32;
  }
  while ((_DWORD)v120 != 256);
  v134 = 0;
  _X10 = &_X24->i8[v73 + 8];
  __asm { PRFM            #0, [X10] }
  v127.i64[0] = _X24->i64[1];
  v137 = vqtbl1q_s8((int8x16_t)v127, (int8x16_t)xmmword_2160EE810);
  v137.i16[3] = _X24[1].i16[0];
  v138 = (int16x8_t)vzip1q_s8(v137, (int8x16_t)0);
  v139 = (int16x8_t)vzip1q_s8((int8x16_t)v127, (int8x16_t)0);
  v140 = v126 + 8;
  v141.i64[0] = 0x20002000200020;
  v141.i64[1] = 0x20002000200020;
  v142.i64[0] = 0x5000500050005;
  v142.i64[1] = 0x5000500050005;
  do
  {
    _X11 = &_X24->i8[v140];
    _X24 = (int8x16_t *)((char *)_X24 + v73);
    __asm { PRFM            #0, [X11] }
    v145 = vmlaq_s16(vmulq_s16(v81, v138), v80, v139);
    v138.i64[0] = _X24->i64[1];
    v139 = (int16x8_t)vzip1q_s8((int8x16_t)v138, (int8x16_t)0);
    v146 = vqtbl1q_s8((int8x16_t)v138, (int8x16_t)xmmword_2160EE810);
    v146.i16[3] = _X24[1].i16[0];
    v138 = (int16x8_t)vzip1q_s8(v146, (int8x16_t)0);
    *(uint16x8_t *)((char *)&STACK[0x650] + v134) = vshlq_u16((uint16x8_t)vaddq_s16(vmlaq_s16(vmlaq_s16(v145, v82, v139), v83, v138), v141), v142);
    v134 += 32;
  }
  while ((_DWORD)v134 != 256);
LABEL_22:
  v147 = 0;
  v148 = a66;
  do
  {
    v150 = *(int16x8_t *)((char *)&STACK[0x640] + v147);
    v149 = *(int16x8_t *)((char *)&STACK[0x640] + v147 + 16);
    v152 = *(int16x8_t *)((char *)&STACK[0x640] + v147 + 32);
    v151 = *(int16x8_t *)((char *)&STACK[0x640] + v147 + 48);
    if (a66)
    {
      v153 = *v148;
      v154 = v148[1];
      v155 = v148[2];
      v156 = v148[3];
      v148 += 4;
      v150 = vaddq_s16(v153, v150);
      v149 = vaddq_s16(v154, v149);
      v152 = vaddq_s16(v155, v152);
      v151 = vaddq_s16(v156, v151);
    }
    *v70 = vqmovun_high_s16(vqmovun_s16(v150), v149);
    *(int8x16_t *)((char *)v70 + v73) = vqmovun_high_s16(vqmovun_s16(v152), v151);
    v70 = (int8x16_t *)((char *)v70 + v94);
    v147 += 64;
  }
  while ((_DWORD)v147 != 256);
LABEL_26:
  if (*MEMORY[0x24BDAC8D0] != *(_QWORD *)(v72 - 96))
    JUMPOUT(0x21604B774);
}

uint64_t sub_21604B778(uint64_t result, uint64_t a2)
{
  __int128 v2;
  uint64_t v3;
  __int128 v4;
  __int16 *v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  __int16 *v15;
  __int16 v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  char v22;
  unsigned int v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  char v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  __int16 v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;

  v35 = *(unsigned __int8 *)(result + 1104);
  if (*(_BYTE *)(result + 1104))
  {
    v3 = 0;
    v36 = *(_QWORD **)(a2 + 64);
    v38 = result + 848;
    v33 = 16 * *(_DWORD *)(result + 828);
    v32 = v33 | 0xF;
    v4 = 0uLL;
    v31 = result;
    do
    {
      v5 = (__int16 *)(v38 + 16 * v3);
      v6 = *((unsigned __int8 *)v5 + 15);
      v7 = *(unsigned __int16 *)(result + 858);
      if (v7 >= 0x103)
        v7 = 259;
      v8 = word_254E10E30[40 * v7 + 24 + v3];
      v9 = v8 >> 8;
      v39 = v2;
      v40 = v4;
      if (v6 == 6)
      {
        v10 = *(_QWORD *)(*v36 + 8 * *((unsigned __int8 *)v5 + 8));
        if (!v10)
          return result;
        v30 = word_254E10E30[40 * v7 + 24 + v3];
        v29 = v8 >> 8;
        v37 = *v5;
        v11 = v5[1];
        if ((v32 + (v11 >> 2)) / 16 < 0)
          v12 = -1;
        else
          v12 = (v32 + (v11 >> 2)) / 16;
        if (*(_DWORD *)(v10 + 12) <= v12)
        {
          sub_2160EC880(*(pthread_mutex_t **)(v10 + 16));
          while (*(_DWORD *)(v10 + 12) <= v12)
            sub_2160EC918(*(pthread_cond_t **)(v10 + 24), *(pthread_mutex_t **)(v10 + 16));
          sub_2160EC88C(*(pthread_mutex_t **)(v10 + 16));
        }
        v34 = v3;
        v24 = v5[3];
        v25 = *(_QWORD *)(v36[1] + 8 * *((unsigned __int8 *)v5 + 9));
        if ((v32 + (v24 >> 2)) / 16 < 0)
          v26 = -1;
        else
          v26 = (v32 + (v24 >> 2)) / 16;
        if (*(_DWORD *)(v25 + 12) <= v26)
        {
          sub_2160EC880(*(pthread_mutex_t **)(v25 + 16));
          while (*(_DWORD *)(v25 + 12) <= v26)
            sub_2160EC918(*(pthread_cond_t **)(v25 + 24), *(pthread_mutex_t **)(v25 + 16));
          sub_2160EC88C(*(pthread_mutex_t **)(v25 + 16));
        }
        v2 = v39;
        v4 = v40;
        if (v30 == 4)
        {
          if (v29 == 8)
            __asm { BR              X8 }
          __asm { BR              X8 }
        }
        v28 = v11 & 3 | (4 * (v37 & 3u));
        if (v30 == 8)
        {
          if (v29 == 4)
            __asm { BR              X9 }
          if (v29 == 8)
            __asm { BR              X9 }
          if (v29 == 16)
            __asm { BR              X9 }
        }
        else if (v30 == 16)
        {
          if (v29 == 16)
            __asm { BR              X9 }
          __asm { BR              X9 }
        }
        v3 = v34;
      }
      else
      {
        v13 = (v6 - 4);
        v14 = *(_QWORD *)(v36[v13] + 8 * *((unsigned __int8 *)v5 + v13 + 8));
        if (!v14)
          return result;
        v15 = &v5[2 * v13];
        v16 = *v15;
        v17 = v15[1];
        v18 = v33 + (v17 >> 2);
        v19 = v18 + 15;
        if (v18 < -15)
          v19 = v18 + 30;
        v20 = v19 >> 4;
        if (v20 < 0)
          v21 = -1;
        else
          v21 = v20;
        if (*(_DWORD *)(v14 + 12) <= v21)
        {
          v22 = word_254E10E30[40 * v7 + 24 + v3];
          v23 = v8 >> 8;
          sub_2160EC880(*(pthread_mutex_t **)(v14 + 16));
          while (*(_DWORD *)(v14 + 12) <= v21)
            sub_2160EC918(*(pthread_cond_t **)(v14 + 24), *(pthread_mutex_t **)(v14 + 16));
          sub_2160EC88C(*(pthread_mutex_t **)(v14 + 16));
          v2 = v39;
          v4 = v40;
          v9 = v23;
          LOBYTE(v8) = v22;
        }
        v27 = v17 & 3 | (4 * (v16 & 3u));
        if ((_DWORD)v35 == 1)
          __asm { BR              X12 }
        if (v8 == 4)
        {
          if (v9 == 8)
            __asm { BR              X8 }
          __asm { BR              X8 }
        }
        if (v8 == 8)
        {
          if (v9 == 4)
            __asm { BR              X8 }
          if (v9 == 8)
            __asm { BR              X8 }
          if (v9 == 16)
            __asm { BR              X8 }
        }
        else if (v8 == 16)
        {
          __asm { BR              X11 }
        }
      }
      ++v3;
      result = v31;
    }
    while (v3 != v35);
  }
  return result;
}

uint64_t sub_216054ED0(uint64_t result, uint64_t a2, int8x16_t *a3, int a4, uint64_t a5, int16x8_t *a6, int a7, uint64_t a8, int8x16_t a9, double a10, double a11, int8x16_t a12, double a13, double a14, int8x16_t a15, uint64_t a16, unsigned int a17)
{
  _DWORD *v17;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  int32x4_t v22;
  int32x4_t v23;
  uint64_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int32x4_t v27;
  int v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int32x4_t v32;
  int32x4_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int16x8_t v39;
  int32x4_t v40;
  int32x4_t v41;
  int16x8_t v42;
  int16x8_t v43;
  int8x16_t v44;
  int16x8_t v45;
  int16x8_t v46;
  int16x8_t v47;
  int16x8_t v48;
  uint64_t v49;
  int v50;
  int v51;
  int32x4_t v52;
  int32x4_t v53;
  uint64_t v54;
  int16x8_t v55;
  int16x8_t v56;
  int32x4_t v57;
  int v58;
  int16x8_t v59;
  int16x8_t v60;
  int16x8_t v61;
  int32x4_t v62;
  int32x4_t v63;
  int16x8_t v64;
  int16x8_t v65;
  int16x8_t v66;
  int16x8_t v67;
  int16x8_t v68;
  int16x8_t v69;
  int32x4_t v70;
  int32x4_t v71;
  int16x8_t v72;
  int16x8_t v73;
  int8x16_t v74;
  int16x8_t v75;
  int16x8_t v76;
  int16x8_t v77;
  int16x8_t v78;
  int16x8_t v79;
  int16x8_t v80;
  int16x8_t v81;
  int16x8_t v82;
  int16x8_t v83;
  int16x8_t v84;
  int16x8_t v85;
  int16x8_t v86;

  v17 = *(_DWORD **)(a8 + 48);
  v18 = v17[90];
  if (v18 == 1)
  {
    if (a7)
    {
      v49 = a16 + 16 * a17;
      v50 = *(unsigned __int8 *)(v49 + 8);
      v51 = v17[3 * *(unsigned __int8 *)(v49 + 8) + 283];
      LODWORD(v49) = *(unsigned __int8 *)(v49 + 9);
      a9.i32[0] = v17[87];
      v52 = (int32x4_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE800);
      v53 = (int32x4_t)vqtbl1q_s8((int8x16_t)((v51 + v17[3 * v49 + 379] + 1) >> 1), (int8x16_t)xmmword_2160EE800);
      v54 = (uint64_t)&v17[96 * v50 + 3 * v49];
      a12.i32[0] = *(_DWORD *)(v54 + 14188);
      v55 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
      a15.i32[0] = *(_DWORD *)(v54 + 1900);
      v56 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(a15, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
      v57 = vdupq_n_s32(~v17[83]);
      if ((2 * a7) <= 1)
        v58 = 1;
      else
        v58 = 2 * a7;
      do
      {
        v59 = *(int16x8_t *)(result + 16);
        v60 = vmulq_s16(*(int16x8_t *)result, v56);
        v61 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)result, *(int16x4_t *)v56.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)result, v56));
        v62 = (int32x4_t)vzip1q_s16(v60, v61);
        v63 = (int32x4_t)vzip2q_s16(v60, v61);
        v64 = *(int16x8_t *)(a2 + 16);
        v65 = vmulq_s16(*(int16x8_t *)a2, v55);
        v66 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)a2, *(int16x4_t *)v55.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)a2, v55));
        v67 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v62, v52), (int32x4_t)vzip1q_s16(v65, v66)), v57), v53)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v63, v52), (int32x4_t)vzip2q_s16(v65, v66)), v57), v53));
        v68 = vmulq_s16(v59, v56);
        v69 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v59.i8, *(int16x4_t *)v56.i8), (int16x8_t)vmull_high_s16(v59, v56));
        v70 = (int32x4_t)vzip1q_s16(v68, v69);
        v71 = (int32x4_t)vzip2q_s16(v68, v69);
        v72 = vmulq_s16(v64, v55);
        v73 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v64.i8, *(int16x4_t *)v55.i8), (int16x8_t)vmull_high_s16(v64, v55));
        v74 = vqmovun_high_s16(vqmovun_s16(v67), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v70, v52), (int32x4_t)vzip1q_s16(v72, v73)), v57), v53)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v71, v52), (int32x4_t)vzip2q_s16(v72, v73)), v57), v53)));
        v75 = (int16x8_t)vzip1q_s8(v74, (int8x16_t)0);
        v76 = (int16x8_t)vzip2q_s8(v74, (int8x16_t)0);
        if (a5)
        {
          v77 = *a6;
          v78 = a6[1];
          a6 += 2;
          v75 = vaddq_s16(v77, v75);
          v76 = vaddq_s16(v78, v76);
        }
        *a3 = vqmovun_high_s16(vqmovun_s16(v75), v76);
        a3 = (int8x16_t *)((char *)a3 + a4);
        result += 32;
        a2 += 32;
        --v58;
      }
      while (v58);
    }
  }
  else if (v18 == 2)
  {
    if (a7)
    {
      v19 = a16 + 16 * a17;
      v20 = *(unsigned __int8 *)(v19 + 8);
      v21 = v17[3 * *(unsigned __int8 *)(v19 + 8) + 283];
      LODWORD(v19) = *(unsigned __int8 *)(v19 + 9);
      a9.i32[0] = v17[87];
      v22 = (int32x4_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE800);
      v23 = (int32x4_t)vqtbl1q_s8((int8x16_t)((v21 + v17[3 * v19 + 379] + 1) >> 1), (int8x16_t)xmmword_2160EE800);
      v24 = (uint64_t)&v17[96 * v20 + 3 * v19];
      a12.i32[0] = *(_DWORD *)(v24 + 14188);
      v25 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
      a15.i32[0] = *(_DWORD *)(v24 + 1900);
      v26 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(a15, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
      v27 = vdupq_n_s32(~v17[83]);
      if ((2 * a7) <= 1)
        v28 = 1;
      else
        v28 = 2 * a7;
      do
      {
        v29 = *(int16x8_t *)(result + 16);
        v30 = vmulq_s16(*(int16x8_t *)result, v26);
        v31 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)result, *(int16x4_t *)v26.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)result, v26));
        v32 = (int32x4_t)vzip1q_s16(v30, v31);
        v33 = (int32x4_t)vzip2q_s16(v30, v31);
        v34 = *(int16x8_t *)(a2 + 16);
        v35 = vmulq_s16(*(int16x8_t *)a2, v25);
        v36 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)a2, *(int16x4_t *)v25.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)a2, v25));
        v37 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v32, v22), (int32x4_t)vzip1q_s16(v35, v36)), v27), v23)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v33, v22), (int32x4_t)vzip2q_s16(v35, v36)), v27), v23));
        v38 = vmulq_s16(v29, v26);
        v39 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v29.i8, *(int16x4_t *)v26.i8), (int16x8_t)vmull_high_s16(v29, v26));
        v40 = (int32x4_t)vzip1q_s16(v38, v39);
        v41 = (int32x4_t)vzip2q_s16(v38, v39);
        v42 = vmulq_s16(v34, v25);
        v43 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v34.i8, *(int16x4_t *)v25.i8), (int16x8_t)vmull_high_s16(v34, v25));
        v44 = vqmovun_high_s16(vqmovun_s16(v37), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v40, v22), (int32x4_t)vzip1q_s16(v42, v43)), v27), v23)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v41, v22), (int32x4_t)vzip2q_s16(v42, v43)), v27), v23)));
        v45 = (int16x8_t)vzip1q_s8(v44, (int8x16_t)0);
        v46 = (int16x8_t)vzip2q_s8(v44, (int8x16_t)0);
        if (a5)
        {
          v47 = *a6;
          v48 = a6[1];
          a6 += 2;
          v45 = vaddq_s16(v47, v45);
          v46 = vaddq_s16(v48, v46);
        }
        *a3 = vqmovun_high_s16(vqmovun_s16(v45), v46);
        a3 = (int8x16_t *)((char *)a3 + a4);
        result += 32;
        a2 += 32;
        --v28;
      }
      while (v28);
    }
  }
  else if (a7 >= 1)
  {
    do
    {
      v79 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)result, *(uint16x8_t *)a2);
      v80 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(result + 16), *(uint16x8_t *)(a2 + 16));
      v81 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(result + 32), *(uint16x8_t *)(a2 + 32));
      v82 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(result + 48), *(uint16x8_t *)(a2 + 48));
      if (a5)
      {
        v83 = *a6;
        v84 = a6[1];
        v85 = a6[2];
        v86 = a6[3];
        a6 += 4;
        v79 = vaddq_s16(v83, v79);
        v80 = vaddq_s16(v84, v80);
        v81 = vaddq_s16(v85, v81);
        v82 = vaddq_s16(v86, v82);
      }
      *a3 = vqmovun_high_s16(vqmovun_s16(v79), v80);
      *(int8x16_t *)((char *)a3 + a4) = vqmovun_high_s16(vqmovun_s16(v81), v82);
      a3 = (int8x16_t *)((char *)a3 + 2 * a4);
      result += 64;
      a2 += 64;
      --a7;
    }
    while (a7);
  }
  return result;
}

uint64_t sub_2160552A8(uint64_t result, uint64_t a2, int8x16_t *a3, int a4, uint64_t a5, int16x8_t *a6, int a7, uint64_t a8, int8x16_t a9, double a10, int8x16_t a11, int8x16_t a12, uint64_t a13, unsigned int a14)
{
  _DWORD *v14;
  int v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  _DWORD *v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int32x4_t v24;
  int32x4_t v25;
  int v26;
  int32x4_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int32x4_t v31;
  int32x4_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int32x4_t v39;
  int32x4_t v40;
  int16x8_t v41;
  int16x8_t v42;
  int8x16_t v43;
  int16x8_t v44;
  int16x8_t v45;
  int16x8_t v46;
  int16x8_t v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  _DWORD *v51;
  int16x8_t v52;
  int16x8_t v53;
  int16x8_t v54;
  int16x8_t v55;
  int32x4_t v56;
  int32x4_t v57;
  int v58;
  int32x4_t v59;
  int16x8_t v60;
  int16x8_t v61;
  int16x8_t v62;
  int32x4_t v63;
  int32x4_t v64;
  int16x8_t v65;
  int16x8_t v66;
  int16x8_t v67;
  int16x8_t v68;
  int16x8_t v69;
  int16x8_t v70;
  int32x4_t v71;
  int32x4_t v72;
  int16x8_t v73;
  int16x8_t v74;
  int8x16_t v75;
  int16x8_t v76;
  int16x8_t v77;
  int16x8_t v78;
  int16x8_t v79;
  int16x8_t v80;
  int16x8_t v81;
  int16x8_t v82;
  int16x8_t v83;
  int16x8_t v84;
  int16x8_t v85;
  int16x8_t v86;
  int16x8_t v87;

  v14 = *(_DWORD **)(a8 + 48);
  v15 = v14[90];
  if (v15 == 1)
  {
    if (a7)
    {
      v48 = a13 + 16 * a14;
      v49 = *(unsigned __int8 *)(v48 + 8);
      v50 = 3 * *(unsigned __int8 *)(v48 + 9);
      v51 = &v14[96 * v49 + v50];
      a9.i32[0] = v51[476];
      a11.i32[0] = v51[477];
      v52 = (int16x8_t)vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE7D0);
      v53 = vzip1q_s16((int16x8_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE7D0), v52);
      v52.i32[0] = v51[3548];
      v54 = (int16x8_t)vqtbl1q_s8((int8x16_t)v52, (int8x16_t)xmmword_2160EE7D0);
      a12.i32[0] = v51[3549];
      v55 = vzip1q_s16(v54, (int16x8_t)vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE7D0));
      v54.i32[0] = v14[88];
      v56 = (int32x4_t)vqtbl1q_s8((int8x16_t)v54, (int8x16_t)xmmword_2160EE800);
      v57 = vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)((v14[3 * v49 + 284] + v14[v50 + 380] + 1) >> 1), (int8x16_t)xmmword_2160EE800), (int32x4_t)vqtbl1q_s8((int8x16_t)((v14[3 * v49 + 285] + v14[v50 + 381] + 1) >> 1), (int8x16_t)xmmword_2160EE800));
      v58 = 2 * a7;
      v59 = vdupq_n_s32(~v14[84]);
      if ((2 * a7) <= 1)
        v58 = 1;
      do
      {
        v60 = *(int16x8_t *)(result + 16);
        v61 = vmulq_s16(*(int16x8_t *)result, v53);
        v62 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)result, *(int16x4_t *)v53.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)result, v53));
        v63 = (int32x4_t)vzip1q_s16(v61, v62);
        v64 = (int32x4_t)vzip2q_s16(v61, v62);
        v65 = *(int16x8_t *)(a2 + 16);
        v66 = vmulq_s16(*(int16x8_t *)a2, v55);
        v67 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)a2, *(int16x4_t *)v55.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)a2, v55));
        v68 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v63, v56), (int32x4_t)vzip1q_s16(v66, v67)), v59), v57)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v64, v56), (int32x4_t)vzip2q_s16(v66, v67)), v59), v57));
        v69 = vmulq_s16(v60, v53);
        v70 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v60.i8, *(int16x4_t *)v53.i8), (int16x8_t)vmull_high_s16(v60, v53));
        v71 = (int32x4_t)vzip1q_s16(v69, v70);
        v72 = (int32x4_t)vzip2q_s16(v69, v70);
        v73 = vmulq_s16(v65, v55);
        v74 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v65.i8, *(int16x4_t *)v55.i8), (int16x8_t)vmull_high_s16(v65, v55));
        v75 = vqmovun_high_s16(vqmovun_s16(v68), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v71, v56), (int32x4_t)vzip1q_s16(v73, v74)), v59), v57)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v72, v56), (int32x4_t)vzip2q_s16(v73, v74)), v59), v57)));
        v76 = (int16x8_t)vzip1q_s8(v75, (int8x16_t)0);
        v77 = (int16x8_t)vzip2q_s8(v75, (int8x16_t)0);
        if (a5)
        {
          v78 = *a6;
          v79 = a6[1];
          a6 += 2;
          v76 = vaddq_s16(v78, v76);
          v77 = vaddq_s16(v79, v77);
        }
        *a3 = vqmovun_high_s16(vqmovun_s16(v76), v77);
        a3 = (int8x16_t *)((char *)a3 + a4);
        result += 32;
        a2 += 32;
        --v58;
      }
      while (v58);
    }
  }
  else if (v15 == 2)
  {
    if (a7)
    {
      v16 = a13 + 16 * a14;
      v17 = *(unsigned __int8 *)(v16 + 8);
      v18 = 3 * *(unsigned __int8 *)(v16 + 9);
      v19 = &v14[96 * v17 + v18];
      a9.i32[0] = v19[476];
      a11.i32[0] = v19[477];
      v20 = (int16x8_t)vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE7D0);
      v21 = vzip1q_s16((int16x8_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE7D0), v20);
      v20.i32[0] = v19[3548];
      v22 = (int16x8_t)vqtbl1q_s8((int8x16_t)v20, (int8x16_t)xmmword_2160EE7D0);
      a12.i32[0] = v19[3549];
      v23 = vzip1q_s16(v22, (int16x8_t)vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE7D0));
      v22.i32[0] = v14[88];
      v24 = (int32x4_t)vqtbl1q_s8((int8x16_t)v22, (int8x16_t)xmmword_2160EE800);
      v25 = vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)((v14[3 * v17 + 284] + v14[v18 + 380] + 1) >> 1), (int8x16_t)xmmword_2160EE800), (int32x4_t)vqtbl1q_s8((int8x16_t)((v14[3 * v17 + 285] + v14[v18 + 381] + 1) >> 1), (int8x16_t)xmmword_2160EE800));
      v26 = 2 * a7;
      v27 = vdupq_n_s32(~v14[84]);
      if ((2 * a7) <= 1)
        v26 = 1;
      do
      {
        v28 = *(int16x8_t *)(result + 16);
        v29 = vmulq_s16(*(int16x8_t *)result, v21);
        v30 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)result, *(int16x4_t *)v21.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)result, v21));
        v31 = (int32x4_t)vzip1q_s16(v29, v30);
        v32 = (int32x4_t)vzip2q_s16(v29, v30);
        v33 = *(int16x8_t *)(a2 + 16);
        v34 = vmulq_s16(*(int16x8_t *)a2, v23);
        v35 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)a2, *(int16x4_t *)v23.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)a2, v23));
        v36 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v31, v24), (int32x4_t)vzip1q_s16(v34, v35)), v27), v25)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v32, v24), (int32x4_t)vzip2q_s16(v34, v35)), v27), v25));
        v37 = vmulq_s16(v28, v21);
        v38 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v28.i8, *(int16x4_t *)v21.i8), (int16x8_t)vmull_high_s16(v28, v21));
        v39 = (int32x4_t)vzip1q_s16(v37, v38);
        v40 = (int32x4_t)vzip2q_s16(v37, v38);
        v41 = vmulq_s16(v33, v23);
        v42 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v33.i8, *(int16x4_t *)v23.i8), (int16x8_t)vmull_high_s16(v33, v23));
        v43 = vqmovun_high_s16(vqmovun_s16(v36), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v39, v24), (int32x4_t)vzip1q_s16(v41, v42)), v27), v25)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v40, v24), (int32x4_t)vzip2q_s16(v41, v42)), v27), v25)));
        v44 = (int16x8_t)vzip1q_s8(v43, (int8x16_t)0);
        v45 = (int16x8_t)vzip2q_s8(v43, (int8x16_t)0);
        if (a5)
        {
          v46 = *a6;
          v47 = a6[1];
          a6 += 2;
          v44 = vaddq_s16(v46, v44);
          v45 = vaddq_s16(v47, v45);
        }
        *a3 = vqmovun_high_s16(vqmovun_s16(v44), v45);
        a3 = (int8x16_t *)((char *)a3 + a4);
        result += 32;
        a2 += 32;
        --v26;
      }
      while (v26);
    }
  }
  else if (a7 >= 1)
  {
    do
    {
      v80 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)result, *(uint16x8_t *)a2);
      v81 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(result + 16), *(uint16x8_t *)(a2 + 16));
      v82 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(result + 32), *(uint16x8_t *)(a2 + 32));
      v83 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(result + 48), *(uint16x8_t *)(a2 + 48));
      if (a5)
      {
        v84 = *a6;
        v85 = a6[1];
        v86 = a6[2];
        v87 = a6[3];
        a6 += 4;
        v80 = vaddq_s16(v84, v80);
        v81 = vaddq_s16(v85, v81);
        v82 = vaddq_s16(v86, v82);
        v83 = vaddq_s16(v87, v83);
      }
      *a3 = vqmovun_high_s16(vqmovun_s16(v80), v81);
      *(int8x16_t *)((char *)a3 + a4) = vqmovun_high_s16(vqmovun_s16(v82), v83);
      a3 = (int8x16_t *)((char *)a3 + 2 * a4);
      result += 64;
      a2 += 64;
      --a7;
    }
    while (a7);
  }
  return result;
}

uint64_t sub_2160556E0(uint64_t result, uint64_t a2, int8x8_t *a3, int a4, uint64_t a5, int16x8_t *a6, int a7, uint64_t a8, int8x16_t a9, double a10, double a11, int8x16_t a12, double a13, double a14, int8x16_t a15, uint64_t a16, unsigned int a17)
{
  _DWORD *v17;
  int v18;
  uint64_t v19;
  int v20;
  int32x4_t v21;
  int32x4_t v22;
  uint64_t v23;
  int16x8_t v24;
  int32x4_t v25;
  int16x8_t v26;
  int v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int32x4_t v31;
  int32x4_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int32x4_t v39;
  int32x4_t v40;
  int16x8_t v41;
  int16x8_t v42;
  int8x16_t v43;
  int16x8_t v44;
  int16x8_t v45;
  int16x8_t v46;
  int16x8_t v47;
  uint64_t v48;
  int v49;
  int32x4_t v50;
  int32x4_t v51;
  uint64_t v52;
  int16x8_t v53;
  int32x4_t v54;
  int16x8_t v55;
  int v56;
  int16x8_t v57;
  int16x8_t v58;
  int16x8_t v59;
  int32x4_t v60;
  int32x4_t v61;
  int16x8_t v62;
  int16x8_t v63;
  int16x8_t v64;
  int16x8_t v65;
  int16x8_t v66;
  int16x8_t v67;
  int32x4_t v68;
  int32x4_t v69;
  int16x8_t v70;
  int16x8_t v71;
  int8x16_t v72;
  int16x8_t v73;
  int16x8_t v74;
  int16x8_t v75;
  int16x8_t v76;
  int16x8_t v77;
  int16x8_t v78;
  int16x8_t v79;
  int16x8_t v80;
  int16x8_t v81;
  int16x8_t v82;
  int16x8_t v83;
  int16x8_t v84;

  v17 = *(_DWORD **)(a8 + 48);
  v18 = v17[90];
  if (v18 == 1)
  {
    if (a7)
    {
      v48 = a16 + 16 * a17;
      v49 = *(unsigned __int8 *)(v48 + 8);
      LODWORD(v48) = *(unsigned __int8 *)(v48 + 9);
      a9.i32[0] = v17[87];
      v50 = (int32x4_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE800);
      v51 = (int32x4_t)vqtbl1q_s8((int8x16_t)((v17[3 * v49 + 283] + v17[3 * v48 + 379] + 1) >> 1), (int8x16_t)xmmword_2160EE800);
      v52 = (uint64_t)&v17[96 * v49 + 3 * v48];
      a12.i32[0] = *(_DWORD *)(v52 + 14188);
      v53 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
      a15.i32[0] = *(_DWORD *)(v52 + 1900);
      v54 = vdupq_n_s32(~v17[83]);
      v55 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(a15, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
      if ((2 * a7) <= 1)
        v56 = 1;
      else
        v56 = 2 * a7;
      do
      {
        v57 = *(int16x8_t *)(result + 16);
        v58 = vmulq_s16(*(int16x8_t *)result, v55);
        v59 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)result, *(int16x4_t *)v55.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)result, v55));
        v60 = (int32x4_t)vzip1q_s16(v58, v59);
        v61 = (int32x4_t)vzip2q_s16(v58, v59);
        v62 = *(int16x8_t *)(a2 + 16);
        v63 = vmulq_s16(*(int16x8_t *)a2, v53);
        v64 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)a2, *(int16x4_t *)v53.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)a2, v53));
        v65 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v60, v50), (int32x4_t)vzip1q_s16(v63, v64)), v54), v51)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v61, v50), (int32x4_t)vzip2q_s16(v63, v64)), v54), v51));
        v66 = vmulq_s16(v57, v55);
        v67 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v57.i8, *(int16x4_t *)v55.i8), (int16x8_t)vmull_high_s16(v57, v55));
        v68 = (int32x4_t)vzip1q_s16(v66, v67);
        v69 = (int32x4_t)vzip2q_s16(v66, v67);
        v70 = vmulq_s16(v62, v53);
        v71 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v62.i8, *(int16x4_t *)v53.i8), (int16x8_t)vmull_high_s16(v62, v53));
        v72 = vqmovun_high_s16(vqmovun_s16(v65), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v68, v50), (int32x4_t)vzip1q_s16(v70, v71)), v54), v51)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v69, v50), (int32x4_t)vzip2q_s16(v70, v71)), v54), v51)));
        v73 = (int16x8_t)vzip1q_s8(v72, (int8x16_t)0);
        v74 = (int16x8_t)vzip2q_s8(v72, (int8x16_t)0);
        if (a5)
        {
          v75 = *a6;
          v76 = a6[2];
          a6 += 4;
          v73 = vaddq_s16(v75, v73);
          v74 = vaddq_s16(v76, v74);
        }
        *a3 = vqmovun_s16(v73);
        *(int8x8_t *)((char *)a3 + a4) = vqmovun_s16(v74);
        a3 = (int8x8_t *)((char *)a3 + 2 * a4);
        result += 32;
        a2 += 32;
        --v56;
      }
      while (v56);
    }
  }
  else if (v18 == 2)
  {
    if (a7)
    {
      v19 = a16 + 16 * a17;
      v20 = *(unsigned __int8 *)(v19 + 8);
      LODWORD(v19) = *(unsigned __int8 *)(v19 + 9);
      a9.i32[0] = v17[87];
      v21 = (int32x4_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE800);
      v22 = (int32x4_t)vqtbl1q_s8((int8x16_t)((v17[3 * v20 + 283] + v17[3 * v19 + 379] + 1) >> 1), (int8x16_t)xmmword_2160EE800);
      v23 = (uint64_t)&v17[96 * v20 + 3 * v19];
      a12.i32[0] = *(_DWORD *)(v23 + 14188);
      v24 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
      a15.i32[0] = *(_DWORD *)(v23 + 1900);
      v25 = vdupq_n_s32(~v17[83]);
      v26 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(a15, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
      if ((2 * a7) <= 1)
        v27 = 1;
      else
        v27 = 2 * a7;
      do
      {
        v28 = *(int16x8_t *)(result + 16);
        v29 = vmulq_s16(*(int16x8_t *)result, v26);
        v30 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)result, *(int16x4_t *)v26.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)result, v26));
        v31 = (int32x4_t)vzip1q_s16(v29, v30);
        v32 = (int32x4_t)vzip2q_s16(v29, v30);
        v33 = *(int16x8_t *)(a2 + 16);
        v34 = vmulq_s16(*(int16x8_t *)a2, v24);
        v35 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)a2, *(int16x4_t *)v24.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)a2, v24));
        v36 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v31, v21), (int32x4_t)vzip1q_s16(v34, v35)), v25), v22)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v32, v21), (int32x4_t)vzip2q_s16(v34, v35)), v25), v22));
        v37 = vmulq_s16(v28, v26);
        v38 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v28.i8, *(int16x4_t *)v26.i8), (int16x8_t)vmull_high_s16(v28, v26));
        v39 = (int32x4_t)vzip1q_s16(v37, v38);
        v40 = (int32x4_t)vzip2q_s16(v37, v38);
        v41 = vmulq_s16(v33, v24);
        v42 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v33.i8, *(int16x4_t *)v24.i8), (int16x8_t)vmull_high_s16(v33, v24));
        v43 = vqmovun_high_s16(vqmovun_s16(v36), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v39, v21), (int32x4_t)vzip1q_s16(v41, v42)), v25), v22)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v40, v21), (int32x4_t)vzip2q_s16(v41, v42)), v25), v22)));
        v44 = (int16x8_t)vzip1q_s8(v43, (int8x16_t)0);
        v45 = (int16x8_t)vzip2q_s8(v43, (int8x16_t)0);
        if (a5)
        {
          v46 = *a6;
          v47 = a6[2];
          a6 += 4;
          v44 = vaddq_s16(v46, v44);
          v45 = vaddq_s16(v47, v45);
        }
        *a3 = vqmovun_s16(v44);
        *(int8x8_t *)((char *)a3 + a4) = vqmovun_s16(v45);
        a3 = (int8x8_t *)((char *)a3 + 2 * a4);
        result += 32;
        a2 += 32;
        --v27;
      }
      while (v27);
    }
  }
  else if (a7 >= 1)
  {
    do
    {
      v77 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)result, *(uint16x8_t *)a2);
      v78 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(result + 16), *(uint16x8_t *)(a2 + 16));
      v79 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(result + 32), *(uint16x8_t *)(a2 + 32));
      v80 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(result + 48), *(uint16x8_t *)(a2 + 48));
      if (a5)
      {
        v81 = *a6;
        v82 = a6[2];
        v83 = a6[4];
        v84 = a6[6];
        a6 += 8;
        v77 = vaddq_s16(v81, v77);
        v78 = vaddq_s16(v82, v78);
        v79 = vaddq_s16(v83, v79);
        v80 = vaddq_s16(v84, v80);
      }
      *a3 = vqmovun_s16(v77);
      *(int8x8_t *)((char *)a3 + a4) = vqmovun_s16(v78);
      *(int8x8_t *)((char *)a3 + 2 * a4) = vqmovun_s16(v79);
      *(int8x8_t *)((char *)a3 + 3 * a4) = vqmovun_s16(v80);
      a3 = (int8x8_t *)((char *)a3 + 4 * a4);
      result += 64;
      a2 += 64;
      --a7;
    }
    while (a7);
  }
  return result;
}

uint64_t sub_216055AF0(uint64_t result, uint64_t a2, int8x8_t *a3, int a4, uint64_t a5, int16x8_t *a6, int a7, uint64_t a8, int8x16_t a9, double a10, int8x16_t a11, int8x16_t a12, uint64_t a13, unsigned int a14)
{
  _DWORD *v14;
  int v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  _DWORD *v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int32x4_t v24;
  int32x4_t v25;
  int32x4_t v26;
  int v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int32x4_t v31;
  int32x4_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int32x4_t v39;
  int32x4_t v40;
  int16x8_t v41;
  int16x8_t v42;
  int8x16_t v43;
  int16x8_t v44;
  int16x8_t v45;
  int16x8_t v46;
  int16x8_t v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  _DWORD *v51;
  int16x8_t v52;
  int16x8_t v53;
  int16x8_t v54;
  int16x8_t v55;
  int32x4_t v56;
  int32x4_t v57;
  int32x4_t v58;
  int v59;
  int16x8_t v60;
  int16x8_t v61;
  int16x8_t v62;
  int32x4_t v63;
  int32x4_t v64;
  int16x8_t v65;
  int16x8_t v66;
  int16x8_t v67;
  int16x8_t v68;
  int16x8_t v69;
  int16x8_t v70;
  int32x4_t v71;
  int32x4_t v72;
  int16x8_t v73;
  int16x8_t v74;
  int8x16_t v75;
  int16x8_t v76;
  int16x8_t v77;
  int16x8_t v78;
  int16x8_t v79;
  int16x8_t v80;
  int16x8_t v81;
  int16x8_t v82;
  int16x8_t v83;
  int16x8_t v84;
  int16x8_t v85;
  int16x8_t v86;
  int16x8_t v87;

  v14 = *(_DWORD **)(a8 + 48);
  v15 = v14[90];
  if (v15 == 1)
  {
    if (a7)
    {
      v48 = a13 + 16 * a14;
      v49 = *(unsigned __int8 *)(v48 + 8);
      v50 = 3 * *(unsigned __int8 *)(v48 + 9);
      v51 = &v14[96 * v49 + v50];
      a9.i32[0] = v51[476];
      a11.i32[0] = v51[477];
      v52 = (int16x8_t)vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE7D0);
      v53 = vzip1q_s16((int16x8_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE7D0), v52);
      v52.i32[0] = v51[3548];
      v54 = (int16x8_t)vqtbl1q_s8((int8x16_t)v52, (int8x16_t)xmmword_2160EE7D0);
      a12.i32[0] = v51[3549];
      v55 = vzip1q_s16(v54, (int16x8_t)vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE7D0));
      v54.i32[0] = v14[88];
      v56 = (int32x4_t)vqtbl1q_s8((int8x16_t)v54, (int8x16_t)xmmword_2160EE800);
      v57 = vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)((v14[3 * v49 + 284] + v14[v50 + 380] + 1) >> 1), (int8x16_t)xmmword_2160EE800), (int32x4_t)vqtbl1q_s8((int8x16_t)((v14[3 * v49 + 285] + v14[v50 + 381] + 1) >> 1), (int8x16_t)xmmword_2160EE800));
      v58 = vdupq_n_s32(~v14[84]);
      v59 = 2 * a7;
      if ((2 * a7) <= 1)
        v59 = 1;
      do
      {
        v60 = *(int16x8_t *)(result + 16);
        v61 = vmulq_s16(*(int16x8_t *)result, v53);
        v62 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)result, *(int16x4_t *)v53.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)result, v53));
        v63 = (int32x4_t)vzip1q_s16(v61, v62);
        v64 = (int32x4_t)vzip2q_s16(v61, v62);
        v65 = *(int16x8_t *)(a2 + 16);
        v66 = vmulq_s16(*(int16x8_t *)a2, v55);
        v67 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)a2, *(int16x4_t *)v55.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)a2, v55));
        v68 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v63, v56), (int32x4_t)vzip1q_s16(v66, v67)), v58), v57)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v64, v56), (int32x4_t)vzip2q_s16(v66, v67)), v58), v57));
        v69 = vmulq_s16(v60, v53);
        v70 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v60.i8, *(int16x4_t *)v53.i8), (int16x8_t)vmull_high_s16(v60, v53));
        v71 = (int32x4_t)vzip1q_s16(v69, v70);
        v72 = (int32x4_t)vzip2q_s16(v69, v70);
        v73 = vmulq_s16(v65, v55);
        v74 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v65.i8, *(int16x4_t *)v55.i8), (int16x8_t)vmull_high_s16(v65, v55));
        v75 = vqmovun_high_s16(vqmovun_s16(v68), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v71, v56), (int32x4_t)vzip1q_s16(v73, v74)), v58), v57)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v72, v56), (int32x4_t)vzip2q_s16(v73, v74)), v58), v57)));
        v76 = (int16x8_t)vzip1q_s8(v75, (int8x16_t)0);
        v77 = (int16x8_t)vzip2q_s8(v75, (int8x16_t)0);
        if (a5)
        {
          v78 = *a6;
          v79 = a6[2];
          a6 += 4;
          v76 = vaddq_s16(v78, v76);
          v77 = vaddq_s16(v79, v77);
        }
        *a3 = vqmovun_s16(v76);
        *(int8x8_t *)((char *)a3 + a4) = vqmovun_s16(v77);
        a3 = (int8x8_t *)((char *)a3 + 2 * a4);
        result += 32;
        a2 += 32;
        --v59;
      }
      while (v59);
    }
  }
  else if (v15 == 2)
  {
    if (a7)
    {
      v16 = a13 + 16 * a14;
      v17 = *(unsigned __int8 *)(v16 + 8);
      v18 = 3 * *(unsigned __int8 *)(v16 + 9);
      v19 = &v14[96 * v17 + v18];
      a9.i32[0] = v19[476];
      a11.i32[0] = v19[477];
      v20 = (int16x8_t)vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE7D0);
      v21 = vzip1q_s16((int16x8_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE7D0), v20);
      v20.i32[0] = v19[3548];
      v22 = (int16x8_t)vqtbl1q_s8((int8x16_t)v20, (int8x16_t)xmmword_2160EE7D0);
      a12.i32[0] = v19[3549];
      v23 = vzip1q_s16(v22, (int16x8_t)vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE7D0));
      v22.i32[0] = v14[88];
      v24 = (int32x4_t)vqtbl1q_s8((int8x16_t)v22, (int8x16_t)xmmword_2160EE800);
      v25 = vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)((v14[3 * v17 + 284] + v14[v18 + 380] + 1) >> 1), (int8x16_t)xmmword_2160EE800), (int32x4_t)vqtbl1q_s8((int8x16_t)((v14[3 * v17 + 285] + v14[v18 + 381] + 1) >> 1), (int8x16_t)xmmword_2160EE800));
      v26 = vdupq_n_s32(~v14[84]);
      v27 = 2 * a7;
      if ((2 * a7) <= 1)
        v27 = 1;
      do
      {
        v28 = *(int16x8_t *)(result + 16);
        v29 = vmulq_s16(*(int16x8_t *)result, v21);
        v30 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)result, *(int16x4_t *)v21.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)result, v21));
        v31 = (int32x4_t)vzip1q_s16(v29, v30);
        v32 = (int32x4_t)vzip2q_s16(v29, v30);
        v33 = *(int16x8_t *)(a2 + 16);
        v34 = vmulq_s16(*(int16x8_t *)a2, v23);
        v35 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)a2, *(int16x4_t *)v23.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)a2, v23));
        v36 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v31, v24), (int32x4_t)vzip1q_s16(v34, v35)), v26), v25)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v32, v24), (int32x4_t)vzip2q_s16(v34, v35)), v26), v25));
        v37 = vmulq_s16(v28, v21);
        v38 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v28.i8, *(int16x4_t *)v21.i8), (int16x8_t)vmull_high_s16(v28, v21));
        v39 = (int32x4_t)vzip1q_s16(v37, v38);
        v40 = (int32x4_t)vzip2q_s16(v37, v38);
        v41 = vmulq_s16(v33, v23);
        v42 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v33.i8, *(int16x4_t *)v23.i8), (int16x8_t)vmull_high_s16(v33, v23));
        v43 = vqmovun_high_s16(vqmovun_s16(v36), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v39, v24), (int32x4_t)vzip1q_s16(v41, v42)), v26), v25)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v40, v24), (int32x4_t)vzip2q_s16(v41, v42)), v26), v25)));
        v44 = (int16x8_t)vzip1q_s8(v43, (int8x16_t)0);
        v45 = (int16x8_t)vzip2q_s8(v43, (int8x16_t)0);
        if (a5)
        {
          v46 = *a6;
          v47 = a6[2];
          a6 += 4;
          v44 = vaddq_s16(v46, v44);
          v45 = vaddq_s16(v47, v45);
        }
        *a3 = vqmovun_s16(v44);
        *(int8x8_t *)((char *)a3 + a4) = vqmovun_s16(v45);
        a3 = (int8x8_t *)((char *)a3 + 2 * a4);
        result += 32;
        a2 += 32;
        --v27;
      }
      while (v27);
    }
  }
  else if (a7 >= 1)
  {
    do
    {
      v80 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)result, *(uint16x8_t *)a2);
      v81 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(result + 16), *(uint16x8_t *)(a2 + 16));
      v82 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(result + 32), *(uint16x8_t *)(a2 + 32));
      v83 = (int16x8_t)vrhaddq_u16(*(uint16x8_t *)(result + 48), *(uint16x8_t *)(a2 + 48));
      if (a5)
      {
        v84 = *a6;
        v85 = a6[2];
        v86 = a6[4];
        v87 = a6[6];
        a6 += 8;
        v80 = vaddq_s16(v84, v80);
        v81 = vaddq_s16(v85, v81);
        v82 = vaddq_s16(v86, v82);
        v83 = vaddq_s16(v87, v83);
      }
      *a3 = vqmovun_s16(v80);
      *(int8x8_t *)((char *)a3 + a4) = vqmovun_s16(v81);
      *(int8x8_t *)((char *)a3 + 2 * a4) = vqmovun_s16(v82);
      *(int8x8_t *)((char *)a3 + 3 * a4) = vqmovun_s16(v83);
      a3 = (int8x8_t *)((char *)a3 + 4 * a4);
      result += 64;
      a2 += 64;
      --a7;
    }
    while (a7);
  }
  return result;
}

int8x8_t sub_216055F60(uint16x8_t *a1, uint16x8_t *a2, int8x8_t *a3, int a4, uint64_t a5, int16x8_t *a6, uint64_t a7, uint64_t a8, int8x16_t a9, double a10, int8x16_t a11, int8x16_t a12, unsigned int a13)
{
  _DWORD *v13;
  int v14;
  _DWORD *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  _DWORD *v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int32x4_t v24;
  int32x4_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int32x4_t v29;
  int32x4_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int32x4_t v34;
  int32x4_t v35;
  int32x4_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int16x8_t v39;
  int32x4_t v40;
  int32x4_t v41;
  int16x8_t v42;
  int16x8_t v43;
  int8x16_t v44;
  int16x8_t v45;
  int16x8_t v46;
  int8x8_t result;

  v13 = *(_DWORD **)(a7 + 48);
  v14 = v13[90];
  if (v14 == 2)
  {
    v18 = a8 + 16 * a13;
    v16 = *(unsigned __int8 *)(v18 + 8);
    v17 = *(unsigned __int8 *)(v18 + 9);
  }
  else
  {
    if (v14 != 1)
    {
      v45 = (int16x8_t)vrhaddq_u16(*a1, *a2);
      v46 = (int16x8_t)vrhaddq_u16(a1[1], a2[1]);
      if (!a5)
        goto LABEL_7;
      goto LABEL_6;
    }
    v15 = &v13[4 * a13];
    v16 = *((unsigned __int8 *)v15 + 24);
    v17 = *((unsigned __int8 *)v15 + 25);
  }
  v19 = &v13[96 * v16 + 3 * v17];
  a9.i32[0] = v19[476];
  a11.i32[0] = v19[477];
  v20 = (int16x8_t)vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE7D0);
  v21 = vzip1q_s16((int16x8_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE7D0), v20);
  v20.i32[0] = v19[3548];
  v22 = (int16x8_t)vqtbl1q_s8((int8x16_t)v20, (int8x16_t)xmmword_2160EE7D0);
  a12.i32[0] = v19[3549];
  v23 = vzip1q_s16(v22, (int16x8_t)vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE7D0));
  v22.i32[0] = v13[88];
  v24 = (int32x4_t)vqtbl1q_s8((int8x16_t)v22, (int8x16_t)xmmword_2160EE800);
  v25 = vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)((v13[3 * v16 + 284] + v13[3 * v17 + 380] + 1) >> 1), (int8x16_t)xmmword_2160EE800), (int32x4_t)vqtbl1q_s8((int8x16_t)((v13[3 * v16 + 285] + v13[3 * v17 + 381] + 1) >> 1), (int8x16_t)xmmword_2160EE800));
  v26 = (int16x8_t)a1[1];
  v27 = vmulq_s16(*(int16x8_t *)a1, v21);
  v28 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)a1->i8, *(int16x4_t *)v21.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)a1, v21));
  v29 = (int32x4_t)vzip1q_s16(v27, v28);
  v30 = (int32x4_t)vzip2q_s16(v27, v28);
  v31 = (int16x8_t)a2[1];
  v32 = vmulq_s16(*(int16x8_t *)a2, v23);
  v33 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)a2->i8, *(int16x4_t *)v23.i8), (int16x8_t)vmull_high_s16(*(int16x8_t *)a2, v23));
  v34 = (int32x4_t)vzip1q_s16(v32, v33);
  v35 = vaddq_s32(vaddq_s32(v30, v24), (int32x4_t)vzip2q_s16(v32, v33));
  v36 = vdupq_n_s32(~v13[84]);
  v37 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v29, v24), v34), v36), v25)), vaddq_s32(vshlq_s32(v35, v36), v25));
  v38 = vmulq_s16(v26, v21);
  v39 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v26.i8, *(int16x4_t *)v21.i8), (int16x8_t)vmull_high_s16(v26, v21));
  v40 = (int32x4_t)vzip1q_s16(v38, v39);
  v41 = (int32x4_t)vzip2q_s16(v38, v39);
  v42 = vmulq_s16(v31, v23);
  v43 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v31.i8, *(int16x4_t *)v23.i8), (int16x8_t)vmull_high_s16(v31, v23));
  v44 = vqmovun_high_s16(vqmovun_s16(v37), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v40, v24), (int32x4_t)vzip1q_s16(v42, v43)), v36), v25)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v41, v24), (int32x4_t)vzip2q_s16(v42, v43)), v36), v25)));
  v45 = (int16x8_t)vzip1q_s8(v44, (int8x16_t)0);
  v46 = (int16x8_t)vzip2q_s8(v44, (int8x16_t)0);
  if (a5)
  {
LABEL_6:
    v45 = vaddq_s16(*a6, v45);
    v46 = vaddq_s16(a6[2], v46);
  }
LABEL_7:
  result = vqmovun_s16(v46);
  *a3 = vqmovun_s16(v45);
  *(int8x8_t *)((char *)a3 + a4) = result;
  return result;
}

int16x4_t *sub_216056150(int16x4_t *result, int16x4_t *a2, _DWORD *a3, int a4, uint64_t a5, uint64_t *a6, int a7, uint64_t a8, int16x8_t a9, int16x8_t a10, int16x8_t a11, int8x16_t a12, uint16x8_t a13, uint16x8_t a14, int8x16_t a15, uint16x8_t a16, uint64_t a17, unsigned int a18)
{
  int16x8_t v18;
  int16x8_t v19;
  int16x8_t v20;
  _DWORD *v21;
  int v22;
  uint64_t v23;
  int v24;
  int32x4_t v25;
  int32x4_t v26;
  uint64_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int32x4_t v30;
  int v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int32x4_t v36;
  int32x4_t v37;
  int16x8_t v38;
  int16x8_t v39;
  int16x8_t v40;
  int16x8_t v41;
  int16x8_t v42;
  int32x4_t v43;
  int32x4_t v44;
  int16x8_t v45;
  int16x8_t v46;
  int8x16_t v47;
  uint64_t v48;
  int v49;
  int32x4_t v50;
  int32x4_t v51;
  uint64_t v52;
  int16x8_t v53;
  int16x8_t v54;
  int32x4_t v55;
  int v56;
  int16x8_t v57;
  int16x8_t v58;
  int16x8_t v59;
  int16x8_t v60;
  int32x4_t v61;
  int32x4_t v62;
  int16x8_t v63;
  int16x8_t v64;
  int16x8_t v65;
  int16x8_t v66;
  int16x8_t v67;
  int32x4_t v68;
  int32x4_t v69;
  int16x8_t v70;
  int16x8_t v71;
  int8x16_t v72;
  int16x8_t v73;

  v21 = *(_DWORD **)(a8 + 48);
  v22 = v21[90];
  if (v22 == 1)
  {
    if (a7)
    {
      v48 = a17 + 16 * a18;
      v49 = *(unsigned __int8 *)(v48 + 8);
      LODWORD(v48) = *(unsigned __int8 *)(v48 + 9);
      a9.i32[0] = v21[87];
      v50 = (int32x4_t)vqtbl1q_s8((int8x16_t)a9, (int8x16_t)xmmword_2160EE800);
      v51 = (int32x4_t)vqtbl1q_s8((int8x16_t)((v21[3 * v49 + 283] + v21[3 * v48 + 379] + 1) >> 1), (int8x16_t)xmmword_2160EE800);
      v52 = (uint64_t)&v21[96 * v49 + 3 * v48];
      a12.i32[0] = *(_DWORD *)(v52 + 14188);
      v53 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
      a15.i32[0] = *(_DWORD *)(v52 + 1900);
      v54 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(a15, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
      v55 = vdupq_n_s32(~v21[83]);
      if ((2 * a7) <= 1)
        v56 = 1;
      else
        v56 = 2 * a7;
      v57 = (int16x8_t)vmull_s16(0, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v54, (int8x16_t)v54, 8uLL));
      v58 = (int16x8_t)vmull_s16(0, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v53, (int8x16_t)v53, 8uLL));
      do
      {
        *(int16x4_t *)v18.i8 = *result;
        *(int16x4_t *)v19.i8 = result[1];
        v59 = vmulq_s16(v18, v54);
        v60 = vuzp2q_s16((int16x8_t)vmull_s16(*result, *(int16x4_t *)v54.i8), v57);
        v61 = (int32x4_t)vzip1q_s16(v59, v60);
        v62 = (int32x4_t)vzip2q_s16(v59, v60);
        *(int16x4_t *)v59.i8 = *a2;
        *(int16x4_t *)v20.i8 = a2[1];
        v63 = vmulq_s16(v59, v53);
        v64 = vuzp2q_s16((int16x8_t)vmull_s16(*a2, *(int16x4_t *)v53.i8), v58);
        v65 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v61, v50), (int32x4_t)vzip1q_s16(v63, v64)), v55), v51)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v62, v50), (int32x4_t)vzip2q_s16(v63, v64)), v55), v51));
        v66 = vmulq_s16(v19, v54);
        v67 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v19.i8, *(int16x4_t *)v54.i8), v57);
        v68 = (int32x4_t)vzip1q_s16(v66, v67);
        v69 = (int32x4_t)vzip2q_s16(v66, v67);
        v70 = vmulq_s16(v20, v53);
        v20 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v20.i8, *(int16x4_t *)v53.i8), v58);
        v71 = (int16x8_t)vaddq_s32(vaddq_s32(v68, v50), (int32x4_t)vzip1q_s16(v70, v20));
        v72 = vqmovun_high_s16(vqmovun_s16(v65), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32((int32x4_t)v71, v55), v51)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v69, v50), (int32x4_t)vzip2q_s16(v70, v20)), v55), v51)));
        v19 = (int16x8_t)vzip1q_s8(v72, (int8x16_t)0);
        v18 = (int16x8_t)vzip2q_s8(v72, (int8x16_t)0);
        if (a5)
        {
          v65.i64[0] = *a6;
          v71.i64[0] = a6[4];
          a6 += 8;
          v19 = vaddq_s16(v65, v19);
          v18 = vaddq_s16(v71, v18);
        }
        *a3 = vqmovun_s16(v19).u32[0];
        *(_DWORD *)((char *)a3 + a4) = vqmovun_s16(v18).u32[0];
        a3 = (_DWORD *)((char *)a3 + 2 * a4);
        result += 2;
        a2 += 2;
        --v56;
      }
      while (v56);
    }
  }
  else if (v22 == 2)
  {
    if (a7)
    {
      v23 = a17 + 16 * a18;
      v24 = *(unsigned __int8 *)(v23 + 8);
      LODWORD(v23) = *(unsigned __int8 *)(v23 + 9);
      a9.i32[0] = v21[87];
      v25 = (int32x4_t)vqtbl1q_s8((int8x16_t)a9, (int8x16_t)xmmword_2160EE800);
      v26 = (int32x4_t)vqtbl1q_s8((int8x16_t)((v21[3 * v24 + 283] + v21[3 * v23 + 379] + 1) >> 1), (int8x16_t)xmmword_2160EE800);
      v27 = (uint64_t)&v21[96 * v24 + 3 * v23];
      a12.i32[0] = *(_DWORD *)(v27 + 14188);
      v28 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
      a15.i32[0] = *(_DWORD *)(v27 + 1900);
      v29 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(a15, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
      v30 = vdupq_n_s32(~v21[83]);
      if ((2 * a7) <= 1)
        v31 = 1;
      else
        v31 = 2 * a7;
      v32 = (int16x8_t)vmull_s16(0, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v29, (int8x16_t)v29, 8uLL));
      v33 = (int16x8_t)vmull_s16(0, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v28, (int8x16_t)v28, 8uLL));
      do
      {
        *(int16x4_t *)v18.i8 = *result;
        *(int16x4_t *)v19.i8 = result[1];
        v34 = vmulq_s16(v18, v29);
        v35 = vuzp2q_s16((int16x8_t)vmull_s16(*result, *(int16x4_t *)v29.i8), v32);
        v36 = (int32x4_t)vzip1q_s16(v34, v35);
        v37 = (int32x4_t)vzip2q_s16(v34, v35);
        *(int16x4_t *)v34.i8 = *a2;
        *(int16x4_t *)v20.i8 = a2[1];
        v38 = vmulq_s16(v34, v28);
        v39 = vuzp2q_s16((int16x8_t)vmull_s16(*a2, *(int16x4_t *)v28.i8), v33);
        v40 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v36, v25), (int32x4_t)vzip1q_s16(v38, v39)), v30), v26)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v37, v25), (int32x4_t)vzip2q_s16(v38, v39)), v30), v26));
        v41 = vmulq_s16(v19, v29);
        v42 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v19.i8, *(int16x4_t *)v29.i8), v32);
        v43 = (int32x4_t)vzip1q_s16(v41, v42);
        v44 = (int32x4_t)vzip2q_s16(v41, v42);
        v45 = vmulq_s16(v20, v28);
        v20 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v20.i8, *(int16x4_t *)v28.i8), v33);
        v46 = (int16x8_t)vaddq_s32(vaddq_s32(v43, v25), (int32x4_t)vzip1q_s16(v45, v20));
        v47 = vqmovun_high_s16(vqmovun_s16(v40), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32((int32x4_t)v46, v30), v26)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v44, v25), (int32x4_t)vzip2q_s16(v45, v20)), v30), v26)));
        v19 = (int16x8_t)vzip1q_s8(v47, (int8x16_t)0);
        v18 = (int16x8_t)vzip2q_s8(v47, (int8x16_t)0);
        if (a5)
        {
          v40.i64[0] = *a6;
          v46.i64[0] = a6[4];
          a6 += 8;
          v19 = vaddq_s16(v40, v19);
          v18 = vaddq_s16(v46, v18);
        }
        *a3 = vqmovun_s16(v19).u32[0];
        *(_DWORD *)((char *)a3 + a4) = vqmovun_s16(v18).u32[0];
        a3 = (_DWORD *)((char *)a3 + 2 * a4);
        result += 2;
        a2 += 2;
        --v31;
      }
      while (v31);
    }
  }
  else if (a7 >= 1)
  {
    do
    {
      *(int16x4_t *)a9.i8 = *result;
      *(int16x4_t *)a10.i8 = result[1];
      *(int16x4_t *)a13.i8 = result[2];
      *(int16x4_t *)a14.i8 = result[3];
      *(int16x4_t *)a11.i8 = *a2;
      *(int16x4_t *)a15.i8 = a2[1];
      *(int16x4_t *)a16.i8 = a2[2];
      *(int16x4_t *)v18.i8 = a2[3];
      v73 = (int16x8_t)vrhaddq_u16((uint16x8_t)a9, (uint16x8_t)a11);
      a11 = (int16x8_t)vrhaddq_u16((uint16x8_t)a10, (uint16x8_t)a15);
      a10 = (int16x8_t)vrhaddq_u16(a13, a16);
      a9 = (int16x8_t)vrhaddq_u16(a14, (uint16x8_t)v18);
      if (a5)
      {
        a13.i64[0] = *a6;
        a14.i64[0] = a6[4];
        a15.i64[0] = a6[8];
        a16.i64[0] = a6[12];
        a6 += 16;
        v73 = vaddq_s16(v73, (int16x8_t)a13);
        a11 = vaddq_s16(a11, (int16x8_t)a14);
        a10 = vaddq_s16(a10, (int16x8_t)a15);
        a9 = vaddq_s16(a9, (int16x8_t)a16);
      }
      *a3 = vqmovun_s16(v73).u32[0];
      *(_DWORD *)((char *)a3 + a4) = vqmovun_s16(a11).u32[0];
      *(_DWORD *)((char *)a3 + 2 * a4) = vqmovun_s16(a10).u32[0];
      *(_DWORD *)((char *)a3 + 3 * a4) = vqmovun_s16(a9).u32[0];
      a3 += a4;
      result += 4;
      a2 += 4;
      --a7;
    }
    while (a7);
  }
  return result;
}

double sub_216056560(int16x4_t *a1, int16x4_t *a2, _DWORD *a3, int a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, int8x16_t a9, uint16x8_t a10, int8x16_t a11, int8x16_t a12, uint16x8_t a13, uint16x8_t a14, uint16x8_t a15, uint16x8_t a16, unsigned int a17)
{
  int16x8_t v17;
  int16x8_t v18;
  int16x8_t v19;
  _DWORD *v20;
  int v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  _DWORD *v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int32x4_t v30;
  int32x4_t v31;
  int32x4_t v32;
  char v33;
  int16x4_t v34;
  int16x4_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int32x4_t v39;
  int32x4_t v40;
  int16x8_t v41;
  int16x8_t v42;
  int16x8_t v43;
  char v44;
  int16x8_t v45;
  int16x8_t v46;
  int16x8_t v47;
  int32x4_t v48;
  int32x4_t v49;
  int16x8_t v50;
  int16x8_t v51;
  int16x8_t v52;
  int8x16_t v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  _DWORD *v57;
  int16x8_t v58;
  int16x8_t v59;
  int16x8_t v60;
  int32x4_t v61;
  int32x4_t v62;
  int32x4_t v63;
  char v64;
  int16x4_t v65;
  int16x4_t v66;
  int16x8_t v67;
  int16x8_t v68;
  int16x8_t v69;
  int32x4_t v70;
  int32x4_t v71;
  int16x8_t v72;
  int16x8_t v73;
  int16x8_t v74;
  char v75;
  int16x8_t v76;
  int16x8_t v77;
  int16x8_t v78;
  int32x4_t v79;
  int32x4_t v80;
  int16x8_t v81;
  int16x8_t v82;
  int16x8_t v83;
  int8x16_t v84;
  int16x8_t v85;
  int16x8_t v86;
  int16x8_t v87;

  v20 = *(_DWORD **)(a7 + 48);
  v21 = v20[90];
  if (v21 == 1)
  {
    v54 = a8 + 16 * a17;
    v55 = *(unsigned __int8 *)(v54 + 8);
    v56 = 3 * *(unsigned __int8 *)(v54 + 9);
    v57 = &v20[96 * v55 + v56];
    a9.i32[0] = v57[476];
    a11.i32[0] = v57[477];
    v58 = (int16x8_t)vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE7D0);
    v27 = vzip1q_s16((int16x8_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE7D0), v58);
    v58.i32[0] = v57[3548];
    v59 = (int16x8_t)vqtbl1q_s8((int8x16_t)v58, (int8x16_t)xmmword_2160EE7D0);
    a12.i32[0] = v57[3549];
    v60 = vzip1q_s16(v59, (int16x8_t)vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE7D0));
    v59.i32[0] = v20[88];
    v61 = (int32x4_t)vqtbl1q_s8((int8x16_t)v59, (int8x16_t)xmmword_2160EE800);
    v62 = vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)((v20[3 * v55 + 284] + v20[v56 + 380] + 1) >> 1), (int8x16_t)xmmword_2160EE800), (int32x4_t)vqtbl1q_s8((int8x16_t)((v20[3 * v55 + 285] + v20[v56 + 381] + 1) >> 1), (int8x16_t)xmmword_2160EE800));
    v63 = vdupq_n_s32(~v20[84]);
    v64 = 1;
    v65 = (int16x4_t)vextq_s8((int8x16_t)v27, (int8x16_t)v27, 8uLL).u64[0];
    v66 = (int16x4_t)vextq_s8((int8x16_t)v60, (int8x16_t)v60, 8uLL).u64[0];
    do
    {
      *(int16x4_t *)v17.i8 = *a1;
      *(int16x4_t *)v18.i8 = a1[1];
      v67 = vmulq_s16(v27, v17);
      v68 = (int16x8_t)vmull_s16(0, v65);
      v69 = vuzp2q_s16((int16x8_t)vmull_s16(*a1, *(int16x4_t *)v27.i8), v68);
      v70 = (int32x4_t)vzip1q_s16(v67, v69);
      v71 = (int32x4_t)vzip2q_s16(v67, v69);
      *(int16x4_t *)v67.i8 = *a2;
      *(int16x4_t *)v19.i8 = a2[1];
      v72 = vmulq_s16(v60, v67);
      v73 = (int16x8_t)vmull_s16(0, v66);
      v74 = vuzp2q_s16((int16x8_t)vmull_s16(*a2, *(int16x4_t *)v60.i8), v73);
      v75 = v64;
      v76 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v70, v61), (int32x4_t)vzip1q_s16(v72, v74)), v63), v62)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v71, v61), (int32x4_t)vzip2q_s16(v72, v74)), v63), v62));
      v77 = vmulq_s16(v27, v18);
      v78 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v18.i8, *(int16x4_t *)v27.i8), v68);
      v79 = (int32x4_t)vzip1q_s16(v77, v78);
      v80 = (int32x4_t)vzip2q_s16(v77, v78);
      v81 = vmulq_s16(v60, v19);
      v82 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v19.i8, *(int16x4_t *)v60.i8), v73);
      v19 = vzip1q_s16(v81, v82);
      v83 = (int16x8_t)vaddq_s32(vaddq_s32(v79, v61), (int32x4_t)v19);
      v84 = vqmovun_high_s16(vqmovun_s16(v76), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32((int32x4_t)v83, v63), v62)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v80, v61), (int32x4_t)vzip2q_s16(v81, v82)), v63), v62)));
      v18 = (int16x8_t)vzip1q_s8(v84, (int8x16_t)0);
      v17 = (int16x8_t)vzip2q_s8(v84, (int8x16_t)0);
      if (a5)
      {
        v76.i64[0] = *a6;
        v83.i64[0] = a6[4];
        a6 += 8;
        v18 = vaddq_s16(v76, v18);
        v17 = vaddq_s16(v83, v17);
      }
      v64 = 0;
      *a3 = vqmovun_s16(v18).u32[0];
      *(_DWORD *)((char *)a3 + a4) = vqmovun_s16(v17).u32[0];
      a3 = (_DWORD *)((char *)a3 + 2 * a4);
      a1 += 2;
      a2 += 2;
    }
    while ((v75 & 1) != 0);
  }
  else if (v21 == 2)
  {
    v22 = a8 + 16 * a17;
    v23 = *(unsigned __int8 *)(v22 + 8);
    v24 = 3 * *(unsigned __int8 *)(v22 + 9);
    v25 = &v20[96 * v23 + v24];
    a9.i32[0] = v25[476];
    a11.i32[0] = v25[477];
    v26 = (int16x8_t)vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE7D0);
    v27 = vzip1q_s16((int16x8_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE7D0), v26);
    v26.i32[0] = v25[3548];
    v28 = (int16x8_t)vqtbl1q_s8((int8x16_t)v26, (int8x16_t)xmmword_2160EE7D0);
    a12.i32[0] = v25[3549];
    v29 = vzip1q_s16(v28, (int16x8_t)vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE7D0));
    v28.i32[0] = v20[88];
    v30 = (int32x4_t)vqtbl1q_s8((int8x16_t)v28, (int8x16_t)xmmword_2160EE800);
    v31 = vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)((v20[3 * v23 + 284] + v20[v24 + 380] + 1) >> 1), (int8x16_t)xmmword_2160EE800), (int32x4_t)vqtbl1q_s8((int8x16_t)((v20[3 * v23 + 285] + v20[v24 + 381] + 1) >> 1), (int8x16_t)xmmword_2160EE800));
    v32 = vdupq_n_s32(~v20[84]);
    v33 = 1;
    v34 = (int16x4_t)vextq_s8((int8x16_t)v27, (int8x16_t)v27, 8uLL).u64[0];
    v35 = (int16x4_t)vextq_s8((int8x16_t)v29, (int8x16_t)v29, 8uLL).u64[0];
    do
    {
      *(int16x4_t *)v17.i8 = *a1;
      *(int16x4_t *)v18.i8 = a1[1];
      v36 = vmulq_s16(v27, v17);
      v37 = (int16x8_t)vmull_s16(0, v34);
      v38 = vuzp2q_s16((int16x8_t)vmull_s16(*a1, *(int16x4_t *)v27.i8), v37);
      v39 = (int32x4_t)vzip1q_s16(v36, v38);
      v40 = (int32x4_t)vzip2q_s16(v36, v38);
      *(int16x4_t *)v36.i8 = *a2;
      *(int16x4_t *)v19.i8 = a2[1];
      v41 = vmulq_s16(v29, v36);
      v42 = (int16x8_t)vmull_s16(0, v35);
      v43 = vuzp2q_s16((int16x8_t)vmull_s16(*a2, *(int16x4_t *)v29.i8), v42);
      v44 = v33;
      v45 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v39, v30), (int32x4_t)vzip1q_s16(v41, v43)), v32), v31)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v40, v30), (int32x4_t)vzip2q_s16(v41, v43)), v32), v31));
      v46 = vmulq_s16(v27, v18);
      v47 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v18.i8, *(int16x4_t *)v27.i8), v37);
      v48 = (int32x4_t)vzip1q_s16(v46, v47);
      v49 = (int32x4_t)vzip2q_s16(v46, v47);
      v50 = vmulq_s16(v29, v19);
      v51 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v19.i8, *(int16x4_t *)v29.i8), v42);
      v19 = vzip1q_s16(v50, v51);
      v52 = (int16x8_t)vaddq_s32(vaddq_s32(v48, v30), (int32x4_t)v19);
      v53 = vqmovun_high_s16(vqmovun_s16(v45), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32((int32x4_t)v52, v32), v31)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v49, v30), (int32x4_t)vzip2q_s16(v50, v51)), v32), v31)));
      v18 = (int16x8_t)vzip1q_s8(v53, (int8x16_t)0);
      v17 = (int16x8_t)vzip2q_s8(v53, (int8x16_t)0);
      if (a5)
      {
        v45.i64[0] = *a6;
        v52.i64[0] = a6[4];
        a6 += 8;
        v18 = vaddq_s16(v45, v18);
        v17 = vaddq_s16(v52, v17);
      }
      v33 = 0;
      *a3 = vqmovun_s16(v18).u32[0];
      *(_DWORD *)((char *)a3 + a4) = vqmovun_s16(v17).u32[0];
      a3 = (_DWORD *)((char *)a3 + 2 * a4);
      a1 += 2;
      a2 += 2;
    }
    while ((v44 & 1) != 0);
  }
  else
  {
    *(int16x4_t *)a9.i8 = *a1;
    *(int16x4_t *)a10.i8 = a1[1];
    *(int16x4_t *)a13.i8 = a1[2];
    *(int16x4_t *)a14.i8 = a1[3];
    *(int16x4_t *)a11.i8 = *a2;
    *(int16x4_t *)a15.i8 = a2[1];
    *(int16x4_t *)a16.i8 = a2[2];
    *(int16x4_t *)v17.i8 = a2[3];
    v85 = (int16x8_t)vrhaddq_u16((uint16x8_t)a9, (uint16x8_t)a11);
    v86 = (int16x8_t)vrhaddq_u16(a10, a15);
    v27 = (int16x8_t)vrhaddq_u16(a13, a16);
    v87 = (int16x8_t)vrhaddq_u16(a14, (uint16x8_t)v17);
    if (a5)
    {
      a13.i64[0] = *a6;
      a14.i64[0] = a6[4];
      a15.i64[0] = a6[8];
      a16.i64[0] = a6[12];
      v85 = vaddq_s16(v85, (int16x8_t)a13);
      v86 = vaddq_s16(v86, (int16x8_t)a14);
      v27 = vaddq_s16(v27, (int16x8_t)a15);
      v87 = vaddq_s16(v87, (int16x8_t)a16);
    }
    *a3 = vqmovun_s16(v85).u32[0];
    *(_DWORD *)((char *)a3 + a4) = vqmovun_s16(v86).u32[0];
    *(int8x8_t *)v27.i8 = vqmovun_s16(v27);
    *(_DWORD *)((char *)a3 + 2 * a4) = v27.i32[0];
    *(_DWORD *)((char *)a3 + 3 * a4) = vqmovun_s16(v87).u32[0];
  }
  return *(double *)v27.i64;
}

int8x8_t sub_216056998(int16x4_t *a1, int16x4_t *a2, _DWORD *a3, int a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, int8x16_t a9, uint16x8_t a10, int8x16_t a11, int8x16_t a12, double a13, double a14, int16x8_t a15, unsigned int a16)
{
  int16x8_t v16;
  _DWORD *v17;
  int v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  _DWORD *v22;
  uint64_t v23;
  uint64_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int32x4_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int32x4_t v35;
  int32x4_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int16x8_t v39;
  int32x4_t v40;
  int32x4_t v41;
  int32x4_t v42;
  int16x8_t v43;
  int16x8_t v44;
  int16x8_t v45;
  int32x4_t v46;
  int32x4_t v47;
  int16x8_t v48;
  int16x8_t v49;
  int8x16_t v50;
  int16x8_t v51;
  int16x8_t v52;
  int8x8_t result;

  v17 = *(_DWORD **)(a7 + 48);
  v18 = v17[90];
  if (v18 == 2 || v18 == 1)
  {
    v19 = a8 + 16 * a16;
    v20 = *(unsigned __int8 *)(v19 + 8);
    v21 = 3 * *(unsigned __int8 *)(v19 + 9);
    v22 = &v17[96 * v20 + v21];
    v23 = (uint64_t)&v17[3 * v20 + 283];
    v24 = (uint64_t)&v17[v21 + 283];
    a9.i32[0] = v22[476];
    a11.i32[0] = v22[477];
    v25 = (int16x8_t)vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE7D0);
    v26 = vzip1q_s16((int16x8_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE7D0), v25);
    v25.i32[0] = v22[3548];
    v27 = (int16x8_t)vqtbl1q_s8((int8x16_t)v25, (int8x16_t)xmmword_2160EE7D0);
    a12.i32[0] = v22[3549];
    v28 = vzip1q_s16(v27, (int16x8_t)vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE7D0));
    v27.i32[0] = v17[88];
    v29 = (int16x8_t)vqtbl1q_s8((int8x16_t)v27, (int8x16_t)xmmword_2160EE800);
    v30 = (int16x8_t)vqtbl1q_s8((int8x16_t)((*(_DWORD *)(v23 + 4) + *(_DWORD *)(v24 + 388) + 1) >> 1), (int8x16_t)xmmword_2160EE800);
    v31 = vzip1q_s32((int32x4_t)v30, (int32x4_t)vqtbl1q_s8((int8x16_t)((*(_DWORD *)(v23 + 8) + *(_DWORD *)(v24 + 392) + 1) >> 1), (int8x16_t)xmmword_2160EE800));
    a12.i64[1] = 0;
    *(int16x4_t *)v30.i8 = *a1;
    *(int16x4_t *)a15.i8 = a1[1];
    v32 = vmulq_s16(v26, v30);
    v33 = (int16x8_t)vmull_s16(0, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v26, (int8x16_t)v26, 8uLL));
    v34 = vuzp2q_s16((int16x8_t)vmull_s16(*a1, *(int16x4_t *)v26.i8), v33);
    v35 = (int32x4_t)vzip1q_s16(v32, v34);
    v36 = (int32x4_t)vzip2q_s16(v32, v34);
    *(int16x4_t *)v32.i8 = *a2;
    *(int16x4_t *)v16.i8 = a2[1];
    v37 = vmulq_s16(v28, v32);
    v38 = (int16x8_t)vmull_s16(0, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v28, (int8x16_t)v28, 8uLL));
    v39 = vuzp2q_s16((int16x8_t)vmull_s16(*a2, *(int16x4_t *)v28.i8), v38);
    v40 = (int32x4_t)vzip1q_s16(v37, v39);
    v41 = vaddq_s32(vaddq_s32(v36, (int32x4_t)v29), (int32x4_t)vzip2q_s16(v37, v39));
    v42 = vdupq_n_s32(~v17[84]);
    v43 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v35, (int32x4_t)v29), v40), v42), v31)), vaddq_s32(vshlq_s32(v41, v42), v31));
    v44 = vmulq_s16(v26, a15);
    v45 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)a15.i8, *(int16x4_t *)v26.i8), v33);
    v46 = (int32x4_t)vzip1q_s16(v44, v45);
    v47 = (int32x4_t)vzip2q_s16(v44, v45);
    v48 = vmulq_s16(v28, v16);
    v49 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v16.i8, *(int16x4_t *)v28.i8), v38);
    v50 = vqmovun_high_s16(vqmovun_s16(v43), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v46, (int32x4_t)v29), (int32x4_t)vzip1q_s16(v48, v49)), v42), v31)), vaddq_s32(vshlq_s32(vaddq_s32(vaddq_s32(v47, (int32x4_t)v29), (int32x4_t)vzip2q_s16(v48, v49)), v42), v31)));
    v51 = (int16x8_t)vzip1q_s8(v50, (int8x16_t)0);
    v52 = (int16x8_t)vzip2q_s8(v50, (int8x16_t)0);
    if (a5)
    {
      v29.i64[0] = *a6;
      a12.i64[0] = a6[4];
      v51 = vaddq_s16(v29, v51);
      v52 = vaddq_s16((int16x8_t)a12, v52);
    }
  }
  else
  {
    *(int16x4_t *)a9.i8 = *a1;
    *(int16x4_t *)a11.i8 = a1[1];
    *(int16x4_t *)a10.i8 = *a2;
    *(int16x4_t *)a12.i8 = a2[1];
    v51 = (int16x8_t)vrhaddq_u16((uint16x8_t)a9, a10);
    v52 = (int16x8_t)vrhaddq_u16((uint16x8_t)a11, (uint16x8_t)a12);
    if (a5)
    {
      a11.i64[0] = *a6;
      a12.i64[0] = a6[4];
      v51 = vaddq_s16(v51, (int16x8_t)a11);
      v52 = vaddq_s16(v52, (int16x8_t)a12);
    }
  }
  result = vqmovun_s16(v52);
  *a3 = vqmovun_s16(v51).u32[0];
  *(_DWORD *)((char *)a3 + a4) = result.i32[0];
  return result;
}

uint64_t sub_216056B88(uint64_t result, int a2, __n128 *a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7, int8x16_t a8, double a9, double a10, double a11, int8x16_t a12, int8x16_t a13)
{
  int32x4_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int8x16_t v18;
  int16x8_t v19;
  int32x4_t v20;
  int32x4_t v21;
  int32x4_t v22;
  uint64_t *v23;
  int v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int32x4_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int32x4_t v31;
  int16x8_t v32;
  int8x16_t v33;

  v14 = a6 + 16 * a7;
  v15 = *(unsigned __int8 *)(v14 + 15) - 4;
  v16 = *(_QWORD *)(a5 + 48);
  v17 = v16 + 384 * v15 + 12 * *(unsigned __int8 *)(v14 + v15 + 8);
  a8.i32[0] = *(_DWORD *)(v17 + 364);
  v18 = (int8x16_t)xmmword_2160EE7D0;
  v19 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(a8, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
  v18.i32[0] = *(_DWORD *)(v16 + 340);
  v20 = (int32x4_t)vqtbl1q_s8(v18, (int8x16_t)xmmword_2160EE800);
  a12.i32[0] = *(_DWORD *)(v17 + 1132);
  v21 = vdupq_n_s32(-*(_DWORD *)(v16 + 332));
  v22 = (int32x4_t)vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE800);
  v23 = (uint64_t *)(result + 8);
  v24 = 16;
  do
  {
    a13.i64[0] = *(v23 - 1);
    v13.i64[0] = *v23;
    v25 = (int16x8_t)vzip1q_s8(a13, (int8x16_t)0);
    v26 = vmulq_s16(v25, v19);
    v27 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v25.i8, *(int16x4_t *)v19.i8), (int16x8_t)vmull_high_s16(v25, v19));
    v28 = (int32x4_t)vzip1q_s16(v26, v27);
    v29 = (int16x8_t)vzip1q_s8((int8x16_t)v13, (int8x16_t)0);
    v30 = vmulq_s16(v29, v19);
    v31 = (int32x4_t)vzip2q_s16(v26, v27);
    v32 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v29.i8, *(int16x4_t *)v19.i8), (int16x8_t)vmull_high_s16(v29, v19));
    v13 = vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v30, v32), v20), v21), v22);
    v33 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(v28, v20), v21), v22)), vaddq_s32(vshlq_s32(vaddq_s32(v31, v20), v21), v22))), vqmovn_high_s32(vqmovn_s32(v13), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v30, v32), v20), v21), v22)));
    a13 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vzip1q_s8(v33, (int8x16_t)0)), (int16x8_t)vzip2q_s8(v33, (int8x16_t)0));
    *a3 = (__n128)a13;
    a3 = (__n128 *)((char *)a3 + a4);
    v23 = (uint64_t *)((char *)v23 + a2);
    --v24;
  }
  while (v24);
  return result;
}

uint64_t sub_216056CA8(uint64_t result, int a2, int8x16_t *a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8, double a9, int8x16_t a10, double a11, int8x16_t a12, double a13, int16x8_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int16x8_t v19;
  int32x4_t v20;
  int32x4_t v21;
  int32x4_t v22;
  uint64_t *v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int32x4_t v27;
  int32x4_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int8x16_t v32;
  int16x8_t v33;

  v14 = 0;
  v15 = a7 + 16 * a8;
  v16 = *(unsigned __int8 *)(v15 + 15) - 4;
  v17 = *(_QWORD *)(a6 + 48);
  v18 = v17 + 384 * v16 + 12 * *(unsigned __int8 *)(v15 + v16 + 8);
  a10.i32[0] = *(_DWORD *)(v18 + 364);
  v19 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(a10, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
  a10.i32[0] = *(_DWORD *)(v17 + 340);
  v20 = (int32x4_t)vqtbl1q_s8(a10, (int8x16_t)xmmword_2160EE800);
  a12.i32[0] = *(_DWORD *)(v18 + 1132);
  v21 = (int32x4_t)vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE800);
  v22 = vdupq_n_s32(-*(_DWORD *)(v17 + 332));
  v23 = (uint64_t *)(result + 8);
  do
  {
    a14.i64[0] = *(v23 - 1);
    v24 = (int16x8_t)vzip1q_s8((int8x16_t)a14, (int8x16_t)0);
    v25 = vmulq_s16(v24, v19);
    v26 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v24.i8, *(int16x4_t *)v19.i8), (int16x8_t)vmull_high_s16(v24, v19));
    v27 = (int32x4_t)vzip1q_s16(v25, v26);
    v28 = (int32x4_t)vzip2q_s16(v25, v26);
    v25.i64[0] = *v23;
    v29 = (int16x8_t)vzip1q_s8((int8x16_t)v25, (int8x16_t)0);
    v30 = vmulq_s16(v29, v19);
    v31 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v29.i8, *(int16x4_t *)v19.i8), (int16x8_t)vmull_high_s16(v29, v19));
    v32 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(v27, v20), v22), v21)), vaddq_s32(vshlq_s32(vaddq_s32(v28, v20), v22), v21))), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v30, v31), v20), v22), v21)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v30, v31), v20), v22), v21)));
    v33 = (int16x8_t)vzip1q_s8(v32, (int8x16_t)0);
    a14 = vaddq_s16(*(int16x8_t *)(a5 + v14 + 16), (int16x8_t)vzip2q_s8(v32, (int8x16_t)0));
    *a3 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(*(int16x8_t *)(a5 + v14), v33)), a14);
    a3 = (int8x16_t *)((char *)a3 + a4);
    v14 += 32;
    v23 = (uint64_t *)((char *)v23 + a2);
  }
  while ((_DWORD)v14 != 512);
  return result;
}

int16x8_t *sub_216056DE0(int16x8_t *result, int8x16_t *a2, int a3, uint64_t a4, int16x8_t *a5, int a6, uint64_t a7, uint64_t a8, int8x16_t a9, int8x16_t a10, int8x16_t a11, unsigned int a12)
{
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int32x4_t v15;
  int32x4_t v16;
  int8x16_t v17;
  int32x4_t v18;
  int16x8_t v19;
  int v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int8x16_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int16x8_t v39;

  v12 = *(_DWORD **)(a7 + 48);
  if (v12[89] == 1 || v12[90] == 1)
  {
    if (a6)
    {
      v13 = a8 + 16 * a12;
      v14 = *(unsigned __int8 *)(v13 + 15) - 4;
      LODWORD(v13) = *(unsigned __int8 *)(v13 + v14 + 8);
      a9.i32[0] = v12[85];
      v15 = (int32x4_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE800);
      a10.i32[0] = v12[96 * v14 + 283 + 3 * v13];
      v16 = (int32x4_t)vqtbl1q_s8(a10, (int8x16_t)xmmword_2160EE800);
      a11.i32[0] = v12[96 * v14 + 91 + 3 * v13];
      v17 = vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE7D0);
      v18 = vdupq_n_s32(-v12[83]);
      v19 = (int16x8_t)vqtbl1q_s8(v17, (int8x16_t)xmmword_2160EE800);
      if ((2 * a6) <= 1)
        v20 = 1;
      else
        v20 = 2 * a6;
      do
      {
        v21 = result[1];
        v22 = vmulq_s16(*result, v19);
        v23 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)result->i8, *(int16x4_t *)v19.i8), (int16x8_t)vmull_high_s16(*result, v19));
        v24 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v22, v23), v15), v18), v16)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v22, v23), v15), v18), v16));
        v25 = vmulq_s16(v21, v19);
        v26 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v21.i8, *(int16x4_t *)v19.i8), (int16x8_t)vmull_high_s16(v21, v19));
        v27 = vqmovun_high_s16(vqmovun_s16(v24), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v25, v26), v15), v18), v16)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v25, v26), v15), v18), v16)));
        v28 = (int16x8_t)vzip1q_s8(v27, (int8x16_t)0);
        v29 = (int16x8_t)vzip2q_s8(v27, (int8x16_t)0);
        if (a4)
        {
          v30 = *a5;
          v31 = a5[1];
          a5 += 2;
          v28 = vaddq_s16(v30, v28);
          v29 = vaddq_s16(v31, v29);
        }
        *a2 = vqmovun_high_s16(vqmovun_s16(v28), v29);
        a2 = (int8x16_t *)((char *)a2 + a3);
        result += 2;
        --v20;
      }
      while (v20);
    }
  }
  else if (a6 >= 1)
  {
    do
    {
      v33 = *result;
      v32 = result[1];
      v35 = result[2];
      v34 = result[3];
      if (a4)
      {
        v36 = *a5;
        v37 = a5[1];
        v38 = a5[2];
        v39 = a5[3];
        a5 += 4;
        v33 = vaddq_s16(v36, v33);
        v32 = vaddq_s16(v37, v32);
        v35 = vaddq_s16(v38, v35);
        v34 = vaddq_s16(v39, v34);
      }
      *a2 = vqmovun_high_s16(vqmovun_s16(v33), v32);
      *(int8x16_t *)((char *)a2 + a3) = vqmovun_high_s16(vqmovun_s16(v35), v34);
      a2 = (int8x16_t *)((char *)a2 + 2 * a3);
      result += 4;
      --a6;
    }
    while (a6);
  }
  return result;
}

uint64_t sub_216056F9C(uint64_t result, int a2, __n128 *a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7, int8x16_t a8, double a9, int8x16_t a10, int8x16_t a11, int8x16_t a12, int8x16_t a13)
{
  int32x4_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _DWORD *v17;
  int16x8_t v18;
  int16x8_t v19;
  int32x4_t v20;
  int32x4_t v21;
  int32x4_t v22;
  uint64_t *v23;
  int v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int32x4_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int32x4_t v31;
  int16x8_t v32;
  int8x16_t v33;

  v14 = a6 + 16 * a7;
  v15 = *(unsigned __int8 *)(v14 + 15) - 4;
  v16 = *(_QWORD *)(a5 + 48);
  v17 = (_DWORD *)(v16 + 384 * v15 + 12 * *(unsigned __int8 *)(v14 + v15 + 8));
  a8.i32[0] = v17[92];
  a10.i32[0] = v17[93];
  v18 = (int16x8_t)vqtbl1q_s8(a10, (int8x16_t)xmmword_2160EE7D0);
  v19 = vzip1q_s16((int16x8_t)vqtbl1q_s8(a8, (int8x16_t)xmmword_2160EE7D0), v18);
  v18.i32[0] = *(_DWORD *)(v16 + 344);
  v20 = (int32x4_t)vqtbl1q_s8((int8x16_t)v18, (int8x16_t)xmmword_2160EE800);
  a11.i32[0] = v17[284];
  a12.i32[0] = v17[285];
  v21 = vdupq_n_s32(-*(_DWORD *)(v16 + 336));
  v22 = vzip1q_s32((int32x4_t)vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE800), (int32x4_t)vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE800));
  v23 = (uint64_t *)(result + 8);
  v24 = 8;
  do
  {
    a13.i64[0] = *(v23 - 1);
    v13.i64[0] = *v23;
    v25 = (int16x8_t)vzip1q_s8(a13, (int8x16_t)0);
    v26 = vmulq_s16(v19, v25);
    v27 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v25.i8, *(int16x4_t *)v19.i8), (int16x8_t)vmull_high_s16(v25, v19));
    v28 = (int32x4_t)vzip1q_s16(v26, v27);
    v29 = (int16x8_t)vzip1q_s8((int8x16_t)v13, (int8x16_t)0);
    v30 = vmulq_s16(v19, v29);
    v31 = (int32x4_t)vzip2q_s16(v26, v27);
    v32 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v29.i8, *(int16x4_t *)v19.i8), (int16x8_t)vmull_high_s16(v29, v19));
    v13 = vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v30, v32), v20), v21), v22);
    v33 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(v28, v20), v21), v22)), vaddq_s32(vshlq_s32(vaddq_s32(v31, v20), v21), v22))), vqmovn_high_s32(vqmovn_s32(v13), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v30, v32), v20), v21), v22)));
    a13 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vzip1q_s8(v33, (int8x16_t)0)), (int16x8_t)vzip2q_s8(v33, (int8x16_t)0));
    *a3 = (__n128)a13;
    a3 = (__n128 *)((char *)a3 + a4);
    v23 = (uint64_t *)((char *)v23 + a2);
    --v24;
  }
  while (v24);
  return result;
}

uint64_t sub_2160570D0(uint64_t result, int a2, int8x16_t *a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8, int8x16_t a9, double a10, int8x16_t a11, int8x16_t a12, int8x16_t a13, int16x8_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _DWORD *v18;
  int16x8_t v19;
  int16x8_t v20;
  int32x4_t v21;
  int32x4_t v22;
  int32x4_t v23;
  uint64_t *v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int32x4_t v28;
  int32x4_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int8x16_t v33;
  int16x8_t v34;

  v14 = 0;
  v15 = a7 + 16 * a8;
  v16 = *(unsigned __int8 *)(v15 + 15) - 4;
  v17 = *(_QWORD *)(a6 + 48);
  v18 = (_DWORD *)(v17 + 384 * v16 + 12 * *(unsigned __int8 *)(v15 + v16 + 8));
  a9.i32[0] = v18[92];
  a11.i32[0] = v18[93];
  v19 = (int16x8_t)vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE7D0);
  v20 = vzip1q_s16((int16x8_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE7D0), v19);
  v19.i32[0] = *(_DWORD *)(v17 + 344);
  v21 = (int32x4_t)vqtbl1q_s8((int8x16_t)v19, (int8x16_t)xmmword_2160EE800);
  a12.i32[0] = v18[284];
  a13.i32[0] = v18[285];
  v22 = vzip1q_s32((int32x4_t)vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE800), (int32x4_t)vqtbl1q_s8(a13, (int8x16_t)xmmword_2160EE800));
  v23 = vdupq_n_s32(-*(_DWORD *)(v17 + 336));
  v24 = (uint64_t *)(result + 8);
  do
  {
    a14.i64[0] = *(v24 - 1);
    v25 = (int16x8_t)vzip1q_s8((int8x16_t)a14, (int8x16_t)0);
    v26 = vmulq_s16(v20, v25);
    v27 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v25.i8, *(int16x4_t *)v20.i8), (int16x8_t)vmull_high_s16(v25, v20));
    v28 = (int32x4_t)vzip1q_s16(v26, v27);
    v29 = (int32x4_t)vzip2q_s16(v26, v27);
    v26.i64[0] = *v24;
    v30 = (int16x8_t)vzip1q_s8((int8x16_t)v26, (int8x16_t)0);
    v31 = vmulq_s16(v20, v30);
    v32 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v30.i8, *(int16x4_t *)v20.i8), (int16x8_t)vmull_high_s16(v30, v20));
    v33 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32(v28, v21), v23), v22)), vaddq_s32(vshlq_s32(vaddq_s32(v29, v21), v23), v22))), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v31, v32), v21), v23), v22)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v31, v32), v21), v23), v22)));
    v34 = (int16x8_t)vzip1q_s8(v33, (int8x16_t)0);
    a14 = vaddq_s16(*(int16x8_t *)(a5 + v14 + 16), (int16x8_t)vzip2q_s8(v33, (int8x16_t)0));
    *a3 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(*(int16x8_t *)(a5 + v14), v34)), a14);
    a3 = (int8x16_t *)((char *)a3 + a4);
    v14 += 32;
    v24 = (uint64_t *)((char *)v24 + a2);
  }
  while ((_DWORD)v14 != 256);
  return result;
}

int16x8_t *sub_21605721C(int16x8_t *result, int8x16_t *a2, int a3, uint64_t a4, int16x8_t *a5, int a6, uint64_t a7, uint64_t a8, int8x16_t a9, double a10, int8x16_t a11, int8x16_t a12, int8x16_t a13, unsigned int a14)
{
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _DWORD *v17;
  int16x8_t v18;
  int16x8_t v19;
  int32x4_t v20;
  int32x4_t v21;
  int32x4_t v22;
  int v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int8x16_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int16x8_t v39;
  int16x8_t v40;
  int16x8_t v41;
  int16x8_t v42;

  v14 = *(_DWORD **)(a7 + 48);
  if (v14[89] == 1 || v14[90] == 1)
  {
    if (a6)
    {
      v15 = a8 + 16 * a14;
      v16 = *(unsigned __int8 *)(v15 + 15) - 4;
      v17 = &v14[96 * v16 + 3 * *(unsigned __int8 *)(v15 + v16 + 8)];
      a9.i32[0] = v17[92];
      a11.i32[0] = v17[93];
      v18 = (int16x8_t)vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE7D0);
      v19 = vzip1q_s16((int16x8_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE7D0), v18);
      v18.i32[0] = v14[86];
      v20 = (int32x4_t)vqtbl1q_s8((int8x16_t)v18, (int8x16_t)xmmword_2160EE800);
      a12.i32[0] = v17[284];
      a13.i32[0] = v17[285];
      v21 = vzip1q_s32((int32x4_t)vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE800), (int32x4_t)vqtbl1q_s8(a13, (int8x16_t)xmmword_2160EE800));
      v22 = vdupq_n_s32(-v14[84]);
      v23 = 2 * a6;
      if ((2 * a6) <= 1)
        v23 = 1;
      do
      {
        v24 = result[1];
        v25 = vmulq_s16(*result, v19);
        v26 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)result->i8, *(int16x4_t *)v19.i8), (int16x8_t)vmull_high_s16(*result, v19));
        v27 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v25, v26), v20), v22), v21)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v25, v26), v20), v22), v21));
        v28 = vmulq_s16(v24, v19);
        v29 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v24.i8, *(int16x4_t *)v19.i8), (int16x8_t)vmull_high_s16(v24, v19));
        v30 = vqmovun_high_s16(vqmovun_s16(v27), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v28, v29), v20), v22), v21)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v28, v29), v20), v22), v21)));
        v31 = (int16x8_t)vzip1q_s8(v30, (int8x16_t)0);
        v32 = (int16x8_t)vzip2q_s8(v30, (int8x16_t)0);
        if (a4)
        {
          v33 = *a5;
          v34 = a5[1];
          a5 += 2;
          v31 = vaddq_s16(v33, v31);
          v32 = vaddq_s16(v34, v32);
        }
        *a2 = vqmovun_high_s16(vqmovun_s16(v31), v32);
        a2 = (int8x16_t *)((char *)a2 + a3);
        result += 2;
        --v23;
      }
      while (v23);
    }
  }
  else if (a6 >= 1)
  {
    do
    {
      v36 = *result;
      v35 = result[1];
      v38 = result[2];
      v37 = result[3];
      if (a4)
      {
        v39 = *a5;
        v40 = a5[1];
        v41 = a5[2];
        v42 = a5[3];
        a5 += 4;
        v36 = vaddq_s16(v39, v36);
        v35 = vaddq_s16(v40, v35);
        v38 = vaddq_s16(v41, v38);
        v37 = vaddq_s16(v42, v37);
      }
      *a2 = vqmovun_high_s16(vqmovun_s16(v36), v35);
      *(int8x16_t *)((char *)a2 + a3) = vqmovun_high_s16(vqmovun_s16(v38), v37);
      a2 = (int8x16_t *)((char *)a2 + 2 * a3);
      result += 4;
      --a6;
    }
    while (a6);
  }
  return result;
}

int16x8_t *sub_2160573DC(int16x8_t *result, int8x8_t *a2, int a3, uint64_t a4, int16x8_t *a5, int a6, uint64_t a7, uint64_t a8, int8x16_t a9, int8x16_t a10, double a11, int8x16_t a12, unsigned int a13)
{
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int32x4_t v16;
  int32x4_t v17;
  int16x8_t v18;
  int32x4_t v19;
  int v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int8x16_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int16x8_t v39;

  v13 = *(_DWORD **)(a7 + 48);
  if (v13[89] == 1 || v13[90] == 1)
  {
    if (a6)
    {
      v14 = a8 + 16 * a13;
      v15 = *(unsigned __int8 *)(v14 + 15) - 4;
      LODWORD(v14) = *(unsigned __int8 *)(v14 + v15 + 8);
      a9.i32[0] = v13[85];
      v16 = (int32x4_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE800);
      a10.i32[0] = v13[96 * v15 + 283 + 3 * v14];
      v17 = (int32x4_t)vqtbl1q_s8(a10, (int8x16_t)xmmword_2160EE800);
      a12.i32[0] = v13[96 * v15 + 91 + 3 * v14];
      v18 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
      v19 = vdupq_n_s32(-v13[83]);
      if ((2 * a6) <= 1)
        v20 = 1;
      else
        v20 = 2 * a6;
      do
      {
        v21 = result[1];
        v22 = vmulq_s16(*result, v18);
        v23 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)result->i8, *(int16x4_t *)v18.i8), (int16x8_t)vmull_high_s16(*result, v18));
        v24 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v22, v23), v16), v19), v17)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v22, v23), v16), v19), v17));
        v25 = vmulq_s16(v21, v18);
        v26 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v21.i8, *(int16x4_t *)v18.i8), (int16x8_t)vmull_high_s16(v21, v18));
        v27 = vqmovun_high_s16(vqmovun_s16(v24), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v25, v26), v16), v19), v17)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v25, v26), v16), v19), v17)));
        v28 = (int16x8_t)vzip1q_s8(v27, (int8x16_t)0);
        v29 = (int16x8_t)vzip2q_s8(v27, (int8x16_t)0);
        if (a4)
        {
          v30 = *a5;
          v31 = a5[2];
          a5 += 4;
          v28 = vaddq_s16(v30, v28);
          v29 = vaddq_s16(v31, v29);
        }
        *a2 = vqmovun_s16(v28);
        *(int8x8_t *)((char *)a2 + a3) = vqmovun_s16(v29);
        a2 = (int8x8_t *)((char *)a2 + 2 * a3);
        result += 2;
        --v20;
      }
      while (v20);
    }
  }
  else if (a6 >= 1)
  {
    do
    {
      v33 = *result;
      v32 = result[1];
      v35 = result[2];
      v34 = result[3];
      if (a4)
      {
        v36 = *a5;
        v37 = a5[2];
        v38 = a5[4];
        v39 = a5[6];
        a5 += 8;
        v33 = vaddq_s16(v36, v33);
        v32 = vaddq_s16(v37, v32);
        v35 = vaddq_s16(v38, v35);
        v34 = vaddq_s16(v39, v34);
      }
      *a2 = vqmovun_s16(v33);
      *(int8x8_t *)((char *)a2 + a3) = vqmovun_s16(v32);
      *(int8x8_t *)((char *)a2 + 2 * a3) = vqmovun_s16(v35);
      *(int8x8_t *)((char *)a2 + 3 * a3) = vqmovun_s16(v34);
      a2 = (int8x8_t *)((char *)a2 + 4 * a3);
      result += 4;
      --a6;
    }
    while (a6);
  }
  return result;
}

int16x8_t *sub_2160575C0(int16x8_t *result, int8x8_t *a2, int a3, uint64_t a4, int16x8_t *a5, int a6, uint64_t a7, uint64_t a8, int8x16_t a9, double a10, int8x16_t a11, int8x16_t a12, int8x16_t a13, unsigned int a14)
{
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _DWORD *v17;
  int16x8_t v18;
  int16x8_t v19;
  int32x4_t v20;
  int32x4_t v21;
  int v22;
  int32x4_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int8x16_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int16x8_t v39;
  int16x8_t v40;
  int16x8_t v41;
  int16x8_t v42;

  v14 = *(_DWORD **)(a7 + 48);
  if (v14[89] == 1 || v14[90] == 1)
  {
    if (a6)
    {
      v15 = a8 + 16 * a14;
      v16 = *(unsigned __int8 *)(v15 + 15) - 4;
      v17 = &v14[96 * v16 + 3 * *(unsigned __int8 *)(v15 + v16 + 8)];
      a9.i32[0] = v17[92];
      a11.i32[0] = v17[93];
      v18 = (int16x8_t)vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE7D0);
      v19 = vzip1q_s16((int16x8_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE7D0), v18);
      v18.i32[0] = v14[86];
      v20 = (int32x4_t)vqtbl1q_s8((int8x16_t)v18, (int8x16_t)xmmword_2160EE800);
      a12.i32[0] = v17[284];
      a13.i32[0] = v17[285];
      v21 = vzip1q_s32((int32x4_t)vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE800), (int32x4_t)vqtbl1q_s8(a13, (int8x16_t)xmmword_2160EE800));
      v22 = 2 * a6;
      v23 = vdupq_n_s32(-v14[84]);
      if ((2 * a6) <= 1)
        v22 = 1;
      do
      {
        v24 = result[1];
        v25 = vmulq_s16(*result, v19);
        v26 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)result->i8, *(int16x4_t *)v19.i8), (int16x8_t)vmull_high_s16(*result, v19));
        v27 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v25, v26), v20), v23), v21)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v25, v26), v20), v23), v21));
        v28 = vmulq_s16(v24, v19);
        v29 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v24.i8, *(int16x4_t *)v19.i8), (int16x8_t)vmull_high_s16(v24, v19));
        v30 = vqmovun_high_s16(vqmovun_s16(v27), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v28, v29), v20), v23), v21)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v28, v29), v20), v23), v21)));
        v31 = (int16x8_t)vzip1q_s8(v30, (int8x16_t)0);
        v32 = (int16x8_t)vzip2q_s8(v30, (int8x16_t)0);
        if (a4)
        {
          v33 = *a5;
          v34 = a5[2];
          a5 += 4;
          v31 = vaddq_s16(v33, v31);
          v32 = vaddq_s16(v34, v32);
        }
        *a2 = vqmovun_s16(v31);
        *(int8x8_t *)((char *)a2 + a3) = vqmovun_s16(v32);
        a2 = (int8x8_t *)((char *)a2 + 2 * a3);
        result += 2;
        --v22;
      }
      while (v22);
    }
  }
  else if (a6 >= 1)
  {
    do
    {
      v36 = *result;
      v35 = result[1];
      v38 = result[2];
      v37 = result[3];
      if (a4)
      {
        v39 = *a5;
        v40 = a5[2];
        v41 = a5[4];
        v42 = a5[6];
        a5 += 8;
        v36 = vaddq_s16(v39, v36);
        v35 = vaddq_s16(v40, v35);
        v38 = vaddq_s16(v41, v38);
        v37 = vaddq_s16(v42, v37);
      }
      *a2 = vqmovun_s16(v36);
      *(int8x8_t *)((char *)a2 + a3) = vqmovun_s16(v35);
      *(int8x8_t *)((char *)a2 + 2 * a3) = vqmovun_s16(v38);
      *(int8x8_t *)((char *)a2 + 3 * a3) = vqmovun_s16(v37);
      a2 = (int8x8_t *)((char *)a2 + 4 * a3);
      result += 4;
      --a6;
    }
    while (a6);
  }
  return result;
}

int8x8_t sub_2160577A8(int16x8_t *a1, int8x8_t *a2, int a3, uint64_t a4, int16x8_t *a5, uint64_t a6, uint64_t a7, unsigned int a8, int8x16_t a9, double a10, int8x16_t a11, int8x16_t a12, int8x16_t a13)
{
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _DWORD *v16;
  int16x8_t v17;
  int16x8_t v18;
  int32x4_t v19;
  int32x4_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int32x4_t v24;
  int32x4_t v25;
  int32x4_t v26;
  int32x4_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int8x16_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int8x8_t result;

  v13 = *(_DWORD **)(a6 + 48);
  if (v13[89] != 1 && v13[90] != 1)
  {
    v32 = *a1;
    v33 = a1[1];
    if (!a4)
      goto LABEL_5;
    goto LABEL_4;
  }
  v14 = a7 + 16 * a8;
  v15 = *(unsigned __int8 *)(v14 + 15) - 4;
  v16 = &v13[96 * v15 + 3 * *(unsigned __int8 *)(v14 + v15 + 8)];
  a9.i32[0] = v16[92];
  a11.i32[0] = v16[93];
  v17 = (int16x8_t)vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE7D0);
  v18 = vzip1q_s16((int16x8_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_2160EE7D0), v17);
  v17.i32[0] = v13[86];
  v19 = (int32x4_t)vqtbl1q_s8((int8x16_t)v17, (int8x16_t)xmmword_2160EE800);
  a12.i32[0] = v16[284];
  a13.i32[0] = v16[285];
  v20 = vzip1q_s32((int32x4_t)vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE800), (int32x4_t)vqtbl1q_s8(a13, (int8x16_t)xmmword_2160EE800));
  v21 = a1[1];
  v22 = vmulq_s16(*a1, v18);
  v23 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)a1->i8, *(int16x4_t *)v18.i8), (int16x8_t)vmull_high_s16(*a1, v18));
  v24 = (int32x4_t)vzip1q_s16(v22, v23);
  v25 = (int32x4_t)vzip2q_s16(v22, v23);
  v26 = vaddq_s32(v24, v19);
  v27 = vdupq_n_s32(-v13[84]);
  v28 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(v26, v27), v20)), vaddq_s32(vshlq_s32(vaddq_s32(v25, v19), v27), v20));
  v29 = vmulq_s16(v21, v18);
  v30 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v21.i8, *(int16x4_t *)v18.i8), (int16x8_t)vmull_high_s16(v21, v18));
  v31 = vqmovun_high_s16(vqmovun_s16(v28), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v29, v30), v19), v27), v20)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v29, v30), v19), v27), v20)));
  v32 = (int16x8_t)vzip1q_s8(v31, (int8x16_t)0);
  v33 = (int16x8_t)vzip2q_s8(v31, (int8x16_t)0);
  if (a4)
  {
LABEL_4:
    v32 = vaddq_s16(*a5, v32);
    v33 = vaddq_s16(a5[2], v33);
  }
LABEL_5:
  result = vqmovun_s16(v32);
  *a2 = result;
  *(int8x8_t *)((char *)a2 + a3) = vqmovun_s16(v33);
  return result;
}

int16x4_t *sub_2160578F0(int16x4_t *result, _DWORD *a2, int a3, uint64_t a4, uint64_t *a5, int a6, uint64_t a7, uint64_t a8, int16x8_t a9, int16x8_t a10, int16x8_t a11, int16x8_t a12, int16x8_t a13, int16x8_t a14, int16x8_t a15, int16x8_t a16, unsigned int a17)
{
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  int32x4_t v20;
  int32x4_t v21;
  int16x8_t v22;
  int32x4_t v23;
  int v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int8x16_t v32;

  v17 = *(_DWORD **)(a7 + 48);
  if (v17[89] == 1 || v17[90] == 1)
  {
    if (a6)
    {
      v18 = a8 + 16 * a17;
      v19 = *(unsigned __int8 *)(v18 + 15) - 4;
      LODWORD(v18) = *(unsigned __int8 *)(v18 + v19 + 8);
      a9.i32[0] = v17[85];
      v20 = (int32x4_t)vqtbl1q_s8((int8x16_t)a9, (int8x16_t)xmmword_2160EE800);
      a10.i32[0] = v17[96 * v19 + 283 + 3 * v18];
      v21 = (int32x4_t)vqtbl1q_s8((int8x16_t)a10, (int8x16_t)xmmword_2160EE800);
      a12.i32[0] = v17[96 * v19 + 91 + 3 * v18];
      v22 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8((int8x16_t)a12, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)xmmword_2160EE800);
      v23 = vdupq_n_s32(-v17[83]);
      if ((2 * a6) <= 1)
        v24 = 1;
      else
        v24 = 2 * a6;
      v25 = (int16x8_t)vmull_s16(0, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v22, (int8x16_t)v22, 8uLL));
      do
      {
        *(int16x4_t *)a15.i8 = *result;
        *(int16x4_t *)a16.i8 = result[1];
        v26 = vmulq_s16(a15, v22);
        v27 = vuzp2q_s16((int16x8_t)vmull_s16(*result, *(int16x4_t *)v22.i8), v25);
        v28 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v26, v27), v20), v23), v21)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v26, v27), v20), v23), v21));
        v29 = vmulq_s16(a16, v22);
        v30 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)a16.i8, *(int16x4_t *)v22.i8), v25);
        v31 = vzip1q_s16(v29, v30);
        v32 = vqmovun_high_s16(vqmovun_s16(v28), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)v31, v20), v23), v21)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v29, v30), v20), v23), v21)));
        a16 = (int16x8_t)vzip1q_s8(v32, (int8x16_t)0);
        a15 = (int16x8_t)vzip2q_s8(v32, (int8x16_t)0);
        if (a4)
        {
          v28.i64[0] = *a5;
          v31.i64[0] = a5[4];
          a5 += 8;
          a16 = vaddq_s16(v28, a16);
          a15 = vaddq_s16(v31, a15);
        }
        *a2 = vqmovun_s16(a16).u32[0];
        *(_DWORD *)((char *)a2 + a3) = vqmovun_s16(a15).u32[0];
        a2 = (_DWORD *)((char *)a2 + 2 * a3);
        result += 2;
        --v24;
      }
      while (v24);
    }
  }
  else if (a6 >= 1)
  {
    do
    {
      *(int16x4_t *)a10.i8 = *result;
      *(int16x4_t *)a11.i8 = result[1];
      *(int16x4_t *)a12.i8 = result[2];
      *(int16x4_t *)a9.i8 = result[3];
      if (a4)
      {
        a13.i64[0] = *a5;
        a14.i64[0] = a5[4];
        a15.i64[0] = a5[8];
        a16.i64[0] = a5[12];
        a5 += 16;
        a10 = vaddq_s16(a13, a10);
        a11 = vaddq_s16(a14, a11);
        a12 = vaddq_s16(a15, a12);
        a9 = vaddq_s16(a16, a9);
      }
      *a2 = vqmovun_s16(a10).u32[0];
      *(_DWORD *)((char *)a2 + a3) = vqmovun_s16(a11).u32[0];
      *(_DWORD *)((char *)a2 + 2 * a3) = vqmovun_s16(a12).u32[0];
      *(_DWORD *)((char *)a2 + 3 * a3) = vqmovun_s16(a9).u32[0];
      a2 += a3;
      result += 4;
      --a6;
    }
    while (a6);
  }
  return result;
}

double sub_216057AD4(int16x4_t *a1, _DWORD *a2, int a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, unsigned int a8, int16x8_t a9, int16x8_t a10, int16x8_t a11, int16x8_t a12, int8x16_t a13, int16x8_t a14, int16x8_t a15, int16x8_t a16)
{
  _DWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _DWORD *v19;
  int16x8_t v20;
  int32x4_t v21;
  int32x4_t v22;
  int32x4_t v23;
  char v24;
  int16x8_t v25;
  char v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int8x16_t v33;

  v16 = *(_DWORD **)(a6 + 48);
  if (v16[89] == 1 || v16[90] == 1)
  {
    v17 = a7 + 16 * a8;
    v18 = *(unsigned __int8 *)(v17 + 15) - 4;
    v19 = &v16[96 * v18 + 3 * *(unsigned __int8 *)(v17 + v18 + 8)];
    a9.i32[0] = v19[92];
    a11.i32[0] = v19[93];
    v20 = (int16x8_t)vqtbl1q_s8((int8x16_t)a11, (int8x16_t)xmmword_2160EE7D0);
    a9 = vzip1q_s16((int16x8_t)vqtbl1q_s8((int8x16_t)a9, (int8x16_t)xmmword_2160EE7D0), v20);
    v20.i32[0] = v16[86];
    v21 = (int32x4_t)vqtbl1q_s8((int8x16_t)v20, (int8x16_t)xmmword_2160EE800);
    a12.i32[0] = v19[284];
    a13.i32[0] = v19[285];
    v22 = vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)a12, (int8x16_t)xmmword_2160EE800), (int32x4_t)vqtbl1q_s8(a13, (int8x16_t)xmmword_2160EE800));
    v23 = vdupq_n_s32(-v16[84]);
    v24 = 1;
    v25 = (int16x8_t)vmull_s16(0, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)a9, (int8x16_t)a9, 8uLL));
    do
    {
      v26 = v24;
      *(int16x4_t *)a15.i8 = *a1;
      *(int16x4_t *)a16.i8 = a1[1];
      v27 = vmulq_s16(a9, a15);
      v28 = vuzp2q_s16((int16x8_t)vmull_s16(*a1, *(int16x4_t *)a9.i8), v25);
      v29 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v27, v28), v21), v23), v22)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v27, v28), v21), v23), v22));
      v30 = vmulq_s16(a9, a16);
      v31 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)a16.i8, *(int16x4_t *)a9.i8), v25);
      v32 = vzip1q_s16(v30, v31);
      v33 = vqmovun_high_s16(vqmovun_s16(v29), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)v32, v21), v23), v22)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v30, v31), v21), v23), v22)));
      a16 = (int16x8_t)vzip1q_s8(v33, (int8x16_t)0);
      a15 = (int16x8_t)vzip2q_s8(v33, (int8x16_t)0);
      if (a4)
      {
        v29.i64[0] = *a5;
        v32.i64[0] = a5[4];
        a5 += 8;
        a16 = vaddq_s16(v29, a16);
        a15 = vaddq_s16(v32, a15);
      }
      v24 = 0;
      *a2 = vqmovun_s16(a16).u32[0];
      *(_DWORD *)((char *)a2 + a3) = vqmovun_s16(a15).u32[0];
      a2 = (_DWORD *)((char *)a2 + 2 * a3);
      a1 += 2;
    }
    while ((v26 & 1) != 0);
  }
  else
  {
    *(int16x4_t *)a11.i8 = *a1;
    *(int16x4_t *)a12.i8 = a1[1];
    *(int16x4_t *)a9.i8 = a1[2];
    *(int16x4_t *)a10.i8 = a1[3];
    if (a4)
    {
      a13.i64[0] = *a5;
      a14.i64[0] = a5[4];
      a15.i64[0] = a5[8];
      a16.i64[0] = a5[12];
      a11 = vaddq_s16((int16x8_t)a13, a11);
      a12 = vaddq_s16(a14, a12);
      a9 = vaddq_s16(a15, a9);
      a10 = vaddq_s16(a16, a10);
    }
    *a2 = vqmovun_s16(a11).u32[0];
    *(_DWORD *)((char *)a2 + a3) = vqmovun_s16(a12).u32[0];
    *(int8x8_t *)a9.i8 = vqmovun_s16(a9);
    *(_DWORD *)((char *)a2 + 2 * a3) = a9.i32[0];
    *(_DWORD *)((char *)a2 + 3 * a3) = vqmovun_s16(a10).u32[0];
  }
  return *(double *)a9.i64;
}

int8x8_t sub_216057C90(int16x4_t *a1, _DWORD *a2, int a3, uint64_t a4, unint64_t *a5, uint64_t a6, uint64_t a7, unsigned int a8, int16x8_t a9, int16x8_t a10, int8x16_t a11, int8x16_t a12, int8x16_t a13, int16x8_t a14)
{
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _DWORD *v17;
  int16x8_t v18;
  int16x8_t v19;
  int32x4_t v20;
  int32x4_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int16x8_t v24;
  int32x4_t v25;
  int32x4_t v26;
  int32x4_t v27;
  int32x4_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int8x8_t result;

  v14 = *(_DWORD **)(a6 + 48);
  if (v14[89] != 1 && v14[90] != 1)
  {
    *(int16x4_t *)a9.i8 = *a1;
    *(int16x4_t *)a10.i8 = a1[1];
    if (!a4)
      goto LABEL_5;
    goto LABEL_4;
  }
  v15 = a7 + 16 * a8;
  v16 = *(unsigned __int8 *)(v15 + 15) - 4;
  v17 = &v14[96 * v16 + 3 * *(unsigned __int8 *)(v15 + v16 + 8)];
  a9.i32[0] = v17[92];
  a11.i32[0] = v17[93];
  v18 = (int16x8_t)vqtbl1q_s8(a11, (int8x16_t)xmmword_2160EE7D0);
  v19 = vzip1q_s16((int16x8_t)vqtbl1q_s8((int8x16_t)a9, (int8x16_t)xmmword_2160EE7D0), v18);
  v18.i32[0] = v14[86];
  v20 = (int32x4_t)vqtbl1q_s8((int8x16_t)v18, (int8x16_t)xmmword_2160EE800);
  a12.i32[0] = v17[284];
  a13.i32[0] = v17[285];
  v21 = vzip1q_s32((int32x4_t)vqtbl1q_s8(a12, (int8x16_t)xmmword_2160EE800), (int32x4_t)vqtbl1q_s8(a13, (int8x16_t)xmmword_2160EE800));
  a12.i8[8] = 0;
  a12.i8[9] = 0;
  a12.i8[10] = 0;
  a12.i8[11] = 0;
  a12.i8[12] = 0;
  a12.i8[13] = 0;
  a12.i8[14] = 0;
  a12.i8[15] = 0;
  *(int16x4_t *)a13.i8 = *a1;
  *(int16x4_t *)a14.i8 = a1[1];
  v22 = vmulq_s16(v19, (int16x8_t)a13);
  v23 = (int16x8_t)vmull_s16(0, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v19, (int8x16_t)v19, 8uLL));
  v24 = vuzp2q_s16((int16x8_t)vmull_s16(*a1, *(int16x4_t *)v19.i8), v23);
  v25 = (int32x4_t)vzip1q_s16(v22, v24);
  v26 = (int32x4_t)vzip2q_s16(v22, v24);
  v27 = vaddq_s32(v25, v20);
  v28 = vdupq_n_s32(-v14[84]);
  v29 = vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(v27, v28), v21)), vaddq_s32(vshlq_s32(vaddq_s32(v26, v20), v28), v21));
  v30 = vmulq_s16(v19, a14);
  v31 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)a14.i8, *(int16x4_t *)v19.i8), v23);
  a11 = vqmovun_high_s16(vqmovun_s16(v29), vqmovn_high_s32(vqmovn_s32(vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v30, v31), v20), v28), v21)), vaddq_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v30, v31), v20), v28), v21)));
  a9 = (int16x8_t)vzip1q_s8(a11, (int8x16_t)0);
  a10 = (int16x8_t)vzip2q_s8(a11, (int8x16_t)0);
  if (a4)
  {
LABEL_4:
    a11.i64[0] = *a5;
    a12.i64[0] = a5[4];
    a9 = vaddq_s16((int16x8_t)a11, a9);
    a10 = vaddq_s16((int16x8_t)a12, a10);
  }
LABEL_5:
  result = vqmovun_s16(a9);
  *a2 = result.i32[0];
  *(_DWORD *)((char *)a2 + a3) = vqmovun_s16(a10).u32[0];
  return result;
}

uint64_t sub_216057DD8(uint64_t result, uint64_t a2)
{
  __int128 v2;
  uint64_t v3;
  __int128 v4;
  __int16 *v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  __int16 *v15;
  __int16 v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  _QWORD *v35;
  __int16 v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;

  v34 = *(unsigned __int8 *)(result + 1104);
  if (*(_BYTE *)(result + 1104))
  {
    v3 = 0;
    v37 = result + 848;
    v35 = *(_QWORD **)(a2 + 64);
    v33 = 16 * *(_DWORD *)(result + 828);
    v31 = v33 | 0xF;
    v4 = 0uLL;
    v30 = result;
    do
    {
      v5 = (__int16 *)(v37 + 16 * v3);
      v6 = *((unsigned __int8 *)v5 + 15);
      v7 = *(unsigned __int16 *)(result + 858);
      if (v7 >= 0x103)
        v7 = 259;
      v8 = word_254E10E30[40 * v7 + 24 + v3];
      v9 = v8 >> 8;
      v38 = v2;
      v39 = v4;
      if (v6 == 6)
      {
        v10 = *(_QWORD *)(*v35 + 8 * *((unsigned __int8 *)v5 + 8));
        if (!v10)
          return result;
        v36 = *v5;
        v11 = v5[1];
        if ((v31 + (v11 >> 2)) / 16 < 0)
          v12 = -1;
        else
          v12 = (v31 + (v11 >> 2)) / 16;
        if (*(_DWORD *)(v10 + 12) <= v12)
        {
          sub_2160EC880(*(pthread_mutex_t **)(v10 + 16));
          while (*(_DWORD *)(v10 + 12) <= v12)
            sub_2160EC918(*(pthread_cond_t **)(v10 + 24), *(pthread_mutex_t **)(v10 + 16));
          sub_2160EC88C(*(pthread_mutex_t **)(v10 + 16));
          v2 = v38;
          v4 = v39;
        }
        v32 = v3;
        v29 = v8;
        v22 = v5[3];
        v23 = *(_QWORD *)(v35[1] + 8 * *((unsigned __int8 *)v5 + 9));
        if ((v31 + (v22 >> 2)) / 16 < 0)
          v24 = -1;
        else
          v24 = (v31 + (v22 >> 2)) / 16;
        if (*(_DWORD *)(v23 + 12) <= v24)
        {
          v25 = v8 >> 8;
          sub_2160EC880(*(pthread_mutex_t **)(v23 + 16));
          while (*(_DWORD *)(v23 + 12) <= v24)
            sub_2160EC918(*(pthread_cond_t **)(v23 + 24), *(pthread_mutex_t **)(v23 + 16));
          sub_2160EC88C(*(pthread_mutex_t **)(v23 + 16));
          v2 = v38;
          v4 = v39;
          v9 = v25;
        }
        v28 = v11 & 3 | (4 * (v36 & 3u));
        if (v29 == 4)
        {
          if (v9 == 8)
            __asm { BR              X8 }
          __asm { BR              X8 }
        }
        if (v29 == 8)
        {
          if (v9 == 4)
            __asm { BR              X10 }
          if (v9 == 8)
            __asm { BR              X10 }
          if (v9 == 16)
            __asm { BR              X10 }
        }
        else if (v29 == 16)
        {
          if (v9 == 16)
            __asm { BR              X10 }
          __asm { BR              X10 }
        }
        v3 = v32;
      }
      else
      {
        v13 = (v6 - 4);
        v14 = *(_QWORD *)(v35[v13] + 8 * *((unsigned __int8 *)v5 + v13 + 8));
        if (!v14)
          return result;
        v15 = &v5[2 * v13];
        v16 = *v15;
        v17 = v15[1];
        v18 = v33 + (v17 >> 2);
        v19 = v18 + 15;
        if (v18 < -15)
          v19 = v18 + 30;
        v20 = v19 >> 4;
        if (v20 < 0)
          v21 = -1;
        else
          v21 = v20;
        if (*(_DWORD *)(v14 + 12) <= v21)
        {
          sub_2160EC880(*(pthread_mutex_t **)(v14 + 16));
          while (*(_DWORD *)(v14 + 12) <= v21)
            sub_2160EC918(*(pthread_cond_t **)(v14 + 24), *(pthread_mutex_t **)(v14 + 16));
          sub_2160EC88C(*(pthread_mutex_t **)(v14 + 16));
          v2 = v38;
          v4 = v39;
        }
        v26 = v8 >> 8;
        v27 = v17 & 3 | (4 * (v16 & 3u));
        if ((_DWORD)v34 == 1)
          __asm { BR              X13 }
        if (v8 == 4)
        {
          if (v26 == 8)
            __asm { BR              X8 }
          __asm { BR              X8 }
        }
        if (v8 == 8)
        {
          if (v26 == 4)
            __asm { BR              X8 }
          if (v26 == 8)
            __asm { BR              X8 }
          if (v26 == 16)
            __asm { BR              X8 }
        }
        else if (v8 == 16)
        {
          __asm { BR              X11 }
        }
      }
      ++v3;
      result = v30;
    }
    while (v3 != v34);
  }
  return result;
}

uint64_t sub_216061920(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned __int16 *v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  unsigned __int16 *v13;
  unsigned __int16 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v20 = *(_QWORD *)(result + 48);
  v1 = *(unsigned __int8 *)(v20 + 272);
  if (*(_BYTE *)(v20 + 272))
  {
    v2 = result;
    v3 = 0;
    v19 = *(_QWORD *)(*(_QWORD *)(result + 176) + 112);
    v17 = result + 224;
    v21 = result;
    do
    {
      v22 = v3;
      v4 = v20 + 16 + 16 * v3;
      v5 = *(unsigned __int8 *)(v4 + 15);
      v6 = *(unsigned __int16 *)(v20 + 26);
      if (v6 >= 0x103)
        v6 = 259;
      v7 = word_254E10E30[40 * v6 + 24 + v3];
      v8 = v7 >> 8;
      v9 = (unsigned __int16 *)(v19 + 16 * v3);
      if (v5 == 6)
      {
        v18 = v7 >> 8;
        result = (__int16)v9[2];
        v16 = v9[1] & 3 | (4 * (*v9 & 3u));
        if (v7 == 4)
        {
          if (v18 == 8)
            __asm { BR              X8 }
          __asm { BR              X8 }
        }
        v2 = v21;
        if (v7 == 8)
        {
          if (v18 == 4)
            __asm { BR              X10 }
          if (v18 == 8)
            __asm { BR              X10 }
          if (v18 == 16)
            __asm { BR              X10 }
        }
        else if (v7 == 16)
        {
          if (v18 == 16)
            __asm { BR              X10 }
          __asm { BR              X10 }
        }
        v1 = *(unsigned __int8 *)(v20 + 272);
      }
      else
      {
        v10 = (v5 - 4);
        v11 = *(_QWORD *)(*(_QWORD *)(v17 + 8 * v10) + 8 * *(unsigned __int8 *)(v4 + v10 + 8));
        if (*(_BYTE *)(v2 + 29))
        {
          if (*(_BYTE *)(v2 + 30))
          {
            v12 = 2 * (*(_BYTE *)(v11 + 37) == 0);
          }
          else if (*(_BYTE *)(v11 + 37))
          {
            v12 = -2;
          }
          else
          {
            v12 = 0;
          }
        }
        else
        {
          v12 = 0;
        }
        v13 = &v9[2 * v10];
        v14 = v13[1];
        v15 = v14 & 3 | (4 * (*v13 & 3u));
        result = (__int16)(v12 + v14);
        if ((_DWORD)v1 == 1)
          __asm { BR              X9 }
        if (v7 == 4)
        {
          if (v8 == 8)
            __asm { BR              X8 }
          __asm { BR              X8 }
        }
        if (v7 == 8)
        {
          v2 = v21;
          if (v8 == 4)
            __asm { BR              X9 }
          if (v8 == 8)
            __asm { BR              X9 }
          if (v8 == 16)
            __asm { BR              X9 }
        }
        else
        {
          v2 = v21;
          if (v7 == 16)
            __asm { BR              X9 }
        }
      }
      v3 = v22 + 1;
    }
    while (v22 + 1 != v1);
  }
  return result;
}

uint64_t sub_21606BB54(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  unsigned __int16 *v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  unsigned __int16 *v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  unsigned __int16 *v18;
  unsigned __int16 v19;
  unsigned __int16 v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v31 = result;
  v30 = *(_QWORD *)(result + 48);
  v1 = *(unsigned __int8 *)(v30 + 272);
  if (*(_BYTE *)(v30 + 272))
  {
    v2 = 0;
    v28 = 16 * *(_DWORD *)result;
    v24 = result + 224;
    v29 = *(_QWORD *)(*(_QWORD *)(result + 176) + 112);
    v27 = 16 * *(_DWORD *)(result + 4);
    do
    {
      v3 = v30 + 16 + 16 * v2;
      v4 = *(unsigned __int8 *)(v3 + 15);
      v5 = *(unsigned __int16 *)(v30 + 26);
      if (v5 >= 0x103)
        v5 = 259;
      v6 = &word_254E10E30[40 * v5];
      v7 = v6[v2 + 24];
      v8 = v7 >> 8;
      v9 = *((unsigned __int8 *)v6 + v2 + 32);
      v10 = (unsigned __int16 *)(v29 + 16 * v2);
      if (v4 == 6)
      {
        v26 = v7 >> 8;
        result = *(_QWORD *)(*(_QWORD *)(v31 + 232) + 8 * *(unsigned __int8 *)(v3 + 9));
        v25 = v10[1] & 3 | (4 * (*v10 & 3u));
        v11 = *(_DWORD *)(result + 164);
        v12 = v28 + byte_2160EE5C0[v9] + ((__int16)v10[2] >> 2);
        v13 = v27 + byte_2160EE5D0[v9] + ((__int16)v10[3] >> 2);
        if (v12 <= -18)
          v12 = -18;
        if (v13 <= -18)
          v13 = -18;
        v14 = *(_DWORD *)(result + 132);
        if (v12 >= v11 + 1)
          v12 = v11 + 1;
        if (v13 >= v14 + 1)
          v15 = v14 + 1;
        else
          v15 = v13;
        LODWORD(result) = v12 + v15 * *(_DWORD *)(result + 168);
        v16 = v6[v2 + 24];
        if (v16 == 4)
        {
          if (v26 == 8)
            __asm { BR              X8 }
          __asm { BR              X8 }
        }
        result = (int)result;
        if (v16 == 8)
        {
          if (v26 == 4)
            __asm { BR              X10 }
          v1 = *(unsigned __int8 *)(v30 + 272);
          if (v26 == 8)
            __asm { BR              X10 }
          if (v26 == 16)
            __asm { BR              X10 }
        }
        else
        {
          v1 = *(unsigned __int8 *)(v30 + 272);
          if (v16 == 16)
          {
            if (v26 == 16)
              __asm { BR              X10 }
            __asm { BR              X10 }
          }
        }
      }
      else
      {
        v17 = (v4 - 4);
        v18 = &v10[2 * v17];
        v19 = *v18;
        v20 = v18[1];
        v21 = *(_QWORD *)(*(_QWORD *)(v24 + 8 * v17) + 8 * *(unsigned __int8 *)(v3 + v17 + 8));
        v22 = v20 & 3 | (4 * (v19 & 3u));
        result = *(unsigned int *)(v21 + 164);
        if ((_DWORD)v1 == 1)
          __asm { BR              X10 }
        v23 = v6[v2 + 24];
        if (v23 == 4)
        {
          if (v8 == 8)
            __asm { BR              X8 }
          __asm { BR              X8 }
        }
        if (v23 == 8)
        {
          if (v8 == 4)
            __asm { BR              X9 }
          if (v8 == 8)
            __asm { BR              X9 }
          if (v8 == 16)
            __asm { BR              X9 }
        }
        else if (v23 == 16)
        {
          __asm { BR              X10 }
        }
      }
      ++v2;
    }
    while (v2 != v1);
  }
  return result;
}

uint64_t sub_216075704(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  unsigned __int16 *v6;
  unsigned int v7;
  unsigned int v8;
  unsigned __int16 *v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  unsigned __int16 *v17;
  unsigned __int16 v18;
  unsigned __int16 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;

  v24 = result;
  v29 = *(_QWORD *)(result + 48);
  v1 = *(unsigned __int8 *)(v29 + 272);
  if (*(_BYTE *)(v29 + 272))
  {
    v2 = 0;
    v23 = result + 224;
    v28 = *(_QWORD *)(*(_QWORD *)(result + 176) + 112);
    v27 = 16 * *(_DWORD *)(result + 4);
    do
    {
      v3 = v29 + 16 + 16 * v2;
      v4 = *(unsigned __int8 *)(v3 + 15);
      v5 = *(unsigned __int16 *)(v29 + 26);
      if (v5 >= 0x103)
        v5 = 259;
      v6 = &word_254E10E30[40 * v5];
      v7 = v6[v2 + 24];
      v8 = v7 >> 8;
      v9 = (unsigned __int16 *)(v28 + 16 * v2);
      if (v4 == 6)
      {
        v26 = v7 >> 8;
        v10 = *(_QWORD *)(*(_QWORD *)(v24 + 224) + 8 * *(unsigned __int8 *)(v3 + 8));
        v11 = (__int16)v9[1];
        v25 = v11 & 3 | (4 * (*v9 & 3u));
        v12 = *(_DWORD *)(v10 + 148);
        v13 = (v11 >> 3) + ((v27 + byte_2160EE5D0[*((unsigned __int8 *)v6 + v2 + 32)]) >> 1);
        if (v13 <= -8)
          v14 = -8;
        else
          v14 = v13;
        v15 = v12 - 1;
        if (v14 < v12)
          v15 = v14;
        if (v7 == 4)
        {
          if (v26 == 8)
            __asm { BR              X8 }
          __asm { BR              X8 }
        }
        result = *(int *)(v10 + 184) * (uint64_t)v15;
        if (v7 == 8)
        {
          if (v26 == 4)
            __asm { BR              X10 }
          if (v26 == 8)
            __asm { BR              X10 }
          if (v26 == 16)
            __asm { BR              X10 }
        }
        else if (v7 == 16)
        {
          if (v26 == 16)
            __asm { BR              X10 }
          __asm { BR              X10 }
        }
        v1 = *(unsigned __int8 *)(v29 + 272);
      }
      else
      {
        v16 = (v4 - 4);
        v17 = &v9[2 * v16];
        v18 = *v17;
        v19 = v17[1];
        v20 = *(_QWORD *)(*(_QWORD *)(v23 + 8 * v16) + 8 * *(unsigned __int8 *)(v3 + v16 + 8));
        v21 = v19 & 3 | (4 * (v18 & 3u));
        result = *(unsigned int *)(v20 + 164);
        if ((_DWORD)v1 == 1)
          __asm { BR              X10 }
        v22 = v6[v2 + 24];
        if (v22 == 4)
        {
          if (v8 == 8)
            __asm { BR              X8 }
          __asm { BR              X8 }
        }
        if (v22 == 8)
        {
          if (v8 == 4)
            __asm { BR              X9 }
          if (v8 == 8)
            __asm { BR              X9 }
          if (v8 == 16)
            __asm { BR              X9 }
        }
        else if (v22 == 16)
        {
          if (v8 == 16)
            __asm { BR              X10 }
          __asm { BR              X10 }
        }
      }
      ++v2;
    }
    while (v2 != v1);
  }
  return result;
}

uint16x8_t *sub_216080ED8(uint16x8_t *result, unsigned int a2, uint64_t a3, int a4, int a5)
{
  int8x16_t *v5;
  int8x16_t *v6;
  int8x16_t *v7;
  int8x16_t *v8;
  int16x8_t v9;
  int16x8_t v10;
  int16x8_t v11;
  int16x8_t v12;
  int16x8_t v13;
  int8x16_t *v14;
  int16x8_t v15;
  int16x8_t v16;
  int16x8_t v17;
  int16x8_t v18;

  if (a5 >= 1)
  {
    v5 = (int8x16_t *)(a3 - 2 * a4);
    v6 = (int8x16_t *)((char *)v5 + a4);
    v7 = (int8x16_t *)((char *)v6 + a4);
    v8 = (int8x16_t *)((char *)v7 + a4);
    v9 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v8 + a4), (int8x16_t)0);
    v10 = (int16x8_t)vzip1q_s8(*v8, (int8x16_t)0);
    v11 = (int16x8_t)vzip1q_s8(*v7, (int8x16_t)0);
    v12 = (int16x8_t)vzip1q_s8(*v6, (int8x16_t)0);
    v13 = (int16x8_t)vzip1q_s8(*v5, (int8x16_t)0);
    v14 = (int8x16_t *)(a3 + 5 * a4 - 2 * a4);
    v15.i64[0] = 0x10001000100010;
    v15.i64[1] = 0x10001000100010;
    v16.i64[0] = 0x4000400040004;
    v16.i64[1] = 0x4000400040004;
    do
    {
      v17 = v12;
      v12 = v11;
      v11 = v10;
      v10 = v9;
      v9 = (int16x8_t)vzip1q_s8(*v14, (int8x16_t)0);
      v18 = vsubq_s16(vshlq_n_s16(vaddq_s16(v11, v12), 2uLL), vaddq_s16(v10, v17));
      *result = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v13, v18), vshlq_n_s16(v18, 2uLL)), vaddq_s16(v9, v15)), v16))), (uint16x8_t)v12);
      result = (uint16x8_t *)((char *)result + a2);
      v14 = (int8x16_t *)((char *)v14 + a4);
      v13 = v17;
      --a5;
    }
    while (a5);
  }
  return result;
}

char *sub_216080FA4(char *result, unsigned int a2, uint64_t a3, int a4, int a5)
{
  int8x16_t *v5;
  int8x16_t *v6;
  int8x16_t *v7;
  int8x16_t *v8;
  __int128 v9;
  int16x8_t v10;
  int16x8_t v11;
  int16x8_t v12;
  int16x8_t v13;
  int16x8_t v14;
  int8x16_t *v15;
  int16x8_t v16;
  int16x8_t v17;
  int16x8_t v18;
  int16x8_t v19;
  int8x8_t v20;

  if (a5 >= 1)
  {
    v5 = (int8x16_t *)(a3 - 2 * a4);
    v6 = (int8x16_t *)((char *)v5 + a4);
    v7 = (int8x16_t *)((char *)v6 + a4);
    v8 = (int8x16_t *)((char *)v7 + a4);
    v9 = 0uLL;
    v10 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v8 + a4), (int8x16_t)0);
    v11 = (int16x8_t)vzip1q_s8(*v8, (int8x16_t)0);
    v12 = (int16x8_t)vzip1q_s8(*v7, (int8x16_t)0);
    v13 = (int16x8_t)vzip1q_s8(*v6, (int8x16_t)0);
    v14 = (int16x8_t)vzip1q_s8(*v5, (int8x16_t)0);
    v15 = (int8x16_t *)(a3 + 5 * a4 - 2 * a4);
    v16.i64[0] = 0x10001000100010;
    v16.i64[1] = 0x10001000100010;
    v17.i64[0] = 0x4000400040004;
    v17.i64[1] = 0x4000400040004;
    do
    {
      v18 = v13;
      v13 = v12;
      v12 = v11;
      v11 = v10;
      v10 = (int16x8_t)vzip1q_s8(*v15, (int8x16_t)0);
      v19 = vsubq_s16(vshlq_n_s16(vaddq_s16(v12, v13), 2uLL), vaddq_s16(v11, v18));
      v20 = vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v14, v19), vshlq_n_s16(v19, 2uLL)), vaddq_s16(v10, v16)), v17));
      vst2_s8(result, *(int8x8x2_t *)((char *)&v9 - 8));
      result += a2;
      v15 = (int8x16_t *)((char *)v15 + a4);
      v14 = v18;
      --a5;
    }
    while (a5);
  }
  return result;
}

uint16x8_t *sub_216081064(uint16x8_t *result, unsigned int a2, uint64_t a3, int a4, int a5)
{
  int8x16_t *v5;
  int8x16_t *v6;
  int8x16_t *v7;
  int8x16_t *v8;
  int16x8_t v9;
  int16x8_t v10;
  int16x8_t v11;
  int16x8_t v12;
  int16x8_t v13;
  int8x16_t *v14;
  int16x8_t v15;
  int16x8_t v16;
  int16x8_t v17;
  int16x8_t v18;

  if (a5 >= 1)
  {
    v5 = (int8x16_t *)(a3 - 2 * a4);
    v6 = (int8x16_t *)((char *)v5 + a4);
    v7 = (int8x16_t *)((char *)v6 + a4);
    v8 = (int8x16_t *)((char *)v7 + a4);
    v9 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v8 + a4), (int8x16_t)0);
    v10 = (int16x8_t)vzip1q_s8(*v8, (int8x16_t)0);
    v11 = (int16x8_t)vzip1q_s8(*v7, (int8x16_t)0);
    v12 = (int16x8_t)vzip1q_s8(*v6, (int8x16_t)0);
    v13 = (int16x8_t)vzip1q_s8(*v5, (int8x16_t)0);
    v14 = (int8x16_t *)(a3 + 5 * a4 - 2 * a4);
    v15.i64[0] = 0x10001000100010;
    v15.i64[1] = 0x10001000100010;
    v16.i64[0] = 0x4000400040004;
    v16.i64[1] = 0x4000400040004;
    do
    {
      v17 = v12;
      v12 = v11;
      v11 = v10;
      v10 = v9;
      v9 = (int16x8_t)vzip1q_s8(*v14, (int8x16_t)0);
      v18 = vsubq_s16(vshlq_n_s16(vaddq_s16(v11, v12), 2uLL), vaddq_s16(v10, v17));
      *result = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v13, v18), vshlq_n_s16(v18, 2uLL)), vaddq_s16(v9, v15)), v16))), (uint16x8_t)v11);
      result = (uint16x8_t *)((char *)result + a2);
      v14 = (int8x16_t *)((char *)v14 + a4);
      v13 = v17;
      --a5;
    }
    while (a5);
  }
  return result;
}

uint16x8_t *sub_216081130(uint16x8_t *result, unsigned int a2, uint64_t a3, int a4, int a5)
{
  int8x16_t *v5;
  int16x8_t v6;
  int16x8_t v7;
  int8x16_t v8;
  int16x8_t v9;
  int16x8_t v10;

  if (a5 >= 1)
  {
    v5 = (int8x16_t *)(a3 - 2);
    v6.i64[0] = 0x10001000100010;
    v6.i64[1] = 0x10001000100010;
    v7.i64[0] = 0x4000400040004;
    v7.i64[1] = 0x4000400040004;
    do
    {
      v8 = *v5;
      v5 = (int8x16_t *)((char *)v5 + a4);
      v9 = (int16x8_t)vzip1q_s8(vextq_s8(v8, (int8x16_t)0, 2uLL), (int8x16_t)0);
      v10 = vsubq_s16(vshlq_n_s16(vaddq_s16(v9, (int16x8_t)vzip1q_s8(vextq_s8(v8, (int8x16_t)0, 3uLL), (int8x16_t)0)), 2uLL), vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v8, (int8x16_t)0, 4uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v8, (int8x16_t)0, 1uLL), (int8x16_t)0)));
      *result = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vshlq_n_s16(v10, 2uLL), vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v8, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v8, (int8x16_t)0, 5uLL), (int8x16_t)0)), v10)), v6), v7))), (uint16x8_t)v9);
      result = (uint16x8_t *)((char *)result + a2);
      --a5;
    }
    while (a5);
  }
  return result;
}

char *sub_2160811CC(char *result, uint64_t a2, int a3, int a4, int a5, unsigned int a6)
{
  int v6;
  uint64_t v7;
  int8x16_t v8;
  int8x16_t *v9;
  int8x16_t v10;
  int8x16_t *v11;
  int8x16_t v12;
  int8x16_t *v13;
  int8x16_t v14;
  uint64_t v15;
  int16x8_t v16;
  int16x8_t v17;
  int16x8_t v18;
  int16x8_t v19;
  int16x8_t v20;
  uint64_t v21;
  int8x16_t *v22;
  int16x8_t v23;
  int16x8_t v24;
  int8x16_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int8x16_t v29;
  int8x16_t v30;
  int8x16_t v31;
  int8x16_t v32;
  int8x16_t *v33;
  int8x16_t v34;
  int8x16_t *v35;
  __int128 *v36;
  __int128 v37;
  int16x8_t v38;
  int16x8_t v39;
  int8x16_t v40;
  int16x8_t v41;
  __int128 v42;
  uint8x8_t v43;
  int16x8_t v44;
  int16x8_t v45;
  char *v46;
  int16x8_t v47;
  int8x16_t v48;
  int16x8_t v49;
  int16x8_t v50;
  int8x16_t v51;
  int8x16_t v52;
  int8x16_t v53;
  int8x16_t v54;
  int8x16_t v55;
  _BYTE v56[256];
  _BYTE v57[264];
  uint64_t v58;

  v58 = *MEMORY[0x24BDAC8D0];
  v6 = 2 * a3;
  v7 = a2 - 2 * a3 + a6;
  v8 = *(int8x16_t *)(v7 - 2);
  v9 = (int8x16_t *)(v7 - 2 + a3);
  v10 = *v9;
  v51 = v8;
  v52 = *v9;
  v11 = (int8x16_t *)((char *)v9 + a3);
  v12 = *v11;
  v13 = (int8x16_t *)((char *)v11 + a3);
  v53 = v12;
  v54 = *v13;
  v14 = *(int8x16_t *)((char *)v13 + a3);
  v55 = v14;
  if (a4 >= 1)
  {
    v15 = 0;
    v16 = (int16x8_t)vzip1q_s8(v14, (int8x16_t)0);
    v17 = (int16x8_t)vzip1q_s8(*v13, (int8x16_t)0);
    v18 = (int16x8_t)vzip1q_s8(v12, (int8x16_t)0);
    v19 = (int16x8_t)vzip1q_s8(v10, (int8x16_t)0);
    v20 = (int16x8_t)vzip1q_s8(v8, (int8x16_t)0);
    v21 = a4;
    v22 = (int8x16_t *)(5 * a3 + a6 - v6 + a2 - 2);
    v23.i64[0] = 0x10001000100010;
    v23.i64[1] = 0x10001000100010;
    v24.i64[0] = 0x4000400040004;
    v24.i64[1] = 0x4000400040004;
    do
    {
      v25 = *v22;
      *(int8x16_t *)&v56[v15] = *v22;
      v26 = vsubq_s16(vshlq_n_s16(vaddq_s16(v18, v17), 2uLL), vaddq_s16(v19, v16));
      v27 = vaddq_s16(v20, v26);
      v20 = v19;
      v19 = v18;
      v18 = v17;
      v17 = v16;
      v16 = (int16x8_t)vzip1q_s8(v25, (int8x16_t)0);
      v28 = vshlq_s16(vaddq_s16(vaddq_s16(v27, vshlq_n_s16(v26, 2uLL)), vaddq_s16(v16, v23)), v24);
      *(int8x16_t *)&v57[v15] = vqmovun_high_s16(vqmovun_s16(v28), v28);
      v15 += 16;
      v22 = (int8x16_t *)((char *)v22 + a3);
    }
    while (16 * a4 != v15);
    v29 = v51;
    v30 = v52;
    v31 = v53;
    v32 = v54;
    v33 = (int8x16_t *)v56;
    v34 = v55;
    v35 = (int8x16_t *)(a5 * a3 - (uint64_t)v6 + a2 + 6);
    v36 = (__int128 *)v57;
    v37 = 0uLL;
    v38.i64[0] = 0x10001000100010;
    v38.i64[1] = 0x10001000100010;
    v39.i64[0] = 0x4000400040004;
    v39.i64[1] = 0x4000400040004;
    do
    {
      v40 = *(int8x16_t *)((char *)v35 - 8);
      v41 = vsubq_s16(vshlq_n_s16(vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v40, v31, 2uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v40, v31, 3uLL), (int8x16_t)0)), 2uLL), vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v40, v31, 4uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v40, v31, 1uLL), (int8x16_t)0)));
      v42 = *v36++;
      v43 = vrhadd_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vshlq_n_s16(v41, 2uLL), vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v40, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v40, v31, 5uLL), (int8x16_t)0)), v41)), v38), v39)), *(uint8x8_t *)&v42);
      v44 = (int16x8_t)vzip2q_s8(v29, (int8x16_t)0);
      v45 = (int16x8_t)vzip2q_s8(v30, (int8x16_t)0);
      v29 = v30;
      v30 = v31;
      v31 = v32;
      v46 = result;
      vst2_s8(v46, *(int8x8x2_t *)((char *)&v37 - 8));
      v46 += 16;
      v32 = v34;
      v47 = (int16x8_t)vzip2q_s8(v34, (int8x16_t)0);
      v48 = *v33++;
      v34 = v48;
      v49 = vsubq_s16(vshlq_n_s16(vaddq_s16((int16x8_t)vzip2q_s8(v31, (int8x16_t)0), (int16x8_t)vzip2q_s8(v30, (int8x16_t)0)), 2uLL), vaddq_s16(v47, v45));
      v50 = vsubq_s16(vshlq_n_s16(vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(*v35, v31, 2uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(*v35, v31, 3uLL), (int8x16_t)0)), 2uLL), vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(*v35, v31, 4uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(*v35, v31, 1uLL), (int8x16_t)0)));
      *(uint8x8_t *)v44.i8 = vrhadd_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vshlq_n_s16(v50, 2uLL), vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(*v35, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(*v35, v31, 5uLL), (int8x16_t)0)), v50)), v38), v39)), (uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v44, (int16x8_t)vzip2q_s8(v48, (int8x16_t)0)), v49),
                                                  vshlq_n_s16(v49, 2uLL)),
                                                v38),
                                              v39)));
      v49.i64[0] = 0;
      vst2_s8(v46, (int8x8x2_t)v44);
      result += 32;
      v35 = (int8x16_t *)((char *)v35 + a3);
      --v21;
    }
    while (v21);
  }
  return result;
}

void sub_216081484(char *a1, unsigned int a2, uint64_t a3, int a4)
{
  int8x16_t *v4;
  int8x16_t v5;
  int8x16_t *v6;
  int8x16_t v7;
  int8x16_t *v8;
  int8x16_t v9;
  int8x16_t *v10;
  int8x16_t v11;
  int8x16_t *v12;
  int8x16_t v13;
  __int128 v14;
  int16x8_t v15;
  int16x8_t v16;
  int16x8_t v17;
  int16x8_t v18;
  int16x8_t v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int8x16_t *v27;
  int v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int32x4_t v32;
  int32x4_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int16x8_t v39;
  int16x8_t v40;
  int16x8_t v41;
  int16x8_t v42;
  int16x8_t v43;
  int16x8_t v44;
  int16x8_t v45;
  uint8x8_t v46;
  int8x16_t v47;
  int8x16_t v48;
  int8x16_t v49;
  int8x16_t v50;
  int8x16_t v51;
  int8x16_t v52;
  int8x16_t v53;
  int32x4_t v54;
  int32x4_t v55;
  int32x4_t v56;
  int32x4_t v57;
  int32x4_t v58;
  int32x4_t v59;
  int32x4_t v60;
  int32x4_t v61;
  int32x4_t v62;
  int32x4_t v63;
  int32x4_t v64;
  int32x4_t v65;
  int32x4_t v66;
  int32x4_t v67;
  uint8x8_t v68;
  int8x16_t v69;
  int16x8_t v70;
  int16x8_t v71;
  int16x8_t v72;
  int16x8_t v73;
  int16x8_t v74;
  int8x16_t v75;
  int8x16_t v76;
  int8x16_t v77;
  int8x16_t v78;
  int8x16_t v79;
  int8x16_t v80;
  int8x16_t v81;
  int32x4_t v82;
  int32x4_t v83;
  int32x4_t v84;
  int32x4_t v85;
  int32x4_t v86;
  int32x4_t v87;
  int32x4_t v88;
  int32x4_t v89;
  int32x4_t v90;
  int32x4_t v91;
  int32x4_t v92;
  int32x4_t v93;
  int32x4_t v94;
  int32x4_t v95;
  int32x4_t v96;

  v4 = (int8x16_t *)(a3 - 2 - 2 * a4);
  v5 = *v4;
  v6 = (int8x16_t *)((char *)v4 + a4);
  v7 = *v6;
  v8 = (int8x16_t *)((char *)v6 + a4);
  v9 = *v8;
  v10 = (int8x16_t *)((char *)v8 + a4);
  v11 = *v10;
  v12 = (int8x16_t *)((char *)v10 + a4);
  v13 = *(int8x16_t *)((char *)v12 + a4);
  v14 = 0uLL;
  v15 = (int16x8_t)vzip1q_s8(v5, (int8x16_t)0);
  v16 = (int16x8_t)vzip1q_s8(v7, (int8x16_t)0);
  v17 = (int16x8_t)vzip1q_s8(v9, (int8x16_t)0);
  v18 = (int16x8_t)vzip1q_s8(v11, (int8x16_t)0);
  v19 = (int16x8_t)vzip1q_s8(*v12, (int8x16_t)0);
  v20 = (int16x8_t)vzip1q_s8(v13, (int8x16_t)0);
  v21 = (int16x8_t)vzip2q_s8(v5, (int8x16_t)0);
  v22 = (int16x8_t)vzip2q_s8(v7, (int8x16_t)0);
  v23 = (int16x8_t)vzip2q_s8(v9, (int8x16_t)0);
  v24 = (int16x8_t)vzip2q_s8(v11, (int8x16_t)0);
  v25 = (int16x8_t)vzip2q_s8(*v12, (int8x16_t)0);
  v26 = (int16x8_t)vzip2q_s8(v13, (int8x16_t)0);
  v27 = (int8x16_t *)(a3 - 2 + 6 * a4 - 2 * a4);
  v28 = 15;
  v29.i64[0] = 0x14001400140014;
  v29.i64[1] = 0x14001400140014;
  v30.i64[0] = 0x4000400040004;
  v30.i64[1] = 0x4000400040004;
  v31.i64[0] = 0x10001000100010;
  v31.i64[1] = 0x10001000100010;
  v32.i64[0] = 0x20000000200;
  v32.i64[1] = 0x20000000200;
  v33.i64[0] = 0x900000009;
  v33.i64[1] = 0x900000009;
  do
  {
    v34 = v26;
    v35 = v25;
    v36 = v24;
    v37 = v23;
    v38 = v22;
    v39 = v20;
    v40 = v19;
    v41 = v18;
    v42 = v17;
    v43 = v16;
    v44 = vmlaq_s16(vmlaq_s16(vaddq_s16(v15, v20), vaddq_s16(v17, v18), v29), vaddq_s16(v16, v19), v30);
    v45 = vmlaq_s16(vmlaq_s16(vaddq_s16(v21, v26), vaddq_s16(v23, v24), v29), vaddq_s16(v22, v25), v30);
    v46 = (uint8x8_t)vextq_s8(vqmovun_high_s16(vqmovun_s16(vshlq_s16(vaddq_s16(v44, v31), v30)), vshlq_s16(vaddq_s16(v45, v31), v30)), (int8x16_t)0, 2uLL).u64[0];
    v47 = vextq_s8((int8x16_t)v44, (int8x16_t)0, 2uLL);
    v48 = vextq_s8((int8x16_t)v44, (int8x16_t)0, 4uLL);
    v49 = vextq_s8((int8x16_t)v44, (int8x16_t)v45, 6uLL);
    v50 = vextq_s8((int8x16_t)v44, (int8x16_t)v45, 0xAuLL);
    v51 = vextq_s8(v49, (int8x16_t)0, 2uLL);
    v52 = vextq_s8(v50, (int8x16_t)0, 2uLL);
    v53 = vextq_s8(v50, (int8x16_t)0, 4uLL);
    v54 = vpaddq_s32(vmull_s16(*(int16x4_t *)v44.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v44, (int8x16_t)v44, 8uLL), (int16x4_t)131067));
    v55 = vpaddq_s32(vmull_s16(*(int16x4_t *)v47.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v47, v47, 8uLL), (int16x4_t)131067));
    v56 = vpaddq_s32(vmull_s16(*(int16x4_t *)v48.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL), (int16x4_t)131067));
    v57 = vpaddq_s32(vmull_s16(*(int16x4_t *)v49.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v49, v49, 8uLL), (int16x4_t)131067));
    v58 = vpaddq_s32(vmull_s16(*(int16x4_t *)v51.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v51, v51, 8uLL), (int16x4_t)131067));
    v59 = vpaddq_s32(vmull_s16(*(int16x4_t *)v50.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v50, v50, 8uLL), (int16x4_t)131067));
    v60 = vpaddq_s32(vmull_s16(*(int16x4_t *)v52.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v52, v52, 8uLL), (int16x4_t)131067));
    v61 = vpaddq_s32(vmull_s16(*(int16x4_t *)v53.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v53, v53, 8uLL), (int16x4_t)131067));
    v62 = vzip1q_s32(v54, v56);
    v63 = vzip2q_s32(v54, v56);
    v64 = vzip1q_s32(v55, v57);
    v65 = vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v62, v64), vzip1q_s32(v62, v64)), vaddq_s32(vzip1q_s32(v63, vzip2q_s32(v55, v57)), v32)), v33);
    v66 = vzip1q_s32(v58, v60);
    v67 = vzip1q_s32(v59, v61);
    v68 = vrhadd_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v65), vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v66, v67), vzip1q_s32(v66, v67)), vaddq_s32(vzip1q_s32(vzip2q_s32(v58, v60), vzip2q_s32(v59, v61)), v32)), v33))), v46);
    vst2_s8(a1, *(int8x8x2_t *)((char *)&v14 - 8));
    a1 += a2;
    v69 = *v27;
    v27 = (int8x16_t *)((char *)v27 + a4);
    v15 = v43;
    v16 = v42;
    v17 = v41;
    v20 = (int16x8_t)vzip1q_s8(v69, (int8x16_t)0);
    v18 = v40;
    v19 = v39;
    v21 = v38;
    v22 = v37;
    v26 = (int16x8_t)vzip2q_s8(v69, (int8x16_t)0);
    v23 = v24;
    v24 = v25;
    v25 = v34;
    --v28;
  }
  while (v28);
  v70.i64[0] = 0x14001400140014;
  v70.i64[1] = 0x14001400140014;
  v71.i64[0] = 0x4000400040004;
  v71.i64[1] = 0x4000400040004;
  v72 = vmlaq_s16(vmlaq_s16(vaddq_s16(v43, v20), vaddq_s16(v41, v40), v70), vaddq_s16(v42, v39), v71);
  v73 = vmlaq_s16(vmlaq_s16(vaddq_s16(v38, v26), vaddq_s16(v36, v35), v70), vaddq_s16(v37, v34), v71);
  v74.i64[0] = 0x10001000100010;
  v74.i64[1] = 0x10001000100010;
  v74.i64[0] = vextq_s8(vqmovun_high_s16(vqmovun_s16(vshlq_s16(vaddq_s16(v72, v74), v71)), vshlq_s16(vaddq_s16(v73, v74), v71)), (int8x16_t)0, 2uLL).u64[0];
  v75 = vextq_s8((int8x16_t)v72, (int8x16_t)0, 2uLL);
  v76 = vextq_s8((int8x16_t)v72, (int8x16_t)0, 4uLL);
  v77 = vextq_s8((int8x16_t)v72, (int8x16_t)v73, 6uLL);
  v78 = vextq_s8((int8x16_t)v72, (int8x16_t)v73, 0xAuLL);
  v79 = vextq_s8(v77, (int8x16_t)0, 2uLL);
  v80 = vextq_s8(v78, (int8x16_t)0, 2uLL);
  v81 = vextq_s8(v78, (int8x16_t)0, 4uLL);
  v82 = vpaddq_s32(vmull_s16(*(int16x4_t *)v72.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v72, (int8x16_t)v72, 8uLL), (int16x4_t)131067));
  v83 = vpaddq_s32(vmull_s16(*(int16x4_t *)v75.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v75, v75, 8uLL), (int16x4_t)131067));
  v84 = vpaddq_s32(vmull_s16(*(int16x4_t *)v76.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v76, v76, 8uLL), (int16x4_t)131067));
  v85 = vpaddq_s32(vmull_s16(*(int16x4_t *)v77.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v77, v77, 8uLL), (int16x4_t)131067));
  v86 = vpaddq_s32(vmull_s16(*(int16x4_t *)v79.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v79, v79, 8uLL), (int16x4_t)131067));
  v87 = vpaddq_s32(vmull_s16(*(int16x4_t *)v78.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v78, v78, 8uLL), (int16x4_t)131067));
  v88 = vpaddq_s32(vmull_s16(*(int16x4_t *)v80.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v80, v80, 8uLL), (int16x4_t)131067));
  v89 = vpaddq_s32(vmull_s16(*(int16x4_t *)v81.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v81, v81, 8uLL), (int16x4_t)131067));
  v90 = vzip1q_s32(v82, v84);
  v91 = vzip2q_s32(v82, v84);
  v92 = vzip1q_s32(v83, v85);
  v93 = vzip1q_s32(v91, vzip2q_s32(v83, v85));
  v91.i64[0] = 0x20000000200;
  v91.i64[1] = 0x20000000200;
  v94 = vaddq_s32(vaddq_s32(vzip2q_s32(v90, v92), vzip1q_s32(v90, v92)), vaddq_s32(v93, v91));
  v93.i64[0] = 0x900000009;
  v93.i64[1] = 0x900000009;
  v95 = vzip1q_s32(v86, v88);
  v96 = vzip1q_s32(v87, v89);
  *(uint8x8_t *)v89.i8 = vrhadd_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(vshlq_s32(v94, v93)), vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v95, v96), vzip1q_s32(v95, v96)), vaddq_s32(vzip1q_s32(vzip2q_s32(v86, v88), vzip2q_s32(v87, v89)), v91)), v93))), *(uint8x8_t *)v74.i8);
  v94.i64[0] = 0;
  vst2_s8(a1, (int8x8x2_t)v89);
}

char *sub_21608186C(char *result, unsigned int a2, uint64_t a3, int a4, int a5, int8x16_t a6)
{
  int8x16_t *v6;
  __int128 v7;
  int16x8_t v8;
  int16x8_t v9;
  int8x16_t v10;
  int16x8_t v11;

  if (a5 >= 1)
  {
    v6 = (int8x16_t *)(a3 - 2);
    v7 = 0uLL;
    v8.i64[0] = 0x10001000100010;
    v8.i64[1] = 0x10001000100010;
    v9.i64[0] = 0x4000400040004;
    v9.i64[1] = 0x4000400040004;
    do
    {
      v10 = *v6;
      v6 = (int8x16_t *)((char *)v6 + a4);
      v11 = vsubq_s16(vshlq_n_s16(vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v10, a6, 2uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v10, a6, 3uLL), (int8x16_t)0)), 2uLL), vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v10, a6, 4uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v10, a6, 1uLL), (int8x16_t)0)));
      *(int8x8_t *)a6.i8 = vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vshlq_n_s16(v11, 2uLL), vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v10, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v10, a6, 5uLL), (int8x16_t)0)), v11)), v8), v9));
      vst2_s8(result, (int8x8x2_t)a6);
      result += a2;
      --a5;
    }
    while (a5);
  }
  return result;
}

char *sub_2160818FC(char *result, unsigned int a2, uint64_t a3, int a4, int a5)
{
  unint64_t v5;
  int8x16_t v6;
  int8x16_t *v7;
  int8x16_t v8;
  int16x8_t v9;
  int16x8_t v10;
  int16x8_t v11;
  int16x8_t *v12;
  int16x8_t v13;
  int16x8_t v14;
  __int128 v15;
  int32x4_t v16;
  int32x4_t v17;
  int32x4_t v18;
  int16x8_t *v19;
  int16x8_t v20;
  int16x8_t v21;
  uint8x8_t v22;
  int16x8_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int32x4_t v27;
  int32x4_t v28;
  uint8x8_t v29;
  _OWORD v30[3];
  _QWORD v31[38];

  v31[37] = *MEMORY[0x24BDAC8D0];
  if (a5 >= -4)
  {
    v5 = 0;
    v6 = *(int8x16_t *)(a3 - 2 - 2 * a4);
    v7 = (int8x16_t *)(a3 - 2 + a4 - (uint64_t)(2 * a4));
    do
    {
      v8 = *v7;
      v9 = vsubq_s16(vshlq_n_s16(vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v6, (int8x16_t)0, 2uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v6, (int8x16_t)0, 3uLL), (int8x16_t)0)), 2uLL), vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v6, (int8x16_t)0, 1uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v6, (int8x16_t)0, 4uLL), (int8x16_t)0)));
      v30[v5 / 0x10] = vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v6, (int8x16_t)0, 5uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(v6, (int8x16_t)0)), v9), vshlq_n_s16(v9, 2uLL));
      v5 += 16;
      v7 = (int8x16_t *)((char *)v7 + a4);
      v6 = v8;
    }
    while (16 * ((a5 + 4) & ~((a5 + 4) >> 31)) + 16 != v5);
    if (a5 >= 1)
    {
      v10 = (int16x8_t)v30[0];
      v11.i64[0] = 0x10001000100010;
      v11.i64[1] = 0x10001000100010;
      v12 = (int16x8_t *)v31;
      v13.i64[0] = 0x4000400040004;
      v13.i64[1] = 0x4000400040004;
      v14.i64[0] = 0x200020002000200;
      v14.i64[1] = 0x200020002000200;
      v15 = 0uLL;
      v16.i64[0] = 0xD0000000DLL;
      v16.i64[1] = 0xD0000000DLL;
      v17.i64[0] = 0xF0000000FLL;
      v17.i64[1] = 0xF0000000FLL;
      v18.i64[0] = 0x900000009;
      v18.i64[1] = 0x900000009;
      v19 = (int16x8_t *)v31;
      do
      {
        v20 = v12[-2];
        v21 = v12[-1];
        v22 = (uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(v21, v11), v13));
        v23 = v19[1];
        ++v19;
        v24 = vaddq_s16(*v12, v21);
        v25 = vaddq_s16(v23, v20);
        v26 = vaddq_s16(vaddq_s16(v10, v14), v12[2]);
        v27 = vsubq_s32(vshlq_s32((int32x4_t)vzip1q_s16((int16x8_t)0, v24), v16), vshlq_s32((int32x4_t)vzip1q_s16((int16x8_t)0, v25), v17));
        v28 = vsubq_s32(vshlq_s32((int32x4_t)vzip2q_s16((int16x8_t)0, v24), v16), vshlq_s32((int32x4_t)vzip2q_s16((int16x8_t)0, v25), v17));
        v29 = vrhadd_u8(v22, (uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32(vaddq_s32(v27, vshlq_s32((int32x4_t)vzip1q_s16((int16x8_t)0, v26), v17)), vshlq_n_s32(v27, 2uLL)), v18)), vshlq_s32(vaddq_s32(vaddq_s32(v28, vshlq_s32((int32x4_t)vzip2q_s16((int16x8_t)0, v26), v17)), vshlq_n_s32(v28, 2uLL)), v18))));
        vst2_s8(result, *(int8x8x2_t *)((char *)&v15 - 8));
        result += a2;
        v12 = v19;
        v10 = v20;
        --a5;
      }
      while (a5);
    }
  }
  return result;
}

int16x8_t *sub_216081AD0(int16x8_t *result, int a2, uint64_t a3, int a4, int a5)
{
  int v5;
  uint64_t v6;
  int8x16_t v7;
  uint64_t v8;
  uint64_t v9;
  int8x16_t *v10;
  int16x8_t *v11;
  int16x8_t v12;
  int16x8_t v13;
  int16x8_t v14;
  int8x16_t v15;
  int16x8_t v16;
  int16x8_t v17;
  int16x8_t v18;
  int16x8_t v19;
  int16x8_t *v20;
  int16x8_t v21;
  int32x4_t v22;
  int16x8_t v23;
  int16x8_t *v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int8x16_t v29;
  int8x16_t v30;
  int16x8_t v31;
  _OWORD v32[3];
  _QWORD v33[38];

  v33[37] = *MEMORY[0x24BDAC8D0];
  v5 = a4 + 15;
  if (a4 >= 0)
    v5 = a4;
  if (a5 >= -4)
  {
    v6 = (uint64_t)v5 >> 4;
    v7 = *(int8x16_t *)(a3 - 2 - 2 * a4);
    v8 = ((a5 + 4) & ~((a5 + 4) >> 31)) + 1;
    v9 = 16 * v6;
    v10 = (int8x16_t *)(a3 - 2 + v9 - 2 * a4);
    v11 = (int16x8_t *)v32;
    v12.i64[0] = 0x4000400040004;
    v12.i64[1] = 0x4000400040004;
    v13.i64[0] = 0x14001400140014;
    v13.i64[1] = 0x14001400140014;
    v14.i64[0] = 0x1010101010101010;
    v14.i64[1] = 0x1010101010101010;
    do
    {
      v15 = vextq_s8(v7, (int8x16_t)0, 1uLL);
      v16 = vaddq_s16((int16x8_t)vzip1q_s8(v15, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v7, v7, 4uLL), (int8x16_t)0));
      v17 = (int16x8_t)vzip1q_s8(vextq_s8(v7, v7, 5uLL), (int8x16_t)0);
      v18 = (int16x8_t)vzip1q_s8(v7, (int8x16_t)0);
      v7 = *v10;
      *v11++ = vaddq_s16(vmlaq_s16(vmlaq_s16(vaddq_s16(v18, v17), v16, v12), vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v15, *v10, 1uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v15, *v10, 2uLL), (int8x16_t)0)), v13), v14);
      v10 = (int8x16_t *)((char *)v10 + v9);
      --v8;
    }
    while (v8);
    if (a5 >= 1)
    {
      v19 = (int16x8_t)v32[1];
      v20 = (int16x8_t *)v33;
      v21.i64[0] = 0x1000100010001;
      v21.i64[1] = 0x1000100010001;
      v22.i64[0] = 0x900000009;
      v22.i64[1] = 0x900000009;
      v23.i64[0] = 0xFF00FF00FF00FFLL;
      v23.i64[1] = 0xFF00FF00FF00FFLL;
      v24 = (int16x8_t *)v33;
      do
      {
        v25 = v24[1];
        ++v24;
        v26 = vaddq_s16(v25, v19);
        v27 = v20[-1];
        v28 = vaddq_s16(*v20, v27);
        v29 = (int8x16_t)vzip1q_s16(v28, v26);
        v30 = (int8x16_t)vzip2q_s16(v28, v26);
        v31 = vaddq_s16(v20[2], v20[-3]);
        *result = vminq_s16(vmaxq_s16(vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v29.i8, (int16x4_t)0xFFFB0014FFFB0014), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v29, v29, 8uLL), (int16x4_t)0xFFFB0014FFFB0014)), (int32x4_t)vzip1q_s16(v31, v21)), v22)), vshlq_s32(vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v30.i8, (int16x4_t)0xFFFB0014FFFB0014), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v30, v30, 8uLL), (int16x4_t)0xFFFB0014FFFB0014)),
                            (int32x4_t)vzip2q_s16(v31, v21)),
                          v22)),
                      (int16x8_t)0),
                    v23);
        result = (int16x8_t *)((char *)result + (a2 & 0xFFFFFFF0));
        v20 = v24;
        v19 = v27;
        --a5;
      }
      while (a5);
    }
  }
  return result;
}

char *sub_216081C80(char *result, unsigned int a2, uint64_t a3, int a4, int a5)
{
  unint64_t v5;
  int8x16_t v6;
  int8x16_t *v7;
  int8x16_t v8;
  int16x8_t v9;
  int16x8_t v10;
  int16x8_t v11;
  int16x8_t *v12;
  int16x8_t v13;
  int16x8_t v14;
  __int128 v15;
  int32x4_t v16;
  int32x4_t v17;
  int32x4_t v18;
  int16x8_t *v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int16x8_t v24;
  int32x4_t v25;
  int32x4_t v26;
  uint8x8_t v27;
  _OWORD v28[3];
  _QWORD v29[38];

  v29[37] = *MEMORY[0x24BDAC8D0];
  if (a5 >= -4)
  {
    v5 = 0;
    v6 = *(int8x16_t *)(a3 - 2 - 2 * a4);
    v7 = (int8x16_t *)(a3 - 2 + a4 - (uint64_t)(2 * a4));
    do
    {
      v8 = *v7;
      v9 = vsubq_s16(vshlq_n_s16(vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v6, (int8x16_t)0, 2uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v6, (int8x16_t)0, 3uLL), (int8x16_t)0)), 2uLL), vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v6, (int8x16_t)0, 1uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v6, (int8x16_t)0, 4uLL), (int8x16_t)0)));
      v28[v5 / 0x10] = vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v6, (int8x16_t)0, 5uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(v6, (int8x16_t)0)), v9), vshlq_n_s16(v9, 2uLL));
      v5 += 16;
      v7 = (int8x16_t *)((char *)v7 + a4);
      v6 = v8;
    }
    while (16 * ((a5 + 4) & ~((a5 + 4) >> 31)) + 16 != v5);
    if (a5 >= 1)
    {
      v10 = (int16x8_t)v28[0];
      v11.i64[0] = 0x10001000100010;
      v11.i64[1] = 0x10001000100010;
      v12 = (int16x8_t *)v29;
      v13.i64[0] = 0x4000400040004;
      v13.i64[1] = 0x4000400040004;
      v14.i64[0] = 0x200020002000200;
      v14.i64[1] = 0x200020002000200;
      v15 = 0uLL;
      v16.i64[0] = 0xD0000000DLL;
      v16.i64[1] = 0xD0000000DLL;
      v17.i64[0] = 0xF0000000FLL;
      v17.i64[1] = 0xF0000000FLL;
      v18.i64[0] = 0x900000009;
      v18.i64[1] = 0x900000009;
      v19 = (int16x8_t *)v29;
      do
      {
        v20 = v12[-2];
        v21 = v19[1];
        ++v19;
        v22 = vaddq_s16(v12[-1], *v12);
        v23 = vaddq_s16(v21, v20);
        v24 = vaddq_s16(vaddq_s16(v10, v14), v12[2]);
        v25 = vsubq_s32(vshlq_s32((int32x4_t)vzip1q_s16((int16x8_t)0, v22), v16), vshlq_s32((int32x4_t)vzip1q_s16((int16x8_t)0, v23), v17));
        v26 = vsubq_s32(vshlq_s32((int32x4_t)vzip2q_s16((int16x8_t)0, v22), v16), vshlq_s32((int32x4_t)vzip2q_s16((int16x8_t)0, v23), v17));
        v27 = vrhadd_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(*v12, v11), v13)), (uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32(vaddq_s32(v25, vshlq_s32((int32x4_t)vzip1q_s16((int16x8_t)0, v24), v17)), vshlq_n_s32(v25, 2uLL)), v18)), vshlq_s32(vaddq_s32(vaddq_s32(v26, vshlq_s32((int32x4_t)vzip2q_s16((int16x8_t)0, v24), v17)), vshlq_n_s32(v26, 2uLL)), v18))));
        vst2_s8(result, *(int8x8x2_t *)((char *)&v15 - 8));
        result += a2;
        v12 = v19;
        v10 = v20;
        --a5;
      }
      while (a5);
    }
  }
  return result;
}

uint16x8_t *sub_216081E54(uint16x8_t *result, unsigned int a2, uint64_t a3, int a4, int a5)
{
  int8x16_t *v5;
  int16x8_t v6;
  int16x8_t v7;
  int8x16_t v8;
  int16x8_t v9;
  int16x8_t v10;

  if (a5 >= 1)
  {
    v5 = (int8x16_t *)(a3 - 2);
    v6.i64[0] = 0x10001000100010;
    v6.i64[1] = 0x10001000100010;
    v7.i64[0] = 0x4000400040004;
    v7.i64[1] = 0x4000400040004;
    do
    {
      v8 = *v5;
      v5 = (int8x16_t *)((char *)v5 + a4);
      v9 = (int16x8_t)vzip1q_s8(vextq_s8(v8, (int8x16_t)0, 3uLL), (int8x16_t)0);
      v10 = vsubq_s16(vshlq_n_s16(vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v8, (int8x16_t)0, 2uLL), (int8x16_t)0), v9), 2uLL), vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v8, (int8x16_t)0, 4uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v8, (int8x16_t)0, 1uLL), (int8x16_t)0)));
      *result = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vshlq_n_s16(v10, 2uLL), vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v8, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v8, (int8x16_t)0, 5uLL), (int8x16_t)0)), v10)), v6), v7))), (uint16x8_t)v9);
      result = (uint16x8_t *)((char *)result + a2);
      --a5;
    }
    while (a5);
  }
  return result;
}

void sub_216081EF0(char *a1, unsigned int a2, uint64_t a3, int a4)
{
  int8x16_t *v4;
  int8x16_t v5;
  int8x16_t *v6;
  int8x16_t v7;
  int8x16_t *v8;
  int8x16_t v9;
  int8x16_t *v10;
  int8x16_t v11;
  int8x16_t *v12;
  int8x16_t v13;
  __int128 v14;
  int16x8_t v15;
  int16x8_t v16;
  int16x8_t v17;
  int16x8_t v18;
  int16x8_t v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int8x16_t *v27;
  int v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int32x4_t v32;
  int32x4_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int16x8_t v39;
  int16x8_t v40;
  int16x8_t v41;
  int16x8_t v42;
  int16x8_t v43;
  int16x8_t v44;
  int16x8_t v45;
  uint8x8_t v46;
  int8x16_t v47;
  int8x16_t v48;
  int8x16_t v49;
  int8x16_t v50;
  int8x16_t v51;
  int8x16_t v52;
  int8x16_t v53;
  int32x4_t v54;
  int32x4_t v55;
  int32x4_t v56;
  int32x4_t v57;
  int32x4_t v58;
  int32x4_t v59;
  int32x4_t v60;
  int32x4_t v61;
  int32x4_t v62;
  int32x4_t v63;
  int32x4_t v64;
  int32x4_t v65;
  int32x4_t v66;
  int32x4_t v67;
  uint8x8_t v68;
  int8x16_t v69;
  int16x8_t v70;
  int16x8_t v71;
  int16x8_t v72;
  int16x8_t v73;
  int16x8_t v74;
  int8x16_t v75;
  int8x16_t v76;
  int8x16_t v77;
  int8x16_t v78;
  int8x16_t v79;
  int8x16_t v80;
  int8x16_t v81;
  int32x4_t v82;
  int32x4_t v83;
  int32x4_t v84;
  int32x4_t v85;
  int32x4_t v86;
  int32x4_t v87;
  int32x4_t v88;
  int32x4_t v89;
  int32x4_t v90;
  int32x4_t v91;
  int32x4_t v92;
  int32x4_t v93;
  int32x4_t v94;
  int32x4_t v95;
  int32x4_t v96;

  v4 = (int8x16_t *)(a3 - 2 - 2 * a4);
  v5 = *v4;
  v6 = (int8x16_t *)((char *)v4 + a4);
  v7 = *v6;
  v8 = (int8x16_t *)((char *)v6 + a4);
  v9 = *v8;
  v10 = (int8x16_t *)((char *)v8 + a4);
  v11 = *v10;
  v12 = (int8x16_t *)((char *)v10 + a4);
  v13 = *(int8x16_t *)((char *)v12 + a4);
  v14 = 0uLL;
  v15 = (int16x8_t)vzip1q_s8(v5, (int8x16_t)0);
  v16 = (int16x8_t)vzip1q_s8(v7, (int8x16_t)0);
  v17 = (int16x8_t)vzip1q_s8(v9, (int8x16_t)0);
  v18 = (int16x8_t)vzip1q_s8(v11, (int8x16_t)0);
  v19 = (int16x8_t)vzip1q_s8(*v12, (int8x16_t)0);
  v20 = (int16x8_t)vzip1q_s8(v13, (int8x16_t)0);
  v21 = (int16x8_t)vzip2q_s8(v5, (int8x16_t)0);
  v22 = (int16x8_t)vzip2q_s8(v7, (int8x16_t)0);
  v23 = (int16x8_t)vzip2q_s8(v9, (int8x16_t)0);
  v24 = (int16x8_t)vzip2q_s8(v11, (int8x16_t)0);
  v25 = (int16x8_t)vzip2q_s8(*v12, (int8x16_t)0);
  v26 = (int16x8_t)vzip2q_s8(v13, (int8x16_t)0);
  v27 = (int8x16_t *)(a3 - 2 + 6 * a4 - 2 * a4);
  v28 = 15;
  v29.i64[0] = 0x14001400140014;
  v29.i64[1] = 0x14001400140014;
  v30.i64[0] = 0x4000400040004;
  v30.i64[1] = 0x4000400040004;
  v31.i64[0] = 0x10001000100010;
  v31.i64[1] = 0x10001000100010;
  v32.i64[0] = 0x20000000200;
  v32.i64[1] = 0x20000000200;
  v33.i64[0] = 0x900000009;
  v33.i64[1] = 0x900000009;
  do
  {
    v34 = v26;
    v35 = v25;
    v36 = v24;
    v37 = v23;
    v38 = v22;
    v39 = v20;
    v40 = v19;
    v41 = v18;
    v42 = v17;
    v43 = v16;
    v44 = vmlaq_s16(vmlaq_s16(vaddq_s16(v15, v20), vaddq_s16(v17, v18), v29), vaddq_s16(v16, v19), v30);
    v45 = vmlaq_s16(vmlaq_s16(vaddq_s16(v21, v26), vaddq_s16(v23, v24), v29), vaddq_s16(v22, v25), v30);
    v46 = (uint8x8_t)vextq_s8(vqmovun_high_s16(vqmovun_s16(vshlq_s16(vaddq_s16(v44, v31), v30)), vshlq_s16(vaddq_s16(v45, v31), v30)), (int8x16_t)0, 3uLL).u64[0];
    v47 = vextq_s8((int8x16_t)v44, (int8x16_t)0, 2uLL);
    v48 = vextq_s8((int8x16_t)v44, (int8x16_t)0, 4uLL);
    v49 = vextq_s8((int8x16_t)v44, (int8x16_t)v45, 6uLL);
    v50 = vextq_s8((int8x16_t)v44, (int8x16_t)v45, 0xAuLL);
    v51 = vextq_s8(v49, (int8x16_t)0, 2uLL);
    v52 = vextq_s8(v50, (int8x16_t)0, 2uLL);
    v53 = vextq_s8(v50, (int8x16_t)0, 4uLL);
    v54 = vpaddq_s32(vmull_s16(*(int16x4_t *)v44.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v44, (int8x16_t)v44, 8uLL), (int16x4_t)131067));
    v55 = vpaddq_s32(vmull_s16(*(int16x4_t *)v47.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v47, v47, 8uLL), (int16x4_t)131067));
    v56 = vpaddq_s32(vmull_s16(*(int16x4_t *)v48.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL), (int16x4_t)131067));
    v57 = vpaddq_s32(vmull_s16(*(int16x4_t *)v49.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v49, v49, 8uLL), (int16x4_t)131067));
    v58 = vpaddq_s32(vmull_s16(*(int16x4_t *)v51.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v51, v51, 8uLL), (int16x4_t)131067));
    v59 = vpaddq_s32(vmull_s16(*(int16x4_t *)v50.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v50, v50, 8uLL), (int16x4_t)131067));
    v60 = vpaddq_s32(vmull_s16(*(int16x4_t *)v52.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v52, v52, 8uLL), (int16x4_t)131067));
    v61 = vpaddq_s32(vmull_s16(*(int16x4_t *)v53.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v53, v53, 8uLL), (int16x4_t)131067));
    v62 = vzip1q_s32(v54, v56);
    v63 = vzip2q_s32(v54, v56);
    v64 = vzip1q_s32(v55, v57);
    v65 = vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v62, v64), vzip1q_s32(v62, v64)), vaddq_s32(vzip1q_s32(v63, vzip2q_s32(v55, v57)), v32)), v33);
    v66 = vzip1q_s32(v58, v60);
    v67 = vzip1q_s32(v59, v61);
    v68 = vrhadd_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v65), vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v66, v67), vzip1q_s32(v66, v67)), vaddq_s32(vzip1q_s32(vzip2q_s32(v58, v60), vzip2q_s32(v59, v61)), v32)), v33))), v46);
    vst2_s8(a1, *(int8x8x2_t *)((char *)&v14 - 8));
    a1 += a2;
    v69 = *v27;
    v27 = (int8x16_t *)((char *)v27 + a4);
    v15 = v43;
    v16 = v42;
    v17 = v41;
    v20 = (int16x8_t)vzip1q_s8(v69, (int8x16_t)0);
    v18 = v40;
    v19 = v39;
    v21 = v38;
    v22 = v37;
    v26 = (int16x8_t)vzip2q_s8(v69, (int8x16_t)0);
    v23 = v24;
    v24 = v25;
    v25 = v34;
    --v28;
  }
  while (v28);
  v70.i64[0] = 0x14001400140014;
  v70.i64[1] = 0x14001400140014;
  v71.i64[0] = 0x4000400040004;
  v71.i64[1] = 0x4000400040004;
  v72 = vmlaq_s16(vmlaq_s16(vaddq_s16(v43, v20), vaddq_s16(v41, v40), v70), vaddq_s16(v42, v39), v71);
  v73 = vmlaq_s16(vmlaq_s16(vaddq_s16(v38, v26), vaddq_s16(v36, v35), v70), vaddq_s16(v37, v34), v71);
  v74.i64[0] = 0x10001000100010;
  v74.i64[1] = 0x10001000100010;
  v74.i64[0] = vextq_s8(vqmovun_high_s16(vqmovun_s16(vshlq_s16(vaddq_s16(v72, v74), v71)), vshlq_s16(vaddq_s16(v73, v74), v71)), (int8x16_t)0, 3uLL).u64[0];
  v75 = vextq_s8((int8x16_t)v72, (int8x16_t)0, 2uLL);
  v76 = vextq_s8((int8x16_t)v72, (int8x16_t)0, 4uLL);
  v77 = vextq_s8((int8x16_t)v72, (int8x16_t)v73, 6uLL);
  v78 = vextq_s8((int8x16_t)v72, (int8x16_t)v73, 0xAuLL);
  v79 = vextq_s8(v77, (int8x16_t)0, 2uLL);
  v80 = vextq_s8(v78, (int8x16_t)0, 2uLL);
  v81 = vextq_s8(v78, (int8x16_t)0, 4uLL);
  v82 = vpaddq_s32(vmull_s16(*(int16x4_t *)v72.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v72, (int8x16_t)v72, 8uLL), (int16x4_t)131067));
  v83 = vpaddq_s32(vmull_s16(*(int16x4_t *)v75.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v75, v75, 8uLL), (int16x4_t)131067));
  v84 = vpaddq_s32(vmull_s16(*(int16x4_t *)v76.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v76, v76, 8uLL), (int16x4_t)131067));
  v85 = vpaddq_s32(vmull_s16(*(int16x4_t *)v77.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v77, v77, 8uLL), (int16x4_t)131067));
  v86 = vpaddq_s32(vmull_s16(*(int16x4_t *)v79.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v79, v79, 8uLL), (int16x4_t)131067));
  v87 = vpaddq_s32(vmull_s16(*(int16x4_t *)v78.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v78, v78, 8uLL), (int16x4_t)131067));
  v88 = vpaddq_s32(vmull_s16(*(int16x4_t *)v80.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v80, v80, 8uLL), (int16x4_t)131067));
  v89 = vpaddq_s32(vmull_s16(*(int16x4_t *)v81.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v81, v81, 8uLL), (int16x4_t)131067));
  v90 = vzip1q_s32(v82, v84);
  v91 = vzip2q_s32(v82, v84);
  v92 = vzip1q_s32(v83, v85);
  v93 = vzip1q_s32(v91, vzip2q_s32(v83, v85));
  v91.i64[0] = 0x20000000200;
  v91.i64[1] = 0x20000000200;
  v94 = vaddq_s32(vaddq_s32(vzip2q_s32(v90, v92), vzip1q_s32(v90, v92)), vaddq_s32(v93, v91));
  v93.i64[0] = 0x900000009;
  v93.i64[1] = 0x900000009;
  v95 = vzip1q_s32(v86, v88);
  v96 = vzip1q_s32(v87, v89);
  *(uint8x8_t *)v89.i8 = vrhadd_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(vshlq_s32(v94, v93)), vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v95, v96), vzip1q_s32(v95, v96)), vaddq_s32(vzip1q_s32(vzip2q_s32(v86, v88), vzip2q_s32(v87, v89)), v91)), v93))), *(uint8x8_t *)v74.i8);
  v94.i64[0] = 0;
  vst2_s8(a1, (int8x8x2_t)v89);
}

void sub_2160822D8(char *a1, unsigned int a2, uint64_t a3, int a4)
{
  int8x16_t *v4;
  int8x16_t v5;
  int8x16_t *v6;
  int8x16_t v7;
  int8x16_t *v8;
  int8x16_t v9;
  int8x16_t *v10;
  int8x16_t v11;
  int8x16_t *v12;
  int8x16_t v13;
  __int128 v14;
  int16x8_t v15;
  int16x8_t v16;
  int16x8_t v17;
  int16x8_t v18;
  int16x8_t v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int8x16_t *v27;
  int v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int32x4_t v32;
  int32x4_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int16x8_t v39;
  int16x8_t v40;
  int16x8_t v41;
  int16x8_t v42;
  int16x8_t v43;
  int16x8_t v44;
  int16x8_t v45;
  uint8x8_t v46;
  int8x16_t v47;
  int8x16_t v48;
  int8x16_t v49;
  int8x16_t v50;
  int8x16_t v51;
  int8x16_t v52;
  int8x16_t v53;
  int32x4_t v54;
  int32x4_t v55;
  int32x4_t v56;
  int32x4_t v57;
  int32x4_t v58;
  int32x4_t v59;
  int32x4_t v60;
  int32x4_t v61;
  int32x4_t v62;
  int32x4_t v63;
  int32x4_t v64;
  int32x4_t v65;
  int32x4_t v66;
  int32x4_t v67;
  uint8x8_t v68;
  int8x16_t v69;
  int16x8_t v70;
  int16x8_t v71;
  int16x8_t v72;
  int16x8_t v73;
  int16x8_t v74;
  int8x16_t v75;
  int8x16_t v76;
  int8x16_t v77;
  int8x16_t v78;
  int8x16_t v79;
  int8x16_t v80;
  int8x16_t v81;
  int32x4_t v82;
  int32x4_t v83;
  int32x4_t v84;
  int32x4_t v85;
  int32x4_t v86;
  int32x4_t v87;
  int32x4_t v88;
  int32x4_t v89;
  int32x4_t v90;
  int32x4_t v91;
  int32x4_t v92;
  int32x4_t v93;
  int32x4_t v94;
  int32x4_t v95;
  int32x4_t v96;

  v4 = (int8x16_t *)(a3 - 2 - 2 * a4);
  v5 = *v4;
  v6 = (int8x16_t *)((char *)v4 + a4);
  v7 = *v6;
  v8 = (int8x16_t *)((char *)v6 + a4);
  v9 = *v8;
  v10 = (int8x16_t *)((char *)v8 + a4);
  v11 = *v10;
  v12 = (int8x16_t *)((char *)v10 + a4);
  v13 = *(int8x16_t *)((char *)v12 + a4);
  v14 = 0uLL;
  v15 = (int16x8_t)vzip1q_s8(v5, (int8x16_t)0);
  v16 = (int16x8_t)vzip1q_s8(v7, (int8x16_t)0);
  v17 = (int16x8_t)vzip1q_s8(v9, (int8x16_t)0);
  v18 = (int16x8_t)vzip1q_s8(v11, (int8x16_t)0);
  v19 = (int16x8_t)vzip1q_s8(*v12, (int8x16_t)0);
  v20 = (int16x8_t)vzip1q_s8(v13, (int8x16_t)0);
  v21 = (int16x8_t)vzip2q_s8(v5, (int8x16_t)0);
  v22 = (int16x8_t)vzip2q_s8(v7, (int8x16_t)0);
  v23 = (int16x8_t)vzip2q_s8(v9, (int8x16_t)0);
  v24 = (int16x8_t)vzip2q_s8(v11, (int8x16_t)0);
  v25 = (int16x8_t)vzip2q_s8(*v12, (int8x16_t)0);
  v26 = (int16x8_t)vzip2q_s8(v13, (int8x16_t)0);
  v27 = (int8x16_t *)(a3 - 2 + 6 * a4 - 2 * a4);
  v28 = 7;
  v29.i64[0] = 0x14001400140014;
  v29.i64[1] = 0x14001400140014;
  v30.i64[0] = 0x4000400040004;
  v30.i64[1] = 0x4000400040004;
  v31.i64[0] = 0x10001000100010;
  v31.i64[1] = 0x10001000100010;
  v32.i64[0] = 0x20000000200;
  v32.i64[1] = 0x20000000200;
  v33.i64[0] = 0x900000009;
  v33.i64[1] = 0x900000009;
  do
  {
    v34 = v26;
    v35 = v25;
    v36 = v24;
    v37 = v23;
    v38 = v22;
    v39 = v20;
    v40 = v19;
    v41 = v18;
    v42 = v17;
    v43 = v16;
    v44 = vmlaq_s16(vmlaq_s16(vaddq_s16(v15, v20), vaddq_s16(v17, v18), v29), vaddq_s16(v16, v19), v30);
    v45 = vmlaq_s16(vmlaq_s16(vaddq_s16(v21, v26), vaddq_s16(v23, v24), v29), vaddq_s16(v22, v25), v30);
    v46 = (uint8x8_t)vextq_s8(vqmovun_high_s16(vqmovun_s16(vshlq_s16(vaddq_s16(v44, v31), v30)), vshlq_s16(vaddq_s16(v45, v31), v30)), (int8x16_t)0, 2uLL).u64[0];
    v47 = vextq_s8((int8x16_t)v44, (int8x16_t)0, 2uLL);
    v48 = vextq_s8((int8x16_t)v44, (int8x16_t)0, 4uLL);
    v49 = vextq_s8((int8x16_t)v44, (int8x16_t)v45, 6uLL);
    v50 = vextq_s8((int8x16_t)v44, (int8x16_t)v45, 0xAuLL);
    v51 = vextq_s8(v49, (int8x16_t)0, 2uLL);
    v52 = vextq_s8(v50, (int8x16_t)0, 2uLL);
    v53 = vextq_s8(v50, (int8x16_t)0, 4uLL);
    v54 = vpaddq_s32(vmull_s16(*(int16x4_t *)v44.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v44, (int8x16_t)v44, 8uLL), (int16x4_t)131067));
    v55 = vpaddq_s32(vmull_s16(*(int16x4_t *)v47.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v47, v47, 8uLL), (int16x4_t)131067));
    v56 = vpaddq_s32(vmull_s16(*(int16x4_t *)v48.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL), (int16x4_t)131067));
    v57 = vpaddq_s32(vmull_s16(*(int16x4_t *)v49.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v49, v49, 8uLL), (int16x4_t)131067));
    v58 = vpaddq_s32(vmull_s16(*(int16x4_t *)v51.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v51, v51, 8uLL), (int16x4_t)131067));
    v59 = vpaddq_s32(vmull_s16(*(int16x4_t *)v50.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v50, v50, 8uLL), (int16x4_t)131067));
    v60 = vpaddq_s32(vmull_s16(*(int16x4_t *)v52.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v52, v52, 8uLL), (int16x4_t)131067));
    v61 = vpaddq_s32(vmull_s16(*(int16x4_t *)v53.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v53, v53, 8uLL), (int16x4_t)131067));
    v62 = vzip1q_s32(v54, v56);
    v63 = vzip2q_s32(v54, v56);
    v64 = vzip1q_s32(v55, v57);
    v65 = vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v62, v64), vzip1q_s32(v62, v64)), vaddq_s32(vzip1q_s32(v63, vzip2q_s32(v55, v57)), v32)), v33);
    v66 = vzip1q_s32(v58, v60);
    v67 = vzip1q_s32(v59, v61);
    v68 = vrhadd_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v65), vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v66, v67), vzip1q_s32(v66, v67)), vaddq_s32(vzip1q_s32(vzip2q_s32(v58, v60), vzip2q_s32(v59, v61)), v32)), v33))), v46);
    vst2_s8(a1, *(int8x8x2_t *)((char *)&v14 - 8));
    a1 += a2;
    v69 = *v27;
    v27 = (int8x16_t *)((char *)v27 + a4);
    v15 = v43;
    v16 = v42;
    v17 = v41;
    v20 = (int16x8_t)vzip1q_s8(v69, (int8x16_t)0);
    v18 = v40;
    v19 = v39;
    v21 = v38;
    v22 = v37;
    v26 = (int16x8_t)vzip2q_s8(v69, (int8x16_t)0);
    v23 = v24;
    v24 = v25;
    v25 = v34;
    --v28;
  }
  while (v28);
  v70.i64[0] = 0x14001400140014;
  v70.i64[1] = 0x14001400140014;
  v71.i64[0] = 0x4000400040004;
  v71.i64[1] = 0x4000400040004;
  v72 = vmlaq_s16(vmlaq_s16(vaddq_s16(v43, v20), vaddq_s16(v41, v40), v70), vaddq_s16(v42, v39), v71);
  v73 = vmlaq_s16(vmlaq_s16(vaddq_s16(v38, v26), vaddq_s16(v36, v35), v70), vaddq_s16(v37, v34), v71);
  v74.i64[0] = 0x10001000100010;
  v74.i64[1] = 0x10001000100010;
  v74.i64[0] = vextq_s8(vqmovun_high_s16(vqmovun_s16(vshlq_s16(vaddq_s16(v72, v74), v71)), vshlq_s16(vaddq_s16(v73, v74), v71)), (int8x16_t)0, 2uLL).u64[0];
  v75 = vextq_s8((int8x16_t)v72, (int8x16_t)0, 2uLL);
  v76 = vextq_s8((int8x16_t)v72, (int8x16_t)0, 4uLL);
  v77 = vextq_s8((int8x16_t)v72, (int8x16_t)v73, 6uLL);
  v78 = vextq_s8((int8x16_t)v72, (int8x16_t)v73, 0xAuLL);
  v79 = vextq_s8(v77, (int8x16_t)0, 2uLL);
  v80 = vextq_s8(v78, (int8x16_t)0, 2uLL);
  v81 = vextq_s8(v78, (int8x16_t)0, 4uLL);
  v82 = vpaddq_s32(vmull_s16(*(int16x4_t *)v72.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v72, (int8x16_t)v72, 8uLL), (int16x4_t)131067));
  v83 = vpaddq_s32(vmull_s16(*(int16x4_t *)v75.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v75, v75, 8uLL), (int16x4_t)131067));
  v84 = vpaddq_s32(vmull_s16(*(int16x4_t *)v76.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v76, v76, 8uLL), (int16x4_t)131067));
  v85 = vpaddq_s32(vmull_s16(*(int16x4_t *)v77.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v77, v77, 8uLL), (int16x4_t)131067));
  v86 = vpaddq_s32(vmull_s16(*(int16x4_t *)v79.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v79, v79, 8uLL), (int16x4_t)131067));
  v87 = vpaddq_s32(vmull_s16(*(int16x4_t *)v78.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v78, v78, 8uLL), (int16x4_t)131067));
  v88 = vpaddq_s32(vmull_s16(*(int16x4_t *)v80.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v80, v80, 8uLL), (int16x4_t)131067));
  v89 = vpaddq_s32(vmull_s16(*(int16x4_t *)v81.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v81, v81, 8uLL), (int16x4_t)131067));
  v90 = vzip1q_s32(v82, v84);
  v91 = vzip2q_s32(v82, v84);
  v92 = vzip1q_s32(v83, v85);
  v93 = vzip1q_s32(v91, vzip2q_s32(v83, v85));
  v91.i64[0] = 0x20000000200;
  v91.i64[1] = 0x20000000200;
  v94 = vaddq_s32(vaddq_s32(vzip2q_s32(v90, v92), vzip1q_s32(v90, v92)), vaddq_s32(v93, v91));
  v93.i64[0] = 0x900000009;
  v93.i64[1] = 0x900000009;
  v95 = vzip1q_s32(v86, v88);
  v96 = vzip1q_s32(v87, v89);
  *(uint8x8_t *)v89.i8 = vrhadd_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(vshlq_s32(v94, v93)), vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v95, v96), vzip1q_s32(v95, v96)), vaddq_s32(vzip1q_s32(vzip2q_s32(v86, v88), vzip2q_s32(v87, v89)), v91)), v93))), *(uint8x8_t *)v74.i8);
  v94.i64[0] = 0;
  vst2_s8(a1, (int8x8x2_t)v89);
}

void sub_2160826C0(char *a1, unsigned int a2, uint64_t a3, int a4)
{
  int8x16_t *v4;
  int8x16_t v5;
  int8x16_t *v6;
  int8x16_t v7;
  int8x16_t *v8;
  int8x16_t v9;
  int8x16_t *v10;
  int8x16_t v11;
  int8x16_t *v12;
  int8x16_t v13;
  __int128 v14;
  int16x8_t v15;
  int16x8_t v16;
  int16x8_t v17;
  int16x8_t v18;
  int16x8_t v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int8x16_t *v27;
  int v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int32x4_t v32;
  int32x4_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int16x8_t v39;
  int16x8_t v40;
  int16x8_t v41;
  int16x8_t v42;
  int16x8_t v43;
  int16x8_t v44;
  int16x8_t v45;
  uint8x8_t v46;
  int8x16_t v47;
  int8x16_t v48;
  int8x16_t v49;
  int8x16_t v50;
  int8x16_t v51;
  int8x16_t v52;
  int8x16_t v53;
  int32x4_t v54;
  int32x4_t v55;
  int32x4_t v56;
  int32x4_t v57;
  int32x4_t v58;
  int32x4_t v59;
  int32x4_t v60;
  int32x4_t v61;
  int32x4_t v62;
  int32x4_t v63;
  int32x4_t v64;
  int32x4_t v65;
  int32x4_t v66;
  int32x4_t v67;
  uint8x8_t v68;
  int8x16_t v69;
  int16x8_t v70;
  int16x8_t v71;
  int16x8_t v72;
  int16x8_t v73;
  int16x8_t v74;
  int8x16_t v75;
  int8x16_t v76;
  int8x16_t v77;
  int8x16_t v78;
  int8x16_t v79;
  int8x16_t v80;
  int8x16_t v81;
  int32x4_t v82;
  int32x4_t v83;
  int32x4_t v84;
  int32x4_t v85;
  int32x4_t v86;
  int32x4_t v87;
  int32x4_t v88;
  int32x4_t v89;
  int32x4_t v90;
  int32x4_t v91;
  int32x4_t v92;
  int32x4_t v93;
  int32x4_t v94;
  int32x4_t v95;
  int32x4_t v96;

  v4 = (int8x16_t *)(a3 - 2 - 2 * a4);
  v5 = *v4;
  v6 = (int8x16_t *)((char *)v4 + a4);
  v7 = *v6;
  v8 = (int8x16_t *)((char *)v6 + a4);
  v9 = *v8;
  v10 = (int8x16_t *)((char *)v8 + a4);
  v11 = *v10;
  v12 = (int8x16_t *)((char *)v10 + a4);
  v13 = *(int8x16_t *)((char *)v12 + a4);
  v14 = 0uLL;
  v15 = (int16x8_t)vzip1q_s8(v5, (int8x16_t)0);
  v16 = (int16x8_t)vzip1q_s8(v7, (int8x16_t)0);
  v17 = (int16x8_t)vzip1q_s8(v9, (int8x16_t)0);
  v18 = (int16x8_t)vzip1q_s8(v11, (int8x16_t)0);
  v19 = (int16x8_t)vzip1q_s8(*v12, (int8x16_t)0);
  v20 = (int16x8_t)vzip1q_s8(v13, (int8x16_t)0);
  v21 = (int16x8_t)vzip2q_s8(v5, (int8x16_t)0);
  v22 = (int16x8_t)vzip2q_s8(v7, (int8x16_t)0);
  v23 = (int16x8_t)vzip2q_s8(v9, (int8x16_t)0);
  v24 = (int16x8_t)vzip2q_s8(v11, (int8x16_t)0);
  v25 = (int16x8_t)vzip2q_s8(*v12, (int8x16_t)0);
  v26 = (int16x8_t)vzip2q_s8(v13, (int8x16_t)0);
  v27 = (int8x16_t *)(a3 - 2 + 6 * a4 - 2 * a4);
  v28 = 7;
  v29.i64[0] = 0x14001400140014;
  v29.i64[1] = 0x14001400140014;
  v30.i64[0] = 0x4000400040004;
  v30.i64[1] = 0x4000400040004;
  v31.i64[0] = 0x10001000100010;
  v31.i64[1] = 0x10001000100010;
  v32.i64[0] = 0x20000000200;
  v32.i64[1] = 0x20000000200;
  v33.i64[0] = 0x900000009;
  v33.i64[1] = 0x900000009;
  do
  {
    v34 = v26;
    v35 = v25;
    v36 = v24;
    v37 = v23;
    v38 = v22;
    v39 = v20;
    v40 = v19;
    v41 = v18;
    v42 = v17;
    v43 = v16;
    v44 = vmlaq_s16(vmlaq_s16(vaddq_s16(v15, v20), vaddq_s16(v17, v18), v29), vaddq_s16(v16, v19), v30);
    v45 = vmlaq_s16(vmlaq_s16(vaddq_s16(v21, v26), vaddq_s16(v23, v24), v29), vaddq_s16(v22, v25), v30);
    v46 = (uint8x8_t)vextq_s8(vqmovun_high_s16(vqmovun_s16(vshlq_s16(vaddq_s16(v44, v31), v30)), vshlq_s16(vaddq_s16(v45, v31), v30)), (int8x16_t)0, 3uLL).u64[0];
    v47 = vextq_s8((int8x16_t)v44, (int8x16_t)0, 2uLL);
    v48 = vextq_s8((int8x16_t)v44, (int8x16_t)0, 4uLL);
    v49 = vextq_s8((int8x16_t)v44, (int8x16_t)v45, 6uLL);
    v50 = vextq_s8((int8x16_t)v44, (int8x16_t)v45, 0xAuLL);
    v51 = vextq_s8(v49, (int8x16_t)0, 2uLL);
    v52 = vextq_s8(v50, (int8x16_t)0, 2uLL);
    v53 = vextq_s8(v50, (int8x16_t)0, 4uLL);
    v54 = vpaddq_s32(vmull_s16(*(int16x4_t *)v44.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v44, (int8x16_t)v44, 8uLL), (int16x4_t)131067));
    v55 = vpaddq_s32(vmull_s16(*(int16x4_t *)v47.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v47, v47, 8uLL), (int16x4_t)131067));
    v56 = vpaddq_s32(vmull_s16(*(int16x4_t *)v48.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL), (int16x4_t)131067));
    v57 = vpaddq_s32(vmull_s16(*(int16x4_t *)v49.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v49, v49, 8uLL), (int16x4_t)131067));
    v58 = vpaddq_s32(vmull_s16(*(int16x4_t *)v51.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v51, v51, 8uLL), (int16x4_t)131067));
    v59 = vpaddq_s32(vmull_s16(*(int16x4_t *)v50.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v50, v50, 8uLL), (int16x4_t)131067));
    v60 = vpaddq_s32(vmull_s16(*(int16x4_t *)v52.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v52, v52, 8uLL), (int16x4_t)131067));
    v61 = vpaddq_s32(vmull_s16(*(int16x4_t *)v53.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v53, v53, 8uLL), (int16x4_t)131067));
    v62 = vzip1q_s32(v54, v56);
    v63 = vzip2q_s32(v54, v56);
    v64 = vzip1q_s32(v55, v57);
    v65 = vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v62, v64), vzip1q_s32(v62, v64)), vaddq_s32(vzip1q_s32(v63, vzip2q_s32(v55, v57)), v32)), v33);
    v66 = vzip1q_s32(v58, v60);
    v67 = vzip1q_s32(v59, v61);
    v68 = vrhadd_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v65), vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v66, v67), vzip1q_s32(v66, v67)), vaddq_s32(vzip1q_s32(vzip2q_s32(v58, v60), vzip2q_s32(v59, v61)), v32)), v33))), v46);
    vst2_s8(a1, *(int8x8x2_t *)((char *)&v14 - 8));
    a1 += a2;
    v69 = *v27;
    v27 = (int8x16_t *)((char *)v27 + a4);
    v15 = v43;
    v16 = v42;
    v17 = v41;
    v20 = (int16x8_t)vzip1q_s8(v69, (int8x16_t)0);
    v18 = v40;
    v19 = v39;
    v21 = v38;
    v22 = v37;
    v26 = (int16x8_t)vzip2q_s8(v69, (int8x16_t)0);
    v23 = v24;
    v24 = v25;
    v25 = v34;
    --v28;
  }
  while (v28);
  v70.i64[0] = 0x14001400140014;
  v70.i64[1] = 0x14001400140014;
  v71.i64[0] = 0x4000400040004;
  v71.i64[1] = 0x4000400040004;
  v72 = vmlaq_s16(vmlaq_s16(vaddq_s16(v43, v20), vaddq_s16(v41, v40), v70), vaddq_s16(v42, v39), v71);
  v73 = vmlaq_s16(vmlaq_s16(vaddq_s16(v38, v26), vaddq_s16(v36, v35), v70), vaddq_s16(v37, v34), v71);
  v74.i64[0] = 0x10001000100010;
  v74.i64[1] = 0x10001000100010;
  v74.i64[0] = vextq_s8(vqmovun_high_s16(vqmovun_s16(vshlq_s16(vaddq_s16(v72, v74), v71)), vshlq_s16(vaddq_s16(v73, v74), v71)), (int8x16_t)0, 3uLL).u64[0];
  v75 = vextq_s8((int8x16_t)v72, (int8x16_t)0, 2uLL);
  v76 = vextq_s8((int8x16_t)v72, (int8x16_t)0, 4uLL);
  v77 = vextq_s8((int8x16_t)v72, (int8x16_t)v73, 6uLL);
  v78 = vextq_s8((int8x16_t)v72, (int8x16_t)v73, 0xAuLL);
  v79 = vextq_s8(v77, (int8x16_t)0, 2uLL);
  v80 = vextq_s8(v78, (int8x16_t)0, 2uLL);
  v81 = vextq_s8(v78, (int8x16_t)0, 4uLL);
  v82 = vpaddq_s32(vmull_s16(*(int16x4_t *)v72.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v72, (int8x16_t)v72, 8uLL), (int16x4_t)131067));
  v83 = vpaddq_s32(vmull_s16(*(int16x4_t *)v75.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v75, v75, 8uLL), (int16x4_t)131067));
  v84 = vpaddq_s32(vmull_s16(*(int16x4_t *)v76.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v76, v76, 8uLL), (int16x4_t)131067));
  v85 = vpaddq_s32(vmull_s16(*(int16x4_t *)v77.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v77, v77, 8uLL), (int16x4_t)131067));
  v86 = vpaddq_s32(vmull_s16(*(int16x4_t *)v79.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v79, v79, 8uLL), (int16x4_t)131067));
  v87 = vpaddq_s32(vmull_s16(*(int16x4_t *)v78.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v78, v78, 8uLL), (int16x4_t)131067));
  v88 = vpaddq_s32(vmull_s16(*(int16x4_t *)v80.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v80, v80, 8uLL), (int16x4_t)131067));
  v89 = vpaddq_s32(vmull_s16(*(int16x4_t *)v81.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v81, v81, 8uLL), (int16x4_t)131067));
  v90 = vzip1q_s32(v82, v84);
  v91 = vzip2q_s32(v82, v84);
  v92 = vzip1q_s32(v83, v85);
  v93 = vzip1q_s32(v91, vzip2q_s32(v83, v85));
  v91.i64[0] = 0x20000000200;
  v91.i64[1] = 0x20000000200;
  v94 = vaddq_s32(vaddq_s32(vzip2q_s32(v90, v92), vzip1q_s32(v90, v92)), vaddq_s32(v93, v91));
  v93.i64[0] = 0x900000009;
  v93.i64[1] = 0x900000009;
  v95 = vzip1q_s32(v86, v88);
  v96 = vzip1q_s32(v87, v89);
  *(uint8x8_t *)v89.i8 = vrhadd_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(vshlq_s32(v94, v93)), vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v95, v96), vzip1q_s32(v95, v96)), vaddq_s32(vzip1q_s32(vzip2q_s32(v86, v88), vzip2q_s32(v87, v89)), v91)), v93))), *(uint8x8_t *)v74.i8);
  v94.i64[0] = 0;
  vst2_s8(a1, (int8x8x2_t)v89);
}

char *sub_216082AA8(char *result, uint64_t a2, int a3, int a4, int a5, unsigned int a6)
{
  uint64_t v6;
  int8x16_t *v7;
  int8x16_t *v8;
  int8x16_t *v9;
  int8x16_t *v10;
  int8x16_t *v11;
  int8x16_t v12;
  int16x8_t v13;
  int16x8_t v14;
  int16x8_t v15;
  int16x8_t v16;
  int16x8_t v17;
  uint64_t v18;
  int8x16_t *v19;
  int8x16_t *v20;
  int16x8_t v21;
  int16x8_t v22;
  uint64_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  __int128 *v27;
  __int128 v28;
  int16x8_t v29;
  int16x8_t v30;
  int8x16_t v31;
  int16x8_t v32;
  __int128 v33;
  _QWORD v34[34];

  v34[33] = *MEMORY[0x24BDAC8D0];
  if (a4 >= 1)
  {
    v6 = a2 - 2 * a3 - 2;
    v7 = (int8x16_t *)(v6 + a5 * (uint64_t)a3);
    v8 = (int8x16_t *)(v6 + a6);
    v9 = (int8x16_t *)((char *)v8 + a3);
    v10 = (int8x16_t *)((char *)v9 + a3);
    v11 = (int8x16_t *)((char *)v10 + a3);
    v12 = 0uLL;
    v13 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v11 + a3), (int8x16_t)0);
    v14 = (int16x8_t)vzip1q_s8(*v11, (int8x16_t)0);
    v15 = (int16x8_t)vzip1q_s8(*v10, (int8x16_t)0);
    v16 = (int16x8_t)vzip1q_s8(*v9, (int8x16_t)0);
    v17 = (int16x8_t)vzip1q_s8(*v8, (int8x16_t)0);
    v18 = a4;
    v19 = (int8x16_t *)(5 * a3 + a6 - 2 * a3 + a2 - 2);
    v20 = (int8x16_t *)v34;
    v21.i64[0] = 0x10001000100010;
    v21.i64[1] = 0x10001000100010;
    v22.i64[0] = 0x4000400040004;
    v22.i64[1] = 0x4000400040004;
    v23 = a4;
    do
    {
      v24 = vsubq_s16(vshlq_n_s16(vaddq_s16(v15, v14), 2uLL), vaddq_s16(v16, v13));
      v25 = vaddq_s16(v17, v24);
      v17 = v16;
      v16 = v15;
      v15 = v14;
      v14 = v13;
      v13 = (int16x8_t)vzip1q_s8(*v19, (int8x16_t)0);
      v26 = vshlq_s16(vaddq_s16(vaddq_s16(v25, vshlq_n_s16(v24, 2uLL)), vaddq_s16(v13, v21)), v22);
      *v20++ = vqmovun_high_s16(vqmovun_s16(v26), v26);
      v19 = (int8x16_t *)((char *)v19 + a3);
      --v23;
    }
    while (v23);
    v27 = (__int128 *)v34;
    v28 = 0uLL;
    v29.i64[0] = 0x10001000100010;
    v29.i64[1] = 0x10001000100010;
    v30.i64[0] = 0x4000400040004;
    v30.i64[1] = 0x4000400040004;
    do
    {
      v31 = *v7;
      v7 = (int8x16_t *)((char *)v7 + a3);
      v32 = vsubq_s16(vshlq_n_s16(vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v31, v12, 2uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v31, v12, 3uLL), (int8x16_t)0)), 2uLL), vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v31, v12, 4uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v31, v12, 1uLL), (int8x16_t)0)));
      v33 = *v27++;
      *(uint8x8_t *)v12.i8 = vrhadd_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vshlq_n_s16(v32, 2uLL), vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v31, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v31, v12, 5uLL), (int8x16_t)0)), v32)), v29), v30)), *(uint8x8_t *)&v33);
      vst2_s8(result, (int8x8x2_t)v12);
      result += 16;
      --v18;
    }
    while (v18);
  }
  return result;
}

int16x8_t sub_216082C54(_QWORD *a1, unsigned int a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int8x16_t v5;
  int8x16_t v6;
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;
  int8x16_t v10;
  int8x16_t v11;
  int8x16_t v12;
  int8x16_t v13;
  int8x16_t v14;
  int8x16_t v15;
  int8x16_t v16;
  int8x16_t v17;
  int8x16_t v18;
  int8x16_t v19;
  int8x16_t v20;
  int8x16_t v21;
  int8x16_t v22;
  int8x16_t v23;
  int8x16_t v24;
  int8x16_t v25;
  int8x16_t v26;
  int8x16_t v27;
  int8x16_t v28;
  int8x16_t v29;
  int8x16_t v30;
  int8x16_t v31;
  int8x16_t v32;
  int8x16_t v33;
  int8x16_t v34;
  int8x16_t v35;
  int8x16_t v36;
  int8x16_t v37;
  int8x16_t v38;
  int8x16_t v39;
  int8x16_t v40;
  int8x16_t v41;
  int16x8_t v42;
  int16x8_t v43;
  int16x8_t v44;
  int16x8_t v45;
  int16x8_t v46;
  int16x8_t v47;
  int16x8_t v48;
  int16x8_t v49;
  int16x8_t v50;
  int16x8_t v51;
  int16x8_t v52;
  uint16x8_t v53;
  int16x8_t v54;
  uint16x8_t v55;
  uint16x8_t v56;
  int16x8_t v57;
  int16x8_t v58;
  int16x8_t v59;
  int16x8_t result;
  uint64_t v61;

  v5 = *(int8x16_t *)(a3 - 2);
  v4 = a3 - 2;
  v6 = *(int8x16_t *)(v4 + a4);
  v7 = *(int8x16_t *)(v4 + 2 * a4);
  v8 = *(int8x16_t *)(v4 + 3 * a4);
  v9 = vzip1q_s8(v5, (int8x16_t)0);
  v10 = vdupq_laneq_s8(v5, 8);
  v11 = vzip1q_s8(v6, (int8x16_t)0);
  v12 = vdupq_laneq_s8(v6, 8);
  v13 = vzip1q_s8(v7, (int8x16_t)0);
  v14 = vdupq_laneq_s8(v7, 8);
  v15 = vzip1q_s8(v8, (int8x16_t)0);
  v16 = vdupq_laneq_s8(v8, 8);
  v17 = vzip1q_s8(v9, (int8x16_t)0);
  v18 = vzip2q_s8(v9, (int8x16_t)0);
  v10.i8[1] = 0;
  v19 = vzip1q_s8(v11, (int8x16_t)0);
  v12.i8[1] = 0;
  v20 = vzip2q_s8(v11, (int8x16_t)0);
  v21 = vzip1q_s8(v13, (int8x16_t)0);
  v22 = vzip2q_s8(v13, (int8x16_t)0);
  v14.i8[1] = 0;
  v23 = vzip1q_s8(v15, (int8x16_t)0);
  v24 = vzip2q_s8(v15, (int8x16_t)0);
  v16.i8[1] = 0;
  v25 = vzip1q_s8(v17, v21);
  v26 = vzip2q_s8(v17, v21);
  v27 = vzip1q_s8(v18, v22);
  v28 = vzip2q_s8(v18, v22);
  v29 = vzip1q_s8(v10, v14);
  v30 = vzip1q_s8(v19, v23);
  v31 = vzip2q_s8(v19, v23);
  v32 = vzip1q_s8(v20, v24);
  v33 = vzip2q_s8(v20, v24);
  v34 = vzip1q_s8(v12, v16);
  v35 = vzip1q_s8(v25, v30);
  v36 = vzip1q_s8(v26, v31);
  v37 = vzip2q_s8(v26, v31);
  v38 = vzip1q_s8(v27, v32);
  v39 = vzip2q_s8(v27, v32);
  v40 = vzip1q_s8(v28, v33);
  v41 = vzip2q_s8(v28, v33);
  v42 = (int16x8_t)vzip1q_s8(v29, v34);
  v43 = (int16x8_t)vzip1q_s8(vzip2q_s8(v25, v30), (int8x16_t)0);
  v44 = (int16x8_t)vzip1q_s8(v36, (int8x16_t)0);
  v45 = (int16x8_t)vzip1q_s8(v37, (int8x16_t)0);
  v46 = (int16x8_t)vzip1q_s8(v38, (int8x16_t)0);
  v47 = (int16x8_t)vzip1q_s8(v39, (int8x16_t)0);
  v48 = (int16x8_t)vzip1q_s8(v40, (int8x16_t)0);
  v49 = (int16x8_t)vzip1q_s8(v41, (int8x16_t)0);
  v50 = (int16x8_t)vzip1q_s8((int8x16_t)v42, (int8x16_t)0);
  v42.i64[0] = 0x4000400040004;
  v42.i64[1] = 0x4000400040004;
  v51 = vmulq_s16(v46, v42);
  v52.i64[0] = 0x10001000100010;
  v52.i64[1] = 0x10001000100010;
  v53.i64[0] = 0x10001000100010;
  v53.i64[1] = 0x10001000100010;
  v54 = (int16x8_t)vmlal_u8(v53, (uint8x8_t)vmovn_s16(v45), (uint8x8_t)0x1414141414141414);
  v55 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)vmlaq_s16(vaddq_s16(v54, vaddq_s16((int16x8_t)vzip1q_s8(v35, (int8x16_t)0), v47)), v43, v42), (uint8x8_t)vmovn_s16(v44), (uint8x8_t)0x1414141414141414), v51), v42)));
  *(int8x8_t *)v38.i8 = vmovn_s16(v46);
  v56 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vmlaq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16(v54, vaddq_s16(v43, v48)), *(uint8x8_t *)v38.i8, (uint8x8_t)0x1414141414141414), vaddq_s16(v47, v44), v42), v42)));
  *(int8x8_t *)v43.i8 = vmovn_s16(v47);
  v57 = vzip1q_s16((int16x8_t)vrhaddq_u16(v55, (uint16x8_t)v44), (int16x8_t)vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)v44, *(uint8x8_t *)v38.i8, (uint8x8_t)0x1414141414141414), v49), *(uint8x8_t *)v43.i8, (uint8x8_t)0x1414141414141414), vaddq_s16(v48, v45), v42), v52), v42))),
                       (uint16x8_t)v46));
  v58 = vzip1q_s16((int16x8_t)vrhaddq_u16(v56, (uint16x8_t)v45), (int16x8_t)vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8(vmlal_u8((uint16x8_t)vaddq_s16(vaddq_s16(v51, v45), v50), *(uint8x8_t *)v43.i8, (uint8x8_t)0x1414141414141414), (uint8x8_t)vmovn_s16(v48), (uint8x8_t)0x1414141414141414), v49, v42), v52), v42))), (uint16x8_t)v47));
  v59 = vzip1q_s16(v57, v58);
  result = vzip2q_s16(v57, v58);
  *a1 = v59.i64[0];
  *(_QWORD *)((char *)a1 + a2) = v59.i64[1];
  v61 = 2 * a2;
  *(_QWORD *)((char *)a1 + v61) = result.i64[0];
  *(_QWORD *)((char *)a1 + v61 + a2) = result.i64[1];
  return result;
}

double sub_216082E28(_QWORD *a1, unsigned int a2, uint64_t a3, int a4, int8x16_t a5, double a6, double a7, double a8, double a9, int8x16_t a10, int8x16_t a11, int8x16_t a12)
{
  int8x16_t v12;
  int8x16_t v13;
  unsigned __int32 *v14;
  unsigned __int32 *v15;
  unsigned __int32 *v16;
  __int32 *v17;
  __int32 *v18;
  uint64_t v19;
  int8x16_t v20;
  int8x16_t v21;
  int8x16_t v22;
  int8x16_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  uint16x8_t v39;
  uint16x8_t v40;
  int16x8_t v41;
  uint16x8_t v42;
  uint16x8_t v43;
  int8x16_t v44;
  int8x16_t v45;
  int8x16_t v46;
  int8x16_t v47;
  int8x16_t v48;
  int8x16_t v49;
  int8x16_t v50;
  int8x16_t v51;
  int8x16_t v52;
  int8x16_t v53;
  int8x16_t v54;
  int8x16_t v55;
  int8x16_t v56;
  int8x16_t v57;
  int8x16_t v58;
  int8x16_t v59;
  int8x16_t v60;
  int8x16_t v61;
  int8x16_t v62;
  int8x16_t v63;
  int8x16_t v64;
  int8x16_t v65;
  int8x16_t v66;
  int8x16_t v67;
  int8x16_t v68;
  int8x16_t v69;
  int8x16_t v70;
  int8x16_t v71;
  int8x16_t v72;
  int8x16_t v73;
  int8x16_t v74;
  int8x16_t v75;
  int16x8_t v76;
  int16x8_t v77;
  int16x8_t v78;
  int16x8_t v79;
  int16x8_t v80;
  int16x8_t v81;
  int16x8_t v82;
  int16x8_t v83;
  int16x8_t v84;
  int16x8_t v85;
  int16x8_t v86;
  int16x8_t v87;
  int16x8_t v88;
  int16x8_t v89;
  int16x8_t v90;
  int16x8_t v91;
  int8x16_t v92;
  int8x16_t v93;
  double result;
  uint64_t v95;

  v14 = (unsigned __int32 *)(a3 - 2 * a4);
  v15 = (unsigned __int32 *)(a3 - a4);
  v16 = (unsigned __int32 *)(a3 + 4 * a4);
  v17 = (__int32 *)(a3 + 5 * a4);
  v18 = (__int32 *)(a3 + 6 * a4);
  v20 = *(int8x16_t *)(a3 - 2);
  v19 = a3 - 2;
  v21 = *(int8x16_t *)(v19 + a4);
  v22 = *(int8x16_t *)(v19 + 2 * a4);
  v23 = *(int8x16_t *)(v19 + 3 * a4);
  a10.i32[0] = *v14;
  a11.i32[0] = *v15;
  a12.i32[0] = *v16;
  v12.i32[0] = *v17;
  v13.i32[0] = *v18;
  v24 = (int16x8_t)vzip1q_s8(a11, (int8x16_t)0);
  v25 = (int16x8_t)vzip1q_s8(vextq_s8(v20, a5, 2uLL), (int8x16_t)0);
  v26 = (int16x8_t)vzip1q_s8(vextq_s8(v21, a5, 2uLL), (int8x16_t)0);
  v27 = (int16x8_t)vzip1q_s8(vextq_s8(v22, a5, 2uLL), (int8x16_t)0);
  v28 = (int16x8_t)vzip1q_s8(vextq_s8(v23, a5, 2uLL), (int8x16_t)0);
  v29 = (int16x8_t)vzip1q_s8(a12, (int8x16_t)0);
  v30 = (int16x8_t)vzip1q_s8(v12, (int8x16_t)0);
  v31.i64[0] = 0x4000400040004;
  v31.i64[1] = 0x4000400040004;
  v32.i64[0] = 0x14001400140014;
  v32.i64[1] = 0x14001400140014;
  v33 = vmulq_s16(v27, v31);
  v34.i64[0] = 0x10001000100010;
  v34.i64[1] = 0x10001000100010;
  v35.i64[0] = 0x10001000100010;
  v35.i64[1] = 0x10001000100010;
  v36 = vmlaq_s16(v35, v26, v32);
  v37 = vmulq_s16(v27, v32);
  v38 = vaddq_s16(v36, v37);
  v39 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vmlaq_s16(vaddq_s16(vaddq_s16(vmlaq_s16(v36, v25, v32), vaddq_s16(v33, v28)), (int16x8_t)vzip1q_s8(a10, (int8x16_t)0)), v24, v31), v31)));
  v40 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16(v38, vaddq_s16(v28, v25), v31), vaddq_s16(v24, v29)), v31)));
  v41 = vmulq_s16(v28, v32);
  v42 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v37, v25), v41), v30), vaddq_s16(v29, v26), v31), v34), v31)));
  v43 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16(vaddq_s16(v33, v26), v41), (uint8x8_t)vmovn_s16(v29), (uint8x8_t)0x1414141414141414), v30, v31), vaddq_s16((int16x8_t)vzip1q_s8(v13, (int8x16_t)0), v34)), v31)));
  v44 = vzip1q_s8(v20, (int8x16_t)0);
  v45 = vdupq_laneq_s8(v20, 8);
  v46 = vzip1q_s8(v21, (int8x16_t)0);
  v47 = vdupq_laneq_s8(v21, 8);
  v48 = vzip1q_s8(v22, (int8x16_t)0);
  v49 = vdupq_laneq_s8(v22, 8);
  v50 = vzip1q_s8(v23, (int8x16_t)0);
  v51 = vdupq_laneq_s8(v23, 8);
  v52 = vzip1q_s8(v44, (int8x16_t)0);
  v45.i8[1] = 0;
  v53 = vzip2q_s8(v44, (int8x16_t)0);
  v54 = vzip1q_s8(v46, (int8x16_t)0);
  v55 = vzip2q_s8(v46, (int8x16_t)0);
  v47.i8[1] = 0;
  v56 = vzip1q_s8(v48, (int8x16_t)0);
  v57 = vzip2q_s8(v48, (int8x16_t)0);
  v49.i8[1] = 0;
  v58 = vzip1q_s8(v50, (int8x16_t)0);
  v51.i8[1] = 0;
  v59 = vzip2q_s8(v50, (int8x16_t)0);
  v60 = vzip1q_s8(v52, v56);
  v61 = vzip2q_s8(v52, v56);
  v62 = vzip1q_s8(v53, v57);
  v63 = vzip2q_s8(v53, v57);
  v64 = vzip1q_s8(v45, v49);
  v65 = vzip1q_s8(v54, v58);
  v66 = vzip2q_s8(v54, v58);
  v67 = vzip1q_s8(v55, v59);
  v68 = vzip2q_s8(v55, v59);
  v69 = vzip1q_s8(v61, v66);
  v70 = vzip2q_s8(v61, v66);
  v71 = vzip1q_s8(v62, v67);
  v72 = vzip2q_s8(v62, v67);
  v73 = vzip1q_s8(v63, v68);
  v74 = vzip2q_s8(v63, v68);
  v75 = vzip1q_s8(v64, vzip1q_s8(v47, v51));
  v76 = (int16x8_t)vzip1q_s8(vzip1q_s8(v60, v65), (int8x16_t)0);
  v77 = (int16x8_t)vzip1q_s8(vzip2q_s8(v60, v65), (int8x16_t)0);
  v78 = (int16x8_t)vzip1q_s8(v69, (int8x16_t)0);
  v79 = (int16x8_t)vzip1q_s8(v70, (int8x16_t)0);
  v80 = (int16x8_t)vzip1q_s8(v71, (int8x16_t)0);
  v81 = (int16x8_t)vzip1q_s8(v72, (int8x16_t)0);
  v82 = (int16x8_t)vzip1q_s8(v73, (int8x16_t)0);
  v83 = (int16x8_t)vzip1q_s8(v74, (int8x16_t)0);
  v84 = vmulq_s16(v80, v31);
  v60.i64[0] = 0x10001000100010;
  v60.i64[1] = 0x10001000100010;
  v85 = (int16x8_t)vmlal_u8((uint16x8_t)v60, (uint8x8_t)vmovn_s16(v79), (uint8x8_t)0x1414141414141414);
  v86 = vshlq_s16(vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)vmlaq_s16(vaddq_s16(v85, vaddq_s16(v76, v81)), v77, v31), (uint8x8_t)vmovn_s16(v78), (uint8x8_t)0x1414141414141414), v84), v31);
  *(int8x8_t *)v86.i8 = vqmovun_s16(v86);
  *(int8x8_t *)v80.i8 = vmovn_s16(v80);
  v87 = vshlq_s16(vmlaq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16(v85, vaddq_s16(v77, v82)), *(uint8x8_t *)v80.i8, (uint8x8_t)0x1414141414141414), vaddq_s16(v81, v78), v31), v31);
  *(int8x8_t *)v87.i8 = vqmovun_s16(v87);
  *(int8x8_t *)v81.i8 = vmovn_s16(v81);
  v88 = vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)v78, *(uint8x8_t *)v80.i8, (uint8x8_t)0x1414141414141414), v83), *(uint8x8_t *)v81.i8, (uint8x8_t)0x1414141414141414), vaddq_s16(v82, v79), v31), v34), v31);
  *(int8x8_t *)v88.i8 = vqmovun_s16(v88);
  v89 = vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8(vmlal_u8((uint16x8_t)vaddq_s16(vaddq_s16(v84, v79), (int16x8_t)vzip1q_s8(v75, (int8x16_t)0)), *(uint8x8_t *)v81.i8, (uint8x8_t)0x1414141414141414), (uint8x8_t)vmovn_s16(v82), (uint8x8_t)0x1414141414141414), v83, v31), v34), v31);
  *(int8x8_t *)v89.i8 = vqmovun_s16(v89);
  v90 = vzip1q_s16((int16x8_t)vzip1q_s8((int8x16_t)v86, (int8x16_t)0), (int16x8_t)vzip1q_s8((int8x16_t)v88, (int8x16_t)0));
  v91 = vzip1q_s16((int16x8_t)vzip1q_s8((int8x16_t)v87, (int8x16_t)0), (int16x8_t)vzip1q_s8((int8x16_t)v89, (int8x16_t)0));
  v92 = (int8x16_t)vzip1q_s16(v90, v91);
  v93 = (int8x16_t)vzip2q_s16(v90, v91);
  *(_QWORD *)&result = vrhaddq_u16((uint16x8_t)vextq_s8(v93, (int8x16_t)0, 8uLL), v43).u64[0];
  *a1 = vrhaddq_u16((uint16x8_t)v92, v39).u64[0];
  *(_QWORD *)((char *)a1 + a2) = vrhaddq_u16((uint16x8_t)vextq_s8(v92, (int8x16_t)0, 8uLL), v40).u64[0];
  v95 = 2 * a2;
  *(_QWORD *)((char *)a1 + v95) = vrhaddq_u16((uint16x8_t)v93, v42).u64[0];
  *(double *)((char *)a1 + v95 + a2) = result;
  return result;
}

double sub_216083108(double *a1, unsigned int a2, uint64_t a3, int a4, int64x2_t a5, int64x2_t a6, int64x2_t a7, int64x2_t a8, int64x2_t a9, int64x2_t a10, int64x2_t a11, int64x2_t a12)
{
  int64x2_t v12;
  int8x16_t v13;
  int8x16_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int8x16_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int8x16_t v24;
  int8x16_t v25;
  int8x16_t v26;
  int8x16_t v27;
  int8x16_t v28;
  int8x16_t v29;
  int8x16_t v30;
  int8x16_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int16x8_t v39;
  int16x8_t v40;
  int16x8_t v41;
  int16x8_t v42;
  int16x8_t v43;
  int16x8_t v44;
  int16x8_t v45;
  __int16 v46;
  int16x8_t v47;
  __int16 v48;
  int16x8_t v49;
  int16x8_t v50;
  int16x8_t v51;
  int16x8_t v52;
  int16x8_t v53;
  int16x8_t v54;
  int16x8_t v55;
  int16x8_t v56;
  int8x16_t v57;
  int8x16_t v58;
  int8x16_t v59;
  int32x4_t v60;
  int32x4_t v61;
  int32x4_t v62;
  int32x4_t v63;
  int32x4_t v64;
  int32x4_t v65;
  int32x4_t v66;
  int32x4_t v67;
  int32x4_t v68;
  int32x4_t v69;
  int8x16_t v70;
  int8x16_t v71;
  int8x16_t v72;
  int32x4_t v73;
  int32x4_t v74;
  int32x4_t v75;
  int32x4_t v76;
  int32x4_t v77;
  int32x4_t v78;
  int32x4_t v79;
  int32x4_t v80;
  int8x16_t v81;
  int8x16_t v82;
  int8x16_t v83;
  int32x4_t v84;
  int32x4_t v85;
  int32x4_t v86;
  int32x4_t v87;
  int32x4_t v88;
  int32x4_t v89;
  int32x4_t v90;
  int32x4_t v91;
  int8x16_t v92;
  int8x16_t v93;
  int8x16_t v94;
  int32x4_t v95;
  int32x4_t v96;
  int32x4_t v97;
  int32x4_t v98;
  int32x4_t v99;
  int32x4_t v100;
  int32x4_t v101;
  int32x4_t v102;
  double result;
  uint64_t v104;

  v15 = a3 - 2 * a4;
  v16 = a3 - a4;
  v17 = a3 + a4;
  a5.i32[0] = *(_DWORD *)(v15 + 2);
  a6.i32[0] = *(_DWORD *)(v16 + 2);
  v18 = (int8x16_t)vshlq_n_s64(a6, 0x20uLL);
  v19 = a3 + 2 * a4;
  a7.i32[0] = *(_DWORD *)(a3 + 2);
  a8.i32[0] = *(_DWORD *)(v17 + 2);
  a9.i32[0] = *(_DWORD *)(v19 + 2);
  v20 = a3 + 3 * a4;
  a10.i32[0] = *(_DWORD *)(v20 + 2);
  v21 = a3 + 4 * a4;
  a11.i32[0] = *(_DWORD *)(v21 + 2);
  v22 = a3 + 5 * a4;
  a12.i32[0] = *(_DWORD *)(v22 + 2);
  v23 = a3 + 6 * a4;
  v12.i32[0] = *(_DWORD *)(v23 + 2);
  v13.i32[0] = *(_DWORD *)(v15 - 2);
  v24 = vorrq_s8((int8x16_t)vshlq_n_s64(a5, 0x20uLL), v13);
  v13.i32[0] = *(_DWORD *)(v16 - 2);
  v25 = vorrq_s8(v18, v13);
  v18.i32[0] = *(_DWORD *)(a3 - 2);
  v14.i32[0] = *(_DWORD *)(v17 - 2);
  v26 = vorrq_s8((int8x16_t)vshlq_n_s64(a7, 0x20uLL), v18);
  v27 = vorrq_s8((int8x16_t)vshlq_n_s64(a8, 0x20uLL), v14);
  v18.i32[0] = *(_DWORD *)(v19 - 2);
  v28 = vorrq_s8((int8x16_t)vshlq_n_s64(a9, 0x20uLL), v18);
  v18.i32[0] = *(_DWORD *)(v20 - 2);
  v29 = vorrq_s8((int8x16_t)vshlq_n_s64(a10, 0x20uLL), v18);
  v18.i32[0] = *(_DWORD *)(v21 - 2);
  v30 = vorrq_s8((int8x16_t)vshlq_n_s64(a11, 0x20uLL), v18);
  v18.i32[0] = *(_DWORD *)(v22 - 2);
  v31 = vorrq_s8((int8x16_t)vshlq_n_s64(a12, 0x20uLL), v18);
  v18.i32[0] = *(_DWORD *)(v23 - 2);
  v32 = (int16x8_t)vzip1q_s8(v25, (int8x16_t)0);
  v33 = (int16x8_t)vzip1q_s8(v26, (int8x16_t)0);
  v34 = (int16x8_t)vzip1q_s8(v27, (int8x16_t)0);
  v35 = (int16x8_t)vzip1q_s8(v28, (int8x16_t)0);
  v36 = (int16x8_t)vzip1q_s8(v29, (int8x16_t)0);
  v37 = (int16x8_t)vzip1q_s8(v30, (int8x16_t)0);
  v38 = (int16x8_t)vzip1q_s8(v31, (int8x16_t)0);
  v39 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v12, 0x20uLL), v18), (int8x16_t)0);
  v40.i64[0] = 0x4000400040004;
  v40.i64[1] = 0x4000400040004;
  v41.i64[0] = 0x14001400140014;
  v41.i64[1] = 0x14001400140014;
  v42 = vmulq_s16(v34, v41);
  v43 = vmulq_s16(v35, v40);
  v44 = vaddq_s16(vmlaq_s16(vmlaq_s16((int16x8_t)vzip1q_s8(v24, (int8x16_t)0), v32, v40), v33, v41), vaddq_s16(vaddq_s16(v42, v43), v36));
  LOWORD(v16) = *(unsigned __int8 *)(v16 + 6);
  v45.i64[0] = 0x10001000100010;
  v45.i64[1] = 0x10001000100010;
  v46 = *(unsigned __int8 *)(a3 + 6);
  LOWORD(v17) = *(unsigned __int8 *)(v17 + 6);
  v47 = vshlq_s16(vaddq_s16(v44, v45), v40);
  *(int8x8_t *)v47.i8 = vqmovun_s16(v47);
  LOWORD(v20) = *(unsigned __int8 *)(v20 + 6);
  LOWORD(v21) = *(unsigned __int8 *)(v21 + 6);
  LOWORD(v22) = *(unsigned __int8 *)(v22 + 6);
  v48 = 5 * *(unsigned __int8 *)(v19 + 6);
  LOWORD(v19) = v20 + *(unsigned __int8 *)(v15 + 6) - 5 * v16 + 20 * v46 + 20 * v17 - v48;
  LOWORD(v16) = v21 + v16 + 20 * v17 + 4 * v48 - 5 * (v20 + v46);
  LOWORD(v20) = 5 * v20;
  v49 = vmulq_s16(v35, v41);
  v50 = vmlaq_s16(vaddq_s16(vaddq_s16(v42, v32), vaddq_s16(v49, v37)), vaddq_s16(v36, v33), v40);
  v51 = vshlq_s16(vaddq_s16(v50, v45), v40);
  *(int8x8_t *)v51.i8 = vqmovun_s16(v51);
  v52 = vmulq_s16(v36, v41);
  v53 = vmlaq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v49, v33), v52), v38), vaddq_s16(v37, v34), v40);
  v54 = vshlq_s16(vaddq_s16(v53, v45), v40);
  *(int8x8_t *)v54.i8 = vqmovun_s16(v54);
  v55 = vaddq_s16(vmlaq_s16(vmlaq_s16(vaddq_s16(vaddq_s16(v43, v34), v52), v37, v41), v38, v40), v39);
  v56 = vshlq_s16(vaddq_s16(v55, v45), v40);
  *(int8x8_t *)v56.i8 = vqmovun_s16(v56);
  v57 = vextq_s8((int8x16_t)v44, (int8x16_t)0, 2uLL);
  v58 = vextq_s8((int8x16_t)v44, (int8x16_t)0, 4uLL);
  v59 = vextq_s8((int8x16_t)v44, (int8x16_t)0, 6uLL);
  v59.i16[5] = v19;
  v60 = vpaddq_s32(vmull_s16(*(int16x4_t *)v44.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v44, (int8x16_t)v44, 8uLL), (int16x4_t)131067));
  v61 = vpaddq_s32(vmull_s16(*(int16x4_t *)v57.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v57, v57, 8uLL), (int16x4_t)131067));
  v62 = vpaddq_s32(vmull_s16(*(int16x4_t *)v58.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v58, v58, 8uLL), (int16x4_t)131067));
  v63 = vpaddq_s32(vmull_s16(*(int16x4_t *)v59.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v59, v59, 8uLL), (int16x4_t)131067));
  v64 = vzip1q_s32(v60, v62);
  v65 = vzip2q_s32(v60, v62);
  v66 = vzip1q_s32(v61, v63);
  v67 = vzip1q_s32(v65, vzip2q_s32(v61, v63));
  v61.i64[0] = 0x20000000200;
  v61.i64[1] = 0x20000000200;
  v68 = vaddq_s32(vaddq_s32(vzip2q_s32(v64, v66), vzip1q_s32(v64, v66)), vaddq_s32(v67, v61));
  v67.i64[0] = 0x900000009;
  v67.i64[1] = 0x900000009;
  v69 = vshlq_s32(v68, v67);
  v70 = vextq_s8((int8x16_t)v50, (int8x16_t)0, 2uLL);
  v71 = vextq_s8((int8x16_t)v50, (int8x16_t)0, 4uLL);
  v72 = vextq_s8((int8x16_t)v50, (int8x16_t)0, 6uLL);
  v72.i16[5] = v16;
  v73 = vpaddq_s32(vmull_s16(*(int16x4_t *)v50.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v50, (int8x16_t)v50, 8uLL), (int16x4_t)131067));
  v74 = vpaddq_s32(vmull_s16(*(int16x4_t *)v70.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v70, v70, 8uLL), (int16x4_t)131067));
  v75 = vpaddq_s32(vmull_s16(*(int16x4_t *)v71.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v71, v71, 8uLL), (int16x4_t)131067));
  v76 = vpaddq_s32(vmull_s16(*(int16x4_t *)v72.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v72, v72, 8uLL), (int16x4_t)131067));
  v77 = vzip1q_s32(v73, v75);
  v78 = vzip2q_s32(v73, v75);
  v79 = vzip1q_s32(v74, v76);
  v80 = vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v77, v79), vzip1q_s32(v77, v79)), vaddq_s32(vzip1q_s32(v78, vzip2q_s32(v74, v76)), v61)), v67);
  v81 = vextq_s8((int8x16_t)v53, (int8x16_t)0, 2uLL);
  v82 = vextq_s8((int8x16_t)v53, (int8x16_t)0, 4uLL);
  v83 = vextq_s8((int8x16_t)v53, (int8x16_t)0, 6uLL);
  v83.i16[5] = v22 + v46 + 4 * v48 + 4 * v20 - 5 * (v21 + v17);
  v84 = vpaddq_s32(vmull_s16(*(int16x4_t *)v53.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v53, (int8x16_t)v53, 8uLL), (int16x4_t)131067));
  v85 = vpaddq_s32(vmull_s16(*(int16x4_t *)v81.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v81, v81, 8uLL), (int16x4_t)131067));
  v86 = vpaddq_s32(vmull_s16(*(int16x4_t *)v82.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v82, v82, 8uLL), (int16x4_t)131067));
  v87 = vpaddq_s32(vmull_s16(*(int16x4_t *)v83.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v83, v83, 8uLL), (int16x4_t)131067));
  v88 = vzip1q_s32(v84, v86);
  v89 = vzip2q_s32(v84, v86);
  v90 = vzip1q_s32(v85, v87);
  v91 = vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v88, v90), vzip1q_s32(v88, v90)), vaddq_s32(vzip1q_s32(v89, vzip2q_s32(v85, v87)), v61)), v67);
  v92 = vextq_s8((int8x16_t)v55, (int8x16_t)0, 2uLL);
  v93 = vextq_s8((int8x16_t)v55, (int8x16_t)0, 4uLL);
  v94 = vextq_s8((int8x16_t)v55, (int8x16_t)0, 6uLL);
  v94.i16[5] = *(unsigned __int8 *)(v23 + 6) + v17 - v48 + 4 * v20 + 20 * v21 - 5 * v22;
  v95 = vpaddq_s32(vmull_s16(*(int16x4_t *)v55.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v55, (int8x16_t)v55, 8uLL), (int16x4_t)131067));
  v96 = vpaddq_s32(vmull_s16(*(int16x4_t *)v92.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v92, v92, 8uLL), (int16x4_t)131067));
  v97 = vpaddq_s32(vmull_s16(*(int16x4_t *)v93.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v93, v93, 8uLL), (int16x4_t)131067));
  v98 = vpaddq_s32(vmull_s16(*(int16x4_t *)v94.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v94, v94, 8uLL), (int16x4_t)131067));
  v99 = vzip1q_s32(v95, v97);
  v100 = vzip2q_s32(v95, v97);
  v101 = vzip1q_s32(v96, v98);
  v102 = vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v99, v101), vzip1q_s32(v99, v101)), vaddq_s32(vzip1q_s32(v100, vzip2q_s32(v96, v98)), v61)), v67);
  *(_QWORD *)&result = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v69), v69))), (uint16x8_t)vextq_s8(vqtbl1q_s8((int8x16_t)v47, (int8x16_t)xmmword_2160EF230), (int8x16_t)0, 4uLL)).u64[0];
  *a1 = result;
  *(_QWORD *)((char *)a1 + a2) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v80), v80))), (uint16x8_t)vextq_s8(vqtbl1q_s8((int8x16_t)v51, (int8x16_t)xmmword_2160EF230), (int8x16_t)0, 4uLL)).u64[0];
  v104 = 2 * a2;
  *(_QWORD *)((char *)a1 + v104) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v91), v91))), (uint16x8_t)vextq_s8(vqtbl1q_s8((int8x16_t)v54, (int8x16_t)xmmword_2160EF230), (int8x16_t)0, 4uLL)).u64[0];
  *(_QWORD *)((char *)a1 + v104 + a2) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v102), v102))), (uint16x8_t)vextq_s8(vqtbl1q_s8((int8x16_t)v56, (int8x16_t)xmmword_2160EF230), (int8x16_t)0, 4uLL)).u64[0];
  return result;
}

double sub_2160835B4(_QWORD *a1, unsigned int a2, uint64_t a3, int a4, double a5, double a6, double a7, double a8, double a9, double a10, int8x16_t a11, int8x16_t a12)
{
  int8x16_t v12;
  int8x16_t v13;
  unsigned __int32 *v14;
  unsigned __int32 *v15;
  __int32 *v16;
  __int32 *v17;
  uint64_t v18;
  int8x16_t v19;
  int8x16_t v20;
  int8x16_t v21;
  int8x16_t v22;
  int8x16_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  uint16x8_t v38;
  int16x8_t v39;
  uint16x8_t v40;
  int16x8_t v41;
  uint16x8_t v42;
  uint16x8_t v43;
  int8x16_t v44;
  int8x16_t v45;
  int8x16_t v46;
  int8x16_t v47;
  int8x16_t v48;
  int8x16_t v49;
  int8x16_t v50;
  int8x16_t v51;
  int8x16_t v52;
  int8x16_t v53;
  int8x16_t v54;
  int8x16_t v55;
  int8x16_t v56;
  int8x16_t v57;
  int8x16_t v58;
  int8x16_t v59;
  int8x16_t v60;
  int8x16_t v61;
  int8x16_t v62;
  int8x16_t v63;
  int8x16_t v64;
  int8x16_t v65;
  int8x16_t v66;
  int8x16_t v67;
  int8x16_t v68;
  int8x16_t v69;
  int8x16_t v70;
  int8x16_t v71;
  int8x16_t v72;
  int8x16_t v73;
  int8x16_t v74;
  int8x16_t v75;
  int16x8_t v76;
  int16x8_t v77;
  int16x8_t v78;
  int16x8_t v79;
  int16x8_t v80;
  int16x8_t v81;
  int16x8_t v82;
  int16x8_t v83;
  int16x8_t v84;
  int16x8_t v85;
  int16x8_t v86;
  int16x8_t v87;
  int16x8_t v88;
  int16x8_t v89;
  int16x8_t v90;
  int16x8_t v91;
  int8x16_t v92;
  int8x16_t v93;
  double result;
  uint64_t v95;

  v14 = (unsigned __int32 *)(a3 - 2 * a4);
  v15 = (unsigned __int32 *)(a3 - a4);
  v16 = (__int32 *)(a3 + 5 * a4);
  v17 = (__int32 *)(a3 + 6 * a4);
  v19 = *(int8x16_t *)(a3 - 2);
  v18 = a3 - 2;
  v20 = *(int8x16_t *)(v18 + a4);
  v21 = *(int8x16_t *)(v18 + 2 * a4);
  v22 = *(int8x16_t *)(v18 + 3 * a4);
  v23 = *(int8x16_t *)(v18 + 4 * a4);
  a11.i32[0] = *v14;
  a12.i32[0] = *v15;
  v12.i32[0] = *v16;
  v13.i32[0] = *v17;
  v24 = (int16x8_t)vzip1q_s8(a12, (int8x16_t)0);
  v25 = (int16x8_t)vzip1q_s8(vextq_s8(v19, v19, 2uLL), (int8x16_t)0);
  v26 = (int16x8_t)vzip1q_s8(vextq_s8(v20, v19, 2uLL), (int8x16_t)0);
  v27 = (int16x8_t)vzip1q_s8(vextq_s8(v21, v19, 2uLL), (int8x16_t)0);
  v28 = (int16x8_t)vzip1q_s8(vextq_s8(v22, v19, 2uLL), (int8x16_t)0);
  v29 = (int16x8_t)vzip1q_s8(vextq_s8(v23, v19, 2uLL), (int8x16_t)0);
  v30 = (int16x8_t)vzip1q_s8(v12, (int8x16_t)0);
  v31.i64[0] = 0x4000400040004;
  v31.i64[1] = 0x4000400040004;
  v32.i64[0] = 0x14001400140014;
  v32.i64[1] = 0x14001400140014;
  v33 = vmulq_s16(v27, v31);
  v34.i64[0] = 0x10001000100010;
  v34.i64[1] = 0x10001000100010;
  v35.i64[0] = 0x10001000100010;
  v35.i64[1] = 0x10001000100010;
  v36 = vmlaq_s16(v35, v26, v32);
  v37 = vaddq_s16(v36, v29);
  v38 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vmlaq_s16(vaddq_s16(vaddq_s16(vmlaq_s16(v36, v25, v32), vaddq_s16(v33, v28)), (int16x8_t)vzip1q_s8(a11, (int8x16_t)0)), v24, v31), v31)));
  v39 = vmulq_s16(v27, v32);
  v40 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(v37, v39), vaddq_s16(v28, v25), v31), v24), v31)));
  v41 = vmulq_s16(v28, v32);
  v42 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16(v39, v25), v41), vaddq_s16(v29, v26), v31), vaddq_s16(v30, v34)), v31)));
  v43 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16(vmlaq_s16(vaddq_s16(vaddq_s16(v33, v26), v41), v29, v32), v30, v31), vaddq_s16((int16x8_t)vzip1q_s8(v13, (int8x16_t)0), v34)), v31)));
  v44 = vzip1q_s8(v20, (int8x16_t)0);
  v45 = vdupq_laneq_s8(v20, 8);
  v46 = vzip1q_s8(v21, (int8x16_t)0);
  v47 = vdupq_laneq_s8(v21, 8);
  v48 = vzip1q_s8(v22, (int8x16_t)0);
  v49 = vdupq_laneq_s8(v22, 8);
  v50 = vzip1q_s8(v23, (int8x16_t)0);
  v51 = vdupq_laneq_s8(v23, 8);
  v52 = vzip1q_s8(v44, (int8x16_t)0);
  v45.i8[1] = 0;
  v53 = vzip2q_s8(v44, (int8x16_t)0);
  v54 = vzip1q_s8(v46, (int8x16_t)0);
  v55 = vzip2q_s8(v46, (int8x16_t)0);
  v47.i8[1] = 0;
  v56 = vzip1q_s8(v48, (int8x16_t)0);
  v57 = vzip2q_s8(v48, (int8x16_t)0);
  v49.i8[1] = 0;
  v58 = vzip1q_s8(v50, (int8x16_t)0);
  v51.i8[1] = 0;
  v59 = vzip2q_s8(v50, (int8x16_t)0);
  v60 = vzip1q_s8(v52, v56);
  v61 = vzip2q_s8(v52, v56);
  v62 = vzip1q_s8(v53, v57);
  v63 = vzip2q_s8(v53, v57);
  v64 = vzip1q_s8(v45, v49);
  v65 = vzip1q_s8(v54, v58);
  v66 = vzip2q_s8(v54, v58);
  v67 = vzip1q_s8(v55, v59);
  v68 = vzip2q_s8(v55, v59);
  v69 = vzip1q_s8(v61, v66);
  v70 = vzip2q_s8(v61, v66);
  v71 = vzip1q_s8(v62, v67);
  v72 = vzip2q_s8(v62, v67);
  v73 = vzip1q_s8(v63, v68);
  v74 = vzip2q_s8(v63, v68);
  v75 = vzip1q_s8(v64, vzip1q_s8(v47, v51));
  v76 = (int16x8_t)vzip1q_s8(vzip1q_s8(v60, v65), (int8x16_t)0);
  v77 = (int16x8_t)vzip1q_s8(vzip2q_s8(v60, v65), (int8x16_t)0);
  v78 = (int16x8_t)vzip1q_s8(v69, (int8x16_t)0);
  v79 = (int16x8_t)vzip1q_s8(v70, (int8x16_t)0);
  v80 = (int16x8_t)vzip1q_s8(v71, (int8x16_t)0);
  v81 = (int16x8_t)vzip1q_s8(v72, (int8x16_t)0);
  v82 = (int16x8_t)vzip1q_s8(v73, (int8x16_t)0);
  v83 = (int16x8_t)vzip1q_s8(v74, (int8x16_t)0);
  v84 = vmulq_s16(v80, v31);
  v60.i64[0] = 0x10001000100010;
  v60.i64[1] = 0x10001000100010;
  v85 = (int16x8_t)vmlal_u8((uint16x8_t)v60, (uint8x8_t)vmovn_s16(v79), (uint8x8_t)0x1414141414141414);
  v86 = vshlq_s16(vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)vmlaq_s16(vaddq_s16(v85, vaddq_s16(v76, v81)), v77, v31), (uint8x8_t)vmovn_s16(v78), (uint8x8_t)0x1414141414141414), v84), v31);
  *(int8x8_t *)v86.i8 = vqmovun_s16(v86);
  *(int8x8_t *)v80.i8 = vmovn_s16(v80);
  v87 = vshlq_s16(vmlaq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16(v85, vaddq_s16(v77, v82)), *(uint8x8_t *)v80.i8, (uint8x8_t)0x1414141414141414), vaddq_s16(v81, v78), v31), v31);
  *(int8x8_t *)v87.i8 = vqmovun_s16(v87);
  *(int8x8_t *)v81.i8 = vmovn_s16(v81);
  v88 = vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)v78, *(uint8x8_t *)v80.i8, (uint8x8_t)0x1414141414141414), v83), *(uint8x8_t *)v81.i8, (uint8x8_t)0x1414141414141414), vaddq_s16(v82, v79), v31), v34), v31);
  *(int8x8_t *)v88.i8 = vqmovun_s16(v88);
  v89 = vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8(vmlal_u8((uint16x8_t)vaddq_s16(vaddq_s16(v84, v79), (int16x8_t)vzip1q_s8(v75, (int8x16_t)0)), *(uint8x8_t *)v81.i8, (uint8x8_t)0x1414141414141414), (uint8x8_t)vmovn_s16(v82), (uint8x8_t)0x1414141414141414), v83, v31), v34), v31);
  *(int8x8_t *)v89.i8 = vqmovun_s16(v89);
  v90 = vzip1q_s16((int16x8_t)vzip1q_s8((int8x16_t)v86, (int8x16_t)0), (int16x8_t)vzip1q_s8((int8x16_t)v88, (int8x16_t)0));
  v91 = vzip1q_s16((int16x8_t)vzip1q_s8((int8x16_t)v87, (int8x16_t)0), (int16x8_t)vzip1q_s8((int8x16_t)v89, (int8x16_t)0));
  v92 = (int8x16_t)vzip1q_s16(v90, v91);
  v93 = (int8x16_t)vzip2q_s16(v90, v91);
  *(_QWORD *)&result = vrhaddq_u16((uint16x8_t)vextq_s8(v93, (int8x16_t)0, 8uLL), v43).u64[0];
  *a1 = vrhaddq_u16((uint16x8_t)v92, v38).u64[0];
  *(_QWORD *)((char *)a1 + a2) = vrhaddq_u16((uint16x8_t)vextq_s8(v92, (int8x16_t)0, 8uLL), v40).u64[0];
  v95 = 2 * a2;
  *(_QWORD *)((char *)a1 + v95) = vrhaddq_u16((uint16x8_t)v93, v42).u64[0];
  *(double *)((char *)a1 + v95 + a2) = result;
  return result;
}

int16x8_t sub_216083890(_QWORD *a1, unsigned int a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int8x16_t v5;
  int8x16_t v6;
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;
  int8x16_t v10;
  int8x16_t v11;
  int8x16_t v12;
  int8x16_t v13;
  int8x16_t v14;
  int8x16_t v15;
  int8x16_t v16;
  int8x16_t v17;
  int8x16_t v18;
  int8x16_t v19;
  int8x16_t v20;
  int8x16_t v21;
  int8x16_t v22;
  int8x16_t v23;
  int8x16_t v24;
  int8x16_t v25;
  int8x16_t v26;
  int8x16_t v27;
  int8x16_t v28;
  int8x16_t v29;
  int8x16_t v30;
  int8x16_t v31;
  int8x16_t v32;
  int8x16_t v33;
  int8x16_t v34;
  int8x16_t v35;
  int8x16_t v36;
  int16x8_t v37;
  int8x16_t v38;
  int8x16_t v39;
  int8x16_t v40;
  int16x8_t v41;
  int16x8_t v42;
  int16x8_t v43;
  int16x8_t v44;
  int16x8_t v45;
  int16x8_t v46;
  int16x8_t v47;
  int16x8_t v48;
  int16x8_t v49;
  int16x8_t v50;
  uint16x8_t v51;
  int16x8_t v52;
  int16x8_t v53;
  int16x8_t v54;
  int16x8_t v55;
  int16x8_t v56;
  int16x8_t v57;
  int16x8_t v58;
  int16x8_t v59;
  int16x8_t v60;
  int16x8_t result;
  uint64_t v62;

  v5 = *(int8x16_t *)(a3 - 2);
  v4 = a3 - 2;
  v6 = *(int8x16_t *)(v4 + a4);
  v7 = *(int8x16_t *)(v4 + 2 * a4);
  v8 = *(int8x16_t *)(v4 + 3 * a4);
  v9 = vdupq_laneq_s8(v5, 8);
  v10 = vzip1q_s8(v5, (int8x16_t)0);
  v11 = vzip1q_s8(v6, (int8x16_t)0);
  v12 = vdupq_laneq_s8(v6, 8);
  v13 = vdupq_laneq_s8(v7, 8);
  v14 = vzip1q_s8(v7, (int8x16_t)0);
  v15 = vzip1q_s8(v8, (int8x16_t)0);
  v16 = vdupq_laneq_s8(v8, 8);
  v17 = vzip1q_s8(v10, (int8x16_t)0);
  v18 = vzip2q_s8(v10, (int8x16_t)0);
  v9.i8[1] = 0;
  v19 = vzip1q_s8(v11, (int8x16_t)0);
  v20 = vzip2q_s8(v11, (int8x16_t)0);
  v12.i8[1] = 0;
  v21 = vzip1q_s8(v14, (int8x16_t)0);
  v22 = vzip2q_s8(v14, (int8x16_t)0);
  v13.i8[1] = 0;
  v23 = vzip1q_s8(v15, (int8x16_t)0);
  v24 = vzip2q_s8(v15, (int8x16_t)0);
  v16.i8[1] = 0;
  v25 = vzip1q_s8(v17, v21);
  v26 = vzip2q_s8(v17, v21);
  v27 = vzip1q_s8(v18, v22);
  v28 = vzip2q_s8(v18, v22);
  v29 = vzip1q_s8(v9, v13);
  v30 = vzip1q_s8(v19, v23);
  v31 = vzip2q_s8(v19, v23);
  v32 = vzip1q_s8(v20, v24);
  v33 = vzip2q_s8(v20, v24);
  v34 = vzip1q_s8(v26, v31);
  v35 = vzip2q_s8(v26, v31);
  v36 = vzip1q_s8(v27, v32);
  v37 = (int16x8_t)vzip2q_s8(v27, v32);
  v38 = vzip1q_s8(v28, v33);
  v39 = vzip2q_s8(v28, v33);
  v40 = vzip1q_s8(v29, vzip1q_s8(v12, v16));
  v41 = (int16x8_t)vzip1q_s8(vzip1q_s8(v25, v30), (int8x16_t)0);
  v42 = (int16x8_t)vzip1q_s8(vzip2q_s8(v25, v30), (int8x16_t)0);
  v43 = (int16x8_t)vzip1q_s8(v34, (int8x16_t)0);
  v44 = (int16x8_t)vzip1q_s8(v35, (int8x16_t)0);
  v45 = (int16x8_t)vzip1q_s8(v36, (int8x16_t)0);
  v46 = (int16x8_t)vzip1q_s8((int8x16_t)v37, (int8x16_t)0);
  v47 = (int16x8_t)vzip1q_s8(v38, (int8x16_t)0);
  v48 = (int16x8_t)vzip1q_s8(v39, (int8x16_t)0);
  v37.i64[0] = 0x4000400040004;
  v37.i64[1] = 0x4000400040004;
  v49 = vmulq_s16(v45, v37);
  v50.i64[0] = 0x10001000100010;
  v50.i64[1] = 0x10001000100010;
  v51.i64[0] = 0x10001000100010;
  v51.i64[1] = 0x10001000100010;
  v52 = (int16x8_t)vmlal_u8(v51, (uint8x8_t)vmovn_s16(v44), (uint8x8_t)0x1414141414141414);
  v53 = vshlq_s16(vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)vmlaq_s16(vaddq_s16(v52, vaddq_s16(v41, v46)), v42, v37), (uint8x8_t)vmovn_s16(v43), (uint8x8_t)0x1414141414141414), v49), v37);
  *(int8x8_t *)v53.i8 = vqmovun_s16(v53);
  *(int8x8_t *)v45.i8 = vmovn_s16(v45);
  v54 = vshlq_s16(vmlaq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16(v52, vaddq_s16(v42, v47)), *(uint8x8_t *)v45.i8, (uint8x8_t)0x1414141414141414), vaddq_s16(v46, v43), v37), v37);
  *(int8x8_t *)v54.i8 = vqmovun_s16(v54);
  *(int8x8_t *)v46.i8 = vmovn_s16(v46);
  v55 = vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)v43, *(uint8x8_t *)v45.i8, (uint8x8_t)0x1414141414141414), v48), *(uint8x8_t *)v46.i8, (uint8x8_t)0x1414141414141414), vaddq_s16(v47, v44), v37), v50), v37);
  *(int8x8_t *)v55.i8 = vqmovun_s16(v55);
  v56 = vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8(vmlal_u8((uint16x8_t)vaddq_s16(vaddq_s16(v49, v44), (int16x8_t)vzip1q_s8(v40, (int8x16_t)0)), *(uint8x8_t *)v46.i8, (uint8x8_t)0x1414141414141414), (uint8x8_t)vmovn_s16(v47), (uint8x8_t)0x1414141414141414), v48, v37), v50), v37);
  *(int8x8_t *)v56.i8 = vqmovun_s16(v56);
  v57 = (int16x8_t)vzip1q_s8((int8x16_t)v56, (int8x16_t)0);
  v58 = vzip1q_s16((int16x8_t)vzip1q_s8((int8x16_t)v53, (int8x16_t)0), (int16x8_t)vzip1q_s8((int8x16_t)v55, (int8x16_t)0));
  v59 = vzip1q_s16((int16x8_t)vzip1q_s8((int8x16_t)v54, (int8x16_t)0), v57);
  v60 = vzip1q_s16(v58, v59);
  result = vzip2q_s16(v58, v59);
  *a1 = v60.i64[0];
  *(_QWORD *)((char *)a1 + a2) = v60.i64[1];
  v62 = 2 * a2;
  *(_QWORD *)((char *)a1 + v62) = result.i64[0];
  *(_QWORD *)((char *)a1 + v62 + a2) = result.i64[1];
  return result;
}

double sub_216083A54(_QWORD *a1, unsigned int a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int8x16_t v5;
  int8x16_t v6;
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;
  int32x4_t v10;
  int8x16_t *v11;
  int32x4_t v12;
  int8x16_t v13;
  int8x16_t *v14;
  int8x16_t v15;
  int8x16_t *v16;
  int32x4_t v17;
  int8x16_t v18;
  int8x16_t *v19;
  int8x16_t v20;
  int8x16_t *v21;
  int32x4_t v22;
  int8x16_t v23;
  int32x4_t v24;
  int8x16_t *v25;
  int32x4_t v26;
  int8x16_t v27;
  int32x4_t v28;
  int8x16_t *v29;
  int32x4_t v30;
  int32x4_t v31;
  int32x4_t v32;
  int8x16_t v33;
  int32x4_t v34;
  int8x16_t v35;
  int8x16_t v36;
  int8x16_t v37;
  int8x16_t v38;
  int32x4_t v39;
  int32x4_t v40;
  int32x4_t v41;
  int32x4_t v42;
  int32x4_t v43;
  int32x4_t v44;
  int32x4_t v45;
  int32x4_t v46;
  int8x16_t v47;
  int8x16_t v48;
  int8x16_t v49;
  int8x16_t v50;
  int32x4_t v51;
  int32x4_t v52;
  int32x4_t v53;
  int32x4_t v54;
  int32x4_t v55;
  int32x4_t v56;
  int32x4_t v57;
  int32x4_t v58;
  int32x4_t v59;
  int32x4_t v60;
  int32x4_t v61;
  int8x16_t v62;
  int8x16_t v63;
  int8x16_t v64;
  int8x16_t v65;
  int8x16_t v66;
  int32x4_t v67;
  int32x4_t v68;
  int32x4_t v69;
  int32x4_t v70;
  int32x4_t v71;
  int32x4_t v72;
  int32x4_t v73;
  int32x4_t v74;
  int32x4_t v75;
  int8x16_t v76;
  int8x16_t v77;
  int8x16_t v78;
  int8x16_t v79;
  int32x4_t v80;
  int32x4_t v81;
  int32x4_t v82;
  int32x4_t v83;
  int32x4_t v84;
  int32x4_t v85;
  int32x4_t v86;
  int32x4_t v87;
  int32x4_t v88;
  int8x16_t v89;
  int8x16_t v90;
  int8x16_t v91;
  int8x16_t v92;
  int32x4_t v93;
  int32x4_t v94;
  int32x4_t v95;
  int32x4_t v96;
  int32x4_t v97;
  int32x4_t v98;
  int32x4_t v99;
  int32x4_t v100;
  int32x4_t v101;
  int8x16_t v102;
  int8x16_t v103;
  int8x16_t v104;
  int8x16_t v105;
  int32x4_t v106;
  int32x4_t v107;
  int32x4_t v108;
  int32x4_t v109;
  int32x4_t v110;
  int32x4_t v111;
  int32x4_t v112;
  int32x4_t v113;
  int8x16_t v114;
  int8x16_t v115;
  int8x16_t v116;
  int8x16_t v117;
  int32x4_t v118;
  int32x4_t v119;
  int32x4_t v120;
  int32x4_t v121;
  int32x4_t v122;
  int32x4_t v123;
  int32x4_t v124;
  int32x4_t v125;
  int8x16_t v126;
  int8x16_t v127;
  int8x16_t v128;
  int8x16_t v129;
  int32x4_t v130;
  int32x4_t v131;
  int32x4_t v132;
  int32x4_t v133;
  int32x4_t v134;
  int32x4_t v135;
  int32x4_t v136;
  int32x4_t v137;
  int32x4_t v138;
  int32x4_t v139;
  uint64x2_t v140;
  uint32x2_t v141;
  uint32x2_t v142;
  uint32x2_t v143;
  uint32x2_t v144;
  uint32x2_t v145;
  int32x4_t v146;
  int32x4_t v147;
  int32x4_t v148;
  int32x4_t v149;
  int32x4_t v150;
  int32x4_t v151;
  uint32x2_t v152;
  int32x4_t v153;
  int32x4_t v154;
  int32x4_t v155;
  int32x4_t v156;
  uint64_t v157;
  int32x4_t v158;
  double result;

  v4 = a3 - 2 * a4;
  v5 = *(int8x16_t *)(v4 - 2);
  v6 = vzip1q_s8(v5, (int8x16_t)0);
  v7 = vextq_s8(v6, (int8x16_t)0, 2uLL);
  v8 = vextq_s8(v6, (int8x16_t)0, 4uLL);
  v9 = vzip1q_s8(vextq_s8(v5, v5, 3uLL), (int8x16_t)0);
  v10 = vpaddq_s32(vmull_s16(*(int16x4_t *)v6.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v6, v6, 8uLL), (int16x4_t)131067));
  v11 = (int8x16_t *)(v4 - 2 + a4);
  v12 = vpaddq_s32(vmull_s16(*(int16x4_t *)v7.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v7, v7, 8uLL), (int16x4_t)131067));
  v13 = *v11;
  v14 = (int8x16_t *)((char *)v11 + a4);
  v15 = *v14;
  v16 = (int8x16_t *)((char *)v14 + a4);
  v17 = vpaddq_s32(vmull_s16(*(int16x4_t *)v8.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL), (int16x4_t)131067));
  v18 = *v16;
  v19 = (int8x16_t *)((char *)v16 + a4);
  v20 = *v19;
  v21 = (int8x16_t *)((char *)v19 + a4);
  v22 = vpaddq_s32(vmull_s16(*(int16x4_t *)v9.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v9, v9, 8uLL), (int16x4_t)131067));
  v23 = *v21;
  v24 = vzip1q_s32(v10, v17);
  v25 = (int8x16_t *)((char *)v21 + a4);
  v26 = vzip2q_s32(v10, v17);
  v27 = *v25;
  v28 = vzip1q_s32(v12, v22);
  v29 = (int8x16_t *)((char *)v25 + a4);
  v30 = vzip2q_s32(v12, v22);
  v31 = vzip1q_s32(v24, v28);
  v32 = vzip2q_s32(v24, v28);
  v33 = *(int8x16_t *)((char *)v29 + a4);
  v34 = vzip1q_s32(v26, v30);
  v35 = vzip1q_s8(v13, (int8x16_t)0);
  v36 = vextq_s8(v35, (int8x16_t)0, 2uLL);
  v37 = vextq_s8(v35, (int8x16_t)0, 4uLL);
  v38 = vzip1q_s8(vextq_s8(v13, v35, 3uLL), (int8x16_t)0);
  v39 = vpaddq_s32(vmull_s16(*(int16x4_t *)v35.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v35, v35, 8uLL), (int16x4_t)131067));
  v40 = vpaddq_s32(vmull_s16(*(int16x4_t *)v36.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v36, v36, 8uLL), (int16x4_t)131067));
  v41 = vpaddq_s32(vmull_s16(*(int16x4_t *)v37.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v37, v37, 8uLL), (int16x4_t)131067));
  v42 = vpaddq_s32(vmull_s16(*(int16x4_t *)v38.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v38, v38, 8uLL), (int16x4_t)131067));
  v43 = vzip1q_s32(v39, v41);
  v44 = vzip2q_s32(v39, v41);
  v45 = vzip1q_s32(v40, v42);
  v46 = vaddq_s32(vaddq_s32(vzip1q_s32(v43, v45), vzip2q_s32(v43, v45)), vzip1q_s32(v44, vzip2q_s32(v40, v42)));
  v47 = vzip1q_s8(v15, (int8x16_t)0);
  v48 = vextq_s8(v47, (int8x16_t)0, 2uLL);
  v49 = vextq_s8(v47, (int8x16_t)0, 4uLL);
  v50 = vzip1q_s8(vextq_s8(v15, v47, 3uLL), (int8x16_t)0);
  v51 = vpaddq_s32(vmull_s16(*(int16x4_t *)v47.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v47, v47, 8uLL), (int16x4_t)131067));
  v52 = vpaddq_s32(vmull_s16(*(int16x4_t *)v48.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL), (int16x4_t)131067));
  v53 = vpaddq_s32(vmull_s16(*(int16x4_t *)v49.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v49, v49, 8uLL), (int16x4_t)131067));
  v54 = vpaddq_s32(vmull_s16(*(int16x4_t *)v50.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v50, v50, 8uLL), (int16x4_t)131067));
  v55 = vzip1q_s32(v51, v53);
  v56 = vzip2q_s32(v51, v53);
  v57 = vzip1q_s32(v52, v54);
  v58 = vaddq_s32(vaddq_s32(vzip1q_s32(v55, v57), vzip2q_s32(v55, v57)), vzip1q_s32(v56, vzip2q_s32(v52, v54)));
  v59.i64[0] = 0x1000000010;
  v59.i64[1] = 0x1000000010;
  v60.i64[0] = 0x400000004;
  v60.i64[1] = 0x400000004;
  v61 = vshlq_s32(vaddq_s32(v58, v59), v60);
  v62 = (int8x16_t)vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v61), v61)));
  v63 = vzip1q_s8(v18, (int8x16_t)0);
  v64 = vextq_s8(v63, (int8x16_t)0, 2uLL);
  v65 = vextq_s8(v63, (int8x16_t)0, 4uLL);
  v66 = vzip1q_s8(vextq_s8(v18, v62, 3uLL), (int8x16_t)0);
  v67 = vpaddq_s32(vmull_s16(*(int16x4_t *)v63.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v63, v63, 8uLL), (int16x4_t)131067));
  v68 = vpaddq_s32(vmull_s16(*(int16x4_t *)v64.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v64, v64, 8uLL), (int16x4_t)131067));
  v69 = vpaddq_s32(vmull_s16(*(int16x4_t *)v65.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v65, v65, 8uLL), (int16x4_t)131067));
  v70 = vpaddq_s32(vmull_s16(*(int16x4_t *)v66.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v66, v66, 8uLL), (int16x4_t)131067));
  v71 = vzip1q_s32(v67, v69);
  v72 = vzip2q_s32(v67, v69);
  v73 = vzip1q_s32(v68, v70);
  v74 = vaddq_s32(vaddq_s32(vzip1q_s32(v71, v73), vzip2q_s32(v71, v73)), vzip1q_s32(v72, vzip2q_s32(v68, v70)));
  v75 = vshlq_s32(vaddq_s32(v74, v59), v60);
  v76 = vzip1q_s8(v20, (int8x16_t)0);
  v77 = vextq_s8(v76, (int8x16_t)0, 2uLL);
  v78 = vextq_s8(v76, (int8x16_t)0, 4uLL);
  v79 = vzip1q_s8(vextq_s8(v20, v62, 3uLL), (int8x16_t)0);
  v80 = vpaddq_s32(vmull_s16(*(int16x4_t *)v76.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v76, v76, 8uLL), (int16x4_t)131067));
  v81 = vpaddq_s32(vmull_s16(*(int16x4_t *)v77.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v77, v77, 8uLL), (int16x4_t)131067));
  v82 = vpaddq_s32(vmull_s16(*(int16x4_t *)v78.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v78, v78, 8uLL), (int16x4_t)131067));
  v83 = vpaddq_s32(vmull_s16(*(int16x4_t *)v79.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v79, v79, 8uLL), (int16x4_t)131067));
  v84 = vzip1q_s32(v80, v82);
  v85 = vzip2q_s32(v80, v82);
  v86 = vzip1q_s32(v81, v83);
  v87 = vaddq_s32(vaddq_s32(vzip1q_s32(v84, v86), vzip2q_s32(v84, v86)), vzip1q_s32(v85, vzip2q_s32(v81, v83)));
  v88 = vshlq_s32(vaddq_s32(v87, v59), v60);
  v89 = vzip1q_s8(v23, (int8x16_t)0);
  v90 = vextq_s8(v89, (int8x16_t)0, 2uLL);
  v91 = vextq_s8(v89, (int8x16_t)0, 4uLL);
  v92 = vzip1q_s8(vextq_s8(v23, v62, 3uLL), (int8x16_t)0);
  v93 = vpaddq_s32(vmull_s16(*(int16x4_t *)v89.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v89, v89, 8uLL), (int16x4_t)131067));
  v94 = vpaddq_s32(vmull_s16(*(int16x4_t *)v90.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v90, v90, 8uLL), (int16x4_t)131067));
  v95 = vpaddq_s32(vmull_s16(*(int16x4_t *)v91.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v91, v91, 8uLL), (int16x4_t)131067));
  v96 = vpaddq_s32(vmull_s16(*(int16x4_t *)v92.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v92, v92, 8uLL), (int16x4_t)131067));
  v97 = vzip1q_s32(v93, v95);
  v98 = vzip2q_s32(v93, v95);
  v99 = vzip1q_s32(v94, v96);
  v100 = vaddq_s32(vaddq_s32(vzip1q_s32(v97, v99), vzip2q_s32(v97, v99)), vzip1q_s32(v98, vzip2q_s32(v94, v96)));
  v101 = vshlq_s32(vaddq_s32(v100, v59), v60);
  v102 = vzip1q_s8(v27, (int8x16_t)0);
  v103 = vextq_s8(v102, (int8x16_t)0, 2uLL);
  v104 = vextq_s8(v102, (int8x16_t)0, 4uLL);
  v105 = vzip1q_s8(vextq_s8(v27, v62, 3uLL), (int8x16_t)0);
  v106 = vpaddq_s32(vmull_s16(*(int16x4_t *)v102.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v102, v102, 8uLL), (int16x4_t)131067));
  v107 = vpaddq_s32(vmull_s16(*(int16x4_t *)v103.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v103, v103, 8uLL), (int16x4_t)131067));
  v108 = vpaddq_s32(vmull_s16(*(int16x4_t *)v104.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v104, v104, 8uLL), (int16x4_t)131067));
  v109 = vpaddq_s32(vmull_s16(*(int16x4_t *)v105.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v105, v105, 8uLL), (int16x4_t)131067));
  v110 = vzip1q_s32(v106, v108);
  v111 = vzip2q_s32(v106, v108);
  v112 = vzip1q_s32(v107, v109);
  v113 = vaddq_s32(vaddq_s32(vzip1q_s32(v110, v112), vzip2q_s32(v110, v112)), vzip1q_s32(v111, vzip2q_s32(v107, v109)));
  v114 = vzip1q_s8(*v29, (int8x16_t)0);
  v115 = vextq_s8(v114, (int8x16_t)0, 2uLL);
  v116 = vextq_s8(v114, (int8x16_t)0, 4uLL);
  v117 = vzip1q_s8(vextq_s8(*v29, v62, 3uLL), (int8x16_t)0);
  v118 = vpaddq_s32(vmull_s16(*(int16x4_t *)v114.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v114, v114, 8uLL), (int16x4_t)131067));
  v119 = vpaddq_s32(vmull_s16(*(int16x4_t *)v115.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v115, v115, 8uLL), (int16x4_t)131067));
  v120 = vpaddq_s32(vmull_s16(*(int16x4_t *)v116.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v116, v116, 8uLL), (int16x4_t)131067));
  v121 = vpaddq_s32(vmull_s16(*(int16x4_t *)v117.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v117, v117, 8uLL), (int16x4_t)131067));
  v122 = vzip1q_s32(v118, v120);
  v123 = vzip2q_s32(v118, v120);
  v124 = vzip1q_s32(v119, v121);
  v125 = vaddq_s32(vaddq_s32(vzip1q_s32(v122, v124), vzip2q_s32(v122, v124)), vzip1q_s32(v123, vzip2q_s32(v119, v121)));
  v126 = vzip1q_s8(v33, (int8x16_t)0);
  v127 = vextq_s8(v126, (int8x16_t)0, 2uLL);
  v128 = vextq_s8(v126, (int8x16_t)0, 4uLL);
  v129 = vzip1q_s8(vextq_s8(v33, v62, 3uLL), (int8x16_t)0);
  v130 = vpaddq_s32(vmull_s16(*(int16x4_t *)v126.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v126, v126, 8uLL), (int16x4_t)131067));
  v131 = vpaddq_s32(vmull_s16(*(int16x4_t *)v127.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v127, v127, 8uLL), (int16x4_t)131067));
  v132 = vpaddq_s32(vmull_s16(*(int16x4_t *)v128.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v128, v128, 8uLL), (int16x4_t)131067));
  v133 = vpaddq_s32(vmull_s16(*(int16x4_t *)v129.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v129, v129, 8uLL), (int16x4_t)131067));
  v134 = vzip1q_s32(v130, v132);
  v135 = vzip1q_s32(v131, v133);
  v136 = vzip2q_s32(v131, v133);
  v137 = vzip1q_s32(v134, v135);
  v138 = vzip2q_s32(v134, v135);
  v139 = vzip1q_s32(vzip2q_s32(v130, v132), v136);
  v136.i64[0] = 0xFFFFFFFFLL;
  v136.i64[1] = 0xFFFFFFFFLL;
  v140 = (uint64x2_t)vdupq_n_s64(0xFFFFFFE0uLL);
  v141 = (uint32x2_t)vzip1_s32(*(int32x2_t *)v58.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v58, (int8x16_t)v58, 8uLL));
  v142 = (uint32x2_t)vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v58, v140));
  *(int32x2_t *)v97.i8 = vzip1_s32(*(int32x2_t *)v74.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v74, (int8x16_t)v74, 8uLL));
  v143 = (uint32x2_t)vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v74, v140));
  v144 = (uint32x2_t)vzip1_s32(*(int32x2_t *)v87.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v87, (int8x16_t)v87, 8uLL));
  v145 = (uint32x2_t)vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v87, v140));
  v146 = (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(v144, (uint32x2_t)0x400000004), (int8x16_t)v136), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(v145, (uint32x2_t)0x400000004), 0x20uLL));
  v87.i64[0] = 0x20000000200;
  v87.i64[1] = 0x20000000200;
  v147 = vaddq_s32((int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(*(uint32x2_t *)v97.i8, (uint32x2_t)0x1400000014), (int8x16_t)v136), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(v143, (uint32x2_t)0x1400000014), 0x20uLL)), v87);
  v148 = vaddq_s32(vaddq_s32(v147, vaddq_s32(vaddq_s32(vaddq_s32(vaddq_s32(vaddq_s32(v32, v31), v34), v100), (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32((uint32x2_t)vzip1_s32(*(int32x2_t *)v46.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v46, (int8x16_t)v46, 8uLL)), (uint32x2_t)0x400000004), (int8x16_t)v136), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32((uint32x2_t)vmovn_s64((int64x2_t)vshlq_u64(
                                                                                           (uint64x2_t)v46,
                                                                                           v140)),
                                                        (uint32x2_t)0x400000004),
                                           0x20uLL))),
               (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(v141, (uint32x2_t)0x1400000014), (int8x16_t)v136), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(v142, (uint32x2_t)0x1400000014), 0x20uLL)))), v146);
  v31.i64[0] = 0x900000009;
  v31.i64[1] = 0x900000009;
  v149 = vshlq_s32(v148, v31);
  v150 = (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(v141, (uint32x2_t)0x400000004), (int8x16_t)v136), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(v142, (uint32x2_t)0x400000004), 0x20uLL));
  v151 = (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(v144, (uint32x2_t)0x1400000014), (int8x16_t)v136), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(v145, (uint32x2_t)0x1400000014), 0x20uLL));
  v152 = (uint32x2_t)vzip1_s32(*(int32x2_t *)v100.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v100, (int8x16_t)v100, 8uLL));
  *(int32x2_t *)v100.i8 = vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v100, v140));
  v153 = vshlq_s32(vaddq_s32(vaddq_s32(vaddq_s32(v147, vaddq_s32(vaddq_s32(v46, v113), v150)), v151), (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(v152, (uint32x2_t)0x400000004), (int8x16_t)v136), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(*(uint32x2_t *)v100.i8, (uint32x2_t)0x400000004), 0x20uLL))), v31);
  v154 = (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(*(uint32x2_t *)v97.i8, (uint32x2_t)0x400000004), (int8x16_t)v136), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(v143, (uint32x2_t)0x400000004), 0x20uLL));
  v155 = (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(v152, (uint32x2_t)0x1400000014), (int8x16_t)v136), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(*(uint32x2_t *)v100.i8, (uint32x2_t)0x1400000014), 0x20uLL));
  *(int32x2_t *)v97.i8 = vzip1_s32(*(int32x2_t *)v113.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v113, (int8x16_t)v113, 8uLL));
  *(int32x2_t *)v113.i8 = vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v113, v140));
  v156 = vshlq_s32(vaddq_s32(vaddq_s32(vaddq_s32(vaddq_s32(v151, vaddq_s32(vaddq_s32(v58, v125), v154)), v155), (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(*(uint32x2_t *)v97.i8, (uint32x2_t)0x400000004), (int8x16_t)v136), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(*(uint32x2_t *)v113.i8, (uint32x2_t)0x400000004), 0x20uLL))), v87), v31);
  *a1 = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v149), v149))), (uint16x8_t)v62).u64[0];
  *(_QWORD *)((char *)a1 + a2) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v153), v153))), vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v75), v75)))).u64[0];
  v157 = 2 * a2;
  v158 = vshlq_s32(vaddq_s32(vaddq_s32(vaddq_s32(vaddq_s32(vaddq_s32(v146, vaddq_s32(vaddq_s32(vaddq_s32(v74, v138), v137), v139)), v155), (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(*(uint32x2_t *)v97.i8, (uint32x2_t)0x1400000014), (int8x16_t)v136), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(*(uint32x2_t *)v113.i8, (uint32x2_t)0x1400000014), 0x20uLL))), (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32((uint32x2_t)vzip1_s32(*(int32x2_t *)v125.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v125, (int8x16_t)v125,
                                                                                  8uLL)),
                                           (uint32x2_t)0x400000004),
                              (int8x16_t)v136),
                            (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32((uint32x2_t)vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v125, v140)), (uint32x2_t)0x400000004), 0x20uLL))), v87), v31);
  *(_QWORD *)((char *)a1 + v157) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v156), v156))), vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v88), v88)))).u64[0];
  *(_QWORD *)&result = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v158), v158))), vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v101), v101)))).u64[0];
  *(double *)((char *)a1 + v157 + a2) = result;
  return result;
}

double sub_2160841C4(_QWORD *a1, unsigned int a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int8x16_t v5;
  int8x16_t v6;
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;
  int32x4_t v10;
  int8x16_t *v11;
  int32x4_t v12;
  int8x16_t v13;
  int8x16_t *v14;
  int8x16_t v15;
  int8x16_t *v16;
  int32x4_t v17;
  int8x16_t v18;
  int8x16_t *v19;
  int8x16_t v20;
  int8x16_t *v21;
  int32x4_t v22;
  int8x16_t v23;
  int32x4_t v24;
  int8x16_t *v25;
  int32x4_t v26;
  int8x16_t v27;
  int32x4_t v28;
  int8x16_t *v29;
  int32x4_t v30;
  int32x4_t v31;
  int32x4_t v32;
  int8x16_t v33;
  int32x4_t v34;
  int8x16_t v35;
  int8x16_t v36;
  int8x16_t v37;
  int8x16_t v38;
  int32x4_t v39;
  int32x4_t v40;
  int32x4_t v41;
  int32x4_t v42;
  int32x4_t v43;
  int32x4_t v44;
  int32x4_t v45;
  int32x4_t v46;
  int8x16_t v47;
  int8x16_t v48;
  int8x16_t v49;
  int8x16_t v50;
  int32x4_t v51;
  int32x4_t v52;
  int32x4_t v53;
  int32x4_t v54;
  int32x4_t v55;
  int32x4_t v56;
  int32x4_t v57;
  int32x4_t v58;
  int8x16_t v59;
  int8x16_t v60;
  int8x16_t v61;
  int8x16_t v62;
  int32x4_t v63;
  int32x4_t v64;
  int32x4_t v65;
  int32x4_t v66;
  int32x4_t v67;
  int32x4_t v68;
  int32x4_t v69;
  int32x4_t v70;
  int32x4_t v71;
  int32x4_t v72;
  int32x4_t v73;
  int8x16_t v74;
  int8x16_t v75;
  int8x16_t v76;
  int8x16_t v77;
  int32x4_t v78;
  int32x4_t v79;
  int32x4_t v80;
  int32x4_t v81;
  int32x4_t v82;
  int32x4_t v83;
  int32x4_t v84;
  int32x4_t v85;
  int32x4_t v86;
  int8x16_t v87;
  int8x16_t v88;
  int8x16_t v89;
  int8x16_t v90;
  int32x4_t v91;
  int32x4_t v92;
  int32x4_t v93;
  int32x4_t v94;
  int32x4_t v95;
  int32x4_t v96;
  int32x4_t v97;
  int32x4_t v98;
  int32x4_t v99;
  int8x16_t v100;
  int8x16_t v101;
  int8x16_t v102;
  int8x16_t v103;
  int32x4_t v104;
  int32x4_t v105;
  int32x4_t v106;
  int32x4_t v107;
  int32x4_t v108;
  int32x4_t v109;
  int32x4_t v110;
  int32x4_t v111;
  int32x4_t v112;
  int8x16_t v113;
  int8x16_t v114;
  int8x16_t v115;
  int8x16_t v116;
  int32x4_t v117;
  int32x4_t v118;
  int32x4_t v119;
  int32x4_t v120;
  int32x4_t v121;
  int32x4_t v122;
  int32x4_t v123;
  int32x4_t v124;
  int8x16_t v125;
  int8x16_t v126;
  int8x16_t v127;
  int8x16_t v128;
  int32x4_t v129;
  int32x4_t v130;
  int32x4_t v131;
  int32x4_t v132;
  int32x4_t v133;
  int32x4_t v134;
  int32x4_t v135;
  int32x4_t v136;
  int32x4_t v137;
  int32x4_t v138;
  uint64x2_t v139;
  uint32x2_t v140;
  uint32x2_t v141;
  uint32x2_t v142;
  uint32x2_t v143;
  uint32x2_t v144;
  int32x4_t v145;
  int32x4_t v146;
  int32x4_t v147;
  int32x4_t v148;
  int32x4_t v149;
  int32x4_t v150;
  uint32x2_t v151;
  int32x4_t v152;
  int32x4_t v153;
  int32x4_t v154;
  int32x4_t v155;
  uint64_t v156;
  int32x4_t v157;
  double result;

  v4 = a3 - 2 * a4;
  v5 = *(int8x16_t *)(v4 - 2);
  v6 = vzip1q_s8(v5, (int8x16_t)0);
  v7 = vextq_s8(v6, (int8x16_t)0, 2uLL);
  v8 = vextq_s8(v6, (int8x16_t)0, 4uLL);
  v9 = vzip1q_s8(vextq_s8(v5, v5, 3uLL), (int8x16_t)0);
  v10 = vpaddq_s32(vmull_s16(*(int16x4_t *)v6.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v6, v6, 8uLL), (int16x4_t)131067));
  v11 = (int8x16_t *)(v4 - 2 + a4);
  v12 = vpaddq_s32(vmull_s16(*(int16x4_t *)v7.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v7, v7, 8uLL), (int16x4_t)131067));
  v13 = *v11;
  v14 = (int8x16_t *)((char *)v11 + a4);
  v15 = *v14;
  v16 = (int8x16_t *)((char *)v14 + a4);
  v17 = vpaddq_s32(vmull_s16(*(int16x4_t *)v8.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL), (int16x4_t)131067));
  v18 = *v16;
  v19 = (int8x16_t *)((char *)v16 + a4);
  v20 = *v19;
  v21 = (int8x16_t *)((char *)v19 + a4);
  v22 = vpaddq_s32(vmull_s16(*(int16x4_t *)v9.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v9, v9, 8uLL), (int16x4_t)131067));
  v23 = *v21;
  v24 = vzip1q_s32(v10, v17);
  v25 = (int8x16_t *)((char *)v21 + a4);
  v26 = vzip2q_s32(v10, v17);
  v27 = *v25;
  v28 = vzip1q_s32(v12, v22);
  v29 = (int8x16_t *)((char *)v25 + a4);
  v30 = vzip2q_s32(v12, v22);
  v31 = vzip1q_s32(v24, v28);
  v32 = vzip2q_s32(v24, v28);
  v33 = *(int8x16_t *)((char *)v29 + a4);
  v34 = vzip1q_s32(v26, v30);
  v35 = vzip1q_s8(v13, (int8x16_t)0);
  v36 = vextq_s8(v35, (int8x16_t)0, 2uLL);
  v37 = vextq_s8(v35, (int8x16_t)0, 4uLL);
  v38 = vzip1q_s8(vextq_s8(v13, (int8x16_t)v31, 3uLL), (int8x16_t)0);
  v39 = vpaddq_s32(vmull_s16(*(int16x4_t *)v35.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v35, v35, 8uLL), (int16x4_t)131067));
  v40 = vpaddq_s32(vmull_s16(*(int16x4_t *)v36.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v36, v36, 8uLL), (int16x4_t)131067));
  v41 = vpaddq_s32(vmull_s16(*(int16x4_t *)v37.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v37, v37, 8uLL), (int16x4_t)131067));
  v42 = vpaddq_s32(vmull_s16(*(int16x4_t *)v38.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v38, v38, 8uLL), (int16x4_t)131067));
  v43 = vzip1q_s32(v39, v41);
  v44 = vzip2q_s32(v39, v41);
  v45 = vzip1q_s32(v40, v42);
  v46 = vaddq_s32(vaddq_s32(vzip1q_s32(v43, v45), vzip2q_s32(v43, v45)), vzip1q_s32(v44, vzip2q_s32(v40, v42)));
  v47 = vzip1q_s8(v15, (int8x16_t)0);
  v48 = vextq_s8(v47, (int8x16_t)0, 2uLL);
  v49 = vextq_s8(v47, (int8x16_t)0, 4uLL);
  v50 = vzip1q_s8(vextq_s8(v15, (int8x16_t)v31, 3uLL), (int8x16_t)0);
  v51 = vpaddq_s32(vmull_s16(*(int16x4_t *)v47.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v47, v47, 8uLL), (int16x4_t)131067));
  v52 = vpaddq_s32(vmull_s16(*(int16x4_t *)v48.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL), (int16x4_t)131067));
  v53 = vpaddq_s32(vmull_s16(*(int16x4_t *)v49.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v49, v49, 8uLL), (int16x4_t)131067));
  v54 = vpaddq_s32(vmull_s16(*(int16x4_t *)v50.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v50, v50, 8uLL), (int16x4_t)131067));
  v55 = vzip1q_s32(v51, v53);
  v56 = vzip2q_s32(v51, v53);
  v57 = vzip1q_s32(v52, v54);
  v58 = vaddq_s32(vaddq_s32(vzip1q_s32(v55, v57), vzip2q_s32(v55, v57)), vzip1q_s32(v56, vzip2q_s32(v52, v54)));
  v59 = vzip1q_s8(v18, (int8x16_t)0);
  v60 = vextq_s8(v59, (int8x16_t)0, 2uLL);
  v61 = vextq_s8(v59, (int8x16_t)0, 4uLL);
  v62 = vzip1q_s8(vextq_s8(v18, (int8x16_t)v31, 3uLL), (int8x16_t)0);
  v63 = vpaddq_s32(vmull_s16(*(int16x4_t *)v59.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v59, v59, 8uLL), (int16x4_t)131067));
  v64 = vpaddq_s32(vmull_s16(*(int16x4_t *)v60.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v60, v60, 8uLL), (int16x4_t)131067));
  v65 = vpaddq_s32(vmull_s16(*(int16x4_t *)v61.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v61, v61, 8uLL), (int16x4_t)131067));
  v66 = vpaddq_s32(vmull_s16(*(int16x4_t *)v62.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v62, v62, 8uLL), (int16x4_t)131067));
  v67 = vzip1q_s32(v63, v65);
  v68 = vzip2q_s32(v63, v65);
  v69 = vzip1q_s32(v64, v66);
  v70 = vaddq_s32(vaddq_s32(vzip1q_s32(v67, v69), vzip2q_s32(v67, v69)), vzip1q_s32(v68, vzip2q_s32(v64, v66)));
  v71.i64[0] = 0x1000000010;
  v71.i64[1] = 0x1000000010;
  v72.i64[0] = 0x400000004;
  v72.i64[1] = 0x400000004;
  v73 = vshlq_s32(vaddq_s32(v70, v71), v72);
  v74 = vzip1q_s8(v20, (int8x16_t)0);
  v75 = vextq_s8(v74, (int8x16_t)0, 2uLL);
  v76 = vextq_s8(v74, (int8x16_t)0, 4uLL);
  v77 = vzip1q_s8(vextq_s8(v20, (int8x16_t)v31, 3uLL), (int8x16_t)0);
  v78 = vpaddq_s32(vmull_s16(*(int16x4_t *)v74.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v74, v74, 8uLL), (int16x4_t)131067));
  v79 = vpaddq_s32(vmull_s16(*(int16x4_t *)v75.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v75, v75, 8uLL), (int16x4_t)131067));
  v80 = vpaddq_s32(vmull_s16(*(int16x4_t *)v76.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v76, v76, 8uLL), (int16x4_t)131067));
  v81 = vpaddq_s32(vmull_s16(*(int16x4_t *)v77.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v77, v77, 8uLL), (int16x4_t)131067));
  v82 = vzip1q_s32(v78, v80);
  v83 = vzip2q_s32(v78, v80);
  v84 = vzip1q_s32(v79, v81);
  v85 = vaddq_s32(vaddq_s32(vzip1q_s32(v82, v84), vzip2q_s32(v82, v84)), vzip1q_s32(v83, vzip2q_s32(v79, v81)));
  v86 = vshlq_s32(vaddq_s32(v85, v71), v72);
  v87 = vzip1q_s8(v23, (int8x16_t)0);
  v88 = vextq_s8(v87, (int8x16_t)0, 2uLL);
  v89 = vextq_s8(v87, (int8x16_t)0, 4uLL);
  v90 = vzip1q_s8(vextq_s8(v23, (int8x16_t)v31, 3uLL), (int8x16_t)0);
  v91 = vpaddq_s32(vmull_s16(*(int16x4_t *)v87.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v87, v87, 8uLL), (int16x4_t)131067));
  v92 = vpaddq_s32(vmull_s16(*(int16x4_t *)v88.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v88, v88, 8uLL), (int16x4_t)131067));
  v93 = vpaddq_s32(vmull_s16(*(int16x4_t *)v89.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v89, v89, 8uLL), (int16x4_t)131067));
  v94 = vpaddq_s32(vmull_s16(*(int16x4_t *)v90.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v90, v90, 8uLL), (int16x4_t)131067));
  v95 = vzip1q_s32(v91, v93);
  v96 = vzip2q_s32(v91, v93);
  v97 = vzip1q_s32(v92, v94);
  v98 = vaddq_s32(vaddq_s32(vzip1q_s32(v95, v97), vzip2q_s32(v95, v97)), vzip1q_s32(v96, vzip2q_s32(v92, v94)));
  v99 = vshlq_s32(vaddq_s32(v98, v71), v72);
  v100 = vzip1q_s8(v27, (int8x16_t)0);
  v101 = vextq_s8(v100, (int8x16_t)0, 2uLL);
  v102 = vextq_s8(v100, (int8x16_t)0, 4uLL);
  v103 = vzip1q_s8(vextq_s8(v27, (int8x16_t)v31, 3uLL), (int8x16_t)0);
  v104 = vpaddq_s32(vmull_s16(*(int16x4_t *)v100.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v100, v100, 8uLL), (int16x4_t)131067));
  v105 = vpaddq_s32(vmull_s16(*(int16x4_t *)v101.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v101, v101, 8uLL), (int16x4_t)131067));
  v106 = vpaddq_s32(vmull_s16(*(int16x4_t *)v102.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v102, v102, 8uLL), (int16x4_t)131067));
  v107 = vpaddq_s32(vmull_s16(*(int16x4_t *)v103.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v103, v103, 8uLL), (int16x4_t)131067));
  v108 = vzip1q_s32(v104, v106);
  v109 = vzip2q_s32(v104, v106);
  v110 = vzip1q_s32(v105, v107);
  v111 = vaddq_s32(vaddq_s32(vzip1q_s32(v108, v110), vzip2q_s32(v108, v110)), vzip1q_s32(v109, vzip2q_s32(v105, v107)));
  v112 = vshlq_s32(vaddq_s32(v111, v71), v72);
  v113 = vzip1q_s8(*v29, (int8x16_t)0);
  v114 = vextq_s8(v113, (int8x16_t)0, 2uLL);
  v115 = vextq_s8(v113, (int8x16_t)0, 4uLL);
  v116 = vzip1q_s8(vextq_s8(*v29, (int8x16_t)v31, 3uLL), (int8x16_t)0);
  v117 = vpaddq_s32(vmull_s16(*(int16x4_t *)v113.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v113, v113, 8uLL), (int16x4_t)131067));
  v118 = vpaddq_s32(vmull_s16(*(int16x4_t *)v114.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v114, v114, 8uLL), (int16x4_t)131067));
  v119 = vpaddq_s32(vmull_s16(*(int16x4_t *)v115.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v115, v115, 8uLL), (int16x4_t)131067));
  v120 = vpaddq_s32(vmull_s16(*(int16x4_t *)v116.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v116, v116, 8uLL), (int16x4_t)131067));
  v121 = vzip1q_s32(v117, v119);
  v122 = vzip2q_s32(v117, v119);
  v123 = vzip1q_s32(v118, v120);
  v124 = vaddq_s32(vaddq_s32(vzip1q_s32(v121, v123), vzip2q_s32(v121, v123)), vzip1q_s32(v122, vzip2q_s32(v118, v120)));
  v125 = vzip1q_s8(v33, (int8x16_t)0);
  v126 = vextq_s8(v125, (int8x16_t)0, 2uLL);
  v127 = vextq_s8(v125, (int8x16_t)0, 4uLL);
  v128 = vzip1q_s8(vextq_s8(v33, (int8x16_t)v31, 3uLL), (int8x16_t)0);
  v129 = vpaddq_s32(vmull_s16(*(int16x4_t *)v125.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v125, v125, 8uLL), (int16x4_t)131067));
  v130 = vpaddq_s32(vmull_s16(*(int16x4_t *)v126.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v126, v126, 8uLL), (int16x4_t)131067));
  v131 = vpaddq_s32(vmull_s16(*(int16x4_t *)v127.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v127, v127, 8uLL), (int16x4_t)131067));
  v132 = vpaddq_s32(vmull_s16(*(int16x4_t *)v128.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v128, v128, 8uLL), (int16x4_t)131067));
  v133 = vzip1q_s32(v129, v131);
  v134 = vzip1q_s32(v130, v132);
  v135 = vzip2q_s32(v130, v132);
  v136 = vzip1q_s32(v133, v134);
  v137 = vzip2q_s32(v133, v134);
  v138 = vzip1q_s32(vzip2q_s32(v129, v131), v135);
  v135.i64[0] = 0xFFFFFFFFLL;
  v135.i64[1] = 0xFFFFFFFFLL;
  v139 = (uint64x2_t)vdupq_n_s64(0xFFFFFFE0uLL);
  v140 = (uint32x2_t)vzip1_s32(*(int32x2_t *)v58.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v58, (int8x16_t)v58, 8uLL));
  v141 = (uint32x2_t)vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v58, v139));
  *(int32x2_t *)v108.i8 = vzip1_s32(*(int32x2_t *)v70.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v70, (int8x16_t)v70, 8uLL));
  v142 = (uint32x2_t)vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v70, v139));
  v143 = (uint32x2_t)vzip1_s32(*(int32x2_t *)v85.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v85, (int8x16_t)v85, 8uLL));
  v144 = (uint32x2_t)vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v85, v139));
  v145 = (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(v143, (uint32x2_t)0x400000004), (int8x16_t)v135), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(v144, (uint32x2_t)0x400000004), 0x20uLL));
  v85.i64[0] = 0x20000000200;
  v85.i64[1] = 0x20000000200;
  v146 = vaddq_s32((int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(*(uint32x2_t *)v108.i8, (uint32x2_t)0x1400000014), (int8x16_t)v135), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(v142, (uint32x2_t)0x1400000014), 0x20uLL)), v85);
  v147 = vaddq_s32(vaddq_s32(v146, vaddq_s32(vaddq_s32(vaddq_s32(vaddq_s32(vaddq_s32(v32, v31), v34), v98), (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32((uint32x2_t)vzip1_s32(*(int32x2_t *)v46.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v46, (int8x16_t)v46, 8uLL)), (uint32x2_t)0x400000004), (int8x16_t)v135), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32((uint32x2_t)vmovn_s64((int64x2_t)vshlq_u64(
                                                                                           (uint64x2_t)v46,
                                                                                           v139)),
                                                        (uint32x2_t)0x400000004),
                                           0x20uLL))),
               (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(v140, (uint32x2_t)0x1400000014), (int8x16_t)v135), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(v141, (uint32x2_t)0x1400000014), 0x20uLL)))), v145);
  v31.i64[0] = 0x900000009;
  v31.i64[1] = 0x900000009;
  v148 = vshlq_s32(v147, v31);
  v149 = (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(v140, (uint32x2_t)0x400000004), (int8x16_t)v135), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(v141, (uint32x2_t)0x400000004), 0x20uLL));
  v150 = (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(v143, (uint32x2_t)0x1400000014), (int8x16_t)v135), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(v144, (uint32x2_t)0x1400000014), 0x20uLL));
  v151 = (uint32x2_t)vzip1_s32(*(int32x2_t *)v98.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v98, (int8x16_t)v98, 8uLL));
  *(int32x2_t *)v98.i8 = vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v98, v139));
  v152 = vshlq_s32(vaddq_s32(vaddq_s32(vaddq_s32(v146, vaddq_s32(vaddq_s32(v46, v111), v149)), v150), (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(v151, (uint32x2_t)0x400000004), (int8x16_t)v135), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(*(uint32x2_t *)v98.i8, (uint32x2_t)0x400000004), 0x20uLL))), v31);
  v153 = (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(*(uint32x2_t *)v108.i8, (uint32x2_t)0x400000004), (int8x16_t)v135), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(v142, (uint32x2_t)0x400000004), 0x20uLL));
  v154 = (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(v151, (uint32x2_t)0x1400000014), (int8x16_t)v135), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(*(uint32x2_t *)v98.i8, (uint32x2_t)0x1400000014), 0x20uLL));
  *(int32x2_t *)v108.i8 = vzip1_s32(*(int32x2_t *)v111.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v111, (int8x16_t)v111, 8uLL));
  *(int32x2_t *)v111.i8 = vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v111, v139));
  v155 = vshlq_s32(vaddq_s32(vaddq_s32(vaddq_s32(vaddq_s32(v150, vaddq_s32(vaddq_s32(v58, v124), v153)), v154), (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(*(uint32x2_t *)v108.i8, (uint32x2_t)0x400000004), (int8x16_t)v135), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(*(uint32x2_t *)v111.i8, (uint32x2_t)0x400000004), 0x20uLL))), v85), v31);
  *a1 = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v148), v148))), vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v73), v73)))).u64[0];
  *(_QWORD *)((char *)a1 + a2) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v152), v152))), vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v86), v86)))).u64[0];
  v156 = 2 * a2;
  v157 = vshlq_s32(vaddq_s32(vaddq_s32(vaddq_s32(vaddq_s32(vaddq_s32(v145, vaddq_s32(vaddq_s32(vaddq_s32(v70, v137), v136), v138)), v154), (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(*(uint32x2_t *)v108.i8, (uint32x2_t)0x1400000014), (int8x16_t)v135), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(*(uint32x2_t *)v111.i8, (uint32x2_t)0x1400000014), 0x20uLL))), (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32((uint32x2_t)vzip1_s32(*(int32x2_t *)v124.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v124, (int8x16_t)v124,
                                                                                  8uLL)),
                                           (uint32x2_t)0x400000004),
                              (int8x16_t)v135),
                            (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32((uint32x2_t)vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v124, v139)), (uint32x2_t)0x400000004), 0x20uLL))), v85), v31);
  *(_QWORD *)((char *)a1 + v156) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v155), v155))), vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v99), v99)))).u64[0];
  *(_QWORD *)&result = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v157), v157))), vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v112), v112)))).u64[0];
  *(double *)((char *)a1 + v156 + a2) = result;
  return result;
}

int16x8_t sub_216084934(_QWORD *a1, unsigned int a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int8x16_t v5;
  int8x16_t v6;
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;
  int8x16_t v10;
  int8x16_t v11;
  int8x16_t v12;
  int8x16_t v13;
  int8x16_t v14;
  int8x16_t v15;
  int8x16_t v16;
  int8x16_t v17;
  int8x16_t v18;
  int8x16_t v19;
  int8x16_t v20;
  int8x16_t v21;
  int8x16_t v22;
  int8x16_t v23;
  int8x16_t v24;
  int8x16_t v25;
  int8x16_t v26;
  int8x16_t v27;
  int8x16_t v28;
  int8x16_t v29;
  int8x16_t v30;
  int8x16_t v31;
  int8x16_t v32;
  int8x16_t v33;
  int8x16_t v34;
  int8x16_t v35;
  int8x16_t v36;
  int8x16_t v37;
  int8x16_t v38;
  int8x16_t v39;
  int8x16_t v40;
  int16x8_t v41;
  int16x8_t v42;
  int16x8_t v43;
  int16x8_t v44;
  int16x8_t v45;
  int16x8_t v46;
  int16x8_t v47;
  int16x8_t v48;
  int16x8_t v49;
  int16x8_t v50;
  int16x8_t v51;
  uint16x8_t v52;
  int16x8_t v53;
  int16x8_t v54;
  int16x8_t v55;
  int16x8_t v56;
  int16x8_t result;
  uint64_t v58;

  v5 = *(int8x16_t *)(a3 - 2);
  v4 = a3 - 2;
  v6 = *(int8x16_t *)(v4 + a4);
  v7 = *(int8x16_t *)(v4 + 2 * a4);
  v8 = *(int8x16_t *)(v4 + 3 * a4);
  v9 = vzip1q_s8(v5, (int8x16_t)0);
  v10 = vdupq_laneq_s8(v5, 8);
  v11 = vzip1q_s8(v6, (int8x16_t)0);
  v12 = vdupq_laneq_s8(v6, 8);
  v13 = vzip1q_s8(v7, (int8x16_t)0);
  v14 = vdupq_laneq_s8(v7, 8);
  v15 = vzip1q_s8(v8, (int8x16_t)0);
  v16 = vdupq_laneq_s8(v8, 8);
  v17 = vzip1q_s8(v9, (int8x16_t)0);
  v18 = vzip2q_s8(v9, (int8x16_t)0);
  v10.i8[1] = 0;
  v19 = vzip1q_s8(v11, (int8x16_t)0);
  v20 = vzip2q_s8(v11, (int8x16_t)0);
  v12.i8[1] = 0;
  v21 = vzip1q_s8(v13, (int8x16_t)0);
  v22 = vzip2q_s8(v13, (int8x16_t)0);
  v14.i8[1] = 0;
  v23 = vzip1q_s8(v15, (int8x16_t)0);
  v24 = vzip2q_s8(v15, (int8x16_t)0);
  v16.i8[1] = 0;
  v25 = vzip1q_s8(v17, v21);
  v26 = vzip2q_s8(v17, v21);
  v27 = vzip1q_s8(v18, v22);
  v28 = vzip2q_s8(v18, v22);
  v29 = vzip1q_s8(v10, v14);
  v30 = vzip1q_s8(v19, v23);
  v31 = vzip2q_s8(v19, v23);
  v32 = vzip1q_s8(v20, v24);
  v33 = vzip2q_s8(v20, v24);
  v34 = vzip1q_s8(v26, v31);
  v35 = vzip2q_s8(v26, v31);
  v36 = vzip1q_s8(v27, v32);
  v37 = vzip2q_s8(v27, v32);
  v38 = vzip1q_s8(v28, v33);
  v39 = vzip2q_s8(v28, v33);
  v40 = vzip1q_s8(v29, vzip1q_s8(v12, v16));
  v41 = (int16x8_t)vzip1q_s8(vzip1q_s8(v25, v30), (int8x16_t)0);
  v42 = (int16x8_t)vzip1q_s8(vzip2q_s8(v25, v30), (int8x16_t)0);
  v43 = (int16x8_t)vzip1q_s8(v34, (int8x16_t)0);
  v44 = (int16x8_t)vzip1q_s8(v35, (int8x16_t)0);
  v45 = (int16x8_t)vzip1q_s8(v36, (int8x16_t)0);
  v46 = (int16x8_t)vzip1q_s8(v37, (int8x16_t)0);
  v47 = (int16x8_t)vzip1q_s8(v38, (int8x16_t)0);
  v48 = (int16x8_t)vzip1q_s8(v39, (int8x16_t)0);
  v49.i64[0] = 0x4000400040004;
  v49.i64[1] = 0x4000400040004;
  v50 = vmulq_s16(v45, v49);
  v51.i64[0] = 0x10001000100010;
  v51.i64[1] = 0x10001000100010;
  v52.i64[0] = 0x10001000100010;
  v52.i64[1] = 0x10001000100010;
  v53 = (int16x8_t)vmlal_u8(v52, (uint8x8_t)vmovn_s16(v44), (uint8x8_t)0x1414141414141414);
  *(int8x8_t *)v37.i8 = vmovn_s16(v45);
  *(int8x8_t *)v23.i8 = vmovn_s16(v46);
  v54 = vzip1q_s16((int16x8_t)vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)vmlaq_s16(vaddq_s16(v53, vaddq_s16(v41, v46)), v42, v49), (uint8x8_t)vmovn_s16(v43), (uint8x8_t)0x1414141414141414), v50), v49))), (uint16x8_t)v44), (int16x8_t)vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16(
                                                   (int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)v43, *(uint8x8_t *)v37.i8, (uint8x8_t)0x1414141414141414), v48), *(uint8x8_t *)v23.i8, (uint8x8_t)0x1414141414141414), vaddq_s16(v47, v44), v49), v51), v49))), (uint16x8_t)v46));
  v55 = vzip1q_s16((int16x8_t)vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vmlaq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16(v53, vaddq_s16(v42, v47)), *(uint8x8_t *)v37.i8, (uint8x8_t)0x1414141414141414), vaddq_s16(v46, v43), v49), v49))), (uint16x8_t)v45), (int16x8_t)vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8(vmlal_u8(
                                                                  (uint16x8_t)vaddq_s16(vaddq_s16(v50, v44), (int16x8_t)vzip1q_s8(v40, (int8x16_t)0)), *(uint8x8_t *)v23.i8, (uint8x8_t)0x1414141414141414), (uint8x8_t)vmovn_s16(v47), (uint8x8_t)0x1414141414141414), v48, v49), v51), v49))), (uint16x8_t)v47));
  v56 = vzip1q_s16(v54, v55);
  result = vzip2q_s16(v54, v55);
  *a1 = v56.i64[0];
  *(_QWORD *)((char *)a1 + a2) = v56.i64[1];
  v58 = 2 * a2;
  *(_QWORD *)((char *)a1 + v58) = result.i64[0];
  *(_QWORD *)((char *)a1 + v58 + a2) = result.i64[1];
  return result;
}

double sub_216084B08(_QWORD *a1, unsigned int a2, uint64_t a3, int a4, int8x16_t a5, double a6, double a7, double a8, double a9, int8x16_t a10, int8x16_t a11, int8x16_t a12)
{
  int8x16_t v12;
  int8x16_t v13;
  uint64_t v14;
  int8x16_t v15;
  int8x16_t v16;
  int8x16_t v17;
  int8x16_t v18;
  int16x8_t v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int16x8_t v33;
  uint16x8_t v34;
  uint16x8_t v35;
  int16x8_t v36;
  uint16x8_t v37;
  uint16x8_t v38;
  int8x16_t v39;
  int8x16_t v40;
  int8x16_t v41;
  int8x16_t v42;
  int8x16_t v43;
  int8x16_t v44;
  int8x16_t v45;
  int8x16_t v46;
  int8x16_t v47;
  int8x16_t v48;
  int8x16_t v49;
  int8x16_t v50;
  int8x16_t v51;
  int8x16_t v52;
  int8x16_t v53;
  int8x16_t v54;
  int8x16_t v55;
  int8x16_t v56;
  int8x16_t v57;
  int8x16_t v58;
  int8x16_t v59;
  int8x16_t v60;
  int8x16_t v61;
  int8x16_t v62;
  int8x16_t v63;
  int8x16_t v64;
  int8x16_t v65;
  int8x16_t v66;
  int8x16_t v67;
  int8x16_t v68;
  int8x16_t v69;
  int8x16_t v70;
  int16x8_t v71;
  int16x8_t v72;
  int16x8_t v73;
  int16x8_t v74;
  int16x8_t v75;
  int16x8_t v76;
  int16x8_t v77;
  int16x8_t v78;
  int16x8_t v79;
  int16x8_t v80;
  int16x8_t v81;
  int16x8_t v82;
  int16x8_t v83;
  int16x8_t v84;
  int16x8_t v85;
  int16x8_t v86;
  int8x16_t v87;
  int8x16_t v88;
  double result;
  uint64_t v90;

  v15 = *(int8x16_t *)(a3 - 2);
  v14 = a3 - 2;
  v16 = *(int8x16_t *)(v14 + a4);
  v17 = *(int8x16_t *)(v14 + 2 * a4);
  v18 = *(int8x16_t *)(v14 + 3 * a4);
  a10.i32[0] = *(_DWORD *)(v14 + 3 - 2 * a4);
  a11.i32[0] = *(_DWORD *)(v14 + 3 - a4);
  a12.i32[0] = *(_DWORD *)(v14 + 3 + 4 * a4);
  v12.i32[0] = *(_DWORD *)(v14 + 3 + 5 * a4);
  v13.i32[0] = *(_DWORD *)(v14 + 3 + 6 * a4);
  v19 = (int16x8_t)vzip1q_s8(a11, (int8x16_t)0);
  v20 = (int16x8_t)vzip1q_s8(vextq_s8(v15, a5, 3uLL), (int8x16_t)0);
  v21 = (int16x8_t)vzip1q_s8(vextq_s8(v16, a5, 3uLL), (int8x16_t)0);
  v22 = (int16x8_t)vzip1q_s8(vextq_s8(v17, a5, 3uLL), (int8x16_t)0);
  v23 = (int16x8_t)vzip1q_s8(vextq_s8(v18, a5, 3uLL), (int8x16_t)0);
  v24 = (int16x8_t)vzip1q_s8(a12, (int8x16_t)0);
  v25 = (int16x8_t)vzip1q_s8(v12, (int8x16_t)0);
  v26.i64[0] = 0x4000400040004;
  v26.i64[1] = 0x4000400040004;
  v27.i64[0] = 0x14001400140014;
  v27.i64[1] = 0x14001400140014;
  v28 = vmulq_s16(v22, v26);
  v29.i64[0] = 0x10001000100010;
  v29.i64[1] = 0x10001000100010;
  v30.i64[0] = 0x10001000100010;
  v30.i64[1] = 0x10001000100010;
  v31 = vmlaq_s16(v30, v21, v27);
  v32 = vmulq_s16(v22, v27);
  v33 = vaddq_s16(v31, v32);
  v34 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vmlaq_s16(vaddq_s16(vaddq_s16(vmlaq_s16(v31, v20, v27), vaddq_s16(v28, v23)), (int16x8_t)vzip1q_s8(a10, (int8x16_t)0)), v19, v26), v26)));
  v35 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16(v33, vaddq_s16(v23, v20), v26), vaddq_s16(v19, v24)), v26)));
  v36 = vmulq_s16(v23, v27);
  v37 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v32, v20), v36), v25), vaddq_s16(v24, v21), v26), v29), v26)));
  v38 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16(vaddq_s16(v28, v21), v36), (uint8x8_t)vmovn_s16(v24), (uint8x8_t)0x1414141414141414), v25, v26), vaddq_s16((int16x8_t)vzip1q_s8(v13, (int8x16_t)0), v29)), v26)));
  v39 = vzip1q_s8(v15, (int8x16_t)0);
  v40 = vdupq_laneq_s8(v15, 8);
  v41 = vzip1q_s8(v16, (int8x16_t)0);
  v42 = vdupq_laneq_s8(v16, 8);
  v43 = vzip1q_s8(v17, (int8x16_t)0);
  v44 = vdupq_laneq_s8(v17, 8);
  v45 = vzip1q_s8(v18, (int8x16_t)0);
  v46 = vdupq_laneq_s8(v18, 8);
  v47 = vzip1q_s8(v39, (int8x16_t)0);
  v40.i8[1] = 0;
  v48 = vzip2q_s8(v39, (int8x16_t)0);
  v49 = vzip1q_s8(v41, (int8x16_t)0);
  v50 = vzip2q_s8(v41, (int8x16_t)0);
  v42.i8[1] = 0;
  v51 = vzip1q_s8(v43, (int8x16_t)0);
  v52 = vzip2q_s8(v43, (int8x16_t)0);
  v44.i8[1] = 0;
  v53 = vzip1q_s8(v45, (int8x16_t)0);
  v46.i8[1] = 0;
  v54 = vzip2q_s8(v45, (int8x16_t)0);
  v55 = vzip1q_s8(v47, v51);
  v56 = vzip2q_s8(v47, v51);
  v57 = vzip1q_s8(v48, v52);
  v58 = vzip2q_s8(v48, v52);
  v59 = vzip1q_s8(v40, v44);
  v60 = vzip1q_s8(v49, v53);
  v61 = vzip2q_s8(v49, v53);
  v62 = vzip1q_s8(v50, v54);
  v63 = vzip2q_s8(v50, v54);
  v64 = vzip1q_s8(v56, v61);
  v65 = vzip2q_s8(v56, v61);
  v66 = vzip1q_s8(v57, v62);
  v67 = vzip2q_s8(v57, v62);
  v68 = vzip1q_s8(v58, v63);
  v69 = vzip2q_s8(v58, v63);
  v70 = vzip1q_s8(v59, vzip1q_s8(v42, v46));
  v71 = (int16x8_t)vzip1q_s8(vzip1q_s8(v55, v60), (int8x16_t)0);
  v72 = (int16x8_t)vzip1q_s8(vzip2q_s8(v55, v60), (int8x16_t)0);
  v73 = (int16x8_t)vzip1q_s8(v64, (int8x16_t)0);
  v74 = (int16x8_t)vzip1q_s8(v65, (int8x16_t)0);
  v75 = (int16x8_t)vzip1q_s8(v66, (int8x16_t)0);
  v76 = (int16x8_t)vzip1q_s8(v67, (int8x16_t)0);
  v77 = (int16x8_t)vzip1q_s8(v68, (int8x16_t)0);
  v78 = (int16x8_t)vzip1q_s8(v69, (int8x16_t)0);
  v79 = vmulq_s16(v75, v26);
  v55.i64[0] = 0x10001000100010;
  v55.i64[1] = 0x10001000100010;
  v80 = (int16x8_t)vmlal_u8((uint16x8_t)v55, (uint8x8_t)vmovn_s16(v74), (uint8x8_t)0x1414141414141414);
  v81 = vshlq_s16(vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)vmlaq_s16(vaddq_s16(v80, vaddq_s16(v71, v76)), v72, v26), (uint8x8_t)vmovn_s16(v73), (uint8x8_t)0x1414141414141414), v79), v26);
  *(int8x8_t *)v81.i8 = vqmovun_s16(v81);
  *(int8x8_t *)v75.i8 = vmovn_s16(v75);
  v82 = vshlq_s16(vmlaq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16(v80, vaddq_s16(v72, v77)), *(uint8x8_t *)v75.i8, (uint8x8_t)0x1414141414141414), vaddq_s16(v76, v73), v26), v26);
  *(int8x8_t *)v82.i8 = vqmovun_s16(v82);
  *(int8x8_t *)v76.i8 = vmovn_s16(v76);
  v83 = vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)v73, *(uint8x8_t *)v75.i8, (uint8x8_t)0x1414141414141414), v78), *(uint8x8_t *)v76.i8, (uint8x8_t)0x1414141414141414), vaddq_s16(v77, v74), v26), v29), v26);
  *(int8x8_t *)v83.i8 = vqmovun_s16(v83);
  v84 = vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8(vmlal_u8((uint16x8_t)vaddq_s16(vaddq_s16(v79, v74), (int16x8_t)vzip1q_s8(v70, (int8x16_t)0)), *(uint8x8_t *)v76.i8, (uint8x8_t)0x1414141414141414), (uint8x8_t)vmovn_s16(v77), (uint8x8_t)0x1414141414141414), v78, v26), v29), v26);
  *(int8x8_t *)v84.i8 = vqmovun_s16(v84);
  v85 = vzip1q_s16((int16x8_t)vzip1q_s8((int8x16_t)v81, (int8x16_t)0), (int16x8_t)vzip1q_s8((int8x16_t)v83, (int8x16_t)0));
  v86 = vzip1q_s16((int16x8_t)vzip1q_s8((int8x16_t)v82, (int8x16_t)0), (int16x8_t)vzip1q_s8((int8x16_t)v84, (int8x16_t)0));
  v87 = (int8x16_t)vzip1q_s16(v85, v86);
  v88 = (int8x16_t)vzip2q_s16(v85, v86);
  *(_QWORD *)&result = vrhaddq_u16((uint16x8_t)vextq_s8(v88, (int8x16_t)0, 8uLL), v38).u64[0];
  *a1 = vrhaddq_u16((uint16x8_t)v87, v34).u64[0];
  *(_QWORD *)((char *)a1 + a2) = vrhaddq_u16((uint16x8_t)vextq_s8(v87, (int8x16_t)0, 8uLL), v35).u64[0];
  v90 = 2 * a2;
  *(_QWORD *)((char *)a1 + v90) = vrhaddq_u16((uint16x8_t)v88, v37).u64[0];
  *(double *)((char *)a1 + v90 + a2) = result;
  return result;
}

double sub_216084DEC(double *a1, unsigned int a2, uint64_t a3, int a4, int64x2_t a5, int64x2_t a6, int64x2_t a7, int64x2_t a8, int64x2_t a9, int64x2_t a10, int64x2_t a11, int64x2_t a12)
{
  int64x2_t v12;
  int8x16_t v13;
  int8x16_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int8x16_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int8x16_t v24;
  int8x16_t v25;
  int8x16_t v26;
  int8x16_t v27;
  int8x16_t v28;
  int8x16_t v29;
  int8x16_t v30;
  int8x16_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int16x8_t v39;
  int16x8_t v40;
  int16x8_t v41;
  int16x8_t v42;
  int16x8_t v43;
  int16x8_t v44;
  int16x8_t v45;
  __int16 v46;
  int16x8_t v47;
  __int16 v48;
  int16x8_t v49;
  int16x8_t v50;
  int16x8_t v51;
  int16x8_t v52;
  int16x8_t v53;
  int16x8_t v54;
  int16x8_t v55;
  int16x8_t v56;
  int8x16_t v57;
  int8x16_t v58;
  int8x16_t v59;
  int32x4_t v60;
  int32x4_t v61;
  int32x4_t v62;
  int32x4_t v63;
  int32x4_t v64;
  int32x4_t v65;
  int32x4_t v66;
  int32x4_t v67;
  int32x4_t v68;
  int32x4_t v69;
  int8x16_t v70;
  int8x16_t v71;
  int8x16_t v72;
  int32x4_t v73;
  int32x4_t v74;
  int32x4_t v75;
  int32x4_t v76;
  int32x4_t v77;
  int32x4_t v78;
  int32x4_t v79;
  int32x4_t v80;
  int8x16_t v81;
  int8x16_t v82;
  int8x16_t v83;
  int32x4_t v84;
  int32x4_t v85;
  int32x4_t v86;
  int32x4_t v87;
  int32x4_t v88;
  int32x4_t v89;
  int32x4_t v90;
  int32x4_t v91;
  int8x16_t v92;
  int8x16_t v93;
  int8x16_t v94;
  int32x4_t v95;
  int32x4_t v96;
  int32x4_t v97;
  int32x4_t v98;
  int32x4_t v99;
  int32x4_t v100;
  int32x4_t v101;
  int32x4_t v102;
  double result;
  uint64_t v104;

  v15 = a3 - 2 * a4;
  v16 = a3 - a4;
  v17 = a3 + a4;
  a5.i32[0] = *(_DWORD *)(v15 + 2);
  a6.i32[0] = *(_DWORD *)(v16 + 2);
  v18 = (int8x16_t)vshlq_n_s64(a6, 0x20uLL);
  v19 = a3 + 2 * a4;
  a7.i32[0] = *(_DWORD *)(a3 + 2);
  a8.i32[0] = *(_DWORD *)(v17 + 2);
  a9.i32[0] = *(_DWORD *)(v19 + 2);
  v20 = a3 + 3 * a4;
  a10.i32[0] = *(_DWORD *)(v20 + 2);
  v21 = a3 + 4 * a4;
  a11.i32[0] = *(_DWORD *)(v21 + 2);
  v22 = a3 + 5 * a4;
  a12.i32[0] = *(_DWORD *)(v22 + 2);
  v23 = a3 + 6 * a4;
  v12.i32[0] = *(_DWORD *)(v23 + 2);
  v13.i32[0] = *(_DWORD *)(v15 - 2);
  v24 = vorrq_s8((int8x16_t)vshlq_n_s64(a5, 0x20uLL), v13);
  v13.i32[0] = *(_DWORD *)(v16 - 2);
  v25 = vorrq_s8(v18, v13);
  v18.i32[0] = *(_DWORD *)(a3 - 2);
  v14.i32[0] = *(_DWORD *)(v17 - 2);
  v26 = vorrq_s8((int8x16_t)vshlq_n_s64(a7, 0x20uLL), v18);
  v27 = vorrq_s8((int8x16_t)vshlq_n_s64(a8, 0x20uLL), v14);
  v18.i32[0] = *(_DWORD *)(v19 - 2);
  v28 = vorrq_s8((int8x16_t)vshlq_n_s64(a9, 0x20uLL), v18);
  v18.i32[0] = *(_DWORD *)(v20 - 2);
  v29 = vorrq_s8((int8x16_t)vshlq_n_s64(a10, 0x20uLL), v18);
  v18.i32[0] = *(_DWORD *)(v21 - 2);
  v30 = vorrq_s8((int8x16_t)vshlq_n_s64(a11, 0x20uLL), v18);
  v18.i32[0] = *(_DWORD *)(v22 - 2);
  v31 = vorrq_s8((int8x16_t)vshlq_n_s64(a12, 0x20uLL), v18);
  v18.i32[0] = *(_DWORD *)(v23 - 2);
  v32 = (int16x8_t)vzip1q_s8(v25, (int8x16_t)0);
  v33 = (int16x8_t)vzip1q_s8(v26, (int8x16_t)0);
  v34 = (int16x8_t)vzip1q_s8(v27, (int8x16_t)0);
  v35 = (int16x8_t)vzip1q_s8(v28, (int8x16_t)0);
  v36 = (int16x8_t)vzip1q_s8(v29, (int8x16_t)0);
  v37 = (int16x8_t)vzip1q_s8(v30, (int8x16_t)0);
  v38 = (int16x8_t)vzip1q_s8(v31, (int8x16_t)0);
  v39 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v12, 0x20uLL), v18), (int8x16_t)0);
  v40.i64[0] = 0x4000400040004;
  v40.i64[1] = 0x4000400040004;
  v41.i64[0] = 0x14001400140014;
  v41.i64[1] = 0x14001400140014;
  v42 = vmulq_s16(v34, v41);
  v43 = vmulq_s16(v35, v40);
  v44 = vaddq_s16(vmlaq_s16(vmlaq_s16((int16x8_t)vzip1q_s8(v24, (int8x16_t)0), v32, v40), v33, v41), vaddq_s16(vaddq_s16(v42, v43), v36));
  LOWORD(v16) = *(unsigned __int8 *)(v16 + 6);
  v45.i64[0] = 0x10001000100010;
  v45.i64[1] = 0x10001000100010;
  v46 = *(unsigned __int8 *)(a3 + 6);
  LOWORD(v17) = *(unsigned __int8 *)(v17 + 6);
  v47 = vshlq_s16(vaddq_s16(v44, v45), v40);
  *(int8x8_t *)v47.i8 = vqmovun_s16(v47);
  LOWORD(v20) = *(unsigned __int8 *)(v20 + 6);
  LOWORD(v21) = *(unsigned __int8 *)(v21 + 6);
  LOWORD(v22) = *(unsigned __int8 *)(v22 + 6);
  v48 = 5 * *(unsigned __int8 *)(v19 + 6);
  LOWORD(v19) = v20 + *(unsigned __int8 *)(v15 + 6) - 5 * v16 + 20 * v46 + 20 * v17 - v48;
  LOWORD(v16) = v21 + v16 + 20 * v17 + 4 * v48 - 5 * (v20 + v46);
  LOWORD(v20) = 5 * v20;
  v49 = vmulq_s16(v35, v41);
  v50 = vmlaq_s16(vaddq_s16(vaddq_s16(v42, v32), vaddq_s16(v49, v37)), vaddq_s16(v36, v33), v40);
  v51 = vshlq_s16(vaddq_s16(v50, v45), v40);
  *(int8x8_t *)v51.i8 = vqmovun_s16(v51);
  v52 = vmulq_s16(v36, v41);
  v53 = vmlaq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v49, v33), v52), v38), vaddq_s16(v37, v34), v40);
  v54 = vshlq_s16(vaddq_s16(v53, v45), v40);
  *(int8x8_t *)v54.i8 = vqmovun_s16(v54);
  v55 = vaddq_s16(vmlaq_s16(vmlaq_s16(vaddq_s16(vaddq_s16(v43, v34), v52), v37, v41), v38, v40), v39);
  v56 = vshlq_s16(vaddq_s16(v55, v45), v40);
  *(int8x8_t *)v56.i8 = vqmovun_s16(v56);
  v57 = vextq_s8((int8x16_t)v44, (int8x16_t)0, 2uLL);
  v58 = vextq_s8((int8x16_t)v44, (int8x16_t)0, 4uLL);
  v59 = vextq_s8((int8x16_t)v44, (int8x16_t)0, 6uLL);
  v59.i16[5] = v19;
  v60 = vpaddq_s32(vmull_s16(*(int16x4_t *)v44.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v44, (int8x16_t)v44, 8uLL), (int16x4_t)131067));
  v61 = vpaddq_s32(vmull_s16(*(int16x4_t *)v57.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v57, v57, 8uLL), (int16x4_t)131067));
  v62 = vpaddq_s32(vmull_s16(*(int16x4_t *)v58.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v58, v58, 8uLL), (int16x4_t)131067));
  v63 = vpaddq_s32(vmull_s16(*(int16x4_t *)v59.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v59, v59, 8uLL), (int16x4_t)131067));
  v64 = vzip1q_s32(v60, v62);
  v65 = vzip2q_s32(v60, v62);
  v66 = vzip1q_s32(v61, v63);
  v67 = vzip1q_s32(v65, vzip2q_s32(v61, v63));
  v61.i64[0] = 0x20000000200;
  v61.i64[1] = 0x20000000200;
  v68 = vaddq_s32(vaddq_s32(vzip2q_s32(v64, v66), vzip1q_s32(v64, v66)), vaddq_s32(v67, v61));
  v67.i64[0] = 0x900000009;
  v67.i64[1] = 0x900000009;
  v69 = vshlq_s32(v68, v67);
  v70 = vextq_s8((int8x16_t)v50, (int8x16_t)0, 2uLL);
  v71 = vextq_s8((int8x16_t)v50, (int8x16_t)0, 4uLL);
  v72 = vextq_s8((int8x16_t)v50, (int8x16_t)0, 6uLL);
  v72.i16[5] = v16;
  v73 = vpaddq_s32(vmull_s16(*(int16x4_t *)v50.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v50, (int8x16_t)v50, 8uLL), (int16x4_t)131067));
  v74 = vpaddq_s32(vmull_s16(*(int16x4_t *)v70.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v70, v70, 8uLL), (int16x4_t)131067));
  v75 = vpaddq_s32(vmull_s16(*(int16x4_t *)v71.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v71, v71, 8uLL), (int16x4_t)131067));
  v76 = vpaddq_s32(vmull_s16(*(int16x4_t *)v72.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v72, v72, 8uLL), (int16x4_t)131067));
  v77 = vzip1q_s32(v73, v75);
  v78 = vzip2q_s32(v73, v75);
  v79 = vzip1q_s32(v74, v76);
  v80 = vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v77, v79), vzip1q_s32(v77, v79)), vaddq_s32(vzip1q_s32(v78, vzip2q_s32(v74, v76)), v61)), v67);
  v81 = vextq_s8((int8x16_t)v53, (int8x16_t)0, 2uLL);
  v82 = vextq_s8((int8x16_t)v53, (int8x16_t)0, 4uLL);
  v83 = vextq_s8((int8x16_t)v53, (int8x16_t)0, 6uLL);
  v83.i16[5] = v22 + v46 + 4 * v48 + 4 * v20 - 5 * (v21 + v17);
  v84 = vpaddq_s32(vmull_s16(*(int16x4_t *)v53.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v53, (int8x16_t)v53, 8uLL), (int16x4_t)131067));
  v85 = vpaddq_s32(vmull_s16(*(int16x4_t *)v81.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v81, v81, 8uLL), (int16x4_t)131067));
  v86 = vpaddq_s32(vmull_s16(*(int16x4_t *)v82.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v82, v82, 8uLL), (int16x4_t)131067));
  v87 = vpaddq_s32(vmull_s16(*(int16x4_t *)v83.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v83, v83, 8uLL), (int16x4_t)131067));
  v88 = vzip1q_s32(v84, v86);
  v89 = vzip2q_s32(v84, v86);
  v90 = vzip1q_s32(v85, v87);
  v91 = vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v88, v90), vzip1q_s32(v88, v90)), vaddq_s32(vzip1q_s32(v89, vzip2q_s32(v85, v87)), v61)), v67);
  v92 = vextq_s8((int8x16_t)v55, (int8x16_t)0, 2uLL);
  v93 = vextq_s8((int8x16_t)v55, (int8x16_t)0, 4uLL);
  v94 = vextq_s8((int8x16_t)v55, (int8x16_t)0, 6uLL);
  v94.i16[5] = *(unsigned __int8 *)(v23 + 6) + v17 - v48 + 4 * v20 + 20 * v21 - 5 * v22;
  v95 = vpaddq_s32(vmull_s16(*(int16x4_t *)v55.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v55, (int8x16_t)v55, 8uLL), (int16x4_t)131067));
  v96 = vpaddq_s32(vmull_s16(*(int16x4_t *)v92.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v92, v92, 8uLL), (int16x4_t)131067));
  v97 = vpaddq_s32(vmull_s16(*(int16x4_t *)v93.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v93, v93, 8uLL), (int16x4_t)131067));
  v98 = vpaddq_s32(vmull_s16(*(int16x4_t *)v94.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v94, v94, 8uLL), (int16x4_t)131067));
  v99 = vzip1q_s32(v95, v97);
  v100 = vzip2q_s32(v95, v97);
  v101 = vzip1q_s32(v96, v98);
  v102 = vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v99, v101), vzip1q_s32(v99, v101)), vaddq_s32(vzip1q_s32(v100, vzip2q_s32(v96, v98)), v61)), v67);
  *(_QWORD *)&result = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v69), v69))), (uint16x8_t)vextq_s8(vqtbl1q_s8((int8x16_t)v47, (int8x16_t)xmmword_2160EF240), (int8x16_t)0, 6uLL)).u64[0];
  *a1 = result;
  *(_QWORD *)((char *)a1 + a2) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v80), v80))), (uint16x8_t)vextq_s8(vqtbl1q_s8((int8x16_t)v51, (int8x16_t)xmmword_2160EF240), (int8x16_t)0, 6uLL)).u64[0];
  v104 = 2 * a2;
  *(_QWORD *)((char *)a1 + v104) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v91), v91))), (uint16x8_t)vextq_s8(vqtbl1q_s8((int8x16_t)v54, (int8x16_t)xmmword_2160EF240), (int8x16_t)0, 6uLL)).u64[0];
  *(_QWORD *)((char *)a1 + v104 + a2) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v102), v102))), (uint16x8_t)vextq_s8(vqtbl1q_s8((int8x16_t)v56, (int8x16_t)xmmword_2160EF240), (int8x16_t)0, 6uLL)).u64[0];
  return result;
}

double sub_216085298(_QWORD *a1, unsigned int a2, uint64_t a3, int a4, double a5, double a6, double a7, double a8, double a9, double a10, int8x16_t a11, int8x16_t a12)
{
  int8x16_t v12;
  int8x16_t v13;
  uint64_t v14;
  int8x16_t v15;
  int8x16_t v16;
  int8x16_t v17;
  int8x16_t v18;
  int8x16_t v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int16x8_t v33;
  uint16x8_t v34;
  int16x8_t v35;
  uint16x8_t v36;
  int16x8_t v37;
  uint16x8_t v38;
  uint16x8_t v39;
  int8x16_t v40;
  int8x16_t v41;
  int8x16_t v42;
  int8x16_t v43;
  int8x16_t v44;
  int8x16_t v45;
  int8x16_t v46;
  int8x16_t v47;
  int8x16_t v48;
  int8x16_t v49;
  int8x16_t v50;
  int8x16_t v51;
  int8x16_t v52;
  int8x16_t v53;
  int8x16_t v54;
  int8x16_t v55;
  int8x16_t v56;
  int8x16_t v57;
  int8x16_t v58;
  int8x16_t v59;
  int8x16_t v60;
  int8x16_t v61;
  int8x16_t v62;
  int8x16_t v63;
  int8x16_t v64;
  int8x16_t v65;
  int8x16_t v66;
  int8x16_t v67;
  int8x16_t v68;
  int8x16_t v69;
  int8x16_t v70;
  int8x16_t v71;
  int16x8_t v72;
  int16x8_t v73;
  int16x8_t v74;
  int16x8_t v75;
  int16x8_t v76;
  int16x8_t v77;
  int16x8_t v78;
  int16x8_t v79;
  int16x8_t v80;
  int16x8_t v81;
  int16x8_t v82;
  int16x8_t v83;
  int16x8_t v84;
  int16x8_t v85;
  int16x8_t v86;
  int16x8_t v87;
  int8x16_t v88;
  int8x16_t v89;
  double result;
  uint64_t v91;

  v15 = *(int8x16_t *)(a3 - 2);
  v14 = a3 - 2;
  v16 = *(int8x16_t *)(v14 + a4);
  v17 = *(int8x16_t *)(v14 + 2 * a4);
  v18 = *(int8x16_t *)(v14 + 3 * a4);
  v19 = *(int8x16_t *)(v14 + 4 * a4);
  a11.i32[0] = *(_DWORD *)(v14 + 3 - 2 * a4);
  a12.i32[0] = *(_DWORD *)(v14 + 3 - a4);
  v12.i32[0] = *(_DWORD *)(v14 + 3 + 5 * a4);
  v13.i32[0] = *(_DWORD *)(v14 + 3 + 6 * a4);
  v20 = (int16x8_t)vzip1q_s8(a12, (int8x16_t)0);
  v21 = (int16x8_t)vzip1q_s8(vextq_s8(v15, v15, 3uLL), (int8x16_t)0);
  v22 = (int16x8_t)vzip1q_s8(vextq_s8(v16, v15, 3uLL), (int8x16_t)0);
  v23 = (int16x8_t)vzip1q_s8(vextq_s8(v17, v15, 3uLL), (int8x16_t)0);
  v24 = (int16x8_t)vzip1q_s8(vextq_s8(v18, v15, 3uLL), (int8x16_t)0);
  v25 = (int16x8_t)vzip1q_s8(vextq_s8(v19, v15, 3uLL), (int8x16_t)0);
  v26 = (int16x8_t)vzip1q_s8(v12, (int8x16_t)0);
  v27.i64[0] = 0x4000400040004;
  v27.i64[1] = 0x4000400040004;
  v28.i64[0] = 0x14001400140014;
  v28.i64[1] = 0x14001400140014;
  v29 = vmulq_s16(v23, v27);
  v30.i64[0] = 0x10001000100010;
  v30.i64[1] = 0x10001000100010;
  v31.i64[0] = 0x10001000100010;
  v31.i64[1] = 0x10001000100010;
  v32 = vmlaq_s16(v31, v22, v28);
  v33 = vaddq_s16(v32, v25);
  v34 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vmlaq_s16(vaddq_s16(vaddq_s16(vmlaq_s16(v32, v21, v28), vaddq_s16(v29, v24)), (int16x8_t)vzip1q_s8(a11, (int8x16_t)0)), v20, v27), v27)));
  v35 = vmulq_s16(v23, v28);
  v36 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(v33, v35), vaddq_s16(v24, v21), v27), v20), v27)));
  v37 = vmulq_s16(v24, v28);
  v38 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16(v35, v21), v37), vaddq_s16(v25, v22), v27), vaddq_s16(v26, v30)), v27)));
  v39 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16(vmlaq_s16(vaddq_s16(vaddq_s16(v29, v22), v37), v25, v28), v26, v27), vaddq_s16((int16x8_t)vzip1q_s8(v13, (int8x16_t)0), v30)), v27)));
  v40 = vzip1q_s8(v16, (int8x16_t)0);
  v41 = vdupq_laneq_s8(v16, 8);
  v42 = vzip1q_s8(v17, (int8x16_t)0);
  v43 = vdupq_laneq_s8(v17, 8);
  v44 = vzip1q_s8(v18, (int8x16_t)0);
  v45 = vdupq_laneq_s8(v18, 8);
  v46 = vzip1q_s8(v19, (int8x16_t)0);
  v47 = vdupq_laneq_s8(v19, 8);
  v48 = vzip1q_s8(v40, (int8x16_t)0);
  v41.i8[1] = 0;
  v49 = vzip2q_s8(v40, (int8x16_t)0);
  v50 = vzip1q_s8(v42, (int8x16_t)0);
  v51 = vzip2q_s8(v42, (int8x16_t)0);
  v43.i8[1] = 0;
  v52 = vzip1q_s8(v44, (int8x16_t)0);
  v53 = vzip2q_s8(v44, (int8x16_t)0);
  v45.i8[1] = 0;
  v54 = vzip1q_s8(v46, (int8x16_t)0);
  v47.i8[1] = 0;
  v55 = vzip2q_s8(v46, (int8x16_t)0);
  v56 = vzip1q_s8(v48, v52);
  v57 = vzip2q_s8(v48, v52);
  v58 = vzip1q_s8(v49, v53);
  v59 = vzip2q_s8(v49, v53);
  v60 = vzip1q_s8(v41, v45);
  v61 = vzip1q_s8(v50, v54);
  v62 = vzip2q_s8(v50, v54);
  v63 = vzip1q_s8(v51, v55);
  v64 = vzip2q_s8(v51, v55);
  v65 = vzip1q_s8(v57, v62);
  v66 = vzip2q_s8(v57, v62);
  v67 = vzip1q_s8(v58, v63);
  v68 = vzip2q_s8(v58, v63);
  v69 = vzip1q_s8(v59, v64);
  v70 = vzip2q_s8(v59, v64);
  v71 = vzip1q_s8(v60, vzip1q_s8(v43, v47));
  v72 = (int16x8_t)vzip1q_s8(vzip1q_s8(v56, v61), (int8x16_t)0);
  v73 = (int16x8_t)vzip1q_s8(vzip2q_s8(v56, v61), (int8x16_t)0);
  v74 = (int16x8_t)vzip1q_s8(v65, (int8x16_t)0);
  v75 = (int16x8_t)vzip1q_s8(v66, (int8x16_t)0);
  v76 = (int16x8_t)vzip1q_s8(v67, (int8x16_t)0);
  v77 = (int16x8_t)vzip1q_s8(v68, (int8x16_t)0);
  v78 = (int16x8_t)vzip1q_s8(v69, (int8x16_t)0);
  v79 = (int16x8_t)vzip1q_s8(v70, (int8x16_t)0);
  v80 = vmulq_s16(v76, v27);
  v56.i64[0] = 0x10001000100010;
  v56.i64[1] = 0x10001000100010;
  v81 = (int16x8_t)vmlal_u8((uint16x8_t)v56, (uint8x8_t)vmovn_s16(v75), (uint8x8_t)0x1414141414141414);
  v82 = vshlq_s16(vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)vmlaq_s16(vaddq_s16(v81, vaddq_s16(v72, v77)), v73, v27), (uint8x8_t)vmovn_s16(v74), (uint8x8_t)0x1414141414141414), v80), v27);
  *(int8x8_t *)v82.i8 = vqmovun_s16(v82);
  *(int8x8_t *)v76.i8 = vmovn_s16(v76);
  v83 = vshlq_s16(vmlaq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16(v81, vaddq_s16(v73, v78)), *(uint8x8_t *)v76.i8, (uint8x8_t)0x1414141414141414), vaddq_s16(v77, v74), v27), v27);
  *(int8x8_t *)v83.i8 = vqmovun_s16(v83);
  *(int8x8_t *)v77.i8 = vmovn_s16(v77);
  v84 = vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)v74, *(uint8x8_t *)v76.i8, (uint8x8_t)0x1414141414141414), v79), *(uint8x8_t *)v77.i8, (uint8x8_t)0x1414141414141414), vaddq_s16(v78, v75), v27), v30), v27);
  *(int8x8_t *)v84.i8 = vqmovun_s16(v84);
  v85 = vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8(vmlal_u8((uint16x8_t)vaddq_s16(vaddq_s16(v80, v75), (int16x8_t)vzip1q_s8(v71, (int8x16_t)0)), *(uint8x8_t *)v77.i8, (uint8x8_t)0x1414141414141414), (uint8x8_t)vmovn_s16(v78), (uint8x8_t)0x1414141414141414), v79, v27), v30), v27);
  *(int8x8_t *)v85.i8 = vqmovun_s16(v85);
  v86 = vzip1q_s16((int16x8_t)vzip1q_s8((int8x16_t)v82, (int8x16_t)0), (int16x8_t)vzip1q_s8((int8x16_t)v84, (int8x16_t)0));
  v87 = vzip1q_s16((int16x8_t)vzip1q_s8((int8x16_t)v83, (int8x16_t)0), (int16x8_t)vzip1q_s8((int8x16_t)v85, (int8x16_t)0));
  v88 = (int8x16_t)vzip1q_s16(v86, v87);
  v89 = (int8x16_t)vzip2q_s16(v86, v87);
  *(_QWORD *)&result = vrhaddq_u16((uint16x8_t)vextq_s8(v89, (int8x16_t)0, 8uLL), v39).u64[0];
  *a1 = vrhaddq_u16((uint16x8_t)v88, v34).u64[0];
  *(_QWORD *)((char *)a1 + a2) = vrhaddq_u16((uint16x8_t)vextq_s8(v88, (int8x16_t)0, 8uLL), v36).u64[0];
  v91 = 2 * a2;
  *(_QWORD *)((char *)a1 + v91) = vrhaddq_u16((uint16x8_t)v89, v38).u64[0];
  *(double *)((char *)a1 + v91 + a2) = result;
  return result;
}

int64x2_t sub_216085578(int64x2_t *a1, unsigned __int32 *a2, int a3, int8x16_t a4, int8x16_t a5, int8x16_t a6, int8x16_t a7)
{
  int64x2_t result;

  a4.i32[0] = *(unsigned __int32 *)((char *)a2 + a3);
  a5.i32[0] = *(unsigned __int32 *)((char *)a2 + 2 * a3);
  a6.i32[0] = *a2;
  a7.i32[0] = *(unsigned __int32 *)((char *)a2 + 3 * a3);
  result = vzip1q_s64((int64x2_t)vzip1q_s8(a6, (int8x16_t)0), (int64x2_t)vzip1q_s8(a4, (int8x16_t)0));
  *a1 = result;
  a1[1] = vzip1q_s64((int64x2_t)vzip1q_s8(a5, (int8x16_t)0), (int64x2_t)vzip1q_s8(a7, (int8x16_t)0));
  return result;
}

int64x2_t sub_2160855B4(int64x2_t *a1, unsigned int *a2, int a3, int8x16_t a4, int8x16_t a5, double a6, double a7, int8x16_t a8, int8x16_t a9, int8x16_t a10, int8x16_t a11)
{
  int8x16_t v11;
  int8x16_t v12;
  int16x8_t v13;
  int16x8_t v14;
  int16x8_t v15;
  int16x8_t v16;
  int16x8_t v17;
  int16x8_t v18;
  int16x8_t v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int16x8_t v24;
  uint16x8_t v25;
  int16x8_t v26;
  uint16x8_t v27;
  uint8x8_t v28;
  uint16x8_t v29;
  uint16x8_t v30;
  uint16x8_t v31;
  int64x2_t result;

  a4.i32[0] = *(unsigned int *)((char *)a2 - 2 * a3);
  a5.i32[0] = *(unsigned int *)((char *)a2 - a3);
  a8.i32[0] = *(unsigned int *)((char *)a2 + a3);
  a9.i32[0] = *(unsigned int *)((char *)a2 + 2 * a3);
  a10.i32[0] = *(unsigned int *)((char *)a2 + 3 * a3);
  a11.i32[0] = a2[a3];
  v11.i32[0] = *(unsigned int *)((char *)a2 + 5 * a3);
  v12.i32[0] = *(unsigned int *)((char *)a2 + 6 * a3);
  v13 = (int16x8_t)vzip1q_s8(a4, (int8x16_t)0);
  v14 = (int16x8_t)vzip1q_s8(a5, (int8x16_t)0);
  v15 = (int16x8_t)vzip1q_s8((int8x16_t)*a2, (int8x16_t)0);
  v16 = (int16x8_t)vzip1q_s8(a8, (int8x16_t)0);
  v17 = (int16x8_t)vzip1q_s8(a9, (int8x16_t)0);
  v18 = (int16x8_t)vzip1q_s8(a10, (int8x16_t)0);
  v19 = (int16x8_t)vzip1q_s8(a11, (int8x16_t)0);
  v20 = (int16x8_t)vzip1q_s8(v11, (int8x16_t)0);
  v21 = (int16x8_t)vzip1q_s8(v12, (int8x16_t)0);
  v22.i64[0] = 0x4000400040004;
  v22.i64[1] = 0x4000400040004;
  v23 = vmulq_s16(v17, v22);
  v24.i64[0] = 0x10001000100010;
  v24.i64[1] = 0x10001000100010;
  v25.i64[0] = 0x10001000100010;
  v25.i64[1] = 0x10001000100010;
  v26 = (int16x8_t)vmlal_u8(v25, (uint8x8_t)vmovn_s16(v16), (uint8x8_t)0x1414141414141414);
  v27 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)vmlaq_s16(vaddq_s16(v26, v13), v14, v22), (uint8x8_t)vmovn_s16(v15), (uint8x8_t)0x1414141414141414), vaddq_s16(v23, v18)), v22)));
  v28 = (uint8x8_t)vmovn_s16(v17);
  v29 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16(v26, v14), v28, (uint8x8_t)0x1414141414141414), v19), vaddq_s16(v18, v15), v22), v22)));
  *(int8x8_t *)v14.i8 = vmovn_s16(v18);
  v30 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vmlal_u8(vmlal_u8((uint16x8_t)v15, v28, (uint8x8_t)0x1414141414141414), *(uint8x8_t *)v14.i8, (uint8x8_t)0x1414141414141414), v20), vaddq_s16(v19, v16), v22), v24), v22)));
  v31 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8(vmlal_u8((uint16x8_t)vaddq_s16(v23, v16), *(uint8x8_t *)v14.i8, (uint8x8_t)0x1414141414141414), (uint8x8_t)vmovn_s16(v19), (uint8x8_t)0x1414141414141414), v20, v22), vaddq_s16(v21, v24)), v22)));
  result = vzip1q_s64((int64x2_t)vrhaddq_u16(v27, (uint16x8_t)v15), (int64x2_t)vrhaddq_u16(v29, (uint16x8_t)v16));
  *a1 = result;
  a1[1] = vzip1q_s64((int64x2_t)vrhaddq_u16(v30, (uint16x8_t)v17), (int64x2_t)vrhaddq_u16(v31, (uint16x8_t)v18));
  return result;
}

int64x2_t sub_216085708(int64x2_t *a1, unsigned int *a2, int a3, double a4, int8x16_t a5, int8x16_t a6, double a7, int8x16_t a8, int8x16_t a9, int8x16_t a10, int8x16_t a11)
{
  int8x16_t v11;
  int8x16_t v12;
  int16x8_t v13;
  int16x8_t v14;
  int16x8_t v15;
  int16x8_t v16;
  int16x8_t v17;
  int16x8_t v18;
  int16x8_t v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  uint16x8_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int64x2_t result;

  a5.i32[0] = *(unsigned int *)((char *)a2 - 2 * a3);
  a6.i32[0] = *(unsigned int *)((char *)a2 - a3);
  a8.i32[0] = *(unsigned int *)((char *)a2 + a3);
  a9.i32[0] = *(unsigned int *)((char *)a2 + 2 * a3);
  a10.i32[0] = *(unsigned int *)((char *)a2 + 3 * a3);
  a11.i32[0] = a2[a3];
  v11.i32[0] = *(unsigned int *)((char *)a2 + 5 * a3);
  v12.i32[0] = *(unsigned int *)((char *)a2 + 6 * a3);
  v13 = (int16x8_t)vzip1q_s8(a6, (int8x16_t)0);
  v14 = (int16x8_t)vzip1q_s8((int8x16_t)*a2, (int8x16_t)0);
  v15 = (int16x8_t)vzip1q_s8(a8, (int8x16_t)0);
  v16 = (int16x8_t)vzip1q_s8(a9, (int8x16_t)0);
  v17 = (int16x8_t)vzip1q_s8(a10, (int8x16_t)0);
  v18 = (int16x8_t)vzip1q_s8(a11, (int8x16_t)0);
  v19 = (int16x8_t)vzip1q_s8(v11, (int8x16_t)0);
  v20.i64[0] = 0x4000400040004;
  v20.i64[1] = 0x4000400040004;
  v21 = vmulq_s16(v16, v20);
  v22.i64[0] = 0x10001000100010;
  v22.i64[1] = 0x10001000100010;
  v23.i64[0] = 0x10001000100010;
  v23.i64[1] = 0x10001000100010;
  v24 = (int16x8_t)vmlal_u8(v23, (uint8x8_t)vmovn_s16(v15), (uint8x8_t)0x1414141414141414);
  v25 = vshlq_s16(vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)vmlaq_s16(vaddq_s16(v24, (int16x8_t)vzip1q_s8(a5, (int8x16_t)0)), v13, v20), (uint8x8_t)vmovn_s16(v14), (uint8x8_t)0x1414141414141414), vaddq_s16(v21, v17)), v20);
  *(int8x8_t *)v25.i8 = vqmovun_s16(v25);
  *(int8x8_t *)v16.i8 = vmovn_s16(v16);
  v26 = vshlq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16(v24, v13), *(uint8x8_t *)v16.i8, (uint8x8_t)0x1414141414141414), v18), vaddq_s16(v17, v14), v20), v20);
  *(int8x8_t *)v26.i8 = vqmovun_s16(v26);
  *(int8x8_t *)v17.i8 = vmovn_s16(v17);
  v27 = vshlq_s16(vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vmlal_u8(vmlal_u8((uint16x8_t)v14, *(uint8x8_t *)v16.i8, (uint8x8_t)0x1414141414141414), *(uint8x8_t *)v17.i8, (uint8x8_t)0x1414141414141414), v19), vaddq_s16(v18, v15), v20), v22), v20);
  *(int8x8_t *)v27.i8 = vqmovun_s16(v27);
  v28 = vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8(vmlal_u8((uint16x8_t)vaddq_s16(v21, v15), *(uint8x8_t *)v17.i8, (uint8x8_t)0x1414141414141414), (uint8x8_t)vmovn_s16(v18), (uint8x8_t)0x1414141414141414), v19, v20), vaddq_s16((int16x8_t)vzip1q_s8(v12, (int8x16_t)0), v22)), v20);
  *(int8x8_t *)v28.i8 = vqmovun_s16(v28);
  result = vzip1q_s64((int64x2_t)vzip1q_s8((int8x16_t)v27, (int8x16_t)0), (int64x2_t)vzip1q_s8((int8x16_t)v28, (int8x16_t)0));
  *a1 = vzip1q_s64((int64x2_t)vzip1q_s8((int8x16_t)v25, (int8x16_t)0), (int64x2_t)vzip1q_s8((int8x16_t)v26, (int8x16_t)0));
  a1[1] = result;
  return result;
}

int64x2_t sub_21608584C(int64x2_t *a1, unsigned int *a2, int a3, int8x16_t a4, double a5, int8x16_t a6, double a7, int8x16_t a8, int8x16_t a9, int8x16_t a10, int8x16_t a11)
{
  int8x16_t v11;
  int8x16_t v12;
  int16x8_t v13;
  int16x8_t v14;
  int16x8_t v15;
  int16x8_t v16;
  int16x8_t v17;
  int16x8_t v18;
  int16x8_t v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  uint16x8_t v24;
  int16x8_t v25;
  uint8x8_t v26;
  uint8x8_t v27;
  int64x2_t result;

  a4.i32[0] = *(unsigned int *)((char *)a2 - 2 * a3);
  a6.i32[0] = *(unsigned int *)((char *)a2 - a3);
  a8.i32[0] = *(unsigned int *)((char *)a2 + a3);
  a9.i32[0] = *(unsigned int *)((char *)a2 + 2 * a3);
  a10.i32[0] = *(unsigned int *)((char *)a2 + 3 * a3);
  a11.i32[0] = a2[a3];
  v11.i32[0] = *(unsigned int *)((char *)a2 + 5 * a3);
  v12.i32[0] = *(unsigned int *)((char *)a2 + 6 * a3);
  v13 = (int16x8_t)vzip1q_s8(a6, (int8x16_t)0);
  v14 = (int16x8_t)vzip1q_s8((int8x16_t)*a2, (int8x16_t)0);
  v15 = (int16x8_t)vzip1q_s8(a8, (int8x16_t)0);
  v16 = (int16x8_t)vzip1q_s8(a9, (int8x16_t)0);
  v17 = (int16x8_t)vzip1q_s8(a10, (int8x16_t)0);
  v18 = (int16x8_t)vzip1q_s8(a11, (int8x16_t)0);
  v19 = (int16x8_t)vzip1q_s8(v11, (int8x16_t)0);
  v20 = (int16x8_t)vzip1q_s8(v12, (int8x16_t)0);
  v21.i64[0] = 0x4000400040004;
  v21.i64[1] = 0x4000400040004;
  v22 = vmulq_s16(v16, v21);
  v23.i64[0] = 0x10001000100010;
  v23.i64[1] = 0x10001000100010;
  v24.i64[0] = 0x10001000100010;
  v24.i64[1] = 0x10001000100010;
  v25 = (int16x8_t)vmlal_u8(v24, (uint8x8_t)vmovn_s16(v15), (uint8x8_t)0x1414141414141414);
  v26 = (uint8x8_t)vmovn_s16(v16);
  v27 = (uint8x8_t)vmovn_s16(v17);
  result = vzip1q_s64((int64x2_t)vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)vmlaq_s16(vaddq_s16(v25, (int16x8_t)vzip1q_s8(a4, (int8x16_t)0)), v13, v21), (uint8x8_t)vmovn_s16(v14), (uint8x8_t)0x1414141414141414), vaddq_s16(v22, v17)), v21))), (uint16x8_t)v15), (int64x2_t)vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(
                                                  vmlaq_s16(vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16(v25, v13), v26, (uint8x8_t)0x1414141414141414), v18), vaddq_s16(v17, v14), v21), v21))), (uint16x8_t)v16));
  *a1 = result;
  a1[1] = vzip1q_s64((int64x2_t)vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vmlal_u8(vmlal_u8((uint16x8_t)v14, v26, (uint8x8_t)0x1414141414141414), v27, (uint8x8_t)0x1414141414141414), v19), vaddq_s16(v18, v15), v21), v23), v21))), (uint16x8_t)v17),
            (int64x2_t)vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8(vmlal_u8((uint16x8_t)vaddq_s16(v22, v15), v27, (uint8x8_t)0x1414141414141414), (uint8x8_t)vmovn_s16(v18), (uint8x8_t)0x1414141414141414), v19, v21), vaddq_s16(v20, v23)), v21))), (uint16x8_t)v18));
  return result;
}

int64x2_t sub_2160859A0(int64x2_t *a1, uint64_t a2, int a3, int8x16_t a4, int8x16_t a5, int8x16_t a6, int8x16_t a7, int8x16_t a8, int64x2_t a9, int64x2_t a10, int64x2_t a11)
{
  int64x2_t v11;
  int64x2_t v12;
  int64x2_t v13;
  int64x2_t v14;
  int64x2_t v15;
  int8x16_t v16;
  int8x16_t v17;
  int8x16_t v18;
  int8x16_t v19;
  int64x2_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  __int16 v30;
  __int16 v31;
  __int16 v32;
  __int16 v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int16x8_t v39;
  int16x8_t v40;
  int16x8_t v41;
  int16x8_t v42;
  int16x8_t v43;
  int16x8_t v44;
  int8x16_t v45;
  int16x8_t v46;
  int8x16_t v47;
  int16x8_t v48;
  int8x16_t v49;
  int8x16_t v50;
  int8x16_t v51;
  int8x16_t v52;
  int8x16_t v53;
  int8x16_t v54;
  int32x4_t v55;
  int32x4_t v56;
  int32x4_t v57;
  int32x4_t v58;
  int32x4_t v59;
  int32x4_t v60;
  int32x4_t v61;
  int32x4_t v62;
  int32x4_t v63;
  int32x4_t v64;
  int16x8_t v65;
  int8x16_t v66;
  int8x16_t v67;
  int8x16_t v68;
  int32x4_t v69;
  int32x4_t v70;
  int32x4_t v71;
  int32x4_t v72;
  int32x4_t v73;
  int32x4_t v74;
  int32x4_t v75;
  int16x8_t v76;
  int8x16_t v77;
  int8x16_t v78;
  int8x16_t v79;
  int32x4_t v80;
  int32x4_t v81;
  int32x4_t v82;
  int32x4_t v83;
  int32x4_t v84;
  int32x4_t v85;
  int32x4_t v86;
  int16x8_t v87;
  int8x16_t v88;
  int8x16_t v89;
  int8x16_t v90;
  int32x4_t v91;
  int32x4_t v92;
  int32x4_t v93;
  int32x4_t v94;
  int32x4_t v95;
  int32x4_t v96;
  int32x4_t v97;
  int16x8_t v98;
  int64x2_t result;

  v21 = a2 - 2 * a3;
  v22 = a2 - a3;
  v23 = a2 + a3;
  v24 = a2 + 2 * a3;
  v25 = a2 + 3 * a3;
  v26 = a2 + 4 * a3;
  v27 = a2 + 5 * a3;
  v28 = a2 + 6 * a3;
  a4.i32[0] = *(_DWORD *)(v21 - 2);
  a5.i32[0] = *(_DWORD *)(v22 - 2);
  a6.i32[0] = *(_DWORD *)(a2 - 2);
  a7.i32[0] = *(_DWORD *)(v23 - 2);
  a8.i32[0] = *(_DWORD *)(v24 - 2);
  a9.i32[0] = *(_DWORD *)(v21 + 2);
  a10.i32[0] = *(_DWORD *)(v22 + 2);
  a11.i32[0] = *(_DWORD *)(a2 + 2);
  v11.i32[0] = *(_DWORD *)(v23 + 2);
  v12.i32[0] = *(_DWORD *)(v24 + 2);
  v13.i32[0] = *(_DWORD *)(v25 + 2);
  v14.i32[0] = *(_DWORD *)(v26 + 2);
  v15.i32[0] = *(_DWORD *)(v27 + 2);
  v16.i32[0] = *(_DWORD *)(v25 - 2);
  v17.i32[0] = *(_DWORD *)(v26 - 2);
  v18.i32[0] = *(_DWORD *)(v27 - 2);
  v19.i32[0] = *(_DWORD *)(v28 - 2);
  v20.i32[0] = *(_DWORD *)(v28 + 2);
  v29 = *(unsigned __int8 *)(v21 + 6);
  v30 = *(unsigned __int8 *)(v22 + 6);
  v31 = *(unsigned __int8 *)(a2 + 6);
  v32 = *(unsigned __int8 *)(v23 + 6);
  LOWORD(v23) = *(unsigned __int8 *)(v24 + 6);
  v33 = *(unsigned __int8 *)(v25 + 6);
  LOWORD(v26) = *(unsigned __int8 *)(v26 + 6);
  LOWORD(v21) = *(unsigned __int8 *)(v27 + 6);
  v34 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64(a10, 0x20uLL), a5), (int8x16_t)0);
  v35 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64(a11, 0x20uLL), a6), (int8x16_t)0);
  v36 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v11, 0x20uLL), a7), (int8x16_t)0);
  v37 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v12, 0x20uLL), a8), (int8x16_t)0);
  v38 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v13, 0x20uLL), v16), (int8x16_t)0);
  v39 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v14, 0x20uLL), v17), (int8x16_t)0);
  v40 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v15, 0x20uLL), v18), (int8x16_t)0);
  v41.i64[0] = 0x4000400040004;
  v41.i64[1] = 0x4000400040004;
  v42.i64[0] = 0x14001400140014;
  v42.i64[1] = 0x14001400140014;
  v43 = vmulq_s16(v36, v42);
  v44 = vmulq_s16(v37, v41);
  v45 = (int8x16_t)vaddq_s16(vmlaq_s16(vmlaq_s16((int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64(a9, 0x20uLL), a4), (int8x16_t)0), v34, v41), v35, v42), vaddq_s16(vaddq_s16(v43, v44), v38));
  v46 = vmulq_s16(v37, v42);
  v47 = (int8x16_t)vmlaq_s16(vaddq_s16(vaddq_s16(v43, v34), vaddq_s16(v46, v39)), vaddq_s16(v38, v35), v41);
  v48 = vmulq_s16(v38, v42);
  v49 = (int8x16_t)vmlaq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v46, v35), v48), v40), vaddq_s16(v39, v36), v41);
  v50 = (int8x16_t)vaddq_s16(vmlaq_s16(vmlaq_s16(vaddq_s16(vaddq_s16(v44, v36), v48), v39, v42), v40, v41), (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v20, 0x20uLL), v19), (int8x16_t)0));
  v51 = vextq_s8(v45, (int8x16_t)0, 2uLL);
  v52 = vextq_s8(v45, (int8x16_t)0, 4uLL);
  v53 = vextq_s8(v45, (int8x16_t)0, 6uLL);
  v54 = v53;
  v54.i16[5] = v33 + v29 - 5 * v30 + 20 * v31 + 20 * v32 - 5 * v23;
  v55 = vpaddq_s32(vmull_s16(*(int16x4_t *)v45.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v45, v45, 8uLL), (int16x4_t)131067));
  v56 = vpaddq_s32(vmull_s16(*(int16x4_t *)v51.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v51, v51, 8uLL), (int16x4_t)131067));
  v57 = vpaddq_s32(vmull_s16(*(int16x4_t *)v52.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v52, v52, 8uLL), (int16x4_t)131067));
  v58 = vpaddq_s32(vmull_s16(*(int16x4_t *)v53.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v54, v54, 8uLL), (int16x4_t)131067));
  v59 = vzip1q_s32(v55, v57);
  v60 = vzip2q_s32(v55, v57);
  v61 = vzip1q_s32(v56, v58);
  v62 = vzip1q_s32(v60, vzip2q_s32(v56, v58));
  v63 = vaddq_s32(vzip2q_s32(v59, v61), vzip1q_s32(v59, v61));
  v61.i64[0] = 0x20000000200;
  v61.i64[1] = 0x20000000200;
  v64 = vaddq_s32(v63, vaddq_s32(v62, v61));
  v63.i64[0] = 0x900000009;
  v63.i64[1] = 0x900000009;
  v65 = (int16x8_t)vshlq_s32(v64, v63);
  *(int16x4_t *)v65.i8 = vqmovn_s32((int32x4_t)v65);
  *(int8x8_t *)v65.i8 = vqmovun_s16(v65);
  v66 = vextq_s8(v47, (int8x16_t)0, 2uLL);
  v67 = vextq_s8(v47, (int8x16_t)0, 4uLL);
  v68 = vextq_s8(v47, (int8x16_t)0, 6uLL);
  v68.i16[5] = v26 + v30 + 20 * v32 + 20 * v23 - 5 * (v33 + v31);
  v69 = vpaddq_s32(vmull_s16(*(int16x4_t *)v47.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v47, v47, 8uLL), (int16x4_t)131067));
  v70 = vpaddq_s32(vmull_s16(*(int16x4_t *)v66.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v66, v66, 8uLL), (int16x4_t)131067));
  v71 = vpaddq_s32(vmull_s16(*(int16x4_t *)v67.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v67, v67, 8uLL), (int16x4_t)131067));
  v72 = vpaddq_s32(vmull_s16(*(int16x4_t *)v68.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v68, v68, 8uLL), (int16x4_t)131067));
  v73 = vzip1q_s32(v69, v71);
  v74 = vzip2q_s32(v69, v71);
  v75 = vzip1q_s32(v70, v72);
  v76 = (int16x8_t)vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v73, v75), vzip1q_s32(v73, v75)), vaddq_s32(vzip1q_s32(v74, vzip2q_s32(v70, v72)), v61)), v63);
  *(int16x4_t *)v76.i8 = vqmovn_s32((int32x4_t)v76);
  *(int8x8_t *)v76.i8 = vqmovun_s16(v76);
  v77 = vextq_s8(v49, (int8x16_t)0, 2uLL);
  v78 = vextq_s8(v49, (int8x16_t)0, 4uLL);
  v79 = vextq_s8(v49, (int8x16_t)0, 6uLL);
  v79.i16[5] = v21 + v31 + 20 * v23 + 20 * v33 - 5 * (v26 + v32);
  v80 = vpaddq_s32(vmull_s16(*(int16x4_t *)v49.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v49, v49, 8uLL), (int16x4_t)131067));
  v81 = vpaddq_s32(vmull_s16(*(int16x4_t *)v77.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v77, v77, 8uLL), (int16x4_t)131067));
  v82 = vpaddq_s32(vmull_s16(*(int16x4_t *)v78.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v78, v78, 8uLL), (int16x4_t)131067));
  v83 = vpaddq_s32(vmull_s16(*(int16x4_t *)v79.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v79, v79, 8uLL), (int16x4_t)131067));
  v84 = vzip1q_s32(v80, v82);
  v85 = vzip2q_s32(v80, v82);
  v86 = vzip1q_s32(v81, v83);
  v87 = (int16x8_t)vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v84, v86), vzip1q_s32(v84, v86)), vaddq_s32(vzip1q_s32(v85, vzip2q_s32(v81, v83)), v61)), v63);
  *(int16x4_t *)v87.i8 = vqmovn_s32((int32x4_t)v87);
  *(int8x8_t *)v87.i8 = vqmovun_s16(v87);
  v88 = vextq_s8(v50, (int8x16_t)0, 2uLL);
  v89 = vextq_s8(v50, (int8x16_t)0, 4uLL);
  v90 = vextq_s8(v50, (int8x16_t)0, 6uLL);
  v90.i16[5] = *(unsigned __int8 *)(v28 + 6) + v32 - 5 * v23 + 20 * v33 + 20 * v26 - 5 * v21;
  v91 = vpaddq_s32(vmull_s16(*(int16x4_t *)v50.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v50, v50, 8uLL), (int16x4_t)131067));
  v92 = vpaddq_s32(vmull_s16(*(int16x4_t *)v88.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v88, v88, 8uLL), (int16x4_t)131067));
  v93 = vpaddq_s32(vmull_s16(*(int16x4_t *)v89.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v89, v89, 8uLL), (int16x4_t)131067));
  v94 = vpaddq_s32(vmull_s16(*(int16x4_t *)v90.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v90, v90, 8uLL), (int16x4_t)131067));
  v95 = vzip1q_s32(v91, v93);
  v96 = vzip2q_s32(v91, v93);
  v97 = vzip1q_s32(v92, v94);
  v98 = (int16x8_t)vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v95, v97), vzip1q_s32(v95, v97)), vaddq_s32(vzip1q_s32(v96, vzip2q_s32(v92, v94)), v61)), v63);
  *(int16x4_t *)v98.i8 = vqmovn_s32((int32x4_t)v98);
  *(int8x8_t *)v98.i8 = vqmovun_s16(v98);
  result = vzip1q_s64((int64x2_t)vzip1q_s8((int8x16_t)v87, (int8x16_t)0), (int64x2_t)vzip1q_s8((int8x16_t)v98, (int8x16_t)0));
  *a1 = vzip1q_s64((int64x2_t)vzip1q_s8((int8x16_t)v65, (int8x16_t)0), (int64x2_t)vzip1q_s8((int8x16_t)v76, (int8x16_t)0));
  a1[1] = result;
  return result;
}

uint64_t sub_216085DC8(int *a1, int16x8_t *a2, int a3, int a4, int a5, int a6, double a7, double a8, double a9, double a10, double a11, double a12, double a13, uint8x8_t a14)
{
  int32x2_t v14;
  int32x2_t v15;
  int32x2_t v16;
  int32x2_t v17;
  uint32x2_t v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  unsigned int v23;
  int v24;
  uint64_t v25;
  int8x16_t *v26;
  char v27;
  int8x16_t *v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  int v32;
  int8x16_t *v33;
  int v34;
  unsigned __int8 *v35;
  unsigned __int16 *v36;
  unsigned __int16 *v37;
  uint64_t v38;
  int8x8_t v39;
  char v40;
  uint64_t v41;
  int8x8_t v42;
  int8x8_t v43;
  unsigned int v44;
  unsigned int v45;
  int16x8_t v46;
  int32x2_t v47;
  unsigned int v48;
  int16x8_t v49;
  unsigned int v50;
  int16x8_t v51;
  unsigned int v52;
  int16x8_t v53;
  unsigned int v54;
  int16x8_t v55;
  unsigned int v56;
  int16x8_t v57;
  unsigned int v58;
  int16x8_t v59;
  int32x2_t v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  int32x2_t v65;
  uint32x2_t v66;
  int16x8_t v67;
  int16x4_t v68;
  unsigned int v69;
  char v70;
  int32x2_t v71;
  char v72;
  uint16x8_t v73;
  char v74;
  int16x8_t v75;
  int16x8_t v76;
  char v77;
  char v78;
  int8x16_t v79;
  int16x8_t v80;
  int16x8_t v81;
  unsigned int v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  int v86;
  char v87;
  uint64_t v88;
  unsigned int v89;
  int8x16_t *v90;
  int v91;
  __int16 *v92;
  uint64_t v93;
  uint64_t v94;
  uint8x16_t v95;
  _WORD *v96;
  _WORD *v97;
  _WORD *v98;
  _WORD *v99;
  _WORD *v100;
  uint8x16_t v101;
  uint8x16_t v102;
  int32x4_t v103;
  int32x4_t v104;
  int32x4_t v105;
  int16x8_t v106;
  int16x8_t v107;
  int16x8_t v108;
  int16x8_t v109;
  uint16x8_t v110;
  int8x16_t v111;
  uint16x8_t v112;
  uint16x8_t v113;
  int8x16_t v114;
  uint64_t result;
  uint64_t v116;
  uint16x8_t v117;
  int16x4_t v118;
  int16x8_t v119;
  uint64_t v120;
  uint8x16_t *v121;
  int16x8_t v122;
  int16x8_t v123;
  uint16x8_t v124;
  uint64_t v125;
  unsigned __int8 *v126;
  unsigned __int8 *v127;
  unsigned __int16 *v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  int v139;
  int v140;
  int v141;
  __int8 *v142;
  __int8 *v143;
  __int16 v144;
  __int16 v145;
  int16x8_t v146;
  int16x8_t v147;
  int32x2_t v148;
  int32x2_t v149;
  uint64_t v150;
  int16x4_t v151;
  int32x2_t v152;
  int32x2_t v153;
  int32x2_t v154;
  int32x2_t v155;
  int32x2_t v156;
  int32x2_t v157;
  int32x2_t v158;
  int16x8_t v159;
  uint16x8_t v160;
  int16x8_t v161;
  int16x8_t v162;
  int8x16_t v163;
  int8x16_t v164;
  uint64_t v165;
  int16x8_t v166;
  uint64_t v167;
  int8x16_t *v168;
  int16x8_t v169;
  int16x8_t v170;
  uint64_t v171;
  int8x16_t v172;
  int8x16_t v173;
  int32x4_t v174;
  int32x4_t v175;
  int32x4_t v176;
  int16x8_t v177;
  unsigned __int8 *v178;
  int v179;
  int v180;
  unsigned __int8 *v181;
  int v182;
  int v183;
  unsigned __int8 *v184;
  int v185;
  int v186;
  unsigned __int8 *v187;
  int v188;
  int v189;
  unsigned __int8 *v190;
  int16x8_t v191;
  int16x8_t v192;
  int16x8_t v193;
  int16x8_t v194;
  int16x8_t v195;
  int16x8_t v196;
  int16x8_t v197;
  int16x8_t v198;
  int16x8_t v199;
  int16x8_t v200;
  int8x16_t v201;
  int8x16_t v202;
  uint16x8_t v203;
  uint16x8_t v204;
  char v205;
  char v206;
  int16x8_t v207;
  int16x8_t v208;
  char v209;
  char v210;
  int8x16_t v211;
  int v212;
  __int32 v213;
  __int32 v214;
  __int32 v215;
  __int32 v216;
  __int32 v217;
  __int32 v218;
  __int32 v219;
  __int32 v220;
  int8x16x2_t v221;
  int8x16x2_t v222;

  v19 = *((_QWORD *)a1 + 27);
  v21 = *a1;
  v20 = a1[1];
  if (*((_BYTE *)a1 + 31))
  {
    if (*((_BYTE *)a1 + 29) && *(_BYTE *)(v19 + 1363))
    {
      v22 = *(unsigned int *)(v19 + 184);
      v23 = 2 * v22;
      v24 = *(unsigned __int8 *)(v19 + 32);
      v25 = *(_QWORD *)(v19 + 72) + (16 * v21);
      v26 = (int8x16_t *)(v25 + (8 * v20 * v22));
      if (v24)
      {
        v26 = (int8x16_t *)(v25 + (16 * v20 * v22));
        v27 = 4;
      }
      else
      {
        v27 = 3;
      }
      v28 = (int8x16_t *)(v25 + v22 + ((v20 << v27) * v22));
      if (!*((_BYTE *)a1 + 30))
        v28 = v26;
    }
    else
    {
      v29 = *(_DWORD *)(v19 + 184);
      v30 = a1[4];
      v31 = *(_QWORD *)(v19 + 72) + 16 * v29 * (v30 / (2 * a1[5])) + ((8 * (v30 % (2 * a1[5]))) & 0xFFFFFFF0);
      v32 = (int)(v30 << 31) >> 31;
      v33 = (int8x16_t *)(v31 + (v32 & v29));
      v28 = (int8x16_t *)(v31 + (v32 & (8 * v29)));
      if (*((_BYTE *)a1 + 31) == 1)
      {
        v23 = v29;
      }
      else
      {
        v28 = v33;
        v23 = 2 * v29;
      }
    }
    switch(a6)
    {
      case 0:
        if (a3 <= 0)
          v34 = 0;
        else
          v34 = -1;
        v212 = v34;
        v35 = (unsigned __int8 *)v28 - (int)(v23 & v34);
        v36 = &v28[-1].u16[7];
        v37 = &v28[-1].u16[2 * v23 + 7];
        v38 = v23;
        v39 = (int8x8_t)0x80008000800080;
        v40 = 1;
        v41 = 3 * v23;
        do
        {
          v42 = v39;
          v43 = (int8x8_t)0x80008000800080;
          v39 = (int8x8_t)0x80008000800080;
          if (a4 | a3)
          {
            v44 = bswap32(*(unsigned __int16 *)((char *)v36 + v23)) >> 16;
            HIWORD(v219) = v44;
            LOWORD(v219) = v44;
            v43.i32[0] = v44;
            v45 = bswap32(v36[v38]) >> 16;
            v39.i32[0] = v219;
            v46 = (int16x8_t)vmovl_u8((uint8x8_t)v39);
            v47 = (int32x2_t)vshl_u32((uint32x2_t)v43, (uint32x2_t)0xFFFFFF01FFFFFFF8);
            v46.i16[3] = 0;
            *(int8x8_t *)v46.i8 = vmovn_s16(v46);
            v47.i16[2] = v46.i16[1];
            HIWORD(v218) = v45;
            LOWORD(v218) = v45;
            v46.i32[0] = v45;
            v48 = bswap32(*v36) >> 16;
            a14.i32[0] = v218;
            v49 = (int16x8_t)vmovl_u8(a14);
            *(uint32x2_t *)v46.i8 = vshl_u32(*(uint32x2_t *)v46.i8, (uint32x2_t)0xFFFFFF01FFFFFFF8);
            v49.i16[3] = 0;
            *(int8x8_t *)v49.i8 = vmovn_s16(v49);
            v46.i16[2] = v49.i16[1];
            HIWORD(v220) = v48;
            LOWORD(v220) = v48;
            v49.i32[0] = v48;
            v50 = bswap32(*(unsigned __int16 *)((char *)v37 + v23)) >> 16;
            v14.i32[0] = v220;
            v51 = (int16x8_t)vmovl_u8((uint8x8_t)v14);
            *(uint32x2_t *)v49.i8 = vshl_u32(*(uint32x2_t *)v49.i8, (uint32x2_t)0xFFFFFF01FFFFFFF8);
            v51.i16[3] = 0;
            *(int8x8_t *)v51.i8 = vmovn_s16(v51);
            v49.i16[2] = v51.i16[1];
            HIWORD(v215) = v50;
            LOWORD(v215) = v50;
            v51.i32[0] = v50;
            v52 = bswap32(v37[v38]) >> 16;
            v15.i32[0] = v215;
            v53 = (int16x8_t)vmovl_u8((uint8x8_t)v15);
            *(uint32x2_t *)v51.i8 = vshl_u32(*(uint32x2_t *)v51.i8, (uint32x2_t)0xFFFFFF01FFFFFFF8);
            v53.i16[3] = 0;
            *(int8x8_t *)v53.i8 = vmovn_s16(v53);
            v51.i16[2] = v53.i16[1];
            HIWORD(v214) = v52;
            LOWORD(v214) = v52;
            v53.i32[0] = v52;
            v54 = bswap32(*v37) >> 16;
            v16.i32[0] = v214;
            v55 = (int16x8_t)vmovl_u8((uint8x8_t)v16);
            v15 = (int32x2_t)vshl_u32(*(uint32x2_t *)v53.i8, (uint32x2_t)0xFFFFFF01FFFFFFF8);
            v55.i16[3] = 0;
            *(int8x8_t *)v55.i8 = vmovn_s16(v55);
            v15.i16[2] = v55.i16[1];
            HIWORD(v216) = v54;
            LOWORD(v216) = v54;
            v55.i32[0] = v54;
            v56 = bswap32(*(unsigned __int16 *)((char *)v36 + v41)) >> 16;
            v17.i32[0] = v216;
            v57 = (int16x8_t)vmovl_u8((uint8x8_t)v17);
            v16 = (int32x2_t)vshl_u32(*(uint32x2_t *)v55.i8, (uint32x2_t)0xFFFFFF01FFFFFFF8);
            v57.i16[3] = 0;
            *(int8x8_t *)v57.i8 = vmovn_s16(v57);
            v16.i16[2] = v57.i16[1];
            HIWORD(v217) = v56;
            LOWORD(v217) = v56;
            v57.i32[0] = v56;
            v58 = bswap32(*(unsigned __int16 *)((char *)v37 + v41)) >> 16;
            v18.i32[0] = v217;
            v59 = (int16x8_t)vmovl_u8((uint8x8_t)v18);
            v17 = (int32x2_t)vshl_u32(*(uint32x2_t *)v57.i8, (uint32x2_t)0xFFFFFF01FFFFFFF8);
            v59.i16[3] = 0;
            v18 = (uint32x2_t)vmovn_s16(v59);
            v17.i16[2] = v18.i16[1];
            HIWORD(v213) = v58;
            LOWORD(v213) = v58;
            v18.i32[0] = v58;
            v60 = vadd_s32(*(int32x2_t *)v49.i8, v47);
            *(int32x2_t *)v49.i8 = vadd_s32(v16, *(int32x2_t *)v51.i8);
            v61 = *v35 + v35[2] + v35[4] + v35[6] + 2;
            v62 = v35[8] + v35[10] + v35[12] + v35[14] + 2;
            v63 = v35[1] + v35[3] + v35[5] + v35[7] + 2;
            v64 = v35[9] + v35[11] + v35[13] + v35[15] + 2;
            v65 = vadd_s32(v60, vadd_s32(*(int32x2_t *)v46.i8, v17));
            v66 = (uint32x2_t)vadd_s32(v65, (int32x2_t)0x200000002);
            v65.i32[0] = v213;
            v67 = (int16x8_t)vmovl_u8((uint8x8_t)v65);
            v67.i16[3] = 0;
            v14 = (int32x2_t)vshl_u32(v18, (uint32x2_t)0xFFFFFF01FFFFFFF8);
            v14.i16[2] = vmovn_s16(v67).i16[1];
            a14 = (uint8x8_t)vadd_s32(vadd_s32(*(int32x2_t *)v49.i8, vadd_s32(v15, v14)), (int32x2_t)0x200000002);
            *(uint32x2_t *)v67.i8 = vshr_n_u32((uint32x2_t)vand_s8((int8x8_t)a14, (int8x8_t)0xFFFF0000FFFFLL), 2uLL);
            v43 = (int8x8_t)vuzp1_s16(*(int16x4_t *)v67.i8, *(int16x4_t *)v67.i8);
            if ((a4 & v212) != 0)
            {
              v43.i16[2] = (unsigned __int16)(a14.i16[0] + v62) >> 3;
              v43.i16[3] = (unsigned __int16)(a14.i16[2] + v64) >> 3;
              v39.i16[0] = (unsigned __int16)(v66.i16[0] + v61) >> 3;
              v39.i16[1] = (unsigned __int16)(v66.i16[2] + v63) >> 3;
              v39.i16[2] = v62 >> 2;
              v39.i16[3] = v64 >> 2;
            }
            else
            {
              v68 = (int16x4_t)vand_s8((int8x8_t)vshr_n_u32(v66, 2uLL), (int8x8_t)0x3F0000003FLL);
              a14 = (uint8x8_t)vcltz_s16(vshl_n_s16(vdup_n_s16(a4 == 0), 0xFuLL));
              v14.i16[0] = v61 >> 2;
              v14.i16[1] = v63 >> 2;
              v14.i16[2] = v62 >> 2;
              v14.i16[3] = v64 >> 2;
              v43 = vbsl_s8((int8x8_t)a14, (int8x8_t)v14, v43);
              v39 = vbsl_s8((int8x8_t)a14, (int8x8_t)v14, (int8x8_t)vuzp1_s16(v68, v68));
            }
          }
          if ((v40 & (a4 == a5)) != 0)
            v69 = -1;
          else
            v69 = 0;
          if ((v40 & (a4 == a5)) != 0)
            break;
          v70 = v40 ^ 1;
          a4 = a5;
          v40 = 0;
        }
        while ((v70 & 1) == 0);
        v71 = (int32x2_t)vbsl_s8((int8x8_t)vdup_n_s16(v69), v39, v42);
        v72 = 1;
        v73.i64[0] = 0xFF00FF00FF00FFLL;
        v73.i64[1] = 0xFF00FF00FF00FFLL;
        do
        {
          v74 = v72;
          v75 = (int16x8_t)vdupq_lane_s32(v71, 1);
          v76 = (int16x8_t)vdupq_lane_s32(v71, 0);
          v77 = 1;
          do
          {
            v78 = v77;
            v79 = vuzp1q_s8((int8x16_t)vminq_u16((uint16x8_t)vmaxq_s16(vaddq_s16(a2[2], v76), (int16x8_t)0), v73), (int8x16_t)vminq_u16((uint16x8_t)vmaxq_s16(vaddq_s16(a2[3], v75), (int16x8_t)0), v73));
            v80 = *a2;
            v81 = a2[1];
            a2 += 4;
            *v28 = vuzp1q_s8((int8x16_t)vminq_u16((uint16x8_t)vmaxq_s16(vaddq_s16(v80, v76), (int16x8_t)0), v73), (int8x16_t)vminq_u16((uint16x8_t)vmaxq_s16(vaddq_s16(v81, v75), (int16x8_t)0), v73));
            *(int8x16_t *)((char *)v28 + v23) = v79;
            v28 = (int8x16_t *)((char *)v28 + v38 * 2);
            v77 = 0;
          }
          while ((v78 & 1) != 0);
          v72 = 0;
          v71 = (int32x2_t)v43;
        }
        while ((v74 & 1) != 0);
        goto LABEL_79;
      case 1:
        v116 = 0;
        v117.i64[0] = 0xFF00FF00FF00FFLL;
        v117.i64[1] = 0xFF00FF00FF00FFLL;
        do
        {
          v118.i32[0] = v28[-1].u8[14];
          v118.i32[1] = v28[-1].u8[15];
          v221.val[1] = (int8x16_t)vdupq_lane_s16(v118, 2);
          v221.val[0] = (int8x16_t)vdupq_lane_s16(v118, 0);
          v119 = (int16x8_t)vqtbl2q_s8(v221, (int8x16_t)xmmword_2160F18C0);
          *v28 = vuzp1q_s8((int8x16_t)vminq_u16((uint16x8_t)vmaxq_s16(vaddq_s16(a2[v116], v119), (int16x8_t)0), v117), (int8x16_t)vminq_u16((uint16x8_t)vmaxq_s16(vaddq_s16(a2[v116 + 1], v119), (int16x8_t)0), v117));
          v28 = (int8x16_t *)((char *)v28 + v23);
          v116 += 2;
        }
        while ((_DWORD)(v116 * 16) != 256);
        goto LABEL_79;
      case 2:
        v120 = 0;
        v121 = (uint8x16_t *)((char *)v28 - (int)v23);
        v122 = (int16x8_t)vmovl_high_u8(*v121);
        v123 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v121->i8);
        v124.i64[0] = 0xFF00FF00FF00FFLL;
        v124.i64[1] = 0xFF00FF00FF00FFLL;
        do
        {
          *v28 = vuzp1q_s8((int8x16_t)vminq_u16((uint16x8_t)vmaxq_s16(vaddq_s16(a2[v120], v123), (int16x8_t)0), v124), (int8x16_t)vminq_u16((uint16x8_t)vmaxq_s16(vaddq_s16(a2[v120 + 1], v122), (int16x8_t)0), v124));
          v28 = (int8x16_t *)((char *)v28 + v23);
          v120 += 2;
        }
        while ((_DWORD)(v120 * 16) != 256);
        goto LABEL_79;
      case 3:
        v125 = 0;
        v126 = &v28[-1].u8[-v23 + 14];
        v127 = (unsigned __int8 *)v28 - (int)v23;
        v128 = &v28[-1].u16[2 * v23 + 7];
        v129 = 65468 * *v126
             + 65485 * *v127
             + 65502 * v127[2]
             + 65519 * v127[4]
             + 17 * v127[8]
             + 34 * v127[10]
             + 51 * v127[12]
             + 68 * v127[14];
        v130 = v128[v23];
        v131 = *(unsigned __int16 *)((char *)v128 + 3 * v23);
        v132 = bswap32(*(unsigned __int16 *)((char *)&v28[-1].u16[7] - v23));
        v133 = bswap32(v28[-1].u16[7]);
        v134 = bswap32(*(unsigned __int16 *)((char *)&v28[-1].u16[7] + v23));
        v135 = bswap32(v28[-1].u16[v23 + 7]);
        v136 = bswap32(*v128);
        LODWORD(v128) = bswap32(*(unsigned __int16 *)((char *)v128 + v23));
        LODWORD(v126) = 65468 * v126[1]
                      + 65485 * v127[1]
                      + 65502 * v127[3]
                      + 65519 * v127[5]
                      + 17 * v127[9]
                      + 34 * v127[11]
                      + 51 * v127[13]
                      + 68 * v127[15];
        v137 = bswap32(v130);
        v138 = bswap32(v131);
        LODWORD(v127) = 17 * (HIBYTE(v136) - HIBYTE(v135))
                      + 34 * ((v128 >> 24) - HIBYTE(v134))
                      + 51 * (HIBYTE(v137) - HIBYTE(v133))
                      + 68 * (HIBYTE(v138) - HIBYTE(v132));
        v139 = 17 * (BYTE2(v136) - BYTE2(v135))
             + 34 * (BYTE2(v128) - BYTE2(v134))
             + 51 * (BYTE2(v137) - BYTE2(v133))
             + 68 * (BYTE2(v138) - BYTE2(v132))
             + 16;
        v140 = (v129 << 16) + 0x100000;
        v141 = ((_DWORD)v126 << 16) + 0x100000;
        v142 = &v28->i8[7 * v23];
        v143 = &v28->i8[-v23];
        v144 = v143[14] + *(v142 - 2);
        v145 = v143[15] + *(v142 - 1);
        v148 = vshr_n_s32(vshl_n_s32((int32x2_t)__PAIR64__(v139, (int)v127 + 16), 0x10uLL), 0x10uLL);
        v149 = vshr_n_s32(v148, 5uLL);
        v150 = 0x1000000010;
        v151 = (int16x4_t)vmla_s32((int32x2_t)0x1000000010, v149, vdup_n_s32(0xFFFDu));
        v152 = vadd_s32(v149, v149);
        v153 = vsub_s32((int32x2_t)0x1000000010, v152);
        v154 = vsub_s32((int32x2_t)0x1000000010, v149);
        v155 = vsra_n_s32((int32x2_t)0x1000000010, v148, 5uLL);
        v156 = vadd_s32(v152, (int32x2_t)0x1000000010);
        v157 = vmla_s32((int32x2_t)0x1000000010, v149, (int32x2_t)0x300000003);
        v158 = vadd_s32(vshl_n_s32(v149, 2uLL), (int32x2_t)0x1000000010);
        v159.i64[0] = 0xE000E000E000E000;
        v159.i64[1] = 0xE000E000E000E000;
        v160.i64[0] = 0xFF00FF00FF00FFLL;
        v160.i64[1] = 0xFF00FF00FF00FFLL;
        do
        {
          v222.val[1] = (int8x16_t)vdupq_lane_s16(v151, 2);
          v222.val[0] = (int8x16_t)vdupq_lane_s16(v151, 0);
          v151 = (int16x4_t)v153;
          v153 = v154;
          v154 = (int32x2_t)v150;
          v150 = (uint64_t)v155;
          v155 = v156;
          v161 = (int16x8_t)vqtbl2q_s8(v222, (int8x16_t)xmmword_2160F18C0);
          v147.i16[7] = 16 * v145;
          v147.i16[6] = 16 * v144;
          v147.i16[5] = 16 * v145 - (v141 >> 21);
          v147.i16[4] = 16 * v144 - (v140 >> 21);
          v147.i16[3] = 16 * v145 - 2 * (v141 >> 21);
          v147.i16[2] = 16 * v144 - 2 * (v140 >> 21);
          v147.i16[1] = -3 * (v141 >> 21) + 16 * v145;
          v147.i16[0] = -3 * (v140 >> 21) + 16 * v144;
          v222.val[0] = (int8x16_t)vaddq_s16(v161, v147);
          v146.i16[7] = 16 * v145 + 4 * (v141 >> 21);
          v146.i16[6] = 16 * v144 + 4 * (v140 >> 21);
          v146.i16[5] = 3 * (v141 >> 21) + 16 * v145;
          v146.i16[4] = 3 * (v140 >> 21) + 16 * v144;
          v146.i16[3] = 16 * v145 + 2 * (v141 >> 21);
          v146.i16[2] = 16 * v144 + 2 * (v140 >> 21);
          v146.i16[1] = 16 * v145 + (v141 >> 21);
          v146.i16[0] = 16 * v144 + (v140 >> 21);
          v162 = vaddq_s16(v161, v146);
          v163 = (int8x16_t)vcgtq_s16(v162, v159);
          v164 = (int8x16_t)vcgtq_s16((int16x8_t)v222.val[0], v159);
          *v28 = vuzp1q_s8((int8x16_t)vminq_u16((uint16x8_t)vmaxq_s16(vaddq_s16(a2[v125], (int16x8_t)vorrq_s8((int8x16_t)(*(_OWORD *)&v164 & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)), vbicq_s8((int8x16_t)(*(_OWORD *)&vandq_s8((int8x16_t)vshrq_n_u16((uint16x8_t)v222.val[0], 5uLL), (int8x16_t)vcgezq_s16((int16x8_t)v222.val[0])) & __PAIR128__(0xF8FFF8FFF8FFF8FFLL, 0xF8FFF8FFF8FFF8FFLL)), v164))), (int16x8_t)0), v160), (int8x16_t)vminq_u16((uint16x8_t)vmaxq_s16(vaddq_s16(a2[v125 + 1],
                                                (int16x8_t)vorrq_s8((int8x16_t)(*(_OWORD *)&v163 & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)), vbicq_s8((int8x16_t)(*(_OWORD *)&vandq_s8((int8x16_t)vshrq_n_u16((uint16x8_t)v162, 5uLL), (int8x16_t)vcgezq_s16(v162)) & __PAIR128__(0xF8FFF8FFF8FFF8FFLL, 0xF8FFF8FFF8FFF8FFLL)), v163))), (int16x8_t)0), v160));
          v28 = (int8x16_t *)((char *)v28 + v23);
          v125 += 2;
          v156 = v157;
          v157 = v158;
          v158 = v155;
        }
        while ((_DWORD)(v125 * 16) != 256);
        goto LABEL_79;
      default:
        goto LABEL_51;
    }
  }
  if (*((_BYTE *)a1 + 29) && *(_BYTE *)(v19 + 1363))
  {
    v82 = *(_DWORD *)(v19 + 184);
    LODWORD(v83) = 2 * v82;
    v84 = *(unsigned __int8 *)(v19 + 32);
    v85 = *(_QWORD *)(v19 + 72) + (16 * v21);
    v86 = 16 * v20 * v82;
    if (v84)
    {
      v87 = 4;
    }
    else
    {
      v86 = 8 * v20 * v82;
      v87 = 3;
    }
    v88 = v85 + (v20 << v87) * v82;
    if (*((_BYTE *)a1 + 30))
      v89 = v82;
    else
      v89 = v86;
    if (*((_BYTE *)a1 + 30))
      v85 = v88;
  }
  else
  {
    LODWORD(v83) = *(_DWORD *)(v19 + 184);
    v85 = *(_QWORD *)(v19 + 72) + (16 * v21);
    v89 = 8 * v20 * v83;
  }
  v90 = (int8x16_t *)(v85 + v89);
  switch(a6)
  {
    case 0:
      if (a4 | a3)
      {
        if (a3 <= 0)
          v91 = 0;
        else
          v91 = -1;
        v92 = (__int16 *)((char *)&v90[-1].i16[7] + (4 * v83));
        v93 = (2 * v83);
        v94 = (3 * v83);
        v95 = *(uint8x16_t *)((char *)v90 - (int)(v83 & v91));
        v96 = (__int16 *)((char *)&v90[-1].i16[7] + v83);
        v97 = (__int16 *)((char *)&v90[-1].i16[7] + v93);
        v98 = (__int16 *)((char *)v92 + v83);
        v99 = (__int16 *)((char *)v92 + v93);
        v101.i16[4] = *v92;
        v100 = (__int16 *)((char *)v92 + v94);
        v83 = v83;
        v102.i16[0] = v95.u8[0];
        v102.i16[1] = v95.u8[2];
        v102.i16[2] = BYTE4(*(unint64_t *)((char *)v90->i64 - (int)(v83 & v91)));
        v102.i16[3] = BYTE6(*(unint64_t *)((char *)v90->i64 - (int)(v83 & v91)));
        v102.i16[4] = *(uint64_t *)((char *)&v90->i64[1] - (int)(v83 & v91));
        v102.i16[5] = BYTE2(*(uint64_t *)((char *)&v90->i64[1] - (int)(v83 & v91)));
        v102.i16[6] = v95.u8[12];
        v102.i16[7] = v95.u8[14];
        v103 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8((uint8x16_t)(*(_OWORD *)&v95 & __PAIR128__(0xFF00FF00FF00FF00, 0xFF00FF00FF00FF00)))));
        v95.i16[0] = v90[-1].i16[7];
        v95.i16[1] = *v96;
        v95.i16[2] = *v97;
        v95.i16[3] = *(__int16 *)((char *)&v90[-1].i16[7] + v94);
        v95.i16[4] = v101.u8[8];
        v95.i16[5] = *v98;
        v95.i16[6] = *v99;
        v95.i16[7] = *v100;
        v104 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(v95)));
        v101.i16[0] = v90[-1].i16[7] & 0xFF00;
        v101.i16[1] = *v96 & 0xFF00;
        v101.i16[2] = *v97 & 0xFF00;
        v101.i16[3] = *(__int16 *)((_BYTE *)&v90[-1].i16[7] + v94) & 0xFF00;
        v101.i16[4] &= 0xFF00u;
        v101.i16[5] = *v98 & 0xFF00;
        v101.i16[6] = *v99 & 0xFF00;
        v101.i16[7] = *v100 & 0xFF00;
        v105 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(v101)));
        v106 = (int16x8_t)vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(v102))), (int32x4_t)xmmword_2160F1870);
        v107 = (int16x8_t)vaddq_s32(v103, (int32x4_t)xmmword_2160F1870);
        v108 = (int16x8_t)vaddq_s32(v104, (int32x4_t)xmmword_2160F1870);
        v109 = (int16x8_t)vaddq_s32(v105, (int32x4_t)xmmword_2160F1870);
        if ((v91 & a4) != 0)
        {
          v110.i64[0] = 0x2000200020002;
          v110.i64[1] = 0x2000200020002;
          v111 = (int8x16_t)vshlq_u16((uint16x8_t)vqtbl1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)vaddq_s32((int32x4_t)v109, (int32x4_t)v107), 0xEuLL), (int8x16_t)vaddq_s32((int32x4_t)v108, (int32x4_t)v106)), (int8x16_t)xmmword_2160EF0F0), v110);
          v112 = (uint16x8_t)vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)vzip2q_s16(v108, v109), 8uLL), vextq_s8((int8x16_t)0, (int8x16_t)vzip2q_s16(v106, v107), 0xCuLL));
          v113.i64[0] = 0x1000100010001;
          v113.i64[1] = 0x1000100010001;
          v114 = vorrq_s8((int8x16_t)vshlq_u16(v112, v113), v111);
        }
        else
        {
          if (a4)
          {
            v201 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v109, 0xEuLL), (int8x16_t)v108);
            v202 = (int8x16_t)xmmword_2160F1880;
          }
          else
          {
            v201 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v107, 0xEuLL), (int8x16_t)v106);
            v202 = (int8x16_t)xmmword_2160F1890;
          }
          v203 = (uint16x8_t)vqtbl1q_s8(v201, v202);
          v204.i64[0] = 0x1000100010001;
          v204.i64[1] = 0x1000100010001;
          v114 = (int8x16_t)vshlq_u16(v203, v204);
        }
      }
      else
      {
        v93 = (2 * v83);
        v114.i64[0] = 0x80008000800080;
        v114.i64[1] = 0x80008000800080;
        v83 = v83;
      }
      v205 = 1;
      do
      {
        v206 = v205;
        v207 = (int16x8_t)vqtbl1q_s8(v114, (int8x16_t)xmmword_2160EE800);
        v208 = (int16x8_t)vqtbl1q_s8(v114, (int8x16_t)xmmword_2160F18A0);
        v209 = 1;
        do
        {
          v210 = v209;
          v211 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(a2[2], v207)), vaddq_s16(a2[3], v208));
          *v90 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(*a2, v207)), vaddq_s16(a2[1], v208));
          *(int8x16_t *)((char *)v90 + v83) = v211;
          a2 += 4;
          v90 = (int8x16_t *)((char *)v90 + v93);
          v209 = 0;
        }
        while ((v210 & 1) != 0);
        v205 = 0;
        v114 = vqtbl1q_s8(v114, (int8x16_t)xmmword_2160F18B0);
      }
      while ((v206 & 1) != 0);
      goto LABEL_79;
    case 1:
      v165 = 0;
      do
      {
        v166 = (int16x8_t)vqtbl1q_s8((int8x16_t)((v90[-1].u16[7] | (v90[-1].u16[7] << 8)) & 0xFF00FF), (int8x16_t)xmmword_2160EE800);
        *v90 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(a2[v165], v166)), vaddq_s16(a2[v165 + 1], v166));
        v90 = (int8x16_t *)((char *)v90 + v83);
        v165 += 2;
      }
      while ((_DWORD)(v165 * 16) != 256);
      goto LABEL_79;
    case 2:
      v167 = 0;
      v168 = (int8x16_t *)((char *)v90 - (int)v83);
      v169 = (int16x8_t)vzip1q_s8(*v168, (int8x16_t)0);
      v170 = (int16x8_t)vzip2q_s8(*v168, (int8x16_t)0);
      do
      {
        *v90 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(a2[v167], v169)), vaddq_s16(a2[v167 + 1], v170));
        v90 = (int8x16_t *)((char *)v90 + v83);
        v167 += 2;
      }
      while ((_DWORD)(v167 * 16) != 256);
      goto LABEL_79;
    case 3:
      v171 = 0;
      v172 = vqtbl1q_s8(*(int8x16_t *)((char *)v90 - (int)v83), (int8x16_t)xmmword_2160F1820);
      v172.i16[0] = *(__int16 *)((char *)&v90[-1].i16[7] - (int)v83);
      v173 = vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vsubq_s16((int16x8_t)vzip2q_s8(v172, (int8x16_t)0), (int16x8_t)vzip1q_s8(vqtbl1q_s8(v172, (int8x16_t)xmmword_2160F1830), (int8x16_t)0)), (int8x16_t)xmmword_2160F1840), (int8x16_t)xmmword_2160F1850);
      v174 = vpaddq_s32(vmull_s16(*(int16x4_t *)v173.i8, (int16x4_t)0x22001100220011), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v173, v173, 8uLL), (int16x4_t)0x44003300440033));
      v175.i64[0] = 0x1000000010;
      v175.i64[1] = 0x1000000010;
      v176.i64[0] = 0x400000004;
      v176.i64[1] = 0x400000004;
      v177 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_s32(vaddq_s32(vaddq_s32(v174, v175), (int32x4_t)vextq_s8((int8x16_t)v174, (int8x16_t)0, 8uLL)), v176), (int8x16_t)xmmword_2160F1860), (int8x16_t)xmmword_2160EE800);
      v178 = &v90[-1].u8[v83 + 14];
      v179 = *v178;
      v180 = v178[1];
      v181 = &v178[v83];
      v182 = *v181;
      v183 = v181[1];
      v184 = &v181[(2 * v83)];
      v185 = *v184;
      v186 = v184[1];
      v187 = &v184[v83];
      v188 = *v187;
      v189 = v187[1];
      v190 = &v187[v83];
      v191 = (int16x8_t)vdupq_n_s32((34816
                                   * (v186
                                    - v183
                                    + 2 * (v189 - v180)
                                    + 3 * (v190[1] - v90[-1].u8[15])
                                    + 4 * (v190[v83 + 1] - v90[-1].u8[-v83 + 15]))
                                   + 0x8000) & 0xFFFF0000 | (unsigned __int16)((17
                                                                              * (v185
                                                                               - v182
                                                                               + 2 * (v188 - v179)
                                                                               + 3 * (*v190 - v90[-1].u8[14])
                                                                               + 4
                                                                               * (v190[v83]
                                                                                - v90[-1].u8[-v83 + 14]))
                                                                              + 16) >> 5));
      v192.i64[0] = 0x2000200020002;
      v192.i64[1] = 0x2000200020002;
      v193 = vmlaq_s16((int16x8_t)vdupq_n_s32((16* (v90->u8[-v83 + 14]+ v90->u8[8 * v83 - v83 - 2])) | ((v90->u8[-v83 + 15] + v90->u8[8 * v83 - v83 - 1]) << 20)), v191, v192);
      v192.i64[0] = 0x10001000100010;
      v192.i64[1] = 0x10001000100010;
      v194 = vaddq_s16(v193, v192);
      v195 = vmlaq_s16(v194, v177, (int16x8_t)xmmword_2160EE750);
      v196 = vmlaq_s16(v194, v177, (int16x8_t)xmmword_2160EE760);
      v197.i64[0] = 0x4000400040004;
      v197.i64[1] = 0x4000400040004;
      v198.i64[0] = 0xFF00FF00FF00FFLL;
      v198.i64[1] = 0xFF00FF00FF00FFLL;
      do
      {
        v199 = vshlq_s16(v195, v197);
        v195 = vaddq_s16(v195, v191);
        v200 = vshlq_s16(v196, v197);
        v196 = vaddq_s16(v196, v191);
        *v90 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(a2[v171], vmaxq_s16(vminq_s16(v199, v198), (int16x8_t)0))), vaddq_s16(a2[v171 + 1], vmaxq_s16(vminq_s16(v200, v198), (int16x8_t)0)));
        v90 = (int8x16_t *)((char *)v90 + v83);
        v171 += 2;
      }
      while ((_DWORD)(v171 * 16) != 256);
LABEL_79:
      result = 0;
      break;
    default:
LABEL_51:
      result = 4294958327;
      break;
  }
  return result;
}

uint64_t sub_216086D0C(int8x16_t *a1, unsigned int a2, uint64_t a3, int a4, int a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  int8x16_t v8;
  int16x8_t v9;
  int16x8_t v10;
  uint64_t v12;
  int16x8_t v13;
  int v14;
  int16x8_t v15;
  int16x8_t v16;
  int16x8_t v17;
  int v18;
  unsigned __int8 *v19;
  int v20;
  int v21;
  unsigned int v22;
  uint16x8_t v23;
  int v24;
  int v25;
  int8x16_t *v26;
  int8x16_t v27;
  int8x16_t v28;
  int8x16_t v29;
  int32x4_t v30;
  int32x4_t v31;
  int32x4_t v32;
  int32x4_t v33;
  int32x4_t v34;
  int16x8_t v35;
  int16x8_t v36;
  unsigned __int8 *v37;
  uint64_t v38;
  unsigned int v39;
  int16x8_t v40;
  int8x16_t *v41;
  unsigned int v42;
  uint64_t v43;
  int16x8_t v44;
  int16x8_t v45;
  int16x8_t v46;
  int16x8_t v47;
  int8x16_t v48;
  int16x8_t v49;
  int16x8_t v50;
  int16x8_t v51;
  int16x8_t v52;
  int16x8_t v53;
  uint64_t v54;

  switch(a6)
  {
    case 0:
      v6 = 0;
      v7 = a2 & 0xFFFFFFF0;
      v8 = *(int8x16_t *)((char *)a1 - v7);
      v9 = (int16x8_t)vzip1q_s8(v8, (int8x16_t)0);
      v10 = (int16x8_t)vzip2q_s8(v8, (int8x16_t)0);
      do
      {
        *a1 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(*(int16x8_t *)(a3 + v6), v9)), vaddq_s16(*(int16x8_t *)(a3 + v6 + 16), v10));
        a1 = (int8x16_t *)((char *)a1 + v7);
        v6 += 32;
      }
      while ((_DWORD)v6 != 512);
      return 0;
    case 1:
      v12 = 0;
      v13.i16[1] = 0;
      v13.i32[1] = 0;
      v13.i64[1] = 0;
      do
      {
        v13.i16[0] = a1[-1].u8[15] | (a1[-1].u8[15] << 8);
        v13 = (int16x8_t)vzip1q_s8(vqtbl1q_s8((int8x16_t)v13, (int8x16_t)xmmword_2160EE7D0), (int8x16_t)0);
        *a1 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(*(int16x8_t *)(a3 + v12), v13)), vaddq_s16(*(int16x8_t *)(a3 + v12 + 16), v13));
        a1 = (int8x16_t *)((char *)a1 + (a2 & 0xFFFFFFF0));
        v12 += 32;
      }
      while ((_DWORD)v12 != 512);
      return 0;
    case 2:
      if (a4 <= 0)
        v14 = 0;
      else
        v14 = -1;
      if (!(a5 | a4))
      {
        v53.i64[0] = 0x80008000800080;
        v53.i64[1] = 0x80008000800080;
        goto LABEL_29;
      }
      v15 = (int16x8_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(*(uint8x16_t *)((char *)a1 - (int)(v14 & a2)))));
      v16 = (int16x8_t)vqtbl1q_s8((int8x16_t)vaddq_s16(vaddq_s16(v15, (int16x8_t)xmmword_2160F18E0), (int16x8_t)vextq_s8((int8x16_t)v15, (int8x16_t)0, 8uLL)), (int8x16_t)xmmword_2160EE7D0);
      v17 = vzip1q_s16(v16, v16);
      if (!a5)
      {
        v23.i64[0] = 0x3000300030003;
        v23.i64[1] = 0x3000300030003;
        goto LABEL_27;
      }
      v18 = 0;
      v19 = &a1[-1].u8[15];
      v20 = 8;
      v21 = 8;
      do
      {
        v21 += *v19;
        v18 += v19[a2];
        v19 += 2 * a2;
        --v20;
      }
      while (v20);
      v22 = v18 + v21;
      if ((v14 & a5) != 0)
      {
        v17 = vaddq_s16(vdupq_n_s16(v22), v17);
        v23.i64[0] = 0x4000400040004;
        v23.i64[1] = 0x4000400040004;
LABEL_27:
        v53 = (int16x8_t)vshlq_u16((uint16x8_t)v17, v23);
        goto LABEL_29;
      }
      v53 = vdupq_n_s16(v22 >> 4);
LABEL_29:
      v54 = 0;
      do
      {
        *a1 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(*(int16x8_t *)(a3 + v54), v53)), vaddq_s16(*(int16x8_t *)(a3 + v54 + 16), v53));
        v54 += 32;
        a1 = (int8x16_t *)((char *)a1 + (a2 & 0xFFFFFFF0));
      }
      while ((_DWORD)v54 != 512);
      return 0;
    case 3:
      v24 = 0;
      v25 = 0;
      v26 = (int8x16_t *)((char *)a1 - a2);
      v27 = vzip1q_s8(*v26, (int8x16_t)0);
      v28 = vextq_s8(v27, v27, 0xEuLL);
      v28.i16[0] = v26[-1].u8[15];
      v29 = (int8x16_t)vsubq_s16((int16x8_t)vzip2q_s8(*v26, (int8x16_t)0), (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v28, (int8x16_t)xmmword_2160F1830), (int8x16_t)xmmword_2160F18D0), (int8x16_t)xmmword_2160F18B0));
      v30 = vpaddq_s32(vmull_s16(*(int16x4_t *)v29.i8, (int16x4_t)0x14000F000A0005), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v29, v29, 8uLL), (int16x4_t)0x280023001E0019));
      v31 = vaddq_s32(v30, (int32x4_t)vqtbl1q_s8((int8x16_t)v30, (int8x16_t)xmmword_2160F18B0));
      v32.i64[0] = 0x2000000020;
      v32.i64[1] = 0x2000000020;
      v33.i64[0] = 0x500000005;
      v33.i64[1] = 0x500000005;
      v34 = vshlq_s32(vaddq_s32((int32x4_t)vqtbl1q_s8((int8x16_t)v31, (int8x16_t)xmmword_2160EF0E0), vaddq_s32(v31, v32)), v33);
      v35 = vqmovn_high_s32(vqmovn_s32(v34), v34);
      v36 = vmlaq_s16(vdupq_n_s16(16 * (a1->u8[~a2 + 16 * a2] + a1->u8[15 - a2])), v35, (int16x8_t)xmmword_2160EE730);
      v37 = &a1[-1].u8[15];
      v38 = 2 * a2;
      v39 = -2;
      do
      {
        v24 += (v39 - 6) * v37[-a2];
        v25 += (v39 - 5) * *v37;
        v37 += v38;
        v39 += 2;
      }
      while (v39 < 6);
      v40 = vshlq_n_s16(v35, 3uLL);
      v41 = (int8x16_t *)((char *)a1 + 4 * v38 + ~(unint64_t)a2 + a2);
      v42 = -2;
      do
      {
        v24 += (v42 + 3) * v41->u8[0];
        v25 += (v42 + 4) * v41->u8[a2];
        v41 = (int8x16_t *)((char *)v41 + v38);
        v42 += 2;
      }
      while (v42 < 6);
      v43 = 0;
      v44 = vaddq_s16(v36, v40);
      v45 = vdupq_n_s16((5 * (v24 + v25) + 32) >> 6);
      v46.i64[0] = 0x10001000100010;
      v46.i64[1] = 0x10001000100010;
      v47 = vmlaq_s16(v46, v45, (int16x8_t)xmmword_2160EE730);
      v48 = (int8x16_t)vaddq_s16(vshlq_n_s16(v45, 3uLL), v47);
      v49.i64[0] = 0x4000400040004;
      v49.i64[1] = 0x4000400040004;
      v50.i64[0] = 0xFF00FF00FF00FFLL;
      v50.i64[1] = 0xFF00FF00FF00FFLL;
      do
      {
        v51 = (int16x8_t)vqtbl1q_s8((int8x16_t)v47, (int8x16_t)xmmword_2160EE7D0);
        v52 = vzip1q_s16(v51, v51);
        *a1 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(*(int16x8_t *)(a3 + v43), vmaxq_s16(vminq_s16(vshlq_s16(vaddq_s16(v52, v36), v49), v50), (int16x8_t)0))), vaddq_s16(*(int16x8_t *)(a3 + v43 + 16), vmaxq_s16(vminq_s16(vshlq_s16(vaddq_s16(v44, v52), v49), v50), (int16x8_t)0)));
        v47 = (int16x8_t)vextq_s8((int8x16_t)v47, v48, 2uLL);
        v48 = vextq_s8(v48, v48, 2uLL);
        a1 = (int8x16_t *)((char *)a1 + a2);
        v43 += 32;
      }
      while ((_DWORD)v43 != 512);
      return 0;
    default:
      return 4294958327;
  }
}

int *sub_2160870CC(int *result, uint64_t a2)
{
  int16x8_t v2;
  int16x8_t v3;
  int16x8_t v4;
  int16x8_t v5;
  int16x8_t v6;
  int16x8_t v7;
  int16x8_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 *v25;
  unsigned __int8 *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 *v29;
  _BOOL4 v30;
  unsigned __int8 *v31;
  _BOOL4 v32;
  _BOOL4 v33;
  _BOOL4 v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  char *v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  int *v44;
  uint16x8_t v45;
  uint16x8_t v46;
  int16x8_t v47;
  int16x8_t v48;
  uint16x8_t v49;
  uint64x2_t v50;
  uint64x2_t v51;
  uint64x2_t v52;
  uint32x4_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  unsigned int v60;
  int v61;
  unsigned int v62;
  int v63;
  int v64;
  unsigned int v65;
  int v66;
  int *v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t *v70;
  unsigned __int8 *v71;
  int v72;
  int v73;
  int16x8_t v74;
  int16x8_t v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  unsigned int v83;
  uint64_t v84;
  unsigned int v85;
  unsigned int v86;
  int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  int v92;
  int v93;
  unsigned int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  unsigned int v99;
  unsigned int v100;
  uint64_t v101;
  unsigned int v102;
  unsigned int v103;
  uint64_t *v104;
  int16x8_t v105;
  int16x8_t v106;
  int16x8_t v107;
  int16x8_t v108;
  int16x8_t v109;
  int16x8_t v110;
  int16x8_t v111;
  int v112;
  unsigned __int8 *v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  int16x8_t v134;
  int16x8_t v135;
  int16x8_t v136;
  int16x8_t v137;
  int v138;
  uint64_t *v139;
  int16x8_t v140;
  int16x8_t v141;
  int16x8_t v142;
  int16x8_t v143;
  int16x8_t v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  uint64_t *v152;
  int16x8_t v153;
  int16x8_t v154;
  int16x8_t v155;
  int16x8_t v156;
  int16x8_t v157;
  int16x8_t v158;
  uint64_t *v159;
  unsigned int v160;
  int64x2_t v161;
  uint64x2_t v162;
  int16x8_t v163;
  int16x8_t v164;
  int16x8_t v165;
  int16x8_t v166;
  int v167;
  unsigned __int8 *v168;
  int v169;
  int16x8_t v170;
  int16x8_t v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  int16x8_t v179;
  int16x8_t v180;
  int16x8_t v181;
  int16x8_t v182;
  unsigned int v183;
  int64x2_t v184;
  int16x8_t v185;
  int v186;
  unsigned __int8 *v187;
  uint64_t *v188;
  unsigned int v189;
  uint64x2_t v190;
  uint64_t *v191;
  int8x16_t v192;
  int8x16_t v193;
  int16x8_t v194;
  int16x8_t v195;
  int16x8_t v196;
  int16x8_t v197;
  int16x8_t v198;
  int64x2_t v199;
  int16x8_t v200;
  int16x8_t v201;
  int16x8_t v202;
  unsigned int v203;
  uint64_t *v204;
  uint64x2_t v205;
  int8x16_t v206;
  int8x16_t v207;
  int16x8_t v208;
  int16x8_t v209;
  int16x8_t v210;
  int16x8_t v211;
  int64x2_t v212;
  int16x8_t v213;
  int16x8_t v214;
  int8x16_t v215;
  int16x8_t v216;
  uint64x2_t v217;
  int8x16_t v218;
  int8x16_t v219;
  int16x8_t v220;
  int16x8_t v221;
  int16x8_t v222;
  int64x2_t v223;
  uint64x2_t v224;
  int8x16_t v225;
  int8x16_t v226;
  int16x8_t v227;
  int16x8_t v228;
  int8x16_t v229;
  int16x8_t v230;
  int64x2_t v231;
  uint64_t v232;
  unsigned __int8 *v233;
  unsigned __int8 *v234;
  uint64_t v235;
  uint64_t v236;

  v236 = *MEMORY[0x24BDAC8D0];
  v9 = *((_QWORD *)result + 27);
  v11 = *result;
  v10 = result[1];
  if (*((_BYTE *)result + 29) && *(_BYTE *)(v9 + 1363))
  {
    v12 = v9 + 504;
    v13 = *(unsigned int *)(v9 + 168);
    v14 = 2 * v13;
    v15 = *(unsigned __int8 *)(v9 + 32);
    v16 = *(_QWORD *)(v9 + 64) + (16 * v11);
    if (*((_BYTE *)result + 30))
    {
      if (v15)
        v17 = 5;
      else
        v17 = 4;
      v18 = ((v10 << v17) * v13);
      v16 += v13;
      goto LABEL_16;
    }
    v19 = v10 * v13;
    if (v15)
    {
      v18 = (32 * v19);
      goto LABEL_16;
    }
LABEL_15:
    v18 = (16 * v19);
    goto LABEL_16;
  }
  v12 = v9 + 440;
  v14 = *(_DWORD *)(v9 + 168);
  if (*((_BYTE *)result + 31) != 1)
  {
    if (*((_BYTE *)result + 31))
    {
      v21 = *(_QWORD *)(v9 + 64)
          + 32 * v14 * (result[4] / (2 * result[5]))
          + ((8 * (result[4] % (2 * result[5]))) & 0xFFFFFFF0)
          + ((result[4] << 31 >> 31) & v14);
      v12 = v9 + 504;
      v14 *= 2;
      goto LABEL_17;
    }
    v16 = *(_QWORD *)(v9 + 64) + (16 * v11);
    v19 = v10 * v14;
    goto LABEL_15;
  }
  v20 = result[4];
  v16 = *(_QWORD *)(v9 + 64) + 32 * v14 * (v20 / (2 * result[5])) + ((8 * (v20 % (2 * result[5]))) & 0xFFFFFFF0);
  v18 = ((int)(v20 << 31) >> 31) & (16 * v14);
LABEL_16:
  v21 = v16 + v18;
LABEL_17:
  v22 = *(unsigned __int8 *)(*((_QWORD *)result + 5) + 52);
  v23 = *((_QWORD *)result + 21);
  v24 = *((_QWORD *)result + 22) + 32;
  v26 = (unsigned __int8 *)*((_QWORD *)result + 16);
  v25 = (unsigned __int8 *)*((_QWORD *)result + 17);
  v28 = *((_QWORD *)result + 18);
  v27 = *((_QWORD *)result + 19);
  v234 = 0;
  v235 = 0;
  v232 = v24;
  v233 = 0;
  if (v26)
  {
    if (v26[64])
      v29 = v26 + 48;
    else
      v29 = v26 + 32;
    v233 = v29;
    v30 = 1;
    if (v25)
      goto LABEL_22;
  }
  else
  {
    v30 = 0;
    if (v25)
    {
LABEL_22:
      if (v25[64])
        v31 = v25 + 48;
      else
        v31 = v25 + 32;
      v234 = v31;
      v32 = 1;
      goto LABEL_28;
    }
  }
  v32 = 0;
  v234 = 0;
LABEL_28:
  v33 = v28 != 0;
  v34 = v27 != 0;
  if (v23)
  {
    if (*(_BYTE *)(v23 + 64))
      v35 = v23 + 48;
    else
      v35 = v23 + 32;
    v235 = v35;
  }
  else
  {
    v235 = 0;
  }
  v36 = *((_QWORD *)result + 6);
  if (*(_BYTE *)(v36 + 4))
  {
    if (v26)
    {
      if (v26[48] == 34)
      {
        v30 = v26[32] != 34;
        if (!v25)
          goto LABEL_38;
LABEL_43:
        if (v25[48] == 34)
        {
          v32 = v25[32] != 34;
          if (!v28)
            goto LABEL_45;
        }
        else
        {
          v32 = 1;
          if (!v28)
            goto LABEL_45;
        }
LABEL_39:
        if (*(_BYTE *)(v28 + 48) == 34)
        {
          v33 = *(unsigned __int8 *)(v28 + 32) != 34;
          if (!v27)
          {
LABEL_41:
            v34 = 0;
            goto LABEL_55;
          }
        }
        else
        {
          v33 = 1;
          if (!v27)
            goto LABEL_41;
        }
        goto LABEL_46;
      }
      v30 = 1;
      if (v25)
        goto LABEL_43;
    }
    else
    {
      v30 = 0;
      if (v25)
        goto LABEL_43;
    }
LABEL_38:
    v32 = 0;
    if (v28)
      goto LABEL_39;
LABEL_45:
    v33 = 0;
    if (!v27)
      goto LABEL_41;
LABEL_46:
    v34 = *(_BYTE *)(v27 + 48) != 34 || *(unsigned __int8 *)(v27 + 32) != 34;
  }
LABEL_55:
  v37 = (2 * v33) | (4 * v32) | (8 * v30) | v34;
  v38 = &byte_254E10D40;
  if (v26 && (*((_BYTE *)result + 185) & 1) != 0)
  {
    v39 = *((unsigned __int8 *)result + 31);
    if (v39 != 2 || v26[144])
    {
      if (v39 == 1 && v26[144] == 1)
      {
        if ((result[4] & 1) != 0)
          v38 = (char *)&unk_254E10DD8;
        else
          v38 = (char *)&unk_254E10DA8;
      }
    }
    else
    {
      v38 = (char *)&unk_254E10D78;
    }
  }
  v40 = 0;
  v41 = 2 * v14;
  v42 = 3 * v14;
  v43 = v38 + 16;
  v44 = (int *)((char *)&unk_2160F1F08 + 4 * v37);
  v45.i64[0] = 0xE000E000E000ELL;
  v45.i64[1] = 0xE000E000E000ELL;
  v46.i64[0] = -1;
  v46.i64[1] = -1;
  v47 = (int16x8_t)vshlq_u16(v46, v45);
  v48 = vaddq_s16(v47, v47);
  v49.i64[0] = 0x1000100010001;
  v49.i64[1] = 0x1000100010001;
  v50 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF0uLL);
  v51 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
  v52 = (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL);
  v53.i64[0] = 0xF0000000FLL;
  v53.i64[1] = 0xF0000000FLL;
  while (2)
  {
    v54 = v43[v40 - 16];
    if (v26 && v40 >= 8 && *((_BYTE *)result + 31) == 2 && !v26[144])
      v55 = !(v54 & 1) | (2 * !(v54 & 1));
    else
      v55 = !(v54 & 1);
    v56 = v43[v40];
    v57 = *(&v232 + (~(2 * (_BYTE)v56) & 2));
    v58 = *(&v232 + v55);
    if (v57)
      v59 = v58 == 0;
    else
      v59 = 1;
    if (v59
      || (v60 = *(unsigned __int8 *)(v58 + ((v54 >> 1) & 0xF)),
          v61 = *(unsigned __int8 *)(v57 + ((v56 >> 1) & 0xF)),
          (*(unsigned __int8 *)(*((_QWORD *)result + 6) + 4) & ((v61 | v60) >> 5) & 1) != 0))
    {
      v62 = 2;
    }
    else
    {
      v62 = (((v60 & 0xF) - (v61 & 0xF)) & ((int)((v60 & 0xF) - (v61 & 0xF)) >> 31)) + (v61 & 0xF);
    }
    v64 = *v44;
    v44 += 16;
    v63 = v64;
    v65 = *(unsigned __int8 *)(v36 + v40 + 310);
    if (v62 <= v65)
      ++v65;
    v66 = v65 & (*(unsigned __int8 *)(v36 + v40 + 290) - 1) | v62 & -*(unsigned __int8 *)(v36 + v40 + 290);
    *(_BYTE *)(v24 + v40) = v66;
    v67 = (int *)(v21 + *(unsigned int *)(v12 + 4 * v40));
    switch(v66)
    {
      case 0:
        v68 = BYTE1(v63) * v14;
        if (v22)
        {
          v69 = (uint64_t *)(a2 + 2 * byte_2160F2308[v40]);
          v2.i64[0] = *v69;
          v3.i64[0] = v69[4];
          v4.i64[0] = v69[8];
          v5.i64[0] = v69[12];
          v6.i32[0] = *(int *)((char *)v67 - v68);
          v6 = (int16x8_t)vzip1q_s8((int8x16_t)v6, (int8x16_t)0);
          v2 = vaddq_s16(v6, v2);
          v3 = vaddq_s16(v3, v6);
          v4 = vaddq_s16(v4, v6);
          v5 = vaddq_s16(v5, v6);
          goto LABEL_182;
        }
        v112 = *(int *)((char *)v67 - v68);
        goto LABEL_196;
      case 1:
        if (v22)
        {
          v70 = (uint64_t *)(a2 + 2 * byte_2160F2308[v40]);
          v71 = (unsigned __int8 *)v67 - v63;
          v72 = *v71 | (*v71 << 8);
          v73 = v71[v14] | (v71[v14] << 8);
          v2.i64[0] = *v70;
          v3.i64[0] = v70[4];
          v4.i32[0] = v72 | (v72 << 16);
          v4 = (int16x8_t)vzip1q_s8((int8x16_t)v4, (int8x16_t)0);
          v5.i32[0] = v73 | (v73 << 16);
          v5 = (int16x8_t)vzip1q_s8((int8x16_t)v5, (int8x16_t)0);
          v74 = vaddq_s16(v4, v2);
          v75 = vaddq_s16(v5, v3);
          *(int8x8_t *)v74.i8 = vqmovun_s16(v74);
          *(int8x8_t *)v75.i8 = vqmovun_s16(v75);
          *v67 = v74.i32[0];
          *(int *)((char *)v67 + v14) = v75.i32[0];
          v76 = v71[v41] | (v71[v41] << 8);
          LODWORD(v71) = v71[v42] | (v71[v42] << 8);
          v74.i32[0] = v76 | (v76 << 16);
          v75.i32[0] = v71 | ((_DWORD)v71 << 16);
          v4.i64[0] = v70[8];
          v5.i64[0] = v70[12];
          v2 = vaddq_s16((int16x8_t)vzip1q_s8((int8x16_t)v74, (int8x16_t)0), v4);
          v3 = vaddq_s16((int16x8_t)vzip1q_s8((int8x16_t)v75, (int8x16_t)0), v5);
          *(int8x8_t *)v2.i8 = vqmovun_s16(v2);
          *(int8x8_t *)v3.i8 = vqmovun_s16(v3);
          goto LABEL_183;
        }
        v113 = (unsigned __int8 *)v67 - v63;
        v114 = *v113 | (*v113 << 8);
        v115 = v113[v14] | (v113[v14] << 8);
        *v67 = v114 | (v114 << 16);
        *(int *)((char *)v67 + v14) = v115 | (v115 << 16);
        v116 = v113[v41] | (v113[v41] << 8);
        LODWORD(v113) = v113[v42] | (v113[v42] << 8);
        v112 = v113 | ((_DWORD)v113 << 16);
        *(int *)((char *)v67 + v41) = v116 | (v116 << 16);
        goto LABEL_197;
      case 2:
        v77 = v63;
        v78 = BYTE1(v63);
        if (v22)
        {
          if (v77)
          {
            v79 = *((unsigned __int8 *)v67 - 1);
            v80 = *((unsigned __int8 *)v67 + v14 - 1);
            v81 = *((unsigned __int8 *)v67 + v41 - 1);
            v82 = *((unsigned __int8 *)v67 + v42 - 1);
            if (v78)
            {
              v2.i32[0] = *(int *)((char *)v67 - v14);
              v2 = (int16x8_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v2.i8));
              v83 = (vaddvq_s32((int32x4_t)v2) + v82 + v81 + v80 + v79 + 4) >> 3;
LABEL_181:
              v188 = (uint64_t *)(a2 + 2 * byte_2160F2308[v40]);
              v2.i64[0] = *v188;
              v3.i64[0] = v188[4];
              v4.i64[0] = v188[8];
              v5.i64[0] = v188[12];
              v6 = (int16x8_t)vzip1q_s8((int8x16_t)(v83 | (v83 << 8) | ((v83 | (v83 << 8)) << 16)), (int8x16_t)0);
              v2 = vaddq_s16(v6, v2);
              v3 = vaddq_s16(v6, v3);
              v4 = vaddq_s16(v6, v4);
              v5 = vaddq_s16(v6, v5);
LABEL_182:
              *v67 = vqmovun_s16(v2).u32[0];
              *(int *)((char *)v67 + v14) = vqmovun_s16(v3).u32[0];
              *(int8x8_t *)v2.i8 = vqmovun_s16(v4);
              *(int8x8_t *)v3.i8 = vqmovun_s16(v5);
LABEL_183:
              *(int *)((char *)v67 + v41) = v2.i32[0];
              *(int *)((char *)v67 + v42) = v3.i32[0];
              goto LABEL_205;
            }
            v138 = v79 + v80 + v81 + v82;
          }
          else
          {
            if (!v78)
            {
              v83 = 128;
              goto LABEL_181;
            }
            v2.i32[0] = *(int *)((char *)v67 - v14);
            v2 = (int16x8_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v2.i8));
            v138 = vaddvq_s32((int32x4_t)v2);
          }
          v83 = (v138 + 2) >> 2;
          goto LABEL_181;
        }
        if (v77)
        {
          v117 = *((unsigned __int8 *)v67 - 1);
          v118 = *((unsigned __int8 *)v67 + v14 - 1);
          v119 = *((unsigned __int8 *)v67 + v41 - 1);
          v120 = *((unsigned __int8 *)v67 + v42 - 1);
          if (v78)
          {
            v2.i32[0] = *(int *)((char *)v67 - v14);
            v2 = (int16x8_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v2.i8));
            v121 = (vaddvq_s32((int32x4_t)v2) + v120 + v119 + v118 + v117 + 4) >> 3;
            goto LABEL_195;
          }
          v169 = v117 + v118 + v119 + v120;
          goto LABEL_172;
        }
        if (v78)
        {
          v2.i32[0] = *(int *)((char *)v67 - v14);
          v2 = (int16x8_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v2.i8));
          v169 = vaddvq_s32((int32x4_t)v2);
LABEL_172:
          v121 = (v169 + 2) >> 2;
          goto LABEL_195;
        }
        v121 = 128;
LABEL_195:
        v112 = v121 | (v121 << 8) | ((v121 | (v121 << 8)) << 16);
LABEL_196:
        *v67 = v112;
        *(int *)((char *)v67 + v14) = v112;
        *(int *)((char *)v67 + v41) = v112;
LABEL_197:
        *(int *)((char *)v67 + v42) = v112;
        goto LABEL_205;
      case 3:
        if ((v63 & 0xFF00) != 0)
          v84 = -(uint64_t)v14;
        else
          v84 = 0;
        if (v22)
        {
          v85 = *(int *)((char *)v67 + v84);
          if ((v63 & 0xFF0000) != 0)
            v86 = *(int *)((char *)v67 - v14 + 4);
          else
            v86 = v85 & 0xFF000000 | ((v85 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v85 & 0xFF000000 | ((v85 & 0xFF000000) >> 8)) >> 16);
          v139 = (uint64_t *)(a2 + 2 * byte_2160F2308[v40]);
          v3.i32[0] = v86;
          v140 = (int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v3, 0xCuLL), (int8x16_t)v85), (int8x16_t)0);
          v141 = (int16x8_t)vextq_s8((int8x16_t)vaddq_s16(v140, v140), (int8x16_t)0, 2uLL);
          v142 = vaddq_s16(v48, (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v140, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_2160EF100));
          v143 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v142, vaddq_s16(v141, v140)), v49);
          v141.i64[0] = *v139;
          v142.i64[0] = v139[4];
          v5.i64[0] = v139[8];
          v6.i64[0] = v139[12];
          v3 = vaddq_s16(v143, v141);
          v4 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v143, (int8x16_t)0, 2uLL), v142);
          v7 = (int16x8_t)vextq_s8((int8x16_t)v143, (int8x16_t)0, 4uLL);
          v5 = vaddq_s16(v7, v5);
          v144 = (int16x8_t)vextq_s8((int8x16_t)v143, (int8x16_t)0, 6uLL);
          goto LABEL_153;
        }
        v122 = *(int *)((char *)v67 + v84);
        if ((v63 & 0xFF0000) != 0)
          v123 = *(int *)((char *)v67 - v14 + 4);
        else
          v123 = v122 & 0xFF000000 | ((v122 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v122 & 0xFF000000 | ((v122 & 0xFF000000) >> 8)) >> 16);
        v3.i32[0] = v123;
        v170 = (int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v3, 0xCuLL), (int8x16_t)v122), (int8x16_t)0);
        v3 = (int16x8_t)vextq_s8((int8x16_t)vaddq_s16(v170, v170), (int8x16_t)0, 2uLL);
        v171 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v48, (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v170, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_2160EF100)), vaddq_s16(v3, v170)), v49);
        *(int8x8_t *)v3.i8 = vqmovun_s16(v171);
        v4 = (int16x8_t)vextq_s8((int8x16_t)v171, (int8x16_t)0, 2uLL);
        *(int8x8_t *)v4.i8 = vqmovun_s16(v4);
        v5 = (int16x8_t)vextq_s8((int8x16_t)v171, (int8x16_t)0, 4uLL);
        *(int8x8_t *)v5.i8 = vqmovun_s16(v5);
        *v67 = v3.i32[0];
        *(int *)((char *)v67 + v14) = v4.i32[0];
        v2 = (int16x8_t)vextq_s8((int8x16_t)v171, (int8x16_t)0, 6uLL);
        goto LABEL_170;
      case 4:
        v87 = v63;
        v88 = BYTE1(v63);
        if (!v22)
        {
          if (v87)
          {
            if (v88)
            {
              v124 = *(int *)((char *)v67 - v14);
              v125 = *((unsigned __int8 *)v67 - v14 - 1);
            }
            else
            {
              v124 = *v67;
              v125 = *v67;
            }
            v172 = *((unsigned __int8 *)v67 + v42 - 1) | (*((unsigned __int8 *)v67 + v41 - 1) << 8) | (*((unsigned __int8 *)v67 + v14 - 1) << 16);
            v173 = *((unsigned __int8 *)v67 - 1);
          }
          else if (v88)
          {
            v124 = *(int *)((char *)v67 - v14);
            v125 = v124;
            v172 = *((unsigned __int8 *)v67 + v42) | (*((unsigned __int8 *)v67 + v41) << 8) | (*((unsigned __int8 *)v67
                                                                                               + v14) << 16);
            v173 = *(unsigned __int8 *)v67;
          }
          else
          {
            v173 = *v67;
            v125 = *v67;
            v172 = *((unsigned __int8 *)v67 + v42) | (*((unsigned __int8 *)v67 + v41) << 8) | (*((unsigned __int8 *)v67
                                                                                               + v14) << 16);
            v124 = *v67;
          }
          v183 = v172 | (v173 << 24);
          v184 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v124, 8uLL), (int8x16_t)v125);
          v6 = (int16x8_t)vshlq_u64((uint64x2_t)v183, v51);
          v185 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)v6, (int8x16_t)vshlq_n_s64(v184, 0x18uLL)), (int8x16_t)0);
          v2 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v185, v185), (int16x8_t)vzip1q_s8(vqtbl1q_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)v183, v50), (int8x16_t)vshlq_n_s64(v184, 0x10uLL)), (int8x16_t)xmmword_2160EE840), (int8x16_t)0)), vaddq_s16(v48, (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vshlq_u64((uint64x2_t)v184, v50), 0x20uLL), (int8x16_t)v183), (int8x16_t)0))),
                            v49);
          v3 = (int16x8_t)vextq_s8((int8x16_t)v2, (int8x16_t)0, 6uLL);
          v3.i32[0] = vqmovun_s16(v3).u32[0];
          v4 = (int16x8_t)vextq_s8((int8x16_t)v2, (int8x16_t)0, 4uLL);
          *(int8x8_t *)v4.i8 = vqmovun_s16(v4);
          v5 = (int16x8_t)vextq_s8((int8x16_t)v2, (int8x16_t)0, 2uLL);
          goto LABEL_192;
        }
        if (v87)
        {
          if (v88)
          {
            v89 = *(int *)((char *)v67 - v14);
            v90 = *((unsigned __int8 *)v67 - v14 - 1);
          }
          else
          {
            v89 = *v67;
            v90 = *v67;
          }
          v145 = *((unsigned __int8 *)v67 + v42 - 1) | (*((unsigned __int8 *)v67 + v41 - 1) << 8) | (*((unsigned __int8 *)v67 + v14 - 1) << 16);
          v146 = *((unsigned __int8 *)v67 - 1);
        }
        else if (v88)
        {
          v89 = *(int *)((char *)v67 - v14);
          v90 = v89;
          v145 = *((unsigned __int8 *)v67 + v42) | (*((unsigned __int8 *)v67 + v41) << 8) | (*((unsigned __int8 *)v67
                                                                                             + v14) << 16);
          v146 = *(unsigned __int8 *)v67;
        }
        else
        {
          v146 = *v67;
          v90 = *v67;
          v145 = *((unsigned __int8 *)v67 + v42) | (*((unsigned __int8 *)v67 + v41) << 8) | (*((unsigned __int8 *)v67
                                                                                             + v14) << 16);
          v89 = *v67;
        }
        v159 = (uint64_t *)(a2 + 2 * byte_2160F2308[v40]);
        v160 = v145 | (v146 << 24);
        v161 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v89, 8uLL), (int8x16_t)v90);
        v162 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF0uLL);
        v163 = (int16x8_t)vzip1q_s8(vqtbl1q_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)v160, v162), (int8x16_t)vshlq_n_s64(v161, 0x10uLL)), (int8x16_t)xmmword_2160EE840), (int8x16_t)0);
        v164 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)v160, (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL)), (int8x16_t)vshlq_n_s64(v161, 0x18uLL)), (int8x16_t)0);
        v6 = vaddq_s16(v164, v164);
        v165 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vshlq_u64((uint64x2_t)v161, v162), 0x20uLL), (int8x16_t)v160), (int8x16_t)0);
        v166 = vaddq_s16(v6, v163);
        v144 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v166, vaddq_s16(v48, v165)), v49);
        v166.i64[0] = *v159;
        v163.i64[0] = v159[8];
        v6.i64[0] = v159[12];
        v3 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v144, (int8x16_t)0, 6uLL), v166);
        v4 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v144, (int8x16_t)0, 4uLL), (int16x8_t)(unint64_t)v159[4]);
        v7 = (int16x8_t)vextq_s8((int8x16_t)v144, (int8x16_t)0, 2uLL);
        v5 = vaddq_s16(v7, v163);
LABEL_153:
        v2 = vaddq_s16(v144, v6);
        goto LABEL_191;
      case 5:
        v91 = v63;
        v92 = BYTE1(v63);
        if (v22)
        {
          if (v91)
          {
            if (v92)
            {
              v93 = *(int *)((char *)v67 - v14);
              v94 = v93 | (*((unsigned __int8 *)v67 - v14 - 1) << 8);
            }
            else
            {
              v93 = *v67;
              v94 = *v67 | (*v67 << 8);
            }
            v167 = *((unsigned __int8 *)v67 - 1) | (*((unsigned __int8 *)v67 + v14 - 1) << 8);
            v168 = (unsigned __int8 *)v67 + v41 - 1;
          }
          else
          {
            if (v92)
            {
              v93 = *(int *)((char *)v67 - v14);
              v94 = v93 | (v93 << 8);
              v147 = *(unsigned __int8 *)v67;
            }
            else
            {
              v93 = *v67;
              v147 = *v67;
              v94 = v147 | (v147 << 8);
            }
            v167 = v147 | (*((unsigned __int8 *)v67 + v14) << 8);
            v168 = (unsigned __int8 *)v67 + v41;
          }
          v189 = v93;
          v190 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
          v191 = (uint64_t *)(a2 + 2 * byte_2160F2308[v40]);
          v192 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v189, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v94, v190));
          v193 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)(v167 | (*v168 << 16)), 0x10uLL), (int8x16_t)v94);
          v194 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v192, v190), (int8x16_t)0);
          v7 = (int16x8_t)vdupq_n_s64(0xFFFFFFF0uLL);
          v195 = vaddq_s16(v194, (int16x8_t)vzip1q_s8(v192, (int8x16_t)0));
          v196 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v195, v47), v46);
          v6 = vaddq_s16(v48, v194);
          v197 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v6, v195), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v192, (uint64x2_t)v7), (int8x16_t)0)), v49);
          v198 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v193, v190), (int8x16_t)0);
          v199 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v48, (int16x8_t)vzip1q_s8(v193, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v193, (uint64x2_t)v7), (int8x16_t)0)), vaddq_s16(v198, v198)), v49);
          v200 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v196, 0xEuLL);
          v201 = (int16x8_t)vorrq_s8((int8x16_t)v200, (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64(v199, 0x20uLL), (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL)));
          v202 = (int16x8_t)vextq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vqtbl1q_s8((int8x16_t)v199, (int8x16_t)xmmword_2160F1940), 0), (int8x16_t)v197, 0xCuLL);
          v197.i64[0] = *v191;
          v200.i64[0] = v191[4];
          v6.i64[0] = v191[8];
          v7.i64[0] = v191[12];
          v3 = vaddq_s16(v196, v197);
          v8 = (int16x8_t)vextq_s8((int8x16_t)v202, (int8x16_t)0, 2uLL);
          v5 = vaddq_s16(v8, v200);
          v4 = vaddq_s16(v6, v201);
          v2 = vaddq_s16(v7, v202);
          v3.i32[0] = vqmovun_s16(v3).u32[0];
        }
        else
        {
          if (v91)
          {
            if (v92)
            {
              v126 = *(int *)((char *)v67 - v14);
              v127 = v126 | (*((unsigned __int8 *)v67 - v14 - 1) << 8);
            }
            else
            {
              v126 = *v67;
              v127 = *v67 | (*v67 << 8);
            }
            v186 = *((unsigned __int8 *)v67 - 1) | (*((unsigned __int8 *)v67 + v14 - 1) << 8);
            v187 = (unsigned __int8 *)v67 + v41 - 1;
          }
          else
          {
            if (v92)
            {
              v126 = *(int *)((char *)v67 - v14);
              v127 = v126 | (v126 << 8);
              v174 = *(unsigned __int8 *)v67;
            }
            else
            {
              v126 = *v67;
              v174 = *v67;
              v127 = v174 | (v174 << 8);
            }
            v186 = v174 | (*((unsigned __int8 *)v67 + v14) << 8);
            v187 = (unsigned __int8 *)v67 + v41;
          }
          v217 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
          v218 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v126, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v127, v217));
          v219 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)(v186 | (*v187 << 16)), 0x10uLL), (int8x16_t)v127);
          v220 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v218, v217), (int8x16_t)0);
          v7 = (int16x8_t)vdupq_n_s64(0xFFFFFFF0uLL);
          v221 = vaddq_s16(v220, (int16x8_t)vzip1q_s8(v218, (int8x16_t)0));
          v8 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v221, v47), v46);
          v6 = vaddq_s16(v48, v220);
          v3 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v6, v221), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v218, (uint64x2_t)v7), (int8x16_t)0)), v49);
          v222 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v219, v217), (int8x16_t)0);
          v223 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v48, (int16x8_t)vzip1q_s8(v219, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v219, (uint64x2_t)v7), (int8x16_t)0)), vaddq_s16(v222, v222)), v49);
          v4 = (int16x8_t)vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v8, 0xEuLL), (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64(v223, 0x20uLL), v52));
          v2 = (int16x8_t)vextq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vqtbl1q_s8((int8x16_t)v223, (int8x16_t)xmmword_2160F1940), 0), (int8x16_t)v3, 0xCuLL);
          v3.i32[0] = vqmovun_s16(v8).u32[0];
          v5 = (int16x8_t)vextq_s8((int8x16_t)v2, (int8x16_t)0, 2uLL);
        }
        *(int8x8_t *)v5.i8 = vqmovun_s16(v5);
        *v67 = v3.i32[0];
        *(int *)((char *)v67 + v14) = v5.i32[0];
        *(int8x8_t *)v3.i8 = vqmovun_s16(v4);
        goto LABEL_203;
      case 6:
        v95 = v63;
        v96 = BYTE1(v63);
        if (v22)
        {
          if (v95)
          {
            if (v96)
            {
              v97 = *(int *)((char *)v67 - v14);
              v98 = *((unsigned __int8 *)v67 - 1);
              v99 = (*((unsigned __int8 *)v67 + v41 - 1) << 16) | (*((unsigned __int8 *)v67 + v14 - 1) << 8) | (*((unsigned __int8 *)v67 + v42 - 1) << 24) | v98;
              v100 = v98 | (*((unsigned __int8 *)v67 - v14 - 1) << 8);
LABEL_190:
              v203 = v97;
              v204 = (uint64_t *)(a2 + 2 * byte_2160F2308[v40]);
              v205 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
              v206 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v99, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v100, v205));
              v207 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v203, 0x10uLL), (int8x16_t)v100);
              v208 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v206, v205), (int8x16_t)0);
              v7 = (int16x8_t)vdupq_n_s64(0xFFFFFFF0uLL);
              v209 = vaddq_s16(v208, (int16x8_t)vzip1q_s8(v206, (int8x16_t)0));
              v8 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v209, v47), v46);
              v6 = vaddq_s16(v48, v208);
              v210 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v6, v209), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v206, (uint64x2_t)v7), (int8x16_t)0)), v49);
              v211 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v207, v205), (int8x16_t)0);
              v212 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v48, (int16x8_t)vzip1q_s8(v207, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v207, (uint64x2_t)v7), (int8x16_t)0)), vaddq_s16(v211, v211)), v49);
              v213 = (int16x8_t)vorrq_s8((int8x16_t)vshlq_n_s64(v212, 0x10uLL), (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64((int64x2_t)v8, 0x30uLL), (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL)));
              v214 = (int16x8_t)vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)v8, (int8x16_t)xmmword_2160F1910), (int32x4_t)0);
              v215 = vqtbl1q_s8(vorrq_s8(vqtbl1q_s8(vextq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v210, 6uLL), (int8x16_t)0, 8uLL), (int8x16_t)xmmword_2160F1900), vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vextq_s8((int8x16_t)0, (int8x16_t)v212, 2uLL), v53), (int8x16_t)v214)), (int8x16_t)xmmword_2160F1920);
              v210.i64[1] = 0xF0E0D0C0B0A0908;
              v216 = (int16x8_t)vqtbl1q_s8(v215, (int8x16_t)xmmword_2160F1930);
              v210.i64[0] = *v204;
              v214.i64[0] = v204[4];
              v6.i64[0] = v204[8];
              v7.i64[0] = v204[12];
              v3 = vaddq_s16(v210, v213);
              v4 = vaddq_s16((int16x8_t)vdupq_laneq_s64((int64x2_t)v216, 1), v214);
              v5 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v216, (int8x16_t)0, 4uLL), v6);
              v2 = vaddq_s16(v7, v216);
              goto LABEL_191;
            }
            v97 = *v67;
            v148 = *((unsigned __int8 *)v67 - 1);
            v149 = *((unsigned __int8 *)v67 + v14 - 1);
            v150 = *((unsigned __int8 *)v67 + v41 - 1) << 16;
            v151 = *((unsigned __int8 *)v67 + v42 - 1);
          }
          else
          {
            if (!v96)
            {
              v97 = *v67;
              v148 = *v67;
              v99 = (*((unsigned __int8 *)v67 + v41) << 16) | (*((unsigned __int8 *)v67 + v14) << 8) | (*((unsigned __int8 *)v67 + v42) << 24) | v148;
              goto LABEL_189;
            }
            v97 = *(int *)((char *)v67 - v14);
            v148 = *(unsigned __int8 *)v67;
            v149 = *((unsigned __int8 *)v67 + v14);
            v150 = *((unsigned __int8 *)v67 + v41) << 16;
            v151 = *((unsigned __int8 *)v67 + v42);
          }
          v99 = v150 | (v149 << 8) | (v151 << 24) | v148;
LABEL_189:
          v100 = v148 & 0xFFFF00FF | (v97 << 8);
          goto LABEL_190;
        }
        if (v95)
        {
          if (v96)
          {
            v128 = *(int *)((char *)v67 - v14);
            v129 = *((unsigned __int8 *)v67 - 1);
            v130 = (*((unsigned __int8 *)v67 + v41 - 1) << 16) | (*((unsigned __int8 *)v67 + v14 - 1) << 8) | (*((unsigned __int8 *)v67 + v42 - 1) << 24) | v129;
            v131 = v129 | (*((unsigned __int8 *)v67 - v14 - 1) << 8);
            goto LABEL_209;
          }
          v128 = *v67;
          v175 = *((unsigned __int8 *)v67 - 1);
          v176 = *((unsigned __int8 *)v67 + v14 - 1);
          v177 = *((unsigned __int8 *)v67 + v41 - 1) << 16;
          v178 = *((unsigned __int8 *)v67 + v42 - 1);
          goto LABEL_179;
        }
        if (v96)
        {
          v128 = *(int *)((char *)v67 - v14);
          v175 = *(unsigned __int8 *)v67;
          v176 = *((unsigned __int8 *)v67 + v14);
          v177 = *((unsigned __int8 *)v67 + v41) << 16;
          v178 = *((unsigned __int8 *)v67 + v42);
LABEL_179:
          v130 = v177 | (v176 << 8) | (v178 << 24) | v175;
          goto LABEL_208;
        }
        v128 = *v67;
        v175 = *v67;
        v130 = (*((unsigned __int8 *)v67 + v41) << 16) | (*((unsigned __int8 *)v67 + v14) << 8) | (*((unsigned __int8 *)v67 + v42) << 24) | v175;
LABEL_208:
        v131 = v175 & 0xFFFF00FF | (v128 << 8);
LABEL_209:
        v224 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
        v225 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v130, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v131, v224));
        v226 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v128, 0x10uLL), (int8x16_t)v131);
        v227 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v225, v224), (int8x16_t)0);
        v7 = (int16x8_t)vdupq_n_s64(0xFFFFFFF0uLL);
        v228 = vaddq_s16(v227, (int16x8_t)vzip1q_s8(v225, (int8x16_t)0));
        v8 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v228, v47), v46);
        v6 = vaddq_s16(v48, v227);
        v229 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v6, v228), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v225, (uint64x2_t)v7), (int8x16_t)0)), v49);
        v230 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v226, v224), (int8x16_t)0);
        v231 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v48, (int16x8_t)vzip1q_s8(v226, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v226, (uint64x2_t)v7), (int8x16_t)0)), vaddq_s16(v230, v230)), v49);
        v4 = (int16x8_t)vorrq_s8((int8x16_t)vshlq_n_s64(v231, 0x10uLL), (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64((int64x2_t)v8, 0x30uLL), (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL)));
        v2 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vorrq_s8(vqtbl1q_s8(vextq_s8(vextq_s8((int8x16_t)0, v229, 6uLL), (int8x16_t)0, 8uLL), (int8x16_t)xmmword_2160F1900), vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vextq_s8((int8x16_t)0, (int8x16_t)v231, 2uLL), v53), (int8x16_t)vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)v8, (int8x16_t)xmmword_2160F1910), (int32x4_t)0))), (int8x16_t)xmmword_2160F1920), (int8x16_t)xmmword_2160F1930);
        v3 = (int16x8_t)vdupq_laneq_s64((int64x2_t)v2, 1);
        *(int8x8_t *)v4.i8 = vqmovun_s16(v4);
        v5 = (int16x8_t)vextq_s8((int8x16_t)v2, (int8x16_t)0, 4uLL);
        *v67 = v4.i32[0];
        *(int *)((char *)v67 + v14) = vqmovun_s16(v3).u32[0];
LABEL_193:
        *(int8x8_t *)v3.i8 = vqmovun_s16(v5);
LABEL_203:
        *(int8x8_t *)v2.i8 = vqmovun_s16(v2);
        *(int *)((char *)v67 + v41) = v3.i32[0];
LABEL_204:
        *(int *)((char *)v67 + v42) = v2.i32[0];
LABEL_205:
        if (++v40 != 16)
          continue;
        return result;
      case 7:
        if ((v63 & 0xFF00) != 0)
          v101 = -(uint64_t)v14;
        else
          v101 = 0;
        if (!v22)
        {
          v132 = *(int *)((char *)v67 + v101);
          if ((v63 & 0xFF0000) != 0)
            v133 = *(int *)((char *)v67 - v14 + 4);
          else
            v133 = v132 & 0xFF000000 | ((v132 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v132 & 0xFF000000 | ((v132 & 0xFF000000) >> 8)) >> 16);
          v3.i32[0] = v133;
          v179 = (int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v3, 0xCuLL), (int8x16_t)v132), (int8x16_t)0);
          v180 = (int16x8_t)vextq_s8((int8x16_t)v179, (int8x16_t)0, 2uLL);
          v4 = vaddq_s16(v180, v179);
          v181 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v4, v47), v46);
          v3 = vaddq_s16(v48, v180);
          v182 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v3, (int16x8_t)vextq_s8((int8x16_t)v179, (int8x16_t)0, 4uLL)), v4), v49);
          *(int8x8_t *)v3.i8 = vqmovun_s16(v181);
          *(int8x8_t *)v4.i8 = vqmovun_s16(v182);
          v5 = (int16x8_t)vextq_s8((int8x16_t)v181, (int8x16_t)0, 2uLL);
          *(int8x8_t *)v5.i8 = vqmovun_s16(v5);
          *v67 = v3.i32[0];
          *(int *)((char *)v67 + v14) = v4.i32[0];
          v2 = (int16x8_t)vextq_s8((int8x16_t)v182, (int8x16_t)0, 2uLL);
LABEL_170:
          *(int8x8_t *)v2.i8 = vqmovun_s16(v2);
          *(int *)((char *)v67 + v41) = v5.i32[0];
          goto LABEL_204;
        }
        v102 = *(int *)((char *)v67 + v101);
        if ((v63 & 0xFF0000) != 0)
          v103 = *(int *)((char *)v67 - v14 + 4);
        else
          v103 = v102 & 0xFF000000 | ((v102 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v102 & 0xFF000000 | ((v102 & 0xFF000000) >> 8)) >> 16);
        v152 = (uint64_t *)(a2 + 2 * byte_2160F2308[v40]);
        v3.i32[0] = v103;
        v153 = (int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v3, 0xCuLL), (int8x16_t)v102), (int8x16_t)0);
        v154 = (int16x8_t)vextq_s8((int8x16_t)v153, (int8x16_t)0, 2uLL);
        v155 = vaddq_s16(v154, v153);
        v156 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v155, v47), v46);
        v157 = vaddq_s16(v48, v154);
        v158 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v157, (int16x8_t)vextq_s8((int8x16_t)v153, (int8x16_t)0, 4uLL)), v155), v49);
        v157.i64[0] = *v152;
        v155.i64[0] = v152[4];
        v6.i64[0] = v152[8];
        v7.i64[0] = v152[12];
        v3 = vaddq_s16(v156, v157);
        v4 = vaddq_s16(v158, v155);
        v5 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v156, (int8x16_t)0, 2uLL), v6);
        v2 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v158, (int8x16_t)0, 2uLL), v7);
LABEL_191:
        v3.i32[0] = vqmovun_s16(v3).u32[0];
        *(int8x8_t *)v4.i8 = vqmovun_s16(v4);
LABEL_192:
        *v67 = v3.i32[0];
        *(int *)((char *)v67 + v14) = v4.i32[0];
        goto LABEL_193;
      case 8:
        if (v22)
        {
          v104 = (uint64_t *)(a2 + 2 * byte_2160F2308[v40]);
          v105 = (int16x8_t)vzip1q_s8((int8x16_t)(*((unsigned __int8 *)v67 - v63) | (*((unsigned __int8 *)v67+ v14- v63) << 8) | (*((unsigned __int8 *)v67 + v41 - v63) << 16) | (*((unsigned __int8 *)v67 + v42 - v63) << 24)), (int8x16_t)0);
          v106 = (int16x8_t)vextq_s8((int8x16_t)v105, (int8x16_t)0, 2uLL);
          v107 = vaddq_s16(v106, v105);
          v108 = (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v105, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_2160EF110);
          v6 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v107, v47), v46);
          v109 = (int16x8_t)vqtbl1q_s8((int8x16_t)v105, (int8x16_t)xmmword_2160F18F0);
          v110 = vzip1q_s16(v6, (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v48, v106), v108), v107), v49));
          v111 = (int16x8_t)vextq_s8((int8x16_t)vdupq_laneq_s32((int32x4_t)v110, 2), (int8x16_t)v109, 0xCuLL);
          v108.i64[0] = *v104;
          v6.i64[0] = v104[4];
          v7.i64[0] = v104[8];
          v8.i64[0] = v104[12];
          v5 = vaddq_s16(v110, v108);
          v3 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v110, (int8x16_t)0, 4uLL), v6);
          v4 = vaddq_s16(v111, v7);
          v2 = vaddq_s16(v8, v109);
          *(int8x8_t *)v5.i8 = vqmovun_s16(v5);
        }
        else
        {
          v134 = (int16x8_t)vzip1q_s8((int8x16_t)(*((unsigned __int8 *)v67 - v63) | (*((unsigned __int8 *)v67+ v14- v63) << 8) | (*((unsigned __int8 *)v67 + v41 - v63) << 16) | (*((unsigned __int8 *)v67 + v42 - v63) << 24)), (int8x16_t)0);
          v135 = (int16x8_t)vextq_s8((int8x16_t)v134, (int8x16_t)0, 2uLL);
          v136 = vaddq_s16(v135, v134);
          v5 = (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v134, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_2160EF110);
          v6 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v136, v47), v46);
          v2 = (int16x8_t)vqtbl1q_s8((int8x16_t)v134, (int8x16_t)xmmword_2160F18F0);
          v137 = vzip1q_s16(v6, (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v48, v135), v5), v136), v49));
          v4 = (int16x8_t)vextq_s8((int8x16_t)vdupq_laneq_s32((int32x4_t)v137, 2), (int8x16_t)v2, 0xCuLL);
          *(int8x8_t *)v5.i8 = vqmovun_s16(v137);
          v3 = (int16x8_t)vextq_s8((int8x16_t)v137, (int8x16_t)0, 4uLL);
        }
        *(int8x8_t *)v3.i8 = vqmovun_s16(v3);
        *(int8x8_t *)v4.i8 = vqmovun_s16(v4);
        *v67 = v5.i32[0];
        *(int *)((char *)v67 + v14) = v3.i32[0];
        *(int8x8_t *)v2.i8 = vqmovun_s16(v2);
        *(int *)((char *)v67 + v41) = v4.i32[0];
        *(int *)((char *)v67 + v42) = v2.i32[0];
        goto LABEL_205;
      default:
        goto LABEL_205;
    }
  }
}

uint64_t sub_216088554(uint64_t a1, uint64_t a2)
{
  int16x8_t v2;
  int16x8_t v3;
  int16x8_t v4;
  int16x8_t v5;
  int16x8_t v6;
  int16x8_t v7;
  int16x8_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  unsigned __int8 *v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  uint64_t v16;
  int v17;
  char v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  int v23;
  uint64_t v24;
  unsigned __int8 *v25;
  unsigned __int8 *v26;
  unsigned __int8 *v27;
  unsigned __int8 *v28;
  unsigned __int8 *v29;
  _BOOL4 v30;
  unsigned __int8 *v31;
  _BOOL4 v32;
  _BOOL4 v33;
  _BOOL4 v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint16x8_t v42;
  uint16x8_t v43;
  int16x8_t v44;
  int16x8_t v45;
  uint16x8_t v46;
  uint64x2_t v47;
  uint64x2_t v48;
  int *v49;
  uint64x2_t v50;
  uint32x4_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  unsigned int v57;
  int v58;
  unsigned int v59;
  int v60;
  int v61;
  unsigned int v62;
  int v63;
  int *v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t *v67;
  unsigned __int8 *v68;
  int v69;
  int v70;
  int16x8_t v71;
  int16x8_t v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  unsigned int v80;
  uint64_t v81;
  unsigned int v82;
  unsigned int v83;
  int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  int v89;
  int v90;
  unsigned int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  unsigned int v96;
  unsigned int v97;
  uint64_t v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  uint64_t *v102;
  int16x8_t v103;
  int16x8_t v104;
  int16x8_t v105;
  int16x8_t v106;
  int16x8_t v107;
  int16x8_t v108;
  int16x8_t v109;
  int v110;
  unsigned __int8 *v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  int16x8_t v132;
  int16x8_t v133;
  int16x8_t v134;
  int16x8_t v135;
  int v136;
  uint64_t *v137;
  int16x8_t v138;
  int16x8_t v139;
  int16x8_t v140;
  int16x8_t v141;
  int16x8_t v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  uint64_t *v150;
  int16x8_t v151;
  int16x8_t v152;
  int16x8_t v153;
  int16x8_t v154;
  int16x8_t v155;
  int16x8_t v156;
  uint64_t *v157;
  unsigned int v158;
  int64x2_t v159;
  uint64x2_t v160;
  int16x8_t v161;
  int16x8_t v162;
  int16x8_t v163;
  int16x8_t v164;
  int v165;
  unsigned __int8 *v166;
  int v167;
  int16x8_t v168;
  int16x8_t v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int16x8_t v177;
  int16x8_t v178;
  int16x8_t v179;
  int16x8_t v180;
  unsigned int v181;
  int64x2_t v182;
  int16x8_t v183;
  int v184;
  unsigned __int8 *v185;
  uint64_t *v186;
  unsigned int v187;
  uint64x2_t v188;
  uint64_t *v189;
  int8x16_t v190;
  int8x16_t v191;
  int16x8_t v192;
  int16x8_t v193;
  int16x8_t v194;
  int16x8_t v195;
  int16x8_t v196;
  int64x2_t v197;
  int16x8_t v198;
  int16x8_t v199;
  int16x8_t v200;
  unsigned int v201;
  uint64_t *v202;
  uint64x2_t v203;
  int8x16_t v204;
  int8x16_t v205;
  int16x8_t v206;
  int16x8_t v207;
  int16x8_t v208;
  int16x8_t v209;
  int64x2_t v210;
  int16x8_t v211;
  int16x8_t v212;
  int8x16_t v213;
  int16x8_t v214;
  uint64x2_t v215;
  int8x16_t v216;
  int8x16_t v217;
  int16x8_t v218;
  int16x8_t v219;
  int16x8_t v220;
  int64x2_t v221;
  uint64x2_t v222;
  int8x16_t v223;
  int8x16_t v224;
  int16x8_t v225;
  int16x8_t v226;
  int8x16_t v227;
  int16x8_t v228;
  int64x2_t v229;
  uint64_t v230;
  unsigned __int8 *v231;
  unsigned __int8 *v232;
  uint64_t v233;
  uint64_t v234;

  v234 = *MEMORY[0x24BDAC8D0];
  v9 = *(unsigned __int8 **)(a2 + 72);
  v10 = *(_DWORD *)(a1 + 824);
  v11 = *(_DWORD *)(a1 + 828);
  if (*(_BYTE *)(a2 + 20) && *(_BYTE *)(a2 + 22))
  {
    v12 = v9 + 472;
    v13 = *((_DWORD *)v9 + 34);
    v14 = 2 * v13;
    v15 = *v9;
    v16 = *((_QWORD *)v9 + 4) + (16 * v10);
    v17 = 32 * v11 * v13;
    if (v15)
    {
      v18 = 5;
    }
    else
    {
      v17 = 16 * v11 * v13;
      v18 = 4;
    }
    v19 = v16 + (v11 << v18) * v13;
    if (*(_BYTE *)(a2 + 21))
      v20 = v13;
    else
      v20 = v17;
    if (*(_BYTE *)(a2 + 21))
      v21 = v19;
    else
      v21 = v16;
  }
  else
  {
    v12 = v9 + 408;
    v14 = *((_DWORD *)v9 + 34);
    if (*(_BYTE *)(a2 + 23) == 1)
    {
      v22 = *(_DWORD *)(a1 + 820);
      v21 = *((_QWORD *)v9 + 4)
          + 32 * v14 * (v22 / (2 * *(_DWORD *)(a2 + 16)))
          + ((8 * (v22 % (2 * *(_DWORD *)(a2 + 16)))) & 0xFFFFFFF0);
      v20 = ((int)(v22 << 31) >> 31) & (16 * v14);
    }
    else
    {
      v21 = *((_QWORD *)v9 + 4) + (16 * v10);
      v20 = 16 * v11 * v14;
    }
  }
  v23 = *(unsigned __int8 *)(a1 + 816);
  v24 = *(_QWORD *)(a2 + 968);
  v25 = *(unsigned __int8 **)(a2 + 936);
  v26 = *(unsigned __int8 **)(a2 + 944);
  v27 = *(unsigned __int8 **)(a2 + 952);
  v28 = *(unsigned __int8 **)(a2 + 960);
  v232 = 0;
  v233 = 0;
  v230 = v24;
  v231 = 0;
  if (v25)
  {
    if (v25[32])
      v29 = v25 + 16;
    else
      v29 = v25;
    v231 = v29;
    v30 = 1;
    if (v26)
      goto LABEL_20;
LABEL_24:
    v31 = 0;
    v32 = 0;
    goto LABEL_25;
  }
  v30 = 0;
  if (!v26)
    goto LABEL_24;
LABEL_20:
  v31 = v26 + 16;
  if (!v26[32])
    v31 = v26;
  v32 = 1;
LABEL_25:
  v232 = v31;
  v33 = v27 != 0;
  v34 = v28 != 0;
  if (!*(_BYTE *)(a2 + 928))
    goto LABEL_46;
  if (!v25)
  {
    v30 = 0;
    if (v26)
      goto LABEL_34;
    goto LABEL_29;
  }
  if (v25[16] != 34)
  {
    v30 = 1;
    if (v26)
      goto LABEL_34;
LABEL_29:
    v32 = 0;
    if (v27)
      goto LABEL_30;
LABEL_36:
    v33 = 0;
    if (!v28)
      goto LABEL_32;
    goto LABEL_37;
  }
  v30 = *v25 != 34;
  if (!v26)
    goto LABEL_29;
LABEL_34:
  if (v26[16] == 34)
  {
    v32 = *v26 != 34;
    if (!v27)
      goto LABEL_36;
  }
  else
  {
    v32 = 1;
    if (!v27)
      goto LABEL_36;
  }
LABEL_30:
  if (v27[16] == 34)
  {
    v33 = *v27 != 34;
    if (!v28)
    {
LABEL_32:
      v34 = 0;
      goto LABEL_46;
    }
  }
  else
  {
    v33 = 1;
    if (!v28)
      goto LABEL_32;
  }
LABEL_37:
  v34 = v28[16] != 34 || *v28 != 34;
LABEL_46:
  v35 = 0;
  v36 = v21 + v20;
  v37 = (2 * v33) | (4 * v32) | (8 * v30) | v34;
  v38 = a2 + 112;
  v39 = 2 * v14;
  v40 = 3 * v14;
  result = a1 + 1142;
  v42.i64[0] = 0xE000E000E000ELL;
  v42.i64[1] = 0xE000E000E000ELL;
  v43.i64[0] = -1;
  v43.i64[1] = -1;
  v44 = (int16x8_t)vshlq_u16(v43, v42);
  v45 = vaddq_s16(v44, v44);
  v46.i64[0] = 0x1000100010001;
  v46.i64[1] = 0x1000100010001;
  v47 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF0uLL);
  v48 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
  v49 = (int *)((char *)&unk_2160F1F08 + 4 * v37);
  v50 = (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL);
  v51.i64[0] = 0xF0000000FLL;
  v51.i64[1] = 0xF0000000FLL;
  while (2)
  {
    v52 = byte_254E10D40[v35];
    v53 = byte_254E10D40[v35 + 16];
    v54 = *(&v230 + (~(2 * (_BYTE)v53) & 2));
    v55 = *(&v230 + ((v52 & 1) == 0));
    if (v54)
      v56 = v55 == 0;
    else
      v56 = 1;
    if (v56
      || (v57 = *(unsigned __int8 *)(v55 + ((v52 >> 1) & 0xF)),
          v58 = *(unsigned __int8 *)(v54 + ((v53 >> 1) & 0xF)),
          (*(unsigned __int8 *)(a2 + 928) & ((v58 | v57) >> 5) & 1) != 0))
    {
      v59 = 2;
    }
    else
    {
      v59 = (((v57 & 0xF) - (v58 & 0xF)) & ((int)((v57 & 0xF) - (v58 & 0xF)) >> 31)) + (v58 & 0xF);
    }
    v61 = *v49;
    v49 += 16;
    v60 = v61;
    v62 = *(unsigned __int8 *)(result + v35);
    if (v59 <= v62)
      ++v62;
    v63 = v62 & (*(unsigned __int8 *)(result + v35 - 20) - 1) | v59 & -*(unsigned __int8 *)(result + v35 - 20);
    *(_BYTE *)(v24 + v35) = v63;
    v64 = (int *)(v36 + *(unsigned int *)&v12[4 * v35]);
    switch(v63)
    {
      case 0:
        v65 = BYTE1(v60) * v14;
        if (v23)
        {
          v66 = (uint64_t *)(v38 + 2 * byte_2160F2308[v35]);
          v2.i64[0] = *v66;
          v3.i64[0] = v66[4];
          v4.i64[0] = v66[8];
          v5.i64[0] = v66[12];
          v6.i32[0] = *(int *)((char *)v64 - v65);
          v6 = (int16x8_t)vzip1q_s8((int8x16_t)v6, (int8x16_t)0);
          v2 = vaddq_s16(v6, v2);
          v3 = vaddq_s16(v3, v6);
          v4 = vaddq_s16(v4, v6);
          v5 = vaddq_s16(v5, v6);
          goto LABEL_157;
        }
        v110 = *(int *)((char *)v64 - v65);
        goto LABEL_171;
      case 1:
        if (v23)
        {
          v67 = (uint64_t *)(v38 + 2 * byte_2160F2308[v35]);
          v68 = (unsigned __int8 *)v64 - v60;
          v69 = *v68 | (*v68 << 8);
          v70 = v68[v14] | (v68[v14] << 8);
          v2.i64[0] = *v67;
          v3.i64[0] = v67[4];
          v4.i32[0] = v69 | (v69 << 16);
          v4 = (int16x8_t)vzip1q_s8((int8x16_t)v4, (int8x16_t)0);
          v5.i32[0] = v70 | (v70 << 16);
          v5 = (int16x8_t)vzip1q_s8((int8x16_t)v5, (int8x16_t)0);
          v71 = vaddq_s16(v4, v2);
          v72 = vaddq_s16(v5, v3);
          *(int8x8_t *)v71.i8 = vqmovun_s16(v71);
          *(int8x8_t *)v72.i8 = vqmovun_s16(v72);
          *v64 = v71.i32[0];
          *(int *)((char *)v64 + v14) = v72.i32[0];
          v73 = v68[v39] | (v68[v39] << 8);
          LODWORD(v68) = v68[v40] | (v68[v40] << 8);
          v71.i32[0] = v73 | (v73 << 16);
          v72.i32[0] = v68 | ((_DWORD)v68 << 16);
          v4.i64[0] = v67[8];
          v5.i64[0] = v67[12];
          v2 = vaddq_s16((int16x8_t)vzip1q_s8((int8x16_t)v71, (int8x16_t)0), v4);
          v3 = vaddq_s16((int16x8_t)vzip1q_s8((int8x16_t)v72, (int8x16_t)0), v5);
          *(int8x8_t *)v2.i8 = vqmovun_s16(v2);
          *(int8x8_t *)v3.i8 = vqmovun_s16(v3);
          goto LABEL_158;
        }
        v111 = (unsigned __int8 *)v64 - v60;
        v112 = *v111 | (*v111 << 8);
        v113 = v111[v14] | (v111[v14] << 8);
        *v64 = v112 | (v112 << 16);
        *(int *)((char *)v64 + v14) = v113 | (v113 << 16);
        v114 = v111[v39] | (v111[v39] << 8);
        LODWORD(v111) = v111[v40] | (v111[v40] << 8);
        v110 = v111 | ((_DWORD)v111 << 16);
        *(int *)((char *)v64 + v39) = v114 | (v114 << 16);
        goto LABEL_172;
      case 2:
        v74 = v60;
        v75 = BYTE1(v60);
        if (v23)
        {
          if (v74)
          {
            v76 = *((unsigned __int8 *)v64 - 1);
            v77 = *((unsigned __int8 *)v64 + v14 - 1);
            v78 = *((unsigned __int8 *)v64 + v39 - 1);
            v79 = *((unsigned __int8 *)v64 + v40 - 1);
            if (v75)
            {
              v2.i32[0] = *(int *)((char *)v64 - v14);
              v2 = (int16x8_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v2.i8));
              v80 = (vaddvq_s32((int32x4_t)v2) + v79 + v78 + v77 + v76 + 4) >> 3;
LABEL_156:
              v186 = (uint64_t *)(v38 + 2 * byte_2160F2308[v35]);
              v2.i64[0] = *v186;
              v3.i64[0] = v186[4];
              v4.i64[0] = v186[8];
              v5.i64[0] = v186[12];
              v6 = (int16x8_t)vzip1q_s8((int8x16_t)(v80 | (v80 << 8) | ((v80 | (v80 << 8)) << 16)), (int8x16_t)0);
              v2 = vaddq_s16(v6, v2);
              v3 = vaddq_s16(v6, v3);
              v4 = vaddq_s16(v6, v4);
              v5 = vaddq_s16(v6, v5);
LABEL_157:
              *v64 = vqmovun_s16(v2).u32[0];
              *(int *)((char *)v64 + v14) = vqmovun_s16(v3).u32[0];
              *(int8x8_t *)v2.i8 = vqmovun_s16(v4);
              *(int8x8_t *)v3.i8 = vqmovun_s16(v5);
LABEL_158:
              *(int *)((char *)v64 + v39) = v2.i32[0];
              *(int *)((char *)v64 + v40) = v3.i32[0];
              goto LABEL_180;
            }
            v136 = v76 + v77 + v78 + v79;
          }
          else
          {
            if (!v75)
            {
              v80 = 128;
              goto LABEL_156;
            }
            v2.i32[0] = *(int *)((char *)v64 - v14);
            v2 = (int16x8_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v2.i8));
            v136 = vaddvq_s32((int32x4_t)v2);
          }
          v80 = (v136 + 2) >> 2;
          goto LABEL_156;
        }
        if (v74)
        {
          v115 = *((unsigned __int8 *)v64 - 1);
          v116 = *((unsigned __int8 *)v64 + v14 - 1);
          v117 = *((unsigned __int8 *)v64 + v39 - 1);
          v118 = *((unsigned __int8 *)v64 + v40 - 1);
          if (v75)
          {
            v2.i32[0] = *(int *)((char *)v64 - v14);
            v2 = (int16x8_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v2.i8));
            v119 = (vaddvq_s32((int32x4_t)v2) + v118 + v117 + v116 + v115 + 4) >> 3;
            goto LABEL_170;
          }
          v167 = v115 + v116 + v117 + v118;
          goto LABEL_147;
        }
        if (v75)
        {
          v2.i32[0] = *(int *)((char *)v64 - v14);
          v2 = (int16x8_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v2.i8));
          v167 = vaddvq_s32((int32x4_t)v2);
LABEL_147:
          v119 = (v167 + 2) >> 2;
          goto LABEL_170;
        }
        v119 = 128;
LABEL_170:
        v110 = v119 | (v119 << 8) | ((v119 | (v119 << 8)) << 16);
LABEL_171:
        *v64 = v110;
        *(int *)((char *)v64 + v14) = v110;
        *(int *)((char *)v64 + v39) = v110;
LABEL_172:
        *(int *)((char *)v64 + v40) = v110;
        goto LABEL_180;
      case 3:
        if ((v60 & 0xFF00) != 0)
          v81 = -(uint64_t)v14;
        else
          v81 = 0;
        if (v23)
        {
          v82 = *(int *)((char *)v64 + v81);
          if ((v60 & 0xFF0000) != 0)
            v83 = *(int *)((char *)v64 - v14 + 4);
          else
            v83 = v82 & 0xFF000000 | ((v82 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v82 & 0xFF000000 | ((v82 & 0xFF000000) >> 8)) >> 16);
          v137 = (uint64_t *)(v38 + 2 * byte_2160F2308[v35]);
          v3.i32[0] = v83;
          v138 = (int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v3, 0xCuLL), (int8x16_t)v82), (int8x16_t)0);
          v139 = (int16x8_t)vextq_s8((int8x16_t)vaddq_s16(v138, v138), (int8x16_t)0, 2uLL);
          v140 = vaddq_s16(v45, (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v138, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_2160EF100));
          v141 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v140, vaddq_s16(v139, v138)), v46);
          v139.i64[0] = *v137;
          v140.i64[0] = v137[4];
          v5.i64[0] = v137[8];
          v6.i64[0] = v137[12];
          v3 = vaddq_s16(v141, v139);
          v4 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v141, (int8x16_t)0, 2uLL), v140);
          v7 = (int16x8_t)vextq_s8((int8x16_t)v141, (int8x16_t)0, 4uLL);
          v5 = vaddq_s16(v7, v5);
          v142 = (int16x8_t)vextq_s8((int8x16_t)v141, (int8x16_t)0, 6uLL);
          goto LABEL_128;
        }
        v120 = *(int *)((char *)v64 + v81);
        if ((v60 & 0xFF0000) != 0)
          v121 = *(int *)((char *)v64 - v14 + 4);
        else
          v121 = v120 & 0xFF000000 | ((v120 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v120 & 0xFF000000 | ((v120 & 0xFF000000) >> 8)) >> 16);
        v3.i32[0] = v121;
        v168 = (int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v3, 0xCuLL), (int8x16_t)v120), (int8x16_t)0);
        v3 = (int16x8_t)vextq_s8((int8x16_t)vaddq_s16(v168, v168), (int8x16_t)0, 2uLL);
        v169 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v45, (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v168, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_2160EF100)), vaddq_s16(v3, v168)), v46);
        *(int8x8_t *)v3.i8 = vqmovun_s16(v169);
        v4 = (int16x8_t)vextq_s8((int8x16_t)v169, (int8x16_t)0, 2uLL);
        *(int8x8_t *)v4.i8 = vqmovun_s16(v4);
        v5 = (int16x8_t)vextq_s8((int8x16_t)v169, (int8x16_t)0, 4uLL);
        *(int8x8_t *)v5.i8 = vqmovun_s16(v5);
        *v64 = v3.i32[0];
        *(int *)((char *)v64 + v14) = v4.i32[0];
        v2 = (int16x8_t)vextq_s8((int8x16_t)v169, (int8x16_t)0, 6uLL);
        goto LABEL_145;
      case 4:
        v84 = v60;
        v85 = BYTE1(v60);
        if (!v23)
        {
          if (v84)
          {
            if (v85)
            {
              v122 = *(int *)((char *)v64 - v14);
              v123 = *((unsigned __int8 *)v64 - v14 - 1);
            }
            else
            {
              v122 = *v64;
              v123 = *v64;
            }
            v170 = *((unsigned __int8 *)v64 + v40 - 1) | (*((unsigned __int8 *)v64 + v39 - 1) << 8) | (*((unsigned __int8 *)v64 + v14 - 1) << 16);
            v171 = *((unsigned __int8 *)v64 - 1);
          }
          else if (v85)
          {
            v122 = *(int *)((char *)v64 - v14);
            v123 = v122;
            v170 = *((unsigned __int8 *)v64 + v40) | (*((unsigned __int8 *)v64 + v39) << 8) | (*((unsigned __int8 *)v64
                                                                                               + v14) << 16);
            v171 = *(unsigned __int8 *)v64;
          }
          else
          {
            v171 = *v64;
            v123 = *v64;
            v170 = *((unsigned __int8 *)v64 + v40) | (*((unsigned __int8 *)v64 + v39) << 8) | (*((unsigned __int8 *)v64
                                                                                               + v14) << 16);
            v122 = *v64;
          }
          v181 = v170 | (v171 << 24);
          v182 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v122, 8uLL), (int8x16_t)v123);
          v6 = (int16x8_t)vshlq_u64((uint64x2_t)v181, v48);
          v183 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)v6, (int8x16_t)vshlq_n_s64(v182, 0x18uLL)), (int8x16_t)0);
          v2 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v183, v183), (int16x8_t)vzip1q_s8(vqtbl1q_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)v181, v47), (int8x16_t)vshlq_n_s64(v182, 0x10uLL)), (int8x16_t)xmmword_2160EE840), (int8x16_t)0)), vaddq_s16(v45, (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vshlq_u64((uint64x2_t)v182, v47), 0x20uLL), (int8x16_t)v181), (int8x16_t)0))),
                            v46);
          v3 = (int16x8_t)vextq_s8((int8x16_t)v2, (int8x16_t)0, 6uLL);
          v3.i32[0] = vqmovun_s16(v3).u32[0];
          v4 = (int16x8_t)vextq_s8((int8x16_t)v2, (int8x16_t)0, 4uLL);
          *(int8x8_t *)v4.i8 = vqmovun_s16(v4);
          v5 = (int16x8_t)vextq_s8((int8x16_t)v2, (int8x16_t)0, 2uLL);
          goto LABEL_167;
        }
        if (v84)
        {
          if (v85)
          {
            v86 = *(int *)((char *)v64 - v14);
            v87 = *((unsigned __int8 *)v64 - v14 - 1);
          }
          else
          {
            v86 = *v64;
            v87 = *v64;
          }
          v143 = *((unsigned __int8 *)v64 + v40 - 1) | (*((unsigned __int8 *)v64 + v39 - 1) << 8) | (*((unsigned __int8 *)v64 + v14 - 1) << 16);
          v144 = *((unsigned __int8 *)v64 - 1);
        }
        else if (v85)
        {
          v86 = *(int *)((char *)v64 - v14);
          v87 = v86;
          v143 = *((unsigned __int8 *)v64 + v40) | (*((unsigned __int8 *)v64 + v39) << 8) | (*((unsigned __int8 *)v64
                                                                                             + v14) << 16);
          v144 = *(unsigned __int8 *)v64;
        }
        else
        {
          v144 = *v64;
          v87 = *v64;
          v143 = *((unsigned __int8 *)v64 + v40) | (*((unsigned __int8 *)v64 + v39) << 8) | (*((unsigned __int8 *)v64
                                                                                             + v14) << 16);
          v86 = *v64;
        }
        v157 = (uint64_t *)(v38 + 2 * byte_2160F2308[v35]);
        v158 = v143 | (v144 << 24);
        v159 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v86, 8uLL), (int8x16_t)v87);
        v160 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF0uLL);
        v161 = (int16x8_t)vzip1q_s8(vqtbl1q_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)v158, v160), (int8x16_t)vshlq_n_s64(v159, 0x10uLL)), (int8x16_t)xmmword_2160EE840), (int8x16_t)0);
        v162 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)v158, (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL)), (int8x16_t)vshlq_n_s64(v159, 0x18uLL)), (int8x16_t)0);
        v6 = vaddq_s16(v162, v162);
        v163 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vshlq_u64((uint64x2_t)v159, v160), 0x20uLL), (int8x16_t)v158), (int8x16_t)0);
        v164 = vaddq_s16(v6, v161);
        v142 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v164, vaddq_s16(v45, v163)), v46);
        v164.i64[0] = *v157;
        v161.i64[0] = v157[8];
        v6.i64[0] = v157[12];
        v3 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v142, (int8x16_t)0, 6uLL), v164);
        v4 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v142, (int8x16_t)0, 4uLL), (int16x8_t)(unint64_t)v157[4]);
        v7 = (int16x8_t)vextq_s8((int8x16_t)v142, (int8x16_t)0, 2uLL);
        v5 = vaddq_s16(v7, v161);
LABEL_128:
        v2 = vaddq_s16(v142, v6);
        goto LABEL_166;
      case 5:
        v88 = v60;
        v89 = BYTE1(v60);
        if (v23)
        {
          if (v88)
          {
            if (v89)
            {
              v90 = *(int *)((char *)v64 - v14);
              v91 = v90 | (*((unsigned __int8 *)v64 - v14 - 1) << 8);
            }
            else
            {
              v90 = *v64;
              v91 = *v64 | (*v64 << 8);
            }
            v165 = *((unsigned __int8 *)v64 - 1) | (*((unsigned __int8 *)v64 + v14 - 1) << 8);
            v166 = (unsigned __int8 *)v64 + v39 - 1;
          }
          else
          {
            if (v89)
            {
              v90 = *(int *)((char *)v64 - v14);
              v91 = v90 | (v90 << 8);
              v145 = *(unsigned __int8 *)v64;
            }
            else
            {
              v90 = *v64;
              v145 = *v64;
              v91 = v145 | (v145 << 8);
            }
            v165 = v145 | (*((unsigned __int8 *)v64 + v14) << 8);
            v166 = (unsigned __int8 *)v64 + v39;
          }
          v187 = v90;
          v188 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
          v189 = (uint64_t *)(v38 + 2 * byte_2160F2308[v35]);
          v190 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v187, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v91, v188));
          v191 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)(v165 | (*v166 << 16)), 0x10uLL), (int8x16_t)v91);
          v192 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v190, v188), (int8x16_t)0);
          v7 = (int16x8_t)vdupq_n_s64(0xFFFFFFF0uLL);
          v193 = vaddq_s16(v192, (int16x8_t)vzip1q_s8(v190, (int8x16_t)0));
          v194 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v193, v44), v43);
          v6 = vaddq_s16(v45, v192);
          v195 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v6, v193), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v190, (uint64x2_t)v7), (int8x16_t)0)), v46);
          v196 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v191, v188), (int8x16_t)0);
          v197 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v45, (int16x8_t)vzip1q_s8(v191, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v191, (uint64x2_t)v7), (int8x16_t)0)), vaddq_s16(v196, v196)), v46);
          v198 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v194, 0xEuLL);
          v199 = (int16x8_t)vorrq_s8((int8x16_t)v198, (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64(v197, 0x20uLL), (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL)));
          v200 = (int16x8_t)vextq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vqtbl1q_s8((int8x16_t)v197, (int8x16_t)xmmword_2160F1940), 0), (int8x16_t)v195, 0xCuLL);
          v195.i64[0] = *v189;
          v198.i64[0] = v189[4];
          v6.i64[0] = v189[8];
          v7.i64[0] = v189[12];
          v3 = vaddq_s16(v194, v195);
          v8 = (int16x8_t)vextq_s8((int8x16_t)v200, (int8x16_t)0, 2uLL);
          v5 = vaddq_s16(v8, v198);
          v4 = vaddq_s16(v6, v199);
          v2 = vaddq_s16(v7, v200);
          v3.i32[0] = vqmovun_s16(v3).u32[0];
        }
        else
        {
          if (v88)
          {
            if (v89)
            {
              v124 = *(int *)((char *)v64 - v14);
              v125 = v124 | (*((unsigned __int8 *)v64 - v14 - 1) << 8);
            }
            else
            {
              v124 = *v64;
              v125 = *v64 | (*v64 << 8);
            }
            v184 = *((unsigned __int8 *)v64 - 1) | (*((unsigned __int8 *)v64 + v14 - 1) << 8);
            v185 = (unsigned __int8 *)v64 + v39 - 1;
          }
          else
          {
            if (v89)
            {
              v124 = *(int *)((char *)v64 - v14);
              v125 = v124 | (v124 << 8);
              v172 = *(unsigned __int8 *)v64;
            }
            else
            {
              v124 = *v64;
              v172 = *v64;
              v125 = v172 | (v172 << 8);
            }
            v184 = v172 | (*((unsigned __int8 *)v64 + v14) << 8);
            v185 = (unsigned __int8 *)v64 + v39;
          }
          v215 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
          v216 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v124, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v125, v215));
          v217 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)(v184 | (*v185 << 16)), 0x10uLL), (int8x16_t)v125);
          v218 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v216, v215), (int8x16_t)0);
          v7 = (int16x8_t)vdupq_n_s64(0xFFFFFFF0uLL);
          v219 = vaddq_s16(v218, (int16x8_t)vzip1q_s8(v216, (int8x16_t)0));
          v8 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v219, v44), v43);
          v6 = vaddq_s16(v45, v218);
          v3 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v6, v219), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v216, (uint64x2_t)v7), (int8x16_t)0)), v46);
          v220 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v217, v215), (int8x16_t)0);
          v221 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v45, (int16x8_t)vzip1q_s8(v217, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v217, (uint64x2_t)v7), (int8x16_t)0)), vaddq_s16(v220, v220)), v46);
          v4 = (int16x8_t)vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v8, 0xEuLL), (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64(v221, 0x20uLL), v50));
          v2 = (int16x8_t)vextq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vqtbl1q_s8((int8x16_t)v221, (int8x16_t)xmmword_2160F1940), 0), (int8x16_t)v3, 0xCuLL);
          v3.i32[0] = vqmovun_s16(v8).u32[0];
          v5 = (int16x8_t)vextq_s8((int8x16_t)v2, (int8x16_t)0, 2uLL);
        }
        *(int8x8_t *)v5.i8 = vqmovun_s16(v5);
        *v64 = v3.i32[0];
        *(int *)((char *)v64 + v14) = v5.i32[0];
        *(int8x8_t *)v3.i8 = vqmovun_s16(v4);
        goto LABEL_178;
      case 6:
        v92 = v60;
        v93 = BYTE1(v60);
        if (v23)
        {
          if (v92)
          {
            if (v93)
            {
              v94 = *(int *)((char *)v64 - v14);
              v95 = *((unsigned __int8 *)v64 - 1);
              v96 = (*((unsigned __int8 *)v64 + v39 - 1) << 16) | (*((unsigned __int8 *)v64 + v14 - 1) << 8) | (*((unsigned __int8 *)v64 + v40 - 1) << 24) | v95;
              v97 = v95 | (*((unsigned __int8 *)v64 - v14 - 1) << 8);
LABEL_165:
              v201 = v94;
              v202 = (uint64_t *)(v38 + 2 * byte_2160F2308[v35]);
              v203 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
              v204 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v96, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v97, v203));
              v205 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v201, 0x10uLL), (int8x16_t)v97);
              v206 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v204, v203), (int8x16_t)0);
              v7 = (int16x8_t)vdupq_n_s64(0xFFFFFFF0uLL);
              v207 = vaddq_s16(v206, (int16x8_t)vzip1q_s8(v204, (int8x16_t)0));
              v8 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v207, v44), v43);
              v6 = vaddq_s16(v45, v206);
              v208 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v6, v207), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v204, (uint64x2_t)v7), (int8x16_t)0)), v46);
              v209 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v205, v203), (int8x16_t)0);
              v210 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v45, (int16x8_t)vzip1q_s8(v205, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v205, (uint64x2_t)v7), (int8x16_t)0)), vaddq_s16(v209, v209)), v46);
              v211 = (int16x8_t)vorrq_s8((int8x16_t)vshlq_n_s64(v210, 0x10uLL), (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64((int64x2_t)v8, 0x30uLL), (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL)));
              v212 = (int16x8_t)vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)v8, (int8x16_t)xmmword_2160F1910), (int32x4_t)0);
              v213 = vqtbl1q_s8(vorrq_s8(vqtbl1q_s8(vextq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v208, 6uLL), (int8x16_t)0, 8uLL), (int8x16_t)xmmword_2160F1900), vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vextq_s8((int8x16_t)0, (int8x16_t)v210, 2uLL), v51), (int8x16_t)v212)), (int8x16_t)xmmword_2160F1920);
              v208.i64[1] = 0xF0E0D0C0B0A0908;
              v214 = (int16x8_t)vqtbl1q_s8(v213, (int8x16_t)xmmword_2160F1930);
              v208.i64[0] = *v202;
              v212.i64[0] = v202[4];
              v6.i64[0] = v202[8];
              v7.i64[0] = v202[12];
              v3 = vaddq_s16(v208, v211);
              v4 = vaddq_s16((int16x8_t)vdupq_laneq_s64((int64x2_t)v214, 1), v212);
              v5 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v214, (int8x16_t)0, 4uLL), v6);
              v2 = vaddq_s16(v7, v214);
              goto LABEL_166;
            }
            v94 = *v64;
            v146 = *((unsigned __int8 *)v64 - 1);
            v147 = *((unsigned __int8 *)v64 + v14 - 1);
            v148 = *((unsigned __int8 *)v64 + v39 - 1) << 16;
            v149 = *((unsigned __int8 *)v64 + v40 - 1);
          }
          else
          {
            if (!v93)
            {
              v94 = *v64;
              v146 = *v64;
              v96 = (*((unsigned __int8 *)v64 + v39) << 16) | (*((unsigned __int8 *)v64 + v14) << 8) | (*((unsigned __int8 *)v64 + v40) << 24) | v146;
              goto LABEL_164;
            }
            v94 = *(int *)((char *)v64 - v14);
            v146 = *(unsigned __int8 *)v64;
            v147 = *((unsigned __int8 *)v64 + v14);
            v148 = *((unsigned __int8 *)v64 + v39) << 16;
            v149 = *((unsigned __int8 *)v64 + v40);
          }
          v96 = v148 | (v147 << 8) | (v149 << 24) | v146;
LABEL_164:
          v97 = v146 & 0xFFFF00FF | (v94 << 8);
          goto LABEL_165;
        }
        if (v92)
        {
          if (v93)
          {
            v126 = *(int *)((char *)v64 - v14);
            v127 = *((unsigned __int8 *)v64 - 1);
            v128 = (*((unsigned __int8 *)v64 + v39 - 1) << 16) | (*((unsigned __int8 *)v64 + v14 - 1) << 8) | (*((unsigned __int8 *)v64 + v40 - 1) << 24) | v127;
            v129 = v127 | (*((unsigned __int8 *)v64 - v14 - 1) << 8);
            goto LABEL_184;
          }
          v126 = *v64;
          v173 = *((unsigned __int8 *)v64 - 1);
          v174 = *((unsigned __int8 *)v64 + v14 - 1);
          v175 = *((unsigned __int8 *)v64 + v39 - 1) << 16;
          v176 = *((unsigned __int8 *)v64 + v40 - 1);
          goto LABEL_154;
        }
        if (v93)
        {
          v126 = *(int *)((char *)v64 - v14);
          v173 = *(unsigned __int8 *)v64;
          v174 = *((unsigned __int8 *)v64 + v14);
          v175 = *((unsigned __int8 *)v64 + v39) << 16;
          v176 = *((unsigned __int8 *)v64 + v40);
LABEL_154:
          v128 = v175 | (v174 << 8) | (v176 << 24) | v173;
          goto LABEL_183;
        }
        v126 = *v64;
        v173 = *v64;
        v128 = (*((unsigned __int8 *)v64 + v39) << 16) | (*((unsigned __int8 *)v64 + v14) << 8) | (*((unsigned __int8 *)v64 + v40) << 24) | v173;
LABEL_183:
        v129 = v173 & 0xFFFF00FF | (v126 << 8);
LABEL_184:
        v222 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
        v223 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v128, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v129, v222));
        v224 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v126, 0x10uLL), (int8x16_t)v129);
        v225 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v223, v222), (int8x16_t)0);
        v7 = (int16x8_t)vdupq_n_s64(0xFFFFFFF0uLL);
        v226 = vaddq_s16(v225, (int16x8_t)vzip1q_s8(v223, (int8x16_t)0));
        v8 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v226, v44), v43);
        v6 = vaddq_s16(v45, v225);
        v227 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v6, v226), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v223, (uint64x2_t)v7), (int8x16_t)0)), v46);
        v228 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v224, v222), (int8x16_t)0);
        v229 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v45, (int16x8_t)vzip1q_s8(v224, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v224, (uint64x2_t)v7), (int8x16_t)0)), vaddq_s16(v228, v228)), v46);
        v4 = (int16x8_t)vorrq_s8((int8x16_t)vshlq_n_s64(v229, 0x10uLL), (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64((int64x2_t)v8, 0x30uLL), (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL)));
        v2 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vorrq_s8(vqtbl1q_s8(vextq_s8(vextq_s8((int8x16_t)0, v227, 6uLL), (int8x16_t)0, 8uLL), (int8x16_t)xmmword_2160F1900), vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vextq_s8((int8x16_t)0, (int8x16_t)v229, 2uLL), v51), (int8x16_t)vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)v8, (int8x16_t)xmmword_2160F1910), (int32x4_t)0))), (int8x16_t)xmmword_2160F1920), (int8x16_t)xmmword_2160F1930);
        v3 = (int16x8_t)vdupq_laneq_s64((int64x2_t)v2, 1);
        *(int8x8_t *)v4.i8 = vqmovun_s16(v4);
        v5 = (int16x8_t)vextq_s8((int8x16_t)v2, (int8x16_t)0, 4uLL);
        *v64 = v4.i32[0];
        *(int *)((char *)v64 + v14) = vqmovun_s16(v3).u32[0];
LABEL_168:
        *(int8x8_t *)v3.i8 = vqmovun_s16(v5);
LABEL_178:
        *(int8x8_t *)v2.i8 = vqmovun_s16(v2);
        *(int *)((char *)v64 + v39) = v3.i32[0];
LABEL_179:
        *(int *)((char *)v64 + v40) = v2.i32[0];
LABEL_180:
        if (++v35 != 16)
          continue;
        return result;
      case 7:
        if ((v60 & 0xFF00) != 0)
          v98 = -(uint64_t)v14;
        else
          v98 = 0;
        if (!v23)
        {
          v130 = *(int *)((char *)v64 + v98);
          if ((v60 & 0xFF0000) != 0)
            v131 = *(int *)((char *)v64 - v14 + 4);
          else
            v131 = v130 & 0xFF000000 | ((v130 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v130 & 0xFF000000 | ((v130 & 0xFF000000) >> 8)) >> 16);
          v3.i32[0] = v131;
          v177 = (int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v3, 0xCuLL), (int8x16_t)v130), (int8x16_t)0);
          v178 = (int16x8_t)vextq_s8((int8x16_t)v177, (int8x16_t)0, 2uLL);
          v4 = vaddq_s16(v178, v177);
          v179 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v4, v44), v43);
          v3 = vaddq_s16(v45, v178);
          v180 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v3, (int16x8_t)vextq_s8((int8x16_t)v177, (int8x16_t)0, 4uLL)), v4), v46);
          *(int8x8_t *)v3.i8 = vqmovun_s16(v179);
          *(int8x8_t *)v4.i8 = vqmovun_s16(v180);
          v5 = (int16x8_t)vextq_s8((int8x16_t)v179, (int8x16_t)0, 2uLL);
          *(int8x8_t *)v5.i8 = vqmovun_s16(v5);
          *v64 = v3.i32[0];
          *(int *)((char *)v64 + v14) = v4.i32[0];
          v2 = (int16x8_t)vextq_s8((int8x16_t)v180, (int8x16_t)0, 2uLL);
LABEL_145:
          *(int8x8_t *)v2.i8 = vqmovun_s16(v2);
          *(int *)((char *)v64 + v39) = v5.i32[0];
          goto LABEL_179;
        }
        v99 = *(int *)((char *)v64 + v98);
        if ((v60 & 0xFF0000) != 0)
          v100 = *(int *)((char *)v64 - v14 + 4);
        else
          v100 = v99 & 0xFF000000 | ((v99 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v99 & 0xFF000000 | ((v99 & 0xFF000000) >> 8)) >> 16);
        v150 = (uint64_t *)(v38 + 2 * byte_2160F2308[v35]);
        v3.i32[0] = v100;
        v151 = (int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v3, 0xCuLL), (int8x16_t)v99), (int8x16_t)0);
        v152 = (int16x8_t)vextq_s8((int8x16_t)v151, (int8x16_t)0, 2uLL);
        v153 = vaddq_s16(v152, v151);
        v154 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v153, v44), v43);
        v155 = vaddq_s16(v45, v152);
        v156 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v155, (int16x8_t)vextq_s8((int8x16_t)v151, (int8x16_t)0, 4uLL)), v153), v46);
        v155.i64[0] = *v150;
        v153.i64[0] = v150[4];
        v6.i64[0] = v150[8];
        v7.i64[0] = v150[12];
        v3 = vaddq_s16(v154, v155);
        v4 = vaddq_s16(v156, v153);
        v5 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v154, (int8x16_t)0, 2uLL), v6);
        v2 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v156, (int8x16_t)0, 2uLL), v7);
LABEL_166:
        v3.i32[0] = vqmovun_s16(v3).u32[0];
        *(int8x8_t *)v4.i8 = vqmovun_s16(v4);
LABEL_167:
        *v64 = v3.i32[0];
        *(int *)((char *)v64 + v14) = v4.i32[0];
        goto LABEL_168;
      case 8:
        if (v23)
        {
          v101 = *((unsigned __int8 *)v64 - v60) | (*((unsigned __int8 *)v64
                                                                     + v14
                                                                     - v60) << 8) | (*((unsigned __int8 *)v64 + v39 - v60) << 16) | (*((unsigned __int8 *)v64 + v40 - v60) << 24);
          v102 = (uint64_t *)(v38 + 2 * byte_2160F2308[v35]);
          v103 = (int16x8_t)vzip1q_s8((int8x16_t)v101, (int8x16_t)0);
          v104 = (int16x8_t)vextq_s8((int8x16_t)v103, (int8x16_t)0, 2uLL);
          v105 = vaddq_s16(v104, v103);
          v106 = (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v103, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_2160EF110);
          v6 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v105, v44), v43);
          v107 = (int16x8_t)vqtbl1q_s8((int8x16_t)v103, (int8x16_t)xmmword_2160F18F0);
          v108 = vzip1q_s16(v6, (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v45, v104), v106), v105), v46));
          v109 = (int16x8_t)vextq_s8((int8x16_t)vdupq_laneq_s32((int32x4_t)v108, 2), (int8x16_t)v107, 0xCuLL);
          v106.i64[0] = *v102;
          v6.i64[0] = v102[4];
          v7.i64[0] = v102[8];
          v8.i64[0] = v102[12];
          v5 = vaddq_s16(v108, v106);
          v3 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v108, (int8x16_t)0, 4uLL), v6);
          v4 = vaddq_s16(v109, v7);
          v2 = vaddq_s16(v8, v107);
          *(int8x8_t *)v5.i8 = vqmovun_s16(v5);
        }
        else
        {
          v132 = (int16x8_t)vzip1q_s8((int8x16_t)(*((unsigned __int8 *)v64 - v60) | (*((unsigned __int8 *)v64+ v14- v60) << 8) | (*((unsigned __int8 *)v64 + v39 - v60) << 16) | (*((unsigned __int8 *)v64 + v40 - v60) << 24)), (int8x16_t)0);
          v133 = (int16x8_t)vextq_s8((int8x16_t)v132, (int8x16_t)0, 2uLL);
          v134 = vaddq_s16(v133, v132);
          v5 = (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v132, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_2160EF110);
          v6 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v134, v44), v43);
          v2 = (int16x8_t)vqtbl1q_s8((int8x16_t)v132, (int8x16_t)xmmword_2160F18F0);
          v135 = vzip1q_s16(v6, (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v45, v133), v5), v134), v46));
          v4 = (int16x8_t)vextq_s8((int8x16_t)vdupq_laneq_s32((int32x4_t)v135, 2), (int8x16_t)v2, 0xCuLL);
          *(int8x8_t *)v5.i8 = vqmovun_s16(v135);
          v3 = (int16x8_t)vextq_s8((int8x16_t)v135, (int8x16_t)0, 4uLL);
        }
        *(int8x8_t *)v3.i8 = vqmovun_s16(v3);
        *(int8x8_t *)v4.i8 = vqmovun_s16(v4);
        *v64 = v5.i32[0];
        *(int *)((char *)v64 + v14) = v3.i32[0];
        *(int8x8_t *)v2.i8 = vqmovun_s16(v2);
        *(int *)((char *)v64 + v39) = v4.i32[0];
        *(int *)((char *)v64 + v40) = v2.i32[0];
        goto LABEL_180;
      default:
        goto LABEL_180;
    }
  }
}

uint64_t sub_2160898E4(uint64_t a1, uint64_t a2)
{
  int16x8_t v2;
  int16x8_t v3;
  int16x8_t v4;
  int16x8_t v5;
  int16x8_t v6;
  int16x8_t v7;
  int16x8_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  unsigned __int8 *v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  uint64_t v16;
  int v17;
  char v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  int v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;
  _BYTE *v28;
  _BYTE *v29;
  int v30;
  _BYTE *v31;
  int v32;
  _BOOL4 v33;
  _BOOL4 v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint16x8_t v42;
  uint16x8_t v43;
  int16x8_t v44;
  int16x8_t v45;
  uint16x8_t v46;
  uint64x2_t v47;
  uint64x2_t v48;
  int *v49;
  uint64x2_t v50;
  uint32x4_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  unsigned int v57;
  int v58;
  unsigned int v59;
  int v60;
  int v61;
  unsigned int v62;
  int v63;
  int *v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t *v67;
  unsigned __int8 *v68;
  int v69;
  int v70;
  int16x8_t v71;
  int16x8_t v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  unsigned int v80;
  uint64_t v81;
  unsigned int v82;
  unsigned int v83;
  int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  int v89;
  int v90;
  unsigned int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  unsigned int v96;
  unsigned int v97;
  uint64_t v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  uint64_t *v102;
  int16x8_t v103;
  int16x8_t v104;
  int16x8_t v105;
  int16x8_t v106;
  int16x8_t v107;
  int16x8_t v108;
  int16x8_t v109;
  int v110;
  unsigned __int8 *v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  int16x8_t v132;
  int16x8_t v133;
  int16x8_t v134;
  int16x8_t v135;
  int v136;
  uint64_t *v137;
  int16x8_t v138;
  int16x8_t v139;
  int16x8_t v140;
  int16x8_t v141;
  int16x8_t v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  uint64_t *v150;
  int16x8_t v151;
  int16x8_t v152;
  int16x8_t v153;
  int16x8_t v154;
  int16x8_t v155;
  int16x8_t v156;
  uint64_t *v157;
  unsigned int v158;
  int64x2_t v159;
  uint64x2_t v160;
  int16x8_t v161;
  int16x8_t v162;
  int16x8_t v163;
  int16x8_t v164;
  int v165;
  unsigned __int8 *v166;
  int v167;
  int16x8_t v168;
  int16x8_t v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int16x8_t v177;
  int16x8_t v178;
  int16x8_t v179;
  int16x8_t v180;
  unsigned int v181;
  int64x2_t v182;
  int16x8_t v183;
  int v184;
  unsigned __int8 *v185;
  uint64_t *v186;
  unsigned int v187;
  uint64x2_t v188;
  uint64_t *v189;
  int8x16_t v190;
  int8x16_t v191;
  int16x8_t v192;
  int16x8_t v193;
  int16x8_t v194;
  int16x8_t v195;
  int16x8_t v196;
  int64x2_t v197;
  int16x8_t v198;
  int16x8_t v199;
  int16x8_t v200;
  unsigned int v201;
  uint64_t *v202;
  uint64x2_t v203;
  int8x16_t v204;
  int8x16_t v205;
  int16x8_t v206;
  int16x8_t v207;
  int16x8_t v208;
  int16x8_t v209;
  int64x2_t v210;
  int16x8_t v211;
  int16x8_t v212;
  int8x16_t v213;
  int16x8_t v214;
  uint64x2_t v215;
  int8x16_t v216;
  int8x16_t v217;
  int16x8_t v218;
  int16x8_t v219;
  int16x8_t v220;
  int64x2_t v221;
  uint64x2_t v222;
  int8x16_t v223;
  int8x16_t v224;
  int16x8_t v225;
  int16x8_t v226;
  int8x16_t v227;
  int16x8_t v228;
  int64x2_t v229;
  uint64_t v230;
  _BYTE *v231;
  _BYTE *v232;
  uint64_t v233;
  uint64_t v234;

  v234 = *MEMORY[0x24BDAC8D0];
  v9 = *(unsigned __int8 **)(a2 + 72);
  v10 = *(_DWORD *)(a1 + 824);
  v11 = *(_DWORD *)(a1 + 828);
  if (*(_BYTE *)(a2 + 20) && *(_BYTE *)(a2 + 22))
  {
    v12 = v9 + 472;
    v13 = *((_DWORD *)v9 + 34);
    v14 = 2 * v13;
    v15 = *v9;
    v16 = *((_QWORD *)v9 + 4) + (16 * v10);
    v17 = 32 * v11 * v13;
    if (v15)
    {
      v18 = 5;
    }
    else
    {
      v17 = 16 * v11 * v13;
      v18 = 4;
    }
    v19 = v16 + (v11 << v18) * v13;
    if (*(_BYTE *)(a2 + 21))
      v20 = v13;
    else
      v20 = v17;
    if (*(_BYTE *)(a2 + 21))
      v21 = v19;
    else
      v21 = v16;
  }
  else
  {
    v12 = v9 + 408;
    v14 = *((_DWORD *)v9 + 34);
    if (*(_BYTE *)(a2 + 23) == 1)
    {
      v22 = *(_DWORD *)(a1 + 820);
      v21 = *((_QWORD *)v9 + 4)
          + 32 * v14 * (v22 / (2 * *(_DWORD *)(a2 + 16)))
          + ((8 * (v22 % (2 * *(_DWORD *)(a2 + 16)))) & 0xFFFFFFF0);
      v20 = ((int)(v22 << 31) >> 31) & (16 * v14);
    }
    else
    {
      v21 = *((_QWORD *)v9 + 4) + (16 * v10);
      v20 = 16 * v11 * v14;
    }
  }
  v23 = *(unsigned __int8 *)(a1 + 816);
  v24 = *(_QWORD *)(a2 + 968);
  v25 = *(_BYTE **)(a2 + 936);
  v26 = *(_BYTE **)(a2 + 944);
  v27 = *(_BYTE **)(a2 + 952);
  v28 = *(_BYTE **)(a2 + 960);
  v232 = 0;
  v233 = 0;
  v230 = v24;
  v231 = 0;
  if (v25)
  {
    if (v25[32])
      v29 = v25 + 16;
    else
      v29 = v25;
    v231 = v29;
    v30 = 1;
    if (v26)
      goto LABEL_20;
LABEL_24:
    v31 = 0;
    v32 = 0;
    goto LABEL_25;
  }
  v30 = 0;
  if (!v26)
    goto LABEL_24;
LABEL_20:
  v31 = v26 + 16;
  if (!v26[32])
    v31 = v26;
  v32 = 1;
LABEL_25:
  v232 = v31;
  v33 = v27 != 0;
  v34 = v28 != 0;
  if (!*(_BYTE *)(a2 + 928))
    goto LABEL_44;
  if (!v25 || v25[16] == 34 || *v25 == 34)
  {
    v30 = 0;
    if (!v26)
      goto LABEL_35;
  }
  else
  {
    v30 = 1;
    if (!v26)
      goto LABEL_35;
  }
  if (v26[16] == 34 || *v26 == 34)
  {
LABEL_35:
    v32 = 0;
    if (!v27)
      goto LABEL_38;
    goto LABEL_36;
  }
  v32 = 1;
  if (!v27)
    goto LABEL_38;
LABEL_36:
  if (v27[16] == 34 || *v27 == 34)
  {
LABEL_38:
    v33 = 0;
    if (!v28)
      goto LABEL_43;
    goto LABEL_39;
  }
  v33 = 1;
  if (!v28)
    goto LABEL_43;
LABEL_39:
  if (v28[16] != 34 && *v28 != 34)
  {
    v34 = 1;
    goto LABEL_44;
  }
LABEL_43:
  v34 = 0;
LABEL_44:
  v35 = 0;
  v36 = v21 + v20;
  v37 = (2 * v33) | (4 * v32) | (8 * v30) | v34;
  v38 = a2 + 112;
  v39 = 2 * v14;
  v40 = 3 * v14;
  result = a1 + 1142;
  v42.i64[0] = 0xE000E000E000ELL;
  v42.i64[1] = 0xE000E000E000ELL;
  v43.i64[0] = -1;
  v43.i64[1] = -1;
  v44 = (int16x8_t)vshlq_u16(v43, v42);
  v45 = vaddq_s16(v44, v44);
  v46.i64[0] = 0x1000100010001;
  v46.i64[1] = 0x1000100010001;
  v47 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF0uLL);
  v48 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
  v49 = (int *)((char *)&unk_2160F1F08 + 4 * v37);
  v50 = (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL);
  v51.i64[0] = 0xF0000000FLL;
  v51.i64[1] = 0xF0000000FLL;
  while (2)
  {
    v52 = byte_254E10D40[v35];
    v53 = byte_254E10D40[v35 + 16];
    v54 = *(&v230 + (~(2 * (_BYTE)v53) & 2));
    v55 = *(&v230 + ((v52 & 1) == 0));
    if (v54)
      v56 = v55 == 0;
    else
      v56 = 1;
    if (v56
      || (v57 = *(unsigned __int8 *)(v55 + ((v52 >> 1) & 0xF)),
          v58 = *(unsigned __int8 *)(v54 + ((v53 >> 1) & 0xF)),
          (*(unsigned __int8 *)(a2 + 928) & ((v58 | v57) >> 5) & 1) != 0))
    {
      v59 = 2;
    }
    else
    {
      v59 = (((v57 & 0xF) - (v58 & 0xF)) & ((int)((v57 & 0xF) - (v58 & 0xF)) >> 31)) + (v58 & 0xF);
    }
    v61 = *v49;
    v49 += 16;
    v60 = v61;
    v62 = *(unsigned __int8 *)(result + v35);
    if (v59 <= v62)
      ++v62;
    v63 = v62 & (*(unsigned __int8 *)(result + v35 - 20) - 1) | v59 & -*(unsigned __int8 *)(result + v35 - 20);
    *(_BYTE *)(v24 + v35) = v63;
    v64 = (int *)(v36 + *(unsigned int *)&v12[4 * v35]);
    switch(v63)
    {
      case 0:
        v65 = BYTE1(v60) * v14;
        if (v23)
        {
          v66 = (uint64_t *)(v38 + 2 * byte_2160F2308[v35]);
          v2.i64[0] = *v66;
          v3.i64[0] = v66[4];
          v4.i64[0] = v66[8];
          v5.i64[0] = v66[12];
          v6.i32[0] = *(int *)((char *)v64 - v65);
          v6 = (int16x8_t)vzip1q_s8((int8x16_t)v6, (int8x16_t)0);
          v2 = vaddq_s16(v6, v2);
          v3 = vaddq_s16(v3, v6);
          v4 = vaddq_s16(v4, v6);
          v5 = vaddq_s16(v5, v6);
          goto LABEL_155;
        }
        v110 = *(int *)((char *)v64 - v65);
        goto LABEL_169;
      case 1:
        if (v23)
        {
          v67 = (uint64_t *)(v38 + 2 * byte_2160F2308[v35]);
          v68 = (unsigned __int8 *)v64 - v60;
          v69 = *v68 | (*v68 << 8);
          v70 = v68[v14] | (v68[v14] << 8);
          v2.i64[0] = *v67;
          v3.i64[0] = v67[4];
          v4.i32[0] = v69 | (v69 << 16);
          v4 = (int16x8_t)vzip1q_s8((int8x16_t)v4, (int8x16_t)0);
          v5.i32[0] = v70 | (v70 << 16);
          v5 = (int16x8_t)vzip1q_s8((int8x16_t)v5, (int8x16_t)0);
          v71 = vaddq_s16(v4, v2);
          v72 = vaddq_s16(v5, v3);
          *(int8x8_t *)v71.i8 = vqmovun_s16(v71);
          *(int8x8_t *)v72.i8 = vqmovun_s16(v72);
          *v64 = v71.i32[0];
          *(int *)((char *)v64 + v14) = v72.i32[0];
          v73 = v68[v39] | (v68[v39] << 8);
          LODWORD(v68) = v68[v40] | (v68[v40] << 8);
          v71.i32[0] = v73 | (v73 << 16);
          v72.i32[0] = v68 | ((_DWORD)v68 << 16);
          v4.i64[0] = v67[8];
          v5.i64[0] = v67[12];
          v2 = vaddq_s16((int16x8_t)vzip1q_s8((int8x16_t)v71, (int8x16_t)0), v4);
          v3 = vaddq_s16((int16x8_t)vzip1q_s8((int8x16_t)v72, (int8x16_t)0), v5);
          *(int8x8_t *)v2.i8 = vqmovun_s16(v2);
          *(int8x8_t *)v3.i8 = vqmovun_s16(v3);
          goto LABEL_156;
        }
        v111 = (unsigned __int8 *)v64 - v60;
        v112 = *v111 | (*v111 << 8);
        v113 = v111[v14] | (v111[v14] << 8);
        *v64 = v112 | (v112 << 16);
        *(int *)((char *)v64 + v14) = v113 | (v113 << 16);
        v114 = v111[v39] | (v111[v39] << 8);
        LODWORD(v111) = v111[v40] | (v111[v40] << 8);
        v110 = v111 | ((_DWORD)v111 << 16);
        *(int *)((char *)v64 + v39) = v114 | (v114 << 16);
        goto LABEL_170;
      case 2:
        v74 = v60;
        v75 = BYTE1(v60);
        if (v23)
        {
          if (v74)
          {
            v76 = *((unsigned __int8 *)v64 - 1);
            v77 = *((unsigned __int8 *)v64 + v14 - 1);
            v78 = *((unsigned __int8 *)v64 + v39 - 1);
            v79 = *((unsigned __int8 *)v64 + v40 - 1);
            if (v75)
            {
              v2.i32[0] = *(int *)((char *)v64 - v14);
              v2 = (int16x8_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v2.i8));
              v80 = (vaddvq_s32((int32x4_t)v2) + v79 + v78 + v77 + v76 + 4) >> 3;
LABEL_154:
              v186 = (uint64_t *)(v38 + 2 * byte_2160F2308[v35]);
              v2.i64[0] = *v186;
              v3.i64[0] = v186[4];
              v4.i64[0] = v186[8];
              v5.i64[0] = v186[12];
              v6 = (int16x8_t)vzip1q_s8((int8x16_t)(v80 | (v80 << 8) | ((v80 | (v80 << 8)) << 16)), (int8x16_t)0);
              v2 = vaddq_s16(v6, v2);
              v3 = vaddq_s16(v6, v3);
              v4 = vaddq_s16(v6, v4);
              v5 = vaddq_s16(v6, v5);
LABEL_155:
              *v64 = vqmovun_s16(v2).u32[0];
              *(int *)((char *)v64 + v14) = vqmovun_s16(v3).u32[0];
              *(int8x8_t *)v2.i8 = vqmovun_s16(v4);
              *(int8x8_t *)v3.i8 = vqmovun_s16(v5);
LABEL_156:
              *(int *)((char *)v64 + v39) = v2.i32[0];
              *(int *)((char *)v64 + v40) = v3.i32[0];
              goto LABEL_178;
            }
            v136 = v76 + v77 + v78 + v79;
          }
          else
          {
            if (!v75)
            {
              v80 = 128;
              goto LABEL_154;
            }
            v2.i32[0] = *(int *)((char *)v64 - v14);
            v2 = (int16x8_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v2.i8));
            v136 = vaddvq_s32((int32x4_t)v2);
          }
          v80 = (v136 + 2) >> 2;
          goto LABEL_154;
        }
        if (v74)
        {
          v115 = *((unsigned __int8 *)v64 - 1);
          v116 = *((unsigned __int8 *)v64 + v14 - 1);
          v117 = *((unsigned __int8 *)v64 + v39 - 1);
          v118 = *((unsigned __int8 *)v64 + v40 - 1);
          if (v75)
          {
            v2.i32[0] = *(int *)((char *)v64 - v14);
            v2 = (int16x8_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v2.i8));
            v119 = (vaddvq_s32((int32x4_t)v2) + v118 + v117 + v116 + v115 + 4) >> 3;
            goto LABEL_168;
          }
          v167 = v115 + v116 + v117 + v118;
          goto LABEL_145;
        }
        if (v75)
        {
          v2.i32[0] = *(int *)((char *)v64 - v14);
          v2 = (int16x8_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v2.i8));
          v167 = vaddvq_s32((int32x4_t)v2);
LABEL_145:
          v119 = (v167 + 2) >> 2;
          goto LABEL_168;
        }
        v119 = 128;
LABEL_168:
        v110 = v119 | (v119 << 8) | ((v119 | (v119 << 8)) << 16);
LABEL_169:
        *v64 = v110;
        *(int *)((char *)v64 + v14) = v110;
        *(int *)((char *)v64 + v39) = v110;
LABEL_170:
        *(int *)((char *)v64 + v40) = v110;
        goto LABEL_178;
      case 3:
        if ((v60 & 0xFF00) != 0)
          v81 = -(uint64_t)v14;
        else
          v81 = 0;
        if (v23)
        {
          v82 = *(int *)((char *)v64 + v81);
          if ((v60 & 0xFF0000) != 0)
            v83 = *(int *)((char *)v64 - v14 + 4);
          else
            v83 = v82 & 0xFF000000 | ((v82 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v82 & 0xFF000000 | ((v82 & 0xFF000000) >> 8)) >> 16);
          v137 = (uint64_t *)(v38 + 2 * byte_2160F2308[v35]);
          v3.i32[0] = v83;
          v138 = (int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v3, 0xCuLL), (int8x16_t)v82), (int8x16_t)0);
          v139 = (int16x8_t)vextq_s8((int8x16_t)vaddq_s16(v138, v138), (int8x16_t)0, 2uLL);
          v140 = vaddq_s16(v45, (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v138, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_2160EF100));
          v141 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v140, vaddq_s16(v139, v138)), v46);
          v139.i64[0] = *v137;
          v140.i64[0] = v137[4];
          v5.i64[0] = v137[8];
          v6.i64[0] = v137[12];
          v3 = vaddq_s16(v141, v139);
          v4 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v141, (int8x16_t)0, 2uLL), v140);
          v7 = (int16x8_t)vextq_s8((int8x16_t)v141, (int8x16_t)0, 4uLL);
          v5 = vaddq_s16(v7, v5);
          v142 = (int16x8_t)vextq_s8((int8x16_t)v141, (int8x16_t)0, 6uLL);
          goto LABEL_126;
        }
        v120 = *(int *)((char *)v64 + v81);
        if ((v60 & 0xFF0000) != 0)
          v121 = *(int *)((char *)v64 - v14 + 4);
        else
          v121 = v120 & 0xFF000000 | ((v120 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v120 & 0xFF000000 | ((v120 & 0xFF000000) >> 8)) >> 16);
        v3.i32[0] = v121;
        v168 = (int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v3, 0xCuLL), (int8x16_t)v120), (int8x16_t)0);
        v3 = (int16x8_t)vextq_s8((int8x16_t)vaddq_s16(v168, v168), (int8x16_t)0, 2uLL);
        v169 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v45, (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v168, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_2160EF100)), vaddq_s16(v3, v168)), v46);
        *(int8x8_t *)v3.i8 = vqmovun_s16(v169);
        v4 = (int16x8_t)vextq_s8((int8x16_t)v169, (int8x16_t)0, 2uLL);
        *(int8x8_t *)v4.i8 = vqmovun_s16(v4);
        v5 = (int16x8_t)vextq_s8((int8x16_t)v169, (int8x16_t)0, 4uLL);
        *(int8x8_t *)v5.i8 = vqmovun_s16(v5);
        *v64 = v3.i32[0];
        *(int *)((char *)v64 + v14) = v4.i32[0];
        v2 = (int16x8_t)vextq_s8((int8x16_t)v169, (int8x16_t)0, 6uLL);
        goto LABEL_143;
      case 4:
        v84 = v60;
        v85 = BYTE1(v60);
        if (!v23)
        {
          if (v84)
          {
            if (v85)
            {
              v122 = *(int *)((char *)v64 - v14);
              v123 = *((unsigned __int8 *)v64 - v14 - 1);
            }
            else
            {
              v122 = *v64;
              v123 = *v64;
            }
            v170 = *((unsigned __int8 *)v64 + v40 - 1) | (*((unsigned __int8 *)v64 + v39 - 1) << 8) | (*((unsigned __int8 *)v64 + v14 - 1) << 16);
            v171 = *((unsigned __int8 *)v64 - 1);
          }
          else if (v85)
          {
            v122 = *(int *)((char *)v64 - v14);
            v123 = v122;
            v170 = *((unsigned __int8 *)v64 + v40) | (*((unsigned __int8 *)v64 + v39) << 8) | (*((unsigned __int8 *)v64
                                                                                               + v14) << 16);
            v171 = *(unsigned __int8 *)v64;
          }
          else
          {
            v171 = *v64;
            v123 = *v64;
            v170 = *((unsigned __int8 *)v64 + v40) | (*((unsigned __int8 *)v64 + v39) << 8) | (*((unsigned __int8 *)v64
                                                                                               + v14) << 16);
            v122 = *v64;
          }
          v181 = v170 | (v171 << 24);
          v182 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v122, 8uLL), (int8x16_t)v123);
          v6 = (int16x8_t)vshlq_u64((uint64x2_t)v181, v48);
          v183 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)v6, (int8x16_t)vshlq_n_s64(v182, 0x18uLL)), (int8x16_t)0);
          v2 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v183, v183), (int16x8_t)vzip1q_s8(vqtbl1q_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)v181, v47), (int8x16_t)vshlq_n_s64(v182, 0x10uLL)), (int8x16_t)xmmword_2160EE840), (int8x16_t)0)), vaddq_s16(v45, (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vshlq_u64((uint64x2_t)v182, v47), 0x20uLL), (int8x16_t)v181), (int8x16_t)0))),
                            v46);
          v3 = (int16x8_t)vextq_s8((int8x16_t)v2, (int8x16_t)0, 6uLL);
          v3.i32[0] = vqmovun_s16(v3).u32[0];
          v4 = (int16x8_t)vextq_s8((int8x16_t)v2, (int8x16_t)0, 4uLL);
          *(int8x8_t *)v4.i8 = vqmovun_s16(v4);
          v5 = (int16x8_t)vextq_s8((int8x16_t)v2, (int8x16_t)0, 2uLL);
          goto LABEL_165;
        }
        if (v84)
        {
          if (v85)
          {
            v86 = *(int *)((char *)v64 - v14);
            v87 = *((unsigned __int8 *)v64 - v14 - 1);
          }
          else
          {
            v86 = *v64;
            v87 = *v64;
          }
          v143 = *((unsigned __int8 *)v64 + v40 - 1) | (*((unsigned __int8 *)v64 + v39 - 1) << 8) | (*((unsigned __int8 *)v64 + v14 - 1) << 16);
          v144 = *((unsigned __int8 *)v64 - 1);
        }
        else if (v85)
        {
          v86 = *(int *)((char *)v64 - v14);
          v87 = v86;
          v143 = *((unsigned __int8 *)v64 + v40) | (*((unsigned __int8 *)v64 + v39) << 8) | (*((unsigned __int8 *)v64
                                                                                             + v14) << 16);
          v144 = *(unsigned __int8 *)v64;
        }
        else
        {
          v144 = *v64;
          v87 = *v64;
          v143 = *((unsigned __int8 *)v64 + v40) | (*((unsigned __int8 *)v64 + v39) << 8) | (*((unsigned __int8 *)v64
                                                                                             + v14) << 16);
          v86 = *v64;
        }
        v157 = (uint64_t *)(v38 + 2 * byte_2160F2308[v35]);
        v158 = v143 | (v144 << 24);
        v159 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v86, 8uLL), (int8x16_t)v87);
        v160 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF0uLL);
        v161 = (int16x8_t)vzip1q_s8(vqtbl1q_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)v158, v160), (int8x16_t)vshlq_n_s64(v159, 0x10uLL)), (int8x16_t)xmmword_2160EE840), (int8x16_t)0);
        v162 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)v158, (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL)), (int8x16_t)vshlq_n_s64(v159, 0x18uLL)), (int8x16_t)0);
        v6 = vaddq_s16(v162, v162);
        v163 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vshlq_u64((uint64x2_t)v159, v160), 0x20uLL), (int8x16_t)v158), (int8x16_t)0);
        v164 = vaddq_s16(v6, v161);
        v142 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v164, vaddq_s16(v45, v163)), v46);
        v164.i64[0] = *v157;
        v161.i64[0] = v157[8];
        v6.i64[0] = v157[12];
        v3 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v142, (int8x16_t)0, 6uLL), v164);
        v4 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v142, (int8x16_t)0, 4uLL), (int16x8_t)(unint64_t)v157[4]);
        v7 = (int16x8_t)vextq_s8((int8x16_t)v142, (int8x16_t)0, 2uLL);
        v5 = vaddq_s16(v7, v161);
LABEL_126:
        v2 = vaddq_s16(v142, v6);
        goto LABEL_164;
      case 5:
        v88 = v60;
        v89 = BYTE1(v60);
        if (v23)
        {
          if (v88)
          {
            if (v89)
            {
              v90 = *(int *)((char *)v64 - v14);
              v91 = v90 | (*((unsigned __int8 *)v64 - v14 - 1) << 8);
            }
            else
            {
              v90 = *v64;
              v91 = *v64 | (*v64 << 8);
            }
            v165 = *((unsigned __int8 *)v64 - 1) | (*((unsigned __int8 *)v64 + v14 - 1) << 8);
            v166 = (unsigned __int8 *)v64 + v39 - 1;
          }
          else
          {
            if (v89)
            {
              v90 = *(int *)((char *)v64 - v14);
              v91 = v90 | (v90 << 8);
              v145 = *(unsigned __int8 *)v64;
            }
            else
            {
              v90 = *v64;
              v145 = *v64;
              v91 = v145 | (v145 << 8);
            }
            v165 = v145 | (*((unsigned __int8 *)v64 + v14) << 8);
            v166 = (unsigned __int8 *)v64 + v39;
          }
          v187 = v90;
          v188 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
          v189 = (uint64_t *)(v38 + 2 * byte_2160F2308[v35]);
          v190 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v187, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v91, v188));
          v191 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)(v165 | (*v166 << 16)), 0x10uLL), (int8x16_t)v91);
          v192 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v190, v188), (int8x16_t)0);
          v7 = (int16x8_t)vdupq_n_s64(0xFFFFFFF0uLL);
          v193 = vaddq_s16(v192, (int16x8_t)vzip1q_s8(v190, (int8x16_t)0));
          v194 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v193, v44), v43);
          v6 = vaddq_s16(v45, v192);
          v195 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v6, v193), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v190, (uint64x2_t)v7), (int8x16_t)0)), v46);
          v196 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v191, v188), (int8x16_t)0);
          v197 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v45, (int16x8_t)vzip1q_s8(v191, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v191, (uint64x2_t)v7), (int8x16_t)0)), vaddq_s16(v196, v196)), v46);
          v198 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v194, 0xEuLL);
          v199 = (int16x8_t)vorrq_s8((int8x16_t)v198, (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64(v197, 0x20uLL), (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL)));
          v200 = (int16x8_t)vextq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vqtbl1q_s8((int8x16_t)v197, (int8x16_t)xmmword_2160F1940), 0), (int8x16_t)v195, 0xCuLL);
          v195.i64[0] = *v189;
          v198.i64[0] = v189[4];
          v6.i64[0] = v189[8];
          v7.i64[0] = v189[12];
          v3 = vaddq_s16(v194, v195);
          v8 = (int16x8_t)vextq_s8((int8x16_t)v200, (int8x16_t)0, 2uLL);
          v5 = vaddq_s16(v8, v198);
          v4 = vaddq_s16(v6, v199);
          v2 = vaddq_s16(v7, v200);
          v3.i32[0] = vqmovun_s16(v3).u32[0];
        }
        else
        {
          if (v88)
          {
            if (v89)
            {
              v124 = *(int *)((char *)v64 - v14);
              v125 = v124 | (*((unsigned __int8 *)v64 - v14 - 1) << 8);
            }
            else
            {
              v124 = *v64;
              v125 = *v64 | (*v64 << 8);
            }
            v184 = *((unsigned __int8 *)v64 - 1) | (*((unsigned __int8 *)v64 + v14 - 1) << 8);
            v185 = (unsigned __int8 *)v64 + v39 - 1;
          }
          else
          {
            if (v89)
            {
              v124 = *(int *)((char *)v64 - v14);
              v125 = v124 | (v124 << 8);
              v172 = *(unsigned __int8 *)v64;
            }
            else
            {
              v124 = *v64;
              v172 = *v64;
              v125 = v172 | (v172 << 8);
            }
            v184 = v172 | (*((unsigned __int8 *)v64 + v14) << 8);
            v185 = (unsigned __int8 *)v64 + v39;
          }
          v215 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
          v216 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v124, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v125, v215));
          v217 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)(v184 | (*v185 << 16)), 0x10uLL), (int8x16_t)v125);
          v218 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v216, v215), (int8x16_t)0);
          v7 = (int16x8_t)vdupq_n_s64(0xFFFFFFF0uLL);
          v219 = vaddq_s16(v218, (int16x8_t)vzip1q_s8(v216, (int8x16_t)0));
          v8 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v219, v44), v43);
          v6 = vaddq_s16(v45, v218);
          v3 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v6, v219), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v216, (uint64x2_t)v7), (int8x16_t)0)), v46);
          v220 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v217, v215), (int8x16_t)0);
          v221 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v45, (int16x8_t)vzip1q_s8(v217, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v217, (uint64x2_t)v7), (int8x16_t)0)), vaddq_s16(v220, v220)), v46);
          v4 = (int16x8_t)vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v8, 0xEuLL), (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64(v221, 0x20uLL), v50));
          v2 = (int16x8_t)vextq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vqtbl1q_s8((int8x16_t)v221, (int8x16_t)xmmword_2160F1940), 0), (int8x16_t)v3, 0xCuLL);
          v3.i32[0] = vqmovun_s16(v8).u32[0];
          v5 = (int16x8_t)vextq_s8((int8x16_t)v2, (int8x16_t)0, 2uLL);
        }
        *(int8x8_t *)v5.i8 = vqmovun_s16(v5);
        *v64 = v3.i32[0];
        *(int *)((char *)v64 + v14) = v5.i32[0];
        *(int8x8_t *)v3.i8 = vqmovun_s16(v4);
        goto LABEL_176;
      case 6:
        v92 = v60;
        v93 = BYTE1(v60);
        if (v23)
        {
          if (v92)
          {
            if (v93)
            {
              v94 = *(int *)((char *)v64 - v14);
              v95 = *((unsigned __int8 *)v64 - 1);
              v96 = (*((unsigned __int8 *)v64 + v39 - 1) << 16) | (*((unsigned __int8 *)v64 + v14 - 1) << 8) | (*((unsigned __int8 *)v64 + v40 - 1) << 24) | v95;
              v97 = v95 | (*((unsigned __int8 *)v64 - v14 - 1) << 8);
LABEL_163:
              v201 = v94;
              v202 = (uint64_t *)(v38 + 2 * byte_2160F2308[v35]);
              v203 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
              v204 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v96, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v97, v203));
              v205 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v201, 0x10uLL), (int8x16_t)v97);
              v206 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v204, v203), (int8x16_t)0);
              v7 = (int16x8_t)vdupq_n_s64(0xFFFFFFF0uLL);
              v207 = vaddq_s16(v206, (int16x8_t)vzip1q_s8(v204, (int8x16_t)0));
              v8 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v207, v44), v43);
              v6 = vaddq_s16(v45, v206);
              v208 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v6, v207), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v204, (uint64x2_t)v7), (int8x16_t)0)), v46);
              v209 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v205, v203), (int8x16_t)0);
              v210 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v45, (int16x8_t)vzip1q_s8(v205, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v205, (uint64x2_t)v7), (int8x16_t)0)), vaddq_s16(v209, v209)), v46);
              v211 = (int16x8_t)vorrq_s8((int8x16_t)vshlq_n_s64(v210, 0x10uLL), (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64((int64x2_t)v8, 0x30uLL), (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL)));
              v212 = (int16x8_t)vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)v8, (int8x16_t)xmmword_2160F1910), (int32x4_t)0);
              v213 = vqtbl1q_s8(vorrq_s8(vqtbl1q_s8(vextq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v208, 6uLL), (int8x16_t)0, 8uLL), (int8x16_t)xmmword_2160F1900), vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vextq_s8((int8x16_t)0, (int8x16_t)v210, 2uLL), v51), (int8x16_t)v212)), (int8x16_t)xmmword_2160F1920);
              v208.i64[1] = 0xF0E0D0C0B0A0908;
              v214 = (int16x8_t)vqtbl1q_s8(v213, (int8x16_t)xmmword_2160F1930);
              v208.i64[0] = *v202;
              v212.i64[0] = v202[4];
              v6.i64[0] = v202[8];
              v7.i64[0] = v202[12];
              v3 = vaddq_s16(v208, v211);
              v4 = vaddq_s16((int16x8_t)vdupq_laneq_s64((int64x2_t)v214, 1), v212);
              v5 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v214, (int8x16_t)0, 4uLL), v6);
              v2 = vaddq_s16(v7, v214);
              goto LABEL_164;
            }
            v94 = *v64;
            v146 = *((unsigned __int8 *)v64 - 1);
            v147 = *((unsigned __int8 *)v64 + v14 - 1);
            v148 = *((unsigned __int8 *)v64 + v39 - 1) << 16;
            v149 = *((unsigned __int8 *)v64 + v40 - 1);
          }
          else
          {
            if (!v93)
            {
              v94 = *v64;
              v146 = *v64;
              v96 = (*((unsigned __int8 *)v64 + v39) << 16) | (*((unsigned __int8 *)v64 + v14) << 8) | (*((unsigned __int8 *)v64 + v40) << 24) | v146;
              goto LABEL_162;
            }
            v94 = *(int *)((char *)v64 - v14);
            v146 = *(unsigned __int8 *)v64;
            v147 = *((unsigned __int8 *)v64 + v14);
            v148 = *((unsigned __int8 *)v64 + v39) << 16;
            v149 = *((unsigned __int8 *)v64 + v40);
          }
          v96 = v148 | (v147 << 8) | (v149 << 24) | v146;
LABEL_162:
          v97 = v146 & 0xFFFF00FF | (v94 << 8);
          goto LABEL_163;
        }
        if (v92)
        {
          if (v93)
          {
            v126 = *(int *)((char *)v64 - v14);
            v127 = *((unsigned __int8 *)v64 - 1);
            v128 = (*((unsigned __int8 *)v64 + v39 - 1) << 16) | (*((unsigned __int8 *)v64 + v14 - 1) << 8) | (*((unsigned __int8 *)v64 + v40 - 1) << 24) | v127;
            v129 = v127 | (*((unsigned __int8 *)v64 - v14 - 1) << 8);
            goto LABEL_182;
          }
          v126 = *v64;
          v173 = *((unsigned __int8 *)v64 - 1);
          v174 = *((unsigned __int8 *)v64 + v14 - 1);
          v175 = *((unsigned __int8 *)v64 + v39 - 1) << 16;
          v176 = *((unsigned __int8 *)v64 + v40 - 1);
          goto LABEL_152;
        }
        if (v93)
        {
          v126 = *(int *)((char *)v64 - v14);
          v173 = *(unsigned __int8 *)v64;
          v174 = *((unsigned __int8 *)v64 + v14);
          v175 = *((unsigned __int8 *)v64 + v39) << 16;
          v176 = *((unsigned __int8 *)v64 + v40);
LABEL_152:
          v128 = v175 | (v174 << 8) | (v176 << 24) | v173;
          goto LABEL_181;
        }
        v126 = *v64;
        v173 = *v64;
        v128 = (*((unsigned __int8 *)v64 + v39) << 16) | (*((unsigned __int8 *)v64 + v14) << 8) | (*((unsigned __int8 *)v64 + v40) << 24) | v173;
LABEL_181:
        v129 = v173 & 0xFFFF00FF | (v126 << 8);
LABEL_182:
        v222 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
        v223 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v128, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v129, v222));
        v224 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v126, 0x10uLL), (int8x16_t)v129);
        v225 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v223, v222), (int8x16_t)0);
        v7 = (int16x8_t)vdupq_n_s64(0xFFFFFFF0uLL);
        v226 = vaddq_s16(v225, (int16x8_t)vzip1q_s8(v223, (int8x16_t)0));
        v8 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v226, v44), v43);
        v6 = vaddq_s16(v45, v225);
        v227 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v6, v226), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v223, (uint64x2_t)v7), (int8x16_t)0)), v46);
        v228 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v224, v222), (int8x16_t)0);
        v229 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v45, (int16x8_t)vzip1q_s8(v224, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v224, (uint64x2_t)v7), (int8x16_t)0)), vaddq_s16(v228, v228)), v46);
        v4 = (int16x8_t)vorrq_s8((int8x16_t)vshlq_n_s64(v229, 0x10uLL), (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64((int64x2_t)v8, 0x30uLL), (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL)));
        v2 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vorrq_s8(vqtbl1q_s8(vextq_s8(vextq_s8((int8x16_t)0, v227, 6uLL), (int8x16_t)0, 8uLL), (int8x16_t)xmmword_2160F1900), vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vextq_s8((int8x16_t)0, (int8x16_t)v229, 2uLL), v51), (int8x16_t)vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)v8, (int8x16_t)xmmword_2160F1910), (int32x4_t)0))), (int8x16_t)xmmword_2160F1920), (int8x16_t)xmmword_2160F1930);
        v3 = (int16x8_t)vdupq_laneq_s64((int64x2_t)v2, 1);
        *(int8x8_t *)v4.i8 = vqmovun_s16(v4);
        v5 = (int16x8_t)vextq_s8((int8x16_t)v2, (int8x16_t)0, 4uLL);
        *v64 = v4.i32[0];
        *(int *)((char *)v64 + v14) = vqmovun_s16(v3).u32[0];
LABEL_166:
        *(int8x8_t *)v3.i8 = vqmovun_s16(v5);
LABEL_176:
        *(int8x8_t *)v2.i8 = vqmovun_s16(v2);
        *(int *)((char *)v64 + v39) = v3.i32[0];
LABEL_177:
        *(int *)((char *)v64 + v40) = v2.i32[0];
LABEL_178:
        if (++v35 != 16)
          continue;
        return result;
      case 7:
        if ((v60 & 0xFF00) != 0)
          v98 = -(uint64_t)v14;
        else
          v98 = 0;
        if (!v23)
        {
          v130 = *(int *)((char *)v64 + v98);
          if ((v60 & 0xFF0000) != 0)
            v131 = *(int *)((char *)v64 - v14 + 4);
          else
            v131 = v130 & 0xFF000000 | ((v130 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v130 & 0xFF000000 | ((v130 & 0xFF000000) >> 8)) >> 16);
          v3.i32[0] = v131;
          v177 = (int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v3, 0xCuLL), (int8x16_t)v130), (int8x16_t)0);
          v178 = (int16x8_t)vextq_s8((int8x16_t)v177, (int8x16_t)0, 2uLL);
          v4 = vaddq_s16(v178, v177);
          v179 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v4, v44), v43);
          v3 = vaddq_s16(v45, v178);
          v180 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v3, (int16x8_t)vextq_s8((int8x16_t)v177, (int8x16_t)0, 4uLL)), v4), v46);
          *(int8x8_t *)v3.i8 = vqmovun_s16(v179);
          *(int8x8_t *)v4.i8 = vqmovun_s16(v180);
          v5 = (int16x8_t)vextq_s8((int8x16_t)v179, (int8x16_t)0, 2uLL);
          *(int8x8_t *)v5.i8 = vqmovun_s16(v5);
          *v64 = v3.i32[0];
          *(int *)((char *)v64 + v14) = v4.i32[0];
          v2 = (int16x8_t)vextq_s8((int8x16_t)v180, (int8x16_t)0, 2uLL);
LABEL_143:
          *(int8x8_t *)v2.i8 = vqmovun_s16(v2);
          *(int *)((char *)v64 + v39) = v5.i32[0];
          goto LABEL_177;
        }
        v99 = *(int *)((char *)v64 + v98);
        if ((v60 & 0xFF0000) != 0)
          v100 = *(int *)((char *)v64 - v14 + 4);
        else
          v100 = v99 & 0xFF000000 | ((v99 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v99 & 0xFF000000 | ((v99 & 0xFF000000) >> 8)) >> 16);
        v150 = (uint64_t *)(v38 + 2 * byte_2160F2308[v35]);
        v3.i32[0] = v100;
        v151 = (int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v3, 0xCuLL), (int8x16_t)v99), (int8x16_t)0);
        v152 = (int16x8_t)vextq_s8((int8x16_t)v151, (int8x16_t)0, 2uLL);
        v153 = vaddq_s16(v152, v151);
        v154 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v153, v44), v43);
        v155 = vaddq_s16(v45, v152);
        v156 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v155, (int16x8_t)vextq_s8((int8x16_t)v151, (int8x16_t)0, 4uLL)), v153), v46);
        v155.i64[0] = *v150;
        v153.i64[0] = v150[4];
        v6.i64[0] = v150[8];
        v7.i64[0] = v150[12];
        v3 = vaddq_s16(v154, v155);
        v4 = vaddq_s16(v156, v153);
        v5 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v154, (int8x16_t)0, 2uLL), v6);
        v2 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v156, (int8x16_t)0, 2uLL), v7);
LABEL_164:
        v3.i32[0] = vqmovun_s16(v3).u32[0];
        *(int8x8_t *)v4.i8 = vqmovun_s16(v4);
LABEL_165:
        *v64 = v3.i32[0];
        *(int *)((char *)v64 + v14) = v4.i32[0];
        goto LABEL_166;
      case 8:
        if (v23)
        {
          v101 = *((unsigned __int8 *)v64 - v60) | (*((unsigned __int8 *)v64
                                                                     + v14
                                                                     - v60) << 8) | (*((unsigned __int8 *)v64 + v39 - v60) << 16) | (*((unsigned __int8 *)v64 + v40 - v60) << 24);
          v102 = (uint64_t *)(v38 + 2 * byte_2160F2308[v35]);
          v103 = (int16x8_t)vzip1q_s8((int8x16_t)v101, (int8x16_t)0);
          v104 = (int16x8_t)vextq_s8((int8x16_t)v103, (int8x16_t)0, 2uLL);
          v105 = vaddq_s16(v104, v103);
          v106 = (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v103, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_2160EF110);
          v6 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v105, v44), v43);
          v107 = (int16x8_t)vqtbl1q_s8((int8x16_t)v103, (int8x16_t)xmmword_2160F18F0);
          v108 = vzip1q_s16(v6, (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v45, v104), v106), v105), v46));
          v109 = (int16x8_t)vextq_s8((int8x16_t)vdupq_laneq_s32((int32x4_t)v108, 2), (int8x16_t)v107, 0xCuLL);
          v106.i64[0] = *v102;
          v6.i64[0] = v102[4];
          v7.i64[0] = v102[8];
          v8.i64[0] = v102[12];
          v5 = vaddq_s16(v108, v106);
          v3 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v108, (int8x16_t)0, 4uLL), v6);
          v4 = vaddq_s16(v109, v7);
          v2 = vaddq_s16(v8, v107);
          *(int8x8_t *)v5.i8 = vqmovun_s16(v5);
        }
        else
        {
          v132 = (int16x8_t)vzip1q_s8((int8x16_t)(*((unsigned __int8 *)v64 - v60) | (*((unsigned __int8 *)v64+ v14- v60) << 8) | (*((unsigned __int8 *)v64 + v39 - v60) << 16) | (*((unsigned __int8 *)v64 + v40 - v60) << 24)), (int8x16_t)0);
          v133 = (int16x8_t)vextq_s8((int8x16_t)v132, (int8x16_t)0, 2uLL);
          v134 = vaddq_s16(v133, v132);
          v5 = (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v132, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_2160EF110);
          v6 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v134, v44), v43);
          v2 = (int16x8_t)vqtbl1q_s8((int8x16_t)v132, (int8x16_t)xmmword_2160F18F0);
          v135 = vzip1q_s16(v6, (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v45, v133), v5), v134), v46));
          v4 = (int16x8_t)vextq_s8((int8x16_t)vdupq_laneq_s32((int32x4_t)v135, 2), (int8x16_t)v2, 0xCuLL);
          *(int8x8_t *)v5.i8 = vqmovun_s16(v135);
          v3 = (int16x8_t)vextq_s8((int8x16_t)v135, (int8x16_t)0, 4uLL);
        }
        *(int8x8_t *)v3.i8 = vqmovun_s16(v3);
        *(int8x8_t *)v4.i8 = vqmovun_s16(v4);
        *v64 = v5.i32[0];
        *(int *)((char *)v64 + v14) = v3.i32[0];
        *(int8x8_t *)v2.i8 = vqmovun_s16(v2);
        *(int *)((char *)v64 + v39) = v4.i32[0];
        *(int *)((char *)v64 + v40) = v2.i32[0];
        goto LABEL_178;
      default:
        goto LABEL_178;
    }
  }
}

unsigned __int8 *sub_21608AC5C(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7, int16x8_t a8, int16x8_t a9)
{
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  char v16;
  int v17;
  unsigned int v18;
  int v19;
  uint64_t v20;
  unsigned __int8 *v21;
  unsigned __int8 *v22;
  unsigned __int8 *v23;
  unsigned __int8 *v24;
  unsigned __int8 *v25;
  _BOOL4 v26;
  unsigned __int8 *v27;
  _BOOL4 v28;
  _BOOL4 v29;
  _BOOL4 v30;
  unint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  char *v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 *result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int16x8_t v43;
  uint16x8_t v44;
  uint64_t v45;
  uint16x8_t v46;
  unsigned int *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  unint64_t v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  int8x16_t v65;
  int16x8_t v66;
  int16x8_t *v67;
  int8x16_t v68;
  int8x16_t v69;
  int8x16_t v70;
  int16x8_t v71;
  int16x8_t v72;
  int16x8_t v73;
  int16x8_t v74;
  int16x8_t v75;
  int16x8_t v76;
  int16x8_t v77;
  int16x8_t v78;
  int8x8_t v79;
  int8x16_t v80;
  int16x8_t v81;
  uint16x8_t v82;
  int8x16_t v83;
  int8x16_t v84;
  int8x16_t v85;
  int16x8_t v86;
  uint64x2_t v87;
  unsigned int v88;
  char *v89;
  int8x16_t v90;
  int16x8_t v91;
  int16x8_t v92;
  unsigned int v93;
  unsigned int v94;
  unsigned __int8 *v95;
  unsigned int v96;
  int8x16_t v97;
  int8x16_t v98;
  int8x16_t v99;
  int16x8_t v100;
  int16x8_t v101;
  int16x8_t v102;
  int16x8_t v103;
  int8x16_t v104;
  int16x8_t v105;
  int8x16_t v106;
  int16x8_t v107;
  int16x8_t v108;
  unsigned __int8 *v109;
  int8x16_t v110;
  unsigned int v111;
  int8x16_t v112;
  int8x16_t v113;
  int8x16_t v114;
  int16x8_t v115;
  int16x8_t v116;
  int16x8_t v117;
  int16x8_t v118;
  int16x8_t v119;
  unsigned int v120;
  int16x8_t v121;
  int16x8_t v122;
  int8x16_t v123;
  int8x16_t v124;
  int8x16_t v125;
  int8x16_t v126;
  int16x8_t v127;
  unsigned __int8 *v128;
  int16x8_t v129;
  int8x16_t v130;
  unsigned int v131;
  int8x16_t v132;
  int8x16_t v133;
  int8x16_t v134;
  int16x8_t v135;
  int16x8_t v136;
  int16x8_t v137;
  int8x16_t v138;
  int8x16_t v139;
  int16x8_t v140;
  int8x16_t v141;
  int16x8_t v142;
  int16x8_t v143;
  int16x8_t v144;
  int8x16_t v145;
  char *v146;
  unsigned __int8 *v147;
  int8x16_t v148;
  int8x16_t v149;
  int8x16_t v150;
  int16x8_t v151;
  int16x8_t v152;
  int16x8_t v153;
  int8x16_t v154;
  int16x8_t v155;
  int16x8_t v156;
  int16x8_t *v157;
  int16x8_t v158;
  int16x8_t v159;
  int16x8_t v160;
  int16x8_t v161;
  int16x8_t v162;
  int16x8_t v163;
  int16x8_t v164;
  uint16x8_t v165;
  int8x16_t v166;
  int16x8_t v167;
  int32x4_t v168;
  int8x16_t v169;
  int8x16_t v170;
  int16x8_t v171;
  int16x8_t v172;
  int16x8_t v173;
  int16x8_t v174;
  int16x8_t v175;
  int16x8_t v176;
  int16x8_t v177;
  int16x8_t v178;
  int8x16_t v179;
  int16x8_t v180;
  int16x8_t v181;
  int8x16_t v182;
  int8x16_t v183;
  int8x16_t v184;
  int16x8_t v185;
  int32x4_t v186;
  int16x8_t *v187;
  int8x16_t v188;
  int8x16_t v189;
  int16x8_t v190;
  int16x8_t v191;
  int16x8_t v192;
  int16x8_t v193;
  int16x8_t v194;
  int8x8_t v195;
  int8x8_t v196;
  uint8x8_t v197;
  uint8x8_t v198;
  int16x8_t v199;
  uint16x8_t v200;
  int16x8_t v201;
  int16x8_t v202;
  int16x8_t v203;
  int16x8_t v204;
  int16x8_t v205;
  int16x8_t v206;
  int16x8_t v207;
  int16x8_t v208;
  int16x8_t v209;
  int16x8_t v210;
  uint8x8_t v211;
  int16x8_t v212;
  int16x8_t v213;
  int16x8_t v214;
  int16x8_t v215;
  uint8x8_t v216;
  int16x8_t v217;
  int16x8_t v218;
  int16x8_t v219;
  int16x8_t v220;
  uint8x8_t v221;
  int16x8_t v222;
  int8x16_t v223;
  int8x16_t v224;
  int8x16_t v225;
  int16x8_t v226;
  int16x8_t v227;
  unsigned int v228;
  BOOL v229;
  uint64_t v230;
  unsigned __int8 *v231;
  unsigned __int8 *v232;
  uint64_t v233;
  uint64_t v234;
  int8x16x2_t v235;
  int8x16x2_t v236;

  v234 = *MEMORY[0x24BDAC8D0];
  v9 = *(_QWORD *)(a2 + 72);
  v10 = *(_DWORD *)(a1 + 824);
  v11 = *(_DWORD *)(a1 + 828);
  if (!*(_BYTE *)(a2 + 20) || !*(_BYTE *)(a2 + 22))
  {
    v12 = v9 + 408;
    v14 = *(_DWORD *)(v9 + 136);
    if (*(_BYTE *)(a2 + 23) == 1)
    {
      v18 = *(_DWORD *)(a1 + 820);
      v15 = *(_QWORD *)(v9 + 32)
          + 32 * v14 * (v18 / (2 * *(_DWORD *)(a2 + 16)))
          + ((8 * (v18 % (2 * *(_DWORD *)(a2 + 16)))) & 0xFFFFFFF0);
      v13 = ((int)(v18 << 31) >> 31) & (16 * v14);
      goto LABEL_14;
    }
    v15 = *(_QWORD *)(v9 + 32) + (16 * v10);
    v17 = v11 * v14;
    goto LABEL_10;
  }
  v12 = v9 + 472;
  v13 = *(_DWORD *)(v9 + 136);
  v14 = 2 * v13;
  v15 = *(_QWORD *)(v9 + 32) + (16 * v10);
  if (!*(_BYTE *)(a2 + 21))
  {
    v17 = v11 * v13;
    if (*(_BYTE *)v9)
    {
      v13 = 32 * v17;
      goto LABEL_14;
    }
LABEL_10:
    v13 = 16 * v17;
    goto LABEL_14;
  }
  if (*(_BYTE *)v9)
    v16 = 5;
  else
    v16 = 4;
  v15 += (v11 << v16) * v13;
LABEL_14:
  v19 = *(unsigned __int8 *)(a1 + 816);
  v20 = *(_QWORD *)(a2 + 968) + 16;
  v21 = *(unsigned __int8 **)(a2 + 936);
  v22 = *(unsigned __int8 **)(a2 + 944);
  v23 = *(unsigned __int8 **)(a2 + 952);
  v24 = *(unsigned __int8 **)(a2 + 960);
  v232 = 0;
  v233 = 0;
  v230 = v20;
  v231 = 0;
  if (v21)
  {
    if (v21[32])
      v25 = v21 + 16;
    else
      v25 = v21;
    v231 = v25;
    v26 = 1;
    if (v22)
      goto LABEL_19;
LABEL_23:
    v27 = 0;
    v28 = 0;
    goto LABEL_24;
  }
  v26 = 0;
  if (!v22)
    goto LABEL_23;
LABEL_19:
  v27 = v22 + 16;
  if (!v22[32])
    v27 = v22;
  v28 = 1;
LABEL_24:
  v232 = v27;
  v29 = v23 != 0;
  v30 = v24 != 0;
  if (*(_BYTE *)(a2 + 928))
  {
    if (v21)
    {
      if (v21[16] == 34)
      {
        v26 = *v21 != 34;
        if (!v22)
        {
LABEL_34:
          v28 = 0;
          if (v23)
            goto LABEL_35;
          goto LABEL_39;
        }
      }
      else
      {
        v26 = 1;
        if (!v22)
          goto LABEL_34;
      }
    }
    else
    {
      v26 = 0;
      if (!v22)
        goto LABEL_34;
    }
    if (v22[16] == 34)
    {
      v28 = *v22 != 34;
      if (v23)
      {
LABEL_35:
        if (v23[16] == 34)
        {
          v29 = *v23 != 34;
          if (!v24)
            goto LABEL_43;
LABEL_40:
          v30 = v24[16] != 34 || *v24 != 34;
          goto LABEL_45;
        }
        v29 = 1;
        if (v24)
          goto LABEL_40;
LABEL_43:
        v30 = 0;
        goto LABEL_45;
      }
    }
    else
    {
      v28 = 1;
      if (v23)
        goto LABEL_35;
    }
LABEL_39:
    v29 = 0;
    if (v24)
      goto LABEL_40;
    goto LABEL_43;
  }
LABEL_45:
  v31 = 0;
  v32 = v15 + v13;
  v33 = (2 * v29) | (4 * v28) | (8 * v26);
  v34 = 3 * v14;
  v35 = &byte_2160F2328;
  v36 = v33 | v30;
  v37 = a2 + 112;
  v38 = 7 * v14;
  result = (unsigned __int8 *)(a1 + 1158);
  v40 = 2 * v14;
  v41 = 4 * v14;
  v42 = 6 * v14;
  v43.i64[0] = 0x2000200020002;
  v43.i64[1] = 0x2000200020002;
  v44.i64[0] = 0x1000100010001;
  v44.i64[1] = 0x1000100010001;
  v45 = 5 * v14;
  v46.i64[0] = -1;
  v46.i64[1] = -1;
  v47 = (unsigned int *)((char *)&unk_2160F232C + 4 * v36);
  while (2)
  {
    v48 = byte_254E10D40[v31];
    v49 = byte_254E10D40[v31 + 16];
    v50 = *(&v230 + (~(2 * (_BYTE)v49) & 2));
    v51 = *(&v230 + ((v48 & 1) == 0));
    if (v50)
      v52 = v51 == 0;
    else
      v52 = 1;
    if (v52
      || (v53 = *(unsigned __int8 *)(v51 + ((v48 >> 1) & 0xF)),
          v54 = *(unsigned __int8 *)(v50 + ((v49 >> 1) & 0xF)),
          (*(unsigned __int8 *)(a2 + 928) & ((v54 | v53) >> 5) & 1) != 0))
    {
      v55 = 2;
    }
    else
    {
      v55 = (((v53 & 0xF) - (v54 & 0xF)) & ((int)((v53 & 0xF) - (v54 & 0xF)) >> 31)) + (v54 & 0xF);
    }
    v57 = *v47;
    v47 += 16;
    v56 = v57;
    v58 = *result;
    if (v55 <= v58)
      ++v58;
    v59 = v58 & (*(result - 20) - 1) | v55 & -*(result - 20);
    *(_DWORD *)(v20 + v31) = vdup_n_s8(v59).u32[0];
    v60 = v56 >> 24;
    v61 = (_QWORD *)(v32 + *(unsigned int *)(v12 + 4 * v31));
    v62 = v56;
    v63 = BYTE1(v56);
    v64 = BYTE2(v56);
    switch(v59)
    {
      case 0u:
        a8.i64[0] = *(_QWORD *)((char *)v61 - v63 * v14);
        a8.i16[4] = *((unsigned __int8 *)v61 + v64 - v14 + 7);
        v65 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xFuLL), (int8x16_t)*((unsigned __int8 *)v61 - v14 - v60));
        a9 = (int16x8_t)vzip1q_s8(v65, (int8x16_t)0);
        v66 = (int16x8_t)vzip1q_s8(vextq_s8(v65, (int8x16_t)0, 1uLL), (int8x16_t)0);
        a8 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(a9, (int16x8_t)vzip1q_s8(vextq_s8(v65, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v66, v66)), v43), v44);
        if (v19)
        {
          v67 = (int16x8_t *)(v37 + 2 * *v35);
          goto LABEL_105;
        }
        *(int8x8_t *)a8.i8 = vqmovun_s16(a8);
        goto LABEL_114;
      case 1u:
        v68 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v14 - v62), 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v40 - v62), 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v34 - v62), 0xCuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v41 - v62), 0xBuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v42 - v62), 9uLL)), vorrq_s8(vzip1q_s8((int8x16_t)*((unsigned __int8 *)v61 + ~(unint64_t)(v60 * v14)), (int8x16_t)*((unsigned __int8 *)v61 - v62)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v45 - v62), 0xAuLL)));
        v69 = vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v38 - v62), 8uLL);
        v70 = vorrq_s8(v68, vorrq_s8(vextq_s8((int8x16_t)0, v69, 0xFuLL), v69));
        v71 = (int16x8_t)vzip1q_s8(vextq_s8(v70, (int8x16_t)0, 1uLL), (int8x16_t)0);
        v72 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v68, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v70, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v71, v71)), v43), v44);
        v73 = vdupq_lane_s16(*(int16x4_t *)v72.i8, 0);
        v74 = vdupq_lane_s16(*(int16x4_t *)v72.i8, 1);
        v75 = vdupq_lane_s16(*(int16x4_t *)v72.i8, 2);
        v76 = vdupq_lane_s16(*(int16x4_t *)v72.i8, 3);
        v77 = vdupq_laneq_s16(v72, 4);
        v78 = vdupq_laneq_s16(v72, 5);
        a9 = vdupq_laneq_s16(v72, 6);
        a8 = vdupq_laneq_s16(v72, 7);
        if (!v19)
          goto LABEL_59;
        goto LABEL_66;
      case 2u:
        if ((_DWORD)v62)
        {
          if (v63)
          {
            a8.i64[0] = *(_QWORD *)((char *)v61 - v14);
            a8.i16[4] = *((unsigned __int8 *)v61 + v64 - v14 + 7);
            v80 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xFuLL), (int8x16_t)*((unsigned __int8 *)v61 - v14 - v60));
            v81 = (int16x8_t)vzip1q_s8(vextq_s8(v80, (int8x16_t)0, 1uLL), (int8x16_t)0);
            v82 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v80, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v80, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v81, v81)), v43);
            v83 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v14 - 1), 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v40 - 1), 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v34 - 1), 0xCuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v41 - 1), 0xBuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v42 - 1), 9uLL)), vorrq_s8(vzip1q_s8((int8x16_t)*((unsigned __int8 *)v61 - v60 * v14 - 1), (int8x16_t)*((unsigned __int8 *)v61 - 1)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v45 - 1), 0xAuLL)));
            v84 = vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v38 - 1), 8uLL);
            v85 = vorrq_s8(v83, vorrq_s8(vextq_s8((int8x16_t)0, v84, 0xFuLL), v84));
            v86 = (int16x8_t)vzip1q_s8(vextq_s8(v85, (int8x16_t)0, 1uLL), (int8x16_t)0);
            a9 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v83, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v85, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v86, v86)), v43), v44);
            v87 = vpaddlq_u32(vpaddlq_u16(vpaddlq_u8((uint8x16_t)vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16(v82, v44)), a9))));
            v88 = ((v87.u16[4] + v87.u16[0] + 8) >> 4 << 8) | ((v87.u16[4] + v87.u16[0] + 8) >> 4);
            goto LABEL_102;
          }
          v223 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v14 - 1), 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v40 - 1), 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v34 - 1), 0xCuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v41 - 1), 0xBuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v42 - 1), 9uLL)), vorrq_s8(vzip1q_s8((int8x16_t)*((unsigned __int8 *)v61 - v60 * v14 - 1), (int8x16_t)*((unsigned __int8 *)v61 - 1)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v45 - 1), 0xAuLL)));
          v224 = vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v38 - 1), 8uLL);
          v225 = vorrq_s8(v223, vorrq_s8(vextq_s8((int8x16_t)0, v224, 0xFuLL), v224));
          v226 = (int16x8_t)vzip1q_s8(vextq_s8(v225, (int8x16_t)0, 1uLL), (int8x16_t)0);
          v165 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v223, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v225, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v226, v226)), v43);
        }
        else
        {
          a8 = (int16x8_t)xmmword_2160F19E0;
          if (!v63)
            goto LABEL_103;
          a8.i64[0] = *(_QWORD *)((char *)v61 - v14);
          v163 = (int16x8_t)vzip1q_s8((int8x16_t)a8, (int8x16_t)0);
          a8.i16[4] = *((unsigned __int8 *)v61 + v64 - v14 + 7);
          v164 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v163, 0xEuLL);
          v164.i16[0] = *((unsigned __int8 *)v61 - v14 - v60);
          v165 = (uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8((int8x16_t)a8, (int8x16_t)0, 1uLL), (int8x16_t)0), vaddq_s16(v163, v163)), vaddq_s16(v164, v43));
        }
        v227 = (int16x8_t)vshlq_u16(v165, v44);
        a9 = (int16x8_t)vqmovun_high_s16(vqmovun_s16(v227), v227);
        v228 = vpaddlq_u32(vpaddlq_u16(vpaddlq_u8((uint8x16_t)a9))).u16[0] + 4;
        v88 = (v228 >> 3 << 8) | (v228 >> 3);
LABEL_102:
        a8 = (int16x8_t)vzip1q_s32((int32x4_t)(v88 | (v88 << 16)), (int32x4_t)(v88 | (v88 << 16)));
LABEL_103:
        if (!v19)
        {
LABEL_114:
          *v61 = a8.i64[0];
          *(_QWORD *)((char *)v61 + v14) = a8.i64[0];
          *(_QWORD *)((char *)v61 + v40) = a8.i64[0];
          *(_QWORD *)((char *)v61 + v34) = a8.i64[0];
          *(_QWORD *)((char *)v61 + v41) = a8.i64[0];
          *(_QWORD *)((char *)v61 + v45) = a8.i64[0];
          *(_QWORD *)((char *)v61 + v42) = a8.i64[0];
          goto LABEL_110;
        }
        v67 = (int16x8_t *)(v37 + 2 * *v35);
        a8 = (int16x8_t)vzip1q_s8((int8x16_t)a8, (int8x16_t)0);
LABEL_105:
        *v61 = vqmovun_s16(vaddq_s16(*v67, a8));
        *(int8x8_t *)((char *)v61 + v14) = vqmovun_s16(vaddq_s16(v67[2], a8));
        *(int8x8_t *)((char *)v61 + v40) = vqmovun_s16(vaddq_s16(v67[4], a8));
        *(int8x8_t *)((char *)v61 + v34) = vqmovun_s16(vaddq_s16(v67[6], a8));
        *(int8x8_t *)((char *)v61 + v41) = vqmovun_s16(vaddq_s16(v67[8], a8));
        *(int8x8_t *)((char *)v61 + v45) = vqmovun_s16(vaddq_s16(v67[10], a8));
        v181 = vaddq_s16(v67[12], a8);
        goto LABEL_106;
      case 3u:
        a9.i64[0] = *(_QWORD *)((char *)v61 - v63 * v14);
        v89 = (char *)v61 - v14;
        if ((_DWORD)v64)
        {
          a8.i64[0] = *((_QWORD *)v89 + 1);
        }
        else
        {
          v166 = vextq_s8((int8x16_t)a9, (int8x16_t)0, 7uLL);
          v167 = (int16x8_t)vzip1q_s8(v166, v166);
          v168 = (int32x4_t)vzip1q_s16(v167, v167);
          a8 = (int16x8_t)vzip1q_s32(v168, v168);
        }
        v169 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a9, 0xFuLL), (int8x16_t)v89[-v60]);
        v170 = vorrq_s8(v169, vextq_s8((int8x16_t)0, (int8x16_t)a8, 7uLL));
        v171 = (int16x8_t)vzip1q_s8(v169, (int8x16_t)0);
        v172 = (int16x8_t)vzip1q_s8(vextq_s8(v169, (int8x16_t)0, 1uLL), (int8x16_t)0);
        v173 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v171, (int16x8_t)vzip1q_s8(vextq_s8(v170, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(vaddq_s16(v172, v172), v43)), v44);
        v174 = (int16x8_t)vzip1q_s8((int8x16_t)a8, (int8x16_t)0);
        v175 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v174, v174), (int16x8_t)vzip2q_s8(v170, (int8x16_t)0)), vaddq_s16((int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, vdupq_lane_s8(*(int8x8_t *)a8.i8, 7), 9uLL), vextq_s8((int8x16_t)a8, (int8x16_t)0, 1uLL)), (int8x16_t)0), v43)), v44);
        v176 = (int16x8_t)vextq_s8((int8x16_t)v173, (int8x16_t)v175, 2uLL);
        v177 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v173, (int16x8_t)vextq_s8((int8x16_t)v173, (int8x16_t)v175, 4uLL)), vaddq_s16(v176, v176)), v43), v44);
        v178 = (int16x8_t)vextq_s8((int8x16_t)v175, (int8x16_t)0, 2uLL);
        v179 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v175, (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v175, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_2160F19D0)), vaddq_s16(vaddq_s16(v178, v178), v43)), v44);
        v180 = (int16x8_t)vextq_s8((int8x16_t)v177, v179, 2uLL);
        v75 = (int16x8_t)vextq_s8((int8x16_t)v177, v179, 4uLL);
        v76 = (int16x8_t)vextq_s8((int8x16_t)v177, v179, 6uLL);
        v77 = (int16x8_t)vextq_s8((int8x16_t)v177, v179, 8uLL);
        v78 = (int16x8_t)vextq_s8((int8x16_t)v177, v179, 0xAuLL);
        a9 = (int16x8_t)vextq_s8((int8x16_t)v177, v179, 0xCuLL);
        a8 = (int16x8_t)vextq_s8((int8x16_t)v177, v179, 0xEuLL);
        if (v19)
        {
          v67 = (int16x8_t *)(v37 + 2 * *v35);
          *v61 = vqmovun_s16(vaddq_s16(*v67, v177));
          v105 = vaddq_s16(v67[2], v180);
          goto LABEL_81;
        }
        *v61 = vqmovun_s16(v177);
        v79 = vqmovun_s16(v180);
        goto LABEL_89;
      case 4u:
        a8.i64[0] = *(_QWORD *)((char *)v61 - v63 * v14);
        a8.i16[4] = *((unsigned __int8 *)v61 + v64 - v14 + 7);
        v90 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xFuLL), (int8x16_t)*((unsigned __int8 *)v61 - v14 - v60));
        v91 = (int16x8_t)vzip1q_s8(vextq_s8(v90, (int8x16_t)0, 1uLL), (int8x16_t)0);
        v92 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v90, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v90, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v91, v91)), v43), v44);
        v93 = *((unsigned __int8 *)v61 + ~(unint64_t)(v60 * v14));
        v94 = v93;
        v95 = (unsigned __int8 *)v61 - v62;
        v96 = (*v95 + 2 * v93 + *(_QWORD *)((char *)v61 - v63 * v14) + 2) >> 2;
        v97 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v95[v14], 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)v95[v40], 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v95[v34], 0xCuLL)), vzip1q_s8((int8x16_t)v94, (int8x16_t)*v95)), vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v95[v41], 0xBuLL), vextq_s8((int8x16_t)0, (int8x16_t)v95[v45], 0xAuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v95[v42], 9uLL)));
        v98 = vextq_s8((int8x16_t)0, (int8x16_t)v95[v38], 8uLL);
        v99 = vorrq_s8(v97, vorrq_s8(vextq_s8((int8x16_t)0, v98, 0xFuLL), v98));
        v100 = (int16x8_t)vzip1q_s8(vextq_s8(v99, (int8x16_t)0, 1uLL), (int8x16_t)0);
        v101 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v97, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v99, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v100, v100)), v43), v44);
        v102 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v92, 0xEuLL);
        v102.i16[0] = v96;
        v103 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v101, 0xEuLL);
        v103.i16[0] = v96;
        v73 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v92, v92), (int16x8_t)vextq_s8((int8x16_t)v92, (int8x16_t)0, 2uLL)), v43), v102), v44), 0xEuLL);
        v73.i16[0] = (2 * v96 + v92.u16[0] + v101.u16[0] + 2) >> 2;
        v104 = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v101, v101), (int16x8_t)vextq_s8((int8x16_t)v101, (int8x16_t)0, 2uLL)), v43), v103), v44), (int8x16_t)xmmword_2160F1960), (int8x16_t)xmmword_2160F1970), (int8x16_t)xmmword_2160F1980);
        v74 = (int16x8_t)vextq_s8(v104, (int8x16_t)v73, 0xEuLL);
        v75 = (int16x8_t)vextq_s8(v104, (int8x16_t)v73, 0xCuLL);
        v76 = (int16x8_t)vextq_s8(v104, (int8x16_t)v73, 0xAuLL);
        v77 = (int16x8_t)vextq_s8(v104, (int8x16_t)v73, 8uLL);
        v78 = (int16x8_t)vextq_s8(v104, (int8x16_t)v73, 6uLL);
        a9 = (int16x8_t)vextq_s8(v104, (int8x16_t)v73, 4uLL);
        a8 = (int16x8_t)vextq_s8(v104, (int8x16_t)v73, 2uLL);
        if (v19)
        {
LABEL_66:
          v67 = (int16x8_t *)(v37 + 2 * *v35);
          *v61 = vqmovun_s16(vaddq_s16(*v67, v73));
          v105 = vaddq_s16(v67[2], v74);
LABEL_81:
          *(int8x8_t *)((char *)v61 + v14) = vqmovun_s16(v105);
          *(int8x8_t *)((char *)v61 + v40) = vqmovun_s16(vaddq_s16(v67[4], v75));
          *(int8x8_t *)((char *)v61 + v34) = vqmovun_s16(vaddq_s16(v67[6], v76));
          *(int8x8_t *)((char *)v61 + v41) = vqmovun_s16(vaddq_s16(v67[8], v77));
          *(int8x8_t *)((char *)v61 + v45) = vqmovun_s16(vaddq_s16(v67[10], v78));
          v181 = vaddq_s16(v67[12], a9);
LABEL_106:
          *(int8x8_t *)((char *)v61 + v42) = vqmovun_s16(v181);
          goto LABEL_107;
        }
LABEL_59:
        *v61 = vqmovun_s16(v73);
        v79 = vqmovun_s16(v74);
LABEL_89:
        *(int8x8_t *)((char *)v61 + v14) = v79;
        *(int8x8_t *)((char *)v61 + v40) = vqmovun_s16(v75);
        *(int8x8_t *)((char *)v61 + v34) = vqmovun_s16(v76);
        *(int8x8_t *)((char *)v61 + v41) = vqmovun_s16(v77);
        *(int8x8_t *)((char *)v61 + v45) = vqmovun_s16(v78);
        goto LABEL_99;
      case 5u:
        a8.i64[0] = *(_QWORD *)((char *)v61 - v63 * v14);
        a8.i16[4] = *((unsigned __int8 *)v61 + v64 - v14 + 7);
        v106 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xFuLL), (int8x16_t)*((unsigned __int8 *)v61 - v14 - v60));
        v107 = (int16x8_t)vzip1q_s8(vextq_s8(v106, (int8x16_t)0, 1uLL), (int8x16_t)0);
        v108 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v106, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v106, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v107, v107)), v43), v44);
        v109 = (unsigned __int8 *)v61 - v62;
        v110 = vzip1q_s8((int8x16_t)*((unsigned __int8 *)v61 + ~(unint64_t)(v60 * v14)), (int8x16_t)*v109);
        v111 = (*v109
              + 2 * *((unsigned __int8 *)v61 + ~(unint64_t)(v60 * v14))
              + *(_QWORD *)((char *)v61 - v63 * v14)
              + 2) >> 2;
        v112 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v109[v14], 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)v109[v40], 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v109[v34], 0xCuLL)), v110), vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v109[v41], 0xBuLL), vextq_s8((int8x16_t)0, (int8x16_t)v109[v45], 0xAuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v109[v42], 9uLL)));
        v113 = vextq_s8((int8x16_t)0, (int8x16_t)v109[v38], 8uLL);
        v114 = vorrq_s8(v112, vorrq_s8(vextq_s8((int8x16_t)0, v113, 0xFuLL), v113));
        v115 = (int16x8_t)vzip1q_s8(vextq_s8(v114, (int8x16_t)0, 1uLL), (int8x16_t)0);
        v116 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v112, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v114, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v115, v115)), v43), v44);
        v117 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v108, 0xEuLL);
        v117.i16[0] = v111;
        v118 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v117, vaddq_s16(v108, (int16x8_t)vshlq_u16((uint16x8_t)v43, v46))), v46);
        v119 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v116, 0xEuLL);
        v119.i16[0] = v111;
        v120 = (2 * v111 + v108.u16[0] + v116.u16[0] + 2) >> 2;
        a9 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v108, v108), (int16x8_t)vextq_s8((int8x16_t)v108, (int8x16_t)0, 2uLL)), v43), v117), v44), 0xEuLL);
        a9.i16[0] = v120;
        v121 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v116, v116), (int16x8_t)vextq_s8((int8x16_t)v116, (int8x16_t)0, 2uLL)), v43), v119), v44), (int8x16_t)xmmword_2160F1960), (int8x16_t)xmmword_2160F1970), (int8x16_t)xmmword_2160F1980);
        v122 = (int16x8_t)vextq_s8((int8x16_t)v121, (int8x16_t)v118, 0xEuLL);
        v123 = (int8x16_t)vdupq_laneq_s16(v121, 6);
        if (v19)
        {
          v67 = (int16x8_t *)(v37 + 2 * *v35);
          *v61 = vqmovun_s16(vaddq_s16(*v67, v118));
          *(int8x8_t *)((char *)v61 + v14) = vqmovun_s16(vaddq_s16(v67[2], a9));
          *(int8x8_t *)((char *)v61 + v40) = vqmovun_s16(vaddq_s16(v67[4], v122));
          *(int8x8_t *)((char *)v61 + v34) = vqmovun_s16(vaddq_s16(v67[6], (int16x8_t)vextq_s8(v123, (int8x16_t)a9, 0xEuLL)));
          v124 = vqtbl1q_s8((int8x16_t)v121, (int8x16_t)xmmword_2160F1990);
          *(int8x8_t *)((char *)v61 + v41) = vqmovun_s16(vaddq_s16(v67[8], (int16x8_t)vextq_s8(v124, (int8x16_t)v118, 0xCuLL)));
          v125 = vqtbl1q_s8((int8x16_t)v121, (int8x16_t)xmmword_2160F19A0);
          *(int8x8_t *)((char *)v61 + v45) = vqmovun_s16(vaddq_s16(v67[10], (int16x8_t)vextq_s8(v125, (int8x16_t)a9, 0xCuLL)));
          *(int8x8_t *)((char *)v61 + v42) = vqmovun_s16(vaddq_s16(v67[12], (int16x8_t)vextq_s8(vqtbl1q_s8(v124, (int8x16_t)xmmword_2160F19B0), (int8x16_t)v118, 0xAuLL)));
          a8 = (int16x8_t)vextq_s8(vqtbl1q_s8(vqtbl1q_s8(v125, (int8x16_t)xmmword_2160F19B0), (int8x16_t)xmmword_2160F19C0), (int8x16_t)a9, 0xAuLL);
          goto LABEL_107;
        }
        *v61 = vqmovun_s16(v118);
        *(int8x8_t *)((char *)v61 + v14) = vqmovun_s16(a9);
        *(int8x8_t *)((char *)v61 + v40) = vqmovun_s16(v122);
        *(int8x8_t *)((char *)v61 + v34) = vqmovun_s16((int16x8_t)vextq_s8(v123, (int8x16_t)a9, 0xEuLL));
        v182 = vqtbl1q_s8((int8x16_t)v121, (int8x16_t)xmmword_2160F1990);
        *(int8x8_t *)((char *)v61 + v41) = vqmovun_s16((int16x8_t)vextq_s8(v182, (int8x16_t)v118, 0xCuLL));
        v183 = vqtbl1q_s8((int8x16_t)v121, (int8x16_t)xmmword_2160F19A0);
        *(int8x8_t *)((char *)v61 + v45) = vqmovun_s16((int16x8_t)vextq_s8(v183, (int8x16_t)a9, 0xCuLL));
        *(int8x8_t *)((char *)v61 + v42) = vqmovun_s16((int16x8_t)vextq_s8(vqtbl1q_s8(v182, (int8x16_t)xmmword_2160F19B0), (int8x16_t)v118, 0xAuLL));
        a8 = (int16x8_t)vextq_s8(vqtbl1q_s8(vqtbl1q_s8(v183, (int8x16_t)xmmword_2160F19B0), (int8x16_t)xmmword_2160F19C0), (int8x16_t)a9, 0xAuLL);
        goto LABEL_109;
      case 6u:
        a8.i64[0] = *(_QWORD *)((char *)v61 - v63 * v14);
        a8.i16[4] = *((unsigned __int8 *)v61 + v64 - v14 + 7);
        v126 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xFuLL), (int8x16_t)*((unsigned __int8 *)v61 - v14 - v60));
        v127 = (int16x8_t)vzip1q_s8(vextq_s8(v126, (int8x16_t)0, 1uLL), (int8x16_t)0);
        v128 = (unsigned __int8 *)v61 - v62;
        v129 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v126, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v126, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v127, v127)), v43), v44);
        v130 = vzip1q_s8((int8x16_t)*((unsigned __int8 *)v61 + ~(unint64_t)(v60 * v14)), (int8x16_t)*v128);
        v131 = (*v128
              + 2 * *((unsigned __int8 *)v61 + ~(unint64_t)(v60 * v14))
              + *(_QWORD *)((char *)v61 - v63 * v14)
              + 2) >> 2;
        v132 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v128[v14], 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)v128[v40], 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v128[v34], 0xCuLL)), v130), vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v128[v41], 0xBuLL), vextq_s8((int8x16_t)0, (int8x16_t)v128[v45], 0xAuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v128[v42], 9uLL)));
        v133 = vextq_s8((int8x16_t)0, (int8x16_t)v128[v38], 8uLL);
        v134 = vorrq_s8(v132, vorrq_s8(vextq_s8((int8x16_t)0, v133, 0xFuLL), v133));
        v135 = (int16x8_t)vzip1q_s8(vextq_s8(v134, (int8x16_t)0, 1uLL), (int8x16_t)0);
        v136 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v132, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v134, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v135, v135)), v43), v44);
        v137 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v136, 0xEuLL);
        v137.i16[0] = v131;
        v138 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vshlq_u16((uint16x8_t)v43, v46), v136), v137), v46);
        v139 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v136, v136), (int16x8_t)vextq_s8((int8x16_t)v136, (int8x16_t)0, 2uLL)), v43), v137), v44);
        v140 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v129, 0xEuLL);
        v140.i16[0] = v131;
        v141 = vextq_s8((int8x16_t)0, (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v129, v129), (int16x8_t)vextq_s8((int8x16_t)v129, (int8x16_t)0, 2uLL)), v43), v140), v44), 0xEuLL);
        v141.i16[0] = (2 * v131 + v129.u16[0] + v136.u16[0] + 2) >> 2;
        v142 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v138, (int8x16_t)xmmword_2160F1960), (int8x16_t)xmmword_2160F1970), (int8x16_t)xmmword_2160F1980);
        v143 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v139, (int8x16_t)xmmword_2160F1960), (int8x16_t)xmmword_2160F1970), (int8x16_t)xmmword_2160F1980);
        v144 = (int16x8_t)vextq_s8((int8x16_t)v142, v141, 0xEuLL);
        v145 = (int8x16_t)vzip2q_s16(v143, v142);
        a9 = (int16x8_t)vdupq_lane_s64(v142.i64[0], 0);
        if (!v19)
        {
          *v61 = vqmovun_s16(v144);
          *(int8x8_t *)((char *)v61 + v14) = vqmovun_s16((int16x8_t)vextq_s8(v145, v141, 0xAuLL));
          *(int8x8_t *)((char *)v61 + v40) = vqmovun_s16((int16x8_t)vextq_s8(v145, v141, 6uLL));
          *(int8x8_t *)((char *)v61 + v34) = vqmovun_s16((int16x8_t)vextq_s8(v145, v141, 2uLL));
          *(int8x8_t *)((char *)v61 + v41) = vqmovun_s16(vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v142, 0xEuLL), v143));
          *(int8x8_t *)((char *)v61 + v45) = vqmovun_s16(vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v142, 0xCuLL), (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v143, 0xEuLL)));
          *(int8x8_t *)((char *)v61 + v42) = vqmovun_s16(vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v142, 0xAuLL), (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v143, 0xCuLL)));
          a8 = vzip2q_s16(a9, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v143, 0xAuLL));
          goto LABEL_109;
        }
        v67 = (int16x8_t *)(v37 + 2 * *v35);
        *v61 = vqmovun_s16(vaddq_s16(*v67, v144));
        *(int8x8_t *)((char *)v61 + v14) = vqmovun_s16(vaddq_s16(v67[2], (int16x8_t)vextq_s8(v145, v141, 0xAuLL)));
        *(int8x8_t *)((char *)v61 + v40) = vqmovun_s16(vaddq_s16(v67[4], (int16x8_t)vextq_s8(v145, v141, 6uLL)));
        *(int8x8_t *)((char *)v61 + v34) = vqmovun_s16(vaddq_s16(v67[6], (int16x8_t)vextq_s8(v145, v141, 2uLL)));
        *(int8x8_t *)((char *)v61 + v41) = vqmovun_s16(vaddq_s16(v67[8], vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v142, 0xEuLL), v143)));
        *(int8x8_t *)((char *)v61 + v45) = vqmovun_s16(vaddq_s16(v67[10], vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v142, 0xCuLL), (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v143, 0xEuLL))));
        *(int8x8_t *)((char *)v61 + v42) = vqmovun_s16(vaddq_s16(v67[12], vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v142, 0xAuLL), (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v143, 0xCuLL))));
        a8 = vzip2q_s16(a9, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v143, 0xAuLL));
LABEL_107:
        a9 = v67[14];
        goto LABEL_108;
      case 7u:
        a9.i64[0] = *(_QWORD *)((char *)v61 - v63 * v14);
        v146 = (char *)v61 - v14;
        if ((_DWORD)v64)
        {
          a8.i64[0] = *((_QWORD *)v146 + 1);
        }
        else
        {
          v184 = vextq_s8((int8x16_t)a9, (int8x16_t)0, 7uLL);
          v185 = (int16x8_t)vzip1q_s8(v184, v184);
          v186 = (int32x4_t)vzip1q_s16(v185, v185);
          a8 = (int16x8_t)vzip1q_s32(v186, v186);
        }
        v187 = (int16x8_t *)(v37 + 2 * *v35);
        v188 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a9, 0xFuLL), (int8x16_t)v146[-v60]);
        v189 = vorrq_s8(v188, vextq_s8((int8x16_t)0, (int8x16_t)a8, 7uLL));
        v190 = (int16x8_t)vzip1q_s8(v188, (int8x16_t)0);
        v191 = (int16x8_t)vzip1q_s8(vextq_s8(v188, (int8x16_t)0, 1uLL), (int8x16_t)0);
        v192 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v190, (int16x8_t)vzip1q_s8(vextq_s8(v189, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(vaddq_s16(v191, v191), v43)), v44);
        v193 = (int16x8_t)vzip1q_s8((int8x16_t)a8, (int8x16_t)0);
        v194 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v193, v193), (int16x8_t)vzip2q_s8(v189, (int8x16_t)0)), vaddq_s16((int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, vdupq_lane_s8(*(int8x8_t *)a8.i8, 7), 9uLL), vextq_s8((int8x16_t)a8, (int8x16_t)0, 1uLL)), (int8x16_t)0), v43)), v44);
        v195 = vqmovun_s16(v192);
        v196 = vqmovun_s16(v194);
        v197 = (uint8x8_t)vext_s8(v195, v196, 1uLL);
        v198 = (uint8x8_t)vext_s8(v195, v196, 2uLL);
        v199 = (int16x8_t)vaddl_u8(v197, (uint8x8_t)v195);
        v200 = vaddw_u8((uint16x8_t)v43, v198);
        v201 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16((int16x8_t)vaddw_u8(v200, v197), v199), v44);
        v202 = (int16x8_t)vshlq_u16((uint16x8_t)v43, v46);
        v203 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v199, v202), v46);
        if (v19)
        {
          *v61 = vqmovun_s16(vaddq_s16(*v187, v203));
          v201 = vaddq_s16(v187[2], v201);
        }
        else
        {
          *v61 = vqmovun_s16(v203);
        }
        v209 = (int16x8_t)vmovl_u8(v197);
        v210 = (int16x8_t)vmovl_u8(v198);
        *(int8x8_t *)((char *)v61 + v14) = vqmovun_s16(v201);
        v211 = (uint8x8_t)vext_s8(v195, v196, 3uLL);
        v212 = vaddq_s16(v209, v210);
        v213 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16((int16x8_t)vaddw_u8(v200, v211), v212), v44);
        v214 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v212, v202), v46);
        if (v19)
        {
          *(int8x8_t *)((char *)v61 + v40) = vqmovun_s16(vaddq_s16(v187[4], v214));
          v213 = vaddq_s16(v187[6], v213);
        }
        else
        {
          *(int8x8_t *)((char *)v61 + v40) = vqmovun_s16(v214);
        }
        v215 = (int16x8_t)vmovl_u8(v211);
        *(int8x8_t *)((char *)v61 + v34) = vqmovun_s16(v213);
        v216 = (uint8x8_t)vext_s8(v195, v196, 4uLL);
        v217 = vaddq_s16(v210, v215);
        v218 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vaddw_u8((uint16x8_t)v215, v216), v217), v43), v44);
        v219 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v217, v202), v46);
        if (v19)
        {
          *(int8x8_t *)((char *)v61 + v41) = vqmovun_s16(vaddq_s16(v187[8], v219));
          v218 = vaddq_s16(v187[10], v218);
        }
        else
        {
          *(int8x8_t *)((char *)v61 + v41) = vqmovun_s16(v219);
        }
        v220 = (int16x8_t)vmovl_u8(v216);
        *(int8x8_t *)((char *)v61 + v45) = vqmovun_s16(v218);
        v221 = (uint8x8_t)vext_s8(v195, v196, 5uLL);
        v222 = vaddq_s16(v215, v220);
        a8 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vaddw_u8((uint16x8_t)v220, v221), v222), v43), v44);
        a9 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v222, v202), v46);
        if (!v19)
          goto LABEL_99;
        *(int8x8_t *)((char *)v61 + v42) = vqmovun_s16(vaddq_s16(v187[12], a9));
        a9 = v187[14];
        goto LABEL_108;
      case 8u:
        v147 = (unsigned __int8 *)v61 - v62;
        v148 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v147[v14], 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)v147[v40], 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v147[v34], 0xCuLL)), vzip1q_s8((int8x16_t)*((unsigned __int8 *)v61 + ~(unint64_t)(v60 * v14)), (int8x16_t)*v147)), vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v147[v41], 0xBuLL), vextq_s8((int8x16_t)0, (int8x16_t)v147[v45], 0xAuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v147[v42], 9uLL)));
        v149 = vextq_s8((int8x16_t)0, (int8x16_t)v147[v38], 8uLL);
        v150 = vorrq_s8(v148, vorrq_s8(vextq_s8((int8x16_t)0, v149, 0xFuLL), v149));
        v151 = (int16x8_t)vzip1q_s8(vextq_s8(v150, (int8x16_t)0, 1uLL), (int8x16_t)0);
        v152 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v148, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v150, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v151, v151)), v43), v44);
        v153 = (int16x8_t)vextq_s8((int8x16_t)v152, (int8x16_t)0, 2uLL);
        v154 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v152, (int16x8_t)vextq_s8((int8x16_t)v152, (int8x16_t)0, 4uLL)), vaddq_s16(v153, v153)), v43), v44);
        v154.i16[6] = (3 * v152.u16[7] + v152.u16[6] + 2) >> 2;
        v155 = (int16x8_t)vextq_s8(vextq_s8((int8x16_t)0, (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vshlq_u16((uint16x8_t)v43, v46), v152), v153), v46), 0xEuLL), (int8x16_t)0, 2uLL);
        v156 = (int16x8_t)vextq_s8(vextq_s8((int8x16_t)0, v154, 0xEuLL), (int8x16_t)0, 2uLL);
        a8 = (int16x8_t)vdupq_n_s32(v152.u16[7] | (v152.u16[7] << 16));
        if (v19)
        {
          v157 = (int16x8_t *)(v37 + 2 * *v35);
          *v61 = vqmovun_s16(vaddq_s16(*v157, vzip1q_s16(v155, v156)));
          v158 = (int16x8_t)vextq_s8((int8x16_t)v156, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v61 + v14) = vqmovun_s16(vaddq_s16(v157[2], vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v155, (int8x16_t)0, 2uLL), v158)));
          v159 = (int16x8_t)vextq_s8((int8x16_t)v158, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v61 + v40) = vqmovun_s16(vaddq_s16(v157[4], vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v155, (int8x16_t)0, 4uLL), v159)));
          v160 = (int16x8_t)vextq_s8((int8x16_t)v159, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v61 + v34) = vqmovun_s16(vaddq_s16(v157[6], vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v155, (int8x16_t)0, 6uLL), v160)));
          v161 = (int16x8_t)vextq_s8((int8x16_t)v160, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v61 + v41) = vqmovun_s16(vaddq_s16(v157[8], (int16x8_t)vorrq_s8((int8x16_t)vzip1q_s16((int16x8_t)vdupq_laneq_s64((int64x2_t)v155, 1), v161), vextq_s8((int8x16_t)0, (int8x16_t)a8, 4uLL))));
          v162 = (int16x8_t)vextq_s8((int8x16_t)v161, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v61 + v45) = vqmovun_s16(vaddq_s16(v157[10], (int16x8_t)vorrq_s8((int8x16_t)vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v155, (int8x16_t)0, 0xAuLL), v162), vextq_s8((int8x16_t)0, (int8x16_t)a8, 8uLL))));
          v235.val[1] = vextq_s8((int8x16_t)v155, (int8x16_t)0, 0xCuLL);
          v235.val[0] = vextq_s8((int8x16_t)v162, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v61 + v42) = vqmovun_s16(vaddq_s16(v157[12], (int16x8_t)vorrq_s8(vqtbl2q_s8(v235, (int8x16_t)xmmword_2160F1950), vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xCuLL))));
          a9 = v157[14];
LABEL_108:
          a8 = vaddq_s16(a9, a8);
        }
        else
        {
          *v61 = vqmovun_s16(vzip1q_s16(v155, v156));
          v204 = (int16x8_t)vextq_s8((int8x16_t)v156, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v61 + v14) = vqmovun_s16(vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v155, (int8x16_t)0, 2uLL), v204));
          v205 = (int16x8_t)vextq_s8((int8x16_t)v204, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v61 + v40) = vqmovun_s16(vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v155, (int8x16_t)0, 4uLL), v205));
          v206 = (int16x8_t)vextq_s8((int8x16_t)v205, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v61 + v34) = vqmovun_s16(vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v155, (int8x16_t)0, 6uLL), v206));
          v207 = (int16x8_t)vextq_s8((int8x16_t)v206, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v61 + v41) = vqmovun_s16((int16x8_t)vorrq_s8((int8x16_t)vzip1q_s16((int16x8_t)vdupq_laneq_s64((int64x2_t)v155, 1), v207), vextq_s8((int8x16_t)0, (int8x16_t)a8, 4uLL)));
          v208 = (int16x8_t)vextq_s8((int8x16_t)v207, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v61 + v45) = vqmovun_s16((int16x8_t)vorrq_s8((int8x16_t)vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v155, (int8x16_t)0, 0xAuLL), v208), vextq_s8((int8x16_t)0, (int8x16_t)a8, 8uLL)));
          v236.val[1] = vextq_s8((int8x16_t)v155, (int8x16_t)0, 0xCuLL);
          v236.val[0] = vextq_s8((int8x16_t)v208, (int8x16_t)0, 2uLL);
          a9 = (int16x8_t)vorrq_s8(vqtbl2q_s8(v236, (int8x16_t)xmmword_2160F1950), vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xCuLL));
LABEL_99:
          *(int8x8_t *)((char *)v61 + v42) = vqmovun_s16(a9);
        }
LABEL_109:
        *(int8x8_t *)a8.i8 = vqmovun_s16(a8);
LABEL_110:
        *(_QWORD *)((char *)v61 + v38) = a8.i64[0];
LABEL_111:
        ++v35;
        ++result;
        v229 = v31 >= 0xC;
        v31 += 4;
        if (!v229)
          continue;
        return result;
      default:
        goto LABEL_111;
    }
  }
}

unsigned __int8 *sub_21608C474(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7, int16x8_t a8, int16x8_t a9)
{
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  char v16;
  int v17;
  unsigned int v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  _BYTE *v23;
  _BYTE *v24;
  _BYTE *v25;
  int v26;
  _BYTE *v27;
  int v28;
  _BOOL4 v29;
  _BOOL4 v30;
  unint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  char *v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 *result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int16x8_t v43;
  uint16x8_t v44;
  uint64_t v45;
  uint16x8_t v46;
  unsigned int *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  unint64_t v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  int8x16_t v65;
  int16x8_t v66;
  int16x8_t *v67;
  int8x16_t v68;
  int8x16_t v69;
  int8x16_t v70;
  int16x8_t v71;
  int16x8_t v72;
  int16x8_t v73;
  int16x8_t v74;
  int16x8_t v75;
  int16x8_t v76;
  int16x8_t v77;
  int16x8_t v78;
  int8x8_t v79;
  int8x16_t v80;
  int16x8_t v81;
  uint16x8_t v82;
  int8x16_t v83;
  int8x16_t v84;
  int8x16_t v85;
  int16x8_t v86;
  uint64x2_t v87;
  unsigned int v88;
  char *v89;
  int8x16_t v90;
  int16x8_t v91;
  int16x8_t v92;
  unsigned int v93;
  unsigned int v94;
  unsigned __int8 *v95;
  unsigned int v96;
  int8x16_t v97;
  int8x16_t v98;
  int8x16_t v99;
  int16x8_t v100;
  int16x8_t v101;
  int16x8_t v102;
  int16x8_t v103;
  int8x16_t v104;
  int16x8_t v105;
  int8x16_t v106;
  int16x8_t v107;
  int16x8_t v108;
  unsigned __int8 *v109;
  int8x16_t v110;
  unsigned int v111;
  int8x16_t v112;
  int8x16_t v113;
  int8x16_t v114;
  int16x8_t v115;
  int16x8_t v116;
  int16x8_t v117;
  int16x8_t v118;
  int16x8_t v119;
  unsigned int v120;
  int16x8_t v121;
  int16x8_t v122;
  int8x16_t v123;
  int8x16_t v124;
  int8x16_t v125;
  int8x16_t v126;
  int16x8_t v127;
  unsigned __int8 *v128;
  int16x8_t v129;
  int8x16_t v130;
  unsigned int v131;
  int8x16_t v132;
  int8x16_t v133;
  int8x16_t v134;
  int16x8_t v135;
  int16x8_t v136;
  int16x8_t v137;
  int8x16_t v138;
  int8x16_t v139;
  int16x8_t v140;
  int8x16_t v141;
  int16x8_t v142;
  int16x8_t v143;
  int16x8_t v144;
  int8x16_t v145;
  char *v146;
  unsigned __int8 *v147;
  int8x16_t v148;
  int8x16_t v149;
  int8x16_t v150;
  int16x8_t v151;
  int16x8_t v152;
  int16x8_t v153;
  int8x16_t v154;
  int16x8_t v155;
  int16x8_t v156;
  int16x8_t *v157;
  int16x8_t v158;
  int16x8_t v159;
  int16x8_t v160;
  int16x8_t v161;
  int16x8_t v162;
  int16x8_t v163;
  int16x8_t v164;
  uint16x8_t v165;
  int8x16_t v166;
  int16x8_t v167;
  int32x4_t v168;
  int8x16_t v169;
  int8x16_t v170;
  int16x8_t v171;
  int16x8_t v172;
  int16x8_t v173;
  int16x8_t v174;
  int16x8_t v175;
  int16x8_t v176;
  int16x8_t v177;
  int16x8_t v178;
  int8x16_t v179;
  int16x8_t v180;
  int16x8_t v181;
  int8x16_t v182;
  int8x16_t v183;
  int8x16_t v184;
  int16x8_t v185;
  int32x4_t v186;
  int16x8_t *v187;
  int8x16_t v188;
  int8x16_t v189;
  int16x8_t v190;
  int16x8_t v191;
  int16x8_t v192;
  int16x8_t v193;
  int16x8_t v194;
  int8x8_t v195;
  int8x8_t v196;
  uint8x8_t v197;
  uint8x8_t v198;
  int16x8_t v199;
  uint16x8_t v200;
  int16x8_t v201;
  int16x8_t v202;
  int16x8_t v203;
  int16x8_t v204;
  int16x8_t v205;
  int16x8_t v206;
  int16x8_t v207;
  int16x8_t v208;
  int16x8_t v209;
  int16x8_t v210;
  uint8x8_t v211;
  int16x8_t v212;
  int16x8_t v213;
  int16x8_t v214;
  int16x8_t v215;
  uint8x8_t v216;
  int16x8_t v217;
  int16x8_t v218;
  int16x8_t v219;
  int16x8_t v220;
  uint8x8_t v221;
  int16x8_t v222;
  int8x16_t v223;
  int8x16_t v224;
  int8x16_t v225;
  int16x8_t v226;
  int16x8_t v227;
  unsigned int v228;
  BOOL v229;
  uint64_t v230;
  _BYTE *v231;
  _BYTE *v232;
  uint64_t v233;
  uint64_t v234;
  int8x16x2_t v235;
  int8x16x2_t v236;

  v234 = *MEMORY[0x24BDAC8D0];
  v9 = *(_QWORD *)(a2 + 72);
  v10 = *(_DWORD *)(a1 + 824);
  v11 = *(_DWORD *)(a1 + 828);
  if (!*(_BYTE *)(a2 + 20) || !*(_BYTE *)(a2 + 22))
  {
    v12 = v9 + 408;
    v14 = *(_DWORD *)(v9 + 136);
    if (*(_BYTE *)(a2 + 23) == 1)
    {
      v18 = *(_DWORD *)(a1 + 820);
      v15 = *(_QWORD *)(v9 + 32)
          + 32 * v14 * (v18 / (2 * *(_DWORD *)(a2 + 16)))
          + ((8 * (v18 % (2 * *(_DWORD *)(a2 + 16)))) & 0xFFFFFFF0);
      v13 = ((int)(v18 << 31) >> 31) & (16 * v14);
      goto LABEL_14;
    }
    v15 = *(_QWORD *)(v9 + 32) + (16 * v10);
    v17 = v11 * v14;
    goto LABEL_10;
  }
  v12 = v9 + 472;
  v13 = *(_DWORD *)(v9 + 136);
  v14 = 2 * v13;
  v15 = *(_QWORD *)(v9 + 32) + (16 * v10);
  if (!*(_BYTE *)(a2 + 21))
  {
    v17 = v11 * v13;
    if (*(_BYTE *)v9)
    {
      v13 = 32 * v17;
      goto LABEL_14;
    }
LABEL_10:
    v13 = 16 * v17;
    goto LABEL_14;
  }
  if (*(_BYTE *)v9)
    v16 = 5;
  else
    v16 = 4;
  v15 += (v11 << v16) * v13;
LABEL_14:
  v19 = *(unsigned __int8 *)(a1 + 816);
  v20 = *(_QWORD *)(a2 + 968) + 16;
  v21 = *(_BYTE **)(a2 + 936);
  v22 = *(_BYTE **)(a2 + 944);
  v23 = *(_BYTE **)(a2 + 952);
  v24 = *(_BYTE **)(a2 + 960);
  v232 = 0;
  v233 = 0;
  v230 = v20;
  v231 = 0;
  if (v21)
  {
    if (v21[32])
      v25 = v21 + 16;
    else
      v25 = v21;
    v231 = v25;
    v26 = 1;
    if (v22)
      goto LABEL_19;
LABEL_23:
    v27 = 0;
    v28 = 0;
    goto LABEL_24;
  }
  v26 = 0;
  if (!v22)
    goto LABEL_23;
LABEL_19:
  v27 = v22 + 16;
  if (!v22[32])
    v27 = v22;
  v28 = 1;
LABEL_24:
  v232 = v27;
  v29 = v23 != 0;
  v30 = v24 != 0;
  if (*(_BYTE *)(a2 + 928))
  {
    if (!v21 || v21[16] == 34 || *v21 == 34)
    {
      v26 = 0;
      if (!v22)
        goto LABEL_34;
    }
    else
    {
      v26 = 1;
      if (!v22)
        goto LABEL_34;
    }
    if (v22[16] != 34 && *v22 != 34)
    {
      v28 = 1;
      if (!v23)
        goto LABEL_37;
      goto LABEL_35;
    }
LABEL_34:
    v28 = 0;
    if (!v23)
      goto LABEL_37;
LABEL_35:
    if (v23[16] != 34 && *v23 != 34)
    {
      v29 = 1;
      if (!v24)
        goto LABEL_42;
LABEL_38:
      if (v24[16] != 34 && *v24 != 34)
      {
        v30 = 1;
        goto LABEL_43;
      }
LABEL_42:
      v30 = 0;
      goto LABEL_43;
    }
LABEL_37:
    v29 = 0;
    if (!v24)
      goto LABEL_42;
    goto LABEL_38;
  }
LABEL_43:
  v31 = 0;
  v32 = v15 + v13;
  v33 = (2 * v29) | (4 * v28) | (8 * v26);
  v34 = 3 * v14;
  v35 = &byte_2160F2328;
  v36 = v33 | v30;
  v37 = a2 + 112;
  v38 = 7 * v14;
  result = (unsigned __int8 *)(a1 + 1158);
  v40 = 2 * v14;
  v41 = 4 * v14;
  v42 = 6 * v14;
  v43.i64[0] = 0x2000200020002;
  v43.i64[1] = 0x2000200020002;
  v44.i64[0] = 0x1000100010001;
  v44.i64[1] = 0x1000100010001;
  v45 = 5 * v14;
  v46.i64[0] = -1;
  v46.i64[1] = -1;
  v47 = (unsigned int *)((char *)&unk_2160F232C + 4 * v36);
  while (2)
  {
    v48 = byte_254E10D40[v31];
    v49 = byte_254E10D40[v31 + 16];
    v50 = *(&v230 + (~(2 * (_BYTE)v49) & 2));
    v51 = *(&v230 + ((v48 & 1) == 0));
    if (v50)
      v52 = v51 == 0;
    else
      v52 = 1;
    if (v52
      || (v53 = *(unsigned __int8 *)(v51 + ((v48 >> 1) & 0xF)),
          v54 = *(unsigned __int8 *)(v50 + ((v49 >> 1) & 0xF)),
          (*(unsigned __int8 *)(a2 + 928) & ((v54 | v53) >> 5) & 1) != 0))
    {
      v55 = 2;
    }
    else
    {
      v55 = (((v53 & 0xF) - (v54 & 0xF)) & ((int)((v53 & 0xF) - (v54 & 0xF)) >> 31)) + (v54 & 0xF);
    }
    v57 = *v47;
    v47 += 16;
    v56 = v57;
    v58 = *result;
    if (v55 <= v58)
      ++v58;
    v59 = v58 & (*(result - 20) - 1) | v55 & -*(result - 20);
    *(_DWORD *)(v20 + v31) = vdup_n_s8(v59).u32[0];
    v60 = v56 >> 24;
    v61 = (_QWORD *)(v32 + *(unsigned int *)(v12 + 4 * v31));
    v62 = v56;
    v63 = BYTE1(v56);
    v64 = BYTE2(v56);
    switch(v59)
    {
      case 0u:
        a8.i64[0] = *(_QWORD *)((char *)v61 - v63 * v14);
        a8.i16[4] = *((unsigned __int8 *)v61 + v64 - v14 + 7);
        v65 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xFuLL), (int8x16_t)*((unsigned __int8 *)v61 - v14 - v60));
        a9 = (int16x8_t)vzip1q_s8(v65, (int8x16_t)0);
        v66 = (int16x8_t)vzip1q_s8(vextq_s8(v65, (int8x16_t)0, 1uLL), (int8x16_t)0);
        a8 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(a9, (int16x8_t)vzip1q_s8(vextq_s8(v65, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v66, v66)), v43), v44);
        if (v19)
        {
          v67 = (int16x8_t *)(v37 + 2 * *v35);
          goto LABEL_103;
        }
        *(int8x8_t *)a8.i8 = vqmovun_s16(a8);
        goto LABEL_112;
      case 1u:
        v68 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v14 - v62), 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v40 - v62), 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v34 - v62), 0xCuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v41 - v62), 0xBuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v42 - v62), 9uLL)), vorrq_s8(vzip1q_s8((int8x16_t)*((unsigned __int8 *)v61 + ~(unint64_t)(v60 * v14)), (int8x16_t)*((unsigned __int8 *)v61 - v62)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v45 - v62), 0xAuLL)));
        v69 = vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v38 - v62), 8uLL);
        v70 = vorrq_s8(v68, vorrq_s8(vextq_s8((int8x16_t)0, v69, 0xFuLL), v69));
        v71 = (int16x8_t)vzip1q_s8(vextq_s8(v70, (int8x16_t)0, 1uLL), (int8x16_t)0);
        v72 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v68, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v70, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v71, v71)), v43), v44);
        v73 = vdupq_lane_s16(*(int16x4_t *)v72.i8, 0);
        v74 = vdupq_lane_s16(*(int16x4_t *)v72.i8, 1);
        v75 = vdupq_lane_s16(*(int16x4_t *)v72.i8, 2);
        v76 = vdupq_lane_s16(*(int16x4_t *)v72.i8, 3);
        v77 = vdupq_laneq_s16(v72, 4);
        v78 = vdupq_laneq_s16(v72, 5);
        a9 = vdupq_laneq_s16(v72, 6);
        a8 = vdupq_laneq_s16(v72, 7);
        if (!v19)
          goto LABEL_57;
        goto LABEL_64;
      case 2u:
        if ((_DWORD)v62)
        {
          if (v63)
          {
            a8.i64[0] = *(_QWORD *)((char *)v61 - v14);
            a8.i16[4] = *((unsigned __int8 *)v61 + v64 - v14 + 7);
            v80 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xFuLL), (int8x16_t)*((unsigned __int8 *)v61 - v14 - v60));
            v81 = (int16x8_t)vzip1q_s8(vextq_s8(v80, (int8x16_t)0, 1uLL), (int8x16_t)0);
            v82 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v80, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v80, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v81, v81)), v43);
            v83 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v14 - 1), 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v40 - 1), 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v34 - 1), 0xCuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v41 - 1), 0xBuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v42 - 1), 9uLL)), vorrq_s8(vzip1q_s8((int8x16_t)*((unsigned __int8 *)v61 - v60 * v14 - 1), (int8x16_t)*((unsigned __int8 *)v61 - 1)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v45 - 1), 0xAuLL)));
            v84 = vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v38 - 1), 8uLL);
            v85 = vorrq_s8(v83, vorrq_s8(vextq_s8((int8x16_t)0, v84, 0xFuLL), v84));
            v86 = (int16x8_t)vzip1q_s8(vextq_s8(v85, (int8x16_t)0, 1uLL), (int8x16_t)0);
            a9 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v83, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v85, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v86, v86)), v43), v44);
            v87 = vpaddlq_u32(vpaddlq_u16(vpaddlq_u8((uint8x16_t)vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16(v82, v44)), a9))));
            v88 = ((v87.u16[4] + v87.u16[0] + 8) >> 4 << 8) | ((v87.u16[4] + v87.u16[0] + 8) >> 4);
            goto LABEL_100;
          }
          v223 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v14 - 1), 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v40 - 1), 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v34 - 1), 0xCuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v41 - 1), 0xBuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v42 - 1), 9uLL)), vorrq_s8(vzip1q_s8((int8x16_t)*((unsigned __int8 *)v61 - v60 * v14 - 1), (int8x16_t)*((unsigned __int8 *)v61 - 1)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v45 - 1), 0xAuLL)));
          v224 = vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v61 + v38 - 1), 8uLL);
          v225 = vorrq_s8(v223, vorrq_s8(vextq_s8((int8x16_t)0, v224, 0xFuLL), v224));
          v226 = (int16x8_t)vzip1q_s8(vextq_s8(v225, (int8x16_t)0, 1uLL), (int8x16_t)0);
          v165 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v223, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v225, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v226, v226)), v43);
        }
        else
        {
          a8 = (int16x8_t)xmmword_2160F19E0;
          if (!v63)
            goto LABEL_101;
          a8.i64[0] = *(_QWORD *)((char *)v61 - v14);
          v163 = (int16x8_t)vzip1q_s8((int8x16_t)a8, (int8x16_t)0);
          a8.i16[4] = *((unsigned __int8 *)v61 + v64 - v14 + 7);
          v164 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v163, 0xEuLL);
          v164.i16[0] = *((unsigned __int8 *)v61 - v14 - v60);
          v165 = (uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8((int8x16_t)a8, (int8x16_t)0, 1uLL), (int8x16_t)0), vaddq_s16(v163, v163)), vaddq_s16(v164, v43));
        }
        v227 = (int16x8_t)vshlq_u16(v165, v44);
        a9 = (int16x8_t)vqmovun_high_s16(vqmovun_s16(v227), v227);
        v228 = vpaddlq_u32(vpaddlq_u16(vpaddlq_u8((uint8x16_t)a9))).u16[0] + 4;
        v88 = (v228 >> 3 << 8) | (v228 >> 3);
LABEL_100:
        a8 = (int16x8_t)vzip1q_s32((int32x4_t)(v88 | (v88 << 16)), (int32x4_t)(v88 | (v88 << 16)));
LABEL_101:
        if (!v19)
        {
LABEL_112:
          *v61 = a8.i64[0];
          *(_QWORD *)((char *)v61 + v14) = a8.i64[0];
          *(_QWORD *)((char *)v61 + v40) = a8.i64[0];
          *(_QWORD *)((char *)v61 + v34) = a8.i64[0];
          *(_QWORD *)((char *)v61 + v41) = a8.i64[0];
          *(_QWORD *)((char *)v61 + v45) = a8.i64[0];
          *(_QWORD *)((char *)v61 + v42) = a8.i64[0];
          goto LABEL_108;
        }
        v67 = (int16x8_t *)(v37 + 2 * *v35);
        a8 = (int16x8_t)vzip1q_s8((int8x16_t)a8, (int8x16_t)0);
LABEL_103:
        *v61 = vqmovun_s16(vaddq_s16(*v67, a8));
        *(int8x8_t *)((char *)v61 + v14) = vqmovun_s16(vaddq_s16(v67[2], a8));
        *(int8x8_t *)((char *)v61 + v40) = vqmovun_s16(vaddq_s16(v67[4], a8));
        *(int8x8_t *)((char *)v61 + v34) = vqmovun_s16(vaddq_s16(v67[6], a8));
        *(int8x8_t *)((char *)v61 + v41) = vqmovun_s16(vaddq_s16(v67[8], a8));
        *(int8x8_t *)((char *)v61 + v45) = vqmovun_s16(vaddq_s16(v67[10], a8));
        v181 = vaddq_s16(v67[12], a8);
        goto LABEL_104;
      case 3u:
        a9.i64[0] = *(_QWORD *)((char *)v61 - v63 * v14);
        v89 = (char *)v61 - v14;
        if ((_DWORD)v64)
        {
          a8.i64[0] = *((_QWORD *)v89 + 1);
        }
        else
        {
          v166 = vextq_s8((int8x16_t)a9, (int8x16_t)0, 7uLL);
          v167 = (int16x8_t)vzip1q_s8(v166, v166);
          v168 = (int32x4_t)vzip1q_s16(v167, v167);
          a8 = (int16x8_t)vzip1q_s32(v168, v168);
        }
        v169 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a9, 0xFuLL), (int8x16_t)v89[-v60]);
        v170 = vorrq_s8(v169, vextq_s8((int8x16_t)0, (int8x16_t)a8, 7uLL));
        v171 = (int16x8_t)vzip1q_s8(v169, (int8x16_t)0);
        v172 = (int16x8_t)vzip1q_s8(vextq_s8(v169, (int8x16_t)0, 1uLL), (int8x16_t)0);
        v173 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v171, (int16x8_t)vzip1q_s8(vextq_s8(v170, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(vaddq_s16(v172, v172), v43)), v44);
        v174 = (int16x8_t)vzip1q_s8((int8x16_t)a8, (int8x16_t)0);
        v175 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v174, v174), (int16x8_t)vzip2q_s8(v170, (int8x16_t)0)), vaddq_s16((int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, vdupq_lane_s8(*(int8x8_t *)a8.i8, 7), 9uLL), vextq_s8((int8x16_t)a8, (int8x16_t)0, 1uLL)), (int8x16_t)0), v43)), v44);
        v176 = (int16x8_t)vextq_s8((int8x16_t)v173, (int8x16_t)v175, 2uLL);
        v177 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v173, (int16x8_t)vextq_s8((int8x16_t)v173, (int8x16_t)v175, 4uLL)), vaddq_s16(v176, v176)), v43), v44);
        v178 = (int16x8_t)vextq_s8((int8x16_t)v175, (int8x16_t)0, 2uLL);
        v179 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v175, (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v175, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_2160F19D0)), vaddq_s16(vaddq_s16(v178, v178), v43)), v44);
        v180 = (int16x8_t)vextq_s8((int8x16_t)v177, v179, 2uLL);
        v75 = (int16x8_t)vextq_s8((int8x16_t)v177, v179, 4uLL);
        v76 = (int16x8_t)vextq_s8((int8x16_t)v177, v179, 6uLL);
        v77 = (int16x8_t)vextq_s8((int8x16_t)v177, v179, 8uLL);
        v78 = (int16x8_t)vextq_s8((int8x16_t)v177, v179, 0xAuLL);
        a9 = (int16x8_t)vextq_s8((int8x16_t)v177, v179, 0xCuLL);
        a8 = (int16x8_t)vextq_s8((int8x16_t)v177, v179, 0xEuLL);
        if (v19)
        {
          v67 = (int16x8_t *)(v37 + 2 * *v35);
          *v61 = vqmovun_s16(vaddq_s16(*v67, v177));
          v105 = vaddq_s16(v67[2], v180);
          goto LABEL_79;
        }
        *v61 = vqmovun_s16(v177);
        v79 = vqmovun_s16(v180);
        goto LABEL_87;
      case 4u:
        a8.i64[0] = *(_QWORD *)((char *)v61 - v63 * v14);
        a8.i16[4] = *((unsigned __int8 *)v61 + v64 - v14 + 7);
        v90 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xFuLL), (int8x16_t)*((unsigned __int8 *)v61 - v14 - v60));
        v91 = (int16x8_t)vzip1q_s8(vextq_s8(v90, (int8x16_t)0, 1uLL), (int8x16_t)0);
        v92 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v90, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v90, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v91, v91)), v43), v44);
        v93 = *((unsigned __int8 *)v61 + ~(unint64_t)(v60 * v14));
        v94 = v93;
        v95 = (unsigned __int8 *)v61 - v62;
        v96 = (*v95 + 2 * v93 + *(_QWORD *)((char *)v61 - v63 * v14) + 2) >> 2;
        v97 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v95[v14], 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)v95[v40], 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v95[v34], 0xCuLL)), vzip1q_s8((int8x16_t)v94, (int8x16_t)*v95)), vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v95[v41], 0xBuLL), vextq_s8((int8x16_t)0, (int8x16_t)v95[v45], 0xAuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v95[v42], 9uLL)));
        v98 = vextq_s8((int8x16_t)0, (int8x16_t)v95[v38], 8uLL);
        v99 = vorrq_s8(v97, vorrq_s8(vextq_s8((int8x16_t)0, v98, 0xFuLL), v98));
        v100 = (int16x8_t)vzip1q_s8(vextq_s8(v99, (int8x16_t)0, 1uLL), (int8x16_t)0);
        v101 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v97, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v99, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v100, v100)), v43), v44);
        v102 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v92, 0xEuLL);
        v102.i16[0] = v96;
        v103 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v101, 0xEuLL);
        v103.i16[0] = v96;
        v73 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v92, v92), (int16x8_t)vextq_s8((int8x16_t)v92, (int8x16_t)0, 2uLL)), v43), v102), v44), 0xEuLL);
        v73.i16[0] = (2 * v96 + v92.u16[0] + v101.u16[0] + 2) >> 2;
        v104 = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v101, v101), (int16x8_t)vextq_s8((int8x16_t)v101, (int8x16_t)0, 2uLL)), v43), v103), v44), (int8x16_t)xmmword_2160F1960), (int8x16_t)xmmword_2160F1970), (int8x16_t)xmmword_2160F1980);
        v74 = (int16x8_t)vextq_s8(v104, (int8x16_t)v73, 0xEuLL);
        v75 = (int16x8_t)vextq_s8(v104, (int8x16_t)v73, 0xCuLL);
        v76 = (int16x8_t)vextq_s8(v104, (int8x16_t)v73, 0xAuLL);
        v77 = (int16x8_t)vextq_s8(v104, (int8x16_t)v73, 8uLL);
        v78 = (int16x8_t)vextq_s8(v104, (int8x16_t)v73, 6uLL);
        a9 = (int16x8_t)vextq_s8(v104, (int8x16_t)v73, 4uLL);
        a8 = (int16x8_t)vextq_s8(v104, (int8x16_t)v73, 2uLL);
        if (v19)
        {
LABEL_64:
          v67 = (int16x8_t *)(v37 + 2 * *v35);
          *v61 = vqmovun_s16(vaddq_s16(*v67, v73));
          v105 = vaddq_s16(v67[2], v74);
LABEL_79:
          *(int8x8_t *)((char *)v61 + v14) = vqmovun_s16(v105);
          *(int8x8_t *)((char *)v61 + v40) = vqmovun_s16(vaddq_s16(v67[4], v75));
          *(int8x8_t *)((char *)v61 + v34) = vqmovun_s16(vaddq_s16(v67[6], v76));
          *(int8x8_t *)((char *)v61 + v41) = vqmovun_s16(vaddq_s16(v67[8], v77));
          *(int8x8_t *)((char *)v61 + v45) = vqmovun_s16(vaddq_s16(v67[10], v78));
          v181 = vaddq_s16(v67[12], a9);
LABEL_104:
          *(int8x8_t *)((char *)v61 + v42) = vqmovun_s16(v181);
          goto LABEL_105;
        }
LABEL_57:
        *v61 = vqmovun_s16(v73);
        v79 = vqmovun_s16(v74);
LABEL_87:
        *(int8x8_t *)((char *)v61 + v14) = v79;
        *(int8x8_t *)((char *)v61 + v40) = vqmovun_s16(v75);
        *(int8x8_t *)((char *)v61 + v34) = vqmovun_s16(v76);
        *(int8x8_t *)((char *)v61 + v41) = vqmovun_s16(v77);
        *(int8x8_t *)((char *)v61 + v45) = vqmovun_s16(v78);
        goto LABEL_97;
      case 5u:
        a8.i64[0] = *(_QWORD *)((char *)v61 - v63 * v14);
        a8.i16[4] = *((unsigned __int8 *)v61 + v64 - v14 + 7);
        v106 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xFuLL), (int8x16_t)*((unsigned __int8 *)v61 - v14 - v60));
        v107 = (int16x8_t)vzip1q_s8(vextq_s8(v106, (int8x16_t)0, 1uLL), (int8x16_t)0);
        v108 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v106, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v106, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v107, v107)), v43), v44);
        v109 = (unsigned __int8 *)v61 - v62;
        v110 = vzip1q_s8((int8x16_t)*((unsigned __int8 *)v61 + ~(unint64_t)(v60 * v14)), (int8x16_t)*v109);
        v111 = (*v109
              + 2 * *((unsigned __int8 *)v61 + ~(unint64_t)(v60 * v14))
              + *(_QWORD *)((char *)v61 - v63 * v14)
              + 2) >> 2;
        v112 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v109[v14], 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)v109[v40], 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v109[v34], 0xCuLL)), v110), vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v109[v41], 0xBuLL), vextq_s8((int8x16_t)0, (int8x16_t)v109[v45], 0xAuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v109[v42], 9uLL)));
        v113 = vextq_s8((int8x16_t)0, (int8x16_t)v109[v38], 8uLL);
        v114 = vorrq_s8(v112, vorrq_s8(vextq_s8((int8x16_t)0, v113, 0xFuLL), v113));
        v115 = (int16x8_t)vzip1q_s8(vextq_s8(v114, (int8x16_t)0, 1uLL), (int8x16_t)0);
        v116 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v112, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v114, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v115, v115)), v43), v44);
        v117 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v108, 0xEuLL);
        v117.i16[0] = v111;
        v118 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v117, vaddq_s16(v108, (int16x8_t)vshlq_u16((uint16x8_t)v43, v46))), v46);
        v119 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v116, 0xEuLL);
        v119.i16[0] = v111;
        v120 = (2 * v111 + v108.u16[0] + v116.u16[0] + 2) >> 2;
        a9 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v108, v108), (int16x8_t)vextq_s8((int8x16_t)v108, (int8x16_t)0, 2uLL)), v43), v117), v44), 0xEuLL);
        a9.i16[0] = v120;
        v121 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v116, v116), (int16x8_t)vextq_s8((int8x16_t)v116, (int8x16_t)0, 2uLL)), v43), v119), v44), (int8x16_t)xmmword_2160F1960), (int8x16_t)xmmword_2160F1970), (int8x16_t)xmmword_2160F1980);
        v122 = (int16x8_t)vextq_s8((int8x16_t)v121, (int8x16_t)v118, 0xEuLL);
        v123 = (int8x16_t)vdupq_laneq_s16(v121, 6);
        if (v19)
        {
          v67 = (int16x8_t *)(v37 + 2 * *v35);
          *v61 = vqmovun_s16(vaddq_s16(*v67, v118));
          *(int8x8_t *)((char *)v61 + v14) = vqmovun_s16(vaddq_s16(v67[2], a9));
          *(int8x8_t *)((char *)v61 + v40) = vqmovun_s16(vaddq_s16(v67[4], v122));
          *(int8x8_t *)((char *)v61 + v34) = vqmovun_s16(vaddq_s16(v67[6], (int16x8_t)vextq_s8(v123, (int8x16_t)a9, 0xEuLL)));
          v124 = vqtbl1q_s8((int8x16_t)v121, (int8x16_t)xmmword_2160F1990);
          *(int8x8_t *)((char *)v61 + v41) = vqmovun_s16(vaddq_s16(v67[8], (int16x8_t)vextq_s8(v124, (int8x16_t)v118, 0xCuLL)));
          v125 = vqtbl1q_s8((int8x16_t)v121, (int8x16_t)xmmword_2160F19A0);
          *(int8x8_t *)((char *)v61 + v45) = vqmovun_s16(vaddq_s16(v67[10], (int16x8_t)vextq_s8(v125, (int8x16_t)a9, 0xCuLL)));
          *(int8x8_t *)((char *)v61 + v42) = vqmovun_s16(vaddq_s16(v67[12], (int16x8_t)vextq_s8(vqtbl1q_s8(v124, (int8x16_t)xmmword_2160F19B0), (int8x16_t)v118, 0xAuLL)));
          a8 = (int16x8_t)vextq_s8(vqtbl1q_s8(vqtbl1q_s8(v125, (int8x16_t)xmmword_2160F19B0), (int8x16_t)xmmword_2160F19C0), (int8x16_t)a9, 0xAuLL);
          goto LABEL_105;
        }
        *v61 = vqmovun_s16(v118);
        *(int8x8_t *)((char *)v61 + v14) = vqmovun_s16(a9);
        *(int8x8_t *)((char *)v61 + v40) = vqmovun_s16(v122);
        *(int8x8_t *)((char *)v61 + v34) = vqmovun_s16((int16x8_t)vextq_s8(v123, (int8x16_t)a9, 0xEuLL));
        v182 = vqtbl1q_s8((int8x16_t)v121, (int8x16_t)xmmword_2160F1990);
        *(int8x8_t *)((char *)v61 + v41) = vqmovun_s16((int16x8_t)vextq_s8(v182, (int8x16_t)v118, 0xCuLL));
        v183 = vqtbl1q_s8((int8x16_t)v121, (int8x16_t)xmmword_2160F19A0);
        *(int8x8_t *)((char *)v61 + v45) = vqmovun_s16((int16x8_t)vextq_s8(v183, (int8x16_t)a9, 0xCuLL));
        *(int8x8_t *)((char *)v61 + v42) = vqmovun_s16((int16x8_t)vextq_s8(vqtbl1q_s8(v182, (int8x16_t)xmmword_2160F19B0), (int8x16_t)v118, 0xAuLL));
        a8 = (int16x8_t)vextq_s8(vqtbl1q_s8(vqtbl1q_s8(v183, (int8x16_t)xmmword_2160F19B0), (int8x16_t)xmmword_2160F19C0), (int8x16_t)a9, 0xAuLL);
        goto LABEL_107;
      case 6u:
        a8.i64[0] = *(_QWORD *)((char *)v61 - v63 * v14);
        a8.i16[4] = *((unsigned __int8 *)v61 + v64 - v14 + 7);
        v126 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xFuLL), (int8x16_t)*((unsigned __int8 *)v61 - v14 - v60));
        v127 = (int16x8_t)vzip1q_s8(vextq_s8(v126, (int8x16_t)0, 1uLL), (int8x16_t)0);
        v128 = (unsigned __int8 *)v61 - v62;
        v129 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v126, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v126, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v127, v127)), v43), v44);
        v130 = vzip1q_s8((int8x16_t)*((unsigned __int8 *)v61 + ~(unint64_t)(v60 * v14)), (int8x16_t)*v128);
        v131 = (*v128
              + 2 * *((unsigned __int8 *)v61 + ~(unint64_t)(v60 * v14))
              + *(_QWORD *)((char *)v61 - v63 * v14)
              + 2) >> 2;
        v132 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v128[v14], 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)v128[v40], 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v128[v34], 0xCuLL)), v130), vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v128[v41], 0xBuLL), vextq_s8((int8x16_t)0, (int8x16_t)v128[v45], 0xAuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v128[v42], 9uLL)));
        v133 = vextq_s8((int8x16_t)0, (int8x16_t)v128[v38], 8uLL);
        v134 = vorrq_s8(v132, vorrq_s8(vextq_s8((int8x16_t)0, v133, 0xFuLL), v133));
        v135 = (int16x8_t)vzip1q_s8(vextq_s8(v134, (int8x16_t)0, 1uLL), (int8x16_t)0);
        v136 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v132, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v134, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v135, v135)), v43), v44);
        v137 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v136, 0xEuLL);
        v137.i16[0] = v131;
        v138 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vshlq_u16((uint16x8_t)v43, v46), v136), v137), v46);
        v139 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v136, v136), (int16x8_t)vextq_s8((int8x16_t)v136, (int8x16_t)0, 2uLL)), v43), v137), v44);
        v140 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v129, 0xEuLL);
        v140.i16[0] = v131;
        v141 = vextq_s8((int8x16_t)0, (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v129, v129), (int16x8_t)vextq_s8((int8x16_t)v129, (int8x16_t)0, 2uLL)), v43), v140), v44), 0xEuLL);
        v141.i16[0] = (2 * v131 + v129.u16[0] + v136.u16[0] + 2) >> 2;
        v142 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v138, (int8x16_t)xmmword_2160F1960), (int8x16_t)xmmword_2160F1970), (int8x16_t)xmmword_2160F1980);
        v143 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v139, (int8x16_t)xmmword_2160F1960), (int8x16_t)xmmword_2160F1970), (int8x16_t)xmmword_2160F1980);
        v144 = (int16x8_t)vextq_s8((int8x16_t)v142, v141, 0xEuLL);
        v145 = (int8x16_t)vzip2q_s16(v143, v142);
        a9 = (int16x8_t)vdupq_lane_s64(v142.i64[0], 0);
        if (!v19)
        {
          *v61 = vqmovun_s16(v144);
          *(int8x8_t *)((char *)v61 + v14) = vqmovun_s16((int16x8_t)vextq_s8(v145, v141, 0xAuLL));
          *(int8x8_t *)((char *)v61 + v40) = vqmovun_s16((int16x8_t)vextq_s8(v145, v141, 6uLL));
          *(int8x8_t *)((char *)v61 + v34) = vqmovun_s16((int16x8_t)vextq_s8(v145, v141, 2uLL));
          *(int8x8_t *)((char *)v61 + v41) = vqmovun_s16(vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v142, 0xEuLL), v143));
          *(int8x8_t *)((char *)v61 + v45) = vqmovun_s16(vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v142, 0xCuLL), (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v143, 0xEuLL)));
          *(int8x8_t *)((char *)v61 + v42) = vqmovun_s16(vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v142, 0xAuLL), (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v143, 0xCuLL)));
          a8 = vzip2q_s16(a9, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v143, 0xAuLL));
          goto LABEL_107;
        }
        v67 = (int16x8_t *)(v37 + 2 * *v35);
        *v61 = vqmovun_s16(vaddq_s16(*v67, v144));
        *(int8x8_t *)((char *)v61 + v14) = vqmovun_s16(vaddq_s16(v67[2], (int16x8_t)vextq_s8(v145, v141, 0xAuLL)));
        *(int8x8_t *)((char *)v61 + v40) = vqmovun_s16(vaddq_s16(v67[4], (int16x8_t)vextq_s8(v145, v141, 6uLL)));
        *(int8x8_t *)((char *)v61 + v34) = vqmovun_s16(vaddq_s16(v67[6], (int16x8_t)vextq_s8(v145, v141, 2uLL)));
        *(int8x8_t *)((char *)v61 + v41) = vqmovun_s16(vaddq_s16(v67[8], vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v142, 0xEuLL), v143)));
        *(int8x8_t *)((char *)v61 + v45) = vqmovun_s16(vaddq_s16(v67[10], vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v142, 0xCuLL), (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v143, 0xEuLL))));
        *(int8x8_t *)((char *)v61 + v42) = vqmovun_s16(vaddq_s16(v67[12], vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v142, 0xAuLL), (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v143, 0xCuLL))));
        a8 = vzip2q_s16(a9, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v143, 0xAuLL));
LABEL_105:
        a9 = v67[14];
        goto LABEL_106;
      case 7u:
        a9.i64[0] = *(_QWORD *)((char *)v61 - v63 * v14);
        v146 = (char *)v61 - v14;
        if ((_DWORD)v64)
        {
          a8.i64[0] = *((_QWORD *)v146 + 1);
        }
        else
        {
          v184 = vextq_s8((int8x16_t)a9, (int8x16_t)0, 7uLL);
          v185 = (int16x8_t)vzip1q_s8(v184, v184);
          v186 = (int32x4_t)vzip1q_s16(v185, v185);
          a8 = (int16x8_t)vzip1q_s32(v186, v186);
        }
        v187 = (int16x8_t *)(v37 + 2 * *v35);
        v188 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a9, 0xFuLL), (int8x16_t)v146[-v60]);
        v189 = vorrq_s8(v188, vextq_s8((int8x16_t)0, (int8x16_t)a8, 7uLL));
        v190 = (int16x8_t)vzip1q_s8(v188, (int8x16_t)0);
        v191 = (int16x8_t)vzip1q_s8(vextq_s8(v188, (int8x16_t)0, 1uLL), (int8x16_t)0);
        v192 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v190, (int16x8_t)vzip1q_s8(vextq_s8(v189, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(vaddq_s16(v191, v191), v43)), v44);
        v193 = (int16x8_t)vzip1q_s8((int8x16_t)a8, (int8x16_t)0);
        v194 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v193, v193), (int16x8_t)vzip2q_s8(v189, (int8x16_t)0)), vaddq_s16((int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, vdupq_lane_s8(*(int8x8_t *)a8.i8, 7), 9uLL), vextq_s8((int8x16_t)a8, (int8x16_t)0, 1uLL)), (int8x16_t)0), v43)), v44);
        v195 = vqmovun_s16(v192);
        v196 = vqmovun_s16(v194);
        v197 = (uint8x8_t)vext_s8(v195, v196, 1uLL);
        v198 = (uint8x8_t)vext_s8(v195, v196, 2uLL);
        v199 = (int16x8_t)vaddl_u8(v197, (uint8x8_t)v195);
        v200 = vaddw_u8((uint16x8_t)v43, v198);
        v201 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16((int16x8_t)vaddw_u8(v200, v197), v199), v44);
        v202 = (int16x8_t)vshlq_u16((uint16x8_t)v43, v46);
        v203 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v199, v202), v46);
        if (v19)
        {
          *v61 = vqmovun_s16(vaddq_s16(*v187, v203));
          v201 = vaddq_s16(v187[2], v201);
        }
        else
        {
          *v61 = vqmovun_s16(v203);
        }
        v209 = (int16x8_t)vmovl_u8(v197);
        v210 = (int16x8_t)vmovl_u8(v198);
        *(int8x8_t *)((char *)v61 + v14) = vqmovun_s16(v201);
        v211 = (uint8x8_t)vext_s8(v195, v196, 3uLL);
        v212 = vaddq_s16(v209, v210);
        v213 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16((int16x8_t)vaddw_u8(v200, v211), v212), v44);
        v214 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v212, v202), v46);
        if (v19)
        {
          *(int8x8_t *)((char *)v61 + v40) = vqmovun_s16(vaddq_s16(v187[4], v214));
          v213 = vaddq_s16(v187[6], v213);
        }
        else
        {
          *(int8x8_t *)((char *)v61 + v40) = vqmovun_s16(v214);
        }
        v215 = (int16x8_t)vmovl_u8(v211);
        *(int8x8_t *)((char *)v61 + v34) = vqmovun_s16(v213);
        v216 = (uint8x8_t)vext_s8(v195, v196, 4uLL);
        v217 = vaddq_s16(v210, v215);
        v218 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vaddw_u8((uint16x8_t)v215, v216), v217), v43), v44);
        v219 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v217, v202), v46);
        if (v19)
        {
          *(int8x8_t *)((char *)v61 + v41) = vqmovun_s16(vaddq_s16(v187[8], v219));
          v218 = vaddq_s16(v187[10], v218);
        }
        else
        {
          *(int8x8_t *)((char *)v61 + v41) = vqmovun_s16(v219);
        }
        v220 = (int16x8_t)vmovl_u8(v216);
        *(int8x8_t *)((char *)v61 + v45) = vqmovun_s16(v218);
        v221 = (uint8x8_t)vext_s8(v195, v196, 5uLL);
        v222 = vaddq_s16(v215, v220);
        a8 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vaddw_u8((uint16x8_t)v220, v221), v222), v43), v44);
        a9 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v222, v202), v46);
        if (!v19)
          goto LABEL_97;
        *(int8x8_t *)((char *)v61 + v42) = vqmovun_s16(vaddq_s16(v187[12], a9));
        a9 = v187[14];
        goto LABEL_106;
      case 8u:
        v147 = (unsigned __int8 *)v61 - v62;
        v148 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v147[v14], 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)v147[v40], 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v147[v34], 0xCuLL)), vzip1q_s8((int8x16_t)*((unsigned __int8 *)v61 + ~(unint64_t)(v60 * v14)), (int8x16_t)*v147)), vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v147[v41], 0xBuLL), vextq_s8((int8x16_t)0, (int8x16_t)v147[v45], 0xAuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v147[v42], 9uLL)));
        v149 = vextq_s8((int8x16_t)0, (int8x16_t)v147[v38], 8uLL);
        v150 = vorrq_s8(v148, vorrq_s8(vextq_s8((int8x16_t)0, v149, 0xFuLL), v149));
        v151 = (int16x8_t)vzip1q_s8(vextq_s8(v150, (int8x16_t)0, 1uLL), (int8x16_t)0);
        v152 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v148, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v150, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v151, v151)), v43), v44);
        v153 = (int16x8_t)vextq_s8((int8x16_t)v152, (int8x16_t)0, 2uLL);
        v154 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v152, (int16x8_t)vextq_s8((int8x16_t)v152, (int8x16_t)0, 4uLL)), vaddq_s16(v153, v153)), v43), v44);
        v154.i16[6] = (3 * v152.u16[7] + v152.u16[6] + 2) >> 2;
        v155 = (int16x8_t)vextq_s8(vextq_s8((int8x16_t)0, (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vshlq_u16((uint16x8_t)v43, v46), v152), v153), v46), 0xEuLL), (int8x16_t)0, 2uLL);
        v156 = (int16x8_t)vextq_s8(vextq_s8((int8x16_t)0, v154, 0xEuLL), (int8x16_t)0, 2uLL);
        a8 = (int16x8_t)vdupq_n_s32(v152.u16[7] | (v152.u16[7] << 16));
        if (v19)
        {
          v157 = (int16x8_t *)(v37 + 2 * *v35);
          *v61 = vqmovun_s16(vaddq_s16(*v157, vzip1q_s16(v155, v156)));
          v158 = (int16x8_t)vextq_s8((int8x16_t)v156, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v61 + v14) = vqmovun_s16(vaddq_s16(v157[2], vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v155, (int8x16_t)0, 2uLL), v158)));
          v159 = (int16x8_t)vextq_s8((int8x16_t)v158, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v61 + v40) = vqmovun_s16(vaddq_s16(v157[4], vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v155, (int8x16_t)0, 4uLL), v159)));
          v160 = (int16x8_t)vextq_s8((int8x16_t)v159, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v61 + v34) = vqmovun_s16(vaddq_s16(v157[6], vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v155, (int8x16_t)0, 6uLL), v160)));
          v161 = (int16x8_t)vextq_s8((int8x16_t)v160, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v61 + v41) = vqmovun_s16(vaddq_s16(v157[8], (int16x8_t)vorrq_s8((int8x16_t)vzip1q_s16((int16x8_t)vdupq_laneq_s64((int64x2_t)v155, 1), v161), vextq_s8((int8x16_t)0, (int8x16_t)a8, 4uLL))));
          v162 = (int16x8_t)vextq_s8((int8x16_t)v161, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v61 + v45) = vqmovun_s16(vaddq_s16(v157[10], (int16x8_t)vorrq_s8((int8x16_t)vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v155, (int8x16_t)0, 0xAuLL), v162), vextq_s8((int8x16_t)0, (int8x16_t)a8, 8uLL))));
          v235.val[1] = vextq_s8((int8x16_t)v155, (int8x16_t)0, 0xCuLL);
          v235.val[0] = vextq_s8((int8x16_t)v162, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v61 + v42) = vqmovun_s16(vaddq_s16(v157[12], (int16x8_t)vorrq_s8(vqtbl2q_s8(v235, (int8x16_t)xmmword_2160F1950), vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xCuLL))));
          a9 = v157[14];
LABEL_106:
          a8 = vaddq_s16(a9, a8);
        }
        else
        {
          *v61 = vqmovun_s16(vzip1q_s16(v155, v156));
          v204 = (int16x8_t)vextq_s8((int8x16_t)v156, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v61 + v14) = vqmovun_s16(vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v155, (int8x16_t)0, 2uLL), v204));
          v205 = (int16x8_t)vextq_s8((int8x16_t)v204, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v61 + v40) = vqmovun_s16(vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v155, (int8x16_t)0, 4uLL), v205));
          v206 = (int16x8_t)vextq_s8((int8x16_t)v205, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v61 + v34) = vqmovun_s16(vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v155, (int8x16_t)0, 6uLL), v206));
          v207 = (int16x8_t)vextq_s8((int8x16_t)v206, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v61 + v41) = vqmovun_s16((int16x8_t)vorrq_s8((int8x16_t)vzip1q_s16((int16x8_t)vdupq_laneq_s64((int64x2_t)v155, 1), v207), vextq_s8((int8x16_t)0, (int8x16_t)a8, 4uLL)));
          v208 = (int16x8_t)vextq_s8((int8x16_t)v207, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v61 + v45) = vqmovun_s16((int16x8_t)vorrq_s8((int8x16_t)vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v155, (int8x16_t)0, 0xAuLL), v208), vextq_s8((int8x16_t)0, (int8x16_t)a8, 8uLL)));
          v236.val[1] = vextq_s8((int8x16_t)v155, (int8x16_t)0, 0xCuLL);
          v236.val[0] = vextq_s8((int8x16_t)v208, (int8x16_t)0, 2uLL);
          a9 = (int16x8_t)vorrq_s8(vqtbl2q_s8(v236, (int8x16_t)xmmword_2160F1950), vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xCuLL));
LABEL_97:
          *(int8x8_t *)((char *)v61 + v42) = vqmovun_s16(a9);
        }
LABEL_107:
        *(int8x8_t *)a8.i8 = vqmovun_s16(a8);
LABEL_108:
        *(_QWORD *)((char *)v61 + v38) = a8.i64[0];
LABEL_109:
        ++v35;
        ++result;
        v229 = v31 >= 0xC;
        v31 += 4;
        if (!v229)
          continue;
        return result;
      default:
        goto LABEL_109;
    }
  }
}

uint64_t sub_21608DC74(uint64_t a1, uint64_t a2)
{
  _BYTE *v3;
  _BOOL4 v4;
  unsigned __int8 *v5;
  _BOOL4 v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t result;
  _QWORD *v13;

  v3 = *(_BYTE **)(a2 + 936);
  v4 = v3 != 0;
  v5 = *(unsigned __int8 **)(a2 + 944);
  v6 = v5 != 0;
  if (!*(_BYTE *)(a2 + 928))
    goto LABEL_9;
  if (v3)
  {
    if (*v3 == 34)
      v4 = 0;
    if (v5)
      goto LABEL_6;
  }
  else
  {
    v4 = 0;
    if (v5)
    {
LABEL_6:
      v6 = *v5 != 34;
      goto LABEL_9;
    }
  }
  v6 = 0;
LABEL_9:
  v7 = *(_QWORD *)(a2 + 72);
  v8 = *(_DWORD *)(v7 + 136);
  if (*(_BYTE *)(a2 + 23) == 1)
  {
    v11 = *(_DWORD *)(a1 + 820);
    v9 = *(_QWORD *)(v7 + 32)
       + 32 * v8 * (v11 / (2 * *(_DWORD *)(a2 + 16)))
       + ((8 * (v11 % (2 * *(_DWORD *)(a2 + 16)))) & 0xFFFFFFF0);
    v10 = ((int)(v11 << 31) >> 31) & (16 * v8);
  }
  else
  {
    v9 = *(_QWORD *)(v7 + 32) + (16 * *(_DWORD *)(a1 + 824));
    v10 = 16 * *(_DWORD *)(a1 + 828) * v8;
  }
  result = sub_216086D0C((int8x16_t *)(v9 + v10), v8, a2 + 112, v6, v4, algn_2160F76E6[*(unsigned __int8 *)(a1 + 834)]);
  v13 = *(_QWORD **)(a2 + 968);
  *v13 = 0x1212121212121212;
  v13[1] = 0x1212121212121212;
  return result;
}

uint64_t sub_21608DD78(uint64_t a1, uint64_t a2)
{
  _BYTE *v3;
  _BOOL4 v4;
  unsigned __int8 *v5;
  _BOOL4 v6;
  unsigned __int8 *v7;
  int v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t result;
  _QWORD *v16;

  v3 = *(_BYTE **)(a2 + 936);
  v4 = v3 != 0;
  v5 = *(unsigned __int8 **)(a2 + 944);
  v6 = v5 != 0;
  if (!*(_BYTE *)(a2 + 928))
    goto LABEL_9;
  if (v3)
  {
    if (*v3 == 34)
      v4 = 0;
    if (v5)
      goto LABEL_6;
  }
  else
  {
    v4 = 0;
    if (v5)
    {
LABEL_6:
      v6 = *v5 != 34;
      goto LABEL_9;
    }
  }
  v6 = 0;
LABEL_9:
  v7 = *(unsigned __int8 **)(a2 + 72);
  v8 = *(_DWORD *)(a1 + 828);
  v9 = *((_DWORD *)v7 + 34);
  v10 = *v7;
  v11 = *((_QWORD *)v7 + 4) + (16 * *(_DWORD *)(a1 + 824));
  v12 = 32 * v8 * v9;
  if (v10)
  {
    v13 = 5;
  }
  else
  {
    v12 = 16 * v8 * v9;
    v13 = 4;
  }
  v14 = v11 + (v8 << v13) * v9;
  if (*(_BYTE *)(a2 + 21))
  {
    v12 = v9;
    v11 = v14;
  }
  result = sub_216086D0C((int8x16_t *)(v11 + v12), 2 * v9, a2 + 112, v6, v4, algn_2160F76E6[*(unsigned __int8 *)(a1 + 834)]);
  v16 = *(_QWORD **)(a2 + 968);
  *v16 = 0x1212121212121212;
  v16[1] = 0x1212121212121212;
  return result;
}

uint64_t sub_21608DE70(uint64_t a1, int16x8_t *a2)
{
  _BYTE *v2;
  _BOOL4 v3;
  unsigned __int8 *v4;
  _BOOL4 v5;

  v2 = (_BYTE *)a2[58].i64[1];
  v3 = v2 != 0;
  v4 = (unsigned __int8 *)a2[59].i64[0];
  v5 = v4 != 0;
  if (a2[58].i8[0])
  {
    if (v2)
    {
      if (*v2 == 34)
        v3 = 0;
      if (v4)
        goto LABEL_6;
    }
    else
    {
      v3 = 0;
      if (v4)
      {
LABEL_6:
        v5 = *v4 != 34;
        return sub_21608DECC((_DWORD *)a1, (uint64_t)a2, a2 + 39, v5, v3, *(unsigned __int8 *)(a1 + 1121));
      }
    }
    v5 = 0;
  }
  return sub_21608DECC((_DWORD *)a1, (uint64_t)a2, a2 + 39, v5, v3, *(unsigned __int8 *)(a1 + 1121));
}

uint64_t sub_21608DECC(_DWORD *a1, uint64_t a2, int16x8_t *a3, int a4, int a5, int a6)
{
  unsigned __int8 *v6;
  int v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  char v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  int8x16_t *v18;
  int v19;
  __int16 *v20;
  uint64_t v21;
  uint64_t v22;
  uint8x16_t v23;
  _WORD *v24;
  _WORD *v25;
  _WORD *v26;
  _WORD *v27;
  _WORD *v28;
  uint8x16_t v29;
  uint8x16_t v30;
  int32x4_t v31;
  int32x4_t v32;
  int32x4_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  uint16x8_t v38;
  int8x16_t v39;
  uint16x8_t v40;
  uint16x8_t v41;
  int8x16_t v42;
  uint64_t result;
  uint64_t v44;
  int16x8_t v45;
  uint64_t v46;
  int8x16_t *v47;
  int16x8_t v48;
  int16x8_t v49;
  uint64_t v50;
  int8x16_t v51;
  int8x16_t v52;
  int32x4_t v53;
  int32x4_t v54;
  int32x4_t v55;
  int16x8_t v56;
  unsigned __int8 *v57;
  int v58;
  int v59;
  unsigned __int8 *v60;
  int v61;
  int v62;
  unsigned __int8 *v63;
  int v64;
  int v65;
  unsigned __int8 *v66;
  int v67;
  int v68;
  unsigned __int8 *v69;
  int16x8_t v70;
  int16x8_t v71;
  int16x8_t v72;
  int16x8_t v73;
  int16x8_t v74;
  int16x8_t v75;
  int16x8_t v76;
  int16x8_t v77;
  int16x8_t v78;
  int16x8_t v79;
  int8x16_t v80;
  int8x16_t v81;
  uint16x8_t v82;
  uint16x8_t v83;
  char v84;
  char v85;
  int16x8_t v86;
  int16x8_t v87;
  char v88;
  char v89;
  int8x16_t v90;

  v6 = *(unsigned __int8 **)(a2 + 72);
  v7 = a1[206];
  v8 = a1[207];
  if (*(_BYTE *)(a2 + 20) && *(_BYTE *)(a2 + 22))
  {
    v9 = *((_DWORD *)v6 + 38);
    LODWORD(v10) = 2 * v9;
    v11 = *v6;
    v12 = *((_QWORD *)v6 + 5) + (16 * v7);
    v13 = 16 * v8 * v9;
    if (v11)
    {
      v14 = 4;
    }
    else
    {
      v13 = 8 * v8 * v9;
      v14 = 3;
    }
    v15 = v12 + (v8 << v14) * v9;
    if (*(_BYTE *)(a2 + 21))
      v16 = v9;
    else
      v16 = v13;
    if (*(_BYTE *)(a2 + 21))
      v12 = v15;
  }
  else
  {
    LODWORD(v10) = *((_DWORD *)v6 + 38);
    if (*(_BYTE *)(a2 + 23) == 1)
    {
      v17 = a1[205];
      v12 = *((_QWORD *)v6 + 5)
          + 16 * v10 * (v17 / (2 * *(_DWORD *)(a2 + 16)))
          + ((8 * (v17 % (2 * *(_DWORD *)(a2 + 16)))) & 0xFFFFFFF0);
      v16 = ((int)(v17 << 31) >> 31) & (8 * v10);
    }
    else
    {
      v12 = *((_QWORD *)v6 + 5) + (16 * v7);
      v16 = 8 * v8 * v10;
    }
  }
  v18 = (int8x16_t *)(v12 + v16);
  switch(a6)
  {
    case 0:
      if (a5 | a4)
      {
        if (a4 <= 0)
          v19 = 0;
        else
          v19 = -1;
        v20 = (__int16 *)((char *)&v18[-1].i16[7] + (4 * v10));
        v21 = (2 * v10);
        v22 = (3 * v10);
        v23 = *(uint8x16_t *)((char *)v18 - (int)(v10 & v19));
        v24 = (__int16 *)((char *)&v18[-1].i16[7] + v10);
        v25 = (__int16 *)((char *)&v18[-1].i16[7] + v21);
        v26 = (__int16 *)((char *)v20 + v10);
        v27 = (__int16 *)((char *)v20 + v21);
        v29.i16[4] = *v20;
        v28 = (__int16 *)((char *)v20 + v22);
        v10 = v10;
        v30.i16[0] = v23.u8[0];
        v30.i16[1] = v23.u8[2];
        v30.i16[2] = BYTE4(*(unint64_t *)((char *)v18->i64 - (int)(v10 & v19)));
        v30.i16[3] = BYTE6(*(unint64_t *)((char *)v18->i64 - (int)(v10 & v19)));
        v30.i16[4] = *(uint64_t *)((char *)&v18->i64[1] - (int)(v10 & v19));
        v30.i16[5] = BYTE2(*(uint64_t *)((char *)&v18->i64[1] - (int)(v10 & v19)));
        v30.i16[6] = v23.u8[12];
        v30.i16[7] = v23.u8[14];
        v31 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8((uint8x16_t)(*(_OWORD *)&v23 & __PAIR128__(0xFF00FF00FF00FF00, 0xFF00FF00FF00FF00)))));
        v23.i16[0] = v18[-1].i16[7];
        v23.i16[1] = *v24;
        v23.i16[2] = *v25;
        v23.i16[3] = *(__int16 *)((char *)&v18[-1].i16[7] + v22);
        v23.i16[4] = v29.u8[8];
        v23.i16[5] = *v26;
        v23.i16[6] = *v27;
        v23.i16[7] = *v28;
        v32 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(v23)));
        v29.i16[0] = v18[-1].i16[7] & 0xFF00;
        v29.i16[1] = *v24 & 0xFF00;
        v29.i16[2] = *v25 & 0xFF00;
        v29.i16[3] = *(__int16 *)((_BYTE *)&v18[-1].i16[7] + v22) & 0xFF00;
        v29.i16[4] &= 0xFF00u;
        v29.i16[5] = *v26 & 0xFF00;
        v29.i16[6] = *v27 & 0xFF00;
        v29.i16[7] = *v28 & 0xFF00;
        v33 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(v29)));
        v34 = (int16x8_t)vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(v30))), (int32x4_t)xmmword_2160F1870);
        v35 = (int16x8_t)vaddq_s32(v31, (int32x4_t)xmmword_2160F1870);
        v36 = (int16x8_t)vaddq_s32(v32, (int32x4_t)xmmword_2160F1870);
        v37 = (int16x8_t)vaddq_s32(v33, (int32x4_t)xmmword_2160F1870);
        if ((v19 & a5) != 0)
        {
          v38.i64[0] = 0x2000200020002;
          v38.i64[1] = 0x2000200020002;
          v39 = (int8x16_t)vshlq_u16((uint16x8_t)vqtbl1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)vaddq_s32((int32x4_t)v37, (int32x4_t)v35), 0xEuLL), (int8x16_t)vaddq_s32((int32x4_t)v36, (int32x4_t)v34)), (int8x16_t)xmmword_2160EF0F0), v38);
          v40 = (uint16x8_t)vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)vzip2q_s16(v36, v37), 8uLL), vextq_s8((int8x16_t)0, (int8x16_t)vzip2q_s16(v34, v35), 0xCuLL));
          v41.i64[0] = 0x1000100010001;
          v41.i64[1] = 0x1000100010001;
          v42 = vorrq_s8((int8x16_t)vshlq_u16(v40, v41), v39);
        }
        else
        {
          if (a5)
          {
            v80 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v37, 0xEuLL), (int8x16_t)v36);
            v81 = (int8x16_t)xmmword_2160F1880;
          }
          else
          {
            v80 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v35, 0xEuLL), (int8x16_t)v34);
            v81 = (int8x16_t)xmmword_2160F1890;
          }
          v82 = (uint16x8_t)vqtbl1q_s8(v80, v81);
          v83.i64[0] = 0x1000100010001;
          v83.i64[1] = 0x1000100010001;
          v42 = (int8x16_t)vshlq_u16(v82, v83);
        }
      }
      else
      {
        v21 = (2 * v10);
        v42.i64[0] = 0x80008000800080;
        v42.i64[1] = 0x80008000800080;
        v10 = v10;
      }
      v84 = 1;
      do
      {
        v85 = v84;
        v86 = (int16x8_t)vqtbl1q_s8(v42, (int8x16_t)xmmword_2160EE800);
        v87 = (int16x8_t)vqtbl1q_s8(v42, (int8x16_t)xmmword_2160F18A0);
        v88 = 1;
        do
        {
          v89 = v88;
          v90 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(a3[2], v86)), vaddq_s16(a3[3], v87));
          *v18 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(*a3, v86)), vaddq_s16(a3[1], v87));
          *(int8x16_t *)((char *)v18 + v10) = v90;
          a3 += 4;
          v18 = (int8x16_t *)((char *)v18 + v21);
          v88 = 0;
        }
        while ((v89 & 1) != 0);
        v84 = 0;
        v42 = vqtbl1q_s8(v42, (int8x16_t)xmmword_2160F18B0);
      }
      while ((v85 & 1) != 0);
      goto LABEL_41;
    case 1:
      v44 = 0;
      do
      {
        v45 = (int16x8_t)vqtbl1q_s8((int8x16_t)((v18[-1].u16[7] | (v18[-1].u16[7] << 8)) & 0xFF00FF), (int8x16_t)xmmword_2160EE800);
        *v18 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(a3[v44], v45)), vaddq_s16(a3[v44 + 1], v45));
        v18 = (int8x16_t *)((char *)v18 + v10);
        v44 += 2;
      }
      while ((_DWORD)(v44 * 16) != 256);
      goto LABEL_41;
    case 2:
      v46 = 0;
      v47 = (int8x16_t *)((char *)v18 - (int)v10);
      v48 = (int16x8_t)vzip1q_s8(*v47, (int8x16_t)0);
      v49 = (int16x8_t)vzip2q_s8(*v47, (int8x16_t)0);
      do
      {
        *v18 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(a3[v46], v48)), vaddq_s16(a3[v46 + 1], v49));
        v18 = (int8x16_t *)((char *)v18 + v10);
        v46 += 2;
      }
      while ((_DWORD)(v46 * 16) != 256);
      goto LABEL_41;
    case 3:
      v50 = 0;
      v51 = vqtbl1q_s8(*(int8x16_t *)((char *)v18 - (int)v10), (int8x16_t)xmmword_2160F1820);
      v51.i16[0] = *(__int16 *)((char *)&v18[-1].i16[7] - (int)v10);
      v52 = vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vsubq_s16((int16x8_t)vzip2q_s8(v51, (int8x16_t)0), (int16x8_t)vzip1q_s8(vqtbl1q_s8(v51, (int8x16_t)xmmword_2160F1830), (int8x16_t)0)), (int8x16_t)xmmword_2160F1840), (int8x16_t)xmmword_2160F1850);
      v53 = vpaddq_s32(vmull_s16(*(int16x4_t *)v52.i8, (int16x4_t)0x22001100220011), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v52, v52, 8uLL), (int16x4_t)0x44003300440033));
      v54.i64[0] = 0x1000000010;
      v54.i64[1] = 0x1000000010;
      v55.i64[0] = 0x400000004;
      v55.i64[1] = 0x400000004;
      v56 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_s32(vaddq_s32(vaddq_s32(v53, v54), (int32x4_t)vextq_s8((int8x16_t)v53, (int8x16_t)0, 8uLL)), v55), (int8x16_t)xmmword_2160F1860), (int8x16_t)xmmword_2160EE800);
      v57 = &v18[-1].u8[v10 + 14];
      v58 = *v57;
      v59 = v57[1];
      v60 = &v57[v10];
      v61 = *v60;
      v62 = v60[1];
      v63 = &v60[(2 * v10)];
      v64 = *v63;
      v65 = v63[1];
      v66 = &v63[v10];
      v67 = *v66;
      v68 = v66[1];
      v69 = &v66[v10];
      v70 = (int16x8_t)vdupq_n_s32((34816
                                  * (3 * (v69[1] - v18[-1].u8[15])
                                   - v62
                                   + v65
                                   + 2 * (v68 - v59)
                                   + 4 * (v69[v10 + 1] - v18[-1].u8[-v10 + 15]))
                                  + 0x8000) & 0xFFFF0000 | (unsigned __int16)((17
                                                                             * (3 * (*v69 - v18[-1].u8[14])
                                                                              - v61
                                                                              + v64
                                                                              + 2 * (v67 - v58)
                                                                              + 4
                                                                              * (v69[v10]
                                                                               - v18[-1].u8[-v10 + 14]))
                                                                             + 16) >> 5));
      v71.i64[0] = 0x2000200020002;
      v71.i64[1] = 0x2000200020002;
      v72 = vmlaq_s16((int16x8_t)vdupq_n_s32((16* (v18->u8[-v10 + 14]+ v18->u8[8 * v10 - v10 - 2])) | ((v18->u8[-v10 + 15]+ v18->u8[8 * v10 - v10 - 1]) << 20)), v70, v71);
      v71.i64[0] = 0x10001000100010;
      v71.i64[1] = 0x10001000100010;
      v73 = vaddq_s16(v72, v71);
      v74 = vmlaq_s16(v73, v56, (int16x8_t)xmmword_2160EE750);
      v75 = vmlaq_s16(v73, v56, (int16x8_t)xmmword_2160EE760);
      v76.i64[0] = 0x4000400040004;
      v76.i64[1] = 0x4000400040004;
      v77.i64[0] = 0xFF00FF00FF00FFLL;
      v77.i64[1] = 0xFF00FF00FF00FFLL;
      do
      {
        v78 = vshlq_s16(v74, v76);
        v74 = vaddq_s16(v74, v70);
        v79 = vshlq_s16(v75, v76);
        v75 = vaddq_s16(v75, v70);
        *v18 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(a3[v50], vmaxq_s16(vminq_s16(v78, v77), (int16x8_t)0))), vaddq_s16(a3[v50 + 1], vmaxq_s16(vminq_s16(v79, v77), (int16x8_t)0)));
        v18 = (int8x16_t *)((char *)v18 + v10);
        v50 += 2;
      }
      while ((_DWORD)(v50 * 16) != 256);
LABEL_41:
      result = 0;
      break;
    default:
      result = 4294958327;
      break;
  }
  return result;
}

int *sub_21608E484(int *result, uint64_t a2, double a3, double a4, double a5, double a6, double a7, int16x8_t a8, int16x8_t a9)
{
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 *v25;
  unsigned __int8 *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 *v29;
  _BOOL4 v30;
  unsigned __int8 *v31;
  _BOOL4 v32;
  _BOOL4 v33;
  _BOOL4 v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  char *v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  unsigned __int8 *v46;
  uint64_t v47;
  int16x8_t v48;
  uint16x8_t v49;
  uint64_t v50;
  unsigned int *v51;
  uint16x8_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  unint64_t v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  int8x16_t v71;
  int16x8_t v72;
  int16x8_t *v73;
  int8x16_t v74;
  int8x16_t v75;
  int8x16_t v76;
  int16x8_t v77;
  int16x8_t v78;
  int16x8_t v79;
  int16x8_t v80;
  int16x8_t v81;
  int16x8_t v82;
  int16x8_t v83;
  int16x8_t v84;
  int8x8_t v85;
  int8x16_t v86;
  int16x8_t v87;
  uint16x8_t v88;
  int8x16_t v89;
  int8x16_t v90;
  int8x16_t v91;
  int16x8_t v92;
  uint64x2_t v93;
  unsigned int v94;
  char *v95;
  int8x16_t v96;
  int16x8_t v97;
  int16x8_t v98;
  unsigned __int8 *v99;
  int v100;
  int8x16_t v101;
  int8x16_t v102;
  int8x16_t v103;
  int16x8_t v104;
  int16x8_t v105;
  int16x8_t v106;
  int16x8_t v107;
  int8x16_t v108;
  int16x8_t v109;
  int8x16_t v110;
  int16x8_t v111;
  int16x8_t v112;
  unsigned __int8 *v113;
  int8x16_t v114;
  int8x16_t v115;
  int8x16_t v116;
  int16x8_t v117;
  int16x8_t v118;
  int16x8_t v119;
  int16x8_t v120;
  int16x8_t v121;
  unsigned int v122;
  int16x8_t v123;
  int16x8_t v124;
  int8x16_t v125;
  int8x16_t v126;
  int8x16_t v127;
  int8x16_t v128;
  int16x8_t v129;
  unsigned __int8 *v130;
  int16x8_t v131;
  int8x16_t v132;
  int8x16_t v133;
  int8x16_t v134;
  int16x8_t v135;
  int16x8_t v136;
  int16x8_t v137;
  int8x16_t v138;
  int8x16_t v139;
  int16x8_t v140;
  int8x16_t v141;
  int16x8_t v142;
  int16x8_t v143;
  int16x8_t v144;
  int8x16_t v145;
  char *v146;
  unsigned __int8 *v147;
  int8x16_t v148;
  int8x16_t v149;
  int8x16_t v150;
  int16x8_t v151;
  int16x8_t v152;
  int16x8_t v153;
  int8x16_t v154;
  int16x8_t v155;
  int16x8_t v156;
  int16x8_t *v157;
  int16x8_t v158;
  int16x8_t v159;
  int16x8_t v160;
  int16x8_t v161;
  int16x8_t v162;
  int16x8_t v163;
  int16x8_t v164;
  int16x8_t v165;
  uint16x8_t v166;
  int8x16_t v167;
  int16x8_t v168;
  int32x4_t v169;
  int8x16_t v170;
  int8x16_t v171;
  int16x8_t v172;
  int16x8_t v173;
  int16x8_t v174;
  int16x8_t v175;
  int16x8_t v176;
  int16x8_t v177;
  int16x8_t v178;
  int16x8_t v179;
  int8x16_t v180;
  int16x8_t v181;
  int16x8_t v182;
  int8x16_t v183;
  int8x16_t v184;
  int8x16_t v185;
  int16x8_t v186;
  int32x4_t v187;
  int8x16_t v188;
  int8x16_t v189;
  int16x8_t v190;
  int16x8_t v191;
  int16x8_t v192;
  int16x8_t v193;
  int16x8_t v194;
  int8x8_t v195;
  int8x8_t v196;
  uint8x8_t v197;
  uint8x8_t v198;
  int16x8_t v199;
  uint16x8_t v200;
  int16x8_t v201;
  int16x8_t v202;
  int16x8_t v203;
  int16x8_t v204;
  int16x8_t v205;
  int16x8_t v206;
  int16x8_t v207;
  int16x8_t v208;
  int16x8_t v209;
  int16x8_t v210;
  uint8x8_t v211;
  int16x8_t v212;
  int16x8_t v213;
  int16x8_t v214;
  int16x8_t v215;
  uint8x8_t v216;
  int16x8_t v217;
  int16x8_t v218;
  int16x8_t v219;
  int16x8_t v220;
  uint8x8_t v221;
  int16x8_t v222;
  int8x16_t v223;
  int8x16_t v224;
  int8x16_t v225;
  int16x8_t v226;
  int16x8_t v227;
  unsigned int v228;
  BOOL v229;
  uint64_t v230;
  unsigned __int8 *v231;
  unsigned __int8 *v232;
  uint64_t v233;
  uint64_t v234;
  int8x16x2_t v235;
  int8x16x2_t v236;

  v234 = *MEMORY[0x24BDAC8D0];
  v9 = *((_QWORD *)result + 27);
  v11 = *result;
  v10 = result[1];
  if (*((_BYTE *)result + 29) && *(_BYTE *)(v9 + 1363))
  {
    v12 = v9 + 504;
    v13 = *(unsigned int *)(v9 + 168);
    v14 = 2 * v13;
    v15 = *(unsigned __int8 *)(v9 + 32);
    v16 = *(_QWORD *)(v9 + 64) + (16 * v11);
    if (*((_BYTE *)result + 30))
    {
      if (v15)
        v17 = 5;
      else
        v17 = 4;
      v18 = ((v10 << v17) * v13);
      v16 += v13;
      goto LABEL_16;
    }
    v19 = v10 * v13;
    if (v15)
    {
      v18 = (32 * v19);
      goto LABEL_16;
    }
LABEL_15:
    v18 = (16 * v19);
    goto LABEL_16;
  }
  v12 = v9 + 440;
  v14 = *(_DWORD *)(v9 + 168);
  if (*((_BYTE *)result + 31) != 1)
  {
    if (*((_BYTE *)result + 31))
    {
      v21 = *(_QWORD *)(v9 + 64)
          + 32 * v14 * (result[4] / (2 * result[5]))
          + ((8 * (result[4] % (2 * result[5]))) & 0xFFFFFFF0)
          + ((result[4] << 31 >> 31) & v14);
      v12 = v9 + 504;
      v14 *= 2;
      goto LABEL_17;
    }
    v16 = *(_QWORD *)(v9 + 64) + (16 * v11);
    v19 = v10 * v14;
    goto LABEL_15;
  }
  v20 = result[4];
  v16 = *(_QWORD *)(v9 + 64) + 32 * v14 * (v20 / (2 * result[5])) + ((8 * (v20 % (2 * result[5]))) & 0xFFFFFFF0);
  v18 = ((int)(v20 << 31) >> 31) & (16 * v14);
LABEL_16:
  v21 = v16 + v18;
LABEL_17:
  v22 = *(unsigned __int8 *)(*((_QWORD *)result + 5) + 52);
  v23 = *((_QWORD *)result + 21);
  v24 = *((_QWORD *)result + 22) + 48;
  v26 = (unsigned __int8 *)*((_QWORD *)result + 16);
  v25 = (unsigned __int8 *)*((_QWORD *)result + 17);
  v28 = *((_QWORD *)result + 18);
  v27 = *((_QWORD *)result + 19);
  v232 = 0;
  v233 = 0;
  v230 = v24;
  v231 = 0;
  if (v26)
  {
    if (v26[64])
      v29 = v26 + 48;
    else
      v29 = v26 + 32;
    v231 = v29;
    v30 = 1;
    if (v25)
      goto LABEL_22;
  }
  else
  {
    v30 = 0;
    if (v25)
    {
LABEL_22:
      if (v25[64])
        v31 = v25 + 48;
      else
        v31 = v25 + 32;
      v232 = v31;
      v32 = 1;
      goto LABEL_28;
    }
  }
  v32 = 0;
  v232 = 0;
LABEL_28:
  v33 = v28 != 0;
  v34 = v27 != 0;
  if (v23)
  {
    if (*(_BYTE *)(v23 + 64))
      v35 = v23 + 48;
    else
      v35 = v23 + 32;
    v233 = v35;
  }
  else
  {
    v233 = 0;
  }
  v36 = *((_QWORD *)result + 6);
  if (*(_BYTE *)(v36 + 4))
  {
    if (v26)
    {
      if (v26[48] == 34)
      {
        v30 = v26[32] != 34;
        if (!v25)
          goto LABEL_38;
LABEL_43:
        if (v25[48] == 34)
        {
          v32 = v25[32] != 34;
          if (!v28)
            goto LABEL_45;
        }
        else
        {
          v32 = 1;
          if (!v28)
            goto LABEL_45;
        }
LABEL_39:
        if (*(_BYTE *)(v28 + 48) == 34)
        {
          v33 = *(unsigned __int8 *)(v28 + 32) != 34;
          if (!v27)
          {
LABEL_41:
            v34 = 0;
            goto LABEL_55;
          }
        }
        else
        {
          v33 = 1;
          if (!v27)
            goto LABEL_41;
        }
        goto LABEL_46;
      }
      v30 = 1;
      if (v25)
        goto LABEL_43;
    }
    else
    {
      v30 = 0;
      if (v25)
        goto LABEL_43;
    }
LABEL_38:
    v32 = 0;
    if (v28)
      goto LABEL_39;
LABEL_45:
    v33 = 0;
    if (!v27)
      goto LABEL_41;
LABEL_46:
    v34 = *(_BYTE *)(v27 + 48) != 34 || *(unsigned __int8 *)(v27 + 32) != 34;
  }
LABEL_55:
  v37 = (2 * v33) | (4 * v32) | (8 * v30) | v34;
  v38 = byte_254E10D40;
  if (v26 && (*((_BYTE *)result + 185) & 1) != 0)
  {
    v39 = *((unsigned __int8 *)result + 31);
    if (v39 != 2 || v26[144])
    {
      if (v39 == 1 && v26[144] == 1)
      {
        if ((result[4] & 1) != 0)
          v38 = (char *)&unk_254E10DD8;
        else
          v38 = (char *)&unk_254E10DA8;
      }
    }
    else
    {
      v38 = (char *)&unk_254E10D78;
    }
  }
  v40 = 0;
  v41 = 3 * v14;
  v42 = 7 * v14;
  v43 = 2 * v14;
  v44 = &byte_2160F2328;
  v45 = 4 * v14;
  v46 = (unsigned __int8 *)(v36 + 326);
  v47 = 6 * v14;
  v48.i64[0] = 0x2000200020002;
  v48.i64[1] = 0x2000200020002;
  v49.i64[0] = 0x1000100010001;
  v49.i64[1] = 0x1000100010001;
  v50 = 5 * v14;
  v51 = (unsigned int *)((char *)&unk_2160F232C + 4 * v37);
  v52.i64[0] = -1;
  v52.i64[1] = -1;
  while (2)
  {
    v53 = v38[v40];
    if (v26 && v40 >= 8 && *((_BYTE *)result + 31) == 2 && !v26[144])
      v54 = !(v53 & 1) | (2 * !(v53 & 1));
    else
      v54 = !(v53 & 1);
    v55 = v38[v40 + 16];
    v56 = *(&v230 + (~(2 * (_BYTE)v55) & 2));
    v57 = *(&v230 + v54);
    if (v56)
      v58 = v57 == 0;
    else
      v58 = 1;
    if (v58
      || (v59 = *(unsigned __int8 *)(v57 + ((v53 >> 1) & 0xF)),
          v60 = *(unsigned __int8 *)(v56 + ((v55 >> 1) & 0xF)),
          (*(unsigned __int8 *)(*((_QWORD *)result + 6) + 4) & ((v60 | v59) >> 5) & 1) != 0))
    {
      v61 = 2;
    }
    else
    {
      v61 = (((v59 & 0xF) - (v60 & 0xF)) & ((int)((v59 & 0xF) - (v60 & 0xF)) >> 31)) + (v60 & 0xF);
    }
    v63 = *v51;
    v51 += 16;
    v62 = v63;
    v64 = *v46;
    if (v61 <= v64)
      ++v64;
    v65 = v64 & (*(v46 - 20) - 1) | v61 & -*(v46 - 20);
    *(_DWORD *)(v24 + v40) = vdup_n_s8(v65).u32[0];
    v66 = v62 >> 24;
    v67 = (_QWORD *)(v21 + *(unsigned int *)(v12 + 4 * v40));
    v68 = v62;
    v69 = BYTE1(v62);
    v70 = BYTE2(v62);
    switch(v65)
    {
      case 0u:
        a8.i64[0] = *(_QWORD *)((char *)v67 - v69 * v14);
        a8.i16[4] = *((unsigned __int8 *)v67 + v70 - v14 + 7);
        v71 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xFuLL), (int8x16_t)*((unsigned __int8 *)v67 - v14 - v66));
        a9 = (int16x8_t)vzip1q_s8(v71, (int8x16_t)0);
        v72 = (int16x8_t)vzip1q_s8(vextq_s8(v71, (int8x16_t)0, 1uLL), (int8x16_t)0);
        a8 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(a9, (int16x8_t)vzip1q_s8(vextq_s8(v71, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v72, v72)), v48), v49);
        if (v22)
        {
          v73 = (int16x8_t *)(a2 + 2 * *v44);
          goto LABEL_132;
        }
        *(int8x8_t *)a8.i8 = vqmovun_s16(a8);
        goto LABEL_141;
      case 1u:
        v74 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v14 - v68), 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v43 - v68), 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v41 - v68), 0xCuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v45 - v68), 0xBuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v47 - v68), 9uLL)), vorrq_s8(vzip1q_s8((int8x16_t)*((unsigned __int8 *)v67 + ~(unint64_t)(v66 * v14)), (int8x16_t)*((unsigned __int8 *)v67 - v68)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v50 - v68), 0xAuLL)));
        v75 = vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v42 - v68), 8uLL);
        v76 = vorrq_s8(v74, vorrq_s8(vextq_s8((int8x16_t)0, v75, 0xFuLL), v75));
        v77 = (int16x8_t)vzip1q_s8(vextq_s8(v76, (int8x16_t)0, 1uLL), (int8x16_t)0);
        v78 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v74, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v76, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v77, v77)), v48), v49);
        v79 = vdupq_lane_s16(*(int16x4_t *)v78.i8, 0);
        v80 = vdupq_lane_s16(*(int16x4_t *)v78.i8, 1);
        v81 = vdupq_lane_s16(*(int16x4_t *)v78.i8, 2);
        v82 = vdupq_lane_s16(*(int16x4_t *)v78.i8, 3);
        v83 = vdupq_laneq_s16(v78, 4);
        v84 = vdupq_laneq_s16(v78, 5);
        a9 = vdupq_laneq_s16(v78, 6);
        a8 = vdupq_laneq_s16(v78, 7);
        if (!v22)
          goto LABEL_85;
        goto LABEL_92;
      case 2u:
        if ((_DWORD)v68)
        {
          if (v69)
          {
            a8.i64[0] = *(_QWORD *)((char *)v67 - v14);
            a8.i16[4] = *((unsigned __int8 *)v67 + v70 - v14 + 7);
            v86 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xFuLL), (int8x16_t)*((unsigned __int8 *)v67 - v14 - v66));
            v87 = (int16x8_t)vzip1q_s8(vextq_s8(v86, (int8x16_t)0, 1uLL), (int8x16_t)0);
            v88 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v86, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v86, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v87, v87)), v48);
            v89 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v14 - 1), 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v43 - 1), 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v41 - 1), 0xCuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v45 - 1), 0xBuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v47 - 1), 9uLL)), vorrq_s8(vzip1q_s8((int8x16_t)*((unsigned __int8 *)v67 - v66 * v14 - 1), (int8x16_t)*((unsigned __int8 *)v67 - 1)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v50 - 1), 0xAuLL)));
            v90 = vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v42 - 1), 8uLL);
            v91 = vorrq_s8(v89, vorrq_s8(vextq_s8((int8x16_t)0, v90, 0xFuLL), v90));
            v92 = (int16x8_t)vzip1q_s8(vextq_s8(v91, (int8x16_t)0, 1uLL), (int8x16_t)0);
            a9 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v89, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v91, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v92, v92)), v48), v49);
            v93 = vpaddlq_u32(vpaddlq_u16(vpaddlq_u8((uint8x16_t)vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16(v88, v49)), a9))));
            v94 = ((v93.u16[4] + v93.u16[0] + 8) >> 4 << 8) | ((v93.u16[4] + v93.u16[0] + 8) >> 4);
            goto LABEL_129;
          }
          v223 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v14 - 1), 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v43 - 1), 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v41 - 1), 0xCuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v45 - 1), 0xBuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v47 - 1), 9uLL)), vorrq_s8(vzip1q_s8((int8x16_t)*((unsigned __int8 *)v67 - v66 * v14 - 1), (int8x16_t)*((unsigned __int8 *)v67 - 1)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v50 - 1), 0xAuLL)));
          v224 = vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v42 - 1), 8uLL);
          v225 = vorrq_s8(v223, vorrq_s8(vextq_s8((int8x16_t)0, v224, 0xFuLL), v224));
          v226 = (int16x8_t)vzip1q_s8(vextq_s8(v225, (int8x16_t)0, 1uLL), (int8x16_t)0);
          v166 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v223, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v225, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v226, v226)), v48);
        }
        else
        {
          a8 = (int16x8_t)xmmword_2160F19E0;
          if (!v69)
            goto LABEL_130;
          a8.i64[0] = *(_QWORD *)((char *)v67 - v14);
          v164 = (int16x8_t)vzip1q_s8((int8x16_t)a8, (int8x16_t)0);
          a8.i16[4] = *((unsigned __int8 *)v67 + v70 - v14 + 7);
          v165 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v164, 0xEuLL);
          v165.i16[0] = *((unsigned __int8 *)v67 - v14 - v66);
          v166 = (uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8((int8x16_t)a8, (int8x16_t)0, 1uLL), (int8x16_t)0), vaddq_s16(v164, v164)), vaddq_s16(v165, v48));
        }
        v227 = (int16x8_t)vshlq_u16(v166, v49);
        a9 = (int16x8_t)vqmovun_high_s16(vqmovun_s16(v227), v227);
        v228 = vpaddlq_u32(vpaddlq_u16(vpaddlq_u8((uint8x16_t)a9))).u16[0] + 4;
        v94 = (v228 >> 3 << 8) | (v228 >> 3);
LABEL_129:
        a8 = (int16x8_t)vzip1q_s32((int32x4_t)(v94 | (v94 << 16)), (int32x4_t)(v94 | (v94 << 16)));
LABEL_130:
        if (!v22)
        {
LABEL_141:
          *v67 = a8.i64[0];
          *(_QWORD *)((char *)v67 + v14) = a8.i64[0];
          *(_QWORD *)((char *)v67 + v43) = a8.i64[0];
          *(_QWORD *)((char *)v67 + v41) = a8.i64[0];
          *(_QWORD *)((char *)v67 + v45) = a8.i64[0];
          *(_QWORD *)((char *)v67 + v50) = a8.i64[0];
          *(_QWORD *)((char *)v67 + v47) = a8.i64[0];
          goto LABEL_137;
        }
        v73 = (int16x8_t *)(a2 + 2 * *v44);
        a8 = (int16x8_t)vzip1q_s8((int8x16_t)a8, (int8x16_t)0);
LABEL_132:
        *v67 = vqmovun_s16(vaddq_s16(*v73, a8));
        *(int8x8_t *)((char *)v67 + v14) = vqmovun_s16(vaddq_s16(v73[2], a8));
        *(int8x8_t *)((char *)v67 + v43) = vqmovun_s16(vaddq_s16(v73[4], a8));
        *(int8x8_t *)((char *)v67 + v41) = vqmovun_s16(vaddq_s16(v73[6], a8));
        *(int8x8_t *)((char *)v67 + v45) = vqmovun_s16(vaddq_s16(v73[8], a8));
        *(int8x8_t *)((char *)v67 + v50) = vqmovun_s16(vaddq_s16(v73[10], a8));
        v182 = vaddq_s16(v73[12], a8);
        goto LABEL_133;
      case 3u:
        a9.i64[0] = *(_QWORD *)((char *)v67 - v69 * v14);
        v95 = (char *)v67 - v14;
        if ((_DWORD)v70)
        {
          a8.i64[0] = *((_QWORD *)v95 + 1);
        }
        else
        {
          v167 = vextq_s8((int8x16_t)a9, (int8x16_t)0, 7uLL);
          v168 = (int16x8_t)vzip1q_s8(v167, v167);
          v169 = (int32x4_t)vzip1q_s16(v168, v168);
          a8 = (int16x8_t)vzip1q_s32(v169, v169);
        }
        v170 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a9, 0xFuLL), (int8x16_t)v95[-v66]);
        v171 = vorrq_s8(v170, vextq_s8((int8x16_t)0, (int8x16_t)a8, 7uLL));
        v172 = (int16x8_t)vzip1q_s8(v170, (int8x16_t)0);
        v173 = (int16x8_t)vzip1q_s8(vextq_s8(v170, (int8x16_t)0, 1uLL), (int8x16_t)0);
        v174 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v172, (int16x8_t)vzip1q_s8(vextq_s8(v171, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(vaddq_s16(v173, v173), v48)), v49);
        v175 = (int16x8_t)vzip1q_s8((int8x16_t)a8, (int8x16_t)0);
        v176 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v175, v175), (int16x8_t)vzip2q_s8(v171, (int8x16_t)0)), vaddq_s16((int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, vdupq_lane_s8(*(int8x8_t *)a8.i8, 7), 9uLL), vextq_s8((int8x16_t)a8, (int8x16_t)0, 1uLL)), (int8x16_t)0), v48)), v49);
        v177 = (int16x8_t)vextq_s8((int8x16_t)v174, (int8x16_t)v176, 2uLL);
        v178 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v174, (int16x8_t)vextq_s8((int8x16_t)v174, (int8x16_t)v176, 4uLL)), vaddq_s16(v177, v177)), v48), v49);
        v179 = (int16x8_t)vextq_s8((int8x16_t)v176, (int8x16_t)0, 2uLL);
        v180 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v176, (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v176, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_2160F19D0)), vaddq_s16(vaddq_s16(v179, v179), v48)), v49);
        v181 = (int16x8_t)vextq_s8((int8x16_t)v178, v180, 2uLL);
        v81 = (int16x8_t)vextq_s8((int8x16_t)v178, v180, 4uLL);
        v82 = (int16x8_t)vextq_s8((int8x16_t)v178, v180, 6uLL);
        v83 = (int16x8_t)vextq_s8((int8x16_t)v178, v180, 8uLL);
        v84 = (int16x8_t)vextq_s8((int8x16_t)v178, v180, 0xAuLL);
        a9 = (int16x8_t)vextq_s8((int8x16_t)v178, v180, 0xCuLL);
        a8 = (int16x8_t)vextq_s8((int8x16_t)v178, v180, 0xEuLL);
        if (v22)
        {
          v73 = (int16x8_t *)(a2 + 2 * *v44);
          *v67 = vqmovun_s16(vaddq_s16(*v73, v178));
          v109 = vaddq_s16(v73[2], v181);
          goto LABEL_107;
        }
        *v67 = vqmovun_s16(v178);
        v85 = vqmovun_s16(v181);
        goto LABEL_115;
      case 4u:
        a8.i64[0] = *(_QWORD *)((char *)v67 - v69 * v14);
        a8.i16[4] = *((unsigned __int8 *)v67 + v70 - v14 + 7);
        v96 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xFuLL), (int8x16_t)*((unsigned __int8 *)v67 - v14 - v66));
        v97 = (int16x8_t)vzip1q_s8(vextq_s8(v96, (int8x16_t)0, 1uLL), (int8x16_t)0);
        v98 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v96, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v96, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v97, v97)), v48), v49);
        v99 = (unsigned __int8 *)v67 - v68;
        v100 = *v99;
        v101 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v99[v14], 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)v99[v43], 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v99[v41], 0xCuLL)), vzip1q_s8((int8x16_t)*((unsigned __int8 *)v67 + ~(unint64_t)(v66 * v14)), (int8x16_t)*v99)), vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v99[v45], 0xBuLL), vextq_s8((int8x16_t)0, (int8x16_t)v99[v50], 0xAuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v99[v47], 9uLL)));
        v102 = vextq_s8((int8x16_t)0, (int8x16_t)v99[v42], 8uLL);
        v103 = vorrq_s8(v101, vorrq_s8(vextq_s8((int8x16_t)0, v102, 0xFuLL), v102));
        v104 = (int16x8_t)vzip1q_s8(vextq_s8(v103, (int8x16_t)0, 1uLL), (int8x16_t)0);
        v105 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v101, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v103, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v104, v104)), v48), v49);
        v106 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v98, 0xEuLL);
        v106.i16[0] = (v100
                     + 2 * *((unsigned __int8 *)v67 + ~(unint64_t)(v66 * v14))
                     + *(_QWORD *)((char *)v67 - v69 * v14)
                     + 2) >> 2;
        v107 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v105, 0xEuLL);
        v107.i16[0] = v106.i16[0];
        v79 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v98, v98), (int16x8_t)vextq_s8((int8x16_t)v98, (int8x16_t)0, 2uLL)), v48), v106), v49), 0xEuLL);
        v79.i16[0] = (2
                    * ((v100
                      + 2 * *((unsigned __int8 *)v67 + ~(unint64_t)(v66 * v14))
                      + *(_QWORD *)((char *)v67 - v69 * v14)
                      + 2) >> 2)
                    + v98.u16[0]
                    + v105.u16[0]
                    + 2) >> 2;
        v108 = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v105, v105), (int16x8_t)vextq_s8((int8x16_t)v105, (int8x16_t)0, 2uLL)), v48), v107), v49), (int8x16_t)xmmword_2160F1960), (int8x16_t)xmmword_2160F1970), (int8x16_t)xmmword_2160F1980);
        v80 = (int16x8_t)vextq_s8(v108, (int8x16_t)v79, 0xEuLL);
        v81 = (int16x8_t)vextq_s8(v108, (int8x16_t)v79, 0xCuLL);
        v82 = (int16x8_t)vextq_s8(v108, (int8x16_t)v79, 0xAuLL);
        v83 = (int16x8_t)vextq_s8(v108, (int8x16_t)v79, 8uLL);
        v84 = (int16x8_t)vextq_s8(v108, (int8x16_t)v79, 6uLL);
        a9 = (int16x8_t)vextq_s8(v108, (int8x16_t)v79, 4uLL);
        a8 = (int16x8_t)vextq_s8(v108, (int8x16_t)v79, 2uLL);
        if (v22)
        {
LABEL_92:
          v73 = (int16x8_t *)(a2 + 2 * *v44);
          *v67 = vqmovun_s16(vaddq_s16(*v73, v79));
          v109 = vaddq_s16(v73[2], v80);
LABEL_107:
          *(int8x8_t *)((char *)v67 + v14) = vqmovun_s16(v109);
          *(int8x8_t *)((char *)v67 + v43) = vqmovun_s16(vaddq_s16(v73[4], v81));
          *(int8x8_t *)((char *)v67 + v41) = vqmovun_s16(vaddq_s16(v73[6], v82));
          *(int8x8_t *)((char *)v67 + v45) = vqmovun_s16(vaddq_s16(v73[8], v83));
          *(int8x8_t *)((char *)v67 + v50) = vqmovun_s16(vaddq_s16(v73[10], v84));
          v182 = vaddq_s16(v73[12], a9);
LABEL_133:
          *(int8x8_t *)((char *)v67 + v47) = vqmovun_s16(v182);
          goto LABEL_134;
        }
LABEL_85:
        *v67 = vqmovun_s16(v79);
        v85 = vqmovun_s16(v80);
LABEL_115:
        *(int8x8_t *)((char *)v67 + v14) = v85;
        *(int8x8_t *)((char *)v67 + v43) = vqmovun_s16(v81);
        *(int8x8_t *)((char *)v67 + v41) = vqmovun_s16(v82);
        *(int8x8_t *)((char *)v67 + v45) = vqmovun_s16(v83);
        *(int8x8_t *)((char *)v67 + v50) = vqmovun_s16(v84);
        goto LABEL_126;
      case 5u:
        a8.i64[0] = *(_QWORD *)((char *)v67 - v69 * v14);
        a8.i16[4] = *((unsigned __int8 *)v67 + v70 - v14 + 7);
        v110 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xFuLL), (int8x16_t)*((unsigned __int8 *)v67 - v14 - v66));
        v111 = (int16x8_t)vzip1q_s8(vextq_s8(v110, (int8x16_t)0, 1uLL), (int8x16_t)0);
        v112 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v110, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v110, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v111, v111)), v48), v49);
        v113 = (unsigned __int8 *)v67 - v68;
        v114 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v113[v14], 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)v113[v43], 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v113[v41], 0xCuLL)), vzip1q_s8((int8x16_t)*((unsigned __int8 *)v67 + ~(unint64_t)(v66 * v14)), (int8x16_t)*v113)), vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v113[v45], 0xBuLL), vextq_s8((int8x16_t)0, (int8x16_t)v113[v50], 0xAuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v113[v47], 9uLL)));
        v115 = vextq_s8((int8x16_t)0, (int8x16_t)v113[v42], 8uLL);
        v116 = vorrq_s8(v114, vorrq_s8(vextq_s8((int8x16_t)0, v115, 0xFuLL), v115));
        v117 = (int16x8_t)vzip1q_s8(vextq_s8(v116, (int8x16_t)0, 1uLL), (int8x16_t)0);
        v118 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v114, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v116, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v117, v117)), v48), v49);
        v119 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v112, 0xEuLL);
        v119.i16[0] = (*v113
                     + 2 * *((unsigned __int8 *)v67 + ~(unint64_t)(v66 * v14))
                     + *(_QWORD *)((char *)v67 - v69 * v14)
                     + 2) >> 2;
        v120 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v119, vaddq_s16(v112, (int16x8_t)vshlq_u16((uint16x8_t)v48, v52))), v52);
        v121 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v118, 0xEuLL);
        v121.i16[0] = v119.i16[0];
        v122 = (2
              * ((*v113
                + 2 * *((unsigned __int8 *)v67 + ~(unint64_t)(v66 * v14))
                + *(_QWORD *)((char *)v67 - v69 * v14)
                + 2) >> 2)
              + v112.u16[0]
              + v118.u16[0]
              + 2) >> 2;
        a9 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v112, v112), (int16x8_t)vextq_s8((int8x16_t)v112, (int8x16_t)0, 2uLL)), v48), v119), v49), 0xEuLL);
        a9.i16[0] = v122;
        v123 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v118, v118), (int16x8_t)vextq_s8((int8x16_t)v118, (int8x16_t)0, 2uLL)), v48), v121), v49), (int8x16_t)xmmword_2160F1960), (int8x16_t)xmmword_2160F1970), (int8x16_t)xmmword_2160F1980);
        v124 = (int16x8_t)vextq_s8((int8x16_t)v123, (int8x16_t)v120, 0xEuLL);
        v125 = (int8x16_t)vdupq_laneq_s16(v123, 6);
        if (v22)
        {
          v73 = (int16x8_t *)(a2 + 2 * *v44);
          *v67 = vqmovun_s16(vaddq_s16(*v73, v120));
          *(int8x8_t *)((char *)v67 + v14) = vqmovun_s16(vaddq_s16(v73[2], a9));
          *(int8x8_t *)((char *)v67 + v43) = vqmovun_s16(vaddq_s16(v73[4], v124));
          *(int8x8_t *)((char *)v67 + v41) = vqmovun_s16(vaddq_s16(v73[6], (int16x8_t)vextq_s8(v125, (int8x16_t)a9, 0xEuLL)));
          v126 = vqtbl1q_s8((int8x16_t)v123, (int8x16_t)xmmword_2160F1990);
          *(int8x8_t *)((char *)v67 + v45) = vqmovun_s16(vaddq_s16(v73[8], (int16x8_t)vextq_s8(v126, (int8x16_t)v120, 0xCuLL)));
          v127 = vqtbl1q_s8((int8x16_t)v123, (int8x16_t)xmmword_2160F19A0);
          *(int8x8_t *)((char *)v67 + v50) = vqmovun_s16(vaddq_s16(v73[10], (int16x8_t)vextq_s8(v127, (int8x16_t)a9, 0xCuLL)));
          *(int8x8_t *)((char *)v67 + v47) = vqmovun_s16(vaddq_s16(v73[12], (int16x8_t)vextq_s8(vqtbl1q_s8(v126, (int8x16_t)xmmword_2160F19B0), (int8x16_t)v120, 0xAuLL)));
          a8 = (int16x8_t)vextq_s8(vqtbl1q_s8(vqtbl1q_s8(v127, (int8x16_t)xmmword_2160F19B0), (int8x16_t)xmmword_2160F19C0), (int8x16_t)a9, 0xAuLL);
          goto LABEL_134;
        }
        *v67 = vqmovun_s16(v120);
        *(int8x8_t *)((char *)v67 + v14) = vqmovun_s16(a9);
        *(int8x8_t *)((char *)v67 + v43) = vqmovun_s16(v124);
        *(int8x8_t *)((char *)v67 + v41) = vqmovun_s16((int16x8_t)vextq_s8(v125, (int8x16_t)a9, 0xEuLL));
        v183 = vqtbl1q_s8((int8x16_t)v123, (int8x16_t)xmmword_2160F1990);
        *(int8x8_t *)((char *)v67 + v45) = vqmovun_s16((int16x8_t)vextq_s8(v183, (int8x16_t)v120, 0xCuLL));
        v184 = vqtbl1q_s8((int8x16_t)v123, (int8x16_t)xmmword_2160F19A0);
        *(int8x8_t *)((char *)v67 + v50) = vqmovun_s16((int16x8_t)vextq_s8(v184, (int8x16_t)a9, 0xCuLL));
        *(int8x8_t *)((char *)v67 + v47) = vqmovun_s16((int16x8_t)vextq_s8(vqtbl1q_s8(v183, (int8x16_t)xmmword_2160F19B0), (int8x16_t)v120, 0xAuLL));
        a8 = (int16x8_t)vextq_s8(vqtbl1q_s8(vqtbl1q_s8(v184, (int8x16_t)xmmword_2160F19B0), (int8x16_t)xmmword_2160F19C0), (int8x16_t)a9, 0xAuLL);
        goto LABEL_136;
      case 6u:
        a8.i64[0] = *(_QWORD *)((char *)v67 - v69 * v14);
        a8.i16[4] = *((unsigned __int8 *)v67 + v70 - v14 + 7);
        v128 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xFuLL), (int8x16_t)*((unsigned __int8 *)v67 - v14 - v66));
        v129 = (int16x8_t)vzip1q_s8(vextq_s8(v128, (int8x16_t)0, 1uLL), (int8x16_t)0);
        v130 = (unsigned __int8 *)v67 - v68;
        v131 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v128, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v128, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v129, v129)), v48), v49);
        v132 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v130[v14], 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)v130[v43], 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v130[v41], 0xCuLL)), vzip1q_s8((int8x16_t)*((unsigned __int8 *)v67 + ~(unint64_t)(v66 * v14)), (int8x16_t)*v130)), vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v130[v45], 0xBuLL), vextq_s8((int8x16_t)0, (int8x16_t)v130[v50], 0xAuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v130[v47], 9uLL)));
        v133 = vextq_s8((int8x16_t)0, (int8x16_t)v130[v42], 8uLL);
        v134 = vorrq_s8(v132, vorrq_s8(vextq_s8((int8x16_t)0, v133, 0xFuLL), v133));
        v135 = (int16x8_t)vzip1q_s8(vextq_s8(v134, (int8x16_t)0, 1uLL), (int8x16_t)0);
        v136 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v132, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v134, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v135, v135)), v48), v49);
        v137 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v136, 0xEuLL);
        v137.i16[0] = (*v130
                     + 2 * *((unsigned __int8 *)v67 + ~(unint64_t)(v66 * v14))
                     + *(_QWORD *)((char *)v67 - v69 * v14)
                     + 2) >> 2;
        v138 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vshlq_u16((uint16x8_t)v48, v52), v136), v137), v52);
        v139 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v136, v136), (int16x8_t)vextq_s8((int8x16_t)v136, (int8x16_t)0, 2uLL)), v48), v137), v49);
        v140 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v131, 0xEuLL);
        v140.i16[0] = (*v130
                     + 2 * *((unsigned __int8 *)v67 + ~(unint64_t)(v66 * v14))
                     + *(_QWORD *)((char *)v67 - v69 * v14)
                     + 2) >> 2;
        v141 = vextq_s8((int8x16_t)0, (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v131, v131), (int16x8_t)vextq_s8((int8x16_t)v131, (int8x16_t)0, 2uLL)), v48), v140), v49), 0xEuLL);
        v141.i16[0] = (2
                     * ((*v130
                       + 2 * *((unsigned __int8 *)v67 + ~(unint64_t)(v66 * v14))
                       + *(_QWORD *)((char *)v67 - v69 * v14)
                       + 2) >> 2)
                     + v131.u16[0]
                     + v136.u16[0]
                     + 2) >> 2;
        v142 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v138, (int8x16_t)xmmword_2160F1960), (int8x16_t)xmmword_2160F1970), (int8x16_t)xmmword_2160F1980);
        v143 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v139, (int8x16_t)xmmword_2160F1960), (int8x16_t)xmmword_2160F1970), (int8x16_t)xmmword_2160F1980);
        v144 = (int16x8_t)vextq_s8((int8x16_t)v142, v141, 0xEuLL);
        v145 = (int8x16_t)vzip2q_s16(v143, v142);
        a9 = (int16x8_t)vdupq_lane_s64(v142.i64[0], 0);
        if (!v22)
        {
          *v67 = vqmovun_s16(v144);
          *(int8x8_t *)((char *)v67 + v14) = vqmovun_s16((int16x8_t)vextq_s8(v145, v141, 0xAuLL));
          *(int8x8_t *)((char *)v67 + v43) = vqmovun_s16((int16x8_t)vextq_s8(v145, v141, 6uLL));
          *(int8x8_t *)((char *)v67 + v41) = vqmovun_s16((int16x8_t)vextq_s8(v145, v141, 2uLL));
          *(int8x8_t *)((char *)v67 + v45) = vqmovun_s16(vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v142, 0xEuLL), v143));
          *(int8x8_t *)((char *)v67 + v50) = vqmovun_s16(vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v142, 0xCuLL), (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v143, 0xEuLL)));
          *(int8x8_t *)((char *)v67 + v47) = vqmovun_s16(vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v142, 0xAuLL), (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v143, 0xCuLL)));
          a8 = vzip2q_s16(a9, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v143, 0xAuLL));
          goto LABEL_136;
        }
        v73 = (int16x8_t *)(a2 + 2 * *v44);
        *v67 = vqmovun_s16(vaddq_s16(*v73, v144));
        *(int8x8_t *)((char *)v67 + v14) = vqmovun_s16(vaddq_s16(v73[2], (int16x8_t)vextq_s8(v145, v141, 0xAuLL)));
        *(int8x8_t *)((char *)v67 + v43) = vqmovun_s16(vaddq_s16(v73[4], (int16x8_t)vextq_s8(v145, v141, 6uLL)));
        *(int8x8_t *)((char *)v67 + v41) = vqmovun_s16(vaddq_s16(v73[6], (int16x8_t)vextq_s8(v145, v141, 2uLL)));
        *(int8x8_t *)((char *)v67 + v45) = vqmovun_s16(vaddq_s16(v73[8], vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v142, 0xEuLL), v143)));
        *(int8x8_t *)((char *)v67 + v50) = vqmovun_s16(vaddq_s16(v73[10], vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v142, 0xCuLL), (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v143, 0xEuLL))));
        *(int8x8_t *)((char *)v67 + v47) = vqmovun_s16(vaddq_s16(v73[12], vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v142, 0xAuLL), (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v143, 0xCuLL))));
        a8 = vzip2q_s16(a9, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v143, 0xAuLL));
LABEL_134:
        a9 = v73[14];
        goto LABEL_135;
      case 7u:
        a9.i64[0] = *(_QWORD *)((char *)v67 - v69 * v14);
        v146 = (char *)v67 - v14;
        if ((_DWORD)v70)
        {
          a8.i64[0] = *((_QWORD *)v146 + 1);
        }
        else
        {
          v185 = vextq_s8((int8x16_t)a9, (int8x16_t)0, 7uLL);
          v186 = (int16x8_t)vzip1q_s8(v185, v185);
          v187 = (int32x4_t)vzip1q_s16(v186, v186);
          a8 = (int16x8_t)vzip1q_s32(v187, v187);
        }
        v157 = (int16x8_t *)(a2 + 2 * *v44);
        v188 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a9, 0xFuLL), (int8x16_t)v146[-v66]);
        v189 = vorrq_s8(v188, vextq_s8((int8x16_t)0, (int8x16_t)a8, 7uLL));
        v190 = (int16x8_t)vzip1q_s8(v188, (int8x16_t)0);
        v191 = (int16x8_t)vzip1q_s8(vextq_s8(v188, (int8x16_t)0, 1uLL), (int8x16_t)0);
        v192 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v190, (int16x8_t)vzip1q_s8(vextq_s8(v189, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(vaddq_s16(v191, v191), v48)), v49);
        v193 = (int16x8_t)vzip1q_s8((int8x16_t)a8, (int8x16_t)0);
        v194 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v193, v193), (int16x8_t)vzip2q_s8(v189, (int8x16_t)0)), vaddq_s16((int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, vdupq_lane_s8(*(int8x8_t *)a8.i8, 7), 9uLL), vextq_s8((int8x16_t)a8, (int8x16_t)0, 1uLL)), (int8x16_t)0), v48)), v49);
        v195 = vqmovun_s16(v192);
        v196 = vqmovun_s16(v194);
        v197 = (uint8x8_t)vext_s8(v195, v196, 1uLL);
        v198 = (uint8x8_t)vext_s8(v195, v196, 2uLL);
        v199 = (int16x8_t)vaddl_u8(v197, (uint8x8_t)v195);
        v200 = vaddw_u8((uint16x8_t)v48, v198);
        v201 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16((int16x8_t)vaddw_u8(v200, v197), v199), v49);
        v202 = (int16x8_t)vshlq_u16((uint16x8_t)v48, v52);
        v203 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v199, v202), v52);
        if (v22)
        {
          *v67 = vqmovun_s16(vaddq_s16(*v157, v203));
          v201 = vaddq_s16(v157[2], v201);
        }
        else
        {
          *v67 = vqmovun_s16(v203);
        }
        v209 = (int16x8_t)vmovl_u8(v197);
        v210 = (int16x8_t)vmovl_u8(v198);
        *(int8x8_t *)((char *)v67 + v14) = vqmovun_s16(v201);
        v211 = (uint8x8_t)vext_s8(v195, v196, 3uLL);
        v212 = vaddq_s16(v209, v210);
        v213 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16((int16x8_t)vaddw_u8(v200, v211), v212), v49);
        v214 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v212, v202), v52);
        if (v22)
        {
          *(int8x8_t *)((char *)v67 + v43) = vqmovun_s16(vaddq_s16(v157[4], v214));
          v213 = vaddq_s16(v157[6], v213);
        }
        else
        {
          *(int8x8_t *)((char *)v67 + v43) = vqmovun_s16(v214);
        }
        v215 = (int16x8_t)vmovl_u8(v211);
        *(int8x8_t *)((char *)v67 + v41) = vqmovun_s16(v213);
        v216 = (uint8x8_t)vext_s8(v195, v196, 4uLL);
        v217 = vaddq_s16(v210, v215);
        v218 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vaddw_u8((uint16x8_t)v215, v216), v217), v48), v49);
        v219 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v217, v202), v52);
        if (v22)
        {
          *(int8x8_t *)((char *)v67 + v45) = vqmovun_s16(vaddq_s16(v157[8], v219));
          v218 = vaddq_s16(v157[10], v218);
        }
        else
        {
          *(int8x8_t *)((char *)v67 + v45) = vqmovun_s16(v219);
        }
        v220 = (int16x8_t)vmovl_u8(v216);
        *(int8x8_t *)((char *)v67 + v50) = vqmovun_s16(v218);
        v221 = (uint8x8_t)vext_s8(v195, v196, 5uLL);
        v222 = vaddq_s16(v215, v220);
        a8 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vaddw_u8((uint16x8_t)v220, v221), v222), v48), v49);
        a9 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v222, v202), v52);
        if (!v22)
          goto LABEL_126;
        v163 = vaddq_s16(v157[12], a9);
        goto LABEL_125;
      case 8u:
        v147 = (unsigned __int8 *)v67 - v68;
        v148 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v147[v14], 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)v147[v43], 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v147[v41], 0xCuLL)), vzip1q_s8((int8x16_t)*((unsigned __int8 *)v67 + ~(unint64_t)(v66 * v14)), (int8x16_t)*v147)), vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v147[v45], 0xBuLL), vextq_s8((int8x16_t)0, (int8x16_t)v147[v50], 0xAuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v147[v47], 9uLL)));
        v149 = vextq_s8((int8x16_t)0, (int8x16_t)v147[v42], 8uLL);
        v150 = vorrq_s8(v148, vorrq_s8(vextq_s8((int8x16_t)0, v149, 0xFuLL), v149));
        v151 = (int16x8_t)vzip1q_s8(vextq_s8(v150, (int8x16_t)0, 1uLL), (int8x16_t)0);
        v152 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v148, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v150, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v151, v151)), v48), v49);
        v153 = (int16x8_t)vextq_s8((int8x16_t)v152, (int8x16_t)0, 2uLL);
        v154 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v152, (int16x8_t)vextq_s8((int8x16_t)v152, (int8x16_t)0, 4uLL)), vaddq_s16(v153, v153)), v48), v49);
        v154.i16[6] = (3 * v152.u16[7] + v152.u16[6] + 2) >> 2;
        v155 = (int16x8_t)vextq_s8(vextq_s8((int8x16_t)0, (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vshlq_u16((uint16x8_t)v48, v52), v152), v153), v52), 0xEuLL), (int8x16_t)0, 2uLL);
        v156 = (int16x8_t)vextq_s8(vextq_s8((int8x16_t)0, v154, 0xEuLL), (int8x16_t)0, 2uLL);
        a8 = (int16x8_t)vdupq_n_s32(v152.u16[7] | (v152.u16[7] << 16));
        if (v22)
        {
          v157 = (int16x8_t *)(a2 + 2 * *v44);
          *v67 = vqmovun_s16(vaddq_s16(*v157, vzip1q_s16(v155, v156)));
          v158 = (int16x8_t)vextq_s8((int8x16_t)v156, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v67 + v14) = vqmovun_s16(vaddq_s16(v157[2], vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v155, (int8x16_t)0, 2uLL), v158)));
          v159 = (int16x8_t)vextq_s8((int8x16_t)v158, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v67 + v43) = vqmovun_s16(vaddq_s16(v157[4], vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v155, (int8x16_t)0, 4uLL), v159)));
          v160 = (int16x8_t)vextq_s8((int8x16_t)v159, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v67 + v41) = vqmovun_s16(vaddq_s16(v157[6], vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v155, (int8x16_t)0, 6uLL), v160)));
          v161 = (int16x8_t)vextq_s8((int8x16_t)v160, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v67 + v45) = vqmovun_s16(vaddq_s16(v157[8], (int16x8_t)vorrq_s8((int8x16_t)vzip1q_s16((int16x8_t)vdupq_laneq_s64((int64x2_t)v155, 1), v161), vextq_s8((int8x16_t)0, (int8x16_t)a8, 4uLL))));
          v162 = (int16x8_t)vextq_s8((int8x16_t)v161, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v67 + v50) = vqmovun_s16(vaddq_s16(v157[10], (int16x8_t)vorrq_s8((int8x16_t)vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v155, (int8x16_t)0, 0xAuLL), v162), vextq_s8((int8x16_t)0, (int8x16_t)a8, 8uLL))));
          v235.val[1] = vextq_s8((int8x16_t)v155, (int8x16_t)0, 0xCuLL);
          v235.val[0] = vextq_s8((int8x16_t)v162, (int8x16_t)0, 2uLL);
          v163 = vaddq_s16(v157[12], (int16x8_t)vorrq_s8(vqtbl2q_s8(v235, (int8x16_t)xmmword_2160F1950), vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xCuLL)));
LABEL_125:
          *(int8x8_t *)((char *)v67 + v47) = vqmovun_s16(v163);
          a9 = v157[14];
LABEL_135:
          a8 = vaddq_s16(a9, a8);
        }
        else
        {
          *v67 = vqmovun_s16(vzip1q_s16(v155, v156));
          v204 = (int16x8_t)vextq_s8((int8x16_t)v156, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v67 + v14) = vqmovun_s16(vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v155, (int8x16_t)0, 2uLL), v204));
          v205 = (int16x8_t)vextq_s8((int8x16_t)v204, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v67 + v43) = vqmovun_s16(vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v155, (int8x16_t)0, 4uLL), v205));
          v206 = (int16x8_t)vextq_s8((int8x16_t)v205, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v67 + v41) = vqmovun_s16(vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v155, (int8x16_t)0, 6uLL), v206));
          v207 = (int16x8_t)vextq_s8((int8x16_t)v206, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v67 + v45) = vqmovun_s16((int16x8_t)vorrq_s8((int8x16_t)vzip1q_s16((int16x8_t)vdupq_laneq_s64((int64x2_t)v155, 1), v207), vextq_s8((int8x16_t)0, (int8x16_t)a8, 4uLL)));
          v208 = (int16x8_t)vextq_s8((int8x16_t)v207, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v67 + v50) = vqmovun_s16((int16x8_t)vorrq_s8((int8x16_t)vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v155, (int8x16_t)0, 0xAuLL), v208), vextq_s8((int8x16_t)0, (int8x16_t)a8, 8uLL)));
          v236.val[1] = vextq_s8((int8x16_t)v155, (int8x16_t)0, 0xCuLL);
          v236.val[0] = vextq_s8((int8x16_t)v208, (int8x16_t)0, 2uLL);
          a9 = (int16x8_t)vorrq_s8(vqtbl2q_s8(v236, (int8x16_t)xmmword_2160F1950), vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xCuLL));
LABEL_126:
          *(int8x8_t *)((char *)v67 + v47) = vqmovun_s16(a9);
        }
LABEL_136:
        *(int8x8_t *)a8.i8 = vqmovun_s16(a8);
LABEL_137:
        *(_QWORD *)((char *)v67 + v42) = a8.i64[0];
LABEL_138:
        ++v44;
        ++v46;
        v229 = v40 >= 0xC;
        v40 += 4;
        if (!v229)
          continue;
        return result;
      default:
        goto LABEL_138;
    }
  }
}

int *sub_21608FDCC(int *result, uint64_t a2, int32x4_t a3)
{
  int16x8_t v3;
  int16x8_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  _BYTE *v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned __int8 *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  _BOOL4 v22;
  unsigned __int8 *v23;
  _BOOL4 v24;
  _BOOL4 v25;
  _BOOL4 v26;
  _BYTE *v27;
  int v28;
  int v29;
  int v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  int16x4_t *v42;
  unint64_t v43;
  unint64_t v44;
  int v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  int v53;
  unsigned int v54;
  int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  int v59;
  unsigned int v60;
  char v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  unsigned int v66;
  char *v67;
  unsigned int v68;
  char v69;
  char v70;
  char v71;
  uint64_t v72;
  unsigned __int8 *v73;
  int v74;
  unsigned __int8 *v75;
  unsigned __int8 v76;
  unsigned __int8 v77;
  unsigned __int8 v78;
  unsigned __int8 v79;
  unsigned int v80;
  unsigned __int8 v81;
  unsigned __int8 v82;
  unsigned __int8 v83;
  unsigned __int8 v84;
  unsigned __int8 v85;
  unsigned __int8 v86;
  unsigned __int8 v87;
  int v88;
  unsigned __int8 v89;
  uint64_t v90;
  _BYTE *v91;
  uint64_t v92;
  int32x4_t v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  unsigned int v104;
  int v105;
  int v106;
  unsigned int v107;
  int v108;
  int v109;
  int8x8_t *v110;
  uint64_t v111;
  int32x4_t v112;
  int32x4_t v113;
  int16x8_t v114;
  int16x8_t v115;
  int16x8_t *v116;
  uint64_t v117;
  int16x8_t *v118;
  uint64_t v119;
  int16x8_t *v120;
  _DWORD *v121;
  unint64_t v122;
  uint64_t v123;
  _BYTE *v124;
  uint64_t v125;
  unsigned __int8 *v126;
  uint64_t v127;
  uint64_t v128;
  int *v129;
  uint64_t v130;
  char *v131;
  unsigned int v132;
  uint64_t v133;
  unsigned __int8 v134;
  char v135;
  char v136;
  char v137;
  unsigned __int8 v138;
  _DWORD *v139;
  unint64_t v140;
  int16x4_t *v141;
  int v142;
  int v143;
  _OWORD v144[4];
  uint64_t v145;
  unsigned __int8 *v146;
  unsigned __int8 *v147;
  _BYTE *v148;
  _WORD v149[8];
  int16x8_t v150;
  __int128 v151;
  int32x4_t v152;
  int8x8_t v153;
  unint64_t v154;
  int32x4_t v155;
  int8x16_t v156;
  __int128 v157;
  unsigned __int8 v158;
  unsigned __int8 v159;
  unsigned __int8 v160;
  unsigned __int8 v161;
  unsigned __int8 v162;
  unsigned __int8 v163;
  unsigned __int8 v164;
  unsigned __int8 v165;
  unsigned __int8 v166;
  unsigned __int8 v167;
  unsigned __int8 v168;
  unsigned __int8 v169;
  unsigned __int8 v170;
  unsigned __int8 v171;
  unsigned __int8 v172;
  unsigned __int8 v173;
  _BYTE v174[9];
  _BYTE v175[7];
  _BYTE v176[3];
  _QWORD v177[3];

  *(_QWORD *)((char *)&v177[1] + 5) = *MEMORY[0x24BDAC8D0];
  v5 = *((_QWORD *)result + 27);
  v7 = *result;
  v6 = result[1];
  if (*((_BYTE *)result + 29) && *(_BYTE *)(v5 + 1363))
  {
    v130 = v5 + 504;
    v8 = *(unsigned int *)(v5 + 168);
    v132 = 2 * v8;
    v9 = *(unsigned __int8 *)(v5 + 32);
    v10 = *(_QWORD *)(v5 + 64) + (16 * v7);
    if (*((_BYTE *)result + 30))
    {
      if (v9)
        v11 = 5;
      else
        v11 = 4;
      v12 = ((v6 << v11) * v8);
      v10 += v8;
      goto LABEL_16;
    }
    v13 = v6 * v8;
    if (v9)
    {
      v12 = (32 * v13);
      goto LABEL_16;
    }
LABEL_15:
    v12 = (16 * v13);
    goto LABEL_16;
  }
  v130 = v5 + 440;
  v132 = *(_DWORD *)(v5 + 168);
  if (*((_BYTE *)result + 31) != 1)
  {
    if (*((_BYTE *)result + 31))
    {
      v128 = *(_QWORD *)(v5 + 64)
           + 32 * v132 * (result[4] / (2 * result[5]))
           + ((8 * (result[4] % (2 * result[5]))) & 0xFFFFFFF0)
           + ((result[4] << 31 >> 31) & v132);
      v130 = v5 + 504;
      v132 *= 2;
      goto LABEL_17;
    }
    v10 = *(_QWORD *)(v5 + 64) + (16 * v7);
    v13 = v6 * v132;
    goto LABEL_15;
  }
  v14 = result[4];
  v10 = *(_QWORD *)(v5 + 64) + 32 * v132 * (v14 / (2 * result[5])) + ((8 * (v14 % (2 * result[5]))) & 0xFFFFFFF0);
  v12 = ((int)(v14 << 31) >> 31) & (16 * v132);
LABEL_16:
  v128 = v10 + v12;
LABEL_17:
  v15 = (_BYTE *)*((_QWORD *)result + 21);
  v16 = *((_QWORD *)result + 22) + 32;
  v17 = (unsigned __int8 *)*((_QWORD *)result + 16);
  v18 = (unsigned __int8 *)*((_QWORD *)result + 17);
  v20 = *((_QWORD *)result + 18);
  v19 = *((_QWORD *)result + 19);
  v147 = 0;
  v148 = 0;
  v145 = v16;
  v146 = 0;
  v127 = v16;
  if (v17)
  {
    if (v17[64])
      v21 = v17 + 48;
    else
      v21 = v17 + 32;
    v146 = v21;
    v22 = 1;
    if (v18)
      goto LABEL_22;
  }
  else
  {
    v22 = 0;
    if (v18)
    {
LABEL_22:
      if (v18[64])
        v23 = v18 + 48;
      else
        v23 = v18 + 32;
      v147 = v23;
      v24 = 1;
      goto LABEL_28;
    }
  }
  v24 = 0;
  v147 = 0;
LABEL_28:
  v25 = v20 != 0;
  v26 = v19 != 0;
  if (v15)
  {
    if (v15[64])
      v27 = v15 + 48;
    else
      v27 = v15 + 32;
    v148 = v27;
  }
  else
  {
    v148 = 0;
  }
  v125 = *((_QWORD *)result + 6);
  if (!*(_BYTE *)(v125 + 4))
    goto LABEL_55;
  if (!v17)
  {
    v22 = 0;
    if (v18)
      goto LABEL_43;
    goto LABEL_38;
  }
  if (v17[48] != 34)
  {
    v22 = 1;
    if (v18)
      goto LABEL_43;
LABEL_38:
    v24 = 0;
    if (v20)
      goto LABEL_39;
LABEL_45:
    v25 = 0;
    if (!v19)
      goto LABEL_41;
LABEL_46:
    v26 = *(_BYTE *)(v19 + 48) != 34 || *(unsigned __int8 *)(v19 + 32) != 34;
    goto LABEL_55;
  }
  v22 = v17[32] != 34;
  if (!v18)
    goto LABEL_38;
LABEL_43:
  if (v18[48] == 34)
  {
    v24 = v18[32] != 34;
    if (!v20)
      goto LABEL_45;
  }
  else
  {
    v24 = 1;
    if (!v20)
      goto LABEL_45;
  }
LABEL_39:
  if (*(_BYTE *)(v20 + 48) != 34)
  {
    v25 = 1;
    if (!v19)
      goto LABEL_41;
    goto LABEL_46;
  }
  v25 = *(unsigned __int8 *)(v20 + 32) != 34;
  if (v19)
    goto LABEL_46;
LABEL_41:
  v26 = 0;
LABEL_55:
  v28 = v26 | (2 * v25) | (4 * v24);
  v29 = v28 | (8 * v22);
  v131 = byte_254E10D40;
  v124 = v15;
  if (v17 && (*((_BYTE *)result + 185) & 1) != 0)
  {
    v30 = *((unsigned __int8 *)result + 31);
    if (v30 != 2 || v17[144])
    {
      v131 = byte_254E10D40;
      if (v30 == 1 && v17[144] == 1)
      {
        v31 = (char *)((result[4] & 1) != 0 ? &unk_254E10DD8 : &unk_254E10DA8);
        v131 = v31;
        if (*(_BYTE *)(v125 + 4))
        {
          if (v22 && v15[48] == 34 && v15[32] == 34)
            v29 = v28;
        }
      }
    }
    else
    {
      v131 = (char *)&unk_254E10D78;
    }
  }
  v32 = 0;
  v33 = 0;
  v34 = v132;
  v133 = 2;
  a3.i32[0] = 2;
  v129 = result;
  v126 = v17;
  do
  {
    v123 = v32;
    v35 = (_QWORD *)(a2 + word_2160F2318[v32]);
    *(_QWORD *)&v36 = *v35;
    *(_QWORD *)&v37 = v35[1];
    v38 = v35[5];
    *(_QWORD *)&v39 = v35[8];
    *(_QWORD *)&v40 = v35[9];
    v41 = v35[13];
    *((_QWORD *)&v36 + 1) = v35[4];
    *((_QWORD *)&v39 + 1) = v35[12];
    v144[0] = v36;
    v144[1] = v39;
    *((_QWORD *)&v37 + 1) = v38;
    *((_QWORD *)&v40 + 1) = v41;
    v144[2] = v37;
    v144[3] = v40;
    v42 = (int16x4_t *)v144;
    v122 = v33;
    v43 = v33;
    do
    {
      v44 = v131[v43];
      if (!v17)
      {
        v46 = 0;
        goto LABEL_78;
      }
      v45 = *((unsigned __int8 *)result + 31);
      if (v45 == 1 && v17[144] == 1 && v43 >= 8)
      {
        v46 = !(v44 & 1) * (unint64_t)*(unsigned __int8 *)(*((_QWORD *)result + 6) + 4);
LABEL_78:
        v47 = 0;
        v48 = !(v44 & 1);
        goto LABEL_79;
      }
      v46 = 0;
      if (v45 != 2 || v17[144] || v43 < 8)
        goto LABEL_78;
      v46 = 0;
      v48 = !(v44 & 1) | (2 * !(v44 & 1));
      v47 = !(v44 & 1) * (unint64_t)*(unsigned __int8 *)(*((_QWORD *)result + 6) + 4);
LABEL_79:
      v49 = v131[v43 + 16];
      v50 = *(&v145 + (~(2 * (_BYTE)v49) & 2));
      v51 = *(&v145 + v48);
      if (v50)
        v52 = v51 == 0;
      else
        v52 = 1;
      if (v52)
      {
        v53 = 0;
LABEL_86:
        v56 = 2;
        goto LABEL_87;
      }
      v54 = *(unsigned __int8 *)(v51 + ((v44 >> 1) & 0xF));
      v55 = *(unsigned __int8 *)(v50 + ((v49 >> 1) & 0xF));
      v53 = (v54 >> 5) & 1;
      if ((*(unsigned __int8 *)(*((_QWORD *)result + 6) + 4) & ((v55 | v54) >> 5) & 1) != 0)
        goto LABEL_86;
      v56 = (((v54 & 0xF) - (v55 & 0xF)) & ((int)((v54 & 0xF) - (v55 & 0xF)) >> 31)) + (v55 & 0xF);
LABEL_87:
      v141 = v42;
      if (v47)
      {
        v57 = (v29 & 7 | (8 * v53)) ^ 8;
        v58 = bswap32(dword_2160F1B08[v57 | (16 * v43)]);
        if (v17[48] == 34 && v17[32] == 34)
          v59 = v57 & 0xE;
        else
          v59 = v57 | 1;
        v142 = v59;
      }
      else
      {
        v58 = bswap32(dword_2160F1B08[(v29 + 16 * v43)]);
        if (v46)
        {
          if (v124[48] == 34 && v124[32] == 34)
            v29 &= 0xEu;
          else
            v29 |= 1u;
        }
        v142 = v29;
      }
      v60 = 0;
      v61 = 0;
      v62 = 0;
      v63 = 0;
      v64 = *(unsigned __int8 *)(v125 + v43 + 310);
      if (v56 <= v64)
        ++v64;
      v143 = v64 & (*(unsigned __int8 *)(v125 + v43 + 290) - 1) | v56 & -*(unsigned __int8 *)(v125 + v43 + 290);
      *(_BYTE *)(v127 + v43) = v143;
      v65 = v128 + *(unsigned int *)(v130 + 4 * v43);
      v66 = v65 & 0xF;
      v67 = (char *)(v65 - v58 + 2 * v132);
      v68 = *(unsigned __int8 *)(v65 - v58);
      v69 = *(_BYTE *)(v65 - v58 + v34);
      v70 = *v67;
      v71 = v67[v34];
      if (v66 <= 3)
      {
        v60 = *(unsigned __int8 *)(v65 - v58);
        v61 = *(_BYTE *)(v65 - v58 + v34);
        v62 = *v67;
        v63 = v67[v34];
      }
      if (((v65 >> 2) & 3) - 1 >= 3)
      {
        v68 = v60;
        v69 = v61;
        v70 = v62;
        v71 = v63;
      }
      v136 = v71;
      v72 = v65 - (v132 & -BYTE1(v58));
      v73 = (unsigned __int8 *)((v72 - v58) & 0xFFFFFFFFFFFFFFF0);
      v74 = v73[15];
      v75 = (unsigned __int8 *)((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
      v76 = *v75;
      v77 = v75[1];
      v78 = v75[2];
      v79 = v75[3];
      v139 = (_DWORD *)(v128 + *(unsigned int *)(v130 + 4 * v43));
      v140 = v43;
      v138 = v58;
      v137 = v69;
      v135 = v70;
      if (BYTE2(v58) == 1)
      {
        v83 = v75[4];
        v82 = v75[5];
        v81 = v75[6];
        v80 = v68;
        v89 = v75[7];
        v85 = v75[2];
        switch(v66)
        {
          case 0u:
            goto LABEL_146;
          case 1u:
            v89 = v73[8];
            v81 = v73[7];
            v82 = v73[6];
            v79 = v73[4];
            v83 = v73[5];
            v77 = v73[2];
            v85 = v73[3];
            v76 = v73[1];
            v74 = *v73;
            goto LABEL_146;
          case 2u:
            v89 = v73[9];
            v81 = v73[8];
            v82 = v73[7];
            v83 = v73[6];
            v85 = v73[4];
            v79 = v73[5];
            v76 = v73[2];
            v77 = v73[3];
            v74 = v73[1];
            goto LABEL_146;
          case 3u:
            v89 = v73[10];
            v81 = v73[9];
            v82 = v73[8];
            v83 = v73[7];
            v79 = v73[6];
            v77 = v73[4];
            v85 = v73[5];
            v74 = v73[2];
            v76 = v73[3];
            goto LABEL_146;
          case 4u:
            v89 = v73[11];
            v81 = v73[10];
            v82 = v73[9];
            v83 = v73[8];
            v79 = v73[7];
            v85 = v73[6];
            v76 = v73[4];
            v77 = v73[5];
            v74 = v73[3];
            goto LABEL_146;
          case 5u:
            v89 = v73[12];
            v81 = v73[11];
            v82 = v73[10];
            v83 = v73[9];
            v79 = v73[8];
            v85 = v73[7];
            v77 = v73[6];
            v74 = v73[4];
            v76 = v73[5];
            goto LABEL_146;
          case 6u:
            v74 = v73[5];
            v89 = v73[13];
            v81 = v73[12];
            v82 = v73[11];
            v83 = v73[10];
            v79 = v73[9];
            v85 = v73[8];
            v77 = v73[7];
            v76 = v73[6];
            goto LABEL_146;
          case 7u:
            v81 = v73[13];
            v89 = v73[14];
            v82 = v73[12];
            v83 = v73[11];
            v79 = v73[10];
            v85 = v73[9];
            v77 = v73[8];
            v76 = v73[7];
            v74 = v73[6];
            goto LABEL_146;
          case 8u:
            v89 = v73[15];
            v82 = v73[13];
            v81 = v73[14];
            v83 = v73[12];
            v79 = v73[11];
            v85 = v73[10];
            v77 = v73[9];
            v76 = v73[8];
            v74 = v73[7];
            goto LABEL_146;
          case 9u:
            v89 = *v75;
            v81 = v73[15];
            v83 = v73[13];
            v82 = v73[14];
            v79 = v73[12];
            v85 = v73[11];
            v77 = v73[10];
            v76 = v73[9];
            v74 = v73[8];
            goto LABEL_146;
          case 0xAu:
            v89 = v75[1];
            v81 = *v75;
            v82 = v73[15];
            v79 = v73[13];
            v83 = v73[14];
            v85 = v73[12];
            v77 = v73[11];
            v76 = v73[10];
            v74 = v73[9];
            goto LABEL_146;
          case 0xBu:
            v89 = v75[2];
            v81 = v75[1];
            v82 = *v75;
            v83 = v73[15];
            v85 = v73[13];
            v79 = v73[14];
            v77 = v73[12];
            v76 = v73[11];
            v74 = v73[10];
            goto LABEL_146;
          case 0xCu:
            v89 = v75[3];
            v81 = v75[2];
            v82 = v75[1];
            v83 = *v75;
            v79 = v73[15];
            v77 = v73[13];
            v85 = v73[14];
            v76 = v73[12];
            v74 = v73[11];
            goto LABEL_146;
          case 0xDu:
            v89 = v75[4];
            v81 = v75[3];
            v82 = v75[2];
            v83 = v75[1];
            v79 = *v75;
            v85 = v73[15];
            v76 = v73[13];
            v77 = v73[14];
            v74 = v73[12];
            goto LABEL_146;
          case 0xEu:
            v89 = v75[5];
            v81 = v75[4];
            v82 = v75[3];
            v83 = v75[2];
            v79 = v75[1];
            v85 = *v75;
            v77 = v73[15];
            v74 = v73[13];
            v76 = v73[14];
LABEL_146:
            v84 = v83;
            v83 = v82;
            v82 = v81;
            v81 = v89;
            LOBYTE(v58) = v79;
            v86 = v77;
            goto LABEL_147;
          default:
            v84 = v75[3];
            LOBYTE(v58) = v75[2];
            v85 = v75[1];
LABEL_134:
            v86 = v76;
            v87 = v73[15];
            v88 = v73[14];
            goto LABEL_148;
        }
      }
      v134 = v75[1];
      v80 = v68;
      v81 = 0;
      v82 = 0;
      v83 = 0;
      v84 = 0;
      LOBYTE(v58) = 0;
      v85 = 0;
      v86 = 0;
      v87 = 0;
      v88 = 0;
      if (!BYTE2(v58))
      {
        v85 = v78;
        switch(v65 & 0xF)
        {
          case 0:
            break;
          case 1:
            v85 = v73[3];
            v79 = v73[4];
            v76 = v73[1];
            v134 = v73[2];
            v74 = *v73;
            break;
          case 2:
            v85 = v73[4];
            v79 = v73[5];
            v76 = v73[2];
            v134 = v73[3];
            v74 = v73[1];
            break;
          case 3:
            v79 = v73[6];
            v85 = v73[5];
            v134 = v73[4];
            v74 = v73[2];
            v76 = v73[3];
            break;
          case 4:
            v79 = v73[7];
            v85 = v73[6];
            v76 = v73[4];
            v134 = v73[5];
            v74 = v73[3];
            break;
          case 5:
            v79 = v73[8];
            v85 = v73[7];
            v134 = v73[6];
            v74 = v73[4];
            v76 = v73[5];
            break;
          case 6:
            v79 = v73[9];
            v85 = v73[8];
            v134 = v73[7];
            v76 = v73[6];
            v74 = v73[5];
            break;
          case 7:
            v79 = v73[10];
            v85 = v73[9];
            v134 = v73[8];
            v76 = v73[7];
            v74 = v73[6];
            break;
          case 8:
            v79 = v73[11];
            v85 = v73[10];
            v76 = v73[8];
            v134 = v73[9];
            v74 = v73[7];
            break;
          case 9:
            v79 = v73[12];
            v85 = v73[11];
            v76 = v73[9];
            v134 = v73[10];
            v74 = v73[8];
            break;
          case 0xALL:
            v79 = v73[13];
            v85 = v73[12];
            v134 = v73[11];
            v76 = v73[10];
            v74 = v73[9];
            break;
          case 0xBLL:
            v85 = v73[13];
            v79 = v73[14];
            v76 = v73[11];
            v134 = v73[12];
            v74 = v73[10];
            break;
          case 0xCLL:
            v79 = v73[15];
            v85 = v73[14];
            v134 = v73[13];
            v76 = v73[12];
            v74 = v73[11];
            break;
          case 0xDLL:
            v79 = v76;
            v85 = v73[15];
            v76 = v73[13];
            v134 = v73[14];
            v74 = v73[12];
            break;
          case 0xELL:
            v79 = v134;
            v85 = v76;
            v134 = v73[15];
            v74 = v73[13];
            v76 = v73[14];
            break;
          default:
            v81 = v78;
            v82 = v78;
            v83 = v78;
            v84 = v78;
            LOBYTE(v58) = v78;
            v85 = v134;
            goto LABEL_134;
        }
        v81 = v79;
        v82 = v79;
        v83 = v79;
        v84 = v79;
        LOBYTE(v58) = v79;
        v86 = v134;
LABEL_147:
        v87 = v76;
        v88 = v74;
      }
LABEL_148:
      v90 = 0;
      v176[0] = v136;
      v176[1] = v135;
      v176[2] = v137;
      v177[0] = 0x101010101010101 * v80;
      *(_QWORD *)((char *)v177 + 5) = v177[0];
      v174[0] = v88;
      v174[1] = v87;
      v174[2] = v86;
      v174[3] = v85;
      v174[4] = v58;
      v174[5] = v84;
      v174[6] = v83;
      v174[7] = v82;
      v174[8] = v81;
      *(_DWORD *)v175 = 16843009 * v88;
      *(_DWORD *)&v175[3] = 16843009 * v88;
      v157 = *(_OWORD *)((char *)&unk_2160F2730 + (16 * v143) + 96);
      do
      {
        if ((*((_BYTE *)&v157 + v90) & 0x10) != 0)
          v91 = v174;
        else
          v91 = v176;
        *(&v158 + v90) = v91[*((_BYTE *)&v157 + v90) & 0xF];
        ++v90;
      }
      while (v90 != 16);
      v92 = 0;
      v93 = *(int32x4_t *)((char *)&unk_2160F2730 + ((16 * v138) | (32 * BYTE1(v58))) + 528);
      v155 = v93;
      v94 = v159;
      v95 = v159 + v158;
      v96 = v160;
      v97 = v161;
      v98 = v162;
      v99 = v163;
      v100 = v163 + v162;
      v101 = v164;
      v102 = v165;
      v103 = v165 + v164;
      v104 = v100 + v103 + 2;
      v105 = v166;
      v106 = v167 + v166;
      v107 = v168 + v169 + v106 + 2;
      v108 = v171 + v170 + v172 + v173;
      v109 = v161 + v160;
      v153 = (int8x8_t)_byteswap_uint64(__PAIR64__(v104 >> 2, v107 >> 2));
      v154 = bswap32((v108 + 2) >> 2) | 0x8000000000000000;
      v152.i64[0] = _byteswap_uint64(__PAIR64__((v95 + v109 + v104 + 2) >> 3, (v107 + v104) >> 3));
      v152.i64[1] = _byteswap_uint64(__PAIR64__((v108 + 2 + v107) >> 3, (v108 + 514) >> 3));
      do
      {
        if ((v155.i8[v92] & 0x10) != 0)
          v110 = (int8x8_t *)&v152;
        else
          v110 = &v153;
        *((_BYTE *)&v157 + v92) = v110->i8[v155.i8[v92] & 0xF];
        ++v92;
      }
      while (v92 != 16);
      v111 = 0;
      v93.i32[0] = v143;
      v156 = vbslq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vceqq_s32(v93, a3), 0), (int8x16_t)xmmword_2160F19F0, (int8x16_t)xmmword_2160EE7E0);
      v112 = *(int32x4_t *)((char *)&unk_2160F2820 + (32 * v143));
      v151 = *(_OWORD *)((char *)&unk_2160F2820 + ((32 * v143) | 0x10u));
      v152 = v112;
      v113.i32[0] = v100;
      v113.i32[1] = v101 + v99;
      v113.i32[2] = v103;
      v113.i32[3] = v105 + v102;
      v112.i32[0] = v95;
      v112.i32[1] = v96 + v94;
      v112.i64[1] = __PAIR64__(v98 + v97, v109);
      *(uint16x4_t *)v114.i8 = vhadd_u16((uint16x4_t)vmovn_s32(v112), (uint16x4_t)0x1000100010001);
      v114.u64[1] = (unint64_t)vhadd_u16((uint16x4_t)vmovn_s32(v113), (uint16x4_t)0x1000100010001);
      v115 = (int16x8_t)vrev16q_s8((int8x16_t)v114);
      v150 = v115;
      v149[0] = __rev16((v96 + v94 + v95 + 2) >> 2);
      v149[1] = __rev16((v109 + v96 + v94 + 2) >> 2);
      v149[2] = __rev16((v98 + v97 + v109 + 2) >> 2);
      v149[3] = __rev16((v100 + v98 + v97 + 2) >> 2);
      v149[4] = __rev16((v101 + v99 + v100 + 2) >> 2);
      v149[5] = __rev16((v103 + v101 + v99 + 2) >> 2);
      v149[6] = __rev16((v105 + v102 + v103 + 2) >> 2);
      v149[7] = __rev16((v106 + v105 + v102 + 2) >> 2);
      do
      {
        if ((v156.i8[v111] & 0x10) != 0)
          v116 = (int16x8_t *)&v157;
        else
          v116 = &v150;
        v150.i8[v111] = v116->i8[v156.i8[v111] & 0xF];
        ++v111;
      }
      while (v111 != 16);
      v117 = 0;
      v17 = v126;
      v29 = v142;
      v34 = v132;
      do
      {
        if ((v152.i8[v117] & 0x10) != 0)
          v118 = (int16x8_t *)v149;
        else
          v118 = &v150;
        v155.i8[v117] = v118->i8[v152.i8[v117] & 0xF];
        ++v117;
      }
      while (v117 != 16);
      v119 = 0;
      result = v129;
      do
      {
        if ((*((_BYTE *)&v151 + v119) & 0x10) != 0)
          v120 = (int16x8_t *)v149;
        else
          v120 = &v150;
        v153.i8[v119] = v120->i8[*((_BYTE *)&v151 + v119) & 0xF];
        ++v119;
      }
      while (v119 != 16);
      v42 = v141 + 4;
      *(uint16x4_t *)v115.i8 = vmin_u16((uint16x4_t)vmax_s16(vadd_s16(v141[3], (int16x4_t)vrev16_s8((int8x8_t)v154)), 0), (uint16x4_t)0xFF00FF00FF00FFLL);
      *(uint16x4_t *)v114.i8 = vmin_u16((uint16x4_t)vmax_s16(vadd_s16(v141[2], (int16x4_t)vrev16_s8(v153)), 0), (uint16x4_t)0xFF00FF00FF00FFLL);
      *(uint16x4_t *)v3.i8 = vmin_u16((uint16x4_t)vmax_s16(vadd_s16(v141[1], (int16x4_t)vrev16_s8((int8x8_t)v155.u64[1])), 0), (uint16x4_t)0xFF00FF00FF00FFLL);
      *(uint16x4_t *)v4.i8 = vmin_u16((uint16x4_t)vmax_s16(vadd_s16(*v141, (int16x4_t)vrev16_s8(*(int8x8_t *)v155.i8)), 0), (uint16x4_t)0xFF00FF00FF00FFLL);
      *v139 = vmovn_s16(v4).u32[0];
      *(_DWORD *)((char *)v139 + v132) = vmovn_s16(v3).u32[0];
      v121 = (_DWORD *)((char *)v139 + v132 + v132);
      *v121 = vmovn_s16(v114).u32[0];
      *(_DWORD *)((char *)v121 + v132) = vmovn_s16(v115).u32[0];
      v43 = v140 + 1;
    }
    while (v140 + 1 != v133);
    v32 = v123 + 1;
    v33 = v122 + 2;
    v133 += 2;
  }
  while (v123 != 7);
  return result;
}

int *sub_216090D84(int *result, uint64_t a2, double a3, double a4, double a5, int8x8_t a6, uint8x8_t a7)
{
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  _BOOL4 v24;
  uint64_t v25;
  unsigned __int8 *v26;
  _BOOL4 v27;
  _BOOL4 v28;
  _BOOL4 v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  char *v34;
  int v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 *v40;
  uint64_t v41;
  uint64_t v42;
  uint32x4_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  int v48;
  uint64_t v49;
  int v50;
  unint64_t v51;
  uint64_t v52;
  BOOL v53;
  int v54;
  unsigned int v55;
  int v56;
  unsigned int v57;
  int v58;
  unsigned int v59;
  unsigned int v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  uint8x8_t v64;
  _BYTE *v65;
  uint64_t v66;
  _WORD *v67;
  int v68;
  int v69;
  unint64_t v70;
  int v71;
  int v72;
  int v73;
  uint64_t v74;
  int *v75;
  int v76;
  int v77;
  int v78;
  int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  char *v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  int v90;
  int v91;
  unsigned int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  _BYTE *v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  _BYTE *v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  _BYTE *v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  _BYTE *v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  _BYTE *v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  _BYTE *v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  _BYTE *v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  uint64_t v167;
  int *v168;
  int v169;
  int v170;
  int v171;
  int v172;
  unsigned int v173;
  int v174;
  unint64_t v175;
  unsigned int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  int v180;
  unsigned int v181;
  unsigned int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  int v191;
  int v192;
  _BYTE *v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  _BYTE *v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  _BYTE *v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  _BYTE *v220;
  int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  _BYTE *v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  _BYTE *v238;
  int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  _BYTE *v248;
  unsigned __int8 *v249;
  _WORD *v250;
  uint64_t v251;
  uint64_t v252;
  int *v253;
  unint64_t v254;
  int v255;
  uint16x4_t v256;
  int64x2_t v257;
  int32x4_t v258;
  int32x4_t v259;
  unsigned int v260;
  unsigned __int32 v261;
  int v262;
  int v263;
  int v264;
  uint64_t v265;
  int v266;
  int v267;
  int v268;
  int v269;
  signed __int32 v270;
  unsigned __int8 *v271;
  int v272;
  _WORD *v273;
  int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  int v280;
  int v281;
  char *v282;
  int v283;
  int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  int v289;
  int v290;
  _WORD *v291;
  int v292;
  int v293;
  int v294;
  int v295;
  int v296;
  int v297;
  int v298;
  int v299;
  int v300;
  int v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  unsigned int v308;
  int v309;
  int v310;
  int v311;
  int v312;
  unsigned int v313;
  char *v314;
  int v315;
  unsigned int v316;
  unsigned int v317;
  unsigned int v318;
  unsigned int v319;
  unsigned int v320;
  int v321;
  int v322;
  int v323;
  unsigned int v324;
  int v325;
  int v326;
  int v327;
  unsigned int v328;
  int v329;
  unsigned int v330;
  unsigned int v331;
  int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  unsigned int v336;
  unsigned int v337;
  unsigned int v338;
  int v339;
  int v340;
  int v341;
  int v342;
  int v343;
  int v344;
  int v345;
  int v346;
  int v347;
  _BYTE *v348;
  int v349;
  int v350;
  int v351;
  int v352;
  int v353;
  int v354;
  unsigned int v355;
  unsigned int v356;
  unsigned int v357;
  int v358;
  int v359;
  _BYTE *v360;
  int v361;
  int v362;
  int v363;
  int v364;
  int v365;
  int v366;
  unsigned int v367;
  unsigned int v368;
  unsigned int v369;
  int v370;
  int v371;
  _BYTE *v372;
  int v373;
  int v374;
  int v375;
  int v376;
  int v377;
  int v378;
  unsigned int v379;
  int v380;
  unsigned int v381;
  unsigned int v382;
  int v383;
  int v384;
  _BYTE *v385;
  int v386;
  int v387;
  int v388;
  int v389;
  int v390;
  int v391;
  unsigned int v392;
  int v393;
  unsigned int v394;
  unsigned int v395;
  int v396;
  int v397;
  _BYTE *v398;
  int v399;
  int v400;
  int v401;
  int v402;
  int v403;
  int v404;
  unsigned int v405;
  unsigned int v406;
  unsigned int v407;
  int v408;
  int v409;
  _BYTE *v410;
  int v411;
  int v412;
  int v413;
  int v414;
  int v415;
  int v416;
  int v417;
  int v418;
  _BYTE *v419;
  int v420;
  int v421;
  int v422;
  int v423;
  int v424;
  int v425;
  uint64_t v426;
  int v427;
  int v428;
  int v429;
  int v430;
  int v431;
  int v432;
  int v433;
  int v434;
  int v435;
  int v436;
  unsigned int v437;
  int v438;
  unsigned int v439;
  unsigned int v440;
  unsigned int v441;
  unsigned int v442;
  unsigned int v443;
  unsigned int v444;
  unsigned int v445;
  int v446;
  int v447;
  int v448;
  int v449;
  int v450;
  unsigned int v451;
  int v452;
  unsigned int v453;
  unsigned int v454;
  unsigned int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  int v459;
  unsigned int v460;
  unsigned int v461;
  unsigned int v462;
  unsigned int v463;
  unsigned int v464;
  unsigned int v465;
  unsigned int v466;
  unsigned int v467;
  unsigned int v468;
  unsigned int v469;
  unsigned int v470;
  unsigned int v471;
  unsigned int v472;
  unsigned int v473;
  unsigned int v474;
  unsigned int v475;
  unsigned int v476;
  int v477;
  int v478;
  int v479;
  int v480;
  int v481;
  int v482;
  int v483;
  int v484;
  int v485;
  _BYTE *v486;
  int v487;
  int v488;
  int v489;
  int v490;
  int v491;
  int v492;
  unsigned int v493;
  unsigned int v494;
  unsigned int v495;
  int v496;
  int v497;
  _BYTE *v498;
  int v499;
  int v500;
  int v501;
  int v502;
  int v503;
  int v504;
  unsigned int v505;
  unsigned int v506;
  int v507;
  int v508;
  _BYTE *v509;
  int v510;
  int v511;
  int v512;
  int v513;
  int v514;
  int v515;
  unsigned int v516;
  unsigned int v517;
  unsigned int v518;
  int v519;
  int v520;
  _BYTE *v521;
  int v522;
  int v523;
  int v524;
  int v525;
  int v526;
  int v527;
  unsigned int v528;
  unsigned int v529;
  unsigned int v530;
  int v531;
  int v532;
  _BYTE *v533;
  int v534;
  int v535;
  int v536;
  int v537;
  int v538;
  int v539;
  int v540;
  unsigned int v541;
  unsigned int v542;
  int v543;
  _BYTE *v544;
  int v545;
  int v546;
  int v547;
  int v548;
  int v549;
  int v550;
  int v551;
  unsigned int v552;
  int v553;
  _BYTE *v554;
  int v555;
  int v556;
  int v557;
  int v558;
  int v559;
  int v560;
  int v561;
  int v562;
  int v563;
  int v564;
  int v565;
  int v566;
  int v567;
  int v568;
  unsigned int v569;
  int v570;
  unsigned int v571;
  unsigned int v572;
  unsigned int v573;
  unsigned int v574;
  unsigned int v575;
  unsigned int v576;
  int v577;
  int v578;
  int v579;
  int v580;
  int v581;
  char *v582;
  unsigned int v583;
  int v584;
  unsigned int v585;
  unsigned int v586;
  unsigned int v587;
  int v588;
  unsigned int v589;
  unsigned int v590;
  int v591;
  int v592;
  int v593;
  int v594;
  unsigned int v595;
  unsigned int v596;
  unsigned int v597;
  int v598;
  int v599;
  unsigned int v600;
  unsigned int v601;
  unsigned int v602;
  unsigned int v603;
  int v604;
  int v605;
  int v606;
  int v607;
  int v608;
  int v609;
  unsigned int v610;
  unsigned int v611;
  unsigned int v612;
  unsigned int v613;
  int v614;
  int v615;
  int v616;
  _BYTE *v617;
  int v618;
  int v619;
  int v620;
  int v621;
  int v622;
  unsigned int v623;
  unsigned int v624;
  int v625;
  unsigned int v626;
  unsigned int v627;
  int v628;
  int v629;
  _BYTE *v630;
  int v631;
  int v632;
  int v633;
  int v634;
  int v635;
  unsigned int v636;
  unsigned int v637;
  int v638;
  unsigned int v639;
  unsigned int v640;
  int v641;
  int v642;
  _BYTE *v643;
  int v644;
  int v645;
  int v646;
  int v647;
  int v648;
  int v649;
  unsigned int v650;
  unsigned int v651;
  int v652;
  unsigned int v653;
  int v654;
  int v655;
  _BYTE *v656;
  int v657;
  int v658;
  int v659;
  int v660;
  int v661;
  int v662;
  unsigned int v663;
  unsigned int v664;
  int v665;
  unsigned int v666;
  unsigned int v667;
  int v668;
  int v669;
  _BYTE *v670;
  int v671;
  int v672;
  int v673;
  int v674;
  int v675;
  unsigned int v676;
  unsigned int v677;
  int v678;
  unsigned int v679;
  unsigned int v680;
  unsigned int v681;
  int v682;
  int v683;
  _BYTE *v684;
  int v685;
  int v686;
  int v687;
  int v688;
  int v689;
  int v690;
  int v691;
  unsigned int v692;
  unsigned int v693;
  unsigned int v694;
  int v695;
  _BYTE *v696;
  int v697;
  int v698;
  int v699;
  int v700;
  int v701;
  int v702;
  int v703;
  unsigned __int8 *v704;
  int v705;
  unsigned __int16 *v706;
  int v707;
  int v708;
  int v709;
  int v710;
  int v711;
  int v712;
  int v713;
  int v714;
  int v715;
  int v716;
  int v717;
  int v718;
  int v719;
  unint64_t v720;
  int v721;
  int v722;
  int v723;
  int v724;
  int v725;
  int v726;
  int v727;
  int v728;
  uint64_t v729;
  int *v730;
  int v731;
  unsigned int v732;
  int v733;
  unsigned int v734;
  unsigned int v735;
  unsigned int v736;
  int v737;
  unsigned int v738;
  unsigned int v739;
  unsigned int v740;
  unsigned int v741;
  unsigned int v742;
  unsigned int v743;
  int v744;
  unsigned int v745;
  unsigned int v746;
  unsigned int v747;
  unsigned int v748;
  unsigned int v749;
  unsigned int v750;
  unsigned int v751;
  int v752;
  int v753;
  int v754;
  int v755;
  int v756;
  int v757;
  int v758;
  int v759;
  _BYTE *v760;
  __int16 v761;
  unsigned int v762;
  unsigned int v763;
  unsigned int v764;
  unsigned int v765;
  int v766;
  int v767;
  int v768;
  int v769;
  int v770;
  int v771;
  int v772;
  int v773;
  int v774;
  _BYTE *v775;
  unsigned int v776;
  unsigned int v777;
  unsigned int v778;
  int v779;
  int v780;
  int v781;
  int v782;
  int v783;
  int v784;
  int v785;
  int v786;
  _BYTE *v787;
  unsigned int v788;
  unsigned int v789;
  unsigned int v790;
  unsigned int v791;
  int v792;
  int v793;
  int v794;
  int v795;
  int v796;
  int v797;
  int v798;
  int v799;
  _BYTE *v800;
  int v801;
  int v802;
  int v803;
  int v804;
  int v805;
  int v806;
  int v807;
  int v808;
  _BYTE *v809;
  int v810;
  int v811;
  int v812;
  int v813;
  int v814;
  int v815;
  int v816;
  int v817;
  _BYTE *v818;
  int v819;
  int v820;
  int v821;
  int v822;
  int v823;
  int v824;
  int v825;
  int v826;
  int v827;
  int v828;
  int v829;
  int v830;
  int v831;
  int v832;
  unsigned int v833;
  unsigned int v834;
  int v835;
  uint16x4_t v836;
  int64x2_t v837;
  int32x4_t v838;
  int32x4_t v839;
  unsigned int v840;
  int v841;
  unsigned int v842;
  unsigned int v843;
  unsigned int v844;
  unsigned int v845;
  unsigned int v846;
  unsigned int v847;
  unsigned int v848;
  unsigned int v849;
  unsigned int v850;
  unsigned int v851;
  unsigned int v852;
  unsigned int v853;
  unsigned int v854;
  unsigned int v855;
  unsigned int v856;
  unsigned int v857;
  unsigned int v858;
  int v859;
  unsigned int v860;
  int v861;
  unsigned int v862;
  unsigned int v863;
  unsigned int v864;
  unsigned int v865;
  unsigned int v866;
  unsigned int v867;
  int v868;
  int v869;
  int v870;
  int v871;
  int v872;
  int v873;
  int v874;
  int v875;
  int v876;
  _BYTE *v877;
  int v878;
  int v879;
  int v880;
  int v881;
  int v882;
  int v883;
  int v884;
  int v885;
  unsigned int v886;
  unsigned int v887;
  unsigned int v888;
  int v889;
  _BYTE *v890;
  int v891;
  int v892;
  int v893;
  int v894;
  int v895;
  int v896;
  int v897;
  unsigned int v898;
  unsigned int v899;
  unsigned int v900;
  int v901;
  _BYTE *v902;
  int v903;
  int v904;
  int v905;
  int v906;
  int v907;
  int v908;
  int v909;
  unsigned int v910;
  unsigned int v911;
  int v912;
  _BYTE *v913;
  int v914;
  int v915;
  int v916;
  int v917;
  int v918;
  int v919;
  int v920;
  unsigned int v921;
  unsigned int v922;
  int v923;
  _BYTE *v924;
  int v925;
  int v926;
  int v927;
  int v928;
  int v929;
  int v930;
  int v931;
  unsigned int v932;
  unsigned int v933;
  int v934;
  _BYTE *v935;
  int v936;
  int v937;
  int v938;
  int v939;
  int v940;
  int v941;
  int v942;
  int v943;
  _BYTE *v944;
  int v945;
  int v946;
  int v947;
  int v948;
  int v949;
  int v950;
  unsigned int v951;
  unsigned int v952;
  unsigned int v953;
  unsigned int v954;
  unsigned int v955;
  unsigned int v956;
  unsigned int v957;
  int v958;
  unsigned int v959;
  int v960;
  unsigned int v961;
  unsigned int v962;
  unsigned int v963;
  unsigned int v964;
  unsigned int v965;
  unsigned int v966;
  unsigned int v967;
  int v968;
  unsigned int v969;
  unsigned int v970;
  unsigned int v971;
  unsigned int v972;
  unsigned int v973;
  unsigned int v974;
  unsigned int v975;
  unsigned int v976;
  unsigned int v977;
  unsigned int v978;
  unsigned int v979;
  unsigned int v980;
  unsigned int v981;
  unsigned int v982;
  unsigned int v983;
  int v984;
  int v985;
  int v986;
  int v987;
  int v988;
  int v989;
  int v990;
  int v991;
  int v992;
  _BYTE *v993;
  int v994;
  int v995;
  int v996;
  int v997;
  int v998;
  int v999;
  int v1000;
  unsigned int v1001;
  int v1002;
  _BYTE *v1003;
  int v1004;
  int v1005;
  int v1006;
  int v1007;
  int v1008;
  int v1009;
  int v1010;
  unsigned int v1011;
  unsigned int v1012;
  unsigned int v1013;
  int v1014;
  _BYTE *v1015;
  int v1016;
  int v1017;
  int v1018;
  int v1019;
  int v1020;
  int v1021;
  int v1022;
  unsigned int v1023;
  int v1024;
  _BYTE *v1025;
  int v1026;
  int v1027;
  int v1028;
  int v1029;
  int v1030;
  int v1031;
  int v1032;
  unsigned int v1033;
  unsigned int v1034;
  unsigned int v1035;
  int v1036;
  _BYTE *v1037;
  int v1038;
  int v1039;
  int v1040;
  int v1041;
  int v1042;
  int v1043;
  int v1044;
  int v1045;
  _BYTE *v1046;
  int v1047;
  int v1048;
  int v1049;
  int v1050;
  int v1051;
  int v1052;
  int v1053;
  int v1054;
  _BYTE *v1055;
  int v1056;
  int v1057;
  int v1058;
  int v1059;
  int v1060;
  int v1061;
  int v1062;
  int v1063;
  int v1064;
  int v1065;
  int v1066;
  int v1067;
  int v1068;
  int v1069;
  int v1070;
  int v1071;
  int v1072;
  int v1073;
  int v1074;
  int v1075;
  int v1076;
  int v1077;
  _BYTE *v1078;
  int v1079;
  int v1080;
  int v1081;
  int v1082;
  int v1083;
  int v1084;
  int v1085;
  int v1086;
  _BYTE *v1087;
  int v1088;
  int v1089;
  int v1090;
  int v1091;
  int v1092;
  int v1093;
  int v1094;
  int v1095;
  _BYTE *v1096;
  int v1097;
  int v1098;
  int v1099;
  int v1100;
  int v1101;
  int v1102;
  int v1103;
  int v1104;
  _BYTE *v1105;
  int v1106;
  int v1107;
  int v1108;
  int v1109;
  int v1110;
  int v1111;
  int v1112;
  int v1113;
  _BYTE *v1114;
  int v1115;
  int v1116;
  int v1117;
  int v1118;
  int v1119;
  int v1120;
  int v1121;
  int v1122;
  _BYTE *v1123;
  int v1124;
  int v1125;
  int v1126;
  int v1127;
  int v1128;
  int v1129;
  int v1130;
  int v1131;
  _BYTE *v1132;
  int v1133;
  int v1134;
  int v1135;
  int v1136;
  int v1137;
  int v1138;
  BOOL v1139;
  int v1140;
  int v1141;
  int v1142;
  int v1143;
  int v1144;
  int v1145;
  int v1146;
  uint64_t v1147;
  char *v1148;
  char *v1149;
  uint64_t v1150;
  int *v1151;
  uint64_t v1152;
  unsigned int v1153;
  uint64_t v1154;
  uint64_t v1155;
  uint64_t v1157;
  unint64_t v1158;
  unint64_t v1159;
  unint64_t v1160;
  unint64_t v1161;
  unint64_t v1162;
  unsigned __int8 *v1163;
  unsigned __int8 *v1164;
  unsigned __int8 *v1165;
  uint64_t v1166;
  uint64_t v1167;
  uint64_t v1168;
  uint64_t v1169;
  uint64_t v1170;
  char *v1171;
  uint64_t v1172;
  uint64_t v1173;
  uint64_t v1174;
  uint64_t v1175;
  unsigned int v1176;
  unsigned __int8 *v1177;
  uint64_t v1178;
  unsigned __int8 *v1179;
  unsigned __int8 *v1180;
  uint64_t v1181;
  uint64_t v1182;

  v1182 = *MEMORY[0x24BDAC8D0];
  v7 = *((_QWORD *)result + 27);
  v9 = *result;
  v8 = result[1];
  if (*((_BYTE *)result + 29) && *(_BYTE *)(v7 + 1363))
  {
    v1157 = v7 + 504;
    v10 = *(unsigned int *)(v7 + 168);
    v1153 = 2 * v10;
    v11 = *(unsigned __int8 *)(v7 + 32);
    v12 = *(_QWORD *)(v7 + 64) + (16 * v9);
    if (*((_BYTE *)result + 30))
    {
      if (v11)
        v13 = 5;
      else
        v13 = 4;
      v14 = ((v8 << v13) * v10);
      v12 += v10;
      goto LABEL_16;
    }
    v15 = v8 * v10;
    if (v11)
    {
      v14 = (32 * v15);
      goto LABEL_16;
    }
LABEL_15:
    v14 = (16 * v15);
    goto LABEL_16;
  }
  v1157 = v7 + 440;
  v1153 = *(_DWORD *)(v7 + 168);
  if (*((_BYTE *)result + 31) != 1)
  {
    if (*((_BYTE *)result + 31))
    {
      v17 = *(_QWORD *)(v7 + 64)
          + 32 * v1153 * (result[4] / (2 * result[5]))
          + ((8 * (result[4] % (2 * result[5]))) & 0xFFFFFFF0)
          + ((result[4] << 31 >> 31) & v1153);
      v1157 = v7 + 504;
      v1153 *= 2;
      goto LABEL_17;
    }
    v12 = *(_QWORD *)(v7 + 64) + (16 * v9);
    v15 = v8 * v1153;
    goto LABEL_15;
  }
  v16 = result[4];
  v12 = *(_QWORD *)(v7 + 64) + 32 * v1153 * (v16 / (2 * result[5])) + ((8 * (v16 % (2 * result[5]))) & 0xFFFFFFF0);
  v14 = ((int)(v16 << 31) >> 31) & (16 * v1153);
LABEL_16:
  v17 = v12 + v14;
LABEL_17:
  v1147 = *((_QWORD *)result + 21);
  v18 = *((_QWORD *)result + 22) + 48;
  v19 = (unsigned __int8 *)*((_QWORD *)result + 16);
  v20 = (unsigned __int8 *)*((_QWORD *)result + 17);
  v22 = *((_QWORD *)result + 18);
  v21 = *((_QWORD *)result + 19);
  v1180 = 0;
  v1181 = 0;
  v1178 = v18;
  v1179 = 0;
  v1177 = v19;
  if (v19)
  {
    if (v19[64])
      v23 = v19 + 48;
    else
      v23 = v19 + 32;
    v1179 = v23;
    v24 = 1;
    if (v20)
      goto LABEL_22;
  }
  else
  {
    v24 = 0;
    if (v20)
    {
LABEL_22:
      v25 = v1147;
      if (v20[64])
        v26 = v20 + 48;
      else
        v26 = v20 + 32;
      v1180 = v26;
      v27 = 1;
      goto LABEL_28;
    }
  }
  v27 = 0;
  v1180 = 0;
  v25 = v1147;
LABEL_28:
  v28 = v22 != 0;
  v29 = v21 != 0;
  if (v25)
  {
    if (*(_BYTE *)(v25 + 64))
      v30 = v25 + 48;
    else
      v30 = v25 + 32;
    v1181 = v30;
  }
  else
  {
    v1181 = 0;
  }
  v31 = *((_QWORD *)result + 6);
  if (!*(_BYTE *)(v31 + 4))
    goto LABEL_52;
  v24 = (int)v1177;
  if (v1177)
  {
    if (v1177[48] != 34)
    {
      v24 = 1;
      if (v20)
        goto LABEL_39;
LABEL_45:
      v27 = 0;
      if (v22)
        goto LABEL_46;
      goto LABEL_41;
    }
    v24 = v1177[32] != 34;
  }
  if (!v20)
    goto LABEL_45;
LABEL_39:
  if (v20[48] == 34)
  {
    v27 = v20[32] != 34;
    if (!v22)
      goto LABEL_41;
LABEL_46:
    if (*(_BYTE *)(v22 + 48) == 34)
    {
      v28 = *(unsigned __int8 *)(v22 + 32) != 34;
      if (!v21)
        goto LABEL_48;
    }
    else
    {
      v28 = 1;
      if (!v21)
        goto LABEL_48;
    }
LABEL_42:
    v29 = *(_BYTE *)(v21 + 48) != 34 || *(unsigned __int8 *)(v21 + 32) != 34;
    goto LABEL_52;
  }
  v27 = 1;
  if (v22)
    goto LABEL_46;
LABEL_41:
  v28 = 0;
  if (v21)
    goto LABEL_42;
LABEL_48:
  v29 = 0;
LABEL_52:
  v32 = v29 | (2 * v28) | (4 * v27);
  v1176 = v32 | (8 * v24);
  v1171 = byte_254E10D40;
  if (v1177 && (*((_BYTE *)result + 185) & 1) != 0)
  {
    v33 = *((unsigned __int8 *)result + 31);
    if (v33 != 2 || v1177[144])
    {
      v1171 = byte_254E10D40;
      if (v33 == 1 && v1177[144] == 1)
      {
        v34 = (char *)((result[4] & 1) != 0 ? &unk_254E10DD8 : &unk_254E10DA8);
        v1171 = v34;
        if (*(_BYTE *)(v31 + 4))
        {
          if (v24 && *(_BYTE *)(v1147 + 48) == 34)
          {
            v35 = v32 | (8 * v24);
            if (*(_BYTE *)(v1147 + 32) == 34)
              v35 = v32;
            v1176 = v35;
          }
        }
      }
    }
    else
    {
      v1171 = (char *)&unk_254E10D78;
    }
  }
  v36 = 0;
  v37 = &byte_2160F2328;
  v38 = 3 * v1153;
  v39 = 4 * v1153;
  v40 = (unsigned __int8 *)(v31 + 326);
  v41 = 6 * v1153;
  v42 = 5 * v1153;
  v43.i64[0] = 0x200000002;
  v43.i64[1] = 0x200000002;
  v44 = 0;
  v1154 = 7 * v1153;
  v1150 = v17;
  v1151 = result;
  v1155 = v18;
  v1152 = v38;
  v45 = v1154;
  v1173 = v39;
  v1174 = 2 * v1153;
  v1172 = v41;
  v1175 = v42;
  do
  {
    v46 = v1171[v44];
    v47 = (int)v1177;
    if (v1177)
    {
      v48 = *((unsigned __int8 *)result + 31);
      if (v48 == 1 && v1177[144] == 1 && v44 == 8)
      {
        v47 = *(unsigned __int8 *)(*((_QWORD *)result + 6) + 4);
      }
      else
      {
        v47 = 0;
        if (v48 == 2 && !v1177[144] && v44 == 8)
        {
          v47 = 0;
          v49 = v1181;
          v50 = *(unsigned __int8 *)(*((_QWORD *)result + 6) + 4);
          goto LABEL_79;
        }
      }
    }
    v50 = 0;
    v49 = *(&v1178 + !(v46 & 1));
LABEL_79:
    v51 = v1171[v44 + 16];
    v52 = *(&v1178 + (~(2 * (_BYTE)v51) & 2));
    if (v52)
      v53 = v49 == 0;
    else
      v53 = 1;
    if (v53)
    {
      v54 = 0;
LABEL_86:
      v57 = 2;
      if (v50)
        goto LABEL_87;
      goto LABEL_92;
    }
    v55 = *(unsigned __int8 *)(v49 + ((v46 >> 1) & 0xF));
    v56 = *(unsigned __int8 *)(v52 + ((v51 >> 1) & 0xF));
    v54 = (v55 >> 5) & 1;
    if ((*(unsigned __int8 *)(*((_QWORD *)result + 6) + 4) & ((v56 | v55) >> 5) & 1) != 0)
      goto LABEL_86;
    v57 = (((v55 & 0xF) - (v56 & 0xF)) & ((int)((v55 & 0xF) - (v56 & 0xF)) >> 31)) + (v56 & 0xF);
    if (v50)
    {
LABEL_87:
      v58 = (v1176 & 7 | (8 * v54)) ^ 8;
      v59 = dword_2160F232C[(v36 + v58)];
      if (v1177[48] == 34 && v1177[32] == 34)
      {
        v60 = 0;
LABEL_96:
        v1176 = v58 & 0xE;
        goto LABEL_99;
      }
      v61 = v58 | 1;
LABEL_98:
      v1176 = v61;
      v60 = 1;
      goto LABEL_99;
    }
LABEL_92:
    v59 = dword_2160F232C[v36 + v1176];
    if (v47)
    {
      if (*(_BYTE *)(v1147 + 48) == 34 && *(_BYTE *)(v1147 + 32) == 34)
      {
        v60 = 0;
        LOBYTE(v58) = v1176;
        goto LABEL_96;
      }
      v61 = v1176 | 1;
      goto LABEL_98;
    }
    v60 = HIBYTE(v59);
LABEL_99:
    v62 = *v40;
    if (v57 <= v62)
      ++v62;
    v63 = v62 & (*(v40 - 20) - 1) | v57 & -*(v40 - 20);
    v64 = (uint8x8_t)vdup_n_s8(v63);
    *(_DWORD *)(v18 + v44) = v64.i32[0];
    v65 = (_BYTE *)(v17 + *(unsigned int *)(v1157 + 4 * v44));
    v66 = BYTE2(v59);
    switch(v63)
    {
      case 0u:
        v67 = (_WORD *)(a2 + 2 * *v37);
        v68 = v65[-v1153];
        v69 = v65[-v1153 + 1];
        v70 = v44;
        v71 = v65[-v1153 + 2];
        v72 = v65[-v1153 + 3];
        v73 = v65[-v1153 + 4];
        v74 = v38;
        v75 = result;
        v76 = v65[-v1153 + 5];
        v77 = v65[-v1153 + 6];
        v78 = v65[-v1153 + 7];
        v79 = v65[BYTE2(v59) + 7 - v1153];
        v80 = v69 + 2 + 2 * v68 + v65[-v1153 - v60];
        v81 = v71 + 2 + v68 + 2 * v69;
        v82 = v69 + 2 + 2 * v71 + v72;
        v83 = v71 + 2 + 2 * v72;
        v84 = v37;
        v85 = v83 + v73;
        v86 = v72 + 2 * v73 + v76 + 2;
        v87 = v73 + 2 * v76 + v77 + 2;
        v88 = v76 + 2 * v77;
        result = v75;
        v38 = v74;
        v89 = v88 + v78 + 2;
        v90 = v77 + 2 * v78;
        v42 = 5 * v1153;
        v91 = v90 + v79;
        v41 = 6 * v1153;
        v92 = v91 + 2;
        v93 = (__int16)(*v67 + (v80 >> 2));
        if (v93 >= 255)
          v93 = 255;
        *v65 = v93 & ~(v93 >> 31);
        v94 = (__int16)(v67[1] + (v81 >> 2));
        if (v94 >= 255)
          v94 = 255;
        v65[1] = v94 & ~(v94 >> 31);
        v95 = (__int16)(v67[2] + (v82 >> 2));
        if (v95 >= 255)
          v95 = 255;
        v65[2] = v95 & ~(v95 >> 31);
        v96 = (__int16)(v67[3] + (v85 >> 2));
        if (v96 >= 255)
          v96 = 255;
        v65[3] = v96 & ~(v96 >> 31);
        v97 = (__int16)(v67[4] + (v86 >> 2));
        if (v97 >= 255)
          v97 = 255;
        v65[4] = v97 & ~(v97 >> 31);
        v98 = (__int16)(v67[5] + (v87 >> 2));
        if (v98 >= 255)
          v98 = 255;
        v65[5] = v98 & ~(v98 >> 31);
        v99 = (__int16)(v67[6] + (v89 >> 2));
        if (v99 >= 255)
          v99 = 255;
        v65[6] = v99 & ~(v99 >> 31);
        v100 = (__int16)(v67[7] + (v92 >> 2));
        if (v100 >= 255)
          v100 = 255;
        v65[7] = v100 & ~(v100 >> 31);
        v101 = (__int16)(v67[16] + (v80 >> 2));
        if (v101 >= 255)
          v101 = 255;
        v102 = &v65[v1153];
        *v102 = v101 & ~(v101 >> 31);
        v103 = (__int16)(v67[17] + (v81 >> 2));
        if (v103 >= 255)
          v103 = 255;
        v102[1] = v103 & ~(v103 >> 31);
        v104 = (__int16)(v67[18] + (v82 >> 2));
        if (v104 >= 255)
          v104 = 255;
        v102[2] = v104 & ~(v104 >> 31);
        v105 = (__int16)(v67[19] + (v85 >> 2));
        if (v105 >= 255)
          v105 = 255;
        v102[3] = v105 & ~(v105 >> 31);
        v106 = (__int16)(v67[20] + (v86 >> 2));
        if (v106 >= 255)
          v106 = 255;
        v102[4] = v106 & ~(v106 >> 31);
        v107 = (__int16)(v67[21] + (v87 >> 2));
        if (v107 >= 255)
          v107 = 255;
        v102[5] = v107 & ~(v107 >> 31);
        v108 = (__int16)(v67[22] + (v89 >> 2));
        if (v108 >= 255)
          v108 = 255;
        v102[6] = v108 & ~(v108 >> 31);
        v109 = (__int16)(v67[23] + (v92 >> 2));
        if (v109 >= 255)
          v109 = 255;
        v102[7] = v109 & ~(v109 >> 31);
        v110 = (__int16)(v67[32] + (v80 >> 2));
        if (v110 >= 255)
          v110 = 255;
        v111 = &v65[v1174];
        v65[v1174] = v110 & ~(v110 >> 31);
        v112 = (__int16)(v67[33] + (v81 >> 2));
        if (v112 >= 255)
          v112 = 255;
        v111[1] = v112 & ~(v112 >> 31);
        v113 = (__int16)(v67[34] + (v82 >> 2));
        if (v113 >= 255)
          v113 = 255;
        v111[2] = v113 & ~(v113 >> 31);
        v114 = (__int16)(v67[35] + (v85 >> 2));
        if (v114 >= 255)
          v114 = 255;
        v111[3] = v114 & ~(v114 >> 31);
        v115 = (__int16)(v67[36] + (v86 >> 2));
        if (v115 >= 255)
          v115 = 255;
        v111[4] = v115 & ~(v115 >> 31);
        v116 = (__int16)(v67[37] + (v87 >> 2));
        if (v116 >= 255)
          v116 = 255;
        v111[5] = v116 & ~(v116 >> 31);
        v117 = (__int16)(v67[38] + (v89 >> 2));
        if (v117 >= 255)
          v117 = 255;
        v111[6] = v117 & ~(v117 >> 31);
        v118 = (__int16)(v67[39] + (v92 >> 2));
        if (v118 >= 255)
          v118 = 255;
        v111[7] = v118 & ~(v118 >> 31);
        v119 = (__int16)(v67[48] + (v80 >> 2));
        if (v119 >= 255)
          v119 = 255;
        v120 = &v65[v74];
        v65[v74] = v119 & ~(v119 >> 31);
        v121 = (__int16)(v67[49] + (v81 >> 2));
        if (v121 >= 255)
          v121 = 255;
        v120[1] = v121 & ~(v121 >> 31);
        v122 = (__int16)(v67[50] + (v82 >> 2));
        if (v122 >= 255)
          v122 = 255;
        v120[2] = v122 & ~(v122 >> 31);
        v123 = (__int16)(v67[51] + (v85 >> 2));
        if (v123 >= 255)
          v123 = 255;
        v120[3] = v123 & ~(v123 >> 31);
        v124 = (__int16)(v67[52] + (v86 >> 2));
        if (v124 >= 255)
          v124 = 255;
        v120[4] = v124 & ~(v124 >> 31);
        v125 = (__int16)(v67[53] + (v87 >> 2));
        if (v125 >= 255)
          v125 = 255;
        v120[5] = v125 & ~(v125 >> 31);
        v126 = (__int16)(v67[54] + (v89 >> 2));
        if (v126 >= 255)
          v126 = 255;
        v120[6] = v126 & ~(v126 >> 31);
        v127 = (__int16)(v67[55] + (v92 >> 2));
        if (v127 >= 255)
          v127 = 255;
        v120[7] = v127 & ~(v127 >> 31);
        v128 = (__int16)(v67[64] + (v80 >> 2));
        if (v128 >= 255)
          v128 = 255;
        v129 = &v65[v1173];
        v65[v1173] = v128 & ~(v128 >> 31);
        v130 = (__int16)(v67[65] + (v81 >> 2));
        if (v130 >= 255)
          v130 = 255;
        v129[1] = v130 & ~(v130 >> 31);
        v131 = (__int16)(v67[66] + (v82 >> 2));
        if (v131 >= 255)
          v131 = 255;
        v129[2] = v131 & ~(v131 >> 31);
        v132 = (__int16)(v67[67] + (v85 >> 2));
        if (v132 >= 255)
          v132 = 255;
        v129[3] = v132 & ~(v132 >> 31);
        v133 = (__int16)(v67[68] + (v86 >> 2));
        if (v133 >= 255)
          v133 = 255;
        v129[4] = v133 & ~(v133 >> 31);
        v134 = (__int16)(v67[69] + (v87 >> 2));
        if (v134 >= 255)
          v134 = 255;
        v129[5] = v134 & ~(v134 >> 31);
        v135 = (__int16)(v67[70] + (v89 >> 2));
        if (v135 >= 255)
          v135 = 255;
        v129[6] = v135 & ~(v135 >> 31);
        v136 = (__int16)(v67[71] + (v92 >> 2));
        if (v136 >= 255)
          v136 = 255;
        v129[7] = v136 & ~(v136 >> 31);
        v137 = (__int16)(v67[80] + (v80 >> 2));
        if (v137 >= 255)
          v137 = 255;
        v138 = &v65[v1175];
        v65[v1175] = v137 & ~(v137 >> 31);
        v139 = (__int16)(v67[81] + (v81 >> 2));
        if (v139 >= 255)
          v139 = 255;
        v138[1] = v139 & ~(v139 >> 31);
        v140 = (__int16)(v67[82] + (v82 >> 2));
        if (v140 >= 255)
          v140 = 255;
        v138[2] = v140 & ~(v140 >> 31);
        v141 = (__int16)(v67[83] + (v85 >> 2));
        if (v141 >= 255)
          v141 = 255;
        v138[3] = v141 & ~(v141 >> 31);
        v142 = (__int16)(v67[84] + (v86 >> 2));
        if (v142 >= 255)
          v142 = 255;
        v138[4] = v142 & ~(v142 >> 31);
        v143 = (__int16)(v67[85] + (v87 >> 2));
        if (v143 >= 255)
          v143 = 255;
        v138[5] = v143 & ~(v143 >> 31);
        v144 = (__int16)(v67[86] + (v89 >> 2));
        if (v144 >= 255)
          v144 = 255;
        v138[6] = v144 & ~(v144 >> 31);
        v145 = (__int16)(v67[87] + (v92 >> 2));
        if (v145 >= 255)
          v145 = 255;
        v138[7] = v145 & ~(v145 >> 31);
        v146 = (__int16)(v67[96] + (v80 >> 2));
        if (v146 >= 255)
          v146 = 255;
        v147 = &v65[v1172];
        v65[v1172] = v146 & ~(v146 >> 31);
        v148 = (__int16)(v67[97] + (v81 >> 2));
        if (v148 >= 255)
          v148 = 255;
        v147[1] = v148 & ~(v148 >> 31);
        v149 = (__int16)(v67[98] + (v82 >> 2));
        if (v149 >= 255)
          v149 = 255;
        v147[2] = v149 & ~(v149 >> 31);
        v150 = (__int16)(v67[99] + (v85 >> 2));
        if (v150 >= 255)
          v150 = 255;
        v147[3] = v150 & ~(v150 >> 31);
        v151 = (__int16)(v67[100] + (v86 >> 2));
        if (v151 >= 255)
          v151 = 255;
        v147[4] = v151 & ~(v151 >> 31);
        v152 = (__int16)(v67[101] + (v87 >> 2));
        if (v152 >= 255)
          v152 = 255;
        v147[5] = v152 & ~(v152 >> 31);
        v153 = (__int16)(v67[102] + (v89 >> 2));
        if (v153 >= 255)
          v153 = 255;
        v147[6] = v153 & ~(v153 >> 31);
        v154 = (__int16)(v67[103] + (v92 >> 2));
        if (v154 >= 255)
          v154 = 255;
        v147[7] = v154 & ~(v154 >> 31);
        v155 = (__int16)(v67[112] + (v80 >> 2));
        if (v155 >= 255)
          v155 = 255;
        v156 = &v65[v45];
        v65[v45] = v155 & ~(v155 >> 31);
        v157 = (__int16)(v67[113] + (v81 >> 2));
        if (v157 >= 255)
          v157 = 255;
        v156[1] = v157 & ~(v157 >> 31);
        v158 = (__int16)(v67[114] + (v82 >> 2));
        if (v158 >= 255)
          v158 = 255;
        v156[2] = v158 & ~(v158 >> 31);
        LOWORD(v159) = v67[115] + (v85 >> 2);
        v37 = v84;
        v44 = v70;
        v18 = v1155;
        v159 = (__int16)v159;
        if ((__int16)v159 >= 255)
          v159 = 255;
        v156[3] = v159 & ~(v159 >> 31);
        v160 = (__int16)(v67[116] + (v86 >> 2));
        if ((__int16)v160 >= 255)
          v160 = 255;
        v156[4] = v160 & ~(v160 >> 31);
        LOWORD(v161) = v67[117] + (v87 >> 2);
        v39 = 4 * v1153;
        v161 = (__int16)v161;
        if ((__int16)v161 >= 255)
          v161 = 255;
        v156[5] = v161 & ~(v161 >> 31);
        v162 = (__int16)(v67[118] + (v89 >> 2));
        if (v162 >= 255)
          v162 = 255;
        v156[6] = v162 & ~(v162 >> 31);
        goto LABEL_862;
      case 1u:
        v67 = (_WORD *)(a2 + 2 * *v37);
        v163 = *(v65 - 1);
        v164 = v65[v1153 - 1];
        v165 = v65[v1174 - 1];
        v166 = v65[v38 - 1];
        v167 = v38;
        v168 = result;
        v169 = v65[v39 - 1];
        v170 = v65[v42 - 1];
        v171 = v65[v41 - 1];
        v172 = v65[v45 - 1];
        v173 = v164 + 2 + v65[-(v60 * v1153) - 1] + 2 * v163;
        v174 = v165 + 2;
        v175 = v44;
        v176 = v165 + 2 + v163 + 2 * v164;
        v177 = v164 + 2 + 2 * v165 + v166;
        v178 = v174 + 2 * v166 + v169;
        v179 = v166 + 2 * v169 + v170 + 2;
        v180 = v169 + 2 * v170;
        result = v168;
        v38 = v167;
        v181 = v180 + v171 + 2;
        v182 = v170 + 2 * v171 + v172 + 2;
        v183 = v171 + v172;
        v42 = 5 * v1153;
        v92 = v183 + 2 * v172 + 2;
        v184 = (__int16)(*v67 + (v173 >> 2));
        if (v184 >= 255)
          v184 = 255;
        *v65 = v184 & ~(v184 >> 31);
        v185 = (__int16)(v67[1] + (v173 >> 2));
        if (v185 >= 255)
          v185 = 255;
        v65[1] = v185 & ~(v185 >> 31);
        v186 = (__int16)(v67[2] + (v173 >> 2));
        if (v186 >= 255)
          v186 = 255;
        v65[2] = v186 & ~(v186 >> 31);
        v187 = (__int16)(v67[3] + (v173 >> 2));
        if (v187 >= 255)
          v187 = 255;
        v65[3] = v187 & ~(v187 >> 31);
        v188 = (__int16)(v67[4] + (v173 >> 2));
        if (v188 >= 255)
          v188 = 255;
        v65[4] = v188 & ~(v188 >> 31);
        v189 = (__int16)(v67[5] + (v173 >> 2));
        if (v189 >= 255)
          v189 = 255;
        v65[5] = v189 & ~(v189 >> 31);
        v190 = (__int16)(v67[6] + (v173 >> 2));
        if (v190 >= 255)
          v190 = 255;
        v65[6] = v190 & ~(v190 >> 31);
        v191 = (__int16)(v67[7] + (v173 >> 2));
        if (v191 >= 255)
          v191 = 255;
        v65[7] = v191 & ~(v191 >> 31);
        v192 = (__int16)(v67[16] + (v176 >> 2));
        if (v192 >= 255)
          v192 = 255;
        v193 = &v65[v1153];
        *v193 = v192 & ~(v192 >> 31);
        v194 = (__int16)(v67[17] + (v176 >> 2));
        if (v194 >= 255)
          v194 = 255;
        v193[1] = v194 & ~(v194 >> 31);
        v195 = (__int16)(v67[18] + (v176 >> 2));
        if (v195 >= 255)
          v195 = 255;
        v193[2] = v195 & ~(v195 >> 31);
        v196 = (__int16)(v67[19] + (v176 >> 2));
        if (v196 >= 255)
          v196 = 255;
        v193[3] = v196 & ~(v196 >> 31);
        v197 = (__int16)(v67[20] + (v176 >> 2));
        if (v197 >= 255)
          v197 = 255;
        v193[4] = v197 & ~(v197 >> 31);
        v198 = (__int16)(v67[21] + (v176 >> 2));
        if (v198 >= 255)
          v198 = 255;
        v193[5] = v198 & ~(v198 >> 31);
        v199 = (__int16)(v67[22] + (v176 >> 2));
        if (v199 >= 255)
          v199 = 255;
        v193[6] = v199 & ~(v199 >> 31);
        v200 = (__int16)(v67[23] + (v176 >> 2));
        if (v200 >= 255)
          v200 = 255;
        v193[7] = v200 & ~(v200 >> 31);
        v201 = (__int16)(v67[32] + (v177 >> 2));
        if (v201 >= 255)
          v201 = 255;
        v202 = &v65[v1174];
        v65[v1174] = v201 & ~(v201 >> 31);
        v203 = (__int16)(v67[33] + (v177 >> 2));
        if (v203 >= 255)
          v203 = 255;
        v202[1] = v203 & ~(v203 >> 31);
        v204 = (__int16)(v67[34] + (v177 >> 2));
        if (v204 >= 255)
          v204 = 255;
        v202[2] = v204 & ~(v204 >> 31);
        v205 = (__int16)(v67[35] + (v177 >> 2));
        if (v205 >= 255)
          v205 = 255;
        v202[3] = v205 & ~(v205 >> 31);
        v206 = (__int16)(v67[36] + (v177 >> 2));
        if (v206 >= 255)
          v206 = 255;
        v202[4] = v206 & ~(v206 >> 31);
        v207 = (__int16)(v67[37] + (v177 >> 2));
        if (v207 >= 255)
          v207 = 255;
        v202[5] = v207 & ~(v207 >> 31);
        v208 = (__int16)(v67[38] + (v177 >> 2));
        if (v208 >= 255)
          v208 = 255;
        v202[6] = v208 & ~(v208 >> 31);
        v209 = (__int16)(v67[39] + (v177 >> 2));
        if (v209 >= 255)
          v209 = 255;
        v202[7] = v209 & ~(v209 >> 31);
        v210 = (__int16)(v67[48] + (v178 >> 2));
        if (v210 >= 255)
          v210 = 255;
        v211 = &v65[v167];
        v65[v167] = v210 & ~(v210 >> 31);
        v212 = (__int16)(v67[49] + (v178 >> 2));
        if (v212 >= 255)
          v212 = 255;
        v211[1] = v212 & ~(v212 >> 31);
        v213 = (__int16)(v67[50] + (v178 >> 2));
        if (v213 >= 255)
          v213 = 255;
        v211[2] = v213 & ~(v213 >> 31);
        v214 = (__int16)(v67[51] + (v178 >> 2));
        if (v214 >= 255)
          v214 = 255;
        v211[3] = v214 & ~(v214 >> 31);
        v215 = (__int16)(v67[52] + (v178 >> 2));
        if (v215 >= 255)
          v215 = 255;
        v211[4] = v215 & ~(v215 >> 31);
        v216 = (__int16)(v67[53] + (v178 >> 2));
        if (v216 >= 255)
          v216 = 255;
        v211[5] = v216 & ~(v216 >> 31);
        v217 = (__int16)(v67[54] + (v178 >> 2));
        if (v217 >= 255)
          v217 = 255;
        v211[6] = v217 & ~(v217 >> 31);
        v218 = (__int16)(v67[55] + (v178 >> 2));
        if (v218 >= 255)
          v218 = 255;
        v211[7] = v218 & ~(v218 >> 31);
        v44 = v175;
        v18 = v1155;
        v219 = (__int16)(v67[64] + (v179 >> 2));
        if (v219 >= 255)
          v219 = 255;
        v220 = &v65[v39];
        v65[v39] = v219 & ~(v219 >> 31);
        v221 = (__int16)(v67[65] + (v179 >> 2));
        if (v221 >= 255)
          v221 = 255;
        v220[1] = v221 & ~(v221 >> 31);
        v222 = (__int16)(v67[66] + (v179 >> 2));
        if (v222 >= 255)
          v222 = 255;
        v220[2] = v222 & ~(v222 >> 31);
        v223 = (__int16)(v67[67] + (v179 >> 2));
        if (v223 >= 255)
          v223 = 255;
        v220[3] = v223 & ~(v223 >> 31);
        v224 = (__int16)(v67[68] + (v179 >> 2));
        if (v224 >= 255)
          v224 = 255;
        v220[4] = v224 & ~(v224 >> 31);
        v225 = (__int16)(v67[69] + (v179 >> 2));
        if (v225 >= 255)
          v225 = 255;
        v220[5] = v225 & ~(v225 >> 31);
        v226 = (__int16)(v67[70] + (v179 >> 2));
        if (v226 >= 255)
          v226 = 255;
        v220[6] = v226 & ~(v226 >> 31);
        v227 = (__int16)(v67[71] + (v179 >> 2));
        if (v227 >= 255)
          v227 = 255;
        v220[7] = v227 & ~(v227 >> 31);
        v228 = (__int16)(v67[80] + (v181 >> 2));
        if (v228 >= 255)
          v228 = 255;
        v229 = &v65[v1175];
        v65[v1175] = v228 & ~(v228 >> 31);
        v230 = (__int16)(v67[81] + (v181 >> 2));
        if (v230 >= 255)
          v230 = 255;
        v229[1] = v230 & ~(v230 >> 31);
        v231 = (__int16)(v67[82] + (v181 >> 2));
        if (v231 >= 255)
          v231 = 255;
        v229[2] = v231 & ~(v231 >> 31);
        v232 = (__int16)(v67[83] + (v181 >> 2));
        if (v232 >= 255)
          v232 = 255;
        v229[3] = v232 & ~(v232 >> 31);
        v233 = (__int16)(v67[84] + (v181 >> 2));
        if (v233 >= 255)
          v233 = 255;
        v229[4] = v233 & ~(v233 >> 31);
        v234 = (__int16)(v67[85] + (v181 >> 2));
        if (v234 >= 255)
          v234 = 255;
        v229[5] = v234 & ~(v234 >> 31);
        v235 = (__int16)(v67[86] + (v181 >> 2));
        if (v235 >= 255)
          v235 = 255;
        v229[6] = v235 & ~(v235 >> 31);
        v236 = (__int16)(v67[87] + (v181 >> 2));
        if (v236 >= 255)
          v236 = 255;
        v229[7] = v236 & ~(v236 >> 31);
        v237 = (__int16)(v67[96] + (v182 >> 2));
        if (v237 >= 255)
          v237 = 255;
        v238 = &v65[v41];
        v65[v41] = v237 & ~(v237 >> 31);
        v239 = (__int16)(v67[97] + (v182 >> 2));
        if (v239 >= 255)
          v239 = 255;
        v238[1] = v239 & ~(v239 >> 31);
        v240 = (__int16)(v67[98] + (v182 >> 2));
        if (v240 >= 255)
          v240 = 255;
        v238[2] = v240 & ~(v240 >> 31);
        v241 = (__int16)(v67[99] + (v182 >> 2));
        if (v241 >= 255)
          v241 = 255;
        v238[3] = v241 & ~(v241 >> 31);
        v242 = (__int16)(v67[100] + (v182 >> 2));
        if (v242 >= 255)
          v242 = 255;
        v238[4] = v242 & ~(v242 >> 31);
        v243 = (__int16)(v67[101] + (v182 >> 2));
        if (v243 >= 255)
          v243 = 255;
        v238[5] = v243 & ~(v243 >> 31);
        v244 = (__int16)(v67[102] + (v182 >> 2));
        if (v244 >= 255)
          v244 = 255;
        v238[6] = v244 & ~(v244 >> 31);
        v245 = (__int16)(v67[103] + (v182 >> 2));
        if (v245 >= 255)
          v245 = 255;
        v238[7] = v245 & ~(v245 >> 31);
        v246 = (__int16)(v67[112] + (v92 >> 2));
        if (v246 >= 255)
          v246 = 255;
        v247 = v246 & ~(v246 >> 31);
        v248 = &v65[v45];
        goto LABEL_849;
      case 2u:
        v249 = v40;
        v250 = (_WORD *)(a2 + 2 * *v37);
        if ((_BYTE)v59)
        {
          v251 = v18;
          v252 = v38;
          v253 = result;
          v254 = v44;
          if ((v59 & 0xFF00) != 0)
          {
            v64.i32[0] = *(_DWORD *)&v65[-v1153 + 1];
            a6.i8[0] = v65[-v1153 - v60];
            a7.i32[0] = *(_DWORD *)&v65[-v1153 + 2];
            a6.i8[4] = v65[-v1153];
            v255 = v65[-v1153 + 7];
            v256 = (uint16x4_t)vmovl_u8(v64).u64[0];
            v257 = (int64x2_t)vmovl_u16(v256);
            v258 = (int32x4_t)vaddw_u16(v43, v256);
            v259.i64[0] = vdupq_laneq_s64(v257, 1).u64[0];
            v259.i32[2] = v65[-v1153 + 5];
            v259.i32[3] = v65[-v1153 + 6];
            v260 = (v259.i32[2] + 2 * v259.i32[3] + v255 + 2) >> 2;
            v261 = (v259.i32[3] + v65[BYTE2(v59) + 7 - v1153] + 2 * v255 + 2) >> 2;
            v262 = *(v65 - 1);
            v263 = v65[v1153 - 1];
            v264 = v65[v1174 - 1];
            v265 = v252;
            v266 = v65[v252 - 1];
            v267 = v65[v39 - 1];
            v268 = v65[v42 - 1];
            v269 = v65[v41 - 1];
            v42 = 5 * v1153;
            *(int32x2_t *)v257.i8 = vdup_lane_s32(*(int32x2_t *)v257.i8, 0);
            a6 = vand_s8(a6, (int8x8_t)0xFF000000FFLL);
            v257.i32[0] = a6.i32[1];
            a7 = (uint8x8_t)vsra_n_u32((uint32x2_t)__PAIR64__(v260, vaddvq_s32((int32x4_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vaddq_s32(v258, (int32x4_t)vshll_n_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(a7), 1uLL)), v259), 2uLL))), (uint32x2_t)vadd_s32(vadd_s32(*(int32x2_t *)v258.i8, (int32x2_t)a6), vadd_s32(*(int32x2_t *)v257.i8, *(int32x2_t *)v257.i8)), 2uLL);
            v270 = (((v264 + 2 + 2 * v266 + v267) >> 2)
                  + ((v266 + 2 * v267 + v268 + 2) >> 2)
                  + ((v267 + 2 * v268 + v269 + 2) >> 2)
                  + ((v268 + 2 * v269 + v65[v45 - 1] + 2) >> 2)
                  + ((v269 + v65[v45 - 1] + 2 * v65[v45 - 1] + 2) >> 2)
                  + vadd_s32((int32x2_t)a7, vdup_lane_s32((int32x2_t)a7, 1)).u32[0]
                  + v261
                  + ((v263 + 2 + v65[-(v60 * v1153) - 1] + 2 * v262) >> 2)
                  + ((v264 + 2 + v262 + 2 * v263) >> 2)
                  + ((v263 + 2 + 2 * v264 + v266) >> 2)
                  + 8) >> 4;
          }
          else
          {
            v1062 = v65[v1153 - 1];
            v1063 = v65[v1174 - 1];
            v265 = v252;
            v1064 = v65[v252 - 1];
            v1065 = v65[v39 - 1];
            v1066 = v65[v42 - 1];
            v1067 = v65[v41 - 1];
            v1068 = v65[v45 - 1];
            v270 = (((v1062
                    + 2
                    + v65[-(v60 * v1153) - 1]
                    + 2 * *(v65 - 1)) >> 2)
                  + ((v1063 + 2 + *(v65 - 1) + 2 * v1062) >> 2)
                  + ((v1062 + 2 + 2 * v1063 + v1064) >> 2)
                  + ((v1063 + 2 + 2 * v1064 + v1065) >> 2)
                  + ((v1064 + 2 * v1065 + v1066 + 2) >> 2)
                  + ((v1065 + 2 * v1066 + v1067 + 2) >> 2)
                  + ((v1066 + 2 * v1067 + v1068 + 2) >> 2)
                  + ((v1067 + v1068 + 2 * v1068 + 2) >> 2)
                  + 4) >> 3;
          }
          v44 = v254;
          result = v253;
          v38 = v265;
          v18 = v251;
        }
        else if ((v59 & 0xFF00) != 0)
        {
          v833 = v65[-v1153 + 5];
          v834 = v65[-v1153 + 6];
          v64.i32[0] = *(_DWORD *)&v65[-v1153 + 1];
          a6.i8[0] = v65[-v1153 - v60];
          a7.i32[0] = *(_DWORD *)&v65[-v1153 + 2];
          a6.i8[4] = v65[-v1153];
          v835 = v65[-v1153 + 7];
          v836 = (uint16x4_t)vmovl_u8(v64).u64[0];
          v837 = (int64x2_t)vmovl_u16(v836);
          v838 = (int32x4_t)vaddw_u16(v43, v836);
          v839.i64[0] = vdupq_laneq_s64(v837, 1).u64[0];
          v839.i64[1] = __PAIR64__(v834, v833);
          a6 = vand_s8(a6, (int8x8_t)0xFF000000FFLL);
          *(int32x2_t *)v837.i8 = vdup_lane_s32(*(int32x2_t *)v837.i8, 0);
          v837.i32[0] = a6.i32[1];
          a7 = (uint8x8_t)vsra_n_u32((uint32x2_t)__PAIR64__((v833 + 2 * v834 + v835 + 2) >> 2, vaddvq_s32((int32x4_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vaddq_s32(v838, (int32x4_t)vshll_n_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(a7), 1uLL)), v839), 2uLL))), (uint32x2_t)vadd_s32(vadd_s32(*(int32x2_t *)v838.i8, (int32x2_t)a6), vadd_s32(*(int32x2_t *)v837.i8, *(int32x2_t *)v837.i8)), 2uLL);
          v270 = (vadd_s32((int32x2_t)a7, vdup_lane_s32((int32x2_t)a7, 1)).u32[0]
                + ((v834 + v65[BYTE2(v59) + 7 - v1153] + 2 * v835 + 2) >> 2)
                + 4) >> 3;
        }
        else
        {
          LOWORD(v270) = 128;
        }
        v1069 = (__int16)(*v250 + v270);
        if (v1069 >= 255)
          v1069 = 255;
        *v65 = v1069 & ~(v1069 >> 31);
        v1070 = (__int16)(v250[1] + v270);
        if (v1070 >= 255)
          v1070 = 255;
        v65[1] = v1070 & ~(v1070 >> 31);
        v1071 = (__int16)(v250[2] + v270);
        if (v1071 >= 255)
          v1071 = 255;
        v65[2] = v1071 & ~(v1071 >> 31);
        v1072 = (__int16)(v250[3] + v270);
        if (v1072 >= 255)
          v1072 = 255;
        v65[3] = v1072 & ~(v1072 >> 31);
        v1073 = (__int16)(v250[4] + v270);
        if (v1073 >= 255)
          v1073 = 255;
        v65[4] = v1073 & ~(v1073 >> 31);
        v1074 = (__int16)(v250[5] + v270);
        if (v1074 >= 255)
          v1074 = 255;
        v65[5] = v1074 & ~(v1074 >> 31);
        v1075 = (__int16)(v250[6] + v270);
        if (v1075 >= 255)
          v1075 = 255;
        v65[6] = v1075 & ~(v1075 >> 31);
        v1076 = (__int16)(v250[7] + v270);
        if (v1076 >= 255)
          v1076 = 255;
        v65[7] = v1076 & ~(v1076 >> 31);
        v1077 = (__int16)(v250[16] + v270);
        if (v1077 >= 255)
          v1077 = 255;
        v1078 = &v65[v1153];
        *v1078 = v1077 & ~(v1077 >> 31);
        v1079 = (__int16)(v250[17] + v270);
        if (v1079 >= 255)
          v1079 = 255;
        v1078[1] = v1079 & ~(v1079 >> 31);
        v1080 = (__int16)(v250[18] + v270);
        if (v1080 >= 255)
          v1080 = 255;
        v1078[2] = v1080 & ~(v1080 >> 31);
        v1081 = (__int16)(v250[19] + v270);
        if (v1081 >= 255)
          v1081 = 255;
        v1078[3] = v1081 & ~(v1081 >> 31);
        v1082 = (__int16)(v250[20] + v270);
        if (v1082 >= 255)
          v1082 = 255;
        v1078[4] = v1082 & ~(v1082 >> 31);
        v1083 = (__int16)(v250[21] + v270);
        if (v1083 >= 255)
          v1083 = 255;
        v1078[5] = v1083 & ~(v1083 >> 31);
        v1084 = (__int16)(v250[22] + v270);
        if (v1084 >= 255)
          v1084 = 255;
        v1078[6] = v1084 & ~(v1084 >> 31);
        v1085 = (__int16)(v250[23] + v270);
        if (v1085 >= 255)
          v1085 = 255;
        v1078[7] = v1085 & ~(v1085 >> 31);
        v1086 = (__int16)(v250[32] + v270);
        if (v1086 >= 255)
          v1086 = 255;
        v1087 = &v65[v1174];
        v65[v1174] = v1086 & ~(v1086 >> 31);
        v1088 = (__int16)(v250[33] + v270);
        if (v1088 >= 255)
          v1088 = 255;
        v1087[1] = v1088 & ~(v1088 >> 31);
        v1089 = (__int16)(v250[34] + v270);
        if (v1089 >= 255)
          v1089 = 255;
        v1087[2] = v1089 & ~(v1089 >> 31);
        v1090 = (__int16)(v250[35] + v270);
        if (v1090 >= 255)
          v1090 = 255;
        v1087[3] = v1090 & ~(v1090 >> 31);
        v1091 = (__int16)(v250[36] + v270);
        if (v1091 >= 255)
          v1091 = 255;
        v1087[4] = v1091 & ~(v1091 >> 31);
        v1092 = (__int16)(v250[37] + v270);
        if (v1092 >= 255)
          v1092 = 255;
        v1087[5] = v1092 & ~(v1092 >> 31);
        v1093 = (__int16)(v250[38] + v270);
        if (v1093 >= 255)
          v1093 = 255;
        v1087[6] = v1093 & ~(v1093 >> 31);
        v1094 = (__int16)(v250[39] + v270);
        if (v1094 >= 255)
          v1094 = 255;
        v1087[7] = v1094 & ~(v1094 >> 31);
        v1095 = (__int16)(v250[48] + v270);
        if (v1095 >= 255)
          v1095 = 255;
        v1096 = &v65[v38];
        v65[v38] = v1095 & ~(v1095 >> 31);
        v1097 = (__int16)(v250[49] + v270);
        if (v1097 >= 255)
          v1097 = 255;
        v1096[1] = v1097 & ~(v1097 >> 31);
        v1098 = (__int16)(v250[50] + v270);
        if (v1098 >= 255)
          v1098 = 255;
        v1096[2] = v1098 & ~(v1098 >> 31);
        v1099 = (__int16)(v250[51] + v270);
        if (v1099 >= 255)
          v1099 = 255;
        v1096[3] = v1099 & ~(v1099 >> 31);
        v1100 = (__int16)(v250[52] + v270);
        if (v1100 >= 255)
          v1100 = 255;
        v1096[4] = v1100 & ~(v1100 >> 31);
        v1101 = (__int16)(v250[53] + v270);
        if (v1101 >= 255)
          v1101 = 255;
        v1096[5] = v1101 & ~(v1101 >> 31);
        v1102 = (__int16)(v250[54] + v270);
        if (v1102 >= 255)
          v1102 = 255;
        v1096[6] = v1102 & ~(v1102 >> 31);
        v1103 = (__int16)(v250[55] + v270);
        if (v1103 >= 255)
          v1103 = 255;
        v1096[7] = v1103 & ~(v1103 >> 31);
        v1104 = (__int16)(v250[64] + v270);
        if (v1104 >= 255)
          v1104 = 255;
        v1105 = &v65[v39];
        v65[v39] = v1104 & ~(v1104 >> 31);
        v1106 = (__int16)(v250[65] + v270);
        if (v1106 >= 255)
          v1106 = 255;
        v1105[1] = v1106 & ~(v1106 >> 31);
        v1107 = (__int16)(v250[66] + v270);
        if (v1107 >= 255)
          v1107 = 255;
        v1105[2] = v1107 & ~(v1107 >> 31);
        v1108 = (__int16)(v250[67] + v270);
        if (v1108 >= 255)
          v1108 = 255;
        v1105[3] = v1108 & ~(v1108 >> 31);
        v1109 = (__int16)(v250[68] + v270);
        if (v1109 >= 255)
          v1109 = 255;
        v1105[4] = v1109 & ~(v1109 >> 31);
        v1110 = (__int16)(v250[69] + v270);
        if (v1110 >= 255)
          v1110 = 255;
        v1105[5] = v1110 & ~(v1110 >> 31);
        v1111 = (__int16)(v250[70] + v270);
        if (v1111 >= 255)
          v1111 = 255;
        v1105[6] = v1111 & ~(v1111 >> 31);
        v1112 = (__int16)(v250[71] + v270);
        if (v1112 >= 255)
          v1112 = 255;
        v1105[7] = v1112 & ~(v1112 >> 31);
        v1113 = (__int16)(v250[80] + v270);
        if (v1113 >= 255)
          v1113 = 255;
        v1114 = &v65[v42];
        v65[v42] = v1113 & ~(v1113 >> 31);
        v1115 = (__int16)(v250[81] + v270);
        if (v1115 >= 255)
          v1115 = 255;
        v1114[1] = v1115 & ~(v1115 >> 31);
        v1116 = (__int16)(v250[82] + v270);
        if (v1116 >= 255)
          v1116 = 255;
        v1114[2] = v1116 & ~(v1116 >> 31);
        v1117 = (__int16)(v250[83] + v270);
        if (v1117 >= 255)
          v1117 = 255;
        v1114[3] = v1117 & ~(v1117 >> 31);
        v1118 = (__int16)(v250[84] + v270);
        if (v1118 >= 255)
          v1118 = 255;
        v1114[4] = v1118 & ~(v1118 >> 31);
        v1119 = (__int16)(v250[85] + v270);
        if (v1119 >= 255)
          v1119 = 255;
        v1114[5] = v1119 & ~(v1119 >> 31);
        v1120 = (__int16)(v250[86] + v270);
        if (v1120 >= 255)
          v1120 = 255;
        v1114[6] = v1120 & ~(v1120 >> 31);
        v1121 = (__int16)(v250[87] + v270);
        if (v1121 >= 255)
          v1121 = 255;
        v1114[7] = v1121 & ~(v1121 >> 31);
        v1122 = (__int16)(v250[96] + v270);
        if (v1122 >= 255)
          v1122 = 255;
        v1123 = &v65[v41];
        v65[v41] = v1122 & ~(v1122 >> 31);
        v1124 = (__int16)(v250[97] + v270);
        if (v1124 >= 255)
          v1124 = 255;
        v1123[1] = v1124 & ~(v1124 >> 31);
        v1125 = (__int16)(v250[98] + v270);
        if (v1125 >= 255)
          v1125 = 255;
        v1123[2] = v1125 & ~(v1125 >> 31);
        v1126 = (__int16)(v250[99] + v270);
        if (v1126 >= 255)
          v1126 = 255;
        v1123[3] = v1126 & ~(v1126 >> 31);
        v1127 = (__int16)(v250[100] + v270);
        if (v1127 >= 255)
          v1127 = 255;
        v1123[4] = v1127 & ~(v1127 >> 31);
        v1128 = (__int16)(v250[101] + v270);
        if (v1128 >= 255)
          v1128 = 255;
        v1123[5] = v1128 & ~(v1128 >> 31);
        v1129 = (__int16)(v250[102] + v270);
        if (v1129 >= 255)
          v1129 = 255;
        v1123[6] = v1129 & ~(v1129 >> 31);
        v1130 = (__int16)(v250[103] + v270);
        if (v1130 >= 255)
          v1130 = 255;
        v1123[7] = v1130 & ~(v1130 >> 31);
        v1131 = (__int16)(v250[112] + v270);
        if (v1131 >= 255)
          v1131 = 255;
        v1132 = &v65[v45];
        v65[v45] = v1131 & ~(v1131 >> 31);
        v1133 = (__int16)(v250[113] + v270);
        if (v1133 >= 255)
          v1133 = 255;
        v1132[1] = v1133 & ~(v1133 >> 31);
        v1134 = (__int16)(v250[114] + v270);
        if (v1134 >= 255)
          v1134 = 255;
        v1132[2] = v1134 & ~(v1134 >> 31);
        v1135 = (__int16)(v250[115] + v270);
        if (v1135 >= 255)
          v1135 = 255;
        v1132[3] = v1135 & ~(v1135 >> 31);
        v1136 = (__int16)(v250[116] + v270);
        if (v1136 >= 255)
          v1136 = 255;
        v1132[4] = v1136 & ~(v1136 >> 31);
        v1137 = (__int16)(v250[117] + v270);
        if (v1137 >= 255)
          v1137 = 255;
        v1132[5] = v1137 & ~(v1137 >> 31);
        v1138 = (__int16)(v250[118] + v270);
        if (v1138 >= 255)
          v1138 = 255;
        v1132[6] = v1138 & ~(v1138 >> 31);
        LOWORD(v270) = v250[119] + v270;
        v40 = v249;
        goto LABEL_1250;
      case 3u:
        v1158 = v44;
        v1163 = v40;
        v1166 = v36;
        v271 = &v65[-v1153];
        v272 = v271[-v60];
        v273 = (_WORD *)(a2 + 2 * *v37);
        v274 = *v271;
        v275 = v271[1];
        v276 = v271[2];
        v277 = v271[3];
        v278 = v271[4];
        v279 = v271[5];
        v280 = v271[6];
        v281 = v271[7];
        v282 = v37;
        if ((_DWORD)v66)
        {
          v283 = v271[8];
          v284 = v271[9];
          v285 = v271[10];
          v286 = v271[11];
          v287 = v271[12];
          v288 = v271[13];
          v289 = v271[14];
          v290 = v271[15];
        }
        else
        {
          v290 = v65[-v1153 + 7];
          v289 = v290;
          v288 = v290;
          v287 = v290;
          v286 = v290;
          v285 = v290;
          v284 = v290;
          v283 = v290;
        }
        v840 = v275 + 2 + v272 + 2 * v274;
        v841 = v276 + 2;
        v842 = v276 + 2 + v274 + 2 * v275;
        v843 = (v275 + 2 + 2 * v276 + v277) >> 2;
        v844 = (v841 + 2 * v277 + v278) >> 2;
        v845 = (v277 + 2 * v278 + v279 + 2) >> 2;
        v846 = v843 + 2;
        v847 = v843 + 2 + (v840 >> 2) + 2 * (v842 >> 2);
        v848 = v844 + 2;
        v849 = v844 + 2 + (v842 >> 2) + 2 * v843;
        v850 = (v278 + 2 * v279 + v280 + 2) >> 2;
        v851 = v279 + 2 * v280 + v281 + 2;
        v852 = v846 + 2 * v844;
        v853 = v851 >> 2;
        v854 = v852 + v845;
        v855 = (v280 + 2 * v281 + v283 + 2) >> 2;
        v856 = v281 + v284 + 2 * v283 + 2;
        v857 = v848 + 2 * v845 + v850;
        v858 = v285 + v283 + 2 * v284 + 2;
        v859 = v845 + 2 * v850 + (v851 >> 2);
        v860 = v850 + 2 * (v851 >> 2) + v855;
        v861 = v286 + 2;
        v862 = v286 + 2 + v284 + 2 * v285;
        v863 = v859 + 2;
        v864 = v860 + 2;
        v865 = v853 + 2 * v855 + (v856 >> 2) + 2;
        v866 = v855 + (v858 >> 2) + 2 * (v856 >> 2) + 2;
        v867 = (v862 >> 2) + 2 * (v858 >> 2) + (v856 >> 2) + 2;
        v868 = (__int16)(*v273 + (v847 >> 2));
        if (v868 >= 255)
          v868 = 255;
        *v65 = v868 & ~(v868 >> 31);
        v869 = (__int16)(v273[1] + (v849 >> 2));
        if (v869 >= 255)
          v869 = 255;
        v65[1] = v869 & ~(v869 >> 31);
        v870 = (__int16)(v273[2] + (v854 >> 2));
        if (v870 >= 255)
          v870 = 255;
        v65[2] = v870 & ~(v870 >> 31);
        v871 = (__int16)(v273[3] + (v857 >> 2));
        if (v871 >= 255)
          v871 = 255;
        v65[3] = v871 & ~(v871 >> 31);
        v872 = (__int16)(v273[4] + (v863 >> 2));
        if (v872 >= 255)
          v872 = 255;
        v65[4] = v872 & ~(v872 >> 31);
        v873 = (__int16)(v273[5] + (v864 >> 2));
        if (v873 >= 255)
          v873 = 255;
        v65[5] = v873 & ~(v873 >> 31);
        v874 = (__int16)(v273[6] + (v865 >> 2));
        if (v874 >= 255)
          v874 = 255;
        v65[6] = v874 & ~(v874 >> 31);
        v875 = (__int16)(v273[7] + (v866 >> 2));
        if (v875 >= 255)
          v875 = 255;
        v65[7] = v875 & ~(v875 >> 31);
        v876 = (__int16)(v273[16] + (v849 >> 2));
        if (v876 >= 255)
          v876 = 255;
        v877 = &v65[v1153];
        *v877 = v876 & ~(v876 >> 31);
        v878 = (__int16)(v273[17] + (v854 >> 2));
        if (v878 >= 255)
          v878 = 255;
        v877[1] = v878 & ~(v878 >> 31);
        v879 = (__int16)(v273[18] + (v857 >> 2));
        if (v879 >= 255)
          v879 = 255;
        v877[2] = v879 & ~(v879 >> 31);
        v880 = (__int16)(v273[19] + (v863 >> 2));
        if (v880 >= 255)
          v880 = 255;
        v877[3] = v880 & ~(v880 >> 31);
        v881 = (__int16)(v273[20] + (v864 >> 2));
        if (v881 >= 255)
          v881 = 255;
        v877[4] = v881 & ~(v881 >> 31);
        v882 = (__int16)(v273[21] + (v865 >> 2));
        if (v882 >= 255)
          v882 = 255;
        v877[5] = v882 & ~(v882 >> 31);
        v883 = (__int16)(v273[22] + (v866 >> 2));
        if (v883 >= 255)
          v883 = 255;
        v877[6] = v883 & ~(v883 >> 31);
        v884 = (__int16)(v273[23] + (v867 >> 2));
        if (v884 >= 255)
          v884 = 255;
        v877[7] = v884 & ~(v884 >> 31);
        v885 = v287 + 2;
        v886 = (v287 + 2 + v285 + 2 * v286) >> 2;
        v887 = v886 + 2;
        v888 = v886 + 2 + 2 * (v862 >> 2) + (v858 >> 2);
        v889 = (__int16)(v273[32] + (v854 >> 2));
        if (v889 >= 255)
          v889 = 255;
        v890 = &v65[v1174];
        v65[v1174] = v889 & ~(v889 >> 31);
        v891 = (__int16)(v273[33] + (v857 >> 2));
        if (v891 >= 255)
          v891 = 255;
        v890[1] = v891 & ~(v891 >> 31);
        v892 = (__int16)(v273[34] + (v863 >> 2));
        if (v892 >= 255)
          v892 = 255;
        v890[2] = v892 & ~(v892 >> 31);
        v893 = (__int16)(v273[35] + (v864 >> 2));
        if (v893 >= 255)
          v893 = 255;
        v890[3] = v893 & ~(v893 >> 31);
        v894 = (__int16)(v273[36] + (v865 >> 2));
        if (v894 >= 255)
          v894 = 255;
        v890[4] = v894 & ~(v894 >> 31);
        v895 = (__int16)(v273[37] + (v866 >> 2));
        if (v895 >= 255)
          v895 = 255;
        v890[5] = v895 & ~(v895 >> 31);
        v896 = (__int16)(v273[38] + (v867 >> 2));
        if (v896 >= 255)
          v896 = 255;
        v890[6] = v896 & ~(v896 >> 31);
        v897 = (__int16)(v273[39] + (v888 >> 2));
        if (v897 >= 255)
          v897 = 255;
        v890[7] = v897 & ~(v897 >> 31);
        v898 = (v861 + v288 + 2 * v287) >> 2;
        v899 = v898 + 2;
        v900 = v898 + 2 + 2 * v886 + (v862 >> 2);
        v901 = (__int16)(v273[48] + (v857 >> 2));
        if (v901 >= 255)
          v901 = 255;
        v902 = &v65[v38];
        v65[v38] = v901 & ~(v901 >> 31);
        v903 = (__int16)(v273[49] + (v863 >> 2));
        if (v903 >= 255)
          v903 = 255;
        v902[1] = v903 & ~(v903 >> 31);
        v904 = (__int16)(v273[50] + (v864 >> 2));
        if (v904 >= 255)
          v904 = 255;
        v902[2] = v904 & ~(v904 >> 31);
        v905 = (__int16)(v273[51] + (v865 >> 2));
        if (v905 >= 255)
          v905 = 255;
        v902[3] = v905 & ~(v905 >> 31);
        v906 = (__int16)(v273[52] + (v866 >> 2));
        if (v906 >= 255)
          v906 = 255;
        v902[4] = v906 & ~(v906 >> 31);
        v907 = (__int16)(v273[53] + (v867 >> 2));
        if (v907 >= 255)
          v907 = 255;
        v902[5] = v907 & ~(v907 >> 31);
        v908 = (__int16)(v273[54] + (v888 >> 2));
        if (v908 >= 255)
          v908 = 255;
        v902[6] = v908 & ~(v908 >> 31);
        v909 = (__int16)(v273[55] + (v900 >> 2));
        if (v909 >= 255)
          v909 = 255;
        v902[7] = v909 & ~(v909 >> 31);
        v910 = v885 + v289 + 2 * v288;
        v911 = v887 + (v910 >> 2) + 2 * v898;
        v912 = (__int16)(v273[64] + (v863 >> 2));
        if (v912 >= 255)
          v912 = 255;
        v39 = 4 * v1153;
        v913 = &v65[v1173];
        v65[v1173] = v912 & ~(v912 >> 31);
        v914 = (__int16)(v273[65] + (v864 >> 2));
        if (v914 >= 255)
          v914 = 255;
        v913[1] = v914 & ~(v914 >> 31);
        v915 = (__int16)(v273[66] + (v865 >> 2));
        if (v915 >= 255)
          v915 = 255;
        v913[2] = v915 & ~(v915 >> 31);
        v916 = (__int16)(v273[67] + (v866 >> 2));
        if (v916 >= 255)
          v916 = 255;
        v913[3] = v916 & ~(v916 >> 31);
        v917 = (__int16)(v273[68] + (v867 >> 2));
        if (v917 >= 255)
          v917 = 255;
        v913[4] = v917 & ~(v917 >> 31);
        v918 = (__int16)(v273[69] + (v888 >> 2));
        if (v918 >= 255)
          v918 = 255;
        v913[5] = v918 & ~(v918 >> 31);
        v919 = (__int16)(v273[70] + (v900 >> 2));
        if (v919 >= 255)
          v919 = 255;
        v913[6] = v919 & ~(v919 >> 31);
        v920 = (__int16)(v273[71] + (v911 >> 2));
        if (v920 >= 255)
          v920 = 255;
        v913[7] = v920 & ~(v920 >> 31);
        v921 = v290 + 2 + v288 + 2 * v289;
        v922 = v899 + (v921 >> 2) + 2 * (v910 >> 2);
        v923 = (__int16)(v273[80] + (v864 >> 2));
        if (v923 >= 255)
          v923 = 255;
        v924 = &v65[v1175];
        v65[v1175] = v923 & ~(v923 >> 31);
        v925 = (__int16)(v273[81] + (v865 >> 2));
        if (v925 >= 255)
          v925 = 255;
        v924[1] = v925 & ~(v925 >> 31);
        v926 = (__int16)(v273[82] + (v866 >> 2));
        if (v926 >= 255)
          v926 = 255;
        v924[2] = v926 & ~(v926 >> 31);
        v927 = (__int16)(v273[83] + (v867 >> 2));
        if (v927 >= 255)
          v927 = 255;
        v924[3] = v927 & ~(v927 >> 31);
        v928 = (__int16)(v273[84] + (v888 >> 2));
        if (v928 >= 255)
          v928 = 255;
        v924[4] = v928 & ~(v928 >> 31);
        v929 = (__int16)(v273[85] + (v900 >> 2));
        if (v929 >= 255)
          v929 = 255;
        v924[5] = v929 & ~(v929 >> 31);
        v930 = (__int16)(v273[86] + (v911 >> 2));
        if (v930 >= 255)
          v930 = 255;
        v924[6] = v930 & ~(v930 >> 31);
        v931 = (__int16)(v273[87] + (v922 >> 2));
        if (v931 >= 255)
          v931 = 255;
        v924[7] = v931 & ~(v931 >> 31);
        v932 = (v290 + 2 + v289 + 2 * v290) >> 2;
        v933 = v932 + 2 + 2 * (v921 >> 2) + (v910 >> 2);
        v42 = 5 * v1153;
        v934 = (__int16)(v273[96] + (v865 >> 2));
        if (v934 >= 255)
          v934 = 255;
        v41 = 6 * v1153;
        v935 = &v65[v1172];
        v65[v1172] = v934 & ~(v934 >> 31);
        v936 = (__int16)(v273[97] + (v866 >> 2));
        if (v936 >= 255)
          v936 = 255;
        v935[1] = v936 & ~(v936 >> 31);
        v937 = (__int16)(v273[98] + (v867 >> 2));
        if (v937 >= 255)
          v937 = 255;
        v935[2] = v937 & ~(v937 >> 31);
        v938 = (__int16)(v273[99] + (v888 >> 2));
        if (v938 >= 255)
          v938 = 255;
        v935[3] = v938 & ~(v938 >> 31);
        v939 = (__int16)(v273[100] + (v900 >> 2));
        if (v939 >= 255)
          v939 = 255;
        v935[4] = v939 & ~(v939 >> 31);
        v940 = (__int16)(v273[101] + (v911 >> 2));
        if (v940 >= 255)
          v940 = 255;
        v935[5] = v940 & ~(v940 >> 31);
        v941 = (__int16)(v273[102] + (v922 >> 2));
        if (v941 >= 255)
          v941 = 255;
        v935[6] = v941 & ~(v941 >> 31);
        v942 = (__int16)(v273[103] + (v933 >> 2));
        if (v942 >= 255)
          v942 = 255;
        v935[7] = v942 & ~(v942 >> 31);
        v943 = (__int16)(v273[112] + (v866 >> 2));
        if (v943 >= 255)
          v943 = 255;
        v944 = &v65[v1154];
        v65[v1154] = v943 & ~(v943 >> 31);
        v945 = (__int16)(v273[113] + (v867 >> 2));
        if (v945 >= 255)
          v945 = 255;
        v944[1] = v945 & ~(v945 >> 31);
        v946 = (__int16)(v273[114] + (v888 >> 2));
        if (v946 >= 255)
          v946 = 255;
        v944[2] = v946 & ~(v946 >> 31);
        v947 = (__int16)(v273[115] + (v900 >> 2));
        if (v947 >= 255)
          v947 = 255;
        v944[3] = v947 & ~(v947 >> 31);
        v948 = (__int16)(v273[116] + (v911 >> 2));
        if (v948 >= 255)
          v948 = 255;
        v944[4] = v948 & ~(v948 >> 31);
        v949 = (__int16)(v273[117] + (v922 >> 2));
        if (v949 >= 255)
          v949 = 255;
        v944[5] = v949 & ~(v949 >> 31);
        v950 = (__int16)(v273[118] + (v933 >> 2));
        if (v950 >= 255)
          v950 = 255;
        v944[6] = v950 & ~(v950 >> 31);
        v270 = (unsigned __int16)v273[119] + ((v932 + 2 + 2 * v932 + (v921 >> 2)) >> 2);
        v18 = v1155;
        v40 = v1163;
        v36 = v1166;
        v37 = v282;
        v45 = 7 * v1153;
        v44 = v1158;
        v17 = v1150;
        result = v1151;
        goto LABEL_1250;
      case 4u:
        v1164 = v40;
        v1167 = v36;
        v291 = (_WORD *)(a2 + 2 * *v37);
        v292 = v65[-v1153];
        v293 = v65[-v1153 + 1];
        v294 = v65[-v1153 + 2];
        v295 = v65[-v1153 + 3];
        v296 = v65[-v1153 + 4];
        v297 = v65[-v1153 + 5];
        v298 = v65[-v1153 + 6];
        v299 = v65[-v1153 + 7];
        v300 = v65[BYTE2(v59) + 7 - v1153];
        v1159 = v44;
        v301 = v65[-v1153 - v60];
        v302 = (v293 + 2 + v301 + 2 * v292) >> 2;
        v303 = (v292 + 2 + 2 * v293 + v294) >> 2;
        v304 = (v293 + 2 + 2 * v294 + v295) >> 2;
        v305 = v294 + 2 * v295 + v296 + 2;
        v306 = v295 + 2 * v296 + v297 + 2;
        v307 = (v296 + 2 * v297 + v298 + 2) >> 2;
        v308 = v297 + 2 * v298 + v299 + 2;
        v309 = v298 + v300 + 2 * v299;
        v310 = *(v65 - 1);
        v311 = v65[v1153 - 1];
        v312 = v311 + 2;
        v313 = v311 + 2 + v65[-(v60 * v1153) - 1] + 2 * v310;
        v314 = v37;
        v315 = v310 + 2 * v311;
        v316 = v292 + 2 + 2 * v301 + v310;
        v317 = v302 + 2;
        v318 = v302 + 2 + 2 * v303 + v304;
        v303 += 2;
        v319 = v303 + 2 * v302;
        v320 = v303 + 2 * v304 + (v305 >> 2);
        v321 = v65[v1174 - 1];
        v322 = v304 + 2 * (v305 >> 2) + (v306 >> 2);
        v323 = v65[v1152 - 1];
        v324 = (v305 >> 2) + 2 * (v306 >> 2) + v307;
        v325 = v65[v1173 - 1];
        v326 = (v306 >> 2) + 2 * v307 + (v308 >> 2);
        v327 = v65[v1175 - 1];
        v328 = v307 + 2 * (v308 >> 2);
        v329 = v65[v1172 - 1];
        v1144 = v65[v1154 - 1];
        v330 = v319 + (v316 >> 2);
        v331 = v317 + 2 * (v316 >> 2) + (v313 >> 2);
        v332 = v315 + v321;
        v37 = v314;
        v333 = v332 + 2;
        v334 = v322 + 2;
        v335 = v324 + 2;
        v336 = v326 + 2;
        v337 = v328 + ((v309 + 2) >> 2) + 2;
        v338 = (v316 >> 2) + 2 * (v313 >> 2) + (v333 >> 2) + 2;
        v339 = (__int16)(*v291 + (v331 >> 2));
        if (v339 >= 255)
          v339 = 255;
        *v65 = v339 & ~(v339 >> 31);
        v340 = (__int16)(v291[1] + (v330 >> 2));
        if (v340 >= 255)
          v340 = 255;
        v65[1] = v340 & ~(v340 >> 31);
        v341 = (__int16)(v291[2] + (v318 >> 2));
        if (v341 >= 255)
          v341 = 255;
        v65[2] = v341 & ~(v341 >> 31);
        v342 = (__int16)(v291[3] + (v320 >> 2));
        if (v342 >= 255)
          v342 = 255;
        v65[3] = v342 & ~(v342 >> 31);
        v343 = (__int16)(v291[4] + (v334 >> 2));
        if (v343 >= 255)
          v343 = 255;
        v65[4] = v343 & ~(v343 >> 31);
        v344 = (__int16)(v291[5] + (v335 >> 2));
        if (v344 >= 255)
          v344 = 255;
        v65[5] = v344 & ~(v344 >> 31);
        v345 = (__int16)(v291[6] + (v336 >> 2));
        if (v345 >= 255)
          v345 = 255;
        v65[6] = v345 & ~(v345 >> 31);
        v346 = (__int16)(v291[7] + (v337 >> 2));
        if (v346 >= 255)
          v346 = 255;
        v65[7] = v346 & ~(v346 >> 31);
        v347 = (__int16)(v291[16] + (v338 >> 2));
        if (v347 >= 255)
          v347 = 255;
        v348 = &v65[v1153];
        *v348 = v347 & ~(v347 >> 31);
        v349 = (__int16)(v291[17] + (v331 >> 2));
        if (v349 >= 255)
          v349 = 255;
        v348[1] = v349 & ~(v349 >> 31);
        v350 = (__int16)(v291[18] + (v330 >> 2));
        if (v350 >= 255)
          v350 = 255;
        v348[2] = v350 & ~(v350 >> 31);
        v351 = (__int16)(v291[19] + (v318 >> 2));
        if (v351 >= 255)
          v351 = 255;
        v348[3] = v351 & ~(v351 >> 31);
        v352 = (__int16)(v291[20] + (v320 >> 2));
        if (v352 >= 255)
          v352 = 255;
        v348[4] = v352 & ~(v352 >> 31);
        v353 = (__int16)(v291[21] + (v334 >> 2));
        if (v353 >= 255)
          v353 = 255;
        v348[5] = v353 & ~(v353 >> 31);
        v354 = (__int16)(v291[22] + (v335 >> 2));
        if (v354 >= 255)
          v354 = 255;
        v348[6] = v354 & ~(v354 >> 31);
        v355 = v333 >> 2;
        v356 = v312 + 2 * v321 + v323;
        v357 = (v313 >> 2) + 2 * (v333 >> 2) + (v356 >> 2) + 2;
        v358 = (__int16)(v291[23] + (v336 >> 2));
        if (v358 >= 255)
          v358 = 255;
        v348[7] = v358 & ~(v358 >> 31);
        v359 = (__int16)(v291[32] + (v357 >> 2));
        if (v359 >= 255)
          v359 = 255;
        v360 = &v65[v1174];
        v65[v1174] = v359 & ~(v359 >> 31);
        v361 = (__int16)(v291[33] + (v338 >> 2));
        if (v361 >= 255)
          v361 = 255;
        v360[1] = v361 & ~(v361 >> 31);
        v362 = (__int16)(v291[34] + (v331 >> 2));
        if (v362 >= 255)
          v362 = 255;
        v360[2] = v362 & ~(v362 >> 31);
        v363 = (__int16)(v291[35] + (v330 >> 2));
        if (v363 >= 255)
          v363 = 255;
        v360[3] = v363 & ~(v363 >> 31);
        v364 = (__int16)(v291[36] + (v318 >> 2));
        if (v364 >= 255)
          v364 = 255;
        v360[4] = v364 & ~(v364 >> 31);
        v365 = (__int16)(v291[37] + (v320 >> 2));
        if (v365 >= 255)
          v365 = 255;
        v360[5] = v365 & ~(v365 >> 31);
        v366 = (__int16)(v291[38] + (v334 >> 2));
        if (v366 >= 255)
          v366 = 255;
        v360[6] = v366 & ~(v366 >> 31);
        LOWORD(v370) = v291[39] + (v335 >> 2);
        v367 = v356 >> 2;
        v368 = v321 + 2 * v323 + v325 + 2;
        v369 = v355 + 2 * v367 + (v368 >> 2) + 2;
        v370 = (__int16)v370;
        if ((__int16)v370 >= 255)
          v370 = 255;
        v360[7] = v370 & ~(v370 >> 31);
        v371 = (__int16)(v291[48] + (v369 >> 2));
        if (v371 >= 255)
          v371 = 255;
        v372 = &v65[v1152];
        v65[v1152] = v371 & ~(v371 >> 31);
        v373 = (__int16)(v291[49] + (v357 >> 2));
        if (v373 >= 255)
          v373 = 255;
        v372[1] = v373 & ~(v373 >> 31);
        v374 = (__int16)(v291[50] + (v338 >> 2));
        if (v374 >= 255)
          v374 = 255;
        v372[2] = v374 & ~(v374 >> 31);
        v375 = (__int16)(v291[51] + (v331 >> 2));
        if (v375 >= 255)
          v375 = 255;
        v372[3] = v375 & ~(v375 >> 31);
        v376 = (__int16)(v291[52] + (v330 >> 2));
        if (v376 >= 255)
          v376 = 255;
        v372[4] = v376 & ~(v376 >> 31);
        v377 = (__int16)(v291[53] + (v318 >> 2));
        if (v377 >= 255)
          v377 = 255;
        v372[5] = v377 & ~(v377 >> 31);
        v378 = (__int16)(v291[54] + (v320 >> 2));
        if (v378 >= 255)
          v378 = 255;
        v372[6] = v378 & ~(v378 >> 31);
        LOWORD(v383) = v291[55] + (v334 >> 2);
        v379 = v368 >> 2;
        v380 = v323 + 2 * v325;
        v17 = v1150;
        v38 = 3 * v1153;
        v18 = v1155;
        v381 = v380 + v327 + 2;
        v382 = v367 + 2 * v379 + (v381 >> 2) + 2;
        v383 = (__int16)v383;
        if ((__int16)v383 >= 255)
          v383 = 255;
        v372[7] = v383 & ~(v383 >> 31);
        v384 = (__int16)(v291[64] + (v382 >> 2));
        if (v384 >= 255)
          v384 = 255;
        v385 = &v65[v1173];
        v65[v1173] = v384 & ~(v384 >> 31);
        v386 = (__int16)(v291[65] + (v369 >> 2));
        if (v386 >= 255)
          v386 = 255;
        v385[1] = v386 & ~(v386 >> 31);
        v387 = (__int16)(v291[66] + (v357 >> 2));
        if (v387 >= 255)
          v387 = 255;
        v385[2] = v387 & ~(v387 >> 31);
        v388 = (__int16)(v291[67] + (v338 >> 2));
        if (v388 >= 255)
          v388 = 255;
        v385[3] = v388 & ~(v388 >> 31);
        v389 = (__int16)(v291[68] + (v331 >> 2));
        if (v389 >= 255)
          v389 = 255;
        v385[4] = v389 & ~(v389 >> 31);
        v390 = (__int16)(v291[69] + (v330 >> 2));
        if (v390 >= 255)
          v390 = 255;
        v385[5] = v390 & ~(v390 >> 31);
        v391 = (__int16)(v291[70] + (v318 >> 2));
        if (v391 >= 255)
          v391 = 255;
        v385[6] = v391 & ~(v391 >> 31);
        LOWORD(v396) = v291[71] + (v320 >> 2);
        v36 = v1167;
        v392 = v381 >> 2;
        v393 = v325 + 2 * v327;
        v39 = 4 * v1153;
        v394 = v393 + v329 + 2;
        v395 = v379 + 2 * v392 + (v394 >> 2) + 2;
        v396 = (__int16)v396;
        if ((__int16)v396 >= 255)
          v396 = 255;
        v385[7] = v396 & ~(v396 >> 31);
        v397 = (__int16)(v291[80] + (v395 >> 2));
        if (v397 >= 255)
          v397 = 255;
        v398 = &v65[v1175];
        v65[v1175] = v397 & ~(v397 >> 31);
        v399 = (__int16)(v291[81] + (v382 >> 2));
        if (v399 >= 255)
          v399 = 255;
        v398[1] = v399 & ~(v399 >> 31);
        v400 = (__int16)(v291[82] + (v369 >> 2));
        if (v400 >= 255)
          v400 = 255;
        v398[2] = v400 & ~(v400 >> 31);
        v401 = (__int16)(v291[83] + (v357 >> 2));
        if (v401 >= 255)
          v401 = 255;
        v398[3] = v401 & ~(v401 >> 31);
        v402 = (__int16)(v291[84] + (v338 >> 2));
        if (v402 >= 255)
          v402 = 255;
        v398[4] = v402 & ~(v402 >> 31);
        v403 = (__int16)(v291[85] + (v331 >> 2));
        if (v403 >= 255)
          v403 = 255;
        v398[5] = v403 & ~(v403 >> 31);
        v404 = (__int16)(v291[86] + (v330 >> 2));
        if (v404 >= 255)
          v404 = 255;
        v398[6] = v404 & ~(v404 >> 31);
        LOWORD(v408) = v291[87] + (v318 >> 2);
        v405 = v394 >> 2;
        v41 = 6 * v1153;
        v406 = v327 + 2 * v329 + v1144 + 2;
        v407 = v392 + 2 * v405 + (v406 >> 2) + 2;
        v408 = (__int16)v408;
        if ((__int16)v408 >= 255)
          v408 = 255;
        v398[7] = v408 & ~(v408 >> 31);
        v42 = 5 * v1153;
        v409 = (__int16)(v291[96] + (v407 >> 2));
        if (v409 >= 255)
          v409 = 255;
        v410 = &v65[v1172];
        v65[v1172] = v409 & ~(v409 >> 31);
        v411 = (__int16)(v291[97] + (v395 >> 2));
        if (v411 >= 255)
          v411 = 255;
        v410[1] = v411 & ~(v411 >> 31);
        v412 = (__int16)(v291[98] + (v382 >> 2));
        if (v412 >= 255)
          v412 = 255;
        v410[2] = v412 & ~(v412 >> 31);
        v413 = (__int16)(v291[99] + (v369 >> 2));
        if (v413 >= 255)
          v413 = 255;
        v410[3] = v413 & ~(v413 >> 31);
        v414 = (__int16)(v291[100] + (v357 >> 2));
        if (v414 >= 255)
          v414 = 255;
        v410[4] = v414 & ~(v414 >> 31);
        v415 = (__int16)(v291[101] + (v338 >> 2));
        if (v415 >= 255)
          v415 = 255;
        v410[5] = v415 & ~(v415 >> 31);
        v416 = (__int16)(v291[102] + (v331 >> 2));
        if (v416 >= 255)
          v416 = 255;
        v410[6] = v416 & ~(v416 >> 31);
        v417 = (__int16)(v291[103] + (v330 >> 2));
        if (v417 >= 255)
          v417 = 255;
        v410[7] = v417 & ~(v417 >> 31);
        result = v1151;
        v418 = (__int16)(v291[112]
                       + ((v405 + 2 * (v406 >> 2) + ((v329 + v1144 + 2 * v1144 + 2) >> 2) + 2) >> 2));
        if (v418 >= 255)
          v418 = 255;
        v45 = 7 * v1153;
        v419 = &v65[v1154];
        v65[v1154] = v418 & ~(v418 >> 31);
        LOWORD(v420) = v291[113] + (v407 >> 2);
        v44 = v1159;
        v420 = (__int16)v420;
        if ((__int16)v420 >= 255)
          v420 = 255;
        v419[1] = v420 & ~(v420 >> 31);
        v421 = (__int16)(v291[114] + (v395 >> 2));
        if (v421 >= 255)
          v421 = 255;
        v419[2] = v421 & ~(v421 >> 31);
        v422 = (__int16)(v291[115] + (v382 >> 2));
        if (v422 >= 255)
          v422 = 255;
        v419[3] = v422 & ~(v422 >> 31);
        v423 = (__int16)(v291[116] + (v369 >> 2));
        if (v423 >= 255)
          v423 = 255;
        v419[4] = v423 & ~(v423 >> 31);
        v424 = (__int16)(v291[117] + (v357 >> 2));
        if ((__int16)v424 >= 255)
          v424 = 255;
        v419[5] = v424 & ~(v424 >> 31);
        v425 = (__int16)(v291[118] + (v338 >> 2));
        if (v425 >= 255)
          v425 = 255;
        v419[6] = v425 & ~(v425 >> 31);
        goto LABEL_731;
      case 5u:
        v426 = *v37;
        v427 = v65[-v1153];
        v428 = v65[-v1153 + 1];
        v429 = v65[-v1153 + 2];
        v430 = v65[-v1153 + 3];
        v431 = v65[-v1153 + 4];
        v432 = v65[-v1153 + 5];
        v1148 = v37;
        v433 = v65[-v1153 + 6];
        v434 = v65[-v1153 + 7];
        v1160 = v44;
        v1164 = v40;
        v291 = (_WORD *)(a2 + 2 * v426);
        v435 = v65[v66 + 7 - v1153];
        v436 = v65[-v1153 - v60];
        v437 = (v428 + 2 + v436 + 2 * v427) >> 2;
        v1168 = v36;
        v438 = v427 + 2;
        v439 = v427 + 2 + 2 * v428 + v429;
        v440 = (v428 + 2 + 2 * v429 + v430) >> 2;
        v441 = (v429 + 2 * v430 + v431 + 2) >> 2;
        v442 = (v430 + 2 * v431 + v432 + 2) >> 2;
        v443 = (v431 + 2 * v432 + v433 + 2) >> 2;
        v444 = (v432 + 2 * v433 + v434 + 2) >> 2;
        v445 = v433 + v435 + 2 * v434 + 2;
        v446 = *(v65 - 1);
        v447 = v65[v1153 - 1];
        v448 = v65[v1174 - 1];
        v449 = v65[v38 - 1];
        v1140 = v65[v1173 - 1];
        v1141 = v65[v1175 - 1];
        v1142 = v65[v1172 - 1];
        v1145 = v65[v1154 - 1];
        v450 = v447 + 2;
        v451 = v447 + 2 + v65[-(v60 * v1153) - 1] + 2 * v446;
        v452 = v446 + 2 * v447;
        v453 = v438 + 2 * v436 + v446;
        v454 = v437 + 1 + (v453 >> 2);
        v455 = v437 + 1 + (v439 >> 2);
        v456 = v437 + 2;
        v457 = v437 + 2 + 2 * (v439 >> 2) + v440;
        v458 = (v439 >> 2) + v440;
        v459 = (v439 >> 2) + 2;
        v460 = v459 + 2 * v437 + (v453 >> 2);
        v461 = v453 >> 2;
        v462 = v458 + 1;
        v463 = v459 + 2 * v440 + v441;
        v464 = v440 + v441 + 1;
        v465 = v440 + 2 * v441 + v442;
        v466 = v441 + v442 + 1;
        v467 = v441 + 2 * v442 + v443;
        v468 = v442 + v443 + 1;
        v469 = v442 + 2 * v443 + v444;
        v470 = v443 + v444 + 1;
        v471 = v443 + 2 * v444;
        v472 = v444 + (v445 >> 2) + 1;
        v331 = v465 + 2;
        v473 = v467 + 2;
        v474 = v469 + 2;
        v475 = v471 + (v445 >> 2) + 2;
        v476 = v456 + 2 * v461 + (v451 >> 2);
        v477 = (__int16)(*v291 + (v454 >> 1));
        if (v477 >= 255)
          v477 = 255;
        *v65 = v477 & ~(v477 >> 31);
        v478 = (__int16)(v291[1] + (v455 >> 1));
        if (v478 >= 255)
          v478 = 255;
        v65[1] = v478 & ~(v478 >> 31);
        v479 = (__int16)(v291[2] + (v462 >> 1));
        if (v479 >= 255)
          v479 = 255;
        v65[2] = v479 & ~(v479 >> 31);
        v480 = (__int16)(v291[3] + (v464 >> 1));
        if (v480 >= 255)
          v480 = 255;
        v65[3] = v480 & ~(v480 >> 31);
        v481 = (__int16)(v291[4] + (v466 >> 1));
        if (v481 >= 255)
          v481 = 255;
        v65[4] = v481 & ~(v481 >> 31);
        v482 = (__int16)(v291[5] + (v468 >> 1));
        if (v482 >= 255)
          v482 = 255;
        v65[5] = v482 & ~(v482 >> 31);
        v483 = (__int16)(v291[6] + (v470 >> 1));
        if (v483 >= 255)
          v483 = 255;
        v65[6] = v483 & ~(v483 >> 31);
        v484 = (__int16)(v291[7] + (v472 >> 1));
        if (v484 >= 255)
          v484 = 255;
        v65[7] = v484 & ~(v484 >> 31);
        v485 = (__int16)(v291[16] + (v476 >> 2));
        if (v485 >= 255)
          v485 = 255;
        v486 = &v65[v1153];
        *v486 = v485 & ~(v485 >> 31);
        v487 = (__int16)(v291[17] + (v460 >> 2));
        if (v487 >= 255)
          v487 = 255;
        v486[1] = v487 & ~(v487 >> 31);
        v488 = (__int16)(v291[18] + (v457 >> 2));
        if (v488 >= 255)
          v488 = 255;
        v486[2] = v488 & ~(v488 >> 31);
        v489 = (__int16)(v291[19] + (v463 >> 2));
        if (v489 >= 255)
          v489 = 255;
        v486[3] = v489 & ~(v489 >> 31);
        v490 = (__int16)(v291[20] + (v331 >> 2));
        if (v490 >= 255)
          v490 = 255;
        v486[4] = v490 & ~(v490 >> 31);
        v491 = (__int16)(v291[21] + (v473 >> 2));
        if (v491 >= 255)
          v491 = 255;
        v486[5] = v491 & ~(v491 >> 31);
        v492 = (__int16)(v291[22] + (v474 >> 2));
        if (v492 >= 255)
          v492 = 255;
        v486[6] = v492 & ~(v492 >> 31);
        v493 = v451 >> 2;
        v494 = v452 + v448 + 2;
        v495 = v461 + 2 * (v451 >> 2) + (v494 >> 2) + 2;
        v496 = (__int16)(v291[23] + (v475 >> 2));
        if (v496 >= 255)
          v496 = 255;
        v486[7] = v496 & ~(v496 >> 31);
        v497 = (__int16)(v291[32] + (v495 >> 2));
        if (v497 >= 255)
          v497 = 255;
        v498 = &v65[v1174];
        v65[v1174] = v497 & ~(v497 >> 31);
        v499 = (__int16)(v291[33] + (v454 >> 1));
        if (v499 >= 255)
          v499 = 255;
        v498[1] = v499 & ~(v499 >> 31);
        v500 = (__int16)(v291[34] + (v455 >> 1));
        if (v500 >= 255)
          v500 = 255;
        v498[2] = v500 & ~(v500 >> 31);
        v501 = (__int16)(v291[35] + (v462 >> 1));
        if (v501 >= 255)
          v501 = 255;
        v498[3] = v501 & ~(v501 >> 31);
        v502 = (__int16)(v291[36] + (v464 >> 1));
        if (v502 >= 255)
          v502 = 255;
        v498[4] = v502 & ~(v502 >> 31);
        v503 = (__int16)(v291[37] + (v466 >> 1));
        if (v503 >= 255)
          v503 = 255;
        v498[5] = v503 & ~(v503 >> 31);
        v504 = (__int16)(v291[38] + (v468 >> 1));
        if (v504 >= 255)
          v504 = 255;
        v498[6] = v504 & ~(v504 >> 31);
        v505 = v450 + 2 * v448 + v449;
        v506 = v493 + 2 * (v494 >> 2) + (v505 >> 2) + 2;
        v507 = (__int16)(v291[39] + (v470 >> 1));
        if ((__int16)v507 >= 255)
          v507 = 255;
        v498[7] = v507 & ~(v507 >> 31);
        v508 = (__int16)(v291[48] + (v506 >> 2));
        if (v508 >= 255)
          v508 = 255;
        v509 = &v65[v1152];
        v65[v1152] = v508 & ~(v508 >> 31);
        v510 = (__int16)(v291[49] + (v476 >> 2));
        if (v510 >= 255)
          v510 = 255;
        v509[1] = v510 & ~(v510 >> 31);
        v511 = (__int16)(v291[50] + (v460 >> 2));
        if (v511 >= 255)
          v511 = 255;
        v509[2] = v511 & ~(v511 >> 31);
        v512 = (__int16)(v291[51] + (v457 >> 2));
        if (v512 >= 255)
          v512 = 255;
        v509[3] = v512 & ~(v512 >> 31);
        v513 = (__int16)(v291[52] + (v463 >> 2));
        if (v513 >= 255)
          v513 = 255;
        v509[4] = v513 & ~(v513 >> 31);
        v514 = (__int16)(v291[53] + (v331 >> 2));
        if (v514 >= 255)
          v514 = 255;
        v509[5] = v514 & ~(v514 >> 31);
        v515 = (__int16)(v291[54] + (v473 >> 2));
        if (v515 >= 255)
          v515 = 255;
        v509[6] = v515 & ~(v515 >> 31);
        v516 = v505 >> 2;
        v517 = v448 + 2 * v449 + v1140 + 2;
        v518 = (v494 >> 2) + 2 * v516 + (v517 >> 2) + 2;
        v519 = (__int16)(v291[55] + (v474 >> 2));
        if (v519 >= 255)
          v519 = 255;
        v509[7] = v519 & ~(v519 >> 31);
        v520 = (__int16)(v291[64] + (v518 >> 2));
        if (v520 >= 255)
          v520 = 255;
        v521 = &v65[v1173];
        v65[v1173] = v520 & ~(v520 >> 31);
        v522 = (__int16)(v291[65] + (v495 >> 2));
        if (v522 >= 255)
          v522 = 255;
        v521[1] = v522 & ~(v522 >> 31);
        v523 = (__int16)(v291[66] + (v454 >> 1));
        if (v523 >= 255)
          v523 = 255;
        v521[2] = v523 & ~(v523 >> 31);
        v524 = (__int16)(v291[67] + (v455 >> 1));
        if (v524 >= 255)
          v524 = 255;
        v521[3] = v524 & ~(v524 >> 31);
        v525 = (__int16)(v291[68] + (v462 >> 1));
        if (v525 >= 255)
          v525 = 255;
        v521[4] = v525 & ~(v525 >> 31);
        v526 = (__int16)(v291[69] + (v464 >> 1));
        if (v526 >= 255)
          v526 = 255;
        v521[5] = v526 & ~(v526 >> 31);
        v527 = (__int16)(v291[70] + (v466 >> 1));
        if (v527 >= 255)
          v527 = 255;
        v521[6] = v527 & ~(v527 >> 31);
        v528 = v517 >> 2;
        v529 = v449 + 2 * v1140 + v1141 + 2;
        v530 = v516 + 2 * (v517 >> 2) + (v529 >> 2) + 2;
        v531 = (__int16)(v291[71] + (v468 >> 1));
        if (v531 >= 255)
          v531 = 255;
        v521[7] = v531 & ~(v531 >> 31);
        v41 = 6 * v1153;
        v532 = (__int16)(v291[80] + (v530 >> 2));
        if (v532 >= 255)
          v532 = 255;
        v533 = &v65[v1175];
        v65[v1175] = v532 & ~(v532 >> 31);
        v534 = (__int16)(v291[81] + (v506 >> 2));
        if (v534 >= 255)
          v534 = 255;
        v533[1] = v534 & ~(v534 >> 31);
        v535 = (__int16)(v291[82] + (v476 >> 2));
        if (v535 >= 255)
          v535 = 255;
        v533[2] = v535 & ~(v535 >> 31);
        v536 = (__int16)(v291[83] + (v460 >> 2));
        if (v536 >= 255)
          v536 = 255;
        v533[3] = v536 & ~(v536 >> 31);
        v537 = (__int16)(v291[84] + (v457 >> 2));
        if (v537 >= 255)
          v537 = 255;
        v533[4] = v537 & ~(v537 >> 31);
        v538 = (__int16)(v291[85] + (v463 >> 2));
        if (v538 >= 255)
          v538 = 255;
        v533[5] = v538 & ~(v538 >> 31);
        v539 = (__int16)(v291[86] + (v331 >> 2));
        if (v539 >= 255)
          v539 = 255;
        v533[6] = v539 & ~(v539 >> 31);
        v540 = (__int16)(v291[87] + (v473 >> 2));
        if (v540 >= 255)
          v540 = 255;
        v533[7] = v540 & ~(v540 >> 31);
        v541 = v529 >> 2;
        v542 = v1140 + 2 * v1141 + v1142 + 2;
        v543 = (__int16)(v291[96] + ((v528 + 2 * v541 + (v542 >> 2) + 2) >> 2));
        if (v543 >= 255)
          v543 = 255;
        v544 = &v65[v1172];
        v65[v1172] = v543 & ~(v543 >> 31);
        v545 = (__int16)(v291[97] + (v518 >> 2));
        if (v545 >= 255)
          v545 = 255;
        v544[1] = v545 & ~(v545 >> 31);
        v546 = (__int16)(v291[98] + (v495 >> 2));
        if (v546 >= 255)
          v546 = 255;
        v544[2] = v546 & ~(v546 >> 31);
        LOWORD(v547) = v291[99] + (v454 >> 1);
        v44 = v1160;
        v547 = (__int16)v547;
        if ((__int16)v547 >= 255)
          v547 = 255;
        v544[3] = v547 & ~(v547 >> 31);
        v548 = (__int16)(v291[100] + (v455 >> 1));
        if (v548 >= 255)
          v548 = 255;
        v544[4] = v548 & ~(v548 >> 31);
        LOWORD(v549) = v291[101] + (v462 >> 1);
        v36 = v1168;
        v549 = (__int16)v549;
        if ((__int16)v549 >= 255)
          v549 = 255;
        v544[5] = v549 & ~(v549 >> 31);
        v550 = (__int16)(v291[102] + (v464 >> 1));
        if (v550 >= 255)
          v550 = 255;
        v544[6] = v550 & ~(v550 >> 31);
        v551 = (__int16)(v291[103] + (v466 >> 1));
        if (v551 >= 255)
          v551 = 255;
        v544[7] = v551 & ~(v551 >> 31);
        v552 = v542 >> 2;
        v42 = 5 * v1153;
        v553 = (__int16)(v291[112] + ((v541 + 2 * v552 + ((v1141 + 2 * v1142 + v1145 + 2) >> 2) + 2) >> 2));
        if (v553 >= 255)
          v553 = 255;
        v45 = 7 * v1153;
        v554 = &v65[v1154];
        v65[v1154] = v553 & ~(v553 >> 31);
        v555 = (__int16)(v291[113] + (v530 >> 2));
        if (v555 >= 255)
          v555 = 255;
        v554[1] = v555 & ~(v555 >> 31);
        v556 = (__int16)(v291[114] + (v506 >> 2));
        if (v556 >= 255)
          v556 = 255;
        v554[2] = v556 & ~(v556 >> 31);
        v557 = (__int16)(v291[115] + (v476 >> 2));
        if ((__int16)v557 >= 255)
          v557 = 255;
        v554[3] = v557 & ~(v557 >> 31);
        v558 = (__int16)(v291[116] + (v460 >> 2));
        if (v558 >= 255)
          v558 = 255;
        v554[4] = v558 & ~(v558 >> 31);
        LOWORD(v559) = v291[117] + (v457 >> 2);
        v18 = v1155;
        v17 = v1150;
        v39 = 4 * v1153;
        result = v1151;
        v38 = 3 * v1153;
        v559 = (__int16)v559;
        if ((__int16)v559 >= 255)
          v559 = 255;
        v554[5] = v559 & ~(v559 >> 31);
        LOWORD(v560) = v291[118] + (v463 >> 2);
        v37 = v1148;
        v560 = (__int16)v560;
        if ((__int16)v560 >= 255)
          v560 = 255;
        v554[6] = v560 & ~(v560 >> 31);
        goto LABEL_731;
      case 6u:
        v1161 = v44;
        v1164 = v40;
        v291 = (_WORD *)(a2 + 2 * *v37);
        v561 = v65[-v1153 - v60];
        v562 = v65[-v1153];
        v563 = v65[-v1153 + 1];
        v564 = v65[-v1153 + 2];
        v565 = v65[-v1153 + 3];
        v566 = v65[-v1153 + 4];
        v567 = v65[-v1153 + 5];
        v568 = v65[-v1153 + 6];
        v569 = (v563 + 2 + v561 + 2 * v562) >> 2;
        v570 = v562 + 2;
        v571 = (v562 + 2 + 2 * v563 + v564) >> 2;
        v572 = (v563 + 2 + 2 * v564 + v565) >> 2;
        v573 = v564 + 2 * v565 + v566 + 2;
        v574 = v565 + 2 * v566 + v567 + 2;
        v1169 = v36;
        v575 = (v566 + 2 * v567 + v568 + 2) >> 2;
        v576 = v567 + 2 * v568 + v65[-v1153 + 7] + 2;
        v577 = *(v65 - 1);
        v578 = v65[v1153 - 1];
        v579 = v65[v1174 - 1];
        v580 = v65[v38 - 1];
        v581 = v578 + 2;
        v582 = v37;
        v583 = v578 + 2 + v65[-(v60 * v1153) - 1] + 2 * v577;
        v584 = v577 + 2 * v578;
        v585 = v570 + 2 * v561 + v577;
        v586 = v569 + 2;
        v587 = v569 + 2 + 2 * v571 + v572;
        v588 = v65[v1173 - 1];
        v571 += 2;
        v589 = v571 + 2 * v569;
        v590 = v571 + 2 * v572 + (v573 >> 2);
        v591 = v65[v1175 - 1];
        v592 = v572 + 2 * (v573 >> 2) + (v574 >> 2);
        v593 = v65[v1172 - 1];
        v594 = v65[v45 - 1];
        v595 = (v573 >> 2) + 2 * (v574 >> 2) + v575;
        v596 = v586 + 2 * (v585 >> 2) + (v583 >> 2);
        v597 = v583 >> 2;
        v598 = (v574 >> 2) + 2 * v575;
        v599 = (v583 >> 2) + 1;
        v600 = v589 + (v585 >> 2);
        v601 = v599 + (v585 >> 2);
        v602 = v592 + 2;
        v603 = v598 + (v576 >> 2);
        v604 = (__int16)(*v291 + (v601 >> 1));
        if (v604 >= 255)
          v604 = 255;
        *v65 = v604 & ~(v604 >> 31);
        v605 = (__int16)(v291[1] + (v596 >> 2));
        if (v605 >= 255)
          v605 = 255;
        v65[1] = v605 & ~(v605 >> 31);
        v606 = (__int16)(v291[2] + (v600 >> 2));
        if (v606 >= 255)
          v606 = 255;
        v65[2] = v606 & ~(v606 >> 31);
        v607 = (__int16)(v291[3] + (v587 >> 2));
        if (v607 >= 255)
          v607 = 255;
        v65[3] = v607 & ~(v607 >> 31);
        v608 = (__int16)(v291[4] + (v590 >> 2));
        if (v608 >= 255)
          v608 = 255;
        v65[4] = v608 & ~(v608 >> 31);
        v609 = (__int16)(v291[5] + (v602 >> 2));
        if (v609 >= 255)
          v609 = 255;
        v65[5] = v609 & ~(v609 >> 31);
        v610 = v584 + v579 + 2;
        v611 = v599 + (v610 >> 2);
        v37 = v582;
        v38 = 3 * v1153;
        v612 = (v585 >> 2) + 2 * v597 + (v610 >> 2) + 2;
        v613 = v603 + 2;
        v614 = (__int16)(v291[6] + ((v595 + 2) >> 2));
        if (v614 >= 255)
          v614 = 255;
        v65[6] = v614 & ~(v614 >> 31);
        v615 = (__int16)(v291[7] + (v613 >> 2));
        if (v615 >= 255)
          v615 = 255;
        v65[7] = v615 & ~(v615 >> 31);
        v616 = (__int16)(v291[16] + (v611 >> 1));
        if (v616 >= 255)
          v616 = 255;
        v617 = &v65[v1153];
        *v617 = v616 & ~(v616 >> 31);
        v618 = (__int16)(v291[17] + (v612 >> 2));
        if (v618 >= 255)
          v618 = 255;
        v617[1] = v618 & ~(v618 >> 31);
        v619 = (__int16)(v291[18] + (v601 >> 1));
        if (v619 >= 255)
          v619 = 255;
        v617[2] = v619 & ~(v619 >> 31);
        v620 = (__int16)(v291[19] + (v596 >> 2));
        if (v620 >= 255)
          v620 = 255;
        v617[3] = v620 & ~(v620 >> 31);
        v621 = (__int16)(v291[20] + (v600 >> 2));
        if (v621 >= 255)
          v621 = 255;
        v617[4] = v621 & ~(v621 >> 31);
        v622 = (__int16)(v291[21] + (v587 >> 2));
        if (v622 >= 255)
          v622 = 255;
        v617[5] = v622 & ~(v622 >> 31);
        v623 = v610 >> 2;
        v624 = v581 + 2 * v579 + v580;
        v625 = (__int16)(v291[22] + (v590 >> 2));
        if (v625 >= 255)
          v625 = 255;
        v617[6] = v625 & ~(v625 >> 31);
        v626 = v623 + (v624 >> 2) + 1;
        v627 = v597 + 2 * v623 + (v624 >> 2) + 2;
        v628 = (__int16)(v291[23] + (v602 >> 2));
        if (v628 >= 255)
          v628 = 255;
        v617[7] = v628 & ~(v628 >> 31);
        v629 = (__int16)(v291[32] + (v626 >> 1));
        if (v629 >= 255)
          v629 = 255;
        v630 = &v65[v1174];
        v65[v1174] = v629 & ~(v629 >> 31);
        v631 = (__int16)(v291[33] + (v627 >> 2));
        if (v631 >= 255)
          v631 = 255;
        v630[1] = v631 & ~(v631 >> 31);
        v632 = (__int16)(v291[34] + (v611 >> 1));
        if (v632 >= 255)
          v632 = 255;
        v630[2] = v632 & ~(v632 >> 31);
        v633 = (__int16)(v291[35] + (v612 >> 2));
        if (v633 >= 255)
          v633 = 255;
        v630[3] = v633 & ~(v633 >> 31);
        v634 = (__int16)(v291[36] + (v601 >> 1));
        if (v634 >= 255)
          v634 = 255;
        v630[4] = v634 & ~(v634 >> 31);
        v635 = (__int16)(v291[37] + (v596 >> 2));
        if (v635 >= 255)
          v635 = 255;
        v630[5] = v635 & ~(v635 >> 31);
        v636 = v624 >> 2;
        v637 = v579 + 2 * v580 + v588 + 2;
        v638 = (__int16)(v291[38] + (v600 >> 2));
        if (v638 >= 255)
          v638 = 255;
        v630[6] = v638 & ~(v638 >> 31);
        v639 = v636 + (v637 >> 2) + 1;
        v640 = v623 + 2 * v636 + (v637 >> 2) + 2;
        v641 = (__int16)(v291[39] + (v587 >> 2));
        if (v641 >= 255)
          v641 = 255;
        v630[7] = v641 & ~(v641 >> 31);
        v642 = (__int16)(v291[48] + (v639 >> 1));
        if (v642 >= 255)
          v642 = 255;
        v643 = &v65[v1152];
        v65[v1152] = v642 & ~(v642 >> 31);
        v644 = (__int16)(v291[49] + (v640 >> 2));
        if (v644 >= 255)
          v644 = 255;
        v643[1] = v644 & ~(v644 >> 31);
        v645 = (__int16)(v291[50] + (v626 >> 1));
        if (v645 >= 255)
          v645 = 255;
        v643[2] = v645 & ~(v645 >> 31);
        v646 = (__int16)(v291[51] + (v627 >> 2));
        if (v646 >= 255)
          v646 = 255;
        v643[3] = v646 & ~(v646 >> 31);
        v647 = (__int16)(v291[52] + (v611 >> 1));
        if (v647 >= 255)
          v647 = 255;
        v643[4] = v647 & ~(v647 >> 31);
        v648 = (__int16)(v291[53] + (v612 >> 2));
        if (v648 >= 255)
          v648 = 255;
        v643[5] = v648 & ~(v648 >> 31);
        v649 = (unsigned __int16)v291[54] + (v601 >> 1);
        v650 = v637 >> 2;
        v39 = 4 * v1153;
        v651 = v580 + 2 * v588 + v591 + 2;
        v652 = (__int16)v649;
        if ((__int16)v649 >= 255)
          v652 = 255;
        v643[6] = v652 & ~(v652 >> 31);
        LOWORD(v654) = v291[55] + (v596 >> 2);
        v653 = v650 + (v651 >> 2) + 1;
        v331 = v636 + 2 * v650 + (v651 >> 2) + 2;
        v654 = (__int16)v654;
        if ((__int16)v654 >= 255)
          v654 = 255;
        v643[7] = v654 & ~(v654 >> 31);
        v17 = v1150;
        v18 = v1155;
        v655 = (__int16)(v291[64] + (v653 >> 1));
        if (v655 >= 255)
          v655 = 255;
        v656 = &v65[v1173];
        v65[v1173] = v655 & ~(v655 >> 31);
        v657 = (__int16)(v291[65] + (v331 >> 2));
        if (v657 >= 255)
          v657 = 255;
        v656[1] = v657 & ~(v657 >> 31);
        v658 = (__int16)(v291[66] + (v639 >> 1));
        if (v658 >= 255)
          v658 = 255;
        v656[2] = v658 & ~(v658 >> 31);
        v659 = (__int16)(v291[67] + (v640 >> 2));
        if (v659 >= 255)
          v659 = 255;
        v656[3] = v659 & ~(v659 >> 31);
        v660 = (__int16)(v291[68] + (v626 >> 1));
        if (v660 >= 255)
          v660 = 255;
        v656[4] = v660 & ~(v660 >> 31);
        v661 = (__int16)(v291[69] + (v627 >> 2));
        if (v661 >= 255)
          v661 = 255;
        v656[5] = v661 & ~(v661 >> 31);
        v662 = (unsigned __int16)v291[70] + (v611 >> 1);
        v663 = v651 >> 2;
        v664 = v588 + 2 * v591 + v593 + 2;
        v665 = (__int16)v662;
        if ((__int16)v662 >= 255)
          v665 = 255;
        v656[6] = v665 & ~(v665 >> 31);
        v666 = v663 + (v664 >> 2) + 1;
        v667 = v650 + 2 * v663 + (v664 >> 2) + 2;
        v668 = (__int16)(v291[71] + (v612 >> 2));
        if (v668 >= 255)
          v668 = 255;
        v656[7] = v668 & ~(v668 >> 31);
        v669 = (__int16)(v291[80] + (v666 >> 1));
        if (v669 >= 255)
          v669 = 255;
        v670 = &v65[v1175];
        v65[v1175] = v669 & ~(v669 >> 31);
        v671 = (__int16)(v291[81] + (v667 >> 2));
        if (v671 >= 255)
          v671 = 255;
        v670[1] = v671 & ~(v671 >> 31);
        v672 = (__int16)(v291[82] + (v653 >> 1));
        if (v672 >= 255)
          v672 = 255;
        v670[2] = v672 & ~(v672 >> 31);
        v673 = (__int16)(v291[83] + (v331 >> 2));
        if (v673 >= 255)
          v673 = 255;
        v670[3] = v673 & ~(v673 >> 31);
        v674 = (__int16)(v291[84] + (v639 >> 1));
        if (v674 >= 255)
          v674 = 255;
        v670[4] = v674 & ~(v674 >> 31);
        v675 = (__int16)(v291[85] + (v640 >> 2));
        if (v675 >= 255)
          v675 = 255;
        v670[5] = v675 & ~(v675 >> 31);
        v676 = v664 >> 2;
        v677 = v591 + 2 * v593 + v594 + 2;
        v678 = (__int16)(v291[86] + (v626 >> 1));
        if (v678 >= 255)
          v678 = 255;
        v670[6] = v678 & ~(v678 >> 31);
        v679 = v676 + (v677 >> 2) + 1;
        v680 = v663 + 2 * v676;
        v36 = v1169;
        v681 = v680 + (v677 >> 2) + 2;
        v682 = (__int16)(v291[87] + (v627 >> 2));
        if (v682 >= 255)
          v682 = 255;
        v670[7] = v682 & ~(v682 >> 31);
        v683 = (__int16)(v291[96] + (v679 >> 1));
        if (v683 >= 255)
          v683 = 255;
        v684 = &v65[v1172];
        v65[v1172] = v683 & ~(v683 >> 31);
        v685 = (__int16)(v291[97] + (v681 >> 2));
        if (v685 >= 255)
          v685 = 255;
        v684[1] = v685 & ~(v685 >> 31);
        v686 = (__int16)(v291[98] + (v666 >> 1));
        if (v686 >= 255)
          v686 = 255;
        v684[2] = v686 & ~(v686 >> 31);
        v687 = (__int16)(v291[99] + (v667 >> 2));
        if (v687 >= 255)
          v687 = 255;
        v684[3] = v687 & ~(v687 >> 31);
        v688 = (__int16)(v291[100] + (v653 >> 1));
        if (v688 >= 255)
          v688 = 255;
        v684[4] = v688 & ~(v688 >> 31);
        v689 = (__int16)(v291[101] + (v331 >> 2));
        if (v689 >= 255)
          v689 = 255;
        v684[5] = v689 & ~(v689 >> 31);
        LOWORD(v690) = v291[102] + (v639 >> 1);
        v41 = 6 * v1153;
        v690 = (__int16)v690;
        if ((__int16)v690 >= 255)
          v690 = 255;
        v684[6] = v690 & ~(v690 >> 31);
        result = v1151;
        v691 = (__int16)(v291[103] + (v640 >> 2));
        if (v691 >= 255)
          v691 = 255;
        v684[7] = v691 & ~(v691 >> 31);
        v42 = 5 * v1153;
        v692 = v593 + v594 + 2 * v594 + 2;
        v693 = (v677 >> 2) + (v692 >> 2) + 1;
        v694 = v676 + 2 * (v677 >> 2) + (v692 >> 2) + 2;
        v695 = (__int16)(v291[112] + (v693 >> 1));
        if (v695 >= 255)
          v695 = 255;
        v45 = 7 * v1153;
        v696 = &v65[v1154];
        v65[v1154] = v695 & ~(v695 >> 31);
        v697 = (__int16)(v291[113] + (v694 >> 2));
        if (v697 >= 255)
          v697 = 255;
        v696[1] = v697 & ~(v697 >> 31);
        v698 = (__int16)(v291[114] + (v679 >> 1));
        if (v698 >= 255)
          v698 = 255;
        v696[2] = v698 & ~(v698 >> 31);
        v699 = (__int16)(v291[115] + (v681 >> 2));
        if (v699 >= 255)
          v699 = 255;
        v696[3] = v699 & ~(v699 >> 31);
        v700 = (__int16)(v291[116] + (v666 >> 1));
        if (v700 >= 255)
          v700 = 255;
        v696[4] = v700 & ~(v700 >> 31);
        v701 = (__int16)(v291[117] + (v667 >> 2));
        if (v701 >= 255)
          v701 = 255;
        v696[5] = v701 & ~(v701 >> 31);
        v702 = (__int16)(v291[118] + (v653 >> 1));
        if ((__int16)v702 >= 255)
          v702 = 255;
        v696[6] = v702 & ~(v702 >> 31);
        v44 = v1161;
LABEL_731:
        v703 = (unsigned __int16)v291[119];
        v40 = v1164;
        v270 = v703 + (v331 >> 2);
        goto LABEL_1250;
      case 7u:
        v1162 = v44;
        v1165 = v40;
        v704 = &v65[-v1153];
        v705 = v704[-v60];
        v706 = (unsigned __int16 *)(a2 + 2 * *v37);
        v707 = *v704;
        v708 = v704[1];
        v709 = v704[2];
        v710 = v704[3];
        v711 = v704[4];
        v712 = v704[5];
        v713 = v704[6];
        v714 = v704[7];
        v1170 = v36;
        v1149 = v37;
        if (BYTE2(v59))
        {
          v715 = v704[8];
          v716 = v704[9];
          v717 = v704[10];
          v718 = v704[11];
          v1146 = v704[12];
          v1143 = v704[13];
        }
        else
        {
          v715 = v65[-v1153 + 7];
          v716 = v715;
          v717 = v715;
          v718 = v715;
          v1143 = v715;
          v1146 = v715;
        }
        v951 = v708 + 2 + v705 + 2 * v707;
        v952 = v709 + 2 + v707 + 2 * v708;
        v953 = v708 + 2 + 2 * v709 + v710;
        v954 = (v709 + 2 + 2 * v710 + v711) >> 2;
        v955 = (v710 + 2 * v711 + v712 + 2) >> 2;
        v956 = (v711 + 2 * v712 + v713 + 2) >> 2;
        v957 = (v712 + 2 * v713 + v714 + 2) >> 2;
        v958 = (v953 >> 2) + 2;
        v959 = v958 + (v951 >> 2) + 2 * (v952 >> 2);
        v960 = (v952 >> 2) + 1;
        v961 = v960 + (v951 >> 2);
        v962 = v960 + (v953 >> 2);
        v963 = v954 + 2 + (v952 >> 2) + 2 * (v953 >> 2);
        v964 = (v953 >> 2) + v954;
        v965 = (v713 + 2 * v714 + v715 + 2) >> 2;
        v966 = v958 + 2 * v954 + v955;
        v967 = v954 + v955;
        v968 = *v706 + (v961 >> 1);
        v969 = (v714 + 2 * v715 + v716 + 2) >> 2;
        v970 = v715 + 2 * v716 + v717 + 2;
        v971 = v954 + 2 + 2 * v955 + v956;
        v972 = v955 + v956;
        v973 = v955 + 2 * v956 + v957 + 2;
        v974 = v956 + v957;
        v975 = v956 + 2 * v957 + v965 + 2;
        v976 = v957 + 2 * v965 + v969 + 2;
        v977 = v965 + 2 * v969 + (v970 >> 2) + 2;
        v978 = v964 + 1;
        v979 = v967 + 1;
        v980 = v972 + 1;
        v981 = v974 + 1;
        v982 = v957 + v965 + 1;
        v983 = v965 + v969 + 1;
        v984 = (__int16)v968;
        if ((__int16)v968 >= 255)
          v984 = 255;
        *v65 = v984 & ~(v984 >> 31);
        v985 = (__int16)(v706[1] + (v962 >> 1));
        if (v985 >= 255)
          v985 = 255;
        v65[1] = v985 & ~(v985 >> 31);
        v986 = (__int16)(v706[2] + (v978 >> 1));
        if (v986 >= 255)
          v986 = 255;
        v65[2] = v986 & ~(v986 >> 31);
        v987 = (__int16)(v706[3] + (v979 >> 1));
        if (v987 >= 255)
          v987 = 255;
        v65[3] = v987 & ~(v987 >> 31);
        v988 = (__int16)(v706[4] + (v980 >> 1));
        if (v988 >= 255)
          v988 = 255;
        v65[4] = v988 & ~(v988 >> 31);
        v989 = (__int16)(v706[5] + (v981 >> 1));
        if (v989 >= 255)
          v989 = 255;
        v65[5] = v989 & ~(v989 >> 31);
        v990 = (__int16)(v706[6] + (v982 >> 1));
        if (v990 >= 255)
          v990 = 255;
        v65[6] = v990 & ~(v990 >> 31);
        v991 = (__int16)(v706[7] + (v983 >> 1));
        if (v991 >= 255)
          v991 = 255;
        v65[7] = v991 & ~(v991 >> 31);
        v992 = (__int16)(v706[16] + (v959 >> 2));
        if (v992 >= 255)
          v992 = 255;
        v993 = &v65[v1153];
        *v993 = v992 & ~(v992 >> 31);
        v994 = (__int16)(v706[17] + (v963 >> 2));
        if (v994 >= 255)
          v994 = 255;
        v993[1] = v994 & ~(v994 >> 31);
        v995 = (__int16)(v706[18] + (v966 >> 2));
        if (v995 >= 255)
          v995 = 255;
        v993[2] = v995 & ~(v995 >> 31);
        v996 = (__int16)(v706[19] + (v971 >> 2));
        if (v996 >= 255)
          v996 = 255;
        v993[3] = v996 & ~(v996 >> 31);
        v997 = (__int16)(v706[20] + (v973 >> 2));
        if (v997 >= 255)
          v997 = 255;
        v993[4] = v997 & ~(v997 >> 31);
        v998 = (__int16)(v706[21] + (v975 >> 2));
        if (v998 >= 255)
          v998 = 255;
        v993[5] = v998 & ~(v998 >> 31);
        v999 = (__int16)(v706[22] + (v976 >> 2));
        if (v999 >= 255)
          v999 = 255;
        v993[6] = v999 & ~(v999 >> 31);
        v1000 = (__int16)(v706[23] + (v977 >> 2));
        if (v1000 >= 255)
          v1000 = 255;
        v993[7] = v1000 & ~(v1000 >> 31);
        v1001 = v969 + (v970 >> 2) + 1;
        v1002 = (__int16)(v706[32] + (v962 >> 1));
        if (v1002 >= 255)
          v1002 = 255;
        v1003 = &v65[v1174];
        v65[v1174] = v1002 & ~(v1002 >> 31);
        v1004 = (__int16)(v706[33] + (v978 >> 1));
        if (v1004 >= 255)
          v1004 = 255;
        v1003[1] = v1004 & ~(v1004 >> 31);
        v1005 = (__int16)(v706[34] + (v979 >> 1));
        if (v1005 >= 255)
          v1005 = 255;
        v1003[2] = v1005 & ~(v1005 >> 31);
        v1006 = (__int16)(v706[35] + (v980 >> 1));
        if (v1006 >= 255)
          v1006 = 255;
        v1003[3] = v1006 & ~(v1006 >> 31);
        v1007 = (__int16)(v706[36] + (v981 >> 1));
        if (v1007 >= 255)
          v1007 = 255;
        v1003[4] = v1007 & ~(v1007 >> 31);
        v1008 = (__int16)(v706[37] + (v982 >> 1));
        if (v1008 >= 255)
          v1008 = 255;
        v1003[5] = v1008 & ~(v1008 >> 31);
        v1009 = (__int16)(v706[38] + (v983 >> 1));
        if (v1009 >= 255)
          v1009 = 255;
        v1003[6] = v1009 & ~(v1009 >> 31);
        v1010 = (__int16)(v706[39] + (v1001 >> 1));
        if (v1010 >= 255)
          v1010 = 255;
        v1003[7] = v1010 & ~(v1010 >> 31);
        v1011 = v970 >> 2;
        v1012 = v716 + 2 * v717 + v718 + 2;
        v1013 = v969 + 2 * v1011 + (v1012 >> 2) + 2;
        v1014 = (__int16)(v706[48] + (v963 >> 2));
        if (v1014 >= 255)
          v1014 = 255;
        v38 = 3 * v1153;
        v1015 = &v65[v1152];
        v65[v1152] = v1014 & ~(v1014 >> 31);
        v1016 = (__int16)(v706[49] + (v966 >> 2));
        if (v1016 >= 255)
          v1016 = 255;
        v1015[1] = v1016 & ~(v1016 >> 31);
        v1017 = (__int16)(v706[50] + (v971 >> 2));
        if (v1017 >= 255)
          v1017 = 255;
        v1015[2] = v1017 & ~(v1017 >> 31);
        v1018 = (__int16)(v706[51] + (v973 >> 2));
        if (v1018 >= 255)
          v1018 = 255;
        v1015[3] = v1018 & ~(v1018 >> 31);
        v1019 = (__int16)(v706[52] + (v975 >> 2));
        if (v1019 >= 255)
          v1019 = 255;
        v1015[4] = v1019 & ~(v1019 >> 31);
        v1020 = (__int16)(v706[53] + (v976 >> 2));
        if (v1020 >= 255)
          v1020 = 255;
        v1015[5] = v1020 & ~(v1020 >> 31);
        v1021 = (__int16)(v706[54] + (v977 >> 2));
        if (v1021 >= 255)
          v1021 = 255;
        v1015[6] = v1021 & ~(v1021 >> 31);
        v1022 = (__int16)(v706[55] + (v1013 >> 2));
        if (v1022 >= 255)
          v1022 = 255;
        v1015[7] = v1022 & ~(v1022 >> 31);
        v1023 = v1011 + (v1012 >> 2) + 1;
        v1024 = (__int16)(v706[64] + (v978 >> 1));
        if (v1024 >= 255)
          v1024 = 255;
        v1025 = &v65[v1173];
        v65[v1173] = v1024 & ~(v1024 >> 31);
        v1026 = (__int16)(v706[65] + (v979 >> 1));
        if (v1026 >= 255)
          v1026 = 255;
        v1025[1] = v1026 & ~(v1026 >> 31);
        v1027 = (__int16)(v706[66] + (v980 >> 1));
        if (v1027 >= 255)
          v1027 = 255;
        v1025[2] = v1027 & ~(v1027 >> 31);
        v1028 = (__int16)(v706[67] + (v981 >> 1));
        if (v1028 >= 255)
          v1028 = 255;
        v1025[3] = v1028 & ~(v1028 >> 31);
        v1029 = (__int16)(v706[68] + (v982 >> 1));
        if (v1029 >= 255)
          v1029 = 255;
        v1025[4] = v1029 & ~(v1029 >> 31);
        v1030 = (__int16)(v706[69] + (v983 >> 1));
        if (v1030 >= 255)
          v1030 = 255;
        v1025[5] = v1030 & ~(v1030 >> 31);
        v1031 = (__int16)(v706[70] + (v1001 >> 1));
        if (v1031 >= 255)
          v1031 = 255;
        v1025[6] = v1031 & ~(v1031 >> 31);
        v1032 = (__int16)(v706[71] + (v1023 >> 1));
        if (v1032 >= 255)
          v1032 = 255;
        v1025[7] = v1032 & ~(v1032 >> 31);
        v1033 = v1012 >> 2;
        v1034 = v717 + 2 * v718 + v1146 + 2;
        v1035 = v1011 + 2 * (v1012 >> 2) + (v1034 >> 2) + 2;
        v1036 = (__int16)(v706[80] + (v966 >> 2));
        if (v1036 >= 255)
          v1036 = 255;
        v1037 = &v65[v1175];
        v65[v1175] = v1036 & ~(v1036 >> 31);
        v1038 = (__int16)(v706[81] + (v971 >> 2));
        if (v1038 >= 255)
          v1038 = 255;
        v1037[1] = v1038 & ~(v1038 >> 31);
        v1039 = (__int16)(v706[82] + (v973 >> 2));
        if (v1039 >= 255)
          v1039 = 255;
        v1037[2] = v1039 & ~(v1039 >> 31);
        v1040 = (__int16)(v706[83] + (v975 >> 2));
        if (v1040 >= 255)
          v1040 = 255;
        v1037[3] = v1040 & ~(v1040 >> 31);
        v1041 = (__int16)(v706[84] + (v976 >> 2));
        if (v1041 >= 255)
          v1041 = 255;
        v1037[4] = v1041 & ~(v1041 >> 31);
        v1042 = (__int16)(v706[85] + (v977 >> 2));
        if (v1042 >= 255)
          v1042 = 255;
        v1037[5] = v1042 & ~(v1042 >> 31);
        v1043 = (__int16)(v706[86] + (v1013 >> 2));
        if (v1043 >= 255)
          v1043 = 255;
        v1037[6] = v1043 & ~(v1043 >> 31);
        v1044 = (__int16)(v706[87] + (v1035 >> 2));
        if (v1044 >= 255)
          v1044 = 255;
        v1037[7] = v1044 & ~(v1044 >> 31);
        v1045 = (__int16)(v706[96] + (v979 >> 1));
        if (v1045 >= 255)
          v1045 = 255;
        v41 = 6 * v1153;
        v1046 = &v65[v1172];
        v65[v1172] = v1045 & ~(v1045 >> 31);
        v1047 = (__int16)(v706[97] + (v980 >> 1));
        if (v1047 >= 255)
          v1047 = 255;
        v1046[1] = v1047 & ~(v1047 >> 31);
        v1048 = (__int16)(v706[98] + (v981 >> 1));
        if (v1048 >= 255)
          v1048 = 255;
        v1046[2] = v1048 & ~(v1048 >> 31);
        v1049 = (__int16)(v706[99] + (v982 >> 1));
        if (v1049 >= 255)
          v1049 = 255;
        v1046[3] = v1049 & ~(v1049 >> 31);
        v1050 = (__int16)(v706[100] + (v983 >> 1));
        if (v1050 >= 255)
          v1050 = 255;
        v1046[4] = v1050 & ~(v1050 >> 31);
        v1051 = (__int16)(v706[101] + (v1001 >> 1));
        if (v1051 >= 255)
          v1051 = 255;
        v1046[5] = v1051 & ~(v1051 >> 31);
        v1052 = (__int16)(v706[102] + (v1023 >> 1));
        if ((__int16)v1052 >= 255)
          v1052 = 255;
        v1046[6] = v1052 & ~(v1052 >> 31);
        v1053 = (__int16)(v706[103] + ((v1033 + (v1034 >> 2) + 1) >> 1));
        if (v1053 >= 255)
          v1053 = 255;
        v1046[7] = v1053 & ~(v1053 >> 31);
        v42 = 5 * v1153;
        v1054 = (__int16)(v706[112] + (v971 >> 2));
        if (v1054 >= 255)
          v1054 = 255;
        v45 = 7 * v1153;
        v1055 = &v65[v1154];
        v65[v1154] = v1054 & ~(v1054 >> 31);
        v1056 = (__int16)(v706[113] + (v973 >> 2));
        if (v1056 >= 255)
          v1056 = 255;
        v1055[1] = v1056 & ~(v1056 >> 31);
        v1057 = (__int16)(v706[114] + (v975 >> 2));
        if (v1057 >= 255)
          v1057 = 255;
        v1055[2] = v1057 & ~(v1057 >> 31);
        v1058 = (__int16)(v706[115] + (v976 >> 2));
        if (v1058 >= 255)
          v1058 = 255;
        v1055[3] = v1058 & ~(v1058 >> 31);
        v1059 = (__int16)(v706[116] + (v977 >> 2));
        if (v1059 >= 255)
          v1059 = 255;
        v1055[4] = v1059 & ~(v1059 >> 31);
        v39 = 4 * v1153;
        v1060 = (__int16)(v706[117] + (v1013 >> 2));
        if (v1060 >= 255)
          v1060 = 255;
        v1055[5] = v1060 & ~(v1060 >> 31);
        v1061 = (__int16)(v706[118] + (v1035 >> 2));
        if (v1061 >= 255)
          v1061 = 255;
        v1055[6] = v1061 & ~(v1061 >> 31);
        v270 = v706[119] + ((v1033 + 2 * (v1034 >> 2) + ((v718 + 2 * v1146 + v1143 + 2) >> 2) + 2) >> 2);
        v17 = v1150;
        result = v1151;
        v18 = v1155;
        v40 = v1165;
        v36 = v1170;
        v37 = v1149;
        v44 = v1162;
        goto LABEL_1250;
      case 8u:
        v67 = (_WORD *)(a2 + 2 * *v37);
        v719 = *(v65 - 1);
        v720 = v44;
        v721 = v65[-(v60 * v1153) - 1];
        v722 = v65[v1153 - 1];
        v723 = v65[v1174 - 1];
        v724 = v65[v38 - 1];
        v725 = v65[v39 - 1];
        v726 = v65[v42 - 1];
        v727 = v65[v41 - 1];
        v728 = v65[v45 - 1];
        v729 = v38;
        v730 = result;
        v731 = v722 + 2;
        v732 = v722 + 2 + v721 + 2 * v719;
        v733 = v723 + 2;
        v734 = v723 + 2 + v719 + 2 * v722;
        v735 = (v731 + 2 * v723 + v724) >> 2;
        v736 = (v733 + 2 * v724 + v725) >> 2;
        v737 = (v734 >> 2) + 1;
        v738 = v737 + (v732 >> 2);
        v739 = v737 + v735;
        v740 = v735 + v736;
        v741 = v735 + 2;
        v742 = v735 + 2 + (v732 >> 2) + 2 * (v734 >> 2);
        v743 = v736 + 2 + (v734 >> 2) + 2 * v735;
        v744 = (__int16)(*v67 + (v738 >> 1));
        if (v744 >= 255)
          v744 = 255;
        *v65 = v744 & ~(v744 >> 31);
        LOWORD(v752) = v67[1] + (v742 >> 2);
        v745 = v724 + 2 * v725 + v726 + 2;
        v746 = v741 + 2 * v736 + (v745 >> 2);
        v747 = v745 >> 2;
        v748 = v725 + 2 * v726 + v727 + 2;
        v749 = v740 + 1;
        v750 = v736 + (v745 >> 2) + 1;
        v39 = 4 * v1153;
        v751 = v736 + 2 + 2 * v747 + (v748 >> 2);
        v752 = (__int16)v752;
        if ((__int16)v752 >= 255)
          v752 = 255;
        v65[1] = v752 & ~(v752 >> 31);
        v753 = (__int16)(v67[2] + (v739 >> 1));
        if (v753 >= 255)
          v753 = 255;
        v65[2] = v753 & ~(v753 >> 31);
        v754 = (__int16)(v67[3] + (v743 >> 2));
        if (v754 >= 255)
          v754 = 255;
        v65[3] = v754 & ~(v754 >> 31);
        v755 = (__int16)(v67[4] + (v749 >> 1));
        if (v755 >= 255)
          v755 = 255;
        v65[4] = v755 & ~(v755 >> 31);
        v756 = (__int16)(v67[5] + (v746 >> 2));
        if (v756 >= 255)
          v756 = 255;
        v65[5] = v756 & ~(v756 >> 31);
        v757 = (__int16)(v67[6] + (v750 >> 1));
        if (v757 >= 255)
          v757 = 255;
        v65[6] = v757 & ~(v757 >> 31);
        v758 = (__int16)(v67[7] + (v751 >> 2));
        if (v758 >= 255)
          v758 = 255;
        v65[7] = v758 & ~(v758 >> 31);
        v759 = (__int16)(v67[16] + (v739 >> 1));
        if (v759 >= 255)
          v759 = 255;
        v760 = &v65[v1153];
        *v760 = v759 & ~(v759 >> 31);
        v761 = v67[17] + (v743 >> 2);
        v762 = v748 >> 2;
        v763 = v726 + 2 * v727 + v728 + 2;
        v764 = v747 + (v748 >> 2) + 1;
        v765 = v747 + 2 * (v748 >> 2) + (v763 >> 2) + 2;
        v766 = v761;
        v41 = 6 * v1153;
        if (v766 >= 255)
          v766 = 255;
        v760[1] = v766 & ~(v766 >> 31);
        v767 = (__int16)(v67[18] + (v749 >> 1));
        if (v767 >= 255)
          v767 = 255;
        v760[2] = v767 & ~(v767 >> 31);
        v768 = (__int16)(v67[19] + (v746 >> 2));
        if (v768 >= 255)
          v768 = 255;
        v760[3] = v768 & ~(v768 >> 31);
        v769 = (__int16)(v67[20] + (v750 >> 1));
        if (v769 >= 255)
          v769 = 255;
        v760[4] = v769 & ~(v769 >> 31);
        v770 = (__int16)(v67[21] + (v751 >> 2));
        if (v770 >= 255)
          v770 = 255;
        v760[5] = v770 & ~(v770 >> 31);
        v771 = (__int16)(v67[22] + (v764 >> 1));
        if (v771 >= 255)
          v771 = 255;
        v760[6] = v771 & ~(v771 >> 31);
        v772 = (__int16)(v67[23] + (v765 >> 2));
        if (v772 >= 255)
          v772 = 255;
        v760[7] = v772 & ~(v772 >> 31);
        v42 = 5 * v1153;
        v773 = v727 + v728 + 2 * v728;
        v774 = (__int16)(v67[32] + (v749 >> 1));
        if (v774 >= 255)
          v774 = 255;
        v775 = &v65[v1174];
        v65[v1174] = v774 & ~(v774 >> 31);
        LOWORD(v779) = v67[33] + (v746 >> 2);
        v776 = v763 >> 2;
        v92 = v773 + 2;
        v777 = v762 + (v763 >> 2) + 1;
        v778 = v762 + 2 * (v763 >> 2) + (v92 >> 2) + 2;
        v779 = (__int16)v779;
        if ((__int16)v779 >= 255)
          v779 = 255;
        v775[1] = v779 & ~(v779 >> 31);
        v780 = (__int16)(v67[34] + (v750 >> 1));
        if (v780 >= 255)
          v780 = 255;
        v775[2] = v780 & ~(v780 >> 31);
        v781 = (__int16)(v67[35] + (v751 >> 2));
        if (v781 >= 255)
          v781 = 255;
        v775[3] = v781 & ~(v781 >> 31);
        v782 = (__int16)(v67[36] + (v764 >> 1));
        if (v782 >= 255)
          v782 = 255;
        v775[4] = v782 & ~(v782 >> 31);
        v783 = (__int16)(v67[37] + (v765 >> 2));
        if (v783 >= 255)
          v783 = 255;
        v775[5] = v783 & ~(v783 >> 31);
        v784 = (__int16)(v67[38] + (v777 >> 1));
        if (v784 >= 255)
          v784 = 255;
        v775[6] = v784 & ~(v784 >> 31);
        v785 = (__int16)(v67[39] + (v778 >> 2));
        if (v785 >= 255)
          v785 = 255;
        v775[7] = v785 & ~(v785 >> 31);
        result = v730;
        v38 = v729;
        v786 = (__int16)(v67[48] + (v750 >> 1));
        if (v786 >= 255)
          v786 = 255;
        v787 = &v65[v729];
        v65[v729] = v786 & ~(v786 >> 31);
        LOWORD(v792) = v67[49] + (v751 >> 2);
        v788 = v776 + (v92 >> 2);
        v789 = v788 + 2 * (v92 >> 2);
        v790 = v788 + 1;
        v791 = v789 + 2;
        v792 = (__int16)v792;
        if ((__int16)v792 >= 255)
          v792 = 255;
        v787[1] = v792 & ~(v792 >> 31);
        v793 = (__int16)(v67[50] + (v764 >> 1));
        if (v793 >= 255)
          v793 = 255;
        v787[2] = v793 & ~(v793 >> 31);
        v794 = (__int16)(v67[51] + (v765 >> 2));
        if (v794 >= 255)
          v794 = 255;
        v787[3] = v794 & ~(v794 >> 31);
        v795 = (__int16)(v67[52] + (v777 >> 1));
        if (v795 >= 255)
          v795 = 255;
        v787[4] = v795 & ~(v795 >> 31);
        v796 = (__int16)(v67[53] + (v778 >> 2));
        if (v796 >= 255)
          v796 = 255;
        v787[5] = v796 & ~(v796 >> 31);
        v797 = (__int16)(v67[54] + (v790 >> 1));
        if (v797 >= 255)
          v797 = 255;
        v787[6] = v797 & ~(v797 >> 31);
        v798 = (__int16)(v67[55] + (v791 >> 2));
        if (v798 >= 255)
          v798 = 255;
        v787[7] = v798 & ~(v798 >> 31);
        v799 = (__int16)(v67[64] + (v764 >> 1));
        if (v799 >= 255)
          v799 = 255;
        v800 = &v65[v1173];
        v65[v1173] = v799 & ~(v799 >> 31);
        v44 = v720;
        v18 = v1155;
        v801 = (__int16)(v67[65] + (v765 >> 2));
        if (v801 >= 255)
          v801 = 255;
        v800[1] = v801 & ~(v801 >> 31);
        v802 = (__int16)(v67[66] + (v777 >> 1));
        if (v802 >= 255)
          v802 = 255;
        v800[2] = v802 & ~(v802 >> 31);
        v803 = (__int16)(v67[67] + (v778 >> 2));
        if (v803 >= 255)
          v803 = 255;
        v800[3] = v803 & ~(v803 >> 31);
        v804 = (__int16)(v67[68] + (v790 >> 1));
        if (v804 >= 255)
          v804 = 255;
        v800[4] = v804 & ~(v804 >> 31);
        v805 = (__int16)(v67[69] + (v791 >> 2));
        if (v805 >= 255)
          v805 = 255;
        v800[5] = v805 & ~(v805 >> 31);
        v806 = (__int16)(v67[70] + (v92 >> 2));
        if (v806 >= 255)
          v806 = 255;
        v800[6] = v806 & ~(v806 >> 31);
        v807 = (__int16)(v67[71] + (v92 >> 2));
        if (v807 >= 255)
          v807 = 255;
        v800[7] = v807 & ~(v807 >> 31);
        v808 = (__int16)(v67[80] + (v777 >> 1));
        if (v808 >= 255)
          v808 = 255;
        v809 = &v65[v1175];
        v65[v1175] = v808 & ~(v808 >> 31);
        v810 = (__int16)(v67[81] + (v778 >> 2));
        if (v810 >= 255)
          v810 = 255;
        v809[1] = v810 & ~(v810 >> 31);
        v811 = (__int16)(v67[82] + (v790 >> 1));
        if (v811 >= 255)
          v811 = 255;
        v809[2] = v811 & ~(v811 >> 31);
        v812 = (__int16)(v67[83] + (v791 >> 2));
        if (v812 >= 255)
          v812 = 255;
        v809[3] = v812 & ~(v812 >> 31);
        v813 = (__int16)(v67[84] + (v92 >> 2));
        if (v813 >= 255)
          v813 = 255;
        v809[4] = v813 & ~(v813 >> 31);
        v814 = (__int16)(v67[85] + (v92 >> 2));
        if (v814 >= 255)
          v814 = 255;
        v809[5] = v814 & ~(v814 >> 31);
        v815 = (__int16)(v67[86] + (v92 >> 2));
        if (v815 >= 255)
          v815 = 255;
        v809[6] = v815 & ~(v815 >> 31);
        v816 = (__int16)(v67[87] + (v92 >> 2));
        if (v816 >= 255)
          v816 = 255;
        v809[7] = v816 & ~(v816 >> 31);
        v817 = (__int16)(v67[96] + (v790 >> 1));
        if (v817 >= 255)
          v817 = 255;
        v818 = &v65[v1172];
        v65[v1172] = v817 & ~(v817 >> 31);
        v819 = (__int16)(v67[97] + (v791 >> 2));
        if (v819 >= 255)
          v819 = 255;
        v818[1] = v819 & ~(v819 >> 31);
        v820 = (__int16)(v67[98] + (v92 >> 2));
        if (v820 >= 255)
          v820 = 255;
        v818[2] = v820 & ~(v820 >> 31);
        v821 = (__int16)(v67[99] + (v92 >> 2));
        if (v821 >= 255)
          v821 = 255;
        v818[3] = v821 & ~(v821 >> 31);
        v822 = (__int16)(v67[100] + (v92 >> 2));
        if (v822 >= 255)
          v822 = 255;
        v818[4] = v822 & ~(v822 >> 31);
        v823 = (__int16)(v67[101] + (v92 >> 2));
        if (v823 >= 255)
          v823 = 255;
        v818[5] = v823 & ~(v823 >> 31);
        v824 = (__int16)(v67[102] + (v92 >> 2));
        if (v824 >= 255)
          v824 = 255;
        v818[6] = v824 & ~(v824 >> 31);
        v825 = (__int16)(v67[103] + (v92 >> 2));
        if (v825 >= 255)
          v825 = 255;
        v818[7] = v825 & ~(v825 >> 31);
        v826 = (__int16)(v67[112] + (v92 >> 2));
        if (v826 >= 255)
          v826 = 255;
        v247 = v826 & ~(v826 >> 31);
        v248 = &v65[v1154];
LABEL_849:
        *v248 = v247;
        v827 = (__int16)(v67[113] + (v92 >> 2));
        if (v827 >= 255)
          v827 = 255;
        v248[1] = v827 & ~(v827 >> 31);
        v828 = (__int16)(v67[114] + (v92 >> 2));
        if (v828 >= 255)
          v828 = 255;
        v248[2] = v828 & ~(v828 >> 31);
        v829 = (__int16)(v67[115] + (v92 >> 2));
        if (v829 >= 255)
          v829 = 255;
        v248[3] = v829 & ~(v829 >> 31);
        v830 = (__int16)(v67[116] + (v92 >> 2));
        if (v830 >= 255)
          v830 = 255;
        v248[4] = v830 & ~(v830 >> 31);
        v831 = (__int16)(v67[117] + (v92 >> 2));
        if (v831 >= 255)
          v831 = 255;
        v248[5] = v831 & ~(v831 >> 31);
        v832 = (__int16)(v67[118] + (v92 >> 2));
        if (v832 >= 255)
          v832 = 255;
        v248[6] = v832 & ~(v832 >> 31);
LABEL_862:
        v270 = (unsigned __int16)v67[119] + (v92 >> 2);
LABEL_1250:
        v270 = (__int16)v270;
        if ((__int16)v270 >= 255)
          v270 = 255;
        v65[v45 + 7] = v270 & ~(v270 >> 31);
        break;
      default:
        break;
    }
    v36 += 16;
    ++v37;
    ++v40;
    v1139 = v44 >= 0xC;
    v44 += 4;
  }
  while (!v1139);
  return result;
}

int16x8_t sub_2160965F0(unsigned __int8 *a1, unsigned int a2, int16x8_t *a3, int16x8_t *a4, unsigned __int8 *a5, int a6, int a7)
{
  int64x2_t v7;
  int64x2_t v8;
  int64x2_t v9;
  int64x2_t v10;
  int32x4_t v11;
  unsigned __int8 *v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  __int32 v22;
  unsigned int v23;
  unsigned __int8 *v24;
  __int32 v25;
  __int32 v26;
  unsigned __int8 *v27;
  __int32 v28;
  unsigned __int8 *v29;
  int v30;
  int v31;
  unsigned __int8 *v32;
  unsigned __int8 *v33;
  __int32 v34;
  int v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  __int32 v39;
  unsigned int v40;
  unsigned __int8 *v41;
  uint16x8_t v42;
  uint16x8_t v43;
  int16x8_t v44;
  int16x8_t v45;
  int16x8_t v46;
  int16x8_t v47;
  int16x8_t v48;
  uint16x8_t v49;
  int16x8_t v50;
  int v51;
  int8x16_t v52;
  uint16x8_t v53;
  uint16x8_t v54;
  int16x8_t v55;
  int16x8_t v56;
  uint16x8_t v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int8x16_t v65;
  uint16x8_t v66;
  uint16x8_t v67;
  int16x8_t v68;
  int16x8_t v69;
  int16x8_t v70;
  int16x8_t v71;
  int16x8_t v72;
  int64x2_t v73;
  uint16x8_t v74;
  int16x8_t v75;
  int16x8_t v76;
  int16x8_t v77;
  uint16x8_t v78;
  int16x8_t v79;
  uint16x8_t v80;
  unsigned __int8 *v81;
  uint16x8_t v82;
  uint16x8_t v83;
  int16x8_t v84;
  uint64x2_t v85;
  int8x16_t v86;
  int8x16_t v87;
  uint64x2_t v88;
  int16x8_t v89;
  int16x8_t v90;
  int16x8_t v91;
  int8x16_t v92;
  int16x8_t v93;
  int64x2_t v94;
  uint16x8_t v95;
  uint16x8_t v96;
  int16x8_t v97;
  uint64x2_t v98;
  int8x16_t v99;
  int8x16_t v100;
  int16x8_t v101;
  uint64x2_t v102;
  int16x8_t v103;
  int64x2_t v104;
  int16x8_t v105;
  uint16x8_t v106;
  int8x16_t v107;
  int16x8_t v108;
  int64x2_t v109;
  int64x2_t v110;
  int64x2_t v111;
  int32x4_t v112;
  unsigned __int8 *v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  unsigned int v121;
  uint64_t v122;
  __int32 v123;
  unsigned int v124;
  unsigned __int8 *v125;
  __int32 v126;
  __int32 v127;
  unsigned __int8 *v128;
  __int32 v129;
  int v130;
  unsigned __int8 *v131;
  __int32 v132;
  int v133;
  int v134;
  unsigned int v135;
  uint64_t v136;
  __int32 v137;
  unsigned int v138;
  unsigned __int8 *v139;
  uint16x8_t v140;
  uint16x8_t v141;
  int16x8_t v142;
  int16x8_t v143;
  int16x8_t v144;
  int16x8_t v145;
  int16x8_t v146;
  uint16x8_t v147;
  int v148;
  int8x16_t v149;
  uint16x8_t v150;
  uint16x8_t v151;
  int16x8_t v152;
  int16x8_t v153;
  uint16x8_t v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int8x16_t v162;
  uint16x8_t v163;
  uint16x8_t v164;
  int16x8_t v165;
  int16x8_t v166;
  int16x8_t v167;
  int16x8_t v168;
  int16x8_t v169;
  int64x2_t v170;
  uint16x8_t v171;
  int16x8_t v172;
  int16x8_t v173;
  int16x8_t v174;
  uint16x8_t v175;
  int16x8_t v176;
  uint16x8_t v177;
  unsigned __int8 *v178;
  int v179;
  int v180;
  uint16x8_t v181;
  uint16x8_t v182;
  int16x8_t v183;
  uint64x2_t v184;
  int8x16_t v185;
  int8x16_t v186;
  uint64x2_t v187;
  int16x8_t v188;
  int16x8_t v189;
  int16x8_t v190;
  int16x8_t v191;
  int8x16_t v192;
  int16x8_t v193;
  int64x2_t v194;
  uint16x8_t v195;
  uint16x8_t v196;
  int16x8_t v197;
  uint64x2_t v198;
  int8x16_t v199;
  int8x16_t v200;
  int16x8_t v201;
  uint64x2_t v202;
  int16x8_t v203;
  int64x2_t v204;
  int16x8_t v205;
  uint16x8_t v206;
  int8x16_t v207;
  int16x8_t v208;
  int64x2_t v209;
  int16x8_t v210;
  int16x8_t result;
  int16x8_t v212;
  int16x8_t v213;
  int16x8_t v214;

  v7 = 0uLL;
  v8 = 0uLL;
  v9 = 0uLL;
  v10 = 0uLL;
  v11 = 0uLL;
  switch(a6)
  {
    case 0:
      v11.i32[0] = *(_DWORD *)&a1[-(a5[1] * a2)];
      v8 = (int64x2_t)vzip1q_s8((int8x16_t)v11, (int8x16_t)0);
      goto LABEL_50;
    case 1:
      v12 = &a1[-*a5];
      v13 = *v12 | (*v12 << 8);
      v14 = v12[a2] | (v12[a2] << 8);
      v11.i32[0] = v13 | (v13 << 16);
      v11 = (int32x4_t)vzip1q_s8((int8x16_t)v11, (int8x16_t)0);
      v10.i32[0] = v14 | (v14 << 16);
      v10 = (int64x2_t)vzip1q_s8((int8x16_t)v10, (int8x16_t)0);
      v15 = v12[2 * a2];
      LODWORD(v12) = v12[3 * a2] | (v12[3 * a2] << 8);
      v9.i32[0] = v15 | (v15 << 8) | ((v15 | (v15 << 8)) << 16);
      v9 = (int64x2_t)vzip1q_s8((int8x16_t)v9, (int8x16_t)0);
      v8 = (int64x2_t)vzip1q_s8((int8x16_t)(v12 | ((_DWORD)v12 << 16)), (int8x16_t)0);
      break;
    case 2:
      if (*a5)
      {
        v16 = *(a1 - 1);
        v17 = a1[a2 - 1];
        v18 = a1[2 * a2 - 1];
        v19 = a1[3 * a2 - 1];
        if (a5[1])
        {
          v11.i32[0] = *(_DWORD *)&a1[-a2];
          v20 = (vaddvq_s32((int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v11.i8)))
                             + v19
                             + v18
                             + v17
                             + v16
                             + 4) >> 3;
          goto LABEL_49;
        }
        v51 = v16 + v17 + v18 + v19;
        goto LABEL_40;
      }
      if (a5[1])
      {
        v11.i32[0] = *(_DWORD *)&a1[-a2];
        v51 = vaddvq_s32((int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v11.i8)));
LABEL_40:
        v20 = (v51 + 2) >> 2;
        goto LABEL_49;
      }
      v20 = 128;
LABEL_49:
      v10.i32[0] = v20 | (v20 << 8) | ((v20 | (v20 << 8)) << 16);
      v8 = (int64x2_t)vzip1q_s8((int8x16_t)v10, (int8x16_t)0);
LABEL_50:
      v9 = v8;
      v10 = v8;
      v11 = (int32x4_t)v8;
      break;
    case 3:
      if (a5[1])
        v21 = -(uint64_t)a2;
      else
        v21 = 0;
      v22 = *(_DWORD *)&a1[v21];
      if (a5[2])
        v23 = *(_DWORD *)&a1[-a2 + 4];
      else
        v23 = v22 & 0xFF000000 | ((v22 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v22 & 0xFF000000 | ((v22 & 0xFF000000) >> 8)) >> 16);
      v11.i32[0] = v22;
      v10.i32[0] = v23;
      v52 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v10, 0xCuLL), (int8x16_t)v11);
      v53.i64[0] = 0xE000E000E000ELL;
      v53.i64[1] = 0xE000E000E000ELL;
      v54.i64[0] = -1;
      v54.i64[1] = -1;
      v55 = (int16x8_t)vshlq_u16(v54, v53);
      v56 = (int16x8_t)vzip1q_s8(v52, (int8x16_t)0);
      v57 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v55, v55), (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v56, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_2160EF100)), vaddq_s16((int16x8_t)vextq_s8((int8x16_t)vaddq_s16(v56, v56), (int8x16_t)0, 2uLL), v56));
      v55.i64[0] = 0x1000100010001;
      v55.i64[1] = 0x1000100010001;
      v11 = (int32x4_t)vshlq_u16(v57, (uint16x8_t)v55);
      v10 = (int64x2_t)vextq_s8((int8x16_t)v11, (int8x16_t)0, 2uLL);
      v9 = (int64x2_t)vextq_s8((int8x16_t)v11, (int8x16_t)0, 4uLL);
      v8 = (int64x2_t)vextq_s8((int8x16_t)v11, (int8x16_t)0, 6uLL);
      break;
    case 4:
      if (*a5)
      {
        if (a5[1])
        {
          v24 = &a1[-a2];
          v25 = *(_DWORD *)v24;
          v26 = *(v24 - 1);
        }
        else
        {
          v25 = *(_DWORD *)a1;
          v26 = *(_DWORD *)a1;
        }
        v58 = a1[3 * a2 - 1] | (a1[2 * a2 - 1] << 8) | (a1[a2 - 1] << 16);
        v59 = *(a1 - 1);
      }
      else if (a5[1])
      {
        v25 = *(_DWORD *)&a1[-a2];
        v26 = v25;
        v58 = a1[3 * a2] | (a1[2 * a2] << 8) | (a1[a2] << 16);
        v59 = *a1;
      }
      else
      {
        v59 = *(_DWORD *)a1;
        v26 = *(_DWORD *)a1;
        v58 = a1[3 * a2] | (a1[2 * a2] << 8) | (a1[a2] << 16);
        v25 = *(_DWORD *)a1;
      }
      v11.i32[0] = v26;
      v10.i32[0] = v25;
      v8.i32[0] = v58 | (v59 << 24);
      v73 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v10, 8uLL), (int8x16_t)v11);
      v74 = (uint16x8_t)vdupq_n_s64(0xFFFFFFF0uLL);
      v75 = (int16x8_t)vzip1q_s8(vqtbl1q_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)v8, (uint64x2_t)v74), (int8x16_t)vshlq_n_s64(v73, 0x10uLL)), (int8x16_t)xmmword_2160EE840), (int8x16_t)0);
      v76 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)v8, (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL)), (int8x16_t)vshlq_n_s64(v73, 0x18uLL)), (int8x16_t)0);
      v77 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vshlq_u64((uint64x2_t)v73, (uint64x2_t)v74), 0x20uLL), (int8x16_t)v8), (int8x16_t)0);
      v78.i64[0] = 0xE000E000E000ELL;
      v78.i64[1] = 0xE000E000E000ELL;
      v74.i64[0] = -1;
      v74.i64[1] = -1;
      v79 = (int16x8_t)vshlq_u16(v74, v78);
      v80 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v76, v76), v75), vaddq_s16(vaddq_s16(v79, v79), v77));
      v75.i64[0] = 0x1000100010001;
      v75.i64[1] = 0x1000100010001;
      v8 = (int64x2_t)vshlq_u16(v80, (uint16x8_t)v75);
      v11 = (int32x4_t)vextq_s8((int8x16_t)v8, (int8x16_t)0, 6uLL);
      v10 = (int64x2_t)vextq_s8((int8x16_t)v8, (int8x16_t)0, 4uLL);
      v9 = (int64x2_t)vextq_s8((int8x16_t)v8, (int8x16_t)0, 2uLL);
      break;
    case 5:
      if (*a5)
      {
        if (a5[1])
        {
          v27 = &a1[-a2];
          v28 = *(_DWORD *)v27;
          v29 = a1 - 1;
          v30 = *(_DWORD *)v27 | (*(v27 - 1) << 8);
        }
        else
        {
          v28 = *(_DWORD *)a1;
          v29 = a1 - 1;
          v30 = *(_DWORD *)a1 | (*(_DWORD *)a1 << 8);
        }
        v31 = *(a1 - 1) | (a1[a2 - 1] << 8);
        v81 = &v29[2 * a2];
      }
      else
      {
        if (a5[1])
        {
          v28 = *(_DWORD *)&a1[-a2];
          v30 = v28 | (v28 << 8);
          v60 = *a1;
        }
        else
        {
          v28 = *(_DWORD *)a1;
          v60 = *(_DWORD *)a1;
          v30 = v60 | (v60 << 8);
        }
        v31 = v60 | (a1[a2] << 8);
        v81 = &a1[2 * a2];
      }
      v11.i32[0] = v30;
      v8.i32[0] = v28;
      v9.i32[0] = v31 | (*v81 << 16);
      v82.i64[0] = 0xE000E000E000ELL;
      v82.i64[1] = 0xE000E000E000ELL;
      v83.i64[0] = -1;
      v83.i64[1] = -1;
      v84 = (int16x8_t)vshlq_u16(v83, v82);
      v85 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
      v86 = vorrq_s8((int8x16_t)vshlq_n_s64(v8, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v11, v85));
      v87 = vorrq_s8((int8x16_t)vshlq_n_s64(v9, 0x10uLL), (int8x16_t)v11);
      v88 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF0uLL);
      v89 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v86, v85), (int8x16_t)0);
      v90 = vaddq_s16(v89, (int16x8_t)vzip1q_s8(v86, (int8x16_t)0));
      v11 = (int32x4_t)vshlq_u16((uint16x8_t)vaddq_s16(v90, v84), v83);
      v91 = vaddq_s16(v84, v84);
      v83.i64[0] = 0x1000100010001;
      v83.i64[1] = 0x1000100010001;
      v92 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v91, v89), v90), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v86, v88), (int8x16_t)0)), v83);
      v93 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v87, v85), (int8x16_t)0);
      v94 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v91, (int16x8_t)vzip1q_s8(v87, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v87, v88), (int8x16_t)0)), vaddq_s16(v93, v93)), v83);
      v9 = (int64x2_t)vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v11, 0xEuLL), (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64(v94, 0x20uLL), (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL)));
      v8 = (int64x2_t)vextq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vqtbl1q_s8((int8x16_t)v94, (int8x16_t)xmmword_2160F1940), 0), v92, 0xCuLL);
      v10 = (int64x2_t)vextq_s8((int8x16_t)v8, (int8x16_t)0, 2uLL);
      break;
    case 6:
      if (*a5)
      {
        v32 = &a1[a2];
        if (a5[1])
        {
          v33 = &a1[-a2];
          v34 = *(_DWORD *)v33;
          v35 = *(a1 - 1);
          v36 = (a1[2 * a2 - 1] << 16) | (*(v32 - 1) << 8) | (a1[3 * a2 - 1] << 24) | v35;
          v37 = v35 | (*(v33 - 1) << 8);
          goto LABEL_57;
        }
        v34 = *(_DWORD *)a1;
        v62 = *(a1 - 1);
        v61 = *(v32 - 1);
        v63 = a1[2 * a2 - 1] << 16;
        v64 = a1[3 * a2 - 1];
        goto LABEL_47;
      }
      if (a5[1])
      {
        v34 = *(_DWORD *)&a1[-a2];
        v61 = a1[a2];
        v62 = *a1;
        v63 = a1[2 * a2] << 16;
        v64 = a1[3 * a2];
LABEL_47:
        v36 = v63 | (v61 << 8) | (v64 << 24) | v62;
        goto LABEL_56;
      }
      v34 = *(_DWORD *)a1;
      v62 = *(_DWORD *)a1;
      v36 = (a1[2 * a2] << 16) | (a1[a2] << 8) | (a1[3 * a2] << 24) | v62;
LABEL_56:
      v37 = v62 & 0xFFFF00FF | (v34 << 8);
LABEL_57:
      v11.i32[0] = v37;
      v8.i32[0] = v34;
      v9.i32[0] = v36;
      v95.i64[0] = 0xE000E000E000ELL;
      v95.i64[1] = 0xE000E000E000ELL;
      v96.i64[0] = -1;
      v96.i64[1] = -1;
      v97 = (int16x8_t)vshlq_u16(v96, v95);
      v98 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
      v99 = vorrq_s8((int8x16_t)vshlq_n_s64(v9, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v11, v98));
      v100 = vorrq_s8((int8x16_t)vshlq_n_s64(v8, 0x10uLL), (int8x16_t)v11);
      v101 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v99, v98), (int8x16_t)0);
      v102 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF0uLL);
      v103 = vaddq_s16(v101, (int16x8_t)vzip1q_s8(v99, (int8x16_t)0));
      v104 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(v103, v97), v96);
      v105 = vaddq_s16(v97, v97);
      v106 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v105, v101), v103), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v99, v102), (int8x16_t)0));
      v99.i64[0] = 0x1000100010001;
      v99.i64[1] = 0x1000100010001;
      v107 = (int8x16_t)vshlq_u16(v106, (uint16x8_t)v99);
      v108 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v100, v98), (int8x16_t)0);
      v109 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v105, (int16x8_t)vzip1q_s8(v100, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v100, v102), (int8x16_t)0)), vaddq_s16(v108, v108)), (uint16x8_t)v99);
      v11 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_n_s64(v109, 0x10uLL), (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64(v104, 0x30uLL), (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL)));
      v105.i64[0] = 0xF0000000FLL;
      v105.i64[1] = 0xF0000000FLL;
      v8 = (int64x2_t)vqtbl1q_s8(vqtbl1q_s8(vorrq_s8(vqtbl1q_s8(vextq_s8(vextq_s8((int8x16_t)0, v107, 6uLL), (int8x16_t)0, 8uLL), (int8x16_t)xmmword_2160F1900), vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vextq_s8((int8x16_t)0, (int8x16_t)v109, 2uLL), (uint32x4_t)v105), (int8x16_t)vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)v104, (int8x16_t)xmmword_2160F1910), (int32x4_t)0))), (int8x16_t)xmmword_2160F1920), (int8x16_t)xmmword_2160F1930);
      v9 = (int64x2_t)vextq_s8((int8x16_t)v8, (int8x16_t)0, 4uLL);
      v10 = (int64x2_t)vextq_s8((int8x16_t)v8, (int8x16_t)0, 8uLL);
      break;
    case 7:
      if (a5[1])
        v38 = -(uint64_t)a2;
      else
        v38 = 0;
      v39 = *(_DWORD *)&a1[v38];
      if (a5[2])
        v40 = *(_DWORD *)&a1[-a2 + 4];
      else
        v40 = v39 & 0xFF000000 | ((v39 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v39 & 0xFF000000 | ((v39 & 0xFF000000) >> 8)) >> 16);
      v11.i32[0] = v39;
      v10.i32[0] = v40;
      v65 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v10, 0xCuLL), (int8x16_t)v11);
      v66.i64[0] = 0xE000E000E000ELL;
      v66.i64[1] = 0xE000E000E000ELL;
      v67.i64[0] = -1;
      v67.i64[1] = -1;
      v68 = (int16x8_t)vshlq_u16(v67, v66);
      v69 = (int16x8_t)vzip1q_s8(v65, (int8x16_t)0);
      v70 = (int16x8_t)vextq_s8((int8x16_t)v69, (int8x16_t)0, 2uLL);
      v71 = vaddq_s16(v70, v69);
      v72 = (int16x8_t)vextq_s8((int8x16_t)v69, (int8x16_t)0, 4uLL);
      v11 = (int32x4_t)vshlq_u16((uint16x8_t)vaddq_s16(v71, v68), v67);
      v67.i64[0] = 0x1000100010001;
      v67.i64[1] = 0x1000100010001;
      v10 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v68, v68), v70), v72), v71), v67);
      v9 = (int64x2_t)vextq_s8((int8x16_t)v11, (int8x16_t)0, 2uLL);
      v8 = (int64x2_t)vextq_s8((int8x16_t)v10, (int8x16_t)0, 2uLL);
      break;
    case 8:
      v41 = &a1[-*a5];
      v11.i32[0] = *v41 | (v41[a2] << 8) | (v41[2 * a2] << 16) | (v41[3 * a2] << 24);
      v42.i64[0] = 0xE000E000E000ELL;
      v42.i64[1] = 0xE000E000E000ELL;
      v43.i64[0] = -1;
      v43.i64[1] = -1;
      v44 = (int16x8_t)vshlq_u16(v43, v42);
      v45 = (int16x8_t)vzip1q_s8((int8x16_t)v11, (int8x16_t)0);
      v46 = (int16x8_t)vextq_s8((int8x16_t)v45, (int8x16_t)0, 2uLL);
      v47 = vaddq_s16(v46, v45);
      v48 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v47, v44), v43);
      v49 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v44, v44), v46), (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v45, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_2160EF110)), v47);
      v46.i64[0] = 0x1000100010001;
      v46.i64[1] = 0x1000100010001;
      v50 = (int16x8_t)vshlq_u16(v49, (uint16x8_t)v46);
      v8 = (int64x2_t)vqtbl1q_s8((int8x16_t)v45, (int8x16_t)xmmword_2160F18F0);
      v11 = (int32x4_t)vzip1q_s16(v48, v50);
      v10 = (int64x2_t)vextq_s8((int8x16_t)v11, (int8x16_t)0, 4uLL);
      v9 = (int64x2_t)vextq_s8((int8x16_t)vdupq_laneq_s32(v11, 2), (int8x16_t)v8, 0xCuLL);
      break;
    default:
      break;
  }
  v110 = 0uLL;
  v111 = 0uLL;
  v112 = 0uLL;
  switch(a7)
  {
    case 0:
      v7.i32[0] = *(_DWORD *)&a1[-(a5[1] * a2)];
      v7 = (int64x2_t)vzip1q_s8((int8x16_t)v7, (int8x16_t)0);
      goto LABEL_107;
    case 1:
      v113 = &a1[-*a5];
      v114 = *v113 | (*v113 << 8);
      v115 = v113[a2] | (v113[a2] << 8);
      v7.i32[0] = v114 | (v114 << 16);
      v112 = (int32x4_t)vzip1q_s8((int8x16_t)v7, (int8x16_t)0);
      v111 = (int64x2_t)vzip1q_s8((int8x16_t)(v115 | (v115 << 16)), (int8x16_t)0);
      v116 = v113[2 * a2];
      LODWORD(v113) = v113[3 * a2] | (v113[3 * a2] << 8);
      v110 = (int64x2_t)vzip1q_s8((int8x16_t)(v116 | (v116 << 8) | ((v116 | (v116 << 8)) << 16)), (int8x16_t)0);
      v7 = (int64x2_t)vzip1q_s8((int8x16_t)(v113 | ((_DWORD)v113 << 16)), (int8x16_t)0);
      goto LABEL_115;
    case 2:
      if (*a5)
      {
        v117 = *(a1 - 1);
        v118 = a1[a2 - 1];
        v119 = a1[2 * a2 - 1];
        v120 = a1[3 * a2 - 1];
        if (a5[1])
        {
          v7.i32[0] = *(_DWORD *)&a1[-a2];
          v121 = (vaddvq_s32((int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v7.i8)))
                              + v120
                              + v119
                              + v118
                              + v117
                              + 4) >> 3;
          goto LABEL_106;
        }
        v148 = v117 + v118 + v119 + v120;
        goto LABEL_97;
      }
      if (a5[1])
      {
        v7.i32[0] = *(_DWORD *)&a1[-a2];
        v148 = vaddvq_s32((int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v7.i8)));
LABEL_97:
        v121 = (v148 + 2) >> 2;
        goto LABEL_106;
      }
      v121 = 128;
LABEL_106:
      v112.i32[0] = v121 | (v121 << 8) | ((v121 | (v121 << 8)) << 16);
      v7 = (int64x2_t)vzip1q_s8((int8x16_t)v112, (int8x16_t)0);
LABEL_107:
      v110 = v7;
      v111 = v7;
      v112 = (int32x4_t)v7;
      goto LABEL_115;
    case 3:
      if (a5[1])
        v122 = -(uint64_t)a2;
      else
        v122 = 0;
      v123 = *(_DWORD *)&a1[v122];
      if (a5[2])
        v124 = *(_DWORD *)&a1[-a2 + 4];
      else
        v124 = v123 & 0xFF000000 | ((v123 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v123 & 0xFF000000 | ((v123 & 0xFF000000) >> 8)) >> 16);
      v112.i32[0] = v123;
      v111.i32[0] = v124;
      v149 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v111, 0xCuLL), (int8x16_t)v112);
      v150.i64[0] = 0xE000E000E000ELL;
      v150.i64[1] = 0xE000E000E000ELL;
      v151.i64[0] = -1;
      v151.i64[1] = -1;
      v152 = (int16x8_t)vshlq_u16(v151, v150);
      v153 = (int16x8_t)vzip1q_s8(v149, (int8x16_t)0);
      v154 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v152, v152), (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v153, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_2160EF100)), vaddq_s16((int16x8_t)vextq_s8((int8x16_t)vaddq_s16(v153, v153), (int8x16_t)0, 2uLL), v153));
      v152.i64[0] = 0x1000100010001;
      v152.i64[1] = 0x1000100010001;
      v112 = (int32x4_t)vshlq_u16(v154, (uint16x8_t)v152);
      v111 = (int64x2_t)vextq_s8((int8x16_t)v112, (int8x16_t)0, 2uLL);
      v110 = (int64x2_t)vextq_s8((int8x16_t)v112, (int8x16_t)0, 4uLL);
      v7 = (int64x2_t)vextq_s8((int8x16_t)v112, (int8x16_t)0, 6uLL);
      goto LABEL_115;
    case 4:
      if (*a5)
      {
        if (a5[1])
        {
          v125 = &a1[-a2];
          v126 = *(_DWORD *)v125;
          v127 = *(v125 - 1);
        }
        else
        {
          v126 = *(_DWORD *)a1;
          v127 = *(_DWORD *)a1;
        }
        v155 = a1[3 * a2 - 1] | (a1[2 * a2 - 1] << 8) | (a1[a2 - 1] << 16);
        v156 = *(a1 - 1);
      }
      else if (a5[1])
      {
        v126 = *(_DWORD *)&a1[-a2];
        v127 = v126;
        v155 = a1[3 * a2] | (a1[2 * a2] << 8) | (a1[a2] << 16);
        v156 = *a1;
      }
      else
      {
        v156 = *(_DWORD *)a1;
        v127 = *(_DWORD *)a1;
        v155 = a1[3 * a2] | (a1[2 * a2] << 8) | (a1[a2] << 16);
        v126 = *(_DWORD *)a1;
      }
      v7.i32[0] = v127;
      v112.i32[0] = v126;
      v111.i32[0] = v155 | (v156 << 24);
      v170 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v112, 8uLL), (int8x16_t)v7);
      v171 = (uint16x8_t)vdupq_n_s64(0xFFFFFFF0uLL);
      v172 = (int16x8_t)vzip1q_s8(vqtbl1q_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)v111, (uint64x2_t)v171), (int8x16_t)vshlq_n_s64(v170, 0x10uLL)), (int8x16_t)xmmword_2160EE840), (int8x16_t)0);
      v173 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)v111, (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL)), (int8x16_t)vshlq_n_s64(v170, 0x18uLL)), (int8x16_t)0);
      v174 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vshlq_u64((uint64x2_t)v170, (uint64x2_t)v171), 0x20uLL), (int8x16_t)v111), (int8x16_t)0);
      v175.i64[0] = 0xE000E000E000ELL;
      v175.i64[1] = 0xE000E000E000ELL;
      v171.i64[0] = -1;
      v171.i64[1] = -1;
      v176 = (int16x8_t)vshlq_u16(v171, v175);
      v177 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v173, v173), v172), vaddq_s16(vaddq_s16(v176, v176), v174));
      v172.i64[0] = 0x1000100010001;
      v172.i64[1] = 0x1000100010001;
      v7 = (int64x2_t)vshlq_u16(v177, (uint16x8_t)v172);
      v112 = (int32x4_t)vextq_s8((int8x16_t)v7, (int8x16_t)0, 6uLL);
      v111 = (int64x2_t)vextq_s8((int8x16_t)v7, (int8x16_t)0, 4uLL);
      v110 = (int64x2_t)vextq_s8((int8x16_t)v7, (int8x16_t)0, 2uLL);
      goto LABEL_115;
    case 5:
      if (*a5)
      {
        if (a5[1])
        {
          v128 = &a1[-a2];
          v129 = *(_DWORD *)v128;
          v130 = *(_DWORD *)v128 | (*(v128 - 1) << 8);
        }
        else
        {
          v129 = *(_DWORD *)a1;
          v130 = *(_DWORD *)a1 | (*(_DWORD *)a1 << 8);
        }
        v178 = &a1[a2];
        v179 = *--a1;
        v180 = v179 | (*(v178 - 1) << 8);
      }
      else
      {
        if (a5[1])
        {
          v129 = *(_DWORD *)&a1[-a2];
          v130 = v129 | (v129 << 8);
          v157 = *a1;
        }
        else
        {
          v129 = *(_DWORD *)a1;
          v157 = *(_DWORD *)a1;
          v130 = v157 | (v157 << 8);
        }
        v180 = v157 | (a1[a2] << 8);
      }
      v7.i32[0] = v130;
      v112.i32[0] = v129;
      v110.i32[0] = v180 | (a1[2 * a2] << 16);
      v181.i64[0] = 0xE000E000E000ELL;
      v181.i64[1] = 0xE000E000E000ELL;
      v182.i64[0] = -1;
      v182.i64[1] = -1;
      v183 = (int16x8_t)vshlq_u16(v182, v181);
      v184 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
      v185 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v112, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v7, v184));
      v186 = vorrq_s8((int8x16_t)vshlq_n_s64(v110, 0x10uLL), (int8x16_t)v7);
      v187 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF0uLL);
      v188 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v185, v184), (int8x16_t)0);
      v189 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v185, v187), (int8x16_t)0);
      v190 = vaddq_s16(v188, (int16x8_t)vzip1q_s8(v185, (int8x16_t)0));
      v112 = (int32x4_t)vshlq_u16((uint16x8_t)vaddq_s16(v190, v183), v182);
      v191 = vaddq_s16(v183, v183);
      v182.i64[0] = 0x1000100010001;
      v182.i64[1] = 0x1000100010001;
      v192 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v191, v188), v190), v189), v182);
      v193 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v186, v184), (int8x16_t)0);
      v194 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v191, (int16x8_t)vzip1q_s8(v186, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v186, v187), (int8x16_t)0)), vaddq_s16(v193, v193)), v182);
      v110 = (int64x2_t)vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v112, 0xEuLL), (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64(v194, 0x20uLL), (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL)));
      v7 = (int64x2_t)vextq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vqtbl1q_s8((int8x16_t)v194, (int8x16_t)xmmword_2160F1940), 0), v192, 0xCuLL);
      v111 = (int64x2_t)vextq_s8((int8x16_t)v7, (int8x16_t)0, 2uLL);
      goto LABEL_115;
    case 6:
      if (*a5)
      {
        if (a5[1])
        {
          v131 = &a1[-a2];
          v132 = *(_DWORD *)v131;
          v133 = *(a1 - 1);
          v134 = (a1[2 * a2 - 1] << 16) | (a1[a2 - 1] << 8) | (a1[3 * a2 - 1] << 24) | v133;
          v135 = v133 | (*(v131 - 1) << 8);
          goto LABEL_114;
        }
        v132 = *(_DWORD *)a1;
        v159 = *(a1 - 1);
        v158 = a1[a2 - 1];
        v160 = a1[2 * a2 - 1] << 16;
        v161 = a1[3 * a2 - 1];
        goto LABEL_104;
      }
      if (a5[1])
      {
        v132 = *(_DWORD *)&a1[-a2];
        v158 = a1[a2];
        v159 = *a1;
        v160 = a1[2 * a2] << 16;
        v161 = a1[3 * a2];
LABEL_104:
        v134 = v160 | (v158 << 8) | (v161 << 24) | v159;
        goto LABEL_113;
      }
      v132 = *(_DWORD *)a1;
      v159 = *(_DWORD *)a1;
      v134 = (a1[2 * a2] << 16) | (a1[a2] << 8) | (a1[3 * a2] << 24) | v159;
LABEL_113:
      v135 = v159 & 0xFFFF00FF | (v132 << 8);
LABEL_114:
      v7.i32[0] = v135;
      v112.i32[0] = v132;
      v110.i32[0] = v134;
      v195.i64[0] = 0xE000E000E000ELL;
      v195.i64[1] = 0xE000E000E000ELL;
      v196.i64[0] = -1;
      v196.i64[1] = -1;
      v197 = (int16x8_t)vshlq_u16(v196, v195);
      v198 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
      v199 = vorrq_s8((int8x16_t)vshlq_n_s64(v110, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v7, v198));
      v200 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v112, 0x10uLL), (int8x16_t)v7);
      v201 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v199, v198), (int8x16_t)0);
      v202 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF0uLL);
      v203 = vaddq_s16(v201, (int16x8_t)vzip1q_s8(v199, (int8x16_t)0));
      v204 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(v203, v197), v196);
      v205 = vaddq_s16(v197, v197);
      v206 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v205, v201), v203), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v199, v202), (int8x16_t)0));
      v199.i64[0] = 0x1000100010001;
      v199.i64[1] = 0x1000100010001;
      v207 = (int8x16_t)vshlq_u16(v206, (uint16x8_t)v199);
      v208 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v200, v198), (int8x16_t)0);
      v209 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v205, (int16x8_t)vzip1q_s8(v200, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v200, v202), (int8x16_t)0)), vaddq_s16(v208, v208)), (uint16x8_t)v199);
      v112 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_n_s64(v209, 0x10uLL), (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64(v204, 0x30uLL), (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL)));
      v199.i64[0] = 0xF0000000FLL;
      v199.i64[1] = 0xF0000000FLL;
      v7 = (int64x2_t)vqtbl1q_s8(vqtbl1q_s8(vorrq_s8(vqtbl1q_s8(vextq_s8(vextq_s8((int8x16_t)0, v207, 6uLL), (int8x16_t)0, 8uLL), (int8x16_t)xmmword_2160F1900), vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vextq_s8((int8x16_t)0, (int8x16_t)v209, 2uLL), (uint32x4_t)v199), (int8x16_t)vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)v204, (int8x16_t)xmmword_2160F1910), (int32x4_t)0))), (int8x16_t)xmmword_2160F1920), (int8x16_t)xmmword_2160F1930);
      v110 = (int64x2_t)vextq_s8((int8x16_t)v7, (int8x16_t)0, 4uLL);
      v111 = (int64x2_t)vextq_s8((int8x16_t)v7, (int8x16_t)0, 8uLL);
LABEL_115:
      v210 = (int16x8_t)vzip1q_s64(v8, v7);
      result = vsubq_s16(*a3, (int16x8_t)vzip1q_s64((int64x2_t)v11, (int64x2_t)v112));
      v212 = vsubq_s16(a3[1], (int16x8_t)vzip1q_s64(v10, v111));
      v213 = vsubq_s16(a3[2], (int16x8_t)vzip1q_s64(v9, v110));
      v214 = vsubq_s16(a3[3], v210);
      *a4 = result;
      a4[1] = v212;
      a4[2] = v213;
      a4[3] = v214;
      return result;
    case 7:
      if (a5[1])
        v136 = -(uint64_t)a2;
      else
        v136 = 0;
      v137 = *(_DWORD *)&a1[v136];
      if (a5[2])
        v138 = *(_DWORD *)&a1[-a2 + 4];
      else
        v138 = v137 & 0xFF000000 | ((v137 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v137 & 0xFF000000 | ((v137 & 0xFF000000) >> 8)) >> 16);
      v112.i32[0] = v137;
      v111.i32[0] = v138;
      v162 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v111, 0xCuLL), (int8x16_t)v112);
      v163.i64[0] = 0xE000E000E000ELL;
      v163.i64[1] = 0xE000E000E000ELL;
      v164.i64[0] = -1;
      v164.i64[1] = -1;
      v165 = (int16x8_t)vshlq_u16(v164, v163);
      v166 = (int16x8_t)vzip1q_s8(v162, (int8x16_t)0);
      v167 = (int16x8_t)vextq_s8((int8x16_t)v166, (int8x16_t)0, 2uLL);
      v168 = vaddq_s16(v167, v166);
      v169 = (int16x8_t)vextq_s8((int8x16_t)v166, (int8x16_t)0, 4uLL);
      v112 = (int32x4_t)vshlq_u16((uint16x8_t)vaddq_s16(v168, v165), v164);
      v164.i64[0] = 0x1000100010001;
      v164.i64[1] = 0x1000100010001;
      v111 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v165, v165), v167), v169), v168), v164);
      v110 = (int64x2_t)vextq_s8((int8x16_t)v112, (int8x16_t)0, 2uLL);
      v7 = (int64x2_t)vextq_s8((int8x16_t)v111, (int8x16_t)0, 2uLL);
      goto LABEL_115;
    case 8:
      v139 = &a1[-*a5];
      v7.i32[0] = *v139 | (v139[a2] << 8) | (v139[2 * a2] << 16) | (v139[3 * a2] << 24);
      v140.i64[0] = 0xE000E000E000ELL;
      v140.i64[1] = 0xE000E000E000ELL;
      v141.i64[0] = -1;
      v141.i64[1] = -1;
      v142 = (int16x8_t)vshlq_u16(v141, v140);
      v143 = (int16x8_t)vzip1q_s8((int8x16_t)v7, (int8x16_t)0);
      v144 = (int16x8_t)vextq_s8((int8x16_t)v143, (int8x16_t)0, 2uLL);
      v145 = vaddq_s16(v144, v143);
      v146 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v145, v142), v141);
      v147 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v142, v142), v144), (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v143, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_2160EF110)), v145);
      v144.i64[0] = 0x1000100010001;
      v144.i64[1] = 0x1000100010001;
      v7 = (int64x2_t)vqtbl1q_s8((int8x16_t)v143, (int8x16_t)xmmword_2160F18F0);
      v112 = (int32x4_t)vzip1q_s16(v146, (int16x8_t)vshlq_u16(v147, (uint16x8_t)v144));
      v111 = (int64x2_t)vextq_s8((int8x16_t)v112, (int8x16_t)0, 4uLL);
      v110 = (int64x2_t)vextq_s8((int8x16_t)vdupq_laneq_s32(v112, 2), (int8x16_t)v7, 0xCuLL);
      goto LABEL_115;
    default:
      goto LABEL_115;
  }
}

uint64_t sub_216097604(uint64_t result, int a2, _BYTE *a3, _BYTE *a4)
{
  int v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  signed int v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _BYTE *v19;
  int v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;

  v4 = a4[3];
  if (a4[3])
    v5 = -1;
  else
    v5 = 0;
  if (a4[2])
    v6 = 15;
  else
    v6 = 7;
  if (a4[1])
  {
    v7 = 0;
    if (a4[3])
      v8 = -1;
    else
      v8 = 0;
    *a3 = (*(unsigned __int8 *)(result + v8 - a2)
         + 2 * *(unsigned __int8 *)(result - a2)
         + *(unsigned __int8 *)(result - a2 + 1)
         + 2) >> 2;
    v9 = result - a2;
    do
    {
      if ((int)v7 >= (int)v6)
        v10 = v6;
      else
        v10 = v7;
      v11 = *(unsigned __int8 *)(v9 + v10);
      v12 = v7 + 1;
      if ((int)v7 + 1 >= v6)
        v13 = v6;
      else
        v13 = v7 + 1;
      v14 = *(unsigned __int8 *)(v9 + v13);
      v15 = v7 + 2;
      if ((int)v7 + 2 >= v6)
        v15 = v6;
      a3[++v7] = (v11 + 2 * v14 + *(unsigned __int8 *)(v9 + v15) + 2) >> 2;
    }
    while (v12 != 16);
    a3[16] = a3[15];
  }
  if (*a4)
  {
    v16 = 0;
    if (v4)
      v17 = -1;
    else
      v17 = 0;
    v18 = (unsigned __int8 *)(result - 1);
    v19 = a3 - 2;
    do
    {
      v20 = v16 - 1;
      if (v16 <= v17)
        v20 = v5;
      v21 = *(unsigned __int8 *)(result + a2 * (uint64_t)v20 - 1);
      if (++v16 >= 7)
        v22 = 7;
      else
        v22 = v16;
      *v19-- = (v21 + 2 * *v18 + *(unsigned __int8 *)(result + v22 * a2 - 1) + 2) >> 2;
      v18 += a2;
    }
    while (v16 != 8);
    *(a3 - 10) = *(a3 - 9);
  }
  if (a4[3])
  {
    if (*a4)
    {
      v23 = *(unsigned __int8 *)(result - 1);
      if (v4)
        v24 = -1;
      else
        v24 = 0;
      if (a4[1])
      {
        v25 = v23 + 2 * *(unsigned __int8 *)(result + v24 - a2) + *(unsigned __int8 *)(result - a2);
      }
      else
      {
        v27 = *(unsigned __int8 *)(result + v24 * a2 - 1);
        v25 = v23 + v27 + 2 * v27;
      }
    }
    else
    {
      if (!a4[1])
        return result;
      if (v4)
        v26 = -1;
      else
        v26 = 0;
      v25 = *(unsigned __int8 *)(result - a2) + 3 * *(unsigned __int8 *)(result + v26 - a2);
    }
    *(a3 - 1) = (v25 + 2) >> 2;
  }
  return result;
}

_QWORD *sub_2160977C8(_QWORD *result, int a2, uint64_t *a3)
{
  uint64_t v3;
  int v4;

  v3 = *a3;
  v4 = 8;
  do
  {
    *result = v3;
    result = (_QWORD *)((char *)result + a2);
    --v4;
  }
  while (v4);
  return result;
}

_QWORD *sub_2160977E8(_QWORD *result, int a2, uint64_t a3)
{
  uint64_t i;

  for (i = -2; i != -10; --i)
  {
    *result = 0x101010101010101 * *(unsigned __int8 *)(a3 + i);
    result = (_QWORD *)((char *)result + a2);
  }
  return result;
}

uint64_t *sub_216097814(uint64_t *result, int a2, uint64_t a3, _BYTE *a4)
{
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t i;
  uint64_t v14;
  int v15;
  int v16;

  v4 = a4[1];
  if (*a4)
  {
    if (a4[1])
    {
      v5 = 0;
      v6 = 0;
      v7 = -2;
      do
        v6 += *(unsigned __int8 *)(a3 + v7--) + *(unsigned __int8 *)(a3 + v5++);
      while (v5 != 8);
      v8 = 8;
      do
      {
        *result = 0x101010101010101 * ((uint64_t)(v6 + 8) >> 4);
        result = (uint64_t *)((char *)result + a2);
        --v8;
      }
      while (v8);
    }
    else
    {
      for (i = -2; i != -10; --i)
        v4 += *(unsigned __int8 *)(a3 + i);
      v14 = 0x101010101010101 * ((v4 + 4) >> 3);
      v15 = 8;
      do
      {
        *result = v14;
        result = (uint64_t *)((char *)result + a2);
        --v15;
      }
      while (v15);
    }
  }
  else if (a4[1])
  {
    v9 = 0;
    v10 = 0;
    do
      v10 += *(unsigned __int8 *)(a3 + v9++);
    while (v9 != 8);
    v11 = 0x101010101010101 * ((v10 + 4) >> 3);
    v12 = 8;
    do
    {
      *result = v11;
      result = (uint64_t *)((char *)result + a2);
      --v12;
    }
    while (v12);
  }
  else
  {
    v16 = 8;
    do
    {
      *result = 0x8080808080808080;
      result = (uint64_t *)((char *)result + a2);
      --v16;
    }
    while (v16);
  }
  return result;
}

uint64_t sub_21609792C(uint64_t a1, int a2, unsigned __int8 *a3, double a4, double a5, double a6, double a7, double a8, uint16x8_t a9)
{
  uint8x8_t v9;
  int16x8_t v10;
  uint8x8_t v11;
  uint16x8_t v12;
  int16x8_t v13;
  int8x8_t v14;
  int8x8_t v15;
  int16x4_t v16;
  int v17;
  int v18;
  int16x8_t v19;
  unsigned int v20;
  char v21;
  int16x8_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;

  v9 = *(uint8x8_t *)(a3 + 7);
  v10 = (int16x8_t)vmovl_u8(v9);
  v11 = *(uint8x8_t *)(a3 + 8);
  v12 = vshll_n_u8(v11, 1uLL);
  v13 = (int16x8_t)vaddw_u8(v12, v9);
  v12.i32[0] = *(_DWORD *)(a3 + 3);
  v14 = (int8x8_t)vmovl_u8(*(uint8x8_t *)v12.i8).u64[0];
  a9.i32[0] = 131074;
  a9.i16[2] = 2;
  a9.i16[3] = 2;
  v12.i64[0] = vaddw_u8(a9, *(uint8x8_t *)v12.i8).u64[0];
  v15 = (int8x8_t)vdup_lane_s16(*(int16x4_t *)v10.i8, 0);
  v16 = (int16x4_t)vext_s8(v14, vext_s8(v15, v15, 6uLL), 2uLL);
  v17 = a3[1];
  v18 = a3[2];
  v19 = (int16x8_t)vextq_s8((int8x16_t)vmovl_u8(v11), (int8x16_t)v13, 2uLL);
  v19.i16[7] = a3[16];
  v20 = (v18 + 2 + *a3 + 2 * v17) >> 2;
  LOBYTE(v17) = (v12.u16[0] + v17 + 2 * v18) >> 2;
  v21 = (v18 + 2 + 2 * v14.u16[0] + v14.u16[1]) >> 2;
  *(uint16x4_t *)v10.i8 = vshr_n_u16((uint16x4_t)vadd_s16(vadd_s16(*(int16x4_t *)v12.i8, (int16x4_t)vext_s8(v14, *(int8x8_t *)v10.i8, 4uLL)), vadd_s16(v16, v16)), 2uLL);
  *(_BYTE *)a1 = v20;
  *(_BYTE *)(a1 + 1) = v17;
  *(_BYTE *)(a1 + 2) = v21;
  v12.i32[0] = vmovn_s16(v10).u32[0];
  *(_DWORD *)(a1 + 3) = v12.i32[0];
  v22 = vaddq_s16(v13, v19);
  *(int8x8_t *)v22.i8 = vrshrn_n_s16(v22, 2uLL);
  *(_BYTE *)(a1 + 7) = v22.i8[0];
  v23 = a1 + a2;
  *(_BYTE *)v23 = v17;
  *(_BYTE *)(v23 + 1) = v21;
  *(_BYTE *)(v23 + 6) = v22.i8[0];
  *(_DWORD *)(v23 + 2) = v12.i32[0];
  *(_BYTE *)(v23 + 7) = v22.i8[1];
  v24 = a1 + 2 * a2;
  *(_BYTE *)v24 = v21;
  *(_DWORD *)(v24 + 1) = v12.i32[0];
  *(_WORD *)(v24 + 5) = v22.i16[0];
  *(_BYTE *)(v24 + 7) = v22.i8[2];
  v12.i32[1] = vmovn_s16((int16x8_t)vzip1q_s8((int8x16_t)v22, (int8x16_t)v22)).u32[0];
  *(_QWORD *)(a1 + 3 * a2) = v12.i64[0];
  v25 = a1 + 4 * a2;
  *(_BYTE *)v25 = v10.i8[2];
  v26 = a1 + 5 * a2;
  *(_BYTE *)(v25 + 1) = v10.i8[4];
  v27 = a1 + 6 * a2;
  *(_BYTE *)(v25 + 2) = v10.i8[6];
  *(_BYTE *)(v25 + 7) = v22.i8[4];
  result = a1 - a2;
  *(_DWORD *)(v25 + 3) = v12.i32[1];
  *(_BYTE *)v26 = v10.i8[4];
  *(_BYTE *)(v26 + 1) = v10.i8[6];
  *(_DWORD *)(v26 + 2) = v12.i32[1];
  *(_WORD *)(v26 + 6) = v22.i16[2];
  *(_BYTE *)v27 = v10.i8[6];
  *(_DWORD *)(v27 + 1) = v12.i32[1];
  *(_WORD *)(v27 + 5) = v22.i16[2];
  *(_BYTE *)(v27 + 7) = v22.i8[6];
  *(_QWORD *)(result + 8 * a2) = v22.i64[0];
  return result;
}

int8x8_t sub_216097AC4(int8x8_t *a1, int a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  uint8x8_t v13;
  unsigned __int16 v14;
  uint8x8_t v15;
  uint16x8_t v16;
  int16x8_t v17;
  int16x8_t v18;
  int16x8_t v19;
  int8x8_t result;
  unsigned int v21;
  unsigned int v22;
  char *v23;
  int v24;
  char *v25;
  char *v26;
  unsigned int v27;
  char *v28;
  unsigned int v29;
  unsigned int v30;
  char *v31;
  char *v32;
  _BYTE *v33;

  v3 = *(unsigned __int8 *)(a3 - 3);
  v4 = *(unsigned __int8 *)(a3 - 4);
  v5 = *(unsigned __int8 *)(a3 - 5);
  v6 = (v3 + v5 + 2 * v4 + 2) >> 2;
  v7 = *(unsigned __int8 *)(a3 - 6);
  v8 = *(unsigned __int8 *)(a3 - 7);
  v9 = (v4 + v7 + 2 * v5 + 2) >> 2;
  v10 = *(unsigned __int8 *)(a3 - 8);
  v11 = v5 + v8;
  v12 = *(unsigned __int8 *)(a3 - 9);
  v13 = *(uint8x8_t *)(a3 - 2);
  v14 = vmovl_u8(v13).u16[0];
  v15 = *(uint8x8_t *)(a3 - 1);
  v16.i64[0] = 0x2000200020002;
  v16.i64[1] = 0x2000200020002;
  v17 = (int16x8_t)vaddw_u8(v16, v13);
  v18 = vaddq_s16(v17, (int16x8_t)vshll_n_u8(v15, 1uLL));
  v19 = (int16x8_t)vextq_s8((int8x16_t)vmovl_u8(v15), (int8x16_t)v18, 2uLL);
  v19.i16[7] = *(unsigned __int8 *)(a3 + 7);
  result = vshrn_n_s16(vaddq_s16(v18, v19), 2uLL);
  v21 = ((v17.u16[1] + 2 * v14 + v3) >> 2) & 0x1FF;
  *a1 = result;
  v22 = v17.u16[0] + v4 + 2 * v3;
  v23 = (char *)a1 + a2;
  *v23 = v21;
  *(_DWORD *)(v23 + 1) = result.i32[0];
  *(_WORD *)(v23 + 5) = result.i16[2];
  v23[7] = result.i8[6];
  v24 = (v22 >> 2) & 0x1FF;
  v25 = (char *)a1 + 2 * a2;
  *v25 = v24;
  *(_DWORD *)(v25 + 2) = result.i32[0];
  v25[6] = result.i8[4];
  v25[1] = v21;
  v25[7] = result.i8[5];
  v26 = (char *)a1 + 3 * a2;
  *v26 = v6;
  v27 = (v11 + 2 * v7 + 2) >> 2;
  v26[1] = v24;
  v26[2] = v21;
  *(_DWORD *)(v26 + 3) = result.i32[0];
  v26[7] = result.i8[4];
  v28 = (char *)a1 + 4 * a2;
  *v28 = v9;
  v29 = (v7 + v10 + 2 * v8 + 2) >> 2;
  v28[1] = v6;
  v28[2] = v24;
  v30 = (v8 + v12 + 2 * v10 + 2) >> 2;
  v28[3] = v21;
  *((_DWORD *)v28 + 1) = result.i32[0];
  v31 = (char *)a1 + 5 * a2;
  *v31 = v27;
  v31[1] = v9;
  v31[2] = v6;
  v31[3] = v24;
  *(_WORD *)(v31 + 5) = result.i16[0];
  v31[4] = v21;
  v31[7] = result.i8[2];
  v32 = (char *)a1 + 6 * a2;
  *v32 = v29;
  v32[1] = v27;
  v32[2] = v9;
  v32[3] = v6;
  v32[4] = v24;
  v32[5] = v21;
  *((_WORD *)v32 + 3) = result.i16[0];
  v33 = (char *)&a1[a2] - a2;
  *v33 = v30;
  v33[1] = v29;
  v33[2] = v27;
  v33[3] = v9;
  v33[4] = v6;
  v33[5] = v24;
  v33[6] = v21;
  v33[7] = result.i8[0];
  return result;
}

_BYTE *sub_216097D14(_BYTE *result, int a2, unsigned __int8 *a3)
{
  int v3;
  int v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  _BYTE *v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  _BYTE *v48;
  _BYTE *v49;
  unsigned int v50;
  _BYTE *v51;
  _BYTE *v52;
  _BYTE *v53;
  _BYTE *v54;

  v3 = *(a3 - 1);
  v4 = *a3;
  v5 = v4 + 1 + v3;
  v6 = a3[1];
  v7 = v4 + 1 + v6;
  v8 = a3[2];
  v9 = v6 + v8;
  v10 = a3[3];
  v11 = v8 + v10;
  v12 = a3[4];
  v13 = v10 + v12;
  v14 = a3[5];
  v15 = v12 + v14;
  v16 = a3[6];
  v17 = v14 + v16;
  v18 = a3[7];
  v19 = *(a3 - 2);
  v20 = v4 + 2;
  v21 = *(a3 - 3);
  v22 = *(a3 - 4);
  v23 = *(a3 - 5);
  v24 = *(a3 - 6);
  v25 = *(a3 - 7);
  v26 = *(a3 - 8);
  result[7] = (v16 + v18 + 1) >> 1;
  v27 = v4 + 2 + 2 * v3;
  v3 += 2;
  v28 = v3 + 2 * v4 + v6;
  v29 = v20 + 2 * v6 + v8;
  v30 = v6 + 2 * v8 + v10;
  v31 = v8 + 2 * v10 + v12;
  v32 = v10 + 2 * v12 + v14;
  v33 = v12 + 2 * v14 + v16;
  v34 = v14 + 2 * v16;
  v5 >>= 1;
  *result = v5;
  v7 >>= 1;
  result[1] = v7;
  v35 = (v9 + 1) >> 1;
  result[2] = v35;
  v36 = (v11 + 1) >> 1;
  result[3] = v36;
  v37 = (v13 + 1) >> 1;
  result[4] = v37;
  v38 = (v15 + 1) >> 1;
  result[5] = v38;
  v39 = (v17 + 1) >> 1;
  result[6] = v39;
  v40 = (v27 + v19) >> 2;
  v41 = v34 + v18;
  v42 = &result[a2];
  *v42 = v40;
  v28 >>= 2;
  v42[1] = v28;
  v29 >>= 2;
  v42[2] = v29;
  v43 = (v30 + 2) >> 2;
  v42[3] = v43;
  v44 = (v31 + 2) >> 2;
  v42[4] = v44;
  v45 = (v32 + 2) >> 2;
  v42[5] = v45;
  v46 = (v33 + 2) >> 2;
  v42[6] = v46;
  v42[7] = (v41 + 2) >> 2;
  v47 = (v3 + v21 + 2 * v19) >> 2;
  v48 = &result[2 * a2];
  *v48 = v47;
  v48[1] = v5;
  v48[2] = v7;
  v48[3] = v35;
  v48[4] = v36;
  v48[5] = v37;
  v48[6] = v38;
  v48[7] = v39;
  v49 = &result[3 * a2];
  v50 = (v19 + v22 + 2 * v21 + 2) >> 2;
  *v49 = v50;
  v49[1] = v40;
  v49[2] = v28;
  v49[3] = v29;
  v49[4] = v43;
  v49[5] = v44;
  v49[6] = v45;
  v49[7] = v46;
  LODWORD(v49) = (v21 + v23 + 2 * v22 + 2) >> 2;
  v51 = &result[4 * a2];
  *v51 = (_BYTE)v49;
  v51[1] = v47;
  v51[2] = v5;
  v51[3] = v7;
  v51[4] = v35;
  v51[5] = v36;
  v51[6] = v37;
  v51[7] = v38;
  v52 = &result[5 * a2];
  LODWORD(v51) = (v22 + v24 + 2 * v23 + 2) >> 2;
  *v52 = (_BYTE)v51;
  v52[1] = v50;
  v52[2] = v40;
  v52[3] = v28;
  v52[4] = v29;
  v52[5] = v43;
  v52[6] = v44;
  v52[7] = v45;
  v53 = &result[6 * a2];
  *v53 = (v23 + v25 + 2 * v24 + 2) >> 2;
  v53[1] = (_BYTE)v49;
  v53[2] = v47;
  v53[3] = v5;
  v53[4] = v7;
  v53[5] = v35;
  v53[6] = v36;
  v53[7] = v37;
  v54 = &result[8 * a2 - a2];
  *v54 = (v24 + v26 + 2 * v25 + 2) >> 2;
  v54[1] = (_BYTE)v51;
  v54[2] = v50;
  v54[3] = v40;
  v54[4] = v28;
  v54[5] = v29;
  v54[6] = v43;
  v54[7] = v44;
  return result;
}

uint16x4_t sub_216097FE8(uint64_t a1, int a2, unsigned __int8 *a3, uint8x8_t a4)
{
  int v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  uint8x8_t v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  int v26;
  uint16x8_t v27;
  int16x4_t v28;
  unsigned int v29;
  int16x8_t v30;
  unsigned int v31;
  _BYTE *v32;
  unsigned int v33;
  unsigned int v34;
  uint16x4_t result;
  unsigned int v36;
  _BYTE *v37;
  unsigned int v38;
  unsigned int v39;
  _BYTE *v40;
  unsigned int v41;
  _BYTE *v42;
  _BYTE *v43;
  _BYTE *v44;
  _BYTE *v45;

  v4 = *(a3 - 2);
  v5 = *(a3 - 1);
  v6 = *a3;
  v7 = (v4 + 1 + v5) >> 1;
  v8 = v4 + 2;
  a4.i32[0] = *(_DWORD *)(a3 + 1);
  v9 = (uint8x8_t)vmovl_u8(a4).u64[0];
  v10 = v9.u16[0];
  v11 = (v4 + 2 + 2 * v5 + v6) >> 2;
  v12 = v5 + 2;
  v13 = *(a3 - 3);
  v14 = v5 + 2 + 2 * v6;
  v15 = *(a3 - 4);
  v16 = v6 + 2 * v9.u16[0];
  v17 = *(a3 - 5);
  v18 = (v4 + 1 + v13) >> 1;
  v19 = *(a3 - 6);
  v20 = *(a3 - 7);
  v21 = v12 + 2 * v4 + v13;
  v22 = *(a3 - 8);
  v23 = v21 >> 2;
  v24 = *(a3 - 9);
  v25 = (v13 + v15 + 1) >> 1;
  v26 = v9.u16[1];
  v9.i32[0] = *(_DWORD *)(a3 + 2);
  v27 = vmovl_u8(v9);
  v28 = (int16x4_t)vext_s8(*(int8x8_t *)v27.i8, (int8x8_t)a4, 2uLL);
  v28.i16[3] = a3[6];
  v29 = (v8 + v15 + 2 * v13) >> 2;
  *(_BYTE *)a1 = v7;
  LOBYTE(v14) = (v14 + v10) >> 2;
  *(_BYTE *)(a1 + 1) = v11;
  *(_BYTE *)(a1 + 2) = v14;
  LOBYTE(v16) = (v16 + v26 + 2) >> 2;
  *(int16x4_t *)v27.i8 = vadd_s16(*(int16x4_t *)v27.i8, *(int16x4_t *)v27.i8);
  v30 = (int16x8_t)vaddw_u8(v27, a4);
  *(_BYTE *)(a1 + 3) = v16;
  *(int16x4_t *)v30.i8 = vadd_s16(*(int16x4_t *)v30.i8, v28);
  *(_DWORD *)(a1 + 4) = vrshrn_n_s16(v30, 2uLL).u32[0];
  v31 = (v15 + v17 + 1) >> 1;
  v32 = (_BYTE *)(a1 + a2);
  *v32 = v18;
  v32[1] = v23;
  v32[2] = v7;
  v33 = (v13 + v17 + 2 * v15 + 2) >> 2;
  v32[3] = v11;
  v34 = (v17 + v19 + 1) >> 1;
  v32[4] = v14;
  v32[5] = v16;
  result = vshr_n_u16((uint16x4_t)vadd_s16(*(int16x4_t *)v30.i8, (int16x4_t)0x2000200020002), 2uLL);
  v32[6] = result.i8[0];
  v36 = (v15 + v19 + 2 * v17 + 2) >> 2;
  v32[7] = result.i8[2];
  LODWORD(v32) = (v19 + v20 + 1) >> 1;
  v37 = (_BYTE *)(a1 + 2 * a2);
  *v37 = v25;
  v37[1] = v29;
  v37[2] = v18;
  v38 = (v17 + v20 + 2 * v19 + 2) >> 2;
  v37[3] = v23;
  v39 = (v20 + v22 + 1) >> 1;
  v37[4] = v7;
  v37[5] = v11;
  v37[6] = v14;
  v37[7] = v16;
  v40 = (_BYTE *)(a1 + 3 * a2);
  *v40 = v31;
  v40[1] = v33;
  v41 = (v19 + v22 + 2 * v20 + 2) >> 2;
  v40[2] = v25;
  v40[3] = v29;
  v40[4] = v18;
  v40[5] = v23;
  v40[6] = v7;
  v40[7] = v11;
  v42 = (_BYTE *)(a1 + 4 * a2);
  *v42 = v34;
  v42[1] = v36;
  v42[2] = v31;
  v42[3] = v33;
  v42[4] = v25;
  v42[5] = v29;
  v42[6] = v18;
  v42[7] = v23;
  v43 = (_BYTE *)(a1 + 5 * a2);
  *v43 = (_BYTE)v32;
  v43[1] = v38;
  v43[2] = v34;
  v43[3] = v36;
  v43[4] = v31;
  v43[5] = v33;
  v43[6] = v25;
  v43[7] = v29;
  v44 = (_BYTE *)(a1 + 6 * a2);
  *v44 = v39;
  v44[1] = v41;
  v44[2] = (_BYTE)v32;
  v44[3] = v38;
  v44[4] = v34;
  v44[5] = v36;
  v44[6] = v31;
  v44[7] = v33;
  v45 = (_BYTE *)(a1 - a2 + 8 * a2);
  *v45 = (v22 + v24 + 1) >> 1;
  v45[1] = (v20 + v24 + 2 * v22 + 2) >> 2;
  v45[2] = v39;
  v45[3] = v41;
  v45[4] = (_BYTE)v32;
  v45[5] = v38;
  v45[6] = v34;
  v45[7] = v36;
  return result;
}

_BYTE *sub_216098290(_BYTE *result, int a2, unsigned __int8 *a3)
{
  int v3;
  int v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  int v15;
  int v16;
  unsigned int v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  _BYTE *v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  _BYTE *v34;
  unsigned int v35;
  _BYTE *v36;
  unsigned int v37;
  _BYTE *v38;
  unsigned int v39;
  _BYTE *v40;
  unsigned int v41;
  _BYTE *v42;
  _BYTE *v43;

  v3 = *a3;
  v4 = a3[1];
  v5 = a3[2];
  v6 = a3[3];
  v7 = (v4 + 1 + v5) >> 1;
  v8 = a3[4];
  v9 = (v5 + v6 + 1) >> 1;
  v10 = a3[5];
  v11 = a3[6];
  v12 = (v6 + v8 + 1) >> 1;
  v13 = a3[7];
  v14 = (v8 + v10 + 1) >> 1;
  v15 = a3[8];
  v16 = a3[9];
  v17 = (v10 + v11 + 1) >> 1;
  v18 = a3[10];
  v19 = (v11 + v13 + 1) >> 1;
  v20 = a3[11];
  v21 = a3[12];
  v22 = (v13 + v15 + 1) >> 1;
  v23 = v5 + 2;
  *result = (v4 + 1 + v3) >> 1;
  result[1] = v7;
  v24 = (v5 + 2 + v3 + 2 * v4) >> 2;
  result[2] = v9;
  v25 = v6 + 2;
  result[3] = v12;
  result[4] = v14;
  v26 = (v6 + 2 + v4 + 2 * v5) >> 2;
  result[5] = v17;
  result[6] = v19;
  v27 = (v23 + 2 * v6 + v8) >> 2;
  result[7] = v22;
  v28 = &result[a2];
  *v28 = v24;
  v28[1] = v26;
  v29 = (v25 + 2 * v8 + v10) >> 2;
  v28[2] = v27;
  v28[3] = v29;
  v30 = (v8 + 2 * v10 + v11 + 2) >> 2;
  v28[4] = v30;
  v31 = (v10 + 2 * v11 + v13 + 2) >> 2;
  v28[5] = v31;
  v32 = (v11 + 2 * v13 + v15 + 2) >> 2;
  v28[6] = v32;
  v33 = (v13 + 2 * v15 + v16 + 2) >> 2;
  v28[7] = v33;
  v34 = &result[2 * a2];
  *v34 = v7;
  v34[1] = v9;
  v34[2] = v12;
  v34[3] = v14;
  v34[4] = v17;
  v34[5] = v19;
  v34[6] = v22;
  v35 = (v15 + v16 + 1) >> 1;
  v34[7] = v35;
  v36 = &result[3 * a2];
  *v36 = v26;
  v36[1] = v27;
  v36[2] = v29;
  v36[3] = v30;
  v36[4] = v31;
  v36[5] = v32;
  v37 = (v15 + 2 * v16 + v18 + 2) >> 2;
  v36[6] = v33;
  v36[7] = v37;
  v38 = &result[4 * a2];
  *v38 = v9;
  v38[1] = v12;
  v38[2] = v14;
  v38[3] = v17;
  v38[4] = v19;
  v39 = (v16 + v18 + 1) >> 1;
  v38[5] = v22;
  v38[6] = v35;
  v38[7] = v39;
  v40 = &result[5 * a2];
  *v40 = v27;
  v41 = (v16 + 2 * v18 + v20 + 2) >> 2;
  v40[1] = v29;
  v40[2] = v30;
  v40[3] = v31;
  v40[4] = v32;
  v40[5] = v33;
  v40[6] = v37;
  v40[7] = v41;
  v42 = &result[6 * a2];
  *v42 = v12;
  v42[1] = v14;
  v42[2] = v17;
  v42[3] = v19;
  v42[4] = v22;
  v42[5] = v35;
  v42[6] = v39;
  v42[7] = (v18 + v20 + 1) >> 1;
  v43 = &result[8 * a2 - a2];
  *v43 = v29;
  v43[1] = v30;
  v43[2] = v31;
  v43[3] = v32;
  v43[4] = v33;
  v43[5] = v37;
  v43[6] = v41;
  v43[7] = (v18 + 2 * v20 + v21 + 2) >> 2;
  return result;
}

int8x8_t sub_21609853C(_BYTE *a1, int a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  _BYTE *v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  _BYTE *v25;
  unsigned int v26;
  unsigned int v27;
  _BYTE *v28;
  unsigned int v29;
  _BYTE *v30;
  _BYTE *v31;
  int8x8_t result;
  _BYTE *v33;

  v3 = *(unsigned __int8 *)(a3 - 3);
  v4 = *(unsigned __int8 *)(a3 - 2);
  v5 = *(unsigned __int8 *)(a3 - 4);
  v6 = (v3 + 1 + v4) >> 1;
  v7 = *(unsigned __int8 *)(a3 - 5);
  v8 = *(unsigned __int8 *)(a3 - 6);
  v9 = (v5 + 2 + 2 * v3 + v4) >> 2;
  v10 = *(unsigned __int8 *)(a3 - 7);
  v11 = (v3 + 1 + v5) >> 1;
  v12 = *(unsigned __int8 *)(a3 - 8);
  v13 = v7 + 2 + v3;
  v14 = *(unsigned __int8 *)(a3 - 9);
  v15 = *(unsigned __int8 *)(a3 - 10);
  v16 = (v13 + 2 * v5) >> 2;
  *a1 = v6;
  v17 = (v5 + v7 + 1) >> 1;
  a1[1] = v9;
  a1[2] = v11;
  v18 = (v5 + 2 + v8 + 2 * v7) >> 2;
  a1[3] = v16;
  a1[4] = v17;
  v19 = (v7 + v8 + 1) >> 1;
  a1[5] = v18;
  a1[6] = v19;
  v20 = (v7 + 2 + v10 + 2 * v8) >> 2;
  a1[7] = v20;
  v21 = &a1[a2];
  *v21 = v11;
  v21[1] = v16;
  v22 = (v8 + v10 + 1) >> 1;
  v21[2] = v17;
  v21[3] = v18;
  v21[4] = v19;
  v23 = (v8 + v12 + 2 * v10 + 2) >> 2;
  v24 = v10 + v12 + 1;
  v21[5] = v20;
  v21[6] = v22;
  v21[7] = v23;
  v25 = &a1[2 * a2];
  *v25 = v17;
  v26 = v10 + v14 + 2 * v12 + 2;
  v27 = v12 + v14 + 1;
  v25[1] = v18;
  v25[2] = v19;
  v25[3] = v20;
  v25[4] = v22;
  v26 >>= 2;
  v25[5] = v23;
  v25[6] = v24 >> 1;
  v25[7] = v26;
  v28 = &a1[3 * a2];
  *v28 = v19;
  v28[1] = v20;
  v29 = (v12 + v15 + 2 * v14 + 2) >> 2;
  v28[2] = v22;
  v28[3] = v23;
  v28[4] = v24 >> 1;
  v28[5] = v26;
  v28[6] = v27 >> 1;
  v28[7] = v29;
  v30 = &a1[4 * a2];
  *v30 = v22;
  v30[1] = v23;
  v30[2] = v24 >> 1;
  v30[3] = v26;
  v30[4] = v27 >> 1;
  v30[5] = v29;
  v30[6] = v14;
  v30[7] = v14;
  v31 = &a1[5 * a2];
  *v31 = v24 >> 1;
  v31[1] = v26;
  v31[2] = v27 >> 1;
  result = vdup_n_s8(v14);
  v31[3] = v29;
  *((_DWORD *)v31 + 1) = result.i32[0];
  v33 = &a1[6 * a2];
  *v33 = v27 >> 1;
  v33[1] = v29;
  *(_DWORD *)(v33 + 2) = result.i32[0];
  v33[6] = v14;
  v33[7] = v14;
  *(int8x8_t *)&a1[8 * a2 - a2] = result;
  return result;
}

int8x16_t sub_21609871C(__int32 *a1, unsigned int a2, int32x4_t *a3, int8x16_t *a4, unsigned __int8 *a5, int a6, int8x16_t result, int8x16_t a8, int8x16_t a9, int8x16_t a10, int8x16_t a11, double a12, double a13, int8x16_t a14)
{
  int8x16_t v14;
  int16x8_t v15;
  int64x2_t v16;
  int64x2_t v17;
  int64x2_t v18;
  int64x2_t v19;
  int64x2_t v20;
  unsigned __int8 *v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int16x8_t v26;
  int16x8_t v27;
  int64x2_t v28;
  int8x16_t v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  unsigned int v39;
  unsigned int v40;
  uint64_t v41;
  unsigned __int32 *v42;
  unsigned __int32 v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  unsigned __int32 *v49;
  unsigned __int32 v50;
  char *v51;
  unsigned int v52;
  int v53;
  uint64_t v54;
  unsigned __int32 *v55;
  unsigned __int32 v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  unsigned int v62;
  uint64_t v63;
  unsigned int v64;
  unsigned int v65;
  __int32 *v66;
  __int32 *v67;
  __int32 *v68;
  uint16x8_t v69;
  uint16x8_t v70;
  int16x8_t v71;
  int16x8_t v72;
  int16x8_t v73;
  int16x8_t v74;
  int8x16_t v75;
  uint16x8_t v76;
  int16x8_t v77;
  int16x8_t v78;
  int16x8_t v79;
  int16x8_t v80;
  int16x8_t v81;
  int8x16_t v82;
  int16x8_t v83;
  int64x2_t v84;
  int64x2_t v85;
  int v86;
  int8x16_t v87;
  uint16x8_t v88;
  uint16x8_t v89;
  int16x8_t v90;
  int16x8_t v91;
  uint16x8_t v92;
  int16x8_t v93;
  int16x8_t v94;
  int16x8_t v95;
  int16x8_t v96;
  int16x8_t v97;
  int16x8_t v98;
  int8x16_t v99;
  int64x2_t v100;
  int v101;
  __int32 v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int8x16_t v108;
  uint16x8_t v109;
  uint16x8_t v110;
  int16x8_t v111;
  int16x8_t v112;
  int16x8_t v113;
  int16x8_t v114;
  int16x8_t v115;
  uint16x8_t v116;
  int16x8_t v117;
  int16x8_t v118;
  int16x8_t v119;
  int16x8_t v120;
  int8x16_t v121;
  int64x2_t v122;
  int64x2_t v123;
  unsigned int v124;
  int64x2_t v125;
  int16x8_t v126;
  int16x8_t v127;
  int16x8_t v128;
  int16x8_t v129;
  uint16x8_t v130;
  int16x8_t v131;
  uint16x8_t v132;
  int16x8_t v133;
  int16x8_t v134;
  int16x8_t v135;
  int16x8_t v136;
  int8x16_t v137;
  uint64_t v138;
  char *v139;
  unsigned int v140;
  int8x16_t v141;
  int16x8_t v142;
  int64x2_t v143;
  uint16x8_t v144;
  uint16x8_t v145;
  int16x8_t v146;
  uint64x2_t v147;
  int8x16_t v148;
  int8x16_t v149;
  int16x8_t v150;
  int8x16_t v151;
  int16x8_t v152;
  int16x8_t v153;
  int16x8_t v154;
  uint16x8_t v155;
  int8x16_t v156;
  int16x8_t v157;
  int16x8_t v158;
  int64x2_t v159;
  int16x8_t v160;
  int16x8_t v161;
  int16x8_t v162;
  int8x16_t v163;
  uint16x8_t v164;
  uint16x8_t v165;
  int16x8_t v166;
  uint64x2_t v167;
  int8x16_t v168;
  int8x16_t v169;
  int16x8_t v170;
  int8x16_t v171;
  int16x8_t v172;
  int64x2_t v173;
  int16x8_t v174;
  uint16x8_t v175;
  int8x16_t v176;
  int16x8_t v177;
  int16x8_t v178;
  int64x2_t v179;
  int16x8_t v180;
  int16x8_t v181;
  int16x8_t v182;
  int16x8_t v183;
  int8x16_t v184;

  switch(a6)
  {
    case 0:
      result.i32[0] = *a1;
      a8.i32[0] = *(__int32 *)((char *)a1 + a2);
      a9.i32[0] = *(__int32 *)((char *)a1 + 2 * a2);
      a10.i32[0] = *(__int32 *)((char *)a1 + 3 * a2);
      v15 = (int16x8_t)vzip1q_s8((int8x16_t)*(unsigned int *)((char *)a1 - a5[1] * a2), (int8x16_t)0);
      v16 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(result, (int8x16_t)0), v15);
      v17 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(a8, (int8x16_t)0), v15);
      v18 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(a9, (int8x16_t)0), v15);
      v19 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(a10, (int8x16_t)0), v15);
      *a3 = vdupq_n_s32(*(__int32 *)((char *)a1 - a5[1] * a2));
      v20 = vzip1q_s64(v16, v17);
      goto LABEL_58;
    case 1:
      v21 = (unsigned __int8 *)a1 - *a5;
      v22 = *v21 | (*v21 << 8);
      v23 = v22 | (v22 << 16);
      v24 = v21[a2] | (v21[a2] << 8);
      v25 = v24 | (v24 << 16);
      a3->i32[0] = v23;
      a3->i32[1] = v25;
      result.i32[0] = *(__int32 *)((char *)a1 + a2);
      a8.i32[0] = *a1;
      a10.i32[0] = v23;
      v26 = (int16x8_t)vzip1q_s8(a10, (int8x16_t)0);
      a11.i32[0] = v25;
      v27 = (int16x8_t)vzip1q_s8(a11, (int8x16_t)0);
      v28 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(a8, (int8x16_t)0), v26);
      v29 = (int8x16_t)vzip1q_s64(v28, (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(result, (int8x16_t)0), v27));
      *a4 = v29;
      v30 = v21[2 * a2] | (v21[2 * a2] << 8);
      v31 = v30 | (v30 << 16);
      LODWORD(v21) = v21[3 * a2] | (v21[3 * a2] << 8);
      LODWORD(v21) = v21 | ((_DWORD)v21 << 16);
      a3->i32[2] = v31;
      a3->i32[3] = (int)v21;
      v29.i32[0] = v31;
      v28.i32[0] = (int)v21;
      v26.i32[0] = *(__int32 *)((char *)a1 + 2 * a2);
      v27.i32[0] = *(__int32 *)((char *)a1 + 3 * a2);
      v18 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8((int8x16_t)v26, (int8x16_t)0), (int16x8_t)vzip1q_s8(v29, (int8x16_t)0));
      v19 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8((int8x16_t)v27, (int8x16_t)0), (int16x8_t)vzip1q_s8((int8x16_t)v28, (int8x16_t)0));
      goto LABEL_59;
    case 2:
      if (*a5)
      {
        v32 = *((unsigned __int8 *)a1 - 1);
        v33 = *((unsigned __int8 *)a1 + a2 - 1);
        v34 = *((unsigned __int8 *)a1 + 2 * a2 - 1);
        v35 = *((unsigned __int8 *)a1 + 3 * a2 - 1);
        v36 = a2;
        if (a5[1])
        {
          result.i32[0] = *(__int32 *)((char *)a1 - a2);
          v37 = (vaddvq_s32((int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)result.i8)))
                             + v35
                             + v34
                             + v33
                             + v32
                             + 4) >> 3;
          goto LABEL_50;
        }
        v86 = v32 + v33 + v34 + v35;
        goto LABEL_40;
      }
      v36 = a2;
      if (a5[1])
      {
        result.i32[0] = *(__int32 *)((char *)a1 - a2);
        v86 = vaddvq_s32((int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)result.i8)));
LABEL_40:
        v37 = (v86 + 2) >> 2;
        goto LABEL_50;
      }
      v37 = 128;
LABEL_50:
      v140 = v37 | (v37 << 8) | ((v37 | (v37 << 8)) << 16);
      v141 = (int8x16_t)vdupq_n_s32(v140);
      *a3 = (int32x4_t)v141;
      v141.i32[0] = *(__int32 *)((char *)a1 + v36);
      a8.i32[0] = *(__int32 *)((char *)a1 + 2 * a2);
      a9.i32[0] = *a1;
      a10.i32[0] = *(__int32 *)((char *)a1 + 3 * a2);
      v142 = (int16x8_t)vzip1q_s8((int8x16_t)v140, (int8x16_t)0);
      v143 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(v141, (int8x16_t)0), v142);
      v18 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(a8, (int8x16_t)0), v142);
      v19 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(a10, (int8x16_t)0), v142);
      v20 = vzip1q_s64((int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(a9, (int8x16_t)0), v142), v143);
      goto LABEL_58;
    case 3:
      if (a5[1])
        v38 = -(uint64_t)a2;
      else
        v38 = 0;
      v39 = *(__int32 *)((char *)a1 + v38);
      if (a5[2])
        v40 = *(__int32 *)((char *)a1 - a2 + 4);
      else
        v40 = v39 & 0xFF000000 | ((v39 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v39 & 0xFF000000 | ((v39 & 0xFF000000) >> 8)) >> 16);
      a9.i32[0] = v40;
      v87 = vorrq_s8(vextq_s8((int8x16_t)0, a9, 0xCuLL), (int8x16_t)v39);
      v88.i64[0] = 0xE000E000E000ELL;
      v88.i64[1] = 0xE000E000E000ELL;
      v89.i64[0] = -1;
      v89.i64[1] = -1;
      v90 = (int16x8_t)vshlq_u16(v89, v88);
      v91 = (int16x8_t)vzip1q_s8(v87, (int8x16_t)0);
      v92 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v90, v90), (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v91, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_2160EF100)), vaddq_s16((int16x8_t)vextq_s8((int8x16_t)vaddq_s16(v91, v91), (int8x16_t)0, 2uLL), v91));
      v90.i64[0] = 0x1000100010001;
      v90.i64[1] = 0x1000100010001;
      v93 = (int16x8_t)vshlq_u16(v92, (uint16x8_t)v90);
      v94 = (int16x8_t)vextq_s8((int8x16_t)v93, (int8x16_t)0, 2uLL);
      v95 = (int16x8_t)vextq_s8((int8x16_t)v93, (int8x16_t)0, 4uLL);
      v96 = (int16x8_t)vextq_s8((int8x16_t)v93, (int8x16_t)0, 6uLL);
      v97.i64[0] = v93.i64[0];
      v97.i64[1] = v94.i64[0];
      v98.i64[0] = v95.i64[0];
      v98.i64[1] = v96.i64[0];
      v99 = vqmovun_high_s16(vqmovun_s16(v97), v98);
      *a3 = (int32x4_t)v99;
      v99.i32[0] = *a1;
      v98.i32[0] = *(__int32 *)((char *)a1 + a2);
      a14.i32[0] = *(__int32 *)((char *)a1 + 2 * a2);
      v14.i32[0] = *(__int32 *)((char *)a1 + 3 * a2);
      v100 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(v99, (int8x16_t)0), v93);
      v18 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(a14, (int8x16_t)0), v95);
      v19 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(v14, (int8x16_t)0), v96);
      v20 = vzip1q_s64(v100, (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8((int8x16_t)v98, (int8x16_t)0), v94));
      goto LABEL_58;
    case 4:
      if (*a5)
      {
        if (a5[1])
        {
          v41 = a2;
          v42 = (unsigned __int32 *)((char *)a1 - a2);
          v43 = *v42;
          v44 = *((unsigned __int8 *)v42 - 1);
          v45 = 3 * a2;
          v46 = 2 * a2;
          v47 = *((unsigned __int8 *)a1 + v45 - 1) | (*((unsigned __int8 *)a1 + v46 - 1) << 8);
        }
        else
        {
          v43 = *a1;
          v44 = *a1;
          v45 = 3 * a2;
          v46 = 2 * a2;
          v47 = *((unsigned __int8 *)a1 + v45 - 1) | (*((unsigned __int8 *)a1 + v46 - 1) << 8);
          v41 = a2;
        }
        v101 = v47 | (*((unsigned __int8 *)a1 + a2 - 1) << 16);
        v102 = *((unsigned __int8 *)a1 - 1);
      }
      else if (a5[1])
      {
        v41 = a2;
        v43 = *(__int32 *)((char *)a1 - a2);
        v45 = 3 * a2;
        v46 = 2 * a2;
        v44 = v43;
        v101 = *((unsigned __int8 *)a1 + v45) | (*((unsigned __int8 *)a1 + v46) << 8) | (*((unsigned __int8 *)a1 + a2) << 16);
        v102 = *(unsigned __int8 *)a1;
      }
      else
      {
        v102 = *a1;
        v44 = *a1;
        v45 = 3 * a2;
        v46 = 2 * a2;
        v41 = a2;
        v101 = *((unsigned __int8 *)a1 + v45) | (*((unsigned __int8 *)a1 + v46) << 8) | (*((unsigned __int8 *)a1 + a2) << 16);
        v43 = *a1;
      }
      v124 = v101 | (v102 << 24);
      v125 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v43, 8uLL), (int8x16_t)v44);
      v126 = (int16x8_t)vdupq_n_s64(0xFFFFFFF0uLL);
      v127 = (int16x8_t)vzip1q_s8(vqtbl1q_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)v124, (uint64x2_t)v126), (int8x16_t)vshlq_n_s64(v125, 0x10uLL)), (int8x16_t)xmmword_2160EE840), (int8x16_t)0);
      v128 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)v124, (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL)), (int8x16_t)vshlq_n_s64(v125, 0x18uLL)), (int8x16_t)0);
      v129 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vshlq_u64((uint64x2_t)v125, (uint64x2_t)v126), 0x20uLL), (int8x16_t)v124), (int8x16_t)0);
      v130.i64[0] = 0xE000E000E000ELL;
      v130.i64[1] = 0xE000E000E000ELL;
      v126.i64[0] = -1;
      v126.i64[1] = -1;
      v131 = (int16x8_t)vshlq_u16((uint16x8_t)v126, v130);
      v132 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v128, v128), v127), vaddq_s16(vaddq_s16(v131, v131), v129));
      v127.i64[0] = 0x1000100010001;
      v127.i64[1] = 0x1000100010001;
      v77 = (int16x8_t)vshlq_u16(v132, (uint16x8_t)v127);
      v133 = (int16x8_t)vextq_s8((int8x16_t)v77, (int8x16_t)0, 6uLL);
      v134 = (int16x8_t)vextq_s8((int8x16_t)v77, (int8x16_t)0, 4uLL);
      v126.i64[0] = v133.i64[0];
      v126.i64[1] = v134.i64[0];
      v135 = (int16x8_t)vextq_s8((int8x16_t)v77, (int8x16_t)0, 2uLL);
      v136.i64[0] = v135.i64[0];
      v136.i64[1] = v77.i64[0];
      v137 = vqmovun_high_s16(vqmovun_s16(v126), v136);
      *a3 = (int32x4_t)v137;
      v137.i32[0] = *a1;
      v136.i32[0] = *(__int32 *)((char *)a1 + v41);
      a14.i32[0] = *(__int32 *)((char *)a1 + v46);
      v14.i32[0] = *(__int32 *)((char *)a1 + v45);
      v83 = (int16x8_t)vzip1q_s8(v14, (int8x16_t)0);
      v84 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(v137, (int8x16_t)0), v133);
      v85 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8((int8x16_t)v136, (int8x16_t)0), v134);
      v18 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(a14, (int8x16_t)0), v135);
      goto LABEL_44;
    case 5:
      if (*a5)
      {
        if (a5[1])
        {
          v48 = a2;
          v49 = (unsigned __int32 *)((char *)a1 - a2);
          v50 = *v49;
          v51 = (char *)a1 - 1;
          v52 = *v49 | (*((unsigned __int8 *)v49 - 1) << 8);
        }
        else
        {
          v50 = *a1;
          v52 = *a1 | (*a1 << 8);
          v51 = (char *)a1 - 1;
          v48 = a2;
        }
        v53 = *((unsigned __int8 *)a1 - 1) | (*((unsigned __int8 *)a1 + a2 - 1) << 8);
        v138 = 2 * a2;
        v139 = &v51[v138];
      }
      else
      {
        if (a5[1])
        {
          v48 = a2;
          v50 = *(__int32 *)((char *)a1 - a2);
          v52 = v50 | (v50 << 8);
          v103 = *(unsigned __int8 *)a1;
        }
        else
        {
          v50 = *a1;
          v103 = *a1;
          v52 = v103 | (v103 << 8);
          v48 = a2;
        }
        v53 = v103 | (*((unsigned __int8 *)a1 + a2) << 8);
        v138 = 2 * a2;
        v139 = (char *)a1 + v138;
      }
      v144.i64[0] = 0xE000E000E000ELL;
      v144.i64[1] = 0xE000E000E000ELL;
      v145.i64[0] = -1;
      v145.i64[1] = -1;
      v146 = (int16x8_t)vshlq_u16(v145, v144);
      v147 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
      v148 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v50, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v52, v147));
      v149 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)(v53 | (*v139 << 16)), 0x10uLL), (int8x16_t)v52);
      v150 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v148, v147), (int8x16_t)0);
      v151 = (int8x16_t)vdupq_n_s64(0xFFFFFFF0uLL);
      v152 = vaddq_s16(v150, (int16x8_t)vzip1q_s8(v148, (int8x16_t)0));
      v153 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v152, v146), v145);
      v154 = vaddq_s16(v146, v146);
      v155 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v154, v150), v152), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v148, (uint64x2_t)v151), (int8x16_t)0));
      v152.i64[0] = 0x1000100010001;
      v152.i64[1] = 0x1000100010001;
      v156 = (int8x16_t)vshlq_u16(v155, (uint16x8_t)v152);
      v157 = (int16x8_t)vzip1q_s8(v149, (int8x16_t)0);
      v158 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v149, v147), (int8x16_t)0);
      v159 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v154, v157), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v149, (uint64x2_t)v151), (int8x16_t)0)), vaddq_s16(v158, v158)), (uint16x8_t)v152);
      v160 = (int16x8_t)vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v153, 0xEuLL), (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64(v159, 0x20uLL), (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL)));
      v161 = (int16x8_t)vextq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vqtbl1q_s8((int8x16_t)v159, (int8x16_t)xmmword_2160F1940), 0), v156, 0xCuLL);
      v162 = (int16x8_t)vextq_s8((int8x16_t)v161, (int8x16_t)0, 2uLL);
      v154.i64[0] = v153.i64[0];
      v154.i64[1] = v162.i64[0];
      v158.i64[0] = v160.i64[0];
      v158.i64[1] = v161.i64[0];
      v163 = vqmovun_high_s16(vqmovun_s16(v154), v158);
      *a3 = (int32x4_t)v163;
      v163.i32[0] = *a1;
      v158.i32[0] = *(__int32 *)((char *)a1 + v48);
      v157.i32[0] = *(__int32 *)((char *)a1 + v138);
      v151.i32[0] = *(__int32 *)((char *)a1 + 3 * a2);
      v18 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8((int8x16_t)v157, (int8x16_t)0), v160);
      v19 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(v151, (int8x16_t)0), v161);
      v20 = vzip1q_s64((int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(v163, (int8x16_t)0), v153), (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8((int8x16_t)v158, (int8x16_t)0), v162));
      goto LABEL_58;
    case 6:
      if (*a5)
      {
        if (a5[1])
        {
          v54 = a2;
          v55 = (unsigned __int32 *)((char *)a1 - a2);
          v56 = *v55;
          v57 = *((unsigned __int8 *)v55 - 1);
          v58 = *((unsigned __int8 *)a1 - 1);
          v59 = 2 * a2;
          v60 = 3 * a2;
          v61 = (*((unsigned __int8 *)a1 + v59 - 1) << 16) | (*((unsigned __int8 *)a1 + a2 - 1) << 8) | (*((unsigned __int8 *)a1 + v60 - 1) << 24) | v58;
          v62 = v58 | (v57 << 8);
          goto LABEL_57;
        }
        v56 = *a1;
        v105 = *((unsigned __int8 *)a1 - 1);
        v54 = a2;
        v104 = *((unsigned __int8 *)a1 + a2 - 1);
        v59 = 2 * a2;
        v106 = *((unsigned __int8 *)a1 + v59 - 1) << 16;
        v60 = 3 * a2;
        v107 = *((unsigned __int8 *)a1 + v60 - 1);
        goto LABEL_48;
      }
      if (a5[1])
      {
        v54 = a2;
        v56 = *(__int32 *)((char *)a1 - a2);
        v104 = *((unsigned __int8 *)a1 + a2);
        v105 = *(unsigned __int8 *)a1;
        v59 = 2 * a2;
        v106 = *((unsigned __int8 *)a1 + v59) << 16;
        v60 = 3 * a2;
        v107 = *((unsigned __int8 *)a1 + v60);
LABEL_48:
        v61 = v106 | (v104 << 8) | (v107 << 24) | v105;
        goto LABEL_56;
      }
      v56 = *a1;
      v105 = *a1;
      v54 = a2;
      v59 = 2 * a2;
      v60 = 3 * a2;
      v61 = (*((unsigned __int8 *)a1 + v59) << 16) | (*((unsigned __int8 *)a1 + a2) << 8) | (*((unsigned __int8 *)a1 + v60) << 24) | v105;
LABEL_56:
      v62 = v105 & 0xFFFF00FF | (v56 << 8);
LABEL_57:
      v164.i64[0] = 0xE000E000E000ELL;
      v164.i64[1] = 0xE000E000E000ELL;
      v165.i64[0] = -1;
      v165.i64[1] = -1;
      v166 = (int16x8_t)vshlq_u16(v165, v164);
      v167 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
      v168 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v61, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v62, v167));
      v169 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v56, 0x10uLL), (int8x16_t)v62);
      v170 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v168, v167), (int8x16_t)0);
      v171 = (int8x16_t)vdupq_n_s64(0xFFFFFFF0uLL);
      v172 = vaddq_s16(v170, (int16x8_t)vzip1q_s8(v168, (int8x16_t)0));
      v173 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(v172, v166), v165);
      v174 = vaddq_s16(v166, v166);
      v175 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v174, v170), v172), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v168, (uint64x2_t)v171), (int8x16_t)0));
      v168.i64[0] = 0x1000100010001;
      v168.i64[1] = 0x1000100010001;
      v176 = (int8x16_t)vshlq_u16(v175, (uint16x8_t)v168);
      v177 = (int16x8_t)vzip1q_s8(v169, (int8x16_t)0);
      v178 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v169, v167), (int8x16_t)0);
      v179 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v174, v177), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v169, (uint64x2_t)v171), (int8x16_t)0)), vaddq_s16(v178, v178)), (uint16x8_t)v168);
      v180 = (int16x8_t)vorrq_s8((int8x16_t)vshlq_n_s64(v179, 0x10uLL), (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64(v173, 0x30uLL), (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL)));
      v174.i64[0] = 0xF0000000FLL;
      v174.i64[1] = 0xF0000000FLL;
      v181 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vorrq_s8(vqtbl1q_s8(vextq_s8(vextq_s8((int8x16_t)0, v176, 6uLL), (int8x16_t)0, 8uLL), (int8x16_t)xmmword_2160F1900), vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vextq_s8((int8x16_t)0, (int8x16_t)v179, 2uLL), (uint32x4_t)v174), (int8x16_t)vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)v173, (int8x16_t)xmmword_2160F1910), (int32x4_t)0))), (int8x16_t)xmmword_2160F1920), (int8x16_t)xmmword_2160F1930);
      v182 = (int16x8_t)vextq_s8((int8x16_t)v181, (int8x16_t)0, 8uLL);
      v174.i64[0] = v180.i64[0];
      v174.i64[1] = v182.i64[0];
      v183 = (int16x8_t)vextq_s8((int8x16_t)v181, (int8x16_t)0, 4uLL);
      v178.i64[0] = v183.i64[0];
      v178.i64[1] = v181.i64[0];
      v184 = vqmovun_high_s16(vqmovun_s16(v174), v178);
      *a3 = (int32x4_t)v184;
      v184.i32[0] = *a1;
      v178.i32[0] = *(__int32 *)((char *)a1 + v54);
      v177.i32[0] = *(__int32 *)((char *)a1 + v59);
      v171.i32[0] = *(__int32 *)((char *)a1 + v60);
      v18 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8((int8x16_t)v177, (int8x16_t)0), v183);
      v19 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(v171, (int8x16_t)0), v181);
      v20 = vzip1q_s64((int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(v184, (int8x16_t)0), v180), (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8((int8x16_t)v178, (int8x16_t)0), v182));
LABEL_58:
      *a4 = (int8x16_t)v20;
LABEL_59:
      result = (int8x16_t)vzip1q_s64(v18, v19);
      a4[1] = result;
      return result;
    case 7:
      if (a5[1])
        v63 = -(uint64_t)a2;
      else
        v63 = 0;
      v64 = *(__int32 *)((char *)a1 + v63);
      if (a5[2])
        v65 = *(__int32 *)((char *)a1 - a2 + 4);
      else
        v65 = v64 & 0xFF000000 | ((v64 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v64 & 0xFF000000 | ((v64 & 0xFF000000) >> 8)) >> 16);
      a9.i32[0] = v65;
      v108 = vorrq_s8(vextq_s8((int8x16_t)0, a9, 0xCuLL), (int8x16_t)v64);
      v109.i64[0] = 0xE000E000E000ELL;
      v109.i64[1] = 0xE000E000E000ELL;
      v110.i64[0] = -1;
      v110.i64[1] = -1;
      v111 = (int16x8_t)vshlq_u16(v110, v109);
      v112 = (int16x8_t)vzip1q_s8(v108, (int8x16_t)0);
      v113 = (int16x8_t)vextq_s8((int8x16_t)v112, (int8x16_t)0, 2uLL);
      v114 = vaddq_s16(v113, v112);
      v115 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v114, v111), v110);
      v116 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v111, v111), v113), (int16x8_t)vextq_s8((int8x16_t)v112, (int8x16_t)0, 4uLL)), v114);
      v111.i64[0] = 0x1000100010001;
      v111.i64[1] = 0x1000100010001;
      v117 = (int16x8_t)vshlq_u16(v116, (uint16x8_t)v111);
      v118 = (int16x8_t)vextq_s8((int8x16_t)v115, (int8x16_t)0, 2uLL);
      v119 = (int16x8_t)vextq_s8((int8x16_t)v117, (int8x16_t)0, 2uLL);
      v114.i64[0] = v115.i64[0];
      v114.i64[1] = v117.i64[0];
      v120.i64[0] = v118.i64[0];
      v120.i64[1] = v119.i64[0];
      v121 = vqmovun_high_s16(vqmovun_s16(v114), v120);
      *a3 = (int32x4_t)v121;
      v121.i32[0] = *a1;
      v120.i32[0] = *(__int32 *)((char *)a1 + a2);
      a14.i32[0] = *(__int32 *)((char *)a1 + 2 * a2);
      v14.i32[0] = *(__int32 *)((char *)a1 + 3 * a2);
      v122 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(v121, (int8x16_t)0), v115);
      v123 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8((int8x16_t)v120, (int8x16_t)0), v117);
      v18 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(a14, (int8x16_t)0), v118);
      v19 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(v14, (int8x16_t)0), v119);
      v20 = vzip1q_s64(v122, v123);
      goto LABEL_58;
    case 8:
      v66 = (__int32 *)((char *)a1 + a2);
      v67 = (__int32 *)((char *)a1 + 2 * a2);
      v68 = (__int32 *)((char *)a1 + 3 * a2);
      v69.i64[0] = 0xE000E000E000ELL;
      v69.i64[1] = 0xE000E000E000ELL;
      v70.i64[0] = -1;
      v70.i64[1] = -1;
      v71 = (int16x8_t)vshlq_u16(v70, v69);
      v72 = (int16x8_t)vzip1q_s8((int8x16_t)(*((unsigned __int8 *)a1 - *a5) | (*((unsigned __int8 *)v66 - *a5) << 8) | (*((unsigned __int8 *)v67 - *a5) << 16) | (*((unsigned __int8 *)v68 - *a5) << 24)), (int8x16_t)0);
      v73 = (int16x8_t)vextq_s8((int8x16_t)v72, (int8x16_t)0, 2uLL);
      v74 = vaddq_s16(v73, v72);
      v75 = (int8x16_t)vaddq_s16(v74, v71);
      v76 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v71, v71), v73), (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v72, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_2160EF110)), v74);
      v73.i64[0] = 0x1000100010001;
      v73.i64[1] = 0x1000100010001;
      v77 = (int16x8_t)vqtbl1q_s8((int8x16_t)v72, (int8x16_t)xmmword_2160F18F0);
      v78 = vzip1q_s16((int16x8_t)vshlq_u16((uint16x8_t)v75, v70), (int16x8_t)vshlq_u16(v76, (uint16x8_t)v73));
      v79 = (int16x8_t)vextq_s8((int8x16_t)v78, (int8x16_t)0, 4uLL);
      v80 = (int16x8_t)vextq_s8((int8x16_t)vdupq_laneq_s32((int32x4_t)v78, 2), (int8x16_t)v77, 0xCuLL);
      v74.i64[0] = v78.i64[0];
      v74.i64[1] = v79.i64[0];
      v81.i64[0] = v80.i64[0];
      v81.i64[1] = v77.i64[0];
      v82 = vqmovun_high_s16(vqmovun_s16(v74), v81);
      *a3 = (int32x4_t)v82;
      v82.i32[0] = *a1;
      v81.i32[0] = *v66;
      v75.i32[0] = *v67;
      v14.i32[0] = *v68;
      v83 = (int16x8_t)vzip1q_s8(v14, (int8x16_t)0);
      v84 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(v82, (int8x16_t)0), v78);
      v85 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8((int8x16_t)v81, (int8x16_t)0), v79);
      v18 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(v75, (int8x16_t)0), v80);
LABEL_44:
      v19 = (int64x2_t)vsubq_s16(v83, v77);
      v20 = vzip1q_s64(v84, v85);
      goto LABEL_58;
    default:
      return result;
  }
}

uint64_t sub_216099280(uint64_t a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5)
{
  int v5;
  uint64_t v8;
  int8x16_t *v9;
  int v10;
  int v11;
  int v12;
  unsigned __int8 *v13;
  int v14;
  int v15;
  uint64_t v16;
  int v17;
  int8x16_t *v18;
  int v19;
  int8x16_t *v20;
  int8x16_t *v21;
  unsigned int v22;
  int v24;
  int8x16_t v27[20];
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  if (a4 < a5)
  {
    v5 = a4;
    v8 = *(unsigned int *)(*(_QWORD *)(a1 + 80) + 136);
    v24 = 16 * a2;
    do
    {
      if (a2 < a3)
      {
        v9 = (int8x16_t *)(*(_QWORD *)(a1 + 152) + 48 * (a2 + *(_DWORD *)(a1 + 12) * v5));
        v10 = 16 * v5;
        v11 = a2;
        v12 = v24;
        do
        {
          v13 = *(unsigned __int8 **)(a1 + 80);
          if (*(_DWORD *)(a1 + 188) && v13[3])
          {
            v14 = v13[5];
            v15 = *v13;
            v16 = *((_QWORD *)v13 + 4) + (v12 & 0xFFFFFFF0);
            v17 = *((_DWORD *)v13 + 34);
            v18 = (int8x16_t *)(v16 + (v10 * v17));
            if (v15)
            {
              v18 = (int8x16_t *)(v16 + (32 * v5 * v17));
              v19 = 32 * v5;
            }
            else
            {
              v19 = 16 * v5;
            }
            v20 = (int8x16_t *)(v16 + v8 + (v19 * v17));
            if (v14)
              v21 = v20;
            else
              v21 = v18;
            v22 = 2 * v8;
          }
          else
          {
            v21 = (int8x16_t *)(*((_QWORD *)v13 + 4) + (v12 & 0xFFFFFFF0) + (v10 * *((_DWORD *)v13 + 34)));
            v22 = v8;
          }
          if ((v9[1].i8[0] & 0xC0) + v9->u8[0] <= 0x7F)
            sub_216099434(a1, v21, (int64x2_t *)v21, v11, v5, v22, v9, v27);
          v9 += 3;
          v12 += 16;
          ++v11;
        }
        while (a3 != v11);
      }
      ++v5;
    }
    while (v5 != a5);
  }
  return 0;
}

uint64_t sub_216099434(uint64_t a1, int8x16_t *a2, int64x2_t *a3, int a4, int a5, unsigned int a6, int8x16_t *a7, int8x16_t *a8)
{
  int64x2_t v8;
  int16x8_t v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  int8x16_t v17;
  int8x16_t v18;
  uint64_t v19;
  int8x16_t v20;
  int8x16_t v21;
  int8x16_t v22;
  int8x16_t v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  int8x16_t v35;
  int16x8_t v36;
  int8x16_t v37;
  int8x16_t v38;
  int16x8_t v39;
  uint64_t v40;
  int32x4_t v41;
  int8x16_t v42;
  int32x4_t v43;
  int16x8_t v44;
  int8x16_t v45;
  int16x8_t v46;
  int8x16_t v47;
  int32x4_t v48;
  int32x4_t v49;
  int8x16_t v50;
  int16x8_t v51;
  int8x16_t v52;
  int16x8_t v53;
  int32x4_t v54;
  int8x16_t v55;
  int32x4_t v56;
  int8x16_t v57;
  int16x8_t v58;
  int16x8_t v59;
  int8x16_t v60;
  uint64_t v61;
  int32x4_t v62;
  int32x4_t v63;
  int8x16_t v64;
  int8x16_t v65;
  int16x8_t v66;
  int16x8_t v67;
  int8x16_t v68;
  int32x4_t v69;
  int32x4_t v70;
  int8x16_t v71;
  int16x8_t v72;
  int16x8_t v73;
  int32x4_t v74;
  char v75;
  int32x4_t v76;
  int16x8_t v77;
  int16x8_t v78;
  int32x4_t v79;
  int32x4_t v80;
  int16x8_t v81;
  int16x8_t v82;
  int32x4_t v83;
  int32x4_t v84;
  int64x2_t v85;
  int64x2_t v86;
  int64x2_t v87;
  int64x2_t v88;
  int64x2_t v89;
  int64x2_t v90;
  int64x2_t v91;
  int64x2_t v92;
  int64x2_t v93;
  int64x2_t v94;
  int64x2_t v95;
  int64x2_t v96;
  int64x2_t v97;
  int64x2_t v98;
  int64x2_t v99;
  int64x2_t v100;
  int64x2_t v101;
  int64x2_t v102;
  int64x2_t v103;
  int64x2_t v104;
  int8x16_t v105;
  int64x2_t v106;
  int64x2_t v107;
  int8x16_t v108;
  int8x16_t v109;
  __int8 *v110;
  __int8 *v111;
  __int8 *v112;
  int16x8_t v113;
  int32x4_t v114;
  __int32 v115;
  int16x8_t v116;
  int32x4_t v117;
  __int32 v118;
  int16x8_t v119;
  int32x4_t v120;
  __int32 v121;
  int32x4_t v122;
  int64x2_t v123;
  int64x2_t v124;
  int64x2_t v125;
  int64x2_t v126;
  uint64_t v127;
  char *v128;
  unsigned __int8 *v129;
  unsigned __int8 *v130;
  int16x8_t v131;
  int16x8_t v132;
  int8x16_t *v133;
  unsigned int v134;
  unint64_t v135;
  unsigned int v136;
  int8x16_t v138;
  int8x16_t v139;
  int8x16_t v140;
  int8x16_t v141;
  int8x16_t v142;
  int8x16_t *v143;
  int8x16_t v144;
  int8x16_t v145;
  int8x16_t v146;
  uint8x16_t v147;
  int8x16_t v148;
  int8x16_t v149;
  int8x16_t v150;
  int8x16_t v151;
  int16x8_t v152;
  int16x8_t v153;
  int16x8_t v154;
  int16x8_t v155;
  int16x8_t v156;
  int16x8_t v157;
  int8x16_t v158;
  int8x16_t v159;
  int8x16_t v160;
  int16x8_t v161;
  int16x8_t v162;
  int16x8_t v163;
  uint16x8_t v164;
  int8x16_t v165;
  int8x16_t *v166;
  int16x8_t v167;
  int16x8_t v168;
  int8x16_t v169;
  int8x16_t v170;
  int16x8_t v171;
  int16x8_t v172;
  int16x8_t v173;
  int16x8_t v174;
  int16x8_t v175;
  int16x8_t v176;
  int16x8_t v177;
  int16x8_t v178;
  int8x16_t v179;
  int8x16_t v180;
  int8x16_t v181;
  int16x8_t v182;
  int16x8_t v183;
  int8x16_t v184;
  int8x16_t v185;
  int8x16_t v186;
  int16x8_t v187;
  int16x8_t v188;
  int16x8_t v189;
  int16x8_t v190;
  int16x8_t v191;
  int16x8_t v192;
  int16x8_t v193;
  int16x8_t v194;
  int8x16_t v195;
  int8x16_t v196;
  int16x8_t v197;
  int8x16_t v198;
  char *v199;
  int8x16_t v200;
  int16x8_t v201;
  int8x16_t v202;
  int8x16_t v203;
  int8x16_t v204;
  int8x16_t v205;
  int8x16_t v206;
  int8x16_t v207;
  int16x8_t v208;
  int16x8_t v209;
  int16x8_t v210;
  int16x8_t v211;
  int16x8_t v212;
  int16x8_t v213;
  int16x8_t v214;
  int8x16_t v215;
  int8x16_t v216;
  int8x16_t v217;
  int16x8_t v218;
  int16x8_t v219;
  int16x8_t v220;
  int16x8_t v221;
  int16x8_t v222;
  int16x8_t v223;
  int16x8_t v224;
  int16x8_t v225;
  int16x8_t v226;
  int8x16_t v227;
  int8x16_t v228;
  int16x8_t v229;
  int8x16_t v230;
  int8x16_t v231;
  int16x8_t v232;
  int32x4_t v233;
  int32x4_t v234;
  int16x8_t v235;
  int16x8_t v236;
  int32x4_t v237;
  int32x4_t v238;
  int8x16_t v239;
  int8x16_t v240;
  int16x8_t v241;
  int8x16_t v242;
  int8x16_t v243;
  int16x8_t v244;
  int32x4_t v245;
  int32x4_t v246;
  int16x8_t v247;
  int16x8_t v248;
  int32x4_t v249;
  int32x4_t v250;
  int8x16_t v251;
  int8x16_t v252;
  int16x8_t v253;
  int8x16_t v254;
  int8x16_t v255;
  int16x8_t v256;
  int32x4_t v257;
  int32x4_t v258;
  int16x8_t v259;
  int16x8_t v260;
  int32x4_t v261;
  int32x4_t v262;
  int8x16_t v263;
  int8x16_t v264;
  int8x16_t v265;
  int8x16_t v266;
  int16x8_t v267;
  int16x8_t v268;
  int32x4_t v269;
  int32x4_t v270;
  int16x8_t v271;
  int16x8_t v272;
  int32x4_t v273;
  int32x4_t v274;
  int64x2_t *v275;
  int64x2_t *v276;
  int64x2_t *v277;
  int64x2_t v278;
  int64x2_t v279;
  int64x2_t v280;
  int64x2_t v281;
  int64x2_t v282;
  int64x2_t v283;
  int64x2_t v284;
  int64x2_t v285;
  int64x2_t v286;
  int64x2_t v287;
  int64x2_t v288;
  int64x2_t v289;
  int64x2_t v290;
  int64x2_t v291;
  int64x2_t v292;
  int8x16_t v293;
  int8x16_t v294;
  int8x16_t v295;
  int8x16_t v296;
  int8x16_t v297;
  int8x16_t v298;
  int8x16_t v299;
  int8x16_t v300;
  int8x16_t v301;
  _DWORD *v302;
  _DWORD *v303;
  _DWORD *v304;
  int8x16_t v305;
  _DWORD *v306;
  _DWORD *v307;
  int8x16_t v308;
  _DWORD *v309;
  _DWORD *v310;
  int8x16_t v311;
  _DWORD *v312;
  _DWORD *v313;
  int8x16_t v314;
  _DWORD *v315;
  _DWORD *v316;
  int8x16_t v317;
  _DWORD *v318;
  _DWORD *v319;
  int8x16_t v320;
  _DWORD *v321;
  int8x16_t v322;
  int8x16_t v323;
  int8x16_t v324;
  int8x16_t v325;
  uint64_t v326;
  int v327;
  unsigned int v328;
  unsigned int v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int v332;
  unsigned int v333;
  char v334;
  char v335;
  char v336;
  int8x16_t *v337;
  int8x16_t v338;
  int16x8_t v339;
  int16x8_t v340;
  unsigned int v341;
  unint64_t v342;
  unsigned int v343;
  int8x16_t v345;
  int8x16_t v346;
  int8x16_t v347;
  int8x16_t v348;
  uint8x16_t *v349;
  int8x16_t v350;
  int8x16_t v351;
  int8x16_t v352;
  uint8x16_t v353;
  int8x16_t v354;
  int8x16_t v355;
  int8x16_t v356;
  int8x16_t v357;
  int16x8_t v358;
  int16x8_t v359;
  int16x8_t v360;
  int16x8_t v361;
  int16x8_t v362;
  int16x8_t v363;
  int8x16_t v364;
  int8x16_t v365;
  int8x16_t v366;
  int16x8_t v367;
  int16x8_t v368;
  int16x8_t v369;
  int16x8_t v370;
  uint16x8_t v371;
  int8x16_t v372;
  int8x16_t v373;
  int16x8_t v374;
  int16x8_t v375;
  int16x8_t v376;
  int16x8_t v377;
  int16x8_t v378;
  int16x8_t v379;
  int16x8_t v380;
  int16x8_t v381;
  int8x16_t v382;
  int16x8_t v383;
  int16x8_t v384;
  int8x16_t v385;
  int8x16_t v386;
  int8x16_t v387;
  int8x16_t v388;
  int16x8_t v389;
  int16x8_t v390;
  int16x8_t v391;
  int8x16_t v392;
  int8x16_t v393;
  int16x8_t v394;
  int16x8_t v395;
  int16x8_t v396;
  int16x8_t v397;
  int16x8_t v398;
  int16x8_t v399;
  int8x16_t v400;
  int16x8_t v401;
  int16x8_t v402;
  int8x16_t v403;
  int8x16_t v404;
  int8x16_t v405;
  int16x8_t v406;
  int8x16_t v407;
  int8x16_t v408;
  char *v409;
  int8x16_t v410;
  int8x16_t v411;
  int16x8_t v412;
  int8x16_t v413;
  int8x16_t v414;
  int8x16_t v415;
  int8x16_t v416;
  int8x16_t v417;
  int16x8_t v418;
  int16x8_t v419;
  int16x8_t v420;
  int16x8_t v421;
  int16x8_t v422;
  int16x8_t v423;
  int8x16_t v424;
  int8x16_t v425;
  int8x16_t v426;
  int16x8_t v427;
  int16x8_t v428;
  int16x8_t v429;
  int16x8_t v430;
  int16x8_t v431;
  int16x8_t v432;
  int16x8_t v433;
  int16x8_t v434;
  _BYTE v436[4];
  _BYTE v437[4];
  _BYTE v438[4];
  _BYTE v439[4];
  _BYTE v440[4];
  char v441;
  char v442;
  char v443;
  char v444;

  v10 = *(_DWORD *)(a1 + 12) * a5;
  v11 = *(_QWORD *)(a1 + 48) + 12 * *(unsigned __int16 *)(*(_QWORD *)(a1 + 72) + 2 * (v10 + a4));
  v12 = *(char *)(v11 + 10);
  v13 = *(char *)(v11 + 11);
  v14 = *(_QWORD *)(a1 + 112);
  v15 = *(unsigned __int8 *)(v14 + v10 + a4);
  v16 = a7->u8[0];
  v17.i64[0] = 0x1F1F1F1F1F1F1F1FLL;
  v17.i64[1] = 0x1F1F1F1F1F1F1F1FLL;
  v18 = (int8x16_t)xmmword_2160F2980;
  v19 = 4 * a6;
  if (v16 <= 0x3F)
  {
    v20 = *a7;
    v21 = vandq_s8(vorrq_s8(vceqzq_s8(*a7), vcgtq_s8(*a7, v17)), (int8x16_t)xmmword_2160F2980);
    v22 = vpaddq_s8(v21, v21);
    v23 = vpaddq_s8(v22, v22);
    if (vpaddq_s8(v23, v23).u16[0] != 0xFFFF)
    {
      v24 = (v15 + v12) & ~((v15 + v12) >> 31);
      if (v24 >= 0x33)
        v24 = 51;
      v25 = (v15 + v13) & ~((v15 + v13) >> 31);
      if (v25 >= 0x33)
        v25 = 51;
      v26 = v15 + *(unsigned __int8 *)(v14 + a4 - (a4 != 0) + v10) + 1;
      v27 = v12 + (v26 >> 1);
      v28 = v13 + (v26 >> 1);
      v29 = v27 & ~(v27 >> 31);
      if (v29 >= 0x33)
        v30 = 51;
      else
        v30 = v29;
      v31 = v28 & ~(v28 >> 31);
      if (v31 >= 0x33)
        v31 = 51;
      v32 = byte_2160F2A00[v31];
      v441 = byte_2160F29C0[v30];
      v33 = 3 * a6;
      v34 = 2 * a6;
      v35 = *(int8x16_t *)((char *)a2 + a6);
      v36 = (int16x8_t)vzip1q_s8(*a2, v35);
      v37 = *(int8x16_t *)((char *)a2 + v34);
      v38 = *(int8x16_t *)((char *)a2 + v33);
      v39 = (int16x8_t)vzip1q_s8(v37, v38);
      v40 = 8 * a6;
      v41 = (int32x4_t)vzip1q_s16(v36, v39);
      v42 = *(int8x16_t *)((char *)a2 + v19 + a6);
      v43 = (int32x4_t)vzip2q_s16(v36, v39);
      v44 = (int16x8_t)vzip2q_s8(*a2, v35);
      v45 = *(int8x16_t *)((char *)a2 + v19);
      v46 = (int16x8_t)vzip2q_s8(v37, v38);
      v47 = *(int8x16_t *)((char *)a2 + v19 + v34);
      v48 = (int32x4_t)vzip2q_s16(v44, v46);
      v49 = (int32x4_t)vzip1q_s16(v44, v46);
      v50 = *(int8x16_t *)((char *)a2 + v19 + v33);
      v51 = (int16x8_t)vzip1q_s8(v45, v42);
      v52 = *(int8x16_t *)((char *)a2 + v40);
      v53 = (int16x8_t)vzip1q_s8(v47, v50);
      v54 = (int32x4_t)vzip1q_s16(v51, v53);
      v55 = *(int8x16_t *)((char *)a2 + v40 + a6);
      v56 = (int32x4_t)vzip2q_s16(v51, v53);
      v57 = *(int8x16_t *)((char *)a2 + v40 + v34);
      v58 = (int16x8_t)vzip2q_s8(v45, v42);
      v59 = (int16x8_t)vzip2q_s8(v47, v50);
      v60 = *(int8x16_t *)((char *)a2 + v40 + v33);
      v61 = 12 * a6;
      v62 = (int32x4_t)vzip2q_s16(v58, v59);
      v63 = (int32x4_t)vzip1q_s16(v58, v59);
      v64 = *(int8x16_t *)((char *)a2 + v61 + a6);
      v65 = *(int8x16_t *)((char *)a2 + v61 + v34);
      v66 = (int16x8_t)vzip1q_s8(v52, v55);
      v67 = (int16x8_t)vzip1q_s8(v57, v60);
      v68 = *(int8x16_t *)((char *)a2 + v61 + v33);
      v69 = (int32x4_t)vzip1q_s16(v66, v67);
      v70 = (int32x4_t)vzip2q_s16(v66, v67);
      v71 = *(int8x16_t *)((char *)a2 + v61);
      v72 = (int16x8_t)vzip2q_s8(v52, v55);
      v73 = (int16x8_t)vzip2q_s8(v57, v60);
      v74 = (int32x4_t)vzip2q_s16(v72, v73);
      v75 = byte_2160F2A00[v25];
      v76 = (int32x4_t)vzip1q_s16(v72, v73);
      v442 = byte_2160F29C0[v24];
      v77 = (int16x8_t)vzip1q_s8(v71, v64);
      v78 = (int16x8_t)vzip1q_s8(v65, v68);
      v443 = v442;
      v79 = (int32x4_t)vzip1q_s16(v77, v78);
      v444 = v442;
      v80 = (int32x4_t)vzip2q_s16(v77, v78);
      v81 = (int16x8_t)vzip2q_s8(v71, v64);
      v440[0] = v32;
      v82 = (int16x8_t)vzip2q_s8(v65, v68);
      v440[1] = v75;
      v83 = (int32x4_t)vzip2q_s16(v81, v82);
      v84 = (int32x4_t)vzip1q_s16(v81, v82);
      v440[2] = v75;
      v85 = (int64x2_t)vzip1q_s32(v41, v54);
      v440[3] = v75;
      v86 = (int64x2_t)vzip1q_s32(v69, v79);
      v87 = vzip1q_s64(v85, v86);
      v439[0] = v30;
      v88 = vzip2q_s64(v85, v86);
      v439[1] = v24;
      v89 = (int64x2_t)vzip2q_s32(v41, v54);
      v90 = (int64x2_t)vzip2q_s32(v69, v79);
      v439[2] = v24;
      v91 = vzip1q_s64(v89, v90);
      v439[3] = v24;
      v92 = vzip2q_s64(v89, v90);
      v93 = (int64x2_t)vzip1q_s32(v43, v56);
      v94 = (int64x2_t)vzip1q_s32(v70, v80);
      a8[4] = (int8x16_t)v87;
      a8[5] = (int8x16_t)v88;
      v95 = (int64x2_t)vzip2q_s32(v43, v56);
      a8[6] = (int8x16_t)v91;
      a8[7] = (int8x16_t)v92;
      v96 = (int64x2_t)vzip2q_s32(v70, v80);
      v97 = vzip1q_s64(v95, v96);
      v98 = vzip2q_s64(v95, v96);
      v99 = (int64x2_t)vzip1q_s32(v49, v63);
      a8[8] = (int8x16_t)vzip1q_s64(v93, v94);
      a8[9] = (int8x16_t)vzip2q_s64(v93, v94);
      a8[10] = (int8x16_t)v97;
      a8[11] = (int8x16_t)v98;
      v100 = (int64x2_t)vzip1q_s32(v76, v84);
      a8[12] = (int8x16_t)vzip1q_s64(v99, v100);
      a8[13] = (int8x16_t)vzip2q_s64(v99, v100);
      v101 = (int64x2_t)vzip2q_s32(v49, v63);
      v102 = (int64x2_t)vzip2q_s32(v76, v84);
      a8[14] = (int8x16_t)vzip1q_s64(v101, v102);
      a8[15] = (int8x16_t)vzip2q_s64(v101, v102);
      v103 = (int64x2_t)vzip1q_s32(v48, v62);
      v104 = (int64x2_t)vzip1q_s32(v74, v83);
      v105 = (int8x16_t)vzip1q_s64(v103, v104);
      a8[16] = v105;
      a8[17] = (int8x16_t)vzip2q_s64(v103, v104);
      v106 = (int64x2_t)vzip2q_s32(v48, v62);
      v107 = (int64x2_t)vzip2q_s32(v74, v83);
      v108 = (int8x16_t)vzip1q_s64(v106, v107);
      v109 = (int8x16_t)vzip2q_s64(v106, v107);
      a8[18] = v108;
      a8[19] = v109;
      if (v16 <= 0x1F)
      {
        v110 = &a3[-1].i8[v19];
        v111 = &a3[-1].i8[v40];
        v112 = &a3[-1].i8[v61];
        v109.i32[0] = *(__int32 *)((char *)&a3[-1].i32[3] + a6);
        v107.i32[0] = *(__int32 *)((char *)&a3[-1].i32[3] + v34);
        v108.i32[0] = a3[-1].i32[3];
        v105.i32[0] = *(__int32 *)((char *)&a3[-1].i32[3] + v33);
        v113 = (int16x8_t)vzip1q_s8((int8x16_t)v107, v105);
        v114 = (int32x4_t)vzip1q_s16((int16x8_t)vzip1q_s8(v108, v109), v113);
        v115 = *((_DWORD *)v110 + 3);
        v110 += 12;
        v113.i32[0] = *(_DWORD *)&v110[a6];
        v108.i32[0] = *(_DWORD *)&v110[v34];
        v105.i32[0] = v115;
        v76.i32[0] = *(_DWORD *)&v110[v33];
        v116 = (int16x8_t)vzip1q_s8(v108, (int8x16_t)v76);
        v117 = (int32x4_t)vzip1q_s16((int16x8_t)vzip1q_s8(v105, (int8x16_t)v113), v116);
        v118 = *((_DWORD *)v111 + 3);
        v111 += 12;
        v116.i32[0] = *(_DWORD *)&v111[a6];
        v105.i32[0] = *(_DWORD *)&v111[v34];
        v76.i32[0] = v118;
        v84.i32[0] = *(_DWORD *)&v111[v33];
        v119 = (int16x8_t)vzip1q_s8(v105, (int8x16_t)v84);
        v120 = (int32x4_t)vzip1q_s16((int16x8_t)vzip1q_s8((int8x16_t)v76, (int8x16_t)v116), v119);
        v121 = *((_DWORD *)v112 + 3);
        v112 += 12;
        v119.i32[0] = *(_DWORD *)&v112[a6];
        v76.i32[0] = *(_DWORD *)&v112[v34];
        v84.i32[0] = v121;
        v99.i32[0] = *(_DWORD *)&v112[v33];
        v122 = (int32x4_t)vzip1q_s16((int16x8_t)vzip1q_s8((int8x16_t)v84, (int8x16_t)v119), (int16x8_t)vzip1q_s8((int8x16_t)v76, (int8x16_t)v99));
        v123 = (int64x2_t)vzip1q_s32(v114, v117);
        v124 = (int64x2_t)vzip2q_s32(v114, v117);
        v125 = (int64x2_t)vzip1q_s32(v120, v122);
        v126 = (int64x2_t)vzip2q_s32(v120, v122);
        *(int64x2_t *)a8 = vzip1q_s64(v123, v125);
        a8[1] = (int8x16_t)vzip2q_s64(v123, v125);
        a8[2] = (int8x16_t)vzip1q_s64(v124, v126);
        a8[3] = (int8x16_t)vzip2q_s64(v124, v126);
      }
      v127 = 0;
      v128 = &v441;
      v129 = v440;
      v130 = v439;
      v131 = (int16x8_t)vqtbl1q_s8((int8x16_t)xmmword_2160F29A0, (int8x16_t)xmmword_2160EE800);
      v132.i64[0] = 0x2000200020002;
      v132.i64[1] = 0x2000200020002;
      v133 = a7;
      do
      {
        v134 = v133->u8[0];
        v136 = v133->i32[0];
        v133 = (int8x16_t *)((char *)v133 + 4);
        v135 = v136;
        if (v134 <= 0x1F && (_DWORD)v135 != 0)
        {
          v62.i32[0] = *v128;
          v138 = vzip1q_s8((int8x16_t)v62, (int8x16_t)v62);
          v139 = vzip1q_s8(v138, v138);
          v140 = vqtbl1q_s8(v139, (int8x16_t)xmmword_2160EE800);
          v139.i32[0] = *v129;
          v141 = vzip1q_s8(v139, v139);
          v142 = vqtbl1q_s8(vzip1q_s8(v141, v141), (int8x16_t)xmmword_2160EE800);
          v143 = &a8[v127];
          v145 = a8[v127 + 2];
          v144 = a8[v127 + 3];
          v62 = (int32x4_t)a8[v127 + 4];
          v146 = a8[v127 + 5];
          v147 = vabdq_u8((uint8x16_t)v144, (uint8x16_t)v62);
          v148 = vbicq_s8(vbicq_s8(vmvnq_s8(vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v144, (uint8x16_t)v145), (uint8x16_t)v142), v142)), vceqq_s8((int8x16_t)vminq_u8(v147, (uint8x16_t)v140), v140)), vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v62, (uint8x16_t)v146), (uint8x16_t)v142), v142));
          v149 = vbicq_s8(v18, v148);
          v150 = vpaddq_s8(v149, v149);
          v151 = vpaddq_s8(v150, v150);
          if (vpaddq_s8(v151, v151).u16[0] != 0xFFFF)
          {
            v152 = (int16x8_t)vzip2q_s8(v144, (int8x16_t)0);
            v153 = (int16x8_t)vzip1q_s8(v144, (int8x16_t)0);
            v154 = (int16x8_t)vzip2q_s8(v145, (int8x16_t)0);
            v155 = (int16x8_t)vzip1q_s8(v145, (int8x16_t)0);
            v156 = (int16x8_t)vzip2q_s8(v146, (int8x16_t)0);
            v157 = (int16x8_t)vzip1q_s8(v146, (int8x16_t)0);
            if (v134 == 4)
            {
              v9.i32[0] = (*v128 >> 2) + 2;
              v158 = vzip1q_s8((int8x16_t)v9, (int8x16_t)v9);
              v159 = vqtbl1q_s8(vzip1q_s8(v158, v158), (int8x16_t)xmmword_2160EE800);
              v160 = vceqq_s8((int8x16_t)vminq_u8(v147, (uint8x16_t)v159), v159);
              v161 = vaddq_s16(v156, v154);
              v9 = vaddq_s16(v157, v155);
              v162 = vaddq_s16(vaddq_s16(v152, v154), v131);
              v163 = vaddq_s16(vaddq_s16(v153, v155), v131);
              v164.i64[0] = 0x1000100010001;
              v164.i64[1] = 0x1000100010001;
              v165 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v163, v9), v164)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v162, v161), v164));
              v166 = &a8[v127];
              v167 = (int16x8_t)vzip2q_s8((int8x16_t)v62, (int8x16_t)0);
              v168 = (int16x8_t)vzip1q_s8((int8x16_t)v62, (int8x16_t)0);
              v170 = a8[v127];
              v169 = a8[v127 + 1];
              v171 = (int16x8_t)vzip2q_s8(v169, (int8x16_t)0);
              v172 = (int16x8_t)vzip1q_s8(v169, (int8x16_t)0);
              v173 = vaddq_s16(v162, v167);
              v174 = vaddq_s16(v163, v168);
              v175 = vaddq_s16(v173, v171);
              v176 = vaddq_s16(v174, v172);
              v177 = vaddq_s16((int16x8_t)vzip2q_s8(v170, (int8x16_t)0), v171);
              v178 = vaddq_s16((int16x8_t)vzip1q_s8(v170, (int8x16_t)0), v172);
              v132.i64[0] = 0x2000200020002;
              v132.i64[1] = 0x2000200020002;
              v179 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v176, vaddq_s16(v131, vaddq_s16(v178, v178))), (uint16x8_t)v132)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v177, v177), v131), v175), (uint16x8_t)v132));
              v180 = vbicq_s8(vmvnq_s8(vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v169, (uint8x16_t)v144), (uint8x16_t)v142), v142)), v160);
              v181 = vbslq_s8(v180, vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v174, v157), v176), (uint16x8_t)v132)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v173, v156), v175), (uint16x8_t)v132)), v165);
              v18 = (int8x16_t)xmmword_2160F2980;
              v166[1] = vorrq_s8(vandq_s8(vbslq_s8(v180, v179, v169), v148), vbicq_s8(v169, v148));
              v143[2] = vorrq_s8(vandq_s8(vbslq_s8(v180, vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)v176, v164)), (int16x8_t)vshlq_u16((uint16x8_t)v175, v164)), v145), v148), vbicq_s8(v145, v148));
              v143[3] = vorrq_s8(vandq_s8(v181, v148), vbicq_s8(v144, v148));
              v182 = vaddq_s16(vaddq_s16(v156, v167), v131);
              v183 = vaddq_s16(vaddq_s16(v157, v168), v131);
              v184 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v183, v9), v164)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v182, v161), v164));
              v185 = a8[v127 + 6];
              v186 = a8[v127 + 7];
              v187 = (int16x8_t)vzip2q_s8(v185, (int8x16_t)0);
              v188 = (int16x8_t)vzip1q_s8(v185, (int8x16_t)0);
              v189 = vaddq_s16(v182, v152);
              v190 = vaddq_s16(v183, v153);
              v191 = vaddq_s16(v189, v187);
              v192 = vaddq_s16(v190, v188);
              v193 = vaddq_s16((int16x8_t)vzip2q_s8(v186, (int8x16_t)0), v187);
              v194 = vaddq_s16((int16x8_t)vzip1q_s8(v186, (int8x16_t)0), v188);
              v195 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v192, vaddq_s16(v131, vaddq_s16(v194, v194))), (uint16x8_t)v132)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v193, v193), v131), v191), (uint16x8_t)v132));
              v196 = vbicq_s8(vmvnq_s8(vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v185, (uint8x16_t)v62), (uint8x16_t)v142), v142)), v160);
              v143[4] = vorrq_s8(vandq_s8(vbslq_s8(v196, vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v190, v155), v192), (uint16x8_t)v132)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v189, v154), v191), (uint16x8_t)v132)), v184), v148), vbicq_s8((int8x16_t)v62, v148));
              v143[5] = vorrq_s8(vandq_s8(vbslq_s8(v196, vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)v192, v164)), (int16x8_t)vshlq_u16((uint16x8_t)v191, v164)), v146), v148), vbicq_s8(v146, v148));
              v166[6] = vorrq_s8(vandq_s8(vbslq_s8(v196, v195, v185), v148), vbicq_s8(v185, v148));
            }
            else
            {
              v197 = (int16x8_t)vzip1q_s8(v20, v20);
              v198 = vceqzq_s8((int8x16_t)vzip1q_s16(v197, v197));
              v199 = (char *)&unk_2160F2A40 + 4 * *v130;
              v200 = vbicq_s8(v148, v198);
              v198.i32[0] = v199[v135] | (v199[BYTE1(v135)] << 8) | (v199[BYTE2(v135)] << 16) | (v199[v135 >> 24] << 24);
              v201 = (int16x8_t)vzip1q_s8(v198, v198);
              v202 = a8[v127 + 1];
              v9 = (int16x8_t)a8[v127 + 6];
              v203 = vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v9, (uint8x16_t)v62), (uint8x16_t)v142), v142);
              v204 = vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v202, (uint8x16_t)v144), (uint8x16_t)v142), v142);
              v205 = (int8x16_t)vzip1q_s16(v201, v201);
              v206.i64[0] = 0x202020202020202;
              v206.i64[1] = 0x202020202020202;
              v207 = vaddq_s8(vaddq_s8(vsubq_s8(vbicq_s8(v206, v203), v203), v204), v205);
              v208 = (int16x8_t)vqtbl1q_s8((int8x16_t)xmmword_2160F2990, (int8x16_t)xmmword_2160EE800);
              v209 = (int16x8_t)vzip2q_s8((int8x16_t)v62, (int8x16_t)0);
              v210 = (int16x8_t)vzip1q_s8((int8x16_t)v62, (int8x16_t)0);
              v211 = (int16x8_t)vzip2q_s8(v207, (int8x16_t)0);
              v212 = vminq_s16(vmaxq_s16(vshlq_s16(vaddq_s16(vaddq_s16(vsubq_s16(v154, v156), v208), vshlq_n_s16(vsubq_s16(v209, v152), 2uLL)), v132), vnegq_s16(v211)), v211);
              v213 = (int16x8_t)vzip1q_s8(v207, (int8x16_t)0);
              v214 = vminq_s16(vmaxq_s16(vshlq_s16(vaddq_s16(vaddq_s16(vsubq_s16(v155, v157), v208), vshlq_n_s16(vsubq_s16(v210, v153), 2uLL)), v132), vnegq_s16(v213)), v213);
              v215 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(v214, v153)), vaddq_s16(v212, v152));
              v216 = vqmovun_high_s16(vqmovun_s16(vsubq_s16(v210, v214)), vsubq_s16(v209, v212));
              v217 = (int8x16_t)vrhaddq_u8((uint8x16_t)v144, (uint8x16_t)v62);
              v218 = (int16x8_t)vzip2q_s8(v217, (int8x16_t)0);
              v219 = (int16x8_t)vzip1q_s8(v217, (int8x16_t)0);
              v220 = vaddq_s16(vsubq_s16((int16x8_t)vzip2q_s8(v202, (int8x16_t)0), vaddq_s16(v154, v154)), v218);
              v221 = vsubq_s16(vaddq_s16(v219, (int16x8_t)vzip1q_s8(v202, (int8x16_t)0)), vaddq_s16(v155, v155));
              v222 = (int16x8_t)vzip2q_s8(v205, (int8x16_t)0);
              v223 = vnegq_s16(v222);
              v224.i64[0] = -1;
              v224.i64[1] = -1;
              v225 = (int16x8_t)vzip1q_s8(v205, (int8x16_t)0);
              v226 = vnegq_s16(v225);
              v143[2] = vbslq_s8(v200, vbslq_s8(v204, v145, vaddq_s8(vqmovn_high_s16(vqmovn_s16(vminq_s16(vmaxq_s16(vshlq_s16(v221, v224), v226), v225)), vminq_s16(vmaxq_s16(vshlq_s16(v220, v224), v223), v222)), v145)), v145);
              v143[3] = vbslq_s8(v200, v215, v144);
              v143[4] = vbslq_s8(v200, v216, (int8x16_t)v62);
              v143[5] = vbslq_s8(v200, vaddq_s8(v146, vbicq_s8(vqmovn_high_s16(vqmovn_s16(vminq_s16(vmaxq_s16(vshlq_s16(vsubq_s16(vaddq_s16(v219, (int16x8_t)vzip1q_s8((int8x16_t)v9, (int8x16_t)0)), vaddq_s16(v157, v157)), v224), v226), v225)), vminq_s16(vmaxq_s16(vshlq_s16(vsubq_s16(
                                        vaddq_s16(v218, (int16x8_t)vzip2q_s8((int8x16_t)v9, (int8x16_t)0)),
                                        vaddq_s16(v156, v156)),
                                      v224),
                                    v223),
                                  v222)),
                              v203)),
                          v146);
            }
          }
        }
        v20 = vextq_s8(v20, (int8x16_t)0, 4uLL);
        ++v128;
        ++v129;
        ++v130;
        v127 += 4;
      }
      while (v127 != 16);
      v227 = a8[4];
      v228 = a8[5];
      v229 = (int16x8_t)vzip1q_s8(v227, v228);
      v230 = a8[6];
      v231 = a8[7];
      v232 = (int16x8_t)vzip1q_s8(v230, v231);
      v233 = (int32x4_t)vzip1q_s16(v229, v232);
      v234 = (int32x4_t)vzip2q_s16(v229, v232);
      v235 = (int16x8_t)vzip2q_s8(v227, v228);
      v236 = (int16x8_t)vzip2q_s8(v230, v231);
      v237 = (int32x4_t)vzip2q_s16(v235, v236);
      v238 = (int32x4_t)vzip1q_s16(v235, v236);
      v239 = a8[8];
      v240 = a8[9];
      v241 = (int16x8_t)vzip1q_s8(v239, v240);
      v242 = a8[10];
      v243 = a8[11];
      v244 = (int16x8_t)vzip1q_s8(v242, v243);
      v245 = (int32x4_t)vzip1q_s16(v241, v244);
      v246 = (int32x4_t)vzip2q_s16(v241, v244);
      v247 = (int16x8_t)vzip2q_s8(v239, v240);
      v248 = (int16x8_t)vzip2q_s8(v242, v243);
      v249 = (int32x4_t)vzip2q_s16(v247, v248);
      v250 = (int32x4_t)vzip1q_s16(v247, v248);
      v251 = a8[12];
      v252 = a8[13];
      v253 = (int16x8_t)vzip1q_s8(v251, v252);
      v254 = a8[14];
      v255 = a8[15];
      v256 = (int16x8_t)vzip1q_s8(v254, v255);
      v257 = (int32x4_t)vzip1q_s16(v253, v256);
      v258 = (int32x4_t)vzip2q_s16(v253, v256);
      v259 = (int16x8_t)vzip2q_s8(v251, v252);
      v260 = (int16x8_t)vzip2q_s8(v254, v255);
      v261 = (int32x4_t)vzip2q_s16(v259, v260);
      v262 = (int32x4_t)vzip1q_s16(v259, v260);
      v263 = a8[16];
      v264 = a8[17];
      v265 = a8[18];
      v266 = a8[19];
      v267 = (int16x8_t)vzip1q_s8(v263, v264);
      v268 = (int16x8_t)vzip1q_s8(v265, v266);
      v269 = (int32x4_t)vzip1q_s16(v267, v268);
      v270 = (int32x4_t)vzip2q_s16(v267, v268);
      v271 = (int16x8_t)vzip2q_s8(v263, v264);
      v272 = (int16x8_t)vzip2q_s8(v265, v266);
      v273 = (int32x4_t)vzip2q_s16(v271, v272);
      v274 = (int32x4_t)vzip1q_s16(v271, v272);
      v275 = (int64x2_t *)((char *)a3 + v19);
      v276 = (int64x2_t *)((char *)a3 + 8 * a6);
      v277 = (int64x2_t *)((char *)a3 + v61);
      v278 = (int64x2_t)vzip1q_s32(v233, v245);
      v279 = (int64x2_t)vzip1q_s32(v257, v269);
      *a3 = vzip1q_s64(v278, v279);
      *(int64x2_t *)((char *)a3 + a6) = vzip2q_s64(v278, v279);
      v280 = (int64x2_t)vzip2q_s32(v233, v245);
      v281 = (int64x2_t)vzip2q_s32(v257, v269);
      *(int64x2_t *)((char *)a3 + v34) = vzip1q_s64(v280, v281);
      *(int64x2_t *)((char *)a3 + v33) = vzip2q_s64(v280, v281);
      v282 = (int64x2_t)vzip1q_s32(v234, v246);
      v8 = (int64x2_t)vzip1q_s32(v258, v270);
      *v275 = vzip1q_s64(v282, v8);
      *(int64x2_t *)((char *)v275 + a6) = vzip2q_s64(v282, v8);
      v283 = (int64x2_t)vzip2q_s32(v234, v246);
      v284 = (int64x2_t)vzip2q_s32(v258, v270);
      *(int64x2_t *)((char *)v275 + v34) = vzip1q_s64(v283, v284);
      *(int64x2_t *)((char *)v275 + v33) = vzip2q_s64(v283, v284);
      v285 = (int64x2_t)vzip1q_s32(v238, v250);
      v286 = (int64x2_t)vzip1q_s32(v262, v274);
      *v276 = vzip1q_s64(v285, v286);
      *(int64x2_t *)((char *)v276 + a6) = vzip2q_s64(v285, v286);
      v287 = (int64x2_t)vzip2q_s32(v238, v250);
      v288 = (int64x2_t)vzip2q_s32(v262, v274);
      *(int64x2_t *)((char *)v276 + v34) = vzip1q_s64(v287, v288);
      *(int64x2_t *)((char *)v276 + v33) = vzip2q_s64(v287, v288);
      v289 = (int64x2_t)vzip1q_s32(v237, v249);
      v290 = (int64x2_t)vzip1q_s32(v261, v273);
      *v277 = vzip1q_s64(v289, v290);
      *(int64x2_t *)((char *)v277 + a6) = vzip2q_s64(v289, v290);
      v291 = (int64x2_t)vzip2q_s32(v237, v249);
      v292 = (int64x2_t)vzip2q_s32(v261, v273);
      *(int64x2_t *)((char *)v277 + v34) = vzip1q_s64(v291, v292);
      *(int64x2_t *)((char *)v277 + v33) = vzip2q_s64(v291, v292);
      v17.i64[0] = 0x1F1F1F1F1F1F1F1FLL;
      v17.i64[1] = 0x1F1F1F1F1F1F1F1FLL;
      if (v16 <= 0x1F)
      {
        v293 = a8[1];
        v294 = a8[2];
        v295 = a8[3];
        v296 = vzip1q_s8(*a8, v294);
        v297 = vzip2q_s8(*a8, v294);
        v298 = vzip1q_s8(v293, v295);
        v299 = vzip2q_s8(v293, v295);
        v300 = vzip1q_s8(v296, v298);
        v301 = vextq_s8(v300, (int8x16_t)0, 4uLL);
        a3[-1].i32[3] = v300.i32[0];
        v302 = (__int32 *)((char *)&a3[-1].i32[3] + a6);
        *v302 = v301.i32[0];
        v303 = (_DWORD *)((char *)v302 + a6);
        v300.i64[0] = vextq_s8(v301, v297, 4uLL).u64[0];
        *v303 = v300.i32[0];
        v304 = (_DWORD *)((char *)v303 + a6);
        *v304 = v300.i32[1];
        v305 = vzip2q_s8(v296, v298);
        v306 = (_DWORD *)((char *)v304 + a6);
        *v306 = v305.i32[0];
        v307 = (_DWORD *)((char *)v306 + a6);
        v308 = vextq_s8(v305, (int8x16_t)0, 4uLL);
        *v307 = v308.i32[0];
        v309 = (_DWORD *)((char *)v307 + a6);
        v308.i64[0] = vextq_s8(v308, v297, 4uLL).u64[0];
        *v309 = v308.i32[0];
        v310 = (_DWORD *)((char *)v309 + a6);
        *v310 = v308.i32[1];
        v311 = vzip1q_s8(v297, v299);
        v312 = (_DWORD *)((char *)v310 + a6);
        *v312 = v311.i32[0];
        v313 = (_DWORD *)((char *)v312 + a6);
        v314 = vextq_s8(v311, (int8x16_t)0, 4uLL);
        *v313 = v314.i32[0];
        v315 = (_DWORD *)((char *)v313 + a6);
        v314.i64[0] = vextq_s8(v314, v297, 4uLL).u64[0];
        *v315 = v314.i32[0];
        v316 = (_DWORD *)((char *)v315 + a6);
        *v316 = v314.i32[1];
        v317 = vzip2q_s8(v297, v299);
        v318 = (_DWORD *)((char *)v316 + a6);
        *v318 = v317.i32[0];
        v319 = (_DWORD *)((char *)v318 + a6);
        v320 = vextq_s8(v317, (int8x16_t)0, 4uLL);
        *v319 = v320.i32[0];
        v321 = (_DWORD *)((char *)v319 + a6);
        v320.i64[0] = vextq_s8(v320, v320, 4uLL).u64[0];
        *v321 = v320.i32[0];
        *(_DWORD *)((char *)v321 + a6) = v320.i32[1];
      }
    }
  }
  if (a7[1].u8[0] <= 0x3Fu)
  {
    v322 = a7[1];
    v323 = vandq_s8(vorrq_s8(vceqzq_s8(v322), vcgtq_s8(v322, v17)), v18);
    v324 = vpaddq_s8(v323, v323);
    v325 = vpaddq_s8(v324, v324);
    if (vpaddq_s8(v325, v325).u16[0] != 0xFFFF)
    {
      v326 = 0;
      v327 = 0;
      v328 = (v15 + v12) & ~((v15 + v12) >> 31);
      if (v328 >= 0x33)
        v328 = 51;
      v329 = (v15 + v13) & ~((v15 + v13) >> 31);
      if (v329 >= 0x33)
        v329 = 51;
      v330 = v15
           + *(unsigned __int8 *)(*(_QWORD *)(a1 + 112) + a4 + *(_DWORD *)(a1 + 12) * (a5 - (a5 != 0)))
           + 1;
      v331 = (v12 + (v330 >> 1)) & ~((int)(v12 + (v330 >> 1)) >> 31);
      if (v331 >= 0x33)
        v331 = 51;
      v332 = (v13 + (v330 >> 1)) & ~((int)(v13 + (v330 >> 1)) >> 31);
      if (v332 >= 0x33)
        v333 = 51;
      else
        v333 = v332;
      v334 = byte_2160F2A00[v333];
      v335 = byte_2160F29C0[v328];
      v336 = byte_2160F2A00[v329];
      v438[0] = byte_2160F29C0[v331];
      v438[1] = v335;
      v438[2] = v335;
      v438[3] = v335;
      v437[0] = v334;
      v437[1] = v336;
      v437[2] = v336;
      v437[3] = v336;
      v436[0] = v331;
      v436[1] = v328;
      v436[2] = v328;
      v436[3] = v328;
      v337 = a7 + 1;
      v338 = (int8x16_t)xmmword_2160F29A0;
      v339 = (int16x8_t)vqtbl1q_s8((int8x16_t)xmmword_2160F29A0, (int8x16_t)xmmword_2160EE800);
      v340.i64[0] = 0x2000200020002;
      v340.i64[1] = 0x2000200020002;
      do
      {
        v341 = v337->u8[0];
        v343 = v337->i32[0];
        v337 = (int8x16_t *)((char *)v337 + 4);
        v342 = v343;
        if (v341 <= 0x1F && (_DWORD)v342 != 0)
        {
          v338.i32[0] = v438[v326];
          v345 = vzip1q_s8(v338, v338);
          v346 = vqtbl1q_s8(vzip1q_s8(v345, v345), (int8x16_t)xmmword_2160EE800);
          v8.i32[0] = v437[v326];
          v347 = vzip1q_s8((int8x16_t)v8, (int8x16_t)v8);
          v348 = vqtbl1q_s8(vzip1q_s8(v347, v347), (int8x16_t)xmmword_2160EE800);
          v349 = (uint8x16_t *)&a3->i8[v327];
          v350 = *(int8x16_t *)((char *)v349 - 2 * (int)a6);
          v351 = *(int8x16_t *)((char *)v349 - (int)a6);
          v8 = *(int64x2_t *)v349;
          v352 = *(int8x16_t *)((char *)v349 + (int)a6);
          v353 = vabdq_u8((uint8x16_t)v351, *v349);
          v354 = vbicq_s8(vbicq_s8(vmvnq_s8(vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v351, (uint8x16_t)v350), (uint8x16_t)v348), v348)), vceqq_s8((int8x16_t)vminq_u8(v353, (uint8x16_t)v346), v346)), vceqq_s8((int8x16_t)vminq_u8(vabdq_u8(*v349, (uint8x16_t)v352), (uint8x16_t)v348), v348));
          v355 = vbicq_s8(v18, v354);
          v356 = vpaddq_s8(v355, v355);
          v357 = vpaddq_s8(v356, v356);
          v338 = vpaddq_s8(v357, v357);
          if (v338.i16[0] != -1)
          {
            v358 = (int16x8_t)vzip2q_s8(v351, (int8x16_t)0);
            v359 = (int16x8_t)vzip1q_s8(v351, (int8x16_t)0);
            v360 = (int16x8_t)vzip2q_s8(v350, (int8x16_t)0);
            v361 = (int16x8_t)vzip1q_s8(v350, (int8x16_t)0);
            v362 = (int16x8_t)vzip2q_s8(v352, (int8x16_t)0);
            v363 = (int16x8_t)vzip1q_s8(v352, (int8x16_t)0);
            if (v341 == 4)
            {
              v338.i32[0] = (v438[v326] >> 2) + 2;
              v364 = vzip1q_s8(v338, v338);
              v365 = vqtbl1q_s8(vzip1q_s8(v364, v364), (int8x16_t)xmmword_2160EE800);
              v366 = vceqq_s8((int8x16_t)vminq_u8(v353, (uint8x16_t)v365), v365);
              v367 = vaddq_s16(v362, v360);
              v368 = vaddq_s16(v363, v361);
              v369 = vaddq_s16(vaddq_s16(v358, v360), v339);
              v370 = vaddq_s16(vaddq_s16(v359, v361), v339);
              v371.i64[0] = 0x1000100010001;
              v371.i64[1] = 0x1000100010001;
              v372 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v370, v368), v371)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v369, v367), v371));
              v373 = *(int8x16_t *)((char *)v349 - 3 * (int)a6);
              v374 = (int16x8_t)vzip2q_s8((int8x16_t)v8, (int8x16_t)0);
              v375 = (int16x8_t)vzip1q_s8((int8x16_t)v8, (int8x16_t)0);
              v376 = (int16x8_t)vzip2q_s8(v373, (int8x16_t)0);
              v377 = (int16x8_t)vzip1q_s8(v373, (int8x16_t)0);
              v378 = vaddq_s16(v369, v374);
              v379 = vaddq_s16(v370, v375);
              v380 = vaddq_s16(v378, v376);
              v381 = vaddq_s16(v379, v377);
              v382 = *(int8x16_t *)((char *)v349 - (int)v19);
              v383 = vaddq_s16((int16x8_t)vzip2q_s8(v382, (int8x16_t)0), v376);
              v340.i64[0] = 0x2000200020002;
              v340.i64[1] = 0x2000200020002;
              v384 = vaddq_s16((int16x8_t)vzip1q_s8(v382, (int8x16_t)0), v377);
              v385 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v379, v363), v381), (uint16x8_t)v340)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v378, v362), v380), (uint16x8_t)v340));
              v386 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)v381, v371)), (int16x8_t)vshlq_u16((uint16x8_t)v380, v371));
              v387 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v381, vaddq_s16(v339, vaddq_s16(v384, v384))), (uint16x8_t)v340)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v383, v383), v339), v380), (uint16x8_t)v340));
              v388 = vbicq_s8(vmvnq_s8(vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v373, (uint8x16_t)v351), (uint8x16_t)v348), v348)), v366);
              *(int8x16_t *)((char *)v349 - 3 * (int)a6) = vorrq_s8(vandq_s8(vbslq_s8(v388, v387, v373), v354), vbicq_s8(v373, v354));
              *(int8x16_t *)((char *)v349 - 2 * (int)a6) = vorrq_s8(vandq_s8(vbslq_s8(v388, v386, v350), v354), vbicq_s8(v350, v354));
              *(int8x16_t *)((char *)v349 - (int)a6) = vorrq_s8(vandq_s8(vbslq_s8(v388, v385, v372), v354), vbicq_s8(v351, v354));
              v389 = vaddq_s16(v362, v374);
              v18 = (int8x16_t)xmmword_2160F2980;
              v390 = vaddq_s16(v389, v339);
              v391 = vaddq_s16(vaddq_s16(v363, v375), v339);
              v392 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v391, v368), v371)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v390, v367), v371));
              v393 = *(int8x16_t *)((char *)v349 + 2 * (int)a6);
              v394 = (int16x8_t)vzip2q_s8(v393, (int8x16_t)0);
              v395 = (int16x8_t)vzip1q_s8(v393, (int8x16_t)0);
              v396 = vaddq_s16(v390, v358);
              v397 = vaddq_s16(v391, v359);
              v398 = vaddq_s16(v396, v394);
              v399 = vaddq_s16(v397, v395);
              v400 = *(int8x16_t *)((char *)v349 + 3 * (int)a6);
              v401 = vaddq_s16((int16x8_t)vzip2q_s8(v400, (int8x16_t)0), v394);
              v402 = vaddq_s16((int16x8_t)vzip1q_s8(v400, (int8x16_t)0), v395);
              v403 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v397, v361), v399), (uint16x8_t)v340)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v396, v360), v398), (uint16x8_t)v340));
              v404 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v399, vaddq_s16(v339, vaddq_s16(v402, v402))), (uint16x8_t)v340)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v401, v401), v339), v398), (uint16x8_t)v340));
              v405 = vbicq_s8(vmvnq_s8(vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v393, (uint8x16_t)v8), (uint8x16_t)v348), v348)), v366);
              v338 = vorrq_s8(vandq_s8(vbslq_s8(v405, vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)v399, v371)), (int16x8_t)vshlq_u16((uint16x8_t)v398, v371)), v352), v354), vbicq_s8(v352, v354));
              *(int8x16_t *)v349 = vorrq_s8(vandq_s8(vbslq_s8(v405, v403, v392), v354), vbicq_s8((int8x16_t)v8, v354));
              *(int8x16_t *)((char *)v349 + (int)a6) = v338;
              *(int8x16_t *)((char *)v349 + 2 * (int)a6) = vorrq_s8(vandq_s8(vbslq_s8(v405, v404, v393), v354), vbicq_s8(v393, v354));
            }
            else
            {
              v406 = (int16x8_t)vzip1q_s8(v322, v322);
              v407 = vceqzq_s8((int8x16_t)vzip1q_s16(v406, v406));
              v408 = vbicq_s8(v354, v407);
              v409 = (char *)&unk_2160F2A40 + 4 * v436[v326];
              v407.i32[0] = v409[v342] | (v409[BYTE1(v342)] << 8) | (v409[BYTE2(v342)] << 16) | (v409[v342 >> 24] << 24);
              v410 = *(int8x16_t *)((char *)v349 - 3 * (int)a6);
              v411 = *(int8x16_t *)((char *)v349 + 2 * (int)a6);
              v412 = (int16x8_t)vzip1q_s8(v407, v407);
              v413 = vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v411, (uint8x16_t)v8), (uint8x16_t)v348), v348);
              v414 = vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v410, (uint8x16_t)v351), (uint8x16_t)v348), v348);
              v415 = (int8x16_t)vzip1q_s16(v412, v412);
              v416.i64[0] = 0x202020202020202;
              v416.i64[1] = 0x202020202020202;
              v417 = vaddq_s8(vaddq_s8(vsubq_s8(vbicq_s8(v416, v413), v413), v414), v415);
              v418 = (int16x8_t)vzip2q_s8((int8x16_t)v8, (int8x16_t)0);
              v419 = (int16x8_t)vzip1q_s8((int8x16_t)v8, (int8x16_t)0);
              v416.i64[0] = 0x4000400040004;
              v416.i64[1] = 0x4000400040004;
              v420 = (int16x8_t)vzip2q_s8(v417, (int8x16_t)0);
              v421 = vminq_s16(vmaxq_s16(vshlq_s16(vaddq_s16(vaddq_s16(vsubq_s16(v360, v362), (int16x8_t)v416), vshlq_n_s16(vsubq_s16(v418, v358), 2uLL)), v340), vnegq_s16(v420)), v420);
              v422 = (int16x8_t)vzip1q_s8(v417, (int8x16_t)0);
              v423 = vminq_s16(vmaxq_s16(vshlq_s16(vaddq_s16(vaddq_s16(vsubq_s16(v361, v363), (int16x8_t)v416), vshlq_n_s16(vsubq_s16(v419, v359), 2uLL)), v340), vnegq_s16(v422)), v422);
              v424 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(v423, v359)), vaddq_s16(v421, v358));
              v425 = vqmovun_high_s16(vqmovun_s16(vsubq_s16(v419, v423)), vsubq_s16(v418, v421));
              v426 = (int8x16_t)vrhaddq_u8((uint8x16_t)v351, (uint8x16_t)v8);
              v427 = (int16x8_t)vzip2q_s8(v426, (int8x16_t)0);
              v428 = (int16x8_t)vzip1q_s8(v426, (int8x16_t)0);
              v429 = vaddq_s16(vsubq_s16((int16x8_t)vzip2q_s8(v410, (int8x16_t)0), vaddq_s16(v360, v360)), v427);
              v430 = vsubq_s16(vaddq_s16(v428, (int16x8_t)vzip1q_s8(v410, (int8x16_t)0)), vaddq_s16(v361, v361));
              v431 = (int16x8_t)vzip2q_s8(v415, (int8x16_t)0);
              v432 = vnegq_s16(v431);
              v416.i64[0] = -1;
              v416.i64[1] = -1;
              v433 = (int16x8_t)vzip1q_s8(v415, (int8x16_t)0);
              v434 = vnegq_s16(v433);
              *(int8x16_t *)((char *)v349 - 2 * (int)a6) = vbslq_s8(v408, vbslq_s8(v414, v350, vaddq_s8(vqmovn_high_s16(vqmovn_s16(vminq_s16(vmaxq_s16(vshlq_s16(v430, (int16x8_t)v416), v434), v433)), vminq_s16(vmaxq_s16(vshlq_s16(v429, (int16x8_t)v416), v432), v431)), v350)), v350);
              *(int8x16_t *)((char *)v349 - (int)a6) = vbslq_s8(v408, v424, v351);
              v338 = vbslq_s8(v408, vaddq_s8(v352, vbicq_s8(vqmovn_high_s16(vqmovn_s16(vminq_s16(vmaxq_s16(vshlq_s16(vsubq_s16(vaddq_s16(v428, (int16x8_t)vzip1q_s8(v411, (int8x16_t)0)), vaddq_s16(v363, v363)), (int16x8_t)v416), v434), v433)), vminq_s16(vmaxq_s16(vshlq_s16(vsubq_s16(
                                     vaddq_s16(v427, (int16x8_t)vzip2q_s8(v411, (int8x16_t)0)),
                                     vaddq_s16(v362, v362)),
                                   (int16x8_t)v416),
                                 v432),
                               v431)),
                           v413)),
                       v352);
              *(int8x16_t *)v349 = vbslq_s8(v408, v425, (int8x16_t)v8);
              *(int8x16_t *)((char *)v349 + (int)a6) = v338;
            }
          }
        }
        v322 = vextq_s8(v322, (int8x16_t)0, 4uLL);
        ++v326;
        v327 += v19;
      }
      while (v326 != 4);
    }
  }
  return 0;
}

uint64_t sub_21609A5B4(uint64_t a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  int8x16_t *v11;
  int v12;
  int v13;
  int v14;
  unsigned __int8 *v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int16x8_t *v23;
  unsigned int v24;
  uint64_t result;
  int v26;
  unsigned int v27;
  char v29[128];
  int v30;

  v5 = *(unsigned int *)(*(_QWORD *)(a1 + 80) + 152);
  v6 = *(_QWORD *)(a1 + 152);
  v7 = *(_DWORD *)(a1 + 12);
  v30 = -1;
  if (a4 >= a5)
    return 0;
  v8 = a4;
  v11 = (int8x16_t *)(v6 + 48 * (a2 + v7 * a4));
  v26 = 16 * a2;
  v27 = a2;
  while (a2 >= a3)
  {
LABEL_18:
    ++v8;
    a2 = v27;
    if (v8 == a5)
      return 0;
  }
  v12 = 8 * v8;
  v13 = a2;
  v14 = v26;
  while (1)
  {
    v15 = *(unsigned __int8 **)(a1 + 80);
    if (*(_DWORD *)(a1 + 188) && v15[3])
    {
      v16 = v15[5];
      v17 = *v15;
      v18 = *((_QWORD *)v15 + 5) + (v14 & 0xFFFFFFF0);
      v19 = *((_DWORD *)v15 + 38);
      v20 = v18 + (v12 * v19);
      if (v17)
      {
        v20 = v18 + (16 * v8 * v19);
        v21 = 16 * v8;
      }
      else
      {
        v21 = 8 * v8;
      }
      v22 = v18 + v5 + (v21 * v19);
      v23 = (int16x8_t *)(v16 ? v22 : v20);
      v24 = 2 * v5;
    }
    else
    {
      v23 = (int16x8_t *)(*((_QWORD *)v15 + 5) + (v14 & 0xFFFFFFF0) + (v12 * *((_DWORD *)v15 + 38)));
      v24 = v5;
    }
    if ((v11[1].i8[0] & 0xC0) + v11->u8[0] <= 0x7F)
    {
      result = sub_21609A73C(a1, v23, v23->i16, v24, v13, v8, v11, (uint64_t)v29);
      if ((_DWORD)result)
        return result;
    }
    v11 += 3;
    v14 += 16;
    if (a3 == ++v13)
      goto LABEL_18;
  }
}

uint64_t sub_21609A73C(uint64_t a1, int16x8_t *a2, __int16 *a3, unsigned int a4, int a5, int a6, int8x16_t *a7, uint64_t a8)
{
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  int v21;
  int v22;
  int8x16_t v23;
  int8x16_t v24;
  int8x16_t v25;
  int8x16_t v26;
  int8x16_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int16x8_t v39;
  int16x8_t v40;
  int16x8_t v41;
  int16x8_t v42;
  int16x8_t v43;
  int16x8_t v44;
  int16x8_t v45;
  int16x8_t v46;
  int16x4x2_t v47;
  int16x8_t *v48;
  int16x4x2_t v49;
  int16x4x2_t v50;
  int16x4x2_t v51;
  int16x8_t v52;
  int16x8_t v53;
  int16x8_t v54;
  int16x8_t *v55;
  int16x8_t v56;
  int16x8_t *v57;
  int16x8_t *v58;
  int16x8_t *v59;
  int16x4x2_t v60;
  int16x8_t v61;
  __int16 *v62;
  uint64_t v63;
  char v64;
  int16x8_t v65;
  uint16x8_t v66;
  int8x16_t v67;
  int16x8_t v68;
  int16x8_t v69;
  int8x16_t *v70;
  int8x16_t *v71;
  char v72;
  unsigned int v73;
  unint64_t v74;
  unsigned int v75;
  int8x16_t v77;
  int8x16_t v78;
  int8x16_t v79;
  int8x16_t *v80;
  int8x16_t v81;
  int8x16_t v82;
  int8x16_t v83;
  int8x16_t v84;
  int8x16_t v85;
  int8x16_t v86;
  int8x16_t v87;
  int8x16_t v88;
  int16x8_t v89;
  int16x8_t v90;
  int16x8_t v91;
  int16x8_t v92;
  int16x8_t v93;
  int16x8_t v94;
  int16x8_t v95;
  int16x8_t v96;
  int16x8_t v97;
  int16x8_t v98;
  int16x8_t v99;
  int8x16_t v100;
  int8x16_t v101;
  unint64_t v102;
  unsigned __int8 v103;
  int16x8_t v104;
  char *v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  int8x16_t v109;
  uint64_t v110;
  int8x16_t v111;
  int8x16_t v112;
  int16x8_t v113;
  int16x8_t v114;
  int16x8_t v115;
  int16x8_t v116;
  int16x8_t v117;
  int16x8_t v118;
  int16x8_t v119;
  int16x8_t v120;
  int16x8_t v121;
  int16x8_t v122;
  int16x8_t v123;
  int16x8_t v124;
  int16x8_t v125;
  int16x4x2_t v126;
  int16x4x2_t v127;
  int16x4x2_t v128;
  int16x4x2_t v129;
  int16x8_t v130;
  int16x8_t v131;
  int16x8_t v132;
  int16x8_t v133;
  int16x8_t *v135;
  __int16 *v136;
  __int16 *v137;
  int16x8_t *v138;
  __int16 *v139;
  __int16 *v140;
  uint64_t result;
  int8x16_t v142;
  int8x16_t v143;
  int8x16_t v144;
  int8x16_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  int8x16_t *v149;
  int8x16_t *v150;
  int16x8_t v151;
  char v152;
  uint64_t v153;
  uint16x8_t v154;
  int8x16_t v155;
  uint64_t v156;
  int16x8_t v157;
  int16x8_t v158;
  char v159;
  unsigned int v160;
  unint64_t v161;
  unsigned int v162;
  int8x16_t v164;
  int8x16_t v165;
  int8x16_t v166;
  uint8x16_t *v167;
  int8x16_t v168;
  int8x16_t v169;
  int8x16_t v170;
  int8x16_t v171;
  int8x16_t v172;
  int8x16_t v173;
  int8x16_t v174;
  int8x16_t v175;
  int16x8_t v176;
  int16x8_t v177;
  int16x8_t v178;
  int16x8_t v179;
  int16x8_t v180;
  int16x8_t v181;
  int16x8_t v182;
  int16x8_t v183;
  int16x8_t v184;
  int16x8_t v185;
  int16x8_t v186;
  int8x16_t v187;
  int8x16_t v188;
  unint64_t v189;
  unsigned __int8 v190;
  int16x8_t v191;
  char *v192;
  uint64_t v193;
  int v194;
  uint64_t v195;
  int8x16_t v196;
  uint64_t v197;
  int8x16_t v198;
  int8x16_t v199;
  int16x8_t v200;
  int16x8_t v201;
  int16x8_t v202;
  int16x8_t v203;
  int16x8_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  BOOL v213;
  BOOL v214;
  BOOL v215;
  BOOL v216;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  __int128 v237;
  __int128 v238;
  _WORD v239[8];
  _WORD v240[8];
  int16x8_t v241;
  int16x8_t v242;
  int16x8_t v243;
  int16x8_t v244;
  int16x8_t v245;
  int16x8_t v246;
  int16x8_t v247;
  int16x8_t v248;
  uint64_t v249;

  v249 = *MEMORY[0x24BDAC8D0];
  v8 = *(_DWORD *)(a1 + 12);
  v9 = a5 + v8 * a6;
  v10 = *(unsigned __int16 *)(*(_QWORD *)(a1 + 72) + 2 * v9);
  if ((v10 & 0xC000) != 0)
    return 4294958327;
  v11 = *(_QWORD *)(a1 + 120);
  v12 = *(_QWORD *)(a1 + 128);
  v13 = *(unsigned __int8 *)(v11 + v9);
  v14 = v9 - (a5 != 0);
  v15 = a5 + v8 * (a6 - (a6 != 0));
  v16 = ((_DWORD)v13 + 1 + *(unsigned __int8 *)(v11 + v14)) >> 1;
  v17 = *(unsigned __int8 *)(v12 + v9);
  v18 = ((_DWORD)v13 + 1 + *(unsigned __int8 *)(v11 + v15)) >> 1;
  v19 = ((_DWORD)v17 + 1 + *(unsigned __int8 *)(v12 + v14)) >> 1;
  v20 = ((_DWORD)v17 + 1 + *(unsigned __int8 *)(v12 + v15)) >> 1;
  v21 = ((_DWORD)v13 << 12) | (v16 << 6) | (v10 << 18) | v18;
  v22 = ((_DWORD)v17 << 12) | (v19 << 6) | (v10 << 18) | v20;
  if (*(_DWORD *)(a8 + 128) == v21 && *(_DWORD *)(a8 + 132) == v22)
    goto LABEL_4;
  *(_DWORD *)(a8 + 128) = v21;
  *(_DWORD *)(a8 + 132) = v22;
  v205 = *(_QWORD *)(a1 + 48) + 12 * v10;
  v206 = *(char *)(v205 + 10);
  v207 = v206 + v13;
  v208 = v206 + v16;
  v209 = v206 + v18;
  v210 = v206 + v17;
  v211 = v206 + v19;
  v212 = v206 + v20;
  v213 = (int)v207 < -12 || (int)v208 < -12;
  v214 = v213 || (int)v209 < -12;
  v215 = v214 || (int)v210 < -12;
  v216 = v215 || (int)v211 < -12;
  if (v216 || (int)v212 < -12)
    return 4294958327;
  result = 4294958327;
  if ((int)v207 > 63)
    return result;
  if ((int)v208 > 63)
    return result;
  if ((int)v209 > 63)
    return result;
  if ((int)v210 > 63)
    return result;
  if ((int)v211 > 63)
    return result;
  if ((int)v212 > 63)
    return result;
  v218 = *(char *)(v205 + 11);
  v219 = v218 + v13;
  if ((int)v218 + (int)v13 < -12)
    return result;
  v220 = v218 + v16;
  if ((int)v220 < -12)
    return result;
  v221 = v218 + v18;
  if ((int)v221 < -12)
    return result;
  v222 = v218 + v17;
  if ((int)v222 < -12)
    return result;
  v223 = v218 + v19;
  if ((int)v223 < -12)
    return result;
  v224 = v218 + v20;
  if ((int)v224 < -12
    || (int)v219 > 63
    || (int)v220 > 63
    || (int)v221 > 63
    || (int)v222 > 63
    || (int)v223 > 63
    || (int)v224 > 63)
  {
    return result;
  }
  v225 = byte_2160F74A0[v207];
  v226 = byte_2160F74A0[v208];
  v227 = byte_2160F74A0[v209];
  v228 = byte_2160F74A0[v210];
  v229 = byte_2160F74A0[v211];
  v230 = byte_2160F74A0[v212];
  v231 = byte_2160F29C0[v227];
  v232 = byte_2160F2A00[byte_2160F74A0[v221]];
  v233 = byte_2160F29C0[v230];
  v234 = byte_2160F2A00[byte_2160F74A0[v224]];
  v235 = byte_2160F29C0[v225] | (byte_2160F29C0[v228] << 8);
  v236 = byte_2160F2A00[byte_2160F74A0[v219]] | (byte_2160F2A00[byte_2160F74A0[v222]] << 8);
  LODWORD(v237) = v225;
  DWORD1(v237) = v235 | (v235 << 16);
  *((_QWORD *)&v237 + 1) = __PAIR64__(v228, v236 | (v236 << 16));
  LODWORD(v225) = byte_2160F2A00[byte_2160F74A0[v220]] | (byte_2160F2A00[byte_2160F74A0[v223]] << 8);
  LODWORD(v238) = v226;
  DWORD1(v238) = byte_2160F29C0[v226] | (byte_2160F29C0[v229] << 8) | ((byte_2160F29C0[v226] | (byte_2160F29C0[v229] << 8)) << 16);
  DWORD2(v238) = v225 | ((_DWORD)v225 << 16);
  HIDWORD(v238) = v229;
  *(_OWORD *)a8 = v238;
  *(_OWORD *)(a8 + 16) = v237;
  LODWORD(v238) = v227;
  DWORD1(v238) = v231 | (v233 << 8) | ((v231 | (v233 << 8)) << 16);
  DWORD2(v238) = v232 | (v234 << 8) | ((v232 | (v234 << 8)) << 16);
  HIDWORD(v238) = v230;
  *(_OWORD *)(a8 + 32) = v237;
  *(_OWORD *)(a8 + 48) = v237;
  *(_OWORD *)(a8 + 64) = v238;
  *(_OWORD *)(a8 + 80) = v237;
  *(_OWORD *)(a8 + 96) = v237;
  *(_OWORD *)(a8 + 112) = v237;
LABEL_4:
  v23 = *a7;
  v24.i64[0] = 0x1F1F1F1F1F1F1F1FLL;
  v24.i64[1] = 0x1F1F1F1F1F1F1F1FLL;
  if (a7->u8[0] <= 0x3Fu)
  {
    v25 = vandq_s8(vorrq_s8(vceqzq_s8(v23), vcgtq_s8(v23, v24)), (int8x16_t)xmmword_2160F2980);
    v26 = vpaddq_s8(v25, v25);
    v27 = vpaddq_s8(v26, v26);
    if (vpaddq_s8(v27, v27).u16[0] != 0xFFFF)
    {
      v28 = *a7;
      v29 = 2 * a4;
      v30 = a4;
      v31 = 3 * a4;
      v32 = *(int16x8_t *)((char *)a2 + a4);
      v33 = *(int16x8_t *)((char *)a2 + (v30 * 2));
      v34 = *(int16x8_t *)((char *)a2 + v31);
      v35 = *(int16x8_t *)((char *)a2 + v29 * 2 + a4);
      v36 = *(int16x8_t *)((char *)a2 + v29 * 2 + (v30 * 2));
      v37 = *(int16x8_t *)((char *)a2 + v29 * 2);
      v38 = vzip1q_s16(*a2, v37);
      v39 = vzip2q_s16(*a2, v37);
      v40 = vzip1q_s16(v32, v35);
      v41 = *(int16x8_t *)((char *)a2 + v29 * 2 + v31);
      v42 = vzip2q_s16(v32, v35);
      v43 = vzip1q_s16(v33, v36);
      v44 = vzip2q_s16(v33, v36);
      v45 = vzip1q_s16(v34, v41);
      v46 = vzip2q_s16(v34, v41);
      v47 = (int16x4x2_t)vzip1q_s16(v38, v43);
      v48 = &v241;
      v49 = (int16x4x2_t)vzip2q_s16(v38, v43);
      v50 = (int16x4x2_t)vzip1q_s16(v39, v44);
      v51 = (int16x4x2_t)vzip2q_s16(v39, v44);
      v52 = vzip1q_s16(v40, v45);
      v53 = vzip2q_s16(v40, v45);
      v54 = vzip1q_s16(v42, v46);
      vst2_s16(v48->i16, v47);
      v55 = &v243;
      vst2_s16(v55->i16, v49);
      v56 = vzip2q_s16(v42, v46);
      v57 = &v245;
      v242 = vzip2q_s16((int16x8_t)v47, v52);
      v244 = vzip2q_s16((int16x8_t)v49, v53);
      vst2_s16(v57->i16, v50);
      v58 = &v247;
      vst2_s16(v58->i16, v51);
      v246 = vzip2q_s16((int16x8_t)v50, v54);
      v248 = vzip2q_s16((int16x8_t)v51, v56);
      if (v23.u8[0] <= 0x1Fu)
      {
        v59 = (int16x8_t *)&a3[v29 - 8];
        v60 = (int16x4x2_t)vzip2q_s16(vzip2q_s16(*((int16x8_t *)a3 - 1), *v59), vzip2q_s16(*(int16x8_t *)&a3[v30 - 8], *(int16x8_t *)((char *)v59 + v30 * 2)));
        v61 = vzip2q_s16(vzip2q_s16(*(int16x8_t *)((char *)a3 + a4 - 16), *(int16x8_t *)((char *)v59 + a4)), vzip2q_s16(*(int16x8_t *)((char *)a3 + v31 - 16), *(int16x8_t *)((char *)v59 + v31)));
        v62 = v239;
        vst2_s16(v62, v60);
        v62 += 8;
        *(int16x8_t *)v62 = vzip2q_s16((int16x8_t)v60, v61);
      }
      v63 = 0;
      v64 = 1;
      v65.i64[0] = 0x2000200020002;
      v65.i64[1] = 0x2000200020002;
      v66.i64[0] = 0x1000100010001;
      v66.i64[1] = 0x1000100010001;
      v67.i64[0] = 0x101010101010101;
      v67.i64[1] = 0x101010101010101;
      v68.i64[0] = 0x4000400040004;
      v68.i64[1] = 0x4000400040004;
      v69.i64[0] = 0x2000200020002;
      v69.i64[1] = 0x2000200020002;
      v70 = (int8x16_t *)a8;
      v71 = a7;
      do
      {
        v72 = v64;
        v73 = v71->u8[0];
        v75 = v71->i32[0];
        v71 = (int8x16_t *)((char *)v71 + 8);
        v74 = v75;
        if (v73 <= 0x1F && (_DWORD)v74 != 0)
        {
          v77 = *v70;
          v78 = vqtbl1q_s8(*v70, (int8x16_t)xmmword_2160F18A0);
          v79 = vqtbl1q_s8(*v70, (int8x16_t)xmmword_2160F29B0);
          v80 = (int8x16_t *)&v241.i8[v63 * 2];
          v81 = *(int8x16_t *)&v239[v63];
          v83 = *(int8x16_t *)&v240[v63];
          v82 = *(int8x16_t *)((char *)&v241 + v63 * 2);
          v84 = *(int8x16_t *)((char *)&v241 + v63 * 2 + 16);
          v85 = vbicq_s8(vbicq_s8(vmvnq_s8(vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v83, (uint8x16_t)v81), (uint8x16_t)v79), v79)), vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v83, (uint8x16_t)v82), (uint8x16_t)v78), v78)), vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v82, (uint8x16_t)v84), (uint8x16_t)v79), v79));
          v86 = vbicq_s8((int8x16_t)xmmword_2160F2980, v85);
          v87 = vpaddq_s8(v86, v86);
          v88 = vpaddq_s8(v87, v87);
          if (vpaddq_s8(v88, v88).u16[0] != 0xFFFF)
          {
            v89 = (int16x8_t)vzip2q_s8(v83, (int8x16_t)0);
            v90 = (int16x8_t)vzip1q_s8(v83, (int8x16_t)0);
            v91 = (int16x8_t)vzip2q_s8(v81, (int8x16_t)0);
            v92 = (int16x8_t)vzip1q_s8(v81, (int8x16_t)0);
            v93 = (int16x8_t)vzip2q_s8(v84, (int8x16_t)0);
            v94 = (int16x8_t)vzip1q_s8(v84, (int8x16_t)0);
            v95 = (int16x8_t)vzip2q_s8(v82, (int8x16_t)0);
            v96 = (int16x8_t)vzip1q_s8(v82, (int8x16_t)0);
            if (v73 == 4)
            {
              v97 = vaddq_s16(vaddq_s16(v93, v91), v65);
              v98 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v97, vaddq_s16(v91, v89)), v66);
              v99 = vaddq_s16(vaddq_s16(v94, v92), v65);
              v100 = vorrq_s8(vandq_s8(vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v99, vaddq_s16(v92, v90)), v66)), v98), v85), vbicq_s8(v83, v85));
              v101 = vorrq_s8(vandq_s8(vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v99, vaddq_s16(v96, v94)), v66)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v97, vaddq_s16(v95, v93)), v66)), v85), vbicq_s8(v82, v85));
            }
            else
            {
              v102 = v74 >> 24;
              v103 = BYTE2(v74);
              v104 = (int16x8_t)vzip1q_s8(v23, v23);
              v105 = (char *)&byte_2160F2A40[4 * v77.u32[0]];
              v106 = v74;
              v107 = v105[v74];
              v108 = BYTE1(v74);
              v109 = vceqzq_s8((int8x16_t)vzip1q_s16(v104, v104));
              v110 = v103;
              v111 = vbicq_s8(v85, v109);
              v77.i32[0] = v107 | (v105[v108] << 8) | (v105[v110] << 16) | (v105[v102] << 24);
              v109.i32[0] = byte_2160F2A40[4 * v77.u32[3] + v106] | (byte_2160F2A40[4 * v77.u32[3] + v108] << 8) | (byte_2160F2A40[4 * v77.u32[3] + v110] << 16) | (byte_2160F2A40[4 * v77.u32[3] + v102] << 24);
              v112 = vaddq_s8(vzip1q_s8(vzip1q_s8(v77, v77), vzip1q_s8(v109, v109)), v67);
              v113 = vshlq_s16(vaddq_s16(vaddq_s16(vsubq_s16(v92, v94), v68), vshlq_n_s16(vsubq_s16(v96, v90), 2uLL)), v69);
              v114 = (int16x8_t)vzip2q_s8(v112, (int8x16_t)0);
              v115 = vminq_s16(vmaxq_s16(vshlq_s16(vaddq_s16(vaddq_s16(vsubq_s16(v91, v93), v68), vshlq_n_s16(vsubq_s16(v95, v89), 2uLL)), v69), vnegq_s16(v114)), v114);
              v116 = (int16x8_t)vzip1q_s8(v112, (int8x16_t)0);
              v117 = vminq_s16(vmaxq_s16(v113, vnegq_s16(v116)), v116);
              v100 = vbslq_s8(v111, vqmovun_high_s16(vqmovun_s16(vaddq_s16(v117, v90)), vaddq_s16(v115, v89)), v83);
              v101 = vbslq_s8(v111, vqmovun_high_s16(vqmovun_s16(vsubq_s16(v96, v117)), vsubq_s16(v95, v115)), v82);
            }
            v80[-1] = v100;
            *v80 = v101;
          }
        }
        v64 = 0;
        v23 = vextq_s8(v23, (int8x16_t)0, 8uLL);
        ++v70;
        v63 = 32;
      }
      while ((v72 & 1) != 0);
      v118 = vzip1q_s16(v241, v245);
      v119 = vzip2q_s16(v241, v245);
      v120 = vzip1q_s16(v242, v246);
      v121 = vzip2q_s16(v242, v246);
      v122 = vzip1q_s16(v243, v247);
      v123 = vzip2q_s16(v243, v247);
      v124 = vzip1q_s16(v244, v248);
      v125 = vzip2q_s16(v244, v248);
      v126 = (int16x4x2_t)vzip1q_s16(v118, v122);
      v127 = (int16x4x2_t)vzip2q_s16(v118, v122);
      v128 = (int16x4x2_t)vzip1q_s16(v119, v123);
      v129 = (int16x4x2_t)vzip2q_s16(v119, v123);
      v130 = vzip1q_s16(v120, v124);
      v131 = vzip2q_s16(v120, v124);
      v132 = vzip1q_s16(v121, v125);
      v133 = vzip2q_s16(v121, v125);
      vst2_s16(a3, v126);
      v135 = (int16x8_t *)((char *)a3 + v31);
      *(int16x8_t *)((char *)a3 + a4) = vzip2q_s16((int16x8_t)v126, v130);
      v136 = &a3[v30];
      vst2_s16(v136, v127);
      *v135 = vzip2q_s16((int16x8_t)v127, v131);
      v137 = &a3[v29];
      vst2_s16(v137, v128);
      v138 = (int16x8_t *)((char *)v137 + v31);
      *(int16x8_t *)((char *)&a3[v29] + a4) = vzip2q_s16((int16x8_t)v128, v132);
      v139 = &a3[v29 + v30];
      vst2_s16(v139, v129);
      *v138 = vzip2q_s16((int16x8_t)v129, v133);
      if (v28 <= 0x1Fu)
      {
        *(a3 - 1) = v240[0];
        v140 = a3 - 1;
        *(__int16 *)((char *)v140 + a4) = v240[1];
        v140[v30] = v240[2];
        *(__int16 *)((char *)v140 + v31) = v240[3];
        v140[v29] = v240[4];
        *(__int16 *)((char *)a3 + 5 * a4 - 2) = v240[5];
        a3[3 * a4 - 1] = v240[6];
        *(__int16 *)((char *)a3 + 7 * a4 - 2) = v240[7];
      }
    }
  }
  result = 0;
  v142 = a7[1];
  if (v142.u8[0] <= 0x3Fu)
  {
    v143 = vandq_s8(vorrq_s8(vceqzq_s8(v142), vcgtq_s8(v142, v24)), (int8x16_t)xmmword_2160F2980);
    v144 = vpaddq_s8(v143, v143);
    v145 = vpaddq_s8(v144, v144);
    if (vpaddq_s8(v145, v145).u16[0] != 0xFFFF)
    {
      v146 = 0;
      v147 = 4 * a4;
      v148 = -(uint64_t)(2 * a4);
      v149 = (int8x16_t *)(a8 + 64);
      v150 = a7 + 1;
      v151.i64[0] = 0x2000200020002;
      v151.i64[1] = 0x2000200020002;
      v152 = 1;
      v153 = a4;
      v154.i64[0] = 0x1000100010001;
      v154.i64[1] = 0x1000100010001;
      v155.i64[0] = 0x101010101010101;
      v155.i64[1] = 0x101010101010101;
      v156 = -(uint64_t)a4;
      v157.i64[0] = 0x4000400040004;
      v157.i64[1] = 0x4000400040004;
      v158.i64[0] = 0x2000200020002;
      v158.i64[1] = 0x2000200020002;
      do
      {
        v159 = v152;
        v160 = v150->u8[0];
        v162 = v150->i32[0];
        v150 = (int8x16_t *)((char *)v150 + 8);
        v161 = v162;
        if (v160 <= 0x1F && (_DWORD)v161 != 0)
        {
          v164 = *v149;
          v165 = vqtbl1q_s8(*v149, (int8x16_t)xmmword_2160F18A0);
          v166 = vqtbl1q_s8(*v149, (int8x16_t)xmmword_2160F29B0);
          v167 = (uint8x16_t *)((char *)a3 + v146 * v147);
          v168 = *(int8x16_t *)((char *)v167 + v148);
          v169 = *(int8x16_t *)((char *)v167 + v156);
          v170 = *(int8x16_t *)v167;
          v171 = *(int8x16_t *)((char *)v167 + v153);
          v172 = vbicq_s8(vbicq_s8(vmvnq_s8(vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v169, (uint8x16_t)v168), (uint8x16_t)v166), v166)), vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v169, *v167), (uint8x16_t)v165), v165)), vceqq_s8((int8x16_t)vminq_u8(vabdq_u8(*v167, (uint8x16_t)v171), (uint8x16_t)v166), v166));
          v173 = vbicq_s8((int8x16_t)xmmword_2160F2980, v172);
          v174 = vpaddq_s8(v173, v173);
          v175 = vpaddq_s8(v174, v174);
          if (vpaddq_s8(v175, v175).u16[0] != 0xFFFF)
          {
            v176 = (int16x8_t)vzip2q_s8(v169, (int8x16_t)0);
            v177 = (int16x8_t)vzip1q_s8(v169, (int8x16_t)0);
            v178 = (int16x8_t)vzip2q_s8(v168, (int8x16_t)0);
            v179 = (int16x8_t)vzip1q_s8(v168, (int8x16_t)0);
            v180 = (int16x8_t)vzip2q_s8(v171, (int8x16_t)0);
            v181 = (int16x8_t)vzip1q_s8(v171, (int8x16_t)0);
            v182 = (int16x8_t)vzip2q_s8(v170, (int8x16_t)0);
            v183 = (int16x8_t)vzip1q_s8(v170, (int8x16_t)0);
            if (v160 == 4)
            {
              v184 = vaddq_s16(vaddq_s16(v180, v178), v151);
              v185 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v184, vaddq_s16(v178, v176)), v154);
              v186 = vaddq_s16(vaddq_s16(v181, v179), v151);
              v187 = vorrq_s8(vandq_s8(vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v186, vaddq_s16(v179, v177)), v154)), v185), v172), vbicq_s8(v169, v172));
              v188 = vorrq_s8(vandq_s8(vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v186, vaddq_s16(v183, v181)), v154)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v184, vaddq_s16(v182, v180)), v154)), v172), vbicq_s8(v170, v172));
            }
            else
            {
              v189 = v161 >> 24;
              v190 = BYTE2(v161);
              v191 = (int16x8_t)vzip1q_s8(v142, v142);
              v192 = (char *)&byte_2160F2A40[4 * v164.u32[0]];
              v193 = v161;
              v194 = v192[v161];
              v195 = BYTE1(v161);
              v196 = vceqzq_s8((int8x16_t)vzip1q_s16(v191, v191));
              v197 = v190;
              v198 = vbicq_s8(v172, v196);
              v164.i32[0] = v194 | (v192[v195] << 8) | (v192[v197] << 16) | (v192[v189] << 24);
              v196.i32[0] = byte_2160F2A40[4 * v164.u32[3] + v193] | (byte_2160F2A40[4 * v164.u32[3] + v195] << 8) | (byte_2160F2A40[4 * v164.u32[3] + v197] << 16) | (byte_2160F2A40[4 * v164.u32[3] + v189] << 24);
              v199 = vaddq_s8(vzip1q_s8(vzip1q_s8(v164, v164), vzip1q_s8(v196, v196)), v155);
              v200 = vshlq_s16(vaddq_s16(vaddq_s16(vsubq_s16(v179, v181), v157), vshlq_n_s16(vsubq_s16(v183, v177), 2uLL)), v158);
              v201 = (int16x8_t)vzip2q_s8(v199, (int8x16_t)0);
              v202 = vminq_s16(vmaxq_s16(vshlq_s16(vaddq_s16(vaddq_s16(vsubq_s16(v178, v180), v157), vshlq_n_s16(vsubq_s16(v182, v176), 2uLL)), v158), vnegq_s16(v201)), v201);
              v203 = (int16x8_t)vzip1q_s8(v199, (int8x16_t)0);
              v204 = vminq_s16(vmaxq_s16(v200, vnegq_s16(v203)), v203);
              v187 = vbslq_s8(v198, vqmovun_high_s16(vqmovun_s16(vaddq_s16(v204, v177)), vaddq_s16(v202, v176)), v169);
              v188 = vbslq_s8(v198, vqmovun_high_s16(vqmovun_s16(vsubq_s16(v183, v204)), vsubq_s16(v182, v202)), v170);
            }
            *(int8x16_t *)((char *)v167 + v156) = v187;
            *v167 = (uint8x16_t)v188;
          }
        }
        v152 = 0;
        v142 = vextq_s8(v142, (int8x16_t)0, 8uLL);
        ++v149;
        v146 = 1;
      }
      while ((v159 & 1) != 0);
      return 0;
    }
  }
  return result;
}

uint64_t sub_21609B1DC(uint64_t a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  int v17;
  uint64_t v18;
  void *v19;
  int v20;
  int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  int8x16_t *v25;
  int v26;
  int v27;
  uint64_t result;
  int v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  unsigned int v57;
  char v58[128];
  int v59;
  int8x16_t v60[20];
  uint64_t v61;

  v61 = *MEMORY[0x24BDAC8D0];
  v6 = *(_QWORD *)(a1 + 80);
  v7 = *(_DWORD *)(v6 + 100) + 15;
  v8 = *(unsigned int *)(v6 + 136);
  v9 = *(unsigned int *)(v6 + 152);
  v10 = *(_QWORD *)(v6 + 32);
  v11 = *(_QWORD *)(v6 + 40);
  v12 = *(_QWORD *)(a1 + 176);
  v54 = *(unsigned int *)(a1 + 184);
  v13 = *(_QWORD *)(a1 + 96);
  v14 = *(unsigned int *)(a1 + 104);
  v15 = 16 * a4 - 4;
  if (!a4)
    v15 = 0;
  if (*(_BYTE *)v6 && *(_BYTE *)(v6 + 3))
  {
    v16 = (v7 & 0xFFFFFFF0) + ~(2 * *(_DWORD *)(a1 + 208));
    v17 = *(unsigned __int8 *)(v6 + 5);
    v18 = v11 + v9;
    if (v17)
      v10 += v8;
    LODWORD(v8) = 2 * v8;
    LODWORD(v9) = 2 * v9;
    if (v17)
    {
      v11 = v18;
      v12 += v54;
      v13 += v14;
    }
    LODWORD(v54) = 2 * v54;
    LODWORD(v14) = 2 * v14;
  }
  else
  {
    v16 = (v7 & 0xFFFFFFF0) + (2 * *(_DWORD *)(a1 + 212) - 4) * *(_DWORD *)(a1 + 208) - 1;
  }
  v19 = sub_215FCE6A4;
  if (!*(_DWORD *)(a1 + 268))
    v19 = sub_215FCE90C;
  *(_QWORD *)(a1 + 248) = v19;
  *(_QWORD *)(a1 + 256) = sub_215FCE9DC;
  v59 = -1;
  if (a4 >= a5)
    return 0;
  v49 = v14;
  v42 = 16 * v8;
  v20 = v16 - v15;
  v52 = (v7 >> 4) - 1;
  if (v7 >> 4 == 1)
    v21 = 8;
  else
    v21 = 6;
  v53 = v20;
  if (v21 >= v20)
    v21 = v20;
  v51 = 2 * v21;
  if (a2)
    v22 = a2 - 1;
  else
    v22 = 0;
  v23 = 16 * v22;
  v43 = v11;
  v44 = v10;
  v48 = v10 + v23;
  v47 = v11 + v23;
  v46 = v12 + v23;
  v45 = v13 + v23;
  v24 = a4;
  v50 = a5;
  v57 = v8;
  while (a3 <= a2)
  {
LABEL_28:
    if (v24 == v52)
      v29 = 9;
    else
      v29 = 7;
    if (v29 >= v53)
      v29 = v53;
    v30 = 2 * v29 + 2;
    if (v24)
      v31 = v30;
    else
      v31 = v51;
    if (v31 >= 1)
    {
      v32 = 16 * v24 - 4;
      v33 = (v32 * v8);
      v34 = v47;
      v35 = v48 + v33;
      v36 = 8 * v24 - 2;
      v37 = v47 + (v36 * v9);
      v38 = v46 + (v32 * v54);
      v39 = v45 + (v36 * v49);
      if (v24)
        v40 = v35;
      else
        v40 = v48;
      if (v24)
      {
        v34 = v37;
        v41 = v39;
      }
      else
      {
        v38 = v46;
        v41 = v45;
      }
      if (*(_DWORD *)(a1 + 88) == 875704438)
        sub_215FCEC48(v40, v34, 16 * (a3 - a2), 0, v31, v57, v9, v38, v41, v54, v49);
      else
        (*(void (**)(uint64_t))(a1 + 248))(v40);
      LODWORD(v8) = v57;
    }
    if (++v24 == v50)
      return 0;
  }
  v25 = (int8x16_t *)(*(_QWORD *)(a1 + 152) + 48 * (a2 + *(_DWORD *)(a1 + 12) * (_DWORD)v24));
  v26 = a2;
  v27 = 16 * a2;
  while (1)
  {
    if ((v25[1].i8[0] & 0xC0) + v25->u8[0] <= 0x7F)
    {
      sub_216099434(a1, (int8x16_t *)(v44 + (v42 * v24) + (v27 & 0xFFFFFFF0)), (int64x2_t *)(v44 + (v42 * v24) + (v27 & 0xFFFFFFF0)), v26, v24, v57, v25, v60);
      result = sub_21609A73C(a1, (int16x8_t *)(v43 + (8 * v9 * v24) + (v27 & 0xFFFFFFF0)), (__int16 *)(v43 + (8 * v9 * v24) + (v27 & 0xFFFFFFF0)), v9, v26, v24, v25, (uint64_t)v58);
      LODWORD(v8) = v57;
      if ((_DWORD)result)
        return result;
    }
    v25 += 3;
    v27 += 16;
    if (a3 == ++v26)
      goto LABEL_28;
  }
}

uint64_t sub_21609B5F4(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, unsigned int a5, unsigned int a6, unsigned int a7, unsigned int a8, unsigned int a9, uint64_t a10, int a11, int a12)
{
  _BYTE *v13;
  int v14;
  int v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t v26;
  int v27;
  int v28;
  int v29;
  unsigned int v30;
  uint64_t v31;
  unsigned int v32;
  int v33;
  _BOOL4 v34;
  _BOOL4 v35;
  uint64_t v36;
  unsigned int v37;
  int v38;
  uint64_t v39;
  unsigned __int8 *v40;
  int v41;
  int v42;
  int v43;
  _BOOL8 v44;
  int v45;
  unsigned int v46;
  uint64_t v47;
  int v48;
  _BOOL4 v49;
  _BOOL4 v50;
  unsigned __int8 *v51;
  uint64_t v52;
  unsigned int v53;
  int v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  int v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  unsigned int v71;
  uint64_t v72;
  int v73;
  int v74;
  unsigned int v75;
  uint64_t v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int v87;
  char *v88;
  int8x16_t v89;
  int8x16_t v90;
  int8x16_t v91;
  char *v92;
  uint64_t v93;
  unsigned int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int v104;
  char *v105;
  int8x16_t v106;
  int8x16_t v107;
  int8x16_t v108;
  char *v109;
  uint64_t v110;
  unsigned int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unsigned int v121;
  char *v122;
  int8x16_t v123;
  int8x16_t v124;
  int8x16_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  int v134;
  uint64_t v135;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int v146;
  uint64_t v147;
  int v148;
  uint64_t v149;
  int v150;
  int v151;

  v138 = a2;
  v139 = a4;
  v13 = *(_BYTE **)(a1 + 80);
  v148 = 16 * a8;
  if (a8)
    v14 = 16 * a8 - 4;
  else
    v14 = 0;
  if (*v13 && v13[3])
  {
    v151 = ~(2 * *(_DWORD *)(a1 + 208)) + 16 * a12;
    v15 = v13[5];
    v16 = v15 == 0;
    if (v15)
      v17 = a5;
    else
      v17 = 0;
    v18 = a4 + v17;
    if (v16)
      v19 = 0;
    else
      v19 = a11;
    v131 = a10 + v19;
    if (v16)
      v20 = 0;
    else
      v20 = a3;
    v138 = a2 + v20;
    v139 = v18;
    a3 *= 2;
    a5 *= 2;
    v134 = 2 * a11;
  }
  else
  {
    v131 = a10;
    v134 = a11;
    v151 = (2 * *(_DWORD *)(a1 + 212) - 4) * *(_DWORD *)(a1 + 208) + 16 * a12 - 1;
  }
  v21 = a9;
  v22 = 2 * a3;
  v144 = 2 * a5;
  v150 = a7 - a6;
  if (a7 > a6)
  {
    v146 = 8 * a8;
    v23 = a6;
    v140 = a7;
    v24 = a3;
    v25 = a5;
    v142 = a8;
    while (a8 >= v21)
    {
LABEL_59:
      ++v23;
      a8 = v142;
      if (v23 == v140)
        goto LABEL_60;
    }
    v26 = (16 * v23);
    v27 = v148;
    v28 = v142;
    while (1)
    {
      v29 = *(_DWORD *)(a1 + 12);
      v30 = v23 + v29 * v28;
      v31 = *(_QWORD *)(a1 + 144);
      v32 = v28 && *(_BYTE *)(v31 + v30) == 1 && *(unsigned __int8 *)(v31 + v30 - v29) == 2;
      v33 = *(unsigned __int8 *)(v31 + v30);
      if (!v23)
        goto LABEL_29;
      if (v33 == 2)
      {
        v35 = 0;
        v34 = *(unsigned __int8 *)(v31 + v30 - 1) == 1;
        goto LABEL_31;
      }
      if (v33 == 1)
      {
        v34 = 0;
        v35 = *(unsigned __int8 *)(v31 + v30 - 1) == 2;
      }
      else
      {
LABEL_29:
        v35 = 0;
        v34 = 0;
      }
LABEL_31:
      if (v33 == 2)
      {
        v36 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 32)
            + v26
            + (*(_DWORD *)(*(_QWORD *)(a1 + 80) + 136) * v148);
        v37 = (v28 << 31 >> 31) & a3;
        v38 = v22;
      }
      else
      {
        v39 = *(_QWORD *)(a1 + 80);
        v36 = *(_QWORD *)(v39 + 32) + v26;
        v37 = v27 * *(_DWORD *)(v39 + 136);
        v38 = a3;
      }
      v40 = (unsigned __int8 *)(*(_QWORD *)(a1 + 152) + 48 * v30);
      if ((v40[16] & 0xC0) + *v40 <= 0x7F)
      {
        if (v34)
          v41 = 2;
        else
          v41 = 0;
        sub_2160E9F04((unsigned __int8 *)a1, v36 + v37, v36 + v37, v23, v28, v38, v40, v32, v41 | v35);
        v21 = a9;
        a5 = v25;
        a3 = v24;
      }
      ++v28;
      v27 += 16;
      if (v21 == v28)
      {
        v42 = v146;
        v43 = v142;
        while (1)
        {
          v44 = 0;
          v45 = *(_DWORD *)(a1 + 12);
          v46 = v23 + v45 * v43;
          v47 = *(_QWORD *)(a1 + 144);
          v48 = *(unsigned __int8 *)(v47 + v46);
          if (v43 && v48 == 1)
            v44 = *(unsigned __int8 *)(v47 + v46 - v45) == 2;
          if (!v23)
            break;
          if (v48 == 1)
          {
            v49 = 0;
            v50 = *(unsigned __int8 *)(v47 + v46 - 1) == 2;
          }
          else
          {
            if (v48 != 2)
              break;
            v50 = 0;
            v49 = *(unsigned __int8 *)(v47 + v46 - 1) == 1;
          }
LABEL_50:
          v51 = (unsigned __int8 *)(*(_QWORD *)(a1 + 152) + 48 * v46);
          if (v48 == 2)
          {
            v52 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 40)
                + v26
                + (v146 * *(_DWORD *)(*(_QWORD *)(a1 + 80) + 152));
            v53 = (v43 << 31 >> 31) & a5;
            v54 = v144;
          }
          else
          {
            v55 = *(_QWORD *)(a1 + 80);
            v52 = *(_QWORD *)(v55 + 40) + v26;
            v53 = v42 * *(_DWORD *)(v55 + 152);
            v54 = a5;
          }
          if ((v51[16] & 0xC0) + *v51 <= 0x7F)
          {
            if (v49)
              v56 = 2;
            else
              v56 = 0;
            sub_2160EAD54(a1, v52 + v53, v52 + v53, v23, v43, v54, v51, (unsigned __int8 *)v44, v56 | v50);
            v21 = a9;
            a5 = v25;
            a3 = v24;
          }
          ++v43;
          v42 += 8;
          if (v21 == v43)
            goto LABEL_59;
        }
        v50 = 0;
        v49 = 0;
        goto LABEL_50;
      }
    }
  }
LABEL_60:
  if (a8 < v21)
  {
    v57 = v131 + 32 * a6;
    v58 = v134;
    v59 = (a12 - 1);
    v60 = 16 * a6;
    v61 = 16 * a3;
    v62 = 4 * a3;
    v63 = 8 * a5;
    v149 = v134;
    if (a12 == 1)
      v64 = 8;
    else
      v64 = 6;
    v65 = a5;
    v130 = v57 + v134;
    v132 = v131 + 32 * a6;
    v66 = (v61 * v59);
    v67 = 2 * v134;
    v68 = v139 - v144;
    v69 = a5 * a8;
    v70 = v57 - 4 * v134;
    v71 = 8 * v69;
    v72 = a8;
    v147 = v138 + a3 - v62;
    v73 = a3 * a8;
    v74 = 16 * v134;
    v75 = 16 * v73;
    v143 = v70 + (16 * v134 * v59);
    v145 = v138 - v62;
    v76 = v68;
    v141 = v68 + (v63 * v59);
    v135 = v138 + v66 + a3 - v62;
    v137 = v143 + v58;
    v133 = v138 + v66 - v62;
    v129 = v138 + a3;
    do
    {
      if (!v72 || v72 == v59)
      {
        if (v72)
        {
          if (v72 == v59 && v14 <= v151)
          {
            v94 = 0;
            v95 = v133;
            v96 = v135;
            v97 = v141;
            v98 = v143;
            v99 = v137;
            do
            {
              if (v150 >= 1)
              {
                v100 = 0;
                v101 = v95;
                v102 = v96;
                v103 = v97;
                v104 = v150 + 1;
                do
                {
                  v105 = (char *)(v99 + v100);
                  v106 = *(int8x16_t *)(v101 + v60);
                  v107 = *(int8x16_t *)(v103 + v60);
                  v108 = *(int8x16_t *)(v102 + v60);
                  v109 = (char *)(v98 + v100);
                  v110 = *(_QWORD *)(v103 + v60);
                  vst2_s8(v109, *(int8x8x2_t *)((char *)&v106 - 8));
                  v109 += 16;
                  *(int8x16_t *)v109 = vzip2q_s8(v107, v106);
                  vst2_s8(v105, (int8x8x2_t)v107);
                  v105 += 16;
                  --v104;
                  v100 += 32;
                  *(int8x16_t *)v105 = vzip2q_s8(v107, v108);
                  v103 += 16;
                  v102 += 16;
                  v101 += 16;
                }
                while (v104 > 1);
              }
              v14 += 2;
              if (v94 > 8)
                break;
              v98 += v67;
              v99 += v67;
              ++v94;
              v97 += v65;
              v96 += v22;
              v95 += v22;
            }
            while (v14 <= v151);
          }
        }
        else if (v14 <= v151)
        {
          v111 = 0;
          v112 = v138;
          v113 = v139;
          v114 = v129;
          v115 = v130;
          v116 = v132;
          do
          {
            if (v150 >= 1)
            {
              v117 = 0;
              v118 = v112;
              v119 = v114;
              v120 = v113;
              v121 = v150 + 1;
              do
              {
                v122 = (char *)(v115 + v117);
                v123 = *(int8x16_t *)(v118 + v60);
                v124 = *(int8x16_t *)(v120 + v60);
                v125 = *(int8x16_t *)(v119 + v60);
                v126 = (char *)(v116 + v117);
                v127 = *(_QWORD *)(v120 + v60);
                vst2_s8(v126, *(int8x8x2_t *)((char *)&v123 - 8));
                v126 += 16;
                *(int8x16_t *)v126 = vzip2q_s8(v124, v123);
                vst2_s8(v122, (int8x8x2_t)v124);
                v122 += 16;
                --v121;
                v117 += 32;
                *(int8x16_t *)v122 = vzip2q_s8(v124, v125);
                v120 += 16;
                v119 += 16;
                v118 += 16;
              }
              while (v121 > 1);
            }
            ++v111;
            v14 += 2;
            if (v111 >= v64)
              break;
            v116 += v67;
            v115 += v67;
            v113 += v65;
            v114 += v22;
            v112 += v22;
          }
          while (v14 <= v151);
        }
      }
      else if (v14 <= v151)
      {
        v77 = 0;
        v78 = v76 + v71;
        v79 = v147 + v75;
        v80 = v145 + v75;
        v81 = v70 + (v74 * v72);
        v82 = v81 + v149;
        do
        {
          if (v150 >= 1)
          {
            v83 = 0;
            v84 = v80;
            v85 = v79;
            v86 = v78;
            v87 = v150 + 1;
            do
            {
              v88 = (char *)(v82 + v83);
              v89 = *(int8x16_t *)(v84 + v60);
              v90 = *(int8x16_t *)(v86 + v60);
              v91 = *(int8x16_t *)(v85 + v60);
              v92 = (char *)(v81 + v83);
              v93 = *(_QWORD *)(v86 + v60);
              vst2_s8(v92, *(int8x8x2_t *)((char *)&v89 - 8));
              v92 += 16;
              *(int8x16_t *)v92 = vzip2q_s8(v90, v89);
              vst2_s8(v88, (int8x8x2_t)v90);
              v88 += 16;
              --v87;
              v83 += 32;
              *(int8x16_t *)v88 = vzip2q_s8(v90, v91);
              v86 += 16;
              v85 += 16;
              v84 += 16;
            }
            while (v87 > 1);
          }
          v14 += 2;
          if (v77 > 6)
            break;
          v81 += v67;
          v82 += v67;
          ++v77;
          v78 += v65;
          v79 += v22;
          v80 += v22;
        }
        while (v14 <= v151);
      }
      ++v72;
      v71 += v63;
      v75 += v61;
    }
    while (v72 != a9);
  }
  return 0;
}

uint64_t sub_21609BD58(uint64_t a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, char a6, _DWORD *a7)
{
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  signed int v16;
  int v17;
  unsigned int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  void *v23;
  int v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  int8x16_t *v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  int64x2_t *v42;
  int16x8_t *v43;
  __int16 *v44;
  int16x8_t *v45;
  __int16 *v46;
  uint64_t result;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  unsigned int i;
  BOOL v52;
  unsigned int v53;
  int v54;
  int8x16_t *v55;
  unsigned int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int v69;
  int v70;
  int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int v80;
  unsigned int v81;
  uint64_t v82;
  int v84;
  uint64_t v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  int v91;
  uint64_t v92;
  int v93;
  signed int v94;
  unsigned int v95;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unsigned int v109;
  unsigned int v110;
  uint64_t v111;
  uint64_t v112;
  unsigned int v113;
  int v114;
  int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  uint64_t v120;
  uint64_t v121;
  unsigned int v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _BYTE v131[128];
  int v132;
  int8x16_t v133[20];
  uint64_t v134;

  v134 = *MEMORY[0x24BDAC8D0];
  v10 = *(_QWORD *)(a1 + 80);
  v11 = *(unsigned int *)(v10 + 136);
  v12 = *(_DWORD *)(v10 + 100) + 15;
  v13 = *(_QWORD *)(a1 + 232) + (4 * v11);
  v126 = *(_QWORD *)(v10 + 32);
  v120 = *(_QWORD *)(v10 + 40);
  v129 = *(unsigned int *)(v10 + 152);
  v14 = v13 + (16 * v11) + (unint64_t)(2 * v129);
  v15 = *(_QWORD *)(a1 + 176);
  v16 = *(_DWORD *)(a1 + 184);
  v17 = 16 * a4 - 4;
  if (!a4)
    v17 = 0;
  if (*(_BYTE *)v10 && *(_BYTE *)(v10 + 3))
  {
    v18 = (v12 & 0xFFFFFFF0) + ~(2 * *(_DWORD *)(a1 + 208));
    v19 = *(unsigned __int8 *)(v10 + 5);
    v20 = v126;
    v21 = v120;
    if (v19)
    {
      v15 += v16;
      v14 += v129;
      v21 = v120 + v129;
    }
    v120 = v21;
    if (v19)
    {
      v13 += v11;
      v20 = v126 + v11;
    }
    v126 = v20;
    v11 = (2 * v11);
    v16 *= 2;
    v129 = (2 * v129);
  }
  else
  {
    v18 = (v12 & 0xFFFFFFF0) + (2 * *(_DWORD *)(a1 + 212) - 4) * *(_DWORD *)(a1 + 208) - 1;
  }
  v22 = *(unsigned __int8 *)(a1 + 226);
  if (!(a4 | a2))
  {
    v23 = sub_215FCDDA4;
    if (!*(_BYTE *)(a1 + 226))
      v23 = sub_215FCE9DC;
    *(_QWORD *)(a1 + 256) = v23;
  }
  v24 = *(unsigned __int8 *)(a1 + 225);
  v132 = -1;
  if (a4 >= a5)
    return 0;
  v90 = v22;
  v25 = v11;
  v26 = v12 >> 4;
  if (a2)
    v27 = a2 - 1;
  else
    v27 = 0;
  v28 = 16 * v27;
  v29 = (4 * v11);
  v107 = v13 + v28;
  v106 = v13 + v28 - v29;
  v30 = (2 * v129);
  v105 = v14 + v28;
  v104 = v14 + v28 - v30;
  v31 = v18 - v17;
  if (v31 >= 7)
    v32 = 7;
  else
    v32 = v31;
  if (v31 >= 9)
    v33 = 9;
  else
    v33 = v31;
  v34 = v26 - 1;
  v88 = 2 * v32 + 2;
  v87 = 2 * v33 + 2;
  if (v26 == 1)
    v35 = 8;
  else
    v35 = 6;
  if (v35 < v31)
    v31 = v35;
  v89 = 2 * v31;
  v110 = 16 * (a3 - a2);
  v36 = 16 * a2;
  v115 = 16 * v11;
  v102 = v13 - v29 + v36;
  v101 = v102 + (16 * v11);
  v98 = v126 + v28;
  v97 = v120 + v28;
  v82 = v15;
  v112 = 32 * v27;
  v86 = 16 * v34 - 4;
  v108 = v15 + v112;
  v85 = v15 + v112 + v86 * v16;
  v37 = a4;
  v111 = a5;
  v103 = v34;
  v91 = 16 * a2;
  v92 = a2;
  v119 = 16 * v11 * a4;
  v117 = 16 * (a2 + v11 * a4);
  v84 = 8 * v34 - 2;
  v114 = 8 * v129;
  v99 = v14 - v30 + v36 + (8 * v129);
  v100 = v14 - v30 + v36;
  v127 = v14;
  v128 = a3;
  v118 = 8 * v129 * a4;
  v116 = v118 + 16 * a2;
  v94 = v16;
  v95 = a2;
  v122 = a3;
  v125 = v11;
  v121 = v13;
  v93 = v24;
  v113 = a3 - a2;
  v109 = a2 - a3;
  while (1)
  {
    v38 = (int8x16_t *)(*(_QWORD *)(a1 + 152) + 48 * (a2 + *(_DWORD *)(a1 + 12) * (_DWORD)v37));
    v130 = v37;
    if (!v24)
      break;
    if (a2 >= a3)
      goto LABEL_56;
    v124 = v126 + (v115 * v37);
    v123 = v120 + (v114 * v37);
    v40 = v91;
    v39 = v92;
    do
    {
      if (*(_DWORD *)(a1 + 264) >= (int)*(unsigned __int8 *)(*(_QWORD *)(a1 + 112)
                                                            + (v39 + *(_DWORD *)(a1 + 12) * v37)))
      {
        v48 = v40 & 0xFFFFFFF0;
        v49 = 17;
        v50 = v48;
        do
        {
          *(_OWORD *)(v13 + v50) = *(_OWORD *)(v126 + v119 + v50);
          v50 += v25;
          --v49;
        }
        while (v49 > 1);
        for (i = 9; i > 1; --i)
        {
          *(_OWORD *)(v14 + v48) = *(_OWORD *)(v120 + v118 + v48);
          v48 += v129;
        }
      }
      else
      {
        v41 = (16 * v39);
        v42 = (int64x2_t *)(v13 + v41);
        v43 = (int16x8_t *)(v123 + v41);
        v44 = (__int16 *)(v14 + v41);
        sub_216099434(a1, (int8x16_t *)(v124 + v41), v42, v39, v37, v125, v38, v133);
        v45 = v43;
        v13 = v121;
        v46 = v44;
        a3 = v122;
        result = sub_21609A73C(a1, v45, v46, v129, v39, v130, v38, (uint64_t)v131);
        v37 = v130;
        v14 = v127;
        if ((_DWORD)result)
          return result;
      }
      v38 += 3;
      ++v39;
      v40 += 16;
    }
    while (v39 != v128);
LABEL_55:
    v16 = v94;
    a2 = v95;
    v11 = v125;
    v24 = v93;
    if (v93)
    {
LABEL_56:
      v58 = v106;
      v59 = v107;
      v60 = v104;
      v61 = v105;
      if (!v37)
        goto LABEL_62;
      goto LABEL_60;
    }
LABEL_58:
    v61 = v97;
    v59 = v98;
    if (!v37)
    {
LABEL_62:
      v65 = 0;
      v63 = *(_QWORD *)(a1 + 96);
      v64 = v63 + v112;
      v60 = v61;
      v58 = v59;
      v66 = v89;
      v67 = v108;
      v62 = v113;
      goto LABEL_64;
    }
    v58 = v98 + ((16 * v37 - 4) * v11);
    v60 = v97 + ((8 * v37 - 2) * v129);
LABEL_60:
    v62 = v113;
    if (v37 == v103)
    {
      v63 = *(_QWORD *)(a1 + 96);
      v64 = v63 + v112 + (*(_DWORD *)(a1 + 104) * v84);
      v65 = v86;
      v66 = v87;
      v67 = v85;
    }
    else
    {
      v65 = 16 * v37 - 4;
      v67 = v108 + v65 * v16;
      v63 = *(_QWORD *)(a1 + 96);
      v64 = v63 + v112 + (*(_DWORD *)(a1 + 104) * (8 * v37 - 2));
      v66 = v88;
    }
LABEL_64:
    if (*(_QWORD *)(a1 + 240))
    {
      (*(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, signed int, _QWORD))(a1 + 256))(v58, v60, v110, 0, v66, v11, v129, v67, v16, *(_QWORD *)(a1 + 240));
      goto LABEL_66;
    }
    v70 = *(_DWORD *)(a1 + 88);
    if (!v90)
    {
      if (v70 == 875704438)
        sub_215FCEC48(v58, v60, v110, 0, v66, v11, v129, v67, v64, v16, *(_DWORD *)(a1 + 104));
      else
        sub_215FCE90C(v58, v60, v110, 0, v66, v11, v129, v67, v16);
LABEL_66:
      v14 = v127;
      v68 = v130;
      v69 = v109;
      if (v24)
        goto LABEL_78;
      goto LABEL_90;
    }
    if (v24)
    {
      if (v70 == 875704438)
        sub_215FCE134(v58, v60, v110, 0, v66, v11, v129, v67, v64, v16, *(_DWORD *)(a1 + 104), 0, a7);
      else
        sub_215FCDBEC(v58, v60, v110, 0, v66, v11, v129, v67, v16, 0, a7);
      v14 = v127;
      v68 = v130;
      v69 = v109;
LABEL_78:
      v72 = 4;
      v74 = v101;
      v73 = v102;
      do
      {
        if (v62)
        {
          v75 = 0;
          v76 = v69;
          do
          {
            *(_OWORD *)(v73 + v75) = *(_OWORD *)(v74 + v75);
            v75 += 16;
            v52 = __CFADD__(v76++, 1);
          }
          while (!v52);
        }
        v74 += v25;
        v73 += v25;
        v52 = v72-- != 0;
      }
      while (v72 != 0 && v52);
      v77 = 2;
      v79 = v99;
      v78 = v100;
      do
      {
        if (v62)
        {
          v80 = 0;
          v81 = v69;
          do
          {
            *(_OWORD *)(v78 + v80) = *(_OWORD *)(v79 + v80);
            v80 += 16;
            v52 = __CFADD__(v81++, 1);
          }
          while (!v52);
        }
        v79 += v129;
        v78 += v129;
        v52 = v77-- != 0;
      }
      while (v77 != 0 && v52);
      goto LABEL_90;
    }
    v71 = v65 + v66;
    if (v70 == 875704438)
      sub_215FCE134(v126, v120, v110, v65, v71, v11, v129, v82, v63, v16, *(_DWORD *)(a1 + 104), a6, a7);
    else
      sub_215FCDBEC(v126, v120, v110, v65, v71, v11, v129, v82, v16, a6, a7);
    v14 = v127;
    v68 = v130;
LABEL_90:
    v37 = v68 + 1;
    v119 += v115;
    v118 += v114;
    v117 += v115;
    v116 += v114;
    if (v37 == v111)
      return 0;
  }
  if (*(_BYTE *)(*(_QWORD *)(a1 + 80) + 3))
    v52 = a2 >= a3;
  else
    v52 = 1;
  if (v52)
    goto LABEL_58;
  v53 = v117;
  v54 = a2;
  do
  {
    if ((v38[1].i8[0] & 0xC0) + v38->u8[0] <= 0x7F)
    {
      sub_216099434(a1, (int8x16_t *)(v126 + v53), (int64x2_t *)(v126 + v53), v54, v37, v11, v38, v133);
      v37 = v130;
    }
    v38 += 3;
    ++v54;
    v53 += 16;
  }
  while (a3 != v54);
  v55 = (int8x16_t *)(*(_QWORD *)(a1 + 152) + 48 * (a2 + *(_DWORD *)(a1 + 12) * (_DWORD)v37));
  v56 = v116;
  v57 = a2;
  while (1)
  {
    if ((v55[1].i8[0] & 0xC0) + v55->u8[0] <= 0x7F)
    {
      result = sub_21609A73C(a1, (int16x8_t *)(v120 + v56), (__int16 *)(v120 + v56), v129, v57, v130, v55, (uint64_t)v131);
      v37 = v130;
      if ((_DWORD)result)
        return result;
    }
    v55 += 3;
    ++v57;
    v56 += 16;
    if (a3 == v57)
      goto LABEL_55;
  }
}

uint64_t sub_21609C614(uint64_t a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5)
{
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  unsigned int v15;
  int v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, unsigned int, unsigned int, int, int, int, _BYTE *, int);
  uint64_t (*v19)(uint64_t, uint64_t, unsigned int, unsigned int, int, int, int, _BYTE *, int, uint64_t);
  unsigned int v20;
  int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  uint64_t v32;
  int v33;
  unsigned __int8 *v34;
  unsigned int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  unsigned int i;
  unsigned int v47;
  int v48;
  unsigned __int8 *v49;
  unsigned int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t, _QWORD);
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int v65;
  void *v66;
  void *v67;
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int v75;
  int v76;
  uint64_t v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  uint64_t v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v93;

  v6 = a2;
  v7 = a1;
  v8 = *(_QWORD *)(a1 + 80);
  v9 = *(_DWORD *)(v8 + 100) + 15;
  v10 = *(_DWORD *)(v8 + 136);
  v11 = *(_QWORD *)(a1 + 232) + 4 * v10;
  v12 = *(_QWORD *)(v8 + 32);
  v84 = *(_QWORD *)(v8 + 40);
  v88 = *(unsigned int *)(v8 + 152);
  v89 = v10;
  v13 = v11 + 16 * v10 + (unint64_t)(2 * v88);
  v14 = 16 * a4 - 4;
  if (!a4)
    v14 = 0;
  if (*(_BYTE *)v8 && *(_BYTE *)(v8 + 3))
  {
    v15 = (v9 & 0xFFFFFFF0) + ~(2 * *(_DWORD *)(a1 + 208));
    v16 = *(unsigned __int8 *)(v8 + 5);
    v17 = v84;
    if (v16)
    {
      v13 += v88;
      v17 = v84 + v88;
    }
    v84 = v17;
    if (v16)
    {
      v11 += v89;
      v12 += v89;
    }
    LODWORD(v88) = 2 * v88;
    LODWORD(v89) = 2 * v89;
  }
  else
  {
    v15 = (v9 & 0xFFFFFFF0) + (2 * *(_DWORD *)(a1 + 212) - 4) * *(_DWORD *)(a1 + 208) - 1;
  }
  if (!(a4 | a2))
  {
    v18 = sub_2160C4B3C;
    v19 = sub_2160C4D68;
    if (!*(_BYTE *)(a1 + 226))
    {
      v18 = sub_2160C52B4;
      v19 = sub_2160C5630;
    }
    *(_QWORD *)(a1 + 248) = v18;
    *(_QWORD *)(a1 + 256) = v19;
  }
  if (a4 < a5)
  {
    v20 = v9 >> 4;
    v21 = 16 * v89;
    v78 = 8 * v88;
    if (a2)
      v22 = a2 - 1;
    else
      v22 = 0;
    v23 = 16 * v22;
    v24 = (4 * v89);
    v25 = (2 * v88);
    v26 = v15 - v14;
    if (v26 >= 7)
      v27 = 7;
    else
      v27 = v26;
    if (v26 >= 9)
      v28 = 9;
    else
      v28 = v26;
    v75 = v22;
    v29 = 2 * v27;
    v30 = 2 * v28;
    if (v20 == 1)
      v31 = 8;
    else
      v31 = 6;
    if (v31 < v26)
      v26 = v31;
    v76 = 2 * v26;
    v73 = v11 + v23;
    v74 = v20 - 1;
    v72 = v11 + v23 - v24;
    v71 = v13 + v23;
    v70 = v13 + v23 - v25;
    v61 = 16 * v6;
    v80 = 16 * (v6 + v89 * a4);
    v82 = 16 * v89 * a4;
    v83 = *(unsigned __int8 *)(a1 + 225);
    v63 = v12 + v23;
    v62 = v84 + v23;
    v69 = v29 + 2;
    v68 = v30 + 2;
    v67 = (void *)(v11 - v24);
    v66 = (void *)(v13 - v25);
    v60 = v6;
    v32 = a4;
    v77 = a5;
    v91 = a3;
    v81 = 8 * v88 * a4;
    v79 = v81 + 16 * v6;
    v65 = v6;
    v64 = v12;
    v85 = a3;
    do
    {
      v33 = *(_DWORD *)(v7 + 12);
      v34 = (unsigned __int8 *)(*(_QWORD *)(v7 + 152) + 48 * (v6 + v33 * (_DWORD)v32));
      v93 = v32;
      if (v83)
      {
        if (v6 >= a3)
        {
          v35 = a3 - (v33 != a3);
LABEL_57:
          v52 = v71;
          v53 = v72;
          v54 = v70;
          v55 = v73;
          v56 = v76;
          if (v32)
            goto LABEL_61;
          goto LABEL_65;
        }
        v37 = v12 + v82;
        v87 = v12 + (v21 * v32);
        v86 = v84 + (v78 * v32);
        v38 = v60;
        v39 = v61;
        do
        {
          if (*(_DWORD *)(v7 + 264) >= (int)*(unsigned __int8 *)(*(_QWORD *)(v7 + 112)
                                                                + (v38 + *(_DWORD *)(v7 + 12) * v32)))
          {
            v43 = v39 & 0xFFFFFFF0;
            v44 = 17;
            v45 = v43;
            do
            {
              *(_OWORD *)(v11 + v45) = *(_OWORD *)(v37 + v45);
              v45 += v89;
              --v44;
            }
            while (v44 > 1);
            for (i = 9; i > 1; --i)
            {
              *(_OWORD *)(v13 + v43) = *(_OWORD *)(v84 + v81 + v43);
              v43 += v88;
            }
          }
          else
          {
            v40 = (16 * v38);
            v90 = v86 + v40;
            v41 = v13 + v40;
            sub_2160E9F04((unsigned __int8 *)v7, v87 + v40, v11 + v40, v38, v32, v89, v34, 0, 0);
            v42 = v41;
            a3 = v85;
            sub_2160EAD54(a1, v90, v42, v38, v93, v88, v34, 0, 0);
            v7 = a1;
            v32 = v93;
          }
          v34 += 48;
          ++v38;
          v39 += 16;
        }
        while (v38 != v91);
      }
      else
      {
        if (*(_BYTE *)(*(_QWORD *)(v7 + 80) + 3))
          v36 = v6 >= a3;
        else
          v36 = 1;
        if (v36)
        {
          v35 = a3 - (v33 != a3);
          goto LABEL_59;
        }
        v47 = v80;
        v48 = v6;
        do
        {
          if ((v34[16] & 0xC0) + *v34 <= 0x7F)
          {
            sub_2160E9F04((unsigned __int8 *)v7, v12 + v47, v12 + v47, v48, v32, v89, v34, 0, 0);
            v7 = a1;
            v32 = v93;
          }
          v34 += 48;
          ++v48;
          v47 += 16;
        }
        while (a3 != v48);
        v49 = (unsigned __int8 *)(*(_QWORD *)(v7 + 152) + 48 * (v6 + *(_DWORD *)(v7 + 12) * (_DWORD)v32));
        v50 = v79;
        v51 = v6;
        do
        {
          if ((v49[16] & 0xC0) + *v49 <= 0x7F)
          {
            sub_2160EAD54(v7, v84 + v50, v84 + v50, v51, v32, v88, v49, 0, 0);
            v7 = a1;
            v32 = v93;
          }
          v49 += 48;
          ++v51;
          v50 += 16;
        }
        while (a3 != v51);
      }
      v35 = a3 - (*(_DWORD *)(v7 + 12) != a3);
      v12 = v64;
      v6 = v65;
      v21 = 16 * v89;
      if (v83)
        goto LABEL_57;
LABEL_59:
      if (v32)
      {
        v53 = v63 + ((16 * v32 - 4) * v89);
        v54 = v62 + ((8 * v32 - 2) * v88);
LABEL_61:
        if (v32 == v74)
          v56 = v68;
        else
          v56 = v69;
        v52 = v54;
        v55 = v53;
        goto LABEL_65;
      }
      v52 = v62;
      v55 = v63;
      v56 = v76;
LABEL_65:
      if (v56 >= 1)
      {
        v57 = 16 * (v35 - v75);
        if (*(_QWORD *)(v7 + 240))
          v58 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v7 + 256);
        else
          v58 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v7 + 248);
        v58(v55, v52, v57, 0);
        v7 = a1;
        v32 = v93;
      }
      if (v83)
      {
        memcpy(v67, (const void *)(v11 + (12 * v89)), (4 * v89));
        memcpy(v66, (const void *)(v13 + (6 * v88)), (2 * v88));
        v7 = a1;
        v32 = v93;
      }
      ++v32;
      v82 += v21;
      v81 += v78;
      v80 += v21;
      v79 += v78;
    }
    while (v32 != v77);
  }
  return 0;
}

uint64_t sub_21609CCAC(int8x16_t *a1, int a2, int8x16_t *a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  int16x8_t v6;
  int v7;
  uint8x16_t v8;
  uint8x16_t v9;
  int16x8_t v10;
  int8x16_t v11;
  int8x16_t v12;
  uint8x16_t v13;
  uint8x16_t v14;
  int16x8_t v15;
  int8x16_t *v16;
  int8x16_t *v17;
  uint8x16_t v18;
  uint8x16_t v19;
  int16x8_t v20;
  __int8 *v21;
  int8x16_t v22;
  __int8 *v23;
  int8x16_t v24;
  uint8x16_t v25;
  uint8x16_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v32;

  v4 = a4;
  v5 = a2;
  v6 = 0uLL;
  v7 = 4;
  do
  {
    v32 = v6;
    v8 = (uint8x16_t)vzip1q_s8(*a3, *a1);
    v9 = (uint8x16_t)vzip2q_s8(*a3, *a1);
    v10 = vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v9.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v9), (int16x8_t)xmmword_2160EE5A0));
    v11 = *(int8x16_t *)((char *)a3 + v4);
    v12 = *(int8x16_t *)((char *)a1 + v5);
    v13 = (uint8x16_t)vzip1q_s8(v11, v12);
    v14 = (uint8x16_t)vzip2q_s8(v11, v12);
    v15 = vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v14.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v14), (int16x8_t)xmmword_2160EE5A0));
    v16 = (int8x16_t *)((char *)a3 + v4 + v4);
    v17 = (int8x16_t *)((char *)a1 + v5 + v5);
    v18 = (uint8x16_t)vzip1q_s8(*v16, *v17);
    v19 = (uint8x16_t)vzip2q_s8(*v16, *v17);
    v20 = vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v19.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v19), (int16x8_t)xmmword_2160EE5A0));
    v21 = &v16->i8[v4];
    v22 = *(int8x16_t *)((char *)v16 + v4);
    v23 = &v17->i8[v5];
    v24 = *(int8x16_t *)((char *)v17 + v5);
    v25 = (uint8x16_t)vzip1q_s8(v22, v24);
    v26 = (uint8x16_t)vzip2q_s8(v22, v24);
    *(double *)v27.i64 = sub_21609DB00(vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v8.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v8), (int16x8_t)xmmword_2160EE5A0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v13.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v13), (int16x8_t)xmmword_2160EE5A0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v18.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v18), (int16x8_t)xmmword_2160EE5A0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v25.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v25), (int16x8_t)xmmword_2160EE5A0)), v10, v15, v20, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v26.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v26), (int16x8_t)xmmword_2160EE5A0)));
    v28 = vaddq_s16(v32, v27);
    v6 = v28;
    a3 = (int8x16_t *)&v21[v4];
    a1 = (int8x16_t *)&v23[v5];
    --v7;
  }
  while (v7);
  v29 = vpaddq_s16(v28, v28);
  v30 = vpaddq_s16(v29, v29);
  return vpaddq_s16(v30, v30).u16[0];
}

uint64_t sub_21609CE2C(int8x16_t *a1, int a2, int8x16_t *a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  int16x8_t v6;
  char v7;
  char v8;
  uint8x16_t v9;
  uint8x16_t v10;
  int16x8_t v11;
  int8x16_t v12;
  int8x16_t v13;
  uint8x16_t v14;
  uint8x16_t v15;
  int16x8_t v16;
  int8x16_t *v17;
  int8x16_t *v18;
  uint8x16_t v19;
  uint8x16_t v20;
  int16x8_t v21;
  __int8 *v22;
  int8x16_t v23;
  __int8 *v24;
  int8x16_t v25;
  uint8x16_t v26;
  uint8x16_t v27;
  int16x8_t v28;
  int16x8_t v29;
  int16x8_t v30;
  int16x8_t v31;
  int16x8_t v33;

  v4 = a4;
  v5 = a2;
  v6 = 0uLL;
  v7 = 1;
  do
  {
    v33 = v6;
    v8 = v7;
    v9 = (uint8x16_t)vzip1q_s8(*a3, *a1);
    v10 = (uint8x16_t)vzip2q_s8(*a3, *a1);
    v11 = vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v10.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v10), (int16x8_t)xmmword_2160EE5A0));
    v12 = *(int8x16_t *)((char *)a3 + v4);
    v13 = *(int8x16_t *)((char *)a1 + v5);
    v14 = (uint8x16_t)vzip1q_s8(v12, v13);
    v15 = (uint8x16_t)vzip2q_s8(v12, v13);
    v16 = vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v15.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v15), (int16x8_t)xmmword_2160EE5A0));
    v17 = (int8x16_t *)((char *)a3 + v4 + v4);
    v18 = (int8x16_t *)((char *)a1 + v5 + v5);
    v19 = (uint8x16_t)vzip1q_s8(*v17, *v18);
    v20 = (uint8x16_t)vzip2q_s8(*v17, *v18);
    v21 = vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v20.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v20), (int16x8_t)xmmword_2160EE5A0));
    v22 = &v17->i8[v4];
    v23 = *(int8x16_t *)((char *)v17 + v4);
    v24 = &v18->i8[v5];
    v25 = *(int8x16_t *)((char *)v18 + v5);
    v26 = (uint8x16_t)vzip1q_s8(v23, v25);
    v27 = (uint8x16_t)vzip2q_s8(v23, v25);
    *(double *)v28.i64 = sub_21609DB00(vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v9.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v9), (int16x8_t)xmmword_2160EE5A0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v14.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v14), (int16x8_t)xmmword_2160EE5A0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v19.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v19), (int16x8_t)xmmword_2160EE5A0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v26.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v26), (int16x8_t)xmmword_2160EE5A0)), v11, v16, v21, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v27.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v27), (int16x8_t)xmmword_2160EE5A0)));
    v7 = 0;
    v29 = vaddq_s16(v33, v28);
    v6 = v29;
    a3 = (int8x16_t *)&v22[v4];
    a1 = (int8x16_t *)&v24[v5];
  }
  while ((v8 & 1) != 0);
  v30 = vpaddq_s16(v29, v29);
  v31 = vpaddq_s16(v30, v30);
  return vpaddq_s16(v31, v31).u16[0];
}

uint64_t sub_21609CFB0(uint64_t *a1, int a2, uint64_t *a3, int a4, double a5, double a6, int8x16_t a7, int8x16_t a8, int8x16_t a9, int8x16_t a10, int8x16_t a11, int8x16_t a12)
{
  int8x16_t v12;
  int8x16_t v13;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int8x16_t v22;
  char v23;
  int16x8_t v24;
  uint64_t v25;
  uint8x16_t v26;
  char v27;
  uint8x16_t v28;
  int16x8_t v29;
  int16x8_t v30;
  uint8x16_t v31;
  uint8x16_t v32;
  int16x8_t v33;
  int16x8_t v34;
  uint8x16_t v35;
  uint8x16_t v36;
  int16x8_t v37;
  int16x8_t v38;
  uint8x16_t v39;
  uint8x16_t v40;
  int16x8_t v41;
  int16x8_t v42;
  int16x8_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int16x8_t v52;

  v16 = 2 * a4;
  v17 = 2 * a2;
  v50 = a2;
  v51 = a4;
  v49 = 3 * a2;
  v48 = 6 * a2;
  v46 = 4 * a2;
  v47 = 7 * a2;
  v45 = 5 * a2;
  v18 = 3 * a4;
  v19 = 6 * a4;
  v20 = 7 * a4;
  v21 = 4 * a4;
  v22 = 0uLL;
  v23 = 1;
  v24.i64[1] = 0xFFFF0001FFFF0001;
  v25 = 5 * a4;
  do
  {
    v52 = (int16x8_t)v22;
    v22.i64[0] = *a3;
    v24.i64[0] = *a1;
    v26 = (uint8x16_t)vzip1q_s8(v22, (int8x16_t)v24);
    a7.i64[0] = *(uint64_t *)((char *)a3 + v51);
    v27 = v23;
    a8.i64[0] = *(uint64_t *)((char *)a1 + v50);
    v28 = (uint8x16_t)vzip1q_s8(a7, a8);
    v29 = vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v28.i8), (int16x8_t)xmmword_2160EE5A0);
    v30 = vpaddq_s16(v29, vmulq_s16((int16x8_t)vmovl_high_u8(v28), (int16x8_t)xmmword_2160EE5A0));
    v29.i64[0] = *(uint64_t *)((char *)a3 + v16);
    a8.i64[0] = *(uint64_t *)((char *)a1 + v17);
    a9.i64[0] = *(uint64_t *)((char *)a3 + v18);
    a10.i64[0] = *(uint64_t *)((char *)a1 + v49);
    v31 = (uint8x16_t)vzip1q_s8((int8x16_t)v29, a8);
    v32 = (uint8x16_t)vzip1q_s8(a9, a10);
    v33 = vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v32.i8), (int16x8_t)xmmword_2160EE5A0);
    v34 = vpaddq_s16(v33, vmulq_s16((int16x8_t)vmovl_high_u8(v32), (int16x8_t)xmmword_2160EE5A0));
    v33.i64[0] = *(uint64_t *)((char *)a3 + v21);
    a10.i64[0] = *(uint64_t *)((char *)a1 + v46);
    a11.i64[0] = *(uint64_t *)((char *)a3 + v25);
    a12.i64[0] = *(uint64_t *)((char *)a1 + v45);
    v35 = (uint8x16_t)vzip1q_s8((int8x16_t)v33, a10);
    v36 = (uint8x16_t)vzip1q_s8(a11, a12);
    v37 = vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v36.i8), (int16x8_t)xmmword_2160EE5A0);
    v38 = vpaddq_s16(v37, vmulq_s16((int16x8_t)vmovl_high_u8(v36), (int16x8_t)xmmword_2160EE5A0));
    v37.i64[0] = *(uint64_t *)((char *)a3 + v19);
    a12.i64[0] = *(uint64_t *)((char *)a1 + v48);
    v12.i64[0] = *(uint64_t *)((char *)a3 + v20);
    v13.i64[0] = *(uint64_t *)((char *)a1 + v47);
    a3 = (uint64_t *)((char *)a3 + 2 * v16 + v16 + v16);
    a1 = (uint64_t *)((char *)a1 + 2 * v17 + v17 + v17);
    v39 = (uint8x16_t)vzip1q_s8((int8x16_t)v37, a12);
    v40 = (uint8x16_t)vzip1q_s8(v12, v13);
    *(double *)v41.i64 = sub_21609DB00(vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v26.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v26), (int16x8_t)xmmword_2160EE5A0)), v30, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v31.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v31), (int16x8_t)xmmword_2160EE5A0)), v34, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v35.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v35), (int16x8_t)xmmword_2160EE5A0)), v38, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v39.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v39), (int16x8_t)xmmword_2160EE5A0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v40.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v40), (int16x8_t)xmmword_2160EE5A0)));
    v23 = 0;
    v24 = vaddq_s16(v52, v41);
    v22 = (int8x16_t)v24;
  }
  while ((v27 & 1) != 0);
  v42 = vpaddq_s16(v24, v24);
  v43 = vpaddq_s16(v42, v42);
  return vpaddq_s16(v43, v43).u16[0];
}

uint64_t sub_21609D1C8(unint64_t *a1, int a2, unint64_t *a3, int a4, int8x16_t a5, int8x16_t a6, int8x16_t a7, int8x16_t a8, int8x16_t a9, int8x16_t a10, int8x16_t a11)
{
  int8x16_t v11;
  int8x16_t v12;
  int8x16_t v13;
  uint64_t *v14;
  unint64_t *v15;
  uint8x16_t v16;
  uint8x16_t v17;
  int16x8_t v18;
  int16x8_t v19;
  uint64_t *v20;
  unint64_t *v21;
  uint8x16_t v22;
  uint8x16_t v23;
  int16x8_t v24;
  int16x8_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint8x16_t v28;
  uint8x16_t v29;
  int16x8_t v30;
  int16x8_t v31;
  uint8x16_t v32;
  uint8x16_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;

  a5.i64[0] = *a3;
  a6.i64[0] = *a1;
  a7.i64[0] = *(unint64_t *)((char *)a3 + a4);
  a8.i64[0] = *(unint64_t *)((char *)a1 + a2);
  v14 = (uint64_t *)((char *)a3 + 2 * a4);
  v15 = (unint64_t *)((char *)a1 + 2 * a2);
  v16 = (uint8x16_t)vzip1q_s8(a5, a6);
  v17 = (uint8x16_t)vzip1q_s8(a7, a8);
  v18 = vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v17.i8), (int16x8_t)xmmword_2160EE5A0);
  v19 = vpaddq_s16(v18, vmulq_s16((int16x8_t)vmovl_high_u8(v17), (int16x8_t)xmmword_2160EE5A0));
  v18.i64[0] = *v14;
  a8.i64[0] = *v15;
  a9.i64[0] = *(uint64_t *)((char *)v14 + a4);
  a10.i64[0] = *(unint64_t *)((char *)v15 + a2);
  v20 = (uint64_t *)((char *)v14 + 2 * a4);
  v21 = (unint64_t *)((char *)v15 + 2 * a2);
  v22 = (uint8x16_t)vzip1q_s8((int8x16_t)v18, a8);
  v23 = (uint8x16_t)vzip1q_s8(a9, a10);
  v24 = vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v23.i8), (int16x8_t)xmmword_2160EE5A0);
  v25 = vpaddq_s16(v24, vmulq_s16((int16x8_t)vmovl_high_u8(v23), (int16x8_t)xmmword_2160EE5A0));
  v24.i64[0] = *v20;
  a10.i64[0] = *v21;
  a11.i64[0] = *(uint64_t *)((char *)v20 + a4);
  v11.i64[0] = *(unint64_t *)((char *)v21 + a2);
  v26 = (uint64_t *)((char *)v20 + 2 * a4);
  v27 = (uint64_t *)((char *)v21 + 2 * a2);
  v28 = (uint8x16_t)vzip1q_s8((int8x16_t)v24, a10);
  v29 = (uint8x16_t)vzip1q_s8(a11, v11);
  v30 = vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v29.i8), (int16x8_t)xmmword_2160EE5A0);
  v31 = vpaddq_s16(v30, vmulq_s16((int16x8_t)vmovl_high_u8(v29), (int16x8_t)xmmword_2160EE5A0));
  v30.i64[0] = *v26;
  v11.i64[0] = *v27;
  v12.i64[0] = *(uint64_t *)((char *)v26 + a4);
  v13.i64[0] = *(uint64_t *)((char *)v27 + a2);
  v32 = (uint8x16_t)vzip1q_s8((int8x16_t)v30, v11);
  v33 = (uint8x16_t)vzip1q_s8(v12, v13);
  *(double *)v34.i64 = sub_21609DB00(vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v16.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v16), (int16x8_t)xmmword_2160EE5A0)), v19, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v22.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v22), (int16x8_t)xmmword_2160EE5A0)), v25, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v28.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v28), (int16x8_t)xmmword_2160EE5A0)), v31, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v32.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v32), (int16x8_t)xmmword_2160EE5A0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v33.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v33), (int16x8_t)xmmword_2160EE5A0)));
  v35 = vpaddq_s16(v34, v34);
  v36 = vpaddq_s16(v35, v35);
  return vpaddq_s16(v36, v36).u16[0];
}

uint64_t sub_21609D30C(int8x16_t *a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int16x8_t v10;
  uint64_t v11;
  int v12;
  int8x16_t v13;
  uint8x16_t v14;
  uint8x16_t v15;
  int16x8_t v16;
  uint8x16_t *v17;
  int8x16_t v18;
  uint8x16_t *v19;
  int8x16_t v20;
  uint8x16_t v21;
  uint8x16_t v22;
  int16x8_t v23;
  uint8x16_t *v24;
  int8x16_t *v25;
  uint8x16_t *v26;
  int8x16_t v27;
  uint8x16_t v28;
  uint8x16_t v29;
  int16x8_t v30;
  __int8 *v31;
  int8x16_t v32;
  int8x16_t v33;
  uint8x16_t v34;
  uint8x16_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int16x8_t v39;
  int16x8_t v41;

  v7 = 0;
  v8 = a5;
  v9 = a2;
  v10 = 0uLL;
  v11 = 4 * a5;
  v12 = 4;
  do
  {
    v41 = v10;
    v13 = (int8x16_t)vrhaddq_u8(*(uint8x16_t *)(a3 + v7), *(uint8x16_t *)(a4 + v7));
    v14 = (uint8x16_t)vzip1q_s8(v13, *a1);
    v15 = (uint8x16_t)vzip2q_s8(v13, *a1);
    v16 = vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v15.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v15), (int16x8_t)xmmword_2160EE5A0));
    v17 = (uint8x16_t *)(a3 + v7 + v8);
    v18 = *(int8x16_t *)((char *)a1 + v9);
    v19 = (uint8x16_t *)(a4 + v7 + v8);
    v20 = (int8x16_t)vrhaddq_u8(*v17, *v19);
    v21 = (uint8x16_t)vzip1q_s8(v20, v18);
    v22 = (uint8x16_t)vzip2q_s8(v20, v18);
    v23 = vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v22.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v22), (int16x8_t)xmmword_2160EE5A0));
    v24 = (uint8x16_t *)((char *)v17 + v8);
    v25 = (int8x16_t *)((char *)a1 + v9 + v9);
    v26 = (uint8x16_t *)((char *)v19 + v8);
    v27 = (int8x16_t)vrhaddq_u8(*v24, *v26);
    v28 = (uint8x16_t)vzip1q_s8(v27, *v25);
    v29 = (uint8x16_t)vzip2q_s8(v27, *v25);
    v30 = vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v29.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v29), (int16x8_t)xmmword_2160EE5A0));
    v31 = &v25->i8[v9];
    v32 = *(int8x16_t *)((char *)v25 + v9);
    v33 = (int8x16_t)vrhaddq_u8(*(uint8x16_t *)((char *)v24 + v8), *(uint8x16_t *)((char *)v26 + v8));
    v34 = (uint8x16_t)vzip1q_s8(v33, v32);
    v35 = (uint8x16_t)vzip2q_s8(v33, v32);
    *(double *)v36.i64 = sub_21609DB00(vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v14.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v14), (int16x8_t)xmmword_2160EE5A0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v21.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v21), (int16x8_t)xmmword_2160EE5A0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v28.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v28), (int16x8_t)xmmword_2160EE5A0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v34.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v34), (int16x8_t)xmmword_2160EE5A0)), v16, v23, v30, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v35.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v35), (int16x8_t)xmmword_2160EE5A0)));
    v37 = vaddq_s16(v41, v36);
    v10 = v37;
    v7 += v11;
    a1 = (int8x16_t *)&v31[v9];
    --v12;
  }
  while (v12);
  v38 = vpaddq_s16(v37, v37);
  v39 = vpaddq_s16(v38, v38);
  return vpaddq_s16(v39, v39).u16[0];
}

uint64_t sub_21609D4D0(int8x16_t *a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int16x8_t v10;
  uint64_t v11;
  char v12;
  char v13;
  int8x16_t v14;
  uint8x16_t v15;
  uint8x16_t v16;
  int16x8_t v17;
  uint8x16_t *v18;
  int8x16_t v19;
  uint8x16_t *v20;
  int8x16_t v21;
  uint8x16_t v22;
  uint8x16_t v23;
  int16x8_t v24;
  uint8x16_t *v25;
  int8x16_t *v26;
  uint8x16_t *v27;
  int8x16_t v28;
  uint8x16_t v29;
  uint8x16_t v30;
  int16x8_t v31;
  __int8 *v32;
  int8x16_t v33;
  int8x16_t v34;
  uint8x16_t v35;
  uint8x16_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int16x8_t v39;
  int16x8_t v40;
  int16x8_t v42;

  v7 = 0;
  v8 = a5;
  v9 = a2;
  v10 = 0uLL;
  v11 = 4 * a5;
  v12 = 1;
  do
  {
    v42 = v10;
    v13 = v12;
    v14 = (int8x16_t)vrhaddq_u8(*(uint8x16_t *)(a3 + v7), *(uint8x16_t *)(a4 + v7));
    v15 = (uint8x16_t)vzip1q_s8(v14, *a1);
    v16 = (uint8x16_t)vzip2q_s8(v14, *a1);
    v17 = vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v16.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v16), (int16x8_t)xmmword_2160EE5A0));
    v18 = (uint8x16_t *)(a3 + v7 + v8);
    v19 = *(int8x16_t *)((char *)a1 + v9);
    v20 = (uint8x16_t *)(a4 + v7 + v8);
    v21 = (int8x16_t)vrhaddq_u8(*v18, *v20);
    v22 = (uint8x16_t)vzip1q_s8(v21, v19);
    v23 = (uint8x16_t)vzip2q_s8(v21, v19);
    v24 = vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v23.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v23), (int16x8_t)xmmword_2160EE5A0));
    v25 = (uint8x16_t *)((char *)v18 + v8);
    v26 = (int8x16_t *)((char *)a1 + v9 + v9);
    v27 = (uint8x16_t *)((char *)v20 + v8);
    v28 = (int8x16_t)vrhaddq_u8(*v25, *v27);
    v29 = (uint8x16_t)vzip1q_s8(v28, *v26);
    v30 = (uint8x16_t)vzip2q_s8(v28, *v26);
    v31 = vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v30.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v30), (int16x8_t)xmmword_2160EE5A0));
    v32 = &v26->i8[v9];
    v33 = *(int8x16_t *)((char *)v26 + v9);
    v34 = (int8x16_t)vrhaddq_u8(*(uint8x16_t *)((char *)v25 + v8), *(uint8x16_t *)((char *)v27 + v8));
    v35 = (uint8x16_t)vzip1q_s8(v34, v33);
    v36 = (uint8x16_t)vzip2q_s8(v34, v33);
    *(double *)v37.i64 = sub_21609DB00(vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v15.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v15), (int16x8_t)xmmword_2160EE5A0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v22.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v22), (int16x8_t)xmmword_2160EE5A0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v29.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v29), (int16x8_t)xmmword_2160EE5A0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v35.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v35), (int16x8_t)xmmword_2160EE5A0)), v17, v24, v31, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v36.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v36), (int16x8_t)xmmword_2160EE5A0)));
    v12 = 0;
    v38 = vaddq_s16(v42, v37);
    v10 = v38;
    v7 += v11;
    a1 = (int8x16_t *)&v32[v9];
  }
  while ((v13 & 1) != 0);
  v39 = vpaddq_s16(v38, v38);
  v40 = vpaddq_s16(v39, v39);
  return vpaddq_s16(v40, v40).u16[0];
}

uint64_t sub_21609D698(unint64_t *a1, int a2, uint64_t a3, uint64_t a4, int a5, double a6, double a7, uint8x16_t a8, int8x16_t a9, int8x16_t a10, uint8x16_t a11, int8x16_t a12, uint8x16_t a13)
{
  int8x16_t v13;
  int8x16_t v14;
  uint8x16_t v15;
  uint8x16_t v16;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint8x16_t v28;
  int16x8_t v29;
  char v30;
  uint64_t v31;
  int8x16_t v32;
  int8x16_t v33;
  uint8x16_t v34;
  char v35;
  uint8x16_t v36;
  int16x8_t v37;
  int16x8_t v38;
  uint8x16_t v39;
  int16x8_t v40;
  int16x8_t v41;
  uint8x16_t v42;
  int16x8_t v43;
  int16x8_t v44;
  uint8x16_t v45;
  uint8x16_t v46;
  int16x8_t v47;
  int16x8_t v48;
  int8x16_t v49;
  int8x16_t v50;
  uint8x16_t v51;
  uint8x16_t v52;
  int16x8_t v53;
  int16x8_t v54;
  int16x8_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int16x8_t v74;

  v19 = 0;
  v72 = a4 + a5;
  v20 = 2 * a2;
  v70 = 8 * a5;
  v21 = 3 * a5;
  v22 = 7 * a5;
  v69 = a4 + v22;
  v68 = a4 + 6 * a5;
  v23 = 5 * a5;
  v67 = a4 + v23;
  v65 = a4 + v21;
  v66 = a4 + 4 * a5;
  v63 = a3 + a5;
  v64 = a4 + 2 * a5;
  v62 = a3 + v22;
  v61 = a3 + 6 * a5;
  v60 = a3 + v23;
  v58 = a3 + v21;
  v59 = a3 + 4 * a5;
  v57 = a3 + 2 * a5;
  v71 = a2;
  v24 = 3 * a2;
  v25 = 6 * a2;
  v26 = 7 * a2;
  v27 = 4 * a2;
  v28 = 0uLL;
  v29.i64[1] = 0xFFFF0001FFFF0001;
  v30 = 1;
  v31 = 5 * a2;
  do
  {
    v74 = (int16x8_t)v28;
    v28.i64[0] = *(_QWORD *)(a3 + v19);
    v29.i64[0] = *(_QWORD *)(a4 + v19);
    v32 = (int8x16_t)vrhaddq_u8(v28, (uint8x16_t)v29);
    v29.i64[0] = *(_QWORD *)(v63 + v19);
    a8.i64[0] = *(_QWORD *)(v72 + v19);
    v33 = (int8x16_t)vrhaddq_u8((uint8x16_t)v29, a8);
    a8.i64[0] = *a1;
    v34 = (uint8x16_t)vzip1q_s8(v32, (int8x16_t)a8);
    v35 = v30;
    a9.i64[0] = *(unint64_t *)((char *)a1 + v71);
    v36 = (uint8x16_t)vzip1q_s8(v33, a9);
    v37 = vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v36.i8), (int16x8_t)xmmword_2160EE5A0);
    v38 = vpaddq_s16(v37, vmulq_s16((int16x8_t)vmovl_high_u8(v36), (int16x8_t)xmmword_2160EE5A0));
    v37.i64[0] = *(_QWORD *)(v57 + v19);
    a9.i64[0] = *(_QWORD *)(v58 + v19);
    a10.i64[0] = *(unint64_t *)((char *)a1 + v24);
    a11.i64[0] = *(_QWORD *)(v64 + v19);
    a12.i64[0] = *(unint64_t *)((char *)a1 + v20);
    a13.i64[0] = *(_QWORD *)(v65 + v19);
    v39 = (uint8x16_t)vzip1q_s8((int8x16_t)vrhaddq_u8((uint8x16_t)v37, a11), a12);
    v40 = vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v39.i8), (int16x8_t)xmmword_2160EE5A0);
    v41 = vpaddq_s16(v40, vmulq_s16((int16x8_t)vmovl_high_u8(v39), (int16x8_t)xmmword_2160EE5A0));
    v42 = (uint8x16_t)vzip1q_s8((int8x16_t)vrhaddq_u8((uint8x16_t)a9, a13), a10);
    v43 = vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v42.i8), (int16x8_t)xmmword_2160EE5A0);
    v40.i64[0] = *(_QWORD *)(v59 + v19);
    a12.i64[0] = *(unint64_t *)((char *)a1 + v27);
    a13.i64[0] = *(_QWORD *)(v60 + v19);
    v13.i64[0] = *(unint64_t *)((char *)a1 + v31);
    v44 = vpaddq_s16(v43, vmulq_s16((int16x8_t)vmovl_high_u8(v42), (int16x8_t)xmmword_2160EE5A0));
    v43.i64[0] = *(_QWORD *)(v66 + v19);
    v14.i64[0] = *(_QWORD *)(v67 + v19);
    v45 = (uint8x16_t)vzip1q_s8((int8x16_t)vrhaddq_u8((uint8x16_t)v40, (uint8x16_t)v43), a12);
    v46 = (uint8x16_t)vzip1q_s8((int8x16_t)vrhaddq_u8(a13, (uint8x16_t)v14), v13);
    v47 = vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v46.i8), (int16x8_t)xmmword_2160EE5A0);
    a13.i64[0] = *(_QWORD *)(v61 + v19);
    v13.i64[0] = *(unint64_t *)((char *)a1 + v25);
    v48 = vpaddq_s16(v47, vmulq_s16((int16x8_t)vmovl_high_u8(v46), (int16x8_t)xmmword_2160EE5A0));
    v47.i64[0] = *(_QWORD *)(v62 + v19);
    v14.i64[0] = *(unint64_t *)((char *)a1 + v26);
    a1 = (unint64_t *)((char *)a1 + 2 * v20 + v20 + v20);
    v15.i64[0] = *(_QWORD *)(v68 + v19);
    v16.i64[0] = *(_QWORD *)(v69 + v19);
    v49 = (int8x16_t)vrhaddq_u8(a13, v15);
    v50 = (int8x16_t)vrhaddq_u8((uint8x16_t)v47, v16);
    v51 = (uint8x16_t)vzip1q_s8(v49, v13);
    v52 = (uint8x16_t)vzip1q_s8(v50, v14);
    *(double *)v53.i64 = sub_21609DB00(vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v34.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v34), (int16x8_t)xmmword_2160EE5A0)), v38, v41, v44, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v45.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v45), (int16x8_t)xmmword_2160EE5A0)), v48, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v51.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v51), (int16x8_t)xmmword_2160EE5A0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v52.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v52), (int16x8_t)xmmword_2160EE5A0)));
    v30 = 0;
    v29 = vaddq_s16(v74, v53);
    v28 = (uint8x16_t)v29;
    v19 += v70;
  }
  while ((v35 & 1) != 0);
  v54 = vpaddq_s16(v29, v29);
  v55 = vpaddq_s16(v54, v54);
  return vpaddq_s16(v55, v55).u16[0];
}

uint64_t sub_21609D970(unint64_t *a1, int a2, unint64_t *a3, unint64_t *a4, int a5, uint8x16_t a6, int8x16_t a7, uint8x16_t a8, int8x16_t a9, uint8x16_t a10, uint8x16_t a11, uint8x16_t a12)
{
  int8x16_t v12;
  int8x16_t v13;
  int8x16_t v14;
  uint8x16_t v15;
  uint8x16_t v16;
  uint64_t *v17;
  unint64_t *v18;
  unint64_t *v19;
  uint8x16_t v20;
  uint8x16_t v21;
  int16x8_t v22;
  int16x8_t v23;
  uint64_t *v24;
  unint64_t *v25;
  uint64_t *v26;
  uint8x16_t v27;
  uint8x16_t v28;
  int16x8_t v29;
  int16x8_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t *v33;
  uint8x16_t v34;
  uint8x16_t v35;
  int16x8_t v36;
  int16x8_t v37;
  uint8x16_t v38;
  uint8x16_t v39;
  int16x8_t v40;
  int16x8_t v41;
  int16x8_t v42;

  a6.i64[0] = *a3;
  a7.i64[0] = *a1;
  a8.i64[0] = *(unint64_t *)((char *)a3 + a5);
  a9.i64[0] = *(unint64_t *)((char *)a1 + a2);
  v17 = (uint64_t *)((char *)a3 + 2 * a5);
  v18 = (unint64_t *)((char *)a1 + 2 * a2);
  a10.i64[0] = *a4;
  a11.i64[0] = *(unint64_t *)((char *)a4 + a5);
  v19 = (unint64_t *)((char *)a4 + 2 * a5);
  v20 = (uint8x16_t)vzip1q_s8((int8x16_t)vrhaddq_u8(a6, a10), a7);
  v21 = (uint8x16_t)vzip1q_s8((int8x16_t)vrhaddq_u8(a8, a11), a9);
  v22 = vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v21.i8), (int16x8_t)xmmword_2160EE5A0);
  v23 = vpaddq_s16(v22, vmulq_s16((int16x8_t)vmovl_high_u8(v21), (int16x8_t)xmmword_2160EE5A0));
  v22.i64[0] = *v17;
  a9.i64[0] = *(uint64_t *)((char *)v17 + a5);
  a10.i64[0] = *v18;
  a11.i64[0] = *(unint64_t *)((char *)v18 + a2);
  v24 = (uint64_t *)((char *)v17 + 2 * a5);
  v25 = (unint64_t *)((char *)v18 + 2 * a2);
  a12.i64[0] = *v19;
  v12.i64[0] = *(unint64_t *)((char *)v19 + a5);
  v26 = (uint64_t *)((char *)v19 + 2 * a5);
  v27 = (uint8x16_t)vzip1q_s8((int8x16_t)vrhaddq_u8((uint8x16_t)v22, a12), (int8x16_t)a10);
  v28 = (uint8x16_t)vzip1q_s8((int8x16_t)vrhaddq_u8((uint8x16_t)a9, (uint8x16_t)v12), (int8x16_t)a11);
  v29 = vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v28.i8), (int16x8_t)xmmword_2160EE5A0);
  v30 = vpaddq_s16(v29, vmulq_s16((int16x8_t)vmovl_high_u8(v28), (int16x8_t)xmmword_2160EE5A0));
  v29.i64[0] = *v24;
  a11.i64[0] = *v25;
  a12.i64[0] = *(uint64_t *)((char *)v24 + a5);
  v12.i64[0] = *(unint64_t *)((char *)v25 + a2);
  v31 = (uint64_t *)((char *)v24 + 2 * a5);
  v32 = (uint64_t *)((char *)v25 + 2 * a2);
  v13.i64[0] = *v26;
  v14.i64[0] = *(uint64_t *)((char *)v26 + a5);
  v33 = (uint64_t *)((char *)v26 + 2 * a5);
  v34 = (uint8x16_t)vzip1q_s8((int8x16_t)vrhaddq_u8((uint8x16_t)v29, (uint8x16_t)v13), (int8x16_t)a11);
  v35 = (uint8x16_t)vzip1q_s8((int8x16_t)vrhaddq_u8(a12, (uint8x16_t)v14), v12);
  v36 = vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v35.i8), (int16x8_t)xmmword_2160EE5A0);
  v37 = vpaddq_s16(v36, vmulq_s16((int16x8_t)vmovl_high_u8(v35), (int16x8_t)xmmword_2160EE5A0));
  v36.i64[0] = *v31;
  v12.i64[0] = *(uint64_t *)((char *)v31 + a5);
  v13.i64[0] = *(uint64_t *)((char *)v32 + a2);
  v14.i64[0] = *v32;
  v15.i64[0] = *v33;
  v16.i64[0] = *(uint64_t *)((char *)v33 + a5);
  v38 = (uint8x16_t)vzip1q_s8((int8x16_t)vrhaddq_u8((uint8x16_t)v36, v15), v14);
  v39 = (uint8x16_t)vzip1q_s8((int8x16_t)vrhaddq_u8((uint8x16_t)v12, v16), v13);
  *(double *)v40.i64 = sub_21609DB00(vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v20.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v20), (int16x8_t)xmmword_2160EE5A0)), v23, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v27.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v27), (int16x8_t)xmmword_2160EE5A0)), v30, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v34.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v34), (int16x8_t)xmmword_2160EE5A0)), v37, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v38.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v38), (int16x8_t)xmmword_2160EE5A0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v39.i8), (int16x8_t)xmmword_2160EE5A0), vmulq_s16((int16x8_t)vmovl_high_u8(v39), (int16x8_t)xmmword_2160EE5A0)));
  v41 = vpaddq_s16(v40, v40);
  v42 = vpaddq_s16(v41, v41);
  return vpaddq_s16(v42, v42).u16[0];
}

double sub_21609DB00(int16x8_t a1, int16x8_t a2, int16x8_t a3, int16x8_t a4, int16x8_t a5, int16x8_t a6, int16x8_t a7, int16x8_t a8)
{
  int16x8_t v8;
  int16x8_t v9;
  int16x8_t v10;
  int16x8_t v11;
  int16x8_t v12;
  int16x8_t v13;
  int16x8_t v14;
  int16x8_t v15;
  int16x8_t v16;
  int16x8_t v17;
  int16x8_t v18;
  int16x8_t v19;
  int16x8_t v20;
  int16x8_t v21;
  int16x8_t v22;
  int16x8_t v23;
  int32x4_t v24;
  int32x4_t v25;
  int32x4_t v26;
  int32x4_t v27;
  int32x4_t v28;
  int32x4_t v29;
  int32x4_t v30;
  int32x4_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  int16x8_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int16x8_t v39;
  int16x8_t v40;
  int16x8_t v41;
  int64x2_t v42;
  int64x2_t v43;
  int16x8_t v44;
  int16x8_t v45;
  int64x2_t v46;
  int64x2_t v47;
  int16x8_t v48;
  int16x8_t v49;
  int16x8_t v50;
  int16x8_t v51;
  double result;

  v8 = vaddq_s16(a2, a1);
  v9 = vsubq_s16(a1, a2);
  v10 = vaddq_s16(a4, a3);
  v11 = vsubq_s16(a3, a4);
  v12 = vaddq_s16(a6, a5);
  v13 = vsubq_s16(a5, a6);
  v14 = vaddq_s16(a8, a7);
  v15 = vsubq_s16(a7, a8);
  v16 = vzip1q_s16(v8, v9);
  v17 = vzip2q_s16(v8, v9);
  v18 = vzip1q_s16(v10, v11);
  v19 = vzip2q_s16(v10, v11);
  v20 = vzip1q_s16(v12, v13);
  v21 = vzip2q_s16(v12, v13);
  v22 = vzip1q_s16(v14, v15);
  v23 = vzip2q_s16(v14, v15);
  v24 = (int32x4_t)vaddq_s16(v18, v16);
  v25 = (int32x4_t)vsubq_s16(v16, v18);
  v26 = (int32x4_t)vaddq_s16(v19, v17);
  v27 = (int32x4_t)vsubq_s16(v17, v19);
  v28 = (int32x4_t)vaddq_s16(v22, v20);
  v29 = (int32x4_t)vsubq_s16(v20, v22);
  v30 = (int32x4_t)vaddq_s16(v23, v21);
  v31 = (int32x4_t)vsubq_s16(v21, v23);
  v32 = (int16x8_t)vzip1q_s32(v24, v25);
  v33 = (int16x8_t)vzip2q_s32(v24, v25);
  v34 = (int16x8_t)vzip1q_s32(v26, v27);
  v35 = (int16x8_t)vzip2q_s32(v26, v27);
  v36 = (int16x8_t)vzip1q_s32(v28, v29);
  v37 = (int16x8_t)vzip2q_s32(v28, v29);
  v38 = (int16x8_t)vzip1q_s32(v30, v31);
  v39 = (int16x8_t)vzip2q_s32(v30, v31);
  v40 = vaddq_s16(v32, v33);
  v41 = vsubq_s16(v32, v33);
  v42 = (int64x2_t)vaddq_s16(v34, v35);
  v43 = (int64x2_t)vsubq_s16(v34, v35);
  v44 = vaddq_s16(v36, v37);
  v45 = vsubq_s16(v36, v37);
  v46 = (int64x2_t)vaddq_s16(v38, v39);
  v47 = (int64x2_t)vsubq_s16(v38, v39);
  v48 = (int16x8_t)vzip2q_s64((int64x2_t)v40, v42);
  v49 = (int16x8_t)vzip2q_s64((int64x2_t)v41, v43);
  v50 = (int16x8_t)vzip2q_s64((int64x2_t)v44, v46);
  v51 = (int16x8_t)vzip2q_s64((int64x2_t)v45, v47);
  v40.i64[1] = v42.i64[0];
  v41.i64[1] = v43.i64[0];
  v44.i64[1] = v46.i64[0];
  v45.i64[1] = v47.i64[0];
  *(_QWORD *)&result = vaddq_s16(vaddq_s16(vmaxq_s16(vabsq_s16(v41), vabsq_s16(v49)), vmaxq_s16(vabsq_s16(v40), vabsq_s16(v48))), vaddq_s16(vmaxq_s16(vabsq_s16(v44), vabsq_s16(v50)), vmaxq_s16(vabsq_s16(v45), vabsq_s16(v51)))).u64[0];
  return result;
}

uint64_t sub_21609DC00(uint64_t a1, unsigned int a2, char a3, char a4, char a5, char a6)
{
  unsigned int v13;
  char *v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  char *v19;
  uint64_t v20;

  if (*(_DWORD *)(a1 + 20) < a2)
    return 4294958327;
  sub_2160EC880(*(pthread_mutex_t **)(a1 + 64));
  if (*(_DWORD *)(a1 + 56) >= a2 + 1)
  {
    v15 = *(char **)(a1 + 48);
  }
  else
  {
    if (2 * (a2 + 1) >= *(_DWORD *)(a1 + 20))
      v13 = *(_DWORD *)(a1 + 20);
    else
      v13 = 2 * (a2 + 1);
    v14 = (char *)sub_2160CB5FC((void *)(12 * v13));
    v15 = v14;
    if (*(_DWORD *)(a1 + 56))
    {
      v16 = 0;
      v17 = 0;
      do
      {
        v18 = (uint64_t *)(*(_QWORD *)(a1 + 48) + v16);
        v19 = &v14[v16];
        v20 = *v18;
        *((_DWORD *)v19 + 2) = *((_DWORD *)v18 + 2);
        *(_QWORD *)v19 = v20;
        ++v17;
        v16 += 12;
      }
      while (v17 < *(unsigned int *)(a1 + 56));
    }
    j__free(*(void **)(a1 + 48));
    *(_QWORD *)(a1 + 48) = v15;
    *(_DWORD *)(a1 + 56) = v13;
  }
  v15[12 * a2 + 9] = a4;
  *(_BYTE *)(*(_QWORD *)(a1 + 48) + 12 * a2 + 10) = 2 * a5;
  *(_BYTE *)(*(_QWORD *)(a1 + 48) + 12 * a2 + 11) = 2 * a6;
  *(_BYTE *)(*(_QWORD *)(a1 + 48) + 12 * a2 + 8) = a3;
  sub_2160EC88C(*(pthread_mutex_t **)(a1 + 64));
  return 0;
}

uint64_t sub_21609DD30(uint64_t result, int a2, int a3, _BYTE *a4)
{
  BOOL v4;
  BOOL v5;
  char v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v10;
  char v11;
  char v12;
  char v13;
  BOOL v14;
  BOOL v15;
  char v16;
  char v17;
  char v18;
  BOOL v19;
  BOOL v20;
  char v21;
  char v22;
  char v23;
  char v24;
  BOOL v25;
  _BYTE *v26;

  v4 = a4[12] != 0;
  v5 = a4[2] != 0;
  v6 = v5 | (2 * (*a4 != 0));
  v7 = a4[6] != 0;
  v8 = a4[7] != 0;
  v9 = a4[9] != 0;
  v10 = v9 | (2 * (a4[8] != 0));
  v11 = 4 * (a4[3] != 0);
  v12 = v11 | (8 * (a4[1] != 0));
  v13 = v11 | (8 * v5);
  v14 = a4[10] != 0;
  v15 = a4[11] != 0;
  v16 = (4 * v15) | (8 * v14);
  v17 = v14 | (4 * v6);
  v18 = v12 | (2 * v9);
  v19 = a4[13] != 0;
  v20 = a4[14] != 0;
  v21 = v20 | (4 * (v7 | (2 * (a4[4] != 0)))) | (2 * v4);
  v22 = (4 * v8) | (8 * (a4[5] != 0)) | (2 * v19);
  v23 = (a4[5] != 0) | (4 * ((a4[1] != 0) | (2 * (*a4 != 0)))) | (2 * (a4[4] != 0));
  v24 = v13 | (2 * v7);
  v25 = a4[15] != 0;
  v26 = (_BYTE *)(*(_QWORD *)(result + 32) + 4 * (a2 + *(_DWORD *)(result + 12) * a3));
  *v26 = v18 | (16 * (v17 & 0xFD | (2 * (a4[8] != 0)))) | v15;
  v26[1] = v22 | (16 * v21) | v25;
  v26[2] = v24 | (16 * v23) | v8;
  v26[3] = v16 | (2 * v20) | (16 * (v19 | (4 * v10) | (2 * v4))) | v25;
  return result;
}

double sub_21609DEA0(uint64_t a1, int a2, int a3, int8x16_t *a4)
{
  int16x8_t v4;
  uint16x8_t v5;
  int64x2_t v6;
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;
  int64x2_t v10;
  int8x16_t v11;
  int8x16_t v12;
  int8x16_t v13;
  double result;

  v4 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vcgtzq_s8(*a4), (int8x16_t)xmmword_2160F2B40), (int8x16_t)xmmword_2160F2B50);
  v5.i64[0] = 0x7000700070007;
  v5.i64[1] = 0x7000700070007;
  v6 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s16(v4, 8uLL), (int8x16_t)vshlq_u16((uint16x8_t)v4, v5));
  v7 = vandq_s8(vcltzq_s8((int8x16_t)v6), (int8x16_t)xmmword_2160F2980);
  v8 = vpaddq_s8(v7, v7);
  v9 = vpaddq_s8(v8, v8);
  v10 = (int64x2_t)vzip1q_s8((int8x16_t)vdupq_laneq_s64(v6, 1), (int8x16_t)v6);
  v11 = vandq_s8(vcltzq_s8(vqtbl1q_s8(vzip1q_s8((int8x16_t)v10, (int8x16_t)vdupq_laneq_s64(v10, 1)), (int8x16_t)xmmword_2160F18B0)), (int8x16_t)xmmword_2160F2980);
  v12 = vpaddq_s8(v11, v11);
  v13 = vpaddq_s8(v12, v12);
  *(_QWORD *)&result = vpaddq_s8(v13, v13).u64[0];
  *(_DWORD *)(*(_QWORD *)(a1 + 32) + 4 * (a2 + *(_DWORD *)(a1 + 12) * a3)) = LOWORD(result) | (vpaddq_s8(v9, v9).u16[0] << 16);
  return result;
}

uint64_t *sub_21609DF3C(uint64_t *result, uint64_t a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6, int32x4_t a7, int32x4_t a8, int32x4_t a9)
{
  uint64_t v9;
  __int32 v10;
  int v11;
  int v12;
  int32x4_t v13;
  int8x16_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  int32x2_t v20;
  unint64_t *v21;
  unsigned int *v22;
  unsigned __int16 *v23;
  unsigned int v24;
  int8x16_t v25;
  int v26;
  uint64_t v27;
  unint64_t v28;
  int16x8_t v29;
  unint64_t v30;
  int16x8_t v31;
  int8x16_t v32;
  int8x16_t v33;
  int8x16_t v34;
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _BOOL4 v42;
  int v43;
  int8x16_t v44;
  int8x16_t v45;
  unsigned int v46;
  uint64_t v47;
  unsigned int v48;
  int v49;
  uint64_t v50;
  int v51;
  unint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  int v56;
  _OWORD *v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  int v61;
  int v62;
  unsigned int v63;
  int v64;
  int v65;
  int v66;
  _BYTE *v67;
  unint64_t v68;
  int v69;
  int v70;
  unsigned int v71;
  uint64_t v72;
  int v73;
  int16x8_t *v74;
  int16x8_t *v75;
  int16x8_t v76;
  int8x16_t v77;
  int8x8_t v78;
  int8x8_t v79;
  int32x2_t v80;
  int8x16_t v81;
  int8x16_t v82;
  int8x16_t v83;
  int8x16_t v84;
  _BOOL4 v85;
  int32x2_t v86;
  unint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  _OWORD *v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  int8x16_t v94;
  int8x16_t v95;
  int8x16_t v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  _BYTE *v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int16x8_t *v108;
  int16x8_t *v109;
  int16x8_t v110;
  int8x16_t v111;
  int8x8_t v112;
  int8x8_t v113;
  int32x2_t v114;
  int8x16_t v115;
  int8x16_t v116;
  int8x16_t v117;
  int8x16_t v118;
  _BOOL4 v119;
  int32x2_t v120;
  uint64_t v121;
  int v122;
  int8x16_t v123;
  int8x16_t v124;
  int8x16_t v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  int v129;
  int v130;
  unsigned int v131;
  int v133;
  int v134;
  int v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  uint64_t *v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  uint64_t v143;
  unsigned int v144;
  char *v145;
  int v146;
  int v147;
  unsigned __int16 *v148;
  uint64_t v149;
  unsigned int v150;
  uint64_t *v151;
  __int16 v152;
  unsigned int v153;
  int v154;
  int v155;
  unsigned int *v156;
  unsigned int *v157;
  int v158;
  unsigned int v159;
  int16x8_t v160;
  uint64_t v161;
  int v162;
  int8x16_t v163;
  signed int v164;
  int v165;
  int v166;
  unsigned int v167;
  int v168;
  int v169;
  _OWORD *v170;
  unsigned int v171;
  int v172;
  int8x16x2_t v173;
  int8x16x2_t v174;

  v9 = *((unsigned __int8 *)result + 225);
  v151 = result;
  v10 = *((_DWORD *)result + 47);
  if (v10)
    v11 = 2;
  else
    v11 = 4;
  v164 = v11;
  if (v10)
    v12 = 50529027;
  else
    v12 = 67372036;
  v133 = v12;
  if (a5 < a6)
  {
    a7.i32[0] = 0;
    a8.i32[0] = 0;
    a9.i32[0] = *((_DWORD *)result + 47);
    v13 = vdupq_lane_s32((int32x2_t)*(_OWORD *)&vceqq_s32(a9, a7), 0);
    v14 = vbslq_s8((int8x16_t)v13, (int8x16_t)xmmword_2160F2BA0, (int8x16_t)xmmword_2160F2B90);
    v145 = (char *)&unk_2160F76A0 + dword_254E2EA68;
    v15 = *((unsigned int *)result + 3);
    v16 = 4 * v15;
    result = (uint64_t *)result[6];
    v17 = *v151;
    v13.i32[0] = v10;
    v18 = v15 * a5 + a3;
    v19 = v151[19] + 48 * v18;
    v20 = (int32x2_t)vceqq_s32(v13, a8).u64[0];
    v21 = (unint64_t *)(*(_QWORD *)(a2 + 104) + 8 * v18);
    v22 = (unsigned int *)(v151[4] + 4 * v18);
    v23 = (unsigned __int16 *)(v151[9] + 2 * v18);
    if (a5)
      v24 = v15;
    else
      v24 = 0;
    v25 = (int8x16_t)vdupq_lane_s32(v20, 0);
    if (a5)
      v26 = v12;
    else
      v26 = 538976288;
    v135 = v26;
    if (a3)
      v27 = -1;
    else
      v27 = 0;
    v127 = v27;
    v28 = a2 + 32;
    v29 = (int16x8_t)xmmword_2160F2BB0;
    v30 = a2 + 64;
    v126 = -v15;
    v146 = 16 * v15 * a5;
    v147 = 4 * a5;
    v31 = (int16x8_t)vbslq_s8(v25, (int8x16_t)xmmword_2160F2BC0, (int8x16_t)xmmword_2160F2BB0);
    v142 = v15;
    v130 = 16 * v15;
    v32 = (int8x16_t)xmmword_2160F2980;
    v33 = (int8x16_t)xmmword_2160F2BF0;
    v34 = (int8x16_t)xmmword_2160F2BE0;
    v140 = v9;
    v141 = a4;
    v131 = a3;
    v163 = v14;
    v162 = 4 * v15;
    v139 = result;
    v161 = *v151;
    v137 = v30;
    v138 = v28;
    v160 = v31;
    do
    {
      if (a3 < a4)
      {
        v134 = 4 * a5;
        v129 = a5 * v142 - 1;
        v128 = (a5 - 1) * v142;
        v35 = v127;
        v36 = a3;
        v37 = -(uint64_t)v24;
        v143 = v37;
        v144 = a5;
        do
        {
          v38 = *v23;
          v39 = *((unsigned __int8 *)result + 12 * v38 + 9);
          if ((_DWORD)v39 == 1)
          {
            *(_BYTE *)v19 = 0x80;
          }
          else
          {
            v40 = *v21;
            v42 = v28 <= *v21 && v40 <= v30;
            if (!(v9 | v42))
            {
              v33.i32[0] = 0;
              v43 = v23[v35];
              v158 = v23[v37];
              v29.i8[0] = *(_BYTE *)(v151[17] + v36 + *((_DWORD *)v151 + 3) * a5);
              v44 = vdupq_lane_s8((int8x8_t)*(_OWORD *)&vceqq_s8((int8x16_t)v29, v33), 0);
              v29 = (int16x8_t)xmmword_2160F2BD0;
              v45.i64[0] = 0x202020202020202;
              v45.i64[1] = 0x202020202020202;
              v33 = vbslq_s8(v44, v45, (int8x16_t)xmmword_2160F2BD0);
              *(int8x16_t *)v19 = v33;
              *(int8x16_t *)(v19 + 16) = v33;
              v46 = *v22;
              v47 = v151[17];
              v48 = v36 + *((_DWORD *)v151 + 3) * a5;
              v49 = *(unsigned __int8 *)(v47 + v48);
              if (*(_BYTE *)(v47 + v48))
              {
                v33 = vbicq_s8((int8x16_t)xmmword_2160F2B70, (int8x16_t)vceqzq_s32((int32x4_t)vandq_s8((int8x16_t)vdupq_n_s32(v46), (int8x16_t)xmmword_2160F2B60)));
                v29 = (int16x8_t)vextq_s8(v33, v33, 8uLL);
                *(int8x8_t *)v33.i8 = vorr_s8(*(int8x8_t *)v33.i8, *(int8x8_t *)v29.i8);
                v46 |= v33.i32[0] | v33.i32[1];
              }
              v50 = v145[*((unsigned __int8 *)result + 12 * v38 + 8)];
              v51 = *(unsigned __int16 *)(v40 + 10);
              v52 = v21[v35];
              v53 = (v46 >> 4) & 0xFFF0FFF | v46;
              if ((_DWORD)v53)
              {
                if (((v46 >> 4) & 0xFFF0000 | v46 & 0xFFF0000) == 0xFFF0000)
                  v54 = 1;
                else
                  v54 = 4;
                v167 = v54;
                v55 = ((v46 >> 4) & 0xFFF0000 | v46 & 0xFFF0000) == 268369920;
              }
              else
              {
                v55 = 0;
                if ((v51 & 0xFFFFFFFD) == 0x100)
                {
                  v33 = (int8x16_t)xmmword_2160F2B80;
                  *(_OWORD *)v19 = xmmword_2160F2B80;
                  v56 = 1;
                }
                else
                {
                  v56 = 4;
                }
                v167 = v56;
              }
              v57 = (_OWORD *)(v19 + 16);
              v58 = 4 * v36;
              v59 = (_DWORD)v39 != 2 || v43 == (_DWORD)v38;
              v152 = v51;
              if (!v59)
              {
LABEL_58:
                v60 = v9;
                v61 = 0;
                v169 = 0;
                *(_BYTE *)v19 = 32;
                goto LABEL_59;
              }
              if (v28 <= v52 && v52 <= v30)
              {
                v60 = v9;
                v169 = 0;
                *(_DWORD *)v19 = 67372036;
                v61 = 1;
LABEL_59:
                v171 = v53;
                v67 = (_BYTE *)v19;
                goto LABEL_60;
              }
              if (!(_DWORD)v58)
                goto LABEL_58;
              v60 = v9;
              v62 = v55;
              v63 = *(v22 - 1);
              if (*(_BYTE *)(v151[17] + v129 + v36))
              {
                if ((v63 & 0xCC0000) != 0)
                  v64 = 13382400;
                else
                  v64 = 0;
                if ((v63 & 0x330000) != 0)
                  v65 = 3342387;
                else
                  v65 = 0;
                v63 |= v65 | v64;
              }
              v66 = 0;
              v171 = v53 | (HIWORD(v63) << 28);
              v67 = (_BYTE *)v19;
              v55 = v62;
              while (1)
              {
                v169 = v66;
                if ((v66 & v49) != 0)
                {
                  v61 = 0;
                  *v67 = 32;
                }
                else
                {
                  v61 = 1;
                  v71 = v171;
                  if (v171 >> 28 != 15)
                  {
                    v136 = v38;
                    v154 = v49;
                    v156 = v22;
                    v72 = 0;
                    v73 = v146 + v169;
                    v150 = v36;
                    v148 = v23;
                    v149 = v19;
                    v165 = v55;
                    do
                    {
                      if ((v71 & 0x80000000) != 0)
                      {
                        v61 = 1;
                      }
                      else
                      {
                        v74 = *(int16x8_t **)(v17 + 8 * (v58 + v73));
                        v75 = *(int16x8_t **)(v17 + 8 * (v58 + v73 - 1));
                        if (v74 == v75)
                        {
                          LOBYTE(v85) = 0;
                          v61 = 1;
                        }
                        else
                        {
                          v29 = *v74;
                          v33 = *(int8x16_t *)v75;
                          v76 = vsubq_s16(*v74, *v75);
                          v77 = (int8x16_t)vmaxq_s16(v76, vnegq_s16(v76));
                          if ((v50 & 2) != 0)
                          {
                            v94 = vandq_s8((int8x16_t)vcgtq_s16((int16x8_t)vandq_s8(v77, v34), v31), v32);
                            v95 = vpaddq_s8(v94, v94);
                            v96 = vpaddq_s8(v95, v95);
                            v33 = vpaddq_s8(v96, v96);
                            v85 = v33.i16[0] != 0;
                          }
                          else
                          {
                            if ((vceqq_s8(*(int8x16_t *)&v29, v33).i32[3] & 1) == 0)
                            {
                              v173.val[0].i64[1] = 0xF0E0D0C0B0A0908;
                              v173.val[1] = vqtbl1q_s8(v33, (int8x16_t)xmmword_2160F1910);
                              v78.i32[0] = v173.val[1].u16[4];
                              v78.i32[1] = v173.val[1].u16[6];
                              *(uint32x2_t *)v173.val[0].i8 = vshr_n_u32((uint32x2_t)vrev32_s8(v78), 0x10uLL);
                              v173.val[0] = (int8x16_t)vsubq_s16(v29, (int16x8_t)vqtbl2q_s8(v173, (int8x16_t)xmmword_2160F2BF0));
                              v77 = (int8x16_t)vmaxq_s16((int16x8_t)v173.val[0], vnegq_s16((int16x8_t)v173.val[0]));
                            }
                            v79.i32[0] = v29.u8[12];
                            v79.i32[1] = v29.u8[13];
                            *(int8x8_t *)v29.i8 = vand_s8(v79, (int8x8_t)0xFF000000FFLL);
                            v79.i32[0] = v33.u8[13];
                            v79.i32[1] = v33.u8[12];
                            v80 = (int32x2_t)vand_s8(v79, (int8x8_t)0xFF000000FFLL);
                            v81 = xmmword_2160F2C10[(v29.u8[8] >> 4) & 2 | ((v29.i8[9] & 0xE0) >> 5)];
                            v82 = vandq_s8((int8x16_t)vcgtq_s16((int16x8_t)vandq_s8(v77, v81), (int16x8_t)vandq_s8(v14, v81)), v32);
                            v83 = vpaddq_s8(v82, v82);
                            v84 = vpaddq_s8(v83, v83);
                            v85 = vpaddq_s8(v84, v84).u16[0] != 0;
                            v86 = vsub_s32(*(int32x2_t *)v29.i8, v80);
                            *(int32x2_t *)v29.i8 = vdup_lane_s32(v86, 1);
                            *(int8x8_t *)v33.i8 = vorr_s8((int8x8_t)v86, *(int8x8_t *)v29.i8);
                            if (!v33.i32[0])
                            {
                              v87 = v21;
                              v88 = v58;
                              v89 = v39;
                              v90 = v57;
                              v91 = v53;
                              v92 = v50;
                              v93 = sub_2160E9B20(v74->i16, v75->i16, v164, 0, 0, *(int32x2_t *)v33.i8, *(int32x2_t *)v29.i8);
                              v50 = v92;
                              v53 = v91;
                              v57 = v90;
                              v39 = v89;
                              v58 = v88;
                              v21 = v87;
                              v23 = v148;
                              v19 = v149;
                              v36 = v150;
                              v34 = (int8x16_t)xmmword_2160F2BE0;
                              v32 = (int8x16_t)xmmword_2160F2980;
                              v31 = v160;
                              v17 = v161;
                              v16 = v162;
                              v14 = v163;
                              v85 = v93;
                            }
                            v55 = v165;
                          }
                          v61 = v85 | 1;
                        }
                        v67[v72] = v85;
                      }
                      v71 *= 2;
                      ++v72;
                      v73 += v16;
                    }
                    while (v72 != 4);
                    v60 = v140;
                    a4 = v141;
                    v28 = v138;
                    result = v139;
                    v22 = v156;
                    v38 = v136;
                    v30 = v137;
                    v37 = v143;
                    v49 = v154;
                    a5 = v144;
                  }
                }
LABEL_60:
                v55 |= v61;
                *v67 |= (32 * v61) ^ 0x20;
                v67 += 4;
                v66 = v169 + 1;
                if (v169 + 1 >= v167)
                  break;
                v171 *= 16;
              }
              *(_BYTE *)v19 |= ((_BYTE)v55 << 6) ^ 0x40;
              v68 = v21[v37];
              if ((_DWORD)v53)
              {
                v69 = (v53 & 0xFFF) == 4095;
                if ((v53 & 0xFFF) == 0xFFF)
                  v70 = 1;
                else
                  v70 = 4;
              }
              else
              {
                v69 = 0;
                if ((v152 & 0xFFFE) == 0x100)
                {
                  v33 = (int8x16_t)xmmword_2160F2B80;
                  *v57 = xmmword_2160F2B80;
                  v70 = 1;
                }
                else
                {
                  v70 = 4;
                }
              }
              v172 = v70;
              v9 = v60;
              v97 = (_DWORD)v53 << 16;
              if ((_DWORD)v39 == 2 && v158 != (_DWORD)v38)
              {
                v98 = 0;
                v99 = 0;
                *(_BYTE *)v57 = 32;
                v100 = v57;
                v101 = v172;
                goto LABEL_106;
              }
              v101 = v70;
              if (v28 <= v68 && v68 <= v30)
              {
                v99 = 0;
                *(_DWORD *)v57 = v135;
                v98 = 1;
LABEL_105:
                v100 = v57;
                goto LABEL_106;
              }
              if (!v134)
              {
                v98 = 0;
                v99 = 0;
                *(_BYTE *)v57 = 32;
                goto LABEL_105;
              }
              v102 = v22[v126];
              if (*(_BYTE *)(v151[17] + v36 + v128))
              {
                if ((v102 & 0x33000000) != 0)
                  v103 = 855638220;
                else
                  v103 = 0;
                if ((v102 & 0x330000) != 0)
                  v104 = 3342387;
                else
                  v104 = 0;
                v102 |= v104 | v103;
              }
              v99 = 0;
              v97 |= v102 << 28;
              v100 = v57;
              do
              {
                if ((v99 & v49) != 0)
                {
                  v98 = 0;
                  *v100 = 32;
                }
                else
                {
                  v98 = 1;
                  if (v97 >> 28 != 15)
                  {
                    v166 = v69;
                    v170 = v57;
                    v153 = v99;
                    v155 = v49;
                    v157 = v22;
                    v105 = 0;
                    v106 = v17 + 8 * (v58 + v142 * (4 * (v147 + v99) - 4));
                    v168 = v58;
                    v107 = v17 + 8 * (v58 + v16 * (v147 + v99));
                    v159 = v97;
                    do
                    {
                      if ((v97 & 0x80000000) != 0)
                      {
                        v98 = 1;
                      }
                      else
                      {
                        v108 = *(int16x8_t **)(v107 + 8 * v105);
                        v109 = *(int16x8_t **)(v106 + 8 * v105);
                        if (v108 == v109)
                        {
                          LOBYTE(v119) = 0;
                          v98 = 1;
                        }
                        else
                        {
                          v29 = *v108;
                          v33 = *(int8x16_t *)v109;
                          v110 = vsubq_s16(*v108, *v109);
                          v111 = (int8x16_t)vmaxq_s16(v110, vnegq_s16(v110));
                          if ((v50 & 2) != 0)
                          {
                            v123 = vandq_s8((int8x16_t)vcgtq_s16((int16x8_t)vandq_s8(v111, v34), v31), v32);
                            v124 = vpaddq_s8(v123, v123);
                            v125 = vpaddq_s8(v124, v124);
                            v33 = vpaddq_s8(v125, v125);
                            v119 = v33.i16[0] != 0;
                          }
                          else
                          {
                            if ((vceqq_s8(*(int8x16_t *)&v29, v33).i32[3] & 1) == 0)
                            {
                              v174.val[0].i64[1] = 0xF0E0D0C0B0A0908;
                              v174.val[1] = vqtbl1q_s8(v33, (int8x16_t)xmmword_2160F1910);
                              v112.i32[0] = v174.val[1].u16[4];
                              v112.i32[1] = v174.val[1].u16[6];
                              *(uint32x2_t *)v174.val[0].i8 = vshr_n_u32((uint32x2_t)vrev32_s8(v112), 0x10uLL);
                              v174.val[0] = (int8x16_t)vsubq_s16(v29, (int16x8_t)vqtbl2q_s8(v174, (int8x16_t)xmmword_2160F2BF0));
                              v111 = (int8x16_t)vmaxq_s16((int16x8_t)v174.val[0], vnegq_s16((int16x8_t)v174.val[0]));
                            }
                            v113.i32[0] = v29.u8[12];
                            v113.i32[1] = v29.u8[13];
                            *(int8x8_t *)v29.i8 = vand_s8(v113, (int8x8_t)0xFF000000FFLL);
                            v113.i32[0] = v33.u8[13];
                            v113.i32[1] = v33.u8[12];
                            v114 = (int32x2_t)vand_s8(v113, (int8x8_t)0xFF000000FFLL);
                            v115 = xmmword_2160F2C10[(v29.u8[8] >> 4) & 2 | ((v29.i8[9] & 0xE0) >> 5)];
                            v116 = vandq_s8((int8x16_t)vcgtq_s16((int16x8_t)vandq_s8(v111, v115), (int16x8_t)vandq_s8(v14, v115)), v32);
                            v117 = vpaddq_s8(v116, v116);
                            v118 = vpaddq_s8(v117, v117);
                            v119 = vpaddq_s8(v118, v118).u16[0] != 0;
                            v120 = vsub_s32(*(int32x2_t *)v29.i8, v114);
                            *(int32x2_t *)v29.i8 = vdup_lane_s32(v120, 1);
                            *(int8x8_t *)v33.i8 = vorr_s8((int8x8_t)v120, *(int8x8_t *)v29.i8);
                            if (!v33.i32[0])
                            {
                              v121 = v50;
                              v122 = sub_2160E9B20(v108->i16, v109->i16, v164, 0, 0, *(int32x2_t *)v33.i8, *(int32x2_t *)v29.i8);
                              v50 = v121;
                              v34 = (int8x16_t)xmmword_2160F2BE0;
                              v32 = (int8x16_t)xmmword_2160F2980;
                              v31 = v160;
                              v17 = v161;
                              v16 = v162;
                              v14 = v163;
                              v119 = v122;
                            }
                          }
                          v98 = v119 | 1;
                        }
                        v100[v105] = v119;
                      }
                      v97 *= 2;
                      ++v105;
                    }
                    while (v105 != 4);
                    a5 = v144;
                    v9 = v140;
                    a4 = v141;
                    v28 = v138;
                    result = v139;
                    v22 = v157;
                    v30 = v137;
                    v37 = v143;
                    v99 = v153;
                    v49 = v155;
                    v57 = v170;
                    v69 = v166;
                    LODWORD(v58) = v168;
                    v101 = v172;
                    v97 = v159;
                  }
                }
LABEL_106:
                v69 |= v98;
                *v100 |= (32 * v98) ^ 0x20;
                v100 += 4;
                v97 *= 16;
                ++v99;
              }
              while (v99 < v101);
              *(_BYTE *)v57 |= ((_BYTE)v69 << 6) ^ 0x40;
            }
          }
          ++v23;
          ++v22;
          ++v21;
          v19 += 48;
          ++v36;
          v35 = -1;
        }
        while (v36 < a4);
      }
      ++a5;
      a3 = v131;
      v146 += v130;
      v147 += 4;
      v24 = v142;
      v135 = v133;
    }
    while (a5 != a6);
  }
  return result;
}

uint64_t sub_21609E9C8(uint64_t *a1, uint64_t a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6, int32x4_t a7, int32x4_t a8, int32x4_t a9)
{
  uint64_t result;
  int v11;
  int v12;
  int v13;
  char v14;
  int32x4_t v15;
  int8x16_t v16;
  char *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t *v23;
  unsigned int *v24;
  int32x2_t v25;
  unsigned __int16 *v26;
  unsigned int v27;
  char v28;
  uint64_t v29;
  char v30;
  int16x8_t v31;
  unint64_t v32;
  unint64_t v33;
  int16x8_t v34;
  int8x16_t v35;
  int8x16_t v36;
  int8x16_t v37;
  int8x16_t v38;
  int8x16_t v39;
  int8x16_t v40;
  int8x16_t v41;
  int8x16_t v42;
  uint64_t v43;
  unsigned __int8 v44;
  unsigned int v45;
  _DWORD *v46;
  unsigned int v47;
  unint64_t v48;
  int v49;
  _BOOL4 v51;
  int8x16_t v52;
  unsigned int v53;
  int v54;
  unint64_t v55;
  int v56;
  _BOOL4 v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v63;
  _BYTE *v64;
  int v65;
  unsigned int v66;
  int v67;
  int v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  unint64_t v72;
  int v73;
  int v74;
  unsigned int v75;
  uint64_t v76;
  unsigned int v77;
  int v78;
  uint64_t v79;
  char v80;
  int v81;
  int16x8_t *v82;
  int16x8_t *v83;
  int16x8_t v85;
  int8x16_t v86;
  int8x16_t v87;
  int8x8_t v88;
  int16x8_t v89;
  int8x8_t v90;
  int32x2_t v91;
  int8x16_t v92;
  int8x16_t v93;
  int8x16_t v94;
  int8x16_t v95;
  _BOOL4 v96;
  int32x2_t v97;
  int v98;
  int8x16_t v99;
  int8x16_t v100;
  int8x16_t v101;
  int v102;
  unsigned int v103;
  int v104;
  int v105;
  _BYTE *v106;
  unsigned int v107;
  unsigned int v108;
  int v109;
  int v110;
  uint64_t v111;
  char v112;
  int v113;
  int v114;
  unsigned int v115;
  uint64_t v116;
  int16x8_t *v117;
  int16x8_t *v118;
  int16x8_t v120;
  int8x16_t v121;
  int8x16_t v122;
  int8x8_t v123;
  int16x8_t v124;
  int8x8_t v125;
  int32x2_t v126;
  int8x16_t v127;
  int8x16_t v128;
  int8x16_t v129;
  int8x16_t v130;
  _BOOL4 v131;
  int32x2_t v132;
  int v133;
  int8x16_t v134;
  int8x16_t v135;
  int8x16_t v136;
  uint64_t v137;
  uint64_t v138;
  int v139;
  char *v140;
  char v141;
  int v142;
  uint64_t *v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int *v147;
  unsigned int *v148;
  unsigned int v149;
  unsigned int v150;
  int v151;
  int v152;
  int v153;
  int16x8_t v154;
  int v155;
  int8x16_t v156;
  char v157;
  uint64_t v158;
  int v159;
  uint64_t v160;
  signed int v161;
  __int16 v162;
  unint64_t v163;
  int v164;
  unint64_t v165;
  char v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  unsigned int v173;
  int v174;
  unsigned __int8 v175;
  uint64_t v176;
  int v177;
  int v178;
  unsigned int v179;
  int v180;
  int v181;
  unsigned int v182;
  int v183;
  int v184;

  result = 0;
  v11 = *((unsigned __int8 *)a1 + 225);
  v12 = *((_DWORD *)a1 + 47);
  if (v12)
    v13 = 2;
  else
    v13 = 4;
  v161 = v13;
  if (v12)
    v14 = 3;
  else
    v14 = 4;
  if (a5 >= a6)
    return result;
  a7.i32[0] = 0;
  a8.i32[0] = 0;
  a9.i32[0] = *((_DWORD *)a1 + 47);
  v15 = vdupq_lane_s32((int32x2_t)*(_OWORD *)&vceqq_s32(a9, a7), 0);
  v16 = vbslq_s8((int8x16_t)v15, (int8x16_t)xmmword_2160F2BA0, (int8x16_t)xmmword_2160F2B90);
  v17 = (char *)&unk_2160F76A0 + dword_254E2EA68;
  v18 = *((unsigned int *)a1 + 3);
  v19 = 4 * v18;
  v20 = a1[6];
  v160 = *a1;
  v15.i32[0] = a9.i32[0];
  v21 = v18 * a5 + a3;
  v22 = a1[19] + 48 * v21;
  v23 = (unint64_t *)(*(_QWORD *)(a2 + 104) + 8 * v21);
  v24 = (unsigned int *)(a1[4] + 4 * v21);
  v25 = (int32x2_t)vceqq_s32(v15, a8).u64[0];
  v26 = (unsigned __int16 *)(a1[9] + 2 * v21);
  if (a5)
    v27 = *((_DWORD *)a1 + 3);
  else
    v27 = 0;
  if (a5)
    v28 = v14;
  else
    v28 = 32;
  if (a3)
    v29 = -1;
  else
    v29 = 0;
  v158 = v29;
  if (a3)
    v30 = 4;
  else
    v30 = 32;
  v157 = v30;
  v31 = (int16x8_t)xmmword_2160F2BB0;
  v32 = a2 + 32;
  v33 = a2 + 64;
  v137 = -v18;
  v169 = 4 * a5;
  v34 = (int16x8_t)vbslq_s8((int8x16_t)vdupq_lane_s32(v25, 0), (int8x16_t)xmmword_2160F2BC0, (int8x16_t)xmmword_2160F2BB0);
  v171 = 16 * v18 * a5;
  v159 = 16 * v18;
  v35 = (int8x16_t)xmmword_2160F2BD0;
  v36.i64[0] = 0x202020202020202;
  v36.i64[1] = 0x202020202020202;
  v37 = (int8x16_t)xmmword_2160F2B80;
  v38 = (int8x16_t)xmmword_2160F2980;
  v39 = (int8x16_t)xmmword_2160F1910;
  v40 = (int8x16_t)xmmword_2160F2BF0;
  v41 = (int8x16_t)xmmword_2160F2BE0;
  v42.i64[0] = 0x303030303030303;
  v42.i64[1] = 0x303030303030303;
  v163 = v33;
  v145 = a4;
  v146 = a6;
  v144 = a3;
  v143 = a1;
  v141 = v14;
  v142 = *((unsigned __int8 *)a1 + 225);
  v156 = v16;
  v139 = *((_DWORD *)a1 + 3);
  v140 = (char *)&unk_2160F76A0 + dword_254E2EA68;
  v155 = 4 * v18;
  v138 = a1[6];
  v165 = v32;
  v154 = v34;
  while (a3 >= a4)
  {
LABEL_151:
    ++a5;
    v169 += 4;
    v171 += v159;
    v27 = v18;
    v28 = v14;
    if (a5 == a6)
      return 0;
  }
  v175 = v28;
  v153 = 4 * a5;
  v151 = (a5 - 1) * v18;
  v152 = a5 * v18 - 1;
  v43 = v158;
  v44 = v157;
  v45 = a3;
  v176 = -(uint64_t)v27;
  while (1)
  {
    v37.i32[0] = 0;
    v31.i8[0] = *(_BYTE *)(a1[17] + v45 + *((_DWORD *)a1 + 3) * a5);
    v37 = vbslq_s8(vdupq_lane_s8((int8x8_t)*(_OWORD *)&vceqq_s8((int8x16_t)v31, v37), 0), v36, v35);
    *(int8x16_t *)(v22 + 16) = v37;
    v46 = (_DWORD *)(v22 + 16);
    *(int8x16_t *)v22 = v37;
    v47 = *v26;
    if (*((_DWORD *)a1 + 14) < v47)
      return 4294958327;
    if (*(_BYTE *)(v20 + 12 * *v26 + 9) != 1)
      break;
    *(_BYTE *)v22 = 0x80;
LABEL_67:
    ++v26;
    ++v24;
    ++v23;
    v22 += 48;
    ++v45;
    v44 = 4;
    v43 = -1;
    if (v45 >= a4)
      goto LABEL_151;
  }
  v183 = *(unsigned __int8 *)(v20 + 12 * *v26 + 9);
  v48 = *v23;
  v49 = v26[v43];
  v177 = v26[v176];
  v51 = v32 <= *v23 && v48 <= v33;
  if (v11 | v51)
  {
    v37.i32[0] = 0;
    v31.i8[0] = *(_BYTE *)(a1[17] + v45 + *((_DWORD *)a1 + 3) * a5);
    v52 = vdupq_lane_s8((int8x8_t)*(_OWORD *)&vceqq_s8((int8x16_t)v31, v37), 0);
    v31 = (int16x8_t)xmmword_2160F2C00;
    v37 = vbslq_s8(v52, v42, (int8x16_t)xmmword_2160F2C00);
    *(int8x16_t *)v22 = v37;
    *(int8x16_t *)(v22 + 16) = v37;
    *(_DWORD *)v22 = 16843009 * v44;
    *v46 = 16843009 * v175;
    if (v183 == 2)
    {
      *(_DWORD *)v22 = 16843009 * (v44 | (32 * (v49 != v47)));
      *v46 = 16843009 * (v175 | (32 * (v177 != v47)));
    }
    goto LABEL_67;
  }
  v53 = bswap32(*v24);
  v172 = *(unsigned __int8 *)(a1[17] + v45 + *((_DWORD *)a1 + 3) * a5);
  if (*(_BYTE *)(a1[17] + v45 + *((_DWORD *)a1 + 3) * a5))
  {
    v37 = vbicq_s8((int8x16_t)xmmword_2160F2B70, (int8x16_t)vceqzq_s32((int32x4_t)vandq_s8((int8x16_t)vdupq_n_s32(v53), (int8x16_t)xmmword_2160F2B60)));
    v31 = (int16x8_t)vextq_s8(v37, v37, 8uLL);
    *(int8x8_t *)v37.i8 = vorr_s8(*(int8x8_t *)v37.i8, *(int8x8_t *)v31.i8);
    v53 |= v37.i32[0] | v37.i32[1];
  }
  v166 = v17[*(unsigned __int8 *)(v20 + 12 * *v26 + 8)];
  v54 = *(unsigned __int16 *)(v48 + 10);
  v55 = v23[v43];
  v56 = (v53 >> 4) & 0xFFF0FFF | v53;
  v32 = v165;
  v162 = v54;
  if (v56)
  {
    v57 = ((v53 >> 4) & 0xFFF0000 | v53 & 0xFFF0000) == 268369920;
    if (((v53 >> 4) & 0xFFF0000 | v53 & 0xFFF0000) == 0xFFF0000)
      v58 = 1;
    else
      v58 = 4;
    v173 = v58;
    v164 = -1;
    v59 = *(unsigned __int8 *)(a1[17] + v45 + *((_DWORD *)a1 + 3) * a5);
    v60 = *(unsigned __int8 *)(v20 + 12 * *v26 + 9);
  }
  else
  {
    v60 = *(unsigned __int8 *)(v20 + 12 * *v26 + 9);
    if ((v54 & 0xFFFFFFFD) == 0x100)
    {
      v164 = 0;
      v57 = 0;
      v37 = (int8x16_t)xmmword_2160F2B80;
      *(_OWORD *)v22 = xmmword_2160F2B80;
      v61 = 1;
    }
    else
    {
      v57 = 0;
      v164 = -1;
      v61 = 4;
    }
    v173 = v61;
    v59 = v172;
  }
  v167 = 4 * v45;
  v168 = v56;
  if (v60 == 2 && v49 != v47)
  {
    v179 = v56;
    v181 = 0;
    v63 = 0;
    *(_BYTE *)v22 = 32;
    v64 = (_BYTE *)v22;
    v65 = v57;
LABEL_66:
    v71 = v173;
    goto LABEL_69;
  }
  v65 = v57;
  if (v165 <= v55 && v55 <= v33)
  {
    v181 = 0;
    *(_DWORD *)v22 = 67372036;
    v63 = 1;
LABEL_65:
    v179 = v56;
    v64 = (_BYTE *)v22;
    goto LABEL_66;
  }
  if (!v167)
  {
    v181 = 0;
    v63 = 0;
    *(_BYTE *)v22 = 32;
    goto LABEL_65;
  }
  v66 = bswap32(*(v24 - 1));
  if (*(_BYTE *)(a1[17] + v152 + v45))
  {
    if ((v66 & 0xCC0000) != 0)
      v67 = 13382400;
    else
      v67 = 0;
    if ((v66 & 0x330000) != 0)
      v68 = 3342387;
    else
      v68 = 0;
    v66 |= v68 | v67;
  }
  v69 = 0;
  v70 = v56 | (HIWORD(v66) << 28);
  v64 = (_BYTE *)v22;
  v65 = v57;
  v71 = v173;
  do
  {
    v179 = v70;
    v181 = v69;
    if ((v69 & v59) != 0)
    {
      v63 = 0;
      *v64 = 32;
    }
    else
    {
      v170 = v65;
      v75 = v70 >> 28;
      v63 = v164 | v75 | (v69 == 0);
      if (v63)
      {
        v63 = 1;
        if (v75 != 15)
        {
          v147 = v24;
          v149 = a5;
          v76 = 0;
          v77 = v179;
          v78 = v171 + v181;
          v79 = v160;
          v80 = v166;
          v81 = 4 * v45;
          while (1)
          {
            v82 = *(int16x8_t **)(v79 + 8 * (v81 + v78));
            v83 = *(int16x8_t **)(v79 + 8 * (v81 + v78 - 1));
            if (!v82 || v83 == 0)
              return 4294958327;
            if ((v77 & 0x80000000) != 0)
            {
              v63 = 1;
            }
            else
            {
              if (v82 == v83)
              {
                LOBYTE(v96) = 0;
                v63 = 1;
              }
              else
              {
                v31 = *v82;
                v37 = *(int8x16_t *)v83;
                v85 = vsubq_s16(*v82, *v83);
                v86 = (int8x16_t)vmaxq_s16(v85, vnegq_s16(v85));
                if ((v80 & 2) != 0)
                {
                  v99 = vandq_s8((int8x16_t)vcgtq_s16((int16x8_t)vandq_s8(v86, v41), v34), v38);
                  v100 = vpaddq_s8(v99, v99);
                  v101 = vpaddq_s8(v100, v100);
                  v37 = vpaddq_s8(v101, v101);
                  v96 = v37.i16[0] != 0;
                }
                else
                {
                  if ((vceqq_s8(*(int8x16_t *)&v31, v37).i32[3] & 1) == 0)
                  {
                    v87 = vqtbl1q_s8(v37, v39);
                    v88.i32[0] = v87.u16[4];
                    v88.i32[1] = v87.u16[6];
                    *(uint32x2_t *)v86.i8 = vshr_n_u32((uint32x2_t)vrev32_s8(v88), 0x10uLL);
                    v89 = vsubq_s16(v31, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v86.i8, v40));
                    v86 = (int8x16_t)vmaxq_s16(v89, vnegq_s16(v89));
                  }
                  v90.i32[0] = v31.u8[12];
                  v90.i32[1] = v31.u8[13];
                  *(int8x8_t *)v31.i8 = vand_s8(v90, (int8x8_t)0xFF000000FFLL);
                  v90.i32[0] = v37.u8[13];
                  v90.i32[1] = v37.u8[12];
                  v91 = (int32x2_t)vand_s8(v90, (int8x8_t)0xFF000000FFLL);
                  v92 = xmmword_2160F2C10[(v31.u8[8] >> 4) & 2 | ((v31.i8[9] & 0xE0) >> 5)];
                  v93 = vandq_s8((int8x16_t)vcgtq_s16((int16x8_t)vandq_s8(v86, v92), (int16x8_t)vandq_s8(v16, v92)), v38);
                  v94 = vpaddq_s8(v93, v93);
                  v95 = vpaddq_s8(v94, v94);
                  v96 = vpaddq_s8(v95, v95).u16[0] != 0;
                  v97 = vsub_s32(*(int32x2_t *)v31.i8, v91);
                  *(int32x2_t *)v31.i8 = vdup_lane_s32(v97, 1);
                  *(int8x8_t *)v37.i8 = vorr_s8((int8x8_t)v97, *(int8x8_t *)v31.i8);
                  if (!v37.i32[0])
                  {
                    v98 = sub_2160E9B20(v82->i16, v83->i16, v161, 0, 0, *(int32x2_t *)v37.i8, *(int32x2_t *)v31.i8);
                    v71 = v173;
                    v80 = v166;
                    v81 = 4 * v45;
                    v42.i64[0] = 0x303030303030303;
                    v42.i64[1] = 0x303030303030303;
                    v41 = (int8x16_t)xmmword_2160F2BE0;
                    v40 = (int8x16_t)xmmword_2160F2BF0;
                    v39 = (int8x16_t)xmmword_2160F1910;
                    v38 = (int8x16_t)xmmword_2160F2980;
                    v36.i64[0] = 0x202020202020202;
                    v36.i64[1] = 0x202020202020202;
                    v35 = (int8x16_t)xmmword_2160F2BD0;
                    v34 = v154;
                    v32 = v165;
                    v79 = v160;
                    v19 = v155;
                    v16 = v156;
                    v96 = v98;
                  }
                  v65 = v170;
                }
                v63 = v96 | 1;
              }
              v64[v76] = v96;
            }
            v77 *= 2;
            ++v76;
            v78 += v19;
            if (v76 == 4)
            {
              a4 = v145;
              a6 = v146;
              a5 = v149;
              a3 = v144;
              a1 = v143;
              v14 = v141;
              v11 = v142;
              LODWORD(v18) = v139;
              v17 = v140;
              v20 = v138;
              v24 = v147;
              v59 = v172;
              v60 = v183;
              break;
            }
          }
        }
      }
      else
      {
        *v64 = 32;
      }
    }
LABEL_69:
    v65 |= v63;
    *v64 |= (32 * v63) ^ 0x20;
    v64 += 4;
    v70 = 16 * v179;
    v69 = v181 + 1;
  }
  while (v181 + 1 < v71);
  *(_BYTE *)v22 |= ((_BYTE)v65 << 6) ^ 0x40;
  v72 = v23[v176];
  if (v168)
  {
    v73 = (v168 & 0xFFF) == 4095;
    if ((v168 & 0xFFF) == 0xFFF)
      v74 = 1;
    else
      v74 = 4;
    v184 = v74;
    v180 = -1;
  }
  else
  {
    if ((v162 & 0xFFFE) == 0x100)
    {
      v180 = 0;
      v73 = 0;
      v37 = (int8x16_t)xmmword_2160F2B80;
      *(_OWORD *)v46 = xmmword_2160F2B80;
      v102 = 1;
    }
    else
    {
      v73 = 0;
      v180 = -1;
      v102 = 4;
    }
    v184 = v102;
  }
  v103 = v168 << 16;
  if (v60 == 2 && v177 != v47)
  {
    v104 = 0;
    v105 = 0;
    *(_BYTE *)v46 = 32;
    v106 = (_BYTE *)(v22 + 16);
LABEL_122:
    v107 = v184;
    goto LABEL_123;
  }
  if (v32 <= v72 && v72 <= v163)
  {
    v104 = 0;
    *(_BYTE *)v46 = v175;
    *(_BYTE *)(v22 + 17) = v175;
    *(_BYTE *)(v22 + 18) = v175;
    v105 = 1;
    v106 = (_BYTE *)(v22 + 16);
    *(_BYTE *)(v22 + 19) = v175;
    goto LABEL_122;
  }
  v107 = v184;
  if (!v153)
  {
    v104 = 0;
    v105 = 0;
    *(_BYTE *)v46 = 32;
    v106 = (_BYTE *)(v22 + 16);
    goto LABEL_123;
  }
  v108 = bswap32(v24[v137]);
  if (*(_BYTE *)(a1[17] + v45 + v151))
  {
    if ((v108 & 0x33000000) != 0)
      v109 = 855638220;
    else
      v109 = 0;
    if ((v108 & 0x330000) != 0)
      v110 = 3342387;
    else
      v110 = 0;
    v108 |= v110 | v109;
  }
  v104 = 0;
  v103 = (v168 << 16) | (v108 << 28);
  v106 = (_BYTE *)(v22 + 16);
  while (1)
  {
    if ((v104 & v59) != 0)
    {
      v105 = 0;
      *v106 = 32;
      goto LABEL_123;
    }
    v182 = v103;
    v105 = v180 | (v103 >> 28) | (v104 == 0);
    if (!v105)
    {
      *v106 = 32;
      goto LABEL_123;
    }
    v105 = 1;
    if (v103 >> 28 != 15)
      break;
LABEL_123:
    v73 |= v105;
    *v106 |= (32 * v105) ^ 0x20;
    v106 += 4;
    v103 *= 16;
    if (++v104 >= v107)
    {
      *(_BYTE *)v46 |= ((_BYTE)v73 << 6) ^ 0x40;
      v33 = v163;
      goto LABEL_67;
    }
  }
  v148 = v24;
  v150 = a5;
  v111 = 0;
  v112 = v166;
  v113 = v167 + v19 * (v169 + v104);
  v114 = v167 + v18 * (4 * (v169 + v104) - 4);
  v115 = v103;
  v116 = v160;
  v178 = v73;
  v174 = v113;
  while (1)
  {
    v117 = *(int16x8_t **)(v116 + 8 * (v113 + v111));
    v118 = *(int16x8_t **)(v116 + 8 * (v114 + v111));
    if (!v117 || v118 == 0)
      return 4294958327;
    if ((v115 & 0x80000000) != 0)
    {
      v105 = 1;
    }
    else
    {
      if (v117 == v118)
      {
        LOBYTE(v131) = 0;
        v105 = 1;
      }
      else
      {
        v31 = *v117;
        v37 = *(int8x16_t *)v118;
        v120 = vsubq_s16(*v117, *v118);
        v121 = (int8x16_t)vmaxq_s16(v120, vnegq_s16(v120));
        if ((v112 & 2) != 0)
        {
          v134 = vandq_s8((int8x16_t)vcgtq_s16((int16x8_t)vandq_s8(v121, v41), v34), v38);
          v135 = vpaddq_s8(v134, v134);
          v136 = vpaddq_s8(v135, v135);
          v37 = vpaddq_s8(v136, v136);
          v131 = v37.i16[0] != 0;
        }
        else
        {
          if ((vceqq_s8(*(int8x16_t *)&v31, v37).i32[3] & 1) == 0)
          {
            v122 = vqtbl1q_s8(v37, v39);
            v123.i32[0] = v122.u16[4];
            v123.i32[1] = v122.u16[6];
            *(uint32x2_t *)v121.i8 = vshr_n_u32((uint32x2_t)vrev32_s8(v123), 0x10uLL);
            v124 = vsubq_s16(v31, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v121.i8, v40));
            v121 = (int8x16_t)vmaxq_s16(v124, vnegq_s16(v124));
          }
          v125.i32[0] = v31.u8[12];
          v125.i32[1] = v31.u8[13];
          *(int8x8_t *)v31.i8 = vand_s8(v125, (int8x8_t)0xFF000000FFLL);
          v125.i32[0] = v37.u8[13];
          v125.i32[1] = v37.u8[12];
          v126 = (int32x2_t)vand_s8(v125, (int8x8_t)0xFF000000FFLL);
          v127 = xmmword_2160F2C10[(v31.u8[8] >> 4) & 2 | ((v31.i8[9] & 0xE0) >> 5)];
          v128 = vandq_s8((int8x16_t)vcgtq_s16((int16x8_t)vandq_s8(v121, v127), (int16x8_t)vandq_s8(v16, v127)), v38);
          v129 = vpaddq_s8(v128, v128);
          v130 = vpaddq_s8(v129, v129);
          v131 = vpaddq_s8(v130, v130).u16[0] != 0;
          v132 = vsub_s32(*(int32x2_t *)v31.i8, v126);
          *(int32x2_t *)v31.i8 = vdup_lane_s32(v132, 1);
          *(int8x8_t *)v37.i8 = vorr_s8((int8x8_t)v132, *(int8x8_t *)v31.i8);
          if (!v37.i32[0])
          {
            v133 = sub_2160E9B20(v117->i16, v118->i16, v161, 0, 0, *(int32x2_t *)v37.i8, *(int32x2_t *)v31.i8);
            v113 = v174;
            v73 = v178;
            v112 = v166;
            v42.i64[0] = 0x303030303030303;
            v42.i64[1] = 0x303030303030303;
            v41 = (int8x16_t)xmmword_2160F2BE0;
            v40 = (int8x16_t)xmmword_2160F2BF0;
            v39 = (int8x16_t)xmmword_2160F1910;
            v38 = (int8x16_t)xmmword_2160F2980;
            v36.i64[0] = 0x202020202020202;
            v36.i64[1] = 0x202020202020202;
            v35 = (int8x16_t)xmmword_2160F2BD0;
            v34 = v154;
            v32 = v165;
            v116 = v160;
            v19 = v155;
            v16 = v156;
            v131 = v133;
          }
          v103 = v182;
        }
        v105 = v131 | 1;
      }
      v106[v111] = v131;
    }
    v115 *= 2;
    if (++v111 == 4)
    {
      a4 = v145;
      a6 = v146;
      a5 = v150;
      a3 = v144;
      a1 = v143;
      v14 = v141;
      v11 = v142;
      LODWORD(v18) = v139;
      v17 = v140;
      v20 = v138;
      v24 = v148;
      v59 = v172;
      goto LABEL_122;
    }
  }
}

uint64_t sub_21609F5B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unsigned int v4;
  unsigned __int8 v5;
  int v6;
  int8x16_t *v7;
  int v8;
  int16x8_t v9;
  int16x8_t v10;
  unsigned int v11;
  uint64_t result;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  unsigned int v19;
  int16x8_t v20;
  int8x16_t v21;
  int8x16_t v22;
  int8x16_t v23;
  int16x8_t v24;
  int16x8_t v25;
  int32x4_t v26;
  int16x8_t v27;
  int16x8_t v28;
  int32x4_t v29;
  int32x4_t v30;
  int16x8_t v31;
  int16x8_t v32;
  int16x8_t v33;
  int16x8_t v34;
  uint32x4_t v35;
  uint32x4_t v36;
  uint32x4_t v37;
  int16x8_t v38;
  int16x8_t v39;
  uint32x4_t v40;
  int32x4_t v41;
  int32x4_t v42;
  int16x8_t v43;
  int16x8_t v44;
  int32x4_t v45;
  int32x4_t v46;
  int32x4_t v47;
  int32x4_t v48;
  int32x4_t v49;
  int32x4_t v50;
  int32x4_t v51;
  int32x4_t v52;
  int32x4_t v53;
  int32x4_t v54;
  int32x4_t v55;
  int32x4_t v56;
  int32x4_t v57;
  int32x4_t v58;
  int32x4_t v59;
  int32x4_t v60;
  int32x4_t v61;
  int32x4_t v62;
  int32x4_t v63;
  int32x4_t v64;
  int32x4_t v65;
  int32x4_t v66;
  int32x4_t v67;
  int32x4_t v68;
  int32x4_t v69;
  int32x4_t v70;
  int32x4_t v71;
  int32x4_t v72;
  int32x4_t v73;
  int16x8_t v74;
  int16x8_t v75;
  int16x8_t v76;
  int16x8_t v77;
  int16x8_t v78;
  uint64_t v79;
  uint16x8_t v80;
  int8x16_t *v81;
  int32x4_t v82;
  int16x8_t v83;
  int16x8_t v84;
  int16x8_t *v85;
  int16x8_t v86;
  int8x16_t v87;
  int8x16_t v88;
  int8x16_t v89;
  int16x8_t v90;
  int16x8_t v91;
  int16x8_t v92;
  int16x8_t v93;
  int16x8_t v94;
  int16x8_t v95;
  int16x8_t v96;
  int64x2_t v97;
  int16x8_t v98;
  int32x4_t v99;
  int16x8_t v100;
  int64x2_t v101;
  int64x2_t v102;
  int32x4_t v103;
  int16x8_t v104;
  int16x8_t v105;
  int16x8_t v106;
  int16x8_t v107;
  int16x8_t v108;
  int16x8_t v109;
  int16x8_t v110;
  int16x8_t v111;
  int64x2_t v112;
  int16x8_t v113;
  int16x8_t v114;
  int16x8_t v115;
  int16x8_t v116;
  int16x8_t v117;
  int16x8_t v118;
  int16x8_t v119;
  int16x8_t v120;
  int16x8_t v121;
  int16x8_t v122;
  int16x8_t v123;
  int16x8_t v124;
  int16x8_t v125;
  int16x8_t v126;
  int16x8_t v127;
  int16x8_t v128;
  int16x8_t v129;
  int16x8_t v130;
  int64x2_t v131;
  int16x8_t v132;
  int16x8_t v133;
  int16x8_t v134;
  int16x8_t v135;
  int16x8_t v136;
  uint64_t v137;
  int16x8_t v138;
  int16x8_t v139;
  int8x16_t v140;
  int32x4_t *v141;
  int32x4_t v142;
  int32x4_t v143;
  int32x4_t v144;
  int v145;
  uint64_t v146;
  int8x16x2_t v147;
  int8x16x2_t v148;
  int8x16x2_t v149;
  int8x16x2_t v150;
  int8x16x2_t v151;

  v146 = *MEMORY[0x24BDAC8D0];
  v3 = *(_QWORD *)(a1 + 40);
  v4 = (*(unsigned __int8 *)(v3 + 55) / 6u) & 0x1F;
  v5 = *(_BYTE *)(v3 + 55) % 6u;
  v6 = *(unsigned __int8 *)(v3 + 52);
  v145 = v6;
  v144 = vdupq_n_s32(16843009 * v6);
  v7 = *(int8x16_t **)(a1 + 56);
  v8 = *(unsigned __int8 *)(a1 + 1422192);
  if (*(_BYTE *)(a1 + 1422192))
  {
    v9 = *(int16x8_t *)&asc_2160F3480[16 * v5];
    v10 = *(int16x8_t *)(a3 + 16 * v5);
    v11 = v4 - 4;
    if (v4 <= 3)
    {
      v19 = 0;
      v18 = 0;
      v13 = 1 << (3 - v4);
    }
    else
    {
      if (v4 >= 6)
      {
        result = 0;
        LOWORD(v13) = 0;
        v14 = 0;
        v15 = 0;
        v16 = 0;
        v17 = (unsigned __int16)(v4 - 6);
        v18 = 1;
        goto LABEL_9;
      }
      LOWORD(v13) = 0;
      v18 = 1;
      v19 = v4 - 4;
      v11 = 0;
    }
    v17 = 0;
    v16 = 6 - v4;
    result = 1;
    v15 = 1 << (5 - v4);
    v14 = v11;
    v11 = v19;
  }
  else
  {
    v18 = 0;
    LOWORD(v13) = 0;
    v14 = 0;
    v11 = 0;
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v10 = (int16x8_t)vshlq_u16(*(uint16x8_t *)&asc_2160F3480[16 * v5], (uint16x8_t)vdupq_n_s16(v4));
    result = 1;
    v9 = v10;
  }
LABEL_9:
  v20 = (int16x8_t)vqtbl1q_s8((int8x16_t)vzip1q_s16(v10, v10), (int8x16_t)xmmword_2160EE800);
  v21 = v7[1];
  v22.i64[0] = 0xFFFF000000000000;
  v22.i64[1] = 0xFFFF000000000000;
  v23.i64[0] = 0xFFFFLL;
  v23.i64[1] = 0xFFFFLL;
  v24 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vorrq_s8(vorrq_s8(vandq_s8(v21, (int8x16_t)xmmword_2160F2C90), vandq_s8(*v7, (int8x16_t)xmmword_2160F2C70)), vextq_s8((int8x16_t)0, vandq_s8(v21, v22), 0xEuLL)), (int8x16_t)xmmword_2160F2CA0), (int8x16_t)xmmword_2160F1920);
  v25 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vorrq_s8(vorrq_s8(vandq_s8(v21, (int8x16_t)xmmword_2160F2C80), vandq_s8(*v7, (int8x16_t)xmmword_2160F2C90)), vextq_s8(vandq_s8(*v7, v23), (int8x16_t)0, 2uLL)), (int8x16_t)xmmword_2160F1930), (int8x16_t)xmmword_2160F2CB0);
  if (v8)
  {
    if ((result & 1) == 0)
    {
      v33 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v24.i8, *(int16x4_t *)v20.i8), (int16x8_t)vmull_high_s16(v24, v20));
      v34 = vmulq_s16(v24, v20);
      v35 = (uint32x4_t)vzip2q_s16(v34, v33);
      v36 = (uint32x4_t)vdupq_n_s32(v17);
      v37 = (uint32x4_t)vzip1q_s16(v34, v33);
      v29 = (int32x4_t)vshlq_u32(v35, v36);
      v30 = (int32x4_t)vshlq_u32(v37, v36);
      v38 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v25.i8, *(int16x4_t *)v20.i8), (int16x8_t)vmull_high_s16(v25, v20));
      v39 = vmulq_s16(v25, v20);
      v40 = (uint32x4_t)vzip2q_s16(v39, v38);
      v26 = (int32x4_t)vzip1q_s16(v39, v38);
      v41 = (int32x4_t)vshlq_u32(v40, v36);
      v42 = (int32x4_t)vshlq_u32((uint32x4_t)v26, v36);
      v26.i32[0] = 0;
      goto LABEL_18;
    }
    v26.i32[0] = v16;
    v27 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v24.i8, *(int16x4_t *)v20.i8), (int16x8_t)vmull_high_s16(v24, v20));
    v28 = vmulq_s16(v24, v20);
    v29 = (int32x4_t)vzip2q_s16(v28, v27);
    v30 = vaddq_s32((int32x4_t)v15, (int32x4_t)vzip1q_s16(v28, v27));
    v31 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v25.i8, *(int16x4_t *)v20.i8), (int16x8_t)vmull_high_s16(v25, v20));
    v32 = vmulq_s16(v25, v20);
  }
  else
  {
    if ((v20.i8[0] & 3) != 0)
    {
      v26 = (int32x4_t)xmmword_2160F2CC0;
    }
    else
    {
      v26.i64[0] = 0x1000100010001;
      v26.i64[1] = 0x1000100010001;
      v20 = (int16x8_t)vshlq_u16((uint16x8_t)v20, (uint16x8_t)v26);
      v26.i8[0] = 0;
      v26.i16[1] = 0;
      v26.i32[1] = 0;
      v26.i64[1] = 0;
    }
    v43 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v24.i8, *(int16x4_t *)v20.i8), (int16x8_t)vmull_high_s16(v24, v20));
    v44 = vmulq_s16(v20, v24);
    v29 = (int32x4_t)vzip2q_s16(v44, v43);
    v30 = vaddq_s32(v26, (int32x4_t)vzip1q_s16(v44, v43));
    v31 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v25.i8, *(int16x4_t *)v20.i8), (int16x8_t)vmull_high_s16(v25, v20));
    v32 = vmulq_s16(v20, v25);
  }
  v41 = (int32x4_t)vzip2q_s16(v32, v31);
  v42 = (int32x4_t)vzip1q_s16(v32, v31);
LABEL_18:
  v45 = vaddq_s32(v30, v42);
  v46 = vaddq_s32(v29, v41);
  v47 = vsubq_s32(v30, v42);
  v48 = vsubq_s32(v29, v41);
  v49 = vaddq_s32(v45, v46);
  v50 = vsubq_s32(v45, v46);
  v51 = vsubq_s32(v47, v48);
  v52 = vaddq_s32(v47, v48);
  v53 = vzip1q_s32(v49, v51);
  v54 = vzip2q_s32(v49, v51);
  v55 = vzip1q_s32(v50, v52);
  v56 = vzip2q_s32(v50, v52);
  v57 = vzip1q_s32(v53, v55);
  v58 = vzip2q_s32(v53, v55);
  v59 = vzip1q_s32(v54, v56);
  v60 = vzip2q_s32(v54, v56);
  v61 = vaddq_s32(v57, v58);
  v62 = vsubq_s32(v57, v58);
  v63 = vaddq_s32(v59, v60);
  v64 = vsubq_s32(v59, v60);
  v65 = vaddq_s32(v61, v63);
  v66 = vsubq_s32(v61, v63);
  v67 = vsubq_s32(v62, v64);
  v68 = vaddq_s32(v62, v64);
  v69 = vdupq_n_s32(-v26.i32[0]);
  v70 = vshlq_s32(v65, v69);
  v71 = vshlq_s32(v66, v69);
  v72 = vshlq_s32(v67, v69);
  v73 = vshlq_s32(v68, v69);
  *(int16x4_t *)v69.i8 = vqmovn_s32(v70);
  *(int16x4_t *)v70.i8 = vqmovn_s32(v71);
  *(int16x4_t *)v71.i8 = vqmovn_s32(v72);
  *(int16x4_t *)v73.i8 = vqmovn_s32(v73);
  v74 = (int16x8_t)vzip1q_s32(v69, v70);
  v75 = (int16x8_t)vzip1q_s32(v71, v73);
  v76 = (int16x8_t)vqtbl1q_s8((int8x16_t)xmmword_2160F2CD0, (int8x16_t)xmmword_2160EE800);
  v77 = vqaddq_s16(v74, v76);
  v78 = vqaddq_s16(v75, v76);
  if (v6)
  {
    v79 = 0;
    v80 = (uint16x8_t)vdupq_n_s16(v11);
    v81 = v7 + 3;
    v82 = vdupq_n_s32(v14);
    v83.i64[0] = 0x5000500050005;
    v83.i64[1] = 0x5000500050005;
    result = (uint64_t)&unk_2160F2000;
    v84.i64[0] = -1;
    v84.i64[1] = -1;
    do
    {
      v85 = (int16x8_t *)(a2 + (unsigned __int16)word_2160F3450[v79]);
      if (v144.i16[v79])
      {
        v86 = (int16x8_t)vandq_s8((int8x16_t)v77, (int8x16_t)xmmword_2160F2DA0);
        v87 = v81[-1];
        v88 = v81[1];
        v89 = v81[2];
        v151.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v87, (int8x16_t)xmmword_2160F2CE0), (int8x16_t)xmmword_2160F2CF0), (int8x16_t)xmmword_2160F2D00);
        v151.val[1] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(*v81, (int8x16_t)xmmword_2160F2D10), (int8x16_t)xmmword_2160F2D20), (int8x16_t)xmmword_2160F19A0);
        v90 = (int16x8_t)vqtbl2q_s8(v151, (int8x16_t)xmmword_2160F2D30);
        v147.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v87, (int8x16_t)xmmword_2160F2D40), (int8x16_t)xmmword_2160F2D50), (int8x16_t)xmmword_2160EE7C0);
        v147.val[1] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(*v81, (int8x16_t)xmmword_2160F2D60), (int8x16_t)xmmword_2160F1820), (int8x16_t)xmmword_2160F1990);
        v91 = (int16x8_t)vqtbl2q_s8(v147, (int8x16_t)xmmword_2160F2D70);
        v149.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v88, (int8x16_t)xmmword_2160F2CE0), (int8x16_t)xmmword_2160F2CF0), (int8x16_t)xmmword_2160F2D00);
        v149.val[1] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v89, (int8x16_t)xmmword_2160F2D10), (int8x16_t)xmmword_2160F2D20), (int8x16_t)xmmword_2160F19A0);
        v92 = (int16x8_t)vqtbl2q_s8(v149, (int8x16_t)xmmword_2160F2D30);
        v149.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v88, (int8x16_t)xmmword_2160F2D40), (int8x16_t)xmmword_2160F2D50), (int8x16_t)xmmword_2160EE7C0);
        v149.val[1] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v89, (int8x16_t)xmmword_2160F2D60), (int8x16_t)xmmword_2160F1820), (int8x16_t)xmmword_2160F1990);
        v93 = (int16x8_t)vqtbl2q_s8(v149, (int8x16_t)xmmword_2160F2D70);
        if (v8)
        {
          if (v18)
          {
            v94 = (int16x8_t)vshlq_u16((uint16x8_t)vmulq_s16(v90, v9), v80);
            v95 = (int16x8_t)vshlq_u16((uint16x8_t)vmulq_s16(v91, v9), v80);
            v96 = (int16x8_t)vshlq_u16((uint16x8_t)vmulq_s16(v92, v9), v80);
            v97 = (int64x2_t)vshlq_u16((uint16x8_t)vmulq_s16(v93, v9), v80);
          }
          else
          {
            v103 = (int32x4_t)vqtbl1q_s8((int8x16_t)(__int16)v13, (int8x16_t)xmmword_2160EE800);
            v104 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v90.i8, *(int16x4_t *)v9.i8), (int16x8_t)vmull_high_s16(v90, v9));
            v105 = vmulq_s16(v90, v9);
            v94 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v105, v104), v103), v82)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v105, v104), v103), v82));
            v106 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v91.i8, *(int16x4_t *)v9.i8), (int16x8_t)vmull_high_s16(v91, v9));
            v107 = vmulq_s16(v91, v9);
            v95 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v107, v106), v103), v82)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v107, v106), v103), v82));
            v108 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v92.i8, *(int16x4_t *)v9.i8), (int16x8_t)vmull_high_s16(v92, v9));
            v109 = vmulq_s16(v92, v9);
            v96 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v109, v108), v103), v82)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v109, v108), v103), v82));
            v110 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v93.i8, *(int16x4_t *)v9.i8), (int16x8_t)vmull_high_s16(v93, v9));
            v111 = vmulq_s16(v93, v9);
            v97 = (int64x2_t)vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v111, v110), v103), v82)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v111, v110), v103), v82));
          }
          v101 = (int64x2_t)vaddq_s16(v94, v86);
          v102 = (int64x2_t)vaddq_s16(v96, v86);
        }
        else
        {
          v101 = (int64x2_t)vmlaq_s16(v86, v90, v9);
          v95 = vmulq_s16(v91, v9);
          v102 = (int64x2_t)vmlaq_s16(v86, v92, v9);
          v97 = (int64x2_t)vmulq_s16(v93, v9);
        }
        v112 = v101;
        v112.i16[0] = v77.i16[0];
        v113 = (int16x8_t)vzip2q_s64(v101, v102);
        v102.i16[0] = vqtbl1q_s8((int8x16_t)vzip1q_s16(v77, v77), (int8x16_t)xmmword_2160F18A0).u16[0];
        v114 = (int16x8_t)vzip1q_s64(v112, v102);
        v115 = (int16x8_t)vzip2q_s64((int64x2_t)v95, v97);
        v95.i64[1] = v97.i64[0];
        v116 = vaddq_s16(v114, v95);
        v117 = vsubq_s16(v114, v95);
        v118 = vshlq_s16(v115, v84);
        v119 = vsubq_s16(vshlq_s16(v113, v84), v115);
        v120 = vaddq_s16(v118, v113);
        v121 = vaddq_s16(v116, v120);
        v122 = vaddq_s16(v117, v119);
        v123 = vsubq_s16(v117, v119);
        v124 = vsubq_s16(v116, v120);
        v125 = vzip1q_s16(v121, v123);
        v126 = vzip2q_s16(v121, v123);
        v127 = vzip1q_s16(v122, v124);
        v128 = vzip2q_s16(v122, v124);
        v148.val[1] = (int8x16_t)vdupq_lane_s64(v126.i64[0], 0);
        v148.val[0] = (int8x16_t)vdupq_lane_s64(v128.i64[0], 0);
        v129 = vzip1q_s16(v125, v127);
        v148.val[0] = vqtbl2q_s8(v148, (int8x16_t)xmmword_2160F2C40);
        v148.val[1] = (int8x16_t)vzip2q_s64((int64x2_t)v129, (int64x2_t)v148.val[0]);
        v150.val[1] = (int8x16_t)vdupq_laneq_s64((int64x2_t)v125, 1);
        v150.val[0] = (int8x16_t)vdupq_laneq_s64((int64x2_t)v127, 1);
        v130 = (int16x8_t)vqtbl2q_s8(v150, (int8x16_t)xmmword_2160F1950);
        v131 = (int64x2_t)vzip2q_s16(v126, v128);
        v132 = (int16x8_t)vzip2q_s64((int64x2_t)v130, v131);
        v129.i64[1] = v148.val[0].i64[0];
        v130.i64[1] = v131.i64[0];
        v133 = vaddq_s16(v129, v130);
        v134 = vsubq_s16(v129, v130);
        v148.val[0] = (int8x16_t)vshlq_s16(v132, v84);
        v135 = vsubq_s16(vshlq_s16((int16x8_t)v148.val[1], v84), v132);
        v136 = vaddq_s16((int16x8_t)v148.val[0], (int16x8_t)v148.val[1]);
        *v85 = vshlq_s16(vaddq_s16(v133, v136), v83);
        v85[2] = vshlq_s16(vaddq_s16(v134, v135), v83);
        v100 = vshlq_s16(vsubq_s16(v133, v136), v83);
        v85[4] = vshlq_s16(vsubq_s16(v134, v135), v83);
      }
      else
      {
        v98 = vshlq_s16(v77, v83);
        v99 = (int32x4_t)vzip1q_s16(v98, v98);
        v100 = (int16x8_t)vzip1q_s32(v99, v99);
        *v85 = v100;
        v85[2] = v100;
        v85[4] = v100;
      }
      v85[6] = v100;
      ++v79;
      v77 = (int16x8_t)vextq_s8((int8x16_t)v77, (int8x16_t)v78, 4uLL);
      v78 = (int16x8_t)vqtbl1q_s8((int8x16_t)v78, (int8x16_t)xmmword_2160F2D80);
      v81 += 4;
    }
    while (v79 != 8);
  }
  else
  {
    v137 = 0;
    v138.i64[0] = 0x5000500050005;
    v138.i64[1] = 0x5000500050005;
    v139 = vshlq_s16(v77, v138);
    v140 = (int8x16_t)vshlq_s16(v78, v138);
    do
    {
      v141 = (int32x4_t *)(a2 + (unsigned __int16)word_2160F3450[v137]);
      v142 = (int32x4_t)vzip1q_s16(v139, v139);
      v143 = vzip1q_s32(v142, v142);
      *v141 = v143;
      v141[2] = v143;
      v141[4] = v143;
      v141[6] = v143;
      v139 = (int16x8_t)vextq_s8((int8x16_t)v139, v140, 4uLL);
      v140 = vqtbl1q_s8(v140, (int8x16_t)xmmword_2160F2D80);
      ++v137;
    }
    while (v137 != 8);
  }
  return result;
}

int16x8_t sub_21609FD64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned __int8 v6;
  int v7;
  uint64_t v8;
  int v9;
  int16x8_t v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  unsigned __int16 v15;
  unsigned __int16 v16;
  int v17;
  int v18;
  int16x8_t v19;
  int16x8_t v20;
  int16x8_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int16x8_t v25;
  int16x8_t v26;
  int32x4_t v27;
  int32x4_t v28;
  int16x8_t result;
  uint64_t v30;
  int16x8_t v31;
  int8x16_t v32;
  int32x4_t *v33;
  int32x4_t v34;
  int32x4_t v35;
  int16x8_t v36;
  int16x8_t v37;
  int16x8_t v38;
  int32x4_t v39;
  int v40;
  int16x8_t v41[2];
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 40);
  v5 = (*(unsigned __int8 *)(v4 + 55) / 6u) & 0x1F;
  v6 = *(_BYTE *)(v4 + 55) % 6u;
  v7 = *(unsigned __int8 *)(v4 + 52);
  v40 = v7;
  v39 = vdupq_n_s32(16843009 * v7);
  v8 = *(_QWORD *)(a1 + 56);
  v9 = *(unsigned __int8 *)(a1 + 1422192);
  if (*(_BYTE *)(a1 + 1422192))
  {
    v36 = *(int16x8_t *)&asc_2160F3480[16 * v6];
    v10 = *(int16x8_t *)(a3 + 16 * v6);
    if (v5 <= 3)
    {
      v11 = 0;
      v18 = 0;
      v13 = 4 - v5;
      v12 = 1 << (3 - v5);
    }
    else
    {
      v11 = v5 - 4;
      if (v5 >= 6)
      {
        LOWORD(v12) = 0;
        v13 = 0;
        LOWORD(v14) = 0;
        v15 = 0;
        v16 = v5 - 6;
        v17 = 1;
        v18 = 1;
        goto LABEL_9;
      }
      v13 = 0;
      LOWORD(v12) = 0;
      v18 = 1;
    }
    v17 = 0;
    v16 = 0;
    v15 = 6 - v5;
    v14 = 1 << (5 - v5);
  }
  else
  {
    v17 = 0;
    v18 = 0;
    LOWORD(v12) = 0;
    v13 = 0;
    v11 = 0;
    LOWORD(v14) = 0;
    v15 = 0;
    v16 = 0;
    v10 = (int16x8_t)vshlq_u16(*(uint16x8_t *)&asc_2160F3480[16 * v6], (uint16x8_t)vdupq_n_s16(v5));
    v36 = v10;
  }
LABEL_9:
  sub_2160AAE5C(v8, (float *)v41[0].i32, v17, v9, v16, v15, v14, (uint16x8_t)vqtbl1q_s8((int8x16_t)vzip1q_s16(v10, v10), (int8x16_t)xmmword_2160EE800));
  v19 = (int16x8_t)vqtbl1q_s8((int8x16_t)xmmword_2160F2CD0, (int8x16_t)xmmword_2160EE800);
  v20 = vqaddq_s16(v41[0], v19);
  v21 = vqaddq_s16(v41[1], v19);
  if (v7)
  {
    v22 = 0;
    v23 = v8 + 32;
    do
    {
      v24 = a2 + (unsigned __int16)word_2160F3450[v22];
      if (v39.i16[v22])
      {
        v37 = v20;
        v38 = v21;
        sub_2160AB02C(v23, v23 + 32, (int16x8_t *)v24, v18, v11, v13, (__int16)v12, v9, (int16x8_t)v20.u16[0], (__n128)vqtbl1q_s8((int8x16_t)vzip1q_s16(v20, v20), (int8x16_t)xmmword_2160F18A0), v36);
        v20 = v37;
        v21 = v38;
      }
      else
      {
        v25.i64[0] = 0x5000500050005;
        v25.i64[1] = 0x5000500050005;
        v26 = vshlq_s16(v20, v25);
        v27 = (int32x4_t)vzip1q_s16(v26, v26);
        v28 = vzip1q_s32(v27, v27);
        *(int32x4_t *)v24 = v28;
        *(int32x4_t *)(v24 + 32) = v28;
        *(int32x4_t *)(v24 + 64) = v28;
        *(int32x4_t *)(v24 + 96) = v28;
      }
      ++v22;
      v20 = (int16x8_t)vextq_s8((int8x16_t)v20, (int8x16_t)v21, 4uLL);
      result = (int16x8_t)xmmword_2160F2D80;
      v21 = (int16x8_t)vqtbl1q_s8((int8x16_t)v21, (int8x16_t)xmmword_2160F2D80);
      v23 += 64;
    }
    while (v22 != 8);
  }
  else
  {
    v30 = 0;
    v31.i64[0] = 0x5000500050005;
    v31.i64[1] = 0x5000500050005;
    result = vshlq_s16(v20, v31);
    v32 = (int8x16_t)vshlq_s16(v21, v31);
    do
    {
      v33 = (int32x4_t *)(a2 + (unsigned __int16)word_2160F3450[v30]);
      v34 = (int32x4_t)vzip1q_s16(result, result);
      v35 = vzip1q_s32(v34, v34);
      *v33 = v35;
      v33[2] = v35;
      v33[4] = v35;
      v33[6] = v35;
      result = (int16x8_t)vextq_s8((int8x16_t)result, v32, 4uLL);
      v32 = vqtbl1q_s8(v32, (int8x16_t)xmmword_2160F2D80);
      ++v30;
    }
    while (v30 != 8);
  }
  return result;
}

void sub_2160A0064(uint64_t a1, _OWORD *a2)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  unsigned __int8 v6;
  int v7;
  int v8;
  int8x16_t *v9;
  int v10;
  int v11;
  unsigned int v12;
  int8x16_t *v13;
  uint16x4_t *v14;
  int v15;
  char v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  unsigned __int16 v21;
  int v22;
  uint32x4_t v23;
  uint64_t i;
  _WORD *v25;
  uint64_t v26;
  unsigned __int16 v27;
  int16x8_t *v28;
  int8x16_t *v29;
  __int16 v30;
  int16x8_t v31;
  _BYTE v32[16];
  int v33;
  int16x8_t v34;
  _QWORD v35[4];

  v35[3] = *MEMORY[0x24BDAC8D0];
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(unsigned __int8 *)(v3 + 52);
  if (*(_BYTE *)(v3 + 52))
  {
    v5 = 0;
    v6 = *(_BYTE *)(v3 + 55);
    v33 = *(unsigned __int8 *)(v3 + 52);
    do
    {
      v7 = v4 & 1;
      v4 >>= 1;
      *(_DWORD *)&v32[v5] = -v7;
      v5 += 4;
    }
    while (v5 != 16);
    v8 = *(unsigned __int8 *)(a1 + 1422192);
    v9 = *(int8x16_t **)(a1 + 56);
    v10 = *(unsigned __int8 *)(a1 + 31);
    v11 = v33;
    *a2 = 0u;
    a2[1] = 0u;
    a2[2] = 0u;
    a2[3] = 0u;
    a2[4] = 0u;
    a2[5] = 0u;
    a2[6] = 0u;
    a2[7] = 0u;
    a2[8] = 0u;
    a2[9] = 0u;
    a2[10] = 0u;
    a2[11] = 0u;
    a2[12] = 0u;
    a2[13] = 0u;
    a2[14] = 0u;
    a2[15] = 0u;
    a2[16] = 0u;
    a2[17] = 0u;
    a2[18] = 0u;
    a2[19] = 0u;
    a2[20] = 0u;
    a2[21] = 0u;
    a2[22] = 0u;
    a2[23] = 0u;
    a2[24] = 0u;
    a2[25] = 0u;
    a2[26] = 0u;
    a2[27] = 0u;
    a2[28] = 0u;
    a2[29] = 0u;
    a2[30] = 0u;
    a2[31] = 0u;
    if (v11)
    {
      v12 = (v6 / 6u) & 0x1F;
      v13 = v9 + 2;
      if (v10 == 2)
      {
        v14 = (uint16x4_t *)&asc_2160F3480[2 * (8 * (v6 % 6u))];
        if (v8)
        {
          v34 = *(int16x8_t *)v14->i8;
          v15 = v8;
          if (v12 < 4)
          {
            v30 = 0;
            v18 = 0;
            v16 = 4 - v12;
            v17 = 1 << (3 - v12);
          }
          else
          {
            v16 = 0;
            LOWORD(v17) = 0;
            v30 = v12 - 4;
            v18 = 1;
          }
        }
        else
        {
          v15 = 0;
          v30 = 0;
          v16 = 0;
          LOWORD(v17) = 0;
          v18 = 0;
          v23 = (uint32x4_t)vdupq_n_s32(v12);
          v34 = vuzp1q_s16((int16x8_t)vshlq_u32(vmovl_u16(*v14), v23), (int16x8_t)vshlq_u32(vmovl_u16(v14[1]), v23));
        }
        for (i = 0; i != 8; ++i)
        {
          if (*(_WORD *)&v32[i * 2])
          {
            v25 = (_WORD *)((char *)a2 + (unsigned __int16)word_2160F3450[i]);
            v35[0] = 0;
            v35[1] = 0;
            sub_2160AB7A8(v13->i16, v13[2].i16, (__int16 *)&xmmword_2160F2D90, (__int16 *)&xmmword_2160F2D90, (unsigned __int16 *)v35, (unsigned __int16 *)&v34, v25, 1, v18, v30, SHIBYTE(v30), v16, v17, v15);
          }
          v13 += 4;
        }
      }
      else
      {
        if (v8)
        {
          v31 = *(int16x8_t *)&asc_2160F3480[16 * (v6 % 6u)];
          v19 = v12 - 4;
          if (v12 < 4)
          {
            v22 = 0;
            v19 = 0;
            v21 = 4 - v12;
            v20 = 1 << (3 - v12);
          }
          else
          {
            LOWORD(v20) = 0;
            v21 = 0;
            v22 = 1;
          }
        }
        else
        {
          v22 = 0;
          LOWORD(v20) = 0;
          v21 = 0;
          v19 = 0;
          v31 = (int16x8_t)vshlq_u16(*(uint16x8_t *)&asc_2160F3480[2 * (8 * (v6 % 6u))], (uint16x8_t)vdupq_n_s16(v12));
        }
        v26 = 0;
        v27 = v20;
        do
        {
          if (*(_WORD *)&v32[v26 * 2])
          {
            v28 = (int16x8_t *)((char *)a2 + (unsigned __int16)word_2160F3450[v26]);
            v29 = v13 + 2;
            if (v8)
              sub_2160AB29C(v13, v29, v28, v22, v19, v21, v27, (int16x8_t)xmmword_2160F2D90, v31);
            else
              sub_2160AB578(v13, v29, v28, 1, (int16x8_t)xmmword_2160F2D90, v31);
          }
          ++v26;
          v13 += 4;
        }
        while (v26 != 8);
      }
    }
  }
  else
  {
    off_254E2EA60(a2, 16);
  }
}

uint64_t sub_2160A0428(uint64_t result, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  unsigned __int8 v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  __int16 *v12;
  char v13;
  int v14;
  unsigned int v15;
  BOOL v16;
  _BOOL4 v17;
  int v18;
  int v19;
  char v20;
  unsigned int v21;
  unsigned int v22;
  __int16 *v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  unsigned int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  int v213;
  int v214;
  char v215;
  int v216;
  unsigned __int16 *v217;
  int v218;
  __int16 *v219;
  int v220;
  unsigned int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  int v289;
  int v290;
  int v291;
  int v292;
  int v293;
  int v294;
  int v295;
  int v296;
  int v297;
  int v298;
  int v299;
  int v300;
  int v301;
  int v302;
  int v303;
  int v304;
  int v305;
  int v306;
  int v307;
  int v308;
  int v309;
  int v310;
  int v311;
  int v312;
  int v313;
  int v314;
  int v315;
  int v316;
  int v317;
  int v318;
  int v319;
  int v320;
  int v321;
  int v322;
  int v323;
  int v324;
  int v325;
  int v326;
  int v327;
  int v328;
  int v329;
  int v330;
  int v331;
  int v332;
  int v333;
  int v334;
  int v335;
  int v336;
  int v337;
  int v338;
  int v339;
  int v340;
  int v341;
  int v342;
  int v343;
  int v344;
  int v345;
  int v346;
  int v347;
  int v348;
  int v349;
  int v350;
  int v351;
  int v352;
  int v353;
  int v354;
  int v355;
  int v356;
  int v357;
  int v358;
  int v359;
  int v360;
  int v361;
  int v362;
  int v363;
  int v364;
  int v365;
  int v366;
  int v367;
  int v368;
  int v369;
  int v370;
  int v371;
  int v372;
  int v373;
  int v374;
  int v375;
  int v376;
  int v377;
  int v378;
  int v379;
  int v380;
  int v381;
  int v382;
  int v383;
  int v384;
  int v385;
  int v386;
  int v387;
  int v388;
  int v389;
  int v390;
  int v391;
  int v392;
  int v393;
  int v394;
  int v395;
  int v396;
  int v397;
  int v398;
  int v399;
  int v400;
  int v401;
  int v402;
  int v403;
  int v404;
  int v405;
  int v406;
  int v407;
  int v408;
  int v409;
  int v410;
  int v411;
  int v412;
  int v413;
  int v414;
  int v415;
  int v416;
  int v417;
  int v418;
  int v419;
  int v420;
  int v421;
  int v422;
  int v423;
  int v424;
  int v425;
  int v426;
  int v427;
  int v428;
  int v429;
  int v430;
  int v431;
  int v432;
  int v433;
  int v434;
  int v435;
  int v436;
  int v437;
  int v438;
  int v439;
  int v440;
  int v441;
  int v442;
  int v443;
  int v444;
  int v445;
  int v446;
  int v447;
  int v448;
  int v449;
  int v450;
  int v451;
  int v452;
  int v453;
  int v454;
  int v455;
  int v456;
  int v457;
  int v458;
  int v459;
  int v460;
  int v461;
  int v462;
  int v463;
  int v464;
  int v465;
  int v466;
  int v467;
  int v468;
  int v469;
  int v470;
  int v471;
  int v472;
  int v473;
  int v474;
  int v475;
  int v476;
  int v477;
  int v478;
  int v479;
  int v480;
  int v481;
  int v482;
  int v483;
  int v484;
  int v485;
  int v486;
  int v487;
  int v488;
  int v489;
  int v490;
  int v491;
  int v492;
  int v493;
  int v494;
  int v495;
  int v496;
  int v497;
  int v498;
  int v499;
  int v500;
  int v501;
  int v502;
  int v503;
  int v504;
  int v505;
  int v506;
  int v507;
  int v508;
  int v509;
  int v510;
  int v511;
  int v512;
  int v513;
  int v514;
  int v515;
  int v516;
  int v517;
  int v518;
  int v519;
  int v520;
  int v521;
  int v522;
  int v523;
  int v524;
  int v525;
  int v526;
  int v527;
  int v528;
  int v529;
  unsigned int v530;
  _WORD *v531;
  __int16 *v532;
  unsigned int v533;
  uint64_t v534;
  int v535;
  int v536;
  int v537;
  int v538;
  int v539;
  int v540;
  int v541;
  int v542;
  int v543;
  int v544;
  int v545;
  int v546;
  int v547;
  int v548;
  int v549;
  int v550;
  int v551;
  int v552;
  int v553;
  int v554;
  int v555;
  int v556;
  int v557;
  int v558;
  int v559;
  int v560;
  int v561;
  int v562;
  int v563;
  int v564;
  int v565;
  int v566;
  int v567;
  int v568;
  int v569;
  int v570;
  int v571;
  int v572;
  int v573;
  int v574;
  int v575;
  int v576;
  int v577;
  int v578;
  int v579;
  int v580;
  int v581;
  int v582;
  int v583;
  int v584;
  int v585;
  int v586;
  int v587;

  v3 = 0;
  v4 = *(_QWORD *)(result + 40);
  v5 = *(unsigned __int8 *)(v4 + 52);
  v6 = *(_BYTE *)(v4 + 55);
  v7 = *(_QWORD *)(result + 56);
  v8 = *(unsigned __int8 *)(result + 1422192);
  a2[30] = 0u;
  a2[31] = 0u;
  a2[28] = 0u;
  a2[29] = 0u;
  a2[26] = 0u;
  a2[27] = 0u;
  a2[24] = 0u;
  a2[25] = 0u;
  a2[22] = 0u;
  a2[23] = 0u;
  a2[20] = 0u;
  a2[21] = 0u;
  a2[18] = 0u;
  a2[19] = 0u;
  v9 = v6;
  a2[16] = 0u;
  a2[17] = 0u;
  v10 = v6 / 6u;
  v11 = v6 % 6u;
  a2[14] = 0u;
  a2[15] = 0u;
  a2[12] = 0u;
  a2[13] = 0u;
  v217 = (unsigned __int16 *)((char *)&unk_2160F34F0 + 128 * v11);
  a2[10] = 0u;
  a2[11] = 0u;
  v12 = (__int16 *)(a3 + (v11 << 7));
  v13 = 6 - v10;
  a2[8] = 0u;
  a2[9] = 0u;
  v14 = 1 << (5 - v10);
  a2[6] = 0u;
  a2[7] = 0u;
  v15 = (unsigned __int16)(v10 - 6);
  v16 = v9 >= 0x24;
  v17 = v9 < 0x24;
  if (v16)
    v14 = 0;
  a2[4] = 0uLL;
  a2[5] = 0uLL;
  if (v16)
    v13 = 0;
  if (!v16)
    v15 = 0;
  v220 = v8;
  if (v8)
    v18 = v17;
  else
    v18 = 1;
  v218 = v18;
  a2[2] = 0uLL;
  a2[3] = 0uLL;
  *a2 = 0uLL;
  a2[1] = 0uLL;
  if (v8)
    v19 = v14;
  else
    v19 = 0;
  v216 = v19;
  if (v8)
    v20 = v13;
  else
    v20 = 0;
  v215 = v20;
  if (v8)
    v21 = v15;
  else
    v21 = 0;
  v222 = v21;
  if (v8)
    v22 = v10;
  else
    v22 = v10 - 2;
  v23 = (__int16 *)(v7 + 80);
  v219 = v12;
  do
  {
    if ((v5 & 1) != 0)
    {
      v533 = v5;
      v24 = *(v23 - 24);
      v25 = *(v23 - 23);
      v531 = (_WORD *)a2 + *(__int16 *)((char *)&word_2160F34E0 + v3);
      v578 = *(v23 - 19);
      v582 = *(v23 - 18);
      v441 = *(v23 - 9);
      v479 = v23[3];
      v545 = v23[4];
      v26 = *(v23 - 22);
      v27 = *(v23 - 20);
      v28 = *(v23 - 17);
      v401 = *(v23 - 11);
      v408 = *(v23 - 10);
      v494 = v23[2];
      v520 = v23[5];
      v562 = v23[18];
      v29 = *(v23 - 21);
      v30 = *(v23 - 16);
      v31 = *(v23 - 12);
      v389 = *(v23 - 7);
      v415 = *(v23 - 8);
      v420 = v23[1];
      v446 = v23[6];
      v525 = v23[17];
      v566 = v23[19];
      v32 = *(v23 - 15);
      v33 = *(v23 - 13);
      v34 = *(v23 - 6);
      v395 = *v23;
      v424 = v23[7];
      v456 = v23[16];
      v505 = v23[20];
      v550 = v23[29];
      v35 = *(v23 - 14);
      v36 = *(v23 - 5);
      v37 = *(v23 - 1);
      v433 = v23[8];
      v461 = v23[15];
      v484 = v23[21];
      v510 = v23[28];
      v554 = v23[30];
      v38 = *(v23 - 4);
      v39 = v23[9];
      v437 = v23[14];
      v467 = v23[22];
      v489 = v23[27];
      v515 = v23[31];
      v558 = v23[36];
      v40 = *(v23 - 3);
      v41 = v23[10];
      v42 = v23[13];
      v451 = v23[23];
      v474 = v23[26];
      v499 = v23[32];
      v535 = v23[35];
      v570 = v23[37];
      v43 = v23[11];
      v44 = v23[12];
      v45 = v23[24];
      v429 = v23[33];
      v470 = v23[34];
      v540 = v23[38];
      v46 = v222;
      if (!v220)
        v46 = v22;
      v532 = v23;
      v574 = v23[39];
      v534 = v3;
      v530 = v46;
      if (v220)
      {
        v47 = v23[25];
        v48 = *(v23 - 2);
        v49 = v582;
        if (v218)
        {
          v380 = v216 + v219[2] * v29;
          v363 = v216 + v219[7] * v43;
          v347 = v216 + v219[10] * v30;
          v334 = v216 + v219[12] * v36;
          v295 = v216 + v219[19] * v34;
          v285 = v216 + v219[21] * v39;
          v291 = v216 + v219[20] * v37;
          v279 = v216 + v219[22] * v42;
          v583 = v216 + v219[25] * v401;
          v50 = v216 + v219[27] * v395;
          v396 = v216 + v219[28] * v433;
          v402 = v216 + v219[26] * v389;
          v263 = v216 + v219[30] * v451;
          v269 = v216 + v219[29] * v437;
          v258 = v216 + v219[31] * v47;
          v51 = v216 + v219[32] * v408;
          v409 = v216 + v219[36] * v461;
          v249 = v216 + v219[40] * v441;
          v253 = v216 + v219[39] * v429;
          v245 = v216 + v219[41] * v494;
          v234 = v216 + v219[43] * v456;
          v238 = v216 + v219[42] * v446;
          v227 = v216 + v219[46] * v499;
          v231 = v216 + v219[45] * v489;
          v223 = v216 + v219[47] * v470;
          v52 = v216 + v219[48] * v479;
          v53 = v216 + v219[49] * v520;
          v54 = v216 + v219[50] * v525;
          v55 = v216 + v219[51] * v505;
          v56 = v216 + v219[53] * v515;
          v57 = v216 + v219[54] * v535;
          v58 = v216 + v219[55] * v540;
          v59 = v216 + v219[56] * v545;
          v546 = (*v219 * v24 + v216) >> v215;
          v541 = (v216 + v219[1] * v26) >> v215;
          v536 = v380 >> v215;
          v516 = (v216 + v219[3] * v32) >> v215;
          v500 = (v216 + v219[4] * v35) >> v215;
          v60 = (v216 + v219[5] * v38) >> v215;
          v490 = (v216 + v219[6] * v40) >> v215;
          v471 = v363 >> v215;
          v385 = (v216 + v219[8] * v25) >> v215;
          v390 = (v216 + v219[9] * v27) >> v215;
          v307 = v347 >> v215;
          v311 = (v216 + v219[11] * v33) >> v215;
          v314 = v334 >> v215;
          v303 = (v216 + v219[13] * v48) >> v215;
          v322 = (v216 + v219[14] * v41) >> v215;
          v318 = (v216 + v219[15] * v44) >> v215;
          v462 = (v216 + v219[16] * v578) >> v215;
          v457 = (v216 + v219[17] * v28) >> v215;
          v452 = (v216 + v219[18] * v31) >> v215;
          v447 = v295 >> v215;
          v442 = v291 >> v215;
          v438 = v285 >> v215;
          v434 = v279 >> v215;
          v430 = (v216 + v219[23] * v45) >> v215;
          v242 = (v216 + v219[24] * v49) >> v215;
          v61 = v583 >> v215;
          v275 = v402 >> v215;
          v280 = v50 >> v215;
          v286 = v396 >> v215;
          v300 = v263 >> v215;
          v292 = v269 >> v215;
          v296 = v258 >> v215;
          v526 = v51 >> v215;
          v521 = (v216 + v219[33] * v415) >> v215;
          v506 = (v216 + v219[34] * v420) >> v215;
          v495 = (v216 + v219[35] * v424) >> v215;
          v62 = v409 >> v215;
          v480 = (v216 + v219[37] * v467) >> v215;
          v475 = (v216 + v219[38] * v474) >> v215;
          v425 = v253 >> v215;
          v63 = v249 >> v215;
          v246 = v245 >> v215;
          v64 = v238 >> v215;
          v65 = v234 >> v215;
          v270 = (v216 + v219[44] * v484) >> v215;
          v264 = v231 >> v215;
          v259 = v227 >> v215;
          v375 = v52 >> v215;
          v369 = v53 >> v215;
          v364 = v54 >> v215;
          v358 = v55 >> v215;
          v348 = (v216 + v219[52] * v510) >> v215;
          v341 = v56 >> v215;
          v250 = v57 >> v215;
          v254 = v58 >> v215;
          v66 = v59 >> v215;
          v67 = (v216 + v219[57] * v562) >> v215;
          v68 = (v216 + v219[58] * v566) >> v215;
          v69 = (v216 + v219[59] * v550) >> v215;
          v70 = (v216 + v219[60] * v554) >> v215;
          v71 = (v216 + v219[61] * v558) >> v215;
          v72 = (v216 + v219[62] * v570) >> v215;
          v73 = (v216 + v219[63] * v574) >> v215;
          v74 = v223 >> v215;
        }
        else
        {
          v85 = v219[2] * v29;
          v370 = v219[7] * v43;
          v353 = v219[10] * v30;
          v342 = v219[12] * v36;
          v335 = v219[14] * v41;
          v297 = v219[19] * v34;
          v287 = v219[21] * v39;
          v281 = v219[22] * v42;
          v584 = v219[25] * v401;
          v86 = v219[27] * v395;
          v397 = v219[28] * v433;
          v403 = v219[26] * v389;
          v266 = v219[30] * v451;
          v272 = v219[29] * v437;
          v261 = v219[31] * v47;
          v87 = v219[32] * v408;
          v88 = v219[36] * v461;
          v410 = v219[39] * v429;
          v252 = v219[41] * v494;
          v256 = v219[40] * v441;
          v236 = v219[43] * v456;
          v240 = v219[42] * v446;
          v229 = v219[46] * v499;
          v233 = v219[45] * v489;
          v225 = v219[47] * v470;
          v89 = *v219 * v24;
          v90 = v219[48] * v479;
          v91 = v219[49] * v520;
          v92 = v219[50] * v525;
          v93 = v219[51] * v505;
          v94 = v219[53] * v515;
          v95 = v219[54] * v535;
          v96 = v219[55] * v540;
          v97 = v219[56] * v545;
          v546 = v89 << v222;
          v541 = (v219[1] * v26) << v222;
          v536 = v85 << v222;
          v516 = (v219[3] * v32) << v222;
          v500 = (v219[4] * v35) << v222;
          v60 = (v219[5] * v38) << v222;
          v490 = (v219[6] * v40) << v222;
          v471 = v370 << v222;
          v385 = (v219[8] * v25) << v222;
          v390 = (v219[9] * v27) << v222;
          v307 = v353 << v222;
          v311 = (v219[11] * v33) << v222;
          v303 = (v219[13] * v48) << v222;
          v322 = v335 << v222;
          v314 = v342 << v222;
          v318 = (v219[15] * v44) << v222;
          v462 = (v219[16] * v578) << v222;
          v452 = (v219[18] * v31) << v222;
          v457 = (v219[17] * v28) << v222;
          v442 = (v219[20] * v37) << v222;
          v447 = v297 << v222;
          v434 = v281 << v222;
          v438 = v287 << v222;
          v430 = (v219[23] * v45) << v222;
          v242 = (v219[24] * v49) << v222;
          v61 = v584 << v222;
          v275 = v403 << v222;
          v280 = v86 << v222;
          v286 = v397 << v222;
          v292 = v272 << v222;
          v296 = v261 << v222;
          v300 = v266 << v222;
          v526 = v87 << v222;
          v521 = (v219[33] * v415) << v222;
          v506 = (v219[34] * v420) << v222;
          v495 = (v219[35] * v424) << v222;
          v480 = (v219[37] * v467) << v222;
          v475 = (v219[38] * v474) << v222;
          v425 = v410 << v222;
          v62 = v88 << v222;
          v63 = v256 << v222;
          v246 = v252 << v222;
          v64 = v240 << v222;
          v65 = v236 << v222;
          v264 = v233 << v222;
          v270 = (v219[44] * v484) << v222;
          v259 = v229 << v222;
          v74 = v225 << v222;
          v369 = v91 << v222;
          v375 = v90 << v222;
          v358 = v93 << v222;
          v364 = v92 << v222;
          v341 = v94 << v222;
          v348 = (v219[52] * v510) << v222;
          v250 = v95 << v222;
          v254 = v96 << v222;
          v66 = v97 << v222;
          v67 = (v219[57] * v562) << v222;
          v68 = (v219[58] * v566) << v222;
          v69 = (v219[59] * v550) << v222;
          v70 = (v219[60] * v554) << v222;
          v71 = (v219[61] * v558) << v222;
          v72 = (v219[62] * v570) << v222;
          v73 = (v219[63] * v574) << v222;
        }
      }
      else
      {
        v271 = v217[28] * (unsigned __int16)v433;
        v276 = v217[26] * (unsigned __int16)v389;
        v260 = v217[30] * (unsigned __int16)v451;
        v265 = v217[29] * (unsigned __int16)v437;
        v251 = v217[39] * (unsigned __int16)v429;
        v255 = v217[36] * (unsigned __int16)v461;
        v247 = v217[40] * (unsigned __int16)v441;
        v235 = v217[42] * (unsigned __int16)v446;
        v239 = v217[41] * (unsigned __int16)v494;
        v228 = v217[45] * (unsigned __int16)v489;
        v232 = v217[43] * (unsigned __int16)v456;
        v224 = v217[46] * (unsigned __int16)v499;
        v75 = v217[47] * (unsigned __int16)v470;
        v76 = v217[48] * (unsigned __int16)v479;
        v77 = v217[49] * (unsigned __int16)v520;
        v78 = v217[50] * (unsigned __int16)v525;
        v79 = v217[51] * (unsigned __int16)v505;
        v80 = v217[53] * (unsigned __int16)v515;
        v81 = v217[54] * (unsigned __int16)v535;
        v82 = v217[55] * (unsigned __int16)v540;
        v83 = v217[56] * (unsigned __int16)v545;
        v546 = (*v217 * (unsigned __int16)*(v23 - 24)) << v22;
        v541 = (v217[1] * (unsigned __int16)*(v23 - 22)) << v22;
        v536 = (v217[2] * (unsigned __int16)*(v23 - 21)) << v22;
        v516 = (v217[3] * (unsigned __int16)*(v23 - 15)) << v22;
        v500 = (v217[4] * (unsigned __int16)*(v23 - 14)) << v22;
        v60 = (v217[5] * (unsigned __int16)*(v23 - 4)) << v22;
        v490 = (v217[6] * (unsigned __int16)*(v23 - 3)) << v22;
        v471 = (v217[7] * (unsigned __int16)v23[11]) << v22;
        v385 = (v217[8] * (unsigned __int16)*(v23 - 23)) << v22;
        v390 = (v217[9] * (unsigned __int16)*(v23 - 20)) << v22;
        v307 = (v217[10] * (unsigned __int16)*(v23 - 16)) << v22;
        v311 = (v217[11] * (unsigned __int16)*(v23 - 13)) << v22;
        v314 = (v217[12] * (unsigned __int16)*(v23 - 5)) << v22;
        v303 = (v217[13] * (unsigned __int16)*(v23 - 2)) << v22;
        v322 = (v217[14] * (unsigned __int16)v23[10]) << v22;
        v318 = (v217[15] * (unsigned __int16)v23[12]) << v22;
        v462 = (v217[16] * (unsigned __int16)v578) << v22;
        v457 = (v217[17] * (unsigned __int16)*(v23 - 17)) << v22;
        v452 = (v217[18] * (unsigned __int16)*(v23 - 12)) << v22;
        v447 = (v217[19] * (unsigned __int16)*(v23 - 6)) << v22;
        v442 = (v217[20] * (unsigned __int16)*(v23 - 1)) << v22;
        v438 = (v217[21] * (unsigned __int16)v23[9]) << v22;
        v434 = (v217[22] * (unsigned __int16)v23[13]) << v22;
        v430 = (v217[23] * (unsigned __int16)v23[24]) << v22;
        v242 = (v217[24] * (unsigned __int16)v582) << v22;
        v275 = v276 << v22;
        v280 = (v217[27] * (unsigned __int16)v395) << v22;
        v286 = v271 << v22;
        v300 = v260 << v22;
        v292 = v265 << v22;
        v296 = (v217[31] * (unsigned __int16)v23[25]) << v22;
        v526 = (v217[32] * (unsigned __int16)v408) << v22;
        v521 = (v217[33] * (unsigned __int16)v415) << v22;
        v506 = (v217[34] * (unsigned __int16)v420) << v22;
        v495 = (v217[35] * (unsigned __int16)v424) << v22;
        v84 = v255 << v22;
        v480 = (v217[37] * (unsigned __int16)v467) << v22;
        v475 = (v217[38] * (unsigned __int16)v474) << v22;
        v425 = v251 << v22;
        v63 = v247 << v22;
        v246 = v239 << v22;
        v65 = v232 << v22;
        v264 = v228 << v22;
        v270 = (v217[44] * (unsigned __int16)v484) << v22;
        v74 = v75 << v22;
        v375 = v76 << v22;
        v364 = v78 << v22;
        v369 = v77 << v22;
        v358 = v79 << v22;
        v341 = v80 << v22;
        v348 = (v217[52] * (unsigned __int16)v510) << v22;
        v250 = v81 << v22;
        v254 = v82 << v22;
        v259 = v224 << v22;
        v66 = v83 << v22;
        v67 = (v217[57] * (unsigned __int16)v562) << v22;
        v68 = (v217[58] * (unsigned __int16)v566) << v22;
        v69 = (v217[59] * (unsigned __int16)v550) << v22;
        v70 = (v217[60] * (unsigned __int16)v554) << v22;
        v71 = (v217[61] * (unsigned __int16)v558) << v22;
        v72 = (v217[62] * (unsigned __int16)v570) << v22;
        v64 = v235 << v22;
        v73 = (v217[63] * (unsigned __int16)v574) << v22;
        v62 = v84;
        v61 = (v217[25] * (unsigned __int16)v401) << v22;
      }
      v585 = v63 - v242 - (v66 + ((__int16)v66 >> 1));
      v579 = v246 - v61 - (v67 + ((__int16)v67 >> 1));
      v575 = v64 - v275 - (v68 + ((__int16)v68 >> 1));
      v571 = v65 - v280 - (v69 + ((__int16)v69 >> 1));
      v567 = v270 - v286 - (v70 + ((__int16)v70 >> 1));
      v563 = v264 - v292 - (v71 + ((__int16)v71 >> 1));
      v559 = v259 - v300 - (v72 + ((__int16)v72 >> 1));
      v555 = v74 - v296 - (v73 + ((__int16)v73 >> 1));
      v551 = v546 + v526;
      v511 = v546 - v526;
      v547 = v541 + v521;
      v527 = v541 - v521;
      v542 = v536 + v506;
      v522 = v536 - v506;
      v537 = v516 + v495;
      v517 = v516 - v495;
      v507 = v500 + v62;
      v485 = v500 - v62;
      v416 = v246 + v67 + ((__int16)v246 >> 1);
      v501 = v60 + v480;
      v481 = v60 - v480;
      v496 = v490 + v475;
      v476 = v490 - v475;
      v491 = v471 + v425;
      v472 = v471 - v425;
      v404 = v67 - (v61 + ((__int16)v61 >> 1));
      v411 = v68 - (v275 + ((__int16)v275 >> 1));
      v98 = v64;
      v99 = v64 + v68 + ((__int16)v64 >> 1);
      v100 = v69 - (v280 + ((__int16)v280 >> 1));
      v101 = v65 + v69 + ((__int16)v65 >> 1);
      v381 = v70 - (v286 + ((__int16)v286 >> 1));
      v102 = v270 + v70 + ((__int16)v270 >> 1);
      v354 = v71 - (v292 + ((__int16)v292 >> 1));
      v336 = v264 + v71 + ((__int16)v264 >> 1);
      v103 = v72 - (v300 + ((__int16)v300 >> 1));
      v326 = v259 + v72 + ((__int16)v259 >> 1);
      v104 = v74 + v73 + ((__int16)v74 >> 1);
      v426 = ((__int16)v462 >> 1) - v375;
      v463 = v462 + ((__int16)v375 >> 1);
      v376 = ((__int16)v457 >> 1) - v369;
      v105 = v457 + ((__int16)v369 >> 1);
      v371 = ((__int16)v452 >> 1) - v364;
      v453 = v452 + ((__int16)v364 >> 1);
      v458 = v105;
      v365 = ((__int16)v447 >> 1) - v358;
      v106 = v447 + ((__int16)v358 >> 1);
      v359 = ((__int16)v442 >> 1) - v348;
      v443 = v442 + ((__int16)v348 >> 1);
      v349 = ((__int16)v438 >> 1) - v341;
      v439 = v438 + ((__int16)v341 >> 1);
      v343 = ((__int16)v434 >> 1) - v250;
      v107 = ((__int16)v430 >> 1) - v254;
      v431 = v430 + ((__int16)v254 >> 1);
      v435 = v434 + ((__int16)v250 >> 1);
      v108 = v280 + v65 + v311;
      v109 = v296 + v74 + v318;
      v110 = v66 - (v242 + ((__int16)v242 >> 1)) + v385;
      v111 = v63 + v66 + ((__int16)v63 >> 1) - v385;
      v112 = v404 + v390;
      v113 = v416 - v390;
      v386 = v242 + v63 + v385 + ((__int16)v385 >> 1);
      v391 = v61 + v246 + v390 + ((__int16)v390 >> 1);
      v114 = v411 + v307;
      v115 = v99 - v307;
      v116 = v275 + v98 + v307 + ((__int16)v307 >> 1);
      v117 = v100 + v311;
      v118 = v101 - v311;
      v119 = v381 + v314;
      v120 = v102 - v314;
      v398 = v108 + ((__int16)v311 >> 1);
      v405 = v286 + v270 + v314 + ((__int16)v314 >> 1);
      v121 = v354 + v303;
      v122 = v336 - v303;
      v123 = v103 + v322;
      v124 = v326 - v322;
      v412 = v292 + v264 + v303 + ((__int16)v303 >> 1);
      v417 = v300 + v259 + v322 + ((__int16)v322 >> 1);
      v125 = v73 - (v296 + ((__int16)v296 >> 1)) + v318;
      v126 = v104 - v318;
      v421 = v109 + ((__int16)v318 >> 1);
      v468 = v511 + v426;
      v382 = v511 - v426;
      v427 = v527 + v376;
      v377 = v527 - v376;
      v528 = v522 + v371;
      v372 = v522 - v371;
      v523 = v517 + v365;
      v366 = v517 - v365;
      v518 = v485 + v359;
      v355 = v485 - v359;
      v486 = v481 + v349;
      v350 = v481 - v349;
      v482 = v476 + v343;
      v337 = v476 - v343;
      v477 = v472 + v107;
      v473 = v472 - v107;
      v360 = v110 + ((__int16)v111 >> 2);
      v323 = ((__int16)v110 >> 2) - v111;
      v344 = v112 + ((__int16)v113 >> 2);
      v319 = ((__int16)v112 >> 2) - v113;
      v312 = ((__int16)v114 >> 2) - v115;
      v315 = v114 + ((__int16)v115 >> 2);
      v308 = ((__int16)v117 >> 2) - v118;
      v327 = v119 + ((__int16)v120 >> 2);
      v330 = v117 + ((__int16)v118 >> 2);
      v304 = ((__int16)v119 >> 2) - v120;
      v127 = v121 + ((__int16)v122 >> 2);
      v301 = ((__int16)v121 >> 2) - v122;
      v128 = v123 + ((__int16)v124 >> 2);
      v298 = ((__int16)v123 >> 2) - v124;
      v129 = v125 + ((__int16)v126 >> 2);
      v267 = ((__int16)v125 >> 2) - v126;
      v288 = v551 + v463;
      v130 = v551 - v463;
      v464 = v547 + v458;
      v131 = v547 - v458;
      v459 = v542 + v453;
      v132 = v542 - v453;
      v454 = v537 + v106;
      v282 = v507 + v443;
      v133 = v507 - v443;
      v241 = v501 + v439;
      v134 = v501 - v439;
      v237 = v496 + v435;
      v135 = v496 - v435;
      v136 = v585 + ((__int16)v386 >> 2);
      v137 = v386 - ((__int16)v585 >> 2);
      v138 = v579 + ((__int16)v391 >> 2);
      v139 = v391 - ((__int16)v579 >> 2);
      v140 = v575 + ((__int16)v116 >> 2);
      v141 = v116 - ((__int16)v575 >> 2);
      v142 = v571 + ((__int16)v398 >> 2);
      v143 = v398 - ((__int16)v571 >> 2);
      v144 = v567 + ((__int16)v405 >> 2);
      v145 = v405 - ((__int16)v567 >> 2);
      v146 = v563 + ((__int16)v412 >> 2);
      v147 = v412 - ((__int16)v563 >> 2);
      v148 = v559 + ((__int16)v417 >> 2);
      v149 = v417 - ((__int16)v559 >> 2);
      v150 = v555 + ((__int16)v421 >> 2);
      v151 = v421 - ((__int16)v555 >> 2);
      v512 = v130 + v136;
      v508 = v130 - v136;
      v568 = v131 + v138;
      v586 = v131 - v138;
      v418 = v132 + v140;
      v422 = v132 - v140;
      v552 = v537 - v106 + v142;
      v548 = v537 - v106 - v142;
      v497 = v133 + v144;
      v502 = v133 - v144;
      v277 = v134 + v146;
      v556 = v134 - v146;
      v406 = v135 + v148;
      v413 = v135 - v148;
      v543 = v491 - v431 + v150;
      v243 = v491 - v431 - v150;
      v444 = v382 + v360;
      v448 = v382 - v360;
      v564 = v377 + v344;
      v580 = v377 - v344;
      v345 = v372 + v315;
      v361 = v372 - v315;
      v152 = v366 + v330;
      v230 = v366 - v330;
      v273 = v350 + v127;
      v257 = v350 - v127;
      v331 = v337 + v128;
      v351 = v337 - v128;
      v153 = v473 + v129;
      v538 = v473 - v129;
      v154 = v468 + v323;
      v155 = v468 - v323;
      v560 = v427 + v319;
      v576 = v427 - v319;
      v316 = v528 + v312;
      v338 = v528 - v312;
      v156 = v523 + v308;
      v226 = v523 - v308;
      v157 = v518 + v304;
      v158 = v518 - v304;
      v293 = v486 + v301;
      v262 = v486 - v301;
      v309 = v482 + v298;
      v324 = v482 - v298;
      v159 = v477 + v267;
      v160 = v477 - v267;
      v161 = v288 + v137;
      v162 = v288 - v137;
      v163 = v464 + v139;
      v572 = v464 - v139;
      v302 = v459 + v141;
      v320 = v459 - v141;
      v164 = v454 + v143;
      v165 = v454 - v143;
      v166 = v282 + v145;
      v167 = v282 - v145;
      v283 = v241 - v147;
      v289 = v241 + v147;
      v168 = v491 + v431 + v151;
      v169 = v491 + v431 - v151;
      v465 = v289 - v164 - (v168 + ((__int16)v168 >> 1));
      v460 = v293 - v156 - (v477 + v267 + ((v477 + v267) << 16 >> 17));
      v492 = v273 - v152 - (v153 + ((__int16)v153 >> 1));
      v487 = v277 - v552 - (v543 + ((__int16)v543 >> 1));
      v483 = v556 - v548 - (v243 + ((__int16)v243 >> 1));
      v478 = v257 - v230 - (v538 + ((__int16)v538 >> 1));
      v469 = v283 - v165 - (v169 + ((__int16)v169 >> 1));
      v455 = v161 + v166;
      v305 = v161 - v166;
      v529 = v154 + v157;
      v399 = v154 - v157;
      v524 = v444 + v355 + v327;
      v392 = v444 - (v355 + v327);
      v519 = v512 + v497;
      v387 = v512 - v497;
      v513 = v508 + v502;
      v383 = v508 - v502;
      v509 = v448 + v355 - v327;
      v378 = v448 - (v355 - v327);
      v503 = v155 + v158;
      v373 = v155 - v158;
      v498 = v162 + v167;
      v367 = v162 - v167;
      v268 = v164;
      v328 = v168 + v163 - (v164 + ((__int16)v164 >> 1));
      v248 = v152;
      v356 = v159 + v560 - (v156 + ((__int16)v156 >> 1));
      v449 = v153 + v564 - (v152 + ((__int16)v152 >> 1));
      v445 = v543 + v568 - (v552 + ((__int16)v552 >> 1));
      v440 = v243 + v586 - (v548 + ((__int16)v548 >> 1));
      v436 = v538 + v580 - (v230 + ((__int16)v230 >> 1));
      v432 = v160 + v576 - (v226 + ((__int16)v226 >> 1));
      v170 = v165;
      v428 = v169 + v572 - (v165 + ((__int16)v165 >> 1));
      v171 = v277 + v543 + ((__int16)v277 >> 1);
      v172 = v556 + v243 + ((__int16)v556 >> 1);
      v173 = v257 + v538 + ((__int16)v257 >> 1);
      v174 = v283 + v169 + ((__int16)v283 >> 1);
      v244 = ((__int16)v302 >> 1) - (v237 + v149);
      v544 = v302 + ((__int16)(v237 + v149) >> 1);
      v539 = v316 + ((__int16)v309 >> 1);
      v175 = ((__int16)v345 >> 1) - v331;
      v346 = v345 + ((__int16)v331 >> 1);
      v176 = ((__int16)v418 >> 1) - v406;
      v419 = v418 + ((__int16)v406 >> 1);
      v177 = ((__int16)v422 >> 1) - v413;
      v423 = v422 + ((__int16)v413 >> 1);
      v178 = ((__int16)v361 >> 1) - v351;
      v414 = v361 + ((__int16)v351 >> 1);
      v179 = ((__int16)v338 >> 1) - v324;
      v407 = v338 + ((__int16)v324 >> 1);
      v180 = ((__int16)v320 >> 1) - (v237 - v149);
      v362 = v320 + ((__int16)(v237 - v149) >> 1);
      v181 = v289 + v168 + ((__int16)v289 >> 1) - v163;
      v182 = v268 + v289 + v163 + ((__int16)v163 >> 1);
      v183 = v293 + v159 + ((__int16)v293 >> 1) - v560;
      v184 = v156 + v293 + v560 + ((__int16)v560 >> 1);
      v185 = v273 + v153 + ((__int16)v273 >> 1) - v564;
      v186 = v248 + v273 + v564 + ((__int16)v564 >> 1);
      v339 = v171 - v568;
      v187 = v552 + v277 + v568 + ((__int16)v568 >> 1);
      v332 = v172 - v586;
      v188 = v548 + v556 + v586 + ((__int16)v586 >> 1);
      v189 = v173 - v580;
      v190 = v230 + v257 + v580 + ((__int16)v580 >> 1);
      v191 = v262 + v160 + ((__int16)v262 >> 1) - v576;
      v192 = v226 + v262 + v576 + ((__int16)v576 >> 1);
      v193 = v174 - v572;
      v194 = v170 + v283 + v572 + ((__int16)v572 >> 1);
      v587 = v305 + v244;
      v561 = v305 - v244;
      v195 = ((__int16)v316 >> 1) - v309;
      v581 = v399 + v195;
      v557 = v399 - v195;
      v577 = v392 + v175;
      v553 = v392 - v175;
      v573 = v387 + v176;
      v549 = v387 - v176;
      v569 = v383 + v177;
      v352 = v383 - v177;
      v565 = v378 + v178;
      v379 = v378 - v178;
      v388 = v373 + v179;
      v374 = v373 - v179;
      v384 = v367 + v180;
      v368 = v367 - v180;
      v400 = v328 + ((__int16)v181 >> 2);
      v329 = ((__int16)v328 >> 2) - v181;
      v393 = v356 + ((__int16)v183 >> 2);
      v357 = ((__int16)v356 >> 2) - v183;
      v294 = v465 + ((__int16)v182 >> 2);
      v196 = v182 - ((__int16)v465 >> 2);
      v466 = v460 + ((__int16)v184 >> 2);
      v321 = v184 - ((__int16)v460 >> 2);
      v325 = v196;
      v278 = v492 + ((__int16)v186 >> 2);
      v197 = v186 - ((__int16)v492 >> 2);
      v493 = v487 + ((__int16)v187 >> 2);
      v313 = v187 - ((__int16)v487 >> 2);
      v317 = v197;
      v198 = v483 + ((__int16)v188 >> 2);
      v199 = v478 + ((__int16)v190 >> 2);
      v306 = v190 - ((__int16)v478 >> 2);
      v310 = v188 - ((__int16)v483 >> 2);
      v200 = v262 - v226 - (v160 + ((__int16)v160 >> 1));
      v201 = v200 + ((__int16)v192 >> 2);
      v202 = v192 - ((__int16)v200 >> 2);
      v203 = v469 + ((__int16)v194 >> 2);
      v299 = v194 - ((__int16)v469 >> 2);
      v204 = v449 + ((__int16)v185 >> 2);
      v290 = ((__int16)v449 >> 2) - v185;
      v205 = v445 + ((__int16)v339 >> 2);
      v284 = ((__int16)v445 >> 2) - v339;
      v206 = v440 + ((__int16)v332 >> 2);
      v333 = ((__int16)v440 >> 2) - v332;
      v207 = v436 + ((__int16)v189 >> 2);
      v274 = ((__int16)v436 >> 2) - v189;
      v208 = v432 + ((__int16)v191 >> 2);
      v340 = ((__int16)v432 >> 2) - v191;
      v209 = v428 + ((__int16)v193 >> 2);
      v210 = ((__int16)v428 >> 2) - v193;
      v211 = v513 + v423;
      v212 = v513 - v423;
      v213 = v503 + v407;
      v450 = v201 + v503 - v407;
      v488 = v503 - v407 - v201;
      v214 = v393 + v557;
      v504 = v557 - v393;
      v394 = v205 + v549;
      v514 = v549 - v205;
      result = (v306 + v509 + v414);
      *v531 = (((v325 + v455 + v544) << 16) + 0x200000) >> 22;
      v531[1] = (((v321 + v529 + v539) << 16) + 0x200000) >> 22;
      v531[2] = (((v317 + v524 + v346) << 16) + 0x200000) >> 22;
      v531[3] = (((v313 + v519 + v419) << 16) + 0x200000) >> 22;
      v531[4] = (((v310 + v211) << 16) + 0x200000) >> 22;
      v531[5] = (((_DWORD)result << 16) + 0x200000) >> 22;
      v531[6] = (((v202 + v213) << 16) + 0x200000) >> 22;
      v531[7] = (((v299 + v498 + v362) << 16) + 0x200000) >> 22;
      v531[16] = (((v329 + v587) << 16) + 0x200000) >> 22;
      v531[17] = (((v357 + v581) << 16) + 0x200000) >> 22;
      v531[18] = (((v290 + v577) << 16) + 0x200000) >> 22;
      v531[19] = (((v284 + v573) << 16) + 0x200000) >> 22;
      v531[20] = (((v333 + v569) << 16) + 0x200000) >> 22;
      v531[21] = (((v274 + v565) << 16) + 0x200000) >> 22;
      v531[22] = (((v340 + v388) << 16) + 0x200000) >> 22;
      v531[23] = (((v210 + v384) << 16) + 0x200000) >> 22;
      v531[32] = (((v400 + v561) << 16) + 0x200000) >> 22;
      v531[33] = ((v214 << 16) + 0x200000) >> 22;
      v531[34] = (((v204 + v553) << 16) + 0x200000) >> 22;
      v531[35] = ((v394 << 16) + 0x200000) >> 22;
      v531[36] = (((v206 + v352) << 16) + 0x200000) >> 22;
      v531[37] = (((v207 + v379) << 16) + 0x200000) >> 22;
      v531[38] = (((v208 + v374) << 16) + 0x200000) >> 22;
      v531[39] = (((v209 + v368) << 16) + 0x200000) >> 22;
      v531[48] = (((v294 + v455 - v544) << 16) + 0x200000) >> 22;
      v531[49] = (((v466 + v529 - v539) << 16) + 0x200000) >> 22;
      v531[50] = (((v278 + v524 - v346) << 16) + 0x200000) >> 22;
      v531[51] = (((v493 + v519 - v419) << 16) + 0x200000) >> 22;
      v531[52] = (((v198 + v212) << 16) + 0x200000) >> 22;
      v531[53] = (((v199 + v509 - v414) << 16) + 0x200000) >> 22;
      v531[54] = ((v450 << 16) + 0x200000) >> 22;
      v531[55] = (((v203 + v498 - v362) << 16) + 0x200000) >> 22;
      v531[64] = (((v455 - v544 - v294) << 16) + 0x200000) >> 22;
      v531[65] = (((v529 - v539 - v466) << 16) + 0x200000) >> 22;
      v531[66] = (((v524 - v346 - v278) << 16) + 0x200000) >> 22;
      v531[67] = (((v519 - v419 - v493) << 16) + 0x200000) >> 22;
      v531[68] = (((v212 - v198) << 16) + 0x200000) >> 22;
      v531[69] = (((v509 - v414 - v199) << 16) + 0x200000) >> 22;
      v531[70] = ((v488 << 16) + 0x200000) >> 22;
      v531[71] = (((v498 - v362 - v203) << 16) + 0x200000) >> 22;
      v531[80] = (((v561 - v400) << 16) + 0x200000) >> 22;
      v531[81] = ((v504 << 16) + 0x200000) >> 22;
      v531[82] = (((v553 - v204) << 16) + 0x200000) >> 22;
      v531[83] = ((v514 << 16) + 0x200000) >> 22;
      v531[84] = (((v352 - v206) << 16) + 0x200000) >> 22;
      v531[85] = (((v379 - v207) << 16) + 0x200000) >> 22;
      v531[86] = (((v374 - v208) << 16) + 0x200000) >> 22;
      v531[87] = (((v368 - v209) << 16) + 0x200000) >> 22;
      v531[96] = (((v587 - v329) << 16) + 0x200000) >> 22;
      v531[97] = (((v581 - v357) << 16) + 0x200000) >> 22;
      v531[98] = (((v577 - v290) << 16) + 0x200000) >> 22;
      v531[99] = (((v573 - v284) << 16) + 0x200000) >> 22;
      v531[100] = (((v569 - v333) << 16) + 0x200000) >> 22;
      v531[101] = (((v565 - v274) << 16) + 0x200000) >> 22;
      v531[102] = (((v388 - v340) << 16) + 0x200000) >> 22;
      v531[103] = (((v384 - v210) << 16) + 0x200000) >> 22;
      v531[112] = (((v455 + v544 - v325) << 16) + 0x200000) >> 22;
      v531[113] = (((v529 + v539 - v321) << 16) + 0x200000) >> 22;
      v531[114] = (((v524 + v346 - v317) << 16) + 0x200000) >> 22;
      v531[115] = (((v519 + v419 - v313) << 16) + 0x200000) >> 22;
      v531[116] = (((v211 - v310) << 16) + 0x200000) >> 22;
      v531[117] = (((v509 + v414 - v306) << 16) + 0x200000) >> 22;
      v531[118] = (((v213 - v202) << 16) + 0x200000) >> 22;
      v531[119] = (((v498 + v362 - v299) << 16) + 0x200000) >> 22;
      v22 = v530;
      v3 = v534;
      v5 = v533;
      v23 = v532;
    }
    v5 >>= 1;
    v3 += 2;
    v23 += 64;
  }
  while (v3 != 8);
  return result;
}

