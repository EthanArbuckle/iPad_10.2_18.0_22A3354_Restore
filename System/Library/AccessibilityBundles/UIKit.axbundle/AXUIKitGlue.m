@implementation AXUIKitGlue

+ (id)sharedGlueObjectIfAvailable
{
  return (id)_Failover;
}

+ (void)_accessibilityInitializeSubclassRuntimeOverrides
{
  uint64_t v2;
  void *v3;
  NSObject *log;
  os_log_type_t type;
  uint64_t obj;
  int v7;
  int v8;
  void (*v9)(uint64_t);
  void *v10;
  Class v11;
  uint8_t v12[7];
  char v13;
  id location[2];
  Class v15;
  id v16;
  dispatch_once_t *v17;

  v15 = (Class)a1;
  location[1] = (id)a2;
  if (!_Failover)
  {
    v2 = objc_msgSend(objc_allocWithZone(v15), "init");
    v3 = (void *)_Failover;
    _Failover = v2;

  }
  location[0] = (id)AXLogLoading();
  v13 = 2;
  if (os_log_type_enabled((os_log_t)location[0], OS_LOG_TYPE_DEBUG))
  {
    log = location[0];
    type = v13;
    __os_log_helper_16_0_0(v12);
    _os_log_debug_impl(&dword_230C4A000, log, type, "Accessibility Initialize Subclass Runtime Overrides (UIKit)", v12, 2u);
  }
  objc_storeStrong(location, 0);
  obj = MEMORY[0x24BDAC760];
  v7 = -1073741824;
  v8 = 0;
  v9 = __63__AXUIKitGlue__accessibilityInitializeSubclassRuntimeOverrides__block_invoke;
  v10 = &__block_descriptor_40_e5_v8__0l;
  v11 = v15;
  v17 = (dispatch_once_t *)&_accessibilityInitializeSubclassRuntimeOverrides_onceToken;
  v16 = 0;
  objc_storeStrong(&v16, &obj);
  if (*v17 != -1)
    dispatch_once(v17, v16);
  objc_storeStrong(&v16, 0);
  objc_msgSend(MEMORY[0x24BDFFA88], "performValidations");
}

void __63__AXUIKitGlue__accessibilityInitializeSubclassRuntimeOverrides__block_invoke(uint64_t a1)
{
  char IsExtension;
  double v2;
  float v3;
  id v4;
  id v5;
  id v7;
  id v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t (*v12)();
  void *v13;
  uint64_t v14;
  float v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a1;
  v16 = a1;
  v4 = (id)objc_msgSend(MEMORY[0x24BDFE4F8], "sharedInstance");
  objc_msgSend(v4, "performValidations:withPreValidationHandler:postValidationHandler:safeCategoryInstallationHandler:", &__block_literal_global, &__block_literal_global_1275, 0, &__block_literal_global_1279);

  v15 = 0.0;
  IsExtension = _UIApplicationIsExtension();
  v2 = 1.0;
  if ((IsExtension & 1) == 0)
    v2 = 0.05;
  v3 = v2;
  v15 = v3;
  v5 = (id)objc_msgSend(MEMORY[0x24BDFE4F8], "sharedInstance");
  objc_msgSend(v5, "installSafeCategories:afterDelay:validationTargetName:overrideProcessName:", &__block_literal_global_1684, CFSTR("AXUIKitGlue"), CFSTR("UIKit"), v15);

  QSInstallSharedSafeCategoriesIfNeeded();
  v7 = (id)objc_msgSend(MEMORY[0x24BDFE480], "sharedInstance");
  v9 = MEMORY[0x24BDAC760];
  v10 = -1073741824;
  v11 = 0;
  v12 = __63__AXUIKitGlue__accessibilityInitializeSubclassRuntimeOverrides__block_invoke_6;
  v13 = &__block_descriptor_40_e5_v8__0l;
  v14 = *(_QWORD *)(a1 + 32);
  objc_msgSend(v7, "addHandler:forFramework:", &v9, CFSTR("WebKitLegacy"));

  v8 = (id)objc_msgSend(MEMORY[0x24BDFE480], "sharedInstance");
  objc_msgSend(v8, "addHandler:forFramework:", &__block_literal_global_2074, CFSTR("TVMLKit"));

}

uint64_t __63__AXUIKitGlue__accessibilityInitializeSubclassRuntimeOverrides__block_invoke_2(void *a1, void *a2)
{
  void *v3;
  const __CFString *v4;
  const __CFString *v5;
  const __CFString *v6;
  const __CFString *v7;
  const __CFString *v8;
  const __CFString *v9;
  const __CFString *v10;
  const __CFString *v11;
  const __CFString *v12;
  const __CFString *v13;
  const char *v14;
  const __CFString *v15;
  const __CFString *v16;
  const __CFString *v17;
  const __CFString *v18;
  const __CFString *v19;
  const __CFString *v20;
  const __CFString *v21;
  const __CFString *v22;
  const __CFString *v23;
  const __CFString *v24;
  const __CFString *v25;
  const __CFString *v26;
  const __CFString *v27;
  const __CFString *v28;
  const __CFString *v29;
  const __CFString *v30;
  const __CFString *v31;
  const __CFString *v32;
  const __CFString *v33;
  const __CFString *v34;
  const __CFString *v35;
  const __CFString *v36;
  const __CFString *v37;
  const __CFString *v38;
  const __CFString *v39;
  const __CFString *v40;
  const __CFString *v41;
  const __CFString *v42;
  const __CFString *v43;
  const __CFString *v44;
  const __CFString *v45;
  const __CFString *v46;
  const __CFString *v47;
  const __CFString *v48;
  const __CFString *v49;
  const __CFString *v50;
  const __CFString *v51;
  const __CFString *v52;
  const char *v53;
  const __CFString *v54;
  const char *v55;
  const __CFString *v56;
  const __CFString *v57;
  const __CFString *v58;
  const __CFString *v59;
  const __CFString *v60;
  const __CFString *v61;
  const __CFString *v62;
  const __CFString *v63;
  const __CFString *v64;
  const __CFString *v65;
  const __CFString *v66;
  const __CFString *v67;
  const __CFString *v68;
  const __CFString *v69;
  const char *v70;
  const __CFString *v71;
  const __CFString *v72;
  const __CFString *v73;
  const __CFString *v74;
  const __CFString *v75;
  const __CFString *v76;
  const __CFString *v77;
  const char *v78;
  const __CFString *v79;
  const __CFString *v80;
  const __CFString *v81;
  const __CFString *v82;
  const __CFString *v83;
  const __CFString *v84;
  const __CFString *v85;
  const __CFString *v86;
  const __CFString *v87;
  const char *v88;
  const __CFString *v89;
  const __CFString *v90;
  const __CFString *v91;
  const __CFString *v92;
  id v93;
  const __CFString *v94;
  const __CFString *v95;
  const __CFString *v96;
  const __CFString *v97;
  const char *v98;
  const __CFString *v99;
  const char *v100;
  const __CFString *v101;
  const __CFString *v102;
  const __CFString *v103;
  const __CFString *v104;
  const char *v105;
  const __CFString *v106;
  const char *v107;
  const __CFString *v108;
  const char *v109;
  const __CFString *v110;
  const __CFString *v111;
  const __CFString *v112;
  const __CFString *v113;
  const char *v114;
  const __CFString *v115;
  const char *v116;
  const __CFString *v117;
  const char *v118;
  const __CFString *v119;
  const __CFString *v120;
  const __CFString *v121;
  _UNKNOWN **v122;
  const char *v123;
  const __CFString *v124;
  id v125;
  const __CFString *v126;
  const __CFString *v127;
  const __CFString *v128;
  const char *v129;
  const char *v130;
  const __CFString *v131;
  const char *v132;
  const __CFString *v133;
  const __CFString *v134;
  const char *v135;
  const __CFString *v136;
  const __CFString *v137;
  const char *v138;
  const __CFString *v139;
  const __CFString *v140;
  const char *v141;
  const __CFString *v142;
  const __CFString *v143;
  const __CFString *v144;
  const __CFString *v145;
  const char *v146;
  const __CFString *v147;
  const char *v148;
  id v149;
  id *v150;
  void *v151;
  id location[2];

  v3 = a1;
  location[1] = a1;
  v150 = location;
  v149 = 0;
  location[0] = 0;
  objc_storeStrong(location, a2);
  v151 = v3;
  v25 = CFSTR("UIBarButtonItem");
  objc_msgSend(location[0], "validateClass:");
  objc_msgSend(location[0], "validateClass:", CFSTR("UIDatePicker"));
  v28 = CFSTR("UIDatePickerContentView");
  objc_msgSend(location[0], "validateClass:");
  objc_msgSend(location[0], "validateClass:", CFSTR("UIDatePickerWeekMonthDayView"));
  objc_msgSend(location[0], "validateClass:", CFSTR("UIFieldEditor"));
  v30 = CFSTR("UIImagePickerController");
  objc_msgSend(location[0], "validateClass:");
  objc_msgSend(location[0], "validateClass:", CFSTR("UIImageView"));
  v31 = CFSTR("UIInputViewSet");
  objc_msgSend(location[0], "validateClass:");
  objc_msgSend(location[0], "validateClass:", CFSTR("UIKBHandwritingView"));
  v39 = CFSTR("UIKeyboardLayoutStar");
  objc_msgSend(location[0], "validateClass:");
  v102 = CFSTR("UIKeyboardMenuView");
  objc_msgSend(location[0], "validateClass:");
  v68 = CFSTR("UIMovieScrubber");
  objc_msgSend(location[0], "validateClass:");
  v69 = CFSTR("UIMovieScrubberEditingView");
  objc_msgSend(location[0], "validateClass:");
  objc_msgSend(location[0], "validateClass:", CFSTR("UIMovieScrubberTrackView"));
  v10 = CFSTR("UINavigationBar");
  objc_msgSend(location[0], "validateClass:");
  v12 = CFSTR("UIPageControl");
  objc_msgSend(location[0], "validateClass:");
  v57 = CFSTR("UIPhysicalKeyboardEvent");
  objc_msgSend(location[0], "validateClass:");
  v74 = CFSTR("UIPickerView");
  objc_msgSend(location[0], "validateClass:");
  v13 = CFSTR("UIProgressView");
  objc_msgSend(location[0], "validateClass:");
  v58 = CFSTR("UIScrollView");
  objc_msgSend(location[0], "validateClass:");
  objc_msgSend(location[0], "validateClass:", CFSTR("UISearchDisplayControllerContainerView"));
  v110 = CFSTR("UISegment");
  objc_msgSend(location[0], "validateClass:");
  objc_msgSend(location[0], "validateClass:", CFSTR("UISegmentedControl"));
  objc_msgSend(location[0], "validateClass:", CFSTR("UIStatusBar"));
  v111 = CFSTR("UIStatusBarActivityItemView");
  objc_msgSend(location[0], "validateClass:");
  objc_msgSend(location[0], "validateClass:", CFSTR("UIStatusBarAirplaneModeItemView"));
  objc_msgSend(location[0], "validateClass:", CFSTR("UIStatusBarBatteryItemView"));
  v112 = CFSTR("UIStatusBarBatteryPercentItemView");
  objc_msgSend(location[0], "validateClass:");
  v79 = CFSTR("UIStatusBarBluetoothBatteryItemView");
  objc_msgSend(location[0], "validateClass:");
  v80 = CFSTR("UIStatusBarBluetoothItemView");
  objc_msgSend(location[0], "validateClass:");
  v81 = CFSTR("UIStatusBarDataNetworkItemView");
  objc_msgSend(location[0], "validateClass:");
  v113 = CFSTR("UIStatusBarDoubleHeightItemView");
  objc_msgSend(location[0], "validateClass:");
  objc_msgSend(location[0], "validateClass:", CFSTR("UIStatusBarIndicatorItemView"));
  v16 = CFSTR("UIStatusBarItem");
  objc_msgSend(location[0], "validateClass:");
  v82 = CFSTR("UIStatusBarServiceItemView");
  objc_msgSend(location[0], "validateClass:");
  v84 = CFSTR("UIStatusBarSignalStrengthItemView");
  objc_msgSend(location[0], "validateClass:");
  v85 = CFSTR("UIStatusBarTetheringItemView");
  objc_msgSend(location[0], "validateClass:");
  v86 = CFSTR("UIStatusBarThermalColorItemView");
  objc_msgSend(location[0], "validateClass:");
  v87 = CFSTR("UIStatusBarTimeItemView");
  objc_msgSend(location[0], "validateClass:");
  v59 = CFSTR("UIStepper");
  objc_msgSend(location[0], "validateClass:");
  v18 = CFSTR("UITabBar");
  objc_msgSend(location[0], "validateClass:");
  v90 = CFSTR("UITabBarItem");
  objc_msgSend(location[0], "validateClass:");
  v115 = CFSTR("UITableView");
  objc_msgSend(location[0], "validateClass:");
  v49 = CFSTR("UITableViewCell");
  objc_msgSend(location[0], "validateClass:");
  objc_msgSend(location[0], "validateClass:", CFSTR("UITableViewCellEditControl"));
  v91 = CFSTR("UITableViewCellEditingData");
  objc_msgSend(location[0], "validateClass:");
  v50 = CFSTR("UITableViewHeaderFooterView");
  objc_msgSend(location[0], "validateClass:");
  v52 = CFSTR("UITextEffectsWindow");
  objc_msgSend(location[0], "validateClass:");
  v92 = CFSTR("UITextField");
  objc_msgSend(location[0], "validateClass:");
  v62 = CFSTR("UITextPosition");
  objc_msgSend(location[0], "validateClass:");
  v61 = CFSTR("UITextPositionImpl");
  objc_msgSend(location[0], "validateClass:");
  v64 = CFSTR("UITextRange");
  objc_msgSend(location[0], "validateClass:");
  v63 = CFSTR("UITextRangeImpl");
  objc_msgSend(location[0], "validateClass:");
  objc_msgSend(location[0], "validateClass:", CFSTR("UITextReplacement"));
  v95 = CFSTR("UIToolbarButton");
  objc_msgSend(location[0], "validateClass:");
  v96 = CFSTR("UIToolbarTextButton");
  objc_msgSend(location[0], "validateClass:");
  objc_msgSend(location[0], "validateClass:", CFSTR("UITouchesEvent"));
  v21 = CFSTR("UITransitionView");
  objc_msgSend(location[0], "validateClass:");
  v66 = CFSTR("UIView");
  objc_msgSend(location[0], "validateClass:");
  objc_msgSend(location[0], "validateClass:", CFSTR("UIViewControllerWrapperView"));
  v65 = CFSTR("_UICircleProgressIndicator");
  objc_msgSend(location[0], "validateClass:");
  v56 = CFSTR("_UIQueuingScrollView");
  objc_msgSend(location[0], "validateClass:");
  v148 = "@";
  v4 = CFSTR("UIDictationController");
  objc_msgSend(location[0], "validateClass:hasClassMethod:withFullSignature:", "@", 0);
  v146 = "B";
  objc_msgSend(location[0], "validateClass:hasClassMethod:withFullSignature:", v4, CFSTR("isRunning"), 0);
  objc_msgSend(location[0], "validateClass:hasClassMethod:withFullSignature:", v4, CFSTR("serializedDictationPhrases:"), v148, 0);
  v136 = CFSTR("sharedInstance");
  objc_msgSend(location[0], "validateClass:hasClassMethod:withFullSignature:", v4, 0);
  v141 = "i";
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v4, CFSTR("state"), 0);
  v138 = "q";
  v135 = "v";
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v4, CFSTR("beginUserInteraction:"), "q", 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v4, CFSTR("endUserInteraction"), v135, 0);
  v5 = CFSTR("UIDictationView");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", 0);
  v130 = "{CGRect={CGPoint=dd}{CGSize=dd}}";
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v5, CFSTR("initWithFrame:"), v148, "{CGRect={CGPoint=dd}{CGSize=dd}}", 0);
  v6 = CFSTR("UIActivityGroupViewController");
  v8 = CFSTR("UICollectionViewController");
  objc_msgSend(location[0], "validateClass:isKindOfClass:");
  v44 = CFSTR("viewDidLoad");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v6, 0);
  v9 = CFSTR("UIKeyboardDictationMenu");
  objc_msgSend(location[0], "validateClass:hasClassMethod:withFullSignature:", 0);
  v29 = CFSTR("UIImage");
  objc_msgSend(location[0], "validateClass:hasClassMethod:withFullSignature:", v148, 0);
  objc_msgSend(location[0], "validateClass:hasClassMethod:withFullSignature:", v29, CFSTR("imageNamed: inBundle:"), v148, v148, 0);
  objc_msgSend(location[0], "validateClass:hasClassMethod:withFullSignature:", v29, CFSTR("kitImageNamed:"), v148, 0);
  v101 = CFSTR("UIKeyboardEmojiCategory");
  objc_msgSend(location[0], "validateClass:hasClassMethod:withFullSignature:", 0);
  objc_msgSend(location[0], "validateClass:hasClassMethod:withFullSignature:", v63, CFSTR("wrapDOMRange:"), v148, 0);
  v88 = "d";
  v7 = CFSTR("UITouch");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", "d", 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v7, CFSTR("setPhase:"), v135, v138, 0);
  v55 = "Q";
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v7, CFSTR("setTapCount:"), v135, "Q", 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v7, CFSTR("setWindow:"), v135, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v7, CFSTR("_setIsFirstTouchForView:"), v135, v146, 0);
  v129 = "{CGPoint=dd}";
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v7, CFSTR("_setLocationInWindow:resetPrevious:"), v135, "{CGPoint=dd}", v146, 0);
  v139 = CFSTR("UIWindow");
  objc_msgSend(location[0], "validateClass:hasClassMethod:withFullSignature:", v146, v146, 0);
  objc_msgSend(location[0], "validateClass:hasClassMethod:withFullSignature:", CFSTR("UIDictationPhrase"), CFSTR("phraseWithText:alternativeInterpretations:"), v148, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v8, CFSTR("collectionView"), v148, 0);
  v40 = CFSTR("fade");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v9, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v39, CFSTR("isShiftKeyBeingHeld"), v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v39, CFSTR("keyboard"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v39, CFSTR("showPopupVariantsForKey:"), v135, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", CFSTR("UIMenuController"), CFSTR("setMenuItems:"), v135, v148, 0);
  v22 = CFSTR("title");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", CFSTR("UIMenuItem"), 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v68, CFSTR("isEditing"), v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v68, CFSTR("movieScrubberTrackView: clampedSizeWidthDelta: actualSizeWidthDelta: originXDelta: minimumVisibleValue: maximumVisibleValue:"), v135, v148, v88, v88, v88, v88, v88, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v68, CFSTR("setEditing: animated:"), v135, v146, v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v68, CFSTR("setThumbIsVisible:"), v135, v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v68, CFSTR("setTrimEndValue:"), v135, v88, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v68, CFSTR("setTrimStartValue:"), v135, v88, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v68, CFSTR("thumbIsVisible"), v146, 0);
  v15 = CFSTR("value");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v68, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v68, CFSTR("_initSubviews"), v135, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v68, CFSTR("_setValue: andSendAction:"), v135, v88, v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v68, CFSTR("_sliderAnimationDidStop:"), v135, v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v68, CFSTR("_updateThumbLocation"), v135, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v10, CFSTR("popNavigationItem"), v135, 0);
  v11 = CFSTR("UINavigationButton");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v11, v22, v148, 0);
  v41 = CFSTR("UINavigationController");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v148, v141, v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v41, CFSTR("topViewController"), v148, 0);
  v48 = CFSTR("viewDidAppear:");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v41, v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v41, CFSTR("viewDidDisappear:"), v135, v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v41, CFSTR("_popViewControllerWithTransition: allowPoppingLast:"), v148, v141, v146, 0);
  v106 = CFSTR("UINavigationItem");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v106, CFSTR("customLeftView"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v106, CFSTR("customRightView"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v106, CFSTR("initWithCoder:"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v106, CFSTR("initWithTitle:"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v106, v22, v148, 0);
  v72 = CFSTR("_UINavigationItemView");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v12, CFSTR("currentPage"), v138, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v12, CFSTR("numberOfPages"), v138, 0);
  v73 = CFSTR("UIPasscodeField");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v73, CFSTR("showsOKButton"), v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v73, CFSTR("stringValue"), v148, 0);
  v14 = "@?";
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v139, CFSTR("_scrollToTopViewsUnderScreenPointIfNecessary: resultHandler:"), v135, v129, "@?", 0);
  v134 = CFSTR("UIApplication");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", CFSTR("UIPickerTableViewWrapperCell"), CFSTR("wrappedView"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v74, CFSTR("numberOfComponents"), v138, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v74, CFSTR("reloadAllComponents"), v135, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v74, CFSTR("_selectRow: inComponent: animated: notify:"), v135, v138, v138, v146, v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v74, CFSTR("allowsMultipleSelection"), v146, 0);
  v75 = CFSTR("UIPopoverController");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v146, v146, v146, 0);
  v108 = CFSTR("UIProgressHUD");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v148, 0);
  v53 = "f";
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v13, CFSTR("progress"), 0);
  v43 = CFSTR("UIReferenceLibraryViewController");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", 0);
  v45 = CFSTR("UIResponder");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v45, CFSTR("_moveLeft: withHistory:"), v146, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v45, CFSTR("_moveRight: withHistory:"), v146, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v45, CFSTR("_selectableText"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v45, CFSTR("_updateSelectionWithTextRange: withAffinityDownstream:"), v135, v148, v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v58, CFSTR("scrollRectToVisible: animated:"), v135, v130, v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v58, CFSTR("setContentOffset:"), v135, v129, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v58, CFSTR("_adjustContentOffsetIfNecessary"), v135, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v58, CFSTR("_scrollToTopFromTouchAtScreenLocation: resultHandler:"), v135, v129, v14, 0);
  v77 = CFSTR("UISearchDisplayController");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v77, CFSTR("setActive: animated:"), v135, v146, v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v77, CFSTR("_setTableViewVisible: inView:"), v135, v146, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", CFSTR("UISearchResultsTableView"), CFSTR("controller"), v148, 0);
  v46 = CFSTR("UISlider");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v46, CFSTR("minimumValue"), v53, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v46, CFSTR("setValue:"), v135, v53, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v46, v15, v53, 0);
  v47 = CFSTR("UISplitViewController");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v47, CFSTR("viewControllers"), v148, 0);
  v17 = CFSTR("touchesEnded: withEvent:");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v81, v148, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v16, CFSTR("indicatorName"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", CFSTR("UIStatusBarItemView"), CFSTR("item"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v84, v17, v135, v148, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v18, CFSTR("beginCustomizingItems:"), v135, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v18, CFSTR("_dismissCustomizeSheet:"), v135, v146, 0);
  v23 = CFSTR("systemItem");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v90, 0);
  v24 = CFSTR("view");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", CFSTR("UITabBarItemProxy"), 0);
  v19 = CFSTR("UITextInputTraits");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v19, CFSTR("isSecureTextEntry"), v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", CFSTR("UITextSelection"), CFSTR("caretRect"), v130, 0);
  v20 = CFSTR("UITextSelectionView");
  v34 = CFSTR("activate");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v20, CFSTR("selection"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v20, CFSTR("setVisible:"), v135, v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v21, CFSTR("_didCompleteTransition:"), v135, v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v66, CFSTR("visibleBounds"), v130, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v66, CFSTR("_scroller"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v66, CFSTR("_notifyReferenceViewSizeChange"), v135, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v66, CFSTR("setBackgroundColor:"), v135, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v66, CFSTR("setAlpha:"), v135, v88, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v66, CFSTR("setHidden:"), v135, v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v66, CFSTR("drawLayer:inContext:"), v135, v148, "^{CGContext=}", 0);
  v117 = CFSTR("UIViewAnimationState");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v117, CFSTR("animationDidStop: finished:"), v135, v148, v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", CFSTR("UIViewController"), v22, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v139, CFSTR("_isWindowServerHostingManaged"), v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v139, CFSTR("_orderFrontWithoutMakingKey"), v135, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v139, CFSTR("_setFirstResponder:"), v135, v148, 0);
  v119 = CFSTR("_UIDatePickerView");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", 0);
  v128 = CFSTR("string");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", CFSTR("CATextLayer"), 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", CFSTR("TIKeyboardCandidateResultSet"), CFSTR("candidates"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", CFSTR("UIActivityIndicatorView"), CFSTR("isAnimating"), v146, 0);
  v132 = "^{__IOHIDEvent=}";
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v134, CFSTR("handleKeyHIDEvent:"), v135, "^{__IOHIDEvent=}", 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v134, CFSTR("handleKeyUIEvent:"), v135, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v134, CFSTR("openURL:"), v146, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v134, CFSTR("sendEvent:"), v135, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v134, CFSTR("_accessibilityStatusChanged:"), v135, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v134, CFSTR("_fakingRequiresHighResolution"), v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v134, CFSTR("_finishButtonEvent:"), v135, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v134, CFSTR("_isActivated"), v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v134, CFSTR("_isClassic"), v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v134, CFSTR("_terminateWithStatus:"), v135, v141, 0);
  v127 = CFSTR("UIAutocorrectInlinePrompt");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v25, CFSTR("createViewForToolbar:"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v25, CFSTR("isSystemItem"), v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v25, v23, v138, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v25, v24, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v25, CFSTR("_updateView"), v135, 0);
  v26 = CFSTR("UIButton");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v26, CFSTR("currentTitle"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v26, CFSTR("titleForState:"), v148, v55, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", CFSTR("UICollectionView"), CFSTR("indexPathForSupplementaryView:"), v148, 0);
  v60 = CFSTR("UIControl");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", 0);
  v27 = CFSTR("UIDateLabel");
  v51 = CFSTR("text");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v27, CFSTR("timeDesignator"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v27, CFSTR("timeDesignatorAppearsBeforeTime"), v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v27, CFSTR("use24HourTime"), v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v28, CFSTR("titleLabel"), v148, 0);
  v67 = CFSTR("UIDimmingView");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v67, CFSTR("passthroughViews"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", CFSTR("UIEvent"), CFSTR("_isKeyDown"), v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v29, CFSTR("_bezeledImageWithShadowRed: green: blue: alpha: fillRed: green: blue: alpha: drawShadow:"), v148, v88, v88, v88, v88, v88, v88, v88, v88, v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v29, CFSTR("_doubleBezeledImageWithExteriorShadowRed: green: blue: alpha: interiorShadowRed: green: blue: alpha: fillRed: green: blue: alpha:"), v148, v88, v88, v88, v88, v88, v88, v88, v88, v88, v88, v88, v88, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v29, CFSTR("_flatImageWithWhite: alpha:"), v148, v88, v88, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v29, CFSTR("_imageScaledToProportion: interpolationQuality:"), v148, v88, v141, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v30, CFSTR("_initWithSourceImageData: cropRect:"), v148, v130, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v31, CFSTR("visible"), v146, 0);
  v32 = CFSTR("UIKBKeyplaneView");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v141, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v32, CFSTR("viewForKey:"), v148, 0);
  v33 = CFSTR("UIKBTree");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v33, CFSTR("keysOrderedByPositionWithoutZip"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v33, CFSTR("subtrees"), v148, 0);
  v35 = CFSTR("UIKeyboard");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v35, CFSTR("deactivate"), v135, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", CFSTR("UIKeyboardEmoji"), CFSTR("emojiString"), v148, 0);
  v36 = CFSTR("UIKeyboardEmojiCategoryBar");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v141, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v36, CFSTR("setSelectedIndex:"), v135, v55, 0);
  v147 = CFSTR("UIKeyboardImpl");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v147, CFSTR("hideKeyboard"), v135, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", CFSTR("_UIKeyboardStateManager"), CFSTR("setShift: autoshift:"), v135, v146, v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v147, CFSTR("showKeyboard"), v135, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v147, CFSTR("updateAutocorrectPrompt:"), v135, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v147, CFSTR("updateTextCandidateView"), v135, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v147, CFSTR("performTextOperationActionSelector:"), v135, ":", 0);
  v37 = CFSTR("UITextInput_Internal");
  objc_msgSend(location[0], "validateProtocol:hasRequiredInstanceMethod:");
  objc_msgSend(location[0], "validateProtocol:hasRequiredInstanceMethod:", v37, CFSTR("_moveDown:withHistory:"));
  v38 = CFSTR("UIKeyboardLayout");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v38, CFSTR("keyplaneNamed:"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v39, CFSTR("canProduceString:"), v146, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v39, CFSTR("handlePopupView:"), v135, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v39, CFSTR("showPopupView: withKey: popupInfo: force:"), v135, v138, v148, v148, v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v102, v40, v135, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v102, CFSTR("fadeWithDelay:"), v135, v88, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v102, CFSTR("_delayedFade"), v135, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", CFSTR("UILayoutContainerView"), CFSTR("delegate"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v41, CFSTR("isNavigationBarHidden"), v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v41, CFSTR("isToolbarHidden"), v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v106, CFSTR("setLeftBarButtonItem: animated:"), v135, v148, v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v106, CFSTR("setRightBarButtonItem: animated:"), v135, v148, v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v72, CFSTR("initWithNavigationItem:"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v57, CFSTR("set_inputFlags:"), v135, v141, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v57, CFSTR("set_markedInput:"), v135, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v57, CFSTR("set_modifiedInput:"), v135, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v57, CFSTR("set_privateInput:"), v135, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v57, CFSTR("set_shiftModifiedInput:"), v135, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v57, CFSTR("set_unmodifiedInput:"), v135, v148, 0);
  v42 = CFSTR("UIPickerTableView");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v42, CFSTR("_scrollRowAtIndexPathToSelectionBar: animated:"), v148, v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v43, v44, v135, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", CFSTR("UIRefreshControl"), CFSTR("_refreshControlHeight"), v88, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v45, CFSTR("_keyCommandForEvent:"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v58, CFSTR("_scrollViewAnimationEnded: finished:"), v135, v148, v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v46, CFSTR("continueTrackingWithTouch: withEvent:"), v146, v148, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v46, CFSTR("endTrackingWithTouch: withEvent:"), v135, v148, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v47, CFSTR("setViewControllers:"), v135, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v47, v48, v135, v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", CFSTR("UIStatusBarComposedData"), CFSTR("isItemEnabled:"), v146, v141, 0);
  v126 = CFSTR("UIStatusBarForegroundView");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v148, v141, v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v115, CFSTR("dequeueReusableCellWithIdentifier: forIndexPath:"), v148, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v115, CFSTR("_canEditRowAtIndexPath:"), v146, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v115, CFSTR("_cellReuseMapForType:"), v148, v141, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v115, CFSTR("_classMapForType:"), v148, v141, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v115, CFSTR("_configureCellForDisplay: forIndexPath:"), v135, v148, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v115, CFSTR("_editingStyleForRowAtIndexPath:"), v138, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v58, CFSTR("_refreshControl"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v115, CFSTR("_userSelectRowAtPendingSelectionIndexPath:"), v135, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v49, CFSTR("setReuseIdentifier:"), v135, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v50, CFSTR("sectionHeader"), v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v50, v51, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v52, CFSTR("hostedWindowOffset"), v129, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v92, CFSTR("fieldEditorDidChange:"), v135, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v92, CFSTR("setRightView:"), v135, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v66, CFSTR("charge"), v53, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v139, CFSTR("_isHostedInAnotherProcess"), v146, 0);
  v120 = CFSTR("_UIDatePickerMode");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v138, 0);
  v54 = CFSTR("is24Hour");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v120, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v120, v54, v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v120, CFSTR("numberOfRowsForCalendarUnit:"), v138, v55, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v120, CFSTR("rangeForCalendarUnit:"), "{_NSRange=QQ}", v55, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v120, CFSTR("titleForRow: inComponent:"), v148, v138, v138, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v120, CFSTR("isTimeIntervalMode"), v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v56, CFSTR("visibleView"), v148, 0);
  v121 = CFSTR("_UIRemoteViewController");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v121, CFSTR("_awakeWithConnectionInfo:"), v135, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", CFSTR("_UIScrollsToTopInitiatorView"), CFSTR("_shouldSeekHigherPriorityTouchTarget"), v146, 0);
  objc_msgSend(location[0], "validateClass:isKindOfClass:", v57, CFSTR("UIInternalEvent"));
  objc_msgSend(location[0], "validateClass:isKindOfClass:", v58, v66);
  objc_msgSend(location[0], "validateClass:isKindOfClass:", v59, v60);
  objc_msgSend(location[0], "validateClass:isKindOfClass:", CFSTR("UITableViewCountView"), v66);
  objc_msgSend(location[0], "validateClass:isKindOfClass:", v61, v62);
  objc_msgSend(location[0], "validateClass:isKindOfClass:", v63, v64);
  objc_msgSend(location[0], "validateClass:isKindOfClass:", v65, v66);
  v118 = "NSString";
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v127, CFSTR("m_correction"));
  v76 = CFSTR("_delegate");
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v67);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v68, v76, "<UIMovieScrubberDelegate>");
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v68, CFSTR("_editingView"), "UIMovieScrubberEditingView");
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v68, CFSTR("_maximumValue"), v88);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v68, CFSTR("_minimumValue"), v88);
  v70 = "UIImageView";
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v68, CFSTR("_thumbView"));
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v68, CFSTR("_trackView"), "UIMovieScrubberTrackView");
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v68, CFSTR("_trimEndValue"), v88);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v68, CFSTR("_trimStartValue"), v88);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v69, CFSTR("_leftImageView"), v70);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v69, CFSTR("_rightImageView"), v70);
  v103 = CFSTR("_UINavBarPrompt");
  v104 = CFSTR("_navBar");
  v105 = "UINavigationBar";
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:");
  v71 = CFSTR("_UINavigationBarVisualProviderLegacyIOS");
  objc_msgSend(location[0], "validateClass:isKindOfClass:");
  v107 = "NSArray";
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v71, CFSTR("_leftViews"));
  v78 = "UIView";
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v106, CFSTR("_backButtonView"));
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v72, CFSTR("_item"), "UINavigationItem");
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v73, CFSTR("_okButton"), "UIButton");
  v97 = CFSTR("_tables");
  v98 = "NSMutableArray";
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v74);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v75, v76, v148);
  v109 = "UILabel";
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v77, CFSTR("_noResultsLabel"));
  v94 = CFSTR("_info");
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v110);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v79, CFSTR("_capacity"), v141);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v80, CFSTR("_connected"), v146);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v81, CFSTR("_dataNetworkType"), v141);
  v83 = CFSTR("_showRSSI");
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v81);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v81, CFSTR("_wifiStrengthRaw"), v141);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v82, CFSTR("_contentType"), v141);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v84, v83, v146);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v84, CFSTR("_signalStrengthBars"), v141);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v84, CFSTR("_signalStrengthRaw"), v141);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v85, CFSTR("_tetheringConnectionCount"), v141);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v86, CFSTR("_thermalColor"), v141);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v87, CFSTR("_dateTimeString"), v118);
  v89 = CFSTR("UITabBarCustomizeView");
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:");
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v89, CFSTR("_gridOffset"), v88);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v89, CFSTR("_itemsInRowCount"), v138);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v89, CFSTR("_proxies"), v98);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v90, CFSTR("_view"), "UITabBarButton");
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v115, CFSTR("_countLabel"), "UITableViewCountView");
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v91, CFSTR("_editingStyle"), v138);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", CFSTR("UITableViewIndex"), CFSTR("_selectedSection"), v138);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v92, CFSTR("_clearButton"), "_UITextFieldClearButton");
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v92, CFSTR("_traits"), "UITextInputTraits");
  v93 = location[0];
  v122 = &off_24FF3C000;
  objc_opt_class();
  v123 = "__CGRect__";
  objc_msgSend(v93, "validateClass:hasInstanceVariable:withType:", v95, CFSTR("_hitRect"), __ax_verbose_encode_with_type_encoding_group_class());
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v95, v94, "_UIToolbarNavigationButton");
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v95, CFSTR("_label"), v109);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v95, CFSTR("_onState"), v146);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v96, CFSTR("_title"), v118);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v119, CFSTR("_hourLabel"), v109);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v119, CFSTR("_minuteLabel"), v109);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v119, v97, v98);
  v99 = CFSTR("_UITableViewReorderingSupport");
  v100 = "NSIndexPath";
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:");
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v99, CFSTR("_targetIndexPath"), v100);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", CFSTR("UIAccessibilityElementKBKey"), CFSTR("_key"), "UIKBTree");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v101, CFSTR("categoryType"), v138, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v101, CFSTR("_emoji"), v107);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v102, CFSTR("m_table"), "UIInputSwitcherTableView");
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v103, v104, v105);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v106, CFSTR("_customLeftViews"), v107);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v106, CFSTR("_customRightViews"), v107);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v106, CFSTR("_leftBarButtonItems"), v107);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v106, CFSTR("_rightBarButtonItems"), v107);
  v124 = CFSTR("UIPickerColumnView");
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:");
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", CFSTR("UIPrinterBrowserViewController"), CFSTR("_searchingView"), "UIPrinterSearchingView");
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v108, CFSTR("_progressMessage"), v109);
  v114 = "_UIBadgeView";
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v110, CFSTR("_badgeView"));
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v111, CFSTR("_syncActivity"), "c");
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v112, CFSTR("_percentString"), v118);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v113, CFSTR("_contentsString"), v118);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", CFSTR("UIStatusBarLocationItemView"), CFSTR("_iconType"), v141);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", CFSTR("UITabBarButton"), CFSTR("_badge"), v114);
  v116 = "NSMutableDictionary";
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v115, CFSTR("_nibExternalObjectsTables"));
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v115, CFSTR("_nibMap"), v116);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v117, CFSTR("_animationID"), v118);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v119, CFSTR("_mode"), "_UIDatePickerMode");
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v120, CFSTR("_selectedDateComponents"), "NSDateComponents");
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v121, CFSTR("_fullScreenTextEffectsRemoteView"), "_UITextEffectsRemoteView");
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v121, CFSTR("_serviceViewControllerRemoteView"), "_UIRemoteView");
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v121, CFSTR("_viewControllerOperatorProxy"), v148);
  v125 = location[0];
  objc_opt_class();
  objc_msgSend(v125, "validateClass:hasInstanceVariable:withType:", v124, CFSTR("_tableFrame"), __ax_verbose_encode_with_type_encoding_group_class());
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v126, CFSTR("_itemIsEnabled"), "[52B]");
  objc_msgSend(location[0], "validateClass:", v127);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", CFSTR("UICollectionViewAccessibility"), CFSTR("_accessibilityUserTestingVisibleCells"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", CFSTR("UITableViewCellAccessibility"), CFSTR("tableTextAccessibleLabel:"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", CFSTR("UIPDFPage"), v128, v148, 0);
  v131 = CFSTR("UIPDFPageView");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v129, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v131, CFSTR("convertRectFromPDFPageSpace:"), v130, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v131, CFSTR("page"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v134, CFSTR("_eventDispatcher"), "UIEventDispatcher");
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", CFSTR("UIEventDispatcher"), CFSTR("_eventFetcher"), "UIEventFetcher");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", CFSTR("UIEventFetcher"), CFSTR("_receiveHIDEvent:"), v135, v132, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", CFSTR("NSBundle"), CFSTR("_resolvedPath"), v148);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", CFSTR("UIPeripheralHost"), CFSTR("containerRootController"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", CFSTR("UIInputWindowController"), CFSTR("_inputAccessoryView"), v148, 0);
  v133 = CFSTR("UIScreen");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v138, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v133, CFSTR("_interfaceOrientation"), v138, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v134, CFSTR("_frontMostAppOrientation"), v138, 0);
  objc_msgSend(location[0], "validateClass:hasClassMethod:withFullSignature:", CFSTR("UISApplicationSupportDisplayEdgeInfo"), CFSTR("defaultDisplayEdgeInfo"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v139, CFSTR("_sceneSettingsSafeAreaInsetsDidChange"), v135, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v139, CFSTR("_layerForCoordinateSpaceConversion"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v139, CFSTR("_transformLayer"), "CALayer");
  v137 = CFSTR("UIKeyboardCandidateController");
  objc_msgSend(location[0], "validateClass:");
  objc_msgSend(location[0], "validateClass:hasClassMethod:withFullSignature:", v137, v136, v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v137, CFSTR("isExtended"), v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v139, CFSTR("_interfaceOrientationForSceneSafeAreaInsetsIncludingStatusBar:"), v138, v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v139, CFSTR("_normalizedSafeAreaInsets"), "{UIEdgeInsets=dddd}", 0);
  v140 = CFSTR("_UIViewServiceViewControllerOperator");
  objc_msgSend(location[0], "validateClass:");
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", v140, CFSTR("_hostPID"), v141);
  v143 = CFSTR("_UIStatusBarTimeItem");
  objc_msgSend(location[0], "validateClass:");
  v142 = CFSTR("_UIStatusBar");
  objc_msgSend(location[0], "validateClass:");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v142, CFSTR("items"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v143, CFSTR("pillTimeView"), v148, 0);
  v144 = CFSTR("RBSProcessIdentity");
  objc_msgSend(location[0], "validateClass:");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v144, CFSTR("isEmbeddedApplication"), v146, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v144, CFSTR("isDaemon"), v146, 0);
  v145 = CFSTR("UIInterfaceActionRepresentationView");
  objc_msgSend(location[0], "validateClass:");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v145, CFSTR("isHighlighted"), v146, 0);
  objc_msgSend(location[0], "validateClass:hasClassMethod:withFullSignature:", CFSTR("UIKeyboardSceneDelegate"), CFSTR("automaticKeyboardArbiterClient"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasProperty:withType:", CFSTR("_UIKeyboardArbiterClient"), CFSTR("keyboardActive"), v146);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", CFSTR("UIScene"), CFSTR("_FBSScene"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", v147, CFSTR("_textChoicesAssistant"), v148, 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", CFSTR("_UITextChoiceAccelerationAssistant"), CFSTR("underlinedWordData"), v148, 0);
  objc_storeStrong(v150, v149);
  return 1;
}

uint64_t __63__AXUIKitGlue__accessibilityInitializeSubclassRuntimeOverrides__block_invoke_3(void *a1, void *a2)
{
  char v3;
  id location[2];

  location[1] = a1;
  location[0] = 0;
  objc_storeStrong(location, a2);
  objc_msgSend(location[0], "setValidationTargetName:");
  objc_msgSend(location[0], "setOverrideProcessName:", CFSTR("UIKit"));
  objc_msgSend(location[0], "setDebugBuild:", AX_IS_DEBUG_BUILD() & 1);
  v3 = AXPerformValidationChecks();
  objc_storeStrong(location, 0);
  return v3 & 1;
}

void __63__AXUIKitGlue__accessibilityInitializeSubclassRuntimeOverrides__block_invoke_4(void *a1, void *a2)
{
  id location[2];

  location[1] = a1;
  location[0] = 0;
  objc_storeStrong(location, a2);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIKeyInputUIResponderAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UITextInputUIResponderAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UINavigationBarAccessibility_UIViewAccessibilityAdditions"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UILabelAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UITableViewCellAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UITableViewCellContentViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UITabBarButtonAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UISegmentAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UISegmentedControlAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIFieldEditorAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIScrollViewScrollIndicatorAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIScrollViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIQueuingScrollViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIMenuControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UITableViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIContentUnavailableWrapperViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIFocusEventRecognizerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIFocusGuideRegionAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIInterfaceActionCustomViewRepresentationViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UINavigationBarAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UITextFieldAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UITabBarAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UITabOutlineViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UITabBarItemBridgedElementAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIFloatingTabBarCollectionViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIFloatingTabBarItemViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIFloatingTabBarPageButtonAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UITabSidebarCellAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIInputSwitcherViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIInputSwitcherAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIKeyboardSplitControlMenuAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UITabBarItemAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UITabBarVisualProviderLegacyIOSAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIBarItemAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIBarButtonItemAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UITextViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UITextEffectsWindowAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIKeyboardLayoutStarAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIKeyboardLayoutCursorAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIGestureKeyboardIntroductionAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIHoverGestureRecognizerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIPageControlAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIImageViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIKeyboardImplAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIControlAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIButtonAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UISwitchAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIToolbarButtonAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UINavigationButtonAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIImageAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIToolbarAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIWindowAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIApplicationAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UINavigationControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIViewControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIImageNibPlaceholderAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UINavigationItemAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("CALayerAccessibility__UIKit__QuartzCore"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UITextAccessibilityNSObjectAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIKeyboardAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIRemoteViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIRemoteViewControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIHostedWindowAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UICollectionReusableViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UICollectionViewCellAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UICollectionViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIEditMenuListViewCellAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIEditMenuListViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIEditMenuPageButtonAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UILayoutContainerViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIPanelControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIPanelBorderViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UILegibilityLabelAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UISearchControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIScreenAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIButtonBarButtonAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIAccessibilityCustomRotorAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIAccessibilityCustomRotorItemResultAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UINavigationBarLargeTitleViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIKeyboardDockViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UISplitViewControllerPanelImplAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UISplitViewControllerClassicImplAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UISplitViewControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIInputSetHostViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UITransitionViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UISliderAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIPresentationControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UISheetPresentationControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIDimmingViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIViewAnimationStateAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UISearchAtomViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIPickerColumnViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIPickerTableViewCellAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIRootSceneWindowAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UISystemGestureWindowAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UISearchPresentationControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UISearchBarVisualProviderLegacyAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UISearchBarVisualProviderIOSAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UISearchTokenLayoutViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UISearchTokenAttachmentAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UITableViewCellLayoutManagerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIFocusGuideAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UISizeTrackingViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIContextualActionAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UISwipeActionPullViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIFocusRingManagerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UISystemShellApplicationAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStatusBar_ModernAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIFocusSearchInfoAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIPopoverPresentationControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UITableCellAccessoryButtonAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIPlatterTransformViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIMorphingPlatterViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIFocusScrollManagerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIPageViewControllerContentViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIContextMenuCellContentViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIContextMenuListViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIContinuousSelectionGestureRecognizerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIContextMenuUIControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIActionAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UICollectionViewOrthogonalScrollViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIRemoteKeyboardWindowHostedAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIKeyboardPopoverAffordanceAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIKeyboardFloatingTransitionControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UISplitKeyboardSupportAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UINavigationBarPaletteAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIInterfaceActionRepresentationViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIApplicationRotationFollowingWindowAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIPanelWrapperViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIDeepestPreferredEnvironmentSearchAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UICollectionViewListCellAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UITextFieldClearButtonAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIFocusSystemSceneComponentAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIFocusSystemKeyboardSceneComponentAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UICalendarDateViewCellAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UICalendarHeaderViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UICalendarViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIDatePickerCalendarTimeViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIDatePickerCalendarTimeLabelAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIDatePickerIOSCompactViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIButtonBarButtonVisualProviderIOSAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UICollectionViewListCellReorderControlAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIListContentConfigurationAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIBasicCellContentViewConfigurationAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UISubtitleCellContentViewConfigurationAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIValueCellContentViewConfigurationAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UICollectionViewListHeaderFooterAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIBasicHeaderFooterContentViewConfigurationAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIContentViewLabelConfigurationAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UICoverSheetButtonAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIDatePickerLinkedLabelAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIFocusSystemAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIWindowSceneAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UICollectionViewDiffableDataSourceAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIKBInputDelegateManagerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIContextMenuActionsOnlyViewControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIContextMenuViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIDatePickerCompactTimeLabelAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UITextRangeViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIKeyShortcutHUDShortcutCellAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIKeyShortcutHUDToolbarCategoryCellAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIKeyShortcutHUDWindowAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIKeyShortcutHUDViewControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIKeyShortcutHUDShortcutInputViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIKeyShortcutHUDServiceAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIKeyShortcutHUDToolbarViewControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIKeyShortcutHUDToolbarSearchCellAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIKeyShortcutHUDMenuViewControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIKeyShortcutHUDCategoryHeaderCellAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIDatePickerCompactDateLabelAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIDatePickerContainerViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIRootPresentationControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIListContentViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIAssistantBarButtonItemProviderAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIStatusBarCellularCondensedItemAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIStatusBarIndicatorLocationItemAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIStatusBarIndicatorQuietModeItemAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UITextMenuLinkInteractionAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIDropShadowViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIRemoteKeyboardPlaceholderViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UICalendarWeekdayViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIKeyboardSceneDelegateAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIWindowSystemOverlayWindowAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIPasteControlAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIStatusBarRoundedCornerViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIColorPickerViewControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIStatusBarDualCellularSignalViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIKeyboardEmojiDraggableViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UITextChoiceAccelerationBubbleAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UITextChoiceAccelerationAssistantAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UITextOptionAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIInlineTextCompletionControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIKBRTIPartnerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UITextRefinementTouchBehaviorAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIKeyboardStateManagerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIKeyboardTextSelectionInteractionAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIKeyboardEmojiAndStickerCollectionViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIKeyboardStickerCollectionViewCellAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIEditMenuCollectionViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UITabContainerViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIFloatingTabBarAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIAlertControllerPhoneTVMacViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIDocumentLaunchViewControllerAccessibility"), 1);
  objc_storeStrong(location, 0);
}

void __63__AXUIKitGlue__accessibilityInitializeSubclassRuntimeOverrides__block_invoke_5(void *a1, void *a2)
{
  id location[2];

  location[1] = a1;
  location[0] = 0;
  objc_storeStrong(location, a2);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("NSCoreTypesetterAccessibility__UIKit__UIFoundation"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("NSSingleLineTypesetterAccessibility__UIKit__UIFoundation"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("NSStringDrawingTextStorageAccessibility__UIKit__UIFoundation"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("NSLineFragmentRenderingContextAccessibility__UIKit__UIFoundation"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIDictationControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIDictationViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIDictationLayoutViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIReferenceLibraryViewControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIActivityGroupViewControllerAccessibility__UIKit__ShareSheet"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIRemoteDictionaryViewControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIKeyboardCandidateViewStateAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIPickerViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UISearchFieldAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIToolbarTextButtonAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UITableViewIndexAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIDateLabelAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UISearchBarAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIAutocorrectInlinePromptAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UITabBarCustomizeViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIPasscodeFieldAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UITableViewHeaderFooterViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIDatePickerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIProgressViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIPopoverControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UISearchDisplayControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIDatePickerContentViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UITableViewCountViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIProgressHUDAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UITableViewControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIMovieScrubberAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStatusBar_BaseAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("NSUndoManagerAccessibility__UIKit__Foundation"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIPageControllerScrollViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIReplicantViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UITextSelectionViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UITableViewCellEditControlAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UITabBarControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UITableViewCellReorderControlAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UISearchBarTextFieldAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UISearchTextFieldAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStackViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIPageViewControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UISearchResultsTableViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIPopoverViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIActivityIndicatorViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIViewControllerWrapperViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStepperAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIInterfaceActionSystemRepresentationViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStatusBarAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStatusBarItemViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStatusBarActivityItemViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStatusBarIndicatorItemViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStatusBarAirplaneModeItemViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStatusBarBatteryItemViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStatusBarBatteryPercentItemViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStatusBarBluetoothBatteryItemViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStatusBarBluetoothItemViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStatusBarDataNetworkItemViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStatusBarDoubleHeightItemViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStatusBarQuietModeItemViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStatusBarServiceItemViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStatusBarSignalStrengthItemViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStatusBarThermalColorItemViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStatusBarTimeItemViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStatusBarTetheringItemViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStatusBarLiquidDetectionItemViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UINavigationControllerPaletteAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStatusBarNotChargingItemViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStatusBarForegroundViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStatusBarPersonNameItemViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStatusBarLockItemViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIPopoverViewBackgroundComponentViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIScrollsToTopInitiatorViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStatusBarLocationItemViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIKeyboardEmojiCategoryBarAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIKeyboardMenuViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIInputSwitcherTableCellAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIInputSwitcherSegmentedTableCellAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIInputSwitcherTableCellSegmentViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIInputSwitcherSegmentControlAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIBackdropViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIBackgroundHitTestWindowAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIBarBackgroundAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UINavigationBarVisualProviderModernIOSAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UITableViewCellDetailDisclosureViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIKBHandwritingStrokeViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIPickerContentViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UISearchDisplayControllerContainerViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIDatePickerWeekMonthDayViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStatusBarCarPlayDockAppItemButtonAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("TIKeyboardCandidateAccessibility__UIKit__TextInput"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("TIPreferencesControllerAccessibility__UIKit__TextInput"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIActionSliderAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIStaticScrollBarAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIAlertControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIAlertControllerActionViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIInterfaceActionGroupHeaderScrollViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UICircleProgressIndicatorAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIKBTutorialModalDisplayAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIMorphingLabelAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIInputSwitcherTableViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIAlertControllerViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIKBBlurredKeyViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIMovieScrubberEditingViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UITableViewWrapperViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UITextInputControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIResponderAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStatusBarWindowAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("NSTextAttachmentAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIColorAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UISearchControllerViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIRepeatedActionAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIKeyboardEmojiSectionHeaderAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIKeyboardEmojiCollectionViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIKeyboardEmojiCollectionViewCellAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIKBEmojiSnapshotSizingViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIKeyboardEmojiCollectionInputViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIViewServiceInterfaceAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIViewServiceInterfaceConnectionRequestAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UITextEffectsRemoteViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStatusBarBreadcrumbItemViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIStatusBarOpenInSafariItemViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIMultiColumnViewControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UICollectionViewTableCellAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UITableViewCollectionCellAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIInputWindowControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIKeyboardTypingStyleEstimatorAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIEditingOverlayViewControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIKBUndoControlAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIUndoGestureInteractionAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIStatusBarAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIStatusBarCellularNetworkTypeViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIStatusBarTimeItemAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIStatusBarStringViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIStatusBarCellularItemAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIStatusBarWifiItemAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIStatusBarSignalViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIStatusBarWifiSignalViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIStatusBarCellularSignalViewAcessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIBatteryViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIStatusBarBatteryItemAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIStatusBarBluetoothItemAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIStatusBarPillViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIStatusBarActivityViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIStatusBarLockViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIStatusBarThermalItemAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIStatusBarIndicatorItemAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIStatusBarImageViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIStatusBarBackgroundActivityItemAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIViewServiceViewControllerOperatorAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UINavigationBarTitleControlAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIStatusBarNavigationItemAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIInteractiveHighlightEffectWindowAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIAlertControllerTextFieldViewControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UISearchBarContainerViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIPreviewPresentationControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIPreviewPresentationControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIPreviewPresentationContainerViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIPreviewTransitionControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIPreviewInteractionControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIPreviewPresentationPlatterViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIIndexBarAccessoryViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIColorWellAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIButtonBarStackViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIPreviewActionSheetItemViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIPreviewActionSheetViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIKeyboardTextSelectionGestureControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIBadgeViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIPreviewActionAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UILabelAttributedStringContentAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UISystemKeyboardDockControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIKeyboardDockItemAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIKeyboardDockItemButtonAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIButtonLabelAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UISwipeActionStandardButtonAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIDictationSearchButtonAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIGrabberAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIScenePresentationViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UISceneLayerHostContainerViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIRemoteKeyboardWindowAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIContextMenuContainerViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIBarCustomizationChicletAnchorViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIBarCustomizationContainerViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIBarCustomizationReservoirCellAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIBarCustomizerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UILongPressGestureRecognizerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIFindNavigatorHarnessAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIFindNavigatorViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIFindNavigatorViewControllerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("_UIFindNavigatorSearchTextFieldAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIFindSessionAccessibility"), 1);
  objc_storeStrong(location, 0);
}

uint64_t __63__AXUIKitGlue__accessibilityInitializeSubclassRuntimeOverrides__block_invoke_6()
{
  return AXPerformBlockOnMainThreadAfterDelay();
}

void __63__AXUIKitGlue__accessibilityInitializeSubclassRuntimeOverrides__block_invoke_7()
{
  +[AXUIKitGlue _handleWebKitLegacyInstallation]();
}

+ (void)_handleWebKitLegacyInstallation
{
  id location;
  dispatch_once_t *v1;

  objc_opt_self();
  v1 = (dispatch_once_t *)&_handleWebKitLegacyInstallation_onceToken;
  location = 0;
  objc_storeStrong(&location, &__block_literal_global_2086);
  if (*v1 != -1)
    dispatch_once(v1, location);
  objc_storeStrong(&location, 0);
}

void __63__AXUIKitGlue__accessibilityInitializeSubclassRuntimeOverrides__block_invoke_8()
{
  id v0;

  v0 = (id)objc_msgSend(MEMORY[0x24BDFE4F8], "sharedInstance");
  objc_msgSend(v0, "performValidations:withPreValidationHandler:postValidationHandler:", &__block_literal_global_2075, &__block_literal_global_2078, 0);

}

uint64_t __63__AXUIKitGlue__accessibilityInitializeSubclassRuntimeOverrides__block_invoke_9(void *a1, void *a2)
{
  id location[2];

  location[1] = a1;
  location[0] = 0;
  objc_storeStrong(location, a2);
  objc_msgSend(location[0], "validateClass:", CFSTR("_TVCarouselView"));
  objc_storeStrong(location, 0);
  return 1;
}

uint64_t __63__AXUIKitGlue__accessibilityInitializeSubclassRuntimeOverrides__block_invoke_10(void *a1, void *a2)
{
  char v3;
  id location[2];

  location[1] = a1;
  location[0] = 0;
  objc_storeStrong(location, a2);
  objc_msgSend(location[0], "setValidationTargetName:", CFSTR("UIKit - TVMLKit"));
  objc_msgSend(location[0], "setOverrideProcessName:", CFSTR("UIKitTVMLKit"));
  objc_msgSend(location[0], "setDebugBuild:", AX_IS_DEBUG_BUILD() & 1);
  v3 = AXPerformValidationChecks();
  objc_storeStrong(location, 0);
  return v3 & 1;
}

void __46__AXUIKitGlue__handleWebKitLegacyInstallation__block_invoke(void *a1)
{
  id v1;
  id location[3];

  location[2] = a1;
  location[1] = a1;
  v1 = (id)objc_msgSend(MEMORY[0x24BDFE4F8], "sharedInstance");
  objc_msgSend(v1, "performValidations:withPreValidationHandler:postValidationHandler:safeCategoryInstallationHandler:", &__block_literal_global_2087, &__block_literal_global_2103, 0, &__block_literal_global_2108);

  location[0] = (id)objc_msgSend(MEMORY[0x24BDD1488], "accessibilityBundleWithLastPathComponent:", CFSTR("WebKit.axbundle"));
  if (location[0])
    objc_msgSend(MEMORY[0x24BEBADF8], "loadAccessibilityBundle:didLoadCallback:loadSubbundles:", location[0], 0, 0);
  objc_storeStrong(location, 0);
}

uint64_t __46__AXUIKitGlue__handleWebKitLegacyInstallation__block_invoke_2(void *a1, void *a2)
{
  void *v3;
  const char *v4;
  id obj;
  id *v6;
  void *v7;
  id location[2];

  v3 = a1;
  location[1] = a1;
  v6 = location;
  obj = 0;
  location[0] = 0;
  objc_storeStrong(location, a2);
  v7 = v3;
  v4 = "@";
  objc_msgSend(location[0], "validateClass:hasClassMethod:withFullSignature:", CFSTR("UIWebFormSelectPeripheral"), CFSTR("createPeripheralWithDOMHTMLSelectElement:"), "@", 0);
  objc_msgSend(location[0], "validateClass:hasInstanceVariable:withType:", CFSTR("UITextContentView"), CFSTR("m_webView"), "UIWebDocumentView");
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", CFSTR("UIWebPlugInView"), CFSTR("webPlugInStart"), "v", 0);
  objc_msgSend(location[0], "validateClass:hasInstanceMethod:withFullSignature:", CFSTR("_UIDatePickerMode"), CFSTR("todayTextColor"), v4, 0);
  objc_storeStrong(v6, obj);
  return 1;
}

uint64_t __46__AXUIKitGlue__handleWebKitLegacyInstallation__block_invoke_3(void *a1, void *a2)
{
  char v3;
  id location[2];

  location[1] = a1;
  location[0] = 0;
  objc_storeStrong(location, a2);
  objc_msgSend(location[0], "setValidationTargetName:", CFSTR("UIKit - Web"));
  objc_msgSend(location[0], "setOverrideProcessName:", CFSTR("UIKitWeb"));
  objc_msgSend(location[0], "setDebugBuild:", AX_IS_DEBUG_BUILD() & 1);
  v3 = AXPerformValidationChecks();
  objc_storeStrong(location, 0);
  return v3 & 1;
}

void __46__AXUIKitGlue__handleWebKitLegacyInstallation__block_invoke_4(void *a1, void *a2)
{
  id location[2];

  location[1] = a1;
  location[0] = 0;
  objc_storeStrong(location, a2);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("DOMNodeAccessibility__UIKit__WebKitLegacy"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIWebFormAccessoryAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIWebFormSelectPeripheralAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIWebSelectSinglePickerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIWebSelectMultiplePickerAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UIWebPlugInViewAccessibility"), 1);
  objc_msgSend(location[0], "installSafeCategory:canInteractWithTargetClass:", CFSTR("UITextContentViewAccessibility"), 1);
  objc_storeStrong(location, 0);
}

+ (id)wrapDOMRange:(id)a3
{
  id location[3];

  location[2] = a1;
  location[1] = (id)a2;
  location[0] = 0;
  objc_storeStrong(location, a3);
  objc_storeStrong(location, 0);
  return 0;
}

@end
