double ConvertTransToNodeArea(int a1, int a2)
{
  return 100.0 / (double)a1 * (100.0 / (double)a1) * (double)(16 * a2);
}

double ComponentSetInit(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

double ComponentSetRelease(int *a1)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  if (*a1 >= 1)
  {
    v2 = 0;
    do
      free(*(void **)(*((_QWORD *)a1 + 1) + 8 * v2++));
    while (v2 < *a1);
  }
  free(*((void **)a1 + 1));
  if (a1[5] >= 1)
  {
    v3 = 0;
    do
      free(*(void **)(*((_QWORD *)a1 + 5) + 8 * v3++));
    while (v3 < a1[5]);
  }
  free(*((void **)a1 + 5));
  result = 0.0;
  *((_OWORD *)a1 + 2) = 0u;
  *((_OWORD *)a1 + 3) = 0u;
  *(_OWORD *)a1 = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  return result;
}

double ConvertVectorForGUI(double *a1, double *a2)
{
  double v2;
  double v3;
  double result;

  v2 = a1[1];
  v3 = a1[2] + 1.57079633;
  *a2 = *a1 * 6.123234e-17 + 0.0 - v2;
  result = v3 + -1.57079633;
  a2[1] = *a1 + 0.0 + v2 * 6.123234e-17;
  a2[2] = result;
  return result;
}

uint64_t ComponentSetUpdate()
{
  uint64_t v0;
  __int16 *v1;
  uint64_t v2;
  unsigned int *v3;
  double *v4;
  __int16 *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  __int16 **v11;
  uint64_t v12;
  __int16 *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  char *v20;
  char *v21;
  unsigned int v22;
  char *v23;
  char *v24;
  double *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double *v30;
  double v31;
  double v32;
  double v33;
  int v34;
  uint64_t v35;
  unsigned __int16 *v36;
  void *v37;
  uint64_t v38;
  int v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  __double2 v44;
  double v45;
  int v46;
  unsigned int v47;
  uint64_t v48;
  int v49;
  double v50;
  double v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  float64x2_t *v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  int v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  double *v67;
  double v68;
  __double2 v69;
  double v70;
  double v71;
  double v72;
  double *v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  __double2 v79;
  double v80;
  uint64_t v81;
  double v82;
  __double2 v83;
  double v84;
  double v85;
  float64_t v86;
  int32x2_t v87;
  double v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  FILE **v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  int v104;
  double *v105;
  int v106;
  _DWORD *v107;
  int v108;
  uint64_t v109;
  double *v110;
  unsigned int *v111;
  double *v112;
  double v113;
  __double2 v114;
  double v115;
  double v116;
  double v117;
  double v118;
  uint64_t v119;
  char v120;
  int v121;
  uint64_t *v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  double *v127;
  double v128;
  double v129;
  double v130;
  __double2 v131;
  uint64_t v132;
  uint64_t LargestComponent;
  uint64_t v134;
  double v135;
  double v136;
  double v137;
  uint64_t v138;
  double *v139;
  double v140;
  double v141;
  double v142;
  FILE *v143;
  const char *v144;
  FILE *v145;
  FILE *v147;
  FILE *v148;
  const char *v149;
  unsigned int *v150;
  FILE **v151;
  unsigned int *v152;
  FILE **v153;
  unsigned int *v154;
  FILE **v155;
  FILE *v156;
  int v157;
  int v158;
  double v159;
  uint64_t v160;
  double *v161;
  __int16 *v162;
  __int16 *v163;
  float64x2_t v164;
  unsigned int *v165;
  double *v166;
  int v167;
  __int16 v168;
  __int16 v169;
  uint64_t v170;
  _OWORD v171[2];
  _OWORD v172[598];
  __int16 v173;
  uint64_t v174;
  __int16 v175;
  uint64_t v176;

  v0 = MEMORY[0x24BDAC7A8]();
  v3 = (unsigned int *)v0;
  if (*(_BYTE *)(v0 + 56))
  {
    v143 = (FILE *)*MEMORY[0x24BDAC8D8];
    v157 = 877;
    v144 = "!set->structureIsInconsistent";
    goto LABEL_153;
  }
  v4 = (double *)v2;
  v5 = v1;
  v6 = v1[3];
  v7 = v1[4];
  ++*(_DWORD *)(v0 + 52);
  if (v2)
  {
    *(_DWORD *)(v2 + 40) = 0;
    *(_QWORD *)v2 = -1;
    *(_DWORD *)(v2 + 9656) = -1;
    *(_QWORD *)(v2 + 9648) = -1;
    *(_DWORD *)(v2 + 8) = -1;
  }
  if (!v1[23])
  {
    v143 = (FILE *)*MEMORY[0x24BDAC8D8];
    v157 = 883;
    v144 = "inInfoTable->resampleScale100 != 0";
LABEL_153:
    fprintf(v143, "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", v144, "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", v157, 0);
LABEL_107:
    v99 = 22;
    goto LABEL_108;
  }
  memset(v172, 0, 480);
  memset(v171, 0, sizeof(v171));
  v8 = __TranslateNodePlacement((uint64_t)v1, (uint64_t)v171);
  if ((_DWORD)v8)
  {
    v99 = v8;
    v145 = (FILE *)*MEMORY[0x24BDAC8D8];
LABEL_172:
    fprintf(v145, "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n");
LABEL_108:
    *((_BYTE *)v3 + 56) = 1;
    return v99;
  }
  *((_WORD *)v3 + 24) = v6;
  *((_WORD *)v3 + 25) = v7;
  if (v7 != -1)
  {
    if (v7 >= v5[2])
    {
      fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "delNode < inInfoTable->count", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 899, 0);
      return 0;
    }
    if ((_DWORD)v6 != v7)
    {
      fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "insNode == delNode", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 901, 0);
      return 0;
    }
    v9 = *v3;
    if ((int)v9 < 1)
    {
LABEL_13:
      fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "removedVertex", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 602, 0);
    }
    else
    {
      v10 = (uint64_t *)*((_QWORD *)v3 + 1);
      v11 = (__int16 **)v10;
      v12 = *v3;
      while (1)
      {
        v13 = *v11;
        if ((unsigned __int16)(*v11)[13] == (unsigned __int16)v6)
          break;
        ++v11;
        if (!--v12)
          goto LABEL_13;
      }
      if (v4)
        *((_DWORD *)v4 + 2413) = v13[12];
      if ((unsigned __int16)v13[14] == (unsigned __int16)v6)
      {
        v14 = 0;
        do
        {
          v15 = *v10;
          if ((__int16 *)*v10 != v13 && *(unsigned __int16 *)(v15 + 28) == (unsigned __int16)v6)
          {
            v16 = *(__int16 *)(v15 + 26);
            if (v16 != -1 && (!v14 || *(__int16 *)(v14 + 26) > v16))
              v14 = *v10;
          }
          ++v10;
          --v9;
        }
        while (v9);
        if (v14)
        {
          v17 = __RebaseComponent(v3, (uint64_t)v13, v14);
          if ((_DWORD)v17)
          {
            v99 = v17;
            v154 = v3;
            v155 = (FILE **)MEMORY[0x24BDAC8D8];
            fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "!result", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 618, 0);
            v156 = *v155;
            v3 = v154;
            fprintf(v156, "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n");
            goto LABEL_108;
          }
          if (*(__int16 *)(*(_QWORD *)(*((_QWORD *)v3 + 5) + 8 * v13[15]) + 26) <= 1)
            fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "set->components[removedVertex->componentIndex]->mapiNodeCount > 1", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 619, 0);
        }
        else
        {
          v18 = v13[15];
          if (v4)
            *((_DWORD *)v4 + 2414) = v18;
          v13[14] = -1;
          if (*(_WORD *)(*(_QWORD *)(*((_QWORD *)v3 + 5) + 8 * v18) + 26) != 1)
            fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "set->components[removedVertex->componentIndex]->mapiNodeCount == 1", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 629, 0);
        }
      }
      v19 = *(_QWORD *)(*((_QWORD *)v3 + 5) + 8 * v13[15]);
      --*(_WORD *)(v19 + 26);
      v13[13] = -1;
    }
  }
  if ((_DWORD)v6 == -1)
  {
    ++v3[4];
    if (v4)
      *(_DWORD *)v4 = 0;
    goto LABEL_144;
  }
  if ((int)v6 >= v5[2])
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "insNode < inInfoTable->count", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 912, 0);
    return 0;
  }
  if (*v3 == v3[1])
  {
    v20 = (char *)malloc_type_realloc(*((void **)v3 + 1), 8 * (int)(*v3 + 16), 0x2004093837F09uLL);
    if (!v20)
    {
      v150 = v3;
      v151 = (FILE **)MEMORY[0x24BDAC8D8];
      fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "tmp != ((void *)0)", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 382, 0);
      v147 = *v151;
      v3 = v150;
      goto LABEL_170;
    }
    *((_QWORD *)v3 + 1) = v20;
    v21 = &v20[8 * v3[1]];
    *((_OWORD *)v21 + 6) = 0u;
    *((_OWORD *)v21 + 7) = 0u;
    *((_OWORD *)v21 + 4) = 0u;
    *((_OWORD *)v21 + 5) = 0u;
    *((_OWORD *)v21 + 2) = 0u;
    *((_OWORD *)v21 + 3) = 0u;
    *(_OWORD *)v21 = 0u;
    *((_OWORD *)v21 + 1) = 0u;
    v3[1] += 16;
  }
  v22 = v3[5];
  if (v22 == v3[6])
  {
    v23 = (char *)malloc_type_realloc(*((void **)v3 + 5), 8 * (int)(v22 + 16), 0x2004093837F09uLL);
    if (!v23)
    {
      v152 = v3;
      v153 = (FILE **)MEMORY[0x24BDAC8D8];
      fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "tmp != ((void *)0)", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 399, 0);
      v147 = *v153;
      v3 = v152;
      goto LABEL_170;
    }
    *((_QWORD *)v3 + 5) = v23;
    v24 = &v23[8 * v3[6]];
    *((_OWORD *)v24 + 6) = 0u;
    *((_OWORD *)v24 + 7) = 0u;
    *((_OWORD *)v24 + 4) = 0u;
    *((_OWORD *)v24 + 5) = 0u;
    *((_OWORD *)v24 + 2) = 0u;
    *((_OWORD *)v24 + 3) = 0u;
    *(_OWORD *)v24 = 0u;
    *((_OWORD *)v24 + 1) = 0u;
    v3[6] += 16;
  }
  v25 = (double *)malloc_type_calloc(0x20uLL, 1uLL, 0x384363FFuLL);
  if (!v25)
  {
    v147 = (FILE *)*MEMORY[0x24BDAC8D8];
LABEL_170:
    fprintf(v147, "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n");
    v99 = 12;
    goto LABEL_171;
  }
  v26 = (uint64_t)v25;
  v27 = (int)*v3;
  v28 = *v3;
  *(_QWORD *)(*((_QWORD *)v3 + 1) + 8 * v27) = v25;
  *((_WORD *)v25 + 12) = v27;
  v29 = (v27 + 1);
  *v3 = v29;
  v30 = (double *)&v171[2 * v6];
  v31 = v30[1];
  *v25 = v31;
  v32 = v30[2];
  v25[1] = v32;
  v33 = v30[3];
  v25[2] = v33;
  v34 = *((unsigned __int16 *)v30 + 16);
  *((_WORD *)v25 + 14) = v34;
  *((_WORD *)v25 + 13) = v6;
  if (v34 != (unsigned __int16)v6)
  {
    *((_WORD *)v25 + 15) = -1;
    if ((int)v28 < 1)
      goto LABEL_57;
    v40 = (uint64_t *)*((_QWORD *)v3 + 1);
    while (1)
    {
      v41 = *v40;
      if (*(unsigned __int16 *)(*v40 + 26) == v34)
        break;
      ++v40;
      if (!--v28)
        goto LABEL_57;
    }
    LODWORD(v38) = *(__int16 *)(v41 + 30);
    *((_WORD *)v25 + 15) = *(_WORD *)(v41 + 30);
    if ((v38 & 0x80000000) != 0)
    {
LABEL_57:
      fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "newVertex->componentIndex > -1", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 548, 0);
      goto LABEL_65;
    }
    v39 = 0;
    goto LABEL_60;
  }
  if (SLOWORD(v171[0]) < 1)
  {
LABEL_49:
    *((_WORD *)v25 + 15) = v3[5];
    v37 = malloc_type_calloc(0x20uLL, 1uLL, 0x5D84363FuLL);
    v38 = *(__int16 *)(v26 + 30);
    *(_QWORD *)(*((_QWORD *)v3 + 5) + 8 * v38) = v37;
    if (*(_QWORD *)(*((_QWORD *)v3 + 5) + 8 * v38))
    {
      ++v3[5];
      v39 = 1;
      goto LABEL_60;
    }
    v147 = (FILE *)*MEMORY[0x24BDAC8D8];
    goto LABEL_170;
  }
  v35 = 0;
  v36 = (unsigned __int16 *)v172;
  while (v6 == v35 || *v36 != (unsigned __int16)v6)
  {
    ++v35;
    v36 += 16;
    if (LOWORD(v171[0]) == v35)
      goto LABEL_49;
  }
  if ((v28 & 0x80000000) != 0)
  {
LABEL_128:
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "v", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 505, 0);
    goto LABEL_65;
  }
  v121 = (unsigned __int16)v35;
  v122 = (uint64_t *)*((_QWORD *)v3 + 1);
  v123 = v122;
  v124 = v29;
  while (*(unsigned __int16 *)(*v123 + 26) != v121)
  {
    ++v123;
    if (!--v124)
      goto LABEL_128;
  }
  v125 = *(__int16 *)(*v123 + 28);
  while (1)
  {
    v126 = *v122;
    if (*(unsigned __int16 *)(*v122 + 26) == (unsigned __int16)v125)
      break;
    ++v122;
    if (!--v29)
    {
      fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "oldBaseVertex", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 507, 0);
      goto LABEL_65;
    }
  }
  if ((_DWORD)v125 == -1)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "oldBaseVertex->mapiNodeIndex != -1", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 508, 0);
  }
  else
  {
    *((_WORD *)v25 + 15) = *(_WORD *)(v126 + 30);
    if (fabs(v31) < 0.1 && fabs(v32) < 0.1 && vabdd_f64(v33 / 6.28318531, floor(v33 / 6.28318531)) < 0.01)
    {
      v127 = (double *)&v171[2 * v125];
      v128 = v127[1];
      v129 = v127[2];
      v130 = v127[3];
      v131 = __sincos_stret(v130);
      *(double *)v26 = -(v129 * v131.__sinval + v131.__cosval * v128);
      *(double *)(v26 + 8) = -(v129 * v131.__cosval + -v131.__sinval * v128);
      *(double *)(v26 + 16) = -v130;
      v132 = __RebaseComponent(v3, v126, v26);
      if (!(_DWORD)v132)
      {
        v39 = 0;
        LOWORD(v38) = *(_WORD *)(v26 + 30);
LABEL_60:
        v42 = *(_QWORD *)(*((_QWORD *)v3 + 5) + 8 * (__int16)v38);
        ++*(_WORD *)(v42 + 24);
        ++*(_WORD *)(v42 + 26);
        if (v4)
        {
          *((_DWORD *)v4 + 1) = *(__int16 *)(v26 + 24);
          *((_DWORD *)v4 + 2) = (__int16)v38;
          v43 = *(double *)(v42 + 16);
          v44 = __sincos_stret(v43);
          v4[4] = v43 + *(double *)(v26 + 16);
          v45 = *(double *)(v26 + 8);
          v4[2] = *(double *)v42 + v44.__cosval * *(double *)v26 - v44.__sinval * v45;
          v4[3] = *(double *)(v42 + 8) + v44.__sinval * *(double *)v26 + v44.__cosval * v45;
          if (v39)
            v46 = 1;
          else
            v46 = 2;
          *(_DWORD *)v4 = v46;
        }
        goto LABEL_65;
      }
      v99 = v132;
      fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "!result", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 520, 0);
LABEL_171:
      v145 = (FILE *)*MEMORY[0x24BDAC8D8];
      goto LABEL_172;
    }
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "__VectorIsZero(&newVertex->coordinates)", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 511, 0);
  }
LABEL_65:
  v47 = *v3;
  if ((int)*v3 < 1)
    goto LABEL_144;
  v166 = v4;
  v48 = 0;
  v49 = 0;
  v50 = 0.1;
  v51 = 6.28318531;
  v164 = (float64x2_t)vdupq_n_s64(0x3FB999999999999AuLL);
  do
  {
    v52 = (uint64_t *)*((_QWORD *)v3 + 1);
    v53 = v52[v48];
    v54 = *(__int16 *)(v53 + 28);
    if (v54 != -1 && *(unsigned __int16 *)(v53 + 26) == (unsigned __int16)v54)
    {
      v55 = (unint64_t)&v171[2 * v54];
      v56 = *(unsigned __int16 *)(v55 + 32);
      if (v56 != (unsigned __int16)v54)
      {
        v167 = v49;
        v57 = (float64x2_t *)(v55 | 8);
        v58 = v47;
        v59 = (uint64_t *)*((_QWORD *)v3 + 1);
        v60 = v47;
        while (1)
        {
          v61 = *v59;
          if (*(unsigned __int16 *)(*v59 + 26) == v56)
            break;
          ++v59;
          if (!--v60)
          {
            v98 = (FILE **)MEMORY[0x24BDAC8D8];
            fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "baseVertex", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 734, 0);
            goto LABEL_106;
          }
        }
        v62 = *(__int16 *)(v61 + 30);
        v63 = *(unsigned __int16 *)(v53 + 30);
        if (v63 == *(unsigned __int16 *)(v61 + 30))
        {
          v98 = (FILE **)MEMORY[0x24BDAC8D8];
          fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "mergeBaseVertex->componentIndex != baseVertex->componentIndex", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 650, 0);
          goto LABEL_142;
        }
        v162 = v5;
        v165 = v3;
        v170 = *(__int16 *)(v61 + 30);
        v64 = (__int16)v63;
        v65 = (__int16)v63;
        if (v166)
        {
          v66 = *((int *)v166 + 10);
          if ((int)v66 >= 300)
          {
            v98 = (FILE **)MEMORY[0x24BDAC8D8];
            v148 = (FILE *)*MEMORY[0x24BDAC8D8];
            v158 = 655;
            v149 = "outReport->mergedComponentCount < 300";
LABEL_174:
            fprintf(v148, "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", v149, "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", v158, 0);
            v3 = v165;
LABEL_142:
            fprintf(*v98, "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "!result", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 736, 0);
LABEL_106:
            fprintf(*v98, "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "!result", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 919, 0);
            goto LABEL_107;
          }
          *((_DWORD *)v166 + 10) = v66 + 1;
          if ((*(_DWORD *)v166 & 0xFFFFFFFE) != 2)
          {
            v98 = (FILE **)MEMORY[0x24BDAC8D8];
            fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "(outReport->message == MSG_EXTEND_COMPONENT) || (outReport->message == MSG_MERGE_COMPONENTS)", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 658, 0);
            goto LABEL_142;
          }
          *(_DWORD *)v166 = 3;
          v161 = &v166[4 * v66];
          *((_DWORD *)v161 + 12) = v65;
          *((_DWORD *)v161 + 13) = v62;
          v160 = *((_QWORD *)v3 + 5);
          v67 = *(double **)(v160 + 8 * v62);
          v68 = v67[2];
          v168 = v62;
          v69 = __sincos_stret(v68);
          v70 = v57->f64[1];
          v71 = v68 + v57[1].f64[0];
          v72 = *v67 + v69.__cosval * v57->f64[0] - v69.__sinval * v70;
          v159 = v67[1] + v69.__sinval * v57->f64[0] + v69.__cosval * v70;
          v73 = *(double **)(v160 + 8 * v64);
          v74 = *v73;
          v75 = v73[1];
          v76 = v51;
          v77 = v50;
          v78 = v73[2];
          v79 = __sincos_stret(v71);
          LOWORD(v62) = v168;
          v80 = v71 + v78;
          v50 = v77;
          v51 = v76;
          v161[7] = v72 + v79.__cosval * v74 - v79.__sinval * v75;
          v161[8] = v159 + v79.__sinval * v74 + v79.__cosval * v75;
          v161[9] = v80;
        }
        if (fabs(*(double *)v53) >= v50
          || fabs(*(double *)(v53 + 8)) >= v50
          || vabdd_f64(*(double *)(v53 + 16) / v51, floor(*(double *)(v53 + 16) / v51)) >= 0.01)
        {
          v98 = (FILE **)MEMORY[0x24BDAC8D8];
          v148 = (FILE *)*MEMORY[0x24BDAC8D8];
          v158 = 674;
          v149 = "__VectorIsZero(&mergeBaseVertex->coordinates)";
          goto LABEL_174;
        }
        v169 = v62;
        do
        {
          v81 = *v52;
          if (*(unsigned __int16 *)(*v52 + 30) == (unsigned __int16)v64)
          {
            v82 = v57[1].f64[0];
            v83 = __sincos_stret(v82);
            v84 = *(double *)(v81 + 8);
            v85 = v82 + *(double *)(v81 + 16);
            v86 = v57->f64[1] + v83.__sinval * *(double *)v81 + v83.__cosval * v84;
            *(double *)v81 = v57->f64[0] + v83.__cosval * *(double *)v81 - v83.__sinval * v84;
            *(float64_t *)(v81 + 8) = v86;
            *(double *)(v81 + 16) = v85;
            *(_WORD *)(v81 + 28) = *(_WORD *)(v61 + 28);
          }
          ++v52;
          --v58;
        }
        while (v58);
        v87 = vmovn_s64(vcgtq_f64(v164, vabdq_f64(*(float64x2_t *)v53, *v57)));
        if ((v87.i32[0] & v87.i32[1] & 1) == 0
          || (v88 = vabdd_f64(*(double *)(v53 + 16), v57[1].f64[0]) / v51, vabdd_f64(v88, floor(v88)) >= 0.01))
        {
          v98 = (FILE **)MEMORY[0x24BDAC8D8];
          v148 = (FILE *)*MEMORY[0x24BDAC8D8];
          v158 = 687;
          v149 = "__VectorEquals(&mergeBaseVertex->coordinates,mergeVector)";
          goto LABEL_174;
        }
        v89 = 0;
        v3 = v165;
        do
        {
          v90 = *(_QWORD *)(*((_QWORD *)v165 + 1) + 8 * v89);
          if (*(unsigned __int16 *)(v90 + 30) == (unsigned __int16)v65)
          {
            v91 = *((_QWORD *)v165 + 5);
            v92 = *(_QWORD *)(v91 + 8 * v64);
            v93 = *(__int16 *)(v92 + 24);
            if (v93 <= 0)
            {
              fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "set->components[replaceComponentIndex]->nodeCount > 0", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 694, 0);
              v91 = *((_QWORD *)v165 + 5);
              v92 = *(_QWORD *)(v91 + 8 * v64);
              LOWORD(v93) = *(_WORD *)(v92 + 24);
            }
            *(_WORD *)(v92 + 24) = v93 - 1;
            v94 = *(_QWORD *)(v91 + 8 * v170);
            ++*(_WORD *)(v94 + 24);
            if (*(__int16 *)(v90 + 26) != -1)
            {
              v95 = *(__int16 *)(v92 + 26);
              if (v95 <= 0)
              {
                fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "set->components[replaceComponentIndex]->mapiNodeCount > 0", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 699, 0);
                v96 = *((_QWORD *)v165 + 5);
                v92 = *(_QWORD *)(v96 + 8 * v64);
                LOWORD(v95) = *(_WORD *)(v92 + 26);
                v94 = *(_QWORD *)(v96 + 8 * v170);
              }
              *(_WORD *)(v92 + 26) = v95 - 1;
              ++*(_WORD *)(v94 + 26);
            }
            *(_WORD *)(v90 + 30) = v169;
            v47 = *v165;
          }
          ++v89;
        }
        while (v89 < (int)v47);
        v97 = *(_QWORD *)(*((_QWORD *)v165 + 5) + 8 * v64);
        v98 = (FILE **)MEMORY[0x24BDAC8D8];
        if (*(_WORD *)(v97 + 24))
        {
          fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "set->components[replaceComponentIndex]->nodeCount == 0", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 706, 0);
          v97 = *(_QWORD *)(*((_QWORD *)v165 + 5) + 8 * v64);
        }
        if (*(_WORD *)(v97 + 26))
          fprintf(*v98, "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "set->components[replaceComponentIndex]->mapiNodeCount == 0", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 707, 0);
        v5 = v162;
        if (*(unsigned __int16 *)(v61 + 30) != *(unsigned __int16 *)(v53 + 30))
        {
          fprintf(*v98, "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "baseVertex->componentIndex == mergeBaseVertex->componentIndex", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 710, 0);
          goto LABEL_142;
        }
        v49 = v167 + 1;
        v47 = *v165;
      }
    }
    ++v48;
  }
  while (v48 < (int)v47);
  v4 = v166;
  if (v166)
  {
    if (v49)
    {
      v100 = *((unsigned int *)v166 + 10);
      if ((int)v100 >= 1)
      {
        v163 = v5;
        v101 = 0;
        v102 = 0;
        v103 = 0;
        v104 = *((_DWORD *)v166 + 2);
        while (1)
        {
          v105 = &v4[4 * v101];
          v108 = *((_DWORD *)v105 + 13);
          v107 = (_DWORD *)v105 + 13;
          v106 = v108;
          v109 = v100;
          v110 = v166 + 9;
          if (v108 == v104)
          {
LABEL_119:
            v119 = v102;
          }
          else
          {
            while (v106 != *((_DWORD *)v110 - 6))
            {
              v110 += 4;
              if (!--v109)
              {
                v98 = (FILE **)MEMORY[0x24BDAC8D8];
                if ((v103 & 1) == 0)
                  fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "foundNew", "Unable to find component in report", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 786, 0);
                goto LABEL_106;
              }
            }
            if (*((_DWORD *)v110 - 5) == v104)
            {
              v111 = v3;
              v112 = &v166[4 * v101];
              v113 = *v110;
              v114 = __sincos_stret(*v110);
              v115 = v112[8];
              v116 = v113 + v112[9];
              v117 = v112[7];
              v118 = *(v110 - 1) + v114.__sinval * v117 + v114.__cosval * v115;
              v112[7] = *(v110 - 2) + v114.__cosval * v117 - v114.__sinval * v115;
              v112[8] = v118;
              v112[9] = v116;
              v3 = v111;
              v4 = v166;
              *v107 = v104;
              v103 = 1;
              goto LABEL_119;
            }
            v119 = 1;
          }
          ++v101;
          v102 = v119;
          if (v101 == v100)
          {
            v101 = 0;
            v102 = 0;
            v120 = v103 & v119;
            v103 = 0;
            if ((v120 & 1) == 0)
              break;
          }
        }
        v5 = v163;
        v98 = (FILE **)MEMORY[0x24BDAC8D8];
        if ((v119 & 1) != 0)
          goto LABEL_106;
      }
    }
  }
LABEL_144:
  LargestComponent = __FindLargestComponent(v3, 1, v3 + 8);
  if ((_DWORD)LargestComponent)
  {
    v99 = LargestComponent;
    v145 = (FILE *)*MEMORY[0x24BDAC8D8];
    goto LABEL_172;
  }
  v134 = __FindLargestComponent(v3, 0, v3 + 7);
  if ((_DWORD)v134)
  {
    v99 = v134;
    v145 = (FILE *)*MEMORY[0x24BDAC8D8];
    goto LABEL_172;
  }
  if (!v4)
    return 0;
  *((_DWORD *)v4 + 2412) = v3[8];
  v135 = v4[3];
  v136 = v4[4] + 1.57079633;
  v137 = v4[2];
  v4[2] = v137 * 6.123234e-17 + 0.0 - v135;
  v4[3] = v137 + 0.0 + v135 * 6.123234e-17;
  v4[4] = v136 + -1.57079633;
  v138 = *((unsigned int *)v4 + 10);
  if ((int)v138 >= 1)
  {
    v139 = v4 + 9;
    do
    {
      v140 = *(v139 - 1);
      v141 = *v139 + 1.57079633;
      v142 = *(v139 - 2);
      *(v139 - 2) = v142 * 6.123234e-17 + 0.0 - v140;
      *(v139 - 1) = v142 + 0.0 + v140 * 6.123234e-17;
      *v139 = v141 + -1.57079633;
      v139 += 4;
      --v138;
    }
    while (v138);
  }
  v99 = 0;
  *((_WORD *)v4 + 4830) = v173;
  *((_QWORD *)v4 + 1208) = v174;
  *((_WORD *)v4 + 4836) = v175;
  *((_QWORD *)v4 + 1210) = v176;
  *((_DWORD *)v4 + 2422) = v5[1529] & 1;
  return v99;
}

uint64_t __TranslateNodePlacement(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  __double2 v16;
  __int16 v17;
  uint64_t i;
  uint64_t v19;
  unsigned __int16 v20;
  double *v21;
  int v22;
  double *v23;
  int v24;
  uint64_t v25;
  int v26;
  double v27;
  __double2 v28;
  double v29;
  double v30;
  double v31;
  uint64_t result;
  double v33;
  double v34;

  if (!a1)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "inNodePlacement", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 131, 0);
    return 22;
  }
  if (*(_WORD *)a1 != 3060)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "inNodePlacement->structSize == sizeof(*inNodePlacement)", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 132, 0);
    return 22;
  }
  if (*(_WORD *)(a1 + 2) != 3)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "inNodePlacement->version == 3", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 133, 0);
    return 22;
  }
  if (!a2)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "outNodePlacement", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 135, 0);
    return 22;
  }
  v4 = *(__int16 *)(a1 + 4);
  *(_WORD *)a2 = v4;
  *(_DWORD *)(a2 + 2) = *(_DWORD *)(a1 + 6);
  v5 = *(__int16 *)(a1 + 46);
  if (v4 >= 1)
  {
    v6 = (double)v5;
    v7 = v4;
    v8 = a2 + 16;
    v9 = (_BYTE *)(a1 + 56);
    v10 = v4;
    do
    {
      v11 = (double)*((__int16 *)v9 - 3) * 100.0 / v6;
      v12 = (double)*((__int16 *)v9 - 2);
      *(double *)(v8 - 8) = v11;
      v13 = v12 * 100.0 / v6;
      v14 = (double)*((__int16 *)v9 - 4) * 3.14159265;
      v15 = v14 * 0.00390625;
      *(double *)v8 = v13;
      *(double *)(v8 + 8) = v14 * 0.00390625;
      if ((*v9 & 1) != 0)
      {
        v16 = __sincos_stret(v14 * 0.00390625);
        *(double *)(v8 - 8) = -(v13 * v16.__sinval + v16.__cosval * v11);
        *(double *)v8 = -(v13 * v16.__cosval + -v16.__sinval * v11);
        *(double *)(v8 + 8) = -v15;
      }
      v17 = *((_WORD *)v9 - 1);
      v9 += 10;
      *(_WORD *)(v8 + 16) = v17;
      v8 += 32;
      --v10;
    }
    while (v10);
    for (i = 0; i != v7; ++i)
    {
      v19 = a2 + 32 * i;
      v22 = *(__int16 *)(v19 + 32);
      v21 = (double *)(v19 + 32);
      v20 = v22;
      if ((v22 & 0x80000000) == 0)
      {
        v23 = v21 - 3;
        v24 = 300;
        while (1)
        {
          v25 = a2 + 32 * (__int16)v20;
          v26 = *(unsigned __int16 *)(v25 + 32);
          if (v26 == v20)
            break;
          v27 = *(double *)(v25 + 24);
          v28 = __sincos_stret(v27);
          v29 = *(v21 - 2);
          v30 = v27 + *(v21 - 1);
          v31 = *(double *)(v25 + 16) + v28.__sinval * *v23 + v28.__cosval * v29;
          *v23 = *(double *)(v25 + 8) + v28.__cosval * *v23 - v28.__sinval * v29;
          *(v21 - 2) = v31;
          *(v21 - 1) = v30;
          *(_WORD *)v21 = v26;
          v20 = v26;
          if (!--v24)
          {
            fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "found", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 174, 0);
            return 22;
          }
        }
      }
    }
  }
  result = 0;
  v33 = (double)(16 * *(__int16 *)(a1 + 3050));
  *(_WORD *)(a2 + 9608) = *(_WORD *)(a1 + 3048);
  v34 = 100.0 / (double)v5 * (100.0 / (double)v5);
  *(double *)(a2 + 9616) = v34 * v33;
  *(_WORD *)(a2 + 9624) = *(_WORD *)(a1 + 3052);
  *(double *)(a2 + 9632) = v34 * (double)(16 * *(__int16 *)(a1 + 3054));
  return result;
}

uint64_t __FindLargestComponent(unsigned int *a1, int a2, _DWORD *a3)
{
  unsigned __int16 *v6;
  unsigned __int16 *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  __int16 v11;
  unsigned __int16 v12;
  unsigned __int16 v13;
  FILE **v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  int v18;

  v6 = (unsigned __int16 *)malloc_type_calloc((int)a1[5], 2uLL, 0x1000040BDFB0063uLL);
  if (v6)
  {
    v7 = v6;
    v8 = *a1;
    v9 = a1[5];
    if ((int)v8 < 1)
    {
LABEL_9:
      if (v9 < 1)
      {
        v18 = 0;
      }
      else
      {
        v11 = 0;
        v12 = 0;
        v13 = 0;
        v14 = (FILE **)MEMORY[0x24BDAC8D8];
        do
        {
          v15 = v11;
          v16 = v7[v11];
          if (a2)
            v17 = 26;
          else
            v17 = 24;
          if (v16 != *(__int16 *)(*(_QWORD *)(*((_QWORD *)a1 + 5) + 8 * v15) + v17))
          {
            fprintf(*v14, "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "histogram[i] == (mapiNodesOnly?set->components[i]->mapiNodeCount:set->components[i]->nodeCount)", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 825, 0);
            v14 = (FILE **)MEMORY[0x24BDAC8D8];
            v16 = v7[v15];
            v9 = a1[5];
          }
          if (v16 > v13)
          {
            v13 = v16;
            v12 = v15;
          }
          v11 = v15 + 1;
        }
        while (v9 > (__int16)(v15 + 1));
        v18 = v12;
      }
      *a3 = v18;
    }
    else
    {
      v10 = *((_QWORD *)a1 + 1);
      while (v9 > *(__int16 *)(*(_QWORD *)v10 + 30))
      {
        if (!a2 || *(__int16 *)(*(_QWORD *)v10 + 26) != -1)
          ++v6[*(__int16 *)(*(_QWORD *)v10 + 30)];
        v10 += 8;
        if (!--v8)
          goto LABEL_9;
      }
      fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "v->componentIndex < set->componentCount", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 817, 0);
    }
    free(v7);
    return 0;
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "histogram != ((void *)0)", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 812, 0);
    return 12;
  }
}

uint64_t FindRectangleForComponent(unsigned int *a1, unsigned __int16 a2, _WORD *a3, _WORD *a4, _WORD *a5, _WORD *a6)
{
  uint64_t v6;
  double **v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double *v12;
  double v13;

  v6 = *a1;
  if ((int)v6 < 1)
  {
    v11 = 0.0;
    v10 = 0.0;
    v9 = 0.0;
    v8 = 0.0;
  }
  else
  {
    v7 = (double **)*((_QWORD *)a1 + 1);
    v8 = 0.0;
    v9 = 0.0;
    v10 = 0.0;
    v11 = 0.0;
    do
    {
      v12 = *v7;
      if (*((unsigned __int16 *)*v7 + 15) == a2)
      {
        v13 = v12[1];
        if (v11 > *v12)
          v11 = *v12;
        if (v10 < *v12)
          v10 = *v12;
        if (v9 > v13)
          v9 = v12[1];
        if (v8 < v13)
          v8 = v12[1];
      }
      ++v7;
      --v6;
    }
    while (v6);
  }
  *a3 = (int)(v11 + -1.0);
  *a4 = (int)(v9 + -1.0);
  *a5 = (int)(v10 + 1.0);
  *a6 = (int)(v8 + 1.0);
  return 0;
}

uint64_t GenerateTemplateTopology()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t i;
  uint64_t v8;
  int v10;
  _OWORD v11[600];
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  _DWORD v16[300];
  uint64_t v17;

  v0 = MEMORY[0x24BDAC7A8]();
  v2 = v1;
  v3 = v0;
  v17 = *MEMORY[0x24BDAC8D0];
  bzero(v16, 0x4B0uLL);
  v10 = 0;
  if (!v3)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "inInfoTable", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 1070, 0);
    return 22;
  }
  if (!v2)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "outResult", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 1071, 0);
    return 22;
  }
  memset(v11, 0, 512);
  v4 = __TranslateNodePlacement(v3, (uint64_t)v11);
  if ((_DWORD)v4)
  {
    v8 = v4;
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "result == 0", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 1074, 0);
  }
  else
  {
    v5 = __GenerateTemplateTopology((uint64_t)v11, (_DWORD *)v2, (uint64_t)v16, &v10);
    if ((_DWORD)v5)
    {
      v8 = v5;
      fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "result == 0", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 1077, 0);
    }
    else
    {
      if (v10 < 2)
      {
        v6 = 0;
      }
      else
      {
        v6 = 0;
        for (i = 1; i != v10; ++i)
        {
          if (v16[v6] < v16[i])
            v6 = i;
        }
      }
      v8 = 0;
      *(_DWORD *)(v2 + 4) = v12;
      *(_QWORD *)(v2 + 8) = v13;
      *(_DWORD *)(v2 + 16) = v14;
      *(_QWORD *)(v2 + 24) = v15;
      *(_DWORD *)(v2 + 32) = v6;
      *(_DWORD *)(v2 + 36) = -1;
    }
  }
  return v8;
}

uint64_t __GenerateTemplateTopology(uint64_t a1, _DWORD *a2, uint64_t a3, _DWORD *a4)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  double *v11;
  uint64_t v12;
  int v13;
  int v14;
  double v15;
  double v16;
  uint64_t result;
  _DWORD v18[300];
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  bzero(v18, 0x4B0uLL);
  if (!a1)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "convertedTopology", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 1018, 0);
    return 22;
  }
  if (!a2)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "outResult", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 1019, 0);
    return 22;
  }
  v8 = 0;
  v9 = 0;
  v10 = a1 + 16;
  v11 = (double *)(a2 + 18);
  do
  {
    v12 = *(__int16 *)(v10 + 16);
    if (v12 == -1)
      break;
    *((_DWORD *)v11 - 7) = v8;
    if (v8 == v12)
    {
      v13 = v9++;
      v14 = 1;
    }
    else
    {
      v13 = v18[v12];
      v14 = 2;
    }
    *((_DWORD *)v11 - 8) = v14;
    v18[v8] = v13;
    *((_DWORD *)v11 - 6) = v13;
    v15 = *(double *)v10;
    v16 = *(double *)(v10 + 8) + 1.57079633;
    *(v11 - 2) = *(double *)(v10 - 8) * 6.123234e-17 + 0.0 - *(double *)v10;
    *(v11 - 1) = *(double *)(v10 - 8) + 0.0 + v15 * 6.123234e-17;
    *v11 = v16 + -1.57079633;
    if (a3)
      ++*(_DWORD *)(a3 + 4 * v13);
    ++v8;
    v10 += 32;
    v11 += 5;
  }
  while (v8 != 300);
  *a2 = v8;
  result = 0;
  if (a4)
    *a4 = v9;
  return result;
}

uint64_t GenerateMatchTemplateTopology()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int16 *v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t TemplateTopology;
  int v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  double v21;
  __double2 v22;
  uint64_t v23;
  double v24;
  _OWORD v26[600];
  __int16 v27;
  uint64_t v28;
  __int16 v29;
  uint64_t v30;

  v0 = MEMORY[0x24BDAC7A8]();
  if (!v0)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "inInfoTable", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 1110, 0);
    return 22;
  }
  v2 = v1;
  if (!v1)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "outResult", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 1111, 0);
    return 22;
  }
  v3 = (__int16 *)v0;
  memset(v26, 0, 512);
  v4 = __TranslateNodePlacement(v0 + 12, (uint64_t)v26);
  if ((_DWORD)v4)
  {
    v23 = v4;
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "result == 0", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 1114, 0);
    return v23;
  }
  v5 = v3[29];
  v6 = v3[4];
  v7 = v3[5];
  v8 = v3[3];
  TemplateTopology = __GenerateTemplateTopology((uint64_t)v26, (_DWORD *)v2, 0, 0);
  if ((_DWORD)TemplateTopology)
  {
    v23 = TemplateTopology;
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "result == 0", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 1121, 0);
    return v23;
  }
  v10 = (*(_DWORD *)v2)++;
  v11 = v2 + 40 * v10;
  *(_DWORD *)(v11 + 40) = 4;
  *(_DWORD *)(v11 + 44) = v10;
  if (v3[2] >= 300)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "inInfoTable->matchNode < 300", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 1130, 0);
    return 22;
  }
  v12 = (double)v6 * 100.0 / (double)v5;
  v13 = (double)v7 * 100.0 / (double)v5;
  v14 = (double)v8 * 3.14159265 * 0.00390625;
  v15 = v2 + 40 + 40 * v3[2];
  v16 = *(_DWORD *)(v15 + 8);
  v17 = v2 + 40 + 40 * v10;
  *(_DWORD *)(v17 + 8) = v16;
  v18 = v12 * 6.123234e-17 + 0.0 - v13;
  v19 = v12 + 0.0 + v13 * 6.123234e-17;
  v20 = v14 + 1.57079633 + -1.57079633;
  v21 = *(double *)(v15 + 32);
  v22 = __sincos_stret(v21);
  v23 = 0;
  v24 = *(double *)(v15 + 24);
  *(double *)(v17 + 16) = *(double *)(v15 + 16) + v22.__cosval * v18 - v22.__sinval * v19;
  *(double *)(v17 + 24) = v24 + v22.__sinval * v18 + v22.__cosval * v19;
  *(double *)(v17 + 32) = v20 + v21;
  *(_DWORD *)(v2 + 32) = v16;
  *(_DWORD *)(v2 + 4) = v27;
  *(_QWORD *)(v2 + 8) = v28;
  *(_DWORD *)(v2 + 16) = v29;
  *(_QWORD *)(v2 + 24) = v30;
  *(_DWORD *)(v2 + 36) = v3[9] != -1;
  return v23;
}

uint64_t __RebaseComponent(unsigned int *a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v6;
  unsigned __int16 v8;
  double *v9;
  double v10;
  __double2 v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  __double2 v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;

  v3 = *(unsigned __int16 *)(a2 + 30);
  if (v3 == *(unsigned __int16 *)(a3 + 30))
  {
    v4 = *(unsigned __int16 *)(a2 + 26);
    if (v4 == 0xFFFF)
    {
      fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "oldBase->mapiNodeIndex != -1", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 434, 0);
    }
    else
    {
      v6 = *(unsigned __int16 *)(a3 + 26);
      if (v6 == 0xFFFF)
      {
        fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "newBase->mapiNodeIndex != -1", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 435, 0);
      }
      else if (v4 == *(unsigned __int16 *)(a2 + 28))
      {
        if (fabs(*(double *)a2) >= 0.1
          || fabs(*(double *)(a2 + 8)) >= 0.1
          || vabdd_f64(*(double *)(a2 + 16) / 6.28318531, floor(*(double *)(a2 + 16) / 6.28318531)) >= 0.01)
        {
          fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "__VectorIsZero(&oldBase->coordinates)", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 439, 0);
        }
        else
        {
          v8 = *(_WORD *)(a2 + 30);
          v9 = *(double **)(*((_QWORD *)a1 + 5) + 8 * (__int16)v3);
          v10 = v9[2];
          v11 = __sincos_stret(v10);
          v12 = *(double *)(a3 + 8);
          v13 = v10 + *(double *)(a3 + 16);
          v14 = v9[1] + v11.__sinval * *(double *)a3 + v11.__cosval * v12;
          *v9 = *v9 + v11.__cosval * *(double *)a3 - v11.__sinval * v12;
          v9[1] = v14;
          v9[2] = v13;
          v15 = *(double *)a3;
          v16 = *(double *)(a3 + 8);
          v17 = *(double *)(a3 + 16);
          v18 = __sincos_stret(v17);
          v19 = *a1;
          if ((int)v19 >= 1)
          {
            v20 = (uint64_t *)*((_QWORD *)a1 + 1);
            do
            {
              v21 = *v20;
              if (*(unsigned __int16 *)(*v20 + 30) == v8)
              {
                *(_WORD *)(v21 + 28) = v6;
                v22 = *(double *)(v21 + 8);
                v23 = *(double *)(v21 + 16) - v17;
                v24 = -v18.__sinval * *(double *)v21 - (v16 * v18.__cosval + -v18.__sinval * v15) + v18.__cosval * v22;
                *(double *)v21 = v18.__cosval * *(double *)v21
                               - (v16 * v18.__sinval
                                + v18.__cosval * v15)
                               + v18.__sinval * v22;
                *(double *)(v21 + 8) = v24;
                *(double *)(v21 + 16) = v23;
              }
              ++v20;
              --v19;
            }
            while (v19);
            v15 = *(double *)a3;
          }
          if (fabs(v15) >= 0.1
            || fabs(*(double *)(a3 + 8)) >= 0.1
            || vabdd_f64(*(double *)(a3 + 16) / 6.28318531, floor(*(double *)(a3 + 16) / 6.28318531)) >= 0.01)
          {
            fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "__VectorIsZero(&newBase->coordinates)", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 463, 0);
          }
          else
          {
            if (v6 == *(unsigned __int16 *)(a3 + 28))
              return 0;
            fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "newBase->mapiNodeIndex == newBase->mapiBaseNodeIndex", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 465, 0);
          }
        }
      }
      else
      {
        fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "oldBase->mapiNodeIndex == oldBase->mapiBaseNodeIndex", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 438, 0);
      }
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "oldBase->componentIndex == newBase->componentIndex", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/nodevis.c", 431, 0);
  }
  return 22;
}

uint64_t crc32ansi(char *a1, uint64_t a2, int *a3)
{
  int v3;
  unsigned int v4;
  char v5;
  uint64_t result;

  if (!a1)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "inData", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/crc32lib.c", 51, 0);
    return 22;
  }
  if (!a3)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "ioCRC", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/crc32lib.c", 52, 0);
    return 22;
  }
  v3 = *a3;
  v4 = ~*a3;
  *a3 = v4;
  if (a2)
  {
    do
    {
      v5 = *a1++;
      v4 = sCRC32Table[(v5 ^ v4)] ^ (v4 >> 8);
      *a3 = v4;
      --a2;
    }
    while (a2);
    v3 = ~v4;
  }
  result = 0;
  *a3 = v3;
  return result;
}

void __SettingsNotificationCallback(uint64_t a1, void *a2, const __CFString *a3, uint64_t a4, uint64_t a5)
{
  NSObject *v10;
  NSObject *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  int v15;
  uint64_t v16;
  __int16 v17;
  void *v18;
  __int16 v19;
  const __CFString *v20;
  __int16 v21;
  uint64_t v22;
  __int16 v23;
  uint64_t v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v10 = MEMORY[0x24BDACB70];
  if (__osLog)
    v11 = __osLog;
  else
    v11 = MEMORY[0x24BDACB70];
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
  {
    v15 = 138413314;
    v16 = a1;
    v17 = 2048;
    v18 = a2;
    v19 = 2112;
    v20 = a3;
    v21 = 2048;
    v22 = a4;
    v23 = 2112;
    v24 = a5;
    _os_log_impl(&dword_24B74E000, v11, OS_LOG_TYPE_DEBUG, "__SettingsNotificationCallback %@ %p %@ %p %@\n", (uint8_t *)&v15, 0x34u);
  }
  v12 = (void *)MEMORY[0x24BD27898]();
  objc_msgSend(MEMORY[0x24BE0CE58], "sharedInstance");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "synchronize");

  if (CFStringCompare(a3, CFSTR("com.apple.biometrickitd.AppleMesaSEPLoggingLevel"), 0) == kCFCompareEqualTo)
    objc_msgSend(a2, "setAppleMesaSEPLoggingLevel");
  objc_autoreleasePoolPop(v12);
  if (__osLog)
    v14 = __osLog;
  else
    v14 = v10;
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(v15) = 0;
    _os_log_impl(&dword_24B74E000, v14, OS_LOG_TYPE_DEBUG, "__SettingsNotificationCallback -> void\n", (uint8_t *)&v15, 2u);
  }
}

void __thermalLevelCallback(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSObject *v10;
  NSObject *v11;
  void *v12;
  int v13;
  id *v14;
  id *v15;
  void *v16;
  NSObject *v17;
  int v18;
  uint64_t v19;
  __int16 v20;
  void *v21;
  __int16 v22;
  uint64_t v23;
  __int16 v24;
  uint64_t v25;
  __int16 v26;
  uint64_t v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v10 = MEMORY[0x24BDACB70];
  if (__osLog)
    v11 = __osLog;
  else
    v11 = MEMORY[0x24BDACB70];
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
  {
    v18 = 138413314;
    v19 = a1;
    v20 = 2048;
    v21 = a2;
    v22 = 2112;
    v23 = a3;
    v24 = 2048;
    v25 = a4;
    v26 = 2112;
    v27 = a5;
    _os_log_impl(&dword_24B74E000, v11, OS_LOG_TYPE_DEBUG, "__thermalLevelCallback %@ %p %@ %p %@\n", (uint8_t *)&v18, 0x34u);
  }
  v12 = (void *)MEMORY[0x24BD27898]();
  v13 = OSThermalNotificationCurrentLevel();
  v14 = a2;
  v15 = v14;
  if ((v13 & 0x80000000) == 0)
    objc_msgSend(v14, "performCommand:inValue:inData:inSize:outData:outSize:", 24, (unsigned __int16)v13, 0, 0, 0, 0);
  objc_msgSend(v15[49], "logThermalLevel:", v13);
  +[BioLog y](_TtC5BKDM16BioLog, "y");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "logThermalLevel:", v13);

  objc_autoreleasePoolPop(v12);
  if (__osLog)
    v17 = __osLog;
  else
    v17 = v10;
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(v18) = 0;
    _os_log_impl(&dword_24B74E000, v17, OS_LOG_TYPE_DEBUG, "__thermalLevelCallback -> void\n", (uint8_t *)&v18, 2u);
  }
}

void __LoggingSettingsNotificationCallback(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSObject *v10;
  void *v11;
  void *v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  void *v16;
  __int16 v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  __int16 v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  if (__osLogTrace)
    v10 = __osLogTrace;
  else
    v10 = MEMORY[0x24BDACB70];
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
  {
    v13 = 134219010;
    v14 = a1;
    v15 = 2048;
    v16 = a2;
    v17 = 2112;
    v18 = a3;
    v19 = 2048;
    v20 = a4;
    v21 = 2112;
    v22 = a5;
    _os_log_impl(&dword_24B74E000, v10, OS_LOG_TYPE_DEBUG, "__LoggingSettingsNotificationCallback %p %p %@ %p %@\n", (uint8_t *)&v13, 0x34u);
  }
  v11 = (void *)MEMORY[0x24BD27898]();
  objc_msgSend(MEMORY[0x24BE0CE58], "sharedInstance");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "synchronize");

  objc_msgSend(a2, "updateBioLogState");
  objc_autoreleasePoolPop(v11);
}

void __serviceMatch(void *a1, uint64_t a2)
{
  NSObject *v4;
  NSObject *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  int v9;
  void *v10;
  __int16 v11;
  int v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v4 = MEMORY[0x24BDACB70];
  if (__osLog)
    v5 = __osLog;
  else
    v5 = MEMORY[0x24BDACB70];
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v9 = 134218240;
    v10 = a1;
    v11 = 1024;
    v12 = a2;
    _os_log_impl(&dword_24B74E000, v5, OS_LOG_TYPE_DEFAULT, "__serviceMatch <- context:%p, iterator:%u\n", (uint8_t *)&v9, 0x12u);
  }
  v6 = (void *)os_transaction_create();
  v7 = (void *)MEMORY[0x24BD27898]();
  objc_msgSend(a1, "serviceMatchWithIterator:context:", a2, a1);
  objc_autoreleasePoolPop(v7);
  if (__osLog)
    v8 = __osLog;
  else
    v8 = v4;
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v9) = 0;
    _os_log_impl(&dword_24B74E000, v8, OS_LOG_TYPE_DEFAULT, "__serviceMatch -> void\n", (uint8_t *)&v9, 2u);
  }

}

void sub_24B7544CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t __HIDEventFilterCallback(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSObject *v8;
  NSObject *v9;
  id v10;
  uint64_t IntegerValue;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  _BOOL4 v15;
  _BOOL4 v16;
  unsigned int v17;
  NSObject *v18;
  uint64_t v19;
  NSObject *v20;
  _QWORD block[5];
  uint8_t buf[4];
  void *v24;
  __int16 v25;
  uint64_t v26;
  __int16 v27;
  uint64_t v28;
  __int16 v29;
  uint64_t v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v8 = MEMORY[0x24BDACB70];
  if (__osLog)
    v9 = __osLog;
  else
    v9 = MEMORY[0x24BDACB70];
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 134218752;
    v24 = a1;
    v25 = 2048;
    v26 = a2;
    v27 = 2048;
    v28 = a3;
    v29 = 2048;
    v30 = a4;
    _os_log_impl(&dword_24B74E000, v9, OS_LOG_TYPE_DEBUG, "__HIDEventFilterCallback %p %p %p %p\n", buf, 0x2Au);
  }
  v10 = a1;
  if (IOHIDEventGetType() != 3)
    goto LABEL_25;
  IntegerValue = IOHIDEventGetIntegerValue();
  v12 = IOHIDEventGetIntegerValue();
  v13 = IOHIDEventGetIntegerValue();
  v14 = IntegerValue == 12;
  v15 = v12 == 64 && IntegerValue == 12;
  if (v12 != 48)
    v14 = 0;
  if (v13)
    v16 = v15;
  else
    v16 = 0;
  if (v13)
    v17 = v14;
  else
    v17 = 0;
  if (objc_msgSend(v10, "getSensorType") != 4)
  {
    if (v16)
    {
      v17 ^= 1u;
      if (!v17)
        goto LABEL_26;
      goto LABEL_24;
    }
LABEL_25:
    v17 = 0;
    goto LABEL_26;
  }
  if (v16)
    goto LABEL_25;
  if (v17)
  {
LABEL_24:
    dispatch_get_global_queue(0, 0);
    v18 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = ____HIDEventFilterCallback_block_invoke;
    block[3] = &unk_251CA06E0;
    block[4] = v10;
    dispatch_async(v18, block);

    v17 = 1;
  }
LABEL_26:
  if (IOHIDEventGetType() == 32)
    v19 = 1;
  else
    v19 = v17;
  if (__osLog)
    v20 = __osLog;
  else
    v20 = v8;
  if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 67109120;
    LODWORD(v24) = v19;
    _os_log_impl(&dword_24B74E000, v20, OS_LOG_TYPE_DEBUG, "__HIDEventFilterCallback -> %d\n", buf, 8u);
  }

  return v19;
}

void sub_24B757B94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B75EAF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B75EE00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B75FC20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B760028(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_24B761590(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B7621F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B76306C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B763408(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void __firstUnlockCallback(const char *a1, void *a2, const char *a3, const char *a4, uint64_t a5)
{
  uint64_t v10;
  NSObject *v11;
  void *v12;
  id v13;
  int v14;
  NSObject *v15;
  int v16;
  NSObject *v17;
  int v18;
  const char *v19;
  __int16 v20;
  void *v21;
  __int16 v22;
  const char *v23;
  __int16 v24;
  const char *v25;
  __int16 v26;
  uint64_t v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v10 = MEMORY[0x24BDACB70];
  if (__osLogTrace)
    v11 = __osLogTrace;
  else
    v11 = MEMORY[0x24BDACB70];
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
  {
    v18 = 134219010;
    v19 = a1;
    v20 = 2048;
    v21 = a2;
    v22 = 2112;
    v23 = a3;
    v24 = 2048;
    v25 = a4;
    v26 = 2112;
    v27 = a5;
    _os_log_impl(&dword_24B74E000, v11, OS_LOG_TYPE_DEBUG, "__firstUnlockCallback %p %p %@ %p %@\n", (uint8_t *)&v18, 0x34u);
  }
  v12 = (void *)MEMORY[0x24BD27898]();
  v13 = a2;
  v14 = objc_msgSend(v13, "handleFirstUnlock");
  if (v14)
  {
    v16 = v14;
    v17 = (__osLog ? __osLog : v10);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      v18 = 136316162;
      v19 = "[me handleFirstUnlock] == 0 ";
      v20 = 2048;
      v21 = (void *)v16;
      v22 = 2080;
      v23 = "";
      v24 = 2080;
      v25 = "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/BiometricKitXPCServerMesa.m";
      v26 = 1024;
      LODWORD(v27) = 4954;
      _os_log_impl(&dword_24B74E000, v17, OS_LOG_TYPE_ERROR, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n\n", (uint8_t *)&v18, 0x30u);
    }
  }

  objc_autoreleasePoolPop(v12);
  if (__osLogTrace)
    v15 = __osLogTrace;
  else
    v15 = v10;
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(v18) = 0;
    _os_log_impl(&dword_24B74E000, v15, OS_LOG_TYPE_DEBUG, "__firstUnlockCallback -> void\n", (uint8_t *)&v18, 2u);
  }
}

void __serviceStatus(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v8;
  void *v9;
  id v10;
  NSObject *v11;
  int v12;
  id v13;
  __int16 v14;
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v8 = (void *)os_transaction_create();
  v9 = (void *)MEMORY[0x24BD27898]();
  v10 = a1;
  if (__osLog)
    v11 = __osLog;
  else
    v11 = MEMORY[0x24BDACB70];
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
  {
    v12 = 134218242;
    v13 = v10;
    v14 = 2112;
    v15 = v10;
    _os_log_impl(&dword_24B74E000, v11, OS_LOG_TYPE_DEBUG, "__serviceStatus %p(%@) --> serviceStatus:type:inValue:\n", (uint8_t *)&v12, 0x16u);
  }
  objc_msgSend(v10, "serviceStatus:type:inValue:", a2, a3, a4);

  objc_autoreleasePoolPop(v9);
}

id convertTemplateUpdateInfoFromV1(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  const void *v4;
  id v5;
  NSObject *v7;
  int v8;
  const char *v9;
  __int16 v10;
  uint64_t v11;
  __int16 v12;
  const char *v13;
  __int16 v14;
  const char *v15;
  __int16 v16;
  int v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  if (objc_msgSend(v1, "length") != 3178)
  {
    if (__osLog)
      v7 = __osLog;
    else
      v7 = MEMORY[0x24BDACB70];
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      goto LABEL_16;
    v8 = 136316162;
    v9 = "[msgDataV1 length] == sizeof(*srcV1)";
    v10 = 2048;
    v11 = 0;
    v12 = 2080;
    v13 = "";
    v14 = 2080;
    v15 = "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/BiometricKitXPCServerMesa.m";
    v16 = 1024;
    v17 = 5074;
    goto LABEL_15;
  }
  objc_msgSend(MEMORY[0x24BDBCEC8], "dataWithLength:", 3202);
  v2 = objc_claimAutoreleasedReturnValue();
  if (!v2)
  {
    if (__osLog)
      v7 = __osLog;
    else
      v7 = MEMORY[0x24BDACB70];
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      goto LABEL_16;
    v8 = 136316162;
    v9 = "result";
    v10 = 2048;
    v11 = 0;
    v12 = 2080;
    v13 = "";
    v14 = 2080;
    v15 = "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/BiometricKitXPCServerMesa.m";
    v16 = 1024;
    v17 = 5077;
LABEL_15:
    _os_log_impl(&dword_24B74E000, v7, OS_LOG_TYPE_ERROR, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n\n", (uint8_t *)&v8, 0x30u);
LABEL_16:
    v5 = 0;
    goto LABEL_4;
  }
  v3 = (void *)v2;
  v4 = (const void *)objc_msgSend(objc_retainAutorelease(v1), "bytes");
  v5 = objc_retainAutorelease(v3);
  memcpy((void *)objc_msgSend(v5, "mutableBytes"), v4, 0xC6AuLL);
LABEL_4:

  return v5;
}

id convertBgopsResultFromV1(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  const void *v4;
  id v5;
  NSObject *v7;
  int v8;
  const char *v9;
  __int16 v10;
  uint64_t v11;
  __int16 v12;
  const char *v13;
  __int16 v14;
  const char *v15;
  __int16 v16;
  int v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  if (objc_msgSend(v1, "length") != 3190)
  {
    if (__osLog)
      v7 = __osLog;
    else
      v7 = MEMORY[0x24BDACB70];
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      goto LABEL_16;
    v8 = 136316162;
    v9 = "[msgDataV1 length] == sizeof(*srcV1)";
    v10 = 2048;
    v11 = 0;
    v12 = 2080;
    v13 = "";
    v14 = 2080;
    v15 = "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/BiometricKitXPCServerMesa.m";
    v16 = 1024;
    v17 = 5106;
    goto LABEL_15;
  }
  objc_msgSend(MEMORY[0x24BDBCEC8], "dataWithLength:", 3214);
  v2 = objc_claimAutoreleasedReturnValue();
  if (!v2)
  {
    if (__osLog)
      v7 = __osLog;
    else
      v7 = MEMORY[0x24BDACB70];
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      goto LABEL_16;
    v8 = 136316162;
    v9 = "result";
    v10 = 2048;
    v11 = 0;
    v12 = 2080;
    v13 = "";
    v14 = 2080;
    v15 = "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/BiometricKitXPCServerMesa.m";
    v16 = 1024;
    v17 = 5109;
LABEL_15:
    _os_log_impl(&dword_24B74E000, v7, OS_LOG_TYPE_ERROR, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n\n", (uint8_t *)&v8, 0x30u);
LABEL_16:
    v5 = 0;
    goto LABEL_4;
  }
  v3 = (void *)v2;
  v4 = (const void *)objc_msgSend(objc_retainAutorelease(v1), "bytes");
  v5 = objc_retainAutorelease(v3);
  memcpy((void *)objc_msgSend(v5, "mutableBytes"), v4, 0xC76uLL);
LABEL_4:

  return v5;
}

id convertEnrollmentInfoFromV1(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  _OWORD *v4;
  id v5;
  uint64_t v6;
  __int128 v7;
  NSObject *v9;
  int v10;
  const char *v11;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  const char *v15;
  __int16 v16;
  const char *v17;
  __int16 v18;
  int v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  if (objc_msgSend(v1, "length") != 3200)
  {
    if (__osLog)
      v9 = __osLog;
    else
      v9 = MEMORY[0x24BDACB70];
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      goto LABEL_16;
    v10 = 136316162;
    v11 = "[msgDataV1 length] == sizeof(*srcV1)";
    v12 = 2048;
    v13 = 0;
    v14 = 2080;
    v15 = "";
    v16 = 2080;
    v17 = "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/BiometricKitXPCServerMesa.m";
    v18 = 1024;
    v19 = 5174;
    goto LABEL_15;
  }
  objc_msgSend(MEMORY[0x24BDBCEC8], "dataWithLength:", 3224);
  v2 = objc_claimAutoreleasedReturnValue();
  if (!v2)
  {
    if (__osLog)
      v9 = __osLog;
    else
      v9 = MEMORY[0x24BDACB70];
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      goto LABEL_16;
    v10 = 136316162;
    v11 = "result";
    v12 = 2048;
    v13 = 0;
    v14 = 2080;
    v15 = "";
    v16 = 2080;
    v17 = "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/BiometricKitXPCServerMesa.m";
    v18 = 1024;
    v19 = 5177;
LABEL_15:
    _os_log_impl(&dword_24B74E000, v9, OS_LOG_TYPE_ERROR, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n\n", (uint8_t *)&v10, 0x30u);
LABEL_16:
    v5 = 0;
    goto LABEL_4;
  }
  v3 = (void *)v2;
  v4 = (_OWORD *)objc_msgSend(objc_retainAutorelease(v1), "bytes");
  v5 = objc_retainAutorelease(v3);
  v6 = objc_msgSend(v5, "mutableBytes");
  memcpy((void *)v6, v4, 0xC60uLL);
  v7 = v4[199];
  *(_OWORD *)(v6 + 3192) = v4[198];
  *(_OWORD *)(v6 + 3208) = v7;
LABEL_4:

  return v5;
}

void sub_24B769E58()
{
  __break(1u);
  JUMPOUT(0x24B769F2CLL);
}

void sub_24B76A038(uint64_t a1, int a2)
{
  if (a2)
  {
    objc_end_catch();
    JUMPOUT(0x24B76A044);
  }
  JUMPOUT(0x24B76A058);
}

void BKDMTerminate()
{
  void *v0;
  void *v1;
  void *v2;
  NSObject *v3;
  uint8_t v4[16];

  v0 = (void *)__xpcListenerQueue;
  if (__xpcListenerQueue)
  {
    __xpcListenerQueue = 0;

  }
  v1 = (void *)__xpcServer;
  if (__xpcServer)
  {
    __xpcServer = 0;

  }
  v2 = (void *)__listener;
  if (__listener)
  {
    __listener = 0;

  }
  v3 = __osLog;
  if (__osLog)
  {
    if (os_log_type_enabled((os_log_t)__osLog, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_24B74E000, v3, OS_LOG_TYPE_DEFAULT, "--- biometrickitd (Mesa) ends ---\n", v4, 2u);
    }
  }
}

uint64_t BKDMInitialize()
{
  os_log_t v0;
  void *v1;
  void *v2;
  NSObject *v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  dispatch_queue_t v9;
  void *v10;
  uint64_t v11;
  NSObject *v13;
  NSObject *v14;
  int v15;
  const char *v16;
  __int16 v17;
  uint64_t v18;
  __int16 v19;
  const char *v20;
  __int16 v21;
  const char *v22;
  __int16 v23;
  int v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  if ((isTouchIDPlatform() & 1) == 0)
  {
    if (__osLog)
      v13 = __osLog;
    else
      v13 = MEMORY[0x24BDACB70];
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      v15 = 136316162;
      v16 = "isTouchIDPlatform()";
      v17 = 2048;
      v18 = 0;
      v19 = 2080;
      v20 = "";
      v21 = 2080;
      v22 = "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/BiometricKitXPCServerMesa.m";
      v23 = 1024;
      v24 = 7973;
      _os_log_impl(&dword_24B74E000, v13, OS_LOG_TYPE_ERROR, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n\n", (uint8_t *)&v15, 0x30u);
    }
    v11 = 19;
    goto LABEL_41;
  }
  v0 = os_log_create("com.apple.BiometricKit", "Daemon-Mesa");
  v1 = (void *)__osLog;
  __osLog = (uint64_t)v0;

  v2 = (void *)__osLog;
  if (!__osLog)
  {
    if (os_log_type_enabled(MEMORY[0x24BDACB70], OS_LOG_TYPE_ERROR))
      BKDMInitialize_cold_1();
    v2 = (void *)__osLog;
  }
  objc_storeStrong((id *)&__osLogTrace, v2);
  v3 = MEMORY[0x24BDACB70];
  if (__osLog)
    v4 = __osLog;
  else
    v4 = MEMORY[0x24BDACB70];
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v15) = 0;
    _os_log_impl(&dword_24B74E000, v4, OS_LOG_TYPE_DEFAULT, "--- biometrickitd (Mesa) starts ---\n", (uint8_t *)&v15, 2u);
  }
  v5 = objc_msgSend(objc_alloc(MEMORY[0x24BDD1998]), "initWithMachServiceName:", CFSTR("com.apple.biometrickitd"));
  v6 = (void *)__listener;
  __listener = v5;

  if (!__listener)
  {
    if (__osLog)
      v14 = __osLog;
    else
      v14 = v3;
    if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      goto LABEL_40;
    v15 = 136316162;
    v16 = "__listener";
    v17 = 2048;
    v18 = 0;
    v19 = 2080;
    v20 = "";
    v21 = 2080;
    v22 = "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/BiometricKitXPCServerMesa.m";
    v23 = 1024;
    v24 = 7982;
    goto LABEL_39;
  }
  if (!__xpcServer)
  {
    +[BiometricKitXPCServerMesa sharedInstance](BiometricKitXPCServerMesa, "sharedInstance");
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = (void *)__xpcServer;
    __xpcServer = v7;

    if (!__xpcServer)
    {
      if (__osLog)
        v14 = __osLog;
      else
        v14 = v3;
      if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        goto LABEL_40;
      v15 = 136316162;
      v16 = "__xpcServer";
      v17 = 2048;
      v18 = 0;
      v19 = 2080;
      v20 = "";
      v21 = 2080;
      v22 = "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/BiometricKitXPCServerMesa.m";
      v23 = 1024;
      v24 = 8001;
      goto LABEL_39;
    }
    +[BioLog updateLog](_TtC5BKDM16BioLog, "updateLog");
  }
  v9 = dispatch_queue_create("com.apple.biometrickitd.xpcListenerQueue", 0);
  v10 = (void *)__xpcListenerQueue;
  __xpcListenerQueue = (uint64_t)v9;

  if (!__xpcListenerQueue)
  {
    if (__osLog)
      v14 = __osLog;
    else
      v14 = v3;
    if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      goto LABEL_40;
    v15 = 136316162;
    v16 = "__xpcListenerQueue";
    v17 = 2048;
    v18 = 0;
    v19 = 2080;
    v20 = "";
    v21 = 2080;
    v22 = "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/BiometricKitXPCServerMesa.m";
    v23 = 1024;
    v24 = 8009;
LABEL_39:
    _os_log_impl(&dword_24B74E000, v14, OS_LOG_TYPE_ERROR, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n\n", (uint8_t *)&v15, 0x30u);
LABEL_40:
    v11 = 22;
LABEL_41:
    BKDMTerminate();
    return v11;
  }
  objc_msgSend((id)__listener, "setDelegate:", __xpcServer);
  objc_msgSend((id)__listener, "_setQueue:", __xpcListenerQueue);
  objc_msgSend((id)__listener, "resume");
  return 0;
}

void sub_24B7730FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t mobileKeyBagLockStatusNotificationCallback(uint64_t a1, void *a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  const __CFString *v7;
  _QWORD v8[2];

  v8[1] = *MEMORY[0x24BDAC8D0];
  if (!mobileKeyBagLockStatusNotificationCallback_optionsDict)
  {
    v7 = CFSTR("ExtendedDeviceLockState");
    v8[0] = MEMORY[0x24BDBD1C8];
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v8, &v7, 1);
    v3 = objc_claimAutoreleasedReturnValue();
    v4 = (void *)mobileKeyBagLockStatusNotificationCallback_optionsDict;
    mobileKeyBagLockStatusNotificationCallback_optionsDict = v3;

  }
  v5 = MKBGetDeviceLockState();
  NSLog(CFSTR("mobileKeyBagLockStatusNotificationCallback lockState: %d"), v5);
  return objc_msgSend(a2, "logMobileKeyBagLockStatus:", v5);
}

void mesaScanningStateNotificationCallback(void *a1, io_registry_entry_t entry, int a3)
{
  uint64_t v3;
  uint64_t v4;
  const __CFNumber *CFProperty;
  void *v7;
  unsigned int valuePtr;
  uint64_t v9;
  uint64_t v10;

  if (a3 == -536870608)
  {
    v9 = v3;
    v10 = v4;
    valuePtr = 0;
    CFProperty = (const __CFNumber *)IORegistryEntryCreateCFProperty(entry, CFSTR("ScanningState"), (CFAllocatorRef)*MEMORY[0x24BDBD240], 0);
    CFNumberGetValue(CFProperty, kCFNumberIntType, &valuePtr);
    CFRelease(CFProperty);
    +[BLHelper stringFromScanningState:](BLHelper, "stringFromScanningState:", valuePtr);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1, "logAsync:withDetails:timestamp:endingWithToken:", CFSTR("System"), v7, 0, 0);

  }
}

void *powerSourceInterestNotificationCallback(void *a1, const char *a2, int a3)
{
  if (a3 == -536723200)
    return (void *)objc_msgSend(a1, "logPowerSourceStateAsync:initial:", 1, 0);
  return a1;
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

id OUTLINED_FUNCTION_1()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_2()
{
  void *v0;

  return objc_msgSend(v0, "UTF8String");
}

void sub_24B77CE18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_24B77CE84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_24B77D014(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id getOSLog()
{
  if (getOSLog_once != -1)
    dispatch_once(&getOSLog_once, &__block_literal_global_1);
  return (id)getOSLog_osLog;
}

void sub_24B77D25C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B77D48C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B77D868(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B77DD14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B77DDB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B77DE28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B77DFA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B77E298(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B77EAD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void __getOSLog_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.BiometricKit", "Daemon-Statistics");
  v1 = (void *)getOSLog_osLog;
  getOSLog_osLog = (uint64_t)v0;

}

void OUTLINED_FUNCTION_0_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0x12u);
}

void OUTLINED_FUNCTION_3(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_5(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0x16u);
}

void OUTLINED_FUNCTION_7(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0x1Cu);
}

void sub_24B77F90C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B77FCE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B780128(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B780340(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B780568(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_24B7809CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B780B28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B780C58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B7813C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B7815E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B781704(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B7817EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B7818D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B78199C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B781BF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B781D3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B781FA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B782380(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_24B782994(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B782D30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B783468(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B783740(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B783A24(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_24B783C00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B783EE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B783F80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B784218(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_24B785200(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_24B785940(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_24B787ADC(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

uint64_t __BuildFullPath(const char *a1, CFIndex *a2, char *a3)
{
  uint64_t CatacombDirectoryPath;

  if (!a1)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "inName", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 226, 0);
    return 22;
  }
  if (!*a2)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "*ioSize > 0", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 227, 0);
    return 22;
  }
  if (!a3)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "ioPath", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 228, 0);
    return 22;
  }
  CatacombDirectoryPath = __GetCatacombDirectoryPath(a2, a3);
  if ((_DWORD)CatacombDirectoryPath)
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "err == 0 ", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 231, (int)CatacombDirectoryPath);
  else
    *a2 = snprintf(a3, *a2, "%s/%s", a3, a1);
  return CatacombDirectoryPath;
}

uint64_t LoadDataFromCatacomb(const char *a1, _QWORD *a2, size_t *a3)
{
  uint64_t v6;
  uint64_t IsProtectionClassD;
  FILE *v8;
  FILE *v9;
  int v10;
  uint64_t v11;
  size_t st_size;
  void *v13;
  void *v14;
  uint64_t v16;
  stat v17;
  CFIndex v18;
  char __filename[1024];
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  __filename[0] = 0;
  if (!a1)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "inName", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 68, 0);
    return 22;
  }
  if (!a2)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "outData", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 69, 0);
    return 22;
  }
  memset(&v17, 0, sizeof(v17));
  v18 = 1024;
  v6 = __BuildFullPath(a1, &v18, __filename);
  if ((_DWORD)v6)
  {
    IsProtectionClassD = v6;
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "err == 0 ", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 73, (int)v6);
    return IsProtectionClassD;
  }
  IsProtectionClassD = __FileIsProtectionClassD(__filename);
  v8 = fopen(__filename, "rb");
  if (!v8)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "file", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 78, 0);
    return *__error();
  }
  v9 = v8;
  v10 = fileno(v8);
  v11 = fstat(v10, &v17);
  if ((_DWORD)v11)
  {
    v16 = v11;
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "err == 0 ", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 81, (int)v11);
    IsProtectionClassD = v16;
  }
  else
  {
    st_size = v17.st_size;
    if (v17.st_size)
    {
      v13 = malloc_type_malloc(v17.st_size, 0x8A51266DuLL);
      if (v13)
      {
        v14 = v13;
        if (fread(v13, 1uLL, st_size, v9) == st_size)
        {
          *a2 = v14;
          *a3 = st_size;
          if (!(_DWORD)IsProtectionClassD)
            goto LABEL_11;
          IsProtectionClassD = SaveDataToCatacomb(a1, v14, st_size);
          if (!(_DWORD)IsProtectionClassD)
            goto LABEL_11;
          fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "err == 0 ", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 98, (int)IsProtectionClassD);
        }
        else
        {
          fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "read == size", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 90, 0);
          IsProtectionClassD = 5;
        }
        fclose(v9);
        free(v14);
        return IsProtectionClassD;
      }
      fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "data", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 87, 0);
      IsProtectionClassD = 12;
    }
    else
    {
      fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "size > 0", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 84, 0);
      IsProtectionClassD = 33;
    }
  }
LABEL_11:
  fclose(v9);
  return IsProtectionClassD;
}

BOOL __FileIsProtectionClassD(const char *a1)
{
  int v1;
  int v2;
  int v3;

  if (a1)
  {
    v1 = open_dprotected_np(a1, 0, 0, 1);
    if ((v1 & 0x80000000) == 0)
    {
      v2 = v1;
      v3 = fcntl(v1, 63);
      close(v2);
      return v3 == 4;
    }
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "fd >= 0", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 334, 0);
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "inPath", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 328, 0);
  }
  return 0;
}

uint64_t SaveDataToCatacomb(const char *a1, const void *a2, size_t a3)
{
  uint64_t v6;
  int v7;
  FILE *v8;
  FILE *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  std::error_code *v14;
  uint64_t v15;
  uint64_t CatacombDirectoryPath;
  int v17;
  int v18;
  uint64_t v19;
  CFIndex v21;
  std::__fs::filesystem::path __from;
  char __str[1024];
  std::__fs::filesystem::path __to;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  __to.__pn_.__r_.__value_.__s.__data_[0] = 0;
  __str[0] = 0;
  __from.__pn_.__r_.__value_.__s.__data_[0] = 0;
  if (!a1)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "inName", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 133, 0);
    return 22;
  }
  if (!a2)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "inData", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 134, 0);
    return 22;
  }
  if (!a3)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "inSize", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 135, 0);
    return 22;
  }
  if ((snprintf(__str, 0x400uLL, "%s.%s", a1, "tmp") - 1024) <= 0xFFFFFC00)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "written > 0 && written < pathSize", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 139, 0);
    return 5;
  }
  v21 = 1024;
  v6 = __BuildFullPath(__str, &v21, (char *)&__from);
  if ((_DWORD)v6)
  {
    v19 = v6;
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "err == 0 ", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 143, (int)v6);
    return v19;
  }
  v7 = open_dprotected_np((const char *)&__from, 514, 3, 0, 384);
  if (v7 < 0)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "fd >= 0", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 147, 0);
    return 5;
  }
  v8 = fdopen(v7, "wb");
  if (!v8)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "file", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 152, 0);
    return 5;
  }
  v9 = v8;
  if (fwrite(a2, 1uLL, a3, v8) != a3)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "written == inSize", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 155, 0);
    v19 = 5;
LABEL_30:
    fclose(v9);
    return v19;
  }
  v10 = fileno(v9);
  v11 = fcntl(v10, 51);
  if ((_DWORD)v11)
  {
    v19 = v11;
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "err == 0 ", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 158, (int)v11);
    goto LABEL_30;
  }
  v12 = fclose(v9);
  if ((_DWORD)v12)
  {
    v19 = v12;
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "err == 0 ", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 161, (int)v12);
    goto LABEL_30;
  }
  v21 = 1024;
  v13 = __BuildFullPath(a1, &v21, (char *)&__to);
  if ((_DWORD)v13)
  {
    v19 = v13;
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "err == 0 ", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 166, (int)v13);
    return v19;
  }
  rename(&__from, &__to, v14);
  if ((_DWORD)v15)
  {
    v19 = v15;
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "err == 0 ", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 169, (int)v15);
    return v19;
  }
  __to.__pn_.__r_.__value_.__s.__data_[0] = 0;
  v21 = 1024;
  CatacombDirectoryPath = __GetCatacombDirectoryPath(&v21, (char *)&__to);
  if ((_DWORD)CatacombDirectoryPath)
  {
    v19 = CatacombDirectoryPath;
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "err == 0 ", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 174, (int)CatacombDirectoryPath);
    return v19;
  }
  v17 = open((const char *)&__to, 0x100000);
  if (v17 == -1)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "dirfd != -1", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 177, 0);
    return 5;
  }
  v18 = v17;
  v19 = fcntl(v17, 51);
  if ((_DWORD)v19)
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "err == 0 ", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 180, (int)v19);
  close(v18);
  return v19;
}

uint64_t __GetCatacombDirectoryPath(CFIndex *a1, char *a2)
{
  const __CFURL *v4;
  const __CFURL *v5;
  const __CFURL *v6;
  const __CFURL *v7;
  const __CFString *v8;
  const __CFString *v9;
  uint64_t v10;

  if (!*a1)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "*ioSize > 0", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 257, 0);
    return 22;
  }
  if (!a2)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "ioPath", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 258, 0);
    return 22;
  }
  v4 = (const __CFURL *)CFCopyHomeDirectoryURLForUser();
  if (!v4)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "dir", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 261, 0);
    return 2;
  }
  v5 = v4;
  v6 = CFURLCreateCopyAppendingPathComponent(0, v4, CFSTR("Library/Catacomb"), 1u);
  if (!v6)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "url", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 264, 0);
    CFRelease(v5);
    return 2;
  }
  v7 = v6;
  v8 = CFURLCopyFileSystemPath(v6, kCFURLPOSIXPathStyle);
  if (v8)
  {
    v9 = v8;
    if (CFStringGetCString(v8, a2, *a1, 0x8000100u))
    {
      v10 = mkdir(a2, 0x1FFu);
      if ((_DWORD)v10)
      {
        if (*__error() == 17)
        {
          v10 = 0;
        }
        else
        {
          fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "err == 0 ", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 274, (int)v10);
          v10 = *__error();
        }
      }
    }
    else
    {
      fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "ok", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 270, 0);
      v10 = 5;
    }
    CFRelease(v5);
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "str", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 267, 0);
    v10 = 2;
    v9 = (const __CFString *)v5;
  }
  CFRelease(v9);
  CFRelease(v7);
  return v10;
}

uint64_t RemoveFileFromCatacomb(const char *a1)
{
  CFIndex v2;
  char v3[1024];
  uint64_t v4;

  v4 = *MEMORY[0x24BDAC8D0];
  v2 = 1024;
  if (a1)
  {
    if (!__BuildFullPath(a1, &v2, v3))
      unlink(v3);
    return 0;
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "inName", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 201, 0);
    return 22;
  }
}

uint64_t __GetUUIDFileName(CFIndex *a1, char *a2)
{
  const __CFAllocator *v4;
  const __CFUUID *v5;
  const __CFUUID *v6;
  const __CFString *v7;
  const __CFString *v8;
  uint64_t v9;

  if (!*a1)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "*ioSize > 0", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 299, 0);
    return 22;
  }
  if (!a2)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "ioName", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 300, 0);
    return 22;
  }
  v4 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  v5 = CFUUIDCreate((CFAllocatorRef)*MEMORY[0x24BDBD240]);
  if (!v5)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "uuid", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 303, 0);
    return 12;
  }
  v6 = v5;
  v7 = CFUUIDCreateString(v4, v5);
  if (!v7)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "str", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 306, 0);
    CFRelease(v6);
    return 12;
  }
  v8 = v7;
  if (CFStringGetCString(v7, a2, *a1, 0x8000100u))
  {
    v9 = 0;
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "ok", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 309, 0);
    v9 = 5;
  }
  CFRelease(v6);
  CFRelease(v8);
  return v9;
}

uint64_t __DeblockedFileIO(FILE *__stream, uint64_t a2, unint64_t *a3, int a4)
{
  unint64_t v4;
  uint64_t v8;
  unint64_t v9;
  size_t v10;
  void *v11;
  size_t v12;

  if (!a2)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "ioData", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 358, 0);
    return 22;
  }
  if (!a3)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "ioSize", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 359, 0);
    return 22;
  }
  v4 = *a3;
  if (!*a3)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "*ioSize > 0", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 360, 0);
    return 22;
  }
  v8 = 0;
  v9 = *a3;
  do
  {
    if (v8 + 4096 <= v4)
      v10 = 4096;
    else
      v10 = v4 - v8;
    v11 = (void *)(a2 + v8);
    if (a4)
    {
      v12 = fwrite(v11, 1uLL, v10, __stream);
      if (!v12)
        break;
    }
    else
    {
      v12 = fread(v11, 1uLL, v10, __stream);
      if (!v12)
        break;
    }
    v8 += v12;
    --v9;
  }
  while (v9);
  if (v8 == v4)
    return 0;
  fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "total == size", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AthabaskanSnapshot/support/catacomb.c", 373, 0);
  return 5;
}

double checkMachCorrection(char a1)
{
  uint64_t v2;
  __darwin_time_t v3;
  double v4;
  BOOL v5;
  timeval v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11[2];
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  mach_absolute_time();
  v2 = absoluteToNanoseconds();
  v10 = 0;
  *(_QWORD *)v11 = 0x1500000001;
  v9 = 0;
  v8 = 16;
  if (sysctl(v11, 2u, &v9, &v8, 0, 0) == -1 || !v9)
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "sysctl(mib, sizeof(mib) / sizeof(mib[0]), &bootTime, &bootTimeSize, ((void *)0), 0) != -1 && bootTime.tv_sec != 0", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BLTimeBox.m", 126, 0);
  v7.tv_sec = 0;
  *(_QWORD *)&v7.tv_usec = 0;
  gettimeofday(&v7, 0);
  v3 = 1000 * (1000000 * (v7.tv_sec - v9) - (int)v10 + v7.tv_usec) - v2 - _nanosecsCorrection;
  if ((a1 & 1) != 0
    || ((v4 = 0.0, (unint64_t)(v3 - 1000000001) <= 0xFFFFFFFF88CA6BFELL)
      ? (v5 = (unint64_t)(1000 * (1000000 * (v7.tv_sec - v9) - (int)v10 + v7.tv_usec)
                               - _nanosecsCorrection
                               - _correctionIdleTimeStart) >= 0x77359401)
      : (v5 = 0),
        v5))
  {
    _nanosecsCorrection = 1000 * (1000000 * (v7.tv_sec - v9) - (int)v10 + v7.tv_usec) - v2;
    v4 = (double)v3;
  }
  _correctionIdleTimeStart = v2;
  return v4 / 1000000000.0;
}

uint64_t deviceExists(const char *a1)
{
  __CFDictionary *v1;
  uint64_t result;

  if (a1)
  {
    v1 = IOServiceNameMatching(a1);
    CFDictionarySetValue(v1, CFSTR("IOProviderClass"), CFSTR("AppleARMIICDevice"));
    result = IOServiceGetMatchingService(*MEMORY[0x24BDD8B20], v1);
    if ((_DWORD)result)
    {
      IOObjectRelease(result);
      return 1;
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "name", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", 46, 0);
    return 0;
  }
  return result;
}

uint64_t openConnection(const char *a1, io_connect_t *a2)
{
  __CFDictionary *v3;
  io_service_t MatchingService;
  io_object_t v5;
  uint64_t v6;

  if (a1)
  {
    if (a2)
    {
      v3 = IOServiceNameMatching(a1);
      CFDictionarySetValue(v3, CFSTR("IOProviderClass"), CFSTR("AppleARMIICDevice"));
      MatchingService = IOServiceGetMatchingService(*MEMORY[0x24BDD8B20], v3);
      if (MatchingService)
      {
        v5 = MatchingService;
        v6 = IOServiceOpen(MatchingService, *MEMORY[0x24BDAEC58], 0, a2);
        if ((_DWORD)v6)
          fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "ret == 0 ", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", 77, (int)v6);
        IOObjectRelease(v5);
      }
      else
      {
        fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "service", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", 74, 0);
        return 3758097088;
      }
    }
    else
    {
      v6 = 3758097090;
      fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "connect", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", 68, 0);
    }
  }
  else
  {
    v6 = 3758097090;
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "name", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", 67, 0);
  }
  return v6;
}

uint64_t closeConnection(io_connect_t *a1)
{
  io_connect_t v1;
  uint64_t v2;

  if (a1)
  {
    v1 = *a1;
    if (v1)
    {
      v2 = IOServiceClose(v1);
      if ((_DWORD)v2)
        fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "ret == 0 ", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", 95, (int)v2);
    }
    else
    {
      v2 = 3758097090;
      fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "*connect", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", 92, 0);
    }
  }
  else
  {
    v2 = 3758097090;
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "connect", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", 91, 0);
  }
  return v2;
}

uint64_t writeData(mach_port_t *a1, unint64_t a2, unint64_t a3, char *__src, uint64_t *a5)
{
  char *v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  size_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v19;
  size_t outputStructCnt;
  char outputStruct;
  _BYTE inputStruct[128];
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  if (!a1)
  {
    v17 = 3758097090;
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "connect", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", 106, 0);
LABEL_28:
    v11 = 0;
    goto LABEL_22;
  }
  if (!*a1)
  {
    v17 = 3758097090;
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "*connect", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", 107, 0);
    goto LABEL_28;
  }
  if (!a3)
  {
    v17 = 3758097090;
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "addressSize", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", 108, 0);
    goto LABEL_28;
  }
  v8 = __src;
  if (!__src)
  {
    v17 = 3758097090;
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "data", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", 109, 0);
    goto LABEL_28;
  }
  if (!a5)
  {
    v17 = 3758097090;
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "dataSize", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", 110, 0);
    return v17;
  }
  v9 = *a5;
  if (*a5)
  {
    if (a3 < 0x80)
    {
      v11 = 0;
      v19 = 128 - a3;
      outputStructCnt = 0;
      while (1)
      {
        v12 = v9 - v11;
        v13 = a2;
        v14 = a3;
        do
        {
          inputStruct[v14 - 1] = v13;
          v13 >>= 8;
          --v14;
        }
        while (v14);
        if (v12 + a3 > 0x80)
          v12 = v19;
        v15 = v12 >= 64 - (a2 & 0x3F) ? 64 - (a2 & 0x3F) : v12;
        memcpy(&inputStruct[a3], v8, v15);
        v16 = IOConnectCallMethod(*a1, 0, 0, 0, inputStruct, v15 + a3, 0, 0, &outputStruct, &outputStructCnt);
        if ((_DWORD)v16)
          break;
        v11 += v15;
        v8 += v15;
        a2 += v15;
        usleep(0x1388u);
        v9 = *a5;
        if (v11 == *a5)
        {
          v17 = 0;
          goto LABEL_19;
        }
      }
      v17 = v16;
      fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "ret == 0 ", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", 139, (int)v16);
LABEL_22:
      if (!a5)
        return v17;
      goto LABEL_19;
    }
    v17 = 3758097090;
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "128 > addressSize", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", 112, 0);
  }
  else
  {
    v17 = 3758097090;
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "*dataSize", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", 111, 0);
  }
  v11 = 0;
LABEL_19:
  *a5 = v11;
  return v17;
}

uint64_t readData(mach_port_t *a1, unint64_t a2, size_t inputStructCnt, char *outputStruct, uint64_t *a5)
{
  char *v8;
  uint64_t v9;
  uint64_t v11;
  size_t v12;
  unint64_t v13;
  size_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v18;
  _BYTE inputStruct[8];
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  if (!a1)
  {
    v16 = 3758097090;
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "connect", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", 163, 0);
LABEL_25:
    v11 = 0;
    goto LABEL_19;
  }
  if (!*a1)
  {
    v16 = 3758097090;
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "*connect", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", 164, 0);
    goto LABEL_25;
  }
  if (!inputStructCnt)
  {
    v16 = 3758097090;
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "addressSize", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", 165, 0);
    goto LABEL_25;
  }
  v8 = outputStruct;
  if (!outputStruct)
  {
    v16 = 3758097090;
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "data", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", 166, 0);
    goto LABEL_25;
  }
  if (!a5)
  {
    v16 = 3758097090;
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "dataSize", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", 167, 0);
    return v16;
  }
  v9 = *a5;
  if (*a5)
  {
    if (inputStructCnt <= 0x80)
    {
      v11 = 0;
      while (1)
      {
        v12 = v9 - v11;
        if (v12 >= 0x80)
          v12 = 128;
        v18 = v12;
        v13 = a2;
        v14 = inputStructCnt;
        do
        {
          inputStruct[v14 - 1] = v13;
          v13 >>= 8;
          --v14;
        }
        while (v14);
        v15 = IOConnectCallMethod(*a1, 0, 0, 0, inputStruct, inputStructCnt, 0, 0, v8, &v18);
        if ((_DWORD)v15)
          break;
        v11 += v18;
        v8 += v18;
        a2 += v18;
        v9 = *a5;
        if (v11 == *a5)
        {
          v16 = 0;
          goto LABEL_16;
        }
      }
      v16 = v15;
      fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "ret == 0 ", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", 184, (int)v15);
LABEL_19:
      if (!a5)
        return v16;
      goto LABEL_16;
    }
    v16 = 3758097090;
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "128 >= addressSize", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", 169, 0);
  }
  else
  {
    v16 = 3758097090;
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "*dataSize", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", 168, 0);
  }
  v11 = 0;
LABEL_16:
  *a5 = v11;
  return v16;
}

id getLocalEEPROMCalibrationData()
{
  int v0;
  unint64_t v1;
  int v2;
  void *v3;
  id v4;
  int v5;
  int v6;
  uint64_t v8;
  FILE *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t outputStruct;
  io_connect_t v15;

  v15 = 0;
  outputStruct = 0;
  v13 = 8;
  if (openConnection("mesa-eeprom", &v15))
  {
    v0 = openConnection("mesa-eeprom-lower-64k", &v15);
    if (v0)
    {
      v11 = v0;
      v9 = (FILE *)*MEMORY[0x24BDAC8D8];
      v12 = v11;
      v10 = 220;
      goto LABEL_23;
    }
    v1 = 256;
  }
  else
  {
    v1 = 128;
  }
  v2 = readData(&v15, v1, 2uLL, (char *)&outputStruct, &v13);
  if (v2)
  {
    v8 = v2;
    v9 = (FILE *)*MEMORY[0x24BDAC8D8];
    v12 = v8;
    v10 = 228;
LABEL_23:
    fprintf(v9, "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "ret == 0 ", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", v10, v12);
    goto LABEL_24;
  }
  if (v13 != 8)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "outputSize == sizeof(calBlobHeader)", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", 229, 0);
LABEL_24:
    v4 = 0;
    goto LABEL_11;
  }
  v13 = HIDWORD(outputStruct);
  if (HIDWORD(outputStruct) >= 0x10000)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "outputSize < 64*1024", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", 232, 0);
    goto LABEL_24;
  }
  objc_msgSend(MEMORY[0x24BDBCEC8], "dataWithLength:");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v3)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "calData", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", 235, 0);
    goto LABEL_24;
  }
  v4 = objc_retainAutorelease(v3);
  v5 = readData(&v15, v1, 2uLL, (char *)objc_msgSend(v4, "mutableBytes"), &v13);
  if (v5)
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "ret == 0 ", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", 240, v5);
LABEL_21:

    goto LABEL_24;
  }
  if (v13 != HIDWORD(outputStruct))
  {
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "outputSize == calBlobHeader.uiStructSize", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", 241, 0);
    goto LABEL_21;
  }
LABEL_11:
  if (v15)
  {
    v6 = closeConnection(&v15);
    if (v6)
      fprintf((FILE *)*MEMORY[0x24BDAC8D8], "AssertMacros: %s, %s file: %s, line: %d, value: %lld\n", "ret == 0 ", "", "/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/EEPROMHelper.m", 253, v6);
  }
  return v4;
}

void sub_24B799FE0(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_24B799FF8(uint64_t a1, int a2)
{
  if (a2)
    objc_terminate();
  JUMPOUT(0x24B79A004);
}

unint64_t sub_24B79A4EC()
{
  return sub_24B79A4F8((uint64_t)&unk_251CA0C88);
}

unint64_t sub_24B79A4F8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04D8);
  v2 = (_QWORD *)sub_24B7F3868();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_24B7ACB9C(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_BYTE *)(v2[7] + result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24B79A608(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0408);
  v2 = sub_24B7F3868();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_24B7B2F00(v6, (uint64_t)&v13, &qword_2579B0410);
    v7 = v13;
    result = sub_24B7ACC00(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_24B7B24C0(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t *sub_24B79A734()
{
  return &qword_2579B7FA0;
}

void sub_24B79A740(uint64_t a1)
{
  void *v2;

  swift_beginAccess();
  v2 = (void *)qword_2579B7FA0;
  qword_2579B7FA0 = a1;

}

uint64_t sub_24B79A7D0()
{
  uint64_t v0;
  id v1;

  swift_beginAccess();
  v0 = qword_2579B7FA0;
  v1 = (id)qword_2579B7FA0;
  return v0;
}

void sub_24B79A818()
{
  id v0;
  void *v1;
  _QWORD v2[6];

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v2[4] = +[_TtC5BKDM16BioLog updateLog]_0;
  v2[5] = 0;
  v2[0] = MEMORY[0x24BDAC760];
  v2[1] = 1107296256;
  v2[2] = sub_24B79A8C4;
  v2[3] = &block_descriptor_145;
  v1 = _Block_copy(v2);
  objc_msgSend(v0, sel_registerUpdateNotification_, v1);
  _Block_release(v1);

}

unint64_t sub_24B79A8CC(uint64_t a1)
{
  return sub_24B79A8F4(a1, MEMORY[0x24BDD0CF8], (unint64_t *)&qword_2579B1690);
}

unint64_t sub_24B79A8E0(uint64_t a1)
{
  return sub_24B79A8F4(a1, MEMORY[0x24BDD0CD8], (unint64_t *)&qword_2579B16A0);
}

unint64_t sub_24B79A8F4(uint64_t a1, void **a2, unint64_t *a3)
{
  uint64_t inited;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  unint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0400);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24B7F89F0;
  v6 = MEMORY[0x24BEE0D00];
  v7 = (void *)*MEMORY[0x24BDD0CB0];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDD0CB0];
  *(_QWORD *)(inited + 40) = 0x656C69626F6DLL;
  *(_QWORD *)(inited + 48) = 0xE600000000000000;
  v8 = (void *)*MEMORY[0x24BDD0CF0];
  *(_QWORD *)(inited + 64) = v6;
  *(_QWORD *)(inited + 72) = v8;
  v9 = *a2;
  type metadata accessor for FileProtectionType(0);
  *(_QWORD *)(inited + 104) = v10;
  *(_QWORD *)(inited + 80) = v9;
  v11 = v7;
  v12 = v8;
  v13 = v9;
  result = sub_24B79A608(inited);
  *a3 = result;
  return result;
}

id sub_24B79A9B8()
{
  return objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
}

uint64_t sub_24B79A9E4()
{
  return sub_24B7F34C0();
}

uint64_t sub_24B79AA10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC5BKDM16BioLog_logger;
  v4 = sub_24B7F34D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_24B79AA54()
{
  return sub_24B79AA7C(0x800000024B8018F0);
}

uint64_t sub_24B79AA68()
{
  return sub_24B79AA7C(0x800000024B801910);
}

uint64_t sub_24B79AA7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  _QWORD v9[2];

  v9[0] = a1;
  v1 = sub_24B7F36D0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_24B7F36C4();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v5);
  v7 = sub_24B7F34FC();
  MEMORY[0x24BDAC7A8](v7);
  sub_24B7B2930(0, &qword_2579B0330);
  sub_24B7F34F0();
  v9[1] = MEMORY[0x24BEE4AF8];
  sub_24B7B19A0(&qword_2579B0338, v6, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0340);
  sub_24B7B19E0(&qword_2579B0348, &qword_2579B0340);
  sub_24B7F376C();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE5750], v1);
  return sub_24B7F36E8();
}

uint64_t sub_24B79AC38()
{
  return 0;
}

double sub_24B79AC40@<D0>(_OWORD *a1@<X8>)
{
  __int128 v2;
  double result;
  _OWORD v4[2];
  _OWORD v5[2];

  sub_24B7B9D78((uint64_t)v4);
  v2 = v4[1];
  *a1 = v4[0];
  a1[1] = v2;
  a1[2] = v5[0];
  result = *(double *)((char *)v5 + 12);
  *(_OWORD *)((char *)a1 + 44) = *(_OWORD *)((char *)v5 + 12);
  return result;
}

uint64_t sub_24B79AC84()
{
  return MEMORY[0x24BEE4B00];
}

uint64_t (*sub_24B79AC90())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_24B79ACD8()
{
  return 0;
}

uint64_t sub_24B79ACE0@<X0>(uint64_t a1@<X8>)
{
  return sub_24B79ACF8((uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0], a1);
}

uint64_t sub_24B79ACEC@<X0>(uint64_t a1@<X8>)
{
  return sub_24B79ACF8(_s8SequenceVMa, a1);
}

uint64_t sub_24B79ACF8@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = a1(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 1, 1, v3);
}

uint64_t (*sub_24B79AD38())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_24B79AD7C(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _OWORD *v29;
  uint64_t v30;
  void (*v31)(unint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  void (*v37)(char *);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  id v45;
  __int128 v46;
  id v47;
  void *v48;
  unsigned int v49;
  uint64_t v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned __int8 *v61;
  char v62;
  uint64_t v63;
  unsigned __int8 *v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned __int8 *v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  unsigned __int8 *v74;
  unsigned int v75;
  uint64_t v76;
  unint64_t v77;
  char *v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  void (*v81)(unint64_t, uint64_t);
  void (*v82)(char *, uint64_t, uint64_t);
  uint64_t v83;
  objc_class *v84;
  id v85;
  void *v86;
  unsigned int v87;
  id v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(unint64_t, uint64_t, uint64_t);
  char *v94;
  void (*v95)(char *, uint64_t);
  void *v96;
  id v97;
  void *v98;
  void *v99;
  uint64_t (*v100)(uint64_t);
  uint64_t v101;
  unint64_t v102;
  char *v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  BOOL v108;
  id v109;
  id v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  unsigned int (*v114)(char *, uint64_t, uint64_t);
  uint64_t v115;
  unint64_t v116;
  char v117;
  char v118;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v120;
  char v121;
  uint64_t v122;
  _BOOL8 v123;
  uint64_t v124;
  char v125;
  unint64_t v126;
  char v127;
  uint64_t v128;
  BOOL v129;
  uint64_t v130;
  id v131;
  id v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  char *v143;
  void *v144;
  uint64_t v145;
  void *v146;
  uint64_t v147;
  uint64_t v148;
  void *v149;
  char *v150;
  uint64_t result;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  unint64_t v157;
  void (*v158)(unint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  void (*v164)(char *, uint64_t);
  unint64_t v165;
  char *v166;
  char *v167;
  char *v168;
  uint64_t v169;
  _QWORD *v170;
  uint64_t v171;
  void (*v172)(char *, uint64_t);
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  __int128 v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  unint64_t v180;
  _QWORD *v181;
  uint64_t v182;
  objc_super v183;
  __int128 aBlock;
  void (*v185)(uint64_t, void *, void *);
  void *v186;
  uint64_t (*v187)(uint64_t);
  uint64_t v188;
  _OWORD v189[2];
  _BYTE v190[28];
  uint64_t v191;

  v169 = a1;
  v191 = *MEMORY[0x24BDAC8D0];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  MEMORY[0x24BDAC7A8](v2);
  v153 = (char *)&v152 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = _s6SourceVMa(0);
  v177 = *(_QWORD *)(v175 - 8);
  MEMORY[0x24BDAC7A8](v175);
  v174 = (uint64_t)&v152 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0468);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v173 = (uint64_t)&v152 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v179 = (char *)&v152 - v8;
  v171 = sub_24B7F3328();
  v181 = *(_QWORD **)(v171 - 8);
  MEMORY[0x24BDAC7A8](v171);
  v168 = (char *)&v152 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0360);
  MEMORY[0x24BDAC7A8](v10);
  v166 = (char *)&v152 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = sub_24B7F33D0();
  v172 = *(void (**)(char *, uint64_t))(v178 - 8);
  v12 = MEMORY[0x24BDAC7A8](v178);
  v152 = (char *)&v152 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v156 = (char *)&v152 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v152 - v16;
  v155 = sub_24B7F3460();
  v154 = *(_QWORD *)(v155 - 8);
  MEMORY[0x24BDAC7A8](v155);
  v167 = (char *)&v152 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = (_QWORD *)sub_24B7F36D0();
  v19 = *(v170 - 1);
  MEMORY[0x24BDAC7A8](v170);
  v21 = (char *)&v152 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_24B7F36C4();
  MEMORY[0x24BDAC7A8](v22);
  v23 = sub_24B7F34FC();
  MEMORY[0x24BDAC7A8](v23);
  v24 = OBJC_IVAR____TtC5BKDM16BioLog_logDefaults;
  *(_QWORD *)&v176 = OBJC_IVAR____TtC5BKDM16BioLog_logDefaults;
  v163 = v1;
  v25 = v1;
  *(_QWORD *)&v1[v24] = sub_24B79A4F8((uint64_t)&unk_251CA0D38);
  v26 = OBJC_IVAR____TtC5BKDM16BioLog_defaults;
  v162 = (char *)OBJC_IVAR____TtC5BKDM16BioLog_defaults;
  *(_QWORD *)(v25 + v26) = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v180 = v25 + OBJC_IVAR____TtC5BKDM16BioLog_logger;
  sub_24B7F34C0();
  v165 = OBJC_IVAR____TtC5BKDM16BioLog_dispatchQueueLogging;
  v164 = (void (*)(char *, uint64_t))sub_24B7B2930(0, &qword_2579B0330);
  sub_24B7F34F0();
  *(_QWORD *)&v189[0] = MEMORY[0x24BEE4AF8];
  v160 = sub_24B7B19A0(&qword_2579B0338, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0340);
  v161 = sub_24B7B19E0(&qword_2579B0348, &qword_2579B0340);
  sub_24B7F376C();
  v27 = *MEMORY[0x24BEE5750];
  v158 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v19 + 104);
  v28 = v170;
  ((void (*)(char *, uint64_t, _QWORD *))v158)(v21, v27, v170);
  v157 = 0xD000000000000018;
  *(_QWORD *)(v25 + v165) = sub_24B7F36E8();
  v165 = OBJC_IVAR____TtC5BKDM16BioLog_dispatchQueueWriting;
  sub_24B7F34F0();
  *(_QWORD *)&v189[0] = MEMORY[0x24BEE4AF8];
  sub_24B7F376C();
  ((void (*)(char *, uint64_t, _QWORD *))v158)(v21, v27, v28);
  *(_QWORD *)(v25 + v165) = sub_24B7F36E8();
  *(_BYTE *)(v25 + OBJC_IVAR____TtC5BKDM16BioLog_dataLoggingEnabled) = 0;
  *(_BYTE *)(v25 + OBJC_IVAR____TtC5BKDM16BioLog_calibrationDataLoggingEnabled) = 0;
  *(_BYTE *)(v25 + OBJC_IVAR____TtC5BKDM16BioLog_templateLoggingEnabled) = 0;
  *(_BYTE *)(v25 + OBJC_IVAR____TtC5BKDM16BioLog_captureLoggingEnabled) = 0;
  *(_BYTE *)(v25 + OBJC_IVAR____TtC5BKDM16BioLog_imageLoggingEnabled) = 0;
  v29 = (_OWORD *)(v25 + OBJC_IVAR____TtC5BKDM16BioLog_logInfo);
  sub_24B7B9D78((uint64_t)v189);
  *v29 = v189[0];
  v29[1] = v189[1];
  v29[2] = *(_OWORD *)v190;
  *(_OWORD *)((char *)v29 + 44) = *(_OWORD *)&v190[12];
  v30 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v25 + OBJC_IVAR____TtC5BKDM16BioLog_sources) = MEMORY[0x24BEE4B00];
  sub_24B7BD66C(v25 + OBJC_IVAR____TtC5BKDM16BioLog_state);
  *(_QWORD *)(v25 + OBJC_IVAR____TtC5BKDM16BioLog_templateListNumber) = v30;
  *(_QWORD *)(v25 + OBJC_IVAR____TtC5BKDM16BioLog_sequenceNumber) = 0;
  v31 = (void (*)(unint64_t, uint64_t, uint64_t, uint64_t))*((_QWORD *)v172 + 7);
  v32 = v178;
  v31(v25 + OBJC_IVAR____TtC5BKDM16BioLog_sequenceURL, 1, 1, v178);
  v33 = v25 + OBJC_IVAR____TtC5BKDM16BioLog_sequence;
  v34 = _s8SequenceVMa(0);
  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v33, 1, 1, v34);
  *(_QWORD *)(v25 + OBJC_IVAR____TtC5BKDM16BioLog_acceptedImages) = v30;
  *(_QWORD *)(v25 + OBJC_IVAR____TtC5BKDM16BioLog_mgNotificationToken) = 0;
  v35 = (_QWORD *)(v25 + OBJC_IVAR____TtC5BKDM16BioLog_pgmImageComment);
  *v35 = 0;
  v35[1] = 0;
  v160 = swift_allocObject();
  *(_QWORD *)(v160 + 16) = 0;
  sub_24B7F3454();
  v158 = v31;
  v31((unint64_t)v166, 1, 1, v32);
  v36 = v181;
  v37 = (void (*)(char *))v181[13];
  v38 = v168;
  LODWORD(v157) = *MEMORY[0x24BDCD7A0];
  v39 = v171;
  v37(v168);
  swift_bridgeObjectRetain();
  sub_24B7F33AC();
  type metadata accessor for BioLogHelper();
  *(_QWORD *)&aBlock = sub_24B7B7CEC();
  *((_QWORD *)&aBlock + 1) = v40;
  v41 = *MEMORY[0x24BDCD790];
  v170 = v37;
  v37(v38);
  v165 = sub_24B7B22B8();
  sub_24B7F33A0();
  v164 = (void (*)(char *, uint64_t))v36[1];
  v164(v38, v39);
  swift_bridgeObjectRelease();
  v161 = v25;
  v42 = *(_QWORD *)&v163[v176];
  v43 = *(id *)&v162[v25];
  sub_24B79C964(v42);
  v44 = (void *)sub_24B7F3508();
  swift_bridgeObjectRelease();
  objc_msgSend(v43, sel_registerDefaults_, v44);

  v181 = (_QWORD *)objc_opt_self();
  swift_beginAccess();
  v45 = 0;
  v162 = (char *)&aBlock + 2;
  v163 = (char *)&aBlock + 3;
  *(_QWORD *)&v46 = 136315138;
  v176 = v46;
  while (1)
  {
    v47 = objc_msgSend(v181, sel_defaultManager);
    sub_24B7F3394();
    v48 = (void *)sub_24B7F3538();
    swift_bridgeObjectRelease();
    v49 = objc_msgSend(v47, sel_fileExistsAtPath_, v48);

    if (!v49)
      break;
    v50 = sub_24B7F34B4();
    v51 = sub_24B7F36AC();
    if (os_log_type_enabled((os_log_t)v50, v51))
    {
      v25 = swift_slowAlloc();
      v52 = swift_slowAlloc();
      *(_QWORD *)&aBlock = v52;
      *(_DWORD *)v25 = v176;
      sub_24B7B19A0(&qword_2579B0428, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v53 = sub_24B7F3988();
      *(_QWORD *)(v25 + 4) = sub_24B7AC4E4(v53, v54, (uint64_t *)&aBlock);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B74E000, (os_log_t)v50, v51, "Unexpected log exists at: %s", (uint8_t *)v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD27D9C](v52, -1, -1);
      MEMORY[0x24BD27D9C](v25, -1, -1);
    }

    v55 = sub_24B7F3334();
    v57 = v56;
    v58 = HIBYTE(v56) & 0xF;
    v59 = v55 & 0xFFFFFFFFFFFFLL;
    if ((v57 & 0x2000000000000000) != 0)
      v60 = v58;
    else
      v60 = v55 & 0xFFFFFFFFFFFFLL;
    if (!v60)
    {
      swift_bridgeObjectRelease();
      v68 = 1;
      goto LABEL_42;
    }
    if ((v57 & 0x1000000000000000) != 0)
    {
      v50 = (uint64_t)sub_24B7AD1B8(v55, v57, 10);
      v25 = v77;
    }
    else if ((v57 & 0x2000000000000000) != 0)
    {
      *(_QWORD *)&aBlock = v55;
      *((_QWORD *)&aBlock + 1) = v57 & 0xFFFFFFFFFFFFFFLL;
      if (v55 == 43)
      {
        if (!v58)
          goto LABEL_97;
        if (v58 == 1 || (BYTE1(v55) - 48) > 9u)
          goto LABEL_35;
        v50 = (BYTE1(v55) - 48);
        if (v58 != 2)
        {
          if ((BYTE2(v55) - 48) > 9u)
            goto LABEL_35;
          v50 = 10 * (BYTE1(v55) - 48) + (BYTE2(v55) - 48);
          v63 = v58 - 3;
          if (v63)
          {
            v64 = (unsigned __int8 *)v163;
            while (1)
            {
              v65 = *v64 - 48;
              if (v65 > 9)
                goto LABEL_35;
              v66 = 10 * v50;
              if ((unsigned __int128)(v50 * (__int128)10) >> 64 != (10 * v50) >> 63)
                goto LABEL_35;
              v50 = v66 + v65;
              if (__OFADD__(v66, v65))
                goto LABEL_35;
              v25 = 0;
              ++v64;
              if (!--v63)
                goto LABEL_38;
            }
          }
        }
      }
      else if (v55 == 45)
      {
        if (!v58)
          goto LABEL_96;
        if (v58 == 1 || (BYTE1(v55) - 48) > 9u)
          goto LABEL_35;
        if (v58 == 2)
        {
          v25 = 0;
          v50 = -(uint64_t)(BYTE1(v55) - 48);
          goto LABEL_38;
        }
        if ((BYTE2(v55) - 48) > 9u)
          goto LABEL_35;
        v50 = -10 * (BYTE1(v55) - 48) - (BYTE2(v55) - 48);
        v73 = v58 - 3;
        if (v73)
        {
          v74 = (unsigned __int8 *)v163;
          while (1)
          {
            v75 = *v74 - 48;
            if (v75 > 9)
              break;
            v76 = 10 * v50;
            if ((unsigned __int128)(v50 * (__int128)10) >> 64 != (10 * v50) >> 63)
              break;
            v50 = v76 - v75;
            if (__OFSUB__(v76, v75))
              break;
            v25 = 0;
            ++v74;
            if (!--v73)
              goto LABEL_38;
          }
LABEL_35:
          v50 = 0;
          v25 = 1;
          goto LABEL_38;
        }
      }
      else
      {
        if (!v58 || (v55 - 48) > 9u)
          goto LABEL_35;
        v50 = (v55 - 48);
        if (v58 != 1)
        {
          if ((BYTE1(v55) - 48) > 9u)
            goto LABEL_35;
          v50 = 10 * (v55 - 48) + (BYTE1(v55) - 48);
          v69 = v58 - 2;
          if (v69)
          {
            v70 = (unsigned __int8 *)v162;
            while (1)
            {
              v71 = *v70 - 48;
              if (v71 > 9)
                goto LABEL_35;
              v72 = 10 * v50;
              if ((unsigned __int128)(v50 * (__int128)10) >> 64 != (10 * v50) >> 63)
                goto LABEL_35;
              v50 = v72 + v71;
              if (__OFADD__(v72, v71))
                goto LABEL_35;
              v25 = 0;
              ++v70;
              if (!--v69)
                goto LABEL_38;
            }
          }
        }
      }
      v25 = 0;
    }
    else
    {
      if ((v55 & 0x1000000000000000) != 0)
        v61 = (unsigned __int8 *)((v57 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v61 = (unsigned __int8 *)sub_24B7F37D8();
      v50 = (uint64_t)sub_24B7AEA30(v61, v59, 10);
      v25 = v62 & 1;
    }
LABEL_38:
    swift_bridgeObjectRelease();
    if ((v25 & 1) != 0)
      v67 = 0;
    else
      v67 = v50;
    v68 = v67 + 1;
    if (__OFADD__(v67, 1))
    {
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
      goto LABEL_100;
    }
LABEL_42:
    swift_beginAccess();
    sub_24B7F337C();
    swift_endAccess();
    *(_QWORD *)&aBlock = v68;
    sub_24B7F3988();
    swift_beginAccess();
    sub_24B7F3370();
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  v78 = (char *)v161;
  v79 = v172;
  (*((void (**)(uint64_t, char *, uint64_t))v172 + 2))(v161 + OBJC_IVAR____TtC5BKDM16BioLog_logURL, v17, v178);
  *(_QWORD *)&aBlock = 0x74617262696C6143;
  *((_QWORD *)&aBlock + 1) = 0xEF617461446E6F69;
  v25 = (unint64_t)v168;
  LODWORD(v159) = v41;
  v80 = v171;
  ((void (*)(char *, uint64_t, uint64_t))v170)(v168, v41, v171);
  v50 = (uint64_t)v156;
  sub_24B7F33B8();
  v81 = (void (*)(unint64_t, uint64_t))v164;
  v164((char *)v25, v80);
  swift_bridgeObjectRelease();
  v82 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v79 + 4);
  v83 = v178;
  v82(&v78[OBJC_IVAR____TtC5BKDM16BioLog_calibrationDataStoreURL], v50, v178);
  strcpy((char *)&aBlock, "TemplateData");
  BYTE13(aBlock) = 0;
  HIWORD(aBlock) = -5120;
  ((void (*)(unint64_t, _QWORD, uint64_t))v170)(v25, v159, v80);
  sub_24B7F33B8();
  v81(v25, v80);
  swift_bridgeObjectRelease();
  v82(&v78[OBJC_IVAR____TtC5BKDM16BioLog_templateStoreURL], v50, v83);

  v84 = (objc_class *)type metadata accessor for BioLog();
  v183.receiver = v78;
  v183.super_class = v84;
  v85 = objc_msgSendSuper2(&v183, sel_init);
  v45 = objc_msgSend(v181, sel_defaultManager);
  *(_QWORD *)&v176 = v85;
  v57 = sub_24B7F3364();
  if (qword_2579B1688 == -1)
    goto LABEL_63;
LABEL_100:
  swift_once();
LABEL_63:
  type metadata accessor for FileAttributeKey(0);
  sub_24B7B19A0(&qword_2579B03F8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_24B7F8E20);
  v86 = (void *)sub_24B7F3508();
  *(_QWORD *)&aBlock = 0;
  v87 = objc_msgSend(v45, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v57, 1, v86, &aBlock);

  if (!v87)
  {
    v132 = (id)aBlock;
    swift_bridgeObjectRelease();
    v133 = (void *)sub_24B7F32E0();

    swift_willThrow();
    *(_QWORD *)&aBlock = 0;
    *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
    sub_24B7F37A8();
    swift_bridgeObjectRelease();
    *(_QWORD *)&aBlock = 0xD000000000000020;
    *((_QWORD *)&aBlock + 1) = 0x800000024B8020C0;
    sub_24B7B19A0(&qword_2579B0428, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    v134 = v178;
    sub_24B7F3988();
    sub_24B7F35BC();
    swift_bridgeObjectRelease();
    sub_24B7F35BC();
    v136 = *((_QWORD *)&aBlock + 1);
    v135 = aBlock;
    v137 = (void *)v176;
    v138 = v176 + OBJC_IVAR____TtC5BKDM16BioLog_logger;
    v139 = sub_24B7F34D8();
    v140 = *(_QWORD *)(v139 - 8);
    v141 = (uint64_t)v153;
    (*(void (**)(char *, uint64_t, uint64_t))(v140 + 16))(v153, v138, v139);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v140 + 56))(v141, 0, 1, v139);
    sub_24B7B47F4(v133, v135, v136, v141, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 121, (uint64_t)"init(rootPath:)", 15, 2u);
    swift_bridgeObjectRelease();

    sub_24B7B2F44(v141, &qword_2579B03C8);
    (*(void (**)(char *, uint64_t))(v154 + 8))(v167, v155);
    v142 = v137;
    (*((void (**)(char *, uint64_t))v172 + 1))(v17, v134);
    sub_24B79C6C0(v137, v160);
    swift_release();

    v143 = 0;
    goto LABEL_103;
  }
  v88 = (id)aBlock;
  v89 = objc_msgSend(v181, sel_defaultManager);
  v90 = v178;
  v158((unint64_t)v166, 1, 1, v178);
  v91 = v157;
  v92 = v171;
  v93 = (void (*)(unint64_t, uint64_t, uint64_t))v170;
  ((void (*)(unint64_t, _QWORD, uint64_t))v170)(v25, v157, v171);
  v94 = v152;
  sub_24B7F33AC();
  *(_QWORD *)&aBlock = 0x746E6572727543;
  *((_QWORD *)&aBlock + 1) = 0xE700000000000000;
  v93(v25, v91, v92);
  sub_24B7F33B8();
  v164((char *)v25, v92);
  swift_bridgeObjectRelease();
  v95 = (void (*)(char *, uint64_t))*((_QWORD *)v172 + 1);
  v95(v94, v90);
  v96 = (void *)sub_24B7F3364();
  v95((char *)v50, v90);
  *(_QWORD *)&aBlock = 0;
  LODWORD(v90) = objc_msgSend(v89, sel_removeItemAtURL_error_, v96, &aBlock);

  v97 = (id)aBlock;
  if (!(_DWORD)v90)
  {
    v98 = v97;
    v99 = (void *)sub_24B7F32E0();

    swift_willThrow();
  }
  sub_24B79D188();
  v100 = *(uint64_t (**)(uint64_t))(*(_QWORD *)*sub_24B7B571C() + 168);
  v101 = swift_retain();
  v102 = v100(v101);
  swift_release();
  v103 = v179;
  v172 = v95;
  if (!(v102 >> 62))
  {
    v50 = *(_QWORD *)((v102 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v50)
      goto LABEL_68;
LABEL_102:
    swift_bridgeObjectRelease();
    v142 = (void *)v176;
    sub_24B79D58C();
    v144 = (void *)sub_24B7F364C();
    v145 = swift_allocObject();
    *(_QWORD *)(v145 + 16) = v142;
    v187 = sub_24B7B31BC;
    v188 = v145;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v185 = sub_24B79CEE4;
    v186 = &block_descriptor_142;
    v146 = _Block_copy(&aBlock);
    v143 = v142;
    swift_release();
    v147 = MGRegisterForUpdates();
    _Block_release(v146);

    (*(void (**)(char *, uint64_t))(v154 + 8))(v167, v155);
    *(_QWORD *)&v143[OBJC_IVAR____TtC5BKDM16BioLog_mgNotificationToken] = v147;
    v148 = v160;
    v149 = *(void **)(v160 + 16);
    *(_QWORD *)(v160 + 16) = v143;
    v150 = v143;

    v172(v17, v178);
    sub_24B79C6C0(v150, v148);
    swift_release();
LABEL_103:

    return (uint64_t)v143;
  }
  swift_bridgeObjectRetain();
  v50 = sub_24B7F3844();
  swift_bridgeObjectRelease();
  if (!v50)
    goto LABEL_102;
LABEL_68:
  v104 = (uint64_t *)(v176 + OBJC_IVAR____TtC5BKDM16BioLog_sources);
  v181 = (_QWORD *)(v102 & 0xC000000000000001);
  v105 = 4;
  v180 = v102;
  while (2)
  {
    v57 = v105 - 4;
    if (v181)
    {
      v109 = (id)MEMORY[0x24BD27040](v105 - 4, v102);
      v45 = (id)(v105 - 3);
      if (__OFADD__(v57, 1))
        goto LABEL_95;
    }
    else
    {
      v109 = *(id *)(v102 + 8 * v105);
      v45 = (id)(v105 - 3);
      if (__OFADD__(v57, 1))
        goto LABEL_95;
    }
    v110 = (id)v50;
    v111 = v109;
    sub_24B7BA8D4(v111, v103);
    v112 = v177;
    v25 = *(_QWORD *)(v177 + 56);
    v113 = v175;
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v25)(v179, 0, 1, v175);
    swift_beginAccess();
    v114 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v112 + 48);
    v115 = (uint64_t)v179;
    if (v114(v179, 1, v113) == 1)
    {
      sub_24B7B2F44(v115, &qword_2579B0468);
      swift_bridgeObjectRetain();
      v116 = sub_24B7ACC80((uint64_t)v111);
      v118 = v117;
      swift_bridgeObjectRelease();
      if ((v118 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v120 = *v104;
        v182 = *v104;
        *v104 = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_24B7AE450();
          v120 = v182;
        }

        v107 = v173;
        sub_24B7B2F80(*(_QWORD *)(v120 + 56) + *(_QWORD *)(v177 + 72) * v116, v173, _s6SourceVMa);
        sub_24B7ADBC0(v116, v120);
        *v104 = v120;
        swift_bridgeObjectRelease();
        v106 = 0;
      }
      else
      {
        v106 = 1;
        v107 = v173;
      }
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v25)(v107, v106, 1, v175);

      sub_24B7B2F44(v107, &qword_2579B0468);
LABEL_71:
      v103 = v179;
      swift_endAccess();

      ++v105;
      v50 = (uint64_t)v110;
      v108 = v45 == v110;
      v102 = v180;
      if (v108)
        goto LABEL_102;
      continue;
    }
    break;
  }
  sub_24B7B2F80(v115, v174, _s6SourceVMa);
  v50 = swift_isUniquelyReferenced_nonNull_native();
  v182 = *v104;
  v57 = v182;
  *v104 = 0x8000000000000000;
  v25 = sub_24B7ACC80((uint64_t)v111);
  v122 = *(_QWORD *)(v57 + 16);
  v123 = (v121 & 1) == 0;
  v124 = v122 + v123;
  if (__OFADD__(v122, v123))
    goto LABEL_98;
  v125 = v121;
  if (*(_QWORD *)(v57 + 24) >= v124)
  {
    if ((v50 & 1) == 0)
    {
      v57 = (uint64_t)&v182;
      sub_24B7AE450();
    }
    goto LABEL_88;
  }
  sub_24B7AD29C(v124, v50);
  v57 = v182;
  v126 = sub_24B7ACC80((uint64_t)v111);
  if ((v125 & 1) == (v127 & 1))
  {
    v25 = v126;
LABEL_88:
    v50 = v182;
    if ((v125 & 1) != 0)
    {
      sub_24B7B3350(v174, *(_QWORD *)(v182 + 56) + *(_QWORD *)(v177 + 72) * v25);
    }
    else
    {
      *(_QWORD *)(v182 + 8 * (v25 >> 6) + 64) |= 1 << v25;
      *(_QWORD *)(*(_QWORD *)(v50 + 48) + 8 * v25) = v111;
      sub_24B7B2F80(v174, *(_QWORD *)(v50 + 56) + *(_QWORD *)(v177 + 72) * v25, _s6SourceVMa);
      v128 = *(_QWORD *)(v50 + 16);
      v129 = __OFADD__(v128, 1);
      v130 = v128 + 1;
      if (v129)
        goto LABEL_99;
      *(_QWORD *)(v50 + 16) = v130;
      v131 = v111;
    }
    *v104 = v50;

    swift_bridgeObjectRelease();
    goto LABEL_71;
  }
  sub_24B7B2930(0, &qword_2579B0470);
  result = sub_24B7F39A0();
  __break(1u);
  return result;
}

uint64_t sub_24B79C6B4()
{
  return 0;
}

void sub_24B79C6C0(void *a1, uint64_t a2)
{
  id v4;
  os_log_type_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  NSObject *oslog;
  uint64_t v14[2];

  v14[1] = *MEMORY[0x24BDAC8D0];
  swift_retain_n();
  v4 = a1;
  oslog = sub_24B7F34B4();
  v5 = sub_24B7F36B8();
  if (os_log_type_enabled(oslog, v5))
  {
    v6 = swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v14[0] = v8;
    *(_DWORD *)v6 = 138412546;
    swift_beginAccess();
    v9 = *(void **)(a2 + 16);
    if (v9)
      v10 = v9;
    sub_24B7F3724();
    *v7 = v9;
    swift_release_n();
    *(_WORD *)(v6 + 12) = 2080;
    v11 = sub_24B7F3394();
    sub_24B7AC4E4(v11, v12, v14);
    sub_24B7F3724();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24B74E000, oslog, v5, "BioLog.init() -> %@ > %s", (uint8_t *)v6, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04C8);
    swift_arrayDestroy();
    MEMORY[0x24BD27D9C](v7, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24BD27D9C](v8, -1, -1);
    MEMORY[0x24BD27D9C](v6, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_24B79C964(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _OWORD v35[2];
  _OWORD v36[3];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04D0);
    v2 = sub_24B7F3868();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v27 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v26 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v26)
        goto LABEL_37;
      v14 = *(_QWORD *)(v27 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v26)
          goto LABEL_37;
        v14 = *(_QWORD *)(v27 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v26)
            goto LABEL_37;
          v14 = *(_QWORD *)(v27 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v18 = v17[1];
    *(_QWORD *)&v36[0] = *v17;
    *((_QWORD *)&v36[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    swift_dynamicCast();
    v32 = v28;
    v33 = v29;
    v34 = v30;
    sub_24B7B24C0(&v31, v35);
    v28 = v32;
    v29 = v33;
    v30 = v34;
    sub_24B7B24C0(v35, v36);
    sub_24B7B24C0(v36, &v32);
    result = sub_24B7F3784();
    v19 = -1 << *(_BYTE *)(v2 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v6 + 8 * v21);
      }
      while (v25 == -1);
      v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(_QWORD *)(v10 + 32) = v30;
    result = (uint64_t)sub_24B7B24C0(&v32, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_24B7B263C();
    return v2;
  }
  v14 = *(_QWORD *)(v27 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_24B79CD0C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0360);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_24B7F33D0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_24B7B2F44(a1, &qword_2579B0360);
    v13 = sub_24B7ACCE4(a2);
    if ((v14 & 1) != 0)
    {
      v15 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v17 = *v3;
      v22 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_24B7AE810();
        v17 = v22;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v8, *(_QWORD *)(v17 + 56) + *(_QWORD *)(v10 + 72) * v15, v9);
      sub_24B7ADF30(v15, v17);
      *v3 = v17;
      swift_bridgeObjectRelease();
      v18 = 0;
    }
    else
    {
      v18 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v18, 1, v9);
    return sub_24B7B2F44((uint64_t)v8, &qword_2579B0360);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    v19 = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v3;
    *v3 = 0x8000000000000000;
    sub_24B7AE214((uint64_t)v12, a2, v19);
    *v3 = v22;
    return swift_bridgeObjectRelease();
  }
}

void sub_24B79CEE4(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

id sub_24B79CF58()
{
  void *v0;
  objc_super v2;

  MGCancelNotifications();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BioLog();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24B79D188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t);
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  unsigned int v22;
  id v23;
  id v25;
  void *v26;
  int64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_24B7F3328();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_24B7F33D0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v32 - v13;
  v33 = v0;
  sub_24B7F3388();
  v34 = 0x746E6572727543;
  v35 = 0xE700000000000000;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BDCD7A0], v4);
  sub_24B7B22B8();
  sub_24B7F33B8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v12, v8);
  sub_24B7F3394();
  v15(v14, v8);
  v16 = (void *)objc_opt_self();
  v17 = objc_msgSend(v16, sel_defaultManager);
  v18 = (void *)sub_24B7F3538();
  LOBYTE(v12) = objc_msgSend(v17, sel_fileExistsAtPath_, v18);

  if ((v12 & 1) != 0)
    return swift_bridgeObjectRelease();
  v19 = objc_msgSend(v16, sel_defaultManager);
  v20 = (void *)sub_24B7F3538();
  sub_24B7F3358();
  v21 = (void *)sub_24B7F3538();
  swift_bridgeObjectRelease();
  v34 = 0;
  v22 = objc_msgSend(v19, sel_createSymbolicLinkAtPath_withDestinationPath_error_, v20, v21, &v34);

  if (v22)
  {
    v23 = (id)v34;
    return swift_bridgeObjectRelease();
  }
  v25 = (id)v34;
  v26 = (void *)sub_24B7F32E0();

  swift_willThrow();
  v34 = 0;
  v35 = 0xE000000000000000;
  sub_24B7F37A8();
  swift_bridgeObjectRelease();
  v34 = 0xD000000000000027;
  v35 = 0x800000024B801DC0;
  sub_24B7F35BC();
  swift_bridgeObjectRelease();
  sub_24B7F35BC();
  v27 = v34;
  v28 = v35;
  v29 = v33 + OBJC_IVAR____TtC5BKDM16BioLog_logger;
  v30 = sub_24B7F34D8();
  v31 = *(_QWORD *)(v30 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v3, v29, v30);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v3, 0, 1, v30);
  sub_24B7B47F4(v26, v27, v28, (uint64_t)v3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 160, (uint64_t)"ensureLogSymlink()", 18, 2u);
  swift_bridgeObjectRelease();

  return sub_24B7B2F44((uint64_t)v3, &qword_2579B03C8);
}

void sub_24B79D58C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  void *v12;
  char **v13;
  unsigned __int8 v14;
  uint64_t v15;
  void *v16;
  unsigned int v17;
  char *v18;
  char v19;
  void *v20;
  id v21;
  void *v22;
  unsigned __int8 v23;
  void *v24;
  unsigned int v25;
  char *v26;
  char v27;
  unsigned int v28;
  id v29;
  char *v30;
  void *v31;
  unsigned __int8 v32;
  uint64_t v33;
  NSObject *v34;
  void *v35;
  unsigned int v36;
  id v37;
  uint64_t *v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  id v42;
  void *v43;
  void *v44;
  unsigned int v45;
  id v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  char **v55;
  unsigned __int8 v56;
  uint64_t v57;
  void *v58;
  unsigned __int8 v59;
  uint64_t v60;
  os_log_type_t v61;
  uint64_t v62;
  int v63;
  uint64_t *v64;
  int v65;
  int v66;
  uint64_t *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v78;
  uint64_t v79;
  void *v80;
  id v81;
  int isUniquelyReferenced_nonNull_native;
  id v83;
  char v84;
  Class isa;
  _BOOL8 v86;
  uint64_t v87;
  char v88;
  Class v89;
  unint64_t v90;
  char v91;
  uint64_t *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t (*v100)(uint64_t);
  uint64_t v101;
  uint64_t (*v102)(uint64_t);
  uint64_t v103;
  uint64_t v104;
  id v105;
  unint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int64_t v116;
  uint64_t v117;
  NSObject *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  char *v122;
  char *v123;
  void *v124;
  uint64_t v125;
  NSObject *v126;
  id v127;
  unint64_t v128;
  uint64_t v129;

  v1 = v0;
  v113 = 0;
  v129 = *MEMORY[0x24BDAC8D0];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v112 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = _s6SourceVMa(0);
  v119 = *(_QWORD *)(v5 - 8);
  v120 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v114 = (uint64_t)&v112 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0468);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v118 = ((char *)&v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v125 = (uint64_t)&v112 - v10;
  v11 = *(uint64_t (**)(uint64_t))((char *)v0 + OBJC_IVAR____TtC5BKDM16BioLog_defaults);
  v12 = (void *)sub_24B7F3538();
  v13 = &selRef_attachmentsFromCurrentLog;
  v14 = objc_msgSend(v11, sel_BOOLForKey_, v12);

  v15 = OBJC_IVAR____TtC5BKDM16BioLog_dataLoggingEnabled;
  *((_BYTE *)v1 + OBJC_IVAR____TtC5BKDM16BioLog_dataLoggingEnabled) = v14;
  if ((v14 & 1) != 0)
  {
    v16 = (void *)sub_24B7F3538();
    v17 = objc_msgSend(v11, sel_BOOLForKey_, v16);

    LODWORD(v124) = 0;
    v18 = (char *)v1 + OBJC_IVAR____TtC5BKDM16BioLog_calibrationDataLoggingEnabled;
    v19 = *((_BYTE *)v1 + OBJC_IVAR____TtC5BKDM16BioLog_calibrationDataLoggingEnabled) & v17;
    if ((*((_BYTE *)v1 + OBJC_IVAR____TtC5BKDM16BioLog_calibrationDataLoggingEnabled) & 1) == 0 && v17)
    {
      v122 = (char *)v1 + OBJC_IVAR____TtC5BKDM16BioLog_calibrationDataLoggingEnabled;
      v123 = v4;
      v20 = (void *)objc_opt_self();
      v21 = objc_msgSend(v20, sel_defaultManager);
      v19 = 1;
      sub_24B7F3394();
      v22 = (void *)sub_24B7F3538();
      swift_bridgeObjectRelease();
      v23 = objc_msgSend(v21, sel_fileExistsAtPath_, v22);

      if ((v23 & 1) != 0)
      {
        LODWORD(v124) = 1;
        v13 = &selRef_attachmentsFromCurrentLog;
        v18 = v122;
        v4 = v123;
      }
      else
      {
        v33 = (uint64_t)objc_msgSend(v20, sel_defaultManager);
        v34 = sub_24B7F3364();
        if (qword_2579B1698 != -1)
LABEL_83:
          swift_once();
        type metadata accessor for FileAttributeKey(0);
        sub_24B7B19A0(&qword_2579B03F8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_24B7F8E20);
        v35 = (void *)sub_24B7F3508();
        v127 = 0;
        v36 = objc_msgSend((id)v33, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v34, 1, v35, &v127);

        v18 = v122;
        if (v36)
        {
          v37 = v127;
          v19 = 1;
          LODWORD(v124) = 1;
          v13 = &selRef_attachmentsFromCurrentLog;
          v4 = v123;
        }
        else
        {
          v47 = v127;
          v124 = (void *)sub_24B7F32E0();

          swift_willThrow();
          v127 = 0;
          v128 = 0xE000000000000000;
          sub_24B7F37A8();
          swift_bridgeObjectRelease();
          v127 = (id)0xD000000000000020;
          v128 = 0x800000024B8020C0;
          sub_24B7F33D0();
          sub_24B7B19A0(&qword_2579B0428, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
          sub_24B7F3988();
          sub_24B7F35BC();
          swift_bridgeObjectRelease();
          sub_24B7F35BC();
          v48 = (uint64_t)v127;
          v49 = v128;
          v50 = (char *)v1 + OBJC_IVAR____TtC5BKDM16BioLog_logger;
          v51 = sub_24B7F34D8();
          v52 = *(_QWORD *)(v51 - 8);
          v4 = v123;
          (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v123, v50, v51);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v4, 0, 1, v51);
          v53 = v124;
          sub_24B7B47F4(v124, v48, v49, (uint64_t)v4, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 176, (uint64_t)"updateLoggingState()", 20, 2u);
          swift_bridgeObjectRelease();

          sub_24B7B2F44((uint64_t)v4, &qword_2579B03C8);
          v19 = 0;
          LODWORD(v124) = 0;
          v113 = 0;
          v13 = &selRef_attachmentsFromCurrentLog;
        }
      }
    }
  }
  else
  {
    v19 = 0;
    LODWORD(v124) = 0;
    v18 = (char *)v1 + OBJC_IVAR____TtC5BKDM16BioLog_calibrationDataLoggingEnabled;
  }
  *v18 = v19;
  if ((*((_BYTE *)v1 + v15) & 1) != 0)
  {
    v123 = v4;
    v24 = (void *)sub_24B7F3538();
    v25 = objc_msgSend(v11, v13[11], v24);

    v26 = (char *)v1 + OBJC_IVAR____TtC5BKDM16BioLog_templateLoggingEnabled;
    v27 = *((_BYTE *)v1 + OBJC_IVAR____TtC5BKDM16BioLog_templateLoggingEnabled) & v25;
    if ((*((_BYTE *)v1 + OBJC_IVAR____TtC5BKDM16BioLog_templateLoggingEnabled) & 1) == 0 && v25)
    {
      v28 = *(_DWORD *)((char *)v1 + OBJC_IVAR____TtC5BKDM16BioLog_logInfo + 52);
      if (v28 < 2)
      {
        v38 = v1;
        v39 = sub_24B7F34B4();
        v40 = sub_24B7F36AC();
        if (os_log_type_enabled(v39, v40))
        {
          v41 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v41 = 67109120;
          LODWORD(v127) = v28;
          sub_24B7F3724();

          _os_log_impl(&dword_24B74E000, v39, v40, "WARNING: templateLogging disabled! Unsupported loggingType: %u", v41, 8u);
          MEMORY[0x24BD27D9C](v41, -1, -1);
        }
        else
        {

        }
        v27 = 0;
      }
      else
      {
        v122 = (char *)objc_opt_self();
        v29 = objc_msgSend(v122, sel_defaultManager);
        v30 = (char *)v1 + OBJC_IVAR____TtC5BKDM16BioLog_templateStoreURL;
        v27 = 1;
        sub_24B7F3394();
        v31 = (void *)sub_24B7F3538();
        swift_bridgeObjectRelease();
        v32 = objc_msgSend(v29, sel_fileExistsAtPath_, v31);

        if ((v32 & 1) != 0)
        {
          LODWORD(v124) = 1;
        }
        else
        {
          v42 = objc_msgSend(v122, sel_defaultManager);
          v43 = (void *)sub_24B7F3364();
          v122 = v30;
          if (qword_2579B1698 != -1)
            swift_once();
          type metadata accessor for FileAttributeKey(0);
          sub_24B7B19A0(&qword_2579B03F8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_24B7F8E20);
          v44 = (void *)sub_24B7F3508();
          v127 = 0;
          v45 = objc_msgSend(v42, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v43, 1, v44, &v127);

          if (v45)
          {
            v46 = v127;
            LODWORD(v124) = 1;
            v27 = 1;
          }
          else
          {
            v105 = v127;
            v121 = (uint64_t *)sub_24B7F32E0();

            swift_willThrow();
            v127 = 0;
            v128 = 0xE000000000000000;
            sub_24B7F37A8();
            swift_bridgeObjectRelease();
            v127 = (id)0xD000000000000020;
            v128 = 0x800000024B8020C0;
            sub_24B7F33D0();
            sub_24B7B19A0(&qword_2579B0428, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
            sub_24B7F3988();
            sub_24B7F35BC();
            swift_bridgeObjectRelease();
            sub_24B7F35BC();
            v106 = v128;
            v122 = (char *)v127;
            v107 = (char *)v1 + OBJC_IVAR____TtC5BKDM16BioLog_logger;
            v108 = sub_24B7F34D8();
            v109 = *(_QWORD *)(v108 - 8);
            v110 = (uint64_t)v123;
            (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v123, v107, v108);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v109 + 56))(v110, 0, 1, v108);
            v111 = v121;
            sub_24B7B47F4(v121, (uint64_t)v122, v106, v110, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 191, (uint64_t)"updateLoggingState()", 20, 2u);
            swift_bridgeObjectRelease();

            sub_24B7B2F44(v110, &qword_2579B03C8);
            v27 = 0;
            v113 = 0;
          }
        }
      }
      v13 = &selRef_attachmentsFromCurrentLog;
    }
  }
  else
  {
    v27 = 0;
    v26 = (char *)v1 + OBJC_IVAR____TtC5BKDM16BioLog_templateLoggingEnabled;
  }
  *v26 = v27;
  if (*((_BYTE *)v1 + v15) == 1)
  {
    v54 = (void *)sub_24B7F3538();
    v55 = v13;
    v56 = objc_msgSend(v11, v13[11], v54);

  }
  else
  {
    v55 = v13;
    v56 = 0;
  }
  v57 = OBJC_IVAR____TtC5BKDM16BioLog_captureLoggingEnabled;
  *((_BYTE *)v1 + OBJC_IVAR____TtC5BKDM16BioLog_captureLoggingEnabled) = v56;
  if (*((_BYTE *)v1 + v15) == 1)
  {
    v58 = (void *)sub_24B7F3538();
    v59 = objc_msgSend(v11, (SEL)v55 + 1864, v58);

  }
  else
  {
    v59 = 0;
  }
  v60 = OBJC_IVAR____TtC5BKDM16BioLog_imageLoggingEnabled;
  *((_BYTE *)v1 + OBJC_IVAR____TtC5BKDM16BioLog_imageLoggingEnabled) = v59;
  v121 = v1;
  v34 = sub_24B7F34B4();
  v61 = sub_24B7F36B8();
  if (os_log_type_enabled(v34, v61))
  {
    v62 = swift_slowAlloc();
    v63 = *((unsigned __int8 *)v1 + v15);
    *(_DWORD *)v62 = 67110144;
    LODWORD(v127) = v63;
    sub_24B7F3724();
    *(_WORD *)(v62 + 8) = 1024;
    LODWORD(v127) = *v18;
    sub_24B7F3724();
    *(_WORD *)(v62 + 14) = 1024;
    LODWORD(v127) = *v26;
    sub_24B7F3724();
    v64 = v121;

    *(_WORD *)(v62 + 20) = 1024;
    v65 = *((unsigned __int8 *)v1 + v57);

    LODWORD(v127) = v65;
    sub_24B7F3724();

    *(_WORD *)(v62 + 26) = 1024;
    v66 = *((unsigned __int8 *)v1 + v60);

    LODWORD(v127) = v66;
    sub_24B7F3724();

    _os_log_impl(&dword_24B74E000, v34, v61, "updateLoggingState:\ndataLoggingEnabled: %{BOOL}d\n.calibrationDataLoggingEnabled: %{BOOL}d\n.templateLoggingEnabled: %{BOOL}d\n.captureLoggingEnabled: %{BOOL}d\n.imageLoggingEnabled: %{BOOL}d", (uint8_t *)v62, 0x20u);
    MEMORY[0x24BD27D9C](v62, -1, -1);
  }
  else
  {
    v67 = v121;

  }
  v33 = v124;

  if ((_DWORD)v33)
  {
    if (*v18 == 1)
    {
      v68 = (char *)v121 + OBJC_IVAR____TtC5BKDM16BioLog_sources;
      swift_beginAccess();
      v69 = *(_QWORD *)v68;
      v70 = *(_QWORD *)(*(_QWORD *)v68 + 64);
      v115 = *(_QWORD *)v68 + 64;
      v71 = 1 << *(_BYTE *)(v69 + 32);
      v72 = -1;
      if (v71 < 64)
        v72 = ~(-1 << v71);
      v73 = v72 & v70;
      v116 = (unint64_t)(v71 + 63) >> 6;
      v117 = v69;
      swift_bridgeObjectRetain();
      v15 = 0;
      v11 = _s6SourceVMa;
      v1 = &qword_2579B0468;
      while (1)
      {
        if (v73)
        {
          v74 = __clz(__rbit64(v73));
          v75 = (v73 - 1) & v73;
          v76 = v74 | (v15 << 6);
        }
        else
        {
          if (__OFADD__(v15++, 1))
            goto LABEL_81;
          if (v15 >= v116)
            goto LABEL_75;
          v78 = *(_QWORD *)(v115 + 8 * v15);
          if (!v78)
          {
            v79 = v15 + 1;
            if (v15 + 1 >= v116)
              goto LABEL_75;
            v78 = *(_QWORD *)(v115 + 8 * v79);
            if (!v78)
            {
              v79 = v15 + 2;
              if (v15 + 2 >= v116)
                goto LABEL_75;
              v78 = *(_QWORD *)(v115 + 8 * v79);
              if (!v78)
              {
                v79 = v15 + 3;
                if (v15 + 3 >= v116)
                  goto LABEL_75;
                v78 = *(_QWORD *)(v115 + 8 * v79);
                if (!v78)
                {
                  v79 = v15 + 4;
                  if (v15 + 4 >= v116)
                    goto LABEL_75;
                  v78 = *(_QWORD *)(v115 + 8 * v79);
                  if (!v78)
                  {
                    v79 = v15 + 5;
                    if (v15 + 5 >= v116)
                      goto LABEL_75;
                    v78 = *(_QWORD *)(v115 + 8 * v79);
                    if (!v78)
                    {
                      while (1)
                      {
                        v15 = v79 + 1;
                        if (__OFADD__(v79, 1))
                          break;
                        if (v15 >= v116)
                          goto LABEL_75;
                        v78 = *(_QWORD *)(v115 + 8 * v15);
                        ++v79;
                        if (v78)
                          goto LABEL_59;
                      }
LABEL_82:
                      __break(1u);
                      goto LABEL_83;
                    }
                  }
                }
              }
            }
            v15 = v79;
          }
LABEL_59:
          v75 = (v78 - 1) & v78;
          v76 = __clz(__rbit64(v78)) + (v15 << 6);
        }
        v80 = *(void **)(*(_QWORD *)(v117 + 48) + 8 * v76);
        swift_beginAccess();
        v81 = v80;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v126 = *(NSObject **)v68;
        v34 = v126;
        *(_QWORD *)v68 = 0x8000000000000000;
        v83 = v81;
        v33 = sub_24B7ACC80((uint64_t)v83);
        isa = v34[2].isa;
        v86 = (v84 & 1) == 0;
        v87 = (uint64_t)isa + v86;
        if (__OFADD__(isa, v86))
        {
          __break(1u);
LABEL_81:
          __break(1u);
          goto LABEL_82;
        }
        v88 = v84;
        v89 = v34[3].isa;
        v124 = (void *)v15;
        if ((uint64_t)v89 >= v87)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v123 = (char *)v75;
            if ((v84 & 1) == 0)
              goto LABEL_74;
          }
          else
          {
            sub_24B7AE450();
            v123 = (char *)v75;
            if ((v88 & 1) == 0)
            {
LABEL_74:
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v119 + 56))(v125, 1, 1, v120);
              __break(1u);
LABEL_75:
              swift_release();
              break;
            }
          }
        }
        else
        {
          sub_24B7AD29C(v87, isUniquelyReferenced_nonNull_native);
          v90 = sub_24B7ACC80((uint64_t)v83);
          if ((v88 & 1) != (v91 & 1))
          {
            sub_24B7B2930(0, &qword_2579B0470);
            sub_24B7F39A0();
            __break(1u);
            return;
          }
          v33 = v90;
          v123 = (char *)v75;
          if ((v88 & 1) == 0)
            goto LABEL_74;
        }
        v92 = v1;
        v93 = v68;
        v122 = (char *)v126;
        v94 = v119;
        v95 = *(_QWORD *)(v119 + 72) * v33;
        v96 = v125;
        sub_24B7B2F80((uint64_t)v126[7].isa + v95, v125, _s6SourceVMa);
        v97 = v120;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v94 + 56))(v96, 0, 1, v120);
        sub_24B79E8F4(v83, v96);
        v98 = v96;
        v34 = v118;
        v1 = v92;
        sub_24B7B2F00(v98, (uint64_t)v118, v92);
        if ((*(unsigned int (**)(NSObject *, uint64_t, uint64_t))(v94 + 48))(v34, 1, v97) == 1)
        {
          sub_24B7B2F44((uint64_t)v34, v92);
          v34 = v126;
          sub_24B7B2930(0, &qword_2579B0470);
          swift_arrayDestroy();
          sub_24B7ADBC0(v33, (uint64_t)v34);
        }
        else
        {
          v33 = v114;
          sub_24B7B2F80((uint64_t)v34, v114, _s6SourceVMa);
          sub_24B7B2F80(v33, *((_QWORD *)v122 + 7) + v95, _s6SourceVMa);
        }
        v68 = v93;
        v73 = (unint64_t)v123;
        sub_24B7B2F44(v125, v92);

        *(_QWORD *)v93 = v126;
        swift_endAccess();

        v15 = (uint64_t)v124;
      }
    }
    v99 = sub_24B7B571C();
    v100 = *(uint64_t (**)(uint64_t))(*(_QWORD *)*v99 + 192);
    v101 = swift_retain();
    LOBYTE(v100) = v100(v101);
    swift_release();
    if ((v100 & 1) != 0)
    {
      v102 = *(uint64_t (**)(uint64_t))(*(_QWORD *)*v99 + 200);
      v103 = swift_retain();
      v104 = v102(v103);
      swift_release();
      (*(void (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v121) + 0x290))(v104);
      swift_bridgeObjectRelease();
    }
  }
}

void (*sub_24B79E5BC(_QWORD *a1, void *a2))(_QWORD *a1)
{
  _QWORD *v4;

  v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[4] = a2;
  v4[5] = sub_24B7AF168(v4, a2);
  return sub_24B79E614;
}

void sub_24B79E614(_QWORD *a1)
{
  void *v1;
  void *v2;

  v1 = (void *)*a1;
  v2 = *(void **)(*a1 + 32);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);

  free(v1);
}

id sub_24B79E648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v6 = (void *)sub_24B7F3538();
  v7 = (void *)sub_24B7F3400();
  if (qword_2579B1698 != -1)
    swift_once();
  type metadata accessor for FileAttributeKey(0);
  sub_24B7B19A0(&qword_2579B03F8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_24B7F8E20);
  v8 = (void *)sub_24B7F3508();
  v9 = objc_msgSend(v5, sel_createFileAtPath_contents_attributes_, v6, v7, v8);

  MEMORY[0x24BDAC7A8](v10);
  LOBYTE(v18) = (_BYTE)v9;
  v19 = 0;
  v20 = 0xE000000000000000;
  sub_24B7F37A8();
  swift_bridgeObjectRelease();
  v19 = 0xD00000000000001FLL;
  v20 = 0x800000024B802290;
  sub_24B7F35BC();
  sub_24B7F35BC();
  v11 = v19;
  v12 = v20;
  v13 = v1 + OBJC_IVAR____TtC5BKDM16BioLog_logger;
  v14 = sub_24B7F34D8();
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v4, v13, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v4, 0, 1, v14);
  sub_24B7B4BE0((uint64_t (*)(uint64_t))sub_24B7B2928, (uint64_t)&v17, v11, v12, (uint64_t)v4, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 230, (uint64_t)"createFile(path:contents:)", 26, 2u);
  swift_bridgeObjectRelease();
  sub_24B7B2F44((uint64_t)v4, &qword_2579B03C8);
  return v9;
}

uint64_t sub_24B79E8F4(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  id v28;
  void *v29;
  unsigned int v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t (*v35)(void *);
  void *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  unint64_t v59;
  void *v60;
  uint64_t *v61;
  void *v62;
  char *v63;
  id v64;
  char *v65;
  char *v66;
  uint64_t v67;
  _QWORD v68[4];
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  _QWORD *v82;
  _QWORD *v83;
  char *v84;
  uint64_t v85;
  uint64_t aBlock;
  unint64_t v87;
  uint64_t (*v88)(uint64_t);
  void *v89;
  uint64_t (*v90)();
  uint64_t v91;

  v81 = a1;
  v4 = sub_24B7F34E4();
  v79 = *(_QWORD *)(v4 - 8);
  v80 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v78 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_24B7F34FC();
  v76 = *(_QWORD *)(v6 - 8);
  v77 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_24B7F3328();
  v82 = *(_QWORD **)(v12 - 8);
  v83 = (_QWORD *)v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_24B7F33D0();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  v18 = MEMORY[0x24BDAC7A8](v15);
  MEMORY[0x24BDAC7A8](v18);
  v84 = (char *)&v69 - v19;
  result = sub_24B7BAAA0(*(_DWORD *)&v2[OBJC_IVAR____TtC5BKDM16BioLog_logInfo + 52]);
  if ((result & 1) != 0)
  {
    v73 = v11;
    v70 = v17;
    v71 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    v72 = v8;
    v74 = v16;
    v75 = v15;
    type metadata accessor for BioLogHelper();
    v21 = sub_24B7B7F84();
    v23 = v22;
    v24 = v2;
    aBlock = v21;
    v87 = v22;
    v26 = (uint64_t)v82;
    v25 = v83;
    ((void (*)(char *, _QWORD, _QWORD *))v82[13])(v14, *MEMORY[0x24BDCD7A0], v83);
    sub_24B7B22B8();
    v27 = v84;
    sub_24B7F33B8();
    (*(void (**)(char *, _QWORD *))(v26 + 8))(v14, v25);
    v28 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    sub_24B7F3394();
    v29 = (void *)sub_24B7F3538();
    swift_bridgeObjectRelease();
    v30 = objc_msgSend(v28, sel_fileExistsAtPath_, v29);

    if (!v30)
    {
      v69 = v21;
      v35 = *(uint64_t (**)(void *))(*(_QWORD *)*sub_24B7B571C() + 176);
      swift_retain();
      v36 = v81;
      v37 = v35(v81);
      v39 = v38;
      v40 = swift_release();
      v83 = &v69;
      MEMORY[0x24BDAC7A8](v40);
      v82 = v68;
      v68[2] = v37;
      v68[3] = v39;
      aBlock = 0;
      v87 = 0xE000000000000000;
      sub_24B7F37A8();
      swift_bridgeObjectRelease();
      aBlock = 0xD00000000000001BLL;
      v87 = 0x800000024B802240;
      v41 = objc_msgSend(v36, sel_description);
      sub_24B7F355C();

      sub_24B7F35BC();
      swift_bridgeObjectRelease();
      sub_24B7F35BC();
      v42 = aBlock;
      v43 = v87;
      v44 = &v24[OBJC_IVAR____TtC5BKDM16BioLog_logger];
      v45 = sub_24B7F34D8();
      v46 = *(_QWORD *)(v45 - 8);
      v47 = (uint64_t)v73;
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v73, v44, v45);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v47, 0, 1, v45);
      LOBYTE(v42) = sub_24B7B52EC((void (*)(uint64_t *__return_ptr, uint64_t))sub_24B7B2800, (uint64_t)v82, v42, v43, v47, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 244, (uint64_t)"logCalibrationData(accessoryObj:source:)", 40, 2u);
      swift_bridgeObjectRelease();
      sub_24B7B2F44(v47, &qword_2579B03C8);
      if ((v42 & 1) != 0)
      {
        v83 = (_QWORD *)v37;
        v48 = v74;
        if (v39 >> 60 != 15)
        {
          v82 = *(_QWORD **)&v24[OBJC_IVAR____TtC5BKDM16BioLog_dispatchQueueWriting];
          v50 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
          v73 = (char *)v39;
          v51 = v71;
          v52 = v75;
          v50(v71, v84, v75);
          v53 = (*(unsigned __int8 *)(v48 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
          v54 = (v70 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
          v55 = (v54 + 23) & 0xFFFFFFFFFFFFFFF8;
          v56 = swift_allocObject();
          *(_QWORD *)(v56 + 16) = v24;
          (*(void (**)(unint64_t, char *, uint64_t))(v48 + 32))(v56 + v53, v51, v52);
          v57 = (_QWORD *)(v56 + v54);
          v58 = (uint64_t)v83;
          v59 = (unint64_t)v73;
          *v57 = v83;
          v57[1] = v59;
          v60 = v81;
          *(_QWORD *)(v56 + v55) = v81;
          v61 = (uint64_t *)(v56 + ((v55 + 15) & 0xFFFFFFFFFFFFFFF8));
          *v61 = v69;
          v61[1] = v23;
          v90 = sub_24B7B28C4;
          v91 = v56;
          aBlock = MEMORY[0x24BDAC760];
          v87 = 1107296256;
          v88 = sub_24B79A8C4;
          v89 = &block_descriptor_115;
          v62 = _Block_copy(&aBlock);
          sub_24B7B1948(v58, v59);
          sub_24B7B1948(v58, v59);
          v63 = v24;
          v64 = v60;
          v65 = v72;
          sub_24B7F34F0();
          v85 = MEMORY[0x24BEE4AF8];
          sub_24B7B19A0(&qword_2579B0370, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0378);
          sub_24B7B19E0(&qword_2579B0380, &qword_2579B0378);
          v66 = v78;
          v67 = v80;
          sub_24B7F376C();
          MEMORY[0x24BD26F50](0, v65, v66, v62);
          _Block_release(v62);
          sub_24B7B2484(v58, v59);
          sub_24B7B2484(v58, v59);
          (*(void (**)(char *, uint64_t))(v79 + 8))(v66, v67);
          (*(void (**)(char *, uint64_t))(v76 + 8))(v65, v77);
          (*(void (**)(char *, uint64_t))(v48 + 8))(v84, v52);
          return swift_release();
        }
        (*(void (**)(char *, uint64_t))(v74 + 8))(v84, v75);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v74 + 8))(v84, v75);
        sub_24B7B2484(v37, v39);
      }
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain_n();
    v31 = sub_24B7F34B4();
    v32 = sub_24B7F36A0();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      aBlock = v34;
      *(_DWORD *)v33 = 136315138;
      swift_bridgeObjectRetain();
      v85 = sub_24B7AC4E4(v21, v23, &aBlock);
      sub_24B7F3724();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24B74E000, v31, v32, "calibrationData %s already in store.", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD27D9C](v34, -1, -1);
      MEMORY[0x24BD27D9C](v33, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v74 + 8))(v27, v75);
    v49 = (uint64_t *)(a2 + *(int *)(_s6SourceVMa(0) + 32));
    result = swift_bridgeObjectRelease();
    *v49 = v21;
    v49[1] = v23;
  }
  return result;
}

uint64_t sub_24B79F124(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unsigned __int8 v15;
  uint64_t result;
  NSObject *v17;
  int v18;
  _BOOL4 v19;
  _DWORD *v20;
  id v21;
  uint64_t (*v22)();
  void (*v23)(_QWORD *);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  _QWORD v35[4];
  uint64_t v36[4];

  v33 = a6;
  v34 = a5;
  v11 = sub_24B7F33D0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B7F3394();
  v15 = sub_24B79E648();
  result = swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
    sub_24B7B195C(a3, a4);
    v17 = sub_24B7F34B4();
    v18 = sub_24B7F36B8();
    v19 = os_log_type_enabled(v17, (os_log_type_t)v18);
    v32 = a7;
    if (v19)
    {
      v31 = v18;
      v20 = (_DWORD *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v36[0] = v30;
      *v20 = 134218242;
      __asm { BR              X10 }
    }

    sub_24B7B18E0(a3, a4);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    v21 = v34;
    v22 = sub_24B79AC90();
    v23 = sub_24B79E5BC(v35, v21);
    v25 = v24;
    v26 = _s6SourceVMa(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v25, 1, v26))
    {
      v27 = (_QWORD *)(v25 + *(int *)(v26 + 32));
      v28 = v32;
      *v27 = v33;
      v27[1] = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    ((void (*)(_QWORD *, _QWORD))v23)(v35, 0);

    return ((uint64_t (*)(uint64_t *, _QWORD))v22)(v36, 0);
  }
  return result;
}

uint64_t sub_24B79F46C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void sub_24B79F498(void *a1)
{
  id *v1;
  id v2;
  id *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  id v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t i;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  char v38;
  uint64_t v39;
  _BOOL8 v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  id *v52;
  void *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  id v59;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0468);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v59 = a1;
  if (!a1)
  {
    v12 = (uint64_t *)((char *)v3 + OBJC_IVAR____TtC5BKDM16BioLog_sources);
    swift_beginAccess();
    v13 = *v12;
    v14 = v13 + 64;
    v15 = 1 << *(_BYTE *)(v13 + 32);
    v16 = -1;
    if (v15 < 64)
      v16 = ~(-1 << v15);
    v17 = v16 & *(_QWORD *)(v13 + 64);
    v18 = (unint64_t)(v15 + 63) >> 6;
    swift_bridgeObjectRetain_n();
    v19 = 0;
    if (!v17)
      goto LABEL_7;
LABEL_6:
    v20 = __clz(__rbit64(v17));
    v17 &= v17 - 1;
    for (i = v20 | (v19 << 6); ; i = __clz(__rbit64(v23)) + (v19 << 6))
    {
      v2 = *(id *)(*(_QWORD *)(v13 + 48) + 8 * i);
      if (objc_msgSend(v2, sel_type) == 1)
      {
        swift_release();
        v25 = swift_bridgeObjectRelease();
        goto LABEL_30;
      }

      if (v17)
        goto LABEL_6;
LABEL_7:
      v22 = v19 + 1;
      if (__OFADD__(v19, 1))
      {
        __break(1u);
        goto LABEL_45;
      }
      if (v22 >= v18)
        break;
      v23 = *(_QWORD *)(v14 + 8 * v22);
      ++v19;
      if (!v23)
      {
        v19 = v22 + 1;
        if (v22 + 1 >= v18)
          break;
        v23 = *(_QWORD *)(v14 + 8 * v19);
        if (!v23)
        {
          v19 = v22 + 2;
          if (v22 + 2 >= v18)
            break;
          v23 = *(_QWORD *)(v14 + 8 * v19);
          if (!v23)
          {
            v19 = v22 + 3;
            if (v22 + 3 >= v18)
              break;
            v23 = *(_QWORD *)(v14 + 8 * v19);
            if (!v23)
            {
              v19 = v22 + 4;
              if (v22 + 4 >= v18)
                break;
              v23 = *(_QWORD *)(v14 + 8 * v19);
              if (!v23)
              {
                v24 = v22 + 5;
                if (v24 >= v18)
                  break;
                v23 = *(_QWORD *)(v14 + 8 * v24);
                if (!v23)
                {
                  while (1)
                  {
                    v19 = v24 + 1;
                    if (__OFADD__(v24, 1))
                      goto LABEL_48;
                    if (v19 >= v18)
                      goto LABEL_29;
                    v23 = *(_QWORD *)(v14 + 8 * v19);
                    ++v24;
                    if (v23)
                      goto LABEL_24;
                  }
                }
                v19 = v24;
              }
            }
          }
        }
      }
LABEL_24:
      v17 = (v23 - 1) & v23;
    }
LABEL_29:
    swift_release();
    v25 = swift_bridgeObjectRelease();
    v2 = 0;
LABEL_30:
    v59 = v2;
    MEMORY[0x24BDAC7A8](v25);
    v52 = &v59;
    v26 = (char *)v3 + OBJC_IVAR____TtC5BKDM16BioLog_logger;
    v27 = sub_24B7F34D8();
    v28 = *(_QWORD *)(v27 - 8);
    (*(void (**)(uint64_t *, char *, uint64_t))(v28 + 16))(v10, v26, v27);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v10, 0, 1, v27);
    sub_24B7B52EC((void (*)(uint64_t *__return_ptr, uint64_t))sub_24B7B2FF0, (uint64_t)&v51, 0xD00000000000002ELL, 0x800000024B802560, (uint64_t)v10, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 259, (uint64_t)"logCalibrationData(accessoryObj:)", 33, 2u);
    sub_24B7B2F44((uint64_t)v10, &qword_2579B03C8);
    v11 = v59;
    if (v59)
    {
      v55 = v7;
      goto LABEL_32;
    }
    v49 = 0;
    goto LABEL_42;
  }
  v55 = v7;
  v11 = a1;
LABEL_32:
  v29 = (void *)MEMORY[0x24BDAC7A8](v11);
  v52 = v3;
  v53 = v29;
  v57 = 0x5B73656372756F73;
  v58 = 0xE800000000000000;
  v2 = v29;
  v30 = objc_msgSend(v2, sel_description);
  sub_24B7F355C();

  sub_24B7F35BC();
  swift_bridgeObjectRelease();
  sub_24B7F35BC();
  v31 = v57;
  v18 = v58;
  v32 = (char *)v3 + OBJC_IVAR____TtC5BKDM16BioLog_logger;
  v33 = sub_24B7F34D8();
  v34 = *(_QWORD *)(v33 - 8);
  (*(void (**)(uint64_t *, char *, uint64_t))(v34 + 16))(v10, v32, v33);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v10, 0, 1, v33);
  LOBYTE(v31) = sub_24B7B52EC((void (*)(uint64_t *__return_ptr, uint64_t))sub_24B7B2FE8, (uint64_t)&v51, v31, v18, (uint64_t)v10, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 261, (uint64_t)"logCalibrationData(accessoryObj:)", 33, 2u);
  swift_bridgeObjectRelease();
  sub_24B7B2F44((uint64_t)v10, &qword_2579B03C8);
  if ((v31 & 1) == 0)
  {
LABEL_41:

    v49 = v59;
LABEL_42:

    return;
  }
  v10 = (uint64_t *)((char *)v3 + OBJC_IVAR____TtC5BKDM16BioLog_sources);
  swift_beginAccess();
  v35 = v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v56 = *v10;
  v37 = v56;
  *v10 = 0x8000000000000000;
  v2 = v35;
  v14 = sub_24B7ACC80((uint64_t)v2);
  v39 = *(_QWORD *)(v37 + 16);
  v40 = (v38 & 1) == 0;
  v41 = v39 + v40;
  if (__OFADD__(v39, v40))
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  LOBYTE(v18) = v38;
  if (*(_QWORD *)(v37 + 24) >= v41)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if ((v38 & 1) == 0)
        goto LABEL_47;
LABEL_40:
      v44 = *(_QWORD *)(v56 + 56);
      v45 = _s6SourceVMa(0);
      v46 = *(_QWORD *)(v45 - 8);
      v47 = v44 + *(_QWORD *)(v46 + 72) * v14;
      v48 = (uint64_t)v55;
      sub_24B7B2F80(v47, (uint64_t)v55, _s6SourceVMa);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v48, 0, 1, v45);
      sub_24B79E8F4(v2, v48);
      sub_24B7AF448(v48, 1, &v56, v14, v2);
      sub_24B7B2F44(v48, &qword_2579B0468);

      *v10 = v56;
      swift_endAccess();

      goto LABEL_41;
    }
LABEL_46:
    sub_24B7AE450();
    if ((v18 & 1) == 0)
      goto LABEL_47;
    goto LABEL_40;
  }
  sub_24B7AD29C(v41, isUniquelyReferenced_nonNull_native);
  v42 = sub_24B7ACC80((uint64_t)v2);
  if ((v18 & 1) == (v43 & 1))
  {
    v14 = v42;
    if ((v18 & 1) == 0)
    {
LABEL_47:
      v50 = _s6SourceVMa(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v55, 1, 1, v50);
      __break(1u);
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    goto LABEL_40;
  }
LABEL_49:
  sub_24B7B2930(0, &qword_2579B0470);
  sub_24B7F39A0();
  __break(1u);
}

uint64_t sub_24B79FB04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v20;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0468);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)(a1 + OBJC_IVAR____TtC5BKDM16BioLog_sources);
  swift_beginAccess();
  v10 = *v9;
  if (!*(_QWORD *)(v10 + 16))
  {
    v17 = _s6SourceVMa(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v8, 1, 1, v17);
LABEL_7:
    result = sub_24B7B2F44((uint64_t)v8, &qword_2579B0468);
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return result;
  }
  swift_bridgeObjectRetain();
  v11 = sub_24B7ACC80(a2);
  if ((v12 & 1) != 0)
  {
    v13 = v11;
    v14 = *(_QWORD *)(v10 + 56);
    v15 = _s6SourceVMa(0);
    v16 = *(_QWORD *)(v15 - 8);
    sub_24B7B2768(v14 + *(_QWORD *)(v16 + 72) * v13, (uint64_t)v8, _s6SourceVMa);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v15);
  }
  else
  {
    v15 = _s6SourceVMa(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v8, 1, 1, v15);
  }
  swift_bridgeObjectRelease();
  _s6SourceVMa(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v8, 1, v15) == 1)
    goto LABEL_7;
  *(_QWORD *)(a3 + 24) = v15;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)a3);
  return sub_24B7B2F80((uint64_t)v8, (uint64_t)boxed_opaque_existential_1Tm, _s6SourceVMa);
}

uint64_t sub_24B79FCBC(uint64_t a1, unint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  id v38;
  void *v39;
  unsigned int v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  _BYTE *v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  unint64_t v68;
  _QWORD *v69;
  void *v70;
  id v71;
  _BYTE *v72;
  _BYTE *v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t result;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  _QWORD v82[4];
  _BYTE v83[4];
  int v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  _BYTE *v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE *v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  _BYTE *v100;
  uint64_t aBlock;
  unint64_t v102;
  uint64_t (*v103)(uint64_t);
  void *v104;
  uint64_t (*v105)();
  uint64_t v106;
  uint64_t v107;

  v5 = sub_24B7F34E4();
  v92 = *(_QWORD *)(v5 - 8);
  v93 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v91 = &v83[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v90 = sub_24B7F34FC();
  v89 = *(_QWORD *)(v90 - 8);
  MEMORY[0x24BDAC7A8](v90);
  v88 = &v83[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v83[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_24B7F3328();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = &v83[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v98 = sub_24B7F33D0();
  v15 = *(_QWORD *)(v98 - 8);
  v16 = MEMORY[0x24BDAC7A8](v98);
  v87 = &v83[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v86 = v17;
  MEMORY[0x24BDAC7A8](v16);
  v99 = v2;
  v100 = &v83[-v18];
  v19 = (uint64_t *)&v2[OBJC_IVAR____TtC5BKDM16BioLog_templateListNumber];
  swift_beginAccess();
  v20 = *(_QWORD *)(*v19 + 16);
  v97 = v15;
  if (!v20 || (sub_24B7ACCB0(a1), (v21 & 1) == 0))
  {
    v22 = a2;
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v107 = *v19;
    *v19 = 0x8000000000000000;
    sub_24B7AE0EC(0, a1, isUniquelyReferenced_nonNull_native);
    *v19 = v107;
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_10;
  }
  v22 = a2;
  if ((a2 & 1) == 0)
    goto LABEL_10;
  swift_beginAccess();
  LODWORD(v96) = swift_isUniquelyReferenced_nonNull_native();
  v107 = *v19;
  v23 = v107;
  *v19 = 0x8000000000000000;
  a2 = sub_24B7ACCB0(a1);
  v25 = *(_QWORD *)(v23 + 16);
  v26 = (v24 & 1) == 0;
  v27 = v25 + v26;
  if (__OFADD__(v25, v26))
    goto LABEL_30;
  LOBYTE(v15) = v24;
  if (*(_QWORD *)(v23 + 24) < v27)
  {
    sub_24B7AD5F0(v27, v96);
    v28 = sub_24B7ACCB0(a1);
    if ((v15 & 1) != (v29 & 1))
    {
LABEL_34:
      result = sub_24B7F39A0();
      __break(1u);
      return result;
    }
    a2 = v28;
    if ((v15 & 1) != 0)
      goto LABEL_26;
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if ((v96 & 1) == 0)
    goto LABEL_32;
  if ((v24 & 1) == 0)
    goto LABEL_33;
LABEL_26:
  while (1)
  {
    v77 = v107;
    v78 = *(_QWORD *)(v107 + 56);
    v79 = *(_QWORD *)(v78 + 8 * a2);
    v80 = __CFADD__(v79, 1);
    v81 = v79 + 1;
    if (!v80)
      break;
LABEL_31:
    __break(1u);
LABEL_32:
    sub_24B7AE680();
    if ((v15 & 1) == 0)
      goto LABEL_33;
  }
  *(_QWORD *)(v78 + 8 * a2) = v81;
  *v19 = v77;
  swift_endAccess();
  v15 = v97;
LABEL_10:
  v31 = type metadata accessor for BioLogHelper();
  v32 = *v19;
  if (!*(_QWORD *)(*v19 + 16))
  {
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  a2 = v31;
  v33 = sub_24B7ACCB0(a1);
  if ((v34 & 1) == 0)
    goto LABEL_29;
  v35 = sub_24B7B7FF0(a1, *(_QWORD *)(*(_QWORD *)(v32 + 56) + 8 * v33));
  v37 = v36;
  v96 = v35;
  aBlock = v35;
  v102 = v36;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BDCD7A0], v11);
  sub_24B7B22B8();
  sub_24B7F33B8();
  (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
  if ((v22 & 1) != 0
    || (v38 = objc_msgSend((id)objc_opt_self(), sel_defaultManager),
        sub_24B7F3394(),
        v39 = (void *)sub_24B7F3538(),
        swift_bridgeObjectRelease(),
        v40 = objc_msgSend(v38, sel_fileExistsAtPath_, v39),
        v38,
        v39,
        !v40))
  {
    v95 = v37;
    v46 = *(uint64_t (**)(uint64_t))(*(_QWORD *)*sub_24B7B571C() + 208);
    swift_retain();
    v47 = (uint64_t)v10;
    v48 = v46(a1);
    v50 = v49;
    v51 = swift_release();
    v94 = v83;
    MEMORY[0x24BDAC7A8](v51);
    v82[2] = v48;
    v82[3] = v50;
    aBlock = 0;
    v102 = 0xE000000000000000;
    sub_24B7F37A8();
    swift_bridgeObjectRelease();
    aBlock = 0xD000000000000019;
    v102 = 0x800000024B802590;
    LODWORD(v107) = a1;
    sub_24B7F3988();
    sub_24B7F35BC();
    swift_bridgeObjectRelease();
    sub_24B7F35BC();
    v52 = aBlock;
    v53 = v102;
    v54 = &v99[OBJC_IVAR____TtC5BKDM16BioLog_logger];
    v55 = sub_24B7F34D8();
    v56 = *(_QWORD *)(v55 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v56 + 16))(v47, v54, v55);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v56 + 56))(v47, 0, 1, v55);
    LOBYTE(v52) = sub_24B7B52EC((void (*)(uint64_t *__return_ptr, uint64_t))sub_24B7B2800, (uint64_t)v82, v52, v53, v47, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 282, (uint64_t)"logTemplateList(userID:update:)", 31, 2u);
    swift_bridgeObjectRelease();
    sub_24B7B2F44(v47, &qword_2579B03C8);
    if ((v52 & 1) != 0)
    {
      v94 = (_BYTE *)v48;
      v58 = v97;
      v57 = v98;
      if (v50 >> 60 != 15)
      {
        v59 = *(_QWORD *)&v99[OBJC_IVAR____TtC5BKDM16BioLog_dispatchQueueWriting];
        v84 = a1;
        v60 = v99;
        v85 = v59;
        v61 = v87;
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v97 + 16))(v87, v100, v98);
        v62 = (*(unsigned __int8 *)(v58 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
        v63 = (v86 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
        v64 = (v63 + 23) & 0xFFFFFFFFFFFFFFF8;
        v65 = swift_allocObject();
        *(_QWORD *)(v65 + 16) = v60;
        (*(void (**)(unint64_t, _BYTE *, uint64_t))(v58 + 32))(v65 + v62, v61, v57);
        v66 = (_QWORD *)(v65 + v63);
        v67 = (uint64_t)v94;
        v68 = v95;
        *v66 = v94;
        v66[1] = v50;
        v69 = (_QWORD *)(v65 + v64);
        *v69 = v96;
        v69[1] = v68;
        *(_DWORD *)(v65 + ((v64 + 19) & 0xFFFFFFFFFFFFFFF8)) = v84;
        v105 = sub_24B7B3134;
        v106 = v65;
        aBlock = MEMORY[0x24BDAC760];
        v102 = 1107296256;
        v103 = sub_24B79A8C4;
        v104 = &block_descriptor_133;
        v70 = _Block_copy(&aBlock);
        sub_24B7B1948(v67, v50);
        swift_bridgeObjectRetain();
        sub_24B7B1948(v67, v50);
        v71 = v60;
        v72 = v88;
        sub_24B7F34F0();
        v107 = MEMORY[0x24BEE4AF8];
        sub_24B7B19A0(&qword_2579B0370, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0378);
        sub_24B7B19E0(&qword_2579B0380, &qword_2579B0378);
        v73 = v91;
        v74 = v93;
        sub_24B7F376C();
        MEMORY[0x24BD26F50](0, v72, v73, v70);
        _Block_release(v70);
        sub_24B7B2484(v67, v50);
        sub_24B7B2484(v67, v50);
        v75 = v73;
        v45 = v96;
        (*(void (**)(_BYTE *, uint64_t))(v92 + 8))(v75, v74);
        (*(void (**)(_BYTE *, uint64_t))(v89 + 8))(v72, v90);
        (*(void (**)(_BYTE *, uint64_t))(v97 + 8))(v100, v98);
        swift_release();
        return v45;
      }
      (*(void (**)(_BYTE *, uint64_t))(v97 + 8))(v100, v98);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v97 + 8))(v100, v98);
      sub_24B7B2484(v48, v50);
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain_n();
  v41 = sub_24B7F34B4();
  v42 = sub_24B7F36A0();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = (uint8_t *)swift_slowAlloc();
    v44 = swift_slowAlloc();
    aBlock = v44;
    *(_DWORD *)v43 = 136315138;
    swift_bridgeObjectRetain();
    v45 = v96;
    v107 = sub_24B7AC4E4(v96, v37, &aBlock);
    sub_24B7F3724();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24B74E000, v41, v42, "templateList %s already in store.", v43, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD27D9C](v44, -1, -1);
    MEMORY[0x24BD27D9C](v43, -1, -1);

    (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v100, v98);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v100, v98);
    return v96;
  }
  return v45;
}

uint64_t sub_24B7A06A4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unsigned __int8 v15;
  uint64_t result;
  NSObject *v17;
  int v18;
  _DWORD *v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v23 = a5;
  v24 = a6;
  v11 = sub_24B7F33D0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B7F3394();
  v15 = sub_24B79E648();
  result = swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
    sub_24B7B195C(a3, a4);
    v17 = sub_24B7F34B4();
    v18 = sub_24B7F36B8();
    if (os_log_type_enabled(v17, (os_log_type_t)v18))
    {
      v21 = v18;
      v19 = (_DWORD *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v25 = v20;
      *v19 = 134218242;
      v22 = a7;
      __asm { BR              X10 }
    }

    sub_24B7B18E0(a3, a4);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    swift_beginAccess();
    sub_24B7BE034(v23, v24, a7);
    return swift_endAccess();
  }
  return result;
}

void sub_24B7A0A80(char *a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  uint64_t v12;
  uint64_t j;
  int v14;
  unsigned int v15;
  unint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  char *i;

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5BKDM16BioLog_calibrationDataLoggingEnabled) == 1)
  {
    v3 = *(uint64_t (**)(uint64_t))(*(_QWORD *)*sub_24B7B571C() + 184);
    v4 = swift_retain();
    v5 = v3(v4);
    swift_release();
    if ((v5 & 1) != 0)
      sub_24B79F498(0);
  }
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5BKDM16BioLog_templateLoggingEnabled) == 1)
  {
    if ((unint64_t)a1 >> 62)
      goto LABEL_28;
    v6 = *(_QWORD *)(((unint64_t)a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (i = a1; v6; i = a1)
    {
      v7 = 0;
      v8 = (unint64_t)a1 & 0xC000000000000001;
      v18 = a1 + 32;
      v19 = (unint64_t)a1 & 0xFFFFFFFFFFFFFF8;
      a1 = (char *)MEMORY[0x24BEE4AF8];
      while (1)
      {
        if (v8)
        {
          v9 = (id)MEMORY[0x24BD27040](v7, i);
        }
        else
        {
          if (v7 >= *(_QWORD *)(v19 + 16))
            goto LABEL_27;
          v9 = *(id *)&v18[8 * v7];
        }
        v10 = v9;
        if (__OFADD__(v7++, 1))
          break;
        v12 = *((_QWORD *)a1 + 2);
        if (v12)
        {
          swift_bridgeObjectRetain();
          for (j = 0; j != v12; ++j)
          {
            v14 = *(_DWORD *)&a1[4 * j + 32];
            if (v14 == objc_msgSend(v10, sel_userID))
            {

              goto LABEL_9;
            }
          }
          swift_bridgeObjectRelease();
        }
        v15 = objc_msgSend(v10, sel_userID);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          a1 = sub_24B7AC3D8(0, *((_QWORD *)a1 + 2) + 1, 1, a1);
        v17 = *((_QWORD *)a1 + 2);
        v16 = *((_QWORD *)a1 + 3);
        if (v17 >= v16 >> 1)
          a1 = sub_24B7AC3D8((char *)(v16 > 1), v17 + 1, 1, a1);
        *((_QWORD *)a1 + 2) = v17 + 1;
        *(_DWORD *)&a1[4 * v17 + 32] = v15;
        sub_24B79FCBC((uint64_t)objc_msgSend(v10, sel_userID), 0);

LABEL_9:
        swift_bridgeObjectRelease();
        if (v7 == v6)
          goto LABEL_29;
      }
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      swift_bridgeObjectRetain();
      v6 = sub_24B7F3844();
    }
LABEL_29:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

id sub_24B7A0D64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  void *v7;
  unsigned int v8;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];
  id v18;
  unint64_t v19;
  uint64_t v20;

  v1 = v0;
  v20 = *MEMORY[0x24BDAC8D0];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_24B7F3394();
  v6 = (void *)sub_24B7F3538();
  swift_bridgeObjectRelease();
  sub_24B7B9238();
  v7 = (void *)sub_24B7F3538();
  swift_bridgeObjectRelease();
  v18 = 0;
  v8 = objc_msgSend(v5, sel_createSymbolicLinkAtPath_withDestinationPath_error_, v6, v7, &v18);

  if (v8)
    return v18;
  v17[1] = v18;
  v10 = v18;
  v11 = (void *)sub_24B7F32E0();

  swift_willThrow();
  v18 = 0;
  v19 = 0xE000000000000000;
  sub_24B7F37A8();
  swift_bridgeObjectRelease();
  v18 = (id)0xD000000000000027;
  v19 = 0x800000024B801DC0;
  sub_24B7F3394();
  sub_24B7F35BC();
  swift_bridgeObjectRelease();
  sub_24B7F35BC();
  v12 = (uint64_t)v18;
  v13 = v19;
  v14 = v1 + OBJC_IVAR____TtC5BKDM16BioLog_logger;
  v15 = sub_24B7F34D8();
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v4, v14, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v4, 0, 1, v15);
  sub_24B7B47F4(v11, v12, v13, (uint64_t)v4, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 330, (uint64_t)"logSymlink(url:destinationURL:relativeToURL:)", 45, 2u);
  swift_bridgeObjectRelease();

  return (id)sub_24B7B2F44((uint64_t)v4, &qword_2579B03C8);
}

uint64_t sub_24B7A101C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t result;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;

  result = (uint64_t)sub_24B79E648();
  if ((result & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_24B7B195C(a4, a5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24B7B195C(a4, a5);
    swift_bridgeObjectRetain();
    v12 = sub_24B7F34B4();
    v13 = sub_24B7F36B8();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v15 = swift_slowAlloc();
      *(_DWORD *)v14 = 136315650;
      swift_bridgeObjectRetain();
      sub_24B7AC4E4(a6, a7, &v15);
      sub_24B7F3724();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v14 + 12) = 2048;
      __asm { BR              X9 }
    }
    sub_24B7B18E0(a4, a5);
    swift_bridgeObjectRelease_n();

    sub_24B7B18E0(a4, a5);
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

void sub_24B7A1318(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t updated;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  _QWORD v36[40];
  __int128 v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  __int128 v48;
  _BYTE v49[5];

  v2 = MEMORY[0x24BDAC7A8](a1);
  v3 = v1;
  v5 = v4;
  v41 = v6;
  v7 = v2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
  MEMORY[0x24BDAC7A8](v8);
  v36[29] = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = _s18TemplateUpdateInfoVMa(0);
  MEMORY[0x24BDAC7A8](updated);
  v36[39] = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_24B7F3328();
  v36[31] = *(_QWORD *)(v12 - 8);
  v36[32] = v12;
  MEMORY[0x24BDAC7A8](v12);
  v36[30] = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_24B7F33D0();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v36[38] = (char *)v36 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v39 = (char *)v36 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0360);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v36 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v23);
  v44 = (char *)v36 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v43 = (char *)v36 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v46 = (char *)v36 - v30;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  MEMORY[0x24BDAC7A8](v31);
  v40 = (char *)v36 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = v5 >> 62;
  v47 = v14;
  v45 = v15;
  v42 = v3;
  v36[28] = v18;
  v38 = v25;
  if ((v7 & 1) != 0)
  {
    v35 = (char *)&loc_24B7A15A8 + *((int *)qword_24B7A2D00 + v34);
    v48 = v32;
    v37 = v32;
    __asm { BR              X11 }
  }
  v36[2] = v49;
  __asm { BR              X11 }
}

void sub_24B7A16B4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unint64_t v13;
  char v14;
  int v15;
  unint64_t v16;
  void *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  int v24;
  uint64_t v25;
  int v26;
  _BYTE v27[32];

  v13 = *(_QWORD *)(v0 + 360);
  v14 = v13;
  *(_BYTE *)v4 = v13;
  *(_QWORD *)(v0 + 216) = v13 >> 8;
  *(_BYTE *)(v4 + 1) = BYTE1(v13);
  *(_QWORD *)(v0 + 320) = v13 >> 16;
  *(_BYTE *)(v4 + 2) = BYTE2(v13);
  *(_QWORD *)(v0 + 280) = v2 >> 16;
  *(_QWORD *)(v0 + 288) = v13 >> 24;
  *(_BYTE *)(v4 + 3) = BYTE3(v13);
  v15 = (BYTE6(v13) << 16) | (HIBYTE(v13) << 24) | (BYTE5(v13) << 8) | BYTE4(v13);
  *(_DWORD *)(v4 + 4) = v15;
  *(_DWORD *)(v0 + 276) = v2;
  *(_BYTE *)(v4 + 8) = v2;
  v16 = v2 >> 8;
  *(_BYTE *)(v4 + 9) = BYTE1(v2);
  *(_BYTE *)(v4 + 10) = BYTE2(v2);
  *(_QWORD *)(v0 + 264) = v2 >> 24;
  *(_BYTE *)(v4 + 11) = BYTE3(v2);
  *(_QWORD *)(v0 + 24) = HIDWORD(v2);
  *(_BYTE *)(v4 + 12) = BYTE4(v2);
  *(_QWORD *)(v0 + 360) = v2 >> 40;
  *(_BYTE *)(v4 + 13) = BYTE5(v2);
  v17 = memcpy((void *)(v0 + 19753), (const void *)(v0 + 3656), 0xC1EuLL);
  *(_BYTE *)(v4 + 3116) = *(_DWORD *)(v0 + 192);
  *(_BYTE *)(v4 + 3117) = *(_DWORD *)(v0 + 176);
  *(_BYTE *)(v4 + 3118) = *(_DWORD *)(v0 + 172);
  *(_BYTE *)(v4 + 3119) = *(_DWORD *)(v0 + 168);
  *(_BYTE *)(v4 + 3120) = *(_DWORD *)(v0 + 164);
  *(_BYTE *)(v4 + 3129) = *(_DWORD *)(v0 + 152);
  *(_BYTE *)(v4 + 3130) = *(_DWORD *)(v0 + 148);
  *(_BYTE *)(v4 + 3171) = *(_DWORD *)(v0 + 132);
  *(_BYTE *)(v4 + 3172) = *(_DWORD *)(v0 + 128);
  *(_BYTE *)(v4 + 3173) = *(_DWORD *)(v0 + 124);
  *(_BYTE *)(v4 + 3174) = *(_DWORD *)(v0 + 120);
  *(_BYTE *)(v4 + 3187) = *(_DWORD *)(v0 + 112);
  *(_BYTE *)(v4 + 3188) = *(_DWORD *)(v0 + 108);
  *(_BYTE *)(v4 + 3189) = *(_DWORD *)(v0 + 104);
  *(_BYTE *)(v4 + 3194) = *(_DWORD *)(v0 + 96);
  *(_BYTE *)(v4 + 3195) = *(_DWORD *)(v0 + 92);
  *(_BYTE *)(v4 + 3196) = *(_DWORD *)(v0 + 88);
  *(_BYTE *)(v4 + 3197) = *(_DWORD *)(v0 + 84);
  *(_BYTE *)(v4 + 3198) = *(_DWORD *)(v0 + 80);
  *(_BYTE *)(v4 + 3199) = *(_DWORD *)(v0 + 76);
  *(_BYTE *)(v4 + 3200) = *(_DWORD *)(v0 + 72);
  *(_BYTE *)(v4 + 3201) = *(_DWORD *)(v0 + 68);
  *(_BYTE *)(v4 + 3202) = *(_DWORD *)(v0 + 64);
  *(_BYTE *)(v4 + 3203) = *(_DWORD *)(v0 + 60);
  *(_BYTE *)(v4 + 3204) = *(_DWORD *)(v0 + 56);
  *(_BYTE *)(v4 + 3205) = *(_DWORD *)(v0 + 52);
  *(_BYTE *)(v4 + 3206) = *(_DWORD *)(v0 + 48);
  *(_BYTE *)(v4 + 3207) = *(_DWORD *)(v0 + 44);
  *(_BYTE *)(v4 + 3208) = *(_DWORD *)(v0 + 40);
  *(_BYTE *)(v4 + 3209) = *(_DWORD *)(v0 + 36);
  v18 = *(_DWORD *)(v0 + 156);
  *(_DWORD *)v1 = *(_DWORD *)(v0 + 160);
  *(_DWORD *)(v1 + 4) = v18;
  *(_DWORD *)(v1 + 10) = *(_DWORD *)(v0 + 144);
  *(_DWORD *)(v1 + 14) = v6;
  *(_DWORD *)(v1 + 18) = v7;
  *(_DWORD *)(v1 + 22) = *(_DWORD *)(v0 + 140);
  *(_DWORD *)(v1 + 26) = *(_DWORD *)(v0 + 136);
  *(_DWORD *)(v1 + 30) = v8;
  *(_DWORD *)(v1 + 34) = v9;
  *(_DWORD *)(v1 + 38) = v10;
  *(_DWORD *)(v1 + 42) = v11;
  *(_DWORD *)(v1 + 46) = v12;
  *(_QWORD *)(v1 + 54) = *(_QWORD *)(v0 + 416);
  *(_DWORD *)(v1 + 62) = *(_DWORD *)(v0 + 116);
  *(_DWORD *)(v1 + 69) = *(_DWORD *)(v0 + 100);
  *(_DWORD *)(v1 + 89) = v5;
  MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)&v27[16] = v0 + 19739;
  v19 = v3 + OBJC_IVAR____TtC5BKDM16BioLog_logger;
  v20 = sub_24B7F34D8();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v0 + 352);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v22, v19, v20);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 56))(v22, 0, 1, v20);
  v23 = sub_24B7B4BE0((uint64_t (*)(uint64_t))sub_24B7B2644, (uint64_t)v27, 0xD00000000000001BLL, 0x800000024B8020F0, v22, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 371, (uint64_t)"logTemplateUpdateResult(updated:data:)", 38, 2u);
  sub_24B7B2F44(v22, &qword_2579B03C8);
  if ((v23 & 1) != 0)
  {
    sub_24B7B2658((_BYTE *)(v0 + 6864));
    sub_24B7B2E98(v0 + 6864, v0 + 10119, &qword_2579B0438);
    *(_BYTE *)(v0 + 13322) = v14;
    *(_BYTE *)(v0 + 13323) = *(_QWORD *)(v0 + 216);
    *(_BYTE *)(v0 + 13324) = *(_QWORD *)(v0 + 320);
    *(_BYTE *)(v0 + 13325) = *(_QWORD *)(v0 + 288);
    *(_DWORD *)(v0 + 288) = v15;
    *(_DWORD *)(v0 + 13326) = v15;
    *(_BYTE *)(v0 + 13330) = *(_DWORD *)(v0 + 276);
    *(_BYTE *)(v0 + 13331) = v16;
    *(_BYTE *)(v0 + 13332) = *(_QWORD *)(v0 + 280);
    *(_BYTE *)(v0 + 13333) = *(_QWORD *)(v0 + 264);
    *(_BYTE *)(v0 + 13334) = *(_QWORD *)(v0 + 24);
    *(_BYTE *)(v0 + 13335) = *(_QWORD *)(v0 + 360);
    memcpy((void *)(v0 + 13336), (const void *)(v0 + 3656), 0xC1EuLL);
    *(_BYTE *)(v0 + 16438) = *(_DWORD *)(v0 + 192);
    *(_BYTE *)(v0 + 16439) = *(_DWORD *)(v0 + 176);
    *(_BYTE *)(v0 + 16440) = *(_DWORD *)(v0 + 172);
    *(_BYTE *)(v0 + 16441) = *(_DWORD *)(v0 + 168);
    v24 = *(_DWORD *)(v0 + 160);
    *(_BYTE *)(v0 + 16442) = *(_DWORD *)(v0 + 164);
    v25 = *(_QWORD *)(v0 + 16);
    v26 = *(_DWORD *)(v0 + 156);
    *(_DWORD *)v25 = v24;
    *(_DWORD *)(v25 + 4) = v26;
    *(_BYTE *)(v0 + 16451) = *(_DWORD *)(v0 + 152);
    *(_BYTE *)(v0 + 16452) = *(_DWORD *)(v0 + 148);
    *(_DWORD *)(v25 + 10) = *(_DWORD *)(v0 + 144);
    *(_DWORD *)(v25 + 14) = v6;
    *(_DWORD *)(v25 + 18) = v7;
    *(_DWORD *)(v25 + 22) = *(_DWORD *)(v0 + 140);
    *(_DWORD *)(v25 + 26) = *(_DWORD *)(v0 + 136);
    *(_DWORD *)(v25 + 30) = v8;
    *(_DWORD *)(v25 + 34) = v9;
    *(_DWORD *)(v25 + 38) = v10;
    *(_DWORD *)(v25 + 42) = v11;
    *(_DWORD *)(v25 + 46) = v12;
    *(_BYTE *)(v0 + 16493) = *(_DWORD *)(v0 + 132);
    *(_BYTE *)(v0 + 16494) = *(_DWORD *)(v0 + 128);
    *(_BYTE *)(v0 + 16495) = *(_DWORD *)(v0 + 124);
    *(_BYTE *)(v0 + 16496) = *(_DWORD *)(v0 + 120);
    *(_QWORD *)(v25 + 54) = *(_QWORD *)(v0 + 416);
    *(_DWORD *)(v25 + 62) = *(_DWORD *)(v0 + 116);
    *(_BYTE *)(v0 + 16509) = *(_DWORD *)(v0 + 112);
    *(_BYTE *)(v0 + 16510) = *(_DWORD *)(v0 + 108);
    *(_BYTE *)(v0 + 16511) = *(_DWORD *)(v0 + 104);
    *(_DWORD *)(v25 + 69) = *(_DWORD *)(v0 + 100);
    *(_BYTE *)(v0 + 16516) = *(_DWORD *)(v0 + 96);
    *(_BYTE *)(v0 + 16517) = *(_DWORD *)(v0 + 92);
    *(_BYTE *)(v0 + 16518) = *(_DWORD *)(v0 + 88);
    *(_BYTE *)(v0 + 16519) = *(_DWORD *)(v0 + 84);
    *(_BYTE *)(v0 + 16520) = *(_DWORD *)(v0 + 80);
    *(_BYTE *)(v0 + 16521) = *(_DWORD *)(v0 + 76);
    *(_BYTE *)(v0 + 16522) = *(_DWORD *)(v0 + 72);
    *(_BYTE *)(v0 + 16523) = *(_DWORD *)(v0 + 68);
    *(_BYTE *)(v0 + 16524) = *(_DWORD *)(v0 + 64);
    *(_BYTE *)(v0 + 16525) = *(_DWORD *)(v0 + 60);
    *(_BYTE *)(v0 + 16526) = *(_DWORD *)(v0 + 56);
    *(_BYTE *)(v0 + 16527) = *(_DWORD *)(v0 + 52);
    *(_BYTE *)(v0 + 16528) = *(_DWORD *)(v0 + 48);
    *(_BYTE *)(v0 + 16529) = *(_DWORD *)(v0 + 44);
    *(_BYTE *)(v0 + 16530) = *(_DWORD *)(v0 + 40);
    *(_BYTE *)(v0 + 16531) = *(_DWORD *)(v0 + 36);
    *(_DWORD *)(v25 + 89) = v5;
    sub_24B7B2684(v0 + 13322);
    JUMPOUT(0x24B7A22DCLL);
  }
  JUMPOUT(0x24B7A2C7CLL);
}

void sub_24B7A16F4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint8x8_t v9;
  __int128 v10;

  v2 = *(_QWORD *)(v0 + 360);
  v3 = (int)v2;
  if ((int)v2 <= v2 >> 32)
  {
    sub_24B7B195C(*(_QWORD *)(v0 + 360), v1);
    v4 = sub_24B7F3274();
    if (v4)
    {
      v5 = v4;
      v6 = sub_24B7F3298();
      v7 = __OFSUB__(v3, v6);
      v8 = v3 - v6;
      if (!v7)
      {
        sub_24B7F328C();
        *(_OWORD *)(v0 + 288) = *(_OWORD *)(v5 + v8 + 4);
        memcpy((void *)(v0 + 3656), (const void *)(v5 + v8 + 20), 0xC0CuLL);
        v9.i32[0] = *(_DWORD *)(v5 + v8 + 3104);
        *(uint16x8_t *)(v0 + 416) = vmovl_u8(v9);
        *(_DWORD *)(v0 + 280) = *(unsigned __int8 *)(v5 + v8 + 3117);
        *(_DWORD *)(v0 + 276) = *(unsigned __int8 *)(v5 + v8 + 3118);
        v10 = *(_OWORD *)(v5 + v8 + 3139);
        *(_OWORD *)(v0 + 192) = v10;
        LODWORD(v10) = *(_DWORD *)(v5 + v8 + 3159);
        *(uint16x8_t *)(v0 + 320) = vmovl_u8(*(uint8x8_t *)&v10);
        *(_DWORD *)(v0 + 264) = *(_DWORD *)(v5 + v8 + 3171);
        *(_DWORD *)(v0 + 216) = *(unsigned __int8 *)(v5 + v8 + 3175);
        *(_OWORD *)(v0 + 176) = *(_OWORD *)(v5 + v8 + 3182);
        sub_24B7B18E0(*(_QWORD *)(v0 + 360), v1);
        JUMPOUT(0x24B7A1B28);
      }
      __break(1u);
      JUMPOUT(0x24B7A2CC0);
    }
    sub_24B7F328C();
    __break(1u);
    JUMPOUT(0x24B7A2CDCLL);
  }
  __break(1u);
  JUMPOUT(0x24B7A2CB0);
}

void sub_24B7A1C0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 360) + 16);
  swift_retain();
  swift_retain();
  v2 = sub_24B7F3274();
  if (v2)
  {
    v3 = v2;
    v4 = sub_24B7F3298();
    v5 = __OFSUB__(v1, v4);
    v6 = v1 - v4;
    if (!v5)
    {
      sub_24B7F328C();
      v7 = v3 + v6;
      *(_QWORD *)(v0 + 216) = *(unsigned __int8 *)(v7 + 1);
      *(_QWORD *)(v0 + 320) = *(unsigned __int8 *)(v7 + 2);
      *(_QWORD *)(v0 + 288) = *(unsigned __int8 *)(v7 + 3);
      *(_QWORD *)(v0 + 8) = *(unsigned int *)(v7 + 4);
      *(_DWORD *)(v0 + 276) = *(unsigned __int8 *)(v7 + 8);
      *(_QWORD *)v0 = *(unsigned __int8 *)(v7 + 9);
      *(_QWORD *)(v0 + 280) = *(unsigned __int8 *)(v7 + 10);
      *(_QWORD *)(v0 + 264) = *(unsigned __int8 *)(v7 + 11);
      memcpy((void *)(v0 + 3656), (const void *)(v7 + 14), 0xC1EuLL);
      *(_DWORD *)(v0 + 192) = *(unsigned __int8 *)(v7 + 3116);
      v8 = *(unsigned __int8 *)(v7 + 3117);
      *(_DWORD *)(v0 + 172) = *(unsigned __int8 *)(v7 + 3118);
      *(_DWORD *)(v0 + 176) = v8;
      v9 = *(unsigned __int8 *)(v7 + 3119);
      *(_DWORD *)(v0 + 164) = *(unsigned __int8 *)(v7 + 3120);
      *(_DWORD *)(v0 + 168) = v9;
      v10 = *(_DWORD *)(v7 + 3121);
      *(_DWORD *)(v0 + 156) = *(_DWORD *)(v7 + 3125);
      *(_DWORD *)(v0 + 160) = v10;
      v11 = *(unsigned __int8 *)(v7 + 3129);
      *(_DWORD *)(v0 + 148) = *(unsigned __int8 *)(v7 + 3130);
      *(_DWORD *)(v0 + 152) = v11;
      *(_DWORD *)(v0 + 144) = *(_DWORD *)(v7 + 3131);
      v12 = *(_DWORD *)(v7 + 3143);
      *(_DWORD *)(v0 + 136) = *(_DWORD *)(v7 + 3147);
      *(_DWORD *)(v0 + 140) = v12;
      v13 = *(unsigned __int8 *)(v7 + 3171);
      *(_DWORD *)(v0 + 128) = *(unsigned __int8 *)(v7 + 3172);
      *(_DWORD *)(v0 + 132) = v13;
      v14 = *(unsigned __int8 *)(v7 + 3173);
      *(_DWORD *)(v0 + 120) = *(unsigned __int8 *)(v7 + 3174);
      *(_DWORD *)(v0 + 124) = v14;
      *(_QWORD *)(v0 + 416) = *(_QWORD *)(v7 + 3175);
      v15 = *(_DWORD *)(v7 + 3183);
      *(_DWORD *)(v0 + 112) = *(unsigned __int8 *)(v7 + 3187);
      *(_DWORD *)(v0 + 116) = v15;
      v16 = *(unsigned __int8 *)(v7 + 3188);
      *(_DWORD *)(v0 + 104) = *(unsigned __int8 *)(v7 + 3189);
      *(_DWORD *)(v0 + 108) = v16;
      v17 = *(_DWORD *)(v7 + 3190);
      *(_DWORD *)(v0 + 96) = *(unsigned __int8 *)(v7 + 3194);
      *(_DWORD *)(v0 + 100) = v17;
      v18 = *(unsigned __int8 *)(v7 + 3195);
      *(_DWORD *)(v0 + 88) = *(unsigned __int8 *)(v7 + 3196);
      *(_DWORD *)(v0 + 92) = v18;
      v19 = *(unsigned __int8 *)(v7 + 3197);
      *(_DWORD *)(v0 + 80) = *(unsigned __int8 *)(v7 + 3198);
      *(_DWORD *)(v0 + 84) = v19;
      v20 = *(unsigned __int8 *)(v7 + 3199);
      *(_DWORD *)(v0 + 72) = *(unsigned __int8 *)(v7 + 3200);
      *(_DWORD *)(v0 + 76) = v20;
      v21 = *(unsigned __int8 *)(v7 + 3201);
      *(_DWORD *)(v0 + 64) = *(unsigned __int8 *)(v7 + 3202);
      *(_DWORD *)(v0 + 68) = v21;
      v22 = *(unsigned __int8 *)(v7 + 3203);
      *(_DWORD *)(v0 + 56) = *(unsigned __int8 *)(v7 + 3204);
      *(_DWORD *)(v0 + 60) = v22;
      v23 = *(unsigned __int8 *)(v7 + 3205);
      *(_DWORD *)(v0 + 48) = *(unsigned __int8 *)(v7 + 3206);
      *(_DWORD *)(v0 + 52) = v23;
      v24 = *(unsigned __int8 *)(v7 + 3207);
      *(_DWORD *)(v0 + 40) = *(unsigned __int8 *)(v7 + 3208);
      *(_DWORD *)(v0 + 44) = v24;
      *(_DWORD *)(v0 + 36) = *(unsigned __int8 *)(v7 + 3209);
      swift_release();
      swift_release();
      JUMPOUT(0x24B7A1E0CLL);
    }
    __break(1u);
    JUMPOUT(0x24B7A2CBCLL);
  }
  sub_24B7F328C();
  __break(1u);
  JUMPOUT(0x24B7A2CD4);
}

uint64_t sub_24B7A2D10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0360);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B7B2F00(a1, (uint64_t)v6, &qword_2579B0360);
  v7 = sub_24B7F33D0();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    result = sub_24B7B2F44((uint64_t)v6, &qword_2579B0360);
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  else
  {
    *(_QWORD *)(a2 + 24) = v7;
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)a2);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v8 + 32))(boxed_opaque_existential_1Tm, v6, v7);
  }
  return result;
}

double sub_24B7A2DEC@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_24B7A2DF8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  void *v16;
  char *v17;
  _QWORD v19[2];
  _QWORD aBlock[6];

  v7 = sub_24B7F34E4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_24B7F34FC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = *(_QWORD *)&v3[OBJC_IVAR____TtC5BKDM16BioLog_dispatchQueueLogging];
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a1;
  v15[3] = v3;
  v15[4] = a2;
  v15[5] = a3;
  aBlock[4] = sub_24B7B1924;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B79A8C4;
  aBlock[3] = &block_descriptor;
  v16 = _Block_copy(aBlock);
  v17 = v3;
  sub_24B7B1948(a2, a3);
  sub_24B7F34F0();
  v19[1] = MEMORY[0x24BEE4AF8];
  sub_24B7B19A0(&qword_2579B0370, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0378);
  sub_24B7B19E0(&qword_2579B0380, &qword_2579B0378);
  sub_24B7F376C();
  MEMORY[0x24BD26F50](0, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

void sub_24B7A2FF4(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)();
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _OWORD *v61;
  void (*v62)(char *, uint64_t, uint64_t, _OWORD *);
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t, uint64_t);
  _OWORD *v66;
  uint64_t v67;
  char *v68;
  uint64_t (*v69)();
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _OWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  BOOL v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t (*v104)@<X0>(uint64_t@<X8>);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  BOOL v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  BOOL v116;
  uint64_t (*v117)();
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _OWORD *v126;
  uint64_t (*v127)();
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  _OWORD v138[3];
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  unint64_t v146;
  unint64_t v147;
  void (*v148)(char *, uint64_t, uint64_t, _OWORD *);
  char *v149;
  char *v150;
  _OWORD *v151;
  char *v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  _OWORD *v157;
  uint64_t v158;
  unint64_t v159;
  char *v160;
  _BYTE v161[68];
  _OWORD *v162;
  _BYTE v163[48];
  uint64_t v164;
  unint64_t v165;
  unint64_t v166;
  _DWORD v167[769];

  v1 = MEMORY[0x24BDAC7A8](a1);
  v3 = v2;
  v158 = v4;
  v6 = v5;
  v7 = v1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v138 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v138 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v157 = (_OWORD *)((char *)v138 - v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v138 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = _s8SequenceV13StatusMessageVMa(0);
  v155 = *(_QWORD *)(v19 - 8);
  v156 = v19;
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)v138 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v152 = (char *)v138 - v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0360);
  MEMORY[0x24BDAC7A8](v24);
  v151 = (_OWORD *)((char *)v138 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0498);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)v138 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v27);
  v149 = (char *)v138 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v154 = (char *)v138 - v33;
  MEMORY[0x24BDAC7A8](v32);
  v153 = (uint64_t)v138 - v34;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  v36 = MEMORY[0x24BDAC7A8](v35);
  v160 = (char *)v138 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (HIDWORD(v7))
  {
    LODWORD(v136) = 0;
    v135 = 3455;
    LOBYTE(v134) = 2;
    sub_24B7F3838();
    __break(1u);
    JUMPOUT(0x24B7A494CLL);
  }
  v150 = v10;
  v159 = v7;
  if ((v7 - 85) <= 0xD && ((1 << (v7 - 85)) & 0x340F) != 0)
  {
    v157 = v138;
    MEMORY[0x24BDAC7A8](v36);
    v136 = v6;
    v165 = 0;
    v166 = 0xE000000000000000;
    sub_24B7F37A8();
    swift_bridgeObjectRelease();
    v165 = 0xD000000000000012;
    v166 = 0x800000024B802360;
    v167[0] = v7;
    sub_24B7F3988();
    sub_24B7F35BC();
    swift_bridgeObjectRelease();
    sub_24B7F35BC();
    v38 = v165;
    v39 = v166;
    v40 = v6 + OBJC_IVAR____TtC5BKDM16BioLog_logger;
    v7 = v3;
    v41 = v6;
    v42 = sub_24B7F34D8();
    v43 = *(_QWORD *)(v42 - 8);
    v44 = (uint64_t)v160;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v160, v40, v42);
    v45 = v42;
    v6 = v41;
    v3 = v7;
    LODWORD(v7) = v159;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56))(v44, 0, 1, v45);
    LOBYTE(v38) = sub_24B7B52EC((void (*)(uint64_t *__return_ptr, uint64_t))sub_24B7B46D0, (uint64_t)&v134, v38, v39, v44, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 452, (uint64_t)"logStatusMessage(_:data:)", 25, 2u);
    swift_bridgeObjectRelease();
    v46 = sub_24B7B2F44(v44, &qword_2579B03C8);
    if ((v38 & 1) == 0)
      goto LABEL_26;
    sub_24B7B2E74((uint64_t)v167);
    if (v3 >> 60 != 15)
      __asm { BR              X10 }
    sub_24B7B2E98((uint64_t)v167, (uint64_t)v163, &qword_2579B04A0);
    sub_24B7B2E98((uint64_t)v163, (uint64_t)&v165, &qword_2579B04A0);
    v69 = sub_24B79AD38();
    v71 = v70;
    v72 = _s8SequenceVMa(0);
    v73 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 48))(v71, 1, v72);
    v75 = v155;
    v74 = v156;
    v76 = v153;
    if (v73)
    {
      ((void (*)(_BYTE *, _QWORD))v69)(v161, 0);
      v77 = 1;
    }
    else
    {
      sub_24B7C7D60(v7, (uint64_t)&v165, v153);
      ((void (*)(_BYTE *, _QWORD))v69)(v161, 0);
      v77 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56))(v76, v77, 1, v74);
    v29 = v154;
    if ((_DWORD)v7 != 97)
    {
      if ((_DWORD)v7 != 95)
        goto LABEL_24;
      sub_24B7B2E98((uint64_t)v163, (uint64_t)v161, &qword_2579B04A0);
      if (sub_24B7B2EDC((uint64_t)v161) != 1)
      {
        v157 = v162;
        v78 = v6 + OBJC_IVAR____TtC5BKDM16BioLog_sequenceURL;
        swift_beginAccess();
        v79 = v151;
        sub_24B7B2F00(v78, (uint64_t)v151, &qword_2579B0360);
        swift_beginAccess();
        sub_24B79CD0C((uint64_t)v79, (uint64_t)v157);
        swift_endAccess();
      }
    }
    sub_24B7B2F00(v76, (uint64_t)v29, &qword_2579B0498);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v29, 1, v74) == 1)
    {
      sub_24B7B2F44(v76, &qword_2579B0498);
LABEL_25:
      v46 = sub_24B7B2F44((uint64_t)v29, &qword_2579B0498);
      goto LABEL_26;
    }
    v80 = (uint64_t)v152;
    sub_24B7B2F80((uint64_t)v29, (uint64_t)v152, _s8SequenceV13StatusMessageVMa);
    sub_24B7AAFB0();
    sub_24B7B2E38(v80, _s8SequenceV13StatusMessageVMa);
LABEL_24:
    v29 = (char *)v76;
    goto LABEL_25;
  }
  v154 = v18;
  if ((v7 - 356) < 0xFFFFFF00)
  {
    v47 = sub_24B79AD38();
    v49 = v48;
    v50 = _s8SequenceVMa(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 48))(v49, 1, v50))
    {
      ((void (*)(unint64_t *, _QWORD))v47)(&v165, 0);
      v51 = 1;
    }
    else
    {
      v123 = sub_24B7F3490();
      v124 = (uint64_t)v154;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v123 - 8) + 56))(v154, 1, 1, v123);
      v125 = _s13NodePlacementVMa(0);
      v126 = v157;
      (*(void (**)(_OWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 56))(v157, 1, 1, v125);
      LOBYTE(v167[0]) = 1;
      sub_24B7C7B88(v7, v124, (uint64_t)v126, 0, 0x1000000000000, (uint64_t)v29);
      sub_24B7B2F44((uint64_t)v126, &qword_2579B0490);
      sub_24B7B2F44(v124, &qword_2579B0388);
      ((void (*)(unint64_t *, _QWORD))v47)(&v165, 0);
      v51 = 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v155 + 56))(v29, v51, 1, v156);
    goto LABEL_25;
  }
  v151 = v138;
  v152 = v14;
  MEMORY[0x24BDAC7A8](v36);
  v136 = v6;
  v165 = 0;
  v166 = 0xE000000000000000;
  sub_24B7F37A8();
  swift_bridgeObjectRelease();
  v165 = 0xD000000000000012;
  v166 = 0x800000024B802360;
  v167[0] = v7;
  sub_24B7F3988();
  sub_24B7F35BC();
  swift_bridgeObjectRelease();
  sub_24B7F35BC();
  v52 = v165;
  v53 = v166;
  v54 = v6 + OBJC_IVAR____TtC5BKDM16BioLog_logger;
  v55 = sub_24B7F34D8();
  v153 = v6;
  v56 = v55;
  v57 = *(_QWORD *)(v55 - 8);
  v7 = v3;
  v58 = (uint64_t)v160;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v160, v54, v55);
  v59 = v56;
  v6 = v153;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v57 + 56))(v58, 0, 1, v59);
  LOBYTE(v52) = sub_24B7B52EC((void (*)(uint64_t *__return_ptr, uint64_t))sub_24B7B46D0, (uint64_t)&v134, v52, v53, v58, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 479, (uint64_t)"logStatusMessage(_:data:)", 25, 2u);
  swift_bridgeObjectRelease();
  v60 = v58;
  v3 = v7;
  LODWORD(v7) = v159;
  v46 = sub_24B7B2F44(v60, &qword_2579B03C8);
  if ((v52 & 1) != 0)
  {
    v61 = (_OWORD *)sub_24B7F3490();
    v62 = *(void (**)(char *, uint64_t, uint64_t, _OWORD *))(*((_QWORD *)v61 - 1) + 56);
    v63 = (uint64_t)v154;
    v151 = v61;
    v148 = v62;
    ((void (*)(char *, uint64_t, uint64_t))v62)(v154, 1, 1);
    memset(v163, 0, sizeof(v163));
    v164 = 1;
    v64 = _s13NodePlacementVMa(0);
    v65 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56);
    v66 = v157;
    v65((char *)v157, 1, 1, v64);
    LOBYTE(v165) = 1;
    sub_24B7C7600(v7, v63, (uint64_t)v163, (uint64_t)v66, 0, 0x1000000000000, (uint64_t)v22);
    sub_24B7AAFB0();
    sub_24B7B2E38((uint64_t)v22, _s8SequenceV13StatusMessageVMa);
    v65(v152, 1, 1, v64);
    v67 = (uint64_t)v149;
    if (v3 >> 60 != 15)
    {
      v138[2] = 0u;
      v68 = (char *)&loc_24B7A37DC + dword_24B7A495C[v3 >> 62];
      v147 = v3 >> 62;
      v146 = v3 >> 62;
      v145 = v3 >> 62;
      v144 = v3 >> 62;
      v143 = v3 >> 62;
      v142 = v3 >> 62;
      v141 = v3 >> 62;
      v140 = v3 >> 62;
      v139 = v3 >> 62;
      __asm { BR              X11 }
    }
    v127 = sub_24B79AD38();
    v129 = v128;
    v130 = _s8SequenceVMa(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v130 - 8) + 48))(v129, 1, v130))
    {
      ((void (*)(unint64_t *, _QWORD))v127)(&v165, 0);
      v131 = 1;
      LODWORD(v7) = v159;
      v132 = (uint64_t)v152;
    }
    else
    {
      v133 = (uint64_t)v154;
      v148(v154, 1, 1, v151);
      v161[0] = v3 >> 60 == 15;
      LODWORD(v7) = v159;
      v132 = (uint64_t)v152;
      sub_24B7C7B88(v159, v133, (uint64_t)v152, 0, (unint64_t)v161[0] << 48, v67);
      sub_24B7B2F44(v133, &qword_2579B0388);
      ((void (*)(unint64_t *, _QWORD))v127)(&v165, 0);
      v131 = 0;
    }
    sub_24B7B2F44(v132, &qword_2579B0490);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v155 + 56))(v67, v131, 1, v156);
    v46 = sub_24B7B2F44(v67, &qword_2579B0498);
    v6 = v153;
  }
LABEL_26:
  switch((int)v7)
  {
    case '9':
      MEMORY[0x24BDAC7A8](v46);
      v136 = v158;
      v137 = v3;
      v81 = v6 + OBJC_IVAR____TtC5BKDM16BioLog_logger;
      v82 = sub_24B7F34D8();
      v83 = *(_QWORD *)(v82 - 8);
      v84 = (uint64_t)v160;
      (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v160, v81, v82);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v83 + 56))(v84, 0, 1, v82);
      v85 = sub_24B7B52EC((void (*)(uint64_t *__return_ptr, uint64_t))sub_24B7B2800, (uint64_t)&v134, 0xD000000000000023, 0x800000024B8023A0, v84, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 536, (uint64_t)"logStatusMessage(_:data:)", 25, 2u);
      sub_24B7B2F44(v84, &qword_2579B03C8);
      if (v85 && v3 >> 60 != 15)
      {
        v86 = v158;
        sub_24B7B195C(v158, v3);
        v87 = 0;
        goto LABEL_40;
      }
      return;
    case ':':
      MEMORY[0x24BDAC7A8](v46);
      v136 = v6;
      v93 = v6 + OBJC_IVAR____TtC5BKDM16BioLog_logger;
      v94 = sub_24B7F34D8();
      v95 = *(_QWORD *)(v94 - 8);
      v96 = (uint64_t)v160;
      (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v160, v93, v94);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v95 + 56))(v96, 0, 1, v94);
      v97 = sub_24B7B52EC((void (*)(uint64_t *__return_ptr, uint64_t))sub_24B7B46D4, (uint64_t)&v134, 0xD000000000000027, 0x800000024B802400, v96, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 526, (uint64_t)"logStatusMessage(_:data:)", 25, 2u);
      sub_24B7B2F44(v96, &qword_2579B03C8);
      if (v97)
        goto LABEL_46;
      return;
    case 'B':
      MEMORY[0x24BDAC7A8](v46);
      v136 = v6;
      v105 = v6 + OBJC_IVAR____TtC5BKDM16BioLog_logger;
      v106 = sub_24B7F34D8();
      v107 = *(_QWORD *)(v106 - 8);
      v101 = (uint64_t)v160;
      (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v160, v105, v106);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v107 + 56))(v101, 0, 1, v106);
      v102 = 0xD000000000000030;
      LOBYTE(v137) = 2;
      v136 = 25;
      v134 = 511;
      v135 = (uint64_t)"logStatusMessage(_:data:)";
      v103 = 0x800000024B8024A0;
      v104 = sub_24B7B2DDC;
      goto LABEL_42;
    case 'I':
      MEMORY[0x24BDAC7A8](v46);
      v136 = v158;
      v137 = v3;
      v108 = v6 + OBJC_IVAR____TtC5BKDM16BioLog_logger;
      v109 = sub_24B7F34D8();
      v110 = *(_QWORD *)(v109 - 8);
      v111 = (uint64_t)v160;
      (*(void (**)(char *, uint64_t, uint64_t))(v110 + 16))(v160, v108, v109);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v110 + 56))(v111, 0, 1, v109);
      v112 = sub_24B7B52EC((void (*)(uint64_t *__return_ptr, uint64_t))sub_24B7B2800, (uint64_t)&v134, 0xD000000000000020, 0x800000024B8023D0, v111, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 531, (uint64_t)"logStatusMessage(_:data:)", 25, 2u);
      sub_24B7B2F44(v111, &qword_2579B03C8);
      if (v112 && v3 >> 60 != 15)
      {
        v86 = v158;
        sub_24B7B195C(v158, v3);
        v87 = 1;
LABEL_40:
        sub_24B7A1318(v87);
        sub_24B7B2484(v86, v3);
      }
      return;
    case 'P':
      MEMORY[0x24BDAC7A8](v46);
      v136 = v6;
      v113 = v6 + OBJC_IVAR____TtC5BKDM16BioLog_logger;
      v114 = sub_24B7F34D8();
      v115 = *(_QWORD *)(v114 - 8);
      v101 = (uint64_t)v160;
      (*(void (**)(char *, uint64_t, uint64_t))(v115 + 16))(v160, v113, v114);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v115 + 56))(v101, 0, 1, v114);
      v102 = 0xD000000000000029;
      LOBYTE(v137) = 2;
      v136 = 25;
      v134 = 516;
      v135 = (uint64_t)"logStatusMessage(_:data:)";
      v103 = 0x800000024B802470;
      v104 = sub_24B7B2DC4;
      goto LABEL_42;
    case '^':
      if (*(_BYTE *)(v6 + OBJC_IVAR____TtC5BKDM16BioLog_calibrationDataLoggingEnabled) == 1)
      {
        MEMORY[0x24BDAC7A8](v46);
        v136 = v6;
        v88 = v6 + OBJC_IVAR____TtC5BKDM16BioLog_logger;
        v89 = sub_24B7F34D8();
        v90 = *(_QWORD *)(v89 - 8);
        v91 = (uint64_t)v160;
        (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(v160, v88, v89);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v90 + 56))(v91, 0, 1, v89);
        v92 = sub_24B7B4BE0((uint64_t (*)(uint64_t))sub_24B7B2DE4, (uint64_t)&v134, 0x6372756F73206F4ELL, 0xEA00000000002165, v91, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 506, (uint64_t)"logStatusMessage(_:data:)", 25, 2u);
        sub_24B7B2F44(v91, &qword_2579B03C8);
        if ((v92 & 1) != 0)
          sub_24B79F498(0);
      }
      return;
    case 'c':
      MEMORY[0x24BDAC7A8](v46);
      v136 = v6;
      v98 = v6 + OBJC_IVAR____TtC5BKDM16BioLog_logger;
      v99 = sub_24B7F34D8();
      v100 = *(_QWORD *)(v99 - 8);
      v101 = (uint64_t)v160;
      (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v160, v98, v99);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v100 + 56))(v101, 0, 1, v99);
      v102 = 0xD000000000000034;
      LOBYTE(v137) = 2;
      v136 = 25;
      v134 = 521;
      v135 = (uint64_t)"logStatusMessage(_:data:)";
      v103 = 0x800000024B802430;
      v104 = sub_24B7B2D78;
LABEL_42:
      v116 = sub_24B7B52EC((void (*)(uint64_t *__return_ptr, uint64_t))v104, (uint64_t)&v134, v102, v103, v101, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, v134, v135, v136, v137);
      sub_24B7B2F44(v101, &qword_2579B03C8);
      if (v116)
      {
        v117 = sub_24B79AD38();
        v119 = v118;
        v120 = _s8SequenceVMa(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 48))(v119, 1, v120))
        {
          v121 = (uint64_t)v150;
          sub_24B7F3454();
          v122 = sub_24B7F3460();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 56))(v121, 0, 1, v122);
          sub_24B7B2D80(v121, v119 + *(int *)(v120 + 44), &qword_2579B0488);
        }
        ((void (*)(_BYTE *, _QWORD))v117)(v161, 0);
LABEL_46:
        sub_24B7A822C();
      }
      break;
    default:
      return;
  }
}

uint64_t sub_24B7A4A18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0368);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1 + OBJC_IVAR____TtC5BKDM16BioLog_sequence;
  swift_beginAccess();
  sub_24B7B2F00(v7, (uint64_t)v6, &qword_2579B0368);
  v8 = _s8SequenceVMa(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) == 1)
  {
    result = sub_24B7B2F44((uint64_t)v6, &qword_2579B0368);
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  else
  {
    *(_QWORD *)(a2 + 24) = v8;
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)a2);
    return sub_24B7B2F80((uint64_t)v6, (uint64_t)boxed_opaque_existential_1Tm, _s8SequenceVMa);
  }
  return result;
}

uint64_t sub_24B7A4B1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0368);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04A8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1 + OBJC_IVAR____TtC5BKDM16BioLog_sequence;
  swift_beginAccess();
  sub_24B7B2F00(v10, (uint64_t)v6, &qword_2579B0368);
  v11 = _s8SequenceVMa(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11))
  {
    v12 = &qword_2579B0368;
    v13 = (uint64_t)v6;
LABEL_5:
    result = sub_24B7B2F44(v13, v12);
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  sub_24B7B2F00((uint64_t)&v6[*(int *)(v11 + 64)], (uint64_t)v9, &qword_2579B04A8);
  sub_24B7B2F44((uint64_t)v6, &qword_2579B0368);
  v14 = _s8SequenceV10EnrollmentVMa(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v9, 1, v14) == 1)
  {
    v12 = &qword_2579B04A8;
    v13 = (uint64_t)v9;
    goto LABEL_5;
  }
  *(_QWORD *)(a2 + 24) = v14;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)a2);
  return sub_24B7B2F80((uint64_t)v9, (uint64_t)boxed_opaque_existential_1Tm, _s8SequenceV10EnrollmentVMa);
}

uint64_t sub_24B7A4CC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0368);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1 + OBJC_IVAR____TtC5BKDM16BioLog_sequence;
  swift_beginAccess();
  sub_24B7B2F00(v7, (uint64_t)v6, &qword_2579B0368);
  v8 = _s8SequenceVMa(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8))
  {
    result = sub_24B7B2F44((uint64_t)v6, &qword_2579B0368);
LABEL_4:
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  v10 = (uint64_t *)&v6[*(int *)(v8 + 72)];
  v11 = *v10;
  v12 = v10[1];
  v13 = v10[2];
  sub_24B7B2FC4(*v10, v12, v13);
  result = sub_24B7B2F44((uint64_t)v6, &qword_2579B0368);
  if (v13 == 2)
    goto LABEL_4;
  *(_QWORD *)a2 = v11;
  *(_QWORD *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v13;
  *(_QWORD *)(a2 + 24) = &_s8SequenceV12FingerDetectVN;
  return result;
}

uint64_t sub_24B7A4DF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t matched;
  uint64_t result;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0368);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04B0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1 + OBJC_IVAR____TtC5BKDM16BioLog_sequence;
  swift_beginAccess();
  sub_24B7B2F00(v10, (uint64_t)v6, &qword_2579B0368);
  v11 = _s8SequenceVMa(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11))
  {
    v12 = &qword_2579B0368;
    v13 = (uint64_t)v6;
LABEL_5:
    result = sub_24B7B2F44(v13, v12);
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  sub_24B7B2F00((uint64_t)&v6[*(int *)(v11 + 68)], (uint64_t)v9, &qword_2579B04B0);
  sub_24B7B2F44((uint64_t)v6, &qword_2579B0368);
  matched = _s8SequenceV5MatchVMa(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(matched - 8) + 48))(v9, 1, matched) == 1)
  {
    v12 = &qword_2579B04B0;
    v13 = (uint64_t)v9;
    goto LABEL_5;
  }
  *(_QWORD *)(a2 + 24) = matched;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)a2);
  return sub_24B7B2F80((uint64_t)v9, (uint64_t)boxed_opaque_existential_1Tm, _s8SequenceV5MatchVMa);
}

uint64_t sub_24B7A5030(int a1)
{
  char *v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  _QWORD v16[2];
  _QWORD aBlock[6];

  v3 = sub_24B7F34E4();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_24B7F34FC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = *(_QWORD *)&v1[OBJC_IVAR____TtC5BKDM16BioLog_dispatchQueueLogging];
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v1;
  *(_DWORD *)(v12 + 24) = a1;
  aBlock[4] = sub_24B7B1A44;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B79A8C4;
  aBlock[3] = &block_descriptor_6;
  v13 = _Block_copy(aBlock);
  v14 = v1;
  sub_24B7F34F0();
  v16[1] = MEMORY[0x24BEE4AF8];
  sub_24B7B19A0(&qword_2579B0370, v4, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0378);
  sub_24B7B19E0(&qword_2579B0380, &qword_2579B0378);
  sub_24B7F376C();
  MEMORY[0x24BD26F50](0, v11, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

uint64_t sub_24B7A521C(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];
  _BYTE v14[32];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0468);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = a2;
  swift_beginAccess();
  sub_24B7BD830(a2);
  swift_endAccess();
  v7 = sub_24B79AD38();
  v9 = v8;
  v10 = _s8SequenceVMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    v11 = _s6SourceVMa(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v5, 1, 1, v11);
    v13[12] = 1;
    sub_24B7C24FC(5, (uint64_t)v5, v6, 0, 0, 1, 0x100000000uLL, 0, 1, 1);
    sub_24B7B2F44((uint64_t)v5, &qword_2579B0468);
  }
  return ((uint64_t (*)(_BYTE *, _QWORD))v7)(v14, 0);
}

uint64_t sub_24B7A53B4(uint64_t a1)
{
  return sub_24B7A95AC(a1, (uint64_t)&unk_251CA0ED8, (uint64_t)sub_24B7B1A50, (uint64_t)&block_descriptor_12);
}

uint64_t sub_24B7A53D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[16];
  _BYTE v13[32];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0468);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  sub_24B7BD830(a2);
  swift_endAccess();
  v6 = sub_24B79AD38();
  v8 = v7;
  v9 = _s8SequenceVMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v10 = _s6SourceVMa(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
    v12[12] = 1;
    sub_24B7C24FC(5, (uint64_t)v5, a2, 0, 0, 1, 0x100000000uLL, 0, 1, 1);
    sub_24B7B2F44((uint64_t)v5, &qword_2579B0468);
  }
  return ((uint64_t (*)(_BYTE *, _QWORD))v6)(v13, 0);
}

uint64_t sub_24B7A5564(char a1)
{
  return sub_24B7A5E38(a1, (uint64_t)&unk_251CA0F28, (uint64_t)sub_24B7B1A7C, (uint64_t)&block_descriptor_18);
}

uint64_t sub_24B7A5580(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  _BYTE v13[16];
  _BYTE v14[32];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0468);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  sub_24B7BD8F8(a2);
  swift_endAccess();
  v6 = sub_24B79AD38();
  v8 = v7;
  v9 = _s8SequenceVMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v10 = _s6SourceVMa(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
    v13[12] = 1;
    if ((a2 & 1) != 0)
      v11 = 6;
    else
      v11 = 7;
    sub_24B7C24FC(v11, (uint64_t)v5, 0, 1, 0, 1, 0x100000000uLL, 0, 1, 1);
    sub_24B7B2F44((uint64_t)v5, &qword_2579B0468);
  }
  return ((uint64_t (*)(_BYTE *, _QWORD))v6)(v14, 0);
}

uint64_t sub_24B7A571C(char a1)
{
  return sub_24B7A5E38(a1, (uint64_t)&unk_251CA0F78, (uint64_t)sub_24B7B1A88, (uint64_t)&block_descriptor_24);
}

uint64_t sub_24B7A5738(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  _BYTE v13[16];
  _BYTE v14[32];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0468);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  sub_24B7BCB3C(a2);
  swift_endAccess();
  v6 = sub_24B79AD38();
  v8 = v7;
  v9 = _s8SequenceVMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v10 = _s6SourceVMa(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
    v13[12] = 1;
    if ((a2 & 1) != 0)
      v11 = 8;
    else
      v11 = 9;
    sub_24B7C24FC(v11, (uint64_t)v5, 0, 1, 0, 1, 0x100000000uLL, 0, 1, 1);
    sub_24B7B2F44((uint64_t)v5, &qword_2579B0468);
  }
  return ((uint64_t (*)(_BYTE *, _QWORD))v6)(v14, 0);
}

uint64_t sub_24B7A58D4(__int16 a1, int a2)
{
  char *v2;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  _QWORD v18[2];
  _QWORD aBlock[6];

  v5 = sub_24B7F34E4();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_24B7F34FC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *(_QWORD *)&v2[OBJC_IVAR____TtC5BKDM16BioLog_dispatchQueueLogging];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v2;
  *(_WORD *)(v14 + 24) = a1;
  *(_DWORD *)(v14 + 28) = a2;
  aBlock[4] = sub_24B7B1AB8;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B79A8C4;
  aBlock[3] = &block_descriptor_30;
  v15 = _Block_copy(aBlock);
  v16 = v2;
  sub_24B7F34F0();
  v18[1] = MEMORY[0x24BEE4AF8];
  sub_24B7B19A0(&qword_2579B0370, v6, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0378);
  sub_24B7B19E0(&qword_2579B0380, &qword_2579B0378);
  sub_24B7F376C();
  MEMORY[0x24BD26F50](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t sub_24B7A5AC8(uint64_t a1, unsigned __int16 a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t (*v8)();
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  _BYTE v15[32];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0468);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  sub_24B7BDE98(a2, a3);
  swift_endAccess();
  v8 = sub_24B79AD38();
  v10 = v9;
  v11 = _s8SequenceVMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    v12 = _s6SourceVMa(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v7, 1, 1, v12);
    v14[12] = 0;
    sub_24B7C24FC(10, (uint64_t)v7, a2, 0, 0, 1, a3, 0, 1, 1);
    sub_24B7B2F44((uint64_t)v7, &qword_2579B0468);
  }
  return ((uint64_t (*)(_BYTE *, _QWORD))v8)(v15, 0);
}

uint64_t sub_24B7A5C6C(uint64_t a1)
{
  return sub_24B7A95AC(a1, (uint64_t)&unk_251CA1018, (uint64_t)sub_24B7B1AC8, (uint64_t)&block_descriptor_36);
}

uint64_t sub_24B7A5C88(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[16];
  _BYTE v13[32];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0468);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  sub_24B7BD9DC(a2);
  swift_endAccess();
  v6 = sub_24B79AD38();
  v8 = v7;
  v9 = _s8SequenceVMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v10 = _s6SourceVMa(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
    v12[12] = 1;
    sub_24B7C24FC(11, (uint64_t)v5, 0, 1, a2, 0, 0x100000000uLL, 0, 1, 1);
    sub_24B7B2F44((uint64_t)v5, &qword_2579B0468);
  }
  return ((uint64_t (*)(_BYTE *, _QWORD))v6)(v13, 0);
}

uint64_t sub_24B7A5E1C(char a1)
{
  return sub_24B7A5E38(a1, (uint64_t)&unk_251CA1068, (uint64_t)sub_24B7B1AD0, (uint64_t)&block_descriptor_42);
}

uint64_t sub_24B7A5E38(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v8 = sub_24B7F34E4();
  v20 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_24B7F34FC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(_QWORD *)&v4[OBJC_IVAR____TtC5BKDM16BioLog_dispatchQueueLogging];
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v4;
  *(_BYTE *)(v15 + 24) = a1;
  aBlock[4] = a3;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B79A8C4;
  aBlock[3] = a4;
  v16 = _Block_copy(aBlock);
  v17 = v4;
  sub_24B7F34F0();
  v21 = MEMORY[0x24BEE4AF8];
  sub_24B7B19A0(&qword_2579B0370, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0378);
  sub_24B7B19E0(&qword_2579B0380, &qword_2579B0378);
  sub_24B7F376C();
  MEMORY[0x24BD26F50](0, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

uint64_t sub_24B7A6020(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  _BYTE v13[16];
  _BYTE v14[32];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0468);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  sub_24B7BC850(a2);
  swift_endAccess();
  v6 = sub_24B79AD38();
  v8 = v7;
  v9 = _s8SequenceVMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v10 = _s6SourceVMa(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
    v13[12] = 1;
    if ((a2 & 1) != 0)
      v11 = 12;
    else
      v11 = 13;
    sub_24B7C24FC(v11, (uint64_t)v5, 0, 1, 0, 1, 0x100000000uLL, 0, 1, 1);
    sub_24B7B2F44((uint64_t)v5, &qword_2579B0468);
  }
  return ((uint64_t (*)(_BYTE *, _QWORD))v6)(v14, 0);
}

void sub_24B7A61BC(int a1, void *a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v47)(uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)();
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t);
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  void *v69;
  unsigned int v70;
  char *v71;
  id v72;
  uint64_t (*v73)(uint64_t);
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  size_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  id v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  void *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t);
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t (*v123)(uint64_t);
  uint64_t v124;
  void (*v125)(char *, uint64_t);
  char *v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  _QWORD *v137;
  id v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t (*v141)(char *, uint64_t, uint64_t);
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  void (*v148)(uint64_t, uint64_t, uint64_t);
  uint64_t v149;
  uint64_t (*v150)(uint64_t);
  void (*v151)(char *, uint64_t);
  unint64_t v152;
  uint64_t (*v153)(uint64_t);
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  int v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  char v168[8];
  char *v169;
  uint64_t (*v170)(uint64_t);
  uint64_t v171;
  id v172;
  unint64_t v173;
  uint64_t v174;

  v3 = v2;
  v138 = a2;
  v160 = a1;
  v174 = *MEMORY[0x24BDAC8D0];
  v4 = _s5StateV8UserInfoVMa(0);
  v158 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v157 = (uint64_t)&v129 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = _s6SourceVMa(0);
  v131 = *(_QWORD *)(v130 - 8);
  MEMORY[0x24BDAC7A8](v130);
  v144 = (uint64_t)&v129 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = _s8SequenceVMa(0);
  v143 = *(_QWORD *)(v147 - 8);
  MEMORY[0x24BDAC7A8](v147);
  v132 = (uint64_t)&v129 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0368);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v133 = (uint64_t)&v129 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v137 = (void (**)(char *, uint64_t, uint64_t, uint64_t))((char *)&v129 - v11);
  v139 = _s5StateVMa(0);
  v12 = MEMORY[0x24BDAC7A8](v139);
  v136 = (uint64_t)&v129 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v140 = (uint64_t)&v129 - v14;
  v163 = sub_24B7F3328();
  v15 = *(_QWORD *)(v163 - 8);
  MEMORY[0x24BDAC7A8](v163);
  v17 = (char *)&v129 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = sub_24B7F3460();
  v155 = *(_QWORD *)(v156 - 8);
  v18 = MEMORY[0x24BDAC7A8](v156);
  v135 = (char *)&v129 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v161 = (char *)&v129 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (uint64_t)&v129 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_24B7F33D0();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v154 = (char *)&v129 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v162 = (char *)&v129 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v129 - v30;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0360);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v142 = (uint64_t)&v129 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v146 = (char *)&v129 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)&v129 - v37;
  v169 = v2;
  v172 = 0;
  v173 = 0xE000000000000000;
  sub_24B7F37A8();
  swift_bridgeObjectRelease();
  v172 = (id)0xD000000000000016;
  v173 = 0x800000024B802060;
  v39 = (uint64_t)&v2[OBJC_IVAR____TtC5BKDM16BioLog_sequenceURL];
  swift_beginAccess();
  v145 = (char *)v39;
  sub_24B7B2F00(v39, (uint64_t)v38, &qword_2579B0360);
  v141 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v40 = v141(v38, 1, v24);
  v159 = v31;
  v165 = v25;
  if (v40)
  {
    sub_24B7B2F44((uint64_t)v38, &qword_2579B0360);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v31, v38, v24);
    sub_24B7B2F44((uint64_t)v38, &qword_2579B0360);
    sub_24B7F3358();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v31, v24);
  }
  sub_24B7F35BC();
  swift_bridgeObjectRelease();
  sub_24B7F35BC();
  v41 = (uint64_t)v172;
  v42 = v173;
  v43 = &v3[OBJC_IVAR____TtC5BKDM16BioLog_logger];
  v44 = sub_24B7F34D8();
  v166 = v3;
  v45 = *(_QWORD *)(v44 - 8);
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16);
  v149 = (uint64_t)v43;
  v148 = v46;
  v46(v23, (uint64_t)v43, v44);
  v47 = *(uint64_t (**)(uint64_t))(v45 + 56);
  v48 = v166;
  v150 = v47;
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v47)(v23, 0, 1, v44);
  v49 = (uint64_t)"startSequence(type:client:)";
  v50 = sub_24B7B4BE0((uint64_t (*)(uint64_t))sub_24B7B2634, (uint64_t)v168, v41, v42, v23, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 647, (uint64_t)"startSequence(type:client:)", 27, 2u);
  swift_bridgeObjectRelease();
  sub_24B7B2F44(v23, &qword_2579B03C8);
  v51 = v147;
  if ((v50 & 1) == 0)
  {
    v52 = sub_24B79AD38();
    v54 = v53;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v143 + 48))(v53, 1, v51))
      *(_BYTE *)(v54 + *(int *)(v51 + 32)) = 1;
    ((void (*)(id *, _QWORD))v52)(&v172, 0);
    v48 = v166;
    v50 = (uint64_t)v166;
    sub_24B7A822C();
  }
  v164 = v24;
  v55 = (uint64_t (*)(uint64_t))v161;
  sub_24B7F3454();
  v56 = *(_QWORD *)&v48[OBJC_IVAR____TtC5BKDM16BioLog_sequenceNumber];
  if (v56 == -1)
  {
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    swift_once();
    goto LABEL_13;
  }
  *(_QWORD *)&v48[OBJC_IVAR____TtC5BKDM16BioLog_sequenceNumber] = v56 + 1;
  type metadata accessor for BioLogHelper();
  v134 = v56;
  v172 = (id)sub_24B7B8BEC(v56);
  v173 = v57;
  v58 = *MEMORY[0x24BDCD790];
  v59 = v163;
  v153 = *(uint64_t (**)(uint64_t))(v15 + 104);
  ((void (*)(char *, uint64_t, uint64_t))v153)(v17, v58, v163);
  v60 = sub_24B7B22B8();
  v61 = v146;
  v152 = v60;
  sub_24B7F33C4();
  v62 = *(void (**)(char *, uint64_t))(v15 + 8);
  v167 = v17;
  v151 = v62;
  v62(v17, v59);
  swift_bridgeObjectRelease();
  v63 = v164;
  v64 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v165 + 56);
  v64(v61, 0, 1, v164);
  v51 = (uint64_t)v145;
  swift_beginAccess();
  v65 = (uint64_t)v61;
  v49 = (uint64_t)"startSequence(type:client:)";
  sub_24B7B2D80(v65, v51, &qword_2579B0360);
  v66 = swift_endAccess();
  MEMORY[0x24BDAC7A8](v66);
  v148(v23, v149, v44);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v150)(v23, 0, 1, v44);
  v67 = sub_24B7B52EC((void (*)(uint64_t *__return_ptr, uint64_t))sub_24B7B46CC, (uint64_t)&v128, 0x65636E6575716573, 0xEB000000004C5255, v23, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 658, (uint64_t)"startSequence(type:client:)", 27, 2u);
  sub_24B7B2F44(v23, &qword_2579B03C8);
  if (!v67)
  {
LABEL_18:
    (*(void (**)(char *, uint64_t))(v155 + 8))(v161, v156);
    goto LABEL_19;
  }
  v129 = v64;
  v68 = v142;
  sub_24B7B2F00(v51, v142, &qword_2579B0360);
  if (v141((char *)v68, 1, v63) == 1)
  {
    (*(void (**)(char *, uint64_t))(v155 + 8))(v161, v156);
    sub_24B7B2F44(v68, &qword_2579B0360);
    goto LABEL_19;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v165 + 32))(v162, v68, v63);
  v55 = (uint64_t (*)(uint64_t))objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v50 = sub_24B7F3364();
  if (qword_2579B1688 != -1)
    goto LABEL_55;
LABEL_13:
  type metadata accessor for FileAttributeKey(0);
  sub_24B7B19A0(&qword_2579B03F8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_24B7F8E20);
  v69 = (void *)sub_24B7F3508();
  v172 = 0;
  v70 = objc_msgSend(v55, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v50, 1, v69, &v172);

  v71 = v167;
  if (!v70)
  {
    v92 = v172;
    v93 = (void *)sub_24B7F32E0();

    swift_willThrow();
    v172 = 0;
    v173 = 0xE000000000000000;
    sub_24B7F37A8();
    swift_bridgeObjectRelease();
    v172 = (id)0xD000000000000020;
    v173 = 0x800000024B8020C0;
    sub_24B7B19A0(&qword_2579B0428, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    v94 = v51;
    v95 = v162;
    v96 = v164;
    sub_24B7F3988();
    sub_24B7F35BC();
    swift_bridgeObjectRelease();
    sub_24B7F35BC();
    v97 = (uint64_t)v172;
    v98 = v173;
    v148(v23, v149, v44);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v150)(v23, 0, 1, v44);
    sub_24B7B47F4(v93, v97, v98, v23, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 663, v49, 27, 2u);
    swift_bridgeObjectRelease();
    sub_24B7B2F44(v23, &qword_2579B03C8);
    v99 = (uint64_t)v146;
    v129(v146, 1, 1, v96);
    swift_beginAccess();
    sub_24B7B2D80(v99, v94, &qword_2579B0360);
    swift_endAccess();

    (*(void (**)(char *, uint64_t))(v165 + 8))(v95, v96);
    goto LABEL_18;
  }
  v72 = v172;
  v73 = *(uint64_t (**)(uint64_t))(*(_QWORD *)*sub_24B7B571C() + 200);
  v74 = swift_retain();
  v75 = v73(v74);
  swift_release();
  v76 = v147;
  v77 = v166;
  v78 = &v166[OBJC_IVAR____TtC5BKDM16BioLog_state];
  swift_beginAccess();
  sub_24B7BE0E8(v75);
  swift_endAccess();
  swift_bridgeObjectRelease();
  v79 = v140;
  sub_24B7B2768((uint64_t)v78, v140, _s5StateVMa);
  swift_beginAccess();
  v80 = swift_bridgeObjectRetain();
  v81 = sub_24B7AF780(v80);
  swift_bridgeObjectRelease();
  v82 = *(int *)(v139 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v79 + v82) = v81;
  v51 = (uint64_t)v135;
  (*(void (**)(char *, char *, uint64_t))(v155 + 16))(v135, v161, v156);
  v83 = v136;
  sub_24B7B2768(v79, v136, _s5StateVMa);
  v84 = v138;
  v85 = v138;
  v86 = v137;
  sub_24B7C112C(v134, v51, v83, v84, v137);
  v87 = v143;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v143 + 56))(v86, 0, 1, v76);
  v88 = (uint64_t)&v77[OBJC_IVAR____TtC5BKDM16BioLog_sequence];
  swift_beginAccess();
  sub_24B7B2D80((uint64_t)v86, v88, &qword_2579B0368);
  v89 = swift_endAccess();
  MEMORY[0x24BDAC7A8](v89);
  v148(v23, v149, v44);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v150)(v23, 0, 1, v44);
  v55 = (uint64_t (*)(uint64_t))sub_24B7B52EC((void (*)(uint64_t *__return_ptr, uint64_t))sub_24B7B46D0, (uint64_t)&v128, 0x65636E6575716573, 0xE800000000000000, v23, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 673, (uint64_t)"startSequence(type:client:)", 27, 2u);
  sub_24B7B2F44(v23, &qword_2579B03C8);
  if ((v55 & 1) == 0)
    goto LABEL_51;
  v90 = v88;
  v91 = v133;
  sub_24B7B2F00(v90, v133, &qword_2579B0368);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48))(v91, 1, v76) == 1)
  {
    (*(void (**)(char *, uint64_t))(v165 + 8))(v162, v164);
    (*(void (**)(char *, uint64_t))(v155 + 8))(v161, v156);
    sub_24B7B2F44(v91, &qword_2579B0368);
    goto LABEL_52;
  }
  v100 = v91;
  v50 = v132;
  sub_24B7B2F80(v100, v132, _s8SequenceVMa);
  v101 = (char *)(v50 + *(int *)(v76 + 24));
  v102 = *(_QWORD *)&v101[*(int *)(v139 + 72)];
  v103 = *(_QWORD *)(v102 + 16);
  if (v103)
  {
    v145 = v101;
    v149 = v144 + *(int *)(v130 + 32);
    v146 = &v166[OBJC_IVAR____TtC5BKDM16BioLog_calibrationDataStoreURL];
    v104 = v102 + ((*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80));
    v148 = *(void (**)(uint64_t, uint64_t, uint64_t))(v131 + 72);
    LODWORD(v147) = *MEMORY[0x24BDCD7A0];
    v143 = v102;
    swift_bridgeObjectRetain();
    v105 = v163;
    do
    {
      v50 = v144;
      sub_24B7B2768(v104, v144, _s6SourceVMa);
      v55 = *(uint64_t (**)(uint64_t))v149;
      v106 = *(_QWORD *)(v149 + 8);
      swift_bridgeObjectRetain();
      sub_24B7B2E38(v50, _s6SourceVMa);
      if (v106)
      {
        v170 = v55;
        v171 = v106;
        v107 = v167;
        v108 = v147;
        v150 = v55;
        v55 = v153;
        ((void (*)(char *, _QWORD, uint64_t))v153)(v167, v147, v105);
        sub_24B7F33B8();
        v109 = v151;
        v151(v107, v105);
        v170 = v150;
        v171 = v106;
        ((void (*)(char *, uint64_t, uint64_t))v55)(v107, v108, v105);
        v51 = (uint64_t)v154;
        sub_24B7F33B8();
        v109(v107, v105);
        swift_bridgeObjectRelease();
        v110 = v159;
        sub_24B7A0D64();
        v111 = v164;
        v50 = *(_QWORD *)(v165 + 8);
        ((void (*)(uint64_t, uint64_t))v50)(v51, v164);
        ((void (*)(char *, uint64_t))v50)(v110, v111);
      }
      v104 += (uint64_t)v148;
      --v103;
    }
    while (v103);
    swift_bridgeObjectRelease();
    v71 = v167;
    v101 = v145;
  }
  else
  {
    LODWORD(v147) = *MEMORY[0x24BDCD7A0];
  }
  v112 = *(_QWORD *)&v101[*(int *)(v139 + 76)];
  v113 = *(_QWORD *)(v112 + 64);
  v144 = v112 + 64;
  v114 = 1 << *(_BYTE *)(v112 + 32);
  v115 = -1;
  if (v114 < 64)
    v115 = ~(-1 << v114);
  v49 = v115 & v113;
  v145 = &v166[OBJC_IVAR____TtC5BKDM16BioLog_templateStoreURL];
  v146 = (char *)((unint64_t)(v114 + 63) >> 6);
  v148 = (void (*)(uint64_t, uint64_t, uint64_t))v112;
  swift_bridgeObjectRetain();
  v116 = 0;
  v23 = v147;
  v117 = v159;
  v44 = (uint64_t)v162;
  while (v49)
  {
    v118 = __clz(__rbit64(v49));
    v49 &= v49 - 1;
    v119 = v118 | (v116 << 6);
LABEL_48:
    v50 = v157;
    v55 = _s5StateV8UserInfoVMa;
    sub_24B7B2768(*((_QWORD *)v148 + 7) + *(_QWORD *)(v158 + 72) * v119, v157, _s5StateV8UserInfoVMa);
    v123 = *(uint64_t (**)(uint64_t))(v50 + 16);
    v51 = *(_QWORD *)(v50 + 24);
    swift_bridgeObjectRetain();
    sub_24B7B2E38(v50, _s5StateV8UserInfoVMa);
    if (v51)
    {
      v170 = v123;
      v171 = v51;
      v149 = v49;
      v124 = v163;
      v55 = v153;
      ((void (*)(char *, uint64_t, uint64_t))v153)(v71, v23, v163);
      sub_24B7F33B8();
      v150 = (uint64_t (*)(uint64_t))v116;
      v125 = v151;
      v151(v167, v124);
      v170 = v123;
      v171 = v51;
      ((void (*)(char *, uint64_t, uint64_t))v55)(v167, v23, v124);
      v126 = v154;
      v71 = v167;
      sub_24B7F33B8();
      v127 = v124;
      v49 = v149;
      v125(v71, v127);
      v116 = (uint64_t)v150;
      swift_bridgeObjectRelease();
      sub_24B7A0D64();
      v51 = v164;
      v50 = *(_QWORD *)(v165 + 8);
      ((void (*)(char *, uint64_t))v50)(v126, v164);
      ((void (*)(char *, uint64_t))v50)(v117, v51);
    }
  }
  v120 = v116 + 1;
  if (__OFADD__(v116, 1))
    goto LABEL_54;
  if (v120 >= (uint64_t)v146)
    goto LABEL_50;
  v121 = *(_QWORD *)(v144 + 8 * v120);
  ++v116;
  if (v121)
    goto LABEL_47;
  v116 = v120 + 1;
  if (v120 + 1 >= (uint64_t)v146)
    goto LABEL_50;
  v121 = *(_QWORD *)(v144 + 8 * v116);
  if (v121)
    goto LABEL_47;
  v116 = v120 + 2;
  if (v120 + 2 >= (uint64_t)v146)
    goto LABEL_50;
  v121 = *(_QWORD *)(v144 + 8 * v116);
  if (v121)
    goto LABEL_47;
  v116 = v120 + 3;
  if (v120 + 3 >= (uint64_t)v146)
    goto LABEL_50;
  v121 = *(_QWORD *)(v144 + 8 * v116);
  if (v121)
  {
LABEL_47:
    v49 = (v121 - 1) & v121;
    v119 = __clz(__rbit64(v121)) + (v116 << 6);
    goto LABEL_48;
  }
  v122 = v120 + 4;
  if (v122 >= (uint64_t)v146)
    goto LABEL_50;
  v121 = *(_QWORD *)(v144 + 8 * v122);
  if (v121)
  {
    v116 = v122;
    goto LABEL_47;
  }
  while (1)
  {
    v116 = v122 + 1;
    if (__OFADD__(v122, 1))
      __break(1u);
    if (v116 >= (uint64_t)v146)
      break;
    v121 = *(_QWORD *)(v144 + 8 * v116);
    ++v122;
    if (v121)
      goto LABEL_47;
  }
LABEL_50:
  swift_release();
  sub_24B7B2E38(v132, _s8SequenceVMa);
LABEL_51:
  (*(void (**)(char *, uint64_t))(v165 + 8))(v162, v164);
  (*(void (**)(char *, uint64_t))(v155 + 8))(v161, v156);
LABEL_52:
  sub_24B7B2E38(v140, _s5StateVMa);
LABEL_19:
  sub_24B7A76C8(v166, v160);
}

void sub_24B7A76C8(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21[5];
  uint64_t v22;

  v4 = sub_24B7F33D0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0360);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1;
  v21[0] = (id)sub_24B7F34B4();
  v12 = sub_24B7F36B8();
  if (os_log_type_enabled((os_log_t)v21[0], v12))
  {
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v22 = v14;
    *(_DWORD *)v13 = 136315394;
    v15 = sub_24B7B889C(a2);
    v21[2] = (id)sub_24B7AC4E4(v15, v16, &v22);
    sub_24B7F3724();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    v17 = (uint64_t)v11 + OBJC_IVAR____TtC5BKDM16BioLog_sequenceURL;
    swift_beginAccess();
    sub_24B7B2F00(v17, (uint64_t)v10, &qword_2579B0360);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4))
    {
      sub_24B7B2F44((uint64_t)v10, &qword_2579B0360);
      v18 = 0xE300000000000000;
      v19 = 7104878;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
      sub_24B7B2F44((uint64_t)v10, &qword_2579B0360);
      v19 = sub_24B7F3358();
      v18 = v20;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    v21[1] = (id)sub_24B7AC4E4(v19, v18, &v22);
    sub_24B7F3724();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24B74E000, (os_log_t)v21[0], v12, "startSequence(type: %s) > %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24BD27D9C](v14, -1, -1);
    MEMORY[0x24BD27D9C](v13, -1, -1);

  }
  else
  {

  }
}

BOOL sub_24B7A79AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0368);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = a1 + OBJC_IVAR____TtC5BKDM16BioLog_sequence;
  swift_beginAccess();
  sub_24B7B2F00(v5, (uint64_t)v4, &qword_2579B0368);
  v6 = _s8SequenceVMa(0);
  v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6) == 1;
  sub_24B7B2F44((uint64_t)v4, &qword_2579B0368);
  return v7;
}

uint64_t sub_24B7A7A7C(int a1, void *a2)
{
  char *v2;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  id v17;
  _QWORD v19[2];
  _QWORD aBlock[6];

  v5 = sub_24B7F34E4();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_24B7F34FC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = *(_QWORD *)&v2[OBJC_IVAR____TtC5BKDM16BioLog_dispatchQueueLogging];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v2;
  *(_QWORD *)(v14 + 24) = a2;
  *(_DWORD *)(v14 + 32) = a1;
  aBlock[4] = sub_24B7B1B08;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B79A8C4;
  aBlock[3] = &block_descriptor_48;
  v15 = _Block_copy(aBlock);
  v16 = v2;
  v17 = a2;
  sub_24B7F34F0();
  v19[1] = MEMORY[0x24BEE4AF8];
  sub_24B7B19A0(&qword_2579B0370, v6, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0378);
  sub_24B7B19E0(&qword_2579B0380, &qword_2579B0378);
  sub_24B7F376C();
  MEMORY[0x24BD26F50](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t sub_24B7A7CCC(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  void *v15;
  char *v16;
  id v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v7 = sub_24B7F34E4();
  v20 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_24B7F34FC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(_QWORD *)&v3[OBJC_IVAR____TtC5BKDM16BioLog_dispatchQueueLogging];
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v3;
  v14[3] = a3;
  v14[4] = a1;
  v14[5] = a2;
  aBlock[4] = sub_24B7B1BC8;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B79A8C4;
  aBlock[3] = &block_descriptor_54;
  v15 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  v16 = v3;
  v17 = a3;
  swift_bridgeObjectRetain();
  sub_24B7F34F0();
  v21 = MEMORY[0x24BEE4AF8];
  sub_24B7B19A0(&qword_2579B0370, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0378);
  sub_24B7B19E0(&qword_2579B0380, &qword_2579B0378);
  sub_24B7F376C();
  MEMORY[0x24BD26F50](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t sub_24B7A7FA0(uint64_t a1, void *a2)
{
  char *v2;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  void *v14;
  char *v15;
  id v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v5 = sub_24B7F34E4();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v19 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_24B7F34FC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = *(_QWORD *)&v2[OBJC_IVAR____TtC5BKDM16BioLog_dispatchQueueLogging];
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v2;
  v13[3] = a2;
  v13[4] = a1;
  aBlock[4] = sub_24B7B1C54;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B79A8C4;
  aBlock[3] = &block_descriptor_60;
  v14 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  v15 = v2;
  v16 = a2;
  sub_24B7F34F0();
  v20 = MEMORY[0x24BEE4AF8];
  sub_24B7B19A0(&qword_2579B0370, v6, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0378);
  sub_24B7B19E0(&qword_2579B0380, &qword_2579B0378);
  sub_24B7F376C();
  MEMORY[0x24BD26F50](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_24B7A822C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  _QWORD *v30;
  uint64_t result;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t);
  _OWORD *v41;
  __int128 v42;
  uint64_t *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  char *v51;
  void *v52;
  id v53;
  void *v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  void *v59;
  char *v60;
  void *v61;
  unsigned int v62;
  id v63;
  id v64;
  void *v65;
  id v66;
  id v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  unint64_t v71;
  void (*v72)(char *);
  _QWORD *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  _OWORD *v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t *v85;
  char v86[16];
  uint64_t v87;
  id v88[3];
  _OWORD v89[2];
  _BYTE v90[28];
  uint64_t v91;

  v1 = v0;
  v91 = *MEMORY[0x24BDAC8D0];
  v76 = sub_24B7F3328();
  v73 = *(_QWORD **)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v75 = (char *)&v71 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = _s12SequenceRootVMa(0);
  MEMORY[0x24BDAC7A8](v3);
  v81 = (_OWORD *)((char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0360);
  MEMORY[0x24BDAC7A8](v5);
  v77 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_24B7F33D0();
  v79 = *(_QWORD *)(v82 - 8);
  v7 = MEMORY[0x24BDAC7A8](v82);
  v74 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v78 = (char *)&v71 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v80 = (char *)&v71 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0368);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v72 = (void (*)(char *))((char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v71 - v15;
  v17 = _s8SequenceVMa(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v85 = (uint64_t *)((char *)&v71 - v22);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = v0;
  v26 = v0 + OBJC_IVAR____TtC5BKDM16BioLog_logger;
  v27 = sub_24B7F34D8();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
  v84 = v26;
  v83 = v29;
  v29(v25, v26, v27);
  v30 = *(_QWORD **)(v28 + 56);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v30)(v25, 0, 1, v27);
  LOBYTE(v28) = sub_24B7B52EC((void (*)(uint64_t *__return_ptr, uint64_t))sub_24B7B46D0, (uint64_t)v86, 0x65636E6575716573, 0xE800000000000000, (uint64_t)v25, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 709, (uint64_t)"finishSequence()", 16, 2u);
  result = sub_24B7B2F44((uint64_t)v25, &qword_2579B03C8);
  if ((v28 & 1) != 0)
  {
    v32 = v1 + OBJC_IVAR____TtC5BKDM16BioLog_sequence;
    swift_beginAccess();
    sub_24B7B2F00(v32, (uint64_t)v16, &qword_2579B0368);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    {
      v33 = &qword_2579B0368;
      return sub_24B7B2F44((uint64_t)v16, v33);
    }
    v34 = (uint64_t)v16;
    v35 = (uint64_t)v85;
    v36 = sub_24B7B2F80(v34, (uint64_t)v85, _s8SequenceVMa);
    v71 = (unint64_t)&v71;
    MEMORY[0x24BDAC7A8](v36);
    v83(v25, v84, v27);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v30)(v25, 0, 1, v27);
    v37 = sub_24B7B52EC((void (*)(uint64_t *__return_ptr, uint64_t))sub_24B7B46CC, (uint64_t)&v70, 0x65636E6575716573, 0xEB000000004C5255, (uint64_t)v25, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 710, (uint64_t)"finishSequence()", 16, 2u);
    sub_24B7B2F44((uint64_t)v25, &qword_2579B03C8);
    if (v37)
    {
      v38 = v1 + OBJC_IVAR____TtC5BKDM16BioLog_sequenceURL;
      swift_beginAccess();
      v16 = v77;
      sub_24B7B2F00(v38, (uint64_t)v77, &qword_2579B0360);
      v39 = v79;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v16, 1, v82) == 1)
      {
        sub_24B7B2E38((uint64_t)v85, _s8SequenceVMa);
        v33 = &qword_2579B0360;
        return sub_24B7B2F44((uint64_t)v16, v33);
      }
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v80, v16, v82);
      v42 = *(_OWORD *)(v1 + OBJC_IVAR____TtC5BKDM16BioLog_logInfo + 16);
      v89[0] = *(_OWORD *)(v1 + OBJC_IVAR____TtC5BKDM16BioLog_logInfo);
      v89[1] = v42;
      *(_OWORD *)v90 = *(_OWORD *)(v1 + OBJC_IVAR____TtC5BKDM16BioLog_logInfo + 32);
      *(_OWORD *)&v90[12] = *(_OWORD *)(v1 + OBJC_IVAR____TtC5BKDM16BioLog_logInfo + 44);
      v43 = v85;
      sub_24B7B2768((uint64_t)v85, (uint64_t)v21, _s8SequenceVMa);
      sub_24B7B24D0((uint64_t)v89);
      sub_24B7C94F4(v89, (uint64_t)v21, v81);
      v44 = (uint64_t)v72;
      (*(void (**)(void (*)(char *), uint64_t, uint64_t, uint64_t))(v18 + 56))(v72, 1, 1, v17);
      swift_beginAccess();
      sub_24B7B2D80(v44, v32, &qword_2579B0368);
      swift_endAccess();
      type metadata accessor for BioLogHelper();
      v88[0] = (id)sub_24B7B8D4C(*v43);
      v88[1] = v45;
      LODWORD(v77) = *MEMORY[0x24BDCD7A0];
      v46 = v73;
      v72 = (void (*)(char *))v73[13];
      v47 = v75;
      v48 = v76;
      v72(v75);
      v71 = sub_24B7B22B8();
      sub_24B7F33C4();
      v49 = (void (*)(char *, uint64_t))v46[1];
      v49(v47, v48);
      v50 = swift_bridgeObjectRelease();
      MEMORY[0x24BDAC7A8](v50);
      v83(v25, v84, v27);
      v73 = v30;
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v30)(v25, 0, 1, v27);
      sub_24B7B4BE0((uint64_t (*)(uint64_t))sub_24B7B2518, (uint64_t)(&v71 - 6), 0xD000000000000018, 0x800000024B801DA0, (uint64_t)v25, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 716, (uint64_t)"finishSequence()", 16, 2u);
      sub_24B7B2F44((uint64_t)v25, &qword_2579B03C8);
      strcpy((char *)v88, "LatestSequence");
      HIBYTE(v88[1]) = -18;
      ((void (*)(char *, _QWORD, uint64_t))v72)(v47, v77, v48);
      v51 = v74;
      sub_24B7F33B8();
      v49(v47, v48);
      swift_bridgeObjectRelease();
      sub_24B7F3394();
      v79 = *(_QWORD *)(v79 + 8);
      ((void (*)(char *, uint64_t))v79)(v51, v82);
      v52 = (void *)objc_opt_self();
      v53 = objc_msgSend(v52, sel_defaultManager);
      v54 = (void *)sub_24B7F3538();
      v88[0] = 0;
      LODWORD(v48) = objc_msgSend(v53, sel_removeItemAtPath_error_, v54, v88);

      if ((_DWORD)v48)
      {
        v55 = v88[0];
      }
      else
      {
        v56 = v88[0];
        v57 = (void *)sub_24B7F32E0();

        swift_willThrow();
      }
      v58 = objc_msgSend(v52, sel_defaultManager);
      v59 = (void *)sub_24B7F3538();
      v60 = v80;
      sub_24B7F3358();
      v61 = (void *)sub_24B7F3538();
      swift_bridgeObjectRelease();
      v88[0] = 0;
      v62 = objc_msgSend(v58, sel_createSymbolicLinkAtPath_withDestinationPath_error_, v59, v61, v88);

      if (v62)
      {
        v63 = v88[0];
        swift_bridgeObjectRelease();
      }
      else
      {
        v64 = v88[0];
        v65 = (void *)sub_24B7F32E0();

        swift_willThrow();
        v88[0] = 0;
        v88[1] = (id)0xE000000000000000;
        sub_24B7F37A8();
        swift_bridgeObjectRelease();
        v88[0] = (id)0xD000000000000027;
        v88[1] = (id)0x800000024B801DC0;
        sub_24B7F35BC();
        swift_bridgeObjectRelease();
        sub_24B7F35BC();
        v66 = v88[0];
        v67 = v88[1];
        v83(v25, v84, v27);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v73)(v25, 0, 1, v27);
        sub_24B7B47F4(v65, (uint64_t)v66, (unint64_t)v67, (uint64_t)v25, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 723, (uint64_t)"finishSequence()", 16, 2u);
        swift_bridgeObjectRelease();

        sub_24B7B2F44((uint64_t)v25, &qword_2579B03C8);
      }
      v68 = v82;
      v69 = (void (*)(char *, uint64_t))v79;
      ((void (*)(char *, uint64_t))v79)(v60, v82);
      sub_24B7B2E38((uint64_t)v85, _s8SequenceVMa);
      v69(v78, v68);
      v40 = _s12SequenceRootVMa;
      v41 = v81;
    }
    else
    {
      v40 = _s8SequenceVMa;
      v41 = (_OWORD *)v35;
    }
    return sub_24B7B2E38((uint64_t)v41, v40);
  }
  return result;
}

uint64_t sub_24B7A8D88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0360);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1 + OBJC_IVAR____TtC5BKDM16BioLog_sequenceURL;
  swift_beginAccess();
  sub_24B7B2F00(v7, (uint64_t)v6, &qword_2579B0360);
  v8 = sub_24B7F33D0();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    result = sub_24B7B2F44((uint64_t)v6, &qword_2579B0360);
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  else
  {
    *(_QWORD *)(a2 + 24) = v8;
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)a2);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v9 + 32))(boxed_opaque_existential_1Tm, v6, v8);
  }
  return result;
}

uint64_t sub_24B7A8E88(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  id v15;
  _QWORD v17[2];
  _QWORD aBlock[6];

  v3 = sub_24B7F34E4();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_24B7F34FC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(_QWORD *)&v1[OBJC_IVAR____TtC5BKDM16BioLog_dispatchQueueLogging];
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v1;
  *(_QWORD *)(v12 + 24) = a1;
  aBlock[4] = sub_24B7B1D04;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B79A8C4;
  aBlock[3] = &block_descriptor_66;
  v13 = _Block_copy(aBlock);
  v14 = v1;
  v15 = a1;
  sub_24B7F34F0();
  v17[1] = MEMORY[0x24BEE4AF8];
  sub_24B7B19A0(&qword_2579B0370, v4, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0378);
  sub_24B7B19E0(&qword_2579B0380, &qword_2579B0378);
  sub_24B7F376C();
  MEMORY[0x24BD26F50](0, v11, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

uint64_t sub_24B7A90C8(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  id v14;
  char *v15;
  _QWORD v17[2];
  _QWORD aBlock[6];

  v3 = sub_24B7F34E4();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_24B7F34FC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(_QWORD *)&v1[OBJC_IVAR____TtC5BKDM16BioLog_dispatchQueueLogging];
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v1;
  *(_QWORD *)(v12 + 24) = a1;
  aBlock[4] = sub_24B7B1D7C;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B79A8C4;
  aBlock[3] = &block_descriptor_72;
  v13 = _Block_copy(aBlock);
  v14 = a1;
  v15 = v1;
  sub_24B7F34F0();
  v17[1] = MEMORY[0x24BEE4AF8];
  sub_24B7B19A0(&qword_2579B0370, v4, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0378);
  sub_24B7B19E0(&qword_2579B0380, &qword_2579B0378);
  sub_24B7F376C();
  MEMORY[0x24BD26F50](0, v11, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

uint64_t sub_24B7A930C(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  void *v14;
  id v15;
  char *v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v5 = sub_24B7F34E4();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v19 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_24B7F34FC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = *(_QWORD *)&v2[OBJC_IVAR____TtC5BKDM16BioLog_dispatchQueueLogging];
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v2;
  v13[3] = a1;
  v13[4] = a2;
  aBlock[4] = sub_24B7B1F44;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B79A8C4;
  aBlock[3] = &block_descriptor_78;
  v14 = _Block_copy(aBlock);
  v15 = a1;
  swift_bridgeObjectRetain();
  v16 = v2;
  sub_24B7F34F0();
  v20 = MEMORY[0x24BEE4AF8];
  sub_24B7B19A0(&qword_2579B0370, v6, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0378);
  sub_24B7B19E0(&qword_2579B0380, &qword_2579B0378);
  sub_24B7F376C();
  MEMORY[0x24BD26F50](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_24B7A9590(uint64_t a1)
{
  return sub_24B7A95AC(a1, (uint64_t)&unk_251CA1298, (uint64_t)sub_24B7B1FC4, (uint64_t)&block_descriptor_84);
}

uint64_t sub_24B7A95AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v8 = sub_24B7F34E4();
  v20 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_24B7F34FC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(_QWORD *)&v4[OBJC_IVAR____TtC5BKDM16BioLog_dispatchQueueLogging];
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v4;
  *(_QWORD *)(v15 + 24) = a1;
  aBlock[4] = a3;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B79A8C4;
  aBlock[3] = a4;
  v16 = _Block_copy(aBlock);
  v17 = v4;
  sub_24B7F34F0();
  v21 = MEMORY[0x24BEE4AF8];
  sub_24B7B19A0(&qword_2579B0370, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0378);
  sub_24B7B19E0(&qword_2579B0380, &qword_2579B0378);
  sub_24B7F376C();
  MEMORY[0x24BD26F50](0, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

uint64_t sub_24B7A9790(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[16];
  _BYTE v13[32];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0468);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_24B79AD38();
  v8 = v7;
  v9 = _s8SequenceVMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v10 = _s6SourceVMa(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
    v12[12] = 1;
    sub_24B7C24FC(14, (uint64_t)v5, 0, 1, 0, 1, 0x100000000uLL, a2, 0, 1);
    sub_24B7B2F44((uint64_t)v5, &qword_2579B0468);
  }
  return ((uint64_t (*)(_BYTE *, _QWORD))v6)(v13, 0);
}

uint64_t sub_24B7A98F0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  void *v16;
  char *v17;
  _QWORD v19[2];
  _QWORD aBlock[6];

  v7 = sub_24B7F34E4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_24B7F34FC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = *(_QWORD *)&v3[OBJC_IVAR____TtC5BKDM16BioLog_dispatchQueueLogging];
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v3;
  v15[3] = a3;
  v15[4] = a1;
  v15[5] = a2;
  aBlock[4] = sub_24B7B1FF8;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B79A8C4;
  aBlock[3] = &block_descriptor_90;
  v16 = _Block_copy(aBlock);
  v17 = v3;
  sub_24B7B195C(a1, a2);
  sub_24B7F34F0();
  v19[1] = MEMORY[0x24BEE4AF8];
  sub_24B7B19A0(&qword_2579B0370, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0378);
  sub_24B7B19E0(&qword_2579B0380, &qword_2579B0378);
  sub_24B7F376C();
  MEMORY[0x24BD26F50](0, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

uint64_t sub_24B7A9AEC(char *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  void (*v24)(char *, _QWORD, uint64_t, uint64_t);
  BOOL v25;
  uint64_t result;
  BOOL v27;
  char *v28;
  uint64_t v29;
  void (*v30)(_QWORD, _QWORD, _QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)();
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t (*v44)();
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  unint64_t v61;
  void *v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92[16];
  char *v93;
  uint64_t v94;
  uint64_t aBlock;
  uint64_t v96;
  uint64_t (*v97)(uint64_t);
  void *v98;
  uint64_t (*v99)();
  uint64_t v100;

  v78 = a4;
  v77 = a3;
  v90 = a2;
  v84 = sub_24B7F34E4();
  v83 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84);
  v82 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_24B7F34FC();
  v80 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v79 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_24B7F3328();
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v74 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0368);
  MEMORY[0x24BDAC7A8](v8);
  v85 = (uint64_t)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0360);
  MEMORY[0x24BDAC7A8](v10);
  v88 = (uint64_t *)((char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v89 = sub_24B7F33D0();
  v91 = *(_QWORD *)(v89 - 8);
  v12 = *(_QWORD *)(v91 + 64);
  v13 = MEMORY[0x24BDAC7A8](v89);
  v73 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v86 = (char *)&v70 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v87 = (char *)&v70 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = a1;
  v20 = &a1[OBJC_IVAR____TtC5BKDM16BioLog_logger];
  v21 = sub_24B7F34D8();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
  v23(v19, v20, v21);
  v24 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56);
  v24(v19, 0, 1, v21);
  v25 = sub_24B7B52EC((void (*)(uint64_t *__return_ptr, uint64_t))sub_24B7B2C58, (uint64_t)v92, 0x65636E6575716573, 0xE800000000000000, (uint64_t)v19, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 771, (uint64_t)"logCapture(data:id:)", 20, 2u);
  result = sub_24B7B2F44((uint64_t)v19, &qword_2579B03C8);
  if (!v25)
    return result;
  if (a1[OBJC_IVAR____TtC5BKDM16BioLog_captureLoggingEnabled] == 1)
  {
    MEMORY[0x24BDAC7A8](result);
    v23(v19, v20, v21);
    v24(v19, 0, 1, v21);
    v27 = sub_24B7B52EC((void (*)(uint64_t *__return_ptr, uint64_t))sub_24B7B2C70, (uint64_t)&v69, 0x65636E6575716573, 0xEB000000004C5255, (uint64_t)v19, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 775, (uint64_t)"logCapture(data:id:)", 20, 2u);
    result = sub_24B7B2F44((uint64_t)v19, &qword_2579B03C8);
    if (!v27)
      return result;
    v28 = &a1[OBJC_IVAR____TtC5BKDM16BioLog_sequenceURL];
    swift_beginAccess();
    v29 = (uint64_t)v28;
    v30 = (void (*)(_QWORD, _QWORD, _QWORD))v88;
    sub_24B7B2F00(v29, (uint64_t)v88, &qword_2579B0360);
    v31 = v91;
    v32 = v89;
    if ((*(unsigned int (**)(_QWORD, uint64_t, uint64_t))(v91 + 48))(v30, 1, v89) == 1)
      return sub_24B7B2F44((uint64_t)v30, &qword_2579B0360);
    v88 = *(_QWORD **)(v31 + 32);
    ((void (*)(char *, _QWORD, uint64_t))v88)(v87, v30, v32);
    v46 = (uint64_t)&a1[OBJC_IVAR____TtC5BKDM16BioLog_sequence];
    swift_beginAccess();
    v47 = v85;
    sub_24B7B2F00(v46, v85, &qword_2579B0368);
    v48 = _s8SequenceVMa(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v47, 1, v48);
    if ((_DWORD)result == 1)
      goto LABEL_17;
    type metadata accessor for BioLogHelper();
    v49 = sub_24B7B8DE0(*(_QWORD *)(v47 + *(int *)(v48 + 52)));
    v72 = v49;
    v51 = v50;
    v71 = v50;
    sub_24B7B2E38(v47, _s8SequenceVMa);
    aBlock = v49;
    v96 = v51;
    v52 = v75;
    v53 = v74;
    v54 = v76;
    (*(void (**)(char *, _QWORD, uint64_t))(v75 + 104))(v74, *MEMORY[0x24BDCD7A0], v76);
    sub_24B7B22B8();
    v55 = v86;
    sub_24B7F33C4();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v54);
    v56 = v73;
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v73, v55, v32);
    v57 = (*(unsigned __int8 *)(v31 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    v58 = swift_allocObject();
    *(_QWORD *)(v58 + 16) = a1;
    ((void (*)(unint64_t, char *, uint64_t))v88)(v58 + v57, v56, v32);
    v59 = (uint64_t *)(v58 + ((v12 + v57 + 7) & 0xFFFFFFFFFFFFFFF8));
    v60 = v77;
    v61 = v78;
    *v59 = v77;
    v59[1] = v61;
    v99 = sub_24B7B2D1C;
    v100 = v58;
    aBlock = MEMORY[0x24BDAC760];
    v96 = 1107296256;
    v97 = sub_24B79A8C4;
    v98 = &block_descriptor_127;
    v62 = _Block_copy(&aBlock);
    v63 = a1;
    sub_24B7B195C(v60, v61);
    v64 = v79;
    sub_24B7F34F0();
    v94 = MEMORY[0x24BEE4AF8];
    sub_24B7B19A0(&qword_2579B0370, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0378);
    sub_24B7B19E0(&qword_2579B0380, &qword_2579B0378);
    v65 = v82;
    v34 = v71;
    v66 = v84;
    sub_24B7F376C();
    MEMORY[0x24BD26F50](0, v64, v65, v62);
    _Block_release(v62);
    v67 = v65;
    v33 = v72;
    (*(void (**)(char *, uint64_t))(v83 + 8))(v67, v66);
    (*(void (**)(char *, uint64_t))(v80 + 8))(v64, v81);
    v68 = *(void (**)(char *, uint64_t))(v91 + 8);
    v68(v86, v32);
    v68(v87, v32);
    swift_release();
  }
  else
  {
    v33 = 0;
    v34 = 0;
  }
  v35 = sub_24B79AD38();
  v37 = v36;
  v38 = _s8SequenceVMa(0);
  v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48);
  result = v39(v37, 1, v38);
  if (!(_DWORD)result)
  {
    v40 = *(int *)(v38 + 52);
    v41 = *(_QWORD *)(v37 + v40);
    v42 = __CFADD__(v41, 1);
    v43 = v41 + 1;
    if (!v42)
    {
      *(_QWORD *)(v37 + v40) = v43;
      goto LABEL_10;
    }
    __break(1u);
LABEL_17:
    __break(1u);
    return result;
  }
LABEL_10:
  ((void (*)(uint64_t *, _QWORD))v35)(&aBlock, 0);
  v44 = sub_24B79AD38();
  if (!v39(v45, 1, v38))
    sub_24B7C8708(v90, v33, v34);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, _QWORD))v44)(&aBlock, 0);
}

uint64_t sub_24B7AA378(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unsigned __int8 v11;
  uint64_t result;
  NSObject *v13;
  os_log_type_t v14;
  _DWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v7 = sub_24B7F33D0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B7F3394();
  v11 = sub_24B79E648();
  result = swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
    sub_24B7B195C(a3, a4);
    v13 = sub_24B7F34B4();
    v14 = sub_24B7F36B8();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (_DWORD *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v18 = v17;
      *v15 = 134218242;
      __asm { BR              X10 }
    }

    sub_24B7B18E0(a3, a4);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return result;
}

uint64_t sub_24B7AA698(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, unint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  void *v23;
  id v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t (*v29)(char *, uint64_t);
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  void *v50;
  _QWORD v51[3];
  uint64_t (*v52)(char *, uint64_t);
  id v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  void (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;
  void (*v64)(char *, _QWORD, uint64_t, uint64_t);
  char v65[16];
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;

  v9 = v8;
  v58 = a7;
  v59 = a8;
  v56 = a5;
  v57 = a6;
  v55 = a4;
  v54 = a3;
  v60 = sub_24B7F358C();
  v12 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v61 = (char *)v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = a1;
  v67 = a2;
  v72 = 0;
  v73 = 0xE000000000000000;
  sub_24B7F37A8();
  swift_bridgeObjectRelease();
  v72 = 0xD000000000000013;
  v73 = 0x800000024B801CE0;
  sub_24B7F35BC();
  sub_24B7F35BC();
  v17 = v72;
  v18 = v73;
  v19 = v9 + OBJC_IVAR____TtC5BKDM16BioLog_logger;
  v20 = sub_24B7F34D8();
  v21 = *(_QWORD *)(v20 - 8);
  v62 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v63 = v19;
  v62(v16, v19, v20);
  v64 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56);
  v64(v16, 0, 1, v20);
  LOBYTE(v17) = sub_24B7B4BE0((uint64_t (*)(uint64_t))sub_24B7B2340, (uint64_t)v65, v17, v18, (uint64_t)v16, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 791, (uint64_t)"createPGMImageFile(path:data:width:height:comment:)", 51, 2u);
  swift_bridgeObjectRelease();
  sub_24B7B2F44((uint64_t)v16, &qword_2579B03C8);
  result = 0;
  if ((v17 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v23 = (void *)sub_24B7F3538();
    swift_bridgeObjectRelease();
    v24 = objc_msgSend((id)objc_opt_self(), sel_fileHandleForWritingAtPath_, v23);

    if (!v24)
    {
      v62(v16, v63, v20);
      v64(v16, 0, 1, v20);
      sub_24B7B52EC((void (*)(uint64_t *__return_ptr, uint64_t))sub_24B7A2DEC, 0, 0xD000000000000013, 0x800000024B801D40, (uint64_t)v16, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 793, (uint64_t)"createPGMImageFile(path:data:width:height:comment:)", 51, 2u);
      sub_24B7B2F44((uint64_t)v16, &qword_2579B03C8);
      return 0;
    }
    v25 = v61;
    sub_24B7F3580();
    v26 = sub_24B7F3568();
    v28 = v27;
    v29 = *(uint64_t (**)(char *, uint64_t))(v12 + 8);
    v30 = v60;
    v52 = v29;
    result = v29(v25, v60);
    if (v28 >> 60 == 15)
    {
      __break(1u);
    }
    else
    {
      v72 = v26;
      v73 = v28;
      v31 = sub_24B7B2440();
      v53 = v24;
      sub_24B7F3694();
      v51[1] = v31;
      sub_24B7B2484(v26, v28);
      v51[2] = a1;
      v32 = v59;
      if (!v59)
      {
LABEL_9:
        __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03D8);
        v42 = swift_allocObject();
        *(_OWORD *)(v42 + 16) = xmmword_24B7F89F0;
        v43 = MEMORY[0x24BEE1E88];
        v44 = MEMORY[0x24BEE1ED8];
        *(_QWORD *)(v42 + 56) = MEMORY[0x24BEE1E88];
        *(_QWORD *)(v42 + 64) = v44;
        *(_QWORD *)(v42 + 32) = v56;
        *(_QWORD *)(v42 + 96) = v43;
        *(_QWORD *)(v42 + 104) = v44;
        *(_QWORD *)(v42 + 72) = v57;
        sub_24B7F3574();
        v45 = v61;
        sub_24B7F3580();
        v46 = sub_24B7F3568();
        v48 = v47;
        swift_bridgeObjectRelease();
        result = v52(v45, v30);
        if (v48 >> 60 != 15)
        {
          v49 = v46;
          v72 = v46;
          v73 = v48;
          v50 = v53;
          sub_24B7F3694();
          sub_24B7B2484(v49, v48);
          v72 = v54;
          v73 = v55;
          sub_24B7F3694();
          sub_24B7AADEC(v50);

          return 1;
        }
LABEL_14:
        __break(1u);
        return result;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03D8);
      v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = xmmword_24B7F8A50;
      v72 = v58;
      v73 = v32;
      v70 = 10;
      v71 = 0xE100000000000000;
      v68 = 8970;
      v69 = 0xE200000000000000;
      sub_24B7B22B8();
      v34 = MEMORY[0x24BEE0D00];
      v35 = sub_24B7F373C();
      v37 = v36;
      *(_QWORD *)(v33 + 56) = v34;
      *(_QWORD *)(v33 + 64) = sub_24B7B22FC();
      *(_QWORD *)(v33 + 32) = v35;
      *(_QWORD *)(v33 + 40) = v37;
      sub_24B7F3574();
      v38 = v61;
      sub_24B7F3580();
      v39 = sub_24B7F3568();
      v41 = v40;
      swift_bridgeObjectRelease();
      result = v52(v38, v30);
      if (v41 >> 60 != 15)
      {
        v72 = v39;
        v73 = v41;
        sub_24B7F3694();
        sub_24B7B2484(v39, v41);
        v30 = v60;
        goto LABEL_9;
      }
    }
    __break(1u);
    goto LABEL_14;
  }
  return result;
}

void sub_24B7AADEC(void *a1)
{
  id v1;
  id v2;
  void *v3;
  id v4[2];

  v4[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4[0] = 0;
  if (objc_msgSend(a1, sel_closeAndReturnError_, v4))
  {
    v1 = v4[0];
  }
  else
  {
    v2 = v4[0];
    v3 = (void *)sub_24B7F32E0();

    swift_willThrow();
  }
}

uint64_t sub_24B7AAEB8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5BKDM16BioLog_pgmImageComment);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_24B7AAF0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC5BKDM16BioLog_pgmImageComment);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_24B7AAF68())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_24B7AAFB0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_24B7F3238();
  MEMORY[0x24BDAC7A8](v3);
  sub_24B7F3268();
  swift_allocObject();
  sub_24B7F325C();
  sub_24B7F322C();
  sub_24B7F3244();
  _s8SequenceV13StatusMessageVMa(0);
  sub_24B7B19A0(&qword_2579B03D0, _s8SequenceV13StatusMessageVMa, (uint64_t)&unk_24B7F9640);
  v4 = sub_24B7F3250();
  v6 = v5;
  sub_24B7F340C();
  sub_24B7B18E0(v4, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03D8);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_24B7F8A50;
  sub_24B7B22B8();
  v8 = MEMORY[0x24BEE0D00];
  v9 = sub_24B7F373C();
  v11 = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v7 + 56) = v8;
  *(_QWORD *)(v7 + 64) = sub_24B7B22FC();
  *(_QWORD *)(v7 + 32) = v9;
  *(_QWORD *)(v7 + 40) = v11;
  sub_24B7F3574();
  v12 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v13 = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v1) + 0x358))();
  if (v14)
    v15 = v13;
  else
    v15 = 0;
  if (v14)
    v16 = v14;
  else
    v16 = 0xE000000000000000;
  v18 = v15;
  swift_bridgeObjectRetain();
  sub_24B7F35BC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, unint64_t))((*v12 & *v1) + 0x360))(v18, v16);
  return swift_release();
}

uint64_t sub_24B7AB308(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  char *v25;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[6];

  v29 = a5;
  v30 = a3;
  v31 = a4;
  v28 = a2;
  v9 = sub_24B7F34E4();
  v35 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_24B7F34FC();
  v33 = *(_QWORD *)(v12 - 8);
  v34 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = *(_QWORD *)&v6[OBJC_IVAR____TtC5BKDM16BioLog_dispatchQueueLogging];
  sub_24B7B2F00(a6, (uint64_t)v18, &qword_2579B0388);
  v19 = (*(unsigned __int8 *)(v16 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v20 = (_QWORD *)swift_allocObject();
  v22 = v28;
  v21 = v29;
  v20[2] = v6;
  v20[3] = v21;
  v20[4] = a1;
  v20[5] = v22;
  v23 = v31;
  v20[6] = v30;
  v20[7] = v23;
  sub_24B7B2E98((uint64_t)v18, (uint64_t)v20 + v19, &qword_2579B0388);
  aBlock[4] = sub_24B7B20AC;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B79A8C4;
  aBlock[3] = &block_descriptor_96;
  v24 = _Block_copy(aBlock);
  v25 = v6;
  sub_24B7B195C(a1, v22);
  sub_24B7F34F0();
  v36 = MEMORY[0x24BEE4AF8];
  sub_24B7B19A0(&qword_2579B0370, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0378);
  sub_24B7B19E0(&qword_2579B0380, &qword_2579B0378);
  sub_24B7F376C();
  MEMORY[0x24BD26F50](0, v14, v11, v24);
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v34);
  return swift_release();
}

uint64_t sub_24B7AB590(char *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  void (*v27)(char *, _QWORD, uint64_t, uint64_t);
  BOOL v28;
  uint64_t result;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)();
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t (*v45)();
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  _QWORD *v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  void *v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95[16];
  char *v96;
  uint64_t v97;
  uint64_t aBlock;
  uint64_t v99;
  uint64_t (*v100)(uint64_t);
  void *v101;
  uint64_t (*v102)();
  _QWORD *v103;

  v90 = a7;
  v80 = a6;
  v79 = a5;
  v82 = a4;
  v81 = a3;
  v94 = a2;
  v88 = sub_24B7F34E4();
  v87 = *(_QWORD *)(v88 - 8);
  MEMORY[0x24BDAC7A8](v88);
  v86 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_24B7F34FC();
  v84 = *(_QWORD *)(v85 - 8);
  MEMORY[0x24BDAC7A8](v85);
  v83 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_24B7F3328();
  v77 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v76 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0368);
  MEMORY[0x24BDAC7A8](v11);
  v89 = (uint64_t)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0360);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_24B7F33D0();
  v92 = *(_QWORD *)(v16 - 8);
  v93 = v16;
  v17 = MEMORY[0x24BDAC7A8](v16);
  v75 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v91 = (char *)&v73 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = a1;
  v23 = &a1[OBJC_IVAR____TtC5BKDM16BioLog_logger];
  v24 = sub_24B7F34D8();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
  v26(v22, v23, v24);
  v27 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56);
  v27(v22, 0, 1, v24);
  v28 = sub_24B7B52EC((void (*)(uint64_t *__return_ptr, uint64_t))sub_24B7B46D0, (uint64_t)v95, 0x65636E6575716573, 0xE800000000000000, (uint64_t)v22, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 834, (uint64_t)"logImage(data:width:height:id:sourceUUID:)", 42, 2u);
  result = sub_24B7B2F44((uint64_t)v22, &qword_2579B03C8);
  if (!v28)
    return result;
  if (a1[OBJC_IVAR____TtC5BKDM16BioLog_imageLoggingEnabled] == 1)
  {
    MEMORY[0x24BDAC7A8](result);
    v26(v22, v23, v24);
    v27(v22, 0, 1, v24);
    v30 = sub_24B7B52EC((void (*)(uint64_t *__return_ptr, uint64_t))sub_24B7B46CC, (uint64_t)&v72, 0x65636E6575716573, 0xEB000000004C5255, (uint64_t)v22, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLog.swift", 91, 2, 838, (uint64_t)"logImage(data:width:height:id:sourceUUID:)", 42, 2u);
    result = sub_24B7B2F44((uint64_t)v22, &qword_2579B03C8);
    if (!v30)
      return result;
    v31 = (uint64_t)&a1[OBJC_IVAR____TtC5BKDM16BioLog_sequenceURL];
    swift_beginAccess();
    sub_24B7B2F00(v31, (uint64_t)v15, &qword_2579B0360);
    v32 = v92;
    v33 = v93;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v15, 1, v93) == 1)
      return sub_24B7B2F44((uint64_t)v15, &qword_2579B0360);
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v91, v15, v33);
    v47 = (uint64_t)&a1[OBJC_IVAR____TtC5BKDM16BioLog_sequence];
    swift_beginAccess();
    v48 = v89;
    sub_24B7B2F00(v47, v89, &qword_2579B0368);
    v49 = _s8SequenceVMa(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 48))(v48, 1, v49);
    if ((_DWORD)result == 1)
      goto LABEL_17;
    type metadata accessor for BioLogHelper();
    v50 = sub_24B7B8EB4(*(_QWORD *)(v48 + *(int *)(v49 + 56)));
    v73 = v50;
    v52 = v51;
    v74 = v51;
    sub_24B7B2E38(v48, _s8SequenceVMa);
    aBlock = v50;
    v99 = v52;
    v53 = v77;
    v54 = v76;
    v55 = v78;
    (*(void (**)(char *, _QWORD, uint64_t))(v77 + 104))(v76, *MEMORY[0x24BDCD7A0], v78);
    sub_24B7B22B8();
    v56 = v75;
    sub_24B7F33C4();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v55);
    v57 = sub_24B7F3394();
    v59 = v58;
    v60 = *(void (**)(char *, uint64_t))(v32 + 8);
    v60(v56, v33);
    v61 = (_QWORD *)swift_allocObject();
    v61[2] = a1;
    v61[3] = v57;
    v62 = v81;
    v61[4] = v59;
    v61[5] = v62;
    v63 = v82;
    v64 = v79;
    v61[6] = v82;
    v61[7] = v64;
    v61[8] = v80;
    v102 = sub_24B7B299C;
    v103 = v61;
    aBlock = MEMORY[0x24BDAC760];
    v99 = 1107296256;
    v100 = sub_24B79A8C4;
    v101 = &block_descriptor_121;
    v65 = _Block_copy(&aBlock);
    v66 = a1;
    sub_24B7B195C(v62, v63);
    v67 = v83;
    sub_24B7F34F0();
    v97 = MEMORY[0x24BEE4AF8];
    sub_24B7B19A0(&qword_2579B0370, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0378);
    sub_24B7B19E0(&qword_2579B0380, &qword_2579B0378);
    v68 = v86;
    v69 = v88;
    sub_24B7F376C();
    MEMORY[0x24BD26F50](0, v67, v68, v65);
    _Block_release(v65);
    v70 = v68;
    v34 = v73;
    v71 = v69;
    v35 = v74;
    (*(void (**)(char *, uint64_t))(v87 + 8))(v70, v71);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v67, v85);
    v60(v91, v33);
    swift_release();
  }
  else
  {
    v34 = 0;
    v35 = 0;
  }
  v36 = sub_24B79AD38();
  v38 = v37;
  v39 = _s8SequenceVMa(0);
  v40 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48);
  result = v40(v38, 1, v39);
  if (!(_DWORD)result)
  {
    v41 = *(int *)(v39 + 56);
    v42 = *(_QWORD *)(v38 + v41);
    v43 = __CFADD__(v42, 1);
    v44 = v42 + 1;
    if (!v43)
    {
      *(_QWORD *)(v38 + v41) = v44;
      goto LABEL_10;
    }
    __break(1u);
LABEL_17:
    __break(1u);
    return result;
  }
LABEL_10:
  ((void (*)(uint64_t *, _QWORD))v36)(&aBlock, 0);
  v45 = sub_24B79AD38();
  if (!v40(v46, 1, v39))
    sub_24B7C8884(v94, v90, v34, v35);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, _QWORD))v45)(&aBlock, 0);
}

id sub_24B7ABF14()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void sub_24B7ABF34()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_24B7ABF8C(uint64_t a1, uint64_t a2)
{
  return sub_24B7AC264(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_24B7ABFA0(uint64_t a1, uint64_t a2)
{
  return sub_24B7AC264(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_24B7ABFB8(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_24B7F3544();
  *a2 = 0;
  return result;
}

uint64_t sub_24B7AC02C(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_24B7F3550();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_24B7AC0A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_24B7F355C();
  v2 = sub_24B7F3538();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_24B7AC0F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_24B7F355C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24B7AC118()
{
  sub_24B7B19A0(&qword_2579B03F8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_24B7F8E20);
  sub_24B7B19A0(&qword_2579B0548, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_24B7F8C1C);
  return sub_24B7F3880();
}

uint64_t sub_24B7AC19C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_24B7F3538();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_24B7AC1E0()
{
  sub_24B7B19A0(&qword_2579B0538, (uint64_t (*)(uint64_t))type metadata accessor for FileProtectionType, (uint64_t)&unk_24B7F8D90);
  sub_24B7B19A0(&qword_2579B0540, (uint64_t (*)(uint64_t))type metadata accessor for FileProtectionType, (uint64_t)&unk_24B7F8D30);
  return sub_24B7F3880();
}

uint64_t sub_24B7AC264(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_24B7F355C();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_24B7AC2A0()
{
  sub_24B7F355C();
  sub_24B7F35B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24B7AC2E0()
{
  uint64_t v0;

  sub_24B7F355C();
  sub_24B7F39C4();
  sub_24B7F35B0();
  v0 = sub_24B7F39DC();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24B7AC350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_24B7F355C();
  v2 = v1;
  if (v0 == sub_24B7F355C() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_24B7F3994();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

char *sub_24B7AC3D8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04C0);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 29;
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
      v13 = v10 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v13 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32])
          memmove(v13, a4 + 32, 4 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_24B7B11A0(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24B7AC4E4(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_24B7AC5B4(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_24B7B25B8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_24B7B25B8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_24B7AC5B4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_24B7F3730();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_24B7AC76C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_24B7F37D8();
  if (!v8)
  {
    sub_24B7F3838();
    __break(1u);
LABEL_17:
    result = sub_24B7F3874();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_24B7AC76C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_24B7AC800(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_24B7ACA50(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_24B7ACA50(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_24B7AC800(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_24B7AC974(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_24B7F37B4();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_24B7F3838();
      __break(1u);
LABEL_10:
      v2 = sub_24B7F35C8();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_24B7F3874();
    __break(1u);
LABEL_14:
    result = sub_24B7F3838();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_24B7AC974(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0420);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_24B7AC9D8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_24B7F3604();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x24BD26E54](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t sub_24B7ACA50(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0420);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_24B7F3874();
  __break(1u);
  return result;
}

unint64_t sub_24B7ACB9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24B7F39C4();
  sub_24B7F35B0();
  v4 = sub_24B7F39DC();
  return sub_24B7ACD14(a1, a2, v4);
}

unint64_t sub_24B7ACC00(uint64_t a1)
{
  uint64_t v2;

  sub_24B7F355C();
  sub_24B7F39C4();
  sub_24B7F35B0();
  v2 = sub_24B7F39DC();
  swift_bridgeObjectRelease();
  return sub_24B7ACDF4(a1, v2);
}

unint64_t sub_24B7ACC80(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_24B7F36F4();
  return sub_24B7ACF68(a1, v2);
}

unint64_t sub_24B7ACCB0(unsigned int a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = MEMORY[0x24BD27220](*(_QWORD *)(v1 + 40), a1, 4);
  return sub_24B7AD080(a1, v3);
}

unint64_t sub_24B7ACCE4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_24B7F39B8();
  return sub_24B7AD11C(a1, v2);
}

unint64_t sub_24B7ACD14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_24B7F3994() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_24B7F3994() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_24B7ACDF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_24B7F355C();
    v8 = v7;
    if (v6 == sub_24B7F355C() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_24B7F3994();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_24B7F355C();
          v15 = v14;
          if (v13 == sub_24B7F355C() && v15 == v16)
            break;
          v18 = sub_24B7F3994();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_24B7ACF68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_24B7B2930(0, &qword_2579B0470);
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_24B7F3700();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_24B7F3700();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_24B7AD080(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_24B7AD11C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unsigned __int8 *sub_24B7AD1B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_24B7F361C();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_24B7AECAC();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_24B7F37D8();
  }
LABEL_7:
  v11 = sub_24B7AEA30(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_24B7AD29C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  int v42;

  v3 = v2;
  v5 = _s6SourceVMa(0);
  v41 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0478);
  v42 = a2;
  v9 = sub_24B7F385C();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v38 = v2;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v40 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v39 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v39)
      break;
    v22 = v40;
    v23 = v40[v21];
    ++v17;
    if (!v23)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v39)
        goto LABEL_34;
      v23 = v40[v17];
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = v40[v24];
        if (!v23)
        {
          while (1)
          {
            v17 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v17 >= v39)
              goto LABEL_34;
            v23 = v40[v17];
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v17 = v24;
      }
    }
LABEL_21:
    v14 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    v25 = *(void **)(*(_QWORD *)(v8 + 48) + 8 * v20);
    v26 = *(_QWORD *)(v41 + 72);
    v27 = *(_QWORD *)(v8 + 56) + v26 * v20;
    if ((v42 & 1) != 0)
    {
      sub_24B7B2F80(v27, (uint64_t)v7, _s6SourceVMa);
    }
    else
    {
      sub_24B7B2768(v27, (uint64_t)v7, _s6SourceVMa);
      v28 = v25;
    }
    result = sub_24B7F36F4();
    v29 = -1 << *(_BYTE *)(v10 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v15 + 8 * (v30 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v15 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v15 + 8 * v31);
      }
      while (v35 == -1);
      v18 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v18) = v25;
    result = sub_24B7B2F80((uint64_t)v7, *(_QWORD *)(v10 + 56) + v26 * v18, _s6SourceVMa);
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v38;
  v22 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v8 + 32);
  if (v36 >= 64)
    bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v36;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_24B7AD5F0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04B8);
  result = sub_24B7F385C();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v33 = a2;
    v32 = v3;
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v30 = -1 << v10;
    v31 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v8 << 6);
      }
      else
      {
        v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v18 >= v13)
          goto LABEL_31;
        v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          v8 = v18 + 1;
          if (v18 + 1 >= v13)
            goto LABEL_31;
          v19 = v9[v8];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_31:
              if ((v33 & 1) == 0)
              {
                result = swift_release();
                v3 = v32;
                goto LABEL_38;
              }
              if (v31 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v30;
              v3 = v32;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                v8 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v19 = v9[v8];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v8 = v20;
          }
        }
LABEL_21:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      v21 = *(_DWORD *)(*(_QWORD *)(v5 + 48) + 4 * v17);
      v22 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v17);
      result = MEMORY[0x24BD27220](*(_QWORD *)(v7 + 40), v21, 4);
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_DWORD *)(*(_QWORD *)(v7 + 48) + 4 * v15) = v21;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v15) = v22;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_24B7AD890(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;

  v3 = v2;
  v5 = sub_24B7F33D0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0448);
  result = sub_24B7F385C();
  v11 = result;
  if (*(_QWORD *)(v9 + 16))
  {
    v36 = v3;
    v12 = 0;
    v13 = *(_QWORD *)(v9 + 64);
    v39 = (_QWORD *)(v9 + 64);
    v14 = 1 << *(_BYTE *)(v9 + 32);
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v16 = v15 & v13;
    v38 = (unint64_t)(v14 + 63) >> 6;
    v17 = result + 64;
    v37 = a2;
    v18 = 16;
    if ((a2 & 1) != 0)
      v18 = 32;
    v40 = v18;
    while (1)
    {
      if (v16)
      {
        v20 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v21 = v20 | (v12 << 6);
      }
      else
      {
        v22 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = (uint64_t)v39;
        if (v22 >= v38)
          goto LABEL_33;
        v23 = v39[v22];
        ++v12;
        if (!v23)
        {
          v12 = v22 + 1;
          if (v22 + 1 >= v38)
            goto LABEL_33;
          v23 = v39[v12];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_33:
              if ((v37 & 1) == 0)
              {
                result = swift_release();
                v3 = v36;
                goto LABEL_40;
              }
              v34 = 1 << *(_BYTE *)(v9 + 32);
              if (v34 >= 64)
                bzero(v39, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v39 = -1 << v34;
              v3 = v36;
              *(_QWORD *)(v9 + 16) = 0;
              break;
            }
            v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                v12 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_42;
                if (v12 >= v38)
                  goto LABEL_33;
                v23 = v39[v12];
                ++v24;
                if (v23)
                  goto LABEL_23;
              }
            }
            v12 = v24;
          }
        }
LABEL_23:
        v16 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v12 << 6);
      }
      v25 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v21);
      v26 = *(_QWORD *)(v6 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + v40))(v8, *(_QWORD *)(v9 + 56) + v26 * v21, v5);
      result = sub_24B7F39B8();
      v27 = -1 << *(_BYTE *)(v11 + 32);
      v28 = result & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v17 + 8 * v29);
        }
        while (v33 == -1);
        v19 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v17 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v19) = v25;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 56) + v26 * v19, v8, v5);
      ++*(_QWORD *)(v11 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v11;
  return result;
}

void sub_24B7ADBC0(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_24B7F3778();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v11 = sub_24B7F36F4();

        v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 < v9 || v3 < (uint64_t)v12)
            goto LABEL_6;
        }
        else if (v12 < v9 && v3 < (uint64_t)v12)
        {
          goto LABEL_6;
        }
        v15 = *(_QWORD *)(a2 + 48);
        v16 = (_QWORD *)(v15 + 8 * v3);
        v17 = (_QWORD *)(v15 + 8 * v6);
        if (v3 != v6 || v16 >= v17 + 1)
          *v16 = *v17;
        v18 = *(_QWORD *)(a2 + 56);
        v19 = *(_QWORD *)(*(_QWORD *)(_s6SourceVMa(0) - 8) + 72);
        v20 = v19 * v3;
        v21 = v18 + v19 * v3;
        v22 = v19 * v6;
        v23 = v18 + v19 * v6 + v19;
        if (v20 < v22 || v21 >= v23)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v20 == v22)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v25 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v26 = *v25;
    v27 = (-1 << v3) - 1;
  }
  else
  {
    v25 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v27 = *v25;
    v26 = (-1 << a1) - 1;
  }
  *v25 = v27 & v26;
  v28 = *(_QWORD *)(a2 + 16);
  v29 = __OFSUB__(v28, 1);
  v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_24B7ADD98(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _DWORD *v10;
  unint64_t v11;
  _DWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_24B7F3778();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_DWORD *)(v9 + 4 * v6);
        result = MEMORY[0x24BD27220](*(_QWORD *)(a2 + 40), *v10, 4);
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_DWORD *)(v9 + 4 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24B7ADF30(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_24B7F3778();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_24B7F39B8();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11)
            goto LABEL_6;
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        v14 = (_QWORD *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1)
          *v14 = *v10;
        v15 = *(_QWORD *)(a2 + 56);
        v16 = *(_QWORD *)(*(_QWORD *)(sub_24B7F33D0() - 8) + 72);
        v17 = v16 * v3;
        result = v15 + v16 * v3;
        v18 = v16 * v6;
        v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v17 == v18)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_24B7AE0EC(uint64_t a1, unsigned int a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v4 = v3;
  v8 = *v3;
  v10 = sub_24B7ACCB0(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_24B7AE680();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v16[7] + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_DWORD *)(v16[6] + 4 * v10) = a2;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v18 = v16[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (!v19)
    {
      v16[2] = v20;
      return result;
    }
    goto LABEL_14;
  }
  sub_24B7AD5F0(result, a3 & 1);
  result = sub_24B7ACCB0(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_24B7F39A0();
  __break(1u);
  return result;
}

uint64_t sub_24B7AE214(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_24B7ACCE4(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = sub_24B7F33D0();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, a1, v18);
      }
      return sub_24B7AE3C4(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_24B7AE810();
      goto LABEL_7;
    }
    sub_24B7AD890(v13, a3 & 1);
    v20 = sub_24B7ACCE4(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_24B7AE3C4(v10, a2, a1, v16);
    }
  }
  result = sub_24B7F39A0();
  __break(1u);
  return result;
}

uint64_t sub_24B7AE338(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v7 = a4[7];
  v8 = _s6SourceVMa(0);
  result = sub_24B7B2F80(a3, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, _s6SourceVMa);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

uint64_t sub_24B7AE3C4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v7 = a4[7];
  v8 = sub_24B7F33D0();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3, v8);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

id sub_24B7AE450()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = _s6SourceVMa(0);
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0478);
  v5 = *v0;
  v6 = sub_24B7F3850();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (id)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (id)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v26 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v15)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v18 = 8 * v17;
    v19 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v20 = *(_QWORD *)(v27 + 72) * v17;
    sub_24B7B2768(*(_QWORD *)(v5 + 56) + v20, (uint64_t)v4, _s6SourceVMa);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v19;
    sub_24B7B2F80((uint64_t)v4, *(_QWORD *)(v7 + 56) + v20, _s6SourceVMa);
    result = v19;
  }
  v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_26:
    result = (id)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_24B7AE680()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04B8);
  v2 = *v0;
  v3 = sub_24B7F3850();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v23 = __clz(__rbit64(v21));
    v12 = (v21 - 1) & v21;
    v15 = v23 + (v9 << 6);
LABEL_12:
    v16 = 4 * v15;
    v17 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v15);
    v18 = 8 * v15;
    v19 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24B7AE810()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_24B7F33D0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0448);
  v24 = v0;
  v5 = *v0;
  v6 = sub_24B7F3850();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v19 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v19, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v17) = v18;
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v19, v4, v1);
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

unsigned __int8 *sub_24B7AEA30(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_24B7AECAC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_24B7F3628();
  v4 = sub_24B7AED28(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_24B7AED28(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_24B7AEE6C(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_24B7AC974(v9, 0);
      v12 = sub_24B7AEF58((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v13 = MEMORY[0x24BD26E18](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x24BD26E18);
LABEL_9:
      sub_24B7F37D8();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x24BD26E18]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_24B7AEE6C(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_24B7AC9D8(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_24B7AC9D8(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_24B7F35EC();
  }
  __break(1u);
  return result;
}

unint64_t sub_24B7AEF58(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_24B7AC9D8(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_24B7F35F8();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_24B7F37D8();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_24B7AC9D8(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_24B7F35D4();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void (*sub_24B7AF168(_QWORD *a1, void *a2))(uint64_t a1)
{
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;
  id v6;

  v4 = malloc(0x58uLL);
  *a1 = v4;
  v4[8] = a2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6 = a2;
  v4[9] = sub_24B7AF41C(v4);
  v4[10] = sub_24B7AF23C(v4 + 4, (uint64_t)v6, isUniquelyReferenced_nonNull_native);
  return sub_24B7AF1F0;
}

void sub_24B7AF1F0(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);
  void *v3;

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  v3 = *(void **)(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);

  v2(v1, 0);
  free(v1);
}

void (*sub_24B7AF23C(_QWORD *a1, uint64_t a2, char a3))(void ***a1)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  void (*result)(void ***);

  v4 = v3;
  v8 = malloc(0x28uLL);
  *a1 = v8;
  *v8 = a2;
  v8[1] = v3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0468);
  v10 = malloc(*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  v8[2] = v10;
  v11 = *v3;
  v13 = sub_24B7ACC80(a2);
  *((_BYTE *)v8 + 32) = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = *(_QWORD *)(*v4 + 56);
        v20 = _s6SourceVMa(0);
        v21 = *(_QWORD *)(v20 - 8);
        sub_24B7B2F80(v19 + *(_QWORD *)(v21 + 72) * v13, (uint64_t)v10, _s6SourceVMa);
        v22 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v10, v22, 1, v20);
        return sub_24B7AF3D0;
      }
LABEL_11:
      v20 = _s6SourceVMa(0);
      v21 = *(_QWORD *)(v20 - 8);
      v22 = 1;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_24B7AE450();
      goto LABEL_7;
    }
    sub_24B7AD29C(v16, a3 & 1);
    v23 = sub_24B7ACC80(a2);
    if ((v17 & 1) == (v24 & 1))
    {
      v13 = v23;
      v8[3] = v23;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  sub_24B7B2930(0, &qword_2579B0470);
  result = (void (*)(void ***))sub_24B7F39A0();
  __break(1u);
  return result;
}

void sub_24B7AF3D0(void ***a1)
{
  void **v1;
  void *v2;

  v1 = *a1;
  v2 = (*a1)[2];
  sub_24B7AF448((uint64_t)v2, *((_BYTE *)*a1 + 32), (uint64_t *)(*a1)[1], (unint64_t)(*a1)[3], **a1);
  sub_24B7B2F44((uint64_t)v2, &qword_2579B0468);
  free(v2);
  free(v1);
}

uint64_t (*sub_24B7AF41C(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_24B7AF43C;
}

uint64_t sub_24B7AF43C(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

void sub_24B7AF448(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  id v20;
  uint64_t v21;
  id v22;

  v22 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0468);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = _s6SourceVMa(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v21 - v17;
  sub_24B7B2F00(a1, (uint64_t)v11, &qword_2579B0468);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_24B7B2F44((uint64_t)v11, &qword_2579B0468);
    if ((a2 & 1) != 0)
    {
      sub_24B7B2930(0, &qword_2579B0470);
      swift_arrayDestroy();
      sub_24B7ADBC0(a4, *a3);
    }
  }
  else
  {
    sub_24B7B2F80((uint64_t)v11, (uint64_t)v18, _s6SourceVMa);
    v19 = (_QWORD *)*a3;
    if ((a2 & 1) != 0)
    {
      sub_24B7B2F80((uint64_t)v18, v19[7] + *(_QWORD *)(v13 + 72) * a4, _s6SourceVMa);
    }
    else
    {
      sub_24B7B2F80((uint64_t)v18, (uint64_t)v16, _s6SourceVMa);
      sub_24B7AE338(a4, (uint64_t)v22, (uint64_t)v16, v19);
      v20 = v22;
    }
  }
}

uint64_t sub_24B7AF634(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_24B7B08EC(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_24B7AF898(v5);
  *a1 = v2;
  return result;
}

_QWORD *sub_24B7AF69C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0458);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  v6 = sub_24B7B049C(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_24B7B263C();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

size_t sub_24B7AF780(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0430);
  v3 = *(_QWORD *)(_s6SourceVMa(0) - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      v9 = sub_24B7B0630(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_24B7B263C();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24B7AF898(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t i;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_24B7F397C();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v78 = 0;
      v79 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v81 = *(_QWORD *)(v79 + 8 * i);
        v82 = v78;
        do
        {
          v83 = *(_QWORD *)(v79 + v82);
          if (v81 >= v83)
            break;
          if (!v79)
            goto LABEL_141;
          *(_QWORD *)(v79 + v82 + 8) = v83;
          *(_QWORD *)(v79 + v82) = v81;
          v82 -= 8;
        }
        while (v82 != -8);
        v78 += 8;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v95 = result;
  v96 = v3;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_103:
      v94 = v8;
      if (v12 >= 2)
      {
        v84 = *v2;
        do
        {
          v85 = v12 - 2;
          if (v12 < 2)
            goto LABEL_132;
          if (!v84)
            goto LABEL_145;
          v86 = v11;
          v87 = v11 + 32;
          v88 = *(_QWORD *)&v11[16 * v85 + 32];
          v89 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_24B7AFF20((char *)(v84 + 8 * v88), (char *)(v84 + 8 * *(_QWORD *)&v87[16 * v12 - 16]), v84 + 8 * v89, __dst);
          if (v1)
            break;
          if (v89 < v88)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v86 = sub_24B7B032C((uint64_t)v86);
          if (v85 >= *((_QWORD *)v86 + 2))
            goto LABEL_134;
          v90 = &v86[16 * v85 + 32];
          *(_QWORD *)v90 = v88;
          *((_QWORD *)v90 + 1) = v89;
          v91 = *((_QWORD *)v86 + 2);
          if (v12 > v91)
            goto LABEL_135;
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          v11 = v86;
          *((_QWORD *)v86 + 2) = v91 - 1;
          v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v94 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v94 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_24B7F367C();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v96;
    v94 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v2;
  v92 = v2;
  v93 = *v2 - 8;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v97 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(_QWORD *)(v10 + 8 * v9);
      v15 = *(_QWORD *)(v10 + 8 * v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = *(_QWORD *)(v10 + 8 * v9);
          if (v14 < v15 == v17 >= v16)
            break;
          ++v9;
          v16 = v17;
          if (v3 == v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13)
          goto LABEL_138;
        if (v13 < v9)
        {
          v18 = v9 - 1;
          v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10)
                goto LABEL_144;
              v20 = *(_QWORD *)(v10 + 8 * v19);
              *(_QWORD *)(v10 + 8 * v19) = *(_QWORD *)(v10 + 8 * v18);
              *(_QWORD *)(v10 + 8 * v18) = v20;
            }
            v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_47;
    if (__OFSUB__(v9, v13))
      goto LABEL_136;
    if (v9 - v13 >= v95)
      goto LABEL_47;
    v21 = v13 + v95;
    if (__OFADD__(v13, v95))
      goto LABEL_139;
    if (v21 >= v3)
      v21 = v3;
    if (v21 < v13)
      break;
    if (v9 != v21)
    {
      v22 = (unint64_t *)(v93 + 8 * v9);
      do
      {
        v23 = *(_QWORD *)(v10 + 8 * v9);
        v24 = v13;
        v25 = v22;
        do
        {
          v26 = *v25;
          if (v23 >= *v25)
            break;
          if (!v10)
            goto LABEL_142;
          *v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      v9 = v21;
    }
LABEL_47:
    if (v9 < v13)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_24B7B018C(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v28 = *((_QWORD *)v11 + 2);
    v27 = *((_QWORD *)v11 + 3);
    v12 = v28 + 1;
    v10 = v97;
    if (v28 >= v27 >> 1)
    {
      v77 = sub_24B7B018C((char *)(v27 > 1), v28 + 1, 1, v11);
      v10 = v97;
      v11 = v77;
    }
    *((_QWORD *)v11 + 2) = v12;
    v29 = v11 + 32;
    v30 = &v11[16 * v28 + 32];
    *(_QWORD *)v30 = v13;
    *((_QWORD *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        v31 = v12 - 1;
        if (v12 >= 4)
        {
          v36 = &v29[16 * v12];
          v37 = *((_QWORD *)v36 - 8);
          v38 = *((_QWORD *)v36 - 7);
          v42 = __OFSUB__(v38, v37);
          v39 = v38 - v37;
          if (v42)
            goto LABEL_120;
          v41 = *((_QWORD *)v36 - 6);
          v40 = *((_QWORD *)v36 - 5);
          v42 = __OFSUB__(v40, v41);
          v34 = v40 - v41;
          v35 = v42;
          if (v42)
            goto LABEL_121;
          v43 = v12 - 2;
          v44 = &v29[16 * v12 - 32];
          v46 = *(_QWORD *)v44;
          v45 = *((_QWORD *)v44 + 1);
          v42 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          if (v42)
            goto LABEL_123;
          v42 = __OFADD__(v34, v47);
          v48 = v34 + v47;
          if (v42)
            goto LABEL_126;
          if (v48 >= v39)
          {
            v66 = &v29[16 * v31];
            v68 = *(_QWORD *)v66;
            v67 = *((_QWORD *)v66 + 1);
            v42 = __OFSUB__(v67, v68);
            v69 = v67 - v68;
            if (v42)
              goto LABEL_130;
            v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v60 = *((_QWORD *)v11 + 4);
            v61 = *((_QWORD *)v11 + 5);
            v42 = __OFSUB__(v61, v60);
            v53 = v61 - v60;
            v54 = v42;
            goto LABEL_78;
          }
          v33 = *((_QWORD *)v11 + 4);
          v32 = *((_QWORD *)v11 + 5);
          v42 = __OFSUB__(v32, v33);
          v34 = v32 - v33;
          v35 = v42;
        }
        if ((v35 & 1) != 0)
          goto LABEL_122;
        v43 = v12 - 2;
        v49 = &v29[16 * v12 - 32];
        v51 = *(_QWORD *)v49;
        v50 = *((_QWORD *)v49 + 1);
        v52 = __OFSUB__(v50, v51);
        v53 = v50 - v51;
        v54 = v52;
        if (v52)
          goto LABEL_125;
        v55 = &v29[16 * v31];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v42 = __OFSUB__(v56, v57);
        v58 = v56 - v57;
        if (v42)
          goto LABEL_128;
        if (__OFADD__(v53, v58))
          goto LABEL_129;
        if (v53 + v58 >= v34)
        {
          v59 = v34 < v58;
LABEL_84:
          if (v59)
            v31 = v43;
          goto LABEL_86;
        }
LABEL_78:
        if ((v54 & 1) != 0)
          goto LABEL_124;
        v62 = &v29[16 * v31];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v42 = __OFSUB__(v63, v64);
        v65 = v63 - v64;
        if (v42)
          goto LABEL_127;
        if (v65 < v53)
          goto LABEL_15;
LABEL_86:
        v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10)
          goto LABEL_143;
        v71 = &v29[16 * v70];
        v72 = *(_QWORD *)v71;
        v73 = v29;
        v74 = &v29[16 * v31];
        v75 = *((_QWORD *)v74 + 1);
        sub_24B7AFF20((char *)(v10 + 8 * *(_QWORD *)v71), (char *)(v10 + 8 * *(_QWORD *)v74), v10 + 8 * v75, __dst);
        if (v1)
          goto LABEL_114;
        if (v75 < v72)
          goto LABEL_117;
        if (v31 > *((_QWORD *)v11 + 2))
          goto LABEL_118;
        *(_QWORD *)v71 = v72;
        *(_QWORD *)&v73[16 * v70 + 8] = v75;
        v76 = *((_QWORD *)v11 + 2);
        if (v31 >= v76)
          goto LABEL_119;
        v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        v29 = v73;
        *((_QWORD *)v11 + 2) = v76 - 1;
        v10 = v97;
        if (v76 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v96;
    if (v9 >= v96)
    {
      v8 = v94;
      v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_24B7F3838();
  __break(1u);
  return result;
}

uint64_t sub_24B7AFF20(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  unint64_t *v17;
  char *v18;
  char *v19;
  unint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[8 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (unint64_t *)(a3 - 8);
        while (1)
        {
          v18 = (char *)(v17 + 1);
          v19 = v6 - 8;
          v20 = *((_QWORD *)v6 - 1);
          if (*((_QWORD *)v16 - 1) >= v20)
          {
            v22 = v16 - 8;
            if (v18 < v16 || v17 >= (unint64_t *)v16 || v18 != v16)
              *v17 = *((_QWORD *)v16 - 1);
            v16 -= 8;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= (unint64_t *)v6)
              *v17 = v20;
            v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7)
              goto LABEL_42;
          }
          --v17;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(_QWORD *)v6 >= *(_QWORD *)v4)
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_24B7B0284((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_24B7F3874();
  __break(1u);
  return result;
}

char *sub_24B7B018C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0460);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_24B7B0284(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_24B7F3874();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_24B7B032C(uint64_t a1)
{
  return sub_24B7B018C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_24B7B0340(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0458);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_24B7F3874();
  __break(1u);
  return result;
}

_QWORD *sub_24B7B049C(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_24B7B0630(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;

  v8 = _s6SourceVMa(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v31 - v14;
  v36 = a4;
  v18 = *(_QWORD *)(a4 + 64);
  v17 = a4 + 64;
  v16 = v18;
  v35 = v17;
  v19 = -1 << *(_BYTE *)(v17 - 32);
  if (-v19 < 64)
    v20 = ~(-1 << -(char)v19);
  else
    v20 = -1;
  v21 = v20 & v16;
  if (!a2)
  {
    v22 = 0;
    a3 = 0;
LABEL_38:
    v30 = v35;
    *a1 = v36;
    a1[1] = v30;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v32 = -1 << *(_BYTE *)(v17 - 32);
  v33 = a1;
  v22 = 0;
  v23 = 0;
  v34 = (unint64_t)(63 - v19) >> 6;
  v31 = v34 - 1;
  if (!v21)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    v29 = *(_QWORD *)(v9 + 72);
    sub_24B7B2768(*(_QWORD *)(v36 + 56) + v29 * v25, (uint64_t)v12, _s6SourceVMa);
    sub_24B7B2F80((uint64_t)v12, (uint64_t)v15, _s6SourceVMa);
    result = sub_24B7B2F80((uint64_t)v15, a2, _s6SourceVMa);
    if (v23 == a3)
      goto LABEL_37;
    a2 += v29;
    if (v21)
      goto LABEL_8;
LABEL_9:
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v34)
      goto LABEL_32;
    v27 = *(_QWORD *)(v35 + 8 * v26);
    if (!v27)
      break;
LABEL_18:
    v21 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v34)
  {
    v21 = 0;
    v22 = v26;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v35 + 8 * v22);
  if (v27)
    goto LABEL_14;
  v28 = v26 + 2;
  if (v26 + 2 >= v34)
    goto LABEL_32;
  v27 = *(_QWORD *)(v35 + 8 * v28);
  if (v27)
    goto LABEL_17;
  v22 = v26 + 3;
  if (v26 + 3 >= v34)
  {
    v21 = 0;
    v22 = v26 + 2;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v35 + 8 * v22);
  if (v27)
  {
LABEL_14:
    v26 = v22;
    goto LABEL_18;
  }
  v28 = v26 + 4;
  if (v26 + 4 >= v34)
  {
LABEL_32:
    v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    v19 = v32;
    a1 = v33;
    goto LABEL_38;
  }
  v27 = *(_QWORD *)(v35 + 8 * v28);
  if (v27)
  {
LABEL_17:
    v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v34)
    {
      v21 = 0;
      v22 = v31;
      goto LABEL_36;
    }
    v27 = *(_QWORD *)(v35 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_24B7B08EC(uint64_t a1)
{
  return sub_24B7B0340(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_24B7B0900(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  void *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  const void *v25;
  _QWORD v27[2];
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[7];
  uint64_t v36[3];
  uint64_t updated;
  uint64_t v38;

  v29 = a2;
  v30 = a4;
  v28 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_24B7F34E4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v31 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_24B7F34FC();
  v32 = *(_QWORD *)(v11 - 8);
  v33 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_24B7F3238();
  MEMORY[0x24BDAC7A8](v14);
  updated = _s18TemplateUpdateInfoVMa(0);
  v38 = sub_24B7B19A0(&qword_2579B0450, _s18TemplateUpdateInfoVMa, (uint64_t)&unk_24B7F97A8);
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v36);
  sub_24B7B2768(a3, (uint64_t)boxed_opaque_existential_1Tm, _s18TemplateUpdateInfoVMa);
  sub_24B7F3268();
  swift_allocObject();
  sub_24B7F325C();
  sub_24B7F322C();
  sub_24B7F3244();
  __swift_project_boxed_opaque_existential_1(v36, updated);
  v16 = sub_24B7F3250();
  v18 = v17;
  v27[1] = *(_QWORD *)&a5[OBJC_IVAR____TtC5BKDM16BioLog_dispatchQueueWriting];
  v19 = (_QWORD *)swift_allocObject();
  v20 = v28;
  v21 = v29;
  v19[2] = a5;
  v19[3] = v20;
  v19[4] = v21;
  v19[5] = v16;
  v19[6] = v18;
  v19[7] = 0xD000000000000012;
  v19[8] = v30;
  aBlock[4] = sub_24B7B2594;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B79A8C4;
  aBlock[3] = &block_descriptor_109;
  v28 = _Block_copy(aBlock);
  v22 = a5;
  swift_bridgeObjectRetain();
  sub_24B7B195C(v16, v18);
  swift_bridgeObjectRetain();
  v23 = v13;
  sub_24B7F34F0();
  v34 = MEMORY[0x24BEE4AF8];
  sub_24B7B19A0(&qword_2579B0370, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0378);
  v30 = v9;
  sub_24B7B19E0(&qword_2579B0380, &qword_2579B0378);
  v24 = v31;
  sub_24B7F376C();
  v25 = v28;
  MEMORY[0x24BD26F50](0, v23, v24, v28);
  _Block_release(v25);
  swift_release();
  sub_24B7B18E0(v16, v18);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v24, v8);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v23, v33);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
  return 1;
}

uint64_t sub_24B7B0D48(void *a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  const void *v24;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[7];
  uint64_t v34[3];
  uint64_t v35;
  uint64_t v36;

  v27 = a1;
  v28 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_24B7F34E4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v29 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_24B7F34FC();
  v30 = *(_QWORD *)(v10 - 8);
  v31 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_24B7F3238();
  MEMORY[0x24BDAC7A8](v13);
  v35 = _s12SequenceRootVMa(0);
  v36 = sub_24B7B19A0(&qword_2579B0418, _s12SequenceRootVMa, (uint64_t)&unk_24B7F9780);
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v34);
  sub_24B7B2768(a3, (uint64_t)boxed_opaque_existential_1Tm, _s12SequenceRootVMa);
  sub_24B7F3268();
  swift_allocObject();
  sub_24B7F325C();
  sub_24B7F322C();
  sub_24B7F3244();
  __swift_project_boxed_opaque_existential_1(v34, v35);
  v15 = sub_24B7F3250();
  v17 = v16;
  v26 = *(_QWORD *)&a4[OBJC_IVAR____TtC5BKDM16BioLog_dispatchQueueWriting];
  v18 = swift_allocObject();
  v19 = v27;
  v20 = v28;
  *(_QWORD *)(v18 + 16) = a4;
  *(_QWORD *)(v18 + 24) = v19;
  *(_QWORD *)(v18 + 32) = v20;
  *(_QWORD *)(v18 + 40) = v15;
  *(_QWORD *)(v18 + 48) = v17;
  strcpy((char *)(v18 + 56), "sequenceInfo");
  *(_BYTE *)(v18 + 69) = 0;
  *(_WORD *)(v18 + 70) = -5120;
  aBlock[4] = sub_24B7B2594;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B79A8C4;
  aBlock[3] = &block_descriptor_102;
  v27 = _Block_copy(aBlock);
  v21 = a4;
  swift_bridgeObjectRetain();
  sub_24B7B195C(v15, v17);
  swift_bridgeObjectRetain();
  v22 = v12;
  sub_24B7F34F0();
  v32 = MEMORY[0x24BEE4AF8];
  sub_24B7B19A0(&qword_2579B0370, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0378);
  v28 = v8;
  sub_24B7B19E0(&qword_2579B0380, &qword_2579B0378);
  v23 = v29;
  sub_24B7F376C();
  v24 = v27;
  MEMORY[0x24BD26F50](0, v22, v23, v27);
  _Block_release(v24);
  swift_release();
  sub_24B7B18E0(v15, v17);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v23, v7);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v22, v31);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
  return 1;
}

char *sub_24B7B11A0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = 4 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_24B7F3874();
  __break(1u);
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24BD27D0C]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24BD27D18](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t type metadata accessor for BioLog()
{
  uint64_t result;

  result = qword_2579B1740;
  if (!qword_2579B1740)
    return swift_getSingletonMetadata();
  return result;
}

BOOL sub_24B7B14E0(unint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  _BOOL8 v10;

  if (a1 >> 62)
    goto LABEL_15;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_24B7F3844())
  {
    v4 = 4;
    while (1)
    {
      v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24BD27040](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v8 = objc_msgSend(v5, sel_userID);
      v9 = objc_msgSend(a2, sel_userID);

      v10 = v8 == v9;
      ++v4;
      if (v8 == v9 || v7 == v3)
        goto LABEL_17;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
  v10 = 0;
LABEL_17:
  swift_bridgeObjectRelease();
  return v10;
}

void sub_24B7B15FC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  unint64_t v6;
  id v7;
  BOOL v8;
  unsigned int v9;
  uint64_t *v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  id v16;
  uint64_t v17;

  v2 = v1;
  v4 = *(uint64_t (**)(uint64_t))(*(_QWORD *)*sub_24B7B571C() + 200);
  v5 = swift_retain();
  v6 = v4(v5);
  swift_release();
  v7 = a1;
  v8 = sub_24B7B14E0(v6, v7);
  swift_bridgeObjectRelease();

  if (v8)
  {
    if (*(_BYTE *)(v2 + OBJC_IVAR____TtC5BKDM16BioLog_templateLoggingEnabled) == 1)
    {
      sub_24B79FCBC((uint64_t)objc_msgSend(v7, sel_userID), 1uLL);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v9 = objc_msgSend(v7, sel_userID);
    v10 = (uint64_t *)(v2 + OBJC_IVAR____TtC5BKDM16BioLog_templateListNumber);
    swift_beginAccess();
    v11 = sub_24B7ACCB0(v9);
    if ((v12 & 1) != 0)
    {
      v13 = v11;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v15 = *v10;
      v17 = *v10;
      *v10 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_24B7AE680();
        v15 = v17;
      }
      sub_24B7ADD98(v13, v15);
      *v10 = v15;
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    v16 = objc_msgSend(v7, sel_userID);
    swift_beginAccess();
    sub_24B7BE034(0, 0, (uint64_t)v16);
    swift_endAccess();
  }
}

uint64_t sub_24B7B17B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  unint64_t v4;
  char v5;
  unint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v10;

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC5BKDM16BioLog_templateListNumber);
  swift_beginAccess();
  v4 = sub_24B7ACCB0(a1);
  if ((v5 & 1) != 0)
  {
    v6 = v4;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    v10 = *v3;
    *v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_24B7AE680();
      v8 = v10;
    }
    sub_24B7ADD98(v6, v8);
    *v3 = v8;
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  swift_beginAccess();
  sub_24B7BE034(0, 0, a1);
  return swift_endAccess();
}

uint64_t sub_24B7B18A4()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  if (v1 >> 60 != 15)
    sub_24B7B18E0(*(_QWORD *)(v0 + 32), v1);
  return swift_deallocObject();
}

uint64_t sub_24B7B18E0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

void sub_24B7B1924()
{
  uint64_t v0;

  sub_24B7A2FF4(*(_QWORD *)(v0 + 16));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_24B7B1948(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_24B7B195C(a1, a2);
  return a1;
}

uint64_t sub_24B7B195C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_24B7B19A0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x24BD27D24](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24B7B19E0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24BD27D24](MEMORY[0x24BEE12C8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24B7B1A20()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_24B7B1A44()
{
  uint64_t v0;

  return sub_24B7A521C(*(_QWORD *)(v0 + 16), *(_DWORD *)(v0 + 24));
}

uint64_t sub_24B7B1A50()
{
  uint64_t v0;

  return sub_24B7A53D0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_24B7B1A58()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_24B7B1A7C()
{
  uint64_t v0;

  return sub_24B7A5580(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_24B7B1A88()
{
  uint64_t v0;

  return sub_24B7A5738(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_24B7B1A94()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_24B7B1AB8()
{
  uint64_t v0;

  return sub_24B7A5AC8(*(_QWORD *)(v0 + 16), *(_WORD *)(v0 + 24), *(unsigned int *)(v0 + 28));
}

uint64_t sub_24B7B1AC8()
{
  uint64_t v0;

  return sub_24B7A5C88(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_24B7B1AD0()
{
  uint64_t v0;

  return sub_24B7A6020(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_24B7B1ADC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_24B7B1B08()
{
  uint64_t v0;
  int v1;
  uint64_t (*v2)();
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *(_DWORD *)(v0 + 32);
  sub_24B7A61BC(0, *(void **)(v0 + 24));
  v2 = sub_24B79AD38();
  v4 = v3;
  v5 = _s8SequenceVMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
    sub_24B7C2C64(v1);
  return ((uint64_t (*)(uint64_t *, _QWORD))v2)(&v7, 0);
}

uint64_t sub_24B7B1B8C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24B7B1BC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  sub_24B7A61BC(1, *(void **)(v0 + 24));
  v3 = sub_24B79AD38();
  v5 = v4;
  v6 = _s8SequenceVMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
    sub_24B7C5E64(v1, v2);
  return ((uint64_t (*)(uint64_t *, _QWORD))v3)(&v8, 0);
}

uint64_t sub_24B7B1C54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 32);
  sub_24B7A61BC(2, *(void **)(v0 + 24));
  v2 = sub_24B79AD38();
  v4 = v3;
  v5 = _s8SequenceVMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
    sub_24B7C68A0(v1);
  return ((uint64_t (*)(uint64_t *, _QWORD))v2)(&v7, 0);
}

uint64_t sub_24B7B1CD8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_24B7B1D04()
{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)();
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v8;

  v1 = *(void **)(v0 + 24);
  v2 = sub_24B79AD38();
  v4 = v3;
  v5 = _s8SequenceVMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
    v6 = sub_24B7C1780(v1);
  return ((uint64_t (*)(uint64_t *, _QWORD, __n128))v2)(&v8, 0, v6);
}

uint64_t sub_24B7B1D7C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)();
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  int v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)();
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  __int128 v24;
  _BYTE v25[32];

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  v3 = sub_24B79AD38();
  v5 = v4;
  v6 = _s8SequenceVMa(0);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48);
  if (!v7(v5, 1, v6))
    sub_24B7C2D0C(v2);
  ((void (*)(_BYTE *, _QWORD))v3)(v25, 0);
  if (v2)
  {
    v8 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5BKDM16BioLog_templateLoggingEnabled);
    v9 = v2;
    v10 = v9;
    if (v8 == 1)
    {
      v11 = sub_24B79FCBC((uint64_t)objc_msgSend(v9, sel_userID), 0);
      v13 = v12;
    }
    else
    {
      v11 = 0;
      v13 = 0;
    }
    v14 = sub_24B79AD38();
    v16 = v15;
    if (v7(v15, 1, v6)
      || (v17 = v16 + *(int *)(v6 + 64),
          v18 = _s8SequenceV10EnrollmentVMa(0),
          (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v17, 1, v18)))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v23[0] = v11;
      v23[1] = v13;
      sub_24B7B9C30((uint64_t)v23, (uint64_t)&v24);
      v20 = (uint64_t *)(v17 + *(int *)(v18 + 24));
      v21 = *v20;
      v22 = v20[1];
      *(_OWORD *)v20 = v24;
      sub_24B7B2D64(v21, v22);
    }
    ((void (*)(_BYTE *, _QWORD))v14)(v25, 0);

  }
  return sub_24B7A822C();
}

uint64_t objectdestroy_56Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24B7B1F44()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t (*v3)();
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(void **)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = sub_24B79AD38();
  v5 = v4;
  v6 = _s8SequenceVMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
    sub_24B7C5F30(v1, v2);
  return ((uint64_t (*)(uint64_t *, _QWORD))v3)(&v8, 0);
}

uint64_t sub_24B7B1FC4()
{
  uint64_t v0;

  return sub_24B7A9790(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_24B7B1FCC()
{
  uint64_t v0;

  sub_24B7B18E0(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_24B7B1FF8()
{
  uint64_t v0;

  return sub_24B7A9AEC(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_24B7B2004()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388) - 8) + 80);
  v2 = (v1 + 64) & ~v1;

  sub_24B7B18E0(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  v3 = sub_24B7F3490();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  return swift_deallocObject();
}

uint64_t sub_24B7B20AC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388) - 8) + 80);
  return sub_24B7AB590(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), v0 + ((v1 + 64) & ~v1));
}

uint64_t sub_24B7B20E8()
{
  return type metadata accessor for BioLog();
}

void sub_24B7B20F0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_24B7F34D8();
  if (v0 <= 0x3F)
  {
    sub_24B7F33D0();
    if (v1 <= 0x3F)
    {
      _s5StateVMa(319);
      if (v2 <= 0x3F)
      {
        sub_24B7B225C(319, &qword_2579B03B8, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
        if (v3 <= 0x3F)
        {
          sub_24B7B225C(319, &qword_2579B03C0, (void (*)(uint64_t))_s8SequenceVMa);
          if (v4 <= 0x3F)
            swift_updateClassMetadata2();
        }
      }
    }
  }
}

void sub_24B7B225C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_24B7F370C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

ValueMetadata *type metadata accessor for BioLog.message_accessory_image_info_v1_t()
{
  return &type metadata for BioLog.message_accessory_image_info_v1_t;
}

unint64_t sub_24B7B22B8()
{
  unint64_t result;

  result = qword_2579B03E0;
  if (!qword_2579B03E0)
  {
    result = MEMORY[0x24BD27D24](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2579B03E0);
  }
  return result;
}

unint64_t sub_24B7B22FC()
{
  unint64_t result;

  result = qword_2579B03E8;
  if (!qword_2579B03E8)
  {
    result = MEMORY[0x24BD27D24](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2579B03E8);
  }
  return result;
}

id sub_24B7B2340()
{
  id v0;
  void *v1;
  void *v2;
  id v3;

  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v1 = (void *)sub_24B7F3538();
  if (qword_2579B1698 != -1)
    swift_once();
  type metadata accessor for FileAttributeKey(0);
  sub_24B7B19A0(&qword_2579B03F8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_24B7F8E20);
  v2 = (void *)sub_24B7F3508();
  v3 = objc_msgSend(v0, sel_createFileAtPath_contents_attributes_, v1, 0, v2);

  return v3;
}

unint64_t sub_24B7B2440()
{
  unint64_t result;

  result = qword_2579B03F0;
  if (!qword_2579B03F0)
  {
    result = MEMORY[0x24BD27D24](MEMORY[0x24BDCDDC0], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2579B03F0);
  }
  return result;
}

uint64_t sub_24B7B2484(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_24B7B18E0(a1, a2);
  return a1;
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
  sub_24B7B466C(a1, &qword_2579B0500);
}

void type metadata accessor for FileProtectionType(uint64_t a1)
{
  sub_24B7B466C(a1, &qword_2579B04F8);
}

_OWORD *sub_24B7B24C0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_24B7B24D0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24B7B2518()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;

  v1 = *(char **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = (void *)sub_24B7F3394();
  LOBYTE(v1) = sub_24B7B0D48(v3, v4, v2, v1);
  swift_bridgeObjectRelease();
  return v1 & 1;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_24B7B25B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1Tm(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

BOOL sub_24B7B2634()
{
  uint64_t v0;

  return sub_24B7A79AC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_24B7B263C()
{
  return swift_release();
}

BOOL sub_24B7B2644()
{
  uint64_t v0;

  return **(_WORD **)(v0 + 16) != 0;
}

void sub_24B7B2658(_BYTE *a1)
{
  bzero(a1, 0xC82uLL);
  a1[3202] = 1;
}

uint64_t sub_24B7B2684(uint64_t result)
{
  *(_BYTE *)(result + 3214) = 0;
  return result;
}

uint64_t sub_24B7B268C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24B7A2D10(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_24B7B2694(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 3214))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_24B7B26B0(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 3202))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_24B7B26CC()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;

  v1 = *(char **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = (void *)sub_24B7F3394();
  LOBYTE(v1) = sub_24B7B0900(v3, v4, v2, 0x800000024B802140, v1);
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_24B7B2734(uint64_t result)
{
  *(_BYTE *)(result + 3202) = 0;
  return result;
}

void sub_24B7B273C(_BYTE *a1)
{
  bzero(a1, 0xC8EuLL);
  a1[3214] = 1;
}

uint64_t sub_24B7B2768(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t objectdestroy_98Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_24B7B18E0(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24B7B27EC()
{
  uint64_t v0;

  return sub_24B7A101C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

uint64_t sub_24B7B2804()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_24B7F33D0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  sub_24B7B18E0(*(_QWORD *)(v0 + v4), *(_QWORD *)(v0 + v4 + 8));

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24B7B28C4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_24B7F33D0() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_24B79F124(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(void **)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_24B7B2928()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_24B7B2930(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_24B7B2968()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_24B7B18E0(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_24B7B299C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;
  NSObject *v10;
  os_log_type_t v11;
  _DWORD *v12;

  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 64);
  v7 = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **(_QWORD **)(v0 + 16)) + 0x358))();
  LOBYTE(v5) = sub_24B7AA698(v2, v1, v4, v3, v5, v6, v7, v8);
  result = swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
  {
    sub_24B7B195C(v4, v3);
    swift_bridgeObjectRetain();
    sub_24B7B195C(v4, v3);
    swift_bridgeObjectRetain();
    v10 = sub_24B7F34B4();
    v11 = sub_24B7F36B8();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (_DWORD *)swift_slowAlloc();
      swift_slowAlloc();
      *v12 = 134218242;
      __asm { BR              X9 }
    }
    sub_24B7B18E0(v4, v3);

    sub_24B7B18E0(v4, v3);
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_24B7B2C58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24B7A4A18(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_24B7B2C70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24B7A8D88(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_24B7B2C88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_24B7F33D0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  sub_24B7B18E0(*(_QWORD *)(v0 + v4), *(_QWORD *)(v0 + v4 + 8));
  return swift_deallocObject();
}

uint64_t sub_24B7B2D1C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(sub_24B7F33D0() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_24B7AA378(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)v3, *(_QWORD *)(v3 + 8));
}

uint64_t sub_24B7B2D64(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_24B7B2D78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24B7A4CC0(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_24B7B2D80(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_24B7B2DC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24B7A4DF4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_24B7B2DDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24B7A4B1C(*(_QWORD *)(v1 + 16), a1);
}

BOOL sub_24B7B2DE4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5BKDM16BioLog_sources;
  swift_beginAccess();
  return *(_QWORD *)(*(_QWORD *)v1 + 16) != 0;
}

uint64_t sub_24B7B2E38(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

double sub_24B7B2E74(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 121) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 137) = 1;
  return result;
}

uint64_t sub_24B7B2E98(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24B7B2EDC(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 137))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_24B7B2EF8(uint64_t result)
{
  *(_BYTE *)(result + 137) = 0;
  return result;
}

uint64_t sub_24B7B2F00(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24B7B2F44(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24B7B2F80(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24B7B2FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 2)
    return sub_24B7B2FD4(a1, a2, a3);
  return a1;
}

uint64_t sub_24B7B2FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_24B7B2FE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24B79FB04(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

id sub_24B7B2FF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void **v3;
  void *v4;
  void *v6;

  v3 = *(void ***)(v1 + 16);
  v4 = *v3;
  if (*v3)
  {
    v6 = *v3;
    *(_QWORD *)(a1 + 24) = sub_24B7B2930(0, &qword_2579B0470);
    v4 = v6;
    *(_QWORD *)a1 = v6;
  }
  else
  {
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return v4;
}

uint64_t sub_24B7B3054@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  if (v3 >> 60 == 15)
  {
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  else
  {
    *(_QWORD *)(a1 + 24) = MEMORY[0x24BDCDDE8];
    *(_QWORD *)a1 = v2;
    *(_QWORD *)(a1 + 8) = v3;
  }
  return sub_24B7B1948(v2, v3);
}

uint64_t sub_24B7B3084()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_24B7F33D0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  sub_24B7B18E0(*(_QWORD *)(v0 + v4), *(_QWORD *)(v0 + v4 + 8));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24B7B3134()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_24B7F33D0() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_24B7A06A4(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned int *)(v0 + ((((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_24B7B3198()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_24B7B31BC(uint64_t result)
{
  if (result)
    return sub_24B7F3550();
  return result;
}

uint64_t sub_24B7B3350(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s6SourceVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

__n128 __swift_memcpy137_1(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t sub_24B7B33CC(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 137))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_24B7B33EC(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 136) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 137) = v3;
  return result;
}

void type metadata accessor for image_processing_result_v2(uint64_t a1)
{
  sub_24B7B466C(a1, &qword_2579B04E0);
}

uint64_t _s7LogInfoVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

void *__swift_memcpy3214_1(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC8EuLL);
}

uint64_t sub_24B7B3488(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 3214))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_24B7B34A8(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 3212) = 0;
    *(_DWORD *)(result + 3208) = 0;
    *(_OWORD *)(result + 3192) = 0u;
    *(_OWORD *)(result + 3176) = 0u;
    *(_OWORD *)(result + 3160) = 0u;
    *(_OWORD *)(result + 3144) = 0u;
    *(_OWORD *)(result + 3128) = 0u;
    *(_OWORD *)(result + 3112) = 0u;
    *(_OWORD *)(result + 3096) = 0u;
    *(_OWORD *)(result + 3080) = 0u;
    *(_OWORD *)(result + 3064) = 0u;
    *(_OWORD *)(result + 3048) = 0u;
    *(_OWORD *)(result + 3032) = 0u;
    *(_OWORD *)(result + 3016) = 0u;
    *(_OWORD *)(result + 3000) = 0u;
    *(_OWORD *)(result + 2984) = 0u;
    *(_OWORD *)(result + 2968) = 0u;
    *(_OWORD *)(result + 2952) = 0u;
    *(_OWORD *)(result + 2936) = 0u;
    *(_OWORD *)(result + 2920) = 0u;
    *(_OWORD *)(result + 2904) = 0u;
    *(_OWORD *)(result + 2888) = 0u;
    *(_OWORD *)(result + 2872) = 0u;
    *(_OWORD *)(result + 2856) = 0u;
    *(_OWORD *)(result + 2840) = 0u;
    *(_OWORD *)(result + 2824) = 0u;
    *(_OWORD *)(result + 2808) = 0u;
    *(_OWORD *)(result + 2792) = 0u;
    *(_OWORD *)(result + 2776) = 0u;
    *(_OWORD *)(result + 2760) = 0u;
    *(_OWORD *)(result + 2744) = 0u;
    *(_OWORD *)(result + 2728) = 0u;
    *(_OWORD *)(result + 2712) = 0u;
    *(_OWORD *)(result + 2696) = 0u;
    *(_OWORD *)(result + 2680) = 0u;
    *(_OWORD *)(result + 2664) = 0u;
    *(_OWORD *)(result + 2648) = 0u;
    *(_OWORD *)(result + 2632) = 0u;
    *(_OWORD *)(result + 2616) = 0u;
    *(_OWORD *)(result + 2600) = 0u;
    *(_OWORD *)(result + 2584) = 0u;
    *(_OWORD *)(result + 2568) = 0u;
    *(_OWORD *)(result + 2552) = 0u;
    *(_OWORD *)(result + 2536) = 0u;
    *(_OWORD *)(result + 2520) = 0u;
    *(_OWORD *)(result + 2504) = 0u;
    *(_OWORD *)(result + 2488) = 0u;
    *(_OWORD *)(result + 2472) = 0u;
    *(_OWORD *)(result + 2456) = 0u;
    *(_OWORD *)(result + 2440) = 0u;
    *(_OWORD *)(result + 2424) = 0u;
    *(_OWORD *)(result + 2408) = 0u;
    *(_OWORD *)(result + 2392) = 0u;
    *(_OWORD *)(result + 2376) = 0u;
    *(_OWORD *)(result + 2360) = 0u;
    *(_OWORD *)(result + 2344) = 0u;
    *(_OWORD *)(result + 2328) = 0u;
    *(_OWORD *)(result + 2312) = 0u;
    *(_OWORD *)(result + 2296) = 0u;
    *(_OWORD *)(result + 2280) = 0u;
    *(_OWORD *)(result + 2264) = 0u;
    *(_OWORD *)(result + 2248) = 0u;
    *(_OWORD *)(result + 2232) = 0u;
    *(_OWORD *)(result + 2216) = 0u;
    *(_OWORD *)(result + 2200) = 0u;
    *(_OWORD *)(result + 2184) = 0u;
    *(_OWORD *)(result + 2168) = 0u;
    *(_OWORD *)(result + 2152) = 0u;
    *(_OWORD *)(result + 2136) = 0u;
    *(_OWORD *)(result + 2120) = 0u;
    *(_OWORD *)(result + 2104) = 0u;
    *(_OWORD *)(result + 2088) = 0u;
    *(_OWORD *)(result + 2072) = 0u;
    *(_OWORD *)(result + 2056) = 0u;
    *(_OWORD *)(result + 2040) = 0u;
    *(_OWORD *)(result + 2024) = 0u;
    *(_OWORD *)(result + 2008) = 0u;
    *(_OWORD *)(result + 1992) = 0u;
    *(_OWORD *)(result + 1976) = 0u;
    *(_OWORD *)(result + 1960) = 0u;
    *(_OWORD *)(result + 1944) = 0u;
    *(_OWORD *)(result + 1928) = 0u;
    *(_OWORD *)(result + 1912) = 0u;
    *(_OWORD *)(result + 1896) = 0u;
    *(_OWORD *)(result + 1880) = 0u;
    *(_OWORD *)(result + 1864) = 0u;
    *(_OWORD *)(result + 1848) = 0u;
    *(_OWORD *)(result + 1832) = 0u;
    *(_OWORD *)(result + 1816) = 0u;
    *(_OWORD *)(result + 1800) = 0u;
    *(_OWORD *)(result + 1784) = 0u;
    *(_OWORD *)(result + 1768) = 0u;
    *(_OWORD *)(result + 1752) = 0u;
    *(_OWORD *)(result + 1736) = 0u;
    *(_OWORD *)(result + 1720) = 0u;
    *(_OWORD *)(result + 1704) = 0u;
    *(_OWORD *)(result + 1688) = 0u;
    *(_OWORD *)(result + 1672) = 0u;
    *(_OWORD *)(result + 1656) = 0u;
    *(_OWORD *)(result + 1640) = 0u;
    *(_OWORD *)(result + 1624) = 0u;
    *(_OWORD *)(result + 1608) = 0u;
    *(_OWORD *)(result + 1592) = 0u;
    *(_OWORD *)(result + 1576) = 0u;
    *(_OWORD *)(result + 1560) = 0u;
    *(_OWORD *)(result + 1544) = 0u;
    *(_OWORD *)(result + 1528) = 0u;
    *(_OWORD *)(result + 1512) = 0u;
    *(_OWORD *)(result + 1496) = 0u;
    *(_OWORD *)(result + 1480) = 0u;
    *(_OWORD *)(result + 1464) = 0u;
    *(_OWORD *)(result + 1448) = 0u;
    *(_OWORD *)(result + 1432) = 0u;
    *(_OWORD *)(result + 1416) = 0u;
    *(_OWORD *)(result + 1400) = 0u;
    *(_OWORD *)(result + 1384) = 0u;
    *(_OWORD *)(result + 1368) = 0u;
    *(_OWORD *)(result + 1352) = 0u;
    *(_OWORD *)(result + 1336) = 0u;
    *(_OWORD *)(result + 1320) = 0u;
    *(_OWORD *)(result + 1304) = 0u;
    *(_OWORD *)(result + 1288) = 0u;
    *(_OWORD *)(result + 1272) = 0u;
    *(_OWORD *)(result + 1256) = 0u;
    *(_OWORD *)(result + 1240) = 0u;
    *(_OWORD *)(result + 1224) = 0u;
    *(_OWORD *)(result + 1208) = 0u;
    *(_OWORD *)(result + 1192) = 0u;
    *(_OWORD *)(result + 1176) = 0u;
    *(_OWORD *)(result + 1160) = 0u;
    *(_OWORD *)(result + 1144) = 0u;
    *(_OWORD *)(result + 1128) = 0u;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 3214) = v3;
  return result;
}

void type metadata accessor for bgops_result_v2_t(uint64_t a1)
{
  sub_24B7B466C(a1, &qword_2579B04E8);
}

void *__swift_memcpy3202_1(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC82uLL);
}

uint64_t sub_24B7B3848(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 3202))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_24B7B3868(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 3192) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 3176) = 0u;
    *(_OWORD *)(result + 3160) = 0u;
    *(_OWORD *)(result + 3144) = 0u;
    *(_OWORD *)(result + 3128) = 0u;
    *(_OWORD *)(result + 3112) = 0u;
    *(_OWORD *)(result + 3096) = 0u;
    *(_OWORD *)(result + 3080) = 0u;
    *(_WORD *)(result + 3200) = 0;
    *(_OWORD *)(result + 3064) = 0u;
    *(_OWORD *)(result + 3048) = 0u;
    *(_OWORD *)(result + 3032) = 0u;
    *(_OWORD *)(result + 3016) = 0u;
    *(_OWORD *)(result + 3000) = 0u;
    *(_OWORD *)(result + 2984) = 0u;
    *(_OWORD *)(result + 2968) = 0u;
    *(_OWORD *)(result + 2952) = 0u;
    *(_OWORD *)(result + 2936) = 0u;
    *(_OWORD *)(result + 2920) = 0u;
    *(_OWORD *)(result + 2904) = 0u;
    *(_OWORD *)(result + 2888) = 0u;
    *(_OWORD *)(result + 2872) = 0u;
    *(_OWORD *)(result + 2856) = 0u;
    *(_OWORD *)(result + 2840) = 0u;
    *(_OWORD *)(result + 2824) = 0u;
    *(_OWORD *)(result + 2808) = 0u;
    *(_OWORD *)(result + 2792) = 0u;
    *(_OWORD *)(result + 2776) = 0u;
    *(_OWORD *)(result + 2760) = 0u;
    *(_OWORD *)(result + 2744) = 0u;
    *(_OWORD *)(result + 2728) = 0u;
    *(_OWORD *)(result + 2712) = 0u;
    *(_OWORD *)(result + 2696) = 0u;
    *(_OWORD *)(result + 2680) = 0u;
    *(_OWORD *)(result + 2664) = 0u;
    *(_OWORD *)(result + 2648) = 0u;
    *(_OWORD *)(result + 2632) = 0u;
    *(_OWORD *)(result + 2616) = 0u;
    *(_OWORD *)(result + 2600) = 0u;
    *(_OWORD *)(result + 2584) = 0u;
    *(_OWORD *)(result + 2568) = 0u;
    *(_OWORD *)(result + 2552) = 0u;
    *(_OWORD *)(result + 2536) = 0u;
    *(_OWORD *)(result + 2520) = 0u;
    *(_OWORD *)(result + 2504) = 0u;
    *(_OWORD *)(result + 2488) = 0u;
    *(_OWORD *)(result + 2472) = 0u;
    *(_OWORD *)(result + 2456) = 0u;
    *(_OWORD *)(result + 2440) = 0u;
    *(_OWORD *)(result + 2424) = 0u;
    *(_OWORD *)(result + 2408) = 0u;
    *(_OWORD *)(result + 2392) = 0u;
    *(_OWORD *)(result + 2376) = 0u;
    *(_OWORD *)(result + 2360) = 0u;
    *(_OWORD *)(result + 2344) = 0u;
    *(_OWORD *)(result + 2328) = 0u;
    *(_OWORD *)(result + 2312) = 0u;
    *(_OWORD *)(result + 2296) = 0u;
    *(_OWORD *)(result + 2280) = 0u;
    *(_OWORD *)(result + 2264) = 0u;
    *(_OWORD *)(result + 2248) = 0u;
    *(_OWORD *)(result + 2232) = 0u;
    *(_OWORD *)(result + 2216) = 0u;
    *(_OWORD *)(result + 2200) = 0u;
    *(_OWORD *)(result + 2184) = 0u;
    *(_OWORD *)(result + 2168) = 0u;
    *(_OWORD *)(result + 2152) = 0u;
    *(_OWORD *)(result + 2136) = 0u;
    *(_OWORD *)(result + 2120) = 0u;
    *(_OWORD *)(result + 2104) = 0u;
    *(_OWORD *)(result + 2088) = 0u;
    *(_OWORD *)(result + 2072) = 0u;
    *(_OWORD *)(result + 2056) = 0u;
    *(_OWORD *)(result + 2040) = 0u;
    *(_OWORD *)(result + 2024) = 0u;
    *(_OWORD *)(result + 2008) = 0u;
    *(_OWORD *)(result + 1992) = 0u;
    *(_OWORD *)(result + 1976) = 0u;
    *(_OWORD *)(result + 1960) = 0u;
    *(_OWORD *)(result + 1944) = 0u;
    *(_OWORD *)(result + 1928) = 0u;
    *(_OWORD *)(result + 1912) = 0u;
    *(_OWORD *)(result + 1896) = 0u;
    *(_OWORD *)(result + 1880) = 0u;
    *(_OWORD *)(result + 1864) = 0u;
    *(_OWORD *)(result + 1848) = 0u;
    *(_OWORD *)(result + 1832) = 0u;
    *(_OWORD *)(result + 1816) = 0u;
    *(_OWORD *)(result + 1800) = 0u;
    *(_OWORD *)(result + 1784) = 0u;
    *(_OWORD *)(result + 1768) = 0u;
    *(_OWORD *)(result + 1752) = 0u;
    *(_OWORD *)(result + 1736) = 0u;
    *(_OWORD *)(result + 1720) = 0u;
    *(_OWORD *)(result + 1704) = 0u;
    *(_OWORD *)(result + 1688) = 0u;
    *(_OWORD *)(result + 1672) = 0u;
    *(_OWORD *)(result + 1656) = 0u;
    *(_OWORD *)(result + 1640) = 0u;
    *(_OWORD *)(result + 1624) = 0u;
    *(_OWORD *)(result + 1608) = 0u;
    *(_OWORD *)(result + 1592) = 0u;
    *(_OWORD *)(result + 1576) = 0u;
    *(_OWORD *)(result + 1560) = 0u;
    *(_OWORD *)(result + 1544) = 0u;
    *(_OWORD *)(result + 1528) = 0u;
    *(_OWORD *)(result + 1512) = 0u;
    *(_OWORD *)(result + 1496) = 0u;
    *(_OWORD *)(result + 1480) = 0u;
    *(_OWORD *)(result + 1464) = 0u;
    *(_OWORD *)(result + 1448) = 0u;
    *(_OWORD *)(result + 1432) = 0u;
    *(_OWORD *)(result + 1416) = 0u;
    *(_OWORD *)(result + 1400) = 0u;
    *(_OWORD *)(result + 1384) = 0u;
    *(_OWORD *)(result + 1368) = 0u;
    *(_OWORD *)(result + 1352) = 0u;
    *(_OWORD *)(result + 1336) = 0u;
    *(_OWORD *)(result + 1320) = 0u;
    *(_OWORD *)(result + 1304) = 0u;
    *(_OWORD *)(result + 1288) = 0u;
    *(_OWORD *)(result + 1272) = 0u;
    *(_OWORD *)(result + 1256) = 0u;
    *(_OWORD *)(result + 1240) = 0u;
    *(_OWORD *)(result + 1224) = 0u;
    *(_OWORD *)(result + 1208) = 0u;
    *(_OWORD *)(result + 1192) = 0u;
    *(_OWORD *)(result + 1176) = 0u;
    *(_OWORD *)(result + 1160) = 0u;
    *(_OWORD *)(result + 1144) = 0u;
    *(_OWORD *)(result + 1128) = 0u;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 3202) = v3;
  return result;
}

void type metadata accessor for template_update_info_v2_t(uint64_t a1)
{
  sub_24B7B466C(a1, &qword_2579B04F0);
}

uint64_t sub_24B7B3BFC()
{
  return sub_24B7B19A0(&qword_2579B0508, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_24B7F8BE0);
}

uint64_t sub_24B7B3C28()
{
  return sub_24B7B19A0(&qword_2579B0510, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_24B7F8BB4);
}

uint64_t sub_24B7B3C54()
{
  return sub_24B7B19A0(&qword_2579B0518, (uint64_t (*)(uint64_t))type metadata accessor for FileProtectionType, (uint64_t)&unk_24B7F8CF4);
}

uint64_t sub_24B7B3C80()
{
  return sub_24B7B19A0(&qword_2579B0520, (uint64_t (*)(uint64_t))type metadata accessor for FileProtectionType, (uint64_t)&unk_24B7F8CC8);
}

uint64_t sub_24B7B3CAC()
{
  return sub_24B7B19A0(&qword_2579B0528, (uint64_t (*)(uint64_t))type metadata accessor for FileProtectionType, (uint64_t)&unk_24B7F8D64);
}

uint64_t sub_24B7B3CD8()
{
  return sub_24B7B19A0(&qword_2579B0530, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_24B7F8C50);
}

__n128 __swift_memcpy98_1(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_WORD *)(a1 + 96) = *((_WORD *)a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t sub_24B7B3D30(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 98))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_24B7B3D50(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 96) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 98) = v3;
  return result;
}

void type metadata accessor for image_metadata_v2(uint64_t a1)
{
  sub_24B7B466C(a1, &qword_2579B0550);
}

void *__swift_memcpy3080_1(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC08uLL);
}

uint64_t sub_24B7B3DB4(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 3080))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_24B7B3DD4(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 3048) = 0u;
    *(_OWORD *)(result + 3032) = 0u;
    *(_OWORD *)(result + 3016) = 0u;
    *(_OWORD *)(result + 3000) = 0u;
    *(_OWORD *)(result + 2984) = 0u;
    *(_OWORD *)(result + 2968) = 0u;
    *(_OWORD *)(result + 2952) = 0u;
    *(_OWORD *)(result + 2936) = 0u;
    *(_OWORD *)(result + 2920) = 0u;
    *(_OWORD *)(result + 2904) = 0u;
    *(_OWORD *)(result + 2888) = 0u;
    *(_OWORD *)(result + 2872) = 0u;
    *(_OWORD *)(result + 2856) = 0u;
    *(_OWORD *)(result + 2840) = 0u;
    *(_OWORD *)(result + 2824) = 0u;
    *(_OWORD *)(result + 2808) = 0u;
    *(_OWORD *)(result + 2792) = 0u;
    *(_OWORD *)(result + 2776) = 0u;
    *(_OWORD *)(result + 2760) = 0u;
    *(_OWORD *)(result + 2744) = 0u;
    *(_OWORD *)(result + 2728) = 0u;
    *(_OWORD *)(result + 2712) = 0u;
    *(_OWORD *)(result + 2696) = 0u;
    *(_OWORD *)(result + 2680) = 0u;
    *(_OWORD *)(result + 2664) = 0u;
    *(_OWORD *)(result + 2648) = 0u;
    *(_OWORD *)(result + 2632) = 0u;
    *(_OWORD *)(result + 2616) = 0u;
    *(_OWORD *)(result + 2600) = 0u;
    *(_OWORD *)(result + 2584) = 0u;
    *(_OWORD *)(result + 2568) = 0u;
    *(_OWORD *)(result + 2552) = 0u;
    *(_OWORD *)(result + 2536) = 0u;
    *(_OWORD *)(result + 2520) = 0u;
    *(_OWORD *)(result + 2504) = 0u;
    *(_OWORD *)(result + 2488) = 0u;
    *(_OWORD *)(result + 2472) = 0u;
    *(_OWORD *)(result + 2456) = 0u;
    *(_OWORD *)(result + 2440) = 0u;
    *(_OWORD *)(result + 2424) = 0u;
    *(_OWORD *)(result + 2408) = 0u;
    *(_OWORD *)(result + 2392) = 0u;
    *(_OWORD *)(result + 2376) = 0u;
    *(_OWORD *)(result + 2360) = 0u;
    *(_OWORD *)(result + 2344) = 0u;
    *(_OWORD *)(result + 2328) = 0u;
    *(_OWORD *)(result + 2312) = 0u;
    *(_OWORD *)(result + 2296) = 0u;
    *(_OWORD *)(result + 2280) = 0u;
    *(_OWORD *)(result + 2264) = 0u;
    *(_OWORD *)(result + 2248) = 0u;
    *(_OWORD *)(result + 2232) = 0u;
    *(_OWORD *)(result + 2216) = 0u;
    *(_OWORD *)(result + 2200) = 0u;
    *(_OWORD *)(result + 2184) = 0u;
    *(_OWORD *)(result + 2168) = 0u;
    *(_OWORD *)(result + 2152) = 0u;
    *(_OWORD *)(result + 2136) = 0u;
    *(_OWORD *)(result + 2120) = 0u;
    *(_OWORD *)(result + 2104) = 0u;
    *(_OWORD *)(result + 2088) = 0u;
    *(_OWORD *)(result + 2072) = 0u;
    *(_OWORD *)(result + 2056) = 0u;
    *(_OWORD *)(result + 3064) = 0u;
    *(_OWORD *)(result + 2040) = 0u;
    *(_OWORD *)(result + 2024) = 0u;
    *(_OWORD *)(result + 2008) = 0u;
    *(_OWORD *)(result + 1992) = 0u;
    *(_OWORD *)(result + 1976) = 0u;
    *(_OWORD *)(result + 1960) = 0u;
    *(_OWORD *)(result + 1944) = 0u;
    *(_OWORD *)(result + 1928) = 0u;
    *(_OWORD *)(result + 1912) = 0u;
    *(_OWORD *)(result + 1896) = 0u;
    *(_OWORD *)(result + 1880) = 0u;
    *(_OWORD *)(result + 1864) = 0u;
    *(_OWORD *)(result + 1848) = 0u;
    *(_OWORD *)(result + 1832) = 0u;
    *(_OWORD *)(result + 1816) = 0u;
    *(_OWORD *)(result + 1800) = 0u;
    *(_OWORD *)(result + 1784) = 0u;
    *(_OWORD *)(result + 1768) = 0u;
    *(_OWORD *)(result + 1752) = 0u;
    *(_OWORD *)(result + 1736) = 0u;
    *(_OWORD *)(result + 1720) = 0u;
    *(_OWORD *)(result + 1704) = 0u;
    *(_OWORD *)(result + 1688) = 0u;
    *(_OWORD *)(result + 1672) = 0u;
    *(_OWORD *)(result + 1656) = 0u;
    *(_OWORD *)(result + 1640) = 0u;
    *(_OWORD *)(result + 1624) = 0u;
    *(_OWORD *)(result + 1608) = 0u;
    *(_OWORD *)(result + 1592) = 0u;
    *(_OWORD *)(result + 1576) = 0u;
    *(_OWORD *)(result + 1560) = 0u;
    *(_OWORD *)(result + 1544) = 0u;
    *(_OWORD *)(result + 1528) = 0u;
    *(_OWORD *)(result + 1512) = 0u;
    *(_OWORD *)(result + 1496) = 0u;
    *(_OWORD *)(result + 1480) = 0u;
    *(_OWORD *)(result + 1464) = 0u;
    *(_OWORD *)(result + 1448) = 0u;
    *(_OWORD *)(result + 1432) = 0u;
    *(_OWORD *)(result + 1416) = 0u;
    *(_OWORD *)(result + 1400) = 0u;
    *(_OWORD *)(result + 1384) = 0u;
    *(_OWORD *)(result + 1368) = 0u;
    *(_OWORD *)(result + 1352) = 0u;
    *(_OWORD *)(result + 1336) = 0u;
    *(_OWORD *)(result + 1320) = 0u;
    *(_OWORD *)(result + 1304) = 0u;
    *(_OWORD *)(result + 1288) = 0u;
    *(_OWORD *)(result + 1272) = 0u;
    *(_OWORD *)(result + 1256) = 0u;
    *(_OWORD *)(result + 1240) = 0u;
    *(_OWORD *)(result + 1224) = 0u;
    *(_OWORD *)(result + 1208) = 0u;
    *(_OWORD *)(result + 1192) = 0u;
    *(_OWORD *)(result + 1176) = 0u;
    *(_OWORD *)(result + 1160) = 0u;
    *(_OWORD *)(result + 1144) = 0u;
    *(_OWORD *)(result + 1128) = 0u;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 3080) = v3;
  return result;
}

void type metadata accessor for match_node_placement_v1_t(uint64_t a1)
{
  sub_24B7B466C(a1, &qword_2579B0558);
}

__n128 __swift_memcpy20_1(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t sub_24B7B4154(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 20))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_24B7B4174(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 20) = v3;
  return result;
}

void type metadata accessor for identity_v1_t(uint64_t a1)
{
  sub_24B7B466C(a1, &qword_2579B0560);
}

void type metadata accessor for biodevice_v1_t(uint64_t a1)
{
  sub_24B7B466C(a1, &qword_2579B0568);
}

void *__swift_memcpy3060_1(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xBF4uLL);
}

uint64_t sub_24B7B41D0(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 3060))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_24B7B41F0(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 3048) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 3056) = 0;
    *(_OWORD *)(result + 3032) = 0u;
    *(_OWORD *)(result + 3016) = 0u;
    *(_OWORD *)(result + 3000) = 0u;
    *(_OWORD *)(result + 2984) = 0u;
    *(_OWORD *)(result + 2968) = 0u;
    *(_OWORD *)(result + 2952) = 0u;
    *(_OWORD *)(result + 2936) = 0u;
    *(_OWORD *)(result + 2920) = 0u;
    *(_OWORD *)(result + 2904) = 0u;
    *(_OWORD *)(result + 2888) = 0u;
    *(_OWORD *)(result + 2872) = 0u;
    *(_OWORD *)(result + 2856) = 0u;
    *(_OWORD *)(result + 2840) = 0u;
    *(_OWORD *)(result + 2824) = 0u;
    *(_OWORD *)(result + 2808) = 0u;
    *(_OWORD *)(result + 2792) = 0u;
    *(_OWORD *)(result + 2776) = 0u;
    *(_OWORD *)(result + 2760) = 0u;
    *(_OWORD *)(result + 2744) = 0u;
    *(_OWORD *)(result + 2728) = 0u;
    *(_OWORD *)(result + 2712) = 0u;
    *(_OWORD *)(result + 2696) = 0u;
    *(_OWORD *)(result + 2680) = 0u;
    *(_OWORD *)(result + 2664) = 0u;
    *(_OWORD *)(result + 2648) = 0u;
    *(_OWORD *)(result + 2632) = 0u;
    *(_OWORD *)(result + 2616) = 0u;
    *(_OWORD *)(result + 2600) = 0u;
    *(_OWORD *)(result + 2584) = 0u;
    *(_OWORD *)(result + 2568) = 0u;
    *(_OWORD *)(result + 2552) = 0u;
    *(_OWORD *)(result + 2536) = 0u;
    *(_OWORD *)(result + 2520) = 0u;
    *(_OWORD *)(result + 2504) = 0u;
    *(_OWORD *)(result + 2488) = 0u;
    *(_OWORD *)(result + 2472) = 0u;
    *(_OWORD *)(result + 2456) = 0u;
    *(_OWORD *)(result + 2440) = 0u;
    *(_OWORD *)(result + 2424) = 0u;
    *(_OWORD *)(result + 2408) = 0u;
    *(_OWORD *)(result + 2392) = 0u;
    *(_OWORD *)(result + 2376) = 0u;
    *(_OWORD *)(result + 2360) = 0u;
    *(_OWORD *)(result + 2344) = 0u;
    *(_OWORD *)(result + 2328) = 0u;
    *(_OWORD *)(result + 2312) = 0u;
    *(_OWORD *)(result + 2296) = 0u;
    *(_OWORD *)(result + 2280) = 0u;
    *(_OWORD *)(result + 2264) = 0u;
    *(_OWORD *)(result + 2248) = 0u;
    *(_OWORD *)(result + 2232) = 0u;
    *(_OWORD *)(result + 2216) = 0u;
    *(_OWORD *)(result + 2200) = 0u;
    *(_OWORD *)(result + 2184) = 0u;
    *(_OWORD *)(result + 2168) = 0u;
    *(_OWORD *)(result + 2152) = 0u;
    *(_OWORD *)(result + 2136) = 0u;
    *(_OWORD *)(result + 2120) = 0u;
    *(_OWORD *)(result + 2104) = 0u;
    *(_OWORD *)(result + 2088) = 0u;
    *(_OWORD *)(result + 2072) = 0u;
    *(_OWORD *)(result + 2056) = 0u;
    *(_OWORD *)(result + 2040) = 0u;
    *(_OWORD *)(result + 2024) = 0u;
    *(_OWORD *)(result + 2008) = 0u;
    *(_OWORD *)(result + 1992) = 0u;
    *(_OWORD *)(result + 1976) = 0u;
    *(_OWORD *)(result + 1960) = 0u;
    *(_OWORD *)(result + 1944) = 0u;
    *(_OWORD *)(result + 1928) = 0u;
    *(_OWORD *)(result + 1912) = 0u;
    *(_OWORD *)(result + 1896) = 0u;
    *(_OWORD *)(result + 1880) = 0u;
    *(_OWORD *)(result + 1864) = 0u;
    *(_OWORD *)(result + 1848) = 0u;
    *(_OWORD *)(result + 1832) = 0u;
    *(_OWORD *)(result + 1816) = 0u;
    *(_OWORD *)(result + 1800) = 0u;
    *(_OWORD *)(result + 1784) = 0u;
    *(_OWORD *)(result + 1768) = 0u;
    *(_OWORD *)(result + 1752) = 0u;
    *(_OWORD *)(result + 1736) = 0u;
    *(_OWORD *)(result + 1720) = 0u;
    *(_OWORD *)(result + 1704) = 0u;
    *(_OWORD *)(result + 1688) = 0u;
    *(_OWORD *)(result + 1672) = 0u;
    *(_OWORD *)(result + 1656) = 0u;
    *(_OWORD *)(result + 1640) = 0u;
    *(_OWORD *)(result + 1624) = 0u;
    *(_OWORD *)(result + 1608) = 0u;
    *(_OWORD *)(result + 1592) = 0u;
    *(_OWORD *)(result + 1576) = 0u;
    *(_OWORD *)(result + 1560) = 0u;
    *(_OWORD *)(result + 1544) = 0u;
    *(_OWORD *)(result + 1528) = 0u;
    *(_OWORD *)(result + 1512) = 0u;
    *(_OWORD *)(result + 1496) = 0u;
    *(_OWORD *)(result + 1480) = 0u;
    *(_OWORD *)(result + 1464) = 0u;
    *(_OWORD *)(result + 1448) = 0u;
    *(_OWORD *)(result + 1432) = 0u;
    *(_OWORD *)(result + 1416) = 0u;
    *(_OWORD *)(result + 1400) = 0u;
    *(_OWORD *)(result + 1384) = 0u;
    *(_OWORD *)(result + 1368) = 0u;
    *(_OWORD *)(result + 1352) = 0u;
    *(_OWORD *)(result + 1336) = 0u;
    *(_OWORD *)(result + 1320) = 0u;
    *(_OWORD *)(result + 1304) = 0u;
    *(_OWORD *)(result + 1288) = 0u;
    *(_OWORD *)(result + 1272) = 0u;
    *(_OWORD *)(result + 1256) = 0u;
    *(_OWORD *)(result + 1240) = 0u;
    *(_OWORD *)(result + 1224) = 0u;
    *(_OWORD *)(result + 1208) = 0u;
    *(_OWORD *)(result + 1192) = 0u;
    *(_OWORD *)(result + 1176) = 0u;
    *(_OWORD *)(result + 1160) = 0u;
    *(_OWORD *)(result + 1144) = 0u;
    *(_OWORD *)(result + 1128) = 0u;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 3060) = v3;
  return result;
}

void type metadata accessor for node_placement_v1_t(uint64_t a1)
{
  sub_24B7B466C(a1, &qword_2579B0570);
}

uint64_t __swift_memcpy6_1(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_WORD *)(result + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t sub_24B7B4570(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 6))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_24B7B4590(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 6) = v3;
  return result;
}

void type metadata accessor for tsTrans_v1(uint64_t a1)
{
  sub_24B7B466C(a1, &qword_2579B0578);
}

uint64_t __swift_memcpy10_1(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t _s13NodePlacementV4NodeVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s13NodePlacementV4NodeVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 10) = v3;
  return result;
}

void type metadata accessor for node_item_v1_t(uint64_t a1)
{
  sub_24B7B466C(a1, &qword_2579B0580);
}

uint64_t __swift_memcpy6_2(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_WORD *)(result + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)result = v2;
  return result;
}

void type metadata accessor for tsTrans(uint64_t a1)
{
  sub_24B7B466C(a1, &qword_2579B0588);
}

void sub_24B7B466C(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

void sub_24B7B46B0()
{
  swift_deletedMethodError();
  __break(1u);
}

uint64_t sub_24B7B47C8(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;

  v1 = a1[3];
  v2 = __swift_project_boxed_opaque_existential_1(a1, v1);
  return sub_24B7B6E68((uint64_t)v2, v1);
}

uint64_t sub_24B7B47F4(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11)
{
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _DWORD v43[4];
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  os_log_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v52 = a5;
  v53 = a6;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_24B7F34D8();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B7B6F60(a4, (uint64_t)v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_24B7F34CC();
    sub_24B7B2F44((uint64_t)v19, &qword_2579B03C8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v19, v20);
  }
  swift_bridgeObjectRetain();
  v24 = a1;
  swift_bridgeObjectRetain();
  v25 = a1;
  v26 = sub_24B7F34B4();
  v27 = sub_24B7F36AC();
  v28 = v27;
  if (os_log_type_enabled(v26, v27))
  {
    v49 = a11;
    v47 = a9;
    v48 = a10;
    v29 = swift_slowAlloc();
    v43[3] = a7;
    v30 = v29;
    v31 = swift_slowAlloc();
    v50 = v26;
    v32 = (_QWORD *)v31;
    v45 = v31;
    v51 = swift_slowAlloc();
    v55 = v51;
    *(_DWORD *)v30 = 136316162;
    if (!a3)
      a2 = 63;
    v46 = v28;
    if (a3)
      v33 = a3;
    else
      v33 = 0xE100000000000000;
    v44 = a8;
    swift_bridgeObjectRetain();
    v54 = sub_24B7AC4E4(a2, v33, &v55);
    sub_24B7F3724();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2112;
    v34 = a1;
    v35 = _swift_stdlib_bridgeErrorToNSError();
    v54 = v35;
    sub_24B7F3724();
    *v32 = v35;

    *(_WORD *)(v30 + 22) = 2080;
    v36 = sub_24B7F37C0();
    v54 = sub_24B7AC4E4(v36, v37, &v55);
    sub_24B7F3724();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 32) = 2048;
    v54 = v44;
    sub_24B7F3724();
    *(_WORD *)(v30 + 42) = 2080;
    v38 = sub_24B7F37C0();
    v54 = sub_24B7AC4E4(v38, v39, &v55);
    sub_24B7F3724();
    swift_bridgeObjectRelease();
    v26 = v50;
    _os_log_impl(&dword_24B74E000, v50, (os_log_type_t)v46, "CBAssert: (%s) threw %@ at %s:%lu in %s", (uint8_t *)v30, 0x34u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04C8);
    v40 = v45;
    swift_arrayDestroy();
    MEMORY[0x24BD27D9C](v40, -1, -1);
    v41 = v51;
    swift_arrayDestroy();
    MEMORY[0x24BD27D9C](v41, -1, -1);
    MEMORY[0x24BD27D9C](v30, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v23, v20);
}

uint64_t sub_24B7B4BE0(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12)
{
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _DWORD v37[4];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v44 = a6;
  v45 = a7;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_24B7F34D8();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)v37 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = a1(v22);
  if ((v25 & 1) == 0)
  {
    sub_24B7B6F60(a5, (uint64_t)v19);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
    {
      sub_24B7F34CC();
      sub_24B7B2F44((uint64_t)v19, &qword_2579B03C8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v24, v19, v20);
    }
    swift_bridgeObjectRetain_n();
    v26 = sub_24B7F34B4();
    v27 = sub_24B7F36AC();
    if (os_log_type_enabled(v26, v27))
    {
      v41 = a12;
      v39 = a10;
      v40 = a11;
      v38 = a9;
      v28 = swift_slowAlloc();
      v37[3] = a8;
      v29 = v28;
      v42 = swift_slowAlloc();
      v47 = v42;
      *(_DWORD *)v29 = 136315906;
      if (!a4)
        a3 = 63;
      v43 = v20;
      if (a4)
        v30 = a4;
      else
        v30 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v46 = sub_24B7AC4E4(a3, v30, &v47);
      sub_24B7F3724();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2080;
      v31 = sub_24B7F37C0();
      v46 = sub_24B7AC4E4(v31, v32, &v47);
      sub_24B7F3724();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 22) = 2048;
      v46 = v38;
      sub_24B7F3724();
      *(_WORD *)(v29 + 32) = 2080;
      v33 = sub_24B7F37C0();
      v46 = sub_24B7AC4E4(v33, v34, &v47);
      sub_24B7F3724();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B74E000, v26, v27, "CBAssert: (%s) at %s:%lu in %s", (uint8_t *)v29, 0x2Au);
      v35 = v42;
      swift_arrayDestroy();
      MEMORY[0x24BD27D9C](v35, -1, -1);
      MEMORY[0x24BD27D9C](v29, -1, -1);

      (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v43);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
    }
  }
  return v25 & 1;
}

BOOL sub_24B7B4F38(uint64_t (*a1)(uint64_t), uint64_t a2, NSObject *a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  os_log_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  os_log_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v49 = a3;
  v50 = a6;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_24B7F34D8();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a1(v21);
  if (v24)
  {
    sub_24B7B6F60(a5, (uint64_t)v18);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
    {
      sub_24B7F34CC();
      sub_24B7B2F44((uint64_t)v18, &qword_2579B03C8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v23, v18, v19);
    }
    swift_bridgeObjectRetain_n();
    v25 = sub_24B7F34B4();
    v26 = sub_24B7F36AC();
    v27 = v26;
    if (os_log_type_enabled(v25, v26))
    {
      v46 = a12;
      v44 = a10;
      v45 = a11;
      v42 = a9;
      v28 = swift_slowAlloc();
      v41 = a7;
      v29 = v28;
      v47 = swift_slowAlloc();
      v52 = v47;
      *(_DWORD *)v29 = 136316162;
      v48 = v19;
      v30 = sub_24B7B6E00();
      v43 = v27;
      v51 = sub_24B7AC4E4(v30, v31, &v52);
      sub_24B7F3724();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2080;
      if (a4)
        v32 = (uint64_t)v49;
      else
        v32 = 63;
      if (a4)
        v33 = a4;
      else
        v33 = 0xE100000000000000;
      v49 = v25;
      swift_bridgeObjectRetain();
      v51 = sub_24B7AC4E4(v32, v33, &v52);
      sub_24B7F3724();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 22) = 2080;
      v34 = sub_24B7F37C0();
      v51 = sub_24B7AC4E4(v34, v35, &v52);
      sub_24B7F3724();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 32) = 2048;
      v51 = v42;
      sub_24B7F3724();
      *(_WORD *)(v29 + 42) = 2080;
      v36 = sub_24B7F37C0();
      v51 = sub_24B7AC4E4(v36, v37, &v52);
      sub_24B7F3724();
      swift_bridgeObjectRelease();
      v38 = v49;
      _os_log_impl(&dword_24B74E000, v49, (os_log_type_t)v43, "CBAssert: err == %s: (%s) at %s:%lu in %s", (uint8_t *)v29, 0x34u);
      v39 = v47;
      swift_arrayDestroy();
      MEMORY[0x24BD27D9C](v39, -1, -1);
      MEMORY[0x24BD27D9C](v29, -1, -1);

      (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v48);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
    }
  }
  return v24 == 0;
}

BOOL sub_24B7B52EC(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12)
{
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  _BYTE *v26;
  unint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _BYTE v40[12];
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[4];

  v49 = a8;
  v50 = a5;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = &v40[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = sub_24B7F34D8();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = &v40[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a1(v52, v22);
  v25 = v52[3];
  sub_24B7B2F44((uint64_t)v52, &qword_2579B0590);
  if (!v25)
  {
    v47 = a6;
    v48 = a7;
    sub_24B7B6F60(v50, (uint64_t)v19);
    v26 = v24;
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
    {
      sub_24B7F34CC();
      sub_24B7B2F44((uint64_t)v19, &qword_2579B03C8);
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v21 + 32))(v24, v19, v20);
    }
    v27 = a4;
    swift_bridgeObjectRetain_n();
    v28 = sub_24B7F34B4();
    v29 = sub_24B7F36AC();
    v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      v45 = a12;
      v43 = a10;
      v44 = a11;
      v42 = a9;
      v31 = swift_slowAlloc();
      v46 = swift_slowAlloc();
      v52[0] = v46;
      *(_DWORD *)v31 = 136315906;
      v50 = 0;
      if (v27)
        v32 = a3;
      else
        v32 = 63;
      if (v27)
        v33 = v27;
      else
        v33 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v51 = sub_24B7AC4E4(v32, v33, v52);
      v41 = v30;
      sub_24B7F3724();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2080;
      v34 = sub_24B7F37C0();
      v51 = sub_24B7AC4E4(v34, v35, v52);
      sub_24B7F3724();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 22) = 2048;
      v51 = v42;
      sub_24B7F3724();
      *(_WORD *)(v31 + 32) = 2080;
      v36 = sub_24B7F37C0();
      v51 = sub_24B7AC4E4(v36, v37, v52);
      v25 = v50;
      sub_24B7F3724();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B74E000, v28, (os_log_type_t)v41, "CBAssert: nil (%s) at %s:%lu in %s", (uint8_t *)v31, 0x2Au);
      v38 = v46;
      swift_arrayDestroy();
      MEMORY[0x24BD27D9C](v38, -1, -1);
      MEMORY[0x24BD27D9C](v31, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(_BYTE *, uint64_t))(v21 + 8))(v26, v20);
  }
  return v25 != 0;
}

id sub_24B7B5668()
{
  id result;
  id v1;
  uint64_t v2;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (result)
  {
    v1 = result;
    type metadata accessor for BiometricKitXPCServerMesaSwift();
    v2 = swift_allocObject();
    result = (id)sub_24B7F34C0();
    *(_QWORD *)(v2 + OBJC_IVAR____TtC5BKDM130BiometricKitXPCServerMesaSwift_xpcServer) = v1;
    qword_2579B7FB8 = v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t *sub_24B7B571C()
{
  if (qword_2579B1D50 != -1)
    swift_once();
  return &qword_2579B7FB8;
}

uint64_t sub_24B7B575C()
{
  if (qword_2579B1D50 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_24B7B579C()
{
  return sub_24B7F34C0();
}

id sub_24B7B57D4(unsigned __int16 a1, unsigned __int16 a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (!*a8)
  {
    v10 = a7 - a6;
    if (!a6)
      v10 = 0;
    *a8 = v10;
  }
  if (a5 & 1 | (a3 == 0))
    v11 = 0;
  else
    v11 = a4 - a3;
  if (a5 & 1 | (a3 == 0))
    v12 = 0;
  else
    v12 = a3;
  return objc_msgSend(*(id *)(v8 + OBJC_IVAR____TtC5BKDM130BiometricKitXPCServerMesaSwift_xpcServer), sel_performCommand_inValue_inData_inSize_outData_outSize_, a1, a2, v12, v11, a6);
}

void sub_24B7B5838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24B7B7C0C(a3);
  __asm { BR              X11 }
}

uint64_t sub_24B7B5898()
{
  int v1;
  uint64_t v2;
  unint64_t v3;

  swift_retain();
  sub_24B7B68FC((uint64_t)&v2);
  if (!v1)
    __asm { BR              X10 }
  sub_24B7B18E0(v2, v3);
  return 0;
}

uint64_t sub_24B7B5A18()
{
  uint64_t v0;
  unsigned __int8 v2;
  _QWORD v3[2];

  v3[1] = *MEMORY[0x24BDAC8D0];
  v2 = 0;
  v3[0] = 1;
  if (objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5BKDM130BiometricKitXPCServerMesaSwift_xpcServer), sel_performCommand_inValue_inData_inSize_outData_outSize_, 42, 0, 0, 0, &v2, v3))return 0;
  else
    return v2;
}

uint64_t sub_24B7B5AA4()
{
  uint64_t v0;
  unsigned int v2;
  _QWORD v3[2];

  v3[1] = *MEMORY[0x24BDAC8D0];
  v2 = 0;
  v3[0] = 4;
  if (objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5BKDM130BiometricKitXPCServerMesaSwift_xpcServer), sel_performCommand_inValue_inData_inSize_outData_outSize_, 16, 0, 0, 0, &v2, v3))return 0;
  else
    return v2;
}

id sub_24B7B5B30()
{
  uint64_t v0;
  id result;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5BKDM130BiometricKitXPCServerMesaSwift_xpcServer), sel_accessories);
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, sel_allObjects);

    v4 = sub_24B7F3658();
    v5 = sub_24B7B5BD0(v4);
    swift_bridgeObjectRelease();
    if (v5)
      return (id)v5;
    else
      return (id)MEMORY[0x24BEE4AF8];
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B7B5BD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  _BYTE v5[32];
  uint64_t v6;

  v6 = MEMORY[0x24BEE4AF8];
  v2 = *(_QWORD *)(a1 + 16);
  sub_24B7F37FC();
  if (!v2)
    return v6;
  for (i = a1 + 32; ; i += 32)
  {
    sub_24B7B25B8(i, (uint64_t)v5);
    sub_24B7B2930(0, &qword_2579B0470);
    if (!swift_dynamicCast())
      break;
    sub_24B7F37E4();
    sub_24B7F3808();
    sub_24B7F3814();
    sub_24B7F37F0();
    if (!--v2)
      return v6;
  }
  swift_release();

  return 0;
}

void sub_24B7B5CE8(void *a1)
{
  if (!a1 || objc_msgSend(a1, sel_type) != 2)
    sub_24B7B5838(33, 0, 184320);
}

id sub_24B7B5D34()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5BKDM130BiometricKitXPCServerMesaSwift_xpcServer), sel_sensorReady);
}

id sub_24B7B5D5C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5BKDM130BiometricKitXPCServerMesaSwift_xpcServer), sel_isClassCFileAccessible);
}

id sub_24B7B5D84()
{
  uint64_t v0;
  id result;
  void *v2;
  uint64_t v3;

  result = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5BKDM130BiometricKitXPCServerMesaSwift_xpcServer), sel_identities);
  if (result)
  {
    v2 = result;
    sub_24B7B2930(0, (unint64_t *)&qword_2579B0480);
    v3 = sub_24B7F3658();

    return (id)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B7B5DF8(unsigned int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  void (*v13)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _DWORD v18[5];
  unsigned int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v2 = v1;
  v24 = *MEMORY[0x24BDAC8D0];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = 0;
  v23 = 0xE000000000000000;
  swift_retain();
  sub_24B7F37A8();
  swift_bridgeObjectRelease();
  v22 = 0xD000000000000017;
  v23 = 0x800000024B8026C0;
  LODWORD(v20) = a1;
  sub_24B7F3988();
  sub_24B7F35BC();
  swift_bridgeObjectRelease();
  sub_24B7F35BC();
  v7 = v22;
  v8 = v23;
  v9 = v2 + OBJC_IVAR____TtC5BKDM130BiometricKitXPCServerMesaSwift_logger;
  v10 = sub_24B7F34D8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v12(v6, v9, v10);
  v13 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56);
  v13(v6, 0, 1, v10);
  swift_retain();
  LOBYTE(v7) = sub_24B7B6FA8(v7, v8, (uint64_t)v6, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/BiometricKitXPCServerMesa.swift", 117, 2, 201, (uint64_t)"templateListData(userID:)", 25, 2u, v2, a1);
  swift_bridgeObjectRelease();
  swift_release();
  sub_24B7B2F44((uint64_t)v6, &qword_2579B03C8);
  swift_release();
  if ((v7 & 1) != 0)
  {
    v19 = 0;
    v22 = 0;
    v23 = 0xE000000000000000;
    swift_retain();
    sub_24B7F37A8();
    swift_bridgeObjectRelease();
    v22 = 0xD00000000000002BLL;
    v23 = 0x800000024B802780;
    LODWORD(v20) = a1;
    sub_24B7F3988();
    sub_24B7F35BC();
    swift_bridgeObjectRelease();
    v14 = v22;
    v15 = v23;
    v12(v6, v9, v10);
    v13(v6, 0, 1, v10);
    LOBYTE(v14) = sub_24B7B7358(v14, v15, (uint64_t)v6, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/BiometricKitXPCServerMesa.swift", 117, 2, 204, (uint64_t)"templateListData(userID:)", 25, 2u, v2, a1, (uint64_t)&v19);
    swift_bridgeObjectRelease();
    swift_release();
    sub_24B7B2F44((uint64_t)v6, &qword_2579B03C8);
    if ((v14 & 1) != 0)
    {
      if (v19)
      {
        v18[4] = a1;
        v21 = 263;
        v22 = sub_24B7B7C0C(v19);
        v23 = v16;
        __asm { BR              X11 }
      }
    }
  }
  return 0;
}

id sub_24B7B62A8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5BKDM130BiometricKitXPCServerMesaSwift_xpcServer), sel_isDisplayOn);
}

uint64_t sub_24B7B62D0(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _DWORD v13[4];
  unint64_t v14;
  unint64_t v15;
  unsigned int v16;
  uint64_t v17;

  v2 = v1;
  v17 = *MEMORY[0x24BDAC8D0];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = 0;
  v14 = 0;
  v15 = 0xE000000000000000;
  swift_retain();
  sub_24B7F37A8();
  swift_bridgeObjectRelease();
  v14 = 0xD000000000000020;
  v15 = 0x800000024B8027B0;
  v13[3] = a1;
  sub_24B7F3988();
  sub_24B7F35BC();
  swift_bridgeObjectRelease();
  v7 = v14;
  v8 = v15;
  v9 = v2 + OBJC_IVAR____TtC5BKDM130BiometricKitXPCServerMesaSwift_logger;
  v10 = sub_24B7F34D8();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v6, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  sub_24B7B7754(v7, v8, (uint64_t)v6, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/biometrickitd/BiometricKitXPCServerMesa.swift", 117, 2, 220, (uint64_t)"sksLockState(userID:)", 21, 2u, v2, a1, (uint64_t)&v16);
  swift_bridgeObjectRelease();
  swift_release();
  sub_24B7B2F44((uint64_t)v6, &qword_2579B03C8);
  result = v16;
  if (v16 >= 0x10000)
  {
    result = sub_24B7F3838();
    __break(1u);
  }
  return result;
}

uint64_t sub_24B7B6508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5BKDM130BiometricKitXPCServerMesaSwift_logger;
  v2 = sub_24B7F34D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t sub_24B7B655C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5BKDM130BiometricKitXPCServerMesaSwift_logger;
  v2 = sub_24B7F34D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

void sub_24B7B65BC(uint64_t a1)
{
  __asm { BR              X12 }
}

uint64_t sub_24B7B6634@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _DWORD *v2;
  unsigned __int16 v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  unsigned __int16 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  unsigned int v18;
  unsigned __int8 v19;
  unsigned __int8 v20;
  unsigned __int8 v21;

  v17 = v1;
  LOWORD(v18) = a1;
  BYTE2(v18) = BYTE2(a1);
  HIBYTE(v18) = BYTE3(a1);
  v19 = BYTE4(a1);
  v20 = BYTE5(a1);
  v21 = BYTE6(a1);
  if (!*v6)
    *v6 = BYTE6(a1);
  if (v8)
    v10 = v9 - v8;
  else
    v10 = 0;
  *v2 = objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC5BKDM130BiometricKitXPCServerMesaSwift_xpcServer), sel_performCommand_inValue_inData_inSize_outData_outSize_, v7, v3, v8, v10, &v17, v6);
  v11 = v17;
  v12 = v18;
  v13 = v19;
  v14 = v20;
  v15 = v21;
  result = swift_release();
  *v5 = v11;
  v5[1] = v12 | (v13 << 32) | (v14 << 40) | (v15 << 48);
  return result;
}

void sub_24B7B68FC(uint64_t a1)
{
  __asm { BR              X12 }
}

uint64_t sub_24B7B696C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _DWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  unsigned __int16 v5;
  _QWORD *v6;
  unsigned __int16 v7;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned __int8 v12;
  unsigned __int8 v13;
  unsigned __int8 v14;

  v10 = v1;
  LOWORD(v11) = a1;
  BYTE2(v11) = BYTE2(a1);
  HIBYTE(v11) = BYTE3(a1);
  v12 = BYTE4(a1);
  v13 = BYTE5(a1);
  v14 = BYTE6(a1);
  if (!*v6)
    *v6 = BYTE6(a1);
  *v2 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC5BKDM130BiometricKitXPCServerMesaSwift_xpcServer), sel_performCommand_inValue_inData_inSize_outData_outSize_, v7, v5, 0, 0, &v10, v6);
  result = swift_release();
  v9 = v11 | ((unint64_t)v12 << 32) | ((unint64_t)v13 << 40) | ((unint64_t)v14 << 48);
  *v4 = v10;
  v4[1] = v9;
  return result;
}

uint64_t sub_24B7B6C00(int *a1, uint64_t a2, uint64_t a3, unsigned __int16 a4, unsigned __int16 a5, uint64_t a6, uint64_t a7, uint64_t *a8)
{
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  unsigned int *v24;

  result = sub_24B7F33E8();
  v15 = *a1;
  v16 = a1[1];
  if ((int)v16 < (int)v15)
  {
    __break(1u);
    goto LABEL_13;
  }
  v23 = a2;
  result = sub_24B7F3274();
  if (!result)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  v17 = result;
  result = sub_24B7F3298();
  v18 = v15 - result;
  if (__OFSUB__(v15, result))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v19 = sub_24B7F328C();
  if (!*a8)
  {
    v20 = v16 - v15;
    if (v19 < v16 - v15)
      v20 = v19;
    *a8 = v20;
  }
  if (a6)
    v21 = a7 - a6;
  else
    v21 = 0;
  v22 = objc_msgSend(*(id *)(a3 + OBJC_IVAR____TtC5BKDM130BiometricKitXPCServerMesaSwift_xpcServer), sel_performCommand_inValue_inData_inSize_outData_outSize_, a4, a5, a6, v21, v17 + v18, a8, v23);
  *v24 = v22;
  return swift_release();
}

uint64_t sub_24B7B6D08(int *a1, _DWORD *a2, uint64_t a3, unsigned __int16 a4, unsigned __int16 a5, uint64_t *a6)
{
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _DWORD *v19;

  result = sub_24B7F33E8();
  v14 = *a1;
  v13 = a1[1];
  if ((int)v13 < (int)v14)
  {
    __break(1u);
    goto LABEL_10;
  }
  v19 = a2;
  result = sub_24B7F3274();
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  v15 = result;
  result = sub_24B7F3298();
  v16 = v14 - result;
  if (__OFSUB__(v14, result))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v17 = sub_24B7F328C();
  if (!*a6)
  {
    v18 = v13 - v14;
    if (v17 < v13 - v14)
      v18 = v17;
    *a6 = v18;
  }
  *v19 = objc_msgSend(*(id *)(a3 + OBJC_IVAR____TtC5BKDM130BiometricKitXPCServerMesaSwift_xpcServer), sel_performCommand_inValue_inData_inSize_outData_outSize_, a4, a5, 0, 0, v15 + v16, a6);
  return swift_release();
}

uint64_t sub_24B7B6E00()
{
  sub_24B7B7CA8();
  sub_24B7F3610();
  sub_24B7F35BC();
  swift_bridgeObjectRelease();
  return 30768;
}

uint64_t sub_24B7B6E68(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *);
  uint64_t v10;
  _QWORD v12[2];

  v3 = *(_QWORD *)(a2 - 8);
  v4 = MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v12 - v7;
  v9 = *(void (**)(char *))(v3 + 16);
  v9((char *)v12 - v7);
  v12[0] = 30768;
  v12[1] = 0xE200000000000000;
  ((void (*)(char *, char *, uint64_t))v9)(v6, v8, a2);
  sub_24B7F3610();
  sub_24B7F35BC();
  swift_bridgeObjectRelease();
  v10 = v12[0];
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, a2);
  return v10;
}

uint64_t sub_24B7B6F60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL sub_24B7B6FA8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, unsigned int a12)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unsigned int v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  os_log_t v36;
  uint64_t v37;
  _QWORD v39[3];
  os_log_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a6;
  v44 = a4;
  v45 = a5;
  v43 = a1;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_24B7F34D8();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = objc_msgSend(*(id *)(a11 + OBJC_IVAR____TtC5BKDM130BiometricKitXPCServerMesaSwift_xpcServer), sel_checkCatacombForUser_, a12);
  if (v23)
  {
    sub_24B7B6F60(a3, (uint64_t)v18);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
    {
      sub_24B7F34CC();
      sub_24B7B2F44((uint64_t)v18, &qword_2579B03C8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
    }
    swift_bridgeObjectRetain_n();
    v24 = sub_24B7F34B4();
    v25 = sub_24B7F36AC();
    v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      v41 = a10;
      v39[2] = a9;
      v27 = swift_slowAlloc();
      v42 = swift_slowAlloc();
      v48 = v42;
      *(_DWORD *)v27 = 136316162;
      v40 = v24;
      v28 = sub_24B7B6E00();
      v39[1] = a8;
      v47 = sub_24B7AC4E4(v28, v29, &v48);
      v39[0] = a7;
      sub_24B7F3724();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2080;
      if (a2)
        v30 = v43;
      else
        v30 = 63;
      if (a2)
        v31 = a2;
      else
        v31 = 0xE100000000000000;
      LODWORD(v43) = v26;
      swift_bridgeObjectRetain();
      v47 = sub_24B7AC4E4(v30, v31, &v48);
      sub_24B7F3724();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 22) = 2080;
      v32 = sub_24B7F37C0();
      v47 = sub_24B7AC4E4(v32, v33, &v48);
      sub_24B7F3724();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 32) = 2048;
      v47 = v39[0];
      sub_24B7F3724();
      *(_WORD *)(v27 + 42) = 2080;
      v34 = sub_24B7F37C0();
      v47 = sub_24B7AC4E4(v34, v35, &v48);
      sub_24B7F3724();
      swift_bridgeObjectRelease();
      v36 = v40;
      _os_log_impl(&dword_24B74E000, v40, (os_log_type_t)v43, "CBAssert: err == %s: (%s) at %s:%lu in %s", (uint8_t *)v27, 0x34u);
      v37 = v42;
      swift_arrayDestroy();
      MEMORY[0x24BD27D9C](v37, -1, -1);
      MEMORY[0x24BD27D9C](v27, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  }
  return v23 == 0;
}

BOOL sub_24B7B7358(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, int a12, uint64_t a13)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unsigned int v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  os_log_t v36;
  uint64_t v37;
  _QWORD v39[3];
  os_log_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[2];

  v47 = a7;
  v46 = a6;
  v44 = a4;
  v45 = a5;
  v43 = a1;
  v49[1] = *MEMORY[0x24BDAC8D0];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_24B7F34D8();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v48) = a12;
  v49[0] = 4;
  v23 = objc_msgSend(*(id *)(a11 + OBJC_IVAR____TtC5BKDM130BiometricKitXPCServerMesaSwift_xpcServer), sel_performCommand_inValue_inData_inSize_outData_outSize_, 31, 0, &v48, 4, a13, v49);
  if (v23)
  {
    sub_24B7B6F60(a3, (uint64_t)v18);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
    {
      sub_24B7F34CC();
      sub_24B7B2F44((uint64_t)v18, &qword_2579B03C8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
    }
    swift_bridgeObjectRetain_n();
    v24 = sub_24B7F34B4();
    v25 = sub_24B7F36AC();
    v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      v41 = a10;
      v39[2] = a9;
      v27 = swift_slowAlloc();
      v42 = swift_slowAlloc();
      v49[0] = v42;
      *(_DWORD *)v27 = 136316162;
      v40 = v24;
      v28 = sub_24B7B6E00();
      v48 = sub_24B7AC4E4(v28, v29, v49);
      v39[1] = a8;
      sub_24B7F3724();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2080;
      if (a2)
        v30 = v43;
      else
        v30 = 63;
      if (a2)
        v31 = a2;
      else
        v31 = 0xE100000000000000;
      LODWORD(v43) = v26;
      swift_bridgeObjectRetain();
      v48 = sub_24B7AC4E4(v30, v31, v49);
      sub_24B7F3724();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 22) = 2080;
      v32 = sub_24B7F37C0();
      v48 = sub_24B7AC4E4(v32, v33, v49);
      sub_24B7F3724();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 32) = 2048;
      v48 = v47;
      sub_24B7F3724();
      *(_WORD *)(v27 + 42) = 2080;
      v34 = sub_24B7F37C0();
      v48 = sub_24B7AC4E4(v34, v35, v49);
      sub_24B7F3724();
      swift_bridgeObjectRelease();
      v36 = v40;
      _os_log_impl(&dword_24B74E000, v40, (os_log_type_t)v43, "CBAssert: err == %s: (%s) at %s:%lu in %s", (uint8_t *)v27, 0x34u);
      v37 = v42;
      swift_arrayDestroy();
      MEMORY[0x24BD27D9C](v37, -1, -1);
      MEMORY[0x24BD27D9C](v27, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  }
  return v23 == 0;
}

BOOL sub_24B7B7754(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, int a12, uint64_t a13)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unsigned int v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  os_log_t v36;
  uint64_t v37;
  _QWORD v39[3];
  os_log_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[2];

  v47 = a7;
  v46 = a6;
  v44 = a4;
  v45 = a5;
  v43 = a1;
  v49[1] = *MEMORY[0x24BDAC8D0];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_24B7F34D8();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v48) = a12;
  v49[0] = 4;
  v23 = objc_msgSend(*(id *)(a11 + OBJC_IVAR____TtC5BKDM130BiometricKitXPCServerMesaSwift_xpcServer), sel_performCommand_inValue_inData_inSize_outData_outSize_, 39, 0, &v48, 4, a13, v49);
  if (v23)
  {
    sub_24B7B6F60(a3, (uint64_t)v18);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
    {
      sub_24B7F34CC();
      sub_24B7B2F44((uint64_t)v18, &qword_2579B03C8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
    }
    swift_bridgeObjectRetain_n();
    v24 = sub_24B7F34B4();
    v25 = sub_24B7F36AC();
    v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      v41 = a10;
      v39[2] = a9;
      v27 = swift_slowAlloc();
      v42 = swift_slowAlloc();
      v49[0] = v42;
      *(_DWORD *)v27 = 136316162;
      v40 = v24;
      v28 = sub_24B7B6E00();
      v48 = sub_24B7AC4E4(v28, v29, v49);
      v39[1] = a8;
      sub_24B7F3724();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2080;
      if (a2)
        v30 = v43;
      else
        v30 = 63;
      if (a2)
        v31 = a2;
      else
        v31 = 0xE100000000000000;
      LODWORD(v43) = v26;
      swift_bridgeObjectRetain();
      v48 = sub_24B7AC4E4(v30, v31, v49);
      sub_24B7F3724();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 22) = 2080;
      v32 = sub_24B7F37C0();
      v48 = sub_24B7AC4E4(v32, v33, v49);
      sub_24B7F3724();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 32) = 2048;
      v48 = v47;
      sub_24B7F3724();
      *(_WORD *)(v27 + 42) = 2080;
      v34 = sub_24B7F37C0();
      v48 = sub_24B7AC4E4(v34, v35, v49);
      sub_24B7F3724();
      swift_bridgeObjectRelease();
      v36 = v40;
      _os_log_impl(&dword_24B74E000, v40, (os_log_type_t)v43, "CBAssert: err == %s: (%s) at %s:%lu in %s", (uint8_t *)v27, 0x34u);
      v37 = v42;
      swift_arrayDestroy();
      MEMORY[0x24BD27D9C](v37, -1, -1);
      MEMORY[0x24BD27D9C](v27, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  }
  return v23 == 0;
}

uint64_t sub_24B7B7B50()
{
  return type metadata accessor for BiometricKitXPCServerMesaSwift();
}

uint64_t type metadata accessor for BiometricKitXPCServerMesaSwift()
{
  uint64_t result;

  result = qword_2579B1D68;
  if (!qword_2579B1D68)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24B7B7B94()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24B7F34D8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_24B7B7C0C(uint64_t result)
{
  unint64_t v1;

  if (result)
  {
    v1 = result;
    if (result <= 14)
    {
      if (result < 0)
        __break(1u);
      else
        return 0;
    }
    else
    {
      sub_24B7F32A4();
      swift_allocObject();
      sub_24B7F3280();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_24B7F33F4();
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = 0;
        *(_QWORD *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

unint64_t sub_24B7B7CA8()
{
  unint64_t result;

  result = qword_2579B06C0;
  if (!qword_2579B06C0)
  {
    result = MEMORY[0x24BD27D24](MEMORY[0x24BEE3FC8], MEMORY[0x24BEE3F88]);
    atomic_store(result, (unint64_t *)&qword_2579B06C0);
  }
  return result;
}

uint64_t sub_24B7B7CEC()
{
  id v0;
  void *v1;
  void *v2;
  id v3;

  sub_24B7F35BC();
  sub_24B7B7E08();
  sub_24B7F35BC();
  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  v1 = (void *)sub_24B7F3538();
  objc_msgSend(v0, sel_setDateFormat_, v1);

  v2 = (void *)sub_24B7F3430();
  v3 = objc_msgSend(v0, sel_stringFromDate_, v2);

  sub_24B7F355C();
  sub_24B7F35BC();

  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24B7B7E08()
{
  uint64_t result;
  double v1;

  result = sub_24B7F343C();
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 1.84467441e19)
  {
    sub_24B7F3988();
    sub_24B7F35BC();
    return swift_bridgeObjectRelease();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_24B7B7EA8()
{
  id v0;
  void *v1;
  void *v2;
  id v3;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  v1 = (void *)sub_24B7F3538();
  objc_msgSend(v0, sel_setDateFormat_, v1);

  v2 = (void *)sub_24B7F3430();
  v3 = objc_msgSend(v0, sel_stringFromDate_, v2);

  sub_24B7F355C();
  sub_24B7F35BC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24B7B7F84()
{
  sub_24B7F346C();
  sub_24B7F35BC();
  swift_bridgeObjectRelease();
  sub_24B7F35BC();
  return 0x2D424F4C426C6163;
}

uint64_t sub_24B7B7FF0(uint64_t a1, uint64_t a2)
{
  sub_24B7F37A8();
  sub_24B7F35BC();
  sub_24B7F3988();
  sub_24B7F35BC();
  swift_bridgeObjectRelease();
  sub_24B7F35BC();
  sub_24B7B80CC(a2, 5);
  sub_24B7F35BC();
  return 0;
}

uint64_t sub_24B7B80CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t result;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v5 = sub_24B7F32F8();
  v32 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v31 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_24B7F3310();
  v29 = *(_QWORD *)(v7 - 8);
  v30 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_24B7F34A8();
  MEMORY[0x24BDAC7A8](v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0730);
  v28 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v24 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v24 - v18;
  v37 = a1;
  sub_24B7F349C();
  v20 = sub_24B7B9B70();
  result = sub_24B7F32B0();
  if (a2 > 20)
  {
    __break(1u);
  }
  else
  {
    v35 = a2;
    v36 = 20;
    v33 = 0;
    v34 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B06C8);
    v27 = v2;
    v25 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B06D0);
    v26 = v20;
    sub_24B7B9BB4(&qword_2579B06D8, &qword_2579B06C8, MEMORY[0x24BEE1BC0]);
    sub_24B7B9BB4(&qword_2579B06E0, &qword_2579B06D0, MEMORY[0x24BEE08F8]);
    sub_24B7F3304();
    MEMORY[0x24BD26B3C](v9, v11);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v30);
    v22 = *(void (**)(char *, uint64_t))(v28 + 8);
    v22(v14, v11);
    v23 = v31;
    sub_24B7F32EC();
    MEMORY[0x24BD26B30](v23, v11);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v23, v25);
    v22(v17, v11);
    sub_24B7B9BB4(&qword_2579B0740, &qword_2579B0730, MEMORY[0x24BDCC928]);
    sub_24B7F3760();
    sub_24B7F35BC();
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(char *, uint64_t))v22)(v19, v11);
  }
  return result;
}

uint64_t sub_24B7B83E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t result;
  void (*v24)(char *, uint64_t);
  char *v25;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v33 = a1;
  v8 = sub_24B7F32F8();
  v31 = *(_QWORD *)(v8 - 8);
  v32 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v30 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_24B7F3310();
  v28 = *(_QWORD *)(v10 - 8);
  v29 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_24B7F34A8();
  MEMORY[0x24BDAC7A8](v13);
  v14 = sub_24B7F32D4();
  v27 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)v26 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)v26 - v21;
  sub_24B7F349C();
  v34 = a3;
  result = sub_24B7F32B0();
  if (a2 > 20)
  {
    __break(1u);
  }
  else
  {
    v37 = a2;
    v38 = 20;
    v35 = 0;
    v36 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B06C8);
    v26[0] = a4;
    v26[1] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B06D0);
    sub_24B7B9BB4(&qword_2579B06D8, &qword_2579B06C8, MEMORY[0x24BEE1BC0]);
    sub_24B7B9BB4(&qword_2579B06E0, &qword_2579B06D0, MEMORY[0x24BEE08F8]);
    sub_24B7F3304();
    MEMORY[0x24BD26B3C](v12, v14);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v29);
    v24 = *(void (**)(char *, uint64_t))(v27 + 8);
    v24(v17, v14);
    v25 = v30;
    sub_24B7F32EC();
    MEMORY[0x24BD26B30](v25, v14);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v25, v32);
    v24(v20, v14);
    MEMORY[0x24BD27D24](MEMORY[0x24BDCC928], v14);
    sub_24B7F3760();
    sub_24B7F35BC();
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(char *, uint64_t))v24)(v22, v14);
  }
  return result;
}

uint64_t sub_24B7B86D0(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = 0;
  v15 = 0xE000000000000000;
  sub_24B7F37A8();
  swift_bridgeObjectRelease();
  v14 = 0x6574616C706D6574;
  v15 = 0xEF2D657461647055;
  v13 = a1;
  sub_24B7F3988();
  sub_24B7F35BC();
  swift_bridgeObjectRelease();
  sub_24B7F35BC();
  LODWORD(v13) = a2;
  sub_24B7F3988();
  sub_24B7F35BC();
  swift_bridgeObjectRelease();
  sub_24B7F35BC();
  sub_24B7B91B0(a3, (uint64_t)v8);
  v9 = sub_24B7F3490();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_24B7B91F8((uint64_t)v8);
  }
  else
  {
    sub_24B7F346C();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  }
  sub_24B7F35BC();
  swift_bridgeObjectRelease();
  sub_24B7F35BC();
  return v14;
}

uint64_t sub_24B7B889C(char a1)
{
  if (!a1)
    return 0x6C6C6F726E65;
  if (a1 == 1)
    return 0x686374616DLL;
  return 1952801894;
}

uint64_t sub_24B7B88E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24B7B88F0(*a1, *a2);
}

uint64_t sub_24B7B88F0(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x686374616DLL;
    else
      v3 = 1952801894;
    if (v2 == 1)
      v4 = 0xE500000000000000;
    else
      v4 = 0xE400000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x686374616DLL;
      else
        v6 = 1952801894;
      if (v5 == 1)
        v7 = 0xE500000000000000;
      else
        v7 = 0xE400000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE600000000000000;
    v3 = 0x6C6C6F726E65;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE600000000000000;
  if (v3 != 0x6C6C6F726E65)
  {
LABEL_21:
    v8 = sub_24B7F3994();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24B7B89E8()
{
  sub_24B7F39C4();
  sub_24B7F35B0();
  swift_bridgeObjectRelease();
  return sub_24B7F39DC();
}

uint64_t sub_24B7B8A78()
{
  sub_24B7F35B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24B7B8AE4()
{
  sub_24B7F39C4();
  sub_24B7F35B0();
  swift_bridgeObjectRelease();
  return sub_24B7F39DC();
}

uint64_t sub_24B7B8B70@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24B7B9804();
  *a1 = result;
  return result;
}

void sub_24B7B8B9C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE600000000000000;
  v4 = 0xE500000000000000;
  v5 = 0x686374616DLL;
  if (v2 != 1)
  {
    v5 = 1952801894;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6C6C6F726E65;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_24B7B8BEC(uint64_t a1)
{
  sub_24B7B80CC(a1, 5);
  sub_24B7F35BC();
  sub_24B7B8C9C();
  sub_24B7F35BC();
  sub_24B7F382C();
  sub_24B7F35BC();
  return 0;
}

uint64_t sub_24B7B8C9C()
{
  uint64_t result;
  double v1;
  double v2;

  result = sub_24B7F343C();
  v2 = v1 * 1000.0;
  if ((~*(_QWORD *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v2 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v2 < 1.84467441e19)
  {
    sub_24B7F3988();
    sub_24B7F35BC();
    return swift_bridgeObjectRelease();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_24B7B8D4C(uint64_t a1)
{
  sub_24B7F35BC();
  sub_24B7B80CC(a1, 5);
  sub_24B7F35BC();
  sub_24B7B8C9C();
  sub_24B7F35BC();
  return 0;
}

uint64_t sub_24B7B8DE0(uint64_t a1)
{
  sub_24B7F37A8();
  sub_24B7F35BC();
  sub_24B7B80CC(a1, 3);
  sub_24B7F35BC();
  sub_24B7F3988();
  sub_24B7F35BC();
  swift_bridgeObjectRelease();
  sub_24B7F35BC();
  return 0;
}

uint64_t sub_24B7B8EB4(uint64_t a1)
{
  sub_24B7F35BC();
  sub_24B7B80CC(a1, 3);
  sub_24B7F35BC();
  sub_24B7F3988();
  sub_24B7F35BC();
  swift_bridgeObjectRelease();
  sub_24B7F35BC();
  return 0;
}

id sub_24B7B8F6C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BioLogHelper();
  return objc_msgSendSuper2(&v2, sel_init);
}

id sub_24B7B8FD8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BioLogHelper();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24B7B9008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;

  sub_24B7B9118(a1, (uint64_t)sub_24B7B9084, 0, a2, MEMORY[0x24BEE4078], MEMORY[0x24BEE0D00], MEMORY[0x24BEE40A8], a8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  return v11;
}

uint64_t sub_24B7B9084@<X0>(size_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  size_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_24B7B9754(a1, a2);
  v5 = *(_QWORD *)(v4 + 16);
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) != 0)
  {
    if (v5)
      goto LABEL_3;
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  result = (uint64_t)sub_24B7B9558(v4);
  v4 = result;
  if (!v5)
    goto LABEL_6;
LABEL_3:
  if (v5 <= *(_QWORD *)(v4 + 16))
  {
    *(_BYTE *)(v5 + v4 + 31) = 0;
    v7 = sub_24B7B986C(v4);
    v9 = v8;
    result = swift_bridgeObjectRelease();
    *a3 = v7;
    a3[1] = v9;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_24B7B9118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, char *);
  uint64_t result;
  uint64_t v18;

  v11 = *(_QWORD *)(a5 - 8);
  v12 = MEMORY[0x24BDAC7A8]();
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = v16(v12, v12 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64), v14);
  if (v8)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a8, v14, a5);
  return result;
}

uint64_t sub_24B7B91B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24B7B91F8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_24B7B9238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD *v8;
  void (*v9)(char *, uint64_t);
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  _QWORD *v13;
  _QWORD *v14;
  BOOL v15;
  uint64_t v16;
  _QWORD *result;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;

  v0 = sub_24B7F33D0();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v20 - v5;
  sub_24B7F331C();
  if ((sub_24B7F334C() & 1) == 0)
  {
    sub_24B7F3388();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
    (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v6, v4, v0);
  }
  v7 = (_QWORD *)sub_24B7F3340();
  sub_24B7F331C();
  v8 = (_QWORD *)sub_24B7F3340();
  v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v4, v0);
  v10 = v8[2];
  if (!v10)
    goto LABEL_21;
  v11 = v7[2];
  if (!v11)
    goto LABEL_24;
  v12 = v8[4] == v7[4] && v8[5] == v7[5];
  if (v12 || (sub_24B7F3994() & 1) != 0)
  {
    if (v10 >= v11)
      v10 = v11;
    if (v10 < 2)
    {
      v11 = 1;
    }
    else
    {
      v13 = v8 + 7;
      v14 = v7 + 7;
      v11 = 1;
      while (1)
      {
        v15 = *(v13 - 1) == *(v14 - 1) && *v13 == *v14;
        if (!v15 && (sub_24B7F3994() & 1) == 0)
          break;
        v13 += 2;
        v14 += 2;
        if (v10 == ++v11)
        {
          v11 = v10;
          break;
        }
      }
    }
  }
  else
  {
LABEL_21:
    v11 = 0;
  }
LABEL_24:
  v16 = v7[2];
  swift_bridgeObjectRelease();
  result = sub_24B7B94AC((_QWORD *)0x2E2E, 0xE200000000000000, v16 - v11);
  v21 = result;
  v18 = v8[2];
  if (v18 < v11)
  {
    __break(1u);
  }
  else
  {
    sub_24B7B98B4((uint64_t)v8, (uint64_t)(v8 + 4), v11, (2 * v18) | 1);
    swift_bridgeObjectRelease();
    v20 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B06E8);
    sub_24B7B9BB4(&qword_2579B06F0, &qword_2579B06E8, MEMORY[0x24BEE12B0]);
    v19 = sub_24B7F3520();
    swift_bridgeObjectRelease();
    v9(v6, v0);
    return (_QWORD *)v19;
  }
  return result;
}

_QWORD *sub_24B7B94AC(_QWORD *result, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;

  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    if (a3)
    {
      v5 = result;
      v6 = (_QWORD *)sub_24B7F367C();
      v7 = v6;
      v6[2] = a3;
      v6[4] = v5;
      v6[5] = a2;
      if (a3 != 1)
      {
        v6[6] = v5;
        v6[7] = a2;
        v8 = a3 - 2;
        if (v8)
        {
          v9 = v6 + 9;
          do
          {
            *(v9 - 1) = v5;
            *v9 = a2;
            swift_bridgeObjectRetain();
            v9 += 2;
            --v8;
          }
          while (v8);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    return v7;
  }
  return result;
}

char *sub_24B7B9558(uint64_t a1)
{
  return sub_24B7B956C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_24B7B956C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0420);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_24B7B9654(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0728);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

size_t sub_24B7B9754(size_t result, unint64_t a2)
{
  const void *v3;
  int64_t v4;
  _QWORD *v5;

  if (!result)
    return MEMORY[0x24BEE4AF8];
  v3 = (const void *)result;
  v4 = a2 - result;
  if (a2 == result)
    return MEMORY[0x24BEE4AF8];
  if (v4 < 1)
  {
    v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (!a2)
      goto LABEL_13;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0420);
    v5 = (_QWORD *)swift_allocObject();
    result = _swift_stdlib_malloc_size(v5);
    v5[2] = v4;
    v5[3] = 2 * result - 64;
    if (!a2)
      goto LABEL_13;
  }
  if ((unint64_t)v3 < a2)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      memmove(v5 + 4, v3, v4);
      return (size_t)v5;
    }
    __break(1u);
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_24B7B9804()
{
  unint64_t v0;

  v0 = sub_24B7F388C();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t type metadata accessor for BioLogHelper()
{
  return objc_opt_self();
}

uint64_t sub_24B7B986C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(result + 16);
  if (v1)
  {
    v2 = result;
    v3 = *(unsigned __int8 *)(result + 32);
    result += 32;
    if (!v3)
      return sub_24B7F3598();
    v4 = 0;
    v5 = v1 - 1;
    v6 = v2 + 33;
    while (v5 != v4)
    {
      if (!*(unsigned __int8 *)(v6 + v4++))
        return sub_24B7F3598();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_24B7B98B4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  char **v4;
  unint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = a4 >> 1;
  v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_18;
  }
  v7 = *v4;
  v8 = *((_QWORD *)*v4 + 2);
  v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > *((_QWORD *)v7 + 3) >> 1)
    goto LABEL_8;
  if (v5 == a3)
  {
    while (v6 > 0)
    {
      __break(1u);
LABEL_8:
      if (v8 <= v9)
        v12 = v8 + v6;
      else
        v12 = v8;
      isUniquelyReferenced_nonNull_native = sub_24B7B9654(isUniquelyReferenced_nonNull_native, v12, 1, v7);
      v7 = isUniquelyReferenced_nonNull_native;
      if (v5 != a3)
        goto LABEL_12;
    }
    goto LABEL_16;
  }
LABEL_12:
  if ((*((_QWORD *)v7 + 3) >> 1) - *((_QWORD *)v7 + 2) < v6)
    goto LABEL_19;
  swift_arrayInitWithCopy();
  if (v6 <= 0)
  {
LABEL_16:
    *v4 = v7;
    return;
  }
  v13 = *((_QWORD *)v7 + 2);
  v14 = __OFADD__(v13, v6);
  v15 = v13 + v6;
  if (!v14)
  {
    *((_QWORD *)v7 + 2) = v15;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
}

unint64_t sub_24B7B99B4()
{
  unint64_t result;

  result = qword_2579B06F8;
  if (!qword_2579B06F8)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F8F8C, &type metadata for BioLogHelper.SequenceType);
    atomic_store(result, (unint64_t *)&qword_2579B06F8);
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for BioLogHelper.SequenceType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for BioLogHelper.SequenceType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24B7B9AE0 + 4 * byte_24B7F8F85[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24B7B9B14 + 4 * asc_24B7F8F80[v4]))();
}

uint64_t sub_24B7B9B14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24B7B9B1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24B7B9B24);
  return result;
}

uint64_t sub_24B7B9B30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24B7B9B38);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24B7B9B3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24B7B9B44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24B7B9B50(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_24B7B9B58(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for BioLogHelper.SequenceType()
{
  return &type metadata for BioLogHelper.SequenceType;
}

unint64_t sub_24B7B9B70()
{
  unint64_t result;

  result = qword_2579B0738;
  if (!qword_2579B0738)
  {
    result = MEMORY[0x24BD27D24](MEMORY[0x24BEE1EC0], MEMORY[0x24BEE1E88]);
    atomic_store(result, (unint64_t *)&qword_2579B0738);
  }
  return result;
}

uint64_t sub_24B7B9BB4(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24BD27D24](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24B7B9BF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_24B7F370C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_24B7B9C30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_24B7F370C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void sub_24B7B9C6C()
{
  void *v0;

  sub_24B7F370C();
  sub_24B7F3718();
  if (v0)

}

void sub_24B7B9CC8()
{
  sub_24B7B9C6C();
}

uint64_t sub_24B7B9CDC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24B7B9D08()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24B7B9D34()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24B7B9D60()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 48);
}

uint64_t sub_24B7B9D68()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 52);
}

uint64_t sub_24B7B9D70()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 56);
}

void sub_24B7B9D78(uint64_t a1@<X8>)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  unsigned int v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;

  v2 = (id)MobileGestalt_get_current_device();
  if (!v2)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = v2;
  v4 = (id)MobileGestalt_copy_serialNumber_obj();

  if (!v4)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v5 = sub_24B7F355C();
  v7 = v6;

  v8 = (id)MobileGestalt_get_current_device();
  if (!v8)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v9 = v8;
  v26 = v7;
  v10 = (id)MobileGestalt_copy_buildVersion_obj();

  if (v10)
  {
    v11 = sub_24B7F355C();
    v13 = v12;

    v14 = sub_24B7B571C();
    v15 = *(uint64_t (**)(uint64_t))(*(_QWORD *)*v14 + 104);
    v16 = swift_retain();
    v17 = v15(v16);
    v19 = v18;
    swift_release();
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1760]), sel_init);
    v21 = objc_msgSend(v20, sel_processIdentifier);

    v22 = *(uint64_t (**)(uint64_t))(*(_QWORD *)*v14 + 152);
    v23 = swift_retain();
    LODWORD(v22) = v22(v23);
    swift_release();
    v24 = *(uint64_t (**)(uint64_t))(*(_QWORD *)*v14 + 160);
    v25 = swift_retain();
    LODWORD(v24) = v24(v25);
    swift_release();
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v26;
    *(_QWORD *)(a1 + 16) = v11;
    *(_QWORD *)(a1 + 24) = v13;
    *(_QWORD *)(a1 + 32) = v17;
    *(_QWORD *)(a1 + 40) = v19;
    *(_DWORD *)(a1 + 48) = v21;
    *(_DWORD *)(a1 + 52) = (_DWORD)v22;
    *(_DWORD *)(a1 + 56) = (_DWORD)v24;
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_24B7B9F10(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_24B7B9F4C
                                                                     + 4 * asc_24B7F9050[a1]))(0xD000000000000012, 0x800000024B802BC0);
}

uint64_t sub_24B7B9F4C()
{
  return 0x726556646C697562;
}

uint64_t sub_24B7B9F6C()
{
  uint64_t v0;

  return v0 + 3;
}

uint64_t sub_24B7B9F84()
{
  return 0x49737365636F7270;
}

uint64_t sub_24B7B9FA0()
{
  return 0x54676E6967676F6CLL;
}

unint64_t sub_24B7B9FC0()
{
  return 0xD000000000000011;
}

BOOL sub_24B7B9FDC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24B7B9FF4()
{
  return sub_24B7F39D0();
}

uint64_t sub_24B7BA020()
{
  unsigned __int8 *v0;

  return sub_24B7B9F10(*v0);
}

uint64_t sub_24B7BA028@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24B7CC054(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24B7BA04C()
{
  return 0;
}

void sub_24B7BA058(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_24B7BA064()
{
  sub_24B7BA268();
  return sub_24B7F3A18();
}

uint64_t sub_24B7BA08C()
{
  sub_24B7BA268();
  return sub_24B7F3A24();
}

uint64_t sub_24B7BA0B4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0748);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24B7BA268();
  sub_24B7F3A0C();
  v8[15] = 0;
  sub_24B7F38F8();
  if (!v1)
  {
    v8[14] = 1;
    sub_24B7F38F8();
    v8[13] = 2;
    sub_24B7F3898();
    v8[12] = 3;
    sub_24B7F3940();
    v8[11] = 4;
    sub_24B7F3964();
    v8[10] = 5;
    sub_24B7F3964();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24B7BA268()
{
  unint64_t result;

  result = qword_2579B1F00;
  if (!qword_2579B1F00)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FB880, &_s7LogInfoV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B1F00);
  }
  return result;
}

uint64_t sub_24B7BA2AC(_QWORD *a1)
{
  return sub_24B7BA0B4(a1);
}

uint64_t sub_24B7BA2C0@<X0>(uint64_t a1@<X8>)
{
  return sub_24B7C9560((uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a1);
}

uint64_t sub_24B7BA2CC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(_s6SourceVMa(0) + 20));
}

uint64_t _s6SourceVMa(uint64_t a1)
{
  return sub_24B7D17A4(a1, (uint64_t *)&unk_2579B3370);
}

uint64_t sub_24B7BA300()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(_s6SourceVMa(0) + 24));
}

uint64_t sub_24B7BA320(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = _s6SourceVMa(0);
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*sub_24B7BA34C())()
{
  _s6SourceVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7BA374()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(_s6SourceVMa(0) + 28));
}

uint64_t sub_24B7BA394(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = _s6SourceVMa(0);
  *(_BYTE *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*sub_24B7BA3C0())()
{
  _s6SourceVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7BA3E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(_s6SourceVMa(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24B7BA424(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(_s6SourceVMa(0) + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*sub_24B7BA468())()
{
  _s6SourceVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7BA490(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24B7BA4C0()
{
  return 1;
}

uint64_t sub_24B7BA4CC()
{
  return sub_24B7F39D0();
}

uint64_t sub_24B7BA4F4()
{
  return 0x726F70736E617274;
}

uint64_t sub_24B7BA510@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x726F70736E617274 && a2 == 0xE900000000000074)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_24B7F3994();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_24B7BA5B0(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_24B7BA5BC()
{
  sub_24B7BA6FC();
  return sub_24B7F3A18();
}

uint64_t sub_24B7BA5E4()
{
  sub_24B7BA6FC();
  return sub_24B7F3A24();
}

uint64_t sub_24B7BA60C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0750);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24B7BA6FC();
  sub_24B7F3A0C();
  sub_24B7F38F8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_24B7BA6FC()
{
  unint64_t result;

  result = qword_2579B1F08;
  if (!qword_2579B1F08)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FB830, &_s6SourceV9AccessoryV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B1F08);
  }
  return result;
}

uint64_t sub_24B7BA740(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0750);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24B7BA6FC();
  sub_24B7F3A0C();
  sub_24B7F38F8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_24B7BA82C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(_s6SourceVMa(0) + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24B7BA868(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(_s6SourceVMa(0) + 36));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*sub_24B7BA8AC())()
{
  _s6SourceVMa(0);
  return nullsub_1;
}

void sub_24B7BA8D4(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  char *v12;
  char *v13;
  id v14;
  void *v15;
  void (*v16)(char *, char *, uint64_t);
  unsigned __int8 v17;
  uint64_t v18;

  v4 = sub_24B7F3490();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)_s6SourceVMa(0);
  v12 = &a2[v11[8]];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v13 = &a2[v11[9]];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v14 = objc_msgSend(a1, sel_uuid);
  if (v14)
  {
    v15 = v14;
    sub_24B7F3478();

    v16 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v16(v10, v7, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) != 1)
    {
      v16(a2, v10, v4);
      a2[v11[5]] = objc_msgSend(a1, sel_type) != 1;
      a2[v11[6]] = (objc_msgSend(a1, sel_flags) & 2) != 0;
      v17 = objc_msgSend(a1, sel_flags);

      a2[v11[7]] = (v17 & 4) != 0;
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
  }
  __break(1u);
}

uint64_t sub_24B7BAAA0(unsigned int a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  _QWORD v18[4];

  v2 = v1;
  v4 = (int *)_s6SourceVMa(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)v18 - v9;
  if (!*(_QWORD *)(v1 + *(int *)(v8 + 32) + 8) && *(_BYTE *)(v1 + v4[6]) == 1)
  {
    v11 = *(unsigned __int8 *)(v1 + v4[5]);
    sub_24B7B2768(v2, (uint64_t)v18 - v9, _s6SourceVMa);
    if (v11 == 1 && (v12 = &v10[v4[9]], (v13 = *((_QWORD *)v12 + 1)) != 0))
    {
      v18[2] = *(_QWORD *)v12;
      v18[3] = v13;
      v18[0] = 4346709;
      v18[1] = 0xE300000000000000;
      sub_24B7B22B8();
      v14 = sub_24B7F3754();
      sub_24B7B2E38((uint64_t)v10, _s6SourceVMa);
      sub_24B7B2768(v2, (uint64_t)v7, _s6SourceVMa);
      if ((v14 & 1) != 0)
      {
        sub_24B7B2E38((uint64_t)v7, _s6SourceVMa);
        return 1;
      }
    }
    else
    {
      sub_24B7B2E38((uint64_t)v10, _s6SourceVMa);
      sub_24B7B2768(v2, (uint64_t)v7, _s6SourceVMa);
    }
    if ((v7[v4[5]] & 1) != 0 || a1 < 2)
    {
      sub_24B7B2E38((uint64_t)v7, _s6SourceVMa);
    }
    else
    {
      v16 = *(uint64_t (**)(uint64_t))(*(_QWORD *)*sub_24B7B571C() + 192);
      v17 = swift_retain();
      LOBYTE(v16) = v16(v17);
      swift_release();
      sub_24B7B2E38((uint64_t)v7, _s6SourceVMa);
      if ((v16 & 1) != 0)
        return 1;
    }
  }
  return 0;
}

uint64_t sub_24B7BAC98(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t result;
  id v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;
  _QWORD v31[4];
  uint64_t v32;
  char *v33;
  char v34[16];
  void *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v32 - v8;
  v35 = a1;
  v36 = v1;
  v39 = 0;
  v40 = 0xE000000000000000;
  sub_24B7F37A8();
  swift_bridgeObjectRelease();
  v39 = 0xD000000000000019;
  v40 = 0x800000024B8028A0;
  v10 = objc_msgSend(a1, sel_description);
  sub_24B7F355C();

  sub_24B7F35BC();
  swift_bridgeObjectRelease();
  v12 = v39;
  v11 = v40;
  v13 = sub_24B79A734();
  swift_beginAccess();
  v14 = *v13;
  v33 = v7;
  if (v14)
  {
    v15 = v14 + OBJC_IVAR____TtC5BKDM16BioLog_logger;
    v16 = sub_24B7F34D8();
    v17 = *(_QWORD *)(v16 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v9, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v9, 0, 1, v16);
  }
  else
  {
    v18 = sub_24B7F34D8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v9, 1, 1, v18);
  }
  v19 = sub_24B7B4BE0((uint64_t (*)(uint64_t))sub_24B7BB3E8, (uint64_t)v34, v12, v11, (uint64_t)v9, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLogStruct.swift", 97, 2, 127, (uint64_t)"updateAccessory(_:info:)", 24, 2u);
  swift_bridgeObjectRelease();
  result = sub_24B7B2F44((uint64_t)v9, &qword_2579B03C8);
  if ((v19 & 1) != 0)
  {
    v32 = (uint64_t)&v32;
    MEMORY[0x24BDAC7A8](result);
    v31[2] = a1;
    v31[3] = v2;
    v37 = 0;
    v38 = 0xE000000000000000;
    sub_24B7F37A8();
    swift_bridgeObjectRelease();
    v37 = 0xD000000000000019;
    v38 = 0x800000024B802950;
    v21 = objc_msgSend(a1, sel_description);
    sub_24B7F355C();

    sub_24B7F35BC();
    swift_bridgeObjectRelease();
    v23 = v37;
    v22 = v38;
    swift_beginAccess();
    if (*v13)
    {
      v24 = *v13 + OBJC_IVAR____TtC5BKDM16BioLog_logger;
      v25 = sub_24B7F34D8();
      v26 = *(_QWORD *)(v25 - 8);
      v27 = (uint64_t)v33;
      (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v33, v24, v25);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56))(v27, 0, 1, v25);
    }
    else
    {
      v28 = sub_24B7F34D8();
      v27 = (uint64_t)v33;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v33, 1, 1, v28);
    }
    sub_24B7B4BE0((uint64_t (*)(uint64_t))sub_24B7BB3F0, (uint64_t)v31, v23, v22, v27, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLogStruct.swift", 97, 2, 128, (uint64_t)"updateAccessory(_:info:)", 24, 2u);
    swift_bridgeObjectRelease();
    sub_24B7B2F44(v27, &qword_2579B03C8);
    v29 = objc_msgSend(a1, sel_flags);
    v30 = _s6SourceVMa(0);
    *(_BYTE *)(v2 + *(int *)(v30 + 24)) = (v29 & 2) != 0;
    result = (uint64_t)objc_msgSend(a1, sel_flags);
    *(_BYTE *)(v2 + *(int *)(v30 + 28)) = (result & 4) != 0;
  }
  return result;
}

uint64_t sub_24B7BB0B0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  void *v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t);
  int v24;
  uint64_t *v25;
  char v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  char *v31;

  v4 = sub_24B7F3490();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v31 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B1648);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v30 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = objc_msgSend(a1, sel_uuid);
  if (v19)
  {
    v20 = v19;
    sub_24B7F3478();

    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v21(v18, 0, 1, v4);
  }
  else
  {
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v21(v18, 1, 1, v4);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v16, a2, v4);
  v21(v16, 0, 1, v4);
  v22 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_24B7B2F00((uint64_t)v18, (uint64_t)v9, &qword_2579B0388);
  sub_24B7B2F00((uint64_t)v16, v22, &qword_2579B0388);
  v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v23((uint64_t)v9, 1, v4) == 1)
  {
    sub_24B7B2F44((uint64_t)v16, &qword_2579B0388);
    sub_24B7B2F44((uint64_t)v18, &qword_2579B0388);
    v24 = v23(v22, 1, v4);
    if (v24 == 1)
      v25 = &qword_2579B0388;
    else
      v25 = &qword_2579B1648;
    if (v24 == 1)
      v26 = -1;
    else
      v26 = 0;
  }
  else
  {
    sub_24B7B2F00((uint64_t)v9, (uint64_t)v13, &qword_2579B0388);
    if (v23(v22, 1, v4) == 1)
    {
      sub_24B7B2F44((uint64_t)v16, &qword_2579B0388);
      sub_24B7B2F44((uint64_t)v18, &qword_2579B0388);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
      v26 = 0;
      v25 = &qword_2579B1648;
    }
    else
    {
      v27 = v31;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v31, v22, v4);
      sub_24B7B19A0((unint64_t *)&unk_2579B1650, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v26 = sub_24B7F352C();
      v28 = *(void (**)(char *, uint64_t))(v5 + 8);
      v28(v27, v4);
      v25 = &qword_2579B0388;
      sub_24B7B2F44((uint64_t)v16, &qword_2579B0388);
      sub_24B7B2F44((uint64_t)v18, &qword_2579B0388);
      v28(v13, v4);
    }
  }
  sub_24B7B2F44((uint64_t)v9, v25);
  return v26 & 1;
}

uint64_t sub_24B7BB3E8()
{
  uint64_t v0;

  return sub_24B7BB0B0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_24B7BB3F0()
{
  uint64_t v0;
  uint64_t v1;
  _BOOL4 v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = objc_msgSend(*(id *)(v0 + 16), sel_type) == 1;
  return (v2 ^ *(unsigned __int8 *)(v1 + *(int *)(_s6SourceVMa(0) + 20))) & 1;
}

uint64_t sub_24B7BB43C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24B7BB468 + 4 * byte_24B7F9056[a1]))(1684632949, 0xE400000000000000);
}

uint64_t sub_24B7BB468()
{
  return 0x726F737365636361;
}

uint64_t sub_24B7BB488()
{
  return 0x657463656E6E6F63;
}

uint64_t sub_24B7BB4A4()
{
  return 0x7A69726F68747561;
}

unint64_t sub_24B7BB4C0()
{
  return 0xD000000000000017;
}

unint64_t sub_24B7BB4E4()
{
  return 0xD000000000000012;
}

uint64_t sub_24B7BB500()
{
  unsigned __int8 *v0;

  return sub_24B7BB43C(*v0);
}

uint64_t sub_24B7BB508@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24B7CC300(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24B7BB52C()
{
  sub_24B7BB79C();
  return sub_24B7F3A18();
}

uint64_t sub_24B7BB554()
{
  sub_24B7BB79C();
  return sub_24B7F3A24();
}

uint64_t sub_24B7BB57C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];
  __int128 v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0758);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24B7BB79C();
  sub_24B7F3A0C();
  LOBYTE(v12) = 0;
  sub_24B7F3490();
  sub_24B7B19A0(&qword_2579B0760, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_24B7F3928();
  if (!v2)
  {
    v9 = _s6SourceVMa(0);
    LOBYTE(v12) = 1;
    sub_24B7F3904();
    LOBYTE(v12) = 2;
    sub_24B7F3904();
    LOBYTE(v12) = 3;
    sub_24B7F3904();
    LOBYTE(v12) = 4;
    sub_24B7F3898();
    v12 = *(_OWORD *)(v3 + *(int *)(v9 + 36));
    v11[15] = 5;
    sub_24B7BB7E0();
    sub_24B7F38C8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_24B7BB79C()
{
  unint64_t result;

  result = qword_2579B1F10;
  if (!qword_2579B1F10)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FB7E0, &_s6SourceV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B1F10);
  }
  return result;
}

unint64_t sub_24B7BB7E0()
{
  unint64_t result;

  result = qword_2579B0768;
  if (!qword_2579B0768)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F91E0, &_s6SourceV9AccessoryVN);
    atomic_store(result, (unint64_t *)&qword_2579B0768);
  }
  return result;
}

uint64_t sub_24B7BB824(_QWORD *a1)
{
  return sub_24B7BB57C(a1);
}

uint64_t sub_24B7BB838@<X0>(uint64_t a1@<X8>)
{
  return sub_24B7C9560((uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_24B7BB844@<X0>(uint64_t a1@<X8>)
{
  return sub_24B7C0C74(_s8IdentityVMa, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a1);
}

uint64_t _s8IdentityVMa(uint64_t a1)
{
  return sub_24B7D17A4(a1, (uint64_t *)&unk_2579B3380);
}

uint64_t sub_24B7BB86C()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + *(int *)(_s8IdentityVMa(0) + 24));
}

uint64_t sub_24B7BB88C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(_s8IdentityVMa(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24B7BB8C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(_s8IdentityVMa(0) + 32);
  v4 = sub_24B7F3490();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_24B7BB910@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  void *v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  id v23;
  void *v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t (*v26)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  int *v28;
  id v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  id v35;
  void *v36;
  id v37;
  char *v38;
  uint64_t result;
  uint64_t v40;
  uint64_t (*v41)(char *, uint64_t, uint64_t, uint64_t);
  char *v42;
  char *v43;

  v43 = a2;
  v3 = sub_24B7F3490();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v42 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v40 - v10;
  v12 = sub_24B7F3460();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = objc_msgSend(a1, sel_creationTime);
  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v18, 1, 1, v12);
    goto LABEL_13;
  }
  v20 = v19;
  sub_24B7F3448();

  v21 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v21(v18, v15, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v18, 1, v12) == 1)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v22 = v43;
  v21(v43, v18, v12);
  v23 = objc_msgSend(a1, sel_uuid);
  if (!v23)
  {
LABEL_14:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v11, 1, 1, v3);
    goto LABEL_15;
  }
  v24 = v23;
  sub_24B7F3478();

  v25 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
  v25(v11, v6, v3);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v26(v11, 0, 1, v3);
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  if (v27(v11, 1, v3) == 1)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v41 = v26;
  v28 = (int *)_s8IdentityVMa(0);
  v25(&v22[v28[5]], v11, v3);
  *(_DWORD *)&v22[v28[6]] = objc_msgSend(a1, sel_userID);
  v29 = objc_msgSend(a1, sel_name);
  if (v29)
  {
    v30 = v29;
    v31 = sub_24B7F355C();
    v33 = v32;

  }
  else
  {
    v31 = 0;
    v33 = 0xE000000000000000;
  }
  v34 = (uint64_t *)&v22[v28[7]];
  *v34 = v31;
  v34[1] = v33;
  v35 = objc_msgSend(a1, sel_accessory);
  if (!v35)
    goto LABEL_16;
  v36 = v35;
  v37 = objc_msgSend(v35, sel_uuid);

  if (!v37)
  {
LABEL_17:
    result = v41(v42, 1, 1, v3);
    goto LABEL_18;
  }
  sub_24B7F3478();

  v38 = v42;
  v25(v42, v6, v3);
  v41(v38, 0, 1, v3);
  result = ((uint64_t (*)(char *, uint64_t, uint64_t))v27)(v38, 1, v3);
  if ((_DWORD)result != 1)
  {

    return ((uint64_t (*)(char *, char *, uint64_t))v25)(&v22[v28[8]], v38, v3);
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_24B7BBCD8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24B7BBD0C + 4 * byte_24B7F905C[*v0]))(0x6D617473656D6974, 0xE900000000000070);
}

uint64_t sub_24B7BBD0C()
{
  return 1684632949;
}

uint64_t sub_24B7BBD1C()
{
  return 0x444972657375;
}

uint64_t sub_24B7BBD30()
{
  return 1701667182;
}

uint64_t sub_24B7BBD40()
{
  return 0x5555656372756F73;
}

uint64_t sub_24B7BBD5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24B7CC57C(a1, a2);
  *a3 = result;
  return result;
}

void sub_24B7BBD80(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_24B7BBD8C()
{
  sub_24B7BBFFC();
  return sub_24B7F3A18();
}

uint64_t sub_24B7BBDB4()
{
  sub_24B7BBFFC();
  return sub_24B7F3A24();
}

uint64_t sub_24B7BBDDC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0770);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24B7BBFFC();
  sub_24B7F3A0C();
  v13 = 0;
  sub_24B7F3460();
  sub_24B7B19A0(&qword_2579B0778, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  sub_24B7F3928();
  if (!v1)
  {
    _s8IdentityVMa(0);
    v12 = 1;
    sub_24B7F3490();
    sub_24B7B19A0(&qword_2579B0760, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_24B7F3928();
    v11 = 2;
    sub_24B7F3964();
    v10 = 3;
    sub_24B7F38F8();
    v9 = 4;
    sub_24B7F3928();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24B7BBFFC()
{
  unint64_t result;

  result = qword_2579B1F18;
  if (!qword_2579B1F18)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FB790, &_s8IdentityV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B1F18);
  }
  return result;
}

uint64_t sub_24B7BC040(_QWORD *a1)
{
  return sub_24B7BBDDC(a1);
}

uint64_t sub_24B7BC058@<X0>(uint64_t a1@<X8>)
{
  return sub_24B79ACF8((uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_24B7BC064@<X0>(uint64_t a1@<X8>)
{
  return sub_24B7C2700(_s5StateVMa, &qword_2579B0488, a1);
}

uint64_t _s5StateVMa(uint64_t a1)
{
  return sub_24B7D17A4(a1, (uint64_t *)&unk_2579B3390);
}

uint64_t sub_24B7BC08C(uint64_t a1)
{
  return sub_24B7C275C(a1, _s5StateVMa, &qword_2579B0488);
}

uint64_t (*sub_24B7BC0A0())()
{
  _s5StateVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7BC0C8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(_s5StateVMa(0) + 24));
}

uint64_t sub_24B7BC0F0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _s5StateVMa(0);
  v9 = v2 + *(int *)(v8 + 24);
  *(_QWORD *)v9 = a1;
  *(_BYTE *)(v9 + 8) = a2 & 1;
  sub_24B7F3454();
  v10 = sub_24B7F3460();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 0, 1, v10);
  return sub_24B7B2D80((uint64_t)v7, v2 + *(int *)(v8 + 20), &qword_2579B0488);
}

void (*sub_24B7BC1C0(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  *a1 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
  a1[1] = malloc(*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
  a1[2] = _s5StateVMa(0);
  return sub_24B7BC218;
}

void sub_24B7BC218(uint64_t *a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (void *)a1[1];
  if ((a2 & 1) == 0)
  {
    v3 = a1[2];
    v4 = *a1;
    sub_24B7F3454();
    v5 = sub_24B7F3460();
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v2, 0, 1, v5);
    sub_24B7B2D80((uint64_t)v2, v4 + *(int *)(v3 + 20), &qword_2579B0488);
  }
  free(v2);
}

uint64_t sub_24B7BC294@<X0>(uint64_t a1@<X8>)
{
  return sub_24B7BCE00(_s5StateVMa, &qword_2579B0780, a1);
}

uint64_t sub_24B7BC2A8(uint64_t a1)
{
  return sub_24B7BCE70(a1, _s5StateVMa, &qword_2579B0780);
}

uint64_t (*sub_24B7BC2BC())()
{
  _s5StateVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7BC2E4@<X0>(uint64_t a1@<X8>)
{
  return sub_24B7C7570(_s5StateVMa, &qword_2579B0780, a1);
}

uint64_t sub_24B7BC2F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = _s5StateVMa(0);
  return sub_24B7B2D80(a1, v1 + *(int *)(v3 + 32), &qword_2579B0780);
}

uint64_t (*sub_24B7BC334())()
{
  _s5StateVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7BC35C()
{
  return 2;
}

uint64_t sub_24B7BC364()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(_s5StateVMa(0) + 36));
}

uint64_t sub_24B7BC384(unsigned __int8 a1)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = _s5StateVMa(0);
  *(_BYTE *)(v1 + *(int *)(result + 36)) = a1;
  if (v3 != 2)
  {
    v8 = result;
    sub_24B7F3454();
    v9 = sub_24B7F3460();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 0, 1, v9);
    v10 = 28;
    if ((v3 & 1) == 0)
      v10 = 32;
    v11 = v1 + *(int *)(v8 + v10);
    sub_24B7B2F44(v11, &qword_2579B0780);
    return sub_24B7B2E98((uint64_t)v6, v11, &qword_2579B0488);
  }
  return result;
}

void (*sub_24B7BC474(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
  *(_QWORD *)(a1 + 8) = malloc(*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
  v4 = _s5StateVMa(0);
  *(_QWORD *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(v4 + 36);
  return sub_24B7BC4D0;
}

void sub_24B7BC4D0(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if ((a2 & 1) == 0)
  {
    v3 = *a1;
    v4 = *(unsigned __int8 *)(*a1 + *((int *)a1 + 6));
    if (v4 != 2)
    {
      v5 = a1[1];
      v6 = a1[2];
      sub_24B7F3454();
      v7 = sub_24B7F3460();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 0, 1, v7);
      v8 = 28;
      if ((v4 & 1) == 0)
        v8 = 32;
      v9 = v3 + *(int *)(v6 + v8);
      sub_24B7B2F44(v9, &qword_2579B0780);
      sub_24B7B2E98(v5, v9, &qword_2579B0488);
    }
  }
  free((void *)a1[1]);
}

uint64_t sub_24B7BC584@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = _s5StateVMa(0);
  return sub_24B7B2F00(v1 + *(int *)(v3 + 40), a1, &qword_2579B0488);
}

uint64_t sub_24B7BC5C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = _s5StateVMa(0);
  return sub_24B7B2D80(a1, v1 + *(int *)(v3 + 40), &qword_2579B0488);
}

uint64_t (*sub_24B7BC5FC())()
{
  _s5StateVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7BC624()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(_s5StateVMa(0) + 44));
}

uint64_t sub_24B7BC64C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _s5StateVMa(0);
  v9 = v2 + *(int *)(v8 + 44);
  *(_QWORD *)v9 = a1;
  *(_BYTE *)(v9 + 8) = a2 & 1;
  sub_24B7F3454();
  v10 = sub_24B7F3460();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 0, 1, v10);
  return sub_24B7B2D80((uint64_t)v7, v2 + *(int *)(v8 + 40), &qword_2579B0488);
}

void (*sub_24B7BC71C(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  *a1 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
  a1[1] = malloc(*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
  a1[2] = _s5StateVMa(0);
  return sub_24B7BC774;
}

void sub_24B7BC774(uint64_t *a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (void *)a1[1];
  if ((a2 & 1) == 0)
  {
    v3 = a1[2];
    v4 = *a1;
    sub_24B7F3454();
    v5 = sub_24B7F3460();
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v2, 0, 1, v5);
    sub_24B7B2D80((uint64_t)v2, v4 + *(int *)(v3 + 40), &qword_2579B0488);
  }
  free(v2);
}

uint64_t sub_24B7BC7F0@<X0>(uint64_t a1@<X8>)
{
  return sub_24B7C15E8(_s5StateVMa, a1);
}

uint64_t sub_24B7BC7FC(uint64_t a1)
{
  return sub_24B7C1634(a1, _s5StateVMa);
}

uint64_t (*sub_24B7BC808())()
{
  _s5StateVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7BC830()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(_s5StateVMa(0) + 52));
}

uint64_t sub_24B7BC850(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s5StateVMa(0);
  *(_BYTE *)(v1 + *(int *)(v6 + 52)) = a1;
  sub_24B7F3454();
  v7 = sub_24B7F3460();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 0, 1, v7);
  return sub_24B7B2D80((uint64_t)v5, v1 + *(int *)(v6 + 48), &qword_2579B0488);
}

void (*sub_24B7BC910(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  *a1 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
  a1[1] = malloc(*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
  a1[2] = _s5StateVMa(0);
  return sub_24B7BC968;
}

void sub_24B7BC968(uint64_t *a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (void *)a1[1];
  if ((a2 & 1) == 0)
  {
    v3 = a1[2];
    v4 = *a1;
    sub_24B7F3454();
    v5 = sub_24B7F3460();
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v2, 0, 1, v5);
    sub_24B7B2D80((uint64_t)v2, v4 + *(int *)(v3 + 48), &qword_2579B0488);
  }
  free(v2);
}

uint64_t sub_24B7BC9E4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(_s5StateVMa(0) + 56));
}

uint64_t sub_24B7BCA04(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = _s5StateVMa(0);
  *(_BYTE *)(v1 + *(int *)(result + 56)) = a1;
  return result;
}

uint64_t (*sub_24B7BCA30())()
{
  _s5StateVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7BCA58()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(_s5StateVMa(0) + 60));
}

uint64_t sub_24B7BCA78(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = _s5StateVMa(0);
  *(_BYTE *)(v1 + *(int *)(result + 60)) = a1;
  return result;
}

uint64_t (*sub_24B7BCAA4())()
{
  _s5StateVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7BCACC@<X0>(uint64_t a1@<X8>)
{
  return sub_24B7C2B9C(_s5StateVMa, &qword_2579B0488, a1);
}

uint64_t sub_24B7BCAE0(uint64_t a1)
{
  return sub_24B7C2BF8(a1, _s5StateVMa, &qword_2579B0488);
}

uint64_t (*sub_24B7BCAF4())()
{
  _s5StateVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7BCB1C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(_s5StateVMa(0) + 68));
}

uint64_t sub_24B7BCB3C(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s5StateVMa(0);
  *(_BYTE *)(v1 + *(int *)(v6 + 68)) = a1;
  sub_24B7F3454();
  v7 = sub_24B7F3460();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 0, 1, v7);
  return sub_24B7B2D80((uint64_t)v5, v1 + *(int *)(v6 + 64), &qword_2579B0488);
}

void (*sub_24B7BCBFC(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  *a1 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
  a1[1] = malloc(*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
  a1[2] = _s5StateVMa(0);
  return sub_24B7BCC54;
}

void sub_24B7BCC54(uint64_t *a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (void *)a1[1];
  if ((a2 & 1) == 0)
  {
    v3 = a1[2];
    v4 = *a1;
    sub_24B7F3454();
    v5 = sub_24B7F3460();
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v2, 0, 1, v5);
    sub_24B7B2D80((uint64_t)v2, v4 + *(int *)(v3 + 64), &qword_2579B0488);
  }
  free(v2);
}

uint64_t sub_24B7BCCD0()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_24B7BCCDC()
{
  _s5StateVMa(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24B7BCCFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(_s5StateVMa(0) + 72);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*sub_24B7BCD38())()
{
  _s5StateVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7BCD60()
{
  unsigned int *v0;

  return *v0;
}

uint64_t sub_24B7BCD68()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24B7BCD70(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*sub_24B7BCD98())()
{
  return nullsub_1;
}

uint64_t sub_24B7BCDA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*sub_24B7BCDDC())()
{
  return nullsub_1;
}

uint64_t sub_24B7BCDEC@<X0>(uint64_t a1@<X8>)
{
  return sub_24B7BCE00(_s5StateV8UserInfoVMa, &qword_2579B0488, a1);
}

uint64_t sub_24B7BCE00@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a1(0);
  return sub_24B7B2F00(v3 + *(int *)(v6 + 28), a3, a2);
}

uint64_t _s5StateV8UserInfoVMa(uint64_t a1)
{
  return sub_24B7D17A4(a1, (uint64_t *)&unk_2579B33A0);
}

uint64_t sub_24B7BCE5C(uint64_t a1)
{
  return sub_24B7BCE70(a1, _s5StateV8UserInfoVMa, &qword_2579B0488);
}

uint64_t sub_24B7BCE70(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a2(0);
  return sub_24B7B2D80(a1, v3 + *(int *)(v6 + 28), a3);
}

uint64_t (*sub_24B7BCEB4())()
{
  _s5StateV8UserInfoVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7BCEDC()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + *(int *)(_s5StateV8UserInfoVMa(0) + 32));
}

uint64_t sub_24B7BCEFC(__int16 a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s5StateV8UserInfoVMa(0);
  *(_WORD *)(v1 + *(int *)(v6 + 32)) = a1;
  sub_24B7F3454();
  v7 = sub_24B7F3460();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 0, 1, v7);
  return sub_24B7B2D80((uint64_t)v5, v1 + *(int *)(v6 + 28), &qword_2579B0488);
}

void (*sub_24B7BCFBC(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  *a1 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
  a1[1] = malloc(*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
  a1[2] = _s5StateV8UserInfoVMa(0);
  return sub_24B7BD014;
}

void sub_24B7BD014(uint64_t *a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (void *)a1[1];
  if ((a2 & 1) == 0)
  {
    v3 = a1[2];
    v4 = *a1;
    sub_24B7F3454();
    v5 = sub_24B7F3460();
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v2, 0, 1, v5);
    sub_24B7B2D80((uint64_t)v2, v4 + *(int *)(v3 + 28), &qword_2579B0488);
  }
  free(v2);
}

uint64_t sub_24B7BD090@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  __int16 v12;

  *(_QWORD *)(a3 + 8) = MEMORY[0x24BEE4AF8];
  v6 = _s5StateV8UserInfoVMa(0);
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  v7 = a3 + *(int *)(v6 + 28);
  v8 = sub_24B7F3460();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v10 = *(int *)(v6 + 32);
  *(_WORD *)(a3 + v10) = 0;
  *(_DWORD *)a3 = a1;
  if ((a2 & 1) != 0)
  {
    v11 = *(uint64_t (**)(uint64_t))(*(_QWORD *)*sub_24B7B571C() + 224);
    swift_retain();
    v12 = v11(a1);
    result = swift_release();
    *(_WORD *)(a3 + v10) = v12;
  }
  return result;
}

size_t sub_24B7BD150(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  size_t result;
  uint64_t v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v4 = _s8IdentityVMa(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_24B7F3844();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v9 = MEMORY[0x24BEE4AF8];
  if (!v8)
  {
LABEL_13:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 8) = v9;
    return result;
  }
  v16 = MEMORY[0x24BEE4AF8];
  result = sub_24B7CA3E0(0, v8 & ~(v8 >> 63), 0);
  if ((v8 & 0x8000000000000000) == 0)
  {
    v15 = v2;
    v11 = 0;
    v9 = v16;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v12 = (id)MEMORY[0x24BD27040](v11, a1);
      else
        v12 = *(id *)(a1 + 8 * v11 + 32);
      sub_24B7BB910(v12, v7);
      v16 = v9;
      v14 = *(_QWORD *)(v9 + 16);
      v13 = *(_QWORD *)(v9 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_24B7CA3E0(v13 > 1, v14 + 1, 1);
        v9 = v16;
      }
      ++v11;
      *(_QWORD *)(v9 + 16) = v14 + 1;
      sub_24B7B2F80((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v14, _s8IdentityVMa);
    }
    while (v8 != v11);
    v2 = v15;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_24B7BD2F0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24B7BD320 + 4 * byte_24B7F9061[a1]))(0x444972657375, 0xE600000000000000);
}

uint64_t sub_24B7BD320()
{
  return 0x697469746E656469;
}

unint64_t sub_24B7BD33C()
{
  return 0xD000000000000014;
}

unint64_t sub_24B7BD358()
{
  return 0xD000000000000015;
}

uint64_t sub_24B7BD378()
{
  return 0x536B636F4C736B73;
}

uint64_t sub_24B7BD398()
{
  unsigned __int8 *v0;

  return sub_24B7BD2F0(*v0);
}

uint64_t sub_24B7BD3A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24B7CC788(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24B7BD3C4()
{
  sub_24B7CA40C();
  return sub_24B7F3A18();
}

uint64_t sub_24B7BD3EC()
{
  sub_24B7CA40C();
  return sub_24B7F3A24();
}

uint64_t sub_24B7BD414(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0788);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24B7CA40C();
  sub_24B7F3A0C();
  v12 = 0;
  sub_24B7F3964();
  if (!v2)
  {
    v11 = *(_QWORD *)(v3 + 8);
    v10[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0790);
    sub_24B7CA450();
    sub_24B7F3928();
    v10[14] = 2;
    sub_24B7F3898();
    _s5StateV8UserInfoVMa(0);
    v10[13] = 3;
    sub_24B7F3460();
    sub_24B7B19A0(&qword_2579B0778, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_24B7F38C8();
    v10[12] = 4;
    sub_24B7F3958();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24B7BD60C(_QWORD *a1)
{
  return sub_24B7BD414(a1);
}

unint64_t sub_24B7BD620()
{
  return sub_24B7CC9B4(MEMORY[0x24BEE4AF8]);
}

uint64_t sub_24B7BD62C()
{
  return sub_24B7C7AF4((void (*)(_QWORD))_s5StateVMa);
}

uint64_t sub_24B7BD638(uint64_t a1)
{
  return sub_24B7C7B24(a1, _s5StateVMa);
}

uint64_t (*sub_24B7BD644())()
{
  _s5StateVMa(0);
  return nullsub_1;
}

id sub_24B7BD66C@<X0>(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id result;
  void *v11;
  char externalPowerSourceConnected;
  void *v13;
  uint64_t v14;
  char IsCharging;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;

  sub_24B7F3454();
  v2 = (int *)_s5StateVMa(0);
  v3 = a1 + v2[5];
  v4 = sub_24B7F3460();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
  v5(v3, 1, 1, v4);
  v6 = a1 + v2[6];
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  v5(a1 + v2[7], 1, 1, v4);
  v5(a1 + v2[8], 1, 1, v4);
  *(_BYTE *)(a1 + v2[9]) = 2;
  v5(a1 + v2[10], 1, 1, v4);
  v7 = a1 + v2[11];
  *(_QWORD *)v7 = 0;
  *(_BYTE *)(v7 + 8) = 1;
  v5(a1 + v2[12], 1, 1, v4);
  *(_BYTE *)(a1 + v2[13]) = 2;
  v5(a1 + v2[16], 1, 1, v4);
  v8 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + v2[18]) = MEMORY[0x24BEE4AF8];
  v9 = v2[19];
  *(_QWORD *)(a1 + v9) = sub_24B7CC9B4(v8);
  result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    v11 = result;
    externalPowerSourceConnected = MobileGestalt_get_externalPowerSourceConnected();

    *(_BYTE *)(a1 + v2[14]) = externalPowerSourceConnected;
    result = (id)MobileGestalt_get_current_device();
    if (result)
    {
      v13 = result;
      v14 = v2[17];
      IsCharging = MobileGestalt_get_batteryIsCharging();

      *(_BYTE *)(a1 + v2[15]) = IsCharging;
      v16 = *(uint64_t (**)(uint64_t))(*(_QWORD *)*sub_24B7B571C() + 216);
      v17 = swift_retain();
      LOBYTE(v16) = v16(v17);
      result = (id)swift_release();
      *(_BYTE *)(a1 + v14) = v16 & 1;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24B7BD830(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s5StateVMa(0);
  v7 = v1 + *(int *)(v6 + 24);
  *(_QWORD *)v7 = a1;
  *(_BYTE *)(v7 + 8) = 0;
  sub_24B7F3454();
  v8 = sub_24B7F3460();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 0, 1, v8);
  return sub_24B7B2D80((uint64_t)v5, v1 + *(int *)(v6 + 20), &qword_2579B0488);
}

uint64_t sub_24B7BD8F8(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s5StateVMa(0);
  *(_BYTE *)(v1 + *(int *)(v6 + 36)) = a1;
  sub_24B7F3454();
  v7 = sub_24B7F3460();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 0, 1, v7);
  v8 = 32;
  if ((a1 & 1) != 0)
    v8 = 28;
  v9 = v1 + *(int *)(v6 + v8);
  sub_24B7B2F44(v9, &qword_2579B0780);
  return sub_24B7B2E98((uint64_t)v5, v9, &qword_2579B0488);
}

uint64_t sub_24B7BD9DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s5StateVMa(0);
  v7 = v1 + *(int *)(v6 + 44);
  *(_QWORD *)v7 = a1;
  *(_BYTE *)(v7 + 8) = 0;
  sub_24B7F3454();
  v8 = sub_24B7F3460();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 0, 1, v8);
  return sub_24B7B2D80((uint64_t)v5, v1 + *(int *)(v6 + 40), &qword_2579B0488);
}

uint64_t sub_24B7BDAA4(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;

  v5 = _s5StateV8UserInfoVMa(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B07B0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v26 - v13;
  v15 = (uint64_t *)(v2 + *(int *)(_s5StateVMa(0) + 76));
  v16 = *v15;
  if (*(_QWORD *)(*v15 + 16) && (v17 = sub_24B7ACCB0(a1), (v18 & 1) != 0))
  {
    sub_24B7B2768(*(_QWORD *)(v16 + 56) + *(_QWORD *)(v6 + 72) * v17, (uint64_t)v14, _s5StateV8UserInfoVMa);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v14, 0, 1, v5);
    return sub_24B7B2F44((uint64_t)v14, &qword_2579B07B0);
  }
  else
  {
    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v20(v14, 1, 1, v5);
    sub_24B7B2F44((uint64_t)v14, &qword_2579B07B0);
    v21 = MEMORY[0x24BEE4AF8];
    *((_QWORD *)v8 + 2) = 0;
    *((_QWORD *)v8 + 3) = 0;
    *((_QWORD *)v8 + 1) = v21;
    v22 = &v8[*(int *)(v5 + 28)];
    v23 = sub_24B7F3460();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
    v24 = *(int *)(v5 + 32);
    *(_WORD *)&v8[v24] = 0;
    *(_DWORD *)v8 = a1;
    if ((a2 & 1) != 0)
    {
      v25 = *(uint64_t (**)(uint64_t))(*(_QWORD *)*sub_24B7B571C() + 224);
      swift_retain();
      LOWORD(v25) = v25(a1);
      swift_release();
      *(_WORD *)&v8[v24] = (_WORD)v25;
    }
    sub_24B7B2F80((uint64_t)v8, (uint64_t)v12, _s5StateV8UserInfoVMa);
    v20(v12, 0, 1, v5);
    return sub_24B7BDCC0((uint64_t)v12, a1);
  }
}

uint64_t sub_24B7BDCC0(uint64_t a1, unsigned int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B07B0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s5StateV8UserInfoVMa(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_24B7B2F44(a1, &qword_2579B07B0);
    v13 = sub_24B7ACCB0(a2);
    if ((v14 & 1) != 0)
    {
      v15 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v17 = *v3;
      v22 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_24B7CB1D8();
        v17 = v22;
      }
      sub_24B7B2F80(*(_QWORD *)(v17 + 56) + *(_QWORD *)(v10 + 72) * v15, (uint64_t)v8, _s5StateV8UserInfoVMa);
      sub_24B7CAE70(v15, v17);
      *v3 = v17;
      swift_bridgeObjectRelease();
      v18 = 0;
    }
    else
    {
      v18 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v18, 1, v9);
    return sub_24B7B2F44((uint64_t)v8, &qword_2579B07B0);
  }
  else
  {
    sub_24B7B2F80(a1, (uint64_t)v12, _s5StateV8UserInfoVMa);
    v19 = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v3;
    *v3 = 0x8000000000000000;
    sub_24B7CB030((uint64_t)v12, a2, v19);
    *v3 = v22;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24B7BDE98(__int16 a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(_QWORD *);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[4];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B7BDAA4(a2, 0);
  _s5StateVMa(0);
  v7 = sub_24B7BDFB8(v13, a2);
  v9 = v8;
  v10 = _s5StateV8UserInfoVMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    *(_WORD *)(v9 + *(int *)(v10 + 32)) = a1;
    sub_24B7F3454();
    v11 = sub_24B7F3460();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v6, 0, 1, v11);
    sub_24B7B2D80((uint64_t)v6, v9 + *(int *)(v10 + 28), &qword_2579B0488);
  }
  return ((uint64_t (*)(_QWORD *, _QWORD))v7)(v13, 0);
}

void (*sub_24B7BDFB8(_QWORD *a1, unsigned int a2))(_QWORD *a1)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_24B7CB5A8(v4, a2);
  return sub_24B7BE004;
}

void sub_24B7BE004(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

uint64_t sub_24B7BE034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  void (*v6)(_QWORD *);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];

  v3 = a3;
  sub_24B7BDAA4(a3, 1);
  _s5StateVMa(0);
  v6 = sub_24B7BDFB8(v11, v3);
  v8 = v7;
  v9 = _s5StateV8UserInfoVMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    *(_QWORD *)(v8 + 16) = a1;
    *(_QWORD *)(v8 + 24) = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return ((uint64_t (*)(_QWORD *, _QWORD))v6)(v11, 0);
}

uint64_t sub_24B7BE0E8(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _BOOL8 v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  int64_t v49;
  uint64_t v50;
  unint64_t v51;
  int64_t v52;
  unint64_t v53;
  int64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _DWORD *v66;
  _QWORD *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t);
  int v72;
  uint64_t v73;
  char v74;
  unint64_t v75;
  uint64_t v76;
  _BOOL8 v77;
  uint64_t v78;
  char v79;
  unint64_t v80;
  char v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(_QWORD *);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  int64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int64_t v111;
  unint64_t v112;
  void (*v113)(_QWORD, _QWORD);
  uint64_t v114;
  unsigned int *v115;
  uint64_t v116;
  unsigned int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  char v123;
  unint64_t v124;
  char v125;
  uint64_t v126;
  uint64_t result;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  unsigned int *v131;
  _DWORD *v132;
  int64_t v133;
  char *v134;
  void (*v135)(_QWORD, _QWORD);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  int64_t v141;
  uint64_t v142;
  uint64_t i;
  uint64_t v144;
  _QWORD v145[5];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B07A8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v132 = (_DWORD *)((char *)&v128 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v3);
  v131 = (unsigned int *)((char *)&v128 - v5);
  v6 = _s8IdentityVMa(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v128 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = _s5StateV8UserInfoVMa(0);
  v10 = *(_QWORD *)(v142 - 8);
  v11 = MEMORY[0x24BDAC7A8](v142);
  v139 = (uint64_t)&v128 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v134 = (char *)&v128 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B07B0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v128 = (uint64_t)&v128 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v136 = (uint64_t)&v128 - v17;
  if (a1 >> 62)
    goto LABEL_29;
  v18 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (i = v10; v18; i = v10)
  {
    if (v18 < 1)
      goto LABEL_121;
    v19 = 0;
    v141 = a1 & 0xC000000000000001;
    v20 = MEMORY[0x24BEE4B00];
    v140 = (_QWORD *)a1;
    v137 = v18;
    while (1)
    {
      v23 = v141 ? (id)MEMORY[0x24BD27040](v19, a1) : *(id *)(a1 + 8 * v19 + 32);
      v24 = v23;
      a1 = (unint64_t)objc_msgSend(v23, sel_userID);
      v25 = objc_msgSend(v24, sel_userID);
      if (*(_QWORD *)(v20 + 16))
      {
        v26 = v20;
        v27 = sub_24B7ACCB0(v25);
        v28 = MEMORY[0x24BEE4AF8];
        if ((v29 & 1) != 0)
        {
          v28 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v27);
          swift_bridgeObjectRetain();
        }
      }
      else
      {
        v26 = v20;
        v28 = MEMORY[0x24BEE4AF8];
      }
      v145[0] = v28;
      v30 = v24;
      v31 = swift_bridgeObjectRetain();
      MEMORY[0x24BD26EB4](v31);
      v10 = *(_QWORD *)((v145[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v10 >= *(_QWORD *)((v145[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_24B7F3670();
      sub_24B7F3688();
      sub_24B7F3664();
      v32 = v145[0];
      swift_bridgeObjectRelease();

      v33 = v26;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v145[0] = v33;
      v36 = sub_24B7ACCB0(a1);
      v37 = *(_QWORD *)(v33 + 16);
      v38 = (v35 & 1) == 0;
      v39 = v37 + v38;
      if (__OFADD__(v37, v38))
        break;
      v10 = v35;
      if (*(_QWORD *)(v33 + 24) >= v39)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v20 = v145[0];
          if ((v35 & 1) != 0)
            goto LABEL_5;
        }
        else
        {
          sub_24B7CB404();
          v20 = v145[0];
          if ((v10 & 1) != 0)
            goto LABEL_5;
        }
      }
      else
      {
        sub_24B7CABC0(v39, isUniquelyReferenced_nonNull_native);
        v40 = sub_24B7ACCB0(a1);
        if ((v10 & 1) != (v41 & 1))
          goto LABEL_122;
        v36 = v40;
        v20 = v145[0];
        if ((v10 & 1) != 0)
        {
LABEL_5:
          v21 = v20;
          v22 = *(_QWORD *)(v20 + 56);
          swift_bridgeObjectRelease();
          *(_QWORD *)(v22 + 8 * v36) = v32;
          v20 = v21;
          goto LABEL_6;
        }
      }
      *(_QWORD *)(v20 + 8 * (v36 >> 6) + 64) |= 1 << v36;
      *(_DWORD *)(*(_QWORD *)(v20 + 48) + 4 * v36) = a1;
      *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v36) = v32;
      v42 = *(_QWORD *)(v20 + 16);
      v43 = __OFADD__(v42, 1);
      v44 = v42 + 1;
      if (v43)
        goto LABEL_28;
      *(_QWORD *)(v20 + 16) = v44;
LABEL_6:
      ++v19;

      swift_bridgeObjectRelease();
      v10 = i;
      a1 = (unint64_t)v140;
      if (v137 == v19)
        goto LABEL_31;
    }
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    swift_bridgeObjectRetain();
    v18 = sub_24B7F3844();
  }
  v20 = MEMORY[0x24BEE4B00];
LABEL_31:
  swift_bridgeObjectRelease();
  v45 = *(_QWORD *)(v20 + 64);
  v129 = v20 + 64;
  v46 = 1 << *(_BYTE *)(v20 + 32);
  v47 = -1;
  if (v46 < 64)
    v47 = ~(-1 << v46);
  v48 = v47 & v45;
  v133 = (unint64_t)(v46 + 63) >> 6;
  v130 = v134 + 16;
  swift_bridgeObjectRetain();
  v49 = 0;
  v50 = v138;
  v137 = v20;
  while (1)
  {
    if (v48)
    {
      v141 = (v48 - 1) & v48;
      v51 = __clz(__rbit64(v48)) | (v49 << 6);
      goto LABEL_52;
    }
    v52 = v49 + 1;
    if (__OFADD__(v49, 1))
      goto LABEL_116;
    if (v52 >= v133)
    {
LABEL_82:
      swift_release();
      v94 = *(int *)(_s5StateVMa(0) + 76);
      v95 = *(_QWORD *)(v50 + v94);
      v96 = *(_QWORD *)(v95 + 64);
      v140 = (_QWORD *)(v95 + 64);
      v97 = 1 << *(_BYTE *)(v95 + 32);
      v98 = -1;
      if (v97 < 64)
        v98 = ~(-1 << v97);
      v99 = v98 & v96;
      v100 = (unint64_t)(v97 + 63) >> 6;
      v135 = (void (*)(_QWORD, _QWORD))(v100 - 1);
      swift_bridgeObjectRetain();
      v101 = 0;
      v141 = v100;
      v139 = v100 - 5;
      v136 = v95 + 104;
      while (!v99)
      {
        v111 = v101 + 1;
        if (__OFADD__(v101, 1))
          goto LABEL_118;
        if (v111 >= v141)
        {
          v113 = (void (*)(_QWORD, _QWORD))v101;
        }
        else
        {
          v112 = v140[v111];
          if (v112)
            goto LABEL_93;
          v113 = (void (*)(_QWORD, _QWORD))(v101 + 1);
          if (v101 + 2 < v141)
          {
            v112 = v140[v101 + 2];
            if (v112)
            {
              v111 = v101 + 2;
              goto LABEL_93;
            }
            v113 = (void (*)(_QWORD, _QWORD))(v101 + 2);
            if (v101 + 3 < v141)
            {
              v112 = v140[v101 + 3];
              if (v112)
              {
                v111 = v101 + 3;
LABEL_93:
                v99 = (v112 - 1) & v112;
                v106 = __clz(__rbit64(v112)) + (v111 << 6);
                v101 = v111;
LABEL_89:
                v107 = *(_QWORD *)(v95 + 56);
                v108 = (uint64_t)v132;
                *v132 = *(_DWORD *)(*(_QWORD *)(v95 + 48) + 4 * v106);
                v109 = v107 + *(_QWORD *)(i + 72) * v106;
                v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B07B8);
                sub_24B7B2768(v109, v108 + *(int *)(v110 + 48), _s5StateV8UserInfoVMa);
                (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 56))(v108, 0, 1, v110);
                goto LABEL_96;
              }
              v111 = v101 + 4;
              v113 = (void (*)(_QWORD, _QWORD))(v101 + 3);
              if (v101 + 4 < v141)
              {
                v112 = v140[v111];
                if (v112)
                  goto LABEL_93;
                while (v139 != v101)
                {
                  v112 = *(_QWORD *)(v136 + 8 * v101++);
                  if (v112)
                  {
                    v111 = v101 + 4;
                    goto LABEL_93;
                  }
                }
                v113 = v135;
              }
            }
          }
        }
        v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B07B8);
        v108 = (uint64_t)v132;
        (*(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 56))(v132, 1, 1, v114);
        v99 = 0;
        v101 = (int64_t)v113;
LABEL_96:
        v115 = v131;
        sub_24B7B2E98(v108, (uint64_t)v131, &qword_2579B07A8);
        v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B07B8);
        if ((*(unsigned int (**)(unsigned int *, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 48))(v115, 1, v116) == 1)
        {
          swift_bridgeObjectRelease();
          return swift_release();
        }
        v117 = *v115;
        v118 = (uint64_t)v115 + *(int *)(v116 + 48);
        v119 = *(_QWORD *)(v118 + 8);
        swift_bridgeObjectRetain();
        sub_24B7B2E38(v118, _s5StateV8UserInfoVMa);
        v120 = *(_QWORD *)(v119 + 16);
        swift_bridgeObjectRelease();
        if (!v120)
        {
          v121 = v138;
          v122 = sub_24B7ACCB0(v117);
          if ((v123 & 1) != 0)
          {
            v124 = v122;
            v125 = swift_isUniquelyReferenced_nonNull_native();
            v126 = *(_QWORD *)(v121 + v94);
            v145[0] = v126;
            *(_QWORD *)(v121 + v94) = 0x8000000000000000;
            if ((v125 & 1) == 0)
            {
              sub_24B7CB1D8();
              v126 = v145[0];
            }
            v103 = i;
            v104 = v128;
            sub_24B7B2F80(*(_QWORD *)(v126 + 56) + *(_QWORD *)(i + 72) * v124, v128, _s5StateV8UserInfoVMa);
            sub_24B7CAE70(v124, v126);
            *(_QWORD *)(v121 + v94) = v126;
            swift_bridgeObjectRelease();
            v102 = 0;
          }
          else
          {
            v102 = 1;
            v103 = i;
            v104 = v128;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v103 + 56))(v104, v102, 1, v142);
          sub_24B7B2F44(v104, &qword_2579B07B0);
        }
      }
      v105 = __clz(__rbit64(v99));
      v99 &= v99 - 1;
      v106 = v105 | (v101 << 6);
      goto LABEL_89;
    }
    v53 = *(_QWORD *)(v129 + 8 * v52);
    ++v49;
    if (!v53)
    {
      v49 = v52 + 1;
      if (v52 + 1 >= v133)
        goto LABEL_82;
      v53 = *(_QWORD *)(v129 + 8 * v49);
      if (!v53)
      {
        v49 = v52 + 2;
        if (v52 + 2 >= v133)
          goto LABEL_82;
        v53 = *(_QWORD *)(v129 + 8 * v49);
        if (!v53)
        {
          v54 = v52 + 3;
          if (v54 >= v133)
            goto LABEL_82;
          v53 = *(_QWORD *)(v129 + 8 * v54);
          if (!v53)
          {
            while (1)
            {
              v49 = v54 + 1;
              if (__OFADD__(v54, 1))
                goto LABEL_120;
              if (v49 >= v133)
                goto LABEL_82;
              v53 = *(_QWORD *)(v129 + 8 * v49);
              ++v54;
              if (v53)
                goto LABEL_51;
            }
          }
          v49 = v54;
        }
      }
    }
LABEL_51:
    v141 = (v53 - 1) & v53;
    v51 = __clz(__rbit64(v53)) + (v49 << 6);
LABEL_52:
    v55 = *(unsigned int *)(*(_QWORD *)(v20 + 48) + 4 * v51);
    v56 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v51);
    v57 = (uint64_t *)(v50 + *(int *)(_s5StateVMa(0) + 76));
    v58 = *v57;
    v59 = *(_QWORD *)(*v57 + 16);
    v140 = (_QWORD *)v49;
    if (v59)
    {
      v60 = sub_24B7ACCB0(v55);
      if ((v61 & 1) != 0)
      {
        v62 = *(_QWORD *)(v58 + 56) + *(_QWORD *)(v10 + 72) * v60;
        v63 = v136;
        sub_24B7B2768(v62, v136, _s5StateV8UserInfoVMa);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v63, 0, 1, v142);
        swift_bridgeObjectRetain();
        sub_24B7B2F44(v63, &qword_2579B07B0);
        goto LABEL_67;
      }
    }
    v64 = v136;
    v65 = v142;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v136, 1, 1, v142);
    swift_bridgeObjectRetain();
    sub_24B7B2F44(v64, &qword_2579B07B0);
    v66 = v134;
    *((_QWORD *)v134 + 1) = MEMORY[0x24BEE4AF8];
    v67 = v130;
    *v130 = 0;
    v67[1] = 0;
    v68 = (char *)v66 + *(int *)(v65 + 28);
    v69 = sub_24B7F3460();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v68, 1, 1, v69);
    v70 = *(int *)(v65 + 32);
    *v66 = v55;
    v71 = *(uint64_t (**)(uint64_t))(*(_QWORD *)*sub_24B7B571C() + 224);
    swift_retain();
    LOWORD(v71) = v71(v55);
    swift_release();
    *(_WORD *)((char *)v66 + v70) = (_WORD)v71;
    sub_24B7B2F80((uint64_t)v66, v139, _s5StateV8UserInfoVMa);
    v72 = swift_isUniquelyReferenced_nonNull_native();
    v145[0] = *v57;
    v73 = v145[0];
    *v57 = 0x8000000000000000;
    v75 = sub_24B7ACCB0(v55);
    v76 = *(_QWORD *)(v73 + 16);
    v77 = (v74 & 1) == 0;
    v78 = v76 + v77;
    if (__OFADD__(v76, v77))
      break;
    v79 = v74;
    if (*(_QWORD *)(v73 + 24) >= v78)
    {
      if ((v72 & 1) != 0)
      {
        v82 = (_QWORD *)v145[0];
        if ((v74 & 1) == 0)
          goto LABEL_64;
      }
      else
      {
        sub_24B7CB1D8();
        v82 = (_QWORD *)v145[0];
        if ((v79 & 1) == 0)
          goto LABEL_64;
      }
    }
    else
    {
      sub_24B7CA88C(v78, v72);
      v80 = sub_24B7ACCB0(v55);
      if ((v79 & 1) != (v81 & 1))
        goto LABEL_122;
      v75 = v80;
      v82 = (_QWORD *)v145[0];
      if ((v79 & 1) == 0)
      {
LABEL_64:
        v82[(v75 >> 6) + 8] |= 1 << v75;
        *(_DWORD *)(v82[6] + 4 * v75) = v55;
        v10 = i;
        sub_24B7B2F80(v139, v82[7] + *(_QWORD *)(i + 72) * v75, _s5StateV8UserInfoVMa);
        v83 = v82[2];
        v43 = __OFADD__(v83, 1);
        v84 = v83 + 1;
        if (v43)
          goto LABEL_117;
        v82[2] = v84;
        goto LABEL_66;
      }
    }
    v10 = i;
    sub_24B7CCB20(v139, v82[7] + *(_QWORD *)(i + 72) * v75);
LABEL_66:
    *v57 = (uint64_t)v82;
    swift_bridgeObjectRelease();
    v50 = v138;
    v49 = (int64_t)v140;
LABEL_67:
    v85 = sub_24B7BDFB8(v145, v55);
    v87 = v86;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v86, 1, v142))
    {
      swift_bridgeObjectRelease();
      ((void (*)(_QWORD *, _QWORD))v85)(v145, 0);
      goto LABEL_35;
    }
    v135 = (void (*)(_QWORD, _QWORD))v85;
    if (v56 >> 62)
    {
      swift_bridgeObjectRetain();
      v88 = sub_24B7F3844();
      swift_bridgeObjectRelease();
      if (v88)
      {
LABEL_70:
        v144 = MEMORY[0x24BEE4AF8];
        sub_24B7CA3E0(0, v88 & ~(v88 >> 63), 0);
        if (v88 < 0)
          goto LABEL_119;
        v89 = 0;
        v90 = v144;
        do
        {
          if ((v56 & 0xC000000000000001) != 0)
            v91 = (id)MEMORY[0x24BD27040](v89, v56);
          else
            v91 = *(id *)(v56 + 8 * v89 + 32);
          sub_24B7BB910(v91, v9);
          v144 = v90;
          v93 = *(_QWORD *)(v90 + 16);
          v92 = *(_QWORD *)(v90 + 24);
          if (v93 >= v92 >> 1)
          {
            sub_24B7CA3E0(v92 > 1, v93 + 1, 1);
            v90 = v144;
          }
          ++v89;
          *(_QWORD *)(v90 + 16) = v93 + 1;
          sub_24B7B2F80((uint64_t)v9, v90+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v93, _s8IdentityVMa);
        }
        while (v88 != v89);
        v50 = v138;
        v49 = (int64_t)v140;
        goto LABEL_81;
      }
    }
    else
    {
      v88 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v88)
        goto LABEL_70;
    }
    v90 = MEMORY[0x24BEE4AF8];
LABEL_81:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v87 + 8) = v90;
    swift_bridgeObjectRelease();
    v135(v145, 0);
    v10 = i;
LABEL_35:
    v20 = v137;
    v48 = v141;
  }
  __break(1u);
LABEL_116:
  __break(1u);
LABEL_117:
  __break(1u);
LABEL_118:
  __break(1u);
LABEL_119:
  __break(1u);
LABEL_120:
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  result = sub_24B7F39A0();
  __break(1u);
  return result;
}

uint64_t sub_24B7BEDD0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24B7BEE0C + 4 * byte_24B7F9066[a1]))(0x6D617473656D6974, 0xE900000000000070);
}

unint64_t sub_24B7BEE0C()
{
  return 0xD000000000000019;
}

uint64_t sub_24B7BEF44()
{
  return 0x4F79616C70736964;
}

uint64_t sub_24B7BEF60()
{
  return 0x73656372756F73;
}

uint64_t sub_24B7BEF78()
{
  return 0x7372657375;
}

uint64_t sub_24B7BEF8C()
{
  unsigned __int8 *v0;

  return sub_24B7BEDD0(*v0);
}

uint64_t sub_24B7BEF94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24B7CCED8(a1, a2);
  *a3 = result;
  return result;
}

void sub_24B7BEFB8(_BYTE *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_24B7BEFC4()
{
  sub_24B7CCB64();
  return sub_24B7F3A18();
}

uint64_t sub_24B7BEFEC()
{
  sub_24B7CCB64();
  return sub_24B7F3A24();
}

uint64_t sub_24B7BF014(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B07C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24B7CCB64();
  sub_24B7F3A0C();
  LOBYTE(v21) = 0;
  sub_24B7F3460();
  sub_24B7B19A0(&qword_2579B0778, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  sub_24B7F3928();
  if (!v2)
  {
    v9 = (int *)_s5StateVMa(0);
    LOBYTE(v21) = 1;
    sub_24B7F38C8();
    v10 = (uint64_t *)(v3 + v9[6]);
    v11 = *v10;
    LOBYTE(v10) = *((_BYTE *)v10 + 8);
    v20 = v3;
    v21 = v11;
    v22 = (char)v10;
    v23 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B07C8);
    sub_24B7D181C(&qword_2579B07D0, &qword_2579B07C8);
    sub_24B7F3928();
    v19 = v20 + v9[7];
    LOBYTE(v21) = 3;
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0780);
    sub_24B7D181C(&qword_2579B07D8, &qword_2579B0780);
    v19 = v12;
    sub_24B7F3928();
    LOBYTE(v21) = 4;
    sub_24B7F3928();
    LOBYTE(v21) = *(_BYTE *)(v20 + v9[9]);
    v23 = 5;
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B07E0);
    v14 = sub_24B7D181C(&qword_2579B07E8, &qword_2579B07E0);
    v19 = v13;
    sub_24B7F3928();
    v18[1] = v14;
    LOBYTE(v21) = 6;
    sub_24B7F38C8();
    v15 = (uint64_t *)(v20 + v9[11]);
    v16 = *v15;
    LOBYTE(v15) = *((_BYTE *)v15 + 8);
    v21 = v16;
    v22 = (char)v15;
    v23 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B07F0);
    sub_24B7D181C(&qword_2579B07F8, &qword_2579B07F0);
    sub_24B7F3928();
    LOBYTE(v21) = 8;
    sub_24B7F38C8();
    LOBYTE(v21) = *(_BYTE *)(v20 + v9[13]);
    v23 = 9;
    sub_24B7F3928();
    LOBYTE(v21) = 10;
    sub_24B7F3904();
    LOBYTE(v21) = 11;
    sub_24B7F3904();
    LOBYTE(v21) = 12;
    sub_24B7F38C8();
    LOBYTE(v21) = 13;
    sub_24B7F3904();
    v21 = *(_QWORD *)(v20 + v9[18]);
    v23 = 14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0800);
    sub_24B7CCBA8();
    sub_24B7F3928();
    v21 = *(_QWORD *)(v20 + v9[19]);
    v23 = 15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0818);
    sub_24B7CCC24();
    sub_24B7F3928();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24B7BF584(_QWORD *a1)
{
  return sub_24B7BF014(a1);
}

uint64_t sub_24B7BF598()
{
  unsigned __int16 *v0;

  return *v0;
}

uint64_t sub_24B7BF5A0()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 4);
}

uint64_t sub_24B7BF5A8()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 6);
}

uint64_t sub_24B7BF5B0()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 8);
}

uint64_t sub_24B7BF5B8()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 10);
}

unint64_t sub_24B7BF5C0(unint64_t a1)
{
  return a1 >> 16;
}

unint64_t sub_24B7BF5C8(unint64_t a1)
{
  return HIDWORD(a1);
}

unint64_t sub_24B7BF5D0(unint64_t a1)
{
  return HIWORD(a1);
}

uint64_t sub_24B7BF5D8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_24B7BF5E0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24B7BF614 + 4 * byte_24B7F9076[*v0]))(0x384D617465685477, 0xE900000000000032);
}

uint64_t sub_24B7BF614()
{
  return 7885943;
}

uint64_t sub_24B7BF624()
{
  return 7951479;
}

unint64_t sub_24B7BF638()
{
  return 0xD000000000000015;
}

uint64_t sub_24B7BF654()
{
  return 0x7367616C66;
}

uint64_t sub_24B7BF668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24B7CD50C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24B7BF68C()
{
  sub_24B7CCCA8();
  return sub_24B7F3A18();
}

uint64_t sub_24B7BF6B4()
{
  sub_24B7CCCA8();
  return sub_24B7F3A24();
}

uint64_t sub_24B7BF6DC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0830);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24B7CCCA8();
  sub_24B7F3A0C();
  v13 = 0;
  sub_24B7F3934();
  if (!v1)
  {
    v12 = 1;
    sub_24B7F3934();
    v11 = 2;
    sub_24B7F3934();
    v10 = 3;
    sub_24B7F3934();
    v9 = 4;
    sub_24B7F3934();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_24B7BF870(_QWORD *a1)
{
  return sub_24B7BF6DC(a1);
}

uint64_t sub_24B7BF88C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24B7BF894()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 24);
}

uint64_t sub_24B7BF89C()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 26);
}

uint64_t sub_24B7BF8A4()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 28);
}

uint64_t sub_24B7BF8AC()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 30);
}

uint64_t sub_24B7BF8B4()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 32);
}

uint64_t sub_24B7BF8BC()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 34);
}

uint64_t sub_24B7BF8C4()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 2);
}

uint64_t sub_24B7BF8CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(_s13NodePlacementV12TemplateInfoVMa(0) + 24);
  v4 = sub_24B7F3490();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_24B7BF914@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(_s13NodePlacementV12TemplateInfoVMa(0) + 28);
  v4 = sub_24B7F3490();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_24B7BF95C@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *(_DWORD *)(a1 + 10);
  _s13NodePlacementV12TemplateInfoVMa(0);
  sub_24B7F3484();
  return sub_24B7F3484();
}

uint64_t sub_24B7BFA40(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24B7BFA80 + 4 * byte_24B7F907B[a1]))(0x546F546465646461, 0xEF6574616C706D65);
}

unint64_t sub_24B7BFA80()
{
  return 0xD000000000000013;
}

unint64_t sub_24B7BFAA8()
{
  return 0xD000000000000017;
}

uint64_t sub_24B7BFAC8()
{
  unsigned __int8 *v0;

  return sub_24B7BFA40(*v0);
}

uint64_t sub_24B7BFAD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24B7CD700(a1, a2);
  *a3 = result;
  return result;
}

void sub_24B7BFAF4(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_24B7BFB00()
{
  sub_24B7CCD00();
  return sub_24B7F3A18();
}

uint64_t sub_24B7BFB28()
{
  sub_24B7CCD00();
  return sub_24B7F3A24();
}

uint64_t sub_24B7BFB50(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0838);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24B7CCD00();
  sub_24B7F3A0C();
  v12 = 0;
  sub_24B7F3934();
  if (!v1)
  {
    v11 = 1;
    sub_24B7F3934();
    _s13NodePlacementV12TemplateInfoVMa(0);
    v10 = 2;
    sub_24B7F3490();
    sub_24B7B19A0(&qword_2579B0760, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_24B7F3928();
    v9 = 3;
    sub_24B7F3928();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_24B7BFD0C(_QWORD *a1)
{
  return sub_24B7BFB50(a1);
}

uint64_t sub_24B7BFD20@<X0>(uint64_t a1@<X8>)
{
  return sub_24B7C5DB8(_s13NodePlacementVMa, &qword_2579B0840, a1);
}

uint64_t sub_24B7BFD34@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int16 v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _DWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  char *v40;
  _QWORD v41[3];
  uint64_t v42;
  _BYTE v43[3008];

  v39 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v40 = (char *)&v35 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = _s13NodePlacementVMa(0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41[2] = a1;
  v17 = sub_24B7F34D8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v12, 1, 1, v17);
  v18 = sub_24B7B4BE0((uint64_t (*)(uint64_t))sub_24B7CCD58, (uint64_t)v41, 0, 0, (uint64_t)v12, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLogStruct.swift", 97, 2, 338, (uint64_t)"init(_:initTemplateInfo:)", 25, 2u);
  sub_24B7B2F44((uint64_t)v12, &qword_2579B03C8);
  if ((v18 & 1) == 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a3, 1, 1, v13);
  v35 = v8;
  v36 = v14;
  v37 = v13;
  v38 = a3;
  *(_QWORD *)v16 = *(_QWORD *)a1;
  *((_WORD *)v16 + 4) = *(_WORD *)(a1 + 8);
  *((_WORD *)v16 + 5) = *(_WORD *)(a1 + 46);
  memcpy(v43, (const void *)(a1 + 48), 0xBB8uLL);
  v42 = MEMORY[0x24BEE4AF8];
  sub_24B7CA4CC(0, 300, 0);
  v19 = v42;
  v20 = *(_QWORD *)(v42 + 16);
  v21 = 10 * v20;
  v22 = -3000;
  do
  {
    v23 = *(_QWORD *)&v43[v22 + 3000];
    v24 = *(_WORD *)&v43[v22 + 3008];
    v42 = v19;
    v25 = *(_QWORD *)(v19 + 24);
    v26 = v20 + 1;
    if (v20 >= v25 >> 1)
    {
      sub_24B7CA4CC((char *)(v25 > 1), v20 + 1, 1);
      v19 = v42;
    }
    *(_QWORD *)(v19 + 16) = v26;
    v27 = v19 + v21 + v22;
    *(_QWORD *)(v27 + 3032) = v23;
    *(_WORD *)(v27 + 3040) = v24;
    v20 = v26;
    v22 += 10;
  }
  while (v22);
  *((_QWORD *)v16 + 2) = v19;
  *((_QWORD *)v16 + 3) = *(_QWORD *)(a1 + 3048);
  *((_DWORD *)v16 + 8) = *(_DWORD *)(a1 + 3056);
  v29 = _s13NodePlacementV12TemplateInfoVMa(0);
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
  v31 = (uint64_t)v40;
  v30(v40, 1, 1, v29);
  if ((v39 & 1) != 0)
  {
    v32 = (uint64_t)v35;
    *v35 = *(_DWORD *)(a1 + 10);
    sub_24B7F3484();
    sub_24B7F3484();
    sub_24B7B2F44(v31, &qword_2579B0840);
    v30((char *)v32, 0, 1, v29);
    sub_24B7B2E98(v32, v31, &qword_2579B0840);
  }
  v33 = v37;
  sub_24B7B2E98(v31, (uint64_t)&v16[*(int *)(v37 + 68)], &qword_2579B0840);
  v34 = v38;
  sub_24B7B2F80((uint64_t)v16, v38, _s13NodePlacementVMa);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v36 + 56))(v34, 0, 1, v33);
}

uint64_t sub_24B7C0118(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24B7C0150 + 4 * byte_24B7F907F[a1]))(0x6953746375727473, 0xEA0000000000657ALL);
}

uint64_t sub_24B7C0150()
{
  return 0x6E6F6973726576;
}

uint64_t sub_24B7C0168()
{
  return 0x746E756F63;
}

uint64_t sub_24B7C017C()
{
  return 0x6564644165646F6ELL;
}

uint64_t sub_24B7C019C()
{
  return 0x6F6D655265646F6ELL;
}

unint64_t sub_24B7C01BC()
{
  return 0xD000000000000010;
}

uint64_t sub_24B7C01F8()
{
  return 0x437473656772616CLL;
}

uint64_t sub_24B7C021C()
{
  return 0x646F4E6C61746F74;
}

uint64_t sub_24B7C0234()
{
  return 0x6572416C61746F74;
}

uint64_t sub_24B7C0250()
{
  return 0x6574616C706D6574;
}

uint64_t sub_24B7C0298()
{
  unsigned __int8 *v0;

  return sub_24B7C0118(*v0);
}

uint64_t sub_24B7C02A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24B7CD8C0(a1, a2);
  *a3 = result;
  return result;
}

void sub_24B7C02C4(_BYTE *a1@<X8>)
{
  *a1 = 14;
}

uint64_t sub_24B7C02D0()
{
  sub_24B7CCD6C();
  return sub_24B7F3A18();
}

uint64_t sub_24B7C02F8()
{
  sub_24B7CCD6C();
  return sub_24B7F3A24();
}

uint64_t sub_24B7C0320(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[8];
  uint64_t v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0848);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24B7CCD6C();
  sub_24B7F3A0C();
  LOBYTE(v11) = 0;
  sub_24B7F3934();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_24B7F3934();
    LOBYTE(v11) = 2;
    sub_24B7F3934();
    LOBYTE(v11) = 3;
    sub_24B7F3934();
    LOBYTE(v11) = 4;
    sub_24B7F3934();
    LOBYTE(v11) = 5;
    sub_24B7F3934();
    v11 = *(_QWORD *)(v3 + 16);
    v10[7] = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0850);
    sub_24B7CCDB0();
    sub_24B7F3928();
    LOBYTE(v11) = 7;
    sub_24B7F3934();
    LOBYTE(v11) = 8;
    sub_24B7F3934();
    LOBYTE(v11) = 9;
    sub_24B7F3934();
    LOBYTE(v11) = 10;
    sub_24B7F3934();
    LOBYTE(v11) = 11;
    sub_24B7F3934();
    LOBYTE(v11) = 12;
    sub_24B7F3934();
    _s13NodePlacementVMa(0);
    LOBYTE(v11) = 13;
    _s13NodePlacementV12TemplateInfoVMa(0);
    sub_24B7B19A0(&qword_2579B0868, _s13NodePlacementV12TemplateInfoVMa, (uint64_t)&unk_24B7F92D0);
    sub_24B7F38C8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24B7C0678(_QWORD *a1)
{
  return sub_24B7C0320(a1);
}

unint64_t sub_24B7C068C()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32);
}

uint64_t sub_24B7C06AC@<X0>(uint64_t a1@<X8>)
{
  return sub_24B7BCE00(_s18MatchNodePlacementVMa, &qword_2579B0490, a1);
}

uint64_t sub_24B7C06C0@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t matched;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  int v28;
  _QWORD v29[4];
  _BYTE v30[3068];

  v28 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v27 = (uint64_t)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  matched = _s18MatchNodePlacementVMa(0);
  v14 = *(_QWORD *)(matched - 8);
  MEMORY[0x24BDAC7A8](matched);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29[2] = a1;
  v17 = sub_24B7F34D8();
  v18 = 1;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v12, 1, 1, v17);
  v19 = sub_24B7B4BE0((uint64_t (*)(uint64_t))sub_24B7CCE6C, (uint64_t)v29, 0, 0, (uint64_t)v12, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Mesa_NonUI/AppleBiometricServices/BioLog/BioLogStruct.swift", 97, 2, 369, (uint64_t)"init(_:initTemplateTopology:)", 29, 2u);
  sub_24B7B2F44((uint64_t)v12, &qword_2579B03C8);
  if ((v19 & 1) != 0)
  {
    *(_DWORD *)v16 = *(_DWORD *)(a1 + 3076);
    *((_WORD *)v16 + 2) = *(_WORD *)(a1 + 4);
    v20 = *(uint64_t (**)(uint64_t))(*(_QWORD *)*sub_24B7B571C() + 152);
    v21 = swift_retain();
    v22 = v20(v21);
    swift_release();
    v23 = *(_DWORD *)(a1 + 3072);
    if ((v22 & 0xFFFFFFFE) != 2)
      v23 = 0;
    *((_DWORD *)v16 + 2) = v23;
    v16[12] = (v22 & 0xFFFFFFFE) != 2;
    v24 = _s13NodePlacementVMa(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v9, 1, 1, v24);
    if ((v28 & 1) != 0)
    {
      memcpy(v30, (const void *)(a1 + 12), 0xBF4uLL);
      v25 = v27;
      sub_24B7BFD34((uint64_t)v30, 0, v27);
      sub_24B7B2F44((uint64_t)v9, &qword_2579B0490);
      sub_24B7B2E98(v25, (uint64_t)v9, &qword_2579B0490);
    }
    sub_24B7B2E98((uint64_t)v9, (uint64_t)&v16[*(int *)(matched + 28)], &qword_2579B0490);
    sub_24B7B2F80((uint64_t)v16, a3, _s18MatchNodePlacementVMa);
    v18 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a3, v18, 1, matched);
}

uint64_t sub_24B7C0984()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24B7C09C0 + 4 * byte_24B7F908D[*v0]))(0x533253686374616DLL, 0xED0000746E756F43);
}

uint64_t sub_24B7C09C0()
{
  return 0x646F4E686374616DLL;
}

uint64_t sub_24B7C09DC()
{
  return 0x676E69686374616DLL;
}

unint64_t sub_24B7C0A00()
{
  return 0xD000000000000010;
}

uint64_t sub_24B7C0A1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24B7CDEB8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24B7C0A40()
{
  sub_24B7CCE80();
  return sub_24B7F3A18();
}

uint64_t sub_24B7C0A68()
{
  sub_24B7CCE80();
  return sub_24B7F3A24();
}

uint64_t sub_24B7C0A90(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char v9;
  _BYTE v11[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0870);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24B7CCE80();
  sub_24B7F3A0C();
  v11[15] = 0;
  sub_24B7F3940();
  if (!v2)
  {
    v11[14] = 1;
    sub_24B7F3934();
    v9 = *(_BYTE *)(v3 + 12);
    v11[13] = 2;
    v11[12] = v9;
    sub_24B7F38D4();
    _s18MatchNodePlacementVMa(0);
    v11[11] = 3;
    _s13NodePlacementVMa(0);
    sub_24B7B19A0(&qword_2579B0878, _s13NodePlacementVMa, (uint64_t)&unk_24B7F92F8);
    sub_24B7F38C8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24B7C0C44(_QWORD *a1)
{
  return sub_24B7C0A90(a1);
}

uint64_t sub_24B7C0C58()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_24B7C0C60@<X0>(uint64_t a1@<X8>)
{
  return sub_24B7C0C74(_s8SequenceVMa, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_24B7C0C74@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = v3 + *(int *)(a1(0) + 20);
  v7 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a3, v6, v7);
}

uint64_t sub_24B7C0CCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = _s8SequenceVMa(0);
  return sub_24B7B2768(v1 + *(int *)(v3 + 24), a1, _s5StateVMa);
}

uint64_t sub_24B7C0D08()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24B7C0D34()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24B7C0D60()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

double sub_24B7C0D6C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  double result;
  _OWORD v5[2];
  __int128 v6;
  char v7;

  sub_24B7CE0C0(a1, (uint64_t)v5);
  v3 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v3;
  result = *(double *)&v6;
  *(_OWORD *)(a2 + 32) = v6;
  *(_BYTE *)(a2 + 48) = v7;
  return result;
}

uint64_t sub_24B7C0DB4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24B7C0DE4 + 4 * byte_24B7F9091[*v0]))(0x4449746E65696C63, 0xE800000000000000);
}

uint64_t sub_24B7C0DE4()
{
  return 0x4449656C646E7562;
}

uint64_t sub_24B7C0DF8()
{
  return 0x4E737365636F7270;
}

uint64_t sub_24B7C0E18()
{
  return 0x697463656E6E6F63;
}

uint64_t sub_24B7C0E38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24B7CE540(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24B7C0E5C()
{
  sub_24B7CE46C();
  return sub_24B7F3A18();
}

uint64_t sub_24B7C0E84()
{
  sub_24B7CE46C();
  return sub_24B7F3A24();
}

uint64_t sub_24B7C0EAC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;
  __int128 v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0880);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24B7CE46C();
  sub_24B7F3A0C();
  LOBYTE(v12) = 0;
  sub_24B7F3970();
  if (!v2)
  {
    v12 = *(_OWORD *)(v3 + 8);
    v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0888);
    sub_24B7D181C(&qword_2579B0890, &qword_2579B0888);
    sub_24B7F3928();
    v12 = *(_OWORD *)(v3 + 24);
    v11 = 2;
    sub_24B7F3928();
    *(_QWORD *)&v12 = *(_QWORD *)(v3 + 40);
    BYTE8(v12) = *(_BYTE *)(v3 + 48);
    v11 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B07C8);
    sub_24B7D181C(&qword_2579B07D0, &qword_2579B07C8);
    sub_24B7F3928();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24B7C1094(_QWORD *a1)
{
  return sub_24B7C0EAC(a1);
}

uint64_t sub_24B7C10A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;

  v3 = v1 + *(int *)(_s8SequenceVMa(0) + 28);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  v10 = *(_BYTE *)(v3 + 48);
  result = sub_24B7CE4B0(*(_QWORD *)v3, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  return result;
}

uint64_t sub_24B7C112C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, _QWORD *a5@<X8>)
{
  int *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t matched;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t result;
  char *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[6];
  char v34;

  v9 = (int *)_s8SequenceVMa(0);
  *((_BYTE *)a5 + v9[8]) = 2;
  v10 = (char *)a5 + v9[9];
  v11 = sub_24B7F3460();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v13(v10, 1, 1, v11);
  v14 = (char *)a5 + v9[10];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v32 = 1;
  *((_QWORD *)v14 + 2) = 1;
  *((_QWORD *)v14 + 3) = 0;
  *((_QWORD *)v14 + 4) = 0;
  *((_QWORD *)v14 + 5) = 0;
  v14[48] = 0;
  v13((char *)a5 + v9[11], 1, 1, v11);
  v13((char *)a5 + v9[12], 1, 1, v11);
  *(_QWORD *)((char *)a5 + v9[13]) = 0;
  *(_QWORD *)((char *)a5 + v9[14]) = 0;
  v15 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)((char *)a5 + v9[15]) = MEMORY[0x24BEE4AF8];
  v16 = (char *)a5 + v9[16];
  v17 = _s8SequenceV10EnrollmentVMa(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = (char *)a5 + v9[17];
  matched = _s8SequenceV5MatchVMa(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(matched - 8) + 56))(v18, 1, 1, matched);
  v20 = (_QWORD *)((char *)a5 + v9[18]);
  *v20 = 0;
  v20[1] = 0;
  v20[2] = 2;
  *(_QWORD *)((char *)a5 + v9[19]) = v15;
  *(_QWORD *)((char *)a5 + v9[20]) = v15;
  *a5 = a1;
  v29 = v12;
  v31 = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)a5 + v9[5], a2, v11);
  v21 = a3;
  sub_24B7B2768(a3, (uint64_t)a5 + v9[6], _s5StateVMa);
  if (a4)
  {
    sub_24B7CE0C0(a4, (uint64_t)v33);
    a4 = (void *)v33[0];
    v22 = v33[1];
    v23 = v33[3];
    v32 = v33[2];
    v24 = v33[4];
    v25 = v33[5];
    v26 = v34;
  }
  else
  {
    v22 = 0;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    v26 = 0;
  }
  sub_24B7B2E38(v21, _s5StateVMa);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v31, v11);
  v28 = (char *)a5 + v9[7];
  *(_QWORD *)v28 = a4;
  *((_QWORD *)v28 + 1) = v22;
  *((_QWORD *)v28 + 2) = v32;
  *((_QWORD *)v28 + 3) = v23;
  *((_QWORD *)v28 + 4) = v24;
  *((_QWORD *)v28 + 5) = v25;
  v28[48] = v26;
  return result;
}

void sub_24B7C1370(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 48) = 0;
}

uint64_t sub_24B7C1388@<X0>(uint64_t a1@<X8>)
{
  return sub_24B79ACF8(_s8SequenceV10EnrollmentVMa, a1);
}

uint64_t sub_24B7C1394@<X0>(uint64_t a1@<X8>)
{
  return sub_24B79ACF8(_s8SequenceV5MatchVMa, a1);
}

uint64_t sub_24B7C13A0()
{
  return 0;
}

uint64_t sub_24B7C13B0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(_s8SequenceVMa(0) + 32));
}

uint64_t sub_24B7C13D0(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = _s8SequenceVMa(0);
  *(_BYTE *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*sub_24B7C13FC())()
{
  _s8SequenceVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7C1424@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = _s8SequenceVMa(0);
  return sub_24B7B2F00(v1 + *(int *)(v3 + 36), a1, &qword_2579B0488);
}

uint64_t sub_24B7C1460(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = _s8SequenceVMa(0);
  return sub_24B7B2D80(a1, v1 + *(int *)(v3 + 36), &qword_2579B0488);
}

uint64_t (*sub_24B7C149C())()
{
  _s8SequenceVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7C14C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = _s8SequenceVMa(0);
  return sub_24B7B2F00(v1 + *(int *)(v3 + 40), a1, &qword_2579B0898);
}

uint64_t sub_24B7C1500(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = _s8SequenceVMa(0);
  return sub_24B7B2D80(a1, v1 + *(int *)(v3 + 40), &qword_2579B0898);
}

uint64_t (*sub_24B7C153C())()
{
  _s8SequenceVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7C1564@<X0>(uint64_t a1@<X8>)
{
  return sub_24B7C96B4(_s8SequenceVMa, &qword_2579B0488, a1);
}

uint64_t sub_24B7C1578(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = _s8SequenceVMa(0);
  return sub_24B7B2D80(a1, v1 + *(int *)(v3 + 44), &qword_2579B0488);
}

uint64_t (*sub_24B7C15B4())()
{
  _s8SequenceVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7C15DC@<X0>(uint64_t a1@<X8>)
{
  return sub_24B7C15E8(_s8SequenceVMa, a1);
}

uint64_t sub_24B7C15E8@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = a1(0);
  return sub_24B7B2F00(v2 + *(int *)(v4 + 48), a2, &qword_2579B0488);
}

uint64_t sub_24B7C1628(uint64_t a1)
{
  return sub_24B7C1634(a1, _s8SequenceVMa);
}

uint64_t sub_24B7C1634(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;

  v4 = a2(0);
  return sub_24B7B2D80(a1, v2 + *(int *)(v4 + 48), &qword_2579B0488);
}

uint64_t (*sub_24B7C1670())()
{
  _s8SequenceVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7C1698()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(_s8SequenceVMa(0) + 52));
}

uint64_t sub_24B7C16B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = _s8SequenceVMa(0);
  *(_QWORD *)(v1 + *(int *)(result + 52)) = a1;
  return result;
}

uint64_t (*sub_24B7C16E4())()
{
  _s8SequenceVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7C170C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(_s8SequenceVMa(0) + 56));
}

uint64_t sub_24B7C172C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = _s8SequenceVMa(0);
  *(_QWORD *)(v1 + *(int *)(result + 56)) = a1;
  return result;
}

uint64_t (*sub_24B7C1758())()
{
  _s8SequenceVMa(0);
  return nullsub_1;
}

__n128 sub_24B7C1780(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  __n128 result;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  __n128 v19;
  __int128 v20;
  _OWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  char v24;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - v7;
  v9 = _s8SequenceVMa(0);
  v10 = v1 + *(int *)(v9 + 36);
  sub_24B7B2F00(v10, (uint64_t)v8, &qword_2579B0488);
  v11 = sub_24B7F3460();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11);
  sub_24B7B2F44((uint64_t)v8, &qword_2579B0488);
  if (v13 == 1)
  {
    sub_24B7F3454();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v6, 0, 1, v11);
    sub_24B7B2D80((uint64_t)v6, v10, &qword_2579B0488);
    sub_24B7CE0C0(a1, (uint64_t)v21);
    v19 = (__n128)v21[1];
    v20 = v21[0];
    v15 = v22;
    v16 = v23;
    v17 = v24;
    v18 = v1 + *(int *)(v9 + 40);
    sub_24B7CE50C(*(_QWORD *)v18, *(_QWORD *)(v18 + 8), *(_QWORD *)(v18 + 16));
    result = v19;
    *(_OWORD *)v18 = v20;
    *(__n128 *)(v18 + 16) = result;
    *(_QWORD *)(v18 + 32) = v15;
    *(_QWORD *)(v18 + 40) = v16;
    *(_BYTE *)(v18 + 48) = v17;
  }
  return result;
}

uint64_t sub_24B7C1904(unsigned __int8 a1)
{
  return a1 + 1;
}

uint64_t sub_24B7C1910()
{
  sub_24B7F39C4();
  sub_24B7F39D0();
  return sub_24B7F39DC();
}

uint64_t sub_24B7C1954()
{
  return sub_24B7F39D0();
}

uint64_t sub_24B7C1980()
{
  sub_24B7F39C4();
  sub_24B7F39D0();
  return sub_24B7F39DC();
}

uint64_t sub_24B7C19C0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_24B7CE728(*a1);
  *a2 = result;
  return result;
}

void sub_24B7C19E8(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 1;
}

uint64_t sub_24B7C19F8()
{
  sub_24B7F2308();
  return sub_24B7F3634();
}

uint64_t sub_24B7C1A44()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_24B7C1A4C@<X0>(uint64_t a1@<X8>)
{
  return sub_24B7C0C74(_s8SequenceV5EventVMa, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_24B7C1A60@<X0>(uint64_t a1@<X8>)
{
  return sub_24B7C1A74(_s8SequenceV5EventVMa, &qword_2579B0468, a1);
}

uint64_t sub_24B7C1A74@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a1(0);
  return sub_24B7B2F00(v3 + *(int *)(v6 + 24), a3, a2);
}

uint64_t sub_24B7C1ABC@<X0>(uint64_t a1@<X8>)
{
  return sub_24B7BCE00(_s8SequenceV5EventVMa, &qword_2579B0388, a1);
}

uint64_t sub_24B7C1AD0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(_s8SequenceV5EventVMa(0) + 32));
}

uint64_t sub_24B7C1AF8()
{
  return sub_24B7C9638(_s8SequenceV5EventVMa);
}

unint64_t sub_24B7C1B04()
{
  uint64_t v0;
  unsigned int *v1;

  v1 = (unsigned int *)(v0 + *(int *)(_s8SequenceV5EventVMa(0) + 40));
  return *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32);
}

uint64_t sub_24B7C1B40()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(_s8SequenceV5EventVMa(0) + 44));
}

uint64_t sub_24B7C1B68()
{
  return 0;
}

uint64_t sub_24B7C1B74@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_24B7C1BA0()
{
  sub_24B7CE750();
  return sub_24B7F3A18();
}

uint64_t sub_24B7C1BC8()
{
  sub_24B7CE750();
  return sub_24B7F3A24();
}

uint64_t sub_24B7C1BF0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B08A0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24B7CE750();
  sub_24B7F3A0C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_24B7C1CB4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(_s8SequenceV5EventVMa(0) + 48));
}

uint64_t sub_24B7C1CD4@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _BYTE *a9@<X8>, char a10, unsigned __int8 a11)
{
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int *v23;
  int v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  _BYTE *v36;
  _BYTE *v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t result;
  uint64_t v41;
  int v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  int v46;

  v46 = a6;
  v45 = a5;
  v44 = a4;
  v43 = a3;
  v16 = a11;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0468);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (int *)_s8SequenceV5EventVMa(0);
  sub_24B7F3454();
  *a9 = a1;
  v24 = a1 & 0xFE;
  v25 = &a9[v23[6]];
  if (v24 == 2)
  {
    v41 = a8;
    v42 = a11;
    v26 = _s6SourceVMa(0);
    v27 = *(_QWORD *)(v26 - 8);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v25, 1, 1, v26);
    sub_24B7B2F00(a2, (uint64_t)v19, &qword_2579B0468);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v19, 1, v26) == 1)
    {
      sub_24B7B2F44((uint64_t)v19, &qword_2579B0468);
      v28 = sub_24B7F3490();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v22, 1, 1, v28);
    }
    else
    {
      v31 = sub_24B7F3490();
      v32 = *(_QWORD *)(v31 - 8);
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v22, v19, v31);
      sub_24B7B2E38((uint64_t)v19, _s6SourceVMa);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v22, 0, 1, v31);
    }
    sub_24B7B2E98((uint64_t)v22, (uint64_t)&a9[v23[7]], &qword_2579B0388);
    v16 = v42;
    a8 = v41;
  }
  else
  {
    sub_24B7B2F00(a2, (uint64_t)&a9[v23[6]], &qword_2579B0468);
    v29 = &a9[v23[7]];
    v30 = sub_24B7F3490();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 1, 1, v30);
  }
  v33 = v46;
  v34 = v45;
  v35 = v44;
  v36 = &a9[v23[8]];
  *(_QWORD *)v36 = v43;
  v36[8] = v35 & 1;
  v37 = &a9[v23[9]];
  *(_QWORD *)v37 = v34;
  v37[8] = v33 & 1;
  v38 = &a9[v23[10]];
  *(_DWORD *)v38 = a7;
  v38[4] = BYTE4(a7) & 1;
  v39 = &a9[v23[11]];
  *(_QWORD *)v39 = a8;
  v39[8] = a10 & 1;
  result = sub_24B7B2F44(a2, &qword_2579B0468);
  a9[v23[12]] = v16 & 1;
  return result;
}

uint64_t sub_24B7C1FA0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24B7C1FCC + 4 * byte_24B7F9095[a1]))(1701869940, 0xE400000000000000);
}

uint64_t sub_24B7C1FCC()
{
  return 0x6D617473656D6974;
}

uint64_t sub_24B7C1FE8()
{
  return 0x656372756F73;
}

uint64_t sub_24B7C1FFC()
{
  return 0x5555656372756F73;
}

uint64_t sub_24B7C2018()
{
  return 0x6574617473;
}

uint64_t sub_24B7C202C()
{
  return 0x6C6576656CLL;
}

uint64_t sub_24B7C2040()
{
  return 0x444972657375;
}

uint64_t sub_24B7C2054()
{
  return 0x6F436E6F73616572;
}

unint64_t sub_24B7C2070()
{
  return 0xD000000000000012;
}

uint64_t sub_24B7C208C()
{
  unsigned __int8 *v0;

  return sub_24B7C1FA0(*v0);
}

uint64_t sub_24B7C2094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24B7CE94C(a1, a2);
  *a3 = result;
  return result;
}

void sub_24B7C20B8(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_24B7C20C4()
{
  sub_24B7CE794();
  return sub_24B7F3A18();
}

uint64_t sub_24B7C20EC()
{
  sub_24B7CE794();
  return sub_24B7F3A24();
}

uint64_t sub_24B7C2114(_QWORD *a1)
{
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  char v10;
  _BYTE v12[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B08A8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24B7CE794();
  sub_24B7F3A0C();
  v12[15] = *v3;
  v12[14] = 0;
  sub_24B7CE7D8();
  sub_24B7F3928();
  if (!v2)
  {
    v9 = _s8SequenceV5EventVMa(0);
    v12[13] = 1;
    sub_24B7F3460();
    sub_24B7B19A0(&qword_2579B0778, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_24B7F3928();
    v12[12] = 2;
    _s6SourceVMa(0);
    sub_24B7B19A0(&qword_2579B0810, _s6SourceVMa, (uint64_t)&unk_24B7F9208);
    sub_24B7F38C8();
    v12[11] = 3;
    sub_24B7F3490();
    sub_24B7B19A0(&qword_2579B0760, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_24B7F38C8();
    v12[10] = 4;
    sub_24B7F38BC();
    v12[9] = 5;
    sub_24B7F38B0();
    v10 = v3[*(int *)(v9 + 40) + 4];
    v12[8] = 6;
    v12[4] = v10;
    sub_24B7F38E0();
    v12[3] = 7;
    sub_24B7F38BC();
    v12[2] = v3[*(int *)(v9 + 48)];
    v12[1] = 8;
    sub_24B7CE81C();
    sub_24B7F38C8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24B7C2464(_QWORD *a1)
{
  return sub_24B7C2114(a1);
}

uint64_t sub_24B7C2478()
{
  _s8SequenceVMa(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24B7C2498(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(_s8SequenceVMa(0) + 60);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*sub_24B7C24D4())()
{
  _s8SequenceVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7C24FC(int a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, unint64_t a7, uint64_t a8, char a9, char a10)
{
  uint64_t v10;
  uint64_t v11;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t result;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v11 = v10;
  v31 = a5;
  v32 = a8;
  v30 = a3;
  v14 = a4 & 1;
  v28 = a1;
  v29 = a6 & 1;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0468);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = _s8SequenceV5EventVMa(0);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B7B2F00(a2, (uint64_t)v17, &qword_2579B0468);
  sub_24B7C1CD4(v28, (uint64_t)v17, v30, v14, v31, v29, a7 | ((HIDWORD(a7) & 1) << 32), v32, v21, a9 & 1, a10 & 1);
  v22 = *(int *)(_s8SequenceVMa(0) + 60);
  v23 = *(_QWORD **)(v11 + v22);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v23 = (_QWORD *)sub_24B7CA26C(0, v23[2] + 1, 1, v23, &qword_2579B1618, _s8SequenceV5EventVMa);
  v25 = v23[2];
  v24 = v23[3];
  if (v25 >= v24 >> 1)
    v23 = (_QWORD *)sub_24B7CA26C(v24 > 1, v25 + 1, 1, v23, &qword_2579B1618, _s8SequenceV5EventVMa);
  v23[2] = v25 + 1;
  result = sub_24B7B2F80((uint64_t)v21, (uint64_t)v23+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(_QWORD *)(v19 + 72) * v25, _s8SequenceV5EventVMa);
  *(_QWORD *)(v11 + v22) = v23;
  return result;
}

uint64_t sub_24B7C26E0@<X0>(uint64_t a1@<X8>)
{
  return sub_24B79ACF8(_s8IdentityVMa, a1);
}

uint64_t sub_24B7C26EC@<X0>(uint64_t a1@<X8>)
{
  return sub_24B7C2700(_s8SequenceV10EnrollmentVMa, &qword_2579B08C0, a1);
}

uint64_t sub_24B7C2700@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a1(0);
  return sub_24B7B2F00(v3 + *(int *)(v6 + 20), a3, a2);
}

uint64_t sub_24B7C2748(uint64_t a1)
{
  return sub_24B7C275C(a1, _s8SequenceV10EnrollmentVMa, &qword_2579B08C0);
}

uint64_t sub_24B7C275C(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a2(0);
  return sub_24B7B2D80(a1, v3 + *(int *)(v6 + 20), a3);
}

uint64_t (*sub_24B7C27A0())()
{
  _s8SequenceV10EnrollmentVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7C27C8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(_s8SequenceV10EnrollmentVMa(0) + 24));
  v2 = *v1;
  sub_24B7CE860(*v1, v1[1]);
  return v2;
}

uint64_t sub_24B7C2808(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t result;

  v5 = (uint64_t *)(v2 + *(int *)(_s8SequenceV10EnrollmentVMa(0) + 24));
  result = sub_24B7B2D64(*v5, v5[1]);
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*sub_24B7C284C())()
{
  _s8SequenceV10EnrollmentVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7C2874()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x797469746E656469;
  if (*v0 != 1)
    v1 = 0xD000000000000014;
  if (*v0)
    return v1;
  else
    return 0x444972657375;
}

uint64_t sub_24B7C28D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24B7CECE8(a1, a2);
  *a3 = result;
  return result;
}

void sub_24B7C28F4(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_24B7C2900()
{
  sub_24B7CE874();
  return sub_24B7F3A18();
}

uint64_t sub_24B7C2928()
{
  sub_24B7CE874();
  return sub_24B7F3A24();
}

uint64_t sub_24B7C2950(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];
  __int128 v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B08C8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24B7CE874();
  sub_24B7F3A0C();
  LOBYTE(v12) = 0;
  sub_24B7F3964();
  if (!v2)
  {
    v9 = _s8SequenceV10EnrollmentVMa(0);
    LOBYTE(v12) = 1;
    _s8IdentityVMa(0);
    sub_24B7B19A0(&qword_2579B07A0, _s8IdentityVMa, (uint64_t)&unk_24B7F9230);
    sub_24B7F38C8();
    v12 = *(_OWORD *)(v3 + *(int *)(v9 + 24));
    v11[15] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0888);
    sub_24B7D181C(&qword_2579B0890, &qword_2579B0888);
    sub_24B7F38C8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24B7C2B08@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _DWORD *a5@<X8>)
{
  uint64_t v9;
  uint64_t result;
  _QWORD *v11;

  *a5 = a1;
  v9 = _s8SequenceV10EnrollmentVMa(0);
  result = sub_24B7B2E98(a2, (uint64_t)a5 + *(int *)(v9 + 20), &qword_2579B08C0);
  v11 = (_QWORD *)((char *)a5 + *(int *)(v9 + 24));
  *v11 = a3;
  v11[1] = a4;
  return result;
}

uint64_t sub_24B7C2B74(_QWORD *a1)
{
  return sub_24B7C2950(a1);
}

uint64_t sub_24B7C2B88@<X0>(uint64_t a1@<X8>)
{
  return sub_24B7C2B9C(_s8SequenceVMa, &qword_2579B04A8, a1);
}

uint64_t sub_24B7C2B9C@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a1(0);
  return sub_24B7B2F00(v3 + *(int *)(v6 + 64), a3, a2);
}

uint64_t sub_24B7C2BE4(uint64_t a1)
{
  return sub_24B7C2BF8(a1, _s8SequenceVMa, &qword_2579B04A8);
}

uint64_t sub_24B7C2BF8(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a2(0);
  return sub_24B7B2D80(a1, v3 + *(int *)(v6 + 64), a3);
}

uint64_t (*sub_24B7C2C3C())()
{
  _s8SequenceVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7C2C64(int a1)
{
  uint64_t v1;
  _DWORD *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v3 = (_DWORD *)(v1 + *(int *)(_s8SequenceVMa(0) + 64));
  sub_24B7B2F44((uint64_t)v3, &qword_2579B04A8);
  v4 = _s8SequenceV10EnrollmentVMa(0);
  v5 = (char *)v3 + *(int *)(v4 + 20);
  v6 = _s8IdentityVMa(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *v3 = a1;
  *(_OWORD *)((char *)v3 + *(int *)(v4 + 24)) = xmmword_24B7FB9A0;
  return (*(uint64_t (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
}

uint64_t sub_24B7C2D0C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B08C0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04A8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = _s8SequenceV10EnrollmentVMa(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = _s8SequenceVMa(0);
  sub_24B7B2F00(v1 + *(int *)(v16 + 64), (uint64_t)v11, &qword_2579B04A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    return sub_24B7B2F44((uint64_t)v11, &qword_2579B04A8);
  sub_24B7B2F80((uint64_t)v11, (uint64_t)v15, _s8SequenceV10EnrollmentVMa);
  sub_24B7F3454();
  v18 = sub_24B7F3460();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v8, 0, 1, v18);
  sub_24B7B2D80((uint64_t)v8, v1 + *(int *)(v16 + 48), &qword_2579B0488);
  if (a1)
  {
    sub_24B7BB910(a1, v5);
    v19 = _s8IdentityVMa(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v5, 0, 1, v19);
    sub_24B7B2D80((uint64_t)v5, (uint64_t)&v15[*(int *)(v12 + 20)], &qword_2579B08C0);
  }
  return sub_24B7B2E38((uint64_t)v15, _s8SequenceV10EnrollmentVMa);
}

uint64_t sub_24B7C2F34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24B7B2F00(v1, a1, &qword_2579B0388);
}

uint64_t sub_24B7C2F58@<X0>(uint64_t a1@<X8>)
{
  return sub_24B7C2700(_s8SequenceV5MatchV6FilterVMa, &qword_2579B0388, a1);
}

unint64_t sub_24B7C2F6C()
{
  uint64_t v0;
  unsigned int *v1;

  v1 = (unsigned int *)(v0 + *(int *)(_s8SequenceV5MatchV6FilterVMa(0) + 24));
  return *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32);
}

uint64_t sub_24B7C2FA8()
{
  _s8SequenceV5MatchV6FilterVMa(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24B7C2FC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(_s8SequenceV5MatchV6FilterVMa(0) + 28);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*sub_24B7C3004())()
{
  _s8SequenceV5MatchV6FilterVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7C302C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  int *matched;
  uint64_t v14;
  unint64_t v15;
  char v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v29;
  char v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *boxed_opaque_existential_1Tm;
  char *v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39[4];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v37 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v37 - v11;
  matched = (int *)_s8SequenceV5MatchV6FilterVMa(0);
  v14 = matched[7];
  *(_QWORD *)(a2 + v14) = 0;
  if (*(_QWORD *)(a1 + 16)
    && (v15 = sub_24B7ACB9C(0xD000000000000010, 0x800000024B8029B0), (v16 & 1) != 0)
    && (sub_24B7B25B8(*(_QWORD *)(a1 + 56) + 32 * v15, (uint64_t)v39), sub_24B7CE8CC(), (swift_dynamicCast() & 1) != 0))
  {
    v17 = v38;
    v18 = objc_msgSend(v38, sel_uuid);

    if (v18)
    {
      sub_24B7F3478();

      v19 = sub_24B7F3490();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v10, 0, 1, v19);
    }
    else
    {
      v36 = sub_24B7F3490();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v10, 1, 1, v36);
    }
    sub_24B7B2E98((uint64_t)v10, (uint64_t)v12, &qword_2579B0388);
  }
  else
  {
    v20 = sub_24B7F3490();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v12, 1, 1, v20);
  }
  sub_24B7B2E98((uint64_t)v12, a2, &qword_2579B0388);
  if (*(_QWORD *)(a1 + 16) && (v21 = sub_24B7ACB9C(0x7265746C69464B42, 0xEC00000044495555), (v22 & 1) != 0))
  {
    sub_24B7B25B8(*(_QWORD *)(a1 + 56) + 32 * v21, (uint64_t)v39);
    v23 = sub_24B7F3490();
    v24 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v7, v24 ^ 1u, 1, v23);
  }
  else
  {
    v25 = sub_24B7F3490();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v7, 1, 1, v25);
  }
  sub_24B7B2E98((uint64_t)v7, a2 + matched[5], &qword_2579B0388);
  v26 = *(_QWORD *)(a1 + 16);
  if (!v26)
    goto LABEL_17;
  v27 = sub_24B7ACB9C(0x7265746C69464B42, 0xEE00444972657355);
  if ((v28 & 1) == 0)
  {
    LODWORD(v26) = 0;
LABEL_17:
    v30 = 1;
    goto LABEL_18;
  }
  sub_24B7B25B8(*(_QWORD *)(a1 + 56) + 32 * v27, (uint64_t)v39);
  v29 = swift_dynamicCast();
  LODWORD(v26) = (_DWORD)v38;
  if (!v29)
    LODWORD(v26) = 0;
  v30 = v29 ^ 1;
LABEL_18:
  v31 = a2 + matched[6];
  *(_DWORD *)v31 = v26;
  *(_BYTE *)(v31 + 4) = v30;
  v32 = sub_24B7CB9B4(a1);
  swift_bridgeObjectRelease();
  v39[3] = (uint64_t)matched;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v39);
  sub_24B7B2768(a2, (uint64_t)boxed_opaque_existential_1Tm, _s8SequenceV5MatchV6FilterVMa);
  v34 = sub_24B7CBD04((uint64_t)v32, (uint64_t)v39);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v39);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + v14) = v34;
  return result;
}

uint64_t sub_24B7C33D8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24B7C3410 + 4 * byte_24B7F909E[*v0]))(0x797469746E656469, 0xEC00000044495555);
}

uint64_t sub_24B7C3410()
{
  return 1684632949;
}

uint64_t sub_24B7C3420()
{
  return 0x444972657375;
}

uint64_t sub_24B7C3434()
{
  return 0x79654B726568746FLL;
}

uint64_t sub_24B7C3450@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24B7CEE30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24B7C3474()
{
  sub_24B7CE908();
  return sub_24B7F3A18();
}

uint64_t sub_24B7C349C()
{
  sub_24B7CE908();
  return sub_24B7F3A24();
}

uint64_t sub_24B7C34C4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t matched;
  char v10;
  _QWORD v12[2];
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B08D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24B7CE908();
  sub_24B7F3A0C();
  v17 = 0;
  sub_24B7F3490();
  sub_24B7B19A0(&qword_2579B0760, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_24B7F38C8();
  if (!v2)
  {
    matched = _s8SequenceV5MatchV6FilterVMa(0);
    v16 = 1;
    sub_24B7F38C8();
    v10 = *(_BYTE *)(v3 + *(int *)(matched + 24) + 4);
    v15 = 2;
    v14 = v10;
    sub_24B7F38E0();
    v12[1] = *(_QWORD *)(v3 + *(int *)(matched + 28));
    v13 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B06E8);
    sub_24B7D1208(&qword_2579B08D8, &qword_2579B06E8, MEMORY[0x24BEE0D08]);
    sub_24B7F38C8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24B7C36D4(_QWORD *a1)
{
  return sub_24B7C34C4(a1);
}

uint64_t sub_24B7C36E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24B7B2F00(v1, a1, &qword_2579B08E0);
}

uint64_t sub_24B7C370C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t sub_24B7C3714()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t sub_24B7C371C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 3);
}

uint64_t sub_24B7C3724()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 4);
}

uint64_t sub_24B7C372C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 5);
}

uint64_t sub_24B7C3734()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 6);
}

uint64_t sub_24B7C373C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 7);
}

uint64_t sub_24B7C3744()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_24B7C3750()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_24B7C3758()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 18);
}

uint64_t sub_24B7C3760()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 19);
}

uint64_t sub_24B7C3768()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24B7C3770()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t sub_24B7C377C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24B7C3784(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = a1;
  return result;
}

uint64_t (*sub_24B7C37AC())()
{
  return nullsub_1;
}

double sub_24B7C37BC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  double result;
  _OWORD v5[2];
  __int128 v6;
  uint64_t v7;

  sub_24B7CEFF4(a1, v5);
  v3 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v3;
  result = *(double *)&v6;
  *(_OWORD *)(a2 + 32) = v6;
  *(_QWORD *)(a2 + 48) = v7;
  return result;
}

uint64_t sub_24B7C3804(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24B7C3844 + 4 * byte_24B7F90A2[a1]))(0x726F46686374616DLL, 0xEE006B636F6C6E55);
}

unint64_t sub_24B7C3858()
{
  return 0xD000000000000016;
}

uint64_t sub_24B7C397C()
{
  return 0x797469726F697270;
}

uint64_t sub_24B7C3994()
{
  return 0x79654B726568746FLL;
}

uint64_t sub_24B7C39B0()
{
  unsigned __int8 *v0;

  return sub_24B7C3804(*v0);
}

uint64_t sub_24B7C39B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24B7CFE08(a1, a2);
  *a3 = result;
  return result;
}

void sub_24B7C39DC(_BYTE *a1@<X8>)
{
  *a1 = 15;
}

uint64_t sub_24B7C39E8()
{
  sub_24B7CFB60();
  return sub_24B7F3A18();
}

uint64_t sub_24B7C3A10()
{
  sub_24B7CFB60();
  return sub_24B7F3A24();
}

uint64_t sub_24B7C3A38(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11[8];
  _BYTE v12[8];
  _BYTE v13[8];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B08E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24B7CFB60();
  sub_24B7F3A0C();
  v11[0] = 0;
  sub_24B7F38A4();
  if (!v2)
  {
    v11[0] = 1;
    sub_24B7F38A4();
    v11[0] = 2;
    sub_24B7F38A4();
    v11[0] = 3;
    sub_24B7F38A4();
    v11[0] = 4;
    sub_24B7F38A4();
    v11[0] = 5;
    sub_24B7F38A4();
    v11[0] = 6;
    sub_24B7F38A4();
    v11[0] = 7;
    sub_24B7F38A4();
    v11[0] = 8;
    sub_24B7F38BC();
    v11[0] = 9;
    sub_24B7F38A4();
    v11[0] = 10;
    sub_24B7F38A4();
    v11[0] = 11;
    sub_24B7F38A4();
    sub_24B7B2E98(v3 + 24, (uint64_t)v13, &qword_2579B08F0);
    sub_24B7B2E98((uint64_t)v13, (uint64_t)v11, &qword_2579B08F0);
    HIBYTE(v10) = 12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B08F8);
    sub_24B7CFBA4();
    sub_24B7F38C8();
    v11[0] = 13;
    sub_24B7F38B0();
    sub_24B7B2E98(v3 + 48, (uint64_t)v12, &qword_2579B0908);
    sub_24B7B2E98((uint64_t)v12, (uint64_t)v11, &qword_2579B0908);
    HIBYTE(v10) = 14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B06E8);
    sub_24B7D1208(&qword_2579B08D8, &qword_2579B06E8, MEMORY[0x24BEE0D08]);
    sub_24B7F38C8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24B7C3DFC(_QWORD *a1)
{
  return sub_24B7C3A38(a1);
}

uint64_t sub_24B7C3E3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t matched;

  matched = _s8SequenceV5MatchVMa(0);
  return sub_24B7B2F00(v1 + *(int *)(matched + 20), a1, &qword_2579B0910);
}

uint64_t sub_24B7C3E78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_24B7F3460();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*sub_24B7C3EB0())()
{
  return nullsub_1;
}

uint64_t sub_24B7C3EC0@<X0>(uint64_t a1@<X8>)
{
  return sub_24B7C2700(_s8SequenceV5MatchV6ResultVMa, &qword_2579B0918, a1);
}

uint64_t sub_24B7C3ED4(uint64_t a1)
{
  return sub_24B7C275C(a1, _s8SequenceV5MatchV6ResultVMa, &qword_2579B0918);
}

uint64_t (*sub_24B7C3EE8())()
{
  _s8SequenceV5MatchV6ResultVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7C3F10()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_24B7C3F1C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_24B7C3F28()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t sub_24B7C3F30()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 26);
}

uint64_t sub_24B7C3F38()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 27);
}

uint64_t sub_24B7C3F40()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 28);
}

uint64_t sub_24B7C3F48()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 29);
}

uint64_t sub_24B7C3F50()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 30);
}

uint64_t sub_24B7C3F58()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 31);
}

uint64_t sub_24B7C3F60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t matched;

  matched = _s8SequenceV5MatchV6ResultV7DetailsVMa(0);
  return sub_24B7B2F00(v1 + *(int *)(matched + 52), a1, &qword_2579B0920);
}

uint64_t sub_24B7C3F9C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(_s8SequenceV5MatchV6ResultV7DetailsVMa(0) + 56));
}

uint64_t sub_24B7C3FC4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(_s8SequenceV5MatchV6ResultV7DetailsVMa(0) + 60));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24B7C4000()
{
  _s8SequenceV5MatchV6ResultV7DetailsVMa(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24B7C4020(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(_s8SequenceV5MatchV6ResultV7DetailsVMa(0) + 64);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*sub_24B7C405C())()
{
  _s8SequenceV5MatchV6ResultV7DetailsVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7C4084(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  int *matched;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  int v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  int v25;
  char v26;
  unint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char *v55;
  char v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  int v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t *boxed_opaque_existential_1Tm;
  char *v68;
  uint64_t result;
  _QWORD v70[10];
  int v71;
  uint64_t v72[385];
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE v76[3088];

  v1 = MEMORY[0x24BDAC7A8](a1);
  v71 = v2;
  v3 = v1;
  v5 = v4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B03C8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0920);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v70 - v13;
  matched = (int *)_s8SequenceV5MatchV6ResultV7DetailsVMa(0);
  v16 = matched[16];
  *(_QWORD *)(v5 + v16) = 0;
  v17 = *(_QWORD *)(v3 + 16);
  if (!v17)
    goto LABEL_7;
  v18 = sub_24B7ACB9C(0xD00000000000001ALL, 0x800000024B8029D0);
  if ((v19 & 1) == 0)
  {
    v17 = 0;
LABEL_7:
    v21 = 1;
    goto LABEL_8;
  }
  sub_24B7B25B8(*(_QWORD *)(v3 + 56) + 32 * v18, (uint64_t)v76);
  v20 = swift_dynamicCast();
  v17 = v72[0];
  if (!v20)
    v17 = 0;
  v21 = v20 ^ 1;
LABEL_8:
  *(_QWORD *)v5 = v17;
  *(_BYTE *)(v5 + 8) = v21;
  v22 = *(_QWORD *)(v3 + 16);
  if (!v22)
  {
LABEL_14:
    v26 = 1;
    goto LABEL_15;
  }
  v23 = sub_24B7ACB9C(0xD000000000000019, 0x800000024B8029F0);
  if ((v24 & 1) == 0)
  {
    v22 = 0;
    goto LABEL_14;
  }
  sub_24B7B25B8(*(_QWORD *)(v3 + 56) + 32 * v23, (uint64_t)v76);
  v25 = swift_dynamicCast();
  v22 = v72[0];
  if (!v25)
    v22 = 0;
  v26 = v25 ^ 1;
LABEL_15:
  *(_QWORD *)(v5 + 16) = v22;
  *(_BYTE *)(v5 + 24) = v26;
  if (*(_QWORD *)(v3 + 16))
  {
    v27 = sub_24B7ACB9C(0xD000000000000013, 0x800000024B802A10);
    v28 = 2;
    if ((v29 & 1) != 0)
    {
      sub_24B7B25B8(*(_QWORD *)(v3 + 56) + 32 * v27, (uint64_t)v76);
      if (swift_dynamicCast())
        v28 = v72[0];
      else
        v28 = 2;
    }
    v30 = *(_QWORD *)(v3 + 16);
    *(_BYTE *)(v5 + 25) = v28;
    if (v30)
    {
      v31 = sub_24B7ACB9C(0xD000000000000015, 0x800000024B802A30);
      v32 = 2;
      if ((v33 & 1) != 0)
      {
        sub_24B7B25B8(*(_QWORD *)(v3 + 56) + 32 * v31, (uint64_t)v76);
        if (swift_dynamicCast())
          v32 = v72[0];
        else
          v32 = 2;
      }
    }
    else
    {
      v32 = 2;
    }
  }
  else
  {
    v32 = 2;
    *(_BYTE *)(v5 + 25) = 2;
  }
  *(_BYTE *)(v5 + 26) = v32;
  if (*(_QWORD *)(v3 + 16))
  {
    v34 = sub_24B7ACB9C(0xD00000000000001ELL, 0x800000024B802A50);
    v35 = 2;
    if ((v36 & 1) != 0)
    {
      sub_24B7B25B8(*(_QWORD *)(v3 + 56) + 32 * v34, (uint64_t)v76);
      if (swift_dynamicCast())
        v35 = v72[0];
      else
        v35 = 2;
    }
    v37 = *(_QWORD *)(v3 + 16);
    *(_BYTE *)(v5 + 27) = v35;
    if (v37)
    {
      v38 = sub_24B7ACB9C(0xD00000000000001CLL, 0x800000024B802A70);
      v39 = 2;
      if ((v40 & 1) != 0)
      {
        sub_24B7B25B8(*(_QWORD *)(v3 + 56) + 32 * v38, (uint64_t)v76);
        if (swift_dynamicCast())
          v39 = v72[0];
        else
          v39 = 2;
      }
    }
    else
    {
      v39 = 2;
    }
  }
  else
  {
    v39 = 2;
    *(_BYTE *)(v5 + 27) = 2;
  }
  *(_BYTE *)(v5 + 28) = v39;
  v41 = *(_QWORD *)(v3 + 16);
  v70[9] = v12;
  if (v41)
  {
    v42 = sub_24B7ACB9C(0xD00000000000001ALL, 0x800000024B802A90);
    v43 = 2;
    if ((v44 & 1) != 0)
    {
      sub_24B7B25B8(*(_QWORD *)(v3 + 56) + 32 * v42, (uint64_t)v76);
      if (swift_dynamicCast())
        v43 = v72[0];
      else
        v43 = 2;
    }
    v45 = *(_QWORD *)(v3 + 16);
    *(_BYTE *)(v5 + 29) = v43;
    if (v45)
    {
      v46 = sub_24B7ACB9C(0xD00000000000001BLL, 0x800000024B802AB0);
      v47 = 2;
      if ((v48 & 1) != 0)
      {
        sub_24B7B25B8(*(_QWORD *)(v3 + 56) + 32 * v46, (uint64_t)v76);
        if (swift_dynamicCast())
          v47 = v72[0];
        else
          v47 = 2;
      }
    }
    else
    {
      v47 = 2;
    }
  }
  else
  {
    v47 = 2;
    *(_BYTE *)(v5 + 29) = 2;
  }
  *(_BYTE *)(v5 + 30) = v47;
  if (*(_QWORD *)(v3 + 16))
  {
    v49 = sub_24B7ACB9C(0xD000000000000020, 0x800000024B802AD0);
    v50 = 2;
    if ((v51 & 1) != 0)
    {
      sub_24B7B25B8(*(_QWORD *)(v3 + 56) + 32 * v49, (uint64_t)v76);
      if (swift_dynamicCast())
        v50 = v72[0];
      else
        v50 = 2;
    }
  }
  else
  {
    v50 = 2;
  }
  *(_BYTE *)(v5 + 31) = v50;
  v52 = _s18MatchNodePlacementVMa(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v14, 1, 1, v52);
  if (*(_QWORD *)(v3 + 16))
  {
    v53 = sub_24B7ACB9C(0xD000000000000019, 0x800000024B802B00);
    if ((v54 & 1) != 0)
    {
      sub_24B7B25B8(*(_QWORD *)(v3 + 56) + 32 * v53, (uint64_t)&v74);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v70[6] = matched;
        v70[7] = v8;
        v55 = (char *)&loc_24B7C4674 + *((int *)qword_24B7C4CF8 + (v73 >> 62));
        v70[8] = v73;
        __asm { BR              X10 }
      }
    }
  }
  v56 = v71;
  sub_24B7B2F00((uint64_t)v14, v5 + matched[13], &qword_2579B0920);
  if ((v56 & 1) != 0 || (v47 & 1) != 0)
  {
    if (*(_QWORD *)(v3 + 16))
    {
      v57 = sub_24B7ACB9C(0xD00000000000001ALL, 0x800000024B802B40);
      if ((v58 & 1) != 0)
      {
        sub_24B7B25B8(*(_QWORD *)(v3 + 56) + 32 * v57, (uint64_t)v72);
        if ((swift_dynamicCast() & 1) != 0)
          __asm { BR              X10 }
      }
    }
  }
  v59 = v5 + matched[14];
  *(_QWORD *)v59 = 0;
  *(_BYTE *)(v59 + 8) = 1;
  v60 = *(_QWORD *)(v3 + 16);
  if (!v60)
    goto LABEL_72;
  v61 = sub_24B7ACB9C(0xD000000000000018, 0x800000024B802B20);
  if ((v62 & 1) == 0)
  {
    v60 = 0;
LABEL_72:
    v64 = 0;
    goto LABEL_73;
  }
  sub_24B7B25B8(*(_QWORD *)(v3 + 56) + 32 * v61, (uint64_t)v72);
  v63 = swift_dynamicCast();
  v60 = v74;
  v64 = v75;
  if (!v63)
  {
    v60 = 0;
    v64 = 0;
  }
LABEL_73:
  v65 = (_QWORD *)(v5 + matched[15]);
  *v65 = v60;
  v65[1] = v64;
  v66 = sub_24B7CB9B4(v3);
  swift_bridgeObjectRelease();
  v72[3] = (uint64_t)matched;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v72);
  sub_24B7B2768(v5, (uint64_t)boxed_opaque_existential_1Tm, _s8SequenceV5MatchV6ResultV7DetailsVMa);
  v68 = sub_24B7CBD04((uint64_t)v66, (uint64_t)v72);
  swift_release();
  sub_24B7B2F44((uint64_t)v14, &qword_2579B0920);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v72);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v5 + v16) = v68;
  return result;
}

void sub_24B7C4BE4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v0 + 80) = (int)v1;
  if ((int)v1 <= v1 >> 32)
  {
    sub_24B7B195C(v1, v2);
    if (sub_24B7F3274())
    {
      v3 = sub_24B7F3298();
      v4 = *(_QWORD *)(v0 + 80);
      *(_QWORD *)(v0 + 80) = v4 - v3;
      if (!__OFSUB__(v4, v3))
      {
        sub_24B7F328C();
        sub_24B7B18E0(v1, v2);
        sub_24B7B18E0(v1, v2);
        JUMPOUT(0x24B7C4CB0);
      }
      __break(1u);
      JUMPOUT(0x24B7C4CD8);
    }
    sub_24B7F328C();
    __break(1u);
    JUMPOUT(0x24B7C4CF0);
  }
  __break(1u);
  JUMPOUT(0x24B7C4CD0);
}

uint64_t sub_24B7C4D18(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24B7C4D58 + 4 * byte_24B7F90B1[a1]))(0x52686374614D6F6ELL, 0xED00006E6F736165);
}

uint64_t sub_24B7C4D58()
{
  return 0x5374756F6B636F6CLL;
}

uint64_t sub_24B7C4D78()
{
  return 0x6D7241657270;
}

uint64_t sub_24B7C4D8C()
{
  return 0x64656B636F6C6E75;
}

unint64_t sub_24B7C4DA4()
{
  return 0xD000000000000011;
}

uint64_t sub_24B7C4DC0()
{
  return 0x69746E6564657263;
}

uint64_t sub_24B7C4DE4()
{
  return 0x6749746C75736572;
}

uint64_t sub_24B7C4E08()
{
  return 0x4D686374614D6F6ELL;
}

unint64_t sub_24B7C4E2C()
{
  return 0xD000000000000013;
}

uint64_t sub_24B7C4E4C()
{
  return 0x79676F6C6F706F74;
}

uint64_t sub_24B7C4E64()
{
  return 0x44496567616D69;
}

uint64_t sub_24B7C4E7C()
{
  return 0x726573556C746F6CLL;
}

uint64_t sub_24B7C4E9C()
{
  return 0x79654B726568746FLL;
}

uint64_t sub_24B7C4EB8()
{
  unsigned __int8 *v0;

  return sub_24B7C4D18(*v0);
}

uint64_t sub_24B7C4EC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24B7D0484(a1, a2);
  *a3 = result;
  return result;
}

void sub_24B7C4EE4(_BYTE *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_24B7C4EF0()
{
  sub_24B7CFCC0();
  return sub_24B7F3A18();
}

uint64_t sub_24B7C4F18()
{
  sub_24B7CFCC0();
  return sub_24B7F3A24();
}

uint64_t sub_24B7C4F40(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t matched;
  _BYTE v11[8];
  uint64_t v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0928);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24B7CFCC0();
  sub_24B7F3A0C();
  LOBYTE(v12) = 0;
  sub_24B7F38BC();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_24B7F38BC();
    LOBYTE(v12) = 2;
    sub_24B7F38A4();
    LOBYTE(v12) = 3;
    sub_24B7F38A4();
    LOBYTE(v12) = 4;
    sub_24B7F38A4();
    LOBYTE(v12) = 5;
    sub_24B7F38A4();
    LOBYTE(v12) = 6;
    sub_24B7F38A4();
    LOBYTE(v12) = 7;
    sub_24B7F38A4();
    LOBYTE(v12) = 8;
    sub_24B7F38A4();
    matched = _s8SequenceV5MatchV6ResultV7DetailsVMa(0);
    LOBYTE(v12) = 9;
    _s18MatchNodePlacementVMa(0);
    sub_24B7B19A0(&qword_2579B0930, _s18MatchNodePlacementVMa, (uint64_t)&unk_24B7F9320);
    sub_24B7F38C8();
    LOBYTE(v12) = 10;
    sub_24B7F38EC();
    LOBYTE(v12) = 11;
    sub_24B7F3898();
    v12 = *(_QWORD *)(v3 + *(int *)(matched + 64));
    v11[7] = 12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B06E8);
    sub_24B7D1208(&qword_2579B08D8, &qword_2579B06E8, MEMORY[0x24BEE0D08]);
    sub_24B7F38C8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24B7C52AC(_QWORD *a1)
{
  return sub_24B7C4F40(a1);
}

uint64_t sub_24B7C52C0@<X0>(uint64_t a1@<X8>)
{
  return sub_24B79ACF8(_s8SequenceV5MatchV6ResultV7DetailsVMa, a1);
}

uint64_t sub_24B7C52CC@<X0>(uint64_t a1@<X8>)
{
  return sub_24B7C1A74(_s8SequenceV5MatchV6ResultVMa, &qword_2579B0938, a1);
}

uint64_t sub_24B7C52E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t matched;

  matched = _s8SequenceV5MatchV6ResultVMa(0);
  return sub_24B7B2D80(a1, v1 + *(int *)(matched + 24), &qword_2579B0938);
}

uint64_t (*sub_24B7C531C())()
{
  _s8SequenceV5MatchV6ResultVMa(0);
  return nullsub_1;
}

void sub_24B7C5344(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t matched;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(char *, _QWORD, uint64_t, uint64_t);
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0938);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v29 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0918);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B7F3454();
  matched = _s8SequenceV5MatchV6ResultVMa(0);
  v19 = a3 + *(int *)(matched + 24);
  v20 = _s8SequenceV5MatchV6ResultV7DetailsVMa(0);
  v21 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v30 = v19;
  v22 = v19;
  v23 = v21;
  v21((char *)v22, 1, 1, v20);
  if (a1)
  {
    v29 = a2;
    v24 = objc_msgSend(a1, sel_uuid);
    if (v24)
    {
      v25 = v24;
      sub_24B7F3478();

      v26 = sub_24B7F3490();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v12, 0, 1, v26);
    }
    else
    {
      v28 = sub_24B7F3490();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v12, 1, 1, v28);
    }
    sub_24B7B2E98((uint64_t)v12, (uint64_t)v14, &qword_2579B0388);
    a2 = v29;
  }
  else
  {
    v27 = sub_24B7F3490();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v14, 1, 1, v27);
  }
  sub_24B7B2E98((uint64_t)v14, (uint64_t)v17, &qword_2579B0388);
  sub_24B7B2E98((uint64_t)v17, a3 + *(int *)(matched + 20), &qword_2579B0918);
  if (a2)
  {
    sub_24B7C4084(a2);

    v23(v8, 0, 1, v20);
    sub_24B7B2D80((uint64_t)v8, v30, &qword_2579B0938);
  }
  else
  {

  }
}

uint64_t sub_24B7C55CC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x797469746E656469;
  if (*v0 != 1)
    v1 = 0x736C6961746564;
  if (*v0)
    return v1;
  else
    return 0x6D617473656D6974;
}

uint64_t sub_24B7C5634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24B7D0A78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24B7C5658()
{
  sub_24B7CFD04();
  return sub_24B7F3A18();
}

uint64_t sub_24B7C5680()
{
  sub_24B7CFD04();
  return sub_24B7F3A24();
}

uint64_t sub_24B7C56A8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0940);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24B7CFD04();
  sub_24B7F3A0C();
  v11 = 0;
  sub_24B7F3460();
  sub_24B7B19A0(&qword_2579B0778, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  sub_24B7F3928();
  if (!v1)
  {
    _s8SequenceV5MatchV6ResultVMa(0);
    v10 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0918);
    sub_24B7D181C(&qword_2579B0948, &qword_2579B0918);
    sub_24B7F3928();
    v9 = 2;
    _s8SequenceV5MatchV6ResultV7DetailsVMa(0);
    sub_24B7B19A0(&qword_2579B0950, _s8SequenceV5MatchV6ResultV7DetailsVMa, (uint64_t)&unk_24B7F9500);
    sub_24B7F38C8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_24B7C5890(_QWORD *a1)
{
  return sub_24B7C56A8(a1);
}

uint64_t sub_24B7C58A4()
{
  _s8SequenceV5MatchVMa(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24B7C58C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(_s8SequenceV5MatchVMa(0) + 24);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*sub_24B7C5900())()
{
  _s8SequenceV5MatchVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7C5928@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t matched;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __int128 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  __int128 v27;
  unsigned __int8 v28;
  uint64_t v29;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0958);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B08E0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  matched = _s8SequenceV5MatchVMa(0);
  *(_QWORD *)(a3 + *(int *)(matched + 24)) = MEMORY[0x24BEE4AF8];
  if (a1)
  {
    sub_24B7C302C(a1, (uint64_t)v8);
    v13 = _s8SequenceV5MatchV6FilterVMa(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  }
  else
  {
    v14 = _s8SequenceV5MatchV6FilterVMa(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 1, 1, v14);
  }
  sub_24B7B2E98((uint64_t)v8, (uint64_t)v11, &qword_2579B0958);
  result = sub_24B7B2E98((uint64_t)v11, a3, &qword_2579B08E0);
  if (a2)
  {
    result = sub_24B7CEFF4(a2, &v22);
    v16 = v22;
    v17 = v27;
    v18 = v28;
    v19 = v29;
    v20 = v23 | ((unint64_t)v24 << 8) | ((unint64_t)v25 << 16) | ((unint64_t)v26 << 24);
  }
  else
  {
    v20 = 0;
    v18 = 0;
    v19 = 0;
    v17 = xmmword_24B7FB9B0;
    v16 = 0uLL;
  }
  v21 = a3 + *(int *)(matched + 20);
  *(_OWORD *)v21 = v16;
  *(_QWORD *)(v21 + 16) = v20;
  *(_OWORD *)(v21 + 24) = v17;
  *(_QWORD *)(v21 + 40) = v18;
  *(_QWORD *)(v21 + 48) = v19;
  return result;
}

uint64_t sub_24B7C5ADC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x736E6F6974706FLL;
  if (*v0 != 1)
    v1 = 0x73746C75736572;
  if (*v0)
    return v1;
  else
    return 0x7265746C6966;
}

uint64_t sub_24B7C5B34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24B7D0BF0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24B7C5B58()
{
  sub_24B7CFD48();
  return sub_24B7F3A18();
}

uint64_t sub_24B7C5B80()
{
  sub_24B7CFD48();
  return sub_24B7F3A24();
}

uint64_t sub_24B7C5BA8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t matched;
  __int128 *v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v14;
  char v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0960);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24B7CFD48();
  sub_24B7F3A0C();
  LOBYTE(v16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B08E0);
  sub_24B7D181C(&qword_2579B0968, &qword_2579B08E0);
  sub_24B7F3928();
  if (!v2)
  {
    matched = _s8SequenceV5MatchVMa(0);
    v10 = (__int128 *)(v3 + *(int *)(matched + 20));
    v11 = *((_QWORD *)v10 + 6);
    v12 = v10[1];
    v16 = *v10;
    v17 = v12;
    v18 = v10[2];
    v19 = v11;
    v15 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0910);
    sub_24B7D181C(&qword_2579B0970, &qword_2579B0910);
    sub_24B7F3928();
    *(_QWORD *)&v16 = *(_QWORD *)(v3 + *(int *)(matched + 24));
    v15 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0978);
    sub_24B7CFD8C();
    sub_24B7F3928();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24B7C5D90(_QWORD *a1)
{
  return sub_24B7C5BA8(a1);
}

uint64_t sub_24B7C5DA4@<X0>(uint64_t a1@<X8>)
{
  return sub_24B7C5DB8(_s8SequenceVMa, &qword_2579B04B0, a1);
}

uint64_t sub_24B7C5DB8@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a1(0);
  return sub_24B7B2F00(v3 + *(int *)(v6 + 68), a3, a2);
}

uint64_t sub_24B7C5E00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = _s8SequenceVMa(0);
  return sub_24B7B2D80(a1, v1 + *(int *)(v3 + 68), &qword_2579B04B0);
}

uint64_t (*sub_24B7C5E3C())()
{
  _s8SequenceVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7C5E64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t matched;
  uint64_t v9;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04B0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  v7 = swift_bridgeObjectRetain();
  sub_24B7C5928(v7, a2, (uint64_t)v6);
  matched = _s8SequenceV5MatchVMa(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(matched - 8) + 56))(v6, 0, 1, matched);
  v9 = _s8SequenceVMa(0);
  return sub_24B7B2D80((uint64_t)v6, v2 + *(int *)(v9 + 68), &qword_2579B04B0);
}

uint64_t sub_24B7C5F30(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t matched;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a1;
  v29 = a2;
  matched = _s8SequenceV5MatchV6ResultVMa(0);
  v30 = *(_QWORD *)(matched - 8);
  MEMORY[0x24BDAC7A8](matched);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04B0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = _s8SequenceVMa(0);
  v13 = v2 + *(int *)(v12 + 68);
  sub_24B7B2F00(v13, (uint64_t)v11, &qword_2579B04B0);
  v14 = _s8SequenceV5MatchVMa(0);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48);
  v16 = v15(v11, 1, v14);
  result = sub_24B7B2F44((uint64_t)v11, &qword_2579B04B0);
  if (v16 != 1)
  {
    sub_24B7F3454();
    v18 = sub_24B7F3460();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v8, 0, 1, v18);
    sub_24B7B2D80((uint64_t)v8, v2 + *(int *)(v12 + 48), &qword_2579B0488);
    result = v15((char *)v13, 1, v14);
    if (!(_DWORD)result)
    {
      v19 = v29;
      swift_bridgeObjectRetain();
      v20 = v28;
      v21 = v28;
      sub_24B7C5344(v20, v19, (uint64_t)v5);
      v22 = *(int *)(v14 + 24);
      v23 = *(_QWORD **)(v13 + v22);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v13 + v22) = v23;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v23 = (_QWORD *)sub_24B7CA26C(0, v23[2] + 1, 1, v23, &qword_2579B15F0, _s8SequenceV5MatchV6ResultVMa);
        *(_QWORD *)(v13 + v22) = v23;
      }
      v26 = v23[2];
      v25 = v23[3];
      if (v26 >= v25 >> 1)
      {
        v23 = (_QWORD *)sub_24B7CA26C(v25 > 1, v26 + 1, 1, v23, &qword_2579B15F0, _s8SequenceV5MatchV6ResultVMa);
        *(_QWORD *)(v13 + v22) = v23;
      }
      v23[2] = v26 + 1;
      return sub_24B7B2F80((uint64_t)v5, (uint64_t)v23+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(_QWORD *)(v30 + 72) * v26, _s8SequenceV5MatchV6ResultVMa);
    }
  }
  return result;
}

uint64_t sub_24B7C61C4(uint64_t a1, __int16 a2)
{
  return HIBYTE(a2);
}

uint64_t sub_24B7C61CC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24B7C61D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t sub_24B7C61FC(uint64_t a1)
{
  return sub_24B7D0D3C(a1);
}

uint64_t sub_24B7C621C()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD00000000000001CLL;
  if (*v0 != 1)
    v1 = 0x79654B726568746FLL;
  if (*v0)
    return v1;
  else
    return 0x797469726F697270;
}

uint64_t sub_24B7C6280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24B7D0F78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24B7C62A4()
{
  sub_24B7D0ECC();
  return sub_24B7F3A18();
}

uint64_t sub_24B7C62CC()
{
  sub_24B7D0ECC();
  return sub_24B7F3A24();
}

uint64_t sub_24B7C62F4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[2];
  char v13;
  char v14;
  char v15;

  v12[0] = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0990);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24B7D0ECC();
  sub_24B7F3A0C();
  v15 = 0;
  sub_24B7F38B0();
  if (!v4)
  {
    v10 = v12[0];
    v14 = 1;
    sub_24B7F38A4();
    v12[1] = v10;
    v13 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B06E8);
    sub_24B7D1208(&qword_2579B08D8, &qword_2579B06E8, MEMORY[0x24BEE0D08]);
    sub_24B7F38C8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_24B7C6480(_QWORD *a1)
{
  uint64_t v1;

  return sub_24B7C62F4(a1, *(_QWORD *)v1, *(unsigned __int8 *)(v1 + 8) | (*(unsigned __int8 *)(v1 + 9) << 8), *(_QWORD *)(v1 + 16));
}

uint64_t sub_24B7C64B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24B7B2FD4(a1, a2, a3);
  return a1;
}

uint64_t sub_24B7C64EC(uint64_t result)
{
  if (result)
    return sub_24B7D0D3C(result);
  return result;
}

uint64_t sub_24B7C6518()
{
  sub_24B7F39C4();
  sub_24B7F39D0();
  return sub_24B7F39DC();
}

uint64_t sub_24B7C6558()
{
  sub_24B7F39C4();
  sub_24B7F39D0();
  return sub_24B7F39DC();
}

uint64_t sub_24B7C6594()
{
  return 0x736E6F6974706FLL;
}

uint64_t sub_24B7C65AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_24B7F3994();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24B7C6640()
{
  sub_24B7D0F10();
  return sub_24B7F3A18();
}

uint64_t sub_24B7C6668()
{
  sub_24B7D0F10();
  return sub_24B7F3A24();
}

uint64_t sub_24B7C6690(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD v13[4];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0998);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24B7D0F10();
  sub_24B7F3A0C();
  v13[1] = a2;
  v13[2] = a3;
  v13[3] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B09A0);
  sub_24B7D181C(&qword_2579B09A8, &qword_2579B09A0);
  sub_24B7F3928();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_24B7C67B8(_QWORD *a1)
{
  uint64_t *v1;

  return sub_24B7C6690(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_24B7C67D4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(_s8SequenceVMa(0) + 72));
  v2 = *v1;
  sub_24B7B2FC4(*v1, v1[1], v1[2]);
  return v2;
}

uint64_t sub_24B7C6828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v7;
  uint64_t result;

  v7 = (uint64_t *)(v3 + *(int *)(_s8SequenceVMa(0) + 72));
  result = sub_24B7D0F54(*v7, v7[1], v7[2]);
  *v7 = a1;
  v7[1] = a2;
  v7[2] = a3;
  return result;
}

uint64_t (*sub_24B7C6878())()
{
  _s8SequenceVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7C68A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int16 v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t result;

  if (a1)
  {
    v2 = swift_bridgeObjectRetain();
    v3 = sub_24B7D0D3C(v2);
    v5 = v4;
    v7 = v6 & 0xFF01;
  }
  else
  {
    v3 = 0;
    v7 = 0;
    v5 = 1;
  }
  v8 = (uint64_t *)(v1 + *(int *)(_s8SequenceVMa(0) + 72));
  result = sub_24B7D0F54(*v8, v8[1], v8[2]);
  *v8 = v3;
  v8[1] = v7;
  v8[2] = v5;
  return result;
}

uint64_t sub_24B7C6910()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 4);
}

uint64_t sub_24B7C6918()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t sub_24B7C6920()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t sub_24B7C6928()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 12);
}

float sub_24B7C6930()
{
  uint64_t v0;

  return *(float *)(v0 + 8);
}

float sub_24B7C6938()
{
  uint64_t v0;

  return *(float *)(v0 + 12);
}

float sub_24B7C6940()
{
  uint64_t v0;

  return *(float *)(v0 + 16);
}

uint64_t sub_24B7C6948()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 20);
}

uint64_t sub_24B7C6950()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_24B7C6958()
{
  return swift_bridgeObjectRetain();
}

double sub_24B7C6960@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;
  __int128 v4;
  _OWORD v5[2];
  uint64_t v6;

  sub_24B7D10D0(a1, (uint64_t)v5);
  result = *(double *)v5;
  v4 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 32) = v6;
  return result;
}

uint64_t sub_24B7C69A0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24B7C69D8 + 4 * byte_24B7F90BE[a1]))(0x6E656D7365737361, 0xE900000000000074);
}

uint64_t sub_24B7C69D8()
{
  return 0x65736F70727570;
}

unint64_t sub_24B7C69F0()
{
  return 0xD000000000000011;
}

unint64_t sub_24B7C6A40()
{
  return 0xD000000000000016;
}

uint64_t sub_24B7C6A80()
{
  unsigned __int8 *v0;

  return sub_24B7C69A0(*v0);
}

uint64_t sub_24B7C6A88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24B7F09B0(a1, a2);
  *a3 = result;
  return result;
}

void sub_24B7C6AAC(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_24B7C6AB8()
{
  sub_24B7D11C4();
  return sub_24B7F3A18();
}

uint64_t sub_24B7C6AE0()
{
  sub_24B7D11C4();
  return sub_24B7F3A24();
}

uint64_t sub_24B7C6B08(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[8];
  uint64_t v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B09B0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24B7D11C4();
  sub_24B7F3A0C();
  LOBYTE(v11) = 0;
  sub_24B7F3964();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_24B7F3964();
    LOBYTE(v11) = 2;
    sub_24B7F3910();
    LOBYTE(v11) = 3;
    sub_24B7F3910();
    LOBYTE(v11) = 4;
    sub_24B7F3910();
    LOBYTE(v11) = 5;
    sub_24B7F3964();
    LOBYTE(v11) = 6;
    sub_24B7F3970();
    v11 = *(_QWORD *)(v3 + 32);
    v10[7] = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B09B8);
    sub_24B7D1208(&qword_2579B09C0, &qword_2579B09B8, MEMORY[0x24BEE14F8]);
    sub_24B7F3928();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24B7C6D48(_QWORD *a1)
{
  return sub_24B7C6B08(a1);
}

uint64_t sub_24B7C6D5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24B7B2F00(v1 + 16, a1, &qword_2579B09C8);
}

int64_t sub_24B7C6D80@<X0>(int64_t result@<X0>, uint64_t a2@<X8>)
{
  int64_t v2;
  int v4;
  int v5;
  char v6;
  char v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _OWORD v11[2];
  uint64_t v12;

  v2 = result;
  v4 = *(_DWORD *)(result + 14);
  v5 = *(_DWORD *)(result + 40);
  v6 = *(_BYTE *)(result + 81);
  v7 = *(_BYTE *)(result + 82);
  if (*(_DWORD *)(result + 83) == 1)
  {
    result = sub_24B7D10D0(result, (uint64_t)v11);
    v8 = v11[0];
    v9 = v11[1];
    v10 = v12;
  }
  else
  {
    v10 = 0;
    v8 = 0uLL;
    v9 = 0uLL;
  }
  *(_BYTE *)a2 = *(_BYTE *)(v2 + 8);
  *(_DWORD *)(a2 + 4) = v4;
  *(_BYTE *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 9) = v7;
  *(_DWORD *)(a2 + 12) = v5;
  *(_OWORD *)(a2 + 16) = v8;
  *(_OWORD *)(a2 + 32) = v9;
  *(_QWORD *)(a2 + 48) = v10;
  return result;
}

uint64_t sub_24B7C6E18()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24B7C6E50 + 4 * byte_24B7F90C6[*v0]))(0x65536E4F74726964, 0xEC000000726F736ELL);
}

uint64_t sub_24B7C6E50()
{
  return 0x6B63616264656566;
}

uint64_t sub_24B7C6E68()
{
  return 0x74747542656D6F68;
}

uint64_t sub_24B7C6E8C()
{
  return 0x536E6950756E656DLL;
}

unint64_t sub_24B7C6EAC()
{
  return 0xD000000000000015;
}

uint64_t sub_24B7C6EC8()
{
  return 0x6E69746C697562;
}

uint64_t sub_24B7C6EE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24B7F0CD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24B7C6F04()
{
  sub_24B7D125C();
  return sub_24B7F3A18();
}

uint64_t sub_24B7C6F2C()
{
  sub_24B7D125C();
  return sub_24B7F3A24();
}

uint64_t sub_24B7C6F54(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  char v11[40];
  _BYTE v12[40];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B09D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24B7D125C();
  sub_24B7F3A0C();
  v11[0] = 0;
  sub_24B7F394C();
  if (!v2)
  {
    v11[0] = 1;
    sub_24B7F3964();
    v11[0] = 2;
    sub_24B7F394C();
    v11[0] = 3;
    sub_24B7F394C();
    v11[0] = 4;
    sub_24B7F3964();
    sub_24B7B2E98(v3 + 16, (uint64_t)v12, &qword_2579B09C8);
    sub_24B7B2E98((uint64_t)v12, (uint64_t)v11, &qword_2579B09C8);
    v10[15] = 5;
    sub_24B7D12A0();
    sub_24B7F38C8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24B7C7140(_QWORD *a1)
{
  return sub_24B7C6F54(a1);
}

unint64_t sub_24B7C7180(uint64_t a1, unint64_t a2)
{
  return a2 >> 16;
}

unint64_t sub_24B7C7188(uint64_t a1, unint64_t a2)
{
  return HIDWORD(a2);
}

uint64_t sub_24B7C71A4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24B7C71DC + 4 * byte_24B7F90CC[a1]))(0x756F43706D6F4377, 0xEA0000000000746ELL);
}

uint64_t sub_24B7C71DC()
{
  return 0x756F4365646F4E77;
}

unint64_t sub_24B7C71FC()
{
  return 0xD000000000000011;
}

unint64_t sub_24B7C7234()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_24B7C725C()
{
  unsigned __int8 *v0;

  return sub_24B7C71A4(*v0);
}

uint64_t sub_24B7C7264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24B7F0FA0(a1, a2);
  *a3 = result;
  return result;
}

void sub_24B7C7288(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_24B7C7294()
{
  sub_24B7D12E4();
  return sub_24B7F3A18();
}

uint64_t sub_24B7C72BC()
{
  sub_24B7D12E4();
  return sub_24B7F3A24();
}

uint64_t sub_24B7C72E4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B09E0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24B7D12E4();
  sub_24B7F3A0C();
  v15 = 0;
  sub_24B7F3934();
  if (!v1)
  {
    v14 = 1;
    sub_24B7F3934();
    v13 = 2;
    sub_24B7F3934();
    v12 = 3;
    sub_24B7F3934();
    v11 = 4;
    sub_24B7F3934();
    v10 = 5;
    sub_24B7F3934();
    v9 = 6;
    sub_24B7F3934();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_24B7C74C8(_QWORD *a1)
{
  return sub_24B7C72E4(a1);
}

uint64_t sub_24B7C74EC()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + *(int *)(_s8SequenceV13StatusMessageVMa(0) + 20));
}

uint64_t sub_24B7C750C@<X0>(uint64_t a1@<X8>)
{
  return sub_24B7C1A74(_s8SequenceV13StatusMessageVMa, &qword_2579B0388, a1);
}

uint64_t sub_24B7C7520@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = _s8SequenceV13StatusMessageVMa(0);
  return sub_24B7B2F00(v1 + *(int *)(v3 + 28), a1, &qword_2579B09E8);
}

uint64_t sub_24B7C755C@<X0>(uint64_t a1@<X8>)
{
  return sub_24B7C7570(_s8SequenceV13StatusMessageVMa, &qword_2579B0490, a1);
}

uint64_t sub_24B7C7570@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a1(0);
  return sub_24B7B2F00(v3 + *(int *)(v6 + 32), a3, a2);
}

uint64_t sub_24B7C75B8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(_s8SequenceV13StatusMessageVMa(0) + 36));
}

uint64_t sub_24B7C7600@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int *v14;
  uint64_t result;
  uint64_t v16;

  sub_24B7F3454();
  v14 = (int *)_s8SequenceV13StatusMessageVMa(0);
  *(_DWORD *)(a7 + v14[5]) = a1;
  sub_24B7B2E98(a2, a7 + v14[6], &qword_2579B0388);
  sub_24B7B2E98(a3, a7 + v14[7], &qword_2579B09E8);
  result = sub_24B7B2E98(a4, a7 + v14[8], &qword_2579B0490);
  v16 = a7 + v14[9];
  *(_QWORD *)v16 = a5;
  *(_WORD *)(v16 + 12) = WORD2(a6);
  *(_DWORD *)(v16 + 8) = a6;
  *(_BYTE *)(v16 + 14) = BYTE6(a6) & 1;
  return result;
}

uint64_t sub_24B7C76CC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24B7C7704 + 4 * byte_24B7F90D3[a1]))(0x6D617473656D6974, 0xE900000000000070);
}

uint64_t sub_24B7C7704()
{
  return 0x6567617373656DLL;
}

uint64_t sub_24B7C771C()
{
  return 0x5555656372756F73;
}

unint64_t sub_24B7C7738()
{
  return 0xD000000000000015;
}

uint64_t sub_24B7C7758()
{
  return 0x79676F6C6F706F74;
}

unint64_t sub_24B7C7770()
{
  return 0xD000000000000012;
}

uint64_t sub_24B7C778C()
{
  unsigned __int8 *v0;

  return sub_24B7C76CC(*v0);
}

uint64_t sub_24B7C7794@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24B7F1274(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24B7C77B8()
{
  sub_24B7D133C();
  return sub_24B7F3A18();
}

uint64_t sub_24B7C77E0()
{
  sub_24B7D133C();
  return sub_24B7F3A24();
}

uint64_t sub_24B7C7808(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 *v10;
  uint64_t v11;
  __int128 v12;
  uint64_t *v13;
  uint64_t v14;
  int v15;
  __int16 v16;
  uint64_t v18;
  char v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B09F0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24B7D133C();
  sub_24B7F3A0C();
  LOBYTE(v20) = 0;
  sub_24B7F3460();
  sub_24B7B19A0(&qword_2579B0778, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  sub_24B7F3928();
  if (!v2)
  {
    v9 = _s8SequenceV13StatusMessageVMa(0);
    LOBYTE(v20) = 1;
    sub_24B7F3964();
    LOBYTE(v20) = 2;
    sub_24B7F3490();
    sub_24B7B19A0(&qword_2579B0760, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_24B7F38C8();
    v10 = (__int128 *)(v3 + *(int *)(v9 + 28));
    v11 = *((_QWORD *)v10 + 6);
    v12 = v10[1];
    v20 = *v10;
    v21 = v12;
    v22 = v10[2];
    v23 = v11;
    v19 = 3;
    sub_24B7D1380();
    sub_24B7F38C8();
    LOBYTE(v20) = 4;
    _s13NodePlacementVMa(0);
    sub_24B7B19A0(&qword_2579B0878, _s13NodePlacementVMa, (uint64_t)&unk_24B7F92F8);
    sub_24B7F38C8();
    v13 = (uint64_t *)(v3 + *(int *)(v9 + 36));
    v14 = *v13;
    v15 = *((_DWORD *)v13 + 2);
    v16 = *((_WORD *)v13 + 6);
    LOBYTE(v13) = *((_BYTE *)v13 + 14);
    *(_QWORD *)&v20 = v14;
    WORD6(v20) = v16;
    DWORD2(v20) = v15;
    BYTE14(v20) = (_BYTE)v13;
    v19 = 5;
    sub_24B7D13C4();
    sub_24B7F38C8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24B7C7AD4(_QWORD *a1)
{
  return sub_24B7C7808(a1);
}

uint64_t sub_24B7C7AE8()
{
  return sub_24B7C7AF4((void (*)(_QWORD))_s8SequenceVMa);
}

uint64_t sub_24B7C7AF4(void (*a1)(_QWORD))
{
  a1(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24B7C7B18(uint64_t a1)
{
  return sub_24B7C7B24(a1, _s8SequenceVMa);
}

uint64_t sub_24B7C7B24(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = *(int *)(a2(0) + 76);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + v4) = a1;
  return result;
}

uint64_t (*sub_24B7C7B60())()
{
  _s8SequenceVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7C7B88@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t result;
  uint64_t v25;

  v13 = (int *)_s8SequenceV13StatusMessageVMa(0);
  v14 = *((_QWORD *)v13 - 1);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B7B2F00(a2, a6 + *(int *)(v15 + 24), &qword_2579B0388);
  sub_24B7B2F00(a3, a6 + v13[8], &qword_2579B0490);
  sub_24B7F3454();
  *(_DWORD *)(a6 + v13[5]) = a1;
  v18 = a6 + v13[7];
  *(_OWORD *)(v18 + 16) = 0u;
  *(_OWORD *)(v18 + 32) = 0u;
  *(_OWORD *)v18 = 0u;
  *(_QWORD *)(v18 + 48) = 1;
  v19 = a6 + v13[9];
  *(_QWORD *)v19 = a4;
  *(_WORD *)(v19 + 12) = WORD2(a5);
  *(_DWORD *)(v19 + 8) = a5;
  *(_BYTE *)(v19 + 14) = BYTE6(a5) & 1;
  sub_24B7B2768(a6, (uint64_t)v17, _s8SequenceV13StatusMessageVMa);
  v20 = *(int *)(_s8SequenceVMa(0) + 76);
  v21 = *(_QWORD **)(v6 + v20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v21 = (_QWORD *)sub_24B7CA26C(0, v21[2] + 1, 1, v21, &qword_2579B15E0, _s8SequenceV13StatusMessageVMa);
  v23 = v21[2];
  v22 = v21[3];
  if (v23 >= v22 >> 1)
    v21 = (_QWORD *)sub_24B7CA26C(v22 > 1, v23 + 1, 1, v21, &qword_2579B15E0, _s8SequenceV13StatusMessageVMa);
  v21[2] = v23 + 1;
  result = sub_24B7B2F80((uint64_t)v17, (uint64_t)v21+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v23, _s8SequenceV13StatusMessageVMa);
  *(_QWORD *)(v6 + v20) = v21;
  return result;
}

uint64_t sub_24B7C7D60@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t result;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[5];
  _OWORD v49[2];
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  _BYTE v55[25];
  _BYTE v56[32];
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  _OWORD v62[3];

  v7 = (int *)_s8SequenceV13StatusMessageVMa(0);
  v8 = *((_QWORD *)v7 - 1);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B7B2E98(a2, (uint64_t)v49, &qword_2579B04A0);
  if (sub_24B7B2EDC((uint64_t)v49) == 1)
  {
    v14 = a3 + v7[6];
    v15 = sub_24B7F3490();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
    v16 = a3 + v7[8];
    v17 = _s13NodePlacementVMa(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
    sub_24B7F3454();
    *(_DWORD *)(a3 + v7[5]) = a1;
    v18 = a3 + v7[7];
    *(_OWORD *)(v18 + 16) = 0u;
    *(_OWORD *)(v18 + 32) = 0u;
    *(_OWORD *)v18 = 0u;
    *(_QWORD *)(v18 + 48) = 1;
  }
  else
  {
    v44 = a1;
    v45 = v10;
    v46 = v8;
    v47 = v3;
    *(_OWORD *)v56 = v49[0];
    *(_OWORD *)&v56[16] = v49[1];
    v61 = v54;
    v60 = v53;
    v62[0] = *(_OWORD *)v55;
    *(_OWORD *)((char *)v62 + 9) = *(_OWORD *)&v55[9];
    v57 = v50;
    v58 = v51;
    v59 = v52;
    v19 = *(unsigned int *)&v56[14];
    v43 = DWORD2(v50);
    v42 = BYTE1(v53);
    v41 = BYTE2(v53);
    v20 = (unint64_t)v53 >> 24;
    sub_24B7F3484();
    v21 = sub_24B7F3490();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v13, 0, 1, v21);
    v22 = 0;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    if (v20 == 1)
    {
      sub_24B7D10D0((uint64_t)v56, (uint64_t)v48);
      v22 = v48[0];
      v23 = v48[1];
      v24 = v48[2];
      v25 = v48[3];
      v26 = v48[4];
    }
    v39 = v23;
    v40 = v22;
    v27 = v56[8] | (unint64_t)(v19 << 32);
    v28 = v42 | (v43 << 32) | (v41 << 8);
    v29 = a3 + v7[8];
    v30 = _s13NodePlacementVMa(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 1, 1, v30);
    sub_24B7F3454();
    *(_DWORD *)(a3 + v7[5]) = v44;
    sub_24B7B2E98((uint64_t)v13, a3 + v7[6], &qword_2579B0388);
    v31 = (unint64_t *)(a3 + v7[7]);
    *v31 = v27;
    v31[1] = v28;
    v32 = v39;
    v31[2] = v40;
    v31[3] = v32;
    v31[4] = v24;
    v31[5] = v25;
    v31[6] = v26;
    v8 = v46;
    v3 = v47;
    v10 = v45;
  }
  v33 = a3 + v7[9];
  *(_QWORD *)v33 = 0;
  *(_WORD *)(v33 + 12) = 0;
  *(_DWORD *)(v33 + 8) = 0;
  *(_BYTE *)(v33 + 14) = 1;
  sub_24B7B2768(a3, (uint64_t)v10, _s8SequenceV13StatusMessageVMa);
  v34 = *(int *)(_s8SequenceVMa(0) + 76);
  v35 = *(_QWORD **)(v3 + v34);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v35 = (_QWORD *)sub_24B7CA26C(0, v35[2] + 1, 1, v35, &qword_2579B15E0, _s8SequenceV13StatusMessageVMa);
  v37 = v35[2];
  v36 = v35[3];
  if (v37 >= v36 >> 1)
    v35 = (_QWORD *)sub_24B7CA26C(v36 > 1, v37 + 1, 1, v35, &qword_2579B15E0, _s8SequenceV13StatusMessageVMa);
  v35[2] = v37 + 1;
  result = sub_24B7B2F80((uint64_t)v10, (uint64_t)v35+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v37, _s8SequenceV13StatusMessageVMa);
  *(_QWORD *)(v3 + v34) = v35;
  return result;
}

uint64_t sub_24B7C8154(uint64_t a1)
{
  unsigned int v1;

  if (a1 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (a1)
    return v1;
  else
    return 0;
}

uint64_t sub_24B7C816C(char a1)
{
  return a1 & 1;
}

BOOL sub_24B7C8174(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_24B7C818C()
{
  sub_24B7F39C4();
  sub_24B7F39D0();
  return sub_24B7F39DC();
}

uint64_t sub_24B7C81D0()
{
  sub_24B7F39C4();
  sub_24B7F39D0();
  return sub_24B7F39DC();
}

_QWORD *sub_24B7C8210@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

void sub_24B7C8230(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_24B7C823C()
{
  sub_24B7F22C4();
  return sub_24B7F3634();
}

uint64_t sub_24B7C8288()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_24B7C8290@<X0>(uint64_t a1@<X8>)
{
  return sub_24B7C1A74(_s8SequenceV8FileInfoVMa, &qword_2579B0388, a1);
}

uint64_t sub_24B7C82A4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(_s8SequenceV8FileInfoVMa(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24B7C82E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(_s8SequenceV8FileInfoVMa(0) + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*sub_24B7C8324())()
{
  _s8SequenceV8FileInfoVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7C834C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24B7C8374 + 4 * byte_24B7F90D9[*v0]))(1701869940, 0xE400000000000000);
}

uint64_t sub_24B7C8374()
{
  return 0x44496567616D69;
}

uint64_t sub_24B7C838C()
{
  return 0x5555656372756F73;
}

uint64_t sub_24B7C83A8()
{
  return 0x656D616E656C6966;
}

uint64_t sub_24B7C83C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24B7F1504(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24B7C83E4()
{
  sub_24B7D141C();
  return sub_24B7F3A18();
}

uint64_t sub_24B7C840C()
{
  sub_24B7D141C();
  return sub_24B7F3A24();
}

uint64_t sub_24B7C8434(_QWORD *a1)
{
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0A08);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24B7D141C();
  sub_24B7F3A0C();
  v10[15] = *v3;
  v10[14] = 0;
  sub_24B7D1460();
  sub_24B7F3928();
  if (!v2)
  {
    v10[13] = 1;
    sub_24B7F3970();
    _s8SequenceV8FileInfoVMa(0);
    v10[12] = 2;
    sub_24B7F3490();
    sub_24B7B19A0(&qword_2579B0760, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_24B7F38C8();
    v10[11] = 3;
    sub_24B7F3898();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24B7C85FC@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;

  *(_BYTE *)a6 = a1 & 1;
  *(_QWORD *)(a6 + 8) = a2;
  v10 = _s8SequenceV8FileInfoVMa(0);
  result = sub_24B7B2E98(a3, a6 + *(int *)(v10 + 24), &qword_2579B0388);
  v12 = (_QWORD *)(a6 + *(int *)(v10 + 28));
  *v12 = a4;
  v12[1] = a5;
  return result;
}

uint64_t sub_24B7C8670(_QWORD *a1)
{
  return sub_24B7C8434(a1);
}

uint64_t sub_24B7C8684()
{
  _s8SequenceVMa(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24B7C86A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(_s8SequenceVMa(0) + 80);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*sub_24B7C86E0())()
{
  _s8SequenceVMa(0);
  return nullsub_1;
}

uint64_t sub_24B7C8708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;
  uint64_t v20;

  v7 = _s8SequenceV8FileInfoVMa(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = &v11[*(int *)(v9 + 24)];
  v13 = sub_24B7F3490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  *v11 = 0;
  *((_QWORD *)v11 + 1) = a1;
  v14 = &v11[*(int *)(v7 + 28)];
  *(_QWORD *)v14 = a2;
  *((_QWORD *)v14 + 1) = a3;
  v15 = *(int *)(_s8SequenceVMa(0) + 80);
  v16 = *(_QWORD **)(v3 + v15);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v16 = (_QWORD *)sub_24B7CA26C(0, v16[2] + 1, 1, v16, &qword_2579B15D8, _s8SequenceV8FileInfoVMa);
  v18 = v16[2];
  v17 = v16[3];
  if (v18 >= v17 >> 1)
    v16 = (_QWORD *)sub_24B7CA26C(v17 > 1, v18 + 1, 1, v16, &qword_2579B15D8, _s8SequenceV8FileInfoVMa);
  v16[2] = v18 + 1;
  result = sub_24B7B2F80((uint64_t)v11, (uint64_t)v16+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v18, _s8SequenceV8FileInfoVMa);
  *(_QWORD *)(v3 + v15) = v16;
  return result;
}

uint64_t sub_24B7C8884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;
  uint64_t v20;

  v9 = _s8SequenceV8FileInfoVMa(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B7B2F00(a2, (uint64_t)&v13[*(int *)(v11 + 24)], &qword_2579B0388);
  *v13 = 1;
  *((_QWORD *)v13 + 1) = a1;
  v14 = &v13[*(int *)(v9 + 28)];
  *(_QWORD *)v14 = a3;
  *((_QWORD *)v14 + 1) = a4;
  v15 = *(int *)(_s8SequenceVMa(0) + 80);
  v16 = *(_QWORD **)(v4 + v15);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v16 = (_QWORD *)sub_24B7CA26C(0, v16[2] + 1, 1, v16, &qword_2579B15D8, _s8SequenceV8FileInfoVMa);
  v18 = v16[2];
  v17 = v16[3];
  if (v18 >= v17 >> 1)
    v16 = (_QWORD *)sub_24B7CA26C(v17 > 1, v18 + 1, 1, v16, &qword_2579B15D8, _s8SequenceV8FileInfoVMa);
  v16[2] = v18 + 1;
  result = sub_24B7B2F80((uint64_t)v13, (uint64_t)v16+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v18, _s8SequenceV8FileInfoVMa);
  *(_QWORD *)(v4 + v15) = v16;
  return result;
}

uint64_t sub_24B7C89F4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24B7C8A34 + 4 * byte_24B7F90DD[a1]))(0x65636E6575716573, 0xEE007265626D754ELL);
}

uint64_t sub_24B7C8A34()
{
  return 0x6D617473656D6974;
}

uint64_t sub_24B7C8A50()
{
  return 0x6574617473;
}

uint64_t sub_24B7C8A64()
{
  return 0x746E65696C63;
}

uint64_t sub_24B7C8A78()
{
  return 0x656C706D6F636E69;
}

uint64_t sub_24B7C8A94()
{
  return 0x69546C65636E6163;
}

uint64_t sub_24B7C8AB8()
{
  return 0x79426C65636E6163;
}

unint64_t sub_24B7C8ADC()
{
  return 0xD000000000000011;
}

unint64_t sub_24B7C8AF8()
{
  return 0xD000000000000013;
}

uint64_t sub_24B7C8B18()
{
  return 0x4365727574706163;
}

uint64_t sub_24B7C8B3C()
{
  return 0x756F436567616D69;
}

uint64_t sub_24B7C8B5C()
{
  return 0x73746E657665;
}

uint64_t sub_24B7C8B70()
{
  return 0x656D6C6C6F726E65;
}

uint64_t sub_24B7C8B90()
{
  return 0x686374616DLL;
}

uint64_t sub_24B7C8BA4()
{
  return 0x65447265676E6966;
}

uint64_t sub_24B7C8BC4()
{
  return 0x654D737574617473;
}

uint64_t sub_24B7C8BE8()
{
  return 0x73656C6966;
}

uint64_t sub_24B7C8BFC()
{
  unsigned __int8 *v0;

  return sub_24B7C89F4(*v0);
}

uint64_t sub_24B7C8C04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24B7F16B8(a1, a2);
  *a3 = result;
  return result;
}

void sub_24B7C8C28(_BYTE *a1@<X8>)
{
  *a1 = 17;
}

uint64_t sub_24B7C8C34()
{
  sub_24B7D14A4();
  return sub_24B7F3A18();
}

uint64_t sub_24B7C8C5C()
{
  sub_24B7D14A4();
  return sub_24B7F3A24();
}

uint64_t sub_24B7C8C84(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 *v10;
  char v11;
  __int128 v12;
  int *v13;
  __int128 *v14;
  char v15;
  __int128 v16;
  __int128 *v17;
  uint64_t v18;
  uint64_t v20;
  int *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  char v25;
  char v26;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0A18);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24B7D14A4();
  sub_24B7F3A0C();
  LOBYTE(v22) = 0;
  sub_24B7F391C();
  if (!v2)
  {
    v9 = _s8SequenceVMa(0);
    LOBYTE(v22) = 1;
    sub_24B7F3460();
    sub_24B7B19A0(&qword_2579B0778, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_24B7F3928();
    v21 = (int *)v9;
    LOBYTE(v22) = 2;
    _s5StateVMa(0);
    sub_24B7B19A0(&qword_2579B0A20, _s5StateVMa, (uint64_t)&unk_24B7F9280);
    sub_24B7F3928();
    v10 = (__int128 *)(v3 + v21[7]);
    v11 = *((_BYTE *)v10 + 48);
    v12 = v10[1];
    v22 = *v10;
    v23 = v12;
    v24 = v10[2];
    v25 = v11;
    v26 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0A28);
    sub_24B7D181C(&qword_2579B0A30, &qword_2579B0A28);
    sub_24B7F3928();
    v13 = v21;
    LOBYTE(v22) = 4;
    sub_24B7F38A4();
    LOBYTE(v22) = 5;
    sub_24B7F38C8();
    v14 = (__int128 *)(v3 + v13[10]);
    v15 = *((_BYTE *)v14 + 48);
    v16 = v14[1];
    v22 = *v14;
    v23 = v16;
    v24 = v14[2];
    v25 = v15;
    v26 = 6;
    sub_24B7D14E8();
    sub_24B7F38C8();
    LOBYTE(v22) = 7;
    sub_24B7F38C8();
    LOBYTE(v22) = 8;
    sub_24B7F38C8();
    LOBYTE(v22) = 9;
    sub_24B7F391C();
    LOBYTE(v22) = 10;
    sub_24B7F391C();
    *(_QWORD *)&v22 = *(_QWORD *)(v3 + v21[15]);
    v26 = 11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0A40);
    sub_24B7D152C();
    sub_24B7F3928();
    LOBYTE(v22) = 12;
    _s8SequenceV10EnrollmentVMa(0);
    sub_24B7B19A0(&qword_2579B0A58, _s8SequenceV10EnrollmentVMa, (uint64_t)&unk_24B7F9488);
    sub_24B7F38C8();
    LOBYTE(v22) = 13;
    _s8SequenceV5MatchVMa(0);
    sub_24B7B19A0(&qword_2579B0A60, _s8SequenceV5MatchVMa, (uint64_t)&unk_24B7F9550);
    sub_24B7F38C8();
    v17 = (__int128 *)(v3 + v21[18]);
    v18 = *((_QWORD *)v17 + 2);
    v22 = *v17;
    *(_QWORD *)&v23 = v18;
    v26 = 14;
    sub_24B7D15A8();
    sub_24B7F38C8();
    *(_QWORD *)&v22 = *(_QWORD *)(v3 + v21[19]);
    v26 = 15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0A70);
    sub_24B7D15EC();
    sub_24B7F3928();
    *(_QWORD *)&v22 = *(_QWORD *)(v3 + v21[20]);
    v26 = 16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0A80);
    sub_24B7D1668();
    sub_24B7F3928();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24B7C9258(_QWORD *a1)
{
  return sub_24B7C8C84(a1);
}

uint64_t sub_24B7C926C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24B7D16E4(v1, a1);
}

uint64_t sub_24B7C9278@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = _s12SequenceRootVMa(0);
  return sub_24B7B2768(v1 + *(int *)(v3 + 20), a1, _s8SequenceVMa);
}

uint64_t sub_24B7C92B4()
{
  _BYTE *v0;

  if (*v0)
    return 0x61746144716573;
  else
    return 0x6F666E49676F6CLL;
}

uint64_t sub_24B7C92E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24B7F1E48(a1, a2);
  *a3 = result;
  return result;
}

void sub_24B7C930C(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_24B7C9318()
{
  sub_24B7D1708();
  return sub_24B7F3A18();
}

uint64_t sub_24B7C9340()
{
  sub_24B7D1708();
  return sub_24B7F3A24();
}

uint64_t sub_24B7C9368(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  _BYTE v13[16];
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  int v19;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0A98);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24B7D1708();
  sub_24B7F3A0C();
  v9 = *((_QWORD *)v3 + 2);
  v10 = *((_QWORD *)v3 + 3);
  v11 = *((_DWORD *)v3 + 14);
  v14 = *v3;
  v15 = v9;
  v16 = v10;
  v17 = v3[2];
  v18 = *((_QWORD *)v3 + 6);
  v19 = v11;
  v13[15] = 0;
  sub_24B7D174C();
  sub_24B7F3928();
  if (!v2)
  {
    _s12SequenceRootVMa(0);
    LOBYTE(v14) = 1;
    _s8SequenceVMa(0);
    sub_24B7B19A0(&qword_2579B0AA8, _s8SequenceVMa, (uint64_t)&unk_24B7F9758);
    sub_24B7F3928();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24B7C94F4@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  __int128 v5;
  uint64_t v6;

  v5 = a1[1];
  *a3 = *a1;
  a3[1] = v5;
  a3[2] = a1[2];
  *(_OWORD *)((char *)a3 + 44) = *(_OWORD *)((char *)a1 + 44);
  v6 = _s12SequenceRootVMa(0);
  return sub_24B7B2F80(a2, (uint64_t)a3 + *(int *)(v6 + 20), _s8SequenceVMa);
}

uint64_t sub_24B7C954C(_QWORD *a1)
{
  return sub_24B7C9368(a1);
}

uint64_t sub_24B7C9560@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = a1(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v2, v4);
}

unint64_t sub_24B7C959C()
{
  uint64_t v0;
  unsigned int *v1;

  v1 = (unsigned int *)(v0 + *(int *)(_s18TemplateUpdateInfoVMa(0) + 20));
  return *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32);
}

uint64_t sub_24B7C95D8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(_s18TemplateUpdateInfoVMa(0) + 24));
}

uint64_t sub_24B7C95F8()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + *(int *)(_s18TemplateUpdateInfoVMa(0) + 28));
}

uint64_t sub_24B7C9618@<X0>(uint64_t a1@<X8>)
{
  return sub_24B7C7570(_s18TemplateUpdateInfoVMa, &qword_2579B0388, a1);
}

uint64_t sub_24B7C962C()
{
  return sub_24B7C9638(_s18TemplateUpdateInfoVMa);
}

uint64_t sub_24B7C9638(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1(0) + 36));
}

uint64_t sub_24B7C9664()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(_s18TemplateUpdateInfoVMa(0) + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24B7C96A0@<X0>(uint64_t a1@<X8>)
{
  return sub_24B7C96B4(_s18TemplateUpdateInfoVMa, &qword_2579B0AB0, a1);
}

uint64_t sub_24B7C96B4@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a1(0);
  return sub_24B7B2F00(v3 + *(int *)(v6 + 44), a3, a2);
}

uint64_t sub_24B7C96FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  int *updated;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t matched;
  _BYTE *v30;
  uint64_t v31;
  uint64_t result;
  _QWORD *v33;
  _BYTE v34[12];
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  _DWORD v53[4];
  unsigned __int8 v54;
  unsigned __int8 v55;
  unsigned __int8 v56;
  unsigned __int8 v57;
  unsigned __int8 v58;
  unsigned __int8 v59;
  unsigned __int8 v60;
  unsigned __int8 v61;
  unsigned __int8 v62;
  unsigned __int8 v63;
  unsigned __int8 v64;
  unsigned __int8 v65;
  int v66;
  _BYTE v67[3080];
  _BYTE v68[5];
  _BYTE v69[3203];
  _BYTE v70[3215];
  _BYTE v71[20];
  int v72;
  _BYTE v73[3080];
  _BYTE v74[7];
  _DWORD v75[803];
  _BYTE v76[3080];
  _BYTE v77[3080];
  _BYTE v78[3215];
  _BYTE v79[3211];

  v1 = MEMORY[0x24BDAC7A8](a1);
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = v1;
  v10 = v9;
  sub_24B7B2E98(v1, (uint64_t)v70, &qword_2579B0440);
  sub_24B7B2E98((uint64_t)v70, (uint64_t)v78, &qword_2579B0440);
  sub_24B7B2E98(v7, (uint64_t)v69, &qword_2579B0438);
  sub_24B7B2E98((uint64_t)v69, (uint64_t)v79, &qword_2579B0438);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0920);
  MEMORY[0x24BDAC7A8](v11);
  v50 = &v34[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0AC0);
  v52 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = &v34[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24B7F3454();
  sub_24B7B2E98(v8, (uint64_t)v75, &qword_2579B0440);
  if (sub_24B7B2694((uint64_t)v75) == 1)
  {
    updated = (int *)_s18TemplateUpdateInfoVMa(0);
    v17 = v10 + updated[5];
    *(_DWORD *)v17 = 0;
    *(_BYTE *)(v17 + 4) = 1;
    *(_BYTE *)(v10 + updated[6]) = 1;
    sub_24B7B2E98(v7, (uint64_t)v53, &qword_2579B0438);
    if (sub_24B7B26B0((uint64_t)v53) == 1)
    {
      *(_DWORD *)(v10 + updated[7]) = 0;
LABEL_7:
      _s18TemplateUpdateInfoVMa(0);
      v21 = v10 + updated[8];
      v22 = sub_24B7F3490();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
      v23 = v10 + updated[9];
      *(_QWORD *)v23 = 0;
      *(_BYTE *)(v23 + 8) = 1;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v10 + updated[11], 1, 1, v13);
      goto LABEL_15;
    }
    v51 = v13;
    v48 = v5;
    v49 = v3;
    *(_DWORD *)(v10 + updated[7]) = v53[0];
    sub_24B7B2E98((uint64_t)v79, (uint64_t)v71, &qword_2579B0438);
LABEL_11:
    v46 = v71[5];
    v47 = v71[4];
    v44 = v71[7];
    v45 = v71[6];
    v42 = v71[9];
    v43 = v71[8];
    v40 = v71[11];
    v41 = v71[10];
    v38 = v71[13];
    v39 = v71[12];
    v35 = v71[15];
    v36 = v71[14];
    v37 = v72;
    memcpy(v77, v73, sizeof(v77));
    v24 = v74;
    goto LABEL_12;
  }
  v51 = v13;
  v18 = v75[2];
  updated = (int *)_s18TemplateUpdateInfoVMa(0);
  v19 = v10 + updated[5];
  *(_DWORD *)v19 = v18;
  *(_BYTE *)(v19 + 4) = 0;
  sub_24B7B2E98((uint64_t)v78, (uint64_t)v53, &qword_2579B0440);
  *(_BYTE *)(v10 + updated[6]) = HIWORD(v53[0]) != 0;
  v20 = v53[2];
  *(_DWORD *)(v10 + updated[7]) = v53[1];
  if (v20)
  {
    sub_24B7B2E98(v7, (uint64_t)v71, &qword_2579B0438);
    if (sub_24B7B26B0((uint64_t)v71) == 1)
    {
      v13 = v51;
      goto LABEL_7;
    }
    v48 = v5;
    v49 = v3;
    goto LABEL_11;
  }
  v48 = v5;
  v49 = v3;
  v46 = v55;
  v47 = v54;
  v44 = v57;
  v45 = v56;
  v42 = v59;
  v43 = v58;
  v40 = v61;
  v41 = v60;
  v38 = v63;
  v39 = v62;
  v35 = v65;
  v36 = v64;
  v37 = v66;
  memcpy(v77, v67, sizeof(v77));
  v24 = v68;
LABEL_12:
  v25 = *(_QWORD *)v24;
  _s18TemplateUpdateInfoVMa(0);
  v26 = v10 + updated[8];
  sub_24B7F3484();
  v27 = sub_24B7F3490();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 0, 1, v27);
  v28 = v10 + updated[9];
  *(_QWORD *)v28 = v25;
  *(_BYTE *)(v28 + 8) = 0;
  matched = _s18MatchNodePlacementVMa(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(matched - 8) + 56))(v15, 1, 1, matched);
  if (v37)
  {
    memcpy(v76, v77, sizeof(v76));
    v30 = v50;
    sub_24B7C06C0((uint64_t)v76, 1, (uint64_t)v50);
    sub_24B7B2F44((uint64_t)v15, &qword_2579B0AC0);
    sub_24B7B2E98((uint64_t)v30, (uint64_t)v15, &qword_2579B0920);
  }
  v31 = v10 + updated[11];
  sub_24B7B2E98((uint64_t)v15, v31, &qword_2579B0AC0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v52 + 56))(v31, 0, 1, v51);
  v5 = v48;
  v3 = v49;
LABEL_15:
  result = _s18TemplateUpdateInfoVMa(0);
  v33 = (_QWORD *)(v10 + updated[10]);
  *v33 = v5;
  v33[1] = v3;
  return result;
}

uint64_t sub_24B7C9C7C(uint64_t a1)
{
  const void *v1;
  _BYTE v3[3215];
  _BYTE v4[3203];
  _BYTE v5[3215];
  _BYTE v6[3203];

  v1 = (const void *)MEMORY[0x24BDAC7A8](a1);
  sub_24B7B273C(v5);
  sub_24B7B2E98((uint64_t)v5, (uint64_t)v3, &qword_2579B0440);
  memcpy(v6, v1, 0xC82uLL);
  sub_24B7B2734((uint64_t)v6);
  sub_24B7B2E98((uint64_t)v6, (uint64_t)v4, &qword_2579B0438);
  return sub_24B7C96FC((uint64_t)v3);
}

uint64_t sub_24B7C9D48(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[3203];
  _BYTE v4[3203];

  v1 = MEMORY[0x24BDAC7A8](a1);
  sub_24B7B2658(v4);
  sub_24B7B2E98((uint64_t)v4, (uint64_t)v3, &qword_2579B0438);
  return sub_24B7C96FC(v1);
}

uint64_t sub_24B7C9DD4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24B7C9E0C + 4 * byte_24B7F90EE[a1]))(0x6D617473656D6974, 0xE900000000000070);
}

uint64_t sub_24B7C9E0C()
{
  return 0x6F43746C75736572;
}

uint64_t sub_24B7C9E28()
{
  return 0x64657461647075;
}

uint64_t sub_24B7C9E40()
{
  return 0x444972657375;
}

uint64_t sub_24B7C9E54()
{
  return 0x797469746E656469;
}

uint64_t sub_24B7C9E74()
{
  return 0x44496567616D69;
}

unint64_t sub_24B7C9E8C()
{
  return 0xD000000000000014;
}

uint64_t sub_24B7C9EA8()
{
  return 0x706F54686374616DLL;
}

uint64_t sub_24B7C9ECC()
{
  unsigned __int8 *v0;

  return sub_24B7C9DD4(*v0);
}

uint64_t sub_24B7C9ED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24B7F1F38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24B7C9EF8()
{
  sub_24B7D17D8();
  return sub_24B7F3A18();
}

uint64_t sub_24B7C9F20()
{
  sub_24B7D17D8();
  return sub_24B7F3A24();
}

uint64_t sub_24B7C9F48(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t updated;
  char v10;
  __int128 v12;
  char v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0AB8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24B7D17D8();
  sub_24B7F3A0C();
  LOBYTE(v12) = 0;
  sub_24B7F3460();
  sub_24B7B19A0(&qword_2579B0778, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  sub_24B7F3928();
  if (!v2)
  {
    updated = _s18TemplateUpdateInfoVMa(0);
    v10 = *(_BYTE *)(v3 + *(int *)(updated + 20) + 4);
    LOBYTE(v12) = 1;
    v13 = v10;
    sub_24B7F38D4();
    LOBYTE(v12) = 2;
    sub_24B7F3904();
    LOBYTE(v12) = 3;
    sub_24B7F3964();
    LOBYTE(v12) = 4;
    sub_24B7F3490();
    sub_24B7B19A0(&qword_2579B0760, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_24B7F38C8();
    LOBYTE(v12) = 5;
    sub_24B7F38EC();
    v12 = *(_OWORD *)(v3 + *(int *)(updated + 40));
    v13 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0888);
    sub_24B7D181C(&qword_2579B0890, &qword_2579B0888);
    sub_24B7F3928();
    LOBYTE(v12) = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0AC0);
    sub_24B7D181C(&qword_2579B0AC8, &qword_2579B0AC0);
    sub_24B7F38C8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24B7CA258(_QWORD *a1)
{
  return sub_24B7C9F48(a1);
}

size_t sub_24B7CA26C(size_t result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  unint64_t v19;

  v8 = result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_29;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(result - v15) / v14);
LABEL_19:
  v18 = *(_QWORD *)(a6(0) - 8);
  if ((v8 & 1) != 0)
  {
    if (v16 < a4
      || (v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80),
          (char *)v16 + v19 >= (char *)a4 + v19 + *(_QWORD *)(v18 + 72) * v11))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v16;
}

size_t sub_24B7CA3E0(size_t a1, int64_t a2, char a3)
{
  size_t *v3;
  size_t result;

  result = sub_24B7CA624(a1, a2, a3, (_QWORD *)*v3, &qword_2579B1640, _s8IdentityVMa);
  *v3 = result;
  return result;
}

unint64_t sub_24B7CA40C()
{
  unint64_t result;

  result = qword_2579B1F20;
  if (!qword_2579B1F20)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FB740, &_s5StateV8UserInfoV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B1F20);
  }
  return result;
}

unint64_t sub_24B7CA450()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2579B0798;
  if (!qword_2579B0798)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579B0790);
    v2 = sub_24B7B19A0(&qword_2579B07A0, _s8IdentityVMa, (uint64_t)&unk_24B7F9230);
    result = MEMORY[0x24BD27D24](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2579B0798);
  }
  return result;
}

char *sub_24B7CA4CC(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_24B7CA514(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

size_t sub_24B7CA4E8(size_t a1, int64_t a2, char a3)
{
  size_t *v3;
  size_t result;

  result = sub_24B7CA624(a1, a2, a3, (_QWORD *)*v3, &qword_2579B1600, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
  *v3 = result;
  return result;
}

char *sub_24B7CA514(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B1620);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 10);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[10 * v8])
      memmove(v12, v13, 10 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 10 * v8);
  }
  swift_release();
  return v10;
}

size_t sub_24B7CA624(size_t result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  unint64_t v19;

  v8 = result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_29;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(result - v15) / v14);
LABEL_19:
  v18 = *(_QWORD *)(a6(0) - 8);
  if ((v8 & 1) != 0)
  {
    if (v16 < a4
      || (v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80),
          (char *)v16 + v19 >= (char *)a4 + v19 + *(_QWORD *)(v18 + 72) * v11))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v16;
}

unint64_t sub_24B7CA798(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_24B7F3784();
  return sub_24B7CA7C8(a1, v2);
}

unint64_t sub_24B7CA7C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_24B7F23AC(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x24BD27004](v9, a1);
      sub_24B7F2378((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_24B7CA88C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t v38;
  int v39;

  v3 = v2;
  v5 = _s5StateV8UserInfoVMa(0);
  v38 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B1630);
  v39 = a2;
  result = sub_24B7F385C();
  v10 = result;
  if (*(_QWORD *)(v8 + 16))
  {
    v35 = v3;
    v11 = 0;
    v12 = *(_QWORD *)(v8 + 64);
    v37 = (_QWORD *)(v8 + 64);
    v13 = 1 << *(_BYTE *)(v8 + 32);
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v15 = v14 & v12;
    v36 = (unint64_t)(v13 + 63) >> 6;
    v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v19 = v18 | (v11 << 6);
      }
      else
      {
        v20 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        result = (uint64_t)v37;
        if (v20 >= v36)
          goto LABEL_34;
        v21 = v37[v20];
        ++v11;
        if (!v21)
        {
          v11 = v20 + 1;
          if (v20 + 1 >= v36)
            goto LABEL_34;
          v21 = v37[v11];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v36)
            {
LABEL_34:
              if ((v39 & 1) == 0)
              {
                result = swift_release();
                v3 = v35;
                goto LABEL_41;
              }
              v33 = 1 << *(_BYTE *)(v8 + 32);
              if (v33 >= 64)
                bzero(v37, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v37 = -1 << v33;
              v3 = v35;
              *(_QWORD *)(v8 + 16) = 0;
              break;
            }
            v21 = v37[v22];
            if (!v21)
            {
              while (1)
              {
                v11 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_43;
                if (v11 >= v36)
                  goto LABEL_34;
                v21 = v37[v11];
                ++v22;
                if (v21)
                  goto LABEL_21;
              }
            }
            v11 = v22;
          }
        }
LABEL_21:
        v15 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v11 << 6);
      }
      v23 = *(unsigned int *)(*(_QWORD *)(v8 + 48) + 4 * v19);
      v24 = *(_QWORD *)(v38 + 72);
      v25 = *(_QWORD *)(v8 + 56) + v24 * v19;
      if ((v39 & 1) != 0)
        sub_24B7B2F80(v25, (uint64_t)v7, _s5StateV8UserInfoVMa);
      else
        sub_24B7B2768(v25, (uint64_t)v7, _s5StateV8UserInfoVMa);
      result = MEMORY[0x24BD27220](*(_QWORD *)(v10 + 40), v23, 4);
      v26 = -1 << *(_BYTE *)(v10 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        v17 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_DWORD *)(*(_QWORD *)(v10 + 48) + 4 * v17) = v23;
      result = sub_24B7B2F80((uint64_t)v7, *(_QWORD *)(v10 + 56) + v24 * v17, _s5StateV8UserInfoVMa);
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v10;
  return result;
}

uint64_t sub_24B7CABC0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B1628);
  result = sub_24B7F385C();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v29 = -1 << v10;
    v30 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v31 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v18 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v20 >= v31)
          goto LABEL_33;
        v21 = v9[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v31)
            goto LABEL_33;
          v21 = v9[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v31)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v30 >= 64)
                  bzero((void *)(v5 + 64), 8 * v31);
                else
                  *v9 = v29;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v21 = v9[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v8 >= v31)
                  goto LABEL_33;
                v21 = v9[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v12 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(unsigned int *)(*(_QWORD *)(v5 + 48) + 4 * v19);
      v28 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v19);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = MEMORY[0x24BD27220](*(_QWORD *)(v7 + 40), v27, 4);
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v25 = v16 == v24;
          if (v16 == v24)
            v16 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_DWORD *)(*(_QWORD *)(v7 + 48) + 4 * v17) = v27;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v28;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

unint64_t sub_24B7CAE70(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _DWORD *v10;
  unint64_t v11;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_24B7F3778();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_DWORD *)(v9 + 4 * v6);
        result = MEMORY[0x24BD27220](*(_QWORD *)(a2 + 40), *v10, 4);
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11)
            goto LABEL_6;
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        v14 = (_DWORD *)(v9 + 4 * v3);
        if (v3 != v6 || v14 >= v10 + 1)
          *v14 = *v10;
        v15 = *(_QWORD *)(a2 + 56);
        v16 = *(_QWORD *)(*(_QWORD *)(_s5StateV8UserInfoVMa(0) - 8) + 72);
        v17 = v16 * v3;
        result = v15 + v16 * v3;
        v18 = v16 * v6;
        v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v17 == v18)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_24B7CB030(uint64_t a1, unsigned int a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_24B7ACCB0(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = v17 + *(_QWORD *)(*(_QWORD *)(_s5StateV8UserInfoVMa(0) - 8) + 72) * v10;
        return sub_24B7CCB20(a1, v18);
      }
      return sub_24B7CB14C(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_24B7CB1D8();
      goto LABEL_7;
    }
    sub_24B7CA88C(v13, a3 & 1);
    v20 = sub_24B7ACCB0(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_24B7CB14C(v10, a2, a1, v16);
    }
  }
  result = sub_24B7F39A0();
  __break(1u);
  return result;
}

uint64_t sub_24B7CB14C(unint64_t a1, int a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_DWORD *)(a4[6] + 4 * a1) = a2;
  v7 = a4[7];
  v8 = _s5StateV8UserInfoVMa(0);
  result = sub_24B7B2F80(a3, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, _s5StateV8UserInfoVMa);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

void *sub_24B7CB1D8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = _s5StateV8UserInfoVMa(0);
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B1630);
  v5 = *v0;
  v6 = sub_24B7F3850();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v26 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v15)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v18 = 4 * v17;
    v19 = *(_DWORD *)(*(_QWORD *)(v5 + 48) + 4 * v17);
    v20 = *(_QWORD *)(v27 + 72) * v17;
    sub_24B7B2768(*(_QWORD *)(v5 + 56) + v20, (uint64_t)v4, _s5StateV8UserInfoVMa);
    *(_DWORD *)(*(_QWORD *)(v7 + 48) + v18) = v19;
    result = (void *)sub_24B7B2F80((uint64_t)v4, *(_QWORD *)(v7 + 56) + v20, _s5StateV8UserInfoVMa);
  }
  v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_24B7CB404()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B1628);
  v2 = *v0;
  v3 = sub_24B7F3850();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 4 * v15;
    v17 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v15);
    v18 = 8 * v15;
    v19 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void (*sub_24B7CB5A8(_QWORD *a1, unsigned int a2))(uint64_t a1)
{
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;

  v4 = malloc(0x50uLL);
  *a1 = v4;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_24B7AF41C(v4);
  v4[9] = sub_24B7CB660((uint64_t)(v4 + 4), a2, isUniquelyReferenced_nonNull_native);
  return sub_24B7CB624;
}

void sub_24B7CB624(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 72))(*(_QWORD *)a1 + 32, 0);
  v2(v1, 0);
  free(v1);
}

void (*sub_24B7CB660(uint64_t a1, unsigned int a2, char a3))(uint64_t a1)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  void (*result)(uint64_t);

  v4 = v3;
  *(_QWORD *)a1 = v3;
  *(_DWORD *)(a1 + 24) = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B07B0);
  v9 = malloc(*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  *(_QWORD *)(a1 + 8) = v9;
  v10 = *v3;
  v12 = sub_24B7ACCB0(a2);
  *(_BYTE *)(a1 + 28) = v11 & 1;
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = *(_QWORD *)(v10 + 24);
    if (v17 >= v15 && (a3 & 1) != 0)
    {
LABEL_7:
      *(_QWORD *)(a1 + 16) = v12;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v18 = *(_QWORD *)(*v4 + 56);
        v19 = _s5StateV8UserInfoVMa(0);
        v20 = *(_QWORD *)(v19 - 8);
        sub_24B7B2F80(v18 + *(_QWORD *)(v20 + 72) * v12, (uint64_t)v9, _s5StateV8UserInfoVMa);
        v21 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v9, v21, 1, v19);
        return sub_24B7CB7D8;
      }
LABEL_11:
      v19 = _s5StateV8UserInfoVMa(0);
      v20 = *(_QWORD *)(v19 - 8);
      v21 = 1;
      goto LABEL_12;
    }
    if (v17 >= v15 && (a3 & 1) == 0)
    {
      sub_24B7CB1D8();
      goto LABEL_7;
    }
    sub_24B7CA88C(v15, a3 & 1);
    v22 = sub_24B7ACCB0(a2);
    if ((v16 & 1) == (v23 & 1))
    {
      v12 = v22;
      *(_QWORD *)(a1 + 16) = v22;
      if ((v16 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t))sub_24B7F39A0();
  __break(1u);
  return result;
}

void sub_24B7CB7D8(uint64_t a1)
{
  void *v1;

  v1 = *(void **)(a1 + 8);
  sub_24B7CB81C((uint64_t)v1, *(_BYTE *)(a1 + 28), *(uint64_t **)a1, *(_QWORD *)(a1 + 16), *(_DWORD *)(a1 + 24));
  sub_24B7B2F44((uint64_t)v1, &qword_2579B07B0);
  free(v1);
}

unint64_t sub_24B7CB81C(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, int a5)
{
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  unint64_t result;
  _QWORD *v20;
  _BYTE v21[12];
  int v22;

  v22 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B07B0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = _s5StateV8UserInfoVMa(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = &v21[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v14);
  v18 = &v21[-v17];
  sub_24B7B2F00(a1, (uint64_t)v11, &qword_2579B07B0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    result = sub_24B7B2F44((uint64_t)v11, &qword_2579B07B0);
    if ((a2 & 1) != 0)
      return sub_24B7CAE70(a4, *a3);
  }
  else
  {
    sub_24B7B2F80((uint64_t)v11, (uint64_t)v18, _s5StateV8UserInfoVMa);
    v20 = (_QWORD *)*a3;
    if ((a2 & 1) != 0)
    {
      return sub_24B7B2F80((uint64_t)v18, v20[7] + *(_QWORD *)(v13 + 72) * a4, _s5StateV8UserInfoVMa);
    }
    else
    {
      sub_24B7B2F80((uint64_t)v18, (uint64_t)v16, _s5StateV8UserInfoVMa);
      return sub_24B7CB14C(a4, v22, (uint64_t)v16, v20);
    }
  }
  return result;
}

_QWORD *sub_24B7CB9B4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0728);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_24B7CBB08((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_24B7B263C();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_24B7CBA98@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  _BYTE v6[32];

  v4 = *a1;
  v3 = a1[1];
  result = sub_24B7B25B8((uint64_t)(a1 + 2), (uint64_t)v6);
  if (v3)
  {
    swift_bridgeObjectRetain();
    result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
    *a2 = v4;
    a2[1] = v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B7CBB08(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

char *sub_24B7CBD04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  _QWORD v30[2];
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[4];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B1608);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_24B7F3A00();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B7B25B8(a2, (uint64_t)v40);
  sub_24B7F39E8();
  sub_24B7F39F4();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v11 = sub_24B7F3820();
  swift_release();
  v35 = *(_QWORD *)(a1 + 16);
  if (v35)
  {
    v12 = *(_QWORD *)(v11 + 16);
    v34 = a1 + 32;
    v30[1] = a1;
    swift_bridgeObjectRetain();
    v13 = 0;
    v14 = 0;
    v31 = (uint64_t *)(v11 + 40);
    v32 = v12;
    v33 = v11;
    do
    {
      v15 = (uint64_t *)(v34 + 16 * v14);
      v16 = *v15;
      v17 = v15[1];
      if (v12)
      {
        v36 = v14;
        v37 = v13;
        v18 = sub_24B7F34A8();
        v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v20 = v31;
        v21 = v12;
        do
        {
          v22 = *(v20 - 1);
          v23 = *v20;
          v40[0] = v16;
          v40[1] = v17;
          v38 = v22;
          v39 = v23;
          v19(v6, 1, 1, v18);
          sub_24B7B22B8();
          swift_bridgeObjectRetain();
          sub_24B7F3748();
          v25 = v24;
          sub_24B7B2F44((uint64_t)v6, &qword_2579B1608);
          swift_bridgeObjectRelease();
          if ((v25 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v14 = v36;
            v13 = v37;
            v12 = v32;
            goto LABEL_4;
          }
          v20 += 2;
          --v21;
        }
        while (v21);
        swift_bridgeObjectRelease();
        v14 = v36;
        v13 = v37;
        v12 = v32;
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      if (!v13)
        v13 = (char *)MEMORY[0x24BEE4AF8];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v13 = sub_24B7B9654(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
      v27 = *((_QWORD *)v13 + 2);
      v26 = *((_QWORD *)v13 + 3);
      if (v27 >= v26 >> 1)
        v13 = sub_24B7B9654((char *)(v26 > 1), v27 + 1, 1, v13);
      *((_QWORD *)v13 + 2) = v27 + 1;
      v28 = &v13[16 * v27];
      *((_QWORD *)v28 + 4) = v16;
      *((_QWORD *)v28 + 5) = v17;
LABEL_4:
      ++v14;
    }
    while (v14 != v35);
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 0;
  }
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_24B7CC054(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x800000024B802BC0 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726556646C697562 && a2 == 0xEC0000006E6F6973 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000024B802BE0 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x49737365636F7270 && a2 == 0xE900000000000044 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x54676E6967676F6CLL && a2 == 0xEB00000000657079 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024B802C00)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v5 = sub_24B7F3994();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_24B7CC300(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1684632949 && a2 == 0xE400000000000000;
  if (v2 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F737365636361 && a2 == 0xE900000000000079 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657463656E6E6F63 && a2 == 0xE900000000000064 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7A69726F68747561 && a2 == 0xEA00000000006465 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000024B802C20 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024B802C40)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_24B7F3994();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_24B7CC57C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
  if (v2 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684632949 && a2 == 0xE400000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x444972657375 && a2 == 0xE600000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x5555656372756F73 && a2 == 0xEA00000000004449)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_24B7F3994();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_24B7CC788(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x444972657375 && a2 == 0xE600000000000000;
  if (v2 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697469746E656469 && a2 == 0xEA00000000007365 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000024B802C60 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024B802C80 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x536B636F4C736B73 && a2 == 0xEC00000065746174)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_24B7F3994();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

unint64_t sub_24B7CC9B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unint64_t result;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B1638);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (unsigned int *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579B1630);
    v7 = (_QWORD *)sub_24B7F3868();
    v8 = (uint64_t)v5 + *(int *)(v2 + 48);
    v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_24B7B2F00(v9, (uint64_t)v5, &qword_2579B1638);
      v11 = *v5;
      result = sub_24B7ACCB0(*v5);
      if ((v13 & 1) != 0)
        break;
      v14 = result;
      *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_DWORD *)(v7[6] + 4 * result) = v11;
      v15 = v7[7];
      v16 = _s5StateV8UserInfoVMa(0);
      result = sub_24B7B2F80(v8, v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v14, _s5StateV8UserInfoVMa);
      v17 = v7[2];
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
        goto LABEL_10;
      v7[2] = v19;
      v9 += v10;
      if (!--v6)
        return (unint64_t)v7;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

uint64_t sub_24B7CCB20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s5StateV8UserInfoVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_24B7CCB64()
{
  unint64_t result;

  result = qword_2579B1F28;
  if (!qword_2579B1F28)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FB6F0, &_s5StateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B1F28);
  }
  return result;
}

unint64_t sub_24B7CCBA8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2579B0808;
  if (!qword_2579B0808)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579B0800);
    v2 = sub_24B7B19A0(&qword_2579B0810, _s6SourceVMa, (uint64_t)&unk_24B7F9208);
    result = MEMORY[0x24BD27D24](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2579B0808);
  }
  return result;
}

unint64_t sub_24B7CCC24()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2579B0820;
  if (!qword_2579B0820)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579B0818);
    v2 = sub_24B7B19A0(&qword_2579B0828, _s5StateV8UserInfoVMa, (uint64_t)&unk_24B7F9258);
    v3[0] = MEMORY[0x24BEE44F8];
    v3[1] = v2;
    result = MEMORY[0x24BD27D24](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2579B0820);
  }
  return result;
}

unint64_t sub_24B7CCCA8()
{
  unint64_t result;

  result = qword_2579B1F30;
  if (!qword_2579B1F30)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FB6A0, &_s13NodePlacementV4NodeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B1F30);
  }
  return result;
}

uint64_t _s13NodePlacementV12TemplateInfoVMa(uint64_t a1)
{
  return sub_24B7D17A4(a1, (uint64_t *)&unk_2579B33C0);
}

unint64_t sub_24B7CCD00()
{
  unint64_t result;

  result = qword_2579B1F38;
  if (!qword_2579B1F38)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FB650, &_s13NodePlacementV12TemplateInfoV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B1F38);
  }
  return result;
}

uint64_t _s13NodePlacementVMa(uint64_t a1)
{
  return sub_24B7D17A4(a1, (uint64_t *)&unk_2579B33B0);
}

BOOL sub_24B7CCD58()
{
  uint64_t v0;

  return **(unsigned __int16 **)(v0 + 16) == 3060;
}

unint64_t sub_24B7CCD6C()
{
  unint64_t result;

  result = qword_2579B1F40;
  if (!qword_2579B1F40)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FB600, &_s13NodePlacementV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B1F40);
  }
  return result;
}

unint64_t sub_24B7CCDB0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_2579B0858;
  if (!qword_2579B0858)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579B0850);
    v2 = sub_24B7CCE14();
    result = MEMORY[0x24BD27D24](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2579B0858);
  }
  return result;
}

unint64_t sub_24B7CCE14()
{
  unint64_t result;

  result = qword_2579B0860;
  if (!qword_2579B0860)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F92A8, &_s13NodePlacementV4NodeVN);
    atomic_store(result, (unint64_t *)&qword_2579B0860);
  }
  return result;
}

uint64_t _s18MatchNodePlacementVMa(uint64_t a1)
{
  return sub_24B7D17A4(a1, (uint64_t *)&unk_2579B33D0);
}

BOOL sub_24B7CCE6C()
{
  uint64_t v0;

  return **(unsigned __int16 **)(v0 + 16) == 3080;
}

unint64_t sub_24B7CCE80()
{
  unint64_t result;

  result = qword_2579B1F48;
  if (!qword_2579B1F48)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FB5B0, &_s18MatchNodePlacementV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B1F48);
  }
  return result;
}

uint64_t _s8SequenceVMa(uint64_t a1)
{
  return sub_24B7D17A4(a1, (uint64_t *)&unk_2579B33E0);
}

uint64_t sub_24B7CCED8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000024B802CA0 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024B802CC0 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024B802CE0 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000024B802D00 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x72506E6F74747562 && a2 == 0xED00006465737365 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024B802D20 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x4C6C616D72656874 && a2 == 0xEC0000006C657665 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x800000024B802D40 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024B802D60 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x800000024B802D80 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024B802DA0 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024B802DC0 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x4F79616C70736964 && a2 == 0xE90000000000006ELL || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x73656372756F73 && a2 == 0xE700000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x7372657375 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else
  {
    v5 = sub_24B7F3994();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 15;
    else
      return 16;
  }
}

uint64_t sub_24B7CD50C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x384D617465685477 && a2 == 0xE900000000000032;
  if (v2 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7885943 && a2 == 0xE300000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7951479 && a2 == 0xE300000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024B802DE0 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7367616C66 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_24B7F3994();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_24B7CD700(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x546F546465646461 && a2 == 0xEF6574616C706D65;
  if (v2 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024B802E00 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024B802E20 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000024B802E40)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_24B7F3994();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_24B7CD8C0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6953746375727473 && a2 == 0xEA0000000000657ALL;
  if (v2 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E756F63 && a2 == 0xE500000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6564644165646F6ELL && a2 == 0xE900000000000064 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F6D655265646F6ELL && a2 == 0xEB00000000646576 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024B802E60 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7365646F6ELL && a2 == 0xE500000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024B802E80 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x437473656772616CLL && a2 == 0xEF61657241706D6FLL || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x646F4E6C61746F74 && a2 == 0xEA00000000007365 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6572416C61746F74 && a2 == 0xE900000000000061 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6574616C706D6574 && a2 == 0xEF7974696C617551 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x7367616C66 && a2 == 0xE500000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6574616C706D6574 && a2 == 0xEC0000006F666E49)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    v6 = sub_24B7F3994();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 13;
    else
      return 14;
  }
}

uint64_t sub_24B7CDEB8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x533253686374616DLL && a2 == 0xED0000746E756F43;
  if (v2 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646F4E686374616DLL && a2 == 0xE900000000000065 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E69686374616DLL && a2 == 0xED000065726F6353 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024B802EA0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_24B7F3994();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_24B7CE0C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;
  uint64_t v26;
  char v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;

  v29 = objc_msgSend(a1, sel_clientID);
  v4 = objc_msgSend(a1, sel_clientInfo);
  if (!v4)
  {
    v32 = 0u;
    v33 = 0u;
LABEL_13:
    sub_24B7B2F44((uint64_t)&v32, &qword_2579B0590);
    v28 = 0;
    v11 = 0;
    goto LABEL_14;
  }
  v5 = v4;
  v6 = sub_24B7F3514();

  *(_QWORD *)&v32 = 0xD000000000000018;
  *((_QWORD *)&v32 + 1) = 0x800000024B803410;
  sub_24B7F379C();
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_24B7CA798((uint64_t)&v30), (v8 & 1) != 0))
  {
    sub_24B7B25B8(*(_QWORD *)(v6 + 56) + 32 * v7, (uint64_t)&v32);
  }
  else
  {
    v32 = 0u;
    v33 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_24B7F2378((uint64_t)&v30);
  if (!*((_QWORD *)&v33 + 1))
    goto LABEL_13;
  v9 = swift_dynamicCast();
  v10 = v30;
  if (!v9)
    v10 = 0;
  v28 = v10;
  if (v9)
    v11 = v31;
  else
    v11 = 0;
LABEL_14:
  v12 = objc_msgSend(a1, sel_clientInfo);
  if (!v12)
  {
    v32 = 0u;
    v33 = 0u;
LABEL_27:
    sub_24B7B2F44((uint64_t)&v32, &qword_2579B0590);
    v18 = 0;
    v19 = 0;
    goto LABEL_28;
  }
  v13 = v12;
  v14 = sub_24B7F3514();

  *(_QWORD *)&v32 = 0xD000000000000013;
  *((_QWORD *)&v32 + 1) = 0x800000024B8033F0;
  sub_24B7F379C();
  if (*(_QWORD *)(v14 + 16) && (v15 = sub_24B7CA798((uint64_t)&v30), (v16 & 1) != 0))
  {
    sub_24B7B25B8(*(_QWORD *)(v14 + 56) + 32 * v15, (uint64_t)&v32);
  }
  else
  {
    v32 = 0u;
    v33 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_24B7F2378((uint64_t)&v30);
  if (!*((_QWORD *)&v33 + 1))
    goto LABEL_27;
  v17 = swift_dynamicCast();
  if (v17)
    v18 = v30;
  else
    v18 = 0;
  if (v17)
    v19 = v31;
  else
    v19 = 0;
LABEL_28:
  v20 = objc_msgSend(a1, sel_clientInfo);
  if (!v20)
  {

    v32 = 0u;
    v33 = 0u;
LABEL_38:
    result = sub_24B7B2F44((uint64_t)&v32, &qword_2579B0590);
    v26 = 0;
    v27 = 1;
    goto LABEL_39;
  }
  v21 = v20;
  v22 = sub_24B7F3514();

  *(_QWORD *)&v32 = 0xD000000000000014;
  *((_QWORD *)&v32 + 1) = 0x800000024B8033D0;
  sub_24B7F379C();
  if (*(_QWORD *)(v22 + 16) && (v23 = sub_24B7CA798((uint64_t)&v30), (v24 & 1) != 0))
  {
    sub_24B7B25B8(*(_QWORD *)(v22 + 56) + 32 * v23, (uint64_t)&v32);
  }
  else
  {
    v32 = 0u;
    v33 = 0u;
  }

  swift_bridgeObjectRelease();
  sub_24B7F2378((uint64_t)&v30);
  if (!*((_QWORD *)&v33 + 1))
    goto LABEL_38;
  result = swift_dynamicCast();
  v26 = v30;
  if (!(_DWORD)result)
    v26 = 0;
  v27 = result ^ 1;
LABEL_39:
  *(_QWORD *)a2 = v29;
  *(_QWORD *)(a2 + 8) = v28;
  *(_QWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = v18;
  *(_QWORD *)(a2 + 32) = v19;
  *(_QWORD *)(a2 + 40) = v26;
  *(_BYTE *)(a2 + 48) = v27;
  return result;
}

unint64_t sub_24B7CE46C()
{
  unint64_t result;

  result = qword_2579B1F50;
  if (!qword_2579B1F50)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FB560, &_s8SequenceV10ClientInfoV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B1F50);
  }
  return result;
}

uint64_t sub_24B7CE4B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t _s8SequenceV10EnrollmentVMa(uint64_t a1)
{
  return sub_24B7D17A4(a1, (uint64_t *)&unk_2579B3400);
}

uint64_t _s8SequenceV5MatchVMa(uint64_t a1)
{
  return sub_24B7D17A4(a1, (uint64_t *)&unk_2579B3410);
}

uint64_t sub_24B7CE50C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24B7CE540(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4449746E65696C63 && a2 == 0xE800000000000000;
  if (v2 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4E737365636F7270 && a2 == 0xEB00000000656D61 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x697463656E6E6F63 && a2 == 0xEC00000044496E6FLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_24B7F3994();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_24B7CE728(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 0xF)
    return 15;
  else
    return a1 - 1;
}

uint64_t _s8SequenceV5EventVMa(uint64_t a1)
{
  return sub_24B7D17A4(a1, (uint64_t *)&unk_2579B33F0);
}

unint64_t sub_24B7CE750()
{
  unint64_t result;

  result = qword_2579B1F58;
  if (!qword_2579B1F58)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FB510, &_s8SequenceV5EventV18AccessoryImageInfoV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B1F58);
  }
  return result;
}

unint64_t sub_24B7CE794()
{
  unint64_t result;

  result = qword_2579B1F60;
  if (!qword_2579B1F60)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FB4C0, &_s8SequenceV5EventV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B1F60);
  }
  return result;
}

unint64_t sub_24B7CE7D8()
{
  unint64_t result;

  result = qword_2579B08B0;
  if (!qword_2579B08B0)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F9410, &_s8SequenceV5EventV9EventTypeON);
    atomic_store(result, (unint64_t *)&qword_2579B08B0);
  }
  return result;
}

unint64_t sub_24B7CE81C()
{
  unint64_t result;

  result = qword_2579B08B8;
  if (!qword_2579B08B8)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F9438, &_s8SequenceV5EventV18AccessoryImageInfoVN);
    atomic_store(result, (unint64_t *)&qword_2579B08B8);
  }
  return result;
}

uint64_t sub_24B7CE860(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

unint64_t sub_24B7CE874()
{
  unint64_t result;

  result = qword_2579B1F68;
  if (!qword_2579B1F68)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FB470, &_s8SequenceV10EnrollmentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B1F68);
  }
  return result;
}

uint64_t _s8SequenceV5MatchV6FilterVMa(uint64_t a1)
{
  return sub_24B7D17A4(a1, (uint64_t *)&unk_2579B3420);
}

unint64_t sub_24B7CE8CC()
{
  unint64_t result;

  result = qword_2579B0480;
  if (!qword_2579B0480)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2579B0480);
  }
  return result;
}

unint64_t sub_24B7CE908()
{
  unint64_t result;

  result = qword_2579B1F70;
  if (!qword_2579B1F70)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FB420, &_s8SequenceV5MatchV6FilterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B1F70);
  }
  return result;
}

uint64_t sub_24B7CE94C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5555656372756F73 && a2 == 0xEA00000000004449 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6C6576656CLL && a2 == 0xE500000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x444972657375 && a2 == 0xE600000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6F436E6F73616572 && a2 == 0xEA00000000006564 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024B802EC0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_24B7F3994();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_24B7CECE8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x444972657375 && a2 == 0xE600000000000000;
  if (v2 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x797469746E656469 && a2 == 0xE800000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000024B802C60)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_24B7F3994();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_24B7CEE30(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x797469746E656469 && a2 == 0xEC00000044495555;
  if (v2 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684632949 && a2 == 0xE400000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x444972657375 && a2 == 0xE600000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x79654B726568746FLL && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_24B7F3994();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_24B7CEFF4@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  char v11;
  unint64_t v12;
  int v13;
  char v14;
  unint64_t v15;
  int v16;
  char v17;
  unint64_t v18;
  int v19;
  char v20;
  unint64_t v21;
  int v22;
  char v23;
  unint64_t v24;
  char v25;
  int v26;
  int v27;
  unint64_t v28;
  char v29;
  int v30;
  int v31;
  unint64_t v32;
  char v33;
  int v34;
  unint64_t v35;
  char v36;
  int v37;
  unint64_t v38;
  int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  int v43;
  int v44;
  unint64_t v45;
  char v46;
  int v47;
  int v48;
  unint64_t v49;
  char v50;
  int v51;
  unint64_t v52;
  char v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  id v59;
  void *v60;
  id v61;
  void *v62;
  char *v63;
  unint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  int v76;
  unint64_t v77;
  int v78;
  _QWORD *v79;
  uint64_t v80;
  char v81;
  char v82;
  char v83;
  char v84;
  char v85;
  char v86;
  char v87;
  unint64_t v88;
  unint64_t v89;
  _BYTE *v90;
  unint64_t v91;
  uint64_t v92;
  int v93;
  int v94;
  unint64_t v95;
  int v96;
  int v97;
  _BYTE *v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  unint64_t v104;
  int v105;
  int v106;
  int v107;
  char *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  unint64_t v112;
  unint64_t v113;
  _QWORD v114[5];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
  MEMORY[0x24BDAC7A8](v4);
  v110 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_24B7F3490();
  v112 = *(_QWORD *)(v109 - 8);
  v6 = MEMORY[0x24BDAC7A8](v109);
  v108 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v111 = (char *)&v92 - v8;
  if (!*(_QWORD *)(a1 + 16))
  {
    v10 = 2;
    goto LABEL_29;
  }
  v9 = sub_24B7ACB9C(0xD000000000000016, 0x800000024B803210);
  v10 = 2;
  if ((v11 & 1) != 0)
  {
    sub_24B7B25B8(*(_QWORD *)(a1 + 56) + 32 * v9, (uint64_t)v114);
    if (swift_dynamicCast())
      v10 = v113;
    else
      v10 = 2;
  }
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_29:
    v13 = 2;
    v16 = 2;
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_17;
LABEL_30:
    v19 = 2;
    v22 = 2;
LABEL_31:
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_32;
    goto LABEL_50;
  }
  v12 = sub_24B7ACB9C(0xD000000000000017, 0x800000024B803230);
  v13 = 2;
  if ((v14 & 1) != 0)
  {
    sub_24B7B25B8(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v114);
    if (swift_dynamicCast())
      v13 = v113;
    else
      v13 = 2;
  }
  if (!*(_QWORD *)(a1 + 16))
  {
    v16 = 2;
    v19 = 2;
    goto LABEL_49;
  }
  v15 = sub_24B7ACB9C(0xD00000000000001ELL, 0x800000024B803250);
  v16 = 2;
  if ((v17 & 1) != 0)
  {
    sub_24B7B25B8(*(_QWORD *)(a1 + 56) + 32 * v15, (uint64_t)v114);
    if (swift_dynamicCast())
      v16 = v113;
    else
      v16 = 2;
  }
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_30;
LABEL_17:
  v18 = sub_24B7ACB9C(0xD000000000000020, 0x800000024B803270);
  v19 = 2;
  if ((v20 & 1) != 0)
  {
    sub_24B7B25B8(*(_QWORD *)(a1 + 56) + 32 * v18, (uint64_t)v114);
    if (swift_dynamicCast())
      v19 = v113;
    else
      v19 = 2;
  }
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_49:
    v22 = 2;
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_32;
LABEL_50:
    v103 = 2;
LABEL_51:
    v101 = 2;
    goto LABEL_52;
  }
  v21 = sub_24B7ACB9C(0xD00000000000001DLL, 0x800000024B8032A0);
  v22 = 2;
  if ((v23 & 1) == 0)
    goto LABEL_31;
  sub_24B7B25B8(*(_QWORD *)(a1 + 56) + 32 * v21, (uint64_t)v114);
  if (swift_dynamicCast())
    v22 = v113;
  else
    v22 = 2;
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_50;
LABEL_32:
  v24 = sub_24B7ACB9C(0xD000000000000016, 0x800000024B8032C0);
  v103 = 2;
  if ((v25 & 1) != 0)
  {
    sub_24B7B25B8(*(_QWORD *)(a1 + 56) + 32 * v24, (uint64_t)v114);
    v26 = swift_dynamicCast();
    v27 = v113;
    if (!v26)
      v27 = 2;
    v103 = v27;
  }
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_51;
  v28 = sub_24B7ACB9C(0xD000000000000025, 0x800000024B8032E0);
  v101 = 2;
  if ((v29 & 1) != 0)
  {
    sub_24B7B25B8(*(_QWORD *)(a1 + 56) + 32 * v28, (uint64_t)v114);
    v30 = swift_dynamicCast();
    v31 = v113;
    if (!v30)
      v31 = 2;
    v101 = v31;
  }
  if (*(_QWORD *)(a1 + 16))
  {
    v32 = sub_24B7ACB9C(0xD00000000000001ALL, 0x800000024B803310);
    if ((v33 & 1) != 0)
    {
      sub_24B7B25B8(*(_QWORD *)(a1 + 56) + 32 * v32, (uint64_t)v114);
      if (swift_dynamicCast())
        v34 = v113;
      else
        v34 = 2;
      v93 = v34;
      if (!*(_QWORD *)(a1 + 16))
        goto LABEL_57;
LABEL_53:
      v35 = sub_24B7ACB9C(0xD000000000000014, 0x800000024B803330);
      if ((v36 & 1) != 0)
      {
        sub_24B7B25B8(*(_QWORD *)(a1 + 56) + 32 * v35, (uint64_t)v114);
        v37 = swift_dynamicCast();
        v38 = v113;
        if (!v37)
          v38 = 0;
        v95 = v38;
        v39 = v37 ^ 1;
        goto LABEL_58;
      }
LABEL_57:
      v95 = 0;
      v39 = 1;
LABEL_58:
      v94 = v39;
      goto LABEL_59;
    }
LABEL_52:
    v93 = 2;
    if (!*(_QWORD *)(a1 + 16))
      goto LABEL_57;
    goto LABEL_53;
  }
  v95 = 0;
  v93 = 2;
  v94 = 1;
LABEL_59:
  v40 = *(_QWORD *)(a1 + 16);
  v98 = a2;
  v99 = v13;
  v100 = v10;
  v106 = v16;
  v96 = v22;
  v97 = v19;
  if (!v40)
  {
    v102 = 2;
LABEL_77:
    v107 = 2;
    goto LABEL_78;
  }
  v41 = sub_24B7ACB9C(0xD00000000000001ALL, 0x800000024B803350);
  v102 = 2;
  if ((v42 & 1) != 0)
  {
    sub_24B7B25B8(*(_QWORD *)(a1 + 56) + 32 * v41, (uint64_t)v114);
    v43 = swift_dynamicCast();
    v44 = v113;
    if (!v43)
      v44 = 2;
    v102 = v44;
  }
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_77;
  v45 = sub_24B7ACB9C(0xD000000000000018, 0x800000024B803370);
  v107 = 2;
  if ((v46 & 1) != 0)
  {
    sub_24B7B25B8(*(_QWORD *)(a1 + 56) + 32 * v45, (uint64_t)v114);
    v47 = swift_dynamicCast();
    v48 = v113;
    if (!v47)
      v48 = 2;
    v107 = v48;
  }
  if (!*(_QWORD *)(a1 + 16))
  {
    v105 = 2;
    goto LABEL_99;
  }
  v49 = sub_24B7ACB9C(0xD00000000000001DLL, 0x800000024B803390);
  if ((v50 & 1) == 0)
  {
LABEL_78:
    v105 = 2;
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_79;
LABEL_99:
    v57 = 0;
LABEL_100:
    v73 = *(_QWORD *)(a1 + 16);
    swift_bridgeObjectRetain();
    if (v73 && (v74 = sub_24B7ACB9C(0xD000000000000010, 0x800000024B8031C0), (v75 & 1) != 0))
    {
      sub_24B7B25B8(*(_QWORD *)(a1 + 56) + 32 * v74, (uint64_t)v114);
      v76 = swift_dynamicCast();
      v77 = v113;
      if (!v76)
        v77 = 0;
      v112 = v77;
      v78 = v76 ^ 1;
    }
    else
    {
      v112 = 0;
      v78 = 1;
    }
    LODWORD(v111) = v78;
    v79 = sub_24B7CB9B4(a1);
    swift_bridgeObjectRelease();
    v114[3] = &_s8SequenceV5MatchV7OptionsVN;
    v80 = swift_allocObject();
    v114[0] = v80;
    *(_BYTE *)(v80 + 16) = v10;
    *(_BYTE *)(v80 + 17) = v13;
    *(_BYTE *)(v80 + 18) = v106;
    v81 = v96;
    v82 = v97;
    *(_BYTE *)(v80 + 19) = v97;
    *(_BYTE *)(v80 + 20) = v81;
    v83 = v102;
    v84 = v103;
    *(_BYTE *)(v80 + 21) = v103;
    v85 = v101;
    *(_BYTE *)(v80 + 22) = v101;
    v86 = v93;
    v87 = v94;
    *(_BYTE *)(v80 + 23) = v93;
    v88 = v95;
    *(_QWORD *)(v80 + 24) = v95;
    *(_BYTE *)(v80 + 32) = v87;
    *(_BYTE *)(v80 + 33) = v83;
    *(_BYTE *)(v80 + 34) = v107;
    *(_BYTE *)(v80 + 35) = v105;
    v89 = v112;
    *(_QWORD *)(v80 + 40) = v57;
    *(_QWORD *)(v80 + 48) = v89;
    *(_BYTE *)(v80 + 56) = (_BYTE)v111;
    *(_QWORD *)(v80 + 64) = 0;
    swift_bridgeObjectRetain();
    v110 = sub_24B7CBD04((uint64_t)v79, (uint64_t)v114);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v114);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v90 = v98;
    *v98 = v100;
    v90[1] = v99;
    v90[2] = v106;
    v90[3] = v82;
    v90[4] = v81;
    v90[5] = v84;
    v90[6] = v85;
    v90[7] = v86;
    *((_QWORD *)v90 + 1) = v88;
    v90[16] = v87;
    v90[17] = v83;
    v90[18] = v107;
    v90[19] = v105;
    v91 = v112;
    *((_QWORD *)v90 + 3) = v57;
    *((_QWORD *)v90 + 4) = v91;
    v90[40] = (_BYTE)v111;
    *((_QWORD *)v90 + 6) = v110;
    return result;
  }
  sub_24B7B25B8(*(_QWORD *)(a1 + 56) + 32 * v49, (uint64_t)v114);
  if (swift_dynamicCast())
    v51 = v113;
  else
    v51 = 2;
  v105 = v51;
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_99;
LABEL_79:
  v52 = sub_24B7ACB9C(0xD00000000000001FLL, 0x800000024B8033B0);
  if ((v53 & 1) == 0)
    goto LABEL_99;
  sub_24B7B25B8(*(_QWORD *)(a1 + 56) + 32 * v52, (uint64_t)v114);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B15F8);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_99;
  v54 = v113;
  if (v113 >> 62)
    goto LABEL_110;
  v55 = *(_QWORD *)((v113 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v55)
  {
LABEL_111:
    swift_bridgeObjectRelease();
    v57 = MEMORY[0x24BEE4AF8];
LABEL_112:
    LOBYTE(v13) = v99;
    LOBYTE(v10) = v100;
    goto LABEL_100;
  }
  while (1)
  {
    v114[0] = MEMORY[0x24BEE4AF8];
    sub_24B7CA4E8(0, v55 & ~(v55 >> 63), 0);
    if (v55 < 0)
      break;
    v56 = 0;
    v57 = v114[0];
    v104 = v54 & 0xC000000000000001;
    v58 = v54;
    while (v55 != v56)
    {
      if (v104)
        v59 = (id)MEMORY[0x24BD27040](v56, v54);
      else
        v59 = *(id *)(v54 + 8 * v56 + 32);
      v60 = v59;
      v61 = objc_msgSend(v59, sel_uuid);
      if (!v61)
        goto LABEL_114;
      v62 = v61;
      v63 = v108;
      sub_24B7F3478();

      v64 = v112;
      v65 = *(void (**)(char *, char *, uint64_t))(v112 + 32);
      v66 = v110;
      v67 = v63;
      v68 = v109;
      v65(v110, v67, v109);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v66, 0, 1, v68);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48))(v66, 1, v68);
      if ((_DWORD)result == 1)
        goto LABEL_115;
      v65(v111, v66, v68);

      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v114[0] = v57;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_24B7CA4E8(0, *(_QWORD *)(v57 + 16) + 1, 1);
        v57 = v114[0];
      }
      v72 = *(_QWORD *)(v57 + 16);
      v71 = *(_QWORD *)(v57 + 24);
      if (v72 >= v71 >> 1)
      {
        sub_24B7CA4E8(v71 > 1, v72 + 1, 1);
        v57 = v114[0];
      }
      ++v56;
      *(_QWORD *)(v57 + 16) = v72 + 1;
      v65((char *)(v57+ ((*(unsigned __int8 *)(v112 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v112 + 80))+ *(_QWORD *)(v112 + 72) * v72), v111, v68);
      v114[0] = v57;
      v54 = v58;
      if (v55 == v56)
      {
        swift_bridgeObjectRelease();
        goto LABEL_112;
      }
    }
    __break(1u);
LABEL_110:
    swift_bridgeObjectRetain();
    v55 = sub_24B7F3844();
    swift_bridgeObjectRelease();
    if (!v55)
      goto LABEL_111;
  }
  __break(1u);
LABEL_114:
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v112 + 56))(v110, 1, 1, v109);
LABEL_115:
  __break(1u);
  return result;
}

unint64_t sub_24B7CFB60()
{
  unint64_t result;

  result = qword_2579B1F78;
  if (!qword_2579B1F78)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FB3D0, &_s8SequenceV5MatchV7OptionsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B1F78);
  }
  return result;
}

unint64_t sub_24B7CFBA4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2579B0900;
  if (!qword_2579B0900)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579B08F8);
    v2 = sub_24B7B19A0(&qword_2579B0760, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    result = MEMORY[0x24BD27D24](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2579B0900);
  }
  return result;
}

uint64_t _s8SequenceV5MatchV6ResultVMa(uint64_t a1)
{
  return sub_24B7D17A4(a1, (uint64_t *)&unk_2579B3430);
}

uint64_t _s8SequenceV5MatchV6ResultV7DetailsVMa(uint64_t a1)
{
  return sub_24B7D17A4(a1, (uint64_t *)&unk_2579B3440);
}

uint64_t sub_24B7CFC48()
{
  uint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_24B7CFC60 + *((int *)qword_24B7CFCB0 + (*(_QWORD *)(v0 + 32) >> 62))))();
}

BOOL sub_24B7CFC70@<W0>(__int16 *a1@<X8>)
{
  uint64_t v1;

  return BYTE6(v1) == (uint64_t)*a1;
}

unint64_t sub_24B7CFCC0()
{
  unint64_t result;

  result = qword_2579B1F80;
  if (!qword_2579B1F80)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FB380, &_s8SequenceV5MatchV6ResultV7DetailsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B1F80);
  }
  return result;
}

unint64_t sub_24B7CFD04()
{
  unint64_t result;

  result = qword_2579B1F88;
  if (!qword_2579B1F88)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FB330, &_s8SequenceV5MatchV6ResultV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B1F88);
  }
  return result;
}

unint64_t sub_24B7CFD48()
{
  unint64_t result;

  result = qword_2579B1F90;
  if (!qword_2579B1F90)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FB2E0, &_s8SequenceV5MatchV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B1F90);
  }
  return result;
}

unint64_t sub_24B7CFD8C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2579B0980;
  if (!qword_2579B0980)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579B0978);
    v2 = sub_24B7B19A0(&qword_2579B0988, _s8SequenceV5MatchV6ResultVMa, (uint64_t)&unk_24B7F9528);
    result = MEMORY[0x24BD27D24](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2579B0980);
  }
  return result;
}

uint64_t sub_24B7CFE08(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F46686374616DLL && a2 == 0xEE006B636F6C6E55;
  if (v2 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F46686374616DLL && a2 == 0xEF7961506173654DLL || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024B802EE0 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000024B802F00 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024B802F20 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x726F46686374616DLL && a2 == 0xEE006D7241657250 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000024B802F40 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x75536E4F706F7473 && a2 == 0xED00007373656363 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x65736143657375 && a2 == 0xE700000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x4279426465746167 && a2 == 0xED00006E6F747475 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x4F65727574706163 && a2 == 0xEB00000000796C6ELL || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024B802F60 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024B802F80 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x79654B726568746FLL && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    v6 = sub_24B7F3994();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 14;
    else
      return 15;
  }
}

uint64_t sub_24B7D0484(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x52686374614D6F6ELL && a2 == 0xED00006E6F736165;
  if (v2 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5374756F6B636F6CLL && a2 == 0xEC00000065746174 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D7241657270 && a2 == 0xE600000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64656B636F6C6E75 && a2 == 0xE800000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024B802FA0 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x69746E6564657263 && a2 == 0xEF64656464416C61 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6749746C75736572 && a2 == 0xED00006465726F6ELL || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x4D686374614D6F6ELL && a2 == 0xEE00726568637461 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024B802FC0 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x79676F6C6F706F74 && a2 == 0xE800000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x44496567616D69 && a2 == 0xE700000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x726573556C746F6CLL && a2 == 0xEB00000000734449 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x79654B726568746FLL && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    v6 = sub_24B7F3994();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

uint64_t sub_24B7D0A78(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
  if (v2 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x797469746E656469 && a2 == 0xEC00000044495555 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736C6961746564 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_24B7F3994();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_24B7D0BF0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7265746C6966 && a2 == 0xE600000000000000;
  if (v2 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73746C75736572 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_24B7F3994();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_24B7D0D3C(uint64_t a1)
{
  unint64_t v2;
  char v3;
  int v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  char v8;
  char v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  ValueMetadata *v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v5 = 0;
    v8 = 2;
    v6 = 1;
    goto LABEL_14;
  }
  v2 = sub_24B7ACB9C(0xD000000000000010, 0x800000024B8031C0);
  if ((v3 & 1) != 0)
  {
    sub_24B7B25B8(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)&v13);
    v4 = swift_dynamicCast();
    if (v4)
      v5 = v12;
    else
      v5 = 0;
    v6 = v4 ^ 1;
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_7;
LABEL_13:
    v8 = 2;
    goto LABEL_14;
  }
  v5 = 0;
  v6 = 1;
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_13;
LABEL_7:
  v7 = sub_24B7ACB9C(0xD000000000000024, 0x800000024B8031E0);
  v8 = 2;
  if ((v9 & 1) != 0)
  {
    sub_24B7B25B8(*(_QWORD *)(a1 + 56) + 32 * v7, (uint64_t)&v13);
    if (swift_dynamicCast())
      v8 = v12;
    else
      v8 = 2;
  }
LABEL_14:
  v10 = sub_24B7CB9B4(a1);
  swift_bridgeObjectRelease();
  v13 = v5;
  v14 = v6;
  v15 = v8;
  v16 = 0;
  v17 = &_s8SequenceV12FingerDetectV7OptionsVN;
  sub_24B7CBD04((uint64_t)v10, (uint64_t)&v13);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v13);
  return v5;
}

unint64_t sub_24B7D0ECC()
{
  unint64_t result;

  result = qword_2579B1F98;
  if (!qword_2579B1F98)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FB290, &_s8SequenceV12FingerDetectV7OptionsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B1F98);
  }
  return result;
}

unint64_t sub_24B7D0F10()
{
  unint64_t result;

  result = qword_2579B1FA0;
  if (!qword_2579B1FA0)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FB240, &_s8SequenceV12FingerDetectV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B1FA0);
  }
  return result;
}

uint64_t sub_24B7D0F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 2)
    return sub_24B7D0F64(a1, a2, a3);
  return a1;
}

uint64_t sub_24B7D0F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_24B7D0F78(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x797469726F697270 && a2 == 0xE800000000000000;
  if (v2 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x800000024B802FE0 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79654B726568746FLL && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_24B7F3994();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

int64_t sub_24B7D10D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int64_t result;
  uint64_t v10;
  int v11;
  _BYTE v12[24];

  v4 = *(_DWORD *)(a1 + 18);
  v5 = *(_DWORD *)(a1 + 32);
  v6 = *(_DWORD *)(a1 + 36);
  *(_OWORD *)v12 = *(_OWORD *)(a1 + 40);
  *(_QWORD *)&v12[16] = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 68);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579B15E8);
  v8 = swift_allocObject();
  result = _swift_stdlib_malloc_size((const void *)v8);
  v10 = result - 32;
  if (result < 32)
    v10 = result - 29;
  *(_QWORD *)(v8 + 16) = 5;
  *(_QWORD *)(v8 + 24) = 2 * (v10 >> 2);
  v11 = *(_DWORD *)(a1 + 2);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)&v12[4];
  *(_DWORD *)(v8 + 48) = *(_DWORD *)&v12[20];
  *(_DWORD *)a2 = v11;
  *(_DWORD *)(a2 + 4) = v4;
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(a1 + 24);
  *(_DWORD *)(a2 + 16) = v5;
  *(_DWORD *)(a2 + 20) = v6;
  *(_QWORD *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 32) = v8;
  return result;
}

unint64_t sub_24B7D11C4()
{
  unint64_t result;

  result = qword_2579B1FA8;
  if (!qword_2579B1FA8)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FB1F0, &_s8SequenceV21ImageProcessingResultV7BuiltinV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B1FA8);
  }
  return result;
}

uint64_t sub_24B7D1208(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3;
    result = MEMORY[0x24BD27D24](MEMORY[0x24BEE12A0], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24B7D125C()
{
  unint64_t result;

  result = qword_2579B1FB0;
  if (!qword_2579B1FB0)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FB1A0, &_s8SequenceV21ImageProcessingResultV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B1FB0);
  }
  return result;
}

unint64_t sub_24B7D12A0()
{
  unint64_t result;

  result = qword_2579B09D8;
  if (!qword_2579B09D8)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F95C8, &_s8SequenceV21ImageProcessingResultV7BuiltinVN);
    atomic_store(result, (unint64_t *)&qword_2579B09D8);
  }
  return result;
}

unint64_t sub_24B7D12E4()
{
  unint64_t result;

  result = qword_2579B1FB8;
  if (!qword_2579B1FB8)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FB150, &_s8SequenceV18TemplateGraphStateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B1FB8);
  }
  return result;
}

uint64_t _s8SequenceV13StatusMessageVMa(uint64_t a1)
{
  return sub_24B7D17A4(a1, (uint64_t *)&unk_2579B3450);
}

unint64_t sub_24B7D133C()
{
  unint64_t result;

  result = qword_2579B1FC0;
  if (!qword_2579B1FC0)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FB100, &_s8SequenceV13StatusMessageV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B1FC0);
  }
  return result;
}

unint64_t sub_24B7D1380()
{
  unint64_t result;

  result = qword_2579B09F8;
  if (!qword_2579B09F8)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F95F0, &_s8SequenceV21ImageProcessingResultVN);
    atomic_store(result, (unint64_t *)&qword_2579B09F8);
  }
  return result;
}

unint64_t sub_24B7D13C4()
{
  unint64_t result;

  result = qword_2579B0A00;
  if (!qword_2579B0A00)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F9618, &_s8SequenceV18TemplateGraphStateVN);
    atomic_store(result, (unint64_t *)&qword_2579B0A00);
  }
  return result;
}

uint64_t _s8SequenceV8FileInfoVMa(uint64_t a1)
{
  return sub_24B7D17A4(a1, (uint64_t *)&unk_2579B3460);
}

unint64_t sub_24B7D141C()
{
  unint64_t result;

  result = qword_2579B1FC8;
  if (!qword_2579B1FC8)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FB0B0, &_s8SequenceV8FileInfoV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B1FC8);
  }
  return result;
}

unint64_t sub_24B7D1460()
{
  unint64_t result;

  result = qword_2579B0A10;
  if (!qword_2579B0A10)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F9708, &_s8SequenceV8FileInfoV8FileTypeON);
    atomic_store(result, (unint64_t *)&qword_2579B0A10);
  }
  return result;
}

unint64_t sub_24B7D14A4()
{
  unint64_t result;

  result = qword_2579B1FD0;
  if (!qword_2579B1FD0)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FB060, &_s8SequenceV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B1FD0);
  }
  return result;
}

unint64_t sub_24B7D14E8()
{
  unint64_t result;

  result = qword_2579B0A38;
  if (!qword_2579B0A38)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F9348, &_s8SequenceV10ClientInfoVN);
    atomic_store(result, (unint64_t *)&qword_2579B0A38);
  }
  return result;
}

unint64_t sub_24B7D152C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2579B0A48;
  if (!qword_2579B0A48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579B0A40);
    v2 = sub_24B7B19A0(&qword_2579B0A50, _s8SequenceV5EventVMa, (uint64_t)&unk_24B7F9460);
    result = MEMORY[0x24BD27D24](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2579B0A48);
  }
  return result;
}

unint64_t sub_24B7D15A8()
{
  unint64_t result;

  result = qword_2579B0A68;
  if (!qword_2579B0A68)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F95A0, &_s8SequenceV12FingerDetectVN);
    atomic_store(result, (unint64_t *)&qword_2579B0A68);
  }
  return result;
}

unint64_t sub_24B7D15EC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2579B0A78;
  if (!qword_2579B0A78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579B0A70);
    v2 = sub_24B7B19A0(&qword_2579B03D0, _s8SequenceV13StatusMessageVMa, (uint64_t)&unk_24B7F9640);
    result = MEMORY[0x24BD27D24](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2579B0A78);
  }
  return result;
}

unint64_t sub_24B7D1668()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2579B0A88;
  if (!qword_2579B0A88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579B0A80);
    v2 = sub_24B7B19A0(&qword_2579B0A90, _s8SequenceV8FileInfoVMa, (uint64_t)&unk_24B7F9730);
    result = MEMORY[0x24BD27D24](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2579B0A88);
  }
  return result;
}

uint64_t sub_24B7D16E4(uint64_t a1, uint64_t a2)
{
  return _s7LogInfoVwcp(a2, a1);
}

uint64_t _s12SequenceRootVMa(uint64_t a1)
{
  return sub_24B7D17A4(a1, (uint64_t *)&unk_2579B3470);
}

unint64_t sub_24B7D1708()
{
  unint64_t result;

  result = qword_2579B1FD8;
  if (!qword_2579B1FD8)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FB010, &_s12SequenceRootV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B1FD8);
  }
  return result;
}

unint64_t sub_24B7D174C()
{
  unint64_t result;

  result = qword_2579B0AA0;
  if (!qword_2579B0AA0)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F91B8, &_s7LogInfoVN);
    atomic_store(result, (unint64_t *)&qword_2579B0AA0);
  }
  return result;
}

uint64_t _s18TemplateUpdateInfoVMa(uint64_t a1)
{
  return sub_24B7D17A4(a1, qword_2579B3480);
}

uint64_t sub_24B7D17A4(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_24B7D17D8()
{
  unint64_t result;

  result = qword_2579B1FE0[0];
  if (!qword_2579B1FE0[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FAFC0, &_s18TemplateUpdateInfoV10CodingKeysON);
    atomic_store(result, qword_2579B1FE0);
  }
  return result;
}

uint64_t sub_24B7D181C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24BD27D24](&unk_24B7F9190, v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24B7D1860()
{
  unint64_t result;

  result = qword_2579B0AD0;
  if (!qword_2579B0AD0)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F9370, &_s8SequenceV5EventV9EventTypeON);
    atomic_store(result, (unint64_t *)&qword_2579B0AD0);
  }
  return result;
}

unint64_t sub_24B7D18A8()
{
  unint64_t result;

  result = qword_2579B0AD8;
  if (!qword_2579B0AD8)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F9668, &_s8SequenceV8FileInfoV8FileTypeON);
    atomic_store(result, (unint64_t *)&qword_2579B0AD8);
  }
  return result;
}

uint64_t sub_24B7D18EC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_24B7D18F4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24B7F370C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24B7D1960(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (*(_DWORD *)(v6 + 80) > 7u || (v7 & 0x100000) != 0 || v8 > 0x18)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v7 + 16) & ~(unint64_t)v7));
    swift_retain();
  }
  else if ((*(unsigned int (**)(uint64_t *, uint64_t, _QWORD))(v6 + 48))(a2, 1, *(_QWORD *)(a3 + 16)))
  {
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_24B7D1A38(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return result;
}

void *sub_24B7D1A94(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84))
      v7 = *(_QWORD *)(v6 + 64);
    else
      v7 = *(_QWORD *)(v6 + 64) + 1;
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_24B7D1B2C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
  return a1;
}

void *sub_24B7D1C0C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84))
      v7 = *(_QWORD *)(v6 + 64);
    else
      v7 = *(_QWORD *)(v6 + 64) + 1;
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_24B7D1CA4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
  return a1;
}

uint64_t sub_24B7D1D84(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  unsigned int v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (!v5)
    v6 = 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v7;
  if (!a2)
    return 0;
  v8 = a2 - v6;
  if (a2 > v6)
  {
    v9 = 8 * v7;
    if (v7 > 3)
      goto LABEL_8;
    v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v7);
      if (v10)
        goto LABEL_15;
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2)
          goto LABEL_24;
LABEL_8:
        v10 = *(unsigned __int8 *)(a1 + v7);
        if (!*(_BYTE *)(a1 + v7))
          goto LABEL_24;
LABEL_15:
        v12 = (v10 - 1) << v9;
        if (v7 > 3)
          v12 = 0;
        if ((_DWORD)v7)
        {
          if (v7 <= 3)
            v13 = v7;
          else
            v13 = 4;
          __asm { BR              X12 }
        }
        return v6 + v12 + 1;
      }
      v10 = *(unsigned __int16 *)(a1 + v7);
      if (*(_WORD *)(a1 + v7))
        goto LABEL_15;
    }
  }
LABEL_24:
  if (v5 < 2)
    return 0;
  v14 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v14 >= 2)
    return v14 - 1;
  else
    return 0;
}

void sub_24B7D1EC4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  size_t v10;
  BOOL v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (v8)
  {
    v10 = *(_QWORD *)(v7 + 64);
  }
  else
  {
    v9 = 0;
    v10 = *(_QWORD *)(v7 + 64) + 1;
  }
  v11 = a3 >= v9;
  v12 = a3 - v9;
  if (v12 != 0 && v11)
  {
    if (v10 > 3)
    {
      v6 = 1u;
      if (v9 < a2)
        goto LABEL_14;
      goto LABEL_21;
    }
    v13 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v13))
    {
      v6 = 4u;
      if (v9 < a2)
      {
LABEL_14:
        v14 = ~v9 + a2;
        if (v10 < 4)
        {
          if ((_DWORD)v10)
          {
            v15 = v14 & ~(-1 << (8 * v10));
            bzero(a1, v10);
            if ((_DWORD)v10 == 3)
            {
              *a1 = v15;
              *((_BYTE *)a1 + 2) = BYTE2(v15);
            }
            else if ((_DWORD)v10 == 2)
            {
              *a1 = v15;
            }
            else
            {
              *(_BYTE *)a1 = v15;
            }
          }
        }
        else
        {
          bzero(a1, v10);
          *(_DWORD *)a1 = v14;
        }
        __asm { BR              X10 }
      }
LABEL_21:
      __asm { BR              X11 }
    }
    if (v13 >= 0x100)
      v6 = 2;
    else
      v6 = v13 > 1;
  }
  if (v9 < a2)
    goto LABEL_14;
  goto LABEL_21;
}

void sub_24B7D206C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_24B7D2074()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

uint64_t _s8NullableVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s8NullableVMn);
}

uint64_t _s7LogInfoVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s7LogInfoVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s7LogInfoVwca(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy60_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 44) = *(_OWORD *)(a2 + 44);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s7LogInfoVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  return a1;
}

uint64_t _s7LogInfoVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 60))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s7LogInfoVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 60) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 60) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s7LogInfoVMa()
{
  return &_s7LogInfoVN;
}

_QWORD *sub_24B7D2304(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_24B7F3490();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
    v9 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = a3[9];
    v14 = (_QWORD *)((char *)a1 + v13);
    v15 = (_QWORD *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_24B7D23D0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_24B7F3490();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24B7D2428(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = sub_24B7F3490();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a3[9];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24B7D24C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = sub_24B7F3490();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v7 = a3[8];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[9];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24B7D2594(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_24B7F3490();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_24B7D2618(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_24B7F3490();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = a3[9];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24B7D26BC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7D26C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_24B7F3490();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_24B7D2754()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7D2760(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_24B7F3490();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32) + 8) = a2;
  return result;
}

uint64_t sub_24B7D27DC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24B7F3490();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *_s6SourceV9AccessoryVwCP(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s6SourceV9AccessoryVwxx()
{
  return swift_bridgeObjectRelease();
}

_QWORD *_s6SourceV9AccessoryVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *_s6SourceV9AccessoryVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s6SourceV9AccessoryVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s6SourceV9AccessoryVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s6SourceV9AccessoryVMa()
{
  return &_s6SourceV9AccessoryVN;
}

uint64_t *sub_24B7D29A0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_24B7F3460();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_24B7F3490();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v13 = a3[7];
    *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
    v14 = (uint64_t *)((char *)a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = a3[8];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    swift_bridgeObjectRetain();
    v12(v18, v19, v11);
  }
  return a1;
}

uint64_t sub_24B7D2A98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v8)(uint64_t, uint64_t);

  v4 = sub_24B7F3460();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_24B7F3490();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v8(v5, v6);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t, uint64_t))v8)(a1 + *(int *)(a2 + 32), v6);
}

uint64_t sub_24B7D2B34(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_24B7F3460();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_24B7F3490();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v12 = a3[7];
  *(_DWORD *)(a1 + a3[6]) = *(_DWORD *)(a2 + a3[6]);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  swift_bridgeObjectRetain();
  v11(v17, v18, v10);
  return a1;
}

uint64_t sub_24B7D2C00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  v6 = sub_24B7F3460();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_24B7F3490();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  *(_DWORD *)(a1 + a3[6]) = *(_DWORD *)(a2 + a3[6]);
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11(a1 + a3[8], a2 + a3[8], v10);
  return a1;
}

uint64_t sub_24B7D2CDC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v6 = sub_24B7F3460();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_24B7F3490();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v12 = a3[7];
  *(_DWORD *)(a1 + a3[6]) = *(_DWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  v11(a1 + a3[8], a2 + a3[8], v10);
  return a1;
}

uint64_t sub_24B7D2D94(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_24B7F3460();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_24B7F3490();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v12 = a3[7];
  *(_DWORD *)(a1 + a3[6]) = *(_DWORD *)(a2 + a3[6]);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v11(a1 + a3[8], a2 + a3[8], v10);
  return a1;
}

uint64_t sub_24B7D2E5C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7D2E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_24B7F3460();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_24B7F3490();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_24B7D2F14()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7D2F20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_24B7F3460();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_24B7F3490();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_24B7D2FC8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_24B7F3460();
  if (v1 <= 0x3F)
  {
    result = sub_24B7F3490();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

char *sub_24B7D3064(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_24B7F3460();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = a3[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    if (v13(&a2[v10], 1, v7))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v9(v11, v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    v16 = a3[6];
    v17 = a3[7];
    v18 = &a1[v16];
    v19 = &a2[v16];
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v18[8] = v19[8];
    v20 = &a1[v17];
    v21 = &a2[v17];
    if (v13(&a2[v17], 1, v7))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v9(v20, v21, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v20, 0, 1, v7);
    }
    v23 = a3[8];
    v24 = &a1[v23];
    v25 = &a2[v23];
    if (v13(&a2[v23], 1, v7))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v9(v24, v25, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v24, 0, 1, v7);
    }
    v27 = a3[10];
    a1[a3[9]] = a2[a3[9]];
    v28 = &a1[v27];
    v29 = &a2[v27];
    if (v13(&a2[v27], 1, v7))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v9(v28, v29, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v28, 0, 1, v7);
    }
    v31 = a3[11];
    v32 = a3[12];
    v33 = &a1[v31];
    v34 = &a2[v31];
    *(_QWORD *)v33 = *(_QWORD *)v34;
    v33[8] = v34[8];
    v35 = &a1[v32];
    v36 = &a2[v32];
    if (v13(&a2[v32], 1, v7))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      v9(v35, v36, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v35, 0, 1, v7);
    }
    v38 = a3[14];
    a1[a3[13]] = a2[a3[13]];
    a1[v38] = a2[v38];
    v39 = a3[16];
    a1[a3[15]] = a2[a3[15]];
    v40 = &a1[v39];
    v41 = &a2[v39];
    if (v13(&a2[v39], 1, v7))
    {
      v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      v9(v40, v41, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v40, 0, 1, v7);
    }
    v43 = a3[18];
    a1[a3[17]] = a2[a3[17]];
    *(_QWORD *)&a1[v43] = *(_QWORD *)&a2[v43];
    *(_QWORD *)&a1[a3[19]] = *(_QWORD *)&a2[a3[19]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_24B7D3408(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_24B7F3460();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = a1 + a2[5];
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v8(v7, 1, v4))
    v6(v7, v4);
  v9 = a1 + a2[7];
  if (!v8(v9, 1, v4))
    v6(v9, v4);
  v10 = a1 + a2[8];
  if (!v8(v10, 1, v4))
    v6(v10, v4);
  v11 = a1 + a2[10];
  if (!v8(v11, 1, v4))
    v6(v11, v4);
  v12 = a1 + a2[12];
  if (!v8(v12, 1, v4))
    v6(v12, v4);
  v13 = a1 + a2[16];
  if (!v8(v13, 1, v4))
    v6(v13, v4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *sub_24B7D3560(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;

  v6 = sub_24B7F3460();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v12(&a2[v9], 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v14 = a3[6];
  v15 = a3[7];
  v16 = &a1[v14];
  v17 = &a2[v14];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  v18 = &a1[v15];
  v19 = &a2[v15];
  if (v12(&a2[v15], 1, v6))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v8(v18, v19, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v18, 0, 1, v6);
  }
  v21 = a3[8];
  v22 = &a1[v21];
  v23 = &a2[v21];
  if (v12(&a2[v21], 1, v6))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v8(v22, v23, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v22, 0, 1, v6);
  }
  v25 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  v26 = &a1[v25];
  v27 = &a2[v25];
  if (v12(&a2[v25], 1, v6))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v8(v26, v27, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v26, 0, 1, v6);
  }
  v29 = a3[11];
  v30 = a3[12];
  v31 = &a1[v29];
  v32 = &a2[v29];
  *(_QWORD *)v31 = *(_QWORD *)v32;
  v31[8] = v32[8];
  v33 = &a1[v30];
  v34 = &a2[v30];
  if (v12(&a2[v30], 1, v6))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    v8(v33, v34, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v33, 0, 1, v6);
  }
  v36 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  a1[v36] = a2[v36];
  v37 = a3[16];
  a1[a3[15]] = a2[a3[15]];
  v38 = &a1[v37];
  v39 = &a2[v37];
  if (v12(&a2[v37], 1, v6))
  {
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    v8(v38, v39, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v38, 0, 1, v6);
  }
  v41 = a3[18];
  a1[a3[17]] = a2[a3[17]];
  *(_QWORD *)&a1[v41] = *(_QWORD *)&a2[v41];
  *(_QWORD *)&a1[a3[19]] = *(_QWORD *)&a2[a3[19]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_24B7D38D8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  int v51;
  int v52;
  uint64_t v53;

  v6 = sub_24B7F3460();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v8(v10, v11, v6);
LABEL_7:
  v16 = a3[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = *(_QWORD *)v18;
  v17[8] = v18[8];
  *(_QWORD *)v17 = v19;
  v20 = a3[7];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = v12(&a1[v20], 1, v6);
  v24 = v12(v22, 1, v6);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v21, v22, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v21, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v21, v6);
LABEL_12:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  v8(v21, v22, v6);
LABEL_13:
  v26 = a3[8];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = v12(&a1[v26], 1, v6);
  v30 = v12(v28, 1, v6);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v27, v28, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v27, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v30)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v27, v6);
LABEL_18:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_19;
  }
  v8(v27, v28, v6);
LABEL_19:
  a1[a3[9]] = a2[a3[9]];
  v32 = a3[10];
  v33 = &a1[v32];
  v34 = &a2[v32];
  v35 = v12(&a1[v32], 1, v6);
  v36 = v12(v34, 1, v6);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v33, v34, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v33, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v36)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v33, v6);
LABEL_24:
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_25;
  }
  v8(v33, v34, v6);
LABEL_25:
  v38 = a3[11];
  v39 = &a1[v38];
  v40 = &a2[v38];
  v41 = *(_QWORD *)v40;
  v39[8] = v40[8];
  *(_QWORD *)v39 = v41;
  v42 = a3[12];
  v43 = &a1[v42];
  v44 = &a2[v42];
  v45 = v12(&a1[v42], 1, v6);
  v46 = v12(v44, 1, v6);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v43, v44, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v43, 0, 1, v6);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v43, v6);
LABEL_30:
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_31;
  }
  v8(v43, v44, v6);
LABEL_31:
  a1[a3[13]] = a2[a3[13]];
  a1[a3[14]] = a2[a3[14]];
  a1[a3[15]] = a2[a3[15]];
  v48 = a3[16];
  v49 = &a1[v48];
  v50 = &a2[v48];
  v51 = v12(&a1[v48], 1, v6);
  v52 = v12(v50, 1, v6);
  if (!v51)
  {
    if (!v52)
    {
      v8(v49, v50, v6);
      goto LABEL_37;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v49, v6);
    goto LABEL_36;
  }
  if (v52)
  {
LABEL_36:
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v49, v50, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v49, 0, 1, v6);
LABEL_37:
  a1[a3[17]] = a2[a3[17]];
  *(_QWORD *)&a1[a3[18]] = *(_QWORD *)&a2[a3[18]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[19]] = *(_QWORD *)&a2[a3[19]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_24B7D3E14(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;

  v6 = sub_24B7F3460();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v12(&a2[v9], 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v14 = a3[6];
  v15 = a3[7];
  v16 = &a1[v14];
  v17 = &a2[v14];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  v18 = &a1[v15];
  v19 = &a2[v15];
  if (v12(&a2[v15], 1, v6))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v8(v18, v19, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v18, 0, 1, v6);
  }
  v21 = a3[8];
  v22 = &a1[v21];
  v23 = &a2[v21];
  if (v12(&a2[v21], 1, v6))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v8(v22, v23, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v22, 0, 1, v6);
  }
  v25 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  v26 = &a1[v25];
  v27 = &a2[v25];
  if (v12(&a2[v25], 1, v6))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v8(v26, v27, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v26, 0, 1, v6);
  }
  v29 = a3[11];
  v30 = a3[12];
  v31 = &a1[v29];
  v32 = &a2[v29];
  *(_QWORD *)v31 = *(_QWORD *)v32;
  v31[8] = v32[8];
  v33 = &a1[v30];
  v34 = &a2[v30];
  if (v12(&a2[v30], 1, v6))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    v8(v33, v34, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v33, 0, 1, v6);
  }
  v36 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  a1[v36] = a2[v36];
  v37 = a3[16];
  a1[a3[15]] = a2[a3[15]];
  v38 = &a1[v37];
  v39 = &a2[v37];
  if (v12(&a2[v37], 1, v6))
  {
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    v8(v38, v39, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v38, 0, 1, v6);
  }
  v41 = a3[18];
  a1[a3[17]] = a2[a3[17]];
  *(_QWORD *)&a1[v41] = *(_QWORD *)&a2[v41];
  *(_QWORD *)&a1[a3[19]] = *(_QWORD *)&a2[a3[19]];
  return a1;
}

char *sub_24B7D4180(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;

  v6 = sub_24B7F3460();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v8(v10, v11, v6);
LABEL_7:
  v16 = a3[6];
  v17 = a3[7];
  v18 = &a1[v16];
  v19 = &a2[v16];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v18[8] = v19[8];
  v20 = &a1[v17];
  v21 = &a2[v17];
  v22 = v12(&a1[v17], 1, v6);
  v23 = v12(v21, 1, v6);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v20, v21, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v20, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v20, v6);
LABEL_12:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  v8(v20, v21, v6);
LABEL_13:
  v25 = a3[8];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = v12(&a1[v25], 1, v6);
  v29 = v12(v27, 1, v6);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v26, v27, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v26, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v26, v6);
LABEL_18:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_19;
  }
  v8(v26, v27, v6);
LABEL_19:
  v31 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = v12(&a1[v31], 1, v6);
  v35 = v12(v33, 1, v6);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v32, v33, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v32, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v32, v6);
LABEL_24:
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_25;
  }
  v8(v32, v33, v6);
LABEL_25:
  v37 = a3[11];
  v38 = a3[12];
  v39 = &a1[v37];
  v40 = &a2[v37];
  *(_QWORD *)v39 = *(_QWORD *)v40;
  v39[8] = v40[8];
  v41 = &a1[v38];
  v42 = &a2[v38];
  v43 = v12(&a1[v38], 1, v6);
  v44 = v12(v42, 1, v6);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v41, v42, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v41, 0, 1, v6);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v41, v6);
LABEL_30:
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_31;
  }
  v8(v41, v42, v6);
LABEL_31:
  v46 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  a1[v46] = a2[v46];
  v47 = a3[16];
  a1[a3[15]] = a2[a3[15]];
  v48 = &a1[v47];
  v49 = &a2[v47];
  v50 = v12(&a1[v47], 1, v6);
  v51 = v12(v49, 1, v6);
  if (!v50)
  {
    if (!v51)
    {
      v8(v48, v49, v6);
      goto LABEL_37;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v48, v6);
    goto LABEL_36;
  }
  if (v51)
  {
LABEL_36:
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v48, v49, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v48, 0, 1, v6);
LABEL_37:
  v53 = a3[18];
  a1[a3[17]] = a2[a3[17]];
  *(_QWORD *)&a1[v53] = *(_QWORD *)&a2[v53];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[19]] = *(_QWORD *)&a2[a3[19]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24B7D4694()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7D46A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;

  v6 = sub_24B7F3460();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0780);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[7];
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(a1 + a3[18]);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  return (v16 + 1);
}

uint64_t sub_24B7D4774()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7D4780(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v8 = sub_24B7F3460();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0780);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[7];
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + a4[18]) = (a2 - 1);
  return result;
}

void sub_24B7D4850()
{
  unint64_t v0;
  unint64_t v1;

  sub_24B7F3460();
  if (v0 <= 0x3F)
  {
    sub_24B7B225C(319, qword_2579B0C58, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_24B7D4924(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    a1[3] = a2[3];
    v8 = *(int *)(a3 + 28);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_24B7F3460();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    *(_WORD *)((char *)v4 + *(int *)(a3 + 32)) = *(_WORD *)((char *)a2 + *(int *)(a3 + 32));
  }
  return v4;
}

uint64_t sub_24B7D4A50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_24B7F3460();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t sub_24B7D4AD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v7 = *(int *)(a3 + 28);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_24B7F3460();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_WORD *)(a1 + *(int *)(a3 + 32)) = *(_WORD *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_24B7D4BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_24B7F3460();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_WORD *)(a1 + *(int *)(a3 + 32)) = *(_WORD *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_24B7D4D30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v6 = *(int *)(a3 + 28);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_24B7F3460();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_WORD *)(a1 + *(int *)(a3 + 32)) = *(_WORD *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_24B7D4E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 28);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_24B7F3460();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(_WORD *)(a1 + *(int *)(a3 + 32)) = *(_WORD *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_24B7D4F5C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7D4F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_24B7D4FE8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7D4FF4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_24B7D506C()
{
  unint64_t v0;

  sub_24B7B225C(319, qword_2579B0C58, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

_QWORD *sub_24B7D5118(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(_DWORD *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = a2[3];
    v5 = *(int *)(a3 + 68);
    v6 = (_DWORD *)(a1 + v5);
    v7 = (_DWORD *)((char *)a2 + v5);
    *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
    v8 = _s13NodePlacementV12TemplateInfoVMa(0);
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v9 + 48);
    swift_bridgeObjectRetain();
    if (v10(v7, 1, v8))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      *v6 = *v7;
      v13 = *(int *)(v8 + 24);
      v14 = (char *)v6 + v13;
      v15 = (char *)v7 + v13;
      v16 = sub_24B7F3490();
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      v17(v14, v15, v16);
      v17((char *)v6 + *(int *)(v8 + 28), (char *)v7 + *(int *)(v8 + 28), v16);
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t sub_24B7D5270(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 68);
  v5 = _s13NodePlacementV12TemplateInfoVMa(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    v7 = v4 + *(int *)(v5 + 24);
    v8 = sub_24B7F3490();
    v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
    v9(v7, v8);
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v4 + *(int *)(v5 + 28), v8);
  }
  return result;
}

uint64_t sub_24B7D532C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(_DWORD *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  v4 = *(int *)(a3 + 68);
  v5 = (_DWORD *)(a1 + v4);
  v6 = (_DWORD *)(a2 + v4);
  v7 = _s13NodePlacementV12TemplateInfoVMa(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  if (v9(v6, 1, v7))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *v5 = *v6;
    v11 = *(int *)(v7 + 24);
    v12 = (char *)v5 + v11;
    v13 = (char *)v6 + v11;
    v14 = sub_24B7F3490();
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    v15(v12, v13, v14);
    v15((char *)v5 + *(int *)(v7 + 28), (char *)v6 + *(int *)(v7 + 28), v14);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_24B7D5458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_WORD *)(a1 + 2) = *(_WORD *)(a2 + 2);
  *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
  *(_WORD *)(a1 + 6) = *(_WORD *)(a2 + 6);
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_WORD *)(a1 + 10) = *(_WORD *)(a2 + 10);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_WORD *)(a1 + 26) = *(_WORD *)(a2 + 26);
  *(_WORD *)(a1 + 28) = *(_WORD *)(a2 + 28);
  *(_WORD *)(a1 + 30) = *(_WORD *)(a2 + 30);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_WORD *)(a1 + 34) = *(_WORD *)(a2 + 34);
  v6 = *(int *)(a3 + 68);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = _s13NodePlacementV12TemplateInfoVMa(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      *(_WORD *)v7 = *(_WORD *)v8;
      *((_WORD *)v7 + 1) = *((_WORD *)v8 + 1);
      v21 = *(int *)(v9 + 24);
      v22 = &v7[v21];
      v23 = &v8[v21];
      v24 = sub_24B7F3490();
      v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 24);
      v25(v22, v23, v24);
      v25(&v7[*(int *)(v9 + 28)], &v8[*(int *)(v9 + 28)], v24);
      return a1;
    }
    sub_24B7B2E38((uint64_t)v7, _s13NodePlacementV12TemplateInfoVMa);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    return a1;
  }
  *(_WORD *)v7 = *(_WORD *)v8;
  *((_WORD *)v7 + 1) = *((_WORD *)v8 + 1);
  v14 = *(int *)(v9 + 24);
  v15 = &v7[v14];
  v16 = &v8[v14];
  v17 = sub_24B7F3490();
  v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  v18(v15, v16, v17);
  v18(&v7[*(int *)(v9 + 28)], &v8[*(int *)(v9 + 28)], v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_24B7D5660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  v4 = *(int *)(a3 + 68);
  v5 = (_DWORD *)(a1 + v4);
  v6 = (_DWORD *)(a2 + v4);
  v7 = _s13NodePlacementV12TemplateInfoVMa(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    *v5 = *v6;
    v10 = *(int *)(v7 + 24);
    v11 = (char *)v5 + v10;
    v12 = (char *)v6 + v10;
    v13 = sub_24B7F3490();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
    v14(v11, v12, v13);
    v14((char *)v5 + *(int *)(v7 + 28), (char *)v6 + *(int *)(v7 + 28), v13);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_24B7D5784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  v6 = *(int *)(a3 + 68);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = _s13NodePlacementV12TemplateInfoVMa(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v21 = *(int *)(v9 + 24);
      v22 = &v7[v21];
      v23 = &v8[v21];
      v24 = sub_24B7F3490();
      v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 40);
      v25(v22, v23, v24);
      v25(&v7[*(int *)(v9 + 28)], &v8[*(int *)(v9 + 28)], v24);
      return a1;
    }
    sub_24B7B2E38((uint64_t)v7, _s13NodePlacementV12TemplateInfoVMa);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    return a1;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  v14 = *(int *)(v9 + 24);
  v15 = &v7[v14];
  v16 = &v8[v14];
  v17 = sub_24B7F3490();
  v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32);
  v18(v15, v16, v17);
  v18(&v7[*(int *)(v9 + 28)], &v8[*(int *)(v9 + 28)], v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_24B7D5934()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7D5940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 68), a2, v8);
  }
}

uint64_t sub_24B7D59C0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7D59CC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 68), a2, a2, v7);
  }
  return result;
}

void sub_24B7D5A44()
{
  unint64_t v0;

  sub_24B7B225C(319, qword_2579B0DA8, (void (*)(uint64_t))_s13NodePlacementV12TemplateInfoVMa);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t __swift_memcpy10_2(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

ValueMetadata *_s13NodePlacementV4NodeVMa()
{
  return &_s13NodePlacementV4NodeVN;
}

char *sub_24B7D5B14(char *a1, char *a2, uint64_t a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (char *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v7 = *(int *)(a3 + 24);
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = sub_24B7F3490();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v11(&v4[*(int *)(a3 + 28)], &a2[*(int *)(a3 + 28)], v10);
  }
  return v4;
}

uint64_t sub_24B7D5BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t);

  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_24B7F3490();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(v4, v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + *(int *)(a2 + 28), v5);
}

char *sub_24B7D5C3C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v6 = *(int *)(a3 + 24);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_24B7F3490();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 28)], &a2[*(int *)(a3 + 28)], v9);
  return a1;
}

char *sub_24B7D5CC8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *(_WORD *)a1 = *(_WORD *)a2;
  *((_WORD *)a1 + 1) = *((_WORD *)a2 + 1);
  v6 = *(int *)(a3 + 24);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_24B7F3490();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 28)], &a2[*(int *)(a3 + 28)], v9);
  return a1;
}

char *sub_24B7D5D5C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v6 = *(int *)(a3 + 24);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_24B7F3490();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 28)], &a2[*(int *)(a3 + 28)], v9);
  return a1;
}

char *sub_24B7D5DE8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v6 = *(int *)(a3 + 24);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_24B7F3490();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 28)], &a2[*(int *)(a3 + 28)], v9);
  return a1;
}

uint64_t sub_24B7D5E74()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7D5E80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_24B7F3490();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v6);
}

uint64_t sub_24B7D5ECC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7D5ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = sub_24B7F3490();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1 + *(int *)(a4 + 24), a2, a2, v7);
}

uint64_t sub_24B7D5F28()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24B7F3490();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_24B7D5FA0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(_DWORD *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  char *v23;
  char *v24;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_WORD *)(a1 + 4) = *((_WORD *)a2 + 2);
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    *(_BYTE *)(a1 + 12) = *((_BYTE *)a2 + 12);
    v5 = *(int *)(a3 + 28);
    v6 = (_QWORD *)(a1 + v5);
    v7 = (uint64_t *)((char *)a2 + v5);
    v8 = _s13NodePlacementVMa(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      *v6 = *v7;
      *((_DWORD *)v6 + 2) = *((_DWORD *)v7 + 2);
      v6[2] = v7[2];
      v6[3] = v7[3];
      *((_DWORD *)v6 + 8) = *((_DWORD *)v7 + 8);
      v12 = *(int *)(v8 + 68);
      v13 = (_DWORD *)((char *)v6 + v12);
      v14 = (_DWORD *)((char *)v7 + v12);
      v15 = _s13NodePlacementV12TemplateInfoVMa(0);
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v16 + 48);
      swift_bridgeObjectRetain();
      if (v17(v14, 1, v15))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        *v13 = *v14;
        v19 = *(int *)(v15 + 24);
        v23 = (char *)v14 + v19;
        v24 = (char *)v13 + v19;
        v20 = sub_24B7F3490();
        v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
        v21(v24, v23, v20);
        v21((char *)v13 + *(int *)(v15 + 28), (char *)v14 + *(int *)(v15 + 28), v20);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t sub_24B7D6190(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  v2 = a1 + *(int *)(a2 + 28);
  v3 = _s13NodePlacementVMa(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    v5 = v2 + *(int *)(v3 + 68);
    v6 = _s13NodePlacementV12TemplateInfoVMa(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6);
    if (!(_DWORD)result)
    {
      v7 = v5 + *(int *)(v6 + 24);
      v8 = sub_24B7F3490();
      v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
      v9(v7, v8);
      return ((uint64_t (*)(uint64_t, uint64_t))v9)(v5 + *(int *)(v6 + 28), v8);
    }
  }
  return result;
}

uint64_t sub_24B7D6274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(_DWORD *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  char *v21;
  char *v22;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v4 = *(int *)(a3 + 28);
  v5 = (_QWORD *)(a1 + v4);
  v6 = (_QWORD *)(a2 + v4);
  v7 = _s13NodePlacementVMa(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    *v5 = *v6;
    *((_DWORD *)v5 + 2) = *((_DWORD *)v6 + 2);
    v5[2] = v6[2];
    v5[3] = v6[3];
    *((_DWORD *)v5 + 8) = *((_DWORD *)v6 + 8);
    v10 = *(int *)(v7 + 68);
    v11 = (_DWORD *)((char *)v5 + v10);
    v12 = (_DWORD *)((char *)v6 + v10);
    v13 = _s13NodePlacementV12TemplateInfoVMa(0);
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    if (v15(v12, 1, v13))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      *v11 = *v12;
      v17 = *(int *)(v13 + 24);
      v21 = (char *)v12 + v17;
      v22 = (char *)v11 + v17;
      v18 = sub_24B7F3490();
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      v19(v22, v21, v18);
      v19((char *)v11 + *(int *)(v13 + 28), (char *)v12 + *(int *)(v13 + 28), v18);
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_24B7D6438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  int v11;
  int v12;
  uint64_t v13;
  _WORD *v14;
  _WORD *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(_WORD *, uint64_t, uint64_t);
  uint64_t v19;
  size_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  int v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  char *v46;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
  v4 = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_DWORD *)(a1 + 8) = v4;
  v5 = *(int *)(a3 + 28);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = _s13NodePlacementVMa(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  v11 = v10(v6, 1, v8);
  v12 = v10(v7, 1, v8);
  if (!v11)
  {
    if (!v12)
    {
      *(_WORD *)v6 = *(_WORD *)v7;
      *(_WORD *)(v6 + 2) = *(_WORD *)(v7 + 2);
      *(_WORD *)(v6 + 4) = *(_WORD *)(v7 + 4);
      *(_WORD *)(v6 + 6) = *(_WORD *)(v7 + 6);
      *(_WORD *)(v6 + 8) = *(_WORD *)(v7 + 8);
      *(_WORD *)(v6 + 10) = *(_WORD *)(v7 + 10);
      *(_QWORD *)(v6 + 16) = *(_QWORD *)(v7 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_WORD *)(v6 + 24) = *(_WORD *)(v7 + 24);
      *(_WORD *)(v6 + 26) = *(_WORD *)(v7 + 26);
      *(_WORD *)(v6 + 28) = *(_WORD *)(v7 + 28);
      *(_WORD *)(v6 + 30) = *(_WORD *)(v7 + 30);
      *(_WORD *)(v6 + 32) = *(_WORD *)(v7 + 32);
      *(_WORD *)(v6 + 34) = *(_WORD *)(v7 + 34);
      v23 = *(int *)(v8 + 68);
      v24 = (char *)(v6 + v23);
      v25 = (char *)(v7 + v23);
      v26 = _s13NodePlacementV12TemplateInfoVMa(0);
      v27 = *(_QWORD *)(v26 - 8);
      v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
      v29 = v28(v24, 1, v26);
      v30 = v28(v25, 1, v26);
      if (v29)
      {
        if (!v30)
        {
          *(_WORD *)v24 = *(_WORD *)v25;
          *((_WORD *)v24 + 1) = *((_WORD *)v25 + 1);
          v31 = *(int *)(v26 + 24);
          v32 = &v24[v31];
          v33 = &v25[v31];
          v34 = sub_24B7F3490();
          v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
          v35(v32, v33, v34);
          v35(&v24[*(int *)(v26 + 28)], &v25[*(int *)(v26 + 28)], v34);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
          return a1;
        }
      }
      else
      {
        if (!v30)
        {
          *(_WORD *)v24 = *(_WORD *)v25;
          *((_WORD *)v24 + 1) = *((_WORD *)v25 + 1);
          v40 = *(int *)(v26 + 24);
          v41 = &v24[v40];
          v42 = &v25[v40];
          v43 = sub_24B7F3490();
          v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 24);
          v44(v41, v42, v43);
          v44(&v24[*(int *)(v26 + 28)], &v25[*(int *)(v26 + 28)], v43);
          return a1;
        }
        sub_24B7B2E38((uint64_t)v24, _s13NodePlacementV12TemplateInfoVMa);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840) - 8) + 64);
      v21 = v24;
      v22 = v25;
      goto LABEL_8;
    }
    sub_24B7B2E38(v6, _s13NodePlacementVMa);
LABEL_7:
    v20 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490) - 8) + 64);
    v21 = (void *)v6;
    v22 = (const void *)v7;
LABEL_8:
    memcpy(v21, v22, v20);
    return a1;
  }
  if (v12)
    goto LABEL_7;
  *(_WORD *)v6 = *(_WORD *)v7;
  *(_WORD *)(v6 + 2) = *(_WORD *)(v7 + 2);
  *(_WORD *)(v6 + 4) = *(_WORD *)(v7 + 4);
  *(_WORD *)(v6 + 6) = *(_WORD *)(v7 + 6);
  *(_WORD *)(v6 + 8) = *(_WORD *)(v7 + 8);
  *(_WORD *)(v6 + 10) = *(_WORD *)(v7 + 10);
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v7 + 16);
  *(_WORD *)(v6 + 24) = *(_WORD *)(v7 + 24);
  *(_WORD *)(v6 + 26) = *(_WORD *)(v7 + 26);
  *(_WORD *)(v6 + 28) = *(_WORD *)(v7 + 28);
  *(_WORD *)(v6 + 30) = *(_WORD *)(v7 + 30);
  *(_WORD *)(v6 + 32) = *(_WORD *)(v7 + 32);
  *(_WORD *)(v6 + 34) = *(_WORD *)(v7 + 34);
  v13 = *(int *)(v8 + 68);
  v14 = (_WORD *)(v6 + v13);
  v15 = (_WORD *)(v7 + v13);
  v16 = _s13NodePlacementV12TemplateInfoVMa(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v17 + 48);
  swift_bridgeObjectRetain();
  if (v18(v15, 1, v16))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    *v14 = *v15;
    v14[1] = v15[1];
    v36 = *(int *)(v16 + 24);
    v45 = (char *)v15 + v36;
    v46 = (char *)v14 + v36;
    v37 = sub_24B7F3490();
    v38 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
    v38(v46, v45, v37);
    v38((char *)v14 + *(int *)(v16 + 28), (char *)v15 + *(int *)(v16 + 28), v37);
    (*(void (**)(_WORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  return a1;
}

uint64_t sub_24B7D682C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  char *v20;
  char *v21;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v4 = *(int *)(a3 + 28);
  v5 = (_QWORD *)(a1 + v4);
  v6 = (_QWORD *)(a2 + v4);
  v7 = _s13NodePlacementVMa(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    *v5 = *v6;
    *((_DWORD *)v5 + 2) = *((_DWORD *)v6 + 2);
    v5[2] = v6[2];
    v5[3] = v6[3];
    *((_DWORD *)v5 + 8) = *((_DWORD *)v6 + 8);
    v10 = *(int *)(v7 + 68);
    v11 = (_DWORD *)((char *)v5 + v10);
    v12 = (_DWORD *)((char *)v6 + v10);
    v13 = _s13NodePlacementV12TemplateInfoVMa(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      *v11 = *v12;
      v16 = *(int *)(v13 + 24);
      v20 = (char *)v12 + v16;
      v21 = (char *)v11 + v16;
      v17 = sub_24B7F3490();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32);
      v18(v21, v20, v17);
      v18((char *)v11 + *(int *)(v13 + 28), (char *)v12 + *(int *)(v13 + 28), v17);
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_24B7D69E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;
  _DWORD *v13;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  char *v44;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = _s13NodePlacementVMa(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      *(_QWORD *)v5 = *(_QWORD *)v6;
      *(_DWORD *)(v5 + 8) = *(_DWORD *)(v6 + 8);
      *(_QWORD *)(v5 + 16) = *(_QWORD *)(v6 + 16);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v5 + 24) = *(_QWORD *)(v6 + 24);
      *(_DWORD *)(v5 + 32) = *(_DWORD *)(v6 + 32);
      v21 = *(int *)(v7 + 68);
      v22 = (char *)(v5 + v21);
      v23 = (char *)(v6 + v21);
      v24 = _s13NodePlacementV12TemplateInfoVMa(0);
      v25 = *(_QWORD *)(v24 - 8);
      v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
      v27 = v26(v22, 1, v24);
      v28 = v26(v23, 1, v24);
      if (v27)
      {
        if (!v28)
        {
          *(_DWORD *)v22 = *(_DWORD *)v23;
          v29 = *(int *)(v24 + 24);
          v30 = &v22[v29];
          v31 = &v23[v29];
          v32 = sub_24B7F3490();
          v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32);
          v33(v30, v31, v32);
          v33(&v22[*(int *)(v24 + 28)], &v23[*(int *)(v24 + 28)], v32);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
          return a1;
        }
      }
      else
      {
        if (!v28)
        {
          *(_DWORD *)v22 = *(_DWORD *)v23;
          v38 = *(int *)(v24 + 24);
          v39 = &v22[v38];
          v40 = &v23[v38];
          v41 = sub_24B7F3490();
          v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 40);
          v42(v39, v40, v41);
          v42(&v22[*(int *)(v24 + 28)], &v23[*(int *)(v24 + 28)], v41);
          return a1;
        }
        sub_24B7B2E38((uint64_t)v22, _s13NodePlacementV12TemplateInfoVMa);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840) - 8) + 64);
      v19 = v22;
      v20 = v23;
      goto LABEL_8;
    }
    sub_24B7B2E38(v5, _s13NodePlacementVMa);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490) - 8) + 64);
    v19 = (void *)v5;
    v20 = (const void *)v6;
LABEL_8:
    memcpy(v19, v20, v18);
    return a1;
  }
  if (v11)
    goto LABEL_7;
  *(_QWORD *)v5 = *(_QWORD *)v6;
  *(_DWORD *)(v5 + 8) = *(_DWORD *)(v6 + 8);
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v6 + 16);
  *(_QWORD *)(v5 + 24) = *(_QWORD *)(v6 + 24);
  *(_DWORD *)(v5 + 32) = *(_DWORD *)(v6 + 32);
  v12 = *(int *)(v7 + 68);
  v13 = (_DWORD *)(v5 + v12);
  v14 = (_DWORD *)(v6 + v12);
  v15 = _s13NodePlacementV12TemplateInfoVMa(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    v34 = *(int *)(v15 + 24);
    v43 = (char *)v14 + v34;
    v44 = (char *)v13 + v34;
    v35 = sub_24B7F3490();
    v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32);
    v36(v44, v43, v35);
    v36((char *)v13 + *(int *)(v15 + 28), (char *)v14 + *(int *)(v15 + 28), v35);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t sub_24B7D6D34()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7D6D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 28);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_24B7D6D84()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7D6D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 28);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

void sub_24B7D6DD8()
{
  unint64_t v0;

  sub_24B7B225C(319, qword_2579B0EE8, (void (*)(uint64_t))_s13NodePlacementVMa);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

_QWORD *sub_24B7D6E78(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _DWORD *v86;
  _DWORD *v87;
  uint64_t v88;
  _QWORD *v89;
  unsigned int (*v90)(_DWORD *, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  int *v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *, char *, uint64_t);
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t matched;
  uint64_t v113;
  uint64_t v114;
  int *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unsigned int (*v121)(char *, uint64_t, uint64_t);
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  void (*v128)(char *, _QWORD, uint64_t, int *);
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  __int128 v133;
  uint64_t v134;
  void (*v135)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v142;
  int *v143;
  char *v144;
  char *v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  void (*v149)(char *, char *, uint64_t);
  uint64_t v150;
  uint64_t v151;
  void (**__dst)(void *, _QWORD, uint64_t, uint64_t);
  void *__dsta;
  unsigned int (*__dstb)(char *, uint64_t);
  char *__dstc;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    v26 = (_QWORD *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_24B7F3460();
    v11 = a1;
    v12 = *(_QWORD *)(v10 - 8);
    v13 = a2;
    v14 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v14(v8, v9, v10);
    v143 = a3;
    v146 = v11;
    v15 = a3[6];
    v16 = (char *)v11 + v15;
    v17 = v13;
    v18 = (char *)v13 + v15;
    v14((char *)v11 + v15, (char *)v13 + v15, v10);
    v19 = (int *)_s5StateVMa(0);
    v20 = v19[5];
    v21 = &v16[v20];
    v22 = &v18[v20];
    v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    v149 = v14;
    __dst = (void (**)(void *, _QWORD, uint64_t, uint64_t))v12;
    if (v23(&v18[v20], 1, v10))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v14(v21, v22, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v21, 0, 1, v10);
    }
    v27 = v143;
    v26 = v146;
    v28 = v19[6];
    v29 = &v16[v28];
    v30 = &v18[v28];
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v29[8] = v30[8];
    v31 = v19[7];
    v32 = &v16[v31];
    v33 = &v18[v31];
    if (v23(&v18[v31], 1, v10))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      v149(v32, v33, v10);
      __dst[7](v32, 0, 1, v10);
    }
    v35 = v19[8];
    v36 = &v16[v35];
    v37 = &v18[v35];
    if (v23(&v18[v35], 1, v10))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      v149(v36, v37, v10);
      __dst[7](v36, 0, 1, v10);
    }
    v16[v19[9]] = v18[v19[9]];
    v39 = v19[10];
    v40 = &v16[v39];
    v41 = &v18[v39];
    if (v23(&v18[v39], 1, v10))
    {
      v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      v149(v40, v41, v10);
      __dst[7](v40, 0, 1, v10);
    }
    v43 = v19[11];
    v44 = &v16[v43];
    v45 = &v18[v43];
    *(_QWORD *)v44 = *(_QWORD *)v45;
    v44[8] = v45[8];
    v46 = v19[12];
    v47 = &v16[v46];
    v48 = &v18[v46];
    if (v23(&v18[v46], 1, v10))
    {
      v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      v149(v47, v48, v10);
      __dst[7](v47, 0, 1, v10);
    }
    v16[v19[13]] = v18[v19[13]];
    v16[v19[14]] = v18[v19[14]];
    v16[v19[15]] = v18[v19[15]];
    v50 = v19[16];
    v51 = &v16[v50];
    v52 = &v18[v50];
    if (v23(&v18[v50], 1, v10))
    {
      v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      v54 = v149;
    }
    else
    {
      v55 = v52;
      v54 = v149;
      v149(v51, v55, v10);
      __dst[7](v51, 0, 1, v10);
    }
    v16[v19[17]] = v18[v19[17]];
    *(_QWORD *)&v16[v19[18]] = *(_QWORD *)&v18[v19[18]];
    *(_QWORD *)&v16[v19[19]] = *(_QWORD *)&v18[v19[19]];
    v56 = v143[7];
    v57 = (uint64_t)v146 + v56;
    v58 = (uint64_t)v17 + v56;
    v59 = *(_QWORD *)((char *)v17 + v56 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v59 == 1)
    {
      v60 = *(_OWORD *)(v58 + 16);
      *(_OWORD *)v57 = *(_OWORD *)v58;
      *(_OWORD *)(v57 + 16) = v60;
      *(_OWORD *)(v57 + 32) = *(_OWORD *)(v58 + 32);
      *(_BYTE *)(v57 + 48) = *(_BYTE *)(v58 + 48);
    }
    else
    {
      *(_OWORD *)v57 = *(_OWORD *)v58;
      v61 = *(_QWORD *)(v58 + 24);
      v62 = *(_QWORD *)(v58 + 32);
      *(_QWORD *)(v57 + 16) = v59;
      *(_QWORD *)(v57 + 24) = v61;
      v63 = *(_QWORD *)(v58 + 40);
      *(_QWORD *)(v57 + 32) = v62;
      *(_QWORD *)(v57 + 40) = v63;
      *(_BYTE *)(v57 + 48) = *(_BYTE *)(v58 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v64 = v143[9];
    *((_BYTE *)v146 + v143[8]) = *((_BYTE *)v17 + v143[8]);
    v65 = (char *)v146 + v64;
    v66 = (char *)v17 + v64;
    if (v23((char *)v17 + v64, 1, v10))
    {
      v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
      memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    else
    {
      v54(v65, v66, v10);
      __dst[7](v65, 0, 1, v10);
    }
    v68 = v143[10];
    v69 = (uint64_t)v146 + v68;
    v70 = (uint64_t)v17 + v68;
    v71 = *(_QWORD *)(v70 + 16);
    if (v71 == 1)
    {
      v72 = *(_OWORD *)(v70 + 16);
      *(_OWORD *)v69 = *(_OWORD *)v70;
      *(_OWORD *)(v69 + 16) = v72;
      *(_OWORD *)(v69 + 32) = *(_OWORD *)(v70 + 32);
      *(_BYTE *)(v69 + 48) = *(_BYTE *)(v70 + 48);
    }
    else
    {
      *(_OWORD *)v69 = *(_OWORD *)v70;
      v73 = *(_QWORD *)(v70 + 24);
      v74 = *(_QWORD *)(v70 + 32);
      *(_QWORD *)(v69 + 16) = v71;
      *(_QWORD *)(v69 + 24) = v73;
      v75 = *(_QWORD *)(v70 + 40);
      *(_QWORD *)(v69 + 32) = v74;
      *(_QWORD *)(v69 + 40) = v75;
      *(_BYTE *)(v69 + 48) = *(_BYTE *)(v70 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v76 = v143[11];
    v77 = (char *)v146 + v76;
    v78 = (char *)v17 + v76;
    if (v23((char *)v17 + v76, 1, v10))
    {
      v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
      memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    }
    else
    {
      v54(v77, v78, v10);
      __dst[7](v77, 0, 1, v10);
    }
    v80 = v143[12];
    v81 = (char *)v146 + v80;
    v82 = (char *)v17 + v80;
    if (v23((char *)v17 + v80, 1, v10))
    {
      v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
      memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    }
    else
    {
      v54(v81, v82, v10);
      __dst[7](v81, 0, 1, v10);
    }
    v84 = v143[14];
    *(_QWORD *)((char *)v146 + v143[13]) = *(_QWORD *)((char *)v17 + v143[13]);
    *(_QWORD *)((char *)v146 + v84) = *(_QWORD *)((char *)v17 + v84);
    v85 = v143[16];
    *(_QWORD *)((char *)v146 + v143[15]) = *(_QWORD *)((char *)v17 + v143[15]);
    v86 = (_DWORD *)((char *)v146 + v85);
    v87 = (_DWORD *)((char *)v17 + v85);
    v88 = _s8SequenceV10EnrollmentVMa(0);
    v89 = *(_QWORD **)(v88 - 8);
    v90 = (unsigned int (*)(_DWORD *, uint64_t, uint64_t))v89[6];
    swift_bridgeObjectRetain();
    if (v90(v87, 1, v88))
    {
      v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04A8);
      memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
    }
    else
    {
      __dsta = v89;
      *v86 = *v87;
      v92 = *(int *)(v88 + 20);
      v93 = (char *)v86 + v92;
      v94 = (char *)v87 + v92;
      v95 = (int *)_s8IdentityVMa(0);
      v147 = *((_QWORD *)v95 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v147 + 48))(v94, 1, v95))
      {
        v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B08C0);
        memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
      }
      else
      {
        v149(v93, v94, v10);
        v97 = v95[5];
        v142 = &v94[v97];
        v144 = &v93[v97];
        v150 = sub_24B7F3490();
        v98 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v150 - 8) + 16);
        v98(v144, v142, v150);
        *(_DWORD *)&v93[v95[6]] = *(_DWORD *)&v94[v95[6]];
        v99 = v95[7];
        v100 = &v93[v99];
        v101 = &v94[v99];
        v102 = *((_QWORD *)v101 + 1);
        *(_QWORD *)v100 = *(_QWORD *)v101;
        *((_QWORD *)v100 + 1) = v102;
        v103 = v95[8];
        v145 = &v93[v103];
        v104 = &v94[v103];
        swift_bridgeObjectRetain();
        v98(v145, v104, v150);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v147 + 56))(v93, 0, 1, v95);
      }
      v105 = *(int *)(v88 + 24);
      v106 = (char *)v86 + v105;
      v107 = (char *)v87 + v105;
      v108 = *((_QWORD *)v107 + 1);
      if (v108 == 1)
      {
        *(_OWORD *)v106 = *(_OWORD *)v107;
      }
      else
      {
        *(_QWORD *)v106 = *(_QWORD *)v107;
        *((_QWORD *)v106 + 1) = v108;
        swift_bridgeObjectRetain();
      }
      (*((void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))__dsta + 7))(v86, 0, 1, v88);
    }
    v109 = v27[17];
    v110 = (char *)v26 + v109;
    v111 = (char *)v17 + v109;
    matched = _s8SequenceV5MatchVMa(0);
    v113 = *(_QWORD *)(matched - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48))(v111, 1, matched))
    {
      v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04B0);
      memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
    }
    else
    {
      v115 = (int *)_s8SequenceV5MatchV6FilterVMa(0);
      v116 = *((_QWORD *)v115 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v116 + 48))(v111, 1, v115))
      {
        v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0958);
        memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
      }
      else
      {
        v118 = sub_24B7F3490();
        v119 = *(_QWORD *)(v118 - 8);
        v148 = v118;
        __dstb = *(unsigned int (**)(char *, uint64_t))(v119 + 48);
        v151 = v116;
        if (__dstb(v111, 1))
        {
          v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
          memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v110, v111, v148);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v110, 0, 1, v148);
        }
        v121 = (unsigned int (*)(char *, uint64_t, uint64_t))__dstb;
        v122 = v115[5];
        __dstc = &v110[v122];
        v123 = &v111[v122];
        if (v121(&v111[v122], 1, v148))
        {
          v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
          memcpy(__dstc, v123, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *))(v119 + 16))(__dstc, v123);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v119 + 56))(__dstc, 0, 1, v148);
        }
        v125 = v115[6];
        v126 = &v110[v125];
        v127 = &v111[v125];
        *(_DWORD *)v126 = *(_DWORD *)v127;
        v126[4] = v127[4];
        *(_QWORD *)&v110[v115[7]] = *(_QWORD *)&v111[v115[7]];
        v128 = *(void (**)(char *, _QWORD, uint64_t, int *))(v151 + 56);
        swift_bridgeObjectRetain();
        v128(v110, 0, 1, v115);
      }
      v129 = *(int *)(matched + 20);
      v130 = &v110[v129];
      v131 = &v111[v129];
      v132 = *((_QWORD *)v131 + 3);
      if (v132 == 1)
      {
        v133 = *((_OWORD *)v131 + 1);
        *(_OWORD *)v130 = *(_OWORD *)v131;
        *((_OWORD *)v130 + 1) = v133;
        *((_OWORD *)v130 + 2) = *((_OWORD *)v131 + 2);
        *((_QWORD *)v130 + 6) = *((_QWORD *)v131 + 6);
      }
      else
      {
        *(_QWORD *)v130 = *(_QWORD *)v131;
        *((_QWORD *)v130 + 1) = *((_QWORD *)v131 + 1);
        *((_DWORD *)v130 + 4) = *((_DWORD *)v131 + 4);
        v134 = *((_QWORD *)v131 + 4);
        *((_QWORD *)v130 + 3) = v132;
        *((_QWORD *)v130 + 4) = v134;
        v130[40] = v131[40];
        *((_QWORD *)v130 + 6) = *((_QWORD *)v131 + 6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      *(_QWORD *)&v110[*(int *)(matched + 24)] = *(_QWORD *)&v111[*(int *)(matched + 24)];
      v135 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v113 + 56);
      swift_bridgeObjectRetain();
      v135(v110, 0, 1, matched);
    }
    v136 = v27[18];
    v137 = (uint64_t)v26 + v136;
    v138 = (uint64_t)v17 + v136;
    v139 = *(_QWORD *)(v138 + 16);
    if (v139 == 1 || v139 == 2)
    {
      *(_OWORD *)v137 = *(_OWORD *)v138;
      *(_QWORD *)(v137 + 16) = *(_QWORD *)(v138 + 16);
    }
    else
    {
      *(_QWORD *)v137 = *(_QWORD *)v138;
      *(_WORD *)(v137 + 8) = *(_WORD *)(v138 + 8);
      *(_QWORD *)(v137 + 16) = v139;
      swift_bridgeObjectRetain();
    }
    v140 = v27[20];
    *(_QWORD *)((char *)v26 + v27[19]) = *(_QWORD *)((char *)v17 + v27[19]);
    *(_QWORD *)((char *)v26 + v140) = *(_QWORD *)((char *)v17 + v140);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v26;
}

uint64_t sub_24B7D79B0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  int *v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t matched;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;

  v4 = a1 + a2[5];
  v5 = sub_24B7F3460();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  v8 = a1 + a2[6];
  v7(v8, v5);
  v9 = (int *)_s5StateVMa(0);
  v10 = v8 + v9[5];
  v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v11(v10, 1, v5))
    v7(v10, v5);
  v12 = v8 + v9[7];
  if (!v11(v12, 1, v5))
    v7(v12, v5);
  v13 = v8 + v9[8];
  if (!v11(v13, 1, v5))
    v7(v13, v5);
  v14 = v8 + v9[10];
  if (!v11(v14, 1, v5))
    v7(v14, v5);
  v15 = v8 + v9[12];
  if (!v11(v15, 1, v5))
    v7(v15, v5);
  v16 = v8 + v9[16];
  if (!v11(v16, 1, v5))
    v7(v16, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[7] + 16) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v17 = a1 + a2[9];
  if (!v11(v17, 1, v5))
    v7(v17, v5);
  if (*(_QWORD *)(a1 + a2[10] + 16) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v18 = a1 + a2[11];
  if (!v11(v18, 1, v5))
    v7(v18, v5);
  v19 = a1 + a2[12];
  if (!v11(v19, 1, v5))
    v7(v19, v5);
  swift_bridgeObjectRelease();
  v20 = a1 + a2[16];
  v21 = _s8SequenceV10EnrollmentVMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v20, 1, v21))
  {
    v22 = v20 + *(int *)(v21 + 20);
    v23 = _s8IdentityVMa(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v22, 1, v23))
    {
      v7(v22, v5);
      v24 = v22 + *(int *)(v23 + 20);
      v25 = sub_24B7F3490();
      v26 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8);
      v26(v24, v25);
      swift_bridgeObjectRelease();
      v26(v22 + *(int *)(v23 + 32), v25);
    }
    if (*(_QWORD *)(v20 + *(int *)(v21 + 24) + 8) != 1)
      swift_bridgeObjectRelease();
  }
  v27 = a1 + a2[17];
  matched = _s8SequenceV5MatchVMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(matched - 8) + 48))(v27, 1, matched))
  {
    v29 = _s8SequenceV5MatchV6FilterVMa(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v27, 1, v29))
    {
      v30 = sub_24B7F3490();
      v31 = *(_QWORD *)(v30 - 8);
      v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48);
      if (!v32(v27, 1, v30))
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v27, v30);
      v33 = v27 + *(int *)(v29 + 20);
      if (!v32(v33, 1, v30))
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v33, v30);
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(v27 + *(int *)(matched + 20) + 24) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  if ((unint64_t)(*(_QWORD *)(a1 + a2[18] + 16) - 1) >= 2)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_24B7D7DF8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  int *v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _DWORD *v81;
  _DWORD *v82;
  uint64_t v83;
  _QWORD *v84;
  unsigned int (*v85)(_DWORD *, uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  int *v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t matched;
  uint64_t v108;
  uint64_t v109;
  int *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  void (*v122)(char *, _QWORD, uint64_t, int *);
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  __int128 v127;
  uint64_t v128;
  void (*v129)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v136;
  char *v137;
  char *v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  unsigned int (*v142)(char *, uint64_t, uint64_t);
  void (*v143)(char *, char *, uint64_t);
  uint64_t v144;
  uint64_t v145;
  unsigned int (*__dst)(char *, uint64_t, uint64_t);
  void *__dsta;
  char *__dstb;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_24B7F3460();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v11(v7, v8, v9);
  v12 = a3;
  v13 = a3[6];
  v140 = a1;
  v14 = (char *)a1 + v13;
  v15 = a2;
  v16 = (char *)a2 + v13;
  v11(v14, (char *)a2 + v13, v9);
  v17 = (int *)_s5StateVMa(0);
  v18 = v17[5];
  v19 = &v14[v18];
  v20 = &v16[v18];
  __dst = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v143 = v11;
  if (__dst(&v16[v18], 1, v9))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v11(v19, v20, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
  }
  v22 = v140;
  v23 = v17[6];
  v24 = &v14[v23];
  v25 = &v16[v23];
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v24[8] = v25[8];
  v26 = v17[7];
  v27 = &v14[v26];
  v28 = &v16[v26];
  if (__dst(&v16[v26], 1, v9))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v143(v27, v28, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v9);
  }
  v30 = v17[8];
  v31 = &v14[v30];
  v32 = &v16[v30];
  if (__dst(&v16[v30], 1, v9))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    v143(v31, v32, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v31, 0, 1, v9);
  }
  v14[v17[9]] = v16[v17[9]];
  v34 = v17[10];
  v35 = &v14[v34];
  v36 = &v16[v34];
  if (__dst(&v16[v34], 1, v9))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    v143(v35, v36, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
  }
  v38 = v17[11];
  v39 = &v14[v38];
  v40 = &v16[v38];
  *(_QWORD *)v39 = *(_QWORD *)v40;
  v39[8] = v40[8];
  v41 = v17[12];
  v42 = &v14[v41];
  v43 = &v16[v41];
  if (__dst(&v16[v41], 1, v9))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    v143(v42, v43, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v42, 0, 1, v9);
  }
  v14[v17[13]] = v16[v17[13]];
  v14[v17[14]] = v16[v17[14]];
  v14[v17[15]] = v16[v17[15]];
  v45 = v17[16];
  v46 = &v14[v45];
  v47 = &v16[v45];
  if (__dst(&v16[v45], 1, v9))
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    v49 = v143;
  }
  else
  {
    v50 = v47;
    v49 = v143;
    v143(v46, v50, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v46, 0, 1, v9);
  }
  v14[v17[17]] = v16[v17[17]];
  *(_QWORD *)&v14[v17[18]] = *(_QWORD *)&v16[v17[18]];
  *(_QWORD *)&v14[v17[19]] = *(_QWORD *)&v16[v17[19]];
  v51 = v12[7];
  v52 = (char *)v140 + v51;
  v53 = (char *)v15 + v51;
  v54 = *(_QWORD *)((char *)v15 + v51 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v54 == 1)
  {
    v55 = *((_OWORD *)v53 + 1);
    *(_OWORD *)v52 = *(_OWORD *)v53;
    *((_OWORD *)v52 + 1) = v55;
    *((_OWORD *)v52 + 2) = *((_OWORD *)v53 + 2);
    v52[48] = v53[48];
  }
  else
  {
    *(_OWORD *)v52 = *(_OWORD *)v53;
    v56 = *((_QWORD *)v53 + 3);
    v57 = *((_QWORD *)v53 + 4);
    *((_QWORD *)v52 + 2) = v54;
    *((_QWORD *)v52 + 3) = v56;
    v58 = *((_QWORD *)v53 + 5);
    *((_QWORD *)v52 + 4) = v57;
    *((_QWORD *)v52 + 5) = v58;
    v52[48] = v53[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v59 = v12[9];
  *((_BYTE *)v140 + v12[8]) = *((_BYTE *)v15 + v12[8]);
  v60 = (char *)v140 + v59;
  v61 = (char *)v15 + v59;
  if (__dst((char *)v15 + v59, 1, v9))
  {
    v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
  }
  else
  {
    v49(v60, v61, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v60, 0, 1, v9);
  }
  v63 = v12[10];
  v64 = (char *)v140 + v63;
  v65 = (char *)v15 + v63;
  v66 = *((_QWORD *)v65 + 2);
  if (v66 == 1)
  {
    v67 = *((_OWORD *)v65 + 1);
    *(_OWORD *)v64 = *(_OWORD *)v65;
    *((_OWORD *)v64 + 1) = v67;
    *((_OWORD *)v64 + 2) = *((_OWORD *)v65 + 2);
    v64[48] = v65[48];
  }
  else
  {
    *(_OWORD *)v64 = *(_OWORD *)v65;
    v68 = *((_QWORD *)v65 + 3);
    v69 = *((_QWORD *)v65 + 4);
    *((_QWORD *)v64 + 2) = v66;
    *((_QWORD *)v64 + 3) = v68;
    v70 = *((_QWORD *)v65 + 5);
    *((_QWORD *)v64 + 4) = v69;
    *((_QWORD *)v64 + 5) = v70;
    v64[48] = v65[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v71 = v12[11];
  v72 = (char *)v140 + v71;
  v73 = (char *)v15 + v71;
  if (__dst((char *)v15 + v71, 1, v9))
  {
    v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
  }
  else
  {
    v49(v72, v73, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v72, 0, 1, v9);
  }
  v75 = v12[12];
  v76 = (char *)v140 + v75;
  v77 = (char *)v15 + v75;
  if (__dst((char *)v15 + v75, 1, v9))
  {
    v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
  }
  else
  {
    v49(v76, v77, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v76, 0, 1, v9);
  }
  v79 = v12[14];
  *(_QWORD *)((char *)v140 + v12[13]) = *(_QWORD *)((char *)v15 + v12[13]);
  *(_QWORD *)((char *)v140 + v79) = *(_QWORD *)((char *)v15 + v79);
  v80 = v12[16];
  *(_QWORD *)((char *)v140 + v12[15]) = *(_QWORD *)((char *)v15 + v12[15]);
  v81 = (_DWORD *)((char *)v140 + v80);
  v82 = (_DWORD *)((char *)v15 + v80);
  v83 = _s8SequenceV10EnrollmentVMa(0);
  v84 = *(_QWORD **)(v83 - 8);
  v85 = (unsigned int (*)(_DWORD *, uint64_t, uint64_t))v84[6];
  swift_bridgeObjectRetain();
  if (v85(v82, 1, v83))
  {
    v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04A8);
    memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
  }
  else
  {
    __dsta = v84;
    *v81 = *v82;
    v87 = *(int *)(v83 + 20);
    v88 = (char *)v81 + v87;
    v89 = (char *)v82 + v87;
    v90 = (int *)_s8IdentityVMa(0);
    v141 = *((_QWORD *)v90 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v141 + 48))(v89, 1, v90))
    {
      v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B08C0);
      memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
    }
    else
    {
      v143(v88, v89, v9);
      v92 = v90[5];
      v136 = &v89[v92];
      v137 = &v88[v92];
      v144 = sub_24B7F3490();
      v93 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v144 - 8) + 16);
      v93(v137, v136, v144);
      *(_DWORD *)&v88[v90[6]] = *(_DWORD *)&v89[v90[6]];
      v94 = v90[7];
      v95 = &v88[v94];
      v96 = &v89[v94];
      v97 = *((_QWORD *)v96 + 1);
      *(_QWORD *)v95 = *(_QWORD *)v96;
      *((_QWORD *)v95 + 1) = v97;
      v98 = v90[8];
      v138 = &v88[v98];
      v99 = &v89[v98];
      swift_bridgeObjectRetain();
      v93(v138, v99, v144);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v141 + 56))(v88, 0, 1, v90);
    }
    v100 = *(int *)(v83 + 24);
    v101 = (char *)v81 + v100;
    v102 = (char *)v82 + v100;
    v103 = *((_QWORD *)v102 + 1);
    if (v103 == 1)
    {
      *(_OWORD *)v101 = *(_OWORD *)v102;
    }
    else
    {
      *(_QWORD *)v101 = *(_QWORD *)v102;
      *((_QWORD *)v101 + 1) = v103;
      swift_bridgeObjectRetain();
    }
    (*((void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))__dsta + 7))(v81, 0, 1, v83);
  }
  v104 = v12[17];
  v105 = (char *)v22 + v104;
  v106 = (char *)v15 + v104;
  matched = _s8SequenceV5MatchVMa(0);
  v108 = *(_QWORD *)(matched - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48))(v106, 1, matched))
  {
    v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04B0);
    memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
  }
  else
  {
    v110 = (int *)_s8SequenceV5MatchV6FilterVMa(0);
    v111 = *((_QWORD *)v110 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v111 + 48))(v106, 1, v110))
    {
      v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0958);
      memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
    }
    else
    {
      v145 = v111;
      v113 = sub_24B7F3490();
      v114 = *(_QWORD *)(v113 - 8);
      v142 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v114 + 48);
      v139 = v114;
      if (v142(v106, 1, v113))
      {
        v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
        memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v105, v106, v113);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v114 + 56))(v105, 0, 1, v113);
      }
      v116 = v110[5];
      __dstb = &v105[v116];
      v117 = &v106[v116];
      if (v142(&v106[v116], 1, v113))
      {
        v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
        memcpy(__dstb, v117, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v139 + 16))(__dstb, v117, v113);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v139 + 56))(__dstb, 0, 1, v113);
      }
      v119 = v110[6];
      v120 = &v105[v119];
      v121 = &v106[v119];
      *(_DWORD *)v120 = *(_DWORD *)v121;
      v120[4] = v121[4];
      *(_QWORD *)&v105[v110[7]] = *(_QWORD *)&v106[v110[7]];
      v122 = *(void (**)(char *, _QWORD, uint64_t, int *))(v145 + 56);
      swift_bridgeObjectRetain();
      v122(v105, 0, 1, v110);
    }
    v123 = *(int *)(matched + 20);
    v124 = &v105[v123];
    v125 = &v106[v123];
    v126 = *((_QWORD *)v125 + 3);
    if (v126 == 1)
    {
      v127 = *((_OWORD *)v125 + 1);
      *(_OWORD *)v124 = *(_OWORD *)v125;
      *((_OWORD *)v124 + 1) = v127;
      *((_OWORD *)v124 + 2) = *((_OWORD *)v125 + 2);
      *((_QWORD *)v124 + 6) = *((_QWORD *)v125 + 6);
    }
    else
    {
      *(_QWORD *)v124 = *(_QWORD *)v125;
      *((_QWORD *)v124 + 1) = *((_QWORD *)v125 + 1);
      *((_DWORD *)v124 + 4) = *((_DWORD *)v125 + 4);
      v128 = *((_QWORD *)v125 + 4);
      *((_QWORD *)v124 + 3) = v126;
      *((_QWORD *)v124 + 4) = v128;
      v124[40] = v125[40];
      *((_QWORD *)v124 + 6) = *((_QWORD *)v125 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(_QWORD *)&v105[*(int *)(matched + 24)] = *(_QWORD *)&v106[*(int *)(matched + 24)];
    v129 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56);
    swift_bridgeObjectRetain();
    v129(v105, 0, 1, matched);
  }
  v130 = v12[18];
  v131 = (uint64_t)v22 + v130;
  v132 = (char *)v15 + v130;
  v133 = *((_QWORD *)v132 + 2);
  if (v133 == 1 || v133 == 2)
  {
    *(_OWORD *)v131 = *(_OWORD *)v132;
    *(_QWORD *)(v131 + 16) = *((_QWORD *)v132 + 2);
  }
  else
  {
    *(_QWORD *)v131 = *(_QWORD *)v132;
    *(_WORD *)(v131 + 8) = *((_WORD *)v132 + 4);
    *(_QWORD *)(v131 + 16) = v133;
    swift_bridgeObjectRetain();
  }
  v134 = v12[20];
  *(_QWORD *)((char *)v22 + v12[19]) = *(_QWORD *)((char *)v15 + v12[19]);
  *(_QWORD *)((char *)v22 + v134) = *(_QWORD *)((char *)v15 + v134);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v22;
}

char *sub_24B7D8900(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  int v58;
  int v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  int v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  int v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  int v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t (*v111)(char *, uint64_t, uint64_t);
  int v112;
  int v113;
  uint64_t v114;
  char *v115;
  char *v116;
  int *v117;
  uint64_t v118;
  uint64_t v119;
  int *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  int *v124;
  uint64_t (*v125)(char *, uint64_t, int *);
  int v126;
  size_t v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(char *, char *, uint64_t);
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  void (*v143)(void *, char *, uint64_t);
  uint64_t v144;
  _QWORD *v145;
  char *v146;
  uint64_t v147;
  void *v148;
  char *v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  void (*v153)(void *, char *, uint64_t);
  uint64_t v154;
  _QWORD *v155;
  char *v156;
  uint64_t v157;
  char *v158;
  _QWORD *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t matched;
  uint64_t v166;
  uint64_t (*v167)(char *, uint64_t, uint64_t);
  int v168;
  int v169;
  int *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  int *v174;
  uint64_t v175;
  uint64_t (*v176)(char *, uint64_t, int *);
  int v177;
  int v178;
  uint64_t v179;
  uint64_t v180;
  unsigned int (*v181)(char *, uint64_t, uint64_t);
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  int v194;
  void (*v195)(char *, _QWORD, uint64_t, int *);
  uint64_t v196;
  char *v197;
  char *v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  uint64_t v202;
  uint64_t v203;
  void (*v204)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v205;
  uint64_t v206;
  uint64_t (*v207)(char *, uint64_t, uint64_t);
  int v208;
  int v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  char *v216;
  int v217;
  void (*v218)(char *, _QWORD, uint64_t, int *);
  uint64_t v219;
  uint64_t v220;
  char *v221;
  char *v222;
  int v223;
  int v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  char *v228;
  int v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  __int128 v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  __int128 v239;
  __int128 v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t *v247;
  uint64_t v248;
  uint64_t v249;
  __int128 v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  char *__srcb;
  char *__srcc;
  void (**__src)(void *, const void *, uint64_t);
  void (**__srca)(void *, const void *, uint64_t);
  void (*v262)(char *, char *, uint64_t);
  void (**v263)(void *, _QWORD, uint64_t, int *);
  void *v264;
  void *v265;
  void (**v266)(void *, const void *, uint64_t);
  unsigned int (*v267)(char *, uint64_t, uint64_t);
  _QWORD *v268;
  int *v269;

  *(_QWORD *)a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_24B7F3460();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v268 = a2;
  v269 = a3;
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = (char *)a2 + v12;
  v262 = v11;
  v11(&a1[v12], (char *)a2 + v12, v9);
  v15 = (int *)_s5StateVMa(0);
  v16 = v15[5];
  v17 = &v13[v16];
  v18 = &v14[v16];
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v20 = v19(&v13[v16], 1, v9);
  v21 = v19(v18, 1, v9);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v17, v18, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  v262(v17, v18, v9);
LABEL_7:
  v23 = v15[6];
  v24 = &v13[v23];
  v25 = &v14[v23];
  v26 = *(_QWORD *)v25;
  v24[8] = v25[8];
  *(_QWORD *)v24 = v26;
  v27 = v15[7];
  v28 = &v13[v27];
  v29 = &v14[v27];
  v30 = v19(&v13[v27], 1, v9);
  v31 = v19(v29, 1, v9);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v28, v29, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v28, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v28, v9);
LABEL_12:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_13;
  }
  v262(v28, v29, v9);
LABEL_13:
  v33 = v15[8];
  v34 = &v13[v33];
  v35 = &v14[v33];
  v36 = v19(&v13[v33], 1, v9);
  v37 = v19(v35, 1, v9);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v34, v35, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v34, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v34, v9);
LABEL_18:
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_19;
  }
  v262(v34, v35, v9);
LABEL_19:
  v13[v15[9]] = v14[v15[9]];
  v39 = v15[10];
  v40 = &v13[v39];
  v41 = &v14[v39];
  v42 = v19(&v13[v39], 1, v9);
  v43 = v19(v41, 1, v9);
  if (v42)
  {
    if (!v43)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v40, v41, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v40, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v43)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v40, v9);
LABEL_24:
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_25;
  }
  v262(v40, v41, v9);
LABEL_25:
  v45 = v15[11];
  v46 = &v13[v45];
  v47 = &v14[v45];
  v48 = *(_QWORD *)v47;
  v46[8] = v47[8];
  *(_QWORD *)v46 = v48;
  v49 = v15[12];
  v50 = &v13[v49];
  v51 = &v14[v49];
  v52 = v19(&v13[v49], 1, v9);
  v53 = v19(v51, 1, v9);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v50, v51, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v50, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v53)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v50, v9);
LABEL_30:
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    goto LABEL_31;
  }
  v262(v50, v51, v9);
LABEL_31:
  v13[v15[13]] = v14[v15[13]];
  v13[v15[14]] = v14[v15[14]];
  v13[v15[15]] = v14[v15[15]];
  v55 = v15[16];
  v56 = &v13[v55];
  v57 = &v14[v55];
  v58 = v19(&v13[v55], 1, v9);
  v59 = v19(v57, 1, v9);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v56, v57, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v56, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v59)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v56, v9);
LABEL_36:
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_37;
  }
  v262(v56, v57, v9);
LABEL_37:
  v61 = v268;
  v13[v15[17]] = v14[v15[17]];
  *(_QWORD *)&v13[v15[18]] = *(_QWORD *)&v14[v15[18]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v13[v15[19]] = *(_QWORD *)&v14[v15[19]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v62 = v269[7];
  v63 = (uint64_t)&a1[v62];
  v64 = (char *)v268 + v62;
  v65 = *(_QWORD *)&a1[v62 + 16];
  v66 = *(_QWORD *)((char *)v268 + v62 + 16);
  if (v65 == 1)
  {
    if (v66 == 1)
    {
      v67 = *(_OWORD *)v64;
      v68 = *((_OWORD *)v64 + 1);
      v69 = *((_OWORD *)v64 + 2);
      *(_BYTE *)(v63 + 48) = v64[48];
      *(_OWORD *)(v63 + 16) = v68;
      *(_OWORD *)(v63 + 32) = v69;
      *(_OWORD *)v63 = v67;
    }
    else
    {
      *(_QWORD *)v63 = *(_QWORD *)v64;
      *(_QWORD *)(v63 + 8) = *((_QWORD *)v64 + 1);
      *(_QWORD *)(v63 + 16) = *((_QWORD *)v64 + 2);
      *(_QWORD *)(v63 + 24) = *((_QWORD *)v64 + 3);
      *(_QWORD *)(v63 + 32) = *((_QWORD *)v64 + 4);
      v73 = *((_QWORD *)v64 + 5);
      *(_BYTE *)(v63 + 48) = v64[48];
      *(_QWORD *)(v63 + 40) = v73;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v66 == 1)
  {
    sub_24B7DA0D4(v63);
    v71 = *((_OWORD *)v64 + 1);
    v70 = *((_OWORD *)v64 + 2);
    v72 = *(_OWORD *)v64;
    *(_BYTE *)(v63 + 48) = v64[48];
    *(_OWORD *)(v63 + 16) = v71;
    *(_OWORD *)(v63 + 32) = v70;
    *(_OWORD *)v63 = v72;
  }
  else
  {
    *(_QWORD *)v63 = *(_QWORD *)v64;
    *(_QWORD *)(v63 + 8) = *((_QWORD *)v64 + 1);
    *(_QWORD *)(v63 + 16) = *((_QWORD *)v64 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v63 + 24) = *((_QWORD *)v64 + 3);
    *(_QWORD *)(v63 + 32) = *((_QWORD *)v64 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v74 = *((_QWORD *)v64 + 5);
    *(_BYTE *)(v63 + 48) = v64[48];
    *(_QWORD *)(v63 + 40) = v74;
  }
  a1[v269[8]] = *((_BYTE *)v268 + v269[8]);
  v75 = v269[9];
  v76 = &a1[v75];
  v77 = (char *)v268 + v75;
  v78 = v19(&a1[v75], 1, v9);
  v79 = v19(v77, 1, v9);
  if (v78)
  {
    if (!v79)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v76, v77, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v76, 0, 1, v9);
      goto LABEL_50;
    }
    goto LABEL_49;
  }
  if (v79)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v76, v9);
LABEL_49:
    v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    goto LABEL_50;
  }
  v262(v76, v77, v9);
LABEL_50:
  v81 = v269[10];
  v82 = (uint64_t)&a1[v81];
  v83 = (char *)v268 + v81;
  v84 = *(_QWORD *)&a1[v81 + 16];
  v85 = *(_QWORD *)((char *)v268 + v81 + 16);
  if (v84 == 1)
  {
    if (v85 == 1)
    {
      v86 = *(_OWORD *)v83;
      v87 = *((_OWORD *)v83 + 1);
      v88 = *((_OWORD *)v83 + 2);
      *(_BYTE *)(v82 + 48) = v83[48];
      *(_OWORD *)(v82 + 16) = v87;
      *(_OWORD *)(v82 + 32) = v88;
      *(_OWORD *)v82 = v86;
    }
    else
    {
      *(_QWORD *)v82 = *(_QWORD *)v83;
      *(_QWORD *)(v82 + 8) = *((_QWORD *)v83 + 1);
      *(_QWORD *)(v82 + 16) = *((_QWORD *)v83 + 2);
      *(_QWORD *)(v82 + 24) = *((_QWORD *)v83 + 3);
      *(_QWORD *)(v82 + 32) = *((_QWORD *)v83 + 4);
      v92 = *((_QWORD *)v83 + 5);
      *(_BYTE *)(v82 + 48) = v83[48];
      *(_QWORD *)(v82 + 40) = v92;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v85 == 1)
  {
    sub_24B7DA0D4(v82);
    v90 = *((_OWORD *)v83 + 1);
    v89 = *((_OWORD *)v83 + 2);
    v91 = *(_OWORD *)v83;
    *(_BYTE *)(v82 + 48) = v83[48];
    *(_OWORD *)(v82 + 16) = v90;
    *(_OWORD *)(v82 + 32) = v89;
    *(_OWORD *)v82 = v91;
  }
  else
  {
    *(_QWORD *)v82 = *(_QWORD *)v83;
    *(_QWORD *)(v82 + 8) = *((_QWORD *)v83 + 1);
    *(_QWORD *)(v82 + 16) = *((_QWORD *)v83 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v82 + 24) = *((_QWORD *)v83 + 3);
    *(_QWORD *)(v82 + 32) = *((_QWORD *)v83 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v93 = *((_QWORD *)v83 + 5);
    *(_BYTE *)(v82 + 48) = v83[48];
    *(_QWORD *)(v82 + 40) = v93;
  }
  v94 = v269[11];
  v95 = &a1[v94];
  v96 = (char *)v268 + v94;
  v97 = v19(&a1[v94], 1, v9);
  v98 = v19(v96, 1, v9);
  if (v97)
  {
    if (!v98)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v95, v96, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v95, 0, 1, v9);
      goto LABEL_63;
    }
    goto LABEL_62;
  }
  if (v98)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v95, v9);
LABEL_62:
    v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
    goto LABEL_63;
  }
  v262(v95, v96, v9);
LABEL_63:
  v100 = v269[12];
  v101 = &a1[v100];
  v102 = (char *)v268 + v100;
  v103 = v19(&a1[v100], 1, v9);
  v104 = v19(v102, 1, v9);
  if (v103)
  {
    if (!v104)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v101, v102, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v101, 0, 1, v9);
      goto LABEL_69;
    }
    goto LABEL_68;
  }
  if (v104)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v101, v9);
LABEL_68:
    v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
    goto LABEL_69;
  }
  v262(v101, v102, v9);
LABEL_69:
  *(_QWORD *)&a1[v269[13]] = *(_QWORD *)((char *)v268 + v269[13]);
  *(_QWORD *)&a1[v269[14]] = *(_QWORD *)((char *)v268 + v269[14]);
  *(_QWORD *)&a1[v269[15]] = *(_QWORD *)((char *)v268 + v269[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v106 = v269[16];
  v107 = &a1[v106];
  v108 = (_DWORD *)((char *)v268 + v106);
  v109 = _s8SequenceV10EnrollmentVMa(0);
  v110 = *(_QWORD *)(v109 - 8);
  v111 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v110 + 48);
  v112 = v111(v107, 1, v109);
  v113 = v111((char *)v108, 1, v109);
  if (!v112)
  {
    if (v113)
    {
      sub_24B7B2E38((uint64_t)v107, _s8SequenceV10EnrollmentVMa);
      goto LABEL_75;
    }
    *(_DWORD *)v107 = *v108;
    v121 = *(int *)(v109 + 20);
    v122 = &v107[v121];
    v123 = (char *)v108 + v121;
    v124 = (int *)_s8IdentityVMa(0);
    v255 = *((_QWORD *)v124 - 1);
    v256 = (uint64_t)v122;
    v125 = *(uint64_t (**)(char *, uint64_t, int *))(v255 + 48);
    LODWORD(v122) = v125(v122, 1, v124);
    v126 = v125(v123, 1, v124);
    if ((_DWORD)v122)
    {
      if (v126)
      {
        v127 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B08C0) - 8) + 64);
        v128 = (void *)v256;
LABEL_95:
        memcpy(v128, v123, v127);
        goto LABEL_98;
      }
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v256, v123, v9);
      v140 = v124[5];
      v264 = (void *)(v256 + v140);
      v141 = &v123[v140];
      v142 = sub_24B7F3490();
      v143 = *(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v142 - 8) + 16);
      v143(v264, v141, v142);
      *(_DWORD *)(v256 + v124[6]) = *(_DWORD *)&v123[v124[6]];
      v144 = v124[7];
      v145 = (_QWORD *)(v256 + v144);
      v146 = &v123[v144];
      *v145 = *(_QWORD *)v146;
      v145[1] = *((_QWORD *)v146 + 1);
      v147 = v124[8];
      v148 = (void *)(v256 + v147);
      v149 = &v123[v147];
      swift_bridgeObjectRetain();
      v143(v148, v149, v142);
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v255 + 56))(v256, 0, 1, v124);
    }
    else
    {
      if (v126)
      {
        sub_24B7B2E38(v256, _s8IdentityVMa);
        v127 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B08C0) - 8) + 64);
        v128 = (void *)v256;
        goto LABEL_95;
      }
      v262((char *)v256, v123, v9);
      v150 = v124[5];
      v265 = (void *)(v256 + v150);
      v151 = &v123[v150];
      v152 = sub_24B7F3490();
      v153 = *(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v152 - 8) + 24);
      v153(v265, v151, v152);
      *(_DWORD *)(v256 + v124[6]) = *(_DWORD *)&v123[v124[6]];
      v154 = v124[7];
      v155 = (_QWORD *)(v256 + v154);
      v156 = &v123[v154];
      *v155 = *(_QWORD *)v156;
      v155[1] = *((_QWORD *)v156 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v153((void *)(v256 + v124[8]), &v123[v124[8]], v152);
    }
LABEL_98:
    v61 = v268;
    v120 = v269;
    v157 = *(int *)(v109 + 24);
    v158 = &v107[v157];
    v159 = (_QWORD *)((char *)v108 + v157);
    v160 = *(_QWORD *)&v107[v157 + 8];
    v161 = *(_QWORD *)((char *)v108 + v157 + 8);
    if (v160 == 1)
    {
      if (v161 != 1)
      {
        *(_QWORD *)v158 = *v159;
        *((_QWORD *)v158 + 1) = v159[1];
        swift_bridgeObjectRetain();
        goto LABEL_105;
      }
    }
    else
    {
      if (v161 != 1)
      {
        *(_QWORD *)v158 = *v159;
        *((_QWORD *)v158 + 1) = v159[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_105;
      }
      sub_24B7B2F44((uint64_t)v158, &qword_2579B0888);
    }
    *(_OWORD *)v158 = *(_OWORD *)v159;
    goto LABEL_105;
  }
  if (v113)
  {
LABEL_75:
    v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04A8);
    memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
    v120 = v269;
    goto LABEL_105;
  }
  *(_DWORD *)v107 = *v108;
  v114 = *(int *)(v109 + 20);
  v115 = &v107[v114];
  v116 = (char *)v108 + v114;
  v117 = (int *)_s8IdentityVMa(0);
  v263 = (void (**)(void *, _QWORD, uint64_t, int *))*((_QWORD *)v117 - 1);
  if (((unsigned int (*)(char *, uint64_t, int *))v263[6])(v116, 1, v117))
  {
    v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B08C0);
    memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v115, v116, v9);
    v129 = v117[5];
    v257 = &v116[v129];
    __srcb = &v115[v129];
    v130 = sub_24B7F3490();
    v131 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 16);
    v131(__srcb, v257, v130);
    *(_DWORD *)&v115[v117[6]] = *(_DWORD *)&v116[v117[6]];
    v132 = v117[7];
    v133 = &v115[v132];
    v134 = &v116[v132];
    *(_QWORD *)v133 = *(_QWORD *)v134;
    *((_QWORD *)v133 + 1) = *((_QWORD *)v134 + 1);
    v135 = v117[8];
    __srcc = &v115[v135];
    v136 = &v116[v135];
    swift_bridgeObjectRetain();
    v131(__srcc, v136, v130);
    v263[7](v115, 0, 1, v117);
  }
  v61 = v268;
  v120 = v269;
  v137 = *(int *)(v109 + 24);
  v138 = &v107[v137];
  v139 = (char *)v108 + v137;
  if (*((_QWORD *)v139 + 1) == 1)
  {
    *(_OWORD *)v138 = *(_OWORD *)v139;
  }
  else
  {
    *(_QWORD *)v138 = *(_QWORD *)v139;
    *((_QWORD *)v138 + 1) = *((_QWORD *)v139 + 1);
    swift_bridgeObjectRetain();
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v107, 0, 1, v109);
LABEL_105:
  v162 = v120[17];
  v163 = &a1[v162];
  v164 = (char *)v61 + v162;
  matched = _s8SequenceV5MatchVMa(0);
  v166 = *(_QWORD *)(matched - 8);
  v167 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v166 + 48);
  v168 = v167(v163, 1, matched);
  v169 = v167(v164, 1, matched);
  if (!v168)
  {
    if (v169)
    {
      sub_24B7B2E38((uint64_t)v163, _s8SequenceV5MatchVMa);
      goto LABEL_111;
    }
    v174 = (int *)_s8SequenceV5MatchV6FilterVMa(0);
    v175 = *((_QWORD *)v174 - 1);
    v176 = *(uint64_t (**)(char *, uint64_t, int *))(v175 + 48);
    v177 = v176(v163, 1, v174);
    v178 = v176(v164, 1, v174);
    if (v177)
    {
      if (!v178)
      {
        v179 = sub_24B7F3490();
        v180 = *(_QWORD *)(v179 - 8);
        v181 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v180 + 48);
        v266 = (void (**)(void *, const void *, uint64_t))v180;
        if (v181(v164, 1, v179))
        {
          v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
          memcpy(v163, v164, *(_QWORD *)(*(_QWORD *)(v182 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v180 + 16))(v163, v164, v179);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v180 + 56))(v163, 0, 1, v179);
        }
        v210 = v174[5];
        v211 = &v163[v210];
        v212 = &v164[v210];
        if (v181(&v164[v210], 1, v179))
        {
          v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
          memcpy(v211, v212, *(_QWORD *)(*(_QWORD *)(v213 - 8) + 64));
        }
        else
        {
          v266[2](v211, v212, v179);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v266[7])(v211, 0, 1, v179);
        }
        v214 = v174[6];
        v215 = &v163[v214];
        v216 = &v164[v214];
        v217 = *(_DWORD *)v216;
        v215[4] = v216[4];
        *(_DWORD *)v215 = v217;
        *(_QWORD *)&v163[v174[7]] = *(_QWORD *)&v164[v174[7]];
        v218 = *(void (**)(char *, _QWORD, uint64_t, int *))(v175 + 56);
        swift_bridgeObjectRetain();
        v218(v163, 0, 1, v174);
        v61 = v268;
        v120 = v269;
        goto LABEL_148;
      }
      goto LABEL_120;
    }
    if (v178)
    {
      sub_24B7B2E38((uint64_t)v163, _s8SequenceV5MatchV6FilterVMa);
LABEL_120:
      v186 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0958);
      memcpy(v163, v164, *(_QWORD *)(*(_QWORD *)(v186 - 8) + 64));
LABEL_148:
      v230 = *(int *)(matched + 20);
      v231 = (uint64_t)&v163[v230];
      v232 = &v164[v230];
      v233 = *(_QWORD *)&v163[v230 + 24];
      v234 = *(_QWORD *)&v164[v230 + 24];
      if (v233 == 1)
      {
        if (v234 == 1)
        {
          v235 = *(_OWORD *)v232;
          v236 = *((_OWORD *)v232 + 1);
          v237 = *((_OWORD *)v232 + 2);
          *(_QWORD *)(v231 + 48) = *((_QWORD *)v232 + 6);
          *(_OWORD *)(v231 + 16) = v236;
          *(_OWORD *)(v231 + 32) = v237;
          *(_OWORD *)v231 = v235;
        }
        else
        {
          *(_BYTE *)v231 = *v232;
          *(_BYTE *)(v231 + 1) = v232[1];
          *(_BYTE *)(v231 + 2) = v232[2];
          *(_BYTE *)(v231 + 3) = v232[3];
          *(_BYTE *)(v231 + 4) = v232[4];
          *(_BYTE *)(v231 + 5) = v232[5];
          *(_BYTE *)(v231 + 6) = v232[6];
          *(_BYTE *)(v231 + 7) = v232[7];
          v241 = *((_QWORD *)v232 + 1);
          *(_BYTE *)(v231 + 16) = v232[16];
          *(_QWORD *)(v231 + 8) = v241;
          *(_BYTE *)(v231 + 17) = v232[17];
          *(_BYTE *)(v231 + 18) = v232[18];
          *(_BYTE *)(v231 + 19) = v232[19];
          *(_QWORD *)(v231 + 24) = *((_QWORD *)v232 + 3);
          v242 = *((_QWORD *)v232 + 4);
          *(_BYTE *)(v231 + 40) = v232[40];
          *(_QWORD *)(v231 + 32) = v242;
          *(_QWORD *)(v231 + 48) = *((_QWORD *)v232 + 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
      }
      else if (v234 == 1)
      {
        sub_24B7DA104(v231);
        v239 = *((_OWORD *)v232 + 1);
        v238 = *((_OWORD *)v232 + 2);
        v240 = *(_OWORD *)v232;
        *(_QWORD *)(v231 + 48) = *((_QWORD *)v232 + 6);
        *(_OWORD *)(v231 + 16) = v239;
        *(_OWORD *)(v231 + 32) = v238;
        *(_OWORD *)v231 = v240;
      }
      else
      {
        *(_BYTE *)v231 = *v232;
        *(_BYTE *)(v231 + 1) = v232[1];
        *(_BYTE *)(v231 + 2) = v232[2];
        *(_BYTE *)(v231 + 3) = v232[3];
        *(_BYTE *)(v231 + 4) = v232[4];
        *(_BYTE *)(v231 + 5) = v232[5];
        *(_BYTE *)(v231 + 6) = v232[6];
        *(_BYTE *)(v231 + 7) = v232[7];
        v243 = *((_QWORD *)v232 + 1);
        *(_BYTE *)(v231 + 16) = v232[16];
        *(_QWORD *)(v231 + 8) = v243;
        *(_BYTE *)(v231 + 17) = v232[17];
        *(_BYTE *)(v231 + 18) = v232[18];
        *(_BYTE *)(v231 + 19) = v232[19];
        *(_QWORD *)(v231 + 24) = *((_QWORD *)v232 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v244 = *((_QWORD *)v232 + 4);
        *(_BYTE *)(v231 + 40) = v232[40];
        *(_QWORD *)(v231 + 32) = v244;
        *(_QWORD *)(v231 + 48) = *((_QWORD *)v232 + 6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      *(_QWORD *)&v163[*(int *)(matched + 24)] = *(_QWORD *)&v164[*(int *)(matched + 24)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_156;
    }
    v205 = sub_24B7F3490();
    v206 = *(_QWORD *)(v205 - 8);
    v207 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v206 + 48);
    v208 = v207(v163, 1, v205);
    v209 = v207(v164, 1, v205);
    __srca = (void (**)(void *, const void *, uint64_t))v206;
    if (v208)
    {
      if (!v209)
      {
        (*(void (**)(char *, char *, uint64_t))(v206 + 16))(v163, v164, v205);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v163, 0, 1, v205);
        goto LABEL_141;
      }
    }
    else
    {
      if (!v209)
      {
        (*(void (**)(char *, char *, uint64_t))(v206 + 24))(v163, v164, v205);
LABEL_141:
        v220 = v174[5];
        v221 = &v163[v220];
        v222 = &v164[v220];
        v223 = v207(&v163[v220], 1, v205);
        v224 = v207(v222, 1, v205);
        if (v223)
        {
          v61 = v268;
          if (!v224)
          {
            __srca[2](v221, v222, v205);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))__srca[7])(v221, 0, 1, v205);
LABEL_147:
            v226 = v174[6];
            v227 = &v163[v226];
            v228 = &v164[v226];
            v229 = *(_DWORD *)v228;
            v227[4] = v228[4];
            *(_DWORD *)v227 = v229;
            *(_QWORD *)&v163[v174[7]] = *(_QWORD *)&v164[v174[7]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v120 = v269;
            goto LABEL_148;
          }
        }
        else
        {
          v61 = v268;
          if (!v224)
          {
            __srca[3](v221, v222, v205);
            goto LABEL_147;
          }
          ((void (*)(char *, uint64_t))__srca[1])(v221, v205);
        }
        v225 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
        memcpy(v221, v222, *(_QWORD *)(*(_QWORD *)(v225 - 8) + 64));
        goto LABEL_147;
      }
      (*(void (**)(char *, uint64_t))(v206 + 8))(v163, v205);
    }
    v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(v163, v164, *(_QWORD *)(*(_QWORD *)(v219 - 8) + 64));
    goto LABEL_141;
  }
  if (v169)
  {
LABEL_111:
    v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04B0);
    memcpy(v163, v164, *(_QWORD *)(*(_QWORD *)(v173 - 8) + 64));
    goto LABEL_156;
  }
  v170 = (int *)_s8SequenceV5MatchV6FilterVMa(0);
  v171 = *((_QWORD *)v170 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v171 + 48))(v164, 1, v170))
  {
    v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0958);
    memcpy(v163, v164, *(_QWORD *)(*(_QWORD *)(v172 - 8) + 64));
  }
  else
  {
    v183 = sub_24B7F3490();
    v184 = *(_QWORD *)(v183 - 8);
    v267 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v184 + 48);
    __src = (void (**)(void *, const void *, uint64_t))v184;
    if (v267(v164, 1, v183))
    {
      v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
      memcpy(v163, v164, *(_QWORD *)(*(_QWORD *)(v185 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v184 + 16))(v163, v164, v183);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v184 + 56))(v163, 0, 1, v183);
    }
    v187 = v170[5];
    v188 = &v163[v187];
    v189 = &v164[v187];
    if (v267(&v164[v187], 1, v183))
    {
      v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
      memcpy(v188, v189, *(_QWORD *)(*(_QWORD *)(v190 - 8) + 64));
    }
    else
    {
      __src[2](v188, v189, v183);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))__src[7])(v188, 0, 1, v183);
    }
    v191 = v170[6];
    v192 = &v163[v191];
    v193 = &v164[v191];
    v194 = *(_DWORD *)v193;
    v192[4] = v193[4];
    *(_DWORD *)v192 = v194;
    *(_QWORD *)&v163[v170[7]] = *(_QWORD *)&v164[v170[7]];
    v195 = *(void (**)(char *, _QWORD, uint64_t, int *))(v171 + 56);
    swift_bridgeObjectRetain();
    v195(v163, 0, 1, v170);
    v61 = v268;
    v120 = v269;
  }
  v196 = *(int *)(matched + 20);
  v197 = &v163[v196];
  v198 = &v164[v196];
  if (*((_QWORD *)v198 + 3) == 1)
  {
    v199 = *(_OWORD *)v198;
    v200 = *((_OWORD *)v198 + 1);
    v201 = *((_OWORD *)v198 + 2);
    *((_QWORD *)v197 + 6) = *((_QWORD *)v198 + 6);
    *((_OWORD *)v197 + 1) = v200;
    *((_OWORD *)v197 + 2) = v201;
    *(_OWORD *)v197 = v199;
  }
  else
  {
    *v197 = *v198;
    v197[1] = v198[1];
    v197[2] = v198[2];
    v197[3] = v198[3];
    v197[4] = v198[4];
    v197[5] = v198[5];
    v197[6] = v198[6];
    v197[7] = v198[7];
    v202 = *((_QWORD *)v198 + 1);
    v197[16] = v198[16];
    *((_QWORD *)v197 + 1) = v202;
    v197[17] = v198[17];
    v197[18] = v198[18];
    v197[19] = v198[19];
    *((_QWORD *)v197 + 3) = *((_QWORD *)v198 + 3);
    v203 = *((_QWORD *)v198 + 4);
    v197[40] = v198[40];
    *((_QWORD *)v197 + 4) = v203;
    *((_QWORD *)v197 + 6) = *((_QWORD *)v198 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)&v163[*(int *)(matched + 24)] = *(_QWORD *)&v164[*(int *)(matched + 24)];
  v204 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v166 + 56);
  swift_bridgeObjectRetain();
  v204(v163, 0, 1, matched);
LABEL_156:
  v245 = v120[18];
  v246 = (uint64_t)&a1[v245];
  v247 = (_QWORD *)((char *)v61 + v245);
  v248 = *(_QWORD *)&a1[v245 + 16];
  v249 = *(_QWORD *)((char *)v61 + v245 + 16);
  if (v248 == 2)
  {
    if (v249 == 1 || v249 == 2)
      goto LABEL_159;
LABEL_164:
    v251 = *v247;
    *(_BYTE *)(v246 + 8) = *((_BYTE *)v247 + 8);
    *(_QWORD *)v246 = v251;
    *(_BYTE *)(v246 + 9) = *((_BYTE *)v247 + 9);
    *(_QWORD *)(v246 + 16) = v247[2];
    swift_bridgeObjectRetain();
    goto LABEL_168;
  }
  if (v249 == 2)
  {
    sub_24B7DA15C(v246);
LABEL_167:
    v252 = v247[2];
    *(_OWORD *)v246 = *(_OWORD *)v247;
    *(_QWORD *)(v246 + 16) = v252;
    goto LABEL_168;
  }
  if (v248 != 1)
  {
    if (v249 != 1)
    {
      v254 = *v247;
      *(_BYTE *)(v246 + 8) = *((_BYTE *)v247 + 8);
      *(_QWORD *)v246 = v254;
      *(_BYTE *)(v246 + 9) = *((_BYTE *)v247 + 9);
      *(_QWORD *)(v246 + 16) = v247[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_168;
    }
    sub_24B7DA134(v246);
    goto LABEL_167;
  }
  if (v249 != 1)
    goto LABEL_164;
LABEL_159:
  v250 = *(_OWORD *)v247;
  *(_QWORD *)(v246 + 16) = v247[2];
  *(_OWORD *)v246 = v250;
LABEL_168:
  *(_QWORD *)&a1[v120[19]] = *(_QWORD *)((char *)v61 + v120[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[v120[20]] = *(_QWORD *)((char *)v61 + v120[20]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24B7DA0D4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24B7DA104(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24B7DA134(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24B7DA15C(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 16) != 1)
    swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_24B7DA18C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  __int128 v57;
  char v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  void (**v63)(void *, _QWORD, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  __int128 v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _DWORD *v78;
  _DWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  int *v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t);
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t matched;
  uint64_t v94;
  uint64_t v95;
  int *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  __int128 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v117;
  _QWORD *v118;
  char *v119;
  uint64_t v120;
  int *v121;
  unsigned int (*v122)(char *, uint64_t, uint64_t);
  void (*v123)(char *, char *, uint64_t);
  uint64_t v124;
  uint64_t v125;
  void (**__dst)(void *, _QWORD, uint64_t, uint64_t);
  void (**__dsta)(void *, _QWORD, uint64_t, int *);
  char *__dstb;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_24B7F3460();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  v118 = a1;
  v121 = a3;
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = a2;
  v15 = (char *)a2 + v12;
  v11(v13, (char *)a2 + v12, v9);
  v16 = (int *)_s5StateVMa(0);
  v17 = v16[5];
  v18 = &v13[v17];
  v19 = &v15[v17];
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v123 = v11;
  __dst = (void (**)(void *, _QWORD, uint64_t, uint64_t))v10;
  if (v20(&v15[v17], 1, v9))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v11(v18, v19, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
  }
  v22 = v14;
  v23 = v118;
  v24 = v121;
  v25 = v16[6];
  v26 = &v13[v25];
  v27 = &v15[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v26[8] = v27[8];
  v28 = v16[7];
  v29 = &v13[v28];
  v30 = &v15[v28];
  if (v20(&v15[v28], 1, v9))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    v123(v29, v30, v9);
    __dst[7](v29, 0, 1, v9);
  }
  v32 = v16[8];
  v33 = &v13[v32];
  v34 = &v15[v32];
  if (v20(&v15[v32], 1, v9))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    v123(v33, v34, v9);
    __dst[7](v33, 0, 1, v9);
  }
  v13[v16[9]] = v15[v16[9]];
  v36 = v16[10];
  v37 = &v13[v36];
  v38 = &v15[v36];
  if (v20(&v15[v36], 1, v9))
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    v123(v37, v38, v9);
    __dst[7](v37, 0, 1, v9);
  }
  v40 = v16[11];
  v41 = &v13[v40];
  v42 = &v15[v40];
  *(_QWORD *)v41 = *(_QWORD *)v42;
  v41[8] = v42[8];
  v43 = v16[12];
  v44 = &v13[v43];
  v45 = &v15[v43];
  if (v20(&v15[v43], 1, v9))
  {
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    v123(v44, v45, v9);
    __dst[7](v44, 0, 1, v9);
  }
  v13[v16[13]] = v15[v16[13]];
  v13[v16[14]] = v15[v16[14]];
  v13[v16[15]] = v15[v16[15]];
  v47 = v16[16];
  v48 = &v13[v47];
  v49 = &v15[v47];
  if (v20(&v15[v47], 1, v9))
  {
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    v51 = v123;
  }
  else
  {
    v52 = v49;
    v51 = v123;
    v123(v48, v52, v9);
    __dst[7](v48, 0, 1, v9);
  }
  v13[v16[17]] = v15[v16[17]];
  *(_QWORD *)&v13[v16[18]] = *(_QWORD *)&v15[v16[18]];
  *(_QWORD *)&v13[v16[19]] = *(_QWORD *)&v15[v16[19]];
  v53 = v121[7];
  v54 = v121[8];
  v55 = (char *)v118 + v53;
  v56 = (uint64_t)v22 + v53;
  v57 = *(_OWORD *)(v56 + 16);
  *(_OWORD *)v55 = *(_OWORD *)v56;
  *((_OWORD *)v55 + 1) = v57;
  *((_OWORD *)v55 + 2) = *(_OWORD *)(v56 + 32);
  v58 = *((_BYTE *)v22 + v54);
  v55[48] = *(_BYTE *)(v56 + 48);
  *((_BYTE *)v118 + v54) = v58;
  v59 = v121[9];
  v60 = (char *)v118 + v59;
  v61 = (char *)v22 + v59;
  if (v20((char *)v22 + v59, 1, v9))
  {
    v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    v63 = __dst;
  }
  else
  {
    v51(v60, v61, v9);
    v63 = __dst;
    __dst[7](v60, 0, 1, v9);
  }
  v64 = v121[10];
  v65 = v121[11];
  v66 = (char *)v118 + v64;
  v67 = (uint64_t)v22 + v64;
  v68 = *(_OWORD *)(v67 + 16);
  *(_OWORD *)v66 = *(_OWORD *)v67;
  *((_OWORD *)v66 + 1) = v68;
  *((_OWORD *)v66 + 2) = *(_OWORD *)(v67 + 32);
  v66[48] = *(_BYTE *)(v67 + 48);
  v69 = (char *)v118 + v65;
  v70 = (char *)v22 + v65;
  if (v20((char *)v22 + v65, 1, v9))
  {
    v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
  }
  else
  {
    v51(v69, v70, v9);
    v63[7](v69, 0, 1, v9);
  }
  v72 = v121[12];
  v73 = (char *)v118 + v72;
  v74 = (char *)v22 + v72;
  if (v20((char *)v22 + v72, 1, v9))
  {
    v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
  }
  else
  {
    v51(v73, v74, v9);
    v63[7](v73, 0, 1, v9);
  }
  v76 = v121[14];
  *(_QWORD *)((char *)v118 + v121[13]) = *(_QWORD *)((char *)v22 + v121[13]);
  *(_QWORD *)((char *)v118 + v76) = *(_QWORD *)((char *)v22 + v76);
  v77 = v121[16];
  *(_QWORD *)((char *)v118 + v121[15]) = *(_QWORD *)((char *)v22 + v121[15]);
  v78 = (_DWORD *)((char *)v118 + v77);
  v79 = (_DWORD *)((char *)v22 + v77);
  v80 = _s8SequenceV10EnrollmentVMa(0);
  v81 = *(_QWORD *)(v80 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80))
  {
    v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04A8);
    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
  }
  else
  {
    *v78 = *v79;
    v83 = *(int *)(v80 + 20);
    v84 = (char *)v78 + v83;
    v85 = (char *)v79 + v83;
    v86 = (int *)_s8IdentityVMa(0);
    __dsta = (void (**)(void *, _QWORD, uint64_t, int *))*((_QWORD *)v86 - 1);
    if (((unsigned int (*)(char *, uint64_t, int *))__dsta[6])(v85, 1, v86))
    {
      v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B08C0);
      memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    }
    else
    {
      v123(v84, v85, v9);
      v88 = v86[5];
      v117 = &v85[v88];
      v119 = &v84[v88];
      v124 = sub_24B7F3490();
      v89 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 32);
      v89(v119, v117, v124);
      *(_DWORD *)&v84[v86[6]] = *(_DWORD *)&v85[v86[6]];
      *(_OWORD *)&v84[v86[7]] = *(_OWORD *)&v85[v86[7]];
      v89(&v84[v86[8]], &v85[v86[8]], v124);
      __dsta[7](v84, 0, 1, v86);
    }
    *(_OWORD *)((char *)v78 + *(int *)(v80 + 24)) = *(_OWORD *)((char *)v79 + *(int *)(v80 + 24));
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
    v24 = v121;
  }
  v90 = v24[17];
  v91 = (char *)v23 + v90;
  v92 = (char *)v22 + v90;
  matched = _s8SequenceV5MatchVMa(0);
  v94 = *(_QWORD *)(matched - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48))(v92, 1, matched))
  {
    v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04B0);
    memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
  }
  else
  {
    v96 = (int *)_s8SequenceV5MatchV6FilterVMa(0);
    v97 = *((_QWORD *)v96 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v97 + 48))(v92, 1, v96))
    {
      v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0958);
      memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
    }
    else
    {
      v125 = v97;
      v99 = sub_24B7F3490();
      v100 = *(_QWORD *)(v99 - 8);
      v122 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48);
      v120 = v100;
      if (v122(v92, 1, v99))
      {
        v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
        memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v91, v92, v99);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v91, 0, 1, v99);
      }
      v102 = v96[5];
      __dstb = &v91[v102];
      v103 = &v92[v102];
      if (v122(&v92[v102], 1, v99))
      {
        v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
        memcpy(__dstb, v103, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v120 + 32))(__dstb, v103, v99);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(__dstb, 0, 1, v99);
      }
      v105 = v96[6];
      v106 = &v91[v105];
      v107 = &v92[v105];
      *(_DWORD *)v106 = *(_DWORD *)v107;
      v106[4] = v107[4];
      *(_QWORD *)&v91[v96[7]] = *(_QWORD *)&v92[v96[7]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v125 + 56))(v91, 0, 1, v96);
    }
    v108 = *(int *)(matched + 20);
    v109 = &v91[v108];
    v110 = &v92[v108];
    v111 = *((_OWORD *)v110 + 1);
    *(_OWORD *)v109 = *(_OWORD *)v110;
    *((_OWORD *)v109 + 1) = v111;
    *((_OWORD *)v109 + 2) = *((_OWORD *)v110 + 2);
    *((_QWORD *)v109 + 6) = *((_QWORD *)v110 + 6);
    *(_QWORD *)&v91[*(int *)(matched + 24)] = *(_QWORD *)&v92[*(int *)(matched + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v91, 0, 1, matched);
  }
  v112 = v24[18];
  v113 = v24[19];
  v114 = (uint64_t)v23 + v112;
  v115 = (uint64_t)v22 + v112;
  *(_OWORD *)v114 = *(_OWORD *)v115;
  *(_QWORD *)(v114 + 16) = *(_QWORD *)(v115 + 16);
  *(_QWORD *)((char *)v23 + v113) = *(_QWORD *)((char *)v22 + v113);
  *(_QWORD *)((char *)v23 + v24[20]) = *(_QWORD *)((char *)v22 + v24[20]);
  return v23;
}

char *sub_24B7DAB20(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  int v56;
  int v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  int v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(char *, uint64_t, uint64_t);
  int v97;
  int v98;
  uint64_t v99;
  char *v100;
  char *v101;
  int *v102;
  uint64_t v103;
  uint64_t v104;
  int *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  int *v109;
  uint64_t (*v110)(char *, uint64_t, int *);
  int v111;
  size_t v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(char *, char *, uint64_t);
  uint64_t v117;
  char *v118;
  uint64_t v119;
  void (*v120)(void *, char *, uint64_t);
  uint64_t v121;
  char *v122;
  uint64_t v123;
  void (*v124)(void *, char *, uint64_t);
  uint64_t v125;
  _QWORD *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t matched;
  uint64_t v138;
  uint64_t (*v139)(char *, uint64_t, uint64_t);
  int v140;
  int v141;
  int *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int *v146;
  uint64_t v147;
  uint64_t (*v148)(char *, uint64_t, int *);
  int v149;
  int v150;
  uint64_t v151;
  uint64_t v152;
  unsigned int (*v153)(char *, uint64_t, uint64_t);
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  char *v167;
  char *v168;
  __int128 v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t (*v172)(char *, uint64_t, uint64_t);
  int v173;
  int v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char *v185;
  int v186;
  int v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  __int128 v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  char *__srcb;
  void (**__src)(void *, const void *, uint64_t);
  void (**__srca)(void *, const void *, uint64_t);
  void (*v209)(char *, char *, uint64_t);
  void (**v210)(void *, _QWORD, uint64_t, int *);
  void *v211;
  void *v212;
  void (**v213)(void *, const void *, uint64_t);
  unsigned int (*v214)(char *, uint64_t, uint64_t);
  _QWORD *v215;
  int *v216;

  *(_QWORD *)a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_24B7F3460();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  v215 = a2;
  v216 = a3;
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = (char *)a2 + v12;
  v209 = v11;
  v11(&a1[v12], (char *)a2 + v12, v9);
  v15 = (int *)_s5StateVMa(0);
  v16 = v15[5];
  v17 = &v13[v16];
  v18 = &v14[v16];
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v20 = v19(&v13[v16], 1, v9);
  v21 = v19(v18, 1, v9);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v18, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  v209(v17, v18, v9);
LABEL_7:
  v23 = v15[6];
  v24 = &v13[v23];
  v25 = &v14[v23];
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v24[8] = v25[8];
  v26 = v15[7];
  v27 = &v13[v26];
  v28 = &v14[v26];
  v29 = v19(&v13[v26], 1, v9);
  v30 = v19(v28, 1, v9);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v27, v28, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v30)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v27, v9);
LABEL_12:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  v209(v27, v28, v9);
LABEL_13:
  v32 = v15[8];
  v33 = &v13[v32];
  v34 = &v14[v32];
  v35 = v19(&v13[v32], 1, v9);
  v36 = v19(v34, 1, v9);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v33, v34, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v33, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v36)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v33, v9);
LABEL_18:
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_19;
  }
  v209(v33, v34, v9);
LABEL_19:
  v13[v15[9]] = v14[v15[9]];
  v38 = v15[10];
  v39 = &v13[v38];
  v40 = &v14[v38];
  v41 = v19(&v13[v38], 1, v9);
  v42 = v19(v40, 1, v9);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v39, v40, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v39, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v42)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v39, v9);
LABEL_24:
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_25;
  }
  v209(v39, v40, v9);
LABEL_25:
  v44 = v15[11];
  v45 = &v13[v44];
  v46 = &v14[v44];
  *(_QWORD *)v45 = *(_QWORD *)v46;
  v45[8] = v46[8];
  v47 = v15[12];
  v48 = &v13[v47];
  v49 = &v14[v47];
  v50 = v19(&v13[v47], 1, v9);
  v51 = v19(v49, 1, v9);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v48, v49, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v48, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v48, v9);
LABEL_30:
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_31;
  }
  v209(v48, v49, v9);
LABEL_31:
  v13[v15[13]] = v14[v15[13]];
  v13[v15[14]] = v14[v15[14]];
  v13[v15[15]] = v14[v15[15]];
  v53 = v15[16];
  v54 = &v13[v53];
  v55 = &v14[v53];
  v56 = v19(&v13[v53], 1, v9);
  v57 = v19(v55, 1, v9);
  if (v56)
  {
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v54, v55, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v54, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v57)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v54, v9);
LABEL_36:
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_37;
  }
  v209(v54, v55, v9);
LABEL_37:
  v59 = v215;
  v13[v15[17]] = v14[v15[17]];
  *(_QWORD *)&v13[v15[18]] = *(_QWORD *)&v14[v15[18]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v13[v15[19]] = *(_QWORD *)&v14[v15[19]];
  swift_bridgeObjectRelease();
  v60 = v216[7];
  v61 = (uint64_t)&a1[v60];
  v62 = (char *)v215 + v60;
  if (*(_QWORD *)&a1[v60 + 16] == 1)
  {
LABEL_40:
    v64 = *((_OWORD *)v62 + 1);
    *(_OWORD *)v61 = *(_OWORD *)v62;
    *(_OWORD *)(v61 + 16) = v64;
    *(_OWORD *)(v61 + 32) = *((_OWORD *)v62 + 2);
    goto LABEL_42;
  }
  v63 = *((_QWORD *)v62 + 2);
  if (v63 == 1)
  {
    sub_24B7DA0D4(v61);
    goto LABEL_40;
  }
  *(_OWORD *)v61 = *(_OWORD *)v62;
  *(_QWORD *)(v61 + 16) = v63;
  swift_bridgeObjectRelease();
  v65 = *((_QWORD *)v62 + 4);
  *(_QWORD *)(v61 + 24) = *((_QWORD *)v62 + 3);
  *(_QWORD *)(v61 + 32) = v65;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v61 + 40) = *((_QWORD *)v62 + 5);
LABEL_42:
  *(_BYTE *)(v61 + 48) = v62[48];
  v66 = v216[9];
  a1[v216[8]] = *((_BYTE *)v215 + v216[8]);
  v67 = &a1[v66];
  v68 = (char *)v215 + v66;
  v69 = v19(&a1[v66], 1, v9);
  v70 = v19(v68, 1, v9);
  if (v69)
  {
    if (!v70)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v67, v68, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v67, 0, 1, v9);
      goto LABEL_48;
    }
    goto LABEL_47;
  }
  if (v70)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v67, v9);
LABEL_47:
    v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    goto LABEL_48;
  }
  v209(v67, v68, v9);
LABEL_48:
  v72 = v216[10];
  v73 = (uint64_t)&a1[v72];
  v74 = (char *)v215 + v72;
  if (*(_QWORD *)&a1[v72 + 16] == 1)
  {
LABEL_51:
    v76 = *((_OWORD *)v74 + 1);
    *(_OWORD *)v73 = *(_OWORD *)v74;
    *(_OWORD *)(v73 + 16) = v76;
    *(_OWORD *)(v73 + 32) = *((_OWORD *)v74 + 2);
    goto LABEL_53;
  }
  v75 = *((_QWORD *)v74 + 2);
  if (v75 == 1)
  {
    sub_24B7DA0D4(v73);
    goto LABEL_51;
  }
  *(_OWORD *)v73 = *(_OWORD *)v74;
  *(_QWORD *)(v73 + 16) = v75;
  swift_bridgeObjectRelease();
  v77 = *((_QWORD *)v74 + 4);
  *(_QWORD *)(v73 + 24) = *((_QWORD *)v74 + 3);
  *(_QWORD *)(v73 + 32) = v77;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v73 + 40) = *((_QWORD *)v74 + 5);
LABEL_53:
  *(_BYTE *)(v73 + 48) = v74[48];
  v78 = v216[11];
  v79 = &a1[v78];
  v80 = (char *)v215 + v78;
  v81 = v19(&a1[v78], 1, v9);
  v82 = v19(v80, 1, v9);
  if (v81)
  {
    if (!v82)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v79, v80, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v79, 0, 1, v9);
      goto LABEL_59;
    }
    goto LABEL_58;
  }
  if (v82)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v79, v9);
LABEL_58:
    v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    goto LABEL_59;
  }
  v209(v79, v80, v9);
LABEL_59:
  v84 = v216[12];
  v85 = &a1[v84];
  v86 = (char *)v215 + v84;
  v87 = v19(&a1[v84], 1, v9);
  v88 = v19(v86, 1, v9);
  if (v87)
  {
    if (!v88)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v85, v86, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v85, 0, 1, v9);
      goto LABEL_65;
    }
    goto LABEL_64;
  }
  if (v88)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v85, v9);
LABEL_64:
    v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
    goto LABEL_65;
  }
  v209(v85, v86, v9);
LABEL_65:
  v90 = v216[14];
  *(_QWORD *)&a1[v216[13]] = *(_QWORD *)((char *)v215 + v216[13]);
  *(_QWORD *)&a1[v90] = *(_QWORD *)((char *)v215 + v90);
  *(_QWORD *)&a1[v216[15]] = *(_QWORD *)((char *)v215 + v216[15]);
  swift_bridgeObjectRelease();
  v91 = v216[16];
  v92 = &a1[v91];
  v93 = (_DWORD *)((char *)v215 + v91);
  v94 = _s8SequenceV10EnrollmentVMa(0);
  v95 = *(_QWORD *)(v94 - 8);
  v96 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v95 + 48);
  v97 = v96(v92, 1, v94);
  v98 = v96((char *)v93, 1, v94);
  if (!v97)
  {
    if (v98)
    {
      sub_24B7B2E38((uint64_t)v92, _s8SequenceV10EnrollmentVMa);
      goto LABEL_71;
    }
    *(_DWORD *)v92 = *v93;
    v106 = *(int *)(v94 + 20);
    v107 = &v92[v106];
    v108 = (char *)v93 + v106;
    v109 = (int *)_s8IdentityVMa(0);
    v203 = *((_QWORD *)v109 - 1);
    v204 = (uint64_t)v107;
    v110 = *(uint64_t (**)(char *, uint64_t, int *))(v203 + 48);
    LODWORD(v107) = v110(v107, 1, v109);
    v111 = v110(v108, 1, v109);
    if ((_DWORD)v107)
    {
      if (v111)
      {
        v112 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B08C0) - 8) + 64);
        v113 = (void *)v204;
LABEL_88:
        memcpy(v113, v108, v112);
        goto LABEL_91;
      }
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v204, v108, v9);
      v117 = v109[5];
      v211 = (void *)(v204 + v117);
      v118 = &v108[v117];
      v119 = sub_24B7F3490();
      v120 = *(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 32);
      v120(v211, v118, v119);
      *(_DWORD *)(v204 + v109[6]) = *(_DWORD *)&v108[v109[6]];
      *(_OWORD *)(v204 + v109[7]) = *(_OWORD *)&v108[v109[7]];
      v120((void *)(v204 + v109[8]), &v108[v109[8]], v119);
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v203 + 56))(v204, 0, 1, v109);
    }
    else
    {
      if (v111)
      {
        sub_24B7B2E38(v204, _s8IdentityVMa);
        v112 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B08C0) - 8) + 64);
        v113 = (void *)v204;
        goto LABEL_88;
      }
      v209((char *)v204, v108, v9);
      v121 = v109[5];
      v212 = (void *)(v204 + v121);
      v122 = &v108[v121];
      v123 = sub_24B7F3490();
      v124 = *(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 40);
      v124(v212, v122, v123);
      *(_DWORD *)(v204 + v109[6]) = *(_DWORD *)&v108[v109[6]];
      v125 = v109[7];
      v126 = (_QWORD *)(v204 + v125);
      v127 = &v108[v125];
      v129 = *(_QWORD *)v127;
      v128 = *((_QWORD *)v127 + 1);
      *v126 = v129;
      v126[1] = v128;
      swift_bridgeObjectRelease();
      v124((void *)(v204 + v109[8]), &v108[v109[8]], v123);
    }
LABEL_91:
    v59 = v215;
    v105 = v216;
    v130 = *(int *)(v94 + 24);
    v131 = &v92[v130];
    v132 = (_QWORD *)((char *)v93 + v130);
    if (*(_QWORD *)&v92[v130 + 8] != 1)
    {
      v133 = v132[1];
      if (v133 != 1)
      {
        *(_QWORD *)v131 = *v132;
        *((_QWORD *)v131 + 1) = v133;
        swift_bridgeObjectRelease();
        goto LABEL_96;
      }
      sub_24B7B2F44((uint64_t)v131, &qword_2579B0888);
    }
    *(_OWORD *)v131 = *(_OWORD *)v132;
    goto LABEL_96;
  }
  if (v98)
  {
LABEL_71:
    v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04A8);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
    v105 = v216;
    goto LABEL_96;
  }
  *(_DWORD *)v92 = *v93;
  v99 = *(int *)(v94 + 20);
  v100 = &v92[v99];
  v101 = (char *)v93 + v99;
  v102 = (int *)_s8IdentityVMa(0);
  v210 = (void (**)(void *, _QWORD, uint64_t, int *))*((_QWORD *)v102 - 1);
  if (((unsigned int (*)(char *, uint64_t, int *))v210[6])(v101, 1, v102))
  {
    v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B08C0);
    memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v100, v101, v9);
    v114 = v102[5];
    v205 = &v101[v114];
    __srcb = &v100[v114];
    v115 = sub_24B7F3490();
    v116 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 32);
    v116(__srcb, v205, v115);
    *(_DWORD *)&v100[v102[6]] = *(_DWORD *)&v101[v102[6]];
    *(_OWORD *)&v100[v102[7]] = *(_OWORD *)&v101[v102[7]];
    v116(&v100[v102[8]], &v101[v102[8]], v115);
    v210[7](v100, 0, 1, v102);
  }
  v59 = v215;
  v105 = v216;
  *(_OWORD *)&v92[*(int *)(v94 + 24)] = *(_OWORD *)((char *)v93 + *(int *)(v94 + 24));
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v92, 0, 1, v94);
LABEL_96:
  v134 = v105[17];
  v135 = &a1[v134];
  v136 = (char *)v59 + v134;
  matched = _s8SequenceV5MatchVMa(0);
  v138 = *(_QWORD *)(matched - 8);
  v139 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v138 + 48);
  v140 = v139(v135, 1, matched);
  v141 = v139(v136, 1, matched);
  if (!v140)
  {
    if (v141)
    {
      sub_24B7B2E38((uint64_t)v135, _s8SequenceV5MatchVMa);
      goto LABEL_102;
    }
    v146 = (int *)_s8SequenceV5MatchV6FilterVMa(0);
    v147 = *((_QWORD *)v146 - 1);
    v148 = *(uint64_t (**)(char *, uint64_t, int *))(v147 + 48);
    v149 = v148(v135, 1, v146);
    v150 = v148(v136, 1, v146);
    if (v149)
    {
      if (!v150)
      {
        v151 = sub_24B7F3490();
        v152 = *(_QWORD *)(v151 - 8);
        v153 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v152 + 48);
        v213 = (void (**)(void *, const void *, uint64_t))v152;
        if (v153(v136, 1, v151))
        {
          v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
          memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v154 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v152 + 32))(v135, v136, v151);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v152 + 56))(v135, 0, 1, v151);
        }
        v175 = v146[5];
        v176 = &v135[v175];
        v177 = &v136[v175];
        if (v153(&v136[v175], 1, v151))
        {
          v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
          memcpy(v176, v177, *(_QWORD *)(*(_QWORD *)(v178 - 8) + 64));
        }
        else
        {
          v213[4](v176, v177, v151);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v213[7])(v176, 0, 1, v151);
        }
        v179 = v146[6];
        v180 = &v135[v179];
        v181 = &v136[v179];
        *(_DWORD *)v180 = *(_DWORD *)v181;
        v180[4] = v181[4];
        *(_QWORD *)&v135[v146[7]] = *(_QWORD *)&v136[v146[7]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v147 + 56))(v135, 0, 1, v146);
        v59 = v215;
        v105 = v216;
LABEL_136:
        v192 = *(int *)(matched + 20);
        v193 = (uint64_t)&v135[v192];
        v194 = &v136[v192];
        if (*(_QWORD *)&v135[v192 + 24] != 1)
        {
          v195 = *((_QWORD *)v194 + 3);
          if (v195 != 1)
          {
            *(_QWORD *)v193 = *(_QWORD *)v194;
            *(_QWORD *)(v193 + 8) = *((_QWORD *)v194 + 1);
            *(_DWORD *)(v193 + 16) = *((_DWORD *)v194 + 4);
            *(_QWORD *)(v193 + 24) = v195;
            swift_bridgeObjectRelease();
            *(_QWORD *)(v193 + 32) = *((_QWORD *)v194 + 4);
            *(_BYTE *)(v193 + 40) = v194[40];
            *(_QWORD *)(v193 + 48) = *((_QWORD *)v194 + 6);
            swift_bridgeObjectRelease();
            goto LABEL_141;
          }
          sub_24B7DA104(v193);
        }
        v196 = *((_OWORD *)v194 + 1);
        *(_OWORD *)v193 = *(_OWORD *)v194;
        *(_OWORD *)(v193 + 16) = v196;
        *(_OWORD *)(v193 + 32) = *((_OWORD *)v194 + 2);
        *(_QWORD *)(v193 + 48) = *((_QWORD *)v194 + 6);
LABEL_141:
        *(_QWORD *)&v135[*(int *)(matched + 24)] = *(_QWORD *)&v136[*(int *)(matched + 24)];
        swift_bridgeObjectRelease();
        goto LABEL_142;
      }
LABEL_111:
      v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0958);
      memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
      goto LABEL_136;
    }
    if (v150)
    {
      sub_24B7B2E38((uint64_t)v135, _s8SequenceV5MatchV6FilterVMa);
      goto LABEL_111;
    }
    v170 = sub_24B7F3490();
    v171 = *(_QWORD *)(v170 - 8);
    v172 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v171 + 48);
    v173 = v172(v135, 1, v170);
    v174 = v172(v136, 1, v170);
    __srca = (void (**)(void *, const void *, uint64_t))v171;
    if (v173)
    {
      if (!v174)
      {
        (*(void (**)(char *, char *, uint64_t))(v171 + 32))(v135, v136, v170);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v171 + 56))(v135, 0, 1, v170);
        goto LABEL_129;
      }
    }
    else
    {
      if (!v174)
      {
        (*(void (**)(char *, char *, uint64_t))(v171 + 40))(v135, v136, v170);
LABEL_129:
        v183 = v146[5];
        v184 = &v135[v183];
        v185 = &v136[v183];
        v186 = v172(&v135[v183], 1, v170);
        v187 = v172(v185, 1, v170);
        if (v186)
        {
          if (!v187)
          {
            __srca[4](v184, v185, v170);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))__srca[7])(v184, 0, 1, v170);
LABEL_135:
            v59 = v215;
            v189 = v146[6];
            v190 = &v135[v189];
            v191 = &v136[v189];
            *(_DWORD *)v190 = *(_DWORD *)v191;
            v190[4] = v191[4];
            *(_QWORD *)&v135[v146[7]] = *(_QWORD *)&v136[v146[7]];
            swift_bridgeObjectRelease();
            v105 = v216;
            goto LABEL_136;
          }
        }
        else
        {
          if (!v187)
          {
            __srca[5](v184, v185, v170);
            goto LABEL_135;
          }
          ((void (*)(char *, uint64_t))__srca[1])(v184, v170);
        }
        v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
        memcpy(v184, v185, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
        goto LABEL_135;
      }
      (*(void (**)(char *, uint64_t))(v171 + 8))(v135, v170);
    }
    v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v182 - 8) + 64));
    goto LABEL_129;
  }
  if (v141)
  {
LABEL_102:
    v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04B0);
    memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v145 - 8) + 64));
    goto LABEL_142;
  }
  v142 = (int *)_s8SequenceV5MatchV6FilterVMa(0);
  v143 = *((_QWORD *)v142 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v143 + 48))(v136, 1, v142))
  {
    v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0958);
    memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
  }
  else
  {
    v155 = sub_24B7F3490();
    v156 = *(_QWORD *)(v155 - 8);
    v214 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v156 + 48);
    __src = (void (**)(void *, const void *, uint64_t))v156;
    if (v214(v136, 1, v155))
    {
      v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
      memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v156 + 32))(v135, v136, v155);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v156 + 56))(v135, 0, 1, v155);
    }
    v159 = v142[5];
    v160 = &v135[v159];
    v161 = &v136[v159];
    if (v214(&v136[v159], 1, v155))
    {
      v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
      memcpy(v160, v161, *(_QWORD *)(*(_QWORD *)(v162 - 8) + 64));
    }
    else
    {
      __src[4](v160, v161, v155);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))__src[7])(v160, 0, 1, v155);
    }
    v163 = v142[6];
    v164 = &v135[v163];
    v165 = &v136[v163];
    *(_DWORD *)v164 = *(_DWORD *)v165;
    v164[4] = v165[4];
    *(_QWORD *)&v135[v142[7]] = *(_QWORD *)&v136[v142[7]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v143 + 56))(v135, 0, 1, v142);
    v59 = v215;
    v105 = v216;
  }
  v166 = *(int *)(matched + 20);
  v167 = &v135[v166];
  v168 = &v136[v166];
  v169 = *((_OWORD *)v168 + 1);
  *(_OWORD *)v167 = *(_OWORD *)v168;
  *((_OWORD *)v167 + 1) = v169;
  *((_OWORD *)v167 + 2) = *((_OWORD *)v168 + 2);
  *((_QWORD *)v167 + 6) = *((_QWORD *)v168 + 6);
  *(_QWORD *)&v135[*(int *)(matched + 24)] = *(_QWORD *)&v136[*(int *)(matched + 24)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v138 + 56))(v135, 0, 1, matched);
LABEL_142:
  v197 = v105[18];
  v198 = (uint64_t)&a1[v197];
  v199 = (uint64_t)v59 + v197;
  v200 = *(_QWORD *)&a1[v197 + 16];
  if (v200 != 2)
  {
    v201 = *(_QWORD *)(v199 + 16);
    if (v201 == 2)
    {
      sub_24B7DA15C(v198);
    }
    else if (v200 != 1)
    {
      if (v201 != 1)
      {
        *(_QWORD *)v198 = *(_QWORD *)v199;
        *(_WORD *)(v198 + 8) = *(_WORD *)(v199 + 8);
        *(_QWORD *)(v198 + 16) = v201;
        swift_bridgeObjectRelease();
        goto LABEL_149;
      }
      sub_24B7DA134(v198);
    }
  }
  *(_OWORD *)v198 = *(_OWORD *)v199;
  *(_QWORD *)(v198 + 16) = *(_QWORD *)(v199 + 16);
LABEL_149:
  *(_QWORD *)&a1[v105[19]] = *(_QWORD *)((char *)v59 + v105[19]);
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[v105[20]] = *(_QWORD *)((char *)v59 + v105[20]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24B7DBEA0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7DBEAC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;

  v6 = sub_24B7F3460();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = _s5StateVMa(0);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
  v7 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v9 = a3[9];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04A8);
    v7 = *(_QWORD *)(v14 - 8);
    if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    {
      v8 = v14;
      v9 = a3[16];
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04B0);
      v7 = *(_QWORD *)(v8 - 8);
      v9 = a3[17];
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v12 = *(_QWORD *)(a1 + a3[15]);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  return (v12 + 1);
}

uint64_t sub_24B7DBFC8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7DBFD4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_24B7F3460();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
  }
  else
  {
    v12 = _s5StateVMa(0);
    v9 = *(_QWORD *)(v12 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v12;
      v11 = a4[6];
    }
    else
    {
      result = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
      v9 = *(_QWORD *)(result - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = result;
        v11 = a4[9];
      }
      else
      {
        if (a3 == 0x7FFFFFFF)
        {
          *(_QWORD *)(a1 + a4[15]) = (a2 - 1);
          return result;
        }
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04A8);
        v9 = *(_QWORD *)(v14 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v14;
          v11 = a4[16];
        }
        else
        {
          v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04B0);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a4[17];
        }
      }
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_24B7DC0EC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_24B7F3460();
  if (v0 <= 0x3F)
  {
    _s5StateVMa(319);
    if (v1 <= 0x3F)
    {
      sub_24B7B225C(319, qword_2579B0C58, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
      if (v2 <= 0x3F)
      {
        sub_24B7B225C(319, &qword_2579B0F78, (void (*)(uint64_t))_s8SequenceV10EnrollmentVMa);
        if (v3 <= 0x3F)
        {
          sub_24B7B225C(319, qword_2579B0F80, (void (*)(uint64_t))_s8SequenceV5MatchVMa);
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t _s8SequenceV10ClientInfoVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s8SequenceV10ClientInfoVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s8SequenceV10ClientInfoVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v4;
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s8SequenceV10ClientInfoVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t _s8SequenceV10ClientInfoVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s8SequenceV10ClientInfoVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *_s8SequenceV10ClientInfoVMa()
{
  return &_s8SequenceV10ClientInfoVN;
}

_QWORD *sub_24B7DC48C(_BYTE *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD, uint64_t, int *);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = &a1[v7];
    v9 = (char *)a2 + v7;
    v10 = sub_24B7F3460();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[6];
    v12 = (char *)v4 + v11;
    v13 = (char *)a2 + v11;
    v14 = (int *)_s6SourceVMa(0);
    v15 = *((_QWORD *)v14 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0468);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v18 = sub_24B7F3490();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v12, v13, v18);
      v12[v14[5]] = v13[v14[5]];
      v12[v14[6]] = v13[v14[6]];
      v12[v14[7]] = v13[v14[7]];
      v19 = v14[8];
      v20 = &v12[v19];
      v21 = &v13[v19];
      v22 = *((_QWORD *)v21 + 1);
      *(_QWORD *)v20 = *(_QWORD *)v21;
      *((_QWORD *)v20 + 1) = v22;
      v23 = v14[9];
      v24 = &v12[v23];
      v25 = &v13[v23];
      v26 = *((_QWORD *)v25 + 1);
      *(_QWORD *)v24 = *(_QWORD *)v25;
      *((_QWORD *)v24 + 1) = v26;
      v27 = *(void (**)(char *, _QWORD, uint64_t, int *))(v15 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v27(v12, 0, 1, v14);
    }
    v28 = a3[7];
    v29 = (char *)v4 + v28;
    v30 = (char *)a2 + v28;
    v31 = sub_24B7F3490();
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    v34 = a3[8];
    v35 = a3[9];
    v36 = (char *)v4 + v34;
    v37 = (char *)a2 + v34;
    *(_QWORD *)v36 = *(_QWORD *)v37;
    v36[8] = v37[8];
    v38 = (char *)v4 + v35;
    v39 = (char *)a2 + v35;
    *(_QWORD *)v38 = *(_QWORD *)v39;
    v38[8] = v39[8];
    v40 = a3[10];
    v41 = a3[11];
    v42 = (char *)v4 + v40;
    v43 = (char *)a2 + v40;
    *(_DWORD *)v42 = *(_DWORD *)v43;
    v42[4] = v43[4];
    v44 = (char *)v4 + v41;
    v45 = (char *)a2 + v41;
    v44[8] = v45[8];
    *(_QWORD *)v44 = *(_QWORD *)v45;
    *((_BYTE *)v4 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  }
  return v4;
}

uint64_t sub_24B7DC70C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v4 = a1 + a2[5];
  v5 = sub_24B7F3460();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[6];
  v7 = _s6SourceVMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v8 = sub_24B7F3490();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v9 = a1 + a2[7];
  v10 = sub_24B7F3490();
  v11 = *(_QWORD *)(v10 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  return result;
}

_BYTE *sub_24B7DC810(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, _QWORD, uint64_t, int *);
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  _BYTE *v42;
  _BYTE *v43;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_24B7F3460();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = (int *)_s6SourceVMa(0);
  v14 = *((_QWORD *)v13 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0468);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = sub_24B7F3490();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v11, v12, v16);
    v11[v13[5]] = v12[v13[5]];
    v11[v13[6]] = v12[v13[6]];
    v11[v13[7]] = v12[v13[7]];
    v17 = v13[8];
    v18 = &v11[v17];
    v19 = &v12[v17];
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    v21 = v13[9];
    v22 = &v11[v21];
    v23 = &v12[v21];
    v24 = *((_QWORD *)v23 + 1);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v24;
    v25 = *(void (**)(char *, _QWORD, uint64_t, int *))(v14 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25(v11, 0, 1, v13);
  }
  v26 = a3[7];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = sub_24B7F3490();
  v30 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v30 + 16))(v27, v28, v29);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  v32 = a3[8];
  v33 = a3[9];
  v34 = &a1[v32];
  v35 = &a2[v32];
  *(_QWORD *)v34 = *(_QWORD *)v35;
  v34[8] = v35[8];
  v36 = &a1[v33];
  v37 = &a2[v33];
  *(_QWORD *)v36 = *(_QWORD *)v37;
  v36[8] = v37[8];
  v38 = a3[10];
  v39 = a3[11];
  v40 = &a1[v38];
  v41 = &a2[v38];
  *(_DWORD *)v40 = *(_DWORD *)v41;
  v40[4] = v41[4];
  v42 = &a1[v39];
  v43 = &a2[v39];
  v42[8] = v43[8];
  *(_QWORD *)v42 = *(_QWORD *)v43;
  a1[a3[12]] = a2[a3[12]];
  return a1;
}

_BYTE *sub_24B7DCA64(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  int *v13;
  uint64_t v14;
  uint64_t (*v15)(_BYTE *, uint64_t, int *);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  void (*v25)(_BYTE *, _QWORD, uint64_t, int *);
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(_BYTE *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  _BYTE *v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_24B7F3460();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = (int *)_s6SourceVMa(0);
  v14 = *((_QWORD *)v13 - 1);
  v15 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      v18 = sub_24B7F3490();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v11, v12, v18);
      v11[v13[5]] = v12[v13[5]];
      v11[v13[6]] = v12[v13[6]];
      v11[v13[7]] = v12[v13[7]];
      v19 = v13[8];
      v20 = &v11[v19];
      v21 = &v12[v19];
      *v20 = *v21;
      v20[1] = v21[1];
      v22 = v13[9];
      v23 = &v11[v22];
      v24 = &v12[v22];
      *v23 = *v24;
      v23[1] = v24[1];
      v25 = *(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v14 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v25(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_24B7B2E38((uint64_t)v11, _s6SourceVMa);
LABEL_6:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0468);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  v52 = sub_24B7F3490();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v52 - 8) + 24))(v11, v12, v52);
  v11[v13[5]] = v12[v13[5]];
  v11[v13[6]] = v12[v13[6]];
  v11[v13[7]] = v12[v13[7]];
  v53 = v13[8];
  v54 = &v11[v53];
  v55 = &v12[v53];
  *v54 = *v55;
  v54[1] = v55[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v56 = v13[9];
  v57 = &v11[v56];
  v58 = &v12[v56];
  *v57 = *v58;
  v57[1] = v58[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_7:
  v27 = a3[7];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = sub_24B7F3490();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v31 + 48);
  v33 = v32(v28, 1, v30);
  v34 = v32(v29, 1, v30);
  if (!v33)
  {
    if (!v34)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v31 + 24))(v28, v29, v30);
      goto LABEL_13;
    }
    (*(void (**)(_BYTE *, uint64_t))(v31 + 8))(v28, v30);
    goto LABEL_12;
  }
  if (v34)
  {
LABEL_12:
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v31 + 16))(v28, v29, v30);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
LABEL_13:
  v36 = a3[8];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = *(_QWORD *)v38;
  v37[8] = v38[8];
  *(_QWORD *)v37 = v39;
  v40 = a3[9];
  v41 = &a1[v40];
  v42 = &a2[v40];
  v43 = *(_QWORD *)v42;
  v41[8] = v42[8];
  *(_QWORD *)v41 = v43;
  v44 = a3[10];
  v45 = &a1[v44];
  v46 = &a2[v44];
  LODWORD(v43) = *(_DWORD *)v46;
  v45[4] = v46[4];
  *(_DWORD *)v45 = v43;
  v47 = a3[11];
  v48 = &a1[v47];
  v49 = &a2[v47];
  v50 = *(_QWORD *)v49;
  v48[8] = v49[8];
  *(_QWORD *)v48 = v50;
  a1[a3[12]] = a2[a3[12]];
  return a1;
}

_BYTE *sub_24B7DCDE8(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_24B7F3460();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = (int *)_s6SourceVMa(0);
  v14 = *((_QWORD *)v13 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0468);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = sub_24B7F3490();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v11, v12, v16);
    v11[v13[5]] = v12[v13[5]];
    v11[v13[6]] = v12[v13[6]];
    v11[v13[7]] = v12[v13[7]];
    *(_OWORD *)&v11[v13[8]] = *(_OWORD *)&v12[v13[8]];
    *(_OWORD *)&v11[v13[9]] = *(_OWORD *)&v12[v13[9]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
  }
  v17 = a3[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_24B7F3490();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v21 + 32))(v18, v19, v20);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  v23 = a3[8];
  v24 = a3[9];
  v25 = &a1[v23];
  v26 = &a2[v23];
  *(_QWORD *)v25 = *(_QWORD *)v26;
  v25[8] = v26[8];
  v27 = &a1[v24];
  v28 = &a2[v24];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = a3[10];
  v30 = a3[11];
  v31 = &a1[v29];
  v32 = &a2[v29];
  *(_DWORD *)v31 = *(_DWORD *)v32;
  v31[4] = v32[4];
  v33 = &a1[v30];
  v34 = &a2[v30];
  v33[8] = v34[8];
  *(_QWORD *)v33 = *(_QWORD *)v34;
  a1[a3[12]] = a2[a3[12]];
  return a1;
}

_BYTE *sub_24B7DD020(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  int *v13;
  uint64_t v14;
  uint64_t (*v15)(_BYTE *, uint64_t, int *);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(_BYTE *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_24B7F3460();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = (int *)_s6SourceVMa(0);
  v14 = *((_QWORD *)v13 - 1);
  v15 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      v18 = sub_24B7F3490();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v11, v12, v18);
      v11[v13[5]] = v12[v13[5]];
      v11[v13[6]] = v12[v13[6]];
      v11[v13[7]] = v12[v13[7]];
      *(_OWORD *)&v11[v13[8]] = *(_OWORD *)&v12[v13[8]];
      *(_OWORD *)&v11[v13[9]] = *(_OWORD *)&v12[v13[9]];
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_24B7B2E38((uint64_t)v11, _s6SourceVMa);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0468);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  v42 = sub_24B7F3490();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v11, v12, v42);
  v11[v13[5]] = v12[v13[5]];
  v11[v13[6]] = v12[v13[6]];
  v11[v13[7]] = v12[v13[7]];
  v43 = v13[8];
  v44 = &v11[v43];
  v45 = (uint64_t *)&v12[v43];
  v47 = *v45;
  v46 = v45[1];
  *v44 = v47;
  v44[1] = v46;
  swift_bridgeObjectRelease();
  v48 = v13[9];
  v49 = &v11[v48];
  v50 = (uint64_t *)&v12[v48];
  v52 = *v50;
  v51 = v50[1];
  *v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease();
LABEL_7:
  v20 = a3[7];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = sub_24B7F3490();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v24 + 40))(v21, v22, v23);
      goto LABEL_13;
    }
    (*(void (**)(_BYTE *, uint64_t))(v24 + 8))(v21, v23);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v24 + 32))(v21, v22, v23);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
LABEL_13:
  v29 = a3[8];
  v30 = a3[9];
  v31 = &a1[v29];
  v32 = &a2[v29];
  *(_QWORD *)v31 = *(_QWORD *)v32;
  v31[8] = v32[8];
  v33 = &a1[v30];
  v34 = &a2[v30];
  *(_QWORD *)v33 = *(_QWORD *)v34;
  v33[8] = v34[8];
  v35 = a3[10];
  v36 = a3[11];
  v37 = &a1[v35];
  v38 = &a2[v35];
  *(_DWORD *)v37 = *(_DWORD *)v38;
  v37[4] = v38[4];
  v39 = &a1[v36];
  v40 = &a2[v36];
  v39[8] = v40[8];
  *(_QWORD *)v39 = *(_QWORD *)v40;
  a1[a3[12]] = a2[a3[12]];
  return a1;
}

uint64_t sub_24B7DD350()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7DD35C(unsigned __int8 *a1, uint64_t a2, int *a3)
{
  unsigned int v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 241)
  {
    v4 = *a1;
    if (v4 >= 0xF)
      return v4 - 14;
    else
      return 0;
  }
  else
  {
    v8 = sub_24B7F3460();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0468);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[6];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[7];
      }
    }
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_24B7DD420()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_24B7DD42C(_BYTE *result, uint64_t a2, int a3, int *a4)
{
  _BYTE *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 241)
  {
    *result = a2 + 14;
  }
  else
  {
    v8 = sub_24B7F3460();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0468);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[7];
      }
    }
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_24B7DD4F0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_24B7F3460();
  if (v0 <= 0x3F)
  {
    sub_24B7B225C(319, &qword_2579B1048, (void (*)(uint64_t))_s6SourceVMa);
    if (v1 <= 0x3F)
    {
      sub_24B7B225C(319, qword_2579B1050, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

ValueMetadata *_s8SequenceV5EventV9EventTypeOMa()
{
  return &_s8SequenceV5EventV9EventTypeON;
}

ValueMetadata *_s8SequenceV5EventV18AccessoryImageInfoVMa()
{
  return &_s8SequenceV5EventV18AccessoryImageInfoVN;
}

uint64_t *sub_24B7DD608(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v32;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = (int *)_s8IdentityVMa(0);
    v11 = *((_QWORD *)v10 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B08C0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v14 = sub_24B7F3460();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, v9, v14);
      v15 = v10[5];
      v32 = &v8[v15];
      v16 = &v9[v15];
      v17 = sub_24B7F3490();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      v18(v32, v16, v17);
      v19 = v18;
      *(_DWORD *)&v8[v10[6]] = *(_DWORD *)&v9[v10[6]];
      v20 = v10[7];
      v21 = &v8[v20];
      v22 = &v9[v20];
      v23 = *((_QWORD *)v22 + 1);
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *((_QWORD *)v21 + 1) = v23;
      v24 = v10[8];
      v25 = &v8[v24];
      v26 = &v9[v24];
      swift_bridgeObjectRetain();
      v19(v25, v26, v17);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
    }
    v27 = *(int *)(a3 + 24);
    v28 = (char *)v4 + v27;
    v29 = (char *)a2 + v27;
    v30 = *((_QWORD *)v29 + 1);
    if (v30 == 1)
    {
      *(_OWORD *)v28 = *(_OWORD *)v29;
    }
    else
    {
      *(_QWORD *)v28 = *(_QWORD *)v29;
      *((_QWORD *)v28 + 1) = v30;
      swift_bridgeObjectRetain();
    }
  }
  return v4;
}

uint64_t sub_24B7DD7C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t result;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = _s8IdentityVMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = sub_24B7F3460();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
    v7 = v4 + *(int *)(v5 + 20);
    v8 = sub_24B7F3490();
    v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
    v9(v7, v8);
    swift_bridgeObjectRelease();
    v9(v4 + *(int *)(v5 + 32), v8);
  }
  result = *(_QWORD *)(a1 + *(int *)(a2 + 24) + 8);
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

_DWORD *sub_24B7DD8BC(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v30;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = (int *)_s8IdentityVMa(0);
  v10 = *((_QWORD *)v9 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B08C0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = sub_24B7F3460();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v7, v8, v12);
    v13 = v9[5];
    v30 = &v7[v13];
    v14 = &v8[v13];
    v15 = sub_24B7F3490();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    v16(v30, v14, v15);
    v17 = v16;
    *(_DWORD *)&v7[v9[6]] = *(_DWORD *)&v8[v9[6]];
    v18 = v9[7];
    v19 = &v7[v18];
    v20 = &v8[v18];
    v21 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    v22 = v9[8];
    v23 = &v7[v22];
    v24 = &v8[v22];
    swift_bridgeObjectRetain();
    v17(v23, v24, v15);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  v25 = *(int *)(a3 + 24);
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = *((_QWORD *)v27 + 1);
  if (v28 == 1)
  {
    *(_OWORD *)v26 = *(_OWORD *)v27;
  }
  else
  {
    *(_QWORD *)v26 = *(_QWORD *)v27;
    *((_QWORD *)v26 + 1) = v28;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_DWORD *sub_24B7DDA4C(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, int *);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v3 = a3;
  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = (int *)_s8IdentityVMa(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(uint64_t (**)(char *, uint64_t, int *))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      v14 = sub_24B7F3460();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v7, v8, v14);
      v15 = v9[5];
      v16 = &v7[v15];
      v17 = &v8[v15];
      v18 = sub_24B7F3490();
      v42 = v3;
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      v19(v16, v17, v18);
      *(_DWORD *)&v7[v9[6]] = *(_DWORD *)&v8[v9[6]];
      v20 = v9[7];
      v21 = &v7[v20];
      v22 = &v8[v20];
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
      v23 = v9[8];
      v24 = &v7[v23];
      v25 = &v8[v23];
      swift_bridgeObjectRetain();
      v19(v24, v25, v18);
      v3 = v42;
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_24B7B2E38((uint64_t)v7, _s8IdentityVMa);
LABEL_6:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B08C0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  v33 = sub_24B7F3460();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v7, v8, v33);
  v34 = v9[5];
  v35 = &v7[v34];
  v36 = &v8[v34];
  v37 = sub_24B7F3490();
  v38 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 24);
  v38(v35, v36, v37);
  *(_DWORD *)&v7[v9[6]] = *(_DWORD *)&v8[v9[6]];
  v39 = v9[7];
  v40 = &v7[v39];
  v41 = &v8[v39];
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38(&v7[v9[8]], &v8[v9[8]], v37);
LABEL_7:
  v27 = *(int *)(v3 + 24);
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = (_QWORD *)((char *)a2 + v27);
  v30 = *(_QWORD *)((char *)a1 + v27 + 8);
  v31 = v29[1];
  if (v30 != 1)
  {
    if (v31 != 1)
    {
      *v28 = *v29;
      v28[1] = v29[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_24B7B2F44((uint64_t)v28, &qword_2579B0888);
    goto LABEL_12;
  }
  if (v31 == 1)
  {
LABEL_12:
    *(_OWORD *)v28 = *(_OWORD *)v29;
    return a1;
  }
  *v28 = *v29;
  v28[1] = v29[1];
  swift_bridgeObjectRetain();
  return a1;
}

_DWORD *sub_24B7DDCFC(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  char *v18;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = (int *)_s8IdentityVMa(0);
  v10 = *((_QWORD *)v9 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B08C0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = sub_24B7F3460();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v7, v8, v12);
    v13 = v9[5];
    v18 = &v7[v13];
    v14 = &v8[v13];
    v15 = sub_24B7F3490();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
    v16(v18, v14, v15);
    *(_DWORD *)&v7[v9[6]] = *(_DWORD *)&v8[v9[6]];
    *(_OWORD *)&v7[v9[7]] = *(_OWORD *)&v8[v9[7]];
    v16(&v7[v9[8]], &v8[v9[8]], v15);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_DWORD *sub_24B7DDE50(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, int *);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = (int *)_s8IdentityVMa(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(uint64_t (**)(char *, uint64_t, int *))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      v14 = sub_24B7F3460();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v7, v8, v14);
      v15 = v9[5];
      v36 = &v7[v15];
      v16 = &v8[v15];
      v17 = sub_24B7F3490();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32);
      v18(v36, v16, v17);
      *(_DWORD *)&v7[v9[6]] = *(_DWORD *)&v8[v9[6]];
      *(_OWORD *)&v7[v9[7]] = *(_OWORD *)&v8[v9[7]];
      v18(&v7[v9[8]], &v8[v9[8]], v17);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_24B7B2E38((uint64_t)v7, _s8IdentityVMa);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B08C0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  v25 = sub_24B7F3460();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v7, v8, v25);
  v26 = v9[5];
  v27 = &v7[v26];
  v28 = &v8[v26];
  v29 = sub_24B7F3490();
  v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 40);
  v30(v27, v28, v29);
  *(_DWORD *)&v7[v9[6]] = *(_DWORD *)&v8[v9[6]];
  v31 = v9[7];
  v32 = &v7[v31];
  v33 = &v8[v31];
  v35 = *(_QWORD *)v33;
  v34 = *((_QWORD *)v33 + 1);
  *(_QWORD *)v32 = v35;
  *((_QWORD *)v32 + 1) = v34;
  swift_bridgeObjectRelease();
  v30(&v7[v9[8]], &v8[v9[8]], v29);
LABEL_7:
  v20 = *(int *)(a3 + 24);
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  if (*(_QWORD *)((char *)a1 + v20 + 8) != 1)
  {
    v23 = v22[1];
    if (v23 != 1)
    {
      *v21 = *v22;
      v21[1] = v23;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_24B7B2F44((uint64_t)v21, &qword_2579B0888);
  }
  *(_OWORD *)v21 = *(_OWORD *)v22;
  return a1;
}

uint64_t sub_24B7DE0A0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7DE0AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B08C0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return ((_DWORD)v9 - 1) & ~(((int)v9 - 1) >> 31);
}

uint64_t sub_24B7DE138()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7DE144(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B08C0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 + 1);
  return result;
}

void sub_24B7DE1C8()
{
  unint64_t v0;

  sub_24B7B225C(319, qword_2579B10F8, (void (*)(uint64_t))_s8IdentityVMa);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *sub_24B7DE258(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int *matched;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(uint64_t *, _QWORD, uint64_t, int *);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    matched = (int *)_s8SequenceV5MatchV6FilterVMa(0);
    v8 = *((_QWORD *)matched - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, matched))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0958);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = sub_24B7F3490();
      v12 = *(_QWORD *)(v11 - 8);
      v13 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48);
      if (v13(a2, 1, v11))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v12 + 16))(a1, a2, v11);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      v15 = matched[5];
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      if (v13((uint64_t *)((char *)a2 + v15), 1, v11))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v17, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
      }
      v19 = matched[6];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      *(_DWORD *)v20 = *(_DWORD *)v21;
      v20[4] = v21[4];
      *(uint64_t *)((char *)a1 + matched[7]) = *(uint64_t *)((char *)a2 + matched[7]);
      v22 = *(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v8 + 56);
      swift_bridgeObjectRetain();
      v22(a1, 0, 1, matched);
    }
    v23 = *(int *)(a3 + 20);
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = *((_QWORD *)v25 + 3);
    if (v26 == 1)
    {
      v27 = *((_OWORD *)v25 + 1);
      *(_OWORD *)v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v27;
      *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
      *((_QWORD *)v24 + 6) = *((_QWORD *)v25 + 6);
    }
    else
    {
      *(_QWORD *)v24 = *(_QWORD *)v25;
      *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
      *((_DWORD *)v24 + 4) = *((_DWORD *)v25 + 4);
      v28 = *((_QWORD *)v25 + 4);
      *((_QWORD *)v24 + 3) = v26;
      *((_QWORD *)v24 + 4) = v28;
      v24[40] = v25[40];
      *((_QWORD *)v24 + 6) = *((_QWORD *)v25 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_24B7DE4C4(uint64_t a1, uint64_t a2)
{
  uint64_t matched;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  matched = _s8SequenceV5MatchV6FilterVMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(matched - 8) + 48))(a1, 1, matched))
  {
    v5 = sub_24B7F3490();
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (!v7(a1, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    v8 = a1 + *(int *)(matched + 20);
    if (!v7(v8, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + *(int *)(a2 + 20) + 24) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

char *sub_24B7DE5BC(char *a1, char *a2, uint64_t a3)
{
  int *matched;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  void (*v20)(char *, _QWORD, uint64_t, int *);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;

  matched = (int *)_s8SequenceV5MatchV6FilterVMa(0);
  v7 = *((_QWORD *)matched - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, matched))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0958);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = sub_24B7F3490();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    if (v11(a2, 1, v9))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(a1, a2, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    v13 = matched[5];
    v14 = &a1[v13];
    v15 = &a2[v13];
    if (v11(&a2[v13], 1, v9))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v15, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
    }
    v17 = matched[6];
    v18 = &a1[v17];
    v19 = &a2[v17];
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    *(_QWORD *)&a1[matched[7]] = *(_QWORD *)&a2[matched[7]];
    v20 = *(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56);
    swift_bridgeObjectRetain();
    v20(a1, 0, 1, matched);
  }
  v21 = *(int *)(a3 + 20);
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = *((_QWORD *)v23 + 3);
  if (v24 == 1)
  {
    v25 = *((_OWORD *)v23 + 1);
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *((_OWORD *)v22 + 1) = v25;
    *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
    *((_QWORD *)v22 + 6) = *((_QWORD *)v23 + 6);
  }
  else
  {
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
    *((_DWORD *)v22 + 4) = *((_DWORD *)v23 + 4);
    v26 = *((_QWORD *)v23 + 4);
    *((_QWORD *)v22 + 3) = v24;
    *((_QWORD *)v22 + 4) = v26;
    v22[40] = v23[40];
    *((_QWORD *)v22 + 6) = *((_QWORD *)v23 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_24B7DE7FC(char *a1, char *a2, uint64_t a3)
{
  int *matched;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int v28;
  void (*v29)(char *, _QWORD, uint64_t, int *);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  matched = (int *)_s8SequenceV5MatchV6FilterVMa(0);
  v7 = *((_QWORD *)matched - 1);
  v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, matched);
  v10 = v8(a2, 1, matched);
  if (!v9)
  {
    if (v10)
    {
      sub_24B7B2E38((uint64_t)a1, _s8SequenceV5MatchV6FilterVMa);
      goto LABEL_7;
    }
    v16 = sub_24B7F3490();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
    v19 = v18(a1, 1, v16);
    v20 = v18(a2, 1, v16);
    if (v19)
    {
      if (!v20)
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(a1, a2, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
        goto LABEL_19;
      }
    }
    else
    {
      if (!v20)
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 24))(a1, a2, v16);
LABEL_19:
        v31 = matched[5];
        v32 = &a1[v31];
        v33 = &a2[v31];
        v34 = v18(&a1[v31], 1, v16);
        v35 = v18(v33, 1, v16);
        if (v34)
        {
          if (!v35)
          {
            (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v32, v33, v16);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v32, 0, 1, v16);
LABEL_25:
            v37 = matched[6];
            v38 = &a1[v37];
            v39 = &a2[v37];
            v40 = *(_DWORD *)v39;
            v38[4] = v39[4];
            *(_DWORD *)v38 = v40;
            *(_QWORD *)&a1[matched[7]] = *(_QWORD *)&a2[matched[7]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            goto LABEL_26;
          }
        }
        else
        {
          if (!v35)
          {
            (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v32, v33, v16);
            goto LABEL_25;
          }
          (*(void (**)(char *, uint64_t))(v17 + 8))(v32, v16);
        }
        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        goto LABEL_25;
      }
      (*(void (**)(char *, uint64_t))(v17 + 8))(a1, v16);
    }
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_19;
  }
  if (v10)
  {
LABEL_7:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0958);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_26;
  }
  v11 = sub_24B7F3490();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(a2, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(a1, a2, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  v21 = matched[5];
  v22 = &a1[v21];
  v23 = &a2[v21];
  if (v13(&a2[v21], 1, v11))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v22, v23, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v22, 0, 1, v11);
  }
  v25 = matched[6];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = *(_DWORD *)v27;
  v26[4] = v27[4];
  *(_DWORD *)v26 = v28;
  *(_QWORD *)&a1[matched[7]] = *(_QWORD *)&a2[matched[7]];
  v29 = *(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56);
  swift_bridgeObjectRetain();
  v29(a1, 0, 1, matched);
LABEL_26:
  v41 = *(int *)(a3 + 20);
  v42 = (uint64_t)&a1[v41];
  v43 = &a2[v41];
  v44 = *(_QWORD *)&a1[v41 + 24];
  v45 = *(_QWORD *)&a2[v41 + 24];
  if (v44 == 1)
  {
    if (v45 == 1)
    {
      v46 = *(_OWORD *)v43;
      v47 = *((_OWORD *)v43 + 1);
      v48 = *((_OWORD *)v43 + 2);
      *(_QWORD *)(v42 + 48) = *((_QWORD *)v43 + 6);
      *(_OWORD *)(v42 + 16) = v47;
      *(_OWORD *)(v42 + 32) = v48;
      *(_OWORD *)v42 = v46;
    }
    else
    {
      *(_BYTE *)v42 = *v43;
      *(_BYTE *)(v42 + 1) = v43[1];
      *(_BYTE *)(v42 + 2) = v43[2];
      *(_BYTE *)(v42 + 3) = v43[3];
      *(_BYTE *)(v42 + 4) = v43[4];
      *(_BYTE *)(v42 + 5) = v43[5];
      *(_BYTE *)(v42 + 6) = v43[6];
      *(_BYTE *)(v42 + 7) = v43[7];
      v52 = *((_QWORD *)v43 + 1);
      *(_BYTE *)(v42 + 16) = v43[16];
      *(_QWORD *)(v42 + 8) = v52;
      *(_BYTE *)(v42 + 17) = v43[17];
      *(_BYTE *)(v42 + 18) = v43[18];
      *(_BYTE *)(v42 + 19) = v43[19];
      *(_QWORD *)(v42 + 24) = *((_QWORD *)v43 + 3);
      v53 = *((_QWORD *)v43 + 4);
      *(_BYTE *)(v42 + 40) = v43[40];
      *(_QWORD *)(v42 + 32) = v53;
      *(_QWORD *)(v42 + 48) = *((_QWORD *)v43 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v45 == 1)
  {
    sub_24B7DA104(v42);
    v50 = *((_OWORD *)v43 + 1);
    v49 = *((_OWORD *)v43 + 2);
    v51 = *(_OWORD *)v43;
    *(_QWORD *)(v42 + 48) = *((_QWORD *)v43 + 6);
    *(_OWORD *)(v42 + 16) = v50;
    *(_OWORD *)(v42 + 32) = v49;
    *(_OWORD *)v42 = v51;
  }
  else
  {
    *(_BYTE *)v42 = *v43;
    *(_BYTE *)(v42 + 1) = v43[1];
    *(_BYTE *)(v42 + 2) = v43[2];
    *(_BYTE *)(v42 + 3) = v43[3];
    *(_BYTE *)(v42 + 4) = v43[4];
    *(_BYTE *)(v42 + 5) = v43[5];
    *(_BYTE *)(v42 + 6) = v43[6];
    *(_BYTE *)(v42 + 7) = v43[7];
    v54 = *((_QWORD *)v43 + 1);
    *(_BYTE *)(v42 + 16) = v43[16];
    *(_QWORD *)(v42 + 8) = v54;
    *(_BYTE *)(v42 + 17) = v43[17];
    *(_BYTE *)(v42 + 18) = v43[18];
    *(_BYTE *)(v42 + 19) = v43[19];
    *(_QWORD *)(v42 + 24) = *((_QWORD *)v43 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v55 = *((_QWORD *)v43 + 4);
    *(_BYTE *)(v42 + 40) = v43[40];
    *(_QWORD *)(v42 + 32) = v55;
    *(_QWORD *)(v42 + 48) = *((_QWORD *)v43 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_24B7DED58(char *a1, char *a2, uint64_t a3)
{
  int *matched;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;

  matched = (int *)_s8SequenceV5MatchV6FilterVMa(0);
  v7 = *((_QWORD *)matched - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, matched))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0958);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = sub_24B7F3490();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    if (v11(a2, 1, v9))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    v13 = matched[5];
    v14 = &a1[v13];
    v15 = &a2[v13];
    if (v11(&a2[v13], 1, v9))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v15, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
    }
    v17 = matched[6];
    v18 = &a1[v17];
    v19 = &a2[v17];
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    *(_QWORD *)&a1[matched[7]] = *(_QWORD *)&a2[matched[7]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, matched);
  }
  v20 = *(int *)(a3 + 20);
  v21 = *(int *)(a3 + 24);
  v22 = &a1[v20];
  v23 = &a2[v20];
  v24 = *((_OWORD *)v23 + 1);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v24;
  *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
  *((_QWORD *)v22 + 6) = *((_QWORD *)v23 + 6);
  *(_QWORD *)&a1[v21] = *(_QWORD *)&a2[v21];
  return a1;
}

char *sub_24B7DEF40(char *a1, char *a2, uint64_t a3)
{
  int *matched;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  __int128 v42;

  matched = (int *)_s8SequenceV5MatchV6FilterVMa(0);
  v7 = *((_QWORD *)matched - 1);
  v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, matched);
  v10 = v8(a2, 1, matched);
  if (!v9)
  {
    if (v10)
    {
      sub_24B7B2E38((uint64_t)a1, _s8SequenceV5MatchV6FilterVMa);
      goto LABEL_7;
    }
    v16 = sub_24B7F3490();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
    v19 = v18(a1, 1, v16);
    v20 = v18(a2, 1, v16);
    if (v19)
    {
      if (!v20)
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(a1, a2, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
        goto LABEL_19;
      }
    }
    else
    {
      if (!v20)
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 40))(a1, a2, v16);
LABEL_19:
        v29 = matched[5];
        v30 = &a1[v29];
        v31 = &a2[v29];
        v32 = v18(&a1[v29], 1, v16);
        v33 = v18(v31, 1, v16);
        if (v32)
        {
          if (!v33)
          {
            (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v30, v31, v16);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v30, 0, 1, v16);
LABEL_25:
            v35 = matched[6];
            v36 = &a1[v35];
            v37 = &a2[v35];
            *(_DWORD *)v36 = *(_DWORD *)v37;
            v36[4] = v37[4];
            *(_QWORD *)&a1[matched[7]] = *(_QWORD *)&a2[matched[7]];
            swift_bridgeObjectRelease();
            goto LABEL_26;
          }
        }
        else
        {
          if (!v33)
          {
            (*(void (**)(char *, char *, uint64_t))(v17 + 40))(v30, v31, v16);
            goto LABEL_25;
          }
          (*(void (**)(char *, uint64_t))(v17 + 8))(v30, v16);
        }
        v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        goto LABEL_25;
      }
      (*(void (**)(char *, uint64_t))(v17 + 8))(a1, v16);
    }
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_19;
  }
  if (v10)
  {
LABEL_7:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0958);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_26;
  }
  v11 = sub_24B7F3490();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(a2, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(a1, a2, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  v21 = matched[5];
  v22 = &a1[v21];
  v23 = &a2[v21];
  if (v13(&a2[v21], 1, v11))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v22, v23, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v22, 0, 1, v11);
  }
  v25 = matched[6];
  v26 = &a1[v25];
  v27 = &a2[v25];
  *(_DWORD *)v26 = *(_DWORD *)v27;
  v26[4] = v27[4];
  *(_QWORD *)&a1[matched[7]] = *(_QWORD *)&a2[matched[7]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, matched);
LABEL_26:
  v38 = *(int *)(a3 + 20);
  v39 = (uint64_t)&a1[v38];
  v40 = &a2[v38];
  if (*(_QWORD *)&a1[v38 + 24] != 1)
  {
    v41 = *((_QWORD *)v40 + 3);
    if (v41 != 1)
    {
      *(_QWORD *)v39 = *(_QWORD *)v40;
      *(_QWORD *)(v39 + 8) = *((_QWORD *)v40 + 1);
      *(_DWORD *)(v39 + 16) = *((_DWORD *)v40 + 4);
      *(_QWORD *)(v39 + 24) = v41;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v39 + 32) = *((_QWORD *)v40 + 4);
      *(_BYTE *)(v39 + 40) = v40[40];
      *(_QWORD *)(v39 + 48) = *((_QWORD *)v40 + 6);
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    sub_24B7DA104(v39);
  }
  v42 = *((_OWORD *)v40 + 1);
  *(_OWORD *)v39 = *(_OWORD *)v40;
  *(_OWORD *)(v39 + 16) = v42;
  *(_OWORD *)(v39 + 32) = *((_OWORD *)v40 + 2);
  *(_QWORD *)(v39 + 48) = *((_QWORD *)v40 + 6);
LABEL_31:
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24B7DF368()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7DF374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B08E0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_24B7DF3F4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7DF400(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B08E0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

void sub_24B7DF47C()
{
  unint64_t v0;

  sub_24B7B225C(319, qword_2579B1188, (void (*)(uint64_t))_s8SequenceV5MatchV6FilterVMa);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *sub_24B7DF50C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_24B7F3490();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v12 = a3[5];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1, v7))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    v16 = a3[6];
    v17 = a3[7];
    v18 = (char *)a1 + v16;
    v19 = (char *)a2 + v16;
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    *(uint64_t *)((char *)a1 + v17) = *(uint64_t *)((char *)a2 + v17);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_24B7DF688(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;

  v4 = sub_24B7F3490();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v7 = a1 + *(int *)(a2 + 20);
  if (!v6(v7, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  return swift_bridgeObjectRelease();
}

char *sub_24B7DF724(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;

  v6 = sub_24B7F3490();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = a3[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  v14 = a3[6];
  v15 = a3[7];
  v16 = &a1[v14];
  v17 = &a2[v14];
  *(_DWORD *)v16 = *(_DWORD *)v17;
  v16[4] = v17[4];
  *(_QWORD *)&a1[v15] = *(_QWORD *)&a2[v15];
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_24B7DF874(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int v21;

  v6 = sub_24B7F3490();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v8(&a1[v12], 1, v6);
  v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
LABEL_13:
  v18 = a3[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = *(_DWORD *)v20;
  v19[4] = v20[4];
  *(_DWORD *)v19 = v21;
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_24B7DFA64(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;

  v6 = sub_24B7F3490();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = a3[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  v14 = a3[6];
  v15 = a3[7];
  v16 = &a1[v14];
  v17 = &a2[v14];
  *(_DWORD *)v16 = *(_DWORD *)v17;
  v16[4] = v17[4];
  *(_QWORD *)&a1[v15] = *(_QWORD *)&a2[v15];
  return a1;
}

char *sub_24B7DFBB0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;

  v6 = sub_24B7F3490();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v8(&a1[v12], 1, v6);
  v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
LABEL_13:
  v18 = a3[6];
  v19 = a3[7];
  v20 = &a1[v18];
  v21 = &a2[v18];
  *(_DWORD *)v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  *(_QWORD *)&a1[v19] = *(_QWORD *)&a2[v19];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24B7DFD94()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7DFDA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_24B7DFE2C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7DFE38(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = a2;
  return result;
}

void sub_24B7DFEB4()
{
  unint64_t v0;

  sub_24B7B225C(319, qword_2579B1050, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t _s8SequenceV5MatchV7OptionsVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s8SequenceV5MatchV7OptionsVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s8SequenceV5MatchV7OptionsVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_BYTE *)(a1 + 5) = *(_BYTE *)(a2 + 5);
  *(_BYTE *)(a1 + 6) = *(_BYTE *)(a2 + 6);
  *(_BYTE *)(a1 + 7) = *(_BYTE *)(a2 + 7);
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_BYTE *)(a1 + 19) = *(_BYTE *)(a2 + 19);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s8SequenceV5MatchV7OptionsVwta(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8SequenceV5MatchV7OptionsVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s8SequenceV5MatchV7OptionsVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *_s8SequenceV5MatchV7OptionsVMa()
{
  return &_s8SequenceV5MatchV7OptionsVN;
}

uint64_t *sub_24B7E01EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  int *matched;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _DWORD *v22;
  _DWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _DWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _DWORD *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  void (*v46)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v48;
  unsigned int (*v49)(_DWORD *, uint64_t, uint64_t);
  uint64_t v50;
  _DWORD *v51;
  _QWORD *__dst;
  uint64_t v53;
  _DWORD *v54;
  uint64_t v55;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_24B7F3460();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_24B7F3490();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v15 = *(int *)(a3 + 24);
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    matched = (int *)_s8SequenceV5MatchV6ResultV7DetailsVMa(0);
    v19 = *((_QWORD *)matched - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v19 + 48))(v17, 1, matched))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0938);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v55 = v19;
      *v16 = *v17;
      *((_BYTE *)v16 + 8) = *((_BYTE *)v17 + 8);
      v16[2] = v17[2];
      *((_BYTE *)v16 + 24) = *((_BYTE *)v17 + 24);
      *(_DWORD *)((char *)v16 + 25) = *(_DWORD *)((char *)v17 + 25);
      *(_WORD *)((char *)v16 + 29) = *(_WORD *)((char *)v17 + 29);
      *((_BYTE *)v16 + 31) = *((_BYTE *)v17 + 31);
      v21 = matched[13];
      v22 = (_DWORD *)((char *)v16 + v21);
      v23 = (_DWORD *)((char *)v17 + v21);
      v24 = _s18MatchNodePlacementVMa(0);
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0920);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        v53 = v25;
        v54 = v22;
        *v22 = *v23;
        *((_WORD *)v22 + 2) = *((_WORD *)v23 + 2);
        v22[2] = v23[2];
        *((_BYTE *)v22 + 12) = *((_BYTE *)v23 + 12);
        v27 = *(int *)(v24 + 28);
        __dst = (_QWORD *)((char *)v22 + v27);
        v28 = (_QWORD *)((char *)v23 + v27);
        v29 = _s13NodePlacementVMa(0);
        v30 = *(_QWORD *)(v29 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
        {
          v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
          memcpy(__dst, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
          v33 = v53;
          v32 = v54;
        }
        else
        {
          *__dst = *v28;
          *((_DWORD *)__dst + 2) = *((_DWORD *)v28 + 2);
          v50 = v24;
          __dst[2] = v28[2];
          __dst[3] = v28[3];
          *((_DWORD *)__dst + 8) = *((_DWORD *)v28 + 8);
          v34 = *(int *)(v29 + 68);
          v51 = (_DWORD *)((char *)__dst + v34);
          v35 = (_DWORD *)((char *)v28 + v34);
          v36 = _s13NodePlacementV12TemplateInfoVMa(0);
          v48 = *(_QWORD *)(v36 - 8);
          v49 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v48 + 48);
          swift_bridgeObjectRetain();
          if (v49(v35, 1, v36))
          {
            v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
            memcpy(v51, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
          }
          else
          {
            *v51 = *v35;
            v38 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
            v38((char *)v51 + *(int *)(v36 + 24), (char *)v35 + *(int *)(v36 + 24), v11);
            v38((char *)v51 + *(int *)(v36 + 28), (char *)v35 + *(int *)(v36 + 28), v11);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v36);
          }
          v33 = v53;
          v32 = v54;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v29);
          v24 = v50;
        }
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v32, 0, 1, v24);
      }
      v39 = matched[14];
      v40 = (char *)v16 + v39;
      v41 = (char *)v17 + v39;
      *(_QWORD *)v40 = *(_QWORD *)v41;
      v40[8] = v41[8];
      v42 = matched[15];
      v43 = (_QWORD *)((char *)v16 + v42);
      v44 = (_QWORD *)((char *)v17 + v42);
      v45 = v44[1];
      *v43 = *v44;
      v43[1] = v45;
      *(_QWORD *)((char *)v16 + matched[16]) = *(_QWORD *)((char *)v17 + matched[16]);
      v46 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v55 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v46(v16, 0, 1, matched);
    }
  }
  return a1;
}

uint64_t sub_24B7E0620(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t matched;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);

  v4 = sub_24B7F3460();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_24B7F3490();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v8 = a1 + *(int *)(a2 + 24);
  matched = _s8SequenceV5MatchV6ResultV7DetailsVMa(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(matched - 8) + 48))(v8, 1, matched);
  if (!(_DWORD)result)
  {
    v11 = v8 + *(int *)(matched + 52);
    v12 = _s18MatchNodePlacementVMa(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
    {
      v13 = v11 + *(int *)(v12 + 28);
      v14 = _s13NodePlacementVMa(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
      {
        swift_bridgeObjectRelease();
        v15 = v13 + *(int *)(v14 + 68);
        v16 = _s13NodePlacementV12TemplateInfoVMa(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
        {
          v17 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
          v17(v15 + *(int *)(v16 + 24), v6);
          v17(v15 + *(int *)(v16 + 28), v6);
        }
      }
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24B7E07C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  int *matched;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _DWORD *v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _DWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _DWORD *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  void (*v44)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v46;
  unsigned int (*v47)(_DWORD *, uint64_t, uint64_t);
  uint64_t v48;
  _DWORD *v49;
  uint64_t v50;
  _DWORD *v51;
  _QWORD *__dst;
  uint64_t v53;

  v6 = sub_24B7F3460();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_24B7F3490();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = *(int *)(a3 + 24);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  matched = (int *)_s8SequenceV5MatchV6ResultV7DetailsVMa(0);
  v17 = *((_QWORD *)matched - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v17 + 48))(v15, 1, matched))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0938);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v53 = v17;
    *v14 = *v15;
    *((_BYTE *)v14 + 8) = *((_BYTE *)v15 + 8);
    v14[2] = v15[2];
    *((_BYTE *)v14 + 24) = *((_BYTE *)v15 + 24);
    *(_DWORD *)((char *)v14 + 25) = *(_DWORD *)((char *)v15 + 25);
    *(_WORD *)((char *)v14 + 29) = *(_WORD *)((char *)v15 + 29);
    *((_BYTE *)v14 + 31) = *((_BYTE *)v15 + 31);
    v19 = matched[13];
    v20 = (_DWORD *)((char *)v14 + v19);
    v21 = (_DWORD *)((char *)v15 + v19);
    v22 = _s18MatchNodePlacementVMa(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0920);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v50 = v23;
      v51 = v20;
      *v20 = *v21;
      *((_WORD *)v20 + 2) = *((_WORD *)v21 + 2);
      v20[2] = v21[2];
      *((_BYTE *)v20 + 12) = *((_BYTE *)v21 + 12);
      v25 = *(int *)(v22 + 28);
      __dst = (_QWORD *)((char *)v20 + v25);
      v26 = (_QWORD *)((char *)v21 + v25);
      v27 = _s13NodePlacementVMa(0);
      v28 = *(_QWORD *)(v27 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
        memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        v31 = v50;
        v30 = v51;
      }
      else
      {
        *__dst = *v26;
        *((_DWORD *)__dst + 2) = *((_DWORD *)v26 + 2);
        v48 = v22;
        __dst[2] = v26[2];
        __dst[3] = v26[3];
        *((_DWORD *)__dst + 8) = *((_DWORD *)v26 + 8);
        v32 = *(int *)(v27 + 68);
        v49 = (_DWORD *)((char *)__dst + v32);
        v33 = (_DWORD *)((char *)v26 + v32);
        v34 = _s13NodePlacementV12TemplateInfoVMa(0);
        v46 = *(_QWORD *)(v34 - 8);
        v47 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v46 + 48);
        swift_bridgeObjectRetain();
        if (v47(v33, 1, v34))
        {
          v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
          memcpy(v49, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          *v49 = *v33;
          v36 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
          v36((char *)v49 + *(int *)(v34 + 24), (char *)v33 + *(int *)(v34 + 24), v10);
          v36((char *)v49 + *(int *)(v34 + 28), (char *)v33 + *(int *)(v34 + 28), v10);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v49, 0, 1, v34);
        }
        v31 = v50;
        v30 = v51;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
        v22 = v48;
      }
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v30, 0, 1, v22);
    }
    v37 = matched[14];
    v38 = (char *)v14 + v37;
    v39 = (char *)v15 + v37;
    *(_QWORD *)v38 = *(_QWORD *)v39;
    v38[8] = v39[8];
    v40 = matched[15];
    v41 = (_QWORD *)((char *)v14 + v40);
    v42 = (_QWORD *)((char *)v15 + v40);
    v43 = v42[1];
    *v41 = *v42;
    v41[1] = v43;
    *(_QWORD *)((char *)v14 + matched[16]) = *(_QWORD *)((char *)v15 + matched[16]);
    v44 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v53 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v44(v14, 0, 1, matched);
  }
  return a1;
}

uint64_t sub_24B7E0BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  int *matched;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, int *);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _DWORD *v27;
  _DWORD *v28;
  uint64_t v29;
  unsigned int (**v30)(_DWORD *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  _WORD *v52;
  _WORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (**v57)(_DWORD *, _QWORD, uint64_t, _QWORD);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _WORD *v61;
  _WORD *v62;
  uint64_t v63;
  unsigned int (*v64)(_WORD *, uint64_t, uint64_t);
  uint64_t v65;
  int v66;
  uint64_t v67;
  char *v68;
  uint64_t (*v69)(char *, uint64_t, uint64_t);
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int (*v74)(char *, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  int v79;
  int *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  void (*v85)(char *, char *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  void (*v93)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t);
  void (*v96)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  _QWORD *v103;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t (*v109)(char *, uint64_t, uint64_t);
  int v110;
  int v111;
  void (*v112)(char *, char *, uint64_t);
  void (*v113)(char *, char *, uint64_t);
  uint64_t v114;
  void (*v115)(char *, char *, uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t (*__src)(char *, uint64_t, uint64_t);
  _DWORD *v119;
  _WORD *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  int *__dst;
  void *__dsta;
  char *__dstb;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;

  v6 = sub_24B7F3460();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_24B7F3490();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  v16 = *(int *)(a3 + 24);
  v17 = a1 + v16;
  v18 = (uint64_t *)(a2 + v16);
  matched = (int *)_s8SequenceV5MatchV6ResultV7DetailsVMa(0);
  v20 = *((_QWORD *)matched - 1);
  v21 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v20 + 48);
  v22 = v21(v17, 1, matched);
  v23 = v21((uint64_t)v18, 1, matched);
  if (!v22)
  {
    if (v23)
    {
      sub_24B7B2E38(v17, _s8SequenceV5MatchV6ResultV7DetailsVMa);
      goto LABEL_13;
    }
    v135 = a1;
    v33 = *v18;
    *(_BYTE *)(v17 + 8) = *((_BYTE *)v18 + 8);
    *(_QWORD *)v17 = v33;
    v34 = v18[2];
    *(_BYTE *)(v17 + 24) = *((_BYTE *)v18 + 24);
    *(_QWORD *)(v17 + 16) = v34;
    *(_BYTE *)(v17 + 25) = *((_BYTE *)v18 + 25);
    *(_BYTE *)(v17 + 26) = *((_BYTE *)v18 + 26);
    *(_BYTE *)(v17 + 27) = *((_BYTE *)v18 + 27);
    *(_BYTE *)(v17 + 28) = *((_BYTE *)v18 + 28);
    *(_BYTE *)(v17 + 29) = *((_BYTE *)v18 + 29);
    *(_BYTE *)(v17 + 30) = *((_BYTE *)v18 + 30);
    *(_BYTE *)(v17 + 31) = *((_BYTE *)v18 + 31);
    v35 = matched[13];
    v36 = (char *)(v17 + v35);
    v37 = (char *)v18 + v35;
    v38 = _s18MatchNodePlacementVMa(0);
    v132 = *(_QWORD *)(v38 - 8);
    v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v132 + 48);
    v40 = v39(v36, 1, v38);
    v41 = v39(v37, 1, v38);
    if (v40)
    {
      if (!v41)
      {
        *(_DWORD *)v36 = *(_DWORD *)v37;
        *((_WORD *)v36 + 2) = *((_WORD *)v37 + 2);
        v42 = *((_DWORD *)v37 + 2);
        v36[12] = v37[12];
        *((_DWORD *)v36 + 2) = v42;
        v43 = *(int *)(v38 + 28);
        v44 = &v36[v43];
        v45 = &v37[v43];
        v46 = _s13NodePlacementVMa(0);
        v47 = *(_QWORD *)(v46 - 8);
        __dst = (int *)v46;
        if ((*(unsigned int (**)(char *, uint64_t))(v47 + 48))(v45, 1))
        {
          v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
          memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
          v49 = v132;
          a1 = v135;
        }
        else
        {
          *(_WORD *)v44 = *(_WORD *)v45;
          *((_WORD *)v44 + 1) = *((_WORD *)v45 + 1);
          *((_WORD *)v44 + 2) = *((_WORD *)v45 + 2);
          *((_WORD *)v44 + 3) = *((_WORD *)v45 + 3);
          *((_WORD *)v44 + 4) = *((_WORD *)v45 + 4);
          *((_WORD *)v44 + 5) = *((_WORD *)v45 + 5);
          v124 = v47;
          *((_QWORD *)v44 + 2) = *((_QWORD *)v45 + 2);
          *((_WORD *)v44 + 12) = *((_WORD *)v45 + 12);
          *((_WORD *)v44 + 13) = *((_WORD *)v45 + 13);
          *((_WORD *)v44 + 14) = *((_WORD *)v45 + 14);
          *((_WORD *)v44 + 15) = *((_WORD *)v45 + 15);
          *((_WORD *)v44 + 16) = *((_WORD *)v45 + 16);
          *((_WORD *)v44 + 17) = *((_WORD *)v45 + 17);
          v76 = __dst[17];
          v121 = &v44[v76];
          v77 = &v45[v76];
          v78 = _s13NodePlacementV12TemplateInfoVMa(0);
          v117 = *(_QWORD *)(v78 - 8);
          __src = *(uint64_t (**)(char *, uint64_t, uint64_t))(v117 + 48);
          swift_bridgeObjectRetain();
          v127 = v78;
          v79 = __src(v77, 1, v78);
          v80 = __dst;
          if (v79)
          {
            v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
            memcpy(v121, v77, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
          }
          else
          {
            *(_WORD *)v121 = *(_WORD *)v77;
            *((_WORD *)v121 + 1) = *((_WORD *)v77 + 1);
            v95 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
            v95(&v121[*(int *)(v127 + 24)], &v77[*(int *)(v127 + 24)], v10);
            v80 = __dst;
            v95(&v121[*(int *)(v127 + 28)], &v77[*(int *)(v127 + 28)], v10);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v117 + 56))(v121, 0, 1, v127);
          }
          v49 = v132;
          a1 = v135;
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v124 + 56))(v44, 0, 1, v80);
        }
        v96 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56);
        goto LABEL_42;
      }
    }
    else
    {
      if (!v41)
      {
        *(_DWORD *)v36 = *(_DWORD *)v37;
        *((_WORD *)v36 + 2) = *((_WORD *)v37 + 2);
        v66 = *((_DWORD *)v37 + 2);
        v36[12] = v37[12];
        *((_DWORD *)v36 + 2) = v66;
        v67 = *(int *)(v38 + 28);
        v36 += v67;
        v68 = &v37[v67];
        v38 = _s13NodePlacementVMa(0);
        v133 = *(_QWORD *)(v38 - 8);
        v69 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v133 + 48);
        v70 = v69(v36, 1, v38);
        v71 = v69(v68, 1, v38);
        if (v70)
        {
          a1 = v135;
          if (!v71)
          {
            *(_WORD *)v36 = *(_WORD *)v68;
            *((_WORD *)v36 + 1) = *((_WORD *)v68 + 1);
            *((_WORD *)v36 + 2) = *((_WORD *)v68 + 2);
            *((_WORD *)v36 + 3) = *((_WORD *)v68 + 3);
            *((_WORD *)v36 + 4) = *((_WORD *)v68 + 4);
            *((_WORD *)v36 + 5) = *((_WORD *)v68 + 5);
            *((_QWORD *)v36 + 2) = *((_QWORD *)v68 + 2);
            *((_WORD *)v36 + 12) = *((_WORD *)v68 + 12);
            *((_WORD *)v36 + 13) = *((_WORD *)v68 + 13);
            *((_WORD *)v36 + 14) = *((_WORD *)v68 + 14);
            *((_WORD *)v36 + 15) = *((_WORD *)v68 + 15);
            *((_WORD *)v36 + 16) = *((_WORD *)v68 + 16);
            *((_WORD *)v36 + 17) = *((_WORD *)v68 + 17);
            v72 = *(int *)(v38 + 68);
            v126 = &v68[v72];
            __dstb = &v36[v72];
            v73 = _s13NodePlacementV12TemplateInfoVMa(0);
            v123 = *(_QWORD *)(v73 - 8);
            v74 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48);
            swift_bridgeObjectRetain();
            if (v74(v126, 1, v73))
            {
              v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
              memcpy(__dstb, v126, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
            }
            else
            {
              *(_WORD *)__dstb = *(_WORD *)v126;
              *((_WORD *)__dstb + 1) = *((_WORD *)v126 + 1);
              v113 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
              v113(&__dstb[*(int *)(v73 + 24)], &v126[*(int *)(v73 + 24)], v10);
              v113(&__dstb[*(int *)(v73 + 28)], &v126[*(int *)(v73 + 28)], v10);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v123 + 56))(__dstb, 0, 1, v73);
            }
            a1 = v135;
            v96 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v133 + 56);
LABEL_42:
            v96(v36, 0, 1, v38);
            goto LABEL_43;
          }
        }
        else
        {
          a1 = v135;
          if (!v71)
          {
            *(_WORD *)v36 = *(_WORD *)v68;
            *((_WORD *)v36 + 1) = *((_WORD *)v68 + 1);
            *((_WORD *)v36 + 2) = *((_WORD *)v68 + 2);
            *((_WORD *)v36 + 3) = *((_WORD *)v68 + 3);
            *((_WORD *)v36 + 4) = *((_WORD *)v68 + 4);
            *((_WORD *)v36 + 5) = *((_WORD *)v68 + 5);
            *((_QWORD *)v36 + 2) = *((_QWORD *)v68 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *((_WORD *)v36 + 12) = *((_WORD *)v68 + 12);
            *((_WORD *)v36 + 13) = *((_WORD *)v68 + 13);
            *((_WORD *)v36 + 14) = *((_WORD *)v68 + 14);
            *((_WORD *)v36 + 15) = *((_WORD *)v68 + 15);
            *((_WORD *)v36 + 16) = *((_WORD *)v68 + 16);
            *((_WORD *)v36 + 17) = *((_WORD *)v68 + 17);
            v105 = *(int *)(v38 + 68);
            v106 = &v36[v105];
            v107 = &v68[v105];
            v108 = _s13NodePlacementV12TemplateInfoVMa(0);
            v134 = *(_QWORD *)(v108 - 8);
            v109 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v134 + 48);
            v110 = v109(v106, 1, v108);
            v111 = v109(v107, 1, v108);
            if (v110)
            {
              a1 = v135;
              if (!v111)
              {
                *(_WORD *)v106 = *(_WORD *)v107;
                *((_WORD *)v106 + 1) = *((_WORD *)v107 + 1);
                v112 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
                v112(&v106[*(int *)(v108 + 24)], &v107[*(int *)(v108 + 24)], v10);
                v112(&v106[*(int *)(v108 + 28)], &v107[*(int *)(v108 + 28)], v10);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v134 + 56))(v106, 0, 1, v108);
                goto LABEL_43;
              }
            }
            else
            {
              a1 = v135;
              if (!v111)
              {
                *(_WORD *)v106 = *(_WORD *)v107;
                *((_WORD *)v106 + 1) = *((_WORD *)v107 + 1);
                v115 = *(void (**)(char *, char *, uint64_t))(v11 + 24);
                v115(&v106[*(int *)(v108 + 24)], &v107[*(int *)(v108 + 24)], v10);
                v115(&v106[*(int *)(v108 + 28)], &v107[*(int *)(v108 + 28)], v10);
                goto LABEL_43;
              }
              sub_24B7B2E38((uint64_t)v106, _s13NodePlacementV12TemplateInfoVMa);
            }
            v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
            memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
            goto LABEL_43;
          }
          sub_24B7B2E38((uint64_t)v36, _s13NodePlacementVMa);
        }
        v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
        memcpy(v36, v68, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
LABEL_43:
        v97 = matched[14];
        v98 = v17 + v97;
        v99 = (uint64_t *)((char *)v18 + v97);
        v100 = *v99;
        *(_BYTE *)(v98 + 8) = *((_BYTE *)v99 + 8);
        *(_QWORD *)v98 = v100;
        v101 = matched[15];
        v102 = (_QWORD *)(v17 + v101);
        v103 = (uint64_t *)((char *)v18 + v101);
        *v102 = *v103;
        v102[1] = v103[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v17 + matched[16]) = *(uint64_t *)((char *)v18 + matched[16]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return a1;
      }
      sub_24B7B2E38((uint64_t)v36, _s18MatchNodePlacementVMa);
    }
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0920);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    a1 = v135;
    goto LABEL_43;
  }
  if (v23)
  {
LABEL_13:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0938);
    memcpy((void *)v17, v18, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    return a1;
  }
  v131 = v11;
  v24 = *v18;
  *(_BYTE *)(v17 + 8) = *((_BYTE *)v18 + 8);
  *(_QWORD *)v17 = v24;
  v25 = v18[2];
  *(_BYTE *)(v17 + 24) = *((_BYTE *)v18 + 24);
  *(_QWORD *)(v17 + 16) = v25;
  *(_BYTE *)(v17 + 25) = *((_BYTE *)v18 + 25);
  *(_BYTE *)(v17 + 26) = *((_BYTE *)v18 + 26);
  *(_BYTE *)(v17 + 27) = *((_BYTE *)v18 + 27);
  *(_BYTE *)(v17 + 28) = *((_BYTE *)v18 + 28);
  *(_BYTE *)(v17 + 29) = *((_BYTE *)v18 + 29);
  *(_BYTE *)(v17 + 30) = *((_BYTE *)v18 + 30);
  *(_BYTE *)(v17 + 31) = *((_BYTE *)v18 + 31);
  v26 = matched[13];
  v27 = (_DWORD *)(v17 + v26);
  v28 = (_DWORD *)((char *)v18 + v26);
  v29 = _s18MatchNodePlacementVMa(0);
  v30 = *(unsigned int (***)(_DWORD *, uint64_t, uint64_t))(v29 - 8);
  if (v30[6](v28, 1, v29))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0920);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    v125 = v29;
    __dsta = v30;
    v136 = a1;
    *v27 = *v28;
    *((_WORD *)v27 + 2) = *((_WORD *)v28 + 2);
    v50 = v28[2];
    *((_BYTE *)v27 + 12) = *((_BYTE *)v28 + 12);
    v27[2] = v50;
    v51 = *(int *)(v29 + 28);
    v52 = (_WORD *)((char *)v27 + v51);
    v53 = (_WORD *)((char *)v28 + v51);
    v54 = _s13NodePlacementVMa(0);
    v55 = *(_QWORD *)(v54 - 8);
    if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
    {
      v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      a1 = v136;
      v58 = v125;
      v57 = (void (**)(_DWORD *, _QWORD, uint64_t, _QWORD))__dsta;
    }
    else
    {
      v122 = v55;
      *v52 = *v53;
      v52[1] = v53[1];
      v52[2] = v53[2];
      v52[3] = v53[3];
      v52[4] = v53[4];
      v52[5] = v53[5];
      v119 = v27;
      *((_QWORD *)v52 + 2) = *((_QWORD *)v53 + 2);
      v52[12] = v53[12];
      v52[13] = v53[13];
      v52[14] = v53[14];
      v52[15] = v53[15];
      v52[16] = v53[16];
      v52[17] = v53[17];
      v60 = *(int *)(v54 + 68);
      v120 = v52;
      v61 = (_WORD *)((char *)v52 + v60);
      v62 = (_WORD *)((char *)v53 + v60);
      v63 = _s13NodePlacementV12TemplateInfoVMa(0);
      v116 = *(_QWORD *)(v63 - 8);
      v64 = *(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v116 + 48);
      swift_bridgeObjectRetain();
      if (v64(v62, 1, v63))
      {
        v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        *v61 = *v62;
        v61[1] = v62[1];
        v82 = *(int *)(v63 + 24);
        v83 = (char *)v61 + v82;
        v84 = (char *)v61;
        v85 = *(void (**)(char *, char *, uint64_t))(v131 + 16);
        v85(v83, (char *)v62 + v82, v10);
        v85(&v84[*(int *)(v63 + 28)], (char *)v62 + *(int *)(v63 + 28), v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v84, 0, 1, v63);
      }
      a1 = v136;
      v58 = v125;
      v57 = (void (**)(_DWORD *, _QWORD, uint64_t, _QWORD))__dsta;
      (*(void (**)(_WORD *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v120, 0, 1, v54);
      v27 = v119;
    }
    v57[7](v27, 0, 1, v58);
  }
  v86 = matched[14];
  v87 = v17 + v86;
  v88 = (uint64_t *)((char *)v18 + v86);
  v89 = *v88;
  *(_BYTE *)(v87 + 8) = *((_BYTE *)v88 + 8);
  *(_QWORD *)v87 = v89;
  v90 = matched[15];
  v91 = (_QWORD *)(v17 + v90);
  v92 = (uint64_t *)((char *)v18 + v90);
  *v91 = *v92;
  v91[1] = v92[1];
  *(_QWORD *)(v17 + matched[16]) = *(uint64_t *)((char *)v18 + matched[16]);
  v93 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v20 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v93(v17, 0, 1, matched);
  return a1;
}

uint64_t sub_24B7E178C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  int *matched;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _DWORD *v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _DWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _DWORD *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v41;
  uint64_t v42;
  _DWORD *v43;
  uint64_t v44;
  _DWORD *v45;
  _QWORD *__dst;
  uint64_t v47;

  v6 = sub_24B7F3460();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_24B7F3490();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = *(int *)(a3 + 24);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  matched = (int *)_s8SequenceV5MatchV6ResultV7DetailsVMa(0);
  v17 = *((_QWORD *)matched - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v17 + 48))(v15, 1, matched))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0938);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v47 = v17;
    *v14 = *v15;
    *((_BYTE *)v14 + 8) = *((_BYTE *)v15 + 8);
    v14[2] = v15[2];
    *((_BYTE *)v14 + 24) = *((_BYTE *)v15 + 24);
    *(_DWORD *)((char *)v14 + 25) = *(_DWORD *)((char *)v15 + 25);
    *(_WORD *)((char *)v14 + 29) = *(_WORD *)((char *)v15 + 29);
    *((_BYTE *)v14 + 31) = *((_BYTE *)v15 + 31);
    v19 = matched[13];
    v20 = (_DWORD *)((char *)v14 + v19);
    v21 = (_DWORD *)((char *)v15 + v19);
    v22 = _s18MatchNodePlacementVMa(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0920);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v44 = v23;
      v45 = v20;
      *v20 = *v21;
      *((_WORD *)v20 + 2) = *((_WORD *)v21 + 2);
      v20[2] = v21[2];
      *((_BYTE *)v20 + 12) = *((_BYTE *)v21 + 12);
      v25 = *(int *)(v22 + 28);
      __dst = (_QWORD *)((char *)v20 + v25);
      v26 = (_QWORD *)((char *)v21 + v25);
      v27 = _s13NodePlacementVMa(0);
      v28 = *(_QWORD *)(v27 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
        memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        v31 = v44;
        v30 = v45;
      }
      else
      {
        v42 = v22;
        *__dst = *v26;
        *((_DWORD *)__dst + 2) = *((_DWORD *)v26 + 2);
        __dst[2] = v26[2];
        __dst[3] = v26[3];
        *((_DWORD *)__dst + 8) = *((_DWORD *)v26 + 8);
        v32 = *(int *)(v27 + 68);
        v43 = (_DWORD *)((char *)__dst + v32);
        v33 = (_DWORD *)((char *)v26 + v32);
        v34 = _s13NodePlacementV12TemplateInfoVMa(0);
        v41 = *(_QWORD *)(v34 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v41 + 48))(v33, 1, v34))
        {
          v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
          memcpy(v43, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          *v43 = *v33;
          v36 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
          v36((char *)v43 + *(int *)(v34 + 24), (char *)v33 + *(int *)(v34 + 24), v10);
          v36((char *)v43 + *(int *)(v34 + 28), (char *)v33 + *(int *)(v34 + 28), v10);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v43, 0, 1, v34);
        }
        v31 = v44;
        v30 = v45;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
        v22 = v42;
      }
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v30, 0, 1, v22);
    }
    v37 = matched[14];
    v38 = (char *)v14 + v37;
    v39 = (char *)v15 + v37;
    *(_QWORD *)v38 = *(_QWORD *)v39;
    v38[8] = v39[8];
    *(_OWORD *)((char *)v14 + matched[15]) = *(_OWORD *)((char *)v15 + matched[15]);
    *(_QWORD *)((char *)v14 + matched[16]) = *(_QWORD *)((char *)v15 + matched[16]);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v47 + 56))(v14, 0, 1, matched);
  }
  return a1;
}

uint64_t sub_24B7E1B70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *matched;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, int *);
  int v22;
  int v23;
  uint64_t v24;
  _DWORD *v25;
  _DWORD *v26;
  uint64_t v27;
  unsigned int (**v28)(_DWORD *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _WORD *v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (**v51)(_DWORD *, _QWORD, uint64_t, _QWORD);
  uint64_t v52;
  size_t v53;
  void *v54;
  const void *v55;
  uint64_t v56;
  _DWORD *v57;
  _DWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _DWORD *v62;
  _DWORD *v63;
  uint64_t v64;
  uint64_t (*v65)(_DWORD *, uint64_t, uint64_t);
  int v66;
  int v67;
  uint64_t v68;
  _DWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _DWORD *v73;
  uint64_t v74;
  _DWORD *v75;
  int v76;
  int *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, char *, uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v98;
  _DWORD *v99;
  _DWORD *v100;
  uint64_t v101;
  uint64_t (*v102)(_DWORD *, uint64_t, uint64_t);
  int v103;
  int v104;
  void (*v105)(char *, char *, uint64_t);
  uint64_t v106;
  void (*v107)(char *, char *, uint64_t);
  void (*v108)(char *, char *, uint64_t);
  char *v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  _DWORD *v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int *__dst;
  void *__dsta;
  _DWORD *__dstb;
  _QWORD *__dstc;
  _QWORD *__src;
  _QWORD *__srca;
  _QWORD *__srcb;
  _DWORD *__srcc;
  uint64_t v127;
  uint64_t v128;

  v6 = sub_24B7F3460();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_24B7F3490();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = *(int *)(a3 + 24);
  v17 = a1 + v16;
  v18 = a2 + v16;
  matched = (int *)_s8SequenceV5MatchV6ResultV7DetailsVMa(0);
  v20 = *((_QWORD *)matched - 1);
  v21 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v20 + 48);
  v22 = v21(v17, 1, matched);
  v23 = v21(v18, 1, matched);
  if (!v22)
  {
    if (v23)
    {
      sub_24B7B2E38(v17, _s8SequenceV5MatchV6ResultV7DetailsVMa);
      goto LABEL_13;
    }
    v127 = a1;
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
    *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
    *(_BYTE *)(v17 + 24) = *(_BYTE *)(v18 + 24);
    *(_DWORD *)(v17 + 25) = *(_DWORD *)(v18 + 25);
    *(_WORD *)(v17 + 29) = *(_WORD *)(v18 + 29);
    *(_BYTE *)(v17 + 31) = *(_BYTE *)(v18 + 31);
    v31 = matched[13];
    v32 = v17 + v31;
    v33 = (_WORD *)(v18 + v31);
    v34 = _s18MatchNodePlacementVMa(0);
    __srca = *(_QWORD **)(v34 - 8);
    v35 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))__srca[6];
    v36 = v35(v32, 1, v34);
    v37 = v35((uint64_t)v33, 1, v34);
    if (v36)
    {
      if (!v37)
      {
        *(_DWORD *)v32 = *(_DWORD *)v33;
        *(_WORD *)(v32 + 4) = v33[2];
        *(_DWORD *)(v32 + 8) = *((_DWORD *)v33 + 2);
        *(_BYTE *)(v32 + 12) = *((_BYTE *)v33 + 12);
        v38 = *(int *)(v34 + 28);
        v39 = (_QWORD *)(v32 + v38);
        v40 = (_QWORD *)((char *)v33 + v38);
        v41 = _s13NodePlacementVMa(0);
        v42 = *(_QWORD *)(v41 - 8);
        __dst = (int *)v41;
        if ((*(unsigned int (**)(_QWORD *, uint64_t))(v42 + 48))(v40, 1))
        {
          v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
          memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
          v44 = __srca;
          a1 = v127;
        }
        else
        {
          v115 = v39;
          v118 = v42;
          *v39 = *v40;
          *((_DWORD *)v39 + 2) = *((_DWORD *)v40 + 2);
          v39[2] = v40[2];
          v39[3] = v40[3];
          *((_DWORD *)v39 + 8) = *((_DWORD *)v40 + 8);
          v72 = __dst[17];
          v113 = (_DWORD *)((char *)v39 + v72);
          v73 = (_DWORD *)((char *)v40 + v72);
          v74 = _s13NodePlacementV12TemplateInfoVMa(0);
          v111 = *(_QWORD *)(v74 - 8);
          v75 = v73;
          v76 = (*(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v111 + 48))(v73, 1, v74);
          v77 = __dst;
          if (v76)
          {
            v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
            memcpy(v113, v75, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
          }
          else
          {
            *v113 = *v75;
            v88 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
            v88((char *)v113 + *(int *)(v74 + 24), (char *)v75 + *(int *)(v74 + 24), v10);
            v88((char *)v113 + *(int *)(v74 + 28), (char *)v75 + *(int *)(v74 + 28), v10);
            v77 = __dst;
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v113, 0, 1, v74);
          }
          v44 = __srca;
          a1 = v127;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v118 + 56))(v115, 0, 1, v77);
        }
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v44[7])(v32, 0, 1, v34);
        goto LABEL_44;
      }
    }
    else
    {
      if (!v37)
      {
        *(_DWORD *)v32 = *(_DWORD *)v33;
        *(_WORD *)(v32 + 4) = v33[2];
        *(_DWORD *)(v32 + 8) = *((_DWORD *)v33 + 2);
        *(_BYTE *)(v32 + 12) = *((_BYTE *)v33 + 12);
        v61 = *(int *)(v34 + 28);
        v62 = (_DWORD *)(v32 + v61);
        v63 = (_DWORD *)((char *)v33 + v61);
        v64 = _s13NodePlacementVMa(0);
        __srcb = *(_QWORD **)(v64 - 8);
        v65 = (uint64_t (*)(_DWORD *, uint64_t, uint64_t))__srcb[6];
        v66 = v65(v62, 1, v64);
        v67 = v65(v63, 1, v64);
        if (v66)
        {
          a1 = v127;
          if (!v67)
          {
            *(_QWORD *)v62 = *(_QWORD *)v63;
            v62[2] = v63[2];
            *((_QWORD *)v62 + 2) = *((_QWORD *)v63 + 2);
            *((_QWORD *)v62 + 3) = *((_QWORD *)v63 + 3);
            v62[8] = v63[8];
            v68 = *(int *)(v64 + 68);
            __dstb = (_DWORD *)((char *)v62 + v68);
            v69 = (_DWORD *)((char *)v63 + v68);
            v70 = _s13NodePlacementV12TemplateInfoVMa(0);
            v117 = *(_QWORD *)(v70 - 8);
            if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v117 + 48))(v69, 1, v70))
            {
              v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
              memcpy(__dstb, v69, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
            }
            else
            {
              *__dstb = *v69;
              v105 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
              v105((char *)__dstb + *(int *)(v70 + 24), (char *)v69 + *(int *)(v70 + 24), v10);
              v105((char *)__dstb + *(int *)(v70 + 28), (char *)v69 + *(int *)(v70 + 28), v10);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v117 + 56))(__dstb, 0, 1, v70);
            }
            ((void (*)(_DWORD *, _QWORD, uint64_t, uint64_t))__srcb[7])(v62, 0, 1, v64);
            goto LABEL_44;
          }
        }
        else
        {
          a1 = v127;
          if (!v67)
          {
            *(_QWORD *)v62 = *(_QWORD *)v63;
            v62[2] = v63[2];
            *((_QWORD *)v62 + 2) = *((_QWORD *)v63 + 2);
            swift_bridgeObjectRelease();
            *((_QWORD *)v62 + 3) = *((_QWORD *)v63 + 3);
            v62[8] = v63[8];
            v98 = *(int *)(v64 + 68);
            v99 = (_DWORD *)((char *)v62 + v98);
            v100 = (_DWORD *)((char *)v63 + v98);
            v101 = _s13NodePlacementV12TemplateInfoVMa(0);
            __dstc = *(_QWORD **)(v101 - 8);
            v102 = (uint64_t (*)(_DWORD *, uint64_t, uint64_t))__dstc[6];
            v103 = v102(v99, 1, v101);
            __srcc = v100;
            v104 = v102(v100, 1, v101);
            if (!v103)
            {
              a1 = v127;
              if (v104)
              {
                sub_24B7B2E38((uint64_t)v99, _s13NodePlacementV12TemplateInfoVMa);
                v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
                memcpy(v99, __srcc, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
              }
              else
              {
                *v99 = *__srcc;
                v108 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
                v108((char *)v99 + *(int *)(v101 + 24), (char *)__srcc + *(int *)(v101 + 24), v10);
                v108((char *)v99 + *(int *)(v101 + 28), (char *)__srcc + *(int *)(v101 + 28), v10);
              }
              goto LABEL_44;
            }
            if (!v104)
            {
              *v99 = *v100;
              v107 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
              v107((char *)v99 + *(int *)(v101 + 24), (char *)v100 + *(int *)(v101 + 24), v10);
              v107((char *)v99 + *(int *)(v101 + 28), (char *)v100 + *(int *)(v101 + 28), v10);
              ((void (*)(_DWORD *, _QWORD, uint64_t, uint64_t))__dstc[7])(v99, 0, 1, v101);
              goto LABEL_25;
            }
            v53 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840) - 8) + 64);
            v54 = v99;
            v55 = v100;
LABEL_24:
            memcpy(v54, v55, v53);
LABEL_25:
            a1 = v127;
LABEL_44:
            v89 = matched[14];
            v90 = v17 + v89;
            v91 = v18 + v89;
            *(_QWORD *)v90 = *(_QWORD *)v91;
            *(_BYTE *)(v90 + 8) = *(_BYTE *)(v91 + 8);
            v92 = matched[15];
            v93 = (_QWORD *)(v17 + v92);
            v94 = (uint64_t *)(v18 + v92);
            v96 = *v94;
            v95 = v94[1];
            *v93 = v96;
            v93[1] = v95;
            swift_bridgeObjectRelease();
            *(_QWORD *)(v17 + matched[16]) = *(_QWORD *)(v18 + matched[16]);
            swift_bridgeObjectRelease();
            return a1;
          }
          sub_24B7B2E38((uint64_t)v62, _s13NodePlacementVMa);
        }
        v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
        goto LABEL_44;
      }
      sub_24B7B2E38(v32, _s18MatchNodePlacementVMa);
    }
    v53 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B0920) - 8) + 64);
    v54 = (void *)v32;
    v55 = v33;
    goto LABEL_24;
  }
  if (v23)
  {
LABEL_13:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0938);
    memcpy((void *)v17, (const void *)v18, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    return a1;
  }
  __src = (_QWORD *)v11;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
  *(_BYTE *)(v17 + 24) = *(_BYTE *)(v18 + 24);
  *(_DWORD *)(v17 + 25) = *(_DWORD *)(v18 + 25);
  *(_WORD *)(v17 + 29) = *(_WORD *)(v18 + 29);
  *(_BYTE *)(v17 + 31) = *(_BYTE *)(v18 + 31);
  v24 = matched[13];
  v25 = (_DWORD *)(v17 + v24);
  v26 = (_DWORD *)(v18 + v24);
  v27 = _s18MatchNodePlacementVMa(0);
  v28 = *(unsigned int (***)(_DWORD *, uint64_t, uint64_t))(v27 - 8);
  if (v28[6](v26, 1, v27))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0920);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v116 = v27;
    __dsta = v28;
    v128 = a1;
    *v25 = *v26;
    *((_WORD *)v25 + 2) = *((_WORD *)v26 + 2);
    v25[2] = v26[2];
    *((_BYTE *)v25 + 12) = *((_BYTE *)v26 + 12);
    v45 = *(int *)(v27 + 28);
    v46 = (_QWORD *)((char *)v25 + v45);
    v47 = (_QWORD *)((char *)v26 + v45);
    v48 = _s13NodePlacementVMa(0);
    v49 = *(_QWORD *)(v48 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
    {
      v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      a1 = v128;
      v52 = v116;
      v51 = (void (**)(_DWORD *, _QWORD, uint64_t, _QWORD))__dsta;
    }
    else
    {
      v112 = v46;
      v114 = v49;
      *v46 = *v47;
      *((_DWORD *)v46 + 2) = *((_DWORD *)v47 + 2);
      v46[2] = v47[2];
      v46[3] = v47[3];
      *((_DWORD *)v46 + 8) = *((_DWORD *)v47 + 8);
      v56 = *(int *)(v48 + 68);
      v57 = (_DWORD *)((char *)v46 + v56);
      v58 = (_DWORD *)((char *)v47 + v56);
      v59 = _s13NodePlacementV12TemplateInfoVMa(0);
      v110 = *(_QWORD *)(v59 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v110 + 48))(v58, 1, v59))
      {
        v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        *v57 = *v58;
        v79 = *(int *)(v59 + 24);
        v80 = (char *)v57 + v79;
        v81 = (char *)v58 + v79;
        v109 = (char *)v58;
        v82 = (char *)v57;
        v83 = (void (*)(char *, char *, uint64_t))__src[4];
        v83(v80, v81, v10);
        v83(&v82[*(int *)(v59 + 28)], &v109[*(int *)(v59 + 28)], v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v82, 0, 1, v59);
      }
      a1 = v128;
      v52 = v116;
      v51 = (void (**)(_DWORD *, _QWORD, uint64_t, _QWORD))__dsta;
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v114 + 56))(v112, 0, 1, v48);
    }
    v51[7](v25, 0, 1, v52);
  }
  v84 = matched[14];
  v85 = v17 + v84;
  v86 = v18 + v84;
  *(_QWORD *)v85 = *(_QWORD *)v86;
  *(_BYTE *)(v85 + 8) = *(_BYTE *)(v86 + 8);
  *(_OWORD *)(v17 + matched[15]) = *(_OWORD *)(v18 + matched[15]);
  *(_QWORD *)(v17 + matched[16]) = *(_QWORD *)(v18 + matched[16]);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v20 + 56))(v17, 0, 1, matched);
  return a1;
}

uint64_t sub_24B7E2580()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7E258C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_24B7F3460();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0918);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0938);
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_24B7E262C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7E2638(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = sub_24B7F3460();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0918);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0938);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_24B7E26E0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_24B7F3460();
  if (v0 <= 0x3F)
  {
    sub_24B7B225C(319, qword_2579B1050, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
    if (v1 <= 0x3F)
    {
      sub_24B7B225C(319, qword_2579B12A0, (void (*)(uint64_t))_s8SequenceV5MatchV6ResultV7DetailsVMa);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

_QWORD *sub_24B7E27A0(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  _DWORD *v8;
  _DWORD *v9;
  uint64_t matched;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(_DWORD *, uint64_t, uint64_t);
  char *v38;
  uint64_t v39;
  _DWORD *__dst;
  _DWORD *v41;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    *(_DWORD *)(a1 + 25) = *(_DWORD *)((char *)a2 + 25);
    *(_WORD *)(a1 + 29) = *(_WORD *)((char *)a2 + 29);
    *(_BYTE *)(a1 + 31) = *((_BYTE *)a2 + 31);
    v7 = a3[13];
    v8 = (_DWORD *)(a1 + v7);
    v9 = (_DWORD *)((char *)a2 + v7);
    matched = _s18MatchNodePlacementVMa(0);
    v11 = *(_QWORD *)(matched - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, matched))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0920);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      *v8 = *v9;
      *((_WORD *)v8 + 2) = *((_WORD *)v9 + 2);
      v8[2] = v9[2];
      *((_BYTE *)v8 + 12) = *((_BYTE *)v9 + 12);
      v14 = *(int *)(matched + 28);
      v15 = (_QWORD *)((char *)v8 + v14);
      v16 = (_QWORD *)((char *)v9 + v14);
      v17 = _s13NodePlacementVMa(0);
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        v36 = v18;
        *v15 = *v16;
        *((_DWORD *)v15 + 2) = *((_DWORD *)v16 + 2);
        v15[2] = v16[2];
        v15[3] = v16[3];
        *((_DWORD *)v15 + 8) = *((_DWORD *)v16 + 8);
        v20 = *(int *)(v17 + 68);
        __dst = (_DWORD *)((char *)v15 + v20);
        v41 = (_DWORD *)((char *)v16 + v20);
        v21 = _s13NodePlacementV12TemplateInfoVMa(0);
        v35 = *(_QWORD *)(v21 - 8);
        v37 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v35 + 48);
        swift_bridgeObjectRetain();
        v39 = v21;
        if (v37(v41, 1, v21))
        {
          v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
          memcpy(__dst, v41, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          *__dst = *v41;
          v23 = *(int *)(v21 + 24);
          v38 = (char *)__dst + v23;
          v34 = (char *)v41 + v23;
          v24 = sub_24B7F3490();
          v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
          v25(v38, v34, v24);
          v25((char *)__dst + *(int *)(v39 + 28), (char *)v41 + *(int *)(v39 + 28), v24);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v35 + 56))(__dst, 0, 1, v39);
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v15, 0, 1, v17);
      }
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, matched);
    }
    v26 = a3[14];
    v27 = a3[15];
    v28 = (char *)v4 + v26;
    v29 = (uint64_t)a2 + v26;
    *(_QWORD *)v28 = *(_QWORD *)v29;
    v28[8] = *(_BYTE *)(v29 + 8);
    v30 = (_QWORD *)((char *)v4 + v27);
    v31 = (uint64_t *)((char *)a2 + v27);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    *(_QWORD *)((char *)v4 + a3[16]) = *(uint64_t *)((char *)a2 + a3[16]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_24B7E2AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t matched;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  v2 = a1 + *(int *)(a2 + 52);
  matched = _s18MatchNodePlacementVMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(matched - 8) + 48))(v2, 1, matched))
  {
    v4 = v2 + *(int *)(matched + 28);
    v5 = _s13NodePlacementVMa(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
    {
      swift_bridgeObjectRelease();
      v6 = v4 + *(int *)(v5 + 68);
      v7 = _s13NodePlacementV12TemplateInfoVMa(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
      {
        v8 = v6 + *(int *)(v7 + 24);
        v9 = sub_24B7F3490();
        v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
        v10(v8, v9);
        v10(v6 + *(int *)(v7 + 28), v9);
      }
    }
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24B7E2BE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t matched;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  char *v32;
  uint64_t v33;
  unsigned int (*v34)(_DWORD *, uint64_t, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _DWORD *v38;
  _DWORD *__dst;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_DWORD *)(a1 + 25) = *(_DWORD *)(a2 + 25);
  *(_WORD *)(a1 + 29) = *(_WORD *)(a2 + 29);
  *(_BYTE *)(a1 + 31) = *(_BYTE *)(a2 + 31);
  v6 = a3[13];
  v7 = (_DWORD *)(a1 + v6);
  v8 = (_DWORD *)(a2 + v6);
  matched = _s18MatchNodePlacementVMa(0);
  v10 = *(_QWORD *)(matched - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, matched))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0920);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    *((_WORD *)v7 + 2) = *((_WORD *)v8 + 2);
    v7[2] = v8[2];
    *((_BYTE *)v7 + 12) = *((_BYTE *)v8 + 12);
    v12 = *(int *)(matched + 28);
    v13 = (_QWORD *)((char *)v7 + v12);
    v14 = (_QWORD *)((char *)v8 + v12);
    v15 = _s13NodePlacementVMa(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v36 = v16;
      *v13 = *v14;
      *((_DWORD *)v13 + 2) = *((_DWORD *)v14 + 2);
      v13[2] = v14[2];
      v13[3] = v14[3];
      *((_DWORD *)v13 + 8) = *((_DWORD *)v14 + 8);
      v18 = *(int *)(v15 + 68);
      v38 = (_DWORD *)((char *)v14 + v18);
      __dst = (_DWORD *)((char *)v13 + v18);
      v19 = _s13NodePlacementV12TemplateInfoVMa(0);
      v33 = *(_QWORD *)(v19 - 8);
      v34 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v33 + 48);
      swift_bridgeObjectRetain();
      v37 = v19;
      if (v34(v38, 1, v19))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
        memcpy(__dst, v38, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        *__dst = *v38;
        v21 = *(int *)(v19 + 24);
        v35 = (char *)__dst + v21;
        v32 = (char *)v38 + v21;
        v22 = sub_24B7F3490();
        v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
        v23(v35, v32, v22);
        v23((char *)__dst + *(int *)(v37 + 28), (char *)v38 + *(int *)(v37 + 28), v22);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 1, v37);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v13, 0, 1, v15);
    }
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, matched);
  }
  v24 = a3[14];
  v25 = a3[15];
  v26 = a1 + v24;
  v27 = a2 + v24;
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
  v28 = (_QWORD *)(a1 + v25);
  v29 = (_QWORD *)(a2 + v25);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24B7E2EDC(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t matched;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  _WORD *v18;
  _WORD *v19;
  uint64_t v20;
  uint64_t v21;
  size_t v22;
  char *v23;
  char *v24;
  size_t v25;
  void *v26;
  char *v27;
  int v28;
  uint64_t v29;
  _WORD *v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(char *, uint64_t, uint64_t);
  int v57;
  int v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  char *v70;
  char *v71;
  uint64_t v72;
  unsigned int (*v73)(_WORD *, uint64_t, uint64_t);
  void (*v74)(char *, char *, uint64_t);
  char *v75;
  uint64_t v76;
  char *v77;
  _WORD *__dst;
  void (*__dsta)(char *, char *, uint64_t);
  uint64_t v80;
  char *v81;
  _WORD *v82;
  char *v83;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 25) = *((_BYTE *)a2 + 25);
  *(_BYTE *)(a1 + 26) = *((_BYTE *)a2 + 26);
  *(_BYTE *)(a1 + 27) = *((_BYTE *)a2 + 27);
  *(_BYTE *)(a1 + 28) = *((_BYTE *)a2 + 28);
  *(_BYTE *)(a1 + 29) = *((_BYTE *)a2 + 29);
  *(_BYTE *)(a1 + 30) = *((_BYTE *)a2 + 30);
  *(_BYTE *)(a1 + 31) = *((_BYTE *)a2 + 31);
  v8 = a3[13];
  v9 = a1 + v8;
  v10 = (uint64_t)a2 + v8;
  matched = _s18MatchNodePlacementVMa(0);
  v12 = *(_QWORD *)(matched - 8);
  v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, matched);
  v15 = v13(v10, 1, matched);
  if (v14)
  {
    if (!v15)
    {
      *(_DWORD *)v9 = *(_DWORD *)v10;
      *(_WORD *)(v9 + 4) = *(_WORD *)(v10 + 4);
      v16 = *(_DWORD *)(v10 + 8);
      *(_BYTE *)(v9 + 12) = *(_BYTE *)(v10 + 12);
      *(_DWORD *)(v9 + 8) = v16;
      v17 = *(int *)(matched + 28);
      v18 = (_WORD *)(v9 + v17);
      v19 = (_WORD *)(v10 + v17);
      v20 = _s13NodePlacementVMa(0);
      v21 = *(_QWORD *)(v20 - 8);
      if (!(*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        v76 = v21;
        *v18 = *v19;
        v18[1] = v19[1];
        v18[2] = v19[2];
        v18[3] = v19[3];
        v18[4] = v19[4];
        v18[5] = v19[5];
        *((_QWORD *)v18 + 2) = *((_QWORD *)v19 + 2);
        v18[12] = v19[12];
        v18[13] = v19[13];
        v18[14] = v19[14];
        v18[15] = v19[15];
        v18[16] = v19[16];
        v18[17] = v19[17];
        v38 = *(int *)(v20 + 68);
        __dst = (_WORD *)((char *)v18 + v38);
        v82 = (_WORD *)((char *)v19 + v38);
        v39 = _s13NodePlacementV12TemplateInfoVMa(0);
        v72 = *(_QWORD *)(v39 - 8);
        v73 = *(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v72 + 48);
        swift_bridgeObjectRetain();
        if (v73(v82, 1, v39))
        {
          v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
          memcpy(__dst, v82, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          *__dst = *v82;
          __dst[1] = v82[1];
          v41 = *(int *)(v39 + 24);
          v70 = (char *)v82 + v41;
          v71 = (char *)__dst + v41;
          v42 = sub_24B7F3490();
          v74 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16);
          v74(v71, v70, v42);
          v74((char *)__dst + *(int *)(v39 + 28), (char *)v82 + *(int *)(v39 + 28), v42);
          (*(void (**)(_WORD *, _QWORD, uint64_t, uint64_t))(v72 + 56))(__dst, 0, 1, v39);
        }
        (*(void (**)(_WORD *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v18, 0, 1, v20);
        goto LABEL_21;
      }
      v22 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490) - 8) + 64);
      v23 = (char *)v18;
      v24 = (char *)v19;
      goto LABEL_5;
    }
    goto LABEL_8;
  }
  if (v15)
  {
    sub_24B7B2E38(v9, _s18MatchNodePlacementVMa);
LABEL_8:
    v25 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B0920) - 8) + 64);
    v26 = (void *)v9;
    v27 = (char *)v10;
    goto LABEL_9;
  }
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_WORD *)(v9 + 4) = *(_WORD *)(v10 + 4);
  v28 = *(_DWORD *)(v10 + 8);
  *(_BYTE *)(v9 + 12) = *(_BYTE *)(v10 + 12);
  *(_DWORD *)(v9 + 8) = v28;
  v29 = *(int *)(matched + 28);
  v9 += v29;
  v30 = (_WORD *)(v10 + v29);
  matched = _s13NodePlacementVMa(0);
  v12 = *(_QWORD *)(matched - 8);
  v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  v32 = v31(v9, 1, matched);
  v33 = v31((uint64_t)v30, 1, matched);
  if (v32)
  {
    if (!v33)
    {
      *(_WORD *)v9 = *v30;
      *(_WORD *)(v9 + 2) = v30[1];
      *(_WORD *)(v9 + 4) = v30[2];
      *(_WORD *)(v9 + 6) = v30[3];
      *(_WORD *)(v9 + 8) = v30[4];
      *(_WORD *)(v9 + 10) = v30[5];
      *(_QWORD *)(v9 + 16) = *((_QWORD *)v30 + 2);
      *(_WORD *)(v9 + 24) = v30[12];
      *(_WORD *)(v9 + 26) = v30[13];
      *(_WORD *)(v9 + 28) = v30[14];
      *(_WORD *)(v9 + 30) = v30[15];
      *(_WORD *)(v9 + 32) = v30[16];
      *(_WORD *)(v9 + 34) = v30[17];
      v34 = *(int *)(matched + 68);
      v81 = (char *)(v9 + v34);
      v35 = (char *)v30 + v34;
      v36 = _s13NodePlacementV12TemplateInfoVMa(0);
      v80 = *(_QWORD *)(v36 - 8);
      v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48);
      swift_bridgeObjectRetain();
      if (!v37(v35, 1, v36))
      {
        *(_WORD *)v81 = *(_WORD *)v35;
        *((_WORD *)v81 + 1) = *((_WORD *)v35 + 1);
        v63 = *(int *)(v36 + 24);
        v75 = &v35[v63];
        v77 = &v81[v63];
        v64 = sub_24B7F3490();
        __dsta = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16);
        __dsta(v77, v75, v64);
        __dsta(&v81[*(int *)(v36 + 28)], &v35[*(int *)(v36 + 28)], v64);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v81, 0, 1, v36);
        goto LABEL_21;
      }
      v22 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840) - 8) + 64);
      v23 = v81;
      v24 = v35;
LABEL_5:
      memcpy(v23, v24, v22);
LABEL_21:
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, matched);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v33)
    {
      *(_WORD *)v9 = *v30;
      *(_WORD *)(v9 + 2) = v30[1];
      *(_WORD *)(v9 + 4) = v30[2];
      *(_WORD *)(v9 + 6) = v30[3];
      *(_WORD *)(v9 + 8) = v30[4];
      *(_WORD *)(v9 + 10) = v30[5];
      *(_QWORD *)(v9 + 16) = *((_QWORD *)v30 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 24) = v30[12];
      *(_WORD *)(v9 + 26) = v30[13];
      *(_WORD *)(v9 + 28) = v30[14];
      *(_WORD *)(v9 + 30) = v30[15];
      *(_WORD *)(v9 + 32) = v30[16];
      *(_WORD *)(v9 + 34) = v30[17];
      v51 = *(int *)(matched + 68);
      v52 = (char *)(v9 + v51);
      v53 = (char *)v30 + v51;
      v54 = _s13NodePlacementV12TemplateInfoVMa(0);
      v55 = *(_QWORD *)(v54 - 8);
      v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
      v57 = v56(v52, 1, v54);
      v58 = v56(v53, 1, v54);
      if (v57)
      {
        if (!v58)
        {
          *(_WORD *)v52 = *(_WORD *)v53;
          *((_WORD *)v52 + 1) = *((_WORD *)v53 + 1);
          v59 = *(int *)(v54 + 24);
          v83 = &v52[v59];
          v60 = &v53[v59];
          v61 = sub_24B7F3490();
          v62 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16);
          v62(v83, v60, v61);
          v62(&v52[*(int *)(v54 + 28)], &v53[*(int *)(v54 + 28)], v61);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
          goto LABEL_22;
        }
      }
      else
      {
        if (!v58)
        {
          *(_WORD *)v52 = *(_WORD *)v53;
          *((_WORD *)v52 + 1) = *((_WORD *)v53 + 1);
          v65 = *(int *)(v54 + 24);
          v66 = &v52[v65];
          v67 = &v53[v65];
          v68 = sub_24B7F3490();
          v69 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 24);
          v69(v66, v67, v68);
          v69(&v52[*(int *)(v54 + 28)], &v53[*(int *)(v54 + 28)], v68);
          goto LABEL_22;
        }
        sub_24B7B2E38((uint64_t)v52, _s13NodePlacementV12TemplateInfoVMa);
      }
      v25 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840) - 8) + 64);
      v26 = v52;
      v27 = v53;
      goto LABEL_9;
    }
    sub_24B7B2E38(v9, _s13NodePlacementVMa);
  }
  v25 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490) - 8) + 64);
  v26 = (void *)v9;
  v27 = (char *)v30;
LABEL_9:
  memcpy(v26, v27, v25);
LABEL_22:
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = (uint64_t *)((char *)a2 + v43);
  v46 = *v45;
  *(_BYTE *)(v44 + 8) = *((_BYTE *)v45 + 8);
  *(_QWORD *)v44 = v46;
  v47 = a3[15];
  v48 = (_QWORD *)(a1 + v47);
  v49 = (uint64_t *)((char *)a2 + v47);
  *v48 = *v49;
  v48[1] = v49[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[16]) = *(uint64_t *)((char *)a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24B7E362C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t matched;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _DWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char *v29;
  char *v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  _DWORD *__dst;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_DWORD *)(a1 + 25) = *(_DWORD *)(a2 + 25);
  *(_WORD *)(a1 + 29) = *(_WORD *)(a2 + 29);
  *(_BYTE *)(a1 + 31) = *(_BYTE *)(a2 + 31);
  v6 = a3[13];
  v7 = (_DWORD *)(a1 + v6);
  v8 = (_DWORD *)(a2 + v6);
  matched = _s18MatchNodePlacementVMa(0);
  v10 = *(_QWORD *)(matched - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, matched))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0920);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    *((_WORD *)v7 + 2) = *((_WORD *)v8 + 2);
    v7[2] = v8[2];
    *((_BYTE *)v7 + 12) = *((_BYTE *)v8 + 12);
    v12 = *(int *)(matched + 28);
    v13 = (_QWORD *)((char *)v7 + v12);
    v14 = (_QWORD *)((char *)v8 + v12);
    v15 = _s13NodePlacementVMa(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      *v13 = *v14;
      *((_DWORD *)v13 + 2) = *((_DWORD *)v14 + 2);
      v13[2] = v14[2];
      v13[3] = v14[3];
      *((_DWORD *)v13 + 8) = *((_DWORD *)v14 + 8);
      v18 = *(int *)(v15 + 68);
      v33 = v16;
      __dst = (_DWORD *)((char *)v13 + v18);
      v19 = (_DWORD *)((char *)v14 + v18);
      v20 = _s13NodePlacementV12TemplateInfoVMa(0);
      v32 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v32 + 48))(v19, 1, v20))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
        memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        *__dst = *v19;
        v22 = *(int *)(v20 + 24);
        v29 = (char *)v19 + v22;
        v30 = (char *)__dst + v22;
        v28 = sub_24B7F3490();
        v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32);
        v31(v30, v29, v28);
        v31((char *)__dst + *(int *)(v20 + 28), (char *)v19 + *(int *)(v20 + 28), v28);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v20);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v13, 0, 1, v15);
    }
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, matched);
  }
  v23 = a3[14];
  v24 = a3[15];
  v25 = a1 + v23;
  v26 = a2 + v23;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
  *(_OWORD *)(a1 + v24) = *(_OWORD *)(a2 + v24);
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  return a1;
}

uint64_t sub_24B7E38E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t matched;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, _QWORD, uint64_t, uint64_t);
  size_t v21;
  void *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  _DWORD *v31;
  _DWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _DWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t, uint64_t);
  int v47;
  int v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  uint64_t v70;
  char *v71;
  char *v72;
  void (*v73)(char *, char *, uint64_t);
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  _DWORD *__dst;
  char *__dsta;
  char *__dstb;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_DWORD *)(a1 + 25) = *(_DWORD *)(a2 + 25);
  *(_WORD *)(a1 + 29) = *(_WORD *)(a2 + 29);
  *(_BYTE *)(a1 + 31) = *(_BYTE *)(a2 + 31);
  v6 = a3[13];
  v7 = a1 + v6;
  v8 = a2 + v6;
  matched = _s18MatchNodePlacementVMa(0);
  v10 = *(_QWORD *)(matched - 8);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, matched);
  v13 = v11(v8, 1, matched);
  if (v12)
  {
    if (!v13)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      *(_WORD *)(v7 + 4) = *(_WORD *)(v8 + 4);
      *(_DWORD *)(v7 + 8) = *(_DWORD *)(v8 + 8);
      *(_BYTE *)(v7 + 12) = *(_BYTE *)(v8 + 12);
      v14 = *(int *)(matched + 28);
      v15 = (_QWORD *)(v7 + v14);
      v16 = (_QWORD *)(v8 + v14);
      v17 = _s13NodePlacementVMa(0);
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        v20 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56);
      }
      else
      {
        *v15 = *v16;
        *((_DWORD *)v15 + 2) = *((_DWORD *)v16 + 2);
        v15[2] = v16[2];
        v15[3] = v16[3];
        *((_DWORD *)v15 + 8) = *((_DWORD *)v16 + 8);
        v36 = *(int *)(v17 + 68);
        v77 = v18;
        __dst = (_DWORD *)((char *)v15 + v36);
        v37 = (_DWORD *)((char *)v16 + v36);
        v38 = _s13NodePlacementV12TemplateInfoVMa(0);
        v75 = *(_QWORD *)(v38 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v75 + 48))(v37, 1, v38))
        {
          v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
          memcpy(__dst, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
        }
        else
        {
          *__dst = *v37;
          v40 = *(int *)(v38 + 24);
          v71 = (char *)v37 + v40;
          v72 = (char *)__dst + v40;
          v70 = sub_24B7F3490();
          v73 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32);
          v73(v72, v71, v70);
          v73((char *)__dst + *(int *)(v38 + 28), (char *)v37 + *(int *)(v38 + 28), v70);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v75 + 56))(__dst, 0, 1, v38);
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v15, 0, 1, v17);
        v20 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56);
      }
LABEL_25:
      v20(v7, 0, 1, matched);
      goto LABEL_26;
    }
    goto LABEL_7;
  }
  if (v13)
  {
    sub_24B7B2E38(v7, _s18MatchNodePlacementVMa);
LABEL_7:
    v21 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B0920) - 8) + 64);
    v22 = (void *)v7;
    v23 = (char *)v8;
    goto LABEL_8;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  *(_WORD *)(v7 + 4) = *(_WORD *)(v8 + 4);
  *(_DWORD *)(v7 + 8) = *(_DWORD *)(v8 + 8);
  *(_BYTE *)(v7 + 12) = *(_BYTE *)(v8 + 12);
  v24 = *(int *)(matched + 28);
  v7 += v24;
  v25 = v8 + v24;
  matched = _s13NodePlacementVMa(0);
  v26 = *(_QWORD *)(matched - 8);
  v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  v28 = v27(v7, 1, matched);
  v29 = v27(v25, 1, matched);
  if (v28)
  {
    if (!v29)
    {
      *(_QWORD *)v7 = *(_QWORD *)v25;
      *(_DWORD *)(v7 + 8) = *(_DWORD *)(v25 + 8);
      *(_QWORD *)(v7 + 16) = *(_QWORD *)(v25 + 16);
      *(_QWORD *)(v7 + 24) = *(_QWORD *)(v25 + 24);
      *(_DWORD *)(v7 + 32) = *(_DWORD *)(v25 + 32);
      v30 = *(int *)(matched + 68);
      v31 = (_DWORD *)(v7 + v30);
      v32 = (_DWORD *)(v25 + v30);
      v33 = _s13NodePlacementV12TemplateInfoVMa(0);
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        *v31 = *v32;
        v53 = *(int *)(v33 + 24);
        v74 = (char *)v32 + v53;
        v76 = (char *)v31 + v53;
        v78 = v34;
        __dstb = (char *)v31;
        v54 = sub_24B7F3490();
        v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32);
        v55(v76, v74, v54);
        v55(&__dstb[*(int *)(v33 + 28)], (char *)v32 + *(int *)(v33 + 28), v54);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(__dstb, 0, 1, v33);
      }
      v20 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56);
      goto LABEL_25;
    }
    goto LABEL_17;
  }
  if (v29)
  {
    sub_24B7B2E38(v7, _s13NodePlacementVMa);
LABEL_17:
    v21 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490) - 8) + 64);
    v22 = (void *)v7;
    v23 = (char *)v25;
    goto LABEL_8;
  }
  *(_QWORD *)v7 = *(_QWORD *)v25;
  *(_DWORD *)(v7 + 8) = *(_DWORD *)(v25 + 8);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v25 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v7 + 24) = *(_QWORD *)(v25 + 24);
  *(_DWORD *)(v7 + 32) = *(_DWORD *)(v25 + 32);
  v41 = *(int *)(matched + 68);
  v42 = (char *)(v7 + v41);
  v43 = (char *)(v25 + v41);
  v44 = _s13NodePlacementV12TemplateInfoVMa(0);
  v45 = *(_QWORD *)(v44 - 8);
  v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
  v47 = v46(v42, 1, v44);
  v48 = v46(v43, 1, v44);
  if (v47)
  {
    if (!v48)
    {
      *(_DWORD *)v42 = *(_DWORD *)v43;
      v49 = *(int *)(v44 + 24);
      __dsta = &v42[v49];
      v50 = &v43[v49];
      v51 = sub_24B7F3490();
      v52 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32);
      v52(__dsta, v50, v51);
      v52(&v42[*(int *)(v44 + 28)], &v43[*(int *)(v44 + 28)], v51);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
      goto LABEL_26;
    }
  }
  else
  {
    if (!v48)
    {
      *(_DWORD *)v42 = *(_DWORD *)v43;
      v65 = *(int *)(v44 + 24);
      v66 = &v42[v65];
      v67 = &v43[v65];
      v68 = sub_24B7F3490();
      v69 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 40);
      v69(v66, v67, v68);
      v69(&v42[*(int *)(v44 + 28)], &v43[*(int *)(v44 + 28)], v68);
      goto LABEL_26;
    }
    sub_24B7B2E38((uint64_t)v42, _s13NodePlacementV12TemplateInfoVMa);
  }
  v21 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840) - 8) + 64);
  v22 = v42;
  v23 = v43;
LABEL_8:
  memcpy(v22, v23, v21);
LABEL_26:
  v56 = a3[14];
  v57 = a3[15];
  v58 = a1 + v56;
  v59 = a2 + v56;
  *(_QWORD *)v58 = *(_QWORD *)v59;
  *(_BYTE *)(v58 + 8) = *(_BYTE *)(v59 + 8);
  v60 = (_QWORD *)(a1 + v57);
  v61 = (uint64_t *)(a2 + v57);
  v63 = *v61;
  v62 = v61[1];
  *v60 = v63;
  v60[1] = v62;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24B7E3EE8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7E3EF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0920);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 52), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 60) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_24B7E3F88()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7E3F94(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0920);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 52), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 60) + 8) = a2;
  return result;
}

void sub_24B7E4018()
{
  unint64_t v0;

  sub_24B7B225C(319, qword_2579B1330, (void (*)(uint64_t))_s18MatchNodePlacementVMa);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t _s8SequenceV12FingerDetectVwxx(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 16);
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s8SequenceV12FingerDetectVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s8SequenceV12FingerDetectVwca(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *((_QWORD *)a2 + 2);
  if (*(_QWORD *)(a1 + 16) == 1)
  {
    if (v4 == 1)
    {
      v5 = *a2;
      *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
      *(_OWORD *)a1 = v5;
    }
    else
    {
      v7 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
      *(_QWORD *)a1 = v7;
      *(_BYTE *)(a1 + 9) = *((_BYTE *)a2 + 9);
      *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v4 == 1)
  {
    sub_24B7DA134(a1);
    v6 = *((_QWORD *)a2 + 2);
    *(_OWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 16) = v6;
  }
  else
  {
    v8 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)a1 = v8;
    *(_BYTE *)(a1 + 9) = *((_BYTE *)a2 + 9);
    *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t _s8SequenceV12FingerDetectVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (*(_QWORD *)(a1 + 16) != 1)
  {
    v4 = *(_QWORD *)(a2 + 16);
    if (v4 != 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = v4;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_24B7DA134(a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t _s8SequenceV12FingerDetectVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFD && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = __OFSUB__(v4, 1);
  v6 = v4 - 1;
  if (v6 < 0 != v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t _s8SequenceV12FingerDetectVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2 + 1;
  }
  return result;
}

ValueMetadata *_s8SequenceV12FingerDetectVMa()
{
  return &_s8SequenceV12FingerDetectVN;
}

uint64_t _s8SequenceV12FingerDetectV7OptionsVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s8SequenceV12FingerDetectV7OptionsVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s8SequenceV12FingerDetectV7OptionsVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 9) = *((_BYTE *)a2 + 9);
  *(_QWORD *)(a1 + 16) = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8SequenceV12FingerDetectV7OptionsVwta(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8SequenceV12FingerDetectV7OptionsVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s8SequenceV12FingerDetectV7OptionsVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *_s8SequenceV12FingerDetectV7OptionsVMa()
{
  return &_s8SequenceV12FingerDetectV7OptionsVN;
}

uint64_t _s8SequenceV21ImageProcessingResultVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s8SequenceV21ImageProcessingResultVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_OWORD *)(a1 + 12) = *(_OWORD *)(a2 + 12);
  *(_QWORD *)(a1 + 28) = *(_QWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  v3 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s8SequenceV21ImageProcessingResultVwca(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8SequenceV21ImageProcessingResultVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_QWORD *)(a1 + 12) = *(_QWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  v3 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8SequenceV21ImageProcessingResultVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 48);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s8SequenceV21ImageProcessingResultVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)(result + 48) = a2;
  }
  return result;
}

ValueMetadata *_s8SequenceV21ImageProcessingResultVMa()
{
  return &_s8SequenceV21ImageProcessingResultVN;
}

uint64_t _s8SequenceV21ImageProcessingResultV7BuiltinVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s8SequenceV21ImageProcessingResultV7BuiltinVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s8SequenceV21ImageProcessingResultV7BuiltinVwca(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s8SequenceV21ImageProcessingResultV7BuiltinVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8SequenceV21ImageProcessingResultV7BuiltinVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s8SequenceV21ImageProcessingResultV7BuiltinVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s8SequenceV21ImageProcessingResultV7BuiltinVMa()
{
  return &_s8SequenceV21ImageProcessingResultV7BuiltinVN;
}

_QWORD *__swift_memcpy14_2(_QWORD *result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_QWORD *)((char *)result + 6) = *(uint64_t *)((char *)a2 + 6);
  *result = v2;
  return result;
}

uint64_t _s8SequenceV18TemplateGraphStateVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 14))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s8SequenceV18TemplateGraphStateVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_WORD *)(result + 12) = 0;
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 14) = v3;
  return result;
}

ValueMetadata *_s8SequenceV18TemplateGraphStateVMa()
{
  return &_s8SequenceV18TemplateGraphStateVN;
}

uint64_t *sub_24B7E4944(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _DWORD *v27;
  uint64_t v28;
  unsigned int (*v29)(_DWORD *, uint64_t, uint64_t);
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v36;
  uint64_t v37;
  _DWORD *__dst;
  uint64_t v39;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_24B7F3460();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(_DWORD *)((char *)a1 + a3[5]) = *(_DWORD *)((char *)a2 + a3[5]);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_24B7F3490();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v15 = a3[7];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = *((_QWORD *)v17 + 6);
    if (v18 == 1)
    {
      v19 = *((_OWORD *)v17 + 1);
      *(_OWORD *)v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v19;
      *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
      *((_QWORD *)v16 + 6) = *((_QWORD *)v17 + 6);
    }
    else
    {
      *v16 = *v17;
      *((_DWORD *)v16 + 1) = *((_DWORD *)v17 + 1);
      *((_WORD *)v16 + 4) = *((_WORD *)v17 + 4);
      *(_OWORD *)(v16 + 12) = *(_OWORD *)(v17 + 12);
      *(_QWORD *)(v16 + 28) = *(_QWORD *)(v17 + 28);
      *((_DWORD *)v16 + 9) = *((_DWORD *)v17 + 9);
      *((_QWORD *)v16 + 5) = *((_QWORD *)v17 + 5);
      *((_QWORD *)v16 + 6) = v18;
      swift_bridgeObjectRetain();
    }
    v20 = a3[8];
    v21 = (uint64_t *)((char *)a1 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = _s13NodePlacementVMa(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v37 = v12;
      *v21 = *v22;
      *((_DWORD *)v21 + 2) = *((_DWORD *)v22 + 2);
      v21[2] = v22[2];
      v21[3] = v22[3];
      *((_DWORD *)v21 + 8) = *((_DWORD *)v22 + 8);
      v26 = *(int *)(v23 + 68);
      __dst = (_DWORD *)((char *)v21 + v26);
      v39 = v24;
      v27 = (_DWORD *)((char *)v22 + v26);
      v28 = _s13NodePlacementV12TemplateInfoVMa(0);
      v36 = *(_QWORD *)(v28 - 8);
      v29 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v36 + 48);
      swift_bridgeObjectRetain();
      if (v29(v27, 1, v28))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
        memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        *__dst = *v27;
        v31 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
        v31((char *)__dst + *(int *)(v28 + 24), (char *)v27 + *(int *)(v28 + 24), v11);
        v31((char *)__dst + *(int *)(v28 + 28), (char *)v27 + *(int *)(v28 + 28), v11);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(__dst, 0, 1, v28);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v21, 0, 1, v23);
    }
    v32 = a3[9];
    v33 = (uint64_t *)((char *)a1 + v32);
    v34 = (uint64_t *)((char *)a2 + v32);
    *v33 = *v34;
    *(_QWORD *)((char *)v33 + 7) = *(_QWORD *)((char *)v34 + 7);
  }
  return a1;
}

uint64_t sub_24B7E4C58(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);

  v4 = sub_24B7F3460();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[6];
  v6 = sub_24B7F3490();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  if (*(_QWORD *)(a1 + a2[7] + 48) != 1)
    swift_bridgeObjectRelease();
  v8 = a1 + a2[8];
  v9 = _s13NodePlacementVMa(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    v11 = v8 + *(int *)(v9 + 68);
    v12 = _s13NodePlacementV12TemplateInfoVMa(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12);
    if (!(_DWORD)result)
    {
      v13 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v13(v11 + *(int *)(v12 + 24), v6);
      return ((uint64_t (*)(uint64_t, uint64_t))v13)(v11 + *(int *)(v12 + 28), v6);
    }
  }
  return result;
}

uint64_t sub_24B7E4DB0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _DWORD *v25;
  uint64_t v26;
  unsigned int (*v27)(_DWORD *, uint64_t, uint64_t);
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _DWORD *__dst;

  v6 = sub_24B7F3460();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_24B7F3490();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_QWORD *)(v15 + 48);
  if (v16 == 1)
  {
    v17 = *(_OWORD *)(v15 + 16);
    *(_OWORD *)v14 = *(_OWORD *)v15;
    *(_OWORD *)(v14 + 16) = v17;
    *(_OWORD *)(v14 + 32) = *(_OWORD *)(v15 + 32);
    *(_QWORD *)(v14 + 48) = *(_QWORD *)(v15 + 48);
  }
  else
  {
    *(_BYTE *)v14 = *(_BYTE *)v15;
    *(_DWORD *)(v14 + 4) = *(_DWORD *)(v15 + 4);
    *(_WORD *)(v14 + 8) = *(_WORD *)(v15 + 8);
    *(_OWORD *)(v14 + 12) = *(_OWORD *)(v15 + 12);
    *(_QWORD *)(v14 + 28) = *(_QWORD *)(v15 + 28);
    *(_DWORD *)(v14 + 36) = *(_DWORD *)(v15 + 36);
    *(_QWORD *)(v14 + 40) = *(_QWORD *)(v15 + 40);
    *(_QWORD *)(v14 + 48) = v16;
    swift_bridgeObjectRetain();
  }
  v18 = a3[8];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  v21 = _s13NodePlacementVMa(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v35 = v11;
    v36 = v22;
    *v19 = *v20;
    *((_DWORD *)v19 + 2) = *((_DWORD *)v20 + 2);
    v19[2] = v20[2];
    v19[3] = v20[3];
    *((_DWORD *)v19 + 8) = *((_DWORD *)v20 + 8);
    v24 = *(int *)(v21 + 68);
    __dst = (_DWORD *)((char *)v19 + v24);
    v25 = (_DWORD *)((char *)v20 + v24);
    v26 = _s13NodePlacementV12TemplateInfoVMa(0);
    v34 = *(_QWORD *)(v26 - 8);
    v27 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v34 + 48);
    swift_bridgeObjectRetain();
    if (v27(v25, 1, v26))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
      memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      *__dst = *v25;
      v29 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
      v29((char *)__dst + *(int *)(v26 + 24), (char *)v25 + *(int *)(v26 + 24), v10);
      v29((char *)__dst + *(int *)(v26 + 28), (char *)v25 + *(int *)(v26 + 28), v10);
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 1, v26);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v19, 0, 1, v21);
  }
  v30 = a3[9];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (_QWORD *)(a2 + v30);
  *v31 = *v32;
  *(_QWORD *)((char *)v31 + 7) = *(_QWORD *)((char *)v32 + 7);
  return a1;
}

uint64_t sub_24B7E5098(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;
  _WORD *v36;
  uint64_t v37;
  unsigned int (*v38)(_WORD *, uint64_t, uint64_t);
  uint64_t v39;
  size_t v40;
  void *v41;
  const void *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t);
  int v49;
  int v50;
  void (*v51)(char *, char *, uint64_t);
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  _WORD *__dst;
  uint64_t v61;

  v6 = sub_24B7F3460();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_24B7F3490();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = (__int128 *)(a2 + v16);
  v19 = *(_QWORD *)(a1 + v16 + 48);
  v20 = *(_QWORD *)(a2 + v16 + 48);
  v61 = v11;
  if (v19 == 1)
  {
    if (v20 == 1)
    {
      v21 = *v18;
      v22 = v18[1];
      v23 = v18[2];
      *(_QWORD *)(v17 + 48) = *((_QWORD *)v18 + 6);
      *(_OWORD *)(v17 + 16) = v22;
      *(_OWORD *)(v17 + 32) = v23;
      *(_OWORD *)v17 = v21;
    }
    else
    {
      *(_BYTE *)v17 = *(_BYTE *)v18;
      *(_DWORD *)(v17 + 4) = *((_DWORD *)v18 + 1);
      *(_BYTE *)(v17 + 8) = *((_BYTE *)v18 + 8);
      *(_BYTE *)(v17 + 9) = *((_BYTE *)v18 + 9);
      *(_DWORD *)(v17 + 12) = *((_DWORD *)v18 + 3);
      *(_DWORD *)(v17 + 16) = *((_DWORD *)v18 + 4);
      *(_DWORD *)(v17 + 20) = *((_DWORD *)v18 + 5);
      *(_DWORD *)(v17 + 24) = *((_DWORD *)v18 + 6);
      *(_DWORD *)(v17 + 28) = *((_DWORD *)v18 + 7);
      *(_DWORD *)(v17 + 32) = *((_DWORD *)v18 + 8);
      *(_DWORD *)(v17 + 36) = *((_DWORD *)v18 + 9);
      *(_QWORD *)(v17 + 40) = *((_QWORD *)v18 + 5);
      *(_QWORD *)(v17 + 48) = *((_QWORD *)v18 + 6);
      swift_bridgeObjectRetain();
    }
  }
  else if (v20 == 1)
  {
    sub_24B7E56B4(v17);
    v25 = v18[1];
    v24 = v18[2];
    v26 = *v18;
    *(_QWORD *)(v17 + 48) = *((_QWORD *)v18 + 6);
    *(_OWORD *)(v17 + 16) = v25;
    *(_OWORD *)(v17 + 32) = v24;
    *(_OWORD *)v17 = v26;
  }
  else
  {
    *(_BYTE *)v17 = *(_BYTE *)v18;
    *(_DWORD *)(v17 + 4) = *((_DWORD *)v18 + 1);
    *(_BYTE *)(v17 + 8) = *((_BYTE *)v18 + 8);
    *(_BYTE *)(v17 + 9) = *((_BYTE *)v18 + 9);
    *(_DWORD *)(v17 + 12) = *((_DWORD *)v18 + 3);
    *(_DWORD *)(v17 + 16) = *((_DWORD *)v18 + 4);
    *(_DWORD *)(v17 + 20) = *((_DWORD *)v18 + 5);
    *(_DWORD *)(v17 + 24) = *((_DWORD *)v18 + 6);
    *(_DWORD *)(v17 + 28) = *((_DWORD *)v18 + 7);
    *(_DWORD *)(v17 + 32) = *((_DWORD *)v18 + 8);
    *(_DWORD *)(v17 + 36) = *((_DWORD *)v18 + 9);
    *(_QWORD *)(v17 + 40) = *((_QWORD *)v18 + 5);
    *(_QWORD *)(v17 + 48) = *((_QWORD *)v18 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v27 = a3[8];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = _s13NodePlacementVMa(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 48);
  v33 = v32(v28, 1, v30);
  v34 = v32(v29, 1, v30);
  if (!v33)
  {
    if (!v34)
    {
      *(_WORD *)v28 = *(_WORD *)v29;
      *(_WORD *)(v28 + 2) = *(_WORD *)(v29 + 2);
      *(_WORD *)(v28 + 4) = *(_WORD *)(v29 + 4);
      *(_WORD *)(v28 + 6) = *(_WORD *)(v29 + 6);
      *(_WORD *)(v28 + 8) = *(_WORD *)(v29 + 8);
      *(_WORD *)(v28 + 10) = *(_WORD *)(v29 + 10);
      *(_QWORD *)(v28 + 16) = *(_QWORD *)(v29 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 24) = *(_WORD *)(v29 + 24);
      *(_WORD *)(v28 + 26) = *(_WORD *)(v29 + 26);
      *(_WORD *)(v28 + 28) = *(_WORD *)(v29 + 28);
      *(_WORD *)(v28 + 30) = *(_WORD *)(v29 + 30);
      *(_WORD *)(v28 + 32) = *(_WORD *)(v29 + 32);
      *(_WORD *)(v28 + 34) = *(_WORD *)(v29 + 34);
      v43 = *(int *)(v30 + 68);
      v44 = (char *)(v28 + v43);
      v45 = (char *)(v29 + v43);
      v46 = _s13NodePlacementV12TemplateInfoVMa(0);
      v47 = *(_QWORD *)(v46 - 8);
      v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
      v49 = v48(v44, 1, v46);
      v50 = v48(v45, 1, v46);
      if (v49)
      {
        if (!v50)
        {
          *(_WORD *)v44 = *(_WORD *)v45;
          *((_WORD *)v44 + 1) = *((_WORD *)v45 + 1);
          v51 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
          v51(&v44[*(int *)(v46 + 24)], &v45[*(int *)(v46 + 24)], v10);
          v51(&v44[*(int *)(v46 + 28)], &v45[*(int *)(v46 + 28)], v10);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
          goto LABEL_28;
        }
      }
      else
      {
        if (!v50)
        {
          *(_WORD *)v44 = *(_WORD *)v45;
          *((_WORD *)v44 + 1) = *((_WORD *)v45 + 1);
          v58 = *(void (**)(char *, char *, uint64_t))(v61 + 24);
          v58(&v44[*(int *)(v46 + 24)], &v45[*(int *)(v46 + 24)], v10);
          v58(&v44[*(int *)(v46 + 28)], &v45[*(int *)(v46 + 28)], v10);
          goto LABEL_28;
        }
        sub_24B7B2E38((uint64_t)v44, _s13NodePlacementV12TemplateInfoVMa);
      }
      v40 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840) - 8) + 64);
      v41 = v44;
      v42 = v45;
      goto LABEL_21;
    }
    sub_24B7B2E38(v28, _s13NodePlacementVMa);
LABEL_20:
    v40 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490) - 8) + 64);
    v41 = (void *)v28;
    v42 = (const void *)v29;
LABEL_21:
    memcpy(v41, v42, v40);
    goto LABEL_28;
  }
  if (v34)
    goto LABEL_20;
  *(_WORD *)v28 = *(_WORD *)v29;
  *(_WORD *)(v28 + 2) = *(_WORD *)(v29 + 2);
  *(_WORD *)(v28 + 4) = *(_WORD *)(v29 + 4);
  *(_WORD *)(v28 + 6) = *(_WORD *)(v29 + 6);
  *(_WORD *)(v28 + 8) = *(_WORD *)(v29 + 8);
  *(_WORD *)(v28 + 10) = *(_WORD *)(v29 + 10);
  *(_QWORD *)(v28 + 16) = *(_QWORD *)(v29 + 16);
  *(_WORD *)(v28 + 24) = *(_WORD *)(v29 + 24);
  *(_WORD *)(v28 + 26) = *(_WORD *)(v29 + 26);
  *(_WORD *)(v28 + 28) = *(_WORD *)(v29 + 28);
  *(_WORD *)(v28 + 30) = *(_WORD *)(v29 + 30);
  *(_WORD *)(v28 + 32) = *(_WORD *)(v29 + 32);
  *(_WORD *)(v28 + 34) = *(_WORD *)(v29 + 34);
  v35 = *(int *)(v30 + 68);
  __dst = (_WORD *)(v28 + v35);
  v36 = (_WORD *)(v29 + v35);
  v37 = _s13NodePlacementV12TemplateInfoVMa(0);
  v59 = *(_QWORD *)(v37 - 8);
  v38 = *(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v59 + 48);
  swift_bridgeObjectRetain();
  if (v38(v36, 1, v37))
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
    memcpy(__dst, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    *__dst = *v36;
    __dst[1] = v36[1];
    v52 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
    v52((char *)__dst + *(int *)(v37 + 24), (char *)v36 + *(int *)(v37 + 24), v10);
    v52((char *)__dst + *(int *)(v37 + 28), (char *)v36 + *(int *)(v37 + 28), v10);
    (*(void (**)(_WORD *, _QWORD, uint64_t, uint64_t))(v59 + 56))(__dst, 0, 1, v37);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
LABEL_28:
  v53 = a3[9];
  v54 = (_QWORD *)(a1 + v53);
  v55 = (uint64_t *)(a2 + v53);
  v56 = *v55;
  *(_QWORD *)((char *)v54 + 7) = *(uint64_t *)((char *)v55 + 7);
  *v54 = v56;
  return a1;
}

uint64_t sub_24B7E56B4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24B7E56DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _DWORD *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v32;
  _DWORD *__dst;

  v6 = sub_24B7F3460();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_24B7F3490();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  v17 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v17;
  *(_OWORD *)(v15 + 32) = *(_OWORD *)(v16 + 32);
  *(_QWORD *)(v15 + 48) = *(_QWORD *)(v16 + 48);
  v18 = (_QWORD *)(a1 + v14);
  v19 = (_QWORD *)(a2 + v14);
  v20 = _s13NodePlacementVMa(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    *v18 = *v19;
    *((_DWORD *)v18 + 2) = *((_DWORD *)v19 + 2);
    v18[2] = v19[2];
    v18[3] = v19[3];
    *((_DWORD *)v18 + 8) = *((_DWORD *)v19 + 8);
    v23 = *(int *)(v20 + 68);
    __dst = (_DWORD *)((char *)v18 + v23);
    v24 = (_DWORD *)((char *)v19 + v23);
    v25 = _s13NodePlacementV12TemplateInfoVMa(0);
    v32 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v32 + 48))(v24, 1, v25))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
      memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      *__dst = *v24;
      v27 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v27((char *)__dst + *(int *)(v25 + 24), (char *)v24 + *(int *)(v25 + 24), v10);
      v27((char *)__dst + *(int *)(v25 + 28), (char *)v24 + *(int *)(v25 + 28), v10);
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v25);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  v28 = a3[9];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  *v29 = *v30;
  *(_QWORD *)((char *)v29 + 7) = *(_QWORD *)((char *)v30 + 7);
  return a1;
}

uint64_t sub_24B7E5968(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  _DWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  size_t v34;
  void *v35;
  const void *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(char *, uint64_t, uint64_t);
  int v43;
  int v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  void (*v50)(char *, char *, uint64_t);
  _DWORD *__dst;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);

  v6 = sub_24B7F3460();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_24B7F3490();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v52 = v11;
  if (*(_QWORD *)(a1 + v16 + 48) == 1)
  {
LABEL_10:
    v20 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *(_OWORD *)(v17 + 16) = v20;
    *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
    *(_QWORD *)(v17 + 48) = *(_QWORD *)(v18 + 48);
    goto LABEL_12;
  }
  v19 = *(_QWORD *)(v18 + 48);
  if (v19 == 1)
  {
    sub_24B7E56B4(v17);
    goto LABEL_10;
  }
  *(_BYTE *)v17 = *(_BYTE *)v18;
  *(_DWORD *)(v17 + 4) = *(_DWORD *)(v18 + 4);
  *(_WORD *)(v17 + 8) = *(_WORD *)(v18 + 8);
  *(_QWORD *)(v17 + 12) = *(_QWORD *)(v18 + 12);
  *(_DWORD *)(v17 + 20) = *(_DWORD *)(v18 + 20);
  *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
  *(_DWORD *)(v17 + 32) = *(_DWORD *)(v18 + 32);
  *(_DWORD *)(v17 + 36) = *(_DWORD *)(v18 + 36);
  *(_QWORD *)(v17 + 40) = *(_QWORD *)(v18 + 40);
  *(_QWORD *)(v17 + 48) = v19;
  swift_bridgeObjectRelease();
LABEL_12:
  v21 = a3[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = _s13NodePlacementVMa(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      *(_QWORD *)v22 = *(_QWORD *)v23;
      *(_DWORD *)(v22 + 8) = *(_DWORD *)(v23 + 8);
      *(_QWORD *)(v22 + 16) = *(_QWORD *)(v23 + 16);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 24) = *(_QWORD *)(v23 + 24);
      *(_DWORD *)(v22 + 32) = *(_DWORD *)(v23 + 32);
      v37 = *(int *)(v24 + 68);
      v38 = (char *)(v22 + v37);
      v39 = (char *)(v23 + v37);
      v40 = _s13NodePlacementV12TemplateInfoVMa(0);
      v41 = *(_QWORD *)(v40 - 8);
      v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48);
      v43 = v42(v38, 1, v40);
      v44 = v42(v39, 1, v40);
      if (v43)
      {
        if (!v44)
        {
          *(_DWORD *)v38 = *(_DWORD *)v39;
          v45 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
          v45(&v38[*(int *)(v40 + 24)], &v39[*(int *)(v40 + 24)], v10);
          v45(&v38[*(int *)(v40 + 28)], &v39[*(int *)(v40 + 28)], v10);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
          goto LABEL_26;
        }
      }
      else
      {
        if (!v44)
        {
          *(_DWORD *)v38 = *(_DWORD *)v39;
          v50 = *(void (**)(char *, char *, uint64_t))(v52 + 40);
          v50(&v38[*(int *)(v40 + 24)], &v39[*(int *)(v40 + 24)], v10);
          v50(&v38[*(int *)(v40 + 28)], &v39[*(int *)(v40 + 28)], v10);
          goto LABEL_26;
        }
        sub_24B7B2E38((uint64_t)v38, _s13NodePlacementV12TemplateInfoVMa);
      }
      v34 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840) - 8) + 64);
      v35 = v38;
      v36 = v39;
      goto LABEL_19;
    }
    sub_24B7B2E38(v22, _s13NodePlacementVMa);
LABEL_18:
    v34 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490) - 8) + 64);
    v35 = (void *)v22;
    v36 = (const void *)v23;
LABEL_19:
    memcpy(v35, v36, v34);
    goto LABEL_26;
  }
  if (v28)
    goto LABEL_18;
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_DWORD *)(v22 + 8) = *(_DWORD *)(v23 + 8);
  *(_QWORD *)(v22 + 16) = *(_QWORD *)(v23 + 16);
  *(_QWORD *)(v22 + 24) = *(_QWORD *)(v23 + 24);
  *(_DWORD *)(v22 + 32) = *(_DWORD *)(v23 + 32);
  v29 = *(int *)(v24 + 68);
  __dst = (_DWORD *)(v22 + v29);
  v30 = (_DWORD *)(v23 + v29);
  v31 = _s13NodePlacementV12TemplateInfoVMa(0);
  v32 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
    memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    *__dst = *v30;
    v53 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
    v53((char *)__dst + *(int *)(v31 + 24), (char *)v30 + *(int *)(v31 + 24), v10);
    v53((char *)__dst + *(int *)(v31 + 28), (char *)v30 + *(int *)(v31 + 28), v10);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
LABEL_26:
  v46 = a3[9];
  v47 = (_QWORD *)(a1 + v46);
  v48 = (_QWORD *)(a2 + v46);
  *v47 = *v48;
  *(_QWORD *)((char *)v47 + 7) = *(_QWORD *)((char *)v48 + 7);
  return a1;
}

uint64_t sub_24B7E5E18()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7E5E24(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v6 = sub_24B7F3460();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[6];
LABEL_10:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 2147483645)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
    v12 = *(_QWORD *)(v8 - 8);
    v13 = a3[8];
    goto LABEL_10;
  }
  v14 = *(_QWORD *)(a1 + a3[7] + 48);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return ((_DWORD)v14 - 1) & ~(((int)v14 - 1) >> 31);
}

uint64_t sub_24B7E5F04()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7E5F10(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v8 = sub_24B7F3460();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[6];
    }
    else
    {
      if (a3 == 2147483645)
      {
        *(_QWORD *)(a1 + a4[7] + 48) = (a2 + 1);
        return result;
      }
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[8];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_24B7E5FE8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_24B7F3460();
  if (v0 <= 0x3F)
  {
    sub_24B7B225C(319, qword_2579B1050, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
    if (v1 <= 0x3F)
    {
      sub_24B7B225C(319, qword_2579B0EE8, (void (*)(uint64_t))_s13NodePlacementVMa);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *sub_24B7E60C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    a1[1] = a2[1];
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_24B7F3490();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v14 = *(int *)(a3 + 28);
    v15 = (uint64_t *)((char *)v4 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_24B7E61DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = sub_24B7F3490();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24B7E6258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_24B7F3490();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = *(int *)(a3 + 28);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24B7E6344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_24B7F3490();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 28);
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24B7E6490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_24B7F3490();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_24B7E6570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_24B7F3490();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 28);
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24B7E66AC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7E66B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_24B7E674C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7E6758(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = a2;
  return result;
}

void sub_24B7E67DC()
{
  unint64_t v0;

  sub_24B7B225C(319, qword_2579B1050, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

ValueMetadata *_s8SequenceV8FileInfoV8FileTypeOMa()
{
  return &_s8SequenceV8FileInfoV8FileTypeON;
}

uint64_t sub_24B7E688C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  const void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  const void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  const void *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  const void *v56;
  uint64_t v57;
  void (*v58)(void *, const void *, uint64_t);
  const void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  const void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  const void *v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  const void *v86;
  uint64_t v87;
  uint64_t v88;
  _DWORD *v89;
  _DWORD *v90;
  uint64_t v91;
  uint64_t v92;
  unsigned int (*v93)(_DWORD *, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  int *v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *, char *, uint64_t);
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t matched;
  uint64_t v116;
  uint64_t v117;
  int *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unsigned int (*v124)(char *, uint64_t, uint64_t);
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  void (*v131)(char *, _QWORD, uint64_t, int *);
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  __int128 v136;
  uint64_t v137;
  void (*v138)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v144;
  int *v145;
  char *v146;
  char *v147;
  uint64_t v149;
  uint64_t v150;
  void (*v151)(void *, const void *, uint64_t);
  uint64_t v152;
  uint64_t v153;
  void (**__dst)(void *, _QWORD, uint64_t, uint64_t);
  void (**__dsta)(void *, _QWORD, uint64_t, int *);
  unsigned int (*__dstb)(char *, uint64_t, uint64_t);
  char *__dstc;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v27 = *a2;
    *(_QWORD *)a1 = *a2;
    v28 = v27 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    v7 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v7;
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
    v8 = *(int *)(a3 + 20);
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    *(_QWORD *)(a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    v11 = _s8SequenceVMa(0);
    v12 = *(int *)(v11 + 20);
    v150 = v9 + v12;
    v13 = v10 + v12;
    v14 = sub_24B7F3460();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v150, v13, v14);
    v145 = (int *)v11;
    v17 = *(int *)(v11 + 24);
    v18 = v9;
    v19 = v9 + v17;
    v149 = v10;
    v20 = v10 + v17;
    v16(v9 + v17, v10 + v17, v14);
    v21 = (int *)_s5StateVMa(0);
    v22 = v21[5];
    v23 = (void *)(v19 + v22);
    v24 = (const void *)(v20 + v22);
    v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
    v151 = (void (*)(void *, const void *, uint64_t))v16;
    __dst = (void (**)(void *, _QWORD, uint64_t, uint64_t))v15;
    if (v25(v20 + v22, 1, v14))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v16((uint64_t)v23, (uint64_t)v24, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v23, 0, 1, v14);
    }
    v29 = v145;
    v30 = v18;
    v31 = v149;
    v32 = v21[6];
    v33 = v19 + v32;
    v34 = v20 + v32;
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *(_BYTE *)(v33 + 8) = *(_BYTE *)(v34 + 8);
    v35 = v21[7];
    v36 = (void *)(v19 + v35);
    v37 = (const void *)(v20 + v35);
    if (v25(v20 + v35, 1, v14))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      v151(v36, v37, v14);
      __dst[7](v36, 0, 1, v14);
    }
    v39 = v21[8];
    v40 = (void *)(v19 + v39);
    v41 = (const void *)(v20 + v39);
    if (v25(v20 + v39, 1, v14))
    {
      v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      v151(v40, v41, v14);
      __dst[7](v40, 0, 1, v14);
    }
    *(_BYTE *)(v19 + v21[9]) = *(_BYTE *)(v20 + v21[9]);
    v43 = v21[10];
    v44 = (void *)(v19 + v43);
    v45 = (const void *)(v20 + v43);
    if (v25(v20 + v43, 1, v14))
    {
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      v151(v44, v45, v14);
      __dst[7](v44, 0, 1, v14);
    }
    v47 = v21[11];
    v48 = v19 + v47;
    v49 = v20 + v47;
    *(_QWORD *)v48 = *(_QWORD *)v49;
    *(_BYTE *)(v48 + 8) = *(_BYTE *)(v49 + 8);
    v50 = v21[12];
    v51 = (void *)(v19 + v50);
    v52 = (const void *)(v20 + v50);
    if (v25(v20 + v50, 1, v14))
    {
      v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      v151(v51, v52, v14);
      __dst[7](v51, 0, 1, v14);
    }
    *(_BYTE *)(v19 + v21[13]) = *(_BYTE *)(v20 + v21[13]);
    *(_BYTE *)(v19 + v21[14]) = *(_BYTE *)(v20 + v21[14]);
    *(_BYTE *)(v19 + v21[15]) = *(_BYTE *)(v20 + v21[15]);
    v54 = v21[16];
    v55 = (void *)(v19 + v54);
    v56 = (const void *)(v20 + v54);
    if (v25(v20 + v54, 1, v14))
    {
      v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      v58 = v151;
    }
    else
    {
      v59 = v56;
      v58 = v151;
      v151(v55, v59, v14);
      __dst[7](v55, 0, 1, v14);
    }
    *(_BYTE *)(v19 + v21[17]) = *(_BYTE *)(v20 + v21[17]);
    *(_QWORD *)(v19 + v21[18]) = *(_QWORD *)(v20 + v21[18]);
    *(_QWORD *)(v19 + v21[19]) = *(_QWORD *)(v20 + v21[19]);
    v60 = v145[7];
    v61 = v30 + v60;
    v62 = v149 + v60;
    v63 = *(_QWORD *)(v149 + v60 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v63 == 1)
    {
      v64 = *(_OWORD *)(v62 + 16);
      *(_OWORD *)v61 = *(_OWORD *)v62;
      *(_OWORD *)(v61 + 16) = v64;
      *(_OWORD *)(v61 + 32) = *(_OWORD *)(v62 + 32);
      *(_BYTE *)(v61 + 48) = *(_BYTE *)(v62 + 48);
    }
    else
    {
      *(_OWORD *)v61 = *(_OWORD *)v62;
      v65 = *(_QWORD *)(v62 + 24);
      v66 = *(_QWORD *)(v62 + 32);
      *(_QWORD *)(v61 + 16) = v63;
      *(_QWORD *)(v61 + 24) = v65;
      v67 = *(_QWORD *)(v62 + 40);
      *(_QWORD *)(v61 + 32) = v66;
      *(_QWORD *)(v61 + 40) = v67;
      *(_BYTE *)(v61 + 48) = *(_BYTE *)(v62 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(_BYTE *)(v30 + v145[8]) = *(_BYTE *)(v149 + v145[8]);
    v68 = v145[9];
    v69 = (void *)(v30 + v68);
    v70 = (const void *)(v149 + v68);
    if (v25(v149 + v68, 1, v14))
    {
      v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
      memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    }
    else
    {
      v58(v69, v70, v14);
      __dst[7](v69, 0, 1, v14);
    }
    v72 = v145[10];
    v73 = v30 + v72;
    v74 = v149 + v72;
    v75 = *(_QWORD *)(v74 + 16);
    if (v75 == 1)
    {
      v76 = *(_OWORD *)(v74 + 16);
      *(_OWORD *)v73 = *(_OWORD *)v74;
      *(_OWORD *)(v73 + 16) = v76;
      *(_OWORD *)(v73 + 32) = *(_OWORD *)(v74 + 32);
      *(_BYTE *)(v73 + 48) = *(_BYTE *)(v74 + 48);
    }
    else
    {
      *(_OWORD *)v73 = *(_OWORD *)v74;
      v77 = *(_QWORD *)(v74 + 24);
      v78 = *(_QWORD *)(v74 + 32);
      *(_QWORD *)(v73 + 16) = v75;
      *(_QWORD *)(v73 + 24) = v77;
      v79 = *(_QWORD *)(v74 + 40);
      *(_QWORD *)(v73 + 32) = v78;
      *(_QWORD *)(v73 + 40) = v79;
      *(_BYTE *)(v73 + 48) = *(_BYTE *)(v74 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v80 = v145[11];
    v81 = (void *)(v30 + v80);
    v82 = (const void *)(v149 + v80);
    if (v25(v149 + v80, 1, v14))
    {
      v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
      memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    }
    else
    {
      v58(v81, v82, v14);
      __dst[7](v81, 0, 1, v14);
    }
    v84 = v145[12];
    v85 = (void *)(v30 + v84);
    v86 = (const void *)(v149 + v84);
    if (v25(v149 + v84, 1, v14))
    {
      v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
      memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    }
    else
    {
      v58(v85, v86, v14);
      __dst[7](v85, 0, 1, v14);
    }
    *(_QWORD *)(v30 + v145[13]) = *(_QWORD *)(v149 + v145[13]);
    *(_QWORD *)(v30 + v145[14]) = *(_QWORD *)(v149 + v145[14]);
    *(_QWORD *)(v30 + v145[15]) = *(_QWORD *)(v149 + v145[15]);
    v88 = v145[16];
    v89 = (_DWORD *)(v30 + v88);
    v90 = (_DWORD *)(v149 + v88);
    v91 = _s8SequenceV10EnrollmentVMa(0);
    v92 = *(_QWORD *)(v91 - 8);
    v93 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v92 + 48);
    swift_bridgeObjectRetain();
    if (v93(v90, 1, v91))
    {
      v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04A8);
      memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
    }
    else
    {
      *v89 = *v90;
      v95 = *(int *)(v91 + 20);
      v96 = (char *)v89 + v95;
      v97 = (char *)v90 + v95;
      v98 = (int *)_s8IdentityVMa(0);
      __dsta = (void (**)(void *, _QWORD, uint64_t, int *))*((_QWORD *)v98 - 1);
      if (((unsigned int (*)(char *, uint64_t, int *))__dsta[6])(v97, 1, v98))
      {
        v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B08C0);
        memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
      }
      else
      {
        v151(v96, v97, v14);
        v100 = v98[5];
        v144 = &v97[v100];
        v146 = &v96[v100];
        v152 = sub_24B7F3490();
        v101 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v152 - 8) + 16);
        v101(v146, v144, v152);
        *(_DWORD *)&v96[v98[6]] = *(_DWORD *)&v97[v98[6]];
        v102 = v98[7];
        v103 = &v96[v102];
        v104 = &v97[v102];
        v105 = *((_QWORD *)v104 + 1);
        *(_QWORD *)v103 = *(_QWORD *)v104;
        *((_QWORD *)v103 + 1) = v105;
        v106 = v98[8];
        v147 = &v96[v106];
        v107 = &v97[v106];
        swift_bridgeObjectRetain();
        v101(v147, v107, v152);
        __dsta[7](v96, 0, 1, v98);
      }
      v108 = *(int *)(v91 + 24);
      v109 = (char *)v89 + v108;
      v110 = (char *)v90 + v108;
      v111 = *((_QWORD *)v110 + 1);
      v31 = v149;
      if (v111 == 1)
      {
        *(_OWORD *)v109 = *(_OWORD *)v110;
      }
      else
      {
        *(_QWORD *)v109 = *(_QWORD *)v110;
        *((_QWORD *)v109 + 1) = v111;
        swift_bridgeObjectRetain();
      }
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v89, 0, 1, v91);
    }
    v112 = v29[17];
    v113 = (char *)(v30 + v112);
    v114 = (char *)(v31 + v112);
    matched = _s8SequenceV5MatchVMa(0);
    v116 = *(_QWORD *)(matched - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v116 + 48))(v114, 1, matched))
    {
      v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04B0);
      memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
    }
    else
    {
      v118 = (int *)_s8SequenceV5MatchV6FilterVMa(0);
      v119 = *((_QWORD *)v118 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v119 + 48))(v114, 1, v118))
      {
        v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0958);
        memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
      }
      else
      {
        v121 = sub_24B7F3490();
        v122 = *(_QWORD *)(v121 - 8);
        __dstb = *(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48);
        v153 = v122;
        if (__dstb(v114, 1, v121))
        {
          v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
          memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v113, v114, v121);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v113, 0, 1, v121);
        }
        v124 = __dstb;
        v125 = v118[5];
        __dstc = &v113[v125];
        v126 = &v114[v125];
        if (v124(&v114[v125], 1, v121))
        {
          v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
          memcpy(__dstc, v126, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v153 + 16))(__dstc, v126, v121);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v153 + 56))(__dstc, 0, 1, v121);
        }
        v31 = v149;
        v128 = v118[6];
        v129 = &v113[v128];
        v130 = &v114[v128];
        *(_DWORD *)v129 = *(_DWORD *)v130;
        v129[4] = v130[4];
        *(_QWORD *)&v113[v118[7]] = *(_QWORD *)&v114[v118[7]];
        v131 = *(void (**)(char *, _QWORD, uint64_t, int *))(v119 + 56);
        swift_bridgeObjectRetain();
        v131(v113, 0, 1, v118);
      }
      v132 = *(int *)(matched + 20);
      v133 = &v113[v132];
      v134 = &v114[v132];
      v135 = *((_QWORD *)v134 + 3);
      if (v135 == 1)
      {
        v136 = *((_OWORD *)v134 + 1);
        *(_OWORD *)v133 = *(_OWORD *)v134;
        *((_OWORD *)v133 + 1) = v136;
        *((_OWORD *)v133 + 2) = *((_OWORD *)v134 + 2);
        *((_QWORD *)v133 + 6) = *((_QWORD *)v134 + 6);
      }
      else
      {
        *(_QWORD *)v133 = *(_QWORD *)v134;
        *((_QWORD *)v133 + 1) = *((_QWORD *)v134 + 1);
        *((_DWORD *)v133 + 4) = *((_DWORD *)v134 + 4);
        v137 = *((_QWORD *)v134 + 4);
        *((_QWORD *)v133 + 3) = v135;
        *((_QWORD *)v133 + 4) = v137;
        v133[40] = v134[40];
        *((_QWORD *)v133 + 6) = *((_QWORD *)v134 + 6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      *(_QWORD *)&v113[*(int *)(matched + 24)] = *(_QWORD *)&v114[*(int *)(matched + 24)];
      v138 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56);
      swift_bridgeObjectRetain();
      v138(v113, 0, 1, matched);
    }
    v28 = a1;
    v139 = v29[18];
    v140 = v30 + v139;
    v141 = v31 + v139;
    v142 = *(_QWORD *)(v141 + 16);
    if (v142 == 1 || v142 == 2)
    {
      *(_OWORD *)v140 = *(_OWORD *)v141;
      *(_QWORD *)(v140 + 16) = *(_QWORD *)(v141 + 16);
    }
    else
    {
      *(_QWORD *)v140 = *(_QWORD *)v141;
      *(_WORD *)(v140 + 8) = *(_WORD *)(v141 + 8);
      *(_QWORD *)(v140 + 16) = v142;
      swift_bridgeObjectRetain();
    }
    *(_QWORD *)(v30 + v29[19]) = *(_QWORD *)(v31 + v29[19]);
    *(_QWORD *)(v30 + v29[20]) = *(_QWORD *)(v31 + v29[20]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v28;
}

uint64_t sub_24B7E740C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  int *v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t matched;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = (int *)_s8SequenceVMa(0);
  v6 = v4 + v5[5];
  v7 = sub_24B7F3460();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  v10 = v4 + v5[6];
  v9(v10, v7);
  v11 = (int *)_s5StateVMa(0);
  v12 = v10 + v11[5];
  v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v13(v12, 1, v7))
    v9(v12, v7);
  v14 = v10 + v11[7];
  if (!v13(v14, 1, v7))
    v9(v14, v7);
  v15 = v10 + v11[8];
  if (!v13(v15, 1, v7))
    v9(v15, v7);
  v16 = v10 + v11[10];
  if (!v13(v16, 1, v7))
    v9(v16, v7);
  v17 = v10 + v11[12];
  if (!v13(v17, 1, v7))
    v9(v17, v7);
  v18 = v10 + v11[16];
  if (!v13(v18, 1, v7))
    v9(v18, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v4 + v5[7] + 16) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v19 = v4 + v5[9];
  if (!v13(v19, 1, v7))
    v9(v19, v7);
  if (*(_QWORD *)(v4 + v5[10] + 16) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v20 = v4 + v5[11];
  if (!v13(v20, 1, v7))
    v9(v20, v7);
  v21 = v4 + v5[12];
  if (!v13(v21, 1, v7))
    v9(v21, v7);
  swift_bridgeObjectRelease();
  v22 = v4 + v5[16];
  v23 = _s8SequenceV10EnrollmentVMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v22, 1, v23))
  {
    v24 = v22 + *(int *)(v23 + 20);
    v25 = _s8IdentityVMa(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v24, 1, v25))
    {
      v9(v24, v7);
      v26 = v24 + *(int *)(v25 + 20);
      v27 = sub_24B7F3490();
      v28 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8);
      v28(v26, v27);
      swift_bridgeObjectRelease();
      v28(v24 + *(int *)(v25 + 32), v27);
    }
    if (*(_QWORD *)(v22 + *(int *)(v23 + 24) + 8) != 1)
      swift_bridgeObjectRelease();
  }
  v29 = v4 + v5[17];
  matched = _s8SequenceV5MatchVMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(matched - 8) + 48))(v29, 1, matched))
  {
    v31 = _s8SequenceV5MatchV6FilterVMa(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v29, 1, v31))
    {
      v32 = sub_24B7F3490();
      v33 = *(_QWORD *)(v32 - 8);
      v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
      if (!v34(v29, 1, v32))
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v29, v32);
      v35 = v29 + *(int *)(v31 + 20);
      if (!v34(v35, 1, v32))
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v32);
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(v29 + *(int *)(matched + 20) + 24) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  if ((unint64_t)(*(_QWORD *)(v4 + v5[18] + 16) - 1) >= 2)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24B7E7880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const void *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  const void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  const void *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  const void *v52;
  uint64_t v53;
  void (*v54)(void *, const void *, uint64_t);
  const void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  const void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  const void *v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  const void *v82;
  uint64_t v83;
  uint64_t v84;
  _DWORD *v85;
  _DWORD *v86;
  uint64_t v87;
  uint64_t v88;
  unsigned int (*v89)(_DWORD *, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  int *v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, char *, uint64_t);
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t matched;
  uint64_t v112;
  uint64_t v113;
  int *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  void (*v126)(char *, _QWORD, uint64_t, int *);
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  __int128 v131;
  uint64_t v132;
  void (*v133)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v139;
  int *v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v145;
  uint64_t v146;
  void (*v147)(void *, const void *, uint64_t);
  uint64_t v148;
  unsigned int (*v149)(char *, uint64_t, uint64_t);
  void (**__dst)(void *, _QWORD, uint64_t, uint64_t);
  void (**__dsta)(void *, _QWORD, uint64_t, int *);
  char *__dstb;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  v6 = *(int *)(a3 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_QWORD *)(a1 + v6) = *(_QWORD *)(a2 + v6);
  v9 = _s8SequenceVMa(0);
  v10 = *(int *)(v9 + 20);
  v146 = v7 + v10;
  v11 = v8 + v10;
  v12 = sub_24B7F3460();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(v146, v11, v12);
  v140 = (int *)v9;
  v15 = *(int *)(v9 + 24);
  v16 = v7;
  v17 = v7 + v15;
  v145 = v8;
  v18 = v8 + v15;
  v14(v7 + v15, v8 + v15, v12);
  v19 = (int *)_s5StateVMa(0);
  v20 = v19[5];
  v21 = (void *)(v17 + v20);
  v22 = (const void *)(v18 + v20);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  v147 = (void (*)(void *, const void *, uint64_t))v14;
  __dst = (void (**)(void *, _QWORD, uint64_t, uint64_t))v13;
  if (v23(v18 + v20, 1, v12))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v14((uint64_t)v21, (uint64_t)v22, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v21, 0, 1, v12);
  }
  v25 = v140;
  v26 = v16;
  v27 = v145;
  v28 = v19[6];
  v29 = v17 + v28;
  v30 = v18 + v28;
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
  v31 = v19[7];
  v32 = (void *)(v17 + v31);
  v33 = (const void *)(v18 + v31);
  if (v23(v18 + v31, 1, v12))
  {
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    v147(v32, v33, v12);
    __dst[7](v32, 0, 1, v12);
  }
  v35 = v19[8];
  v36 = (void *)(v17 + v35);
  v37 = (const void *)(v18 + v35);
  if (v23(v18 + v35, 1, v12))
  {
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    v147(v36, v37, v12);
    __dst[7](v36, 0, 1, v12);
  }
  *(_BYTE *)(v17 + v19[9]) = *(_BYTE *)(v18 + v19[9]);
  v39 = v19[10];
  v40 = (void *)(v17 + v39);
  v41 = (const void *)(v18 + v39);
  if (v23(v18 + v39, 1, v12))
  {
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    v147(v40, v41, v12);
    __dst[7](v40, 0, 1, v12);
  }
  v43 = v19[11];
  v44 = v17 + v43;
  v45 = v18 + v43;
  *(_QWORD *)v44 = *(_QWORD *)v45;
  *(_BYTE *)(v44 + 8) = *(_BYTE *)(v45 + 8);
  v46 = v19[12];
  v47 = (void *)(v17 + v46);
  v48 = (const void *)(v18 + v46);
  if (v23(v18 + v46, 1, v12))
  {
    v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    v147(v47, v48, v12);
    __dst[7](v47, 0, 1, v12);
  }
  *(_BYTE *)(v17 + v19[13]) = *(_BYTE *)(v18 + v19[13]);
  *(_BYTE *)(v17 + v19[14]) = *(_BYTE *)(v18 + v19[14]);
  *(_BYTE *)(v17 + v19[15]) = *(_BYTE *)(v18 + v19[15]);
  v50 = v19[16];
  v51 = (void *)(v17 + v50);
  v52 = (const void *)(v18 + v50);
  if (v23(v18 + v50, 1, v12))
  {
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    v54 = v147;
  }
  else
  {
    v55 = v52;
    v54 = v147;
    v147(v51, v55, v12);
    __dst[7](v51, 0, 1, v12);
  }
  *(_BYTE *)(v17 + v19[17]) = *(_BYTE *)(v18 + v19[17]);
  *(_QWORD *)(v17 + v19[18]) = *(_QWORD *)(v18 + v19[18]);
  *(_QWORD *)(v17 + v19[19]) = *(_QWORD *)(v18 + v19[19]);
  v56 = v140[7];
  v57 = v26 + v56;
  v58 = v145 + v56;
  v59 = *(_QWORD *)(v145 + v56 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v59 == 1)
  {
    v60 = *(_OWORD *)(v58 + 16);
    *(_OWORD *)v57 = *(_OWORD *)v58;
    *(_OWORD *)(v57 + 16) = v60;
    *(_OWORD *)(v57 + 32) = *(_OWORD *)(v58 + 32);
    *(_BYTE *)(v57 + 48) = *(_BYTE *)(v58 + 48);
  }
  else
  {
    *(_OWORD *)v57 = *(_OWORD *)v58;
    v61 = *(_QWORD *)(v58 + 24);
    v62 = *(_QWORD *)(v58 + 32);
    *(_QWORD *)(v57 + 16) = v59;
    *(_QWORD *)(v57 + 24) = v61;
    v63 = *(_QWORD *)(v58 + 40);
    *(_QWORD *)(v57 + 32) = v62;
    *(_QWORD *)(v57 + 40) = v63;
    *(_BYTE *)(v57 + 48) = *(_BYTE *)(v58 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_BYTE *)(v26 + v140[8]) = *(_BYTE *)(v145 + v140[8]);
  v64 = v140[9];
  v65 = (void *)(v26 + v64);
  v66 = (const void *)(v145 + v64);
  if (v23(v145 + v64, 1, v12))
  {
    v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
  }
  else
  {
    v54(v65, v66, v12);
    __dst[7](v65, 0, 1, v12);
  }
  v68 = v140[10];
  v69 = v26 + v68;
  v70 = v145 + v68;
  v71 = *(_QWORD *)(v70 + 16);
  if (v71 == 1)
  {
    v72 = *(_OWORD *)(v70 + 16);
    *(_OWORD *)v69 = *(_OWORD *)v70;
    *(_OWORD *)(v69 + 16) = v72;
    *(_OWORD *)(v69 + 32) = *(_OWORD *)(v70 + 32);
    *(_BYTE *)(v69 + 48) = *(_BYTE *)(v70 + 48);
  }
  else
  {
    *(_OWORD *)v69 = *(_OWORD *)v70;
    v73 = *(_QWORD *)(v70 + 24);
    v74 = *(_QWORD *)(v70 + 32);
    *(_QWORD *)(v69 + 16) = v71;
    *(_QWORD *)(v69 + 24) = v73;
    v75 = *(_QWORD *)(v70 + 40);
    *(_QWORD *)(v69 + 32) = v74;
    *(_QWORD *)(v69 + 40) = v75;
    *(_BYTE *)(v69 + 48) = *(_BYTE *)(v70 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v76 = v140[11];
  v77 = (void *)(v26 + v76);
  v78 = (const void *)(v145 + v76);
  if (v23(v145 + v76, 1, v12))
  {
    v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
  }
  else
  {
    v54(v77, v78, v12);
    __dst[7](v77, 0, 1, v12);
  }
  v80 = v140[12];
  v81 = (void *)(v26 + v80);
  v82 = (const void *)(v145 + v80);
  if (v23(v145 + v80, 1, v12))
  {
    v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
  }
  else
  {
    v54(v81, v82, v12);
    __dst[7](v81, 0, 1, v12);
  }
  *(_QWORD *)(v26 + v140[13]) = *(_QWORD *)(v145 + v140[13]);
  *(_QWORD *)(v26 + v140[14]) = *(_QWORD *)(v145 + v140[14]);
  *(_QWORD *)(v26 + v140[15]) = *(_QWORD *)(v145 + v140[15]);
  v84 = v140[16];
  v85 = (_DWORD *)(v26 + v84);
  v86 = (_DWORD *)(v145 + v84);
  v87 = _s8SequenceV10EnrollmentVMa(0);
  v88 = *(_QWORD *)(v87 - 8);
  v89 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v88 + 48);
  swift_bridgeObjectRetain();
  if (v89(v86, 1, v87))
  {
    v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04A8);
    memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
  }
  else
  {
    *v85 = *v86;
    v91 = *(int *)(v87 + 20);
    v92 = (char *)v85 + v91;
    v93 = (char *)v86 + v91;
    v94 = (int *)_s8IdentityVMa(0);
    __dsta = (void (**)(void *, _QWORD, uint64_t, int *))*((_QWORD *)v94 - 1);
    if (((unsigned int (*)(char *, uint64_t, int *))__dsta[6])(v93, 1, v94))
    {
      v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B08C0);
      memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
    }
    else
    {
      v147(v92, v93, v12);
      v96 = v94[5];
      v139 = &v93[v96];
      v141 = &v92[v96];
      v148 = sub_24B7F3490();
      v97 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v148 - 8) + 16);
      v97(v141, v139, v148);
      *(_DWORD *)&v92[v94[6]] = *(_DWORD *)&v93[v94[6]];
      v98 = v94[7];
      v99 = &v92[v98];
      v100 = &v93[v98];
      v101 = *((_QWORD *)v100 + 1);
      *(_QWORD *)v99 = *(_QWORD *)v100;
      *((_QWORD *)v99 + 1) = v101;
      v102 = v94[8];
      v142 = &v92[v102];
      v103 = &v93[v102];
      swift_bridgeObjectRetain();
      v97(v142, v103, v148);
      __dsta[7](v92, 0, 1, v94);
    }
    v104 = *(int *)(v87 + 24);
    v105 = (char *)v85 + v104;
    v106 = (char *)v86 + v104;
    v107 = *((_QWORD *)v106 + 1);
    v27 = v145;
    if (v107 == 1)
    {
      *(_OWORD *)v105 = *(_OWORD *)v106;
    }
    else
    {
      *(_QWORD *)v105 = *(_QWORD *)v106;
      *((_QWORD *)v105 + 1) = v107;
      swift_bridgeObjectRetain();
    }
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v85, 0, 1, v87);
  }
  v108 = v25[17];
  v109 = (char *)(v26 + v108);
  v110 = (char *)(v27 + v108);
  matched = _s8SequenceV5MatchVMa(0);
  v112 = *(_QWORD *)(matched - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v112 + 48))(v110, 1, matched))
  {
    v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04B0);
    memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
  }
  else
  {
    v114 = (int *)_s8SequenceV5MatchV6FilterVMa(0);
    v115 = *((_QWORD *)v114 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v115 + 48))(v110, 1, v114))
    {
      v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0958);
      memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
    }
    else
    {
      v117 = sub_24B7F3490();
      v118 = *(_QWORD *)(v117 - 8);
      v149 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48);
      v143 = v118;
      if (v149(v110, 1, v117))
      {
        v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
        memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v109, v110, v117);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v109, 0, 1, v117);
      }
      v120 = v114[5];
      __dstb = &v109[v120];
      v121 = &v110[v120];
      if (v149(&v110[v120], 1, v117))
      {
        v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
        memcpy(__dstb, v121, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v143 + 16))(__dstb, v121, v117);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v143 + 56))(__dstb, 0, 1, v117);
      }
      v123 = v114[6];
      v124 = &v109[v123];
      v125 = &v110[v123];
      *(_DWORD *)v124 = *(_DWORD *)v125;
      v124[4] = v125[4];
      *(_QWORD *)&v109[v114[7]] = *(_QWORD *)&v110[v114[7]];
      v126 = *(void (**)(char *, _QWORD, uint64_t, int *))(v115 + 56);
      swift_bridgeObjectRetain();
      v126(v109, 0, 1, v114);
      v27 = v145;
    }
    v127 = *(int *)(matched + 20);
    v128 = &v109[v127];
    v129 = &v110[v127];
    v130 = *((_QWORD *)v129 + 3);
    if (v130 == 1)
    {
      v131 = *((_OWORD *)v129 + 1);
      *(_OWORD *)v128 = *(_OWORD *)v129;
      *((_OWORD *)v128 + 1) = v131;
      *((_OWORD *)v128 + 2) = *((_OWORD *)v129 + 2);
      *((_QWORD *)v128 + 6) = *((_QWORD *)v129 + 6);
    }
    else
    {
      *(_QWORD *)v128 = *(_QWORD *)v129;
      *((_QWORD *)v128 + 1) = *((_QWORD *)v129 + 1);
      *((_DWORD *)v128 + 4) = *((_DWORD *)v129 + 4);
      v132 = *((_QWORD *)v129 + 4);
      *((_QWORD *)v128 + 3) = v130;
      *((_QWORD *)v128 + 4) = v132;
      v128[40] = v129[40];
      *((_QWORD *)v128 + 6) = *((_QWORD *)v129 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(_QWORD *)&v109[*(int *)(matched + 24)] = *(_QWORD *)&v110[*(int *)(matched + 24)];
    v133 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v112 + 56);
    swift_bridgeObjectRetain();
    v133(v109, 0, 1, matched);
  }
  v134 = v25[18];
  v135 = v26 + v134;
  v136 = v27 + v134;
  v137 = *(_QWORD *)(v136 + 16);
  if (v137 == 1 || v137 == 2)
  {
    *(_OWORD *)v135 = *(_OWORD *)v136;
    *(_QWORD *)(v135 + 16) = *(_QWORD *)(v136 + 16);
  }
  else
  {
    *(_QWORD *)v135 = *(_QWORD *)v136;
    *(_WORD *)(v135 + 8) = *(_WORD *)(v136 + 8);
    *(_QWORD *)(v135 + 16) = v137;
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(v26 + v25[19]) = *(_QWORD *)(v27 + v25[19]);
  *(_QWORD *)(v26 + v25[20]) = *(_QWORD *)(v27 + v25[20]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24B7E83D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 *v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  int v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 *v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  int v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  int v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t (*v115)(char *, uint64_t, uint64_t);
  int v116;
  int v117;
  uint64_t v118;
  char *v119;
  char *v120;
  int *v121;
  uint64_t v122;
  uint64_t v123;
  int *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  int *v128;
  uint64_t (*v129)(char *, uint64_t, int *);
  int v130;
  size_t v131;
  void *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  void (*v158)(uint64_t, char *, uint64_t);
  uint64_t v159;
  _QWORD *v160;
  char *v161;
  uint64_t v162;
  char *v163;
  _QWORD *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t matched;
  uint64_t v171;
  uint64_t (*v172)(char *, uint64_t, uint64_t);
  int v173;
  int v174;
  int *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  int *v179;
  uint64_t v180;
  uint64_t (*v181)(char *, uint64_t, int *);
  int v182;
  int v183;
  uint64_t v184;
  uint64_t v185;
  unsigned int (*v186)(char *, uint64_t, uint64_t);
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  char *v198;
  int v199;
  void (*v200)(char *, _QWORD, uint64_t, int *);
  uint64_t v201;
  char *v202;
  char *v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  uint64_t v207;
  uint64_t v208;
  void (*v209)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v210;
  uint64_t v211;
  uint64_t (*v212)(char *, uint64_t, uint64_t);
  int v213;
  int v214;
  uint64_t v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  char *v221;
  int v222;
  void (*v223)(char *, _QWORD, uint64_t, int *);
  uint64_t v224;
  uint64_t v225;
  char *v226;
  char *v227;
  int v228;
  int v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  char *v233;
  int v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  __int128 v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  __int128 v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  char *v263;
  void (*__srca)(char *, char *, uint64_t);
  void (**__src)(void *, const void *, uint64_t);
  uint64_t v266;
  void (*v267)(char *, const void *, uint64_t);
  uint64_t v268;
  void (*v269)(uint64_t, char *, uint64_t);
  uint64_t v270;
  uint64_t v271;
  unsigned int (*v272)(char *, uint64_t, uint64_t);
  uint64_t v273;
  uint64_t v274;
  int *v275;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  v6 = *(int *)(a3 + 20);
  v266 = a1;
  v7 = (char *)(a1 + v6);
  v8 = a2 + v6;
  *(_QWORD *)v7 = *(_QWORD *)(a2 + v6);
  v9 = _s8SequenceVMa(0);
  v10 = *(int *)(v9 + 20);
  v11 = &v7[v10];
  v12 = v8 + v10;
  v13 = sub_24B7F3460();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 24);
  v15(v11, v12, v13);
  v274 = v8;
  v275 = (int *)v9;
  v16 = *(int *)(v9 + 24);
  v17 = &v7[v16];
  v18 = v8 + v16;
  v267 = (void (*)(char *, const void *, uint64_t))v15;
  v15(&v7[v16], v8 + v16, v13);
  v19 = (int *)_s5StateVMa(0);
  v20 = v19[5];
  v21 = &v17[v20];
  v22 = (char *)(v18 + v20);
  v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v24 = v23(&v17[v20], 1, v13);
  v25 = v23(v22, 1, v13);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v21, v22, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v21, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v21, v13);
LABEL_6:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  v267(v21, v22, v13);
LABEL_7:
  v27 = v19[6];
  v28 = &v17[v27];
  v29 = (uint64_t *)(v18 + v27);
  v30 = *v29;
  v28[8] = *((_BYTE *)v29 + 8);
  *(_QWORD *)v28 = v30;
  v31 = v19[7];
  v32 = &v17[v31];
  v33 = (char *)(v18 + v31);
  v34 = v23(&v17[v31], 1, v13);
  v35 = v23(v33, 1, v13);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v32, v33, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v32, 0, 1, v13);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v32, v13);
LABEL_12:
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_13;
  }
  v267(v32, v33, v13);
LABEL_13:
  v37 = v19[8];
  v38 = &v17[v37];
  v39 = (char *)(v18 + v37);
  v40 = v23(&v17[v37], 1, v13);
  v41 = v23(v39, 1, v13);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v38, v39, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v38, 0, 1, v13);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v38, v13);
LABEL_18:
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_19;
  }
  v267(v38, v39, v13);
LABEL_19:
  v17[v19[9]] = *(_BYTE *)(v18 + v19[9]);
  v43 = v19[10];
  v44 = &v17[v43];
  v45 = (char *)(v18 + v43);
  v46 = v23(&v17[v43], 1, v13);
  v47 = v23(v45, 1, v13);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v44, v45, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v44, 0, 1, v13);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v47)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v44, v13);
LABEL_24:
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    goto LABEL_25;
  }
  v267(v44, v45, v13);
LABEL_25:
  v49 = v19[11];
  v50 = &v17[v49];
  v51 = (uint64_t *)(v18 + v49);
  v52 = *v51;
  v50[8] = *((_BYTE *)v51 + 8);
  *(_QWORD *)v50 = v52;
  v53 = v19[12];
  v54 = &v17[v53];
  v55 = (char *)(v18 + v53);
  v56 = v23(&v17[v53], 1, v13);
  v57 = v23(v55, 1, v13);
  if (v56)
  {
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v54, v55, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v54, 0, 1, v13);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v57)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v54, v13);
LABEL_30:
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_31;
  }
  v267(v54, v55, v13);
LABEL_31:
  v17[v19[13]] = *(_BYTE *)(v18 + v19[13]);
  v17[v19[14]] = *(_BYTE *)(v18 + v19[14]);
  v17[v19[15]] = *(_BYTE *)(v18 + v19[15]);
  v59 = v19[16];
  v60 = &v17[v59];
  v61 = (char *)(v18 + v59);
  v62 = v23(&v17[v59], 1, v13);
  v63 = v23(v61, 1, v13);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v60, v61, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v60, 0, 1, v13);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v63)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v60, v13);
LABEL_36:
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    goto LABEL_37;
  }
  v267(v60, v61, v13);
LABEL_37:
  v65 = v274;
  v17[v19[17]] = *(_BYTE *)(v18 + v19[17]);
  *(_QWORD *)&v17[v19[18]] = *(_QWORD *)(v18 + v19[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v17[v19[19]] = *(_QWORD *)(v18 + v19[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v66 = v275[7];
  v67 = (uint64_t)&v7[v66];
  v68 = (__int128 *)(v274 + v66);
  v69 = *(_QWORD *)&v7[v66 + 16];
  v70 = *(_QWORD *)(v274 + v66 + 16);
  if (v69 == 1)
  {
    if (v70 == 1)
    {
      v71 = *v68;
      v72 = v68[1];
      v73 = v68[2];
      *(_BYTE *)(v67 + 48) = *((_BYTE *)v68 + 48);
      *(_OWORD *)(v67 + 16) = v72;
      *(_OWORD *)(v67 + 32) = v73;
      *(_OWORD *)v67 = v71;
    }
    else
    {
      *(_QWORD *)v67 = *(_QWORD *)v68;
      *(_QWORD *)(v67 + 8) = *((_QWORD *)v68 + 1);
      *(_QWORD *)(v67 + 16) = *((_QWORD *)v68 + 2);
      *(_QWORD *)(v67 + 24) = *((_QWORD *)v68 + 3);
      *(_QWORD *)(v67 + 32) = *((_QWORD *)v68 + 4);
      v77 = *((_QWORD *)v68 + 5);
      *(_BYTE *)(v67 + 48) = *((_BYTE *)v68 + 48);
      *(_QWORD *)(v67 + 40) = v77;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v70 == 1)
  {
    sub_24B7DA0D4(v67);
    v75 = v68[1];
    v74 = v68[2];
    v76 = *v68;
    *(_BYTE *)(v67 + 48) = *((_BYTE *)v68 + 48);
    *(_OWORD *)(v67 + 16) = v75;
    *(_OWORD *)(v67 + 32) = v74;
    *(_OWORD *)v67 = v76;
  }
  else
  {
    *(_QWORD *)v67 = *(_QWORD *)v68;
    *(_QWORD *)(v67 + 8) = *((_QWORD *)v68 + 1);
    *(_QWORD *)(v67 + 16) = *((_QWORD *)v68 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v67 + 24) = *((_QWORD *)v68 + 3);
    *(_QWORD *)(v67 + 32) = *((_QWORD *)v68 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v78 = *((_QWORD *)v68 + 5);
    *(_BYTE *)(v67 + 48) = *((_BYTE *)v68 + 48);
    *(_QWORD *)(v67 + 40) = v78;
  }
  v7[v275[8]] = *(_BYTE *)(v274 + v275[8]);
  v79 = v275[9];
  v80 = &v7[v79];
  v81 = (char *)(v274 + v79);
  v82 = v23(&v7[v79], 1, v13);
  v83 = v23(v81, 1, v13);
  if (v82)
  {
    if (!v83)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v80, v81, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v80, 0, 1, v13);
      goto LABEL_50;
    }
    goto LABEL_49;
  }
  if (v83)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v80, v13);
LABEL_49:
    v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    goto LABEL_50;
  }
  v267(v80, v81, v13);
LABEL_50:
  v85 = v275[10];
  v86 = (uint64_t)&v7[v85];
  v87 = (__int128 *)(v274 + v85);
  v88 = *(_QWORD *)&v7[v85 + 16];
  v89 = *(_QWORD *)(v274 + v85 + 16);
  if (v88 == 1)
  {
    if (v89 == 1)
    {
      v90 = *v87;
      v91 = v87[1];
      v92 = v87[2];
      *(_BYTE *)(v86 + 48) = *((_BYTE *)v87 + 48);
      *(_OWORD *)(v86 + 16) = v91;
      *(_OWORD *)(v86 + 32) = v92;
      *(_OWORD *)v86 = v90;
    }
    else
    {
      *(_QWORD *)v86 = *(_QWORD *)v87;
      *(_QWORD *)(v86 + 8) = *((_QWORD *)v87 + 1);
      *(_QWORD *)(v86 + 16) = *((_QWORD *)v87 + 2);
      *(_QWORD *)(v86 + 24) = *((_QWORD *)v87 + 3);
      *(_QWORD *)(v86 + 32) = *((_QWORD *)v87 + 4);
      v96 = *((_QWORD *)v87 + 5);
      *(_BYTE *)(v86 + 48) = *((_BYTE *)v87 + 48);
      *(_QWORD *)(v86 + 40) = v96;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v89 == 1)
  {
    sub_24B7DA0D4(v86);
    v94 = v87[1];
    v93 = v87[2];
    v95 = *v87;
    *(_BYTE *)(v86 + 48) = *((_BYTE *)v87 + 48);
    *(_OWORD *)(v86 + 16) = v94;
    *(_OWORD *)(v86 + 32) = v93;
    *(_OWORD *)v86 = v95;
  }
  else
  {
    *(_QWORD *)v86 = *(_QWORD *)v87;
    *(_QWORD *)(v86 + 8) = *((_QWORD *)v87 + 1);
    *(_QWORD *)(v86 + 16) = *((_QWORD *)v87 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v86 + 24) = *((_QWORD *)v87 + 3);
    *(_QWORD *)(v86 + 32) = *((_QWORD *)v87 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v97 = *((_QWORD *)v87 + 5);
    *(_BYTE *)(v86 + 48) = *((_BYTE *)v87 + 48);
    *(_QWORD *)(v86 + 40) = v97;
  }
  v98 = v275[11];
  v99 = &v7[v98];
  v100 = (char *)(v274 + v98);
  v101 = v23(&v7[v98], 1, v13);
  v102 = v23(v100, 1, v13);
  if (v101)
  {
    if (!v102)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v99, v100, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v99, 0, 1, v13);
      goto LABEL_63;
    }
    goto LABEL_62;
  }
  if (v102)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v99, v13);
LABEL_62:
    v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
    goto LABEL_63;
  }
  v267(v99, v100, v13);
LABEL_63:
  v104 = v275[12];
  v105 = &v7[v104];
  v106 = (char *)(v274 + v104);
  v107 = v23(&v7[v104], 1, v13);
  v108 = v23(v106, 1, v13);
  if (v107)
  {
    if (!v108)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v105, v106, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v105, 0, 1, v13);
      goto LABEL_69;
    }
    goto LABEL_68;
  }
  if (v108)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v105, v13);
LABEL_68:
    v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
    goto LABEL_69;
  }
  v267(v105, v106, v13);
LABEL_69:
  *(_QWORD *)&v7[v275[13]] = *(_QWORD *)(v274 + v275[13]);
  *(_QWORD *)&v7[v275[14]] = *(_QWORD *)(v274 + v275[14]);
  *(_QWORD *)&v7[v275[15]] = *(_QWORD *)(v274 + v275[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v110 = v275[16];
  v111 = &v7[v110];
  v112 = (_DWORD *)(v274 + v110);
  v113 = _s8SequenceV10EnrollmentVMa(0);
  v114 = *(_QWORD *)(v113 - 8);
  v115 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v114 + 48);
  v116 = v115(v111, 1, v113);
  v117 = v115((char *)v112, 1, v113);
  if (!v116)
  {
    if (v117)
    {
      sub_24B7B2E38((uint64_t)v111, _s8SequenceV10EnrollmentVMa);
      goto LABEL_75;
    }
    *(_DWORD *)v111 = *v112;
    v125 = *(int *)(v113 + 20);
    v126 = &v111[v125];
    v127 = (char *)v112 + v125;
    v128 = (int *)_s8IdentityVMa(0);
    v261 = *((_QWORD *)v128 - 1);
    v262 = (uint64_t)v126;
    v129 = *(uint64_t (**)(char *, uint64_t, int *))(v261 + 48);
    LODWORD(v126) = v129(v126, 1, v128);
    v130 = v129(v127, 1, v128);
    if ((_DWORD)v126)
    {
      if (v130)
      {
        v131 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B08C0) - 8) + 64);
        v132 = (void *)v262;
LABEL_95:
        memcpy(v132, v127, v131);
        goto LABEL_98;
      }
      (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(v262, v127, v13);
      v145 = v128[5];
      v146 = v262 + v145;
      v147 = &v127[v145];
      v148 = sub_24B7F3490();
      v269 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v148 - 8) + 16);
      v269(v146, v147, v148);
      *(_DWORD *)(v262 + v128[6]) = *(_DWORD *)&v127[v128[6]];
      v149 = v128[7];
      v150 = (_QWORD *)(v262 + v149);
      v151 = &v127[v149];
      *v150 = *(_QWORD *)v151;
      v150[1] = *((_QWORD *)v151 + 1);
      v152 = v128[8];
      v153 = v262 + v152;
      v154 = &v127[v152];
      swift_bridgeObjectRetain();
      v269(v153, v154, v148);
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v261 + 56))(v262, 0, 1, v128);
    }
    else
    {
      if (v130)
      {
        sub_24B7B2E38(v262, _s8IdentityVMa);
        v131 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B08C0) - 8) + 64);
        v132 = (void *)v262;
        goto LABEL_95;
      }
      v267((char *)v262, v127, v13);
      v155 = v128[5];
      v270 = v262 + v155;
      v156 = &v127[v155];
      v157 = sub_24B7F3490();
      v158 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v157 - 8) + 24);
      v158(v270, v156, v157);
      *(_DWORD *)(v262 + v128[6]) = *(_DWORD *)&v127[v128[6]];
      v159 = v128[7];
      v160 = (_QWORD *)(v262 + v159);
      v161 = &v127[v159];
      *v160 = *(_QWORD *)v161;
      v160[1] = *((_QWORD *)v161 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v158(v262 + v128[8], &v127[v128[8]], v157);
    }
LABEL_98:
    v65 = v274;
    v124 = v275;
    v162 = *(int *)(v113 + 24);
    v163 = &v111[v162];
    v164 = (_QWORD *)((char *)v112 + v162);
    v165 = *(_QWORD *)&v111[v162 + 8];
    v166 = *(_QWORD *)((char *)v112 + v162 + 8);
    if (v165 == 1)
    {
      if (v166 != 1)
      {
        *(_QWORD *)v163 = *v164;
        *((_QWORD *)v163 + 1) = v164[1];
        swift_bridgeObjectRetain();
        goto LABEL_105;
      }
    }
    else
    {
      if (v166 != 1)
      {
        *(_QWORD *)v163 = *v164;
        *((_QWORD *)v163 + 1) = v164[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_105;
      }
      sub_24B7B2F44((uint64_t)v163, &qword_2579B0888);
    }
    *(_OWORD *)v163 = *(_OWORD *)v164;
    goto LABEL_105;
  }
  if (v117)
  {
LABEL_75:
    v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04A8);
    memcpy(v111, v112, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
    v124 = v275;
    goto LABEL_105;
  }
  *(_DWORD *)v111 = *v112;
  v118 = *(int *)(v113 + 20);
  v119 = &v111[v118];
  v120 = (char *)v112 + v118;
  v121 = (int *)_s8IdentityVMa(0);
  v268 = *((_QWORD *)v121 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v268 + 48))(v120, 1, v121))
  {
    v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B08C0);
    memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v119, v120, v13);
    v133 = v121[5];
    v134 = &v119[v133];
    v263 = &v120[v133];
    v135 = sub_24B7F3490();
    __srca = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 16);
    __srca(v134, v263, v135);
    *(_DWORD *)&v119[v121[6]] = *(_DWORD *)&v120[v121[6]];
    v136 = v121[7];
    v137 = &v119[v136];
    v138 = &v120[v136];
    *(_QWORD *)v137 = *(_QWORD *)v138;
    *((_QWORD *)v137 + 1) = *((_QWORD *)v138 + 1);
    v139 = v121[8];
    v140 = &v119[v139];
    v141 = &v120[v139];
    swift_bridgeObjectRetain();
    __srca(v140, v141, v135);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v268 + 56))(v119, 0, 1, v121);
  }
  v65 = v274;
  v124 = v275;
  v142 = *(int *)(v113 + 24);
  v143 = &v111[v142];
  v144 = (char *)v112 + v142;
  if (*((_QWORD *)v144 + 1) == 1)
  {
    *(_OWORD *)v143 = *(_OWORD *)v144;
  }
  else
  {
    *(_QWORD *)v143 = *(_QWORD *)v144;
    *((_QWORD *)v143 + 1) = *((_QWORD *)v144 + 1);
    swift_bridgeObjectRetain();
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v114 + 56))(v111, 0, 1, v113);
LABEL_105:
  v167 = v124[17];
  v168 = &v7[v167];
  v169 = (char *)(v65 + v167);
  matched = _s8SequenceV5MatchVMa(0);
  v171 = *(_QWORD *)(matched - 8);
  v172 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v171 + 48);
  v173 = v172(v168, 1, matched);
  v174 = v172(v169, 1, matched);
  if (!v173)
  {
    if (v174)
    {
      sub_24B7B2E38((uint64_t)v168, _s8SequenceV5MatchVMa);
      goto LABEL_111;
    }
    v179 = (int *)_s8SequenceV5MatchV6FilterVMa(0);
    v180 = *((_QWORD *)v179 - 1);
    v181 = *(uint64_t (**)(char *, uint64_t, int *))(v180 + 48);
    v182 = v181(v168, 1, v179);
    v183 = v181(v169, 1, v179);
    if (v182)
    {
      if (!v183)
      {
        v184 = sub_24B7F3490();
        v185 = *(_QWORD *)(v184 - 8);
        v186 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v185 + 48);
        v271 = v185;
        if (v186(v169, 1, v184))
        {
          v187 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
          memcpy(v168, v169, *(_QWORD *)(*(_QWORD *)(v187 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v185 + 16))(v168, v169, v184);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v185 + 56))(v168, 0, 1, v184);
        }
        v215 = v179[5];
        v216 = &v168[v215];
        v217 = &v169[v215];
        if (v186(&v169[v215], 1, v184))
        {
          v218 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
          memcpy(v216, v217, *(_QWORD *)(*(_QWORD *)(v218 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v271 + 16))(v216, v217, v184);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v271 + 56))(v216, 0, 1, v184);
        }
        v219 = v179[6];
        v220 = &v168[v219];
        v221 = &v169[v219];
        v222 = *(_DWORD *)v221;
        v220[4] = v221[4];
        *(_DWORD *)v220 = v222;
        *(_QWORD *)&v168[v179[7]] = *(_QWORD *)&v169[v179[7]];
        v223 = *(void (**)(char *, _QWORD, uint64_t, int *))(v180 + 56);
        swift_bridgeObjectRetain();
        v223(v168, 0, 1, v179);
        goto LABEL_148;
      }
LABEL_120:
      v191 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0958);
      memcpy(v168, v169, *(_QWORD *)(*(_QWORD *)(v191 - 8) + 64));
LABEL_149:
      v124 = v275;
      v235 = *(int *)(matched + 20);
      v236 = (uint64_t)&v168[v235];
      v237 = &v169[v235];
      v238 = *(_QWORD *)&v168[v235 + 24];
      v239 = *(_QWORD *)&v169[v235 + 24];
      if (v238 == 1)
      {
        if (v239 == 1)
        {
          v240 = *(_OWORD *)v237;
          v241 = *((_OWORD *)v237 + 1);
          v242 = *((_OWORD *)v237 + 2);
          *(_QWORD *)(v236 + 48) = *((_QWORD *)v237 + 6);
          *(_OWORD *)(v236 + 16) = v241;
          *(_OWORD *)(v236 + 32) = v242;
          *(_OWORD *)v236 = v240;
        }
        else
        {
          *(_BYTE *)v236 = *v237;
          *(_BYTE *)(v236 + 1) = v237[1];
          *(_BYTE *)(v236 + 2) = v237[2];
          *(_BYTE *)(v236 + 3) = v237[3];
          *(_BYTE *)(v236 + 4) = v237[4];
          *(_BYTE *)(v236 + 5) = v237[5];
          *(_BYTE *)(v236 + 6) = v237[6];
          *(_BYTE *)(v236 + 7) = v237[7];
          v246 = *((_QWORD *)v237 + 1);
          *(_BYTE *)(v236 + 16) = v237[16];
          *(_QWORD *)(v236 + 8) = v246;
          *(_BYTE *)(v236 + 17) = v237[17];
          *(_BYTE *)(v236 + 18) = v237[18];
          *(_BYTE *)(v236 + 19) = v237[19];
          *(_QWORD *)(v236 + 24) = *((_QWORD *)v237 + 3);
          v247 = *((_QWORD *)v237 + 4);
          *(_BYTE *)(v236 + 40) = v237[40];
          *(_QWORD *)(v236 + 32) = v247;
          *(_QWORD *)(v236 + 48) = *((_QWORD *)v237 + 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
      }
      else if (v239 == 1)
      {
        sub_24B7DA104(v236);
        v244 = *((_OWORD *)v237 + 1);
        v243 = *((_OWORD *)v237 + 2);
        v245 = *(_OWORD *)v237;
        *(_QWORD *)(v236 + 48) = *((_QWORD *)v237 + 6);
        *(_OWORD *)(v236 + 16) = v244;
        *(_OWORD *)(v236 + 32) = v243;
        *(_OWORD *)v236 = v245;
      }
      else
      {
        *(_BYTE *)v236 = *v237;
        *(_BYTE *)(v236 + 1) = v237[1];
        *(_BYTE *)(v236 + 2) = v237[2];
        *(_BYTE *)(v236 + 3) = v237[3];
        *(_BYTE *)(v236 + 4) = v237[4];
        *(_BYTE *)(v236 + 5) = v237[5];
        *(_BYTE *)(v236 + 6) = v237[6];
        *(_BYTE *)(v236 + 7) = v237[7];
        v248 = *((_QWORD *)v237 + 1);
        *(_BYTE *)(v236 + 16) = v237[16];
        *(_QWORD *)(v236 + 8) = v248;
        *(_BYTE *)(v236 + 17) = v237[17];
        *(_BYTE *)(v236 + 18) = v237[18];
        *(_BYTE *)(v236 + 19) = v237[19];
        *(_QWORD *)(v236 + 24) = *((_QWORD *)v237 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v249 = *((_QWORD *)v237 + 4);
        *(_BYTE *)(v236 + 40) = v237[40];
        *(_QWORD *)(v236 + 32) = v249;
        *(_QWORD *)(v236 + 48) = *((_QWORD *)v237 + 6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      *(_QWORD *)&v168[*(int *)(matched + 24)] = *(_QWORD *)&v169[*(int *)(matched + 24)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_157;
    }
    if (v183)
    {
      sub_24B7B2E38((uint64_t)v168, _s8SequenceV5MatchV6FilterVMa);
      goto LABEL_120;
    }
    v210 = sub_24B7F3490();
    v211 = *(_QWORD *)(v210 - 8);
    v212 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v211 + 48);
    v213 = v212(v168, 1, v210);
    v214 = v212(v169, 1, v210);
    v273 = v211;
    if (v213)
    {
      if (!v214)
      {
        (*(void (**)(char *, char *, uint64_t))(v211 + 16))(v168, v169, v210);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v211 + 56))(v168, 0, 1, v210);
        goto LABEL_141;
      }
    }
    else
    {
      if (!v214)
      {
        (*(void (**)(char *, char *, uint64_t))(v211 + 24))(v168, v169, v210);
LABEL_141:
        v225 = v179[5];
        v226 = &v168[v225];
        v227 = &v169[v225];
        v228 = v212(&v168[v225], 1, v210);
        v229 = v212(v227, 1, v210);
        if (v228)
        {
          if (!v229)
          {
            (*(void (**)(char *, char *, uint64_t))(v273 + 16))(v226, v227, v210);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v273 + 56))(v226, 0, 1, v210);
LABEL_147:
            v231 = v179[6];
            v232 = &v168[v231];
            v233 = &v169[v231];
            v234 = *(_DWORD *)v233;
            v232[4] = v233[4];
            *(_DWORD *)v232 = v234;
            *(_QWORD *)&v168[v179[7]] = *(_QWORD *)&v169[v179[7]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
LABEL_148:
            v65 = v274;
            goto LABEL_149;
          }
        }
        else
        {
          if (!v229)
          {
            (*(void (**)(char *, char *, uint64_t))(v273 + 24))(v226, v227, v210);
            goto LABEL_147;
          }
          (*(void (**)(char *, uint64_t))(v273 + 8))(v226, v210);
        }
        v230 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
        memcpy(v226, v227, *(_QWORD *)(*(_QWORD *)(v230 - 8) + 64));
        goto LABEL_147;
      }
      (*(void (**)(char *, uint64_t))(v211 + 8))(v168, v210);
    }
    v224 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(v168, v169, *(_QWORD *)(*(_QWORD *)(v224 - 8) + 64));
    goto LABEL_141;
  }
  if (v174)
  {
LABEL_111:
    v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04B0);
    memcpy(v168, v169, *(_QWORD *)(*(_QWORD *)(v178 - 8) + 64));
    goto LABEL_157;
  }
  v175 = (int *)_s8SequenceV5MatchV6FilterVMa(0);
  v176 = *((_QWORD *)v175 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v176 + 48))(v169, 1, v175))
  {
    v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0958);
    memcpy(v168, v169, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
  }
  else
  {
    v188 = sub_24B7F3490();
    v189 = *(_QWORD *)(v188 - 8);
    v272 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v189 + 48);
    __src = (void (**)(void *, const void *, uint64_t))v189;
    if (v272(v169, 1, v188))
    {
      v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
      memcpy(v168, v169, *(_QWORD *)(*(_QWORD *)(v190 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v189 + 16))(v168, v169, v188);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v189 + 56))(v168, 0, 1, v188);
    }
    v192 = v175[5];
    v193 = &v168[v192];
    v194 = &v169[v192];
    if (v272(&v169[v192], 1, v188))
    {
      v195 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
      memcpy(v193, v194, *(_QWORD *)(*(_QWORD *)(v195 - 8) + 64));
    }
    else
    {
      __src[2](v193, v194, v188);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))__src[7])(v193, 0, 1, v188);
    }
    v196 = v175[6];
    v197 = &v168[v196];
    v198 = &v169[v196];
    v199 = *(_DWORD *)v198;
    v197[4] = v198[4];
    *(_DWORD *)v197 = v199;
    *(_QWORD *)&v168[v175[7]] = *(_QWORD *)&v169[v175[7]];
    v200 = *(void (**)(char *, _QWORD, uint64_t, int *))(v176 + 56);
    swift_bridgeObjectRetain();
    v200(v168, 0, 1, v175);
    v65 = v274;
    v124 = v275;
  }
  v201 = *(int *)(matched + 20);
  v202 = &v168[v201];
  v203 = &v169[v201];
  if (*((_QWORD *)v203 + 3) == 1)
  {
    v204 = *(_OWORD *)v203;
    v205 = *((_OWORD *)v203 + 1);
    v206 = *((_OWORD *)v203 + 2);
    *((_QWORD *)v202 + 6) = *((_QWORD *)v203 + 6);
    *((_OWORD *)v202 + 1) = v205;
    *((_OWORD *)v202 + 2) = v206;
    *(_OWORD *)v202 = v204;
  }
  else
  {
    *v202 = *v203;
    v202[1] = v203[1];
    v202[2] = v203[2];
    v202[3] = v203[3];
    v202[4] = v203[4];
    v202[5] = v203[5];
    v202[6] = v203[6];
    v202[7] = v203[7];
    v207 = *((_QWORD *)v203 + 1);
    v202[16] = v203[16];
    *((_QWORD *)v202 + 1) = v207;
    v202[17] = v203[17];
    v202[18] = v203[18];
    v202[19] = v203[19];
    *((_QWORD *)v202 + 3) = *((_QWORD *)v203 + 3);
    v208 = *((_QWORD *)v203 + 4);
    v202[40] = v203[40];
    *((_QWORD *)v202 + 4) = v208;
    *((_QWORD *)v202 + 6) = *((_QWORD *)v203 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)&v168[*(int *)(matched + 24)] = *(_QWORD *)&v169[*(int *)(matched + 24)];
  v209 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v171 + 56);
  swift_bridgeObjectRetain();
  v209(v168, 0, 1, matched);
LABEL_157:
  v250 = v124[18];
  v251 = (uint64_t)&v7[v250];
  v252 = (uint64_t *)(v65 + v250);
  v253 = *(_QWORD *)&v7[v250 + 16];
  v254 = *(_QWORD *)(v65 + v250 + 16);
  if (v253 == 2)
  {
    v255 = v266;
    if (v254 == 1 || v254 == 2)
      goto LABEL_160;
LABEL_165:
    v257 = *v252;
    *(_BYTE *)(v251 + 8) = *((_BYTE *)v252 + 8);
    *(_QWORD *)v251 = v257;
    *(_BYTE *)(v251 + 9) = *((_BYTE *)v252 + 9);
    *(_QWORD *)(v251 + 16) = v252[2];
    swift_bridgeObjectRetain();
    goto LABEL_170;
  }
  if (v254 == 2)
  {
    sub_24B7DA15C(v251);
    goto LABEL_168;
  }
  if (v253 != 1)
  {
    if (v254 != 1)
    {
      v260 = *v252;
      *(_BYTE *)(v251 + 8) = *((_BYTE *)v252 + 8);
      *(_QWORD *)v251 = v260;
      *(_BYTE *)(v251 + 9) = *((_BYTE *)v252 + 9);
      *(_QWORD *)(v251 + 16) = v252[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_169;
    }
    sub_24B7DA134(v251);
LABEL_168:
    v258 = v252[2];
    *(_OWORD *)v251 = *(_OWORD *)v252;
    *(_QWORD *)(v251 + 16) = v258;
LABEL_169:
    v255 = v266;
    goto LABEL_170;
  }
  v255 = v266;
  if (v254 != 1)
    goto LABEL_165;
LABEL_160:
  v256 = *(_OWORD *)v252;
  *(_QWORD *)(v251 + 16) = v252[2];
  *(_OWORD *)v251 = v256;
LABEL_170:
  *(_QWORD *)&v7[v124[19]] = *(_QWORD *)(v65 + v124[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v124[20]] = *(_QWORD *)(v65 + v124[20]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v255;
}

__n128 sub_24B7E9C54(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  int *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  __int128 v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  void (**v63)(void *, _QWORD, uint64_t, uint64_t);
  uint64_t v64;
  char *v65;
  char *v66;
  __int128 v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  int *v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, char *, uint64_t);
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t matched;
  uint64_t v93;
  uint64_t v94;
  int *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  __int128 v110;
  uint64_t v111;
  __n128 *v112;
  __n128 *v113;
  __n128 result;
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  int *v119;
  unsigned int (*v120)(char *, uint64_t, uint64_t);
  void (*v121)(char *, char *, uint64_t);
  uint64_t v122;
  uint64_t v123;
  void (**__dst)(void *, _QWORD, uint64_t, uint64_t);
  void (**__dsta)(void *, _QWORD, uint64_t, int *);
  char *__dstb;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  *(_OWORD *)((char *)a1 + 44) = *(_OWORD *)((char *)a2 + 44);
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  *(_QWORD *)((char *)a1 + v4) = *(_QWORD *)((char *)a2 + v4);
  v7 = _s8SequenceVMa(0);
  v8 = *(int *)(v7 + 20);
  v9 = &v5[v8];
  v10 = &v6[v8];
  v11 = sub_24B7F3460();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v13(v9, v10, v11);
  v119 = (int *)v7;
  v14 = *(int *)(v7 + 24);
  v15 = v5;
  v16 = &v5[v14];
  v116 = v6;
  v17 = &v6[v14];
  v13(&v5[v14], &v6[v14], v11);
  v18 = (int *)_s5StateVMa(0);
  v19 = v18[5];
  v20 = &v16[v19];
  v21 = &v17[v19];
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v121 = v13;
  __dst = (void (**)(void *, _QWORD, uint64_t, uint64_t))v12;
  if (v22(&v17[v19], 1, v11))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v13(v20, v21, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
  }
  v24 = v119;
  v25 = v15;
  v26 = v116;
  v27 = v18[6];
  v28 = &v16[v27];
  v29 = &v17[v27];
  *(_QWORD *)v28 = *(_QWORD *)v29;
  v28[8] = v29[8];
  v30 = v18[7];
  v31 = &v16[v30];
  v32 = &v17[v30];
  if (v22(&v17[v30], 1, v11))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    v121(v31, v32, v11);
    __dst[7](v31, 0, 1, v11);
  }
  v34 = v18[8];
  v35 = &v16[v34];
  v36 = &v17[v34];
  if (v22(&v17[v34], 1, v11))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    v121(v35, v36, v11);
    __dst[7](v35, 0, 1, v11);
  }
  v16[v18[9]] = v17[v18[9]];
  v38 = v18[10];
  v39 = &v16[v38];
  v40 = &v17[v38];
  if (v22(&v17[v38], 1, v11))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    v121(v39, v40, v11);
    __dst[7](v39, 0, 1, v11);
  }
  v42 = v18[11];
  v43 = &v16[v42];
  v44 = &v17[v42];
  *(_QWORD *)v43 = *(_QWORD *)v44;
  v43[8] = v44[8];
  v45 = v18[12];
  v46 = &v16[v45];
  v47 = &v17[v45];
  if (v22(&v17[v45], 1, v11))
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    v121(v46, v47, v11);
    __dst[7](v46, 0, 1, v11);
  }
  v16[v18[13]] = v17[v18[13]];
  v16[v18[14]] = v17[v18[14]];
  v16[v18[15]] = v17[v18[15]];
  v49 = v18[16];
  v50 = &v16[v49];
  v51 = &v17[v49];
  if (v22(&v17[v49], 1, v11))
  {
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    v53 = v121;
  }
  else
  {
    v54 = v51;
    v53 = v121;
    v121(v50, v54, v11);
    __dst[7](v50, 0, 1, v11);
  }
  v16[v18[17]] = v17[v18[17]];
  *(_QWORD *)&v16[v18[18]] = *(_QWORD *)&v17[v18[18]];
  *(_QWORD *)&v16[v18[19]] = *(_QWORD *)&v17[v18[19]];
  v55 = v119[7];
  v56 = &v25[v55];
  v57 = &v116[v55];
  v58 = *((_OWORD *)v57 + 1);
  *(_OWORD *)v56 = *(_OWORD *)v57;
  *((_OWORD *)v56 + 1) = v58;
  *((_OWORD *)v56 + 2) = *((_OWORD *)v57 + 2);
  v56[48] = v57[48];
  v25[v119[8]] = v116[v119[8]];
  v59 = v119[9];
  v60 = &v25[v59];
  v61 = &v116[v59];
  if (v22(&v116[v59], 1, v11))
  {
    v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    v63 = __dst;
  }
  else
  {
    v53(v60, v61, v11);
    v63 = __dst;
    __dst[7](v60, 0, 1, v11);
  }
  v64 = v119[10];
  v65 = &v25[v64];
  v66 = &v116[v64];
  v67 = *((_OWORD *)v66 + 1);
  *(_OWORD *)v65 = *(_OWORD *)v66;
  *((_OWORD *)v65 + 1) = v67;
  *((_OWORD *)v65 + 2) = *((_OWORD *)v66 + 2);
  v65[48] = v66[48];
  v68 = v119[11];
  v69 = &v25[v68];
  v70 = &v116[v68];
  if (v22(&v116[v68], 1, v11))
  {
    v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
  }
  else
  {
    v53(v69, v70, v11);
    v63[7](v69, 0, 1, v11);
  }
  v72 = v119[12];
  v73 = &v25[v72];
  v74 = &v116[v72];
  if (v22(&v116[v72], 1, v11))
  {
    v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
  }
  else
  {
    v53(v73, v74, v11);
    v63[7](v73, 0, 1, v11);
  }
  *(_QWORD *)&v25[v119[13]] = *(_QWORD *)&v116[v119[13]];
  *(_QWORD *)&v25[v119[14]] = *(_QWORD *)&v116[v119[14]];
  *(_QWORD *)&v25[v119[15]] = *(_QWORD *)&v116[v119[15]];
  v76 = v119[16];
  v77 = &v25[v76];
  v78 = &v116[v76];
  v79 = _s8SequenceV10EnrollmentVMa(0);
  v80 = *(_QWORD *)(v79 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79))
  {
    v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04A8);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v77 = *(_DWORD *)v78;
    v82 = *(int *)(v79 + 20);
    v83 = &v77[v82];
    v84 = &v78[v82];
    v85 = (int *)_s8IdentityVMa(0);
    __dsta = (void (**)(void *, _QWORD, uint64_t, int *))*((_QWORD *)v85 - 1);
    if (((unsigned int (*)(char *, uint64_t, int *))__dsta[6])(v84, 1, v85))
    {
      v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B08C0);
      memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    }
    else
    {
      v121(v83, v84, v11);
      v87 = v85[5];
      v115 = &v84[v87];
      v117 = &v83[v87];
      v122 = sub_24B7F3490();
      v88 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 32);
      v88(v117, v115, v122);
      *(_DWORD *)&v83[v85[6]] = *(_DWORD *)&v84[v85[6]];
      *(_OWORD *)&v83[v85[7]] = *(_OWORD *)&v84[v85[7]];
      v88(&v83[v85[8]], &v84[v85[8]], v122);
      __dsta[7](v83, 0, 1, v85);
    }
    *(_OWORD *)&v77[*(int *)(v79 + 24)] = *(_OWORD *)&v78[*(int *)(v79 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
    v24 = v119;
  }
  v89 = v24[17];
  v90 = &v25[v89];
  v91 = &v26[v89];
  matched = _s8SequenceV5MatchVMa(0);
  v93 = *(_QWORD *)(matched - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48))(v91, 1, matched))
  {
    v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04B0);
    memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
  }
  else
  {
    v95 = (int *)_s8SequenceV5MatchV6FilterVMa(0);
    v96 = *((_QWORD *)v95 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v96 + 48))(v91, 1, v95))
    {
      v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0958);
      memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
    }
    else
    {
      v123 = v96;
      v98 = sub_24B7F3490();
      v99 = *(_QWORD *)(v98 - 8);
      v120 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48);
      v118 = v99;
      if (v120(v91, 1, v98))
      {
        v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
        memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v90, v91, v98);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v90, 0, 1, v98);
      }
      v101 = v95[5];
      __dstb = &v90[v101];
      v102 = &v91[v101];
      if (v120(&v91[v101], 1, v98))
      {
        v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
        memcpy(__dstb, v102, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v118 + 32))(__dstb, v102, v98);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v118 + 56))(__dstb, 0, 1, v98);
      }
      v104 = v95[6];
      v105 = &v90[v104];
      v106 = &v91[v104];
      *(_DWORD *)v105 = *(_DWORD *)v106;
      v105[4] = v106[4];
      *(_QWORD *)&v90[v95[7]] = *(_QWORD *)&v91[v95[7]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v123 + 56))(v90, 0, 1, v95);
    }
    v107 = *(int *)(matched + 20);
    v108 = &v90[v107];
    v109 = &v91[v107];
    v110 = *((_OWORD *)v109 + 1);
    *(_OWORD *)v108 = *(_OWORD *)v109;
    *((_OWORD *)v108 + 1) = v110;
    *((_OWORD *)v108 + 2) = *((_OWORD *)v109 + 2);
    *((_QWORD *)v108 + 6) = *((_QWORD *)v109 + 6);
    *(_QWORD *)&v90[*(int *)(matched + 24)] = *(_QWORD *)&v91[*(int *)(matched + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v90, 0, 1, matched);
  }
  v111 = v24[18];
  v112 = (__n128 *)&v25[v111];
  v113 = (__n128 *)&v26[v111];
  result = *v113;
  *v112 = *v113;
  v112[1].n128_u64[0] = v113[1].n128_u64[0];
  *(_QWORD *)&v25[v24[19]] = *(_QWORD *)&v26[v24[19]];
  *(_QWORD *)&v25[v24[20]] = *(_QWORD *)&v26[v24[20]];
  return result;
}

uint64_t sub_24B7EA62C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  int v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  int v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t (*v102)(char *, uint64_t, uint64_t);
  int v103;
  int v104;
  uint64_t v105;
  char *v106;
  char *v107;
  int *v108;
  uint64_t v109;
  uint64_t v110;
  int *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  int *v115;
  uint64_t (*v116)(char *, uint64_t, int *);
  int v117;
  size_t v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  void (*v122)(char *, char *, uint64_t);
  uint64_t v123;
  char *v124;
  uint64_t v125;
  void (*v126)(uint64_t, char *, uint64_t);
  uint64_t v127;
  char *v128;
  uint64_t v129;
  void (*v130)(uint64_t, char *, uint64_t);
  uint64_t v131;
  _QWORD *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t matched;
  uint64_t v144;
  uint64_t (*v145)(char *, uint64_t, uint64_t);
  int v146;
  int v147;
  int *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  int *v152;
  uint64_t v153;
  uint64_t (*v154)(char *, uint64_t, int *);
  int v155;
  int v156;
  uint64_t v157;
  uint64_t v158;
  unsigned int (*v159)(char *, uint64_t, uint64_t);
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  char *v173;
  char *v174;
  __int128 v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t (*v178)(char *, uint64_t, uint64_t);
  int v179;
  int v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  int v192;
  int v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  __int128 v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  char *__srca;
  void (**__src)(void *, const void *, uint64_t);
  uint64_t v214;
  void (*v215)(char *, const void *, uint64_t);
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  unsigned int (*v220)(char *, uint64_t, uint64_t);
  uint64_t v221;
  uint64_t v222;
  int *v223;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  v9 = *(int *)(a3 + 20);
  v214 = a1;
  v10 = (char *)(a1 + v9);
  v11 = a2 + v9;
  *(_QWORD *)v10 = *(_QWORD *)(a2 + v9);
  v12 = _s8SequenceVMa(0);
  v13 = *(int *)(v12 + 20);
  v14 = &v10[v13];
  v15 = v11 + v13;
  v16 = sub_24B7F3460();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 40);
  v18(v14, v15, v16);
  v222 = v11;
  v223 = (int *)v12;
  v19 = *(int *)(v12 + 24);
  v20 = &v10[v19];
  v21 = v11 + v19;
  v215 = (void (*)(char *, const void *, uint64_t))v18;
  v18(&v10[v19], v11 + v19, v16);
  v22 = (int *)_s5StateVMa(0);
  v23 = v22[5];
  v24 = &v20[v23];
  v25 = (char *)(v21 + v23);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v27 = v26(&v20[v23], 1, v16);
  v28 = v26(v25, 1, v16);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v24, v25, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v24, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v24, v16);
LABEL_6:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_7;
  }
  v215(v24, v25, v16);
LABEL_7:
  v30 = v22[6];
  v31 = &v20[v30];
  v32 = v21 + v30;
  *(_QWORD *)v31 = *(_QWORD *)v32;
  v31[8] = *(_BYTE *)(v32 + 8);
  v33 = v22[7];
  v34 = &v20[v33];
  v35 = (char *)(v21 + v33);
  v36 = v26(&v20[v33], 1, v16);
  v37 = v26(v35, 1, v16);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v34, v35, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v34, 0, 1, v16);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v34, v16);
LABEL_12:
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_13;
  }
  v215(v34, v35, v16);
LABEL_13:
  v39 = v22[8];
  v40 = &v20[v39];
  v41 = (char *)(v21 + v39);
  v42 = v26(&v20[v39], 1, v16);
  v43 = v26(v41, 1, v16);
  if (v42)
  {
    if (!v43)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v40, v41, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v40, 0, 1, v16);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v43)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v40, v16);
LABEL_18:
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_19;
  }
  v215(v40, v41, v16);
LABEL_19:
  v20[v22[9]] = *(_BYTE *)(v21 + v22[9]);
  v45 = v22[10];
  v46 = &v20[v45];
  v47 = (char *)(v21 + v45);
  v48 = v26(&v20[v45], 1, v16);
  v49 = v26(v47, 1, v16);
  if (v48)
  {
    if (!v49)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v46, v47, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v46, 0, 1, v16);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v49)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v46, v16);
LABEL_24:
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_25;
  }
  v215(v46, v47, v16);
LABEL_25:
  v51 = v22[11];
  v52 = &v20[v51];
  v53 = v21 + v51;
  *(_QWORD *)v52 = *(_QWORD *)v53;
  v52[8] = *(_BYTE *)(v53 + 8);
  v54 = v22[12];
  v55 = &v20[v54];
  v56 = (char *)(v21 + v54);
  v57 = v26(&v20[v54], 1, v16);
  v58 = v26(v56, 1, v16);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v55, v56, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v55, 0, 1, v16);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v55, v16);
LABEL_30:
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_31;
  }
  v215(v55, v56, v16);
LABEL_31:
  v20[v22[13]] = *(_BYTE *)(v21 + v22[13]);
  v20[v22[14]] = *(_BYTE *)(v21 + v22[14]);
  v20[v22[15]] = *(_BYTE *)(v21 + v22[15]);
  v60 = v22[16];
  v61 = &v20[v60];
  v62 = (char *)(v21 + v60);
  v63 = v26(&v20[v60], 1, v16);
  v64 = v26(v62, 1, v16);
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v61, v62, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v61, 0, 1, v16);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v64)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v61, v16);
LABEL_36:
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    goto LABEL_37;
  }
  v215(v61, v62, v16);
LABEL_37:
  v66 = v222;
  v20[v22[17]] = *(_BYTE *)(v21 + v22[17]);
  *(_QWORD *)&v20[v22[18]] = *(_QWORD *)(v21 + v22[18]);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v20[v22[19]] = *(_QWORD *)(v21 + v22[19]);
  swift_bridgeObjectRelease();
  v67 = v223[7];
  v68 = (uint64_t)&v10[v67];
  v69 = v222 + v67;
  if (*(_QWORD *)&v10[v67 + 16] == 1)
  {
LABEL_40:
    v71 = *(_OWORD *)(v69 + 16);
    *(_OWORD *)v68 = *(_OWORD *)v69;
    *(_OWORD *)(v68 + 16) = v71;
    *(_OWORD *)(v68 + 32) = *(_OWORD *)(v69 + 32);
    goto LABEL_42;
  }
  v70 = *(_QWORD *)(v69 + 16);
  if (v70 == 1)
  {
    sub_24B7DA0D4(v68);
    goto LABEL_40;
  }
  *(_OWORD *)v68 = *(_OWORD *)v69;
  *(_QWORD *)(v68 + 16) = v70;
  swift_bridgeObjectRelease();
  v72 = *(_QWORD *)(v69 + 32);
  *(_QWORD *)(v68 + 24) = *(_QWORD *)(v69 + 24);
  *(_QWORD *)(v68 + 32) = v72;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v68 + 40) = *(_QWORD *)(v69 + 40);
LABEL_42:
  *(_BYTE *)(v68 + 48) = *(_BYTE *)(v69 + 48);
  v10[v223[8]] = *(_BYTE *)(v222 + v223[8]);
  v73 = v223[9];
  v74 = &v10[v73];
  v75 = (char *)(v222 + v73);
  v76 = v26(&v10[v73], 1, v16);
  v77 = v26(v75, 1, v16);
  if (v76)
  {
    if (!v77)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v74, v75, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v74, 0, 1, v16);
      goto LABEL_48;
    }
    goto LABEL_47;
  }
  if (v77)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v74, v16);
LABEL_47:
    v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    goto LABEL_48;
  }
  v215(v74, v75, v16);
LABEL_48:
  v79 = v223[10];
  v80 = (uint64_t)&v10[v79];
  v81 = v222 + v79;
  if (*(_QWORD *)&v10[v79 + 16] == 1)
  {
LABEL_51:
    v83 = *(_OWORD *)(v81 + 16);
    *(_OWORD *)v80 = *(_OWORD *)v81;
    *(_OWORD *)(v80 + 16) = v83;
    *(_OWORD *)(v80 + 32) = *(_OWORD *)(v81 + 32);
    goto LABEL_53;
  }
  v82 = *(_QWORD *)(v81 + 16);
  if (v82 == 1)
  {
    sub_24B7DA0D4(v80);
    goto LABEL_51;
  }
  *(_OWORD *)v80 = *(_OWORD *)v81;
  *(_QWORD *)(v80 + 16) = v82;
  swift_bridgeObjectRelease();
  v84 = *(_QWORD *)(v81 + 32);
  *(_QWORD *)(v80 + 24) = *(_QWORD *)(v81 + 24);
  *(_QWORD *)(v80 + 32) = v84;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v80 + 40) = *(_QWORD *)(v81 + 40);
LABEL_53:
  *(_BYTE *)(v80 + 48) = *(_BYTE *)(v81 + 48);
  v85 = v223[11];
  v86 = &v10[v85];
  v87 = (char *)(v222 + v85);
  v88 = v26(&v10[v85], 1, v16);
  v89 = v26(v87, 1, v16);
  if (v88)
  {
    if (!v89)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v86, v87, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v86, 0, 1, v16);
      goto LABEL_59;
    }
    goto LABEL_58;
  }
  if (v89)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v86, v16);
LABEL_58:
    v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
    goto LABEL_59;
  }
  v215(v86, v87, v16);
LABEL_59:
  v91 = v223[12];
  v92 = &v10[v91];
  v93 = (char *)(v222 + v91);
  v94 = v26(&v10[v91], 1, v16);
  v95 = v26(v93, 1, v16);
  if (v94)
  {
    if (!v95)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v92, v93, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v92, 0, 1, v16);
      goto LABEL_65;
    }
    goto LABEL_64;
  }
  if (v95)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v92, v16);
LABEL_64:
    v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0488);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
    goto LABEL_65;
  }
  v215(v92, v93, v16);
LABEL_65:
  *(_QWORD *)&v10[v223[13]] = *(_QWORD *)(v222 + v223[13]);
  *(_QWORD *)&v10[v223[14]] = *(_QWORD *)(v222 + v223[14]);
  *(_QWORD *)&v10[v223[15]] = *(_QWORD *)(v222 + v223[15]);
  swift_bridgeObjectRelease();
  v97 = v223[16];
  v98 = &v10[v97];
  v99 = (char *)(v222 + v97);
  v100 = _s8SequenceV10EnrollmentVMa(0);
  v101 = *(_QWORD *)(v100 - 8);
  v102 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v101 + 48);
  v103 = v102(v98, 1, v100);
  v104 = v102(v99, 1, v100);
  if (!v103)
  {
    if (v104)
    {
      sub_24B7B2E38((uint64_t)v98, _s8SequenceV10EnrollmentVMa);
      goto LABEL_71;
    }
    *(_DWORD *)v98 = *(_DWORD *)v99;
    v112 = *(int *)(v100 + 20);
    v113 = &v98[v112];
    v114 = &v99[v112];
    v115 = (int *)_s8IdentityVMa(0);
    v209 = *((_QWORD *)v115 - 1);
    v210 = (uint64_t)v113;
    v116 = *(uint64_t (**)(char *, uint64_t, int *))(v209 + 48);
    LODWORD(v113) = v116(v113, 1, v115);
    v117 = v116(v114, 1, v115);
    if ((_DWORD)v113)
    {
      if (v117)
      {
        v118 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B08C0) - 8) + 64);
        v119 = (void *)v210;
LABEL_88:
        memcpy(v119, v114, v118);
        goto LABEL_91;
      }
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v210, v114, v16);
      v123 = v115[5];
      v217 = v210 + v123;
      v124 = &v114[v123];
      v125 = sub_24B7F3490();
      v126 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 32);
      v126(v217, v124, v125);
      *(_DWORD *)(v210 + v115[6]) = *(_DWORD *)&v114[v115[6]];
      *(_OWORD *)(v210 + v115[7]) = *(_OWORD *)&v114[v115[7]];
      v126(v210 + v115[8], &v114[v115[8]], v125);
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v209 + 56))(v210, 0, 1, v115);
    }
    else
    {
      if (v117)
      {
        sub_24B7B2E38(v210, _s8IdentityVMa);
        v118 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B08C0) - 8) + 64);
        v119 = (void *)v210;
        goto LABEL_88;
      }
      v215((char *)v210, v114, v16);
      v127 = v115[5];
      v218 = v210 + v127;
      v128 = &v114[v127];
      v129 = sub_24B7F3490();
      v130 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v129 - 8) + 40);
      v130(v218, v128, v129);
      *(_DWORD *)(v210 + v115[6]) = *(_DWORD *)&v114[v115[6]];
      v131 = v115[7];
      v132 = (_QWORD *)(v210 + v131);
      v133 = &v114[v131];
      v135 = *(_QWORD *)v133;
      v134 = *((_QWORD *)v133 + 1);
      *v132 = v135;
      v132[1] = v134;
      swift_bridgeObjectRelease();
      v130(v210 + v115[8], &v114[v115[8]], v129);
    }
LABEL_91:
    v66 = v222;
    v111 = v223;
    v136 = *(int *)(v100 + 24);
    v137 = &v98[v136];
    v138 = &v99[v136];
    if (*(_QWORD *)&v98[v136 + 8] != 1)
    {
      v139 = v138[1];
      if (v139 != 1)
      {
        *(_QWORD *)v137 = *v138;
        *((_QWORD *)v137 + 1) = v139;
        swift_bridgeObjectRelease();
        goto LABEL_96;
      }
      sub_24B7B2F44((uint64_t)v137, &qword_2579B0888);
    }
    *(_OWORD *)v137 = *(_OWORD *)v138;
    goto LABEL_96;
  }
  if (v104)
  {
LABEL_71:
    v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04A8);
    memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
    v111 = v223;
    goto LABEL_96;
  }
  *(_DWORD *)v98 = *(_DWORD *)v99;
  v105 = *(int *)(v100 + 20);
  v106 = &v98[v105];
  v107 = &v99[v105];
  v108 = (int *)_s8IdentityVMa(0);
  v216 = *((_QWORD *)v108 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v216 + 48))(v107, 1, v108))
  {
    v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B08C0);
    memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v106, v107, v16);
    v120 = v108[5];
    v211 = &v107[v120];
    __srca = &v106[v120];
    v121 = sub_24B7F3490();
    v122 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 32);
    v122(__srca, v211, v121);
    *(_DWORD *)&v106[v108[6]] = *(_DWORD *)&v107[v108[6]];
    *(_OWORD *)&v106[v108[7]] = *(_OWORD *)&v107[v108[7]];
    v122(&v106[v108[8]], &v107[v108[8]], v121);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v216 + 56))(v106, 0, 1, v108);
  }
  v66 = v222;
  v111 = v223;
  *(_OWORD *)&v98[*(int *)(v100 + 24)] = *(_OWORD *)&v99[*(int *)(v100 + 24)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
LABEL_96:
  v140 = v111[17];
  v141 = &v10[v140];
  v142 = (char *)(v66 + v140);
  matched = _s8SequenceV5MatchVMa(0);
  v144 = *(_QWORD *)(matched - 8);
  v145 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v144 + 48);
  v146 = v145(v141, 1, matched);
  v147 = v145(v142, 1, matched);
  if (!v146)
  {
    if (v147)
    {
      sub_24B7B2E38((uint64_t)v141, _s8SequenceV5MatchVMa);
      goto LABEL_102;
    }
    v152 = (int *)_s8SequenceV5MatchV6FilterVMa(0);
    v153 = *((_QWORD *)v152 - 1);
    v154 = *(uint64_t (**)(char *, uint64_t, int *))(v153 + 48);
    v155 = v154(v141, 1, v152);
    v156 = v154(v142, 1, v152);
    if (v155)
    {
      if (!v156)
      {
        v157 = sub_24B7F3490();
        v158 = *(_QWORD *)(v157 - 8);
        v159 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48);
        v219 = v158;
        if (v159(v142, 1, v157))
        {
          v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
          memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v160 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v158 + 32))(v141, v142, v157);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v141, 0, 1, v157);
        }
        v181 = v152[5];
        v182 = &v141[v181];
        v183 = &v142[v181];
        if (v159(&v142[v181], 1, v157))
        {
          v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
          memcpy(v182, v183, *(_QWORD *)(*(_QWORD *)(v184 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v219 + 32))(v182, v183, v157);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v219 + 56))(v182, 0, 1, v157);
        }
        v185 = v152[6];
        v186 = &v141[v185];
        v187 = &v142[v185];
        *(_DWORD *)v186 = *(_DWORD *)v187;
        v186[4] = v187[4];
        *(_QWORD *)&v141[v152[7]] = *(_QWORD *)&v142[v152[7]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v153 + 56))(v141, 0, 1, v152);
        goto LABEL_136;
      }
LABEL_111:
      v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0958);
      memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v164 - 8) + 64));
      goto LABEL_137;
    }
    if (v156)
    {
      sub_24B7B2E38((uint64_t)v141, _s8SequenceV5MatchV6FilterVMa);
      goto LABEL_111;
    }
    v176 = sub_24B7F3490();
    v177 = *(_QWORD *)(v176 - 8);
    v178 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v177 + 48);
    v179 = v178(v141, 1, v176);
    v180 = v178(v142, 1, v176);
    v221 = v177;
    if (v179)
    {
      if (!v180)
      {
        (*(void (**)(char *, char *, uint64_t))(v177 + 32))(v141, v142, v176);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v177 + 56))(v141, 0, 1, v176);
        goto LABEL_129;
      }
    }
    else
    {
      if (!v180)
      {
        (*(void (**)(char *, char *, uint64_t))(v177 + 40))(v141, v142, v176);
LABEL_129:
        v189 = v152[5];
        v190 = &v141[v189];
        v191 = &v142[v189];
        v192 = v178(&v141[v189], 1, v176);
        v193 = v178(v191, 1, v176);
        if (v192)
        {
          if (!v193)
          {
            (*(void (**)(char *, char *, uint64_t))(v221 + 32))(v190, v191, v176);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v221 + 56))(v190, 0, 1, v176);
LABEL_135:
            v195 = v152[6];
            v196 = &v141[v195];
            v197 = &v142[v195];
            *(_DWORD *)v196 = *(_DWORD *)v197;
            v196[4] = v197[4];
            *(_QWORD *)&v141[v152[7]] = *(_QWORD *)&v142[v152[7]];
            swift_bridgeObjectRelease();
LABEL_136:
            v66 = v222;
LABEL_137:
            v111 = v223;
            v198 = *(int *)(matched + 20);
            v199 = (uint64_t)&v141[v198];
            v200 = &v142[v198];
            if (*(_QWORD *)&v141[v198 + 24] != 1)
            {
              v201 = *((_QWORD *)v200 + 3);
              if (v201 != 1)
              {
                *(_QWORD *)v199 = *(_QWORD *)v200;
                *(_QWORD *)(v199 + 8) = *((_QWORD *)v200 + 1);
                *(_DWORD *)(v199 + 16) = *((_DWORD *)v200 + 4);
                *(_QWORD *)(v199 + 24) = v201;
                swift_bridgeObjectRelease();
                *(_QWORD *)(v199 + 32) = *((_QWORD *)v200 + 4);
                *(_BYTE *)(v199 + 40) = v200[40];
                *(_QWORD *)(v199 + 48) = *((_QWORD *)v200 + 6);
                swift_bridgeObjectRelease();
                goto LABEL_142;
              }
              sub_24B7DA104(v199);
            }
            v202 = *((_OWORD *)v200 + 1);
            *(_OWORD *)v199 = *(_OWORD *)v200;
            *(_OWORD *)(v199 + 16) = v202;
            *(_OWORD *)(v199 + 32) = *((_OWORD *)v200 + 2);
            *(_QWORD *)(v199 + 48) = *((_QWORD *)v200 + 6);
LABEL_142:
            *(_QWORD *)&v141[*(int *)(matched + 24)] = *(_QWORD *)&v142[*(int *)(matched + 24)];
            swift_bridgeObjectRelease();
            goto LABEL_143;
          }
        }
        else
        {
          if (!v193)
          {
            (*(void (**)(char *, char *, uint64_t))(v221 + 40))(v190, v191, v176);
            goto LABEL_135;
          }
          (*(void (**)(char *, uint64_t))(v221 + 8))(v190, v176);
        }
        v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
        memcpy(v190, v191, *(_QWORD *)(*(_QWORD *)(v194 - 8) + 64));
        goto LABEL_135;
      }
      (*(void (**)(char *, uint64_t))(v177 + 8))(v141, v176);
    }
    v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
    goto LABEL_129;
  }
  if (v147)
  {
LABEL_102:
    v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B04B0);
    memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v151 - 8) + 64));
    goto LABEL_143;
  }
  v148 = (int *)_s8SequenceV5MatchV6FilterVMa(0);
  v149 = *((_QWORD *)v148 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v149 + 48))(v142, 1, v148))
  {
    v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0958);
    memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v150 - 8) + 64));
  }
  else
  {
    v161 = sub_24B7F3490();
    v162 = *(_QWORD *)(v161 - 8);
    v220 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v162 + 48);
    __src = (void (**)(void *, const void *, uint64_t))v162;
    if (v220(v142, 1, v161))
    {
      v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
      memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v162 + 32))(v141, v142, v161);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v162 + 56))(v141, 0, 1, v161);
    }
    v165 = v148[5];
    v166 = &v141[v165];
    v167 = &v142[v165];
    if (v220(&v142[v165], 1, v161))
    {
      v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
      memcpy(v166, v167, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
    }
    else
    {
      __src[4](v166, v167, v161);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))__src[7])(v166, 0, 1, v161);
    }
    v169 = v148[6];
    v170 = &v141[v169];
    v171 = &v142[v169];
    *(_DWORD *)v170 = *(_DWORD *)v171;
    v170[4] = v171[4];
    *(_QWORD *)&v141[v148[7]] = *(_QWORD *)&v142[v148[7]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v149 + 56))(v141, 0, 1, v148);
    v66 = v222;
    v111 = v223;
  }
  v172 = *(int *)(matched + 20);
  v173 = &v141[v172];
  v174 = &v142[v172];
  v175 = *((_OWORD *)v174 + 1);
  *(_OWORD *)v173 = *(_OWORD *)v174;
  *((_OWORD *)v173 + 1) = v175;
  *((_OWORD *)v173 + 2) = *((_OWORD *)v174 + 2);
  *((_QWORD *)v173 + 6) = *((_QWORD *)v174 + 6);
  *(_QWORD *)&v141[*(int *)(matched + 24)] = *(_QWORD *)&v142[*(int *)(matched + 24)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v141, 0, 1, matched);
LABEL_143:
  v203 = v111[18];
  v204 = (uint64_t)&v10[v203];
  v205 = v66 + v203;
  v206 = *(_QWORD *)&v10[v203 + 16];
  if (v206 != 2)
  {
    v207 = *(_QWORD *)(v205 + 16);
    if (v207 == 2)
    {
      sub_24B7DA15C(v204);
    }
    else if (v206 != 1)
    {
      if (v207 != 1)
      {
        *(_QWORD *)v204 = *(_QWORD *)v205;
        *(_WORD *)(v204 + 8) = *(_WORD *)(v205 + 8);
        *(_QWORD *)(v204 + 16) = v207;
        swift_bridgeObjectRelease();
        goto LABEL_150;
      }
      sub_24B7DA134(v204);
    }
  }
  *(_OWORD *)v204 = *(_OWORD *)v205;
  *(_QWORD *)(v204 + 16) = *(_QWORD *)(v205 + 16);
LABEL_150:
  *(_QWORD *)&v10[v111[19]] = *(_QWORD *)(v66 + v111[19]);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v10[v111[20]] = *(_QWORD *)(v66 + v111[20]);
  swift_bridgeObjectRelease();
  return v214;
}

uint64_t sub_24B7EBA14()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7EBA20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = _s8SequenceVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_24B7EBA9C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7EBAA8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = _s8SequenceVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_24B7EBB1C()
{
  uint64_t result;
  unint64_t v1;

  result = _s8SequenceVMa(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_24B7EBB90(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _DWORD *v27;
  _DWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t matched;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _DWORD *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v49;
  unsigned int (*v50)(_DWORD *, uint64_t, uint64_t);
  _DWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_24B7F3460();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_DWORD *)v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    v12 = a3[8];
    *(_DWORD *)((char *)a1 + a3[7]) = *(_DWORD *)((char *)a2 + a3[7]);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_24B7F3490();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v19 = a3[9];
    v20 = a3[10];
    v21 = (char *)a1 + v19;
    v22 = (char *)a2 + v19;
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v21[8] = v22[8];
    v23 = (_QWORD *)((char *)a1 + v20);
    v24 = (_QWORD *)((char *)a2 + v20);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = a3[11];
    v27 = (_DWORD *)((char *)a1 + v26);
    v28 = (_DWORD *)((char *)a2 + v26);
    swift_bridgeObjectRetain();
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0AC0);
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0AB0);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      matched = _s18MatchNodePlacementVMa(0);
      v33 = *(_QWORD *)(matched - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v33 + 48))(v28, 1, matched))
      {
        v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0920);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        v55 = v33;
        *v27 = *v28;
        *((_WORD *)v27 + 2) = *((_WORD *)v28 + 2);
        v27[2] = v28[2];
        *((_BYTE *)v27 + 12) = *((_BYTE *)v28 + 12);
        v35 = *(int *)(matched + 28);
        v36 = (_QWORD *)((char *)v27 + v35);
        v37 = (_QWORD *)((char *)v28 + v35);
        v38 = _s13NodePlacementVMa(0);
        v39 = *(_QWORD *)(v38 - 8);
        v54 = v38;
        if ((*(unsigned int (**)(_QWORD *, uint64_t))(v39 + 48))(v37, 1))
        {
          v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
          memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
          v41 = v55;
        }
        else
        {
          v52 = v39;
          v53 = v36;
          *v36 = *v37;
          *((_DWORD *)v36 + 2) = *((_DWORD *)v37 + 2);
          v36[2] = v37[2];
          v36[3] = v37[3];
          *((_DWORD *)v36 + 8) = *((_DWORD *)v37 + 8);
          v42 = v54;
          v43 = *(int *)(v54 + 68);
          v51 = (_DWORD *)((char *)v36 + v43);
          v44 = (_DWORD *)((char *)v37 + v43);
          v45 = _s13NodePlacementV12TemplateInfoVMa(0);
          v49 = *(_QWORD *)(v45 - 8);
          v50 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v49 + 48);
          swift_bridgeObjectRetain();
          if (v50(v44, 1, v45))
          {
            v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
            memcpy(v51, v44, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
          }
          else
          {
            *v51 = *v44;
            v47 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
            v47((char *)v51 + *(int *)(v45 + 24), (char *)v44 + *(int *)(v45 + 24), v15);
            v47((char *)v51 + *(int *)(v45 + 28), (char *)v44 + *(int *)(v45 + 28), v15);
            v42 = v54;
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v51, 0, 1, v45);
          }
          v41 = v55;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v53, 0, 1, v42);
        }
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v27, 0, 1, matched);
      }
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
  }
  return a1;
}

uint64_t sub_24B7EBF7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t matched;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);

  v4 = sub_24B7F3460();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 32);
  v6 = sub_24B7F3490();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_bridgeObjectRelease();
  v8 = a1 + *(int *)(a2 + 44);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0AC0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9);
  if (!(_DWORD)result)
  {
    matched = _s18MatchNodePlacementVMa(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(matched - 8) + 48))(v8, 1, matched);
    if (!(_DWORD)result)
    {
      v12 = v8 + *(int *)(matched + 28);
      v13 = _s13NodePlacementVMa(0);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13);
      if (!(_DWORD)result)
      {
        swift_bridgeObjectRelease();
        v14 = v12 + *(int *)(v13 + 68);
        v15 = _s13NodePlacementV12TemplateInfoVMa(0);
        result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15);
        if (!(_DWORD)result)
        {
          v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
          v16(v14 + *(int *)(v15 + 24), v6);
          return ((uint64_t (*)(uint64_t, uint64_t))v16)(v14 + *(int *)(v15 + 28), v6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_24B7EC124(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _DWORD *v25;
  _DWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t matched;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _DWORD *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v47;
  unsigned int (*v48)(_DWORD *, uint64_t, uint64_t);
  _DWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;

  v6 = sub_24B7F3460();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v11 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = sub_24B7F3490();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = a3[9];
  v18 = a3[10];
  v19 = a1 + v17;
  v20 = a2 + v17;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  v21 = (_QWORD *)(a1 + v18);
  v22 = (_QWORD *)(a2 + v18);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = a3[11];
  v25 = (_DWORD *)(a1 + v24);
  v26 = (_DWORD *)(a2 + v24);
  swift_bridgeObjectRetain();
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0AC0);
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0AB0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    matched = _s18MatchNodePlacementVMa(0);
    v31 = *(_QWORD *)(matched - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v31 + 48))(v26, 1, matched))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0920);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      v53 = v31;
      *v25 = *v26;
      *((_WORD *)v25 + 2) = *((_WORD *)v26 + 2);
      v25[2] = v26[2];
      *((_BYTE *)v25 + 12) = *((_BYTE *)v26 + 12);
      v33 = *(int *)(matched + 28);
      v34 = (_QWORD *)((char *)v25 + v33);
      v35 = (_QWORD *)((char *)v26 + v33);
      v36 = _s13NodePlacementVMa(0);
      v37 = *(_QWORD *)(v36 - 8);
      v52 = v36;
      if ((*(unsigned int (**)(_QWORD *, uint64_t))(v37 + 48))(v35, 1))
      {
        v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        v39 = v53;
      }
      else
      {
        v50 = v37;
        v51 = v34;
        *v34 = *v35;
        *((_DWORD *)v34 + 2) = *((_DWORD *)v35 + 2);
        v34[2] = v35[2];
        v34[3] = v35[3];
        *((_DWORD *)v34 + 8) = *((_DWORD *)v35 + 8);
        v40 = v52;
        v41 = *(int *)(v52 + 68);
        v49 = (_DWORD *)((char *)v34 + v41);
        v42 = (_DWORD *)((char *)v35 + v41);
        v43 = _s13NodePlacementV12TemplateInfoVMa(0);
        v47 = *(_QWORD *)(v43 - 8);
        v48 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v47 + 48);
        swift_bridgeObjectRetain();
        if (v48(v42, 1, v43))
        {
          v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
          memcpy(v49, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        }
        else
        {
          *v49 = *v42;
          v45 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
          v45((char *)v49 + *(int *)(v43 + 24), (char *)v42 + *(int *)(v43 + 24), v14);
          v45((char *)v49 + *(int *)(v43 + 28), (char *)v42 + *(int *)(v43 + 28), v14);
          v40 = v52;
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v49, 0, 1, v43);
        }
        v39 = v53;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v51, 0, 1, v40);
      }
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v25, 0, 1, matched);
    }
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  return a1;
}

uint64_t sub_24B7EC4E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  int v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _DWORD *v28;
  _DWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(_DWORD *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t matched;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t *v39;
  size_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t (*v44)(_DWORD *, uint64_t, uint64_t);
  int v45;
  int v46;
  int v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  size_t v53;
  char *v54;
  char *v55;
  int v56;
  uint64_t v57;
  _WORD *v58;
  _WORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _WORD *v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t (*v71)(_DWORD *, uint64_t, uint64_t);
  int v72;
  int v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  unsigned int (*v77)(char *, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, char *, uint64_t);
  void (*v82)(char *, char *, uint64_t);
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(char *, uint64_t, uint64_t);
  int v90;
  int v91;
  void (*v92)(char *, char *, uint64_t);
  void (*v93)(char *, char *, uint64_t);
  void (*v94)(char *, char *, uint64_t);
  uint64_t v95;
  _WORD *v96;
  uint64_t v97;
  uint64_t (*v98)(_WORD *, uint64_t, uint64_t);
  uint64_t v99;
  unsigned int (*v100)(char *, uint64_t, uint64_t);
  int *__dst;
  char *__dsta;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;

  v6 = sub_24B7F3460();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (int *)(a2 + v7);
  v10 = *v9;
  *(_BYTE *)(v8 + 4) = *((_BYTE *)v9 + 4);
  *(_DWORD *)v8 = v10;
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  v11 = a3[8];
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = sub_24B7F3490();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v12, v13, v14);
LABEL_7:
  v20 = a3[9];
  v21 = a1 + v20;
  v22 = (uint64_t *)(a2 + v20);
  v23 = *v22;
  *(_BYTE *)(v21 + 8) = *((_BYTE *)v22 + 8);
  *(_QWORD *)v21 = v23;
  v24 = a3[10];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  *v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = a3[11];
  v28 = (_DWORD *)(a1 + v27);
  v29 = (_DWORD *)(a2 + v27);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0AC0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v31 + 48);
  v33 = v32(v28, 1, v30);
  v34 = v32(v29, 1, v30);
  if (v33)
  {
    if (!v34)
    {
      matched = _s18MatchNodePlacementVMa(0);
      v36 = *(_QWORD *)(matched - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v36 + 48))(v29, 1, matched))
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0920);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        v38 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v31 + 56);
      }
      else
      {
        v106 = v36;
        *v28 = *v29;
        *((_WORD *)v28 + 2) = *((_WORD *)v29 + 2);
        v56 = v29[2];
        *((_BYTE *)v28 + 12) = *((_BYTE *)v29 + 12);
        v28[2] = v56;
        v57 = *(int *)(matched + 28);
        v58 = (_WORD *)((char *)v28 + v57);
        v59 = (_WORD *)((char *)v29 + v57);
        v60 = _s13NodePlacementVMa(0);
        v61 = *(_QWORD *)(v60 - 8);
        v103 = v60;
        if ((*(unsigned int (**)(_WORD *, uint64_t))(v61 + 48))(v59, 1))
        {
          v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
          memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          *v58 = *v59;
          v58[1] = v59[1];
          v58[2] = v59[2];
          v58[3] = v59[3];
          v58[4] = v59[4];
          v58[5] = v59[5];
          v99 = v61;
          *((_QWORD *)v58 + 2) = *((_QWORD *)v59 + 2);
          v58[12] = v59[12];
          v58[13] = v59[13];
          v58[14] = v59[14];
          v58[15] = v59[15];
          v58[16] = v59[16];
          v58[17] = v59[17];
          v63 = *(int *)(v103 + 68);
          v96 = (_WORD *)((char *)v58 + v63);
          v64 = (_WORD *)((char *)v59 + v63);
          v65 = _s13NodePlacementV12TemplateInfoVMa(0);
          v95 = *(_QWORD *)(v65 - 8);
          v98 = *(uint64_t (**)(_WORD *, uint64_t, uint64_t))(v95 + 48);
          swift_bridgeObjectRetain();
          __dst = (int *)v65;
          v66 = v98(v64, 1, v65);
          v67 = v103;
          if (v66)
          {
            v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
            memcpy(v96, v64, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
          }
          else
          {
            *v96 = *v64;
            v96[1] = v64[1];
            v81 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
            v81((char *)v96 + __dst[6], (char *)v64 + __dst[6], v14);
            v81((char *)v96 + __dst[7], (char *)v64 + __dst[7], v14);
            v67 = v103;
            (*(void (**)(_WORD *, _QWORD, uint64_t, int *))(v95 + 56))(v96, 0, 1, __dst);
          }
          (*(void (**)(_WORD *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v58, 0, 1, v67);
        }
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v106 + 56))(v28, 0, 1, matched);
        v38 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v31 + 56);
      }
      goto LABEL_44;
    }
    goto LABEL_13;
  }
  if (!v34)
  {
    v30 = _s18MatchNodePlacementVMa(0);
    v43 = *(_QWORD *)(v30 - 8);
    v44 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v43 + 48);
    v45 = v44(v28, 1, v30);
    v46 = v44(v29, 1, v30);
    if (v45)
    {
      if (!v46)
      {
        *v28 = *v29;
        *((_WORD *)v28 + 2) = *((_WORD *)v29 + 2);
        v47 = v29[2];
        *((_BYTE *)v28 + 12) = *((_BYTE *)v29 + 12);
        v28[2] = v47;
        v48 = *(int *)(v30 + 28);
        v49 = (char *)v28 + v48;
        v50 = (char *)v29 + v48;
        v51 = _s13NodePlacementVMa(0);
        v52 = *(_QWORD *)(v51 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
        {
          v105 = v52;
          *(_WORD *)v49 = *(_WORD *)v50;
          *((_WORD *)v49 + 1) = *((_WORD *)v50 + 1);
          *((_WORD *)v49 + 2) = *((_WORD *)v50 + 2);
          *((_WORD *)v49 + 3) = *((_WORD *)v50 + 3);
          *((_WORD *)v49 + 4) = *((_WORD *)v50 + 4);
          *((_WORD *)v49 + 5) = *((_WORD *)v50 + 5);
          *((_QWORD *)v49 + 2) = *((_QWORD *)v50 + 2);
          *((_WORD *)v49 + 12) = *((_WORD *)v50 + 12);
          *((_WORD *)v49 + 13) = *((_WORD *)v50 + 13);
          *((_WORD *)v49 + 14) = *((_WORD *)v50 + 14);
          *((_WORD *)v49 + 15) = *((_WORD *)v50 + 15);
          *((_WORD *)v49 + 16) = *((_WORD *)v50 + 16);
          *((_WORD *)v49 + 17) = *((_WORD *)v50 + 17);
          v78 = *(int *)(v51 + 68);
          __dsta = &v49[v78];
          v108 = &v50[v78];
          v79 = _s13NodePlacementV12TemplateInfoVMa(0);
          v97 = *(_QWORD *)(v79 - 8);
          v100 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48);
          swift_bridgeObjectRetain();
          if (v100(v108, 1, v79))
          {
            v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
            memcpy(__dsta, v108, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
          }
          else
          {
            *(_WORD *)__dsta = *(_WORD *)v108;
            *((_WORD *)__dsta + 1) = *((_WORD *)v108 + 1);
            v82 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
            v82(&__dsta[*(int *)(v79 + 24)], &v108[*(int *)(v79 + 24)], v14);
            v82(&__dsta[*(int *)(v79 + 28)], &v108[*(int *)(v79 + 28)], v14);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(__dsta, 0, 1, v79);
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v49, 0, 1, v51);
          goto LABEL_43;
        }
        v53 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490) - 8) + 64);
        v54 = v49;
        v55 = v50;
        goto LABEL_21;
      }
    }
    else
    {
      if (!v46)
      {
        *v28 = *v29;
        *((_WORD *)v28 + 2) = *((_WORD *)v29 + 2);
        v69 = v29[2];
        *((_BYTE *)v28 + 12) = *((_BYTE *)v29 + 12);
        v28[2] = v69;
        v70 = *(int *)(v30 + 28);
        v28 = (_DWORD *)((char *)v28 + v70);
        v29 = (_DWORD *)((char *)v29 + v70);
        v30 = _s13NodePlacementVMa(0);
        v43 = *(_QWORD *)(v30 - 8);
        v71 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v43 + 48);
        v72 = v71(v28, 1, v30);
        v73 = v71(v29, 1, v30);
        if (v72)
        {
          if (!v73)
          {
            *(_WORD *)v28 = *(_WORD *)v29;
            *((_WORD *)v28 + 1) = *((_WORD *)v29 + 1);
            *((_WORD *)v28 + 2) = *((_WORD *)v29 + 2);
            *((_WORD *)v28 + 3) = *((_WORD *)v29 + 3);
            *((_WORD *)v28 + 4) = *((_WORD *)v29 + 4);
            *((_WORD *)v28 + 5) = *((_WORD *)v29 + 5);
            *((_QWORD *)v28 + 2) = *((_QWORD *)v29 + 2);
            *((_WORD *)v28 + 12) = *((_WORD *)v29 + 12);
            *((_WORD *)v28 + 13) = *((_WORD *)v29 + 13);
            *((_WORD *)v28 + 14) = *((_WORD *)v29 + 14);
            *((_WORD *)v28 + 15) = *((_WORD *)v29 + 15);
            *((_WORD *)v28 + 16) = *((_WORD *)v29 + 16);
            *((_WORD *)v28 + 17) = *((_WORD *)v29 + 17);
            v74 = *(int *)(v30 + 68);
            v107 = (char *)v28 + v74;
            v75 = (char *)v29 + v74;
            v76 = _s13NodePlacementV12TemplateInfoVMa(0);
            v104 = *(_QWORD *)(v76 - 8);
            v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v104 + 48);
            swift_bridgeObjectRetain();
            if (!v77(v75, 1, v76))
            {
              *(_WORD *)v107 = *(_WORD *)v75;
              *((_WORD *)v107 + 1) = *((_WORD *)v75 + 1);
              v93 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
              v93(&v107[*(int *)(v76 + 24)], &v75[*(int *)(v76 + 24)], v14);
              v93(&v107[*(int *)(v76 + 28)], &v75[*(int *)(v76 + 28)], v14);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v104 + 56))(v107, 0, 1, v76);
              goto LABEL_43;
            }
            v53 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840) - 8) + 64);
            v54 = v107;
            v55 = v75;
LABEL_21:
            memcpy(v54, v55, v53);
LABEL_43:
            v38 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v43 + 56);
LABEL_44:
            v38(v28, 0, 1, v30);
            return a1;
          }
        }
        else
        {
          if (!v73)
          {
            *(_WORD *)v28 = *(_WORD *)v29;
            *((_WORD *)v28 + 1) = *((_WORD *)v29 + 1);
            *((_WORD *)v28 + 2) = *((_WORD *)v29 + 2);
            *((_WORD *)v28 + 3) = *((_WORD *)v29 + 3);
            *((_WORD *)v28 + 4) = *((_WORD *)v29 + 4);
            *((_WORD *)v28 + 5) = *((_WORD *)v29 + 5);
            *((_QWORD *)v28 + 2) = *((_QWORD *)v29 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *((_WORD *)v28 + 12) = *((_WORD *)v29 + 12);
            *((_WORD *)v28 + 13) = *((_WORD *)v29 + 13);
            *((_WORD *)v28 + 14) = *((_WORD *)v29 + 14);
            *((_WORD *)v28 + 15) = *((_WORD *)v29 + 15);
            *((_WORD *)v28 + 16) = *((_WORD *)v29 + 16);
            *((_WORD *)v28 + 17) = *((_WORD *)v29 + 17);
            v84 = *(int *)(v30 + 68);
            v85 = (char *)v28 + v84;
            v86 = (char *)v29 + v84;
            v87 = _s13NodePlacementV12TemplateInfoVMa(0);
            v88 = *(_QWORD *)(v87 - 8);
            v89 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v88 + 48);
            v90 = v89(v85, 1, v87);
            v91 = v89(v86, 1, v87);
            if (v90)
            {
              if (!v91)
              {
                *(_WORD *)v85 = *(_WORD *)v86;
                *((_WORD *)v85 + 1) = *((_WORD *)v86 + 1);
                v92 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
                v92(&v85[*(int *)(v87 + 24)], &v86[*(int *)(v87 + 24)], v14);
                v92(&v85[*(int *)(v87 + 28)], &v86[*(int *)(v87 + 28)], v14);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v85, 0, 1, v87);
                return a1;
              }
            }
            else
            {
              if (!v91)
              {
                *(_WORD *)v85 = *(_WORD *)v86;
                *((_WORD *)v85 + 1) = *((_WORD *)v86 + 1);
                v94 = *(void (**)(char *, char *, uint64_t))(v15 + 24);
                v94(&v85[*(int *)(v87 + 24)], &v86[*(int *)(v87 + 24)], v14);
                v94(&v85[*(int *)(v87 + 28)], &v86[*(int *)(v87 + 28)], v14);
                return a1;
              }
              sub_24B7B2E38((uint64_t)v85, _s13NodePlacementV12TemplateInfoVMa);
            }
            v40 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840) - 8) + 64);
            v41 = v85;
            v42 = v86;
            goto LABEL_15;
          }
          sub_24B7B2E38((uint64_t)v28, _s13NodePlacementVMa);
        }
        v39 = &qword_2579B0490;
        goto LABEL_14;
      }
      sub_24B7B2E38((uint64_t)v28, _s18MatchNodePlacementVMa);
    }
    v39 = &qword_2579B0920;
    goto LABEL_14;
  }
  sub_24B7B2F44((uint64_t)v28, &qword_2579B0AC0);
LABEL_13:
  v39 = &qword_2579B0AB0;
LABEL_14:
  v40 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(v39) - 8) + 64);
  v41 = (char *)v28;
  v42 = (char *)v29;
LABEL_15:
  memcpy(v41, v42, v40);
  return a1;
}

uint64_t sub_24B7ECF14(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _DWORD *v23;
  _DWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t matched;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _DWORD *v40;
  uint64_t v41;
  _DWORD *v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v48;
  _DWORD *__dst;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;

  v6 = sub_24B7F3460();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v11 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = sub_24B7F3490();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = a3[9];
  v18 = a3[10];
  v19 = a1 + v17;
  v20 = a2 + v17;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  v21 = *(_OWORD *)(a2 + v18);
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  *(_OWORD *)(a1 + v18) = v21;
  v22 = a3[11];
  v23 = (_DWORD *)(a1 + v22);
  v24 = (_DWORD *)(a2 + v22);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0AC0);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0AB0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    matched = _s18MatchNodePlacementVMa(0);
    v29 = *(_QWORD *)(matched - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v29 + 48))(v24, 1, matched))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0920);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v52 = matched;
      v53 = v29;
      *v23 = *v24;
      *((_WORD *)v23 + 2) = *((_WORD *)v24 + 2);
      v23[2] = v24[2];
      *((_BYTE *)v23 + 12) = *((_BYTE *)v24 + 12);
      v31 = *(int *)(matched + 28);
      v32 = (_QWORD *)((char *)v23 + v31);
      v33 = (_QWORD *)((char *)v24 + v31);
      v34 = _s13NodePlacementVMa(0);
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        v38 = v52;
        v37 = v53;
      }
      else
      {
        v50 = v35;
        v51 = v32;
        *v32 = *v33;
        *((_DWORD *)v32 + 2) = *((_DWORD *)v33 + 2);
        v32[2] = v33[2];
        v32[3] = v33[3];
        *((_DWORD *)v32 + 8) = *((_DWORD *)v33 + 8);
        v39 = *(int *)(v34 + 68);
        __dst = (_DWORD *)((char *)v32 + v39);
        v40 = (_DWORD *)((char *)v33 + v39);
        v41 = _s13NodePlacementV12TemplateInfoVMa(0);
        v48 = *(_QWORD *)(v41 - 8);
        v42 = v40;
        v43 = (*(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v48 + 48))(v40, 1, v41);
        v44 = v34;
        if (v43)
        {
          v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
          memcpy(__dst, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          *__dst = *v42;
          v46 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
          v46((char *)__dst + *(int *)(v41 + 24), (char *)v42 + *(int *)(v41 + 24), v14);
          v46((char *)__dst + *(int *)(v41 + 28), (char *)v42 + *(int *)(v41 + 28), v14);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v48 + 56))(__dst, 0, 1, v41);
        }
        v38 = v52;
        v37 = v53;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v51, 0, 1, v44);
      }
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v23, 0, 1, v38);
    }
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  return a1;
}

uint64_t sub_24B7ED2B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t);
  int v34;
  int v35;
  uint64_t matched;
  unsigned int (**v37)(_QWORD, uint64_t, uint64_t);
  size_t v38;
  void *v39;
  uint64_t *v40;
  size_t v41;
  void *v42;
  char *v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (**v61)(uint64_t, _QWORD, uint64_t, _QWORD);
  uint64_t v62;
  uint64_t v63;
  _DWORD *v64;
  uint64_t v65;
  _DWORD *v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, uint64_t, uint64_t);
  int v72;
  int v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _DWORD *v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, char *, uint64_t);
  void (*v84)(char *, char *, uint64_t);
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t (*v90)(char *, uint64_t, uint64_t);
  int v91;
  int v92;
  void (*v93)(char *, char *, uint64_t);
  void (*v94)(char *, uint64_t, uint64_t);
  void (*v95)(char *, char *, uint64_t);
  uint64_t v96;
  _DWORD *__dst;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  _DWORD *v104;

  v6 = sub_24B7F3460();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v11 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = sub_24B7F3490();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_7:
  v20 = a3[9];
  v21 = a3[10];
  v22 = a1 + v20;
  v23 = a2 + v20;
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_BYTE *)(v22 + 8) = *(_BYTE *)(v23 + 8);
  v24 = (_QWORD *)(a1 + v21);
  v25 = (uint64_t *)(a2 + v21);
  v27 = *v25;
  v26 = v25[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  v28 = a3[11];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0AC0);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
  v34 = v33(v29, 1, v31);
  v35 = v33(v30, 1, v31);
  if (v34)
  {
    if (!v35)
    {
      matched = _s18MatchNodePlacementVMa(0);
      v37 = *(unsigned int (***)(_QWORD, uint64_t, uint64_t))(matched - 8);
      if (!v37[6](v30, 1, matched))
      {
        v101 = matched;
        v103 = v37;
        *(_DWORD *)v29 = *(_DWORD *)v30;
        *(_WORD *)(v29 + 4) = *(_WORD *)(v30 + 4);
        *(_DWORD *)(v29 + 8) = *(_DWORD *)(v30 + 8);
        *(_BYTE *)(v29 + 12) = *(_BYTE *)(v30 + 12);
        v55 = *(int *)(matched + 28);
        v56 = (_QWORD *)(v29 + v55);
        v57 = (_QWORD *)(v30 + v55);
        v58 = _s13NodePlacementVMa(0);
        v59 = *(_QWORD *)(v58 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
        {
          v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
          memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
          v62 = v101;
          v61 = (void (**)(uint64_t, _QWORD, uint64_t, _QWORD))v103;
        }
        else
        {
          v98 = v59;
          v99 = v56;
          *v56 = *v57;
          *((_DWORD *)v56 + 2) = *((_DWORD *)v57 + 2);
          v56[2] = v57[2];
          v56[3] = v57[3];
          *((_DWORD *)v56 + 8) = *((_DWORD *)v57 + 8);
          v63 = *(int *)(v58 + 68);
          __dst = (_DWORD *)((char *)v56 + v63);
          v64 = (_DWORD *)((char *)v57 + v63);
          v65 = _s13NodePlacementV12TemplateInfoVMa(0);
          v96 = *(_QWORD *)(v65 - 8);
          v66 = v64;
          v67 = (*(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v96 + 48))(v64, 1, v65);
          v68 = v58;
          if (v67)
          {
            v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
            memcpy(__dst, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
          }
          else
          {
            *__dst = *v66;
            v82 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
            v82((char *)__dst + *(int *)(v65 + 24), (char *)v66 + *(int *)(v65 + 24), v14);
            v82((char *)__dst + *(int *)(v65 + 28), (char *)v66 + *(int *)(v65 + 28), v14);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v96 + 56))(__dst, 0, 1, v65);
          }
          v62 = v101;
          v61 = (void (**)(uint64_t, _QWORD, uint64_t, _QWORD))v103;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v99, 0, 1, v68);
        }
        v61[7](v29, 0, 1, v62);
        goto LABEL_38;
      }
      v38 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B0920) - 8) + 64);
      v39 = (void *)v29;
      goto LABEL_11;
    }
    goto LABEL_14;
  }
  if (v35)
  {
    sub_24B7B2F44(v29, &qword_2579B0AC0);
LABEL_14:
    v40 = &qword_2579B0AB0;
    goto LABEL_15;
  }
  v31 = _s18MatchNodePlacementVMa(0);
  v44 = *(_QWORD *)(v31 - 8);
  v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
  v46 = v45(v29, 1, v31);
  v47 = v45(v30, 1, v31);
  if (v46)
  {
    if (!v47)
    {
      *(_DWORD *)v29 = *(_DWORD *)v30;
      *(_WORD *)(v29 + 4) = *(_WORD *)(v30 + 4);
      *(_DWORD *)(v29 + 8) = *(_DWORD *)(v30 + 8);
      *(_BYTE *)(v29 + 12) = *(_BYTE *)(v30 + 12);
      v48 = *(int *)(v31 + 28);
      v49 = (_QWORD *)(v29 + v48);
      v50 = (_QWORD *)(v30 + v48);
      v51 = _s13NodePlacementVMa(0);
      v52 = *(_QWORD *)(v51 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
      {
        v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0490);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        v54 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56);
      }
      else
      {
        *v49 = *v50;
        *((_DWORD *)v49 + 2) = *((_DWORD *)v50 + 2);
        v49[2] = v50[2];
        v49[3] = v50[3];
        *((_DWORD *)v49 + 8) = *((_DWORD *)v50 + 8);
        v78 = *(int *)(v51 + 68);
        v102 = v52;
        v104 = (_DWORD *)((char *)v49 + v78);
        v79 = (_DWORD *)((char *)v50 + v78);
        v80 = _s13NodePlacementV12TemplateInfoVMa(0);
        v100 = *(_QWORD *)(v80 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v100 + 48))(v79, 1, v80))
        {
          v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840);
          memcpy(v104, v79, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
        }
        else
        {
          *v104 = *v79;
          v84 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
          v84((char *)v104 + *(int *)(v80 + 24), (char *)v79 + *(int *)(v80 + 24), v14);
          v84((char *)v104 + *(int *)(v80 + 28), (char *)v79 + *(int *)(v80 + 28), v14);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v104, 0, 1, v80);
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v49, 0, 1, v51);
        v54 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56);
      }
      goto LABEL_39;
    }
    goto LABEL_26;
  }
  if (v47)
  {
    sub_24B7B2E38(v29, _s18MatchNodePlacementVMa);
LABEL_26:
    v40 = &qword_2579B0920;
    goto LABEL_15;
  }
  *(_DWORD *)v29 = *(_DWORD *)v30;
  *(_WORD *)(v29 + 4) = *(_WORD *)(v30 + 4);
  *(_DWORD *)(v29 + 8) = *(_DWORD *)(v30 + 8);
  *(_BYTE *)(v29 + 12) = *(_BYTE *)(v30 + 12);
  v70 = *(int *)(v31 + 28);
  v29 += v70;
  v30 += v70;
  v31 = _s13NodePlacementVMa(0);
  v32 = *(_QWORD *)(v31 - 8);
  v71 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
  v72 = v71(v29, 1, v31);
  v73 = v71(v30, 1, v31);
  if (v72)
  {
    if (!v73)
    {
      *(_QWORD *)v29 = *(_QWORD *)v30;
      *(_DWORD *)(v29 + 8) = *(_DWORD *)(v30 + 8);
      *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
      *(_QWORD *)(v29 + 24) = *(_QWORD *)(v30 + 24);
      *(_DWORD *)(v29 + 32) = *(_DWORD *)(v30 + 32);
      v74 = *(int *)(v31 + 68);
      v75 = (char *)(v29 + v74);
      v30 += v74;
      v76 = _s13NodePlacementV12TemplateInfoVMa(0);
      v77 = *(_QWORD *)(v76 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v30, 1, v76))
      {
        *(_DWORD *)v75 = *(_DWORD *)v30;
        v94 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 32);
        v94(&v75[*(int *)(v76 + 24)], v30 + *(int *)(v76 + 24), v14);
        v94(&v75[*(int *)(v76 + 28)], v30 + *(int *)(v76 + 28), v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v75, 0, 1, v76);
        goto LABEL_38;
      }
      v38 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840) - 8) + 64);
      v39 = v75;
LABEL_11:
      memcpy(v39, (const void *)v30, v38);
LABEL_38:
      v54 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v32 + 56);
LABEL_39:
      v54(v29, 0, 1, v31);
      return a1;
    }
  }
  else
  {
    if (!v73)
    {
      *(_QWORD *)v29 = *(_QWORD *)v30;
      *(_DWORD *)(v29 + 8) = *(_DWORD *)(v30 + 8);
      *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v29 + 24) = *(_QWORD *)(v30 + 24);
      *(_DWORD *)(v29 + 32) = *(_DWORD *)(v30 + 32);
      v85 = *(int *)(v31 + 68);
      v86 = (char *)(v29 + v85);
      v87 = (char *)(v30 + v85);
      v88 = _s13NodePlacementV12TemplateInfoVMa(0);
      v89 = *(_QWORD *)(v88 - 8);
      v90 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v89 + 48);
      v91 = v90(v86, 1, v88);
      v92 = v90(v87, 1, v88);
      if (v91)
      {
        if (!v92)
        {
          *(_DWORD *)v86 = *(_DWORD *)v87;
          v93 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
          v93(&v86[*(int *)(v88 + 24)], &v87[*(int *)(v88 + 24)], v14);
          v93(&v86[*(int *)(v88 + 28)], &v87[*(int *)(v88 + 28)], v14);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
          return a1;
        }
      }
      else
      {
        if (!v92)
        {
          *(_DWORD *)v86 = *(_DWORD *)v87;
          v95 = *(void (**)(char *, char *, uint64_t))(v15 + 40);
          v95(&v86[*(int *)(v88 + 24)], &v87[*(int *)(v88 + 24)], v14);
          v95(&v86[*(int *)(v88 + 28)], &v87[*(int *)(v88 + 28)], v14);
          return a1;
        }
        sub_24B7B2E38((uint64_t)v86, _s13NodePlacementV12TemplateInfoVMa);
      }
      v41 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579B0840) - 8) + 64);
      v42 = v86;
      v43 = v87;
      goto LABEL_16;
    }
    sub_24B7B2E38(v29, _s13NodePlacementVMa);
  }
  v40 = &qword_2579B0490;
LABEL_15:
  v41 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(v40) - 8) + 64);
  v42 = (void *)v29;
  v43 = (char *)v30;
LABEL_16:
  memcpy(v42, v43, v41);
  return a1;
}

uint64_t sub_24B7EDB3C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7EDB48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;

  v6 = sub_24B7F3460();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
  {
    v11 = v9;
    v12 = a3[8];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  if ((_DWORD)a2 != 2147483646)
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0AB0);
    v10 = *(_QWORD *)(v11 - 8);
    v12 = a3[11];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  v13 = *(_QWORD *)(a1 + a3[10] + 8);
  if (v13 >= 0xFFFFFFFF)
    LODWORD(v13) = -1;
  v14 = v13 - 1;
  if (v14 < 0)
    v14 = -1;
  return (v14 + 1);
}

uint64_t sub_24B7EDC2C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24B7EDC38(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v8 = sub_24B7F3460();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0388);
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[8];
    }
    else
    {
      if (a3 == 2147483646)
      {
        *(_QWORD *)(a1 + a4[10] + 8) = a2;
        return result;
      }
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579B0AB0);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[11];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_24B7EDD0C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_24B7F3460();
  if (v0 <= 0x3F)
  {
    sub_24B7B225C(319, qword_2579B1050, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
    if (v1 <= 0x3F)
    {
      sub_24B7EDDF0();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_24B7EDDF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2579B1580)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579B0AC0);
    v0 = sub_24B7F370C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2579B1580);
  }
}

ValueMetadata *_s18TemplateUpdateInfoV10CodingKeysOMa()
{
  return &_s18TemplateUpdateInfoV10CodingKeysON;
}

uint64_t _s8SequenceV8FileInfoV8FileTypeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s8SequenceV8FileInfoV8FileTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24B7EDF3C + 4 * byte_24B7F9109[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24B7EDF70 + 4 * byte_24B7F9104[v4]))();
}

uint64_t sub_24B7EDF70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24B7EDF78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24B7EDF80);
  return result;
}

uint64_t sub_24B7EDF8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24B7EDF94);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24B7EDF98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24B7EDFA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_24B7EDFAC(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *_s12SequenceRootV10CodingKeysOMa()
{
  return &_s12SequenceRootV10CodingKeysON;
}

uint64_t _s8SequenceV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF0)
    goto LABEL_17;
  if (a2 + 16 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 16) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 16;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 16;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 16;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x11;
  v8 = v6 - 17;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s8SequenceV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 16 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 16) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEF)
    return ((uint64_t (*)(void))((char *)&loc_24B7EE0A4 + 4 * byte_24B7F9113[v4]))();
  *a1 = a2 + 16;
  return ((uint64_t (*)(void))((char *)sub_24B7EE0D8 + 4 * byte_24B7F910E[v4]))();
}

uint64_t sub_24B7EE0D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24B7EE0E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24B7EE0E8);
  return result;
}

uint64_t sub_24B7EE0F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24B7EE0FCLL);
  *(_BYTE *)result = a2 + 16;
  return result;
}

uint64_t sub_24B7EE100(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24B7EE108(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8SequenceV10CodingKeysOMa()
{
  return &_s8SequenceV10CodingKeysON;
}

ValueMetadata *_s8SequenceV8FileInfoV10CodingKeysOMa()
{
  return &_s8SequenceV8FileInfoV10CodingKeysON;
}

ValueMetadata *_s8SequenceV13StatusMessageV10CodingKeysOMa()
{
  return &_s8SequenceV13StatusMessageV10CodingKeysON;
}

uint64_t _s8SequenceV18TemplateGraphStateV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s8SequenceV18TemplateGraphStateV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_24B7EE230 + 4 * byte_24B7F911D[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_24B7EE264 + 4 * byte_24B7F9118[v4]))();
}

uint64_t sub_24B7EE264(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24B7EE26C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24B7EE274);
  return result;
}

uint64_t sub_24B7EE280(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24B7EE288);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_24B7EE28C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24B7EE294(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8SequenceV18TemplateGraphStateV10CodingKeysOMa()
{
  return &_s8SequenceV18TemplateGraphStateV10CodingKeysON;
}

ValueMetadata *_s8SequenceV21ImageProcessingResultV10CodingKeysOMa()
{
  return &_s8SequenceV21ImageProcessingResultV10CodingKeysON;
}

uint64_t _s18TemplateUpdateInfoV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s18TemplateUpdateInfoV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_24B7EE39C + 4 * byte_24B7F9127[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_24B7EE3D0 + 4 * byte_24B7F9122[v4]))();
}

uint64_t sub_24B7EE3D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24B7EE3D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24B7EE3E0);
  return result;
}

uint64_t sub_24B7EE3EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24B7EE3F4);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_24B7EE3F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24B7EE400(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8SequenceV21ImageProcessingResultV7BuiltinV10CodingKeysOMa()
{
  return &_s8SequenceV21ImageProcessingResultV7BuiltinV10CodingKeysON;
}

ValueMetadata *_s8SequenceV12FingerDetectV10CodingKeysOMa()
{
  return &_s8SequenceV12FingerDetectV10CodingKeysON;
}

ValueMetadata *_s8SequenceV12FingerDetectV7OptionsV10CodingKeysOMa()
{
  return &_s8SequenceV12FingerDetectV7OptionsV10CodingKeysON;
}

ValueMetadata *_s8SequenceV5MatchV10CodingKeysOMa()
{
  return &_s8SequenceV5MatchV10CodingKeysON;
}

ValueMetadata *_s8SequenceV5MatchV6ResultV10CodingKeysOMa()
{
  return &_s8SequenceV5MatchV6ResultV10CodingKeysON;
}

uint64_t _s8SequenceV5MatchV6ResultV7DetailsV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s8SequenceV5MatchV6ResultV7DetailsV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_24B7EE54C + 4 * byte_24B7F9131[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_24B7EE580 + 4 * byte_24B7F912C[v4]))();
}

uint64_t sub_24B7EE580(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24B7EE588(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24B7EE590);
  return result;
}

uint64_t sub_24B7EE59C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24B7EE5A4);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_24B7EE5A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24B7EE5B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8SequenceV5MatchV6ResultV7DetailsV10CodingKeysOMa()
{
  return &_s8SequenceV5MatchV6ResultV7DetailsV10CodingKeysON;
}

uint64_t _s8SequenceV5EventV9EventTypeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF2)
    goto LABEL_17;
  if (a2 + 14 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 14) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 14;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 14;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 14;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xF;
  v8 = v6 - 15;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s8SequenceV5EventV9EventTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_24B7EE6A8 + 4 * byte_24B7F913B[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_24B7EE6DC + 4 * byte_24B7F9136[v4]))();
}

uint64_t sub_24B7EE6DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24B7EE6E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24B7EE6ECLL);
  return result;
}

uint64_t sub_24B7EE6F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24B7EE700);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_24B7EE704(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24B7EE70C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8SequenceV5MatchV7OptionsV10CodingKeysOMa()
{
  return &_s8SequenceV5MatchV7OptionsV10CodingKeysON;
}

ValueMetadata *_s8SequenceV5MatchV6FilterV10CodingKeysOMa()
{
  return &_s8SequenceV5MatchV6FilterV10CodingKeysON;
}

uint64_t _s8SequenceV12FingerDetectV7OptionsV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24B7EE784 + 4 * byte_24B7F9145[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24B7EE7B8 + 4 * byte_24B7F9140[v4]))();
}

uint64_t sub_24B7EE7B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24B7EE7C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24B7EE7C8);
  return result;
}

uint64_t sub_24B7EE7D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24B7EE7DCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24B7EE7E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24B7EE7E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8SequenceV10EnrollmentV10CodingKeysOMa()
{
  return &_s8SequenceV10EnrollmentV10CodingKeysON;
}

uint64_t _s8SequenceV5EventV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s8SequenceV5EventV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_24B7EE8E0 + 4 * byte_24B7F914F[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_24B7EE914 + 4 * byte_24B7F914A[v4]))();
}

uint64_t sub_24B7EE914(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24B7EE91C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24B7EE924);
  return result;
}

uint64_t sub_24B7EE930(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24B7EE938);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_24B7EE93C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24B7EE944(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8SequenceV5EventV10CodingKeysOMa()
{
  return &_s8SequenceV5EventV10CodingKeysON;
}

ValueMetadata *_s8SequenceV5EventV18AccessoryImageInfoV10CodingKeysOMa()
{
  return &_s8SequenceV5EventV18AccessoryImageInfoV10CodingKeysON;
}

ValueMetadata *_s8SequenceV10ClientInfoV10CodingKeysOMa()
{
  return &_s8SequenceV10ClientInfoV10CodingKeysON;
}

ValueMetadata *_s18MatchNodePlacementV10CodingKeysOMa()
{
  return &_s18MatchNodePlacementV10CodingKeysON;
}

uint64_t _s13NodePlacementV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF3)
    goto LABEL_17;
  if (a2 + 13 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 13) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 13;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 13;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 13;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xE;
  v8 = v6 - 14;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s13NodePlacementV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_24B7EEA6C + 4 * byte_24B7F9159[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_24B7EEAA0 + 4 * byte_24B7F9154[v4]))();
}

uint64_t sub_24B7EEAA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24B7EEAA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24B7EEAB0);
  return result;
}

uint64_t sub_24B7EEABC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24B7EEAC4);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_24B7EEAC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24B7EEAD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13NodePlacementV10CodingKeysOMa()
{
  return &_s13NodePlacementV10CodingKeysON;
}

uint64_t _s8SequenceV8FileInfoV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s8SequenceV8FileInfoV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_24B7EEBC8 + 4 * byte_24B7F9163[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_24B7EEBFC + 4 * byte_24B7F915E[v4]))();
}

uint64_t sub_24B7EEBFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24B7EEC04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24B7EEC0CLL);
  return result;
}

uint64_t sub_24B7EEC18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24B7EEC20);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_24B7EEC24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24B7EEC2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13NodePlacementV12TemplateInfoV10CodingKeysOMa()
{
  return &_s13NodePlacementV12TemplateInfoV10CodingKeysON;
}

ValueMetadata *_s13NodePlacementV4NodeV10CodingKeysOMa()
{
  return &_s13NodePlacementV4NodeV10CodingKeysON;
}

uint64_t _s5StateV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF1)
    goto LABEL_17;
  if (a2 + 15 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 15) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 15;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 15;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 15;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x10;
  v8 = v6 - 16;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s5StateV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_24B7EED3C + 4 * byte_24B7F916D[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_24B7EED70 + 4 * byte_24B7F9168[v4]))();
}

uint64_t sub_24B7EED70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24B7EED78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24B7EED80);
  return result;
}

uint64_t sub_24B7EED8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24B7EED94);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_24B7EED98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24B7EEDA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s5StateV10CodingKeysOMa()
{
  return &_s5StateV10CodingKeysON;
}

ValueMetadata *_s5StateV8UserInfoV10CodingKeysOMa()
{
  return &_s5StateV8UserInfoV10CodingKeysON;
}

uint64_t _s13NodePlacementV4NodeV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s13NodePlacementV4NodeV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_24B7EEEA8 + 4 * byte_24B7F9177[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_24B7EEEDC + 4 * byte_24B7F9172[v4]))();
}

uint64_t sub_24B7EEEDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24B7EEEE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24B7EEEECLL);
  return result;
}

uint64_t sub_24B7EEEF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24B7EEF00);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_24B7EEF04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24B7EEF0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8IdentityV10CodingKeysOMa()
{
  return &_s8IdentityV10CodingKeysON;
}

ValueMetadata *_s6SourceV10CodingKeysOMa()
{
  return &_s6SourceV10CodingKeysON;
}

uint64_t _s8SequenceV12FingerDetectV10CodingKeysOwet_0(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s8SequenceV12FingerDetectV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_24B7EEFC8 + 4 * byte_24B7F917C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_24B7EEFE8 + 4 * byte_24B7F9181[v4]))();
}

_BYTE *sub_24B7EEFC8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_24B7EEFE8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24B7EEFF0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24B7EEFF8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24B7EF000(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24B7EF008(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s6SourceV9AccessoryV10CodingKeysOMa()
{
  return &_s6SourceV9AccessoryV10CodingKeysON;
}

uint64_t _s8SequenceV13StatusMessageV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s8SequenceV13StatusMessageV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_24B7EF100 + 4 * byte_24B7F918B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_24B7EF134 + 4 * byte_24B7F9186[v4]))();
}

uint64_t sub_24B7EF134(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24B7EF13C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24B7EF144);
  return result;
}

uint64_t sub_24B7EF150(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24B7EF158);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_24B7EF15C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24B7EF164(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s7LogInfoV10CodingKeysOMa()
{
  return &_s7LogInfoV10CodingKeysON;
}

unint64_t sub_24B7EF184()
{
  unint64_t result;

  result = qword_2579B3590[0];
  if (!qword_2579B3590[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F9BE0, &_s7LogInfoV10CodingKeysON);
    atomic_store(result, qword_2579B3590);
  }
  return result;
}

unint64_t sub_24B7EF1CC()
{
  unint64_t result;

  result = qword_2579B37A0[0];
  if (!qword_2579B37A0[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F9C98, &_s6SourceV9AccessoryV10CodingKeysON);
    atomic_store(result, qword_2579B37A0);
  }
  return result;
}

unint64_t sub_24B7EF214()
{
  unint64_t result;

  result = qword_2579B39B0[0];
  if (!qword_2579B39B0[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F9D50, &_s6SourceV10CodingKeysON);
    atomic_store(result, qword_2579B39B0);
  }
  return result;
}

unint64_t sub_24B7EF25C()
{
  unint64_t result;

  result = qword_2579B3BC0[0];
  if (!qword_2579B3BC0[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F9E08, &_s8IdentityV10CodingKeysON);
    atomic_store(result, qword_2579B3BC0);
  }
  return result;
}

unint64_t sub_24B7EF2A4()
{
  unint64_t result;

  result = qword_2579B3DD0[0];
  if (!qword_2579B3DD0[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F9EC0, &_s5StateV8UserInfoV10CodingKeysON);
    atomic_store(result, qword_2579B3DD0);
  }
  return result;
}

unint64_t sub_24B7EF2EC()
{
  unint64_t result;

  result = qword_2579B3FE0[0];
  if (!qword_2579B3FE0[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F9F78, &_s5StateV10CodingKeysON);
    atomic_store(result, qword_2579B3FE0);
  }
  return result;
}

unint64_t sub_24B7EF334()
{
  unint64_t result;

  result = qword_2579B41F0;
  if (!qword_2579B41F0)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA030, &_s13NodePlacementV4NodeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B41F0);
  }
  return result;
}

unint64_t sub_24B7EF37C()
{
  unint64_t result;

  result = qword_2579B4400[0];
  if (!qword_2579B4400[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA0E8, &_s13NodePlacementV12TemplateInfoV10CodingKeysON);
    atomic_store(result, qword_2579B4400);
  }
  return result;
}

unint64_t sub_24B7EF3C4()
{
  unint64_t result;

  result = qword_2579B4610[0];
  if (!qword_2579B4610[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA1A0, &_s13NodePlacementV10CodingKeysON);
    atomic_store(result, qword_2579B4610);
  }
  return result;
}

unint64_t sub_24B7EF40C()
{
  unint64_t result;

  result = qword_2579B4820[0];
  if (!qword_2579B4820[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA258, &_s18MatchNodePlacementV10CodingKeysON);
    atomic_store(result, qword_2579B4820);
  }
  return result;
}

unint64_t sub_24B7EF454()
{
  unint64_t result;

  result = qword_2579B4A30[0];
  if (!qword_2579B4A30[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA310, &_s8SequenceV10ClientInfoV10CodingKeysON);
    atomic_store(result, qword_2579B4A30);
  }
  return result;
}

unint64_t sub_24B7EF49C()
{
  unint64_t result;

  result = qword_2579B4D40[0];
  if (!qword_2579B4D40[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA418, &_s8SequenceV5EventV10CodingKeysON);
    atomic_store(result, qword_2579B4D40);
  }
  return result;
}

unint64_t sub_24B7EF4E4()
{
  unint64_t result;

  result = qword_2579B4F50[0];
  if (!qword_2579B4F50[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA4D0, &_s8SequenceV10EnrollmentV10CodingKeysON);
    atomic_store(result, qword_2579B4F50);
  }
  return result;
}

unint64_t sub_24B7EF52C()
{
  unint64_t result;

  result = qword_2579B5160[0];
  if (!qword_2579B5160[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA588, &_s8SequenceV5MatchV6FilterV10CodingKeysON);
    atomic_store(result, qword_2579B5160);
  }
  return result;
}

unint64_t sub_24B7EF574()
{
  unint64_t result;

  result = qword_2579B5370[0];
  if (!qword_2579B5370[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA640, &_s8SequenceV5MatchV7OptionsV10CodingKeysON);
    atomic_store(result, qword_2579B5370);
  }
  return result;
}

unint64_t sub_24B7EF5BC()
{
  unint64_t result;

  result = qword_2579B5580[0];
  if (!qword_2579B5580[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA6F8, &_s8SequenceV5MatchV6ResultV7DetailsV10CodingKeysON);
    atomic_store(result, qword_2579B5580);
  }
  return result;
}

unint64_t sub_24B7EF604()
{
  unint64_t result;

  result = qword_2579B5790[0];
  if (!qword_2579B5790[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA7B0, &_s8SequenceV5MatchV6ResultV10CodingKeysON);
    atomic_store(result, qword_2579B5790);
  }
  return result;
}

unint64_t sub_24B7EF64C()
{
  unint64_t result;

  result = qword_2579B59A0[0];
  if (!qword_2579B59A0[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA868, &_s8SequenceV5MatchV10CodingKeysON);
    atomic_store(result, qword_2579B59A0);
  }
  return result;
}

unint64_t sub_24B7EF694()
{
  unint64_t result;

  result = qword_2579B5BB0[0];
  if (!qword_2579B5BB0[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA920, &_s8SequenceV12FingerDetectV7OptionsV10CodingKeysON);
    atomic_store(result, qword_2579B5BB0);
  }
  return result;
}

unint64_t sub_24B7EF6DC()
{
  unint64_t result;

  result = qword_2579B5DC0[0];
  if (!qword_2579B5DC0[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA9D8, &_s8SequenceV12FingerDetectV10CodingKeysON);
    atomic_store(result, qword_2579B5DC0);
  }
  return result;
}

unint64_t sub_24B7EF724()
{
  unint64_t result;

  result = qword_2579B5FD0[0];
  if (!qword_2579B5FD0[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FAA90, &_s8SequenceV21ImageProcessingResultV7BuiltinV10CodingKeysON);
    atomic_store(result, qword_2579B5FD0);
  }
  return result;
}

unint64_t sub_24B7EF76C()
{
  unint64_t result;

  result = qword_2579B61E0[0];
  if (!qword_2579B61E0[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FAB48, &_s8SequenceV21ImageProcessingResultV10CodingKeysON);
    atomic_store(result, qword_2579B61E0);
  }
  return result;
}

unint64_t sub_24B7EF7B4()
{
  unint64_t result;

  result = qword_2579B63F0[0];
  if (!qword_2579B63F0[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FAC00, &_s8SequenceV18TemplateGraphStateV10CodingKeysON);
    atomic_store(result, qword_2579B63F0);
  }
  return result;
}

unint64_t sub_24B7EF7FC()
{
  unint64_t result;

  result = qword_2579B6600[0];
  if (!qword_2579B6600[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FACB8, &_s8SequenceV13StatusMessageV10CodingKeysON);
    atomic_store(result, qword_2579B6600);
  }
  return result;
}

unint64_t sub_24B7EF844()
{
  unint64_t result;

  result = qword_2579B6810[0];
  if (!qword_2579B6810[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FAD70, &_s8SequenceV8FileInfoV10CodingKeysON);
    atomic_store(result, qword_2579B6810);
  }
  return result;
}

unint64_t sub_24B7EF88C()
{
  unint64_t result;

  result = qword_2579B6A20[0];
  if (!qword_2579B6A20[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FAE28, &_s8SequenceV10CodingKeysON);
    atomic_store(result, qword_2579B6A20);
  }
  return result;
}

unint64_t sub_24B7EF8D4()
{
  unint64_t result;

  result = qword_2579B6C30[0];
  if (!qword_2579B6C30[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FAEE0, &_s12SequenceRootV10CodingKeysON);
    atomic_store(result, qword_2579B6C30);
  }
  return result;
}

unint64_t sub_24B7EF91C()
{
  unint64_t result;

  result = qword_2579B6E40[0];
  if (!qword_2579B6E40[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FAF98, &_s18TemplateUpdateInfoV10CodingKeysON);
    atomic_store(result, qword_2579B6E40);
  }
  return result;
}

unint64_t sub_24B7EF964()
{
  unint64_t result;

  result = qword_2579B6F50;
  if (!qword_2579B6F50)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FAF08, &_s18TemplateUpdateInfoV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B6F50);
  }
  return result;
}

unint64_t sub_24B7EF9AC()
{
  unint64_t result;

  result = qword_2579B6F58[0];
  if (!qword_2579B6F58[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FAF30, &_s18TemplateUpdateInfoV10CodingKeysON);
    atomic_store(result, qword_2579B6F58);
  }
  return result;
}

unint64_t sub_24B7EF9F4()
{
  unint64_t result;

  result = qword_2579B6FE0;
  if (!qword_2579B6FE0)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FAE50, &_s12SequenceRootV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B6FE0);
  }
  return result;
}

unint64_t sub_24B7EFA3C()
{
  unint64_t result;

  result = qword_2579B6FE8[0];
  if (!qword_2579B6FE8[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FAE78, &_s12SequenceRootV10CodingKeysON);
    atomic_store(result, qword_2579B6FE8);
  }
  return result;
}

unint64_t sub_24B7EFA84()
{
  unint64_t result;

  result = qword_2579B7070;
  if (!qword_2579B7070)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FAD98, &_s8SequenceV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B7070);
  }
  return result;
}

unint64_t sub_24B7EFACC()
{
  unint64_t result;

  result = qword_2579B7078;
  if (!qword_2579B7078)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FADC0, &_s8SequenceV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B7078);
  }
  return result;
}

unint64_t sub_24B7EFB14()
{
  unint64_t result;

  result = qword_2579B7100;
  if (!qword_2579B7100)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FACE0, &_s8SequenceV8FileInfoV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B7100);
  }
  return result;
}

unint64_t sub_24B7EFB5C()
{
  unint64_t result;

  result = qword_2579B7108[0];
  if (!qword_2579B7108[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FAD08, &_s8SequenceV8FileInfoV10CodingKeysON);
    atomic_store(result, qword_2579B7108);
  }
  return result;
}

unint64_t sub_24B7EFBA4()
{
  unint64_t result;

  result = qword_2579B7190;
  if (!qword_2579B7190)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FAC28, &_s8SequenceV13StatusMessageV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B7190);
  }
  return result;
}

unint64_t sub_24B7EFBEC()
{
  unint64_t result;

  result = qword_2579B7198[0];
  if (!qword_2579B7198[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FAC50, &_s8SequenceV13StatusMessageV10CodingKeysON);
    atomic_store(result, qword_2579B7198);
  }
  return result;
}

unint64_t sub_24B7EFC34()
{
  unint64_t result;

  result = qword_2579B7220;
  if (!qword_2579B7220)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FAB70, &_s8SequenceV18TemplateGraphStateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B7220);
  }
  return result;
}

unint64_t sub_24B7EFC7C()
{
  unint64_t result;

  result = qword_2579B7228[0];
  if (!qword_2579B7228[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FAB98, &_s8SequenceV18TemplateGraphStateV10CodingKeysON);
    atomic_store(result, qword_2579B7228);
  }
  return result;
}

unint64_t sub_24B7EFCC4()
{
  unint64_t result;

  result = qword_2579B72B0;
  if (!qword_2579B72B0)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FAAB8, &_s8SequenceV21ImageProcessingResultV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B72B0);
  }
  return result;
}

unint64_t sub_24B7EFD0C()
{
  unint64_t result;

  result = qword_2579B72B8[0];
  if (!qword_2579B72B8[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FAAE0, &_s8SequenceV21ImageProcessingResultV10CodingKeysON);
    atomic_store(result, qword_2579B72B8);
  }
  return result;
}

unint64_t sub_24B7EFD54()
{
  unint64_t result;

  result = qword_2579B7340;
  if (!qword_2579B7340)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FAA00, &_s8SequenceV21ImageProcessingResultV7BuiltinV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B7340);
  }
  return result;
}

unint64_t sub_24B7EFD9C()
{
  unint64_t result;

  result = qword_2579B7348[0];
  if (!qword_2579B7348[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FAA28, &_s8SequenceV21ImageProcessingResultV7BuiltinV10CodingKeysON);
    atomic_store(result, qword_2579B7348);
  }
  return result;
}

unint64_t sub_24B7EFDE4()
{
  unint64_t result;

  result = qword_2579B73D0;
  if (!qword_2579B73D0)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA948, &_s8SequenceV12FingerDetectV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B73D0);
  }
  return result;
}

unint64_t sub_24B7EFE2C()
{
  unint64_t result;

  result = qword_2579B73D8[0];
  if (!qword_2579B73D8[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA970, &_s8SequenceV12FingerDetectV10CodingKeysON);
    atomic_store(result, qword_2579B73D8);
  }
  return result;
}

unint64_t sub_24B7EFE74()
{
  unint64_t result;

  result = qword_2579B7460;
  if (!qword_2579B7460)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA890, &_s8SequenceV12FingerDetectV7OptionsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B7460);
  }
  return result;
}

unint64_t sub_24B7EFEBC()
{
  unint64_t result;

  result = qword_2579B7468[0];
  if (!qword_2579B7468[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA8B8, &_s8SequenceV12FingerDetectV7OptionsV10CodingKeysON);
    atomic_store(result, qword_2579B7468);
  }
  return result;
}

unint64_t sub_24B7EFF04()
{
  unint64_t result;

  result = qword_2579B74F0;
  if (!qword_2579B74F0)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA7D8, &_s8SequenceV5MatchV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B74F0);
  }
  return result;
}

unint64_t sub_24B7EFF4C()
{
  unint64_t result;

  result = qword_2579B74F8[0];
  if (!qword_2579B74F8[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA800, &_s8SequenceV5MatchV10CodingKeysON);
    atomic_store(result, qword_2579B74F8);
  }
  return result;
}

unint64_t sub_24B7EFF94()
{
  unint64_t result;

  result = qword_2579B7580;
  if (!qword_2579B7580)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA720, &_s8SequenceV5MatchV6ResultV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B7580);
  }
  return result;
}

unint64_t sub_24B7EFFDC()
{
  unint64_t result;

  result = qword_2579B7588[0];
  if (!qword_2579B7588[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA748, &_s8SequenceV5MatchV6ResultV10CodingKeysON);
    atomic_store(result, qword_2579B7588);
  }
  return result;
}

unint64_t sub_24B7F0024()
{
  unint64_t result;

  result = qword_2579B7610;
  if (!qword_2579B7610)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA668, &_s8SequenceV5MatchV6ResultV7DetailsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B7610);
  }
  return result;
}

unint64_t sub_24B7F006C()
{
  unint64_t result;

  result = qword_2579B7618[0];
  if (!qword_2579B7618[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA690, &_s8SequenceV5MatchV6ResultV7DetailsV10CodingKeysON);
    atomic_store(result, qword_2579B7618);
  }
  return result;
}

unint64_t sub_24B7F00B4()
{
  unint64_t result;

  result = qword_2579B76A0;
  if (!qword_2579B76A0)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA5B0, &_s8SequenceV5MatchV7OptionsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B76A0);
  }
  return result;
}

unint64_t sub_24B7F00FC()
{
  unint64_t result;

  result = qword_2579B76A8[0];
  if (!qword_2579B76A8[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA5D8, &_s8SequenceV5MatchV7OptionsV10CodingKeysON);
    atomic_store(result, qword_2579B76A8);
  }
  return result;
}

unint64_t sub_24B7F0144()
{
  unint64_t result;

  result = qword_2579B7730;
  if (!qword_2579B7730)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA4F8, &_s8SequenceV5MatchV6FilterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B7730);
  }
  return result;
}

unint64_t sub_24B7F018C()
{
  unint64_t result;

  result = qword_2579B7738[0];
  if (!qword_2579B7738[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA520, &_s8SequenceV5MatchV6FilterV10CodingKeysON);
    atomic_store(result, qword_2579B7738);
  }
  return result;
}

unint64_t sub_24B7F01D4()
{
  unint64_t result;

  result = qword_2579B77C0;
  if (!qword_2579B77C0)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA440, &_s8SequenceV10EnrollmentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B77C0);
  }
  return result;
}

unint64_t sub_24B7F021C()
{
  unint64_t result;

  result = qword_2579B77C8[0];
  if (!qword_2579B77C8[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA468, &_s8SequenceV10EnrollmentV10CodingKeysON);
    atomic_store(result, qword_2579B77C8);
  }
  return result;
}

unint64_t sub_24B7F0264()
{
  unint64_t result;

  result = qword_2579B7850;
  if (!qword_2579B7850)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA388, &_s8SequenceV5EventV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B7850);
  }
  return result;
}

unint64_t sub_24B7F02AC()
{
  unint64_t result;

  result = qword_2579B7858[0];
  if (!qword_2579B7858[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA3B0, &_s8SequenceV5EventV10CodingKeysON);
    atomic_store(result, qword_2579B7858);
  }
  return result;
}

unint64_t sub_24B7F02F4()
{
  unint64_t result;

  result = qword_2579B78E0;
  if (!qword_2579B78E0)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA338, &_s8SequenceV5EventV18AccessoryImageInfoV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B78E0);
  }
  return result;
}

unint64_t sub_24B7F033C()
{
  unint64_t result;

  result = qword_2579B78E8[0];
  if (!qword_2579B78E8[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA360, &_s8SequenceV5EventV18AccessoryImageInfoV10CodingKeysON);
    atomic_store(result, qword_2579B78E8);
  }
  return result;
}

unint64_t sub_24B7F0384()
{
  unint64_t result;

  result = qword_2579B7970;
  if (!qword_2579B7970)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA280, &_s8SequenceV10ClientInfoV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B7970);
  }
  return result;
}

unint64_t sub_24B7F03CC()
{
  unint64_t result;

  result = qword_2579B7978;
  if (!qword_2579B7978)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA2A8, &_s8SequenceV10ClientInfoV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B7978);
  }
  return result;
}

unint64_t sub_24B7F0414()
{
  unint64_t result;

  result = qword_2579B7A00;
  if (!qword_2579B7A00)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA1C8, &_s18MatchNodePlacementV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B7A00);
  }
  return result;
}

unint64_t sub_24B7F045C()
{
  unint64_t result;

  result = qword_2579B7A08[0];
  if (!qword_2579B7A08[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA1F0, &_s18MatchNodePlacementV10CodingKeysON);
    atomic_store(result, qword_2579B7A08);
  }
  return result;
}

unint64_t sub_24B7F04A4()
{
  unint64_t result;

  result = qword_2579B7A90;
  if (!qword_2579B7A90)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA110, &_s13NodePlacementV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B7A90);
  }
  return result;
}

unint64_t sub_24B7F04EC()
{
  unint64_t result;

  result = qword_2579B7A98[0];
  if (!qword_2579B7A98[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA138, &_s13NodePlacementV10CodingKeysON);
    atomic_store(result, qword_2579B7A98);
  }
  return result;
}

unint64_t sub_24B7F0534()
{
  unint64_t result;

  result = qword_2579B7B20;
  if (!qword_2579B7B20)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA058, &_s13NodePlacementV12TemplateInfoV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B7B20);
  }
  return result;
}

unint64_t sub_24B7F057C()
{
  unint64_t result;

  result = qword_2579B7B28[0];
  if (!qword_2579B7B28[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7FA080, &_s13NodePlacementV12TemplateInfoV10CodingKeysON);
    atomic_store(result, qword_2579B7B28);
  }
  return result;
}

unint64_t sub_24B7F05C4()
{
  unint64_t result;

  result = qword_2579B7BB0;
  if (!qword_2579B7BB0)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F9FA0, &_s13NodePlacementV4NodeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B7BB0);
  }
  return result;
}

unint64_t sub_24B7F060C()
{
  unint64_t result;

  result = qword_2579B7BB8[0];
  if (!qword_2579B7BB8[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F9FC8, &_s13NodePlacementV4NodeV10CodingKeysON);
    atomic_store(result, qword_2579B7BB8);
  }
  return result;
}

unint64_t sub_24B7F0654()
{
  unint64_t result;

  result = qword_2579B7C40;
  if (!qword_2579B7C40)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F9EE8, &_s5StateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B7C40);
  }
  return result;
}

unint64_t sub_24B7F069C()
{
  unint64_t result;

  result = qword_2579B7C48[0];
  if (!qword_2579B7C48[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F9F10, &_s5StateV10CodingKeysON);
    atomic_store(result, qword_2579B7C48);
  }
  return result;
}

unint64_t sub_24B7F06E4()
{
  unint64_t result;

  result = qword_2579B7CD0;
  if (!qword_2579B7CD0)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F9E30, &_s5StateV8UserInfoV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B7CD0);
  }
  return result;
}

unint64_t sub_24B7F072C()
{
  unint64_t result;

  result = qword_2579B7CD8[0];
  if (!qword_2579B7CD8[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F9E58, &_s5StateV8UserInfoV10CodingKeysON);
    atomic_store(result, qword_2579B7CD8);
  }
  return result;
}

unint64_t sub_24B7F0774()
{
  unint64_t result;

  result = qword_2579B7D60;
  if (!qword_2579B7D60)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F9D78, &_s8IdentityV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B7D60);
  }
  return result;
}

unint64_t sub_24B7F07BC()
{
  unint64_t result;

  result = qword_2579B7D68[0];
  if (!qword_2579B7D68[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F9DA0, &_s8IdentityV10CodingKeysON);
    atomic_store(result, qword_2579B7D68);
  }
  return result;
}

unint64_t sub_24B7F0804()
{
  unint64_t result;

  result = qword_2579B7DF0;
  if (!qword_2579B7DF0)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F9CC0, &_s6SourceV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B7DF0);
  }
  return result;
}

unint64_t sub_24B7F084C()
{
  unint64_t result;

  result = qword_2579B7DF8[0];
  if (!qword_2579B7DF8[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F9CE8, &_s6SourceV10CodingKeysON);
    atomic_store(result, qword_2579B7DF8);
  }
  return result;
}

unint64_t sub_24B7F0894()
{
  unint64_t result;

  result = qword_2579B7E80;
  if (!qword_2579B7E80)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F9C08, &_s6SourceV9AccessoryV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B7E80);
  }
  return result;
}

unint64_t sub_24B7F08DC()
{
  unint64_t result;

  result = qword_2579B7E88[0];
  if (!qword_2579B7E88[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F9C30, &_s6SourceV9AccessoryV10CodingKeysON);
    atomic_store(result, qword_2579B7E88);
  }
  return result;
}

unint64_t sub_24B7F0924()
{
  unint64_t result;

  result = qword_2579B7F10;
  if (!qword_2579B7F10)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F9B50, &_s7LogInfoV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2579B7F10);
  }
  return result;
}

unint64_t sub_24B7F096C()
{
  unint64_t result;

  result = qword_2579B7F18[0];
  if (!qword_2579B7F18[0])
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F9B78, &_s7LogInfoV10CodingKeysON);
    atomic_store(result, qword_2579B7F18);
  }
  return result;
}

uint64_t sub_24B7F09B0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E656D7365737361 && a2 == 0xE900000000000074;
  if (v2 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65736F70727570 && a2 == 0xE700000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024B803000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024B803020 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000024B803040 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024B803060 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x44496567616D69 && a2 == 0xE700000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024B803080)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_24B7F3994();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_24B7F0CD4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65536E4F74726964 && a2 == 0xEC000000726F736ELL;
  if (v2 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6B63616264656566 && a2 == 0xE800000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74747542656D6F68 && a2 == 0xEF65746174536E6FLL || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x536E6950756E656DLL && a2 == 0xEC00000065746174 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024B8030A0 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E69746C697562 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_24B7F3994();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_24B7F0FA0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x756F43706D6F4377 && a2 == 0xEA0000000000746ELL;
  if (v2 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x756F4365646F4E77 && a2 == 0xEA0000000000746ELL || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x756F436567644577 && a2 == 0xEA0000000000746ELL || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024B8030C0 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000024B8030E0 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x800000024B803100 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x800000024B803120)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_24B7F3994();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_24B7F1274(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
  if (v2 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x5555656372756F73 && a2 == 0xEA00000000004449 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024B803140 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x79676F6C6F706F74 && a2 == 0xE800000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024B803160)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_24B7F3994();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_24B7F1504(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44496567616D69 && a2 == 0xE700000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x5555656372756F73 && a2 == 0xEA00000000004449 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D616E656C6966 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_24B7F3994();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_24B7F16B8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65636E6575716573 && a2 == 0xEE007265626D754ELL;
  if (v2 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746E65696C63 && a2 == 0xE600000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C706D6F636E69 && a2 == 0xEA00000000006574 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x69546C65636E6163 && a2 == 0xEF706D617473656DLL || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x79426C65636E6163 && a2 == 0xEE00746E65696C43 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024B803180 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024B8031A0 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x4365727574706163 && a2 == 0xEE007265746E756FLL || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x756F436567616D69 && a2 == 0xEC0000007265746ELL || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x73746E657665 && a2 == 0xE600000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x656D6C6C6F726E65 && a2 == 0xEA0000000000746ELL || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x686374616DLL && a2 == 0xE500000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x65447265676E6966 && a2 == 0xEC00000074636574 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x654D737574617473 && a2 == 0xEE00736567617373 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x73656C6966 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else
  {
    v6 = sub_24B7F3994();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 16;
    else
      return 17;
  }
}

uint64_t sub_24B7F1E48(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F666E49676F6CLL && a2 == 0xE700000000000000;
  if (v2 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61746144716573 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_24B7F3994();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_24B7F1F38(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
  if (v2 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F43746C75736572 && a2 == 0xEA00000000006564 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64657461647075 && a2 == 0xE700000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x444972657375 && a2 == 0xE600000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x797469746E656469 && a2 == 0xEC00000044495555 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x44496567616D69 && a2 == 0xE700000000000000 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000024B802C60 || (sub_24B7F3994() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x706F54686374616DLL && a2 == 0xED000079676F6C6FLL)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_24B7F3994();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

unint64_t sub_24B7F22C4()
{
  unint64_t result;

  result = qword_2579B15C8;
  if (!qword_2579B15C8)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F96D0, &_s8SequenceV8FileInfoV8FileTypeON);
    atomic_store(result, (unint64_t *)&qword_2579B15C8);
  }
  return result;
}

unint64_t sub_24B7F2308()
{
  unint64_t result;

  result = qword_2579B15D0;
  if (!qword_2579B15D0)
  {
    result = MEMORY[0x24BD27D24](&unk_24B7F93D8, &_s8SequenceV5EventV9EventTypeON);
    atomic_store(result, (unint64_t *)&qword_2579B15D0);
  }
  return result;
}

uint64_t sub_24B7F234C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24B7F2378(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t sub_24B7F23AC(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x24BD27CDC](a1, v6, a5);
}

void BKDMInitialize_cold_1()
{
  uint8_t v0[16];

  *(_WORD *)v0 = 0;
  _os_log_error_impl(&dword_24B74E000, MEMORY[0x24BDACB70], OS_LOG_TYPE_ERROR, "Couldn't create OS Log for 'com.apple.BiometricKit.Daemon-Mesa'!\n", v0, 2u);
}

uint64_t sub_24B7F322C()
{
  return MEMORY[0x24BDCB290]();
}

uint64_t sub_24B7F3238()
{
  return MEMORY[0x24BDCB2A8]();
}

uint64_t sub_24B7F3244()
{
  return MEMORY[0x24BDCB2E0]();
}

uint64_t sub_24B7F3250()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_24B7F325C()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_24B7F3268()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_24B7F3274()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_24B7F3280()
{
  return MEMORY[0x24BDCBBD0]();
}

uint64_t sub_24B7F328C()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_24B7F3298()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_24B7F32A4()
{
  return MEMORY[0x24BDCBC10]();
}

uint64_t sub_24B7F32B0()
{
  return MEMORY[0x24BDCC8D0]();
}

uint64_t sub_24B7F32BC()
{
  return MEMORY[0x24BDCC8F8]();
}

uint64_t sub_24B7F32C8()
{
  return MEMORY[0x24BDCC900]();
}

uint64_t sub_24B7F32D4()
{
  return MEMORY[0x24BDCC908]();
}

uint64_t sub_24B7F32E0()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_24B7F32EC()
{
  return MEMORY[0x24BDCD628]();
}

uint64_t sub_24B7F32F8()
{
  return MEMORY[0x24BDCD630]();
}

uint64_t sub_24B7F3304()
{
  return MEMORY[0x24BDCD668]();
}

uint64_t sub_24B7F3310()
{
  return MEMORY[0x24BDCD678]();
}

uint64_t sub_24B7F331C()
{
  return MEMORY[0x24BDCD778]();
}

uint64_t sub_24B7F3328()
{
  return MEMORY[0x24BDCD7B8]();
}

uint64_t sub_24B7F3334()
{
  return MEMORY[0x24BDCD810]();
}

uint64_t sub_24B7F3340()
{
  return MEMORY[0x24BDCD830]();
}

uint64_t sub_24B7F334C()
{
  return MEMORY[0x24BDCD888]();
}

uint64_t sub_24B7F3358()
{
  return MEMORY[0x24BDCD898]();
}

uint64_t sub_24B7F3364()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_24B7F3370()
{
  return MEMORY[0x24BDCD8F0]();
}

uint64_t sub_24B7F337C()
{
  return MEMORY[0x24BDCD8F8]();
}

uint64_t sub_24B7F3388()
{
  return MEMORY[0x24BDCD968]();
}

uint64_t sub_24B7F3394()
{
  return MEMORY[0x24BDCD9E8]();
}

uint64_t sub_24B7F33A0()
{
  return MEMORY[0x24BDCDA30]();
}

uint64_t sub_24B7F33AC()
{
  return MEMORY[0x24BDCDA70]();
}

uint64_t sub_24B7F33B8()
{
  return MEMORY[0x24BDCDAA0]();
}

uint64_t sub_24B7F33C4()
{
  return MEMORY[0x24BDCDAA8]();
}

uint64_t sub_24B7F33D0()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_24B7F33DC()
{
  return MEMORY[0x24BDCDB60]();
}

uint64_t sub_24B7F33E8()
{
  return MEMORY[0x24BDCDBC8]();
}

uint64_t sub_24B7F33F4()
{
  return MEMORY[0x24BDCDC10]();
}

uint64_t sub_24B7F3400()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_24B7F340C()
{
  return MEMORY[0x24BDCDCA8]();
}

uint64_t sub_24B7F3418()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_24B7F3424()
{
  return MEMORY[0x24BDCDD68]();
}

uint64_t sub_24B7F3430()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_24B7F343C()
{
  return MEMORY[0x24BDCE780]();
}

uint64_t sub_24B7F3448()
{
  return MEMORY[0x24BDCE878]();
}

uint64_t sub_24B7F3454()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_24B7F3460()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_24B7F346C()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_24B7F3478()
{
  return MEMORY[0x24BDCE9F8]();
}

uint64_t sub_24B7F3484()
{
  return MEMORY[0x24BDCEA10]();
}

uint64_t sub_24B7F3490()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_24B7F349C()
{
  return MEMORY[0x24BDCECA0]();
}

uint64_t sub_24B7F34A8()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_24B7F34B4()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_24B7F34C0()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_24B7F34CC()
{
  return MEMORY[0x24BEE78C8]();
}

uint64_t sub_24B7F34D8()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_24B7F34E4()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_24B7F34F0()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_24B7F34FC()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_24B7F3508()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_24B7F3514()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_24B7F3520()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_24B7F352C()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_24B7F3538()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_24B7F3544()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_24B7F3550()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_24B7F355C()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_24B7F3568()
{
  return MEMORY[0x24BDCFA38]();
}

uint64_t sub_24B7F3574()
{
  return MEMORY[0x24BDCFA78]();
}

uint64_t sub_24B7F3580()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_24B7F358C()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_24B7F3598()
{
  return MEMORY[0x24BEE0AD0]();
}

uint64_t sub_24B7F35A4()
{
  return MEMORY[0x24BEE0AD8]();
}

uint64_t sub_24B7F35B0()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_24B7F35BC()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_24B7F35C8()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_24B7F35D4()
{
  return MEMORY[0x24BEE0C18]();
}

uint64_t sub_24B7F35E0()
{
  return MEMORY[0x24BEE0C30]();
}

uint64_t sub_24B7F35EC()
{
  return MEMORY[0x24BEE0C38]();
}

uint64_t sub_24B7F35F8()
{
  return MEMORY[0x24BEE0C40]();
}

uint64_t sub_24B7F3604()
{
  return MEMORY[0x24BEE0CA0]();
}

uint64_t sub_24B7F3610()
{
  return MEMORY[0x24BEE0D58]();
}

uint64_t sub_24B7F361C()
{
  return MEMORY[0x24BEE0DD0]();
}

uint64_t sub_24B7F3628()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_24B7F3634()
{
  return MEMORY[0x24BEE1020]();
}

uint64_t sub_24B7F3640()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_24B7F364C()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_24B7F3658()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_24B7F3664()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_24B7F3670()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_24B7F367C()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_24B7F3688()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_24B7F3694()
{
  return MEMORY[0x24BDCFE60]();
}

uint64_t sub_24B7F36A0()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_24B7F36AC()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_24B7F36B8()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_24B7F36C4()
{
  return MEMORY[0x24BEE5688]();
}

uint64_t sub_24B7F36D0()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t sub_24B7F36DC()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_24B7F36E8()
{
  return MEMORY[0x24BEE57A0]();
}

uint64_t sub_24B7F36F4()
{
  return MEMORY[0x24BEE5BB8]();
}

uint64_t sub_24B7F3700()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_24B7F370C()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_24B7F3718()
{
  return MEMORY[0x24BEE1C78]();
}

uint64_t sub_24B7F3724()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_24B7F3730()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_24B7F373C()
{
  return MEMORY[0x24BDD0568]();
}

uint64_t sub_24B7F3748()
{
  return MEMORY[0x24BDD0600]();
}

uint64_t sub_24B7F3754()
{
  return MEMORY[0x24BDD0638]();
}

uint64_t sub_24B7F3760()
{
  return MEMORY[0x24BDD0668]();
}

uint64_t sub_24B7F376C()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_24B7F3778()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_24B7F3784()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_24B7F3790()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t sub_24B7F379C()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t sub_24B7F37A8()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_24B7F37B4()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_24B7F37C0()
{
  return MEMORY[0x24BEE25B8]();
}

uint64_t sub_24B7F37CC()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_24B7F37D8()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_24B7F37E4()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_24B7F37F0()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_24B7F37FC()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_24B7F3808()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_24B7F3814()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_24B7F3820()
{
  return MEMORY[0x24BEE2BA8]();
}

uint64_t sub_24B7F382C()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_24B7F3838()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_24B7F3844()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_24B7F3850()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_24B7F385C()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_24B7F3868()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_24B7F3874()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_24B7F3880()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_24B7F388C()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_24B7F3898()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_24B7F38A4()
{
  return MEMORY[0x24BEE3430]();
}

uint64_t sub_24B7F38B0()
{
  return MEMORY[0x24BEE3448]();
}

uint64_t sub_24B7F38BC()
{
  return MEMORY[0x24BEE3450]();
}

uint64_t sub_24B7F38C8()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_24B7F38D4()
{
  return MEMORY[0x24BEE3468]();
}

uint64_t sub_24B7F38E0()
{
  return MEMORY[0x24BEE3488]();
}

uint64_t sub_24B7F38EC()
{
  return MEMORY[0x24BEE3490]();
}

uint64_t sub_24B7F38F8()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_24B7F3904()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_24B7F3910()
{
  return MEMORY[0x24BEE34B8]();
}

uint64_t sub_24B7F391C()
{
  return MEMORY[0x24BEE34C8]();
}

uint64_t sub_24B7F3928()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_24B7F3934()
{
  return MEMORY[0x24BEE34E0]();
}

uint64_t sub_24B7F3940()
{
  return MEMORY[0x24BEE34E8]();
}

uint64_t sub_24B7F394C()
{
  return MEMORY[0x24BEE34F8]();
}

uint64_t sub_24B7F3958()
{
  return MEMORY[0x24BEE3500]();
}

uint64_t sub_24B7F3964()
{
  return MEMORY[0x24BEE3508]();
}

uint64_t sub_24B7F3970()
{
  return MEMORY[0x24BEE3510]();
}

uint64_t sub_24B7F397C()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_24B7F3988()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_24B7F3994()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_24B7F39A0()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_24B7F39AC()
{
  return MEMORY[0x24BEE42C8]();
}

uint64_t sub_24B7F39B8()
{
  return MEMORY[0x24BEE42D8]();
}

uint64_t sub_24B7F39C4()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_24B7F39D0()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_24B7F39DC()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_24B7F39E8()
{
  return MEMORY[0x24BEE4358]();
}

uint64_t sub_24B7F39F4()
{
  return MEMORY[0x24BEE43D0]();
}

uint64_t sub_24B7F3A00()
{
  return MEMORY[0x24BEE43D8]();
}

uint64_t sub_24B7F3A0C()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_24B7F3A18()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_24B7F3A24()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t AMFDRCreateWithOptions()
{
  return MEMORY[0x24BED4158]();
}

uint64_t AMFDRDataCopy()
{
  return MEMORY[0x24BED4178]();
}

uint64_t AMFDRSealingMapCopyLocalDataForClass()
{
  return MEMORY[0x24BED4328]();
}

uint64_t AudioServicesPlaySystemSoundWithVibration()
{
  return MEMORY[0x24BDB6998]();
}

CFAllocatorRef CFAllocatorGetDefault(void)
{
  return (CFAllocatorRef)MEMORY[0x24BDBB7A8]();
}

Boolean CFBooleanGetValue(CFBooleanRef BOOLean)
{
  return MEMORY[0x24BDBBA20](BOOLean);
}

uint64_t CFCopyHomeDirectoryURLForUser()
{
  return MEMORY[0x24BDBBC68]();
}

void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
  MEMORY[0x24BDBBE60](theDict, key, value);
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
  MEMORY[0x24BDBC040](center, observer, callBack, name, object, suspensionBehavior);
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x24BDBC050]();
}

void CFNotificationCenterRemoveEveryObserver(CFNotificationCenterRef center, const void *observer)
{
  MEMORY[0x24BDBC080](center, observer);
}

void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object)
{
  MEMORY[0x24BDBC088](center, observer, name, object);
}

Boolean CFNumberGetValue(CFNumberRef number, CFNumberType theType, void *valuePtr)
{
  return MEMORY[0x24BDBC130](number, theType, valuePtr);
}

void CFRelease(CFTypeRef cf)
{
  MEMORY[0x24BDBC298](cf);
}

CFComparisonResult CFStringCompare(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions)
{
  return MEMORY[0x24BDBC4D0](theString1, theString2, compareOptions);
}

Boolean CFStringGetCString(CFStringRef theString, char *buffer, CFIndex bufferSize, CFStringEncoding encoding)
{
  return MEMORY[0x24BDBC600](theString, buffer, bufferSize, *(_QWORD *)&encoding);
}

const char *__cdecl CFStringGetCStringPtr(CFStringRef theString, CFStringEncoding encoding)
{
  return (const char *)MEMORY[0x24BDBC610](theString, *(_QWORD *)&encoding);
}

CFStringRef CFURLCopyFileSystemPath(CFURLRef anURL, CFURLPathStyle pathStyle)
{
  return (CFStringRef)MEMORY[0x24BDBC798](anURL, pathStyle);
}

CFURLRef CFURLCreateCopyAppendingPathComponent(CFAllocatorRef allocator, CFURLRef url, CFStringRef pathComponent, Boolean isDirectory)
{
  return (CFURLRef)MEMORY[0x24BDBC7F8](allocator, url, pathComponent, isDirectory);
}

CFUUIDRef CFUUIDCreate(CFAllocatorRef alloc)
{
  return (CFUUIDRef)MEMORY[0x24BDBC8D0](alloc);
}

CFStringRef CFUUIDCreateString(CFAllocatorRef alloc, CFUUIDRef uuid)
{
  return (CFStringRef)MEMORY[0x24BDBC8E8](alloc, uuid);
}

SInt32 CFUserNotificationDisplayAlert(CFTimeInterval timeout, CFOptionFlags flags, CFURLRef iconURL, CFURLRef soundURL, CFURLRef localizationURL, CFStringRef alertHeader, CFStringRef alertMessage, CFStringRef defaultButtonTitle, CFStringRef alternateButtonTitle, CFStringRef otherButtonTitle, CFOptionFlags *responseFlags)
{
  return MEMORY[0x24BDBC930](flags, iconURL, soundURL, localizationURL, alertHeader, alertMessage, defaultButtonTitle, alternateButtonTitle, timeout);
}

kern_return_t IOConnectCallMethod(mach_port_t connection, uint32_t selector, const uint64_t *input, uint32_t inputCnt, const void *inputStruct, size_t inputStructCnt, uint64_t *output, uint32_t *outputCnt, void *outputStruct, size_t *outputStructCnt)
{
  return MEMORY[0x24BDD7EF8](*(_QWORD *)&connection, *(_QWORD *)&selector, input, *(_QWORD *)&inputCnt, inputStruct, inputStructCnt, output, outputCnt);
}

kern_return_t IOConnectCallStructMethod(mach_port_t connection, uint32_t selector, const void *inputStruct, size_t inputStructCnt, void *outputStruct, size_t *outputStructCnt)
{
  return MEMORY[0x24BDD7F08](*(_QWORD *)&connection, *(_QWORD *)&selector, inputStruct, inputStructCnt, outputStruct, outputStructCnt);
}

uint64_t IOHIDEventGetIntegerValue()
{
  return MEMORY[0x24BDD8298]();
}

uint64_t IOHIDEventGetType()
{
  return MEMORY[0x24BDD82D0]();
}

uint64_t IOHIDEventSystemClientCreate()
{
  return MEMORY[0x24BDD8368]();
}

uint64_t IOHIDEventSystemClientRegisterEventFilterCallback()
{
  return MEMORY[0x24BDD83A8]();
}

uint64_t IOHIDEventSystemClientScheduleWithDispatchQueue()
{
  return MEMORY[0x24BDD83B8]();
}

uint64_t IOHIDEventSystemClientSetMatchingMultiple()
{
  return MEMORY[0x24BDD83E0]();
}

uint64_t IOHIDEventSystemClientUnregisterEventFilterCallback()
{
  return MEMORY[0x24BDD8408]();
}

uint64_t IOHIDEventSystemClientUnscheduleFromDispatchQueue()
{
  return MEMORY[0x24BDD8410]();
}

io_object_t IOIteratorNext(io_iterator_t iterator)
{
  return MEMORY[0x24BDD8668](*(_QWORD *)&iterator);
}

IONotificationPortRef IONotificationPortCreate(mach_port_t mainPort)
{
  return (IONotificationPortRef)MEMORY[0x24BDD8690](*(_QWORD *)&mainPort);
}

void IONotificationPortDestroy(IONotificationPortRef notify)
{
  MEMORY[0x24BDD8698](notify);
}

void IONotificationPortSetDispatchQueue(IONotificationPortRef notify, dispatch_queue_t queue)
{
  MEMORY[0x24BDD86B0](notify, queue);
}

kern_return_t IOObjectRelease(io_object_t object)
{
  return MEMORY[0x24BDD86F8](*(_QWORD *)&object);
}

CFTypeRef IORegistryEntryCreateCFProperty(io_registry_entry_t entry, CFStringRef key, CFAllocatorRef allocator, IOOptionBits options)
{
  return (CFTypeRef)MEMORY[0x24BDD88B0](*(_QWORD *)&entry, key, allocator, *(_QWORD *)&options);
}

kern_return_t IORegistryEntrySetCFProperty(io_registry_entry_t entry, CFStringRef propertyName, CFTypeRef property)
{
  return MEMORY[0x24BDD8938](*(_QWORD *)&entry, propertyName, property);
}

kern_return_t IOServiceAddInterestNotification(IONotificationPortRef notifyPort, io_service_t service, const io_name_t interestType, IOServiceInterestCallback callback, void *refCon, io_object_t *notification)
{
  return MEMORY[0x24BDD8958](notifyPort, *(_QWORD *)&service, interestType, callback, refCon, notification);
}

kern_return_t IOServiceAddMatchingNotification(IONotificationPortRef notifyPort, const io_name_t notificationType, CFDictionaryRef matching, IOServiceMatchingCallback callback, void *refCon, io_iterator_t *notification)
{
  return MEMORY[0x24BDD8960](notifyPort, notificationType, matching, callback, refCon, notification);
}

kern_return_t IOServiceClose(io_connect_t connect)
{
  return MEMORY[0x24BDD8970](*(_QWORD *)&connect);
}

io_service_t IOServiceGetMatchingService(mach_port_t mainPort, CFDictionaryRef matching)
{
  return MEMORY[0x24BDD8988](*(_QWORD *)&mainPort, matching);
}

CFMutableDictionaryRef IOServiceMatching(const char *name)
{
  return (CFMutableDictionaryRef)MEMORY[0x24BDD89A8](name);
}

CFMutableDictionaryRef IOServiceNameMatching(const char *name)
{
  return (CFMutableDictionaryRef)MEMORY[0x24BDD89B0](name);
}

kern_return_t IOServiceOpen(io_service_t service, task_port_t owningTask, uint32_t type, io_connect_t *connect)
{
  return MEMORY[0x24BDD89B8](*(_QWORD *)&service, *(_QWORD *)&owningTask, *(_QWORD *)&type, connect);
}

uint64_t MGCancelNotifications()
{
  return MEMORY[0x24BED8438]();
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x24BED8448]();
}

uint64_t MGRegisterForUpdates()
{
  return MEMORY[0x24BED84E0]();
}

uint64_t MKBGetDeviceLockState()
{
  return MEMORY[0x24BE67168]();
}

uint64_t MobileGestalt_copy_buildVersion_obj()
{
  return MEMORY[0x24BED84E8]();
}

uint64_t MobileGestalt_copy_serialNumber_obj()
{
  return MEMORY[0x24BED8558]();
}

uint64_t MobileGestalt_get_batteryIsCharging()
{
  return MEMORY[0x24BED8570]();
}

uint64_t MobileGestalt_get_current_device()
{
  return MEMORY[0x24BED8580]();
}

uint64_t MobileGestalt_get_externalPowerSourceConnected()
{
  return MEMORY[0x24BED85E8]();
}

void NSLog(NSString *format, ...)
{
  MEMORY[0x24BDD1000](format);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x24BDD1268](aSelector);
}

uint64_t OSThermalNotificationCurrentLevel()
{
  return MEMORY[0x24BDAC510]();
}

uint64_t RIESUpdate()
{
  return MEMORY[0x24BE0CE88]();
}

uint64_t WriteStackshotReport()
{
  return MEMORY[0x24BE6E000]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x24BDAC730](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x24BDAC780](exception_object);
}

int *__error(void)
{
  return (int *)MEMORY[0x24BDAC7D0]();
}

__double2 __sincos_stret(double a1)
{
  double v1;
  double v2;
  __double2 result;

  MEMORY[0x24BDAC890](a1);
  result.__cosval = v2;
  result.__sinval = v1;
  return result;
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB68](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB80](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB88](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

uint64_t absoluteToMiliseconds()
{
  return MEMORY[0x24BE0CE98]();
}

uint64_t absoluteToNanoseconds()
{
  return MEMORY[0x24BE0CEA0]();
}

int access(const char *a1, int a2)
{
  return MEMORY[0x24BDAD038](a1, *(_QWORD *)&a2);
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

int close(int a1)
{
  return MEMORY[0x24BDAD9D8](*(_QWORD *)&a1);
}

int closedir(DIR *a1)
{
  return MEMORY[0x24BDAD9F0](a1);
}

uint64_t dictionaryGetBool()
{
  return MEMORY[0x24BE0CEA8]();
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADC60](when, queue, block);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADCC0](queue, block);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x24BDADDA8](identifier, flags);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x24BDADE98](predicate, block);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x24BDADEC8](attr, *(_QWORD *)&qos_class, *(_QWORD *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x24BDADED0](label, attr);
}

void dispatch_resume(dispatch_object_t object)
{
  MEMORY[0x24BDADF18](object);
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x24BDADF70](type, handle, mask, queue);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x24BDADFB0](source, handler);
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
  MEMORY[0x24BDADFD0](source, start, interval, leeway);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADFE8](queue, block);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x24BDADFF8](when, delta);
}

dispatch_time_t dispatch_walltime(const timespec *when, int64_t delta)
{
  return MEMORY[0x24BDAE008](when, delta);
}

void exit(int a1)
{
  MEMORY[0x24BDAE268](*(_QWORD *)&a1);
}

int fclose(FILE *a1)
{
  return MEMORY[0x24BDAE2E0](a1);
}

int fcntl(int a1, int a2, ...)
{
  return MEMORY[0x24BDAE2E8](*(_QWORD *)&a1, *(_QWORD *)&a2);
}

FILE *__cdecl fdopen(int a1, const char *a2)
{
  return (FILE *)MEMORY[0x24BDAE300](*(_QWORD *)&a1, a2);
}

int fileno(FILE *a1)
{
  return MEMORY[0x24BDAE390](a1);
}

FILE *__cdecl fopen(const char *__filename, const char *__mode)
{
  return (FILE *)MEMORY[0x24BDAE410](__filename, __mode);
}

int fprintf(FILE *a1, const char *a2, ...)
{
  return MEMORY[0x24BDAE428](a1, a2);
}

size_t fread(void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return MEMORY[0x24BDAE448](__ptr, __size, __nitems, __stream);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

int fstat(int a1, stat *a2)
{
  return MEMORY[0x24BDAE508](*(_QWORD *)&a1, a2);
}

size_t fwrite(const void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return MEMORY[0x24BDAE590](__ptr, __size, __nitems, __stream);
}

uint64_t getBootArgs()
{
  return MEMORY[0x24BE0CEC0]();
}

uint64_t getSensorPatchVersion()
{
  return MEMORY[0x24BE0CEC8]();
}

int gettimeofday(timeval *a1, void *a2)
{
  return MEMORY[0x24BDAE780](a1, a2);
}

uint64_t isEphemeralMultiUser()
{
  return MEMORY[0x24BE0CED0]();
}

uint64_t isInternalBuild()
{
  return MEMORY[0x24BE0CED8]();
}

uint64_t isTouchIDPlatform()
{
  return MEMORY[0x24BE0CEE0]();
}

uint64_t kdebug_trace()
{
  return MEMORY[0x24BDAE958]();
}

uint64_t mach_absolute_time(void)
{
  return MEMORY[0x24BDAEB30]();
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x24BDAED70](count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x24BDAED78](size, type_id);
}

void *__cdecl malloc_type_realloc(void *ptr, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x24BDAED88](ptr, size, type_id);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

int mkdir(const char *a1, mode_t a2)
{
  return MEMORY[0x24BDAEF28](a1, a2);
}

uint64_t nanosecondsToAbsolute()
{
  return MEMORY[0x24BE0CEE8]();
}

uint32_t notify_post(const char *name)
{
  return MEMORY[0x24BDAF160](name);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x24BEDCF68](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x24BEDCF88]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x24BEDCFA8](a1);
}

void objc_autoreleasePoolPop(void *context)
{
  MEMORY[0x24BEDCFB0](context);
}

void *objc_autoreleasePoolPush(void)
{
  return (void *)MEMORY[0x24BEDCFC0]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x24BEDCFD8](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x24BEDCFE8]();
}

void objc_copyStruct(void *dest, const void *src, ptrdiff_t size, BOOL atomic, BOOL hasStrong)
{
  MEMORY[0x24BEDD020](dest, src, size, atomic, hasStrong);
}

void objc_end_catch(void)
{
  MEMORY[0x24BEDD050]();
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x24BEDD068](obj);
}

void objc_exception_rethrow(void)
{
  MEMORY[0x24BEDD070]();
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x24BEDD0B0](self, _cmd, offset, atomic);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x24BEDD130]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x24BEDD138]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x24BEDD2A8](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x24BEDD3D0](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x24BEDD410](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x24BEDD438](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x24BEDD440](obj);
}

void objc_terminate(void)
{
  MEMORY[0x24BEDD450]();
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD458](a1);
}

int open(const char *a1, int a2, ...)
{
  return MEMORY[0x24BDAF228](a1, *(_QWORD *)&a2);
}

int open_dprotected_np(const char *a1, int a2, int a3, int a4, ...)
{
  return MEMORY[0x24BDAF230](a1, *(_QWORD *)&a2, *(_QWORD *)&a3, *(_QWORD *)&a4);
}

DIR *__cdecl opendir(const char *a1)
{
  return (DIR *)MEMORY[0x24BDAF258](a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x24BDAF368](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

uint64_t os_transaction_create()
{
  return MEMORY[0x24BDAF438]();
}

uint64_t os_variant_has_internal_diagnostics()
{
  return MEMORY[0x24BDAF4D8]();
}

int posix_spawn(pid_t *a1, const char *a2, const posix_spawn_file_actions_t *a3, const posix_spawnattr_t *a4, char *const __argv[], char *const __envp[])
{
  return MEMORY[0x24BDAF600](a1, a2, a3, a4, __argv, __envp);
}

dirent *__cdecl readdir(DIR *a1)
{
  return (dirent *)MEMORY[0x24BDAFA88](a1);
}

void rename(const std::__fs::filesystem::path *__from, const std::__fs::filesystem::path *__to, std::error_code *__ec)
{
  MEMORY[0x24BDAFB80](__from, __to, __ec);
}

uint64_t rotateBitmap90Data16()
{
  return MEMORY[0x24BE0CEF0]();
}

uint64_t rotateBitmap90Data8()
{
  return MEMORY[0x24BE0CEF8]();
}

void (__cdecl *__cdecl signal(int a1, void (__cdecl *a2)(int)))(int)
{
  return (void (__cdecl *)(int))MEMORY[0x24BDAFE00](*(_QWORD *)&a1, a2);
}

int snprintf(char *__str, size_t __size, const char *__format, ...)
{
  return MEMORY[0x24BDAFE40](__str, __size, __format);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x24BDAFEF0](__s1, __s2);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deletedMethodError()
{
  return MEMORY[0x24BEE4C28]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x24BEE5058]();
}

int sysctl(int *a1, u_int a2, void *a3, size_t *a4, void *a5, size_t a6)
{
  return MEMORY[0x24BDB00F8](a1, *(_QWORD *)&a2, a3, a4, a5, a6);
}

int uname(utsname *a1)
{
  return MEMORY[0x24BDB02A8](a1);
}

int unlink(const char *a1)
{
  return MEMORY[0x24BDB02B0](a1);
}

int usleep(useconds_t a1)
{
  return MEMORY[0x24BDB02E8](*(_QWORD *)&a1);
}

void uuid_clear(uuid_t uu)
{
  MEMORY[0x24BDB0300](uu);
}

pid_t waitpid(pid_t a1, int *a2, int a3)
{
  return MEMORY[0x24BDB0478](*(_QWORD *)&a1, a2, *(_QWORD *)&a3);
}

