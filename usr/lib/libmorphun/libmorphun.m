morphun::Token *morphun::Token_Head::Token_Head(morphun::Token_Head *this, int a2)
{
  morphun::Token *result;

  *(_QWORD *)this = &off_1E8656930;
  result = morphun::Token::Token(this, (uint64_t *)&off_1E8666F08, a2, a2, &word_1CB73EB86, 0, &word_1CB73EB86, 0, 0);
  *(_QWORD *)result = &off_1E866A028;
  return result;
}

morphun::Token *morphun::Token_Tail::Token_Tail(morphun::Token_Tail *this, int a2)
{
  morphun::Token *result;

  *(_QWORD *)this = &off_1E8656A80;
  result = morphun::Token::Token(this, (uint64_t *)&off_1E8666F60, a2, a2, &word_1CB73EB86, 0, &word_1CB73EB86, 0, 0);
  *(_QWORD *)result = &off_1E866A0A0;
  return result;
}

morphun::Token *morphun::Token_Delim::Token_Delim(morphun::Token *a1, uint64_t *a2, int a3, int a4, void *a5, unint64_t a6, void *a7, unint64_t a8)
{
  morphun::Token *result;
  uint64_t v10;

  result = morphun::Token::Token(a1, a2 + 1, a3, a4, a5, a6, a7, a8, 0);
  v10 = *a2;
  *(_QWORD *)result = *a2;
  *(_QWORD *)((char *)result + *(_QWORD *)(v10 - 64)) = a2[4];
  *(_QWORD *)((char *)result + *(_QWORD *)(*(_QWORD *)result - 40)) = a2[5];
  return result;
}

morphun::Token *morphun::Token::Token(morphun::Token *this, uint64_t *a2, int a3, int a4, void *__src, unint64_t a6, void *a7, unint64_t a8, char a9)
{
  uint64_t v9;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v9 = *a2;
  *(_QWORD *)this = *a2;
  *(_QWORD *)((char *)this + *(_QWORD *)(v9 - 64)) = a2[1];
  *(_QWORD *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 40)) = a2[2];
  *((_DWORD *)this + 2) = a3;
  *((_DWORD *)this + 3) = a4;
  if (a6 > 0x7FFFFFFFFFFFFFF7)
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  if (a6 >= 0xB)
  {
    v16 = (a6 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((a6 | 3) != 0xB)
      v16 = a6 | 3;
    v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v16 + 1);
    *((_QWORD *)this + 3) = a6;
    *((_QWORD *)this + 4) = v17 | 0x8000000000000000;
    *((_QWORD *)this + 2) = v15;
    goto LABEL_8;
  }
  *((_BYTE *)this + 39) = a6;
  v15 = (char *)this + 16;
  if (a6)
LABEL_8:
    memmove(v15, __src, 2 * a6);
  *(_WORD *)&v15[2 * a6] = 0;
  if (a8 > 0x7FFFFFFFFFFFFFF7)
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  if (a8 >= 0xB)
  {
    v19 = (a8 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((a8 | 3) != 0xB)
      v19 = a8 | 3;
    v18 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v19 + 1);
    *((_QWORD *)this + 6) = a8;
    *((_QWORD *)this + 7) = v20 | 0x8000000000000000;
    *((_QWORD *)this + 5) = v18;
  }
  else
  {
    *((_BYTE *)this + 63) = a8;
    v18 = (char *)this + 40;
    if (!a8)
      goto LABEL_17;
  }
  memmove(v18, a7, 2 * a8);
LABEL_17:
  *(_WORD *)&v18[2 * a8] = 0;
  *((_BYTE *)this + 64) = a9;
  *((_BYTE *)this + 65) = morphun::Token::calculateWhiteSpace(this);
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 10) = 0;
  return this;
}

void sub_1CB4BE894(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void **v3;

  if (*(char *)(v1 + 63) < 0)
    operator delete(*v2);
  if (*(char *)(v1 + 39) < 0)
    operator delete(*v3);
  _Unwind_Resume(exception_object);
}

BOOL morphun::Token::calculateWhiteSpace(morphun::Token *this)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  char **v5;
  char *v6;

  if ((*((char *)this + 39) & 0x80000000) == 0)
  {
    v2 = *((unsigned __int8 *)this + 39);
    if (*((_BYTE *)this + 39))
      goto LABEL_3;
    return 0;
  }
  v2 = *((unsigned int *)this + 6);
  if (!(_DWORD)v2)
    return 0;
LABEL_3:
  if ((int)v2 < 1)
  {
    return 1;
  }
  else
  {
    v3 = 0;
    v4 = 0;
    v5 = (char **)((char *)this + 16);
    do
    {
      v6 = (char *)this + 16;
      if (*((char *)this + 39) < 0)
        v6 = *v5;
      if (!u_isUWhiteSpace(*(unsigned __int16 *)&v6[2 * v3]))
        break;
      v4 = ++v3 >= (int)v2;
    }
    while (v2 != v3);
  }
  return v4;
}

uint64_t morphun::analysis::DefaultAnalyzerFactory::createAnalyzer(morphun::analysis::DefaultAnalyzerFactory *this, const morphun::util::ULocale *a2)
{
  std::mutex *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  const char *v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t **v30;
  uint64_t **v31;
  _QWORD *v32;
  uint64_t **v33;
  uint64_t **v34;
  _QWORD *v35;
  uint64_t **v37;
  void *v38;
  _QWORD *v39;
  char v40;
  void *v41[2];
  uint64_t v42;
  unsigned __int8 v43;
  const char *v44;
  char v45;
  uint64_t v46[2];

  v4 = (std::mutex *)((char *)this + 272);
  std::mutex::lock((std::mutex *)((char *)this + 272));
  v5 = std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::find<morphun::util::ULocale>((uint64_t)this + 216, (uint64_t)a2);
  v6 = v5;
  if ((_QWORD *)((char *)this + 224) == v5)
  {
    v37 = (uint64_t **)((char *)this + 216);
    std::mutex::unlock(v4);
    morphun::util::ULocale::ULocale((morphun::util::ULocale *)v41, a2);
    v8 = v43;
    if ((v43 & 0x80u) != 0)
      v8 = v42;
    if (v8)
    {
      while (2)
      {
        v9 = 0;
        if (v45 >= 0)
          v10 = (const char *)&v44;
        else
          v10 = v44;
        v11 = 46;
        do
        {
          v12 = v11 + v9;
          if (v11 + v9 < 0 != __OFADD__(v11, v9))
            ++v12;
          v13 = (uint64_t)v12 >> 1;
          v14 = strcmp(v10, (&morphun::analysis::DefaultAnalyzerFactory::createAnalyzer(morphun::util::ULocale const&)::CONSTRUCTOR_MAP)[2 * (v12 >> 1)]);
          if (v14 < 0)
          {
            v11 = v13 - 1;
          }
          else
          {
            if (!v14)
            {
              v16 = (&morphun::analysis::DefaultAnalyzerFactory::createAnalyzer(morphun::util::ULocale const&)::CONSTRUCTOR_MAP)[2 * v13 + 1];
              std::mutex::lock(v4);
              v17 = std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::find<morphun::util::ULocale>((uint64_t)v37, (uint64_t)v41);
              if (v6 == v17)
              {
                v18 = ((uint64_t (*)(const morphun::util::ULocale *, _QWORD))v16)(a2, *((_QWORD *)this + 33));
                v7 = v18;
                v20 = (uint64_t *)*((_QWORD *)this + 31);
                v19 = *((_QWORD *)this + 32);
                if ((unint64_t)v20 >= v19)
                {
                  v22 = (_QWORD *)*((_QWORD *)this + 30);
                  v23 = v20 - v22;
                  v24 = v23 + 1;
                  if ((unint64_t)(v23 + 1) >> 61)
                    std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
                  v25 = v19 - (_QWORD)v22;
                  if (v25 >> 2 > v24)
                    v24 = v25 >> 2;
                  if ((unint64_t)v25 >= 0x7FFFFFFFFFFFFFF8)
                    v26 = 0x1FFFFFFFFFFFFFFFLL;
                  else
                    v26 = v24;
                  if (v26)
                  {
                    if (v26 >> 61)
                      std::__throw_bad_array_new_length[abi:ne180100]();
                    v27 = (char *)operator new(8 * v26);
                  }
                  else
                  {
                    v27 = 0;
                  }
                  v28 = (uint64_t *)&v27[8 * v23];
                  *v28 = v7;
                  v21 = v28 + 1;
                  if (v20 != v22)
                  {
                    do
                    {
                      v29 = *--v20;
                      *--v28 = v29;
                    }
                    while (v20 != v22);
                    v20 = (uint64_t *)*((_QWORD *)this + 30);
                  }
                  *((_QWORD *)this + 30) = v28;
                  *((_QWORD *)this + 31) = v21;
                  *((_QWORD *)this + 32) = &v27[8 * v26];
                  if (v20)
                    operator delete(v20);
                }
                else
                {
                  *v20 = v18;
                  v21 = v20 + 1;
                }
                *((_QWORD *)this + 31) = v21;
                v30 = (uint64_t **)std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::__find_equal<morphun::util::ULocale>((uint64_t)v37, v46, (uint64_t)v41);
                if (!*v30)
                {
                  v31 = v30;
                  v32 = operator new(0xA8uLL);
                  v38 = v32;
                  v39 = v6;
                  v40 = 0;
                  morphun::util::ULocale::ULocale((morphun::util::ULocale *)(v32 + 4), (const morphun::util::ULocale *)v41);
                  v32[20] = v7;
                  v40 = 1;
                  std::__tree<std::u16string_view>::__insert_node_at(v37, v46[0], v31, v32);
                  v38 = 0;
                  std::unique_ptr<std::__tree_node<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,void *>>>>::reset[abi:ne180100]((uint64_t)&v38);
                }
              }
              else
              {
                v7 = v17[20];
              }
              v33 = (uint64_t **)std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::__find_equal<morphun::util::ULocale>((uint64_t)v37, v46, (uint64_t)a2);
              if (!*v33)
              {
                v34 = v33;
                v35 = operator new(0xA8uLL);
                v38 = v35;
                v39 = v6;
                v40 = 0;
                morphun::util::ULocale::ULocale((morphun::util::ULocale *)(v35 + 4), a2);
                v35[20] = v7;
                v40 = 1;
                std::__tree<std::u16string_view>::__insert_node_at(v37, v46[0], v34, v35);
                v38 = 0;
                std::unique_ptr<std::__tree_node<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,void *>>>>::reset[abi:ne180100]((uint64_t)&v38);
              }
              std::mutex::unlock(v4);
              return v7;
            }
            v9 = v13 + 1;
          }
        }
        while (v9 <= v11);
        morphun::util::ULocale::getFallback((morphun::util::ULocale *)v41, (uint64_t)&v38);
        morphun::util::ULocale::operator=((uint64_t)v41, (uint64_t)&v38);
        v15 = v43;
        if ((v43 & 0x80u) != 0)
          v15 = v42;
        if (v15)
          continue;
        break;
      }
    }
    return (uint64_t)this + 8;
  }
  else
  {
    v7 = v5[20];
    std::mutex::unlock(v4);
  }
  return v7;
}

void sub_1CB4BECC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27)
{
  std::mutex *v27;

  std::unique_ptr<std::__tree_node<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,void *>>>>::reset[abi:ne180100]((uint64_t)&a11);
  std::mutex::unlock(v27);
  _Unwind_Resume(a1);
}

_QWORD *std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::find<morphun::util::ULocale>(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v5;
  _BOOL4 v6;
  _QWORD *v7;

  v2 = (_QWORD *)(a1 + 8);
  v3 = *(_QWORD **)(a1 + 8);
  if (!v3)
    return v2;
  v5 = (_QWORD *)(a1 + 8);
  do
  {
    v6 = std::less<morphun::util::ULocale>::operator()[abi:ne180100]((uint64_t)(v3 + 4), a2);
    v7 = v3 + 1;
    if (!v6)
    {
      v7 = v3;
      v5 = v3;
    }
    v3 = (_QWORD *)*v7;
  }
  while (*v7);
  if (v5 == v2 || std::less<morphun::util::ULocale>::operator()[abi:ne180100](a2, (uint64_t)(v5 + 4)))
    return v2;
  return v5;
}

void morphun::TokenChain::~TokenChain(morphun::TokenChain *this)
{
  JUMPOUT(0x1D179D2ECLL);
}

{
}

void morphun::Chunk::~Chunk(morphun::Chunk *this, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = *a2;
  *(_QWORD *)this = *a2;
  *(_QWORD *)((char *)this + *(_QWORD *)(v2 - 40)) = a2[1];
  if (*((_BYTE *)this + 28))
  {
    v3 = (_QWORD *)*((_QWORD *)this + 1);
    if (v3)
    {
      do
      {
        v4 = (_QWORD *)v3[10];
        (*(void (**)(_QWORD *))(*v3 + 16))(v3);
        v3 = v4;
      }
      while (v4);
    }
  }
}

void morphun::Token_Word::~Token_Word(void **this)
{
  morphun::Token::~Token(this, (void **)&off_1E8666FB0);
  JUMPOUT(0x1D179D2ECLL);
}

{
  morphun::Token::~Token(this, (void **)&off_1E8666FB0);
}

void morphun::Token_Tail::~Token_Tail(void **this)
{
  morphun::Token::~Token(this, (void **)&off_1E8666F60);
  JUMPOUT(0x1D179D2ECLL);
}

{
  morphun::Token::~Token(this, (void **)&off_1E8666F60);
}

void morphun::Token_Head::~Token_Head(void **this)
{
  morphun::Token::~Token(this, (void **)&off_1E8666F08);
  JUMPOUT(0x1D179D2ECLL);
}

{
  morphun::Token::~Token(this, (void **)&off_1E8666F08);
}

void morphun::Token::~Token(void **this, void **a2)
{
  _QWORD *v3;

  v3 = *a2;
  *this = *a2;
  *(void **)((char *)this + *(v3 - 8)) = a2[1];
  *(void **)((char *)this + *((_QWORD *)*this - 5)) = a2[2];
  if (*((char *)this + 63) < 0)
    operator delete(this[5]);
  if (*((char *)this + 39) < 0)
    operator delete(this[2]);
}

void morphun::TokenChain::~TokenChain(morphun::TokenChain *this, uint64_t *a2)
{
  uint64_t v4;
  void *v5;

  v4 = *a2;
  *(_QWORD *)this = *a2;
  *(_QWORD *)((char *)this + *(_QWORD *)(v4 - 40)) = a2[3];
  v5 = (void *)*((_QWORD *)this + 4);
  if (v5)
  {
    *((_QWORD *)this + 5) = v5;
    operator delete(v5);
  }
  morphun::Chunk::~Chunk(this, a2 + 1);
}

uint64_t morphun::util::Finally<morphun::analysis::ConfigurableAnalyzer::createTokenChain(morphun::Chunk const*,std::u16string_view)::$_0>::~Finally(uint64_t a1)
{
  (*(void (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)a1 + 24) + 48))(*(_QWORD *)(*(_QWORD *)a1 + 24));
  return a1;
}

void morphun::analysis::TokenStreamContainer::~TokenStreamContainer(morphun::analysis::TokenStreamContainer *this, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  *(_QWORD *)this = *a2;
  *(_QWORD *)((char *)this + *(_QWORD *)(v3 - 40)) = a2[1];
  if (*((_QWORD *)this + 2))
  {
    v4 = *((_QWORD *)this + 3);
    if (v4)
    {
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 48))(v4);
      v5 = *((_QWORD *)this + 1);
      if (v5)
      {
        v6 = *(_QWORD *)(v5 + 8);
        if (v6)
          (*(void (**)(uint64_t))(*(_QWORD *)v6 + 32))(v6);
      }
    }
  }
}

void morphun::analysis::tokenizer::StreamingTokenizer::close(std::vector<int> *this, std::vector<int>::size_type a2)
{
  std::vector<int>::pointer begin;
  void *__p;
  void *v5;
  uint64_t v6;

  this[4].__begin_ = 0;
  this[4].__end_ = 0;
  if ((int *)((char *)this[19].__end_cap_.__value_ - (char *)this[19].__begin_) >= (int *)0x41)
  {
    std::vector<int>::resize(this + 19, a2);
    std::vector<int>::shrink_to_fit(this + 19);
    this[19].__end_ = this[19].__begin_;
  }
  begin = this[21].__begin_;
  if (begin)
  {
    __p = 0;
    v5 = 0;
    v6 = 0;
    (*(void (**)(std::vector<int>::pointer, _QWORD, void **))(*(_QWORD *)begin + 56))(begin, 0, &__p);
    if (__p)
    {
      v5 = __p;
      operator delete(__p);
    }
  }
}

void sub_1CB4BF19C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

char *`virtual thunk to'morphun::analysis::tokenattributes::PackedTokenAttributeImpl::setSkippedTextWithOffsets(_QWORD *a1, int a2, uint64_t a3)
{
  char *v3;
  char *result;

  v3 = (char *)a1 + *(_QWORD *)(*a1 - 96);
  *((_DWORD *)v3 + 4) = a2;
  result = v3 + 24;
  if (v3 + 24 != (char *)a3)
    return std::vector<int>::__assign_with_size[abi:ne180100]<int *,int *>(result, *(char **)a3, *(_QWORD *)(a3 + 8), (uint64_t)(*(_QWORD *)(a3 + 8) - *(_QWORD *)a3) >> 2);
  return result;
}

void morphun::analysis::Analyzer_ReuseStrategy::setStoredValue(morphun::analysis::Analyzer_ReuseStrategy *this, morphun::analysis::Analyzer *a2, morphun::analysis::Analyzer_TokenStreamComponents *a3)
{
  std::mutex *v5;
  _QWORD *v6;
  uint64_t *v7;
  _QWORD *v8;
  uint64_t *v9;
  unint64_t v10;
  BOOL v11;
  _QWORD *v12;

  v5 = (std::mutex *)morphun::analysis::CLASS_MUTEX(this);
  std::mutex::lock(v5);
  npc<morphun::analysis::Analyzer>((uint64_t)a2);
  if (*((_QWORD *)a2 + 7) > 0x3FuLL)
  {
    v8 = (_QWORD *)*((_QWORD *)a2 + 3);
    v7 = (uint64_t *)((char *)a2 + 24);
    v6 = v8;
    if (v8)
    {
      v9 = v7;
      do
      {
        v10 = v6[4];
        v11 = v10 >= (unint64_t)a3;
        if (v10 >= (unint64_t)a3)
          v12 = v6;
        else
          v12 = v6 + 1;
        if (v11)
          v9 = v6;
        v6 = (_QWORD *)*v12;
      }
      while (*v12);
      if (v9 != v7 && v9[4] <= (unint64_t)a3)
      {
        std::__tree<morphun::analysis::Analyzer_TokenStreamComponents *>::__remove_node_pointer((uint64_t **)v7 - 1, v9);
        operator delete(v9);
      }
    }
    if (a3)
      (*(void (**)(morphun::analysis::Analyzer_TokenStreamComponents *))(*(_QWORD *)a3 + 16))(a3);
  }
  else
  {
    std::__tree<morphun::analysis::Analyzer_TokenStreamComponents *>::__emplace_unique_key_args<morphun::analysis::Analyzer_TokenStreamComponents *,morphun::analysis::Analyzer_TokenStreamComponents * const&>((uint64_t *)a2 + 5, (unint64_t)a3, (uint64_t)a3);
  }
  std::mutex::unlock(v5);
}

void sub_1CB4BF2B0(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<morphun::analysis::Analyzer_TokenStreamComponents *>::__emplace_unique_key_args<morphun::analysis::Analyzer_TokenStreamComponents *,morphun::analysis::Analyzer_TokenStreamComponents * const&>(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t **v6;
  uint64_t **v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;

  v4 = result;
  v6 = (uint64_t **)(result + 1);
  v5 = (uint64_t *)result[1];
  if (v5)
  {
    while (1)
    {
      while (1)
      {
        v7 = (uint64_t **)v5;
        v8 = v5[4];
        if (v8 <= a2)
          break;
        v5 = *v7;
        v6 = v7;
        if (!*v7)
          goto LABEL_9;
      }
      if (v8 >= a2)
        break;
      v5 = v7[1];
      if (!v5)
      {
        v6 = v7 + 1;
        goto LABEL_9;
      }
    }
  }
  else
  {
    v7 = (uint64_t **)(result + 1);
LABEL_9:
    v9 = (uint64_t *)operator new(0x28uLL);
    v9[4] = a3;
    *v9 = 0;
    v9[1] = 0;
    v9[2] = (uint64_t)v7;
    *v6 = v9;
    v10 = *(_QWORD *)*v4;
    if (v10)
    {
      *v4 = v10;
      v11 = *v6;
    }
    else
    {
      v11 = v9;
    }
    result = std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>((uint64_t *)v4[1], v11);
    ++v4[2];
  }
  return result;
}

morphun::analysis *morphun::analysis::Analyzer_ReuseStrategy::getStoredValue(morphun::analysis::Analyzer_ReuseStrategy *this, morphun::analysis::Analyzer *a2)
{
  morphun::analysis *v3;
  std::mutex *v4;
  uint64_t *v5;
  morphun::analysis *v6;

  v3 = (morphun::analysis *)npc<morphun::analysis::Analyzer>((uint64_t)a2);
  v4 = (std::mutex *)morphun::analysis::CLASS_MUTEX(v3);
  std::mutex::lock(v4);
  if (*((_QWORD *)a2 + 7))
  {
    v5 = (uint64_t *)*((_QWORD *)a2 + 5);
    v6 = (morphun::analysis *)v5[4];
    std::__tree<morphun::analysis::Analyzer_TokenStreamComponents *>::__remove_node_pointer((uint64_t **)a2 + 5, v5);
    operator delete(v5);
  }
  else
  {
    std::mutex::unlock(v4);
    v6 = (morphun::analysis *)(*(uint64_t (**)(morphun::analysis::Analyzer *))(*(_QWORD *)a2 + 24))(a2);
    v4 = (std::mutex *)morphun::analysis::CLASS_MUTEX(v6);
    std::mutex::lock(v4);
    std::__tree<morphun::analysis::Analyzer_TokenStreamComponents *>::__emplace_unique_key_args<morphun::analysis::Analyzer_TokenStreamComponents *,morphun::analysis::Analyzer_TokenStreamComponents * const&>((uint64_t *)a2 + 2, (unint64_t)v6, (uint64_t)v6);
  }
  std::mutex::unlock(v4);
  return v6;
}

void sub_1CB4BF420(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::CLASS_MUTEX(morphun::analysis *this)
{
  unsigned __int8 v1;
  uint64_t result;
  uint64_t v3;
  morphun::exception::NullPointerException *exception;

  {
    v3 = operator new();
    *(_QWORD *)v3 = 850045863;
    *(_OWORD *)(v3 + 8) = 0u;
    *(_OWORD *)(v3 + 24) = 0u;
    *(_OWORD *)(v3 + 40) = 0u;
    *(_QWORD *)(v3 + 56) = 0;
    morphun::analysis::CLASS_MUTEX(void)::classMutex = v3;
  }
  result = morphun::analysis::CLASS_MUTEX(void)::classMutex;
  if (!morphun::analysis::CLASS_MUTEX(void)::classMutex)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4BF4EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::analysis::Analyzer>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4BF558(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<morphun::analysis::Analyzer_TokenStreamComponents *>::__remove_node_pointer(uint64_t **a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  BOOL v5;
  uint64_t *v6;

  v2 = (uint64_t *)a2[1];
  if (v2)
  {
    do
    {
      v3 = v2;
      v2 = (uint64_t *)*v2;
    }
    while (v2);
  }
  else
  {
    v4 = a2;
    do
    {
      v3 = (uint64_t *)v4[2];
      v5 = *v3 == (_QWORD)v4;
      v4 = v3;
    }
    while (!v5);
  }
  if (*a1 == a2)
    *a1 = v3;
  v6 = a1[1];
  a1[2] = (uint64_t *)((char *)a1[2] - 1);
  return std::__tree_remove[abi:ne180100]<std::__tree_node_base<void *> *>(v6, a2);
}

void morphun::resources::fallthroughLocaleString(std::string *this, const morphun::util::ULocale *a2)
{
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _BOOL4 v10;
  _QWORD *v11;
  uint64_t v12;
  morphun::resources *v13;
  void *v14[16];
  void *v15[2];
  uint64_t v16;
  unsigned __int8 v17;
  _QWORD v18[3];

  if ((v4 & 1) == 0)
  {
    if ((_DWORD)v13)
    {
      morphun::resources::LOCALE_FALLTHROUGH_BLACKLIST(void)::LOCALE_FALLTHROUGH_BLACKLIST_ = morphun::resources::initLOCALE_FALLTHROUGH_BLACKLIST(v13);
    }
  }
  v5 = morphun::resources::LOCALE_FALLTHROUGH_BLACKLIST(void)::LOCALE_FALLTHROUGH_BLACKLIST_;
  morphun::util::ULocale::ULocale((morphun::util::ULocale *)v15, a2);
  v6 = v17;
  if ((v17 & 0x80u) != 0)
    v6 = v16;
  if (v6)
  {
    v7 = (_QWORD *)(v5 + 8);
    while (1)
    {
      v8 = (_QWORD *)*v7;
      if (*v7)
      {
        v9 = v5 + 8;
        do
        {
          v10 = std::less<std::string>::operator()[abi:ne180100](v8 + 4, v18);
          v11 = v8 + 1;
          if (!v10)
          {
            v11 = v8;
            v9 = (uint64_t)v8;
          }
          v8 = (_QWORD *)*v11;
        }
        while (*v11);
        if ((_QWORD *)v9 != v7 && !std::less<std::string>::operator()[abi:ne180100](v18, (_QWORD *)(v9 + 32)))
          break;
      }
      morphun::util::ULocale::getFallback((morphun::util::ULocale *)v15, (uint64_t)v14);
      morphun::util::ULocale::operator=((uint64_t)v15, (uint64_t)v14);
      v12 = v17;
      if ((v17 & 0x80u) != 0)
        v12 = v16;
      if (!v12)
        goto LABEL_16;
    }
    if (*(char *)(v9 + 79) < 0)
    {
      std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)(v9 + 56), *(_QWORD *)(v9 + 64));
    }
    else
    {
      *(_OWORD *)&this->__r_.__value_.__l.__data_ = *(_OWORD *)(v9 + 56);
      this->__r_.__value_.__r.__words[2] = *(_QWORD *)(v9 + 72);
    }
  }
  else
  {
LABEL_16:
    if (*((char *)a2 + 31) < 0)
    {
      std::string::__init_copy_ctor_external(this, *((const std::string::value_type **)a2 + 1), *((_QWORD *)a2 + 2));
    }
    else
    {
      *(_OWORD *)&this->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)a2 + 8);
      this->__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 3);
    }
  }
}

void sub_1CB4BF778(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void morphun::util::ULocale::getFallback(morphun::util::ULocale *this@<X0>, uint64_t a2@<X8>)
{
  const std::string *v4;
  std::string::size_type v5;
  void *v6;
  std::string::size_type v7;
  std::string::size_type v8;
  std::string::size_type v9;
  const std::string *v10;
  int v11;
  std::string::size_type v12;
  std::string *v13;
  std::string::size_type size;
  std::string *v15;
  __int128 v16;
  void *v17[2];
  uint64_t v18;
  void *v19[2];
  uint64_t v20;
  void *__p;
  uint64_t v22;
  uint64_t v23;
  std::string v24;
  std::string v25;
  std::string v26;

  v4 = (const std::string *)((char *)this + 104);
  v5 = std::string::find((const std::string *)((char *)this + 104), 64, 0);
  if (v5 == -1)
  {
    if (*((char *)this + 127) < 0)
      v7 = *((_QWORD *)this + 14);
    else
      v7 = *((unsigned __int8 *)this + 127);
    v8 = std::string::rfind(v4, 95, v7);
    if (v8 != -1)
    {
      v9 = v8 - 1;
      while (v9 != -1)
      {
        v10 = v4;
        if (*((char *)this + 127) < 0)
          v10 = (const std::string *)v4->__r_.__value_.__r.__words[0];
        v11 = v10->__r_.__value_.__s.__data_[v9--];
        if (v11 != 95)
        {
          v12 = v9 + 2;
          goto LABEL_21;
        }
      }
    }
    v12 = 0;
LABEL_21:
    std::string::basic_string(&v25, v4, 0, v12, (std::allocator<char> *)&v24);
    std::string::basic_string(&v24, v4, v7, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&__p);
    if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v13 = &v24;
    else
      v13 = (std::string *)v24.__r_.__value_.__r.__words[0];
    if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v24.__r_.__value_.__r.__words[2]);
    else
      size = v24.__r_.__value_.__l.__size_;
    v15 = std::string::append(&v25, (const std::string::value_type *)v13, size);
    v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
    v26.__r_.__value_.__r.__words[2] = v15->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v26.__r_.__value_.__l.__data_ = v16;
    v15->__r_.__value_.__l.__size_ = 0;
    v15->__r_.__value_.__r.__words[2] = 0;
    v15->__r_.__value_.__r.__words[0] = 0;
    __p = 0;
    v22 = 0;
    v23 = 0;
    v19[0] = 0;
    v19[1] = 0;
    v20 = 0;
    v17[0] = 0;
    v17[1] = 0;
    v18 = 0;
    morphun::util::ULocale::ULocale(a2, (uint64_t)&v26, (uint64_t)&__p, (uint64_t)v19, (uint64_t)v17);
    if (SHIBYTE(v18) < 0)
      operator delete(v17[0]);
    if (SHIBYTE(v20) < 0)
      operator delete(v19[0]);
    if (SHIBYTE(v23) < 0)
      operator delete(__p);
    if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v26.__r_.__value_.__l.__data_);
    if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v24.__r_.__value_.__l.__data_);
    if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0)
    {
      v6 = (void *)v25.__r_.__value_.__r.__words[0];
      goto LABEL_39;
    }
  }
  else
  {
    std::string::basic_string(&v26, v4, 0, v5, (std::allocator<char> *)&v25);
    memset(&v25, 0, sizeof(v25));
    memset(&v24, 0, sizeof(v24));
    __p = 0;
    v22 = 0;
    v23 = 0;
    morphun::util::ULocale::ULocale(a2, (uint64_t)&v26, (uint64_t)&v25, (uint64_t)&v24, (uint64_t)&__p);
    if (SHIBYTE(v23) < 0)
      operator delete(__p);
    if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v24.__r_.__value_.__l.__data_);
    if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v25.__r_.__value_.__l.__data_);
    if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0)
    {
      v6 = (void *)v26.__r_.__value_.__r.__words[0];
LABEL_39:
      operator delete(v6);
    }
  }
}

void sub_1CB4BF9F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  uint64_t v33;

  if (a15 < 0)
    operator delete(__p);
  if (a21 < 0)
    operator delete(a16);
  if (a27 < 0)
    operator delete(a22);
  if (*(char *)(v33 - 41) < 0)
    operator delete(*(void **)(v33 - 64));
  if (a33 < 0)
    operator delete(a28);
  if (*(char *)(v33 - 65) < 0)
    operator delete(*(void **)(v33 - 88));
  _Unwind_Resume(exception_object);
}

uint64_t morphun::util::ULocale::ULocale(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  std::string *v13;
  std::string *v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  const std::string::value_type *v23;
  std::string::size_type v24;
  uint64_t v25;
  std::string::value_type v26;
  int v27;
  const std::string::value_type *v28;
  std::string::size_type v29;
  uint64_t v30;
  std::string::value_type v31;
  int v32;
  const std::string::value_type *v33;
  std::string::size_type v34;
  uint64_t v35;
  uint64_t v36;
  std::string::value_type v37;
  int v38;
  const std::string::value_type *v39;
  std::string::size_type v40;
  int v41;
  unint64_t v42;
  std::string::size_type v43;
  uint64_t v44;
  const char *v45;
  std::basic_string<char16_t>::size_type v46;
  std::basic_string<char16_t> *v47;
  void *v49[2];
  char v50;
  void *v51[2];
  char v52;
  void *v53[2];
  char v54;
  std::basic_string<char16_t> __p[5];
  std::basic_string<char16_t> v56;
  _BYTE v57[168];
  uint64_t v58;

  v58 = *MEMORY[0x1E0C80C00];
  *(_QWORD *)a1 = &off_1E866A798;
  *(_OWORD *)(a1 + 8) = 0u;
  v10 = a1 + 8;
  *(_OWORD *)(a1 + 56) = 0u;
  v11 = a1 + 56;
  v12 = a1 + 32;
  v13 = (std::string *)(a1 + 80);
  *(_OWORD *)(a1 + 104) = 0u;
  v14 = (std::string *)(a1 + 104);
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_QWORD *)(a1 + 120) = 0;
  v15 = *(unsigned __int8 *)(a2 + 23);
  if ((v15 & 0x80u) != 0)
    v15 = *(_DWORD *)(a2 + 8);
  v16 = *(unsigned __int8 *)(a3 + 23);
  if ((v16 & 0x80u) != 0)
    v16 = *(_DWORD *)(a3 + 8);
  v17 = v16 + v15;
  v18 = *(unsigned __int8 *)(a4 + 23);
  if ((v18 & 0x80u) != 0)
    v18 = *(_DWORD *)(a4 + 8);
  v19 = *(unsigned __int8 *)(a5 + 23);
  if ((v19 & 0x80u) != 0)
    v19 = *(_DWORD *)(a5 + 8);
  v20 = v17 + v18 + v19;
  if (v20 == v15)
    v21 = v20;
  else
    v21 = v20 + 1;
  std::string::reserve((std::string *)(a1 + 104), v21);
  v22 = *(char *)(a2 + 23);
  if (v22 >= 0)
    v23 = (const std::string::value_type *)a2;
  else
    v23 = *(const std::string::value_type **)a2;
  if (v22 >= 0)
    v24 = *(unsigned __int8 *)(a2 + 23);
  else
    v24 = *(_QWORD *)(a2 + 8);
  std::string::append(v14, v23, v24);
  v25 = *(unsigned __int8 *)(a3 + 23);
  if ((v25 & 0x80u) != 0)
    v25 = *(_QWORD *)(a3 + 8);
  if (v25)
  {
    if (std::string::find((const std::string *)a3, 61, 0) == -1)
      v26 = 95;
    else
      v26 = 64;
    std::string::push_back(v14, v26);
    v27 = *(char *)(a3 + 23);
    if (v27 >= 0)
      v28 = (const std::string::value_type *)a3;
    else
      v28 = *(const std::string::value_type **)a3;
    if (v27 >= 0)
      v29 = *(unsigned __int8 *)(a3 + 23);
    else
      v29 = *(_QWORD *)(a3 + 8);
    std::string::append(v14, v28, v29);
  }
  v30 = *(unsigned __int8 *)(a4 + 23);
  if ((v30 & 0x80u) != 0)
    v30 = *(_QWORD *)(a4 + 8);
  if (v30)
  {
    if (std::string::find((const std::string *)a4, 61, 0) == -1)
      v31 = 95;
    else
      v31 = 64;
    std::string::push_back(v14, v31);
    v32 = *(char *)(a4 + 23);
    if (v32 >= 0)
      v33 = (const std::string::value_type *)a4;
    else
      v33 = *(const std::string::value_type **)a4;
    if (v32 >= 0)
      v34 = *(unsigned __int8 *)(a4 + 23);
    else
      v34 = *(_QWORD *)(a4 + 8);
    std::string::append(v14, v33, v34);
  }
  v35 = *(unsigned __int8 *)(a5 + 23);
  if ((v35 & 0x80u) != 0)
    v35 = *(_QWORD *)(a5 + 8);
  if (v35)
  {
    v36 = *(unsigned __int8 *)(a3 + 23);
    if ((v36 & 0x80u) != 0)
      v36 = *(_QWORD *)(a3 + 8);
    if (!v36)
      std::string::push_back(v14, 95);
    if (std::string::find((const std::string *)a5, 61, 0) == -1)
      v37 = 95;
    else
      v37 = 64;
    std::string::push_back(v14, v37);
    v38 = *(char *)(a5 + 23);
    if (v38 >= 0)
      v39 = (const std::string::value_type *)a5;
    else
      v39 = *(const std::string::value_type **)a5;
    if (v38 >= 0)
      v40 = *(unsigned __int8 *)(a5 + 23);
    else
      v40 = *(_QWORD *)(a5 + 8);
    std::string::append(v14, v39, v40);
  }
  memset(v57, 0, 157);
  v41 = *(char *)(a1 + 127);
  if ((v41 & 0x80000000) == 0)
  {
    LODWORD(__p[0].__r_.__value_.__l.__data_) = 0;
    if (!v41)
    {
LABEL_67:
      uloc_getLanguage();
      MEMORY[0x1D179D148](v10, v57);
      uloc_getScript();
      MEMORY[0x1D179D148](v12, v57);
      uloc_getCountry();
      MEMORY[0x1D179D148](v11, v57);
      v43 = std::string::find(v14, 64, 0);
      if (v43 == -1)
      {
        uloc_getVariant();
        MEMORY[0x1D179D148](v13, v57);
      }
      else
      {
        std::string::assign(v13, v14, v43 + 1, 0xFFFFFFFFFFFFFFFFLL);
      }
      return a1;
    }
LABEL_66:
    uloc_canonicalize();
    MEMORY[0x1D179D148](v14, v57);
    goto LABEL_67;
  }
  v42 = *(_QWORD *)(a1 + 112);
  if (v42 <= 0x9C)
  {
    LODWORD(__p[0].__r_.__value_.__l.__data_) = 0;
    if (!v42)
      goto LABEL_67;
    goto LABEL_66;
  }
  if (morphun::util::gLogLevel <= 4)
  {
    if (*(char *)(a1 + 127) < 0)
    {
      v45 = *(const char **)(a1 + 104);
      v44 = *(_QWORD *)(a1 + 112);
    }
    else
    {
      LODWORD(v44) = *(unsigned __int8 *)(a1 + 127);
      v45 = (const char *)v14;
    }
    morphun::util::StringViewUtils::to_u16string(v45, v44, &v56);
    std::basic_string<char16_t>::insert(&v56, (std::basic_string<char16_t>::size_type)"I", (const std::basic_string<char16_t>::value_type *)0xF, v46);
    __p[0] = v56;
    memset(&v56, 0, sizeof(v56));
    if (morphun::util::gLogLevel <= 4)
    {
      if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v47 = __p;
      else
        v47 = (std::basic_string<char16_t> *)__p[0].__r_.__value_.__r.__words[0];
      morphun::util::logToTopOfStackLogger((morphun::util *)4, 0, (uint64_t)v47);
    }
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p[0].__r_.__value_.__l.__data_);
    if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v56.__r_.__value_.__l.__data_);
  }
  std::string::basic_string[abi:ne180100]<0>(&v56, (char *)&unk_1CB74051D);
  std::string::basic_string[abi:ne180100]<0>(v53, (char *)&unk_1CB74051D);
  std::string::basic_string[abi:ne180100]<0>(v51, (char *)&unk_1CB74051D);
  std::string::basic_string[abi:ne180100]<0>(v49, (char *)&unk_1CB74051D);
  morphun::util::ULocale::ULocale(__p, &v56, v53, v51, v49);
  morphun::util::ULocale::operator=(a1, (uint64_t)__p);
  if (v50 < 0)
    operator delete(v49[0]);
  if (v52 < 0)
    operator delete(v51[0]);
  if (v54 < 0)
    operator delete(v53[0]);
  if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v56.__r_.__value_.__l.__data_);
  return a1;
}

void sub_1CB4C0034(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,void *a48,uint64_t a49,int a50,__int16 a51,char a52,char a53)
{
  char *v53;
  void **v54;
  void **v55;
  void **v56;
  void **v57;
  void **v58;

  if (a33 < 0)
    operator delete(__p);
  if (a53 < 0)
    operator delete(a48);
  if (v53[127] < 0)
    operator delete(*v58);
  if (v53[103] < 0)
    operator delete(*v57);
  if (v53[79] < 0)
    operator delete(*v56);
  if (v53[55] < 0)
    operator delete(*v55);
  if (v53[31] < 0)
    operator delete(*v54);
  _Unwind_Resume(exception_object);
}

_QWORD *std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::find<std::string>(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v5;
  _BOOL4 v6;
  _QWORD *v7;

  v2 = (_QWORD *)(a1 + 8);
  v3 = *(_QWORD **)(a1 + 8);
  if (!v3)
    return v2;
  v5 = (_QWORD *)(a1 + 8);
  do
  {
    v6 = std::less<std::string>::operator()[abi:ne180100](v3 + 4, a2);
    v7 = v3 + 1;
    if (!v6)
    {
      v7 = v3;
      v5 = v3;
    }
    v3 = (_QWORD *)*v7;
  }
  while (*v7);
  if (v5 == v2 || std::less<std::string>::operator()[abi:ne180100](a2, v5 + 4))
    return v2;
  return v5;
}

uint64_t *std::__tree<std::u16string_view>::__insert_node_at(uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  uint64_t *v5;
  uint64_t *result;

  *a4 = 0;
  a4[1] = 0;
  a4[2] = a2;
  *a3 = a4;
  v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }
  result = std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], a4);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return result;
}

void morphun::util::LocaleUtils::getSupportedLocaleList(morphun::util::LocaleUtils *this@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v3;
  _QWORD *v4;
  const morphun::util::ULocale *v5;
  const morphun::util::ULocale *v6;
  _QWORD *v7;
  _QWORD **v8;
  BOOL v9;
  _QWORD **v10;
  _QWORD *v11[2];

  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = a2 + 8;
  v3 = (_QWORD *)morphun::util::LocaleUtils::BASE_SUPPORTED_LOCALES(this);
  std::map<std::string,std::vector<morphun::util::ULocale>>::map[abi:ne180100]((uint64_t)&v10, v3);
  v4 = v10;
  if (v10 != v11)
  {
    do
    {
      v5 = (const morphun::util::ULocale *)v4[7];
      v6 = (const morphun::util::ULocale *)v4[8];
      while (v5 != v6)
      {
        std::__tree<morphun::util::ULocale>::__emplace_unique_key_args<morphun::util::ULocale,morphun::util::ULocale const&>((uint64_t **)a2, (uint64_t)v5, v5);
        v5 = (const morphun::util::ULocale *)((char *)v5 + 128);
      }
      v7 = (_QWORD *)v4[1];
      if (v7)
      {
        do
        {
          v8 = (_QWORD **)v7;
          v7 = (_QWORD *)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          v8 = (_QWORD **)v4[2];
          v9 = *v8 == v4;
          v4 = v8;
        }
        while (!v9);
      }
      v4 = v8;
    }
    while (v8 != v11);
  }
  std::__tree<std::__value_type<std::string,std::vector<morphun::util::ULocale>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::vector<morphun::util::ULocale>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::vector<morphun::util::ULocale>>>>::destroy(v11[0]);
}

void sub_1CB4C02C8(_Unwind_Exception *a1)
{
  _QWORD **v1;

  std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(*v1);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<std::string,std::vector<morphun::util::ULocale>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::vector<morphun::util::ULocale>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::vector<morphun::util::ULocale>>>>::destroy(_QWORD *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::string,std::vector<morphun::util::ULocale>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::vector<morphun::util::ULocale>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::vector<morphun::util::ULocale>>>>::destroy(*a1);
    std::__tree<std::__value_type<std::string,std::vector<morphun::util::ULocale>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::vector<morphun::util::ULocale>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::vector<morphun::util::ULocale>>>>::destroy(a1[1]);
    std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::vector<morphun::util::ULocale>>,0>((uint64_t)(a1 + 4));
    operator delete(a1);
  }
}

uint64_t *std::__tree<morphun::util::ULocale>::__emplace_unique_key_args<morphun::util::ULocale,morphun::util::ULocale const&>(uint64_t **a1, uint64_t a2, const morphun::util::ULocale *a3)
{
  uint64_t *result;
  uint64_t **v6;
  uint64_t *v7;
  uint64_t v8;

  result = std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::__find_equal<morphun::util::ULocale>((uint64_t)a1, &v8, a2);
  if (!*result)
  {
    v6 = (uint64_t **)result;
    v7 = (uint64_t *)operator new(0xA0uLL);
    morphun::util::ULocale::ULocale((morphun::util::ULocale *)(v7 + 4), a3);
    return std::__tree<std::u16string_view>::__insert_node_at(a1, v8, v6, v7);
  }
  return result;
}

void sub_1CB4C03B0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

morphun::util::ULocale *morphun::util::ULocale::ULocale(morphun::util::ULocale *this, const morphun::util::ULocale *a2)
{
  *(_QWORD *)this = &off_1E866A798;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *((_QWORD *)this + 15) = 0;
  morphun::util::ULocale::operator=((uint64_t)this, (uint64_t)a2);
  return this;
}

void sub_1CB4C0424(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 127) < 0)
    operator delete(*(void **)(v1 + 104));
  if (*(char *)(v1 + 103) < 0)
    operator delete(*(void **)(v1 + 80));
  if (*(char *)(v1 + 79) < 0)
    operator delete(*(void **)(v1 + 56));
  if (*(char *)(v1 + 55) < 0)
    operator delete(*(void **)(v1 + 32));
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

uint64_t morphun::util::ULocale::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    std::string::operator=((std::string *)(a1 + 8), (const std::string *)(a2 + 8));
    std::string::operator=((std::string *)(a1 + 32), (const std::string *)(a2 + 32));
    std::string::operator=((std::string *)(a1 + 56), (const std::string *)(a2 + 56));
    std::string::operator=((std::string *)(a1 + 80), (const std::string *)(a2 + 80));
    std::string::operator=((std::string *)(a1 + 104), (const std::string *)(a2 + 104));
  }
  return a1;
}

void morphun::util::ULocale::~ULocale(void **this, void **a2)
{
  _QWORD *v3;

  v3 = *a2;
  *this = *a2;
  *(void **)((char *)this + *(v3 - 5)) = a2[1];
  if (*((char *)this + 127) < 0)
    operator delete(this[13]);
  if (*((char *)this + 103) < 0)
    operator delete(this[10]);
  if (*((char *)this + 79) < 0)
    operator delete(this[7]);
  if (*((char *)this + 55) < 0)
    operator delete(this[4]);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
}

void morphun::util::ULocale::~ULocale(void **this)
{
}

{
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::util::StringViewUtils::lowercase(uint64_t a1, const UChar *a2, int32_t a3, uint64_t a4)
{
  std::basic_string<char16_t> *v8;
  UChar *v9;
  const char *v10;
  int32_t v11;
  int32_t v12;
  UErrorCode v13;
  UChar *v14;
  const char *v15;
  uint64_t v16;
  UErrorCode v18;
  morphun::exception::ICUException *exception;
  UErrorCode pErrorCode;

  v8 = (std::basic_string<char16_t> *)npc<std::basic_string<char16_t>>(a1);
  std::basic_string<char16_t>::resize(v8, a3, 0);
  pErrorCode = U_ZERO_ERROR;
  v9 = (UChar *)npc<std::basic_string<char16_t>>(a1);
  if (*(char *)(a1 + 23) < 0)
    v9 = *(UChar **)a1;
  if (*(char *)(a4 + 127) >= 0)
    v10 = (const char *)(a4 + 104);
  else
    v10 = *(const char **)(a4 + 104);
  v11 = u_strToLower(v9, a3, a2, a3, v10, &pErrorCode);
  v12 = v11;
  v13 = pErrorCode;
  if (pErrorCode == U_BUFFER_OVERFLOW_ERROR)
  {
    std::basic_string<char16_t>::resize((std::basic_string<char16_t> *)a1, v11, 0);
    pErrorCode = U_ZERO_ERROR;
    v14 = (UChar *)a1;
    if (*(char *)(a1 + 23) < 0)
      v14 = *(UChar **)a1;
    if (*(char *)(a4 + 127) >= 0)
      v15 = (const char *)(a4 + 104);
    else
      v15 = *(const char **)(a4 + 104);
    v12 = u_strToLower(v14, v12, a2, a3, v15, &pErrorCode);
    v13 = pErrorCode;
  }
  if (v13 >= U_ILLEGAL_ARGUMENT_ERROR)
  {
    v18 = v13;
    exception = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::ICUException::ICUException(exception, v18);
  }
  if (*(char *)(a1 + 23) < 0)
    v16 = *(_QWORD *)(a1 + 8);
  else
    LODWORD(v16) = *(unsigned __int8 *)(a1 + 23);
  if (v12 != (_DWORD)v16)
    std::basic_string<char16_t>::resize((std::basic_string<char16_t> *)a1, v12, 0);
  return a1;
}

void sub_1CB4C06D0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::util::LocaleUtils::toString(morphun::util::LocaleUtils *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  void *__p[2];
  char v6;

  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "_");
  morphun::util::LocaleUtils::toString((uint64_t)this, (const void **)__p, a2);
  if (v6 < 0)
    operator delete(__p[0]);
}

void sub_1CB4C073C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void morphun::util::LocaleUtils::toString(uint64_t a1@<X0>, const void **a2@<X1>, std::basic_string<char16_t> *a3@<X8>)
{
  const char *v6;
  uint64_t v7;
  const std::basic_string<char16_t>::value_type *v8;
  std::basic_string<char16_t>::size_type v9;
  const char *v10;
  uint64_t v11;
  const std::basic_string<char16_t>::value_type *p_p;
  std::basic_string<char16_t>::size_type v13;
  const char *v14;
  uint64_t v15;
  const std::basic_string<char16_t>::value_type *v16;
  std::basic_string<char16_t>::size_type v17;
  const char *v18;
  uint64_t v19;
  const std::basic_string<char16_t>::value_type *v20;
  std::basic_string<char16_t>::size_type v21;
  void *__p;
  std::basic_string<char16_t>::size_type v23;
  unsigned __int8 v24;
  void *v25;
  std::basic_string<char16_t>::size_type v26;
  uint64_t v27;

  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  v25 = 0;
  v26 = 0;
  v27 = 0;
  v6 = (const char *)(a1 + 8);
  if (*(char *)(a1 + 31) < 0)
  {
    v7 = *(_QWORD *)(a1 + 16);
    if (!v7)
      goto LABEL_13;
    v6 = *(const char **)v6;
  }
  else
  {
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 31);
    if (!*(_BYTE *)(a1 + 31))
      goto LABEL_13;
  }
  morphun::util::StringViewUtils::convert((uint64_t)&v25, v6, v7);
  if (v27 >= 0)
    v8 = (const std::basic_string<char16_t>::value_type *)&v25;
  else
    v8 = (const std::basic_string<char16_t>::value_type *)v25;
  if (v27 >= 0)
    v9 = HIBYTE(v27);
  else
    v9 = v26;
  std::basic_string<char16_t>::append(a3, v8, v9);
LABEL_13:
  v10 = (const char *)(a1 + 32);
  if (*(char *)(a1 + 55) < 0)
  {
    v11 = *(_QWORD *)(a1 + 40);
    if (!v11)
      goto LABEL_26;
    v10 = *(const char **)v10;
  }
  else
  {
    LODWORD(v11) = *(unsigned __int8 *)(a1 + 55);
    if (!*(_BYTE *)(a1 + 55))
      goto LABEL_26;
  }
  morphun::util::StringViewUtils::convert((uint64_t)&v25, v10, v11);
  std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&__p, a2, (const void **)&v25);
  if ((v24 & 0x80u) == 0)
    p_p = (const std::basic_string<char16_t>::value_type *)&__p;
  else
    p_p = (const std::basic_string<char16_t>::value_type *)__p;
  if ((v24 & 0x80u) == 0)
    v13 = v24;
  else
    v13 = v23;
  std::basic_string<char16_t>::append(a3, p_p, v13);
  if ((char)v24 < 0)
    operator delete(__p);
LABEL_26:
  v14 = (const char *)(a1 + 56);
  if (*(char *)(a1 + 79) < 0)
  {
    v15 = *(_QWORD *)(a1 + 64);
    if (!v15)
      goto LABEL_39;
    v14 = *(const char **)v14;
  }
  else
  {
    LODWORD(v15) = *(unsigned __int8 *)(a1 + 79);
    if (!*(_BYTE *)(a1 + 79))
      goto LABEL_39;
  }
  morphun::util::StringViewUtils::convert((uint64_t)&v25, v14, v15);
  std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&__p, a2, (const void **)&v25);
  if ((v24 & 0x80u) == 0)
    v16 = (const std::basic_string<char16_t>::value_type *)&__p;
  else
    v16 = (const std::basic_string<char16_t>::value_type *)__p;
  if ((v24 & 0x80u) == 0)
    v17 = v24;
  else
    v17 = v23;
  std::basic_string<char16_t>::append(a3, v16, v17);
  if ((char)v24 < 0)
    operator delete(__p);
LABEL_39:
  v18 = (const char *)(a1 + 80);
  if (*(char *)(a1 + 103) < 0)
  {
    v19 = *(_QWORD *)(a1 + 88);
    if (!v19)
      goto LABEL_52;
    v18 = *(const char **)v18;
  }
  else
  {
    LODWORD(v19) = *(unsigned __int8 *)(a1 + 103);
    if (!*(_BYTE *)(a1 + 103))
      goto LABEL_52;
  }
  morphun::util::StringViewUtils::convert((uint64_t)&v25, v18, v19);
  std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&__p, a2, (const void **)&v25);
  if ((v24 & 0x80u) == 0)
    v20 = (const std::basic_string<char16_t>::value_type *)&__p;
  else
    v20 = (const std::basic_string<char16_t>::value_type *)__p;
  if ((v24 & 0x80u) == 0)
    v21 = v24;
  else
    v21 = v23;
  std::basic_string<char16_t>::append(a3, v20, v21);
  if ((char)v24 < 0)
    operator delete(__p);
LABEL_52:
  if (SHIBYTE(v27) < 0)
    operator delete(v25);
}

void sub_1CB4C094C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  uint64_t v20;

  if (a14 < 0)
    operator delete(__p);
  if (a20 < 0)
    operator delete(a15);
  if (*(char *)(v20 + 23) < 0)
    operator delete(*(void **)v20);
  _Unwind_Resume(exception_object);
}

uint64_t morphun::util::StringViewUtils::convert(uint64_t a1, const char *a2, int32_t a3)
{
  std::basic_string<char16_t> *v6;
  UChar *v7;
  UErrorCode v8;
  morphun::exception::ICUException *exception;
  UErrorCode pErrorCode;
  int32_t pDestLength;

  pErrorCode = U_ZERO_ERROR;
  pDestLength = a3;
  v6 = (std::basic_string<char16_t> *)npc<std::basic_string<char16_t>>(a1);
  std::basic_string<char16_t>::resize(v6, a3, 0);
  v7 = (UChar *)a1;
  if (*(char *)(a1 + 23) < 0)
    v7 = *(UChar **)a1;
  u_strFromUTF8(v7, a3, &pDestLength, a2, a3, &pErrorCode);
  v8 = pErrorCode;
  if (pErrorCode >= U_ILLEGAL_ARGUMENT_ERROR)
  {
    exception = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::ICUException::ICUException(exception, v8);
  }
  if (pDestLength != a3)
    std::basic_string<char16_t>::resize((std::basic_string<char16_t> *)a1, pDestLength, 0);
  return a1;
}

void sub_1CB4C0A68(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::basic_string<char16_t>::resize(std::basic_string<char16_t> *this, std::basic_string<char16_t>::size_type __n, std::basic_string<char16_t>::value_type __c)
{
  std::basic_string<char16_t>::size_type size;

  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
  {
    size = this->__r_.__value_.__l.__size_;
    if (size >= __n)
    {
      this->__r_.__value_.__l.__size_ = __n;
      this = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
      goto LABEL_7;
    }
LABEL_5:
    std::basic_string<char16_t>::append(this, __n - size, __c);
    return;
  }
  size = HIBYTE(this->__r_.__value_.__r.__words[2]);
  if (size < __n)
    goto LABEL_5;
  *((_BYTE *)&this->__r_.__value_.__s + 23) = __n & 0x7F;
LABEL_7:
  this->__r_.__value_.__s.__data_[__n] = 0;
}

std::basic_string<char16_t> *__cdecl std::basic_string<char16_t>::append(std::basic_string<char16_t> *this, const std::basic_string<char16_t>::value_type *__s, std::basic_string<char16_t>::size_type __n)
{
  std::basic_string<char16_t>::size_type v6;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t> *v8;
  std::basic_string<char16_t>::size_type v9;

  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
  {
    size = this->__r_.__value_.__l.__size_;
    v6 = (this->__r_.__value_.__r.__words[2] & 0x7FFFFFFFFFFFFFFFLL) - 1;
  }
  else
  {
    v6 = 10;
    size = HIBYTE(this->__r_.__value_.__r.__words[2]);
  }
  if (v6 - size >= __n)
  {
    if (__n)
    {
      v8 = this;
      if ((*((_BYTE *)&this->__r_.__value_.__s + 23) & 0x80) != 0)
        v8 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
      memmove((char *)v8 + 2 * size, __s, 2 * __n);
      v9 = size + __n;
      if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
        this->__r_.__value_.__l.__size_ = v9;
      else
        *((_BYTE *)&this->__r_.__value_.__s + 23) = v9 & 0x7F;
      v8->__r_.__value_.__s.__data_[v9] = 0;
    }
  }
  else
  {
    std::basic_string<char16_t>::__grow_by_and_replace(this, v6, __n - v6 + size, size, size, 0, __n, __s);
  }
  return this;
}

std::basic_string<char16_t> *__cdecl std::basic_string<char16_t>::append(std::basic_string<char16_t> *this, std::basic_string<char16_t>::size_type __n, std::basic_string<char16_t>::value_type __c)
{
  std::basic_string<char16_t>::size_type v3;
  std::basic_string<char16_t>::size_type v4;
  unint64_t v8;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t>::size_type v10;
  unint64_t v11;
  std::basic_string<char16_t> *v12;
  std::basic_string<char16_t>::value_type *v13;
  std::basic_string<char16_t>::size_type v14;
  std::basic_string<char16_t>::size_type v15;

  if (__n)
  {
    LODWORD(v8) = SHIBYTE(this->__r_.__value_.__r.__words[2]);
    if ((v8 & 0x80000000) != 0)
    {
      size = this->__r_.__value_.__l.__size_;
      v11 = this->__r_.__value_.__r.__words[2];
      v10 = (v11 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      v8 = HIBYTE(v11);
    }
    else
    {
      size = HIBYTE(this->__r_.__value_.__r.__words[2]);
      v10 = 10;
    }
    if (v10 - size < __n)
    {
      std::basic_string<char16_t>::__grow_by(this, v10, __n - v10 + size, size, size, v3, v4);
      this->__r_.__value_.__l.__size_ = size;
      LOBYTE(v8) = *((_BYTE *)&this->__r_.__value_.__s + 23);
    }
    v12 = this;
    if ((v8 & 0x80) != 0)
      v12 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
    v13 = (std::basic_string<char16_t>::value_type *)((char *)v12 + 2 * size);
    v14 = __n;
    do
    {
      *v13++ = __c;
      --v14;
    }
    while (v14);
    v15 = size + __n;
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
      this->__r_.__value_.__l.__size_ = v15;
    else
      *((_BYTE *)&this->__r_.__value_.__s + 23) = v15 & 0x7F;
    v12->__r_.__value_.__s.__data_[v15] = 0;
  }
  return this;
}

_QWORD *std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::__find_equal<morphun::util::ULocale>(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v7;
  uint64_t v8;

  v5 = (_QWORD *)(a1 + 8);
  v4 = *(_QWORD **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        v7 = v4;
        v8 = (uint64_t)(v4 + 4);
        if (!std::less<morphun::util::ULocale>::operator()[abi:ne180100](a3, (uint64_t)(v4 + 4)))
          break;
        v4 = (_QWORD *)*v7;
        v5 = v7;
        if (!*v7)
          goto LABEL_9;
      }
      if (!std::less<morphun::util::ULocale>::operator()[abi:ne180100](v8, a3))
        break;
      v5 = v7 + 1;
      v4 = (_QWORD *)v7[1];
    }
    while (v4);
  }
  else
  {
    v7 = (_QWORD *)(a1 + 8);
  }
LABEL_9:
  *a2 = v7;
  return v5;
}

uint64_t morphun::util::LocaleUtils::BASE_SUPPORTED_LOCALES(morphun::util::LocaleUtils *this)
{
  unsigned __int8 v1;
  uint64_t result;
  uint64_t SupportedLocaleMapToBase;
  morphun::exception::NullPointerException *exception;
  _QWORD v5[3];

  if ((v1 & 1) == 0
  {
    morphun::resources::DataResource::getProperties(v5, (uint64_t *)"/", 0x3AuLL, 0);
    SupportedLocaleMapToBase = morphun::util::createSupportedLocaleMapToBase(v5);
    std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy((_QWORD *)v5[1]);
    morphun::util::LocaleUtils::BASE_SUPPORTED_LOCALES(void)::BASE_SUPPORTED_LOCALES_ = SupportedLocaleMapToBase;
  }
  result = morphun::util::LocaleUtils::BASE_SUPPORTED_LOCALES(void)::BASE_SUPPORTED_LOCALES_;
  if (!morphun::util::LocaleUtils::BASE_SUPPORTED_LOCALES(void)::BASE_SUPPORTED_LOCALES_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4C0D8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _QWORD *a11)
{
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(a11);
  _Unwind_Resume(a1);
}

morphun::TokenChain *morphun::analysis::ConfigurableAnalyzer::createTokenChain(morphun::analysis::Analyzer *a1, uint64_t a2)
{
  int v2;
  UChar *v3;
  unint64_t v4;

  v2 = *(char *)(a2 + 23);
  if (v2 >= 0)
    v3 = (UChar *)a2;
  else
    v3 = *(UChar **)a2;
  if (v2 >= 0)
    v4 = *(unsigned __int8 *)(a2 + 23);
  else
    v4 = *(_QWORD *)(a2 + 8);
  return morphun::analysis::ConfigurableAnalyzer::createTokenChain(a1, 0, v3, v4);
}

uint64_t morphun::Tokenizer::setMaxInputSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

morphun::TokenChain *morphun::TokenChain::TokenChain(morphun::TokenChain *this, morphun::Token_Head *a2, morphun::Token_Tail *a3)
{
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v11;

  *(_QWORD *)this = &off_1E86567A0;
  *((_QWORD *)this + 1) = a2;
  *((_QWORD *)this + 2) = a3;
  *((_DWORD *)this + 6) = 0;
  *((_BYTE *)this + 28) = 1;
  *((_DWORD *)this + 6) = morphun::Chunk::checkSize(a2, a3, a3);
  *(_QWORD *)this = &off_1E8669F40;
  npc<morphun::Token_Tail>((uint64_t)a3);
  v6 = (*(uint64_t (**)(morphun::Token_Tail *))(*(_QWORD *)a3 + 32))(a3);
  npc<morphun::Token_Head>((uint64_t)a2);
  v7 = (*(uint64_t (**)(morphun::Token_Head *))(*(_QWORD *)a2 + 24))(a2);
  v11 = 0;
  std::vector<morphun::Token *>::vector((_QWORD *)this + 4, v6 - v7 + 1, &v11);
  *((_QWORD *)this + 7) = 0;
  *((_DWORD *)this + 15) = (*(uint64_t (**)(morphun::Token_Head *))(*(_QWORD *)a2 + 24))(a2);
  **((_QWORD **)this + 4) = a2;
  *(_QWORD *)(*((_QWORD *)this + 4)
            + 8
            * (int)((*(uint64_t (**)(morphun::Token_Head *))(*(_QWORD *)a2 + 32))(a2)
                  - *((_DWORD *)this + 15))) = a2;
  *(_QWORD *)(*((_QWORD *)this + 4)
            + 8
            * (int)((*(uint64_t (**)(morphun::Token_Tail *))(*(_QWORD *)a3 + 24))(a3)
                  - *((_DWORD *)this + 15))) = a3;
  *(_QWORD *)(*((_QWORD *)this + 4)
            + 8
            * (int)((*(uint64_t (**)(morphun::Token_Tail *))(*(_QWORD *)a3 + 32))(a3)
                  - *((_DWORD *)this + 15))) = a3;
  v8 = *((_QWORD *)a2 + 10);
  do
  {
    if ((morphun::Token_Tail *)v8 == a3)
      break;
    npc<morphun::Token>(v8);
    if (*(_DWORD *)(v8 + 12) > *(_DWORD *)(v8 + 8))
    {
      npc<morphun::Token>(v8);
      *(_QWORD *)(*((_QWORD *)this + 4)
                + 8 * (int)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 24))(v8) - *((_DWORD *)this + 15))) = v8;
      *(_QWORD *)(*((_QWORD *)this + 4)
                + 8 * (int)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 32))(v8) + ~*((_DWORD *)this + 15))) = v8;
    }
    npc<morphun::Token>(v8);
    v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 32))(v8);
    v8 = *(_QWORD *)(v8 + 80);
    npc<morphun::Token>(v8);
  }
  while ((*(int (**)(uint64_t))(*(_QWORD *)v8 + 24))(v8) >= v9);
  return this;
}

void sub_1CB4C0FE4(_Unwind_Exception *a1)
{
  morphun::Chunk *v1;

  morphun::Chunk::~Chunk(v1, (uint64_t *)off_1E8666EE0);
  _Unwind_Resume(a1);
}

uint64_t morphun::Token::getEndChar(morphun::Token *this)
{
  return *((unsigned int *)this + 3);
}

uint64_t morphun::Token::getStartChar(morphun::Token *this)
{
  return *((unsigned int *)this + 2);
}

_QWORD *std::vector<morphun::Token *>::vector(_QWORD *a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    if (a2 >> 61)
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    v6 = 8 * a2;
    v7 = operator new(8 * a2);
    *a1 = v7;
    a1[1] = v7;
    v8 = &v7[a2];
    a1[2] = v8;
    v9 = *a3;
    do
    {
      *v7++ = v9;
      v6 -= 8;
    }
    while (v6);
    a1[1] = v8;
  }
  return a1;
}

void sub_1CB4C10A8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::Chunk::checkSize(morphun::Chunk *this, const morphun::Token *a2, const morphun::Token *a3)
{
  uint64_t v3;
  _QWORD *v4;
  morphun::exception::NullPointerException *exception;
  __int128 __dst;

  if (!this || !a2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  v3 = 1;
  while (this != a2)
  {
    v3 = (v3 + 1);
    this = (morphun::Chunk *)*((_QWORD *)this + 10);
    if (!this)
    {
      v4 = __cxa_allocate_exception(0x38uLL);
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"end token must be linked to and eventually follow start token!");
      morphun::exception::Throwable::Throwable((uint64_t)v4, &__dst);
      *v4 = &off_1E8673120;
    }
  }
  return v3;
}

void sub_1CB4C1190(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;

  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::Token_Tail>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4C1210(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::Token_Head>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4C1268(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

morphun::TokenChain *morphun::analysis::ConfigurableAnalyzer::createTokenChain(morphun::analysis::Analyzer *a1, const morphun::Token *a2, UChar *s, unint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  int v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD *);
  int v15;
  int v16;
  void *v17;
  unint64_t v18;
  _QWORD *v19;
  int v20;
  void *v21;
  unint64_t v22;
  int v23;
  void *v24;
  unint64_t v25;
  morphun::Token *v26;
  UErrorCode data;
  const morphun::Token *v28;
  const void *v29;
  int v30;
  int v31;
  void *v32;
  _QWORD *v33;
  void *v34;
  int v35;
  void *v36;
  unint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  morphun::Token *WordOrDelimiterToken;
  int v49;
  morphun::analysis::ConfigurableAnalyzer *v50;
  const morphun::Chunk *v51;
  int v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  morphun::Token *v56;
  void *v57;
  void *v58;
  unsigned __int16 *v59;
  unint64_t v60;
  char isSignificant;
  uint64_t v62;
  morphun::analysis::ConfigurableAnalyzer *v63;
  morphun::Token *v64;
  const morphun::Chunk *v65;
  morphun::Token_Tail *v66;
  morphun::Token *v67;
  int v68;
  morphun::TokenChain *v69;
  morphun::exception::NullPointerException *v71;
  morphun::exception::NullPointerException *v72;
  morphun::exception::NullPointerException *v73;
  struct type_info *v74;
  void (*v75)(void *);
  _QWORD *exception;
  std::basic_string<char16_t>::size_type v77;
  morphun::Token_Head *v78;
  unint64_t v79;
  UChar *v80;
  void *v82;
  int v83;
  void *v84;
  morphun::Token **v85;
  char *v87;
  UChar *v88;
  morphun::Token *v89;
  UChar *__src;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  morphun::Token *v94;
  std::basic_string<char16_t> *p_status;
  std::basic_string<char16_t> status;
  uint64_t v97;
  UText ut;
  void **v99;

  if (a2)
  {
    v7 = (*(uint64_t (**)(const morphun::Token *))(*(_QWORD *)a2 + 48))(a2);
    v8 = (*(uint64_t (**)(const morphun::Token *))(*(_QWORD *)a2 + 56))(a2);
    if (v7)
    {
      v9 = (_QWORD *)v8;
      v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 24))(v7);
      v11 = npc<morphun::Token>((uint64_t)v9);
      v83 = v10;
      if ((*(unsigned int (**)(uint64_t))(*v9 + 32))(v11) - v10 != (_DWORD)a4)
      {
        exception = __cxa_allocate_exception(0x38uLL);
        (**(void (***)(std::basic_string<char16_t> *__return_ptr))a2)(&status);
        std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&ut, "C", &status, v77);
        morphun::exception::Throwable::Throwable((uint64_t)exception, (__int128 *)&ut);
        *exception = &off_1E8673120;
      }
      if (v12
        || (v29 = (const void *)v9[9]) != 0
      {
        v13 = *((_QWORD *)a1 + 9) & 6;
        v89 = (morphun::Token *)operator new();
        v14 = *(uint64_t (**)(_QWORD *))(*v12 + 24);
        if (v13)
        {
          v15 = v14(v12);
          v16 = (*(uint64_t (**)(_QWORD *))(*v12 + 32))(v12);
          v17 = (void *)v12[2];
          v18 = v12[3];
          v19 = v12 + 2;
          v20 = *((char *)v19 + 23);
          if (v20 >= 0)
            v21 = v19;
          else
            v21 = v17;
          if (v20 >= 0)
            v22 = *((unsigned __int8 *)v19 + 23);
          else
            v22 = v18;
          v23 = *((char *)v19 + 47);
          if (v23 >= 0)
            v24 = v19 + 3;
          else
            v24 = (void *)v19[3];
          if (v23 >= 0)
            v25 = *((unsigned __int8 *)v19 + 47);
          else
            v25 = v19[4];
          *(_QWORD *)v89 = &off_1E8657058;
          v26 = morphun::Token::Token(v89, (uint64_t *)&off_1E8667108, v15, v16, v21, v22, v24, v25, 1);
        }
        else
        {
          v30 = v14(v12);
          v31 = (*(uint64_t (**)(_QWORD *))(*v12 + 32))(v12);
          v34 = (void *)v12[2];
          v33 = v12 + 2;
          v32 = v34;
          v35 = *((char *)v33 + 23);
          if (v35 >= 0)
            v36 = v33;
          else
            v36 = v32;
          if (v35 >= 0)
            v37 = *((unsigned __int8 *)v33 + 23);
          else
            v37 = v33[1];
          *(_QWORD *)v89 = &off_1E8657058;
          v26 = morphun::Token::Token(v89, (uint64_t *)&off_1E8667108, v30, v31, v36, v37, v36, v37, 1);
        }
        *(_QWORD *)v26 = &off_1E866A598;
      }
      else
      {
        v89 = 0;
      }
      memset(&ut.p, 0, 64);
      memset(&ut, 0, 72);
      ut.magic = 878368812;
      ut.sizeOfStruct = 144;
      v28 = a2;
      ut.context = a2;
      goto LABEL_33;
    }
    v73 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(v73);
    v75 = (void (*)(void *))morphun::exception::NullPointerException::~NullPointerException;
LABEL_79:
    __cxa_throw(v73, v74, v75);
  }
  memset(&ut, 0, sizeof(ut));
  ut.magic = 878368812;
  ut.sizeOfStruct = 144;
  LODWORD(status.__r_.__value_.__l.__data_) = 0;
  utext_openUChars(&ut, s, (int)a4, (UErrorCode *)&status);
  data = (UErrorCode)status.__r_.__value_.__l.__data_;
  if (SLODWORD(status.__r_.__value_.__l.__data_) >= 1)
  {
    v73 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::ICUException::ICUException(v73, data);
    v75 = (void (*)(void *))morphun::exception::ICUException::~ICUException;
    goto LABEL_79;
  }
  v89 = 0;
  v7 = 0;
  v83 = 0;
  v28 = 0;
LABEL_33:
  morphun::analysis::Analyzer::tokenStream(a1, &ut, (morphun::analysis::TokenStreamContainer *)&status);
  p_status = &status;
  v38 = morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::CharTermAttribute>(v97);
  v39 = v38;
  v85 = (morphun::Token **)v7;
  v80 = s;
  if (!v38)
  {
    v71 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(v71);
  }
  v40 = *(_QWORD *)(*v38 - 96);
  v41 = morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::OffsetAttribute>(v97);
  if (!v41)
  {
    v72 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(v72);
  }
  v42 = v97;
  v43 = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::GrammemeAttribute>(v97);
  v44 = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::LemmaMappingAttribute>(v42);
  v82 = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::SkippedOffsetsAttribute>(v42);
  v78 = (morphun::Token_Head *)operator new();
  if (v28)
  {
    v45 = (*(uint64_t (**)(const morphun::Token *))(*(_QWORD *)v28 + 48))(v28);
    v46 = npc<morphun::Token>(v45);
    v47 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v46 + 24))(v46);
  }
  else
  {
    v47 = 0;
  }
  morphun::Token_Head::Token_Head(v78, v47);
  v94 = v78;
  (*(void (**)(uint64_t))(*(_QWORD *)v97 + 40))(v97);
  v79 = a4;
  v87 = (char *)v39 + v40;
  WordOrDelimiterToken = v78;
  v49 = v83;
  v84 = v41;
  while (1)
  {
    if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v97 + 24))(v97))
    {
      v89 = WordOrDelimiterToken;
      v63 = (morphun::analysis::ConfigurableAnalyzer *)v79;
      goto LABEL_69;
    }
    v50 = (morphun::analysis::ConfigurableAnalyzer *)(*(uint64_t (**)(void *))(*(_QWORD *)v41 + 56))(v41);
    v52 = (*(uint64_t (**)(void *))(*(_QWORD *)v41 + 72))(v41);
    if ((int)v50 > v49)
      break;
LABEL_43:
    if (v89)
      goto LABEL_44;
LABEL_45:
    v88 = &v80[-v83];
    v53 = v52 - (int)v50;
    if (v43 && (*(uint64_t (**)(void *))(*(_QWORD *)v43 + 56))(v43))
    {
      __src = &v88[(int)v50];
      v91 = 0;
      v92 = 0;
      v93 = 0;
      if (!v44)
        goto LABEL_54;
      goto LABEL_52;
    }
    if (!v44 || (v54 = (_QWORD *)(*(uint64_t (**)(void *))(*(_QWORD *)v44 + 56))(v44), *v54 == v54[1]))
    {
      WordOrDelimiterToken = morphun::analysis::ConfigurableAnalyzer::getWordOrDelimiterToken((uint64_t)v94, (void **)v87, (int)v50, v52, &v88[(int)v50], v53);
      v94 = WordOrDelimiterToken;
      v49 = v52;
    }
    else
    {
      __src = &v88[(int)v50];
      v91 = 0;
      v92 = 0;
      v93 = 0;
LABEL_52:
      v55 = (*(uint64_t (**)(void *))(*(_QWORD *)v44 + 56))(v44);
      if (&v91 != (uint64_t *)v55)
        std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__assign_with_size[abi:ne180100]<morphun::analysis::tokenattributes::LemmaMapping*,morphun::analysis::tokenattributes::LemmaMapping*>(&v91, *(const std::basic_string<char16_t> **)v55, *(_QWORD *)(v55 + 8), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(v55 + 8) - *(_QWORD *)v55) >> 4));
LABEL_54:
      v56 = v94;
      WordOrDelimiterToken = (morphun::Token *)operator new();
      v57 = v44;
      v58 = v43;
      v59 = (unsigned __int16 *)v87;
      if (v87[23] < 0)
      {
        v59 = *(unsigned __int16 **)v87;
        v60 = *((_QWORD *)v87 + 1);
      }
      else
      {
        v60 = v87[23];
      }
      isSignificant = morphun::tokenizer::TokenUtil::isSignificant(v59, v60);
      v62 = (uint64_t)v58;
      if (v58)
        v62 = (*(uint64_t (**)(void *))(*(_QWORD *)v58 + 56))(v58);
      morphun::analysis::tokenizer::MorphologicalWordToken::MorphologicalWordToken(WordOrDelimiterToken, (int)v50, v52, __src, v53, v59, v60, isSignificant, v62, &v91);
      if (v56)
      {
        *((_QWORD *)v56 + 10) = WordOrDelimiterToken;
        *((_QWORD *)WordOrDelimiterToken + 9) = v56;
      }
      v94 = WordOrDelimiterToken;
      v99 = (void **)&v91;
      std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__destroy_vector::operator()[abi:ne180100](&v99);
      v49 = v52;
      v28 = a2;
      v43 = v58;
      v41 = v84;
      v44 = v57;
    }
  }
  if (v28)
  {
    v85 = morphun::analysis::ConfigurableAnalyzer::splitDelimiters(v50, v49, v83, &v94, v85, v28, v51);
    goto LABEL_43;
  }
  npc<morphun::analysis::tokenattributes::SkippedOffsetsAttribute>((uint64_t)v82);
  v94 = morphun::analysis::ConfigurableAnalyzer::addDelimitersFromOffsets((uint64_t)a1, (uint64_t)v80, v79, v83, WordOrDelimiterToken, (uint64_t)v82);
  if (!v89)
    goto LABEL_45;
LABEL_44:
  if ((*(int (**)(morphun::Token *))(*(_QWORD *)v89 + 24))(v89) > (int)v50)
    goto LABEL_45;
  v64 = v94;
  if (v94)
  {
    *((_QWORD *)v94 + 10) = v89;
    *((_QWORD *)v89 + 9) = v64;
  }
  v94 = v89;
  v63 = (morphun::analysis::ConfigurableAnalyzer *)v79;
  v49 = v79;
LABEL_69:
  (*(void (**)(uint64_t))(*(_QWORD *)v97 + 32))(v97);
  if (v49 < (int)v63)
  {
    if (v28)
    {
      morphun::analysis::ConfigurableAnalyzer::splitDelimiters(v63, v49, v83, &v94, v85, v28, v65);
    }
    else
    {
      npc<morphun::analysis::tokenattributes::SkippedOffsetsAttribute>((uint64_t)v82);
      v94 = morphun::analysis::ConfigurableAnalyzer::addDelimitersFromOffsets((uint64_t)a1, (uint64_t)v80, (unint64_t)v63, v83, v89, (uint64_t)v82);
    }
  }
  v66 = (morphun::Token_Tail *)operator new();
  v67 = v94;
  v68 = (*(uint64_t (**)(morphun::Token *))(*(_QWORD *)v94 + 32))(v94);
  morphun::Token_Tail::Token_Tail(v66, v68);
  *((_QWORD *)v67 + 10) = v66;
  *((_QWORD *)v66 + 9) = v67;
  v69 = (morphun::TokenChain *)operator new();
  morphun::TokenChain::TokenChain(v69, v78, v66);
  morphun::util::Finally<morphun::analysis::ConfigurableAnalyzer::createTokenChain(morphun::Chunk const*,std::u16string_view)::$_0>::~Finally((uint64_t)&p_status);
  return v69;
}

void sub_1CB4C1AD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,void *__p,uint64_t a37,int a38,__int16 a39,char a40,char a41)
{
  void *v41;
  int v42;

  if (a41 < 0)
    operator delete(__p);
  if (a34 < 0)
  {
    operator delete(a29);
    if ((v42 & 1) == 0)
LABEL_8:
      _Unwind_Resume(a1);
  }
  else if (!v42)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v41);
  goto LABEL_8;
}

uint64_t morphun::analysis::filter::DiacriticFilter::incrementToken(morphun::analysis::filter::DiacriticFilter *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  int v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD *v15;
  _QWORD *v16;
  morphun::lang::StringFilterUtil *v17;
  void **v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  morphun::exception::NullPointerException *exception;
  std::basic_string<char16_t> __str;

  v2 = *((_QWORD *)this + 12);
  if (!v2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  if ((_DWORD)v3)
  {
    v4 = *((_QWORD *)this + 14);
    if (!v4 || ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 56))(v4) & 1) == 0)
    {
      v5 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
      v6 = (char *)v5 + *(_QWORD *)(*v5 - 96);
      if (v6[23] < 0)
        v7 = *((_QWORD *)v6 + 1);
      else
        LODWORD(v7) = v6[23];
      if ((int)v7 >= 1)
      {
        v8 = 0;
        while (1)
        {
          v9 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
          v10 = (uint64_t)v9 + *(_QWORD *)(*v9 - 96);
          if (*(char *)(v10 + 23) < 0)
          {
            v12 = v10;
            v10 = *(_QWORD *)v10;
            v11 = *(_QWORD *)(v12 + 8);
          }
          else
          {
            LODWORD(v11) = *(unsigned __int8 *)(v10 + 23);
          }
          v13 = morphun::util::StringViewUtils::codePointAt(v10, v11, v8);
          if (MEMORY[0x1D179D958](**((_QWORD **)this + 15), v13))
            break;
          if (v13 < 0x10000)
            v14 = 1;
          else
            v14 = 2;
          v8 += v14;
          if (v8 >= (int)v7)
            return v3;
        }
        if (*((_BYTE *)this + 128))
        {
          memset(&__str, 0, sizeof(__str));
          v15 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
          morphun::lang::StringFilterUtil::unaccent((morphun::lang *)&__str, (uint64_t)v15 + *(_QWORD *)(*v15 - 96));
          v16 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
          std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v16 + *(_QWORD *)(*v16 - 96)), &__str);
          if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__str.__r_.__value_.__l.__data_);
        }
        else
        {
          v17 = (morphun::lang::StringFilterUtil *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
          v18 = (void **)((char *)v17 + *(_QWORD *)(*(_QWORD *)v17 - 96));
          v19 = (_QWORD *)*((_QWORD *)this + 15);
          v20 = (_QWORD *)morphun::lang::StringFilterUtil::COMBINING_DIACRITICAL_MARKS(v17);
          v21 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
          morphun::lang::StringFilterUtil::filteredUnaccent(v19, v20, (uint64_t)v21 + *(_QWORD *)(*v21 - 96), &__str);
          if (*((char *)v18 + 23) < 0)
            operator delete(*v18);
          *(std::basic_string<char16_t> *)v18 = __str;
        }
      }
    }
  }
  return v3;
}

void sub_1CB4C1E24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t morphun::analysis::filter::NormalizeFontVariantsFilter::incrementToken(morphun::analysis::filter::NormalizeFontVariantsFilter *this)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  std::basic_string<char16_t>::size_type v13;
  std::basic_string<char16_t> *v14;
  _QWORD *v15;
  std::basic_string<char16_t> *v16;
  std::basic_string<char16_t>::size_type size;
  morphun::analysis::filter::NormalizeFontVariantsFilter *v18;
  _QWORD *v19;
  void *p_p;
  std::basic_string<char16_t>::size_type v21;
  char *v22;
  __int128 v23;
  morphun::exception::NullPointerException *exception;
  morphun::analysis::filter *v26;
  std::basic_string<char16_t> v27;
  void *__p;
  std::basic_string<char16_t>::size_type v29;
  uint64_t v30;

  v2 = *((_QWORD *)this + 12);
  if (!v2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  if ((_DWORD)v3)
  {
    if ((v4 & 1) == 0)
    {
      if ((_DWORD)v26)
      {
        morphun::analysis::filter::NormalizeFontVariantsFilter::MAPPABLE_CHARS(void)::MAPPABLE_CHARS_ = morphun::analysis::filter::createMappableChars(v26);
      }
    }
    v5 = (_QWORD *)morphun::analysis::filter::NormalizeFontVariantsFilter::MAPPABLE_CHARS(void)::MAPPABLE_CHARS_;
    npc<icu4cxx::UnicodeSet const>(morphun::analysis::filter::NormalizeFontVariantsFilter::MAPPABLE_CHARS(void)::MAPPABLE_CHARS_);
    v6 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
    v7 = (uint64_t)v6 + *(_QWORD *)(*v6 - 96);
    if (*(char *)(v7 + 23) < 0)
    {
      v7 = *(_QWORD *)v7;
      v8 = *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 - 96) + 8);
    }
    else
    {
      LODWORD(v8) = *(unsigned __int8 *)(v7 + 23);
    }
    if (morphun::util::UnicodeSetUtils::containsSome(v5, v7, v8))
    {
      v9 = (_QWORD *)*((_QWORD *)this + 13);
      npc<morphun::analysis::tokenattributes::CharTermAttribute>((uint64_t)v9);
      v10 = *(_QWORD *)(*v9 - 96);
      v11 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
      v12 = (uint64_t)v11 + *(_QWORD *)(*v11 - 96);
      if (*(char *)(v12 + 23) < 0)
      {
        v12 = *(_QWORD *)v12;
        v13 = *(_QWORD *)((char *)v11 + *(_QWORD *)(*v11 - 96) + 8);
      }
      else
      {
        v13 = *(unsigned __int8 *)(v12 + 23);
      }
      memset(&v27, 0, sizeof(v27));
      __p = 0;
      v29 = 0;
      v30 = 0;
      v14 = morphun::util::StringViewUtils::replace(&v27, v12, v13, morphun::analysis::filter::OE, 1uLL, word_1CB736062, 2uLL);
      v15 = (_QWORD *)morphun::analysis::filter::DOUBLE_QUOTES((morphun::analysis::filter *)v14);
      if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v16 = &v27;
      else
        v16 = (std::basic_string<char16_t> *)v27.__r_.__value_.__r.__words[0];
      if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        size = HIBYTE(v27.__r_.__value_.__r.__words[2]);
      else
        size = v27.__r_.__value_.__l.__size_;
      v18 = (morphun::analysis::filter::NormalizeFontVariantsFilter *)morphun::util::UnicodeSetUtils::replaceSetFromString((uint64_t)&__p, v15, (uint64_t)v16, size, L"\"", 1uLL);
      v19 = (_QWORD *)morphun::analysis::filter::NormalizeFontVariantsFilter::SINGLE_QUOTES(v18);
      if (v30 >= 0)
        p_p = &__p;
      else
        p_p = __p;
      if (v30 >= 0)
        v21 = HIBYTE(v30);
      else
        v21 = v29;
      morphun::util::UnicodeSetUtils::replaceSetFromString((uint64_t)&v27, v19, (uint64_t)p_p, v21, L"'", 1uLL);
      v22 = (char *)v9 + v10;
      if (SHIBYTE(v30) < 0)
        operator delete(__p);
      if (v22[23] < 0)
        operator delete(*(void **)v22);
      v23 = *(_OWORD *)&v27.__r_.__value_.__l.__data_;
      *((_QWORD *)v22 + 2) = *((_QWORD *)&v27.__r_.__value_.__l + 2);
      *(_OWORD *)v22 = v23;
    }
  }
  return v3;
}

void sub_1CB4C204C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::filter::LowerCaseFilter::incrementToken(morphun::analysis::filter::LowerCaseFilter *this)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  uint64_t v6;
  int v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  _QWORD *v14;
  const UChar *v15;
  uint64_t v16;
  _QWORD *v17;
  morphun::exception::NullPointerException *exception;
  std::basic_string<char16_t> __str;

  v2 = *((_QWORD *)this + 12);
  if (!v2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  if ((_DWORD)v3)
  {
    v4 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
    v5 = (char *)v4 + *(_QWORD *)(*v4 - 96);
    if (v5[23] < 0)
      v6 = *((_QWORD *)v5 + 1);
    else
      LODWORD(v6) = v5[23];
    if ((int)v6 >= 1)
    {
      v7 = 0;
      while (1)
      {
        v8 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
        v9 = (uint64_t)v8 + *(_QWORD *)(*v8 - 96);
        if (*(char *)(v9 + 23) < 0)
        {
          v11 = v9;
          v9 = *(_QWORD *)v9;
          v10 = *(_QWORD *)(v11 + 8);
        }
        else
        {
          LODWORD(v10) = *(unsigned __int8 *)(v9 + 23);
        }
        v12 = morphun::util::StringViewUtils::codePointAt(v9, v10, v7);
        if (v12 != MEMORY[0x1D179D634]())
          break;
        if (v12 < 0x10000)
          v13 = 1;
        else
          v13 = 2;
        v7 += v13;
        if (v7 >= (int)v6)
          return v3;
      }
      memset(&__str, 0, sizeof(__str));
      v14 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
      v15 = (const UChar *)((char *)v14 + *(_QWORD *)(*v14 - 96));
      if (*((char *)v15 + 23) < 0)
      {
        v15 = *(const UChar **)v15;
        v16 = *(_QWORD *)((char *)v14 + *(_QWORD *)(*v14 - 96) + 8);
      }
      else
      {
        LODWORD(v16) = *((unsigned __int8 *)v15 + 23);
      }
      morphun::util::StringViewUtils::lowercase((uint64_t)&__str, v15, v16, (uint64_t)this + 112);
      v17 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
      std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v17 + *(_QWORD *)(*v17 - 96)), &__str);
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__str.__r_.__value_.__l.__data_);
    }
  }
  return v3;
}

void sub_1CB4C2210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;

  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::StringViewUtils::codePointAt(uint64_t a1, int a2, int a3)
{
  uint64_t result;
  int v5;
  BOOL v6;
  int v7;
  int v8;
  unsigned int v9;
  morphun::exception::StringIndexOutOfBoundsException *exception;

  if (a3 < 0 || a2 <= a3)
  {
    exception = (morphun::exception::StringIndexOutOfBoundsException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::StringIndexOutOfBoundsException::StringIndexOutOfBoundsException(exception, a3);
  }
  result = *(unsigned __int16 *)(a1 + 2 * a3);
  if ((result & 0xF800) == 0xD800)
  {
    if ((result & 0x400) != 0)
    {
      if (!a3)
        return result;
      v8 = *(unsigned __int16 *)(a1 + 2 * (a3 - 1));
      v6 = (v8 & 0xFC00) == 55296;
      v7 = result + (v8 << 10);
    }
    else
    {
      if (a3 + 1 == a2)
        return result;
      v5 = *(unsigned __int16 *)(a1 + 2 * (a3 + 1));
      v6 = (v5 & 0xFC00) == 56320;
      v7 = v5 + ((_DWORD)result << 10);
    }
    v9 = v7 - 56613888;
    if (v6)
      return v9;
    else
      return result;
  }
  return result;
}

void sub_1CB4C22F8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::basic_string<char16_t> *__cdecl std::basic_string<char16_t>::operator=(std::basic_string<char16_t> *this, const std::basic_string<char16_t> *__str)
{
  __int128 v2;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t>::size_type v4;

  if (this != __str)
  {
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
    {
      size = __str->__r_.__value_.__l.__size_;
      if ((__str->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      {
        v4 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
      }
      else
      {
        __str = (const std::basic_string<char16_t> *)__str->__r_.__value_.__r.__words[0];
        v4 = size;
      }
      return std::basic_string<char16_t>::__assign_no_alias<false>(this, (const std::basic_string<char16_t>::value_type *)__str, v4);
    }
    else if ((*((_BYTE *)&__str->__r_.__value_.__s + 23) & 0x80) != 0)
    {
      return std::basic_string<char16_t>::__assign_no_alias<true>(this, __str->__r_.__value_.__l.__data_, __str->__r_.__value_.__l.__size_);
    }
    else
    {
      v2 = *(_OWORD *)&__str->__r_.__value_.__l.__data_;
      this->__r_.__value_.__r.__words[2] = __str->__r_.__value_.__r.__words[2];
      *(_OWORD *)&this->__r_.__value_.__l.__data_ = v2;
    }
  }
  return this;
}

void *morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::LemmaMappingAttribute>(uint64_t a1)
{
  _QWORD *v1;
  const void *v2;

  v1 = std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::find<std::type_index>((_QWORD *)(a1 + 8), (uint64_t)"N7morphun8analysis15tokenattributes21LemmaMappingAttributeE");
  if (v1 && (v2 = (const void *)v1[3]) != 0)
  else
    return 0;
}

void *morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::GrammemeAttribute>(uint64_t a1)
{
  _QWORD *v1;
  const void *v2;

  v1 = std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::find<std::type_index>((_QWORD *)(a1 + 8), (uint64_t)"N7morphun8analysis15tokenattributes17GrammemeAttributeE");
  if (v1 && (v2 = (const void *)v1[3]) != 0)
  else
    return 0;
}

uint64_t `virtual thunk to'morphun::analysis::tokenattributes::PackedTokenAttributeImpl::startOffset(morphun::analysis::tokenattributes::PackedTokenAttributeImpl *this)
{
  return *(unsigned int *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 96) + 8);
}

uint64_t `virtual thunk to'morphun::analysis::tokenattributes::PackedTokenAttributeImpl::endOffset(morphun::analysis::tokenattributes::PackedTokenAttributeImpl *this)
{
  return *(unsigned int *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 112) + 12);
}

morphun::analysis::TokenStreamContainer *morphun::analysis::Analyzer::tokenStream@<X0>(morphun::analysis::Analyzer *this@<X0>, UText *a2@<X1>, morphun::analysis::TokenStreamContainer *a3@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  morphun::analysis::Analyzer_TokenStreamComponents *v8;
  uint64_t v9;
  morphun::exception::NullPointerException *exception;

  v4 = *((_QWORD *)this + 1);
  if (!v4
    || (v7 = (*(uint64_t (**)(uint64_t, morphun::analysis::Analyzer *))(*(_QWORD *)v4 + 24))(v4, this)) == 0)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  v8 = (morphun::analysis::Analyzer_TokenStreamComponents *)v7;
  v9 = (*(uint64_t (**)(morphun::analysis::Analyzer *, UText *))(*(_QWORD *)this + 32))(this, a2);
  (*(void (**)(morphun::analysis::Analyzer_TokenStreamComponents *, uint64_t))(*(_QWORD *)v8 + 24))(v8, v9);
  return morphun::analysis::TokenStreamContainer::TokenStreamContainer(a3, this, v8);
}

void sub_1CB4C24D8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::Tokenizer::setReader(uint64_t this, UText *a2)
{
  _QWORD *exception;
  _QWORD *v3;
  __int128 __dst;

  if (!a2)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"input must not be null");
    morphun::exception::Throwable::Throwable((uint64_t)exception, &__dst);
    *exception = &off_1E8673090;
  }
  if (*(_QWORD *)(this + 96))
  {
    v3 = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "T");
    morphun::exception::Throwable::Throwable((uint64_t)v3, &__dst);
    *v3 = &off_1E86730F0;
  }
  *(_QWORD *)(this + 104) = a2;
  return this;
}

void sub_1CB4C25DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  char v16;

  if (a15 < 0)
    operator delete(__p);
  if ((v16 & 1) != 0)
    __cxa_free_exception(v15);
  _Unwind_Resume(exception_object);
}

UText *morphun::analysis::Analyzer::initReader(morphun::analysis::Analyzer *this, UText *a2)
{
  return a2;
}

uint64_t morphun::analysis::filter::ContractionExpandingFilter::incrementToken(morphun::analysis::filter::ContractionExpandingFilter *this)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  const UChar *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char isAllLowerCase;
  int isAllUpperCase;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  const UChar *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  __int128 v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  morphun::exception::NullPointerException *exception;
  char *v33;
  __int128 v34;
  unint64_t v35;
  void *__p[2];
  unint64_t v37;

  if (*((_QWORD *)this + 33) != *((_QWORD *)this + 34))
  {
    v2 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
    std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v2 + *(_QWORD *)(*v2 - 96)), *((const std::basic_string<char16_t> **)this + 33));
    v3 = *((_QWORD *)this + 33);
    v4 = *((_QWORD *)this + 34);
    v5 = v3 + 24;
    if (v3 + 24 != v4)
    {
      do
      {
        if (*(char *)(v3 + 23) < 0)
          operator delete(*(void **)v3);
        *(_OWORD *)v3 = *(_OWORD *)(v3 + 24);
        *(_QWORD *)(v3 + 16) = *(_QWORD *)(v3 + 40);
        *(_BYTE *)(v3 + 47) = 0;
        v6 = v3 + 48;
        *(_WORD *)(v3 + 24) = 0;
        v3 += 24;
      }
      while (v6 != v4);
      v5 = *((_QWORD *)this + 34);
    }
    if (v5 == v3)
      goto LABEL_12;
    do
    {
      if (*(char *)(v5 - 1) < 0)
        operator delete(*(void **)(v5 - 24));
      v5 -= 24;
    }
    while (v5 != v3);
LABEL_11:
    v5 = v3;
LABEL_12:
    *((_QWORD *)this + 34) = v5;
    return 1;
  }
  v8 = *((_QWORD *)this + 12);
  if (!v8)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 24))(v8);
  if ((_DWORD)result)
  {
    v9 = (_QWORD *)*((_QWORD *)this + 13);
    npc<morphun::analysis::tokenattributes::CharTermAttribute>((uint64_t)v9);
    v10 = (const UChar *)((char *)v9 + *(_QWORD *)(*v9 - 96));
    if (*((char *)v10 + 23) < 0)
    {
      v10 = *(const UChar **)v10;
      v11 = *(_QWORD *)((char *)v9 + *(_QWORD *)(*v9 - 96) + 8);
    }
    else
    {
      LODWORD(v11) = *((unsigned __int8 *)v10 + 23);
    }
    __p[0] = 0;
    __p[1] = 0;
    v37 = 0;
    if (!*((_QWORD *)this + 16))
      return 1;
    v12 = morphun::analysis::filter::LanguageExpansion::expandWithWorkspace((uint64_t)this + 112, v10, v11, (uint64_t)__p);
    if (SHIBYTE(v37) < 0)
      operator delete(__p[0]);
    if (!v12)
      return 1;
    v13 = (uint64_t)v9 + *(_QWORD *)(*v9 - 96);
    if (*(char *)(v13 + 23) < 0)
    {
      v13 = *(_QWORD *)v13;
      v14 = *(_QWORD *)((char *)v9 + *(_QWORD *)(*v9 - 96) + 8);
    }
    else
    {
      v14 = *(unsigned __int8 *)(v13 + 23);
    }
    isAllLowerCase = morphun::util::StringViewUtils::isAllLowerCase(v13, v14);
    if ((isAllLowerCase & 1) != 0)
    {
      isAllUpperCase = 0;
    }
    else
    {
      v17 = (uint64_t)v9 + *(_QWORD *)(*v9 - 96);
      if (*(char *)(v17 + 23) < 0)
      {
        v17 = *(_QWORD *)v17;
        v18 = *(_QWORD *)((char *)v9 + *(_QWORD *)(*v9 - 96) + 8);
      }
      else
      {
        v18 = *(unsigned __int8 *)(v17 + 23);
      }
      isAllUpperCase = morphun::util::StringViewUtils::isAllUpperCase(v17, v18);
    }
    v19 = *v12;
    v20 = v12[1];
    if (*v12 == v20)
    {
LABEL_59:
      v29 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
      std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v29 + *(_QWORD *)(*v29 - 96)), *((const std::basic_string<char16_t> **)this + 33));
      v3 = *((_QWORD *)this + 33);
      v30 = *((_QWORD *)this + 34);
      v5 = v3 + 24;
      if (v3 + 24 != v30)
      {
        do
        {
          if (*(char *)(v3 + 23) < 0)
            operator delete(*(void **)v3);
          *(_OWORD *)v3 = *(_OWORD *)(v3 + 24);
          *(_QWORD *)(v3 + 16) = *(_QWORD *)(v3 + 40);
          *(_BYTE *)(v3 + 47) = 0;
          v31 = v3 + 48;
          *(_WORD *)(v3 + 24) = 0;
          v3 += 24;
        }
        while (v31 != v30);
        v5 = *((_QWORD *)this + 34);
      }
      if (v5 == v3)
        goto LABEL_12;
      do
      {
        if (*(char *)(v5 - 1) < 0)
          operator delete(*(void **)(v5 - 24));
        v5 -= 24;
      }
      while (v5 != v3);
      goto LABEL_11;
    }
    v33 = (char *)this + 288;
    while (1)
    {
      v21 = *(_QWORD *)(v19 + 8);
      if (v21 >= 0x7FFFFFFFFFFFFFF8)
        std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
      v22 = *(const UChar **)v19;
      if (v21 >= 0xB)
      {
        v24 = (v21 & 0xFFFFFFFFFFFFFFFCLL) + 4;
        if ((v21 | 3) != 0xB)
          v24 = v21 | 3;
        v23 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v24 + 1);
        __p[1] = (void *)v21;
        v37 = v25 | 0x8000000000000000;
        __p[0] = v23;
      }
      else
      {
        HIBYTE(v37) = *(_QWORD *)(v19 + 8);
        v23 = __p;
        if (!v21)
          goto LABEL_43;
      }
      memmove(v23, v22, 2 * v21);
LABEL_43:
      *((_WORD *)v23 + v21) = 0;
      if ((isAllLowerCase & 1) == 0)
      {
        if (isAllUpperCase)
        {
          morphun::util::StringViewUtils::uppercase((uint64_t)__p, *(const UChar **)v19, *(_QWORD *)(v19 + 8), (uint64_t)v33);
        }
        else if (*((_QWORD *)this + 33) == *((_QWORD *)this + 34))
        {
          morphun::util::StringViewUtils::capitalizeFirst(*(UChar **)v19, *(_QWORD *)(v19 + 8), (uint64_t)v33, (uint64_t)&v34);
          if (SHIBYTE(v37) < 0)
            operator delete(__p[0]);
          *(_OWORD *)__p = v34;
          v37 = v35;
        }
      }
      v26 = *((_QWORD *)this + 34);
      if (v26 >= *((_QWORD *)this + 35))
      {
        v28 = std::vector<std::basic_string<char16_t>>::__push_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)this + 33, (__int128 *)__p);
      }
      else
      {
        if (SHIBYTE(v37) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(*((std::basic_string<char16_t> **)this + 34), (const std::basic_string<char16_t>::value_type *)__p[0], (std::basic_string<char16_t>::size_type)__p[1]);
        }
        else
        {
          v27 = *(_OWORD *)__p;
          *(_QWORD *)(v26 + 16) = v37;
          *(_OWORD *)v26 = v27;
        }
        v28 = v26 + 24;
        *((_QWORD *)this + 34) = v26 + 24;
      }
      *((_QWORD *)this + 34) = v28;
      if (SHIBYTE(v37) < 0)
        operator delete(__p[0]);
      v19 += 16;
      if (v19 == v20)
        goto LABEL_59;
    }
  }
  return result;
}

void sub_1CB4C29DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t morphun::analysis::tokenizer::StreamingTokenizer::incrementToken(morphun::analysis::tokenizer::StreamingTokenizer *this)
{
  uint64_t (*v1)(_QWORD *);
  uint64_t v2;
  _QWORD *v3;

  v1 = (uint64_t (*)(_QWORD *))*((_QWORD *)this + 66);
  v2 = *((_QWORD *)this + 67);
  v3 = (_QWORD *)((char *)this + (v2 >> 1));
  if ((v2 & 1) != 0)
    v1 = *(uint64_t (**)(_QWORD *))(*v3 + v1);
  return v1(v3);
}

BOOL morphun::analysis::tokenizer::StreamingTokenizer::incrementTokenizer(morphun::analysis::tokenizer::StreamingTokenizer *this)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  int NextBoundary;
  int v12;
  unint64_t v13;
  char *v14;
  unint64_t v15;
  BOOL v16;
  std::basic_string<char16_t>::size_type v17;
  std::basic_string<char16_t>::size_type v18;
  unsigned __int16 *v19;
  unint64_t v20;
  unint64_t v21;
  int *v22;
  _DWORD *v23;
  int *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  int *v30;
  int v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;

  v2 = *((_QWORD *)this + 63);
  if (v2)
  {
    v3 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 72))(v2);
    if (*v3 == v3[1]
      || (v4 = npc<morphun::analysis::tokenattributes::SkippedOffsetsAttribute>(*((_QWORD *)this + 63)),
          v5 = *(_DWORD *)(*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 72))(v4) + 8) - 4),
          v6 = npc<morphun::analysis::tokenattributes::OffsetAttribute>(*((_QWORD *)this + 62)),
          v5 != (*(unsigned int (**)(uint64_t))(*(_QWORD *)v6 + 72))(v6)))
    {
      v9 = *((_QWORD *)this + 57);
      if (v9 != *((_QWORD *)this + 58))
        *((_QWORD *)this + 58) = v9;
      *((_DWORD *)this + 120) = *((_DWORD *)this + 137);
    }
    else
    {
      v7 = npc<morphun::analysis::tokenattributes::SkippedOffsetsAttribute>(*((_QWORD *)this + 63));
      v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 72))(v7);
      if ((morphun::analysis::tokenizer::StreamingTokenizer *)((char *)this + 456) != (morphun::analysis::tokenizer::StreamingTokenizer *)v8)
        std::vector<int>::__assign_with_size[abi:ne180100]<int *,int *>((char *)this + 456, *(char **)v8, *(_QWORD *)(v8 + 8), (uint64_t)(*(_QWORD *)(v8 + 8) - *(_QWORD *)v8) >> 2);
    }
  }
  morphun::analysis::util::AttributeSource::clearAttributes(this);
  v10 = (void **)((char *)this + 456);
  while (1)
  {
    NextBoundary = morphun::tokenizer::NumberCleaverIterator::getNextBoundary((morphun::analysis::tokenizer::StreamingTokenizer *)((char *)this + 408));
    if (NextBoundary == -1)
    {
      v12 = -1;
      goto LABEL_47;
    }
    v12 = NextBoundary;
    if (*((char *)this + 143) < 0)
    {
      v14 = (char *)*((_QWORD *)this + 15);
      v13 = *((_QWORD *)this + 16);
    }
    else
    {
      v13 = *((unsigned __int8 *)this + 143);
      v14 = (char *)this + 120;
    }
    v15 = *((int *)this + 137);
    v16 = v13 >= v15;
    v17 = v13 - v15;
    if (!v16)
      std::__throw_out_of_range[abi:ne180100]("string_view::substr");
    v18 = NextBoundary - v15;
    v19 = (unsigned __int16 *)&v14[2 * v15];
    v20 = v17 >= v18 ? NextBoundary - v15 : v17;
    if (!*((_BYTE *)this + 485) || morphun::tokenizer::TokenUtil::isSignificant(v19, v20))
      break;
    if (*((_QWORD *)this + 63))
    {
      v22 = (int *)*((_QWORD *)this + 58);
      v21 = *((_QWORD *)this + 59);
      if ((unint64_t)v22 >= v21)
      {
        v24 = (int *)*v10;
        v25 = ((char *)v22 - (_BYTE *)*v10) >> 2;
        v26 = v25 + 1;
        if ((unint64_t)(v25 + 1) >> 62)
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        v27 = v21 - (_QWORD)v24;
        if (v27 >> 1 > v26)
          v26 = v27 >> 1;
        if ((unint64_t)v27 >= 0x7FFFFFFFFFFFFFFCLL)
          v28 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v28 = v26;
        if (v28)
        {
          v28 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(v28);
          v24 = (int *)*((_QWORD *)this + 57);
          v22 = (int *)*((_QWORD *)this + 58);
        }
        else
        {
          v29 = 0;
        }
        v30 = (int *)(v28 + 4 * v25);
        *v30 = v12;
        v23 = v30 + 1;
        while (v22 != v24)
        {
          v31 = *--v22;
          *--v30 = v31;
        }
        *((_QWORD *)this + 57) = v30;
        *((_QWORD *)this + 58) = v23;
        *((_QWORD *)this + 59) = v28 + 4 * v29;
        if (v24)
          operator delete(v24);
      }
      else
      {
        *v22 = v12;
        v23 = v22 + 1;
      }
      *((_QWORD *)this + 58) = v23;
    }
    *((_DWORD *)this + 137) = v12;
  }
  v32 = (_QWORD *)*((_QWORD *)this + 61);
  if (*((_BYTE *)this + 484))
  {
    if (v32)
      v32 = (_QWORD *)((char *)v32 + *(_QWORD *)(*v32 - 96));
    morphun::util::StringViewUtils::lowercase((uint64_t)v32, v19, v20, *((_QWORD *)this + 14));
  }
  else
  {
    v33 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>((uint64_t)v32);
    std::basic_string<char16_t>::assign((std::basic_string<char16_t> *)((char *)v33 + *(_QWORD *)(*v33 - 96)), (const std::basic_string<char16_t> *)this + 5, *((int *)this + 137), v18);
  }
  v34 = npc<morphun::analysis::tokenattributes::OffsetAttribute>(*((_QWORD *)this + 62));
  v35 = *((_DWORD *)this + 136);
  v36 = (v35 + *((_DWORD *)this + 137));
  *((_DWORD *)this + 138) = v35 + v12;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v34 + 64))(v34, v36);
LABEL_47:
  *((_DWORD *)this + 137) = v12;
  v37 = *((_QWORD *)this + 63);
  if (v37 && *((_QWORD *)this + 57) != *((_QWORD *)this + 58))
    (*(void (**)(uint64_t, _QWORD, char *))(*(_QWORD *)v37 + 56))(v37, *((unsigned int *)this + 120), (char *)this + 456);
  return v12 != -1;
}

uint64_t morphun::analysis::util::AttributeSource::clearAttributes(morphun::analysis::util::AttributeSource *this)
{
  uint64_t result;
  _QWORD *v3;
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  BOOL v9;

  v3 = (_QWORD *)((char *)this + 72);
  result = *((_QWORD *)this + 9);
  if (result)
  {
    do
    {
      v4 = *(_QWORD *)(result + 16);
      MEMORY[0x1D179D2EC]();
      result = v4;
    }
    while (v4);
  }
  *v3 = 0;
  v3[1] = 0;
  v5 = (char *)*((_QWORD *)this + 6);
  v6 = (char *)this + 56;
  if (v5 != v6)
  {
    do
    {
      result = (*(uint64_t (**)(_QWORD))(**((_QWORD **)v5 + 4) + 56))(*((_QWORD *)v5 + 4));
      v7 = (char *)*((_QWORD *)v5 + 1);
      if (v7)
      {
        do
        {
          v8 = v7;
          v7 = *(char **)v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          v8 = (char *)*((_QWORD *)v5 + 2);
          v9 = *(_QWORD *)v8 == (_QWORD)v5;
          v5 = v8;
        }
        while (!v9);
      }
      v5 = v8;
    }
    while (v8 != v6);
  }
  return result;
}

void morphun::analysis::tokenattributes::PackedTokenAttributeImpl::clear(std::vector<int> *this, std::vector<int>::size_type a2)
{
  char *v3;
  int *begin;
  std::vector<int> *v5;

  v3 = (char *)this + *((_QWORD *)this->__begin_ - 13);
  if (v3[23] < 0)
  {
    **(_WORD **)v3 = 0;
    *((_QWORD *)v3 + 1) = 0;
  }
  else
  {
    *(_WORD *)v3 = 0;
    v3[23] = 0;
  }
  v5 = this + 1;
  begin = this[1].__begin_;
  this->__end_ = 0;
  LODWORD(this->__end_cap_.__value_) = 0;
  if ((int *)((char *)this[1].__end_cap_.__value_ - (char *)begin) >= (int *)0x41)
  {
    std::vector<int>::resize(this + 1, a2);
    std::vector<int>::shrink_to_fit(this + 1);
    begin = v5->__begin_;
  }
  this[1].__end_ = begin;
}

uint64_t morphun::tokenizer::NumberCleaverIterator::getNextBoundary(morphun::tokenizer::NumberCleaverIterator *this)
{
  int *v2;
  int *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  UChar32 v7;
  int v8;
  BOOL v9;
  int v10;
  int v11;
  uint64_t v12;
  UChar32 v13;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  UChar32 v23;
  uint64_t v24;
  int v25;
  BOOL v26;
  int v27;
  int v28;
  uint64_t v29;
  UChar32 v30;
  uint64_t v31;
  int v32;
  BOOL v33;
  int v34;
  int v35;
  int v36;
  uint64_t v37;
  UChar32 v38;
  uint64_t v39;
  int v40;
  BOOL v41;
  int v42;
  int v43;
  UChar32 v44;

  v2 = (int *)((char *)this + 36);
  if (*((_DWORD *)this + 9) != -1)
  {
    *((_DWORD *)this + 9) = -1;
    v3 = (int *)((char *)this + 40);
    return *v3;
  }
  v3 = (int *)((char *)this + 40);
  *((_DWORD *)this + 8) = *((_DWORD *)this + 10);
  v4 = (*(uint64_t (**)(_QWORD))(**((_QWORD **)this + 3) + 24))(*((_QWORD *)this + 3));
  *v3 = v4;
  v5 = *((int *)this + 8);
  if (v4 - (int)v5 >= 2)
  {
    v6 = *((_QWORD *)this + 1);
    v7 = *(unsigned __int16 *)(v6 + 2 * v5);
    v8 = v5 + 1;
    v9 = (v7 & 0xFC00) != 0xD800 || v8 == v4;
    if (!v9)
    {
      v10 = *(unsigned __int16 *)(v6 + 2 * v8);
      v9 = (v10 & 0xFC00) == 56320;
      v11 = v10 + (v7 << 10) - 56613888;
      if (v9)
        v7 = v11;
    }
    v12 = v4 - 1;
    v13 = *(unsigned __int16 *)(v6 + 2 * v12);
    if ((int)v12 > (int)v5 && (v13 & 0xFC00) == 56320)
    {
      v15 = *(unsigned __int16 *)(v6 + 2 * v4 - 4);
      v9 = (v15 & 0xFC00) == 55296;
      v16 = v13 + (v15 << 10) - 56613888;
      if (v9)
        v13 = v16;
    }
    v17 = u_isdigit(v7);
    if (v17 != u_isdigit(v13))
    {
      v18 = u_isalpha(v7);
      if (v18 != u_isalpha(v13))
      {
        v19 = *((_DWORD *)this + 8);
        *((_DWORD *)this + 9) = v19;
        v20 = *((_DWORD *)this + 10);
        if (v17)
        {
          if (v19 < v20)
          {
            v21 = v19;
            while (1)
            {
              v22 = *((_QWORD *)this + 1);
              v23 = *(unsigned __int16 *)(v22 + 2 * v21);
              if ((v23 & 0xF800) == 0xD800)
              {
                if ((v23 & 0x400) != 0)
                {
                  if (v21 > *((_DWORD *)this + 8))
                  {
                    v28 = *(unsigned __int16 *)(v22 + 2 * v21 - 2);
                    v26 = (v28 & 0xFC00) == 55296;
                    v27 = v23 - 56613888 + (v28 << 10);
LABEL_30:
                    if (v26)
                      v23 = v27;
                  }
                }
                else
                {
                  v24 = v21 + 1;
                  if ((_DWORD)v24 != v20)
                  {
                    v25 = *(unsigned __int16 *)(v22 + 2 * v24);
                    v26 = (v25 & 0xFC00) == 56320;
                    v27 = (v23 << 10) - 56613888 + v25;
                    goto LABEL_30;
                  }
                }
              }
              if (u_ispunct(v23) || u_isdigit(v23))
              {
                v21 = *v2 + 1;
                *v2 = v21;
                v20 = *v3;
                if (v21 < *v3)
                  continue;
              }
              break;
            }
          }
LABEL_49:
          v36 = *((_DWORD *)this + 9) - (v17 != 0);
          v37 = *((_QWORD *)this + 1);
          v38 = *(unsigned __int16 *)(v37 + 2 * v36);
          if ((v38 & 0xF800) == 0xD800)
          {
            if ((v38 & 0x400) != 0)
            {
              if (v36 > *((_DWORD *)this + 8))
              {
                v43 = *(unsigned __int16 *)(v37 + 2 * v36 - 2);
                v41 = (v43 & 0xFC00) == 55296;
                v42 = v38 + (v43 << 10);
LABEL_55:
                v44 = v42 - 56613888;
                if (v41)
                  v38 = v44;
              }
            }
            else
            {
              v39 = v36 + 1;
              if ((_DWORD)v39 != *v3)
              {
                v40 = *(unsigned __int16 *)(v37 + 2 * v39);
                v41 = (v40 & 0xFC00) == 56320;
                v42 = v40 + (v38 << 10);
                goto LABEL_55;
              }
            }
          }
          if (u_ispunct(v38))
            *v2 = -1;
          else
            v3 = v2;
          return *v3;
        }
        if (v19 >= v20)
          goto LABEL_49;
        while (1)
        {
          v29 = *((_QWORD *)this + 1);
          v30 = *(unsigned __int16 *)(v29 + 2 * v19);
          if ((v30 & 0xF800) == 0xD800)
          {
            if ((v30 & 0x400) != 0)
            {
              if (v19 > *((_DWORD *)this + 8))
              {
                v35 = *(unsigned __int16 *)(v29 + 2 * v19 - 2);
                v33 = (v35 & 0xFC00) == 55296;
                v34 = v30 - 56613888 + (v35 << 10);
LABEL_44:
                if (v33)
                  v30 = v34;
              }
            }
            else
            {
              v31 = v19 + 1;
              if ((_DWORD)v31 != v20)
              {
                v32 = *(unsigned __int16 *)(v29 + 2 * v31);
                v33 = (v32 & 0xFC00) == 56320;
                v34 = (v30 << 10) - 56613888 + v32;
                goto LABEL_44;
              }
            }
          }
          if (u_isalpha(v30))
          {
            v19 = *v2 + 1;
            *v2 = v19;
            v20 = *v3;
            if (v19 < *v3)
              continue;
          }
          goto LABEL_49;
        }
      }
    }
  }
  return *v3;
}

uint64_t morphun::tokenizer::ICUTokenExtractorIterator::getNextBoundary(morphun::tokenizer::ICUTokenExtractorIterator *this)
{
  return ubrk_next();
}

uint64_t `virtual thunk to'morphun::analysis::tokenattributes::PackedTokenAttributeImpl::endSkippedOffsets(morphun::analysis::tokenattributes::PackedTokenAttributeImpl *this)
{
  return (uint64_t)this + *(_QWORD *)(*(_QWORD *)this - 112) + 24;
}

std::basic_string<char16_t> *__cdecl std::basic_string<char16_t>::assign(std::basic_string<char16_t> *this, const std::basic_string<char16_t> *__str, std::basic_string<char16_t>::size_type __pos, std::basic_string<char16_t>::size_type __n)
{
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t>::size_type v5;

  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
  {
    size = __str->__r_.__value_.__l.__size_;
    if (size < __pos)
      goto LABEL_9;
    __str = (const std::basic_string<char16_t> *)__str->__r_.__value_.__r.__words[0];
  }
  else
  {
    size = HIBYTE(__str->__r_.__value_.__r.__words[2]);
    if (size < __pos)
LABEL_9:
      std::basic_string<char16_t>::__throw_out_of_range[abi:ne180100]();
  }
  v5 = size - __pos;
  if (v5 >= __n)
    v5 = __n;
  return std::basic_string<char16_t>::__assign_external(this, (const std::basic_string<char16_t>::value_type *)__str + __pos, v5);
}

std::basic_string<char16_t> *__cdecl std::basic_string<char16_t>::__assign_external(std::basic_string<char16_t> *this, const std::basic_string<char16_t>::value_type *__s, std::basic_string<char16_t>::size_type __n)
{
  unint64_t v6;
  std::basic_string<char16_t> *v7;
  std::basic_string<char16_t>::size_type size;
  unint64_t v9;
  unint64_t v10;

  LODWORD(v6) = SHIBYTE(this->__r_.__value_.__r.__words[2]);
  if ((v6 & 0x80000000) != 0)
  {
    v10 = this->__r_.__value_.__r.__words[2];
    v9 = (v10 & 0x7FFFFFFFFFFFFFFFLL) - 1;
    if (v9 < __n)
    {
      size = this->__r_.__value_.__l.__size_;
      goto LABEL_6;
    }
    v6 = HIBYTE(v10);
    v7 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
  }
  else
  {
    v7 = this;
    if (__n > 0xA)
    {
      size = HIBYTE(this->__r_.__value_.__r.__words[2]);
      v9 = 10;
LABEL_6:
      std::basic_string<char16_t>::__grow_by_and_replace(this, v9, __n - v9, size, 0, size, __n, __s);
      return this;
    }
  }
  if (__n)
  {
    memmove(v7, __s, 2 * __n);
    LOBYTE(v6) = *((_BYTE *)&this->__r_.__value_.__s + 23);
  }
  if ((v6 & 0x80) != 0)
    this->__r_.__value_.__l.__size_ = __n;
  else
    *((_BYTE *)&this->__r_.__value_.__s + 23) = __n & 0x7F;
  v7->__r_.__value_.__s.__data_[__n] = 0;
  return this;
}

uint64_t morphun::analysis::tokenizer::StreamingTokenizer::end(morphun::analysis::tokenizer::StreamingTokenizer *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v2 = *((_QWORD *)this + 63);
  if (v2 && *((_QWORD *)this + 57) != *((_QWORD *)this + 58))
  {
    v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 72))(v2);
    if ((morphun::analysis::tokenizer::StreamingTokenizer *)((char *)this + 456) != (morphun::analysis::tokenizer::StreamingTokenizer *)v3)
      std::vector<int>::__assign_with_size[abi:ne180100]<int *,int *>((char *)this + 456, *(char **)v3, *(_QWORD *)(v3 + 8), (uint64_t)(*(_QWORD *)(v3 + 8) - *(_QWORD *)v3) >> 2);
    v4 = npc<morphun::analysis::tokenattributes::SkippedOffsetsAttribute>(*((_QWORD *)this + 63));
    *((_DWORD *)this + 120) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 64))(v4);
  }
  morphun::analysis::util::AttributeSource::clearAttributes(this);
  v5 = npc<morphun::analysis::tokenattributes::OffsetAttribute>(*((_QWORD *)this + 62));
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)v5 + 64))(v5, *((unsigned int *)this + 138), *((unsigned int *)this + 138));
  result = *((_QWORD *)this + 63);
  if (result)
  {
    if (*((_QWORD *)this + 57) != *((_QWORD *)this + 58))
      return (*(uint64_t (**)(uint64_t, _QWORD, char *))(*(_QWORD *)result + 56))(result, *((unsigned int *)this + 120), (char *)this + 456);
  }
  return result;
}

uint64_t `virtual thunk to'morphun::analysis::tokenattributes::PackedTokenAttributeImpl::setOffset(morphun::analysis::tokenattributes::PackedTokenAttributeImpl *this, int a2, int a3)
{
  return morphun::analysis::tokenattributes::PackedTokenAttributeImpl::setOffset((uint64_t)this + *(_QWORD *)(*(_QWORD *)this - 104), a2, a3);
}

uint64_t morphun::analysis::tokenattributes::PackedTokenAttributeImpl::setOffset(uint64_t this, int a2, int a3)
{
  _QWORD *exception;
  std::basic_string<char16_t>::size_type v6;
  std::basic_string<char16_t> *v7;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t> v9;
  std::basic_string<char16_t> v10;
  std::basic_string<char16_t> v11;
  std::basic_string<char16_t> v12;
  std::basic_string<char16_t> v13;

  if (a2 < 0 || a3 < a2)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)a2, &v10);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v11, L"startOffset must be non-negative, and endOffset must be >= startOffset, startOffset=", &v10, v6);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v12, &v11, (std::basic_string<char16_t>::value_type *)",");
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)a3, &v9);
    if ((v9.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v7 = &v9;
    else
      v7 = (std::basic_string<char16_t> *)v9.__r_.__value_.__r.__words[0];
    if ((v9.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v9.__r_.__value_.__r.__words[2]);
    else
      size = v9.__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::append(&v12, (const std::basic_string<char16_t>::value_type *)v7, size);
    v13 = v12;
    memset(&v12, 0, sizeof(v12));
    morphun::exception::Throwable::Throwable((uint64_t)exception, (__int128 *)&v13);
    *exception = &off_1E8673120;
  }
  *(_DWORD *)(this + 8) = a2;
  *(_DWORD *)(this + 12) = a3;
  return this;
}

void sub_1CB4C3498(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  void *v29;
  void *v30;
  int v31;
  int v32;
  uint64_t v33;

  if (*(char *)(v33 - 57) < 0)
    operator delete(*(void **)(v33 - 80));
  if (v32 < 0)
    operator delete(v30);
  if (a29 < 0)
    operator delete(__p);
  if (a23 < 0)
    operator delete(a18);
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v31 & 1) == 0)
LABEL_14:
      _Unwind_Resume(a1);
  }
  else if (!v31)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v29);
  goto LABEL_14;
}

uint64_t morphun::analysis::filter::AmpersandToAndFilter::incrementToken(morphun::analysis::filter::AmpersandToAndFilter *this)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  _QWORD *v9;
  morphun::exception::NullPointerException *exception;

  v2 = *((_QWORD *)this + 12);
  if (!v2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  if ((_DWORD)v3)
  {
    v4 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
    v5 = (char *)v4 + *(_QWORD *)(*v4 - 96);
    v6 = v5[23] < 0 ? *((_QWORD *)v5 + 1) : v5[23];
    if (v6 == 1)
    {
      v7 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
      v8 = (char *)v7 + *(_QWORD *)(*v7 - 96);
      if (v8[23] < 0)
        v8 = *(char **)v8;
      if (*(_WORD *)v8 == 38)
      {
        v9 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
        std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v9 + *(_QWORD *)(*v9 - 96)), (const std::basic_string<char16_t> *)((char *)this + 112));
      }
    }
  }
  return v3;
}

void sub_1CB4C3624(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::stemmer::StemmableDictionaryLookupLemmaFilter::incrementToken(morphun::analysis::stemmer::StemmableDictionaryLookupLemmaFilter *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unsigned __int8 *v6;
  uint64_t v7;
  const UChar *v8;
  unint64_t v9;
  _QWORD *v10;
  std::basic_string<char16_t> *v11;
  char *v12;
  int v13;
  unsigned __int8 *v14;
  uint64_t v15;
  int v16;
  int isAllUpperCase;
  int v18;
  void **p_dst;
  uint64_t v20;
  uint64_t v21;
  const UChar *v22;
  uint64_t v23;
  void **v24;
  std::basic_string<char16_t>::size_type v25;
  std::basic_string<char16_t> *p_p;
  int32_t v27;
  int v28;
  _QWORD *v29;
  const UChar *v30;
  uint64_t v31;
  uint64_t v32;
  morphun::exception::NullPointerException *exception;
  std::basic_string<char16_t> v35;
  char v36;
  uint64_t v37;
  std::basic_string<char16_t> v38;
  std::basic_string<char16_t> __p;
  char v40;
  void **__dst;
  unint64_t v42;
  int64_t v43;
  uint64_t v44;

  v2 = *((_QWORD *)this + 12);
  if (!v2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
    goto LABEL_71;
  }
  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  if ((_DWORD)v3)
  {
    v4 = *((_QWORD *)this + 14);
    if (!v4 || ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 56))(v4) & 1) == 0)
    {
      v5 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
      v6 = (unsigned __int8 *)v5 + *(_QWORD *)(*v5 - 96);
      if ((char)v6[23] < 0)
      {
        if (*((_DWORD *)this + 96) > *((_DWORD *)v6 + 2))
          goto LABEL_62;
        v37 = 0;
        v8 = *(const UChar **)v6;
        v7 = *((_QWORD *)v6 + 1);
      }
      else
      {
        v7 = v6[23];
        if (*((_DWORD *)this + 96) > (int)v7)
          goto LABEL_62;
        v37 = 0;
        v8 = (const UChar *)v6;
      }
      if (!morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*((_QWORD *)this + 45), (uint64_t)&v37, v8, v7))
      {
        v10 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
        v11 = (std::basic_string<char16_t> *)((char *)v10 + *(_QWORD *)(*v10 - 96));
        v12 = (char *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
        v13 = (*(uint64_t (**)(morphun::analysis::stemmer::StemmableDictionaryLookupLemmaFilter *, char *))(*(_QWORD *)this + 56))(this, &v12[*(_QWORD *)(*(_QWORD *)v12 - 96)]);
        std::basic_string<char16_t>::resize(v11, v13, 0);
        goto LABEL_62;
      }
      if ((char)v6[23] < 0)
      {
        v14 = v6;
        v6 = *(unsigned __int8 **)v6;
        v9 = *((_QWORD *)v14 + 1);
      }
      else
      {
        v9 = v6[23];
      }
      v15 = v37;
      v44 = v37;
      if ((*((_QWORD *)this + 46) & v37) != 0 || (*((_QWORD *)this + 47) & v37) == 0)
      {
        if (!*((_QWORD *)this + 16))
        {
          LOBYTE(v35.__r_.__value_.__l.__data_) = 0;
          v36 = 0;
          goto LABEL_62;
        }
        v16 = 0;
      }
      else
      {
        v16 = 1;
      }
      isAllUpperCase = morphun::util::StringViewUtils::isAllUpperCase((uint64_t)v6, v9);
      if (v9 >= 0x7FFFFFFFFFFFFFF8)
        std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
      v18 = isAllUpperCase;
      if (v9 >= 0xB)
      {
        v20 = (v9 & 0xFFFFFFFFFFFFFFFCLL) + 4;
        if ((v9 | 3) != 0xB)
          v20 = v9 | 3;
        p_dst = (void **)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v20 + 1);
        v42 = v9;
        v43 = v21 | 0x8000000000000000;
        __dst = p_dst;
      }
      else
      {
        HIBYTE(v43) = v9;
        p_dst = (void **)&__dst;
        if (!v9)
          goto LABEL_28;
      }
      memmove(p_dst, v6, 2 * v9);
LABEL_28:
      *((_WORD *)p_dst + v9) = 0;
      if (v18)
      {
        morphun::util::StringViewUtils::lowercase((uint64_t)&__dst, (const UChar *)v6, v9, (uint64_t)this + 392);
        if (v43 >= 0)
          v22 = (const UChar *)&__dst;
        else
          v22 = (const UChar *)__dst;
        if (v43 >= 0)
          v23 = HIBYTE(v43);
        else
          v23 = v42;
        morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*((_QWORD *)this + 45), (uint64_t)&v44, v22, v23);
        v15 = v44;
      }
      if (v43 >= 0)
        v24 = (void **)&__dst;
      else
        v24 = __dst;
      if (v43 >= 0)
        v25 = HIBYTE(v43);
      else
        v25 = v42;
      morphun::analysis::MorphologicalAnalyzerUtil::analyze_word((uint64_t)&__p, (uint64_t)v24, v25, v15, *((_QWORD *)this + 16), (uint64_t *)this + 17, v16);
      if (v40)
      {
        if (v18)
        {
          memset(&v38, 0, sizeof(v38));
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            p_p = &__p;
          else
            p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v27 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          else
            v27 = __p.__r_.__value_.__r.__words[1];
          morphun::util::StringViewUtils::uppercase((uint64_t)&v38, (const UChar *)p_p, v27, (uint64_t)this + 392);
          v35 = v38;
          v28 = 1;
          v36 = 1;
          if (v40 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
        }
        else
        {
          v35 = __p;
          memset(&__p, 0, sizeof(__p));
          v28 = 1;
          v36 = 1;
        }
      }
      else
      {
        v28 = 0;
        LOBYTE(v35.__r_.__value_.__l.__data_) = 0;
        v36 = 0;
      }
      if (SHIBYTE(v43) < 0)
        operator delete(__dst);
      if (v28)
      {
        v29 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
        std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v29 + *(_QWORD *)(*v29 - 96)), &v35);
        if (v36)
        {
          if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v35.__r_.__value_.__l.__data_);
        }
      }
LABEL_62:
      if (*((_QWORD *)this + 15))
      {
        __p.__r_.__value_.__r.__words[0] = 0;
        v30 = (const UChar *)(*((_QWORD *)this + 13) + *(_QWORD *)(**((_QWORD **)this + 13) - 96));
        if (*((char *)v30 + 23) < 0)
        {
          v30 = *(const UChar **)v30;
          v31 = *(_QWORD *)(*((_QWORD *)this + 13) + *(_QWORD *)(**((_QWORD **)this + 13) - 96) + 8);
        }
        else
        {
          v31 = *((unsigned __int8 *)v30 + 23);
        }
        if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*((_QWORD *)this + 45), (uint64_t)&__p, v30, v31))
        {
          v32 = *((_QWORD *)this + 15);
          if (v32)
          {
            (*(void (**)(uint64_t, std::basic_string<char16_t>::size_type))(*(_QWORD *)v32 + 64))(v32, __p.__r_.__value_.__r.__words[0]);
            return v3;
          }
          exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
          morphun::exception::NullPointerException::NullPointerException(exception);
LABEL_71:
        }
      }
    }
  }
  return v3;
}

void sub_1CB4C3A18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a22 < 0)
    operator delete(__p);
  if (a29 && a28 < 0)
    operator delete(a23);
  if (a35 < 0)
    operator delete(a30);
  _Unwind_Resume(exception_object);
}

void *morphun::analysis::filter::DiacriticFilter::reset(morphun::analysis::filter::DiacriticFilter *this)
{
  uint64_t v2;
  void *result;

  v2 = npc<morphun::analysis::TokenStream>(*((_QWORD *)this + 12));
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
  result = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::KeywordAttribute>((uint64_t)this);
  *((_QWORD *)this + 14) = result;
  return result;
}

uint64_t morphun::analysis::TokenFilter::reset(morphun::analysis::TokenFilter *this)
{
  uint64_t v1;

  v1 = npc<morphun::analysis::TokenStream>(*((_QWORD *)this + 12));
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 40))(v1);
}

uint64_t morphun::analysis::filter::SuffixFilter::incrementToken(morphun::analysis::filter::SuffixFilter *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int16 *v6;
  unsigned __int16 *v7;
  unint64_t v8;
  unsigned __int16 *v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  int v19;
  int v20;
  _QWORD *v22;
  morphun::exception::NullPointerException *exception;

  v2 = *((_QWORD *)this + 12);
  if (!v2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  if ((_DWORD)v3)
  {
    v4 = *((_QWORD *)this + 13);
    if (!v4 || ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 56))(v4) & 1) == 0)
    {
      v6 = (unsigned __int16 *)*((_QWORD *)this + 15);
      v7 = (unsigned __int16 *)*((_QWORD *)this + 16);
      while (v6 != v7)
      {
        if (*((char *)v6 + 23) < 0)
        {
          v9 = *(unsigned __int16 **)v6;
          v8 = *((_QWORD *)v6 + 1);
        }
        else
        {
          v8 = *((unsigned __int8 *)v6 + 23);
          v9 = v6;
        }
        v10 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 14));
        v11 = (char *)v10 + *(_QWORD *)(*v10 - 96);
        if (v11[23] < 0)
          v12 = *((_QWORD *)v11 + 1);
        else
          LODWORD(v12) = v11[23];
        if ((int)v12 > (int)v8)
        {
          v13 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 14));
          v14 = (char *)v13 + *(_QWORD *)(*v13 - 96);
          if (v14[23] < 0)
          {
            v14 = *(char **)v14;
            v15 = *(_QWORD *)((char *)v13 + *(_QWORD *)(*v13 - 96) + 8);
          }
          else
          {
            v15 = v14[23];
          }
          if (v15 >= v8)
          {
            if (!v8)
              goto LABEL_27;
            v16 = -(uint64_t)v8;
            v17 = &v14[2 * v15];
            do
            {
              v18 = *(unsigned __int16 *)&v17[2 * v16];
              v20 = *v9++;
              v19 = v20;
            }
            while (v20 == v18 && v16++ != -1);
            if (v19 == v18)
            {
LABEL_27:
              v22 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 14));
              std::basic_string<char16_t>::resize((std::basic_string<char16_t> *)((char *)v22 + *(_QWORD *)(*v22 - 96)), (int)v12 - (int)v8, 0);
            }
          }
        }
        v6 += 12;
      }
    }
  }
  return v3;
}

void sub_1CB4C3C64(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::CharTermAttribute>(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count_vtbl *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v9[2];

  v2 = std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::find<std::type_index>((_QWORD *)(a1 + 8), (uint64_t)"N7morphun8analysis15tokenattributes17CharTermAttributeE");
  if (v2)
  {
    v3 = (std::__shared_weak_count_vtbl *)v2[3];
    if (!v3)
      return 0;
  }
  if (v4)
  {
    v3 = (std::__shared_weak_count_vtbl *)v4;
    v9[0] = v4;
    v5 = (std::__shared_weak_count *)operator new();
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_1E8673B18;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = v3;
    v9[1] = (uint64_t)v5;
    morphun::analysis::util::AttributeSource::addAttributeImpl((_QWORD *)a1, v9);
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return 0;
}

void sub_1CB4C3D88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::shared_ptr<morphun::analysis::util::AttributeImpl>::~shared_ptr[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void *morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::KeywordAttribute>(uint64_t a1)
{
  _QWORD *v1;
  const void *v2;

  v1 = std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::find<std::type_index>((_QWORD *)(a1 + 8), (uint64_t)"N7morphun8analysis15tokenattributes16KeywordAttributeE");
  if (v1 && (v2 = (const void *)v1[3]) != 0)
  else
    return 0;
}

void *morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::SkippedOffsetsAttribute>(uint64_t a1)
{
  _QWORD *v1;
  const void *v2;

  v1 = std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::find<std::type_index>((_QWORD *)(a1 + 8), (uint64_t)"N7morphun8analysis15tokenattributes23SkippedOffsetsAttributeE");
  if (v1 && (v2 = (const void *)v1[3]) != 0)
  else
    return 0;
}

_QWORD *std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::find<std::type_index>(_QWORD *a1, uint64_t a2)
{
  unint64_t v3;
  unsigned __int8 *v4;
  uint64_t v5;
  unsigned int v6;
  int8x8_t v7;
  uint8x8_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;

  v3 = a2;
  if (a2 < 0)
  {
    v4 = (unsigned __int8 *)(a2 & 0x7FFFFFFFFFFFFFFFLL);
    v5 = 5381;
    do
    {
      v3 = v5;
      v6 = *v4++;
      v5 = (33 * v5) ^ v6;
    }
    while (v6);
  }
  v7 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v7)
    return 0;
  v8 = (uint8x8_t)vcnt_s8(v7);
  v8.i16[0] = vaddlv_u8(v8);
  v9 = v8.u32[0];
  if (v8.u32[0] > 1uLL)
  {
    v10 = v3;
    if (v3 >= *(_QWORD *)&v7)
      v10 = v3 % *(_QWORD *)&v7;
  }
  else
  {
    v10 = (*(_QWORD *)&v7 - 1) & v3;
  }
  v11 = *(_QWORD **)(*a1 + 8 * v10);
  if (!v11)
    return 0;
  v12 = (_QWORD *)*v11;
  if (*v11)
  {
    do
    {
      v13 = v12[1];
      if (v13 == v3)
      {
        if (std::type_info::operator==[abi:ne180100](*(_QWORD *)(v12[2] + 8), a2))
          return v12;
      }
      else
      {
        if (v9 > 1)
        {
          if (v13 >= *(_QWORD *)&v7)
            v13 %= *(_QWORD *)&v7;
        }
        else
        {
          v13 &= *(_QWORD *)&v7 - 1;
        }
        if (v13 != v10)
          return 0;
      }
      v12 = (_QWORD *)*v12;
    }
    while (v12);
  }
  return v12;
}

void *morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::OffsetAttribute>(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count_vtbl *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v9[2];

  v2 = std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::find<std::type_index>((_QWORD *)(a1 + 8), (uint64_t)"N7morphun8analysis15tokenattributes15OffsetAttributeE");
  if (v2)
  {
    v3 = (std::__shared_weak_count_vtbl *)v2[3];
    if (!v3)
      return 0;
  }
  if (v4)
  {
    v3 = (std::__shared_weak_count_vtbl *)v4;
    v9[0] = v4;
    v5 = (std::__shared_weak_count *)operator new();
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_1E8673B18;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = v3;
    v9[1] = (uint64_t)v5;
    morphun::analysis::util::AttributeSource::addAttributeImpl((_QWORD *)a1, v9);
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return 0;
}

void sub_1CB4C406C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::shared_ptr<morphun::analysis::util::AttributeImpl>::~shared_ptr[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::Analyzer_TokenStreamComponents::setReader(morphun::analysis::Analyzer_TokenStreamComponents *this, UText *a2)
{
  uint64_t v2;
  morphun::exception::NullPointerException *exception;

  v2 = *((_QWORD *)this + 1);
  if (!v2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return morphun::analysis::Tokenizer::setReader(v2, a2);
}

void sub_1CB4C40E0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

morphun::analysis::TokenStreamContainer *morphun::analysis::TokenStreamContainer::TokenStreamContainer(morphun::analysis::TokenStreamContainer *this, morphun::analysis::Analyzer *a2, morphun::analysis::Analyzer_TokenStreamComponents *a3)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_1E86566E0;
  npc<morphun::analysis::Analyzer>((uint64_t)a2);
  *((_QWORD *)this + 1) = a2;
  v6 = npc<morphun::analysis::Analyzer_TokenStreamComponents>((uint64_t)a3);
  *((_QWORD *)this + 2) = a3;
  v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a3 + 32))(v6);
  *((_QWORD *)this + 3) = npc<morphun::analysis::TokenStream>(v7);
  return this;
}

uint64_t morphun::analysis::Analyzer_TokenStreamComponents::getTokenStream(morphun::analysis::Analyzer_TokenStreamComponents *this)
{
  return *((_QWORD *)this + 2);
}

morphun::Token *morphun::analysis::ConfigurableAnalyzer::getWordOrDelimiterToken(uint64_t a1, void **a2, int a3, int a4, unsigned __int16 *a5, unint64_t a6)
{
  uint64_t v12;
  unsigned __int16 *v13;
  UChar32 v14;
  int isUWhiteSpace;
  _BOOL4 v16;
  BOOL v17;
  morphun::Token *v18;
  morphun::Token *v19;
  int v20;
  void *v21;
  unint64_t v22;
  uint64_t (**v23)(morphun::Token *__hidden);
  char isSignificant;

  if (a6)
  {
    v12 = 2 * a6 - 2;
    v13 = a5;
    do
    {
      v14 = *v13++;
      isUWhiteSpace = u_isUWhiteSpace(v14);
      v16 = isUWhiteSpace != 0;
      if (isUWhiteSpace)
        v17 = v12 == 0;
      else
        v17 = 1;
      v12 -= 2;
    }
    while (!v17);
  }
  else
  {
    v16 = 1;
  }
  v18 = (morphun::Token *)operator new();
  v19 = v18;
  v20 = *((char *)a2 + 23);
  if (v20 >= 0)
    v21 = a2;
  else
    v21 = *a2;
  if (v20 >= 0)
    v22 = *((unsigned __int8 *)a2 + 23);
  else
    v22 = (unint64_t)a2[1];
  if (v16)
  {
    *(_QWORD *)v18 = &off_1E8656C30;
    morphun::Token::Token(v18, (uint64_t *)&off_1E8667030, a3, a4, a5, a6, v21, v22, 0);
    v23 = &off_1E866A2D0;
  }
  else
  {
    isSignificant = morphun::tokenizer::TokenUtil::isSignificant((unsigned __int16 *)v21, v22);
    *(_QWORD *)v19 = &off_1E8656B58;
    morphun::Token::Token(v19, (uint64_t *)&off_1E8666FB0, a3, a4, a5, a6, v21, v22, isSignificant);
    v23 = &off_1E866A118;
  }
  *(_QWORD *)v19 = v23;
  if (a1)
  {
    *(_QWORD *)(a1 + 80) = v19;
    *((_QWORD *)v19 + 9) = a1;
  }
  return v19;
}

void sub_1CB4C42D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10B3C405B5873CALL);
  _Unwind_Resume(a1);
}

BOOL morphun::tokenizer::TokenUtil::isSignificant(unsigned __int16 *a1, unint64_t a2)
{
  uint64_t v3;
  unsigned __int8 v4;
  _QWORD *v5;
  _QWORD *v6;

  if (a2 > 1)
    return 1;
  if (!a2)
    return 0;
  v3 = *a1;
  if ((v4 & 1) == 0)
  {
    {
      v6 = (_QWORD *)operator new();
      icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v6);
      MEMORY[0x1D179D970](*v6);
      morphun::tokenizer::TokenUtil::SIGNIFICANT_CHARACTERS(void)::SIGNIFICANT_CHARACTERS_ = (uint64_t)v6;
    }
  }
  v5 = (_QWORD *)npc<icu4cxx::UnicodeSet const>(morphun::tokenizer::TokenUtil::SIGNIFICANT_CHARACTERS(void)::SIGNIFICANT_CHARACTERS_);
  return MEMORY[0x1D179D958](*v5, v3) != 0;
}

void sub_1CB4C43C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::TokenFilter::end(morphun::analysis::TokenFilter *this)
{
  uint64_t v1;

  v1 = npc<morphun::analysis::TokenStream>(*((_QWORD *)this + 12));
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 32))(v1);
}

uint64_t morphun::analysis::TokenFilter::close(morphun::analysis::TokenFilter *this)
{
  uint64_t v1;

  v1 = npc<morphun::analysis::TokenStream>(*((_QWORD *)this + 12));
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 48))(v1);
}

BOOL morphun::util::UnicodeSetUtils::containsSome(_QWORD *a1, uint64_t a2, int a3)
{
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v10;
  BOOL v11;
  unsigned int v12;

  LODWORD(v6) = 0;
  do
  {
    v7 = v6;
    if ((int)v6 >= a3)
      break;
    v6 = (int)v6 + 1;
    v8 = *(unsigned __int16 *)(a2 + 2 * v7);
    if ((v8 & 0xFC00) == 0xD800 && (_DWORD)v6 != a3)
    {
      v10 = *(unsigned __int16 *)(a2 + 2 * v6);
      v11 = (v10 & 0xFC00) == 56320;
      v12 = v10 + ((_DWORD)v8 << 10) - 56613888;
      if (v11)
        LODWORD(v6) = v7 + 2;
      if (v11)
        v8 = v12;
      else
        v8 = *(unsigned __int16 *)(a2 + 2 * v7);
    }
  }
  while (!MEMORY[0x1D179D958](*a1, v8));
  return v7 < a3;
}

uint64_t npc<morphun::analysis::Analyzer_TokenStreamComponents>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4C452C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *morphun::analysis::stemmer::StemmableDictionaryLookupLemmaFilter::reset(morphun::analysis::stemmer::StemmableDictionaryLookupLemmaFilter *this)
{
  uint64_t v2;
  void *result;

  v2 = npc<morphun::analysis::TokenStream>(*((_QWORD *)this + 12));
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
  *((_QWORD *)this + 14) = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::KeywordAttribute>((uint64_t)this);
  *((_QWORD *)this + 15) = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::GrammemeAttribute>((uint64_t)this);
  result = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::LemmaMappingAttribute>((uint64_t)this);
  *((_QWORD *)this + 16) = result;
  return result;
}

_QWORD *morphun::analysis::filter::LanguageExpansion::expandWithWorkspace(uint64_t a1, const UChar *a2, int32_t a3, uint64_t a4)
{
  unint64_t v6;
  char v7;
  unsigned __int16 *v8;
  unint64_t v9;
  unsigned __int16 *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  unsigned __int16 *v19;
  unsigned __int16 *v20;
  unsigned int v21;
  unsigned int v22;
  unint64_t v23;
  unint64_t v24;
  unsigned __int16 *v25;
  unsigned int v26;
  unsigned int v27;

  morphun::util::StringViewUtils::lowercase(a4, a2, a3, a1 + 24);
  v6 = *(unsigned __int8 *)(a4 + 23);
  v7 = v6;
  v8 = *(unsigned __int16 **)a4;
  v9 = *(_QWORD *)(a4 + 8);
  if ((v6 & 0x80u) == 0)
    v10 = (unsigned __int16 *)a4;
  else
    v10 = *(unsigned __int16 **)a4;
  if ((v6 & 0x80u) == 0)
    v11 = *(unsigned __int8 *)(a4 + 23);
  else
    v11 = *(_QWORD *)(a4 + 8);
  if (v11)
  {
    v12 = 2 * v11;
    do
    {
      if (*v10 == 8217)
        *v10 = 39;
      ++v10;
      v12 -= 2;
    }
    while (v12);
    v6 = *(unsigned __int8 *)(a4 + 23);
    v8 = *(unsigned __int16 **)a4;
    v9 = *(_QWORD *)(a4 + 8);
    v7 = *(_BYTE *)(a4 + 23);
  }
  if (v7 < 0)
    v6 = v9;
  else
    v8 = (unsigned __int16 *)a4;
  v15 = *(_QWORD **)(a1 + 8);
  v14 = (_QWORD *)(a1 + 8);
  v13 = v15;
  if (v15)
  {
    v16 = v14;
    do
    {
      v17 = v13[5];
      if (v6 >= v17)
        v18 = v13[5];
      else
        v18 = v6;
      if (v18)
      {
        v19 = (unsigned __int16 *)v13[4];
        v20 = v8;
        while (1)
        {
          v21 = *v19;
          v22 = *v20;
          if (v21 < v22)
          {
            ++v13;
            goto LABEL_31;
          }
          if (v22 < v21)
            break;
          ++v19;
          ++v20;
          if (!--v18)
            goto LABEL_26;
        }
        v16 = v13;
      }
      else
      {
LABEL_26:
        if (v17 < v6)
          ++v13;
        else
          v16 = v13;
      }
LABEL_31:
      v13 = (_QWORD *)*v13;
    }
    while (v13);
    if (v14 != v16)
    {
      v23 = v16[5];
      if (v23 >= v6)
        v24 = v6;
      else
        v24 = v16[5];
      if (v24)
      {
        v25 = (unsigned __int16 *)v16[4];
        while (1)
        {
          v26 = *v8;
          v27 = *v25;
          if (v26 < v27)
            break;
          if (v27 < v26)
            goto LABEL_43;
          ++v8;
          ++v25;
          if (!--v24)
            goto LABEL_41;
        }
      }
      else
      {
LABEL_41:
        if (v6 >= v23)
          goto LABEL_43;
      }
    }
  }
  v16 = v14;
LABEL_43:
  if (v14 == v16)
    return 0;
  else
    return v16 + 6;
}

void *morphun::analysis::filter::SuffixFilter::reset(morphun::analysis::filter::SuffixFilter *this)
{
  uint64_t v2;
  void *result;

  v2 = npc<morphun::analysis::TokenStream>(*((_QWORD *)this + 12));
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
  result = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::KeywordAttribute>((uint64_t)this);
  *((_QWORD *)this + 13) = result;
  return result;
}

uint64_t morphun::analysis::tokenizer::StreamingTokenizer::reset(morphun::analysis::tokenizer::StreamingTokenizer *this)
{
  uint64_t v2;
  int64_t v3;
  int32_t v4;
  UChar *v5;
  UErrorCode v6;
  morphun::exception::ICUException *exception;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  UErrorCode status;

  v2 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 12) = v2;
  *((_QWORD *)this + 13) = 0;
  *((_QWORD *)this + 63) = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::SkippedOffsetsAttribute>((uint64_t)this);
  npc<UText>(v2);
  if (*(_QWORD *)(v2 + 56))
  {
    *((_QWORD *)this + 66) = morphun::analysis::tokenizer::StreamingTokenizer::incrementTokenizer;
    *((_QWORD *)this + 67) = 0;
    *((_DWORD *)this + 136) = 0;
    *((_OWORD *)this + 32) = 0u;
    status = U_ZERO_ERROR;
    v3 = utext_nativeLength(*((UText **)this + 12));
    v4 = utext_extract(*((UText **)this + 12), 0, v3, 0, 0, &status);
    status = U_ZERO_ERROR;
    v5 = (UChar *)((char *)this + 120);
    std::basic_string<char16_t>::resize((std::basic_string<char16_t> *)this + 5, v4, 0);
    if (*((char *)this + 143) < 0)
      v5 = *(UChar **)v5;
    utext_extract(*((UText **)this + 12), 0, v3, v5, v4, &status);
    v6 = status;
    if (status >= U_ILLEGAL_ARGUMENT_ERROR)
    {
      exception = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::ICUException::ICUException(exception, v6);
    }
  }
  else
  {
    *((_QWORD *)this + 66) = morphun::analysis::tokenizer::StreamingTokenizer::incrementTokenChain;
    *((_QWORD *)this + 67) = 0;
    if (*((char *)this + 143) < 0)
    {
      **((_WORD **)this + 15) = 0;
      *((_QWORD *)this + 16) = 0;
    }
    else
    {
      *((_WORD *)this + 60) = 0;
      *((_BYTE *)this + 143) = 0;
    }
    v8 = *(_QWORD *)(npc<UText>(*((_QWORD *)this + 12)) + 72);
    v9 = npc<morphun::Chunk const>(v8);
    v10 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 48))(v9);
    *((_QWORD *)this + 64) = v10;
    if (v10)
    {
      v11 = v10;
      {
        *((_QWORD *)this + 64) = v11[10];
      }
    }
    v12 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 56))(v8);
    *((_QWORD *)this + 65) = v12;
    if (v12)
    {
      v13 = v12;
      {
        *((_QWORD *)this + 65) = v13[9];
      }
    }
    v14 = npc<morphun::Token>(*((_QWORD *)this + 64));
    *((_DWORD *)this + 136) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v14 + 24))(v14);
  }
  v15 = npc<morphun::tokenizer::TokenExtractorIterator>(*((_QWORD *)this + 19));
  v16 = (char *)this + 120;
  if (*((char *)this + 143) < 0)
  {
    v18 = (char *)*((_QWORD *)this + 15);
    v17 = *((_QWORD *)this + 16);
  }
  else
  {
    v17 = *((unsigned __int8 *)this + 143);
    v18 = (char *)this + 120;
  }
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)v15 + 32))(v15, v18, v17);
  if (*((char *)this + 143) < 0)
  {
    v16 = (char *)*((_QWORD *)this + 15);
    v20 = *((_QWORD *)this + 16);
  }
  else
  {
    v20 = *((unsigned __int8 *)this + 143);
  }
  *((_QWORD *)this + 22) = v16;
  *((_QWORD *)this + 23) = v20;
  *((_OWORD *)this + 24) = xmmword_1CB5DD560;
  *((_DWORD *)this + 100) = -1;
  *((_QWORD *)this + 52) = v16;
  *((_QWORD *)this + 53) = v20;
  *((_DWORD *)this + 112) = 0;
  *((_QWORD *)this + 55) = 0xFFFFFFFF00000000;
  *(_QWORD *)((char *)this + 548) = 0;
  *((_DWORD *)this + 120) = 0;
  v21 = *((_QWORD *)this + 57);
  if (v21 != *((_QWORD *)this + 58))
    *((_QWORD *)this + 58) = v21;
  return result;
}

void sub_1CB4C49A4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::tokenizer::ICUTokenExtractorIterator::reset()
{
  return ubrk_setText();
}

void sub_1CB4C4A20(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::tokenizer::TokenExtractorIterator>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4C4A78(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<UText>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4C4AD0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

morphun::Tokenizer *morphun::TokenizerFactory::createTokenizer(morphun::TokenizerFactory *this, const morphun::util::ULocale *a2)
{
  morphun::TokenizerFactory *v2;
  unsigned __int8 v3;
  uint64_t **v4;
  std::mutex *v5;
  uint64_t **v6;
  uint64_t **v7;
  morphun::Tokenizer *TokenizerObject;
  morphun::Tokenizer *v9;
  morphun::util::LocaleUtils *Config;
  int32_t v11;
  int32_t v12;
  uint64_t v13;
  const char *v14;
  int32_t v15;
  int v16;
  uint64_t v17;
  std::basic_string<char16_t>::size_type v18;
  std::basic_string<char16_t> *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int32_t v25;
  char v26;
  std::mutex *v27;
  uint64_t **v28;
  uint64_t **v29;
  _QWORD *v31;
  _QWORD **v32;
  unint64_t v33;
  uint64_t v34;
  unsigned __int16 *v35;
  const __int16 *v36;
  unsigned int v37;
  unsigned int v38;
  unint64_t v39;
  uint64_t v40;
  unsigned __int16 *v41;
  const __int16 *v42;
  unsigned int v43;
  unsigned int v44;
  _QWORD *v45;
  morphun::exception::NullPointerException *v46;
  void *exception;
  std::basic_string<char16_t> v48;
  std::basic_string<char16_t> __dst;
  std::basic_string<char16_t> __p[5];
  void *v51[13];
  const char *v52;
  uint64_t v53;
  unsigned __int8 v54;
  _QWORD **v55;
  _QWORD *v56;
  uint64_t v57;
  morphun::Tokenizer *v58;

  v2 = this;
  v58 = 0;
  if ((v3 & 1) == 0)
  {
    if ((_DWORD)this)
    {
      v45 = (_QWORD *)operator new();
      v45[2] = 0;
      v45[1] = 0;
      *v45 = v45 + 1;
      morphun::TOKENIZER_CACHE(void)::TOKENIZER_CACHE_ = (uint64_t)v45;
    }
  }
  v4 = (uint64_t **)morphun::TOKENIZER_CACHE(void)::TOKENIZER_CACHE_;
  v5 = (std::mutex *)morphun::CLASS_MUTEX(this);
  std::mutex::lock(v5);
  npc<std::map<std::string,morphun::Tokenizer const*>>((uint64_t)v4);
  v6 = (uint64_t **)std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::find<std::string>((uint64_t)v4, (_QWORD *)v2 + 13);
  npc<std::map<std::string,morphun::Tokenizer const*>>((uint64_t)v4);
  v7 = v4 + 1;
  if (v4 + 1 == v6)
  {
    std::mutex::unlock(v5);
  }
  else
  {
    v58 = (morphun::Tokenizer *)v6[7];
    TokenizerObject = v58;
    std::mutex::unlock(v5);
    if (v58)
    {
      v9 = (morphun::Tokenizer *)operator new();
      goto LABEL_48;
    }
  }
  v56 = 0;
  v57 = 0;
  v55 = &v56;
  Config = morphun::util::ULocale::ULocale((morphun::util::ULocale *)v51, v2);
  v11 = v54;
  v12 = v53;
  if ((v54 & 0x80u) == 0)
    v13 = v54;
  else
    v13 = v53;
  if (v13)
  {
    while (1)
    {
      if ((v11 & 0x80u) == 0)
        v14 = (const char *)&v52;
      else
        v14 = v52;
      if ((v11 & 0x80u) == 0)
        v15 = v11;
      else
        v15 = v12;
      morphun::util::StringViewUtils::to_u16string(v14, v15, __p);
      Config = (morphun::util::LocaleUtils *)morphun::readConfig((const void **)&__p[0].__r_.__value_.__l.__data_, (uint64_t)&v55);
      v16 = (int)Config;
      if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p[0].__r_.__value_.__l.__data_);
      if (v16)
        break;
      morphun::util::ULocale::getFallback((morphun::util::ULocale *)v51, (uint64_t)__p);
      morphun::util::ULocale::operator=((uint64_t)v51, (uint64_t)__p);
      v11 = v54;
      v12 = v53;
      if ((v54 & 0x80u) == 0)
        v17 = v54;
      else
        v17 = v53;
      if (!v17)
        goto LABEL_23;
    }
    v31 = v56;
    if (v56)
    {
      v32 = &v56;
      do
      {
        v33 = v31[5];
        if (v33 >= 0x18)
          v34 = 24;
        else
          v34 = v31[5];
        if (v34)
        {
          v35 = (unsigned __int16 *)v31[4];
          v36 = L"tokenizer.alias.language";
          while (1)
          {
            v37 = *v35;
            v38 = *(unsigned __int16 *)v36;
            if (v37 < v38)
            {
              ++v31;
              goto LABEL_64;
            }
            if (v38 < v37)
              break;
            ++v35;
            ++v36;
            if (!--v34)
              goto LABEL_59;
          }
          v32 = (_QWORD **)v31;
        }
        else
        {
LABEL_59:
          if (v33 < 0x18)
            ++v31;
          else
            v32 = (_QWORD **)v31;
        }
LABEL_64:
        v31 = (_QWORD *)*v31;
      }
      while (v31);
      if (&v56 != v32)
      {
        v39 = (unint64_t)v32[5];
        v40 = 24;
        if (v39 < 0x18)
          v40 = (uint64_t)v32[5];
        if (v40)
        {
          v41 = (unsigned __int16 *)v32[4];
          v42 = L"tokenizer.alias.language";
          while (1)
          {
            v43 = *(unsigned __int16 *)v42;
            v44 = *v41;
            if (v43 < v44)
              break;
            if (v44 < v43)
              goto LABEL_74;
            ++v42;
            ++v41;
            if (!--v40)
              goto LABEL_73;
          }
        }
        else
        {
LABEL_73:
          if (v39 <= 0x18)
          {
LABEL_74:
            std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)v32[6]);
            Config = (morphun::util::LocaleUtils *)morphun::readConfig((const void **)&__p[0].__r_.__value_.__l.__data_, (uint64_t)&v55);
            if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
              operator delete(__p[0].__r_.__value_.__l.__data_);
          }
        }
      }
    }
  }
LABEL_23:
  if (!v57)
  {
    if (morphun::util::gLogLevel <= 3)
    {
      (**(void (***)(std::basic_string<char16_t> *__return_ptr, morphun::TokenizerFactory *))v2)(&v48, v2);
      std::basic_string<char16_t>::insert(&v48, (std::basic_string<char16_t>::size_type)"T", (const std::basic_string<char16_t>::value_type *)0x12, v18);
      __dst = v48;
      memset(&v48, 0, sizeof(v48));
      Config = (morphun::util::LocaleUtils *)std::basic_string<char16_t>::append(&__dst, L" is unknown. The default will be used.", 0x26uLL);
      __p[0] = __dst;
      memset(&__dst, 0, sizeof(__dst));
      if (morphun::util::gLogLevel <= 3)
      {
        if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v19 = __p;
        else
          v19 = (std::basic_string<char16_t> *)__p[0].__r_.__value_.__r.__words[0];
        morphun::util::logToTopOfStackLogger((morphun::util *)3, 0, (uint64_t)v19);
      }
      if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p[0].__r_.__value_.__l.__data_);
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__dst.__r_.__value_.__l.__data_);
      if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v48.__r_.__value_.__l.__data_);
    }
    v20 = morphun::util::LocaleUtils::ENGLISH(Config);
    v23 = *(_QWORD *)(v20 + 8);
    v21 = v20 + 8;
    v22 = v23;
    v24 = *(_QWORD *)(v21 + 8);
    if (*(char *)(v21 + 23) >= 0)
    {
      v25 = *(unsigned __int8 *)(v21 + 23);
    }
    else
    {
      v21 = v22;
      v25 = v24;
    }
    morphun::util::StringViewUtils::to_u16string((const char *)v21, v25, __p);
    Config = (morphun::util::LocaleUtils *)morphun::readConfig((const void **)&__p[0].__r_.__value_.__l.__data_, (uint64_t)&v55);
    v26 = (char)Config;
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p[0].__r_.__value_.__l.__data_);
    if ((v26 & 1) == 0)
    {
      exception = __cxa_allocate_exception(0x68uLL);
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "T");
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"TokenizerFactory");
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v48, (char *)L"/com/apple/siri/tokenizer/data/config_");
      morphun::exception::MissingResourceException::MissingResourceException((uint64_t)exception, (__int128 *)__p, (__int128 *)&__dst, (__int128 *)&v48);
    }
  }
  v27 = (std::mutex *)morphun::CLASS_MUTEX(Config);
  std::mutex::lock(v27);
  npc<std::map<std::string,morphun::Tokenizer const*>>((uint64_t)v4);
  v28 = (uint64_t **)std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::find<std::string>((uint64_t)v4, &v52);
  npc<std::map<std::string,morphun::Tokenizer const*>>((uint64_t)v4);
  if (v7 != v28)
  {
    TokenizerObject = (morphun::Tokenizer *)v28[7];
    v58 = TokenizerObject;
LABEL_44:
    npc<std::map<std::string,morphun::Tokenizer const*>>((uint64_t)v4);
    std::__tree<std::__value_type<std::string,morphun::Tokenizer const*>,std::__map_value_compare<std::string,std::__value_type<std::string,morphun::Tokenizer const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,morphun::Tokenizer const*>>>::__emplace_unique_key_args<std::string,std::string const&,morphun::Tokenizer const*&>(v4, (_QWORD *)v2 + 13, (uint64_t)v2 + 104, (uint64_t *)&v58);
    goto LABEL_47;
  }
  npc<std::map<std::string,morphun::Tokenizer const*>>((uint64_t)v4);
  v29 = (uint64_t **)std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::find<std::string>((uint64_t)v4, (_QWORD *)v2 + 13);
  npc<std::map<std::string,morphun::Tokenizer const*>>((uint64_t)v4);
  if (v7 == v29)
  {
    TokenizerObject = morphun::TokenizerFactory::createTokenizerObject((void (***)(std::basic_string<char16_t> *__return_ptr, _QWORD))v2, (uint64_t)&v55);
    v58 = TokenizerObject;
    npc<std::map<std::string,morphun::Tokenizer const*>>((uint64_t)v4);
    std::__tree<std::__value_type<std::string,morphun::Tokenizer const*>,std::__map_value_compare<std::string,std::__value_type<std::string,morphun::Tokenizer const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,morphun::Tokenizer const*>>>::__emplace_unique_key_args<std::string,std::string const&,morphun::Tokenizer const*&>(v4, &v52, (uint64_t)&v52, (uint64_t *)&v58);
    goto LABEL_44;
  }
  TokenizerObject = (morphun::Tokenizer *)v29[7];
  v58 = TokenizerObject;
LABEL_47:
  std::mutex::unlock(v27);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(v56);
  v9 = (morphun::Tokenizer *)operator new();
  if (!TokenizerObject)
  {
    v46 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(v46);
  }
LABEL_48:
  morphun::Tokenizer::Tokenizer(v9, *((const morphun::tokenizer::TokenExtractor **)TokenizerObject + 6));
  return v9;
}

void sub_1CB4C50B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42)
{
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::string,morphun::Tokenizer const*>>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4C52A4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::CLASS_MUTEX(morphun *this)
{
  unsigned __int8 v1;
  uint64_t result;
  uint64_t v3;
  morphun::exception::NullPointerException *exception;

  {
    v3 = operator new();
    *(_QWORD *)v3 = 850045863;
    *(_OWORD *)(v3 + 8) = 0u;
    *(_OWORD *)(v3 + 24) = 0u;
    *(_OWORD *)(v3 + 40) = 0u;
    *(_QWORD *)(v3 + 56) = 0;
    morphun::CLASS_MUTEX(void)::classMutex = v3;
  }
  result = morphun::CLASS_MUTEX(void)::classMutex;
  if (!morphun::CLASS_MUTEX(void)::classMutex)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4C5370(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

morphun::Tokenizer *morphun::Tokenizer::Tokenizer(morphun::Tokenizer *this, const morphun::tokenizer::TokenExtractor *a2)
{
  *(_QWORD *)this = &off_1E8672F68;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  *(_QWORD *)((char *)this + 36) = 0x7FFFFFFFLL;
  *((_QWORD *)this + 6) = a2;
  morphun::Tokenizer::setStyle((uint64_t)this, 1);
  return this;
}

void sub_1CB4C53EC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void **v3;
  void *v5;

  v3 = v2;
  v5 = *v3;
  if (*v3)
  {
    *(_QWORD *)(v1 + 16) = v5;
    operator delete(v5);
  }
  _Unwind_Resume(exception_object);
}

void morphun::Tokenizer::setStyle(uint64_t a1, int a2)
{
  void (**v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void (**v33)(uint64_t, morphun::Token *, uint64_t, uint64_t);
  unint64_t v34;
  char *v35;
  void (*v36)(uint64_t, morphun::Token *, uint64_t, uint64_t);
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void (**v45)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v46;
  char *v47;
  char *v48;
  void (*v49)(uint64_t, uint64_t, uint64_t, uint64_t);

  *(_DWORD *)(a1 + 40) = a2;
  v3 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  if (a2 != 2)
  {
    if (a2 == 1)
    {
      v4 = *(_QWORD *)(a1 + 24);
      if ((unint64_t)v3 < v4)
      {
        v5 = morphun::tokenizer::NumberCleaver::modifyTokens;
LABEL_29:
        *v3++ = v5;
LABEL_44:
        *(_QWORD *)(a1 + 16) = v3;
        goto LABEL_45;
      }
      v7 = v4 - (_QWORD)v3;
      v8 = v7 >> 2;
      if ((unint64_t)(v7 >> 2) <= 1)
        v8 = 1;
      if ((unint64_t)v7 >= 0x7FFFFFFFFFFFFFF8)
        v9 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v9 = v8;
      v10 = std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v9);
      v12 = &v10[v11];
      *v10 = morphun::tokenizer::NumberCleaver::modifyTokens;
      v3 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 1);
      v14 = *(char **)(a1 + 8);
      v13 = *(char **)(a1 + 16);
      if (v13 != v14)
      {
        do
        {
          v15 = *((_QWORD *)v13 - 1);
          v13 -= 8;
          *--v10 = v15;
        }
        while (v13 != v14);
        v13 = *(char **)(a1 + 8);
      }
      *(_QWORD *)(a1 + 8) = v10;
      *(_QWORD *)(a1 + 16) = v3;
      *(_QWORD *)(a1 + 24) = v12;
      if (!v13)
        goto LABEL_44;
      v16 = v13;
    }
    else
    {
      v6 = *(_QWORD *)(a1 + 24);
      if ((unint64_t)v3 >= v6)
      {
        v17 = v6 - (_QWORD)v3;
        v18 = v17 >> 2;
        if ((unint64_t)(v17 >> 2) <= 1)
          v18 = 1;
        if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF8)
          v19 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v19 = v18;
        v20 = std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v19);
        v22 = &v20[v21];
        *v20 = morphun::tokenizer::NumberCleaver::modifyTokens;
        v3 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 1);
        v24 = *(char **)(a1 + 8);
        v23 = *(char **)(a1 + 16);
        if (v23 != v24)
        {
          do
          {
            v25 = *((_QWORD *)v23 - 1);
            v23 -= 8;
            *--v20 = v25;
          }
          while (v23 != v24);
          v23 = *(char **)(a1 + 8);
        }
        *(_QWORD *)(a1 + 8) = v20;
        *(_QWORD *)(a1 + 16) = v3;
        *(_QWORD *)(a1 + 24) = v22;
        if (v23)
          operator delete(v23);
      }
      else
      {
        *v3++ = morphun::tokenizer::NumberCleaver::modifyTokens;
      }
      *(_QWORD *)(a1 + 16) = v3;
      v26 = *(_QWORD *)(a1 + 24);
      if ((unint64_t)v3 < v26)
      {
        v5 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))morphun::tokenizer::ExplicitTokenModifier::modifyTokens;
        goto LABEL_29;
      }
      v27 = *(_QWORD *)(a1 + 8);
      v28 = ((uint64_t)v3 - v27) >> 3;
      if ((unint64_t)(v28 + 1) >> 61)
        goto LABEL_64;
      v29 = v26 - v27;
      v30 = v29 >> 2;
      if (v29 >> 2 <= (unint64_t)(v28 + 1))
        v30 = v28 + 1;
      if ((unint64_t)v29 >= 0x7FFFFFFFFFFFFFF8)
        v31 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v31 = v30;
      if (v31)
        v31 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v31);
      else
        v32 = 0;
      v33 = (void (**)(uint64_t, morphun::Token *, uint64_t, uint64_t))(v31 + 8 * v28);
      v34 = v31 + 8 * v32;
      *v33 = morphun::tokenizer::ExplicitTokenModifier::modifyTokens;
      v3 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 1);
      v35 = *(char **)(a1 + 8);
      v16 = *(char **)(a1 + 16);
      if (v16 != v35)
      {
        do
        {
          v36 = (void (*)(uint64_t, morphun::Token *, uint64_t, uint64_t))*((_QWORD *)v16 - 1);
          v16 -= 8;
          *--v33 = v36;
        }
        while (v16 != v35);
        v16 = *(char **)(a1 + 8);
      }
      *(_QWORD *)(a1 + 8) = v33;
      *(_QWORD *)(a1 + 16) = v3;
      *(_QWORD *)(a1 + 24) = v34;
      if (!v16)
        goto LABEL_44;
    }
    operator delete(v16);
    goto LABEL_44;
  }
LABEL_45:
  if (*(int *)(a1 + 32) < 1)
    return;
  v37 = *(_QWORD *)(a1 + 24);
  if ((unint64_t)v3 >= v37)
  {
    v39 = *(_QWORD *)(a1 + 8);
    v40 = ((uint64_t)v3 - v39) >> 3;
    if (!((unint64_t)(v40 + 1) >> 61))
    {
      v41 = v37 - v39;
      v42 = v41 >> 2;
      if (v41 >> 2 <= (unint64_t)(v40 + 1))
        v42 = v40 + 1;
      if ((unint64_t)v41 >= 0x7FFFFFFFFFFFFFF8)
        v43 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v43 = v42;
      if (v43)
        v43 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v43);
      else
        v44 = 0;
      v45 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 8 * v40);
      v46 = v43 + 8 * v44;
      *v45 = morphun::tokenizer::OversizedTokenModifier::modifyTokens;
      v38 = v45 + 1;
      v48 = *(char **)(a1 + 8);
      v47 = *(char **)(a1 + 16);
      if (v47 != v48)
      {
        do
        {
          v49 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*((_QWORD *)v47 - 1);
          v47 -= 8;
          *--v45 = v49;
        }
        while (v47 != v48);
        v47 = *(char **)(a1 + 8);
      }
      *(_QWORD *)(a1 + 8) = v45;
      *(_QWORD *)(a1 + 16) = v38;
      *(_QWORD *)(a1 + 24) = v46;
      if (v47)
        operator delete(v47);
      goto LABEL_62;
    }
LABEL_64:
    std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
  }
  *v3 = morphun::tokenizer::OversizedTokenModifier::modifyTokens;
  v38 = v3 + 1;
LABEL_62:
  *(_QWORD *)(a1 + 16) = v38;
}

void morphun::Tokenizer::setMaxTokens(morphun::Tokenizer *this, int a2)
{
  void (**v4)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (**v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  size_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (**v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v16;
  char *v17;
  char *v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);

  v4 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))*((_QWORD *)this + 1);
  v5 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))*((_QWORD *)this + 2);
  if (v4 != v5)
  {
    while (*v4 != morphun::tokenizer::OversizedTokenModifier::modifyTokens)
    {
      if (++v4 == v5)
      {
        v4 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))*((_QWORD *)this + 2);
        break;
      }
    }
  }
  if (v4 != v5)
  {
    v6 = (char *)v5 - (char *)(v4 + 1);
    if (v6)
      memmove(v4, v4 + 1, v6);
    v5 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v4 + v6);
    *((_QWORD *)this + 2) = v5;
  }
  if (a2 >= 1)
  {
    v7 = *((_QWORD *)this + 3);
    if ((unint64_t)v5 >= v7)
    {
      v9 = *((_QWORD *)this + 1);
      v10 = ((uint64_t)v5 - v9) >> 3;
      if ((unint64_t)(v10 + 1) >> 61)
        std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
      v11 = v7 - v9;
      v12 = v11 >> 2;
      if (v11 >> 2 <= (unint64_t)(v10 + 1))
        v12 = v10 + 1;
      if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
        v13 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v13 = v12;
      if (v13)
        v13 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v13);
      else
        v14 = 0;
      v15 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8 * v10);
      v16 = v13 + 8 * v14;
      *v15 = morphun::tokenizer::OversizedTokenModifier::modifyTokens;
      v8 = v15 + 1;
      v18 = (char *)*((_QWORD *)this + 1);
      v17 = (char *)*((_QWORD *)this + 2);
      if (v17 != v18)
      {
        do
        {
          v19 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*((_QWORD *)v17 - 1);
          v17 -= 8;
          *--v15 = v19;
        }
        while (v17 != v18);
        v17 = (char *)*((_QWORD *)this + 1);
      }
      *((_QWORD *)this + 1) = v15;
      *((_QWORD *)this + 2) = v8;
      *((_QWORD *)this + 3) = v16;
      if (v17)
        operator delete(v17);
    }
    else
    {
      *v5 = morphun::tokenizer::OversizedTokenModifier::modifyTokens;
      v8 = v5 + 1;
    }
    *((_QWORD *)this + 2) = v8;
  }
  *((_DWORD *)this + 8) = a2;
}

void morphun::resources::DataRegistrationService::registerDataPathForLocale(morphun::util::ULocale *a1, uint64_t a2)
{
  size_t size;
  std::string *p_str;
  int v5;
  uint64_t v7;
  std::string *v8;
  std::string *v9;
  std::string::size_type v10;
  std::string *v12;
  __int128 *p_dst;
  uint64_t i;
  uint64_t v15;
  uint64_t v16;
  std::string::value_type v17;
  const std::string::value_type *v18;
  std::string::size_type v19;
  std::__fs::filesystem::path *v20;
  std::mutex *v21;
  morphun::resources *v22;
  uint64_t **v23;
  uint64_t **v24;
  uint64_t **v25;
  const void **v26;
  uint64_t v27;
  uint64_t *v28;
  std::string::size_type v29;
  std::string *v30;
  unsigned __int8 *v31;
  void **v32;
  char *v33;
  uint64_t **v34;
  std::string *v35;
  uint64_t *v36;
  std::basic_string<char16_t> *v37;
  std::basic_string<char16_t>::size_type v38;
  int v39;
  const char *v40;
  uint64_t v41;
  std::basic_string<char16_t> *v42;
  std::basic_string<char16_t>::size_type v43;
  unint64_t v44;
  std::string::size_type v45;
  std::string *p_pn;
  std::string::size_type v47;
  _QWORD *exception;
  std::basic_string<char16_t> v49;
  std::basic_string<char16_t> v50;
  std::basic_string<char16_t> v51;
  std::basic_string<char16_t> v52;
  std::string v53;
  std::__fs::filesystem::path v54;
  std::string pn;
  char v56;
  std::string __str;
  std::string v58;
  __int128 __dst;
  int64_t v60;

  morphun::resources::fallthroughLocaleString(&v58, a1);
  if (*(char *)(a2 + 23) < 0)
    std::string::__init_copy_ctor_external(&__str, *(const std::string::value_type **)a2, *(_QWORD *)(a2 + 8));
  else
    __str = *(std::string *)a2;
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
  {
    p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
    if (__str.__r_.__value_.__l.__size_ >= 7)
      size = 7;
    else
      size = __str.__r_.__value_.__l.__size_;
  }
  else
  {
    if (HIBYTE(__str.__r_.__value_.__r.__words[2]) >= 7u)
      size = 7;
    else
      size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    p_str = &__str;
  }
  v5 = memcmp(p_str, "file://", size);
  if (size >= 7 && v5 == 0)
    std::string::erase(&__str, 0, 7uLL);
  while ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (!*((_BYTE *)&__str.__r_.__value_.__s + 23) || *(&v56 + HIBYTE(__str.__r_.__value_.__r.__words[2])) != 47)
      goto LABEL_26;
    v7 = HIBYTE(__str.__r_.__value_.__r.__words[2]) - 1;
    --*((_BYTE *)&__str.__r_.__value_.__s + 23);
    v8 = &__str;
LABEL_25:
    v8->__r_.__value_.__s.__data_[v7] = 0;
  }
  if (__str.__r_.__value_.__l.__size_)
  {
    v8 = (std::string *)__str.__r_.__value_.__r.__words[0];
    if (*(_BYTE *)(__str.__r_.__value_.__r.__words[0] + __str.__r_.__value_.__l.__size_ - 1) == 47)
    {
      v7 = --__str.__r_.__value_.__l.__size_;
      goto LABEL_25;
    }
  }
LABEL_26:
  memset(&v53, 0, sizeof(v53));
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v9 = &__str;
  else
    v9 = (std::string *)__str.__r_.__value_.__r.__words[0];
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v10 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  else
    v10 = __str.__r_.__value_.__l.__size_;
  if (v10)
  {
    if (&v53 <= v9 && (std::string *)((char *)&v53.__r_.__value_.__l.__data_ + 1) > v9)
    {
      if (v10 >= 0x7FFFFFFFFFFFFFF8)
        std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
      if (v10 > 0x16)
      {
        v15 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v10 | 7) != 0x17)
          v15 = v10 | 7;
        v16 = v15 + 1;
        p_dst = (__int128 *)operator new(v15 + 1);
        *((_QWORD *)&__dst + 1) = v10;
        v60 = v16 | 0x8000000000000000;
        *(_QWORD *)&__dst = p_dst;
      }
      else
      {
        HIBYTE(v60) = v10;
        p_dst = &__dst;
      }
      do
      {
        v17 = v9->__r_.__value_.__s.__data_[0];
        v9 = (std::string *)((char *)v9 + 1);
        *(_BYTE *)p_dst = v17;
        p_dst = (__int128 *)((char *)p_dst + 1);
        --v10;
      }
      while (v10);
      *(_BYTE *)p_dst = 0;
      if (v60 >= 0)
        v18 = (const std::string::value_type *)&__dst;
      else
        v18 = (const std::string::value_type *)__dst;
      if (v60 >= 0)
        v19 = HIBYTE(v60);
      else
        v19 = *((_QWORD *)&__dst + 1);
      std::string::append(&v53, v18, v19);
      if (SHIBYTE(v60) < 0)
        operator delete((void *)__dst);
    }
    else
    {
      if (v10 < 0x17)
      {
        v12 = &v53;
      }
      else
      {
        std::string::__grow_by(&v53, 0x16uLL, v10 - 22, 0, 0, 0, 0);
        v53.__r_.__value_.__l.__size_ = 0;
        if ((v53.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v12 = &v53;
        else
          v12 = (std::string *)v53.__r_.__value_.__r.__words[0];
      }
      for (i = 0; i != v10; ++i)
        v12->__r_.__value_.__s.__data_[i] = v9->__r_.__value_.__s.__data_[i];
      v12->__r_.__value_.__s.__data_[i] = 0;
      if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0)
        v53.__r_.__value_.__l.__size_ = v10;
      else
        *((_BYTE *)&v53.__r_.__value_.__s + 23) = v10 & 0x7F;
    }
  }
  v20 = std::__fs::filesystem::__weakly_canonical(&v54, (const std::__fs::filesystem::path *)&v53, 0);
  if (SHIBYTE(v54.__pn_.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&pn, v54.__pn_.__r_.__value_.__l.__data_, v54.__pn_.__r_.__value_.__l.__size_);
  else
    pn = v54.__pn_;
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  __str = pn;
  if (SHIBYTE(v54.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v54.__pn_.__r_.__value_.__l.__data_);
  if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v53.__r_.__value_.__l.__data_);
  v21 = (std::mutex *)morphun::resources::CLASS_MUTEX((morphun::resources *)v20);
  std::mutex::lock(v21);
  v23 = (uint64_t **)morphun::resources::PATHS_MAP(v22);
  npc<std::map<std::string,std::string>>((uint64_t)v23);
  v24 = (uint64_t **)std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::find<std::string>((uint64_t)v23, &v58);
  if (v23 + 1 != v24)
  {
    v25 = v24;
    v26 = (const void **)(v24 + 7);
    v27 = *((unsigned __int8 *)v24 + 79);
    if ((v27 & 0x80u) == 0)
      v28 = (uint64_t *)*((unsigned __int8 *)v24 + 79);
    else
      v28 = v24[8];
    v29 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v29 = __str.__r_.__value_.__l.__size_;
    if (v28 != (uint64_t *)v29)
      goto LABEL_100;
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v30 = &__str;
    else
      v30 = (std::string *)__str.__r_.__value_.__r.__words[0];
    if ((v27 & 0x80) != 0)
    {
      if (memcmp(*v26, v30, (size_t)v24[8]))
        goto LABEL_100;
    }
    else if (*((_BYTE *)v24 + 79))
    {
      v31 = (unsigned __int8 *)(v24 + 7);
      while (*v31 == v30->__r_.__value_.__s.__data_[0])
      {
        ++v31;
        v30 = (std::string *)((char *)v30 + 1);
        if (!--v27)
          goto LABEL_88;
      }
LABEL_100:
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v51, "R");
      if (*((char *)v25 + 79) < 0)
      {
        v26 = (const void **)v25[7];
        v36 = v25[8];
      }
      else
      {
        LODWORD(v36) = *((unsigned __int8 *)v25 + 79);
      }
      morphun::util::StringViewUtils::to_u16string((const char *)v26, (int32_t)v36, &v50);
      if ((v50.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v37 = &v50;
      else
        v37 = (std::basic_string<char16_t> *)v50.__r_.__value_.__r.__words[0];
      if ((v50.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v38 = HIBYTE(v50.__r_.__value_.__r.__words[2]);
      else
        v38 = v50.__r_.__value_.__l.__size_;
      std::basic_string<char16_t>::append(&v51, (const std::basic_string<char16_t>::value_type *)v37, v38);
      v52 = v51;
      memset(&v51, 0, sizeof(v51));
      std::basic_string<char16_t>::append(&v52, (const std::basic_string<char16_t>::value_type *)"\"", 6uLL);
      v53 = (std::string)v52;
      memset(&v52, 0, sizeof(v52));
      v39 = *(char *)(a2 + 23);
      if (v39 >= 0)
        v40 = (const char *)a2;
      else
        v40 = *(const char **)a2;
      if (v39 >= 0)
        LODWORD(v41) = *(unsigned __int8 *)(a2 + 23);
      else
        v41 = *(_QWORD *)(a2 + 8);
      morphun::util::StringViewUtils::to_u16string(v40, v41, &v49);
      if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v42 = &v49;
      else
        v42 = (std::basic_string<char16_t> *)v49.__r_.__value_.__r.__words[0];
      if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v43 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
      else
        v43 = v49.__r_.__value_.__l.__size_;
      std::basic_string<char16_t>::append((std::basic_string<char16_t> *)&v53, (const std::basic_string<char16_t>::value_type *)v42, v43);
      v54.__pn_ = v53;
      memset(&v53, 0, sizeof(v53));
      std::basic_string<char16_t>::append((std::basic_string<char16_t> *)&v54, L"\").", 3uLL);
      v44 = v54.__pn_.__r_.__value_.__r.__words[2];
      pn = v54.__pn_;
      memset(&v54, 0, sizeof(v54));
      v45 = HIBYTE(v44);
      if ((v45 & 0x80u) == 0)
        p_pn = &pn;
      else
        p_pn = (std::string *)pn.__r_.__value_.__r.__words[0];
      if ((v45 & 0x80u) == 0)
        v47 = v45;
      else
        v47 = pn.__r_.__value_.__l.__size_;
      exception = __cxa_allocate_exception(0x38uLL);
      std::basic_string<char16_t>::basic_string<std::u16string_view,0>(&__dst, p_pn, v47);
      morphun::exception::Throwable::Throwable((uint64_t)exception, &__dst);
      *exception = &off_1E8673120;
    }
  }
LABEL_88:
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&pn, (char *)&word_1CB73EB86);
  if (SHIBYTE(pn.__r_.__value_.__r.__words[2]) < 0)
    operator delete(pn.__r_.__value_.__l.__data_);
  v32 = (void **)std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__find_equal<std::string>((uint64_t)v23, &pn, &v58);
  v33 = (char *)*v32;
  if (!*v32)
  {
    v34 = (uint64_t **)v32;
    v33 = (char *)operator new(0x50uLL);
    *(_QWORD *)&__dst = v33;
    *((_QWORD *)&__dst + 1) = v23 + 1;
    LOBYTE(v60) = 0;
    v35 = (std::string *)(v33 + 32);
    if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0)
    {
      std::string::__init_copy_ctor_external(v35, v58.__r_.__value_.__l.__data_, v58.__r_.__value_.__l.__size_);
    }
    else
    {
      *(_OWORD *)&v35->__r_.__value_.__l.__data_ = *(_OWORD *)&v58.__r_.__value_.__l.__data_;
      *((_QWORD *)v33 + 6) = *((_QWORD *)&v58.__r_.__value_.__l + 2);
    }
    *((_QWORD *)v33 + 7) = 0;
    *((_QWORD *)v33 + 8) = 0;
    *((_QWORD *)v33 + 9) = 0;
    LOBYTE(v60) = 1;
    std::__tree<std::u16string_view>::__insert_node_at(v23, (uint64_t)pn.__r_.__value_.__l.__data_, v34, (uint64_t *)v33);
    *(_QWORD *)&__dst = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::string>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100]((uint64_t *)&__dst);
  }
  std::string::operator=((std::string *)(v33 + 56), &__str);
  std::mutex::unlock(v21);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v58.__r_.__value_.__l.__data_);
}

void sub_1CB4C5E30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,void *__p,uint64_t a44,int a45,__int16 a46,char a47,char a48)
{
  std::mutex *v48;
  void *v49;
  void *v50;
  void *v51;
  int v52;
  int v53;
  int v54;
  uint64_t v55;

  if (*(char *)(v55 - 81) < 0)
  {
    operator delete(*(void **)(v55 - 104));
    if ((v52 & 1) == 0)
    {
LABEL_6:
      if (a48 < 0)
        operator delete(__p);
      if (a41 < 0)
        operator delete(a36);
      if (v54 < 0)
        operator delete(v50);
      if (a34 < 0)
        operator delete(a29);
      if (a27 < 0)
        operator delete(a22);
      if (v53 < 0)
        operator delete(v49);
      if (a21 < 0)
        operator delete(a16);
      std::mutex::unlock(v48);
      if (*(char *)(v55 - 137) < 0)
        operator delete(*(void **)(v55 - 160));
      if (*(char *)(v55 - 105) < 0)
        operator delete(*(void **)(v55 - 128));
      _Unwind_Resume(a1);
    }
  }
  else if (!v52)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v51);
  goto LABEL_6;
}

uint64_t morphun::resources::PATHS_MAP(morphun::resources *this)
{
  unsigned __int8 v1;
  _QWORD *v3;

  {
    v3 = (_QWORD *)operator new();
    v3[2] = 0;
    v3[1] = 0;
    *v3 = v3 + 1;
    morphun::resources::PATHS_MAP(void)::PATHS_MAP_ = (uint64_t)v3;
  }
  return morphun::resources::PATHS_MAP(void)::PATHS_MAP_;
}

void sub_1CB4C6024(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t morphun::resources::CLASS_MUTEX(morphun::resources *this)
{
  unsigned __int8 v1;
  uint64_t result;
  uint64_t v3;
  morphun::exception::NullPointerException *exception;

  {
    v3 = operator new();
    *(_QWORD *)v3 = 850045863;
    *(_OWORD *)(v3 + 8) = 0u;
    *(_OWORD *)(v3 + 24) = 0u;
    *(_OWORD *)(v3 + 40) = 0u;
    *(_QWORD *)(v3 + 56) = 0;
    morphun::resources::CLASS_MUTEX(void)::classMutex = v3;
  }
  result = morphun::resources::CLASS_MUTEX(void)::classMutex;
  if (!morphun::resources::CLASS_MUTEX(void)::classMutex)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4C60F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::string,std::string>>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4C6160(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t **com::apple::siri::data::registration_locale_list::getContent@<X0>(uint64_t **a1@<X8>)
{
  unsigned __int16 *__dst[49];

  __dst[48] = *(unsigned __int16 **)MEMORY[0x1E0C80C00];
  memcpy(__dst, &off_1E8674230, 0x180uLL);
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, __dst, 16);
}

uint64_t **std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](uint64_t **a1, unsigned __int16 **a2, uint64_t a3)
{
  uint64_t *v4;
  unsigned __int16 **v5;
  uint64_t *v6;
  unsigned __int16 **v7;
  uint64_t **v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  BOOL v12;
  unint64_t v13;
  unsigned __int16 *v14;
  unsigned __int16 *v15;
  unsigned __int16 *v16;
  unsigned __int16 *v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t *v20;
  uint64_t *v21;
  _QWORD *v22;
  __int128 v23;
  uint64_t *v24;
  unsigned __int16 *v25;
  unsigned __int16 *v26;
  unsigned __int16 *v27;
  unsigned __int16 *v28;
  unsigned __int16 *v29;
  unsigned int v30;
  unsigned int v31;
  unsigned __int16 *v32;
  unsigned __int16 *v33;
  unsigned int v34;
  unsigned int v35;

  a1[1] = 0;
  v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    v5 = a2;
    v6 = 0;
    v7 = &a2[3 * a3];
    v8 = a1 + 1;
    while (1)
    {
      v9 = v4;
      if (v8 != (uint64_t **)v4)
      {
        v10 = v6;
        v11 = v4;
        if (v6)
        {
          do
          {
            v9 = v10;
            v10 = (uint64_t *)v10[1];
          }
          while (v10);
        }
        else
        {
          do
          {
            v9 = (uint64_t *)v11[2];
            v12 = *v9 == (_QWORD)v11;
            v11 = v9;
          }
          while (v12);
        }
        v13 = v9[5];
        v14 = v5[1];
        if ((unint64_t)v14 >= v13)
          v15 = (unsigned __int16 *)v9[5];
        else
          v15 = v5[1];
        if (v15)
        {
          v16 = *v5;
          v17 = (unsigned __int16 *)v9[4];
          while (1)
          {
            v18 = *v17;
            v19 = *v16;
            if (v18 < v19)
              break;
            if (v19 < v18)
              goto LABEL_29;
            ++v17;
            ++v16;
            v15 = (unsigned __int16 *)((char *)v15 - 1);
            if (!v15)
              goto LABEL_16;
          }
        }
        else
        {
LABEL_16:
          if (v13 >= (unint64_t)v14)
          {
LABEL_29:
            v20 = v4;
            v21 = v4;
            if (!v6)
              goto LABEL_23;
            v21 = v4;
            while (2)
            {
              while (1)
              {
                v20 = v6;
                v25 = (unsigned __int16 *)v6[5];
                v26 = v25 >= v14 ? v5[1] : v25;
                if (v26)
                  break;
LABEL_39:
                if (v14 < v25)
                  goto LABEL_40;
LABEL_42:
                if (v26)
                {
                  v32 = (unsigned __int16 *)v20[4];
                  v33 = *v5;
                  while (1)
                  {
                    v34 = *v32;
                    v35 = *v33;
                    if (v34 < v35)
                      break;
                    if (v35 < v34)
                      goto LABEL_23;
                    ++v32;
                    ++v33;
                    v26 = (unsigned __int16 *)((char *)v26 - 1);
                    if (!v26)
                      goto LABEL_47;
                  }
                }
                else
                {
LABEL_47:
                  if (v25 >= v14)
                    goto LABEL_23;
                }
                v21 = v20 + 1;
                v6 = (uint64_t *)v20[1];
                if (!v6)
                  goto LABEL_24;
              }
              v27 = (unsigned __int16 *)v20[4];
              v28 = v26;
              v29 = *v5;
              while (1)
              {
                v30 = *v29;
                v31 = *v27;
                if (v30 < v31)
                  break;
                if (v31 < v30)
                  goto LABEL_42;
                ++v29;
                ++v27;
                v28 = (unsigned __int16 *)((char *)v28 - 1);
                if (!v28)
                  goto LABEL_39;
              }
LABEL_40:
              v6 = (uint64_t *)*v20;
              v21 = v20;
              if (!*v20)
                goto LABEL_24;
              continue;
            }
          }
        }
      }
      if (v6)
        v20 = v9;
      else
        v20 = v4;
      if (v6)
        v21 = v9 + 1;
      else
        v21 = v4;
LABEL_23:
      if (!*v21)
      {
LABEL_24:
        v22 = operator new(0x38uLL);
        v23 = *(_OWORD *)v5;
        v22[6] = v5[2];
        *((_OWORD *)v22 + 2) = v23;
        *v22 = 0;
        v22[1] = 0;
        v22[2] = v20;
        *v21 = (uint64_t)v22;
        v24 = (uint64_t *)**a1;
        if (v24)
        {
          *a1 = v24;
          v22 = (_QWORD *)*v21;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v22);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
      v5 += 3;
      if (v5 == v7)
        return a1;
      v8 = (uint64_t **)*a1;
      v6 = a1[1];
    }
  }
  return a1;
}

void sub_1CB4C6404(_Unwind_Exception *a1)
{
  _QWORD **v1;

  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(_QWORD *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*a1);
    std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(a1[1]);
    operator delete(a1);
  }
}

uint64_t *std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(uint64_t *result, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  _BYTE *v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t **v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *((_BYTE *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      v2 = (uint64_t *)a2[2];
      if (*((_BYTE *)v2 + 24))
        return result;
      v3 = (uint64_t *)v2[2];
      v4 = (uint64_t *)*v3;
      if ((uint64_t *)*v3 == v2)
      {
        v7 = v3[1];
        if (!v7 || (v8 = *(unsigned __int8 *)(v7 + 24), v5 = (_BYTE *)(v7 + 24), v8))
        {
          if ((uint64_t *)*v2 == a2)
          {
            v9 = (uint64_t **)a2[2];
          }
          else
          {
            v9 = (uint64_t **)v2[1];
            v10 = *v9;
            v2[1] = (uint64_t)*v9;
            if (v10)
            {
              v10[2] = (uint64_t)v2;
              v3 = (uint64_t *)v2[2];
            }
            v9[2] = v3;
            *(_QWORD *)(v2[2] + 8 * (*(_QWORD *)v2[2] != (_QWORD)v2)) = v9;
            *v9 = v2;
            v2[2] = (uint64_t)v9;
            v3 = v9[2];
            v2 = (uint64_t *)*v3;
          }
          *((_BYTE *)v9 + 24) = 1;
          *((_BYTE *)v3 + 24) = 0;
          v13 = v2[1];
          *v3 = v13;
          if (v13)
            *(_QWORD *)(v13 + 16) = v3;
          v2[2] = v3[2];
          *(_QWORD *)(v3[2] + 8 * (*(_QWORD *)v3[2] != (_QWORD)v3)) = v2;
          v2[1] = (uint64_t)v3;
          goto LABEL_27;
        }
      }
      else if (!v4 || (v6 = *((unsigned __int8 *)v4 + 24), v5 = v4 + 3, v6))
      {
        if ((uint64_t *)*v2 == a2)
        {
          v11 = a2[1];
          *v2 = v11;
          if (v11)
          {
            *(_QWORD *)(v11 + 16) = v2;
            v3 = (uint64_t *)v2[2];
          }
          a2[2] = (uint64_t)v3;
          *(_QWORD *)(v2[2] + 8 * (*(_QWORD *)v2[2] != (_QWORD)v2)) = a2;
          a2[1] = (uint64_t)v2;
          v2[2] = (uint64_t)a2;
          v3 = (uint64_t *)a2[2];
        }
        else
        {
          a2 = (uint64_t *)a2[2];
        }
        *((_BYTE *)a2 + 24) = 1;
        *((_BYTE *)v3 + 24) = 0;
        v2 = (uint64_t *)v3[1];
        v12 = *v2;
        v3[1] = *v2;
        if (v12)
          *(_QWORD *)(v12 + 16) = v3;
        v2[2] = v3[2];
        *(_QWORD *)(v3[2] + 8 * (*(_QWORD *)v3[2] != (_QWORD)v3)) = v2;
        *v2 = (uint64_t)v3;
LABEL_27:
        v3[2] = (uint64_t)v2;
        return result;
      }
      *((_BYTE *)v2 + 24) = 1;
      a2 = v3;
      *((_BYTE *)v3 + 24) = v3 == result;
      *v5 = 1;
    }
    while (v3 != result);
  }
  return result;
}

void morphun::grammar::synthesis::RuGrammarSynthesizer_AboutPrepositionLookupFunction::~RuGrammarSynthesizer_AboutPrepositionLookupFunction(morphun::grammar::synthesis::RuGrammarSynthesizer_AboutPrepositionLookupFunction *this)
{
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::grammar::synthesis::RuGrammarSynthesizer_AboutPrepositionLookupFunction::getArticle(morphun::grammar::synthesis::RuGrammarSynthesizer_AboutPrepositionLookupFunction *this, const morphun::dialog::SemanticFeatureModel_DisplayValue *a2)
{
  uint64_t v4;
  int32_t v5;
  const UChar *v6;
  uint64_t v7;
  uint64_t v8;
  const UChar *v9;
  int32_t v10;
  morphun::util::LocaleUtils *v11;
  unint64_t v12;
  morphun::dictionary::DictionaryMetaData *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  int v18;
  uint64_t v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v25;
  char *v26;
  int v27;
  int v28;
  uint64_t v30;
  void *__p[2];
  char v33;
  void *v34;
  unint64_t v35;
  uint64_t v36;

  v4 = (*(uint64_t (**)(const morphun::dialog::SemanticFeatureModel_DisplayValue *))(*(_QWORD *)a2 + 24))(a2);
  v35 = 0;
  v36 = 0;
  v34 = 0;
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = *(const UChar **)v4;
  v7 = *(_QWORD *)(v4 + 8);
  v8 = morphun::util::LocaleUtils::RUSSIAN((morphun::util::LocaleUtils *)v4);
  if ((v5 & 0x80u) == 0)
    v9 = (const UChar *)v4;
  else
    v9 = v6;
  if ((v5 & 0x80u) == 0)
    v10 = v5;
  else
    v10 = v7;
  v11 = (morphun::util::LocaleUtils *)morphun::util::StringViewUtils::lowercase((uint64_t)&v34, v9, v10, v8);
  v12 = HIBYTE(v36);
  if (v36 < 0)
    v12 = v35;
  if (v12 < 2)
    goto LABEL_10;
  v15 = 0;
  v16 = (char *)v34;
  if (v36 >= 0)
    v16 = (char *)&v34;
  do
  {
    v17 = *(unsigned __int16 *)&v16[v15 * 2];
    v18 = (unsigned __int16)word_1CB72F6FC[v15];
  }
  while (v18 == v17 && v15++ != 1);
  if (v18 == v17)
    goto LABEL_37;
  v20 = 0;
  v21 = (char *)v34;
  if (v36 >= 0)
    v21 = (char *)&v34;
  do
  {
    v22 = *(unsigned __int16 *)&v21[v20 * 2];
    v23 = (unsigned __int16)word_1CB72F702[v20];
  }
  while (v23 == v22 && v20++ != 1);
  if (v23 == v22)
    goto LABEL_37;
  v25 = 0;
  v26 = (char *)&v34;
  if (v36 < 0)
    v26 = (char *)v34;
  do
  {
    v27 = *(unsigned __int16 *)&v26[v25 * 2];
    v28 = (unsigned __int16)word_1CB72F708[v25];
  }
  while (v28 == v27 && v25++ != 1);
  if (v28 == v27)
  {
LABEL_37:
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, asc_1CB737E80);
    v14 = (*(uint64_t (**)(morphun::grammar::synthesis::RuGrammarSynthesizer_AboutPrepositionLookupFunction *, const morphun::dialog::SemanticFeatureModel_DisplayValue *, void **))(*(_QWORD *)this + 32))(this, a2, __p);
  }
  else
  {
LABEL_10:
    v13 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::RUSSIAN(v11);
    if (morphun::dictionary::PhraseProperties::isStartsWithVowel(v13, v4))
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, asc_1CB737E7A);
    else
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, asc_1CB737E76);
    v14 = (*(uint64_t (**)(morphun::grammar::synthesis::RuGrammarSynthesizer_AboutPrepositionLookupFunction *, const morphun::dialog::SemanticFeatureModel_DisplayValue *, void **))(*(_QWORD *)this + 32))(this, a2, __p);
  }
  v30 = v14;
  if (v33 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v36) < 0)
    operator delete(v34);
  return v30;
}

void sub_1CB4C6804(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
    operator delete(__p);
  if (a20 < 0)
    operator delete(a15);
  _Unwind_Resume(exception_object);
}

_QWORD *std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(_QWORD *__dst, char *__src)
{
  unint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_WORD *)__src)
  {
    v4 = 0;
    do
      v5 = &__src[2 * v4++];
    while (*((_WORD *)v5 + 1));
    if (v4 >= 0x7FFFFFFFFFFFFFF8)
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    if (v4 >= 0xB)
    {
      v7 = (v4 & 0xFFFFFFFFFFFFFFFCLL) + 4;
      if ((v4 | 3) != 0xB)
        v7 = v4 | 3;
      v6 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v7 + 1);
      __dst[1] = v4;
      __dst[2] = v8 | 0x8000000000000000;
      *__dst = v6;
    }
    else
    {
      *((_BYTE *)__dst + 23) = v4;
      v6 = __dst;
      if (!v4)
        goto LABEL_9;
    }
    memmove(v6, __src, 2 * v4);
    goto LABEL_14;
  }
  v4 = 0;
  *((_BYTE *)__dst + 23) = 0;
LABEL_9:
  v6 = __dst;
LABEL_14:
  *((_WORD *)v6 + v4) = 0;
  return __dst;
}

void std::basic_string<char16_t>::__throw_length_error[abi:ne180100]()
{
  std::__throw_length_error[abi:ne180100]("basic_string");
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(uint64_t a1)
{
  if (a1 < 0)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(2 * a1);
}

void std::__throw_bad_array_new_length[abi:ne180100]()
{
  std::bad_array_new_length *exception;
  std::bad_array_new_length *v1;

  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x1E0DE4E98], MEMORY[0x1E0DE4390]);
}

void std::__throw_length_error[abi:ne180100](const char *a1)
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_1E8654C38, MEMORY[0x1E0DE42D0]);
}

void sub_1CB4C69B4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1, const char *a2)
{
  std::logic_error *result;

  result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5020] + 16);
  return result;
}

uint64_t morphun::grammar::synthesis::RuGrammarSynthesizer_ArticleLookupFunction::getFeatureValue(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  if (a1[3] && (v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 32))(a2)) != 0)
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*a1 + 32))(a1, a2, v4);
  else
    return (*(uint64_t (**)(_QWORD *, uint64_t))(*a1 + 72))(a1, a2);
}

morphun::dialog::DefaultArticleLookupFunction *morphun::grammar::synthesis::RuGrammarSynthesizer_ArticleLookupFunction::RuGrammarSynthesizer_ArticleLookupFunction(morphun::dialog::DefaultArticleLookupFunction *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  morphun::dialog::DefaultArticleLookupFunction *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = *(unsigned __int8 *)(a4 + 23);
  if ((v8 & 0x80u) != 0)
    v8 = *(_QWORD *)(a4 + 8);
  v9 = morphun::dialog::DefaultArticleLookupFunction::DefaultArticleLookupFunction(a1, (const morphun::dialog::SemanticFeatureModel *)(a2 + 1), a3, v8 != 0, 1);
  v10 = *a2;
  *(_QWORD *)v9 = *a2;
  *(_QWORD *)((char *)v9 + *(_QWORD *)(v10 - 56)) = a2[4];
  *(_QWORD *)((char *)v9 + *(_QWORD *)(*(_QWORD *)v9 - 40)) = a2[5];
  v11 = *(unsigned __int8 *)(a4 + 23);
  if ((v11 & 0x80u) != 0)
    v11 = *(_QWORD *)(a4 + 8);
  if (v11)
  {
    v12 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a3 + 8, (unsigned __int16 *)a4);
    if (a3 + 16 == v12)
      v11 = 0;
    else
      v11 = *(_QWORD *)(v12 + 56);
  }
  *((_QWORD *)a1 + 3) = v11;
  return a1;
}

void morphun::grammar::synthesis::RuGrammarSynthesizer_InPrepositionLookupFunction::~RuGrammarSynthesizer_InPrepositionLookupFunction(morphun::grammar::synthesis::RuGrammarSynthesizer_InPrepositionLookupFunction *this)
{
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::grammar::synthesis::RuGrammarSynthesizer_InPrepositionLookupFunction::getArticle(morphun::grammar::synthesis::RuGrammarSynthesizer_InPrepositionLookupFunction *this, const morphun::dialog::SemanticFeatureModel_DisplayValue *a2)
{
  uint64_t v4;
  unsigned __int8 v5;
  int v6;
  unsigned __int16 *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v21;
  morphun::exception::NullPointerException *exception;
  _QWORD *v23;
  morphun::exception::NullPointerException *v24;
  void *__p[2];
  __int128 v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v4 = (*(uint64_t (**)(const morphun::dialog::SemanticFeatureModel_DisplayValue *))(*(_QWORD *)a2 + 24))(a2);
  if ((v5 & 1) == 0
  {
    v21 = operator new();
    *(_OWORD *)__p = xmmword_1E86743B0;
    v26 = unk_1E86743C0;
    std::set<std::u16string_view>::set[abi:ne180100](v21, (uint64_t)__p, 2);
    morphun::grammar::synthesis::RuGrammarSynthesizer_InPrepositionLookupFunction::IN_WORDS(void)::IN_WORDS_ = v21;
  }
  if (!morphun::grammar::synthesis::RuGrammarSynthesizer_InPrepositionLookupFunction::IN_WORDS(void)::IN_WORDS_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  v6 = *(char *)(v4 + 23);
  if (v6 >= 0)
    v7 = (unsigned __int16 *)v4;
  else
    v7 = *(unsigned __int16 **)v4;
  if (v6 >= 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = *(_QWORD *)(v4 + 8);
  if (std::__tree<std::u16string_view>::__count_unique<std::u16string_view>(*(_QWORD *)(morphun::grammar::synthesis::RuGrammarSynthesizer_InPrepositionLookupFunction::IN_WORDS(void)::IN_WORDS_+ 8), v7, v8))
  {
    goto LABEL_10;
  }
  if (v8 >= 4)
  {
    v13 = 0;
    do
    {
      v14 = v7[v13];
      v15 = (unsigned __int16)word_1CB72F722[v13];
    }
    while (v15 == v14 && v13++ != 3);
    if (v15 == v14)
      goto LABEL_10;
    v17 = 0;
    do
    {
      v18 = v7[v17];
      v19 = (unsigned __int16)word_1CB72F72C[v17];
    }
    while (v19 == v18 && v17++ != 3);
    if (v19 == v18)
      goto LABEL_10;
  }
  if ((v12 & 1) == 0
  {
    v23 = (_QWORD *)operator new();
    icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v23);
    MEMORY[0x1D179D970](*v23);
    morphun::grammar::synthesis::RuGrammarSynthesizer_InPrepositionLookupFunction::IN_FIRST_CHAR(void)::IN_FIRST_CHAR_ = (uint64_t)v23;
  }
  if (!morphun::grammar::synthesis::RuGrammarSynthesizer_InPrepositionLookupFunction::IN_FIRST_CHAR(void)::IN_FIRST_CHAR_)
  {
    v24 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(v24);
  }
  if (morphun::grammar::synthesis::RuGrammarSynthesizer::startsWith2Consonant((unsigned __int16 *)v4, *(_QWORD *)morphun::grammar::synthesis::RuGrammarSynthesizer_InPrepositionLookupFunction::IN_FIRST_CHAR(void)::IN_FIRST_CHAR_))
  {
LABEL_10:
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, ::a2);
    v9 = (*(uint64_t (**)(morphun::grammar::synthesis::RuGrammarSynthesizer_InPrepositionLookupFunction *, const morphun::dialog::SemanticFeatureModel_DisplayValue *, void **))(*(_QWORD *)this + 32))(this, a2, __p);
  }
  else
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, a2_0);
    v9 = (*(uint64_t (**)(morphun::grammar::synthesis::RuGrammarSynthesizer_InPrepositionLookupFunction *, const morphun::dialog::SemanticFeatureModel_DisplayValue *, void **))(*(_QWORD *)this + 32))(this, a2, __p);
  }
  v10 = v9;
  if (SBYTE7(v26) < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_1CB4C6E10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  uint64_t v14;

  MEMORY[0x1D179D2EC](v14, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t std::__tree<std::u16string_view>::__count_unique<std::u16string_view>(uint64_t result, unsigned __int16 *a2, unint64_t a3)
{
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  unsigned __int16 *v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  unsigned int v10;
  unsigned __int16 *v11;
  unsigned __int16 *v12;
  unsigned int v13;
  unsigned int v14;

  if (result)
  {
    v3 = (_QWORD *)result;
    result = 1;
    do
    {
      v4 = v3[5];
      if (v4 >= a3)
        v5 = a3;
      else
        v5 = v3[5];
      if (v5)
      {
        v6 = (unsigned __int16 *)v3[4];
        v7 = v5;
        v8 = a2;
        while (1)
        {
          v9 = *v8;
          v10 = *v6;
          if (v9 < v10)
            break;
          if (v10 < v9)
            goto LABEL_12;
          ++v8;
          ++v6;
          if (!--v7)
            goto LABEL_11;
        }
      }
      else
      {
LABEL_11:
        if (v4 <= a3)
        {
LABEL_12:
          if (v5)
          {
            v11 = (unsigned __int16 *)v3[4];
            v12 = a2;
            while (1)
            {
              v13 = *v11;
              v14 = *v12;
              if (v13 < v14)
                break;
              if (v14 < v13)
                return result;
              ++v11;
              ++v12;
              if (!--v5)
                goto LABEL_17;
            }
          }
          else
          {
LABEL_17:
            if (v4 >= a3)
              return result;
          }
          ++v3;
        }
      }
      v3 = (_QWORD *)*v3;
    }
    while (v3);
    return 0;
  }
  return result;
}

uint64_t icu4cxx::UnicodeSet::UnicodeSet(uint64_t a1)
{
  *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)a1 = uset_openPatternOptions();
  return a1;
}

{
  *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)a1 = uset_openPattern();
  return a1;
}

void sub_1CB4C6FDC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::Validate::notNull<icu4cxx::UnicodeSet>(uint64_t result)
{
  _QWORD *exception;
  __int128 __dst;

  if (!result)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "I");
    morphun::exception::Throwable::Throwable((uint64_t)exception, &__dst);
    *exception = &off_1E8673090;
  }
  return result;
}

void sub_1CB4C7074(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

uint64_t std::set<std::u16string_view>::set[abi:ne180100](uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(a1 + 8) = 0;
  v4 = (_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = a1 + 8;
  if (a3)
  {
    v5 = a2;
    v6 = a2 + 16 * a3;
    do
    {
      std::__tree<std::u16string_view>::__emplace_hint_unique_key_args<std::u16string_view,std::u16string_view const&>((uint64_t **)a1, v4, *(unsigned __int16 **)v5, *(_QWORD *)(v5 + 8), (_OWORD *)v5);
      v5 += 16;
    }
    while (v5 != v6);
  }
  return a1;
}

void sub_1CB4C7110(_Unwind_Exception *a1)
{
  _QWORD **v1;

  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<std::u16string_view>::__emplace_hint_unique_key_args<std::u16string_view,std::u16string_view const&>(uint64_t **a1, _QWORD *a2, unsigned __int16 *a3, unint64_t a4, _OWORD *a5)
{
  uint64_t *result;
  uint64_t **v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  result = std::__tree<std::u16string_view>::__find_equal<std::u16string_view>(a1, a2, &v11, &v10, a3, a4);
  if (!*result)
  {
    v8 = (uint64_t **)result;
    v9 = (uint64_t *)operator new(0x30uLL);
    *((_OWORD *)v9 + 2) = *a5;
    return std::__tree<std::u16string_view>::__insert_node_at(a1, v11, v8, v9);
  }
  return result;
}

_QWORD *std::__tree<std::u16string_view>::__find_equal<std::u16string_view>(_QWORD *a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, unsigned __int16 *a5, unint64_t a6)
{
  unint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unint64_t v9;
  unsigned __int16 *v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unsigned __int16 *v16;
  unsigned __int16 *v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  BOOL v23;
  unint64_t v24;
  unint64_t v25;
  unsigned __int16 *v26;
  unsigned __int16 *v27;
  unsigned int v28;
  unsigned int v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  unsigned __int16 *v33;
  unsigned __int16 *v34;
  unsigned int v35;
  unsigned int v36;

  if (a1 + 1 == a2)
    goto LABEL_11;
  v6 = a2[5];
  if (v6 >= a6)
    v7 = a6;
  else
    v7 = a2[5];
  if (v7)
  {
    v8 = (unsigned __int16 *)a2[4];
    v9 = v7;
    v10 = a5;
    do
    {
      v11 = *v10;
      v12 = *v8;
      if (v11 < v12)
        goto LABEL_11;
      if (v12 < v11)
        goto LABEL_16;
      ++v10;
      ++v8;
    }
    while (--v9);
  }
  if (v6 > a6)
  {
LABEL_11:
    v13 = *a2;
    if ((_QWORD *)*a1 == a2)
    {
      v15 = a2;
      goto LABEL_38;
    }
    if (v13)
    {
      v14 = (_QWORD *)*a2;
      do
      {
        v15 = v14;
        v14 = (_QWORD *)v14[1];
      }
      while (v14);
    }
    else
    {
      v22 = a2;
      do
      {
        v15 = (_QWORD *)v22[2];
        v23 = *v15 == (_QWORD)v22;
        v22 = v15;
      }
      while (v23);
    }
    v24 = v15[5];
    if (a6 >= v24)
      v25 = v15[5];
    else
      v25 = a6;
    if (v25)
    {
      v26 = (unsigned __int16 *)v15[4];
      v27 = a5;
      do
      {
        v28 = *v26;
        v29 = *v27;
        if (v28 < v29)
          goto LABEL_38;
        if (v29 < v28)
          return std::__tree<std::u16string_view>::__find_equal<std::u16string_view>((uint64_t)a1, a3, a5, a6);
        ++v26;
        ++v27;
      }
      while (--v25);
    }
    if (v24 < a6)
    {
LABEL_38:
      if (v13)
      {
        *a3 = v15;
        return v15 + 1;
      }
      else
      {
        *a3 = a2;
        return a2;
      }
    }
    return std::__tree<std::u16string_view>::__find_equal<std::u16string_view>((uint64_t)a1, a3, a5, a6);
  }
LABEL_16:
  if (v7)
  {
    v16 = (unsigned __int16 *)a2[4];
    v17 = a5;
    while (1)
    {
      v18 = *v16;
      v19 = *v17;
      if (v18 < v19)
        break;
      if (v19 < v18)
        goto LABEL_41;
      ++v16;
      ++v17;
      if (!--v7)
        goto LABEL_21;
    }
LABEL_22:
    v20 = a2[1];
    if (v20)
    {
      v21 = (_QWORD *)a2[1];
      do
      {
        a4 = v21;
        v21 = (_QWORD *)*v21;
      }
      while (v21);
    }
    else
    {
      v30 = a2;
      do
      {
        a4 = (_QWORD *)v30[2];
        v23 = *a4 == (_QWORD)v30;
        v30 = a4;
      }
      while (!v23);
    }
    if (a4 != a1 + 1)
    {
      v31 = a4[5];
      if (v31 >= a6)
        v32 = a6;
      else
        v32 = a4[5];
      if (v32)
      {
        v33 = (unsigned __int16 *)a4[4];
        v34 = a5;
        while (1)
        {
          v35 = *v34;
          v36 = *v33;
          if (v35 < v36)
            break;
          if (v36 < v35)
            return std::__tree<std::u16string_view>::__find_equal<std::u16string_view>((uint64_t)a1, a3, a5, a6);
          ++v34;
          ++v33;
          if (!--v32)
            goto LABEL_54;
        }
      }
      else
      {
LABEL_54:
        if (v31 <= a6)
          return std::__tree<std::u16string_view>::__find_equal<std::u16string_view>((uint64_t)a1, a3, a5, a6);
      }
    }
    if (v20)
    {
      *a3 = a4;
    }
    else
    {
      *a3 = a2;
      return a2 + 1;
    }
    return a4;
  }
LABEL_21:
  if (v6 < a6)
    goto LABEL_22;
LABEL_41:
  *a3 = a2;
  *a4 = a2;
  return a4;
}

_QWORD *std::__tree<std::u16string_view>::__find_equal<std::u16string_view>(uint64_t a1, _QWORD *a2, unsigned __int16 *a3, unint64_t a4)
{
  _QWORD *result;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  unsigned __int16 *v10;
  uint64_t v11;
  unsigned __int16 *v12;
  unsigned int v13;
  unsigned int v14;
  unsigned __int16 *v15;
  unsigned __int16 *v16;
  unsigned int v17;
  unsigned int v18;

  v6 = *(_QWORD **)(a1 + 8);
  result = (_QWORD *)(a1 + 8);
  v5 = v6;
  if (v6)
  {
    while (1)
    {
      v7 = v5;
      v8 = v5[5];
      v9 = v8 >= a4 ? a4 : v8;
      if (v9)
        break;
LABEL_10:
      if (v8 <= a4)
      {
LABEL_13:
        if (v9)
        {
          v15 = (unsigned __int16 *)v7[4];
          v16 = a3;
          while (1)
          {
            v17 = *v15;
            v18 = *v16;
            if (v17 < v18)
              break;
            if (v18 < v17)
              goto LABEL_22;
            ++v15;
            ++v16;
            if (!--v9)
              goto LABEL_18;
          }
        }
        else
        {
LABEL_18:
          if (v8 >= a4)
            goto LABEL_22;
        }
        result = v7 + 1;
        v5 = (_QWORD *)v7[1];
        if (!v5)
          goto LABEL_22;
      }
      else
      {
LABEL_11:
        v5 = (_QWORD *)*v7;
        result = v7;
        if (!*v7)
          goto LABEL_22;
      }
    }
    v10 = (unsigned __int16 *)v7[4];
    v11 = v9;
    v12 = a3;
    while (1)
    {
      v13 = *v12;
      v14 = *v10;
      if (v13 < v14)
        goto LABEL_11;
      if (v14 < v13)
        goto LABEL_13;
      ++v12;
      ++v10;
      if (!--v11)
        goto LABEL_10;
    }
  }
  v7 = result;
LABEL_22:
  *a2 = v7;
  return result;
}

uint64_t matlm_getSurfaceFormGrammemes(uint64_t a1)
{
  return *(_QWORD *)(npc<morphun::analysis::tokenattributes::LemmaMapping const>(a1) + 8);
}

uint64_t npc<morphun::analysis::tokenattributes::LemmaMapping const>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4C74FC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void __clang_call_terminate(void *a1)
{
  __cxa_begin_catch(a1);
  std::terminate();
}

uint64_t matlm_getLemmaGrammemes(uint64_t a1)
{
  return *(_QWORD *)(npc<morphun::analysis::tokenattributes::LemmaMapping const>(a1) + 16);
}

CFStringRef matlm_createLemma(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  const UniChar *v3;
  const UniChar *v4;
  int v5;
  const UniChar *v6;
  CFIndex v7;

  v1 = npc<morphun::analysis::tokenattributes::LemmaMapping const>(a1);
  v4 = *(const UniChar **)(v1 + 24);
  v2 = v1 + 24;
  v3 = v4;
  v5 = *(char *)(v2 + 23);
  if (v5 >= 0)
    v6 = (const UniChar *)v2;
  else
    v6 = v3;
  if (v5 >= 0)
    v7 = *(unsigned __int8 *)(v2 + 23);
  else
    v7 = *(_QWORD *)(v2 + 8);
  return CFStringCreateWithCharacters(0, v6, v7);
}

void morphun::grammar::synthesis::RuGrammarSynthesizer_RuDisplayFunction::~RuGrammarSynthesizer_RuDisplayFunction(morphun::grammar::synthesis::RuGrammarSynthesizer_RuDisplayFunction *this)
{
  uint64_t v2;

  icu4cxx::UnicodeSet::~UnicodeSet((morphun::grammar::synthesis::RuGrammarSynthesizer_RuDisplayFunction *)((char *)this + 48));
  morphun::grammar::ml::Inflector::~Inflector((morphun::grammar::synthesis::RuGrammarSynthesizer_RuDisplayFunction *)((char *)this + 16));
  v2 = *((_QWORD *)this + 1);
  *((_QWORD *)this + 1) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
}

{
  morphun::grammar::synthesis::RuGrammarSynthesizer_RuDisplayFunction::~RuGrammarSynthesizer_RuDisplayFunction(this);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::grammar::synthesis::RuGrammarSynthesizer_RuDisplayFunction::getDisplayValue(uint64_t *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  __int128 v8;
  uint64_t v9;
  std::basic_string<char16_t> *v10;
  int v11;
  std::basic_string<char16_t> *v12;
  int v13;
  uint64_t v14;
  morphun::grammar::synthesis::GrammemeConstants *v16;
  std::basic_string<char16_t>::size_type size;
  uint64_t v18;
  std::basic_string<char16_t>::size_type v19;
  uint64_t v20;
  int v21;
  unsigned __int16 *v22;
  std::basic_string<char16_t> *v23;
  const std::basic_string<char16_t> *v24;
  uint64_t v25;
  std::basic_string<char16_t>::size_type v26;
  uint64_t v27;
  int v28;
  unsigned __int16 *v29;
  std::basic_string<char16_t> *v30;
  std::basic_string<char16_t>::size_type v31;
  int v32;
  int v33;
  int v34;
  int v35;
  char v36;
  uint64_t v37;
  _QWORD *v38;
  int v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  morphun::util::LocaleUtils *CombinedBinaryType;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  int v52;
  std::basic_string<char16_t>::size_type v53;
  int v54;
  std::basic_string<char16_t>::size_type v55;
  const std::basic_string<char16_t>::value_type *v56;
  std::basic_string<char16_t>::size_type v57;
  int v58;
  std::basic_string<char16_t>::size_type v59;
  const std::basic_string<char16_t>::value_type *v60;
  _QWORD *v61;
  uint64_t v62;
  std::basic_string<char16_t> *v63;
  std::basic_string<char16_t>::size_type v64;
  std::basic_string<char16_t>::size_type v65;
  std::basic_string<char16_t> *v66;
  std::basic_string<char16_t>::size_type v67;
  std::basic_string<char16_t> *v68;
  int v69;
  int v70;
  uint64_t v71;
  BOOL v72;
  int32_t v73;
  __int128 v74;
  uint64_t v75;
  std::basic_string<char16_t> *v76;
  int32_t v77;
  std::basic_string<char16_t> *v78;
  std::basic_string<char16_t>::size_type v79;
  uint64_t v80;
  char v81;
  std::basic_string<char16_t> *p_p;
  std::basic_string<char16_t> *v83;
  std::basic_string<char16_t>::value_type v84;
  std::basic_string<char16_t> *v85;
  std::basic_string<char16_t> *v86;
  std::basic_string<char16_t>::size_type v87;
  int v88;
  __int128 v89;
  uint64_t v90;
  std::basic_string<char16_t> *v91;
  int32_t v92;
  const std::basic_string<char16_t>::value_type *v93;
  std::basic_string<char16_t>::size_type v94;
  BOOL v95;
  std::basic_string<char16_t> *v96;
  const std::basic_string<char16_t>::value_type *v97;
  char v98;
  std::basic_string<char16_t> *v99;
  uint64_t v100;
  int v101;
  int v102;
  std::basic_string<char16_t> *v104;
  std::basic_string<char16_t>::size_type v105;
  std::basic_string<char16_t> *v106;
  std::basic_string<char16_t>::size_type v107;
  std::basic_string<char16_t> *v108;
  std::basic_string<char16_t>::size_type v109;
  std::basic_string<char16_t> *v110;
  std::basic_string<char16_t>::size_type v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  unsigned __int16 *v115;
  std::basic_string<char16_t>::size_type v116;
  std::basic_string<char16_t> *v117;
  uint64_t *v118;
  uint64_t v119;
  int v120;
  unsigned __int16 *v121;
  std::basic_string<char16_t>::size_type v122;
  std::basic_string<char16_t> *v123;
  char v124;
  uint64_t v125;
  int v126;
  unsigned __int16 *v127;
  std::basic_string<char16_t>::size_type v128;
  std::basic_string<char16_t> *v129;
  uint64_t v130;
  int v131;
  unsigned __int16 *v132;
  std::basic_string<char16_t>::size_type v133;
  std::basic_string<char16_t> *v134;
  uint64_t v135;
  int v136;
  unsigned __int16 *v137;
  std::basic_string<char16_t>::size_type v138;
  std::basic_string<char16_t> *v139;
  uint64_t v140;
  int v141;
  unsigned __int16 *v142;
  std::basic_string<char16_t>::size_type v143;
  std::basic_string<char16_t> *v144;
  uint64_t v145;
  int v146;
  unsigned __int16 *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  int v151;
  unsigned __int16 *v152;
  std::basic_string<char16_t>::size_type v153;
  std::basic_string<char16_t> *v154;
  _QWORD *v155;
  uint64_t v156;
  int v157;
  unsigned __int16 *v158;
  uint64_t v159;
  uint64_t v160;
  int v161;
  unsigned __int16 *v162;
  std::basic_string<char16_t>::size_type v163;
  std::basic_string<char16_t> *v164;
  _QWORD *v165;
  uint64_t v166;
  int v167;
  unsigned __int16 *v168;
  std::basic_string<char16_t>::size_type v169;
  std::basic_string<char16_t> *v170;
  uint64_t v171;
  int v172;
  unsigned __int16 *v173;
  uint64_t v174;
  uint64_t v175;
  int v176;
  unsigned __int16 *v177;
  std::basic_string<char16_t>::size_type v178;
  std::basic_string<char16_t> *v179;
  _QWORD *v180;
  uint64_t v181;
  uint64_t v182;
  int v183;
  unsigned __int16 *v184;
  std::basic_string<char16_t> *v185;
  std::basic_string<char16_t>::size_type v186;
  uint64_t v187;
  unsigned int v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  std::basic_string<char16_t>::size_type v193;
  std::basic_string<char16_t> *v194;
  std::basic_string<char16_t>::size_type v195;
  unsigned __int8 v196;
  std::mutex *v197;
  char *v198;
  int32_t v199;
  uint64_t v200;
  int v201;
  uint64_t v202;
  unsigned __int16 *v203;
  unint64_t v204;
  std::basic_string<char16_t>::value_type *v205;
  unint64_t v206;
  unint64_t v207;
  BOOL v208;
  unint64_t v212;
  unint64_t v213;
  BOOL v215;
  uint64_t v216;
  __int128 v217;
  std::basic_string<char16_t>::size_type v218;
  std::basic_string<char16_t> *v219;
  std::basic_string<char16_t>::value_type v220;
  BOOL v221;
  std::basic_string<char16_t> *v222;
  uint64_t v223;
  morphun::exception::NullPointerException *exception;
  morphun::exception::NullPointerException *v225;
  uint64_t v226;
  morphun::exception::NullPointerException *v227;
  std::basic_string<char16_t>::size_type v228;
  std::basic_string<char16_t> *v229;
  std::basic_string<char16_t> *v230;
  std::basic_string<char16_t> *v231;
  std::basic_string<char16_t> *v232[2];
  _QWORD *v233;
  int v234;
  _QWORD *v235;
  __int128 v236;
  uint64_t v237;
  std::basic_string<char16_t> v238;
  char v239;
  std::basic_string<char16_t> v240;
  _QWORD v241[2];
  std::basic_string<char16_t> v242;
  std::basic_string<char16_t> v243;
  std::basic_string<char16_t> v244;
  std::basic_string<char16_t> v245;
  std::basic_string<char16_t> v246;
  std::basic_string<char16_t> v247;
  uint64_t (**v248)(morphun::Object *__hidden);
  std::basic_string<char16_t> v249;
  _QWORD v250[3];
  std::basic_string<char16_t> v251;
  std::basic_string<char16_t> __str;
  std::string __p;
  char v254;
  uint64_t v255;
  std::basic_string<char16_t> *v256;
  std::basic_string<char16_t> v257;
  std::basic_string<char16_t> v258;
  std::basic_string<char16_t> v259;
  std::basic_string<char16_t> v260;
  std::basic_string<char16_t> v261;
  __int128 v262;

  *((_QWORD *)&v262 + 1) = *MEMORY[0x1E0C80C00];
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 != *(_QWORD *)(a2 + 16))
  {
    v248 = &off_1E866B6A0;
    if (*(char *)(v4 + 31) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v249, *(const std::basic_string<char16_t>::value_type **)(v4 + 8), *(_QWORD *)(v4 + 16));
    }
    else
    {
      v8 = *(_OWORD *)(v4 + 8);
      v249.__r_.__value_.__r.__words[2] = *(_QWORD *)(v4 + 24);
      *(_OWORD *)&v249.__r_.__value_.__l.__data_ = v8;
    }
    std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100](v250, v4 + 32);
    if (!*(_QWORD *)(a3 + 16)
      || ((v249.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? (v10 = &v249)
        : (v10 = (std::basic_string<char16_t> *)v249.__r_.__value_.__r.__words[0]),
          (v249.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? (v11 = HIBYTE(v249.__r_.__value_.__r.__words[2]))
        : (v11 = v249.__r_.__value_.__r.__words[1]),
          !morphun::util::UnicodeSetUtils::containsSome((_QWORD *)(a1[5] + 488), (uint64_t)v10, v11)
       || ((v249.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
         ? (v12 = &v249)
         : (v12 = (std::basic_string<char16_t> *)v249.__r_.__value_.__r.__words[0]),
           (v249.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
         ? (v13 = HIBYTE(v249.__r_.__value_.__r.__words[2]))
         : (v13 = v249.__r_.__value_.__r.__words[1]),
           morphun::util::UnicodeSetUtils::containsSome(a1 + 6, (uint64_t)v12, v13))))
    {
      v14 = operator new();
      v9 = v14;
      *(_QWORD *)v14 = &off_1E866B6A0;
      if (SHIBYTE(v249.__r_.__value_.__r.__words[2]) < 0)
        std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(v14 + 8), v249.__r_.__value_.__l.__data_, v249.__r_.__value_.__l.__size_);
      else
        *(std::basic_string<char16_t> *)(v14 + 8) = v249;
      std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100]((_QWORD *)(v9 + 32), (uint64_t)v250);
LABEL_25:
      return v9;
    }
    morphun::grammar::synthesis::getFeatureValue(&v247, a3, a1[8]);
    morphun::grammar::synthesis::getFeatureValue(&v246, a3, a1[9]);
    morphun::grammar::synthesis::getFeatureValue(&v245, a3, a1[10]);
    morphun::grammar::synthesis::getFeatureValue(&v244, a3, a1[11]);
    morphun::grammar::synthesis::getFeatureValue(&v243, a3, a1[12]);
    size = HIBYTE(v247.__r_.__value_.__r.__words[2]);
    if ((v247.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      size = v247.__r_.__value_.__l.__size_;
    if (!size)
    {
      v24 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::CASE_NOMINATIVE(v16);
      goto LABEL_64;
    }
    v18 = morphun::grammar::synthesis::GrammemeConstants::CASE_ABLATIVE(v16);
    v19 = HIBYTE(v247.__r_.__value_.__r.__words[2]);
    if ((v247.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v19 = v247.__r_.__value_.__l.__size_;
    v20 = *(unsigned __int8 *)(v18 + 23);
    v21 = (char)v20;
    if ((v20 & 0x80u) != 0)
      v20 = *(_QWORD *)(v18 + 8);
    if (v19 == v20)
    {
      if (!v19)
      {
LABEL_43:
        v24 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::CASE_INSTRUMENTAL((morphun::grammar::synthesis::GrammemeConstants *)v18);
        goto LABEL_64;
      }
      if (v21 >= 0)
        v22 = (unsigned __int16 *)v18;
      else
        v22 = *(unsigned __int16 **)v18;
      v23 = &v247;
      if ((v247.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v23 = (std::basic_string<char16_t> *)v247.__r_.__value_.__r.__words[0];
      while (*v22 == (unsigned __int16)v23->__r_.__value_.__s.__data_[0])
      {
        v23 = (std::basic_string<char16_t> *)((char *)v23 + 2);
        ++v22;
        if (!--v19)
          goto LABEL_43;
      }
    }
    v25 = morphun::grammar::synthesis::GrammemeConstants::CASE_LOCATIVE((morphun::grammar::synthesis::GrammemeConstants *)v18);
    v26 = v247.__r_.__value_.__l.__size_;
    if ((v247.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v26 = HIBYTE(v247.__r_.__value_.__r.__words[2]);
    v27 = *(unsigned __int8 *)(v25 + 23);
    v28 = (char)v27;
    if ((v27 & 0x80u) != 0)
      v27 = *(_QWORD *)(v25 + 8);
    if (v26 != v27)
      goto LABEL_65;
    if (v26)
    {
      if (v28 >= 0)
        v29 = (unsigned __int16 *)v25;
      else
        v29 = *(unsigned __int16 **)v25;
      v30 = &v247;
      if ((v247.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v30 = (std::basic_string<char16_t> *)v247.__r_.__value_.__r.__words[0];
      v31 = v26 - 1;
      do
      {
        v33 = (unsigned __int16)v30->__r_.__value_.__s.__data_[0];
        v30 = (std::basic_string<char16_t> *)((char *)v30 + 2);
        v32 = v33;
        v35 = *v29++;
        v34 = v35;
        v208 = v31-- != 0;
        v36 = v208;
      }
      while (v34 == v32 && (v36 & 1) != 0);
      if (v34 != v32)
        goto LABEL_65;
    }
    v24 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::CASE_PREPOSITIONAL((morphun::grammar::synthesis::GrammemeConstants *)v25);
LABEL_64:
    std::basic_string<char16_t>::operator=(&v247, v24);
LABEL_65:
    memset(&v242, 0, sizeof(v242));
    v37 = npc<morphun::Tokenizer>(a1[1]);
    v38 = (_QWORD *)(*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(_QWORD *)v37 + 24))(v37, &v249);
    npc<morphun::TokenChain>((uint64_t)v38);
    v39 = a4 ^ 1;
    v40 = *(_OWORD *)(v38 + 1);
    v41 = v38[2];
    if (v41)
      v42 = *(_QWORD *)(v41 + 80);
    else
      v42 = 0;
    v233 = v38;
    while (1)
    {
      v237 = *((_QWORD *)&v40 + 1);
      v43 = v40;
      if (v42 == (_QWORD)v40)
        break;
      if (*(_BYTE *)(v40 + 64) && !uset_containsAllCodePoints())
      {
        v39 = 1;
        break;
      }
      npc<morphun::Token const>(v43);
      *((_QWORD *)&v40 + 1) = v237;
      *(_QWORD *)&v40 = *(_QWORD *)(v43 + 80);
    }
    if ((*(int (**)(_QWORD *))(*v38 + 32))(v38) > 6)
      v44 = 1;
    else
      v44 = v39;
    v234 = v44;
    CombinedBinaryType = (morphun::util::LocaleUtils *)(*(uint64_t (**)(_QWORD *))(*v38 + 32))(v38);
    v46 = v38[2];
    if (v46)
      v47 = *(_QWORD *)(v46 + 80);
    else
      v47 = 0;
    v48 = v234;
    if ((_DWORD)CombinedBinaryType == 1)
      v48 = 1;
    v241[0] = v47;
    v241[1] = v46;
    if (v48 == 1)
    {
      while (1)
      {
        if (v241[0] == v38[1] || (morphun::TokenIterator::operator--(v241), v49 = v241[0], v241[0] == v38[1]))
        {
          v124 = HIBYTE(v242.__r_.__value_.__r.__words[2]);
          goto LABEL_516;
        }
        if (*(char *)(v241[0] + 39) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(&v240, *(const std::basic_string<char16_t>::value_type **)(v241[0] + 16), *(_QWORD *)(v241[0] + 24));
          v49 = v241[0];
        }
        else
        {
          v240 = *(std::basic_string<char16_t> *)(v241[0] + 16);
        }
        v50 = *(_QWORD *)(v49 + 72);
        if (!v50)
        {
          exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
          morphun::exception::NullPointerException::NullPointerException(exception);
        }
        v51 = (_QWORD *)(v50 + 16);
        v52 = *(char *)(v50 + 39);
        if (v52 < 0)
        {
          if (*(_QWORD *)(v50 + 24) != 1)
            goto LABEL_109;
          v51 = (_QWORD *)*v51;
        }
        else if (v52 != 1)
        {
          goto LABEL_109;
        }
        if (*(_WORD *)v51 == 45)
        {
          morphun::TokenIterator::operator--(v241);
          v54 = *(char *)(v241[0] + 39);
          v55 = v54 >= 0 ? v241[0] + 16 : *(_QWORD *)(v241[0] + 16);
          v56 = v54 >= 0
              ? (const std::basic_string<char16_t>::value_type *)*(unsigned __int8 *)(v241[0] + 39)
              : *(const std::basic_string<char16_t>::value_type **)(v241[0] + 24);
          std::basic_string<char16_t>::insert(&v240, v55, v56, v53);
          if (v241[0] != v38[1])
          {
            morphun::TokenIterator::operator--(v241);
            v58 = *(char *)(v241[0] + 39);
            if (v58 >= 0)
              v59 = v241[0] + 16;
            else
              v59 = *(_QWORD *)(v241[0] + 16);
            if (v58 >= 0)
              v60 = (const std::basic_string<char16_t>::value_type *)*(unsigned __int8 *)(v241[0] + 39);
            else
              v60 = *(const std::basic_string<char16_t>::value_type **)(v241[0] + 24);
            std::basic_string<char16_t>::insert(&v240, v59, v60, v57);
          }
        }
LABEL_109:
        v61 = (_QWORD *)a1[5];
        v62 = v61[1];
        if ((v240.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v63 = &v240;
        else
          v63 = (std::basic_string<char16_t> *)v240.__r_.__value_.__r.__words[0];
        if ((v240.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v64 = HIBYTE(v240.__r_.__value_.__r.__words[2]);
        else
          v64 = v240.__r_.__value_.__l.__size_;
        if ((morphun::analysis::stemmer::RussianExposableMorphology::isInflectable(a1[5], (unsigned __int16 *)v63, v64) & 1) == 0)
        {
          if (SHIBYTE(v240.__r_.__value_.__r.__words[2]) < 0)
            std::basic_string<char16_t>::__init_copy_ctor_external(&v238, v240.__r_.__value_.__l.__data_, v240.__r_.__value_.__l.__size_);
          else
            v238 = v240;
          v239 = 1;
LABEL_206:
          v93 = (const std::basic_string<char16_t>::value_type *)HIBYTE(v238.__r_.__value_.__r.__words[2]);
          v94 = v238.__r_.__value_.__l.__size_;
          v95 = (v238.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0;
          if ((v238.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v96 = &v238;
          else
            v96 = (std::basic_string<char16_t> *)v238.__r_.__value_.__r.__words[0];
LABEL_209:
          if (v95)
            v97 = (const std::basic_string<char16_t>::value_type *)v94;
          else
            v97 = v93;
          CombinedBinaryType = (morphun::util::LocaleUtils *)std::basic_string<char16_t>::insert(&v242, (std::basic_string<char16_t>::size_type)v96, v97, v65);
          v98 = 0;
          if (v239 && SHIBYTE(v238.__r_.__value_.__r.__words[2]) < 0)
          {
            operator delete(v238.__r_.__value_.__l.__data_);
            v98 = 0;
          }
          goto LABEL_220;
        }
        v255 = 0;
        if ((v240.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v66 = &v240;
        else
          v66 = (std::basic_string<char16_t> *)v240.__r_.__value_.__r.__words[0];
        if ((v240.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v67 = HIBYTE(v240.__r_.__value_.__r.__words[2]);
        else
          v67 = v240.__r_.__value_.__l.__size_;
        CombinedBinaryType = (morphun::util::LocaleUtils *)morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v62, (uint64_t)&v255, (const UChar *)v66, v67);
        if (!v255
          || ((v240.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
            ? (v68 = &v240)
            : (v68 = (std::basic_string<char16_t> *)v240.__r_.__value_.__r.__words[0]),
              (v240.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
            ? (v69 = HIBYTE(v240.__r_.__value_.__r.__words[2]))
            : (v69 = v240.__r_.__value_.__r.__words[1]),
              (v70 = morphun::util::StringViewUtils::codePointAt((uint64_t)v68, v69, 0),
               CombinedBinaryType = (morphun::util::LocaleUtils *)MEMORY[0x1D179D640](),
               v70 == (_DWORD)CombinedBinaryType)
           && (v61[44] & ~v255) != 0
           && (v61[43] & ~v255) != 0))
        {
          LOBYTE(v238.__r_.__value_.__l.__data_) = 0;
          v239 = 0;
          goto LABEL_215;
        }
        if ((v61[43] & ~v255) == 0 || (v71 = v61[49] & v255, v71 == v61[48]) || v71 == v61[45])
        {
          v72 = 0;
        }
        else
        {
          if (SHIBYTE(v243.__r_.__value_.__r.__words[2]) < 0)
          {
            if (v243.__r_.__value_.__l.__size_ == 11)
            {
              v99 = (std::basic_string<char16_t> *)v243.__r_.__value_.__r.__words[0];
LABEL_232:
              v100 = 0;
              do
              {
                v101 = (unsigned __int16)v99->__r_.__value_.__s.__data_[v100];
                v102 = (unsigned __int16)aProperNoun[v100];
                v72 = v102 != v101;
              }
              while (v102 == v101 && v100++ != 10);
              goto LABEL_136;
            }
          }
          else if (SHIBYTE(v243.__r_.__value_.__r.__words[2]) == 11)
          {
            v99 = &v243;
            goto LABEL_232;
          }
          v72 = 1;
        }
LABEL_136:
        memset(&v257, 0, sizeof(v257));
        v73 = HIBYTE(v240.__r_.__value_.__r.__words[2]);
        v74 = *(_OWORD *)&v240.__r_.__value_.__l.__data_;
        v75 = morphun::util::LocaleUtils::RUSSIAN(CombinedBinaryType);
        if ((v73 & 0x80u) == 0)
          v76 = &v240;
        else
          v76 = (std::basic_string<char16_t> *)v74;
        if ((v73 & 0x80u) == 0)
          v77 = v73;
        else
          v77 = DWORD2(v74);
        morphun::util::StringViewUtils::lowercase((uint64_t)&v257, (const UChar *)v76, v77, v75);
        if ((v257.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v78 = &v257;
        else
          v78 = (std::basic_string<char16_t> *)v257.__r_.__value_.__r.__words[0];
        if ((v257.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v79 = HIBYTE(v257.__r_.__value_.__r.__words[2]);
        else
          v79 = v257.__r_.__value_.__l.__size_;
        if (SHIBYTE(v247.__r_.__value_.__r.__words[2]) < 0)
          std::basic_string<char16_t>::__init_copy_ctor_external(&v258, v247.__r_.__value_.__l.__data_, v247.__r_.__value_.__l.__size_);
        else
          v258 = v247;
        if (SHIBYTE(v246.__r_.__value_.__r.__words[2]) < 0)
          std::basic_string<char16_t>::__init_copy_ctor_external(&v259, v246.__r_.__value_.__l.__data_, v246.__r_.__value_.__l.__size_);
        else
          v259 = v246;
        if (SHIBYTE(v245.__r_.__value_.__r.__words[2]) < 0)
          std::basic_string<char16_t>::__init_copy_ctor_external(&v260, v245.__r_.__value_.__l.__data_, v245.__r_.__value_.__l.__size_);
        else
          v260 = v245;
        if (SHIBYTE(v244.__r_.__value_.__r.__words[2]) < 0)
          std::basic_string<char16_t>::__init_copy_ctor_external(&v261, v244.__r_.__value_.__l.__data_, v244.__r_.__value_.__l.__size_);
        else
          v261 = v244;
        memset(&__str, 0, sizeof(__str));
        v251.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&__str;
        LOBYTE(v251.__r_.__value_.__r.__words[1]) = 0;
        __str.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x60uLL);
        __str.__r_.__value_.__l.__size_ = __str.__r_.__value_.__r.__words[0];
        __str.__r_.__value_.__r.__words[2] = __str.__r_.__value_.__r.__words[0] + 96;
        __str.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&__str.__r_.__value_.__r.__words[2], (__int128 *)&v258, &v262, (std::basic_string<char16_t> *)__str.__r_.__value_.__l.__data_);
        memset(&v251, 0, sizeof(v251));
        morphun::dialog::DictionaryLookupInflector::inflectWord((uint64_t)&__p, (uint64_t)v61, v78, v79, &__str, &v251);
        v256 = &v251;
        std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v256);
        v251.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&__str;
        std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v251);
        v80 = 0;
        v38 = v233;
        do
        {
          if (SHIBYTE(v261.__r_.__value_.__r.__words[v80 + 2]) < 0)
            operator delete(*(void **)((char *)&v261.__r_.__value_.__l.__data_ + v80 * 8));
          v80 -= 3;
        }
        while (v80 != -12);
        memset(&v258, 0, sizeof(v258));
        if (v254)
          v81 = 1;
        else
          v81 = v72;
        if ((v81 & 1) != 0)
        {
          if (v254)
            p_p = (std::basic_string<char16_t> *)&__p;
          else
            p_p = &v240;
          std::basic_string<char16_t>::operator=(&v258, p_p);
          if ((v240.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v83 = &v240;
          else
            v83 = (std::basic_string<char16_t> *)v240.__r_.__value_.__r.__words[0];
          v84 = v83->__r_.__value_.__s.__data_[0];
          if ((v258.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v85 = &v258;
          else
            v85 = (std::basic_string<char16_t> *)v258.__r_.__value_.__r.__words[0];
          v85->__r_.__value_.__s.__data_[0] = v84;
          if ((v240.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v86 = &v240;
          else
            v86 = (std::basic_string<char16_t> *)v240.__r_.__value_.__r.__words[0];
          if ((v240.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v87 = HIBYTE(v240.__r_.__value_.__r.__words[2]);
          else
            v87 = v240.__r_.__value_.__l.__size_;
          CombinedBinaryType = (morphun::util::LocaleUtils *)morphun::util::StringViewUtils::isAllUpperCase((uint64_t)v86, v87);
          if ((_DWORD)CombinedBinaryType)
          {
            memset(&__str, 0, sizeof(__str));
            v88 = HIBYTE(v258.__r_.__value_.__r.__words[2]);
            v89 = *(_OWORD *)&v258.__r_.__value_.__l.__data_;
            v90 = morphun::util::LocaleUtils::RUSSIAN(CombinedBinaryType);
            v91 = (v88 & 0x80u) == 0 ? &v258 : (std::basic_string<char16_t> *)v89;
            v92 = (v88 & 0x80u) == 0 ? v88 : DWORD2(v89);
            morphun::util::StringViewUtils::uppercase((uint64_t)&__str, (const UChar *)v91, v92, v90);
            CombinedBinaryType = (morphun::util::LocaleUtils *)std::basic_string<char16_t>::operator=(&v258, &__str);
            if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
              operator delete(__str.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v258.__r_.__value_.__r.__words[2]) < 0)
          {
            std::basic_string<char16_t>::__init_copy_ctor_external(&v238, v258.__r_.__value_.__l.__data_, v258.__r_.__value_.__l.__size_);
            v239 = 1;
            if (SHIBYTE(v258.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v258.__r_.__value_.__l.__data_);
          }
          else
          {
            v238 = v258;
            v239 = 1;
          }
        }
        else
        {
          LOBYTE(v238.__r_.__value_.__l.__data_) = 0;
          v239 = 0;
        }
        if (v254 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        if (SHIBYTE(v257.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v257.__r_.__value_.__l.__data_);
        if (v239)
          goto LABEL_206;
LABEL_215:
        if (v234)
        {
          v93 = (const std::basic_string<char16_t>::value_type *)HIBYTE(v240.__r_.__value_.__r.__words[2]);
          v94 = v240.__r_.__value_.__l.__size_;
          v95 = (v240.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0;
          if ((v240.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v96 = &v240;
          else
            v96 = (std::basic_string<char16_t> *)v240.__r_.__value_.__r.__words[0];
          goto LABEL_209;
        }
        v98 = 1;
LABEL_220:
        if (SHIBYTE(v240.__r_.__value_.__r.__words[2]) < 0)
        {
          operator delete(v240.__r_.__value_.__l.__data_);
          if ((v98 & 1) != 0)
            break;
        }
        else if ((v98 & 1) != 0)
        {
          break;
        }
      }
    }
    v104 = &v247;
    if ((v247.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v104 = (std::basic_string<char16_t> *)v247.__r_.__value_.__r.__words[0];
    v231 = v104;
    if ((v247.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v105 = HIBYTE(v247.__r_.__value_.__r.__words[2]);
    else
      v105 = v247.__r_.__value_.__l.__size_;
    if ((v246.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v106 = &v246;
    else
      v106 = (std::basic_string<char16_t> *)v246.__r_.__value_.__r.__words[0];
    if ((v246.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v107 = HIBYTE(v246.__r_.__value_.__r.__words[2]);
    else
      v107 = v246.__r_.__value_.__l.__size_;
    if ((v245.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v108 = &v245;
    else
      v108 = (std::basic_string<char16_t> *)v245.__r_.__value_.__r.__words[0];
    if ((v245.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v109 = HIBYTE(v245.__r_.__value_.__r.__words[2]);
    else
      v109 = v245.__r_.__value_.__l.__size_;
    if ((v244.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v110 = &v244;
    else
      v110 = (std::basic_string<char16_t> *)v244.__r_.__value_.__r.__words[0];
    if ((v244.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v111 = HIBYTE(v244.__r_.__value_.__r.__words[2]);
    else
      v111 = v244.__r_.__value_.__l.__size_;
    memset(&v238, 0, sizeof(v238));
    memset(&v257, 0, sizeof(v257));
    v230 = (std::basic_string<char16_t> *)HIBYTE(v249.__r_.__value_.__r.__words[2]);
    v228 = v249.__r_.__value_.__l.__size_;
    v229 = (std::basic_string<char16_t> *)v249.__r_.__value_.__r.__words[0];
    v235 = (_QWORD *)a1[5];
    v112 = morphun::grammar::synthesis::GrammemeConstants::CASE_GENITIVE(CombinedBinaryType);
    v113 = *(unsigned __int8 *)(v112 + 23);
    v114 = (char)v113;
    if ((v113 & 0x80u) != 0)
      v113 = *(_QWORD *)(v112 + 8);
    if (v105 == v113)
    {
      if (!v105)
      {
LABEL_273:
        v118 = v235 + 38;
        goto LABEL_341;
      }
      if (v114 >= 0)
        v115 = (unsigned __int16 *)v112;
      else
        v115 = *(unsigned __int16 **)v112;
      v116 = v105;
      v117 = v231;
      while (*v115 == (unsigned __int16)v117->__r_.__value_.__s.__data_[0])
      {
        v117 = (std::basic_string<char16_t> *)((char *)v117 + 2);
        ++v115;
        if (!--v116)
          goto LABEL_273;
      }
    }
    v112 = morphun::grammar::synthesis::GrammemeConstants::CASE_DATIVE((morphun::grammar::synthesis::GrammemeConstants *)v112);
    v119 = *(unsigned __int8 *)(v112 + 23);
    v120 = (char)v119;
    if ((v119 & 0x80u) != 0)
      v119 = *(_QWORD *)(v112 + 8);
    if (v105 == v119)
    {
      if (!v105)
      {
LABEL_284:
        v118 = v235 + 39;
        goto LABEL_341;
      }
      if (v120 >= 0)
        v121 = (unsigned __int16 *)v112;
      else
        v121 = *(unsigned __int16 **)v112;
      v122 = v105;
      v123 = v231;
      while (*v121 == (unsigned __int16)v123->__r_.__value_.__s.__data_[0])
      {
        v123 = (std::basic_string<char16_t> *)((char *)v123 + 2);
        ++v121;
        if (!--v122)
          goto LABEL_284;
      }
    }
    v112 = morphun::grammar::synthesis::GrammemeConstants::CASE_ACCUSATIVE((morphun::grammar::synthesis::GrammemeConstants *)v112);
    v125 = *(unsigned __int8 *)(v112 + 23);
    v126 = (char)v125;
    if ((v125 & 0x80u) != 0)
      v125 = *(_QWORD *)(v112 + 8);
    if (v105 == v125)
    {
      if (!v105)
      {
LABEL_296:
        v118 = v235 + 40;
        goto LABEL_341;
      }
      if (v126 >= 0)
        v127 = (unsigned __int16 *)v112;
      else
        v127 = *(unsigned __int16 **)v112;
      v128 = v105;
      v129 = v231;
      while (*v127 == (unsigned __int16)v129->__r_.__value_.__s.__data_[0])
      {
        v129 = (std::basic_string<char16_t> *)((char *)v129 + 2);
        ++v127;
        if (!--v128)
          goto LABEL_296;
      }
    }
    v112 = morphun::grammar::synthesis::GrammemeConstants::CASE_INSTRUMENTAL((morphun::grammar::synthesis::GrammemeConstants *)v112);
    v130 = *(unsigned __int8 *)(v112 + 23);
    v131 = (char)v130;
    if ((v130 & 0x80u) != 0)
      v130 = *(_QWORD *)(v112 + 8);
    if (v105 == v130)
    {
      if (!v105)
        goto LABEL_318;
      if (v131 >= 0)
        v132 = (unsigned __int16 *)v112;
      else
        v132 = *(unsigned __int16 **)v112;
      v133 = v105;
      v134 = v231;
      while (*v132 == (unsigned __int16)v134->__r_.__value_.__s.__data_[0])
      {
        v134 = (std::basic_string<char16_t> *)((char *)v134 + 2);
        ++v132;
        if (!--v133)
          goto LABEL_318;
      }
    }
    v112 = morphun::grammar::synthesis::GrammemeConstants::CASE_ABLATIVE((morphun::grammar::synthesis::GrammemeConstants *)v112);
    v135 = *(unsigned __int8 *)(v112 + 23);
    v136 = (char)v135;
    if ((v135 & 0x80u) != 0)
      v135 = *(_QWORD *)(v112 + 8);
    if (v105 != v135)
      goto LABEL_319;
    if (v105)
    {
      if (v136 >= 0)
        v137 = (unsigned __int16 *)v112;
      else
        v137 = *(unsigned __int16 **)v112;
      v138 = v105;
      v139 = v231;
      while (*v137 == (unsigned __int16)v139->__r_.__value_.__s.__data_[0])
      {
        v139 = (std::basic_string<char16_t> *)((char *)v139 + 2);
        ++v137;
        if (!--v138)
          goto LABEL_318;
      }
LABEL_319:
      v112 = morphun::grammar::synthesis::GrammemeConstants::CASE_PREPOSITIONAL((morphun::grammar::synthesis::GrammemeConstants *)v112);
      v140 = *(unsigned __int8 *)(v112 + 23);
      v141 = (char)v140;
      if ((v140 & 0x80u) != 0)
        v140 = *(_QWORD *)(v112 + 8);
      if (v105 == v140)
      {
        if (!v105)
          goto LABEL_339;
        if (v141 >= 0)
          v142 = (unsigned __int16 *)v112;
        else
          v142 = *(unsigned __int16 **)v112;
        v143 = v105;
        v144 = v231;
        while (*v142 == (unsigned __int16)v144->__r_.__value_.__s.__data_[0])
        {
          v144 = (std::basic_string<char16_t> *)((char *)v144 + 2);
          ++v142;
          if (!--v143)
            goto LABEL_339;
        }
      }
      v112 = morphun::grammar::synthesis::GrammemeConstants::CASE_LOCATIVE((morphun::grammar::synthesis::GrammemeConstants *)v112);
      v145 = *(unsigned __int8 *)(v112 + 23);
      v146 = (char)v145;
      if ((v145 & 0x80u) != 0)
        v145 = *(_QWORD *)(v112 + 8);
      if (v105 != v145)
      {
LABEL_340:
        v118 = v235 + 37;
LABEL_341:
        v148 = *v118;
        v149 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v112);
        v150 = *(unsigned __int8 *)(v149 + 23);
        v151 = (char)v150;
        if ((v150 & 0x80u) != 0)
          v150 = *(_QWORD *)(v149 + 8);
        if (v107 == v150)
        {
          if (!v107)
          {
LABEL_351:
            v155 = v235 + 36;
            goto LABEL_362;
          }
          if (v151 >= 0)
            v152 = (unsigned __int16 *)v149;
          else
            v152 = *(unsigned __int16 **)v149;
          v153 = v107;
          v154 = v106;
          while (*v152 == (unsigned __int16)v154->__r_.__value_.__s.__data_[0])
          {
            v154 = (std::basic_string<char16_t> *)((char *)v154 + 2);
            ++v152;
            if (!--v153)
              goto LABEL_351;
          }
        }
        v149 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR((morphun::grammar::synthesis::GrammemeConstants *)v149);
        v156 = *(unsigned __int8 *)(v149 + 23);
        v157 = (char)v156;
        if ((v156 & 0x80u) != 0)
          v156 = *(_QWORD *)(v149 + 8);
        if (v107 != v156)
          goto LABEL_363;
        if (v107)
        {
          if (v157 >= 0)
            v158 = (unsigned __int16 *)v149;
          else
            v158 = *(unsigned __int16 **)v149;
          while (*v158 == (unsigned __int16)v106->__r_.__value_.__s.__data_[0])
          {
            v106 = (std::basic_string<char16_t> *)((char *)v106 + 2);
            ++v158;
            if (!--v107)
              goto LABEL_361;
          }
LABEL_363:
          v159 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE((morphun::grammar::synthesis::GrammemeConstants *)v149);
          v160 = *(unsigned __int8 *)(v159 + 23);
          v161 = (char)v160;
          if ((v160 & 0x80u) != 0)
            v160 = *(_QWORD *)(v159 + 8);
          if (v109 == v160)
          {
            if (!v109)
            {
LABEL_373:
              v165 = v235 + 29;
              goto LABEL_395;
            }
            if (v161 >= 0)
              v162 = (unsigned __int16 *)v159;
            else
              v162 = *(unsigned __int16 **)v159;
            v163 = v109;
            v164 = v108;
            while (*v162 == (unsigned __int16)v164->__r_.__value_.__s.__data_[0])
            {
              v164 = (std::basic_string<char16_t> *)((char *)v164 + 2);
              ++v162;
              if (!--v163)
                goto LABEL_373;
            }
          }
          v159 = morphun::grammar::synthesis::GrammemeConstants::GENDER_NEUTER((morphun::grammar::synthesis::GrammemeConstants *)v159);
          v166 = *(unsigned __int8 *)(v159 + 23);
          v167 = (char)v166;
          if ((v166 & 0x80u) != 0)
            v166 = *(_QWORD *)(v159 + 8);
          if (v109 == v166)
          {
            if (!v109)
            {
LABEL_384:
              v165 = v235 + 31;
              goto LABEL_395;
            }
            if (v167 >= 0)
              v168 = (unsigned __int16 *)v159;
            else
              v168 = *(unsigned __int16 **)v159;
            v169 = v109;
            v170 = v108;
            while (*v168 == (unsigned __int16)v170->__r_.__value_.__s.__data_[0])
            {
              v170 = (std::basic_string<char16_t> *)((char *)v170 + 2);
              ++v168;
              if (!--v169)
                goto LABEL_384;
            }
          }
          v159 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE((morphun::grammar::synthesis::GrammemeConstants *)v159);
          v171 = *(unsigned __int8 *)(v159 + 23);
          v172 = (char)v171;
          if ((v171 & 0x80u) != 0)
            v171 = *(_QWORD *)(v159 + 8);
          if (v109 != v171)
            goto LABEL_396;
          if (v109)
          {
            if (v172 >= 0)
              v173 = (unsigned __int16 *)v159;
            else
              v173 = *(unsigned __int16 **)v159;
            while (*v173 == (unsigned __int16)v108->__r_.__value_.__s.__data_[0])
            {
              v108 = (std::basic_string<char16_t> *)((char *)v108 + 2);
              ++v173;
              if (!--v109)
                goto LABEL_394;
            }
LABEL_396:
            v174 = morphun::grammar::synthesis::GrammemeConstants::ANIMACY_ANIMATE((morphun::grammar::synthesis::GrammemeConstants *)v159);
            v175 = *(unsigned __int8 *)(v174 + 23);
            v176 = (char)v175;
            if ((v175 & 0x80u) != 0)
              v175 = *(_QWORD *)(v174 + 8);
            if (v111 == v175)
            {
              if (!v111)
              {
LABEL_406:
                v180 = v235 + 32;
                goto LABEL_417;
              }
              if (v176 >= 0)
                v177 = (unsigned __int16 *)v174;
              else
                v177 = *(unsigned __int16 **)v174;
              v178 = v111;
              v179 = v110;
              while (*v177 == (unsigned __int16)v179->__r_.__value_.__s.__data_[0])
              {
                v179 = (std::basic_string<char16_t> *)((char *)v179 + 2);
                ++v177;
                if (!--v178)
                  goto LABEL_406;
              }
            }
            v181 = morphun::grammar::synthesis::GrammemeConstants::ANIMACY_INANIMATE((morphun::grammar::synthesis::GrammemeConstants *)v174);
            v182 = *(unsigned __int8 *)(v181 + 23);
            v183 = (char)v182;
            if ((v182 & 0x80u) != 0)
              v182 = *(_QWORD *)(v181 + 8);
            if (v111 != v182)
              goto LABEL_418;
            if (v111)
            {
              if (v183 >= 0)
                v184 = (unsigned __int16 *)v181;
              else
                v184 = *(unsigned __int16 **)v181;
              while (*v184 == (unsigned __int16)v110->__r_.__value_.__s.__data_[0])
              {
                v110 = (std::basic_string<char16_t> *)((char *)v110 + 2);
                ++v184;
                if (!--v111)
                  goto LABEL_416;
              }
              goto LABEL_418;
            }
LABEL_416:
            v180 = v235 + 33;
LABEL_417:
            v148 |= *v180;
LABEL_418:
            v38 = v233;
            if ((char)v230 >= 0)
              v185 = &v249;
            else
              v185 = v229;
            if ((char)v230 >= 0)
              v186 = (std::basic_string<char16_t>::size_type)v230;
            else
              v186 = v228;
            if (!v186 || !a1[3])
              goto LABEL_504;
            v187 = a1[4];
            if (!v187)
            {
              v225 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
              morphun::exception::NullPointerException::NullPointerException(v225);
            }
            (*(void (**)(std::basic_string<char16_t> *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v187 + 24))(&v258, v187, v148);
            memset(&__p, 0, sizeof(__p));
            v188 = (unsigned __int16)v185->__r_.__value_.__s.__data_[0];
            v189 = 2;
            v190 = 3;
            v191 = 3;
            if (v188 < 0xE000)
              v191 = 0;
            if (v188 >> 11 >= 0x1B)
              v190 = v191;
            if (v188 >= 0x800)
              v189 = v190;
            if (v188 >= 0x80)
              v192 = v189;
            else
              v192 = 1;
            v193 = HIBYTE(v258.__r_.__value_.__r.__words[2]);
            if ((v258.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
              v193 = v258.__r_.__value_.__l.__size_;
            std::string::reserve(&__p, v193 + v192 * v186 + 1);
            morphun::util::StringViewUtils::convert(&__p, (uint64_t)v185, v186);
            std::string::push_back(&__p, 32);
            if ((v258.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              v194 = &v258;
            else
              v194 = (std::basic_string<char16_t> *)v258.__r_.__value_.__r.__words[0];
            if ((v258.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              v195 = HIBYTE(v258.__r_.__value_.__r.__words[2]);
            else
              v195 = v258.__r_.__value_.__l.__size_;
            std::string::append(&__p, (const std::string::value_type *)v194, v195);
            v38 = v233;
            if ((v196 & 1) == 0
            {
              v226 = operator new();
              *(_QWORD *)v226 = 850045863;
              *(_OWORD *)(v226 + 8) = 0u;
              *(_OWORD *)(v226 + 24) = 0u;
              *(_OWORD *)(v226 + 40) = 0u;
              *(_QWORD *)(v226 + 56) = 0;
              morphun::grammar::ml::Inflector::inflect(std::u16string_view,std::basic_string<char16_t> *,long long)const::mutex = v226;
              v38 = v233;
            }
            v197 = (std::mutex *)morphun::grammar::ml::Inflector::inflect(std::u16string_view,std::basic_string<char16_t> *,long long)const::mutex;
            if (!morphun::grammar::ml::Inflector::inflect(std::u16string_view,std::basic_string<char16_t> *,long long)const::mutex)
            {
              v227 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
              morphun::exception::NullPointerException::NullPointerException(v227);
            }
            std::mutex::lock((std::mutex *)morphun::grammar::ml::Inflector::inflect(std::u16string_view,std::basic_string<char16_t> *,long long)const::mutex);
            v198 = (char *)QuasarCPDecTranslator_translate();
            std::mutex::unlock(v197);
            if (v198)
            {
              v199 = strlen(v198);
              morphun::util::StringViewUtils::convert((uint64_t)&v257, v198, v199);
              free(v198);
            }
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
              operator delete(__p.__r_.__value_.__l.__data_);
            if (SHIBYTE(v258.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v258.__r_.__value_.__l.__data_);
            if (v198)
            {
              v200 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(_QWORD *)a1[1] + 24))(a1[1], &v257);
              npc<morphun::TokenChain>(v200);
              v201 = (*(uint64_t (**)(_QWORD *))(*v38 + 40))(v38);
              if (v201 == (*(unsigned int (**)(uint64_t))(*(_QWORD *)v200 + 40))(v200))
              {
                *(_OWORD *)v232 = *(_OWORD *)(v200 + 8);
                v236 = *(_OWORD *)(v38 + 1);
                v202 = *((_QWORD *)&v236 + 1);
                if (!*((_QWORD *)&v236 + 1))
                  goto LABEL_456;
LABEL_455:
                v202 = *(_QWORD *)(v202 + 80);
LABEL_456:
                while (v202 != (_QWORD)v236)
                {
                  if (*(_DWORD *)(v236 + 12) != *(_DWORD *)(v236 + 8)
                    || HIDWORD(v232[0]->__r_.__value_.__r.__words[1]) != LODWORD(v232[0]->__r_.__value_.__r.__words[1]))
                  {
                    v203 = *(unsigned __int16 **)(v236 + 16);
                    if (*(char *)(v236 + 39) < 0)
                    {
                      v204 = *(_QWORD *)(v236 + 24);
                    }
                    else
                    {
                      v203 = (unsigned __int16 *)(v236 + 16);
                      v204 = *(unsigned __int8 *)(v236 + 39);
                    }
                    v205 = (std::basic_string<char16_t>::value_type *)v232[0]->__r_.__value_.__r.__words[2];
                    if ((v232[0][1].__r_.__value_.__r.__words[1] & 0x8000000000000000) != 0)
                    {
                      v206 = v232[0][1].__r_.__value_.__r.__words[0];
                    }
                    else
                    {
                      v205 = &v232[0]->__r_.__value_.__s.__data_[8];
                      v206 = HIBYTE(v232[0][1].__r_.__value_.__r.__words[1]);
                    }
                    v207 = v204 - 3;
                    v208 = v204 >= 3 && v206 >= 3;
                    if (v208 && (v206 < v207 || v206 > v204 + 3))
                      goto LABEL_538;
                    if (v204 >= 4 && v206 >= 4)
                    {
                      if (v204 >= v207)
                        v212 = v204 - 3;
                      else
                        v212 = v204;
                      if (v206 < v207)
                        v207 = v206;
                      if (v207 >= v212)
                        v213 = v212;
                      else
                        v213 = v207;
                      if (v213)
                      {
                        while ((unsigned __int16)*v205 == *v203)
                        {
                          ++v203;
                          ++v205;
                          if (!--v213)
                            goto LABEL_494;
                        }
LABEL_538:
                        memset(&__str, 0, sizeof(__str));
                        (*(void (**)(uint64_t))(*(_QWORD *)v200 + 16))(v200);
                        goto LABEL_508;
                      }
LABEL_494:
                      v215 = v204 > 2 || v204 == v206;
                      if (v212 != v207 || !v215)
                        goto LABEL_538;
                    }
                    else if (v204 <= 2 && v204 != v206)
                    {
                      goto LABEL_538;
                    }
                  }
                  v216 = *(_QWORD *)(npc<morphun::Token const>(v236) + 80);
                  npc<morphun::Token const>((uint64_t)v232[0]);
                  *((_QWORD *)&v217 + 1) = *((_QWORD *)&v236 + 1);
                  *(_QWORD *)&v217 = v216;
                  v236 = v217;
                  *((std::basic_string<char16_t> **)&v217 + 1) = v232[1];
                  *(_QWORD *)&v217 = v232[0][3].__r_.__value_.__l.__size_;
                  *(_OWORD *)v232 = v217;
                  v202 = v38[2];
                  if (v202)
                    goto LABEL_455;
                }
                std::basic_string<char16_t>::operator=(&v238, &v257);
              }
              (*(void (**)(uint64_t))(*(_QWORD *)v200 + 16))(v200);
            }
            else
            {
LABEL_504:
              if (SHIBYTE(v257.__r_.__value_.__r.__words[2]) < 0)
              {
                *v257.__r_.__value_.__l.__data_ = 0;
                v257.__r_.__value_.__l.__size_ = 0;
              }
              else
              {
                v257.__r_.__value_.__s.__data_[0] = 0;
                *((_BYTE *)&v257.__r_.__value_.__s + 23) = 0;
              }
            }
            __str = v238;
            memset(&v238, 0, sizeof(v238));
LABEL_508:
            if (SHIBYTE(v257.__r_.__value_.__r.__words[2]) < 0)
            {
              operator delete(v257.__r_.__value_.__l.__data_);
              if (SHIBYTE(v238.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v238.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v242.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v242.__r_.__value_.__l.__data_);
            v242 = __str;
            v218 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
            v124 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
              v218 = __str.__r_.__value_.__l.__size_;
            if (v218)
            {
LABEL_516:
              if ((v249.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                v219 = &v249;
              else
                v219 = (std::basic_string<char16_t> *)v249.__r_.__value_.__r.__words[0];
              v220 = v219->__r_.__value_.__s.__data_[0];
              v221 = v124 < 0;
              v222 = &v242;
              if (v221)
                v222 = (std::basic_string<char16_t> *)v242.__r_.__value_.__r.__words[0];
              v222->__r_.__value_.__s.__data_[0] = v220;
              v9 = operator new();
              morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue(v9, (__int128 *)&v242, a3);
            }
            else
            {
              v223 = operator new();
              v9 = v223;
              *(_QWORD *)v223 = &off_1E866B6A0;
              if (SHIBYTE(v249.__r_.__value_.__r.__words[2]) < 0)
                std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(v223 + 8), v249.__r_.__value_.__l.__data_, v249.__r_.__value_.__l.__size_);
              else
                *(std::basic_string<char16_t> *)(v223 + 8) = v249;
              std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100]((_QWORD *)(v9 + 32), (uint64_t)v250);
            }
            (*(void (**)(_QWORD *))(*v38 + 16))(v38);
            if (SHIBYTE(v242.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v242.__r_.__value_.__l.__data_);
            if (SHIBYTE(v243.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v243.__r_.__value_.__l.__data_);
            if (SHIBYTE(v244.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v244.__r_.__value_.__l.__data_);
            if (SHIBYTE(v245.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v245.__r_.__value_.__l.__data_);
            if (SHIBYTE(v246.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v246.__r_.__value_.__l.__data_);
            if (SHIBYTE(v247.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v247.__r_.__value_.__l.__data_);
            goto LABEL_25;
          }
LABEL_394:
          v165 = v235 + 30;
LABEL_395:
          v148 |= *v165;
          goto LABEL_396;
        }
LABEL_361:
        v155 = v235 + 35;
LABEL_362:
        v148 |= *v155;
        goto LABEL_363;
      }
      if (v105)
      {
        if (v146 >= 0)
          v147 = (unsigned __int16 *)v112;
        else
          v147 = *(unsigned __int16 **)v112;
        while (*v147 == (unsigned __int16)v231->__r_.__value_.__s.__data_[0])
        {
          v231 = (std::basic_string<char16_t> *)((char *)v231 + 2);
          ++v147;
          if (!--v105)
            goto LABEL_339;
        }
        goto LABEL_340;
      }
LABEL_339:
      v118 = v235 + 42;
      goto LABEL_341;
    }
LABEL_318:
    v118 = v235 + 41;
    goto LABEL_341;
  }
  return 0;
}

void sub_1CB4C8CD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,void *a52,uint64_t a53,int a54,__int16 a55,char a56,char a57,void *a58,uint64_t a59,int a60,__int16 a61,char a62,char a63)
{
  void *a64;
  char a69;
  char a70;
  void *__p;
  char a73;
  uint64_t v73;

  if (a73 < 0)
    operator delete(__p);
  if (*(char *)(v73 - 185) < 0)
    operator delete(*(void **)(v73 - 208));
  if (*(char *)(v73 - 209) < 0)
    operator delete(*(void **)(v73 - 232));
  if (a26 < 0)
    operator delete(a21);
  (*(void (**)(uint64_t))(*(_QWORD *)a18 + 16))(a18);
  if (a39 < 0)
    operator delete(a34);
  if (a45 < 0)
    operator delete(a40);
  if (a51 < 0)
    operator delete(a46);
  if (a57 < 0)
    operator delete(a52);
  if (a63 < 0)
    operator delete(a58);
  if (a69 < 0)
    operator delete(a64);
  _Unwind_Resume(a1);
}

void std::basic_string<char16_t>::__init_copy_ctor_external(std::basic_string<char16_t> *this, const std::basic_string<char16_t>::value_type *__s, std::basic_string<char16_t>::size_type __sz)
{
  std::basic_string<char16_t> *v5;
  std::basic_string<char16_t>::size_type v6;
  std::basic_string<char16_t> *v7;
  uint64_t v8;

  v5 = this;
  if (__sz > 0xA)
  {
    if (__sz >= 0x7FFFFFFFFFFFFFF8)
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    v6 = (__sz & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((__sz | 3) != 0xB)
      v6 = __sz | 3;
    v7 = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v6 + 1);
    v5->__r_.__value_.__l.__size_ = __sz;
    v5->__r_.__value_.__r.__words[2] = v8 | 0x8000000000000000;
    v5->__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v7;
    v5 = v7;
  }
  else
  {
    *((_BYTE *)&this->__r_.__value_.__s + 23) = __sz;
  }
  memmove(v5, __s, 2 * __sz + 2);
}

_QWORD *std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100](_QWORD *a1, uint64_t a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = a1 + 1;
  std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::insert[abi:ne180100]<std::__map_const_iterator<std::__tree_const_iterator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *> *,long>>>((uint64_t)a1, *(_QWORD **)a2, (_QWORD *)(a2 + 8));
  return a1;
}

void sub_1CB4C9118(_Unwind_Exception *a1)
{
  void ***v1;

  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::getFeatureValue(std::basic_string<char16_t> *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;

  v5 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a2, a3);
  if ((_QWORD *)(a2 + 8) == v5)
  {
    a1->__r_.__value_.__r.__words[0] = 0;
    a1->__r_.__value_.__l.__size_ = 0;
    a1->__r_.__value_.__r.__words[2] = 0;
  }
  else if (*((char *)v5 + 127) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a1, (const std::basic_string<char16_t>::value_type *)v5[13], v5[14]);
  }
  else
  {
    *(_OWORD *)&a1->__r_.__value_.__l.__data_ = *(_OWORD *)(v5 + 13);
    a1->__r_.__value_.__r.__words[2] = v5[15];
  }
}

BOOL std::operator==[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>(unsigned __int16 *a1, unsigned __int16 *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned __int16 *v6;
  unsigned __int16 *v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  BOOL v14;
  _BOOL8 result;

  v2 = *((char *)a1 + 23);
  v3 = *((_QWORD *)a1 + 1);
  if (v2 >= 0)
    v3 = *((unsigned __int8 *)a1 + 23);
  v4 = *((unsigned __int8 *)a2 + 23);
  v5 = (char)v4;
  if ((v4 & 0x80u) != 0)
    v4 = *((_QWORD *)a2 + 1);
  if (v3 != v4)
    return 0;
  if (!v3)
    return 1;
  if (v5 >= 0)
    v6 = a2;
  else
    v6 = *(unsigned __int16 **)a2;
  if (v2 >= 0)
    v7 = a1;
  else
    v7 = *(unsigned __int16 **)a1;
  v8 = v3 - 1;
  do
  {
    v10 = *v7++;
    v9 = v10;
    v12 = *v6++;
    v11 = v12;
    v14 = v8-- != 0;
    result = v11 == v9;
  }
  while (v11 == v9 && v14);
  return result;
}

uint64_t npc<morphun::Tokenizer>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4C9268(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::TokenChain>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4C92C0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::basic_string<char16_t> *__cdecl std::basic_string<char16_t>::insert(std::basic_string<char16_t> *this, std::basic_string<char16_t>::size_type __pos, const std::basic_string<char16_t>::value_type *__s, std::basic_string<char16_t>::size_type __n)
{
  std::basic_string<char16_t>::size_type v7;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t> *v9;
  const std::basic_string<char16_t>::value_type *v11;
  std::basic_string<char16_t>::size_type v12;

  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
  {
    size = this->__r_.__value_.__l.__size_;
    v7 = (this->__r_.__value_.__r.__words[2] & 0x7FFFFFFFFFFFFFFFLL) - 1;
  }
  else
  {
    v7 = 10;
    size = HIBYTE(this->__r_.__value_.__r.__words[2]);
  }
  if (v7 - size >= (unint64_t)__s)
  {
    if (__s)
    {
      v9 = this;
      if ((*((_BYTE *)&this->__r_.__value_.__s + 23) & 0x80) != 0)
        v9 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
      if (size)
      {
        if ((unint64_t)v9 + 2 * size <= __pos || (unint64_t)v9 > __pos)
          v11 = 0;
        else
          v11 = __s;
        __pos += 2 * (_QWORD)v11;
        memmove((char *)v9 + 2 * (_QWORD)__s, v9, 2 * size);
      }
      memmove(v9, (const void *)__pos, 2 * (_QWORD)__s);
      v12 = (std::basic_string<char16_t>::size_type)__s + size;
      if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
        this->__r_.__value_.__l.__size_ = v12;
      else
        *((_BYTE *)&this->__r_.__value_.__s + 23) = v12 & 0x7F;
      v9->__r_.__value_.__s.__data_[v12] = 0;
    }
  }
  else
  {
    std::basic_string<char16_t>::__grow_by_and_replace(this, v7, (std::basic_string<char16_t>::size_type)__s + size - v7, size, 0, 0, (std::basic_string<char16_t>::size_type)__s, (const std::basic_string<char16_t>::value_type *)__pos);
  }
  return this;
}

void std::__throw_out_of_range[abi:ne180100](const char *a1)
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::out_of_range::out_of_range[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_1E8654C40, MEMORY[0x1E0DE42E0]);
}

void sub_1CB4C9408(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::out_of_range::out_of_range[abi:ne180100](std::logic_error *a1, const char *a2)
{
  std::logic_error *result;

  result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5028] + 16);
  return result;
}

void std::basic_string<char16_t>::__throw_out_of_range[abi:ne180100]()
{
  std::__throw_out_of_range[abi:ne180100]("basic_string");
}

void std::basic_string<char16_t>::__grow_by_and_replace(std::basic_string<char16_t> *this, std::basic_string<char16_t>::size_type __old_cap, std::basic_string<char16_t>::size_type __delta_cap, std::basic_string<char16_t>::size_type __old_sz, std::basic_string<char16_t>::size_type __n_copy, std::basic_string<char16_t>::size_type __n_del, std::basic_string<char16_t>::size_type __n_add, const std::basic_string<char16_t>::value_type *__p_new_stuff)
{
  std::basic_string<char16_t> *v15;
  std::basic_string<char16_t>::size_type v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  std::basic_string<char16_t>::size_type v21;
  uint64_t v22;
  uint64_t v23;
  std::basic_string<char16_t>::size_type v24;
  std::basic_string<char16_t>::size_type v25;

  if (0x7FFFFFFFFFFFFFF6 - __old_cap < __delta_cap)
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  v15 = this;
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
    v15 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
  v16 = __delta_cap + __old_cap;
  if (__delta_cap + __old_cap <= 2 * __old_cap)
    v16 = 2 * __old_cap;
  v17 = (v16 & 0xFFFFFFFFFFFFFFFCLL) + 4;
  if ((v16 | 3) != 0xB)
    v17 = v16 | 3;
  if (v16 >= 0xB)
    v18 = v17 + 1;
  else
    v18 = 11;
  if (__old_cap > 0x3FFFFFFFFFFFFFF2)
    v19 = 0x7FFFFFFFFFFFFFF7;
  else
    v19 = v18;
  v20 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v19);
  v21 = (std::basic_string<char16_t>::size_type)v20;
  v23 = v22;
  if (__n_copy)
    memmove(v20, v15, 2 * __n_copy);
  if (__n_add)
    memmove((void *)(v21 + 2 * __n_copy), __p_new_stuff, 2 * __n_add);
  v24 = __old_sz - (__n_del + __n_copy);
  if (v24)
    memmove((void *)(v21 + 2 * __n_copy + 2 * __n_add), (char *)v15 + 2 * __n_copy + 2 * __n_del, 2 * v24);
  if (__old_cap != 10)
    operator delete(v15);
  v25 = __n_add + __n_copy + v24;
  this->__r_.__value_.__r.__words[0] = v21;
  this->__r_.__value_.__l.__size_ = v25;
  this->__r_.__value_.__r.__words[2] = v23 | 0x8000000000000000;
  *(_WORD *)(v21 + 2 * v25) = 0;
}

std::basic_string<char16_t> *std::basic_string<char16_t>::__assign_no_alias<true>(std::basic_string<char16_t> *__dst, const std::basic_string<char16_t>::value_type *__src, std::basic_string<char16_t>::size_type __n_add)
{
  BOOL v5;
  std::basic_string<char16_t>::size_type v6;

  v5 = __n_add > 0xA;
  v6 = __n_add - 10;
  if (v5)
  {
    std::basic_string<char16_t>::__grow_by_and_replace(__dst, 0xAuLL, v6, *((_BYTE *)&__dst->__r_.__value_.__s + 23) & 0x7F, 0, *((_BYTE *)&__dst->__r_.__value_.__s + 23) & 0x7F, __n_add, __src);
  }
  else
  {
    *((_BYTE *)&__dst->__r_.__value_.__s + 23) = __n_add;
    if (__n_add)
      memmove(__dst, __src, 2 * __n_add);
    __dst->__r_.__value_.__s.__data_[__n_add] = 0;
  }
  return __dst;
}

std::basic_string<char16_t> *std::basic_string<char16_t>::__assign_no_alias<false>(std::basic_string<char16_t> *this, const std::basic_string<char16_t>::value_type *__src, std::basic_string<char16_t>::size_type __n_add)
{
  std::basic_string<char16_t>::size_type v5;
  void *v6;

  v5 = this->__r_.__value_.__r.__words[2] & 0x7FFFFFFFFFFFFFFFLL;
  if (v5 <= __n_add)
  {
    std::basic_string<char16_t>::__grow_by_and_replace(this, v5 - 1, __n_add - v5 + 1, this->__r_.__value_.__l.__size_, 0, this->__r_.__value_.__l.__size_, __n_add, __src);
  }
  else
  {
    v6 = (void *)this->__r_.__value_.__r.__words[0];
    this->__r_.__value_.__l.__size_ = __n_add;
    if (__n_add)
      memmove(v6, __src, 2 * __n_add);
    *((_WORD *)v6 + __n_add) = 0;
  }
  return this;
}

_QWORD *std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v5;
  _BOOL4 v6;
  _QWORD *v7;

  v2 = (_QWORD *)(a1 + 8);
  v3 = *(_QWORD **)(a1 + 8);
  if (!v3)
    return v2;
  v5 = (_QWORD *)(a1 + 8);
  do
  {
    v6 = morphun::dialog::SemanticFeature::operator<((uint64_t)(v3 + 4), a2);
    v7 = v3 + 1;
    if (!v6)
    {
      v7 = v3;
      v5 = v3;
    }
    v3 = (_QWORD *)*v7;
  }
  while (*v7);
  if (v5 == v2 || morphun::dialog::SemanticFeature::operator<(a2, (uint64_t)(v5 + 4)))
    return v2;
  return v5;
}

void std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::insert[abi:ne180100]<std::__map_const_iterator<std::__tree_const_iterator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *> *,long>>>(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  BOOL v11;
  uint64_t **v12;
  uint64_t *v13;
  std::basic_string<char16_t> *v14;
  __int128 v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18[2];
  char v19;
  uint64_t *v20;

  if (a2 != a3)
  {
    v4 = a2;
    v6 = (uint64_t *)(a1 + 8);
    do
    {
      v7 = *(_QWORD *)(a1 + 8);
      v8 = v6;
      if (*(uint64_t **)a1 == v6)
        goto LABEL_9;
      v9 = *(uint64_t **)(a1 + 8);
      v10 = v6;
      if (v7)
      {
        do
        {
          v8 = v9;
          v9 = (uint64_t *)v9[1];
        }
        while (v9);
      }
      else
      {
        do
        {
          v8 = (uint64_t *)v10[2];
          v11 = *v8 == (_QWORD)v10;
          v10 = v8;
        }
        while (v11);
      }
      if (morphun::dialog::SemanticFeature::operator<((uint64_t)(v8 + 4), (uint64_t)(v4 + 4)))
      {
LABEL_9:
        if (!v7)
        {
          v20 = v6;
          v12 = (uint64_t **)v6;
LABEL_15:
          v13 = (uint64_t *)operator new(0x80uLL);
          v18[0] = v13;
          v18[1] = v6;
          v19 = 0;
          morphun::dialog::SemanticFeature::SemanticFeature((morphun::dialog::SemanticFeature *)(v13 + 4), (const morphun::dialog::SemanticFeature *)(v4 + 4));
          v14 = (std::basic_string<char16_t> *)(v13 + 13);
          if (*((char *)v4 + 127) < 0)
          {
            std::basic_string<char16_t>::__init_copy_ctor_external(v14, (const std::basic_string<char16_t>::value_type *)v4[13], v4[14]);
          }
          else
          {
            v15 = *(_OWORD *)(v4 + 13);
            v13[15] = v4[15];
            *(_OWORD *)&v14->__r_.__value_.__l.__data_ = v15;
          }
          v19 = 1;
          std::__tree<std::u16string_view>::__insert_node_at((uint64_t **)a1, (uint64_t)v20, v12, v18[0]);
          v18[0] = 0;
          std::unique_ptr<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100]((uint64_t)v18);
          goto LABEL_19;
        }
        v20 = v8;
        v12 = (uint64_t **)(v8 + 1);
      }
      else
      {
        v12 = (uint64_t **)std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__find_equal<morphun::dialog::SemanticFeature>(a1, &v20, (uint64_t)(v4 + 4));
      }
      if (!*v12)
        goto LABEL_15;
LABEL_19:
      v16 = (_QWORD *)v4[1];
      if (v16)
      {
        do
        {
          v17 = v16;
          v16 = (_QWORD *)*v16;
        }
        while (v16);
      }
      else
      {
        do
        {
          v17 = (_QWORD *)v4[2];
          v11 = *v17 == (_QWORD)v4;
          v4 = v17;
        }
        while (!v11);
      }
      v4 = v17;
    }
    while (v17 != a3);
  }
}

void sub_1CB4C9894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  morphun::dialog::SemanticFeature *v9;

  std::unique_ptr<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(void **a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(*a1);
    std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(a1[1]);
    std::__destroy_at[abi:ne180100]<std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>,0>(a1 + 4);
    operator delete(a1);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>,0>(void **this)
{
  if (*((char *)this + 95) < 0)
    operator delete(this[9]);
}

void std::unique_ptr<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  void **v1;

  v1 = *(void ***)a1;
  *(_QWORD *)a1 = 0;
  if (v1)
  {
    if (*(_BYTE *)(a1 + 16))
      std::__destroy_at[abi:ne180100]<std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>,0>(v1 + 4);
    operator delete(v1);
  }
}

_QWORD *std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__find_equal<morphun::dialog::SemanticFeature>(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v7;
  uint64_t v8;

  v5 = (_QWORD *)(a1 + 8);
  v4 = *(_QWORD **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        v7 = v4;
        v8 = (uint64_t)(v4 + 4);
        if (!morphun::dialog::SemanticFeature::operator<(a3, (uint64_t)(v4 + 4)))
          break;
        v4 = (_QWORD *)*v7;
        v5 = v7;
        if (!*v7)
          goto LABEL_9;
      }
      if (!morphun::dialog::SemanticFeature::operator<(v8, a3))
        break;
      v5 = v7 + 1;
      v4 = (_QWORD *)v7[1];
    }
    while (v4);
  }
  else
  {
    v7 = (_QWORD *)(a1 + 8);
  }
LABEL_9:
  *a2 = v7;
  return v5;
}

void icu4cxx::UnicodeSet::~UnicodeSet(icu4cxx::UnicodeSet *this)
{
  if (*((_BYTE *)this + 8))
    uset_close();
}

uint64_t npc<morphun::dialog::SemanticFeature const>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4C9A84(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

morphun::grammar::synthesis::RuGrammarSynthesizer_RuDisplayFunction *morphun::grammar::synthesis::RuGrammarSynthesizer_RuDisplayFunction::RuGrammarSynthesizer_RuDisplayFunction(morphun::grammar::synthesis::RuGrammarSynthesizer_RuDisplayFunction *this, const morphun::dialog::SemanticFeatureModel *a2)
{
  morphun::util::LocaleUtils **v4;
  morphun::TokenizerFactory *v5;
  const morphun::util::ULocale *v6;
  morphun::Tokenizer *Tokenizer;
  morphun::util::LocaleUtils *v8;
  morphun::util::ResourceLocator *v9;
  uint64_t *v10;
  uint64_t *v11;
  morphun::dictionary::DictionaryMetaData *v12;
  const morphun::util::ULocale *v13;
  _QWORD *Dictionary;
  uint64_t *BinaryProperties;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  std::basic_string<char16_t> *p_p;
  int v29;
  std::string *v30;
  __int128 v31;
  const std::string::value_type *v32;
  const std::string::value_type *v33;
  const std::string::value_type *v34;
  int v35;
  const std::string::value_type *v36;
  std::string::size_type v37;
  std::string *v38;
  __int128 v39;
  std::string *v40;
  __int128 v41;
  morphun::analysis::stemmer::RussianExposableMorphology *v42;
  uint64_t Instance;
  _QWORD *v44;
  char *v45;
  _QWORD *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  morphun::lang::StringFilterUtil *v57;
  _QWORD *v58;
  morphun::util::LocaleUtils *v59;
  morphun::lang::StringFilterUtil *v60;
  const morphun::util::ULocale *v61;
  morphun::lang::StringFilterUtil *ExemplarCharacters;
  morphun::exception::NullPointerException *exception;
  _QWORD *v65;
  _QWORD *v66;
  const char *p_dst;
  int32_t v68;
  std::basic_string<char16_t>::size_type v69;
  morphun::exception::NullPointerException *v70;
  std::basic_string<char16_t> __p;
  std::string v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 __dst;
  _QWORD v85[2];
  std::string v86;
  uint64_t v87;
  std::string v88;
  __int128 v89;

  *(_QWORD *)&v89 = *MEMORY[0x1E0C80C00];
  *(_QWORD *)this = &off_1E866E770;
  v4 = (morphun::util::LocaleUtils **)((char *)this + 8);
  v5 = (morphun::TokenizerFactory *)morphun::util::LocaleUtils::RUSSIAN(this);
  Tokenizer = morphun::TokenizerFactory::createTokenizer(v5, v6);
  v8 = (morphun::util::LocaleUtils *)npc<morphun::Tokenizer>((uint64_t)Tokenizer);
  *v4 = v8;
  v9 = (morphun::util::ResourceLocator *)morphun::util::LocaleUtils::RUSSIAN(v8);
  *((_QWORD *)this + 2) = &off_1E866E110;
  *((_QWORD *)this + 3) = 0;
  v10 = (uint64_t *)operator new();
  *v10 = (uint64_t)&off_1E866E0C8;
  v10[2] = 0;
  v10[1] = (uint64_t)(v10 + 2);
  v11 = v10 + 1;
  v10[4] = 0;
  v10[5] = 0;
  v10[3] = 0;
  v72.__r_.__value_.__r.__words[0] = 0;
  __p.__r_.__value_.__r.__words[0] = 0;
  v82 = 0;
  v83 = 0;
  v80 = 0;
  v81 = 0;
  v78 = 0;
  v79 = 0;
  v76 = 0;
  v77 = 0;
  v74 = 0;
  v75 = 0;
  v73 = 0;
  v12 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::RUSSIAN((morphun::util::LocaleUtils *)v10);
  Dictionary = morphun::dictionary::DictionaryMetaData::createDictionary(v12, v13);
  if (!Dictionary)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v86, (char *)L"nominative");
  memset(&v88, 0, sizeof(v88));
  *(_QWORD *)&__dst = &v88;
  BYTE8(__dst) = 0;
  v88.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x18uLL);
  v88.__r_.__value_.__l.__size_ = v88.__r_.__value_.__r.__words[0];
  v88.__r_.__value_.__r.__words[2] = v88.__r_.__value_.__r.__words[0] + 24;
  v88.__r_.__value_.__l.__size_ = (std::string::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v88.__r_.__value_.__r.__words[2], (__int128 *)&v86, (__int128 *)&v87, (std::basic_string<char16_t> *)v88.__r_.__value_.__l.__data_);
  if (!morphun::dictionary::DictionaryMetaData::getBinaryProperties((uint64_t)Dictionary, (uint64_t *)&v72, (uint64_t *)&v88))
  {
    v65 = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string<std::u16string_view,0>(&__dst, L"Russian dictionary is missing", 0x1DuLL);
    morphun::exception::Throwable::Throwable((uint64_t)v65, &__dst);
    *v65 = &off_1E8673120;
  }
  *(_QWORD *)&__dst = &v88;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__dst);
  if (SHIBYTE(v86.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v86.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v88, "g");
  __dst = 0uLL;
  v85[0] = 0;
  v86.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
  v86.__r_.__value_.__s.__data_[8] = 0;
  *(_QWORD *)&__dst = operator new(0x18uLL);
  *((_QWORD *)&__dst + 1) = __dst;
  v85[0] = __dst + 24;
  *((_QWORD *)&__dst + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)v85, (__int128 *)&v88, &v89, (std::basic_string<char16_t> *)__dst);
  BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties((uint64_t)Dictionary, (uint64_t *)&__p, (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)BinaryProperties);
  v86.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v86);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v88.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v88, (char *)L"dative");
  __dst = 0uLL;
  v85[0] = 0;
  v86.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
  v86.__r_.__value_.__s.__data_[8] = 0;
  *(_QWORD *)&__dst = operator new(0x18uLL);
  *((_QWORD *)&__dst + 1) = __dst;
  v85[0] = __dst + 24;
  *((_QWORD *)&__dst + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)v85, (__int128 *)&v88, &v89, (std::basic_string<char16_t> *)__dst);
  v16 = morphun::dictionary::DictionaryMetaData::getBinaryProperties((uint64_t)Dictionary, &v83, (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v16);
  v86.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v86);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v88.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v88, (char *)L"accusative");
  __dst = 0uLL;
  v85[0] = 0;
  v86.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
  v86.__r_.__value_.__s.__data_[8] = 0;
  *(_QWORD *)&__dst = operator new(0x18uLL);
  *((_QWORD *)&__dst + 1) = __dst;
  v85[0] = __dst + 24;
  *((_QWORD *)&__dst + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)v85, (__int128 *)&v88, &v89, (std::basic_string<char16_t> *)__dst);
  v17 = morphun::dictionary::DictionaryMetaData::getBinaryProperties((uint64_t)Dictionary, &v82, (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v17);
  v86.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v86);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v88.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v88, "i");
  __dst = 0uLL;
  v85[0] = 0;
  v86.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
  v86.__r_.__value_.__s.__data_[8] = 0;
  *(_QWORD *)&__dst = operator new(0x18uLL);
  *((_QWORD *)&__dst + 1) = __dst;
  v85[0] = __dst + 24;
  *((_QWORD *)&__dst + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)v85, (__int128 *)&v88, &v89, (std::basic_string<char16_t> *)__dst);
  v18 = morphun::dictionary::DictionaryMetaData::getBinaryProperties((uint64_t)Dictionary, &v81, (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v18);
  v86.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v86);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v88.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v88, (char *)L"prepositional");
  __dst = 0uLL;
  v85[0] = 0;
  v86.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
  v86.__r_.__value_.__s.__data_[8] = 0;
  *(_QWORD *)&__dst = operator new(0x18uLL);
  *((_QWORD *)&__dst + 1) = __dst;
  v85[0] = __dst + 24;
  *((_QWORD *)&__dst + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)v85, (__int128 *)&v88, &v89, (std::basic_string<char16_t> *)__dst);
  v19 = morphun::dictionary::DictionaryMetaData::getBinaryProperties((uint64_t)Dictionary, &v80, (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v19);
  v86.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v86);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v88.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v88, "m");
  __dst = 0uLL;
  v85[0] = 0;
  v86.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
  v86.__r_.__value_.__s.__data_[8] = 0;
  *(_QWORD *)&__dst = operator new(0x18uLL);
  *((_QWORD *)&__dst + 1) = __dst;
  v85[0] = __dst + 24;
  *((_QWORD *)&__dst + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)v85, (__int128 *)&v88, &v89, (std::basic_string<char16_t> *)__dst);
  v20 = morphun::dictionary::DictionaryMetaData::getBinaryProperties((uint64_t)Dictionary, &v79, (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v20);
  v86.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v86);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v88.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v88, (char *)L"feminine");
  __dst = 0uLL;
  v85[0] = 0;
  v86.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
  v86.__r_.__value_.__s.__data_[8] = 0;
  *(_QWORD *)&__dst = operator new(0x18uLL);
  *((_QWORD *)&__dst + 1) = __dst;
  v85[0] = __dst + 24;
  *((_QWORD *)&__dst + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)v85, (__int128 *)&v88, &v89, (std::basic_string<char16_t> *)__dst);
  v21 = morphun::dictionary::DictionaryMetaData::getBinaryProperties((uint64_t)Dictionary, &v78, (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v21);
  v86.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v86);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v88.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v88, "n");
  __dst = 0uLL;
  v85[0] = 0;
  v86.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
  v86.__r_.__value_.__s.__data_[8] = 0;
  *(_QWORD *)&__dst = operator new(0x18uLL);
  *((_QWORD *)&__dst + 1) = __dst;
  v85[0] = __dst + 24;
  *((_QWORD *)&__dst + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)v85, (__int128 *)&v88, &v89, (std::basic_string<char16_t> *)__dst);
  v22 = morphun::dictionary::DictionaryMetaData::getBinaryProperties((uint64_t)Dictionary, &v77, (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v22);
  v86.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v86);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v88.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v88, (char *)L"singular");
  __dst = 0uLL;
  v85[0] = 0;
  v86.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
  v86.__r_.__value_.__s.__data_[8] = 0;
  *(_QWORD *)&__dst = operator new(0x18uLL);
  *((_QWORD *)&__dst + 1) = __dst;
  v85[0] = __dst + 24;
  *((_QWORD *)&__dst + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)v85, (__int128 *)&v88, &v89, (std::basic_string<char16_t> *)__dst);
  v23 = morphun::dictionary::DictionaryMetaData::getBinaryProperties((uint64_t)Dictionary, &v76, (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v23);
  v86.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v86);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v88.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v88, "p");
  __dst = 0uLL;
  v85[0] = 0;
  v86.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
  v86.__r_.__value_.__s.__data_[8] = 0;
  *(_QWORD *)&__dst = operator new(0x18uLL);
  *((_QWORD *)&__dst + 1) = __dst;
  v85[0] = __dst + 24;
  *((_QWORD *)&__dst + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)v85, (__int128 *)&v88, &v89, (std::basic_string<char16_t> *)__dst);
  v24 = morphun::dictionary::DictionaryMetaData::getBinaryProperties((uint64_t)Dictionary, &v75, (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v24);
  v86.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v86);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v88.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v88, (char *)L"animate");
  __dst = 0uLL;
  v85[0] = 0;
  v86.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
  v86.__r_.__value_.__s.__data_[8] = 0;
  *(_QWORD *)&__dst = operator new(0x18uLL);
  *((_QWORD *)&__dst + 1) = __dst;
  v85[0] = __dst + 24;
  *((_QWORD *)&__dst + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)v85, (__int128 *)&v88, &v89, (std::basic_string<char16_t> *)__dst);
  v25 = morphun::dictionary::DictionaryMetaData::getBinaryProperties((uint64_t)Dictionary, &v74, (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v25);
  v86.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v86);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v88.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v88, (char *)L"inanimate");
  __dst = 0uLL;
  v85[0] = 0;
  v86.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
  v86.__r_.__value_.__s.__data_[8] = 0;
  *(_QWORD *)&__dst = operator new(0x18uLL);
  *((_QWORD *)&__dst + 1) = __dst;
  v85[0] = __dst + 24;
  *((_QWORD *)&__dst + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)v85, (__int128 *)&v88, &v89, (std::basic_string<char16_t> *)__dst);
  v26 = morphun::dictionary::DictionaryMetaData::getBinaryProperties((uint64_t)Dictionary, &v73, (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v26);
  v86.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v86);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v88.__r_.__value_.__l.__data_);
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long &,char const(&)[7]>(v11, (uint64_t)v72.__r_.__value_.__l.__data_, (uint64_t)v72.__r_.__value_.__l.__data_, "<nomn>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[12]>(v11, v76 | v72.__r_.__value_.__r.__words[0], v76 | v72.__r_.__value_.__r.__words[0], "<nomn_sing>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[17]>(v11, v79 | v72.__r_.__value_.__r.__words[0] | v76, v79 | v72.__r_.__value_.__r.__words[0] | v76, "<nomn_masc_sing>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[17]>(v11, v78 | v72.__r_.__value_.__r.__words[0] | v76, v78 | v72.__r_.__value_.__r.__words[0] | v76, "<nomn_femn_sing>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[17]>(v11, v77 | v72.__r_.__value_.__r.__words[0] | v76, v77 | v72.__r_.__value_.__r.__words[0] | v76, "<nomn_neut_sing>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[12]>(v11, v75 | v72.__r_.__value_.__r.__words[0], v75 | v72.__r_.__value_.__r.__words[0], "<nomn_plur>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long &,char const(&)[7]>(v11, (uint64_t)__p.__r_.__value_.__l.__data_, (uint64_t)__p.__r_.__value_.__l.__data_, "<gent>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[12]>(v11, v76 | __p.__r_.__value_.__r.__words[0], v76 | __p.__r_.__value_.__r.__words[0], "<gent_sing>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[17]>(v11, v79 | __p.__r_.__value_.__r.__words[0] | v76, v79 | __p.__r_.__value_.__r.__words[0] | v76, "<gent_masc_sing>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[17]>(v11, v78 | __p.__r_.__value_.__r.__words[0] | v76, v78 | __p.__r_.__value_.__r.__words[0] | v76, "<gent_femn_sing>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[17]>(v11, v77 | __p.__r_.__value_.__r.__words[0] | v76, v77 | __p.__r_.__value_.__r.__words[0] | v76, "<gent_neut_sing>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[12]>(v11, v75 | __p.__r_.__value_.__r.__words[0], v75 | __p.__r_.__value_.__r.__words[0], "<gent_plur>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long &,char const(&)[7]>(v11, v83, v83, "<datv>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[12]>(v11, v76 | v83, v76 | v83, "<datv_sing>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[17]>(v11, v79 | v83 | v76, v79 | v83 | v76, "<datv_masc_sing>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[17]>(v11, v78 | v83 | v76, v78 | v83 | v76, "<datv_femn_sing>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[17]>(v11, v77 | v83 | v76, v77 | v83 | v76, "<datv_neut_sing>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[12]>(v11, v75 | v83, v75 | v83, "<datv_plur>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long &,char const(&)[7]>(v11, v82, v82, "<accs>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[12]>(v11, v76 | v82, v76 | v82, "<accs_sing>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[12]>(v11, v75 | v82, v75 | v82, "<accs_plur>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[17]>(v11, v76 | v82 | v74, v76 | v82 | v74, "<accs_sing_anim>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[17]>(v11, v79 | v82 | v76, v79 | v82 | v76, "<accs_masc_sing>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[22]>(v11, v79 | v82 | v76 | v74, v79 | v82 | v76 | v74, "<accs_masc_sing_anim>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[22]>(v11, v79 | v82 | v76 | v73, v79 | v82 | v76 | v73, "<accs_masc_sing_inan>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[17]>(v11, v78 | v82 | v76, v78 | v82 | v76, "<accs_femn_sing>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[22]>(v11, v78 | v82 | v76 | v74, v78 | v82 | v76 | v74, "<accs_femn_sing_anim>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[22]>(v11, v78 | v82 | v76 | v73, v78 | v82 | v76 | v73, "<accs_femn_sing_inan>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[17]>(v11, v77 | v82 | v76, v77 | v82 | v76, "<accs_neut_sing>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[22]>(v11, v77 | v82 | v76 | v74, v77 | v82 | v76 | v74, "<accs_neut_sing_anim>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[22]>(v11, v77 | v82 | v76 | v73, v77 | v82 | v76 | v73, "<accs_neut_sing_inan>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[17]>(v11, v75 | v82 | v74, v75 | v82 | v74, "<accs_plur_anim>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[17]>(v11, v75 | v82 | v73, v75 | v82 | v73, "<accs_plur_inan>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long &,char const(&)[7]>(v11, v81, v81, "<ablt>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[12]>(v11, v76 | v81, v76 | v81, "<ablt_sing>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[17]>(v11, v79 | v81 | v76, v79 | v81 | v76, "<ablt_masc_sing>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[17]>(v11, v78 | v81 | v76, v78 | v81 | v76, "<ablt_femn_sing>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[17]>(v11, v77 | v81 | v76, v77 | v81 | v76, "<ablt_neut_sing>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[12]>(v11, v75 | v81, v75 | v81, "<ablt_plur>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long &,char const(&)[7]>(v11, v80, v80, "<loct>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[12]>(v11, v76 | v80, v76 | v80, "<loct_sing>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[17]>(v11, v79 | v80 | v76, v79 | v80 | v76, "<loct_masc_sing>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[17]>(v11, v78 | v80 | v76, v78 | v80 | v76, "<loct_femn_sing>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[17]>(v11, v77 | v80 | v76, v77 | v80 | v76, "<loct_neut_sing>");
  std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[12]>(v11, v75 | v80, v75 | v80, "<loct_plur>");
  v27 = v73 | v74;
  v10[4] = v78 | v79 | v77;
  v10[5] = v27;
  *((_QWORD *)this + 4) = (char *)v10 + *(_QWORD *)(*v10 - 56);
  QuasarC_setLogLevel();
  morphun::util::ResourceLocator::getRootForLocale(v9, &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v29 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v29 = __p.__r_.__value_.__r.__words[1];
  morphun::util::StringViewUtils::to_string((uint64_t)p_p, v29, &v72);
  v30 = std::string::append(&v72, "/synthesis/");
  v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
  v86.__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v86.__r_.__value_.__l.__data_ = v31;
  v30->__r_.__value_.__l.__size_ = 0;
  v30->__r_.__value_.__r.__words[2] = 0;
  v30->__r_.__value_.__r.__words[0] = 0;
  v34 = (const std::string::value_type *)*((_QWORD *)v9 + 1);
  v33 = (char *)v9 + 8;
  v32 = v34;
  v35 = v33[23];
  if (v35 >= 0)
    v36 = v33;
  else
    v36 = v32;
  if (v35 >= 0)
    v37 = *((unsigned __int8 *)v33 + 23);
  else
    v37 = *((_QWORD *)v33 + 1);
  v38 = std::string::append(&v86, v36, v37);
  v39 = *(_OWORD *)&v38->__r_.__value_.__l.__data_;
  v88.__r_.__value_.__r.__words[2] = v38->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v88.__r_.__value_.__l.__data_ = v39;
  v38->__r_.__value_.__l.__size_ = 0;
  v38->__r_.__value_.__r.__words[2] = 0;
  v38->__r_.__value_.__r.__words[0] = 0;
  v40 = std::string::append(&v88, "/mt-quasar-config.json");
  v41 = *(_OWORD *)&v40->__r_.__value_.__l.__data_;
  v85[0] = *((_QWORD *)&v40->__r_.__value_.__l + 2);
  __dst = v41;
  v40->__r_.__value_.__l.__size_ = 0;
  v40->__r_.__value_.__r.__words[2] = 0;
  v40->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v88.__r_.__value_.__l.__data_);
  if (SHIBYTE(v86.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v86.__r_.__value_.__l.__data_);
  if (SHIBYTE(v72.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v72.__r_.__value_.__l.__data_);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  QuasarCSystemConfig_new();
  if (QuasarCSystemConfig_readJsonFile())
  {
    v66 = __cxa_allocate_exception(0x38uLL);
    if (v85[0] >= 0)
      p_dst = (const char *)&__dst;
    else
      p_dst = (const char *)__dst;
    if (v85[0] >= 0)
      v68 = HIBYTE(v85[0]);
    else
      v68 = DWORD2(__dst);
    morphun::util::StringViewUtils::to_u16string(p_dst, v68, (std::basic_string<char16_t> *)&v86);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v88, L"Failed to read ", (std::basic_string<char16_t> *)&v86, v69);
    morphun::exception::Throwable::Throwable((uint64_t)v66, (__int128 *)&v88);
    *v66 = &off_1E8672FA0;
  }
  *((_QWORD *)this + 3) = QuasarCPDecTranslator_new();
  v42 = (morphun::analysis::stemmer::RussianExposableMorphology *)QuasarCSystemConfig_delete();
  if (SHIBYTE(v85[0]) < 0)
    operator delete((void *)__dst);
  Instance = morphun::analysis::stemmer::RussianExposableMorphology::getInstance(v42);
  if (!Instance)
  {
    v70 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(v70);
  }
  *((_QWORD *)this + 5) = Instance;
  *((_BYTE *)this + 56) = 1;
  v44 = (_QWORD *)((char *)this + 48);
  *((_QWORD *)this + 6) = uset_openEmpty();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "c");
  v45 = (char *)a2 + 8;
  v46 = (_QWORD *)std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)a2 + 8, (unsigned __int16 *)&__dst);
  v47 = (char *)a2 + 16;
  if ((_QWORD *)((char *)a2 + 16) == v46)
    v48 = 0;
  else
    v48 = v46[7];
  npc<morphun::dialog::SemanticFeature const>(v48);
  if (SHIBYTE(v85[0]) < 0)
    operator delete((void *)__dst);
  *((_QWORD *)this + 8) = v48;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"count");
  v49 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)v45, (unsigned __int16 *)&__dst);
  if (v47 == (char *)v49)
    v50 = 0;
  else
    v50 = *(_QWORD *)(v49 + 56);
  npc<morphun::dialog::SemanticFeature const>(v50);
  if (SHIBYTE(v85[0]) < 0)
    operator delete((void *)__dst);
  *((_QWORD *)this + 9) = v50;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"gender");
  v51 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)v45, (unsigned __int16 *)&__dst);
  if (v47 == (char *)v51)
    v52 = 0;
  else
    v52 = *(_QWORD *)(v51 + 56);
  npc<morphun::dialog::SemanticFeature const>(v52);
  if (SHIBYTE(v85[0]) < 0)
    operator delete((void *)__dst);
  *((_QWORD *)this + 10) = v52;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"animacy");
  v53 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)v45, (unsigned __int16 *)&__dst);
  if (v47 == (char *)v53)
    v54 = 0;
  else
    v54 = *(_QWORD *)(v53 + 56);
  npc<morphun::dialog::SemanticFeature const>(v54);
  if (SHIBYTE(v85[0]) < 0)
    operator delete((void *)__dst);
  *((_QWORD *)this + 11) = v54;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "p");
  v55 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)v45, (unsigned __int16 *)&__dst);
  if (v47 == (char *)v55)
    v56 = 0;
  else
    v56 = *(_QWORD *)(v55 + 56);
  v57 = (morphun::lang::StringFilterUtil *)npc<morphun::dialog::SemanticFeature const>(v56);
  if (SHIBYTE(v85[0]) < 0)
    operator delete((void *)__dst);
  *((_QWORD *)this + 12) = v56;
  v58 = (_QWORD *)morphun::lang::StringFilterUtil::CYRILLIC_SCRIPT(v57);
  v59 = (morphun::util::LocaleUtils *)MEMORY[0x1D179D910](*v44, *v58);
  v60 = (morphun::lang::StringFilterUtil *)morphun::util::LocaleUtils::RUSSIAN(v59);
  ExemplarCharacters = morphun::lang::StringFilterUtil::getExemplarCharacters(v60, v61);
  MEMORY[0x1D179D9AC](*v44, *(_QWORD *)ExemplarCharacters);
  MEMORY[0x1D179D970](*v44);
  return this;
}

void sub_1CB4CAE14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *__p,uint64_t a34,int a35,__int16 a36,char a37,char a38)
{
  uint64_t v38;
  void *v39;
  int v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;

  if (*(char *)(v41 - 89) < 0)
    operator delete(*(void **)(v41 - 112));
  if (*(char *)(v41 - 121) < 0)
  {
    operator delete(*(void **)(v41 - 144));
    if ((v40 & 1) == 0)
    {
LABEL_8:
      QuasarCSystemConfig_delete();
      if (a38 < 0)
        operator delete(__p);
      v43 = *(_QWORD *)(v38 + 32);
      *(_QWORD *)(v38 + 32) = 0;
      if (v43)
        (*(void (**)(uint64_t))(*(_QWORD *)v43 + 16))(v43);
      v44 = *(_QWORD *)(v38 + 8);
      *(_QWORD *)(v38 + 8) = 0;
      if (v44)
        (*(void (**)(uint64_t))(*(_QWORD *)v44 + 16))(v44);
      _Unwind_Resume(a1);
    }
  }
  else if (!v40)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v39);
  goto LABEL_8;
}

void std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 48;
        std::allocator<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>::destroy[abi:ne180100](v4);
      }
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  char *v2;
  char *v4;
  void *v5;
  char *v6;
  void **v7;

  v1 = *a1;
  v2 = (char *)**a1;
  if (v2)
  {
    v4 = (char *)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v6 = v4 - 32;
        v7 = (void **)(v4 - 24);
        std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>::__destroy_vector::operator()[abi:ne180100](&v7);
        v4 = v6;
      }
      while (v6 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::allocator<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>::destroy[abi:ne180100](uint64_t a1)
{
  void **v2;

  v2 = (void **)(a1 + 24);
  std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100](&v2);
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
}

void std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  void **v2;
  void **v4;
  void *v5;

  v1 = *a1;
  v2 = (void **)**a1;
  if (v2)
  {
    v4 = (void **)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        if (*((char *)v4 - 1) < 0)
          operator delete(*(v4 - 3));
        v4 -= 4;
      }
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]()
{
  std::__throw_length_error[abi:ne180100]("vector");
}

uint64_t std::__split_buffer<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::~__split_buffer(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;
  void **v5;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 32;
    v5 = (void **)(i - 24);
    std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>::__destroy_vector::operator()[abi:ne180100](&v5);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>,std::reverse_iterator<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  uint64_t v3;
  uint64_t v4;
  void **v5;

  if (!*(_BYTE *)(a1 + 24))
  {
    v3 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8);
    v4 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8);
    while (v3 != v4)
    {
      v5 = (void **)(v3 + 8);
      std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>::__destroy_vector::operator()[abi:ne180100](&v5);
      v3 += 32;
    }
  }
  return a1;
}

uint64_t std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>::__init_with_size[abi:ne180100]<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>*,std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>*>(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  __int128 *v10;
  _QWORD *v11;
  uint64_t v12;
  std::basic_string<char16_t> *v13;
  __int128 v14;
  _QWORD v15[3];
  char v16;
  _QWORD *v17;
  _QWORD *v18;

  if (a4)
  {
    if (a4 >> 59)
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    v6 = (_QWORD *)result;
    v7 = std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>(a4);
    v8 = v7;
    *v6 = v7;
    v6[1] = v7;
    v6[2] = &v7[4 * v9];
    v17 = v7;
    v18 = v7;
    v15[0] = v6 + 2;
    v15[1] = &v17;
    v15[2] = &v18;
    v16 = 0;
    if (a2 != a3)
    {
      v10 = (__int128 *)(a2 + 8);
      v11 = v7;
      do
      {
        v12 = (uint64_t)v10 - 8;
        *v11 = *((_QWORD *)v10 - 1);
        v13 = (std::basic_string<char16_t> *)(v11 + 1);
        if (*((char *)v10 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v13, *(const std::basic_string<char16_t>::value_type **)v10, *((_QWORD *)v10 + 1));
          v11 = v18;
        }
        else
        {
          v14 = *v10;
          v11[3] = *((_QWORD *)v10 + 2);
          *(_OWORD *)&v13->__r_.__value_.__l.__data_ = v14;
        }
        v11 += 4;
        v18 = v11;
        v10 += 2;
      }
      while (v12 + 32 != a3);
      v8 = v11;
    }
    v16 = 1;
    result = std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>,std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v15);
    v6[1] = v8;
  }
  return result;
}

void sub_1CB4CB594(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>,std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  uint64_t v3;
  uint64_t v4;

  if (!*(_BYTE *)(a1 + 24))
  {
    v3 = **(_QWORD **)(a1 + 16);
    v4 = **(_QWORD **)(a1 + 8);
    while (v3 != v4)
    {
      if (*(char *)(v3 - 1) < 0)
        operator delete(*(void **)(v3 - 24));
      v3 -= 32;
    }
  }
  return a1;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>(unint64_t a1)
{
  if (a1 >> 59)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(32 * a1);
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>(unint64_t a1)
{
  if (a1 >= 0x555555555555556)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(48 * a1);
}

std::basic_string<char16_t> *__cdecl std::basic_string<char16_t>::basic_string(std::basic_string<char16_t> *this, const std::basic_string<char16_t> *__str, std::basic_string<char16_t>::size_type __pos, std::basic_string<char16_t>::size_type __n, std::allocator<char16_t> *__a)
{
  const std::basic_string<char16_t> *v6;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t>::size_type v9;
  std::basic_string<char16_t>::size_type v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = __str;
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
  {
    size = __str->__r_.__value_.__l.__size_;
    if (size < __pos)
      goto LABEL_18;
    v6 = (const std::basic_string<char16_t> *)__str->__r_.__value_.__r.__words[0];
  }
  else
  {
    size = HIBYTE(__str->__r_.__value_.__r.__words[2]);
    if (size < __pos)
LABEL_18:
      std::basic_string<char16_t>::__throw_out_of_range[abi:ne180100]();
  }
  v9 = size - __pos;
  if (v9 >= __n)
    v10 = __n;
  else
    v10 = v9;
  if (v10 >= 0x7FFFFFFFFFFFFFF8)
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  if (v10 >= 0xB)
  {
    v12 = (v10 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((v10 | 3) != 0xB)
      v12 = v10 | 3;
    v11 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v12 + 1);
    this->__r_.__value_.__l.__size_ = v10;
    this->__r_.__value_.__r.__words[2] = v13 | 0x8000000000000000;
    this->__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v11;
  }
  else
  {
    *((_BYTE *)&this->__r_.__value_.__s + 23) = v10;
    v11 = this;
    if (!v10)
      goto LABEL_17;
  }
  memmove(v11, (char *)v6 + 2 * __pos, 2 * v10);
LABEL_17:
  *((_WORD *)v11 + v10) = 0;
  return this;
}

void morphun::grammar::synthesis::RuGrammarSynthesizer_ToPrepositionLookupFunction::~RuGrammarSynthesizer_ToPrepositionLookupFunction(morphun::grammar::synthesis::RuGrammarSynthesizer_ToPrepositionLookupFunction *this)
{
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::grammar::synthesis::RuGrammarSynthesizer_ToPrepositionLookupFunction::getArticle(morphun::grammar::synthesis::RuGrammarSynthesizer_ToPrepositionLookupFunction *this, const morphun::dialog::SemanticFeatureModel_DisplayValue *a2)
{
  uint64_t v4;
  int32_t v5;
  const UChar *v6;
  uint64_t v7;
  uint64_t v8;
  const UChar *v9;
  int32_t v10;
  unsigned __int8 v11;
  unsigned __int16 *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  morphun::exception::NullPointerException *exception;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  void *__p[2];
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v4 = (*(uint64_t (**)(const morphun::dialog::SemanticFeatureModel_DisplayValue *))(*(_QWORD *)a2 + 24))(a2);
  v19 = 0;
  v20 = 0;
  v18 = 0;
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = *(const UChar **)v4;
  v7 = *(_QWORD *)(v4 + 8);
  v8 = morphun::util::LocaleUtils::ROOT((morphun::util::LocaleUtils *)v4);
  if ((v5 & 0x80u) == 0)
    v9 = (const UChar *)v4;
  else
    v9 = v6;
  if ((v5 & 0x80u) == 0)
    v10 = v5;
  else
    v10 = v7;
  morphun::util::StringViewUtils::lowercase((uint64_t)&v18, v9, v10, v8);
  if ((v11 & 1) == 0
  {
    v16 = operator new();
    v25 = xmmword_1E8674410;
    v26 = unk_1E8674420;
    v27 = xmmword_1E8674430;
    v28 = unk_1E8674440;
    *(_OWORD *)__p = xmmword_1E86743D0;
    v22 = unk_1E86743E0;
    v23 = xmmword_1E86743F0;
    v24 = unk_1E8674400;
    std::set<std::u16string_view>::set[abi:ne180100](v16, (uint64_t)__p, 8);
    morphun::grammar::synthesis::RuGrammarSynthesizer_ToPrepositionLookupFunction::TO_WORDS(void)::TO_WORDS_ = v16;
  }
  if (!morphun::grammar::synthesis::RuGrammarSynthesizer_ToPrepositionLookupFunction::TO_WORDS(void)::TO_WORDS_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  if (v20 >= 0)
    v12 = (unsigned __int16 *)&v18;
  else
    v12 = (unsigned __int16 *)v18;
  if (v20 >= 0)
    v13 = HIBYTE(v20);
  else
    v13 = v19;
  if (std::__tree<std::u16string_view>::__count_unique<std::u16string_view>(*(_QWORD *)(morphun::grammar::synthesis::RuGrammarSynthesizer_ToPrepositionLookupFunction::TO_WORDS(void)::TO_WORDS_+ 8), v12, v13))
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, asc_1CB737EA0);
  }
  else
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, asc_1CB737E9C);
  }
  v14 = (*(uint64_t (**)(morphun::grammar::synthesis::RuGrammarSynthesizer_ToPrepositionLookupFunction *, const morphun::dialog::SemanticFeatureModel_DisplayValue *, void **))(*(_QWORD *)this + 32))(this, a2, __p);
  if (SBYTE7(v22) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v20) < 0)
    operator delete(v18);
  return v14;
}

void sub_1CB4CB988(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;

  MEMORY[0x1D179D2EC](v21, 0x1020C4062D53EE8);
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::RoGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::RoGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  morphun::util::LocaleUtils *v3;
  morphun::grammar::synthesis::GrammemeConstants *v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t i;
  morphun::util::LocaleUtils *v12;
  morphun::grammar::synthesis::GrammemeConstants *v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t j;
  std::basic_string<char16_t> *v19;
  std::basic_string<char16_t> *v20;
  std::basic_string<char16_t> *v21;
  void *__p[2];
  char v23;
  std::basic_string<char16_t> **v24;
  char v25;
  std::basic_string<char16_t> v26;
  std::basic_string<char16_t> v27;
  std::basic_string<char16_t> v28;
  __int128 v29;

  *(_QWORD *)&v29 = *MEMORY[0x1E0C80C00];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"gender");
  v3 = (morphun::util::LocaleUtils *)operator new();
  v4 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::ROMANIAN(v3);
  v5 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(v4);
  if (*(char *)(v5 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v26, *(const std::basic_string<char16_t>::value_type **)v5, *(_QWORD *)(v5 + 8));
  }
  else
  {
    v6 = *(_OWORD *)v5;
    v26.__r_.__value_.__r.__words[2] = *(_QWORD *)(v5 + 16);
    *(_OWORD *)&v26.__r_.__value_.__l.__data_ = v6;
  }
  v7 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE((morphun::grammar::synthesis::GrammemeConstants *)v5);
  if (*(char *)(v7 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v27, *(const std::basic_string<char16_t>::value_type **)v7, *(_QWORD *)(v7 + 8));
  }
  else
  {
    v8 = *(_OWORD *)v7;
    v27.__r_.__value_.__r.__words[2] = *(_QWORD *)(v7 + 16);
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = v8;
  }
  v9 = morphun::grammar::synthesis::GrammemeConstants::GENDER_NEUTER((morphun::grammar::synthesis::GrammemeConstants *)v7);
  if (*(char *)(v9 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v28, *(const std::basic_string<char16_t>::value_type **)v9, *(_QWORD *)(v9 + 8));
  }
  else
  {
    v10 = *(_OWORD *)v9;
    v28.__r_.__value_.__r.__words[2] = *(_QWORD *)(v9 + 16);
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = v10;
  }
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v24 = &v19;
  v25 = 0;
  v19 = (std::basic_string<char16_t> *)operator new(0x48uLL);
  v20 = v19;
  v21 = v19 + 3;
  v20 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v21, (__int128 *)&v26, &v29, v19);
  morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction((uint64_t)v3, v4, (uint64_t *)&v19);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)__p, (morphun::util::LocaleUtils *)((char *)v3 + *(_QWORD *)(*(_QWORD *)v3 - 56)));
  v24 = &v19;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v24);
  for (i = 0; i != -9; i -= 3)
  {
    if (SHIBYTE(v28.__r_.__value_.__r.__words[i + 2]) < 0)
      operator delete(*(void **)((char *)&v28.__r_.__value_.__l.__data_ + i * 8));
  }
  if (v23 < 0)
    operator delete(__p[0]);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"count");
  v12 = (morphun::util::LocaleUtils *)operator new();
  v13 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::ROMANIAN(v12);
  v14 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v13);
  if (*(char *)(v14 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v26, *(const std::basic_string<char16_t>::value_type **)v14, *(_QWORD *)(v14 + 8));
  }
  else
  {
    v15 = *(_OWORD *)v14;
    v26.__r_.__value_.__r.__words[2] = *(_QWORD *)(v14 + 16);
    *(_OWORD *)&v26.__r_.__value_.__l.__data_ = v15;
  }
  v16 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v14);
  if (*(char *)(v16 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v27, *(const std::basic_string<char16_t>::value_type **)v16, *(_QWORD *)(v16 + 8));
  }
  else
  {
    v17 = *(_OWORD *)v16;
    v27.__r_.__value_.__r.__words[2] = *(_QWORD *)(v16 + 16);
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = v17;
  }
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v24 = &v19;
  v25 = 0;
  v19 = (std::basic_string<char16_t> *)operator new(0x30uLL);
  v20 = v19;
  v21 = v19 + 2;
  v20 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v21, (__int128 *)&v26, (__int128 *)&v28, v19);
  morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction((uint64_t)v12, v13, (uint64_t *)&v19);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)__p, (morphun::util::LocaleUtils *)((char *)v12 + *(_QWORD *)(*(_QWORD *)v12 - 56)));
  v24 = &v19;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v24);
  for (j = 0; j != -6; j -= 3)
  {
    if (SHIBYTE(v27.__r_.__value_.__r.__words[j + 2]) < 0)
      operator delete(*(void **)((char *)&v26 + j * 8 + 24));
  }
  if (v23 < 0)
    operator delete(__p[0]);
}

void sub_1CB4CBD50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  uint64_t v31;
  uint64_t v33;

  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a18);
  v33 = 0;
  while (1)
  {
    if (*(&a31 + v33) < 0)
      operator delete(*(void **)((char *)&a26 + v33));
    v33 -= 24;
    if (v33 == -48)
    {
      MEMORY[0x1D179D2EC](v31, 0x10F3C40BE507067);
      if (a17 < 0)
        operator delete(__p);
      _Unwind_Resume(a1);
    }
  }
}

std::basic_string<char16_t> *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>(uint64_t a1, __int128 *a2, __int128 *a3, std::basic_string<char16_t> *this)
{
  std::basic_string<char16_t> *v4;
  __int128 *v6;
  __int128 v7;
  _QWORD v9[3];
  char v10;
  std::basic_string<char16_t> *v11;
  std::basic_string<char16_t> *v12;

  v4 = this;
  v11 = this;
  v12 = this;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  v10 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external(v4, *(const std::basic_string<char16_t>::value_type **)v6, *((_QWORD *)v6 + 1));
        v4 = v12;
      }
      else
      {
        v7 = *v6;
        v4->__r_.__value_.__r.__words[2] = *((_QWORD *)v6 + 2);
        *(_OWORD *)&v4->__r_.__value_.__l.__data_ = v7;
      }
      v6 = (__int128 *)((char *)v6 + 24);
      v12 = ++v4;
    }
    while (v6 != a3);
  }
  v10 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v9);
  return v4;
}

void sub_1CB4CBF44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    std::vector<std::basic_string<char16_t>>::__clear[abi:ne180100]((uint64_t *)v2);
    operator delete(**a1);
  }
}

void std::vector<std::basic_string<char16_t>>::__clear[abi:ne180100](uint64_t *a1)
{
  uint64_t v2;
  uint64_t i;

  v2 = *a1;
  for (i = a1[1]; i != v2; i -= 24)
  {
    if (*(char *)(i - 1) < 0)
      operator delete(*(void **)(i - 24));
  }
  a1[1] = v2;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t>*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  uint64_t v3;
  uint64_t v4;

  if (!*(_BYTE *)(a1 + 24))
  {
    v3 = **(_QWORD **)(a1 + 16);
    v4 = **(_QWORD **)(a1 + 8);
    while (v3 != v4)
    {
      if (*(char *)(v3 - 1) < 0)
        operator delete(*(void **)(v3 - 24));
      v3 -= 24;
    }
  }
  return a1;
}

void morphun::grammar::synthesis::RuGrammarSynthesizer_WithPrepositionLookupFunction::~RuGrammarSynthesizer_WithPrepositionLookupFunction(morphun::grammar::synthesis::RuGrammarSynthesizer_WithPrepositionLookupFunction *this)
{
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::grammar::synthesis::RuGrammarSynthesizer_WithPrepositionLookupFunction::getArticle(morphun::grammar::synthesis::RuGrammarSynthesizer_WithPrepositionLookupFunction *this, const morphun::dialog::SemanticFeatureModel_DisplayValue *a2)
{
  uint64_t v4;
  int32_t v5;
  const UChar *v6;
  uint64_t v7;
  uint64_t v8;
  const UChar *v9;
  int32_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  unsigned __int16 *v13;
  unint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  morphun::exception::NullPointerException *exception;
  _QWORD *v23;
  morphun::exception::NullPointerException *v24;
  void *v25;
  unint64_t v26;
  uint64_t v27;
  void *__p[2];
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v4 = (*(uint64_t (**)(const morphun::dialog::SemanticFeatureModel_DisplayValue *))(*(_QWORD *)a2 + 24))(a2);
  v26 = 0;
  v27 = 0;
  v25 = 0;
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = *(const UChar **)v4;
  v7 = *(_QWORD *)(v4 + 8);
  v8 = morphun::util::LocaleUtils::ROOT((morphun::util::LocaleUtils *)v4);
  if ((v5 & 0x80u) == 0)
    v9 = (const UChar *)v4;
  else
    v9 = v6;
  if ((v5 & 0x80u) == 0)
    v10 = v5;
  else
    v10 = v7;
  morphun::util::StringViewUtils::lowercase((uint64_t)&v25, v9, v10, v8);
  v11 = *(unsigned __int8 *)(v4 + 23);
  if ((v11 & 0x80u) != 0)
    v11 = *(_QWORD *)(v4 + 8);
  if (v11)
  {
    if ((v12 & 1) == 0
    {
      v21 = operator new();
      v39 = unk_1E8674500;
      v40 = xmmword_1E8674510;
      v41 = unk_1E8674520;
      v42 = xmmword_1E8674530;
      v35 = unk_1E86744C0;
      v36 = xmmword_1E86744D0;
      v37 = unk_1E86744E0;
      v38 = xmmword_1E86744F0;
      v32 = xmmword_1E8674490;
      v33 = unk_1E86744A0;
      v34 = xmmword_1E86744B0;
      *(_OWORD *)__p = xmmword_1E8674450;
      v29 = *(_OWORD *)&off_1E8674460;
      v30 = xmmword_1E8674470;
      v31 = *(_OWORD *)&off_1E8674480;
      std::set<std::u16string_view>::set[abi:ne180100](v21, (uint64_t)__p, 15);
      morphun::grammar::synthesis::RuGrammarSynthesizer_WithPrepositionLookupFunction::WITH_WORDS(void)::WITH_WORDS_ = v21;
    }
    if (!morphun::grammar::synthesis::RuGrammarSynthesizer_WithPrepositionLookupFunction::WITH_WORDS(void)::WITH_WORDS_)
    {
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
    if (v27 >= 0)
      v13 = (unsigned __int16 *)&v25;
    else
      v13 = (unsigned __int16 *)v25;
    if (v27 >= 0)
      v14 = HIBYTE(v27);
    else
      v14 = v26;
    if (std::__tree<std::u16string_view>::__count_unique<std::u16string_view>(*(_QWORD *)(morphun::grammar::synthesis::RuGrammarSynthesizer_WithPrepositionLookupFunction::WITH_WORDS(void)::WITH_WORDS_+ 8), v13, v14)|| *v13 == 1097)
    {
      goto LABEL_23;
    }
    if ((v15 & 1) == 0
    {
      v23 = (_QWORD *)operator new();
      icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v23);
      MEMORY[0x1D179D970](*v23);
      morphun::grammar::synthesis::RuGrammarSynthesizer_WithPrepositionLookupFunction::WITH_FIRST_CHAR(void)::WITH_FIRST_CHAR_ = (uint64_t)v23;
    }
    if (!morphun::grammar::synthesis::RuGrammarSynthesizer_WithPrepositionLookupFunction::WITH_FIRST_CHAR(void)::WITH_FIRST_CHAR_)
    {
      v24 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(v24);
    }
    if ((morphun::grammar::synthesis::RuGrammarSynthesizer::startsWith2Consonant((unsigned __int16 *)&v25, *(_QWORD *)morphun::grammar::synthesis::RuGrammarSynthesizer_WithPrepositionLookupFunction::WITH_FIRST_CHAR(void)::WITH_FIRST_CHAR_) & 1) != 0)goto LABEL_23;
    v17 = *(unsigned __int8 *)(v4 + 23);
    if ((v17 & 0x80u) != 0)
      v17 = *(_QWORD *)(v4 + 8);
    if (v17 >= 2)
    {
      if (SHIBYTE(v27) < 0)
      {
        if (*(_WORD *)v25 != 1074)
          goto LABEL_33;
        v18 = (char *)v25 + 2;
      }
      else
      {
        if ((unsigned __int16)v25 != 1074)
          goto LABEL_33;
        v18 = (char *)&v25 + 2;
      }
      if (*(_WORD *)v18 == 1095)
      {
LABEL_23:
        std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, aA_29);
        v16 = (*(uint64_t (**)(morphun::grammar::synthesis::RuGrammarSynthesizer_WithPrepositionLookupFunction *, const morphun::dialog::SemanticFeatureModel_DisplayValue *, void **))(*(_QWORD *)this + 32))(this, a2, __p);
        goto LABEL_34;
      }
    }
  }
LABEL_33:
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, aA_30);
  v16 = (*(uint64_t (**)(morphun::grammar::synthesis::RuGrammarSynthesizer_WithPrepositionLookupFunction *, const morphun::dialog::SemanticFeatureModel_DisplayValue *, void **))(*(_QWORD *)this + 32))(this, a2, __p);
LABEL_34:
  v19 = v16;
  if (SBYTE7(v29) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v27) < 0)
    operator delete(v25);
  return v19;
}

void sub_1CB4CC3C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;

  MEMORY[0x1D179D2EC](v21, 0x1020C405F07FB98);
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::RuGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::RuGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  morphun::grammar::synthesis::RuGrammarSynthesizer_RuDisplayFunction *v3;
  uint64_t v4;
  morphun::dialog::DefaultArticleLookupFunction *v5;
  morphun::dialog::DefaultArticleLookupFunction *v6;
  morphun::dialog::DefaultArticleLookupFunction *v7;
  morphun::dialog::DefaultArticleLookupFunction *v8;
  morphun::dialog::DefaultArticleLookupFunction *v9;
  morphun::dialog::DefaultArticleLookupFunction *v10;
  morphun::dialog::DefaultArticleLookupFunction *v11;
  morphun::dialog::DefaultArticleLookupFunction *v12;
  morphun::util::LocaleUtils *v13;
  morphun::grammar::synthesis::GrammemeConstants *v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t i;
  morphun::util::LocaleUtils *v22;
  morphun::grammar::synthesis::GrammemeConstants *v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t j;
  std::basic_string<char16_t> *v29;
  std::basic_string<char16_t> *v30;
  std::basic_string<char16_t> *v31;
  void *__p[2];
  char v33;
  std::basic_string<char16_t> **v34;
  char v35;
  std::basic_string<char16_t> __dst;
  std::basic_string<char16_t> v37;
  std::basic_string<char16_t> v38;
  __int128 v39;

  *(_QWORD *)&v39 = *MEMORY[0x1E0C80C00];
  v3 = (morphun::grammar::synthesis::RuGrammarSynthesizer_RuDisplayFunction *)operator new();
  morphun::grammar::synthesis::RuGrammarSynthesizer_RuDisplayFunction::RuGrammarSynthesizer_RuDisplayFunction(v3, this);
  v4 = *((_QWORD *)this + 29);
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  *((_QWORD *)this + 29) = v3;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "a");
  v5 = (morphun::dialog::DefaultArticleLookupFunction *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)&word_1CB73EB86);
  *(_QWORD *)v5 = &off_1E865EF50;
  morphun::grammar::synthesis::RuGrammarSynthesizer_ArticleLookupFunction::RuGrammarSynthesizer_ArticleLookupFunction(v5, (uint64_t *)&off_1E8668AD0, (uint64_t)this, (uint64_t)__p);
  *(_QWORD *)v5 = &off_1E866FBA8;
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, v5);
  if (v33 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "w");
  v6 = (morphun::dialog::DefaultArticleLookupFunction *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "a");
  *(_QWORD *)v6 = &off_1E865EF50;
  morphun::grammar::synthesis::RuGrammarSynthesizer_ArticleLookupFunction::RuGrammarSynthesizer_ArticleLookupFunction(v6, (uint64_t *)&off_1E8668AD0, (uint64_t)this, (uint64_t)__p);
  *(_QWORD *)v6 = &off_1E866FBA8;
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, v6);
  if (v33 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "i");
  v7 = (morphun::dialog::DefaultArticleLookupFunction *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)&word_1CB73EB86);
  *(_QWORD *)v7 = &off_1E865E7A8;
  morphun::grammar::synthesis::RuGrammarSynthesizer_ArticleLookupFunction::RuGrammarSynthesizer_ArticleLookupFunction(v7, (uint64_t *)&off_1E86688D8, (uint64_t)this, (uint64_t)__p);
  *(_QWORD *)v7 = &off_1E866F808;
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, v7);
  if (v33 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"withInPrep");
  v8 = (morphun::dialog::DefaultArticleLookupFunction *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "i");
  *(_QWORD *)v8 = &off_1E865E7A8;
  morphun::grammar::synthesis::RuGrammarSynthesizer_ArticleLookupFunction::RuGrammarSynthesizer_ArticleLookupFunction(v8, (uint64_t *)&off_1E86688D8, (uint64_t)this, (uint64_t)__p);
  *(_QWORD *)v8 = &off_1E866F808;
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, v8);
  if (v33 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "w");
  v9 = (morphun::dialog::DefaultArticleLookupFunction *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)&word_1CB73EB86);
  *(_QWORD *)v9 = &off_1E865EDF8;
  morphun::grammar::synthesis::RuGrammarSynthesizer_ArticleLookupFunction::RuGrammarSynthesizer_ArticleLookupFunction(v9, (uint64_t *)&off_1E8668A78, (uint64_t)this, (uint64_t)__p);
  *(_QWORD *)v9 = &off_1E866FAC8;
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, v9);
  if (v33 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"withWithPrep");
  v10 = (morphun::dialog::DefaultArticleLookupFunction *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "w");
  *(_QWORD *)v10 = &off_1E865EDF8;
  morphun::grammar::synthesis::RuGrammarSynthesizer_ArticleLookupFunction::RuGrammarSynthesizer_ArticleLookupFunction(v10, (uint64_t *)&off_1E8668A78, (uint64_t)this, (uint64_t)__p);
  *(_QWORD *)v10 = &off_1E866FAC8;
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, v10);
  if (v33 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"toPrep");
  v11 = (morphun::dialog::DefaultArticleLookupFunction *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)&word_1CB73EB86);
  *(_QWORD *)v11 = &off_1E865E900;
  morphun::grammar::synthesis::RuGrammarSynthesizer_ArticleLookupFunction::RuGrammarSynthesizer_ArticleLookupFunction(v11, (uint64_t *)&off_1E8668930, (uint64_t)this, (uint64_t)__p);
  *(_QWORD *)v11 = &off_1E866F890;
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, v11);
  if (v33 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "w");
  v12 = (morphun::dialog::DefaultArticleLookupFunction *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"toPrep");
  *(_QWORD *)v12 = &off_1E865E900;
  morphun::grammar::synthesis::RuGrammarSynthesizer_ArticleLookupFunction::RuGrammarSynthesizer_ArticleLookupFunction(v12, (uint64_t *)&off_1E8668930, (uint64_t)this, (uint64_t)__p);
  *(_QWORD *)v12 = &off_1E866F890;
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, v12);
  if (v33 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"gender");
  v13 = (morphun::util::LocaleUtils *)operator new();
  v14 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::RUSSIAN(v13);
  v15 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE(v14);
  if (*(char *)(v15 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&__dst, *(const std::basic_string<char16_t>::value_type **)v15, *(_QWORD *)(v15 + 8));
  }
  else
  {
    v16 = *(_OWORD *)v15;
    __dst.__r_.__value_.__r.__words[2] = *(_QWORD *)(v15 + 16);
    *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v16;
  }
  v17 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE((morphun::grammar::synthesis::GrammemeConstants *)v15);
  if (*(char *)(v17 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v37, *(const std::basic_string<char16_t>::value_type **)v17, *(_QWORD *)(v17 + 8));
  }
  else
  {
    v18 = *(_OWORD *)v17;
    v37.__r_.__value_.__r.__words[2] = *(_QWORD *)(v17 + 16);
    *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v18;
  }
  v19 = morphun::grammar::synthesis::GrammemeConstants::GENDER_NEUTER((morphun::grammar::synthesis::GrammemeConstants *)v17);
  if (*(char *)(v19 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v38, *(const std::basic_string<char16_t>::value_type **)v19, *(_QWORD *)(v19 + 8));
  }
  else
  {
    v20 = *(_OWORD *)v19;
    v38.__r_.__value_.__r.__words[2] = *(_QWORD *)(v19 + 16);
    *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v20;
  }
  v29 = 0;
  v30 = 0;
  v31 = 0;
  v34 = &v29;
  v35 = 0;
  v29 = (std::basic_string<char16_t> *)operator new(0x48uLL);
  v30 = v29;
  v31 = v29 + 3;
  v30 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v31, (__int128 *)&__dst, &v39, v29);
  morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction((uint64_t)v13, v14, (uint64_t *)&v29);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)__p, (morphun::util::LocaleUtils *)((char *)v13 + *(_QWORD *)(*(_QWORD *)v13 - 56)));
  v34 = &v29;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v34);
  for (i = 0; i != -9; i -= 3)
  {
    if (SHIBYTE(v38.__r_.__value_.__r.__words[i + 2]) < 0)
      operator delete(*(void **)((char *)&v38.__r_.__value_.__l.__data_ + i * 8));
  }
  if (v33 < 0)
    operator delete(__p[0]);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"animacy");
  v22 = (morphun::util::LocaleUtils *)operator new();
  v23 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::RUSSIAN(v22);
  v24 = morphun::grammar::synthesis::GrammemeConstants::ANIMACY_ANIMATE(v23);
  if (*(char *)(v24 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&__dst, *(const std::basic_string<char16_t>::value_type **)v24, *(_QWORD *)(v24 + 8));
  }
  else
  {
    v25 = *(_OWORD *)v24;
    __dst.__r_.__value_.__r.__words[2] = *(_QWORD *)(v24 + 16);
    *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v25;
  }
  v26 = morphun::grammar::synthesis::GrammemeConstants::ANIMACY_INANIMATE((morphun::grammar::synthesis::GrammemeConstants *)v24);
  if (*(char *)(v26 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v37, *(const std::basic_string<char16_t>::value_type **)v26, *(_QWORD *)(v26 + 8));
  }
  else
  {
    v27 = *(_OWORD *)v26;
    v37.__r_.__value_.__r.__words[2] = *(_QWORD *)(v26 + 16);
    *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v27;
  }
  v29 = 0;
  v30 = 0;
  v31 = 0;
  v34 = &v29;
  v35 = 0;
  v29 = (std::basic_string<char16_t> *)operator new(0x30uLL);
  v30 = v29;
  v31 = v29 + 2;
  v30 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v31, (__int128 *)&__dst, (__int128 *)&v38, v29);
  morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction((uint64_t)v22, v23, (uint64_t *)&v29);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)__p, (morphun::util::LocaleUtils *)((char *)v22 + *(_QWORD *)(*(_QWORD *)v22 - 56)));
  v34 = &v29;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v34);
  for (j = 0; j != -6; j -= 3)
  {
    if (SHIBYTE(v37.__r_.__value_.__r.__words[j + 2]) < 0)
      operator delete(*(void **)((char *)&__dst + j * 8 + 24));
  }
  if (v33 < 0)
    operator delete(__p[0]);
}

void sub_1CB4CCC9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  uint64_t v31;
  uint64_t v33;

  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a18);
  v33 = 0;
  while (1)
  {
    if (*(&a31 + v33) < 0)
      operator delete(*(void **)((char *)&a26 + v33));
    v33 -= 24;
    if (v33 == -48)
    {
      MEMORY[0x1D179D2EC](v31, 0x10F3C40BE507067);
      if (a17 < 0)
        operator delete(__p);
      _Unwind_Resume(a1);
    }
  }
}

morphun::dictionary::PhraseProperties *morphun::grammar::synthesis::RuGrammarSynthesizer::startsWith2Consonant(unsigned __int16 *a1, uint64_t a2)
{
  morphun::dictionary::PhraseProperties *result;
  uint64_t v3;
  _QWORD *v4;

  if (*((char *)a1 + 23) < 0)
  {
    if (*((_QWORD *)a1 + 1) >= 2uLL)
    {
      a1 = *(unsigned __int16 **)a1;
      goto LABEL_7;
    }
    return 0;
  }
  if (*((unsigned __int8 *)a1 + 23) < 2u)
    return 0;
LABEL_7:
  v3 = a1[1];
  result = (morphun::dictionary::PhraseProperties *)MEMORY[0x1D179D958](a2, *a1);
  if ((_DWORD)result)
  {
    v4 = (_QWORD *)morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_START(result);
    return (morphun::dictionary::PhraseProperties *)(MEMORY[0x1D179D958](*v4, v3) == 0);
  }
  return result;
}

void morphun::grammar::ml::Inflector::~Inflector(morphun::grammar::ml::Inflector *this)
{
  morphun::grammar::ml::Inflector::~Inflector(this);
  JUMPOUT(0x1D179D2ECLL);
}

{
  uint64_t v2;

  *(_QWORD *)this = &off_1E866E110;
  QuasarCPDecTranslator_delete();
  v2 = *((_QWORD *)this + 2);
  *((_QWORD *)this + 2) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
}

__n128 std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>(uint64_t a1, _WORD *a2, std::basic_string<char16_t> *this, std::basic_string<char16_t>::size_type a4)
{
  uint64_t v6;
  const std::basic_string<char16_t>::value_type *v7;
  __n128 result;

  if (*a2)
  {
    v6 = 0;
    do
      v7 = (const std::basic_string<char16_t>::value_type *)(v6 + 1);
    while (a2[++v6]);
  }
  else
  {
    v7 = 0;
  }
  std::basic_string<char16_t>::insert(this, (std::basic_string<char16_t>::size_type)a2, v7, a4);
  result = *(__n128 *)&this->__r_.__value_.__l.__data_;
  *(_OWORD *)a1 = *(_OWORD *)&this->__r_.__value_.__l.__data_;
  *(_QWORD *)(a1 + 16) = *((_QWORD *)&this->__r_.__value_.__l + 2);
  this->__r_.__value_.__l.__size_ = 0;
  this->__r_.__value_.__r.__words[2] = 0;
  this->__r_.__value_.__r.__words[0] = 0;
  return result;
}

const char *morphun::util::VersionUtils::getLibraryVersion(morphun::util::VersionUtils *this)
{
  return "3400.77";
}

void morphun::Tokenizer::~Tokenizer(morphun::Tokenizer *this)
{
  void *v2;

  *(_QWORD *)this = &off_1E8672F68;
  v2 = (void *)*((_QWORD *)this + 1);
  if (v2)
  {
    *((_QWORD *)this + 2) = v2;
    operator delete(v2);
  }
}

{
  void *v2;

  *(_QWORD *)this = &off_1E8672F68;
  v2 = (void *)*((_QWORD *)this + 1);
  if (v2)
  {
    *((_QWORD *)this + 2) = v2;
    operator delete(v2);
  }
  JUMPOUT(0x1D179D2ECLL);
}

morphun::TokenChain *morphun::Tokenizer::createTokenChain(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  int i;
  int v6;
  std::basic_string<char16_t>::size_type v7;
  morphun::Token_Head *v8;
  morphun::Token_Tail *v9;
  morphun::Token_Tail *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  std::basic_string<char16_t> *v14;
  unint64_t v15;
  uint64_t v16;
  std::basic_string<char16_t> *v17;
  uint64_t v18;
  void (***v19)(std::basic_string<char16_t> *__return_ptr, _QWORD);
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  std::basic_string<char16_t>::size_type v23;
  int v24;
  const std::basic_string<char16_t>::value_type *v25;
  std::basic_string<char16_t>::size_type v26;
  std::basic_string<char16_t> *p_p;
  unsigned __int8 v28;
  _WORD *v29;
  morphun::Token *v30;
  uint64_t (**v31)(morphun::Token *__hidden);
  unsigned __int8 v32;
  _QWORD *v33;
  unsigned __int16 *v34;
  uint64_t v35;
  char isSignificant;
  _QWORD *v37;
  _QWORD *v38;
  void (**v39)(uint64_t, uint64_t, uint64_t, morphun::Token_Head *);
  void (**v40)(uint64_t, uint64_t, uint64_t, morphun::Token_Head *);
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  std::allocator<char16_t> *v45;
  morphun::Token *v46;
  std::basic_string<char16_t>::size_type v47;
  std::basic_string<char16_t> *v48;
  std::basic_string<char16_t>::size_type size;
  morphun::TokenChain *v50;
  std::basic_string<char16_t>::size_type v51;
  int v52;
  void *v53;
  std::basic_string<char16_t> *v54;
  std::basic_string<char16_t>::size_type v55;
  std::basic_string<char16_t> *v56;
  morphun::exception::NullPointerException *v58;
  morphun::exception::NullPointerException *exception;
  unint64_t v60;
  void *v61;
  _QWORD *v62;
  std::basic_string<char16_t>::size_type __pos;
  std::basic_string<char16_t> *v64;
  int v65;
  int v66;
  unint64_t v67;
  uint64_t v68;
  morphun::Token_Tail *v69;
  unint64_t v70;
  morphun::Token *v71;
  std::basic_string<char16_t> v72;
  std::basic_string<char16_t> v73;
  std::basic_string<char16_t> v74;
  std::basic_string<char16_t> __p;
  std::basic_string<char16_t> v76[10];
  std::basic_string<char16_t> v77;

  v2 = *(_QWORD **)(a1 + 48);
  if (!v2)
    goto LABEL_123;
  if (*(char *)(a2 + 23) >= 0)
    i = *(unsigned __int8 *)(a2 + 23);
  else
    i = *(_DWORD *)(a2 + 8);
  v6 = *(_DWORD *)(a1 + 36);
  if (v6 >= i)
    v7 = i;
  else
    v7 = v6;
  v8 = (morphun::Token_Head *)operator new();
  morphun::Token_Head::Token_Head(v8, 0);
  v9 = (morphun::Token_Tail *)operator new();
  v10 = v9;
  if (*(char *)(a2 + 23) >= 0)
    v11 = *(unsigned __int8 *)(a2 + 23);
  else
    v11 = *(_DWORD *)(a2 + 8);
  morphun::Token_Tail::Token_Tail(v9, v11);
  if ((int)v7 < 1)
  {
    *((_QWORD *)v8 + 10) = v10;
    *((_QWORD *)v10 + 9) = v8;
    goto LABEL_95;
  }
  v12 = *(char *)(a2 + 23) >= 0 ? a2 : *(_QWORD *)a2;
  v13 = (*(uint64_t (**)(_QWORD *, uint64_t, std::basic_string<char16_t>::size_type))(*v2 + 24))(v2, v12, v7);
  if (!v13)
  {
LABEL_123:
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  v14 = (std::basic_string<char16_t> *)v13;
  memset(&v77, 0, sizeof(v77));
  v69 = v10;
  v65 = v6;
  v66 = i;
  if (*(char *)(a2 + 23) < 0)
  {
    v16 = *(_QWORD *)a2;
    v15 = *(_QWORD *)(a2 + 8);
  }
  else
  {
    v15 = *(unsigned __int8 *)(a2 + 23);
    v16 = a2;
  }
  __pos = v7;
  v17 = v76;
  v68 = v16;
  morphun::tokenizer::RegexSplitIterator::RegexSplitIterator((uint64_t)v76, (uint64_t)v2, v16, v15, v13);
  v18 = 0;
  if (!v2[18])
    v17 = v14;
  v62 = v2;
  v19 = (void (***)(std::basic_string<char16_t> *__return_ptr, _QWORD))(v2 + 1);
  v71 = v8;
  v64 = v14;
LABEL_23:
  v20 = v18;
  while (1)
  {
    v21 = (*(uint64_t (**)(std::basic_string<char16_t> *))(v17->__r_.__value_.__r.__words[0] + 24))(v17);
    v18 = v21;
    if ((_DWORD)v21 == -1)
      break;
    LODWORD(v22) = v21 - v20;
    if ((int)v21 > (int)v20)
    {
      if (v15 < (int)v20)
        std::__throw_out_of_range[abi:ne180100]("string_view::substr");
      v67 = v15;
      if (v15 - (int)v20 >= (int)v22)
        v22 = (int)v22;
      else
        v22 = v15 - (int)v20;
      v70 = v22;
      if ((v28 & 1) == 0
      {
        v37 = (_QWORD *)operator new();
        icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v37);
        MEMORY[0x1D179D970](*v37);
        morphun::tokenizer::TokenUtil::DELIMITER_CHARACTERS(void)::DELIMITER_CHARACTERS_ = (uint64_t)v37;
      }
      npc<icu4cxx::UnicodeSet const>(morphun::tokenizer::TokenUtil::DELIMITER_CHARACTERS(void)::DELIMITER_CHARACTERS_);
      v29 = (_WORD *)(v68 + 2 * (int)v20);
      if (uset_containsAllCodePoints())
        goto LABEL_52;
      if (v70 != 1 || *v29 != 45 || *((_DWORD *)v71 + 3) <= *((_DWORD *)v71 + 2))
        goto LABEL_60;
      if ((v32 & 1) == 0
      {
        v38 = (_QWORD *)operator new();
        icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v38);
        MEMORY[0x1D179D970](*v38);
        morphun::tokenizer::TokenUtil::PRIOR_TO_DASH_DELIMITER(void)::PRIOR_TO_DASH_DELIMITER_ = (uint64_t)v38;
      }
      v33 = (_QWORD *)npc<icu4cxx::UnicodeSet const>(morphun::tokenizer::TokenUtil::PRIOR_TO_DASH_DELIMITER(void)::PRIOR_TO_DASH_DELIMITER_);
      v34 = (unsigned __int16 *)((char *)v71 + 16);
      if (*((char *)v71 + 39) < 0)
        v34 = (unsigned __int16 *)*((_QWORD *)v71 + 2);
      if (MEMORY[0x1D179D958](*v33, *v34))
      {
LABEL_52:
        v30 = (morphun::Token *)operator new();
        *(_QWORD *)v30 = &off_1E8656C30;
        morphun::Token::Token(v30, (uint64_t *)&off_1E8667030, v20, v18, v29, v70, v29, v70, 0);
        v31 = &off_1E866A2D0;
      }
      else
      {
LABEL_60:
        v30 = (morphun::Token *)operator new();
        v35 = (*(uint64_t (**)(_QWORD *, std::basic_string<char16_t> *, _WORD *, unint64_t, uint64_t, unint64_t, uint64_t))(*v62 + 32))(v62, &v77, v29, v70, v68, v67, v20);
        if (*(char *)(v35 + 23) < 0)
        {
          v60 = *(_QWORD *)(v35 + 8);
          v61 = *(void **)v35;
        }
        else
        {
          v60 = *(unsigned __int8 *)(v35 + 23);
          v61 = (void *)v35;
        }
        isSignificant = morphun::tokenizer::TokenUtil::isSignificant(v29, v70);
        *(_QWORD *)v30 = &off_1E8656B58;
        morphun::Token::Token(v30, (uint64_t *)&off_1E8666FB0, v20, v18, v29, v70, v61, v60, isSignificant);
        v31 = &off_1E866A118;
      }
      *(_QWORD *)v30 = v31;
      v14 = v64;
      *((_QWORD *)v71 + 10) = v30;
      *((_QWORD *)v30 + 9) = v71;
      v71 = v30;
      v15 = v67;
      goto LABEL_23;
    }
    v20 = v21;
    if (morphun::util::gLogLevel <= 4)
    {
      (**v19)(&v72, v19);
      std::basic_string<char16_t>::insert(&v72, (std::basic_string<char16_t>::size_type)&unk_1CB72F896, (const std::basic_string<char16_t>::value_type *)0x27, v23);
      v73 = v72;
      memset(&v72, 0, sizeof(v72));
      std::basic_string<char16_t>::append(&v73, word_1CB72F8E6, 0xDuLL);
      v74 = v73;
      memset(&v73, 0, sizeof(v73));
      v24 = *(char *)(a2 + 23);
      if (v24 >= 0)
        v25 = (const std::basic_string<char16_t>::value_type *)a2;
      else
        v25 = *(const std::basic_string<char16_t>::value_type **)a2;
      if (v24 >= 0)
        v26 = *(unsigned __int8 *)(a2 + 23);
      else
        v26 = *(_QWORD *)(a2 + 8);
      std::basic_string<char16_t>::append(&v74, v25, v26);
      __p = v74;
      memset(&v74, 0, sizeof(v74));
      if (morphun::util::gLogLevel <= 4)
      {
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          p_p = &__p;
        else
          p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
        morphun::util::logToTopOfStackLogger((morphun::util *)4, 0, (uint64_t)p_p);
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v74.__r_.__value_.__l.__data_);
      if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v73.__r_.__value_.__l.__data_);
      if (SHIBYTE(v72.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v72.__r_.__value_.__l.__data_);
      goto LABEL_23;
    }
  }
  *((_QWORD *)v71 + 10) = v69;
  *((_QWORD *)v69 + 9) = v71;
  v39 = *(void (***)(uint64_t, uint64_t, uint64_t, morphun::Token_Head *))(a1 + 8);
  v40 = *(void (***)(uint64_t, uint64_t, uint64_t, morphun::Token_Head *))(a1 + 16);
  v6 = v65;
  for (i = v66; v39 != v40; ++v39)
  {
    if (!*v39)
    {
      v58 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(v58);
    }
    v41 = *(char *)(a2 + 23);
    if (v41 >= 0)
      v42 = a2;
    else
      v42 = *(_QWORD *)a2;
    if (v41 >= 0)
      v43 = *(unsigned __int8 *)(a2 + 23);
    else
      v43 = *(_QWORD *)(a2 + 8);
    (*v39)(a1, v42, v43, v8);
  }
  v10 = v69;
  if (v65 < v66)
  {
    v44 = *((_QWORD *)v69 + 9);
    v46 = (morphun::Token *)operator new();
    if (*(char *)(a2 + 23) < 0)
      v47 = *(_QWORD *)(a2 + 8);
    else
      v47 = *(unsigned __int8 *)(a2 + 23);
    std::basic_string<char16_t>::basic_string(&__p, (const std::basic_string<char16_t> *)a2, __pos, v47, v45);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v48 = &__p;
    else
      v48 = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      size = __p.__r_.__value_.__l.__size_;
    *(_QWORD *)v46 = &off_1E8657058;
    morphun::Token::Token(v46, (uint64_t *)&off_1E8667108, v65, v47, v48, size, v48, size, 1);
    *(_QWORD *)v46 = &off_1E866A598;
    v10 = v69;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    *((_QWORD *)v46 + 10) = v69;
    *((_QWORD *)v69 + 9) = v46;
    if (v44)
    {
      *(_QWORD *)(v44 + 80) = v46;
      *((_QWORD *)v46 + 9) = v44;
    }
  }
  morphun::tokenizer::RegexSplitIterator::~RegexSplitIterator((morphun::tokenizer::RegexSplitIterator *)v76);
  if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v77.__r_.__value_.__l.__data_);
  (*(void (**)(std::basic_string<char16_t> *))(v14->__r_.__value_.__r.__words[0] + 16))(v14);
LABEL_95:
  v50 = (morphun::TokenChain *)operator new();
  morphun::TokenChain::TokenChain(v50, v8, v10);
  if (v6 >= i || morphun::util::gLogLevel > 1)
    return v50;
  (**(void (***)(std::basic_string<char16_t> *__return_ptr))(*(_QWORD *)(a1 + 48)
                                                                      + *(_QWORD *)(**(_QWORD **)(a1 + 48) - 40)))(&v74);
  std::basic_string<char16_t>::insert(&v74, (std::basic_string<char16_t>::size_type)&unk_1CB72F902, (const std::basic_string<char16_t>::value_type *)0x24, v51);
  __p = v74;
  memset(&v74, 0, sizeof(v74));
  std::basic_string<char16_t>::append(&__p, L": ", 2uLL);
  v77 = __p;
  memset(&__p, 0, sizeof(__p));
  if (*(char *)(a2 + 23) < 0)
    std::basic_string<char16_t>::__init_copy_ctor_external(&v73, *(const std::basic_string<char16_t>::value_type **)a2, *(_QWORD *)(a2 + 8));
  else
    v73 = *(std::basic_string<char16_t> *)a2;
  v52 = SHIBYTE(v73.__r_.__value_.__r.__words[2]);
  v53 = (void *)v73.__r_.__value_.__r.__words[0];
  if ((v73.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v54 = &v73;
  else
    v54 = (std::basic_string<char16_t> *)v73.__r_.__value_.__r.__words[0];
  if ((v73.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v55 = HIBYTE(v73.__r_.__value_.__r.__words[2]);
  else
    v55 = v73.__r_.__value_.__l.__size_;
  std::basic_string<char16_t>::append(&v77, (const std::basic_string<char16_t>::value_type *)v54, v55);
  v76[0] = v77;
  memset(&v77, 0, sizeof(v77));
  if (morphun::util::gLogLevel <= 1)
  {
    if ((v76[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v56 = v76;
    else
      v56 = (std::basic_string<char16_t> *)v76[0].__r_.__value_.__r.__words[0];
    morphun::util::logToTopOfStackLogger((morphun::util *)1, 0, (uint64_t)v56);
  }
  if (SHIBYTE(v76[0].__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v76[0].__r_.__value_.__l.__data_);
    if ((v52 & 0x80000000) == 0)
      goto LABEL_113;
LABEL_121:
    operator delete(v53);
    goto LABEL_113;
  }
  if (v52 < 0)
    goto LABEL_121;
LABEL_113:
  if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v77.__r_.__value_.__l.__data_);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v74.__r_.__value_.__l.__data_);
  return v50;
}

void sub_1CB4CD9BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,void *__p,uint64_t a43,int a44,__int16 a45,char a46,char a47,uint64_t a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54)
{
  uint64_t v54;

  morphun::tokenizer::RegexSplitIterator::~RegexSplitIterator((morphun::tokenizer::RegexSplitIterator *)&a49);
  if (*(char *)(v54 - 105) < 0)
    operator delete(*(void **)(v54 - 128));
  (*(void (**)(uint64_t))(*(_QWORD *)a15 + 16))(a15);
  _Unwind_Resume(a1);
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(unint64_t a1)
{
  if (a1 >> 61)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(8 * a1);
}

void morphun::Tokenizer::~Tokenizer(morphun::Tokenizer *this, uint64_t *a2)
{
  uint64_t v3;
  void *v4;

  v3 = *a2;
  *(_QWORD *)this = *a2;
  *(_QWORD *)((char *)this + *(_QWORD *)(v3 - 40)) = a2[1];
  v4 = (void *)*((_QWORD *)this + 1);
  if (v4)
  {
    *((_QWORD *)this + 2) = v4;
    operator delete(v4);
  }
}

void `virtual thunk to'morphun::Tokenizer::~Tokenizer(morphun::Tokenizer *this)
{
  _QWORD *v1;
  void *v2;

  v1 = (_QWORD *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 32));
  *v1 = &off_1E8672F68;
  v2 = (void *)v1[1];
  if (v2)
  {
    v1[2] = v2;
    operator delete(v2);
  }
}

{
  _QWORD *v1;
  void *v2;

  v1 = (_QWORD *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 32));
  *v1 = &off_1E8672F68;
  v2 = (void *)v1[1];
  if (v2)
  {
    v1[2] = v2;
    operator delete(v2);
  }
  JUMPOUT(0x1D179D2ECLL);
}

morphun::Tokenizer *morphun::Tokenizer::Tokenizer(morphun::Tokenizer *this, const morphun::tokenizer::TokenExtractor *a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)a2;
  *(_QWORD *)this = *(_QWORD *)a2;
  *(_QWORD *)((char *)this + *(_QWORD *)(v4 - 40)) = *((_QWORD *)a2 + 1);
  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 8) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *(_QWORD *)((char *)this + 36) = 0x7FFFFFFFLL;
  *((_QWORD *)this + 6) = a3;
  morphun::Tokenizer::setStyle((uint64_t)this, 1);
  return this;
}

void sub_1CB4CDD5C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void **v3;
  void *v5;

  v3 = v2;
  v5 = *v3;
  if (*v3)
  {
    *(_QWORD *)(v1 + 16) = v5;
    operator delete(v5);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::Tokenizer::getMaxInputSize(morphun::Tokenizer *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t morphun::Tokenizer::getMaxTokens(morphun::Tokenizer *this)
{
  return *((unsigned int *)this + 8);
}

void marisa::Exception::~Exception(std::exception *this)
{
  std::exception::~exception(this);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t marisa::Exception::what(marisa::Exception *this)
{
  return *((_QWORD *)this + 3);
}

_QWORD *marisa::scoped_ptr<marisa::grimoire::trie::State>::~scoped_ptr(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)*a1;
  if (*a1)
  {
    v3 = v2[6];
    if (v3)
      MEMORY[0x1D179D2D4](v3, 0x1000C8077774924);
    if (*v2)
      MEMORY[0x1D179D2D4](*v2, 0x1000C8077774924);
    MEMORY[0x1D179D2EC](v2, 0x1070C406A3FAA47);
  }
  return a1;
}

_QWORD *marisa::Agent::set_query(_QWORD *this, const char *a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *exception;

  if (!a2 && a3)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    *exception = &off_1E8669F00;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/agent.cc";
    exception[2] = 0x200000017;
    exception[3] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/agent.cc:23: MARI"
                   "SA_NULL_ERROR: (ptr == NULL) && (length != 0)";
  }
  v3 = this[5];
  if (v3)
    *(_DWORD *)(v3 + 108) = 0;
  *this = a2;
  this[1] = a3;
  return this;
}

_QWORD *marisa::Agent::init_state(marisa::Agent *this)
{
  _OWORD *v2;
  _QWORD *result;
  _QWORD *exception;
  const char *v5;
  uint64_t v6;

  if (*((_QWORD *)this + 5))
  {
    exception = __cxa_allocate_exception(0x20uLL);
    *exception = &off_1E8669F00;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/agent.cc";
    exception[2] = 0x100000026;
    v5 = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/agent.cc:38: MARISA_STATE_E"
         "RROR: state_.get() != NULL";
    goto LABEL_9;
  }
  v2 = operator new(0x70uLL, MEMORY[0x1E0DE4E10]);
  if (v2)
  {
    *(_OWORD *)((char *)v2 + 25) = 0u;
    *v2 = 0u;
    v2[1] = 0u;
    v2[3] = 0u;
    v2[4] = 0u;
    *(_OWORD *)((char *)v2 + 73) = 0u;
    *((_QWORD *)v2 + 12) = 0;
    *((_QWORD *)v2 + 13) = 0;
    v6 = 0;
    *((_QWORD *)this + 5) = v2;
  }
  else
  {
    v6 = 0;
    *((_QWORD *)this + 5) = 0;
  }
  result = marisa::scoped_ptr<marisa::grimoire::trie::State>::~scoped_ptr(&v6);
  if (!*((_QWORD *)this + 5))
  {
    exception = __cxa_allocate_exception(0x20uLL);
    *exception = &off_1E8669F00;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/agent.cc";
    exception[2] = 0x800000028;
    v5 = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/agent.cc:40: MARISA_MEMORY_"
         "ERROR: state_.get() == NULL";
LABEL_9:
    exception[3] = v5;
  }
  return result;
}

void morphun::exception::StringIndexOutOfBoundsException::~StringIndexOutOfBoundsException(std::exception *this)
{
  morphun::exception::Throwable::~Throwable(this);
  JUMPOUT(0x1D179D2ECLL);
}

double morphun::exception::StringIndexOutOfBoundsException::StringIndexOutOfBoundsException(morphun::exception::StringIndexOutOfBoundsException *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_QWORD *)this = &off_1E8673250;
  return result;
}

{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_QWORD *)this = &off_1E8673250;
  return result;
}

morphun::exception::StringIndexOutOfBoundsException *morphun::exception::StringIndexOutOfBoundsException::StringIndexOutOfBoundsException(morphun::exception::StringIndexOutOfBoundsException *this, int a2)
{
  std::basic_string<char16_t>::size_type v3;
  std::basic_string<char16_t> v5;
  std::basic_string<char16_t> __p;

  morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)a2, &v5);
  std::basic_string<char16_t>::insert(&v5, (std::basic_string<char16_t>::size_type)L"StringIndexOutOfBoundsException at ", (const std::basic_string<char16_t>::value_type *)0x23, v3);
  __p = v5;
  memset(&v5, 0, sizeof(v5));
  morphun::exception::Throwable::Throwable((uint64_t)this, (__int128 *)&__p);
  *(_QWORD *)this = &off_1E86731C0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v5.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v5.__r_.__value_.__l.__data_);
  *(_QWORD *)this = &off_1E8673250;
  return this;
}

void sub_1CB4CE0A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

_QWORD *morphun::exception::StringIndexOutOfBoundsException::StringIndexOutOfBoundsException(uint64_t a1, __int128 *a2)
{
  _QWORD *result;

  result = (_QWORD *)morphun::exception::Throwable::Throwable(a1, a2);
  *result = &off_1E8673250;
  return result;
}

{
  _QWORD *result;

  result = (_QWORD *)morphun::exception::Throwable::Throwable(a1, a2);
  *result = &off_1E8673250;
  return result;
}

void morphun::analysis::stemmer::SvStemFilter::~SvStemFilter(morphun::analysis::stemmer::SvStemFilter *this)
{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1E8669B98);
}

{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1E8669B98);
  JUMPOUT(0x1D179D2ECLL);
}

void morphun::analysis::stemmer::SvStemFilter::getLemma(std::basic_string<char16_t> *__str@<X1>, std::allocator<char16_t> *a2@<X4>, std::basic_string<char16_t> *a3@<X8>)
{
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t> *v6;
  char *v7;
  unint64_t v8;
  int R1Start;
  std::allocator<char16_t> *v10;
  int v11;
  std::basic_string<char16_t>::size_type v12;
  std::basic_string<char16_t>::size_type v13;
  std::allocator<char16_t> *v14;
  std::basic_string<char16_t>::size_type v15;
  int v16;
  std::basic_string<char16_t> *v17;
  std::basic_string<char16_t>::size_type v18;
  uint64_t isAllLowerCase;
  char v20;
  int32_t v21;
  __int128 v22;
  uint64_t v23;
  std::basic_string<char16_t> *v24;
  int32_t v25;
  std::basic_string<char16_t> *v26;
  int32_t v27;
  __int128 v28;
  uint64_t v29;
  std::basic_string<char16_t> *v30;
  int32_t v31;
  unsigned __int8 v32;
  unsigned __int16 ***v33;
  std::basic_string<char16_t>::size_type v34;
  std::basic_string<char16_t> *v35;
  unsigned __int8 v36;
  unsigned __int16 ***v37;
  std::basic_string<char16_t>::size_type v38;
  unsigned __int8 v39;
  unsigned __int16 ***v40;
  unsigned __int8 v41;
  unsigned __int16 ***v42;
  unsigned __int8 v43;
  unsigned __int16 ***v44;
  int v45;
  std::basic_string<char16_t> *v46;
  std::basic_string<char16_t>::size_type v47;
  morphun::util::LocaleUtils *isAllUpperCase;
  unint64_t v49;
  void *v50;
  void **v51;
  uint64_t v52;
  void **v53;
  int32_t v54;
  uint64_t v55;
  void **v56;
  unint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  _QWORD *v60;
  _QWORD *v61;
  _QWORD *v62;
  std::basic_string<char16_t> __p;
  std::basic_string<char16_t> __stra;
  std::basic_string<char16_t> v65;
  std::basic_string<char16_t> v66;
  void *__dst[74];

  __dst[73] = *(void **)MEMORY[0x1E0C80C00];
  size = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) == 0)
    v6 = __str;
  else
    v6 = (std::basic_string<char16_t> *)__str->__r_.__value_.__r.__words[0];
  if ((size & 0x80u) != 0)
    size = __str->__r_.__value_.__l.__size_;
  if (size)
  {
    v7 = (char *)v6;
    while (*(_WORD *)v7 != 58)
    {
      v7 += 2;
      if (!--size)
        goto LABEL_13;
    }
    v8 = v7 - (char *)v6;
    if ((int)(v8 >> 1) >= 2)
    {
      std::basic_string<char16_t>::basic_string(a3, __str, 0, (v8 >> 1), a2);
      return;
    }
  }
LABEL_13:
  R1Start = morphun::analysis::stemmer::NordicStemFilter::getR1Start((uint64_t *)__str);
  v11 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  if ((v11 & 0x80) != 0)
  {
    v12 = __str->__r_.__value_.__l.__size_;
    if (R1Start >= (int)v12)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(a3, __str->__r_.__value_.__l.__data_, v12);
      return;
    }
  }
  else if (R1Start >= v11)
  {
    *(_OWORD *)&a3->__r_.__value_.__l.__data_ = *(_OWORD *)&__str->__r_.__value_.__l.__data_;
    a3->__r_.__value_.__r.__words[2] = __str->__r_.__value_.__r.__words[2];
    return;
  }
  v13 = R1Start;
  std::basic_string<char16_t>::basic_string(&v66, __str, 0, R1Start, v10);
  v15 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  if ((v15 & 0x80u) != 0)
    v15 = __str->__r_.__value_.__l.__size_;
  std::basic_string<char16_t>::basic_string(&v65, __str, v13, v15 - v13, v14);
  memset(&__stra, 0, sizeof(__stra));
  v16 = SHIBYTE(__str->__r_.__value_.__r.__words[2]);
  if (v16 >= 0)
    v17 = __str;
  else
    v17 = (std::basic_string<char16_t> *)__str->__r_.__value_.__r.__words[0];
  if (v16 >= 0)
    v18 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  else
    v18 = __str->__r_.__value_.__l.__size_;
  isAllLowerCase = morphun::util::StringViewUtils::isAllLowerCase((uint64_t)v17, v18);
  v20 = isAllLowerCase;
  if ((isAllLowerCase & 1) == 0)
  {
    v21 = HIBYTE(v66.__r_.__value_.__r.__words[2]);
    v22 = *(_OWORD *)&v66.__r_.__value_.__l.__data_;
    v23 = morphun::util::LocaleUtils::SWEDISH((morphun::util::LocaleUtils *)isAllLowerCase);
    if ((v21 & 0x80u) == 0)
      v24 = &v66;
    else
      v24 = (std::basic_string<char16_t> *)v22;
    if ((v21 & 0x80u) == 0)
      v25 = v21;
    else
      v25 = DWORD2(v22);
    morphun::util::StringViewUtils::lowercase((uint64_t)&__stra, (const UChar *)v24, v25, v23);
    v26 = std::basic_string<char16_t>::operator=(&v66, &__stra);
    v27 = HIBYTE(v65.__r_.__value_.__r.__words[2]);
    v28 = *(_OWORD *)&v65.__r_.__value_.__l.__data_;
    v29 = morphun::util::LocaleUtils::SWEDISH((morphun::util::LocaleUtils *)v26);
    if ((v27 & 0x80u) == 0)
      v30 = &v65;
    else
      v30 = (std::basic_string<char16_t> *)v28;
    if ((v27 & 0x80u) == 0)
      v31 = v27;
    else
      v31 = DWORD2(v28);
    morphun::util::StringViewUtils::lowercase((uint64_t)&__stra, (const UChar *)v30, v31, v29);
    std::basic_string<char16_t>::operator=(&v65, &__stra);
  }
  if ((v32 & 1) == 0
  {
    v58 = (_QWORD *)operator new();
    memcpy(__dst, &off_1E8674540, 0x240uLL);
    std::vector<std::u16string_view>::vector[abi:ne180100](v58, __dst, 0x24uLL);
    morphun::analysis::stemmer::SvStemFilter::ENDINGS_FIRST_STEP_REMOVE(void)::ENDINGS_FIRST_STEP_REMOVE_ = (uint64_t)v58;
  }
  v33 = (unsigned __int16 ***)npc<std::vector<std::u16string_view>>(morphun::analysis::stemmer::SvStemFilter::ENDINGS_FIRST_STEP_REMOVE(void)::ENDINGS_FIRST_STEP_REMOVE_);
  if ((morphun::analysis::stemmer::NordicStemFilter::removeIfEndsWith(&v65, *v33, v33[1]) & 1) == 0)
  {
    v34 = HIBYTE(v65.__r_.__value_.__r.__words[2]);
    if ((v65.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v34 = v65.__r_.__value_.__l.__size_;
    if (v34)
    {
      v35 = &v65;
      if ((v65.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v35 = (std::basic_string<char16_t> *)v65.__r_.__value_.__r.__words[0];
      if (v35->__r_.__value_.__s.__data_[v34 - 1] == 115)
      {
        std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&__p, (const void **)&v66.__r_.__value_.__l.__data_, (const void **)&v65.__r_.__value_.__l.__data_);
        if ((v36 & 1) == 0
        {
          v62 = (_QWORD *)operator new();
          memcpy(__dst, &off_1E8674780, 0x110uLL);
          std::vector<std::u16string_view>::vector[abi:ne180100](v62, __dst, 0x11uLL);
          morphun::analysis::stemmer::SvStemFilter::ENDINGS_FIRST_STEP_SHORTEN(void)::ENDINGS_FIRST_STEP_SHORTEN_ = (uint64_t)v62;
        }
        v37 = (unsigned __int16 ***)npc<std::vector<std::u16string_view>>(morphun::analysis::stemmer::SvStemFilter::ENDINGS_FIRST_STEP_SHORTEN(void)::ENDINGS_FIRST_STEP_SHORTEN_);
        morphun::analysis::stemmer::NordicStemFilter::shortenIfEndsWith(&__p, *v37, v37[1]);
        std::basic_string<char16_t>::assign(&v66, &__p, 0, v13);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v38 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          v38 = __p.__r_.__value_.__l.__size_;
        std::basic_string<char16_t>::assign(&v65, &__p, v13, v38);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
  }
  if ((v39 & 1) == 0
  {
    v59 = (_QWORD *)operator new();
    *(_OWORD *)&__dst[8] = xmmword_1E86748D0;
    *(_OWORD *)&__dst[10] = *(_OWORD *)&off_1E86748E0;
    *(_OWORD *)&__dst[12] = xmmword_1E86748F0;
    *(_OWORD *)__dst = xmmword_1E8674890;
    *(_OWORD *)&__dst[2] = *(_OWORD *)&off_1E86748A0;
    *(_OWORD *)&__dst[4] = xmmword_1E86748B0;
    *(_OWORD *)&__dst[6] = unk_1E86748C0;
    std::vector<std::u16string_view>::vector[abi:ne180100](v59, __dst, 7uLL);
    morphun::analysis::stemmer::SvStemFilter::ENDINGS_SECOND_STEP(void)::ENDINGS_SECOND_STEP_ = (uint64_t)v59;
  }
  v40 = (unsigned __int16 ***)npc<std::vector<std::u16string_view>>(morphun::analysis::stemmer::SvStemFilter::ENDINGS_SECOND_STEP(void)::ENDINGS_SECOND_STEP_);
  morphun::analysis::stemmer::NordicStemFilter::shortenIfEndsWith(&v65, *v40, v40[1]);
  if ((v41 & 1) == 0
  {
    v60 = (_QWORD *)operator new();
    *(_OWORD *)__dst = xmmword_1E8674900;
    *(_OWORD *)&__dst[2] = *(_OWORD *)&off_1E8674910;
    std::vector<std::u16string_view>::vector[abi:ne180100](v60, __dst, 2uLL);
    morphun::analysis::stemmer::SvStemFilter::ENDINGS_THIRD_STEP_SHORTEN(void)::ENDINGS_THIRD_STEP_SHORTEN_ = (uint64_t)v60;
  }
  v42 = (unsigned __int16 ***)npc<std::vector<std::u16string_view>>(morphun::analysis::stemmer::SvStemFilter::ENDINGS_THIRD_STEP_SHORTEN(void)::ENDINGS_THIRD_STEP_SHORTEN_);
  if ((morphun::analysis::stemmer::NordicStemFilter::shortenIfEndsWith(&v65, *v42, v42[1]) & 1) == 0)
  {
    if ((v43 & 1) == 0
    {
      v61 = (_QWORD *)operator new();
      *(_OWORD *)__dst = xmmword_1E8674920;
      *(_OWORD *)&__dst[2] = *(_OWORD *)&off_1E8674930;
      *(_OWORD *)&__dst[4] = xmmword_1E8674940;
      std::vector<std::u16string_view>::vector[abi:ne180100](v61, __dst, 3uLL);
      morphun::analysis::stemmer::SvStemFilter::ENDINGS_THIRD_STEP_REMOVE(void)::ENDINGS_THIRD_STEP_REMOVE_ = (uint64_t)v61;
    }
    v44 = (unsigned __int16 ***)npc<std::vector<std::u16string_view>>(morphun::analysis::stemmer::SvStemFilter::ENDINGS_THIRD_STEP_REMOVE(void)::ENDINGS_THIRD_STEP_REMOVE_);
    morphun::analysis::stemmer::NordicStemFilter::removeIfEndsWith(&v65, *v44, v44[1]);
  }
  if ((v20 & 1) != 0)
  {
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)a3, (const void **)&v66.__r_.__value_.__l.__data_, (const void **)&v65.__r_.__value_.__l.__data_);
  }
  else
  {
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)__dst, (const void **)&v66.__r_.__value_.__l.__data_, (const void **)&v65.__r_.__value_.__l.__data_);
    v45 = SHIBYTE(__str->__r_.__value_.__r.__words[2]);
    if (v45 >= 0)
      v46 = __str;
    else
      v46 = (std::basic_string<char16_t> *)__str->__r_.__value_.__r.__words[0];
    if (v45 >= 0)
      v47 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
    else
      v47 = __str->__r_.__value_.__l.__size_;
    isAllUpperCase = (morphun::util::LocaleUtils *)morphun::util::StringViewUtils::isAllUpperCase((uint64_t)v46, v47);
    v49 = HIBYTE(__dst[2]);
    v51 = (void **)__dst[0];
    v50 = __dst[1];
    if ((_DWORD)isAllUpperCase)
    {
      v52 = morphun::util::LocaleUtils::SWEDISH(isAllUpperCase);
      if ((v49 & 0x80u) == 0)
        v53 = __dst;
      else
        v53 = v51;
      if ((v49 & 0x80u) == 0)
        v54 = v49;
      else
        v54 = (int)v50;
      morphun::util::StringViewUtils::uppercase((uint64_t)&__stra, (const UChar *)v53, v54, v52);
      *a3 = __stra;
      memset(&__stra, 0, sizeof(__stra));
    }
    else
    {
      v55 = morphun::util::LocaleUtils::SWEDISH(isAllUpperCase);
      if ((v49 & 0x80u) == 0)
        v56 = __dst;
      else
        v56 = v51;
      if ((v49 & 0x80u) == 0)
        v57 = v49;
      else
        v57 = (unint64_t)v50;
      morphun::util::StringViewUtils::capitalizeFirst((UChar *)v56, v57, v55, (uint64_t)a3);
    }
    if (SHIBYTE(__dst[2]) < 0)
      operator delete(__dst[0]);
  }
  if (SHIBYTE(__stra.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__stra.__r_.__value_.__l.__data_);
  if (SHIBYTE(v65.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v65.__r_.__value_.__l.__data_);
  if (SHIBYTE(v66.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v66.__r_.__value_.__l.__data_);
}

void sub_1CB4CE7F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,uint64_t a34,int a35,__int16 a36,char a37,char a38)
{
  uint64_t v38;

  MEMORY[0x1D179D2EC](v38, 0x20C40960023A9);
  if (a14 < 0)
    operator delete(__p);
  if (a20 < 0)
    operator delete(a15);
  if (a26 < 0)
    operator delete(a21);
  if (a32 < 0)
    operator delete(a27);
  _Unwind_Resume(a1);
}

uint64_t std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>(uint64_t a1, const void **a2, const void **a3)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t result;
  char *v8;
  const void *v9;
  const void *v10;

  if (*((char *)a2 + 23) >= 0)
    v5 = *((unsigned __int8 *)a2 + 23);
  else
    v5 = (unint64_t)a2[1];
  if (*((char *)a3 + 23) >= 0)
    v6 = *((unsigned __int8 *)a3 + 23);
  else
    v6 = (unint64_t)a3[1];
  result = std::basic_string<char16_t>::basic_string[abi:ne180100](a1, v6 + v5);
  if (*(char *)(result + 23) >= 0)
    v8 = (char *)result;
  else
    v8 = *(char **)result;
  if (v5)
  {
    if (*((char *)a2 + 23) >= 0)
      v9 = a2;
    else
      v9 = *a2;
    result = (uint64_t)memmove(v8, v9, 2 * v5);
  }
  if (v6)
  {
    if (*((char *)a3 + 23) >= 0)
      v10 = a3;
    else
      v10 = *a3;
    result = (uint64_t)memmove(&v8[2 * v5], v10, 2 * v6);
  }
  *(_WORD *)&v8[2 * v5 + 2 * v6] = 0;
  return result;
}

_QWORD *std::vector<std::u16string_view>::vector[abi:ne180100](_QWORD *a1, const void *a2, unint64_t a3)
{
  char *v6;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a3)
  {
    std::vector<std::u16string_view>::__vallocate[abi:ne180100](a1, a3);
    v6 = (char *)a1[1];
    memmove(v6, a2, 16 * a3);
    a1[1] = &v6[16 * a3];
  }
  return a1;
}

void sub_1CB4CEA90(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t npc<std::vector<std::u16string_view>>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4CEAF0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

char *std::vector<std::u16string_view>::__vallocate[abi:ne180100](_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 60)
    std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::u16string_view>>(a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[16 * v4];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::u16string_view>>(unint64_t a1)
{
  if (a1 >> 60)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(16 * a1);
}

uint64_t std::basic_string<char16_t>::basic_string[abi:ne180100](uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  if (a2 >= 0x7FFFFFFFFFFFFFF8)
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  if (a2 > 0xA)
  {
    v4 = (a2 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((a2 | 3) != 0xB)
      v4 = a2 | 3;
    v5 = v4 + 1;
    if (v4 + 1 < 0)
      std::__throw_bad_array_new_length[abi:ne180100]();
    v6 = operator new(2 * v5);
    *(_QWORD *)(a1 + 8) = a2;
    *(_QWORD *)(a1 + 16) = v5 | 0x8000000000000000;
    *(_QWORD *)a1 = v6;
  }
  else
  {
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)a1 = 0;
    *(_BYTE *)(a1 + 23) = a2;
  }
  return a1;
}

uint64_t mlogc_setLogLevel(uint64_t result)
{
  morphun::util::gLogLevel = result;
  return result;
}

uint64_t mlogc_getLogLevel()
{
  return morphun::util::gLogLevel;
}

uint64_t mlogc_logToConsole(int a1)
{
  morphun::util *v1;

  if (a1)
    v1 = (morphun::util *)morphun::util::logClog;
  else
    v1 = 0;
  return morphun::util::Logger::registerLogger(MEMORY[0x1E0DE4A58], v1);
}

uint64_t mlogc_registerLogger(morphun::util *a1, morphun::util *a2)
{
  return morphun::util::Logger::registerLogger(a1, a2);
}

uint64_t mlogc_unregisterLogger(morphun::util *a1)
{
  return morphun::util::Logger::registerLogger(a1, 0);
}

void morphun::dialog::language::EtCommonConceptFactory::~EtCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1E8655E10);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1E8655E10);
  JUMPOUT(0x1D179D2ECLL);
}

void morphun::grammar::synthesis::SvGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::SvGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t *v19;
  _QWORD *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  morphun::util::LocaleUtils *v29;
  morphun::dictionary::DictionaryMetaData *v30;
  const morphun::util::ULocale *v31;
  morphun::util::LocaleUtils *Dictionary;
  morphun::dictionary::Inflector *v33;
  const morphun::util::ULocale *v34;
  morphun::util::LocaleUtils *Inflector;
  morphun::TokenizerFactory *v36;
  const morphun::util::ULocale *v37;
  morphun::Tokenizer *Tokenizer;
  uint64_t v39;
  uint64_t *BinaryProperties;
  uint64_t v41;
  uint64_t *v42;
  char *v43;
  uint64_t v44;
  morphun::util::LocaleUtils *v45;
  morphun::grammar::synthesis::GrammemeConstants *v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  uint64_t i;
  morphun::grammar::synthesis::SvGrammarSynthesizer_GenderLookupFunction *v52;
  morphun::util::LocaleUtils *v53;
  morphun::grammar::synthesis::GrammemeConstants *v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  __int128 v58;
  uint64_t j;
  morphun::exception::NullPointerException *exception;
  void *__p[2];
  char v62;
  __int128 v63;
  uint64_t v64;
  std::basic_string<char16_t> __dst;
  std::basic_string<char16_t> v66;
  void *v67[2];
  char v68;
  __int128 v69;

  *(_QWORD *)&v69 = *MEMORY[0x1E0C80C00];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"defArticle");
  v3 = (_QWORD *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v67, "d");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v63, "d");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"de");
  morphun::grammar::synthesis::SvGrammarSynthesizer_ArticleLookupFunction::SvGrammarSynthesizer_ArticleLookupFunction((uint64_t)v3, (uint64_t)this, 0, (__int128 *)v67, &v63, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v3 + *(_QWORD *)(*v3 - 56)));
  if (v62 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v64) < 0)
    operator delete((void *)v63);
  if (v68 < 0)
    operator delete(v67[0]);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "w");
  v4 = (_QWORD *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v67, "d");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v63, "d");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"de");
  morphun::grammar::synthesis::SvGrammarSynthesizer_ArticleLookupFunction::SvGrammarSynthesizer_ArticleLookupFunction((uint64_t)v4, (uint64_t)this, 1, (__int128 *)v67, &v63, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v4 + *(_QWORD *)(*v4 - 56)));
  if (v62 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v64) < 0)
    operator delete((void *)v63);
  if (v68 < 0)
    operator delete(v67[0]);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "i");
  v5 = (_QWORD *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v67, (char *)L"en");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v63, "e");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "f");
  morphun::grammar::synthesis::SvGrammarSynthesizer_ArticleLookupFunction::SvGrammarSynthesizer_ArticleLookupFunction((uint64_t)v5, (uint64_t)this, 0, (__int128 *)v67, &v63, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v5 + *(_QWORD *)(*v5 - 56)));
  if (v62 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v64) < 0)
    operator delete((void *)v63);
  if (v68 < 0)
    operator delete(v67[0]);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"withIndefArticle");
  v6 = (_QWORD *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v67, (char *)L"en");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v63, "e");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "f");
  morphun::grammar::synthesis::SvGrammarSynthesizer_ArticleLookupFunction::SvGrammarSynthesizer_ArticleLookupFunction((uint64_t)v6, (uint64_t)this, 1, (__int128 *)v67, &v63, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v6 + *(_QWORD *)(*v6 - 56)));
  if (v62 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v64) < 0)
    operator delete((void *)v63);
  if (v68 < 0)
    operator delete(v67[0]);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"indefPron");
  v7 = (_QWORD *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v67, "n");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v63, "n");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "n");
  morphun::grammar::synthesis::SvGrammarSynthesizer_ArticleLookupFunction::SvGrammarSynthesizer_ArticleLookupFunction((uint64_t)v7, (uint64_t)this, 0, (__int128 *)v67, &v63, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v7 + *(_QWORD *)(*v7 - 56)));
  if (v62 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v64) < 0)
    operator delete((void *)v63);
  if (v68 < 0)
    operator delete(v67[0]);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"withIndefPron");
  v8 = (_QWORD *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v67, "n");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v63, "n");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "n");
  morphun::grammar::synthesis::SvGrammarSynthesizer_ArticleLookupFunction::SvGrammarSynthesizer_ArticleLookupFunction((uint64_t)v8, (uint64_t)this, 1, (__int128 *)v67, &v63, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v8 + *(_QWORD *)(*v8 - 56)));
  if (v62 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v64) < 0)
    operator delete((void *)v63);
  if (v68 < 0)
    operator delete(v67[0]);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "i");
  v9 = (_QWORD *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v67, (char *)L"vilken");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v63, "v");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"vilka");
  morphun::grammar::synthesis::SvGrammarSynthesizer_ArticleLookupFunction::SvGrammarSynthesizer_ArticleLookupFunction((uint64_t)v9, (uint64_t)this, 0, (__int128 *)v67, &v63, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v9 + *(_QWORD *)(*v9 - 56)));
  if (v62 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v64) < 0)
    operator delete((void *)v63);
  if (v68 < 0)
    operator delete(v67[0]);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "w");
  v10 = (_QWORD *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v67, (char *)L"vilken");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v63, "v");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"vilka");
  morphun::grammar::synthesis::SvGrammarSynthesizer_ArticleLookupFunction::SvGrammarSynthesizer_ArticleLookupFunction((uint64_t)v10, (uint64_t)this, 1, (__int128 *)v67, &v63, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v10 + *(_QWORD *)(*v10 - 56)));
  if (v62 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v64) < 0)
    operator delete((void *)v63);
  if (v68 < 0)
    operator delete(v67[0]);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "n");
  v11 = (_QWORD *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v67, (char *)L"ingen");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v63, "i");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "i");
  morphun::grammar::synthesis::SvGrammarSynthesizer_ArticleLookupFunction::SvGrammarSynthesizer_ArticleLookupFunction((uint64_t)v11, (uint64_t)this, 0, (__int128 *)v67, &v63, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v11 + *(_QWORD *)(*v11 - 56)));
  if (v62 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v64) < 0)
    operator delete((void *)v63);
  if (v68 < 0)
    operator delete(v67[0]);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"withNegArticle");
  v12 = (_QWORD *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v67, (char *)L"ingen");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v63, "i");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "i");
  morphun::grammar::synthesis::SvGrammarSynthesizer_ArticleLookupFunction::SvGrammarSynthesizer_ArticleLookupFunction((uint64_t)v12, (uint64_t)this, 1, (__int128 *)v67, &v63, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v12 + *(_QWORD *)(*v12 - 56)));
  if (v62 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v64) < 0)
    operator delete((void *)v63);
  if (v68 < 0)
    operator delete(v67[0]);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "n");
  v13 = (_QWORD *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v67, (char *)L"ny");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v63, (char *)L"nytt");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "n");
  morphun::grammar::synthesis::SvGrammarSynthesizer_ArticleLookupFunction::SvGrammarSynthesizer_ArticleLookupFunction((uint64_t)v13, (uint64_t)this, 0, (__int128 *)v67, &v63, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v13 + *(_QWORD *)(*v13 - 56)));
  if (v62 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v64) < 0)
    operator delete((void *)v63);
  if (v68 < 0)
    operator delete(v67[0]);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "w");
  v14 = (_QWORD *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v67, (char *)L"ny");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v63, (char *)L"nytt");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "n");
  morphun::grammar::synthesis::SvGrammarSynthesizer_ArticleLookupFunction::SvGrammarSynthesizer_ArticleLookupFunction((uint64_t)v14, (uint64_t)this, 1, (__int128 *)v67, &v63, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v14 + *(_QWORD *)(*v14 - 56)));
  if (v62 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v64) < 0)
    operator delete((void *)v63);
  if (v68 < 0)
    operator delete(v67[0]);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"otherArticle");
  v15 = (_QWORD *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v67, "a");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v63, "a");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "a");
  morphun::grammar::synthesis::SvGrammarSynthesizer_ArticleLookupFunction::SvGrammarSynthesizer_ArticleLookupFunction((uint64_t)v15, (uint64_t)this, 0, (__int128 *)v67, &v63, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v15 + *(_QWORD *)(*v15 - 56)));
  if (v62 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v64) < 0)
    operator delete((void *)v63);
  if (v68 < 0)
    operator delete(v67[0]);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "w");
  v16 = (_QWORD *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v67, "a");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v63, "a");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "a");
  morphun::grammar::synthesis::SvGrammarSynthesizer_ArticleLookupFunction::SvGrammarSynthesizer_ArticleLookupFunction((uint64_t)v16, (uint64_t)this, 1, (__int128 *)v67, &v63, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v16 + *(_QWORD *)(*v16 - 56)));
  if (v62 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v64) < 0)
    operator delete((void *)v63);
  if (v68 < 0)
    operator delete(v67[0]);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"possArticle");
  v17 = (_QWORD *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v67, (char *)L"din");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v63, "d");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "d");
  morphun::grammar::synthesis::SvGrammarSynthesizer_ArticleLookupFunction::SvGrammarSynthesizer_ArticleLookupFunction((uint64_t)v17, (uint64_t)this, 0, (__int128 *)v67, &v63, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v17 + *(_QWORD *)(*v17 - 56)));
  if (v62 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v64) < 0)
    operator delete((void *)v63);
  if (v68 < 0)
    operator delete(v67[0]);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "w");
  v18 = (_QWORD *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v67, (char *)L"din");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v63, "d");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "d");
  morphun::grammar::synthesis::SvGrammarSynthesizer_ArticleLookupFunction::SvGrammarSynthesizer_ArticleLookupFunction((uint64_t)v18, (uint64_t)this, 1, (__int128 *)v67, &v63, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v18 + *(_QWORD *)(*v18 - 56)));
  if (v62 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v64) < 0)
    operator delete((void *)v63);
  if (v68 < 0)
    operator delete(v67[0]);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  v19 = (uint64_t *)operator new();
  *v19 = (uint64_t)&off_1E866E7D0;
  v19[39] = (uint64_t)&unk_1E866E828;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "d");
  v20 = (_QWORD *)std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)this + 8, (unsigned __int16 *)&__dst);
  v21 = (char *)this + 16;
  if ((_QWORD *)((char *)this + 16) == v20)
    v22 = 0;
  else
    v22 = v20[7];
  npc<morphun::dialog::SemanticFeature const>(v22);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  v19[1] = v22;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"count");
  v23 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)this + 8, (unsigned __int16 *)&__dst);
  if (v21 == (char *)v23)
    v24 = 0;
  else
    v24 = *(_QWORD *)(v23 + 56);
  npc<morphun::dialog::SemanticFeature const>(v24);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  v19[2] = v24;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "c");
  v25 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)this + 8, (unsigned __int16 *)&__dst);
  if (v21 == (char *)v25)
    v26 = 0;
  else
    v26 = *(_QWORD *)(v25 + 56);
  npc<morphun::dialog::SemanticFeature const>(v26);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  v19[3] = v26;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"gender");
  v27 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)this + 8, (unsigned __int16 *)&__dst);
  if (v21 == (char *)v27)
    v28 = 0;
  else
    v28 = *(_QWORD *)(v27 + 56);
  v29 = (morphun::util::LocaleUtils *)npc<morphun::dialog::SemanticFeature const>(v28);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  v19[4] = v28;
  v30 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::SWEDISH(v29);
  Dictionary = (morphun::util::LocaleUtils *)morphun::dictionary::DictionaryMetaData::createDictionary(v30, v31);
  if (!Dictionary)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  v19[5] = (uint64_t)Dictionary;
  v33 = (morphun::dictionary::Inflector *)morphun::util::LocaleUtils::SWEDISH(Dictionary);
  Inflector = (morphun::util::LocaleUtils *)morphun::dictionary::Inflector::getInflector(v33, v34);
  v19[6] = (uint64_t)Inflector;
  v36 = (morphun::TokenizerFactory *)morphun::util::LocaleUtils::SWEDISH(Inflector);
  Tokenizer = morphun::TokenizerFactory::createTokenizer(v36, v37);
  v19[8] = 0;
  v19[7] = (uint64_t)Tokenizer;
  v19[9] = 0;
  morphun::grammar::synthesis::SvGrammarSynthesizer_GenderLookupFunction::SvGrammarSynthesizer_GenderLookupFunction((morphun::grammar::synthesis::SvGrammarSynthesizer_GenderLookupFunction *)(v19 + 10));
  v39 = v19[5];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v67, "a");
  memset(&__dst, 0, sizeof(__dst));
  *(_QWORD *)&v63 = &__dst;
  BYTE8(v63) = 0;
  __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x18uLL);
  __dst.__r_.__value_.__l.__size_ = __dst.__r_.__value_.__r.__words[0];
  __dst.__r_.__value_.__r.__words[2] = __dst.__r_.__value_.__r.__words[0] + 24;
  __dst.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&__dst.__r_.__value_.__r.__words[2], (__int128 *)v67, &v69, (std::basic_string<char16_t> *)__dst.__r_.__value_.__l.__data_);
  BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v39, v19 + 8, (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)BinaryProperties);
  *(_QWORD *)&v63 = &__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v63);
  if (v68 < 0)
    operator delete(v67[0]);
  v41 = v19[5];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v67, (char *)L"noun");
  memset(&__dst, 0, sizeof(__dst));
  *(_QWORD *)&v63 = &__dst;
  BYTE8(v63) = 0;
  __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x18uLL);
  __dst.__r_.__value_.__l.__size_ = __dst.__r_.__value_.__r.__words[0];
  __dst.__r_.__value_.__r.__words[2] = __dst.__r_.__value_.__r.__words[0] + 24;
  __dst.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&__dst.__r_.__value_.__r.__words[2], (__int128 *)v67, &v69, (std::basic_string<char16_t> *)__dst.__r_.__value_.__l.__data_);
  v42 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v41, v19 + 9, (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v42);
  *(_QWORD *)&v63 = &__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v63);
  if (v68 < 0)
    operator delete(v67[0]);
  v43 = (char *)v19 + *(_QWORD *)(*v19 - 56);
  v44 = *((_QWORD *)this + 29);
  if (v44)
    (*(void (**)(uint64_t))(*(_QWORD *)v44 + 16))(v44);
  *((_QWORD *)this + 29) = v43;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v67, (char *)L"count");
  v45 = (morphun::util::LocaleUtils *)operator new();
  v46 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::SWEDISH(v45);
  v47 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v46);
  if (*(char *)(v47 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&__dst, *(const std::basic_string<char16_t>::value_type **)v47, *(_QWORD *)(v47 + 8));
  }
  else
  {
    v48 = *(_OWORD *)v47;
    __dst.__r_.__value_.__r.__words[2] = *(_QWORD *)(v47 + 16);
    *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v48;
  }
  v49 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v47);
  if (*(char *)(v49 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v66, *(const std::basic_string<char16_t>::value_type **)v49, *(_QWORD *)(v49 + 8));
  }
  else
  {
    v50 = *(_OWORD *)v49;
    v66.__r_.__value_.__r.__words[2] = *(_QWORD *)(v49 + 16);
    *(_OWORD *)&v66.__r_.__value_.__l.__data_ = v50;
  }
  v63 = 0uLL;
  v64 = 0;
  __p[0] = &v63;
  LOBYTE(__p[1]) = 0;
  *(_QWORD *)&v63 = operator new(0x30uLL);
  *((_QWORD *)&v63 + 1) = v63;
  v64 = v63 + 48;
  *((_QWORD *)&v63 + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v64, (__int128 *)&__dst, (__int128 *)v67, (std::basic_string<char16_t> *)v63);
  morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction((uint64_t)v45, v46, (uint64_t *)&v63);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)v67, (morphun::util::LocaleUtils *)((char *)v45 + *(_QWORD *)(*(_QWORD *)v45 - 56)));
  __p[0] = &v63;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
  for (i = 0; i != -6; i -= 3)
  {
    if (SHIBYTE(v66.__r_.__value_.__r.__words[i + 2]) < 0)
      operator delete(*(void **)((char *)&__dst + i * 8 + 24));
  }
  if (v68 < 0)
    operator delete(v67[0]);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"gender");
  v52 = (morphun::grammar::synthesis::SvGrammarSynthesizer_GenderLookupFunction *)operator new();
  morphun::grammar::synthesis::SvGrammarSynthesizer_GenderLookupFunction::SvGrammarSynthesizer_GenderLookupFunction(v52);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::grammar::synthesis::SvGrammarSynthesizer_GenderLookupFunction *)((char *)v52+ *(_QWORD *)(*(_QWORD *)v52 - 56)));
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v67, "d");
  v53 = (morphun::util::LocaleUtils *)operator new();
  v54 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::SWEDISH(v53);
  v55 = morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_DEFINITE(v54);
  if (*(char *)(v55 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&__dst, *(const std::basic_string<char16_t>::value_type **)v55, *(_QWORD *)(v55 + 8));
  }
  else
  {
    v56 = *(_OWORD *)v55;
    __dst.__r_.__value_.__r.__words[2] = *(_QWORD *)(v55 + 16);
    *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v56;
  }
  v57 = morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_INDEFINITE((morphun::grammar::synthesis::GrammemeConstants *)v55);
  if (*(char *)(v57 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v66, *(const std::basic_string<char16_t>::value_type **)v57, *(_QWORD *)(v57 + 8));
  }
  else
  {
    v58 = *(_OWORD *)v57;
    v66.__r_.__value_.__r.__words[2] = *(_QWORD *)(v57 + 16);
    *(_OWORD *)&v66.__r_.__value_.__l.__data_ = v58;
  }
  v63 = 0uLL;
  v64 = 0;
  __p[0] = &v63;
  LOBYTE(__p[1]) = 0;
  *(_QWORD *)&v63 = operator new(0x30uLL);
  *((_QWORD *)&v63 + 1) = v63;
  v64 = v63 + 48;
  *((_QWORD *)&v63 + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v64, (__int128 *)&__dst, (__int128 *)v67, (std::basic_string<char16_t> *)v63);
  morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction((uint64_t)v53, v54, (uint64_t *)&v63);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)v67, (morphun::util::LocaleUtils *)((char *)v53 + *(_QWORD *)(*(_QWORD *)v53 - 56)));
  __p[0] = &v63;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
  for (j = 0; j != -6; j -= 3)
  {
    if (SHIBYTE(v66.__r_.__value_.__r.__words[j + 2]) < 0)
      operator delete(*(void **)((char *)&__dst + j * 8 + 24));
  }
  if (v68 < 0)
    operator delete(v67[0]);
}

void sub_1CB4D01AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  uint64_t v35;
  void *v36;

  __cxa_free_exception(v36);
  MEMORY[0x1D179D2EC](v35, 0x10F3C40831360C4);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::SvGrammarSynthesizer::getCount(unsigned __int16 *a1)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  uint64_t *v9;
  morphun::grammar::synthesis::GrammemeConstants *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t i;
  std::basic_string<char16_t> v17;
  int v18;
  std::basic_string<char16_t> v19;
  int v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  if ((v2 & 1) == 0
  {
    v11 = (morphun::grammar::synthesis::GrammemeConstants *)operator new();
    v12 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v11);
    if (*(char *)(v12 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v17, *(const std::basic_string<char16_t>::value_type **)v12, *(_QWORD *)(v12 + 8));
    }
    else
    {
      v13 = *(_OWORD *)v12;
      v17.__r_.__value_.__r.__words[2] = *(_QWORD *)(v12 + 16);
      *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v13;
    }
    v18 = 1;
    v14 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v12);
    if (*(char *)(v14 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v19, *(const std::basic_string<char16_t>::value_type **)v14, *(_QWORD *)(v14 + 8));
    }
    else
    {
      v15 = *(_OWORD *)v14;
      v19.__r_.__value_.__r.__words[2] = *(_QWORD *)(v14 + 16);
      *(_OWORD *)&v19.__r_.__value_.__l.__data_ = v15;
    }
    v20 = 2;
    std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>::map[abi:ne180100]((uint64_t **)v11, (__int128 *)&v17, 2);
    for (i = 0; i != -8; i -= 4)
    {
      if (SHIBYTE(v19.__r_.__value_.__r.__words[i + 2]) < 0)
        operator delete(*(void **)((char *)&v19.__r_.__value_.__l.__data_ + i * 8));
    }
    morphun::grammar::synthesis::SvGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap = (uint64_t)v11;
  }
  if (!a1)
    return 0;
  v3 = morphun::grammar::synthesis::SvGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>(morphun::grammar::synthesis::SvGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap);
  v6 = *(_QWORD *)(v3 + 8);
  v4 = v3 + 8;
  v5 = v6;
  if (!v6)
    goto LABEL_10;
  v7 = v4;
  do
  {
    v8 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v5 + 32), a1);
    v9 = (uint64_t *)(v5 + 8);
    if (!v8)
    {
      v9 = (uint64_t *)v5;
      v7 = v5;
    }
    v5 = *v9;
  }
  while (*v9);
  if (v7 == v4 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v7 + 32)))
LABEL_10:
    v7 = v4;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>(morphun::grammar::synthesis::SvGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v7)
    return 0;
  else
    return *(unsigned int *)(v7 + 56);
}

void sub_1CB4D0780(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  uint64_t v14;

  if (a14 < 0)
    operator delete(__p);
  MEMORY[0x1D179D2EC](v14, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>::map[abi:ne180100](uint64_t **a1, __int128 *a2, uint64_t a3)
{
  uint64_t *v4;
  __int128 *v5;
  __int128 *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  BOOL v11;
  char **v12;
  char **v13;
  char *v14;
  unsigned __int16 *v15;
  char *v16;
  std::basic_string<char16_t> *v17;
  __int128 v18;
  uint64_t *v19;

  a1[1] = 0;
  v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    v5 = a2;
    v6 = &a2[2 * a3];
    while (1)
    {
      v7 = a1[1];
      v8 = v4;
      if (*a1 != v4)
      {
        v9 = a1[1];
        v10 = v4;
        if (v7)
        {
          do
          {
            v8 = v9;
            v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            v8 = (uint64_t *)v10[2];
            v11 = *v8 == (_QWORD)v10;
            v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break;
      }
      v12 = (char **)v4;
      v13 = (char **)v4;
      if (!v7)
        goto LABEL_19;
      v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        v12 = (char **)v8;
LABEL_19:
        v16 = (char *)operator new(0x40uLL);
        v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((_QWORD *)v5 + 1));
        }
        else
        {
          v18 = *v5;
          *((_QWORD *)v16 + 6) = *((_QWORD *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(_QWORD *)v16 = 0;
        *((_QWORD *)v16 + 1) = 0;
        *((_QWORD *)v16 + 2) = v12;
        *v13 = v16;
        v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6)
        return a1;
    }
    v12 = (char **)v4;
    v13 = (char **)v4;
    if (v7)
    {
      v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          v12 = (char **)v14;
          v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break;
          v14 = *v12;
          v13 = v12;
          if (!*v12)
            goto LABEL_19;
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5))
          goto LABEL_25;
        v13 = v12 + 1;
        v14 = v12[1];
        if (!v14)
          goto LABEL_19;
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1CB4D09A4(_Unwind_Exception *a1)
{
  void *v1;
  char **v2;

  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4D0A10(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

BOOL std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](unsigned __int16 *a1, unsigned __int16 *a2)
{
  unint64_t v2;
  int v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  unsigned __int16 *v7;
  unsigned __int16 *v8;
  unsigned int v9;
  unsigned int v10;
  BOOL v11;

  v2 = *((unsigned __int8 *)a2 + 23);
  v3 = (char)v2;
  if ((v2 & 0x80u) != 0)
    v2 = *((_QWORD *)a2 + 1);
  v4 = *((unsigned __int8 *)a1 + 23);
  v5 = (char)v4;
  if ((v4 & 0x80u) != 0)
    v4 = *((_QWORD *)a1 + 1);
  if (v2 >= v4)
    v6 = v4;
  else
    v6 = v2;
  if (v6)
  {
    if (v5 >= 0)
      v7 = a1;
    else
      v7 = *(unsigned __int16 **)a1;
    if (v3 >= 0)
      v8 = a2;
    else
      v8 = *(unsigned __int16 **)a2;
    while (1)
    {
      v9 = *v7;
      v10 = *v8;
      if (v10 != v9)
        break;
      ++v7;
      ++v8;
      if (!--v6)
        goto LABEL_17;
    }
    v11 = v9 >= v10;
  }
  else
  {
LABEL_17:
    v11 = v4 >= v2;
  }
  return !v11;
}

void std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(char *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*(_QWORD *)a1);
    std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((_QWORD *)a1 + 1));
    if (a1[55] < 0)
      operator delete(*((void **)a1 + 4));
    operator delete(a1);
  }
}

uint64_t morphun::grammar::synthesis::SvGrammarSynthesizer::getGender(unsigned __int16 *a1)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  uint64_t *v9;
  morphun::grammar::synthesis::GrammemeConstants *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t i;
  std::basic_string<char16_t> v17;
  int v18;
  std::basic_string<char16_t> v19;
  int v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  if ((v2 & 1) == 0
  {
    v11 = (morphun::grammar::synthesis::GrammemeConstants *)operator new();
    v12 = morphun::grammar::synthesis::GrammemeConstants::GENDER_COMMON(v11);
    if (*(char *)(v12 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v17, *(const std::basic_string<char16_t>::value_type **)v12, *(_QWORD *)(v12 + 8));
    }
    else
    {
      v13 = *(_OWORD *)v12;
      v17.__r_.__value_.__r.__words[2] = *(_QWORD *)(v12 + 16);
      *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v13;
    }
    v18 = 1;
    v14 = morphun::grammar::synthesis::GrammemeConstants::GENDER_NEUTER((morphun::grammar::synthesis::GrammemeConstants *)v12);
    if (*(char *)(v14 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v19, *(const std::basic_string<char16_t>::value_type **)v14, *(_QWORD *)(v14 + 8));
    }
    else
    {
      v15 = *(_OWORD *)v14;
      v19.__r_.__value_.__r.__words[2] = *(_QWORD *)(v14 + 16);
      *(_OWORD *)&v19.__r_.__value_.__l.__data_ = v15;
    }
    v20 = 2;
    std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Gender>::map[abi:ne180100]((uint64_t **)v11, (__int128 *)&v17, 2);
    for (i = 0; i != -8; i -= 4)
    {
      if (SHIBYTE(v19.__r_.__value_.__r.__words[i + 2]) < 0)
        operator delete(*(void **)((char *)&v19.__r_.__value_.__l.__data_ + i * 8));
    }
    morphun::grammar::synthesis::SvGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap = (uint64_t)v11;
  }
  if (!a1)
    return 0;
  v3 = morphun::grammar::synthesis::SvGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Gender>>(morphun::grammar::synthesis::SvGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap);
  v6 = *(_QWORD *)(v3 + 8);
  v4 = v3 + 8;
  v5 = v6;
  if (!v6)
    goto LABEL_10;
  v7 = v4;
  do
  {
    v8 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v5 + 32), a1);
    v9 = (uint64_t *)(v5 + 8);
    if (!v8)
    {
      v9 = (uint64_t *)v5;
      v7 = v5;
    }
    v5 = *v9;
  }
  while (*v9);
  if (v7 == v4 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v7 + 32)))
LABEL_10:
    v7 = v4;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Gender>>(morphun::grammar::synthesis::SvGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v7)
    return 0;
  else
    return *(unsigned int *)(v7 + 56);
}

void sub_1CB4D0CC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  uint64_t v14;

  if (a14 < 0)
    operator delete(__p);
  MEMORY[0x1D179D2EC](v14, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Gender>::map[abi:ne180100](uint64_t **a1, __int128 *a2, uint64_t a3)
{
  uint64_t *v4;
  __int128 *v5;
  __int128 *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  BOOL v11;
  char **v12;
  char **v13;
  char *v14;
  unsigned __int16 *v15;
  char *v16;
  std::basic_string<char16_t> *v17;
  __int128 v18;
  uint64_t *v19;

  a1[1] = 0;
  v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    v5 = a2;
    v6 = &a2[2 * a3];
    while (1)
    {
      v7 = a1[1];
      v8 = v4;
      if (*a1 != v4)
      {
        v9 = a1[1];
        v10 = v4;
        if (v7)
        {
          do
          {
            v8 = v9;
            v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            v8 = (uint64_t *)v10[2];
            v11 = *v8 == (_QWORD)v10;
            v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break;
      }
      v12 = (char **)v4;
      v13 = (char **)v4;
      if (!v7)
        goto LABEL_19;
      v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        v12 = (char **)v8;
LABEL_19:
        v16 = (char *)operator new(0x40uLL);
        v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((_QWORD *)v5 + 1));
        }
        else
        {
          v18 = *v5;
          *((_QWORD *)v16 + 6) = *((_QWORD *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(_QWORD *)v16 = 0;
        *((_QWORD *)v16 + 1) = 0;
        *((_QWORD *)v16 + 2) = v12;
        *v13 = v16;
        v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6)
        return a1;
    }
    v12 = (char **)v4;
    v13 = (char **)v4;
    if (v7)
    {
      v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          v12 = (char **)v14;
          v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break;
          v14 = *v12;
          v13 = v12;
          if (!*v12)
            goto LABEL_19;
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5))
          goto LABEL_25;
        v13 = v12 + 1;
        v14 = v12[1];
        if (!v14)
          goto LABEL_19;
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1CB4D0EEC(_Unwind_Exception *a1)
{
  void *v1;
  char **v2;

  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Gender>>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4D0F58(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(void **this)
{
  *this = &off_1E86719F8;
  morphun::analysis::Analyzer::~Analyzer((morphun::analysis::Analyzer *)this, (uint64_t *)&off_1E8669338);
}

{
  *this = &off_1E86719F8;
  morphun::analysis::Analyzer::~Analyzer((morphun::analysis::Analyzer *)this, (uint64_t *)&off_1E8669338);
  JUMPOUT(0x1D179D2ECLL);
}

_QWORD *morphun::analysis::ConfigurableAnalyzer::createComponents(morphun::analysis::ConfigurableAnalyzer *this)
{
  uint64_t v2;
  char v3;
  const morphun::util::ULocale *v4;
  uint64_t *Tokenizer;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  std::__shared_weak_count_vtbl *v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  _QWORD *v23;
  std::__shared_weak_count_vtbl *v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *p_shared_owners;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  morphun::analysis::filter::PunctuationFilter *v31;
  uint64_t v32;
  _QWORD *result;
  uint64_t v34;
  std::__shared_weak_count *v35;

  v2 = operator new();
  v3 = *((_BYTE *)this + 72);
  *(_QWORD *)v2 = &off_1E866A910;
  morphun::analysis::Tokenizer::Tokenizer((morphun::analysis::Tokenizer *)v2, (uint64_t *)&off_1E8669D70);
  *(_QWORD *)v2 = &off_1E8672E30;
  *(_QWORD *)(v2 + 112) = (char *)this + 80;
  *(_QWORD *)(v2 + 120) = 0;
  *(_QWORD *)(v2 + 128) = 0;
  *(_QWORD *)(v2 + 136) = 0;
  Tokenizer = (uint64_t *)morphun::TokenizerFactory::createTokenizer((morphun::analysis::ConfigurableAnalyzer *)((char *)this + 80), v4);
  npc<morphun::Tokenizer>((uint64_t)Tokenizer);
  (*(void (**)(uint64_t *, uint64_t))(*Tokenizer + 32))(Tokenizer, 1);
  *(_QWORD *)(v2 + 144) = Tokenizer;
  npc<morphun::Tokenizer>((uint64_t)Tokenizer);
  v6 = npc<morphun::tokenizer::TokenExtractor const>(Tokenizer[6]);
  if (*(char *)(v2 + 143) < 0)
  {
    v8 = *(_QWORD *)(v2 + 120);
    v7 = *(_QWORD *)(v2 + 128);
  }
  else
  {
    v7 = *(unsigned __int8 *)(v2 + 143);
    v8 = v2 + 120;
  }
  *(_QWORD *)(v2 + 152) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v6 + 24))(v6, v8, v7);
  v9 = *(_QWORD *)(npc<morphun::Tokenizer>(*(_QWORD *)(v2 + 144)) + 48);
  npc<morphun::tokenizer::TokenExtractor const>(v9);
  if (*(char *)(v2 + 143) < 0)
  {
    v11 = *(_QWORD *)(v2 + 120);
    v10 = *(_QWORD *)(v2 + 128);
  }
  else
  {
    v10 = *(unsigned __int8 *)(v2 + 143);
    v11 = v2 + 120;
  }
  v12 = *(_QWORD *)(v2 + 152);
  npc<morphun::tokenizer::TokenExtractorIterator>(v12);
  morphun::tokenizer::RegexSplitIterator::RegexSplitIterator(v2 + 160, v9, v11, v10, v12);
  if (*(char *)(v2 + 143) < 0)
  {
    v14 = *(_QWORD *)(v2 + 120);
    v13 = *(_QWORD *)(v2 + 128);
  }
  else
  {
    v13 = *(unsigned __int8 *)(v2 + 143);
    v14 = v2 + 120;
  }
  v15 = v2 + 160;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 144) + 48) + 144))
    v15 = npc<morphun::tokenizer::TokenExtractorIterator>(*(_QWORD *)(v2 + 152));
  *(_QWORD *)(v2 + 408) = &off_1E8673440;
  *(_QWORD *)(v2 + 416) = v14;
  *(_QWORD *)(v2 + 424) = v13;
  *(_QWORD *)(v2 + 432) = v15;
  *(_QWORD *)(v2 + 440) = 0xFFFFFFFF00000000;
  *(_DWORD *)(v2 + 448) = 0;
  *(_QWORD *)(v2 + 464) = 0;
  *(_QWORD *)(v2 + 472) = 0;
  *(_QWORD *)(v2 + 456) = 0;
  *(_DWORD *)(v2 + 480) = 0;
  *(_BYTE *)(v2 + 484) = (v3 & 4) != 0;
  *(_BYTE *)(v2 + 485) = 1;
  *(_QWORD *)(v2 + 488) = morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::CharTermAttribute>(v2);
  *(_QWORD *)(v2 + 496) = morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::OffsetAttribute>(v2);
  *(_QWORD *)(v2 + 504) = 0;
  *(_QWORD *)(v2 + 520) = 0;
  *(_QWORD *)(v2 + 512) = 0;
  *(_QWORD *)(v2 + 528) = morphun::analysis::tokenizer::StreamingTokenizer::incrementTokenizer;
  *(_QWORD *)(v2 + 544) = 0;
  *(_QWORD *)(v2 + 536) = 0;
  *(_DWORD *)(v2 + 552) = 0;
  v16 = *((_QWORD *)this + 9);
  if ((v16 & 1) != 0)
  {
    v17 = std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::find<std::type_index>((_QWORD *)(v2 + 8), (uint64_t)"N7morphun8analysis15tokenattributes17GrammemeAttributeE");
    if (v17)
    {
      v18 = (std::__shared_weak_count_vtbl *)v17[3];
      if (!v18)
      {
LABEL_22:
        v23 = std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::find<std::type_index>((_QWORD *)(v2 + 8), (uint64_t)"N7morphun8analysis15tokenattributes21LemmaMappingAttributeE");
        if (v23)
        {
          v24 = (std::__shared_weak_count_vtbl *)v23[3];
          if (!v24)
            goto LABEL_31;
        }
        else
        {
          if (!v25)
          {
LABEL_31:
            v16 = *((_QWORD *)this + 9);
            goto LABEL_32;
          }
          v24 = (std::__shared_weak_count_vtbl *)v25;
          v34 = v25;
          v26 = (std::__shared_weak_count *)operator new();
          v26->__shared_owners_ = 0;
          p_shared_owners = (unint64_t *)&v26->__shared_owners_;
          v26->__vftable = (std::__shared_weak_count_vtbl *)&off_1E8673B18;
          v26->__shared_weak_owners_ = 0;
          v26[1].__vftable = v24;
          v35 = v26;
          morphun::analysis::util::AttributeSource::addAttributeImpl((_QWORD *)v2, &v34);
          do
            v28 = __ldaxr(p_shared_owners);
          while (__stlxr(v28 - 1, p_shared_owners));
          if (!v28)
          {
            ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
            std::__shared_weak_count::__release_weak(v26);
          }
        }
        goto LABEL_31;
      }
    }
    else
    {
      if (!v19)
        goto LABEL_22;
      v18 = (std::__shared_weak_count_vtbl *)v19;
      v34 = v19;
      v20 = (std::__shared_weak_count *)operator new();
      v20->__shared_owners_ = 0;
      v21 = (unint64_t *)&v20->__shared_owners_;
      v20->__vftable = (std::__shared_weak_count_vtbl *)&off_1E8673B18;
      v20->__shared_weak_owners_ = 0;
      v20[1].__vftable = v18;
      v35 = v20;
      morphun::analysis::util::AttributeSource::addAttributeImpl((_QWORD *)v2, &v34);
      do
        v22 = __ldaxr(v21);
      while (__stlxr(v22 - 1, v21));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
        std::__shared_weak_count::__release_weak(v20);
      }
    }
    goto LABEL_22;
  }
LABEL_32:
  v29 = v2;
  if ((v16 & 0x20) != 0)
  {
    v29 = (*(uint64_t (**)(morphun::analysis::ConfigurableAnalyzer *, uint64_t))(*(_QWORD *)this + 120))(this, v2);
    v16 = *((_QWORD *)this + 9);
  }
  if ((v16 & 6) != 0)
  {
    v30 = (_QWORD *)operator new();
    *v30 = &off_1E866A910;
    morphun::analysis::util::AttributeSource::AttributeSource((morphun::analysis::util::AttributeSource *)v30, (morphun::analysis::util::AttributeSource *)&off_1E86696C8, v29);
    v30[12] = v29;
    *v30 = &off_1E8672368;
    v30[13] = morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::CharTermAttribute>((uint64_t)v30);
    morphun::util::ULocale::ULocale((morphun::util::ULocale *)(v30 + 14), (morphun::analysis::ConfigurableAnalyzer *)((char *)this + 80));
    v16 = *((_QWORD *)this + 9);
    if ((v16 & 0x200) == 0)
      goto LABEL_37;
    goto LABEL_36;
  }
  v30 = (_QWORD *)v29;
  if ((v16 & 0x200) != 0)
  {
LABEL_36:
    v30 = (_QWORD *)(*(uint64_t (**)(morphun::analysis::ConfigurableAnalyzer *, _QWORD *))(*(_QWORD *)this + 104))(this, v30);
    v16 = *((_QWORD *)this + 9);
  }
LABEL_37:
  if ((v16 & 0x1000) != 0)
  {
    v30 = (_QWORD *)(*(uint64_t (**)(morphun::analysis::ConfigurableAnalyzer *, _QWORD *))(*(_QWORD *)this + 112))(this, v30);
    v16 = *((_QWORD *)this + 9);
    if ((v16 & 8) == 0)
    {
LABEL_39:
      if ((v16 & 0x40) == 0)
        goto LABEL_40;
LABEL_44:
      v31 = (morphun::analysis::filter::PunctuationFilter *)operator new();
      morphun::analysis::filter::PunctuationFilter::PunctuationFilter(v31, (morphun::analysis::TokenStream *)v30, 0);
      goto LABEL_48;
    }
  }
  else if ((v16 & 8) == 0)
  {
    goto LABEL_39;
  }
  v30 = (_QWORD *)(*(uint64_t (**)(morphun::analysis::ConfigurableAnalyzer *, _QWORD *))(*(_QWORD *)this + 80))(this, v30);
  v16 = *((_QWORD *)this + 9);
  if ((v16 & 0x40) != 0)
    goto LABEL_44;
LABEL_40:
  if ((v16 & 0x80) != 0)
  {
    v31 = (morphun::analysis::filter::PunctuationFilter *)operator new();
    morphun::analysis::filter::PunctuationFilter::PunctuationFilter(v31, (morphun::analysis::TokenStream *)v30, 1);
  }
  else
  {
    v31 = (morphun::analysis::filter::PunctuationFilter *)v30;
  }
LABEL_48:
  v32 = *((_QWORD *)this + 9);
  if ((v32 & 0x10) != 0)
  {
    v31 = (morphun::analysis::filter::PunctuationFilter *)(*(uint64_t (**)(morphun::analysis::ConfigurableAnalyzer *, morphun::analysis::filter::PunctuationFilter *))(*(_QWORD *)this + 88))(this, v31);
    v32 = *((_QWORD *)this + 9);
    if ((v32 & 0x100) == 0)
    {
LABEL_50:
      if ((v32 & 0x400) == 0)
        goto LABEL_51;
LABEL_56:
      v31 = (morphun::analysis::filter::PunctuationFilter *)(*(uint64_t (**)(morphun::analysis::ConfigurableAnalyzer *, morphun::analysis::filter::PunctuationFilter *))(*(_QWORD *)this + 128))(this, v31);
      if ((*((_QWORD *)this + 9) & 0x800) == 0)
        goto LABEL_53;
      goto LABEL_52;
    }
  }
  else if ((v32 & 0x100) == 0)
  {
    goto LABEL_50;
  }
  v31 = (morphun::analysis::filter::PunctuationFilter *)(*(uint64_t (**)(morphun::analysis::ConfigurableAnalyzer *, morphun::analysis::filter::PunctuationFilter *))(*(_QWORD *)this + 96))(this, v31);
  v32 = *((_QWORD *)this + 9);
  if ((v32 & 0x400) != 0)
    goto LABEL_56;
LABEL_51:
  if ((v32 & 0x800) != 0)
LABEL_52:
    v31 = (morphun::analysis::filter::PunctuationFilter *)(*(uint64_t (**)(morphun::analysis::ConfigurableAnalyzer *, morphun::analysis::filter::PunctuationFilter *))(*(_QWORD *)this + 136))(this, v31);
LABEL_53:
  result = (_QWORD *)operator new();
  *result = &off_1E8671D60;
  result[1] = v2;
  result[2] = v31;
  return result;
}

void sub_1CB4D15C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::shared_ptr<morphun::analysis::util::AttributeImpl>::~shared_ptr[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

morphun::TokenChain *morphun::analysis::ConfigurableAnalyzer::createTokenChain(morphun::analysis::ConfigurableAnalyzer *this, const morphun::Chunk *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  int v13;
  const std::basic_string<char16_t>::value_type *v14;
  std::basic_string<char16_t>::size_type v15;
  std::basic_string<char16_t> *v16;
  std::basic_string<char16_t>::size_type size;
  morphun::TokenChain *TokenChain;
  std::basic_string<char16_t> v20;

  memset(&v20, 0, sizeof(v20));
  npc<morphun::Chunk const>((uint64_t)a2);
  v4 = (*(uint64_t (**)(const morphun::Chunk *))(*(_QWORD *)a2 + 56))(a2);
  v5 = npc<morphun::Token>(v4);
  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
  v7 = (*(uint64_t (**)(const morphun::Chunk *))(*(_QWORD *)a2 + 48))(a2);
  v8 = npc<morphun::Token>(v7);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 24))(v8);
  std::basic_string<char16_t>::reserve(&v20, v6 - v9);
  v10 = (*(uint64_t (**)(const morphun::Chunk *))(*(_QWORD *)a2 + 56))(a2);
  v11 = *(_QWORD *)(npc<morphun::Token>(v10) + 80);
  for (i = (*(uint64_t (**)(const morphun::Chunk *))(*(_QWORD *)a2 + 48))(a2);
        i != v11;
        i = *(_QWORD *)(i + 80))
  {
    npc<morphun::Token>(i);
    if (*(_DWORD *)(i + 12) > *(_DWORD *)(i + 8))
    {
      npc<morphun::Token>(i);
      v13 = *(char *)(i + 39);
      if (v13 >= 0)
        v14 = (const std::basic_string<char16_t>::value_type *)(i + 16);
      else
        v14 = *(const std::basic_string<char16_t>::value_type **)(i + 16);
      if (v13 >= 0)
        v15 = *(unsigned __int8 *)(i + 39);
      else
        v15 = *(_QWORD *)(i + 24);
      std::basic_string<char16_t>::append(&v20, v14, v15);
    }
    npc<morphun::Token>(i);
  }
  if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v16 = &v20;
  else
    v16 = (std::basic_string<char16_t> *)v20.__r_.__value_.__r.__words[0];
  if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v20.__r_.__value_.__r.__words[2]);
  else
    size = v20.__r_.__value_.__l.__size_;
  TokenChain = morphun::analysis::ConfigurableAnalyzer::createTokenChain(this, a2, (UChar *)v16, size);
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v20.__r_.__value_.__l.__data_);
  return TokenChain;
}

void sub_1CB4D183C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

morphun::analysis::filter::DiacriticFilter *morphun::analysis::ConfigurableAnalyzer::addCharacterNormalizationFilter(morphun::analysis::ConfigurableAnalyzer *this, morphun::analysis::TokenStream *a2)
{
  morphun::analysis::util::AttributeSource *v4;
  morphun::analysis::filter::DiacriticFilter *v5;
  morphun::util::LocaleUtils *v6;
  const morphun::util::ULocale *v7;

  v4 = (morphun::analysis::util::AttributeSource *)operator new();
  *(_QWORD *)v4 = &off_1E866A910;
  morphun::analysis::util::AttributeSource::AttributeSource(v4, (morphun::analysis::util::AttributeSource *)&off_1E8669888, (uint64_t)a2);
  *(_QWORD *)v4 = &off_1E8672608;
  *((_QWORD *)v4 + 12) = a2;
  *((_QWORD *)v4 + 13) = 0;
  *((_QWORD *)v4 + 13) = morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::CharTermAttribute>((uint64_t)v4);
  v5 = (morphun::analysis::filter::DiacriticFilter *)operator new();
  v6 = (morphun::util::LocaleUtils *)(*(uint64_t (**)(morphun::analysis::ConfigurableAnalyzer *))(*(_QWORD *)this + 144))(this);
  if ((_DWORD)v6)
    v7 = (const morphun::util::ULocale *)morphun::util::LocaleUtils::ROOT(v6);
  else
    v7 = (morphun::analysis::ConfigurableAnalyzer *)((char *)this + 80);
  morphun::analysis::filter::DiacriticFilter::DiacriticFilter(v5, v4, v7);
  return v5;
}

void sub_1CB4D1930(_Unwind_Exception *a1)
{
  morphun::analysis::TokenFilter *v1;

  morphun::analysis::TokenFilter::~TokenFilter(v1, (uint64_t *)&off_1E8669878);
  MEMORY[0x1D179D2EC](v1, 0x10E1C40E08A22EALL);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::ConfigurableAnalyzer::addNumberNormalizationFilter(morphun::analysis::ConfigurableAnalyzer *this, morphun::analysis::TokenStream *a2)
{
  uint64_t v4;

  v4 = operator new();
  *(_QWORD *)v4 = &off_1E866A910;
  morphun::analysis::util::AttributeSource::AttributeSource((morphun::analysis::util::AttributeSource *)v4, (morphun::analysis::util::AttributeSource *)&off_1E8669748, (uint64_t)a2);
  *(_QWORD *)(v4 + 96) = a2;
  *(_QWORD *)v4 = &off_1E8672428;
  *(_OWORD *)(v4 + 104) = 0u;
  *(_OWORD *)(v4 + 120) = 0u;
  morphun::util::ULocale::ULocale((morphun::util::ULocale *)(v4 + 136), (morphun::analysis::ConfigurableAnalyzer *)((char *)this + 80));
  *(_QWORD *)(v4 + 264) = 0;
  *(_QWORD *)(v4 + 272) = 0;
  *(_QWORD *)(v4 + 128) = morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::CharTermAttribute>(v4);
  return v4;
}

void sub_1CB4D1A2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  morphun::analysis::TokenFilter *v10;
  void **v11;
  void **v12;

  v12 = v11;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a10);
  morphun::analysis::TokenFilter::~TokenFilter(v10, (uint64_t *)&off_1E8669738);
  MEMORY[0x1D179D2EC](v10, 0x10F3C400F1780CDLL);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::ConfigurableAnalyzer::addStopFilter(uint64_t a1, uint64_t a2)
{
  return a2;
}

morphun::analysis::TokenStream *morphun::analysis::ConfigurableAnalyzer::addToLatinScriptTransliterationFilter(morphun::analysis::ConfigurableAnalyzer *this, morphun::analysis::TokenStream *a2)
{
  const morphun::util::ULocale *v4;
  const morphun::util::ULocale *v5;
  const morphun::transliteration::Transliterator *Transliterator;
  morphun::analysis::filter::TransliterationFilter *v7;

  v4 = (const morphun::util::ULocale *)morphun::util::LocaleUtils::ENGLISH(this);
  Transliterator = (const morphun::transliteration::Transliterator *)morphun::transliteration::TransliteratorFactory::createTransliterator((morphun::analysis::ConfigurableAnalyzer *)((char *)this + 80), v4, v5);
  if (Transliterator)
  {
    v7 = (morphun::analysis::filter::TransliterationFilter *)operator new();
    morphun::analysis::filter::TransliterationFilter::TransliterationFilter(v7, a2, Transliterator);
    return v7;
  }
  return a2;
}

void sub_1CB4D1B18(_Unwind_Exception *a1, std::basic_string<char16_t> *a2, std::basic_string<char16_t> *a3, void *__p, uint64_t a5, int a6, __int16 a7, char a8, char a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__pa,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  uint64_t v27;
  uint64_t v28;
  int v29;
  const char *v31;
  uint64_t v32;
  std::basic_string<char16_t>::size_type v33;
  void *p_pa;

  v29 = (int)a2;
  MEMORY[0x1D179D2EC](v28, 0x10F3C405E42D0C4, a3, __p);
  if (v29 == 1)
  {
    __cxa_begin_catch(a1);
    if (morphun::util::gLogLevel <= 1)
    {
      if (*(char *)(v27 + 207) < 0)
      {
        v31 = *(const char **)(v27 + 184);
        v32 = *(_QWORD *)(v27 + 192);
      }
      else
      {
        v31 = (const char *)(v27 + 184);
        LODWORD(v32) = *(unsigned __int8 *)(v27 + 207);
      }
      morphun::util::StringViewUtils::to_u16string(v31, v32, (std::basic_string<char16_t> *)&a10);
      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&a16, L"Failed to load the transliterator from ", (std::basic_string<char16_t> *)&a10, v33);
      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&__pa, (std::basic_string<char16_t> *)&a16, L" to Latin");
      if (morphun::util::gLogLevel <= 1)
      {
        if (a27 >= 0)
          p_pa = &__pa;
        else
          p_pa = __pa;
        morphun::util::logToTopOfStackLogger((morphun::util *)1, 0, (uint64_t)p_pa);
      }
      if (a27 < 0)
        operator delete(__pa);
      if (a21 < 0)
        operator delete(a16);
      if (a15 < 0)
        operator delete(a10);
    }
    __cxa_end_catch();
    JUMPOUT(0x1CB4D1AFCLL);
  }
  _Unwind_Resume(a1);
}

morphun::analysis::TokenStream *morphun::analysis::ConfigurableAnalyzer::addToNativeScriptTransliterationFilter(morphun::analysis::ConfigurableAnalyzer *this, morphun::analysis::TokenStream *a2)
{
  morphun::transliteration::TransliteratorFactory *v4;
  const morphun::util::ULocale *v5;
  const morphun::transliteration::Transliterator *Transliterator;
  morphun::analysis::filter::TransliterationFilter *v7;

  v4 = (morphun::transliteration::TransliteratorFactory *)morphun::util::LocaleUtils::ROOT(this);
  Transliterator = (const morphun::transliteration::Transliterator *)morphun::transliteration::TransliteratorFactory::createTransliterator(v4, (morphun::analysis::ConfigurableAnalyzer *)((char *)this + 80), v5);
  if (Transliterator)
  {
    v7 = (morphun::analysis::filter::TransliterationFilter *)operator new();
    morphun::analysis::filter::TransliterationFilter::TransliterationFilter(v7, a2, Transliterator);
    return v7;
  }
  return a2;
}

void sub_1CB4D1CF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void **__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  uint64_t v20;
  uint64_t v21;
  const char *v24;
  uint64_t v25;
  std::basic_string<char16_t>::size_type v26;
  void **p_p;

  MEMORY[0x1D179D2EC](v21, 0x10F3C405E42D0C4);
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    if (morphun::util::gLogLevel <= 1)
    {
      if (*(char *)(v20 + 207) < 0)
      {
        v24 = *(const char **)(v20 + 184);
        v25 = *(_QWORD *)(v20 + 192);
      }
      else
      {
        v24 = (const char *)(v20 + 184);
        LODWORD(v25) = *(unsigned __int8 *)(v20 + 207);
      }
      morphun::util::StringViewUtils::to_u16string(v24, v25, (std::basic_string<char16_t> *)&a9);
      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&__p, L"Failed to load the transliterator to ", (std::basic_string<char16_t> *)&a9, v26);
      if (morphun::util::gLogLevel <= 1)
      {
        if (a20 >= 0)
          p_p = (void **)&__p;
        else
          p_p = __p;
        morphun::util::logToTopOfStackLogger((morphun::util *)1, 0, (uint64_t)p_p);
      }
      if (a20 < 0)
        operator delete(__p);
      if (a14 < 0)
        operator delete(a9);
    }
    __cxa_end_catch();
    JUMPOUT(0x1CB4D1CD4);
  }
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::ConfigurableAnalyzer::addWordNormalizationFilter(uint64_t a1, uint64_t a2)
{
  return a2;
}

morphun::util::LocaleUtils *morphun::analysis::ConfigurableAnalyzer::addUnaccentFilter(morphun::analysis::ConfigurableAnalyzer *this, morphun::analysis::TokenStream *a2)
{
  morphun::util::LocaleUtils *v3;
  const morphun::util::ULocale *v4;

  v3 = (morphun::util::LocaleUtils *)operator new();
  v4 = (const morphun::util::ULocale *)morphun::util::LocaleUtils::ROOT(v3);
  morphun::analysis::filter::DiacriticFilter::DiacriticFilter(v3, a2, v4);
  return v3;
}

void sub_1CB4D1E68(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10E1C40F87B0920);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::ConfigurableAnalyzer::addSplitPunctuationFilter(const char **this, morphun::analysis::TokenStream *a2)
{
  uint64_t v4;
  morphun::analysis::filter::LanguageExpansion *v5;
  unsigned __int8 v6;
  _QWORD *v8;
  morphun::exception::NullPointerException *exception;

  v4 = operator new();
  *(_QWORD *)v4 = &off_1E866A910;
  morphun::analysis::util::AttributeSource::AttributeSource((morphun::analysis::util::AttributeSource *)v4, (morphun::analysis::util::AttributeSource *)&off_1E8669808, (uint64_t)a2);
  *(_QWORD *)v4 = &off_1E8672548;
  *(_QWORD *)(v4 + 104) = 0;
  *(_QWORD *)(v4 + 112) = 0;
  *(_QWORD *)(v4 + 96) = a2;
  v5 = morphun::analysis::filter::LanguageExpansion::LanguageExpansion((morphun::analysis::filter::LanguageExpansion *)(v4 + 120), this + 10);
  *(_QWORD *)(v4 + 272) = morphun::dictionary::PhraseProperties::PUNCTUATION(v5);
  if ((v6 & 1) == 0
  {
    v8 = (_QWORD *)operator new();
    icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v8);
    MEMORY[0x1D179D970](*v8);
    morphun::analysis::filter::SplitPunctuationFilter::NUMERIC_INFIX(void)::NUMERIC_INFIX_ = (uint64_t)v8;
  }
  if (!morphun::analysis::filter::SplitPunctuationFilter::NUMERIC_INFIX(void)::NUMERIC_INFIX_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  *(_QWORD *)(v4 + 280) = morphun::analysis::filter::SplitPunctuationFilter::NUMERIC_INFIX(void)::NUMERIC_INFIX_;
  *(_OWORD *)(v4 + 288) = 0u;
  *(_OWORD *)(v4 + 304) = 0u;
  *(_OWORD *)(v4 + 320) = 0u;
  *(_OWORD *)(v4 + 336) = 0u;
  *(_OWORD *)(v4 + 352) = 0u;
  *(_OWORD *)(v4 + 368) = 0u;
  *(_QWORD *)(v4 + 104) = morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::CharTermAttribute>(v4);
  return v4;
}

void sub_1CB4D1FE0(_Unwind_Exception *a1)
{
  morphun::analysis::TokenFilter *v1;
  void **v2;
  uint64_t v3;

  MEMORY[0x1D179D2EC](v3, 0x1020C405F07FB98);
  morphun::analysis::filter::LanguageExpansion::~LanguageExpansion(v2);
  morphun::analysis::TokenFilter::~TokenFilter(v1, (uint64_t *)&off_1E86697F8);
  MEMORY[0x1D179D2EC](v1, 0x10F3C40BBBF42DCLL);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::ConfigurableAnalyzer::isStripAllAccents(morphun::analysis::ConfigurableAnalyzer *this)
{
  return 0;
}

__n128 std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>(uint64_t a1, std::basic_string<char16_t> *this, std::basic_string<char16_t>::value_type *__s)
{
  uint64_t v6;
  std::basic_string<char16_t>::size_type v7;
  __n128 result;

  if (*__s)
  {
    v6 = 0;
    do
      v7 = v6 + 1;
    while (__s[++v6]);
  }
  else
  {
    v7 = 0;
  }
  std::basic_string<char16_t>::append(this, __s, v7);
  result = *(__n128 *)&this->__r_.__value_.__l.__data_;
  *(_OWORD *)a1 = *(_OWORD *)&this->__r_.__value_.__l.__data_;
  *(_QWORD *)(a1 + 16) = *((_QWORD *)&this->__r_.__value_.__l + 2);
  this->__r_.__value_.__l.__size_ = 0;
  this->__r_.__value_.__r.__words[2] = 0;
  this->__r_.__value_.__r.__words[0] = 0;
  return result;
}

uint64_t npc<morphun::Chunk const>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4D2174(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::Token>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4D21CC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::basic_string<char16_t>::reserve(std::basic_string<char16_t> *this, std::basic_string<char16_t>::size_type __requested_capacity)
{
  unint64_t v3;
  std::basic_string<char16_t>::size_type v4;
  std::basic_string<char16_t>::size_type v5;
  unint64_t v6;
  unint64_t v7;
  std::basic_string<char16_t>::size_type v8;
  std::basic_string<char16_t>::size_type v9;
  uint64_t v10;
  uint64_t v11;
  std::basic_string<char16_t> *v12;
  int v13;
  void *v14;
  uint64_t v15;
  std::basic_string<char16_t>::size_type size;
  int v17;
  BOOL v18;
  std::basic_string<char16_t>::size_type v19;

  if (__requested_capacity >= 0x7FFFFFFFFFFFFFF8)
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  LODWORD(v3) = SHIBYTE(this->__r_.__value_.__r.__words[2]);
  if ((v3 & 0x80000000) == 0)
  {
    if (__requested_capacity <= 0xA)
      return;
    v4 = HIBYTE(this->__r_.__value_.__r.__words[2]);
    if (v4 <= __requested_capacity)
      v5 = __requested_capacity;
    else
      v5 = HIBYTE(this->__r_.__value_.__r.__words[2]);
    if ((v5 | 3) != 0xB)
    {
      v11 = (v5 | 3) + 1;
      goto LABEL_24;
    }
    v6 = (v5 & 0xFFFFFFFFFFFFFFFCLL) + 4;
LABEL_20:
    v11 = v6 + 1;
    if (v6 < 0xB)
    {
      v12 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
      v13 = 1;
      v14 = this;
      if ((v3 & 0x80) != 0)
        goto LABEL_28;
      goto LABEL_26;
    }
LABEL_24:
    v14 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v11);
    v11 = v15;
    LODWORD(v3) = SHIBYTE(this->__r_.__value_.__r.__words[2]);
    if ((v3 & 0x80000000) != 0)
    {
      LOBYTE(v13) = 0;
      v12 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
LABEL_28:
      size = this->__r_.__value_.__l.__size_;
      v17 = 1;
LABEL_29:
      v18 = __CFADD__(size, 1);
      v19 = size + 1;
      if (v18)
      {
        if (v17)
          goto LABEL_35;
      }
      else
      {
        memmove(v14, v12, 2 * v19);
        if (v17)
        {
LABEL_35:
          operator delete(v12);
          if ((v13 & 1) == 0)
            goto LABEL_36;
          goto LABEL_33;
        }
      }
      if ((v13 & 1) == 0)
      {
LABEL_36:
        this->__r_.__value_.__l.__size_ = v4;
        this->__r_.__value_.__r.__words[2] = v11 | 0x8000000000000000;
        this->__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v14;
        return;
      }
LABEL_33:
      *((_BYTE *)&this->__r_.__value_.__s + 23) = v4 & 0x7F;
      return;
    }
    v13 = 0;
    v12 = this;
LABEL_26:
    size = v3;
    v17 = v13;
    goto LABEL_29;
  }
  v7 = this->__r_.__value_.__r.__words[2];
  v8 = (v7 & 0x7FFFFFFFFFFFFFFFLL) - 1;
  if (v8 < __requested_capacity)
  {
    v4 = this->__r_.__value_.__l.__size_;
    if (v4 <= __requested_capacity)
      v9 = __requested_capacity;
    else
      v9 = this->__r_.__value_.__l.__size_;
    v10 = (v9 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((v9 | 3) != 0xB)
      v10 = v9 | 3;
    v6 = v9 >= 0xB ? v10 : 10;
    if (v6 != v8)
    {
      v3 = HIBYTE(v7);
      goto LABEL_20;
    }
  }
}

void sub_1CB4D2368(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_end_catch();
}

morphun::Token **morphun::analysis::ConfigurableAnalyzer::splitDelimiters(morphun::analysis::ConfigurableAnalyzer *this, int a2, int a3, morphun::Token **a4, morphun::Token **a5, const morphun::Token *lpsrc, const morphun::Chunk *a7)
{
  int v9;
  void *v10;
  int v11;
  int v12;
  morphun::Token *v13;
  morphun::Token *v14;
  morphun::Token *v15;
  int v16;
  morphun::Token **v17;
  unint64_t v18;
  int v19;
  morphun::Token **v20;
  unint64_t v21;
  _QWORD *exception;
  std::basic_string<char16_t>::size_type v23;
  std::basic_string<char16_t> *v24;
  std::basic_string<char16_t>::size_type size;
  uint64_t v27;
  std::basic_string<char16_t> v28;
  std::basic_string<char16_t> v29;
  std::basic_string<char16_t> v30;
  std::basic_string<char16_t> v31;
  std::basic_string<char16_t> v32;

  v9 = a3 + (_DWORD)this;
  v27 = (a3 + a2);
  if (lpsrc)
  {
    if (v10)
    {
      a5 = (morphun::Token **)(*(uint64_t (**)(void *, uint64_t))(*(_QWORD *)v10 + 152))(v10, v27);
      if (a5)
        goto LABEL_8;
LABEL_24:
      exception = __cxa_allocate_exception(0x38uLL);
      morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(int)v27, &v29);
      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v30, L"Cannot locate the sub-chunk from ", &v29, v23);
      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v31, &v30, L" to ");
      morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)v9, &v28);
      if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v24 = &v28;
      else
        v24 = (std::basic_string<char16_t> *)v28.__r_.__value_.__r.__words[0];
      if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        size = HIBYTE(v28.__r_.__value_.__r.__words[2]);
      else
        size = v28.__r_.__value_.__l.__size_;
      std::basic_string<char16_t>::append(&v31, (const std::basic_string<char16_t>::value_type *)v24, size);
      v32 = v31;
      memset(&v31, 0, sizeof(v31));
      morphun::exception::Throwable::Throwable((uint64_t)exception, (__int128 *)&v32);
      *exception = &off_1E86730F0;
    }
  }
  while (1)
  {
    if (!a5)
      goto LABEL_24;
    if ((int)v27 <= (*((int (**)(morphun::Token **))*a5 + 3))(a5))
      break;
    a5 = (morphun::Token **)a5[10];
  }
  while (1)
  {
LABEL_8:
    v11 = (*((uint64_t (**)(morphun::Token **))*a5 + 3))(a5);
    v12 = (*((uint64_t (**)(morphun::Token **))*a5 + 4))(a5);
    v13 = *a4;
    v14 = (morphun::Token *)operator new();
    v15 = v14;
    v16 = *((char *)a5 + 39);
    if (v16 >= 0)
      v17 = a5 + 2;
    else
      v17 = (morphun::Token **)a5[2];
    if (v16 >= 0)
      v18 = *((unsigned __int8 *)a5 + 39);
    else
      v18 = (unint64_t)a5[3];
    v19 = *((char *)a5 + 63);
    if (v19 >= 0)
      v20 = a5 + 5;
    else
      v20 = (morphun::Token **)a5[5];
    if (v19 >= 0)
      v21 = *((unsigned __int8 *)a5 + 63);
    else
      v21 = (unint64_t)a5[6];
    *(_QWORD *)v14 = &off_1E8656C30;
    morphun::Token::Token(v14, (uint64_t *)&off_1E8667030, v11, v12, v17, v18, v20, v21, 0);
    *(_QWORD *)v15 = &off_1E866A2D0;
    if (v13)
    {
      *((_QWORD *)v13 + 10) = v15;
      *((_QWORD *)v15 + 9) = v13;
    }
    *a4 = v15;
    if (v9 <= v12)
      return a5;
    a5 = (morphun::Token **)a5[10];
    if (!a5)
      goto LABEL_24;
  }
}

void sub_1CB4D25E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  void *v37;
  void *v38;
  int v39;
  int v40;

  if (a37 < 0)
    operator delete(__p);
  if (v40 < 0)
    operator delete(v38);
  if (a31 < 0)
    operator delete(a26);
  if (a25 < 0)
    operator delete(a20);
  if (a19 < 0)
  {
    operator delete(a14);
    if ((v39 & 1) == 0)
LABEL_14:
      _Unwind_Resume(a1);
  }
  else if (!v39)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v37);
  goto LABEL_14;
}

uint64_t npc<morphun::analysis::tokenattributes::SkippedOffsetsAttribute>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4D26F8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

morphun::Token *morphun::analysis::ConfigurableAnalyzer::addDelimitersFromOffsets(uint64_t a1, uint64_t a2, unint64_t a3, int a4, morphun::Token *a5, uint64_t a6)
{
  uint64_t v10;
  int v11;
  int **v12;
  int *v13;
  int *v14;
  uint64_t v15;
  int v16;
  int v17;
  UChar *v18;
  unint64_t v19;
  std::basic_string<char16_t>::size_type v20;
  morphun::Token *v21;
  morphun::Token *v22;
  std::basic_string<char16_t> *v23;
  std::basic_string<char16_t>::size_type size;
  uint64_t v26;
  std::basic_string<char16_t> v29;

  v10 = *(_QWORD *)(a1 + 72);
  v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a6 + 64))(a6);
  v12 = (int **)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a6 + 72))(a6);
  v14 = *v12;
  v13 = v12[1];
  if (*v12 == v13)
    return a5;
  v15 = v10 & 6;
  v26 = a1 + 80;
  do
  {
    v16 = *v14;
    memset(&v29, 0, sizeof(v29));
    v17 = v11 - a4;
    if (a3 < v11 - a4)
      std::__throw_out_of_range[abi:ne180100]("string_view::substr");
    v18 = (UChar *)(a2 + 2 * v17);
    v19 = a3 - v17;
    if (v19 >= v16 - v11)
      v20 = v16 - v11;
    else
      v20 = v19;
    if (v15)
      morphun::util::StringViewUtils::lowercase((uint64_t)&v29, v18, v20, v26);
    else
      std::basic_string<char16_t>::__assign_external(&v29, (const std::basic_string<char16_t>::value_type *)v18, v20);
    v21 = (morphun::Token *)operator new();
    v22 = v21;
    if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v23 = &v29;
    else
      v23 = (std::basic_string<char16_t> *)v29.__r_.__value_.__r.__words[0];
    if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v29.__r_.__value_.__r.__words[2]);
    else
      size = v29.__r_.__value_.__l.__size_;
    *(_QWORD *)v21 = &off_1E8656C30;
    morphun::Token::Token(v21, (uint64_t *)&off_1E8667030, v11, v16, v18, v20, v23, size, 0);
    *(_QWORD *)v22 = &off_1E866A2D0;
    if (a5)
    {
      *((_QWORD *)a5 + 10) = v22;
      *((_QWORD *)v22 + 9) = a5;
    }
    if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v29.__r_.__value_.__l.__data_);
    ++v14;
    a5 = v22;
    v11 = v16;
  }
  while (v14 != v13);
  return v22;
}

void sub_1CB4D28C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  uint64_t v19;

  MEMORY[0x1D179D2EC](v19, 0x10B3C405B5873CALL);
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t *std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__assign_with_size[abi:ne180100]<morphun::analysis::tokenattributes::LemmaMapping*,morphun::analysis::tokenattributes::LemmaMapping*>(uint64_t *result, const std::basic_string<char16_t> *a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  std::basic_string<char16_t> *v22;
  uint64_t v23;
  const std::basic_string<char16_t> *v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;

  v6 = (uint64_t)a2;
  v7 = result;
  v8 = result[2];
  v9 = *result;
  if (0xAAAAAAAAAAAAAAABLL * ((v8 - *result) >> 4) < a4)
  {
    if (v9)
    {
      v10 = result[1];
      v11 = (void *)*result;
      if (v10 != v9)
      {
        v12 = (_QWORD *)(v10 - 48);
        v13 = (_QWORD *)(v10 - 48);
        do
        {
          v14 = *v13;
          v13 -= 6;
          (*(void (**)(_QWORD *))(v14 + 8))(v12);
          v15 = v12 == (_QWORD *)v9;
          v12 = v13;
        }
        while (!v15);
        v11 = (void *)*v7;
      }
      v7[1] = v9;
      operator delete(v11);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 > 0x555555555555555)
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    v16 = 0xAAAAAAAAAAAAAAABLL * (v8 >> 4);
    v17 = 2 * v16;
    if (2 * v16 <= a4)
      v17 = a4;
    if (v16 >= 0x2AAAAAAAAAAAAAALL)
      v18 = 0x555555555555555;
    else
      v18 = v17;
    std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__vallocate[abi:ne180100](v7, v18);
    result = (uint64_t *)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<morphun::analysis::tokenattributes::LemmaMapping>,morphun::analysis::tokenattributes::LemmaMapping*,morphun::analysis::tokenattributes::LemmaMapping*,morphun::analysis::tokenattributes::LemmaMapping*>(v6, a3, v7[1]);
LABEL_22:
    v7[1] = (uint64_t)result;
    return result;
  }
  v19 = result[1];
  v20 = 0xAAAAAAAAAAAAAAABLL * ((v19 - v9) >> 4);
  if (v20 < a4)
  {
    v21 = (uint64_t)a2 + 16 * ((v19 - v9) >> 4);
    if (v19 != v9)
    {
      v22 = (std::basic_string<char16_t> *)(v9 + 24);
      v23 = 48 * v20;
      v24 = a2 + 1;
      do
      {
        *(_OWORD *)&v22[-1].__r_.__value_.__r.__words[1] = *(_OWORD *)&v24[-1].__r_.__value_.__r.__words[1];
        std::basic_string<char16_t>::operator=(v22, v24);
        v22 += 2;
        v24 += 2;
        v23 -= 48;
      }
      while (v23);
      v9 = v7[1];
    }
    result = (uint64_t *)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<morphun::analysis::tokenattributes::LemmaMapping>,morphun::analysis::tokenattributes::LemmaMapping*,morphun::analysis::tokenattributes::LemmaMapping*,morphun::analysis::tokenattributes::LemmaMapping*>(v21, a3, v9);
    goto LABEL_22;
  }
  if (a2 != (const std::basic_string<char16_t> *)a3)
  {
    do
    {
      *(_OWORD *)(v9 + 8) = *(_OWORD *)(v6 + 8);
      result = (uint64_t *)std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)(v9 + 24), (const std::basic_string<char16_t> *)(v6 + 24));
      v6 += 48;
      v9 += 48;
    }
    while (v6 != a3);
    v19 = v7[1];
  }
  if (v19 != v9)
  {
    v25 = (_QWORD *)(v19 - 48);
    v26 = (_QWORD *)(v19 - 48);
    do
    {
      v27 = *v26;
      v26 -= 6;
      result = (uint64_t *)(*(uint64_t (**)(_QWORD *))(v27 + 8))(v25);
      v15 = v25 == (_QWORD *)v9;
      v25 = v26;
    }
    while (!v15);
  }
  v7[1] = v9;
  return result;
}

void sub_1CB4D2AF4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  char *v2;
  char *v4;
  void *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  BOOL v9;

  v1 = *a1;
  v2 = (char *)**a1;
  if (v2)
  {
    v4 = (char *)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      v6 = v4 - 48;
      v7 = v4 - 48;
      do
      {
        v8 = *(_QWORD *)v7;
        v7 -= 48;
        (*(void (**)(char *))(v8 + 8))(v6);
        v9 = v6 == v2;
        v6 = v7;
      }
      while (!v9);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<morphun::analysis::tokenattributes::LemmaMapping>,morphun::analysis::tokenattributes::LemmaMapping*,morphun::analysis::tokenattributes::LemmaMapping*,morphun::analysis::tokenattributes::LemmaMapping*>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  std::basic_string<char16_t> *v8;
  const std::basic_string<char16_t>::value_type **v9;
  __int128 v10;

  if (a1 != a2)
  {
    v6 = 0;
    do
    {
      v7 = a3 + v6;
      *(_QWORD *)v7 = &off_1E8670E88;
      *(_OWORD *)(v7 + 8) = *(_OWORD *)(a1 + v6 + 8);
      v8 = (std::basic_string<char16_t> *)(a3 + v6 + 24);
      v9 = (const std::basic_string<char16_t>::value_type **)(a1 + v6 + 24);
      if (*(char *)(a1 + v6 + 47) < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external(v8, *v9, *(_QWORD *)(a1 + v6 + 32));
      }
      else
      {
        v10 = *(_OWORD *)v9;
        *(_QWORD *)(a3 + v6 + 40) = *(_QWORD *)(a1 + v6 + 40);
        *(_OWORD *)&v8->__r_.__value_.__l.__data_ = v10;
      }
      v6 += 48;
    }
    while (a1 + v6 != a2);
    a3 += v6;
  }
  return a3;
}

char *std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__vallocate[abi:ne180100](_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >= 0x555555555555556)
    std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>(a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[48 * v4];
  return result;
}

BOOL std::type_info::operator==[abi:ne180100](uint64_t a1, uint64_t a2)
{
  if (a1 == a2)
    return 1;
  if ((a2 & a1) < 0 != __OFSUB__(a1, a2))
    return strcmp((const char *)(a1 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(a2 & 0x7FFFFFFFFFFFFFFFLL)) == 0;
  return 0;
}

uint64_t std::shared_ptr<morphun::analysis::util::AttributeImpl>::~shared_ptr[abi:ne180100](uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void std::__shared_ptr_pointer<morphun::analysis::util::AttributeImpl *,std::shared_ptr<morphun::analysis::util::AttributeImpl>::__shared_ptr_default_delete<morphun::analysis::util::AttributeImpl,morphun::analysis::util::AttributeImpl>,std::allocator<morphun::analysis::util::AttributeImpl>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t std::__shared_ptr_pointer<morphun::analysis::util::AttributeImpl *,std::shared_ptr<morphun::analysis::util::AttributeImpl>::__shared_ptr_default_delete<morphun::analysis::util::AttributeImpl,morphun::analysis::util::AttributeImpl>,std::allocator<morphun::analysis::util::AttributeImpl>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
  return result;
}

uint64_t std::__shared_ptr_pointer<morphun::analysis::util::AttributeImpl *,std::shared_ptr<morphun::analysis::util::AttributeImpl>::__shared_ptr_default_delete<morphun::analysis::util::AttributeImpl,morphun::analysis::util::AttributeImpl>,std::allocator<morphun::analysis::util::AttributeImpl>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(_QWORD *)(a2 + 8), 0x80000001CB72F4FELL))
    return a1 + 24;
  else
    return 0;
}

morphun::analysis::Analyzer *morphun::analysis::ConfigurableAnalyzer::ConfigurableAnalyzer(morphun::analysis::Analyzer *a1, uint64_t *a2, const morphun::util::ULocale *a3, uint64_t a4, uint64_t a5)
{
  morphun::analysis::Analyzer *v10;
  uint64_t v11;
  uint64_t v12;

  v10 = morphun::analysis::Analyzer::Analyzer(a1, a2 + 2);
  v11 = a2[1];
  *(_QWORD *)v10 = v11;
  *(_QWORD *)((char *)v10 + *(_QWORD *)(v11 - 40)) = a2[4];
  *((_QWORD *)v10 + 8) = a4;
  v12 = *a2;
  *(_QWORD *)v10 = *a2;
  *(_QWORD *)((char *)v10 + *(_QWORD *)(v12 - 40)) = a2[5];
  *((_QWORD *)v10 + 9) = a5;
  morphun::util::ULocale::ULocale((morphun::analysis::Analyzer *)((char *)v10 + 80), a3);
  return a1;
}

void sub_1CB4D2E54(_Unwind_Exception *a1)
{
  morphun::analysis::Analyzer *v1;
  uint64_t *v2;

  morphun::analysis::Analyzer::~Analyzer(v1, v2);
  _Unwind_Resume(a1);
}

morphun::analysis::Analyzer *morphun::analysis::ConfigurableAnalyzer::ConfigurableAnalyzer(morphun::analysis::Analyzer *a1, const morphun::util::ULocale *a2, uint64_t a3, uint64_t a4)
{
  morphun::analysis::Analyzer *v8;

  *(_QWORD *)a1 = &off_1E866A910;
  v8 = morphun::analysis::Analyzer::Analyzer(a1, (uint64_t *)&off_1E8669338);
  *(_QWORD *)v8 = &off_1E86719F8;
  *((_QWORD *)v8 + 8) = a3;
  *((_QWORD *)v8 + 9) = a4;
  morphun::util::ULocale::ULocale((morphun::analysis::Analyzer *)((char *)v8 + 80), a2);
  return a1;
}

void sub_1CB4D2ED4(_Unwind_Exception *a1)
{
  morphun::analysis::Analyzer *v1;

  morphun::analysis::Analyzer::~Analyzer(v1, (uint64_t *)&off_1E8669338);
  _Unwind_Resume(a1);
}

void morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(void **this, _QWORD *a2)
{
  _QWORD *v4;

  v4 = (_QWORD *)*a2;
  *this = (void *)*a2;
  *(void **)((char *)this + *(v4 - 5)) = (void *)a2[5];
  morphun::analysis::Analyzer::~Analyzer((morphun::analysis::Analyzer *)this, a2 + 2);
}

void `virtual thunk to'morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(morphun::analysis::ConfigurableAnalyzer *this)
{
  void **v1;

  v1 = (void **)((char *)this + *(_QWORD *)(*(_QWORD *)this - 32));
  *v1 = &off_1E86719F8;
  morphun::analysis::Analyzer::~Analyzer((morphun::analysis::Analyzer *)v1, (uint64_t *)&off_1E8669338);
}

{
  void **v1;

  v1 = (void **)((char *)this + *(_QWORD *)(*(_QWORD *)this - 32));
  *v1 = &off_1E86719F8;
  morphun::analysis::Analyzer::~Analyzer((morphun::analysis::Analyzer *)v1, (uint64_t *)&off_1E8669338);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::tokenizer::locale::th::ThTokenizer::createTokenExtractor(morphun::util::ULocale *a1, uint64_t a2)
{
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t WordsToNotSplit;
  _QWORD *v8;
  uint64_t v9;
  char v10;

  v4 = operator new();
  if ((v5 & 1) == 0
  {
    v8 = (_QWORD *)operator new();
    icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v8);
    MEMORY[0x1D179D970](*v8);
    morphun::tokenizer::locale::th::THAI_LETTERS(void)::THAI_LETTERS_ = (uint64_t)v8;
  }
  v9 = MEMORY[0x1D179D928](*(_QWORD *)morphun::tokenizer::locale::th::THAI_LETTERS(void)::THAI_LETTERS_);
  v10 = 1;
  *(_QWORD *)v4 = &off_1E866A910;
  WordsToNotSplit = morphun::tokenizer::TokenExtractor::createWordsToNotSplit((uint64_t)a1, a2, (uint64_t (*)(void **, uint64_t, _WORD *, unint64_t))morphun::tokenizer::TokenExtractor::isIndivisibleWordNormalized);
  morphun::tokenizer::TokenExtractor::TokenExtractor((uint64_t *)v4, (uint64_t *)&off_1E8669ED8, a1, a2, WordsToNotSplit);
  *(_QWORD *)v4 = &off_1E86738E8;
  *(_BYTE *)(v4 + 160) = 1;
  *(_QWORD *)(v4 + 152) = MEMORY[0x1D179D928](v9);
  *(_BYTE *)(v4 + 160) = 1;
  icu4cxx::UnicodeSet::~UnicodeSet((icu4cxx::UnicodeSet *)&v9);
  return v4;
}

void sub_1CB4D312C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  MEMORY[0x1D179D2EC](v2, 0x1020C405F07FB98);
  MEMORY[0x1D179D2EC](v1, 0x10F3C40002B4C98);
  _Unwind_Resume(a1);
}

void sub_1CB4D3230(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::string::__init_copy_ctor_external(std::string *this, const std::string::value_type *__s, std::string::size_type __sz)
{
  std::string *v5;
  std::string::size_type v6;
  std::string::size_type v7;
  std::string *v8;

  v5 = this;
  if (__sz > 0x16)
  {
    if (__sz >= 0x7FFFFFFFFFFFFFF8)
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    v6 = (__sz & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__sz | 7) != 0x17)
      v6 = __sz | 7;
    v7 = v6 + 1;
    v8 = (std::string *)operator new(v6 + 1);
    v5->__r_.__value_.__l.__size_ = __sz;
    v5->__r_.__value_.__r.__words[2] = v7 | 0x8000000000000000;
    v5->__r_.__value_.__r.__words[0] = (std::string::size_type)v8;
    v5 = v8;
  }
  else
  {
    *((_BYTE *)&this->__r_.__value_.__s + 23) = __sz;
  }
  memmove(v5, __s, __sz + 1);
}

_QWORD *std::basic_string<char16_t>::basic_string<std::u16string_view,0>(_QWORD *__dst, void *__src, unint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;

  if (a3 >= 0x7FFFFFFFFFFFFFF8)
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  if (a3 >= 0xB)
  {
    v7 = (a3 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((a3 | 3) != 0xB)
      v7 = a3 | 3;
    v6 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v7 + 1);
    __dst[1] = a3;
    __dst[2] = v8 | 0x8000000000000000;
    *__dst = v6;
  }
  else
  {
    *((_BYTE *)__dst + 23) = a3;
    v6 = __dst;
    if (!a3)
      goto LABEL_9;
  }
  memmove(v6, __src, 2 * a3);
LABEL_9:
  *((_WORD *)v6 + a3) = 0;
  return __dst;
}

_QWORD *std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__find_equal<std::string>(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v7;
  _QWORD *v8;

  v5 = (_QWORD *)(a1 + 8);
  v4 = *(_QWORD **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        v7 = v4;
        v8 = v4 + 4;
        if (!std::less<std::string>::operator()[abi:ne180100](a3, v4 + 4))
          break;
        v4 = (_QWORD *)*v7;
        v5 = v7;
        if (!*v7)
          goto LABEL_9;
      }
      if (!std::less<std::string>::operator()[abi:ne180100](v8, a3))
        break;
      v5 = v7 + 1;
      v4 = (_QWORD *)v7[1];
    }
    while (v4);
  }
  else
  {
    v7 = (_QWORD *)(a1 + 8);
  }
LABEL_9:
  *a2 = v7;
  return v5;
}

void std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::string>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100](uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  *a1 = 0;
  if (v1)
  {
    if (*((_BYTE *)a1 + 16))
    {
      if (*(char *)(v1 + 79) < 0)
        operator delete(*(void **)(v1 + 56));
      if (*(char *)(v1 + 55) < 0)
        operator delete(*(void **)(v1 + 32));
    }
    operator delete((void *)v1);
  }
}

BOOL std::less<std::string>::operator()[abi:ne180100](_QWORD *a1, _QWORD *a2)
{
  int v2;
  int v3;
  size_t v4;
  size_t v5;
  size_t v6;
  int v7;

  v2 = *((char *)a2 + 23);
  v3 = *((char *)a1 + 23);
  if (v3 >= 0)
    v4 = *((unsigned __int8 *)a1 + 23);
  else
    v4 = a1[1];
  if (v3 < 0)
    a1 = (_QWORD *)*a1;
  if (v2 >= 0)
    v5 = *((unsigned __int8 *)a2 + 23);
  else
    v5 = a2[1];
  if (v2 < 0)
    a2 = (_QWORD *)*a2;
  if (v5 >= v4)
    v6 = v4;
  else
    v6 = v5;
  v7 = memcmp(a1, a2, v6);
  if (v7)
    return v7 < 0;
  else
    return v4 < v5;
}

uint64_t morphun::resources::initLOCALE_FALLTHROUGH_BLACKLIST(morphun::resources *this)
{
  uint64_t v1;
  _QWORD *v2;
  _WORD *v3;
  uint64_t v4;
  int v5;
  uint64_t **v7;
  uint64_t **v8;
  char *v9;
  uint64_t *v10;
  std::string *v11;
  _QWORD *v12;
  _QWORD **v13;
  BOOL v14;
  void *v16[2];
  uint64_t v17;
  std::string v18[4];
  __int128 v19;
  uint64_t v20;
  void *__p;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27[13];
  __int128 v28;
  uint64_t v29;
  _QWORD **v30;
  _QWORD *v31[2];
  std::string v32;

  v1 = operator new();
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)v1 = v1 + 8;
  morphun::resources::DataResource::getProperties(&v30, (uint64_t *)L"/com/apple/siri/data/registration-locale-list.properties", 0x38uLL, 0);
  v2 = v30;
  if (v30 != v31)
  {
    do
    {
      morphun::util::StringViewUtils::to_string(v2[4], v2[5], v18);
      memset(&v32, 0, sizeof(v32));
      v24 = 0;
      v25 = 0;
      v26 = 0;
      __p = 0;
      v22 = 0;
      v23 = 0;
      morphun::util::ULocale::ULocale((uint64_t)v27, (uint64_t)v18, (uint64_t)&v32, (uint64_t)&v24, (uint64_t)&__p);
      if (SHIBYTE(v23) < 0)
        operator delete(__p);
      if (SHIBYTE(v26) < 0)
        operator delete(v24);
      if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v32.__r_.__value_.__l.__data_);
      if (SHIBYTE(v18[0].__r_.__value_.__r.__words[2]) < 0)
        operator delete(v18[0].__r_.__value_.__l.__data_);
      v3 = (_WORD *)v2[6];
      if (*v3)
      {
        v4 = 0;
        do
          v5 = v4 + 1;
        while (v3[++v4]);
      }
      else
      {
        v5 = 0;
      }
      morphun::util::StringViewUtils::to_string((uint64_t)v3, v5, &v32);
      v24 = 0;
      v25 = 0;
      v26 = 0;
      __p = 0;
      v22 = 0;
      v23 = 0;
      v16[0] = 0;
      v16[1] = 0;
      v17 = 0;
      morphun::util::ULocale::ULocale((uint64_t)v18, (uint64_t)&v32, (uint64_t)&v24, (uint64_t)&__p, (uint64_t)v16);
      if (SHIBYTE(v17) < 0)
        operator delete(v16[0]);
      if (SHIBYTE(v23) < 0)
        operator delete(__p);
      if (SHIBYTE(v26) < 0)
        operator delete(v24);
      if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v32.__r_.__value_.__l.__data_);
      v7 = (uint64_t **)std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__find_equal<std::string>(v1, &v24, &v28);
      if (!*v7)
      {
        v8 = v7;
        v9 = (char *)operator new(0x50uLL);
        v10 = (uint64_t *)v9;
        v32.__r_.__value_.__r.__words[0] = (std::string::size_type)v9;
        v32.__r_.__value_.__l.__size_ = v1 + 8;
        v32.__r_.__value_.__s.__data_[16] = 0;
        if (SHIBYTE(v29) < 0)
        {
          std::string::__init_copy_ctor_external((std::string *)(v9 + 32), (const std::string::value_type *)v28, *((std::string::size_type *)&v28 + 1));
        }
        else
        {
          *((_OWORD *)v9 + 2) = v28;
          *((_QWORD *)v9 + 6) = v29;
        }
        v11 = (std::string *)(v10 + 7);
        if (SHIBYTE(v20) < 0)
        {
          std::string::__init_copy_ctor_external(v11, (const std::string::value_type *)v19, *((std::string::size_type *)&v19 + 1));
        }
        else
        {
          *(_OWORD *)&v11->__r_.__value_.__l.__data_ = v19;
          v10[9] = v20;
        }
        v32.__r_.__value_.__s.__data_[16] = 1;
        std::__tree<std::u16string_view>::__insert_node_at((uint64_t **)v1, (uint64_t)v24, v8, v10);
        v32.__r_.__value_.__r.__words[0] = 0;
        std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::string>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100]((uint64_t *)&v32);
      }
      v12 = (_QWORD *)v2[1];
      if (v12)
      {
        do
        {
          v13 = (_QWORD **)v12;
          v12 = (_QWORD *)*v12;
        }
        while (v12);
      }
      else
      {
        do
        {
          v13 = (_QWORD **)v2[2];
          v14 = *v13 == v2;
          v2 = v13;
        }
        while (!v14);
      }
      v2 = v13;
    }
    while (v13 != v31);
  }
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(v31[0]);
  return v1;
}

void sub_1CB4D3790(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,void *a46)
{
  uint64_t v46;
  void **v47;
  uint64_t v48;

  if (*(char *)(v46 + 55) < 0)
    operator delete(*v47);
  std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::string>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100]((uint64_t *)(v48 - 112));
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*(_QWORD **)(v48 - 128));
  _Unwind_Resume(a1);
}

void morphun::resources::DataRegistrationService::getDataPathForLocale(morphun::resources::DataRegistrationService *this@<X0>, std::string *a2@<X8>)
{
  morphun::resources *v4;
  std::mutex *v5;
  morphun::resources *v6;
  uint64_t v7;
  _QWORD *v8;
  std::string __p;

  morphun::resources::fallthroughLocaleString(&__p, this);
  v5 = (std::mutex *)morphun::resources::CLASS_MUTEX(v4);
  std::mutex::lock(v5);
  v7 = morphun::resources::PATHS_MAP(v6);
  npc<std::map<std::string,std::string>>(v7);
  v8 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::find<std::string>(v7, &__p);
  if ((_QWORD *)(v7 + 8) == v8)
  {
    a2->__r_.__value_.__r.__words[0] = 0;
    a2->__r_.__value_.__l.__size_ = 0;
    a2->__r_.__value_.__r.__words[2] = 0;
  }
  else if (*((char *)v8 + 79) < 0)
  {
    std::string::__init_copy_ctor_external(a2, (const std::string::value_type *)v8[7], v8[8]);
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)(v8 + 7);
    a2->__r_.__value_.__r.__words[2] = v8[9];
  }
  std::mutex::unlock(v5);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_1CB4D3954(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  std::mutex *v15;

  std::mutex::unlock(v15);
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void morphun::exception::IOException::~IOException(std::exception *this)
{
  morphun::exception::Throwable::~Throwable(this);
  JUMPOUT(0x1D179D2ECLL);
}

double morphun::exception::IOException::IOException(morphun::exception::IOException *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_QWORD *)this = &off_1E8672FA0;
  return result;
}

{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_QWORD *)this = &off_1E8672FA0;
  return result;
}

_QWORD *morphun::exception::IOException::IOException(uint64_t a1, __int128 *a2)
{
  _QWORD *result;

  result = (_QWORD *)morphun::exception::Throwable::Throwable(a1, a2);
  *result = &off_1E8672FA0;
  return result;
}

{
  _QWORD *result;

  result = (_QWORD *)morphun::exception::Throwable::Throwable(a1, a2);
  *result = &off_1E8672FA0;
  return result;
}

uint64_t **com::apple::siri::tokenizer::data::config_cmn_Hans::getContent@<X0>(uint64_t **a1@<X8>)
{
  __int128 v3;
  const __int16 *v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v3 = xmmword_1E8686980;
  v4 = L"zh_Hans";
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

uint64_t **com::apple::siri::tokenizer::data::config_cmn_Hant::getContent@<X0>(uint64_t **a1@<X8>)
{
  __int128 v3;
  const __int16 *v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v3 = xmmword_1E8676858;
  v4 = L"zh_Hant";
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

uint64_t **com::apple::siri::tokenizer::data::config_zh_Hant::getContent@<X0>(uint64_t **a1@<X8>)
{
  _OWORD v3[3];
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v3[0] = xmmword_1E8674950;
  v3[1] = *(_OWORD *)&off_1E8674960;
  v3[2] = xmmword_1E8674970;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 2);
}

void morphun::dialog::DictionaryLookupFunction::~DictionaryLookupFunction(morphun::dialog::DictionaryLookupFunction *this)
{
  void *v2;
  uint64_t v3;

  *(_QWORD *)this = &off_1E866B2F8;
  v2 = (void *)*((_QWORD *)this + 22);
  if (v2)
  {
    *((_QWORD *)this + 23) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 16))(v3);
  *((_QWORD *)this + 1) = &off_1E8671C00;
}

{
  void *v2;
  uint64_t v3;

  *(_QWORD *)this = &off_1E866B2F8;
  v2 = (void *)*((_QWORD *)this + 22);
  if (v2)
  {
    *((_QWORD *)this + 23) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 16))(v3);
  *((_QWORD *)this + 1) = &off_1E8671C00;
  JUMPOUT(0x1D179D2ECLL);
}

_QWORD *morphun::dialog::DictionaryLookupFunction::getFeatureValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  _QWORD *v5;
  std::basic_string<char16_t> *v6;
  char v7;
  void *__p[2];
  uint64_t v10;

  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)a1 + 32))(__p, a1, v3);
  v4 = (void *)HIBYTE(v10);
  if (v10 < 0)
    v4 = __p[1];
  if (v4)
  {
    v5 = (_QWORD *)operator new();
    *v5 = &off_1E866AD28;
    v6 = (std::basic_string<char16_t> *)(v5 + 1);
    v7 = HIBYTE(v10);
    if (SHIBYTE(v10) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(v6, (const std::basic_string<char16_t>::value_type *)__p[0], (std::basic_string<char16_t>::size_type)__p[1]);
      v7 = HIBYTE(v10);
    }
    else
    {
      *(_OWORD *)&v6->__r_.__value_.__l.__data_ = *(_OWORD *)__p;
      v5[3] = v10;
    }
    v5[4] = 0;
    if (v7 < 0)
      goto LABEL_10;
  }
  else
  {
    v5 = 0;
    if (v10 < 0)
LABEL_10:
      operator delete(__p[0]);
  }
  return v5;
}

void sub_1CB4D3D38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  MEMORY[0x1D179D2EC](v15, 0x10B3C40F7FF9C27);
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void morphun::dialog::DictionaryLookupFunction::determine(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  int v7;
  const UChar *v8;
  uint64_t v9;
  int8x8_t v10;
  uint8x8_t v11;
  BOOL v12;
  int v13;
  const UChar *v14;
  std::basic_string<char16_t>::size_type v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;

  v32 = 0;
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(char *)(a2 + 23);
  if (v7 >= 0)
    v8 = (const UChar *)a2;
  else
    v8 = *(const UChar **)a2;
  if (v7 >= 0)
    v9 = *(unsigned __int8 *)(a2 + 23);
  else
    v9 = *(_QWORD *)(a2 + 8);
  morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v6, (uint64_t)&v32, v8, v9);
  v10 = (int8x8_t)(*(_QWORD *)(a1 + 168) & v32);
  v11 = (uint8x8_t)vcnt_s8(v10);
  v11.i16[0] = vaddlv_u8(v11);
  if (*(_BYTE *)(a1 + 200))
    v12 = v11.u32[0] == 1;
  else
    v12 = 1;
  if (v12)
  {
    morphun::dictionary::DictionaryMetaData::getPropertyName(*(morphun::dictionary::DictionaryMetaData **)(a1 + 16), v10, (uint64_t)a3);
  }
  else
  {
    v13 = *(char *)(a2 + 23);
    if (v13 >= 0)
      v14 = (const UChar *)a2;
    else
      v14 = *(const UChar **)a2;
    if (v13 >= 0)
      v15 = *(unsigned __int8 *)(a2 + 23);
    else
      v15 = *(_QWORD *)(a2 + 8);
    morphun::analysis::DictionaryExposableMorphology::getwordGrammemesets(&v33, a1 + 8, v14, v15);
    v16 = v33;
    v17 = v34;
    if (v33 == v34)
    {
      *a3 = 0;
      a3[1] = 0;
      a3[2] = 0;
    }
    else
    {
      v18 = (uint64_t)(*(_QWORD *)(a1 + 184) - *(_QWORD *)(a1 + 176)) >> 3;
      v19 = v18 + 1;
      if (v18 == -1)
      {
        v20 = 0;
        v21 = 0;
      }
      else
      {
        if (v19 >> 61)
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        v22 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v18 + 1);
        v21 = v22;
        v23 = 0;
        v20 = &v22[8 * v19];
        do
        {
          *(_QWORD *)&v22[v23] = 0;
          v23 += 8;
        }
        while (8 * v18 + 8 != v23);
      }
      v24 = *(_QWORD **)(a1 + 176);
      v25 = *(_QWORD **)(a1 + 184);
      v26 = v25 - v24;
      v27 = v16;
      do
      {
        v28 = *v27;
        if (v24 == v25)
        {
          v29 = 0;
        }
        else
        {
          v29 = 0;
          v30 = v24;
          while ((*v30 & v28) == 0)
          {
            ++v29;
            if (++v30 == v25)
              goto LABEL_34;
          }
          *(_QWORD *)&v21[8 * v29] |= v28;
        }
LABEL_34:
        if (v29 == v26)
          *(_QWORD *)&v21[8 * v26] |= v28;
        ++v27;
      }
      while (v27 != v17);
      if (v21 == v20)
      {
LABEL_41:
        *a3 = 0;
        a3[1] = 0;
        a3[2] = 0;
      }
      else
      {
        v31 = v21;
        while (!*(_QWORD *)v31)
        {
          v31 += 8;
          if (v31 == v20)
            goto LABEL_41;
        }
        morphun::dictionary::DictionaryMetaData::getPropertyName(*(morphun::dictionary::DictionaryMetaData **)(a1 + 16), (int8x8_t)(*(_QWORD *)(a1 + 168) & *(_QWORD *)v31), (uint64_t)a3);
      }
      if (v21)
        operator delete(v21);
    }
    if (v16)
      operator delete(v16);
  }
}

void sub_1CB4D3F84(_Unwind_Exception *exception_object)
{
  void *v1;
  void *v2;

  if (v2)
    operator delete(v2);
  if (v1)
    operator delete(v1);
  _Unwind_Resume(exception_object);
}

void morphun::dialog::DictionaryLookupFunction::determinePhrase(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  int v9;
  const UChar *v10;
  uint64_t v11;
  uint8x8_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  int v24;
  const UChar *v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _BYTE v33[7];
  char v34;
  _DWORD v35[2];
  uint64_t v36;

  v36 = 0;
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(char *)(a2 + 23);
  if (v9 >= 0)
    v10 = (const UChar *)a2;
  else
    v10 = *(const UChar **)a2;
  if (v9 >= 0)
    v11 = *(unsigned __int8 *)(a2 + 23);
  else
    v11 = *(_QWORD *)(a2 + 8);
  morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v8, (uint64_t)&v36, v10, v11);
  v12 = (uint8x8_t)vcnt_s8((int8x8_t)(*(_QWORD *)(a1 + 168) & v36));
  v12.i16[0] = vaddlv_u8(v12);
  if (v12.u32[0] == 1)
  {
    morphun::dictionary::DictionaryMetaData::getPropertyName(*(morphun::dictionary::DictionaryMetaData **)(a1 + 16), (int8x8_t)(*(_QWORD *)(a1 + 168) & v36), a4);
    return;
  }
  memset(v35, 0, 7);
  if (v36)
  {
    v13 = 0;
    v14 = 0;
    LOBYTE(v15) = 0;
LABEL_46:
    *(_QWORD *)a4 = v13;
    *(_QWORD *)(a4 + 8) = v14;
    *(_DWORD *)(a4 + 16) = v35[0];
    *(_DWORD *)(a4 + 19) = *(_DWORD *)((char *)v35 + 3);
    *(_BYTE *)(a4 + 23) = (_BYTE)v15;
    return;
  }
  v16 = (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 160) + 24))(*(_QWORD *)(a1 + 160), a2);
  v17 = npc<morphun::TokenChain>(v16);
  if ((*(int (**)(uint64_t))(*(_QWORD *)v17 + 32))(v17) < 2)
  {
    v13 = 0;
    v14 = 0;
    LOBYTE(v15) = 0;
LABEL_45:
    (*(void (**)(uint64_t))(*(_QWORD *)v16 + 16))(v16);
    goto LABEL_46;
  }
  v31 = 0;
  v18 = *(_OWORD *)(v16 + 8);
  v19 = *(_QWORD *)(v16 + 16);
  if (v19)
    v20 = *(_QWORD *)(v19 + 80);
  else
    v20 = 0;
  v21 = 0;
  v15 = 0;
  while (1)
  {
    v30 = *((_QWORD *)&v18 + 1);
    v22 = v18;
    if (v20 == (_QWORD)v18)
      break;
    if (v23)
    {
      if (!v21)
        v21 = v23;
      v24 = *(char *)(v22 + 63);
      v25 = v24 >= 0 ? (const UChar *)(v22 + 40) : *(const UChar **)(v22 + 40);
      v26 = v24 >= 0 ? *(unsigned __int8 *)(v22 + 63) : *(_QWORD *)(v22 + 48);
      if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(_QWORD *)(a1 + 16), (uint64_t)&v31, v25, v26))
      {
        if ((*(_QWORD *)(a1 + 168) & v31) != 0)
        {
          if ((a3 & 1) != 0)
            break;
        }
      }
    }
    npc<morphun::Token const>(v22);
    *((_QWORD *)&v18 + 1) = v30;
    *(_QWORD *)&v18 = *(_QWORD *)(v22 + 80);
  }
  if (!v15)
  {
    v14 = 0;
    v13 = 0;
    goto LABEL_35;
  }
  morphun::dialog::DictionaryLookupFunction::determine(a1, (uint64_t)v15 + 16, &v31);
  v13 = (void *)v31;
  v14 = v32;
  v35[0] = *(_DWORD *)v33;
  *(_DWORD *)((char *)v35 + 3) = *(_DWORD *)&v33[3];
  LOBYTE(v15) = v34;
  if ((v34 & 0x80000000) == 0)
  {
LABEL_35:
    v27 = 0;
    v28 = v15;
    goto LABEL_36;
  }
  v27 = 1;
  v28 = v32;
LABEL_36:
  if (!v28 && v21)
  {
    morphun::dialog::DictionaryLookupFunction::determine(a1, (uint64_t)v21 + 16, &v31);
    if (v27)
      operator delete(v13);
    v13 = (void *)v31;
    v14 = v32;
    v35[0] = *(_DWORD *)v33;
    *(_DWORD *)((char *)v35 + 3) = *(_DWORD *)&v33[3];
    LOBYTE(v15) = v34;
  }
  if ((char)v15 >= 0)
    v29 = v15;
  else
    v29 = v14;
  if (v29)
    goto LABEL_45;
  morphun::dialog::DictionaryLookupFunction::determine(a1, a2, (_QWORD *)a4);
  (*(void (**)(uint64_t))(*(_QWORD *)v16 + 16))(v16);
  if ((v15 & 0x80) != 0)
    operator delete(v13);
}

void sub_1CB4D429C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  void *v10;
  char v11;

  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 16))(a10);
  if (v11 < 0)
    operator delete(v10);
  _Unwind_Resume(a1);
}

void sub_1CB4D4328(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

char *std::vector<long long>::__vallocate[abi:ne180100](_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 61)
    std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[8 * v4];
  return result;
}

uint64_t morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction(uint64_t a1, uint64_t *a2, const morphun::util::ULocale *a3, uint64_t *a4)
{
  uint64_t v7;
  const morphun::util::ULocale *v8;
  morphun::Tokenizer *Tokenizer;
  uint64_t v10;
  uint64_t *BinaryProperties;

  v7 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + *(_QWORD *)(v7 - 56)) = a2[1];
  *(_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 - 40)) = a2[2];
  morphun::analysis::DictionaryExposableMorphology::DictionaryExposableMorphology((morphun::analysis::DictionaryExposableMorphology *)(a1 + 8), a3);
  Tokenizer = morphun::TokenizerFactory::createTokenizer(a3, v8);
  v10 = npc<morphun::Tokenizer>((uint64_t)Tokenizer);
  *(_OWORD *)(a1 + 168) = 0u;
  *(_QWORD *)(a1 + 160) = v10;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_BYTE *)(a1 + 200) = 0;
  BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(*(_QWORD *)(a1 + 16), (uint64_t *)(a1 + 168), a4);
  morphun::util::Validate::notNull<long long>((uint64_t)BinaryProperties);
  return a1;
}

void sub_1CB4D440C(_Unwind_Exception *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;

  v3 = *(void **)(v1 + 176);
  if (v3)
  {
    *(_QWORD *)(v1 + 184) = v3;
    operator delete(v3);
  }
  v4 = *(_QWORD *)(v1 + 160);
  *(_QWORD *)(v1 + 160) = 0;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  *(_QWORD *)(v1 + 8) = &off_1E8671C00;
  _Unwind_Resume(a1);
}

void sub_1CB4D44A8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::Validate::notNull<long long>(uint64_t result)
{
  _QWORD *exception;
  __int128 __dst;

  if (!result)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "I");
    morphun::exception::Throwable::Throwable((uint64_t)exception, &__dst);
    *exception = &off_1E8673090;
  }
  return result;
}

void sub_1CB4D4540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

uint64_t morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction(uint64_t a1, const morphun::util::ULocale *a2, uint64_t *a3)
{
  const morphun::util::ULocale *v6;
  morphun::Tokenizer *Tokenizer;
  uint64_t v8;
  uint64_t *BinaryProperties;

  *(_QWORD *)a1 = &off_1E866B2F8;
  morphun::analysis::DictionaryExposableMorphology::DictionaryExposableMorphology((morphun::analysis::DictionaryExposableMorphology *)(a1 + 8), a2);
  Tokenizer = morphun::TokenizerFactory::createTokenizer(a2, v6);
  v8 = npc<morphun::Tokenizer>((uint64_t)Tokenizer);
  *(_OWORD *)(a1 + 168) = 0u;
  *(_QWORD *)(a1 + 160) = v8;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_BYTE *)(a1 + 200) = 0;
  BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(*(_QWORD *)(a1 + 16), (uint64_t *)(a1 + 168), a3);
  morphun::util::Validate::notNull<long long>((uint64_t)BinaryProperties);
  return a1;
}

void sub_1CB4D45EC(_Unwind_Exception *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;

  v3 = *(void **)(v1 + 176);
  if (v3)
  {
    *(_QWORD *)(v1 + 184) = v3;
    operator delete(v3);
  }
  v4 = *(_QWORD *)(v1 + 160);
  *(_QWORD *)(v1 + 160) = 0;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  *(_QWORD *)(v1 + 8) = &off_1E8671C00;
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction(uint64_t a1, uint64_t *a2, const morphun::util::ULocale *a3, uint64_t *a4, __int128 **a5)
{
  uint64_t v9;
  const morphun::util::ULocale *v10;
  morphun::Tokenizer *Tokenizer;
  uint64_t v12;
  uint64_t *BinaryProperties;

  v9 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + *(_QWORD *)(v9 - 56)) = a2[1];
  *(_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 - 40)) = a2[2];
  morphun::analysis::DictionaryExposableMorphology::DictionaryExposableMorphology((morphun::analysis::DictionaryExposableMorphology *)(a1 + 8), a3);
  Tokenizer = morphun::TokenizerFactory::createTokenizer(a3, v10);
  v12 = npc<morphun::Tokenizer>((uint64_t)Tokenizer);
  *(_QWORD *)(a1 + 168) = 0;
  *(_QWORD *)(a1 + 160) = v12;
  morphun::dialog::DictionaryLookupFunction::convertDisambiguationPartsOfSpeech(a1 + 176, *(_QWORD *)(a1 + 16), a5);
  *(_BYTE *)(a1 + 200) = 1;
  BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(*(_QWORD *)(a1 + 16), (uint64_t *)(a1 + 168), a4);
  morphun::util::Validate::notNull<long long>((uint64_t)BinaryProperties);
  return a1;
}

void sub_1CB4D46F8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 160);
  *(_QWORD *)(v1 + 160) = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 16))(v3);
  *(_QWORD *)(v1 + 8) = &off_1E8671C00;
  _Unwind_Resume(a1);
}

void morphun::dialog::DictionaryLookupFunction::convertDisambiguationPartsOfSpeech(uint64_t a1, uint64_t a2, __int128 **a3)
{
  __int128 *v5;
  __int128 *v6;
  __int128 v7;
  uint64_t BinaryProperties;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  std::basic_string<char16_t> *v22;
  std::basic_string<char16_t> *v23;
  std::basic_string<char16_t> *v24;
  std::basic_string<char16_t> **v25;
  char v26;
  std::basic_string<char16_t> v27;
  __int128 v28;

  *(_QWORD *)&v28 = *MEMORY[0x1E0C80C00];
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  std::vector<long long>::reserve((void **)a1, 0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3));
  v5 = *a3;
  v6 = a3[1];
  if (*a3 != v6)
  {
    do
    {
      if (*((char *)v5 + 23) < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external(&v27, *(const std::basic_string<char16_t>::value_type **)v5, *((_QWORD *)v5 + 1));
      }
      else
      {
        v7 = *v5;
        v27.__r_.__value_.__r.__words[2] = *((_QWORD *)v5 + 2);
        *(_OWORD *)&v27.__r_.__value_.__l.__data_ = v7;
      }
      v22 = 0;
      v23 = 0;
      v24 = 0;
      v25 = &v22;
      v26 = 0;
      v22 = (std::basic_string<char16_t> *)operator new(0x18uLL);
      v23 = v22;
      v24 = v22 + 1;
      v23 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v24, (__int128 *)&v27, &v28, v22);
      BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(a2, (uint64_t *)&v22);
      v9 = BinaryProperties;
      v11 = *(uint64_t **)(a1 + 8);
      v10 = *(_QWORD *)(a1 + 16);
      if ((unint64_t)v11 >= v10)
      {
        v13 = *(uint64_t **)a1;
        v14 = ((uint64_t)v11 - *(_QWORD *)a1) >> 3;
        v15 = v14 + 1;
        if ((unint64_t)(v14 + 1) >> 61)
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        v16 = v10 - (_QWORD)v13;
        if (v16 >> 2 > v15)
          v15 = v16 >> 2;
        if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFF8)
          v17 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v17 = v15;
        if (v17)
          v17 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v17);
        else
          v18 = 0;
        v19 = (uint64_t *)(v17 + 8 * v14);
        *v19 = v9;
        v12 = v19 + 1;
        while (v11 != v13)
        {
          v20 = *--v11;
          *--v19 = v20;
        }
        *(_QWORD *)a1 = v19;
        *(_QWORD *)(a1 + 8) = v12;
        *(_QWORD *)(a1 + 16) = v17 + 8 * v18;
        if (v13)
          operator delete(v13);
      }
      else
      {
        *v11 = BinaryProperties;
        v12 = v11 + 1;
      }
      *(_QWORD *)(a1 + 8) = v12;
      v25 = &v22;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v25);
      if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v27.__r_.__value_.__l.__data_);
      v5 = (__int128 *)((char *)v5 + 24);
    }
    while (v5 != v6);
  }
}

void sub_1CB4D4950(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  uint64_t v20;
  void *v22;

  v22 = *(void **)v20;
  if (*(_QWORD *)v20)
  {
    *(_QWORD *)(v20 + 8) = v22;
    operator delete(v22);
  }
  _Unwind_Resume(exception_object);
}

void std::vector<long long>::reserve(void **a1, unint64_t a2)
{
  int64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (a2 > ((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3)
  {
    if (a2 >> 61)
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    v3 = (_BYTE *)a1[1] - (_BYTE *)*a1;
    v4 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(a2);
    v5 = &v4[v3 & 0xFFFFFFFFFFFFFFF8];
    v7 = &v4[8 * v6];
    v8 = (char *)*a1;
    v9 = (char *)a1[1];
    v10 = v5;
    if (v9 != *a1)
    {
      v10 = v5;
      do
      {
        v11 = *((_QWORD *)v9 - 1);
        v9 -= 8;
        *((_QWORD *)v10 - 1) = v11;
        v10 -= 8;
      }
      while (v9 != v8);
    }
    *a1 = v10;
    a1[1] = v5;
    a1[2] = v7;
    if (v8)
      operator delete(v8);
  }
}

uint64_t morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction(uint64_t a1, const morphun::util::ULocale *a2, uint64_t *a3, __int128 **a4)
{
  const morphun::util::ULocale *v8;
  morphun::Tokenizer *Tokenizer;
  uint64_t v10;
  uint64_t *BinaryProperties;

  *(_QWORD *)a1 = &off_1E866B2F8;
  morphun::analysis::DictionaryExposableMorphology::DictionaryExposableMorphology((morphun::analysis::DictionaryExposableMorphology *)(a1 + 8), a2);
  Tokenizer = morphun::TokenizerFactory::createTokenizer(a2, v8);
  v10 = npc<morphun::Tokenizer>((uint64_t)Tokenizer);
  *(_QWORD *)(a1 + 168) = 0;
  *(_QWORD *)(a1 + 160) = v10;
  morphun::dialog::DictionaryLookupFunction::convertDisambiguationPartsOfSpeech(a1 + 176, *(_QWORD *)(a1 + 16), a4);
  *(_BYTE *)(a1 + 200) = 1;
  BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(*(_QWORD *)(a1 + 16), (uint64_t *)(a1 + 168), a3);
  morphun::util::Validate::notNull<long long>((uint64_t)BinaryProperties);
  return a1;
}

void sub_1CB4D4AD8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 160);
  *(_QWORD *)(v1 + 160) = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 16))(v3);
  *(_QWORD *)(v1 + 8) = &off_1E8671C00;
  _Unwind_Resume(a1);
}

void morphun::dialog::DictionaryLookupFunction::getFirstWord(std::basic_string<char16_t> *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 24))(a2, a3);
  v5 = npc<morphun::TokenChain>(v4);
  v6 = *(_OWORD *)(v5 + 8);
  v7 = *(_QWORD *)(v5 + 16);
  if (v7)
    v8 = *(_QWORD *)(v7 + 80);
  else
    v8 = 0;
  while (1)
  {
    v10 = *((_QWORD *)&v6 + 1);
    v9 = v6;
    if (v8 == (_QWORD)v6)
    {
      a1->__r_.__value_.__r.__words[0] = 0;
      a1->__r_.__value_.__l.__size_ = 0;
      a1->__r_.__value_.__r.__words[2] = 0;
      goto LABEL_11;
    }
    {
      break;
    }
    npc<morphun::Token const>(v9);
    *((_QWORD *)&v6 + 1) = v10;
    *(_QWORD *)&v6 = *(_QWORD *)(v9 + 80);
  }
  if (*(char *)(v9 + 63) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a1, *(const std::basic_string<char16_t>::value_type **)(v9 + 40), *(_QWORD *)(v9 + 48));
  }
  else
  {
    *(_OWORD *)&a1->__r_.__value_.__l.__data_ = *(_OWORD *)(v9 + 40);
    a1->__r_.__value_.__r.__words[2] = *(_QWORD *)(v9 + 56);
  }
LABEL_11:
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
}

void sub_1CB4D4C54(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 16))(v1);
  _Unwind_Resume(exception_object);
}

uint64_t morphun::tokenizer::locale::fi::FiCompound::FiCompound(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  npc<morphun::tokenizer::locale::fi::FiSuffixSplit>(a2);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = a2;
  v4 = npc<morphun::tokenizer::locale::fi::FiSuffixSplit>(a2);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 8);
  npc<morphun::tokenizer::locale::fi::FiSuffixSplit>(v4);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 12);
  return a1;
}

uint64_t npc<morphun::tokenizer::locale::fi::FiSuffixSplit>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4D4D0C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::tokenizer::locale::fi::FiCompound::addBoundaries(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *v7;
  int v8;
  uint64_t *v9;
  int v10;
  int v11;
  _BOOL4 v12;
  float v13;
  float v14;
  char v15;
  float v16;
  char v17;
  int *v18;
  unint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  BOOL v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  int v30;
  char *exception;
  unsigned int v32;
  _BYTE v33[16];
  float v34;
  _BYTE **v35;
  int v36;
  char v37;
  void *__p;
  char *v39;
  uint64_t v40;
  _BYTE *v41;
  int v42;
  char v43;
  float v44;
  int v45;
  int v46;
  char v47;
  void *v48;
  char *v49;
  uint64_t v50;
  _BYTE v51[60];
  float v52;
  char v53;

  if (a2 <= 0)
  {
    exception = (char *)__cxa_allocate_exception(0x38uLL);
    *(_OWORD *)(exception + 8) = 0u;
    *(_OWORD *)(exception + 24) = 0u;
    *(_OWORD *)(exception + 40) = 0u;
    *(_QWORD *)exception = &off_1E8673190;
  }
  if (*(_BYTE *)(npc<morphun::tokenizer::locale::fi::FiSuffixSplit>(*(_QWORD *)(a1 + 8)) + 12))
  {
    *(_DWORD *)(a1 + 16) = *(_DWORD *)(npc<morphun::tokenizer::locale::fi::FiSuffixSplit>(*(_QWORD *)(a1 + 8)) + 8);
    v6 = npc<morphun::tokenizer::locale::fi::FiSuffixSplit>(*(_QWORD *)(a1 + 8));
    morphun::tokenizer::locale::fi::FiSuffixSplit::addBoundaries(v6, (int **)a3, 0);
    return;
  }
  *(_DWORD *)(a1 + 16) = -990248960;
  *(_BYTE *)(a1 + 20) = 0;
  v7 = (uint64_t *)npc<morphun::tokenizer::locale::fi::FiSuffixSplit>(*(_QWORD *)(a1 + 8));
  v8 = *(_DWORD *)(npc<morphun::tokenizer::locale::fi::FiSegment>(*v7) + 64);
  v9 = (uint64_t *)npc<morphun::tokenizer::locale::fi::FiSuffixSplit>(*(_QWORD *)(a1 + 8));
  v10 = *(_DWORD *)(npc<morphun::tokenizer::locale::fi::FiSegment>(*v9) + 68);
  v11 = v8 + 3;
  if (v8 + 3 < v10 - 2)
  {
    v32 = a2 - 1;
    while (1)
    {
      morphun::tokenizer::locale::fi::FiSegment::FiSegment((uint64_t)v51, *(_QWORD *)a1, v8, v11, 0);
      v48 = 0;
      v49 = 0;
      v50 = 0;
      morphun::tokenizer::locale::fi::FiSegment::addBoundaries((uint64_t)v51, (int **)&v48);
      if (v53)
        break;
      v41 = v51;
      *(float *)&v42 = -1000.0;
      v43 = 0;
      v49 = (char *)v48;
      morphun::tokenizer::locale::fi::FiSuffixSplit::addBoundaries((uint64_t)&v41, (int **)&v48, 1);
      v12 = v43 != 0;
      if (!*(_BYTE *)(a1 + 20) || v43)
      {
        v13 = *(float *)&v42;
        goto LABEL_11;
      }
LABEL_47:
      if (v48)
      {
        v49 = (char *)v48;
        operator delete(v48);
      }
      if (++v11 == v10 - 2)
        return;
    }
    v12 = 1;
    v13 = v52;
LABEL_11:
    morphun::tokenizer::locale::fi::FiSegment::FiSegment((uint64_t)&v41, *(_QWORD *)a1, v11, v10, 1);
    __p = 0;
    v39 = 0;
    v40 = 0;
    morphun::tokenizer::locale::fi::FiSegment::addBoundaries((uint64_t)&v41, (int **)&__p);
    if (v47)
    {
      v14 = v44;
    }
    else
    {
      v35 = &v41;
      *(float *)&v36 = -1000.0;
      v37 = 0;
      v39 = (char *)__p;
      morphun::tokenizer::locale::fi::FiSuffixSplit::addBoundaries((uint64_t)&v35, (int **)&__p, 0);
      v14 = *(float *)&v36;
      if (!v37)
      {
        v15 = !v12;
        if (*(_BYTE *)(a1 + 20))
          v15 = 1;
        if ((v15 & 1) != 0 || v46 - v45 < 7)
        {
          v12 = 0;
        }
        else
        {
          morphun::tokenizer::locale::fi::FiCompound::FiCompound((uint64_t)v33, (uint64_t)&v35);
          v39 = (char *)__p;
          morphun::tokenizer::locale::fi::FiCompound::addBoundaries(v33, v32, &__p);
          v12 = 0;
          v14 = v34;
        }
      }
    }
    v16 = v13 + v14;
    if (v16 > *(float *)(a1 + 16))
      goto LABEL_24;
    v17 = !v12;
    if (*(_BYTE *)(a1 + 20))
      v17 = 1;
    if ((v17 & 1) == 0)
    {
LABEL_24:
      npc<std::vector<int>>(a3);
      v18 = *(int **)a3;
      *(_QWORD *)(a3 + 8) = *(_QWORD *)a3;
      if (v48 != v49)
      {
        std::vector<int>::__insert_with_size[abi:ne180100]<std::__wrap_iter<int *>,std::__wrap_iter<int *>>(a3, (char *)v18, (char *)v48, v49, (v49 - (_BYTE *)v48) >> 2);
        v18 = *(int **)(a3 + 8);
      }
      v19 = *(_QWORD *)(a3 + 16);
      if ((unint64_t)v18 >= v19)
      {
        v21 = *(int **)a3;
        v22 = ((uint64_t)v18 - *(_QWORD *)a3) >> 2;
        v23 = v22 + 1;
        if ((unint64_t)(v22 + 1) >> 62)
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        v24 = v19 - (_QWORD)v21;
        if (v24 >> 1 > v23)
          v23 = v24 >> 1;
        v25 = (unint64_t)v24 >= 0x7FFFFFFFFFFFFFFCLL;
        v26 = 0x3FFFFFFFFFFFFFFFLL;
        if (!v25)
          v26 = v23;
        if (v26)
        {
          v26 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(v26);
          v28 = v27;
          v21 = *(int **)a3;
          v18 = *(int **)(a3 + 8);
        }
        else
        {
          v28 = 0;
        }
        v29 = (int *)(v26 + 4 * v22);
        *v29 = v11;
        v20 = (char *)(v29 + 1);
        while (v18 != v21)
        {
          v30 = *--v18;
          *--v29 = v30;
        }
        *(_QWORD *)a3 = v29;
        *(_QWORD *)(a3 + 8) = v20;
        *(_QWORD *)(a3 + 16) = v26 + 4 * v28;
        if (v21)
          operator delete(v21);
      }
      else
      {
        *v18 = v11;
        v20 = (char *)(v18 + 1);
      }
      *(_QWORD *)(a3 + 8) = v20;
      if (__p != v39)
        std::vector<int>::__insert_with_size[abi:ne180100]<std::__wrap_iter<int *>,std::__wrap_iter<int *>>(a3, v20, (char *)__p, v39, (v39 - (_BYTE *)__p) >> 2);
      *(float *)(a1 + 16) = v16;
      if (v12)
        *(_BYTE *)(a1 + 20) = 1;
    }
    if (__p)
    {
      v39 = (char *)__p;
      operator delete(__p);
    }
    goto LABEL_47;
  }
}

void sub_1CB4D5104(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30)
{
  if (__p)
    operator delete(__p);
  if (a29)
    operator delete(a29);
  _Unwind_Resume(exception_object);
}

uint64_t npc<std::vector<int>>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4D5198(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::vector<int>::__insert_with_size[abi:ne180100]<std::__wrap_iter<int *>,std::__wrap_iter<int *>>(uint64_t a1, char *__dst, char *__src, char *a4, uint64_t a5)
{
  char *v6;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  int v25;
  _DWORD *v26;
  char *v27;
  uint64_t v28;
  _DWORD *v29;
  int v30;
  char *v31;
  char *v32;
  int v33;
  unint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  char *v37;

  if (a5 < 1)
    return;
  v6 = __src;
  v10 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  if (a5 > (uint64_t)(v9 - v10) >> 2)
  {
    v11 = *(char **)a1;
    v12 = a5 + ((uint64_t)(v10 - *(_QWORD *)a1) >> 2);
    if (v12 >> 62)
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    v13 = (__dst - v11) >> 2;
    v14 = v9 - (_QWORD)v11;
    if (v14 >> 1 > v12)
      v12 = v14 >> 1;
    if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFFCLL)
      v15 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v15 = v12;
    if (v15)
      v15 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(v15);
    else
      v16 = 0;
    v26 = (_DWORD *)(v15 + 4 * v13);
    v27 = (char *)&v26[a5];
    v28 = 4 * a5;
    v29 = v26;
    do
    {
      v30 = *(_DWORD *)v6;
      v6 += 4;
      *v29++ = v30;
      v28 -= 4;
    }
    while (v28);
    v31 = *(char **)a1;
    if (*(char **)a1 != __dst)
    {
      v32 = __dst;
      do
      {
        v33 = *((_DWORD *)v32 - 1);
        v32 -= 4;
        *--v26 = v33;
      }
      while (v32 != v31);
    }
    v34 = v15 + 4 * v16;
    v35 = *(_BYTE **)(a1 + 8);
    v36 = v35 - __dst;
    if (v35 != __dst)
      memmove(v27, __dst, v35 - __dst);
    v37 = *(char **)a1;
    *(_QWORD *)a1 = v26;
    *(_QWORD *)(a1 + 8) = &v27[v36];
    *(_QWORD *)(a1 + 16) = v34;
    if (v37)
      operator delete(v37);
    return;
  }
  v17 = v10 - (_QWORD)__dst;
  v18 = (uint64_t)(v10 - (_QWORD)__dst) >> 2;
  if (v18 >= a5)
  {
    v19 = &__src[4 * a5];
    v21 = *(char **)(a1 + 8);
LABEL_17:
    v22 = &__dst[4 * a5];
    v23 = &v21[-4 * a5];
    v24 = v21;
    if ((unint64_t)v23 < v10)
    {
      v24 = v21;
      do
      {
        v25 = *(_DWORD *)v23;
        v23 += 4;
        *(_DWORD *)v24 = v25;
        v24 += 4;
      }
      while ((unint64_t)v23 < v10);
    }
    *(_QWORD *)(a1 + 8) = v24;
    if (v21 != v22)
      memmove(&v21[-4 * ((v21 - v22) >> 2)], __dst, v21 - v22);
    if (v19 != v6)
      memmove(__dst, v6, v19 - v6);
    return;
  }
  v19 = &__src[4 * v18];
  v20 = a4 - v19;
  if (a4 != v19)
    memmove(*(void **)(a1 + 8), &__src[4 * v18], a4 - v19);
  v21 = (char *)(v10 + v20);
  *(_QWORD *)(a1 + 8) = v10 + v20;
  if (v17 >= 1)
    goto LABEL_17;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(unint64_t a1)
{
  if (a1 >> 62)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(4 * a1);
}

uint64_t morphun::grammar::synthesis::ArGrammarSynthesizer_ArticleLookupFunction::getFeatureValue(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  unsigned __int16 *v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL4 v16;
  uint64_t *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unsigned __int16 *v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BOOL4 v28;
  uint64_t *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  unsigned __int16 *v33;
  unsigned __int8 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BOOL4 v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  char *v56;
  char *v57;
  char *v58;
  BOOL v59;
  char **v60;
  char **v61;
  char *v62;
  unsigned __int16 *v63;
  char *v64;
  std::basic_string<char16_t> *v65;
  _QWORD *v66;
  uint64_t j;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  char **v72;
  char **v73;
  char *v74;
  unsigned __int16 *v75;
  char *v76;
  std::basic_string<char16_t> *v77;
  _QWORD *v78;
  uint64_t i;
  uint64_t v80;
  __int128 v81;
  char *v82;
  char *v83;
  char *v84;
  char **v85;
  char **v86;
  char *v87;
  unsigned __int16 *v88;
  char *v89;
  std::basic_string<char16_t> *v90;
  _QWORD *v91;
  uint64_t k;
  char *v93;
  char *v94;
  uint64_t *v95;
  uint64_t *v96;
  char *v97;
  uint64_t *v98;
  uint64_t *v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  std::basic_string<char16_t> v107;
  int v108;
  std::basic_string<char16_t> v109;
  int v110;
  std::basic_string<char16_t> v111;
  int v112;
  uint64_t v113;

  v113 = *MEMORY[0x1E0C80C00];
  v6 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, a1[3]);
  v7 = v6;
  v8 = (_QWORD *)(a3 + 8);
  if ((_QWORD *)(a3 + 8) == v6)
    v9 = 0;
  else
    v9 = (unsigned __int16 *)(v6 + 13);
  if ((v10 & 1) != 0
  {
    goto LABEL_5;
  }
  v98 = (uint64_t *)operator new();
  v44 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR((morphun::grammar::synthesis::GrammemeConstants *)v98);
  if (*(char *)(v44 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v107, *(const std::basic_string<char16_t>::value_type **)v44, *(_QWORD *)(v44 + 8));
  }
  else
  {
    v45 = *(_OWORD *)v44;
    v107.__r_.__value_.__r.__words[2] = *(_QWORD *)(v44 + 16);
    *(_OWORD *)&v107.__r_.__value_.__l.__data_ = v45;
  }
  v108 = 1;
  v49 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_DUAL((morphun::grammar::synthesis::GrammemeConstants *)v44);
  if (*(char *)(v49 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v109, *(const std::basic_string<char16_t>::value_type **)v49, *(_QWORD *)(v49 + 8));
  }
  else
  {
    v50 = *(_OWORD *)v49;
    v109.__r_.__value_.__r.__words[2] = *(_QWORD *)(v49 + 16);
    *(_OWORD *)&v109.__r_.__value_.__l.__data_ = v50;
  }
  v110 = 2;
  v52 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v49);
  if (*(char *)(v52 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v111, *(const std::basic_string<char16_t>::value_type **)v52, *(_QWORD *)(v52 + 8));
  }
  else
  {
    v53 = *(_OWORD *)v52;
    v111.__r_.__value_.__r.__words[2] = *(_QWORD *)(v52 + 16);
    *(_OWORD *)&v111.__r_.__value_.__l.__data_ = v53;
  }
  v97 = 0;
  v112 = 3;
  v98[1] = 0;
  v98[2] = 0;
  v102 = v98 + 1;
  v105 = 0;
  *v98 = (uint64_t)(v98 + 1);
  while (1)
  {
    v68 = (char *)&v107 + 32 * v105;
    v69 = (char *)(v98 + 1);
    if ((uint64_t *)*v98 == v102)
      goto LABEL_110;
    v70 = v97;
    v71 = (char *)(v98 + 1);
    if (v97)
    {
      do
      {
        v69 = v70;
        v70 = (char *)*((_QWORD *)v70 + 1);
      }
      while (v70);
    }
    else
    {
      do
      {
        v69 = (char *)*((_QWORD *)v71 + 2);
        v59 = *(_QWORD *)v69 == (_QWORD)v71;
        v71 = v69;
      }
      while (v59);
    }
    if (std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v69 + 16, (unsigned __int16 *)&v107 + 16 * v105))
    {
LABEL_110:
      v72 = (char **)(v98 + 1);
      v73 = (char **)(v98 + 1);
      if (v97)
      {
        v72 = (char **)(v69 + 8);
        if (*((_QWORD *)v69 + 1))
          goto LABEL_126;
        v73 = (char **)v69;
      }
LABEL_120:
      v76 = (char *)operator new(0x40uLL);
      v77 = (std::basic_string<char16_t> *)(v76 + 32);
      if (v68[23] < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external(v77, *(const std::basic_string<char16_t>::value_type **)v68, *((_QWORD *)v68 + 1));
      }
      else
      {
        *(_OWORD *)&v77->__r_.__value_.__l.__data_ = *(_OWORD *)v68;
        *((_QWORD *)v76 + 6) = *((_QWORD *)v68 + 2);
      }
      *((_DWORD *)v76 + 14) = *((_DWORD *)&v107 + 8 * v105 + 6);
      *(_QWORD *)v76 = 0;
      *((_QWORD *)v76 + 1) = 0;
      *((_QWORD *)v76 + 2) = v73;
      *v72 = v76;
      v78 = *(_QWORD **)*v98;
      if (v78)
      {
        *v98 = (uint64_t)v78;
        v76 = *v72;
      }
      std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>((uint64_t *)v98[1], (uint64_t *)v76);
      ++v98[2];
      goto LABEL_126;
    }
    v72 = (char **)(v98 + 1);
    v73 = (char **)(v98 + 1);
    if (!v97)
      goto LABEL_120;
    v74 = v97;
    while (1)
    {
      while (1)
      {
        v73 = (char **)v74;
        v75 = (unsigned __int16 *)(v74 + 32);
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v68, (unsigned __int16 *)v74 + 16))break;
        v74 = *v73;
        v72 = v73;
        if (!*v73)
          goto LABEL_120;
      }
      if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v75, (unsigned __int16 *)v68))
        break;
      v72 = v73 + 1;
      v74 = v73[1];
      if (!v74)
        goto LABEL_120;
    }
LABEL_126:
    if (++v105 == 3)
      break;
    v97 = (char *)*v102;
  }
  for (i = 0; i != -12; i -= 4)
  {
    if (SHIBYTE(v111.__r_.__value_.__r.__words[i + 2]) < 0)
      operator delete(*(void **)((char *)&v111.__r_.__value_.__l.__data_ + i * 8));
  }
  morphun::grammar::synthesis::ArGrammarSynthesizer::getPronounCount(std::basic_string<char16_t> const*)::valueMap = (uint64_t)v98;
LABEL_5:
  if (v8 == v7)
    goto LABEL_16;
  v11 = morphun::grammar::synthesis::ArGrammarSynthesizer::getPronounCount(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ArGrammarSynthesizer::PronounCount>>(morphun::grammar::synthesis::ArGrammarSynthesizer::getPronounCount(std::basic_string<char16_t> const*)::valueMap);
  v14 = *(_QWORD *)(v11 + 8);
  v12 = v11 + 8;
  v13 = v14;
  if (!v14)
    goto LABEL_13;
  v15 = v12;
  do
  {
    v16 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v13 + 32), v9);
    v17 = (uint64_t *)(v13 + 8);
    if (!v16)
    {
      v17 = (uint64_t *)v13;
      v15 = v13;
    }
    v13 = *v17;
  }
  while (*v17);
  if (v15 == v12
    || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v9, (unsigned __int16 *)(v15 + 32)))
  {
LABEL_13:
    v15 = v12;
  }
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ArGrammarSynthesizer::PronounCount>>(morphun::grammar::synthesis::ArGrammarSynthesizer::getPronounCount(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v15)
LABEL_16:
    v18 = 0;
  else
    v18 = *(unsigned int *)(v15 + 56);
  v19 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, a1[4]);
  v20 = v19;
  if (v8 == v19)
    v21 = 0;
  else
    v21 = (unsigned __int16 *)(v19 + 13);
  if ((v22 & 1) == 0
  {
    v95 = (uint64_t *)operator new();
    v46 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE((morphun::grammar::synthesis::GrammemeConstants *)v95);
    if (*(char *)(v46 + 23) < 0)
      std::basic_string<char16_t>::__init_copy_ctor_external(&v107, *(const std::basic_string<char16_t>::value_type **)v46, *(_QWORD *)(v46 + 8));
    else
      v107 = *(std::basic_string<char16_t> *)v46;
    v108 = 1;
    v51 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE((morphun::grammar::synthesis::GrammemeConstants *)v46);
    if (*(char *)(v51 + 23) < 0)
      std::basic_string<char16_t>::__init_copy_ctor_external(&v109, *(const std::basic_string<char16_t>::value_type **)v51, *(_QWORD *)(v51 + 8));
    else
      v109 = *(std::basic_string<char16_t> *)v51;
    v93 = 0;
    v110 = 2;
    v95[1] = 0;
    v95[2] = 0;
    v99 = v95 + 1;
    v101 = 0;
    *v95 = (uint64_t)(v95 + 1);
    while (1)
    {
      v104 = (char *)&v107 + 32 * v101;
      v56 = (char *)(v95 + 1);
      if ((uint64_t *)*v95 == v99)
        break;
      v57 = v93;
      v58 = (char *)(v95 + 1);
      if (v93)
      {
        do
        {
          v56 = v57;
          v57 = (char *)*((_QWORD *)v57 + 1);
        }
        while (v57);
      }
      else
      {
        do
        {
          v56 = (char *)*((_QWORD *)v58 + 2);
          v59 = *(_QWORD *)v56 == (_QWORD)v58;
          v58 = v56;
        }
        while (v59);
      }
      if (std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v56 + 16, (unsigned __int16 *)v104))
      {
        break;
      }
      v60 = (char **)(v95 + 1);
      v61 = (char **)(v95 + 1);
      if (!v93)
        goto LABEL_89;
      v62 = v93;
      while (1)
      {
        while (1)
        {
          v61 = (char **)v62;
          v63 = (unsigned __int16 *)(v62 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v104, (unsigned __int16 *)v62 + 16))break;
          v62 = *v61;
          v60 = v61;
          if (!*v61)
            goto LABEL_89;
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v63, (unsigned __int16 *)v104))
          break;
        v60 = v61 + 1;
        v62 = v61[1];
        if (!v62)
          goto LABEL_89;
      }
LABEL_95:
      if (++v101 == 2)
      {
        for (j = 0; j != -8; j -= 4)
        {
          if (SHIBYTE(v109.__r_.__value_.__r.__words[j + 2]) < 0)
            operator delete(*(void **)((char *)&v109.__r_.__value_.__l.__data_ + j * 8));
        }
        morphun::grammar::synthesis::ArGrammarSynthesizer::getPronounGender(std::basic_string<char16_t> const*)::valueMap = (uint64_t)v95;
        goto LABEL_21;
      }
      v93 = (char *)*v99;
    }
    v60 = (char **)(v95 + 1);
    v61 = (char **)(v95 + 1);
    if (v93)
    {
      v60 = (char **)(v56 + 8);
      if (*((_QWORD *)v56 + 1))
        goto LABEL_95;
      v61 = (char **)v56;
    }
LABEL_89:
    v64 = (char *)operator new(0x40uLL);
    v65 = (std::basic_string<char16_t> *)(v64 + 32);
    if (v104[23] < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(v65, *(const std::basic_string<char16_t>::value_type **)v104, *((_QWORD *)v104 + 1));
    }
    else
    {
      *(_OWORD *)&v65->__r_.__value_.__l.__data_ = *(_OWORD *)v104;
      *((_QWORD *)v64 + 6) = *((_QWORD *)v104 + 2);
    }
    *((_DWORD *)v64 + 14) = *((_DWORD *)&v107 + 8 * v101 + 6);
    *(_QWORD *)v64 = 0;
    *((_QWORD *)v64 + 1) = 0;
    *((_QWORD *)v64 + 2) = v61;
    *v60 = v64;
    v66 = *(_QWORD **)*v95;
    if (v66)
    {
      *v95 = (uint64_t)v66;
      v64 = *v60;
    }
    std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>((uint64_t *)v95[1], (uint64_t *)v64);
    ++v95[2];
    goto LABEL_95;
  }
LABEL_21:
  if (v8 == v20)
    goto LABEL_32;
  v23 = morphun::grammar::synthesis::ArGrammarSynthesizer::getPronounGender(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ArGrammarSynthesizer::PronounGender>>(morphun::grammar::synthesis::ArGrammarSynthesizer::getPronounGender(std::basic_string<char16_t> const*)::valueMap);
  v26 = *(_QWORD *)(v23 + 8);
  v24 = v23 + 8;
  v25 = v26;
  if (!v26)
    goto LABEL_29;
  v27 = v24;
  do
  {
    v28 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v25 + 32), v21);
    v29 = (uint64_t *)(v25 + 8);
    if (!v28)
    {
      v29 = (uint64_t *)v25;
      v27 = v25;
    }
    v25 = *v29;
  }
  while (*v29);
  if (v27 == v24
    || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v21, (unsigned __int16 *)(v27 + 32)))
  {
LABEL_29:
    v27 = v24;
  }
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ArGrammarSynthesizer::PronounGender>>(morphun::grammar::synthesis::ArGrammarSynthesizer::getPronounGender(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v27)
LABEL_32:
    v30 = 0;
  else
    v30 = *(unsigned int *)(v27 + 56);
  v31 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, a1[5]);
  v32 = v31;
  if (v8 == v31)
    v33 = 0;
  else
    v33 = (unsigned __int16 *)(v31 + 13);
  if ((v34 & 1) == 0
  {
    v96 = (uint64_t *)operator new();
    v47 = morphun::grammar::synthesis::GrammemeConstants::PERSON_FIRST((morphun::grammar::synthesis::GrammemeConstants *)v96);
    if (*(char *)(v47 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v107, *(const std::basic_string<char16_t>::value_type **)v47, *(_QWORD *)(v47 + 8));
    }
    else
    {
      v48 = *(_OWORD *)v47;
      v107.__r_.__value_.__r.__words[2] = *(_QWORD *)(v47 + 16);
      *(_OWORD *)&v107.__r_.__value_.__l.__data_ = v48;
    }
    v108 = 1;
    v54 = morphun::grammar::synthesis::GrammemeConstants::PERSON_SECOND((morphun::grammar::synthesis::GrammemeConstants *)v47);
    if (*(char *)(v54 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v109, *(const std::basic_string<char16_t>::value_type **)v54, *(_QWORD *)(v54 + 8));
    }
    else
    {
      v55 = *(_OWORD *)v54;
      v109.__r_.__value_.__r.__words[2] = *(_QWORD *)(v54 + 16);
      *(_OWORD *)&v109.__r_.__value_.__l.__data_ = v55;
    }
    v110 = 2;
    v80 = morphun::grammar::synthesis::GrammemeConstants::PERSON_THIRD((morphun::grammar::synthesis::GrammemeConstants *)v54);
    if (*(char *)(v80 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v111, *(const std::basic_string<char16_t>::value_type **)v80, *(_QWORD *)(v80 + 8));
    }
    else
    {
      v81 = *(_OWORD *)v80;
      v111.__r_.__value_.__r.__words[2] = *(_QWORD *)(v80 + 16);
      *(_OWORD *)&v111.__r_.__value_.__l.__data_ = v81;
    }
    v94 = 0;
    v112 = 3;
    v96[1] = 0;
    v96[2] = 0;
    v100 = v96 + 1;
    v103 = 0;
    *v96 = (uint64_t)(v96 + 1);
    while (1)
    {
      v106 = (char *)&v107 + 32 * v103;
      v82 = (char *)(v96 + 1);
      if ((uint64_t *)*v96 == v100)
        break;
      v83 = v94;
      v84 = (char *)(v96 + 1);
      if (v94)
      {
        do
        {
          v82 = v83;
          v83 = (char *)*((_QWORD *)v83 + 1);
        }
        while (v83);
      }
      else
      {
        do
        {
          v82 = (char *)*((_QWORD *)v84 + 2);
          v59 = *(_QWORD *)v82 == (_QWORD)v84;
          v84 = v82;
        }
        while (v59);
      }
      if (std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v82 + 16, (unsigned __int16 *)v106))
      {
        break;
      }
      v85 = (char **)(v96 + 1);
      v86 = (char **)(v96 + 1);
      if (!v94)
        goto LABEL_154;
      v87 = v94;
      while (1)
      {
        while (1)
        {
          v86 = (char **)v87;
          v88 = (unsigned __int16 *)(v87 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v106, (unsigned __int16 *)v87 + 16))break;
          v87 = *v86;
          v85 = v86;
          if (!*v86)
            goto LABEL_154;
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v88, (unsigned __int16 *)v106))
          break;
        v85 = v86 + 1;
        v87 = v86[1];
        if (!v87)
          goto LABEL_154;
      }
LABEL_160:
      if (++v103 == 3)
      {
        for (k = 0; k != -12; k -= 4)
        {
          if (SHIBYTE(v111.__r_.__value_.__r.__words[k + 2]) < 0)
            operator delete(*(void **)((char *)&v111.__r_.__value_.__l.__data_ + k * 8));
        }
        morphun::grammar::synthesis::ArGrammarSynthesizer::getPerson(std::basic_string<char16_t> const*)::valueMap = (uint64_t)v96;
        goto LABEL_37;
      }
      v94 = (char *)*v100;
    }
    v85 = (char **)(v96 + 1);
    v86 = (char **)(v96 + 1);
    if (v94)
    {
      v85 = (char **)(v82 + 8);
      if (*((_QWORD *)v82 + 1))
        goto LABEL_160;
      v86 = (char **)v82;
    }
LABEL_154:
    v89 = (char *)operator new(0x40uLL);
    v90 = (std::basic_string<char16_t> *)(v89 + 32);
    if (v106[23] < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(v90, *(const std::basic_string<char16_t>::value_type **)v106, *((_QWORD *)v106 + 1));
    }
    else
    {
      *(_OWORD *)&v90->__r_.__value_.__l.__data_ = *(_OWORD *)v106;
      *((_QWORD *)v89 + 6) = *((_QWORD *)v106 + 2);
    }
    *((_DWORD *)v89 + 14) = *((_DWORD *)&v107 + 8 * v103 + 6);
    *(_QWORD *)v89 = 0;
    *((_QWORD *)v89 + 1) = 0;
    *((_QWORD *)v89 + 2) = v86;
    *v85 = v89;
    v91 = *(_QWORD **)*v96;
    if (v91)
    {
      *v96 = (uint64_t)v91;
      v89 = *v85;
    }
    std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>((uint64_t *)v96[1], (uint64_t *)v89);
    ++v96[2];
    goto LABEL_160;
  }
LABEL_37:
  if (v8 == v32)
    goto LABEL_48;
  v35 = morphun::grammar::synthesis::ArGrammarSynthesizer::getPerson(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ArGrammarSynthesizer::Person>>(morphun::grammar::synthesis::ArGrammarSynthesizer::getPerson(std::basic_string<char16_t> const*)::valueMap);
  v38 = *(_QWORD *)(v35 + 8);
  v36 = v35 + 8;
  v37 = v38;
  if (!v38)
    goto LABEL_45;
  v39 = v36;
  do
  {
    v40 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v37 + 32), v33);
    v41 = (uint64_t *)(v37 + 8);
    if (!v40)
    {
      v41 = (uint64_t *)v37;
      v39 = v37;
    }
    v37 = *v41;
  }
  while (*v41);
  if (v39 == v36
    || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v33, (unsigned __int16 *)(v39 + 32)))
  {
LABEL_45:
    v39 = v36;
  }
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ArGrammarSynthesizer::Person>>(morphun::grammar::synthesis::ArGrammarSynthesizer::getPerson(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v39)
LABEL_48:
    v42 = 0;
  else
    v42 = *(unsigned int *)(v39 + 56);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(*a1 + 72))(a1, a2, v18, v30, v42);
}

void sub_1CB4D5EB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  void **v20;

  while (1)
  {
    if (*((char *)v20 - 9) < 0)
      operator delete(*(v20 - 4));
    v20 -= 4;
    if (v20 == &__p)
    {
      MEMORY[0x1D179D2EC](a11, 0x1020C4062D53EE8);
      _Unwind_Resume(a1);
    }
  }
}

morphun::grammar::synthesis::ArGrammarSynthesizer_ArticleLookupFunction *morphun::grammar::synthesis::ArGrammarSynthesizer_ArticleLookupFunction::ArGrammarSynthesizer_ArticleLookupFunction(morphun::grammar::synthesis::ArGrammarSynthesizer_ArticleLookupFunction *this, const morphun::dialog::SemanticFeatureModel *a2, uint64_t a3)
{
  morphun::dialog::DefaultArticleLookupFunction *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *__p[2];
  char v18;

  v6 = morphun::dialog::DefaultArticleLookupFunction::DefaultArticleLookupFunction(this, (const morphun::dialog::SemanticFeatureModel *)((char *)a2 + 8), a3, 1, 0);
  v7 = *(_QWORD *)a2;
  *(_QWORD *)v6 = *(_QWORD *)a2;
  *(_QWORD *)((char *)v6 + *(_QWORD *)(v7 - 56)) = *((_QWORD *)a2 + 4);
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*(_QWORD *)v6 - 40)) = *((_QWORD *)a2 + 5);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"countPronoun");
  v8 = a3 + 8;
  v9 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a3 + 8, (unsigned __int16 *)__p);
  v10 = a3 + 16;
  if (a3 + 16 == v9)
    v11 = 0;
  else
    v11 = *(_QWORD *)(v9 + 56);
  npc<morphun::dialog::SemanticFeature const>(v11);
  if (v18 < 0)
    operator delete(__p[0]);
  *((_QWORD *)this + 3) = v11;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "g");
  v12 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v8, (unsigned __int16 *)__p);
  if (v10 == v12)
    v13 = 0;
  else
    v13 = *(_QWORD *)(v12 + 56);
  npc<morphun::dialog::SemanticFeature const>(v13);
  if (v18 < 0)
    operator delete(__p[0]);
  *((_QWORD *)this + 4) = v13;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"person");
  v14 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v8, (unsigned __int16 *)__p);
  if (v10 == v14)
    v15 = 0;
  else
    v15 = *(_QWORD *)(v14 + 56);
  npc<morphun::dialog::SemanticFeature const>(v15);
  if (v18 < 0)
    operator delete(__p[0]);
  *((_QWORD *)this + 5) = v15;
  return this;
}

void sub_1CB4D6230(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1CB4D62A8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::FrGrammarSynthesizer_FrDisplayFunction::~FrGrammarSynthesizer_FrDisplayFunction(morphun::grammar::synthesis::FrGrammarSynthesizer_FrDisplayFunction *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E866E410;
  v2 = *((_QWORD *)this + 23);
  *((_QWORD *)this + 23) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 17));
  *((_QWORD *)this + 5) = &off_1E866B550;
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 14));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 11));
}

{
  morphun::grammar::synthesis::FrGrammarSynthesizer_FrDisplayFunction::~FrGrammarSynthesizer_FrDisplayFunction(this);
  JUMPOUT(0x1D179D2ECLL);
}

morphun::dialog::SemanticFeatureModel_DisplayValue *morphun::grammar::synthesis::FrGrammarSynthesizer_FrDisplayFunction::getDisplayValue(uint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t TheBestDisplayValue;
  morphun::dialog::SemanticFeatureModel_DisplayValue *v8;
  uint64_t v9;
  __int128 v10;
  std::basic_string<char16_t>::size_type size;
  _OWORD *v12;
  _BOOL4 hasAnyFeatures;
  uint64_t v14;
  uint64_t v15;
  const morphun::Token *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  _OWORD *v24;
  int v25;
  const std::basic_string<char16_t>::value_type *v26;
  std::basic_string<char16_t>::size_type v27;
  int v28;
  const std::basic_string<char16_t>::value_type *v29;
  std::basic_string<char16_t>::size_type v30;
  int v31;
  const std::basic_string<char16_t>::value_type *v32;
  std::basic_string<char16_t>::size_type v33;
  int v34;
  void *v35;
  unint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t *v41;
  std::basic_string<char16_t> *p_dst;
  uint64_t v43;
  uint64_t v44;
  morphun::grammar::synthesis::GrammemeConstants *v45;
  uint64_t v46;
  std::basic_string<char16_t>::size_type v47;
  uint64_t v48;
  int v49;
  unsigned __int16 *v50;
  std::basic_string<char16_t> *v51;
  std::basic_string<char16_t>::size_type v52;
  int v53;
  int v54;
  int v55;
  int v56;
  BOOL v58;
  _BOOL4 v59;
  _WORD *p_str;
  uint64_t v61;
  uint64_t v62;
  int v63;
  std::basic_string<char16_t> *v64;
  std::basic_string<char16_t>::size_type v65;
  std::allocator<char16_t> *v66;
  const std::basic_string<char16_t>::value_type *v67;
  std::basic_string<char16_t>::size_type v68;
  std::basic_string<char16_t>::size_type v69;
  unsigned int v70;
  std::basic_string<char16_t>::size_type v71;
  std::basic_string<char16_t> *v72;
  int v73;
  std::basic_string<char16_t>::size_type v74;
  std::basic_string<char16_t> *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  int v79;
  int v80;
  BOOL v81;
  uint64_t v82;
  std::basic_string<char16_t> *v83;
  uint64_t v84;
  int v85;
  int v86;
  std::basic_string<char16_t>::size_type v88;
  uint64_t v89;
  BOOL v90;
  std::basic_string<char16_t> *v91;
  char *v92;
  int v93;
  int v94;
  __int16 v96;
  std::basic_string<char16_t> *v97;
  std::basic_string<char16_t>::size_type v98;
  uint64_t v99;
  std::basic_string<char16_t> *v100;
  char *v101;
  int v102;
  int v103;
  uint64_t v105;
  std::basic_string<char16_t> *v106;
  char *v107;
  int v108;
  int v109;
  morphun::dialog::SemanticFeatureModel_DisplayValue *v111;
  morphun::exception::NullPointerException *exception;
  uint64_t v114;
  char v115;
  uint64_t *v116;
  uint64_t v117;
  int v118;
  __int128 v119;
  uint64_t v120;
  std::basic_string<char16_t> v121;
  char v122;
  _QWORD v123[3];
  std::basic_string<char16_t> v124;
  std::basic_string<char16_t> v125;
  char v126;
  std::basic_string<char16_t> v127;
  std::basic_string<char16_t> __str;
  std::basic_string<char16_t> v129;
  std::basic_string<char16_t> __dst;
  std::basic_string<char16_t> v131;
  unsigned __int8 v132;
  std::basic_string<char16_t> v133;
  std::basic_string<char16_t> v134;
  std::basic_string<char16_t> v135;

  TheBestDisplayValue = morphun::grammar::synthesis::GrammarSynthesizerUtil::getTheBestDisplayValue(*(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), a3);
  v8 = (morphun::dialog::SemanticFeatureModel_DisplayValue *)TheBestDisplayValue;
  if (!TheBestDisplayValue)
    return v8;
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)TheBestDisplayValue + 24))(TheBestDisplayValue);
  if (*(char *)(v9 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v124, *(const std::basic_string<char16_t>::value_type **)v9, *(_QWORD *)(v9 + 8));
  }
  else
  {
    v10 = *(_OWORD *)v9;
    v124.__r_.__value_.__r.__words[2] = *(_QWORD *)(v9 + 16);
    *(_OWORD *)&v124.__r_.__value_.__l.__data_ = v10;
  }
  size = HIBYTE(v124.__r_.__value_.__r.__words[2]);
  if ((v124.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = v124.__r_.__value_.__l.__size_;
  if (!size)
  {
    v8 = 0;
    if ((*((_BYTE *)&v124.__r_.__value_.__s + 23) & 0x80) != 0)
      goto LABEL_215;
    return v8;
  }
  morphun::grammar::synthesis::GrammarSynthesizerUtil::mergeConstraintsWithDisplayValue(v123, (uint64_t)v8, a3);
  v119 = *((_OWORD *)a1 + 1);
  v12 = operator new(0x10uLL);
  *v12 = v119;
  hasAnyFeatures = morphun::grammar::synthesis::GrammarSynthesizerUtil::hasAnyFeatures(a3, (uint64_t)v12, (uint64_t)(v12 + 1));
  operator delete(v12);
  if (!hasAnyFeatures)
    goto LABEL_213;
  v14 = a1[23];
  if (!v14)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  v15 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(_QWORD *)v14 + 24))(v14, &v124);
  npc<morphun::TokenChain>(v15);
  v114 = v15;
  npc<morphun::TokenChain>(v15);
  memset(&v127, 0, sizeof(v127));
  v17 = *(_OWORD *)(v15 + 8);
  v18 = *(_QWORD *)(v15 + 16);
  v115 = a4;
  if (v18)
    v19 = *(_QWORD *)(v18 + 80);
  else
    v19 = 0;
  v20 = 0;
  v21 = (uint64_t)(a1 + 16);
  v22 = a1 + 17;
  v116 = a1 + 16;
  v117 = (uint64_t)(a1 + 24);
  while (1)
  {
    v120 = *((_QWORD *)&v17 + 1);
    v23 = v17;
    if (v19 == (_QWORD)v17)
    {
      v121 = v127;
      v122 = 1;
      goto LABEL_209;
    }
    v24 = (_OWORD *)(v17 + 16);
    if (morphun::grammar::synthesis::GrammarSynthesizerUtil::checkSignificantTokenForInflection((morphun::grammar::synthesis::GrammarSynthesizerUtil *)v17, v16))
    {
      break;
    }
    v28 = *(char *)(v23 + 39);
    if (v28 >= 0)
      v29 = (const std::basic_string<char16_t>::value_type *)(v23 + 16);
    else
      v29 = *(const std::basic_string<char16_t>::value_type **)(v23 + 16);
    if (v28 >= 0)
      v30 = *(unsigned __int8 *)(v23 + 39);
    else
      v30 = *(_QWORD *)(v23 + 24);
    std::basic_string<char16_t>::append(&v127, v29, v30);
LABEL_186:
    npc<morphun::Token const>(v23);
    *((_QWORD *)&v17 + 1) = v120;
    *(_QWORD *)&v17 = *(_QWORD *)(v23 + 80);
  }
  if (v22 != (uint64_t *)std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v21, (unsigned __int16 *)(v23 + 16)))
  {
    v25 = *(char *)(v23 + 39);
    if (v25 >= 0)
      v26 = (const std::basic_string<char16_t>::value_type *)(v23 + 16);
    else
      v26 = *(const std::basic_string<char16_t>::value_type **)(v23 + 16);
    if (v25 >= 0)
      v27 = *(unsigned __int8 *)(v23 + 39);
    else
      v27 = *(_QWORD *)(v23 + 24);
    std::basic_string<char16_t>::append(&v127, v26, v27);
    v20 = 1;
    goto LABEL_186;
  }
  if ((v20 & 1) != 0)
  {
    v31 = *(char *)(v23 + 39);
    if (v31 >= 0)
      v32 = (const std::basic_string<char16_t>::value_type *)(v23 + 16);
    else
      v32 = *(const std::basic_string<char16_t>::value_type **)(v23 + 16);
    if (v31 >= 0)
      v33 = *(unsigned __int8 *)(v23 + 39);
    else
      v33 = *(_QWORD *)(v23 + 24);
    std::basic_string<char16_t>::append(&v127, v32, v33);
LABEL_185:
    v20 = 0;
    goto LABEL_186;
  }
  v34 = *(char *)(v23 + 39);
  if (v34 >= 0)
    v35 = (void *)(v23 + 16);
  else
    v35 = *(void **)(v23 + 16);
  if (v34 >= 0)
    v36 = *(unsigned __int8 *)(v23 + 39);
  else
    v36 = *(_QWORD *)(v23 + 24);
  v37 = (uint64_t *)operator new(0x10uLL);
  v38 = v22;
  *(_OWORD *)v37 = *((_OWORD *)a1 + 1);
  morphun::grammar::synthesis::GrammarSynthesizerUtil::convertToStringConstraints((uint64_t)&v134, a3, v37, v37 + 2);
  operator delete(v37);
  v39 = a1;
  v40 = a1[4];
  v41 = (uint64_t *)operator new(8uLL);
  *v41 = v40;
  morphun::grammar::synthesis::GrammarSynthesizerUtil::convertToStringConstraints((uint64_t)&v133, a3, v41, v41 + 1);
  operator delete(v41);
  morphun::dialog::DictionaryLookupInflector::inflect((uint64_t)&v131, v117, v35, v36, &v134, &v133);
  a1 = v39;
  v22 = v38;
  if (v132)
  {
    v118 = v132;
    if (SHIBYTE(v131.__r_.__value_.__r.__words[2]) < 0)
      std::basic_string<char16_t>::__init_copy_ctor_external(&v125, v131.__r_.__value_.__l.__data_, v131.__r_.__value_.__l.__size_);
    else
      v125 = v131;
    v21 = (uint64_t)v116;
    v126 = 1;
    goto LABEL_165;
  }
  if ((v115 & 1) == 0)
  {
    LOBYTE(v125.__r_.__value_.__l.__data_) = 0;
    v126 = 0;
    v21 = (uint64_t)v116;
    goto LABEL_168;
  }
  v118 = v132;
  if (v36 >= 0x7FFFFFFFFFFFFFF8)
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  if (v36 >= 0xB)
  {
    v43 = (v36 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((v36 | 3) != 0xB)
      v43 = v36 | 3;
    p_dst = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v43 + 1);
    __dst.__r_.__value_.__l.__size_ = v36;
    __dst.__r_.__value_.__r.__words[2] = v44 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)p_dst;
    goto LABEL_61;
  }
  *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v36;
  p_dst = &__dst;
  if (v36)
LABEL_61:
    memmove(p_dst, v35, 2 * v36);
  p_dst->__r_.__value_.__s.__data_[v36] = 0;
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v135, a3, a1[2]);
  v46 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(v45);
  if ((v135.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v47 = HIBYTE(v135.__r_.__value_.__r.__words[2]);
  else
    v47 = v135.__r_.__value_.__l.__size_;
  v48 = *(unsigned __int8 *)(v46 + 23);
  v49 = (char)v48;
  if ((v48 & 0x80u) != 0)
    v48 = *(_QWORD *)(v46 + 8);
  if (v47 != v48)
  {
    v59 = 0;
    goto LABEL_82;
  }
  if (v47)
  {
    if (v49 >= 0)
      v50 = (unsigned __int16 *)v46;
    else
      v50 = *(unsigned __int16 **)v46;
    v51 = (std::basic_string<char16_t> *)v135.__r_.__value_.__r.__words[0];
    if ((v135.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v51 = &v135;
    v52 = v47 - 1;
    do
    {
      v54 = (unsigned __int16)v51->__r_.__value_.__s.__data_[0];
      v51 = (std::basic_string<char16_t> *)((char *)v51 + 2);
      v53 = v54;
      v56 = *v50++;
      v55 = v56;
      v58 = v52-- != 0;
      v59 = v55 == v53;
    }
    while (v55 == v53 && v58);
LABEL_82:
    if ((SHIBYTE(v135.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_83:
      if (!v59)
        goto LABEL_164;
LABEL_87:
      if (v36 >= 0xB)
      {
        v61 = (v36 & 0xFFFFFFFFFFFFFFFCLL) + 4;
        if ((v36 | 3) != 0xB)
          v61 = v36 | 3;
        p_str = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v61 + 1);
        __str.__r_.__value_.__l.__size_ = v36;
        __str.__r_.__value_.__r.__words[2] = v62 | 0x8000000000000000;
        __str.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)p_str;
      }
      else
      {
        *((_BYTE *)&__str.__r_.__value_.__s + 23) = v36;
        p_str = &__str;
        if (!v36)
        {
LABEL_94:
          p_str[v36] = 0;
          v63 = SHIBYTE(__str.__r_.__value_.__r.__words[2]);
          if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v64 = &__str;
          else
            v64 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
          if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v65 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
          else
            v65 = __str.__r_.__value_.__l.__size_;
          if (v65 > 2)
          {
            v135.__r_.__value_.__r.__words[0] = 0;
            if (!morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1[1], (uint64_t)&v135, (const UChar *)v64, v65))goto LABEL_109;
            if ((a1[20] & v135.__r_.__value_.__r.__words[0]) != 0)
              goto LABEL_103;
            if ((a1[19] & v135.__r_.__value_.__r.__words[0]) != 0)
            {
LABEL_109:
              v69 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
              v70 = (__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0;
LABEL_110:
              v68 = __str.__r_.__value_.__l.__size_;
              if (v70)
                v71 = __str.__r_.__value_.__l.__size_;
              else
                v71 = v69;
              if (!v71)
                goto LABEL_117;
              v67 = (const std::basic_string<char16_t>::value_type *)__str.__r_.__value_.__r.__words[0];
              v81 = v70 == 0;
              v72 = &__str;
              if (!v81)
                v72 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
              if (v72->__r_.__value_.__s.__data_[v71 - 1] != 115)
              {
LABEL_117:
                v73 = (char)v69;
                if ((v69 & 0x80u) == 0)
                  v74 = v69;
                else
                  v74 = __str.__r_.__value_.__l.__size_;
                if (v74)
                {
                  v67 = (const std::basic_string<char16_t>::value_type *)__str.__r_.__value_.__r.__words[0];
                  v75 = &__str;
                  if ((v69 & 0x80u) != 0)
                    v75 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
                  if (((unsigned __int16)v75->__r_.__value_.__s.__data_[v74 - 1] | 2) == 0x7A)
                    goto LABEL_124;
                  if (v74 >= 3)
                  {
                    v82 = 0;
                    v83 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
                    if (v73 >= 0)
                      v83 = &__str;
                    v84 = (uint64_t)v83 + 2 * v74 - 6;
                    do
                    {
                      v85 = *(unsigned __int16 *)(v84 + v82 * 2);
                      v86 = (unsigned __int16)aEau[v82];
                    }
                    while (v86 == v85 && v82++ != 2);
                    if (v86 == v85)
                      goto LABEL_196;
                  }
                  v88 = v74 - 2;
                  if (v74 < 2)
                    goto LABEL_148;
                  v99 = 0;
                  v100 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
                  if (v73 >= 0)
                    v100 = &__str;
                  v101 = (char *)v100 + 2 * v88;
                  do
                  {
                    v102 = *(unsigned __int16 *)&v101[v99 * 2];
                    v103 = (unsigned __int16)word_1CB73C9F6[v99];
                  }
                  while (v103 == v102 && v99++ != 1);
                  if (v103 == v102)
                  {
LABEL_196:
                    v96 = 120;
LABEL_159:
                    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v129, (const void **)&__str.__r_.__value_.__l.__data_, v96);
LABEL_160:
                    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
                      operator delete(__dst.__r_.__value_.__l.__data_);
                    __dst = v129;
                    *((_BYTE *)&v129.__r_.__value_.__s + 23) = 0;
                    v129.__r_.__value_.__s.__data_[0] = 0;
                    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
                      operator delete(__str.__r_.__value_.__l.__data_);
                    goto LABEL_164;
                  }
                  v105 = 0;
                  v106 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
                  if (v73 >= 0)
                    v106 = &__str;
                  v107 = (char *)v106 + 2 * v88;
                  do
                  {
                    v108 = *(unsigned __int16 *)&v107[v105 * 2];
                    v109 = (unsigned __int16)aAl[v105];
                  }
                  while (v109 == v108 && v105++ != 1);
                  if (v109 == v108)
                  {
LABEL_206:
                    std::basic_string<char16_t>::basic_string(&v135, &__str, 0, v88, v66);
                    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v129, &v135, L"aux");
                    if (SHIBYTE(v135.__r_.__value_.__r.__words[2]) < 0)
                      operator delete(v135.__r_.__value_.__l.__data_);
                    goto LABEL_160;
                  }
LABEL_148:
                  v88 = v74 - 3;
                  if (v74 >= 3)
                  {
                    v89 = 0;
                    v90 = v73 < 0;
                    v91 = &__str;
                    if (v90)
                      v91 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
                    v92 = (char *)v91 + 2 * v88;
                    do
                    {
                      v93 = *(unsigned __int16 *)&v92[v89 * 2];
                      v94 = (unsigned __int16)aAil[v89];
                    }
                    while (v94 == v93 && v89++ != 2);
                    if (v94 == v93)
                      goto LABEL_206;
                  }
                }
                v96 = 115;
                goto LABEL_159;
              }
LABEL_124:
              if ((v69 & 0x80) != 0)
              {
LABEL_107:
                std::basic_string<char16_t>::__init_copy_ctor_external(&v129, v67, v68);
                goto LABEL_160;
              }
              goto LABEL_105;
            }
            if ((a1[21] & v135.__r_.__value_.__r.__words[0]) != 0)
            {
LABEL_103:
              v63 = SHIBYTE(__str.__r_.__value_.__r.__words[2]);
            }
            else
            {
              if ((a1[22] & v135.__r_.__value_.__r.__words[0]) == 0)
                goto LABEL_109;
              v76 = (char *)v64 + 2 * v65;
              if (*((_WORD *)v76 - 1) == 233)
                goto LABEL_109;
              v77 = 0;
              v78 = v76 - 4;
              do
              {
                v79 = *(unsigned __int16 *)&v78[v77 * 2];
                v80 = (unsigned __int16)word_1CB72FC92[v77];
                v81 = v80 != v79 || v77++ == 1;
              }
              while (!v81);
              v63 = SHIBYTE(__str.__r_.__value_.__r.__words[2]);
              if (v80 == v79)
              {
                v69 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
                v70 = SHIBYTE(__str.__r_.__value_.__r.__words[2]) >> 31;
                goto LABEL_110;
              }
            }
          }
          if (v63 < 0)
          {
            v68 = __str.__r_.__value_.__l.__size_;
            v67 = (const std::basic_string<char16_t>::value_type *)__str.__r_.__value_.__r.__words[0];
            goto LABEL_107;
          }
LABEL_105:
          v129 = __str;
          goto LABEL_160;
        }
      }
      memmove(p_str, v35, 2 * v36);
      goto LABEL_94;
    }
  }
  else
  {
    v59 = 1;
    if ((SHIBYTE(v135.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_83;
  }
  operator delete(v135.__r_.__value_.__l.__data_);
  if (v59)
    goto LABEL_87;
LABEL_164:
  v125 = __dst;
  v126 = 1;
  v21 = (uint64_t)v116;
LABEL_165:
  if (v118 && SHIBYTE(v131.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v131.__r_.__value_.__l.__data_);
LABEL_168:
  v131.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v133;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v131);
  v131.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v134;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v131);
  if (*(char *)(v23 + 39) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v131, *(const std::basic_string<char16_t>::value_type **)(v23 + 16), *(_QWORD *)(v23 + 24));
  }
  else
  {
    *(_OWORD *)&v131.__r_.__value_.__l.__data_ = *v24;
    v131.__r_.__value_.__r.__words[2] = *(_QWORD *)(v23 + 32);
  }
  if (v126)
  {
    std::basic_string<char16_t>::operator=(&v131, &v125);
LABEL_174:
    if ((v131.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v97 = &v131;
    else
      v97 = (std::basic_string<char16_t> *)v131.__r_.__value_.__r.__words[0];
    if ((v131.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v98 = HIBYTE(v131.__r_.__value_.__r.__words[2]);
    else
      v98 = v131.__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::append(&v127, (const std::basic_string<char16_t>::value_type *)v97, v98);
    if (SHIBYTE(v131.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v131.__r_.__value_.__l.__data_);
    if (v126 && SHIBYTE(v125.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v125.__r_.__value_.__l.__data_);
    goto LABEL_185;
  }
  if ((v115 & 1) != 0)
    goto LABEL_174;
  LOBYTE(v121.__r_.__value_.__l.__data_) = 0;
  v122 = 0;
  if (SHIBYTE(v131.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v131.__r_.__value_.__l.__data_);
    if (v126)
    {
      if (SHIBYTE(v125.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v125.__r_.__value_.__l.__data_);
    }
  }
  if (SHIBYTE(v127.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v127.__r_.__value_.__l.__data_);
  if (v19 != v23)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v114 + 16))(v114);
    v8 = 0;
    goto LABEL_214;
  }
LABEL_209:
  std::basic_string<char16_t>::operator=(&v124, &v121);
  if (v122 && SHIBYTE(v121.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v121.__r_.__value_.__l.__data_);
  (*(void (**)(uint64_t))(*(_QWORD *)v114 + 16))(v114);
LABEL_213:
  v111 = (morphun::dialog::SemanticFeatureModel_DisplayValue *)operator new();
  morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue((uint64_t)v111, (__int128 *)&v124, (uint64_t)v123);
  v8 = morphun::dialog::DefinitenessDisplayFunction::addDefiniteness(a1 + 5, v111, a3);
LABEL_214:
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy((void **)v123[1]);
  if ((*((_BYTE *)&v124.__r_.__value_.__s + 23) & 0x80) != 0)
LABEL_215:
    operator delete(v124.__r_.__value_.__l.__data_);
  return v8;
}

void sub_1CB4D6D5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,void **a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42,void *a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,void *__p,uint64_t a50,int a51,__int16 a52,char a53,char a54)
{
  uint64_t v54;

  if (*(char *)(v54 - 97) < 0)
    operator delete(*(void **)(v54 - 120));
  if (a54 < 0)
    operator delete(__p);
  if (*(char *)(v54 - 217) < 0)
    operator delete(*(void **)(v54 - 240));
  if (a15 && (*(_BYTE *)(v54 - 185) & 0x80) != 0)
    operator delete(*(void **)(v54 - 208));
  *(_QWORD *)(v54 - 208) = v54 - 168;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v54 - 208));
  *(_QWORD *)(v54 - 208) = v54 - 144;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v54 - 208));
  if (a48 < 0)
    operator delete(a43);
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 16))(a10);
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(a27);
  if (a34 < 0)
    operator delete(a29);
  _Unwind_Resume(a1);
}

void sub_1CB4D6F90(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(uint64_t a1, unsigned __int16 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _BOOL4 v6;
  uint64_t *v7;

  v2 = a1 + 8;
  v3 = *(_QWORD *)(a1 + 8);
  if (!v3)
    return v2;
  v5 = a1 + 8;
  do
  {
    v6 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v3 + 32), a2);
    v7 = (uint64_t *)(v3 + 8);
    if (!v6)
    {
      v7 = (uint64_t *)v3;
      v5 = v3;
    }
    v3 = *v7;
  }
  while (*v7);
  if (v5 == v2 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a2, (unsigned __int16 *)(v5 + 32)))
    return v2;
  return v5;
}

uint64_t std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>(uint64_t a1, const void **a2, __int16 a3)
{
  unint64_t v5;
  uint64_t result;
  char *v7;
  const void *v8;
  char *v9;

  if (*((char *)a2 + 23) >= 0)
    v5 = *((unsigned __int8 *)a2 + 23);
  else
    v5 = (unint64_t)a2[1];
  result = std::basic_string<char16_t>::basic_string[abi:ne180100](a1, v5 + 1);
  if (*(char *)(result + 23) >= 0)
    v7 = (char *)result;
  else
    v7 = *(char **)result;
  if (v5)
  {
    if (*((char *)a2 + 23) >= 0)
      v8 = a2;
    else
      v8 = *a2;
    result = (uint64_t)memmove(v7, v8, 2 * v5);
  }
  v9 = &v7[2 * v5];
  *(_WORD *)v9 = a3;
  *((_WORD *)v9 + 1) = 0;
  return result;
}

uint64_t *std::set<std::basic_string<char16_t>>::set[abi:ne180100](uint64_t *a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;

  a1[1] = 0;
  v4 = (uint64_t)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t)(a1 + 1);
  if (a3)
  {
    v6 = 24 * a3;
    do
    {
      std::__tree<std::basic_string<char16_t>>::__emplace_hint_unique_key_args<std::basic_string<char16_t>,std::basic_string<char16_t> const&>(a1, v4, a2, (uint64_t)a2);
      a2 += 12;
      v6 -= 24;
    }
    while (v6);
  }
  return a1;
}

void sub_1CB4D7104(_Unwind_Exception *a1)
{
  char **v1;

  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

_QWORD *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<std::u16string_view>>,std::vector<std::u16string_view> const*,std::vector<std::u16string_view> const*,std::vector<std::u16string_view>*>(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  _QWORD *v4;
  uint64_t v6;
  _QWORD v8[3];
  char v9;
  _QWORD *v10;
  _QWORD *v11;

  v4 = a4;
  v10 = a4;
  v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  v9 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      *v4 = 0;
      v4[1] = 0;
      v4[2] = 0;
      std::vector<std::u16string_view>::__init_with_size[abi:ne180100]<std::u16string_view*,std::u16string_view*>(v4, *(const void **)v6, *(_QWORD *)(v6 + 8), (uint64_t)(*(_QWORD *)(v6 + 8) - *(_QWORD *)v6) >> 4);
      v4 = v11 + 3;
      v11 += 3;
      v6 += 24;
    }
    while (v6 != a3);
  }
  v9 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::u16string_view>>,std::vector<std::u16string_view>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v8);
  return v4;
}

void sub_1CB4D71B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::u16string_view>>,std::vector<std::u16string_view>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  char *v2;
  char *v4;
  void *v5;
  char *v6;
  void *v7;
  void *v8;

  v1 = *a1;
  v2 = (char *)**a1;
  if (v2)
  {
    v4 = (char *)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      v6 = (char *)v1[1];
      do
      {
        v8 = (void *)*((_QWORD *)v6 - 3);
        v6 -= 24;
        v7 = v8;
        if (v8)
        {
          *((_QWORD *)v4 - 2) = v7;
          operator delete(v7);
        }
        v4 = v6;
      }
      while (v6 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::vector<std::vector<std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  void **v2;
  void **v4;
  void *v5;
  void **v6;

  v1 = *a1;
  v2 = (void **)**a1;
  if (v2)
  {
    v4 = (void **)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 3;
        v6 = v4;
        std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v6);
      }
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

_QWORD *std::vector<std::u16string_view>::__init_with_size[abi:ne180100]<std::u16string_view*,std::u16string_view*>(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = std::vector<std::u16string_view>::__vallocate[abi:ne180100](result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1CB4D7320(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::u16string_view>>,std::vector<std::u16string_view>*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;

  if (!*(_BYTE *)(a1 + 24))
  {
    v2 = **(_QWORD **)(a1 + 16);
    v3 = **(_QWORD **)(a1 + 8);
    if (v2 != v3)
    {
      v4 = **(_QWORD **)(a1 + 16);
      do
      {
        v6 = *(void **)(v4 - 24);
        v4 -= 24;
        v5 = v6;
        if (v6)
        {
          *(_QWORD *)(v2 - 16) = v5;
          operator delete(v5);
        }
        v2 = v4;
      }
      while (v4 != v3);
    }
  }
  return a1;
}

uint64_t *std::__tree<std::basic_string<char16_t>>::__emplace_hint_unique_key_args<std::basic_string<char16_t>,std::basic_string<char16_t> const&>(uint64_t *result, uint64_t a2, unsigned __int16 *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t **v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  unsigned __int16 *v14;
  uint64_t v15;
  BOOL v16;
  unsigned __int16 *v17;
  uint64_t *v18;
  uint64_t v19;
  _QWORD *v20;

  v6 = a2;
  v7 = (uint64_t **)result;
  v8 = result + 1;
  if (result + 1 != (uint64_t *)a2)
  {
    result = (uint64_t *)std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a3, (unsigned __int16 *)(a2 + 32));
    if (!(_DWORD)result)
    {
      result = (uint64_t *)std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v6 + 32), a3);
      if (!(_DWORD)result)
      {
        v19 = v6;
        v20 = (_QWORD *)v6;
        v14 = (unsigned __int16 *)&v19;
        if (v6)
          return result;
LABEL_31:
        v6 = (uint64_t)v20;
        goto LABEL_32;
      }
      v12 = *(_QWORD *)(v6 + 8);
      if (v12)
      {
        v13 = *(unsigned __int16 **)(v6 + 8);
        do
        {
          v14 = v13;
          v13 = *(unsigned __int16 **)v13;
        }
        while (v13);
      }
      else
      {
        v17 = (unsigned __int16 *)v6;
        do
        {
          v14 = (unsigned __int16 *)*((_QWORD *)v17 + 2);
          v16 = *(_QWORD *)v14 == (_QWORD)v17;
          v17 = v14;
        }
        while (!v16);
      }
      if (v14 == (unsigned __int16 *)v8
        || (result = (uint64_t *)std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a3, v14 + 16),
            (_DWORD)result))
      {
        if (v12)
        {
          v20 = v14;
        }
        else
        {
          v20 = (_QWORD *)v6;
          v14 = (unsigned __int16 *)(v6 + 8);
        }
LABEL_30:
        if (*(_QWORD *)v14)
          return result;
        goto LABEL_31;
      }
LABEL_29:
      result = std::__tree<std::basic_string<char16_t>>::__find_equal<std::basic_string<char16_t>>((uint64_t)v7, &v20, a3);
      v14 = (unsigned __int16 *)result;
      goto LABEL_30;
    }
  }
  v9 = *(_QWORD *)v6;
  if (*v7 == (uint64_t *)v6)
  {
    v11 = v6;
    goto LABEL_17;
  }
  if (v9)
  {
    v10 = *(_QWORD *)v6;
    do
    {
      v11 = v10;
      v10 = *(_QWORD *)(v10 + 8);
    }
    while (v10);
  }
  else
  {
    v15 = v6;
    do
    {
      v11 = *(_QWORD *)(v15 + 16);
      v16 = *(_QWORD *)v11 == v15;
      v15 = v11;
    }
    while (v16);
  }
  result = (uint64_t *)std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v11 + 32), a3);
  if (!(_DWORD)result)
    goto LABEL_29;
LABEL_17:
  if (v9)
  {
    v20 = (_QWORD *)v11;
    v14 = (unsigned __int16 *)(v11 + 8);
    goto LABEL_30;
  }
  v20 = (_QWORD *)v6;
  v14 = (unsigned __int16 *)v6;
LABEL_32:
  std::__tree<std::basic_string<char16_t>>::__construct_node<std::basic_string<char16_t> const&>((uint64_t)&v18, (uint64_t)v7, a4);
  return std::__tree<std::u16string_view>::__insert_node_at(v7, v6, (uint64_t **)v14, v18);
}

void std::__tree<std::basic_string<char16_t>>::__construct_node<std::basic_string<char16_t> const&>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  char *v6;
  std::basic_string<char16_t> *v7;

  v5 = a2 + 8;
  v6 = (char *)operator new(0x38uLL);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = 0;
  v7 = (std::basic_string<char16_t> *)(v6 + 32);
  if (*(char *)(a3 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v7, *(const std::basic_string<char16_t>::value_type **)a3, *(_QWORD *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = *(_OWORD *)a3;
    v7->__r_.__value_.__r.__words[2] = *(_QWORD *)(a3 + 16);
  }
  *(_BYTE *)(a1 + 16) = 1;
}

void sub_1CB4D75B8(_Unwind_Exception *a1)
{
  _QWORD *v1;
  void **v2;

  *v1 = 0;
  std::__tree_node_destructor<std::allocator<std::__tree_node<std::basic_string<char16_t>,void *>>>::operator()[abi:ne180100](0, v2);
  _Unwind_Resume(a1);
}

void std::__tree_node_destructor<std::allocator<std::__tree_node<std::basic_string<char16_t>,void *>>>::operator()[abi:ne180100](char a1, void **__p)
{
  if (a1)
  {
    if (*((char *)__p + 55) < 0)
      operator delete(__p[4]);
  }
  else if (!__p)
  {
    return;
  }
  operator delete(__p);
}

_QWORD *std::__tree<std::basic_string<char16_t>>::__find_equal<std::basic_string<char16_t>>(uint64_t a1, _QWORD *a2, unsigned __int16 *a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v7;
  unsigned __int16 *v8;

  v5 = (_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        v7 = (_QWORD *)v4;
        v8 = (unsigned __int16 *)(v4 + 32);
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a3, (unsigned __int16 *)(v4 + 32)))
          break;
        v4 = *v7;
        v5 = v7;
        if (!*v7)
          goto LABEL_9;
      }
      if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v8, a3))
        break;
      v5 = v7 + 1;
      v4 = v7[1];
    }
    while (v4);
  }
  else
  {
    v7 = (_QWORD *)(a1 + 8);
  }
LABEL_9:
  *a2 = v7;
  return v5;
}

void morphun::dialog::language::DaCommonConceptFactory::~DaCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1E86676D8);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1E86676D8);
  JUMPOUT(0x1D179D2ECLL);
}

std::basic_string<char16_t> *std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::pair[abi:ne180100]<std::basic_string<char16_t> const&,char16_t const(&)[16],0>(std::basic_string<char16_t> *this, __int128 *a2, char *__src)
{
  __int128 v5;

  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(this, *(const std::basic_string<char16_t>::value_type **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v5 = *a2;
    this->__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v5;
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(this[1].__r_.__value_.__r.__words, __src);
  return this;
}

void sub_1CB4D7744(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t std::map<std::basic_string<char16_t>,std::basic_string<char16_t>>::map[abi:ne180100](uint64_t a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;

  *(_QWORD *)(a1 + 8) = 0;
  v4 = a1 + 8;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = a1 + 8;
  if (a3)
  {
    v6 = 48 * a3;
    do
    {
      std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::__emplace_hint_unique_key_args<std::basic_string<char16_t>,std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>> const&>((uint64_t **)a1, v4, a2, (__int128 *)a2);
      a2 += 24;
      v6 -= 48;
    }
    while (v6);
  }
  return a1;
}

void sub_1CB4D77C8(_Unwind_Exception *a1)
{
  _QWORD **v1;

  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(_QWORD *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(*a1);
    std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(a1[1]);
    std::__destroy_at[abi:ne180100]<std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>,0>((uint64_t)(a1 + 4));
    operator delete(a1);
  }
}

uint64_t std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::~pair(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0)
    operator delete(*(void **)(a1 + 24));
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  return a1;
}

void std::__destroy_at[abi:ne180100]<std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>,0>(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0)
    operator delete(*(void **)(a1 + 24));
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
}

void std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::__emplace_hint_unique_key_args<std::basic_string<char16_t>,std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>> const&>(uint64_t **a1, uint64_t a2, unsigned __int16 *a3, __int128 *a4)
{
  uint64_t v6;
  uint64_t **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  unsigned __int16 *v14;
  uint64_t v15;
  BOOL v16;
  unsigned __int16 *v17;
  uint64_t *v18[3];
  uint64_t v19;
  _QWORD *v20;

  v6 = a2;
  v8 = a1 + 1;
  if (a1 + 1 != (uint64_t **)a2
    && !std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a3, (unsigned __int16 *)(a2 + 32)))
  {
    if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v6 + 32), a3))
    {
      v19 = v6;
      v20 = (_QWORD *)v6;
      v14 = (unsigned __int16 *)&v19;
      if (v6)
        return;
LABEL_31:
      v6 = (uint64_t)v20;
      goto LABEL_32;
    }
    v12 = *(_QWORD *)(v6 + 8);
    if (v12)
    {
      v13 = *(unsigned __int16 **)(v6 + 8);
      do
      {
        v14 = v13;
        v13 = *(unsigned __int16 **)v13;
      }
      while (v13);
    }
    else
    {
      v17 = (unsigned __int16 *)v6;
      do
      {
        v14 = (unsigned __int16 *)*((_QWORD *)v17 + 2);
        v16 = *(_QWORD *)v14 == (_QWORD)v17;
        v17 = v14;
      }
      while (!v16);
    }
    if (v14 == (unsigned __int16 *)v8 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a3, v14 + 16))
    {
      if (v12)
      {
        v20 = v14;
      }
      else
      {
        v20 = (_QWORD *)v6;
        v14 = (unsigned __int16 *)(v6 + 8);
      }
LABEL_30:
      if (*(_QWORD *)v14)
        return;
      goto LABEL_31;
    }
LABEL_29:
    v14 = (unsigned __int16 *)std::__tree<std::basic_string<char16_t>>::__find_equal<std::basic_string<char16_t>>((uint64_t)a1, &v20, a3);
    goto LABEL_30;
  }
  v9 = *(_QWORD *)v6;
  if (*a1 == (uint64_t *)v6)
  {
    v11 = v6;
    goto LABEL_17;
  }
  if (v9)
  {
    v10 = *(_QWORD *)v6;
    do
    {
      v11 = v10;
      v10 = *(_QWORD *)(v10 + 8);
    }
    while (v10);
  }
  else
  {
    v15 = v6;
    do
    {
      v11 = *(_QWORD *)(v15 + 16);
      v16 = *(_QWORD *)v11 == v15;
      v15 = v11;
    }
    while (v16);
  }
  if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v11 + 32), a3))
    goto LABEL_29;
LABEL_17:
  if (v9)
  {
    v20 = (_QWORD *)v11;
    v14 = (unsigned __int16 *)(v11 + 8);
    goto LABEL_30;
  }
  v20 = (_QWORD *)v6;
  v14 = (unsigned __int16 *)v6;
LABEL_32:
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::__construct_node<std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>> const&>((uint64_t)v18, (uint64_t)a1, a4);
  std::__tree<std::u16string_view>::__insert_node_at(a1, v6, (uint64_t **)v14, v18[0]);
  v18[0] = 0;
  std::unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100]((uint64_t)v18);
}

std::basic_string<char16_t> *std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::__construct_node<std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>> const&>(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v5;
  char *v6;
  std::basic_string<char16_t> *result;

  v5 = a2 + 8;
  v6 = (char *)operator new(0x50uLL);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = 0;
  result = std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::pair[abi:ne180100]((std::basic_string<char16_t> *)(v6 + 32), a3);
  *(_BYTE *)(a1 + 16) = 1;
  return result;
}

void sub_1CB4D7AA4(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100](v1);
  _Unwind_Resume(a1);
}

void std::unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v1)
  {
    if (*(_BYTE *)(a1 + 16))
      std::__destroy_at[abi:ne180100]<std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>,0>((uint64_t)v1 + 32);
    operator delete(v1);
  }
}

std::basic_string<char16_t> *std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::pair[abi:ne180100](std::basic_string<char16_t> *this, __int128 *a2)
{
  __int128 v4;
  std::basic_string<char16_t> *v5;
  __int128 v6;

  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(this, *(const std::basic_string<char16_t>::value_type **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v4 = *a2;
    this->__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v4;
  }
  v5 = this + 1;
  if (*((char *)a2 + 47) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v5, *((const std::basic_string<char16_t>::value_type **)a2 + 3), *((_QWORD *)a2 + 4));
  }
  else
  {
    v6 = *(__int128 *)((char *)a2 + 24);
    this[1].__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 5);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  return this;
}

void sub_1CB4D7B74(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t **com::apple::siri::tokenizer::data::config_ro::getContent@<X0>(uint64_t **a1@<X8>)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v3 = xmmword_1E8686A40;
  v4 = 0x1CB73E8CALL;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

uint64_t **com::apple::siri::cortex::common::fallback_locales::getContent@<X0>(uint64_t **a1@<X8>)
{
  _OWORD v3[3];
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v3[0] = xmmword_1E8674980;
  v3[1] = *(_OWORD *)&off_1E8674990;
  v3[2] = xmmword_1E86749A0;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 2);
}

uint64_t morphun::analysis::util::Attribute::operator==(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 32))(a1);
}

uint64_t morphun::analysis::util::Attribute::operator!=(uint64_t a1)
{
  return (*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 32))(a1) ^ 1;
}

void morphun::dialog::language::ThCommonConceptFactory::~ThCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1E8667C58);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1E8667C58);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::dialog::language::ThCommonConceptFactory::createOrList(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  std::basic_string<char16_t> __p;
  uint64_t (**v7)(morphun::dialog::SpeakableString *__hidden);
  std::basic_string<char16_t> v8;
  uint64_t v9;
  std::basic_string<char16_t> __dst;
  uint64_t (**v11)(morphun::dialog::SpeakableString *__hidden);
  std::basic_string<char16_t> v12;
  uint64_t v13;

  v2 = morphun::dialog::CommonConceptFactoryImpl::createOrList(a1, a2);
  npc<morphun::dialog::SemanticConceptList>(v2);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L", ");
  v11 = &off_1E866AD28;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    std::basic_string<char16_t>::__init_copy_ctor_external(&v12, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
  else
    v12 = __dst;
  v13 = 0;
  v3 = (*(uint64_t (**)(uint64_t, uint64_t (***)(morphun::dialog::SpeakableString *__hidden)))(*(_QWORD *)v2 + 168))(v2, &v11);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, " ");
  v7 = &off_1E866AD28;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    std::basic_string<char16_t>::__init_copy_ctor_external(&v8, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  else
    v8 = __p;
  v9 = 0;
  v4 = (*(uint64_t (**)(uint64_t, uint64_t (***)(morphun::dialog::SpeakableString *__hidden)))(*(_QWORD *)v3 + 184))(v3, &v7);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  return v4;
}

void sub_1CB4D7E10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  uint64_t v25;

  if (a14 < 0)
    operator delete(__p);
  if (a25 < 0)
    operator delete(a20);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::language::ThCommonConceptFactory::createAndList(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  std::basic_string<char16_t> __p;
  uint64_t (**v7)(morphun::dialog::SpeakableString *__hidden);
  std::basic_string<char16_t> v8;
  uint64_t v9;
  std::basic_string<char16_t> __dst;
  uint64_t (**v11)(morphun::dialog::SpeakableString *__hidden);
  std::basic_string<char16_t> v12;
  uint64_t v13;

  v2 = morphun::dialog::CommonConceptFactoryImpl::createAndList(a1, a2);
  npc<morphun::dialog::SemanticConceptList>(v2);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L", ");
  v11 = &off_1E866AD28;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    std::basic_string<char16_t>::__init_copy_ctor_external(&v12, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
  else
    v12 = __dst;
  v13 = 0;
  v3 = (*(uint64_t (**)(uint64_t, uint64_t (***)(morphun::dialog::SpeakableString *__hidden)))(*(_QWORD *)v2 + 168))(v2, &v11);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, " ");
  v7 = &off_1E866AD28;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    std::basic_string<char16_t>::__init_copy_ctor_external(&v8, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  else
    v8 = __p;
  v9 = 0;
  v4 = (*(uint64_t (**)(uint64_t, uint64_t (***)(morphun::dialog::SpeakableString *__hidden)))(*(_QWORD *)v3 + 184))(v3, &v7);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  return v4;
}

void sub_1CB4D7FA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  uint64_t v25;

  if (a14 < 0)
    operator delete(__p);
  if (a25 < 0)
    operator delete(a20);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::ThCommonConceptFactory::quantifiedJoin(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::basic_string<char16_t> __p;
  std::basic_string<char16_t> __dst;
  uint64_t (**v11)(morphun::dialog::SpeakableString *__hidden);
  std::basic_string<char16_t> v12;
  uint64_t v13;
  _QWORD v14[5];

  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)&word_1CB73EE14);
  v11 = &off_1E866AD28;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    std::basic_string<char16_t>::__init_copy_ctor_external(&v12, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  else
    v12 = __p;
  v13 = 0;
  morphun::dialog::SpeakableString::operator+(a2, (uint64_t)&v11, v14);
  morphun::dialog::SpeakableString::operator+((uint64_t)v14, a1, a4);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v8 = *(unsigned __int8 *)(a3 + 23);
  if ((v8 & 0x80u) != 0)
    v8 = *(_QWORD *)(a3 + 8);
  if (v8)
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)&word_1CB73EE14);
    v11 = &off_1E866AD28;
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
      std::basic_string<char16_t>::__init_copy_ctor_external(&v12, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
    else
      v12 = __dst;
    v13 = 0;
    morphun::dialog::SpeakableString::SpeakableString(&__p, (__int128 *)a3);
    morphun::dialog::SpeakableString::operator+((uint64_t)&v11, (uint64_t)&__p, v14);
    morphun::dialog::SpeakableString::operator+=((uint64_t)a4, (uint64_t)v14);
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__dst.__r_.__value_.__l.__data_);
  }
}

void sub_1CB4D81AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23)
{
  morphun::dialog::SpeakableString *v23;

  if (a22 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::dialog::SemanticConceptList>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4D82B4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::HiGrammarSynthesizer_CountLookupFunction::~HiGrammarSynthesizer_CountLookupFunction(morphun::grammar::synthesis::HiGrammarSynthesizer_CountLookupFunction *this)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  *(_QWORD *)this = &off_1E866EA48;
  v2 = *((_QWORD *)this + 26);
  *((_QWORD *)this + 26) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
  *(_QWORD *)this = &off_1E865CFB0;
  v3 = (void *)*((_QWORD *)this + 22);
  if (v3)
  {
    *((_QWORD *)this + 23) = v3;
    operator delete(v3);
  }
  v4 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  *((_QWORD *)this + 1) = &off_1E8671C00;
}

{
  morphun::grammar::synthesis::HiGrammarSynthesizer_CountLookupFunction::~HiGrammarSynthesizer_CountLookupFunction(this);
  JUMPOUT(0x1D179D2ECLL);
}

void morphun::grammar::synthesis::HiGrammarSynthesizer_CountLookupFunction::determine(_QWORD *a1@<X0>, uint64_t a2@<X1>, std::basic_string<char16_t> *a3@<X8>)
{
  std::basic_string<char16_t>::size_type size;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  const UChar *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  std::basic_string<char16_t>::size_type v21;
  std::basic_string<char16_t>::size_type v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  morphun::exception::NullPointerException *exception;
  uint64_t v27;
  std::basic_string<char16_t> v28;
  std::basic_string<char16_t> __dst;
  std::basic_string<char16_t> __p;

  morphun::dialog::DictionaryLookupFunction::determine((uint64_t)a1, a2, &__p);
  size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = __p.__r_.__value_.__l.__size_;
  if (size)
    goto LABEL_4;
  v7 = *(unsigned __int8 *)(a2 + 23);
  if ((v7 & 0x80u) != 0)
    v7 = *(_QWORD *)(a2 + 8);
  if (!v7)
  {
LABEL_4:
    *a3 = __p;
  }
  else
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)&word_1CB73EB86);
    v8 = a1[26];
    if (!v8 || (v9 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v8 + 24))(v8, a2), (v10 = v9) == 0))
    {
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
    v11 = *(_OWORD *)(v9 + 8);
    v12 = *(_QWORD *)(v9 + 16);
    if (v12)
      v13 = *(_QWORD *)(v12 + 80);
    else
      v13 = 0;
    while (1)
    {
      v27 = *((_QWORD *)&v11 + 1);
      v14 = v11;
      if (v13 == (_QWORD)v11)
        break;
      {
        v15 = *(char *)(v14 + 63);
        v16 = v15 >= 0 ? (const UChar *)(v14 + 40) : *(const UChar **)(v14 + 40);
        v17 = v15 >= 0 ? *(unsigned __int8 *)(v14 + 63) : *(_QWORD *)(v14 + 48);
        v18 = a1[27];
        v19 = a1[28];
        v28.__r_.__value_.__r.__words[0] = 0;
        if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v18, (uint64_t)&v28, v16, v17)
          && (v28.__r_.__value_.__r.__words[0] & v19) == v19)
        {
          morphun::dialog::DictionaryLookupFunction::determine((uint64_t)a1, v14 + 16, &v28);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          __p = v28;
          v21 = HIBYTE(v28.__r_.__value_.__r.__words[2]);
          if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
            v21 = v28.__r_.__value_.__l.__size_;
          if (v21)
            std::basic_string<char16_t>::operator=(&__dst, &__p);
        }
      }
      npc<morphun::Token const>(v14);
      *((_QWORD *)&v11 + 1) = v27;
      *(_QWORD *)&v11 = *(_QWORD *)(v14 + 80);
    }
    v22 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v22 = __dst.__r_.__value_.__l.__size_;
    if (v22)
    {
      *a3 = __dst;
      memset(&__dst, 0, sizeof(__dst));
    }
    else
    {
      v23 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 56))(v10);
      v24 = npc<morphun::Token>(v23);
      v25 = npc<morphun::Token>(*(_QWORD *)(v24 + 72));
      morphun::dialog::DictionaryLookupFunction::determine((uint64_t)a1, v25 + 16, a3);
    }
    (*(void (**)(uint64_t))(*(_QWORD *)v10 + 16))(v10);
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__dst.__r_.__value_.__l.__data_);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1CB4D8614(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  void *v25;

  __cxa_free_exception(v25);
  if (a19 < 0)
    operator delete(__p);
  if (a25 < 0)
    operator delete(a20);
  _Unwind_Resume(a1);
}

void sub_1CB4D86C4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::dialog::DictionaryLookupFunction::~DictionaryLookupFunction(morphun::dialog::DictionaryLookupFunction *this, uint64_t *a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v3 = *a2;
  *(_QWORD *)this = *a2;
  *(_QWORD *)((char *)this + *(_QWORD *)(v3 - 56)) = a2[1];
  *(_QWORD *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 40)) = a2[2];
  v4 = (void *)*((_QWORD *)this + 22);
  if (v4)
  {
    *((_QWORD *)this + 23) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v5)
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 16))(v5);
  *((_QWORD *)this + 1) = &off_1E8671C00;
}

void morphun::grammar::synthesis::ItGrammarSynthesizer_ItDisplayFunction::~ItGrammarSynthesizer_ItDisplayFunction(morphun::grammar::synthesis::ItGrammarSynthesizer_ItDisplayFunction *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E866E520;
  *((_QWORD *)this + 35) = &off_1E866B550;
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 44));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 41));
  v2 = *((_QWORD *)this + 34);
  *((_QWORD *)this + 34) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
}

{
  morphun::grammar::synthesis::ItGrammarSynthesizer_ItDisplayFunction::~ItGrammarSynthesizer_ItDisplayFunction(this);
  JUMPOUT(0x1D179D2ECLL);
}

morphun::dialog::SemanticFeatureModel_DisplayValue *morphun::grammar::synthesis::ItGrammarSynthesizer_ItDisplayFunction::getDisplayValue(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t TheBestDisplayValue;
  morphun::dialog::SemanticFeatureModel_DisplayValue *v8;
  uint64_t v9;
  __int128 v10;
  std::basic_string<char16_t>::size_type size;
  _OWORD *v12;
  _BOOL4 hasAnyFeatures;
  uint64_t v14;
  uint64_t v15;
  std::basic_string<char16_t> *v16;
  std::basic_string<char16_t>::size_type v17;
  __n128 v18;
  void *v19;
  uint64_t v20;
  int v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  const UChar **v27;
  uint64_t v28;
  uint64_t v29;
  const UChar *v30;
  const std::basic_string<char16_t>::value_type *v31;
  std::basic_string<char16_t>::size_type v32;
  int v33;
  const std::basic_string<char16_t>::value_type *v34;
  std::basic_string<char16_t>::size_type v35;
  int v36;
  void *v37;
  unint64_t v38;
  std::basic_string<char16_t> *v39;
  std::basic_string<char16_t>::size_type v40;
  int v41;
  morphun::dialog::SemanticFeatureModel_DisplayValue *v42;
  morphun::exception::NullPointerException *exception;
  morphun::exception::NullPointerException *v45;
  __int128 v46;
  uint64_t v47;
  std::basic_string<char16_t> __p;
  char v49;
  std::basic_string<char16_t> v50;
  char v51;
  _QWORD v52[3];
  std::basic_string<char16_t> v53;
  std::basic_string<char16_t> v54;
  std::basic_string<char16_t> __str;
  char v56;
  uint64_t v57;
  std::basic_string<char16_t> v58;

  TheBestDisplayValue = morphun::grammar::synthesis::GrammarSynthesizerUtil::getTheBestDisplayValue(*(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), a3);
  v8 = (morphun::dialog::SemanticFeatureModel_DisplayValue *)TheBestDisplayValue;
  if (!TheBestDisplayValue)
    return v8;
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)TheBestDisplayValue + 24))(TheBestDisplayValue);
  if (*(char *)(v9 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v53, *(const std::basic_string<char16_t>::value_type **)v9, *(_QWORD *)(v9 + 8));
  }
  else
  {
    v10 = *(_OWORD *)v9;
    v53.__r_.__value_.__r.__words[2] = *(_QWORD *)(v9 + 16);
    *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v10;
  }
  size = HIBYTE(v53.__r_.__value_.__r.__words[2]);
  if ((v53.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = v53.__r_.__value_.__l.__size_;
  if (!size)
  {
    v8 = 0;
    if ((*((_BYTE *)&v53.__r_.__value_.__s + 23) & 0x80) != 0)
      goto LABEL_96;
    return v8;
  }
  morphun::grammar::synthesis::GrammarSynthesizerUtil::mergeConstraintsWithDisplayValue(v52, (uint64_t)v8, a3);
  v46 = *(_OWORD *)(a1 + 8);
  v12 = operator new(0x10uLL);
  *v12 = v46;
  hasAnyFeatures = morphun::grammar::synthesis::GrammarSynthesizerUtil::hasAnyFeatures(a3, (uint64_t)v12, (uint64_t)(v12 + 1));
  operator delete(v12);
  if (!hasAnyFeatures)
    goto LABEL_94;
  v14 = *(_QWORD *)(a1 + 272);
  if (!v14)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  v15 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(_QWORD *)v14 + 24))(v14, &v53);
  npc<morphun::TokenChain>(v15);
  LOBYTE(v50.__r_.__value_.__l.__data_) = 0;
  v51 = 0;
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v15 + 32))(v15) == 1)
  {
    if ((v53.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v16 = &v53;
    else
      v16 = (std::basic_string<char16_t> *)v53.__r_.__value_.__r.__words[0];
    if ((v53.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v17 = HIBYTE(v53.__r_.__value_.__r.__words[2]);
    else
      v17 = v53.__r_.__value_.__l.__size_;
    morphun::grammar::synthesis::ItGrammarSynthesizer_ItDisplayFunction::inflectWord((uint64_t)&__str, a1, v16, v17, a3, a4);
    v18 = std::__optional_storage_base<std::basic_string<char16_t>,false>::__assign_from[abi:ne180100]<std::__optional_move_assign_base<std::basic_string<char16_t>,false>>((uint64_t)&v50, (__n128 *)&__str);
    if (v56 && SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    {
      v19 = (void *)__str.__r_.__value_.__r.__words[0];
      goto LABEL_87;
    }
    goto LABEL_88;
  }
  memset(&v58, 0, sizeof(v58));
  v20 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v15 + 56))(v15);
  if (!v20)
  {
    v45 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(v45);
  }
  v21 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v20 + 32))(v20);
  std::basic_string<char16_t>::reserve(&v58, v21);
  v22 = *(_OWORD *)(v15 + 8);
  v23 = *(_QWORD *)(v15 + 16);
  if (v23)
    v24 = *(_QWORD *)(v23 + 80);
  else
    v24 = 0;
  v25 = 0;
  while (1)
  {
    v47 = *((_QWORD *)&v22 + 1);
    v26 = v22;
    if (v24 == (_QWORD)v22)
    {
      __p = v58;
      v49 = 1;
      goto LABEL_84;
    }
    v27 = (const UChar **)(v22 + 16);
    v28 = *(unsigned __int8 *)(v22 + 39);
    if (!*(_BYTE *)(v22 + 64))
    {
LABEL_39:
      if ((v28 & 0x80u) == 0)
        v31 = (const std::basic_string<char16_t>::value_type *)(v22 + 16);
      else
        v31 = *(const std::basic_string<char16_t>::value_type **)(v22 + 16);
      if ((v28 & 0x80u) == 0)
        v32 = *(unsigned __int8 *)(v22 + 39);
      else
        v32 = *(_QWORD *)(v22 + 24);
      std::basic_string<char16_t>::append(&v58, v31, v32);
      goto LABEL_81;
    }
    if ((v28 & 0x80) != 0)
    {
      v29 = *(_QWORD *)(v22 + 24);
      if (v29 == 1)
      {
        v30 = *v27;
        if ((**v27 == 45) | v25 & 1)
          goto LABEL_39;
        v57 = 0;
      }
      else
      {
        if ((v25 & 1) != 0)
          goto LABEL_39;
        v57 = 0;
        v30 = *v27;
      }
    }
    else
    {
      if ((_DWORD)v28 == 1)
      {
        if ((*(_WORD *)v27 == 45) | v25 & 1)
          goto LABEL_39;
      }
      else if ((v25 & 1) != 0)
      {
        goto LABEL_39;
      }
      v57 = 0;
      v30 = (const UChar *)(v22 + 16);
      v29 = v28;
    }
    morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(_QWORD *)(a1 + 32), (uint64_t)&v57, v30, v29);
    if ((*(_QWORD *)(a1 + 392) & v57) == 0)
      break;
    v33 = *(char *)(v26 + 39);
    if (v33 >= 0)
      v34 = (const std::basic_string<char16_t>::value_type *)(v26 + 16);
    else
      v34 = *(const std::basic_string<char16_t>::value_type **)(v26 + 16);
    if (v33 >= 0)
      v35 = *(unsigned __int8 *)(v26 + 39);
    else
      v35 = *(_QWORD *)(v26 + 24);
    std::basic_string<char16_t>::append(&v58, v34, v35);
    v25 = 1;
LABEL_81:
    npc<morphun::Token const>(v26);
    *((_QWORD *)&v22 + 1) = v47;
    *(_QWORD *)&v22 = *(_QWORD *)(v26 + 80);
  }
  v36 = *(char *)(v26 + 39);
  if (v36 >= 0)
    v37 = (void *)(v26 + 16);
  else
    v37 = *(void **)(v26 + 16);
  if (v36 >= 0)
    v38 = *(unsigned __int8 *)(v26 + 39);
  else
    v38 = *(_QWORD *)(v26 + 24);
  morphun::grammar::synthesis::ItGrammarSynthesizer_ItDisplayFunction::inflectWord((uint64_t)&__str, a1, v37, v38, a3, a4);
  if (*(char *)(v26 + 39) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v54, *(const std::basic_string<char16_t>::value_type **)(v26 + 16), *(_QWORD *)(v26 + 24));
  }
  else
  {
    *(_OWORD *)&v54.__r_.__value_.__l.__data_ = *(_OWORD *)v27;
    v54.__r_.__value_.__r.__words[2] = *(_QWORD *)(v26 + 32);
  }
  if (v56)
  {
    std::basic_string<char16_t>::operator=(&v54, &__str);
    goto LABEL_67;
  }
  if (a4)
  {
LABEL_67:
    if ((v54.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v39 = &v54;
    else
      v39 = (std::basic_string<char16_t> *)v54.__r_.__value_.__r.__words[0];
    if ((v54.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v40 = HIBYTE(v54.__r_.__value_.__r.__words[2]);
    else
      v40 = v54.__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::append(&v58, (const std::basic_string<char16_t>::value_type *)v39, v40);
    v41 = 1;
  }
  else
  {
    v41 = 0;
  }
  if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v54.__r_.__value_.__l.__data_);
  if (v56 && SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  if (v41)
  {
    v25 = 0;
    goto LABEL_81;
  }
  LOBYTE(__p.__r_.__value_.__l.__data_) = 0;
  v49 = 0;
  if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v58.__r_.__value_.__l.__data_);
LABEL_84:
  v18 = std::__optional_storage_base<std::basic_string<char16_t>,false>::__assign_from[abi:ne180100]<std::__optional_move_assign_base<std::basic_string<char16_t>,false>>((uint64_t)&v50, (__n128 *)&__p);
  if (v49 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    v19 = (void *)__p.__r_.__value_.__r.__words[0];
LABEL_87:
    operator delete(v19);
  }
LABEL_88:
  if (v51)
  {
    std::basic_string<char16_t>::operator=(&v53, &v50);
    if (v51 && SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v50.__r_.__value_.__l.__data_);
LABEL_93:
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 16))(v15);
LABEL_94:
    v42 = (morphun::dialog::SemanticFeatureModel_DisplayValue *)operator new();
    morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue((uint64_t)v42, (__int128 *)&v53, (uint64_t)v52);
    v8 = morphun::dialog::DefinitenessDisplayFunction::addDefiniteness((uint64_t *)(a1 + 280), v42, a3);
  }
  else
  {
    if ((a4 & 1) != 0)
      goto LABEL_93;
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v15 + 16))(v15, v18);
    v8 = 0;
  }
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy((void **)v52[1]);
  if ((*((_BYTE *)&v53.__r_.__value_.__s + 23) & 0x80) != 0)
LABEL_96:
    operator delete(v53.__r_.__value_.__l.__data_);
  return v8;
}

void sub_1CB4D8D34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22,uint64_t a23,void **a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38)
{
  uint64_t v38;
  void *v39;
  uint64_t v40;

  __cxa_free_exception(v39);
  if (*(char *)(v40 - 81) < 0)
    operator delete(*(void **)(v40 - 104));
  (*(void (**)(uint64_t))(*(_QWORD *)v38 + 16))(v38);
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(a24);
  if (a31 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_1CB4D8E90(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::ItGrammarSynthesizer_ItDisplayFunction::inflectWord(uint64_t a1, uint64_t a2, void *a3, unint64_t a4, uint64_t a5, int a6)
{
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  int v15;
  __int128 *p_dst;
  uint64_t v17;
  uint64_t v18;
  __int128 __dst;
  unint64_t v20;
  void *__p[2];
  uint64_t v22;
  unsigned __int8 v23;
  std::basic_string<char16_t> v24;
  std::basic_string<char16_t> v25;

  v12 = (uint64_t *)operator new(0x10uLL);
  *(_OWORD *)v12 = *(_OWORD *)(a2 + 8);
  morphun::grammar::synthesis::GrammarSynthesizerUtil::convertToStringConstraints((uint64_t)&v25, a5, v12, v12 + 2);
  operator delete(v12);
  v13 = *(_QWORD *)(a2 + 24);
  v14 = (uint64_t *)operator new(8uLL);
  *v14 = v13;
  morphun::grammar::synthesis::GrammarSynthesizerUtil::convertToStringConstraints((uint64_t)&v24, a5, v14, v14 + 1);
  operator delete(v14);
  morphun::dialog::DictionaryLookupInflector::inflect((uint64_t)__p, a2 + 40, a3, a4, &v25, &v24);
  v15 = v23;
  if (!v23)
  {
    if (!a6)
    {
      *(_BYTE *)a1 = 0;
      *(_BYTE *)(a1 + 24) = 0;
      goto LABEL_19;
    }
    if (a4 >= 0x7FFFFFFFFFFFFFF8)
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    if (a4 >= 0xB)
    {
      v17 = (a4 & 0xFFFFFFFFFFFFFFFCLL) + 4;
      if ((a4 | 3) != 0xB)
        v17 = a4 | 3;
      p_dst = (__int128 *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v17 + 1);
      *((_QWORD *)&__dst + 1) = a4;
      v20 = v18 | 0x8000000000000000;
      *(_QWORD *)&__dst = p_dst;
    }
    else
    {
      HIBYTE(v20) = a4;
      p_dst = &__dst;
      if (!a4)
        goto LABEL_18;
    }
    memmove(p_dst, a3, 2 * a4);
LABEL_18:
    *((_WORD *)p_dst + a4) = 0;
    *(_OWORD *)a1 = __dst;
    *(_QWORD *)(a1 + 16) = v20;
    *(_BYTE *)(a1 + 24) = 1;
    goto LABEL_19;
  }
  if (SHIBYTE(v22) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)a1, (const std::basic_string<char16_t>::value_type *)__p[0], (std::basic_string<char16_t>::size_type)__p[1]);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)__p;
    *(_QWORD *)(a1 + 16) = v22;
  }
  *(_BYTE *)(a1 + 24) = 1;
  if (v15 && SHIBYTE(v22) < 0)
    operator delete(__p[0]);
LABEL_19:
  __p[0] = &v24;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
  __p[0] = &v25;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
}

void sub_1CB4D9074(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char *__p, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char a20)
{
  int v20;
  int v21;

  if (v21)
  {
    if (v20 < 0)
      operator delete(__p);
  }
  __p = &a17;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  __p = &a20;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  _Unwind_Resume(a1);
}

__n128 std::__optional_storage_base<std::basic_string<char16_t>,false>::__assign_from[abi:ne180100]<std::__optional_move_assign_base<std::basic_string<char16_t>,false>>(uint64_t a1, __n128 *a2)
{
  __n128 result;

  if (*(unsigned __int8 *)(a1 + 24) == a2[1].n128_u8[8])
  {
    if (*(_BYTE *)(a1 + 24))
    {
      if (*(char *)(a1 + 23) < 0)
        operator delete(*(void **)a1);
      result = *a2;
      *(_QWORD *)(a1 + 16) = a2[1].n128_u64[0];
      *(__n128 *)a1 = result;
      a2[1].n128_u8[7] = 0;
      a2->n128_u16[0] = 0;
    }
  }
  else if (*(_BYTE *)(a1 + 24))
  {
    if (*(char *)(a1 + 23) < 0)
      operator delete(*(void **)a1);
    *(_BYTE *)(a1 + 24) = 0;
  }
  else
  {
    result = *a2;
    *(_QWORD *)(a1 + 16) = a2[1].n128_u64[0];
    *(__n128 *)a1 = result;
    a2->n128_u64[1] = 0;
    a2[1].n128_u64[0] = 0;
    a2->n128_u64[0] = 0;
    *(_BYTE *)(a1 + 24) = 1;
  }
  return result;
}

void morphun::tokenizer::locale::fi::FiWordAndDelimiterTokenExtractor::~FiWordAndDelimiterTokenExtractor(morphun::tokenizer::locale::fi::FiWordAndDelimiterTokenExtractor *this)
{
  morphun::dictionary::metadata::MarisaTrie<int>::~MarisaTrie((uint64_t)this + 192);
  morphun::util::MemoryMappedFile::~MemoryMappedFile((morphun::tokenizer::locale::fi::FiWordAndDelimiterTokenExtractor *)((char *)this + 160));
  morphun::tokenizer::TokenExtractor::~TokenExtractor(this, (uint64_t *)&off_1E8669EB8);
}

{
  morphun::dictionary::metadata::MarisaTrie<int>::~MarisaTrie((uint64_t)this + 192);
  morphun::util::MemoryMappedFile::~MemoryMappedFile((morphun::tokenizer::locale::fi::FiWordAndDelimiterTokenExtractor *)((char *)this + 160));
  morphun::tokenizer::TokenExtractor::~TokenExtractor(this, (uint64_t *)&off_1E8669EB8);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::tokenizer::locale::fi::FiWordAndDelimiterTokenExtractor::createIterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = operator new();
  *(_QWORD *)v6 = &off_1E86737E0;
  *(_QWORD *)(v6 + 8) = a1 + 152;
  morphun::tokenizer::ICUTokenExtractorIterator::ICUTokenExtractorIterator(v6 + 16);
  *(_QWORD *)(v6 + 40) = a2;
  *(_QWORD *)(v6 + 48) = a3;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  *(_OWORD *)(v6 + 88) = 0u;
  *(_OWORD *)(v6 + 104) = 0u;
  *(_OWORD *)(v6 + 120) = 0u;
  return v6 + *(_QWORD *)(*(_QWORD *)v6 - 64);
}

void sub_1CB4D9290(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10F3C4057BE6752);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::NbCommonConceptFactory::~NbCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1E8667A58);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1E8667A58);
  JUMPOUT(0x1D179D2ECLL);
}

std::basic_string<char16_t> *std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::pair[abi:ne180100]<std::basic_string<char16_t> const&,char16_t const(&)[19],0>(std::basic_string<char16_t> *this, __int128 *a2, char *__src)
{
  __int128 v5;

  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(this, *(const std::basic_string<char16_t>::value_type **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v5 = *a2;
    this->__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v5;
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(this[1].__r_.__value_.__r.__words, __src);
  return this;
}

void sub_1CB4D9348(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

std::basic_string<char16_t> *std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::pair[abi:ne180100]<std::basic_string<char16_t> const&,char16_t const(&)[18],0>(std::basic_string<char16_t> *this, __int128 *a2, char *__src)
{
  __int128 v5;

  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(this, *(const std::basic_string<char16_t>::value_type **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v5 = *a2;
    this->__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v5;
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(this[1].__r_.__value_.__r.__words, __src);
  return this;
}

void sub_1CB4D93C0(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::~LemmaMappingAttributeImpl(morphun::analysis::tokenattributes::LemmaMappingAttributeImpl *this)
{
  void **v1;

  *(_QWORD *)this = &off_1E86718B8;
  *((_QWORD *)this + 4) = &unk_1E8671988;
  v1 = (void **)((char *)this + 8);
  std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__destroy_vector::operator()[abi:ne180100](&v1);
}

{
  void **v1;

  *(_QWORD *)this = &off_1E86718B8;
  *((_QWORD *)this + 4) = &unk_1E8671988;
  v1 = (void **)((char *)this + 8);
  std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__destroy_vector::operator()[abi:ne180100](&v1);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t `covariant return thunk to'morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::clone(morphun::analysis::tokenattributes::LemmaMappingAttributeImpl *this)
{
  _QWORD *v1;

  v1 = morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::clone((morphun::analysis::tokenattributes::LemmaMappingAttributeImpl *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 48)));
  return (uint64_t)v1 + *(_QWORD *)(*v1 - 56);
}

uint64_t morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::equals(morphun::analysis::tokenattributes::LemmaMappingAttributeImpl *this, const morphun::analysis::util::Attribute *lpsrc)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  if ((morphun::analysis::tokenattributes::LemmaMappingAttributeImpl *)((char *)this
                                                                       + *(_QWORD *)(*(_QWORD *)this - 88)) == lpsrc)
    return 1;
  if (!result)
    return result;
  v6 = (char *)this + 8;
  v4 = *((_QWORD *)this + 1);
  v5 = *((_QWORD *)v6 + 1);
  v7 = *(_QWORD *)(result + 8);
  if (v5 - v4 != *(_QWORD *)(result + 16) - v7)
    return 0;
  if (v4 == v5)
    return 1;
  do
  {
    result = morphun::analysis::tokenattributes::LemmaMapping::operator==(v4, v7);
    if (!(_DWORD)result)
      break;
    v7 += 48;
    v4 += 48;
  }
  while (v4 != v5);
  return result;
}

uint64_t morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::hashCode(morphun::analysis::tokenattributes::LemmaMappingAttributeImpl *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  std::basic_string<char16_t>::size_type size;
  void *v6;
  std::basic_string<char16_t> *v7;
  int v8;
  __int128 v10;
  std::basic_string<char16_t> v11;

  v1 = *((_QWORD *)this + 1);
  v2 = *((_QWORD *)this + 2);
  if (v1 == v2)
    return 0;
  LODWORD(v3) = 0;
  do
  {
    v10 = *(_OWORD *)(v1 + 8);
    if (*(char *)(v1 + 47) < 0)
      std::basic_string<char16_t>::__init_copy_ctor_external(&v11, *(const std::basic_string<char16_t>::value_type **)(v1 + 24), *(_QWORD *)(v1 + 32));
    else
      v11 = *(std::basic_string<char16_t> *)(v1 + 24);
    v4 = SHIBYTE(v11.__r_.__value_.__r.__words[2]);
    size = v11.__r_.__value_.__l.__size_;
    v6 = (void *)v11.__r_.__value_.__r.__words[0];
    if ((v11.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v7 = &v11;
    else
      v7 = (std::basic_string<char16_t> *)v11.__r_.__value_.__r.__words[0];
    if ((v11.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v11.__r_.__value_.__r.__words[2]);
    v8 = std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100]((uint64_t *)v7, 2 * size);
    if (v4 < 0)
      operator delete(v6);
    v3 = (v8 - (DWORD2(v10) + v10) + 32 * (DWORD2(v10) + v10) - v3 + 32 * v3);
    v1 += 48;
  }
  while (v1 != v2);
  return v3;
}

uint64_t morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::operator()(int a1, void *lpsrc)
{
  void *v2;

  if (!v2)
    __cxa_bad_cast();
  return (*(int (**)(void *))(*(_QWORD *)v2 + 40))(v2);
}

uint64_t morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::clear(uint64_t this)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;

  v1 = this;
  v3 = *(_QWORD **)(this + 8);
  v2 = *(_QWORD **)(this + 16);
  if (v2 != v3)
  {
    v4 = v2 - 6;
    v5 = v2 - 6;
    do
    {
      v6 = *v5;
      v5 -= 6;
      this = (*(uint64_t (**)(_QWORD *))(v6 + 8))(v4);
      v7 = v4 == v3;
      v4 = v5;
    }
    while (!v7);
  }
  *(_QWORD *)(v1 + 16) = v3;
  return this;
}

_QWORD *morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::clone(morphun::analysis::tokenattributes::LemmaMappingAttributeImpl *this)
{
  _QWORD *v2;

  v2 = (_QWORD *)operator new();
  *v2 = &off_1E86718B8;
  v2[3] = 0;
  v2[4] = &unk_1E8671988;
  v2[1] = 0;
  v2[2] = 0;
  (*(void (**)(morphun::analysis::tokenattributes::LemmaMappingAttributeImpl *, _QWORD *))(*(_QWORD *)this + 72))(this, v2);
  return v2;
}

void sub_1CB4D9780(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  MEMORY[0x1D179D2EC](v2, 0xA1C40B5CB1A42);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::copyTo(morphun::analysis::tokenattributes::LemmaMappingAttributeImpl *this, morphun::analysis::util::AttributeImpl *lpsrc)
{
  void *v3;
  morphun::exception::NullPointerException *exception;
  char *v6;

  if (!lpsrc)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  if (!v3)
  {
    v6 = (char *)__cxa_allocate_exception(0x38uLL);
    *(_OWORD *)(v6 + 8) = 0u;
    *(_OWORD *)(v6 + 24) = 0u;
    *(_OWORD *)(v6 + 40) = 0u;
    *(_QWORD *)v6 = &off_1E8673060;
  }
  return (*(uint64_t (**)(void *, char *))(*(_QWORD *)v3 + 96))(v3, (char *)this + 8);
}

void sub_1CB4D9860(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::reflectWith(morphun::analysis::tokenattributes::LemmaMappingAttributeImpl *this, morphun::analysis::util::AttributeReflector *a2)
{
  const void **v2;
  const void **v3;
  const void **v4;
  std::basic_string<char16_t>::size_type size;
  int v6;
  void *v7;
  std::basic_string<char16_t> *v8;
  std::basic_string<char16_t>::size_type v9;
  int v10;
  void *v11;
  std::basic_string<char16_t> *v12;
  std::basic_string<char16_t>::size_type v13;
  unint64_t v14;
  std::basic_string<char16_t>::size_type v15;
  int v16;
  void *v17;
  std::basic_string<char16_t> *p_dst;
  std::basic_string<char16_t>::size_type v19;
  const void **v20;
  std::basic_string<char16_t>::size_type v21;
  char v22;
  morphun::exception::NullPointerException *exception;
  std::basic_string<char16_t> v25;
  std::basic_string<char16_t> v26;
  std::basic_string<char16_t> v27;
  std::basic_string<char16_t> v28;
  std::basic_string<char16_t> v29;
  std::basic_string<char16_t> v30;
  std::basic_string<char16_t> __dst;
  std::basic_string<char16_t> v32;
  std::basic_string<char16_t> v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  memset(&v32, 0, sizeof(v32));
  v2 = (const void **)*((_QWORD *)this + 1);
  v3 = (const void **)*((_QWORD *)this + 2);
  if (v2 != v3)
  {
    v4 = v2 + 3;
    do
    {
      size = HIBYTE(v32.__r_.__value_.__r.__words[2]);
      if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        size = v32.__r_.__value_.__l.__size_;
      if (size)
        std::basic_string<char16_t>::append(&v32, L",", 1uLL);
      std::operator+<char16_t>((uint64_t)&v27, word_1CB72FD12, v4);
      std::basic_string<char16_t>::append(&v27, word_1CB72FD22, 0x16uLL);
      v28 = v27;
      memset(&v27, 0, sizeof(v27));
      morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)*(v4 - 2), &v26);
      v6 = SHIBYTE(v26.__r_.__value_.__r.__words[2]);
      v7 = (void *)v26.__r_.__value_.__r.__words[0];
      if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v8 = &v26;
      else
        v8 = (std::basic_string<char16_t> *)v26.__r_.__value_.__r.__words[0];
      if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v9 = HIBYTE(v26.__r_.__value_.__r.__words[2]);
      else
        v9 = v26.__r_.__value_.__l.__size_;
      std::basic_string<char16_t>::append(&v28, (const std::basic_string<char16_t>::value_type *)v8, v9);
      v29 = v28;
      memset(&v28, 0, sizeof(v28));
      std::basic_string<char16_t>::append(&v29, L",lemmaGrammemes=", 0x10uLL);
      v30 = v29;
      memset(&v29, 0, sizeof(v29));
      morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)*(v4 - 1), &v25);
      v10 = SHIBYTE(v25.__r_.__value_.__r.__words[2]);
      v11 = (void *)v25.__r_.__value_.__r.__words[0];
      if ((v25.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v12 = &v25;
      else
        v12 = (std::basic_string<char16_t> *)v25.__r_.__value_.__r.__words[0];
      if ((v25.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v13 = HIBYTE(v25.__r_.__value_.__r.__words[2]);
      else
        v13 = v25.__r_.__value_.__l.__size_;
      std::basic_string<char16_t>::append(&v30, (const std::basic_string<char16_t>::value_type *)v12, v13);
      v33 = v30;
      memset(&v30, 0, sizeof(v30));
      std::basic_string<char16_t>::append(&v33, (const std::basic_string<char16_t>::value_type *)"}", 1uLL);
      __dst = v33;
      v14 = v33.__r_.__value_.__r.__words[2];
      memset(&v33, 0, sizeof(v33));
      v15 = HIBYTE(v14);
      v16 = (char)v15;
      v17 = (void *)__dst.__r_.__value_.__r.__words[0];
      if ((v15 & 0x80u) == 0)
        p_dst = &__dst;
      else
        p_dst = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
      if ((v15 & 0x80u) == 0)
        v19 = v15;
      else
        v19 = __dst.__r_.__value_.__l.__size_;
      std::basic_string<char16_t>::append(&v32, (const std::basic_string<char16_t>::value_type *)p_dst, v19);
      if (v16 < 0)
        operator delete(v17);
      if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v33.__r_.__value_.__l.__data_);
        if ((v10 & 0x80000000) == 0)
          goto LABEL_29;
      }
      else if ((v10 & 0x80000000) == 0)
      {
        goto LABEL_29;
      }
      operator delete(v11);
LABEL_29:
      if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v30.__r_.__value_.__l.__data_);
      if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v29.__r_.__value_.__l.__data_);
        if (v6 < 0)
LABEL_42:
          operator delete(v7);
      }
      else if (v6 < 0)
      {
        goto LABEL_42;
      }
      if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v28.__r_.__value_.__l.__data_);
      if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v27.__r_.__value_.__l.__data_);
      v20 = v4 + 3;
      v4 += 6;
    }
    while (v20 != v3);
  }
  std::operator+<char16_t>((uint64_t)&__dst, L"[", (const void **)&v32.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::append(&__dst, L"]", 1uLL);
  v33.__r_.__value_.__r.__words[0] = __dst.__r_.__value_.__l.__size_;
  v21 = __dst.__r_.__value_.__r.__words[0];
  *(std::basic_string<char16_t>::size_type *)((char *)v33.__r_.__value_.__r.__words + 7) = *(std::basic_string<char16_t>::size_type *)((char *)&__dst.__r_.__value_.__r.__words[1] + 7);
  v22 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
  memset(&__dst, 0, sizeof(__dst));
  if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v32.__r_.__value_.__l.__data_);
    v32.__r_.__value_.__r.__words[0] = v21;
    v32.__r_.__value_.__l.__size_ = v33.__r_.__value_.__r.__words[0];
    *(std::basic_string<char16_t>::size_type *)((char *)&v32.__r_.__value_.__r.__words[1] + 7) = *(std::basic_string<char16_t>::size_type *)((char *)v33.__r_.__value_.__r.__words + 7);
    *((_BYTE *)&v32.__r_.__value_.__s + 23) = v22;
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__dst.__r_.__value_.__l.__data_);
  }
  else
  {
    v32.__r_.__value_.__r.__words[0] = v21;
    v32.__r_.__value_.__l.__size_ = v33.__r_.__value_.__r.__words[0];
    *(std::basic_string<char16_t>::size_type *)((char *)&v32.__r_.__value_.__r.__words[1] + 7) = *(std::basic_string<char16_t>::size_type *)((char *)v33.__r_.__value_.__r.__words + 7);
    *((_BYTE *)&v32.__r_.__value_.__s + 23) = v22;
  }
  if (!a2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "l");
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v32.__r_.__value_.__l.__data_);
}

void sub_1CB4D9C24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,void *__p,uint64_t a44,int a45,__int16 a46,char a47,char a48)
{
  uint64_t v48;

  if (*(char *)(v48 - 129) < 0)
    operator delete(*(void **)(v48 - 152));
  _Unwind_Resume(exception_object);
}

uint64_t morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::getLemmaMappings(morphun::analysis::tokenattributes::LemmaMappingAttributeImpl *this)
{
  return (uint64_t)this + 8;
}

uint64_t *morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::setLemmaMappings(uint64_t *a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t *result;

  v3 = a1 + 1;
  result = (uint64_t *)(*(uint64_t (**)(uint64_t *))(*a1 + 56))(a1);
  if (v3 != (uint64_t *)a2)
    return std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__assign_with_size[abi:ne180100]<morphun::analysis::tokenattributes::LemmaMapping*,morphun::analysis::tokenattributes::LemmaMapping*>(v3, *(const std::basic_string<char16_t> **)a2, *(_QWORD *)(a2 + 8), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 4));
  return result;
}

void `virtual thunk to'morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::~LemmaMappingAttributeImpl(morphun::analysis::tokenattributes::LemmaMappingAttributeImpl *this)
{
  char *v1;
  void **v2;

  v1 = (char *)this + *(_QWORD *)(*(_QWORD *)this - 32);
  *(_QWORD *)v1 = &off_1E86718B8;
  *((_QWORD *)v1 + 4) = &unk_1E8671988;
  v2 = (void **)(v1 + 8);
  std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__destroy_vector::operator()[abi:ne180100](&v2);
}

{
  char *v1;
  void **v2;

  v1 = (char *)this + *(_QWORD *)(*(_QWORD *)this - 32);
  *(_QWORD *)v1 = &off_1E86718B8;
  *((_QWORD *)v1 + 4) = &unk_1E8671988;
  v2 = (void **)(v1 + 8);
  std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__destroy_vector::operator()[abi:ne180100](&v2);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t `virtual thunk to'morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::getLemmaMappings(morphun::analysis::tokenattributes::LemmaMappingAttributeImpl *this)
{
  return (uint64_t)this + *(_QWORD *)(*(_QWORD *)this - 96) + 8;
}

uint64_t *`virtual thunk to'morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::setLemmaMappings(_QWORD *a1, uint64_t a2)
{
  return morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::setLemmaMappings((_QWORD *)((char *)a1 + *(_QWORD *)(*a1 - 104)), a2);
}

uint64_t std::operator+<char16_t>(uint64_t a1, _WORD *a2, const void **a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v8;
  uint64_t result;
  char *v10;
  const void *v11;

  if (*a2)
  {
    v5 = 0;
    do
      v6 = v5 + 1;
    while (a2[++v5]);
  }
  else
  {
    v6 = 0;
  }
  if (*((char *)a3 + 23) >= 0)
    v8 = *((unsigned __int8 *)a3 + 23);
  else
    v8 = (unint64_t)a3[1];
  result = std::basic_string<char16_t>::basic_string[abi:ne180100](a1, v8 + v6);
  if (*(char *)(result + 23) >= 0)
    v10 = (char *)result;
  else
    v10 = *(char **)result;
  if (v6)
    result = (uint64_t)memmove(v10, a2, 2 * v6);
  if (v8)
  {
    if (*((char *)a3 + 23) >= 0)
      v11 = a3;
    else
      v11 = *a3;
    result = (uint64_t)memmove(&v10[2 * v6], v11, 2 * v8);
  }
  *(_WORD *)&v10[2 * v6 + 2 * v8] = 0;
  return result;
}

_QWORD *morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::create(morphun::analysis::tokenattributes::LemmaMappingAttributeImpl *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[3] = 0;
  result[4] = &unk_1E8671988;
  *result = &off_1E86718B8;
  result[1] = 0;
  result[2] = 0;
  return result;
}

_QWORD *morphun::tokenizer::locale::DefaultTokenizer::createTokenExtractor(const morphun::util::ULocale *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t WordsToNotSplit;
  _QWORD *v6;
  char *v7;
  std::basic_string<char16_t>::size_type v8;
  uint64_t v9;
  uint64_t v10;
  std::basic_string<char16_t> *p_p;
  int32_t v12;
  _QWORD *exception;
  _OWORD *v15;
  std::basic_string<char16_t> __dst;
  std::basic_string<char16_t> v17;
  std::basic_string<char16_t> __p;

  v4 = (_QWORD *)operator new();
  WordsToNotSplit = morphun::tokenizer::TokenExtractor::createWordsToNotSplit((uint64_t)a1, a2, (uint64_t (*)(void **, uint64_t, _WORD *, unint64_t))morphun::tokenizer::TokenExtractor::isIndivisibleWordNormalized);
  *v4 = &off_1E8673320;
  morphun::util::ULocale::ULocale((morphun::util::ULocale *)(v4 + 1), a1);
  v4[17] = WordsToNotSplit;
  v4[18] = 0;
  if (WordsToNotSplit && !*(_QWORD *)(WordsToNotSplit + 16))
  {
    exception = __cxa_allocate_exception(0x38uLL);
    v15 = operator new(0x30uLL);
    __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v15;
    *(_OWORD *)&__p.__r_.__value_.__r.__words[1] = xmmword_1CB5DD540;
    *v15 = xmmword_1CB73D216;
    v15[1] = unk_1CB73D226;
    *(_OWORD *)((char *)v15 + 28) = unk_1CB73D232;
    *((_WORD *)v15 + 22) = 0;
    morphun::exception::Throwable::Throwable((uint64_t)exception, (__int128 *)&__p);
    *exception = &off_1E8673120;
  }
  v6 = std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(a2, L"tokenizer.decompound", 0x14uLL);
  if ((_QWORD *)(a2 + 8) != v6)
  {
    v7 = (char *)v6[6];
    if (*(_WORD *)v7)
    {
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, v7);
      std::basic_string<char16_t>::insert(&__dst, (std::basic_string<char16_t>::size_type)L"^(", (const std::basic_string<char16_t>::value_type *)2, v8);
      v17 = __dst;
      memset(&__dst, 0, sizeof(__dst));
      std::basic_string<char16_t>::append(&v17, (const std::basic_string<char16_t>::value_type *)")", 2uLL);
      __p = v17;
      memset(&v17, 0, sizeof(v17));
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__dst.__r_.__value_.__l.__data_);
      v9 = operator new();
      v10 = v9;
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        p_p = &__p;
      else
        p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v12 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        v12 = __p.__r_.__value_.__r.__words[1];
      icu4cxx::RegularExpression::RegularExpression(v9, (UChar *)p_p, v12, 2u);
      v4[18] = v10;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  morphun::tokenizer::TokenUtil::isSignificant((unsigned __int16 *)"A", 1uLL);
  return v4;
}

void sub_1CB4DA178(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  uint64_t v28;
  void **v29;
  void *v30;
  int v31;

  if (a28 < 0)
  {
    operator delete(__p);
    if ((v31 & 1) == 0)
    {
LABEL_6:
      MEMORY[0x1D179D2EC](v28, 0x10F3C40049B2901);
      _Unwind_Resume(a1);
    }
  }
  else if (!v31)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v30);
  goto LABEL_6;
}

void morphun::grammar::synthesis::FiGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::FiGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  uint64_t v3;
  morphun::dictionary::DictionaryMetaData *v4;
  const morphun::util::ULocale *v5;
  morphun::util::LocaleUtils *Dictionary;
  morphun::dictionary::Inflector *v7;
  const morphun::util::ULocale *v8;
  morphun::util::LocaleUtils *Inflector;
  morphun::TokenizerFactory *v10;
  const morphun::util::ULocale *v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *BinaryProperties;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  morphun::dialog::DefaultFeatureFunction *v29;
  morphun::dialog::DefaultFeatureFunction *v30;
  morphun::dialog::DefaultFeatureFunction *v31;
  morphun::dialog::DefaultFeatureFunction *v32;
  morphun::analysis::fi::FinnishMorphology *v33;
  morphun::exception::NullPointerException *exception;
  void *__p;
  void *v36;
  char *v37;
  void **p_p;
  char v39;
  void *__dst[2];
  char v41;
  __int128 v42;

  *(_QWORD *)&v42 = *MEMORY[0x1E0C80C00];
  v3 = operator new();
  *(_QWORD *)v3 = &off_1E866E378;
  v4 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::FINNISH((morphun::util::LocaleUtils *)v3);
  Dictionary = (morphun::util::LocaleUtils *)morphun::dictionary::DictionaryMetaData::createDictionary(v4, v5);
  if (!Dictionary)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  *(_QWORD *)(v3 + 8) = Dictionary;
  v7 = (morphun::dictionary::Inflector *)morphun::util::LocaleUtils::FINNISH(Dictionary);
  Inflector = (morphun::util::LocaleUtils *)morphun::dictionary::Inflector::getInflector(v7, v8);
  *(_QWORD *)(v3 + 16) = Inflector;
  v10 = (morphun::TokenizerFactory *)morphun::util::LocaleUtils::FINNISH(Inflector);
  *(_QWORD *)(v3 + 24) = morphun::TokenizerFactory::createTokenizer(v10, v11);
  morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::FiGrammarSynthesizer_LemmaApproximator((morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator *)(v3 + 32), *(const morphun::dictionary::DictionaryMetaData **)(v3 + 8), *(const morphun::dictionary::Inflector **)(v3 + 16));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"count");
  v12 = (_QWORD *)std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)this + 8, (unsigned __int16 *)&__p);
  v13 = (char *)this + 16;
  if ((_QWORD *)((char *)this + 16) == v12)
    v14 = 0;
  else
    v14 = v12[7];
  npc<morphun::dialog::SemanticFeature const>(v14);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  *(_QWORD *)(v3 + 64) = v14;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, "c");
  v15 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)this + 8, (unsigned __int16 *)&__p);
  if (v13 == (char *)v15)
    v16 = 0;
  else
    v16 = *(_QWORD *)(v15 + 56);
  npc<morphun::dialog::SemanticFeature const>(v16);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  *(_QWORD *)(v3 + 72) = v16;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"pronounPerson");
  v17 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)this + 8, (unsigned __int16 *)&__p);
  if (v13 == (char *)v17)
    v18 = 0;
  else
    v18 = *(_QWORD *)(v17 + 56);
  npc<morphun::dialog::SemanticFeature const>(v18);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  *(_QWORD *)(v3 + 80) = v18;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"person");
  v19 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)this + 8, (unsigned __int16 *)&__p);
  if (v13 == (char *)v19)
    v20 = 0;
  else
    v20 = *(_QWORD *)(v19 + 56);
  npc<morphun::dialog::SemanticFeature const>(v20);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  *(_OWORD *)(v3 + 96) = 0u;
  *(_QWORD *)(v3 + 88) = v20;
  *(_OWORD *)(v3 + 112) = 0u;
  v21 = *(_QWORD *)(v3 + 8);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, "a");
  __p = 0;
  v36 = 0;
  v37 = 0;
  p_p = &__p;
  v39 = 0;
  __p = operator new(0x18uLL);
  v36 = __p;
  v37 = (char *)__p + 24;
  v36 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v37, (__int128 *)__dst, &v42, (std::basic_string<char16_t> *)__p);
  BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v21, (uint64_t *)(v3 + 96), (uint64_t *)&__p);
  morphun::util::Validate::notNull<long long>((uint64_t)BinaryProperties);
  p_p = &__p;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&p_p);
  if (v41 < 0)
    operator delete(__dst[0]);
  v23 = *(_QWORD *)(v3 + 8);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, (char *)L"noun");
  __p = 0;
  v36 = 0;
  v37 = 0;
  p_p = &__p;
  v39 = 0;
  __p = operator new(0x18uLL);
  v36 = __p;
  v37 = (char *)__p + 24;
  v36 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v37, (__int128 *)__dst, &v42, (std::basic_string<char16_t> *)__p);
  v24 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v23, (uint64_t *)(v3 + 104), (uint64_t *)&__p);
  morphun::util::Validate::notNull<long long>((uint64_t)v24);
  p_p = &__p;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&p_p);
  if (v41 < 0)
    operator delete(__dst[0]);
  v25 = *(_QWORD *)(v3 + 8);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, (char *)L"proper-noun");
  __p = 0;
  v36 = 0;
  v37 = 0;
  p_p = &__p;
  v39 = 0;
  __p = operator new(0x18uLL);
  v36 = __p;
  v37 = (char *)__p + 24;
  v36 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v37, (__int128 *)__dst, &v42, (std::basic_string<char16_t> *)__p);
  v26 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v25, (uint64_t *)(v3 + 112), (uint64_t *)&__p);
  morphun::util::Validate::notNull<long long>((uint64_t)v26);
  p_p = &__p;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&p_p);
  if (v41 < 0)
    operator delete(__dst[0]);
  *(_QWORD *)(v3 + 120) = *(_QWORD *)(v3 + 96) | *(_QWORD *)(v3 + 104) | *(_QWORD *)(v3 + 112);
  v27 = v3 + *(_QWORD *)(*(_QWORD *)v3 - 56);
  v28 = *((_QWORD *)this + 29);
  if (v28)
    (*(void (**)(uint64_t))(*(_QWORD *)v28 + 16))(v28);
  *((_QWORD *)this + 29) = v27;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, "r");
  v29 = (morphun::dialog::DefaultFeatureFunction *)operator new();
  *(_QWORD *)v29 = &off_1E865E038;
  morphun::grammar::synthesis::FiGrammarSynthesizer_LocativeBasedLookupFunction::FiGrammarSynthesizer_LocativeBasedLookupFunction((uint64_t)v29, (uint64_t *)&off_1E86686A8, v3, 4, 7);
  *(_QWORD *)v29 = &off_1E866F458;
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__p, v29);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"exiting");
  v30 = (morphun::dialog::DefaultFeatureFunction *)operator new();
  *(_QWORD *)v30 = &off_1E865D950;
  morphun::grammar::synthesis::FiGrammarSynthesizer_LocativeBasedLookupFunction::FiGrammarSynthesizer_LocativeBasedLookupFunction((uint64_t)v30, (uint64_t *)&off_1E8668468, v3, 5, 8);
  *(_QWORD *)v30 = &off_1E866EFA8;
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__p, v30);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"entering");
  v31 = (morphun::dialog::DefaultFeatureFunction *)operator new();
  *(_QWORD *)v31 = &off_1E865DF90;
  morphun::grammar::synthesis::FiGrammarSynthesizer_LocativeBasedLookupFunction::FiGrammarSynthesizer_LocativeBasedLookupFunction((uint64_t)v31, (uint64_t *)&off_1E8668668, v3, 6, 9);
  *(_QWORD *)v31 = &off_1E866F400;
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__p, v31);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, "w");
  v32 = (morphun::dialog::DefaultFeatureFunction *)operator new();
  *(_QWORD *)v32 = &off_1E866FB50;
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__p, v32);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"count");
  v33 = (morphun::analysis::fi::FinnishMorphology *)operator new();
  *(_QWORD *)v33 = &off_1E866E988;
  *((_QWORD *)v33 + 1) = 0;
  *((_QWORD *)v33 + 1) = morphun::analysis::fi::FinnishMorphology::getInstance(v33);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__p, (morphun::analysis::fi::FinnishMorphology *)((char *)v33 + *(_QWORD *)(*(_QWORD *)v33 - 56)));
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
}

void sub_1CB4DA8A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  uint64_t v23;
  void *v24;

  __cxa_free_exception(v24);
  MEMORY[0x1D179D2EC](v23, 0x10E1C40FACB0144);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::FiGrammarSynthesizer::getPossibleCombinations(__int128 **a1@<X0>, std::basic_string<char16_t>::size_type a2@<X8>)
{
  __int128 **v2;
  std::basic_string<char16_t> *v4;
  __int128 ***v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 *v9;
  __int128 *v10;
  __int128 *v11;
  __int128 ***v12;
  __int128 ***v13;
  __int128 ***v14;
  unint64_t v15;
  std::basic_string<char16_t> *v16;
  unint64_t v17;
  __int128 **v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  std::basic_string<char16_t> *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  std::basic_string<char16_t> *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  int64x2_t v34;
  unint64_t v35;
  uint64_t v36;
  std::basic_string<char16_t> *v37;
  std::basic_string<char16_t> *v38;
  std::basic_string<char16_t>::__raw *v39;
  __int128 v40;
  std::basic_string<char16_t> *v41;
  std::basic_string<char16_t> *v42;
  __int128 **v43;
  uint64_t v44;
  __int128 **v45;
  uint64_t v46;
  uint64_t v47;
  std::basic_string<char16_t> *v48;
  uint64_t v49;
  __int128 ***v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  __int128 ***v54;
  std::basic_string<char16_t> *v55;
  __int128 ***v56;
  std::basic_string<char16_t> *v57;
  std::basic_string<char16_t>::__raw *v58;
  std::basic_string<char16_t> *v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  std::basic_string<char16_t> *v65;
  std::basic_string<char16_t> *v66;
  std::basic_string<char16_t> *v67;
  uint64_t v68;
  uint64_t v69;
  __int128 ***v70;
  std::basic_string<char16_t> *v71;
  int64x2_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 **v77;
  void **v78;
  uint64_t *v79;
  unint64_t v80;
  __int128 ***v81;
  __int128 ***v82;
  std::basic_string<char16_t> v83;
  std::basic_string<char16_t> *v84;
  int64x2_t v85;
  unint64_t v86;
  void **v87;
  std::basic_string<char16_t>::__raw *v88;
  std::basic_string<char16_t> *v89;
  std::basic_string<char16_t> v90;
  _OWORD v91[2];
  void **v92;
  uint64_t v93;

  v2 = a1;
  v93 = *MEMORY[0x1E0C80C00];
  memset(&v90, 0, sizeof(v90));
  std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(&v90, *a1, a1[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a1[1] - (char *)*a1) >> 3));
  memset(v91, 0, 24);
  *(_QWORD *)&v91[0] = operator new(0x18uLL);
  *((_QWORD *)&v91[0] + 1) = *(_QWORD *)&v91[0];
  *(_QWORD *)&v91[1] = *(_QWORD *)&v91[0] + 24;
  *((_QWORD *)&v91[0] + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>,std::vector<std::basic_string<char16_t>> const*,std::vector<std::basic_string<char16_t>> const*,std::vector<std::basic_string<char16_t>>*>((uint64_t)&v91[1], (__int128 **)&v90, (__int128 **)v91, *(std::basic_string<char16_t> **)&v91[0]);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  v83.__r_.__value_.__r.__words[0] = a2;
  LOBYTE(v83.__r_.__value_.__r.__words[1]) = 0;
  v4 = (std::basic_string<char16_t> *)operator new(0x18uLL);
  *(_QWORD *)(a2 + 16) = v4 + 1;
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v4;
  v81 = (__int128 ***)v4;
  v89 = v4;
  v78 = (void **)(a2 + 16);
  v84 = (std::basic_string<char16_t> *)(a2 + 16);
  v85.i64[0] = (uint64_t)&v89;
  v85.i64[1] = (uint64_t)&v81;
  LOBYTE(v86) = 0;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  std::vector<std::vector<std::basic_string<char16_t>>>::__init_with_size[abi:ne180100]<std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*>(v4, *(__int128 ***)&v91[0], *((__int128 ***)&v91[0] + 1), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)&v91[0] + 1) - *(_QWORD *)&v91[0]) >> 3));
  v81 += 3;
  v5 = v81;
  LOBYTE(v86) = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::vector<std::basic_string<char16_t>>>>,std::vector<std::vector<std::basic_string<char16_t>>>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)&v84);
  v79 = (uint64_t *)a2;
  *(_QWORD *)(a2 + 8) = v5;
  v84 = (std::basic_string<char16_t> *)v91;
  std::vector<std::vector<std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v84);
  v84 = &v90;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v84);
  v6 = (char *)v2[1] - (char *)*v2;
  if (v6 == 24)
    return;
  v7 = 0xAAAAAAAAAAAAAAABLL * (v6 >> 3);
  if ((int)v7 < 2)
    return;
  v76 = v7;
  v77 = v2;
  v8 = 1;
  do
  {
    v9 = *v2;
    memset(&v90, 0, sizeof(v90));
    std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::__wrap_iter<std::basic_string<char16_t> const*>,std::__wrap_iter<std::basic_string<char16_t> const*>>(&v90, v9, (__int128 *)((char *)v9 + 24 * v8), v8);
    v10 = v2[1];
    v11 = (__int128 *)((char *)*v2 + 24 * v8);
    memset(&v83, 0, sizeof(v83));
    std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::__wrap_iter<std::basic_string<char16_t> const*>,std::__wrap_iter<std::basic_string<char16_t> const*>>(&v83, v11, v10, 0xAAAAAAAAAAAAAAABLL * (((char *)v10 - (char *)v11) >> 3));
    v80 = v8;
    morphun::grammar::synthesis::FiGrammarSynthesizer::getPossibleCombinations(&v81, &v83);
    v13 = v81;
    v12 = v82;
    v14 = v81;
    if (v81 == v82)
      goto LABEL_43;
    do
    {
      v16 = (std::basic_string<char16_t> *)*v13;
      v15 = (unint64_t)v13[1];
      v17 = (unint64_t)v13[2];
      if (v15 < v17)
      {
        if (v16 == (std::basic_string<char16_t> *)v15)
        {
          v16->__r_.__value_.__r.__words[0] = 0;
          v16->__r_.__value_.__l.__size_ = 0;
          v16->__r_.__value_.__r.__words[2] = 0;
          std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(v16, (__int128 *)v90.__r_.__value_.__l.__data_, (__int128 *)v90.__r_.__value_.__l.__size_, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v90.__r_.__value_.__l.__size_ - v90.__r_.__value_.__r.__words[0]) >> 3));
          v13[1] = (__int128 **)&v16[1];
        }
        else
        {
          v18 = v13[1];
          v19 = v15 - 24;
          if (v15 >= 0x18)
          {
            do
            {
              *v18 = 0;
              v18[1] = 0;
              v18[2] = 0;
              *(_OWORD *)v18 = *(_OWORD *)v19;
              v18[2] = *(__int128 **)(v19 + 16);
              *(_QWORD *)v19 = 0;
              *(_QWORD *)(v19 + 8) = 0;
              *(_QWORD *)(v19 + 16) = 0;
              v18 += 3;
              v19 += 24;
            }
            while (v19 < v15);
          }
          v13[1] = v18;
          if ((std::basic_string<char16_t> *)v15 != &v16[1])
          {
            v20 = 0;
            do
            {
              v21 = v15 - 24 + v20;
              v22 = v15 + v20;
              std::vector<std::basic_string<char16_t>>::__vdeallocate((uint64_t *)(v15 + v20 - 24));
              *(_OWORD *)(v22 - 24) = *(_OWORD *)(v21 - 24);
              *(_QWORD *)(v22 - 8) = *(_QWORD *)(v21 - 8);
              *(_QWORD *)(v21 - 24) = 0;
              *(_QWORD *)(v21 - 16) = 0;
              *(_QWORD *)(v21 - 8) = 0;
              v20 -= 24;
            }
            while (-8 * ((uint64_t)(v15 - (_QWORD)(v16 + 1)) >> 3) != v20);
          }
          v23 = &v90;
          if (v16 <= &v90)
            v23 = &v90 + (v13[1] > (__int128 **)&v90);
          if (v16 != v23)
            std::vector<std::basic_string<char16_t>>::__assign_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>((uint64_t)v16, (std::basic_string<char16_t> *)v23->__r_.__value_.__l.__data_, (__int128 *)v23->__r_.__value_.__l.__size_, 0xAAAAAAAAAAAAAAABLL* ((uint64_t)(v23->__r_.__value_.__l.__size_ - v23->__r_.__value_.__r.__words[0]) >> 3));
        }
        goto LABEL_41;
      }
      v24 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v15 - (_QWORD)v16) >> 3) + 1;
      if (v24 > 0xAAAAAAAAAAAAAAALL)
        std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
      v25 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v17 - (_QWORD)v16) >> 3);
      if (2 * v25 > v24)
        v24 = 2 * v25;
      if (v25 >= 0x555555555555555)
        v26 = 0xAAAAAAAAAAAAAAALL;
      else
        v26 = v24;
      v92 = (void **)(v13 + 2);
      if (!v26)
      {
        memset(v91, 0, sizeof(v91));
LABEL_27:
        v87 = v92;
        v29 = std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(1uLL);
        v31 = *((_QWORD *)&v91[0] + 1);
        if (*(_QWORD *)&v91[1] == *((_QWORD *)&v91[0] + 1))
        {
          v34 = vdupq_n_s64(*((unint64_t *)&v91[0] + 1));
          v32 = v29;
        }
        else
        {
          v32 = (_QWORD *)((char *)v29 + *(_QWORD *)&v91[1] - *((_QWORD *)&v91[0] + 1));
          v33 = v29;
          do
          {
            *v33 = 0;
            v33[1] = 0;
            v33[2] = 0;
            *(_OWORD *)v33 = *(_OWORD *)v31;
            v33[2] = *(_QWORD *)(v31 + 16);
            *(_QWORD *)v31 = 0;
            *(_QWORD *)(v31 + 8) = 0;
            *(_QWORD *)(v31 + 16) = 0;
            v33 += 3;
            v31 += 24;
          }
          while (v33 != v32);
          v34 = *(int64x2_t *)((char *)v91 + 8);
        }
        v35 = *((_QWORD *)&v91[1] + 1);
        v84 = *(std::basic_string<char16_t> **)&v91[0];
        *(_QWORD *)&v91[0] = v29;
        *((_QWORD *)&v91[0] + 1) = v29;
        v85 = v34;
        *(_QWORD *)&v91[1] = v32;
        *((_QWORD *)&v91[1] + 1) = &v29[3 * v30];
        v86 = v35;
        std::__split_buffer<std::vector<std::basic_string<char16_t>>>::~__split_buffer((uint64_t)&v84);
        v27 = *(std::basic_string<char16_t> **)&v91[1];
        goto LABEL_33;
      }
      v27 = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v26);
      *(_QWORD *)&v91[0] = v27;
      *((_QWORD *)&v91[0] + 1) = v27;
      *(_QWORD *)&v91[1] = v27;
      *((_QWORD *)&v91[1] + 1) = &v27[v28];
      if (!v28)
        goto LABEL_27;
LABEL_33:
      v27->__r_.__value_.__r.__words[0] = 0;
      v27->__r_.__value_.__l.__size_ = 0;
      v27->__r_.__value_.__r.__words[2] = 0;
      std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(v27, (__int128 *)v90.__r_.__value_.__l.__data_, (__int128 *)v90.__r_.__value_.__l.__size_, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v90.__r_.__value_.__l.__size_ - v90.__r_.__value_.__r.__words[0]) >> 3));
      v36 = *((_QWORD *)&v91[0] + 1);
      v37 = (std::basic_string<char16_t> *)(*(_QWORD *)&v91[1] + 24);
      *(_QWORD *)&v91[1] += 24;
      v38 = (std::basic_string<char16_t> *)*v13;
      if (v16 != (std::basic_string<char16_t> *)*v13)
      {
        v39 = (std::basic_string<char16_t>::__raw *)v16;
        do
        {
          *(_QWORD *)(v36 - 24) = 0;
          *(_QWORD *)(v36 - 16) = 0;
          v36 -= 24;
          *(_QWORD *)(v36 + 16) = 0;
          v40 = *(_OWORD *)v39[-1].__words;
          --v39;
          *(_OWORD *)v36 = v40;
          *(_QWORD *)(v36 + 16) = v39->__words[2];
          v39->__words[0] = 0;
          v39->__words[1] = 0;
          v39->__words[2] = 0;
        }
        while (v39 != (std::basic_string<char16_t>::__raw *)v38);
        v37 = *(std::basic_string<char16_t> **)&v91[1];
      }
      *((_QWORD *)&v91[0] + 1) = v36;
      v41 = (std::basic_string<char16_t> *)v13[1];
      v88 = (std::basic_string<char16_t>::__raw *)v37;
      v89 = v37;
      v84 = (std::basic_string<char16_t> *)(v13 + 2);
      v85.i64[0] = (uint64_t)&v88;
      v85.i64[1] = (uint64_t)&v89;
      if (v16 != v41)
      {
        do
        {
          v37->__r_.__value_.__r.__words[0] = 0;
          v37->__r_.__value_.__l.__size_ = 0;
          v37->__r_.__value_.__r.__words[2] = 0;
          *(_OWORD *)&v37->__r_.__value_.__l.__data_ = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
          v37->__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
          v16->__r_.__value_.__r.__words[0] = 0;
          v16->__r_.__value_.__l.__size_ = 0;
          v16->__r_.__value_.__r.__words[2] = 0;
          ++v37;
          ++v16;
        }
        while (v16 != v41);
        v89 = v37;
      }
      LOBYTE(v86) = 1;
      std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::basic_string<char16_t>>>,std::vector<std::basic_string<char16_t>>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)&v84);
      *(_QWORD *)&v91[1] = v37;
      v42 = (std::basic_string<char16_t> *)*v13;
      *v13 = (__int128 **)*((_QWORD *)&v91[0] + 1);
      *((_QWORD *)&v91[0] + 1) = v42;
      v43 = v13[1];
      v13[1] = *(__int128 ***)&v91[1];
      v44 = *((_QWORD *)&v91[0] + 1);
      *(_QWORD *)&v91[1] = v43;
      v45 = v13[2];
      v13[2] = (__int128 **)*((_QWORD *)&v91[1] + 1);
      *((_QWORD *)&v91[1] + 1) = v45;
      *(_QWORD *)&v91[0] = v44;
      std::__split_buffer<std::vector<std::basic_string<char16_t>>>::~__split_buffer((uint64_t)v91);
LABEL_41:
      v13 += 3;
    }
    while (v13 != v12);
    v14 = v81;
    v13 = v82;
LABEL_43:
    if ((char *)v13 - (char *)v14 >= 1)
    {
      v46 = ((char *)v13 - (char *)v14) / 24;
      v47 = *v79;
      v48 = (std::basic_string<char16_t> *)v79[1];
      v49 = ((uint64_t)v48 - *v79) / 24;
      v50 = (__int128 ***)(*v79 + 24 * v49);
      if ((uint64_t)(0xAAAAAAAAAAAAAAABLL * (((_BYTE *)*v78 - (_BYTE *)v48) >> 3)) < v46)
      {
        v51 = v49 + v46;
        if ((unint64_t)(v49 + v46) > 0xAAAAAAAAAAAAAAALL)
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        if (0x5555555555555556 * (((uint64_t)*v78 - v47) >> 3) > v51)
          v51 = 0x5555555555555556 * (((uint64_t)*v78 - v47) >> 3);
        if (0xAAAAAAAAAAAAAAABLL * (((uint64_t)*v78 - v47) >> 3) >= 0x555555555555555)
          v52 = 0xAAAAAAAAAAAAAAALL;
        else
          v52 = v51;
        v87 = v78;
        if (v52)
          v52 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v52);
        else
          v53 = 0;
        v66 = (std::basic_string<char16_t> *)(v52 + 24 * v49);
        v84 = (std::basic_string<char16_t> *)v52;
        v85.i64[0] = (uint64_t)v66;
        v85.i64[1] = (uint64_t)v66;
        v86 = v52 + 24 * v53;
        v67 = &v66[v46];
        v68 = 24 * v46;
        do
        {
          v66->__r_.__value_.__r.__words[0] = 0;
          v66->__r_.__value_.__l.__size_ = 0;
          v66->__r_.__value_.__r.__words[2] = 0;
          std::vector<std::vector<std::basic_string<char16_t>>>::__init_with_size[abi:ne180100]<std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*>(v66++, *v14, v14[1], 0xAAAAAAAAAAAAAAABLL * (v14[1] - *v14));
          v14 += 3;
          v68 -= 24;
        }
        while (v68);
        v85.i64[1] = (uint64_t)v67;
        std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::vector<std::vector<std::basic_string<char16_t>>>>,std::reverse_iterator<std::vector<std::vector<std::basic_string<char16_t>>>*>,std::reverse_iterator<std::vector<std::vector<std::basic_string<char16_t>>>*>,std::reverse_iterator<std::vector<std::vector<std::basic_string<char16_t>>>*>>((uint64_t)v78, (uint64_t)v50, v50, *v79, (_QWORD *)*v79, v85.i64[0], v85.i64[0]);
        v85.i64[0] = v69;
        v70 = (__int128 ***)v79[1];
        v71 = (std::basic_string<char16_t> *)v85.i64[1];
        v88 = (std::basic_string<char16_t>::__raw *)v85.i64[1];
        v89 = (std::basic_string<char16_t> *)v85.i64[1];
        *(_QWORD *)&v91[0] = v78;
        *((_QWORD *)&v91[0] + 1) = &v88;
        *(_QWORD *)&v91[1] = &v89;
        if (v50 != v70)
        {
          do
          {
            v71->__r_.__value_.__r.__words[0] = 0;
            v71->__r_.__value_.__l.__size_ = 0;
            v71->__r_.__value_.__r.__words[2] = 0;
            *(_OWORD *)&v71->__r_.__value_.__l.__data_ = *(_OWORD *)v50;
            v71->__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)v50[2];
            *v50 = 0;
            v50[1] = 0;
            v50[2] = 0;
            ++v71;
            v50 += 3;
          }
          while (v50 != v70);
          v89 = v71;
        }
        BYTE8(v91[1]) = 1;
        std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::vector<std::basic_string<char16_t>>>>,std::vector<std::vector<std::basic_string<char16_t>>>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v91);
        v72 = *(int64x2_t *)v79;
        v73 = v86;
        *v79 = v85.i64[0];
        v79[1] = (uint64_t)v71;
        v85 = v72;
        v74 = v79[2];
        v79[2] = v73;
        v86 = v74;
        v84 = (std::basic_string<char16_t> *)v72.i64[0];
        std::__split_buffer<std::vector<std::vector<std::basic_string<char16_t>>>>::~__split_buffer((uint64_t)&v84);
        goto LABEL_78;
      }
      v75 = ((uint64_t)v48 - *v79) / 24;
      if ((uint64_t)(0xAAAAAAAAAAAAAAABLL * (((char *)v48 - (char *)v50) >> 3)) >= v46)
      {
        v54 = &v14[3 * v46];
        v55 = (std::basic_string<char16_t> *)v79[1];
      }
      else
      {
        *(_QWORD *)&v91[0] = v79[1];
        v89 = v48;
        v54 = &v14[((char *)v48 - (char *)v50) >> 3];
        v84 = (std::basic_string<char16_t> *)v78;
        v85.i64[0] = (uint64_t)&v89;
        v85.i64[1] = (uint64_t)v91;
        LOBYTE(v86) = 0;
        v55 = v48;
        if (v54 != v13)
        {
          v56 = &v14[((char *)v48 - (char *)v50) >> 3];
          do
          {
            v55->__r_.__value_.__r.__words[0] = 0;
            v55->__r_.__value_.__l.__size_ = 0;
            v55->__r_.__value_.__r.__words[2] = 0;
            std::vector<std::vector<std::basic_string<char16_t>>>::__init_with_size[abi:ne180100]<std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*>(v55, *v56, v56[1], 0xAAAAAAAAAAAAAAABLL * (v56[1] - *v56));
            v55 = (std::basic_string<char16_t> *)(*(_QWORD *)&v91[0] + 24);
            *(_QWORD *)&v91[0] += 24;
            v56 += 3;
          }
          while (v56 != v13);
        }
        LOBYTE(v86) = 1;
        std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::vector<std::basic_string<char16_t>>>>,std::vector<std::vector<std::basic_string<char16_t>>>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)&v84);
        v79[1] = (uint64_t)v55;
        if ((char *)v48 - (char *)v50 < 1)
          goto LABEL_78;
      }
      v57 = &v55[-v46];
      v58 = (std::basic_string<char16_t>::__raw *)v55;
      while (v57 < v48)
      {
        v58->__words[0] = 0;
        v58->__words[1] = 0;
        v58->__words[2] = 0;
        *(_OWORD *)v58->__words = *(_OWORD *)&v57->__r_.__value_.__l.__data_;
        v58->__words[2] = v57->__r_.__value_.__r.__words[2];
        v57->__r_.__value_.__r.__words[0] = 0;
        v57->__r_.__value_.__l.__size_ = 0;
        v57->__r_.__value_.__r.__words[2] = 0;
        ++v58;
        ++v57;
      }
      v59 = (std::basic_string<char16_t> *)&v50[3 * v46];
      v79[1] = (uint64_t)v58;
      if (v55 != v59)
      {
        v60 = 0;
        v61 = 0xAAAAAAAAAAAAAAABLL * (((char *)v55 - (char *)v59) >> 3);
        v62 = v47 + 24 * v61 + 24 * v75;
        v63 = -24 * v61;
        do
        {
          v64 = v62 + v60;
          v65 = &v55[v60 / 0x18];
          std::vector<std::vector<std::basic_string<char16_t>>>::__vdeallocate((void ***)&v55[v60 / 0x18 - 1]);
          *(_OWORD *)&v65[-1].__r_.__value_.__l.__data_ = *(_OWORD *)(v62 + v60 - 24);
          v65[-1].__r_.__value_.__r.__words[2] = *(_QWORD *)(v62 + v60 - 8);
          *(_QWORD *)(v64 - 24) = 0;
          *(_QWORD *)(v64 - 16) = 0;
          *(_QWORD *)(v64 - 8) = 0;
          v60 -= 24;
        }
        while (v63 != v60);
      }
      for (; v14 != v54; v50 += 3)
      {
        if (v14 != v50)
          std::vector<std::vector<std::basic_string<char16_t>>>::__assign_with_size[abi:ne180100]<std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*>((uint64_t)v50, *v14, v14[1], 0xAAAAAAAAAAAAAAABLL * (v14[1] - *v14));
        v14 += 3;
      }
    }
LABEL_78:
    v84 = (std::basic_string<char16_t> *)&v81;
    std::vector<std::vector<std::vector<std::basic_string<char16_t>>>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v84);
    v84 = &v83;
    std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v84);
    v84 = &v90;
    std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v84);
    v8 = v80 + 1;
    v2 = v77;
  }
  while (v80 + 1 != v76);
}

void sub_1CB4DB388(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20,uint64_t a21,uint64_t a22,void **a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::vector<std::basic_string<char16_t>>>>,std::vector<std::vector<std::basic_string<char16_t>>>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)&a23);
  *(_QWORD *)(v31 + 8) = v30;
  std::vector<std::vector<std::vector<std::basic_string<char16_t>>>>::__destroy_vector::operator()[abi:ne180100](&a20);
  a23 = (void **)(v32 - 144);
  std::vector<std::vector<std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100](&a23);
  a23 = (void **)&a30;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&a23);
  _Unwind_Resume(a1);
}

std::basic_string<char16_t> *std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(std::basic_string<char16_t> *result, __int128 *a2, __int128 *a3, unint64_t a4)
{
  std::basic_string<char16_t> *v6;

  if (a4)
  {
    v6 = result;
    std::vector<std::basic_string<char16_t>>::__vallocate[abi:ne180100](result, a4);
    result = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t>*,std::basic_string<char16_t>*,std::basic_string<char16_t>*>((uint64_t)&v6->__r_.__value_.__r.__words[2], a2, a3, (std::basic_string<char16_t> *)v6->__r_.__value_.__l.__size_);
    v6->__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)result;
  }
  return result;
}

void sub_1CB4DB514(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

std::basic_string<char16_t> *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>,std::vector<std::basic_string<char16_t>> const*,std::vector<std::basic_string<char16_t>> const*,std::vector<std::basic_string<char16_t>>*>(uint64_t a1, __int128 **a2, __int128 **a3, std::basic_string<char16_t> *a4)
{
  std::basic_string<char16_t> *v4;
  __int128 **v6;
  _QWORD v8[3];
  char v9;
  std::basic_string<char16_t> *v10;
  std::basic_string<char16_t> *v11;

  v4 = a4;
  v10 = a4;
  v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  v9 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      v4->__r_.__value_.__r.__words[0] = 0;
      v4->__r_.__value_.__l.__size_ = 0;
      v4->__r_.__value_.__r.__words[2] = 0;
      std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(v4, *v6, v6[1], 0xAAAAAAAAAAAAAAABLL * (((char *)v6[1] - (char *)*v6) >> 3));
      v4 = ++v11;
      v6 += 3;
    }
    while (v6 != a3);
  }
  v9 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::basic_string<char16_t>>>,std::vector<std::basic_string<char16_t>>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v8);
  return v4;
}

void sub_1CB4DB5DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::basic_string<char16_t>>>,std::vector<std::basic_string<char16_t>>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void std::vector<std::vector<std::vector<std::basic_string<char16_t>>>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  void **v2;
  void **v4;
  void *v5;
  void **v6;

  v1 = *a1;
  v2 = (void **)**a1;
  if (v2)
  {
    v4 = (void **)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 3;
        v6 = v4;
        std::vector<std::vector<std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100](&v6);
      }
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

std::basic_string<char16_t> *std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::__wrap_iter<std::basic_string<char16_t> const*>,std::__wrap_iter<std::basic_string<char16_t> const*>>(std::basic_string<char16_t> *result, __int128 *a2, __int128 *a3, unint64_t a4)
{
  std::basic_string<char16_t> *v6;

  if (a4)
  {
    v6 = result;
    std::vector<std::basic_string<char16_t>>::__vallocate[abi:ne180100](result, a4);
    result = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v6->__r_.__value_.__r.__words[2], a2, a3, (std::basic_string<char16_t> *)v6->__r_.__value_.__l.__size_);
    v6->__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)result;
  }
  return result;
}

void sub_1CB4DB6D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

void std::vector<std::basic_string<char16_t>>::__assign_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(uint64_t a1, std::basic_string<char16_t> *__str, __int128 *a3, unint64_t a4)
{
  __int128 *v6;
  uint64_t v8;
  std::basic_string<char16_t> *v9;
  unint64_t v10;
  unint64_t v11;
  std::basic_string<char16_t> *v12;
  std::basic_string<char16_t> *v13;
  __int128 *v14;
  uint64_t v15;

  v6 = (__int128 *)__str;
  v8 = a1 + 16;
  v9 = *(std::basic_string<char16_t> **)a1;
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 3) < a4)
  {
    std::vector<std::basic_string<char16_t>>::__vdeallocate((uint64_t *)a1);
    if (a4 > 0xAAAAAAAAAAAAAAALL)
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    v10 = 0x5555555555555556 * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 3);
    if (v10 <= a4)
      v10 = a4;
    if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 3) >= 0x555555555555555)
      v11 = 0xAAAAAAAAAAAAAAALL;
    else
      v11 = v10;
    std::vector<std::basic_string<char16_t>>::__vallocate[abi:ne180100]((_QWORD *)a1, v11);
    v12 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t>*,std::basic_string<char16_t>*,std::basic_string<char16_t>*>(v8, v6, a3, *(std::basic_string<char16_t> **)(a1 + 8));
LABEL_15:
    *(_QWORD *)(a1 + 8) = v12;
    return;
  }
  v13 = *(std::basic_string<char16_t> **)(a1 + 8);
  if (0xAAAAAAAAAAAAAAABLL * (((char *)v13 - (char *)v9) >> 3) < a4)
  {
    v14 = (__int128 *)(&__str->__r_.__value_.__l.__data_ + (((char *)v13 - (char *)v9) >> 3));
    if (v13 != v9)
    {
      v15 = 8 * (((char *)v13 - (char *)v9) >> 3);
      do
      {
        std::basic_string<char16_t>::operator=(v9, (const std::basic_string<char16_t> *)v6);
        v6 = (__int128 *)((char *)v6 + 24);
        ++v9;
        v15 -= 24;
      }
      while (v15);
      v9 = *(std::basic_string<char16_t> **)(a1 + 8);
    }
    v12 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t>*,std::basic_string<char16_t>*,std::basic_string<char16_t>*>(v8, v14, a3, v9);
    goto LABEL_15;
  }
  if (__str != (std::basic_string<char16_t> *)a3)
  {
    do
    {
      std::basic_string<char16_t>::operator=(v9, (const std::basic_string<char16_t> *)v6);
      v6 = (__int128 *)((char *)v6 + 24);
      ++v9;
    }
    while (v6 != a3);
    v13 = *(std::basic_string<char16_t> **)(a1 + 8);
  }
  while (v13 != v9)
  {
    if (SHIBYTE(v13[-1].__r_.__value_.__r.__words[2]) < 0)
      operator delete(v13[-1].__r_.__value_.__l.__data_);
    --v13;
  }
  *(_QWORD *)(a1 + 8) = v9;
}

void sub_1CB4DB88C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(unint64_t a1)
{
  if (a1 >= 0xAAAAAAAAAAAAAABLL)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(24 * a1);
}

uint64_t std::__split_buffer<std::vector<std::basic_string<char16_t>>>::~__split_buffer(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;
  void **v4;
  void **v6;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    v4 = (void **)(i - 24);
    *(_QWORD *)(a1 + 16) = v4;
    v6 = v4;
    std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v6);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::basic_string<char16_t>>>,std::vector<std::basic_string<char16_t>>*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  void **v3;
  void **v4;
  void **v5;

  if (!*(_BYTE *)(a1 + 24))
  {
    v3 = **(void ****)(a1 + 16);
    v4 = **(void ****)(a1 + 8);
    while (v3 != v4)
    {
      v3 -= 3;
      v5 = v3;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v5);
    }
  }
  return a1;
}

void std::vector<std::basic_string<char16_t>>::__vdeallocate(uint64_t *a1)
{
  if (*a1)
  {
    std::vector<std::basic_string<char16_t>>::__clear[abi:ne180100](a1);
    operator delete((void *)*a1);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

std::basic_string<char16_t> *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t>*,std::basic_string<char16_t>*,std::basic_string<char16_t>*>(uint64_t a1, __int128 *a2, __int128 *a3, std::basic_string<char16_t> *this)
{
  std::basic_string<char16_t> *v4;
  __int128 *v6;
  __int128 v7;
  _QWORD v9[3];
  char v10;
  std::basic_string<char16_t> *v11;
  std::basic_string<char16_t> *v12;

  v4 = this;
  v11 = this;
  v12 = this;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  v10 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external(v4, *(const std::basic_string<char16_t>::value_type **)v6, *((_QWORD *)v6 + 1));
        v4 = v12;
      }
      else
      {
        v7 = *v6;
        v4->__r_.__value_.__r.__words[2] = *((_QWORD *)v6 + 2);
        *(_OWORD *)&v4->__r_.__value_.__l.__data_ = v7;
      }
      v6 = (__int128 *)((char *)v6 + 24);
      v12 = ++v4;
    }
    while (v6 != a3);
  }
  v10 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v9);
  return v4;
}

void sub_1CB4DBA78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

char *std::vector<std::basic_string<char16_t>>::__vallocate[abi:ne180100](_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >= 0xAAAAAAAAAAAAAABLL)
    std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[24 * v4];
  return result;
}

uint64_t std::__split_buffer<std::vector<std::vector<std::basic_string<char16_t>>>>::~__split_buffer(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;
  void **v4;
  void **v6;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    v4 = (void **)(i - 24);
    *(_QWORD *)(a1 + 16) = v4;
    v6 = v4;
    std::vector<std::vector<std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100](&v6);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

double std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::vector<std::vector<std::basic_string<char16_t>>>>,std::reverse_iterator<std::vector<std::vector<std::basic_string<char16_t>>>*>,std::reverse_iterator<std::vector<std::vector<std::basic_string<char16_t>>>*>,std::reverse_iterator<std::vector<std::vector<std::basic_string<char16_t>>>*>>(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  __int128 v8;
  double result;

  while (a3 != a5)
  {
    *(_QWORD *)(a7 - 24) = 0;
    *(_QWORD *)(a7 - 16) = 0;
    a7 -= 24;
    *(_QWORD *)(a7 + 16) = 0;
    v8 = *(_OWORD *)(a3 - 3);
    a3 -= 3;
    result = *(double *)&v8;
    *(_OWORD *)a7 = v8;
    *(_QWORD *)(a7 + 16) = a3[2];
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
  return result;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::vector<std::basic_string<char16_t>>>>,std::vector<std::vector<std::basic_string<char16_t>>>*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  void **v3;
  void **v4;
  void **v5;

  if (!*(_BYTE *)(a1 + 24))
  {
    v3 = **(void ****)(a1 + 16);
    v4 = **(void ****)(a1 + 8);
    while (v3 != v4)
    {
      v3 -= 3;
      v5 = v3;
      std::vector<std::vector<std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100](&v5);
    }
  }
  return a1;
}

std::basic_string<char16_t> *std::vector<std::vector<std::basic_string<char16_t>>>::__init_with_size[abi:ne180100]<std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*>(std::basic_string<char16_t> *result, __int128 **a2, __int128 **a3, unint64_t a4)
{
  std::basic_string<char16_t> *v6;

  if (a4)
  {
    v6 = result;
    std::vector<std::basic_string<char16_t>>::__vallocate[abi:ne180100](result, a4);
    result = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>,std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*>((uint64_t)&v6->__r_.__value_.__r.__words[2], a2, a3, (std::basic_string<char16_t> *)v6->__r_.__value_.__l.__size_);
    v6->__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)result;
  }
  return result;
}

void sub_1CB4DBC2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  std::vector<std::vector<std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

std::basic_string<char16_t> *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>,std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*>(uint64_t a1, __int128 **a2, __int128 **a3, std::basic_string<char16_t> *a4)
{
  std::basic_string<char16_t> *v4;
  __int128 **v6;
  _QWORD v8[3];
  char v9;
  std::basic_string<char16_t> *v10;
  std::basic_string<char16_t> *v11;

  v4 = a4;
  v10 = a4;
  v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  v9 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      v4->__r_.__value_.__r.__words[0] = 0;
      v4->__r_.__value_.__l.__size_ = 0;
      v4->__r_.__value_.__r.__words[2] = 0;
      std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(v4, *v6, v6[1], 0xAAAAAAAAAAAAAAABLL * (((char *)v6[1] - (char *)*v6) >> 3));
      v4 = ++v11;
      v6 += 3;
    }
    while (v6 != a3);
  }
  v9 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::basic_string<char16_t>>>,std::vector<std::basic_string<char16_t>>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v8);
  return v4;
}

void sub_1CB4DBCF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::basic_string<char16_t>>>,std::vector<std::basic_string<char16_t>>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void std::vector<std::vector<std::basic_string<char16_t>>>::__assign_with_size[abi:ne180100]<std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*>(uint64_t a1, __int128 **a2, __int128 **a3, unint64_t a4)
{
  uint64_t v8;
  void **v9;
  unint64_t v10;
  unint64_t v11;
  std::basic_string<char16_t> *v12;
  __int128 **v13;
  uint64_t v14;
  void **v15;
  void **v16;

  v8 = a1 + 16;
  v9 = *(void ***)a1;
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 3) < a4)
  {
    std::vector<std::vector<std::basic_string<char16_t>>>::__vdeallocate((void ***)a1);
    if (a4 > 0xAAAAAAAAAAAAAAALL)
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    v10 = 0x5555555555555556 * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 3);
    if (v10 <= a4)
      v10 = a4;
    if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 3) >= 0x555555555555555)
      v11 = 0xAAAAAAAAAAAAAAALL;
    else
      v11 = v10;
    std::vector<std::basic_string<char16_t>>::__vallocate[abi:ne180100]((_QWORD *)a1, v11);
    v12 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>,std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*>(v8, a2, a3, *(std::basic_string<char16_t> **)(a1 + 8));
    goto LABEL_11;
  }
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 8) - (_QWORD)v9) >> 3) < a4)
  {
    v13 = &a2[(uint64_t)(*(_QWORD *)(a1 + 8) - (_QWORD)v9) >> 3];
    std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::vector<std::basic_string<char16_t>> *,std::vector<std::basic_string<char16_t>> *,std::vector<std::basic_string<char16_t>> *>((uint64_t)a2, (uint64_t)v13, (uint64_t)v9);
    v12 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>,std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*>(v8, v13, a3, *(std::basic_string<char16_t> **)(a1 + 8));
LABEL_11:
    *(_QWORD *)(a1 + 8) = v12;
    return;
  }
  v14 = std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::vector<std::basic_string<char16_t>> *,std::vector<std::basic_string<char16_t>> *,std::vector<std::basic_string<char16_t>> *>((uint64_t)a2, (uint64_t)a3, (uint64_t)v9);
  v15 = *(void ***)(a1 + 8);
  while (v15 != (void **)v14)
  {
    v15 -= 3;
    v16 = v15;
    std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v16);
  }
  *(_QWORD *)(a1 + 8) = v14;
}

void sub_1CB4DBE6C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_1CB4DBE74(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::vector<std::basic_string<char16_t>> *,std::vector<std::basic_string<char16_t>> *,std::vector<std::basic_string<char16_t>> *>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  if (a1 != a2)
  {
    v5 = a1;
    do
    {
      if (v5 != a3)
        std::vector<std::basic_string<char16_t>>::__assign_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(a3, *(std::basic_string<char16_t> **)v5, *(__int128 **)(v5 + 8), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(v5 + 8) - *(_QWORD *)v5) >> 3));
      v5 += 24;
      a3 += 24;
    }
    while (v5 != a2);
  }
  return a3;
}

void std::vector<std::vector<std::basic_string<char16_t>>>::__vdeallocate(void ***a1)
{
  void **v1;
  void **v3;
  void **v4;
  void **v5;

  v1 = *a1;
  if (*a1)
  {
    v3 = a1[1];
    v4 = *a1;
    if (v3 != v1)
    {
      do
      {
        v3 -= 3;
        v5 = v3;
        std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v5);
      }
      while (v3 != v1);
      v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

BOOL morphun::grammar::synthesis::FiGrammarSynthesizer::hasBackVowels(uint64_t a1)
{
  unsigned __int8 v2;
  _QWORD *v3;
  unsigned __int8 v4;
  void *p_p;
  int v6;
  _BOOL8 v7;
  _QWORD *v9;
  icu4cxx::Normalizer2 *v10;
  morphun::exception::NullPointerException *exception;
  void *__p;
  uint64_t v13;
  unsigned __int8 v14;

  if ((v2 & 1) == 0
  {
    v9 = (_QWORD *)operator new();
    icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v9);
    MEMORY[0x1D179D970](*v9);
    morphun::grammar::synthesis::BACK_VOWELS(void)::BACK_VOWELS_ = (uint64_t)v9;
  }
  v3 = (_QWORD *)morphun::grammar::synthesis::BACK_VOWELS(void)::BACK_VOWELS_;
  if (!morphun::grammar::synthesis::BACK_VOWELS(void)::BACK_VOWELS_)
    goto LABEL_19;
  {
    v10 = (icu4cxx::Normalizer2 *)operator new();
    icu4cxx::Normalizer2::getNFKCInstance(v10);
    morphun::grammar::synthesis::NFKC(void)::NFKC_ = (uint64_t)v10;
  }
  if (!morphun::grammar::synthesis::NFKC(void)::NFKC_)
  {
LABEL_19:
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  morphun::dictionary::PhraseProperties::normalize(a1, (uint64_t)&__p);
  if ((v14 & 0x80u) == 0)
    p_p = &__p;
  else
    p_p = __p;
  if ((v14 & 0x80u) == 0)
    v6 = v14;
  else
    v6 = v13;
  v7 = morphun::util::UnicodeSetUtils::containsSome(v3, (uint64_t)p_p, v6);
  if ((char)v14 < 0)
    operator delete(__p);
  return v7;
}

void sub_1CB4DC0E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  MEMORY[0x1D179D2EC](v15, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t icu4cxx::Normalizer2::getNFKCInstance(icu4cxx::Normalizer2 *this)
{
  uint64_t result;

  result = unorm2_getNFKCInstance();
  *(_QWORD *)this = result;
  *((_BYTE *)this + 8) = 0;
  return result;
}

void sub_1CB4DC1E4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::FiGrammarSynthesizer::getCount(unsigned __int16 *a1)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  uint64_t *v9;
  morphun::grammar::synthesis::GrammemeConstants *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t i;
  std::basic_string<char16_t> v17;
  int v18;
  std::basic_string<char16_t> v19;
  int v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  if ((v2 & 1) == 0
  {
    v11 = (morphun::grammar::synthesis::GrammemeConstants *)operator new();
    v12 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v11);
    if (*(char *)(v12 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v17, *(const std::basic_string<char16_t>::value_type **)v12, *(_QWORD *)(v12 + 8));
    }
    else
    {
      v13 = *(_OWORD *)v12;
      v17.__r_.__value_.__r.__words[2] = *(_QWORD *)(v12 + 16);
      *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v13;
    }
    v18 = 1;
    v14 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v12);
    if (*(char *)(v14 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v19, *(const std::basic_string<char16_t>::value_type **)v14, *(_QWORD *)(v14 + 8));
    }
    else
    {
      v15 = *(_OWORD *)v14;
      v19.__r_.__value_.__r.__words[2] = *(_QWORD *)(v14 + 16);
      *(_OWORD *)&v19.__r_.__value_.__l.__data_ = v15;
    }
    v20 = 2;
    std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FiGrammarSynthesizer::Count>::map[abi:ne180100]((uint64_t **)v11, (__int128 *)&v17, 2);
    for (i = 0; i != -8; i -= 4)
    {
      if (SHIBYTE(v19.__r_.__value_.__r.__words[i + 2]) < 0)
        operator delete(*(void **)((char *)&v19.__r_.__value_.__l.__data_ + i * 8));
    }
    morphun::grammar::synthesis::FiGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap = (uint64_t)v11;
  }
  if (!a1)
    return 0;
  v3 = morphun::grammar::synthesis::FiGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FiGrammarSynthesizer::Count>>(morphun::grammar::synthesis::FiGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap);
  v6 = *(_QWORD *)(v3 + 8);
  v4 = v3 + 8;
  v5 = v6;
  if (!v6)
    goto LABEL_10;
  v7 = v4;
  do
  {
    v8 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v5 + 32), a1);
    v9 = (uint64_t *)(v5 + 8);
    if (!v8)
    {
      v9 = (uint64_t *)v5;
      v7 = v5;
    }
    v5 = *v9;
  }
  while (*v9);
  if (v7 == v4 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v7 + 32)))
LABEL_10:
    v7 = v4;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FiGrammarSynthesizer::Count>>(morphun::grammar::synthesis::FiGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v7)
    return 0;
  else
    return *(unsigned int *)(v7 + 56);
}

void sub_1CB4DC3D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  uint64_t v14;

  if (a14 < 0)
    operator delete(__p);
  MEMORY[0x1D179D2EC](v14, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FiGrammarSynthesizer::Count>::map[abi:ne180100](uint64_t **a1, __int128 *a2, uint64_t a3)
{
  uint64_t *v4;
  __int128 *v5;
  __int128 *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  BOOL v11;
  char **v12;
  char **v13;
  char *v14;
  unsigned __int16 *v15;
  char *v16;
  std::basic_string<char16_t> *v17;
  __int128 v18;
  uint64_t *v19;

  a1[1] = 0;
  v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    v5 = a2;
    v6 = &a2[2 * a3];
    while (1)
    {
      v7 = a1[1];
      v8 = v4;
      if (*a1 != v4)
      {
        v9 = a1[1];
        v10 = v4;
        if (v7)
        {
          do
          {
            v8 = v9;
            v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            v8 = (uint64_t *)v10[2];
            v11 = *v8 == (_QWORD)v10;
            v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break;
      }
      v12 = (char **)v4;
      v13 = (char **)v4;
      if (!v7)
        goto LABEL_19;
      v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        v12 = (char **)v8;
LABEL_19:
        v16 = (char *)operator new(0x40uLL);
        v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((_QWORD *)v5 + 1));
        }
        else
        {
          v18 = *v5;
          *((_QWORD *)v16 + 6) = *((_QWORD *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(_QWORD *)v16 = 0;
        *((_QWORD *)v16 + 1) = 0;
        *((_QWORD *)v16 + 2) = v12;
        *v13 = v16;
        v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6)
        return a1;
    }
    v12 = (char **)v4;
    v13 = (char **)v4;
    if (v7)
    {
      v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          v12 = (char **)v14;
          v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break;
          v14 = *v12;
          v13 = v12;
          if (!*v12)
            goto LABEL_19;
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5))
          goto LABEL_25;
        v13 = v12 + 1;
        v14 = v12[1];
        if (!v14)
          goto LABEL_19;
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1CB4DC5F8(_Unwind_Exception *a1)
{
  void *v1;
  char **v2;

  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FiGrammarSynthesizer::Count>>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4DC664(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::FiGrammarSynthesizer::toString(int a1@<W0>, std::basic_string<char16_t> *a2@<X8>)
{
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  BOOL v11;
  uint64_t *v12;
  __int128 v13;
  morphun::grammar::synthesis::GrammemeConstants *v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t i;
  int v20;
  std::basic_string<char16_t> v21;
  int v22;
  std::basic_string<char16_t> v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  if ((v4 & 1) == 0
  {
    v14 = (morphun::grammar::synthesis::GrammemeConstants *)operator new();
    v15 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v14);
    v20 = 1;
    if (*(char *)(v15 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v21, *(const std::basic_string<char16_t>::value_type **)v15, *(_QWORD *)(v15 + 8));
    }
    else
    {
      v16 = *(_OWORD *)v15;
      v21.__r_.__value_.__r.__words[2] = *(_QWORD *)(v15 + 16);
      *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v16;
    }
    v17 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v15);
    v22 = 2;
    if (*(char *)(v17 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v23, *(const std::basic_string<char16_t>::value_type **)v17, *(_QWORD *)(v17 + 8));
    }
    else
    {
      v18 = *(_OWORD *)v17;
      v23.__r_.__value_.__r.__words[2] = *(_QWORD *)(v17 + 16);
      *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v18;
    }
    std::map<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>::map[abi:ne180100]((uint64_t **)v14, &v20, 2);
    for (i = 0; i != -8; i -= 4)
    {
      if (SHIBYTE(v23.__r_.__value_.__r.__words[i + 2]) < 0)
        operator delete(*(void **)((char *)&v23.__r_.__value_.__l.__data_ + i * 8));
    }
    morphun::grammar::synthesis::FiGrammarSynthesizer::toString(morphun::grammar::synthesis::FiGrammarSynthesizer::Count)::valueMap = (uint64_t)v14;
  }
  v5 = npc<std::map<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>>(morphun::grammar::synthesis::FiGrammarSynthesizer::toString(morphun::grammar::synthesis::FiGrammarSynthesizer::Count)::valueMap);
  v8 = *(_QWORD *)(v5 + 8);
  v6 = v5 + 8;
  v7 = v8;
  if (!v8)
    goto LABEL_12;
  v9 = v6;
  do
  {
    v10 = *(_DWORD *)(v7 + 32);
    v11 = v10 < a1;
    if (v10 >= a1)
      v12 = (uint64_t *)v7;
    else
      v12 = (uint64_t *)(v7 + 8);
    if (!v11)
      v9 = v7;
    v7 = *v12;
  }
  while (*v12);
  if (v9 == v6 || *(_DWORD *)(v9 + 32) > a1)
LABEL_12:
    v9 = v6;
  if (v9 == npc<std::map<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>>(morphun::grammar::synthesis::FiGrammarSynthesizer::toString(morphun::grammar::synthesis::FiGrammarSynthesizer::Count)::valueMap)
           + 8)
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(a2, "u");
  }
  else if (*(char *)(v9 + 63) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a2, *(const std::basic_string<char16_t>::value_type **)(v9 + 40), *(_QWORD *)(v9 + 48));
  }
  else
  {
    v13 = *(_OWORD *)(v9 + 40);
    a2->__r_.__value_.__r.__words[2] = *(_QWORD *)(v9 + 56);
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = v13;
  }
}

{
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  BOOL v11;
  uint64_t *v12;
  __int128 v13;
  morphun::grammar::synthesis::GrammemeConstants *v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  int v38[2];
  std::basic_string<char16_t> v39;
  int v40;
  std::basic_string<char16_t> v41;
  int v42;
  std::basic_string<char16_t> v43;
  int v44;
  std::basic_string<char16_t> v45;
  int v46;
  std::basic_string<char16_t> v47;
  int v48;
  std::basic_string<char16_t> v49;
  int v50;
  std::basic_string<char16_t> v51;
  int v52;
  std::basic_string<char16_t> v53;
  int v54;
  std::basic_string<char16_t> v55;
  int v56;
  std::basic_string<char16_t> v57;
  int v58;
  std::basic_string<char16_t> v59;
  uint64_t v60;

  v60 = *MEMORY[0x1E0C80C00];
  if ((v4 & 1) == 0
  {
    v14 = (morphun::grammar::synthesis::GrammemeConstants *)operator new();
    v15 = morphun::grammar::synthesis::GrammemeConstants::CASE_NOMINATIVE(v14);
    v38[0] = 1;
    if (*(char *)(v15 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v39, *(const std::basic_string<char16_t>::value_type **)v15, *(_QWORD *)(v15 + 8));
    }
    else
    {
      v16 = *(_OWORD *)v15;
      v39.__r_.__value_.__r.__words[2] = *(_QWORD *)(v15 + 16);
      *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v16;
    }
    v17 = morphun::grammar::synthesis::GrammemeConstants::CASE_GENITIVE((morphun::grammar::synthesis::GrammemeConstants *)v15);
    v40 = 2;
    if (*(char *)(v17 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v41, *(const std::basic_string<char16_t>::value_type **)v17, *(_QWORD *)(v17 + 8));
    }
    else
    {
      v18 = *(_OWORD *)v17;
      v41.__r_.__value_.__r.__words[2] = *(_QWORD *)(v17 + 16);
      *(_OWORD *)&v41.__r_.__value_.__l.__data_ = v18;
    }
    v19 = morphun::grammar::synthesis::GrammemeConstants::CASE_PARTITIVE((morphun::grammar::synthesis::GrammemeConstants *)v17);
    v42 = 3;
    if (*(char *)(v19 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v43, *(const std::basic_string<char16_t>::value_type **)v19, *(_QWORD *)(v19 + 8));
    }
    else
    {
      v20 = *(_OWORD *)v19;
      v43.__r_.__value_.__r.__words[2] = *(_QWORD *)(v19 + 16);
      *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v20;
    }
    v21 = morphun::grammar::synthesis::GrammemeConstants::CASE_INESSIVE((morphun::grammar::synthesis::GrammemeConstants *)v19);
    v44 = 4;
    if (*(char *)(v21 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v45, *(const std::basic_string<char16_t>::value_type **)v21, *(_QWORD *)(v21 + 8));
    }
    else
    {
      v22 = *(_OWORD *)v21;
      v45.__r_.__value_.__r.__words[2] = *(_QWORD *)(v21 + 16);
      *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v22;
    }
    v23 = morphun::grammar::synthesis::GrammemeConstants::CASE_ELATIVE((morphun::grammar::synthesis::GrammemeConstants *)v21);
    v46 = 5;
    if (*(char *)(v23 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v47, *(const std::basic_string<char16_t>::value_type **)v23, *(_QWORD *)(v23 + 8));
    }
    else
    {
      v24 = *(_OWORD *)v23;
      v47.__r_.__value_.__r.__words[2] = *(_QWORD *)(v23 + 16);
      *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v24;
    }
    v25 = morphun::grammar::synthesis::GrammemeConstants::CASE_ILLATIVE((morphun::grammar::synthesis::GrammemeConstants *)v23);
    v48 = 6;
    if (*(char *)(v25 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v49, *(const std::basic_string<char16_t>::value_type **)v25, *(_QWORD *)(v25 + 8));
    }
    else
    {
      v26 = *(_OWORD *)v25;
      v49.__r_.__value_.__r.__words[2] = *(_QWORD *)(v25 + 16);
      *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v26;
    }
    v27 = morphun::grammar::synthesis::GrammemeConstants::CASE_ADESSIVE((morphun::grammar::synthesis::GrammemeConstants *)v25);
    v50 = 7;
    if (*(char *)(v27 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v51, *(const std::basic_string<char16_t>::value_type **)v27, *(_QWORD *)(v27 + 8));
    }
    else
    {
      v28 = *(_OWORD *)v27;
      v51.__r_.__value_.__r.__words[2] = *(_QWORD *)(v27 + 16);
      *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v28;
    }
    v29 = morphun::grammar::synthesis::GrammemeConstants::CASE_ABLATIVE((morphun::grammar::synthesis::GrammemeConstants *)v27);
    v52 = 8;
    if (*(char *)(v29 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v53, *(const std::basic_string<char16_t>::value_type **)v29, *(_QWORD *)(v29 + 8));
    }
    else
    {
      v30 = *(_OWORD *)v29;
      v53.__r_.__value_.__r.__words[2] = *(_QWORD *)(v29 + 16);
      *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v30;
    }
    v31 = morphun::grammar::synthesis::GrammemeConstants::CASE_ALLATIVE((morphun::grammar::synthesis::GrammemeConstants *)v29);
    v54 = 9;
    if (*(char *)(v31 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v55, *(const std::basic_string<char16_t>::value_type **)v31, *(_QWORD *)(v31 + 8));
    }
    else
    {
      v32 = *(_OWORD *)v31;
      v55.__r_.__value_.__r.__words[2] = *(_QWORD *)(v31 + 16);
      *(_OWORD *)&v55.__r_.__value_.__l.__data_ = v32;
    }
    v33 = morphun::grammar::synthesis::GrammemeConstants::CASE_ESSIVE((morphun::grammar::synthesis::GrammemeConstants *)v31);
    v56 = 10;
    if (*(char *)(v33 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v57, *(const std::basic_string<char16_t>::value_type **)v33, *(_QWORD *)(v33 + 8));
    }
    else
    {
      v34 = *(_OWORD *)v33;
      v57.__r_.__value_.__r.__words[2] = *(_QWORD *)(v33 + 16);
      *(_OWORD *)&v57.__r_.__value_.__l.__data_ = v34;
    }
    v35 = morphun::grammar::synthesis::GrammemeConstants::CASE_TRANSLATIVE((morphun::grammar::synthesis::GrammemeConstants *)v33);
    v58 = 11;
    if (*(char *)(v35 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v59, *(const std::basic_string<char16_t>::value_type **)v35, *(_QWORD *)(v35 + 8));
    }
    else
    {
      v36 = *(_OWORD *)v35;
      v59.__r_.__value_.__r.__words[2] = *(_QWORD *)(v35 + 16);
      *(_OWORD *)&v59.__r_.__value_.__l.__data_ = v36;
    }
    std::map<morphun::grammar::synthesis::FiGrammarSynthesizer::Case,std::basic_string<char16_t>>::map[abi:ne180100]((uint64_t **)v14, v38, 11);
    v37 = 88;
    do
    {
      if (SHIBYTE(v38[v37 - 1]) < 0)
        operator delete(*(void **)&v38[v37 - 6]);
      v37 -= 8;
    }
    while (v37 * 4);
    morphun::grammar::synthesis::FiGrammarSynthesizer::toString(morphun::grammar::synthesis::FiGrammarSynthesizer::Case)::valueMap = (uint64_t)v14;
  }
  v5 = npc<std::map<morphun::grammar::synthesis::FiGrammarSynthesizer::Case,std::basic_string<char16_t>>>(morphun::grammar::synthesis::FiGrammarSynthesizer::toString(morphun::grammar::synthesis::FiGrammarSynthesizer::Case)::valueMap);
  v8 = *(_QWORD *)(v5 + 8);
  v6 = v5 + 8;
  v7 = v8;
  if (!v8)
    goto LABEL_12;
  v9 = v6;
  do
  {
    v10 = *(_DWORD *)(v7 + 32);
    v11 = v10 < a1;
    if (v10 >= a1)
      v12 = (uint64_t *)v7;
    else
      v12 = (uint64_t *)(v7 + 8);
    if (!v11)
      v9 = v7;
    v7 = *v12;
  }
  while (*v12);
  if (v9 == v6 || *(_DWORD *)(v9 + 32) > a1)
LABEL_12:
    v9 = v6;
  if (v9 == npc<std::map<morphun::grammar::synthesis::FiGrammarSynthesizer::Case,std::basic_string<char16_t>>>(morphun::grammar::synthesis::FiGrammarSynthesizer::toString(morphun::grammar::synthesis::FiGrammarSynthesizer::Case)::valueMap)
           + 8)
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(a2, "u");
  }
  else if (*(char *)(v9 + 63) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a2, *(const std::basic_string<char16_t>::value_type **)(v9 + 40), *(_QWORD *)(v9 + 48));
  }
  else
  {
    v13 = *(_OWORD *)(v9 + 40);
    a2->__r_.__value_.__r.__words[2] = *(_QWORD *)(v9 + 56);
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = v13;
  }
}

void sub_1CB4DC87C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v19 = 0;
  while (1)
  {
    if (*(char *)(v17 + v19 + 63) < 0)
      operator delete(*(void **)(v17 + v19 + 40));
    v19 -= 32;
    if (v19 == -64)
    {
      MEMORY[0x1D179D2EC](v16, 0x1020C4062D53EE8);
      _Unwind_Resume(a1);
    }
  }
}

uint64_t **std::map<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>::map[abi:ne180100](uint64_t **a1, int *a2, uint64_t a3)
{
  uint64_t *v4;
  int *v5;
  uint64_t *v6;
  int *v7;
  uint64_t **v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  BOOL v12;
  int v13;
  char **v14;
  char **v15;
  char *v16;
  std::basic_string<char16_t> *v17;
  __int128 v18;
  int v19;
  uint64_t *v20;

  a1[1] = 0;
  v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    v5 = a2;
    v6 = 0;
    v7 = &a2[8 * a3];
    v8 = a1 + 1;
    while (1)
    {
      v9 = v4;
      if (v8 == (uint64_t **)v4)
        goto LABEL_9;
      v10 = v6;
      v11 = v4;
      if (v6)
      {
        do
        {
          v9 = v10;
          v10 = (uint64_t *)v10[1];
        }
        while (v10);
      }
      else
      {
        do
        {
          v9 = (uint64_t *)v11[2];
          v12 = *v9 == (_QWORD)v11;
          v11 = v9;
        }
        while (v12);
      }
      v13 = *v5;
      if (*((_DWORD *)v9 + 8) < *v5)
      {
LABEL_9:
        v14 = (char **)(v6 ? v9 : v4);
        v15 = (char **)(v6 ? v9 + 1 : v4);
      }
      else
      {
        v14 = (char **)v4;
        v15 = (char **)v4;
        if (v6)
        {
          v15 = (char **)v4;
          while (1)
          {
            while (1)
            {
              v14 = (char **)v6;
              v19 = *((_DWORD *)v6 + 8);
              if (v13 >= v19)
                break;
              v6 = (uint64_t *)*v14;
              v15 = v14;
              if (!*v14)
                goto LABEL_16;
            }
            if (v19 >= v13)
              break;
            v15 = v14 + 1;
            v6 = (uint64_t *)v14[1];
            if (!v6)
              goto LABEL_16;
          }
        }
      }
      if (!*v15)
      {
LABEL_16:
        v16 = (char *)operator new(0x40uLL);
        *((_DWORD *)v16 + 8) = *v5;
        v17 = (std::basic_string<char16_t> *)(v16 + 40);
        if (*((char *)v5 + 31) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *((const std::basic_string<char16_t>::value_type **)v5 + 1), *((_QWORD *)v5 + 2));
        }
        else
        {
          v18 = *(_OWORD *)(v5 + 2);
          *((_QWORD *)v16 + 7) = *((_QWORD *)v5 + 3);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *(_QWORD *)v16 = 0;
        *((_QWORD *)v16 + 1) = 0;
        *((_QWORD *)v16 + 2) = v14;
        *v15 = v16;
        v20 = (uint64_t *)**a1;
        if (v20)
        {
          *a1 = v20;
          v16 = *v15;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
      v5 += 8;
      if (v5 == v7)
        break;
      v8 = (uint64_t **)*a1;
      v6 = a1[1];
    }
  }
  return a1;
}

void sub_1CB4DCA94(_Unwind_Exception *a1)
{
  void *v1;
  char **v2;

  operator delete(v1);
  std::__tree<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::__map_value_compare<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::less<morphun::grammar::synthesis::FiGrammarSynthesizer::Count>,true>,std::allocator<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4DCAFC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::__map_value_compare<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::less<morphun::grammar::synthesis::FiGrammarSynthesizer::Count>,true>,std::allocator<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>>>::destroy(char *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::__map_value_compare<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::less<morphun::grammar::synthesis::FiGrammarSynthesizer::Count>,true>,std::allocator<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>>>::destroy(*(_QWORD *)a1);
    std::__tree<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::__map_value_compare<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::less<morphun::grammar::synthesis::FiGrammarSynthesizer::Count>,true>,std::allocator<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>>>::destroy(*((_QWORD *)a1 + 1));
    if (a1[63] < 0)
      operator delete(*((void **)a1 + 5));
    operator delete(a1);
  }
}

uint64_t morphun::grammar::synthesis::FiGrammarSynthesizer::getCase(unsigned __int16 *a1)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  uint64_t *v9;
  morphun::grammar::synthesis::GrammemeConstants *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  std::basic_string<char16_t> v35;
  int v36;
  std::basic_string<char16_t> v37;
  int v38;
  std::basic_string<char16_t> v39;
  int v40;
  std::basic_string<char16_t> v41;
  int v42;
  std::basic_string<char16_t> v43;
  int v44;
  std::basic_string<char16_t> v45;
  int v46;
  std::basic_string<char16_t> v47;
  int v48;
  std::basic_string<char16_t> v49;
  int v50;
  std::basic_string<char16_t> v51;
  int v52;
  std::basic_string<char16_t> v53;
  int v54;
  std::basic_string<char16_t> v55;
  int v56;
  uint64_t v57;

  v57 = *MEMORY[0x1E0C80C00];
  if ((v2 & 1) == 0
  {
    v11 = (morphun::grammar::synthesis::GrammemeConstants *)operator new();
    v12 = morphun::grammar::synthesis::GrammemeConstants::CASE_NOMINATIVE(v11);
    if (*(char *)(v12 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v35, *(const std::basic_string<char16_t>::value_type **)v12, *(_QWORD *)(v12 + 8));
    }
    else
    {
      v13 = *(_OWORD *)v12;
      v35.__r_.__value_.__r.__words[2] = *(_QWORD *)(v12 + 16);
      *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v13;
    }
    v36 = 1;
    v14 = morphun::grammar::synthesis::GrammemeConstants::CASE_GENITIVE((morphun::grammar::synthesis::GrammemeConstants *)v12);
    if (*(char *)(v14 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v37, *(const std::basic_string<char16_t>::value_type **)v14, *(_QWORD *)(v14 + 8));
    }
    else
    {
      v15 = *(_OWORD *)v14;
      v37.__r_.__value_.__r.__words[2] = *(_QWORD *)(v14 + 16);
      *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v15;
    }
    v38 = 2;
    v16 = morphun::grammar::synthesis::GrammemeConstants::CASE_PARTITIVE((morphun::grammar::synthesis::GrammemeConstants *)v14);
    if (*(char *)(v16 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v39, *(const std::basic_string<char16_t>::value_type **)v16, *(_QWORD *)(v16 + 8));
    }
    else
    {
      v17 = *(_OWORD *)v16;
      v39.__r_.__value_.__r.__words[2] = *(_QWORD *)(v16 + 16);
      *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v17;
    }
    v40 = 3;
    v18 = morphun::grammar::synthesis::GrammemeConstants::CASE_INESSIVE((morphun::grammar::synthesis::GrammemeConstants *)v16);
    if (*(char *)(v18 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v41, *(const std::basic_string<char16_t>::value_type **)v18, *(_QWORD *)(v18 + 8));
    }
    else
    {
      v19 = *(_OWORD *)v18;
      v41.__r_.__value_.__r.__words[2] = *(_QWORD *)(v18 + 16);
      *(_OWORD *)&v41.__r_.__value_.__l.__data_ = v19;
    }
    v42 = 4;
    v20 = morphun::grammar::synthesis::GrammemeConstants::CASE_ELATIVE((morphun::grammar::synthesis::GrammemeConstants *)v18);
    if (*(char *)(v20 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v43, *(const std::basic_string<char16_t>::value_type **)v20, *(_QWORD *)(v20 + 8));
    }
    else
    {
      v21 = *(_OWORD *)v20;
      v43.__r_.__value_.__r.__words[2] = *(_QWORD *)(v20 + 16);
      *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v21;
    }
    v44 = 5;
    v22 = morphun::grammar::synthesis::GrammemeConstants::CASE_ILLATIVE((morphun::grammar::synthesis::GrammemeConstants *)v20);
    if (*(char *)(v22 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v45, *(const std::basic_string<char16_t>::value_type **)v22, *(_QWORD *)(v22 + 8));
    }
    else
    {
      v23 = *(_OWORD *)v22;
      v45.__r_.__value_.__r.__words[2] = *(_QWORD *)(v22 + 16);
      *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v23;
    }
    v46 = 6;
    v24 = morphun::grammar::synthesis::GrammemeConstants::CASE_ADESSIVE((morphun::grammar::synthesis::GrammemeConstants *)v22);
    if (*(char *)(v24 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v47, *(const std::basic_string<char16_t>::value_type **)v24, *(_QWORD *)(v24 + 8));
    }
    else
    {
      v25 = *(_OWORD *)v24;
      v47.__r_.__value_.__r.__words[2] = *(_QWORD *)(v24 + 16);
      *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v25;
    }
    v48 = 7;
    v26 = morphun::grammar::synthesis::GrammemeConstants::CASE_ABLATIVE((morphun::grammar::synthesis::GrammemeConstants *)v24);
    if (*(char *)(v26 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v49, *(const std::basic_string<char16_t>::value_type **)v26, *(_QWORD *)(v26 + 8));
    }
    else
    {
      v27 = *(_OWORD *)v26;
      v49.__r_.__value_.__r.__words[2] = *(_QWORD *)(v26 + 16);
      *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v27;
    }
    v50 = 8;
    v28 = morphun::grammar::synthesis::GrammemeConstants::CASE_ALLATIVE((morphun::grammar::synthesis::GrammemeConstants *)v26);
    if (*(char *)(v28 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v51, *(const std::basic_string<char16_t>::value_type **)v28, *(_QWORD *)(v28 + 8));
    }
    else
    {
      v29 = *(_OWORD *)v28;
      v51.__r_.__value_.__r.__words[2] = *(_QWORD *)(v28 + 16);
      *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v29;
    }
    v52 = 9;
    v30 = morphun::grammar::synthesis::GrammemeConstants::CASE_ESSIVE((morphun::grammar::synthesis::GrammemeConstants *)v28);
    if (*(char *)(v30 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v53, *(const std::basic_string<char16_t>::value_type **)v30, *(_QWORD *)(v30 + 8));
    }
    else
    {
      v31 = *(_OWORD *)v30;
      v53.__r_.__value_.__r.__words[2] = *(_QWORD *)(v30 + 16);
      *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v31;
    }
    v54 = 10;
    v32 = morphun::grammar::synthesis::GrammemeConstants::CASE_TRANSLATIVE((morphun::grammar::synthesis::GrammemeConstants *)v30);
    if (*(char *)(v32 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v55, *(const std::basic_string<char16_t>::value_type **)v32, *(_QWORD *)(v32 + 8));
    }
    else
    {
      v33 = *(_OWORD *)v32;
      v55.__r_.__value_.__r.__words[2] = *(_QWORD *)(v32 + 16);
      *(_OWORD *)&v55.__r_.__value_.__l.__data_ = v33;
    }
    v56 = 11;
    std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FiGrammarSynthesizer::Case>::map[abi:ne180100]((uint64_t **)v11, (__int128 *)&v35, 11);
    v34 = 352;
    do
    {
      if (*((char *)&v35.__r_.__value_.__l + v34 - 9) < 0)
        operator delete(*(void **)((char *)&v35.__r_.__value_.__l + v34 - 32));
      v34 -= 32;
    }
    while (v34);
    morphun::grammar::synthesis::FiGrammarSynthesizer::getCase(std::basic_string<char16_t> const*)::valueMap = (uint64_t)v11;
  }
  if (!a1)
    return 0;
  v3 = morphun::grammar::synthesis::FiGrammarSynthesizer::getCase(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FiGrammarSynthesizer::Case>>(morphun::grammar::synthesis::FiGrammarSynthesizer::getCase(std::basic_string<char16_t> const*)::valueMap);
  v6 = *(_QWORD *)(v3 + 8);
  v4 = v3 + 8;
  v5 = v6;
  if (!v6)
    goto LABEL_10;
  v7 = v4;
  do
  {
    v8 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v5 + 32), a1);
    v9 = (uint64_t *)(v5 + 8);
    if (!v8)
    {
      v9 = (uint64_t *)v5;
      v7 = v5;
    }
    v5 = *v9;
  }
  while (*v9);
  if (v7 == v4 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v7 + 32)))
LABEL_10:
    v7 = v4;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FiGrammarSynthesizer::Case>>(morphun::grammar::synthesis::FiGrammarSynthesizer::getCase(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v7)
    return 0;
  else
    return *(unsigned int *)(v7 + 56);
}

void sub_1CB4DCF4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t *v10;

  while (1)
  {
    if (*((char *)v10 - 9) < 0)
      operator delete((void *)*(v10 - 4));
    v10 -= 4;
    if (v10 == &a9)
    {
      MEMORY[0x1D179D2EC](v9, 0x1020C4062D53EE8);
      _Unwind_Resume(a1);
    }
  }
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FiGrammarSynthesizer::Case>::map[abi:ne180100](uint64_t **a1, __int128 *a2, uint64_t a3)
{
  uint64_t *v4;
  __int128 *v5;
  __int128 *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  BOOL v11;
  char **v12;
  char **v13;
  char *v14;
  unsigned __int16 *v15;
  char *v16;
  std::basic_string<char16_t> *v17;
  __int128 v18;
  uint64_t *v19;

  a1[1] = 0;
  v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    v5 = a2;
    v6 = &a2[2 * a3];
    while (1)
    {
      v7 = a1[1];
      v8 = v4;
      if (*a1 != v4)
      {
        v9 = a1[1];
        v10 = v4;
        if (v7)
        {
          do
          {
            v8 = v9;
            v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            v8 = (uint64_t *)v10[2];
            v11 = *v8 == (_QWORD)v10;
            v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break;
      }
      v12 = (char **)v4;
      v13 = (char **)v4;
      if (!v7)
        goto LABEL_19;
      v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        v12 = (char **)v8;
LABEL_19:
        v16 = (char *)operator new(0x40uLL);
        v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((_QWORD *)v5 + 1));
        }
        else
        {
          v18 = *v5;
          *((_QWORD *)v16 + 6) = *((_QWORD *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(_QWORD *)v16 = 0;
        *((_QWORD *)v16 + 1) = 0;
        *((_QWORD *)v16 + 2) = v12;
        *v13 = v16;
        v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6)
        return a1;
    }
    v12 = (char **)v4;
    v13 = (char **)v4;
    if (v7)
    {
      v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          v12 = (char **)v14;
          v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break;
          v14 = *v12;
          v13 = v12;
          if (!*v12)
            goto LABEL_19;
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5))
          goto LABEL_25;
        v13 = v12 + 1;
        v14 = v12[1];
        if (!v14)
          goto LABEL_19;
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1CB4DD1A0(_Unwind_Exception *a1)
{
  void *v1;
  char **v2;

  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FiGrammarSynthesizer::Case>>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4DD20C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1CB4DD66C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = 352;
  while (1)
  {
    if (*(char *)(v2 + v4 - 1) < 0)
      operator delete(*(void **)(v2 + v4 - 24));
    v4 -= 32;
    if (!v4)
    {
      MEMORY[0x1D179D2EC](v1, 0x1020C4062D53EE8);
      _Unwind_Resume(a1);
    }
  }
}

uint64_t **std::map<morphun::grammar::synthesis::FiGrammarSynthesizer::Case,std::basic_string<char16_t>>::map[abi:ne180100](uint64_t **a1, int *a2, uint64_t a3)
{
  uint64_t *v4;
  int *v5;
  uint64_t *v6;
  int *v7;
  uint64_t **v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  BOOL v12;
  int v13;
  char **v14;
  char **v15;
  char *v16;
  std::basic_string<char16_t> *v17;
  __int128 v18;
  int v19;
  uint64_t *v20;

  a1[1] = 0;
  v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    v5 = a2;
    v6 = 0;
    v7 = &a2[8 * a3];
    v8 = a1 + 1;
    while (1)
    {
      v9 = v4;
      if (v8 == (uint64_t **)v4)
        goto LABEL_9;
      v10 = v6;
      v11 = v4;
      if (v6)
      {
        do
        {
          v9 = v10;
          v10 = (uint64_t *)v10[1];
        }
        while (v10);
      }
      else
      {
        do
        {
          v9 = (uint64_t *)v11[2];
          v12 = *v9 == (_QWORD)v11;
          v11 = v9;
        }
        while (v12);
      }
      v13 = *v5;
      if (*((_DWORD *)v9 + 8) < *v5)
      {
LABEL_9:
        v14 = (char **)(v6 ? v9 : v4);
        v15 = (char **)(v6 ? v9 + 1 : v4);
      }
      else
      {
        v14 = (char **)v4;
        v15 = (char **)v4;
        if (v6)
        {
          v15 = (char **)v4;
          while (1)
          {
            while (1)
            {
              v14 = (char **)v6;
              v19 = *((_DWORD *)v6 + 8);
              if (v13 >= v19)
                break;
              v6 = (uint64_t *)*v14;
              v15 = v14;
              if (!*v14)
                goto LABEL_16;
            }
            if (v19 >= v13)
              break;
            v15 = v14 + 1;
            v6 = (uint64_t *)v14[1];
            if (!v6)
              goto LABEL_16;
          }
        }
      }
      if (!*v15)
      {
LABEL_16:
        v16 = (char *)operator new(0x40uLL);
        *((_DWORD *)v16 + 8) = *v5;
        v17 = (std::basic_string<char16_t> *)(v16 + 40);
        if (*((char *)v5 + 31) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *((const std::basic_string<char16_t>::value_type **)v5 + 1), *((_QWORD *)v5 + 2));
        }
        else
        {
          v18 = *(_OWORD *)(v5 + 2);
          *((_QWORD *)v16 + 7) = *((_QWORD *)v5 + 3);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *(_QWORD *)v16 = 0;
        *((_QWORD *)v16 + 1) = 0;
        *((_QWORD *)v16 + 2) = v14;
        *v15 = v16;
        v20 = (uint64_t *)**a1;
        if (v20)
        {
          *a1 = v20;
          v16 = *v15;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
      v5 += 8;
      if (v5 == v7)
        break;
      v8 = (uint64_t **)*a1;
      v6 = a1[1];
    }
  }
  return a1;
}

void sub_1CB4DD8B4(_Unwind_Exception *a1)
{
  void *v1;
  char **v2;

  operator delete(v1);
  std::__tree<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::__map_value_compare<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::less<morphun::grammar::synthesis::FiGrammarSynthesizer::Count>,true>,std::allocator<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<morphun::grammar::synthesis::FiGrammarSynthesizer::Case,std::basic_string<char16_t>>>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4DD91C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::FiGrammarSynthesizer::getPronounPerson(unsigned __int16 *a1)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  uint64_t *v9;
  morphun::grammar::synthesis::GrammemeConstants *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t i;
  std::basic_string<char16_t> v19;
  int v20;
  std::basic_string<char16_t> v21;
  int v22;
  std::basic_string<char16_t> v23;
  int v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  if ((v2 & 1) == 0
  {
    v11 = (morphun::grammar::synthesis::GrammemeConstants *)operator new();
    v12 = morphun::grammar::synthesis::GrammemeConstants::PERSON_FIRST(v11);
    if (*(char *)(v12 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v19, *(const std::basic_string<char16_t>::value_type **)v12, *(_QWORD *)(v12 + 8));
    }
    else
    {
      v13 = *(_OWORD *)v12;
      v19.__r_.__value_.__r.__words[2] = *(_QWORD *)(v12 + 16);
      *(_OWORD *)&v19.__r_.__value_.__l.__data_ = v13;
    }
    v20 = 1;
    v14 = morphun::grammar::synthesis::GrammemeConstants::PERSON_SECOND((morphun::grammar::synthesis::GrammemeConstants *)v12);
    if (*(char *)(v14 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v21, *(const std::basic_string<char16_t>::value_type **)v14, *(_QWORD *)(v14 + 8));
    }
    else
    {
      v15 = *(_OWORD *)v14;
      v21.__r_.__value_.__r.__words[2] = *(_QWORD *)(v14 + 16);
      *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v15;
    }
    v22 = 2;
    v16 = morphun::grammar::synthesis::GrammemeConstants::PERSON_THIRD((morphun::grammar::synthesis::GrammemeConstants *)v14);
    if (*(char *)(v16 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v23, *(const std::basic_string<char16_t>::value_type **)v16, *(_QWORD *)(v16 + 8));
    }
    else
    {
      v17 = *(_OWORD *)v16;
      v23.__r_.__value_.__r.__words[2] = *(_QWORD *)(v16 + 16);
      *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v17;
    }
    v24 = 3;
    std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FiGrammarSynthesizer::PronounPerson>::map[abi:ne180100]((uint64_t **)v11, (__int128 *)&v19, 3);
    for (i = 0; i != -12; i -= 4)
    {
      if (SHIBYTE(v23.__r_.__value_.__r.__words[i + 2]) < 0)
        operator delete(*(void **)((char *)&v23.__r_.__value_.__l.__data_ + i * 8));
    }
    morphun::grammar::synthesis::FiGrammarSynthesizer::getPronounPerson(std::basic_string<char16_t> const*)::valueMap = (uint64_t)v11;
  }
  if (!a1)
    return 0;
  v3 = morphun::grammar::synthesis::FiGrammarSynthesizer::getPronounPerson(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FiGrammarSynthesizer::PronounPerson>>(morphun::grammar::synthesis::FiGrammarSynthesizer::getPronounPerson(std::basic_string<char16_t> const*)::valueMap);
  v6 = *(_QWORD *)(v3 + 8);
  v4 = v3 + 8;
  v5 = v6;
  if (!v6)
    goto LABEL_10;
  v7 = v4;
  do
  {
    v8 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v5 + 32), a1);
    v9 = (uint64_t *)(v5 + 8);
    if (!v8)
    {
      v9 = (uint64_t *)v5;
      v7 = v5;
    }
    v5 = *v9;
  }
  while (*v9);
  if (v7 == v4 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v7 + 32)))
LABEL_10:
    v7 = v4;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FiGrammarSynthesizer::PronounPerson>>(morphun::grammar::synthesis::FiGrammarSynthesizer::getPronounPerson(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v7)
    return 0;
  else
    return *(unsigned int *)(v7 + 56);
}

void sub_1CB4DDB48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t *v10;

  while (1)
  {
    if (*((char *)v10 - 9) < 0)
      operator delete((void *)*(v10 - 4));
    v10 -= 4;
    if (v10 == &a9)
    {
      MEMORY[0x1D179D2EC](v9, 0x1020C4062D53EE8);
      _Unwind_Resume(a1);
    }
  }
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FiGrammarSynthesizer::PronounPerson>::map[abi:ne180100](uint64_t **a1, __int128 *a2, uint64_t a3)
{
  uint64_t *v4;
  __int128 *v5;
  __int128 *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  BOOL v11;
  char **v12;
  char **v13;
  char *v14;
  unsigned __int16 *v15;
  char *v16;
  std::basic_string<char16_t> *v17;
  __int128 v18;
  uint64_t *v19;

  a1[1] = 0;
  v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    v5 = a2;
    v6 = &a2[2 * a3];
    while (1)
    {
      v7 = a1[1];
      v8 = v4;
      if (*a1 != v4)
      {
        v9 = a1[1];
        v10 = v4;
        if (v7)
        {
          do
          {
            v8 = v9;
            v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            v8 = (uint64_t *)v10[2];
            v11 = *v8 == (_QWORD)v10;
            v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break;
      }
      v12 = (char **)v4;
      v13 = (char **)v4;
      if (!v7)
        goto LABEL_19;
      v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        v12 = (char **)v8;
LABEL_19:
        v16 = (char *)operator new(0x40uLL);
        v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((_QWORD *)v5 + 1));
        }
        else
        {
          v18 = *v5;
          *((_QWORD *)v16 + 6) = *((_QWORD *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(_QWORD *)v16 = 0;
        *((_QWORD *)v16 + 1) = 0;
        *((_QWORD *)v16 + 2) = v12;
        *v13 = v16;
        v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6)
        return a1;
    }
    v12 = (char **)v4;
    v13 = (char **)v4;
    if (v7)
    {
      v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          v12 = (char **)v14;
          v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break;
          v14 = *v12;
          v13 = v12;
          if (!*v12)
            goto LABEL_19;
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5))
          goto LABEL_25;
        v13 = v12 + 1;
        v14 = v12[1];
        if (!v14)
          goto LABEL_19;
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1CB4DDD80(_Unwind_Exception *a1)
{
  void *v1;
  char **v2;

  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FiGrammarSynthesizer::PronounPerson>>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4DDDEC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::stemmer::DictionaryGenderedNounLemmatizer::~DictionaryGenderedNounLemmatizer(morphun::analysis::stemmer::DictionaryGenderedNounLemmatizer *this)
{
  void *v2;
  void *v3;
  void *v4;
  void **v5;

  *(_QWORD *)this = &off_1E8672D10;
  v5 = (void **)((char *)this + 304);
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100](&v5);
  v2 = (void *)*((_QWORD *)this + 35);
  if (v2)
  {
    *((_QWORD *)this + 36) = v2;
    operator delete(v2);
  }
  *(_QWORD *)this = &off_1E8664398;
  v3 = (void *)*((_QWORD *)this + 25);
  if (v3)
  {
    *((_QWORD *)this + 26) = v3;
    operator delete(v3);
  }
  v5 = (void **)((char *)this + 176);
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100](&v5);
  v4 = (void *)*((_QWORD *)this + 19);
  if (v4)
  {
    *((_QWORD *)this + 20) = v4;
    operator delete(v4);
  }
  *(_QWORD *)this = &off_1E86643F8;
}

{
  void *v2;
  void *v3;
  void *v4;
  void **v5;

  *(_QWORD *)this = &off_1E8672D10;
  v5 = (void **)((char *)this + 304);
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100](&v5);
  v2 = (void *)*((_QWORD *)this + 35);
  if (v2)
  {
    *((_QWORD *)this + 36) = v2;
    operator delete(v2);
  }
  *(_QWORD *)this = &off_1E8664398;
  v3 = (void *)*((_QWORD *)this + 25);
  if (v3)
  {
    *((_QWORD *)this + 26) = v3;
    operator delete(v3);
  }
  v5 = (void **)((char *)this + 176);
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100](&v5);
  v4 = (void *)*((_QWORD *)this + 19);
  if (v4)
  {
    *((_QWORD *)this + 20) = v4;
    operator delete(v4);
  }
  *(_QWORD *)this = &off_1E86643F8;
  JUMPOUT(0x1D179D2ECLL);
}

void morphun::analysis::stemmer::DictionaryGenderedNounLemmatizer::selectLemmaInflection(_QWORD *a1@<X0>, uint64_t *a2@<X1>, _BYTE *a3@<X8>)
{
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  const void **v11;
  void *__p[3];

  v5 = (_QWORD *)a1[35];
  v6 = (_QWORD *)a1[36];
  if (v5 == v6)
  {
    v7 = (_QWORD *)a1[35];
  }
  else
  {
    v7 = (_QWORD *)a1[35];
    while ((*v7 & *(_QWORD *)(*a2 + 8)) == 0)
    {
      if (++v7 == v6)
      {
        v7 = (_QWORD *)a1[36];
        break;
      }
    }
  }
  v8 = v7 - v5;
  v9 = a1[38];
  v10 = 0xAAAAAAAAAAAAAAABLL * ((a1[39] - v9) >> 3);
  if (v8 == v10)
  {
    v11 = (const void **)(a1 + 19);
  }
  else
  {
    if (v10 <= v8)
      std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
    v11 = (const void **)(v9 + 24 * v8);
  }
  memset(__p, 0, sizeof(__p));
  std::vector<long long>::__init_with_size[abi:ne180100]<long long *,long long *>(__p, *v11, (uint64_t)v11[1], ((_BYTE *)v11[1] - (_BYTE *)*v11) >> 3);
  morphun::dictionary::Inflector_InflectionPattern::selectLemmaInflection(a3, *a2, a2[2], (uint64_t **)__p);
  if (__p[0])
    operator delete(__p[0]);
}

void sub_1CB4DE058(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]()
{
  std::__throw_out_of_range[abi:ne180100]("vector");
}

_QWORD *std::vector<long long>::__init_with_size[abi:ne180100]<long long *,long long *>(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = std::vector<long long>::__vallocate[abi:ne180100](result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1CB4DE0E0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void morphun::analysis::MorphologicalAnalyzer::~MorphologicalAnalyzer(morphun::analysis::MorphologicalAnalyzer *this)
{
  void *v2;
  void *v3;
  void **v4;

  *(_QWORD *)this = &off_1E8671AB8;
  v2 = (void *)*((_QWORD *)this + 25);
  if (v2)
  {
    *((_QWORD *)this + 26) = v2;
    operator delete(v2);
  }
  v4 = (void **)((char *)this + 176);
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100](&v4);
  v3 = (void *)*((_QWORD *)this + 19);
  if (v3)
  {
    *((_QWORD *)this + 20) = v3;
    operator delete(v3);
  }
  *(_QWORD *)this = &off_1E8661B08;
}

{
  void *v2;
  void *v3;
  void **v4;

  *(_QWORD *)this = &off_1E8671AB8;
  v2 = (void *)*((_QWORD *)this + 25);
  if (v2)
  {
    *((_QWORD *)this + 26) = v2;
    operator delete(v2);
  }
  v4 = (void **)((char *)this + 176);
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100](&v4);
  v3 = (void *)*((_QWORD *)this + 19);
  if (v3)
  {
    *((_QWORD *)this + 20) = v3;
    operator delete(v3);
  }
  *(_QWORD *)this = &off_1E8661B08;
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::analysis::stemmer::DictionaryGenderedNounLemmatizer::DictionaryGenderedNounLemmatizer(uint64_t a1, uint64_t *a2, morphun::dictionary::DictionaryMetaData *a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  morphun::grammar::synthesis::GrammemeConstants *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  std::basic_string<char16_t> *v31;
  std::basic_string<char16_t>::__raw *v32;
  std::basic_string<char16_t> *v33;
  morphun::grammar::synthesis::GrammemeConstants *v34;
  std::basic_string<char16_t> *v35;
  std::basic_string<char16_t> *v36;
  _QWORD *v37;
  __int128 v38;
  uint64_t BinaryProperties;
  uint64_t v40;
  unint64_t v41;
  uint64_t *v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  BOOL v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t v53;
  std::basic_string<char16_t> *v54;
  std::basic_string<char16_t> *v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  char *v60;
  std::basic_string<char16_t> *v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  uint64_t *v65;
  morphun::grammar::synthesis::GrammemeConstants *v66;
  uint64_t v67;
  __int128 v68;
  uint64_t *v69;
  morphun::grammar::synthesis::GrammemeConstants *v70;
  uint64_t v71;
  __int128 v72;
  uint64_t *v73;
  morphun::grammar::synthesis::GrammemeConstants *v74;
  uint64_t v75;
  __int128 v76;
  uint64_t *v77;
  morphun::grammar::synthesis::GrammemeConstants *v78;
  uint64_t v79;
  __int128 v80;
  uint64_t *v81;
  uint64_t *v82;
  uint64_t v85;
  void **v88;
  std::basic_string<char16_t> *v89;
  std::basic_string<char16_t> *v90;
  std::basic_string<char16_t> *v91;
  std::basic_string<char16_t> *v92;
  char v93;
  std::basic_string<char16_t> v94;
  void *__p;
  _BYTE *v96;
  uint64_t v97;
  std::basic_string<char16_t> v98;
  __int128 v99;

  *((_QWORD *)&v99 + 1) = *MEMORY[0x1E0C80C00];
  v5 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR((morphun::grammar::synthesis::GrammemeConstants *)a1);
  v6 = *(unsigned __int8 *)(v5 + 23);
  v7 = *(_QWORD *)(v5 + 8);
  v85 = *(_QWORD *)v5;
  v8 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE((morphun::grammar::synthesis::GrammemeConstants *)v5);
  v9 = *(unsigned __int8 *)(v8 + 23);
  v10 = *(_QWORD *)v8;
  v11 = *(_QWORD *)(v8 + 8);
  v12 = operator new(0x20uLL);
  v13 = v12;
  v94.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)(v12 + 4);
  v94.__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)(v12 + 4);
  if ((v9 & 0x80u) == 0)
    v14 = v8;
  else
    v14 = v10;
  if ((v9 & 0x80u) == 0)
    v15 = v9;
  else
    v15 = v11;
  v16 = v85;
  if ((v6 & 0x80u) != 0)
  {
    v17 = v7;
  }
  else
  {
    v16 = v5;
    v17 = v6;
  }
  *v12 = v16;
  v12[1] = v17;
  v12[2] = v14;
  v12[3] = v15;
  v94.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v12;
  v89 = 0;
  v90 = 0;
  v91 = 0;
  memset(&v98, 0, sizeof(v98));
  morphun::analysis::MorphologicalAnalyzer::MorphologicalAnalyzer((uint64_t *)a1, a2 + 1, a3, (uint64_t *)&v94, (uint64_t)&v89, (uint64_t **)&v98);
  v92 = &v98;
  std::vector<std::vector<std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v92);
  v98.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v89;
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v98);
  operator delete(v13);
  v18 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + *(_QWORD *)(v18 - 40)) = a2[5];
  *(_OWORD *)(a1 + 248) = 0u;
  *(_DWORD *)(a1 + 224) = 4;
  *(_OWORD *)(a1 + 232) = 0u;
  v88 = (void **)(a1 + 280);
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  v19 = *(_QWORD *)(a1 + 8);
  v21 = morphun::grammar::synthesis::GrammemeConstants::POS_NOUN(v20);
  v22 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR((morphun::grammar::synthesis::GrammemeConstants *)v21);
  v23 = *(unsigned __int8 *)(v22 + 23);
  v24 = *(_QWORD *)v22;
  v25 = *(_QWORD *)(v22 + 8);
  v26 = operator new(0x10uLL);
  v27 = v26;
  if ((v23 & 0x80u) == 0)
    v28 = v22;
  else
    v28 = v24;
  if ((v23 & 0x80u) == 0)
    v29 = v23;
  else
    v29 = v25;
  *v26 = v28;
  v26[1] = v29;
  if (*(char *)(v21 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v94, *(const std::basic_string<char16_t>::value_type **)v21, *(_QWORD *)(v21 + 8));
  }
  else
  {
    v30 = *(_OWORD *)v21;
    v94.__r_.__value_.__r.__words[2] = *(_QWORD *)(v21 + 16);
    *(_OWORD *)&v94.__r_.__value_.__l.__data_ = v30;
  }
  __p = 0;
  v96 = 0;
  v97 = 0;
  std::vector<std::u16string_view>::__init_with_size[abi:ne180100]<std::u16string_view*,std::u16string_view*>(&__p, v27, (uint64_t)v27 + 16, 1uLL);
  v89 = 0;
  v90 = 0;
  v91 = 0;
  v98.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v89;
  LOBYTE(v98.__r_.__value_.__r.__words[1]) = 0;
  v31 = (std::basic_string<char16_t> *)operator new(0x30uLL);
  v32 = (std::basic_string<char16_t>::__raw *)v31;
  v89 = v31;
  v90 = v31;
  v33 = v31 + 2;
  v91 = v31 + 2;
  if (SHIBYTE(v94.__r_.__value_.__r.__words[2]) < 0)
    std::basic_string<char16_t>::__init_copy_ctor_external(v31, v94.__r_.__value_.__l.__data_, v94.__r_.__value_.__l.__size_);
  else
    *v31 = v94;
  v32[1].__words[0] = 0;
  v32[1].__words[1] = 0;
  v32[1].__words[2] = 0;
  std::vector<std::u16string_view>::__init_with_size[abi:ne180100]<std::u16string_view*,std::u16string_view*>(v32[1].__words, __p, (uint64_t)v96, (v96 - (_BYTE *)__p) >> 4);
  v90 = v33;
  if (__p)
  {
    v96 = __p;
    operator delete(__p);
  }
  if (SHIBYTE(v94.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v94.__r_.__value_.__l.__data_);
  operator delete(v27);
  v36 = v89;
  v35 = v90;
  if (v89 != v90)
  {
    v37 = (_QWORD *)(a1 + 304);
    do
    {
      if (SHIBYTE(v36->__r_.__value_.__r.__words[2]) < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external(&v98, v36->__r_.__value_.__l.__data_, v36->__r_.__value_.__l.__size_);
      }
      else
      {
        v38 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
        v98.__r_.__value_.__r.__words[2] = v36->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v98.__r_.__value_.__l.__data_ = v38;
      }
      memset(&v94, 0, sizeof(v94));
      v92 = &v94;
      v93 = 0;
      v94.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x18uLL);
      v94.__r_.__value_.__l.__size_ = v94.__r_.__value_.__r.__words[0];
      v94.__r_.__value_.__r.__words[2] = v94.__r_.__value_.__r.__words[0] + 24;
      v94.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v94.__r_.__value_.__r.__words[2], (__int128 *)&v98, &v99, (std::basic_string<char16_t> *)v94.__r_.__value_.__l.__data_);
      BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v19, (uint64_t *)&v94);
      v40 = BinaryProperties;
      v42 = *(uint64_t **)(a1 + 288);
      v41 = *(_QWORD *)(a1 + 296);
      if ((unint64_t)v42 >= v41)
      {
        v44 = (uint64_t *)*v88;
        v45 = ((char *)v42 - (_BYTE *)*v88) >> 3;
        v46 = v45 + 1;
        if ((unint64_t)(v45 + 1) >> 61)
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        v47 = v41 - (_QWORD)v44;
        if (v47 >> 2 > v46)
          v46 = v47 >> 2;
        v48 = (unint64_t)v47 >= 0x7FFFFFFFFFFFFFF8;
        v49 = 0x1FFFFFFFFFFFFFFFLL;
        if (!v48)
          v49 = v46;
        if (v49)
        {
          v49 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v49);
          v44 = *(uint64_t **)(a1 + 280);
          v42 = *(uint64_t **)(a1 + 288);
        }
        else
        {
          v50 = 0;
        }
        v51 = (uint64_t *)(v49 + 8 * v45);
        *v51 = v40;
        v43 = v51 + 1;
        while (v42 != v44)
        {
          v52 = *--v42;
          *--v51 = v52;
        }
        *(_QWORD *)(a1 + 280) = v51;
        *(_QWORD *)(a1 + 288) = v43;
        *(_QWORD *)(a1 + 296) = v49 + 8 * v50;
        if (v44)
          operator delete(v44);
      }
      else
      {
        *v42 = BinaryProperties;
        v43 = v42 + 1;
      }
      *(_QWORD *)(a1 + 288) = v43;
      v92 = &v94;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v92);
      if (SHIBYTE(v98.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v98.__r_.__value_.__l.__data_);
      morphun::analysis::MorphologicalAnalyzer::convertLemmaAttributes((uint64_t)&v98, v19, (uint64_t *)&v36[1]);
      v54 = *(std::basic_string<char16_t> **)(a1 + 312);
      v53 = *(_QWORD *)(a1 + 320);
      if ((unint64_t)v54 >= v53)
      {
        v56 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v54 - *v37) >> 3);
        v57 = v56 + 1;
        if (v56 + 1 > 0xAAAAAAAAAAAAAAALL)
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        v58 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v53 - *v37) >> 3);
        if (2 * v58 > v57)
          v57 = 2 * v58;
        if (v58 >= 0x555555555555555)
          v59 = 0xAAAAAAAAAAAAAAALL;
        else
          v59 = v57;
        v96 = (_BYTE *)(a1 + 320);
        v60 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v59);
        v61 = (std::basic_string<char16_t> *)&v60[24 * v56];
        v94.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v60;
        v94.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)v61;
        __p = &v60[24 * v62];
        *v61 = v98;
        v94.__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)&v61[1];
        std::vector<std::vector<long long>>::__swap_out_circular_buffer(v37, &v94);
        v55 = *(std::basic_string<char16_t> **)(a1 + 312);
        v34 = (morphun::grammar::synthesis::GrammemeConstants *)std::__split_buffer<std::vector<long long>>::~__split_buffer((uint64_t)&v94);
      }
      else
      {
        *v54 = v98;
        v55 = v54 + 1;
        *(_QWORD *)(a1 + 312) = v54 + 1;
      }
      *(_QWORD *)(a1 + 312) = v55;
      v36 += 2;
    }
    while (v36 != v35);
  }
  v63 = morphun::grammar::synthesis::GrammemeConstants::POS_NOUN(v34);
  if (*(char *)(v63 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v98, *(const std::basic_string<char16_t>::value_type **)v63, *(_QWORD *)(v63 + 8));
  }
  else
  {
    v64 = *(_OWORD *)v63;
    v98.__r_.__value_.__r.__words[2] = *(_QWORD *)(v63 + 16);
    *(_OWORD *)&v98.__r_.__value_.__l.__data_ = v64;
  }
  memset(&v94, 0, sizeof(v94));
  v92 = &v94;
  v93 = 0;
  v94.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x18uLL);
  v94.__r_.__value_.__l.__size_ = v94.__r_.__value_.__r.__words[0];
  v94.__r_.__value_.__r.__words[2] = v94.__r_.__value_.__r.__words[0] + 24;
  v94.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v94.__r_.__value_.__r.__words[2], (__int128 *)&v98, &v99, (std::basic_string<char16_t> *)v94.__r_.__value_.__l.__data_);
  v65 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v19, (uint64_t *)(a1 + 240), (uint64_t *)&v94);
  morphun::util::Validate::notNull<long long>((uint64_t)v65);
  v92 = &v94;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v92);
  if (SHIBYTE(v98.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v98.__r_.__value_.__l.__data_);
  v67 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v66);
  if (*(char *)(v67 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v98, *(const std::basic_string<char16_t>::value_type **)v67, *(_QWORD *)(v67 + 8));
  }
  else
  {
    v68 = *(_OWORD *)v67;
    v98.__r_.__value_.__r.__words[2] = *(_QWORD *)(v67 + 16);
    *(_OWORD *)&v98.__r_.__value_.__l.__data_ = v68;
  }
  memset(&v94, 0, sizeof(v94));
  v92 = &v94;
  v93 = 0;
  v94.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x18uLL);
  v94.__r_.__value_.__l.__size_ = v94.__r_.__value_.__r.__words[0];
  v94.__r_.__value_.__r.__words[2] = v94.__r_.__value_.__r.__words[0] + 24;
  v94.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v94.__r_.__value_.__r.__words[2], (__int128 *)&v98, &v99, (std::basic_string<char16_t> *)v94.__r_.__value_.__l.__data_);
  v69 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v19, (uint64_t *)(a1 + 248), (uint64_t *)&v94);
  morphun::util::Validate::notNull<long long>((uint64_t)v69);
  v92 = &v94;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v92);
  if (SHIBYTE(v98.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v98.__r_.__value_.__l.__data_);
  v71 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(v70);
  if (*(char *)(v71 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v98, *(const std::basic_string<char16_t>::value_type **)v71, *(_QWORD *)(v71 + 8));
  }
  else
  {
    v72 = *(_OWORD *)v71;
    v98.__r_.__value_.__r.__words[2] = *(_QWORD *)(v71 + 16);
    *(_OWORD *)&v98.__r_.__value_.__l.__data_ = v72;
  }
  memset(&v94, 0, sizeof(v94));
  v92 = &v94;
  v93 = 0;
  v94.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x18uLL);
  v94.__r_.__value_.__l.__size_ = v94.__r_.__value_.__r.__words[0];
  v94.__r_.__value_.__r.__words[2] = v94.__r_.__value_.__r.__words[0] + 24;
  v94.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v94.__r_.__value_.__r.__words[2], (__int128 *)&v98, &v99, (std::basic_string<char16_t> *)v94.__r_.__value_.__l.__data_);
  v73 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v19, (uint64_t *)(a1 + 256), (uint64_t *)&v94);
  morphun::util::Validate::notNull<long long>((uint64_t)v73);
  v92 = &v94;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v92);
  if (SHIBYTE(v98.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v98.__r_.__value_.__l.__data_);
  v75 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(v74);
  if (*(char *)(v75 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v98, *(const std::basic_string<char16_t>::value_type **)v75, *(_QWORD *)(v75 + 8));
  }
  else
  {
    v76 = *(_OWORD *)v75;
    v98.__r_.__value_.__r.__words[2] = *(_QWORD *)(v75 + 16);
    *(_OWORD *)&v98.__r_.__value_.__l.__data_ = v76;
  }
  memset(&v94, 0, sizeof(v94));
  v92 = &v94;
  v93 = 0;
  v94.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x18uLL);
  v94.__r_.__value_.__l.__size_ = v94.__r_.__value_.__r.__words[0];
  v94.__r_.__value_.__r.__words[2] = v94.__r_.__value_.__r.__words[0] + 24;
  v94.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v94.__r_.__value_.__r.__words[2], (__int128 *)&v98, &v99, (std::basic_string<char16_t> *)v94.__r_.__value_.__l.__data_);
  v77 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v19, (uint64_t *)(a1 + 264), (uint64_t *)&v94);
  morphun::util::Validate::notNull<long long>((uint64_t)v77);
  v92 = &v94;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v92);
  if (SHIBYTE(v98.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v98.__r_.__value_.__l.__data_);
  v79 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE(v78);
  if (*(char *)(v79 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v98, *(const std::basic_string<char16_t>::value_type **)v79, *(_QWORD *)(v79 + 8));
  }
  else
  {
    v80 = *(_OWORD *)v79;
    v98.__r_.__value_.__r.__words[2] = *(_QWORD *)(v79 + 16);
    *(_OWORD *)&v98.__r_.__value_.__l.__data_ = v80;
  }
  memset(&v94, 0, sizeof(v94));
  v92 = &v94;
  v93 = 0;
  v94.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x18uLL);
  v94.__r_.__value_.__l.__size_ = v94.__r_.__value_.__r.__words[0];
  v94.__r_.__value_.__r.__words[2] = v94.__r_.__value_.__r.__words[0] + 24;
  v94.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v94.__r_.__value_.__r.__words[2], (__int128 *)&v98, &v99, (std::basic_string<char16_t> *)v94.__r_.__value_.__l.__data_);
  v81 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v19, (uint64_t *)(a1 + 272), (uint64_t *)&v94);
  morphun::util::Validate::notNull<long long>((uint64_t)v81);
  v92 = &v94;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v92);
  if (SHIBYTE(v98.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v98.__r_.__value_.__l.__data_);
  v82 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v19, (uint64_t *)(a1 + 232), a4);
  morphun::util::Validate::notNull<long long>((uint64_t)v82);
  v94.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v89;
  std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::u16string_view>>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v94);
  return a1;
}

void sub_1CB4DEAA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  morphun::analysis::MorphologicalAnalyzer *v26;
  void *v27;
  uint64_t *v28;
  uint64_t v29;

  std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::u16string_view>>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v29 - 128));
  std::pair<std::basic_string<char16_t>,std::vector<std::u16string_view>>::~pair((uint64_t)&__p);
  operator delete(v27);
  std::pair<std::vector<long long>,std::vector<std::vector<long long>>>::~pair(a15);
  morphun::analysis::MorphologicalAnalyzer::~MorphologicalAnalyzer(v26, v28);
  _Unwind_Resume(a1);
}

void std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::u16string_view>>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 48;
        std::allocator<std::pair<std::basic_string<char16_t>,std::vector<std::u16string_view>>>::destroy[abi:ne180100](v4);
      }
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t std::pair<std::basic_string<char16_t>,std::vector<std::u16string_view>>::~pair(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(_QWORD *)(a1 + 32) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t std::pair<std::vector<long long>,std::vector<std::vector<long long>>>::~pair(uint64_t a1)
{
  void *v2;
  void **v4;

  v4 = (void **)(a1 + 24);
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100](&v4);
  v2 = *(void **)a1;
  if (*(_QWORD *)a1)
  {
    *(_QWORD *)(a1 + 8) = v2;
    operator delete(v2);
  }
  return a1;
}

void morphun::analysis::MorphologicalAnalyzer::~MorphologicalAnalyzer(morphun::analysis::MorphologicalAnalyzer *this, uint64_t *a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void **v8;

  v4 = *a2;
  *(_QWORD *)this = *a2;
  *(_QWORD *)((char *)this + *(_QWORD *)(v4 - 40)) = a2[3];
  v5 = (void *)*((_QWORD *)this + 25);
  if (v5)
  {
    *((_QWORD *)this + 26) = v5;
    operator delete(v5);
  }
  v8 = (void **)((char *)this + 176);
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100](&v8);
  v6 = (void *)*((_QWORD *)this + 19);
  if (v6)
  {
    *((_QWORD *)this + 20) = v6;
    operator delete(v6);
  }
  v7 = a2[1];
  *(_QWORD *)this = v7;
  *(_QWORD *)((char *)this + *(_QWORD *)(v7 - 40)) = a2[2];
}

_QWORD *std::vector<std::vector<long long>>::__swap_out_circular_buffer(_QWORD *result, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  __int128 v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (_QWORD *)*result;
  v2 = (_QWORD *)result[1];
  v4 = a2[1];
  while (v2 != v3)
  {
    *(_QWORD *)(v4 - 24) = 0;
    *(_QWORD *)(v4 - 16) = 0;
    v4 -= 24;
    *(_QWORD *)(v4 + 16) = 0;
    v5 = *(_OWORD *)(v2 - 3);
    v2 -= 3;
    *(_OWORD *)v4 = v5;
    *(_QWORD *)(v4 + 16) = v2[2];
    *v2 = 0;
    v2[1] = 0;
    v2[2] = 0;
  }
  a2[1] = v4;
  v6 = (_QWORD *)*result;
  *result = v4;
  a2[1] = v6;
  v7 = result[1];
  result[1] = a2[2];
  a2[2] = v7;
  v8 = result[2];
  result[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__split_buffer<std::vector<long long>>::~__split_buffer(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  while (v2 != v3)
  {
    v4 = *(void **)(v2 - 24);
    *(_QWORD *)(a1 + 16) = v2 - 24;
    if (v4)
    {
      *(_QWORD *)(v2 - 16) = v4;
      operator delete(v4);
      v2 = *(_QWORD *)(a1 + 16);
    }
    else
    {
      v2 -= 24;
    }
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void std::allocator<std::pair<std::basic_string<char16_t>,std::vector<std::u16string_view>>>::destroy[abi:ne180100](uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(_QWORD *)(a1 + 32) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
}

void morphun::analysis::stemmer::DictionaryGenderedNounLemmatizer::getLemma(std::basic_string<char16_t> *a1, uint64_t a2, unsigned __int16 *__src, std::basic_string<char16_t>::size_type a4, uint64_t a5)
{
  std::basic_string<char16_t> *v7;
  __int128 *p_dst;
  uint64_t v11;
  uint64_t v12;
  const std::basic_string<char16_t> *v13;
  std::basic_string<char16_t> *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 *v17;
  const std::basic_string<char16_t> *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  const std::basic_string<char16_t> *v22;
  std::basic_string<char16_t> *v23;
  const std::basic_string<char16_t> *v24;
  __int128 v25;
  uint64_t v26;
  std::basic_string<char16_t>::size_type size;
  uint64_t v28;
  int v29;
  unsigned __int16 *v30;
  std::basic_string<char16_t> *v31;
  __int128 *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int16 KeyId;
  int v38;
  std::basic_string<char16_t> *v39;
  __int16 v40;
  int *v41;
  int *v42;
  std::basic_string<char16_t>::size_type v43;
  std::basic_string<char16_t> *v44;
  _BOOL4 v45;
  uint64_t v46;
  int v47;
  BOOL v48;
  __int128 *v49;
  uint64_t v50;
  uint64_t v51;
  std::basic_string<char16_t> *v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  std::basic_string<char16_t>::size_type v58;
  std::basic_string<char16_t>::size_type v59;
  std::basic_string<char16_t> *v60;
  std::basic_string<char16_t> *i;
  morphun::grammar::synthesis::GrammemeConstants *v62;
  __int128 *v63;
  int *v64;
  std::basic_string<char16_t> v65;
  std::basic_string<char16_t> v66;
  std::basic_string<char16_t> __p;
  __int128 __dst;
  __int128 v69;
  __int128 v70;
  char v71;
  std::basic_string<char16_t> v72;
  uint64_t v73;
  uint64_t v74;
  std::basic_string<char16_t> v75;
  std::basic_string<char16_t> v76;
  std::basic_string<char16_t> *v77;
  std::basic_string<char16_t> *v78;
  unint64_t v79;
  _BYTE v80[32];
  __int128 v81;

  v7 = a1;
  if (*(_DWORD *)(a2 + 224) > (int)a4)
  {
    if (a4 > 0x7FFFFFFFFFFFFFF7)
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    if (a4 >= 0xB)
    {
      v15 = (a4 & 0xFFFFFFFFFFFFFFFCLL) + 4;
      if ((a4 | 3) != 0xB)
        v15 = a4 | 3;
      p_dst = (__int128 *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v15 + 1);
      *((_QWORD *)&__dst + 1) = a4;
      *(_QWORD *)&v69 = v16 | 0x8000000000000000;
      *(_QWORD *)&__dst = p_dst;
    }
    else
    {
      BYTE7(v69) = a4;
      p_dst = &__dst;
      if (!a4)
        goto LABEL_16;
    }
    memmove(p_dst, __src, 2 * a4);
LABEL_16:
    *((_WORD *)p_dst + a4) = 0;
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = __dst;
    v7->__r_.__value_.__r.__words[2] = v69;
    LOBYTE(v7[1].__r_.__value_.__l.__data_) = 1;
    return;
  }
  if (!a5)
  {
    LOBYTE(a1->__r_.__value_.__l.__data_) = 0;
    LOBYTE(a1[1].__r_.__value_.__l.__data_) = 0;
    return;
  }
  v11 = *(_QWORD *)(a2 + 8);
  v12 = *(_QWORD *)(a2 + 16);
  v77 = 0;
  v78 = 0;
  v79 = 0;
  if ((*(_QWORD *)(a2 + 232) & a5) == 0)
  {
    if (a4 > 0x7FFFFFFFFFFFFFF7)
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    if (a4 >= 0xB)
    {
      v20 = (a4 & 0xFFFFFFFFFFFFFFFCLL) + 4;
      if ((a4 | 3) != 0xB)
        v20 = a4 | 3;
      v17 = (__int128 *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v20 + 1);
      *((_QWORD *)&__dst + 1) = a4;
      *(_QWORD *)&v69 = v21 | 0x8000000000000000;
      *(_QWORD *)&__dst = v17;
    }
    else
    {
      BYTE7(v69) = a4;
      v17 = &__dst;
      if (!a4)
        goto LABEL_32;
    }
    memmove(v17, __src, 2 * a4);
LABEL_32:
    *((_WORD *)v17 + a4) = 0;
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = __dst;
    v7->__r_.__value_.__r.__words[2] = v69;
    LOBYTE(v7[1].__r_.__value_.__l.__data_) = 1;
    goto LABEL_161;
  }
  memset(&v76, 0, sizeof(v76));
  if ((*(_QWORD *)(a2 + 256) & a5) == 0)
  {
    if ((*(_QWORD *)(a2 + 248) & a5) == 0)
      goto LABEL_35;
    v18 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR((morphun::grammar::synthesis::GrammemeConstants *)a1);
    std::basic_string<char16_t>::operator=(&v76, v18);
    v14 = v78;
    if ((unint64_t)v78 < v79)
    {
      if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0)
        goto LABEL_11;
LABEL_25:
      v19 = *(_OWORD *)&v76.__r_.__value_.__l.__data_;
      v14->__r_.__value_.__r.__words[2] = v76.__r_.__value_.__r.__words[2];
      *(_OWORD *)&v14->__r_.__value_.__l.__data_ = v19;
      goto LABEL_26;
    }
LABEL_33:
    a1 = (std::basic_string<char16_t> *)std::vector<std::basic_string<char16_t>>::__push_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)&v77, (__int128 *)&v76);
    goto LABEL_34;
  }
  v13 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)a1);
  std::basic_string<char16_t>::operator=(&v76, v13);
  v14 = v78;
  if ((unint64_t)v78 >= v79)
    goto LABEL_33;
  if ((SHIBYTE(v76.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    goto LABEL_25;
LABEL_11:
  std::basic_string<char16_t>::__init_copy_ctor_external(v78, v76.__r_.__value_.__l.__data_, v76.__r_.__value_.__l.__size_);
LABEL_26:
  a1 = v14 + 1;
LABEL_34:
  v78 = a1;
LABEL_35:
  memset(&v75, 0, sizeof(v75));
  if ((*(_QWORD *)(a2 + 272) & a5) == 0)
  {
    if ((*(_QWORD *)(a2 + 264) & a5) == 0)
      goto LABEL_46;
    v24 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE((morphun::grammar::synthesis::GrammemeConstants *)a1);
    std::basic_string<char16_t>::operator=(&v75, v24);
    v23 = v78;
    if ((unint64_t)v78 < v79)
    {
      if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0)
        goto LABEL_38;
LABEL_42:
      v25 = *(_OWORD *)&v75.__r_.__value_.__l.__data_;
      v23->__r_.__value_.__r.__words[2] = v75.__r_.__value_.__r.__words[2];
      *(_OWORD *)&v23->__r_.__value_.__l.__data_ = v25;
      goto LABEL_43;
    }
LABEL_44:
    a1 = (std::basic_string<char16_t> *)std::vector<std::basic_string<char16_t>>::__push_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)&v77, (__int128 *)&v75);
    goto LABEL_45;
  }
  v22 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE((morphun::grammar::synthesis::GrammemeConstants *)a1);
  std::basic_string<char16_t>::operator=(&v75, v22);
  v23 = v78;
  if ((unint64_t)v78 >= v79)
    goto LABEL_44;
  if ((SHIBYTE(v75.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    goto LABEL_42;
LABEL_38:
  std::basic_string<char16_t>::__init_copy_ctor_external(v78, v75.__r_.__value_.__l.__data_, v75.__r_.__value_.__l.__size_);
LABEL_43:
  a1 = v23 + 1;
LABEL_45:
  v78 = a1;
LABEL_46:
  v26 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR((morphun::grammar::synthesis::GrammemeConstants *)a1);
  size = HIBYTE(v76.__r_.__value_.__r.__words[2]);
  if ((v76.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = v76.__r_.__value_.__l.__size_;
  v28 = *(unsigned __int8 *)(v26 + 23);
  v29 = (char)v28;
  if ((v28 & 0x80u) != 0)
    v28 = *(_QWORD *)(v26 + 8);
  if (size != v28)
    goto LABEL_64;
  if (!size)
  {
LABEL_59:
    if ((*(_QWORD *)(a2 + 240) & a5) == 0)
      goto LABEL_64;
    if (a4 > 0x7FFFFFFFFFFFFFF7)
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    if (a4 >= 0xB)
    {
      v50 = (a4 & 0xFFFFFFFFFFFFFFFCLL) + 4;
      if ((a4 | 3) != 0xB)
        v50 = a4 | 3;
      v32 = (__int128 *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v50 + 1);
      *((_QWORD *)&__dst + 1) = a4;
      *(_QWORD *)&v69 = v51 | 0x8000000000000000;
      *(_QWORD *)&__dst = v32;
    }
    else
    {
      BYTE7(v69) = a4;
      v32 = &__dst;
      if (!a4)
        goto LABEL_112;
    }
    memmove(v32, __src, 2 * a4);
LABEL_112:
    *((_WORD *)v32 + a4) = 0;
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = __dst;
    v7->__r_.__value_.__r.__words[2] = v69;
    LOBYTE(v7[1].__r_.__value_.__l.__data_) = 1;
    goto LABEL_157;
  }
  if (v29 >= 0)
    v30 = (unsigned __int16 *)v26;
  else
    v30 = *(unsigned __int16 **)v26;
  v31 = &v76;
  if ((v76.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v31 = (std::basic_string<char16_t> *)v76.__r_.__value_.__r.__words[0];
  while (*v30 == (unsigned __int16)v31->__r_.__value_.__s.__data_[0])
  {
    v31 = (std::basic_string<char16_t> *)((char *)v31 + 2);
    ++v30;
    if (!--size)
      goto LABEL_59;
  }
LABEL_64:
  morphun::dictionary::DictionaryMetaData::getPropertyValues(v11, __src, a4, (unsigned __int16 *)"i", 0xAuLL, &v73);
  v33 = v73;
  v34 = v74;
  if (v73 == v74)
  {
    LOBYTE(v7->__r_.__value_.__l.__data_) = 0;
    LOBYTE(v7[1].__r_.__value_.__l.__data_) = 0;
    goto LABEL_156;
  }
  memset(&v72, 0, sizeof(v72));
  while (1)
  {
    if (*(char *)(v33 + 23) < 0)
    {
      v36 = *(_QWORD *)v33;
      v35 = *(_QWORD *)(v33 + 8);
    }
    else
    {
      LODWORD(v35) = *(unsigned __int8 *)(v33 + 23);
      v36 = v33;
    }
    KeyId = morphun::dictionary::metadata::MarisaTrie<int>::getKeyId((marisa::Trie *)(v12 + 248), v36, v35);
    morphun::dictionary::Inflector_MMappedDictionary::getInflectionPattern((morphun::dictionary::Inflector_MMappedDictionary *)&__dst, v12 + 8, KeyId);
    if (WORD1(v69))
      break;
    v33 += 24;
    if (v33 == v34)
      goto LABEL_74;
  }
  std::basic_string<char16_t>::operator=(&v72, (const std::basic_string<char16_t> *)v33);
LABEL_74:
  if (SHIBYTE(v72.__r_.__value_.__r.__words[2]) < 0)
  {
    v38 = v72.__r_.__value_.__r.__words[1];
    if (v72.__r_.__value_.__l.__size_)
    {
      v39 = (std::basic_string<char16_t> *)v72.__r_.__value_.__r.__words[0];
      goto LABEL_79;
    }
LABEL_103:
    if (a4 > 0x7FFFFFFFFFFFFFF7)
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    if (a4 >= 0xB)
    {
      v54 = (a4 & 0xFFFFFFFFFFFFFFFCLL) + 4;
      if ((a4 | 3) != 0xB)
        v54 = a4 | 3;
      v49 = (__int128 *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v54 + 1);
      *((_QWORD *)&__dst + 1) = a4;
      *(_QWORD *)&v69 = v55 | 0x8000000000000000;
      *(_QWORD *)&__dst = v49;
    }
    else
    {
      BYTE7(v69) = a4;
      v49 = &__dst;
      if (!a4)
        goto LABEL_121;
    }
    memmove(v49, __src, 2 * a4);
LABEL_121:
    *((_WORD *)v49 + a4) = 0;
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = __dst;
    v7->__r_.__value_.__r.__words[2] = v69;
    LOBYTE(v7[1].__r_.__value_.__l.__data_) = 1;
    goto LABEL_154;
  }
  v38 = HIBYTE(v72.__r_.__value_.__r.__words[2]);
  if (!*((_BYTE *)&v72.__r_.__value_.__s + 23))
    goto LABEL_103;
  v39 = &v72;
LABEL_79:
  v40 = morphun::dictionary::metadata::MarisaTrie<int>::getKeyId((marisa::Trie *)(v12 + 248), (uint64_t)v39, v38);
  morphun::dictionary::Inflector_MMappedDictionary::getInflectionPattern((morphun::dictionary::Inflector_MMappedDictionary *)v80, v12 + 8, v40);
  __dst = *(_OWORD *)v80;
  v69 = *(_OWORD *)&v80[16];
  v70 = v81;
  v71 = 1;
  morphun::dictionary::Inflector_InflectionPattern::constrain((unint64_t *)v80, (uint64_t)&__dst, (uint64_t *)&v77, 1);
  memset(&__p, 0, sizeof(__p));
  v42 = *(int **)&v80[8];
  v41 = *(int **)v80;
  if (*(_QWORD *)v80 == *(_QWORD *)&v80[8])
  {
    v53 = 0;
    goto LABEL_142;
  }
  v64 = *(int **)v80;
  while (1)
  {
    morphun::dictionary::metadata::StringContainer::getString(*(morphun::dictionary::metadata::StringContainer **)(*(_QWORD *)v41 + 40), v41[2], &v66);
    v43 = HIBYTE(v66.__r_.__value_.__r.__words[2]);
    if ((v66.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v44 = &v66;
    else
      v44 = (std::basic_string<char16_t> *)v66.__r_.__value_.__r.__words[0];
    if ((v66.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v43 = v66.__r_.__value_.__l.__size_;
    if (a4 < v43)
    {
      v45 = 0;
      if ((SHIBYTE(v66.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_98;
LABEL_97:
      operator delete(v66.__r_.__value_.__l.__data_);
      goto LABEL_98;
    }
    if (v43)
    {
      v46 = -(uint64_t)v43;
      do
      {
        v47 = (unsigned __int16)v44->__r_.__value_.__s.__data_[0];
        v44 = (std::basic_string<char16_t> *)((char *)v44 + 2);
        v45 = v47 == __src[a4 + v46];
        v48 = v47 != __src[a4 + v46] || v46 == -1;
        ++v46;
      }
      while (!v48);
      if (SHIBYTE(v66.__r_.__value_.__r.__words[2]) < 0)
        goto LABEL_97;
    }
    else
    {
      v45 = 1;
      if (SHIBYTE(v66.__r_.__value_.__r.__words[2]) < 0)
        goto LABEL_97;
    }
LABEL_98:
    if (v45)
      break;
    v41 += 6;
    if (v41 == v42)
    {
      v53 = 0;
      v41 = v64;
      goto LABEL_142;
    }
  }
  if (a4 > 0x7FFFFFFFFFFFFFF7)
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  if (a4 >= 0xB)
  {
    v56 = (a4 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((a4 | 3) != 0xB)
      v56 = a4 | 3;
    v52 = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v56 + 1);
    v65.__r_.__value_.__l.__size_ = a4;
    v65.__r_.__value_.__r.__words[2] = v57 | 0x8000000000000000;
    v65.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v52;
    goto LABEL_125;
  }
  *((_BYTE *)&v65.__r_.__value_.__s + 23) = a4;
  v52 = &v65;
  if (a4)
LABEL_125:
    memmove(v52, __src, 2 * a4);
  v52->__r_.__value_.__s.__data_[a4] = 0;
  morphun::dictionary::Inflector_Inflection::lemmatize(&v66, v41, &v65);
  v41 = v64;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  __p = v66;
  if (SHIBYTE(v65.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v65.__r_.__value_.__l.__data_);
  v53 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  v58 = __p.__r_.__value_.__l.__size_;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v58 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if (!v58)
  {
LABEL_142:
    LOBYTE(v7->__r_.__value_.__l.__data_) = 0;
    LOBYTE(v7[1].__r_.__value_.__l.__data_) = 0;
    if (v53 < 0)
      goto LABEL_143;
    goto LABEL_152;
  }
  if ((*(_QWORD *)(a2 + 240) & a5) == 0)
    goto LABEL_151;
  v59 = HIBYTE(v75.__r_.__value_.__r.__words[2]);
  if ((v75.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v59 = v75.__r_.__value_.__l.__size_;
  if (!v59)
    goto LABEL_151;
  v60 = v77;
  for (i = v78; i != v60; --i)
  {
    if (SHIBYTE(i[-1].__r_.__value_.__r.__words[2]) < 0)
      operator delete(i[-1].__r_.__value_.__l.__data_);
  }
  v78 = v60;
  v62 = (morphun::grammar::synthesis::GrammemeConstants *)std::vector<std::basic_string<char16_t>>::push_back[abi:ne180100]((uint64_t *)&v77, (__int128 *)&v75);
  v63 = (__int128 *)morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v62);
  std::vector<std::basic_string<char16_t>>::emplace_back<std::basic_string<char16_t> const&>((uint64_t *)&v77, v63);
  morphun::dictionary::Inflector_InflectionPattern::constrain((unint64_t *)&v66, (uint64_t)&__dst, (uint64_t *)&v77, 1);
  if (v64)
    operator delete(v64);
  v41 = (int *)v66.__r_.__value_.__r.__words[0];
  *(std::basic_string<char16_t> *)v80 = v66;
  if (v66.__r_.__value_.__r.__words[0] != v66.__r_.__value_.__l.__size_)
  {
    morphun::dictionary::Inflector_Inflection::inflect(&v66, (int *)v66.__r_.__value_.__l.__data_, &__p);
    *v7 = v66;
    LOBYTE(v7[1].__r_.__value_.__l.__data_) = 1;
    if ((*((_BYTE *)&__p.__r_.__value_.__s + 23) & 0x80) != 0)
LABEL_143:
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
LABEL_151:
    *v7 = __p;
    LOBYTE(v7[1].__r_.__value_.__l.__data_) = 1;
  }
LABEL_152:
  if (v41)
  {
    *(_QWORD *)&v80[8] = v41;
    operator delete(v41);
  }
LABEL_154:
  if (SHIBYTE(v72.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v72.__r_.__value_.__l.__data_);
LABEL_156:
  *(_QWORD *)&__dst = &v73;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__dst);
LABEL_157:
  if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v75.__r_.__value_.__l.__data_);
  if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v76.__r_.__value_.__l.__data_);
LABEL_161:
  *(_QWORD *)&__dst = &v77;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__dst);
}

void sub_1CB4DF77C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,char a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,int a45,__int16 a46,char a47,char a48)
{
  char v48;
  void *v49;
  uint64_t v50;

  if (v48 < 0)
    operator delete(__p);
  if (v49)
    operator delete(v49);
  if (a39 < 0)
    operator delete(a34);
  a34 = &a40;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a34);
  if (a48 < 0)
    operator delete(a43);
  if (*(char *)(v50 - 169) < 0)
    operator delete(*(void **)(v50 - 192));
  *(_QWORD *)(v50 - 192) = v50 - 168;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v50 - 192));
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::basic_string<char16_t>>::__push_back_slow_path<std::basic_string<char16_t> const&>(uint64_t *a1, __int128 *a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  std::basic_string<char16_t> *v10;
  __int128 v11;
  uint64_t v12;
  _QWORD v14[2];
  std::basic_string<char16_t> *v15;
  char *v16;
  uint64_t *v17;

  v2 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  v3 = v2 + 1;
  if (v2 + 1 > 0xAAAAAAAAAAAAAAALL)
    std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
  v6 = a1 + 2;
  if (0x5555555555555556 * ((a1[2] - *a1) >> 3) > v3)
    v3 = 0x5555555555555556 * ((a1[2] - *a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - *a1) >> 3) >= 0x555555555555555)
    v7 = 0xAAAAAAAAAAAAAAALL;
  else
    v7 = v3;
  v17 = v6;
  if (v7)
  {
    v9 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v7);
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  v10 = (std::basic_string<char16_t> *)&v9[24 * v2];
  v14[0] = v9;
  v14[1] = v10;
  v15 = v10;
  v16 = &v9[24 * v8];
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v10, *(const std::basic_string<char16_t>::value_type **)a2, *((_QWORD *)a2 + 1));
    v10 = v15;
  }
  else
  {
    v11 = *a2;
    v10->__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)&v10->__r_.__value_.__l.__data_ = v11;
  }
  v15 = v10 + 1;
  std::vector<std::basic_string<char16_t>>::__swap_out_circular_buffer(a1, v14);
  v12 = a1[1];
  std::__split_buffer<std::basic_string<char16_t>>::~__split_buffer((uint64_t)v14);
  return v12;
}

void sub_1CB4DF990(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<std::basic_string<char16_t>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::basic_string<char16_t>>::push_back[abi:ne180100](uint64_t *a1, __int128 *a2)
{
  unint64_t v3;
  uint64_t result;

  v3 = a1[1];
  if (v3 >= a1[2])
  {
    result = std::vector<std::basic_string<char16_t>>::__push_back_slow_path<std::basic_string<char16_t> const&>(a1, a2);
  }
  else
  {
    std::vector<std::basic_string<char16_t>>::__construct_one_at_end[abi:ne180100]<std::basic_string<char16_t> const&>((uint64_t)a1, a2);
    result = v3 + 24;
  }
  a1[1] = result;
  return result;
}

uint64_t std::vector<std::basic_string<char16_t>>::emplace_back<std::basic_string<char16_t> const&>(uint64_t *a1, __int128 *a2)
{
  unint64_t v3;
  uint64_t result;

  v3 = a1[1];
  if (v3 >= a1[2])
  {
    result = std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>(a1, a2);
  }
  else
  {
    std::vector<std::basic_string<char16_t>>::__construct_one_at_end[abi:ne180100]<std::basic_string<char16_t> const&>((uint64_t)a1, a2);
    result = v3 + 24;
  }
  a1[1] = result;
  return result;
}

void std::vector<std::basic_string<char16_t>>::__construct_one_at_end[abi:ne180100]<std::basic_string<char16_t> const&>(uint64_t a1, __int128 *a2)
{
  uint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(a1 + 8);
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(*(std::basic_string<char16_t> **)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v4 = *a2;
    *(_QWORD *)(v3 + 16) = *((_QWORD *)a2 + 2);
    *(_OWORD *)v3 = v4;
  }
  *(_QWORD *)(a1 + 8) = v3 + 24;
}

void sub_1CB4DFA70(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>(uint64_t *a1, __int128 *a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  std::basic_string<char16_t> *v10;
  __int128 v11;
  uint64_t v12;
  _QWORD v14[2];
  std::basic_string<char16_t> *v15;
  char *v16;
  uint64_t *v17;

  v2 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  v3 = v2 + 1;
  if (v2 + 1 > 0xAAAAAAAAAAAAAAALL)
    std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
  v6 = a1 + 2;
  if (0x5555555555555556 * ((a1[2] - *a1) >> 3) > v3)
    v3 = 0x5555555555555556 * ((a1[2] - *a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - *a1) >> 3) >= 0x555555555555555)
    v7 = 0xAAAAAAAAAAAAAAALL;
  else
    v7 = v3;
  v17 = v6;
  if (v7)
  {
    v9 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v7);
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  v10 = (std::basic_string<char16_t> *)&v9[24 * v2];
  v14[0] = v9;
  v14[1] = v10;
  v15 = v10;
  v16 = &v9[24 * v8];
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v10, *(const std::basic_string<char16_t>::value_type **)a2, *((_QWORD *)a2 + 1));
    v10 = v15;
  }
  else
  {
    v11 = *a2;
    v10->__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)&v10->__r_.__value_.__l.__data_ = v11;
  }
  v15 = v10 + 1;
  std::vector<std::basic_string<char16_t>>::__swap_out_circular_buffer(a1, v14);
  v12 = a1[1];
  std::__split_buffer<std::basic_string<char16_t>>::~__split_buffer((uint64_t)v14);
  return v12;
}

void sub_1CB4DFB84(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<std::basic_string<char16_t>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *std::vector<std::basic_string<char16_t>>::__swap_out_circular_buffer(uint64_t *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *result;
  v3 = result[1];
  v4 = a2[1];
  if (v3 == *result)
  {
    v5 = a2[1];
  }
  else
  {
    do
    {
      v5 = v4 - 24;
      v6 = *(_OWORD *)(v3 - 24);
      *(_QWORD *)(v4 - 8) = *(_QWORD *)(v3 - 8);
      *(_OWORD *)(v4 - 24) = v6;
      *(_QWORD *)(v3 - 16) = 0;
      *(_QWORD *)(v3 - 8) = 0;
      *(_QWORD *)(v3 - 24) = 0;
      v4 -= 24;
      v3 -= 24;
    }
    while (v3 != v2);
  }
  a2[1] = v5;
  v7 = *result;
  *result = v5;
  a2[1] = v7;
  v8 = result[1];
  result[1] = a2[2];
  a2[2] = v8;
  v9 = result[2];
  result[2] = a2[3];
  a2[3] = v9;
  *a2 = a2[1];
  return result;
}

uint64_t std::__split_buffer<std::basic_string<char16_t>>::~__split_buffer(uint64_t a1)
{
  void **v2;
  void **v3;
  void **v4;

  v3 = *(void ***)(a1 + 8);
  v2 = *(void ***)(a1 + 16);
  if (v2 != v3)
  {
    do
    {
      v4 = v2 - 3;
      *(_QWORD *)(a1 + 16) = v2 - 3;
      if (*((char *)v2 - 1) < 0)
      {
        operator delete(*v4);
        v4 = *(void ***)(a1 + 16);
      }
      v2 = v4;
    }
    while (v4 != v3);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t **com::apple::siri::tokenizer::data::config_hu::getContent@<X0>(uint64_t **a1@<X8>)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v3 = xmmword_1E8686A40;
  v4 = 0x1CB73E8CALL;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

void marisa::grimoire::io::Mapper::~Mapper(marisa::grimoire::io::Mapper *this)
{
  void *v2;
  int v3;

  v2 = (void *)*((_QWORD *)this + 1);
  if (v2 != (void *)-1)
    munmap(v2, *((_QWORD *)this + 3));
  v3 = *((_DWORD *)this + 8);
  if (v3 != -1)
    close(v3);
}

uint64_t marisa::grimoire::io::Mapper::seek(marisa::grimoire::io::Mapper *this, unint64_t a2)
{
  _QWORD *exception;
  const char *v4;

  if (!*(_QWORD *)this)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    *exception = &off_1E8669F00;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/mapper.cc";
    exception[2] = 0x100000047;
    v4 = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/mapper.cc:71: M"
         "ARISA_STATE_ERROR: !is_open()";
    goto LABEL_6;
  }
  if (*((_QWORD *)this + 2) < a2)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    *exception = &off_1E8669F00;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/mapper.cc";
    exception[2] = 0x900000048;
    v4 = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/mapper.cc:72: M"
         "ARISA_IO_ERROR: size > avail_";
LABEL_6:
    exception[3] = v4;
  }
  return marisa::grimoire::io::Mapper::map_data(this, a2);
}

uint64_t marisa::grimoire::io::Mapper::map_data(marisa::grimoire::io::Mapper *this, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  _QWORD *exception;
  const char *v8;

  v2 = *(_QWORD *)this;
  if (!*(_QWORD *)this)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    *exception = &off_1E8669F00;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/mapper.cc";
    exception[2] = 0x100000063;
    v8 = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/mapper.cc:99: M"
         "ARISA_STATE_ERROR: !is_open()";
LABEL_6:
    exception[3] = v8;
  }
  v3 = *((_QWORD *)this + 2);
  v4 = v3 >= a2;
  v5 = v3 - a2;
  if (!v4)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    *exception = &off_1E8669F00;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/mapper.cc";
    exception[2] = 0x900000064;
    v8 = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/mapper.cc:100: "
         "MARISA_IO_ERROR: size > avail_";
    goto LABEL_6;
  }
  *(_QWORD *)this = v2 + a2;
  *((_QWORD *)this + 2) = v5;
  return v2;
}

void morphun::tokenizer::trie::SerializedTrie::~SerializedTrie(morphun::tokenizer::trie::SerializedTrie *this)
{
  morphun::dictionary::metadata::MarisaTrie<int>::~MarisaTrie((uint64_t)this + 40);
  morphun::util::MemoryMappedFile::~MemoryMappedFile((morphun::tokenizer::trie::SerializedTrie *)((char *)this + 8));
}

{
  morphun::dictionary::metadata::MarisaTrie<int>::~MarisaTrie((uint64_t)this + 40);
  morphun::util::MemoryMappedFile::~MemoryMappedFile((morphun::tokenizer::trie::SerializedTrie *)((char *)this + 8));
  JUMPOUT(0x1D179D2ECLL);
}

marisa::grimoire::trie::LoudsTrie **morphun::dictionary::metadata::MarisaTrie<int>::~MarisaTrie(uint64_t a1)
{
  uint64_t v2;

  if (*(_BYTE *)(a1 + 48))
  {
    v2 = *(_QWORD *)(a1 + 32);
    if (v2)
      MEMORY[0x1D179D2D4](v2, 0x1000C8000313F17);
  }
  return marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr((marisa::grimoire::trie::LoudsTrie **)a1);
}

uint64_t morphun::dictionary::metadata::MarisaTrie<int>::MarisaTrie(uint64_t a1, _QWORD *a2)
{
  unint64_t v4;
  _QWORD *v5;
  morphun::util::StringUtils *v6;
  _QWORD *exception;
  std::basic_string<char16_t>::size_type v9;
  void *v10[2];
  _OWORD v11[2];
  _OWORD v12[3];
  uint64_t v13;
  std::basic_string<char16_t> v14;

  morphun::util::Validate::notNull<morphun::util::MemoryMappedFile>((uint64_t)a2);
  LODWORD(v10[0]) = 0;
  morphun::util::MemoryMappedFile::read<int>(a2, v10);
  v4 = LODWORD(v10[0]);
  v5 = (_QWORD *)morphun::util::Validate::notNull<morphun::util::MemoryMappedFile>((uint64_t)a2);
  LOWORD(v10[0]) = 0;
  morphun::util::MemoryMappedFile::read<short>(v5, v10);
  v6 = (morphun::util::StringUtils *)SLOWORD(v10[0]);
  *(_QWORD *)a1 = 0;
  if ((unint64_t)v6 >= 3)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string(v6, &v14);
    std::basic_string<char16_t>::insert(&v14, (std::basic_string<char16_t>::size_type)"U", (const std::basic_string<char16_t>::value_type *)0x17, v9);
    *(_OWORD *)v10 = *(_OWORD *)&v14.__r_.__value_.__l.__data_;
    *(_QWORD *)&v11[0] = *((_QWORD *)&v14.__r_.__value_.__l + 2);
    memset(&v14, 0, sizeof(v14));
    morphun::exception::Throwable::Throwable((uint64_t)exception, (__int128 *)v10);
    *exception = &off_1E86730F0;
  }
  morphun::dictionary::metadata::CharsetConverter::CharsetConverter((morphun::dictionary::metadata::CharsetConverter *)(a1 + 8), (&off_1E8686A88)[v6]);
  morphun::dictionary::metadata::CompressedArray<int>::CompressedArray((int *)(a1 + 24), a2);
  *(_BYTE *)(a1 + 56) = (_BYTE)v6;
  if ((int)v4 < 1)
  {
    v13 = 0;
    memset(v12, 0, sizeof(v12));
    *(_OWORD *)v10 = 0u;
    memset(v11, 0, sizeof(v11));
    marisa::Trie::build((marisa::grimoire::trie::LoudsTrie **)a1, (marisa::Keyset *)v10);
    marisa::scoped_array<marisa::scoped_array<marisa::Key>>::~scoped_array((uint64_t *)v12);
    marisa::scoped_array<marisa::scoped_array<char>>::~scoped_array((uint64_t *)v11 + 1);
    marisa::scoped_array<marisa::scoped_array<char>>::~scoped_array((uint64_t *)v10);
  }
  else
  {
    npc<morphun::util::MemoryMappedFile>((uint64_t)a2);
    v10[0] = 0;
    morphun::util::MemoryMappedFile::read<char *>(a2, v10, v4);
    marisa::Trie::map((marisa::grimoire::trie::LoudsTrie **)a1, v10[0], v4);
  }
  return a1;
}

void sub_1CB4E00DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  marisa::grimoire::trie::LoudsTrie **v14;
  void *v15;
  int v16;
  uint64_t v17;

  if (a14 < 0)
    operator delete(__p);
  if (*(char *)(v17 - 49) < 0)
  {
    operator delete(*(void **)(v17 - 72));
    if ((v16 & 1) == 0)
    {
LABEL_8:
      marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(v14);
      _Unwind_Resume(a1);
    }
  }
  else if (!v16)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v15);
  goto LABEL_8;
}

uint64_t morphun::util::Validate::notNull<morphun::util::MemoryMappedFile>(uint64_t result)
{
  _QWORD *exception;
  __int128 __dst;

  if (!result)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "I");
    morphun::exception::Throwable::Throwable((uint64_t)exception, &__dst);
    *exception = &off_1E8673090;
  }
  return result;
}

void sub_1CB4E0234(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

_QWORD *morphun::util::MemoryMappedFile::read<int>(_QWORD *result, _DWORD *a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *exception;
  std::basic_string<char16_t>::size_type v5;
  std::basic_string<char16_t> *v6;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t> v8;
  std::basic_string<char16_t> v9;
  std::basic_string<char16_t> v10;
  std::basic_string<char16_t> v11;
  std::basic_string<char16_t> v12;

  v2 = result;
  v3 = result[2];
  if ((unint64_t)(result[1] - v3) <= 3)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)4, &v9);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v10, "I", &v9, v5);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v11, &v10, (std::basic_string<char16_t>::value_type *)" ");
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(*((_DWORD *)v2 + 2) - *((_DWORD *)v2 + 4)), &v8);
    if ((v8.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v6 = &v8;
    else
      v6 = (std::basic_string<char16_t> *)v8.__r_.__value_.__r.__words[0];
    if ((v8.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v8.__r_.__value_.__r.__words[2]);
    else
      size = v8.__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::append(&v11, (const std::basic_string<char16_t>::value_type *)v6, size);
    v12 = v11;
    memset(&v11, 0, sizeof(v11));
    morphun::exception::Throwable::Throwable((uint64_t)exception, (__int128 *)&v12);
    *exception = &off_1E8672FA0;
  }
  *a2 = *(_DWORD *)(*result + v3);
  result[2] = v3 + 4;
  return result;
}

void sub_1CB4E0394(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  void *v29;
  void *v30;
  int v31;
  int v32;
  uint64_t v33;

  if (*(char *)(v33 - 57) < 0)
    operator delete(*(void **)(v33 - 80));
  if (v32 < 0)
    operator delete(v30);
  if (a29 < 0)
    operator delete(__p);
  if (a23 < 0)
    operator delete(a18);
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v31 & 1) == 0)
LABEL_14:
      _Unwind_Resume(a1);
  }
  else if (!v31)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v29);
  goto LABEL_14;
}

_QWORD *morphun::util::MemoryMappedFile::read<short>(_QWORD *result, _WORD *a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *exception;
  std::basic_string<char16_t>::size_type v5;
  std::basic_string<char16_t> *v6;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t> v8;
  std::basic_string<char16_t> v9;
  std::basic_string<char16_t> v10;
  std::basic_string<char16_t> v11;
  std::basic_string<char16_t> v12;

  v2 = result;
  v3 = result[2];
  if ((unint64_t)(result[1] - v3) <= 1)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)2, &v9);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v10, "I", &v9, v5);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v11, &v10, (std::basic_string<char16_t>::value_type *)" ");
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(*((_DWORD *)v2 + 2) - *((_DWORD *)v2 + 4)), &v8);
    if ((v8.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v6 = &v8;
    else
      v6 = (std::basic_string<char16_t> *)v8.__r_.__value_.__r.__words[0];
    if ((v8.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v8.__r_.__value_.__r.__words[2]);
    else
      size = v8.__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::append(&v11, (const std::basic_string<char16_t>::value_type *)v6, size);
    v12 = v11;
    memset(&v11, 0, sizeof(v11));
    morphun::exception::Throwable::Throwable((uint64_t)exception, (__int128 *)&v12);
    *exception = &off_1E8672FA0;
  }
  *a2 = *(_WORD *)(*result + v3);
  result[2] = v3 + 2;
  return result;
}

void sub_1CB4E056C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  void *v29;
  void *v30;
  int v31;
  int v32;
  uint64_t v33;

  if (*(char *)(v33 - 57) < 0)
    operator delete(*(void **)(v33 - 80));
  if (v32 < 0)
    operator delete(v30);
  if (a29 < 0)
    operator delete(__p);
  if (a23 < 0)
    operator delete(a18);
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v31 & 1) == 0)
LABEL_14:
      _Unwind_Resume(a1);
  }
  else if (!v31)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v29);
  goto LABEL_14;
}

int *morphun::dictionary::metadata::CompressedArray<int>::CompressedArray(int *a1, _QWORD *a2)
{
  _DWORD *v4;
  _QWORD *v5;

  v4 = a1 + 1;
  *(_QWORD *)a1 = 0;
  *((_BYTE *)a1 + 24) = 0;
  *((_QWORD *)a1 + 2) = 0;
  *((_QWORD *)a1 + 1) = 0;
  v5 = a1 + 2;
  npc<morphun::util::MemoryMappedFile>((uint64_t)a2);
  morphun::util::MemoryMappedFile::read<int>(a2, a1);
  morphun::util::MemoryMappedFile::read<int>(a2, v4);
  morphun::util::MemoryMappedFile::read<unsigned long long *>(a2, v5, 8 * *a1);
  *((_QWORD *)a1 + 2) = ~(-1 << a1[1]);
  return a1;
}

uint64_t npc<morphun::util::MemoryMappedFile>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4E06EC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *morphun::util::MemoryMappedFile::read<char *>(_QWORD *result, _QWORD *a2, unint64_t a3)
{
  int v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *exception;
  std::basic_string<char16_t>::size_type v7;
  std::basic_string<char16_t> *v8;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t> v10;
  std::basic_string<char16_t> v11;
  std::basic_string<char16_t> v12;
  std::basic_string<char16_t> v13;
  std::basic_string<char16_t> v14;

  v3 = a3;
  v4 = result;
  v5 = result[2];
  if (result[1] - v5 < a3)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)v3, &v11);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v12, "I", &v11, v7);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v13, &v12, (std::basic_string<char16_t>::value_type *)" ");
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(*((_DWORD *)v4 + 2) - *((_DWORD *)v4 + 4)), &v10);
    if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v8 = &v10;
    else
      v8 = (std::basic_string<char16_t> *)v10.__r_.__value_.__r.__words[0];
    if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v10.__r_.__value_.__r.__words[2]);
    else
      size = v10.__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::append(&v13, (const std::basic_string<char16_t>::value_type *)v8, size);
    v14 = v13;
    memset(&v13, 0, sizeof(v13));
    morphun::exception::Throwable::Throwable((uint64_t)exception, (__int128 *)&v14);
    *exception = &off_1E8672FA0;
  }
  *a2 = *result + v5;
  result[2] = v5 + a3;
  return result;
}

void sub_1CB4E082C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  void *v29;
  void *v30;
  int v31;
  int v32;
  uint64_t v33;

  if (*(char *)(v33 - 57) < 0)
    operator delete(*(void **)(v33 - 80));
  if (v32 < 0)
    operator delete(v30);
  if (a29 < 0)
    operator delete(__p);
  if (a23 < 0)
    operator delete(a18);
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v31 & 1) == 0)
LABEL_14:
      _Unwind_Resume(a1);
  }
  else if (!v31)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v29);
  goto LABEL_14;
}

uint64_t *marisa::scoped_array<marisa::scoped_array<marisa::Key>>::~scoped_array(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  if (*a1)
  {
    v5 = *(_QWORD *)(v2 - 8);
    v4 = v2 - 8;
    v3 = v5;
    if (v5)
    {
      v6 = 8 * v3;
      do
      {
        v7 = *(_QWORD *)(v4 + v6);
        if (v7)
          MEMORY[0x1D179D2D4](v7, 0x1050C80717B85FCLL);
        v6 -= 8;
      }
      while (v6);
    }
    MEMORY[0x1D179D2D4](v4 - 8, 0x20C8093837F09);
  }
  return a1;
}

uint64_t *marisa::scoped_array<marisa::scoped_array<char>>::~scoped_array(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  if (*a1)
  {
    v5 = *(_QWORD *)(v2 - 8);
    v4 = v2 - 8;
    v3 = v5;
    if (v5)
    {
      v6 = 8 * v3;
      do
      {
        v7 = *(_QWORD *)(v4 + v6);
        if (v7)
          MEMORY[0x1D179D2D4](v7, 0x1000C8077774924);
        v6 -= 8;
      }
      while (v6);
    }
    MEMORY[0x1D179D2D4](v4 - 8, 0x10C80436913F5);
  }
  return a1;
}

void marisa::Keyset::~Keyset(marisa::Keyset *this)
{
  marisa::scoped_array<marisa::scoped_array<marisa::Key>>::~scoped_array((uint64_t *)this + 6);
  marisa::scoped_array<marisa::scoped_array<char>>::~scoped_array((uint64_t *)this + 3);
  marisa::scoped_array<marisa::scoped_array<char>>::~scoped_array((uint64_t *)this);
}

_QWORD *morphun::util::MemoryMappedFile::read<unsigned long long *>(_QWORD *result, _QWORD *a2, unint64_t a3)
{
  int v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *exception;
  std::basic_string<char16_t>::size_type v7;
  std::basic_string<char16_t> *v8;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t> v10;
  std::basic_string<char16_t> v11;
  std::basic_string<char16_t> v12;
  std::basic_string<char16_t> v13;
  std::basic_string<char16_t> v14;

  v3 = a3;
  v4 = result;
  v5 = result[2];
  if (result[1] - v5 < a3)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)v3, &v11);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v12, "I", &v11, v7);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v13, &v12, (std::basic_string<char16_t>::value_type *)" ");
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(*((_DWORD *)v4 + 2) - *((_DWORD *)v4 + 4)), &v10);
    if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v8 = &v10;
    else
      v8 = (std::basic_string<char16_t> *)v10.__r_.__value_.__r.__words[0];
    if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v10.__r_.__value_.__r.__words[2]);
    else
      size = v10.__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::append(&v13, (const std::basic_string<char16_t>::value_type *)v8, size);
    v14 = v13;
    memset(&v13, 0, sizeof(v13));
    morphun::exception::Throwable::Throwable((uint64_t)exception, (__int128 *)&v14);
    *exception = &off_1E8672FA0;
  }
  *a2 = *result + v5;
  result[2] = v5 + a3;
  return result;
}

void sub_1CB4E0B30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  void *v29;
  void *v30;
  int v31;
  int v32;
  uint64_t v33;

  if (*(char *)(v33 - 57) < 0)
    operator delete(*(void **)(v33 - 80));
  if (v32 < 0)
    operator delete(v30);
  if (a29 < 0)
    operator delete(__p);
  if (a23 < 0)
    operator delete(a18);
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v31 & 1) == 0)
LABEL_14:
      _Unwind_Resume(a1);
  }
  else if (!v31)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v29);
  goto LABEL_14;
}

_QWORD *morphun::util::MemoryMappedFile::read<char const*>(_QWORD *result, _QWORD *a2, unint64_t a3)
{
  int v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *exception;
  std::basic_string<char16_t>::size_type v7;
  std::basic_string<char16_t> *v8;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t> v10;
  std::basic_string<char16_t> v11;
  std::basic_string<char16_t> v12;
  std::basic_string<char16_t> v13;
  std::basic_string<char16_t> v14;

  v3 = a3;
  v4 = result;
  v5 = result[2];
  if (result[1] - v5 < a3)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)v3, &v11);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v12, "I", &v11, v7);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v13, &v12, (std::basic_string<char16_t>::value_type *)" ");
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(*((_DWORD *)v4 + 2) - *((_DWORD *)v4 + 4)), &v10);
    if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v8 = &v10;
    else
      v8 = (std::basic_string<char16_t> *)v10.__r_.__value_.__r.__words[0];
    if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v10.__r_.__value_.__r.__words[2]);
    else
      size = v10.__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::append(&v13, (const std::basic_string<char16_t>::value_type *)v8, size);
    v14 = v13;
    memset(&v13, 0, sizeof(v13));
    morphun::exception::Throwable::Throwable((uint64_t)exception, (__int128 *)&v14);
    *exception = &off_1E8672FA0;
  }
  *a2 = *result + v5;
  result[2] = v5 + a3;
  return result;
}

void sub_1CB4E0D0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  void *v29;
  void *v30;
  int v31;
  int v32;
  uint64_t v33;

  if (*(char *)(v33 - 57) < 0)
    operator delete(*(void **)(v33 - 80));
  if (v32 < 0)
    operator delete(v30);
  if (a29 < 0)
    operator delete(__p);
  if (a23 < 0)
    operator delete(a18);
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v31 & 1) == 0)
LABEL_14:
      _Unwind_Resume(a1);
  }
  else if (!v31)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v29);
  goto LABEL_14;
}

_QWORD *morphun::util::MemoryMappedFile::read<long long>(_QWORD *result, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *exception;
  std::basic_string<char16_t>::size_type v5;
  std::basic_string<char16_t> *v6;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t> v8;
  std::basic_string<char16_t> v9;
  std::basic_string<char16_t> v10;
  std::basic_string<char16_t> v11;
  std::basic_string<char16_t> v12;

  v2 = result;
  v3 = result[2];
  if ((unint64_t)(result[1] - v3) <= 7)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)8, &v9);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v10, "I", &v9, v5);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v11, &v10, (std::basic_string<char16_t>::value_type *)" ");
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(*((_DWORD *)v2 + 2) - *((_DWORD *)v2 + 4)), &v8);
    if ((v8.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v6 = &v8;
    else
      v6 = (std::basic_string<char16_t> *)v8.__r_.__value_.__r.__words[0];
    if ((v8.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v8.__r_.__value_.__r.__words[2]);
    else
      size = v8.__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::append(&v11, (const std::basic_string<char16_t>::value_type *)v6, size);
    v12 = v11;
    memset(&v11, 0, sizeof(v11));
    morphun::exception::Throwable::Throwable((uint64_t)exception, (__int128 *)&v12);
    *exception = &off_1E8672FA0;
  }
  *a2 = *(_QWORD *)(*result + v3);
  result[2] = v3 + 8;
  return result;
}

void sub_1CB4E0EE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  void *v29;
  void *v30;
  int v31;
  int v32;
  uint64_t v33;

  if (*(char *)(v33 - 57) < 0)
    operator delete(*(void **)(v33 - 80));
  if (v32 < 0)
    operator delete(v30);
  if (a29 < 0)
    operator delete(__p);
  if (a23 < 0)
    operator delete(a18);
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v31 & 1) == 0)
LABEL_14:
      _Unwind_Resume(a1);
  }
  else if (!v31)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v29);
  goto LABEL_14;
}

_QWORD *morphun::tokenizer::trie::SerializedTrie::SerializedTrie(_QWORD *a1, const void **a2)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *exception;
  _QWORD *v8;
  _QWORD *v9;
  std::basic_string<char16_t> v10;
  __int128 v11;
  const char *v12;

  *a1 = &off_1E86736D0;
  v4 = a1 + 1;
  v5 = (_QWORD *)morphun::util::MemoryMappedFile::MemoryMappedFile((uint64_t)(a1 + 1), (uint64_t)a2);
  v12 = 0;
  morphun::util::MemoryMappedFile::read<char const*>(v5, &v12, 8uLL);
  if (strncmp(v12, "MORPHTK", 8uLL))
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::operator+<char16_t>((uint64_t)&v10, "I", a2);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v11, &v10, L" has an invalid header");
    morphun::exception::Throwable::Throwable((uint64_t)exception, &v11);
    *exception = &off_1E8672FA0;
  }
  *(_QWORD *)&v11 = 0;
  morphun::util::MemoryMappedFile::read<long long>(v4, &v11);
  if ((_QWORD)v11 != 2)
  {
    v8 = __cxa_allocate_exception(0x38uLL);
    std::operator+<char16_t>((uint64_t)&v10, "I", a2);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v11, &v10, (std::basic_string<char16_t>::value_type *)" ");
    morphun::exception::Throwable::Throwable((uint64_t)v8, &v11);
    *v8 = &off_1E86731F0;
  }
  LOWORD(v11) = 0;
  morphun::util::MemoryMappedFile::read<short>(v4, &v11);
  if ((unsigned __int16)v11 != 1)
  {
    v9 = __cxa_allocate_exception(0x38uLL);
    std::operator+<char16_t>((uint64_t)&v10, "I", a2);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v11, &v10, L" was built for a different architecture");
    morphun::exception::Throwable::Throwable((uint64_t)v9, &v11);
    *v9 = &off_1E8672FA0;
  }
  morphun::dictionary::metadata::MarisaTrie<int>::MarisaTrie((uint64_t)(a1 + 5), v4);
  return a1;
}

void sub_1CB4E119C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  morphun::util::MemoryMappedFile *v21;
  void *v22;
  int v23;

  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v23 & 1) == 0)
      goto LABEL_8;
  }
  else if (!v23)
  {
LABEL_8:
    morphun::util::MemoryMappedFile::~MemoryMappedFile(v21);
    _Unwind_Resume(a1);
  }
  __cxa_free_exception(v22);
  goto LABEL_8;
}

void morphun::tokenizer::locale::th::ThWordAndDelimiterTokenExtractor::~ThWordAndDelimiterTokenExtractor(morphun::tokenizer::locale::th::ThWordAndDelimiterTokenExtractor *this)
{
  *(_QWORD *)this = &off_1E86738E8;
  icu4cxx::UnicodeSet::~UnicodeSet((morphun::tokenizer::locale::th::ThWordAndDelimiterTokenExtractor *)((char *)this + 152));
  morphun::tokenizer::TokenExtractor::~TokenExtractor(this, (uint64_t *)&off_1E8669ED8);
}

{
  *(_QWORD *)this = &off_1E86738E8;
  icu4cxx::UnicodeSet::~UnicodeSet((morphun::tokenizer::locale::th::ThWordAndDelimiterTokenExtractor *)((char *)this + 152));
  morphun::tokenizer::TokenExtractor::~TokenExtractor(this, (uint64_t *)&off_1E8669ED8);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::tokenizer::locale::th::ThWordAndDelimiterTokenExtractor::createIterator(uint64_t a1, const UniChar *a2, CFIndex a3)
{
  uint64_t v6;
  std::mutex *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *exception;
  __int128 __dst;

  v6 = operator new();
  *(_QWORD *)v6 = &off_1E8673898;
  *(_QWORD *)(v6 + 8) = a1;
  v7 = (std::mutex *)morphun::tokenizer::locale::th::CLASS_MUTEX((morphun::tokenizer::locale::th *)v6);
  std::mutex::lock(v7);
  v8 = (_QWORD *)morphun::tokenizer::locale::th::gTokenizerCache;
  if (morphun::tokenizer::locale::th::gTokenizerCache)
  {
    v9 = *(_QWORD *)morphun::tokenizer::locale::th::gTokenizerCache;
  }
  else
  {
    v8 = (_QWORD *)operator new();
    v9 = 0;
    *v8 = 0;
    v8[1] = 0;
    v8[2] = 0;
    morphun::tokenizer::locale::th::gTokenizerCache = (uint64_t)v8;
  }
  v10 = v8[1];
  if (v9 == v10)
  {
    v11 = ThaiTokenizerCreate();
    if (v11)
      goto LABEL_6;
LABEL_8:
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"ThaiTokenizerCreate returned null. Perhaps the data files could not be found.");
    morphun::exception::Throwable::Throwable((uint64_t)exception, &__dst);
    *exception = &off_1E8673220;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v8[1] = v10 - 8;
  if (!v11)
    goto LABEL_8;
LABEL_6:
  std::mutex::unlock(v7);
  *(_QWORD *)(v6 + 16) = v11;
  morphun::tokenizer::ICUTokenExtractorIterator::ICUTokenExtractorIterator(v6 + 24);
  *(_DWORD *)(v6 + 80) = 0;
  *(_OWORD *)(v6 + 48) = 0u;
  *(_OWORD *)(v6 + 64) = 0u;
  morphun::tokenizer::locale::th::ThTokenExtractorIterator::reset(v6, a2, a3);
  return v6;
}

void sub_1CB4E1430(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;
  std::mutex *v16;

  std::mutex::unlock(v16);
  MEMORY[0x1D179D2EC](v15, 0x10F1C4066D5B73CLL);
  _Unwind_Resume(a1);
}

void morphun::dialog::ArticleDetectionFunction::~ArticleDetectionFunction(morphun::dialog::ArticleDetectionFunction *this)
{
  *(_QWORD *)this = &off_1E866B188;
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 21));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 18));
}

{
  *(_QWORD *)this = &off_1E866B188;
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 21));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 18));
  JUMPOUT(0x1D179D2ECLL);
}

_QWORD *morphun::dialog::ArticleDetectionFunction::getFeatureValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unint64_t v5;
  _QWORD *v6;
  const UChar *v7;
  unint64_t v8;
  char *v9;
  char *v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  unsigned __int16 *v14;
  unsigned __int16 *v15;
  unint64_t v16;
  unint64_t v17;
  unsigned __int16 *v18;
  int v19;
  int v20;
  int v21;
  int v22;
  BOOL v23;
  char v24;
  _QWORD *v25;
  _QWORD *v26;
  BOOL v27;
  _QWORD *v28;
  char v29;
  unint64_t v30;
  unsigned __int16 *v31;
  unsigned __int16 *v32;
  unint64_t v33;
  unint64_t v34;
  unsigned __int16 *v35;
  int v36;
  int v37;
  int v38;
  int v39;
  char v40;
  _QWORD *v41;
  _QWORD *v42;
  std::basic_string<char16_t> *v43;
  int v44;
  void *__p[2];
  std::basic_string<char16_t>::size_type v47;
  void *v48;
  unint64_t v49;
  uint64_t v50;

  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
  v4 = *(char *)(v3 + 23);
  if (v4 >= 0)
    v5 = *(unsigned __int8 *)(v3 + 23);
  else
    v5 = *(_QWORD *)(v3 + 8);
  if (v5 < 2)
    return 0;
  v48 = 0;
  v49 = 0;
  v50 = 0;
  if (v4 >= 0)
    v7 = (const UChar *)v3;
  else
    v7 = *(const UChar **)v3;
  morphun::util::StringViewUtils::lowercase((uint64_t)&v48, v7, v5, a1 + 8);
  if (*(_BYTE *)(a1 + 184))
  {
    v8 = HIBYTE(v50);
    v9 = (char *)&v48;
    if (v50 < 0)
    {
      v9 = (char *)v48;
      v8 = v49;
    }
    if (v8)
    {
      v10 = v9;
      while (*(_WORD *)v10 != 39)
      {
        v10 += 2;
        if (!--v8)
          goto LABEL_19;
      }
      if (v10 - v9 != -2)
        *(_WORD *)v10 = 8217;
    }
  }
LABEL_19:
  v11 = *(_QWORD **)(a1 + 136);
  if (v11 == (_QWORD *)(a1 + 144))
  {
    v12 = 0;
    goto LABEL_44;
  }
  v12 = 0;
  v13 = HIBYTE(v50);
  v14 = (unsigned __int16 *)&v48;
  if (v50 < 0)
  {
    v14 = (unsigned __int16 *)v48;
    v13 = v49;
  }
  while (1)
  {
    if (*((char *)v11 + 55) < 0)
    {
      v15 = (unsigned __int16 *)v11[4];
      v16 = v11[5];
    }
    else
    {
      v15 = (unsigned __int16 *)(v11 + 4);
      v16 = *((unsigned __int8 *)v11 + 55);
    }
    if (v13 < v16)
      goto LABEL_35;
    if (!v16)
      break;
    v17 = v16 - 1;
    v18 = v14;
    do
    {
      v20 = *v18++;
      v19 = v20;
      v22 = *v15++;
      v21 = v22;
      v23 = v17-- != 0;
      v24 = v23;
    }
    while (v21 == v19 && (v24 & 1) != 0);
    if (v21 == v19)
      break;
    v12 |= v21 == v19;
LABEL_35:
    v25 = (_QWORD *)v11[1];
    if (v25)
    {
      do
      {
        v26 = v25;
        v25 = (_QWORD *)*v25;
      }
      while (v25);
    }
    else
    {
      do
      {
        v26 = (_QWORD *)v11[2];
        v27 = *v26 == (_QWORD)v11;
        v11 = v26;
      }
      while (!v27);
    }
    v11 = v26;
    if (v26 == (_QWORD *)(a1 + 144))
      goto LABEL_44;
  }
  v12 = 1;
LABEL_44:
  v28 = *(_QWORD **)(a1 + 160);
  if (v28 != (_QWORD *)(a1 + 168))
  {
    v29 = 0;
    v30 = HIBYTE(v50);
    v31 = (unsigned __int16 *)&v48;
    if (v50 < 0)
    {
      v31 = (unsigned __int16 *)v48;
      v30 = v49;
    }
    do
    {
      if (*((char *)v28 + 55) < 0)
      {
        v32 = (unsigned __int16 *)v28[4];
        v33 = v28[5];
      }
      else
      {
        v32 = (unsigned __int16 *)(v28 + 4);
        v33 = *((unsigned __int8 *)v28 + 55);
      }
      if (v30 >= v33)
      {
        if (!v33)
          goto LABEL_72;
        v34 = v33 - 1;
        v35 = v31;
        do
        {
          v37 = *v35++;
          v36 = v37;
          v39 = *v32++;
          v38 = v39;
          v23 = v34-- != 0;
          v40 = v23;
        }
        while (v38 == v36 && (v40 & 1) != 0);
        if (v38 == v36)
        {
LABEL_72:
          v29 = 1;
          goto LABEL_73;
        }
        v29 |= v38 == v36;
      }
      v41 = (_QWORD *)v28[1];
      if (v41)
      {
        do
        {
          v42 = v41;
          v41 = (_QWORD *)*v41;
        }
        while (v41);
      }
      else
      {
        do
        {
          v42 = (_QWORD *)v28[2];
          v27 = *v42 == (_QWORD)v28;
          v28 = v42;
        }
        while (!v27);
      }
      v28 = v42;
    }
    while (v42 != (_QWORD *)(a1 + 168));
    if ((v12 & 1) != 0)
      goto LABEL_69;
    goto LABEL_73;
  }
  v29 = 0;
  if ((v12 & 1) == 0)
    goto LABEL_73;
LABEL_69:
  if ((v29 & 1) != 0)
  {
LABEL_73:
    if (v12 & 1 | ((v29 & 1) == 0))
    {
      v6 = 0;
    }
    else
    {
      v6 = (_QWORD *)operator new();
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "i");
      *v6 = &off_1E866AD28;
      v43 = (std::basic_string<char16_t> *)(v6 + 1);
      if ((SHIBYTE(v47) & 0x80000000) == 0)
        goto LABEL_76;
LABEL_77:
      std::basic_string<char16_t>::__init_copy_ctor_external(v43, (const std::basic_string<char16_t>::value_type *)__p[0], (std::basic_string<char16_t>::size_type)__p[1]);
      v44 = SHIBYTE(v47);
      v6[4] = 0;
      if (v44 < 0)
        operator delete(__p[0]);
    }
  }
  else
  {
    v6 = (_QWORD *)operator new();
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"definite");
    *v6 = &off_1E866AD28;
    v43 = (std::basic_string<char16_t> *)(v6 + 1);
    if (SHIBYTE(v47) < 0)
      goto LABEL_77;
LABEL_76:
    *(_OWORD *)&v43->__r_.__value_.__l.__data_ = *(_OWORD *)__p;
    v43->__r_.__value_.__r.__words[2] = v47;
    v6[4] = 0;
  }
  if (SHIBYTE(v50) < 0)
    operator delete(v48);
  return v6;
}

void sub_1CB4E18BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  uint64_t v20;

  if (a14 < 0)
    operator delete(__p);
  MEMORY[0x1D179D2EC](v20, 0x10B3C40F7FF9C27);
  if (a20 < 0)
    operator delete(a15);
  _Unwind_Resume(a1);
}

void std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(_QWORD *a1)
{
  if (a1)
  {
    std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(*a1);
    std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(a1[1]);
    (*(void (**)(_QWORD *))(a1[4] + 8))(a1 + 4);
    operator delete(a1);
  }
}

uint64_t morphun::dialog::getFeatureValues(uint64_t **a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v7;
  std::basic_string<char16_t>::size_type size;
  void *v9;
  std::basic_string<char16_t> *p_p;
  _BOOL4 v11;
  int v12;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  std::basic_string<char16_t>::size_type v18;
  std::basic_string<char16_t>::size_type v19;
  std::basic_string<char16_t> *v20;
  char *v21;
  int64_t v22;
  BOOL v23;
  morphun::exception::NullPointerException *exception;
  std::basic_string<char16_t> v27;
  std::basic_string<char16_t> __p;

  v3 = *a2;
  v4 = a2[1];
  if (*a2 == v4)
    goto LABEL_55;
  v7 = 0;
  while (1)
  {
    (*(void (**)(std::basic_string<char16_t> *__return_ptr, uint64_t))(*(_QWORD *)v3 + 24))(&__p, v3);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      break;
    if (*((_BYTE *)&__p.__r_.__value_.__s + 23))
    {
      size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      goto LABEL_7;
    }
LABEL_19:
    v3 += 56;
    if (v3 == v4)
      goto LABEL_20;
  }
  size = __p.__r_.__value_.__l.__size_;
  if (!__p.__r_.__value_.__l.__size_)
  {
    v12 = 3;
    v9 = (void *)__p.__r_.__value_.__r.__words[0];
LABEL_13:
    operator delete(v9);
    goto LABEL_14;
  }
LABEL_7:
  v9 = (void *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
  v11 = p_p->__r_.__value_.__s.__data_[size - 1] == 32;
  v12 = 2 * v11;
  v7 |= v11;
  if ((*((_BYTE *)&__p.__r_.__value_.__s + 23) & 0x80) != 0)
    goto LABEL_13;
LABEL_14:
  if (v12 == 3 || v12 == 0)
    goto LABEL_19;
LABEL_20:
  v14 = *a2;
  v15 = a2[1];
  if (*a2 != v15)
  {
    v16 = 0;
    while (1)
    {
      (*(void (**)(std::basic_string<char16_t> *__return_ptr, uint64_t))(*(_QWORD *)v14 + 24))(&__p, v14);
      v17 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
      v18 = __p.__r_.__value_.__l.__size_;
      v19 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
          ? HIBYTE(__p.__r_.__value_.__r.__words[2])
          : __p.__r_.__value_.__l.__size_;
      if (v19
        && a3 + 8 == std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a3, (unsigned __int16 *)&__p))
      {
        break;
      }
      if ((v17 & 0x80) != 0)
        goto LABEL_28;
LABEL_29:
      v14 += 56;
      if (v14 == v15)
        return v16 & 1;
    }
    if ((v16 & 1) != 0)
    {
      v16 = 1;
    }
    else
    {
      v20 = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
      if (v17 >= 0)
        v20 = &__p;
      v21 = (char *)v20;
      while (*(_WORD *)v21 != 8217)
      {
        v21 += 2;
        if (!--v19)
        {
          v21 = 0;
          break;
        }
      }
      v22 = v21 - (char *)v20;
      if (v21)
        v23 = v22 == -2;
      else
        v23 = 1;
      v16 = !v23;
    }
    if (!a1)
    {
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
    if ((v7 & 1) != 0)
    {
      if (v17 < 0)
        std::basic_string<char16_t>::__init_copy_ctor_external(&v27, __p.__r_.__value_.__l.__data_, v18);
      else
        v27 = __p;
    }
    else
    {
      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v27, (const void **)&__p.__r_.__value_.__l.__data_, 32);
    }
    std::__tree<std::basic_string<char16_t>>::__emplace_unique_key_args<std::basic_string<char16_t>,std::basic_string<char16_t>>(a1, (unsigned __int16 *)&v27, (uint64_t)&v27);
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v27.__r_.__value_.__l.__data_);
    if ((*((_BYTE *)&__p.__r_.__value_.__s + 23) & 0x80) == 0)
      goto LABEL_29;
LABEL_28:
    operator delete(__p.__r_.__value_.__l.__data_);
    goto LABEL_29;
  }
LABEL_55:
  v16 = 0;
  return v16 & 1;
}

void sub_1CB4E1BB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  char *v2;
  char *v4;
  void *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  BOOL v9;

  v1 = *a1;
  v2 = (char *)**a1;
  if (v2)
  {
    v4 = (char *)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      v6 = v4 - 56;
      v7 = v4 - 56;
      do
      {
        v8 = *(_QWORD *)v7;
        v7 -= 56;
        (*(void (**)(char *))(v8 + 8))(v6);
        v9 = v6 == v2;
        v6 = v7;
      }
      while (!v9);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t *std::__tree<std::basic_string<char16_t>>::__emplace_unique_key_args<std::basic_string<char16_t>,std::basic_string<char16_t>>(uint64_t **a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t *result;
  uint64_t **v6;
  _OWORD *v7;
  uint64_t v8;

  result = std::__tree<std::basic_string<char16_t>>::__find_equal<std::basic_string<char16_t>>((uint64_t)a1, &v8, a2);
  if (!*result)
  {
    v6 = (uint64_t **)result;
    v7 = operator new(0x38uLL);
    v7[2] = *(_OWORD *)a3;
    *((_QWORD *)v7 + 6) = *(_QWORD *)(a3 + 16);
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
    return std::__tree<std::u16string_view>::__insert_node_at(a1, v8, v6, (uint64_t *)v7);
  }
  return result;
}

uint64_t morphun::dialog::ArticleDetectionFunction::ArticleDetectionFunction(uint64_t a1, const morphun::util::ULocale *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v8;
  _OWORD *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  BOOL v13;
  char *v14;
  char *v15;
  BOOL v16;
  void *__p[2];
  uint64_t v23;
  std::basic_string<char16_t> v24;
  void *v25;
  void *v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29[15];
  uint64_t (**v30)(morphun::Object *__hidden);
  void *v31;

  *(_QWORD *)a1 = &off_1E866B188;
  morphun::util::ULocale::ULocale((morphun::util::ULocale *)(a1 + 8), a2);
  *(_QWORD *)(a1 + 168) = 0;
  *(_QWORD *)(a1 + 160) = a1 + 168;
  *(_QWORD *)(a1 + 144) = 0;
  *(_QWORD *)(a1 + 136) = a1 + 144;
  *(_QWORD *)(a1 + 152) = 0;
  *(_QWORD *)(a1 + 176) = 0;
  *(_BYTE *)(a1 + 184) = 0;
  v25 = 0;
  v26 = 0;
  v27 = 0;
  memset(&v24, 0, sizeof(v24));
  __p[0] = 0;
  __p[1] = 0;
  v23 = 0;
  morphun::util::ULocale::ULocale((uint64_t)&v28, (uint64_t)a2 + 8, (uint64_t)&v25, (uint64_t)&v24, (uint64_t)__p);
  morphun::lang::features::LanguageGrammarFeatures::getLanguageGrammarFeatures((morphun::lang::features::LanguageGrammarFeatures *)&v28, &v30);
  if (SHIBYTE(v23) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v24.__r_.__value_.__l.__data_);
  if (SHIBYTE(v27) < 0)
    operator delete(v25);
  morphun::lang::features::LanguageGrammarFeatures::getFeatures((morphun::lang::features::LanguageGrammarFeatures *)&v30, (uint64_t)&v28);
  v8 = v28;
  if (v28 != (char *)v29)
  {
    do
    {
      v25 = 0;
      v26 = 0;
      v27 = 0;
      std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__init_with_size[abi:ne180100]<morphun::lang::features::LanguageGrammarFeatures_Feature*,morphun::lang::features::LanguageGrammarFeatures_Feature*>((uint64_t)&v25, *((_QWORD *)v8 + 8), *((_QWORD *)v8 + 9), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*((_QWORD *)v8 + 9) - *((_QWORD *)v8 + 8)) >> 3));
      if (v25 != v26)
      {
        v9 = v8 + 40;
        if (v8[63] < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(&v24, *((const std::basic_string<char16_t>::value_type **)v8 + 5), *((_QWORD *)v8 + 6));
        }
        else
        {
          *(_OWORD *)&v24.__r_.__value_.__l.__data_ = *v9;
          v24.__r_.__value_.__r.__words[2] = *((_QWORD *)v8 + 7);
        }
        v10 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a3, (unsigned __int16 *)&v24);
        if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v24.__r_.__value_.__l.__data_);
        if (a3 + 8 != v10)
        {
          v11 = (morphun::dialog::getFeatureValues((uint64_t **)(a1 + 136), (uint64_t *)&v25, a4) & 1) != 0
             || *(_BYTE *)(a1 + 184) != 0;
          *(_BYTE *)(a1 + 184) = v11;
        }
        if (v8[63] < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(&v24, *((const std::basic_string<char16_t>::value_type **)v8 + 5), *((_QWORD *)v8 + 6));
        }
        else
        {
          *(_OWORD *)&v24.__r_.__value_.__l.__data_ = *v9;
          v24.__r_.__value_.__r.__words[2] = *((_QWORD *)v8 + 7);
        }
        v12 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a5, (unsigned __int16 *)&v24);
        if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v24.__r_.__value_.__l.__data_);
        if (a5 + 8 != v12)
        {
          v13 = (morphun::dialog::getFeatureValues((uint64_t **)(a1 + 160), (uint64_t *)&v25, a6) & 1) != 0
             || *(_BYTE *)(a1 + 184) != 0;
          *(_BYTE *)(a1 + 184) = v13;
        }
      }
      v24.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v25;
      std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100]((void ***)&v24);
      v14 = (char *)*((_QWORD *)v8 + 1);
      if (v14)
      {
        do
        {
          v15 = v14;
          v14 = *(char **)v14;
        }
        while (v14);
      }
      else
      {
        do
        {
          v15 = (char *)*((_QWORD *)v8 + 2);
          v16 = *(_QWORD *)v15 == (_QWORD)v8;
          v8 = v15;
        }
        while (!v16);
      }
      v8 = v15;
    }
    while (v15 != (char *)v29);
  }
  std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(v29[0]);
  v30 = &off_1E866A5F8;
  return a1;
}

void sub_1CB4E200C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char **a10, char **a11, void **a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,char a36,uint64_t a37)
{
  uint64_t v37;

  *(_QWORD *)(v37 - 240) = &off_1E866A5F8;
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*a10);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*a11);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::KoCommonConceptFactory_KoAndList::~KoCommonConceptFactory_KoAndList(morphun::dialog::language::KoCommonConceptFactory_KoAndList *this)
{
  morphun::dialog::SemanticConceptList::~SemanticConceptList(this, (uint64_t *)&off_1E8667FF8);
}

{
  morphun::dialog::SemanticConceptList::~SemanticConceptList(this, (uint64_t *)&off_1E8667FF8);
  JUMPOUT(0x1D179D2ECLL);
}

morphun::dialog::SemanticConceptList *morphun::dialog::language::KoCommonConceptFactory_KoAndList::clone(morphun::dialog::language::KoCommonConceptFactory_KoAndList *this)
{
  morphun::dialog::SemanticConceptList *v2;

  v2 = (morphun::dialog::SemanticConceptList *)operator new();
  *(_QWORD *)v2 = &off_1E865CBD0;
  morphun::dialog::SemanticConceptList::SemanticConceptList(v2, (const morphun::dialog::SemanticConceptList *)&off_1E8667FF8, this);
  *(_QWORD *)v2 = &off_1E866DF90;
  return v2;
}

void sub_1CB4E217C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10F3C40223A8A63);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::KoCommonConceptFactory_KoAndList::getBeforeLast(morphun::dialog::language::KoCommonConceptFactory_KoAndList *this@<X0>, const morphun::dialog::SpeakableString *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  void *__p[2];
  uint64_t v12;

  v8 = morphun::util::LocaleUtils::KOREAN(this);
  v9 = (*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(_QWORD *)a2 + 32))(a2);
  if (!morphun::dictionary::PhraseProperties::isEndsWithVowel(v8, v9))
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, byte_1CB72FDB4);
    *(_QWORD *)a3 = &off_1E866AD28;
    if (SHIBYTE(v12) < 0)
      goto LABEL_6;
LABEL_5:
    *(_OWORD *)(a3 + 8) = *(_OWORD *)__p;
    *(_QWORD *)(a3 + 24) = v12;
    *(_QWORD *)(a3 + 32) = 0;
    return;
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, asc_1CB72FDAE);
  *(_QWORD *)a3 = &off_1E866AD28;
  if ((SHIBYTE(v12) & 0x80000000) == 0)
    goto LABEL_5;
LABEL_6:
  std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a3 + 8), (const std::basic_string<char16_t>::value_type *)__p[0], (std::basic_string<char16_t>::size_type)__p[1]);
  v10 = SHIBYTE(v12);
  *(_QWORD *)(a3 + 32) = 0;
  if (v10 < 0)
    operator delete(__p[0]);
}

void sub_1CB4E228C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void morphun::exception::InvalidConfigurationException::~InvalidConfigurationException(std::exception *this)
{
  morphun::exception::Throwable::~Throwable(this);
  JUMPOUT(0x1D179D2ECLL);
}

double morphun::exception::InvalidConfigurationException::InvalidConfigurationException(morphun::exception::InvalidConfigurationException *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_QWORD *)this = &off_1E8673220;
  return result;
}

{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_QWORD *)this = &off_1E8673220;
  return result;
}

_QWORD *morphun::exception::InvalidConfigurationException::InvalidConfigurationException(uint64_t a1, __int128 *a2)
{
  _QWORD *result;

  result = (_QWORD *)morphun::exception::Throwable::Throwable(a1, a2);
  *result = &off_1E8673220;
  return result;
}

{
  _QWORD *result;

  result = (_QWORD *)morphun::exception::Throwable::Throwable(a1, a2);
  *result = &off_1E8673220;
  return result;
}

uint64_t **com::apple::siri::tokenizer::data::config_yue::getContent@<X0>(uint64_t **a1@<X8>)
{
  _OWORD v3[3];
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v3[0] = xmmword_1E86769A8;
  v3[1] = *(_OWORD *)&off_1E86769B8;
  v3[2] = xmmword_1E86769C8;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 2);
}

morphun::Token *morphun::Token_Word::newInstance(morphun::Token_Word *this, int a2)
{
  morphun::Token *v4;
  int v5;
  int v6;
  unint64_t *v7;
  unint64_t *v8;
  unint64_t *v9;
  int v10;
  unint64_t *v11;
  unint64_t v12;
  char v13;
  int v14;
  void *v15;
  unint64_t v16;

  v4 = (morphun::Token *)operator new();
  v5 = (*(uint64_t (**)(morphun::Token_Word *))(*(_QWORD *)this + 24))(this);
  v6 = (*(uint64_t (**)(morphun::Token_Word *))(*(_QWORD *)this + 32))(this);
  v9 = (unint64_t *)*((_QWORD *)this + 2);
  v8 = (unint64_t *)((char *)this + 16);
  v7 = v9;
  v10 = *((char *)v8 + 23);
  if (v10 >= 0)
    v11 = v8;
  else
    v11 = v7;
  if (v10 >= 0)
    v12 = *((unsigned __int8 *)v8 + 23);
  else
    v12 = v8[1];
  v13 = *((_BYTE *)v8 + 48);
  v14 = *((char *)v8 + 47);
  if (v14 >= 0)
    v15 = v8 + 3;
  else
    v15 = (void *)v8[3];
  if (v14 >= 0)
    v16 = *((unsigned __int8 *)v8 + 47);
  else
    v16 = v8[4];
  *(_QWORD *)v4 = &off_1E8656B58;
  morphun::Token::Token(v4, (uint64_t *)&off_1E8666FB0, v5 - a2, v6 - a2, v11, v12, v15, v16, v13);
  *(_QWORD *)v4 = &off_1E866A118;
  return v4;
}

void sub_1CB4E24B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10B3C405B5873CALL);
  _Unwind_Resume(a1);
}

morphun::Token *morphun::Token_Word::Token_Word(morphun::Token *a1, int a2, int a3, void *__src, unint64_t a5, void *a6, unint64_t a7, char a8)
{
  morphun::Token *result;

  *(_QWORD *)a1 = &off_1E8656B58;
  result = morphun::Token::Token(a1, (uint64_t *)&off_1E8666FB0, a2, a3, __src, a5, a6, a7, a8);
  *(_QWORD *)result = &off_1E866A118;
  return result;
}

morphun::Token *morphun::Token_Word::Token_Word(morphun::Token *a1, uint64_t *a2, int a3, int a4, void *a5, unint64_t a6, void *a7, unint64_t a8, char a9)
{
  morphun::Token *result;
  uint64_t v11;

  result = morphun::Token::Token(a1, a2 + 1, a3, a4, a5, a6, a7, a8, a9);
  v11 = *a2;
  *(_QWORD *)result = *a2;
  *(_QWORD *)((char *)result + *(_QWORD *)(v11 - 64)) = a2[4];
  *(_QWORD *)((char *)result + *(_QWORD *)(*(_QWORD *)result - 40)) = a2[5];
  return result;
}

void morphun::tokenizer::ExplicitTokenModifier::modifyTokens(uint64_t a1, morphun::Token *a2, uint64_t a3, uint64_t a4)
{
  char *i;
  uint64_t v5;
  uint64_t Caret;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  std::basic_string<char16_t>::size_type size;
  uint64_t v11;
  int v12;
  unsigned __int16 *v13;
  std::basic_string<char16_t> *p_p;
  std::basic_string<char16_t>::size_type v15;
  int v16;
  int v17;
  int v18;
  BOOL v19;
  morphun::tokenizer::ExplicitTokenModifier *v21;
  morphun::tokenizer::ExplicitTokenModifier *v22;
  uint64_t v23;
  morphun::Token *v24;
  morphun::tokenizer::ExplicitTokenModifier *v25;
  morphun::Token *v26;
  morphun::tokenizer::ExplicitTokenModifier *v27;
  uint64_t v28;
  morphun::Token_Head *v29;
  int v30;
  morphun::Token_Tail *v31;
  int v32;
  uint64_t v33;
  const morphun::Token *v34;
  uint64_t v35;
  int v36;
  int v37;
  std::basic_string<char16_t> *v38;
  std::basic_string<char16_t>::size_type v39;
  std::basic_string<char16_t> *v40;
  std::basic_string<char16_t>::size_type v41;
  std::basic_string<char16_t>::size_type v42;
  std::basic_string<char16_t> *v43;
  morphun::exception::NullPointerException *exception;
  std::basic_string<char16_t> v45;
  std::basic_string<char16_t> v46;
  std::basic_string<char16_t> __p;

  if (a3)
  {
    for (i = (char *)a2; *(_WORD *)i != 94; i += 2)
    {
      if (!--a3)
        return;
    }
    if (i - (char *)a2 != -2)
    {
      if (!a4)
      {
        exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
        morphun::exception::NullPointerException::NullPointerException(exception);
      }
      v5 = *(_QWORD *)(a4 + 80);
      while (v5)
      {
        Caret = morphun::tokenizer::ExplicitTokenModifier::findCaret(v5, a2);
        if (!Caret)
          return;
        v7 = (_QWORD *)Caret;
        v5 = *(_QWORD *)(Caret + 80);
        if (*(_DWORD *)(Caret + 12) - *(_DWORD *)(Caret + 8) != 1)
          continue;
        v8 = morphun::tokenizer::ExplicitTokenModifier::findCaret(*(_QWORD *)(Caret + 80), a2);
        if (!v8)
          return;
        v5 = v8;
        if (*(_QWORD **)(v8 + 72) == v7)
          continue;
        v9 = *(_QWORD *)(v8 + 80);
        if (!v9)
          return;
        std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"=");
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          size = __p.__r_.__value_.__l.__size_;
        v11 = *(unsigned __int8 *)(v9 + 39);
        v12 = (char)v11;
        if ((v11 & 0x80u) != 0)
          v11 = *(_QWORD *)(v9 + 24);
        if (size == v11)
        {
          if (size)
          {
            if (v12 >= 0)
              v13 = (unsigned __int16 *)(v9 + 16);
            else
              v13 = *(unsigned __int16 **)(v9 + 16);
            p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
            if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              p_p = &__p;
            v15 = size - 1;
            do
            {
              v17 = (unsigned __int16)p_p->__r_.__value_.__s.__data_[0];
              p_p = (std::basic_string<char16_t> *)((char *)p_p + 2);
              v16 = v17;
              v18 = *v13++;
              v19 = v18 != v16;
            }
            while (v18 == v16 && v15-- != 0);
            if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            {
LABEL_33:
              if (!v19)
                goto LABEL_37;
              continue;
            }
          }
          else
          {
            v19 = 0;
            if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              goto LABEL_33;
          }
        }
        else
        {
          v19 = 1;
          if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            goto LABEL_33;
        }
        operator delete(__p.__r_.__value_.__l.__data_);
        if (!v19)
        {
LABEL_37:
          v21 = (morphun::tokenizer::ExplicitTokenModifier *)morphun::tokenizer::ExplicitTokenModifier::findCaret(*(_QWORD *)(v9 + 80), a2);
          if (!v21)
            return;
          if (*((_QWORD *)v21 + 9) == v9)
          {
            v22 = morphun::tokenizer::ExplicitTokenModifier::splitCaret(v21, a2);
            v23 = npc<morphun::Token>((uint64_t)v22);
            v25 = (morphun::tokenizer::ExplicitTokenModifier *)morphun::tokenizer::ExplicitTokenModifier::findCaret(*(_QWORD *)(v23 + 80), v24);
            if (!v25)
              return;
            v27 = morphun::tokenizer::ExplicitTokenModifier::splitCaret(v25, v26);
            memset(&__p, 0, sizeof(__p));
            morphun::tokenizer::ExplicitTokenModifier::getValue(v7[10], v5, &__p, 0);
            memset(&v46, 0, sizeof(v46));
            memset(&v45, 0, sizeof(v45));
            npc<morphun::Token>((uint64_t)v22);
            morphun::tokenizer::ExplicitTokenModifier::getValue(*((_QWORD *)v22 + 10), (uint64_t)v27, &v46, &v45);
            v28 = v7[9];
            v5 = *((_QWORD *)v27 + 10);
            v29 = (morphun::Token_Head *)operator new();
            npc<morphun::Token>((uint64_t)v7);
            v30 = (*(uint64_t (**)(_QWORD *))(*v7 + 24))(v7);
            morphun::Token_Head::Token_Head(v29, v30);
            *((_QWORD *)v29 + 10) = v7;
            v7[9] = v29;
            v31 = (morphun::Token_Tail *)operator new();
            npc<morphun::Token>((uint64_t)v27);
            v32 = (*(uint64_t (**)(morphun::tokenizer::ExplicitTokenModifier *))(*(_QWORD *)v27 + 32))(v27);
            morphun::Token_Tail::Token_Tail(v31, v32);
            *((_QWORD *)v27 + 10) = v31;
            *((_QWORD *)v31 + 9) = v27;
            v33 = operator new();
            *(_QWORD *)v33 = &off_1E866A820;
            *(_QWORD *)(v33 + 8) = v29;
            *(_QWORD *)(v33 + 16) = v31;
            *(_DWORD *)(v33 + 24) = 0;
            *(_BYTE *)(v33 + 28) = 1;
            *(_DWORD *)(v33 + 24) = morphun::Chunk::checkSize(v29, v31, v34);
            v35 = operator new();
            v36 = (*(uint64_t (**)(_QWORD *))(*v7 + 24))(v7);
            v37 = (*(uint64_t (**)(morphun::tokenizer::ExplicitTokenModifier *))(*(_QWORD *)v27 + 32))(v27);
            if ((v46.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              v38 = &v46;
            else
              v38 = (std::basic_string<char16_t> *)v46.__r_.__value_.__r.__words[0];
            if ((v46.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              v39 = HIBYTE(v46.__r_.__value_.__r.__words[2]);
            else
              v39 = v46.__r_.__value_.__l.__size_;
            if ((v45.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              v40 = &v45;
            else
              v40 = (std::basic_string<char16_t> *)v45.__r_.__value_.__r.__words[0];
            if ((v45.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              v41 = HIBYTE(v45.__r_.__value_.__r.__words[2]);
            else
              v41 = v45.__r_.__value_.__l.__size_;
            v42 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
            if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              v43 = &__p;
            else
              v43 = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
            if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
              v42 = __p.__r_.__value_.__l.__size_;
            morphun::Token_Explicit::Token_Explicit(v35, v36, v37, v38, v39, v40, v41, v33, v43, v42);
            *(_QWORD *)(v35 + 80) = v5;
            if (v5)
              *(_QWORD *)(v5 + 72) = v35;
            if (v28)
            {
              *(_QWORD *)(v28 + 80) = v35;
              *(_QWORD *)(v35 + 72) = v28;
            }
            if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v45.__r_.__value_.__l.__data_);
            if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v46.__r_.__value_.__l.__data_);
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
              operator delete(__p.__r_.__value_.__l.__data_);
          }
          else
          {
            v5 = (uint64_t)v21;
          }
        }
      }
    }
  }
}

void sub_1CB4E2990(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a17 < 0)
    operator delete(__p);
  if (a23 < 0)
    operator delete(a18);
  if (a29 < 0)
    operator delete(a24);
  _Unwind_Resume(exception_object);
}

uint64_t morphun::tokenizer::ExplicitTokenModifier::findCaret(uint64_t this, morphun::Token *a2)
{
  char *v2;
  uint64_t v3;
  char *v4;

  for (; this; this = *(_QWORD *)(this + 80))
  {
    if (*(char *)(this + 39) < 0)
    {
      v2 = *(char **)(this + 16);
      v3 = *(_QWORD *)(this + 24);
      if (!v3)
        continue;
    }
    else
    {
      v2 = (char *)(this + 16);
      v3 = *(unsigned __int8 *)(this + 39);
      if (!*(_BYTE *)(this + 39))
        continue;
    }
    v4 = v2;
    while (*(_WORD *)v4 != 94)
    {
      v4 += 2;
      if (!--v3)
        goto LABEL_11;
    }
    if (v4 - v2 != -2)
      return this;
LABEL_11:
    ;
  }
  return this;
}

morphun::tokenizer::ExplicitTokenModifier *morphun::tokenizer::ExplicitTokenModifier::splitCaret(morphun::tokenizer::ExplicitTokenModifier *this, morphun::Token *a2)
{
  uint64_t v3;
  uint64_t v4;
  morphun::Token *v5;
  uint64_t v6;
  unsigned __int16 *v7;
  int v8;
  int v9;
  std::allocator<char16_t> *v10;
  int v11;
  std::allocator<char16_t> *v12;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t>::size_type v14;
  morphun::Token *v15;
  morphun::Token *v16;
  std::basic_string<char16_t> *p_str;
  std::basic_string<char16_t>::size_type v18;
  std::basic_string<char16_t> *v19;
  std::basic_string<char16_t>::size_type v20;
  morphun::Token *v21;
  char v22;
  std::basic_string<char16_t> *v23;
  std::basic_string<char16_t>::size_type v24;
  std::basic_string<char16_t> *v25;
  std::basic_string<char16_t>::size_type v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  std::basic_string<char16_t> v31;
  std::basic_string<char16_t> v32;
  std::basic_string<char16_t> __str;

  v3 = npc<morphun::Token>((uint64_t)this);
  v4 = *(unsigned __int8 *)(v3 + 39);
  if ((v4 & 0x80u) != 0)
    v4 = *(_QWORD *)(v3 + 24);
  if (v4 == 1)
    return this;
  v6 = npc<morphun::Token>((uint64_t)this);
  v7 = (unsigned __int16 *)*((_QWORD *)this + 2);
  if (*((char *)this + 39) >= 0)
    v7 = (unsigned __int16 *)((char *)this + 16);
  v8 = *v7;
  npc<morphun::Token>(v6);
  if (*((char *)this + 39) < 0)
    std::basic_string<char16_t>::__init_copy_ctor_external(&__str, *((const std::basic_string<char16_t>::value_type **)this + 2), *((_QWORD *)this + 3));
  else
    __str = *(std::basic_string<char16_t> *)((char *)this + 16);
  npc<morphun::Token>((uint64_t)this);
  if (*((char *)this + 63) < 0)
    std::basic_string<char16_t>::__init_copy_ctor_external(&v32, *((const std::basic_string<char16_t>::value_type **)this + 5), *((_QWORD *)this + 6));
  else
    v32 = *(std::basic_string<char16_t> *)((char *)this + 40);
  npc<morphun::Token>((uint64_t)this);
  v9 = (*(uint64_t (**)(morphun::tokenizer::ExplicitTokenModifier *))(*(_QWORD *)this + 24))(this);
  v11 = (*(uint64_t (**)(morphun::tokenizer::ExplicitTokenModifier *))(*(_QWORD *)this + 32))(this);
  if (v8 == 94)
  {
    std::basic_string<char16_t>::basic_string(&v31, &__str, 1uLL, 0xFFFFFFFFFFFFFFFFLL, v10);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__str.__r_.__value_.__l.__data_);
    __str = v31;
    std::basic_string<char16_t>::basic_string(&v31, &v32, 1uLL, 0xFFFFFFFFFFFFFFFFLL, v12);
    ++v9;
    if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v32.__r_.__value_.__l.__data_);
    v32 = v31;
  }
  else
  {
    size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      size = __str.__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::resize(&__str, size - 1, 0);
    v14 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v14 = __str.__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::resize(&v32, v14 - 1, 0);
    --v11;
  }
  {
    v15 = (morphun::Token *)operator new();
    v16 = v15;
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_str = &__str;
    else
      p_str = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v18 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    else
      v18 = __str.__r_.__value_.__l.__size_;
    if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v19 = &v32;
    else
      v19 = (std::basic_string<char16_t> *)v32.__r_.__value_.__r.__words[0];
    if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v20 = HIBYTE(v32.__r_.__value_.__r.__words[2]);
    else
      v20 = v32.__r_.__value_.__l.__size_;
    *(_QWORD *)v15 = &off_1E8656C30;
    morphun::Token::Token(v15, (uint64_t *)&off_1E8667030, v9, v11, p_str, v18, v19, v20, 0);
    *(_QWORD *)v16 = &off_1E866A2D0;
  }
  else
  {
    v21 = (morphun::Token *)operator new();
    v16 = v21;
    v22 = *((_BYTE *)this + 64);
    if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v23 = &v32;
    else
      v23 = (std::basic_string<char16_t> *)v32.__r_.__value_.__r.__words[0];
    if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v24 = HIBYTE(v32.__r_.__value_.__r.__words[2]);
    else
      v24 = v32.__r_.__value_.__l.__size_;
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v25 = &__str;
    else
      v25 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v26 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    else
      v26 = __str.__r_.__value_.__l.__size_;
    *(_QWORD *)v21 = &off_1E8656B58;
    morphun::Token::Token(v21, (uint64_t *)&off_1E8666FB0, v9, v11, v25, v26, v23, v24, v22);
    *(_QWORD *)v16 = &off_1E866A118;
  }
  if (v8 == 94)
  {
    v5 = (morphun::Token *)operator new();
    *(_QWORD *)v5 = &off_1E8656C30;
    morphun::Token::Token(v5, (uint64_t *)&off_1E8667030, v9, v9 + 1, &unk_1CB72FDBA, 1uLL, &unk_1CB72FDBA, 1uLL, 0);
    *(_QWORD *)v5 = &off_1E866A2D0;
    v27 = *((_QWORD *)this + 9);
    if (v27)
    {
      *(_QWORD *)(v27 + 80) = v5;
      *((_QWORD *)v5 + 9) = v27;
    }
    *((_QWORD *)v5 + 10) = v16;
    v28 = *((_QWORD *)this + 10);
    *((_QWORD *)v16 + 9) = v5;
    *((_QWORD *)v16 + 10) = v28;
    if (!v28)
      goto LABEL_60;
  }
  else
  {
    v5 = (morphun::Token *)operator new();
    *(_QWORD *)v5 = &off_1E8656C30;
    morphun::Token::Token(v5, (uint64_t *)&off_1E8667030, v11 - 1, v11, &unk_1CB72FDBA, 1uLL, &unk_1CB72FDBA, 1uLL, 0);
    *(_QWORD *)v5 = &off_1E866A2D0;
    v29 = *((_QWORD *)this + 9);
    if (v29)
    {
      *(_QWORD *)(v29 + 80) = v16;
      *((_QWORD *)v16 + 9) = v29;
    }
    *((_QWORD *)v16 + 10) = v5;
    v28 = *((_QWORD *)this + 10);
    *((_QWORD *)v5 + 9) = v16;
    *((_QWORD *)v5 + 10) = v28;
    v16 = v5;
    if (!v28)
      goto LABEL_60;
  }
  *(_QWORD *)(v28 + 72) = v16;
LABEL_60:
  (*(void (**)(morphun::tokenizer::ExplicitTokenModifier *))(*(_QWORD *)this + 16))(this);
  if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v32.__r_.__value_.__l.__data_);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  return v5;
}

void sub_1CB4E2ED4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  uint64_t v25;

  MEMORY[0x1D179D2EC](v25, 0x10B3C405B5873CALL);
  if (a18 < 0)
    operator delete(__p);
  if (a25 < 0)
    operator delete(a20);
  _Unwind_Resume(a1);
}

void sub_1CB4E2F98(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::tokenizer::ExplicitTokenModifier::getValue(uint64_t a1, uint64_t a2, std::basic_string<char16_t> *a3, std::basic_string<char16_t> *a4)
{
  int v8;
  const std::basic_string<char16_t>::value_type *v9;
  std::basic_string<char16_t>::size_type v10;
  int v11;
  const std::basic_string<char16_t>::value_type *v12;
  std::basic_string<char16_t>::size_type v13;

  npc<std::basic_string<char16_t>>((uint64_t)a3);
  std::basic_string<char16_t>::resize(a3, 0, 0);
  if (a4)
    std::basic_string<char16_t>::resize(a4, 0, 0);
  while (a1 != a2)
  {
    npc<std::basic_string<char16_t>>((uint64_t)a3);
    npc<morphun::Token const>(a1);
    v8 = *(char *)(a1 + 39);
    if (v8 >= 0)
      v9 = (const std::basic_string<char16_t>::value_type *)(a1 + 16);
    else
      v9 = *(const std::basic_string<char16_t>::value_type **)(a1 + 16);
    if (v8 >= 0)
      v10 = *(unsigned __int8 *)(a1 + 39);
    else
      v10 = *(_QWORD *)(a1 + 24);
    std::basic_string<char16_t>::append(a3, v9, v10);
    if (a4)
    {
      npc<morphun::Token const>(a1);
      v11 = *(char *)(a1 + 63);
      if (v11 >= 0)
        v12 = (const std::basic_string<char16_t>::value_type *)(a1 + 40);
      else
        v12 = *(const std::basic_string<char16_t>::value_type **)(a1 + 40);
      if (v11 >= 0)
        v13 = *(unsigned __int8 *)(a1 + 63);
      else
        v13 = *(_QWORD *)(a1 + 48);
      std::basic_string<char16_t>::append(a4, v12, v13);
    }
    npc<morphun::Token const>(a1);
    a1 = *(_QWORD *)(a1 + 80);
  }
}

uint64_t npc<std::basic_string<char16_t>>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4E30D0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::Token const>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4E3128(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::basic_string<char16_t>::__grow_by(std::basic_string<char16_t> *this, std::basic_string<char16_t>::size_type __old_cap, std::basic_string<char16_t>::size_type __delta_cap, std::basic_string<char16_t>::size_type __old_sz, std::basic_string<char16_t>::size_type __n_copy, std::basic_string<char16_t>::size_type __n_del, std::basic_string<char16_t>::size_type __n_add)
{
  std::basic_string<char16_t> *v11;
  std::basic_string<char16_t>::size_type v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  std::basic_string<char16_t>::size_type v17;
  uint64_t v18;
  uint64_t v19;

  if (0x7FFFFFFFFFFFFFF7 - __old_cap < __delta_cap)
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  v11 = this;
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
    v11 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
  v12 = __delta_cap + __old_cap;
  if (__delta_cap + __old_cap <= 2 * __old_cap)
    v12 = 2 * __old_cap;
  v13 = (v12 & 0xFFFFFFFFFFFFFFFCLL) + 4;
  if ((v12 | 3) != 0xB)
    v13 = v12 | 3;
  if (v12 >= 0xB)
    v14 = v13 + 1;
  else
    v14 = 11;
  if (__old_cap <= 0x3FFFFFFFFFFFFFF2)
    v15 = v14;
  else
    v15 = 0x7FFFFFFFFFFFFFF7;
  v16 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v15);
  v17 = (std::basic_string<char16_t>::size_type)v16;
  v19 = v18;
  if (__n_copy)
    memmove(v16, v11, 2 * __n_copy);
  if (__old_sz != __n_copy)
    memmove((void *)(v17 + 2 * __n_copy), (char *)v11 + 2 * __n_copy, 2 * (__old_sz - __n_copy));
  if (__old_cap != 10)
    operator delete(v11);
  this->__r_.__value_.__r.__words[0] = v17;
  this->__r_.__value_.__r.__words[2] = v19 | 0x8000000000000000;
}

void morphun::grammar::synthesis::FiGrammarSynthesizer_EnteringLookupFunction::~FiGrammarSynthesizer_EnteringLookupFunction(morphun::grammar::synthesis::FiGrammarSynthesizer_EnteringLookupFunction *this)
{
  JUMPOUT(0x1D179D2ECLL);
}

void morphun::grammar::synthesis::FiGrammarSynthesizer_LocativeBasedLookupFunction::~FiGrammarSynthesizer_LocativeBasedLookupFunction(morphun::grammar::synthesis::FiGrammarSynthesizer_LocativeBasedLookupFunction *this)
{
  JUMPOUT(0x1D179D2ECLL);
}

void morphun::analysis::DaAnalyzer::~DaAnalyzer(void **this)
{
  *this = &off_1E865F788;
  morphun::analysis::Analyzer::~Analyzer((morphun::analysis::Analyzer *)this, (uint64_t *)&off_1E8668D00);
}

{
  *this = &off_1E865F788;
  morphun::analysis::Analyzer::~Analyzer((morphun::analysis::Analyzer *)this, (uint64_t *)&off_1E8668D00);
  JUMPOUT(0x1D179D2ECLL);
}

morphun::analysis::util::FilteringTokenFilter *morphun::analysis::DaAnalyzer::addStopFilter(morphun::analysis::DaAnalyzer *this, morphun::analysis::TokenStream *a2)
{
  morphun::analysis::util::FilteringTokenFilter *v4;

  v4 = (morphun::analysis::util::FilteringTokenFilter *)operator new();
  morphun::analysis::core::StopFilter::StopFilter(v4, (uint64_t)a2, *((_QWORD *)this + 8));
  return v4;
}

void sub_1CB4E3350(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10F1C40C2748A64);
  _Unwind_Resume(a1);
}

morphun::analysis::stemmer::NordicStemFilter *morphun::analysis::DaAnalyzer::addWordNormalizationFilter(morphun::analysis::DaAnalyzer *this, morphun::analysis::TokenStream *a2)
{
  morphun::analysis::stemmer::NordicStemFilter *v3;

  v3 = (morphun::analysis::stemmer::NordicStemFilter *)operator new();
  *(_QWORD *)v3 = &off_1E866A910;
  morphun::analysis::stemmer::NordicStemFilter::NordicStemFilter(v3, (morphun::analysis::TokenStream *)&off_1E8669908, (uint64_t)a2);
  *(_QWORD *)v3 = &off_1E86726D0;
  return v3;
}

void sub_1CB4E33D8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10E1C403A81BC3DLL);
  _Unwind_Resume(a1);
}

void mdr_registerDataPathForLocale(const __CFLocale *a1, const __CFString *a2)
{
  std::string __p;
  void *v4[16];

  morphun::util::CFUtils::convert((morphun::util::CFUtils *)v4, a1);
  morphun::util::CFUtils::to_string(&__p, a2);
  morphun::resources::DataRegistrationService::registerDataPathForLocale((morphun::util::ULocale *)v4, (uint64_t)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_1CB4E3470(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16)
{
  const std::exception *v16;
  const void **v19;
  __CFError **v20;

  if (a15 < 0)
    operator delete(__p);
  if (a2 == 1)
  {
    v19 = (const void **)__cxa_begin_catch(a1);
    morphun::util::CFUtils::convert(v19, v16, v20);
    __cxa_end_catch();
    JUMPOUT(0x1CB4E345CLL);
  }
  _Unwind_Resume(a1);
}

CFStringRef mdr_getDataPathForLocaleCopy(const __CFLocale *a1)
{
  std::string *v1;
  std::string::size_type size;
  CFStringRef v3;
  void *v5[16];
  std::string v6;

  morphun::util::CFUtils::convert((morphun::util::CFUtils *)v5, a1);
  morphun::resources::DataRegistrationService::getDataPathForLocale((morphun::resources::DataRegistrationService *)v5, &v6);
  if ((v6.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v1 = &v6;
  else
    v1 = (std::string *)v6.__r_.__value_.__r.__words[0];
  if ((v6.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v6.__r_.__value_.__r.__words[2]);
  else
    size = v6.__r_.__value_.__l.__size_;
  v3 = CFStringCreateWithBytes(0, (const UInt8 *)v1, size, 0x8000100u, 0);
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v6.__r_.__value_.__l.__data_);
  return v3;
}

void sub_1CB4E3580(_Unwind_Exception *a1, int a2, uint64_t a3, ...)
{
  const std::exception *v3;
  uint64_t v4;
  const void **v7;
  __CFError **v8;
  va_list va;

  va_start(va, a3);
  if (*(char *)(v4 - 33) < 0)
    operator delete(*(void **)(v4 - 56));
  if (a2 == 1)
  {
    v7 = (const void **)__cxa_begin_catch(a1);
    morphun::util::CFUtils::convert(v7, v3, v8);
    __cxa_end_catch();
    JUMPOUT(0x1CB4E3568);
  }
  _Unwind_Resume(a1);
}

void morphun::dialog::SemanticFeatureModel::~SemanticFeatureModel(morphun::dialog::SemanticFeatureModel *this)
{
  morphun::dialog::SemanticFeatureModel::~SemanticFeatureModel(this);
  JUMPOUT(0x1D179D2ECLL);
}

{
  uint64_t v2;
  morphun::dialog::SemanticFeatureModel *v3;
  uint64_t v4;
  morphun::dialog::SemanticFeatureModel *v5;
  morphun::dialog::SemanticFeatureModel *v6;
  BOOL v7;
  morphun::dialog::SemanticFeatureModel *v8;
  uint64_t v9;
  morphun::dialog::SemanticFeatureModel *v10;
  morphun::dialog::SemanticFeatureModel *v11;

  v2 = *((_QWORD *)this + 29);
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
  v3 = (morphun::dialog::SemanticFeatureModel *)*((_QWORD *)this + 10);
  if (v3 != (morphun::dialog::SemanticFeatureModel *)((char *)this + 88))
  {
    do
    {
      v4 = *((_QWORD *)v3 + 13);
      if (v4)
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
      v5 = (morphun::dialog::SemanticFeatureModel *)*((_QWORD *)v3 + 1);
      if (v5)
      {
        do
        {
          v6 = v5;
          v5 = *(morphun::dialog::SemanticFeatureModel **)v5;
        }
        while (v5);
      }
      else
      {
        do
        {
          v6 = (morphun::dialog::SemanticFeatureModel *)*((_QWORD *)v3 + 2);
          v7 = *(_QWORD *)v6 == (_QWORD)v3;
          v3 = v6;
        }
        while (!v7);
      }
      v3 = v6;
    }
    while (v6 != (morphun::dialog::SemanticFeatureModel *)((char *)this + 88));
  }
  v8 = (morphun::dialog::SemanticFeatureModel *)*((_QWORD *)this + 1);
  if (v8 != (morphun::dialog::SemanticFeatureModel *)((char *)this + 16))
  {
    do
    {
      v9 = *((_QWORD *)v8 + 7);
      if (v9)
        (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
      v10 = (morphun::dialog::SemanticFeatureModel *)*((_QWORD *)v8 + 1);
      if (v10)
      {
        do
        {
          v11 = v10;
          v10 = *(morphun::dialog::SemanticFeatureModel **)v10;
        }
        while (v10);
      }
      else
      {
        do
        {
          v11 = (morphun::dialog::SemanticFeatureModel *)*((_QWORD *)v8 + 2);
          v7 = *(_QWORD *)v11 == (_QWORD)v8;
          v8 = v11;
        }
        while (!v7);
      }
      v8 = v11;
    }
    while (v11 != (morphun::dialog::SemanticFeatureModel *)((char *)this + 16));
  }
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>>>::destroy(*((_QWORD **)this + 11));
  std::__tree<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::__map_value_compare<morphun::dialog::SemanticValue,std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::less<morphun::dialog::SemanticValue>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>>>::destroy(*((char **)this + 8));
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>>>::destroy(*((_QWORD **)this + 5));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 2));
}

void std::__tree<std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>>>::destroy(_QWORD *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>>>::destroy(*a1);
    std::__tree<std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>>>::destroy(a1[1]);
    operator delete(a1);
  }
}

void std::__tree<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::__map_value_compare<morphun::dialog::SemanticValue,std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::less<morphun::dialog::SemanticValue>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>>>::destroy(char *a1)
{
  void **v2;

  if (a1)
  {
    std::__tree<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::__map_value_compare<morphun::dialog::SemanticValue,std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::less<morphun::dialog::SemanticValue>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>>>::destroy(*(_QWORD *)a1);
    std::__tree<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::__map_value_compare<morphun::dialog::SemanticValue,std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::less<morphun::dialog::SemanticValue>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>>>::destroy(*((_QWORD *)a1 + 1));
    *((_QWORD *)a1 + 11) = &off_1E866B660;
    v2 = (void **)(a1 + 96);
    std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100](&v2);
    morphun::dialog::SemanticValue::~SemanticValue((void **)a1 + 4);
    operator delete(a1);
  }
}

void std::__tree<std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>>>::destroy(_QWORD *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>>>::destroy(*a1);
    std::__tree<std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>>>::destroy(a1[1]);
    std::__destroy_at[abi:ne180100]<std::pair<std::basic_string<char16_t> const,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,0>((uint64_t)(a1 + 4));
    operator delete(a1);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::basic_string<char16_t> const,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,0>(uint64_t a1)
{
  if (*(char *)(a1 + 55) < 0)
    operator delete(*(void **)(a1 + 32));
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
}

morphun::dialog::SemanticFeatureModel *morphun::dialog::SemanticFeatureModel::SemanticFeatureModel(morphun::dialog::SemanticFeatureModel *this, const morphun::util::ULocale *a2)
{
  char **v4;
  char *v5[2];

  v5[0] = 0;
  v5[1] = 0;
  v4 = v5;
  morphun::dialog::SemanticFeatureModel::SemanticFeatureModel(this, a2, &v4);
  std::__tree<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::__map_value_compare<morphun::dialog::SemanticValue,std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::less<morphun::dialog::SemanticValue>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>>>::destroy(v5[0]);
  return this;
}

{
  char **v4;
  char *v5[2];

  v5[0] = 0;
  v5[1] = 0;
  v4 = v5;
  morphun::dialog::SemanticFeatureModel::SemanticFeatureModel(this, a2, &v4);
  std::__tree<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::__map_value_compare<morphun::dialog::SemanticValue,std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::less<morphun::dialog::SemanticValue>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>>>::destroy(v5[0]);
  return this;
}

void sub_1CB4E38C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char *a11)
{
  std::__tree<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::__map_value_compare<morphun::dialog::SemanticValue,std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::less<morphun::dialog::SemanticValue>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>>>::destroy(a11);
  _Unwind_Resume(a1);
}

_QWORD *morphun::dialog::SemanticFeatureModel::SemanticFeatureModel(_QWORD *a1, const morphun::util::ULocale *a2, _QWORD *a3)
{
  char **v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  BOOL v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  morphun::grammar::synthesis::GrammarSynthesizerFactory *v19;
  morphun::dialog::SemanticFeatureModel *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t **v24;
  uint64_t *v25;
  uint64_t **v26;
  unsigned __int16 *v27;
  uint64_t *v28;
  std::basic_string<char16_t> *v29;
  __int128 v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  _OWORD *v35;
  char *v36;
  char **v37;
  char **v38;
  unsigned __int16 *v39;
  char *v40;
  std::basic_string<char16_t> *v41;
  __int128 v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t *v48;
  uint64_t **v49;
  _QWORD *v50;
  uint64_t *v51;
  std::basic_string<char16_t> __p;
  uint64_t *v53;
  uint64_t *v54;
  _QWORD v55[2];
  char v56;

  a1[2] = 0;
  a1[5] = 0;
  v4 = (char **)(a1 + 5);
  *a1 = &off_1E866AF68;
  a1[1] = a1 + 2;
  a1[3] = 0;
  a1[4] = a1 + 5;
  a1[8] = 0;
  a1[9] = 0;
  a1[6] = 0;
  a1[7] = a1 + 8;
  v49 = (uint64_t **)(a1 + 2);
  v50 = a1 + 8;
  v5 = a3 + 1;
  v6 = (_QWORD *)*a3;
  if ((_QWORD *)*a3 != a3 + 1)
  {
    while (1)
    {
      v7 = (_QWORD *)a1[8];
      v8 = v50;
      v9 = v50;
      if ((_QWORD *)a1[7] != v50)
      {
        v10 = (_QWORD *)a1[8];
        if (v7)
        {
          do
          {
            v9 = v10;
            v10 = (_QWORD *)v10[1];
          }
          while (v10);
        }
        else
        {
          do
          {
            v9 = (_QWORD *)v8[2];
            v11 = *v9 == (_QWORD)v8;
            v8 = v9;
          }
          while (v11);
        }
        v8 = v50;
        if (!std::less<morphun::dialog::SemanticValue>::operator()[abi:ne180100](v9 + 4, v6 + 4))
          break;
      }
      v12 = v8;
      if (!v7)
        goto LABEL_18;
      v8 = v9 + 1;
      if (!v9[1])
      {
        v12 = v9;
LABEL_18:
        v15 = (char *)operator new(0x78uLL);
        std::pair<std::basic_string<char16_t>,std::basic_string<char16_t>>::pair[abi:ne180100]((std::basic_string<char16_t> *)(v15 + 40), (__int128 *)((char *)v6 + *(_QWORD *)(v6[4] - 40) + 32));
        *((_QWORD *)v15 + 12) = 0;
        *((_QWORD *)v15 + 4) = &off_1E866AAC0;
        *((_QWORD *)v15 + 11) = &off_1E866B660;
        *((_QWORD *)v15 + 13) = 0;
        *((_QWORD *)v15 + 14) = 0;
        std::vector<morphun::dialog::SemanticFeatureModel_DisplayValue>::__init_with_size[abi:ne180100]<morphun::dialog::SemanticFeatureModel_DisplayValue*,morphun::dialog::SemanticFeatureModel_DisplayValue*>((_QWORD *)v15 + 12, v6[12], v6[13], 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v6[13] - v6[12]) >> 3));
        *(_QWORD *)v15 = 0;
        *((_QWORD *)v15 + 1) = 0;
        *((_QWORD *)v15 + 2) = v12;
        *v8 = v15;
        v16 = *(_QWORD *)a1[7];
        if (v16)
        {
          a1[7] = v16;
          v15 = (char *)*v8;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>((uint64_t *)a1[8], (uint64_t *)v15);
        ++a1[9];
      }
LABEL_21:
      v17 = (_QWORD *)v6[1];
      if (v17)
      {
        do
        {
          v18 = v17;
          v17 = (_QWORD *)*v17;
        }
        while (v17);
      }
      else
      {
        do
        {
          v18 = (_QWORD *)v6[2];
          v11 = *v18 == (_QWORD)v6;
          v6 = v18;
        }
        while (!v11);
      }
      v6 = v18;
      if (v18 == v5)
        goto LABEL_27;
    }
    v12 = v50;
    if (v7)
    {
      v13 = v7;
      while (1)
      {
        while (1)
        {
          v12 = v13;
          v14 = v13 + 4;
          if (!std::less<morphun::dialog::SemanticValue>::operator()[abi:ne180100](v6 + 4, v13 + 4))
            break;
          v13 = (_QWORD *)*v12;
          v8 = v12;
          if (!*v12)
            goto LABEL_18;
        }
        if (!std::less<morphun::dialog::SemanticValue>::operator()[abi:ne180100](v14, v6 + 4))
          goto LABEL_21;
        v8 = v12 + 1;
        v13 = (_QWORD *)v12[1];
        if (!v13)
          goto LABEL_18;
      }
    }
    goto LABEL_18;
  }
LABEL_27:
  a1[11] = 0;
  a1[12] = 0;
  a1[10] = a1 + 11;
  v19 = a2;
  morphun::util::ULocale::ULocale((morphun::util::ULocale *)(a1 + 13), a2);
  a1[29] = 0;
  morphun::dialog::SemanticFeatureModel::createDefaultSemanticFeatures(a2, &v53);
  v21 = v53;
  v48 = v54;
  if (v53 != v54)
  {
    do
    {
      v22 = *v21;
      npc<morphun::dialog::SemanticFeature>(*v21);
      v23 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v22 + 32))(v22);
      v24 = v49;
      v25 = *v49;
      v26 = v49;
      if (*v49)
      {
        while (1)
        {
          while (1)
          {
            v26 = (uint64_t **)v25;
            v27 = (unsigned __int16 *)(v25 + 4);
            if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v23, (unsigned __int16 *)v25 + 16))break;
            v25 = *v26;
            v24 = v26;
            if (!*v26)
              goto LABEL_34;
          }
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v27, (unsigned __int16 *)v23))
            break;
          v24 = v26 + 1;
          v25 = v26[1];
          if (!v25)
            goto LABEL_34;
        }
      }
      else
      {
LABEL_34:
        v28 = (uint64_t *)operator new(0x40uLL);
        v29 = (std::basic_string<char16_t> *)(v28 + 4);
        if (*(char *)(v23 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v29, *(const std::basic_string<char16_t>::value_type **)v23, *(_QWORD *)(v23 + 8));
        }
        else
        {
          v30 = *(_OWORD *)v23;
          v28[6] = *(_QWORD *)(v23 + 16);
          *(_OWORD *)&v29->__r_.__value_.__l.__data_ = v30;
        }
        v28[7] = v22;
        *v28 = 0;
        v28[1] = 0;
        v28[2] = (uint64_t)v26;
        *v24 = v28;
        v31 = *(_QWORD *)a1[1];
        if (v31)
        {
          a1[1] = v31;
          v28 = *v24;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>((uint64_t *)a1[2], v28);
        ++a1[3];
      }
      npc<morphun::dialog::SemanticFeature>(v22);
      v51 = v21;
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v22 + 48))(v22))
      {
        npc<morphun::dialog::SemanticFeature>(v22);
        v32 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v22 + 40))(v22);
        v33 = v32 + 1;
        v34 = (_QWORD *)*v32;
        if ((_QWORD *)*v32 != v32 + 1)
        {
          do
          {
            v35 = v34 + 4;
            if (*((char *)v34 + 55) < 0)
            {
              std::basic_string<char16_t>::__init_copy_ctor_external(&__p, (const std::basic_string<char16_t>::value_type *)v34[4], v34[5]);
            }
            else
            {
              *(_OWORD *)&__p.__r_.__value_.__l.__data_ = *v35;
              __p.__r_.__value_.__r.__words[2] = v34[6];
            }
            v36 = *v4;
            v37 = v4;
            v38 = v4;
            if (*v4)
            {
              while (1)
              {
                while (1)
                {
                  v37 = (char **)v36;
                  v39 = (unsigned __int16 *)(v36 + 32);
                  if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v34 + 16, (unsigned __int16 *)v36 + 16))break;
                  v36 = *v37;
                  v38 = v37;
                  if (!*v37)
                    goto LABEL_51;
                }
                if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v39, (unsigned __int16 *)v34 + 16))break;
                v38 = v37 + 1;
                v36 = v37[1];
                if (!v36)
                  goto LABEL_51;
              }
            }
            else
            {
LABEL_51:
              v40 = (char *)operator new(0x58uLL);
              v55[0] = v40;
              v55[1] = v4;
              v56 = 0;
              v41 = (std::basic_string<char16_t> *)(v40 + 32);
              if (*((char *)v34 + 55) < 0)
              {
                std::basic_string<char16_t>::__init_copy_ctor_external(v41, (const std::basic_string<char16_t>::value_type *)v34[4], v34[5]);
              }
              else
              {
                v42 = *v35;
                *((_QWORD *)v40 + 6) = v34[6];
                *(_OWORD *)&v41->__r_.__value_.__l.__data_ = v42;
              }
              *((_QWORD *)v40 + 7) = v22;
              *(std::basic_string<char16_t> *)(v40 + 64) = __p;
              memset(&__p, 0, sizeof(__p));
              v56 = 1;
              *(_QWORD *)v40 = 0;
              *((_QWORD *)v40 + 1) = 0;
              *((_QWORD *)v40 + 2) = v37;
              *v38 = v40;
              v43 = *(_QWORD *)a1[4];
              if (v43)
              {
                a1[4] = v43;
                v40 = *v38;
              }
              std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>((uint64_t *)a1[5], (uint64_t *)v40);
              ++a1[6];
              v55[0] = 0;
              std::unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,void *>>>>::reset[abi:ne180100]((uint64_t)v55);
            }
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
              operator delete(__p.__r_.__value_.__l.__data_);
            v44 = (_QWORD *)v34[1];
            if (v44)
            {
              do
              {
                v45 = v44;
                v44 = (_QWORD *)*v44;
              }
              while (v44);
            }
            else
            {
              do
              {
                v45 = (_QWORD *)v34[2];
                v11 = *v45 == (_QWORD)v34;
                v34 = v45;
              }
              while (!v11);
            }
            v34 = v45;
          }
          while (v45 != v33);
        }
      }
      v21 = v51 + 1;
    }
    while (v51 + 1 != v48);
    v21 = v53;
    v19 = a2;
  }
  if (v21)
    operator delete(v21);
  morphun::grammar::synthesis::GrammarSynthesizerFactory::addSemanticFeatures(v19, (const morphun::util::ULocale *)a1, v20);
  return a1;
}

void sub_1CB4E3E1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **a10, _QWORD **a11, uint64_t a12, uint64_t a13, char **a14, char **a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p)
{
  _QWORD **v24;

  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>>>::destroy(*a11);
  std::__tree<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::__map_value_compare<morphun::dialog::SemanticValue,std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::less<morphun::dialog::SemanticValue>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>>>::destroy(*a15);
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>>>::destroy(*v24);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*a14);
  _Unwind_Resume(a1);
}

void morphun::dialog::SemanticFeatureModel::createDefaultSemanticFeatures(morphun::dialog::SemanticFeatureModel *this@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  _QWORD **v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD **v22;
  BOOL v23;
  _QWORD **v24;
  std::basic_string<char16_t>::size_type i;
  std::basic_string<char16_t>::size_type size;
  uint64_t v27;
  int v28;
  unint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD **v40;
  void *__p[2];
  char v42;
  std::basic_string<char16_t> v43;
  std::basic_string<char16_t> v44;
  _QWORD **v45;
  _QWORD *v46[2];
  uint64_t (**v47)(morphun::Object *__hidden);
  void *v48[19];

  morphun::lang::features::LanguageGrammarFeatures::getLanguageGrammarFeatures(this, &v47);
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  v4 = *(int *)v48[16];
  v5 = *(int *)v48[17];
  v6 = v5 + v4;
  if ((_DWORD)v5 + (_DWORD)v4)
  {
    if ((v6 & 0x80000000) != 0)
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    v7 = (uint64_t *)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v6);
    *a2 = v7;
    a2[1] = v7;
    a2[2] = &v7[v8];
  }
  else
  {
    v7 = 0;
  }
  morphun::lang::features::LanguageGrammarFeatures::getCategories((morphun::lang::features::LanguageGrammarFeatures *)&v47, (uint64_t)&v45);
  v9 = v45;
  if (v45 != v46)
  {
    do
    {
      v10 = operator new();
      if (*((char *)v9 + 87) < 0)
        std::basic_string<char16_t>::__init_copy_ctor_external(&v44, (const std::basic_string<char16_t>::value_type *)v9[8], (std::basic_string<char16_t>::size_type)v9[9]);
      else
        v44 = *(std::basic_string<char16_t> *)(v9 + 8);
      std::set<std::basic_string<char16_t>>::set[abi:ne180100]((uint64_t *)&v43, (uint64_t)(v9 + 11));
      morphun::dialog::SemanticFeature::SemanticFeature(v10, &v44, 1, &v43, *((unsigned __int8 *)v9 + 160));
      v12 = a2[1];
      v11 = (unint64_t)a2[2];
      if ((unint64_t)v12 >= v11)
      {
        v13 = *a2;
        v14 = v12 - *a2;
        v15 = v14 + 1;
        if ((unint64_t)(v14 + 1) >> 61)
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        v16 = v11 - (_QWORD)v13;
        if (v16 >> 2 > v15)
          v15 = v16 >> 2;
        if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFF8)
          v17 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v17 = v15;
        if (v17)
          v17 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v17);
        else
          v18 = 0;
        v19 = (uint64_t *)(v17 + 8 * v14);
        *v19 = v10;
        v7 = v19 + 1;
        if (v12 != v13)
        {
          do
          {
            v20 = *--v12;
            *--v19 = v20;
          }
          while (v12 != v13);
          v12 = *a2;
        }
        *a2 = v19;
        a2[1] = v7;
        a2[2] = (uint64_t *)(v17 + 8 * v18);
        if (v12)
          operator delete(v12);
      }
      else
      {
        *v12 = v10;
        v7 = v12 + 1;
      }
      a2[1] = v7;
      std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy((char *)v43.__r_.__value_.__l.__size_);
      if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v44.__r_.__value_.__l.__data_);
      v21 = v9[1];
      if (v21)
      {
        do
        {
          v22 = (_QWORD **)v21;
          v21 = (_QWORD *)*v21;
        }
        while (v21);
      }
      else
      {
        do
        {
          v22 = (_QWORD **)v9[2];
          v23 = *v22 == v9;
          v9 = v22;
        }
        while (!v23);
      }
      v9 = v22;
    }
    while (v22 != v46);
  }
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>>>::destroy(v46[0]);
  morphun::lang::features::LanguageGrammarFeatures::getFeatures((morphun::lang::features::LanguageGrammarFeatures *)&v47, (uint64_t)&v45);
  v24 = v45;
  if (v45 != v46)
  {
    do
    {
      *(_OWORD *)&v44.__r_.__value_.__r.__words[1] = 0uLL;
      v44.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v44.__r_.__value_.__l.__size_;
      memset(&v43, 0, sizeof(v43));
      std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__init_with_size[abi:ne180100]<morphun::lang::features::LanguageGrammarFeatures_Feature*,morphun::lang::features::LanguageGrammarFeatures_Feature*>((uint64_t)&v43, (uint64_t)v24[8], (uint64_t)v24[9], 0x6DB6DB6DB6DB6DB7 * (v24[9] - v24[8]));
      size = v43.__r_.__value_.__l.__size_;
      for (i = v43.__r_.__value_.__r.__words[0]; i != size; i += 56)
      {
        (*(void (**)(void **__return_ptr, std::basic_string<char16_t>::size_type))(*(_QWORD *)i + 24))(__p, i);
        std::__tree<std::basic_string<char16_t>>::__emplace_unique_key_args<std::basic_string<char16_t>,std::basic_string<char16_t>>((uint64_t **)&v44, (unsigned __int16 *)__p, (uint64_t)__p);
        if (v42 < 0)
          operator delete(__p[0]);
      }
      __p[0] = &v43;
      std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
      v27 = operator new();
      if (*((char *)v24 + 63) < 0)
        std::basic_string<char16_t>::__init_copy_ctor_external(&v43, (const std::basic_string<char16_t>::value_type *)v24[5], (std::basic_string<char16_t>::size_type)v24[6]);
      else
        v43 = *(std::basic_string<char16_t> *)(v24 + 5);
      if (v44.__r_.__value_.__r.__words[2])
        v28 = 1;
      else
        v28 = 2;
      morphun::dialog::SemanticFeature::SemanticFeature(v27, &v43, v28, &v44, 0);
      v29 = (unint64_t)a2[2];
      if ((unint64_t)v7 >= v29)
      {
        v30 = *a2;
        v31 = v7 - *a2;
        v32 = v31 + 1;
        if ((unint64_t)(v31 + 1) >> 61)
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        v33 = v29 - (_QWORD)v30;
        if (v33 >> 2 > v32)
          v32 = v33 >> 2;
        if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFF8)
          v34 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v34 = v32;
        if (v34)
          v34 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v34);
        else
          v35 = 0;
        v36 = (uint64_t *)(v34 + 8 * v31);
        *v36 = v27;
        v37 = v36 + 1;
        if (v7 != v30)
        {
          do
          {
            v38 = *--v7;
            *--v36 = v38;
          }
          while (v7 != v30);
          v7 = *a2;
        }
        *a2 = v36;
        a2[1] = v37;
        a2[2] = (uint64_t *)(v34 + 8 * v35);
        if (v7)
          operator delete(v7);
        v7 = v37;
      }
      else
      {
        *v7++ = v27;
      }
      a2[1] = v7;
      if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v43.__r_.__value_.__l.__data_);
      std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy((char *)v44.__r_.__value_.__l.__size_);
      v39 = v24[1];
      if (v39)
      {
        do
        {
          v40 = (_QWORD **)v39;
          v39 = (_QWORD *)*v39;
        }
        while (v39);
      }
      else
      {
        do
        {
          v40 = (_QWORD **)v24[2];
          v23 = *v40 == v24;
          v24 = v40;
        }
        while (!v23);
      }
      v24 = v40;
    }
    while (v40 != v46);
  }
  std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(v46[0]);
  v47 = &off_1E866A5F8;
}

void sub_1CB4E4360(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33)
{
  uint64_t v33;
  void *v35;

  v35 = *(void **)v33;
  if (*(_QWORD *)v33)
  {
    *(_QWORD *)(v33 + 8) = v35;
    operator delete(v35);
  }
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::dialog::SemanticFeature>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4E4510(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v1)
  {
    if (*(_BYTE *)(a1 + 16))
      std::__destroy_at[abi:ne180100]<std::pair<std::basic_string<char16_t> const,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,0>((uint64_t)v1 + 32);
    operator delete(v1);
  }
}

void std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>>>::destroy(_QWORD *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>>>::destroy(*a1);
    std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>>>::destroy(a1[1]);
    std::__destroy_at[abi:ne180100]<std::pair<std::basic_string<char16_t> const,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,0>((uint64_t)(a1 + 4));
    operator delete(a1);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::basic_string<char16_t> const,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,0>(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
}

std::basic_string<char16_t> *std::pair<std::basic_string<char16_t>,std::basic_string<char16_t>>::pair[abi:ne180100](std::basic_string<char16_t> *this, __int128 *a2)
{
  __int128 v4;
  std::basic_string<char16_t> *v5;
  __int128 v6;

  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(this, *(const std::basic_string<char16_t>::value_type **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v4 = *a2;
    this->__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v4;
  }
  v5 = this + 1;
  if (*((char *)a2 + 47) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v5, *((const std::basic_string<char16_t>::value_type **)a2 + 3), *((_QWORD *)a2 + 4));
  }
  else
  {
    v6 = *(__int128 *)((char *)a2 + 24);
    this[1].__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 5);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  return this;
}

void sub_1CB4E4664(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

_QWORD *std::vector<morphun::dialog::SemanticFeatureModel_DisplayValue>::__init_with_size[abi:ne180100]<morphun::dialog::SemanticFeatureModel_DisplayValue*,morphun::dialog::SemanticFeatureModel_DisplayValue*>(_QWORD *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  const std::basic_string<char16_t>::value_type **v10;
  __int128 v11;

  if (a4)
  {
    if (a4 >= 0x492492492492493)
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    v6 = result;
    result = std::__allocate_at_least[abi:ne180100]<std::allocator<morphun::dialog::SemanticFeatureModel_DisplayValue>>(a4);
    v7 = result;
    *v6 = result;
    v6[1] = result;
    v6[2] = &result[7 * v8];
    if (a2 != a3)
    {
      v9 = 0;
      do
      {
        v7[v9 / 8] = &off_1E866B6A0;
        v10 = (const std::basic_string<char16_t>::value_type **)(a2 + v9 + 8);
        if (*(char *)(a2 + v9 + 31) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)&v7[v9 / 8 + 1], *v10, *(_QWORD *)(a2 + v9 + 16));
        }
        else
        {
          v11 = *(_OWORD *)v10;
          v7[v9 / 8 + 3] = *(_QWORD *)(a2 + v9 + 24);
          *(_OWORD *)&v7[v9 / 8 + 1] = v11;
        }
        result = std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100](&v7[v9 / 8 + 4], a2 + v9 + 32);
        v9 += 56;
      }
      while (a2 + v9 != a3);
      v7 = (_QWORD *)((char *)v7 + v9);
    }
    v6[1] = v7;
  }
  return result;
}

void sub_1CB4E478C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<morphun::dialog::SemanticFeatureModel_DisplayValue>>(unint64_t a1)
{
  if (a1 >= 0x492492492492493)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(56 * a1);
}

BOOL std::less<morphun::dialog::SemanticValue>::operator()[abi:ne180100](_QWORD *a1, _QWORD *a2)
{
  unsigned __int16 *v2;
  unsigned __int16 *v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  unsigned __int16 *v9;
  unsigned __int16 *v10;
  unint64_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned __int16 *v15;
  unsigned __int16 *v16;
  unsigned int v17;
  unsigned int v18;
  unint64_t v19;
  int v20;
  unint64_t v21;
  int v22;
  unint64_t v23;
  unsigned __int16 *v24;
  unsigned __int16 *v25;
  unsigned __int16 *v26;
  unsigned __int16 *v27;
  unsigned __int16 *v28;
  unsigned __int16 *v29;
  unsigned int v30;
  unsigned int v31;
  BOOL v32;

  v2 = (unsigned __int16 *)((char *)a1 + *(_QWORD *)(*a1 - 40));
  v3 = (unsigned __int16 *)((char *)a2 + *(_QWORD *)(*a2 - 40));
  v4 = *((unsigned __int8 *)v3 + 23);
  v5 = (char)v4;
  if ((v4 & 0x80u) != 0)
    v4 = *((_QWORD *)v3 + 1);
  v6 = *((unsigned __int8 *)v2 + 23);
  v7 = (char)v6;
  if ((v6 & 0x80u) != 0)
    v6 = *((_QWORD *)v2 + 1);
  if (v4 >= v6)
    v8 = v6;
  else
    v8 = v4;
  if (v8)
  {
    v9 = *(unsigned __int16 **)v2;
    if (v7 >= 0)
      v9 = (unsigned __int16 *)((char *)a1 + *(_QWORD *)(*a1 - 40));
    v10 = *(unsigned __int16 **)v3;
    if (v5 >= 0)
      v10 = (unsigned __int16 *)((char *)a2 + *(_QWORD *)(*a2 - 40));
    v11 = v8;
    do
    {
      v12 = *v9;
      v13 = *v10;
      if (v12 < v13)
        return 1;
      if (v13 < v12)
        goto LABEL_19;
      ++v9;
      ++v10;
    }
    while (--v11);
  }
  if (v6 < v4)
    return 1;
LABEL_19:
  if (v8)
  {
    if (v5 >= 0)
      v15 = v3;
    else
      v15 = *(unsigned __int16 **)v3;
    if (v7 >= 0)
      v16 = v2;
    else
      v16 = *(unsigned __int16 **)v2;
    do
    {
      v17 = *v15;
      v18 = *v16;
      if (v17 < v18)
        return 0;
      if (v18 < v17)
        goto LABEL_31;
      ++v15;
      ++v16;
    }
    while (--v8);
  }
  if (v4 < v6)
    return 0;
LABEL_31:
  v19 = *((unsigned __int8 *)v3 + 47);
  v20 = (char)v19;
  if ((v19 & 0x80u) != 0)
    v19 = *((_QWORD *)v3 + 4);
  v21 = *((unsigned __int8 *)v2 + 47);
  v22 = (char)v21;
  if ((v21 & 0x80u) != 0)
    v21 = *((_QWORD *)v2 + 4);
  if (v19 >= v21)
    v23 = v21;
  else
    v23 = v19;
  if (v23)
  {
    v26 = (unsigned __int16 *)*((_QWORD *)v2 + 3);
    v24 = v2 + 12;
    v25 = v26;
    if (v22 < 0)
      v24 = v25;
    v29 = (unsigned __int16 *)*((_QWORD *)v3 + 3);
    v27 = v3 + 12;
    v28 = v29;
    if (v20 < 0)
      v27 = v28;
    while (1)
    {
      v30 = *v24;
      v31 = *v27;
      if (v31 != v30)
        break;
      ++v24;
      ++v27;
      if (!--v23)
        goto LABEL_45;
    }
    v32 = v30 >= v31;
  }
  else
  {
LABEL_45:
    v32 = v21 >= v19;
  }
  return !v32;
}

void sub_1CB4E49F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char *a11)
{
  std::__tree<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::__map_value_compare<morphun::dialog::SemanticValue,std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::less<morphun::dialog::SemanticValue>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>>>::destroy(a11);
  _Unwind_Resume(a1);
}

uint64_t *morphun::dialog::SemanticFeatureModel::getKnownSemanticValues@<X0>(uint64_t *this@<X0>, uint64_t **a2@<X8>)
{
  char **v2;
  uint64_t *v3;
  uint64_t *v4;
  char *v6;
  char **v7;
  char **v8;
  _QWORD *v9;
  char *v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v13;
  BOOL v14;

  a2[1] = 0;
  v2 = (char **)(a2 + 1);
  a2[2] = 0;
  *a2 = (uint64_t *)(a2 + 1);
  v3 = (uint64_t *)this[7];
  v4 = this + 8;
  if (v3 != this + 8)
  {
    do
    {
      v6 = *v2;
      v7 = v2;
      v8 = v2;
      if (*v2)
      {
        while (1)
        {
          while (1)
          {
            v7 = (char **)v6;
            v9 = v6 + 32;
            if (!std::less<morphun::dialog::SemanticValue>::operator()[abi:ne180100](v3 + 4, (_QWORD *)v6 + 4))
              break;
            v6 = *v7;
            v8 = v7;
            if (!*v7)
              goto LABEL_8;
          }
          this = (uint64_t *)std::less<morphun::dialog::SemanticValue>::operator()[abi:ne180100](v9, v3 + 4);
          if (!(_DWORD)this)
            break;
          v8 = v7 + 1;
          v6 = v7[1];
          if (!v6)
            goto LABEL_8;
        }
      }
      else
      {
LABEL_8:
        v10 = (char *)operator new(0x58uLL);
        std::pair<std::basic_string<char16_t>,std::basic_string<char16_t>>::pair[abi:ne180100]((std::basic_string<char16_t> *)(v10 + 40), (__int128 *)((char *)v3 + *(_QWORD *)(v3[4] - 40) + 32));
        *((_QWORD *)v10 + 4) = &off_1E866AAC0;
        *(_QWORD *)v10 = 0;
        *((_QWORD *)v10 + 1) = 0;
        *((_QWORD *)v10 + 2) = v7;
        *v8 = v10;
        v11 = (uint64_t *)**a2;
        if (v11)
        {
          *a2 = v11;
          v10 = *v8;
        }
        this = std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a2[1], (uint64_t *)v10);
        a2[2] = (uint64_t *)((char *)a2[2] + 1);
      }
      v12 = (uint64_t *)v3[1];
      if (v12)
      {
        do
        {
          v13 = v12;
          v12 = (uint64_t *)*v12;
        }
        while (v12);
      }
      else
      {
        do
        {
          v13 = (uint64_t *)v3[2];
          v14 = *v13 == (_QWORD)v3;
          v3 = v13;
        }
        while (!v14);
      }
      v3 = v13;
    }
    while (v13 != v4);
  }
  return this;
}

void sub_1CB4E4B5C(_Unwind_Exception *a1)
{
  void *v1;
  _QWORD **v2;

  operator delete(v1);
  std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(*v2);
  _Unwind_Resume(a1);
}

_QWORD *morphun::dialog::SemanticFeatureModel::getDisplayData(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v5;
  _BOOL4 v6;
  _QWORD *v7;

  v2 = (_QWORD *)(a1 + 64);
  v3 = *(_QWORD **)(a1 + 64);
  if (!v3)
    goto LABEL_8;
  v5 = (_QWORD *)(a1 + 64);
  do
  {
    v6 = std::less<morphun::dialog::SemanticValue>::operator()[abi:ne180100](v3 + 4, a2);
    v7 = v3 + 1;
    if (!v6)
    {
      v7 = v3;
      v5 = v3;
    }
    v3 = (_QWORD *)*v7;
  }
  while (*v7);
  if (v5 == v2 || std::less<morphun::dialog::SemanticValue>::operator()[abi:ne180100](a2, v5 + 4))
LABEL_8:
    v5 = v2;
  if (v2 == v5)
    return 0;
  else
    return v5 + 11;
}

uint64_t morphun::dialog::SemanticFeatureModel::getFeature(uint64_t a1, unsigned __int16 *a2)
{
  uint64_t v3;

  v3 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a1 + 8, a2);
  if (a1 + 16 == v3)
    return 0;
  else
    return *(_QWORD *)(v3 + 56);
}

void morphun::dialog::SemanticFeatureModel::getFeatureAlias(uint64_t a1@<X0>, unsigned __int16 *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _BOOL4 v8;
  uint64_t *v9;
  std::basic_string<char16_t> *v10;

  v4 = a1 + 40;
  v5 = *(_QWORD *)(a1 + 40);
  if (!v5)
    goto LABEL_8;
  v7 = a1 + 40;
  do
  {
    v8 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v5 + 32), a2);
    v9 = (uint64_t *)(v5 + 8);
    if (!v8)
    {
      v9 = (uint64_t *)v5;
      v7 = v5;
    }
    v5 = *v9;
  }
  while (*v9);
  if (v7 == v4 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a2, (unsigned __int16 *)(v7 + 32)))
  {
LABEL_8:
    *a3 = 0u;
    a3[1] = 0u;
  }
  else
  {
    *(_QWORD *)a3 = *(_QWORD *)(v7 + 56);
    v10 = (std::basic_string<char16_t> *)((char *)a3 + 8);
    if (*(char *)(v7 + 87) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(v10, *(const std::basic_string<char16_t>::value_type **)(v7 + 64), *(_QWORD *)(v7 + 72));
    }
    else
    {
      *(_OWORD *)&v10->__r_.__value_.__l.__data_ = *(_OWORD *)(v7 + 64);
      v10->__r_.__value_.__r.__words[2] = *(_QWORD *)(v7 + 80);
    }
  }
}

uint64_t morphun::dialog::SemanticFeatureModel::getLocale(morphun::dialog::SemanticFeatureModel *this)
{
  return (uint64_t)this + 104;
}

uint64_t morphun::dialog::SemanticFeatureModel::getDefaultFeatureFunction(morphun::dialog::SemanticFeatureModel *this, const morphun::dialog::SemanticFeature *a2)
{
  char *v2;
  _QWORD *v3;
  char *v5;
  _BOOL4 v6;
  _QWORD *v7;

  v2 = (char *)this + 88;
  v3 = (_QWORD *)*((_QWORD *)this + 11);
  if (!v3)
    return 0;
  v5 = (char *)this + 88;
  do
  {
    v6 = morphun::dialog::SemanticFeature::operator<((uint64_t)(v3 + 4), (uint64_t)a2);
    v7 = v3 + 1;
    if (!v6)
    {
      v7 = v3;
      v5 = (char *)v3;
    }
    v3 = (_QWORD *)*v7;
  }
  while (*v7);
  if (v5 == v2 || morphun::dialog::SemanticFeature::operator<((uint64_t)a2, (uint64_t)(v5 + 32)))
    return 0;
  else
    return *((_QWORD *)v5 + 13);
}

void morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunction(morphun::dialog::SemanticFeatureModel *this, const morphun::dialog::SemanticFeature *a2, morphun::dialog::DefaultFeatureFunction *a3)
{
  uint64_t *v6;
  char *v7;
  uint64_t **v8;
  uint64_t **v9;
  char *v10;
  _QWORD *v11;
  _BOOL4 v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21[2];
  char v22;

  v7 = (char *)this + 88;
  v6 = (uint64_t *)*((_QWORD *)this + 11);
  v8 = (uint64_t **)((char *)this + 88);
  v9 = (uint64_t **)((char *)this + 88);
  if (!v6)
  {
LABEL_13:
    v15 = (uint64_t *)operator new(0x70uLL);
    v21[0] = (uint64_t)v15;
    v21[1] = (uint64_t)v7;
    morphun::dialog::SemanticFeature::SemanticFeature((morphun::dialog::SemanticFeature *)(v15 + 4), a2);
    v15[13] = 0;
    v22 = 1;
    *v15 = 0;
    v15[1] = 0;
    v15[2] = (uint64_t)v8;
    *v9 = v15;
    v16 = **((_QWORD **)this + 10);
    v17 = v15;
    if (v16)
    {
      *((_QWORD *)this + 10) = v16;
      v17 = *v9;
    }
    std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*((uint64_t **)this + 11), v17);
    ++*((_QWORD *)this + 12);
    v21[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>,void *>>>>::reset[abi:ne180100](v21);
LABEL_16:
    v18 = v15 + 13;
    goto LABEL_17;
  }
  v10 = (char *)this + 88;
  v11 = (_QWORD *)*((_QWORD *)this + 11);
  do
  {
    v12 = morphun::dialog::SemanticFeature::operator<((uint64_t)(v11 + 4), (uint64_t)a2);
    v13 = v11 + 1;
    if (!v12)
    {
      v13 = v11;
      v10 = (char *)v11;
    }
    v11 = (_QWORD *)*v13;
  }
  while (*v13);
  if (v10 == v7 || morphun::dialog::SemanticFeature::operator<((uint64_t)a2, (uint64_t)(v10 + 32)))
  {
    while (1)
    {
      while (1)
      {
        v8 = (uint64_t **)v6;
        v14 = (uint64_t)(v6 + 4);
        if (!morphun::dialog::SemanticFeature::operator<((uint64_t)a2, v14))
          break;
        v6 = *v8;
        v9 = v8;
        if (!*v8)
          goto LABEL_13;
      }
      if (!morphun::dialog::SemanticFeature::operator<(v14, (uint64_t)a2))
        break;
      v9 = v8 + 1;
      v6 = v8[1];
      if (!v6)
        goto LABEL_13;
    }
    v15 = (uint64_t *)v8;
    goto LABEL_16;
  }
  v20 = *((_QWORD *)v10 + 13);
  v18 = v10 + 104;
  v19 = v20;
  if (v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v19 + 16))(v19);
LABEL_17:
  *v18 = a3;
}

void sub_1CB4E4F0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::unique_ptr<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>,void *>>>>::reset[abi:ne180100]((uint64_t *)va);
  _Unwind_Resume(a1);
}

void std::unique_ptr<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>,void *>>>>::reset[abi:ne180100](uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  *a1 = 0;
  if (v1)
  {
    if (*((_BYTE *)a1 + 16))
    operator delete((void *)v1);
  }
}

void morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName(uint64_t a1, unsigned __int16 *a2, morphun::dialog::DefaultFeatureFunction *a3)
{
  uint64_t v6;
  const morphun::dialog::SemanticFeature *v7;
  _QWORD *exception;
  const char *v9;
  uint64_t v10;
  std::basic_string<char16_t> *v11;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t> v13;
  std::basic_string<char16_t> v14;
  std::basic_string<char16_t> v15;

  v6 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a1 + 8, a2);
  if (a1 + 16 == v6 || (v7 = *(const morphun::dialog::SemanticFeature **)(v6 + 56)) == 0)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v14, (const void **)a2, word_1CB72FDBE);
    if (*(char *)(a1 + 231) < 0)
    {
      v9 = *(const char **)(a1 + 208);
      v10 = *(_QWORD *)(a1 + 216);
    }
    else
    {
      v9 = (const char *)(a1 + 208);
      LODWORD(v10) = *(unsigned __int8 *)(a1 + 231);
    }
    morphun::util::StringViewUtils::to_u16string(v9, v10, &v13);
    if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v11 = &v13;
    else
      v11 = (std::basic_string<char16_t> *)v13.__r_.__value_.__r.__words[0];
    if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v13.__r_.__value_.__r.__words[2]);
    else
      size = v13.__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::append(&v14, (const std::basic_string<char16_t>::value_type *)v11, size);
    v15 = v14;
    memset(&v14, 0, sizeof(v14));
    morphun::exception::Throwable::Throwable((uint64_t)exception, (__int128 *)&v15);
    *exception = &off_1E8673120;
  }
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunction((morphun::dialog::SemanticFeatureModel *)a1, v7, a3);
}

void sub_1CB4E5084(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  void *v23;
  void *v24;
  int v25;
  int v26;

  if (a23 < 0)
    operator delete(__p);
  if (v25 < 0)
    operator delete(v24);
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v26 & 1) == 0)
LABEL_10:
      _Unwind_Resume(a1);
  }
  else if (!v26)
  {
    goto LABEL_10;
  }
  __cxa_free_exception(v23);
  goto LABEL_10;
}

uint64_t std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>(uint64_t a1, const void **a2, _WORD *a3)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char *v10;
  const void *v11;

  if (*((char *)a2 + 23) >= 0)
    v5 = *((unsigned __int8 *)a2 + 23);
  else
    v5 = (unint64_t)a2[1];
  if (*a3)
  {
    v6 = 0;
    do
      v7 = v6 + 1;
    while (a3[++v6]);
  }
  else
  {
    v7 = 0;
  }
  result = std::basic_string<char16_t>::basic_string[abi:ne180100](a1, v7 + v5);
  if (*(char *)(result + 23) >= 0)
    v10 = (char *)result;
  else
    v10 = *(char **)result;
  if (v5)
  {
    if (*((char *)a2 + 23) >= 0)
      v11 = a2;
    else
      v11 = *a2;
    result = (uint64_t)memmove(v10, v11, 2 * v5);
  }
  if (v7)
    result = (uint64_t)memmove(&v10[2 * v5], a3, 2 * v7);
  *(_WORD *)&v10[2 * v5 + 2 * v7] = 0;
  return result;
}

uint64_t morphun::dialog::SemanticFeatureModel::getDefaultDisplayFunction(morphun::dialog::SemanticFeatureModel *this)
{
  return *((_QWORD *)this + 29);
}

uint64_t morphun::dialog::SemanticFeatureModel::setDefaultDisplayFunction(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 232);
  if (result)
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
  *(_QWORD *)(a1 + 232) = a2;
  return result;
}

void morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::~DaGrammarSynthesizer_DaDisplayFunction(morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_1E866E1C0;
  *((_QWORD *)this + 37) = &unk_1E866E218;
  *((_QWORD *)this + 11) = &off_1E866B2F8;
  v2 = (void *)*((_QWORD *)this + 33);
  if (v2)
  {
    *((_QWORD *)this + 34) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 31);
  *((_QWORD *)this + 31) = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 16))(v3);
  *((_QWORD *)this + 12) = &off_1E8671C00;
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
}

{
  morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::~DaGrammarSynthesizer_DaDisplayFunction(this);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::getDisplayValue(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  const std::basic_string<char16_t> *v6;
  unsigned int v7;
  std::basic_string<char16_t>::size_type size;
  uint64_t v9;
  std::basic_string<char16_t> *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  morphun::exception::NullPointerException *exception;
  std::basic_string<char16_t> v17;
  std::basic_string<char16_t> v18;

  memset(&v18, 0, sizeof(v18));
  v5 = *(_QWORD *)(a2 + 8);
  if (v5 == *(_QWORD *)(a2 + 16))
  {
    size = 0;
    v7 = 0;
  }
  else
  {
    v6 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
    std::basic_string<char16_t>::operator=(&v18, v6);
    v7 = HIBYTE(v18.__r_.__value_.__r.__words[2]);
    size = v18.__r_.__value_.__l.__size_;
  }
  if ((v7 & 0x80u) == 0)
    v9 = v7;
  else
    v9 = size;
  if (!v9)
  {
    v11 = 0;
    if ((v7 & 0x80) != 0)
      goto LABEL_22;
    return v11;
  }
  if (*(_QWORD *)(a3 + 16))
  {
    if ((v7 & 0x80u) == 0)
      v10 = &v18;
    else
      v10 = (std::basic_string<char16_t> *)v18.__r_.__value_.__r.__words[0];
    if (v10->__r_.__value_.__s.__data_[v9 - 1] == 46)
    {
      morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::makeGenitiveWhenRequested(&v17, a1[3], a3, (unsigned __int16 *)&v18);
LABEL_18:
      if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v18.__r_.__value_.__l.__data_);
      v18 = v17;
      goto LABEL_21;
    }
    v12 = a1[6];
    v17.__r_.__value_.__r.__words[0] = 0;
    if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v12, (uint64_t)&v17, (const UChar *)v10, v9))
    {
      morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::inflectWord(&v17, a1, a3, &v18, (uint64_t)&v18, 1, 0);
      goto LABEL_18;
    }
    v14 = a1[8];
    if (!v14)
    {
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
    v15 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(_QWORD *)v14 + 24))(v14, &v18);
    npc<morphun::TokenChain>(v15);
    npc<morphun::TokenChain>(v15);
    morphun::grammar::synthesis::GrammarSynthesizerUtil::inflectSignificantWords(&v17, a3, v15, (uint64_t)a1 + *(_QWORD *)(*a1 - 64));
    if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v18.__r_.__value_.__l.__data_);
    v18 = v17;
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 16))(v15);
  }
LABEL_21:
  v11 = operator new();
  morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue(v11, (__int128 *)&v18, a3);
  if ((*((_BYTE *)&v18.__r_.__value_.__s + 23) & 0x80) != 0)
LABEL_22:
    operator delete(v18.__r_.__value_.__l.__data_);
  return v11;
}

void sub_1CB4E54C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  void *v18;

  __cxa_free_exception(v18);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::inflectSignificantTokens(uint64_t *a1@<X0>, uint64_t a2@<X1>, __int128 **a3@<X2>, char **a4@<X3>, std::basic_string<char16_t> *a5@<X8>)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  __int128 *v16;
  unint64_t v17;
  unint64_t v18;
  std::basic_string<char16_t> *v19;
  uint64_t v20;
  uint64_t size;
  const UChar *v22;
  uint64_t v23;
  __int128 v24;
  __int128 *v25;
  std::basic_string<char16_t>::size_type v26;
  char v27;
  std::basic_string<char16_t>::size_type v28;
  std::basic_string<char16_t> *v29;
  std::basic_string<char16_t> *p_str;
  _QWORD *CombinedBinaryType;
  uint64_t v32;
  const UChar *v33;
  _QWORD *v34;
  BOOL v35;
  unint64_t v36;
  uint64_t v37;
  __int128 v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  __int128 v43;
  uint64_t v44;
  std::basic_string<char16_t> __str;
  std::basic_string<char16_t> v46;

  v10 = *((int *)a4[1] - 1);
  v11 = a1[6];
  npc<std::vector<std::basic_string<char16_t>>>((uint64_t)a3);
  if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) <= v10)
    goto LABEL_62;
  v12 = (uint64_t)*a3 + 24 * (int)v10;
  if (*(char *)(v12 + 23) < 0)
  {
    v12 = *(_QWORD *)v12;
    v13 = *((_QWORD *)*a3 + 3 * (int)v10 + 1);
  }
  else
  {
    v13 = *(unsigned __int8 *)(v12 + 23);
  }
  v46.__r_.__value_.__r.__words[0] = 0;
  if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v11, (uint64_t)&v46, (const UChar *)v12, v13))
  {
    v14 = *a4;
    if (a4[1] - *a4 == 8)
    {
      v15 = *(int *)v14;
      v16 = *a3;
      v17 = 0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3);
      if (v17 > v15)
      {
        v18 = *((int *)v14 + 1);
        if (v17 > v18)
        {
          v19 = (std::basic_string<char16_t> *)((char *)v16 + 24 * (int)v15);
          v20 = (uint64_t)v16 + 24 * (int)v18;
          v44 = 0;
          __str.__r_.__value_.__r.__words[0] = 0;
          if (SHIBYTE(v19->__r_.__value_.__r.__words[2]) < 0)
          {
            v22 = (const UChar *)v19->__r_.__value_.__r.__words[0];
            size = v19->__r_.__value_.__l.__size_;
          }
          else
          {
            size = HIBYTE(v19->__r_.__value_.__r.__words[2]);
            v22 = (const UChar *)v16 + 12 * (int)v15;
          }
          CombinedBinaryType = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1[6], (uint64_t)&__str, v22, size);
          if (*(char *)(v20 + 23) < 0)
          {
            v33 = *(const UChar **)v20;
            v32 = *(_QWORD *)(v20 + 8);
          }
          else
          {
            v32 = *(unsigned __int8 *)(v20 + 23);
            v33 = (const UChar *)v20;
          }
          v34 = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1[6], (uint64_t)&v44, v33, v32);
          if (CombinedBinaryType)
            v35 = v34 == 0;
          else
            v35 = 1;
          if (v35
            || (a1[9] & __str.__r_.__value_.__r.__words[0]) != 0
            && (v41 = a1[10], (v41 & __str.__r_.__value_.__r.__words[0]) == 0)
            && (v44 & v41) != 0)
          {
            morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::inflectWord(&v46, a1, a2, v19, v20, 0, 0);
            v36 = *(int *)*a4;
            if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) <= v36)
              std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
            v37 = (uint64_t)*a3 + 24 * (int)v36;
            if (*(char *)(v37 + 23) < 0)
              operator delete(*(void **)v37);
            v38 = *(_OWORD *)&v46.__r_.__value_.__l.__data_;
            *(_QWORD *)(v37 + 16) = *((_QWORD *)&v46.__r_.__value_.__l + 2);
            *(_OWORD *)v37 = v38;
            morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::inflectWord(&v46, a1, a2, (std::basic_string<char16_t> *)v20, v20, 1, 1);
            v39 = *((int *)*a4 + 1);
            if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) <= v39)
              std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
            v40 = (uint64_t)*a3 + 24 * (int)v39;
            goto LABEL_56;
          }
          v42 = *((int *)*a4 + 1);
          if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) > v42)
          {
            morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::inflectWord(&v46, a1, a2, (std::basic_string<char16_t> *)*a3 + (int)v42, (uint64_t)*a3 + 24 * (int)v42, 1, 0);
            v25 = *a3;
            if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) <= v10)
              std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
LABEL_55:
            v40 = (uint64_t)v25 + 24 * (int)v10;
LABEL_56:
            if (*(char *)(v40 + 23) < 0)
              operator delete(*(void **)v40);
            v43 = *(_OWORD *)&v46.__r_.__value_.__l.__data_;
            *(_QWORD *)(v40 + 16) = *((_QWORD *)&v46.__r_.__value_.__l + 2);
            *(_OWORD *)v40 = v43;
            a5->__r_.__value_.__r.__words[0] = 0;
            a5->__r_.__value_.__l.__size_ = 0;
            a5->__r_.__value_.__r.__words[2] = 0;
            std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(a5, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3));
            return;
          }
        }
      }
    }
    else if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) > v10)
    {
      morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::inflectWord(&v46, a1, a2, (std::basic_string<char16_t> *)*a3 + (int)v10, (uint64_t)*a3 + 24 * (int)v10, 1, 0);
      v25 = *a3;
      if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) <= v10)
        std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
      goto LABEL_55;
    }
LABEL_62:
    std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
  }
  if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) <= v10)
    goto LABEL_62;
  v23 = (uint64_t)*a3 + 24 * (int)v10;
  if (*(char *)(v23 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v46, *(const std::basic_string<char16_t>::value_type **)v23, *(_QWORD *)(v23 + 8));
  }
  else
  {
    v24 = *(_OWORD *)v23;
    v46.__r_.__value_.__r.__words[2] = *(_QWORD *)(v23 + 16);
    *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v24;
  }
  morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::makeGenitiveWhenRequested(&__str, a1[3], a2, (unsigned __int16 *)&v46);
  v26 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  v27 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v26 = __str.__r_.__value_.__l.__size_;
  v28 = HIBYTE(v46.__r_.__value_.__r.__words[2]);
  if ((v46.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v28 = v46.__r_.__value_.__l.__size_;
  if (v26 == v28)
  {
    if (!v26)
    {
LABEL_30:
      a5->__r_.__value_.__r.__words[0] = 0;
      a5->__r_.__value_.__l.__size_ = 0;
      a5->__r_.__value_.__r.__words[2] = 0;
      if ((v27 & 0x80) == 0)
        goto LABEL_35;
      goto LABEL_34;
    }
    v29 = &v46;
    if ((v46.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v29 = (std::basic_string<char16_t> *)v46.__r_.__value_.__r.__words[0];
    p_str = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_str = &__str;
    while (v29->__r_.__value_.__s.__data_[0] == p_str->__r_.__value_.__s.__data_[0])
    {
      p_str = (std::basic_string<char16_t> *)((char *)p_str + 2);
      v29 = (std::basic_string<char16_t> *)((char *)v29 + 2);
      if (!--v26)
        goto LABEL_30;
    }
  }
  if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) <= v10)
    std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
  std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)*a3 + (int)v10, &__str);
  a5->__r_.__value_.__r.__words[0] = 0;
  a5->__r_.__value_.__l.__size_ = 0;
  a5->__r_.__value_.__r.__words[2] = 0;
  std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(a5, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3));
  if ((*((_BYTE *)&__str.__r_.__value_.__s + 23) & 0x80) == 0)
    goto LABEL_35;
LABEL_34:
  operator delete(__str.__r_.__value_.__l.__data_);
LABEL_35:
  if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v46.__r_.__value_.__l.__data_);
}

void sub_1CB4E5A28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void `virtual thunk to'morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::~DaGrammarSynthesizer_DaDisplayFunction(morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction *this)
{
  morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::~DaGrammarSynthesizer_DaDisplayFunction((morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 32)));
}

{
  morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::~DaGrammarSynthesizer_DaDisplayFunction((morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 32)));
  JUMPOUT(0x1D179D2ECLL);
}

void `virtual thunk to'morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::inflectSignificantTokens(_QWORD *a1@<X0>, uint64_t a2@<X1>, __int128 **a3@<X2>, char **a4@<X3>, std::basic_string<char16_t> *a5@<X8>)
{
  morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::inflectSignificantTokens((_QWORD *)((char *)a1 + *(_QWORD *)(*a1 - 48)), a2, a3, a4, a5);
}

uint64_t npc<std::vector<std::basic_string<char16_t>>>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4E5B00(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::makeGenitiveWhenRequested(std::basic_string<char16_t> *a1, uint64_t a2, uint64_t a3, unsigned __int16 *a4)
{
  morphun::grammar::synthesis::GrammemeConstants *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  std::basic_string<char16_t>::size_type size;
  int v11;
  std::basic_string<char16_t> *p_p;
  unsigned __int16 *v13;
  unint64_t v14;
  unsigned __int16 *v15;
  UChar32 v16;
  __int16 v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  const void *v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v32;
  const void *v33;
  char *v34;
  std::basic_string<char16_t> __p;

  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__p, a3, a2);
  v7 = morphun::grammar::synthesis::GrammemeConstants::CASE_GENITIVE(v6);
  v8 = *(unsigned __int8 *)(v7 + 23);
  v9 = (char)v8;
  if ((v8 & 0x80u) != 0)
    v8 = *(_QWORD *)(v7 + 8);
  size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  v11 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = __p.__r_.__value_.__l.__size_;
  if (v8 == size)
  {
    if (v8)
    {
      p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        p_p = &__p;
      if (v9 >= 0)
        v13 = (unsigned __int16 *)v7;
      else
        v13 = *(unsigned __int16 **)v7;
      while ((unsigned __int16)p_p->__r_.__value_.__s.__data_[0] == *v13)
      {
        ++v13;
        p_p = (std::basic_string<char16_t> *)((char *)p_p + 2);
        if (!--v8)
          goto LABEL_14;
      }
      goto LABEL_25;
    }
LABEL_14:
    if (*((char *)a4 + 23) < 0)
    {
      v14 = *((_QWORD *)a4 + 1);
      if (v14 > 1)
      {
        v15 = *(unsigned __int16 **)a4;
LABEL_19:
        v16 = MEMORY[0x1D179D634](v15[v14 - 1]);
        if ((v16 - 115) <= 7 && ((1 << (v16 - 115)) & 0xA1) != 0)
        {
          v18 = 8217;
LABEL_24:
          std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)a1, (const void **)a4, v18);
          goto LABEL_29;
        }
        v19 = *((char *)a4 + 23);
        if (v19 >= 0)
          v20 = (uint64_t)a4;
        else
          v20 = *(_QWORD *)a4;
        if (v19 >= 0)
          v21 = *((unsigned __int8 *)a4 + 23);
        else
          v21 = *((_QWORD *)a4 + 1);
        if (morphun::util::StringViewUtils::isAllUpperCase(v20, v21) && !u_ispunct(v16))
        {
          LOBYTE(v23) = *((_BYTE *)a4 + 23);
          v24 = *((_QWORD *)a4 + 1);
        }
        else
        {
          v22 = u_isdigit(v16);
          v23 = *((char *)a4 + 23);
          v24 = *((_QWORD *)a4 + 1);
          if (!v22)
          {
            v25 = v23 >= 0 ? *((unsigned __int8 *)a4 + 23) : *((_QWORD *)a4 + 1);
            if (v25 < 3)
              goto LABEL_53;
            v26 = 0;
            v27 = *(const void **)a4;
            if (v23 >= 0)
              v27 = a4;
            v28 = (uint64_t)v27 + 2 * v25 - 6;
            do
            {
              v29 = *(unsigned __int16 *)(v28 + v26 * 2);
              v30 = (unsigned __int16)word_1CB72FE1A[v26];
            }
            while (v30 == v29 && v26++ != 2);
            if (v30 != v29)
            {
LABEL_53:
              v18 = 115;
              goto LABEL_24;
            }
          }
        }
        if ((v23 & 0x80u) == 0)
          v32 = v23;
        else
          v32 = v24;
        std::basic_string<char16_t>::basic_string[abi:ne180100]((uint64_t)a1, v32 + 2);
        if ((a1->__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          a1 = (std::basic_string<char16_t> *)a1->__r_.__value_.__r.__words[0];
        if (v32)
        {
          if (*((char *)a4 + 23) >= 0)
            v33 = a4;
          else
            v33 = *(const void **)a4;
          memmove(a1, v33, 2 * v32);
        }
        v34 = (char *)a1 + 2 * v32;
        *(_DWORD *)v34 = 7544857;
        *((_WORD *)v34 + 2) = 0;
        if (v11 < 0)
          goto LABEL_66;
        return;
      }
    }
    else
    {
      v14 = *((unsigned __int8 *)a4 + 23);
      if (v14 > 1)
      {
        v15 = a4;
        goto LABEL_19;
      }
    }
  }
LABEL_25:
  if ((*((char *)a4 + 23) & 0x80000000) == 0)
  {
    *(_OWORD *)&a1->__r_.__value_.__l.__data_ = *(_OWORD *)a4;
    a1->__r_.__value_.__r.__words[2] = *((_QWORD *)a4 + 2);
    if (v11 < 0)
      goto LABEL_66;
    return;
  }
  std::basic_string<char16_t>::__init_copy_ctor_external(a1, *(const std::basic_string<char16_t>::value_type **)a4, *((_QWORD *)a4 + 1));
LABEL_29:
  if (v11 < 0)
LABEL_66:
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_1CB4E5D8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  char v15;

  if (v15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::inflectWord(std::basic_string<char16_t> *a1, uint64_t *a2, uint64_t a3, std::basic_string<char16_t> *a4, uint64_t a5, int a6, int a7)
{
  uint64_t v11;
  morphun::grammar::synthesis::GrammemeConstants *v14;
  const std::basic_string<char16_t> *v15;
  int v16;
  const UChar *v17;
  uint64_t v18;
  std::basic_string<char16_t>::size_type size;
  int v20;
  morphun::grammar::synthesis::GrammemeConstants *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  std::basic_string<char16_t>::size_type v25;
  std::basic_string<char16_t> *v26;
  unsigned __int16 *v27;
  _BOOL4 v28;
  int v29;
  const UChar *v30;
  uint64_t v31;
  morphun::grammar::synthesis::GrammemeConstants *PropertyValues;
  std::basic_string<char16_t>::size_type v33;
  const std::basic_string<char16_t> *v34;
  std::basic_string<char16_t>::size_type v35;
  const std::basic_string<char16_t> *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int16 KeyId;
  morphun::grammar::synthesis::GrammemeConstants *InflectionPattern;
  uint64_t v45;
  std::basic_string<char16_t> *v46;
  std::basic_string<char16_t> *v47;
  std::basic_string<char16_t>::size_type v48;
  __int128 v49;
  int v50;
  std::basic_string<char16_t>::size_type v51;
  std::basic_string<char16_t>::size_type v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  unsigned __int16 *v56;
  std::basic_string<char16_t> *p_s;
  uint64_t v58;
  uint64_t v59;
  std::basic_string<char16_t>::size_type v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  const UChar *v64;
  uint64_t v65;
  int v66;
  char *v67;
  unint64_t v68;
  unint64_t v69;
  int v70;
  std::basic_string<char16_t> *v71;
  int v72;
  uint64_t v75;
  std::allocator<char16_t> *v76;
  uint64_t v77;
  int v78;
  std::basic_string<char16_t>::size_type v79;
  std::basic_string<char16_t> *v80;
  unsigned __int16 *v81;
  uint64_t v82;
  int v83;
  std::basic_string<char16_t>::size_type v84;
  std::basic_string<char16_t> *v85;
  unsigned __int16 *v86;
  uint64_t v87;
  int v88;
  BOOL v89;
  std::basic_string<char16_t>::size_type v90;
  std::basic_string<char16_t> *v91;
  uint64_t v92;
  std::basic_string<char16_t> *v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  std::basic_string<char16_t>::size_type v98;
  std::basic_string<char16_t> *v99;
  unsigned __int16 *v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  std::basic_string<char16_t>::size_type v104;
  std::basic_string<char16_t> *p_p;
  unsigned __int16 *v106;
  char v107;
  std::basic_string<char16_t>::size_type v108;
  std::basic_string<char16_t> *v109;
  std::basic_string<char16_t>::size_type v110;
  std::basic_string<char16_t>::size_type v111;
  std::basic_string<char16_t> *v113;
  uint64_t v114;
  std::basic_string<char16_t> *v115;
  int v116;
  uint64_t v117;
  std::basic_string<char16_t> *v118;
  void **v119;
  std::basic_string<char16_t> v120;
  uint64_t v121;
  uint64_t v122;
  std::basic_string<char16_t> v123;
  std::basic_string<char16_t> __p;
  uint64_t v125;
  std::basic_string<char16_t> __s;
  std::basic_string<char16_t> v127;
  std::basic_string<char16_t> v128;
  void **__dst;
  _BYTE v130[15];
  char v131;
  uint64_t v132;
  uint64_t v133;
  _BYTE v134[32];
  __int128 v135;
  char v136;
  std::basic_string<char16_t> v137;
  std::basic_string<char16_t> v138;
  _BYTE v139[32];
  __int128 v140;
  _QWORD v141[5];

  v11 = a3;
  v141[2] = *MEMORY[0x1E0C80C00];
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v128, a3, a2[2]);
  memset(&v127, 0, sizeof(v127));
  if (a7)
  {
    v15 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_INDEFINITE(v14);
    std::basic_string<char16_t>::operator=(&v127, v15);
  }
  else
  {
    morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue((std::basic_string<char16_t> *)v134, v11, a2[1]);
    if (SHIBYTE(v127.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v127.__r_.__value_.__l.__data_);
    v127 = *(std::basic_string<char16_t> *)v134;
  }
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__s, v11, a2[3]);
  v125 = 0;
  v16 = *(char *)(a5 + 23);
  if (v16 >= 0)
    v17 = (const UChar *)a5;
  else
    v17 = *(const UChar **)a5;
  if (v16 >= 0)
    v18 = *(unsigned __int8 *)(a5 + 23);
  else
    v18 = *(_QWORD *)(a5 + 8);
  morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a2[6], (uint64_t)&v125, v17, v18);
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__p, v11, a2[4]);
  size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  v20 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = __p.__r_.__value_.__l.__size_;
  if (!size)
  {
    morphun::dialog::DictionaryLookupFunction::determine((uint64_t)(a2 + 11), a5, v134);
    if (v20 < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    __p = *(std::basic_string<char16_t> *)v134;
  }
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v123, v11, a2[5]);
  v22 = morphun::grammar::synthesis::GrammemeConstants::POS_ADJECTIVE(v21);
  v23 = *(unsigned __int8 *)(v22 + 23);
  v24 = (char)v23;
  if ((v23 & 0x80u) != 0)
    v23 = *(_QWORD *)(v22 + 8);
  v25 = HIBYTE(v123.__r_.__value_.__r.__words[2]);
  if ((v123.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v25 = v123.__r_.__value_.__l.__size_;
  if (v23 != v25)
  {
LABEL_32:
    v28 = (a2[9] & v125) == 0 || (a2[10] & v125) != 0;
    goto LABEL_35;
  }
  if (v23)
  {
    v26 = &v123;
    if ((v123.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v26 = (std::basic_string<char16_t> *)v123.__r_.__value_.__r.__words[0];
    if (v24 >= 0)
      v27 = (unsigned __int16 *)v22;
    else
      v27 = *(unsigned __int16 **)v22;
    while ((unsigned __int16)v26->__r_.__value_.__s.__data_[0] == *v27)
    {
      ++v27;
      v26 = (std::basic_string<char16_t> *)((char *)v26 + 2);
      if (!--v23)
        goto LABEL_31;
    }
    goto LABEL_32;
  }
LABEL_31:
  v28 = 0;
LABEL_35:
  v29 = SHIBYTE(a4->__r_.__value_.__r.__words[2]);
  if (v29 >= 0)
    v30 = (const UChar *)a4;
  else
    v30 = (const UChar *)a4->__r_.__value_.__r.__words[0];
  if (v29 >= 0)
    v31 = HIBYTE(a4->__r_.__value_.__r.__words[2]);
  else
    v31 = a4->__r_.__value_.__l.__size_;
  PropertyValues = (morphun::grammar::synthesis::GrammemeConstants *)morphun::dictionary::DictionaryMetaData::getPropertyValues(a2[6], v30, v31, (unsigned __int16 *)"i", 0xAuLL, &v121);
  *(_QWORD *)((char *)v141 + 7) = 0;
  v141[0] = 0;
  if (SHIBYTE(v128.__r_.__value_.__r.__words[2]) < 0)
    std::basic_string<char16_t>::__init_copy_ctor_external(&v138, v128.__r_.__value_.__l.__data_, v128.__r_.__value_.__l.__size_);
  else
    v138 = v128;
  if (SHIBYTE(v127.__r_.__value_.__r.__words[2]) < 0)
    std::basic_string<char16_t>::__init_copy_ctor_external(&v137, v127.__r_.__value_.__l.__data_, v127.__r_.__value_.__l.__size_);
  else
    v137 = v127;
  v33 = HIBYTE(v138.__r_.__value_.__r.__words[2]);
  if ((v138.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v33 = v138.__r_.__value_.__l.__size_;
  if (!v33)
  {
    v34 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(PropertyValues);
    PropertyValues = (morphun::grammar::synthesis::GrammemeConstants *)std::basic_string<char16_t>::operator=(&v138, v34);
  }
  v35 = HIBYTE(v137.__r_.__value_.__r.__words[2]);
  if ((v137.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v35 = v137.__r_.__value_.__l.__size_;
  if (!v35)
  {
    v36 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_INDEFINITE(PropertyValues);
    PropertyValues = (morphun::grammar::synthesis::GrammemeConstants *)std::basic_string<char16_t>::operator=(&v137, v36);
  }
  if ((v28 & a6 & 1) == 0)
  {
    if (SHIBYTE(a4->__r_.__value_.__r.__words[2]) < 0)
    {
      v69 = a4->__r_.__value_.__l.__size_;
      if (!v69)
      {
        v110 = 0;
        goto LABEL_244;
      }
    }
    else
    {
      v69 = HIBYTE(a4->__r_.__value_.__r.__words[2]);
      if (!*((_BYTE *)&a4->__r_.__value_.__s + 23))
        goto LABEL_241;
    }
    v70 = 0;
    if ((a4->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v71 = a4;
    else
      v71 = (std::basic_string<char16_t> *)a4->__r_.__value_.__r.__words[0];
    v72 = (unsigned __int16)v71->__r_.__value_.__s.__data_[v69 - 1];
    if (((v72 - 97) > 0x18 || ((1 << (v72 - 97)) & 0x1104111) == 0)
      && ((v72 - 229) > 0x13 || ((1 << (v72 + 27)) & 0x80003) == 0))
    {
      v70 = 1;
    }
    v75 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(PropertyValues);
    v77 = *(unsigned __int8 *)(v75 + 23);
    v78 = (char)v77;
    if ((v77 & 0x80u) != 0)
      v77 = *(_QWORD *)(v75 + 8);
    v79 = HIBYTE(v138.__r_.__value_.__r.__words[2]);
    if ((v138.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v79 = v138.__r_.__value_.__l.__size_;
    if (v77 == v79)
    {
      if (!v77)
        goto LABEL_168;
      v80 = &v138;
      if ((v138.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v80 = (std::basic_string<char16_t> *)v138.__r_.__value_.__r.__words[0];
      if (v78 >= 0)
        v81 = (unsigned __int16 *)v75;
      else
        v81 = *(unsigned __int16 **)v75;
      while ((unsigned __int16)v80->__r_.__value_.__s.__data_[0] == *v81)
      {
        ++v81;
        v80 = (std::basic_string<char16_t> *)((char *)v80 + 2);
        if (!--v77)
          goto LABEL_168;
      }
    }
    v75 = morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_DEFINITE((morphun::grammar::synthesis::GrammemeConstants *)v75);
    v82 = *(unsigned __int8 *)(v75 + 23);
    v83 = (char)v82;
    if ((v82 & 0x80u) != 0)
      v82 = *(_QWORD *)(v75 + 8);
    v84 = HIBYTE(v137.__r_.__value_.__r.__words[2]);
    if ((v137.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v84 = v137.__r_.__value_.__l.__size_;
    if (v82 != v84)
      goto LABEL_197;
    if (v82)
    {
      v85 = &v137;
      if ((v137.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v85 = (std::basic_string<char16_t> *)v137.__r_.__value_.__r.__words[0];
      if (v83 >= 0)
        v86 = (unsigned __int16 *)v75;
      else
        v86 = *(unsigned __int16 **)v75;
      while ((unsigned __int16)v85->__r_.__value_.__s.__data_[0] == *v86)
      {
        ++v86;
        v85 = (std::basic_string<char16_t> *)((char *)v85 + 2);
        if (!--v82)
          goto LABEL_168;
      }
      goto LABEL_197;
    }
LABEL_168:
    if (v69 >= 5)
    {
      v87 = (a4->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
          ? (uint64_t)a4
          : a4->__r_.__value_.__r.__words[0];
      if (*(_WORD *)(v87 + 2 * v69 - 4) == 101 && (v72 - 108) <= 6 && ((1 << (v72 - 108)) & 0x45) != 0)
      {
        v88 = *(unsigned __int16 *)(v87 + 2 * (v69 - 3));
        if (v88 == *(unsigned __int16 *)(v87 + 2 * v69 - 8))
        {
          v89 = (v88 - 97) > 0x18 || ((1 << (v88 - 97)) & 0x1104111) == 0;
          if (v89 && ((v88 - 229) > 0x13 || ((1 << (v88 + 27)) & 0x80003) == 0))
          {
            v115 = std::basic_string<char16_t>::basic_string((std::basic_string<char16_t> *)v139, a4, 0, v69 - 3, v76);
            std::basic_string<char16_t>::push_back(v115, v72);
            *(_OWORD *)v134 = *(_OWORD *)v139;
            *(_QWORD *)&v134[16] = *(_QWORD *)&v139[16];
            memset(v139, 0, 24);
            std::basic_string<char16_t>::push_back((std::basic_string<char16_t> *)v134, 101);
            v120 = *(std::basic_string<char16_t> *)v134;
            memset(v134, 0, 24);
            if ((v139[23] & 0x80000000) != 0)
              operator delete(*(void **)v139);
            goto LABEL_245;
          }
        }
      }
    }
    if (v70)
    {
      if ((a4->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v90 = HIBYTE(a4->__r_.__value_.__r.__words[2]);
      else
        v90 = a4->__r_.__value_.__l.__size_;
      std::basic_string<char16_t>::basic_string[abi:ne180100]((uint64_t)&v120, v90 + 1);
      if ((v120.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v91 = &v120;
      else
        v91 = (std::basic_string<char16_t> *)v120.__r_.__value_.__r.__words[0];
      v92 = 2 * v90;
      if (v90)
      {
        if ((a4->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v93 = a4;
        else
          v93 = (std::basic_string<char16_t> *)a4->__r_.__value_.__r.__words[0];
        memmove(v91, v93, 2 * v90);
      }
      v94 = 101;
      goto LABEL_196;
    }
LABEL_197:
    v95 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR((morphun::grammar::synthesis::GrammemeConstants *)v75);
    v96 = *(unsigned __int8 *)(v95 + 23);
    v97 = (char)v96;
    if ((v96 & 0x80u) != 0)
      v96 = *(_QWORD *)(v95 + 8);
    v98 = HIBYTE(v138.__r_.__value_.__r.__words[2]);
    if ((v138.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v98 = v138.__r_.__value_.__l.__size_;
    if (v96 != v98)
      goto LABEL_240;
    if (v96)
    {
      v99 = &v138;
      if ((v138.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v99 = (std::basic_string<char16_t> *)v138.__r_.__value_.__r.__words[0];
      if (v97 >= 0)
        v100 = (unsigned __int16 *)v95;
      else
        v100 = *(unsigned __int16 **)v95;
      while ((unsigned __int16)v99->__r_.__value_.__s.__data_[0] == *v100)
      {
        ++v100;
        v99 = (std::basic_string<char16_t> *)((char *)v99 + 2);
        if (!--v96)
          goto LABEL_210;
      }
      goto LABEL_240;
    }
LABEL_210:
    v101 = morphun::grammar::synthesis::GrammemeConstants::GENDER_NEUTER((morphun::grammar::synthesis::GrammemeConstants *)v95);
    v102 = *(unsigned __int8 *)(v101 + 23);
    v103 = (char)v102;
    if ((v102 & 0x80u) != 0)
      v102 = *(_QWORD *)(v101 + 8);
    v104 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v104 = __p.__r_.__value_.__l.__size_;
    if (v102 != v104)
      goto LABEL_240;
    if (v102)
    {
      p_p = &__p;
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
      if (v103 >= 0)
        v106 = (unsigned __int16 *)v101;
      else
        v106 = *(unsigned __int16 **)v101;
      while ((unsigned __int16)p_p->__r_.__value_.__s.__data_[0] == *v106)
      {
        ++v106;
        p_p = (std::basic_string<char16_t> *)((char *)p_p + 2);
        if (!--v102)
          goto LABEL_223;
      }
      goto LABEL_240;
    }
LABEL_223:
    if (v72 != 105 && v72 != 229)
    {
      v107 = v70 ^ 1;
      if (v72 == 116)
        v107 = 1;
      if ((v107 & 1) != 0)
      {
LABEL_240:
        if ((SHIBYTE(a4->__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_241:
          v120 = *a4;
          goto LABEL_245;
        }
        v110 = a4->__r_.__value_.__l.__size_;
LABEL_244:
        std::basic_string<char16_t>::__init_copy_ctor_external(&v120, a4->__r_.__value_.__l.__data_, v110);
        goto LABEL_245;
      }
    }
    if ((a4->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v108 = HIBYTE(a4->__r_.__value_.__r.__words[2]);
    else
      v108 = a4->__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::basic_string[abi:ne180100]((uint64_t)&v120, v108 + 1);
    if ((v120.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v91 = &v120;
    else
      v91 = (std::basic_string<char16_t> *)v120.__r_.__value_.__r.__words[0];
    v92 = 2 * v108;
    if (v108)
    {
      if ((a4->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v109 = a4;
      else
        v109 = (std::basic_string<char16_t> *)a4->__r_.__value_.__r.__words[0];
      memmove(v91, v109, 2 * v108);
    }
    v94 = 116;
LABEL_196:
    *(_DWORD *)((char *)&v91->__r_.__value_.__l.__data_ + v92) = v94;
    goto LABEL_245;
  }
  v116 = a6;
  v117 = v11;
  v118 = a1;
  v37 = v121;
  v38 = v122;
  if (v121 == v122)
  {
    v39 = 0;
    v119 = 0;
  }
  else
  {
    v119 = 0;
    v39 = 0;
    do
    {
      if (*(char *)(v37 + 23) < 0)
      {
        v41 = *(_QWORD *)v37;
        v40 = *(_QWORD *)(v37 + 8);
      }
      else
      {
        LODWORD(v40) = *(unsigned __int8 *)(v37 + 23);
        v41 = v37;
      }
      v42 = a2[7];
      KeyId = morphun::dictionary::metadata::MarisaTrie<int>::getKeyId((marisa::Trie *)(v42 + 248), v41, v40);
      InflectionPattern = (morphun::grammar::synthesis::GrammemeConstants *)morphun::dictionary::Inflector_MMappedDictionary::getInflectionPattern((morphun::dictionary::Inflector_MMappedDictionary *)v139, v42 + 8, KeyId);
      *(_OWORD *)v134 = *(_OWORD *)v139;
      *(_OWORD *)&v134[16] = *(_OWORD *)&v139[16];
      v135 = v140;
      v136 = 1;
      v45 = morphun::grammar::synthesis::GrammemeConstants::POS_NOUN(InflectionPattern);
      if (morphun::dictionary::Inflector_InflectionPattern::containsPartsOfSpeech(*(uint64_t *)&v134[8], *(_QWORD *)(v135 + 184), v45))
      {
        memset(v139, 0, 24);
        v46 = (std::basic_string<char16_t> *)std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)v139, (__int128 *)&v128);
        v47 = v46;
        *(_QWORD *)&v139[8] = v46;
        v48 = HIBYTE(v127.__r_.__value_.__r.__words[2]);
        if ((v127.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v48 = v127.__r_.__value_.__l.__size_;
        if (v48)
        {
          if ((unint64_t)v46 >= *(_QWORD *)&v139[16])
          {
            v46 = (std::basic_string<char16_t> *)std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)v139, (__int128 *)&v127);
          }
          else
          {
            if (SHIBYTE(v127.__r_.__value_.__r.__words[2]) < 0)
            {
              std::basic_string<char16_t>::__init_copy_ctor_external(v46, v127.__r_.__value_.__l.__data_, v127.__r_.__value_.__l.__size_);
            }
            else
            {
              v49 = *(_OWORD *)&v127.__r_.__value_.__l.__data_;
              v46->__r_.__value_.__r.__words[2] = v127.__r_.__value_.__r.__words[2];
              *(_OWORD *)&v46->__r_.__value_.__l.__data_ = v49;
            }
            v46 = v47 + 1;
          }
          *(_QWORD *)&v139[8] = v46;
        }
        v50 = SHIBYTE(__s.__r_.__value_.__r.__words[2]);
        v51 = __s.__r_.__value_.__l.__size_;
        if ((__s.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v52 = HIBYTE(__s.__r_.__value_.__r.__words[2]);
        else
          v52 = __s.__r_.__value_.__l.__size_;
        if (v52)
        {
          v53 = morphun::grammar::synthesis::GrammemeConstants::CASE_NOMINATIVE((morphun::grammar::synthesis::GrammemeConstants *)v46);
          v54 = *(unsigned __int8 *)(v53 + 23);
          v55 = (char)v54;
          if ((v54 & 0x80u) != 0)
            v54 = *(_QWORD *)(v53 + 8);
          if (v52 == v54)
          {
            if (v55 >= 0)
              v56 = (unsigned __int16 *)v53;
            else
              v56 = *(unsigned __int16 **)v53;
            p_s = (std::basic_string<char16_t> *)__s.__r_.__value_.__r.__words[0];
            if (v50 >= 0)
              p_s = &__s;
            while (*v56 == (unsigned __int16)p_s->__r_.__value_.__s.__data_[0])
            {
              p_s = (std::basic_string<char16_t> *)((char *)p_s + 2);
              ++v56;
              if (!--v52)
                goto LABEL_94;
            }
          }
          v58 = *(_QWORD *)&v139[8];
          if (*(_QWORD *)&v139[8] >= *(_QWORD *)&v139[16])
          {
            v59 = std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)v139, (__int128 *)&__s);
          }
          else
          {
            if (v50 < 0)
            {
              std::basic_string<char16_t>::__init_copy_ctor_external(*(std::basic_string<char16_t> **)&v139[8], __s.__r_.__value_.__l.__data_, v51);
            }
            else
            {
              **(_OWORD **)&v139[8] = *(_OWORD *)&__s.__r_.__value_.__l.__data_;
              *(_QWORD *)(v58 + 16) = *((_QWORD *)&__s.__r_.__value_.__l + 2);
            }
            v59 = v58 + 24;
          }
          *(_QWORD *)&v139[8] = v59;
        }
LABEL_94:
        v60 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v60 = __p.__r_.__value_.__l.__size_;
        if (v60)
        {
          v61 = *(_QWORD *)&v139[8];
          if (*(_QWORD *)&v139[8] >= *(_QWORD *)&v139[16])
          {
            v62 = std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)v139, (__int128 *)&__p);
          }
          else
          {
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            {
              std::basic_string<char16_t>::__init_copy_ctor_external(*(std::basic_string<char16_t> **)&v139[8], __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
            }
            else
            {
              **(_OWORD **)&v139[8] = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
              *(_QWORD *)(v61 + 16) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
            }
            v62 = v61 + 24;
          }
          *(_QWORD *)&v139[8] = v62;
        }
        v133 = 0;
        v63 = SHIBYTE(a4->__r_.__value_.__r.__words[2]);
        if (v63 >= 0)
          v64 = (const UChar *)a4;
        else
          v64 = (const UChar *)a4->__r_.__value_.__r.__words[0];
        if (v63 >= 0)
          v65 = HIBYTE(a4->__r_.__value_.__r.__words[2]);
        else
          v65 = a4->__r_.__value_.__l.__size_;
        morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a2[6], (uint64_t)&v133, v64, v65);
        v132 = 0;
        morphun::dictionary::DictionaryMetaData::getBinaryProperties(a2[6], &v132, (uint64_t *)v139);
        v66 = SHIBYTE(a4->__r_.__value_.__r.__words[2]);
        if (v66 >= 0)
          v67 = (char *)a4;
        else
          v67 = (char *)a4->__r_.__value_.__r.__words[0];
        if (v66 >= 0)
          v68 = HIBYTE(a4->__r_.__value_.__r.__words[2]);
        else
          v68 = a4->__r_.__value_.__l.__size_;
        morphun::dictionary::Inflector_InflectionPattern::reinflect(&__dst, (uint64_t)v134, v133, v132, v67, v68);
        if (v39 < 0)
          operator delete(v119);
        v119 = __dst;
        v141[0] = *(_QWORD *)v130;
        *(_QWORD *)((char *)v141 + 7) = *(_QWORD *)&v130[7];
        v39 = v131;
        __dst = (void **)v139;
        std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&__dst);
      }
      v37 += 24;
    }
    while (v37 != v38);
  }
  a1 = v118;
  v120.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v119;
  v120.__r_.__value_.__l.__size_ = v141[0];
  *(std::basic_string<char16_t>::size_type *)((char *)&v120.__r_.__value_.__r.__words[1] + 7) = *(_QWORD *)((char *)v141 + 7);
  *((_BYTE *)&v120.__r_.__value_.__s + 23) = v39;
  v11 = v117;
  a6 = v116;
LABEL_245:
  if (SHIBYTE(v137.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v137.__r_.__value_.__l.__data_);
  if (SHIBYTE(v138.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v138.__r_.__value_.__l.__data_);
  v111 = HIBYTE(v120.__r_.__value_.__r.__words[2]);
  if (a6)
  {
    if (!((v120.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
         ? HIBYTE(v120.__r_.__value_.__r.__words[2])
         : v120.__r_.__value_.__l.__size_))
    {
      morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::makeGenitiveWhenRequested(a1, a2[3], v11, (unsigned __int16 *)a4);
      goto LABEL_268;
    }
  }
  if ((*((_BYTE *)&v120.__r_.__value_.__s + 23) & 0x80) == 0)
  {
    if (*((_BYTE *)&v120.__r_.__value_.__s + 23))
    {
      v113 = &v120;
      goto LABEL_259;
    }
LABEL_264:
    if (SHIBYTE(a4->__r_.__value_.__r.__words[2]) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(a1, a4->__r_.__value_.__l.__data_, a4->__r_.__value_.__l.__size_);
    }
    else
    {
      *(_OWORD *)&a1->__r_.__value_.__l.__data_ = *(_OWORD *)&a4->__r_.__value_.__l.__data_;
      a1->__r_.__value_.__r.__words[2] = a4->__r_.__value_.__r.__words[2];
    }
    goto LABEL_268;
  }
  v111 = v120.__r_.__value_.__l.__size_;
  if (!v120.__r_.__value_.__l.__size_)
    goto LABEL_264;
  v113 = (std::basic_string<char16_t> *)v120.__r_.__value_.__r.__words[0];
LABEL_259:
  v114 = 2 * v111;
  do
  {
    if (v113->__r_.__value_.__s.__data_[0] == 39)
      v113->__r_.__value_.__s.__data_[0] = 8217;
    v113 = (std::basic_string<char16_t> *)((char *)v113 + 2);
    v114 -= 2;
  }
  while (v114);
  *a1 = v120;
  memset(&v120, 0, sizeof(v120));
LABEL_268:
  if (SHIBYTE(v120.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v120.__r_.__value_.__l.__data_);
  *(_QWORD *)v134 = &v121;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)v134);
  if (SHIBYTE(v123.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v123.__r_.__value_.__l.__data_);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__s.__r_.__value_.__l.__data_);
  if (SHIBYTE(v127.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v127.__r_.__value_.__l.__data_);
  if (SHIBYTE(v128.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v128.__r_.__value_.__l.__data_);
}

void sub_1CB4E6984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,void *__p,uint64_t a59,int a60,__int16 a61,char a62,char a63)
{
  uint64_t v63;

  if (a63 < 0)
    operator delete(__p);
  if (*(char *)(v63 - 145) < 0)
    operator delete(*(void **)(v63 - 168));
  if (*(char *)(v63 - 201) < 0)
    operator delete(*(void **)(v63 - 224));
  if (*(char *)(v63 - 169) < 0)
    operator delete(*(void **)(v63 - 192));
  *(_QWORD *)(v63 - 224) = &a17;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v63 - 224));
  if (a25 < 0)
    operator delete(a20);
  if (a31 < 0)
    operator delete(a26);
  if (a39 < 0)
    operator delete(a34);
  if (a45 < 0)
    operator delete(a40);
  if (a52 < 0)
    operator delete(a47);
  _Unwind_Resume(a1);
}

void std::basic_string<char16_t>::push_back(std::basic_string<char16_t> *this, std::basic_string<char16_t>::value_type __c)
{
  std::basic_string<char16_t>::size_type v2;
  std::basic_string<char16_t>::size_type v3;
  std::basic_string<char16_t> *v5;
  std::basic_string<char16_t>::size_type v6;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t>::value_type *v8;

  v5 = this;
  if ((SHIBYTE(this->__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (*((_BYTE *)&this->__r_.__value_.__s + 23) != 10)
    {
      size = HIBYTE(this->__r_.__value_.__r.__words[2]);
      *((_BYTE *)&this->__r_.__value_.__s + 23) = (*((_BYTE *)&this->__r_.__value_.__s + 23) + 1) & 0x7F;
      goto LABEL_8;
    }
    v6 = 10;
    goto LABEL_5;
  }
  size = this->__r_.__value_.__l.__size_;
  v6 = (this->__r_.__value_.__r.__words[2] & 0x7FFFFFFFFFFFFFFFLL) - 1;
  if (size == v6)
  {
LABEL_5:
    std::basic_string<char16_t>::__grow_by(this, v6, 1uLL, v6, v6, v2, v3);
    size = v6;
  }
  v5->__r_.__value_.__l.__size_ = size + 1;
  v5 = (std::basic_string<char16_t> *)v5->__r_.__value_.__r.__words[0];
LABEL_8:
  v8 = (std::basic_string<char16_t>::value_type *)((char *)v5 + 2 * size);
  *v8 = __c;
  v8[1] = 0;
}

void sub_1CB4E6BEC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer::POSSESSIVE_ADJECTIVE_COUNT(morphun::grammar::synthesis::ItGrammarSynthesizer *this)
{
  unsigned __int8 v1;
  _QWORD *v3;

  if ((v1 & 1) == 0
  {
    v3 = (_QWORD *)operator new();
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v3, "p");
    morphun::grammar::synthesis::ItGrammarSynthesizer::POSSESSIVE_ADJECTIVE_COUNT(void)::POSSESSIVE_ADJECTIVE_COUNT_ = (uint64_t)v3;
  }
  return npc<std::basic_string<char16_t>>(morphun::grammar::synthesis::ItGrammarSynthesizer::POSSESSIVE_ADJECTIVE_COUNT(void)::POSSESSIVE_ADJECTIVE_COUNT_);
}

void sub_1CB4E6C7C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

void sub_1CB4E6CF8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer::POSSESSIVE_ADJECTIVE_PERSON(morphun::grammar::synthesis::ItGrammarSynthesizer *this)
{
  unsigned __int8 v1;
  _QWORD *v3;

  if ((v1 & 1) == 0
  {
    v3 = (_QWORD *)operator new();
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v3, "p");
    morphun::grammar::synthesis::ItGrammarSynthesizer::POSSESSIVE_ADJECTIVE_PERSON(void)::POSSESSIVE_ADJECTIVE_PERSON_ = (uint64_t)v3;
  }
  return npc<std::basic_string<char16_t>>(morphun::grammar::synthesis::ItGrammarSynthesizer::POSSESSIVE_ADJECTIVE_PERSON(void)::POSSESSIVE_ADJECTIVE_PERSON_);
}

void sub_1CB4E6D88(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer::WORDSWITHPOSSESSIVEWITHOUTARTICLE(morphun::grammar::synthesis::ItGrammarSynthesizer *this)
{
  unsigned __int8 v1;
  uint64_t result;
  uint64_t v3;
  morphun::exception::NullPointerException *exception;
  _BYTE __dst[336];
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if ((v1 & 1) == 0
  {
    v3 = operator new();
    memcpy(__dst, &off_1E86749B0, sizeof(__dst));
    std::set<std::u16string_view>::set[abi:ne180100](v3, (uint64_t)__dst, 21);
    morphun::grammar::synthesis::ItGrammarSynthesizer::WORDSWITHPOSSESSIVEWITHOUTARTICLE(void)::WORDSWITHPOSSESSIVEWITHOUTARTICLE_ = v3;
  }
  result = morphun::grammar::synthesis::ItGrammarSynthesizer::WORDSWITHPOSSESSIVEWITHOUTARTICLE(void)::WORDSWITHPOSSESSIVEWITHOUTARTICLE_;
  if (!morphun::grammar::synthesis::ItGrammarSynthesizer::WORDSWITHPOSSESSIVEWITHOUTARTICLE(void)::WORDSWITHPOSSESSIVEWITHOUTARTICLE_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4E6EC0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::ItGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  std::basic_string<char16_t> *v3;
  std::basic_string<char16_t> *v4;
  morphun::dialog::DefaultFeatureFunction *v5;
  morphun::dialog::DefaultFeatureFunction *v6;
  std::basic_string<char16_t> *v7;
  std::basic_string<char16_t> *v8;
  std::basic_string<char16_t> *v9;
  std::basic_string<char16_t> *v10;
  std::basic_string<char16_t> *v11;
  std::basic_string<char16_t> *v12;
  std::basic_string<char16_t> *v13;
  std::basic_string<char16_t> *v14;
  std::basic_string<char16_t> *v15;
  std::basic_string<char16_t> *v16;
  _QWORD *v17;
  unsigned __int16 *v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  morphun::grammar::synthesis::ItGrammarSynthesizer *v22;
  unsigned __int16 *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction *v30;
  morphun::grammar::synthesis::ItGrammarSynthesizer_GenderLookupFunction *v31;
  morphun::util::LocaleUtils *v32;
  const morphun::util::ULocale *v33;
  uint64_t i;
  uint64_t j;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  morphun::util::LocaleUtils *v41;
  uint64_t v42;
  morphun::dictionary::DictionaryMetaData *v43;
  const morphun::util::ULocale *v44;
  morphun::util::LocaleUtils *Dictionary;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  morphun::grammar::synthesis::GrammemeConstants *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  morphun::grammar::synthesis::GrammemeConstants *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t k;
  _QWORD *v99;
  morphun::TokenizerFactory *v100;
  const morphun::util::ULocale *v101;
  uint64_t v102;
  uint64_t *BinaryProperties;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t result;
  morphun::exception::NullPointerException *exception;
  morphun::grammar::synthesis::ItGrammarSynthesizer *v113;
  morphun::grammar::synthesis::GrammemeConstants *v114;
  void *__p[2];
  char v116;
  void *v117[2];
  char v118;
  __int128 v119;
  uint64_t v120;
  void *v121[2];
  char v122;
  void *v123[2];
  char v124;
  void *v125[2];
  char v126;
  __int128 v127;
  uint64_t v128;
  __int128 v129;
  uint64_t v130;
  __int128 v131;
  uint64_t v132[3];
  uint64_t v133[3];
  void *v134[3];
  void *__dst;
  void *v136;
  char *v137;
  morphun::grammar::synthesis::GrammemeConstants *v138;
  _QWORD *v139;
  _QWORD *v140;
  morphun::grammar::synthesis::GrammemeConstants *v141;
  _QWORD *v142;
  _QWORD *v143;
  _QWORD *v144;
  _QWORD *v145;
  _QWORD *v146;
  _QWORD v147[3];
  uint64_t v148[3];
  _QWORD v149[3];
  __int128 v150;
  char v151;
  uint64_t v152;

  v152 = *MEMORY[0x1E0C80C00];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"defArticle");
  v3 = (std::basic_string<char16_t> *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, (char *)&word_1CB73EB86);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v127, (char *)&word_1CB73EB86);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v125, "i");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v123, "l");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v121, "l");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v150, "l");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v119, (char *)L"i ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v117, "g");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "l");
  morphun::grammar::synthesis::ItGrammarSynthesizer_DefiniteArticleLookupFunction::ItGrammarSynthesizer_DefiniteArticleLookupFunction(v3, (uint64_t)this, (uint64_t)&v129, &v127, (__int128 *)v125, (__int128 *)v123, (__int128 *)v121, &v150, &v119, (__int128 *)v117, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v3 + *(_QWORD *)(v3->__r_.__value_.__r.__words[0] - 56)));
  if (v116 < 0)
    operator delete(__p[0]);
  if (v118 < 0)
    operator delete(v117[0]);
  if (SHIBYTE(v120) < 0)
    operator delete((void *)v119);
  if (v151 < 0)
    operator delete((void *)v150);
  if (v122 < 0)
    operator delete(v121[0]);
  if (v124 < 0)
    operator delete(v123[0]);
  if (v126 < 0)
    operator delete(v125[0]);
  if (SHIBYTE(v128) < 0)
    operator delete((void *)v127);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v137) < 0)
    operator delete(__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "w");
  v4 = (std::basic_string<char16_t> *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, (char *)L"defArticle");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v127, (char *)&word_1CB73EB86);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v125, "i");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v123, "l");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v121, "l");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v150, "l");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v119, (char *)L"i ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v117, "g");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "l");
  morphun::grammar::synthesis::ItGrammarSynthesizer_DefiniteArticleLookupFunction::ItGrammarSynthesizer_DefiniteArticleLookupFunction(v4, (uint64_t)this, (uint64_t)&v129, &v127, (__int128 *)v125, (__int128 *)v123, (__int128 *)v121, &v150, &v119, (__int128 *)v117, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v4 + *(_QWORD *)(v4->__r_.__value_.__r.__words[0] - 56)));
  if (v116 < 0)
    operator delete(__p[0]);
  if (v118 < 0)
    operator delete(v117[0]);
  if (SHIBYTE(v120) < 0)
    operator delete((void *)v119);
  if (v151 < 0)
    operator delete((void *)v150);
  if (v122 < 0)
    operator delete(v121[0]);
  if (v124 < 0)
    operator delete(v123[0]);
  if (v126 < 0)
    operator delete(v125[0]);
  if (SHIBYTE(v128) < 0)
    operator delete((void *)v127);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v137) < 0)
    operator delete(__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "i");
  v5 = (morphun::dialog::DefaultFeatureFunction *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, (char *)&word_1CB73EB86);
  *(_QWORD *)v5 = &off_1E865F0A8;
  morphun::grammar::synthesis::ItGrammarSynthesizer_ArticleLookupFunction::ItGrammarSynthesizer_ArticleLookupFunction(v5, (uint64_t *)&off_1E8668B28, (uint64_t)this, (uint64_t)&v129);
  *(_QWORD *)v5 = &off_1E866FC30;
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, v5);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v137) < 0)
    operator delete(__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"withIndefArticle");
  v6 = (morphun::dialog::DefaultFeatureFunction *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, "i");
  *(_QWORD *)v6 = &off_1E865F0A8;
  morphun::grammar::synthesis::ItGrammarSynthesizer_ArticleLookupFunction::ItGrammarSynthesizer_ArticleLookupFunction(v6, (uint64_t *)&off_1E8668B28, (uint64_t)this, (uint64_t)&v129);
  *(_QWORD *)v6 = &off_1E866FC30;
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, v6);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v137) < 0)
    operator delete(__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "a");
  v7 = (std::basic_string<char16_t> *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, (char *)&word_1CB73EB86);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v127, "a");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v125, "a");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v123, "a");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v121, "a");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v150, (char *)aAll);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v119, (char *)L"ai ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v117, (char *)L"agli ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"alle ");
  morphun::grammar::synthesis::ItGrammarSynthesizer_DefiniteArticleLookupFunction::ItGrammarSynthesizer_DefiniteArticleLookupFunction(v7, (uint64_t)this, (uint64_t)&v129, &v127, (__int128 *)v125, (__int128 *)v123, (__int128 *)v121, &v150, &v119, (__int128 *)v117, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v7 + *(_QWORD *)(v7->__r_.__value_.__r.__words[0] - 56)));
  if (v116 < 0)
    operator delete(__p[0]);
  if (v118 < 0)
    operator delete(v117[0]);
  if (SHIBYTE(v120) < 0)
    operator delete((void *)v119);
  if (v151 < 0)
    operator delete((void *)v150);
  if (v122 < 0)
    operator delete(v121[0]);
  if (v124 < 0)
    operator delete(v123[0]);
  if (v126 < 0)
    operator delete(v125[0]);
  if (SHIBYTE(v128) < 0)
    operator delete((void *)v127);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v137) < 0)
    operator delete(__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"withAPrepArticle");
  v8 = (std::basic_string<char16_t> *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, "a");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v127, "a");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v125, "a");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v123, "a");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v121, "a");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v150, (char *)aAll);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v119, (char *)L"ai ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v117, (char *)L"agli ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"alle ");
  morphun::grammar::synthesis::ItGrammarSynthesizer_DefiniteArticleLookupFunction::ItGrammarSynthesizer_DefiniteArticleLookupFunction(v8, (uint64_t)this, (uint64_t)&v129, &v127, (__int128 *)v125, (__int128 *)v123, (__int128 *)v121, &v150, &v119, (__int128 *)v117, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v8 + *(_QWORD *)(v8->__r_.__value_.__r.__words[0] - 56)));
  if (v116 < 0)
    operator delete(__p[0]);
  if (v118 < 0)
    operator delete(v117[0]);
  if (SHIBYTE(v120) < 0)
    operator delete((void *)v119);
  if (v151 < 0)
    operator delete((void *)v150);
  if (v122 < 0)
    operator delete(v121[0]);
  if (v124 < 0)
    operator delete(v123[0]);
  if (v126 < 0)
    operator delete(v125[0]);
  if (SHIBYTE(v128) < 0)
    operator delete((void *)v127);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v137) < 0)
    operator delete(__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "d");
  v9 = (std::basic_string<char16_t> *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, (char *)&word_1CB73EB86);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v127, (char *)L"da ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v125, "d");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v123, (char *)L"dallo ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v121, "d");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v150, "d");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v119, (char *)L"dai ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v117, "d");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"dalle ");
  morphun::grammar::synthesis::ItGrammarSynthesizer_DefiniteArticleLookupFunction::ItGrammarSynthesizer_DefiniteArticleLookupFunction(v9, (uint64_t)this, (uint64_t)&v129, &v127, (__int128 *)v125, (__int128 *)v123, (__int128 *)v121, &v150, &v119, (__int128 *)v117, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v9 + *(_QWORD *)(v9->__r_.__value_.__r.__words[0] - 56)));
  if (v116 < 0)
    operator delete(__p[0]);
  if (v118 < 0)
    operator delete(v117[0]);
  if (SHIBYTE(v120) < 0)
    operator delete((void *)v119);
  if (v151 < 0)
    operator delete((void *)v150);
  if (v122 < 0)
    operator delete(v121[0]);
  if (v124 < 0)
    operator delete(v123[0]);
  if (v126 < 0)
    operator delete(v125[0]);
  if (SHIBYTE(v128) < 0)
    operator delete((void *)v127);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v137) < 0)
    operator delete(__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "w");
  v10 = (std::basic_string<char16_t> *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, "d");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v127, (char *)L"da ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v125, "d");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v123, (char *)L"dallo ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v121, "d");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v150, "d");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v119, (char *)L"dai ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v117, "d");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"dalle ");
  morphun::grammar::synthesis::ItGrammarSynthesizer_DefiniteArticleLookupFunction::ItGrammarSynthesizer_DefiniteArticleLookupFunction(v10, (uint64_t)this, (uint64_t)&v129, &v127, (__int128 *)v125, (__int128 *)v123, (__int128 *)v121, &v150, &v119, (__int128 *)v117, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v10 + *(_QWORD *)(v10->__r_.__value_.__r.__words[0] - 56)));
  if (v116 < 0)
    operator delete(__p[0]);
  if (v118 < 0)
    operator delete(v117[0]);
  if (SHIBYTE(v120) < 0)
    operator delete((void *)v119);
  if (v151 < 0)
    operator delete((void *)v150);
  if (v122 < 0)
    operator delete(v121[0]);
  if (v124 < 0)
    operator delete(v123[0]);
  if (v126 < 0)
    operator delete(v125[0]);
  if (SHIBYTE(v128) < 0)
    operator delete((void *)v127);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v137) < 0)
    operator delete(__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "d");
  v11 = (std::basic_string<char16_t> *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, (char *)&word_1CB73EB86);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v127, (char *)L"di ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v125, (char *)L"del ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v123, "d");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v121, (char *)L"della ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v150, (char *)aDell);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v119, "d");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v117, (char *)L"degli ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "d");
  morphun::grammar::synthesis::ItGrammarSynthesizer_DefiniteArticleLookupFunction::ItGrammarSynthesizer_DefiniteArticleLookupFunction(v11, (uint64_t)this, (uint64_t)&v129, &v127, (__int128 *)v125, (__int128 *)v123, (__int128 *)v121, &v150, &v119, (__int128 *)v117, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v11 + *(_QWORD *)(v11->__r_.__value_.__r.__words[0] - 56)));
  if (v116 < 0)
    operator delete(__p[0]);
  if (v118 < 0)
    operator delete(v117[0]);
  if (SHIBYTE(v120) < 0)
    operator delete((void *)v119);
  if (v151 < 0)
    operator delete((void *)v150);
  if (v122 < 0)
    operator delete(v121[0]);
  if (v124 < 0)
    operator delete(v123[0]);
  if (v126 < 0)
    operator delete(v125[0]);
  if (SHIBYTE(v128) < 0)
    operator delete((void *)v127);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v137) < 0)
    operator delete(__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"withDePrepArticle");
  v12 = (std::basic_string<char16_t> *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, "d");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v127, (char *)L"di ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v125, (char *)L"del ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v123, "d");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v121, (char *)L"della ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v150, (char *)aDell);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v119, "d");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v117, (char *)L"degli ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "d");
  morphun::grammar::synthesis::ItGrammarSynthesizer_DefiniteArticleLookupFunction::ItGrammarSynthesizer_DefiniteArticleLookupFunction(v12, (uint64_t)this, (uint64_t)&v129, &v127, (__int128 *)v125, (__int128 *)v123, (__int128 *)v121, &v150, &v119, (__int128 *)v117, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v12 + *(_QWORD *)(v12->__r_.__value_.__r.__words[0] - 56)));
  if (v116 < 0)
    operator delete(__p[0]);
  if (v118 < 0)
    operator delete(v117[0]);
  if (SHIBYTE(v120) < 0)
    operator delete((void *)v119);
  if (v151 < 0)
    operator delete((void *)v150);
  if (v122 < 0)
    operator delete(v121[0]);
  if (v124 < 0)
    operator delete(v123[0]);
  if (v126 < 0)
    operator delete(v125[0]);
  if (SHIBYTE(v128) < 0)
    operator delete((void *)v127);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v137) < 0)
    operator delete(__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "i");
  v13 = (std::basic_string<char16_t> *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, (char *)&word_1CB73EB86);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v127, (char *)L"in ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v125, (char *)L"nel ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v123, "n");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v121, (char *)L"nella ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v150, (char *)aNell);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v119, "n");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v117, (char *)L"negli ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "n");
  morphun::grammar::synthesis::ItGrammarSynthesizer_DefiniteArticleLookupFunction::ItGrammarSynthesizer_DefiniteArticleLookupFunction(v13, (uint64_t)this, (uint64_t)&v129, &v127, (__int128 *)v125, (__int128 *)v123, (__int128 *)v121, &v150, &v119, (__int128 *)v117, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v13 + *(_QWORD *)(v13->__r_.__value_.__r.__words[0] - 56)));
  if (v116 < 0)
    operator delete(__p[0]);
  if (v118 < 0)
    operator delete(v117[0]);
  if (SHIBYTE(v120) < 0)
    operator delete((void *)v119);
  if (v151 < 0)
    operator delete((void *)v150);
  if (v122 < 0)
    operator delete(v121[0]);
  if (v124 < 0)
    operator delete(v123[0]);
  if (v126 < 0)
    operator delete(v125[0]);
  if (SHIBYTE(v128) < 0)
    operator delete((void *)v127);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v137) < 0)
    operator delete(__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "w");
  v14 = (std::basic_string<char16_t> *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, "i");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v127, (char *)L"in ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v125, (char *)L"nel ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v123, "n");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v121, (char *)L"nella ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v150, (char *)aNell);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v119, "n");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v117, (char *)L"negli ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "n");
  morphun::grammar::synthesis::ItGrammarSynthesizer_DefiniteArticleLookupFunction::ItGrammarSynthesizer_DefiniteArticleLookupFunction(v14, (uint64_t)this, (uint64_t)&v129, &v127, (__int128 *)v125, (__int128 *)v123, (__int128 *)v121, &v150, &v119, (__int128 *)v117, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v14 + *(_QWORD *)(v14->__r_.__value_.__r.__words[0] - 56)));
  if (v116 < 0)
    operator delete(__p[0]);
  if (v118 < 0)
    operator delete(v117[0]);
  if (SHIBYTE(v120) < 0)
    operator delete((void *)v119);
  if (v151 < 0)
    operator delete((void *)v150);
  if (v122 < 0)
    operator delete(v121[0]);
  if (v124 < 0)
    operator delete(v123[0]);
  if (v126 < 0)
    operator delete(v125[0]);
  if (SHIBYTE(v128) < 0)
    operator delete((void *)v127);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v137) < 0)
    operator delete(__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "s");
  v15 = (std::basic_string<char16_t> *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, (char *)&word_1CB73EB86);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v127, "s");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v125, (char *)L"sul ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v123, "s");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v121, (char *)L"sulla ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v150, (char *)aSull);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v119, "s");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v117, (char *)L"sugli ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "s");
  morphun::grammar::synthesis::ItGrammarSynthesizer_DefiniteArticleLookupFunction::ItGrammarSynthesizer_DefiniteArticleLookupFunction(v15, (uint64_t)this, (uint64_t)&v129, &v127, (__int128 *)v125, (__int128 *)v123, (__int128 *)v121, &v150, &v119, (__int128 *)v117, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v15 + *(_QWORD *)(v15->__r_.__value_.__r.__words[0] - 56)));
  if (v116 < 0)
    operator delete(__p[0]);
  if (v118 < 0)
    operator delete(v117[0]);
  if (SHIBYTE(v120) < 0)
    operator delete((void *)v119);
  if (v151 < 0)
    operator delete((void *)v150);
  if (v122 < 0)
    operator delete(v121[0]);
  if (v124 < 0)
    operator delete(v123[0]);
  if (v126 < 0)
    operator delete(v125[0]);
  if (SHIBYTE(v128) < 0)
    operator delete((void *)v127);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v137) < 0)
    operator delete(__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "w");
  v16 = (std::basic_string<char16_t> *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, "s");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v127, "s");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v125, (char *)L"sul ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v123, "s");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v121, (char *)L"sulla ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v150, (char *)aSull);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v119, "s");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v117, (char *)L"sugli ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "s");
  morphun::grammar::synthesis::ItGrammarSynthesizer_DefiniteArticleLookupFunction::ItGrammarSynthesizer_DefiniteArticleLookupFunction(v16, (uint64_t)this, (uint64_t)&v129, &v127, (__int128 *)v125, (__int128 *)v123, (__int128 *)v121, &v150, &v119, (__int128 *)v117, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v16 + *(_QWORD *)(v16->__r_.__value_.__r.__words[0] - 56)));
  if (v116 < 0)
    operator delete(__p[0]);
  if (v118 < 0)
    operator delete(v117[0]);
  if (SHIBYTE(v120) < 0)
    operator delete((void *)v119);
  if (v151 < 0)
    operator delete((void *)v150);
  if (v122 < 0)
    operator delete(v121[0]);
  if (v124 < 0)
    operator delete(v123[0]);
  if (v126 < 0)
    operator delete(v125[0]);
  if (SHIBYTE(v128) < 0)
    operator delete((void *)v127);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v137) < 0)
    operator delete(__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, (char *)L"possessiveAdj");
  v17 = (_QWORD *)operator new();
  *v17 = &off_1E866FF00;
  v18 = (unsigned __int16 *)morphun::grammar::synthesis::ItGrammarSynthesizer::POSSESSIVE_ADJECTIVE_PERSON((morphun::grammar::synthesis::ItGrammarSynthesizer *)v17);
  v19 = (_QWORD *)std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)this + 8, v18);
  v20 = (char *)this + 16;
  if ((_QWORD *)((char *)this + 16) == v19)
    v21 = 0;
  else
    v21 = v19[7];
  v22 = (morphun::grammar::synthesis::ItGrammarSynthesizer *)npc<morphun::dialog::SemanticFeature const>(v21);
  v17[1] = v22;
  v23 = (unsigned __int16 *)morphun::grammar::synthesis::ItGrammarSynthesizer::POSSESSIVE_ADJECTIVE_COUNT(v22);
  v24 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)this + 8, v23);
  if (v20 == (char *)v24)
    v25 = 0;
  else
    v25 = *(_QWORD *)(v24 + 56);
  v17[2] = npc<morphun::dialog::SemanticFeature const>(v25);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"count");
  v26 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)this + 8, (unsigned __int16 *)&__dst);
  if (v20 == (char *)v26)
    v27 = 0;
  else
    v27 = *(_QWORD *)(v26 + 56);
  npc<morphun::dialog::SemanticFeature const>(v27);
  if (SHIBYTE(v137) < 0)
    operator delete(__dst);
  v17[3] = v27;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"gender");
  v28 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)this + 8, (unsigned __int16 *)&__dst);
  if (v20 == (char *)v28)
    v29 = 0;
  else
    v29 = *(_QWORD *)(v28 + 56);
  npc<morphun::dialog::SemanticFeature const>(v29);
  if (SHIBYTE(v137) < 0)
    operator delete(__dst);
  v17[4] = v29;
  morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction::ItGrammarSynthesizer_CountLookupFunction((morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction *)(v17 + 5));
  morphun::grammar::synthesis::ItGrammarSynthesizer_GenderLookupFunction::ItGrammarSynthesizer_GenderLookupFunction((morphun::grammar::synthesis::ItGrammarSynthesizer_GenderLookupFunction *)(v17 + 34));
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&v129, (morphun::dialog::DefaultFeatureFunction *)((char *)v17 + *(_QWORD *)(*v17 - 56)));
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"count");
  v30 = (morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction *)operator new();
  morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction::ItGrammarSynthesizer_CountLookupFunction(v30);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction *)((char *)v30+ *(_QWORD *)(*(_QWORD *)v30 - 56)));
  if (SHIBYTE(v137) < 0)
    operator delete(__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"gender");
  v31 = (morphun::grammar::synthesis::ItGrammarSynthesizer_GenderLookupFunction *)operator new();
  morphun::grammar::synthesis::ItGrammarSynthesizer_GenderLookupFunction::ItGrammarSynthesizer_GenderLookupFunction(v31);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::grammar::synthesis::ItGrammarSynthesizer_GenderLookupFunction *)((char *)v31+ *(_QWORD *)(*(_QWORD *)v31 - 56)));
  if (SHIBYTE(v137) < 0)
    operator delete(__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v127, "d");
  v32 = (morphun::util::LocaleUtils *)operator new();
  v33 = (const morphun::util::ULocale *)morphun::util::LocaleUtils::ITALIAN(v32);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"defArticle");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v138, "d");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v141, "a");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v144, "d");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v147, "d");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v148, "i");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v149, "s");
  std::set<std::basic_string<char16_t>>::set[abi:ne180100]((uint64_t *)v125, (unsigned __int16 *)&__dst, 7);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, "a");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v131, (char *)L"da ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v132, (char *)&word_1CB73E0E6);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v133, (char *)L"in ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v134, "s");
  std::set<std::basic_string<char16_t>>::set[abi:ne180100]((uint64_t *)v123, (unsigned __int16 *)&v129, 5);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v150, "i");
  std::set<std::basic_string<char16_t>>::set[abi:ne180100]((uint64_t *)v121, (unsigned __int16 *)&v150, 1);
  *((_QWORD *)&v119 + 1) = 0;
  v120 = 0;
  *(_QWORD *)&v119 = (char *)&v119 + 8;
  morphun::dialog::ArticleDetectionFunction::ArticleDetectionFunction((uint64_t)v32, v33, (uint64_t)v125, (uint64_t)v123, (uint64_t)v121, (uint64_t)&v119);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&v127, (morphun::util::LocaleUtils *)((char *)v32 + *(_QWORD *)(*(_QWORD *)v32 - 56)));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)&v119 + 1));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy((char *)v121[1]);
  if (v151 < 0)
    operator delete((void *)v150);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy((char *)v123[1]);
  for (i = 0; i != -15; i -= 3)
  {
    if (SHIBYTE(v134[i + 2]) < 0)
      operator delete(v134[i]);
  }
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy((char *)v125[1]);
  for (j = 0; j != -21; j -= 3)
  {
    if (SHIBYTE(v149[j + 2]) < 0)
      operator delete((void *)v149[j]);
  }
  if (SHIBYTE(v128) < 0)
    operator delete((void *)v127);
  v36 = (_QWORD *)operator new();
  *v36 = &off_1E866E520;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"count");
  v37 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)this + 8, (unsigned __int16 *)&__dst);
  if (v20 == (char *)v37)
    v38 = 0;
  else
    v38 = *(_QWORD *)(v37 + 56);
  if (SHIBYTE(v137) < 0)
    operator delete(__dst);
  v36[1] = v38;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"gender");
  v39 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)this + 8, (unsigned __int16 *)&__dst);
  if (v20 == (char *)v39)
    v40 = 0;
  else
    v40 = *(_QWORD *)(v39 + 56);
  if (SHIBYTE(v137) < 0)
    operator delete(__dst);
  v36[2] = v40;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "p");
  v41 = (morphun::util::LocaleUtils *)std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)this + 8, (unsigned __int16 *)&__dst);
  if (v20 == (char *)v41)
    v42 = 0;
  else
    v42 = *((_QWORD *)v41 + 7);
  if (SHIBYTE(v137) < 0)
    operator delete(__dst);
  v36[3] = v42;
  v43 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::ITALIAN(v41);
  Dictionary = (morphun::util::LocaleUtils *)morphun::dictionary::DictionaryMetaData::createDictionary(v43, v44);
  if (!Dictionary)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  v36[4] = Dictionary;
  v114 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::ITALIAN(Dictionary);
  v46 = morphun::grammar::synthesis::GrammemeConstants::POS_NOUN(v114);
  v47 = *(char *)(v46 + 23);
  if (v47 >= 0)
    v48 = v46;
  else
    v48 = *(_QWORD *)v46;
  if (v47 >= 0)
    v49 = *(unsigned __int8 *)(v46 + 23);
  else
    v49 = *(_QWORD *)(v46 + 8);
  v50 = morphun::grammar::synthesis::GrammemeConstants::POS_ADJECTIVE((morphun::grammar::synthesis::GrammemeConstants *)v46);
  v51 = *(char *)(v50 + 23);
  if (v51 >= 0)
    v52 = v50;
  else
    v52 = *(_QWORD *)v50;
  if (v51 >= 0)
    v53 = *(unsigned __int8 *)(v50 + 23);
  else
    v53 = *(_QWORD *)(v50 + 8);
  v54 = morphun::grammar::synthesis::GrammemeConstants::POS_VERB((morphun::grammar::synthesis::GrammemeConstants *)v50);
  v55 = *(unsigned __int8 *)(v54 + 23);
  v56 = *(_QWORD *)v54;
  v57 = *(_QWORD *)(v54 + 8);
  v58 = operator new(0x30uLL);
  v113 = this;
  v136 = v58 + 6;
  v137 = (char *)(v58 + 6);
  if ((v55 & 0x80u) == 0)
    v59 = v54;
  else
    v59 = v56;
  if ((v55 & 0x80u) == 0)
    v60 = v55;
  else
    v60 = v57;
  *v58 = v48;
  v58[1] = v49;
  v58[2] = v52;
  v58[3] = v53;
  v58[4] = v59;
  v58[5] = v60;
  __dst = v58;
  v61 = morphun::grammar::synthesis::GrammemeConstants::PERSON_THIRD((morphun::grammar::synthesis::GrammemeConstants *)v58);
  v62 = *(char *)(v61 + 23);
  if (v62 >= 0)
    v63 = v61;
  else
    v63 = *(_QWORD *)v61;
  if (v62 >= 0)
    v64 = *(unsigned __int8 *)(v61 + 23);
  else
    v64 = *(_QWORD *)(v61 + 8);
  v65 = morphun::grammar::synthesis::GrammemeConstants::PERSON_FIRST((morphun::grammar::synthesis::GrammemeConstants *)v61);
  v66 = *(char *)(v65 + 23);
  if (v66 >= 0)
    v67 = v65;
  else
    v67 = *(_QWORD *)v65;
  if (v66 >= 0)
    v68 = *(unsigned __int8 *)(v65 + 23);
  else
    v68 = *(_QWORD *)(v65 + 8);
  v69 = morphun::grammar::synthesis::GrammemeConstants::PERSON_SECOND((morphun::grammar::synthesis::GrammemeConstants *)v65);
  v70 = *(unsigned __int8 *)(v69 + 23);
  v72 = *(_QWORD *)v69;
  v71 = *(_QWORD *)(v69 + 8);
  v138 = 0;
  v139 = 0;
  v140 = 0;
  v73 = (morphun::grammar::synthesis::GrammemeConstants *)operator new(0x30uLL);
  v139 = (_QWORD *)((char *)v73 + 48);
  v140 = (_QWORD *)((char *)v73 + 48);
  if ((v70 & 0x80u) == 0)
    v74 = v69;
  else
    v74 = v72;
  if ((v70 & 0x80u) == 0)
    v75 = v70;
  else
    v75 = v71;
  *(_QWORD *)v73 = v63;
  *((_QWORD *)v73 + 1) = v64;
  *((_QWORD *)v73 + 2) = v67;
  *((_QWORD *)v73 + 3) = v68;
  *((_QWORD *)v73 + 4) = v74;
  *((_QWORD *)v73 + 5) = v75;
  v138 = v73;
  v76 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v73);
  v77 = *(char *)(v76 + 23);
  if (v77 >= 0)
    v78 = v76;
  else
    v78 = *(_QWORD *)v76;
  if (v77 >= 0)
    v79 = *(unsigned __int8 *)(v76 + 23);
  else
    v79 = *(_QWORD *)(v76 + 8);
  v80 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v76);
  v81 = *(unsigned __int8 *)(v80 + 23);
  v82 = *(_QWORD *)v80;
  v83 = *(_QWORD *)(v80 + 8);
  v141 = 0;
  v142 = 0;
  v143 = 0;
  v84 = (morphun::grammar::synthesis::GrammemeConstants *)operator new(0x20uLL);
  v142 = (_QWORD *)((char *)v84 + 32);
  v143 = (_QWORD *)((char *)v84 + 32);
  if ((v81 & 0x80u) == 0)
    v85 = v80;
  else
    v85 = v82;
  if ((v81 & 0x80u) == 0)
    v86 = v81;
  else
    v86 = v83;
  *(_QWORD *)v84 = v78;
  *((_QWORD *)v84 + 1) = v79;
  *((_QWORD *)v84 + 2) = v85;
  *((_QWORD *)v84 + 3) = v86;
  v141 = v84;
  v87 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(v84);
  v88 = *(char *)(v87 + 23);
  if (v88 >= 0)
    v89 = v87;
  else
    v89 = *(_QWORD *)v87;
  if (v88 >= 0)
    v90 = *(unsigned __int8 *)(v87 + 23);
  else
    v90 = *(_QWORD *)(v87 + 8);
  v91 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE((morphun::grammar::synthesis::GrammemeConstants *)v87);
  v92 = *(unsigned __int8 *)(v91 + 23);
  v94 = *(_QWORD *)v91;
  v93 = *(_QWORD *)(v91 + 8);
  v144 = 0;
  v145 = 0;
  v146 = 0;
  v95 = operator new(0x20uLL);
  v145 = v95 + 4;
  v146 = v95 + 4;
  if ((v92 & 0x80u) == 0)
    v96 = v91;
  else
    v96 = v94;
  if ((v92 & 0x80u) == 0)
    v97 = v92;
  else
    v97 = v93;
  *v95 = v89;
  v95[1] = v90;
  v95[2] = v96;
  v95[3] = v97;
  v144 = v95;
  v130 = 0;
  v129 = 0uLL;
  *(_QWORD *)&v127 = &v129;
  BYTE8(v127) = 0;
  *(_QWORD *)&v129 = operator new(0x60uLL);
  *((_QWORD *)&v129 + 1) = v129;
  v130 = v129 + 96;
  *((_QWORD *)&v129 + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<std::u16string_view>>,std::vector<std::u16string_view> const*,std::vector<std::u16string_view> const*,std::vector<std::u16string_view>*>((uint64_t)&v130, (uint64_t)&__dst, (uint64_t)v147, (_QWORD *)v129);
  v127 = 0uLL;
  v128 = 0;
  morphun::dialog::DictionaryLookupInflector::DictionaryLookupInflector(v36 + 5, v114, (uint64_t)&v129, (uint64_t **)&v127, 1);
  v125[0] = &v127;
  std::vector<std::vector<std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100]((void ***)v125);
  *(_QWORD *)&v127 = &v129;
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v127);
  for (k = 0; k != -12; k -= 3)
  {
    v99 = (&v144)[k];
    if (v99)
    {
      (&v145)[k] = v99;
      operator delete(v99);
    }
  }
  v100 = (morphun::TokenizerFactory *)morphun::util::LocaleUtils::ITALIAN((morphun::util::LocaleUtils *)v99);
  v36[34] = morphun::TokenizerFactory::createTokenizer(v100, v101);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "w");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, (char *)L"withIndefArticle");
  morphun::dialog::DefinitenessDisplayFunction::DefinitenessDisplayFunction(v36 + 35, v113, (unsigned __int16 *)&__dst, L"defArticle", 10, (unsigned __int16 *)&v129, (unsigned __int16 *)"i", 12);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v137) < 0)
    operator delete(__dst);
  *((_OWORD *)v36 + 23) = 0u;
  *((_OWORD *)v36 + 24) = 0u;
  v102 = v36[4];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, "p");
  __dst = 0;
  v136 = 0;
  v137 = 0;
  *(_QWORD *)&v127 = &__dst;
  BYTE8(v127) = 0;
  __dst = operator new(0x18uLL);
  v136 = __dst;
  v137 = (char *)__dst + 24;
  v136 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v137, &v129, &v131, (std::basic_string<char16_t> *)__dst);
  BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v102, v36 + 46, (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)BinaryProperties);
  *(_QWORD *)&v127 = &__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v127);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  v104 = v36[4];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, "m");
  __dst = 0;
  v136 = 0;
  v137 = 0;
  *(_QWORD *)&v127 = &__dst;
  BYTE8(v127) = 0;
  __dst = operator new(0x18uLL);
  v136 = __dst;
  v137 = (char *)__dst + 24;
  v136 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v137, &v129, &v131, (std::basic_string<char16_t> *)__dst);
  v105 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v104, v36 + 47, (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v105);
  *(_QWORD *)&v127 = &__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v127);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  v106 = v36[4];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, (char *)L"feminine");
  __dst = 0;
  v136 = 0;
  v137 = 0;
  *(_QWORD *)&v127 = &__dst;
  BYTE8(v127) = 0;
  __dst = operator new(0x18uLL);
  v136 = __dst;
  v137 = (char *)__dst + 24;
  v136 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v137, &v129, &v131, (std::basic_string<char16_t> *)__dst);
  v107 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v106, v36 + 48, (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v107);
  *(_QWORD *)&v127 = &__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v127);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  v108 = v36[4];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, (char *)L"adposition");
  __dst = 0;
  v136 = 0;
  v137 = 0;
  *(_QWORD *)&v127 = &__dst;
  BYTE8(v127) = 0;
  __dst = operator new(0x18uLL);
  v136 = __dst;
  v137 = (char *)__dst + 24;
  v136 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v137, &v129, &v131, (std::basic_string<char16_t> *)__dst);
  v109 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v108, v36 + 49, (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v109);
  *(_QWORD *)&v127 = &__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v127);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  v110 = *(_QWORD *)(*v36 - 56);
  result = *((_QWORD *)v113 + 29);
  if (result)
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
  *((_QWORD *)v113 + 29) = (char *)v36 + v110;
  return result;
}

void sub_1CB4E9044(_Unwind_Exception *a1)
{
  uint64_t v1;
  void *v2;

  __cxa_free_exception(v2);
  MEMORY[0x1D179D2EC](v1, 0x10F3C4076D9A6D4);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer::startsWithConsonantSubset(unsigned __int16 *a1)
{
  unsigned __int16 *v2;
  int v4;
  unsigned __int16 *v5;
  morphun::dictionary::PhraseProperties *v6;
  morphun::dictionary::PhraseProperties *v7;
  BOOL v9;
  _QWORD *v10;

  if (*((char *)a1 + 23) < 0)
  {
    if (*((_QWORD *)a1 + 1) < 2uLL)
      return 0;
    v2 = *(unsigned __int16 **)a1;
  }
  else
  {
    v2 = a1;
    if (*((unsigned __int8 *)a1 + 23) < 2u)
      return 0;
  }
  v4 = MEMORY[0x1D179D634](*v2);
  if (*((char *)a1 + 23) >= 0)
    v5 = a1;
  else
    v5 = *(unsigned __int16 **)a1;
  v6 = (morphun::dictionary::PhraseProperties *)MEMORY[0x1D179D634](v5[1]);
  v7 = v6;
  if (v4 == 112)
    return (_DWORD)v6 == 115 || (_DWORD)v6 == 110;
  v9 = (_DWORD)v6 == 110 && v4 == 103;
  if (v9 || (v4 - 120) < 3)
    return 1;
  if (v4 != 115)
    return 0;
  v10 = (_QWORD *)morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_START(v6);
  return MEMORY[0x1D179D958](*v10, v7) == 0;
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer::startsWithVowelForElision(uint64_t a1)
{
  unsigned __int16 *v2;
  morphun::dictionary::PhraseProperties *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  morphun::dictionary::DictionaryMetaData *v9;

  if (*(char *)(a1 + 23) < 0)
  {
    if (*(_QWORD *)(a1 + 8) >= 2uLL)
    {
      v2 = *(unsigned __int16 **)a1;
      goto LABEL_7;
    }
    return 0;
  }
  v2 = (unsigned __int16 *)a1;
  if (*(unsigned __int8 *)(a1 + 23) < 2u)
    return 0;
LABEL_7:
  v4 = (morphun::dictionary::PhraseProperties *)MEMORY[0x1D179D634](*v2);
  if ((_DWORD)v4 == 104)
  {
    v7 = (_QWORD *)morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_START(v4);
    if (*(char *)(a1 + 23) >= 0)
      v8 = a1;
    else
      v8 = *(_QWORD *)a1;
    return MEMORY[0x1D179D958](*v7, *(unsigned __int16 *)(v8 + 2)) != 0;
  }
  else if ((_DWORD)v4 == 105)
  {
    v5 = (_QWORD *)morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_START(v4);
    if (*(char *)(a1 + 23) >= 0)
      v6 = a1;
    else
      v6 = *(_QWORD *)a1;
    return MEMORY[0x1D179D958](*v5, *(unsigned __int16 *)(v6 + 2)) == 0;
  }
  else
  {
    v9 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::ITALIAN(v4);
    return morphun::dictionary::PhraseProperties::isStartsWithVowel(v9, a1);
  }
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer::POSSESSIVE_ADJECTIVE_MAP(morphun::grammar::synthesis::ItGrammarSynthesizer *this)
{
  unsigned __int8 v1;
  uint64_t result;
  uint64_t *v3;
  morphun::exception::NullPointerException *exception;
  int v5;
  const char *v6;
  uint64_t v7;
  int v8;
  const char *v9;
  uint64_t v10;
  int v11;
  const char *v12;
  uint64_t v13;
  int v14;
  const char *v15;
  uint64_t v16;
  int v17;
  const __int16 *v18;
  uint64_t v19;
  int v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  if ((v1 & 1) == 0
  {
    v3 = (uint64_t *)operator new();
    v5 = 17;
    v6 = "m";
    v7 = 3;
    v8 = 33;
    v9 = "t";
    v10 = 3;
    v11 = 49;
    v12 = "s";
    v13 = 3;
    v14 = 18;
    v15 = "n";
    v16 = 6;
    v17 = 34;
    v18 = L"vostro";
    v19 = 6;
    v20 = 50;
    v21 = "l";
    v22 = 4;
    std::map<int,std::u16string_view>::map[abi:ne180100](v3, &v5, 6);
    morphun::grammar::synthesis::ItGrammarSynthesizer::POSSESSIVE_ADJECTIVE_MAP(void)::POSSESSIVE_ADJECTIVE_MAP_ = (uint64_t)v3;
  }
  result = morphun::grammar::synthesis::ItGrammarSynthesizer::POSSESSIVE_ADJECTIVE_MAP(void)::POSSESSIVE_ADJECTIVE_MAP_;
  if (!morphun::grammar::synthesis::ItGrammarSynthesizer::POSSESSIVE_ADJECTIVE_MAP(void)::POSSESSIVE_ADJECTIVE_MAP_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4E9A74(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t *std::map<int,std::u16string_view>::map[abi:ne180100](uint64_t *a1, int *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v6;

  a1[1] = 0;
  v4 = a1 + 1;
  a1[2] = 0;
  *a1 = (uint64_t)(a1 + 1);
  if (a3)
  {
    v6 = 24 * a3;
    do
    {
      std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_hint_unique_key_args<int,std::pair<int const,std::u16string_view> const&>(a1, v4, *a2, (uint64_t)a2);
      a2 += 6;
      v6 -= 24;
    }
    while (v6);
  }
  return a1;
}

void sub_1CB4E9B2C(_Unwind_Exception *a1)
{
  _QWORD **v1;

  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_hint_unique_key_args<int,std::pair<int const,std::u16string_view> const&>(uint64_t *result, uint64_t *a2, int a3, uint64_t a4)
{
  uint64_t **v5;
  uint64_t **v6;
  int v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t **v11;
  uint64_t *v12;
  uint64_t **v13;
  uint64_t **v14;
  uint64_t *v15;
  BOOL v16;
  uint64_t *v17;
  int v18;
  uint64_t *v19;
  uint64_t *v20;
  int v21;
  _OWORD *v22;

  v5 = (uint64_t **)result;
  v6 = (uint64_t **)(result + 1);
  if (result + 1 == a2 || (v7 = *((_DWORD *)a2 + 8), v7 > a3))
  {
    v8 = (uint64_t *)*a2;
    if ((uint64_t *)*result == a2)
    {
      v10 = a2;
LABEL_16:
      if (v8)
        v13 = (uint64_t **)v10;
      else
        v13 = (uint64_t **)a2;
      if (v8)
        v11 = (uint64_t **)(v10 + 1);
      else
        v11 = (uint64_t **)a2;
      goto LABEL_22;
    }
    if (v8)
    {
      v9 = (uint64_t *)*a2;
      do
      {
        v10 = v9;
        v9 = (uint64_t *)v9[1];
      }
      while (v9);
    }
    else
    {
      v15 = a2;
      do
      {
        v10 = (uint64_t *)v15[2];
        v16 = *v10 == (_QWORD)v15;
        v15 = v10;
      }
      while (v16);
    }
    if (*((_DWORD *)v10 + 8) < a3)
      goto LABEL_16;
    v17 = *v6;
    if (*v6)
    {
      while (1)
      {
        while (1)
        {
          v13 = (uint64_t **)v17;
          v18 = *((_DWORD *)v17 + 8);
          if (v18 <= a3)
            break;
          v17 = *v13;
          v6 = v13;
          if (!*v13)
            goto LABEL_44;
        }
        if (v18 >= a3)
          break;
        v6 = v13 + 1;
        v17 = v13[1];
        if (!v17)
          goto LABEL_44;
      }
LABEL_45:
      v11 = v6;
      goto LABEL_22;
    }
    goto LABEL_43;
  }
  if (v7 >= a3)
    return result;
  v11 = (uint64_t **)(a2 + 1);
  v12 = (uint64_t *)a2[1];
  if (v12)
  {
    do
    {
      v11 = (uint64_t **)v12;
      v12 = (uint64_t *)*v12;
      v13 = v11;
      v14 = v11;
    }
    while (v12);
  }
  else
  {
    v14 = (uint64_t **)a2;
    do
    {
      v19 = (uint64_t *)v14;
      v14 = (uint64_t **)v14[2];
    }
    while (*v14 != v19);
    v13 = (uint64_t **)a2;
  }
  if (v14 != v6 && *((_DWORD *)v14 + 8) <= a3)
  {
    v20 = *v6;
    if (*v6)
    {
      while (1)
      {
        while (1)
        {
          v13 = (uint64_t **)v20;
          v21 = *((_DWORD *)v20 + 8);
          if (v21 <= a3)
            break;
          v20 = *v13;
          v6 = v13;
          if (!*v13)
            goto LABEL_44;
        }
        if (v21 >= a3)
          goto LABEL_45;
        v6 = v13 + 1;
        v20 = v13[1];
        if (!v20)
          goto LABEL_44;
      }
    }
LABEL_43:
    v13 = (uint64_t **)(result + 1);
    goto LABEL_44;
  }
LABEL_22:
  v6 = v11;
  if (!*v11)
  {
LABEL_44:
    v22 = operator new(0x38uLL);
    v22[2] = *(_OWORD *)a4;
    *((_QWORD *)v22 + 6) = *(_QWORD *)(a4 + 16);
    return std::__tree<std::u16string_view>::__insert_node_at(v5, (uint64_t)v13, v6, (uint64_t *)v22);
  }
  return result;
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer::getPossessiveAdjective(morphun::grammar::synthesis::ItGrammarSynthesizer *a1, char a2)
{
  char v3;
  uint64_t v4;
  morphun::grammar::synthesis::ItGrammarSynthesizer *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  morphun::grammar::synthesis::ItGrammarSynthesizer *v9;
  int v10;
  BOOL v11;
  uint64_t *v12;

  v3 = (char)a1;
  v4 = morphun::grammar::synthesis::ItGrammarSynthesizer::POSSESSIVE_ADJECTIVE_MAP(a1);
  v7 = *(_QWORD *)(v4 + 8);
  v5 = (morphun::grammar::synthesis::ItGrammarSynthesizer *)(v4 + 8);
  v6 = v7;
  if (!v7)
    goto LABEL_11;
  v8 = v3 & 0xF | (16 * (a2 & 0xF));
  v9 = v5;
  do
  {
    v10 = *(_DWORD *)(v6 + 32);
    v11 = v10 < v8;
    if (v10 >= v8)
      v12 = (uint64_t *)v6;
    else
      v12 = (uint64_t *)(v6 + 8);
    if (!v11)
      v9 = (morphun::grammar::synthesis::ItGrammarSynthesizer *)v6;
    v6 = *v12;
  }
  while (*v12);
  if (v9 == v5 || v8 < *((_DWORD *)v9 + 8))
LABEL_11:
    v9 = v5;
  if (v9 == (morphun::grammar::synthesis::ItGrammarSynthesizer *)(morphun::grammar::synthesis::ItGrammarSynthesizer::POSSESSIVE_ADJECTIVE_MAP(v5)
                                                                 + 8))
    return 0;
  else
    return *((_QWORD *)v9 + 5);
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer::INFLECTED_POSSESIVE_ADJECTIVES(morphun::grammar::synthesis::ItGrammarSynthesizer *this)
{
  unsigned __int8 v1;
  uint64_t result;
  uint64_t **v3;
  uint64_t i;
  morphun::exception::NullPointerException *exception;
  uint64_t v6[3];
  uint64_t v7[3];
  uint64_t v8[3];
  uint64_t v9[3];
  _OWORD v10[12];
  _OWORD v11[12];
  _OWORD v12[12];
  _OWORD v13[12];
  int v14[2];
  uint64_t v15[3];
  int v16;
  uint64_t v17[3];
  int v18;
  uint64_t v19[3];
  int v20;
  uint64_t v21[4];

  v21[3] = *MEMORY[0x1E0C80C00];
  if ((v1 & 1) == 0
  {
    v3 = (uint64_t **)operator new();
    v13[8] = xmmword_1E8674B80;
    v13[9] = *(_OWORD *)&off_1E8674B90;
    v13[10] = xmmword_1E8674BA0;
    v13[11] = *(_OWORD *)&off_1E8674BB0;
    v13[4] = xmmword_1E8674B40;
    v13[5] = *(_OWORD *)&off_1E8674B50;
    v13[6] = xmmword_1E8674B60;
    v13[7] = *(_OWORD *)&off_1E8674B70;
    v13[0] = xmmword_1E8674B00;
    v13[1] = *(_OWORD *)&off_1E8674B10;
    v13[2] = xmmword_1E8674B20;
    v13[3] = *(_OWORD *)&off_1E8674B30;
    std::map<std::u16string_view,std::u16string_view>::map[abi:ne180100](v9, (uint64_t)v13, 6);
    v14[0] = 17;
    std::map<std::u16string_view,std::u16string_view>::map[abi:ne180100](v15, v9);
    v12[8] = xmmword_1E8674C40;
    v12[9] = *(_OWORD *)&off_1E8674C50;
    v12[10] = xmmword_1E8674C60;
    v12[11] = *(_OWORD *)&off_1E8674C70;
    v12[4] = xmmword_1E8674C00;
    v12[5] = *(_OWORD *)&off_1E8674C10;
    v12[6] = xmmword_1E8674C20;
    v12[7] = *(_OWORD *)&off_1E8674C30;
    v12[0] = xmmword_1E8674BC0;
    v12[1] = *(_OWORD *)&off_1E8674BD0;
    v12[2] = xmmword_1E8674BE0;
    v12[3] = *(_OWORD *)&off_1E8674BF0;
    std::map<std::u16string_view,std::u16string_view>::map[abi:ne180100](v8, (uint64_t)v12, 6);
    v16 = 33;
    std::map<std::u16string_view,std::u16string_view>::map[abi:ne180100](v17, v8);
    v11[8] = xmmword_1E8674D00;
    v11[9] = *(_OWORD *)&off_1E8674D10;
    v11[10] = xmmword_1E8674D20;
    v11[11] = *(_OWORD *)&off_1E8674D30;
    v11[4] = xmmword_1E8674CC0;
    v11[5] = *(_OWORD *)&off_1E8674CD0;
    v11[6] = xmmword_1E8674CE0;
    v11[7] = *(_OWORD *)&off_1E8674CF0;
    v11[0] = xmmword_1E8674C80;
    v11[1] = unk_1E8674C90;
    v11[2] = xmmword_1E8674CA0;
    v11[3] = *(_OWORD *)&off_1E8674CB0;
    std::map<std::u16string_view,std::u16string_view>::map[abi:ne180100](v7, (uint64_t)v11, 6);
    v18 = 18;
    std::map<std::u16string_view,std::u16string_view>::map[abi:ne180100](v19, v7);
    v10[8] = xmmword_1E8674DC0;
    v10[9] = *(_OWORD *)&off_1E8674DD0;
    v10[10] = xmmword_1E8674DE0;
    v10[11] = *(_OWORD *)&off_1E8674DF0;
    v10[4] = xmmword_1E8674D80;
    v10[5] = *(_OWORD *)&off_1E8674D90;
    v10[6] = xmmword_1E8674DA0;
    v10[7] = *(_OWORD *)&off_1E8674DB0;
    v10[0] = xmmword_1E8674D40;
    v10[1] = *(_OWORD *)&off_1E8674D50;
    v10[2] = xmmword_1E8674D60;
    v10[3] = *(_OWORD *)&off_1E8674D70;
    std::map<std::u16string_view,std::u16string_view>::map[abi:ne180100](v6, (uint64_t)v10, 6);
    v20 = 34;
    std::map<std::u16string_view,std::u16string_view>::map[abi:ne180100](v21, v6);
    std::map<int,std::map<std::u16string_view,std::u16string_view>>::map[abi:ne180100](v3, v14, 4);
    for (i = 28; i != -4; i -= 8)
      std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*(_QWORD **)&v14[i]);
    std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy((_QWORD *)v6[1]);
    std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy((_QWORD *)v7[1]);
    std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy((_QWORD *)v8[1]);
    std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy((_QWORD *)v9[1]);
    morphun::grammar::synthesis::ItGrammarSynthesizer::INFLECTED_POSSESIVE_ADJECTIVES(void)::INFLECTED_POSSESIVE_ADJECTIVES_ = (uint64_t)v3;
  }
  result = morphun::grammar::synthesis::ItGrammarSynthesizer::INFLECTED_POSSESIVE_ADJECTIVES(void)::INFLECTED_POSSESIVE_ADJECTIVES_;
  if (!morphun::grammar::synthesis::ItGrammarSynthesizer::INFLECTED_POSSESIVE_ADJECTIVES(void)::INFLECTED_POSSESIVE_ADJECTIVES_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4EA044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10, uint64_t a11, uint64_t a12, _QWORD *a13, uint64_t a14, uint64_t a15, _QWORD *a16, uint64_t a17, uint64_t a18, _QWORD *a19)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t i;

  for (i = 112; i != -16; i -= 32)
    std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*(_QWORD **)(v20 + i));
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(a10);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(a13);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(a16);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(a19);
  MEMORY[0x1D179D2EC](v19, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t *std::map<std::u16string_view,std::u16string_view>::map[abi:ne180100](uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  a1[1] = 0;
  v4 = a1 + 1;
  a1[2] = 0;
  *a1 = (uint64_t)(a1 + 1);
  if (a3)
  {
    v5 = a2;
    v6 = a2 + 32 * a3;
    do
    {
      std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::__emplace_hint_unique_key_args<std::u16string_view,std::pair<std::u16string_view const,std::u16string_view> const&>(a1, v4, *(unsigned __int16 **)v5, *(_QWORD *)(v5 + 8), (_OWORD *)v5);
      v5 += 32;
    }
    while (v5 != v6);
  }
  return a1;
}

void sub_1CB4EA1C0(_Unwind_Exception *a1)
{
  _QWORD **v1;

  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

uint64_t *std::map<std::u16string_view,std::u16string_view>::map[abi:ne180100](uint64_t *a1, _QWORD *a2)
{
  uint64_t *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  BOOL v8;

  a1[1] = 0;
  v3 = a1 + 1;
  a1[2] = 0;
  *a1 = (uint64_t)(a1 + 1);
  v4 = a2 + 1;
  v5 = (_QWORD *)*a2;
  if ((_QWORD *)*a2 != a2 + 1)
  {
    do
    {
      std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::__emplace_hint_unique_key_args<std::u16string_view,std::pair<std::u16string_view const,std::u16string_view> const&>(a1, v3, (unsigned __int16 *)v5[4], v5[5], (_OWORD *)v5 + 2);
      v6 = (_QWORD *)v5[1];
      if (v6)
      {
        do
        {
          v7 = v6;
          v6 = (_QWORD *)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          v7 = (_QWORD *)v5[2];
          v8 = *v7 == (_QWORD)v5;
          v5 = v7;
        }
        while (!v8);
      }
      v5 = v7;
    }
    while (v7 != v4);
  }
  return a1;
}

void sub_1CB4EA268(_Unwind_Exception *a1)
{
  _QWORD **v1;

  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

uint64_t **std::map<int,std::map<std::u16string_view,std::u16string_view>>::map[abi:ne180100](uint64_t **a1, int *a2, uint64_t a3)
{
  void **v4;
  int *v5;
  void **v6;
  int *v7;
  void **v8;
  void **v9;
  void **v10;
  void **v11;
  BOOL v12;
  int v13;
  void **v14;
  void **v15;
  void *v16;
  uint64_t *v17;
  int v18;

  a1[1] = 0;
  v4 = (void **)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    v5 = a2;
    v6 = 0;
    v7 = &a2[8 * a3];
    v8 = (void **)(a1 + 1);
    while (1)
    {
      v9 = v4;
      if (v8 == v4)
        goto LABEL_9;
      v10 = v6;
      v11 = v4;
      if (v6)
      {
        do
        {
          v9 = v10;
          v10 = (void **)v10[1];
        }
        while (v10);
      }
      else
      {
        do
        {
          v9 = (void **)v11[2];
          v12 = *v9 == v11;
          v11 = v9;
        }
        while (v12);
      }
      v13 = *v5;
      if (*((_DWORD *)v9 + 8) < *v5)
      {
LABEL_9:
        v14 = v6 ? v9 : v4;
        v15 = v6 ? v9 + 1 : v4;
      }
      else
      {
        v14 = v4;
        v15 = v4;
        if (v6)
        {
          v15 = v4;
          while (1)
          {
            while (1)
            {
              v14 = v6;
              v18 = *((_DWORD *)v6 + 8);
              if (v13 >= v18)
                break;
              v6 = (void **)*v14;
              v15 = v14;
              if (!*v14)
                goto LABEL_16;
            }
            if (v18 >= v13)
              break;
            v15 = v14 + 1;
            v6 = (void **)v14[1];
            if (!v6)
              goto LABEL_16;
          }
        }
      }
      if (!*v15)
      {
LABEL_16:
        v16 = operator new(0x40uLL);
        *((_DWORD *)v16 + 8) = *v5;
        std::map<std::u16string_view,std::u16string_view>::map[abi:ne180100]((uint64_t *)v16 + 5, (_QWORD *)v5 + 1);
        *(_QWORD *)v16 = 0;
        *((_QWORD *)v16 + 1) = 0;
        *((_QWORD *)v16 + 2) = v14;
        *v15 = v16;
        v17 = (uint64_t *)**a1;
        if (v17)
        {
          *a1 = v17;
          v16 = *v15;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
      v5 += 8;
      if (v5 == v7)
        break;
      v8 = (void **)*a1;
      v6 = (void **)a1[1];
    }
  }
  return a1;
}

void sub_1CB4EA3F0(_Unwind_Exception *a1)
{
  void *v1;
  _QWORD **v2;

  operator delete(v1);
  std::__tree<std::__value_type<int,std::map<std::u16string_view,std::u16string_view>>,std::__map_value_compare<int,std::__value_type<int,std::map<std::u16string_view,std::u16string_view>>,std::less<int>,true>,std::allocator<std::__value_type<int,std::map<std::u16string_view,std::u16string_view>>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<int,std::map<std::u16string_view,std::u16string_view>>,std::__map_value_compare<int,std::__value_type<int,std::map<std::u16string_view,std::u16string_view>>,std::less<int>,true>,std::allocator<std::__value_type<int,std::map<std::u16string_view,std::u16string_view>>>>::destroy(_QWORD *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<int,std::map<std::u16string_view,std::u16string_view>>,std::__map_value_compare<int,std::__value_type<int,std::map<std::u16string_view,std::u16string_view>>,std::less<int>,true>,std::allocator<std::__value_type<int,std::map<std::u16string_view,std::u16string_view>>>>::destroy(*a1);
    std::__tree<std::__value_type<int,std::map<std::u16string_view,std::u16string_view>>,std::__map_value_compare<int,std::__value_type<int,std::map<std::u16string_view,std::u16string_view>>,std::less<int>,true>,std::allocator<std::__value_type<int,std::map<std::u16string_view,std::u16string_view>>>>::destroy(a1[1]);
    std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy((_QWORD *)a1[6]);
    operator delete(a1);
  }
}

uint64_t *std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::__emplace_hint_unique_key_args<std::u16string_view,std::pair<std::u16string_view const,std::u16string_view> const&>(uint64_t *result, uint64_t *a2, unsigned __int16 *a3, unint64_t a4, _OWORD *a5)
{
  uint64_t **v6;
  unint64_t v7;
  unint64_t v8;
  unsigned __int16 *v9;
  unint64_t v10;
  unsigned __int16 *v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  unsigned __int16 *v17;
  unsigned __int16 *v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t *v24;
  BOOL v25;
  unint64_t v26;
  unint64_t v27;
  unsigned __int16 *v28;
  unsigned __int16 *v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  unsigned __int16 *v35;
  unsigned __int16 *v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t *v39;
  __int128 v40;
  uint64_t *v41;
  uint64_t *v42;

  v6 = (uint64_t **)result;
  if (result + 1 == a2)
    goto LABEL_11;
  v7 = a2[5];
  if (v7 >= a4)
    v8 = a4;
  else
    v8 = a2[5];
  if (v8)
  {
    v9 = (unsigned __int16 *)a2[4];
    v10 = v8;
    v11 = a3;
    do
    {
      v12 = *v11;
      v13 = *v9;
      if (v12 < v13)
        goto LABEL_11;
      if (v13 < v12)
        goto LABEL_16;
      ++v11;
      ++v9;
    }
    while (--v10);
  }
  if (v7 > a4)
  {
LABEL_11:
    v14 = *a2;
    if ((uint64_t *)*result == a2)
    {
      v16 = a2;
      goto LABEL_38;
    }
    if (v14)
    {
      v15 = (uint64_t *)*a2;
      do
      {
        v16 = v15;
        v15 = (uint64_t *)v15[1];
      }
      while (v15);
    }
    else
    {
      v24 = a2;
      do
      {
        v16 = (uint64_t *)v24[2];
        v25 = *v16 == (_QWORD)v24;
        v24 = v16;
      }
      while (v25);
    }
    v26 = v16[5];
    if (a4 >= v26)
      v27 = v16[5];
    else
      v27 = a4;
    if (v27)
    {
      v28 = (unsigned __int16 *)v16[4];
      v29 = a3;
      do
      {
        v30 = *v28;
        v31 = *v29;
        if (v30 < v31)
          goto LABEL_38;
        if (v31 < v30)
          goto LABEL_58;
        ++v28;
        ++v29;
      }
      while (--v27);
    }
    if (v26 < a4)
    {
LABEL_38:
      if (v14)
      {
        v42 = v16;
        v23 = v16 + 1;
      }
      else
      {
        v42 = a2;
        v23 = a2;
      }
      goto LABEL_59;
    }
LABEL_58:
    result = std::__tree<std::u16string_view>::__find_equal<std::u16string_view>((uint64_t)result, &v42, a3, a4);
    v23 = result;
    goto LABEL_59;
  }
LABEL_16:
  if (v8)
  {
    v17 = (unsigned __int16 *)a2[4];
    v18 = a3;
    while (1)
    {
      v19 = *v17;
      v20 = *v18;
      if (v19 < v20)
        break;
      if (v20 < v19)
        goto LABEL_41;
      ++v17;
      ++v18;
      if (!--v8)
        goto LABEL_21;
    }
LABEL_22:
    v21 = a2[1];
    if (v21)
    {
      v22 = (uint64_t *)a2[1];
      do
      {
        v23 = v22;
        v22 = (uint64_t *)*v22;
      }
      while (v22);
    }
    else
    {
      v32 = a2;
      do
      {
        v23 = (uint64_t *)v32[2];
        v25 = *v23 == (_QWORD)v32;
        v32 = v23;
      }
      while (!v25);
    }
    if (v23 != result + 1)
    {
      v33 = v23[5];
      if (v33 >= a4)
        v34 = a4;
      else
        v34 = v23[5];
      if (v34)
      {
        v35 = (unsigned __int16 *)v23[4];
        v36 = a3;
        while (1)
        {
          v37 = *v36;
          v38 = *v35;
          if (v37 < v38)
            break;
          if (v38 < v37)
            goto LABEL_58;
          ++v36;
          ++v35;
          if (!--v34)
            goto LABEL_55;
        }
      }
      else
      {
LABEL_55:
        if (v33 <= a4)
          goto LABEL_58;
      }
    }
    if (v21)
    {
      v42 = v23;
    }
    else
    {
      v42 = a2;
      v23 = a2 + 1;
    }
LABEL_59:
    if (*v23)
      return result;
    goto LABEL_60;
  }
LABEL_21:
  if (v7 < a4)
    goto LABEL_22;
LABEL_41:
  v41 = a2;
  v42 = a2;
  v23 = (uint64_t *)&v41;
  if (a2)
    return result;
LABEL_60:
  v39 = (uint64_t *)operator new(0x40uLL);
  v40 = a5[1];
  *((_OWORD *)v39 + 2) = *a5;
  *((_OWORD *)v39 + 3) = v40;
  return std::__tree<std::u16string_view>::__insert_node_at(v6, (uint64_t)v42, (uint64_t **)v23, v39);
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer::getInflectedPossessiveAdjectiveValue(unsigned __int16 *a1, unint64_t a2, int a3, int a4)
{
  char v5;
  uint64_t result;
  char v8;
  uint64_t v9;
  morphun::grammar::synthesis::ItGrammarSynthesizer *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  morphun::grammar::synthesis::ItGrammarSynthesizer *v14;
  int v15;
  BOOL v16;
  uint64_t *v17;
  _QWORD *v18;

  if (!a3)
    return 0;
  v5 = a4;
  result = 0;
  if (a4)
  {
    v8 = a3;
    v9 = morphun::grammar::synthesis::ItGrammarSynthesizer::INFLECTED_POSSESIVE_ADJECTIVES(0);
    v12 = *(_QWORD *)(v9 + 8);
    v10 = (morphun::grammar::synthesis::ItGrammarSynthesizer *)(v9 + 8);
    v11 = v12;
    if (!v12)
      goto LABEL_13;
    v13 = v8 & 0xF | (16 * (v5 & 0xF));
    v14 = v10;
    do
    {
      v15 = *(_DWORD *)(v11 + 32);
      v16 = v15 < v13;
      if (v15 >= v13)
        v17 = (uint64_t *)v11;
      else
        v17 = (uint64_t *)(v11 + 8);
      if (!v16)
        v14 = (morphun::grammar::synthesis::ItGrammarSynthesizer *)v11;
      v11 = *v17;
    }
    while (*v17);
    if (v14 == v10 || v13 < *((_DWORD *)v14 + 8))
LABEL_13:
      v14 = v10;
    if (v14 == (morphun::grammar::synthesis::ItGrammarSynthesizer *)(morphun::grammar::synthesis::ItGrammarSynthesizer::INFLECTED_POSSESIVE_ADJECTIVES(v10)
                                                                    + 8))
      return 0;
    v18 = std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>((uint64_t)v14 + 40, a1, a2);
    if ((_QWORD *)((char *)v14 + 48) == v18)
      return 0;
    else
      return v18[6];
  }
  return result;
}

_QWORD *std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(uint64_t a1, unsigned __int16 *a2, unint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  unsigned __int16 *v9;
  unsigned __int16 *v10;
  unsigned int v11;
  unsigned int v12;
  unint64_t v13;
  unint64_t v14;
  unsigned __int16 *v15;
  unsigned int v16;
  unsigned int v17;

  v5 = *(_QWORD **)(a1 + 8);
  v3 = (_QWORD *)(a1 + 8);
  v4 = v5;
  if (!v5)
    return v3;
  v6 = v3;
  do
  {
    v7 = v4[5];
    if (a3 >= v7)
      v8 = v4[5];
    else
      v8 = a3;
    if (v8)
    {
      v9 = (unsigned __int16 *)v4[4];
      v10 = a2;
      while (1)
      {
        v11 = *v9;
        v12 = *v10;
        if (v11 < v12)
        {
          ++v4;
          goto LABEL_16;
        }
        if (v12 < v11)
          break;
        ++v9;
        ++v10;
        if (!--v8)
          goto LABEL_11;
      }
      v6 = v4;
    }
    else
    {
LABEL_11:
      if (v7 < a3)
        ++v4;
      else
        v6 = v4;
    }
LABEL_16:
    v4 = (_QWORD *)*v4;
  }
  while (v4);
  if (v3 == v6)
    return v3;
  v13 = v6[5];
  if (v13 >= a3)
    v14 = a3;
  else
    v14 = v6[5];
  if (v14)
  {
    v15 = (unsigned __int16 *)v6[4];
    do
    {
      v16 = *a2;
      v17 = *v15;
      if (v16 < v17)
        return v3;
      if (v17 < v16)
        return v6;
      ++a2;
      ++v15;
    }
    while (--v14);
  }
  if (v13 > a3)
    return v3;
  return v6;
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer::getCount(unsigned __int16 *a1)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  uint64_t *v9;
  morphun::grammar::synthesis::GrammemeConstants *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t i;
  std::basic_string<char16_t> v17;
  int v18;
  std::basic_string<char16_t> v19;
  int v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  if ((v2 & 1) == 0
  {
    v11 = (morphun::grammar::synthesis::GrammemeConstants *)operator new();
    v12 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v11);
    if (*(char *)(v12 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v17, *(const std::basic_string<char16_t>::value_type **)v12, *(_QWORD *)(v12 + 8));
    }
    else
    {
      v13 = *(_OWORD *)v12;
      v17.__r_.__value_.__r.__words[2] = *(_QWORD *)(v12 + 16);
      *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v13;
    }
    v18 = 1;
    v14 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v12);
    if (*(char *)(v14 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v19, *(const std::basic_string<char16_t>::value_type **)v14, *(_QWORD *)(v14 + 8));
    }
    else
    {
      v15 = *(_OWORD *)v14;
      v19.__r_.__value_.__r.__words[2] = *(_QWORD *)(v14 + 16);
      *(_OWORD *)&v19.__r_.__value_.__l.__data_ = v15;
    }
    v20 = 2;
    std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::Count>::map[abi:ne180100]((uint64_t **)v11, (__int128 *)&v17, 2);
    for (i = 0; i != -8; i -= 4)
    {
      if (SHIBYTE(v19.__r_.__value_.__r.__words[i + 2]) < 0)
        operator delete(*(void **)((char *)&v19.__r_.__value_.__l.__data_ + i * 8));
    }
    morphun::grammar::synthesis::ItGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap = (uint64_t)v11;
  }
  if (!a1)
    return 0;
  v3 = morphun::grammar::synthesis::ItGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::Count>>(morphun::grammar::synthesis::ItGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap);
  v6 = *(_QWORD *)(v3 + 8);
  v4 = v3 + 8;
  v5 = v6;
  if (!v6)
    goto LABEL_10;
  v7 = v4;
  do
  {
    v8 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v5 + 32), a1);
    v9 = (uint64_t *)(v5 + 8);
    if (!v8)
    {
      v9 = (uint64_t *)v5;
      v7 = v5;
    }
    v5 = *v9;
  }
  while (*v9);
  if (v7 == v4 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v7 + 32)))
LABEL_10:
    v7 = v4;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::Count>>(morphun::grammar::synthesis::ItGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v7)
    return 0;
  else
    return *(unsigned int *)(v7 + 56);
}

void sub_1CB4EAA38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  uint64_t v14;

  if (a14 < 0)
    operator delete(__p);
  MEMORY[0x1D179D2EC](v14, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::Count>::map[abi:ne180100](uint64_t **a1, __int128 *a2, uint64_t a3)
{
  uint64_t *v4;
  __int128 *v5;
  __int128 *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  BOOL v11;
  char **v12;
  char **v13;
  char *v14;
  unsigned __int16 *v15;
  char *v16;
  std::basic_string<char16_t> *v17;
  __int128 v18;
  uint64_t *v19;

  a1[1] = 0;
  v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    v5 = a2;
    v6 = &a2[2 * a3];
    while (1)
    {
      v7 = a1[1];
      v8 = v4;
      if (*a1 != v4)
      {
        v9 = a1[1];
        v10 = v4;
        if (v7)
        {
          do
          {
            v8 = v9;
            v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            v8 = (uint64_t *)v10[2];
            v11 = *v8 == (_QWORD)v10;
            v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break;
      }
      v12 = (char **)v4;
      v13 = (char **)v4;
      if (!v7)
        goto LABEL_19;
      v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        v12 = (char **)v8;
LABEL_19:
        v16 = (char *)operator new(0x40uLL);
        v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((_QWORD *)v5 + 1));
        }
        else
        {
          v18 = *v5;
          *((_QWORD *)v16 + 6) = *((_QWORD *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(_QWORD *)v16 = 0;
        *((_QWORD *)v16 + 1) = 0;
        *((_QWORD *)v16 + 2) = v12;
        *v13 = v16;
        v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6)
        return a1;
    }
    v12 = (char **)v4;
    v13 = (char **)v4;
    if (v7)
    {
      v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          v12 = (char **)v14;
          v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break;
          v14 = *v12;
          v13 = v12;
          if (!*v12)
            goto LABEL_19;
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5))
          goto LABEL_25;
        v13 = v12 + 1;
        v14 = v12[1];
        if (!v14)
          goto LABEL_19;
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1CB4EAC5C(_Unwind_Exception *a1)
{
  void *v1;
  char **v2;

  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::Count>>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4EACC8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer::getPossessiveAdjectiveCount(unsigned __int16 *a1)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  uint64_t *v9;
  morphun::grammar::synthesis::GrammemeConstants *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t i;
  std::basic_string<char16_t> v17;
  int v18;
  std::basic_string<char16_t> v19;
  int v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  if ((v2 & 1) == 0
  {
    v11 = (morphun::grammar::synthesis::GrammemeConstants *)operator new();
    v12 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v11);
    if (*(char *)(v12 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v17, *(const std::basic_string<char16_t>::value_type **)v12, *(_QWORD *)(v12 + 8));
    }
    else
    {
      v13 = *(_OWORD *)v12;
      v17.__r_.__value_.__r.__words[2] = *(_QWORD *)(v12 + 16);
      *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v13;
    }
    v18 = 1;
    v14 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v12);
    if (*(char *)(v14 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v19, *(const std::basic_string<char16_t>::value_type **)v14, *(_QWORD *)(v14 + 8));
    }
    else
    {
      v15 = *(_OWORD *)v14;
      v19.__r_.__value_.__r.__words[2] = *(_QWORD *)(v14 + 16);
      *(_OWORD *)&v19.__r_.__value_.__l.__data_ = v15;
    }
    v20 = 2;
    std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::PossessiveAdjectiveCount>::map[abi:ne180100]((uint64_t **)v11, (__int128 *)&v17, 2);
    for (i = 0; i != -8; i -= 4)
    {
      if (SHIBYTE(v19.__r_.__value_.__r.__words[i + 2]) < 0)
        operator delete(*(void **)((char *)&v19.__r_.__value_.__l.__data_ + i * 8));
    }
    morphun::grammar::synthesis::ItGrammarSynthesizer::getPossessiveAdjectiveCount(std::basic_string<char16_t> const*)::valueMap = (uint64_t)v11;
  }
  if (!a1)
    return 0;
  v3 = morphun::grammar::synthesis::ItGrammarSynthesizer::getPossessiveAdjectiveCount(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::PossessiveAdjectiveCount>>(morphun::grammar::synthesis::ItGrammarSynthesizer::getPossessiveAdjectiveCount(std::basic_string<char16_t> const*)::valueMap);
  v6 = *(_QWORD *)(v3 + 8);
  v4 = v3 + 8;
  v5 = v6;
  if (!v6)
    goto LABEL_10;
  v7 = v4;
  do
  {
    v8 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v5 + 32), a1);
    v9 = (uint64_t *)(v5 + 8);
    if (!v8)
    {
      v9 = (uint64_t *)v5;
      v7 = v5;
    }
    v5 = *v9;
  }
  while (*v9);
  if (v7 == v4 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v7 + 32)))
LABEL_10:
    v7 = v4;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::PossessiveAdjectiveCount>>(morphun::grammar::synthesis::ItGrammarSynthesizer::getPossessiveAdjectiveCount(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v7)
    return 0;
  else
    return *(unsigned int *)(v7 + 56);
}

void sub_1CB4EAEB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  uint64_t v14;

  if (a14 < 0)
    operator delete(__p);
  MEMORY[0x1D179D2EC](v14, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::PossessiveAdjectiveCount>::map[abi:ne180100](uint64_t **a1, __int128 *a2, uint64_t a3)
{
  uint64_t *v4;
  __int128 *v5;
  __int128 *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  BOOL v11;
  char **v12;
  char **v13;
  char *v14;
  unsigned __int16 *v15;
  char *v16;
  std::basic_string<char16_t> *v17;
  __int128 v18;
  uint64_t *v19;

  a1[1] = 0;
  v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    v5 = a2;
    v6 = &a2[2 * a3];
    while (1)
    {
      v7 = a1[1];
      v8 = v4;
      if (*a1 != v4)
      {
        v9 = a1[1];
        v10 = v4;
        if (v7)
        {
          do
          {
            v8 = v9;
            v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            v8 = (uint64_t *)v10[2];
            v11 = *v8 == (_QWORD)v10;
            v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break;
      }
      v12 = (char **)v4;
      v13 = (char **)v4;
      if (!v7)
        goto LABEL_19;
      v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        v12 = (char **)v8;
LABEL_19:
        v16 = (char *)operator new(0x40uLL);
        v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((_QWORD *)v5 + 1));
        }
        else
        {
          v18 = *v5;
          *((_QWORD *)v16 + 6) = *((_QWORD *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(_QWORD *)v16 = 0;
        *((_QWORD *)v16 + 1) = 0;
        *((_QWORD *)v16 + 2) = v12;
        *v13 = v16;
        v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6)
        return a1;
    }
    v12 = (char **)v4;
    v13 = (char **)v4;
    if (v7)
    {
      v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          v12 = (char **)v14;
          v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break;
          v14 = *v12;
          v13 = v12;
          if (!*v12)
            goto LABEL_19;
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5))
          goto LABEL_25;
        v13 = v12 + 1;
        v14 = v12[1];
        if (!v14)
          goto LABEL_19;
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1CB4EB0DC(_Unwind_Exception *a1)
{
  void *v1;
  char **v2;

  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::PossessiveAdjectiveCount>>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4EB148(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer::getGender(unsigned __int16 *a1)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  uint64_t *v9;
  morphun::grammar::synthesis::GrammemeConstants *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t i;
  std::basic_string<char16_t> v17;
  int v18;
  std::basic_string<char16_t> v19;
  int v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  if ((v2 & 1) == 0
  {
    v11 = (morphun::grammar::synthesis::GrammemeConstants *)operator new();
    v12 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(v11);
    if (*(char *)(v12 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v17, *(const std::basic_string<char16_t>::value_type **)v12, *(_QWORD *)(v12 + 8));
    }
    else
    {
      v13 = *(_OWORD *)v12;
      v17.__r_.__value_.__r.__words[2] = *(_QWORD *)(v12 + 16);
      *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v13;
    }
    v18 = 1;
    v14 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE((morphun::grammar::synthesis::GrammemeConstants *)v12);
    if (*(char *)(v14 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v19, *(const std::basic_string<char16_t>::value_type **)v14, *(_QWORD *)(v14 + 8));
    }
    else
    {
      v15 = *(_OWORD *)v14;
      v19.__r_.__value_.__r.__words[2] = *(_QWORD *)(v14 + 16);
      *(_OWORD *)&v19.__r_.__value_.__l.__data_ = v15;
    }
    v20 = 2;
    std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::Gender>::map[abi:ne180100]((uint64_t **)v11, (__int128 *)&v17, 2);
    for (i = 0; i != -8; i -= 4)
    {
      if (SHIBYTE(v19.__r_.__value_.__r.__words[i + 2]) < 0)
        operator delete(*(void **)((char *)&v19.__r_.__value_.__l.__data_ + i * 8));
    }
    morphun::grammar::synthesis::ItGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap = (uint64_t)v11;
  }
  if (!a1)
    return 0;
  v3 = morphun::grammar::synthesis::ItGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::Gender>>(morphun::grammar::synthesis::ItGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap);
  v6 = *(_QWORD *)(v3 + 8);
  v4 = v3 + 8;
  v5 = v6;
  if (!v6)
    goto LABEL_10;
  v7 = v4;
  do
  {
    v8 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v5 + 32), a1);
    v9 = (uint64_t *)(v5 + 8);
    if (!v8)
    {
      v9 = (uint64_t *)v5;
      v7 = v5;
    }
    v5 = *v9;
  }
  while (*v9);
  if (v7 == v4 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v7 + 32)))
LABEL_10:
    v7 = v4;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::Gender>>(morphun::grammar::synthesis::ItGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v7)
    return 0;
  else
    return *(unsigned int *)(v7 + 56);
}

void sub_1CB4EB338(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  uint64_t v14;

  if (a14 < 0)
    operator delete(__p);
  MEMORY[0x1D179D2EC](v14, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::Gender>::map[abi:ne180100](uint64_t **a1, __int128 *a2, uint64_t a3)
{
  uint64_t *v4;
  __int128 *v5;
  __int128 *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  BOOL v11;
  char **v12;
  char **v13;
  char *v14;
  unsigned __int16 *v15;
  char *v16;
  std::basic_string<char16_t> *v17;
  __int128 v18;
  uint64_t *v19;

  a1[1] = 0;
  v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    v5 = a2;
    v6 = &a2[2 * a3];
    while (1)
    {
      v7 = a1[1];
      v8 = v4;
      if (*a1 != v4)
      {
        v9 = a1[1];
        v10 = v4;
        if (v7)
        {
          do
          {
            v8 = v9;
            v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            v8 = (uint64_t *)v10[2];
            v11 = *v8 == (_QWORD)v10;
            v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break;
      }
      v12 = (char **)v4;
      v13 = (char **)v4;
      if (!v7)
        goto LABEL_19;
      v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        v12 = (char **)v8;
LABEL_19:
        v16 = (char *)operator new(0x40uLL);
        v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((_QWORD *)v5 + 1));
        }
        else
        {
          v18 = *v5;
          *((_QWORD *)v16 + 6) = *((_QWORD *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(_QWORD *)v16 = 0;
        *((_QWORD *)v16 + 1) = 0;
        *((_QWORD *)v16 + 2) = v12;
        *v13 = v16;
        v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6)
        return a1;
    }
    v12 = (char **)v4;
    v13 = (char **)v4;
    if (v7)
    {
      v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          v12 = (char **)v14;
          v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break;
          v14 = *v12;
          v13 = v12;
          if (!*v12)
            goto LABEL_19;
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5))
          goto LABEL_25;
        v13 = v12 + 1;
        v14 = v12[1];
        if (!v14)
          goto LABEL_19;
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1CB4EB55C(_Unwind_Exception *a1)
{
  void *v1;
  char **v2;

  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::Gender>>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4EB5C8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer::getPossessiveAdjectivePerson(unsigned __int16 *a1)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  uint64_t *v9;
  morphun::grammar::synthesis::GrammemeConstants *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t i;
  std::basic_string<char16_t> v19;
  int v20;
  std::basic_string<char16_t> v21;
  int v22;
  std::basic_string<char16_t> v23;
  int v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  if ((v2 & 1) == 0
  {
    v11 = (morphun::grammar::synthesis::GrammemeConstants *)operator new();
    v12 = morphun::grammar::synthesis::GrammemeConstants::PERSON_FIRST(v11);
    if (*(char *)(v12 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v19, *(const std::basic_string<char16_t>::value_type **)v12, *(_QWORD *)(v12 + 8));
    }
    else
    {
      v13 = *(_OWORD *)v12;
      v19.__r_.__value_.__r.__words[2] = *(_QWORD *)(v12 + 16);
      *(_OWORD *)&v19.__r_.__value_.__l.__data_ = v13;
    }
    v20 = 1;
    v14 = morphun::grammar::synthesis::GrammemeConstants::PERSON_SECOND((morphun::grammar::synthesis::GrammemeConstants *)v12);
    if (*(char *)(v14 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v21, *(const std::basic_string<char16_t>::value_type **)v14, *(_QWORD *)(v14 + 8));
    }
    else
    {
      v15 = *(_OWORD *)v14;
      v21.__r_.__value_.__r.__words[2] = *(_QWORD *)(v14 + 16);
      *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v15;
    }
    v22 = 2;
    v16 = morphun::grammar::synthesis::GrammemeConstants::PERSON_THIRD((morphun::grammar::synthesis::GrammemeConstants *)v14);
    if (*(char *)(v16 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v23, *(const std::basic_string<char16_t>::value_type **)v16, *(_QWORD *)(v16 + 8));
    }
    else
    {
      v17 = *(_OWORD *)v16;
      v23.__r_.__value_.__r.__words[2] = *(_QWORD *)(v16 + 16);
      *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v17;
    }
    v24 = 3;
    std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::PossessiveAdjectivePerson>::map[abi:ne180100]((uint64_t **)v11, (__int128 *)&v19, 3);
    for (i = 0; i != -12; i -= 4)
    {
      if (SHIBYTE(v23.__r_.__value_.__r.__words[i + 2]) < 0)
        operator delete(*(void **)((char *)&v23.__r_.__value_.__l.__data_ + i * 8));
    }
    morphun::grammar::synthesis::ItGrammarSynthesizer::getPossessiveAdjectivePerson(std::basic_string<char16_t> const*)::valueMap = (uint64_t)v11;
  }
  if (!a1)
    return 0;
  v3 = morphun::grammar::synthesis::ItGrammarSynthesizer::getPossessiveAdjectivePerson(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::PossessiveAdjectivePerson>>(morphun::grammar::synthesis::ItGrammarSynthesizer::getPossessiveAdjectivePerson(std::basic_string<char16_t> const*)::valueMap);
  v6 = *(_QWORD *)(v3 + 8);
  v4 = v3 + 8;
  v5 = v6;
  if (!v6)
    goto LABEL_10;
  v7 = v4;
  do
  {
    v8 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v5 + 32), a1);
    v9 = (uint64_t *)(v5 + 8);
    if (!v8)
    {
      v9 = (uint64_t *)v5;
      v7 = v5;
    }
    v5 = *v9;
  }
  while (*v9);
  if (v7 == v4 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v7 + 32)))
LABEL_10:
    v7 = v4;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::PossessiveAdjectivePerson>>(morphun::grammar::synthesis::ItGrammarSynthesizer::getPossessiveAdjectivePerson(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v7)
    return 0;
  else
    return *(unsigned int *)(v7 + 56);
}

void sub_1CB4EB7F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t *v10;

  while (1)
  {
    if (*((char *)v10 - 9) < 0)
      operator delete((void *)*(v10 - 4));
    v10 -= 4;
    if (v10 == &a9)
    {
      MEMORY[0x1D179D2EC](v9, 0x1020C4062D53EE8);
      _Unwind_Resume(a1);
    }
  }
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::PossessiveAdjectivePerson>::map[abi:ne180100](uint64_t **a1, __int128 *a2, uint64_t a3)
{
  uint64_t *v4;
  __int128 *v5;
  __int128 *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  BOOL v11;
  char **v12;
  char **v13;
  char *v14;
  unsigned __int16 *v15;
  char *v16;
  std::basic_string<char16_t> *v17;
  __int128 v18;
  uint64_t *v19;

  a1[1] = 0;
  v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    v5 = a2;
    v6 = &a2[2 * a3];
    while (1)
    {
      v7 = a1[1];
      v8 = v4;
      if (*a1 != v4)
      {
        v9 = a1[1];
        v10 = v4;
        if (v7)
        {
          do
          {
            v8 = v9;
            v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            v8 = (uint64_t *)v10[2];
            v11 = *v8 == (_QWORD)v10;
            v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break;
      }
      v12 = (char **)v4;
      v13 = (char **)v4;
      if (!v7)
        goto LABEL_19;
      v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        v12 = (char **)v8;
LABEL_19:
        v16 = (char *)operator new(0x40uLL);
        v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((_QWORD *)v5 + 1));
        }
        else
        {
          v18 = *v5;
          *((_QWORD *)v16 + 6) = *((_QWORD *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(_QWORD *)v16 = 0;
        *((_QWORD *)v16 + 1) = 0;
        *((_QWORD *)v16 + 2) = v12;
        *v13 = v16;
        v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6)
        return a1;
    }
    v12 = (char **)v4;
    v13 = (char **)v4;
    if (v7)
    {
      v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          v12 = (char **)v14;
          v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break;
          v14 = *v12;
          v13 = v12;
          if (!*v12)
            goto LABEL_19;
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5))
          goto LABEL_25;
        v13 = v12 + 1;
        v14 = v12[1];
        if (!v14)
          goto LABEL_19;
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1CB4EBA2C(_Unwind_Exception *a1)
{
  void *v1;
  char **v2;

  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::PossessiveAdjectivePerson>>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4EBA98(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::HeGrammarSynthesizer_GenderLookupFunction::~HeGrammarSynthesizer_GenderLookupFunction(morphun::grammar::synthesis::HeGrammarSynthesizer_GenderLookupFunction *this)
{
  void *v2;
  uint64_t v3;

  *(_QWORD *)this = &off_1E865D1D8;
  v2 = (void *)*((_QWORD *)this + 22);
  if (v2)
  {
    *((_QWORD *)this + 23) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 16))(v3);
  *((_QWORD *)this + 1) = &off_1E8671C00;
}

{
  void *v2;
  uint64_t v3;

  *(_QWORD *)this = &off_1E865D1D8;
  v2 = (void *)*((_QWORD *)this + 22);
  if (v2)
  {
    *((_QWORD *)this + 23) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 16))(v3);
  *((_QWORD *)this + 1) = &off_1E8671C00;
  JUMPOUT(0x1D179D2ECLL);
}

void morphun::grammar::synthesis::HeGrammarSynthesizer_GenderLookupFunction::determine(uint64_t a1@<X0>, uint64_t a2@<X1>, std::basic_string<char16_t> *a3@<X8>)
{
  morphun::grammar::synthesis::GrammemeConstants *v5;
  void *v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  void *__p[2];
  int64_t v14;

  morphun::dialog::DictionaryLookupFunction::determine(a1, a2, __p);
  v6 = (void *)HIBYTE(v14);
  v7 = SHIBYTE(v14);
  if (v14 < 0)
    v6 = __p[1];
  if (v6)
  {
    *(_OWORD *)&a3->__r_.__value_.__l.__data_ = *(_OWORD *)__p;
    a3->__r_.__value_.__r.__words[2] = v14;
    __p[1] = 0;
    v14 = 0;
    __p[0] = 0;
  }
  else
  {
    v8 = *(unsigned __int8 *)(a2 + 23);
    v9 = (char)v8;
    if ((v8 & 0x80u) != 0)
      v8 = *(_QWORD *)(a2 + 8);
    if (v8
      && (v9 >= 0 ? (v10 = a2) : (v10 = *(_QWORD *)a2),
          (v11 = *(unsigned __int16 *)(v10 + 2 * v8 - 2), v11 == 1514) || v11 == 1492))
    {
      v12 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE(v5);
    }
    else
    {
      v12 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(v5);
    }
    if (*(char *)(v12 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(a3, *(const std::basic_string<char16_t>::value_type **)v12, *(_QWORD *)(v12 + 8));
    }
    else
    {
      *(_OWORD *)&a3->__r_.__value_.__l.__data_ = *(_OWORD *)v12;
      a3->__r_.__value_.__r.__words[2] = *(_QWORD *)(v12 + 16);
    }
    if (v7 < 0)
      operator delete(__p[0]);
  }
}

void sub_1CB4EBC94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  int v10;

  if (v10 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::PtGrammarSynthesizer_PtDisplayFunction::~PtGrammarSynthesizer_PtDisplayFunction(morphun::grammar::synthesis::PtGrammarSynthesizer_PtDisplayFunction *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E866E718;
  v2 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
  *((_QWORD *)this + 5) = &off_1E866B550;
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 14));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 11));
}

{
  morphun::grammar::synthesis::PtGrammarSynthesizer_PtDisplayFunction::~PtGrammarSynthesizer_PtDisplayFunction(this);
  JUMPOUT(0x1D179D2ECLL);
}

morphun::dialog::SemanticFeatureModel_DisplayValue *morphun::grammar::synthesis::PtGrammarSynthesizer_PtDisplayFunction::getDisplayValue(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t TheBestDisplayValue;
  morphun::dialog::SemanticFeatureModel_DisplayValue *v8;
  uint64_t v9;
  __int128 v10;
  std::basic_string<char16_t>::size_type size;
  _OWORD *v12;
  _BOOL4 hasAnyFeatures;
  std::basic_string<char16_t> *v14;
  std::basic_string<char16_t>::size_type v15;
  std::basic_string<char16_t> *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 *v20;
  __int128 *v21;
  std::basic_string<char16_t> *p_p;
  std::basic_string<char16_t>::size_type v23;
  UChar *v24;
  const UChar *v25;
  uint64_t v26;
  unint64_t v27;
  __int128 *v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  const std::basic_string<char16_t>::value_type *v32;
  std::basic_string<char16_t>::size_type v33;
  unint64_t v34;
  std::basic_string<char16_t>::value_type *v35;
  int data_low;
  std::basic_string<char16_t>::size_type v37;
  __int128 v38;
  std::basic_string<char16_t>::size_type v39;
  std::basic_string<char16_t>::size_type v40;
  std::basic_string<char16_t>::size_type v41;
  const UChar *v42;
  uint64_t v43;
  int v44;
  UChar *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _WORD *p_str;
  std::basic_string<char16_t> *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  __int128 *v57;
  unint64_t v58;
  int v59;
  int v60;
  __int128 *v61;
  __int128 v62;
  __int128 v63;
  std::basic_string<char16_t> *v64;
  uint64_t m;
  BOOL v66;
  char v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  std::basic_string<char16_t> *v71;
  uint64_t i;
  _WORD *v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  std::basic_string<char16_t> *v77;
  uint64_t k;
  int v79;
  std::basic_string<char16_t> *v80;
  std::basic_string<char16_t>::size_type v81;
  uint64_t j;
  morphun::dialog::SemanticFeatureModel_DisplayValue *v83;
  morphun::exception::NullPointerException *exception;
  __int128 v86;
  std::basic_string<char16_t> v87;
  char v88;
  uint64_t v89;
  _QWORD v90[3];
  std::basic_string<char16_t> v91;
  std::basic_string<char16_t> v92;
  __int128 *v93;
  __int128 *v94;
  std::basic_string<char16_t> v95;
  char v96;
  __int128 v97;
  std::basic_string<char16_t>::size_type v98[2];
  unint64_t v99;
  char v100;
  std::basic_string<char16_t> __p;
  unsigned __int8 v102;
  std::basic_string<char16_t> v103;
  __int128 v104;
  uint64_t v105;
  std::basic_string<char16_t> __str;
  std::basic_string<char16_t> v107;
  std::basic_string<char16_t> v108;
  __int128 v109;

  *(_QWORD *)&v109 = *MEMORY[0x1E0C80C00];
  TheBestDisplayValue = morphun::grammar::synthesis::GrammarSynthesizerUtil::getTheBestDisplayValue(*(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), a3);
  v8 = (morphun::dialog::SemanticFeatureModel_DisplayValue *)TheBestDisplayValue;
  if (!TheBestDisplayValue)
    return v8;
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)TheBestDisplayValue + 24))(TheBestDisplayValue);
  if (*(char *)(v9 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v91, *(const std::basic_string<char16_t>::value_type **)v9, *(_QWORD *)(v9 + 8));
  }
  else
  {
    v10 = *(_OWORD *)v9;
    v91.__r_.__value_.__r.__words[2] = *(_QWORD *)(v9 + 16);
    *(_OWORD *)&v91.__r_.__value_.__l.__data_ = v10;
  }
  size = HIBYTE(v91.__r_.__value_.__r.__words[2]);
  if ((v91.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = v91.__r_.__value_.__l.__size_;
  if (!size)
  {
    v8 = 0;
    if ((*((_BYTE *)&v91.__r_.__value_.__s + 23) & 0x80) != 0)
      goto LABEL_218;
    return v8;
  }
  morphun::grammar::synthesis::GrammarSynthesizerUtil::mergeConstraintsWithDisplayValue(v90, (uint64_t)v8, a3);
  v86 = *(_OWORD *)(a1 + 8);
  v12 = operator new(0x10uLL);
  *v12 = v86;
  hasAnyFeatures = morphun::grammar::synthesis::GrammarSynthesizerUtil::hasAnyFeatures(a3, (uint64_t)v12, (uint64_t)(v12 + 1));
  operator delete(v12);
  if (!hasAnyFeatures)
    goto LABEL_216;
  v89 = 0;
  if ((v91.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v14 = &v91;
  else
    v14 = (std::basic_string<char16_t> *)v91.__r_.__value_.__r.__words[0];
  if ((v91.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v15 = HIBYTE(v91.__r_.__value_.__r.__words[2]);
  else
    v15 = v91.__r_.__value_.__l.__size_;
  if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(_QWORD *)(a1 + 32), (uint64_t)&v89, (const UChar *)v14, v15))
  {
    v16 = (v91.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? &v91
        : (std::basic_string<char16_t> *)v91.__r_.__value_.__r.__words[0];
    v17 = (v91.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? HIBYTE(v91.__r_.__value_.__r.__words[2])
        : v91.__r_.__value_.__l.__size_;
    morphun::grammar::synthesis::PtGrammarSynthesizer_PtDisplayFunction::inflectWord((uint64_t)&__str, (uint64_t *)a1, v16, v17, a3, 0);
    if (LOBYTE(v107.__r_.__value_.__l.__data_))
    {
      std::basic_string<char16_t>::operator=(&v91, &__str);
      if (LOBYTE(v107.__r_.__value_.__l.__data_) && SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__str.__r_.__value_.__l.__data_);
      goto LABEL_216;
    }
  }
  v18 = *(_QWORD *)(a1 + 128);
  if (!v18)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  v19 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(_QWORD *)v18 + 24))(v18, &v91);
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getSignificantWords((morphun::grammar::synthesis::GrammarSynthesizerUtil *)&v93, (const morphun::TokenChain *)v19);
  v20 = v93;
  v21 = v94;
  switch(0xAAAAAAAAAAAAAAABLL * (((char *)v94 - (char *)v93) >> 3))
  {
    case 0uLL:
      memset(&v95, 0, sizeof(v95));
      memset(&__str, 0, sizeof(__str));
      v96 = 1;
      __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&__str;
      p_p = &__p;
      goto LABEL_87;
    case 1uLL:
      if (*((char *)v93 + 23) < 0)
      {
        v28 = *(__int128 **)v93;
        v27 = *((_QWORD *)v93 + 1);
      }
      else
      {
        v27 = *((unsigned __int8 *)v93 + 23);
        v28 = v93;
      }
      morphun::grammar::synthesis::PtGrammarSynthesizer_PtDisplayFunction::inflectWord((uint64_t)&__str, (uint64_t *)a1, v28, v27, a3, a4);
      if (!LOBYTE(v107.__r_.__value_.__l.__data_))
        goto LABEL_194;
      v44 = SHIBYTE(__str.__r_.__value_.__r.__words[2]);
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
        std::basic_string<char16_t>::__init_copy_ctor_external(&v103, __str.__r_.__value_.__l.__data_, __str.__r_.__value_.__l.__size_);
      else
        v103 = __str;
      memset(&__p, 0, sizeof(__p));
      *(_QWORD *)&v97 = &__p;
      BYTE8(v97) = 0;
      __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x18uLL);
      __p.__r_.__value_.__l.__size_ = __p.__r_.__value_.__r.__words[0];
      __p.__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[0] + 24;
      v52 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&__p.__r_.__value_.__r.__words[2], (__int128 *)&v103, &v104, (std::basic_string<char16_t> *)__p.__r_.__value_.__l.__data_);
      v95.__r_.__value_.__r.__words[0] = __p.__r_.__value_.__r.__words[0];
      v95.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)v52;
      v95.__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
      memset(&__p, 0, sizeof(__p));
      v96 = 1;
      *(_QWORD *)&v97 = &__p;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v97);
      if (SHIBYTE(v103.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v103.__r_.__value_.__l.__data_);
      if ((v44 & 0x80000000) == 0)
        goto LABEL_208;
      v53 = (void *)__str.__r_.__value_.__r.__words[0];
      goto LABEL_207;
    case 2uLL:
      *((_QWORD *)&v104 + 1) = 0;
      v105 = 0;
      if (v94 == v93)
        std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
      if (*((char *)v93 + 23) < 0)
      {
        v24 = *(UChar **)v93;
        v23 = *((_QWORD *)v93 + 1);
      }
      else
      {
        v23 = *((unsigned __int8 *)v93 + 23);
        v24 = (UChar *)v93;
      }
      if (*((char *)v93 + 47) < 0)
      {
        v45 = (UChar *)*((_QWORD *)v93 + 3);
        v46 = *((_QWORD *)v93 + 4);
      }
      else
      {
        v45 = (UChar *)v93 + 12;
        v46 = *((unsigned __int8 *)v93 + 47);
      }
      morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(_QWORD *)(a1 + 32), (uint64_t)&v104 + 8, v24, v23);
      morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(_QWORD *)(a1 + 32), (uint64_t)&v105, v45, v46);
      if (!*((_QWORD *)&v104 + 1) || !v105)
      {
        if (a4)
          goto LABEL_193;
        goto LABEL_194;
      }
      v47 = *(_QWORD *)(a1 + 152);
      v48 = v47 & *((_QWORD *)&v104 + 1);
      if ((v47 & *((_QWORD *)&v104 + 1)) != 0)
      {
        v49 = *(_QWORD *)(a1 + 176);
        if ((v49 & *((_QWORD *)&v104 + 1)) == 0 && (v49 & v105) != 0)
          goto LABEL_193;
      }
      v50 = v47 & v105;
      if ((*(_QWORD *)(a1 + 168) & *((_QWORD *)&v104 + 1)) != 0 && v50)
      {
        morphun::grammar::synthesis::PtGrammarSynthesizer_PtDisplayFunction::inflectWord((uint64_t)&__p, (uint64_t *)a1, v45, v46, a3, a4);
        if (v102)
        {
          if (v23 > 0x7FFFFFFFFFFFFFF7)
            std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
          if (v23 >= 0xB)
          {
            v69 = (v23 & 0xFFFFFFFFFFFFFFFCLL) + 4;
            if ((v23 | 3) != 0xB)
              v69 = v23 | 3;
            p_str = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v69 + 1);
            __str.__r_.__value_.__l.__size_ = v23;
            __str.__r_.__value_.__r.__words[2] = v70 | 0x8000000000000000;
            __str.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)p_str;
          }
          else
          {
            *((_BYTE *)&__str.__r_.__value_.__s + 23) = v23;
            p_str = &__str;
            if (!v23)
            {
LABEL_159:
              p_str[v23] = 0;
              v56 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                std::basic_string<char16_t>::__init_copy_ctor_external(&v107, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
              else
                v107 = __p;
              memset(&v103, 0, sizeof(v103));
              *(_QWORD *)&v97 = &v103;
              BYTE8(v97) = 0;
              v103.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x30uLL);
              v103.__r_.__value_.__l.__size_ = v103.__r_.__value_.__r.__words[0];
              v103.__r_.__value_.__r.__words[2] = v103.__r_.__value_.__r.__words[0] + 48;
              v71 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v103.__r_.__value_.__r.__words[2], (__int128 *)&__str, (__int128 *)&v108, (std::basic_string<char16_t> *)v103.__r_.__value_.__l.__data_);
              v95.__r_.__value_.__r.__words[0] = v103.__r_.__value_.__r.__words[0];
              v95.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)v71;
              v95.__r_.__value_.__r.__words[2] = v103.__r_.__value_.__r.__words[2];
              memset(&v103, 0, sizeof(v103));
              v96 = 1;
              *(_QWORD *)&v97 = &v103;
              std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v97);
              for (i = 0; i != -6; i -= 3)
              {
                if (SHIBYTE(v107.__r_.__value_.__r.__words[i + 2]) < 0)
                  operator delete(*(void **)((char *)&__str + i * 8 + 24));
              }
              goto LABEL_205;
            }
          }
          memmove(p_str, v24, 2 * v23);
          goto LABEL_159;
        }
LABEL_192:
        if (a4)
        {
LABEL_193:
          memset(&v95, 0, sizeof(v95));
          std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(&v95, v93, v94, 0xAAAAAAAAAAAAAAABLL * (((char *)v94 - (char *)v93) >> 3));
          v96 = 1;
          goto LABEL_208;
        }
LABEL_194:
        LOBYTE(v95.__r_.__value_.__l.__data_) = 0;
        v96 = 0;
        goto LABEL_208;
      }
      v54 = *(_QWORD *)(a1 + 176);
      v55 = *(_QWORD *)(a1 + 160) & *((_QWORD *)&v104 + 1);
      if ((v54 & *((_QWORD *)&v104 + 1)) == 0 || v55)
      {
        if (v48)
          v66 = v50 == 0;
        else
          v66 = 1;
        v67 = v66;
        v68 = (v54 & v105) == 0 || v55 == 0;
        if (v68 && (v67 & 1) != 0)
          goto LABEL_192;
      }
      else
      {
        if (((v54 | v47) & v105) != 0)
        {
          morphun::grammar::synthesis::PtGrammarSynthesizer_PtDisplayFunction::inflectWord((uint64_t)&__p, (uint64_t *)a1, v24, v23, a3, a4);
          morphun::grammar::synthesis::PtGrammarSynthesizer_PtDisplayFunction::inflectWord((uint64_t)&v103, (uint64_t *)a1, v45, v46, a3, a4);
          if (v102)
          {
            if ((_BYTE)v104)
            {
              v56 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                std::basic_string<char16_t>::__init_copy_ctor_external(&__str, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
              else
                __str = __p;
              v79 = SHIBYTE(v103.__r_.__value_.__r.__words[2]);
              if (SHIBYTE(v103.__r_.__value_.__r.__words[2]) < 0)
                std::basic_string<char16_t>::__init_copy_ctor_external(&v107, v103.__r_.__value_.__l.__data_, v103.__r_.__value_.__l.__size_);
              else
                v107 = v103;
              v97 = 0uLL;
              v98[0] = 0;
              v99 = (unint64_t)&v97;
              v100 = 0;
              *(_QWORD *)&v97 = operator new(0x30uLL);
              *((_QWORD *)&v97 + 1) = v97;
              v98[0] = v97 + 48;
              v80 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)v98, (__int128 *)&__str, (__int128 *)&v108, (std::basic_string<char16_t> *)v97);
              v81 = v98[0];
              *((_QWORD *)&v97 + 1) = v80;
              v98[0] = 0;
              *(_OWORD *)&v95.__r_.__value_.__l.__data_ = v97;
              v95.__r_.__value_.__r.__words[2] = v81;
              v97 = 0uLL;
              v96 = 1;
              v99 = (unint64_t)&v97;
              std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v99);
              for (j = 0; j != -6; j -= 3)
              {
                if (SHIBYTE(v107.__r_.__value_.__r.__words[j + 2]) < 0)
                  operator delete(*(void **)((char *)&__str + j * 8 + 24));
              }
              if (v79 < 0)
                operator delete(v103.__r_.__value_.__l.__data_);
              goto LABEL_205;
            }
            if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              goto LABEL_192;
            v74 = (void *)__p.__r_.__value_.__r.__words[0];
          }
          else
          {
            if (!(_BYTE)v104 || (SHIBYTE(v103.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              goto LABEL_192;
            v74 = (void *)v103.__r_.__value_.__r.__words[0];
          }
          operator delete(v74);
          goto LABEL_192;
        }
        if (!v48 || !v50)
          goto LABEL_192;
      }
      morphun::grammar::synthesis::PtGrammarSynthesizer_PtDisplayFunction::inflectWord((uint64_t)&__p, (uint64_t *)a1, v45, v46, a3, a4);
      if (!v102)
        goto LABEL_192;
      if (v23 > 0x7FFFFFFFFFFFFFF7)
        std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
      if (v23 >= 0xB)
      {
        v75 = (v23 & 0xFFFFFFFFFFFFFFFCLL) + 4;
        if ((v23 | 3) != 0xB)
          v75 = v23 | 3;
        v73 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v75 + 1);
        __str.__r_.__value_.__l.__size_ = v23;
        __str.__r_.__value_.__r.__words[2] = v76 | 0x8000000000000000;
        __str.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v73;
      }
      else
      {
        *((_BYTE *)&__str.__r_.__value_.__s + 23) = v23;
        v73 = &__str;
        if (!v23)
        {
LABEL_181:
          v73[v23] = 0;
          v56 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            std::basic_string<char16_t>::__init_copy_ctor_external(&v107, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
          else
            v107 = __p;
          memset(&v103, 0, sizeof(v103));
          *(_QWORD *)&v97 = &v103;
          BYTE8(v97) = 0;
          v103.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x30uLL);
          v103.__r_.__value_.__l.__size_ = v103.__r_.__value_.__r.__words[0];
          v103.__r_.__value_.__r.__words[2] = v103.__r_.__value_.__r.__words[0] + 48;
          v77 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v103.__r_.__value_.__r.__words[2], (__int128 *)&__str, (__int128 *)&v108, (std::basic_string<char16_t> *)v103.__r_.__value_.__l.__data_);
          v95.__r_.__value_.__r.__words[0] = v103.__r_.__value_.__r.__words[0];
          v95.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)v77;
          v95.__r_.__value_.__r.__words[2] = v103.__r_.__value_.__r.__words[2];
          memset(&v103, 0, sizeof(v103));
          v96 = 1;
          *(_QWORD *)&v97 = &v103;
          std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v97);
          for (k = 0; k != -6; k -= 3)
          {
            if (SHIBYTE(v107.__r_.__value_.__r.__words[k + 2]) < 0)
              operator delete(*(void **)((char *)&__str + k * 8 + 24));
          }
LABEL_205:
          if (v56 < 0)
          {
LABEL_206:
            v53 = (void *)__p.__r_.__value_.__r.__words[0];
LABEL_207:
            operator delete(v53);
          }
          goto LABEL_208;
        }
      }
      memmove(v73, v24, 2 * v23);
      goto LABEL_181;
    case 3uLL:
      v99 = 0;
      if (*((char *)v93 + 47) < 0)
      {
        v25 = (const UChar *)*((_QWORD *)v93 + 3);
        v26 = *((_QWORD *)v93 + 4);
      }
      else
      {
        v25 = (const UChar *)v93 + 12;
        v26 = *((unsigned __int8 *)v93 + 47);
      }
      if (!morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(_QWORD *)(a1 + 32), (uint64_t)&v99, v25, v26)|| (*(_QWORD *)(a1 + 200) & v99) == 0)
      {
        goto LABEL_193;
      }
      *((_QWORD *)&v104 + 1) = 0;
      v42 = (const UChar *)v93;
      if (*((char *)v93 + 23) < 0)
      {
        v42 = *(const UChar **)v93;
        v43 = *((_QWORD *)v93 + 1);
      }
      else
      {
        v43 = *((unsigned __int8 *)v93 + 23);
      }
      morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(_QWORD *)(a1 + 32), (uint64_t)&v104 + 8, v42, v43);
      v57 = v93;
      if (*((char *)v93 + 23) < 0)
      {
        v57 = *(__int128 **)v93;
        v58 = *((_QWORD *)v93 + 1);
      }
      else
      {
        v58 = *((unsigned __int8 *)v93 + 23);
      }
      morphun::grammar::synthesis::PtGrammarSynthesizer_PtDisplayFunction::inflectWord((uint64_t)&__p, (uint64_t *)a1, v57, v58, a3, a4);
      v59 = v102;
      if (!v102)
        goto LABEL_193;
      v60 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        std::basic_string<char16_t>::__init_copy_ctor_external(&__str, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
      else
        __str = __p;
      v61 = v93;
      if (*((char *)v93 + 47) < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external(&v107, *((const std::basic_string<char16_t>::value_type **)v93 + 3), *((_QWORD *)v93 + 4));
        v61 = v93;
      }
      else
      {
        v62 = *(__int128 *)((char *)v93 + 24);
        v107.__r_.__value_.__r.__words[2] = *((_QWORD *)v93 + 5);
        *(_OWORD *)&v107.__r_.__value_.__l.__data_ = v62;
      }
      if (*((char *)v61 + 71) < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external(&v108, *((const std::basic_string<char16_t>::value_type **)v61 + 6), *((_QWORD *)v61 + 7));
      }
      else
      {
        v63 = v61[3];
        v108.__r_.__value_.__r.__words[2] = *((_QWORD *)v61 + 8);
        *(_OWORD *)&v108.__r_.__value_.__l.__data_ = v63;
      }
      memset(&v103, 0, sizeof(v103));
      *(_QWORD *)&v97 = &v103;
      BYTE8(v97) = 0;
      v103.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x48uLL);
      v103.__r_.__value_.__l.__size_ = v103.__r_.__value_.__r.__words[0];
      v103.__r_.__value_.__r.__words[2] = v103.__r_.__value_.__r.__words[0] + 72;
      v64 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v103.__r_.__value_.__r.__words[2], (__int128 *)&__str, &v109, (std::basic_string<char16_t> *)v103.__r_.__value_.__l.__data_);
      v95.__r_.__value_.__r.__words[0] = v103.__r_.__value_.__r.__words[0];
      v95.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)v64;
      v95.__r_.__value_.__r.__words[2] = v103.__r_.__value_.__r.__words[2];
      memset(&v103, 0, sizeof(v103));
      v96 = 1;
      *(_QWORD *)&v97 = &v103;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v97);
      for (m = 0; m != -9; m -= 3)
      {
        if (SHIBYTE(v108.__r_.__value_.__r.__words[m + 2]) < 0)
          operator delete(*(void **)((char *)&v108.__r_.__value_.__l.__data_ + m * 8));
      }
      if (!v59 || (v60 & 0x80000000) == 0)
        goto LABEL_208;
      goto LABEL_206;
    default:
      v29 = 0uLL;
      memset(&__p, 0, sizeof(__p));
      if (v93 == v94)
      {
        v41 = 0;
        goto LABEL_85;
      }
      v30 = 0;
      while (2)
      {
        v103.__r_.__value_.__r.__words[0] = 0;
        if (*((char *)v20 + 23) < 0)
        {
          v32 = *(const std::basic_string<char16_t>::value_type **)v20;
          v31 = *((_QWORD *)v20 + 1);
        }
        else
        {
          v31 = *((unsigned __int8 *)v20 + 23);
          v32 = (const std::basic_string<char16_t>::value_type *)v20;
        }
        morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(_QWORD *)(a1 + 32), (uint64_t)&v103, (const UChar *)v32, v31);
        if ((*(_QWORD *)(a1 + 176) & v103.__r_.__value_.__r.__words[0]) != 0
          && (*(_QWORD *)(a1 + 152) & v103.__r_.__value_.__r.__words[0]) == 0)
        {
          ++v30;
        }
        if (v30 >= 2)
        {
          v33 = __p.__r_.__value_.__l.__size_;
          if (__p.__r_.__value_.__l.__size_ < __p.__r_.__value_.__r.__words[2])
          {
            if (*((char *)v20 + 23) < 0)
            {
LABEL_49:
              std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)__p.__r_.__value_.__l.__size_, *(const std::basic_string<char16_t>::value_type **)v20, *((_QWORD *)v20 + 1));
LABEL_62:
              v39 = v33 + 24;
LABEL_65:
              __p.__r_.__value_.__l.__size_ = v39;
              goto LABEL_66;
            }
LABEL_61:
            v38 = *v20;
            *(_QWORD *)(v33 + 16) = *((_QWORD *)v20 + 2);
            *(_OWORD *)v33 = v38;
            goto LABEL_62;
          }
          goto LABEL_64;
        }
        if (*((char *)v20 + 23) < 0)
        {
          v35 = *(std::basic_string<char16_t>::value_type **)v20;
          v34 = *((_QWORD *)v20 + 1);
        }
        else
        {
          v34 = *((unsigned __int8 *)v20 + 23);
          v35 = (std::basic_string<char16_t>::value_type *)v20;
        }
        morphun::grammar::synthesis::PtGrammarSynthesizer_PtDisplayFunction::inflectWord((uint64_t)&__str, (uint64_t *)a1, v35, v34, a3, a4);
        data_low = LOBYTE(v107.__r_.__value_.__l.__data_);
        if (LOBYTE(v107.__r_.__value_.__l.__data_))
        {
          v37 = __p.__r_.__value_.__l.__size_;
          if (__p.__r_.__value_.__l.__size_ >= __p.__r_.__value_.__r.__words[2])
          {
            v40 = std::vector<std::basic_string<char16_t>>::__push_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)&__p, (__int128 *)&__str);
          }
          else
          {
            if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
            {
              std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)__p.__r_.__value_.__l.__size_, __str.__r_.__value_.__l.__data_, __str.__r_.__value_.__l.__size_);
            }
            else
            {
              *(_OWORD *)__p.__r_.__value_.__l.__size_ = *(_OWORD *)&__str.__r_.__value_.__l.__data_;
              *(_QWORD *)(v37 + 16) = *((_QWORD *)&__str.__r_.__value_.__l + 2);
            }
            v40 = v37 + 24;
          }
          __p.__r_.__value_.__l.__size_ = v40;
          if (data_low && SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__str.__r_.__value_.__l.__data_);
LABEL_66:
          v20 = (__int128 *)((char *)v20 + 24);
          if (v20 == v21)
          {
            v29 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
            v41 = __p.__r_.__value_.__r.__words[2];
LABEL_85:
            *(_OWORD *)&v95.__r_.__value_.__l.__data_ = v29;
            v95.__r_.__value_.__r.__words[2] = v41;
            memset(&__p, 0, sizeof(__p));
            v96 = 1;
            goto LABEL_86;
          }
          continue;
        }
        break;
      }
      if (a4)
      {
        v33 = __p.__r_.__value_.__l.__size_;
        if (__p.__r_.__value_.__l.__size_ < __p.__r_.__value_.__r.__words[2])
        {
          if (*((char *)v20 + 23) < 0)
            goto LABEL_49;
          goto LABEL_61;
        }
LABEL_64:
        v39 = std::vector<std::basic_string<char16_t>>::__push_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)&__p, v20);
        goto LABEL_65;
      }
      LOBYTE(v95.__r_.__value_.__l.__data_) = 0;
      v96 = 0;
LABEL_86:
      __str.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&__p;
      p_p = &__str;
LABEL_87:
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)p_p);
LABEL_208:
      __str.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v93;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__str);
      if (v96)
      {
        memset(&v92, 0, sizeof(v92));
        std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(&v92, (__int128 *)v95.__r_.__value_.__l.__data_, (__int128 *)v95.__r_.__value_.__l.__size_, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v95.__r_.__value_.__l.__size_ - v95.__r_.__value_.__r.__words[0]) >> 3));
        morphun::grammar::synthesis::GrammarSynthesizerUtil::getStringFromInflectedSignificantWords(&__str, *(const morphun::Token **)(v19 + 8), *(_QWORD *)(v19 + 16), &v92);
        v87 = __str;
        memset(&__str, 0, sizeof(__str));
        v88 = 1;
        __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v92;
        std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
        if (v96)
        {
          __str.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v95;
          std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__str);
        }
        std::basic_string<char16_t>::operator=(&v91, &v87);
        if (v88 && SHIBYTE(v87.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v87.__r_.__value_.__l.__data_);
        goto LABEL_215;
      }
      LOBYTE(v87.__r_.__value_.__l.__data_) = 0;
      v88 = 0;
      if ((a4 & 1) != 0)
      {
LABEL_215:
        (*(void (**)(uint64_t))(*(_QWORD *)v19 + 16))(v19);
LABEL_216:
        v83 = (morphun::dialog::SemanticFeatureModel_DisplayValue *)operator new();
        morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue((uint64_t)v83, (__int128 *)&v91, (uint64_t)v90);
        v8 = morphun::dialog::DefinitenessDisplayFunction::addDefiniteness((uint64_t *)(a1 + 40), v83, a3);
        goto LABEL_217;
      }
      (*(void (**)(uint64_t))(*(_QWORD *)v19 + 16))(v19);
      v8 = 0;
LABEL_217:
      std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy((void **)v90[1]);
      if ((*((_BYTE *)&v91.__r_.__value_.__s + 23) & 0x80) != 0)
LABEL_218:
        operator delete(v91.__r_.__value_.__l.__data_);
      return v8;
  }
}

void sub_1CB4ECBB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17, uint64_t a18, uint64_t a19, void **a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,char a38,char *a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,void *__p,uint64_t a46,int a47,__int16 a48,char a49,char a50,char a51)
{
  uint64_t v51;
  char v52;
  uint64_t v53;

  if (*(char *)(v53 - 137) < 0)
    operator delete(*(void **)(v53 - 160));
  operator delete(*(void **)(v53 - 208));
  if (v52 < 0)
    operator delete(__p);
  a39 = &a32;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a39);
  if (v51)
    (*(void (**)(uint64_t))(*(_QWORD *)v51 + 16))(v51);
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(a20);
  if (a27 < 0)
    operator delete(a22);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::PtGrammarSynthesizer_PtDisplayFunction::inflectWord(uint64_t a1, uint64_t *a2, void *a3, unint64_t a4, uint64_t a5, char a6)
{
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  int v15;
  std::basic_string<char16_t>::size_type v16;
  morphun::grammar::synthesis::GrammemeConstants *v17;
  uint64_t v18;
  std::basic_string<char16_t>::size_type size;
  uint64_t v20;
  int v21;
  unsigned __int16 *v22;
  std::basic_string<char16_t> *v23;
  std::basic_string<char16_t>::size_type v24;
  int v25;
  int v26;
  int v27;
  int v28;
  BOOL v30;
  _BOOL4 v31;
  std::basic_string<char16_t> *p_dst;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  std::basic_string<char16_t> *v36;
  std::basic_string<char16_t>::size_type v37;
  std::allocator<char16_t> *v38;
  std::basic_string<char16_t>::size_type v39;
  std::basic_string<char16_t>::size_type v40;
  std::basic_string<char16_t>::size_type v41;
  uint64_t v42;
  std::basic_string<char16_t> *v43;
  char *v44;
  int v45;
  int v46;
  std::basic_string<char16_t> *v48;
  std::basic_string<char16_t> *v49;
  std::basic_string<char16_t>::size_type v50;
  int v51;
  std::basic_string<char16_t> *v52;
  std::basic_string<char16_t> *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  std::basic_string<char16_t>::size_type v57;
  const std::basic_string<char16_t>::value_type *v58;
  std::basic_string<char16_t> *v59;
  std::basic_string<char16_t>::size_type v60;
  std::basic_string<char16_t> *v61;
  std::basic_string<char16_t>::size_type v62;
  uint64_t v63;
  std::basic_string<char16_t> *v64;
  char *v65;
  int v66;
  int v67;
  uint64_t v69;
  std::basic_string<char16_t> *v70;
  char *v71;
  int v72;
  int v73;
  uint64_t v75;
  std::basic_string<char16_t> *v76;
  char *v77;
  int v78;
  int v79;
  uint64_t v81;
  std::basic_string<char16_t> *v82;
  char *v83;
  int v84;
  int v85;
  std::basic_string<char16_t> *v87;
  uint64_t v88;
  std::basic_string<char16_t> *v89;
  char *v90;
  int v91;
  int v92;
  uint64_t v94;
  std::basic_string<char16_t> *v95;
  char *v96;
  int v97;
  int v98;
  int v100;
  std::basic_string<char16_t> __dst;
  std::basic_string<char16_t> v102;
  void *__p[2];
  std::basic_string<char16_t>::size_type v104;
  unsigned __int8 v105;
  std::basic_string<char16_t> v106;
  std::basic_string<char16_t> v107;
  std::basic_string<char16_t> v108;
  uint64_t v109;

  v12 = (uint64_t *)operator new(0x10uLL);
  *(_OWORD *)v12 = *(_OWORD *)(a2 + 1);
  morphun::grammar::synthesis::GrammarSynthesizerUtil::convertToStringConstraints((uint64_t)&v107, a5, v12, v12 + 2);
  operator delete(v12);
  v13 = a2[3];
  v14 = (uint64_t *)operator new(8uLL);
  *v14 = v13;
  morphun::grammar::synthesis::GrammarSynthesizerUtil::convertToStringConstraints((uint64_t)&v106, a5, v14, v14 + 1);
  operator delete(v14);
  morphun::dialog::DictionaryLookupInflector::inflect((uint64_t)__p, (uint64_t)(a2 + 27), a3, a4, &v107, &v106);
  v15 = v105;
  if (!v105)
  {
    if ((a6 & 1) == 0)
    {
      *(_BYTE *)a1 = 0;
      *(_BYTE *)(a1 + 24) = 0;
      goto LABEL_31;
    }
    morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v108, a5, a2[1]);
    v18 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(v17);
    if ((v108.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v108.__r_.__value_.__r.__words[2]);
    else
      size = v108.__r_.__value_.__l.__size_;
    v20 = *(unsigned __int8 *)(v18 + 23);
    v21 = (char)v20;
    if ((v20 & 0x80u) != 0)
      v20 = *(_QWORD *)(v18 + 8);
    if (size == v20)
    {
      if (!size)
      {
        v31 = 1;
        if ((SHIBYTE(v108.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_35:
          if (v31)
          {
            if (a4 > 0x7FFFFFFFFFFFFFF7)
              std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
            if (a4 >= 0xB)
            {
              v34 = (a4 & 0xFFFFFFFFFFFFFFFCLL) + 4;
              if ((a4 | 3) != 0xB)
                v34 = a4 | 3;
              p_dst = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v34 + 1);
              __dst.__r_.__value_.__l.__size_ = a4;
              __dst.__r_.__value_.__r.__words[2] = v35 | 0x8000000000000000;
              __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)p_dst;
            }
            else
            {
              *((_BYTE *)&__dst.__r_.__value_.__s + 23) = a4;
              p_dst = &__dst;
              if (!a4)
              {
LABEL_48:
                p_dst->__r_.__value_.__s.__data_[a4] = 0;
                v109 = 0;
                if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                  v36 = &__dst;
                else
                  v36 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                  v37 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
                else
                  v37 = __dst.__r_.__value_.__l.__size_;
                morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a2[4], (uint64_t)&v109, (const UChar *)v36, v37);
                if (v109 && (a2[26] & v109) == 0)
                {
                  if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                  {
                    v57 = __dst.__r_.__value_.__r.__words[2];
                    *(_OWORD *)a1 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
                    *(_QWORD *)(a1 + 16) = v57;
                    memset(&v102, 0, sizeof(v102));
                    goto LABEL_26;
                  }
                  v39 = __dst.__r_.__value_.__l.__size_;
                  v58 = (const std::basic_string<char16_t>::value_type *)__dst.__r_.__value_.__r.__words[0];
                  goto LABEL_92;
                }
                v39 = __dst.__r_.__value_.__l.__size_;
                if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                  v40 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
                else
                  v40 = __dst.__r_.__value_.__l.__size_;
                v41 = v40 - 2;
                if (v40 >= 2)
                {
                  v42 = 0;
                  v43 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                    v43 = &__dst;
                  v44 = (char *)v43 + 2 * v41;
                  do
                  {
                    v45 = *(unsigned __int16 *)&v44[v42 * 2];
                    v46 = (unsigned __int16)word_1CB73E604[v42];
                  }
                  while (v46 == v45 && v42++ != 1);
                  if (v46 == v45)
                  {
                    v48 = std::basic_string<char16_t>::basic_string(&v108, &__dst, 0, v41, v38);
                    std::basic_string<char16_t>::append(v48, word_1CB73E5FA, 4uLL);
LABEL_137:
                    *(_OWORD *)&v102.__r_.__value_.__l.__data_ = *(_OWORD *)&v108.__r_.__value_.__l.__data_;
                    v62 = v108.__r_.__value_.__r.__words[2];
                    goto LABEL_138;
                  }
                }
                if (!v40)
                {
LABEL_162:
                  std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v102, (const void **)&__dst.__r_.__value_.__l.__data_, "s");
LABEL_163:
                  v100 = SHIBYTE(__dst.__r_.__value_.__r.__words[2]);
                  *(std::basic_string<char16_t> *)a1 = v102;
                  memset(&v102, 0, sizeof(v102));
                  *(_BYTE *)(a1 + 24) = 1;
                  if (v100 < 0)
                    operator delete(__dst.__r_.__value_.__l.__data_);
                  goto LABEL_27;
                }
                v49 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                  v49 = &__dst;
                v50 = v40 - 1;
                v51 = (unsigned __int16)v49->__r_.__value_.__s.__data_[v40 - 1];
                if ((v51 - 114) < 2)
                  goto LABEL_76;
                if (v51 == 109)
                {
                  v59 = std::basic_string<char16_t>::basic_string(&v108, &__dst, 0, v50, v38);
                  std::basic_string<char16_t>::append(v59, L"ns", 2uLL);
                  goto LABEL_137;
                }
                if (v51 == 122)
                {
LABEL_76:
                  v52 = &v102;
                  std::basic_string<char16_t>::basic_string[abi:ne180100]((uint64_t)&v102, v40 + 2);
                  if ((v102.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                    v52 = (std::basic_string<char16_t> *)v102.__r_.__value_.__r.__words[0];
                  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                    v53 = &__dst;
                  else
                    v53 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                  memmove(v52, v53, 2 * v40);
                  v54 = (char *)v52 + 2 * v40;
                  *(_DWORD *)v54 = 7536741;
                  *((_WORD *)v54 + 2) = 0;
                  goto LABEL_163;
                }
                v60 = v40 - 2;
                if (v40 < 2)
                {
LABEL_95:
                  v58 = (const std::basic_string<char16_t>::value_type *)__dst.__r_.__value_.__r.__words[0];
                  v61 = &__dst;
                  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                    v61 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                  if (v61->__r_.__value_.__s.__data_[v40 - 1] == 120)
                  {
                    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                    {
                      *(_OWORD *)&v102.__r_.__value_.__l.__data_ = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
                      v62 = __dst.__r_.__value_.__r.__words[2];
LABEL_138:
                      v102.__r_.__value_.__r.__words[2] = v62;
                      goto LABEL_163;
                    }
LABEL_92:
                    std::basic_string<char16_t>::__init_copy_ctor_external(&v102, v58, v39);
                    goto LABEL_163;
                  }
                  goto LABEL_162;
                }
                v63 = 0;
                v64 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                  v64 = &__dst;
                v65 = (char *)v64 + 2 * v60;
                do
                {
                  v66 = *(unsigned __int16 *)&v65[v63 * 2];
                  v67 = (unsigned __int16)aAl[v63];
                }
                while (v67 == v66 && v63++ != 1);
                if (v67 == v66)
                  goto LABEL_136;
                v69 = 0;
                v70 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                  v70 = &__dst;
                v71 = (char *)v70 + 2 * v60;
                do
                {
                  v72 = *(unsigned __int16 *)&v71[v69 * 2];
                  v73 = (unsigned __int16)aEl_0[v69];
                }
                while (v73 == v72 && v69++ != 1);
                if (v73 == v72)
                  goto LABEL_136;
                v75 = 0;
                v76 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                  v76 = &__dst;
                v77 = (char *)v76 + 2 * v60;
                do
                {
                  v78 = *(unsigned __int16 *)&v77[v75 * 2];
                  v79 = (unsigned __int16)aOl[v75];
                }
                while (v79 == v78 && v75++ != 1);
                if (v79 == v78)
                  goto LABEL_136;
                v81 = 0;
                v82 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                  v82 = &__dst;
                v83 = (char *)v82 + 2 * v60;
                do
                {
                  v84 = *(unsigned __int16 *)&v83[v81 * 2];
                  v85 = (unsigned __int16)word_1CB73E5D2[v81];
                }
                while (v85 == v84 && v81++ != 1);
                if (v85 == v84)
                {
LABEL_136:
                  v87 = std::basic_string<char16_t>::basic_string(&v108, &__dst, 0, v50, v38);
                  std::basic_string<char16_t>::append(v87, L"is", 2uLL);
                  goto LABEL_137;
                }
                v88 = 0;
                v89 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                  v89 = &__dst;
                v90 = (char *)v89 + 2 * v60;
                do
                {
                  v91 = *(unsigned __int16 *)&v90[v88 * 2];
                  v92 = (unsigned __int16)word_1CB73E58A[v88];
                }
                while (v92 == v91 && v88++ != 1);
                if (v92 == v91)
                {
                  std::basic_string<char16_t>::basic_string(&v108, &__dst, 0, v40 - 2, v38);
                  std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v102, &v108, word_1CB73E598);
                }
                else
                {
                  v94 = 0;
                  v95 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                    v95 = &__dst;
                  v96 = (char *)v95 + 2 * v60;
                  do
                  {
                    v97 = *(unsigned __int16 *)&v96[v94 * 2];
                    v98 = (unsigned __int16)word_1CB73AF56[v94];
                  }
                  while (v98 == v97 && v94++ != 1);
                  if (v98 != v97)
                    goto LABEL_95;
                  std::basic_string<char16_t>::basic_string(&v108, &__dst, 0, v50, v38);
                  std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v102, &v108, "s");
                }
                if (SHIBYTE(v108.__r_.__value_.__r.__words[2]) < 0)
                  operator delete(v108.__r_.__value_.__l.__data_);
                goto LABEL_163;
              }
            }
            memmove(p_dst, a3, 2 * a4);
            goto LABEL_48;
          }
          if (a4 > 0x7FFFFFFFFFFFFFF7)
            std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
          if (a4 >= 0xB)
          {
            v55 = (a4 & 0xFFFFFFFFFFFFFFFCLL) + 4;
            if ((a4 | 3) != 0xB)
              v55 = a4 | 3;
            v33 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v55 + 1);
            v108.__r_.__value_.__l.__size_ = a4;
            v108.__r_.__value_.__r.__words[2] = v56 | 0x8000000000000000;
            v108.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v33;
          }
          else
          {
            *((_BYTE *)&v108.__r_.__value_.__s + 23) = a4;
            v33 = &v108;
            if (!a4)
              goto LABEL_86;
          }
          memmove(v33, a3, 2 * a4);
LABEL_86:
          *((_WORD *)v33 + a4) = 0;
          *(_OWORD *)a1 = *(_OWORD *)&v108.__r_.__value_.__l.__data_;
          v16 = v108.__r_.__value_.__r.__words[2];
          goto LABEL_4;
        }
LABEL_34:
        operator delete(v108.__r_.__value_.__l.__data_);
        goto LABEL_35;
      }
      if (v21 >= 0)
        v22 = (unsigned __int16 *)v18;
      else
        v22 = *(unsigned __int16 **)v18;
      v23 = (std::basic_string<char16_t> *)v108.__r_.__value_.__r.__words[0];
      if ((v108.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v23 = &v108;
      v24 = size - 1;
      do
      {
        v26 = (unsigned __int16)v23->__r_.__value_.__s.__data_[0];
        v23 = (std::basic_string<char16_t> *)((char *)v23 + 2);
        v25 = v26;
        v28 = *v22++;
        v27 = v28;
        v30 = v24-- != 0;
        v31 = v27 == v25;
      }
      while (v27 == v25 && v30);
    }
    else
    {
      v31 = 0;
    }
    if ((SHIBYTE(v108.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_35;
    goto LABEL_34;
  }
  if (SHIBYTE(v104) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)a1, (const std::basic_string<char16_t>::value_type *)__p[0], (std::basic_string<char16_t>::size_type)__p[1]);
    goto LABEL_26;
  }
  *(_OWORD *)a1 = *(_OWORD *)__p;
  v16 = v104;
LABEL_4:
  *(_QWORD *)(a1 + 16) = v16;
LABEL_26:
  *(_BYTE *)(a1 + 24) = 1;
LABEL_27:
  if (v15 && SHIBYTE(v104) < 0)
    operator delete(__p[0]);
LABEL_31:
  __p[0] = &v106;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
  __p[0] = &v107;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
}

void sub_1CB4ED674(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,char a30)
{
  int v30;
  uint64_t v31;

  if (*(char *)(v31 - 89) < 0)
    operator delete(*(void **)(v31 - 112));
  if (a15 < 0)
    operator delete(__p);
  if (v30)
  {
    if (a25 < 0)
      operator delete(a20);
  }
  a20 = &a27;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a20);
  a20 = &a30;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a20);
  _Unwind_Resume(a1);
}

void sub_1CB4ED748()
{
  void *v0;

  operator delete(v0);
  JUMPOUT(0x1CB4ED740);
}

uint64_t std::vector<std::basic_string<char16_t>>::vector[abi:ne180100](uint64_t a1, __int128 *a2, unint64_t a3)
{
  uint64_t v4;

  *(_QWORD *)(a1 + 16) = 0;
  v4 = a1 + 16;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  if (a3)
  {
    std::vector<std::basic_string<char16_t>>::__vallocate[abi:ne180100]((_QWORD *)a1, a3);
    *(_QWORD *)(a1 + 8) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>(v4, a2, (__int128 *)((char *)a2 + 24 * a3), *(std::basic_string<char16_t> **)(a1 + 8));
  }
  return a1;
}

void sub_1CB4ED7D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

void morphun::exception::XMLParseException::~XMLParseException(std::exception *this)
{
  morphun::exception::Throwable::~Throwable(this);
  JUMPOUT(0x1D179D2ECLL);
}

double morphun::exception::XMLParseException::XMLParseException(morphun::exception::XMLParseException *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_QWORD *)this = &off_1E8673030;
  return result;
}

{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_QWORD *)this = &off_1E8673030;
  return result;
}

_QWORD *morphun::exception::XMLParseException::XMLParseException(uint64_t a1, __int128 *a2)
{
  _QWORD *result;

  result = (_QWORD *)morphun::exception::Throwable::Throwable(a1, a2);
  *result = &off_1E8673030;
  return result;
}

{
  _QWORD *result;

  result = (_QWORD *)morphun::exception::Throwable::Throwable(a1, a2);
  *result = &off_1E8673030;
  return result;
}

void morphun::tokenizer::NumberCleaverIterator::~NumberCleaverIterator(morphun::tokenizer::NumberCleaverIterator *this)
{
  JUMPOUT(0x1D179D2ECLL);
}

double morphun::tokenizer::NumberCleaverIterator::reset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;

  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = a3;
  *(_DWORD *)(a1 + 40) = 0;
  result = NAN;
  *(_QWORD *)(a1 + 32) = 0xFFFFFFFF00000000;
  return result;
}

void morphun::analysis::stemmer::slice_from(std::basic_string<char16_t> *__str, std::basic_string<char16_t>::value_type *a2, uint64_t a3, uint64_t a4, std::allocator<char16_t> *a5)
{
  uint64_t v6;
  std::basic_string<char16_t>::size_type v7;
  int v8;
  BOOL v9;
  uint64_t v10;
  int v12;
  int v13;
  int v14;
  int v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  std::basic_string<char16_t>::value_type v19;
  std::basic_string<char16_t>::value_type v20;
  std::basic_string<char16_t> *v21;
  int data;
  _QWORD *exception;
  std::basic_string<char16_t> *v25;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t> *v27;
  std::basic_string<char16_t>::size_type v28;
  std::basic_string<char16_t> *v29;
  std::basic_string<char16_t>::size_type v30;
  std::basic_string<char16_t> v31;
  std::basic_string<char16_t> v32;
  std::basic_string<char16_t> v33;
  std::basic_string<char16_t> __dst;
  std::basic_string<char16_t> v35;
  std::basic_string<char16_t> v36;
  std::basic_string<char16_t> v37;
  std::basic_string<char16_t> v38;
  std::basic_string<char16_t> __stra;

  v6 = HIDWORD(__str[1].__r_.__value_.__r.__words[1]);
  if ((v6 & 0x80000000) != 0
    || ((v7 = LODWORD(__str[1].__r_.__value_.__r.__words[2]),
         v8 = HIDWORD(__str[1].__r_.__value_.__r.__words[0]),
         (int)v6 <= (int)v7)
      ? (v9 = (int)v7 <= v8)
      : (v9 = 0),
        !v9))
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "f");
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)SHIDWORD(__str[1].__r_.__value_.__r.__words[1]), &v33);
    if ((v33.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v25 = &v33;
    else
      v25 = (std::basic_string<char16_t> *)v33.__r_.__value_.__r.__words[0];
    if ((v33.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v33.__r_.__value_.__r.__words[2]);
    else
      size = v33.__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::append(&__dst, (const std::basic_string<char16_t>::value_type *)v25, size);
    v35 = __dst;
    memset(&__dst, 0, sizeof(__dst));
    std::basic_string<char16_t>::append(&v35, L",ket=", 5uLL);
    v36 = v35;
    memset(&v35, 0, sizeof(v35));
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)SLODWORD(__str[1].__r_.__value_.__r.__words[2]), &v32);
    if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v27 = &v32;
    else
      v27 = (std::basic_string<char16_t> *)v32.__r_.__value_.__r.__words[0];
    if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v28 = HIBYTE(v32.__r_.__value_.__r.__words[2]);
    else
      v28 = v32.__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::append(&v36, (const std::basic_string<char16_t>::value_type *)v27, v28);
    v37 = v36;
    memset(&v36, 0, sizeof(v36));
    std::basic_string<char16_t>::append(&v37, L",limit=", 7uLL);
    v38 = v37;
    memset(&v37, 0, sizeof(v37));
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)SHIDWORD(__str[1].__r_.__value_.__r.__words[0]), &v31);
    if ((v31.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v29 = &v31;
    else
      v29 = (std::basic_string<char16_t> *)v31.__r_.__value_.__r.__words[0];
    if ((v31.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v30 = HIBYTE(v31.__r_.__value_.__r.__words[2]);
    else
      v30 = v31.__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::append(&v38, (const std::basic_string<char16_t>::value_type *)v29, v30);
    __stra = v38;
    memset(&v38, 0, sizeof(v38));
    morphun::exception::Throwable::Throwable((uint64_t)exception, (__int128 *)&__stra);
    *exception = &off_1E8673120;
  }
  v10 = a3;
  v12 = v6 - v7 + a3;
  v13 = v12 + v8;
  v14 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  if ((v14 & 0x80u) != 0)
    v14 = __str->__r_.__value_.__r.__words[1];
  if (v13 > v14)
  {
    v15 = v13 >> 3;
    if (v13 >> 3 <= 3)
      v15 = 3;
    std::basic_string<char16_t>::resize(__str, (v13 + v15 + 3) & 0x7FFFFFFC, 0);
    v8 = HIDWORD(__str[1].__r_.__value_.__r.__words[0]);
  }
  if (v12)
    v16 = v8 <= (int)v7;
  else
    v16 = 1;
  if (!v16)
  {
    std::basic_string<char16_t>::basic_string(&__stra, __str, v10 + v6, v8 - (int)v7, a5);
    std::basic_string<char16_t>::assign(__str, &__stra, v7, 0xFFFFFFFFFFFFFFFFLL);
    if (SHIBYTE(__stra.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__stra.__r_.__value_.__l.__data_);
  }
  if ((int)v10 >= 1)
  {
    v17 = v10;
    v18 = v6;
    do
    {
      if (!v10)
        std::__throw_out_of_range[abi:ne180100]("string_view::at");
      v20 = *a2++;
      v19 = v20;
      if ((__str->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v21 = __str;
      else
        v21 = (std::basic_string<char16_t> *)__str->__r_.__value_.__r.__words[0];
      v21->__r_.__value_.__s.__data_[v18++] = v19;
      --v10;
      --v17;
    }
    while (v17);
  }
  data = (int)__str[1].__r_.__value_.__l.__data_;
  HIDWORD(__str[1].__r_.__value_.__r.__words[0]) += v12;
  if (data >= (int)v7)
  {
    LODWORD(v6) = data + v12;
    goto LABEL_30;
  }
  if (data > (int)v6)
LABEL_30:
    LODWORD(__str[1].__r_.__value_.__l.__data_) = v6;
}

void sub_1CB4EDBCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36,uint64_t a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  int v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;

  if (*(char *)(v51 - 89) < 0)
    operator delete(*(void **)(v51 - 112));
  if (v50 < 0)
    operator delete(v46);
  if (*(char *)(v51 - 121) < 0)
    operator delete(*(void **)(v51 - 144));
  if (a43 < 0)
    operator delete(__p);
  if (v48 < 0)
    operator delete(v45);
  if (a36 < 0)
    operator delete(a31);
  if (a29 < 0)
    operator delete(a24);
  if (v47 < 0)
    operator delete(v44);
  if (a23 < 0)
  {
    operator delete(a18);
    if ((v49 & 1) == 0)
LABEL_22:
      _Unwind_Resume(a1);
  }
  else if (!v49)
  {
    goto LABEL_22;
  }
  __cxa_free_exception(v43);
  goto LABEL_22;
}

uint64_t morphun::analysis::stemmer::in_grouping(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int16 v3;

  v1 = *(int *)(a1 + 24);
  if ((int)v1 >= *(_DWORD *)(a1 + 28))
    return 0;
  v2 = *(char *)(a1 + 23) >= 0 ? a1 : *(_QWORD *)a1;
  v3 = *(_WORD *)(v2 + 2 * v1);
  if ((unsigned __int16)((unsigned __int16)(v3 - 1104) >> 5) < 0x7FFu
    || (((unsigned __int16)aA_0[(unsigned __int16)(v3 - 1072) >> 3] >> ((v3 - 48) & 7)) & 1) == 0)
  {
    return 0;
  }
  *(_DWORD *)(a1 + 24) = v1 + 1;
  return 1;
}

uint64_t morphun::analysis::stemmer::out_grouping(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int16 v3;

  v1 = *(int *)(a1 + 24);
  if ((int)v1 >= *(_DWORD *)(a1 + 28))
    return 0;
  v2 = *(char *)(a1 + 23) >= 0 ? a1 : *(_QWORD *)a1;
  v3 = *(_WORD *)(v2 + 2 * v1);
  if ((unsigned __int16)((unsigned __int16)(v3 - 1104) >> 5) >= 0x7FFu
    && (((unsigned __int16)aA_0[(unsigned __int16)(v3 - 1072) >> 3] >> ((v3 - 48) & 7)) & 1) != 0)
  {
    return 0;
  }
  *(_DWORD *)(a1 + 24) = v1 + 1;
  return 1;
}

uint64_t morphun::analysis::stemmer::r_verb_common(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t result;
  uint64_t v5;
  std::allocator<char16_t> *v6;
  int v7;
  int v8;

  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a1 + 24);
  result = morphun::analysis::stemmer::find_among_b((uint64_t *)a1, a2, a3);
  if ((_DWORD)result)
  {
    v7 = *(_DWORD *)(a1 + 24);
    *(_DWORD *)(a1 + 36) = v7;
    if ((_DWORD)result == 2)
      goto LABEL_6;
    if ((_DWORD)result != 1)
      return 1;
    v8 = *(_DWORD *)(a1 + 28);
    if ((morphun::analysis::stemmer::eq_s_b((uint64_t *)a1, word_1CB73003E, 1) & 1) != 0
      || (*(_DWORD *)(a1 + 24) = v7 - v8 + *(_DWORD *)(a1 + 28),
          result = morphun::analysis::stemmer::eq_s_b((uint64_t *)a1, word_1CB730042, 1),
          (_DWORD)result))
    {
LABEL_6:
      morphun::analysis::stemmer::slice_from((std::basic_string<char16_t> *)a1, &word_1CB73EB86, 0, v5, v6);
      return 1;
    }
  }
  return result;
}

uint64_t morphun::analysis::stemmer::find_among_b(uint64_t *a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  char v5;
  int v6;
  int v7;
  uint64_t *v8;
  int v9;
  int v10;
  uint64_t v11;
  _WORD *v12;
  uint64_t v13;
  int v15;
  int v16;
  int v17;
  BOOL v18;
  BOOL v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  int v24;

  v3 = 0;
  v4 = 0;
  v5 = 0;
  v6 = 0;
  v7 = *((_DWORD *)a1 + 6);
  v8 = (uint64_t *)*a1;
  if (*((char *)a1 + 23) >= 0)
    v8 = a1;
  while (1)
  {
    v9 = v6 + ((a3 - v6) >> 1);
    if (v3 >= v4)
      v10 = v4;
    else
      v10 = v3;
    v11 = v9;
    v12 = (_WORD *)(a2 + 16 * v9);
    LODWORD(v13) = (unsigned __int16)*v12;
    if (*v12)
    {
      v13 = 0;
      while (*(unsigned __int16 *)(a2 + 2 + 16 * v11 + 2 * v13++))
        ;
    }
    if ((int)v13 + ~v10 < 0)
    {
      v17 = 0;
    }
    else
    {
      v15 = v7 - 1 - v10;
      v16 = v13 - v10;
      while (v7 - *((_DWORD *)a1 + 8) != v10)
      {
        v17 = *((unsigned __int16 *)v8 + v15) - (unsigned __int16)v12[--v16];
        if (v17)
          goto LABEL_17;
        ++v10;
        --v15;
        if (v16 <= 0)
        {
          v17 = 0;
          v10 = v13;
          goto LABEL_17;
        }
      }
      v17 = -1;
      v10 = v7 - *((_DWORD *)a1 + 8);
    }
LABEL_17:
    if (v17 >= 0)
      v3 = v10;
    else
      a3 = v11;
    if (v17 >= 0)
      v6 = v11;
    else
      v4 = v10;
    if (a3 - v6 <= 1)
    {
      v18 = v6 > 0 || a3 == v6;
      v19 = v18;
      v20 = v19 | v5;
      v5 = 1;
      if ((v20 & 1) != 0)
        break;
    }
  }
  while (1)
  {
    v21 = v6;
    LODWORD(v22) = *(unsigned __int16 *)(a2 + 16 * v6);
    if ((_DWORD)v22)
    {
      v22 = 0;
      while (*(unsigned __int16 *)(a2 + 2 + 16 * v21 + 2 * v22++))
        ;
    }
    if (v3 >= (int)v22)
      break;
    v24 = *(char *)(a2 + 16 * v21 + 14);
    v6 = v24;
    if (v24 < 0)
      return 0;
  }
  *((_DWORD *)a1 + 6) = v7 - v22;
  return *(char *)(a2 + 16 * v21 + 15);
}

uint64_t morphun::analysis::stemmer::eq_s_b(uint64_t *a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *((int *)a1 + 6);
  if ((int)v3 - *((_DWORD *)a1 + 8) < (int)a3)
    return 0;
  if ((_DWORD)a3)
  {
    v5 = *((unsigned __int8 *)a1 + 23);
    v6 = (v5 & 0x80u) != 0;
    if ((v5 & 0x80u) != 0)
      v5 = a1[1];
    v7 = a3;
    if (v6)
      v8 = (uint64_t *)*a1;
    else
      v8 = a1;
    v9 = -a3;
    v10 = (uint64_t)v8 + 2 * v3;
    do
    {
      if (v5 <= v3 + v9)
        std::basic_string<char16_t>::__throw_out_of_range[abi:ne180100]();
      if (!v9)
        std::__throw_out_of_range[abi:ne180100]("string_view::at");
      if (*(unsigned __int16 *)(v10 + 2 * v9) != *a2)
        return 0;
      ++a2;
      ++v9;
    }
    while (--v7);
  }
  *((_DWORD *)a1 + 6) = v3 - a3;
  return 1;
}

void morphun::dialog::language::HeCommonConceptFactory::~HeCommonConceptFactory(morphun::dialog::language::HeCommonConceptFactory *this)
{
  *(_QWORD *)this = &off_1E866C3C0;
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*((_QWORD **)this + 95));
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl((void **)this, (void **)&off_1E8667898);
}

{
  *(_QWORD *)this = &off_1E866C3C0;
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*((_QWORD **)this + 95));
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl((void **)this, (void **)&off_1E8667898);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::dialog::language::HeCommonConceptFactory::createOrList(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  morphun::exception::NullPointerException *exception;
  std::basic_string<char16_t> __p;
  uint64_t (**v8)(morphun::dialog::SpeakableString *__hidden);
  std::basic_string<char16_t> v9;
  uint64_t v10;

  v2 = morphun::dialog::CommonConceptFactoryImpl::createOrList(a1, a2);
  if (!v2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  v3 = v2;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, " ");
  v8 = &off_1E866AD28;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    std::basic_string<char16_t>::__init_copy_ctor_external(&v9, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  else
    v9 = __p;
  v10 = 0;
  v4 = (*(uint64_t (**)(uint64_t, uint64_t (***)(morphun::dialog::SpeakableString *__hidden)))(*(_QWORD *)v3 + 184))(v3, &v8);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return v4;
}

void sub_1CB4EE1E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *morphun::dialog::language::HeCommonConceptFactory::createAndList(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  std::basic_string<char16_t> __p;
  uint64_t (**v8)(morphun::dialog::SpeakableString *__hidden);
  std::basic_string<char16_t> v9;
  uint64_t v10;

  v4 = (_QWORD *)operator new();
  v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1);
  *v4 = &off_1E865C630;
  morphun::dialog::SemanticConceptList::SemanticConceptList((uint64_t)v4, (uint64_t *)&off_1E8667EE8, v5, a2);
  *v4 = &off_1E866DD00;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L", ");
  v8 = &off_1E866AD28;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    std::basic_string<char16_t>::__init_copy_ctor_external(&v9, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  else
    v9 = __p;
  v10 = 0;
  morphun::dialog::SpeakableString::operator=((uint64_t)(v4 + 18), (uint64_t)&v8);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return v4;
}

void sub_1CB4EE330(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  morphun::dialog::SemanticConceptList *v15;

  if (a14 < 0)
    operator delete(__p);
  morphun::dialog::SemanticConceptList::~SemanticConceptList(v15, (uint64_t *)&off_1E8667EE8);
  MEMORY[0x1D179D2EC](v15, 0x10F3C40223A8A63);
  _Unwind_Resume(a1);
}

morphun::dialog::GrammaticalCountConcept *morphun::dialog::language::HeCommonConceptFactory::quantify(morphun::dialog::language::HeCommonConceptFactory *this, const morphun::dialog::NumberConcept *a2, const morphun::dialog::SemanticFeatureConceptBase *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  unsigned __int16 *v14;
  unsigned __int16 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;
  unsigned __int16 *v23;
  unsigned __int16 *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 *v27;
  morphun::dialog::GrammaticalCountConcept *v28;
  _QWORD *exception;
  void **v31;
  std::basic_string<char16_t>::size_type v32;
  void *__p[2];
  unsigned __int8 v34;
  std::basic_string<char16_t> __dst;
  std::basic_string<char16_t> v36;
  uint64_t (**v37)(morphun::dialog::SpeakableString *__hidden);
  _QWORD v38[3];
  __int128 *v39;

  npc<morphun::dialog::SemanticFeatureConceptBase const>((uint64_t)a3);
  v6 = (*(uint64_t (**)(const morphun::dialog::SemanticFeatureConceptBase *, _QWORD))(*(_QWORD *)a3 + 104))(a3, *((_QWORD *)this + 97));
  v7 = v6;
  v37 = &off_1E866AD28;
  memset(v38, 0, sizeof(v38));
  v39 = 0;
  if (!v6)
    goto LABEL_59;
  v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 32))(v6);
  v9 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE((morphun::grammar::synthesis::GrammemeConstants *)v8);
  v10 = *(unsigned __int8 *)(v8 + 23);
  v11 = (char)v10;
  if ((v10 & 0x80u) != 0)
    v10 = *(_QWORD *)(v8 + 8);
  v12 = *(unsigned __int8 *)(v9 + 23);
  v13 = (char)v12;
  if ((v12 & 0x80u) != 0)
    v12 = *(_QWORD *)(v9 + 8);
  if (v10 == v12)
  {
    if (!v10)
    {
LABEL_16:
      if (morphun::dialog::language::HeCommonConceptFactory::isDefinite(this, a3))
      {
        if (*((_DWORD *)a2 + 4) == 1)
          v16 = (uint64_t)*((double *)a2 + 1);
        else
          v16 = *((_QWORD *)a2 + 1);
        if (v16 == 1)
        {
          std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "1");
          std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, byte_1CB7300B6);
          morphun::dialog::SpeakableString::SpeakableString((uint64_t)&v36, (__int128 *)&__dst, (uint64_t)__p);
          morphun::dialog::SpeakableString::operator=((uint64_t)&v37, (uint64_t)&v36);
          goto LABEL_42;
        }
        std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "c");
        (*(void (**)(std::basic_string<char16_t> *__return_ptr, const morphun::dialog::NumberConcept *, std::basic_string<char16_t> *))(*(_QWORD *)a2 + 200))(&v36, a2, &__dst);
        morphun::dialog::SpeakableString::operator=((uint64_t)&v37, (uint64_t)&v36);
      }
      else
      {
        std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"cardinal-masculine");
        (*(void (**)(std::basic_string<char16_t> *__return_ptr, const morphun::dialog::NumberConcept *, std::basic_string<char16_t> *))(*(_QWORD *)a2 + 200))(&v36, a2, &__dst);
        morphun::dialog::SpeakableString::operator=((uint64_t)&v37, (uint64_t)&v36);
      }
LABEL_48:
      goto LABEL_49;
    }
    if (v13 >= 0)
      v14 = (unsigned __int16 *)v9;
    else
      v14 = *(unsigned __int16 **)v9;
    if (v11 >= 0)
      v15 = (unsigned __int16 *)v8;
    else
      v15 = *(unsigned __int16 **)v8;
    while (*v14 == *v15)
    {
      ++v15;
      ++v14;
      if (!--v10)
        goto LABEL_16;
    }
  }
  v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 32))(v7);
  v18 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE((morphun::grammar::synthesis::GrammemeConstants *)v17);
  v19 = *(unsigned __int8 *)(v17 + 23);
  v20 = (char)v19;
  if ((v19 & 0x80u) != 0)
    v19 = *(_QWORD *)(v17 + 8);
  v21 = *(unsigned __int8 *)(v18 + 23);
  v22 = (char)v21;
  if ((v21 & 0x80u) != 0)
    v21 = *(_QWORD *)(v18 + 8);
  if (v19 != v21)
    goto LABEL_59;
  if (v19)
  {
    if (v22 >= 0)
      v23 = (unsigned __int16 *)v18;
    else
      v23 = *(unsigned __int16 **)v18;
    if (v20 >= 0)
      v24 = (unsigned __int16 *)v17;
    else
      v24 = *(unsigned __int16 **)v17;
    while (*v23 == *v24)
    {
      ++v24;
      ++v23;
      if (!--v19)
        goto LABEL_36;
    }
LABEL_59:
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "U");
    if (v7)
      (**(void (***)(void **__return_ptr, uint64_t))v7)(__p, v7);
    else
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "n");
    if ((v34 & 0x80u) == 0)
      v31 = __p;
    else
      v31 = (void **)__p[0];
    if ((v34 & 0x80u) == 0)
      v32 = v34;
    else
      v32 = (std::basic_string<char16_t>::size_type)__p[1];
    std::basic_string<char16_t>::append(&__dst, (const std::basic_string<char16_t>::value_type *)v31, v32);
    v36 = __dst;
    memset(&__dst, 0, sizeof(__dst));
    morphun::exception::Throwable::Throwable((uint64_t)exception, (__int128 *)&v36);
    *exception = &off_1E86730F0;
  }
LABEL_36:
  if (!morphun::dialog::language::HeCommonConceptFactory::isDefinite(this, a3))
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "c");
    (*(void (**)(std::basic_string<char16_t> *__return_ptr, const morphun::dialog::NumberConcept *, std::basic_string<char16_t> *))(*(_QWORD *)a2 + 200))(&v36, a2, &__dst);
    morphun::dialog::SpeakableString::operator=((uint64_t)&v37, (uint64_t)&v36);
    goto LABEL_48;
  }
  if (*((_DWORD *)a2 + 4) == 1)
    v25 = (uint64_t)*((double *)a2 + 1);
  else
    v25 = *((_QWORD *)a2 + 1);
  if (v25 != 1)
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"construct-feminine");
    (*(void (**)(std::basic_string<char16_t> *__return_ptr, const morphun::dialog::NumberConcept *, std::basic_string<char16_t> *))(*(_QWORD *)a2 + 200))(&v36, a2, &__dst);
    morphun::dialog::SpeakableString::operator=((uint64_t)&v37, (uint64_t)&v36);
    goto LABEL_48;
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "1");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, byte_1CB7300EA);
  morphun::dialog::SpeakableString::SpeakableString((uint64_t)&v36, (__int128 *)&__dst, (uint64_t)__p);
  morphun::dialog::SpeakableString::operator=((uint64_t)&v37, (uint64_t)&v36);
LABEL_42:
  if ((char)v34 < 0)
    operator delete(__p[0]);
LABEL_49:
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  v26 = (uint64_t)*((double *)a2 + 1);
  if (*((_DWORD *)a2 + 4) != 1)
    v26 = *((_QWORD *)a2 + 1);
  if ((unint64_t)(v26 - 1) <= 1)
  {
    if (v39)
      v27 = v39;
    else
      v27 = (__int128 *)v38;
    morphun::dialog::SpeakableString::SpeakableString((uint64_t)&v36, v27, (uint64_t)v27);
    morphun::dialog::SpeakableString::operator=((uint64_t)&v37, (uint64_t)&v36);
  }
  v28 = morphun::dialog::CommonConceptFactoryImpl::quantify(this, a2, (const morphun::dialog::SpeakableString *)&v37, a3);
  (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
  return v28;
}

void sub_1CB4EE874(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,char a29)
{
  uint64_t v29;

  if (a14 < 0)
    operator delete(__p);
  if (a20 < 0)
    operator delete(a15);
  if (v29)
    (*(void (**)(uint64_t))(*(_QWORD *)v29 + 16))(v29);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::HeCommonConceptFactory::quantifiedJoin(uint64_t a1@<X0>, uint64_t a2@<X1>, const morphun::dialog::SpeakableString *a3@<X2>, int a4@<W4>, morphun::dialog::SpeakableString *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  int v12;
  unsigned __int16 *v13;
  unint64_t v14;
  std::basic_string<char16_t> __p;
  uint64_t (**v16)(morphun::dialog::SpeakableString *__hidden);
  std::basic_string<char16_t> v17;
  uint64_t v18;
  _QWORD v19[5];

  v10 = a1 + 752;
  v11 = (*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(_QWORD *)a3 + 32))(a3);
  v12 = *(char *)(v11 + 23);
  if (v12 >= 0)
    v13 = (unsigned __int16 *)v11;
  else
    v13 = *(unsigned __int16 **)v11;
  if (v12 >= 0)
    v14 = *(unsigned __int8 *)(v11 + 23);
  else
    v14 = *(_QWORD *)(v11 + 8);
  if ((_QWORD *)(a1 + 760) == std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(v10, v13, v14))
  {
    if (a4 == 1)
    {
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)&word_1CB73EE14);
      v16 = &off_1E866AD28;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        std::basic_string<char16_t>::__init_copy_ctor_external(&v17, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
      else
        v17 = __p;
      v18 = 0;
      morphun::dialog::SpeakableString::operator+((uint64_t)a3, (uint64_t)&v16, v19);
      morphun::dialog::SpeakableString::operator+((uint64_t)v19, a2, a5);
    }
    else
    {
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)&word_1CB73EE14);
      v16 = &off_1E866AD28;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        std::basic_string<char16_t>::__init_copy_ctor_external(&v17, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
      else
        v17 = __p;
      v18 = 0;
      morphun::dialog::SpeakableString::operator+(a2, (uint64_t)&v16, v19);
      morphun::dialog::SpeakableString::operator+((uint64_t)v19, (uint64_t)a3, a5);
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    morphun::dialog::SpeakableString::SpeakableString(a5, a3);
  }
}

void sub_1CB4EEB84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t npc<morphun::dialog::SemanticFeatureConceptBase const>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4EEC20(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::language::HeCommonConceptFactory::isDefinite(morphun::dialog::language::HeCommonConceptFactory *this, const morphun::dialog::SemanticFeatureConceptBase *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unsigned __int16 *v11;
  unsigned __int16 *v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  BOOL v19;

  npc<morphun::dialog::SemanticFeatureConceptBase const>((uint64_t)a2);
  result = (*(uint64_t (**)(const morphun::dialog::SemanticFeatureConceptBase *, _QWORD))(*(_QWORD *)a2 + 48))(a2, *((_QWORD *)this + 98));
  if (result)
  {
    v5 = result;
    v6 = morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_DEFINITE((morphun::grammar::synthesis::GrammemeConstants *)result);
    v7 = *(char *)(v6 + 23);
    v8 = *(_QWORD *)(v6 + 8);
    if (v7 >= 0)
      v8 = *(unsigned __int8 *)(v6 + 23);
    v9 = *(unsigned __int8 *)(v5 + 23);
    v10 = (char)v9;
    if ((v9 & 0x80u) != 0)
      v9 = *(_QWORD *)(v5 + 8);
    if (v8 == v9)
    {
      if (v8)
      {
        if (v10 >= 0)
          v11 = (unsigned __int16 *)v5;
        else
          v11 = *(unsigned __int16 **)v5;
        if (v7 >= 0)
          v12 = (unsigned __int16 *)v6;
        else
          v12 = *(unsigned __int16 **)v6;
        v13 = v8 - 1;
        do
        {
          v15 = *v12++;
          v14 = v15;
          v17 = *v11++;
          v16 = v17;
          v19 = v13-- != 0;
          result = v16 == v14;
        }
        while (v16 == v14 && v19);
      }
      else
      {
        return 1;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void sub_1CB4EED40(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<std::u16string_view>::__emplace_unique_key_args<std::u16string_view,std::u16string_view const&>(uint64_t **a1, unsigned __int16 *a2, unint64_t a3, _OWORD *a4)
{
  uint64_t *result;
  uint64_t **v7;
  uint64_t *v8;
  uint64_t v9;

  result = std::__tree<std::u16string_view>::__find_equal<std::u16string_view>((uint64_t)a1, &v9, a2, a3);
  if (!*result)
  {
    v7 = (uint64_t **)result;
    v8 = (uint64_t *)operator new(0x30uLL);
    *((_OWORD *)v8 + 2) = *a4;
    return std::__tree<std::u16string_view>::__insert_node_at(a1, v9, v7, v8);
  }
  return result;
}

void morphun::analysis::SvAnalyzer::~SvAnalyzer(void **this)
{
  *this = &off_1E86609E8;
  morphun::analysis::Analyzer::~Analyzer((morphun::analysis::Analyzer *)this, (uint64_t *)&off_1E8669000);
}

{
  *this = &off_1E86609E8;
  morphun::analysis::Analyzer::~Analyzer((morphun::analysis::Analyzer *)this, (uint64_t *)&off_1E8669000);
  JUMPOUT(0x1D179D2ECLL);
}

morphun::analysis::util::FilteringTokenFilter *morphun::analysis::SvAnalyzer::addStopFilter(morphun::analysis::SvAnalyzer *this, morphun::analysis::TokenStream *a2)
{
  morphun::analysis::util::FilteringTokenFilter *v4;

  v4 = (morphun::analysis::util::FilteringTokenFilter *)operator new();
  morphun::analysis::core::StopFilter::StopFilter(v4, (uint64_t)a2, *((_QWORD *)this + 8));
  return v4;
}

void sub_1CB4EEEC0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10F1C40C2748A64);
  _Unwind_Resume(a1);
}

morphun::analysis::util::AttributeSource *morphun::analysis::SvAnalyzer::addWordNormalizationFilter(morphun::analysis::SvAnalyzer *this, morphun::analysis::TokenStream *a2)
{
  morphun::analysis::stemmer::NordicStemFilter *v3;
  morphun::analysis::util::AttributeSource *v4;
  void *__p[2];
  char v7;

  v3 = (morphun::analysis::stemmer::NordicStemFilter *)operator new();
  *(_QWORD *)v3 = &off_1E866A910;
  morphun::analysis::stemmer::NordicStemFilter::NordicStemFilter(v3, (morphun::analysis::TokenStream *)&off_1E8669B90, (uint64_t)a2);
  *(_QWORD *)v3 = &off_1E8672AA8;
  v4 = (morphun::analysis::util::AttributeSource *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "o");
  morphun::analysis::filter::AmpersandToAndFilter::AmpersandToAndFilter(v4, (uint64_t)v3, (__int128 *)__p);
  if (v7 < 0)
    operator delete(__p[0]);
  return v4;
}

void sub_1CB4EEFA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  if (a15 < 0)
    operator delete(__p);
  MEMORY[0x1D179D2EC](v15, 0x10F3C40C7D8954FLL);
  _Unwind_Resume(a1);
}

_QWORD *morphun::dialog::GrammaticalCountConcept::toString@<X0>(morphun::dialog::GrammaticalCountConcept *this@<X0>, _QWORD *a2@<X8>)
{
  void (***v3)(_QWORD);
  void (***v4)(_QWORD);

  v3 = (void (***)(_QWORD))(*(uint64_t (**)(morphun::dialog::GrammaticalCountConcept *))(*(_QWORD *)this + 24))(this);
  if (!v3)
    return std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(a2, "(");
  v4 = v3;
  (**v3)(v3);
  return (_QWORD *)((uint64_t (*)(_QWORD))(*v4)[2])(v4);
}

void sub_1CB4EF060(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void morphun::dialog::GrammaticalCountConcept::~GrammaticalCountConcept(morphun::dialog::GrammaticalCountConcept *this)
{
}

{
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::dialog::GrammaticalCountConcept::toSpeakableString(morphun::dialog::GrammaticalCountConcept *this)
{
  double v1;
  morphun::dialog::GrammaticalCountConcept *v2;
  double v3;
  _BOOL4 v4;
  int v5;
  BOOL v6;
  unsigned int v7;
  uint64_t RangedValue;

  v1 = *((double *)this + 5);
  v2 = this;
  v3 = (double)(uint64_t)v1;
  v4 = v1 == 0.0;
  v5 = *((_DWORD *)this + 8);
  if (v1 != v3)
    v4 = 0;
  if (v5)
    v6 = !v4;
  else
    v6 = 0;
  if (!v6)
  {
    v7 = 0;
    return morphun::dialog::GrammaticalCountConcept::chooseDefault(this, v7);
  }
  if (v5 == 1)
  {
LABEL_11:
    v7 = 1;
    return morphun::dialog::GrammaticalCountConcept::chooseDefault(this, v7);
  }
  if (v1 != v3)
  {
    if (v5 != 2)
      goto LABEL_19;
LABEL_14:
    v7 = 2;
    return morphun::dialog::GrammaticalCountConcept::chooseDefault(this, v7);
  }
  if (v1 == 1.0)
    goto LABEL_11;
  if (v1 == 2.0 || v5 == 2)
    goto LABEL_14;
LABEL_19:
  RangedValue = morphun::dialog::GrammaticalCountConcept::getRangedValue(this);
  if (!RangedValue)
  {
    this = v2;
    if (v5 == 4)
    {
      v7 = 4;
    }
    else if (v5 == 3)
    {
      v7 = 3;
    }
    else
    {
      v7 = 5;
    }
    return morphun::dialog::GrammaticalCountConcept::chooseDefault(this, v7);
  }
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)RangedValue + 24))(RangedValue);
}

morphun::dialog::GrammaticalCountConcept *morphun::dialog::GrammaticalCountConcept::zero(morphun::dialog::GrammaticalCountConcept *this, const morphun::dialog::DucConcept *a2)
{
  morphun::dialog::GrammaticalCountConcept *v4;

  v4 = (morphun::dialog::GrammaticalCountConcept *)operator new();
  npc<morphun::dialog::GrammaticalCountConcept const>((uint64_t)this);
  morphun::dialog::GrammaticalCountConcept::GrammaticalCountConcept(v4, this);
  **((_QWORD **)v4 + 1) = a2;
  return v4;
}

void sub_1CB4EF218(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10A1C40F622BB8FLL);
  _Unwind_Resume(a1);
}

morphun::dialog::GrammaticalCountConcept *morphun::dialog::GrammaticalCountConcept::two(morphun::dialog::GrammaticalCountConcept *this, const morphun::dialog::DucConcept *a2)
{
  morphun::dialog::GrammaticalCountConcept *v4;

  v4 = (morphun::dialog::GrammaticalCountConcept *)operator new();
  npc<morphun::dialog::GrammaticalCountConcept const>((uint64_t)this);
  morphun::dialog::GrammaticalCountConcept::GrammaticalCountConcept(v4, this);
  *(_QWORD *)(*((_QWORD *)v4 + 1) + 16) = a2;
  return v4;
}

void sub_1CB4EF2A0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10A1C40F622BB8FLL);
  _Unwind_Resume(a1);
}

morphun::dialog::GrammaticalCountConcept *morphun::dialog::GrammaticalCountConcept::few(morphun::dialog::GrammaticalCountConcept *this, const morphun::dialog::DucConcept *a2)
{
  morphun::dialog::GrammaticalCountConcept *v4;

  v4 = (morphun::dialog::GrammaticalCountConcept *)operator new();
  npc<morphun::dialog::GrammaticalCountConcept const>((uint64_t)this);
  morphun::dialog::GrammaticalCountConcept::GrammaticalCountConcept(v4, this);
  *(_QWORD *)(*((_QWORD *)v4 + 1) + 24) = a2;
  return v4;
}

void sub_1CB4EF328(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10A1C40F622BB8FLL);
  _Unwind_Resume(a1);
}

morphun::dialog::GrammaticalCountConcept *morphun::dialog::GrammaticalCountConcept::many(morphun::dialog::GrammaticalCountConcept *this, const morphun::dialog::DucConcept *a2)
{
  morphun::dialog::GrammaticalCountConcept *v4;

  v4 = (morphun::dialog::GrammaticalCountConcept *)operator new();
  npc<morphun::dialog::GrammaticalCountConcept const>((uint64_t)this);
  morphun::dialog::GrammaticalCountConcept::GrammaticalCountConcept(v4, this);
  *(_QWORD *)(*((_QWORD *)v4 + 1) + 32) = a2;
  return v4;
}

void sub_1CB4EF3B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10A1C40F622BB8FLL);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::GrammaticalCountConcept::lessThanOrEqualTo(morphun::dialog::GrammaticalCountConcept *this, double a2, const morphun::dialog::DucConcept *a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t **v8;
  double v9;
  uint64_t **v10;
  double *v11;

  v6 = operator new();
  npc<morphun::dialog::GrammaticalCountConcept const>((uint64_t)this);
  morphun::dialog::GrammaticalCountConcept::GrammaticalCountConcept((morphun::dialog::GrammaticalCountConcept *)v6, this);
  v7 = *(uint64_t **)(v6 + 56);
  if (v7)
  {
    while (1)
    {
      while (1)
      {
        v8 = (uint64_t **)v7;
        v9 = *((double *)v7 + 4);
        if (v9 <= a2)
          break;
        v7 = (uint64_t *)*v7;
        v10 = v8;
        if (!*v8)
          goto LABEL_9;
      }
      if (v9 >= a2)
        break;
      v7 = (uint64_t *)v7[1];
      if (!v7)
      {
        v10 = v8 + 1;
        goto LABEL_9;
      }
    }
  }
  else
  {
    v10 = (uint64_t **)(v6 + 56);
    v8 = (uint64_t **)(v6 + 56);
LABEL_9:
    v11 = (double *)operator new(0x30uLL);
    v11[4] = a2;
    *((_QWORD *)v11 + 5) = a3;
    std::__tree<std::u16string_view>::__insert_node_at((uint64_t **)(v6 + 48), (uint64_t)v8, v10, (uint64_t *)v11);
  }
  return v6;
}

void sub_1CB4EF4B4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10A1C40F622BB8FLL);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::dialog::GrammaticalCountConcept const>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4EF51C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

morphun::dialog::GrammaticalCountConcept *morphun::dialog::GrammaticalCountConcept::GrammaticalCountConcept(morphun::dialog::GrammaticalCountConcept *this, const morphun::dialog::GrammaticalCountConcept *a2)
{
  *(_QWORD *)this = &off_1E866B0A8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  std::vector<morphun::dialog::DucConcept const*>::__init_with_size[abi:ne180100]<morphun::dialog::DucConcept const**,morphun::dialog::DucConcept const**>((_QWORD *)this + 1, *((const void **)a2 + 1), *((_QWORD *)a2 + 2), (uint64_t)(*((_QWORD *)a2 + 2) - *((_QWORD *)a2 + 1)) >> 3);
  *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
  *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
  std::map<double,morphun::dialog::DucConcept const*>::map[abi:ne180100]((uint64_t)this + 48, (_QWORD *)a2 + 6);
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 10) = 0;
  *((_QWORD *)this + 11) = 0;
  std::vector<std::shared_ptr<morphun::dialog::DucConcept>>::__init_with_size[abi:ne180100]<std::shared_ptr<morphun::dialog::DucConcept>*,std::shared_ptr<morphun::dialog::DucConcept>*>((_QWORD *)this + 9, *((_QWORD **)a2 + 9), *((_QWORD **)a2 + 10), (uint64_t)(*((_QWORD *)a2 + 10) - *((_QWORD *)a2 + 9)) >> 4);
  return this;
}

void sub_1CB4EF5C4(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;
  void *v4;

  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*(_QWORD **)(v1 + 56));
  v4 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 16) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(a1);
}

_QWORD *std::vector<morphun::dialog::DucConcept const*>::__init_with_size[abi:ne180100]<morphun::dialog::DucConcept const**,morphun::dialog::DucConcept const**>(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = std::vector<morphun::dialog::DucConcept const*>::__vallocate[abi:ne180100](result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1CB4EF64C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::map<double,morphun::dialog::DucConcept const*>::map[abi:ne180100](uint64_t a1, _QWORD *a2)
{
  uint64_t **v3;
  _QWORD *v4;
  _QWORD *v5;
  double *v6;
  uint64_t *v7;
  uint64_t **v8;
  uint64_t v9;
  uint64_t **v10;
  BOOL v11;
  double v12;
  uint64_t **v13;
  uint64_t **v14;
  uint64_t *v15;
  _QWORD *v16;
  _QWORD *v17;
  double v18;

  *(_QWORD *)(a1 + 8) = 0;
  v3 = (uint64_t **)(a1 + 8);
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = a1 + 8;
  v4 = a2 + 1;
  v5 = (_QWORD *)*a2;
  if ((_QWORD *)*a2 != a2 + 1)
  {
    do
    {
      v6 = (double *)(v5 + 4);
      v7 = *(uint64_t **)(a1 + 8);
      v8 = v3;
      if (*(uint64_t ***)a1 == v3)
        goto LABEL_8;
      v9 = *(_QWORD *)(a1 + 8);
      v10 = v3;
      if (v7)
      {
        do
        {
          v8 = (uint64_t **)v9;
          v9 = *(_QWORD *)(v9 + 8);
        }
        while (v9);
      }
      else
      {
        do
        {
          v8 = (uint64_t **)v10[2];
          v11 = *v8 == (uint64_t *)v10;
          v10 = v8;
        }
        while (v11);
      }
      v12 = *v6;
      if (*((double *)v8 + 4) < *v6)
      {
LABEL_8:
        if (v7)
          v13 = v8;
        else
          v13 = v3;
        if (v7)
          v14 = v8 + 1;
        else
          v14 = v3;
      }
      else
      {
        v13 = v3;
        v14 = v3;
        if (v7)
        {
          v14 = v3;
          while (1)
          {
            while (1)
            {
              v13 = (uint64_t **)v7;
              v18 = *((double *)v7 + 4);
              if (v12 >= v18)
                break;
              v7 = (uint64_t *)*v7;
              v14 = v13;
              if (!*v13)
                goto LABEL_15;
            }
            if (v18 >= v12)
              break;
            v14 = (uint64_t **)(v7 + 1);
            v7 = (uint64_t *)v7[1];
            if (!v7)
              goto LABEL_15;
          }
        }
      }
      if (!*v14)
      {
LABEL_15:
        v15 = (uint64_t *)operator new(0x30uLL);
        *((_OWORD *)v15 + 2) = *(_OWORD *)v6;
        std::__tree<std::u16string_view>::__insert_node_at((uint64_t **)a1, (uint64_t)v13, v14, v15);
      }
      v16 = (_QWORD *)v5[1];
      if (v16)
      {
        do
        {
          v17 = v16;
          v16 = (_QWORD *)*v16;
        }
        while (v16);
      }
      else
      {
        do
        {
          v17 = (_QWORD *)v5[2];
          v11 = *v17 == (_QWORD)v5;
          v5 = v17;
        }
        while (!v11);
      }
      v5 = v17;
    }
    while (v17 != v4);
  }
  return a1;
}

void sub_1CB4EF7D4(_Unwind_Exception *a1)
{
  _QWORD **v1;

  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

_QWORD *std::vector<std::shared_ptr<morphun::dialog::DucConcept>>::__init_with_size[abi:ne180100]<std::shared_ptr<morphun::dialog::DucConcept>*,std::shared_ptr<morphun::dialog::DucConcept>*>(_QWORD *result, _QWORD *a2, _QWORD *a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  if (a4)
  {
    if (a4 >> 60)
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    v6 = result;
    result = std::__allocate_at_least[abi:ne180100]<std::allocator<std::u16string_view>>(a4);
    *v6 = result;
    v6[1] = result;
    v6[2] = &result[2 * v7];
    while (a2 != a3)
    {
      *result = *a2;
      v8 = a2[1];
      result[1] = v8;
      if (v8)
      {
        v9 = (unint64_t *)(v8 + 8);
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      a2 += 2;
      result += 2;
    }
    v6[1] = result;
  }
  return result;
}

void sub_1CB4EF88C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  std::vector<std::shared_ptr<morphun::dialog::DucConcept>>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

void std::vector<std::shared_ptr<morphun::dialog::DucConcept>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        v4 = std::shared_ptr<morphun::analysis::util::AttributeImpl>::~shared_ptr[abi:ne180100](v4 - 16);
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

char *std::vector<morphun::dialog::DucConcept const*>::__vallocate[abi:ne180100](_QWORD *a1, unint64_t a2)
{
  char *result;

  if (a2 >> 61)
    std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
  result = (char *)operator new(8 * a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[8 * a2];
  return result;
}

uint64_t morphun::dialog::GrammaticalCountConcept::chooseDefault(morphun::dialog::GrammaticalCountConcept *this, unsigned int a2)
{
  uint64_t v3;
  uint64_t RangedValue;
  morphun::exception::NullPointerException *exception;

  v3 = *((_QWORD *)this + 1);
  RangedValue = *(_QWORD *)(v3 + 8 * a2);
  if (!RangedValue)
  {
    RangedValue = morphun::dialog::GrammaticalCountConcept::getRangedValue(this);
    if (!RangedValue)
    {
      RangedValue = *(_QWORD *)(v3 + 8 * *((unsigned int *)this + 8));
      if (!RangedValue)
      {
        RangedValue = *(_QWORD *)(v3 + 40);
        if (!RangedValue)
        {
          exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
          morphun::exception::NullPointerException::NullPointerException(exception);
        }
      }
    }
  }
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)RangedValue + 24))(RangedValue);
}

void sub_1CB4EF9C8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::GrammaticalCountConcept::getRangedValue(morphun::dialog::GrammaticalCountConcept *this)
{
  morphun::dialog::GrammaticalCountConcept *v1;
  double v2;
  morphun::dialog::GrammaticalCountConcept *v3;
  morphun::dialog::GrammaticalCountConcept *v4;
  BOOL v5;

  if (!*((_QWORD *)this + 8))
    return 0;
  v1 = (morphun::dialog::GrammaticalCountConcept *)*((_QWORD *)this + 6);
  if (v1 == (morphun::dialog::GrammaticalCountConcept *)((char *)this + 56))
    return 0;
  v2 = fabs(*((double *)this + 5));
  while (v2 > *((double *)v1 + 4))
  {
    v3 = (morphun::dialog::GrammaticalCountConcept *)*((_QWORD *)v1 + 1);
    if (v3)
    {
      do
      {
        v4 = v3;
        v3 = *(morphun::dialog::GrammaticalCountConcept **)v3;
      }
      while (v3);
    }
    else
    {
      do
      {
        v4 = (morphun::dialog::GrammaticalCountConcept *)*((_QWORD *)v1 + 2);
        v5 = *(_QWORD *)v4 == (_QWORD)v1;
        v1 = v4;
      }
      while (!v5);
    }
    v1 = v4;
    if (v4 == (morphun::dialog::GrammaticalCountConcept *)((char *)this + 56))
      return 0;
  }
  return *((_QWORD *)v1 + 5);
}

void morphun::dialog::GrammaticalCountConcept::~GrammaticalCountConcept(morphun::dialog::GrammaticalCountConcept *this, uint64_t *a2)
{
  uint64_t v3;
  void *v4;
  void **v5;

  v3 = *a2;
  *(_QWORD *)this = *a2;
  *(_QWORD *)((char *)this + *(_QWORD *)(v3 - 56)) = a2[1];
  *(_QWORD *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 40)) = a2[2];
  v5 = (void **)((char *)this + 72);
  std::vector<std::shared_ptr<morphun::dialog::DucConcept>>::__destroy_vector::operator()[abi:ne180100](&v5);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*((_QWORD **)this + 7));
  v4 = (void *)*((_QWORD *)this + 1);
  if (v4)
  {
    *((_QWORD *)this + 2) = v4;
    operator delete(v4);
  }
}

uint64_t morphun::dialog::GrammaticalCountConcept::GrammaticalCountConcept(uint64_t a1, uint64_t *a2, int a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v11;

  v11 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + *(_QWORD *)(v11 - 56)) = a2[1];
  *(_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 - 40)) = a2[2];
  std::vector<morphun::dialog::DucConcept const*>::vector((_QWORD *)(a1 + 8));
  *(_DWORD *)(a1 + 32) = a3;
  *(double *)(a1 + 40) = a6;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 48) = a1 + 56;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8) = a4;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + 40) = a5;
  return a1;
}

_QWORD *std::vector<morphun::dialog::DucConcept const*>::vector(_QWORD *a1)
{
  _OWORD *v2;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  v2 = operator new(0x30uLL);
  a1[1] = v2 + 3;
  a1[2] = v2 + 3;
  *v2 = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  *a1 = v2;
  return a1;
}

uint64_t morphun::dialog::GrammaticalCountConcept::setChoosableResult(uint64_t result, unsigned int a2, uint64_t a3)
{
  *(_QWORD *)(*(_QWORD *)(result + 8) + 8 * a2) = a3;
  return result;
}

uint64_t morphun::dialog::GrammaticalCountConcept::GrammaticalCountConcept(uint64_t a1, int a2, uint64_t a3, uint64_t a4, double a5)
{
  *(_QWORD *)a1 = &off_1E866B0A8;
  std::vector<morphun::dialog::DucConcept const*>::vector((_QWORD *)(a1 + 8));
  *(_DWORD *)(a1 + 32) = a2;
  *(double *)(a1 + 40) = a5;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 48) = a1 + 56;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8) = a3;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + 40) = a4;
  return a1;
}

morphun::dialog::GrammaticalCountConcept *morphun::dialog::GrammaticalCountConcept::GrammaticalCountConcept(morphun::dialog::GrammaticalCountConcept *this, const morphun::dialog::GrammaticalCountConcept *a2, uint64_t a3)
{
  uint64_t v5;
  char *v6;

  v5 = *(_QWORD *)a2;
  *(_QWORD *)this = *(_QWORD *)a2;
  *(_QWORD *)((char *)this + *(_QWORD *)(v5 - 56)) = *((_QWORD *)a2 + 1);
  *(_QWORD *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 40)) = *((_QWORD *)a2 + 2);
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  v6 = (char *)this + 8;
  *((_QWORD *)this + 3) = 0;
  std::vector<morphun::dialog::DucConcept const*>::__init_with_size[abi:ne180100]<morphun::dialog::DucConcept const**,morphun::dialog::DucConcept const**>((_QWORD *)this + 1, *(const void **)(a3 + 8), *(_QWORD *)(a3 + 16), (uint64_t)(*(_QWORD *)(a3 + 16) - *(_QWORD *)(a3 + 8)) >> 3);
  *((_DWORD *)v6 + 6) = *(_DWORD *)(a3 + 32);
  *((_QWORD *)v6 + 4) = *(_QWORD *)(a3 + 40);
  std::map<double,morphun::dialog::DucConcept const*>::map[abi:ne180100]((uint64_t)(v6 + 40), (_QWORD *)(a3 + 48));
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 10) = 0;
  *((_QWORD *)this + 11) = 0;
  std::vector<std::shared_ptr<morphun::dialog::DucConcept>>::__init_with_size[abi:ne180100]<std::shared_ptr<morphun::dialog::DucConcept>*,std::shared_ptr<morphun::dialog::DucConcept>*>((_QWORD *)this + 9, *(_QWORD **)(a3 + 72), *(_QWORD **)(a3 + 80), (uint64_t)(*(_QWORD *)(a3 + 80) - *(_QWORD *)(a3 + 72)) >> 4);
  return this;
}

void sub_1CB4EFCD8(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;
  void *v4;

  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*(_QWORD **)(v1 + 56));
  v4 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 16) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(a1);
}

void `virtual thunk to'morphun::dialog::GrammaticalCountConcept::~GrammaticalCountConcept(morphun::dialog::GrammaticalCountConcept *this)
{
}

{
  JUMPOUT(0x1D179D2ECLL);
}

morphun::dialog::DucConcept *morphun::dialog::GrammaticalCountConcept::adoptOwnership(morphun::dialog::GrammaticalCountConcept *this, morphun::dialog::DucConcept *a2)
{
  morphun::dialog::DucConcept **v4;
  morphun::dialog::DucConcept **v5;
  morphun::dialog::DucConcept **v6;
  unint64_t v7;
  morphun::dialog::DucConcept **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  __int128 v17;
  int64x2_t v18;
  unint64_t v19;
  unint64_t v21;
  int64x2_t v22;
  unint64_t v23;
  char *v24;

  if (a2)
  {
    v4 = (morphun::dialog::DucConcept **)*((_QWORD *)this + 9);
    v5 = (morphun::dialog::DucConcept **)*((_QWORD *)this + 10);
    if (v4 == v5)
    {
LABEL_6:
      v7 = *((_QWORD *)this + 11);
      if ((unint64_t)v5 >= v7)
      {
        v9 = ((char *)v5 - (char *)v4) >> 4;
        if ((unint64_t)(v9 + 1) >> 60)
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        v10 = v7 - (_QWORD)v4;
        v11 = v10 >> 3;
        if (v10 >> 3 <= (unint64_t)(v9 + 1))
          v11 = v9 + 1;
        if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF0)
          v12 = 0xFFFFFFFFFFFFFFFLL;
        else
          v12 = v11;
        v24 = (char *)this + 88;
        if (v12)
          v12 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::u16string_view>>(v12);
        else
          v13 = 0;
        v21 = v12;
        v22.i64[0] = v12 + 16 * v9;
        v23 = v12 + 16 * v13;
        std::shared_ptr<morphun::dialog::DucConcept>::shared_ptr[abi:ne180100]<morphun::dialog::DucConcept,void>(v22.i64[0], (uint64_t)a2);
        v14 = v22.i64[0];
        v8 = (morphun::dialog::DucConcept **)(v22.i64[0] + 16);
        v22.i64[1] = v22.i64[0] + 16;
        v16 = (_QWORD *)*((_QWORD *)this + 9);
        v15 = (_QWORD *)*((_QWORD *)this + 10);
        if (v15 == v16)
        {
          v18 = vdupq_n_s64((unint64_t)v15);
        }
        else
        {
          do
          {
            v17 = *((_OWORD *)v15 - 1);
            v15 -= 2;
            *(_OWORD *)(v14 - 16) = v17;
            v14 -= 16;
            *v15 = 0;
            v15[1] = 0;
          }
          while (v15 != v16);
          v18 = *(int64x2_t *)((char *)this + 72);
          v8 = (morphun::dialog::DucConcept **)v22.i64[1];
        }
        *((_QWORD *)this + 9) = v14;
        *((_QWORD *)this + 10) = v8;
        v22 = v18;
        v19 = *((_QWORD *)this + 11);
        *((_QWORD *)this + 11) = v23;
        v23 = v19;
        v21 = v18.i64[0];
        std::__split_buffer<std::shared_ptr<morphun::dialog::DucConcept>>::~__split_buffer((uint64_t)&v21);
      }
      else
      {
        std::shared_ptr<morphun::dialog::DucConcept>::shared_ptr[abi:ne180100]<morphun::dialog::DucConcept,void>(*((_QWORD **)this + 10), (uint64_t)a2);
        v8 = v5 + 2;
        *((_QWORD *)this + 10) = v8;
      }
      *((_QWORD *)this + 10) = v8;
    }
    else
    {
      v6 = (morphun::dialog::DucConcept **)*((_QWORD *)this + 9);
      while (*v6 != a2)
      {
        v6 += 2;
        if (v6 == v5)
          goto LABEL_6;
      }
    }
  }
  return a2;
}

void sub_1CB4EFEA8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<std::shared_ptr<morphun::dialog::DucConcept>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *std::shared_ptr<morphun::dialog::DucConcept>::shared_ptr[abi:ne180100]<morphun::dialog::DucConcept,void>(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;

  *a1 = a2;
  v4 = (_QWORD *)operator new();
  *v4 = &off_1E8673AE0;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_1CB4EFF1C(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 16))(v1);
  _Unwind_Resume(exception_object);
}

uint64_t std::__split_buffer<std::shared_ptr<morphun::dialog::DucConcept>>::~__split_buffer(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 16;
    std::shared_ptr<morphun::analysis::util::AttributeImpl>::~shared_ptr[abi:ne180100](i - 16);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void std::__shared_ptr_pointer<morphun::dialog::DucConcept *,std::shared_ptr<morphun::dialog::DucConcept>::__shared_ptr_default_delete<morphun::dialog::DucConcept,morphun::dialog::DucConcept>,std::allocator<morphun::dialog::DucConcept>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t std::__shared_ptr_pointer<morphun::dialog::DucConcept *,std::shared_ptr<morphun::dialog::DucConcept>::__shared_ptr_default_delete<morphun::dialog::DucConcept,morphun::dialog::DucConcept>,std::allocator<morphun::dialog::DucConcept>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
  return result;
}

uint64_t std::__shared_ptr_pointer<morphun::dialog::DucConcept *,std::shared_ptr<morphun::dialog::DucConcept>::__shared_ptr_default_delete<morphun::dialog::DucConcept,morphun::dialog::DucConcept>,std::allocator<morphun::dialog::DucConcept>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(_QWORD *)(a2 + 8), 0x80000001CB5DE92BLL))
    return a1 + 24;
  else
    return 0;
}

uint64_t `virtual thunk to'morphun::dialog::GrammaticalCountConcept::toSpeakableString(morphun::dialog::GrammaticalCountConcept *this)
{
  return morphun::dialog::GrammaticalCountConcept::toSpeakableString((morphun::dialog::GrammaticalCountConcept *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 48)));
}

_QWORD *`virtual thunk to'morphun::dialog::GrammaticalCountConcept::toString@<X0>(morphun::dialog::GrammaticalCountConcept *this@<X0>, _QWORD *a2@<X8>)
{
  return morphun::dialog::GrammaticalCountConcept::toString((morphun::dialog::GrammaticalCountConcept *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 24)), a2);
}

void morphun::analysis::stemmer::FiLemmaFilter::~FiLemmaFilter(morphun::analysis::stemmer::FiLemmaFilter *this)
{
  void *v2;
  void *v3;

  v2 = (void *)*((_QWORD *)this + 29);
  if (v2)
  {
    *((_QWORD *)this + 30) = v2;
    operator delete(v2);
  }
  v3 = (void *)*((_QWORD *)this + 25);
  if (v3)
  {
    *((_QWORD *)this + 26) = v3;
    operator delete(v3);
  }
  if (*((char *)this + 183) < 0)
    operator delete(*((void **)this + 20));
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1E8669BE0);
}

{
  void *v2;
  void *v3;

  v2 = (void *)*((_QWORD *)this + 29);
  if (v2)
  {
    *((_QWORD *)this + 30) = v2;
    operator delete(v2);
  }
  v3 = (void *)*((_QWORD *)this + 25);
  if (v3)
  {
    *((_QWORD *)this + 26) = v3;
    operator delete(v3);
  }
  if (*((char *)this + 183) < 0)
    operator delete(*((void **)this + 20));
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1E8669BE0);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::analysis::stemmer::FiLemmaFilter::incrementToken(morphun::analysis::stemmer::FiLemmaFilter *this)
{
  std::basic_string<char16_t> *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::allocator<char16_t> *v7;
  _QWORD *v8;
  const std::basic_string<char16_t>::value_type *v9;
  std::basic_string<char16_t>::size_type v10;
  uint64_t v11;
  _QWORD *v12;
  const std::basic_string<char16_t>::value_type *v13;
  std::basic_string<char16_t>::size_type v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  morphun::tokenizer::locale::fi::FiSuffixSplit *v19;
  uint64_t v20;
  unint64_t v21;
  unsigned __int16 *v22;
  morphun::tokenizer::locale::fi::FiSuffixSplit *v23;
  int v24;
  const std::basic_string<char16_t>::value_type *v25;
  std::basic_string<char16_t>::size_type v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  std::basic_string<char16_t>::size_type size;
  _QWORD *v31;
  std::basic_string<char16_t> *v32;
  std::basic_string<char16_t> *p_str;
  std::basic_string<char16_t> *v34;
  uint64_t v35;
  uint64_t v36;
  std::basic_string<char16_t> *v37;
  std::basic_string<char16_t>::size_type v38;
  std::basic_string<char16_t> *v39;
  std::basic_string<char16_t>::size_type v40;
  std::basic_string<char16_t> *v41;
  uint64_t v42;
  std::basic_string<char16_t>::size_type v43;
  std::basic_string<char16_t>::size_type v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  morphun::exception::NullPointerException *exception;
  morphun::exception::NullPointerException *v55;
  morphun::exception::NullPointerException *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  std::basic_string<char16_t>::size_type v60;
  std::basic_string<char16_t>::size_type v61;
  std::basic_string<char16_t> v62;
  std::basic_string<char16_t> __str;
  uint64_t *v64;
  std::basic_string<char16_t> v65;
  uint64_t *v66;

  memset(&__str, 0, sizeof(__str));
  v2 = (std::basic_string<char16_t> *)((char *)this + 160);
  if (*((char *)this + 183) < 0)
  {
    if (*((_QWORD *)this + 21))
    {
LABEL_3:
      std::basic_string<char16_t>::operator=(&__str, v2);
      v3 = *((unsigned int *)this + 46);
      v4 = *((unsigned int *)this + 47);
      v5 = *((_QWORD *)this + 17);
      if (v5)
        (*(void (**)(uint64_t, _QWORD, char *))(*(_QWORD *)v5 + 56))(v5, *((unsigned int *)this + 48), (char *)this + 200);
      goto LABEL_5;
    }
  }
  else if (*((_BYTE *)this + 183))
  {
    goto LABEL_3;
  }
  v11 = npc<morphun::analysis::TokenStream>(*((_QWORD *)this + 12));
  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 24))(v11))
  {
    v15 = 0;
    goto LABEL_73;
  }
  v12 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 15));
  v13 = (const std::basic_string<char16_t>::value_type *)((char *)v12 + *(_QWORD *)(*v12 - 96));
  if (*((char *)v13 + 23) < 0)
  {
    v13 = *(const std::basic_string<char16_t>::value_type **)v13;
    v14 = *(_QWORD *)((char *)v12 + *(_QWORD *)(*v12 - 96) + 8);
  }
  else
  {
    v14 = *((unsigned __int8 *)v13 + 23);
  }
  std::basic_string<char16_t>::__assign_external(&__str, v13, v14);
  v49 = npc<morphun::analysis::tokenattributes::OffsetAttribute>(*((_QWORD *)this + 16));
  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v49 + 56))(v49);
  v50 = npc<morphun::analysis::tokenattributes::OffsetAttribute>(*((_QWORD *)this + 16));
  v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v50 + 72))(v50);
  v51 = npc<morphun::analysis::tokenattributes::OffsetAttribute>(*((_QWORD *)this + 16));
  *((_DWORD *)this + 46) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v51 + 56))(v51);
  v52 = *((_QWORD *)this + 17);
  if (v52)
  {
    *((_DWORD *)this + 48) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v52 + 64))(v52);
    v53 = (*(uint64_t (**)(_QWORD))(**((_QWORD **)this + 17) + 72))(*((_QWORD *)this + 17));
    if ((morphun::analysis::stemmer::FiLemmaFilter *)((char *)this + 200) != (morphun::analysis::stemmer::FiLemmaFilter *)v53)
      std::vector<int>::__assign_with_size[abi:ne180100]<int *,int *>((char *)this + 200, *(char **)v53, *(_QWORD *)(v53 + 8), (uint64_t)(*(_QWORD *)(v53 + 8) - *(_QWORD *)v53) >> 2);
  }
LABEL_5:
  v6 = npc<morphun::analysis::TokenStream>(*((_QWORD *)this + 12));
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6))
  {
    v8 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 15));
    v9 = (const std::basic_string<char16_t>::value_type *)((char *)v8 + *(_QWORD *)(*v8 - 96));
    if (*((char *)v9 + 23) < 0)
    {
      v9 = *(const std::basic_string<char16_t>::value_type **)v9;
      v10 = *(_QWORD *)((char *)v8 + *(_QWORD *)(*v8 - 96) + 8);
    }
    else
    {
      v10 = *((unsigned __int8 *)v9 + 23);
    }
    std::basic_string<char16_t>::__assign_external(v2, v9, v10);
    v16 = npc<morphun::analysis::tokenattributes::OffsetAttribute>(*((_QWORD *)this + 16));
    *((_DWORD *)this + 47) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 72))(v16);
    v17 = npc<morphun::analysis::tokenattributes::OffsetAttribute>(*((_QWORD *)this + 16));
    *((_DWORD *)this + 46) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v17 + 56))(v17);
    v18 = npc<morphun::analysis::tokenattributes::OffsetAttribute>(*((_QWORD *)this + 16));
    v19 = (morphun::tokenizer::locale::fi::FiSuffixSplit *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v18 + 56))(v18);
    if ((_DWORD)v4 == (_DWORD)v19)
    {
      v20 = morphun::tokenizer::locale::fi::FiSuffixSplit::SUFFIX_SPLIT(v19);
      if (*((char *)this + 183) < 0)
      {
        v22 = (unsigned __int16 *)*((_QWORD *)this + 20);
        v21 = *((_QWORD *)this + 21);
      }
      else
      {
        v21 = *((unsigned __int8 *)this + 183);
        v22 = (unsigned __int16 *)v2;
      }
      v23 = (morphun::tokenizer::locale::fi::FiSuffixSplit *)std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(v20, v22, v21);
      if ((morphun::tokenizer::locale::fi::FiSuffixSplit *)(morphun::tokenizer::locale::fi::FiSuffixSplit::SUFFIX_SPLIT(v23)
                                                           + 8) != v23)
      {
        v24 = *((char *)this + 183);
        if (v24 >= 0)
          v25 = (const std::basic_string<char16_t>::value_type *)v2;
        else
          v25 = (const std::basic_string<char16_t>::value_type *)*((_QWORD *)this + 20);
        if (v24 >= 0)
          v26 = *((unsigned __int8 *)this + 183);
        else
          v26 = *((_QWORD *)this + 21);
        std::basic_string<char16_t>::append(&__str, v25, v26);
      }
    }
  }
  else if (*((char *)this + 183) < 0)
  {
    **((_WORD **)this + 20) = 0;
    *((_QWORD *)this + 21) = 0;
  }
  else
  {
    *((_WORD *)this + 80) = 0;
    *((_BYTE *)this + 183) = 0;
  }
  v27 = *((_QWORD *)this + 17);
  if (v27)
  {
    *((_DWORD *)this + 56) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v27 + 64))(v27);
    v28 = (*(uint64_t (**)(_QWORD))(**((_QWORD **)this + 17) + 72))(*((_QWORD *)this + 17));
    if ((morphun::analysis::stemmer::FiLemmaFilter *)((char *)this + 232) != (morphun::analysis::stemmer::FiLemmaFilter *)v28)
      std::vector<int>::__assign_with_size[abi:ne180100]<int *,int *>((char *)this + 232, *(char **)v28, *(_QWORD *)(v28 + 8), (uint64_t)(*(_QWORD *)(v28 + 8) - *(_QWORD *)v28) >> 2);
    (*(void (**)(_QWORD, _QWORD, char *))(**((_QWORD **)this + 17) + 56))(*((_QWORD *)this + 17), *((unsigned int *)this + 48), (char *)this + 200);
    *((_DWORD *)this + 48) = *((_DWORD *)this + 56);
    std::vector<int>::__assign_with_size[abi:ne180100]<int *,int *>((char *)this + 200, *((char **)this + 29), *((_QWORD *)this + 30), (uint64_t)(*((_QWORD *)this + 30) - *((_QWORD *)this + 29)) >> 2);
  }
  v29 = *((_QWORD *)this + 13);
  if (!v29)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  morphun::analysis::fi::FinnishMorphology::getInflectionAnalysis((morphun::lang::StringFilterUtil *)&v64, v29, &__str, 0, v7);
  if (SHIBYTE(v65.__r_.__value_.__r.__words[2]) < 0)
    std::basic_string<char16_t>::__init_copy_ctor_external(&v62, v65.__r_.__value_.__l.__data_, v65.__r_.__value_.__l.__size_);
  else
    v62 = v65;
  morphun::analysis::fi::FinnishMorphology_InflectionAnalysis::~FinnishMorphology_InflectionAnalysis((void **)&v64);
  size = HIBYTE(v62.__r_.__value_.__r.__words[2]);
  if ((v62.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = v62.__r_.__value_.__l.__size_;
  if (size)
  {
    v31 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 15));
    v32 = (std::basic_string<char16_t> *)((char *)v31 + *(_QWORD *)(*v31 - 96));
    p_str = &v62;
  }
  else
  {
    p_str = &__str;
    v32 = &v62;
  }
  std::basic_string<char16_t>::operator=(v32, p_str);
  if (*((_QWORD *)this + 18))
  {
    v64 = 0;
    v34 = (v62.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? &v62
        : (std::basic_string<char16_t> *)v62.__r_.__value_.__r.__words[0];
    v35 = (v62.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? HIBYTE(v62.__r_.__value_.__r.__words[2])
        : v62.__r_.__value_.__l.__size_;
    if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*((_QWORD *)this + 14), (uint64_t)&v64, (const UChar *)v34, v35))
    {
      v36 = *((_QWORD *)this + 18);
      if (!v36)
      {
        v56 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
        morphun::exception::NullPointerException::NullPointerException(v56);
      }
      (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)v36 + 64))(v36, v64);
    }
  }
  if (*((_QWORD *)this + 19))
  {
    v61 = 0;
    if ((v62.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v37 = &v62;
    else
      v37 = (std::basic_string<char16_t> *)v62.__r_.__value_.__r.__words[0];
    if ((v62.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v38 = HIBYTE(v62.__r_.__value_.__r.__words[2]);
    else
      v38 = v62.__r_.__value_.__l.__size_;
    morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*((_QWORD *)this + 14), (uint64_t)&v61, (const UChar *)v37, v38);
    v60 = 0;
    if ((v62.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v39 = &v62;
    else
      v39 = (std::basic_string<char16_t> *)v62.__r_.__value_.__r.__words[0];
    if ((v62.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v40 = HIBYTE(v62.__r_.__value_.__r.__words[2]);
    else
      v40 = v62.__r_.__value_.__l.__size_;
    morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*((_QWORD *)this + 14), (uint64_t)&v60, (const UChar *)v39, v40);
    v57 = 0;
    v58 = 0;
    v59 = 0;
    v66 = &v59;
    v41 = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>(1uLL);
    v64 = (uint64_t *)v41;
    v65.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v41;
    v65.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)v41;
    v65.__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)&v41[2 * v42];
    v44 = v60;
    v43 = v61;
    v41->__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&off_1E8670E88;
    v41->__r_.__value_.__l.__size_ = v43;
    v41->__r_.__value_.__r.__words[2] = v44;
    if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(v41 + 1, v62.__r_.__value_.__l.__data_, v62.__r_.__value_.__l.__size_);
      v41 = (std::basic_string<char16_t> *)v65.__r_.__value_.__l.__size_;
    }
    else
    {
      v41[1] = v62;
    }
    v65.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)&v41[2];
    std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__swap_out_circular_buffer(&v57, &v64);
    v45 = v58;
    std::__split_buffer<morphun::analysis::tokenattributes::LemmaMapping>::~__split_buffer((uint64_t)&v64);
    v46 = *((_QWORD *)this + 19);
    v58 = v45;
    if (!v46)
    {
      v55 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(v55);
    }
    (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)v46 + 64))(v46, &v57);
    v64 = &v57;
    std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__destroy_vector::operator()[abi:ne180100]((void ***)&v64);
  }
  v47 = npc<morphun::analysis::tokenattributes::OffsetAttribute>(*((_QWORD *)this + 16));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v47 + 64))(v47, v3, v4);
  if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v62.__r_.__value_.__l.__data_);
  v15 = 1;
LABEL_73:
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  return v15;
}

void sub_1CB4F06A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,char a28)
{
  void *v28;

  __cxa_free_exception(v28);
  if (a20 < 0)
    operator delete(__p);
  if (a26 < 0)
    operator delete(a21);
  _Unwind_Resume(a1);
}

void morphun::analysis::stemmer::FiLemmaFilter::end(morphun::analysis::stemmer::FiLemmaFilter *this)
{
  uint64_t v2;
  std::vector<int> *v3;
  int *v4;

  v2 = *((_QWORD *)this + 17);
  if (v2)
  {
    (*(void (**)(uint64_t, _QWORD, char *))(*(_QWORD *)v2 + 56))(v2, *((unsigned int *)this + 48), (char *)this + 200);
    *((_QWORD *)this + 26) = *((_QWORD *)this + 25);
    std::vector<int>::shrink_to_fit((std::vector<int> *)((char *)this + 200));
    v4 = (int *)*((_QWORD *)this + 29);
    v3 = (std::vector<int> *)((char *)this + 232);
    v3->__end_ = v4;
    std::vector<int>::shrink_to_fit(v3);
  }
}

void *morphun::analysis::stemmer::FiLemmaFilter::reset(morphun::analysis::stemmer::FiLemmaFilter *this)
{
  uint64_t v2;
  void *result;

  v2 = npc<morphun::analysis::TokenStream>(*((_QWORD *)this + 12));
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
  *((_QWORD *)this + 18) = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::GrammemeAttribute>((uint64_t)this);
  *((_QWORD *)this + 19) = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::LemmaMappingAttribute>((uint64_t)this);
  result = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::SkippedOffsetsAttribute>((uint64_t)this);
  *((_QWORD *)this + 17) = result;
  return result;
}

void std::vector<int>::shrink_to_fit(std::vector<int> *this)
{
  int *value;
  int *begin;
  std::vector<int>::pointer end;
  unint64_t v5;
  char *v6;
  std::vector<int>::pointer v7;
  int *v8;
  uint64_t v9;
  int *v10;
  int *v11;
  int v12;

  value = this->__end_cap_.__value_;
  begin = this->__begin_;
  end = this->__end_;
  v5 = end - begin;
  if (v5 < value - begin)
  {
    if (end == begin)
    {
      v10 = 0;
      v8 = (int *)(4 * v5);
    }
    else
    {
      v6 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(end - begin);
      v7 = this->__begin_;
      begin = this->__end_;
      v8 = (int *)&v6[4 * v5];
      v10 = (int *)&v6[4 * v9];
      if (begin != this->__begin_)
      {
        v11 = v8;
        do
        {
          v12 = *--begin;
          *--v11 = v12;
        }
        while (begin != v7);
        begin = v7;
        goto LABEL_9;
      }
    }
    v11 = v8;
LABEL_9:
    this->__begin_ = v11;
    this->__end_ = v8;
    this->__end_cap_.__value_ = v10;
    if (begin)
      operator delete(begin);
  }
}

uint64_t npc<morphun::analysis::TokenStream>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4F0908(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::analysis::tokenattributes::CharTermAttribute>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4F0960(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::analysis::tokenattributes::OffsetAttribute>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4F09B8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

char *std::vector<int>::__assign_with_size[abi:ne180100]<int *,int *>(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  void **v12;
  char *v13;
  _BYTE *v14;
  unint64_t v15;
  char *v16;
  size_t v17;
  void *v18;
  char *v19;

  v7 = result;
  v8 = *((_QWORD *)result + 2);
  v9 = *(char **)result;
  if (a4 > (v8 - *(_QWORD *)result) >> 2)
  {
    if (v9)
    {
      *((_QWORD *)result + 1) = v9;
      operator delete(v9);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 >> 62)
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    v10 = v8 >> 1;
    if (v8 >> 1 <= a4)
      v10 = a4;
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFFCLL)
      v11 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v11 = v10;
    result = std::vector<int>::__vallocate[abi:ne180100](v7, v11);
    v13 = (char *)v7[1];
    v12 = (void **)(v7 + 1);
    v9 = v13;
LABEL_16:
    v17 = a3 - (_QWORD)__src;
    if (v17)
    {
      v18 = v9;
      v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  v12 = (void **)(result + 8);
  v14 = (_BYTE *)*((_QWORD *)result + 1);
  v15 = (v14 - v9) >> 2;
  if (v15 >= a4)
    goto LABEL_16;
  v16 = &__src[4 * v15];
  if (v14 != v9)
  {
    result = (char *)memmove(*(void **)result, __src, v14 - v9);
    v9 = (char *)*v12;
  }
  v17 = a3 - (_QWORD)v16;
  if (v17)
  {
    v18 = v9;
    v19 = v16;
LABEL_18:
    result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *v12 = &v9[v17];
  return result;
}

void std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__swap_out_circular_buffer(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *a1;
  v4 = a1[1];
  v6 = a2[1];
  for (i = 48; ; i -= 48)
  {
    v8 = v6 + i;
    if (v4 + i - 48 == v5)
      break;
    v9 = v4 + i - 96;
    std::allocator<morphun::analysis::tokenattributes::LemmaMapping>::construct[abi:ne180100]<morphun::analysis::tokenattributes::LemmaMapping,morphun::analysis::tokenattributes::LemmaMapping const&>(v8 - 96, v9);
  }
  v10 = v8 - 48;
  a2[1] = v10;
  v11 = *a1;
  *a1 = v10;
  a2[1] = v11;
  v12 = a1[1];
  a1[1] = a2[2];
  a2[2] = v12;
  v13 = a1[2];
  a1[2] = a2[3];
  a2[3] = v13;
  *a2 = a2[1];
}

uint64_t std::__split_buffer<morphun::analysis::tokenattributes::LemmaMapping>::~__split_buffer(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    v4 = *(_QWORD *)(i - 48);
    *(_QWORD *)(a1 + 16) = i - 48;
    (*(void (**)(void))(v4 + 8))();
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void std::allocator<morphun::analysis::tokenattributes::LemmaMapping>::construct[abi:ne180100]<morphun::analysis::tokenattributes::LemmaMapping,morphun::analysis::tokenattributes::LemmaMapping const&>(uint64_t a1, uint64_t a2)
{
  std::basic_string<char16_t> *v2;
  __int128 v3;

  *(_QWORD *)a1 = &off_1E8670E88;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v2 = (std::basic_string<char16_t> *)(a1 + 24);
  if (*(char *)(a2 + 47) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v2, *(const std::basic_string<char16_t>::value_type **)(a2 + 24), *(_QWORD *)(a2 + 32));
  }
  else
  {
    v3 = *(_OWORD *)(a2 + 24);
    v2->__r_.__value_.__r.__words[2] = *(_QWORD *)(a2 + 40);
    *(_OWORD *)&v2->__r_.__value_.__l.__data_ = v3;
  }
}

char *std::vector<int>::__vallocate[abi:ne180100](_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 62)
    std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[4 * v4];
  return result;
}

void morphun::dialog::SemanticUtils::to_constraintMap(morphun::dialog::SemanticUtils *this, const morphun::dialog::SemanticFeatureModel *a2, CFDictionaryRef theDict)
{
  _QWORD *exception;
  _QWORD context[2];
  void *__p[2];
  __int128 v6;

  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = (char *)this + 8;
  if (theDict)
  {
    context[0] = a2;
    context[1] = this;
    *(_OWORD *)__p = 0u;
    v6 = 0u;
    CFDictionaryApplyFunction(theDict, (CFDictionaryApplierFunction)convertSemanticFeatureAndString, context);
    if (*((_QWORD *)&v6 + 1))
    {
      exception = __cxa_allocate_exception(0x38uLL);
      morphun::exception::Throwable::Throwable((uint64_t)exception, (__int128 *)__p);
      *exception = &off_1E8673000;
    }
    if (SBYTE7(v6) < 0)
      operator delete(__p[0]);
  }
}

void sub_1CB4F0D48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void ***a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  void *v18;

  __cxa_free_exception(v18);
  if (a18 < 0)
    operator delete(__p);
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(*a10);
  _Unwind_Resume(a1);
}

void convertSemanticFeatureAndString(const __CFString *a1, const __CFString *a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  const morphun::dialog::SemanticFeature *v7;
  uint64_t **v8;
  uint64_t **v9;
  uint64_t **v10;
  char *v11;
  _QWORD *exception;
  std::basic_string<char16_t> v13;
  std::basic_string<char16_t> __p;
  __int128 v15;
  char v16;
  uint64_t v17;

  morphun::util::CFUtils::to_u16string(&v13, a1);
  npc<morphun::dialog::ConstraintMap>((uint64_t)a3);
  v5 = *a3;
  v6 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(*a3 + 8, (unsigned __int16 *)&v13);
  if (v5 + 16 == v6 || (v7 = *(const morphun::dialog::SemanticFeature **)(v6 + 56)) == 0)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::operator+<char16_t>((uint64_t)&__p, L"Input argument <", (const void **)&v13.__r_.__value_.__l.__data_);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v15, &__p, (std::basic_string<char16_t>::value_type *)">");
    morphun::exception::Throwable::Throwable((uint64_t)exception, &v15);
    *exception = &off_1E8673090;
  }
  v8 = (uint64_t **)a3[1];
  morphun::util::CFUtils::to_u16string(&__p, a2);
  v9 = (uint64_t **)std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__find_equal<morphun::dialog::SemanticFeature>((uint64_t)v8, &v17, (uint64_t)v7);
  if (!*v9)
  {
    v10 = v9;
    v11 = (char *)operator new(0x80uLL);
    *(_QWORD *)&v15 = v11;
    *((_QWORD *)&v15 + 1) = v8 + 1;
    v16 = 0;
    morphun::dialog::SemanticFeature::SemanticFeature((morphun::dialog::SemanticFeature *)(v11 + 32), v7);
    *(std::basic_string<char16_t> *)(v11 + 104) = __p;
    memset(&__p, 0, sizeof(__p));
    v16 = 1;
    std::__tree<std::u16string_view>::__insert_node_at(v8, v17, v10, (uint64_t *)v11);
    *(_QWORD *)&v15 = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100]((uint64_t)&v15);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v13.__r_.__value_.__l.__data_);
}

void sub_1CB4F0F14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  uint64_t v26;
  void *v29;
  const std::basic_string<char16_t> *v30;

  std::unique_ptr<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100]((uint64_t)&a21);
  if (a20 < 0)
    operator delete(__p);
  if (a14 < 0)
    operator delete(a9);
  if (a2 == 1)
  {
    v29 = __cxa_begin_catch(a1);
    v30 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(void *))(*(_QWORD *)v29 + 24))(v29);
    std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)(v26 + 16), v30);
    *(_QWORD *)(v26 + 40) = v26 + 16;
    __cxa_end_catch();
    JUMPOUT(0x1CB4F0E8CLL);
  }
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::dialog::ConstraintMap>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4F1064(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

morphun::analysis::fi::FinnishMorphology *morphun::analysis::fi::FinnishMorphology::FinnishMorphology(morphun::analysis::fi::FinnishMorphology *this)
{
  morphun::dictionary::Inflector *v2;
  const morphun::util::ULocale *v3;
  morphun::util::LocaleUtils *Inflector;
  morphun::dictionary::DictionaryMetaData *v5;
  const morphun::util::ULocale *v6;
  _QWORD *Dictionary;
  uint64_t v8;
  uint64_t *v9;
  int v10;
  const __int16 *v11;
  uint64_t **v12;
  uint64_t **v13;
  unsigned int v14;
  unsigned int v15;
  _WORD *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  char *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  int64x2_t *v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  void *v42;
  void *v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  unint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  void *v56;
  void *v57;
  _QWORD *v58;
  const morphun::util::ULocale *v59;
  morphun::analysis::fi::FinnishMorphology *result;
  morphun::exception::NullPointerException *exception;
  morphun::analysis::fi::FinnishMorphology *v62;
  int64x2_t *v63;
  _QWORD *v64;
  _QWORD *v65;
  _QWORD v66[2];
  void *__p;
  _QWORD *v68;
  _QWORD *v69;
  unint64_t v70;
  _QWORD *v71;

  v2 = (morphun::dictionary::Inflector *)morphun::util::LocaleUtils::FINNISH(this);
  Inflector = (morphun::util::LocaleUtils *)morphun::dictionary::Inflector::getInflector(v2, v3);
  *(_QWORD *)this = Inflector;
  v5 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::FINNISH(Inflector);
  Dictionary = morphun::dictionary::DictionaryMetaData::createDictionary(v5, v6);
  if (!Dictionary)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  *((_QWORD *)this + 1) = Dictionary;
  *((_QWORD *)this + 2) = 0;
  v62 = this;
  v8 = operator new();
  v9 = 0;
  v10 = 0;
  *(_QWORD *)(v8 + 8) = 0;
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)v8 = v8 + 8;
  v11 = aAbcdefghijklmn;
  while (1)
  {
    v12 = (uint64_t **)(v8 + 8);
    v13 = (uint64_t **)(v8 + 8);
    if (v9)
    {
      v14 = *(unsigned __int16 *)v11;
      while (1)
      {
        while (1)
        {
          v13 = (uint64_t **)v9;
          v15 = *((unsigned __int16 *)v9 + 14);
          if (v14 >= v15)
            break;
          v9 = *v13;
          v12 = v13;
          if (!*v13)
            goto LABEL_11;
        }
        if (v15 >= v14)
          break;
        v9 = v13[1];
        if (!v9)
        {
          v12 = v13 + 1;
          goto LABEL_11;
        }
      }
    }
    else
    {
LABEL_11:
      v16 = operator new(0x28uLL);
      v16[14] = *v11;
      *((_DWORD *)v16 + 8) = v10;
      *(_QWORD *)v16 = 0;
      *((_QWORD *)v16 + 1) = 0;
      *((_QWORD *)v16 + 2) = v13;
      *v12 = (uint64_t *)v16;
      v17 = **(_QWORD **)v8;
      if (v17)
      {
        *(_QWORD *)v8 = v17;
        v18 = *v12;
      }
      else
      {
        v18 = (uint64_t *)v16;
      }
      std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*(uint64_t **)(v8 + 8), v18);
      ++*(_QWORD *)(v8 + 16);
    }
    if (++v11 == (const __int16 *)&unk_1CB7301F4)
      break;
    ++v10;
    v9 = *(uint64_t **)(v8 + 8);
  }
  v19 = (uint64_t *)operator new();
  v20 = 0;
  v21 = 0;
  *v19 = 0;
  v19[1] = 0;
  v19[2] = 0;
  v22 = v19 + 2;
  do
  {
    v23 = (char *)FEEDFORWARD_PATTERN_CLASSES[v20];
    if ((unint64_t)v21 >= *v22)
    {
      v24 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v21 - *v19) >> 3);
      v25 = v24 + 1;
      if (v24 + 1 > 0xAAAAAAAAAAAAAAALL)
        std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
      if (0x5555555555555556 * ((*v22 - *v19) >> 3) > v25)
        v25 = 0x5555555555555556 * ((*v22 - *v19) >> 3);
      if (0xAAAAAAAAAAAAAAABLL * ((*v22 - *v19) >> 3) >= 0x555555555555555)
        v26 = 0xAAAAAAAAAAAAAAALL;
      else
        v26 = v25;
      v71 = v19 + 2;
      if (v26)
        v26 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v26);
      else
        v27 = 0;
      __p = (void *)v26;
      v68 = (_QWORD *)(v26 + 24 * v24);
      v69 = v68;
      v70 = v26 + 24 * v27;
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v68, v23);
      v69 += 3;
      std::vector<std::basic_string<char16_t>>::__swap_out_circular_buffer(v19, &__p);
      v21 = (_QWORD *)v19[1];
      std::__split_buffer<std::basic_string<char16_t>>::~__split_buffer((uint64_t)&__p);
    }
    else
    {
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v21, (char *)FEEDFORWARD_PATTERN_CLASSES[v20]);
      v21 += 3;
      v19[1] = (uint64_t)v21;
    }
    v19[1] = (uint64_t)v21;
    ++v20;
  }
  while (v20 != 443);
  v64 = 0;
  v65 = 0;
  v66[0] = 0;
  v28 = (int64x2_t *)operator new();
  v28->i64[0] = 0;
  v28->i64[1] = 0;
  v63 = v28;
  v28[1].i64[0] = 0;
  v29 = (char *)&FEED_FORWARD_NETWORK_FI_WEIGHT0;
  v30 = v65;
  v31 = 139776;
  do
  {
    if ((unint64_t)v30 >= v66[0])
    {
      v32 = 0xAAAAAAAAAAAAAAABLL * (v30 - v64);
      v33 = v32 + 1;
      if (v32 + 1 > 0xAAAAAAAAAAAAAAALL)
        std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
      if (0x5555555555555556 * ((uint64_t)(v66[0] - (_QWORD)v64) >> 3) > v33)
        v33 = 0x5555555555555556 * ((uint64_t)(v66[0] - (_QWORD)v64) >> 3);
      if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v66[0] - (_QWORD)v64) >> 3) >= 0x555555555555555)
        v34 = 0xAAAAAAAAAAAAAAALL;
      else
        v34 = v33;
      v71 = v66;
      if (v34)
        v34 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v34);
      else
        v35 = 0;
      v36 = (_QWORD *)(v34 + 24 * v32);
      __p = (void *)v34;
      v68 = v36;
      v69 = v36;
      v70 = v34 + 24 * v35;
      *v36 = 0;
      v36[1] = 0;
      v36[2] = 0;
      std::vector<double>::__init_with_size[abi:ne180100]<double const*,double const*>(v36, v29, (uint64_t)(v29 + 512), 0x40uLL);
      v69 += 3;
      std::vector<std::vector<long long>>::__swap_out_circular_buffer(&v64, &__p);
      v30 = v65;
      std::__split_buffer<std::vector<long long>>::~__split_buffer((uint64_t)&__p);
    }
    else
    {
      *v30 = 0;
      v30[1] = 0;
      v30[2] = 0;
      std::vector<double>::__init_with_size[abi:ne180100]<double const*,double const*>(v30, v29, (uint64_t)(v29 + 512), 0x40uLL);
      v30 += 3;
    }
    v65 = v30;
    v29 += 512;
    v31 -= 512;
  }
  while (v31);
  __p = 0;
  v68 = 0;
  v69 = 0;
  std::vector<double>::__init_with_size[abi:ne180100]<double const*,double const*>(&__p, &FEED_FORWARD_NETWORK_FI_INTERCEPT0, (uint64_t)&FEED_FORWARD_NETWORK_FI_WEIGHT1, 0x40uLL);
  v37 = v63->u64[1];
  if (v37 >= v63[1].i64[0])
  {
    v38 = std::vector<morphun::util::lemmatization::FeedForwardInflectionAnalyzer_Layer>::__emplace_back_slow_path<std::vector<std::vector<double>> &,std::vector<double>>(v63, (uint64_t *)&v64, (uint64_t)&__p);
  }
  else
  {
    morphun::util::lemmatization::FeedForwardInflectionAnalyzer_Layer::FeedForwardInflectionAnalyzer_Layer((_QWORD *)v63->i64[1], (uint64_t *)&v64, (uint64_t)&__p);
    v38 = v37 + 48;
    v63->i64[1] = v37 + 48;
  }
  v63->i64[1] = v38;
  if (__p)
    operator delete(__p);
  v40 = v64;
  v39 = v65;
  if (v65 != v64)
  {
    v41 = v65;
    do
    {
      v43 = (void *)*(v41 - 3);
      v41 -= 3;
      v42 = v43;
      if (v43)
      {
        *(v39 - 2) = v42;
        operator delete(v42);
      }
      v39 = v41;
    }
    while (v41 != v40);
  }
  v65 = v40;
  v44 = 226816;
  v45 = (char *)&FEED_FORWARD_NETWORK_FI_WEIGHT1;
  do
  {
    if ((unint64_t)v40 >= v66[0])
    {
      v46 = 0xAAAAAAAAAAAAAAABLL * (v40 - v64);
      v47 = v46 + 1;
      if (v46 + 1 > 0xAAAAAAAAAAAAAAALL)
        std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
      if (0x5555555555555556 * ((uint64_t)(v66[0] - (_QWORD)v64) >> 3) > v47)
        v47 = 0x5555555555555556 * ((uint64_t)(v66[0] - (_QWORD)v64) >> 3);
      if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v66[0] - (_QWORD)v64) >> 3) >= 0x555555555555555)
        v48 = 0xAAAAAAAAAAAAAAALL;
      else
        v48 = v47;
      v71 = v66;
      if (v48)
        v48 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v48);
      else
        v49 = 0;
      v50 = (_QWORD *)(v48 + 24 * v46);
      __p = (void *)v48;
      v68 = v50;
      v69 = v50;
      v70 = v48 + 24 * v49;
      *v50 = 0;
      v50[1] = 0;
      v50[2] = 0;
      std::vector<double>::__init_with_size[abi:ne180100]<double const*,double const*>(v50, v45, (uint64_t)(v45 + 3544), 0x1BBuLL);
      v69 += 3;
      std::vector<std::vector<long long>>::__swap_out_circular_buffer(&v64, &__p);
      v40 = v65;
      std::__split_buffer<std::vector<long long>>::~__split_buffer((uint64_t)&__p);
    }
    else
    {
      *v40 = 0;
      v40[1] = 0;
      v40[2] = 0;
      std::vector<double>::__init_with_size[abi:ne180100]<double const*,double const*>(v40, v45, (uint64_t)(v45 + 3544), 0x1BBuLL);
      v40 += 3;
    }
    v65 = v40;
    v45 += 3544;
    v44 -= 3544;
  }
  while (v44);
  __p = 0;
  v68 = 0;
  v69 = 0;
  std::vector<double>::__init_with_size[abi:ne180100]<double const*,double const*>(&__p, &FEED_FORWARD_NETWORK_FI_INTERCEPT1, (uint64_t)"N7morphun8analysis15tokenattributes15OffsetAttributeE", 0x1BBuLL);
  v51 = v63->u64[1];
  if (v51 >= v63[1].i64[0])
  {
    v52 = std::vector<morphun::util::lemmatization::FeedForwardInflectionAnalyzer_Layer>::__emplace_back_slow_path<std::vector<std::vector<double>> &,std::vector<double>>(v63, (uint64_t *)&v64, (uint64_t)&__p);
  }
  else
  {
    morphun::util::lemmatization::FeedForwardInflectionAnalyzer_Layer::FeedForwardInflectionAnalyzer_Layer((_QWORD *)v63->i64[1], (uint64_t *)&v64, (uint64_t)&__p);
    v52 = v51 + 48;
    v63->i64[1] = v51 + 48;
  }
  v63->i64[1] = v52;
  if (__p)
    operator delete(__p);
  v54 = (uint64_t)v64;
  v53 = v65;
  if (v65 != v64)
  {
    v55 = v65;
    do
    {
      v57 = (void *)*(v55 - 3);
      v55 -= 3;
      v56 = v57;
      if (v57)
      {
        *(v53 - 2) = v56;
        operator delete(v56);
      }
      v53 = v55;
    }
    while (v55 != (_QWORD *)v54);
  }
  v65 = (_QWORD *)v54;
  __p = &v64;
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  v58 = (_QWORD *)operator new();
  v59 = (const morphun::util::ULocale *)morphun::util::LocaleUtils::FINNISH((morphun::util::LocaleUtils *)v58);
  *v58 = v8;
  v58[1] = v19;
  v58[2] = v63;
  morphun::util::ULocale::ULocale((morphun::util::ULocale *)(v58 + 3), v59);
  result = v62;
  *((_QWORD *)v62 + 2) = v58;
  return result;
}

void sub_1CB4F16F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char *a15, void *__p)
{
  if (__p)
    operator delete(__p);
  a15 = &a12;
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a15);
  _Unwind_Resume(a1);
}

void sub_1CB4F17B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  std::__split_buffer<std::basic_string<char16_t>>::~__split_buffer((uint64_t)va);
  JUMPOUT(0x1CB4F17A8);
}

void sub_1CB4F17C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 8) = v1;
  JUMPOUT(0x1CB4F17A8);
}

_QWORD *std::vector<double>::__init_with_size[abi:ne180100]<double const*,double const*>(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = std::vector<morphun::dialog::DucConcept const*>::__vallocate[abi:ne180100](result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1CB4F1828(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::vector<morphun::util::lemmatization::FeedForwardInflectionAnalyzer_Layer>::__emplace_back_slow_path<std::vector<std::vector<double>> &,std::vector<double>>(int64x2_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64x2_t v17;
  char *v18;
  char *v20;
  int64x2_t v21;
  char *v22;
  int64x2_t *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * ((a1->i64[1] - a1->i64[0]) >> 4);
  v4 = v3 + 1;
  if (v3 + 1 > 0x555555555555555)
    std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
  if (0x5555555555555556 * ((a1[1].i64[0] - a1->i64[0]) >> 4) > v4)
    v4 = 0x5555555555555556 * ((a1[1].i64[0] - a1->i64[0]) >> 4);
  if (0xAAAAAAAAAAAAAAABLL * ((a1[1].i64[0] - a1->i64[0]) >> 4) >= 0x2AAAAAAAAAAAAAALL)
    v8 = 0x555555555555555;
  else
    v8 = v4;
  v23 = a1 + 1;
  if (v8)
  {
    if (v8 > 0x555555555555555)
      std::__throw_bad_array_new_length[abi:ne180100]();
    v9 = (char *)operator new(48 * v8);
  }
  else
  {
    v9 = 0;
  }
  v20 = v9;
  v21.i64[0] = (uint64_t)&v9[48 * v3];
  v22 = &v9[48 * v8];
  morphun::util::lemmatization::FeedForwardInflectionAnalyzer_Layer::FeedForwardInflectionAnalyzer_Layer(v21.i64[0], a2, a3);
  v10 = v21.i64[0];
  v11 = v21.i64[0] + 48;
  v21.i64[1] = v21.i64[0] + 48;
  v13 = a1->i64[0];
  v12 = a1->u64[1];
  if (v12 == a1->i64[0])
  {
    v17 = vdupq_n_s64(v12);
  }
  else
  {
    v14 = 0;
    do
    {
      v15 = v10 + v14;
      v16 = v12 + v14;
      *(_QWORD *)(v15 - 48) = 0;
      *(_QWORD *)(v15 - 40) = 0;
      *(_QWORD *)(v15 - 32) = 0;
      *(_OWORD *)(v15 - 48) = *(_OWORD *)(v12 + v14 - 48);
      *(_QWORD *)(v15 - 32) = *(_QWORD *)(v12 + v14 - 32);
      *(_QWORD *)(v16 - 48) = 0;
      *(_QWORD *)(v16 - 40) = 0;
      *(_QWORD *)(v16 - 32) = 0;
      *(_QWORD *)(v15 - 24) = 0;
      *(_QWORD *)(v15 - 16) = 0;
      *(_QWORD *)(v15 - 8) = 0;
      *(_OWORD *)(v15 - 24) = *(_OWORD *)(v12 + v14 - 24);
      *(_QWORD *)(v15 - 8) = *(_QWORD *)(v12 + v14 - 8);
      *(_QWORD *)(v16 - 24) = 0;
      *(_QWORD *)(v16 - 16) = 0;
      *(_QWORD *)(v16 - 8) = 0;
      v14 -= 48;
    }
    while (v12 + v14 != v13);
    v10 += v14;
    v17 = *a1;
    v11 = v21.i64[1];
  }
  a1->i64[0] = v10;
  a1->i64[1] = v11;
  v21 = v17;
  v18 = (char *)a1[1].i64[0];
  a1[1].i64[0] = (uint64_t)v22;
  v22 = v18;
  v20 = (char *)v17.i64[0];
  std::__split_buffer<morphun::util::lemmatization::FeedForwardInflectionAnalyzer_Layer>::~__split_buffer((uint64_t)&v20);
  return v11;
}

void sub_1CB4F19DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<morphun::util::lemmatization::FeedForwardInflectionAnalyzer_Layer>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t std::__split_buffer<morphun::util::lemmatization::FeedForwardInflectionAnalyzer_Layer>::~__split_buffer(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 48;
    std::allocator<morphun::util::lemmatization::FeedForwardInflectionAnalyzer_Layer>::destroy[abi:ne180100](i - 48);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void std::allocator<morphun::util::lemmatization::FeedForwardInflectionAnalyzer_Layer>::destroy[abi:ne180100](uint64_t a1)
{
  void *v2;
  void **v3;

  v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(_QWORD *)(a1 + 32) = v2;
    operator delete(v2);
  }
  v3 = (void **)a1;
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100](&v3);
}

uint64_t morphun::analysis::fi::FinnishMorphology::UNLEMMATIZABLE(morphun::analysis::fi::FinnishMorphology *this)
{
  unsigned __int8 v1;
  uint64_t result;
  morphun::analysis::fi::FinnishMorphology *v3;
  morphun::exception::NullPointerException *exception;

  if ((v1 & 1) == 0)
  {
    if ((_DWORD)v3)
    {
      morphun::analysis::fi::FinnishMorphology::UNLEMMATIZABLE(void)::UNLEMMATIZABLE_ = morphun::analysis::fi::FinnishMorphology::createUnlemmatizableList(v3);
    }
  }
  result = morphun::analysis::fi::FinnishMorphology::UNLEMMATIZABLE(void)::UNLEMMATIZABLE_;
  if (!morphun::analysis::fi::FinnishMorphology::UNLEMMATIZABLE(void)::UNLEMMATIZABLE_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4F1B00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::fi::FinnishMorphology::createUnlemmatizableList(morphun::analysis::fi::FinnishMorphology *this)
{
  uint64_t v1;
  void **v2;
  std::basic_string<char16_t>::size_type v3;
  void **v4;
  std::basic_string<char16_t>::size_type v5;
  std::basic_string<char16_t> *v6;
  std::basic_string<char16_t>::size_type size;
  _WORD *String;
  uint64_t v9;
  uint64_t v10;
  unsigned __int16 *v13;
  std::basic_string<char16_t>::size_type v14;
  std::basic_string<char16_t> v16;
  uint64_t v17;
  _WORD *v18;
  uint64_t v19;
  int v20;
  int v21;
  void *__p[2];
  unsigned __int8 v23;
  void *v24[2];
  unsigned __int8 v25;
  std::basic_string<char16_t> __dst;
  std::basic_string<char16_t> v27;
  std::basic_string<char16_t> v28;

  v1 = operator new();
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)v1 = v1 + 8;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"/com/apple/siri/cortex/nl/analysis/");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v24, (char *)L"unlemmatizable");
  if ((v25 & 0x80u) == 0)
    v2 = v24;
  else
    v2 = (void **)v24[0];
  if ((v25 & 0x80u) == 0)
    v3 = v25;
  else
    v3 = (std::basic_string<char16_t>::size_type)v24[1];
  std::basic_string<char16_t>::append(&__dst, (const std::basic_string<char16_t>::value_type *)v2, v3);
  v27 = __dst;
  memset(&__dst, 0, sizeof(__dst));
  std::basic_string<char16_t>::append(&v27, L"_fi", 3uLL);
  v16 = v27;
  memset(&v27, 0, sizeof(v27));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, ".");
  if ((v23 & 0x80u) == 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  if ((v23 & 0x80u) == 0)
    v5 = v23;
  else
    v5 = (std::basic_string<char16_t>::size_type)__p[1];
  std::basic_string<char16_t>::append(&v16, (const std::basic_string<char16_t>::value_type *)v4, v5);
  v28 = v16;
  memset(&v16, 0, sizeof(v16));
  if ((char)v23 < 0)
  {
    operator delete(__p[0]);
    if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v16.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v27.__r_.__value_.__l.__data_);
  if ((char)v25 < 0)
    operator delete(v24[0]);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v6 = &v28;
  else
    v6 = (std::basic_string<char16_t> *)v28.__r_.__value_.__r.__words[0];
  if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v28.__r_.__value_.__r.__words[2]);
  else
    size = v28.__r_.__value_.__l.__size_;
  String = (_WORD *)morphun::resources::DataResource::getString((uint64_t *)v6, size, 0);
  if (*String)
  {
    v9 = 0;
    do
      v10 = v9 + 1;
    while (String[++v9]);
  }
  else
  {
    v10 = 0;
  }
  *(_OWORD *)&v16.__r_.__value_.__l.__data_ = 0uLL;
  v16.__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)"\n";
  v17 = 1;
  v18 = String;
  v19 = v10;
  v20 = v10;
  v21 = 0;
  if ((int)v10 >= 1)
    morphun::util::DelimitedStringIterator::getNext((UChar *)&v16);
  while (v21 < v20 || v16.__r_.__value_.__l.__size_ != 0)
  {
    v13 = (unsigned __int16 *)morphun::util::StringViewUtils::trim((uint64_t)v16.__r_.__value_.__l.__data_, v16.__r_.__value_.__l.__size_);
    v27.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v13;
    v27.__r_.__value_.__l.__size_ = v14;
    if (v14)
    {
      if (*v13 != 35)
        std::__tree<std::u16string_view>::__emplace_unique_key_args<std::u16string_view,std::u16string_view const&>((uint64_t **)v1, v13, v14, &v27);
    }
    morphun::util::DelimitedStringIterator::operator++((morphun::util::DelimitedStringIterator *)&v16);
  }
  if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v28.__r_.__value_.__l.__data_);
  return v1;
}

void sub_1CB4F1D80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, __int128 a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  uint64_t v35;
  _QWORD *exception;

  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    exception = __cxa_allocate_exception(0x38uLL);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&a9, (const void **)(v35 - 64), L" could not be read.");
    morphun::exception::Throwable::Throwable((uint64_t)exception, &a9);
    *exception = &off_1E8672FA0;
  }
  if (*(char *)(v35 - 41) < 0)
    operator delete(*(void **)(v35 - 64));
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::fi::FinnishMorphology::getInstance(morphun::analysis::fi::FinnishMorphology *this)
{
  unsigned __int8 v1;
  morphun::analysis::fi::FinnishMorphology *v3;

  if ((v1 & 1) == 0
  {
    v3 = (morphun::analysis::fi::FinnishMorphology *)operator new();
    morphun::analysis::fi::FinnishMorphology::FinnishMorphology(v3);
    morphun::analysis::fi::FinnishMorphology::getInstance(void)::INSTANCE_ = (uint64_t)v3;
  }
  return morphun::analysis::fi::FinnishMorphology::getInstance(void)::INSTANCE_;
}

void sub_1CB4F1F34(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x60C40AA6EF139);
  _Unwind_Resume(a1);
}

void morphun::analysis::fi::FinnishMorphology::getLemma(uint64_t a1, uint64_t *a2, std::basic_string<char16_t> *a3, uint64_t a4, uint64_t a5, unsigned __int16 *a6)
{
  uint64_t v9;
  uint64_t v10;
  void *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  __int16 KeyId;
  unsigned __int8 v16;
  int *v17;
  std::allocator<char16_t> *v18;
  int v19;
  BOOL v20;
  std::basic_string<char16_t> *v21;
  unint64_t size;
  unint64_t v23;
  unsigned __int16 *v24;
  std::basic_string<char16_t>::size_type v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  int v30;
  std::basic_string<char16_t> *p_p;
  std::basic_string<char16_t>::size_type v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t i;
  morphun::exception::NullPointerException *exception;
  std::basic_string<char16_t> __p;
  int *v39[3];
  _OWORD v40[3];
  char v41;
  _QWORD v42[2];
  _BYTE __dst[32];
  __int128 v44;
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  memset(v42, 0, 15);
  if (a4 == a5)
  {
    v11 = 0;
    LOBYTE(v12) = 0;
LABEL_46:
    v34 = v42[0];
    *(_QWORD *)a1 = v11;
    *(_QWORD *)(a1 + 8) = v34;
    *(_QWORD *)(a1 + 15) = *(_QWORD *)((char *)v42 + 7);
    *(_BYTE *)(a1 + 23) = v12;
    return;
  }
  v9 = *a2;
  if (*(char *)(a4 + 23) < 0)
  {
    v13 = a4;
    a4 = *(_QWORD *)a4;
    v10 = *(_QWORD *)(v13 + 8);
  }
  else
  {
    LODWORD(v10) = *(unsigned __int8 *)(a4 + 23);
  }
  v14 = v9 + 8;
  KeyId = morphun::dictionary::metadata::MarisaTrie<int>::getKeyId((marisa::Trie *)(v9 + 248), a4, v10);
  morphun::dictionary::Inflector_MMappedDictionary::getInflectionPattern((morphun::dictionary::Inflector_MMappedDictionary *)__dst, v14, KeyId);
  v40[0] = *(_OWORD *)__dst;
  v40[1] = *(_OWORD *)&__dst[16];
  v40[2] = v44;
  v41 = 1;
  if (!*(_WORD *)&__dst[18])
  {
    if (SHIBYTE(a3->__r_.__value_.__r.__words[2]) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)a1, a3->__r_.__value_.__l.__data_, a3->__r_.__value_.__l.__size_);
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)&a3->__r_.__value_.__l.__data_;
      *(_QWORD *)(a1 + 16) = *((_QWORD *)&a3->__r_.__value_.__l + 2);
    }
    return;
  }
  if ((v16 & 1) == 0
  {
    v35 = operator new();
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, (char *)L"nominative");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst[24], (char *)L"singular");
    std::vector<std::basic_string<char16_t>>::vector[abi:ne180100](v35, (__int128 *)__dst, 2uLL);
    for (i = 0; i != -48; i -= 24)
    {
      if (*((char *)&v44 + i + 15) < 0)
        operator delete(*(void **)&__dst[i + 24]);
    }
    morphun::analysis::fi::FinnishMorphology::LEMMA_PROPERTIES(void)::LEMMA_PROPERTIES_ = v35;
  }
  if (!morphun::analysis::fi::FinnishMorphology::LEMMA_PROPERTIES(void)::LEMMA_PROPERTIES_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  morphun::dictionary::Inflector_InflectionPattern::constrain((unint64_t *)v39, (uint64_t)v40, (uint64_t *)morphun::analysis::fi::FinnishMorphology::LEMMA_PROPERTIES(void)::LEMMA_PROPERTIES_, 1);
  v17 = v39[0];
  if (v39[0] == v39[1])
  {
    v11 = 0;
    LOBYTE(v12) = 0;
LABEL_44:
    if (v17)
      operator delete(v17);
    goto LABEL_46;
  }
  morphun::dictionary::Inflector_Inflection::inflect((std::basic_string<char16_t> *)__dst, v39[0], a3);
  v42[0] = *(_QWORD *)&__dst[8];
  v11 = *(void **)__dst;
  *(_QWORD *)((char *)v42 + 7) = *(_QWORD *)&__dst[15];
  v12 = __dst[23];
  v19 = SHIBYTE(a3->__r_.__value_.__r.__words[2]);
  v20 = v19 < 0;
  if (v19 >= 0)
    v21 = a3;
  else
    v21 = (std::basic_string<char16_t> *)a3->__r_.__value_.__r.__words[0];
  if (v20)
    size = a3->__r_.__value_.__l.__size_;
  else
    size = HIBYTE(a3->__r_.__value_.__r.__words[2]);
  v23 = *((unsigned __int8 *)a6 + 23);
  if ((v23 & 0x80u) == 0)
    v24 = a6;
  else
    v24 = *(unsigned __int16 **)a6;
  if ((v23 & 0x80u) != 0)
    v23 = *((_QWORD *)a6 + 1);
  v25 = size - v23;
  if (size < v23)
    goto LABEL_44;
  if (v23)
  {
    v26 = -(uint64_t)v23;
    v27 = (uint64_t)v21 + 2 * size;
    do
    {
      v28 = *(unsigned __int16 *)(v27 + 2 * v26);
      v30 = *v24++;
      v29 = v30;
    }
    while (v30 == v28 && v26++ != -1);
    if (v29 != v28)
      goto LABEL_44;
  }
  std::basic_string<char16_t>::basic_string((std::basic_string<char16_t> *)__dst, a3, 0, v25, v18);
  morphun::dictionary::metadata::StringContainer::getString(*(morphun::dictionary::metadata::StringContainer **)(*(_QWORD *)v17 + 40), v17[2], &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v33 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v33 = __p.__r_.__value_.__l.__size_;
  std::basic_string<char16_t>::append((std::basic_string<char16_t> *)__dst, (const std::basic_string<char16_t>::value_type *)p_p, v33);
  *(_OWORD *)a1 = *(_OWORD *)__dst;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)&__dst[16];
  memset(__dst, 0, 24);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((__dst[23] & 0x80000000) != 0)
      operator delete(*(void **)__dst);
  }
  operator delete(v17);
  if (v12 < 0)
    operator delete(v11);
}

void sub_1CB4F22D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;

  v35 = 0;
  while (1)
  {
    if (*(char *)(v33 + v35 + 47) < 0)
      operator delete(*(void **)(v33 + v35 + 24));
    v35 -= 24;
    if (v35 == -48)
    {
      MEMORY[0x1D179D2EC](v32, 0x20C40960023A9);
      _Unwind_Resume(a1);
    }
  }
}

void morphun::analysis::fi::FinnishMorphology::getInflectionAnalysis(morphun::lang::StringFilterUtil *CombinedBinaryType, uint64_t a2, std::basic_string<char16_t> *__str, char a4, std::allocator<char16_t> *a5)
{
  std::basic_string<char16_t> *v5;
  uint64_t v6;
  std::basic_string<char16_t>::size_type v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;
  std::basic_string<char16_t>::size_type v11;
  uint64_t *v12;
  uint64_t InflectionLikelihoods;
  std::allocator<char16_t> *v14;
  uint64_t v15;
  std::basic_string<char16_t> *v16;
  int v17;
  morphun::analysis::fi::FinnishMorphology *Key;
  __int128 v19;
  std::basic_string<char16_t>::size_type v20;
  char v21;
  std::basic_string<char16_t>::size_type v22;
  uint64_t v23;
  std::basic_string<char16_t> *v24;
  uint64_t v25;
  int v26;
  int v27;
  BOOL v28;
  std::basic_string<char16_t>::size_type v29;
  double Likelihood;
  std::basic_string<char16_t>::size_type v31;
  uint64_t v32;
  int v33;
  unsigned __int16 *v34;
  std::basic_string<char16_t> *v35;
  uint64_t v36;
  int v37;
  std::basic_string<char16_t> *v38;
  std::basic_string<char16_t>::size_type v39;
  morphun::analysis::fi::FinnishMorphology *v40;
  int v41;
  std::basic_string<char16_t>::size_type v43;
  uint64_t v44;
  int v45;
  std::basic_string<char16_t> *v46;
  std::basic_string<char16_t>::size_type v47;
  morphun::analysis::fi::FinnishMorphology *v48;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t> *v50;
  char *v51;
  uint64_t v52;
  std::basic_string<char16_t>::size_type v53;
  std::basic_string<char16_t> *v54;
  int v55;
  __int128 v56;
  uint64_t v57;
  int v58;
  std::allocator<char16_t> *v59;
  std::basic_string<char16_t>::size_type v60;
  int v61;
  const UChar *v62;
  uint64_t v63;
  int v64;
  int v65;
  uint64_t v66;
  const UChar *v67;
  std::basic_string<char16_t>::size_type v68;
  int v69;
  void *v70;
  morphun::exception::NullPointerException *exception;
  uint64_t v72;
  uint64_t v73;
  std::basic_string<char16_t>::size_type v74;
  __int128 __p;
  uint64_t v78;
  std::basic_string<char16_t> v79;
  std::basic_string<char16_t> v80;
  std::basic_string<char16_t> v81;
  std::basic_string<char16_t> *v82;
  char v83;
  std::basic_string<char16_t> v84;
  std::basic_string<char16_t> v85;
  uint64_t v86;
  std::basic_string<char16_t> v87;
  __int128 v88;

  v5 = __str;
  v6 = (uint64_t)CombinedBinaryType;
  *(_QWORD *)&v88 = *MEMORY[0x1E0C80C00];
  if ((a4 & 1) == 0)
  {
    size = HIBYTE(__str->__r_.__value_.__r.__words[2]);
    if ((size & 0x80u) == 0)
      v50 = __str;
    else
      v50 = (std::basic_string<char16_t> *)__str->__r_.__value_.__r.__words[0];
    if ((size & 0x80u) != 0)
      size = __str->__r_.__value_.__l.__size_;
    if (size)
    {
      v51 = (char *)v50;
      while (*(_WORD *)v51 != 58)
      {
        v51 += 2;
        if (!--size)
          goto LABEL_127;
      }
      v52 = v51 - (char *)v50;
      if (v52 != -2)
      {
        v53 = v52 >> 1;
        std::basic_string<char16_t>::basic_string(&v84, __str, (v52 >> 1) + 1, 0xFFFFFFFFFFFFFFFFLL, a5);
        if ((v84.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v54 = &v84;
        else
          v54 = (std::basic_string<char16_t> *)v84.__r_.__value_.__r.__words[0];
        if ((v84.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v55 = HIBYTE(v84.__r_.__value_.__r.__words[2]);
        else
          v55 = v84.__r_.__value_.__r.__words[1];
        morphun::dictionary::Inflector::getInflectionPatternsBySuffix((__int128 **)&v87, *(unsigned __int8 **)a2, (uint64_t)v54, v55);
        v56 = *(_OWORD *)&v87.__r_.__value_.__l.__data_;
        if (v87.__r_.__value_.__r.__words[0] != v87.__r_.__value_.__l.__size_)
        {
          v57 = v87.__r_.__value_.__r.__words[0];
          while (*(__int16 *)(v57 + 18) < 1)
          {
LABEL_122:
            v57 += 48;
            if (v57 == *((_QWORD *)&v56 + 1))
              goto LABEL_123;
          }
          v58 = 0;
          while (1)
          {
            morphun::dictionary::Inflector_InflectionPattern::getInflectionAtPosition((morphun::dictionary::Inflector_InflectionPattern *)&__p, v57, v58);
            morphun::dictionary::metadata::StringContainer::getString(*(morphun::dictionary::metadata::StringContainer **)(__p + 40), SDWORD2(__p), &v80);
            if ((v80.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              v60 = HIBYTE(v80.__r_.__value_.__r.__words[2]);
            else
              v60 = v80.__r_.__value_.__l.__size_;
            if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v80.__r_.__value_.__l.__data_);
            if (!v60)
              break;
            if (++v58 >= *(__int16 *)(v57 + 18))
              goto LABEL_122;
          }
          v5 = __str;
          std::basic_string<char16_t>::basic_string(&v85, __str, 0, v53, v59);
          if ((_QWORD)v56)
            operator delete((void *)v56);
          if (SHIBYTE(v84.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v84.__r_.__value_.__l.__data_);
          v68 = HIBYTE(v85.__r_.__value_.__r.__words[2]);
          if ((v85.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
            v68 = v85.__r_.__value_.__l.__size_;
          if (v68)
          {
            morphun::analysis::fi::FinnishMorphology_InflectionAnalysis::FinnishMorphology_InflectionAnalysis(v6, (__int128 *)&v85);
            v64 = 1;
            goto LABEL_138;
          }
LABEL_128:
          v61 = SHIBYTE(v5->__r_.__value_.__r.__words[2]);
          if (v61 >= 0)
            v62 = (const UChar *)v5;
          else
            v62 = (const UChar *)v5->__r_.__value_.__r.__words[0];
          if (v61 >= 0)
            v63 = HIBYTE(v5->__r_.__value_.__r.__words[2]);
          else
            v63 = v5->__r_.__value_.__l.__size_;
          morphun::dictionary::DictionaryMetaData::getPropertyValues(*(_QWORD *)(a2 + 8), v62, v63, L"lemma-form", 0xAuLL, (uint64_t *)&v80);
          if (v80.__r_.__value_.__r.__words[0] == v80.__r_.__value_.__l.__size_)
          {
            v64 = 0;
          }
          else
          {
            morphun::analysis::fi::FinnishMorphology_InflectionAnalysis::FinnishMorphology_InflectionAnalysis(v6, (__int128 *)v80.__r_.__value_.__l.__data_);
            v64 = 1;
          }
          *(_QWORD *)&__p = &v80;
          std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
LABEL_138:
          if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0)
          {
            operator delete(v85.__r_.__value_.__l.__data_);
            if (v64)
              return;
          }
          else if (v64)
          {
            return;
          }
          v65 = SHIBYTE(v5->__r_.__value_.__r.__words[2]);
          if (v65 >= 0)
            v7 = HIBYTE(v5->__r_.__value_.__r.__words[2]);
          else
            v7 = v5->__r_.__value_.__l.__size_;
          if ((int)v7 < 4)
            goto LABEL_150;
          v66 = *(_QWORD *)(a2 + 8);
          v67 = v65 >= 0 ? (const UChar *)v5 : (const UChar *)v5->__r_.__value_.__r.__words[0];
          v80.__r_.__value_.__r.__words[0] = 0;
          CombinedBinaryType = (morphun::lang::StringFilterUtil *)morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v66, (uint64_t)&v80, v67, v7);
          if (CombinedBinaryType)
            goto LABEL_150;
          goto LABEL_6;
        }
LABEL_123:
        if ((_QWORD)v56)
          operator delete((void *)v56);
        v5 = __str;
        if (SHIBYTE(v84.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v84.__r_.__value_.__l.__data_);
      }
    }
LABEL_127:
    memset(&v85, 0, sizeof(v85));
    goto LABEL_128;
  }
  if ((__str->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    LODWORD(v7) = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  else
    v7 = __str->__r_.__value_.__l.__size_;
  if ((int)v7 <= 3)
    goto LABEL_150;
LABEL_6:
  v8 = (_QWORD *)morphun::lang::StringFilterUtil::LATIN_SCRIPT(CombinedBinaryType);
  v9 = SHIBYTE(v5->__r_.__value_.__r.__words[2]);
  if (v9 >= 0)
    v10 = (uint64_t)v5;
  else
    v10 = v5->__r_.__value_.__r.__words[0];
  if (v9 >= 0)
    LODWORD(v11) = HIBYTE(v5->__r_.__value_.__r.__words[2]);
  else
    v11 = v5->__r_.__value_.__l.__size_;
  if (!morphun::util::UnicodeSetUtils::containsSome(v8, v10, v11))
    goto LABEL_150;
  v12 = *(uint64_t **)(a2 + 16);
  if (!v12)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  InflectionLikelihoods = morphun::util::lemmatization::FeedForwardInflectionAnalyzer::getInflectionLikelihoods(v12, (uint64_t)v5);
  v72 = v6;
  __p = 0uLL;
  v78 = 0;
  memset(&v84, 0, sizeof(v84));
  morphun::util::lemmatization::InflectionIdentifier::InflectionIdentifier((uint64_t)&v80, &__p, (__int128 *)&v84);
  if ((v7 - 3) >= 0xA)
    v15 = 10;
  else
    v15 = (v7 - 3);
  v73 = (int)v7;
  v74 = v7;
  v5 = __str;
  do
  {
    std::basic_string<char16_t>::basic_string(&v84, v5, v73 - v15, v74, v14);
    if ((v84.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v16 = &v84;
    else
      v16 = (std::basic_string<char16_t> *)v84.__r_.__value_.__r.__words[0];
    if ((v84.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v17 = HIBYTE(v84.__r_.__value_.__r.__words[2]);
    else
      v17 = v84.__r_.__value_.__r.__words[1];
    morphun::dictionary::Inflector::getInflectionPatternsBySuffix((__int128 **)&v87, *(unsigned __int8 **)a2, (uint64_t)v16, v17);
    v19 = *(_OWORD *)&v87.__r_.__value_.__l.__data_;
    v20 = v87.__r_.__value_.__r.__words[0];
    if (v87.__r_.__value_.__r.__words[0] != v87.__r_.__value_.__l.__size_)
    {
      do
      {
        Key = (morphun::analysis::fi::FinnishMorphology *)morphun::dictionary::metadata::MarisaTrie<int>::getKey(&v85, (marisa::Trie *)(*(_QWORD *)(v20 + 32) + 240), *(_DWORD *)v20);
        v21 = HIBYTE(v85.__r_.__value_.__r.__words[2]);
        if (*(int *)(*(_QWORD *)(*(_QWORD *)(v20 + 32) + 232) + 4 * *(int *)(v20 + 4)) >= 5)
        {
          v22 = v85.__r_.__value_.__l.__size_;
          if ((v85.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v22 = HIBYTE(v85.__r_.__value_.__r.__words[2]);
          if (v22 < 2)
            goto LABEL_38;
          v23 = 0;
          v24 = (std::basic_string<char16_t> *)v85.__r_.__value_.__r.__words[0];
          if ((v85.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v24 = &v85;
          v25 = (uint64_t)v24 + 2 * v22 - 4;
          do
          {
            v26 = *(unsigned __int16 *)(v25 + v23);
            v27 = *(unsigned __int16 *)&asc_1CB7301A2[v23];
            v28 = v27 != v26 || v23 == 2;
            v23 += 2;
          }
          while (!v28);
          if (v27 != v26)
          {
LABEL_38:
            v29 = HIBYTE(v81.__r_.__value_.__r.__words[2]);
            if ((v81.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
              v29 = v81.__r_.__value_.__l.__size_;
            if (!v29
              || (Likelihood = morphun::util::lemmatization::FeedForwardInflectionAnalyzer_InflectionLikelihoods::getLikelihood(InflectionLikelihoods, (unsigned __int16 *)&v85), Likelihood > morphun::util::lemmatization::FeedForwardInflectionAnalyzer_InflectionLikelihoods::getLikelihood(InflectionLikelihoods, (unsigned __int16 *)&v81)))
            {
              morphun::util::lemmatization::InflectionIdentifier::InflectionIdentifier((uint64_t)&__p, (__int128 *)&v84, (__int128 *)&v85);
              std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)&v80.__r_.__value_.__r.__words[1], (const std::basic_string<char16_t> *)((char *)&__p + 8));
              std::basic_string<char16_t>::operator=(&v81, &v79);
              morphun::util::lemmatization::InflectionIdentifier::~InflectionIdentifier((void **)&__p);
              v21 = HIBYTE(v85.__r_.__value_.__r.__words[2]);
            }
          }
        }
        if (v21 < 0)
          operator delete(v85.__r_.__value_.__l.__data_);
        v20 += 48;
      }
      while (v20 != *((_QWORD *)&v19 + 1));
    }
    if ((_QWORD)v19)
      operator delete((void *)v19);
    v31 = HIBYTE(v81.__r_.__value_.__r.__words[2]);
    if ((v81.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v31 = v81.__r_.__value_.__l.__size_;
    v5 = __str;
    if (v31)
    {
      v32 = *(unsigned __int8 *)(InflectionLikelihoods + 31);
      v33 = (char)v32;
      if ((v32 & 0x80u) != 0)
        v32 = *(_QWORD *)(InflectionLikelihoods + 16);
      if (v31 == v32)
      {
        if (v33 >= 0)
          v34 = (unsigned __int16 *)(InflectionLikelihoods + 8);
        else
          v34 = *(unsigned __int16 **)(InflectionLikelihoods + 8);
        if ((v81.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v35 = &v81;
        else
          v35 = (std::basic_string<char16_t> *)v81.__r_.__value_.__r.__words[0];
        while (*v34 == (unsigned __int16)v35->__r_.__value_.__s.__data_[0])
        {
          v35 = (std::basic_string<char16_t> *)((char *)v35 + 2);
          ++v34;
          if (!--v31)
          {
            v36 = morphun::analysis::fi::FinnishMorphology::UNLEMMATIZABLE(Key);
            v37 = SHIBYTE(__str->__r_.__value_.__r.__words[2]);
            if (v37 >= 0)
              v38 = __str;
            else
              v38 = (std::basic_string<char16_t> *)__str->__r_.__value_.__r.__words[0];
            if (v37 >= 0)
              v39 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
            else
              v39 = __str->__r_.__value_.__l.__size_;
            v40 = (morphun::analysis::fi::FinnishMorphology *)std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(v36, (unsigned __int16 *)v38, v39);
            Key = (morphun::analysis::fi::FinnishMorphology *)morphun::analysis::fi::FinnishMorphology::UNLEMMATIZABLE(v40);
            if ((morphun::analysis::fi::FinnishMorphology *)((char *)Key + 8) != v40)
              break;
            if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0)
              std::basic_string<char16_t>::__init_copy_ctor_external(&v85, v81.__r_.__value_.__l.__data_, v81.__r_.__value_.__l.__size_);
            else
              v85 = v81;
            memset(&v87, 0, sizeof(v87));
            v82 = &v87;
            v83 = 0;
            v87.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x18uLL);
            v87.__r_.__value_.__l.__size_ = v87.__r_.__value_.__r.__words[0];
            v87.__r_.__value_.__r.__words[2] = v87.__r_.__value_.__r.__words[0] + 24;
            v87.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v87.__r_.__value_.__r.__words[2], (__int128 *)&v85, (__int128 *)&v86, (std::basic_string<char16_t> *)v87.__r_.__value_.__l.__data_);
            morphun::analysis::fi::FinnishMorphology::getLemma((uint64_t)&__p, (uint64_t *)a2, __str, (uint64_t)v87.__r_.__value_.__l.__data_, v87.__r_.__value_.__l.__size_, (unsigned __int16 *)&v80.__r_.__value_.__s.__data_[4]);
            v82 = &v87;
            std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v82);
            if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v85.__r_.__value_.__l.__data_);
            v41 = SHIBYTE(v78);
            if (SHIBYTE(v78) < 0)
            {
              if (!*((_QWORD *)&__p + 1))
              {
                operator delete((void *)__p);
                break;
              }
            }
            else if (!HIBYTE(v78))
            {
              break;
            }
            morphun::analysis::fi::FinnishMorphology_InflectionAnalysis::FinnishMorphology_InflectionAnalysis(v72, &__p, (uint64_t)&v80, (__int128 *)&v84);
            if (v41 < 0)
              operator delete((void *)__p);
            if (SHIBYTE(v84.__r_.__value_.__r.__words[2]) < 0)
            {
              v70 = (void *)v84.__r_.__value_.__r.__words[0];
              goto LABEL_175;
            }
            goto LABEL_176;
          }
        }
      }
    }
    if (SHIBYTE(v84.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v84.__r_.__value_.__l.__data_);
  }
  while (v15-- >= 2);
  v43 = HIBYTE(v81.__r_.__value_.__r.__words[2]);
  if ((v81.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v43 = v81.__r_.__value_.__l.__size_;
  v6 = v72;
  if (!v43
    || ((v44 = morphun::analysis::fi::FinnishMorphology::UNLEMMATIZABLE(Key),
         v45 = SHIBYTE(__str->__r_.__value_.__r.__words[2]),
         v45 >= 0)
      ? (v46 = __str)
      : (v46 = (std::basic_string<char16_t> *)__str->__r_.__value_.__r.__words[0]),
        v45 >= 0 ? (v47 = HIBYTE(__str->__r_.__value_.__r.__words[2])) : (v47 = __str->__r_.__value_.__l.__size_),
        v48 = (morphun::analysis::fi::FinnishMorphology *)std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(v44, (unsigned __int16 *)v46, v47), (morphun::analysis::fi::FinnishMorphology *)(morphun::analysis::fi::FinnishMorphology::UNLEMMATIZABLE(v48) + 8) != v48))
  {
LABEL_93:
    morphun::util::lemmatization::InflectionIdentifier::~InflectionIdentifier((void **)&v80.__r_.__value_.__l.__data_);
    (*(void (**)(uint64_t))(*(_QWORD *)InflectionLikelihoods + 16))(InflectionLikelihoods);
LABEL_150:
    morphun::analysis::fi::FinnishMorphology_InflectionAnalysis::FinnishMorphology_InflectionAnalysis(v6, (__int128 *)v5);
    return;
  }
  if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0)
    std::basic_string<char16_t>::__init_copy_ctor_external(&v87, v81.__r_.__value_.__l.__data_, v81.__r_.__value_.__l.__size_);
  else
    v87 = v81;
  memset(&v84, 0, sizeof(v84));
  v85.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v84;
  LOBYTE(v85.__r_.__value_.__r.__words[1]) = 0;
  v84.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x18uLL);
  v84.__r_.__value_.__l.__size_ = v84.__r_.__value_.__r.__words[0];
  v84.__r_.__value_.__r.__words[2] = v84.__r_.__value_.__r.__words[0] + 24;
  v84.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v84.__r_.__value_.__r.__words[2], (__int128 *)&v87, &v88, (std::basic_string<char16_t> *)v84.__r_.__value_.__l.__data_);
  morphun::analysis::fi::FinnishMorphology::getLemma((uint64_t)&__p, (uint64_t *)a2, __str, (uint64_t)v84.__r_.__value_.__l.__data_, v84.__r_.__value_.__l.__size_, (unsigned __int16 *)&v80.__r_.__value_.__s.__data_[4]);
  v85.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v84;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v85);
  if (SHIBYTE(v87.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v87.__r_.__value_.__l.__data_);
  v69 = SHIBYTE(v78);
  if (SHIBYTE(v78) < 0)
  {
    if (!*((_QWORD *)&__p + 1))
    {
      operator delete((void *)__p);
      goto LABEL_93;
    }
  }
  else if (!HIBYTE(v78))
  {
    goto LABEL_93;
  }
  morphun::analysis::fi::FinnishMorphology_InflectionAnalysis::FinnishMorphology_InflectionAnalysis(v72, &__p, (uint64_t)&v80, (__int128 *)&v80.__r_.__value_.__r.__words[1]);
  if (v69 < 0)
  {
    v70 = (void *)__p;
LABEL_175:
    operator delete(v70);
  }
LABEL_176:
  morphun::util::lemmatization::InflectionIdentifier::~InflectionIdentifier((void **)&v80.__r_.__value_.__l.__data_);
  (*(void (**)(uint64_t))(*(_QWORD *)InflectionLikelihoods + 16))(InflectionLikelihoods);
}

void sub_1CB4F2C6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39)
{
  int v39;
  uint64_t v40;

  if (v39 < 0)
    operator delete(__p);
  if (a39 < 0)
    operator delete(a34);
  morphun::util::lemmatization::InflectionIdentifier::~InflectionIdentifier(&a25);
  (*(void (**)(uint64_t))(*(_QWORD *)v40 + 16))(v40);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::ItCommonConceptFactory_ItAndList::~ItCommonConceptFactory_ItAndList(morphun::dialog::language::ItCommonConceptFactory_ItAndList *this)
{
  morphun::dialog::SemanticConceptList::~SemanticConceptList(this, (uint64_t *)&off_1E8667F70);
}

{
  morphun::dialog::SemanticConceptList::~SemanticConceptList(this, (uint64_t *)&off_1E8667F70);
  JUMPOUT(0x1D179D2ECLL);
}

morphun::dialog::SemanticConceptList *morphun::dialog::language::ItCommonConceptFactory_ItAndList::clone(morphun::dialog::language::ItCommonConceptFactory_ItAndList *this)
{
  morphun::dialog::SemanticConceptList *v2;

  v2 = (morphun::dialog::SemanticConceptList *)operator new();
  *(_QWORD *)v2 = &off_1E865C900;
  morphun::dialog::SemanticConceptList::SemanticConceptList(v2, (const morphun::dialog::SemanticConceptList *)&off_1E8667F70, this);
  *(_QWORD *)v2 = &off_1E866DE48;
  return v2;
}

void sub_1CB4F2EBC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10F3C40223A8A63);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::ItCommonConceptFactory_ItAndList::getBeforeLast(const morphun::dialog::SemanticFeatureConceptBase *a1@<X1>, const morphun::dialog::SpeakableString *a2@<X2>, const morphun::dialog::SemanticFeatureConceptBase *a3@<X3>, const morphun::dialog::SpeakableString *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v7;
  unsigned __int8 v8;
  _QWORD *v9;
  unsigned __int8 v10;
  _QWORD *v11;
  int v12;
  _QWORD *v13;
  _QWORD *v14;
  void *__p[2];
  uint64_t v16;

  v7 = (*(uint64_t (**)(const morphun::dialog::SpeakableString *, const morphun::dialog::SemanticFeatureConceptBase *, const morphun::dialog::SpeakableString *, const morphun::dialog::SemanticFeatureConceptBase *))(*(_QWORD *)a4 + 32))(a4, a1, a2, a3);
  if ((v8 & 1) == 0
  {
    v13 = (_QWORD *)operator new();
    icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v13);
    MEMORY[0x1D179D970](*v13);
    morphun::dialog::language::ItCommonConceptFactory_ItAndList::IMPORTANT_SET(void)::IMPORTANT_SET_ = (uint64_t)v13;
  }
  v9 = (_QWORD *)morphun::dialog::language::ItCommonConceptFactory_ItAndList::IMPORTANT_SET(void)::IMPORTANT_SET_;
  npc<icu4cxx::UnicodeSet const>(morphun::dialog::language::ItCommonConceptFactory_ItAndList::IMPORTANT_SET(void)::IMPORTANT_SET_);
  {
    v14 = (_QWORD *)operator new();
    icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v14);
    MEMORY[0x1D179D970](*v14);
    morphun::dialog::language::E_SOUND(void)::I_SOUND_ = (uint64_t)v14;
  }
  v11 = (_QWORD *)morphun::dialog::language::E_SOUND(void)::I_SOUND_;
  npc<icu4cxx::UnicodeSet const>(morphun::dialog::language::E_SOUND(void)::I_SOUND_);
  __p[0] = 0;
  __p[1] = 0;
  v16 = 0;
  if (!morphun::dictionary::PhraseProperties::isStartsWithUnicodeSets(v7, v9, v11, (uint64_t **)__p))
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L" e ");
    *(_QWORD *)a5 = &off_1E866AD28;
    if (SHIBYTE(v16) < 0)
      goto LABEL_8;
LABEL_7:
    *(_OWORD *)(a5 + 8) = *(_OWORD *)__p;
    *(_QWORD *)(a5 + 24) = v16;
    *(_QWORD *)(a5 + 32) = 0;
    return;
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L" ed ");
  *(_QWORD *)a5 = &off_1E866AD28;
  if ((SHIBYTE(v16) & 0x80000000) == 0)
    goto LABEL_7;
LABEL_8:
  std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a5 + 8), (const std::basic_string<char16_t>::value_type *)__p[0], (std::basic_string<char16_t>::size_type)__p[1]);
  v12 = SHIBYTE(v16);
  *(_QWORD *)(a5 + 32) = 0;
  if (v12 < 0)
    operator delete(__p[0]);
}

void sub_1CB4F30CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  MEMORY[0x1D179D2EC](v15, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t npc<icu4cxx::UnicodeSet const>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4F3194(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::KkCommonConceptFactory::~KkCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1E8655ED0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1E8655ED0);
  JUMPOUT(0x1D179D2ECLL);
}

morphun::util::DelimitedStringIterator *morphun::util::DelimitedStringIterator::DelimitedStringIterator(morphun::util::DelimitedStringIterator *this, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(_QWORD *)this = 0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = a4;
  *((_QWORD *)this + 3) = a5;
  *((_QWORD *)this + 4) = a2;
  *((_QWORD *)this + 5) = a3;
  *((_DWORD *)this + 12) = a3;
  *((_DWORD *)this + 13) = 0;
  if ((int)a3 >= 1)
    morphun::util::DelimitedStringIterator::getNext((UChar *)this);
  return this;
}

{
  *(_QWORD *)this = 0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = a4;
  *((_QWORD *)this + 3) = a5;
  *((_QWORD *)this + 4) = a2;
  *((_QWORD *)this + 5) = a3;
  *((_DWORD *)this + 12) = a3;
  *((_DWORD *)this + 13) = 0;
  if ((int)a3 >= 1)
    morphun::util::DelimitedStringIterator::getNext((UChar *)this);
  return this;
}

UChar *morphun::util::DelimitedStringIterator::getNext(UChar *this)
{
  UChar *v1;
  int v2;
  uint64_t v3;
  const UChar *v4;
  unint64_t v5;
  unint64_t v6;
  BOOL v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v1 = this;
  v2 = *((_DWORD *)this + 12);
  v3 = *((int *)this + 13);
  if (v2 <= (int)v3)
  {
    *(_QWORD *)this = &word_1CB73EB86;
    *((_QWORD *)this + 1) = 0;
  }
  else
  {
    v4 = (const UChar *)(*((_QWORD *)this + 4) + 2 * v3);
    this = u_strFindFirst(v4, v2 - (int)v3, *((const UChar **)this + 2), *((_DWORD *)this + 6));
    v5 = *((int *)v1 + 13);
    v6 = *((_QWORD *)v1 + 5);
    if (this)
    {
      v7 = v6 >= v5;
      v8 = v6 - v5;
      if (!v7)
LABEL_14:
        std::__throw_out_of_range[abi:ne180100]("string_view::substr");
      v9 = *((_QWORD *)v1 + 4);
      v10 = v9 + 2 * v5;
      if (v8 >= ((unint64_t)((char *)this - (char *)v4) >> 1))
        v8 = ((unint64_t)((char *)this - (char *)v4) >> 1);
      *(_QWORD *)v1 = v10;
      *((_QWORD *)v1 + 1) = v8;
      v11 = (((unint64_t)this - v9) >> 1) + *((_DWORD *)v1 + 6);
    }
    else
    {
      v12 = v6 - v5;
      if (v6 < v5)
        goto LABEL_14;
      v11 = *((_DWORD *)v1 + 12);
      v13 = v11 - (int)v5;
      v14 = *((_QWORD *)v1 + 4) + 2 * v5;
      if (v12 >= v13)
        v12 = v13;
      *(_QWORD *)v1 = v14;
      *((_QWORD *)v1 + 1) = v12;
    }
    *((_DWORD *)v1 + 13) = v11;
  }
  return this;
}

BOOL morphun::util::DelimitedStringIterator::hasNext(morphun::util::DelimitedStringIterator *this)
{
  return *((_DWORD *)this + 13) < *((_DWORD *)this + 12) || *((_QWORD *)this + 1) != 0;
}

double morphun::util::DelimitedStringIterator::DelimitedStringIterator(morphun::util::DelimitedStringIterator *this, const morphun::util::DelimitedStringIterator *a2)
{
  double result;

  *(_QWORD *)this = 0;
  *((_QWORD *)this + 1) = 0;
  *((_OWORD *)this + 1) = *((_OWORD *)a2 + 1);
  *((_OWORD *)this + 2) = *((_OWORD *)a2 + 2);
  result = *((double *)a2 + 6);
  *((double *)this + 6) = result;
  return result;
}

{
  double result;

  *(_QWORD *)this = 0;
  *((_QWORD *)this + 1) = 0;
  *((_OWORD *)this + 1) = *((_OWORD *)a2 + 1);
  *((_OWORD *)this + 2) = *((_OWORD *)a2 + 2);
  result = *((double *)a2 + 6);
  *((double *)this + 6) = result;
  return result;
}

uint64_t morphun::util::DelimitedStringIterator::operator*(uint64_t a1)
{
  return *(_QWORD *)a1;
}

morphun::util::DelimitedStringIterator *morphun::util::DelimitedStringIterator::operator++(morphun::util::DelimitedStringIterator *this)
{
  char *exception;

  if (*((_DWORD *)this + 13) >= *((_DWORD *)this + 12) && !*((_QWORD *)this + 1))
  {
    exception = (char *)__cxa_allocate_exception(0x38uLL);
    *(_OWORD *)(exception + 8) = 0u;
    *(_OWORD *)(exception + 24) = 0u;
    *(_OWORD *)(exception + 40) = 0u;
    *(_QWORD *)exception = &off_1E8673250;
  }
  morphun::util::DelimitedStringIterator::getNext((UChar *)this);
  return this;
}

uint64_t **com::apple::siri::tokenizer::data::config_zh_HK::getContent@<X0>(uint64_t **a1@<X8>)
{
  _OWORD v3[3];
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v3[0] = xmmword_1E86768B8;
  v3[1] = *(_OWORD *)&off_1E86768C8;
  v3[2] = xmmword_1E86768D8;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 2);
}

uint64_t morphun::analysis::stemmer::DictionaryLookupLemmaFilter::incrementToken(morphun::analysis::stemmer::DictionaryLookupLemmaFilter *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  const UChar *v7;
  uint64_t v8;
  char *v9;
  std::basic_string<char16_t>::size_type size;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  const UChar *v14;
  uint64_t v15;
  uint64_t v16;
  morphun::exception::NullPointerException *exception;
  morphun::exception::NullPointerException *v19;
  std::basic_string<char16_t> v20;
  std::basic_string<char16_t> __p;
  uint64_t v22;
  _QWORD v23[3];

  v2 = *((_QWORD *)this + 12);
  if (!v2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  if ((_DWORD)v3)
  {
    v4 = *((_QWORD *)this + 14);
    if (!v4 || ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 56))(v4) & 1) == 0)
    {
      memset(v23, 0, sizeof(v23));
      v22 = 0;
      v5 = *((_QWORD *)this + 17);
      v6 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
      v7 = (const UChar *)((char *)v6 + *(_QWORD *)(*v6 - 96));
      if (*((char *)v7 + 23) < 0)
      {
        v7 = *(const UChar **)v7;
        v8 = *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 - 96) + 8);
      }
      else
      {
        v8 = *((unsigned __int8 *)v7 + 23);
      }
      morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v5, (uint64_t)&v22, v7, v8);
      memset(&__p, 0, sizeof(__p));
      v9 = (char *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
      (*(void (**)(std::basic_string<char16_t> *__return_ptr, morphun::analysis::stemmer::DictionaryLookupLemmaFilter *, char *, _QWORD *, uint64_t, std::basic_string<char16_t> *))(*(_QWORD *)this + 64))(&v20, this, &v9[*(_QWORD *)(*(_QWORD *)v9 - 96)], v23, v22, &__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      __p = v20;
      size = HIBYTE(v20.__r_.__value_.__r.__words[2]);
      if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        size = v20.__r_.__value_.__l.__size_;
      if (size)
      {
        v11 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
        std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v11 + *(_QWORD *)(*v11 - 96)), &__p);
      }
      if (*((_QWORD *)this + 15))
      {
        v20.__r_.__value_.__r.__words[0] = 0;
        v12 = *((_QWORD *)this + 17);
        v13 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
        v14 = (const UChar *)((char *)v13 + *(_QWORD *)(*v13 - 96));
        if (*((char *)v14 + 23) < 0)
        {
          v14 = *(const UChar **)v14;
          v15 = *(_QWORD *)((char *)v13 + *(_QWORD *)(*v13 - 96) + 8);
        }
        else
        {
          v15 = *((unsigned __int8 *)v14 + 23);
        }
        if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v12, (uint64_t)&v20, v14, v15))
        {
          v16 = *((_QWORD *)this + 15);
          if (!v16)
          {
            v19 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
            morphun::exception::NullPointerException::NullPointerException(v19);
          }
          (*(void (**)(uint64_t, std::basic_string<char16_t>::size_type))(*(_QWORD *)v16 + 64))(v16, v20.__r_.__value_.__r.__words[0]);
        }
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v23;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
    }
  }
  return v3;
}

void sub_1CB4F36A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  void *v18;
  uint64_t v19;

  __cxa_free_exception(v18);
  if (a18 < 0)
    operator delete(__p);
  __p = (void *)(v19 - 56);
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  _Unwind_Resume(a1);
}

void *morphun::analysis::stemmer::DictionaryLookupLemmaFilter::reset(morphun::analysis::stemmer::DictionaryLookupLemmaFilter *this)
{
  uint64_t v2;
  void *result;

  v2 = npc<morphun::analysis::TokenStream>(*((_QWORD *)this + 12));
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
  *((_QWORD *)this + 14) = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::KeywordAttribute>((uint64_t)this);
  *((_QWORD *)this + 15) = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::GrammemeAttribute>((uint64_t)this);
  result = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::LemmaMappingAttribute>((uint64_t)this);
  *((_QWORD *)this + 16) = result;
  return result;
}

void morphun::analysis::stemmer::DictionaryLookupLemmaFilter::getLemmaForTermAt(uint64_t a1@<X0>, const std::basic_string<char16_t> *a2@<X1>, std::basic_string<char16_t> *a3@<X2>, std::basic_string<char16_t>::size_type a4@<X3>, std::basic_string<char16_t> *a5@<X4>, std::basic_string<char16_t> *a6@<X8>)
{
  _QWORD *v12;
  char *v13;
  std::basic_string<char16_t>::size_type v14;
  uint64_t v15;
  int v16;
  const UChar *v17;
  uint64_t v18;
  std::basic_string<char16_t>::size_type v19;
  std::basic_string<char16_t>::size_type v20;
  int v21;
  const UChar *v22;
  uint64_t size;
  std::basic_string<char16_t>::size_type v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  int v28;
  const std::basic_string<char16_t>::value_type *v29;
  std::basic_string<char16_t>::size_type v30;
  void **v31;
  std::basic_string<char16_t>::size_type v32;
  std::basic_string<char16_t> *v33;
  uint64_t v34;
  const UChar *v35;
  std::basic_string<char16_t>::size_type v36;
  uint64_t v37;
  const UChar *v38;
  std::basic_string<char16_t> *v39;
  const std::basic_string<char16_t> *v40;
  _QWORD *v41;
  char *v42;
  int v43;
  const std::basic_string<char16_t>::value_type *v44;
  std::basic_string<char16_t>::size_type v45;
  std::basic_string<char16_t> *v46;
  int v47;
  std::basic_string<char16_t>::size_type v48;
  int v49;
  std::basic_string<char16_t>::size_type v50;
  int v51;
  const std::basic_string<char16_t> *v52;
  std::basic_string<char16_t> *v53;
  _QWORD *v54;
  char *v55;
  int v56;
  const std::basic_string<char16_t>::value_type *v57;
  std::basic_string<char16_t>::size_type v58;
  std::basic_string<char16_t> *v59;
  _QWORD *v60;
  char *v61;
  int v62;
  const std::basic_string<char16_t>::value_type *v63;
  std::basic_string<char16_t>::size_type v64;
  uint64_t v65;
  const UChar *v66;
  std::basic_string<char16_t>::size_type v67;
  std::basic_string<char16_t>::size_type v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  morphun::exception::NullPointerException *exception;
  std::basic_string<char16_t> *v75;
  std::basic_string<char16_t> *v76;
  void *__p[2];
  unsigned __int8 v78;
  std::basic_string<char16_t> __dst;
  std::basic_string<char16_t> v80;
  std::basic_string<char16_t> v81;
  std::basic_string<char16_t> v82;
  std::basic_string<char16_t> v83;
  unint64_t v84;
  std::basic_string<char16_t>::size_type *v85;

  v12 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*(_QWORD *)(a1 + 104));
  v13 = (char *)v12 + *(_QWORD *)(*v12 - 96);
  if (v13[23] < 0)
    v13 = (char *)*((_QWORD *)v13 + 1);
  else
    LODWORD(v13) = v13[23];
  if (*(_DWORD *)(a1 + 152) > (int)v13)
    goto LABEL_5;
  if (a4)
  {
    v20 = *(_QWORD *)(a1 + 144) & a4;
    if (v20)
    {
      v76 = a6;
      v21 = SHIBYTE(a2->__r_.__value_.__r.__words[2]);
      if (v21 >= 0)
        v22 = (const UChar *)a2;
      else
        v22 = (const UChar *)a2->__r_.__value_.__r.__words[0];
      if (v21 >= 0)
        size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      else
        size = a2->__r_.__value_.__l.__size_;
      morphun::dictionary::DictionaryMetaData::getPropertyValues(*(_QWORD *)(a1 + 136), v22, size, (unsigned __int16 *)"l", 5uLL, (uint64_t *)&v83);
      std::vector<std::basic_string<char16_t>>::__vdeallocate((uint64_t *)a3);
      *a3 = v83;
      memset(&v83, 0, sizeof(v83));
      v82.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v83;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v82);
      v25 = a3->__r_.__value_.__r.__words[0];
      v24 = a3->__r_.__value_.__l.__size_;
      if (a3->__r_.__value_.__r.__words[0] != v24)
      {
        if (morphun::util::gLogLevel <= 0 && 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v24 - v25) >> 3) >= 2)
        {
          std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "L");
          v26 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*(_QWORD *)(a1 + 104));
          v27 = (char *)v26 + *(_QWORD *)(*v26 - 96);
          v28 = v27[23];
          if (v28 >= 0)
            v29 = (const std::basic_string<char16_t>::value_type *)((char *)v26 + *(_QWORD *)(*v26 - 96));
          else
            v29 = *(const std::basic_string<char16_t>::value_type **)v27;
          if (v28 >= 0)
            v30 = v27[23];
          else
            v30 = *((_QWORD *)v27 + 1);
          std::basic_string<char16_t>::append(&__dst, v29, v30);
          v80 = __dst;
          memset(&__dst, 0, sizeof(__dst));
          std::basic_string<char16_t>::append(&v80, word_1CB732C02, 0xBuLL);
          v81 = v80;
          memset(&v80, 0, sizeof(v80));
          morphun::util::StringViewUtils::join(L",", 1uLL, a3, (uint64_t)__p);
          if ((v78 & 0x80u) == 0)
            v31 = __p;
          else
            v31 = (void **)__p[0];
          if ((v78 & 0x80u) == 0)
            v32 = v78;
          else
            v32 = (std::basic_string<char16_t>::size_type)__p[1];
          std::basic_string<char16_t>::append(&v81, (const std::basic_string<char16_t>::value_type *)v31, v32);
          v82 = v81;
          memset(&v81, 0, sizeof(v81));
          std::basic_string<char16_t>::append(&v82, L"]", 1uLL);
          v83 = v82;
          memset(&v82, 0, sizeof(v82));
          if (morphun::util::gLogLevel <= 0)
          {
            if ((v83.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              v33 = &v83;
            else
              v33 = (std::basic_string<char16_t> *)v83.__r_.__value_.__r.__words[0];
            morphun::util::logToTopOfStackLogger(0, 0, (uint64_t)v33);
          }
          if (SHIBYTE(v83.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v83.__r_.__value_.__l.__data_);
          if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v82.__r_.__value_.__l.__data_);
          if ((char)v78 < 0)
            operator delete(__p[0]);
          if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v81.__r_.__value_.__l.__data_);
          if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v80.__r_.__value_.__l.__data_);
          if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__dst.__r_.__value_.__l.__data_);
          v25 = a3->__r_.__value_.__r.__words[0];
          v24 = a3->__r_.__value_.__l.__size_;
        }
        if (v25 != v24)
        {
          do
          {
            v83.__r_.__value_.__r.__words[0] = 0;
            if (*(char *)(v25 + 23) < 0)
            {
              v35 = *(const UChar **)v25;
              v34 = *(_QWORD *)(v25 + 8);
            }
            else
            {
              v34 = *(unsigned __int8 *)(v25 + 23);
              v35 = (const UChar *)v25;
            }
            if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(_QWORD *)(a1 + 136), (uint64_t)&v83, v35, v34)&& (*(_QWORD *)(a1 + 144) & v83.__r_.__value_.__r.__words[0]) == v20)
            {
              v39 = a5;
              v40 = (const std::basic_string<char16_t> *)v25;
              goto LABEL_136;
            }
            v25 += 24;
          }
          while (v25 != v24);
          v24 = a3->__r_.__value_.__r.__words[0];
          v36 = a3->__r_.__value_.__l.__size_;
          if (a3->__r_.__value_.__r.__words[0] != v36)
          {
            while (1)
            {
              v83.__r_.__value_.__r.__words[0] = 0;
              if (*(char *)(v24 + 23) < 0)
              {
                v38 = *(const UChar **)v24;
                v37 = *(_QWORD *)(v24 + 8);
              }
              else
              {
                v37 = *(unsigned __int8 *)(v24 + 23);
                v38 = (const UChar *)v24;
              }
              if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(_QWORD *)(a1 + 136), (uint64_t)&v83, v38, v37)&& (v83.__r_.__value_.__r.__words[0] & *(_QWORD *)(a1 + 144) & v20) != 0)
              {
                break;
              }
              v24 += 24;
              if (v24 == v36)
              {
                v24 = a3->__r_.__value_.__r.__words[0];
                break;
              }
            }
          }
        }
        v39 = a5;
        v40 = (const std::basic_string<char16_t> *)v24;
LABEL_136:
        std::basic_string<char16_t>::operator=(v39, v40);
        a6 = v76;
        goto LABEL_5;
      }
      a6 = v76;
      if (morphun::util::gLogLevel > 0)
        goto LABEL_5;
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v82, "L");
      v60 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*(_QWORD *)(a1 + 104));
      v61 = (char *)v60 + *(_QWORD *)(*v60 - 96);
      v62 = v61[23];
      if (v62 >= 0)
        v63 = (const std::basic_string<char16_t>::value_type *)((char *)v60 + *(_QWORD *)(*v60 - 96));
      else
        v63 = *(const std::basic_string<char16_t>::value_type **)v61;
      if (v62 >= 0)
        v64 = v61[23];
      else
        v64 = *((_QWORD *)v61 + 1);
      std::basic_string<char16_t>::append(&v82, v63, v64);
      v83 = v82;
      memset(&v82, 0, sizeof(v82));
      if (morphun::util::gLogLevel > 0)
      {
LABEL_130:
        if (SHIBYTE(v83.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v83.__r_.__value_.__l.__data_);
        if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v82.__r_.__value_.__l.__data_);
        goto LABEL_5;
      }
      if ((v83.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v59 = &v83;
      else
        v59 = (std::basic_string<char16_t> *)v83.__r_.__value_.__r.__words[0];
    }
    else
    {
      if (morphun::util::gLogLevel > 0)
        goto LABEL_5;
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v82, "L");
      v54 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*(_QWORD *)(a1 + 104));
      v55 = (char *)v54 + *(_QWORD *)(*v54 - 96);
      v56 = v55[23];
      if (v56 >= 0)
        v57 = (const std::basic_string<char16_t>::value_type *)((char *)v54 + *(_QWORD *)(*v54 - 96));
      else
        v57 = *(const std::basic_string<char16_t>::value_type **)v55;
      if (v56 >= 0)
        v58 = v55[23];
      else
        v58 = *((_QWORD *)v55 + 1);
      std::basic_string<char16_t>::append(&v82, v57, v58);
      v83 = v82;
      memset(&v82, 0, sizeof(v82));
      if (morphun::util::gLogLevel > 0)
        goto LABEL_130;
      if ((v83.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v59 = &v83;
      else
        v59 = (std::basic_string<char16_t> *)v83.__r_.__value_.__r.__words[0];
    }
    morphun::util::logToTopOfStackLogger(0, 0, (uint64_t)v59);
    goto LABEL_130;
  }
  if (morphun::util::gLogLevel <= 0)
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v82, "L");
    v41 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*(_QWORD *)(a1 + 104));
    v42 = (char *)v41 + *(_QWORD *)(*v41 - 96);
    v43 = v42[23];
    if (v43 >= 0)
      v44 = (const std::basic_string<char16_t>::value_type *)((char *)v41 + *(_QWORD *)(*v41 - 96));
    else
      v44 = *(const std::basic_string<char16_t>::value_type **)v42;
    if (v43 >= 0)
      v45 = v42[23];
    else
      v45 = *((_QWORD *)v42 + 1);
    std::basic_string<char16_t>::append(&v82, v44, v45);
    v83 = v82;
    memset(&v82, 0, sizeof(v82));
    if (morphun::util::gLogLevel <= 0)
    {
      if ((v83.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v46 = &v83;
      else
        v46 = (std::basic_string<char16_t> *)v83.__r_.__value_.__r.__words[0];
      morphun::util::logToTopOfStackLogger(0, 0, (uint64_t)v46);
    }
    if (SHIBYTE(v83.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v83.__r_.__value_.__l.__data_);
    if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v82.__r_.__value_.__l.__data_);
  }
  std::basic_string<char16_t>::operator=(a5, a2);
  v47 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(_QWORD *)a1 + 56))(a1, a5);
  std::basic_string<char16_t>::resize(a5, v47, 0);
  v48 = HIBYTE(a5->__r_.__value_.__r.__words[2]);
  v49 = (char)v48;
  if ((v48 & 0x80u) != 0)
    v48 = a5->__r_.__value_.__l.__size_;
  v50 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  v51 = (char)v50;
  if ((v50 & 0x80u) != 0)
    v50 = a2->__r_.__value_.__l.__size_;
  if (v48 == v50)
  {
    if (v48)
    {
      if (v51 >= 0)
        v52 = a2;
      else
        v52 = (const std::basic_string<char16_t> *)a2->__r_.__value_.__r.__words[0];
      v53 = (std::basic_string<char16_t> *)a5->__r_.__value_.__r.__words[0];
      if (v49 >= 0)
        v53 = a5;
      while (v52->__r_.__value_.__s.__data_[0] == v53->__r_.__value_.__s.__data_[0])
      {
        v53 = (std::basic_string<char16_t> *)((char *)v53 + 2);
        v52 = (const std::basic_string<char16_t> *)((char *)v52 + 2);
        if (!--v48)
          goto LABEL_105;
      }
    }
    else
    {
LABEL_105:
      if (v49 < 0)
      {
        *a5->__r_.__value_.__l.__data_ = 0;
        a5->__r_.__value_.__l.__size_ = 0;
      }
      else
      {
        a5->__r_.__value_.__s.__data_[0] = 0;
        *((_BYTE *)&a5->__r_.__value_.__s + 23) = 0;
      }
    }
  }
LABEL_5:
  if (!*(_QWORD *)(a1 + 128))
    goto LABEL_158;
  v75 = a6;
  v14 = a3->__r_.__value_.__r.__words[0];
  v15 = a3->__r_.__value_.__l.__size_;
  if (a3->__r_.__value_.__r.__words[0] != v15)
    goto LABEL_139;
  v16 = SHIBYTE(a2->__r_.__value_.__r.__words[2]);
  v17 = v16 >= 0 ? (const UChar *)a2 : (const UChar *)a2->__r_.__value_.__r.__words[0];
  v18 = v16 >= 0 ? HIBYTE(a2->__r_.__value_.__r.__words[2]) : a2->__r_.__value_.__l.__size_;
  morphun::dictionary::DictionaryMetaData::getPropertyValues(*(_QWORD *)(a1 + 136), v17, v18, (unsigned __int16 *)"l", 5uLL, (uint64_t *)&v83);
  std::vector<std::basic_string<char16_t>>::__vdeallocate((uint64_t *)a3);
  *a3 = v83;
  memset(&v83, 0, sizeof(v83));
  v82.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v83;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v82);
  v14 = a3->__r_.__value_.__r.__words[0];
  v15 = a3->__r_.__value_.__l.__size_;
  if (a3->__r_.__value_.__r.__words[0] != v15)
    goto LABEL_139;
  v19 = HIBYTE(a5->__r_.__value_.__r.__words[2]);
  if ((v19 & 0x80u) != 0)
    v19 = a5->__r_.__value_.__l.__size_;
  if (v19)
  {
    if (v14 >= a3->__r_.__value_.__r.__words[2])
    {
      v15 = std::vector<std::basic_string<char16_t>>::__push_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)a3, (__int128 *)a5);
    }
    else
    {
      std::vector<std::basic_string<char16_t>>::__construct_one_at_end[abi:ne180100]<std::basic_string<char16_t> const&>((uint64_t)a3, (__int128 *)a5);
      v15 = v14 + 24;
    }
    a3->__r_.__value_.__l.__size_ = v15;
    v14 = a3->__r_.__value_.__r.__words[0];
LABEL_139:
    memset(&v82, 0, sizeof(v82));
    for (; v14 != v15; v14 += 24)
    {
      v81.__r_.__value_.__r.__words[0] = 0;
      if (*(char *)(v14 + 23) < 0)
      {
        v66 = *(const UChar **)v14;
        v65 = *(_QWORD *)(v14 + 8);
      }
      else
      {
        v65 = *(unsigned __int8 *)(v14 + 23);
        v66 = (const UChar *)v14;
      }
      morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(_QWORD *)(a1 + 136), (uint64_t)&v81, v66, v65);
      v67 = v82.__r_.__value_.__l.__size_;
      if (v82.__r_.__value_.__l.__size_ >= v82.__r_.__value_.__r.__words[2])
      {
        v69 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v82.__r_.__value_.__l.__size_ - v82.__r_.__value_.__r.__words[0]) >> 4);
        v70 = v69 + 1;
        if (v69 + 1 > 0x555555555555555)
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        if (0x5555555555555556
           * ((uint64_t)(v82.__r_.__value_.__r.__words[2] - v82.__r_.__value_.__r.__words[0]) >> 4) > v70)
          v70 = 0x5555555555555556
              * ((uint64_t)(v82.__r_.__value_.__r.__words[2] - v82.__r_.__value_.__r.__words[0]) >> 4);
        if (0xAAAAAAAAAAAAAAABLL
           * ((uint64_t)(v82.__r_.__value_.__r.__words[2] - v82.__r_.__value_.__r.__words[0]) >> 4) >= 0x2AAAAAAAAAAAAAALL)
          v71 = 0x555555555555555;
        else
          v71 = v70;
        v85 = &v82.__r_.__value_.__r.__words[2];
        if (v71)
          v71 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>(v71);
        else
          v72 = 0;
        v83.__r_.__value_.__r.__words[0] = v71;
        v83.__r_.__value_.__l.__size_ = v71 + 48 * v69;
        v83.__r_.__value_.__r.__words[2] = v83.__r_.__value_.__l.__size_;
        v84 = v71 + 48 * v72;
        morphun::analysis::tokenattributes::LemmaMapping::LemmaMapping((std::basic_string<char16_t> *)v83.__r_.__value_.__l.__size_, a4, v81.__r_.__value_.__r.__words[0], (__int128 *)v14);
        v83.__r_.__value_.__r.__words[2] += 48;
        std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__swap_out_circular_buffer((uint64_t *)&v82, &v83);
        v68 = v82.__r_.__value_.__l.__size_;
        std::__split_buffer<morphun::analysis::tokenattributes::LemmaMapping>::~__split_buffer((uint64_t)&v83);
      }
      else
      {
        morphun::analysis::tokenattributes::LemmaMapping::LemmaMapping((std::basic_string<char16_t> *)v82.__r_.__value_.__l.__size_, a4, v81.__r_.__value_.__r.__words[0], (__int128 *)v14);
        v68 = v67 + 48;
      }
      v82.__r_.__value_.__l.__size_ = v68;
    }
    goto LABEL_156;
  }
  memset(&v82, 0, sizeof(v82));
LABEL_156:
  v73 = *(_QWORD *)(a1 + 128);
  if (!v73)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  (*(void (**)(uint64_t, std::basic_string<char16_t> *))(*(_QWORD *)v73 + 64))(v73, &v82);
  a6 = v75;
  v83.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v82;
  std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__destroy_vector::operator()[abi:ne180100]((void ***)&v83);
LABEL_158:
  if (SHIBYTE(a5->__r_.__value_.__r.__words[2]) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a6, a5->__r_.__value_.__l.__data_, a5->__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&a6->__r_.__value_.__l.__data_ = *(_OWORD *)&a5->__r_.__value_.__l.__data_;
    a6->__r_.__value_.__r.__words[2] = a5->__r_.__value_.__r.__words[2];
  }
}

void sub_1CB4F4068(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  uint64_t v42;

  if (*(char *)(v42 - 105) < 0)
    operator delete(*(void **)(v42 - 128));
  if (a42 < 0)
    operator delete(__p);
  if (a16 < 0)
    operator delete(a11);
  if (a35 < 0)
    operator delete(a30);
  if (a28 < 0)
    operator delete(a23);
  if (a22 < 0)
    operator delete(a17);
  _Unwind_Resume(exception_object);
}

void sub_1CB4F41C8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::stemmer::DictionaryLookupLemmaFilter::DictionaryLookupLemmaFilter(uint64_t a1, uint64_t *a2, uint64_t a3, morphun::dictionary::DictionaryMetaData *a4, int a5, uint64_t *a6)
{
  morphun::analysis::util::AttributeSource *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const morphun::util::ULocale *v16;
  _QWORD *Dictionary;
  uint64_t *BinaryProperties;
  morphun::exception::NullPointerException *exception;

  v12 = morphun::analysis::util::AttributeSource::AttributeSource((morphun::analysis::util::AttributeSource *)a1, (morphun::analysis::util::AttributeSource *)(a2 + 3), a3);
  v13 = a2[2];
  *(_QWORD *)v12 = v13;
  *(_QWORD *)((char *)v12 + *(_QWORD *)(v13 - 40)) = a2[5];
  v14 = a2[1];
  *(_QWORD *)v12 = v14;
  *(_QWORD *)((char *)v12 + *(_QWORD *)(v14 - 40)) = a2[6];
  *((_QWORD *)v12 + 12) = a3;
  v15 = *a2;
  *(_QWORD *)v12 = *a2;
  *(_QWORD *)((char *)v12 + *(_QWORD *)(v15 - 40)) = a2[7];
  *(_OWORD *)((char *)v12 + 120) = 0u;
  *(_OWORD *)((char *)v12 + 104) = 0u;
  Dictionary = morphun::dictionary::DictionaryMetaData::createDictionary(a4, v16);
  if (!Dictionary)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  *(_QWORD *)(a1 + 136) = Dictionary;
  *(_QWORD *)(a1 + 144) = 0;
  *(_DWORD *)(a1 + 152) = a5;
  *(_QWORD *)(a1 + 104) = morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::CharTermAttribute>(a1);
  BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(*(_QWORD *)(a1 + 136), (uint64_t *)(a1 + 144), a6);
  morphun::util::Validate::notNull<long long>((uint64_t)BinaryProperties);
  return a1;
}

void sub_1CB4F42E8(_Unwind_Exception *a1)
{
  morphun::analysis::TokenFilter *v1;
  uint64_t *v2;
  void *v3;

  __cxa_free_exception(v3);
  morphun::analysis::TokenFilter::~TokenFilter(v1, v2);
  _Unwind_Resume(a1);
}

void morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::~LanguageGrammarFeatures_GrammarCategory(morphun::lang::features::LanguageGrammarFeatures_GrammarCategory *this)
{
}

{
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::compareTo(uint64_t a1, uint64_t a2)
{
  unsigned __int16 *v2;
  unsigned __int16 *v3;
  unsigned __int16 *v4;
  int v5;
  BOOL v6;
  unsigned __int16 *v7;
  unint64_t v8;
  unsigned __int16 *v9;
  unint64_t v10;
  unint64_t v11;
  unsigned int v12;
  unsigned int v13;

  v4 = *(unsigned __int16 **)(a2 + 8);
  v2 = (unsigned __int16 *)(a2 + 8);
  v3 = v4;
  v5 = *((char *)v2 + 23);
  v6 = v5 < 0;
  if (v5 >= 0)
    v7 = v2;
  else
    v7 = v3;
  if (v6)
    v8 = *((_QWORD *)v2 + 1);
  else
    v8 = *((unsigned __int8 *)v2 + 23);
  if (*(char *)(a1 + 31) < 0)
  {
    v9 = *(unsigned __int16 **)(a1 + 8);
    v10 = *(_QWORD *)(a1 + 16);
  }
  else
  {
    v9 = (unsigned __int16 *)(a1 + 8);
    v10 = *(unsigned __int8 *)(a1 + 31);
  }
  if (v8 >= v10)
    v11 = v10;
  else
    v11 = v8;
  if (v11)
  {
    while (1)
    {
      v12 = *v9;
      v13 = *v7;
      if (v12 < v13)
        return 0xFFFFFFFFLL;
      if (v13 < v12)
        return 1;
      ++v9;
      ++v7;
      if (!--v11)
        goto LABEL_17;
    }
  }
  else
  {
LABEL_17:
    if (v10 < v8)
      return 0xFFFFFFFFLL;
    else
      return v8 < v10;
  }
}

void morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::~LanguageGrammarFeatures_GrammarCategory(morphun::lang::features::LanguageGrammarFeatures_GrammarCategory *this, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)this = *a2;
  *(_QWORD *)((char *)this + *(_QWORD *)(v3 - 40)) = a2[1];
  std::__tree<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>>>::destroy(*((_QWORD **)this + 11));
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(*((_QWORD **)this + 8));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 5));
  if (*((char *)this + 31) < 0)
    operator delete(*((void **)this + 1));
}

void std::__tree<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>>>::destroy(_QWORD *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>>>::destroy(*a1);
    std::__tree<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>>>::destroy(a1[1]);
    std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy((_QWORD *)a1[7]);
    operator delete(a1);
  }
}

uint64_t morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::LanguageGrammarFeatures_GrammarCategory(uint64_t a1, uint64_t *a2, __int128 *a3, uint64_t a4, _QWORD *a5, _QWORD *a6)
{
  uint64_t v10;
  __int128 v11;

  v10 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + *(_QWORD *)(v10 - 40)) = a2[1];
  if (*((char *)a3 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)a3, *((_QWORD *)a3 + 1));
  }
  else
  {
    v11 = *a3;
    *(_QWORD *)(a1 + 24) = *((_QWORD *)a3 + 2);
    *(_OWORD *)(a1 + 8) = v11;
  }
  std::set<std::basic_string<char16_t>>::set[abi:ne180100]((uint64_t *)(a1 + 32), a4);
  std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>::multimap[abi:ne180100]((uint64_t **)(a1 + 56), a5);
  std::map<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>::map[abi:ne180100]((uint64_t *)(a1 + 80), a6);
  *(_BYTE *)(a1 + 104) = 1;
  return a1;
}

void sub_1CB4F4518(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;

  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(*(_QWORD **)(v1 + 64));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*(char **)(v1 + 40));
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(a1);
}

uint64_t *std::set<std::basic_string<char16_t>>::set[abi:ne180100](uint64_t *a1, uint64_t a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = (uint64_t)(a1 + 1);
  std::set<std::basic_string<char16_t>>::insert[abi:ne180100]<std::__tree_const_iterator<std::basic_string<char16_t>,std::__tree_node<std::basic_string<char16_t>,void *> *,long>>(a1, *(unsigned __int16 **)a2, (unsigned __int16 *)(a2 + 8));
  return a1;
}

void sub_1CB4F4590(_Unwind_Exception *a1)
{
  char **v1;

  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

uint64_t **std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>::multimap[abi:ne180100](uint64_t **a1, _QWORD *a2)
{
  uint64_t v3;
  __int128 *v4;
  __int128 *v5;
  uint64_t *v6;
  uint64_t **leaf;
  __int128 *v8;
  __int128 *v9;
  BOOL v10;
  uint64_t v12;
  _QWORD v13[3];

  a1[1] = 0;
  v3 = (uint64_t)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  v4 = (__int128 *)(a2 + 1);
  v5 = (__int128 *)*a2;
  if ((_QWORD *)*a2 != a2 + 1)
  {
    do
    {
      std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::__construct_node<std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>> const&>((uint64_t)v13, (uint64_t)a1, v5 + 2);
      v6 = (uint64_t *)v13[0];
      leaf = (uint64_t **)std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::__find_leaf(a1, v3, &v12, (unsigned __int16 *)(v13[0] + 32));
      std::__tree<std::u16string_view>::__insert_node_at(a1, v12, leaf, v6);
      v13[0] = 0;
      std::unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100]((uint64_t)v13);
      v8 = (__int128 *)*((_QWORD *)v5 + 1);
      if (v8)
      {
        do
        {
          v9 = v8;
          v8 = *(__int128 **)v8;
        }
        while (v8);
      }
      else
      {
        do
        {
          v9 = (__int128 *)*((_QWORD *)v5 + 2);
          v10 = *(_QWORD *)v9 == (_QWORD)v5;
          v5 = v9;
        }
        while (!v10);
      }
      v5 = v9;
    }
    while (v9 != v4);
  }
  return a1;
}

void sub_1CB4F467C(_Unwind_Exception *a1)
{
  _QWORD **v1;

  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

uint64_t *std::map<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>::map[abi:ne180100](uint64_t *a1, _QWORD *a2)
{
  uint64_t *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  BOOL v8;

  a1[1] = 0;
  v3 = a1 + 1;
  a1[2] = 0;
  *a1 = (uint64_t)(a1 + 1);
  v4 = a2 + 1;
  v5 = (_QWORD *)*a2;
  if ((_QWORD *)*a2 != a2 + 1)
  {
    do
    {
      std::__tree<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>>>::__emplace_hint_unique_key_args<std::u16string_view,std::pair<std::u16string_view const,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>> const&>(a1, v3, (unsigned __int16 *)v5[4], v5[5], (uint64_t)(v5 + 4));
      v6 = (_QWORD *)v5[1];
      if (v6)
      {
        do
        {
          v7 = v6;
          v6 = (_QWORD *)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          v7 = (_QWORD *)v5[2];
          v8 = *v7 == (_QWORD)v5;
          v5 = v7;
        }
        while (!v8);
      }
      v5 = v7;
    }
    while (v7 != v4);
  }
  return a1;
}

void sub_1CB4F4724(_Unwind_Exception *a1)
{
  _QWORD **v1;

  std::__tree<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>>>::__emplace_hint_unique_key_args<std::u16string_view,std::pair<std::u16string_view const,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>> const&>(uint64_t *result, uint64_t *a2, unsigned __int16 *a3, unint64_t a4, uint64_t a5)
{
  uint64_t **v6;
  unint64_t v7;
  unint64_t v8;
  unsigned __int16 *v9;
  unint64_t v10;
  unsigned __int16 *v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  unsigned __int16 *v17;
  unsigned __int16 *v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t *v24;
  BOOL v25;
  unint64_t v26;
  unint64_t v27;
  unsigned __int16 *v28;
  unsigned __int16 *v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  unsigned __int16 *v35;
  unsigned __int16 *v36;
  unsigned int v37;
  unsigned int v38;
  void *v39;
  uint64_t *v40;
  uint64_t *v41;

  v6 = (uint64_t **)result;
  if (result + 1 == a2)
    goto LABEL_11;
  v7 = a2[5];
  if (v7 >= a4)
    v8 = a4;
  else
    v8 = a2[5];
  if (v8)
  {
    v9 = (unsigned __int16 *)a2[4];
    v10 = v8;
    v11 = a3;
    do
    {
      v12 = *v11;
      v13 = *v9;
      if (v12 < v13)
        goto LABEL_11;
      if (v13 < v12)
        goto LABEL_16;
      ++v11;
      ++v9;
    }
    while (--v10);
  }
  if (v7 > a4)
  {
LABEL_11:
    v14 = *a2;
    if ((uint64_t *)*result == a2)
    {
      v16 = a2;
      goto LABEL_38;
    }
    if (v14)
    {
      v15 = (uint64_t *)*a2;
      do
      {
        v16 = v15;
        v15 = (uint64_t *)v15[1];
      }
      while (v15);
    }
    else
    {
      v24 = a2;
      do
      {
        v16 = (uint64_t *)v24[2];
        v25 = *v16 == (_QWORD)v24;
        v24 = v16;
      }
      while (v25);
    }
    v26 = v16[5];
    if (a4 >= v26)
      v27 = v16[5];
    else
      v27 = a4;
    if (v27)
    {
      v28 = (unsigned __int16 *)v16[4];
      v29 = a3;
      do
      {
        v30 = *v28;
        v31 = *v29;
        if (v30 < v31)
          goto LABEL_38;
        if (v31 < v30)
          goto LABEL_58;
        ++v28;
        ++v29;
      }
      while (--v27);
    }
    if (v26 < a4)
    {
LABEL_38:
      if (v14)
      {
        v41 = v16;
        v23 = v16 + 1;
      }
      else
      {
        v41 = a2;
        v23 = a2;
      }
      goto LABEL_59;
    }
LABEL_58:
    result = std::__tree<std::u16string_view>::__find_equal<std::u16string_view>((uint64_t)result, &v41, a3, a4);
    v23 = result;
    goto LABEL_59;
  }
LABEL_16:
  if (v8)
  {
    v17 = (unsigned __int16 *)a2[4];
    v18 = a3;
    while (1)
    {
      v19 = *v17;
      v20 = *v18;
      if (v19 < v20)
        break;
      if (v20 < v19)
        goto LABEL_41;
      ++v17;
      ++v18;
      if (!--v8)
        goto LABEL_21;
    }
LABEL_22:
    v21 = a2[1];
    if (v21)
    {
      v22 = (uint64_t *)a2[1];
      do
      {
        v23 = v22;
        v22 = (uint64_t *)*v22;
      }
      while (v22);
    }
    else
    {
      v32 = a2;
      do
      {
        v23 = (uint64_t *)v32[2];
        v25 = *v23 == (_QWORD)v32;
        v32 = v23;
      }
      while (!v25);
    }
    if (v23 != result + 1)
    {
      v33 = v23[5];
      if (v33 >= a4)
        v34 = a4;
      else
        v34 = v23[5];
      if (v34)
      {
        v35 = (unsigned __int16 *)v23[4];
        v36 = a3;
        while (1)
        {
          v37 = *v36;
          v38 = *v35;
          if (v37 < v38)
            break;
          if (v38 < v37)
            goto LABEL_58;
          ++v36;
          ++v35;
          if (!--v34)
            goto LABEL_55;
        }
      }
      else
      {
LABEL_55:
        if (v33 <= a4)
          goto LABEL_58;
      }
    }
    if (v21)
    {
      v41 = v23;
    }
    else
    {
      v41 = a2;
      v23 = a2 + 1;
    }
LABEL_59:
    if (*v23)
      return result;
    goto LABEL_60;
  }
LABEL_21:
  if (v7 < a4)
    goto LABEL_22;
LABEL_41:
  v40 = a2;
  v41 = a2;
  v23 = (uint64_t *)&v40;
  if (a2)
    return result;
LABEL_60:
  v39 = operator new(0x48uLL);
  *((_OWORD *)v39 + 2) = *(_OWORD *)a5;
  std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>::multimap[abi:ne180100]((uint64_t **)v39 + 6, (_QWORD *)(a5 + 16));
  return std::__tree<std::u16string_view>::__insert_node_at(v6, (uint64_t)v41, (uint64_t **)v23, (uint64_t *)v39);
}

void sub_1CB4F49A4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::__find_leaf(_QWORD *a1, uint64_t a2, _QWORD *a3, unsigned __int16 *a4)
{
  _QWORD *v6;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  BOOL v15;
  uint64_t v16;

  v6 = (_QWORD *)a2;
  v8 = a1 + 1;
  if (a1 + 1 != (_QWORD *)a2
    && std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(a2 + 32), a4))
  {
    while (1)
    {
      v9 = *v8;
      v6 = v8;
      if (!*v8)
        break;
      while (1)
      {
        v8 = (_QWORD *)v9;
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v9 + 32), a4))
          break;
        v9 = v8[1];
        if (!v9)
          goto LABEL_19;
      }
    }
LABEL_20:
    *a3 = v8;
    return v6;
  }
  v10 = (_QWORD *)*a1;
  v11 = *v6;
  if (v10 == v6)
  {
    v13 = v6;
  }
  else
  {
    if (v11)
    {
      v12 = (_QWORD *)*v6;
      do
      {
        v13 = v12;
        v12 = (_QWORD *)v12[1];
      }
      while (v12);
    }
    else
    {
      v14 = v6;
      do
      {
        v13 = (_QWORD *)v14[2];
        v15 = *v13 == (_QWORD)v14;
        v14 = v13;
      }
      while (v15);
    }
    if (std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a4, (unsigned __int16 *)v13 + 16))
    {
      while (1)
      {
        v16 = *v8;
        v6 = v8;
        if (!*v8)
          goto LABEL_20;
        while (1)
        {
          v8 = (_QWORD *)v16;
          if (std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a4, (unsigned __int16 *)(v16 + 32)))
            break;
          v16 = v8[1];
          if (!v16)
          {
LABEL_19:
            v6 = v8 + 1;
            goto LABEL_20;
          }
        }
      }
    }
  }
  if (v11)
  {
    *a3 = v13;
    return v13 + 1;
  }
  else
  {
    *a3 = v6;
  }
  return v6;
}

uint64_t *std::set<std::basic_string<char16_t>>::insert[abi:ne180100]<std::__tree_const_iterator<std::basic_string<char16_t>,std::__tree_node<std::basic_string<char16_t>,void *> *,long>>(uint64_t *result, unsigned __int16 *a2, unsigned __int16 *a3)
{
  unsigned __int16 *v4;
  uint64_t *v5;
  uint64_t v6;
  unsigned __int16 *v7;
  unsigned __int16 *v8;
  BOOL v9;

  if (a2 != a3)
  {
    v4 = a2;
    v5 = result;
    v6 = (uint64_t)(result + 1);
    do
    {
      result = std::__tree<std::basic_string<char16_t>>::__emplace_hint_unique_key_args<std::basic_string<char16_t>,std::basic_string<char16_t> const&>(v5, v6, v4 + 16, (uint64_t)(v4 + 16));
      v7 = (unsigned __int16 *)*((_QWORD *)v4 + 1);
      if (v7)
      {
        do
        {
          v8 = v7;
          v7 = *(unsigned __int16 **)v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          v8 = (unsigned __int16 *)*((_QWORD *)v4 + 2);
          v9 = *(_QWORD *)v8 == (_QWORD)v4;
          v4 = v8;
        }
        while (!v9);
      }
      v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::LanguageGrammarFeatures_GrammarCategory(uint64_t a1, __int128 *a2, uint64_t a3, _QWORD *a4, _QWORD *a5)
{
  __int128 v9;

  *(_QWORD *)a1 = &off_1E866A688;
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v9 = *a2;
    *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 2);
    *(_OWORD *)(a1 + 8) = v9;
  }
  std::set<std::basic_string<char16_t>>::set[abi:ne180100]((uint64_t *)(a1 + 32), a3);
  std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>::multimap[abi:ne180100]((uint64_t **)(a1 + 56), a4);
  std::map<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>::map[abi:ne180100]((uint64_t *)(a1 + 80), a5);
  *(_BYTE *)(a1 + 104) = 1;
  return a1;
}

void sub_1CB4F4C04(_Unwind_Exception *a1)
{
  void **v1;
  uint64_t v2;

  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(*(_QWORD **)(v2 + 64));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*(char **)(v2 + 40));
  if (*(char *)(v2 + 31) < 0)
    operator delete(*v1);
  _Unwind_Resume(a1);
}

void `virtual thunk to'morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::~LanguageGrammarFeatures_GrammarCategory(morphun::lang::features::LanguageGrammarFeatures_GrammarCategory *this)
{
}

{
  JUMPOUT(0x1D179D2ECLL);
}

void morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::getName(morphun::lang::features::LanguageGrammarFeatures_GrammarCategory *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  if (*((char *)this + 31) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a2, *((const std::basic_string<char16_t>::value_type **)this + 1), *((_QWORD *)this + 2));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 8);
    a2->__r_.__value_.__r.__words[2] = *((_QWORD *)this + 3);
  }
}

uint64_t *morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::getValues@<X0>(morphun::lang::features::LanguageGrammarFeatures_GrammarCategory *this@<X0>, uint64_t *a2@<X8>)
{
  return std::set<std::basic_string<char16_t>>::set[abi:ne180100](a2, (uint64_t)this + 32);
}

uint64_t morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::isUniqueValues(morphun::lang::features::LanguageGrammarFeatures_GrammarCategory *this)
{
  return *((unsigned __int8 *)this + 104);
}

uint64_t **morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::getGrammemeDependenciesForCategory@<X0>(morphun::lang::features::LanguageGrammarFeatures_GrammarCategory *this@<X0>, uint64_t **a2@<X8>)
{
  return std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>::multimap[abi:ne180100](a2, (_QWORD *)this + 7);
}

uint64_t **morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::getGrammemeDependenciesForValue@<X0>(uint64_t a1@<X0>, unsigned __int16 *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t **result;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t **v7;
  unint64_t v8;
  uint64_t *v9;
  unsigned __int16 *v10;
  unsigned __int16 *v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t *v16;
  unsigned int v17;
  unsigned int v18;

  v6 = *(uint64_t **)(a1 + 88);
  result = (uint64_t **)(a1 + 88);
  v5 = v6;
  if (!v6)
    goto LABEL_27;
  v7 = result;
  do
  {
    v8 = v5[5];
    if ((unint64_t)a3 >= v8)
      v9 = (uint64_t *)v5[5];
    else
      v9 = a3;
    if (v9)
    {
      v10 = (unsigned __int16 *)v5[4];
      v11 = a2;
      while (1)
      {
        v12 = *v10;
        v13 = *v11;
        if (v12 < v13)
        {
          ++v5;
          goto LABEL_16;
        }
        if (v13 < v12)
          break;
        ++v10;
        ++v11;
        v9 = (uint64_t *)((char *)v9 - 1);
        if (!v9)
          goto LABEL_11;
      }
      v7 = (uint64_t **)v5;
    }
    else
    {
LABEL_11:
      if (v8 < (unint64_t)a3)
        ++v5;
      else
        v7 = (uint64_t **)v5;
    }
LABEL_16:
    v5 = (uint64_t *)*v5;
  }
  while (v5);
  if (result == v7)
    goto LABEL_27;
  v14 = v7[5];
  if (v14 >= a3)
    v15 = a3;
  else
    v15 = v7[5];
  if (v15)
  {
    v16 = v7[4];
    do
    {
      v17 = *a2;
      v18 = *(unsigned __int16 *)v16;
      if (v17 < v18)
        goto LABEL_27;
      if (v18 < v17)
        return std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>::multimap[abi:ne180100]((uint64_t **)a4, v7 + 6);
      ++a2;
      v16 = (uint64_t *)((char *)v16 + 2);
      v15 = (uint64_t *)((char *)v15 - 1);
    }
    while (v15);
  }
  if (a3 < v14)
  {
LABEL_27:
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)a4 = a4 + 8;
    return result;
  }
  return std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>::multimap[abi:ne180100]((uint64_t **)a4, v7 + 6);
}

BOOL morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::operator<(uint64_t a1, uint64_t a2)
{
  unsigned __int16 *v2;
  unsigned __int16 *v3;
  unsigned __int16 *v4;
  int v5;
  BOOL v6;
  unsigned __int16 *v7;
  unint64_t v8;
  unsigned __int16 *v9;
  unint64_t v10;
  unint64_t v11;
  unsigned int v12;
  unsigned int v13;
  BOOL v14;

  v4 = *(unsigned __int16 **)(a2 + 8);
  v2 = (unsigned __int16 *)(a2 + 8);
  v3 = v4;
  v5 = *((char *)v2 + 23);
  v6 = v5 < 0;
  if (v5 >= 0)
    v7 = v2;
  else
    v7 = v3;
  if (v6)
    v8 = *((_QWORD *)v2 + 1);
  else
    v8 = *((unsigned __int8 *)v2 + 23);
  if (*(char *)(a1 + 31) < 0)
  {
    v9 = *(unsigned __int16 **)(a1 + 8);
    v10 = *(_QWORD *)(a1 + 16);
  }
  else
  {
    v9 = (unsigned __int16 *)(a1 + 8);
    v10 = *(unsigned __int8 *)(a1 + 31);
  }
  if (v8 >= v10)
    v11 = v10;
  else
    v11 = v8;
  if (v11)
  {
    while (1)
    {
      v12 = *v9;
      v13 = *v7;
      if (v13 != v12)
        break;
      ++v9;
      ++v7;
      if (!--v11)
        goto LABEL_16;
    }
    v14 = v12 >= v13;
  }
  else
  {
LABEL_16:
    v14 = v10 >= v8;
  }
  return !v14;
}

uint64_t **com::apple::siri::tokenizer::data::config_ru::getContent@<X0>(uint64_t **a1@<X8>)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v3 = xmmword_1E8686A40;
  v4 = 0x1CB73E8CALL;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

void morphun::tokenizer::dictionary::SegmentFuger::detachFugenelement(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  float v10;
  unsigned int v11;
  std::basic_string<char16_t>::value_type *v12;
  unint64_t v13;
  _QWORD *v14;
  void **v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  std::basic_string<char16_t> *v19;
  std::basic_string<char16_t>::size_type v20;
  _QWORD *v21;
  unint64_t v22;
  unsigned int v23;
  int v24;
  float v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  float v32;
  std::basic_string<char16_t> *v33;
  int v34;
  unint64_t v35;
  unsigned int v36;
  std::basic_string<char16_t>::size_type v37;
  uint64_t v38;
  uint64_t v39;
  std::basic_string<char16_t> *v40;
  int v41;
  unint64_t v42;
  unsigned int v43;
  BOOL v44;
  std::basic_string<char16_t>::size_type size;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  float v49;
  char v50;
  std::basic_string<char16_t> *v51;
  int v52;
  unint64_t v53;
  unsigned int v54;
  BOOL v55;
  int16x8_t v56;
  uint64_t v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  char v61;
  unsigned int v62;
  const std::basic_string<char16_t>::value_type *v63;
  std::basic_string<char16_t>::size_type v64;
  std::basic_string<char16_t> v65;
  void *__dst[2];
  unint64_t v67;

  v2 = a2;
  npc<morphun::tokenizer::dictionary::Segment>(a2);
  v4 = *(int *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 8);
  v6 = v5 >= v4;
  v7 = v5 - v4;
  if (!v6)
    std::__throw_out_of_range[abi:ne180100]("string_view::substr");
  if (v7 >= *(int *)(v2 + 20) - v4)
    v8 = *(int *)(v2 + 20) - v4;
  else
    v8 = v7;
  if (*(_DWORD *)(a1 + 20) > (int)v8)
    return;
  v9 = *(_QWORD *)v2;
  npc<morphun::tokenizer::dictionary::Segment>(v2);
  v10 = *(float *)(v2 + 48);
  memset(&v65, 0, sizeof(v65));
  std::basic_string<char16_t>::reserve(&v65, *(int *)(a1 + 16));
  v11 = *(_DWORD *)(a1 + 16);
  if ((int)v11 < 1)
    goto LABEL_119;
  v62 = 0;
  v12 = (std::basic_string<char16_t>::value_type *)(v9 + 2 * v4);
  v57 = v2;
  v63 = v12;
  v64 = v8;
  while (1)
  {
    if ((int)(v11 - 1 + *(_DWORD *)(a1 + 20)) > (int)v8)
      goto LABEL_119;
    if (v8 < v11)
      std::__throw_out_of_range[abi:ne180100]("string_view::substr");
    v60 = v11 - 1;
    v13 = v11;
    v14 = *(_QWORD **)a1;
    if (v11 >= 0xB)
    {
      v16 = (v11 & 0xFFFFFFFC) + 4;
      if ((v11 | 3) != 0xB)
        v16 = v11 | 3;
      v15 = (void **)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v16 + 1);
      __dst[1] = (void *)v11;
      v67 = v17 | 0x8000000000000000;
      __dst[0] = v15;
    }
    else
    {
      HIBYTE(v67) = v11;
      v15 = __dst;
    }
    memmove(v15, v12, 2 * v11);
    *((_WORD *)v15 + v11) = 0;
    v18 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)(v14 + 20), (unsigned __int16 *)__dst);
    if (SHIBYTE(v67) < 0)
      operator delete(__dst[0]);
    v19 = (std::basic_string<char16_t> *)&v12[v11];
    v20 = v64 - v11;
    if (v14 + 21 != (_QWORD *)v18)
    {
      v21 = *(_QWORD **)a1;
      if (v21 + 9 == std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(*(_QWORD *)a1 + 64, (unsigned __int16 *)v12, v11))
      {
        v61 = 0;
      }
      else
      {
        v58 = v11;
        v22 = morphun::dictionary::metadata::MarisaTrie<int>::find((marisa::Trie *)(*(_QWORD *)(a1 + 8) + 40), (uint64_t)&v12[v11], v20);
        if (v22 <= 0x100000000)
          v23 = 0;
        else
          v23 = v22;
        v24 = v23 & 0xFFFFFF;
        v25 = (float)(v23 & 0xFFFFFF);
        if (v10 >= v25)
        {
          v61 = 0;
        }
        else
        {
          v26 = (v23 >> 25) & 1;
          if (*(_DWORD *)(a1 + 20) <= (int)v20)
            LOBYTE(v26) = 1;
          v61 = v26;
        }
        v21 = *(_QWORD **)a1;
        v39 = *(_QWORD *)(*(_QWORD *)a1 + 136);
        v38 = *(_QWORD *)(*(_QWORD *)a1 + 144);
        if (v39 != v38)
        {
          while (1)
          {
            std::basic_string<char16_t>::__assign_external(&v65, *(const std::basic_string<char16_t>::value_type **)v39, *(_QWORD *)(v39 + 8));
            std::basic_string<char16_t>::append(&v65, (const std::basic_string<char16_t>::value_type *)v19, v20);
            if ((v65.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              v40 = &v65;
            else
              v40 = (std::basic_string<char16_t> *)v65.__r_.__value_.__r.__words[0];
            if ((v65.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              v41 = HIBYTE(v65.__r_.__value_.__r.__words[2]);
            else
              v41 = v65.__r_.__value_.__r.__words[1];
            v42 = morphun::dictionary::metadata::MarisaTrie<int>::find((marisa::Trie *)(*(_QWORD *)(a1 + 8) + 40), (uint64_t)v40, v41);
            if (v42 <= 0x100000000)
              v43 = 0;
            else
              v43 = v42;
            v44 = v10 >= (float)(v43 & 0xFFFFFF) || (int)(v43 & 0xFFFFFF) <= v24;
            if (v44)
              goto LABEL_77;
            if (SHIBYTE(v65.__r_.__value_.__r.__words[2]) < 0)
            {
              size = v65.__r_.__value_.__l.__size_;
              if ((v43 & 0x2000000) == 0 && *(_DWORD *)(a1 + 20) > SLODWORD(v65.__r_.__value_.__r.__words[1]))
                goto LABEL_77;
              v61 = 1;
              v19 = (std::basic_string<char16_t> *)v65.__r_.__value_.__r.__words[0];
            }
            else
            {
              size = HIBYTE(v65.__r_.__value_.__r.__words[2]);
              if ((v43 & 0x2000000) == 0 && *(_DWORD *)(a1 + 20) > (int)HIBYTE(v65.__r_.__value_.__r.__words[2]))
                goto LABEL_77;
              v61 = 1;
              v19 = &v65;
            }
            v20 = size;
            v24 = v43 & 0xFFFFFF;
            v23 = v43;
LABEL_77:
            v39 += 16;
            if (v39 == v38)
            {
              v25 = (float)v24;
              v21 = *(_QWORD **)a1;
              break;
            }
          }
        }
        v46 = v62;
        if ((v61 & 1) != 0)
          v46 = v23;
        v62 = v46;
        if ((v61 & 1) != 0)
          v10 = v25;
        v2 = v57;
        v11 = v58;
        v12 = (std::basic_string<char16_t>::value_type *)v63;
      }
      if (v21 + 12 == std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>((uint64_t)(v21 + 11), (unsigned __int16 *)v12, v13)|| v10 > (float)*(int *)(a1 + 24)|| (v47 = v21[14], v48 = v21[15], v47 == v48))
      {
        v50 = v61;
      }
      else
      {
        v49 = v10;
        v50 = v61;
        do
        {
          std::basic_string<char16_t>::__assign_external(&v65, *(const std::basic_string<char16_t>::value_type **)v47, *(_QWORD *)(v47 + 8));
          std::basic_string<char16_t>::append(&v65, (const std::basic_string<char16_t>::value_type *)v19, v20);
          if ((v65.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v51 = &v65;
          else
            v51 = (std::basic_string<char16_t> *)v65.__r_.__value_.__r.__words[0];
          if ((v65.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v52 = HIBYTE(v65.__r_.__value_.__r.__words[2]);
          else
            v52 = v65.__r_.__value_.__r.__words[1];
          v53 = morphun::dictionary::metadata::MarisaTrie<int>::find((marisa::Trie *)(*(_QWORD *)(a1 + 8) + 40), (uint64_t)v51, v52);
          if (v53 <= 0x100000000)
            v54 = 0;
          else
            v54 = v53;
          if (v49 < (float)(v54 & 0xFFFFFF))
          {
            if ((v65.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              v19 = &v65;
            else
              v19 = (std::basic_string<char16_t> *)v65.__r_.__value_.__r.__words[0];
            if ((v65.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              v20 = HIBYTE(v65.__r_.__value_.__r.__words[2]);
            else
              v20 = v65.__r_.__value_.__l.__size_;
            v50 = 1;
            v49 = (float)(v54 & 0xFFFFFF);
            v62 = v54;
          }
          v47 += 16;
        }
        while (v47 != v48);
      }
      if ((v50 & 1) != 0)
        goto LABEL_116;
      goto LABEL_109;
    }
    npc<morphun::tokenizer::dictionary::Segment>(v2);
    v27 = *(_QWORD *)(v2 + 40);
    if (!v27)
      LODWORD(v27) = *(_DWORD *)(v2 + 20) - *(_DWORD *)(v2 + 24);
    if ((int)v27 < *(_DWORD *)(a1 + 20))
      goto LABEL_110;
    v28 = *(_QWORD *)(*(_QWORD *)a1 + 136);
    v29 = *(_QWORD *)(*(_QWORD *)a1 + 144);
    if (v28 != v29)
      break;
LABEL_109:
    v12 = (std::basic_string<char16_t>::value_type *)v63;
LABEL_110:
    v44 = (int)v11 <= 1;
    v11 = v60;
    v8 = v64;
    if (v44)
      goto LABEL_119;
  }
  v59 = v11;
  v30 = 0;
  v31 = 1;
  v32 = v10;
  do
  {
    std::basic_string<char16_t>::__assign_external(&v65, *(const std::basic_string<char16_t>::value_type **)v28, *(_QWORD *)(v28 + 8));
    std::basic_string<char16_t>::append(&v65, v63, v64);
    if ((v65.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v33 = &v65;
    else
      v33 = (std::basic_string<char16_t> *)v65.__r_.__value_.__r.__words[0];
    if ((v65.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v34 = HIBYTE(v65.__r_.__value_.__r.__words[2]);
    else
      v34 = v65.__r_.__value_.__r.__words[1];
    v35 = morphun::dictionary::metadata::MarisaTrie<int>::find((marisa::Trie *)(*(_QWORD *)(a1 + 8) + 40), (uint64_t)v33, v34);
    if (v35 <= 0x100000000)
      v36 = 0;
    else
      v36 = v35;
    if (v32 < (float)(v36 & 0xFFFFFF))
    {
      if (SHIBYTE(v65.__r_.__value_.__r.__words[2]) < 0)
      {
        v37 = v65.__r_.__value_.__l.__size_;
        if ((v36 & 0x2000000) != 0 || *(_DWORD *)(a1 + 20) <= SLODWORD(v65.__r_.__value_.__r.__words[1]))
        {
          v31 = 0;
          v30 = 1;
          v19 = (std::basic_string<char16_t> *)v65.__r_.__value_.__r.__words[0];
          goto LABEL_49;
        }
      }
      else
      {
        v37 = HIBYTE(v65.__r_.__value_.__r.__words[2]);
        if ((v36 & 0x2000000) != 0 || *(_DWORD *)(a1 + 20) <= (int)HIBYTE(v65.__r_.__value_.__r.__words[2]))
        {
          v31 = 0;
          v30 = 1;
          v19 = &v65;
LABEL_49:
          v20 = v37;
          v32 = (float)(v36 & 0xFFFFFF);
          v62 = v36;
        }
      }
    }
    v28 += 16;
  }
  while (v28 != v29);
  v12 = (std::basic_string<char16_t>::value_type *)v63;
  if ((v30 & 1) == 0)
  {
    v11 = v59;
    goto LABEL_110;
  }
  v55 = (v31 & 1) == 0;
  v11 = v59;
  if (v55)
    v11 = -1;
LABEL_116:
  npc<morphun::tokenizer::dictionary::Segment>(v2);
  *(_QWORD *)(v2 + 32) = v19;
  *(_QWORD *)(v2 + 40) = v20;
  if ((int)v11 >= 1)
  {
    *(_DWORD *)(v2 + 24) = *(_DWORD *)(v2 + 16) + v11;
    *(_DWORD *)(v2 + 28) = v11;
  }
  v56 = (int16x8_t)vshlq_u32((uint32x4_t)vdupq_n_s32(v62), (uint32x4_t)xmmword_1CB5DD550);
  v56.i64[0] = *(_QWORD *)&vmovn_s32((int32x4_t)v56) & 0xFF81FF81FF81FF81;
  *(float *)(v2 + 48) = (float)(v62 & 0xFFFFFF);
  *(_DWORD *)(v2 + 52) = vmovn_s16(v56).u32[0];
  *(_BYTE *)(v2 + 56) = HIBYTE(v62) & 1;
LABEL_119:
  if (SHIBYTE(v65.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v65.__r_.__value_.__l.__data_);
}

void sub_1CB4F5424(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t npc<morphun::tokenizer::dictionary::Segment>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4F54AC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::metadata::MarisaTrie<int>::find(marisa::Trie *a1, uint64_t a2, int a3)
{
  int KeyId;

  KeyId = morphun::dictionary::metadata::MarisaTrie<int>::getKeyId(a1, a2, a3);
  if (KeyId < 0)
    return 0;
  else
    return morphun::dictionary::metadata::CompressedArray<int>::read((uint64_t)a1 + 24, KeyId) | 0x100000000;
}

uint64_t morphun::dictionary::metadata::MarisaTrie<int>::getKeyId(marisa::Trie *a1, uint64_t a2, int a3)
{
  std::string *p_p;
  std::string::size_type size;
  int v6;
  unsigned int v7;
  _OWORD v9[2];
  __int128 v10;
  std::string __p;

  memset(&__p, 0, sizeof(__p));
  v10 = 0u;
  memset(v9, 0, sizeof(v9));
  morphun::dictionary::metadata::CharsetConverter::encode((uint64_t)a1 + 8, &__p, a2, a3);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  marisa::Agent::set_query(v9, (const char *)p_p, size);
  v6 = marisa::Trie::lookup(a1, (marisa::Agent *)v9);
  v7 = DWORD1(v10);
  marisa::scoped_ptr<marisa::grimoire::trie::State>::~scoped_ptr((_QWORD *)&v10 + 1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (v6)
    return v7;
  else
    return 0xFFFFFFFFLL;
}

void sub_1CB4F55B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  marisa::scoped_ptr<marisa::grimoire::trie::State>::~scoped_ptr(&a14);
  if (a21 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::metadata::CompressedArray<int>::read(uint64_t a1, int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  char v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *exception;
  __int128 __dst;

  v2 = *(_DWORD *)(a1 + 4);
  v3 = v2 * a2;
  v4 = v2 * a2 + 63;
  if (v2 * a2 >= 0)
    v4 = v2 * a2;
  v5 = v2 + v3;
  v6 = v5 - 1;
  v7 = v5 + 62;
  if (v6 >= 0)
    v7 = v6;
  if (a2 < 0 || (v8 = v7 >> 6, v8 > *(_DWORD *)a1))
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"Invalid CompressedArray index");
    morphun::exception::Throwable::Throwable((uint64_t)exception, &__dst);
    *exception = &off_1E86731C0;
  }
  v9 = v4 >> 6;
  v10 = v3 - (v4 & 0xC0);
  v11 = (_QWORD *)(*(_QWORD *)(a1 + 8) + 8 * (v4 >> 6));
  v12 = *v11 >> v10;
  if (v9 != v8)
    v12 |= v11[1] << -v10;
  return v12 & *(_QWORD *)(a1 + 16);
}

void sub_1CB4F56CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

void morphun::grammar::synthesis::EsGrammarSynthesizer_CountGenderLookupFunction::~EsGrammarSynthesizer_CountGenderLookupFunction(morphun::grammar::synthesis::EsGrammarSynthesizer_CountGenderLookupFunction *this)
{
  void *v2;
  uint64_t v3;

  *(_QWORD *)this = &off_1E865E2A0;
  v2 = (void *)*((_QWORD *)this + 22);
  if (v2)
  {
    *((_QWORD *)this + 23) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 16))(v3);
  *((_QWORD *)this + 1) = &off_1E8671C00;
}

{
  morphun::grammar::synthesis::EsGrammarSynthesizer_CountGenderLookupFunction::~EsGrammarSynthesizer_CountGenderLookupFunction(this);
  JUMPOUT(0x1D179D2ECLL);
}

void morphun::grammar::synthesis::EsGrammarSynthesizer_CountGenderLookupFunction::determine(uint64_t a1@<X0>, uint64_t a2@<X1>, std::basic_string<char16_t> *a3@<X8>)
{
  std::basic_string<char16_t>::size_type size;
  int v7;
  uint64_t v8;
  const UChar *v9;
  _QWORD *CombinedBinaryType;
  int32_t v11;
  std::basic_string<char16_t>::size_type v12;
  int32_t v13;
  morphun::util::LocaleUtils *v14;
  uint64_t v15;
  std::basic_string<char16_t> *p_p;
  int32_t v17;
  morphun::grammar::synthesis::GrammemeConstants *v18;
  int v19;
  const UChar *v20;
  uint64_t v21;
  morphun::grammar::synthesis::GrammemeConstants *v22;
  uint64_t v23;
  unint64_t v24;
  unsigned __int16 *v25;
  __int16 *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  int v32;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _WORD *v37;
  _WORD *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  int v43;
  int v44;
  char v46;
  uint64_t v47;
  char v48;
  _WORD *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  int v55;
  uint64_t v57;
  std::basic_string<char16_t> __p;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  std::basic_string<char16_t> v63;
  _QWORD v64[3];

  v64[2] = *MEMORY[0x1E0C80C00];
  morphun::dialog::DictionaryLookupFunction::determinePhrase(a1, a2, 1, (uint64_t)&v63);
  size = HIBYTE(v63.__r_.__value_.__r.__words[2]);
  v7 = SHIBYTE(v63.__r_.__value_.__r.__words[2]);
  if ((v63.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = v63.__r_.__value_.__l.__size_;
  if (size)
    goto LABEL_4;
  if (*(char *)(a2 + 23) < 0)
  {
    v8 = *(_QWORD *)(a2 + 8);
    if (v8)
    {
      v62 = 0;
      v9 = *(const UChar **)a2;
      goto LABEL_11;
    }
LABEL_4:
    *a3 = v63;
    return;
  }
  v8 = *(unsigned __int8 *)(a2 + 23);
  if (!*(_BYTE *)(a2 + 23))
    goto LABEL_4;
  v62 = 0;
  v9 = (const UChar *)a2;
LABEL_11:
  CombinedBinaryType = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(_QWORD *)(a1 + 208), (uint64_t)&v62, v9, v8);
  if (*(_DWORD *)(a1 + 232) || !CombinedBinaryType || (*(_QWORD *)(a1 + 224) & v62) != 0)
  {
    v59 = 0;
    v60 = 0;
    v61 = 0;
    morphun::dialog::DictionaryLookupFunction::getFirstWord(&__p, *(_QWORD *)(a1 + 160), a2);
    v11 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    v12 = __p.__r_.__value_.__r.__words[0];
    v13 = __p.__r_.__value_.__r.__words[1];
    v15 = morphun::util::LocaleUtils::SPANISH(v14);
    if ((v11 & 0x80u) == 0)
      p_p = &__p;
    else
      p_p = (std::basic_string<char16_t> *)v12;
    if ((v11 & 0x80u) == 0)
      v17 = v11;
    else
      v17 = v13;
    v18 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::StringViewUtils::lowercase((uint64_t)&v59, (const UChar *)p_p, v17, v15);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    v19 = *(_DWORD *)(a1 + 232);
    if (v19 == 1)
    {
      v35 = 0;
      v36 = HIBYTE(v61);
      v37 = &v59;
      if (v61 < 0)
      {
        v37 = v59;
        v36 = v60;
      }
      while (1)
      {
        v38 = *(&off_1E8675CB8 + v35);
        if (!*v38)
          break;
        v39 = 0;
        do
          v40 = v39++;
        while (v38[v40 + 1]);
        if (v36 >= v39)
        {
          if (!v39)
            break;
          v41 = ~v40;
          do
          {
            v42 = (unsigned __int16)v37[v36 + v41];
            v44 = (unsigned __int16)*v38++;
            v43 = v44;
          }
          while (v44 == v42 && v41++ != -1);
          if (v43 == v42)
            break;
        }
        if (++v35 == 3)
        {
          if (v36 && v37[v36 - 1] == 115)
          {
            v34 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(v18);
            goto LABEL_75;
          }
          break;
        }
      }
      v34 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v18);
LABEL_75:
      if (*(char *)(v34 + 23) < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external(&__p, *(const std::basic_string<char16_t>::value_type **)v34, *(_QWORD *)(v34 + 8));
        goto LABEL_78;
      }
    }
    else
    {
      if (v19)
      {
LABEL_81:
        if (SHIBYTE(v61) < 0)
          operator delete(v59);
        goto LABEL_4;
      }
      v57 = 0;
      if (v61 >= 0)
        v20 = (const UChar *)&v59;
      else
        v20 = (const UChar *)v59;
      if (v61 >= 0)
        v21 = HIBYTE(v61);
      else
        v21 = v60;
      v22 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(_QWORD *)(a1 + 208), (uint64_t)&v57, v20, v21);
      v23 = 0;
      v24 = HIBYTE(v61);
      if (v61 >= 0)
        v25 = (unsigned __int16 *)&v59;
      else
        v25 = (unsigned __int16 *)v59;
      if (v61 < 0)
        v24 = v60;
      do
      {
        v26 = off_1E8675C88[v23];
        if (!*v26)
          goto LABEL_71;
        v27 = 0;
        do
          v28 = v27++;
        while (v26[v28 + 1]);
        if (v24 >= v27)
        {
          if (!v27)
            goto LABEL_71;
          v29 = ~v28;
          do
          {
            v30 = v25[v24 + v29];
            v32 = (unsigned __int16)*v26++;
            v31 = v32;
          }
          while (v32 == v30 && v29++ != -1);
          if (v31 == v30)
          {
LABEL_71:
            v34 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE(v22);
            goto LABEL_72;
          }
        }
        ++v23;
      }
      while (v23 != 6);
      if (v22)
      {
LABEL_49:
        v34 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(v22);
LABEL_72:
        if ((*(char *)(v34 + 23) & 0x80000000) == 0)
          goto LABEL_76;
LABEL_73:
        std::basic_string<char16_t>::__init_copy_ctor_external(&__p, *(const std::basic_string<char16_t>::value_type **)v34, *(_QWORD *)(v34 + 8));
        goto LABEL_78;
      }
      v46 = 0;
      v47 = 0;
      v64[0] = word_1CB73CF56;
      v64[1] = "a";
      while (1)
      {
        v48 = v46;
        v49 = (_WORD *)v64[v47];
        if (!*v49)
          break;
        v50 = 0;
        do
          v51 = v50++;
        while (v49[v51 + 1]);
        if (v24 >= v50)
        {
          if (!v50)
            break;
          v52 = ~v51;
          do
          {
            v53 = v25[v24 + v52];
            v55 = (unsigned __int16)*v49++;
            v54 = v55;
          }
          while (v55 == v53 && v52++ != -1);
          if (v54 == v53)
            break;
        }
        v46 = 1;
        v47 = 1;
        if ((v48 & 1) != 0)
          goto LABEL_49;
      }
      v34 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE(0);
      if (*(char *)(v34 + 23) < 0)
        goto LABEL_73;
    }
LABEL_76:
    __p = *(std::basic_string<char16_t> *)v34;
LABEL_78:
    if (v7 < 0)
      operator delete(v63.__r_.__value_.__l.__data_);
    v63 = __p;
    goto LABEL_81;
  }
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  if (v7 < 0)
    operator delete(v63.__r_.__value_.__l.__data_);
}

void sub_1CB4F5B94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25)
{
  int v25;

  if (a23 < 0)
    operator delete(__p);
  if (v25 < 0)
    operator delete(a25);
  _Unwind_Resume(exception_object);
}

uint64_t morphun::grammar::synthesis::EsGrammarSynthesizer_CountGenderLookupFunction::EsGrammarSynthesizer_CountGenderLookupFunction(uint64_t a1, int a2, uint64_t *a3)
{
  morphun::grammar::synthesis::GrammemeConstants *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t i;
  uint64_t v12;
  uint64_t *BinaryProperties;
  uint64_t *v14;
  void **p_p;
  char v17;
  std::basic_string<char16_t> v18;
  std::basic_string<char16_t> v19;
  __int128 __p;
  uint64_t v21;
  __int128 v22;

  *(_QWORD *)&v22 = *MEMORY[0x1E0C80C00];
  *(_QWORD *)a1 = &off_1E865E248;
  v6 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::SPANISH((morphun::util::LocaleUtils *)a1);
  v7 = morphun::grammar::synthesis::GrammemeConstants::POS_NOUN(v6);
  if (*(char *)(v7 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v18, *(const std::basic_string<char16_t>::value_type **)v7, *(_QWORD *)(v7 + 8));
  }
  else
  {
    v8 = *(_OWORD *)v7;
    v18.__r_.__value_.__r.__words[2] = *(_QWORD *)(v7 + 16);
    *(_OWORD *)&v18.__r_.__value_.__l.__data_ = v8;
  }
  v9 = morphun::grammar::synthesis::GrammemeConstants::POS_ADJECTIVE((morphun::grammar::synthesis::GrammemeConstants *)v7);
  if (*(char *)(v9 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v19, *(const std::basic_string<char16_t>::value_type **)v9, *(_QWORD *)(v9 + 8));
  }
  else
  {
    v10 = *(_OWORD *)v9;
    v19.__r_.__value_.__r.__words[2] = *(_QWORD *)(v9 + 16);
    *(_OWORD *)&v19.__r_.__value_.__l.__data_ = v10;
  }
  __p = 0uLL;
  v21 = 0;
  v17 = 0;
  *(_QWORD *)&__p = operator new(0x30uLL);
  *((_QWORD *)&__p + 1) = __p;
  v21 = __p + 48;
  *((_QWORD *)&__p + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v21, (__int128 *)&v18, &__p, (std::basic_string<char16_t> *)__p);
  morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction(a1, (uint64_t *)off_1E8668768, v6, a3, (__int128 **)&__p);
  p_p = (void **)&__p;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&p_p);
  for (i = 0; i != -6; i -= 3)
  {
    if (SHIBYTE(v19.__r_.__value_.__r.__words[i + 2]) < 0)
      operator delete(*(void **)((char *)&v18 + i * 8 + 24));
  }
  *(_QWORD *)a1 = &off_1E866F5C0;
  v12 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 208) = v12;
  *(_QWORD *)(a1 + 216) = 0;
  *(_QWORD *)(a1 + 224) = 0;
  *(_DWORD *)(a1 + 232) = a2;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"noun");
  memset(&v18, 0, sizeof(v18));
  p_p = (void **)&v18;
  v17 = 0;
  v18.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x18uLL);
  v18.__r_.__value_.__l.__size_ = v18.__r_.__value_.__r.__words[0];
  v18.__r_.__value_.__r.__words[2] = v18.__r_.__value_.__r.__words[0] + 24;
  v18.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v18.__r_.__value_.__r.__words[2], &__p, &v22, (std::basic_string<char16_t> *)v18.__r_.__value_.__l.__data_);
  BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v12, (uint64_t *)(a1 + 216), (uint64_t *)&v18);
  morphun::util::Validate::notNull<long long>((uint64_t)BinaryProperties);
  p_p = (void **)&v18;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&p_p);
  if (SHIBYTE(v21) < 0)
    operator delete((void *)__p);
  v14 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(*(_QWORD *)(a1 + 208), (uint64_t *)(a1 + 224), a3);
  morphun::util::Validate::notNull<long long>((uint64_t)v14);
  return a1;
}

void sub_1CB4F5E40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  morphun::dialog::DictionaryLookupFunction *v25;

  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a9);
  if (a25 < 0)
    operator delete(__p);
  morphun::dialog::DictionaryLookupFunction::~DictionaryLookupFunction(v25, (uint64_t *)off_1E8668768);
  _Unwind_Resume(a1);
}

uint64_t mca_createTokenChainString(uint64_t a1, const __CFString *a2)
{
  uint64_t v4;
  std::basic_string<char16_t> __p;

  npc<morphun::analysis::ConfigurableAnalyzer>(a1);
  morphun::util::CFUtils::to_u16string(&__p, a2);
  v4 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(_QWORD *)a1 + 64))(a1, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return v4;
}

void sub_1CB4F5F7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  const std::exception *v15;
  const void **v18;
  __CFError **v19;

  if (a15 < 0)
    operator delete(__p);
  if (a2 == 1)
  {
    v18 = (const void **)__cxa_begin_catch(exception_object);
    morphun::util::CFUtils::convert(v18, v15, v19);
    __cxa_end_catch();
    JUMPOUT(0x1CB4F5F64);
  }
  _Unwind_Resume(exception_object);
}

uint64_t npc<morphun::analysis::ConfigurableAnalyzer>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4F6020(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t mca_createTokenChain(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = npc<morphun::analysis::ConfigurableAnalyzer>(a1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 72))(v3, a2);
}

morphun::Token_Head *morphun::Token_Head::newInstance(morphun::Token_Head *this, int a2)
{
  int v4;
  morphun::Token_Head *v5;
  morphun::Token_Head *v6;
  int v7;

  v4 = (*(uint64_t (**)(morphun::Token_Head *))(*(_QWORD *)this + 24))(this);
  v5 = (morphun::Token_Head *)operator new();
  v6 = v5;
  if (v4 <= a2)
  {
    morphun::Token_Head::Token_Head(v5, 0);
  }
  else
  {
    v7 = (*(uint64_t (**)(morphun::Token_Head *))(*(_QWORD *)this + 24))(this);
    morphun::Token_Head::Token_Head(v6, v7 - a2);
  }
  return v6;
}

void sub_1CB4F613C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10B3C405B5873CALL);
  _Unwind_Resume(a1);
}

void morphun::Token_Delim::~Token_Delim(void **this)
{
  morphun::Token::~Token(this, (void **)&off_1E8667030);
}

{
  morphun::Token::~Token(this, (void **)&off_1E8667030);
  JUMPOUT(0x1D179D2ECLL);
}

morphun::Token *morphun::Token_Head::Token_Head(morphun::Token_Head *this, uint64_t *a2)
{
  morphun::Token *result;
  uint64_t v4;
  uint64_t v5;

  result = morphun::Token::Token(this, a2 + 2, 0, 0, &word_1CB73EB86, 0, &word_1CB73EB86, 0, 0);
  v4 = a2[1];
  *(_QWORD *)result = v4;
  *(_QWORD *)((char *)result + *(_QWORD *)(v4 - 64)) = a2[5];
  *(_QWORD *)((char *)result + *(_QWORD *)(*(_QWORD *)result - 40)) = a2[6];
  v5 = *a2;
  *(_QWORD *)result = *a2;
  *(_QWORD *)((char *)result + *(_QWORD *)(v5 - 64)) = a2[7];
  *(_QWORD *)((char *)result + *(_QWORD *)(*(_QWORD *)result - 40)) = a2[8];
  return result;
}

morphun::Token *morphun::Token_Head::Token_Head(morphun::Token_Head *this, uint64_t *a2, int a3)
{
  morphun::Token *result;
  uint64_t v5;
  uint64_t v6;

  result = morphun::Token::Token(this, a2 + 2, a3, a3, &word_1CB73EB86, 0, &word_1CB73EB86, 0, 0);
  v5 = a2[1];
  *(_QWORD *)result = v5;
  *(_QWORD *)((char *)result + *(_QWORD *)(v5 - 64)) = a2[5];
  *(_QWORD *)((char *)result + *(_QWORD *)(*(_QWORD *)result - 40)) = a2[6];
  v6 = *a2;
  *(_QWORD *)result = *a2;
  *(_QWORD *)((char *)result + *(_QWORD *)(v6 - 64)) = a2[7];
  *(_QWORD *)((char *)result + *(_QWORD *)(*(_QWORD *)result - 40)) = a2[8];
  return result;
}

morphun::Token *morphun::Token_Head::Token_Head(morphun::Token_Head *this)
{
  return morphun::Token_Head::Token_Head(this, 0);
}

uint64_t morphun::analysis::util::FilteringTokenFilter::incrementToken(morphun::analysis::util::FilteringTokenFilter *this)
{
  uint64_t v2;
  void **v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  unint64_t v10;
  char *v11;
  _DWORD *v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _DWORD *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  morphun::exception::NullPointerException *exception;

  v2 = *((_QWORD *)this + 12);
  if (!v2)
  {
LABEL_29:
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  v3 = (void **)((char *)this + 120);
  while (1)
  {
    v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
    if (!(_DWORD)v4
      || ((*(uint64_t (**)(morphun::analysis::util::FilteringTokenFilter *))(*(_QWORD *)this + 56))(this) & 1) != 0)
    {
      return v4;
    }
    v5 = *((_QWORD *)this + 13);
    if (v5)
    {
      v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 72))(v5);
      if (v3 != (void **)v6)
        std::vector<int>::__assign_with_size[abi:ne180100]<int *,int *>((char *)this + 120, *(char **)v6, *(_QWORD *)(v6 + 8), (uint64_t)(*(_QWORD *)(v6 + 8) - *(_QWORD *)v6) >> 2);
      v7 = *((_QWORD *)this + 14);
      if (!v7)
        goto LABEL_29;
      v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 72))(v7);
      v9 = v8;
      v11 = (char *)*((_QWORD *)this + 16);
      v10 = *((_QWORD *)this + 17);
      if ((unint64_t)v11 >= v10)
      {
        v13 = (char *)*v3;
        v14 = (v11 - (_BYTE *)*v3) >> 2;
        v15 = v14 + 1;
        if ((unint64_t)(v14 + 1) >> 62)
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        v16 = v10 - (_QWORD)v13;
        if (v16 >> 1 > v15)
          v15 = v16 >> 1;
        if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFFCLL)
          v17 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v17 = v15;
        if (v17)
        {
          v17 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(v17);
          v13 = (char *)*((_QWORD *)this + 15);
          v11 = (char *)*((_QWORD *)this + 16);
        }
        else
        {
          v18 = 0;
        }
        v19 = (_DWORD *)(v17 + 4 * v14);
        *v19 = v9;
        v12 = v19 + 1;
        while (v11 != v13)
        {
          v20 = *((_DWORD *)v11 - 1);
          v11 -= 4;
          *--v19 = v20;
        }
        *((_QWORD *)this + 15) = v19;
        *((_QWORD *)this + 16) = v12;
        *((_QWORD *)this + 17) = v17 + 4 * v18;
        if (v13)
          operator delete(v13);
      }
      else
      {
        *(_DWORD *)v11 = v8;
        v12 = v11 + 4;
      }
      *((_QWORD *)this + 16) = v12;
      v21 = *((_QWORD *)this + 13);
      npc<morphun::analysis::tokenattributes::SkippedOffsetsAttribute>(v21);
      v22 = npc<morphun::analysis::tokenattributes::SkippedOffsetsAttribute>(*((_QWORD *)this + 13));
      v23 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v22 + 64))(v22);
      (*(void (**)(uint64_t, uint64_t, char *))(*(_QWORD *)v21 + 56))(v21, v23, (char *)this + 120);
    }
    v2 = *((_QWORD *)this + 12);
    if (!v2)
      goto LABEL_29;
  }
}

void sub_1CB4F64A0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::util::FilteringTokenFilter::end(morphun::analysis::util::FilteringTokenFilter *this)
{
  uint64_t v1;

  v1 = npc<morphun::analysis::TokenStream>(*((_QWORD *)this + 12));
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 32))(v1);
}

_QWORD *morphun::analysis::util::FilteringTokenFilter::reset(morphun::analysis::util::FilteringTokenFilter *this)
{
  uint64_t v2;
  _QWORD *result;

  v2 = npc<morphun::analysis::TokenStream>(*((_QWORD *)this + 12));
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
  *((_QWORD *)this + 13) = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::SkippedOffsetsAttribute>((uint64_t)this);
  result = std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::find<std::type_index>((_QWORD *)this + 1, (uint64_t)"N7morphun8analysis15tokenattributes15OffsetAttributeE");
  if (result)
  {
    result = (_QWORD *)result[3];
    if (result)
  }
  *((_QWORD *)this + 14) = result;
  return result;
}

void sub_1CB4F6590(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

double morphun::analysis::util::FilteringTokenFilter::FilteringTokenFilter(morphun::analysis::util::FilteringTokenFilter *this, morphun::analysis::TokenStream *a2, uint64_t a3)
{
  morphun::analysis::util::AttributeSource *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;

  v5 = morphun::analysis::util::AttributeSource::AttributeSource(this, (morphun::analysis::TokenStream *)((char *)a2 + 24), a3);
  v6 = *((_QWORD *)a2 + 2);
  *(_QWORD *)v5 = v6;
  *(_QWORD *)((char *)v5 + *(_QWORD *)(v6 - 40)) = *((_QWORD *)a2 + 5);
  v7 = *((_QWORD *)a2 + 1);
  *(_QWORD *)v5 = v7;
  *(_QWORD *)((char *)v5 + *(_QWORD *)(v7 - 40)) = *((_QWORD *)a2 + 6);
  *((_QWORD *)v5 + 12) = a3;
  v8 = *(_QWORD *)a2;
  *(_QWORD *)v5 = *(_QWORD *)a2;
  *(_QWORD *)((char *)v5 + *(_QWORD *)(v8 - 40)) = *((_QWORD *)a2 + 7);
  *((_QWORD *)v5 + 17) = 0;
  result = 0.0;
  *(_OWORD *)((char *)v5 + 120) = 0u;
  *(_OWORD *)((char *)v5 + 104) = 0u;
  return result;
}

void morphun::grammar::synthesis::ArGrammarSynthesizer_ToPrepositionLookupFunction::~ArGrammarSynthesizer_ToPrepositionLookupFunction(morphun::grammar::synthesis::ArGrammarSynthesizer_ToPrepositionLookupFunction *this)
{
  JUMPOUT(0x1D179D2ECLL);
}

_QWORD *morphun::grammar::synthesis::ArGrammarSynthesizer_ToPrepositionLookupFunction::getArticle(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  morphun::lang::StringFilterUtil *v3;
  std::basic_string<char16_t>::size_type v4;
  int v5;
  std::basic_string<char16_t>::size_type size;
  _QWORD *v7;
  std::basic_string<char16_t> *v8;
  std::basic_string<char16_t> *p_str;
  std::allocator<char16_t> *v10;
  std::basic_string<char16_t> *v11;
  _QWORD *v12;
  uint64_t v13;
  std::basic_string<char16_t> *v14;
  int v15;
  std::basic_string<char16_t> v17;
  std::basic_string<char16_t> __str;
  const void *v19[2];
  uint64_t v20;

  v19[0] = 0;
  v19[1] = 0;
  v20 = 0;
  v2 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
  v3 = (morphun::lang::StringFilterUtil *)morphun::util::StringUtils::trim(v2, &__str);
  v4 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  v5 = SHIBYTE(__str.__r_.__value_.__r.__words[2]);
  size = __str.__r_.__value_.__l.__size_;
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v4 = __str.__r_.__value_.__l.__size_;
  if (v4)
  {
    v7 = (_QWORD *)morphun::lang::StringFilterUtil::ARABIC_SCRIPT(v3);
    v8 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
    p_str = &__str;
    if (v5 < 0)
      p_str = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
    if (!MEMORY[0x1D179D958](*v7, (unsigned __int16)p_str->__r_.__value_.__s.__data_[0]))
    {
      v13 = 3;
      HIBYTE(v20) = 3;
      LODWORD(v19[0]) = 104859204;
      WORD2(v19[0]) = 160;
      goto LABEL_21;
    }
    if (v5 < 0)
    {
      if (size > 3)
      {
        v11 = v8;
        if (v8->__r_.__value_.__s.__data_[0] == 1575)
        {
LABEL_16:
          if (v11->__r_.__value_.__s.__data_[1] == 1604)
          {
            std::basic_string<char16_t>::basic_string(&v17, &__str, 1uLL, 0xFFFFFFFFFFFFFFFFLL, v10);
            if (v5 < 0)
              operator delete(v8);
            __str = v17;
          }
        }
      }
    }
    else if (v5 >= 4 && (unsigned __int16)v8 == 1575)
    {
      v11 = &__str;
      goto LABEL_16;
    }
    v13 = 1;
    HIBYTE(v20) = 1;
    LOWORD(v19[0]) = 1604;
LABEL_21:
    *(_WORD *)((unint64_t)v19 | (2 * v13)) = 0;
    v12 = (_QWORD *)operator new();
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v17, v19, (const void **)&__str.__r_.__value_.__l.__data_);
    *v12 = &off_1E866AD28;
    v14 = (std::basic_string<char16_t> *)(v12 + 1);
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(v14, v17.__r_.__value_.__l.__data_, v17.__r_.__value_.__l.__size_);
      v15 = SHIBYTE(v17.__r_.__value_.__r.__words[2]);
      v12[4] = 0;
      if (v15 < 0)
        operator delete(v17.__r_.__value_.__l.__data_);
    }
    else
    {
      *(_OWORD *)&v14->__r_.__value_.__l.__data_ = *(_OWORD *)&v17.__r_.__value_.__l.__data_;
      v12[3] = *((_QWORD *)&v17.__r_.__value_.__l + 2);
      v12[4] = 0;
    }
    if ((*((_BYTE *)&__str.__r_.__value_.__s + 23) & 0x80) != 0)
      goto LABEL_26;
    return v12;
  }
  v12 = (_QWORD *)operator new();
  *v12 = &off_1E866AD28;
  v12[1] = 0;
  v12[3] = 0;
  v12[4] = 0;
  v12[2] = 0;
  if ((v5 & 0x80) != 0)
LABEL_26:
    operator delete(__str.__r_.__value_.__l.__data_);
  return v12;
}

void sub_1CB4F682C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern::isAdjective(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  const UChar *v6;
  uint64_t v7;
  _QWORD *result;
  int v9;
  const UChar *v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(char *)(a2 + 23);
  if (v5 >= 0)
    v6 = (const UChar *)a2;
  else
    v6 = *(const UChar **)a2;
  if (v5 >= 0)
    v7 = *(unsigned __int8 *)(a2 + 23);
  else
    v7 = *(_QWORD *)(a2 + 8);
  v12 = 0;
  result = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v4, (uint64_t)&v12, v6, v7);
  if (result)
  {
    v12 = 0;
    v9 = *(char *)(a2 + 23);
    if (v9 >= 0)
      v10 = (const UChar *)a2;
    else
      v10 = *(const UChar **)a2;
    if (v9 >= 0)
      v11 = *(unsigned __int8 *)(a2 + 23);
    else
      v11 = *(_QWORD *)(a2 + 8);
    result = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(_QWORD *)(a1 + 32), (uint64_t)&v12, v10, v11);
    if (result)
      return (_QWORD *)((*(_QWORD *)(a1 + 40) & v12) != 0);
  }
  return result;
}

_QWORD *morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern::isNoun(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  const UChar *v6;
  uint64_t v7;
  _QWORD *result;
  int v9;
  const UChar *v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(char *)(a2 + 23);
  if (v5 >= 0)
    v6 = (const UChar *)a2;
  else
    v6 = *(const UChar **)a2;
  if (v5 >= 0)
    v7 = *(unsigned __int8 *)(a2 + 23);
  else
    v7 = *(_QWORD *)(a2 + 8);
  v12 = 0;
  result = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v4, (uint64_t)&v12, v6, v7);
  if (result)
  {
    v12 = 0;
    v9 = *(char *)(a2 + 23);
    if (v9 >= 0)
      v10 = (const UChar *)a2;
    else
      v10 = *(const UChar **)a2;
    if (v9 >= 0)
      v11 = *(unsigned __int8 *)(a2 + 23);
    else
      v11 = *(_QWORD *)(a2 + 8);
    result = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(_QWORD *)(a1 + 32), (uint64_t)&v12, v10, v11);
    if (result)
      return (_QWORD *)((*(_QWORD *)(a1 + 48) & v12) != 0);
  }
  return result;
}

BOOL morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern::isValidDeclensionConstraint(uint64_t a1, uint64_t a2)
{
  _BOOL8 v2;
  std::basic_string<char16_t> __p;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__p, a2, *(_QWORD *)(a1 + 8));
  v2 = morphun::grammar::synthesis::NlGrammarSynthesizer::getDeclension((unsigned __int16 *)&__p) != 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return v2;
}

void sub_1CB4F6A0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern::isValidCaseConstraint(uint64_t a1, uint64_t a2)
{
  _BOOL8 v2;
  std::basic_string<char16_t> __p;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__p, a2, *(_QWORD *)(a1 + 24));
  v2 = morphun::grammar::synthesis::NlGrammarSynthesizer::getCase((unsigned __int16 *)&__p) != 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return v2;
}

void sub_1CB4F6A88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern::isValidCountConstraint(uint64_t a1, uint64_t a2)
{
  _BOOL8 v2;
  std::basic_string<char16_t> __p;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__p, a2, *(_QWORD *)(a1 + 16));
  v2 = morphun::grammar::synthesis::NlGrammarSynthesizer::getCount((unsigned __int16 *)&__p) != 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return v2;
}

void sub_1CB4F6B04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern *morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern::NlGrammarSynthesizer_NlInflectionPattern(morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern *this, const morphun::dialog::SemanticFeatureModel *a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;
  morphun::dictionary::DictionaryMetaData *v7;
  const morphun::util::ULocale *v8;
  _QWORD *Dictionary;
  uint64_t v10;
  uint64_t *BinaryProperties;
  uint64_t v12;
  uint64_t *v13;
  unsigned __int8 v14;
  unsigned __int16 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  morphun::exception::NullPointerException *exception;
  _QWORD *v26;
  void *__dst;
  void *v28;
  char *v29;
  void **p_dst;
  char v31;
  void *__p[2];
  char v33;
  __int128 v34;

  *(_QWORD *)&v34 = *MEMORY[0x1E0C80C00];
  v5 = *(_QWORD *)a2;
  *(_QWORD *)this = *(_QWORD *)a2;
  *(_QWORD *)((char *)this + *(_QWORD *)(v5 - 64)) = *((_QWORD *)a2 + 1);
  *(_QWORD *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 40)) = *((_QWORD *)a2 + 2);
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  v6 = (_QWORD *)((char *)this + 8);
  *((_QWORD *)this + 3) = 0;
  v7 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::DUTCH(this);
  Dictionary = morphun::dictionary::DictionaryMetaData::createDictionary(v7, v8);
  if (!Dictionary)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  v10 = (uint64_t)Dictionary;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 4) = Dictionary;
  *((_QWORD *)this + 6) = 0;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "a");
  __dst = 0;
  v28 = 0;
  v29 = 0;
  p_dst = &__dst;
  v31 = 0;
  __dst = operator new(0x18uLL);
  v28 = __dst;
  v29 = (char *)__dst + 24;
  v28 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v29, (__int128 *)__p, &v34, (std::basic_string<char16_t> *)__dst);
  BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v10, (uint64_t *)this + 5, (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)BinaryProperties);
  p_dst = &__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&p_dst);
  if (v33 < 0)
    operator delete(__p[0]);
  v12 = *((_QWORD *)this + 4);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"noun");
  __dst = 0;
  v28 = 0;
  v29 = 0;
  p_dst = &__dst;
  v31 = 0;
  __dst = operator new(0x18uLL);
  v28 = __dst;
  v29 = (char *)__dst + 24;
  v28 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v29, (__int128 *)__p, &v34, (std::basic_string<char16_t> *)__dst);
  v13 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v12, (uint64_t *)this + 6, (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v13);
  p_dst = &__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&p_dst);
  if (v33 < 0)
    operator delete(__p[0]);
  if ((v14 & 1) == 0
  {
    v26 = (_QWORD *)operator new();
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v26, "d");
    morphun::grammar::synthesis::NlGrammarSynthesizer::DECLENSION(void)::DECLENSION_ = (uint64_t)v26;
  }
  v15 = (unsigned __int16 *)morphun::grammar::synthesis::NlGrammarSynthesizer::DECLENSION(void)::DECLENSION_;
  npc<std::basic_string<char16_t>>(morphun::grammar::synthesis::NlGrammarSynthesizer::DECLENSION(void)::DECLENSION_);
  v16 = a3 + 8;
  v17 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a3 + 8, v15);
  v18 = a3 + 16;
  if (v18 == v17)
    v19 = 0;
  else
    v19 = *(_QWORD *)(v17 + 56);
  *v6 = v19;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"count");
  v20 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v16, (unsigned __int16 *)&__dst);
  if (v18 == v20)
    v21 = 0;
  else
    v21 = *(_QWORD *)(v20 + 56);
  *((_QWORD *)this + 2) = v21;
  if (SHIBYTE(v29) < 0)
    operator delete(__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "c");
  v22 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v16, (unsigned __int16 *)&__dst);
  if (v18 == v22)
    v23 = 0;
  else
    v23 = *(_QWORD *)(v22 + 56);
  *((_QWORD *)this + 3) = v23;
  if (SHIBYTE(v29) < 0)
    operator delete(__dst);
  return this;
}

void sub_1CB4F6E48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  uint64_t v20;

  MEMORY[0x1D179D2EC](v20, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern::logUnsupportedInflection(const void **a1, uint64_t a2)
{
  int v3;
  const std::basic_string<char16_t>::value_type *v4;
  std::basic_string<char16_t>::size_type v5;
  std::basic_string<char16_t> *v6;
  std::basic_string<char16_t> v7;
  std::basic_string<char16_t> v8;
  std::basic_string<char16_t> v9;

  if (morphun::util::gLogLevel <= 1)
  {
    std::operator+<char16_t>((uint64_t)&v7, L"Unsupported inflection of '", a1);
    std::basic_string<char16_t>::append(&v7, L"': ", 3uLL);
    v8 = v7;
    memset(&v7, 0, sizeof(v7));
    v3 = *(char *)(a2 + 23);
    if (v3 >= 0)
      v4 = (const std::basic_string<char16_t>::value_type *)a2;
    else
      v4 = *(const std::basic_string<char16_t>::value_type **)a2;
    if (v3 >= 0)
      v5 = *(unsigned __int8 *)(a2 + 23);
    else
      v5 = *(_QWORD *)(a2 + 8);
    std::basic_string<char16_t>::append(&v8, v4, v5);
    v9 = v8;
    memset(&v8, 0, sizeof(v8));
    if (morphun::util::gLogLevel <= 1)
    {
      if ((v9.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v6 = &v9;
      else
        v6 = (std::basic_string<char16_t> *)v9.__r_.__value_.__r.__words[0];
      morphun::util::logToTopOfStackLogger((morphun::util *)1, 0, (uint64_t)v6);
    }
    if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v9.__r_.__value_.__l.__data_);
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v8.__r_.__value_.__l.__data_);
    if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v7.__r_.__value_.__l.__data_);
  }
}

void sub_1CB4F7004(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;

  if (*(char *)(v21 - 25) < 0)
    operator delete(*(void **)(v21 - 48));
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

unint64_t morphun::resources::DataResource::getProperties(_QWORD *a1, uint64_t *a2, unint64_t a3, int a4)
{
  unsigned __int8 v8;
  _QWORD *v9;
  unint64_t result;
  int8x8_t v11;
  uint8x8_t v12;
  unint64_t v13;
  uint64_t ***v14;
  uint64_t **i;
  unint64_t v16;
  unsigned __int16 *v17;
  unint64_t v18;
  uint64_t *j;
  uint64_t *v20;
  _QWORD *exception;
  __int128 __dst[84];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  if ((v8 & 1) == 0
  {
    v20 = (uint64_t *)operator new();
    memcpy(__dst, &off_1E8675CD0, sizeof(__dst));
    std::unordered_map<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void),std::hash<std::u16string_view>,std::equal_to<std::u16string_view>,std::allocator<std::pair<std::u16string_view const,std::map<std::u16string_view,char16_t const*> (*)(void)>>>::unordered_map(v20, __dst, 56);
    morphun::resources::DataResource::getProperties(std::u16string_view,BOOL)::resources = (uint64_t)v20;
  }
  v9 = (_QWORD *)morphun::resources::DataResource::getProperties(std::u16string_view,BOOL)::resources;
  result = std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100](a2, 2 * a3);
  v11 = (int8x8_t)v9[1];
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8(v11);
    v12.i16[0] = vaddlv_u8(v12);
    if (v12.u32[0] > 1uLL)
    {
      v13 = result;
      if (result >= *(_QWORD *)&v11)
        v13 = result % *(_QWORD *)&v11;
    }
    else
    {
      v13 = (*(_QWORD *)&v11 - 1) & result;
    }
    v14 = *(uint64_t ****)(*v9 + 8 * v13);
    if (v14)
    {
      for (i = *v14; i; i = (uint64_t **)*i)
      {
        v16 = (unint64_t)i[1];
        if (v16 == result)
        {
          if (i[3] == (uint64_t *)a3)
          {
            if (!a3)
              return ((uint64_t (*)(void))i[4])();
            v17 = (unsigned __int16 *)i[2];
            v18 = a3;
            for (j = a2; *(unsigned __int16 *)j == *v17; j = (uint64_t *)((char *)j + 2))
            {
              ++v17;
              if (!--v18)
                return ((uint64_t (*)(void))i[4])();
            }
          }
        }
        else
        {
          if (v12.u32[0] > 1uLL)
          {
            if (v16 >= *(_QWORD *)&v11)
              v16 %= *(_QWORD *)&v11;
          }
          else
          {
            v16 &= *(_QWORD *)&v11 - 1;
          }
          if (v16 != v13)
            break;
        }
      }
    }
  }
  if (!a4)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string<std::u16string_view,0>(__dst, a2, a3);
    morphun::exception::Throwable::Throwable((uint64_t)exception, __dst);
    *exception = &off_1E86730C0;
  }
  a1[2] = 0;
  a1[1] = 0;
  *a1 = a1 + 1;
  return result;
}

void sub_1CB4F72A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  MEMORY[0x1D179D2EC](v15, 0x10A0C408EF24B1CLL);
  _Unwind_Resume(a1);
}

uint64_t *std::unordered_map<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void),std::hash<std::u16string_view>,std::equal_to<std::u16string_view>,std::allocator<std::pair<std::u16string_view const,std::map<std::u16string_view,char16_t const*> (*)(void)>>>::unordered_map(uint64_t *a1, __int128 *a2, uint64_t a3)
{
  unint64_t v3;
  __int128 *v5;
  unint64_t v6;
  uint64_t v7;
  __int128 *v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint8x8_t v14;
  _QWORD *v15;
  _QWORD *i;
  unint64_t v17;
  unsigned __int16 *v18;
  uint64_t v19;
  uint64_t *v20;
  _QWORD *v21;
  __int128 v22;
  float v23;
  float v24;
  _BOOL8 v25;
  unint64_t v26;
  unint64_t v27;
  int8x8_t prime;
  void *v29;
  void *v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  uint8x8_t v34;
  unint64_t v35;
  uint8x8_t v36;
  uint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  void *v43;

  *(_OWORD *)a1 = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  *((_DWORD *)a1 + 8) = 1065353216;
  if (a3)
  {
    v5 = a2;
    v6 = 0;
    v7 = 0;
    v8 = (__int128 *)((char *)a2 + 24 * a3);
    v9 = a1 + 2;
    while (1)
    {
      v10 = *(uint64_t **)v5;
      v11 = *((_QWORD *)v5 + 1);
      v12 = std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100](*(uint64_t **)v5, 2 * v11);
      v13 = v12;
      if (v6)
      {
        v14 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
        v14.i16[0] = vaddlv_u8(v14);
        if (v14.u32[0] > 1uLL)
        {
          v3 = v12;
          if (v12 >= v6)
            v3 = v12 % v6;
        }
        else
        {
          v3 = (v6 - 1) & v12;
        }
        v15 = *(_QWORD **)(*a1 + 8 * v3);
        if (v15)
        {
          for (i = (_QWORD *)*v15; i; i = (_QWORD *)*i)
          {
            v17 = i[1];
            if (v17 == v12)
            {
              if (i[3] == v11)
              {
                if (!v11)
                  goto LABEL_79;
                v18 = (unsigned __int16 *)i[2];
                v19 = v11;
                v20 = v10;
                while (*(unsigned __int16 *)v20 == *v18)
                {
                  ++v18;
                  v20 = (uint64_t *)((char *)v20 + 2);
                  if (!--v19)
                    goto LABEL_79;
                }
              }
            }
            else
            {
              if (v14.u32[0] > 1uLL)
              {
                if (v17 >= v6)
                  v17 %= v6;
              }
              else
              {
                v17 &= v6 - 1;
              }
              if (v17 != v3)
                break;
            }
          }
        }
      }
      v21 = operator new(0x28uLL);
      *v21 = 0;
      v21[1] = v13;
      v22 = *v5;
      v21[4] = *((_QWORD *)v5 + 2);
      *((_OWORD *)v21 + 1) = v22;
      v23 = (float)(unint64_t)(v7 + 1);
      v24 = *((float *)a1 + 8);
      if (!v6 || (float)(v24 * (float)v6) < v23)
        break;
LABEL_69:
      v40 = *a1;
      v41 = *(_QWORD **)(*a1 + 8 * v3);
      if (v41)
      {
        *v21 = *v41;
      }
      else
      {
        *v21 = *v9;
        *v9 = v21;
        *(_QWORD *)(v40 + 8 * v3) = v9;
        if (!*v21)
          goto LABEL_78;
        v42 = *(_QWORD *)(*v21 + 8);
        if ((v6 & (v6 - 1)) != 0)
        {
          if (v42 >= v6)
            v42 %= v6;
        }
        else
        {
          v42 &= v6 - 1;
        }
        v41 = (_QWORD *)(*a1 + 8 * v42);
      }
      *v41 = v21;
LABEL_78:
      v7 = a1[3] + 1;
      a1[3] = v7;
LABEL_79:
      v5 = (__int128 *)((char *)v5 + 24);
      if (v5 == v8)
        return a1;
    }
    v25 = (v6 & (v6 - 1)) != 0;
    if (v6 < 3)
      v25 = 1;
    v26 = v25 | (2 * v6);
    v27 = vcvtps_u32_f32(v23 / v24);
    if (v26 <= v27)
      prime = (int8x8_t)v27;
    else
      prime = (int8x8_t)v26;
    if (*(_QWORD *)&prime == 1)
    {
      prime = (int8x8_t)2;
    }
    else if ((*(_QWORD *)&prime & (*(_QWORD *)&prime - 1)) != 0)
    {
      prime = (int8x8_t)std::__next_prime(*(_QWORD *)&prime);
      v6 = a1[1];
    }
    if (*(_QWORD *)&prime > v6)
      goto LABEL_35;
    if (*(_QWORD *)&prime < v6)
    {
      v35 = vcvtps_u32_f32((float)(unint64_t)a1[3] / *((float *)a1 + 8));
      if (v6 < 3 || (v36 = (uint8x8_t)vcnt_s8((int8x8_t)v6), v36.i16[0] = vaddlv_u8(v36), v36.u32[0] > 1uLL))
      {
        v35 = std::__next_prime(v35);
      }
      else
      {
        v37 = 1 << -(char)__clz(v35 - 1);
        if (v35 >= 2)
          v35 = v37;
      }
      if (*(_QWORD *)&prime <= v35)
        prime = (int8x8_t)v35;
      if (*(_QWORD *)&prime >= v6)
      {
        v6 = a1[1];
      }
      else
      {
        if (prime)
        {
LABEL_35:
          if (*(_QWORD *)&prime >> 61)
            std::__throw_bad_array_new_length[abi:ne180100]();
          v29 = operator new(8 * *(_QWORD *)&prime);
          v30 = (void *)*a1;
          *a1 = (uint64_t)v29;
          if (v30)
            operator delete(v30);
          v31 = 0;
          a1[1] = (uint64_t)prime;
          do
            *(_QWORD *)(*a1 + 8 * v31++) = 0;
          while (*(_QWORD *)&prime != v31);
          v32 = (_QWORD *)*v9;
          if (*v9)
          {
            v33 = v32[1];
            v34 = (uint8x8_t)vcnt_s8(prime);
            v34.i16[0] = vaddlv_u8(v34);
            if (v34.u32[0] > 1uLL)
            {
              if (v33 >= *(_QWORD *)&prime)
                v33 %= *(_QWORD *)&prime;
            }
            else
            {
              v33 &= *(_QWORD *)&prime - 1;
            }
            *(_QWORD *)(*a1 + 8 * v33) = v9;
            v38 = (_QWORD *)*v32;
            if (*v32)
            {
              do
              {
                v39 = v38[1];
                if (v34.u32[0] > 1uLL)
                {
                  if (v39 >= *(_QWORD *)&prime)
                    v39 %= *(_QWORD *)&prime;
                }
                else
                {
                  v39 &= *(_QWORD *)&prime - 1;
                }
                if (v39 != v33)
                {
                  if (!*(_QWORD *)(*a1 + 8 * v39))
                  {
                    *(_QWORD *)(*a1 + 8 * v39) = v32;
                    goto LABEL_60;
                  }
                  *v32 = *v38;
                  *v38 = **(_QWORD **)(*a1 + 8 * v39);
                  **(_QWORD **)(*a1 + 8 * v39) = v38;
                  v38 = v32;
                }
                v39 = v33;
LABEL_60:
                v32 = v38;
                v38 = (_QWORD *)*v38;
                v33 = v39;
              }
              while (v38);
            }
          }
          v6 = (unint64_t)prime;
          goto LABEL_64;
        }
        v43 = (void *)*a1;
        *a1 = 0;
        if (v43)
          operator delete(v43);
        v6 = 0;
        a1[1] = 0;
      }
    }
LABEL_64:
    if ((v6 & (v6 - 1)) != 0)
    {
      if (v13 >= v6)
        v3 = v13 % v6;
      else
        v3 = v13;
    }
    else
    {
      v3 = (v6 - 1) & v13;
    }
    goto LABEL_69;
  }
  return a1;
}

void sub_1CB4F7768(_Unwind_Exception *a1)
{
  uint64_t v1;
  void *v2;

  operator delete(v2);
  std::__hash_table<std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::__unordered_map_hasher<std::u16string_view,std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::hash<std::u16string_view>,std::equal_to<std::u16string_view>,true>,std::__unordered_map_equal<std::u16string_view,std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::equal_to<std::u16string_view>,std::hash<std::u16string_view>,true>,std::allocator<std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

unint64_t std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100](uint64_t *a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v72;
  unint64_t v73;

  if (a2 > 0x20)
  {
    if (a2 <= 0x40)
    {
      v5 = *(uint64_t *)((char *)a1 + a2 - 16);
      v6 = *a1 - 0x3C5A37A36834CED9 * (v5 + a2);
      v8 = a1[2];
      v7 = a1[3];
      v9 = __ROR8__(v6 + v7, 52);
      v10 = v6 + a1[1];
      v11 = __ROR8__(v10, 7);
      v12 = v10 + v8;
      v13 = *(uint64_t *)((char *)a1 + a2 - 32) + v8;
      v14 = *(uint64_t *)((char *)a1 + a2 - 8) + v7;
      v15 = __ROR8__(v14 + v13, 52);
      v16 = v11 + __ROR8__(*a1 - 0x3C5A37A36834CED9 * (v5 + a2), 37) + v9;
      v17 = __ROR8__(v13, 37);
      v18 = *(uint64_t *)((char *)a1 + a2 - 24) + v13;
      v19 = __ROR8__(v18, 7);
      v20 = v16 + __ROR8__(v12, 31);
      v21 = v18 + v5;
      v22 = v21 + v14;
      v23 = 0x9AE16A3B2F90404FLL;
      v24 = 0xC3A5C85C97CB3127 * (v22 + v20) - 0x651E95C4D06FBFB1 * (v12 + v7 + v17 + v19 + v15 + __ROR8__(v21, 31));
      v25 = v20 - 0x3C5A37A36834CED9 * (v24 ^ (v24 >> 47));
      return (v25 ^ (v25 >> 47)) * v23;
    }
    v4 = 0x9DDFEA08EB382D69;
    v32 = *(uint64_t *)((char *)a1 + a2 - 48);
    v33 = *(uint64_t *)((char *)a1 + a2 - 40);
    v34 = *(uint64_t *)((char *)a1 + a2 - 24);
    v36 = *(uint64_t *)((char *)a1 + a2 - 64);
    v35 = *(uint64_t *)((char *)a1 + a2 - 56);
    v37 = *(uint64_t *)((char *)a1 + a2 - 16);
    v38 = *(uint64_t *)((char *)a1 + a2 - 8);
    v39 = v35 + v37;
    v40 = 0x9DDFEA08EB382D69
        * (v34 ^ ((0x9DDFEA08EB382D69 * (v34 ^ (v32 + a2))) >> 47) ^ (0x9DDFEA08EB382D69 * (v34 ^ (v32 + a2))));
    v41 = 0x9DDFEA08EB382D69 * (v40 ^ (v40 >> 47));
    v42 = v36 + a2 + v35 + v32;
    v43 = v42 + v33;
    v44 = __ROR8__(v42, 44) + v36 + a2 + __ROR8__(v33 + v36 + a2 - 0x622015F714C7D297 * (v40 ^ (v40 >> 47)), 21);
    v45 = v35 + v37 + *(uint64_t *)((char *)a1 + a2 - 32) - 0x4B6D499041670D8DLL;
    v46 = v45 + v34 + v37;
    v47 = __ROR8__(v46, 44);
    v48 = v46 + v38;
    v49 = v47 + v45 + __ROR8__(v45 + v33 + v38, 21);
    v51 = *a1;
    v50 = a1 + 4;
    v52 = v51 - 0x4B6D499041670D8DLL * v33;
    v53 = -(uint64_t)((a2 - 1) & 0xFFFFFFFFFFFFFFC0);
    do
    {
      v54 = *(v50 - 3);
      v55 = v52 + v43 + v39 + v54;
      v56 = v50[2];
      v57 = v50[3];
      v58 = v50[1];
      v39 = v58 + v43 - 0x4B6D499041670D8DLL * __ROR8__(v39 + v44 + v56, 42);
      v59 = v41 + v48;
      v60 = *(v50 - 2);
      v61 = *(v50 - 1);
      v62 = *(v50 - 4) - 0x4B6D499041670D8DLL * v44;
      v63 = v62 + v48 + v61;
      v64 = v62 + v54 + v60;
      v43 = v64 + v61;
      v65 = __ROR8__(v64, 44) + v62;
      v66 = (0xB492B66FBE98F273 * __ROR8__(v55, 37)) ^ v49;
      v52 = 0xB492B66FBE98F273 * __ROR8__(v59, 33);
      v44 = v65 + __ROR8__(v63 + v66, 21);
      v67 = v52 + v49 + *v50;
      v48 = v67 + v58 + v56 + v57;
      v49 = __ROR8__(v67 + v58 + v56, 44) + v67 + __ROR8__(v39 + v60 + v67 + v57, 21);
      v50 += 8;
      v41 = v66;
      v53 += 64;
    }
    while (v53);
    v68 = v52
        - 0x622015F714C7D297
        * ((0x9DDFEA08EB382D69
          * (v49 ^ ((0x9DDFEA08EB382D69 * (v49 ^ v44)) >> 47) ^ (0x9DDFEA08EB382D69 * (v49 ^ v44)))) ^ ((0x9DDFEA08EB382D69 * (v49 ^ ((0x9DDFEA08EB382D69 * (v49 ^ v44)) >> 47) ^ (0x9DDFEA08EB382D69 * (v49 ^ v44)))) >> 47));
    v69 = 0x9DDFEA08EB382D69
        * (v68 ^ (v66
                - 0x4B6D499041670D8DLL * (v39 ^ (v39 >> 47))
                - 0x622015F714C7D297
                * ((0x9DDFEA08EB382D69
                  * (v48 ^ ((0x9DDFEA08EB382D69 * (v48 ^ v43)) >> 47) ^ (0x9DDFEA08EB382D69 * (v48 ^ v43)))) ^ ((0x9DDFEA08EB382D69 * (v48 ^ ((0x9DDFEA08EB382D69 * (v48 ^ v43)) >> 47) ^ (0x9DDFEA08EB382D69 * (v48 ^ v43)))) >> 47))));
    v70 = 0x9DDFEA08EB382D69 * (v68 ^ (v69 >> 47) ^ v69);
    goto LABEL_13;
  }
  if (a2 > 0x10)
  {
    v26 = a1[1];
    v27 = 0xB492B66FBE98F273 * *a1;
    v28 = __ROR8__(0x9AE16A3B2F90404FLL * *(uint64_t *)((char *)a1 + a2 - 8), 30) + __ROR8__(v27 - v26, 43);
    v29 = v27 + a2 + __ROR8__(v26 ^ 0xC949D7C7509E6557, 20) - 0x9AE16A3B2F90404FLL * *(uint64_t *)((char *)a1 + a2 - 8);
    v23 = 0x9DDFEA08EB382D69;
    v30 = 0x9DDFEA08EB382D69 * (v29 ^ (v28 - 0x3C5A37A36834CED9 * *(uint64_t *)((char *)a1 + a2 - 16)));
    v31 = v29 ^ (v30 >> 47) ^ v30;
LABEL_8:
    v25 = 0x9DDFEA08EB382D69 * v31;
    return (v25 ^ (v25 >> 47)) * v23;
  }
  if (a2 < 9)
  {
    if (a2 >= 4)
    {
      v72 = *(unsigned int *)((char *)a1 + a2 - 4);
      v23 = 0x9DDFEA08EB382D69;
      v73 = 0x9DDFEA08EB382D69 * (((8 * *(_DWORD *)a1) + a2) ^ v72);
      v31 = v72 ^ (v73 >> 47) ^ v73;
      goto LABEL_8;
    }
    v4 = 0x9AE16A3B2F90404FLL;
    if (!a2)
      return v4;
    v70 = (0xC949D7C7509E6557 * (a2 + 4 * *((unsigned __int8 *)a1 + a2 - 1))) ^ (0x9AE16A3B2F90404FLL
                                                                                   * (*(unsigned __int8 *)a1 | ((unint64_t)*((unsigned __int8 *)a1 + (a2 >> 1)) << 8)));
LABEL_13:
    v4 *= v70 ^ (v70 >> 47);
    return v4;
  }
  v2 = *(uint64_t *)((char *)a1 + a2 - 8);
  v3 = __ROR8__(v2 + a2, a2);
  return (0x9DDFEA08EB382D69
        * ((0x9DDFEA08EB382D69
          * (v3 ^ ((0x9DDFEA08EB382D69 * (v3 ^ *a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (v3 ^ *a1)))) ^ ((0x9DDFEA08EB382D69 * (v3 ^ ((0x9DDFEA08EB382D69 * (v3 ^ *a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (v3 ^ *a1)))) >> 47))) ^ v2;
}

uint64_t std::__hash_table<std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::__unordered_map_hasher<std::u16string_view,std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::hash<std::u16string_view>,std::equal_to<std::u16string_view>,true>,std::__unordered_map_equal<std::u16string_view,std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::equal_to<std::u16string_view>,std::hash<std::u16string_view>,true>,std::allocator<std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>>>::~__hash_table(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v4;

  v2 = *(_QWORD **)(a1 + 16);
  if (v2)
  {
    do
    {
      v3 = (_QWORD *)*v2;
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
  v4 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v4)
    operator delete(v4);
  return a1;
}

uint64_t morphun::resources::DataResource::getString(uint64_t *a1, unint64_t a2, char a3)
{
  unsigned __int8 v6;
  _QWORD *v7;
  unint64_t v8;
  int8x8_t v9;
  uint8x8_t v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *i;
  unint64_t v14;
  unsigned __int16 *v15;
  unint64_t v16;
  uint64_t *j;
  uint64_t *v19;
  _QWORD *exception;
  _BYTE v21[1512];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  if ((v6 & 1) == 0
  {
    v19 = (uint64_t *)operator new();
    memcpy(v21, &off_1E8676210, sizeof(v21));
    std::unordered_map<std::u16string_view,char16_t const*>::unordered_map(v19, (__int128 *)v21, 63);
    morphun::resources::DataResource::getString(std::u16string_view,BOOL)::resources = (uint64_t)v19;
  }
  v7 = (_QWORD *)morphun::resources::DataResource::getString(std::u16string_view,BOOL)::resources;
  v8 = std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100](a1, 2 * a2);
  v9 = (int8x8_t)v7[1];
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8(v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      v11 = v8;
      if (v8 >= *(_QWORD *)&v9)
        v11 = v8 % *(_QWORD *)&v9;
    }
    else
    {
      v11 = (*(_QWORD *)&v9 - 1) & v8;
    }
    v12 = *(_QWORD **)(*v7 + 8 * v11);
    if (v12)
    {
      for (i = (_QWORD *)*v12; i; i = (_QWORD *)*i)
      {
        v14 = i[1];
        if (v14 == v8)
        {
          if (i[3] == a2)
          {
            if (!a2)
              return i[4];
            v15 = (unsigned __int16 *)i[2];
            v16 = a2;
            for (j = a1; *(unsigned __int16 *)j == *v15; j = (uint64_t *)((char *)j + 2))
            {
              ++v15;
              if (!--v16)
                return i[4];
            }
          }
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v14 >= *(_QWORD *)&v9)
              v14 %= *(_QWORD *)&v9;
          }
          else
          {
            v14 &= *(_QWORD *)&v9 - 1;
          }
          if (v14 != v11)
            break;
        }
      }
    }
  }
  if ((a3 & 1) == 0)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string<std::u16string_view,0>(v21, a1, a2);
    morphun::exception::Throwable::Throwable((uint64_t)exception, (__int128 *)v21);
    *exception = &off_1E86730C0;
  }
  return 0;
}

void sub_1CB4F7E40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  uint64_t v14;

  MEMORY[0x1D179D2EC](v14, 0x10A0C408EF24B1CLL);
  _Unwind_Resume(a1);
}

uint64_t *std::unordered_map<std::u16string_view,char16_t const*>::unordered_map(uint64_t *a1, __int128 *a2, uint64_t a3)
{
  unint64_t v3;
  __int128 *v5;
  unint64_t v6;
  uint64_t v7;
  __int128 *v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint8x8_t v14;
  _QWORD *v15;
  _QWORD *i;
  unint64_t v17;
  unsigned __int16 *v18;
  uint64_t v19;
  uint64_t *v20;
  _QWORD *v21;
  __int128 v22;
  float v23;
  float v24;
  _BOOL8 v25;
  unint64_t v26;
  unint64_t v27;
  int8x8_t prime;
  void *v29;
  void *v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  uint8x8_t v34;
  unint64_t v35;
  uint8x8_t v36;
  uint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  void *v43;

  *(_OWORD *)a1 = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  *((_DWORD *)a1 + 8) = 1065353216;
  if (a3)
  {
    v5 = a2;
    v6 = 0;
    v7 = 0;
    v8 = (__int128 *)((char *)a2 + 24 * a3);
    v9 = a1 + 2;
    while (1)
    {
      v10 = *(uint64_t **)v5;
      v11 = *((_QWORD *)v5 + 1);
      v12 = std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100](*(uint64_t **)v5, 2 * v11);
      v13 = v12;
      if (v6)
      {
        v14 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
        v14.i16[0] = vaddlv_u8(v14);
        if (v14.u32[0] > 1uLL)
        {
          v3 = v12;
          if (v12 >= v6)
            v3 = v12 % v6;
        }
        else
        {
          v3 = (v6 - 1) & v12;
        }
        v15 = *(_QWORD **)(*a1 + 8 * v3);
        if (v15)
        {
          for (i = (_QWORD *)*v15; i; i = (_QWORD *)*i)
          {
            v17 = i[1];
            if (v17 == v12)
            {
              if (i[3] == v11)
              {
                if (!v11)
                  goto LABEL_79;
                v18 = (unsigned __int16 *)i[2];
                v19 = v11;
                v20 = v10;
                while (*(unsigned __int16 *)v20 == *v18)
                {
                  ++v18;
                  v20 = (uint64_t *)((char *)v20 + 2);
                  if (!--v19)
                    goto LABEL_79;
                }
              }
            }
            else
            {
              if (v14.u32[0] > 1uLL)
              {
                if (v17 >= v6)
                  v17 %= v6;
              }
              else
              {
                v17 &= v6 - 1;
              }
              if (v17 != v3)
                break;
            }
          }
        }
      }
      v21 = operator new(0x28uLL);
      *v21 = 0;
      v21[1] = v13;
      v22 = *v5;
      v21[4] = *((_QWORD *)v5 + 2);
      *((_OWORD *)v21 + 1) = v22;
      v23 = (float)(unint64_t)(v7 + 1);
      v24 = *((float *)a1 + 8);
      if (!v6 || (float)(v24 * (float)v6) < v23)
        break;
LABEL_69:
      v40 = *a1;
      v41 = *(_QWORD **)(*a1 + 8 * v3);
      if (v41)
      {
        *v21 = *v41;
      }
      else
      {
        *v21 = *v9;
        *v9 = v21;
        *(_QWORD *)(v40 + 8 * v3) = v9;
        if (!*v21)
          goto LABEL_78;
        v42 = *(_QWORD *)(*v21 + 8);
        if ((v6 & (v6 - 1)) != 0)
        {
          if (v42 >= v6)
            v42 %= v6;
        }
        else
        {
          v42 &= v6 - 1;
        }
        v41 = (_QWORD *)(*a1 + 8 * v42);
      }
      *v41 = v21;
LABEL_78:
      v7 = a1[3] + 1;
      a1[3] = v7;
LABEL_79:
      v5 = (__int128 *)((char *)v5 + 24);
      if (v5 == v8)
        return a1;
    }
    v25 = (v6 & (v6 - 1)) != 0;
    if (v6 < 3)
      v25 = 1;
    v26 = v25 | (2 * v6);
    v27 = vcvtps_u32_f32(v23 / v24);
    if (v26 <= v27)
      prime = (int8x8_t)v27;
    else
      prime = (int8x8_t)v26;
    if (*(_QWORD *)&prime == 1)
    {
      prime = (int8x8_t)2;
    }
    else if ((*(_QWORD *)&prime & (*(_QWORD *)&prime - 1)) != 0)
    {
      prime = (int8x8_t)std::__next_prime(*(_QWORD *)&prime);
      v6 = a1[1];
    }
    if (*(_QWORD *)&prime > v6)
      goto LABEL_35;
    if (*(_QWORD *)&prime < v6)
    {
      v35 = vcvtps_u32_f32((float)(unint64_t)a1[3] / *((float *)a1 + 8));
      if (v6 < 3 || (v36 = (uint8x8_t)vcnt_s8((int8x8_t)v6), v36.i16[0] = vaddlv_u8(v36), v36.u32[0] > 1uLL))
      {
        v35 = std::__next_prime(v35);
      }
      else
      {
        v37 = 1 << -(char)__clz(v35 - 1);
        if (v35 >= 2)
          v35 = v37;
      }
      if (*(_QWORD *)&prime <= v35)
        prime = (int8x8_t)v35;
      if (*(_QWORD *)&prime >= v6)
      {
        v6 = a1[1];
      }
      else
      {
        if (prime)
        {
LABEL_35:
          if (*(_QWORD *)&prime >> 61)
            std::__throw_bad_array_new_length[abi:ne180100]();
          v29 = operator new(8 * *(_QWORD *)&prime);
          v30 = (void *)*a1;
          *a1 = (uint64_t)v29;
          if (v30)
            operator delete(v30);
          v31 = 0;
          a1[1] = (uint64_t)prime;
          do
            *(_QWORD *)(*a1 + 8 * v31++) = 0;
          while (*(_QWORD *)&prime != v31);
          v32 = (_QWORD *)*v9;
          if (*v9)
          {
            v33 = v32[1];
            v34 = (uint8x8_t)vcnt_s8(prime);
            v34.i16[0] = vaddlv_u8(v34);
            if (v34.u32[0] > 1uLL)
            {
              if (v33 >= *(_QWORD *)&prime)
                v33 %= *(_QWORD *)&prime;
            }
            else
            {
              v33 &= *(_QWORD *)&prime - 1;
            }
            *(_QWORD *)(*a1 + 8 * v33) = v9;
            v38 = (_QWORD *)*v32;
            if (*v32)
            {
              do
              {
                v39 = v38[1];
                if (v34.u32[0] > 1uLL)
                {
                  if (v39 >= *(_QWORD *)&prime)
                    v39 %= *(_QWORD *)&prime;
                }
                else
                {
                  v39 &= *(_QWORD *)&prime - 1;
                }
                if (v39 != v33)
                {
                  if (!*(_QWORD *)(*a1 + 8 * v39))
                  {
                    *(_QWORD *)(*a1 + 8 * v39) = v32;
                    goto LABEL_60;
                  }
                  *v32 = *v38;
                  *v38 = **(_QWORD **)(*a1 + 8 * v39);
                  **(_QWORD **)(*a1 + 8 * v39) = v38;
                  v38 = v32;
                }
                v39 = v33;
LABEL_60:
                v32 = v38;
                v38 = (_QWORD *)*v38;
                v33 = v39;
              }
              while (v38);
            }
          }
          v6 = (unint64_t)prime;
          goto LABEL_64;
        }
        v43 = (void *)*a1;
        *a1 = 0;
        if (v43)
          operator delete(v43);
        v6 = 0;
        a1[1] = 0;
      }
    }
LABEL_64:
    if ((v6 & (v6 - 1)) != 0)
    {
      if (v13 >= v6)
        v3 = v13 % v6;
      else
        v3 = v13;
    }
    else
    {
      v3 = (v6 - 1) & v13;
    }
    goto LABEL_69;
  }
  return a1;
}

void sub_1CB4F82FC(_Unwind_Exception *a1)
{
  uint64_t v1;
  void *v2;

  operator delete(v2);
  std::__hash_table<std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::__unordered_map_hasher<std::u16string_view,std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::hash<std::u16string_view>,std::equal_to<std::u16string_view>,true>,std::__unordered_map_equal<std::u16string_view,std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::equal_to<std::u16string_view>,std::hash<std::u16string_view>,true>,std::allocator<std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

uint64_t mtok_getStartChar(uint64_t a1)
{
  uint64_t v1;

  v1 = npc<morphun::Token const>(a1);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
}

void sub_1CB4F83D0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t mtok_getEndChar(uint64_t a1)
{
  uint64_t v1;

  v1 = npc<morphun::Token const>(a1);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 32))(v1);
}

uint64_t mtok_getLength(uint64_t a1)
{
  uint64_t v1;

  v1 = npc<morphun::Token const>(a1);
  return (*(_DWORD *)(v1 + 12) - *(_DWORD *)(v1 + 8));
}

CFStringRef mtok_getValueCopy(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  const UniChar *v3;
  const UniChar *v4;
  int v5;
  const UniChar *v6;
  CFIndex v7;

  v1 = npc<morphun::Token const>(a1);
  v4 = *(const UniChar **)(v1 + 16);
  v2 = v1 + 16;
  v3 = v4;
  v5 = *(char *)(v2 + 23);
  if (v5 >= 0)
    v6 = (const UniChar *)v2;
  else
    v6 = v3;
  if (v5 >= 0)
    v7 = *(unsigned __int8 *)(v2 + 23);
  else
    v7 = *(_QWORD *)(v2 + 8);
  return CFStringCreateWithCharacters(0, v6, v7);
}

CFStringRef mtok_getCleanValueCopy(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  const UniChar *v3;
  const UniChar *v4;
  int v5;
  const UniChar *v6;
  CFIndex v7;

  v1 = npc<morphun::Token const>(a1);
  v4 = *(const UniChar **)(v1 + 40);
  v2 = v1 + 40;
  v3 = v4;
  v5 = *(char *)(v2 + 23);
  if (v5 >= 0)
    v6 = (const UniChar *)v2;
  else
    v6 = v3;
  if (v5 >= 0)
    v7 = *(unsigned __int8 *)(v2 + 23);
  else
    v7 = *(_QWORD *)(v2 + 8);
  return CFStringCreateWithCharacters(0, v6, v7);
}

uint64_t mtok_getPrevious(uint64_t a1)
{
  return *(_QWORD *)(npc<morphun::Token const>(a1) + 72);
}

uint64_t mtok_getNext(uint64_t a1)
{
  return *(_QWORD *)(npc<morphun::Token const>(a1) + 80);
}

BOOL mtok_isSignificant(uint64_t a1)
{
  return *(_BYTE *)(npc<morphun::Token const>(a1) + 64) != 0;
}

BOOL mtok_isWhitespace(uint64_t a1)
{
  return *(_BYTE *)(npc<morphun::Token const>(a1) + 65) != 0;
}

uint64_t mtok_getType(const void *a1)
{
  uint64_t result;
  void *v3;

  npc<morphun::Token const>((uint64_t)a1);
  {
    return 6;
  }
  npc<morphun::Token const>((uint64_t)a1);
  result = 0;
  if (!v3)
  {
    npc<morphun::Token const>((uint64_t)a1);
    {
      return 1;
    }
    else
    {
      npc<morphun::Token const>((uint64_t)a1);
      {
        return 3;
      }
      else
      {
        npc<morphun::Token const>((uint64_t)a1);
        {
          return 4;
        }
        else
        {
          npc<morphun::Token const>((uint64_t)a1);
          {
            return 5;
          }
          else
          {
            npc<morphun::Token const>((uint64_t)a1);
            {
              return 2;
            }
            else
            {
              return 7;
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL mtok_isType(const void *a1, uint64_t a2)
{
  return mtok_getType(a1) == a2;
}

uint64_t **com::apple::siri::tokenizer::data::config_tr::getContent@<X0>(uint64_t **a1@<X8>)
{
  _OWORD v3[3];
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v3[0] = xmmword_1E86767F8;
  v3[1] = *(_OWORD *)&off_1E8676808;
  v3[2] = xmmword_1E8676818;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 2);
}

uint64_t morphun::tokenizer::dictionary::Segment::Segment(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, int a6, int a7, int a8, int a9)
{
  unint64_t v11;
  unint64_t v12;
  float v13;
  int16x8_t v14;

  *(_QWORD *)a1 = a4;
  *(_QWORD *)(a1 + 8) = a5;
  *(_DWORD *)(a1 + 16) = a6;
  *(_DWORD *)(a1 + 20) = a7;
  *(_DWORD *)(a1 + 24) = a8;
  *(_DWORD *)(a1 + 28) = a9;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 80) = 1065353216;
  *(_DWORD *)(a1 + 84) = 0;
  *(_DWORD *)(a1 + 88) = 0;
  *(_DWORD *)(a1 + 92) = 1;
  *(_QWORD *)(a1 + 96) = 0;
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 16);
  if (a5 < a8)
    std::__throw_out_of_range[abi:ne180100]("string_view::substr");
  v11 = a5 - a8;
  if (v11 >= a7 - a8)
    LODWORD(v11) = a7 - a8;
  v12 = morphun::dictionary::metadata::MarisaTrie<int>::find((marisa::Trie *)(a3 + 40), a4 + 2 * a8, v11);
  if (HIDWORD(v12))
  {
    v13 = (float)(v12 & 0xFFFFFF);
    v14 = (int16x8_t)vshlq_u32((uint32x4_t)vdupq_n_s32(v12), (uint32x4_t)xmmword_1CB5DD550);
    v14.i64[0] = *(_QWORD *)&vmovn_s32((int32x4_t)v14) & 0xFF81FF81FF81FF81;
    *(_DWORD *)(a1 + 52) = vmovn_s16(v14).u32[0];
    *(_BYTE *)(a1 + 56) = BYTE3(v12) & 1;
  }
  else
  {
    v13 = *(float *)(a2 + 44);
  }
  *(float *)(a1 + 48) = v13;
  return a1;
}

void sub_1CB4F8A78(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::shared_ptr<morphun::analysis::util::AttributeImpl>::~shared_ptr[abi:ne180100](v1);
  _Unwind_Resume(a1);
}

float morphun::tokenizer::dictionary::Segment::tie(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  float v9;
  float result;

  v4 = *(_QWORD *)(a1 + 40);
  if (!v4)
    LODWORD(v4) = *(_DWORD *)(a1 + 20) - *(_DWORD *)(a1 + 24);
  std::shared_ptr<morphun::tokenizer::dictionary::Segment>::operator=[abi:ne180100]((_QWORD *)(a1 + 64), *a2, a2[1]);
  v5 = *a2;
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(*a2 + 92) * v4;
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_DWORD *)(v5 + 88);
  if (*(int *)(a1 + 28) < 0)
    v8 = 1;
  else
    v8 = 2;
  *(float *)(a1 + 80) = *(float *)(v5 + 80) * *(float *)(a1 + 48);
  *(_DWORD *)(a1 + 84) = v6 + 1;
  *(_DWORD *)(a1 + 88) = v8 + v7;
  v9 = 0.5;
  if (!*(_QWORD *)(a1 + 40))
    v9 = 0.0;
  result = (float)((float)(*(float *)(v5 + 100) + (float)(int)v4) - (float)*(int *)(a1 + 104)) - v9;
  *(float *)(a1 + 100) = result;
  return result;
}

_QWORD *std::shared_ptr<morphun::tokenizer::dictionary::Segment>::operator=[abi:ne180100](_QWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (a3)
  {
    v4 = (unint64_t *)(a3 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = (std::__shared_weak_count *)a1[1];
  *a1 = a2;
  a1[1] = a3;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return a1;
}

uint64_t morphun::tokenizer::locale::da::DaTokenizer::createTokenExtractor(morphun::util::ULocale *a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  __int128 v7[2];
  int v8;
  uint64_t v9;
  int v10;
  _QWORD *v11;
  _QWORD *v12;
  void *v13;
  void *v14;
  void *__p;
  void *v16;
  char *v17;
  _QWORD v18[3];
  _QWORD v19[3];
  _QWORD **v20;
  _QWORD *v21[2];
  _QWORD v22[3];
  _OWORD v23[3];
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v4 = operator new();
  v23[0] = xmmword_1E8686678;
  v23[1] = *(_OWORD *)&off_1E8686688;
  v23[2] = xmmword_1E8686698;
  std::set<std::u16string_view>::set[abi:ne180100]((uint64_t)v22, (uint64_t)v23, 3);
  v21[0] = 0;
  v21[1] = 0;
  v20 = v21;
  memset(v19, 0, sizeof(v19));
  v5 = operator new(0x20uLL);
  v18[1] = v5 + 2;
  v18[2] = v5 + 2;
  *v5 = xmmword_1E86866A8;
  v5[1] = *(_OWORD *)&off_1E86866B8;
  v18[0] = v5;
  morphun::tokenizer::dictionary::DictionaryTokenizerConfig::DictionaryTokenizerConfig((uint64_t)v7, v22, &v20, (uint64_t)v19, (uint64_t)v18);
  operator delete(v5);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(v21[0]);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy((_QWORD *)v22[1]);
  *((_QWORD *)&v7[0] + 1) = 0x400000003;
  v8 = 4000;
  v9 = 0x3F19999A3E800000;
  v10 = 20;
  morphun::tokenizer::GermanicWordAndDelimiterTokenExtractor::GermanicWordAndDelimiterTokenExtractor(v4, a1, a2, v7);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(v17);
  if (__p)
  {
    v16 = __p;
    operator delete(__p);
  }
  if (v13)
  {
    v14 = v13;
    operator delete(v13);
  }
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(v12);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(v11);
  return v4;
}

void sub_1CB4F8D48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  morphun::tokenizer::locale::da::DaDictionaryTokenizerConfig::~DaDictionaryTokenizerConfig((char **)va);
  MEMORY[0x1D179D2EC](v2, 0x10F3C4092900CF8);
  _Unwind_Resume(a1);
}

void morphun::tokenizer::locale::da::DaDictionaryTokenizerConfig::~DaDictionaryTokenizerConfig(char **this)
{
  char *v2;
  char *v3;

  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(this[21]);
  v2 = this[17];
  if (v2)
  {
    this[18] = v2;
    operator delete(v2);
  }
  v3 = this[14];
  if (v3)
  {
    this[15] = v3;
    operator delete(v3);
  }
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(this[12]);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(this[9]);
}

uint64_t **com::apple::siri::tokenizer::data::config_lt::getContent@<X0>(uint64_t **a1@<X8>)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v3 = xmmword_1E8686A40;
  v4 = 0x1CB73E8CALL;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

uint64_t *morphun::analysis::AnalyzerFactory::AnalyzerFactory(uint64_t *this, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *this = *a2;
  *(uint64_t *)((char *)this + *(_QWORD *)(v2 - 40)) = a2[1];
  return this;
}

void morphun::dialog::language::PlCommonConceptFactory::~PlCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1E8667AD8);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1E8667AD8);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t **com::apple::siri::tokenizer::data::config_fr::getContent@<X0>(uint64_t **a1@<X8>)
{
  _OWORD v3[3];
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v3[0] = xmmword_1E8676828;
  v3[1] = unk_1E8676838;
  v3[2] = xmmword_1E8676848;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 2);
}

void morphun::analysis::filter::SplitPunctuationFilter::~SplitPunctuationFilter(void **this)
{
  if (*((char *)this + 383) < 0)
    operator delete(this[45]);
  if (*((char *)this + 359) < 0)
    operator delete(this[42]);
  if (*((char *)this + 335) < 0)
    operator delete(this[39]);
  if (*((char *)this + 311) < 0)
    operator delete(this[36]);
  std::__tree<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>>>::destroy(this[16]);
  morphun::analysis::TokenFilter::~TokenFilter((morphun::analysis::TokenFilter *)this, (uint64_t *)&off_1E86697F8);
}

{
  if (*((char *)this + 383) < 0)
    operator delete(this[45]);
  if (*((char *)this + 359) < 0)
    operator delete(this[42]);
  if (*((char *)this + 335) < 0)
    operator delete(this[39]);
  if (*((char *)this + 311) < 0)
    operator delete(this[36]);
  std::__tree<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>>>::destroy(this[16]);
  morphun::analysis::TokenFilter::~TokenFilter((morphun::analysis::TokenFilter *)this, (uint64_t *)&off_1E86697F8);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::analysis::filter::SplitPunctuationFilter::incrementToken(morphun::analysis::filter::SplitPunctuationFilter *this)
{
  morphun::analysis::filter::SplitPunctuationFilter *v1;
  int v2;
  std::basic_string<char16_t> *v3;
  int v4;
  int v5;
  std::basic_string<char16_t>::size_type v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  const std::basic_string<char16_t>::value_type *v10;
  std::basic_string<char16_t>::size_type v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  BOOL v17;
  uint64_t v18;
  int v19;
  int v20;
  BOOL v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  _BOOL4 isAdjacentDigit;
  _BOOL4 v30;
  BOOL v31;
  _BOOL4 v32;
  int v33;
  int v34;
  unint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  std::basic_string<char16_t> *v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  morphun::exception::NullPointerException *exception;
  std::basic_string<char16_t> *v49;
  std::basic_string<char16_t> *v50;
  int v51;
  std::basic_string<char16_t> *__str;
  char *v53;
  char *v54;
  int v55;
  int v56;

  v1 = this;
  v2 = 0;
  v3 = (std::basic_string<char16_t> *)((char *)this + 288);
  v53 = (char *)this + 360;
  v54 = (char *)this + 120;
  __str = (std::basic_string<char16_t> *)((char *)this + 288);
  v49 = (std::basic_string<char16_t> *)((char *)this + 336);
  v50 = (std::basic_string<char16_t> *)((char *)this + 312);
  while (1)
  {
    v4 = v2;
    v5 = *((char *)v1 + 311);
    if (v5 < 0)
    {
      v6 = *((_QWORD *)v1 + 37);
      if (v6)
      {
        v7 = v3->__r_.__value_.__r.__words[0];
        goto LABEL_18;
      }
    }
    else if (*((_BYTE *)v1 + 311))
    {
      v6 = *((unsigned __int8 *)v1 + 311);
      v7 = (uint64_t)v3;
LABEL_16:
      if (!(_BYTE)v5)
        goto LABEL_119;
      goto LABEL_19;
    }
    v8 = *((_QWORD *)v1 + 12);
    if (!v8)
    {
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
    if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v8 + 24))(v8))
    {
      v2 = 0;
      return (v4 | v2) & 1;
    }
    v9 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)v1 + 13));
    v7 = (uint64_t)v9 + *(_QWORD *)(*v9 - 96);
    if (*(char *)(v7 + 23) < 0)
    {
      v7 = *(_QWORD *)v7;
      v6 = *(_QWORD *)((char *)v9 + *(_QWORD *)(*v9 - 96) + 8);
    }
    else
    {
      v6 = *(unsigned __int8 *)(v7 + 23);
    }
    v10 = (const std::basic_string<char16_t>::value_type *)(*((_QWORD *)v1 + 13)
                                                          + *(_QWORD *)(**((_QWORD **)v1 + 13) - 96));
    if (*((char *)v10 + 23) < 0)
    {
      v10 = *(const std::basic_string<char16_t>::value_type **)v10;
      v11 = *(_QWORD *)(*((_QWORD *)v1 + 13) + *(_QWORD *)(**((_QWORD **)v1 + 13) - 96) + 8);
    }
    else
    {
      v11 = *((unsigned __int8 *)v10 + 23);
    }
    std::basic_string<char16_t>::__assign_external(v3, v10, v11);
    v5 = *((char *)v1 + 311);
    if ((v5 & 0x80000000) == 0)
      goto LABEL_16;
LABEL_18:
    if (!*((_QWORD *)v1 + 37))
      goto LABEL_119;
LABEL_19:
    v12 = *((_QWORD *)v1 + 14);
    if (v12 && ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 56))(v12) & 1) != 0)
      goto LABEL_119;
    if ((int)v6 >= 1)
      break;
    LODWORD(v23) = 0;
    LODWORD(v15) = 0;
    LODWORD(v13) = 0;
LABEL_58:
    if ((int)v13 >= (int)v6)
    {
      v46 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
      std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v46 + *(_QWORD *)(*v46 - 96)), __str);
      if (*((char *)this + 311) < 0)
      {
        **((_WORD **)this + 36) = 0;
        *((_QWORD *)this + 37) = 0;
      }
      else
      {
        *((_WORD *)this + 144) = 0;
        *((_BYTE *)this + 311) = 0;
      }
LABEL_119:
      v2 = 1;
      return (v4 | v2) & 1;
    }
    if (*((char *)this + 335) < 0)
    {
      **((_WORD **)this + 39) = 0;
      *((_QWORD *)this + 40) = 0;
    }
    else
    {
      *((_WORD *)this + 156) = 0;
      *((_BYTE *)this + 335) = 0;
    }
    if (*((char *)this + 359) < 0)
    {
      **((_WORD **)this + 42) = 0;
      *((_QWORD *)this + 43) = 0;
    }
    else
    {
      *((_WORD *)this + 168) = 0;
      *((_BYTE *)this + 359) = 0;
    }
    npc<std::basic_string<char16_t>>((uint64_t)v50);
    if (*((char *)this + 335) < 0)
    {
      **((_WORD **)this + 39) = 0;
      *((_QWORD *)this + 40) = 0;
    }
    else
    {
      *((_WORD *)this + 156) = 0;
      *((_BYTE *)this + 335) = 0;
    }
    npc<std::basic_string<char16_t>>((uint64_t)v49);
    if (*((char *)this + 359) < 0)
    {
      **((_WORD **)this + 42) = 0;
      *((_QWORD *)this + 43) = 0;
    }
    else
    {
      *((_WORD *)this + 168) = 0;
      *((_BYTE *)this + 359) = 0;
    }
    if (*((char *)this + 335) < 0)
      v35 = (*((_QWORD *)this + 41) & 0x7FFFFFFFFFFFFFFFLL) - 1;
    else
      v35 = 10;
    if (v6 >= v35)
      std::basic_string<char16_t>::reserve(v50, v6);
    if (*((char *)this + 359) < 0)
      v36 = (*((_QWORD *)this + 44) & 0x7FFFFFFFFFFFFFFFLL) - 1;
    else
      v36 = 10;
    if (v6 >= v36)
      std::basic_string<char16_t>::reserve(v49, v6);
    if ((int)v6 >= 1)
    {
      v37 = 0;
      do
      {
        v38 = morphun::util::StringViewUtils::codePointAt(v7, v6, v37);
        v39 = v50;
        if (v37 < (int)v23 || (v39 = v49, v37 > (int)v15))
          morphun::util::StringUtils::appendCodePoint(v39, v38);
        if (v38 < 0x10000)
          v40 = 1;
        else
          v40 = 2;
        v37 += v40;
      }
      while (v37 < (int)v6);
    }
    v1 = this;
    if (*((char *)this + 359) < 0)
      v41 = *((_QWORD *)this + 43);
    else
      v41 = *((unsigned __int8 *)this + 359);
    v3 = __str;
    if (v41)
    {
      std::basic_string<char16_t>::operator=(__str, v49);
    }
    else if (*((char *)this + 311) < 0)
    {
      **((_WORD **)this + 36) = 0;
      *((_QWORD *)this + 37) = 0;
    }
    else
    {
      *((_WORD *)this + 144) = 0;
      *((_BYTE *)this + 311) = 0;
    }
    v42 = *((unsigned __int8 *)this + 335);
    if ((*((char *)this + 335) & 0x80000000) == 0)
    {
      if (!*((_BYTE *)this + 335))
        goto LABEL_101;
LABEL_100:
      v43 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
      std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v43 + *(_QWORD *)(*v43 - 96)), v50);
      v42 = *((unsigned __int8 *)this + 335);
      goto LABEL_101;
    }
    if (*((_QWORD *)this + 40))
      goto LABEL_100;
LABEL_101:
    if ((v42 & 0x80) != 0)
      v42 = *((_QWORD *)this + 40);
    if (v42)
      goto LABEL_119;
    if (*((char *)this + 359) < 0)
      v44 = *((_QWORD *)this + 43);
    else
      v44 = *((unsigned __int8 *)this + 359);
    v2 = 1;
    if (!v44)
      return (v4 | v2) & 1;
  }
  v51 = v4;
  v13 = 0;
  v14 = 0;
  v15 = 0;
  v16 = 0;
LABEL_23:
  v55 = v15 + 1;
  v56 = v14 - 1;
  v17 = v16;
  while (1)
  {
    v18 = morphun::util::StringViewUtils::codePointAt(v7, v6, v13);
    v19 = MEMORY[0x1D179D958](**((_QWORD **)this + 34), v18);
    v16 = v19 != 0;
    if (v19)
    {
      if (v17)
        v14 = v14;
      else
        v14 = v13;
      v15 = v13;
LABEL_49:
      if (v18 < 0x10000)
        v34 = 1;
      else
        v34 = 2;
      v13 = (v34 + v13);
      if ((int)v13 >= (int)v6)
      {
        LODWORD(v23) = v14;
        v4 = v51;
        if (!v19)
          goto LABEL_58;
        goto LABEL_57;
      }
      goto LABEL_23;
    }
    if (!v17)
      goto LABEL_49;
    v20 = uset_containsAllCodePoints();
    if (*((_QWORD *)this + 17))
      v21 = morphun::analysis::filter::LanguageExpansion::expandWithWorkspace((uint64_t)v54, (const UChar *)v7, v6, (uint64_t)v53) != 0;
    else
      v21 = 0;
    v22 = (_QWORD *)*((_QWORD *)this + 35);
    v23 = v14;
    v24 = morphun::util::StringViewUtils::codePointAt(v7, v6, v14);
    LODWORD(v22) = MEMORY[0x1D179D958](*v22, v24);
    v25 = (_QWORD *)*((_QWORD *)this + 35);
    v26 = v15;
    v27 = morphun::util::StringViewUtils::codePointAt(v7, v6, v15);
    v28 = MEMORY[0x1D179D958](*v25, v27);
    isAdjacentDigit = morphun::analysis::filter::SplitPunctuationFilter::isAdjacentDigit(v7, v6, v56);
    v30 = morphun::analysis::filter::SplitPunctuationFilter::isAdjacentDigit(v7, v6, v55);
    if ((_DWORD)v22)
      v31 = isAdjacentDigit;
    else
      v31 = 0;
    if (v28)
      v32 = v30;
    else
      v32 = 0;
    if (!v20 && !v21 && !v31 && !v32)
    {
      LODWORD(v15) = v26;
      v4 = v51;
LABEL_57:
      LODWORD(v13) = v15;
      goto LABEL_58;
    }
    if (!isAdjacentDigit && !v30)
      break;
    v17 = 0;
    if (v18 < 0x10000)
      v33 = 1;
    else
      v33 = 2;
    v15 = v26;
    v13 = (v26 + v33);
    v14 = v23;
    if ((int)v13 >= (int)v6)
    {
      v4 = v51;
      goto LABEL_58;
    }
  }
  v45 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
  std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v45 + *(_QWORD *)(*v45 - 96)), __str);
  if (*((char *)this + 311) < 0)
  {
    **((_WORD **)this + 36) = 0;
    *((_QWORD *)this + 37) = 0;
  }
  else
  {
    *((_WORD *)this + 144) = 0;
    *((_BYTE *)this + 311) = 0;
  }
  v2 = 1;
  v4 = v51;
  return (v4 | v2) & 1;
}

void sub_1CB4F9640(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *morphun::analysis::filter::SplitPunctuationFilter::reset(morphun::analysis::filter::SplitPunctuationFilter *this)
{
  uint64_t v2;
  void *result;

  v2 = npc<morphun::analysis::TokenStream>(*((_QWORD *)this + 12));
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
  result = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::KeywordAttribute>((uint64_t)this);
  *((_QWORD *)this + 14) = result;
  return result;
}

void sub_1CB4F96D4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

BOOL morphun::analysis::filter::SplitPunctuationFilter::isAdjacentDigit(uint64_t a1, int a2, int a3)
{
  _BOOL8 result;
  UChar32 v5;

  result = 0;
  if ((a3 & 0x80000000) == 0 && a2 > a3)
  {
    v5 = morphun::util::StringViewUtils::codePointAt(a1, a2, a3);
    return u_isdigit(v5) != 0;
  }
  return result;
}

void sub_1CB4F9764(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>>>::destroy(_QWORD *a1)
{
  void *v2;

  if (a1)
  {
    std::__tree<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>>>::destroy(*a1);
    std::__tree<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>>>::destroy(a1[1]);
    v2 = (void *)a1[6];
    if (v2)
    {
      a1[7] = v2;
      operator delete(v2);
    }
    operator delete(a1);
  }
}

void morphun::analysis::filter::LanguageExpansion::~LanguageExpansion(void **this)
{
  std::__tree<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>>>::destroy(this[1]);
}

_QWORD *morphun::util::lemmatization::FeedForwardInflectionAnalyzer::FeedForwardInflectionAnalyzer(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, morphun::util::ULocale *a5)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  morphun::util::ULocale::ULocale((morphun::util::ULocale *)(a1 + 3), a5);
  return a1;
}

{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  morphun::util::ULocale::ULocale((morphun::util::ULocale *)(a1 + 3), a5);
  return a1;
}

uint64_t morphun::util::lemmatization::FeedForwardInflectionAnalyzer::getInflectionLikelihoods(uint64_t *a1, uint64_t a2)
{
  uint64_t ***v3;
  uint64_t *v4;
  uint64_t v5;
  morphun::exception::NullPointerException *exception;
  morphun::exception::NullPointerException *v8;
  morphun::exception::NullPointerException *v9;
  void *__p[3];
  void *v11[3];

  if (!*a1)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  morphun::util::lemmatization::FeedForwardInflectionAnalyzer::getWordFeatures((uint64_t)a1, a2, *a1, 7, (uint64_t *)v11);
  v3 = (uint64_t ***)a1[2];
  if (!v3)
  {
    v8 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(v8);
  }
  morphun::util::lemmatization::FeedForwardInflectionAnalyzer::infer((uint64_t)v11, v3, (double **)__p);
  v4 = (uint64_t *)a1[1];
  if (!v4)
  {
    v9 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(v9);
  }
  v5 = morphun::util::lemmatization::FeedForwardInflectionAnalyzer::asInflectionLikelihoods((uint64_t)a1, __p, v4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v11[0])
  {
    v11[1] = v11[0];
    operator delete(v11[0]);
  }
  return v5;
}

void sub_1CB4F9968(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  void *v13;

  __cxa_free_exception(v13);
  if (__p)
    operator delete(__p);
  if (a12)
    operator delete(a12);
  _Unwind_Resume(a1);
}

void morphun::util::lemmatization::FeedForwardInflectionAnalyzer::getWordFeatures(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t *a5@<X8>)
{
  int v10;
  int v11;
  const UChar *v12;
  uint64_t v13;
  char v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  std::basic_string<char16_t> *v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  BOOL v27;
  uint64_t *v28;
  std::basic_string<char16_t> v29;

  v10 = *(_DWORD *)(a3 + 16) + 1;
  std::vector<double>::vector(a5, v10 * a4);
  memset(&v29, 0, sizeof(v29));
  v11 = *(char *)(a2 + 23);
  if (v11 >= 0)
    v12 = (const UChar *)a2;
  else
    v12 = *(const UChar **)a2;
  if (v11 >= 0)
    LODWORD(v13) = *(unsigned __int8 *)(a2 + 23);
  else
    v13 = *(_QWORD *)(a2 + 8);
  morphun::util::StringViewUtils::lowercase((uint64_t)&v29, v12, v13, a1 + 24);
  morphun::util::StringUtils::reverse((uint64_t)&v29);
  std::basic_string<char16_t>::resize(&v29, a4, 32);
  v14 = HIBYTE(v29.__r_.__value_.__r.__words[2]);
  if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v15 = HIBYTE(v29.__r_.__value_.__r.__words[2]);
  else
    v15 = v29.__r_.__value_.__r.__words[1];
  if (v15 >= 1)
  {
    v16 = 0;
    v17 = *(_QWORD *)(a3 + 8);
    v18 = *(_QWORD *)(a3 + 16);
    v19 = a3 + 8;
    v20 = *a5;
    do
    {
      v21 = v18;
      if (v17)
      {
        if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v22 = &v29;
        else
          v22 = (std::basic_string<char16_t> *)v29.__r_.__value_.__r.__words[0];
        v23 = (unsigned __int16)v22->__r_.__value_.__s.__data_[v16];
        v24 = v19;
        v25 = v17;
        do
        {
          v26 = *(unsigned __int16 *)(v25 + 28);
          v27 = v26 >= v23;
          if (v26 >= v23)
            v28 = (uint64_t *)v25;
          else
            v28 = (uint64_t *)(v25 + 8);
          if (v27)
            v24 = v25;
          v25 = *v28;
        }
        while (*v28);
        v21 = v18;
        if (v24 != v19)
        {
          v21 = v18;
          if (v23 >= *(unsigned __int16 *)(v24 + 28))
            v21 = *(int *)(v24 + 32);
        }
      }
      *(_QWORD *)(v20 + 8 * (v21 + v16 * v10)) = 0x3FF0000000000000;
      ++v16;
    }
    while (v16 != v15);
    v14 = HIBYTE(v29.__r_.__value_.__r.__words[2]);
  }
  if (v14 < 0)
    operator delete(v29.__r_.__value_.__l.__data_);
}

void sub_1CB4F9B28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;
  void *v17;

  if (a15 < 0)
    operator delete(__p);
  v17 = *(void **)v15;
  if (*(_QWORD *)v15)
  {
    *(_QWORD *)(v15 + 8) = v17;
    operator delete(v17);
  }
  _Unwind_Resume(exception_object);
}

double morphun::util::lemmatization::FeedForwardInflectionAnalyzer::infer@<D0>(uint64_t a1@<X0>, uint64_t ***a2@<X1>, double **a3@<X8>)
{
  double result;
  uint64_t **v6;
  uint64_t **v7;
  int v8;
  void *v9;
  void *v10;
  double **v11;
  void *v12;
  void *v13;
  __int128 v14;
  double *v15;

  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  std::vector<double>::__init_with_size[abi:ne180100]<double *,double *>(a3, *(const void **)a1, *(_QWORD *)(a1 + 8), (uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3);
  v6 = *a2;
  v7 = a2[1];
  if (*a2 != v7)
  {
    v8 = 1;
    do
    {
      morphun::util::lemmatization::FeedForwardInflectionAnalyzer::preMultiply(v6, a3, &v14);
      if (*a3)
      {
        operator delete(*a3);
        *a3 = 0;
        a3[1] = 0;
        a3[2] = 0;
      }
      v9 = (void *)v14;
      *(_OWORD *)a3 = v14;
      a3[2] = v15;
      v10 = v9;
      v11 = (double **)(v6 + 3);
      morphun::util::lemmatization::FeedForwardInflectionAnalyzer::add(a3, v11, &v14);
      if (v10)
      {
        operator delete(v10);
        *a3 = 0;
        a3[1] = 0;
        a3[2] = 0;
      }
      v12 = (void *)v14;
      *(_OWORD *)a3 = v14;
      a3[2] = v15;
      v13 = v12;
      if (v8 == -1431655765 * ((unint64_t)((char *)a2[1] - (char *)*a2) >> 4))
        morphun::util::lemmatization::FeedForwardInflectionAnalyzer::softMax(a3, (long double **)&v14);
      else
        morphun::util::lemmatization::FeedForwardInflectionAnalyzer::rectifiedLinear(a3, &v14);
      if (v13)
      {
        operator delete(v13);
        *a3 = 0;
        a3[1] = 0;
        a3[2] = 0;
      }
      result = *(double *)&v14;
      *(_OWORD *)a3 = v14;
      a3[2] = v15;
      ++v8;
      v6 = (uint64_t **)(v11 + 3);
    }
    while (v6 != v7);
  }
  return result;
}

void sub_1CB4F9CA4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v2;

  if (v2)
  {
    *(_QWORD *)(v1 + 8) = v2;
    operator delete(v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::util::lemmatization::FeedForwardInflectionAnalyzer::asInflectionLikelihoods(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t v12;
  unsigned __int16 *v13;
  char **v14;
  char **v15;
  char *v16;
  std::basic_string<char16_t> *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  morphun::exception::NullPointerException *exception;
  uint64_t **v23;
  uint64_t *v24;
  uint64_t v25;
  std::basic_string<char16_t> v26;
  uint64_t v27;

  memset(&v26, 0, sizeof(v26));
  v24 = 0;
  v25 = 0;
  v23 = &v24;
  if (!a2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  v5 = a2[1] - *a2;
  if ((int)(v5 >> 3) >= 1)
  {
    v7 = 0;
    v8 = 0;
    v9 = v5 & 0x7FFFFFFF8;
    v10 = -1.0;
    do
    {
      v11 = *(double *)(*a2 + v8);
      v12 = *a3;
      v13 = (unsigned __int16 *)(*a3 + v7);
      v14 = (char **)std::__tree<std::basic_string<char16_t>>::__find_equal<std::basic_string<char16_t>>((uint64_t)&v23, &v27, v13);
      if (!*v14)
      {
        v15 = v14;
        v16 = (char *)operator new(0x40uLL);
        v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*(char *)(v12 + v7 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)(v12 + v7), *(_QWORD *)(v12 + v7 + 8));
        }
        else
        {
          v18 = *(_OWORD *)v13;
          *((_QWORD *)v16 + 6) = *((_QWORD *)v13 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((double *)v16 + 7) = v11;
        v19 = v27;
        *(_QWORD *)v16 = 0;
        *((_QWORD *)v16 + 1) = 0;
        *((_QWORD *)v16 + 2) = v19;
        *v15 = v16;
        if (*v23)
        {
          v23 = (uint64_t **)*v23;
          v16 = *v15;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(v24, (uint64_t *)v16);
        ++v25;
      }
      if (v11 > v10)
      {
        std::basic_string<char16_t>::operator=(&v26, (const std::basic_string<char16_t> *)(*a3 + v7));
        v10 = v11;
      }
      v8 += 8;
      v7 += 24;
    }
    while (v9 != v8);
  }
  v20 = operator new();
  morphun::util::lemmatization::FeedForwardInflectionAnalyzer_InflectionLikelihoods::FeedForwardInflectionAnalyzer_InflectionLikelihoods(v20, (__int128 *)&v26, &v23, *(_QWORD *)(a1 + 8));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy((char *)v24);
  if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v26.__r_.__value_.__l.__data_);
  return v20;
}

void sub_1CB4F9EA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char *a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  void *v18;

  __cxa_free_exception(v18);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(a11);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

_QWORD *std::vector<double>::__init_with_size[abi:ne180100]<double *,double *>(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = std::vector<morphun::dialog::DucConcept const*>::__vallocate[abi:ne180100](result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1CB4F9F70(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *morphun::util::lemmatization::FeedForwardInflectionAnalyzer::preMultiply@<X0>(uint64_t **a1@<X0>, double **a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t *result;
  uint64_t v8;
  double *v9;
  uint64_t *v10;
  uint64_t v11;
  double v12;
  double *v13;
  uint64_t *v14;
  uint64_t v15;
  double v16;
  double v17;
  uint64_t v18;
  _QWORD *exception;
  std::basic_string<char16_t>::size_type v20;
  std::basic_string<char16_t> *v21;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t> v23;
  std::basic_string<char16_t> v24;
  std::basic_string<char16_t> v25;
  std::basic_string<char16_t> v26;
  std::basic_string<char16_t> v27;

  v5 = 0xAAAAAAAAAAAAAAABLL * (a1[1] - *a1);
  if (((unint64_t)((char *)a2[1] - (char *)*a2) >> 3) != (_DWORD)v5)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(a2[1] - *a2), &v24);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v25, L"must be v->size() == m->size(), v->size()=", &v24, v20);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v26, &v25, (std::basic_string<char16_t>::value_type *)",");
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(0xAAAAAAAAAAAAAAABLL * (a1[1] - *a1)), &v23);
    if ((v23.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v21 = &v23;
    else
      v21 = (std::basic_string<char16_t> *)v23.__r_.__value_.__r.__words[0];
    if ((v23.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v23.__r_.__value_.__r.__words[2]);
    else
      size = v23.__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::append(&v26, (const std::basic_string<char16_t>::value_type *)v21, size);
    v27 = v26;
    memset(&v26, 0, sizeof(v26));
    morphun::exception::Throwable::Throwable((uint64_t)exception, (__int128 *)&v27);
    *exception = &off_1E8673120;
  }
  v6 = (*a1)[1] - **a1;
  result = std::vector<double>::vector(a3, (int)(v6 >> 3));
  if ((int)((unint64_t)v6 >> 3) >= 1)
  {
    v8 = 0;
    v9 = *a2;
    v10 = *a1;
    v11 = *result;
    do
    {
      v12 = 0.0;
      if ((int)v5 >= 1)
      {
        v13 = v9;
        v14 = v10;
        v15 = v5;
        do
        {
          v16 = *v13++;
          v17 = v16;
          v18 = *v14;
          v14 += 3;
          v12 = v12 + v17 * *(double *)(v18 + 8 * v8);
          --v15;
        }
        while (v15);
      }
      *(double *)(v11 + 8 * v8++) = v12;
    }
    while (v8 != ((unint64_t)v6 >> 3));
  }
  return result;
}

void sub_1CB4FA148(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  void *v29;
  void *v30;
  int v31;
  int v32;
  uint64_t v33;

  if (*(char *)(v33 - 57) < 0)
    operator delete(*(void **)(v33 - 80));
  if (v32 < 0)
    operator delete(v30);
  if (a29 < 0)
    operator delete(__p);
  if (a23 < 0)
    operator delete(a18);
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v31 & 1) == 0)
LABEL_14:
      _Unwind_Resume(a1);
  }
  else if (!v31)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v29);
  goto LABEL_14;
}

double morphun::util::lemmatization::FeedForwardInflectionAnalyzer::add@<D0>(double **a1@<X0>, double **a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v5;
  double **v6;
  double result;
  double *v8;
  unint64_t v9;
  double *v10;
  double *v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  _QWORD *exception;
  std::basic_string<char16_t>::size_type v17;
  std::basic_string<char16_t> *v18;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t> v20;
  std::basic_string<char16_t> v21;
  std::basic_string<char16_t> v22;
  std::basic_string<char16_t> v23;
  std::basic_string<char16_t> v24;

  v5 = a1[1] - *a1;
  if (v5 != a2[1] - *a2)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(a1[1] - *a1), &v21);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v22, "m", &v21, v17);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v23, &v22, (std::basic_string<char16_t>::value_type *)",");
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(a2[1] - *a2), &v20);
    if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v18 = &v20;
    else
      v18 = (std::basic_string<char16_t> *)v20.__r_.__value_.__r.__words[0];
    if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v20.__r_.__value_.__r.__words[2]);
    else
      size = v20.__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::append(&v23, (const std::basic_string<char16_t>::value_type *)v18, size);
    v24 = v23;
    memset(&v23, 0, sizeof(v23));
    morphun::exception::Throwable::Throwable((uint64_t)exception, (__int128 *)&v24);
    *exception = &off_1E8673120;
  }
  v6 = (double **)std::vector<double>::vector(a3, v5);
  v8 = *v6;
  v9 = (char *)v6[1] - (char *)*v6;
  if ((int)(v9 >> 3) >= 1)
  {
    v10 = *a1;
    v11 = *a2;
    v12 = (v9 >> 3);
    do
    {
      v13 = *v10++;
      v14 = v13;
      v15 = *v11++;
      result = v14 + v15;
      *v8++ = result;
      --v12;
    }
    while (v12);
  }
  return result;
}

void sub_1CB4FA360(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  void *v29;
  void *v30;
  int v31;
  int v32;
  uint64_t v33;

  if (*(char *)(v33 - 57) < 0)
    operator delete(*(void **)(v33 - 80));
  if (v32 < 0)
    operator delete(v30);
  if (a29 < 0)
    operator delete(__p);
  if (a23 < 0)
    operator delete(a18);
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v31 & 1) == 0)
LABEL_14:
      _Unwind_Resume(a1);
  }
  else if (!v31)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v29);
  goto LABEL_14;
}

void morphun::util::lemmatization::FeedForwardInflectionAnalyzer::softMax(double **a1@<X0>, long double **a2@<X8>)
{
  double *v4;
  double *v5;
  double v6;
  double *v7;
  double v8;
  double v9;
  double v10;
  double *v11;
  double v12;
  double *v13;
  double **v14;
  unint64_t v15;
  long double *v16;
  uint64_t v17;
  double v18;

  v4 = *a1;
  v5 = a1[1];
  v6 = **a1;
  if (*a1 == v5)
  {
    v10 = 0.0;
  }
  else
  {
    v7 = *a1;
    do
    {
      v8 = *v7++;
      v9 = v8;
      if (v8 > v6)
        v6 = v9;
    }
    while (v7 != v5);
    v10 = 0.0;
    v11 = *a1;
    do
    {
      v12 = *v11++;
      v10 = v10 + exp(v12 - v6);
    }
    while (v11 != v5);
  }
  std::vector<double>::vector(a2, v5 - v4);
  v14 = a1;
  v13 = *a1;
  v15 = (char *)v14[1] - (char *)v13;
  if ((int)(v15 >> 3) >= 1)
  {
    v16 = *a2;
    v17 = (v15 >> 3);
    do
    {
      v18 = *v13++;
      *v16++ = exp(v18 - v6) / v10;
      --v17;
    }
    while (v17);
  }
}

double **morphun::util::lemmatization::FeedForwardInflectionAnalyzer::rectifiedLinear@<X0>(double **a1@<X0>, _QWORD *a2@<X8>)
{
  double **result;
  double *v4;
  unint64_t v5;
  double *v6;
  uint64_t v7;
  double v8;

  result = (double **)std::vector<double>::vector(a2, a1[1] - *a1);
  v4 = *result;
  v5 = (char *)result[1] - (char *)*result;
  if ((int)(v5 >> 3) >= 1)
  {
    v6 = *a1;
    v7 = (v5 >> 3);
    do
    {
      v8 = *v6++;
      *v4++ = fmax(v8, 0.0);
      --v7;
    }
    while (v7);
  }
  return result;
}

_QWORD *std::vector<double>::vector(_QWORD *a1, unint64_t a2)
{
  char *v4;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    std::vector<morphun::dialog::DucConcept const*>::__vallocate[abi:ne180100](a1, a2);
    v4 = (char *)a1[1];
    bzero(v4, 8 * a2);
    a1[1] = &v4[8 * a2];
  }
  return a1;
}

void sub_1CB4FA59C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void morphun::util::lemmatization::FeedForwardInflectionAnalyzer::activation(double **a1@<X0>, long double **a2@<X8>, int a3@<W1>)
{
  if (a3)
    morphun::util::lemmatization::FeedForwardInflectionAnalyzer::softMax(a1, a2);
  else
    morphun::util::lemmatization::FeedForwardInflectionAnalyzer::rectifiedLinear(a1, a2);
}

std::basic_string<char16_t> *morphun::util::lemmatization::FeedForwardInflectionAnalyzer::enforceSizeTo(int a1, std::basic_string<char16_t> *this)
{
  morphun::exception::NullPointerException *exception;

  if (!this)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  std::basic_string<char16_t>::resize(this, a1, 32);
  return this;
}

void sub_1CB4FA620(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::transliteration::ICUScriptTransliterator::~ICUScriptTransliterator(void **this)
{
  icu4cxx::UnicodeSet *v2;

  *this = &off_1E866A4A8;
  v2 = (icu4cxx::UnicodeSet *)(this + 17);
  icu4cxx::Transliterator::~Transliterator((icu4cxx::Transliterator *)(this + 21));
  icu4cxx::Transliterator::~Transliterator((icu4cxx::Transliterator *)(this + 19));
  icu4cxx::UnicodeSet::~UnicodeSet(v2);
  *this = &off_1E8656EF8;
}

{
  icu4cxx::UnicodeSet *v2;

  *this = &off_1E866A4A8;
  v2 = (icu4cxx::UnicodeSet *)(this + 17);
  icu4cxx::Transliterator::~Transliterator((icu4cxx::Transliterator *)(this + 21));
  icu4cxx::Transliterator::~Transliterator((icu4cxx::Transliterator *)(this + 19));
  icu4cxx::UnicodeSet::~UnicodeSet(v2);
  *this = &off_1E8656EF8;
  JUMPOUT(0x1D179D2ECLL);
}

BOOL morphun::transliteration::ICUScriptTransliterator::transliterate(uint64_t a1, unsigned __int16 *a2, unint64_t a3, uint64_t a4)
{
  void **p_dst;
  uint64_t v9;
  uint64_t v10;
  int v11;
  std::basic_string<char16_t>::value_type *v12;
  std::basic_string<char16_t>::size_type v13;
  void **v14;
  unint64_t v15;
  unsigned __int16 *v16;
  int v17;
  int isAllLowerCase;
  std::basic_string<char16_t>::value_type *v19;
  void **__dst;
  std::basic_string<char16_t>::size_type v22;
  int64_t v23;

  if (!morphun::util::UnicodeSetUtils::containsSome((_QWORD *)(a1 + 136), (uint64_t)a2, a3))
    return 0;
  if (a3 >= 0x7FFFFFFFFFFFFFF8)
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  if (a3 >= 0xB)
  {
    v9 = (a3 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((a3 | 3) != 0xB)
      v9 = a3 | 3;
    p_dst = (void **)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v9 + 1);
    v22 = a3;
    v23 = v10 | 0x8000000000000000;
    __dst = p_dst;
    goto LABEL_9;
  }
  HIBYTE(v23) = a3;
  p_dst = (void **)&__dst;
  if (a3)
LABEL_9:
    memmove(p_dst, a2, 2 * a3);
  *((_WORD *)p_dst + a3) = 0;
  if (*(_QWORD *)(a1 + 168))
    icu4cxx::Transliterator::trans();
  icu4cxx::Transliterator::trans();
  v11 = SHIBYTE(v23);
  v12 = (std::basic_string<char16_t>::value_type *)__dst;
  if (v23 >= 0)
    v13 = HIBYTE(v23);
  else
    v13 = v22;
  if (v13 == a3)
  {
    if (!a3)
    {
LABEL_22:
      v17 = 1;
      if ((v23 & 0x8000000000000000) == 0)
        return !v17;
LABEL_30:
      operator delete(__dst);
      return !v17;
    }
    v14 = (void **)&__dst;
    if (v23 < 0)
      v14 = __dst;
    v15 = a3;
    v16 = a2;
    while (*v16 == *(unsigned __int16 *)v14)
    {
      v14 = (void **)((char *)v14 + 2);
      ++v16;
      if (!--v15)
        goto LABEL_22;
    }
  }
  isAllLowerCase = morphun::util::StringViewUtils::isAllLowerCase((uint64_t)a2, a3);
  if (v11 >= 0)
    v19 = (std::basic_string<char16_t>::value_type *)&__dst;
  else
    v19 = v12;
  morphun::transliteration::Transliterator::matchCase(a1, a4, v19, v13, (uint64_t)a2, a3, isAllLowerCase);
  v17 = 0;
  if (v23 < 0)
    goto LABEL_30;
  return !v17;
}

void sub_1CB4FA8AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t icu4cxx::Transliterator::trans()
{
  return utrans_trans();
}

void sub_1CB4FA93C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t U16length(void *const *a1)
{
  uint64_t v1;

  v1 = npc<std::basic_string<char16_t> const>((uint64_t)a1);
  if (*(char *)(v1 + 23) < 0)
    return *(_QWORD *)(v1 + 8);
  else
    return *(unsigned __int8 *)(v1 + 23);
}

uint64_t U16charAt(void *const *a1, int a2)
{
  uint64_t v3;

  v3 = npc<std::basic_string<char16_t> const>((uint64_t)a1);
  if (*(char *)(v3 + 23) < 0)
  {
    if (*(_QWORD *)(v3 + 8) <= (unint64_t)a2)
      goto LABEL_7;
    v3 = *(_QWORD *)v3;
  }
  else if (*(unsigned __int8 *)(v3 + 23) <= (unint64_t)a2)
  {
LABEL_7:
    std::basic_string<char16_t>::__throw_out_of_range[abi:ne180100]();
  }
  return *(unsigned __int16 *)(v3 + 2 * a2);
}

uint64_t U16char32At(void *const *a1, int a2)
{
  void *const *v3;
  uint64_t v4;
  unsigned __int8 v5;
  int v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  int v10;
  BOOL v11;
  int v12;
  int v13;
  unsigned int v14;

  v3 = a1;
  v4 = npc<std::basic_string<char16_t> const>((uint64_t)a1);
  v5 = *(_BYTE *)(v4 + 23);
  v6 = v5;
  v7 = v4;
  if ((char)v5 < 0)
  {
    v6 = *((_DWORD *)v3 + 2);
    v7 = (uint64_t)*v3;
  }
  result = *(unsigned __int16 *)(v7 + 2 * a2);
  if ((result & 0xF800) == 0xD800)
  {
    if ((result & 0x400) != 0)
    {
      if (a2 < 1)
        return result;
      if ((v5 & 0x80) != 0)
        v3 = (void *const *)*v3;
      v13 = *((unsigned __int16 *)v3 + (a2 - 1));
      v11 = (v13 & 0xFC00) == 55296;
      v12 = result + (v13 << 10);
    }
    else
    {
      v9 = a2 + 1;
      if ((_DWORD)v9 == v6)
        return result;
      if ((v5 & 0x80) != 0)
        v3 = (void *const *)*v3;
      v10 = *((unsigned __int16 *)v3 + v9);
      v11 = (v10 & 0xFC00) == 56320;
      v12 = v10 + ((_DWORD)result << 10);
    }
    v14 = v12 - 56613888;
    if (v11)
      return v14;
    else
      return result;
  }
  return result;
}

std::basic_string<char16_t> *U16replace(void **a1, int a2, int a3, const std::basic_string<char16_t>::value_type *a4, int a5)
{
  std::basic_string<char16_t> *v9;

  v9 = (std::basic_string<char16_t> *)npc<std::basic_string<char16_t>>((uint64_t)a1);
  return std::basic_string<char16_t>::replace(v9, a2, a3 - a2, a4, a5);
}

UChar *U16extract(const UChar *a1, int a2, int a3, unsigned __int16 *a4)
{
  const UChar *v7;

  v7 = a1;
  if (*(char *)(npc<std::basic_string<char16_t> const>((uint64_t)a1) + 23) < 0)
    v7 = *(const UChar **)v7;
  return u_strncpy(a4, v7, a3 - a2);
}

std::basic_string<char16_t> *U16copy(void **a1, int a2, int a3, int a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = npc<std::basic_string<char16_t>>((uint64_t)a1);
  v8 = npc<std::basic_string<char16_t>>(v7);
  v9 = v8;
  if (*(char *)(v8 + 23) < 0)
    v9 = *(_QWORD *)v8;
  return std::basic_string<char16_t>::replace((std::basic_string<char16_t> *)v8, a4, 0, (const std::basic_string<char16_t>::value_type *)(v9 + 2 * a2), a3 - a2);
}

void sub_1CB4FABB8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::basic_string<char16_t> *__cdecl std::basic_string<char16_t>::replace(std::basic_string<char16_t> *this, std::basic_string<char16_t>::size_type __pos, std::basic_string<char16_t>::size_type __n1, const std::basic_string<char16_t>::value_type *__s, std::basic_string<char16_t>::size_type __n2)
{
  std::basic_string<char16_t>::size_type v5;
  const std::basic_string<char16_t>::value_type *v6;
  std::basic_string<char16_t>::size_type v7;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t>::size_type v10;
  std::basic_string<char16_t>::size_type v11;
  std::basic_string<char16_t>::size_type v12;
  std::basic_string<char16_t> *v13;
  std::basic_string<char16_t>::size_type v14;
  char *v15;
  std::basic_string<char16_t>::size_type v16;
  std::basic_string<char16_t>::size_type v17;

  v5 = __n2;
  v6 = __s;
  v7 = __pos;
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
  {
    size = this->__r_.__value_.__l.__size_;
    v10 = size - __pos;
    if (size >= __pos)
    {
      if (v10 >= __n1)
        v11 = __n1;
      else
        v11 = size - __pos;
      v12 = (this->__r_.__value_.__r.__words[2] & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v11 - size + v12 < __n2)
        goto LABEL_13;
      v13 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
      goto LABEL_16;
    }
LABEL_39:
    std::basic_string<char16_t>::__throw_out_of_range[abi:ne180100]();
  }
  size = HIBYTE(this->__r_.__value_.__r.__words[2]);
  v10 = size - __pos;
  if (size < __pos)
    goto LABEL_39;
  if (v10 >= __n1)
    v11 = __n1;
  else
    v11 = HIBYTE(this->__r_.__value_.__r.__words[2]) - __pos;
  if (v11 - size + 10 < __n2)
  {
    v12 = 10;
LABEL_13:
    std::basic_string<char16_t>::__grow_by_and_replace(this, v12, size + __n2 - (v12 + v11), size, v7, v11, __n2, __s);
    return this;
  }
  v13 = this;
LABEL_16:
  if (__n2 == v11)
  {
    v11 = __n2;
  }
  else
  {
    v14 = v10 - v11;
    if (v10 != v11)
    {
      v15 = (char *)v13 + 2 * v7;
      v16 = __n2 - v11;
      if (__n2 < v11)
      {
        if (__n2)
          memmove((char *)v13 + 2 * v7, __s, 2 * __n2);
        memmove(&v15[2 * v5], &v15[2 * v11], 2 * v14);
        v17 = size + v16;
        goto LABEL_34;
      }
      if ((char *)v13 + 2 * size > (char *)__s && v15 + 2 <= (char *)__s)
      {
        if (&v15[2 * v11] <= (char *)__s)
        {
          v6 = &__s[v16];
        }
        else
        {
          if (v11)
            memmove((char *)v13 + 2 * v7, __s, 2 * v11);
          v7 += v11;
          v6 += v5;
          v5 -= v11;
          v11 = 0;
        }
      }
      memmove((char *)v13 + 2 * v7 + 2 * v5, (char *)v13 + 2 * v7 + 2 * v11, 2 * v14);
    }
  }
  if (v5)
    memmove((char *)v13 + 2 * v7, v6, 2 * v5);
  v17 = v5 - v11 + size;
LABEL_34:
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
    this->__r_.__value_.__l.__size_ = v17;
  else
    *((_BYTE *)&this->__r_.__value_.__s + 23) = v17 & 0x7F;
  v13->__r_.__value_.__s.__data_[v17] = 0;
  return this;
}

uint64_t npc<std::basic_string<char16_t> const>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB4FADE8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void icu4cxx::Transliterator::~Transliterator(icu4cxx::Transliterator *this)
{
  if (*((_BYTE *)this + 8))
    utrans_close();
}

uint64_t morphun::transliteration::ICUScriptTransliterator::createTransliterator(morphun::transliteration::ICUScriptTransliterator *this, const morphun::util::ULocale *a2, const morphun::util::ULocale *a3, icu4cxx::UnicodeSet *a4)
{
  morphun::transliteration::ICUScriptTransliterator *v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  const void **v13;
  unsigned __int8 *v14;
  int v15;
  const morphun::util::ULocale *v16;
  __int128 v17;
  unsigned int v18;
  char *Name;
  std::basic_string<char16_t> *v20;
  int32_t v21;
  uint64_t v22;
  const char *v23;
  _OWORD *v24;
  std::basic_string<char16_t>::size_type size;
  const char *v26;
  int32_t v27;
  const std::basic_string<char16_t>::value_type *v28;
  std::basic_string<char16_t>::size_type v29;
  const std::basic_string<char16_t>::value_type *v30;
  std::basic_string<char16_t>::size_type v31;
  void **v32;
  std::basic_string<char16_t>::size_type v33;
  int v34;
  const char *v35;
  uint64_t v36;
  int v37;
  void *v38;
  std::basic_string<char16_t> *v39;
  std::basic_string<char16_t>::size_type v40;
  void **v41;
  std::basic_string<char16_t>::size_type v42;
  const std::basic_string<char16_t>::value_type *v43;
  std::basic_string<char16_t>::size_type v44;
  void **v45;
  std::basic_string<char16_t>::size_type v46;
  const std::basic_string<char16_t>::value_type *p_src;
  std::basic_string<char16_t>::size_type v48;
  void **v49;
  std::basic_string<char16_t>::size_type v50;
  std::basic_string<char16_t> *v51;
  int v52;
  std::basic_string<char16_t> *v53;
  std::basic_string<char16_t>::size_type v54;
  const void *v55;
  void *v56;
  const char *v57;
  morphun::transliteration::ICUScriptTransliterator *v58;
  std::basic_string<char16_t>::size_type v59;
  std::basic_string<char16_t>::size_type v60;
  std::basic_string<char16_t> *v61;
  int32_t v62;
  int v63;
  void *v64;
  std::basic_string<char16_t> *v65;
  std::basic_string<char16_t>::size_type v66;
  uint64_t v67;
  morphun::exception::ICUException *exception;
  void *__p[2];
  unsigned __int8 v71;
  void *v72[2];
  unsigned __int8 v73;
  void *v74[2];
  unsigned __int8 v75;
  std::basic_string<char16_t> v76;
  void *v77[2];
  unsigned __int8 v78;
  std::basic_string<char16_t> v79;
  std::basic_string<char16_t> v80;
  std::basic_string<char16_t> v81;
  std::basic_string<char16_t> v82;
  std::basic_string<char16_t> v83;
  std::basic_string<char16_t> v84;
  std::basic_string<char16_t> v85;
  std::basic_string<char16_t> v86;
  void *v87;
  std::basic_string<char16_t>::size_type v88;
  uint64_t v89;
  std::basic_string<char16_t> v90;
  std::basic_string<char16_t> v91;
  int v92;
  UErrorCode code;
  __int128 __src;
  __int128 v95;
  std::basic_string<char16_t> v96;
  _OWORD __dst[2];
  uint64_t v98;

  v6 = this;
  v98 = *MEMORY[0x1E0C80C00];
  code = U_ZERO_ERROR;
  *(_QWORD *)&v7 = -1;
  *((_QWORD *)&v7 + 1) = -1;
  __dst[0] = v7;
  __dst[1] = v7;
  v8 = morphun::util::LocaleUtils::ROOT(this);
  v9 = *(unsigned __int8 *)(v8 + 31);
  if ((v9 & 0x80u) == 0)
    v10 = *(unsigned __int8 *)(v8 + 31);
  else
    v10 = *(_QWORD *)(v8 + 16);
  v11 = *((unsigned __int8 *)v6 + 31);
  v12 = (char)v11;
  if ((v11 & 0x80u) != 0)
    v11 = *((_QWORD *)v6 + 2);
  if (v10 != v11)
    goto LABEL_16;
  v13 = (const void **)(v8 + 8);
  if (v12 >= 0)
    v14 = (unsigned __int8 *)v6 + 8;
  else
    v14 = (unsigned __int8 *)*((_QWORD *)v6 + 1);
  if ((v9 & 0x80) != 0)
  {
    v8 = memcmp(*v13, v14, *(_QWORD *)(v8 + 16));
    if (!(_DWORD)v8)
      goto LABEL_17;
LABEL_16:
    v15 = uscript_getCode();
    goto LABEL_22;
  }
  if (*(_BYTE *)(v8 + 31))
  {
    while (*(unsigned __int8 *)v13 == *v14)
    {
      v13 = (const void **)((char *)v13 + 1);
      ++v14;
      if (!--v9)
        goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_17:
  v16 = (const morphun::util::ULocale *)morphun::util::LocaleUtils::ENGLISH((morphun::util::LocaleUtils *)v8);
  morphun::util::ULocale::ULocale((morphun::util::ULocale *)&v96, v16);
  *(_QWORD *)&v17 = -1;
  *((_QWORD *)&v17 + 1) = -1;
  __src = v17;
  v95 = v17;
  v15 = uscript_getCode();
  v18 = v15 - 1;
  if (v15 >= 1)
  {
    if (v18 >= 7)
      v18 = 7;
    memcpy(__dst, &__src, 4 * v18 + 4);
  }
LABEL_22:
  v92 = -1;
  uscript_getCode();
  __src = 0uLL;
  *(_QWORD *)&v95 = 0;
  Name = (char *)uscript_getName();
  std::string::basic_string[abi:ne180100]<0>(&v96, Name);
  if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v20 = &v96;
  else
    v20 = (std::basic_string<char16_t> *)v96.__r_.__value_.__r.__words[0];
  if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v21 = HIBYTE(v96.__r_.__value_.__r.__words[2]);
  else
    v21 = v96.__r_.__value_.__r.__words[1];
  morphun::util::StringViewUtils::convert((uint64_t)&__src, (const char *)v20, v21);
  if (SHIBYTE(v96.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v96.__r_.__value_.__l.__data_);
  memset(&v91, 0, sizeof(v91));
  memset(&v90, 0, sizeof(v90));
  if (v15 >= 1)
  {
    v22 = v15;
    v23 = (char *)a2 + 8;
    v24 = __dst;
    while (1)
    {
      v24 = (_OWORD *)((char *)v24 + 4);
      size = HIBYTE(v91.__r_.__value_.__r.__words[2]);
      if ((v91.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        size = v91.__r_.__value_.__l.__size_;
      if (size)
        std::basic_string<char16_t>::append(&v91, L";", 1uLL);
      v87 = 0;
      v88 = 0;
      v89 = 0;
      v26 = (const char *)uscript_getName();
      v27 = strlen(v26);
      morphun::util::StringViewUtils::convert((uint64_t)&v87, v26, v27);
      v28 = v89 >= 0
          ? (const std::basic_string<char16_t>::value_type *)&v87
          : (const std::basic_string<char16_t>::value_type *)v87;
      v29 = v89 >= 0 ? HIBYTE(v89) : v88;
      std::basic_string<char16_t>::append(&v91, v28, v29);
      std::basic_string<char16_t>::append(&v91, (const std::basic_string<char16_t>::value_type *)"-", 1uLL);
      v30 = (SBYTE7(v95) & 0x80u) == 0
          ? (const std::basic_string<char16_t>::value_type *)&__src
          : (const std::basic_string<char16_t>::value_type *)__src;
      v31 = (SBYTE7(v95) & 0x80u) == 0 ? BYTE7(v95) : *((_QWORD *)&__src + 1);
      std::basic_string<char16_t>::append(&v91, v30, v31);
      if (!a3)
        break;
      std::operator+<char16_t>((uint64_t)&v86, L"[:", (const void **)&v87);
      std::basic_string<char16_t>::append(&v86, (const std::basic_string<char16_t>::value_type *)":", 2uLL);
      v96 = v86;
      memset(&v86, 0, sizeof(v86));
      icu4cxx::UnicodeSet::UnicodeSet((uint64_t)&v85);
      if (SHIBYTE(v96.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v96.__r_.__value_.__l.__data_);
      if (SHIBYTE(v86.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v86.__r_.__value_.__l.__data_);
      MEMORY[0x1D179D910](*(_QWORD *)a3, v85.__r_.__value_.__r.__words[0]);
      icu4cxx::UnicodeSet::~UnicodeSet((icu4cxx::UnicodeSet *)&v85);
LABEL_166:
      if (SHIBYTE(v89) < 0)
        operator delete(v87);
      if (!--v22)
        goto LABEL_169;
    }
    morphun::util::ResourceLocator::getRootForLocale(v6, &v79);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v77, (char *)L"/transliteration/");
    if ((v78 & 0x80u) == 0)
      v32 = v77;
    else
      v32 = (void **)v77[0];
    if ((v78 & 0x80u) == 0)
      v33 = v78;
    else
      v33 = (std::basic_string<char16_t>::size_type)v77[1];
    std::basic_string<char16_t>::append(&v79, (const std::basic_string<char16_t>::value_type *)v32, v33);
    v80 = v79;
    memset(&v79, 0, sizeof(v79));
    v34 = *((char *)a2 + 31);
    if (v34 >= 0)
      v35 = v23;
    else
      v35 = (const char *)*((_QWORD *)a2 + 1);
    if (v34 >= 0)
      LODWORD(v36) = *((unsigned __int8 *)a2 + 31);
    else
      v36 = *((_QWORD *)a2 + 2);
    morphun::util::StringViewUtils::to_u16string(v35, v36, &v76);
    v37 = SHIBYTE(v76.__r_.__value_.__r.__words[2]);
    v38 = (void *)v76.__r_.__value_.__r.__words[0];
    if ((v76.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v39 = &v76;
    else
      v39 = (std::basic_string<char16_t> *)v76.__r_.__value_.__r.__words[0];
    if ((v76.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v40 = HIBYTE(v76.__r_.__value_.__r.__words[2]);
    else
      v40 = v76.__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::append(&v80, (const std::basic_string<char16_t>::value_type *)v39, v40);
    v81 = v80;
    memset(&v80, 0, sizeof(v80));
    std::basic_string<char16_t>::append(&v81, (const std::basic_string<char16_t>::value_type *)"/", 1uLL);
    v82 = v81;
    memset(&v81, 0, sizeof(v81));
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v74, "t");
    if ((v75 & 0x80u) == 0)
      v41 = v74;
    else
      v41 = (void **)v74[0];
    if ((v75 & 0x80u) == 0)
      v42 = v75;
    else
      v42 = (std::basic_string<char16_t>::size_type)v74[1];
    std::basic_string<char16_t>::append(&v82, (const std::basic_string<char16_t>::value_type *)v41, v42);
    v83 = v82;
    memset(&v82, 0, sizeof(v82));
    if (v89 >= 0)
      v43 = (const std::basic_string<char16_t>::value_type *)&v87;
    else
      v43 = (const std::basic_string<char16_t>::value_type *)v87;
    if (v89 >= 0)
      v44 = HIBYTE(v89);
    else
      v44 = v88;
    std::basic_string<char16_t>::append(&v83, v43, v44);
    v84 = v83;
    memset(&v83, 0, sizeof(v83));
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v72, "_");
    if ((v73 & 0x80u) == 0)
      v45 = v72;
    else
      v45 = (void **)v72[0];
    if ((v73 & 0x80u) == 0)
      v46 = v73;
    else
      v46 = (std::basic_string<char16_t>::size_type)v72[1];
    std::basic_string<char16_t>::append(&v84, (const std::basic_string<char16_t>::value_type *)v45, v46);
    v85 = v84;
    memset(&v84, 0, sizeof(v84));
    if ((SBYTE7(v95) & 0x80u) == 0)
      p_src = (const std::basic_string<char16_t>::value_type *)&__src;
    else
      p_src = (const std::basic_string<char16_t>::value_type *)__src;
    if ((SBYTE7(v95) & 0x80u) == 0)
      v48 = BYTE7(v95);
    else
      v48 = *((_QWORD *)&__src + 1);
    std::basic_string<char16_t>::append(&v85, p_src, v48);
    v96 = v85;
    memset(&v85, 0, sizeof(v85));
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L".rules");
    if ((v71 & 0x80u) == 0)
      v49 = __p;
    else
      v49 = (void **)__p[0];
    if ((v71 & 0x80u) == 0)
      v50 = v71;
    else
      v50 = (std::basic_string<char16_t>::size_type)__p[1];
    std::basic_string<char16_t>::append(&v96, (const std::basic_string<char16_t>::value_type *)v49, v50);
    v86 = v96;
    memset(&v96, 0, sizeof(v96));
    if ((char)v71 < 0)
    {
      operator delete(__p[0]);
      if (SHIBYTE(v96.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v96.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v85.__r_.__value_.__l.__data_);
    if ((char)v73 < 0)
      operator delete(v72[0]);
    if (SHIBYTE(v84.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v84.__r_.__value_.__l.__data_);
    if (SHIBYTE(v83.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v83.__r_.__value_.__l.__data_);
    if ((char)v75 < 0)
      operator delete(v74[0]);
    if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v82.__r_.__value_.__l.__data_);
    if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v81.__r_.__value_.__l.__data_);
      if ((v37 & 0x80000000) == 0)
        goto LABEL_119;
    }
    else if ((v37 & 0x80000000) == 0)
    {
      goto LABEL_119;
    }
    operator delete(v38);
LABEL_119:
    if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v80.__r_.__value_.__l.__data_);
    if ((char)v78 < 0)
      operator delete(v77[0]);
    if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v79.__r_.__value_.__l.__data_);
    memset(&v85, 0, sizeof(v85));
    if ((v86.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v51 = &v86;
    else
      v51 = (std::basic_string<char16_t> *)v86.__r_.__value_.__r.__words[0];
    if ((v86.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v52 = HIBYTE(v86.__r_.__value_.__r.__words[2]);
    else
      v52 = v86.__r_.__value_.__r.__words[1];
    morphun::util::StringViewUtils::convert((std::string *)&v85, (uint64_t)v51, v52);
    if ((v85.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v53 = &v85;
    else
      v53 = (std::basic_string<char16_t> *)v85.__r_.__value_.__r.__words[0];
    if (access((const char *)v53, 0) == -1)
      goto LABEL_162;
    morphun::util::MemoryMappedFile::MemoryMappedFile((uint64_t)&v96, (uint64_t)&v86);
    v54 = v96.__r_.__value_.__l.__size_;
    if (v96.__r_.__value_.__l.__size_ >= 0x7FFFFFFFFFFFFFF8)
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    v55 = (const void *)v96.__r_.__value_.__r.__words[0];
    if (v96.__r_.__value_.__l.__size_ >= 0x17)
    {
      v57 = v23;
      v58 = v6;
      v59 = (v96.__r_.__value_.__l.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v96.__r_.__value_.__l.__size_ | 7) != 0x17)
        v59 = v96.__r_.__value_.__l.__size_ | 7;
      v60 = v59 + 1;
      v56 = operator new(v59 + 1);
      v83.__r_.__value_.__l.__size_ = v54;
      v83.__r_.__value_.__r.__words[2] = v60 | 0x8000000000000000;
      v83.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v56;
      v6 = v58;
      v23 = v57;
    }
    else
    {
      *((_BYTE *)&v83.__r_.__value_.__s + 23) = v96.__r_.__value_.__r.__words[1];
      v56 = &v83;
      if (!v96.__r_.__value_.__l.__size_)
        goto LABEL_145;
    }
    memmove(v56, v55, v54);
LABEL_145:
    *((_BYTE *)v56 + v54) = 0;
    if ((v83.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v61 = &v83;
    else
      v61 = (std::basic_string<char16_t> *)v83.__r_.__value_.__r.__words[0];
    if ((v83.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v62 = HIBYTE(v83.__r_.__value_.__r.__words[2]);
    else
      v62 = v83.__r_.__value_.__r.__words[1];
    morphun::util::StringViewUtils::to_u16string((const char *)v61, v62, &v84);
    v63 = SHIBYTE(v84.__r_.__value_.__r.__words[2]);
    v64 = (void *)v84.__r_.__value_.__r.__words[0];
    if ((v84.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v65 = &v84;
    else
      v65 = (std::basic_string<char16_t> *)v84.__r_.__value_.__r.__words[0];
    if ((v84.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v66 = HIBYTE(v84.__r_.__value_.__r.__words[2]);
    else
      v66 = v84.__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::append(&v90, (const std::basic_string<char16_t>::value_type *)v65, v66);
    if (v63 < 0)
      operator delete(v64);
    if (SHIBYTE(v83.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v83.__r_.__value_.__l.__data_);
    morphun::util::MemoryMappedFile::~MemoryMappedFile((morphun::util::MemoryMappedFile *)&v96);
LABEL_162:
    if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v85.__r_.__value_.__l.__data_);
    if (SHIBYTE(v86.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v86.__r_.__value_.__l.__data_);
    goto LABEL_166;
  }
LABEL_169:
  if (a3)
    goto LABEL_174;
  if (SHIBYTE(v90.__r_.__value_.__r.__words[2]) < 0)
  {
    if (v90.__r_.__value_.__l.__size_)
    {
LABEL_174:
      v67 = utrans_openU();
      goto LABEL_175;
    }
  }
  else if (*((_BYTE *)&v90.__r_.__value_.__s + 23))
  {
    goto LABEL_174;
  }
  v67 = 0;
LABEL_175:
  if (code >= U_ILLEGAL_ARGUMENT_ERROR)
  {
    utrans_close();
    exception = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::ICUException::ICUException(exception, code);
  }
  if (SHIBYTE(v90.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v90.__r_.__value_.__l.__data_);
  if (SHIBYTE(v91.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v91.__r_.__value_.__l.__data_);
  if (SBYTE7(v95) < 0)
    operator delete((void *)__src);
  return v67;
}

void sub_1CB4FB7B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,void *__p,uint64_t a59,int a60,__int16 a61,char a62,char a63)
{
  void *a64;
  char a69;
  void *a71;
  char a72;
  void *v72;

  __cxa_free_exception(v72);
  if (a63 < 0)
    operator delete(__p);
  if (a69 < 0)
    operator delete(a64);
  if (a72 < 0)
    operator delete(a71);
  _Unwind_Resume(a1);
}

void sub_1CB4FB7C4()
{
  uint64_t v0;

  JUMPOUT(0x1CB4FBACCLL);
}

void sub_1CB4FB7DC()
{
  void *v0;

  __cxa_free_exception(v0);
  JUMPOUT(0x1CB4FBACCLL);
}

void sub_1CB4FB7EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1CB4FB818(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,uint64_t a42,__int128 a43,uint64_t a44,uint64_t a45,void *__p,uint64_t a47,int a48,__int16 a49,char a50,char a51,uint64_t a52,void *a53,uint64_t a54,int a55,__int16 a56,char a57,char a58,uint64_t a59,void *a60,uint64_t a61,int a62,__int16 a63)
{
  char a65;
  void *a66;
  char a71;
  void *a72;
  char a73;
  void *a74;
  char a75;
  uint64_t v75;
  uint64_t v78;

  morphun::util::MemoryMappedFile::~MemoryMappedFile((morphun::util::MemoryMappedFile *)(v75 - 256));
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    std::operator+<char16_t>((uint64_t)&a43, "U", (const void **)&a53);
    v78 = morphun::exception::Throwable::Throwable(v75 - 256, &a43);
    *(_QWORD *)(v75 - 256) = &off_1E8673220;
    std::throw_with_nested[abi:ne180100]<morphun::exception::InvalidConfigurationException>(v78);
  }
  if (a51 < 0)
    operator delete(__p);
  if (a58 < 0)
    operator delete(a53);
  if (a65 < 0)
    operator delete(a60);
  if (a71 < 0)
    operator delete(a66);
  if (a73 < 0)
    operator delete(a72);
  if (a75 < 0)
    operator delete(a74);
  _Unwind_Resume(a1);
}

void sub_1CB4FB8B0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void *__p,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52,__int16 a53,char a54,char a55)
{
  uint64_t v55;

  morphun::exception::Throwable::~Throwable((std::exception *)(v55 - 256));
  if (a48 < 0)
    operator delete(__p);
  __cxa_end_catch();
  if (a55 < 0)
    JUMPOUT(0x1CB4FBA70);
  JUMPOUT(0x1CB4FBA74);
}

void sub_1CB4FB8E4(void *a1, int a2)
{
  if (a2)
    __clang_call_terminate(a1);
  JUMPOUT(0x1CB4FBACCLL);
}

void sub_1CB4FB8F4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *__p,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *a64;
  char a69;
  void *v69;
  int v70;

  if (v70 < 0)
    operator delete(v69);
  if (a38 < 0)
    operator delete(__p);
  if (a26 < 0)
    operator delete(a21);
  if ((a32 & 0x80000000) == 0)
  {
    if (a69 < 0)
      operator delete(a64);
    JUMPOUT(0x1CB4FBA9CLL);
  }
  JUMPOUT(0x1CB4FBA80);
}

void sub_1CB4FB8FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,uint64_t a52,void *a53,uint64_t a54,int a55,__int16 a56,char a57,char a58,uint64_t a59,void *a60,uint64_t a61,int a62,__int16 a63)
{
  char a65;
  void *a67;
  char a72;
  void *__p;
  char a74;
  void *v74;
  int v75;

  if (a74 < 0)
    operator delete(__p);
  if (a17 < 0)
    operator delete(a12);
  if (a72 < 0)
    operator delete(a67);
  if (a65 < 0)
    operator delete(a60);
  if (a23 < 0)
    operator delete(a18);
  if (a58 < 0)
    operator delete(a53);
  if (a51 < 0)
    operator delete(a46);
  if (v75 < 0)
    operator delete(v74);
  if (a44 < 0)
    operator delete(a39);
  if (a32 < 0)
    operator delete(a27);
  if (a38 < 0)
    JUMPOUT(0x1CB4FBA80);
  JUMPOUT(0x1CB4FBA8CLL);
}

void sub_1CB4FB908()
{
  JUMPOUT(0x1CB4FB9D0);
}

void sub_1CB4FB924()
{
  JUMPOUT(0x1CB4FBA0CLL);
}

void sub_1CB4FB92C()
{
  JUMPOUT(0x1CB4FB990);
}

void sub_1CB4FB934()
{
  JUMPOUT(0x1CB4FB9E0);
}

void sub_1CB4FB93C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *a56,uint64_t a57,int a58,__int16 a59,char a60,char a61)
{
  uint64_t v61;

  if (a14 < 0)
    operator delete(__p);
  if (*(char *)(v61 - 233) < 0)
    operator delete(*(void **)(v61 - 256));
  if (a61 < 0)
    operator delete(a56);
  if (a20 < 0)
    operator delete(a15);
  if (a54 < 0)
    operator delete(a49);
  JUMPOUT(0x1CB4FB9C0);
}

void sub_1CB4FB9B4()
{
  JUMPOUT(0x1CB4FBA2CLL);
}

void sub_1CB4FBA3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,void *a55,uint64_t a56,int a57,__int16 a58,char a59,char a60)
{
  icu4cxx::UnicodeSet::~UnicodeSet((icu4cxx::UnicodeSet *)&a47);
  if (a60 < 0)
    operator delete(a55);
  JUMPOUT(0x1CB4FBA9CLL);
}

void sub_1CB4FBA58()
{
  JUMPOUT(0x1CB4FBA74);
}

void sub_1CB4FBA60()
{
  uint64_t v0;

  if (*(char *)(v0 - 233) < 0)
    JUMPOUT(0x1CB4FBA70);
  JUMPOUT(0x1CB4FBA74);
}

_QWORD *std::string::basic_string[abi:ne180100]<0>(_QWORD *a1, char *__s)
{
  size_t v4;
  size_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  v5 = v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v4;
    v6 = a1;
    if (!v4)
      goto LABEL_9;
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((_BYTE *)v6 + v5) = 0;
  return a1;
}

void std::throw_with_nested[abi:ne180100]<morphun::exception::InvalidConfigurationException>(uint64_t a1)
{
  std::__throw_with_nested<morphun::exception::InvalidConfigurationException,morphun::exception::InvalidConfigurationException,true>::__do_throw[abi:ne180100](a1);
}

void std::__throw_with_nested<morphun::exception::InvalidConfigurationException,morphun::exception::InvalidConfigurationException,true>::__do_throw[abi:ne180100](uint64_t a1)
{
  void *exception;

  exception = __cxa_allocate_exception(0x48uLL);
  std::__nested<morphun::exception::InvalidConfigurationException>::__nested[abi:ne180100]((uint64_t)exception, a1);
}

void sub_1CB4FBBC8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__nested<morphun::exception::InvalidConfigurationException>::__nested[abi:ne180100](uint64_t a1, uint64_t a2)
{
  __int128 v4;
  std::string *v5;
  __int128 v6;

  *(_QWORD *)a1 = &off_1E86732B0;
  if (*(char *)(a2 + 31) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)(a2 + 8), *(_QWORD *)(a2 + 16));
  }
  else
  {
    v4 = *(_OWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = v4;
  }
  v5 = (std::string *)(a1 + 32);
  if (*(char *)(a2 + 55) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *(const std::string::value_type **)(a2 + 32), *(_QWORD *)(a2 + 40));
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  *(_QWORD *)a1 = &off_1E8673220;
  std::nested_exception::nested_exception((std::nested_exception *)(a1 + 56));
  *(_QWORD *)a1 = &off_1E8673B50;
  *(_QWORD *)(a1 + 56) = &unk_1E8673B80;
  return a1;
}

void sub_1CB4FBC98(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  std::exception::~exception((std::exception *)v1);
  _Unwind_Resume(a1);
}

void std::__nested<morphun::exception::InvalidConfigurationException>::~__nested(uint64_t a1)
{
  std::nested_exception::~nested_exception((std::nested_exception *)(a1 + 56));
  morphun::exception::Throwable::~Throwable((std::exception *)a1);
}

{
  std::nested_exception::~nested_exception((std::nested_exception *)(a1 + 56));
  morphun::exception::Throwable::~Throwable((std::exception *)a1);
  JUMPOUT(0x1D179D2ECLL);
}

void `non-virtual thunk to'std::__nested<morphun::exception::InvalidConfigurationException>::~__nested(std::nested_exception *a1)
{
  std::exception *p_ptr;

  p_ptr = (std::exception *)&a1[-4].__ptr_;
  std::nested_exception::~nested_exception(a1);
  morphun::exception::Throwable::~Throwable(p_ptr);
}

{
  std::exception *p_ptr;

  p_ptr = (std::exception *)&a1[-4].__ptr_;
  std::nested_exception::~nested_exception(a1);
  morphun::exception::Throwable::~Throwable(p_ptr);
  JUMPOUT(0x1D179D2ECLL);
}

morphun::transliteration::ICUScriptTransliterator *morphun::transliteration::ICUScriptTransliterator::ICUScriptTransliterator(morphun::transliteration::ICUScriptTransliterator *this, const morphun::util::ULocale *a2, const morphun::util::ULocale *a3)
{
  icu4cxx::UnicodeSet *v6;
  icu4cxx::UnicodeSet *v7;

  *(_QWORD *)this = &off_1E8656EF8;
  morphun::util::ULocale::ULocale((morphun::transliteration::ICUScriptTransliterator *)((char *)this + 8), a3);
  *(_QWORD *)this = &off_1E866A4A8;
  *((_BYTE *)this + 144) = 1;
  *((_QWORD *)this + 17) = uset_openEmpty();
  *((_QWORD *)this + 19) = morphun::transliteration::ICUScriptTransliterator::createTransliterator(a2, a3, (morphun::transliteration::ICUScriptTransliterator *)((char *)this + 136), v6);
  *((_BYTE *)this + 160) = 1;
  *((_QWORD *)this + 21) = morphun::transliteration::ICUScriptTransliterator::createTransliterator(a2, a3, 0, v7);
  *((_BYTE *)this + 176) = 1;
  return this;
}

void sub_1CB4FBE38(_Unwind_Exception *a1)
{
  _QWORD *v1;
  void **v2;
  icu4cxx::UnicodeSet *v3;
  icu4cxx::Transliterator *v4;
  uint64_t v5;

  icu4cxx::Transliterator::~Transliterator(v4);
  icu4cxx::UnicodeSet::~UnicodeSet(v3);
  *v1 = v5;
  _Unwind_Resume(a1);
}

void morphun::analysis::filter::TransliterationFilter::~TransliterationFilter(void **this)
{
  if (*((char *)this + 143) < 0)
    operator delete(this[15]);
  morphun::analysis::TokenFilter::~TokenFilter((morphun::analysis::TokenFilter *)this, (uint64_t *)&off_1E86697B8);
}

{
  if (*((char *)this + 143) < 0)
    operator delete(this[15]);
  morphun::analysis::TokenFilter::~TokenFilter((morphun::analysis::TokenFilter *)this, (uint64_t *)&off_1E86697B8);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::analysis::filter::TransliterationFilter::incrementToken(const std::basic_string<char16_t> *this)
{
  std::basic_string<char16_t>::pointer data;
  uint64_t v3;
  std::basic_string<char16_t>::pointer v4;
  std::basic_string<char16_t>::size_type size;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  morphun::exception::NullPointerException *exception;

  data = this[4].__r_.__value_.__l.__data_;
  if (!data)
    goto LABEL_14;
  v3 = (*(uint64_t (**)(std::basic_string<char16_t>::pointer))(*(_QWORD *)data + 24))(data);
  if (!(_DWORD)v3)
    return v3;
  v4 = this[6].__r_.__value_.__l.__data_;
  if (v4)
  {
    if (((*(uint64_t (**)(std::basic_string<char16_t>::pointer))(*(_QWORD *)v4 + 56))(v4) & 1) != 0)
      return v3;
  }
  size = this[4].__r_.__value_.__l.__size_;
  if (!size)
  {
LABEL_14:
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  v6 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(this[4].__r_.__value_.__r.__words[2]);
  v7 = (char *)v6 + *(_QWORD *)(*v6 - 96);
  if (v7[23] < 0)
  {
    v7 = *(char **)v7;
    v8 = *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 - 96) + 8);
  }
  else
  {
    v8 = v7[23];
  }
  if ((*(unsigned int (**)(std::basic_string<char16_t>::size_type, char *, uint64_t, const std::basic_string<char16_t> *))(*(_QWORD *)size + 24))(size, v7, v8, this + 5))
  {
    v9 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(this[4].__r_.__value_.__r.__words[2]);
    std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v9 + *(_QWORD *)(*v9 - 96)), this + 5);
    if (SHIBYTE(this[5].__r_.__value_.__r.__words[2]) < 0)
    {
      *this[5].__r_.__value_.__l.__data_ = 0;
      this[5].__r_.__value_.__l.__size_ = 0;
    }
    else
    {
      this[5].__r_.__value_.__s.__data_[0] = 0;
      *((_BYTE *)&this[5].__r_.__value_.__s + 23) = 0;
    }
  }
  return v3;
}

void sub_1CB4FC01C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *morphun::analysis::filter::TransliterationFilter::reset(morphun::analysis::filter::TransliterationFilter *this)
{
  uint64_t v2;
  void *result;

  v2 = npc<morphun::analysis::TokenStream>(*((_QWORD *)this + 12));
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
  result = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::KeywordAttribute>((uint64_t)this);
  *((_QWORD *)this + 18) = result;
  return result;
}

void sub_1CB4FC0B4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

morphun::analysis::filter::TransliterationFilter *morphun::analysis::filter::TransliterationFilter::TransliterationFilter(morphun::analysis::filter::TransliterationFilter *this, morphun::analysis::TokenStream *a2, const morphun::transliteration::Transliterator *a3)
{
  morphun::analysis::util::AttributeSource *v6;

  *(_QWORD *)this = &off_1E866A910;
  v6 = morphun::analysis::util::AttributeSource::AttributeSource(this, (morphun::analysis::util::AttributeSource *)&off_1E86697C8, (uint64_t)a2);
  *(_QWORD *)v6 = &off_1E86724E8;
  *((_QWORD *)v6 + 12) = a2;
  *((_QWORD *)v6 + 13) = a3;
  *((_OWORD *)v6 + 7) = 0u;
  *((_OWORD *)v6 + 8) = 0u;
  *((_QWORD *)v6 + 18) = 0;
  *((_QWORD *)this + 14) = morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::CharTermAttribute>((uint64_t)v6);
  return this;
}

void sub_1CB4FC138(_Unwind_Exception *a1)
{
  uint64_t v1;

  if (*(char *)(v1 + 143) < 0)
    operator delete(*(void **)(v1 + 120));
  morphun::analysis::TokenFilter::~TokenFilter((morphun::analysis::TokenFilter *)v1, (uint64_t *)&off_1E86697B8);
  _Unwind_Resume(a1);
}

void sub_1CB4FC1A8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::__introsort<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*,false>(__int128 *a1, __int128 *a2, uint64_t a3, char a4)
{
  __int128 *v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int128 *v13;
  __int128 v14;
  uint64_t v15;
  float v16;
  __int128 *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  __int128 *v26;
  uint64_t v27;
  float v28;
  uint64_t v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  float v36;
  uint64_t v37;
  __int128 *v38;
  __int128 *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  float v44;
  uint64_t v45;
  uint64_t v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  float v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 *v63;
  uint64_t v64;
  __int128 *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  float v71;
  uint64_t v72;
  std::__shared_weak_count *v73;
  unint64_t *v74;
  unint64_t v75;
  int64_t v76;
  int64_t v77;
  int64_t v78;
  uint64_t v79;
  __int128 *v80;
  __int128 *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __int128 *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  __int128 *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  std::__shared_weak_count *v102;
  unint64_t *v103;
  unint64_t v104;
  std::__shared_weak_count *v105;
  unint64_t *v106;
  unint64_t v107;
  __int128 *v109;
  __int128 *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  std::__shared_weak_count *v115;
  unint64_t *v116;
  unint64_t v117;
  __int128 v118;
  __int128 v119;

LABEL_1:
  v8 = a2 - 1;
  v9 = a1;
  while (2)
  {
    a1 = v9;
    v10 = (char *)a2 - (char *)v9;
    v11 = a2 - v9;
    switch(v11)
    {
      case 0:
      case 1:
        return;
      case 2:
        v50 = *(_QWORD *)a1;
        if (*(float *)(*(_QWORD *)a1 + 96) < *(float *)(*(_QWORD *)v8 + 96))
        {
          *(_QWORD *)a1 = *(_QWORD *)v8;
          *((_QWORD *)a2 - 2) = v50;
          v51 = *((_QWORD *)a1 + 1);
          *((_QWORD *)a1 + 1) = *((_QWORD *)a2 - 1);
          *((_QWORD *)a2 - 1) = v51;
        }
        return;
      case 3:
        std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>(a1, (_QWORD *)a1 + 2, (_QWORD *)a2 - 2);
        return;
      case 4:
        std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>(a1, (_QWORD *)a1 + 2, (_QWORD *)a1 + 4, (_QWORD *)a2 - 2);
        return;
      case 5:
        std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>(a1, (_QWORD *)a1 + 2, (_QWORD *)a1 + 4, (_QWORD *)a1 + 6);
        v52 = *((_QWORD *)a1 + 6);
        if (*(float *)(v52 + 96) < *(float *)(*(_QWORD *)v8 + 96))
        {
          *((_QWORD *)a1 + 6) = *(_QWORD *)v8;
          *((_QWORD *)a2 - 2) = v52;
          v53 = *((_QWORD *)a1 + 7);
          *((_QWORD *)a1 + 7) = *((_QWORD *)a2 - 1);
          *((_QWORD *)a2 - 1) = v53;
          v54 = *((_QWORD *)a1 + 4);
          v55 = *((_QWORD *)a1 + 6);
          v56 = *(float *)(v55 + 96);
          if (*(float *)(v54 + 96) < v56)
          {
            v57 = *((_QWORD *)a1 + 5);
            v58 = *((_QWORD *)a1 + 7);
            *((_QWORD *)a1 + 4) = v55;
            *((_QWORD *)a1 + 5) = v58;
            *((_QWORD *)a1 + 6) = v54;
            *((_QWORD *)a1 + 7) = v57;
            v59 = *((_QWORD *)a1 + 2);
            if (*(float *)(v59 + 96) < v56)
            {
              v60 = *((_QWORD *)a1 + 3);
              *((_QWORD *)a1 + 2) = v55;
              *((_QWORD *)a1 + 3) = v58;
              *((_QWORD *)a1 + 4) = v59;
              *((_QWORD *)a1 + 5) = v60;
              v61 = *(_QWORD *)a1;
              if (*(float *)(*(_QWORD *)a1 + 96) < v56)
              {
                v62 = *((_QWORD *)a1 + 1);
                *(_QWORD *)a1 = v55;
                *((_QWORD *)a1 + 1) = v58;
                *((_QWORD *)a1 + 2) = v61;
                *((_QWORD *)a1 + 3) = v62;
              }
            }
          }
        }
        return;
      default:
        if (v10 <= 383)
        {
          if ((a4 & 1) != 0)
          {
            if (a1 != a2)
            {
              v63 = a1 + 1;
              if (a1 + 1 != a2)
              {
                v64 = 0;
                v65 = a1;
                do
                {
                  v66 = *(_QWORD *)v65;
                  v67 = *((_QWORD *)v65 + 2);
                  v65 = v63;
                  if (*(float *)(v66 + 96) < *(float *)(v67 + 96))
                  {
                    v119 = *v63;
                    v68 = v119;
                    *(_QWORD *)v63 = 0;
                    *((_QWORD *)v63 + 1) = 0;
                    v69 = v68;
                    v70 = v64;
                    while (1)
                    {
                      std::shared_ptr<morphun::tokenizer::dictionary::Segment>::operator=[abi:ne180100]((uint64_t)a1 + v70 + 16, (__int128 *)((char *)a1 + v70));
                      if (!v70)
                        break;
                      v71 = *(float *)(*(_QWORD *)((char *)a1 + v70 - 16) + 96);
                      v70 -= 16;
                      if (v71 >= *(float *)(v69 + 96))
                      {
                        v72 = (uint64_t)a1 + v70 + 16;
                        goto LABEL_81;
                      }
                    }
                    v72 = (uint64_t)a1;
LABEL_81:
                    std::shared_ptr<morphun::tokenizer::dictionary::Segment>::operator=[abi:ne180100](v72, &v119);
                    v73 = (std::__shared_weak_count *)*((_QWORD *)&v119 + 1);
                    if (*((_QWORD *)&v119 + 1))
                    {
                      v74 = (unint64_t *)(*((_QWORD *)&v119 + 1) + 8);
                      do
                        v75 = __ldaxr(v74);
                      while (__stlxr(v75 - 1, v74));
                      if (!v75)
                      {
                        ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
                        std::__shared_weak_count::__release_weak(v73);
                      }
                    }
                  }
                  v63 = v65 + 1;
                  v64 += 16;
                }
                while (v65 + 1 != a2);
              }
            }
          }
          else if (a1 != a2)
          {
            v109 = a1 + 1;
            while (v109 != a2)
            {
              v110 = v109;
              if (*(float *)(*(_QWORD *)a1 + 96) < *(float *)(*((_QWORD *)a1 + 2) + 96))
              {
                v119 = *v109;
                v111 = v119;
                *(_QWORD *)v109 = 0;
                *((_QWORD *)v109 + 1) = 0;
                v112 = v111;
                do
                {
                  v113 = (uint64_t)a1;
                  std::shared_ptr<morphun::tokenizer::dictionary::Segment>::operator=[abi:ne180100]((uint64_t)(a1 + 1), a1);
                  v114 = *((_QWORD *)a1-- - 2);
                }
                while (*(float *)(v114 + 96) < *(float *)(v112 + 96));
                std::shared_ptr<morphun::tokenizer::dictionary::Segment>::operator=[abi:ne180100](v113, &v119);
                v115 = (std::__shared_weak_count *)*((_QWORD *)&v119 + 1);
                if (*((_QWORD *)&v119 + 1))
                {
                  v116 = (unint64_t *)(*((_QWORD *)&v119 + 1) + 8);
                  do
                    v117 = __ldaxr(v116);
                  while (__stlxr(v117 - 1, v116));
                  if (!v117)
                  {
                    ((void (*)(std::__shared_weak_count *))v115->__on_zero_shared)(v115);
                    std::__shared_weak_count::__release_weak(v115);
                  }
                }
              }
              v109 = v110 + 1;
              a1 = v110;
            }
          }
          return;
        }
        if (!a3)
        {
          if (a1 != a2)
          {
            v76 = (unint64_t)(v11 - 2) >> 1;
            v77 = v76;
            do
            {
              v78 = v77;
              if (v76 >= v77)
              {
                v79 = (2 * v77) | 1;
                v80 = &a1[v79];
                if (2 * v78 + 2 < v11 && *(float *)(*((_QWORD *)v80 + 2) + 96) < *(float *)(*(_QWORD *)v80 + 96))
                {
                  ++v80;
                  v79 = 2 * v78 + 2;
                }
                v81 = &a1[v78];
                if (*(float *)(*(_QWORD *)v81 + 96) >= *(float *)(*(_QWORD *)v80 + 96))
                {
                  v119 = *v81;
                  v82 = v119;
                  *(_QWORD *)v81 = 0;
                  *((_QWORD *)v81 + 1) = 0;
                  v83 = v82;
                  do
                  {
                    v84 = (uint64_t)v80;
                    std::shared_ptr<morphun::tokenizer::dictionary::Segment>::operator=[abi:ne180100]((uint64_t)v81, v80);
                    if (v76 < v79)
                      break;
                    v85 = 2 * v79;
                    v79 = (2 * v79) | 1;
                    v80 = &a1[v79];
                    v86 = v85 + 2;
                    if (v86 < v11 && *(float *)(*((_QWORD *)v80 + 2) + 96) < *(float *)(*(_QWORD *)v80 + 96))
                    {
                      ++v80;
                      v79 = v86;
                    }
                    v81 = (__int128 *)v84;
                  }
                  while (*(float *)(v83 + 96) >= *(float *)(*(_QWORD *)v80 + 96));
                  std::shared_ptr<morphun::tokenizer::dictionary::Segment>::operator=[abi:ne180100](v84, &v119);
                  v87 = (std::__shared_weak_count *)*((_QWORD *)&v119 + 1);
                  if (*((_QWORD *)&v119 + 1))
                  {
                    v88 = (unint64_t *)(*((_QWORD *)&v119 + 1) + 8);
                    do
                      v89 = __ldaxr(v88);
                    while (__stlxr(v89 - 1, v88));
                    if (!v89)
                    {
                      ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
                      std::__shared_weak_count::__release_weak(v87);
                    }
                  }
                }
              }
              v77 = v78 - 1;
            }
            while (v78);
            v90 = (unint64_t)v10 >> 4;
            do
            {
              v91 = 0;
              v118 = *a1;
              *(_QWORD *)a1 = 0;
              *((_QWORD *)a1 + 1) = 0;
              v92 = a1;
              do
              {
                v93 = (uint64_t)v92;
                v92 += v91 + 1;
                v94 = 2 * v91;
                v91 = (2 * v91) | 1;
                v95 = v94 + 2;
                if (v95 < v90 && *(float *)(*((_QWORD *)v92 + 2) + 96) < *(float *)(*(_QWORD *)v92 + 96))
                {
                  ++v92;
                  v91 = v95;
                }
                std::shared_ptr<morphun::tokenizer::dictionary::Segment>::operator=[abi:ne180100](v93, v92);
              }
              while (v91 <= (uint64_t)((unint64_t)(v90 - 2) >> 1));
              if (v92 == --a2)
              {
                std::shared_ptr<morphun::tokenizer::dictionary::Segment>::operator=[abi:ne180100]((uint64_t)v92, &v118);
              }
              else
              {
                std::shared_ptr<morphun::tokenizer::dictionary::Segment>::operator=[abi:ne180100]((uint64_t)v92, a2);
                std::shared_ptr<morphun::tokenizer::dictionary::Segment>::operator=[abi:ne180100]((uint64_t)a2, &v118);
                v96 = (char *)v92 - (char *)a1 + 16;
                if (v96 >= 17)
                {
                  v97 = (((unint64_t)v96 >> 4) - 2) >> 1;
                  v98 = &a1[v97];
                  if (*(float *)(*(_QWORD *)v92 + 96) < *(float *)(*(_QWORD *)v98 + 96))
                  {
                    v119 = *v92;
                    v99 = v119;
                    *(_QWORD *)v92 = 0;
                    *((_QWORD *)v92 + 1) = 0;
                    v100 = v99;
                    do
                    {
                      v101 = (uint64_t)v98;
                      std::shared_ptr<morphun::tokenizer::dictionary::Segment>::operator=[abi:ne180100]((uint64_t)v92, v98);
                      if (!v97)
                        break;
                      v97 = (v97 - 1) >> 1;
                      v98 = &a1[v97];
                      v92 = (__int128 *)v101;
                    }
                    while (*(float *)(v100 + 96) < *(float *)(*(_QWORD *)v98 + 96));
                    std::shared_ptr<morphun::tokenizer::dictionary::Segment>::operator=[abi:ne180100](v101, &v119);
                    v102 = (std::__shared_weak_count *)*((_QWORD *)&v119 + 1);
                    if (*((_QWORD *)&v119 + 1))
                    {
                      v103 = (unint64_t *)(*((_QWORD *)&v119 + 1) + 8);
                      do
                        v104 = __ldaxr(v103);
                      while (__stlxr(v104 - 1, v103));
                      if (!v104)
                      {
                        ((void (*)(std::__shared_weak_count *))v102->__on_zero_shared)(v102);
                        std::__shared_weak_count::__release_weak(v102);
                      }
                    }
                  }
                }
              }
              v105 = (std::__shared_weak_count *)*((_QWORD *)&v118 + 1);
              if (*((_QWORD *)&v118 + 1))
              {
                v106 = (unint64_t *)(*((_QWORD *)&v118 + 1) + 8);
                do
                  v107 = __ldaxr(v106);
                while (__stlxr(v107 - 1, v106));
                if (!v107)
                {
                  ((void (*)(std::__shared_weak_count *))v105->__on_zero_shared)(v105);
                  std::__shared_weak_count::__release_weak(v105);
                }
              }
            }
            while (v90-- > 2);
          }
          return;
        }
        v12 = (unint64_t)v11 >> 1;
        v13 = &a1[(unint64_t)v11 >> 1];
        if ((unint64_t)v10 < 0x801)
        {
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>(v13, a1, (_QWORD *)a2 - 2);
        }
        else
        {
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>(a1, v13, (_QWORD *)a2 - 2);
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>((_QWORD *)a1 + 2, (_QWORD *)v13 - 2, (_QWORD *)a2 - 4);
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>((_QWORD *)a1 + 4, &a1[v12 + 1], (_QWORD *)a2 - 6);
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>((_QWORD *)v13 - 2, v13, &a1[v12 + 1]);
          v14 = *a1;
          *a1 = *v13;
          *v13 = v14;
        }
        --a3;
        if ((a4 & 1) == 0 && *(float *)(*(_QWORD *)a1 + 96) >= *(float *)(*((_QWORD *)a1 - 2) + 96))
        {
          v119 = *a1;
          v35 = v119;
          *(_QWORD *)a1 = 0;
          *((_QWORD *)a1 + 1) = 0;
          v36 = *(float *)(v35 + 96);
          if (*(float *)(*(_QWORD *)v8 + 96) >= v36)
          {
            v38 = a1 + 1;
            do
            {
              v9 = v38;
              if (v38 >= a2)
                break;
              ++v38;
            }
            while (*(float *)(*(_QWORD *)v9 + 96) >= v36);
          }
          else
          {
            v9 = a1;
            do
              v37 = *((_QWORD *)v9++ + 2);
            while (*(float *)(v37 + 96) >= v36);
          }
          v39 = a2;
          if (v9 < a2)
          {
            v39 = a2;
            do
              v40 = *((_QWORD *)v39-- - 2);
            while (*(float *)(v40 + 96) < v36);
          }
          if (v9 < v39)
          {
            v41 = *(_QWORD *)v9;
            v42 = *(_QWORD *)v39;
            do
            {
              *(_QWORD *)v9 = v42;
              *(_QWORD *)v39 = v41;
              v43 = *((_QWORD *)v9 + 1);
              *((_QWORD *)v9 + 1) = *((_QWORD *)v39 + 1);
              *((_QWORD *)v39 + 1) = v43;
              v44 = *(float *)(v119 + 96);
              do
              {
                v45 = *((_QWORD *)v9++ + 2);
                v41 = v45;
              }
              while (*(float *)(v45 + 96) >= v44);
              do
              {
                v46 = *((_QWORD *)v39-- - 2);
                v42 = v46;
              }
              while (*(float *)(v46 + 96) < v44);
            }
            while (v9 < v39);
          }
          if (v9 - 1 != a1)
            std::shared_ptr<morphun::tokenizer::dictionary::Segment>::operator=[abi:ne180100]((uint64_t)a1, v9 - 1);
          std::shared_ptr<morphun::tokenizer::dictionary::Segment>::operator=[abi:ne180100]((uint64_t)(v9 - 1), &v119);
          v47 = (std::__shared_weak_count *)*((_QWORD *)&v119 + 1);
          if (*((_QWORD *)&v119 + 1))
          {
            v48 = (unint64_t *)(*((_QWORD *)&v119 + 1) + 8);
            do
              v49 = __ldaxr(v48);
            while (__stlxr(v49 - 1, v48));
            if (!v49)
            {
              ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
              std::__shared_weak_count::__release_weak(v47);
            }
          }
          a4 = 0;
          continue;
        }
        v119 = *a1;
        v15 = v119;
        *(_QWORD *)a1 = 0;
        *((_QWORD *)a1 + 1) = 0;
        v16 = *(float *)(v15 + 96);
        v17 = a1;
        do
        {
          v18 = (uint64_t)v17;
          v20 = *((_QWORD *)v17++ + 2);
          v19 = v20;
        }
        while (v16 < *(float *)(v20 + 96));
        v21 = a2;
        if ((__int128 *)v18 == a1)
        {
          v21 = a2;
          do
          {
            if (v17 >= v21)
              break;
            v23 = *((_QWORD *)v21-- - 2);
          }
          while (v16 >= *(float *)(v23 + 96));
        }
        else
        {
          do
            v22 = *((_QWORD *)v21-- - 2);
          while (v16 >= *(float *)(v22 + 96));
        }
        if (v17 < v21)
        {
          v24 = *(_QWORD *)v21;
          v25 = v17;
          v26 = v21;
          do
          {
            *(_QWORD *)v25 = v24;
            *(_QWORD *)v26 = v19;
            v27 = *((_QWORD *)v25 + 1);
            *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
            *((_QWORD *)v26 + 1) = v27;
            v28 = *(float *)(v119 + 96);
            do
            {
              v18 = (uint64_t)v25;
              v29 = *((_QWORD *)v25++ + 2);
              v19 = v29;
            }
            while (v28 < *(float *)(v29 + 96));
            do
            {
              v30 = *((_QWORD *)v26-- - 2);
              v24 = v30;
            }
            while (v28 >= *(float *)(v30 + 96));
          }
          while (v25 < v26);
        }
        if ((__int128 *)v18 != a1)
          std::shared_ptr<morphun::tokenizer::dictionary::Segment>::operator=[abi:ne180100]((uint64_t)a1, (__int128 *)v18);
        std::shared_ptr<morphun::tokenizer::dictionary::Segment>::operator=[abi:ne180100](v18, &v119);
        v31 = (std::__shared_weak_count *)*((_QWORD *)&v119 + 1);
        if (*((_QWORD *)&v119 + 1))
        {
          v32 = (unint64_t *)(*((_QWORD *)&v119 + 1) + 8);
          do
            v33 = __ldaxr(v32);
          while (__stlxr(v33 - 1, v32));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        if (v17 < v21)
        {
LABEL_34:
          std::__introsort<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*,false>(a1, v18, a3, a4 & 1);
          a4 = 0;
          v9 = (__int128 *)(v18 + 16);
          continue;
        }
        v34 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>((char *)a1, (char *)v18);
        v9 = (__int128 *)(v18 + 16);
        if (!std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>((char *)(v18 + 16), (char *)a2))
        {
          if (v34)
            continue;
          goto LABEL_34;
        }
        a2 = (__int128 *)v18;
        if (!v34)
          goto LABEL_1;
        return;
    }
  }
}

_QWORD *std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>(_QWORD *result, _QWORD *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  float v5;
  uint64_t v6;
  float v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = *result;
  v4 = *a2;
  v5 = *(float *)(*a2 + 96);
  v6 = *a3;
  v7 = *(float *)(*a3 + 96);
  if (*(float *)(*result + 96) < v5)
  {
    if (v5 >= v7)
    {
      *result = v4;
      *a2 = v3;
      v12 = result[1];
      result[1] = a2[1];
      a2[1] = v12;
      v13 = *a2;
      if (*(float *)(*a2 + 96) >= *(float *)(*a3 + 96))
        return result;
      *a2 = *a3;
      *a3 = v13;
      v8 = a3 + 1;
      result = a2 + 1;
    }
    else
    {
      *result++ = v6;
      *a3 = v3;
      v8 = a3 + 1;
    }
    v9 = v8;
    goto LABEL_10;
  }
  if (v5 < v7)
  {
    *a2 = v6;
    *a3 = v4;
    v9 = a2 + 1;
    v10 = a2[1];
    a2[1] = a3[1];
    a3[1] = v10;
    v11 = *result;
    if (*(float *)(*result + 96) < *(float *)(*a2 + 96))
    {
      *result++ = *a2;
      *a2 = v11;
LABEL_10:
      v14 = *result;
      *result = *v9;
      *v9 = v14;
    }
  }
  return result;
}

_QWORD *std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>(_QWORD *a1, _QWORD *a2, _QWORD *a3, _QWORD *a4)
{
  _QWORD *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>(a1, a2, a3);
  v9 = *a3;
  if (*(float *)(*a3 + 96) < *(float *)(*a4 + 96))
  {
    *a3 = *a4;
    *a4 = v9;
    v10 = a3[1];
    a3[1] = a4[1];
    a4[1] = v10;
    v11 = *a2;
    if (*(float *)(*a2 + 96) < *(float *)(*a3 + 96))
    {
      *a2 = *a3;
      *a3 = v11;
      v12 = a2[1];
      a2[1] = a3[1];
      a3[1] = v12;
      v13 = *a1;
      if (*(float *)(*a1 + 96) < *(float *)(*a2 + 96))
      {
        *a1 = *a2;
        *a2 = v13;
        v14 = a1[1];
        a1[1] = a2[1];
        a2[1] = v14;
      }
    }
  }
  return result;
}

uint64_t std::shared_ptr<morphun::tokenizer::dictionary::Segment>::operator=[abi:ne180100](uint64_t a1, __int128 *a2)
{
  __int128 v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  v3 = *a2;
  *(_QWORD *)a2 = 0;
  *((_QWORD *)a2 + 1) = 0;
  v4 = *(std::__shared_weak_count **)(a1 + 8);
  *(_OWORD *)a1 = v3;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return a1;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>(char *a1, char *a2)
{
  uint64_t v4;
  _BOOL8 result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  float v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  float v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;

  v4 = (a2 - a1) >> 4;
  result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v6 = *(_QWORD *)a1;
      v7 = *((_QWORD *)a2 - 2);
      if (*(float *)(*(_QWORD *)a1 + 96) < *(float *)(v7 + 96))
      {
        *(_QWORD *)a1 = v7;
        *((_QWORD *)a2 - 2) = v6;
        v8 = *((_QWORD *)a1 + 1);
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 - 1);
        *((_QWORD *)a2 - 1) = v8;
      }
      return result;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>(a1, (_QWORD *)a1 + 2, (_QWORD *)a2 - 2);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>(a1, (_QWORD *)a1 + 2, (_QWORD *)a1 + 4, (_QWORD *)a2 - 2);
      return 1;
    case 5:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>(a1, (_QWORD *)a1 + 2, (_QWORD *)a1 + 4, (_QWORD *)a1 + 6);
      v21 = *((_QWORD *)a1 + 6);
      v22 = *((_QWORD *)a2 - 2);
      if (*(float *)(v21 + 96) < *(float *)(v22 + 96))
      {
        *((_QWORD *)a1 + 6) = v22;
        *((_QWORD *)a2 - 2) = v21;
        v23 = *((_QWORD *)a1 + 7);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 - 1);
        *((_QWORD *)a2 - 1) = v23;
        v24 = *((_QWORD *)a1 + 4);
        v25 = *((_QWORD *)a1 + 6);
        v26 = *(float *)(v25 + 96);
        if (*(float *)(v24 + 96) < v26)
        {
          v27 = *((_QWORD *)a1 + 5);
          v28 = *((_QWORD *)a1 + 7);
          *((_QWORD *)a1 + 4) = v25;
          *((_QWORD *)a1 + 5) = v28;
          *((_QWORD *)a1 + 6) = v24;
          *((_QWORD *)a1 + 7) = v27;
          v29 = *((_QWORD *)a1 + 2);
          if (*(float *)(v29 + 96) < v26)
          {
            v30 = *((_QWORD *)a1 + 3);
            *((_QWORD *)a1 + 2) = v25;
            *((_QWORD *)a1 + 3) = v28;
            *((_QWORD *)a1 + 4) = v29;
            *((_QWORD *)a1 + 5) = v30;
            v31 = *(_QWORD *)a1;
            if (*(float *)(*(_QWORD *)a1 + 96) < v26)
            {
              v32 = *((_QWORD *)a1 + 1);
              *(_QWORD *)a1 = v25;
              *((_QWORD *)a1 + 1) = v28;
              *((_QWORD *)a1 + 2) = v31;
              *((_QWORD *)a1 + 3) = v32;
            }
          }
        }
      }
      return 1;
    default:
      v9 = a1 + 32;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>(a1, (_QWORD *)a1 + 2, (_QWORD *)a1 + 4);
      v10 = a1 + 48;
      if (a1 + 48 == a2)
        return 1;
      v11 = 0;
      v12 = 0;
      break;
  }
  while (1)
  {
    if (*(float *)(*(_QWORD *)v9 + 96) < *(float *)(*(_QWORD *)v10 + 96))
    {
      v33 = *(_OWORD *)v10;
      v13 = v33;
      *(_QWORD *)v10 = 0;
      *((_QWORD *)v10 + 1) = 0;
      v14 = v13;
      v15 = v11;
      while (1)
      {
        std::shared_ptr<morphun::tokenizer::dictionary::Segment>::operator=[abi:ne180100]((uint64_t)&a1[v15 + 48], (__int128 *)&a1[v15 + 32]);
        if (v15 == -32)
          break;
        v16 = *(float *)(*(_QWORD *)&a1[v15 + 16] + 96);
        v15 -= 16;
        if (v16 >= *(float *)(v14 + 96))
        {
          v17 = (uint64_t)&a1[v15 + 48];
          goto LABEL_13;
        }
      }
      v17 = (uint64_t)a1;
LABEL_13:
      std::shared_ptr<morphun::tokenizer::dictionary::Segment>::operator=[abi:ne180100](v17, &v33);
      v18 = (std::__shared_weak_count *)*((_QWORD *)&v33 + 1);
      if (*((_QWORD *)&v33 + 1))
      {
        v19 = (unint64_t *)(*((_QWORD *)&v33 + 1) + 8);
        do
          v20 = __ldaxr(v19);
        while (__stlxr(v20 - 1, v19));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
      }
      if (++v12 == 8)
        return v10 + 16 == a2;
    }
    v9 = v10;
    v11 += 16;
    v10 += 16;
    if (v10 == a2)
      return 1;
  }
}

uint64_t **com::apple::siri::tokenizer::data::config_yue_Hans::getContent@<X0>(uint64_t **a1@<X8>)
{
  _OWORD v3[3];
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v3[0] = xmmword_1E86769A8;
  v3[1] = *(_OWORD *)&off_1E86769B8;
  v3[2] = xmmword_1E86769C8;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 2);
}

void morphun::analysis::JaAnalyzer::~JaAnalyzer(void **this)
{
  *this = &off_1E86603C8;
  morphun::analysis::Analyzer::~Analyzer((morphun::analysis::Analyzer *)this, (uint64_t *)&off_1E8668F00);
}

{
  *this = &off_1E86603C8;
  morphun::analysis::Analyzer::~Analyzer((morphun::analysis::Analyzer *)this, (uint64_t *)&off_1E8668F00);
  JUMPOUT(0x1D179D2ECLL);
}

morphun::analysis::filter::ContractionExpandingFilter *morphun::analysis::JaAnalyzer::addWordNormalizationFilter(const char **this, morphun::analysis::TokenStream *a2)
{
  morphun::analysis::filter::ContractionExpandingFilter *v4;

  v4 = (morphun::analysis::filter::ContractionExpandingFilter *)operator new();
  morphun::analysis::filter::ContractionExpandingFilter::ContractionExpandingFilter(v4, a2, this + 10);
  return v4;
}

void sub_1CB4FD150(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10F3C40D8FC8917);
  _Unwind_Resume(a1);
}

void morphun::dialog::SpeakableString::toString(morphun::dialog::SpeakableString *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  uint64_t v4;
  int v5;
  const std::basic_string<char16_t>::value_type *v6;
  std::basic_string<char16_t>::size_type v7;
  std::basic_string<char16_t> v8;
  std::basic_string<char16_t> v9;
  std::basic_string<char16_t> v10;

  if ((*(unsigned int (**)(morphun::dialog::SpeakableString *))(*(_QWORD *)this + 48))(this))
  {
    std::operator+<char16_t>((uint64_t)&v10, "S", (const void **)this + 1);
    std::basic_string<char16_t>::push_back(&v10, 93);
    *a2 = v10;
  }
  else
  {
    std::operator+<char16_t>((uint64_t)&v8, "S", (const void **)this + 1);
    std::basic_string<char16_t>::append(&v8, (const std::basic_string<char16_t>::value_type *)"/", 5uLL);
    v9 = v8;
    memset(&v8, 0, sizeof(v8));
    v4 = npc<std::basic_string<char16_t>>(*((_QWORD *)this + 4));
    v5 = *(char *)(v4 + 23);
    if (v5 >= 0)
      v6 = (const std::basic_string<char16_t>::value_type *)v4;
    else
      v6 = *(const std::basic_string<char16_t>::value_type **)v4;
    if (v5 >= 0)
      v7 = *(unsigned __int8 *)(v4 + 23);
    else
      v7 = *(_QWORD *)(v4 + 8);
    std::basic_string<char16_t>::append(&v9, v6, v7);
    v10 = v9;
    memset(&v9, 0, sizeof(v9));
    std::basic_string<char16_t>::push_back(&v10, 93);
    *a2 = v10;
    memset(&v10, 0, sizeof(v10));
    if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v9.__r_.__value_.__l.__data_);
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v8.__r_.__value_.__l.__data_);
  }
}

void sub_1CB4FD2A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;

  if (*(char *)(v21 - 25) < 0)
    operator delete(*(void **)(v21 - 48));
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void morphun::dialog::SpeakableString::~SpeakableString(morphun::dialog::SpeakableString *this)
{
}

{
  JUMPOUT(0x1D179D2ECLL);
}

morphun::dialog::SpeakableString *morphun::dialog::SpeakableString::toSpeakableString(morphun::dialog::SpeakableString *this)
{
  morphun::dialog::SpeakableString *v2;
  morphun::dialog::SpeakableString *v3;
  morphun::exception::NullPointerException *exception;

  v2 = (morphun::dialog::SpeakableString *)operator new();
  v3 = v2;
  if (!this)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  morphun::dialog::SpeakableString::SpeakableString(v2, this);
  return v3;
}

void sub_1CB4FD3BC(_Unwind_Exception *a1)
{
  uint64_t v1;
  void *v2;

  __cxa_free_exception(v2);
  MEMORY[0x1D179D2EC](v1, 0x10B3C40F7FF9C27);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::SpeakableString::getPrint(morphun::dialog::SpeakableString *this)
{
  return (uint64_t)this + 8;
}

uint64_t morphun::dialog::SpeakableString::getSpeak(morphun::dialog::SpeakableString *this)
{
  if (*((_QWORD *)this + 4))
    return *((_QWORD *)this + 4);
  else
    return (uint64_t)this + 8;
}

BOOL morphun::dialog::SpeakableString::speakEqualsPrint(morphun::dialog::SpeakableString *this)
{
  return *((_QWORD *)this + 4) == 0;
}

BOOL morphun::dialog::SpeakableString::isEmpty(morphun::dialog::SpeakableString *this)
{
  uint64_t v2;
  uint64_t v3;

  if (*((char *)this + 31) < 0)
  {
    if (*((_QWORD *)this + 2))
      return 0;
  }
  else if (*((_BYTE *)this + 31))
  {
    return 0;
  }
  v2 = *((_QWORD *)this + 4);
  if (!v2)
    return 1;
  if (*(char *)(v2 + 23) < 0)
    v3 = *(_QWORD *)(v2 + 8);
  else
    v3 = *(unsigned __int8 *)(v2 + 23);
  return v3 == 0;
}

BOOL morphun::dialog::SpeakableString::contains(uint64_t a1, unsigned __int16 *a2)
{
  uint64_t v3;
  char v4;
  unsigned __int16 *v5;
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  unsigned __int16 *v9;
  unsigned __int16 *v10;
  char *v11;
  uint64_t v14;
  uint64_t v15;

  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 32))(a1);
  v4 = *(_BYTE *)(v3 + 23);
  if (v4 >= 0)
    v5 = (unsigned __int16 *)v3;
  else
    v5 = *(unsigned __int16 **)v3;
  v6 = *((unsigned __int8 *)a2 + 23);
  if ((v6 & 0x80u) == 0)
    v7 = a2;
  else
    v7 = *(unsigned __int16 **)a2;
  if ((v6 & 0x80u) != 0)
    v6 = *((_QWORD *)a2 + 1);
  if (!v6)
    return 1;
  if (v4 >= 0)
    v8 = *(unsigned __int8 *)(v3 + 23);
  else
    v8 = *(_QWORD *)(v3 + 8);
  v9 = &v5[v8];
  if (v8 >= v6)
  {
    v10 = v5;
    do
    {
      if (v8 - v6 == -1)
        break;
      v14 = v8 + 1;
      while (*v10 != *v7)
      {
        ++v10;
        if (v6 == --v14)
          goto LABEL_14;
      }
      v15 = 0;
      while (v7[v15] == v10[v15])
      {
        if (v6 == ++v15)
          goto LABEL_15;
      }
      ++v10;
      v8 = v9 - v10;
    }
    while (v8 >= v6);
  }
LABEL_14:
  v10 = v9;
LABEL_15:
  v11 = (char *)((char *)v10 - (char *)v5);
  return v10 != v9 && v11 + 2 != 0;
}

morphun::dialog::SpeakableString *morphun::dialog::SpeakableString::SpeakableString(morphun::dialog::SpeakableString *this, const morphun::dialog::SpeakableString *a2)
{
  __int128 v4;
  std::basic_string<char16_t> *v5;
  uint64_t v6;
  __int128 v7;

  *(_QWORD *)this = &off_1E866AD28;
  if (*((char *)a2 + 31) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)((char *)this + 8), *((const std::basic_string<char16_t>::value_type **)a2 + 1), *((_QWORD *)a2 + 2));
  }
  else
  {
    v4 = *(_OWORD *)((char *)a2 + 8);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *(_OWORD *)((char *)this + 8) = v4;
  }
  *((_QWORD *)this + 4) = 0;
  if (((*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(_QWORD *)a2 + 48))(a2) & 1) == 0)
  {
    v5 = (std::basic_string<char16_t> *)operator new();
    v6 = npc<std::basic_string<char16_t>>(*((_QWORD *)a2 + 4));
    if (*(char *)(v6 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(v5, *(const std::basic_string<char16_t>::value_type **)v6, *(_QWORD *)(v6 + 8));
    }
    else
    {
      v7 = *(_OWORD *)v6;
      v5->__r_.__value_.__r.__words[2] = *(_QWORD *)(v6 + 16);
      *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v7;
    }
    *((_QWORD *)this + 4) = v5;
  }
  return this;
}

void sub_1CB4FD640(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  MEMORY[0x1D179D2EC](v3, 0x1012C40EC159624);
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(a1);
}

void sub_1CB4FD6C0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::dialog::SpeakableString::~SpeakableString(morphun::dialog::SpeakableString *this, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  void **v5;

  v3 = *a2;
  *(_QWORD *)this = *a2;
  *(_QWORD *)((char *)this + *(_QWORD *)(v3 - 56)) = a2[1];
  *(_QWORD *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 40)) = a2[2];
  v4 = *((_QWORD *)this + 4);
  v5 = (void **)((char *)this + 8);
  if (v4 && (void **)v4 != v5)
  {
    if (*(char *)(v4 + 23) < 0)
      operator delete(*(void **)v4);
    MEMORY[0x1D179D2EC](v4, 0x1012C40EC159624);
  }
  if (*((char *)this + 31) < 0)
    operator delete(*v5);
}

uint64_t *morphun::dialog::SpeakableString::SpeakableString(uint64_t *a1, uint64_t *a2, __int128 *a3)
{
  uint64_t v4;
  std::basic_string<char16_t> *v5;
  __int128 v6;

  v4 = *a2;
  *a1 = *a2;
  *(uint64_t *)((char *)a1 + *(_QWORD *)(v4 - 56)) = a2[1];
  *(uint64_t *)((char *)a1 + *(_QWORD *)(*a1 - 40)) = a2[2];
  v5 = (std::basic_string<char16_t> *)(a1 + 1);
  if (*((char *)a3 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v5, *(const std::basic_string<char16_t>::value_type **)a3, *((_QWORD *)a3 + 1));
  }
  else
  {
    v6 = *a3;
    v5->__r_.__value_.__r.__words[2] = *((_QWORD *)a3 + 2);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  a1[4] = 0;
  return a1;
}

_QWORD *morphun::dialog::SpeakableString::SpeakableString(_QWORD *a1, __int128 *a2)
{
  std::basic_string<char16_t> *v3;
  __int128 v4;

  *a1 = &off_1E866AD28;
  v3 = (std::basic_string<char16_t> *)(a1 + 1);
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v3, *(const std::basic_string<char16_t>::value_type **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v4 = *a2;
    v3->__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)&v3->__r_.__value_.__l.__data_ = v4;
  }
  a1[4] = 0;
  return a1;
}

uint64_t morphun::dialog::SpeakableString::SpeakableString(uint64_t a1, uint64_t *a2, __int128 *a3, uint64_t a4)
{
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  const std::basic_string<char16_t>::value_type *v13;
  const std::basic_string<char16_t>::value_type *v14;
  std::basic_string<char16_t> *v15;
  std::basic_string<char16_t> *v16;

  v7 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + *(_QWORD *)(v7 - 56)) = a2[1];
  *(_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 - 40)) = a2[2];
  if (*((char *)a3 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)a3, *((_QWORD *)a3 + 1));
  }
  else
  {
    v8 = *a3;
    *(_QWORD *)(a1 + 24) = *((_QWORD *)a3 + 2);
    *(_OWORD *)(a1 + 8) = v8;
  }
  *(_QWORD *)(a1 + 32) = 0;
  v9 = *((unsigned __int8 *)a3 + 23);
  v10 = (char)v9;
  if ((v9 & 0x80u) != 0)
    v9 = *((_QWORD *)a3 + 1);
  v11 = *(unsigned __int8 *)(a4 + 23);
  v12 = (char)v11;
  if ((v11 & 0x80u) != 0)
    v11 = *(_QWORD *)(a4 + 8);
  if (v9 == v11)
  {
    if (!v9)
      return a1;
    if (v12 >= 0)
      v13 = (const std::basic_string<char16_t>::value_type *)a4;
    else
      v13 = *(const std::basic_string<char16_t>::value_type **)a4;
    if (v10 >= 0)
      v14 = (const std::basic_string<char16_t>::value_type *)a3;
    else
      v14 = *(const std::basic_string<char16_t>::value_type **)a3;
    while (*(unsigned __int16 *)v13 == *(unsigned __int16 *)v14)
    {
      ++v14;
      ++v13;
      if (!--v9)
        return a1;
    }
  }
  v15 = (std::basic_string<char16_t> *)operator new();
  v16 = v15;
  if (*(char *)(a4 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v15, *(const std::basic_string<char16_t>::value_type **)a4, *(_QWORD *)(a4 + 8));
  }
  else
  {
    *(_OWORD *)&v15->__r_.__value_.__l.__data_ = *(_OWORD *)a4;
    v15->__r_.__value_.__r.__words[2] = *(_QWORD *)(a4 + 16);
  }
  *(_QWORD *)(a1 + 32) = v16;
  return a1;
}

void sub_1CB4FD970(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  MEMORY[0x1D179D2EC](v3, 0x1012C40EC159624);
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::SpeakableString::SpeakableString(uint64_t a1, __int128 *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  const std::basic_string<char16_t>::value_type *v11;
  const std::basic_string<char16_t>::value_type *v12;
  std::basic_string<char16_t> *v13;
  std::basic_string<char16_t> *v14;

  *(_QWORD *)a1 = &off_1E866AD28;
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v6 = *a2;
    *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 2);
    *(_OWORD *)(a1 + 8) = v6;
  }
  *(_QWORD *)(a1 + 32) = 0;
  v7 = *((unsigned __int8 *)a2 + 23);
  v8 = (char)v7;
  if ((v7 & 0x80u) != 0)
    v7 = *((_QWORD *)a2 + 1);
  v9 = *(unsigned __int8 *)(a3 + 23);
  v10 = (char)v9;
  if ((v9 & 0x80u) != 0)
    v9 = *(_QWORD *)(a3 + 8);
  if (v7 == v9)
  {
    if (!v7)
      return a1;
    if (v10 >= 0)
      v11 = (const std::basic_string<char16_t>::value_type *)a3;
    else
      v11 = *(const std::basic_string<char16_t>::value_type **)a3;
    if (v8 >= 0)
      v12 = (const std::basic_string<char16_t>::value_type *)a2;
    else
      v12 = *(const std::basic_string<char16_t>::value_type **)a2;
    while (*(unsigned __int16 *)v11 == *(unsigned __int16 *)v12)
    {
      ++v12;
      ++v11;
      if (!--v7)
        return a1;
    }
  }
  v13 = (std::basic_string<char16_t> *)operator new();
  v14 = v13;
  if (*(char *)(a3 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v13, *(const std::basic_string<char16_t>::value_type **)a3, *(_QWORD *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)&v13->__r_.__value_.__l.__data_ = *(_OWORD *)a3;
    v13->__r_.__value_.__r.__words[2] = *(_QWORD *)(a3 + 16);
  }
  *(_QWORD *)(a1 + 32) = v14;
  return a1;
}

void sub_1CB4FDAD0(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  MEMORY[0x1D179D2EC](v3, 0x1012C40EC159624);
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(a1);
}

morphun::dialog::SpeakableString *morphun::dialog::SpeakableString::SpeakableString(morphun::dialog::SpeakableString *this, const morphun::dialog::SpeakableString *a2, uint64_t a3)
{
  uint64_t v5;
  __int128 v6;
  std::basic_string<char16_t> *v7;
  uint64_t v8;
  __int128 v9;

  v5 = *(_QWORD *)a2;
  *(_QWORD *)this = *(_QWORD *)a2;
  *(_QWORD *)((char *)this + *(_QWORD *)(v5 - 56)) = *((_QWORD *)a2 + 1);
  *(_QWORD *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 40)) = *((_QWORD *)a2 + 2);
  if (*(char *)(a3 + 31) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)((char *)this + 8), *(const std::basic_string<char16_t>::value_type **)(a3 + 8), *(_QWORD *)(a3 + 16));
  }
  else
  {
    v6 = *(_OWORD *)(a3 + 8);
    *((_QWORD *)this + 3) = *(_QWORD *)(a3 + 24);
    *(_OWORD *)((char *)this + 8) = v6;
  }
  *((_QWORD *)this + 4) = 0;
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a3 + 48))(a3) & 1) == 0)
  {
    v7 = (std::basic_string<char16_t> *)operator new();
    v8 = npc<std::basic_string<char16_t>>(*(_QWORD *)(a3 + 32));
    if (*(char *)(v8 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(v7, *(const std::basic_string<char16_t>::value_type **)v8, *(_QWORD *)(v8 + 8));
    }
    else
    {
      v9 = *(_OWORD *)v8;
      v7->__r_.__value_.__r.__words[2] = *(_QWORD *)(v8 + 16);
      *(_OWORD *)&v7->__r_.__value_.__l.__data_ = v9;
    }
    *((_QWORD *)this + 4) = v7;
  }
  return this;
}

void sub_1CB4FDBF4(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  MEMORY[0x1D179D2EC](v3, 0x1012C40EC159624);
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(a1);
}

void `virtual thunk to'morphun::dialog::SpeakableString::~SpeakableString(morphun::dialog::SpeakableString *this)
{
}

{
  JUMPOUT(0x1D179D2ECLL);
}

void `virtual thunk to'morphun::dialog::SpeakableString::toString(morphun::dialog::SpeakableString *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  morphun::dialog::SpeakableString::toString((morphun::dialog::SpeakableString *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 24)), a2);
}

BOOL morphun::dialog::SpeakableString::operator==(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  unsigned __int16 *v6;
  unsigned __int16 *v7;
  unint64_t v8;
  unint64_t v9;
  _BOOL8 result;
  BOOL v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  int v20;
  BOOL v22;

  if (a1 == a2)
    return 1;
  v2 = *(unsigned __int8 *)(a1 + 31);
  v3 = (char)v2;
  if ((v2 & 0x80u) != 0)
    v2 = *(_QWORD *)(a1 + 16);
  v4 = *(unsigned __int8 *)(a2 + 31);
  v5 = (char)v4;
  if ((v4 & 0x80u) != 0)
    v4 = *(_QWORD *)(a2 + 16);
  if (v2 != v4)
    return 0;
  if (v2)
  {
    if (v5 >= 0)
      v6 = (unsigned __int16 *)(a2 + 8);
    else
      v6 = *(unsigned __int16 **)(a2 + 8);
    if (v3 >= 0)
      v7 = (unsigned __int16 *)(a1 + 8);
    else
      v7 = *(unsigned __int16 **)(a1 + 8);
    while (*v6 == *v7)
    {
      ++v7;
      ++v6;
      if (!--v2)
        goto LABEL_16;
    }
    return 0;
  }
LABEL_16:
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a2 + 32);
  result = (v8 | v9) == 0;
  if (v8)
    v11 = v9 == 0;
  else
    v11 = 1;
  if (!v11)
  {
    v12 = *(unsigned __int8 *)(v8 + 23);
    v13 = (char)v12;
    if ((v12 & 0x80u) != 0)
      v12 = *(_QWORD *)(v8 + 8);
    v14 = *(unsigned __int8 *)(v9 + 23);
    v15 = (char)v14;
    if ((v14 & 0x80u) != 0)
      v14 = *(_QWORD *)(v9 + 8);
    if (v12 == v14)
    {
      if (v12)
      {
        if (v15 < 0)
          v9 = *(_QWORD *)v9;
        if (v13 < 0)
          v8 = *(_QWORD *)v8;
        v16 = v12 - 1;
        do
        {
          v18 = *(unsigned __int16 *)v8;
          v8 += 2;
          v17 = v18;
          v20 = *(unsigned __int16 *)v9;
          v9 += 2;
          v19 = v20;
          v22 = v16-- != 0;
          result = v19 == v17;
        }
        while (v19 == v17 && v22);
        return result;
      }
      return 1;
    }
    return 0;
  }
  return result;
}

BOOL morphun::dialog::SpeakableString::operator!=(uint64_t a1, uint64_t a2)
{
  return !morphun::dialog::SpeakableString::operator==(a1, a2);
}

void morphun::dialog::SpeakableString::operator+(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  const std::basic_string<char16_t>::value_type *v6;
  int v7;
  const std::basic_string<char16_t>::value_type *v8;
  std::basic_string<char16_t>::size_type v9;
  uint64_t v10;
  std::basic_string<char16_t> *v11;
  int v12;
  const std::basic_string<char16_t>::value_type *v13;
  std::basic_string<char16_t>::size_type v14;
  int v15;
  uint64_t v16;
  int v17;
  const std::basic_string<char16_t>::value_type *v18;
  std::basic_string<char16_t>::size_type v19;
  int v20;
  std::basic_string<char16_t> v21;
  std::basic_string<char16_t> v22;

  v6 = (const std::basic_string<char16_t>::value_type *)(a1 + 8);
  if (*(char *)(a1 + 31) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v22, *(const std::basic_string<char16_t>::value_type **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)&v22.__r_.__value_.__l.__data_ = *(_OWORD *)v6;
    v22.__r_.__value_.__r.__words[2] = *(_QWORD *)(a1 + 24);
  }
  v7 = *(char *)(a2 + 31);
  if (v7 >= 0)
    v8 = (const std::basic_string<char16_t>::value_type *)(a2 + 8);
  else
    v8 = *(const std::basic_string<char16_t>::value_type **)(a2 + 8);
  if (v7 >= 0)
    v9 = *(unsigned __int8 *)(a2 + 31);
  else
    v9 = *(_QWORD *)(a2 + 16);
  std::basic_string<char16_t>::append(&v22, v8, v9);
  v10 = *(_QWORD *)(a1 + 32);
  if (v10 | *(_QWORD *)(a2 + 32))
  {
    memset(&v21, 0, sizeof(v21));
    if (v10)
    {
      v12 = *(char *)(v10 + 23);
      if (v12 >= 0)
        v13 = (const std::basic_string<char16_t>::value_type *)v10;
      else
        v13 = *(const std::basic_string<char16_t>::value_type **)v10;
      if (v12 >= 0)
        v14 = *(unsigned __int8 *)(v10 + 23);
      else
        v14 = *(_QWORD *)(v10 + 8);
    }
    else
    {
      v15 = *(char *)(a1 + 31);
      if (v15 >= 0)
        v13 = v6;
      else
        v13 = *(const std::basic_string<char16_t>::value_type **)(a1 + 8);
      if (v15 >= 0)
        v14 = *(unsigned __int8 *)(a1 + 31);
      else
        v14 = *(_QWORD *)(a1 + 16);
    }
    std::basic_string<char16_t>::append(&v21, v13, v14);
    v16 = *(_QWORD *)(a2 + 32);
    if (v16)
    {
      v17 = *(char *)(v16 + 23);
      if (v17 >= 0)
        v18 = *(const std::basic_string<char16_t>::value_type **)(a2 + 32);
      else
        v18 = *(const std::basic_string<char16_t>::value_type **)v16;
      if (v17 >= 0)
        v19 = *(unsigned __int8 *)(v16 + 23);
      else
        v19 = *(_QWORD *)(v16 + 8);
    }
    else
    {
      v20 = *(char *)(a2 + 31);
      if (v20 >= 0)
        v18 = (const std::basic_string<char16_t>::value_type *)(a2 + 8);
      else
        v18 = *(const std::basic_string<char16_t>::value_type **)(a2 + 8);
      if (v20 >= 0)
        v19 = *(unsigned __int8 *)(a2 + 31);
      else
        v19 = *(_QWORD *)(a2 + 16);
    }
    std::basic_string<char16_t>::append(&v21, v18, v19);
    morphun::dialog::SpeakableString::SpeakableString((uint64_t)a3, (__int128 *)&v22, (uint64_t)&v21);
    if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v21.__r_.__value_.__l.__data_);
  }
  else
  {
    *a3 = &off_1E866AD28;
    v11 = (std::basic_string<char16_t> *)(a3 + 1);
    if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(v11, v22.__r_.__value_.__l.__data_, v22.__r_.__value_.__l.__size_);
    }
    else
    {
      *(_OWORD *)&v11->__r_.__value_.__l.__data_ = *(_OWORD *)&v22.__r_.__value_.__l.__data_;
      a3[3] = *((_QWORD *)&v22.__r_.__value_.__l + 2);
    }
    a3[4] = 0;
  }
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v22.__r_.__value_.__l.__data_);
}

void sub_1CB4FDF60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t morphun::dialog::SpeakableString::operator=(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::basic_string<char16_t> *v5;
  uint64_t v6;
  __int128 v7;

  std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)(a1 + 8), (const std::basic_string<char16_t> *)(a2 + 8));
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    if (*(char *)(v4 + 23) < 0)
      operator delete(*(void **)v4);
    MEMORY[0x1D179D2EC](v4, 0x1012C40EC159624);
    *(_QWORD *)(a1 + 32) = 0;
  }
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 48))(a2) & 1) == 0)
  {
    v5 = (std::basic_string<char16_t> *)operator new();
    v6 = npc<std::basic_string<char16_t>>(*(_QWORD *)(a2 + 32));
    if (*(char *)(v6 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(v5, *(const std::basic_string<char16_t>::value_type **)v6, *(_QWORD *)(v6 + 8));
    }
    else
    {
      v7 = *(_OWORD *)v6;
      v5->__r_.__value_.__r.__words[2] = *(_QWORD *)(v6 + 16);
      *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v7;
    }
    *(_QWORD *)(a1 + 32) = v5;
  }
  return a1;
}

void sub_1CB4FE068(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::SpeakableString::operator+=(uint64_t a1, uint64_t a2)
{
  _QWORD v4[5];

  morphun::dialog::SpeakableString::operator+(a1, a2, v4);
  morphun::dialog::SpeakableString::operator=(a1, (uint64_t)v4);
  return a1;
}

void sub_1CB4FE0D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  _Unwind_Resume(a1);
}

morphun::dialog::SpeakableString *`virtual thunk to'morphun::dialog::SpeakableString::toSpeakableString(morphun::dialog::SpeakableString *this)
{
  return morphun::dialog::SpeakableString::toSpeakableString((morphun::dialog::SpeakableString *)((char *)this
                                                                                                + *(_QWORD *)(*(_QWORD *)this - 48)));
}

void morphun::util::lemmatization::FeedForwardInflectionAnalyzer_InflectionLikelihoods::~FeedForwardInflectionAnalyzer_InflectionLikelihoods(morphun::util::lemmatization::FeedForwardInflectionAnalyzer_InflectionLikelihoods *this)
{
}

{
  JUMPOUT(0x1D179D2ECLL);
}

void morphun::util::lemmatization::FeedForwardInflectionAnalyzer_InflectionLikelihoods::~FeedForwardInflectionAnalyzer_InflectionLikelihoods(morphun::util::lemmatization::FeedForwardInflectionAnalyzer_InflectionLikelihoods *this, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)this = *a2;
  *(_QWORD *)((char *)this + *(_QWORD *)(v3 - 40)) = a2[1];
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 5));
  if (*((char *)this + 31) < 0)
    operator delete(*((void **)this + 1));
}

uint64_t morphun::util::lemmatization::FeedForwardInflectionAnalyzer_InflectionLikelihoods::FeedForwardInflectionAnalyzer_InflectionLikelihoods(uint64_t a1, uint64_t *a2, __int128 *a3, _QWORD *a4, uint64_t a5)
{
  uint64_t v8;
  __int128 v9;

  v8 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + *(_QWORD *)(v8 - 40)) = a2[1];
  if (*((char *)a3 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)a3, *((_QWORD *)a3 + 1));
  }
  else
  {
    v9 = *a3;
    *(_QWORD *)(a1 + 24) = *((_QWORD *)a3 + 2);
    *(_OWORD *)(a1 + 8) = v9;
  }
  std::map<std::basic_string<char16_t>,double>::map[abi:ne180100](a1 + 32, a4);
  *(_QWORD *)(a1 + 56) = a5;
  return a1;
}

void sub_1CB4FE208(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

uint64_t std::map<std::basic_string<char16_t>,double>::map[abi:ne180100](uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t **v11;
  uint64_t *v12;
  std::basic_string<char16_t> *v13;
  __int128 v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v18;

  *(_QWORD *)(a1 + 8) = 0;
  v3 = a1 + 8;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = a1 + 8;
  v4 = a2 + 1;
  v5 = (_QWORD *)*a2;
  if ((_QWORD *)*a2 != a2 + 1)
  {
    do
    {
      v6 = *(_QWORD *)(a1 + 8);
      v7 = v3;
      if (*(_QWORD *)a1 == v3)
        goto LABEL_8;
      v8 = *(_QWORD *)(a1 + 8);
      v9 = v3;
      if (v6)
      {
        do
        {
          v7 = v8;
          v8 = *(_QWORD *)(v8 + 8);
        }
        while (v8);
      }
      else
      {
        do
        {
          v7 = *(_QWORD *)(v9 + 16);
          v10 = *(_QWORD *)v7 == v9;
          v9 = v7;
        }
        while (v10);
      }
      if (std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v7 + 32), (unsigned __int16 *)v5 + 16))
      {
LABEL_8:
        if (!v6)
        {
          v18 = v3;
          v11 = (uint64_t **)v3;
LABEL_14:
          v12 = (uint64_t *)operator new(0x40uLL);
          v13 = (std::basic_string<char16_t> *)(v12 + 4);
          if (*((char *)v5 + 55) < 0)
          {
            std::basic_string<char16_t>::__init_copy_ctor_external(v13, (const std::basic_string<char16_t>::value_type *)v5[4], v5[5]);
          }
          else
          {
            v14 = *((_OWORD *)v5 + 2);
            v12[6] = v5[6];
            *(_OWORD *)&v13->__r_.__value_.__l.__data_ = v14;
          }
          v12[7] = v5[7];
          std::__tree<std::u16string_view>::__insert_node_at((uint64_t **)a1, v18, v11, v12);
          goto LABEL_18;
        }
        v18 = v7;
        v11 = (uint64_t **)(v7 + 8);
      }
      else
      {
        v11 = (uint64_t **)std::__tree<std::basic_string<char16_t>>::__find_equal<std::basic_string<char16_t>>(a1, &v18, (unsigned __int16 *)v5 + 16);
      }
      if (!*v11)
        goto LABEL_14;
LABEL_18:
      v15 = (_QWORD *)v5[1];
      if (v15)
      {
        do
        {
          v16 = v15;
          v15 = (_QWORD *)*v15;
        }
        while (v15);
      }
      else
      {
        do
        {
          v16 = (_QWORD *)v5[2];
          v10 = *v16 == (_QWORD)v5;
          v5 = v16;
        }
        while (!v10);
      }
      v5 = v16;
    }
    while (v16 != v4);
  }
  return a1;
}

void sub_1CB4FE398(_Unwind_Exception *a1)
{
  void **v1;
  char **v2;

  std::__tree_node_destructor<std::allocator<std::__tree_node<std::basic_string<char16_t>,void *>>>::operator()[abi:ne180100](0, v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::lemmatization::FeedForwardInflectionAnalyzer_InflectionLikelihoods::FeedForwardInflectionAnalyzer_InflectionLikelihoods(uint64_t a1, __int128 *a2, _QWORD *a3, uint64_t a4)
{
  __int128 v7;

  *(_QWORD *)a1 = &off_1E866A758;
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v7 = *a2;
    *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 2);
    *(_OWORD *)(a1 + 8) = v7;
  }
  std::map<std::basic_string<char16_t>,double>::map[abi:ne180100](a1 + 32, a3);
  *(_QWORD *)(a1 + 56) = a4;
  return a1;
}

void sub_1CB4FE43C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void `virtual thunk to'morphun::util::lemmatization::FeedForwardInflectionAnalyzer_InflectionLikelihoods::~FeedForwardInflectionAnalyzer_InflectionLikelihoods(morphun::util::lemmatization::FeedForwardInflectionAnalyzer_InflectionLikelihoods *this)
{
}

{
  JUMPOUT(0x1D179D2ECLL);
}

double morphun::util::lemmatization::FeedForwardInflectionAnalyzer_InflectionLikelihoods::getLikelihood(uint64_t a1, unsigned __int16 *a2)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v6;
  _BOOL4 v7;
  uint64_t *v8;

  v2 = a1 + 40;
  v3 = *(_QWORD *)(a1 + 40);
  v4 = 0.0;
  if (v3)
  {
    v6 = a1 + 40;
    do
    {
      v7 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v3 + 32), a2);
      v8 = (uint64_t *)(v3 + 8);
      if (!v7)
      {
        v8 = (uint64_t *)v3;
        v6 = v3;
      }
      v3 = *v8;
    }
    while (*v8);
    if (v6 != v2
      && !std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a2, (unsigned __int16 *)(v6 + 32)))
    {
      return *(double *)(v6 + 56);
    }
  }
  return v4;
}

uint64_t morphun::util::lemmatization::FeedForwardInflectionAnalyzer_InflectionLikelihoods::getMostLikelyInflection(morphun::util::lemmatization::FeedForwardInflectionAnalyzer_InflectionLikelihoods *this)
{
  return (uint64_t)this + 8;
}

void morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveNounInflectionPattern::~NlGrammarSynthesizer_NlAdjectiveNounInflectionPattern(morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveNounInflectionPattern *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E866FE20;
  *((_QWORD *)this + 29) = &unk_1E866FEA8;
  v2 = *((_QWORD *)this + 7);
  *((_QWORD *)this + 7) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
}

{
  uint64_t v2;

  *(_QWORD *)this = &off_1E866FE20;
  *((_QWORD *)this + 29) = &unk_1E866FEA8;
  v2 = *((_QWORD *)this + 7);
  *((_QWORD *)this + 7) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveNounInflectionPattern::isSupported(uint64_t *a1, const void **a2, uint64_t a3)
{
  uint64_t v6;
  const morphun::TokenChain *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  const void **v11;
  uint64_t v12;
  void *__p[2];
  char v15;
  uint64_t v16;
  uint64_t v17;

  v6 = npc<morphun::Tokenizer>(a1[7]);
  v7 = (const morphun::TokenChain *)(*(uint64_t (**)(uint64_t, const void **))(*(_QWORD *)v6 + 24))(v6, a2);
  npc<morphun::TokenChain>((uint64_t)v7);
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getSignificantWords((morphun::grammar::synthesis::GrammarSynthesizerUtil *)&v16, v7);
  if (v16 == v17)
  {
LABEL_12:
    v12 = 0;
    goto LABEL_13;
  }
  if (!morphun::grammar::synthesis::NlGrammarSynthesizer_NlNounInflectionPattern::isSupported(a1 + 19, (const void **)(v17 - 24), a3))
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "l");
    morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern::logUnsupportedInflection(a2, (uint64_t)__p);
LABEL_10:
    if (v15 < 0)
      operator delete(__p[0]);
    goto LABEL_12;
  }
  v8 = -1431655765 * ((unint64_t)(v17 - v16) >> 3) - 1;
  if (v8 >= 1)
  {
    v9 = 0;
    v10 = 24 * v8;
    while (1)
    {
      v11 = (const void **)(v16 + v9);
      if (((*(uint64_t (**)(uint64_t *, uint64_t))(*a1 + 40))(a1, v16 + v9) & 1) == 0)
        break;
      v9 += 24;
      if (v10 == v9)
        goto LABEL_7;
    }
    std::operator+<char16_t>((uint64_t)__p, "o", v11);
    morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern::logUnsupportedInflection(a2, (uint64_t)__p);
    goto LABEL_10;
  }
LABEL_7:
  v12 = 1;
LABEL_13:
  __p[0] = &v16;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
  (*(void (**)(const morphun::TokenChain *))(*(_QWORD *)v7 + 16))(v7);
  return v12;
}

void sub_1CB4FE740(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  uint64_t v15;

  if (a14 < 0)
    operator delete(__p);
  __p = &a15;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 16))(v15);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveNounInflectionPattern::inflect@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, std::basic_string<char16_t> *a4@<X8>)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = (*(uint64_t (**)(uint64_t *))(*a1 + 24))(a1);
  if ((result & 1) != 0)
  {
    v9 = npc<morphun::Tokenizer>(a1[7]);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v9 + 24))(v9, a2);
    npc<morphun::TokenChain>(v10);
    morphun::grammar::synthesis::GrammarSynthesizerUtil::inflectSignificantWords(a4, a3, v10, (uint64_t)a1 + *(_QWORD *)(*a1 - 72));
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 16))(v10);
  }
  else
  {
    a4->__r_.__value_.__r.__words[0] = 0;
    a4->__r_.__value_.__l.__size_ = 0;
    a4->__r_.__value_.__r.__words[2] = 0;
  }
  return result;
}

void sub_1CB4FE840(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 16))(v1);
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveNounInflectionPattern::inflectSignificantTokens(uint64_t *a1@<X0>, uint64_t a2@<X1>, __int128 **a3@<X2>, _QWORD *a4@<X3>, std::basic_string<char16_t> *a5@<X8>)
{
  unint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  int Count;
  std::basic_string<char16_t> *v16;
  std::basic_string<char16_t>::size_type size;
  morphun::grammar::synthesis::GrammemeConstants *CombinedBinaryType;
  std::basic_string<char16_t>::size_type v19;
  uint64_t v20;
  __int128 v21;
  int Gender;
  _BOOL4 v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  std::basic_string<char16_t>::size_type v30;
  std::basic_string<char16_t> __str;
  std::basic_string<char16_t> v32;
  std::basic_string<char16_t> __p;
  std::basic_string<char16_t> v34;

  v10 = *(int *)(a4[1] - 4);
  v11 = (uint64_t)*a3 + 24 * (int)v10;
  if (*(char *)(v11 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v34, *(const std::basic_string<char16_t>::value_type **)v11, *(_QWORD *)(v11 + 8));
  }
  else
  {
    v12 = *(_OWORD *)v11;
    v34.__r_.__value_.__r.__words[2] = *(_QWORD *)(v11 + 16);
    *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v12;
  }
  morphun::grammar::synthesis::NlGrammarSynthesizer_NlNounInflectionPattern::inflect(a1 + 19, (uint64_t)&v34, a2, (uint64_t)&__p);
  if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) <= v10)
    std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
  v13 = (uint64_t)*a3 + 24 * (int)v10;
  if (*(char *)(v13 + 23) < 0)
    operator delete(*(void **)v13);
  *(std::basic_string<char16_t> *)v13 = __p;
  v14 = (uint64_t)*a3 + 24 * (int)v10;
  if ((*(char *)(v14 + 23) & 0x80000000) == 0)
  {
    if (*(_BYTE *)(v14 + 23))
      goto LABEL_9;
LABEL_19:
    a5->__r_.__value_.__r.__words[0] = 0;
    a5->__r_.__value_.__l.__size_ = 0;
    a5->__r_.__value_.__r.__words[2] = 0;
    goto LABEL_55;
  }
  if (!*(_QWORD *)(v14 + 8))
    goto LABEL_19;
LABEL_9:
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__p, a2, a1[21]);
  Count = morphun::grammar::synthesis::NlGrammarSynthesizer::getCount((unsigned __int16 *)&__p);
  __str.__r_.__value_.__r.__words[0] = 0;
  if ((v34.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v16 = &v34;
  else
    v16 = (std::basic_string<char16_t> *)v34.__r_.__value_.__r.__words[0];
  if ((v34.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v34.__r_.__value_.__r.__words[2]);
  else
    size = v34.__r_.__value_.__l.__size_;
  CombinedBinaryType = (morphun::grammar::synthesis::GrammemeConstants *)morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1[4], (uint64_t)&__str, (const UChar *)v16, size);
  if (CombinedBinaryType)
  {
    v19 = a1[11] & __str.__r_.__value_.__r.__words[0];
    if (v19 == a1[8])
    {
      v20 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE(CombinedBinaryType);
      goto LABEL_24;
    }
    if (v19 == a1[9])
    {
      v20 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(CombinedBinaryType);
      goto LABEL_24;
    }
    if (v19 == a1[10])
    {
      v20 = morphun::grammar::synthesis::GrammemeConstants::GENDER_NEUTER(CombinedBinaryType);
LABEL_24:
      if (*(char *)(v20 + 23) < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external(&v32, *(const std::basic_string<char16_t>::value_type **)v20, *(_QWORD *)(v20 + 8));
      }
      else
      {
        v21 = *(_OWORD *)v20;
        v32.__r_.__value_.__r.__words[2] = *(_QWORD *)(v20 + 16);
        *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v21;
      }
      goto LABEL_28;
    }
  }
  memset(&v32, 0, sizeof(v32));
LABEL_28:
  Gender = morphun::grammar::synthesis::NlGrammarSynthesizer::getGender((unsigned __int16 *)&v32);
  if (Count == 1)
  {
    if (Gender == 3)
      v24 = 2;
    else
      v24 = 1;
    if (Gender)
      v23 = v24;
    else
      v23 = 0;
  }
  else
  {
    v23 = Count == 2;
  }
  if ((int)(((a4[1] - *a4) >> 2) - 1) >= 1)
  {
    v25 = 0;
    v26 = (uint64_t)(a1 + 12);
    v27 = 4 * (((a4[1] - *a4) >> 2) - 1);
    do
    {
      v28 = *(int *)(*a4 + v25);
      morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveInflectionPattern::inflectWithDeclension(v26, (uint64_t)*a3 + 24 * (int)v28, v23, &__str);
      v29 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v30 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      else
        v30 = __str.__r_.__value_.__l.__size_;
      if (v30)
      {
        if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) <= v28)
          std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
        std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)*a3 + (int)v28, &__str);
        if ((*((_BYTE *)&__str.__r_.__value_.__s + 23) & 0x80) == 0)
          goto LABEL_45;
      }
      else
      {
        a5->__r_.__value_.__r.__words[0] = 0;
        a5->__r_.__value_.__l.__size_ = 0;
        a5->__r_.__value_.__r.__words[2] = 0;
        if ((v29 & 0x80) == 0)
          goto LABEL_45;
      }
      operator delete(__str.__r_.__value_.__l.__data_);
LABEL_45:
      if (!v30)
        goto LABEL_51;
      v25 += 4;
    }
    while (v27 != v25);
  }
  a5->__r_.__value_.__r.__words[0] = 0;
  a5->__r_.__value_.__l.__size_ = 0;
  a5->__r_.__value_.__r.__words[2] = 0;
  std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(a5, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3));
LABEL_51:
  if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v32.__r_.__value_.__l.__data_);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
LABEL_55:
  if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v34.__r_.__value_.__l.__data_);
}

void sub_1CB4FEBA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (a21 < 0)
    operator delete(__p);
  if (a27 < 0)
    operator delete(a22);
  if (a33 < 0)
    operator delete(a28);
  _Unwind_Resume(exception_object);
}

void `virtual thunk to'morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveNounInflectionPattern::~NlGrammarSynthesizer_NlAdjectiveNounInflectionPattern(morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveNounInflectionPattern *this)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 32));
  *v1 = &off_1E866FE20;
  v1[29] = &unk_1E866FEA8;
  v2 = v1[7];
  v1[7] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
}

{
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 32));
  *v1 = &off_1E866FE20;
  v1[29] = &unk_1E866FEA8;
  v2 = v1[7];
  v1[7] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
  JUMPOUT(0x1D179D2ECLL);
}

void `virtual thunk to'morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveNounInflectionPattern::inflectSignificantTokens(_QWORD *a1@<X0>, uint64_t a2@<X1>, __int128 **a3@<X2>, _QWORD *a4@<X3>, std::basic_string<char16_t> *a5@<X8>)
{
  morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveNounInflectionPattern::inflectSignificantTokens((_QWORD *)((char *)a1 + *(_QWORD *)(*a1 - 48)), a2, a3, a4, a5);
}

void sub_1CB4FED20(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1CB4FED78(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::ar::ArabicNormalizationFilter::~ArabicNormalizationFilter(morphun::analysis::ar::ArabicNormalizationFilter *this)
{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1E86693D0);
}

{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1E86693D0);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::analysis::ar::ArabicNormalizationFilter::incrementToken(morphun::analysis::ar::ArabicNormalizationFilter *this)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  std::basic_string<char16_t> *v12;
  std::basic_string<char16_t>::size_type v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  morphun::exception::NullPointerException *exception;

  v2 = *((_QWORD *)this + 12);
  if (!v2)
    goto LABEL_35;
  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  if ((_DWORD)v3)
  {
    v4 = (_QWORD *)*((_QWORD *)this + 13);
    if (v4)
      v5 = (uint64_t)v4 + *(_QWORD *)(*v4 - 96);
    else
      v5 = 0;
    v6 = npc<std::basic_string<char16_t>>(v5);
    if (*(char *)(v6 + 23) < 0)
      v7 = *(_QWORD *)(v6 + 8);
    else
      LODWORD(v7) = *(unsigned __int8 *)(v6 + 23);
    if ((int)v7 >= 1)
    {
      v8 = 0;
      do
      {
        v9 = *(char *)(v6 + 23);
        v10 = v6;
        if (v9 < 0)
          v10 = *(_QWORD *)v6;
        v11 = *(unsigned __int16 *)(v10 + 2 * v8);
        if (v11 <= 1599)
        {
          if ((v11 - 1570) < 2 || v11 == 1573)
          {
            v15 = v6;
            if (v9 < 0)
              v15 = *(_QWORD *)v6;
            *(_WORD *)(v15 + 2 * v8) = 1575;
          }
          else if (v11 == 1577)
          {
            v14 = v6;
            if (v9 < 0)
              v14 = *(_QWORD *)v6;
            *(_WORD *)(v14 + 2 * v8) = 1607;
          }
        }
        else if ((v11 - 1611) < 8 || v11 == 1600)
        {
          v12 = (std::basic_string<char16_t> *)npc<std::basic_string<char16_t>>(v6);
          v6 = (uint64_t)std::basic_string<char16_t>::erase(v12, v8, v13);
          LODWORD(v7) = v7 - 1;
          --v8;
        }
        else if (v11 == 1609)
        {
          v16 = v6;
          if (v9 < 0)
            v16 = *(_QWORD *)v6;
          *(_WORD *)(v16 + 2 * v8) = 1610;
        }
        ++v8;
      }
      while (v8 < (int)v7);
    }
    v17 = (_QWORD *)*((_QWORD *)this + 13);
    if (v17)
    {
      std::basic_string<char16_t>::resize((std::basic_string<char16_t> *)((char *)v17 + *(_QWORD *)(*v17 - 96)), (int)v7, 0);
      return v3;
    }
LABEL_35:
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return v3;
}

void sub_1CB4FEF78(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1CB4FEFD4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::basic_string<char16_t> *__cdecl std::basic_string<char16_t>::erase(std::basic_string<char16_t> *this, std::basic_string<char16_t>::size_type __pos, std::basic_string<char16_t>::size_type __n)
{
  std::basic_string<char16_t>::size_type size;

  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
    size = this->__r_.__value_.__l.__size_;
  else
    size = HIBYTE(this->__r_.__value_.__r.__words[2]);
  if (size < __pos)
    std::basic_string<char16_t>::__throw_out_of_range[abi:ne180100]();
  std::basic_string<char16_t>::__erase_external_with_move(this, __pos, __n);
  return this;
}

void std::basic_string<char16_t>::__erase_external_with_move(std::basic_string<char16_t> *this, std::basic_string<char16_t>::size_type __pos, std::basic_string<char16_t>::size_type __n)
{
  int v4;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t> *v6;
  _BOOL8 v7;
  std::basic_string<char16_t>::size_type v8;

  v4 = SHIBYTE(this->__r_.__value_.__r.__words[2]);
  if (v4 < 0)
  {
    v6 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
    size = this->__r_.__value_.__l.__size_;
  }
  else
  {
    size = HIBYTE(this->__r_.__value_.__r.__words[2]);
    v6 = this;
  }
  v7 = size != __pos;
  if (size - __pos >= 2)
  {
    memmove((char *)v6 + 2 * __pos, (char *)v6 + 2 * __pos + 2 * v7, 2 * (size - __pos - v7));
    LOBYTE(v4) = *((_BYTE *)&this->__r_.__value_.__s + 23);
  }
  v8 = size - v7;
  if ((v4 & 0x80) != 0)
    this->__r_.__value_.__l.__size_ = v8;
  else
    *((_BYTE *)&this->__r_.__value_.__s + 23) = v8 & 0x7F;
  v6->__r_.__value_.__s.__data_[v8] = 0;
}

uint64_t marisa::grimoire::trie::Tail::build(__int128 *a1, uint64_t a2, uint64_t *a3, int a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _DWORD *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _DWORD *v20;
  uint64_t v21;
  size_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t i;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  uint64_t result;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *exception;
  const char *v43;
  _OWORD v44[3];
  _OWORD v45[4];
  __int128 v46;
  _BYTE v47[25];
  __int128 v48;
  _BYTE v49[25];
  __int128 v50;
  _BYTE v51[25];
  char v52;
  _QWORD v53[2];
  _OWORD v54[4];

  if (!a3)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    *exception = &off_1E8669F00;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/tail.cc";
    exception[2] = 0x20000000DLL;
    v43 = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/tail.cc:13: "
          "MARISA_NULL_ERROR: offsets == NULL";
    goto LABEL_70;
  }
  if (a4 == 4096)
  {
    v8 = *(_QWORD *)(a2 + 24);
    if (v8)
    {
      v9 = 0;
      v7 = 1;
      while (1)
      {
        v10 = *(_QWORD *)(a2 + 8) + 16 * v9;
        v11 = *(unsigned int *)(v10 + 8);
        if ((_DWORD)v11)
          break;
LABEL_11:
        if (++v9 == v8)
          goto LABEL_15;
      }
      v12 = -v11;
      v13 = *(_QWORD *)v10 + 1;
      while (*(_BYTE *)(v13 + v12))
      {
        if (!++v12)
          goto LABEL_11;
      }
      v7 = 0;
    }
    else
    {
      v7 = 1;
    }
    goto LABEL_15;
  }
  if (a4 != 0x2000)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    *exception = &off_1E8669F00;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/tail.cc";
    exception[2] = 0x500000024;
    v43 = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/tail.cc:36: "
          "MARISA_CODE_ERROR: undefined tail mode";
LABEL_70:
    exception[3] = v43;
  }
  v7 = 0;
  v8 = *(_QWORD *)(a2 + 24);
LABEL_15:
  memset(v44, 0, 41);
  memset(v45, 0, 41);
  v48 = 0u;
  memset(v49, 0, sizeof(v49));
  v50 = 0u;
  memset(v51, 0, sizeof(v51));
  v45[3] = 0u;
  v46 = 0u;
  memset(v47, 0, sizeof(v47));
  v14 = *(_QWORD *)(a2 + 8);
  if (v8)
  {
    v15 = 0;
    v16 = (_DWORD *)(v14 + 12);
    do
    {
      *v16 = v15;
      v16 += 4;
      ++v15;
    }
    while (v8 != v15);
  }
  marisa::grimoire::algorithm::details::sort<marisa::grimoire::trie::Entry *>(v14, v14 + 16 * v8, 0);
  memset(v54, 0, 41);
  v17 = *(_QWORD *)(a2 + 24);
  if (v17)
  {
    marisa::grimoire::vector::Vector<unsigned int>::realloc((uint64_t *)v54, *(_QWORD *)(a2 + 24));
    v18 = *((_QWORD *)&v54[1] + 1);
  }
  else
  {
    v18 = 0;
  }
  v19 = v17 - v18;
  if (v17 > v18)
  {
    v20 = (_DWORD *)(*((_QWORD *)&v54[0] + 1) + 4 * v18);
    do
    {
      *v20++ = 0;
      --v19;
    }
    while (v19);
  }
  *((_QWORD *)&v54[1] + 1) = v17;
  v53[0] = 0;
  v53[1] = 0;
  v21 = *(_QWORD *)(a2 + 24);
  if (!v21)
  {
    v22 = 0;
    goto LABEL_52;
  }
  v22 = 0;
  v23 = v53;
  v24 = *((_QWORD *)&v54[0] + 1);
  do
  {
    --v21;
    v25 = *(_QWORD *)(a2 + 8);
    v26 = v25 + 16 * v21;
    v28 = (unsigned int *)(v26 + 8);
    v27 = *(unsigned int *)(v26 + 8);
    if (!*(_DWORD *)(v26 + 8))
    {
      v40 = __cxa_allocate_exception(0x20uLL);
      *v40 = &off_1E8669F00;
      v40[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/tail.cc";
      v40[2] = 0x4000000AALL;
      v40[3] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/tail.cc"
               ":170: MARISA_RANGE_ERROR: current.length() == 0";
    }
    v29 = 0;
    v30 = *((unsigned int *)v23 + 2);
    while (v29 != v30)
    {
      if (*(unsigned __int8 *)(*v23 - v29) != *(unsigned __int8 *)(*(_QWORD *)v26 - v29))
        goto LABEL_33;
      if (++v29 == v27)
        goto LABEL_34;
    }
    v29 = *((unsigned int *)v23 + 2);
LABEL_33:
    if (v29 != v27)
      goto LABEL_36;
LABEL_34:
    if ((_DWORD)v30)
    {
      *(_DWORD *)(v24 + 4 * *(unsigned int *)(v25 + 16 * v21 + 12)) = v30
                                                                      - v27
                                                                      + *(_DWORD *)(v24
                                                                                  + 4 * *((unsigned int *)v23 + 3));
      goto LABEL_48;
    }
LABEL_36:
    *(_DWORD *)(v24 + 4 * *(unsigned int *)(v25 + 16 * v21 + 12)) = v22;
    v31 = *v28;
    if ((_DWORD)v31)
    {
      for (i = 0; i < v31; ++i)
      {
        v52 = *(_BYTE *)(*(_QWORD *)v26 - v31 + i + 1);
        marisa::grimoire::vector::Vector<char>::push_back((uint64_t *)v44, &v52);
        v31 = *v28;
      }
      if ((v7 & 1) != 0)
      {
LABEL_45:
        v52 = 0;
        marisa::grimoire::vector::Vector<char>::push_back((uint64_t *)v44, &v52);
        goto LABEL_47;
      }
      if (v31 >= 2)
      {
        v33 = 1;
        do
        {
          marisa::grimoire::vector::BitVector::push_back((uint64_t *)v45, 0);
          ++v33;
        }
        while (v33 < *v28);
      }
    }
    else if ((v7 & 1) != 0)
    {
      goto LABEL_45;
    }
    marisa::grimoire::vector::BitVector::push_back((uint64_t *)v45, 1);
LABEL_47:
    v22 = *((_QWORD *)&v44[1] + 1);
    if (HIDWORD(*((_QWORD *)&v44[1] + 1)))
    {
      v41 = __cxa_allocate_exception(0x20uLL);
      *v41 = &off_1E8669F00;
      v41[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/tail.cc";
      v41[2] = 0x7000000C0;
      v41[3] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/tail.cc"
               ":192: MARISA_SIZE_ERROR: buf_.size() > MARISA_UINT32_MAX";
    }
LABEL_48:
    v23 = (_QWORD *)v26;
  }
  while (v21);
  if (BYTE8(v44[2]))
  {
    v34 = __cxa_allocate_exception(0x20uLL);
    *v34 = &off_1E8669F00;
    v34[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/vector.h";
    v34[2] = 0x100000064;
    v34[3] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/vector.h:100: MARISA_STATE_ERROR: fixed_";
  }
LABEL_52:
  if (v22 != *(_QWORD *)&v44[2])
    marisa::grimoire::vector::Vector<char>::realloc((uint64_t *)v44, v22);
  v35 = *a3;
  *(_OWORD *)a3 = v54[0];
  a3[2] = *(_QWORD *)&v54[1];
  *(_OWORD *)(a3 + 3) = *(_OWORD *)((char *)&v54[1] + 8);
  *((_BYTE *)a3 + 40) = BYTE8(v54[2]);
  if (v35)
    MEMORY[0x1D179D2D4](v35, 0x1000C8077774924);
  v36 = *a1;
  *a1 = v44[0];
  v44[0] = v36;
  v37 = *((_QWORD *)a1 + 2);
  *((_QWORD *)a1 + 2) = *(_QWORD *)&v44[1];
  *(_QWORD *)&v44[1] = v37;
  v38 = *(__int128 *)((char *)a1 + 24);
  *(__int128 *)((char *)a1 + 24) = *(_OWORD *)((char *)&v44[1] + 8);
  *(_OWORD *)((char *)&v44[1] + 8) = v38;
  LOBYTE(v37) = *((_BYTE *)a1 + 40);
  *((_BYTE *)a1 + 40) = BYTE8(v44[2]);
  BYTE8(v44[2]) = v37;
  marisa::grimoire::vector::BitVector::swap((marisa::grimoire::vector::BitVector *)(a1 + 3), (marisa::grimoire::vector::BitVector *)v45);
  if ((_QWORD)v50)
    MEMORY[0x1D179D2D4](v50, 0x1000C8077774924);
  if ((_QWORD)v48)
    MEMORY[0x1D179D2D4](v48, 0x1000C8077774924);
  if ((_QWORD)v46)
    MEMORY[0x1D179D2D4](v46, 0x1000C8077774924);
  if (*(_QWORD *)&v45[0])
    MEMORY[0x1D179D2D4](*(_QWORD *)&v45[0], 0x1000C8077774924);
  result = *(_QWORD *)&v44[0];
  if (*(_QWORD *)&v44[0])
    JUMPOUT(0x1D179D2D4);
  return result;
}

void sub_1CB4FF630(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;

  v11 = *(_QWORD *)(v9 - 144);
  if (v11)
    MEMORY[0x1D179D2D4](v11, 0x1000C8077774924);
  marisa::grimoire::trie::Tail::~Tail((marisa::grimoire::trie::Tail *)&a9);
  _Unwind_Resume(a1);
}

uint64_t *marisa::grimoire::vector::BitVector::swap(marisa::grimoire::vector::BitVector *this, marisa::grimoire::vector::BitVector *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  marisa::grimoire::vector::Vector<unsigned long long>::swap((uint64_t *)this, (uint64_t *)a2);
  v4 = *((_QWORD *)this + 6);
  *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
  *((_QWORD *)a2 + 6) = v4;
  v5 = *((_QWORD *)this + 7);
  v6 = *((_QWORD *)this + 8);
  v7 = *((_QWORD *)a2 + 8);
  *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
  *((_QWORD *)this + 8) = v7;
  *((_QWORD *)a2 + 7) = v5;
  *((_QWORD *)a2 + 8) = v6;
  v8 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = *((_QWORD *)a2 + 9);
  *((_QWORD *)a2 + 9) = v8;
  v9 = *((_QWORD *)this + 10);
  v10 = *((_QWORD *)this + 11);
  v11 = *((_QWORD *)a2 + 11);
  *((_QWORD *)this + 10) = *((_QWORD *)a2 + 10);
  *((_QWORD *)this + 11) = v11;
  *((_QWORD *)a2 + 10) = v9;
  *((_QWORD *)a2 + 11) = v10;
  v12 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = *((_QWORD *)a2 + 12);
  *((_QWORD *)a2 + 12) = v12;
  LOBYTE(v12) = *((_BYTE *)this + 104);
  *((_BYTE *)this + 104) = *((_BYTE *)a2 + 104);
  *((_BYTE *)a2 + 104) = v12;
  marisa::grimoire::vector::Vector<unsigned long long>::swap((uint64_t *)this + 14, (uint64_t *)a2 + 14);
  return marisa::grimoire::vector::Vector<unsigned long long>::swap((uint64_t *)this + 20, (uint64_t *)a2 + 20);
}

void marisa::grimoire::trie::Tail::~Tail(marisa::grimoire::trie::Tail *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *((_QWORD *)this + 26);
  if (v2)
    MEMORY[0x1D179D2D4](v2, 0x1000C8077774924);
  v3 = *((_QWORD *)this + 20);
  if (v3)
    MEMORY[0x1D179D2D4](v3, 0x1000C8077774924);
  v4 = *((_QWORD *)this + 14);
  if (v4)
    MEMORY[0x1D179D2D4](v4, 0x1000C8077774924);
  v5 = *((_QWORD *)this + 6);
  if (v5)
    MEMORY[0x1D179D2D4](v5, 0x1000C8077774924);
  if (*(_QWORD *)this)
    MEMORY[0x1D179D2D4](*(_QWORD *)this, 0x1000C8077774924);
}

uint64_t *marisa::grimoire::vector::Vector<unsigned long long>::swap(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *result;
  *result = *a2;
  *a2 = v2;
  v3 = result[1];
  result[1] = a2[1];
  a2[1] = v3;
  v4 = result[2];
  v5 = result[3];
  v6 = a2[3];
  result[2] = a2[2];
  result[3] = v6;
  a2[2] = v4;
  a2[3] = v5;
  v7 = result[4];
  result[4] = a2[4];
  a2[4] = v7;
  LOBYTE(v7) = *((_BYTE *)result + 40);
  *((_BYTE *)result + 40) = *((_BYTE *)a2 + 40);
  *((_BYTE *)a2 + 40) = v7;
  return result;
}

uint64_t marisa::grimoire::algorithm::details::sort<marisa::grimoire::trie::Entry *>(unint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;

  v4 = a2;
  v5 = a1;
  v6 = a2 - a1;
  if ((uint64_t)(a2 - a1) < 161)
  {
    v7 = 0;
    goto LABEL_84;
  }
  v7 = 0;
  do
  {
    if (a3 >= *(unsigned int *)(v5 + 8))
      v8 = -1;
    else
      v8 = *(unsigned __int8 *)(*(_QWORD *)v5 - a3);
    v9 = v5 + 16 * ((unint64_t)v6 >> 5);
    if (a3 >= *(unsigned int *)(v9 + 8))
      v10 = -1;
    else
      v10 = *(unsigned __int8 *)(*(_QWORD *)v9 - a3);
    if (a3 >= *(unsigned int *)(v4 - 8))
      v11 = -1;
    else
      v11 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 16) - a3);
    if (v8 <= v10)
      v12 = v10;
    else
      v12 = v8;
    if (v8 < v10)
      v10 = v8;
    if (v10 <= v11)
      v10 = v11;
    if (v12 >= v11)
      v13 = v10;
    else
      v13 = v12;
    v14 = v5;
    v15 = v4;
    v16 = v5;
    v17 = v4;
    while (v14 < v15)
    {
      v18 = *(unsigned int *)(v14 + 8);
      v19 = a3 >= v18 ? -1 : *(unsigned __int8 *)(*(_QWORD *)v14 - a3);
      if (v19 > v13)
        break;
      if (v19 == v13)
      {
        v20 = *(_QWORD *)v14;
        v21 = *(_DWORD *)(v14 + 12);
        *(_QWORD *)v14 = *(_QWORD *)v16;
        *(_QWORD *)(v14 + 8) = *(_QWORD *)(v16 + 8);
        *(_QWORD *)v16 = v20;
        *(_DWORD *)(v16 + 8) = v18;
        *(_DWORD *)(v16 + 12) = v21;
        v16 += 16;
      }
LABEL_30:
      v14 += 16;
    }
    if (v14 < v15)
    {
      v22 = v15 - 16;
      do
      {
        v15 = v22;
        v23 = *(unsigned int *)(v22 + 8);
        if (a3 >= v23)
          v24 = -1;
        else
          v24 = *(unsigned __int8 *)(*(_QWORD *)v15 - a3);
        if (v24 < v13)
          break;
        if (v24 == v13)
        {
          v25 = *(_QWORD *)(v17 - 16);
          v17 -= 16;
          v26 = *(_QWORD *)v15;
          v27 = *(_DWORD *)(v15 + 12);
          *(_QWORD *)v15 = v25;
          *(_QWORD *)(v15 + 8) = *(_QWORD *)(v17 + 8);
          *(_QWORD *)v17 = v26;
          *(_DWORD *)(v17 + 8) = v23;
          *(_DWORD *)(v17 + 12) = v27;
        }
        v22 = v15 - 16;
      }
      while (v14 < v15);
    }
    if (v14 < v15)
    {
      v28 = *(_QWORD *)v14;
      *(_QWORD *)v14 = *(_QWORD *)v15;
      v29 = *(_QWORD *)(v15 + 8);
      *(_QWORD *)v15 = v28;
      v30 = *(_QWORD *)(v14 + 8);
      *(_QWORD *)(v14 + 8) = v29;
      *(_QWORD *)(v15 + 8) = v30;
      goto LABEL_30;
    }
    while (v16 > v5)
    {
      v32 = *(_QWORD *)(v16 - 16);
      v16 -= 16;
      v31 = v32;
      v33 = *(_QWORD *)(v14 - 16);
      v14 -= 16;
      *(_QWORD *)v16 = v33;
      v34 = *(_QWORD *)(v14 + 8);
      *(_QWORD *)v14 = v31;
      v35 = *(_QWORD *)(v16 + 8);
      *(_QWORD *)(v16 + 8) = v34;
      *(_QWORD *)(v14 + 8) = v35;
    }
    while (v17 < v4)
    {
      v36 = *(_QWORD *)v17;
      *(_QWORD *)v17 = *(_QWORD *)v15;
      v37 = *(_QWORD *)(v15 + 8);
      *(_QWORD *)v15 = v36;
      v38 = *(_QWORD *)(v17 + 8);
      *(_QWORD *)(v17 + 8) = v37;
      *(_QWORD *)(v15 + 8) = v38;
      v15 += 16;
      v17 += 16;
    }
    v39 = v14 - v5;
    v40 = (uint64_t)(v14 - v5) >> 4;
    v41 = v15 - v14;
    if (v40 <= (uint64_t)(v15 - v14) >> 4)
    {
      v42 = v4 - v15;
      if (v41 >> 4 >= (uint64_t)(v4 - v15) >> 4)
      {
        if (v39 == 16)
        {
          ++v7;
        }
        else if (v39 >= 17)
        {
          v7 += marisa::grimoire::algorithm::details::sort<marisa::grimoire::trie::Entry *>(v5, v14, a3);
        }
        if (v42 == 16)
        {
          ++v7;
        }
        else if (v42 >= 17)
        {
          v7 += marisa::grimoire::algorithm::details::sort<marisa::grimoire::trie::Entry *>(v15, v4, a3);
        }
        if (v41 == 16)
        {
          ++v7;
        }
        else if (v41 >= 17)
        {
          if (v13 == -1)
          {
            ++v7;
            v5 = v15;
            goto LABEL_79;
          }
          ++a3;
        }
        v5 = v14;
LABEL_79:
        v4 = v15;
        goto LABEL_80;
      }
    }
    if (v41 == 16)
      goto LABEL_50;
    if (v41 >= 17)
    {
      if (v13 == -1)
LABEL_50:
        ++v7;
      else
        v7 += marisa::grimoire::algorithm::details::sort<marisa::grimoire::trie::Entry *>(v14, v15, a3 + 1);
    }
    v43 = v4 - v15;
    if (v40 >= (uint64_t)(v4 - v15) >> 4)
    {
      if (v43 == 16)
      {
        ++v7;
      }
      else if (v43 >= 17)
      {
        v7 += marisa::grimoire::algorithm::details::sort<marisa::grimoire::trie::Entry *>(v15, v4, a3);
      }
      v4 = v14;
    }
    else
    {
      if (v39 == 16)
      {
        ++v7;
      }
      else if (v39 >= 17)
      {
        v7 += marisa::grimoire::algorithm::details::sort<marisa::grimoire::trie::Entry *>(v5, v14, a3);
      }
      v5 = v15;
    }
LABEL_80:
    v6 = v4 - v5;
  }
  while ((uint64_t)(v4 - v5) > 160);
LABEL_84:
  if (v6 >= 17)
  {
    v44 = v5 + 16;
    if (v5 + 16 >= v4)
    {
      v45 = 1;
    }
    else
    {
      v45 = 1;
      do
      {
        if (v44 > v5)
        {
          v46 = v44;
          while (1)
          {
            v47 = *(unsigned int *)(v46 - 8);
            v48 = *(unsigned int *)(v46 + 8);
            if (a3 >= v47)
            {
LABEL_94:
              if ((_DWORD)v47 == (_DWORD)v48)
                break;
              if (v47 < v48)
              {
LABEL_99:
                v52 = -1;
                goto LABEL_101;
              }
              v49 = *(_QWORD *)(v46 - 16);
              v50 = *(_QWORD *)v46;
            }
            else
            {
              v49 = *(_QWORD *)(v46 - 16);
              v50 = *(_QWORD *)v46;
              v51 = -(uint64_t)a3;
              while (-v48 != v51)
              {
                v52 = *(unsigned __int8 *)(v49 + v51) - *(unsigned __int8 *)(v50 + v51);
                if (v52)
                {
                  if (v52 < 1)
                    goto LABEL_101;
                  break;
                }
                if (-(uint64_t)v47 == --v51)
                  goto LABEL_94;
              }
            }
            *(_QWORD *)(v46 - 16) = v50;
            v53 = *(_QWORD *)(v46 + 8);
            *(_QWORD *)v46 = v49;
            v54 = *(_QWORD *)(v46 - 8);
            *(_QWORD *)(v46 - 8) = v53;
            *(_QWORD *)(v46 + 8) = v54;
            v46 -= 16;
            if (v46 <= v5)
              goto LABEL_99;
          }
        }
        v52 = 0;
LABEL_101:
        if (v52)
          ++v45;
        v44 += 16;
      }
      while (v44 < v4);
    }
    v7 += v45;
  }
  return v7;
}

uint64_t *marisa::grimoire::vector::Vector<char>::push_back(uint64_t *result, _BYTE *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  uint64_t v7;
  size_t v8;

  v3 = result;
  v4 = result[3];
  v5 = result[4];
  v6 = v4 + 1;
  if (v5 < (unint64_t)(v4 + 1))
  {
    v7 = 2 * v5;
    if (v5 < 0)
      v7 = -1;
    if (v5 <= v6 >> 1)
      v8 = v6;
    else
      v8 = v7;
    result = (uint64_t *)marisa::grimoire::vector::Vector<char>::realloc(result, v8);
    v4 = v3[3];
  }
  *(_BYTE *)(v3[1] + v4) = *a2;
  ++v3[3];
  return result;
}

uint64_t *marisa::grimoire::vector::BitVector::push_back(uint64_t *this, int a2)
{
  unint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *exception;

  v2 = this[6];
  if (v2 == 0xFFFFFFFF)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    *exception = &off_1E8669F00;
    exception[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/bit-vector.h";
    exception[2] = 0x700000034;
    exception[3] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/bit-vector.h:52: MARISA_SIZE_ERROR: size_ == MARISA_UINT32_MAX";
  }
  v4 = this;
  v5 = this[3];
  if (v2 == v5 << 6)
  {
    v6 = v5 + 1;
    v7 = this[4];
    v8 = this[3];
    if (v7 < v5 + 1)
    {
      v9 = 2 * v7;
      if (v7 >> 60)
        v9 = 0x1FFFFFFFFFFFFFFFLL;
      if (v7 <= v6 >> 1)
        v10 = v5 + 1;
      else
        v10 = v9;
      this = marisa::grimoire::vector::Vector<unsigned long long>::realloc(this, v10);
      v8 = v4[3];
    }
    if (v8 < v6)
    {
      v11 = v5 - v8 + 1;
      v12 = (_QWORD *)(v4[1] + 8 * v8);
      do
      {
        *v12++ = 0;
        --v11;
      }
      while (v11);
    }
    v4[3] = v6;
    v2 = v4[6];
  }
  if (a2)
  {
    *(_QWORD *)(v4[1] + ((v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v2;
    ++v4[7];
  }
  v4[6] = v2 + 1;
  return this;
}

_QWORD *marisa::grimoire::vector::Vector<unsigned long long>::realloc(uint64_t *a1, uint64_t a2)
{
  _QWORD *result;
  uint64_t v5;
  uint64_t *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  result = operator new[](8 * a2, MEMORY[0x1E0DE4E10]);
  v5 = a1[3];
  if (v5)
  {
    v6 = (uint64_t *)a1[1];
    v7 = result;
    do
    {
      v8 = *v6++;
      *v7++ = v8;
      --v5;
    }
    while (v5);
  }
  v9 = *a1;
  *a1 = (uint64_t)result;
  a1[1] = (uint64_t)result;
  a1[2] = (uint64_t)result;
  a1[4] = a2;
  if (v9)
    JUMPOUT(0x1D179D2D4);
  return result;
}

_BYTE *marisa::grimoire::vector::Vector<char>::realloc(uint64_t *a1, size_t __sz)
{
  _BYTE *result;
  uint64_t v5;
  char *v6;
  _BYTE *v7;
  char v8;
  uint64_t v9;

  result = operator new[](__sz, MEMORY[0x1E0DE4E10]);
  v5 = a1[3];
  if (v5)
  {
    v6 = (char *)a1[1];
    v7 = result;
    do
    {
      v8 = *v6++;
      *v7++ = v8;
      --v5;
    }
    while (v5);
  }
  v9 = *a1;
  *a1 = (uint64_t)result;
  a1[1] = (uint64_t)result;
  a1[2] = (uint64_t)result;
  a1[4] = __sz;
  if (v9)
    JUMPOUT(0x1D179D2D4);
  return result;
}

_DWORD *marisa::grimoire::vector::Vector<unsigned int>::realloc(uint64_t *a1, uint64_t a2)
{
  _DWORD *result;
  uint64_t v5;
  int *v6;
  _DWORD *v7;
  int v8;
  uint64_t v9;

  result = operator new[](4 * a2, MEMORY[0x1E0DE4E10]);
  v5 = a1[3];
  if (v5)
  {
    v6 = (int *)a1[1];
    v7 = result;
    do
    {
      v8 = *v6++;
      *v7++ = v8;
      --v5;
    }
    while (v5);
  }
  v9 = *a1;
  *a1 = (uint64_t)result;
  a1[1] = (uint64_t)result;
  a1[2] = (uint64_t)result;
  a1[4] = a2;
  if (v9)
    JUMPOUT(0x1D179D2D4);
  return result;
}

uint64_t marisa::grimoire::vector::BitVector::map(marisa::grimoire::vector::BitVector *this, marisa::grimoire::io::Mapper *a2)
{
  unsigned int v4;
  unsigned int *v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD *exception;
  _QWORD *v12;
  _OWORD v13[3];
  __int128 v14;
  __int128 v15;
  _OWORD v16[2];
  _OWORD v17[3];
  _OWORD v18[3];

  memset(v13, 0, 41);
  memset(v17, 0, 41);
  memset(v18, 0, 41);
  v14 = 0u;
  v15 = 0u;
  memset(v16, 0, 25);
  marisa::grimoire::vector::Vector<unsigned long long>::map((uint64_t)v13, a2);
  v4 = *(_DWORD *)marisa::grimoire::io::Mapper::map_data(a2, 4uLL);
  *(_QWORD *)&v14 = v4;
  v5 = (unsigned int *)marisa::grimoire::io::Mapper::map_data(a2, 4uLL);
  if (v4 < *v5)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    *exception = &off_1E8669F00;
    exception[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/bit-vector.h";
    exception[2] = 0xA00000087;
    exception[3] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/bit-vector.h:135: MARISA_FORMAT_ERROR: temp_num_1s > size_";
  }
  *((_QWORD *)&v14 + 1) = *v5;
  v6 = (_QWORD *)marisa::grimoire::io::Mapper::map_data(a2, 8uLL);
  v7 = *v6 / 0xCuLL;
  if (*v6 % 0xCuLL)
  {
    v12 = __cxa_allocate_exception(0x20uLL);
    *v12 = &off_1E8669F00;
    v12[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/vector.h";
    v12[2] = 0xA000000CALL;
    v12[3] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/vector.h:202: MARISA_FORMAT_ERROR: (total_size % sizeof(T)) != 0";
  }
  v8 = marisa::grimoire::io::Mapper::map_data(a2, 12 * v7);
  marisa::grimoire::io::Mapper::seek(a2, (-12 * (_BYTE)v7) & 4);
  v9 = v15;
  v15 = 0uLL;
  *(_QWORD *)&v16[0] = v8;
  *(_OWORD *)((char *)v16 + 8) = v7;
  BYTE8(v16[1]) = 1;
  if (v9)
    MEMORY[0x1D179D2D4](v9, 0x1000C8077774924);
  marisa::grimoire::vector::Vector<unsigned int>::map((uint64_t)v17, a2);
  marisa::grimoire::vector::Vector<unsigned int>::map((uint64_t)v18, a2);
  marisa::grimoire::vector::BitVector::swap(this, (marisa::grimoire::vector::BitVector *)v13);
  if (*(_QWORD *)&v18[0])
    MEMORY[0x1D179D2D4](*(_QWORD *)&v18[0], 0x1000C8077774924);
  if (*(_QWORD *)&v17[0])
    MEMORY[0x1D179D2D4](*(_QWORD *)&v17[0], 0x1000C8077774924);
  if ((_QWORD)v15)
    MEMORY[0x1D179D2D4](v15, 0x1000C8077774924);
  result = *(_QWORD *)&v13[0];
  if (*(_QWORD *)&v13[0])
    JUMPOUT(0x1D179D2D4);
  return result;
}

void sub_1CB500258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  marisa::grimoire::vector::BitVector::~BitVector((marisa::grimoire::vector::BitVector *)&a9);
  _Unwind_Resume(a1);
}

void marisa::grimoire::vector::BitVector::~BitVector(marisa::grimoire::vector::BitVector *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *((_QWORD *)this + 20);
  if (v2)
    MEMORY[0x1D179D2D4](v2, 0x1000C8077774924);
  v3 = *((_QWORD *)this + 14);
  if (v3)
    MEMORY[0x1D179D2D4](v3, 0x1000C8077774924);
  v4 = *((_QWORD *)this + 8);
  if (v4)
    MEMORY[0x1D179D2D4](v4, 0x1000C8077774924);
  if (*(_QWORD *)this)
    MEMORY[0x1D179D2D4](*(_QWORD *)this, 0x1000C8077774924);
}

uint64_t marisa::grimoire::vector::Vector<unsigned long long>::map(uint64_t a1, marisa::grimoire::io::Mapper *this)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD *exception;

  v4 = *(_QWORD *)marisa::grimoire::io::Mapper::map_data(this, 8uLL);
  if ((v4 & 7) != 0)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    *exception = &off_1E8669F00;
    exception[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/vector.h";
    exception[2] = 0xA000000CALL;
    exception[3] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/vector.h:202: MARISA_FORMAT_ERROR: (total_size "
                   "% sizeof(T)) != 0";
  }
  v5 = marisa::grimoire::io::Mapper::map_data(this, v4 & 0xFFFFFFFFFFFFFFF8);
  marisa::grimoire::io::Mapper::seek(this, -(int)v4 & 7);
  result = *(_QWORD *)a1;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = v4 >> 3;
  *(_BYTE *)(a1 + 40) = 1;
  if (result)
    JUMPOUT(0x1D179D2D4);
  return result;
}

uint64_t marisa::grimoire::vector::Vector<unsigned int>::map(uint64_t a1, marisa::grimoire::io::Mapper *this)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD *exception;

  v4 = *(_QWORD *)marisa::grimoire::io::Mapper::map_data(this, 8uLL);
  if ((v4 & 3) != 0)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    *exception = &off_1E8669F00;
    exception[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/vector.h";
    exception[2] = 0xA000000CALL;
    exception[3] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/vector.h:202: MARISA_FORMAT_ERROR: (total_size "
                   "% sizeof(T)) != 0";
  }
  v5 = marisa::grimoire::io::Mapper::map_data(this, v4 & 0xFFFFFFFFFFFFFFFCLL);
  marisa::grimoire::io::Mapper::seek(this, -(int)v4 & 7);
  result = *(_QWORD *)a1;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = v4 >> 2;
  *(_BYTE *)(a1 + 40) = 1;
  if (result)
    JUMPOUT(0x1D179D2D4);
  return result;
}

uint64_t *marisa::grimoire::vector::Vector<unsigned int>::resize(uint64_t *result, unint64_t a2)
{
  unint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;

  v2 = a2;
  v3 = result;
  v4 = result[4];
  if (v4 < a2)
  {
    v5 = 2 * v4;
    if (v4 >> 61)
      v5 = 0x3FFFFFFFFFFFFFFFLL;
    if (v4 > a2 >> 1)
      a2 = v5;
    result = (uint64_t *)marisa::grimoire::vector::Vector<unsigned int>::realloc(result, a2);
  }
  v3[3] = v2;
  return result;
}

uint64_t marisa::grimoire::vector::BitVector::write_(marisa::grimoire::vector::BitVector *this, marisa::grimoire::io::Writer *a2)
{
  char *v4;
  unint64_t v5;
  _QWORD *exception;
  const char *v8;
  uint64_t __buf;

  marisa::grimoire::vector::Vector<unsigned long long>::write_((uint64_t)this, a2);
  LODWORD(__buf) = *((_QWORD *)this + 6);
  marisa::grimoire::io::Writer::write_data((uint64_t)a2, (char *)&__buf, 4uLL);
  LODWORD(__buf) = *((_QWORD *)this + 7);
  marisa::grimoire::io::Writer::write_data((uint64_t)a2, (char *)&__buf, 4uLL);
  __buf = 12 * *((_QWORD *)this + 11);
  marisa::grimoire::io::Writer::write_data((uint64_t)a2, (char *)&__buf, 8uLL);
  v4 = (char *)*((_QWORD *)this + 10);
  v5 = *((_QWORD *)this + 11);
  if (!v4 && v5)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    *exception = &off_1E8669F00;
    exception[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.h";
    exception[2] = 0x20000001ELL;
    v8 = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.h:30: MARISA_NULL_ERROR: (objs == NULL) && (num_objs != 0)";
    goto LABEL_7;
  }
  if (v5 >= 0x1555555555555556)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    *exception = &off_1E8669F00;
    exception[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.h";
    exception[2] = 0x700000020;
    v8 = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.h:32: MARISA_SIZE_ERROR: num_objs > (MARISA_SIZE_MAX / sizeof(T))";
LABEL_7:
    exception[3] = v8;
  }
  marisa::grimoire::io::Writer::write_data((uint64_t)a2, v4, 12 * v5);
  marisa::grimoire::io::Writer::seek((uint64_t)a2, 4 * (*((_DWORD *)this + 22) & 1));
  marisa::grimoire::vector::Vector<unsigned int>::write_((uint64_t)this + 112, a2);
  return marisa::grimoire::vector::Vector<unsigned int>::write_((uint64_t)this + 160, a2);
}

uint64_t marisa::grimoire::vector::Vector<unsigned long long>::write_(uint64_t a1, marisa::grimoire::io::Writer *this)
{
  char *v4;
  unint64_t v5;
  BOOL v6;
  _QWORD *exception;
  const char *v9;
  uint64_t __buf;

  __buf = 8 * *(_QWORD *)(a1 + 24);
  marisa::grimoire::io::Writer::write_data((uint64_t)this, (char *)&__buf, 8uLL);
  v4 = *(char **)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  if (v4)
    v6 = 1;
  else
    v6 = v5 == 0;
  if (!v6)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    *exception = &off_1E8669F00;
    exception[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.h";
    exception[2] = 0x20000001ELL;
    v9 = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.h:30: MARISA_NULL_ERROR: (objs == NULL) && (num_objs != 0)";
    goto LABEL_9;
  }
  if (v5 >> 61)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    *exception = &off_1E8669F00;
    exception[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.h";
    exception[2] = 0x700000020;
    v9 = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.h:32: MARISA_SIZE_ERROR: num_objs > (MARISA_SIZE_MAX / sizeof(T))";
LABEL_9:
    exception[3] = v9;
  }
  marisa::grimoire::io::Writer::write_data((uint64_t)this, v4, 8 * v5);
  return marisa::grimoire::io::Writer::seek((uint64_t)this, 0);
}

uint64_t marisa::grimoire::vector::Vector<unsigned int>::write_(uint64_t a1, marisa::grimoire::io::Writer *this)
{
  char *v4;
  unint64_t v5;
  BOOL v6;
  _QWORD *exception;
  const char *v9;
  uint64_t __buf;

  __buf = 4 * *(_QWORD *)(a1 + 24);
  marisa::grimoire::io::Writer::write_data((uint64_t)this, (char *)&__buf, 8uLL);
  v4 = *(char **)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  if (v4)
    v6 = 1;
  else
    v6 = v5 == 0;
  if (!v6)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    *exception = &off_1E8669F00;
    exception[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.h";
    exception[2] = 0x20000001ELL;
    v9 = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.h:30: MARISA_NULL_ERROR: (objs == NULL) && (num_objs != 0)";
    goto LABEL_9;
  }
  if (v5 >> 62)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    *exception = &off_1E8669F00;
    exception[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.h";
    exception[2] = 0x700000020;
    v9 = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.h:32: MARISA_SIZE_ERROR: num_objs > (MARISA_SIZE_MAX / sizeof(T))";
LABEL_9:
    exception[3] = v9;
  }
  marisa::grimoire::io::Writer::write_data((uint64_t)this, v4, 4 * v5);
  return marisa::grimoire::io::Writer::seek((uint64_t)this, 4 * (*(_DWORD *)(a1 + 24) & 1));
}

uint64_t *marisa::grimoire::trie::Tail::restore(uint64_t *this, marisa::Agent *a2, unint64_t a3)
{
  unint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  _BYTE *v7;

  v3 = a3;
  v5 = this;
  if (this[12])
  {
    do
    {
      this = marisa::grimoire::vector::Vector<char>::push_back((uint64_t *)a2, (_BYTE *)(v5[2] + v3));
      v6 = *(_QWORD *)(v5[8] + ((v3 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v3;
      ++v3;
    }
    while ((v6 & 1) == 0);
  }
  else
  {
    v7 = (_BYTE *)(this[2] + a3);
    if (*v7)
    {
      do
        this = marisa::grimoire::vector::Vector<char>::push_back((uint64_t *)a2, v7);
      while (*++v7);
    }
  }
  return this;
}

uint64_t marisa::grimoire::trie::Tail::match(marisa::grimoire::trie::Tail *this, marisa::Agent *a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  unint64_t v12;

  v3 = *((_QWORD *)a2 + 5);
  v4 = *((_QWORD *)this + 2);
  if (*((_QWORD *)this + 12))
  {
    v5 = *(_DWORD *)(v3 + 100);
    v6 = *(_QWORD *)a2;
    v7 = *((_QWORD *)a2 + 1);
    do
    {
      if (*(unsigned __int8 *)(v4 + a3) != *(unsigned __int8 *)(v6 + v5))
        break;
      *(_DWORD *)(v3 + 100) = ++v5;
      if (((*(_QWORD *)(*((_QWORD *)this + 8) + ((a3 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
        return 1;
      ++a3;
    }
    while (v7 > v5);
  }
  else
  {
    v12 = v4 + a3;
    v8 = v4 + a3 - *(unsigned int *)(v3 + 100);
    v9 = *(_QWORD *)a2;
    v10 = *((_QWORD *)a2 + 1);
    v11 = *(unsigned __int8 *)v12;
    LODWORD(v12) = *(_DWORD *)(v3 + 100);
    while (v11 == *(unsigned __int8 *)(v9 + v12))
    {
      v12 = (v12 + 1);
      *(_DWORD *)(v3 + 100) = v12;
      v11 = *(unsigned __int8 *)(v8 + v12);
      if (!*(_BYTE *)(v8 + v12))
        return 1;
      if (v10 <= v12)
        return 0;
    }
  }
  return 0;
}

BOOL marisa::grimoire::trie::Tail::prefix_match(marisa::grimoire::trie::Tail *this, marisa::Agent *a2, unint64_t a3)
{
  unint64_t v3;
  uint64_t v6;
  unsigned int v7;
  _BYTE *v8;
  int v9;
  int v10;
  _BOOL8 result;
  uint64_t v12;
  unsigned __int8 *v13;
  int v14;
  unint64_t v15;
  int v16;
  unsigned __int8 *v17;

  v3 = a3;
  v6 = *((_QWORD *)a2 + 5);
  if (*((_QWORD *)this + 12))
  {
    v7 = *(_DWORD *)(v6 + 100);
    while (1)
    {
      v8 = (_BYTE *)(*((_QWORD *)this + 2) + v3);
      v9 = *v8;
      v10 = *(unsigned __int8 *)(*(_QWORD *)a2 + v7);
      result = v9 == v10;
      if (v9 != v10)
        break;
      marisa::grimoire::vector::Vector<char>::push_back((uint64_t *)v6, v8);
      v7 = *(_DWORD *)(v6 + 100) + 1;
      *(_DWORD *)(v6 + 100) = v7;
      if (((*(_QWORD *)(*((_QWORD *)this + 8) + ((v3 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
        return 1;
      ++v3;
      if (*((_QWORD *)a2 + 1) <= (unint64_t)v7)
      {
        do
        {
          marisa::grimoire::vector::Vector<char>::push_back((uint64_t *)v6, (_BYTE *)(*((_QWORD *)this + 2) + v3));
          v12 = *(_QWORD *)(*((_QWORD *)this + 8) + ((v3 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v3;
          ++v3;
        }
        while ((v12 & 1) == 0);
        return 1;
      }
    }
  }
  else
  {
    v15 = *((_QWORD *)this + 2) + a3;
    v13 = (unsigned __int8 *)(v15 - *(unsigned int *)(v6 + 100));
    v14 = *(unsigned __int8 *)v15;
    LODWORD(v15) = *(_DWORD *)(v6 + 100);
    while (1)
    {
      v16 = *(unsigned __int8 *)(*(_QWORD *)a2 + v15);
      result = v14 == v16;
      if (v14 != v16)
        break;
      marisa::grimoire::vector::Vector<char>::push_back((uint64_t *)v6, &v13[v15]);
      v15 = (*(_DWORD *)(v6 + 100) + 1);
      *(_DWORD *)(v6 + 100) = v15;
      v14 = v13[v15];
      if (!v13[v15])
        return 1;
      if (*((_QWORD *)a2 + 1) <= v15)
      {
        v17 = &v13[v15];
        do
          marisa::grimoire::vector::Vector<char>::push_back((uint64_t *)v6, v17);
        while (*++v17);
        return 1;
      }
    }
  }
  return result;
}

void morphun::dialog::language::LtCommonConceptFactory::~LtCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1E8655F10);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1E8655F10);
  JUMPOUT(0x1D179D2ECLL);
}

void morphun::grammar::synthesis::CaGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::CaGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  morphun::util::LocaleUtils *v3;
  morphun::grammar::synthesis::GrammemeConstants *v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  uint64_t i;
  morphun::util::LocaleUtils *v10;
  morphun::grammar::synthesis::GrammemeConstants *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t j;
  std::basic_string<char16_t> *v17;
  std::basic_string<char16_t> *v18;
  std::basic_string<char16_t> *v19;
  void *__p[2];
  char v21;
  std::basic_string<char16_t> **v22;
  char v23;
  std::basic_string<char16_t> v24;
  std::basic_string<char16_t> v25;
  __int128 v26;

  *((_QWORD *)&v26 + 1) = *MEMORY[0x1E0C80C00];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"gender");
  v3 = (morphun::util::LocaleUtils *)operator new();
  v4 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::CATALAN(v3);
  v5 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(v4);
  if (*(char *)(v5 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v24, *(const std::basic_string<char16_t>::value_type **)v5, *(_QWORD *)(v5 + 8));
  }
  else
  {
    v6 = *(_OWORD *)v5;
    v24.__r_.__value_.__r.__words[2] = *(_QWORD *)(v5 + 16);
    *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v6;
  }
  v7 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE((morphun::grammar::synthesis::GrammemeConstants *)v5);
  if (*(char *)(v7 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v25, *(const std::basic_string<char16_t>::value_type **)v7, *(_QWORD *)(v7 + 8));
  }
  else
  {
    v8 = *(_OWORD *)v7;
    v25.__r_.__value_.__r.__words[2] = *(_QWORD *)(v7 + 16);
    *(_OWORD *)&v25.__r_.__value_.__l.__data_ = v8;
  }
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v22 = &v17;
  v23 = 0;
  v17 = (std::basic_string<char16_t> *)operator new(0x30uLL);
  v18 = v17;
  v19 = v17 + 2;
  v18 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v19, (__int128 *)&v24, &v26, v17);
  morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction((uint64_t)v3, v4, (uint64_t *)&v17);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)__p, (morphun::util::LocaleUtils *)((char *)v3 + *(_QWORD *)(*(_QWORD *)v3 - 56)));
  v22 = &v17;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v22);
  for (i = 0; i != -6; i -= 3)
  {
    if (SHIBYTE(v25.__r_.__value_.__r.__words[i + 2]) < 0)
      operator delete(*(void **)((char *)&v24 + i * 8 + 24));
  }
  if (v21 < 0)
    operator delete(__p[0]);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"count");
  v10 = (morphun::util::LocaleUtils *)operator new();
  v11 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::CATALAN(v10);
  v12 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v11);
  if (*(char *)(v12 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v24, *(const std::basic_string<char16_t>::value_type **)v12, *(_QWORD *)(v12 + 8));
  }
  else
  {
    v13 = *(_OWORD *)v12;
    v24.__r_.__value_.__r.__words[2] = *(_QWORD *)(v12 + 16);
    *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v13;
  }
  v14 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v12);
  if (*(char *)(v14 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v25, *(const std::basic_string<char16_t>::value_type **)v14, *(_QWORD *)(v14 + 8));
  }
  else
  {
    v15 = *(_OWORD *)v14;
    v25.__r_.__value_.__r.__words[2] = *(_QWORD *)(v14 + 16);
    *(_OWORD *)&v25.__r_.__value_.__l.__data_ = v15;
  }
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v22 = &v17;
  v23 = 0;
  v17 = (std::basic_string<char16_t> *)operator new(0x30uLL);
  v18 = v17;
  v19 = v17 + 2;
  v18 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v19, (__int128 *)&v24, &v26, v17);
  morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction((uint64_t)v10, v11, (uint64_t *)&v17);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)__p, (morphun::util::LocaleUtils *)((char *)v10 + *(_QWORD *)(*(_QWORD *)v10 - 56)));
  v22 = &v17;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v22);
  for (j = 0; j != -6; j -= 3)
  {
    if (SHIBYTE(v25.__r_.__value_.__r.__words[j + 2]) < 0)
      operator delete(*(void **)((char *)&v24 + j * 8 + 24));
  }
  if (v21 < 0)
    operator delete(__p[0]);
}

void sub_1CB500E34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  uint64_t v31;
  uint64_t v33;

  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a18);
  v33 = 0;
  while (1)
  {
    if (*(&a31 + v33) < 0)
      operator delete(*(void **)((char *)&a26 + v33));
    v33 -= 24;
    if (v33 == -48)
    {
      MEMORY[0x1D179D2EC](v31, 0x10F3C40BE507067);
      if (a17 < 0)
        operator delete(__p);
      _Unwind_Resume(a1);
    }
  }
}

uint64_t **com::apple::siri::tokenizer::data::config_zh_TW::getContent@<X0>(uint64_t **a1@<X8>)
{
  __int128 v3;
  const __int16 *v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v3 = xmmword_1E8676858;
  v4 = L"zh_Hant";
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

std::basic_string<char16_t> *morphun::util::StringUtils::appendCodePoint(std::basic_string<char16_t> *a1, unsigned int a2)
{
  npc<std::basic_string<char16_t>>((uint64_t)a1);
  if (HIWORD(a2))
  {
    std::basic_string<char16_t>::push_back(a1, (a2 >> 10) - 10304);
    npc<std::basic_string<char16_t>>((uint64_t)a1);
    LOWORD(a2) = a2 & 0x3FF | 0xDC00;
  }
  std::basic_string<char16_t>::push_back(a1, a2);
  return a1;
}

void sub_1CB501074(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::basic_string<char16_t> *morphun::util::StringUtils::replace(std::basic_string<char16_t> *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  std::basic_string<char16_t>::size_type v4;
  std::basic_string<char16_t>::size_type v5;
  int v6;
  BOOL v7;
  unsigned __int16 *v8;
  unint64_t v9;
  int v10;
  __int16 *v11;
  unint64_t v12;

  v4 = *(unsigned __int8 *)(a2 + 23);
  v5 = *(_QWORD *)(a2 + 8);
  if ((v4 & 0x80u) != 0)
  {
    a2 = *(_QWORD *)a2;
    v4 = v5;
  }
  v6 = *(char *)(a3 + 23);
  v7 = v6 < 0;
  if (v6 >= 0)
    v8 = (unsigned __int16 *)a3;
  else
    v8 = *(unsigned __int16 **)a3;
  if (v7)
    v9 = *(_QWORD *)(a3 + 8);
  else
    v9 = *(unsigned __int8 *)(a3 + 23);
  v10 = *(char *)(a4 + 23);
  if (v10 >= 0)
    v11 = (__int16 *)a4;
  else
    v11 = *(__int16 **)a4;
  if (v10 >= 0)
    v12 = *(unsigned __int8 *)(a4 + 23);
  else
    v12 = *(_QWORD *)(a4 + 8);
  return morphun::util::StringViewUtils::replace(a1, a2, v4, v8, v9, v11, v12);
}

uint64_t morphun::util::StringUtils::trim@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t result;
  unint64_t v6;
  const void *v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 8);
  if (*(char *)(a1 + 23) >= 0)
  {
    v4 = *(unsigned __int8 *)(a1 + 23);
  }
  else
  {
    a1 = *(_QWORD *)a1;
    v4 = v3;
  }
  result = morphun::util::StringViewUtils::trim(a1, v4);
  if (v6 >= 0x7FFFFFFFFFFFFFF8)
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  v7 = (const void *)result;
  v8 = v6;
  if (v6 >= 0xB)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((v6 | 3) != 0xB)
      v9 = v6 | 3;
    v10 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v9 + 1);
    a2[1] = v8;
    a2[2] = v11 | 0x8000000000000000;
    *a2 = v10;
    a2 = v10;
  }
  else
  {
    *((_BYTE *)a2 + 23) = v6;
    if (!v6)
      goto LABEL_12;
  }
  result = (uint64_t)memmove(a2, v7, 2 * v8);
LABEL_12:
  *((_WORD *)a2 + v8) = 0;
  return result;
}

uint64_t morphun::util::StringUtils::isAllLowerCase(uint64_t a1)
{
  if (*(char *)(a1 + 23) >= 0)
    return morphun::util::StringViewUtils::isAllLowerCase(a1, *(unsigned __int8 *)(a1 + 23));
  else
    return morphun::util::StringViewUtils::isAllLowerCase(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t morphun::util::StringUtils::isAllUpperCase(uint64_t a1)
{
  if (*(char *)(a1 + 23) >= 0)
    return morphun::util::StringViewUtils::isAllUpperCase(a1, *(unsigned __int8 *)(a1 + 23));
  else
    return morphun::util::StringViewUtils::isAllUpperCase(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

std::basic_string<char16_t> *morphun::util::StringUtils::capitalizeFirst@<X0>(UChar *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4;
  unint64_t v5;

  v4 = *((_QWORD *)a1 + 1);
  if (*((char *)a1 + 23) >= 0)
  {
    v5 = *((unsigned __int8 *)a1 + 23);
  }
  else
  {
    a1 = *(UChar **)a1;
    v5 = v4;
  }
  return morphun::util::StringViewUtils::capitalizeFirst(a1, v5, a2, a3);
}

uint64_t morphun::util::StringUtils::uppercase(uint64_t a1, const UChar *a2, uint64_t a3)
{
  uint64_t v4;
  int32_t v5;

  v4 = *((_QWORD *)a2 + 1);
  if (*((char *)a2 + 23) >= 0)
  {
    v5 = *((unsigned __int8 *)a2 + 23);
  }
  else
  {
    a2 = *(const UChar **)a2;
    v5 = v4;
  }
  return morphun::util::StringViewUtils::uppercase(a1, a2, v5, a3);
}

uint64_t morphun::util::StringUtils::lowercase(uint64_t a1, const UChar *a2, uint64_t a3)
{
  uint64_t v4;
  int32_t v5;

  v4 = *((_QWORD *)a2 + 1);
  if (*((char *)a2 + 23) >= 0)
  {
    v5 = *((unsigned __int8 *)a2 + 23);
  }
  else
  {
    a2 = *(const UChar **)a2;
    v5 = v4;
  }
  return morphun::util::StringViewUtils::lowercase(a1, a2, v5, a3);
}

uint64_t morphun::util::StringUtils::reverse(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  unsigned int v3;
  char v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  __int16 v11;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  int i;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  __int16 v22;
  uint64_t v23;
  uint64_t v24;

  result = npc<std::basic_string<char16_t>>(a1);
  if (*(char *)(result + 23) < 0)
    v2 = *(_QWORD *)(result + 8);
  else
    LODWORD(v2) = *(unsigned __int8 *)(result + 23);
  v3 = v2 - 2;
  if ((int)v2 - 2 >= 0)
  {
    v4 = 0;
    v5 = v2 - 1;
    v6 = v3 >> 1;
    v7 = 2 * v5 - 2 * v6;
    do
    {
      v8 = *(char *)(result + 23);
      v9 = result;
      if (v8 < 0)
        v9 = *(_QWORD *)result;
      v10 = *(_WORD *)(v9 + 2 * v6);
      v11 = *(_WORD *)(v9 + v7);
      v13 = (v10 & 0xF800) == 0xD800 || (v11 & 0xF800) == 55296;
      v4 = (v4 & 1) != 0 || v13;
      v14 = result;
      if (v8 < 0)
        v14 = *(_QWORD *)result;
      *(_WORD *)(v14 + 2 * v6) = v11;
      v15 = result;
      if (*(char *)(result + 23) < 0)
        v15 = *(_QWORD *)result;
      *(_WORD *)(v15 + v7) = v10;
      v7 += 2;
    }
    while (v6-- > 0);
    v17 = v4 ^ 1;
    if (v5 < 1)
      v17 = 1;
    if ((v17 & 1) == 0)
    {
      for (i = 0; i < v5; ++i)
      {
        v19 = i;
        if (*(char *)(result + 23) < 0)
        {
          v20 = *(_WORD *)(*(_QWORD *)result + 2 * i);
          if ((v20 & 0xFC00) == 0xDC00)
          {
            v21 = i + 1;
            v22 = *(_WORD *)(*(_QWORD *)result + 2 * v21);
            if ((v22 & 0xFC00) == 0xD800)
            {
              v23 = *(_QWORD *)result;
              ++i;
              goto LABEL_34;
            }
          }
        }
        else
        {
          v20 = *(_WORD *)(result + 2 * i);
          if ((v20 & 0xFC00) == 0xDC00)
          {
            v21 = i + 1;
            v22 = *(_WORD *)(result + 2 * v21);
            if ((v22 & 0xFC00) == 0xD800)
            {
              ++i;
              v23 = result;
LABEL_34:
              *(_WORD *)(v23 + 2 * v19) = v22;
              v24 = result;
              if (*(char *)(result + 23) < 0)
                v24 = *(_QWORD *)result;
              *(_WORD *)(v24 + 2 * v21) = v20;
            }
          }
        }
      }
    }
  }
  return result;
}

std::string *morphun::util::StringUtils::convert(std::string *a1, uint64_t a2)
{
  uint64_t v2;
  int v3;

  v2 = *(_QWORD *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    v3 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(_QWORD *)a2;
    v3 = v2;
  }
  return morphun::util::StringViewUtils::convert(a1, a2, v3);
}

uint64_t morphun::util::StringUtils::convert(uint64_t a1, const char *a2)
{
  uint64_t v2;
  int32_t v3;

  v2 = *((_QWORD *)a2 + 1);
  if (a2[23] >= 0)
  {
    v3 = *((unsigned __int8 *)a2 + 23);
  }
  else
  {
    a2 = *(const char **)a2;
    v3 = v2;
  }
  return morphun::util::StringViewUtils::convert(a1, a2, v3);
}

void morphun::util::StringUtils::to_string(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = *(_QWORD *)(a1 + 8);
  if (*(char *)(a1 + 23) >= 0)
  {
    v3 = *(unsigned __int8 *)(a1 + 23);
  }
  else
  {
    a1 = *(_QWORD *)a1;
    v3 = v2;
  }
  morphun::util::StringViewUtils::to_string(a1, v3, a2);
}

void morphun::util::StringUtils::to_u16string(const char *a1@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  uint64_t v2;
  int32_t v3;

  v2 = *((_QWORD *)a1 + 1);
  if (a1[23] >= 0)
  {
    v3 = *((unsigned __int8 *)a1 + 23);
  }
  else
  {
    a1 = *(const char **)a1;
    v3 = v2;
  }
  morphun::util::StringViewUtils::to_u16string(a1, v3, a2);
}

void morphun::util::StringUtils::to_u16string(morphun::util::StringUtils *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(int)this, a2);
}

{
  std::string *p_p;
  int32_t v4;
  std::string __p;
  void *v6[2];
  std::basic_string<char16_t>::size_type v7;

  v6[0] = 0;
  v6[1] = 0;
  v7 = 0;
  std::to_string(&__p, (uint64_t)this);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v4 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v4 = __p.__r_.__value_.__r.__words[1];
  morphun::util::StringViewUtils::convert((uint64_t)v6, (const char *)p_p, v4);
  if (SHIBYTE(v7) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a2, (const std::basic_string<char16_t>::value_type *)v6[0], (std::basic_string<char16_t>::size_type)v6[1]);
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)v6;
    a2->__r_.__value_.__r.__words[2] = v7;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v7) < 0)
    operator delete(v6[0]);
}

void sub_1CB5014A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void morphun::util::StringUtils::to_u16string(double a1@<D0>, std::basic_string<char16_t> *a2@<X8>)
{
  std::string *p_p;
  int32_t v5;
  std::string __p;
  void *v7[2];
  std::basic_string<char16_t>::size_type v8;

  v7[0] = 0;
  v7[1] = 0;
  v8 = 0;
  std::to_string(&__p, a1);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v5 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v5 = __p.__r_.__value_.__r.__words[1];
  morphun::util::StringViewUtils::convert((uint64_t)v7, (const char *)p_p, v5);
  if (SHIBYTE(v8) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a2, (const std::basic_string<char16_t>::value_type *)v7[0], (std::basic_string<char16_t>::size_type)v7[1]);
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)v7;
    a2->__r_.__value_.__r.__words[2] = v8;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v8) < 0)
    operator delete(v7[0]);
}

void sub_1CB501578(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL morphun::util::StringUtils::endsWith(uint64_t *a1, unsigned __int16 *a2)
{
  int v2;
  unint64_t v3;
  BOOL v4;
  uint64_t *v5;
  unint64_t v6;
  unsigned __int16 *v7;
  _BOOL8 result;
  uint64_t v9;
  uint64_t v10;
  int v11;
  BOOL v12;

  v2 = *((char *)a1 + 23);
  v3 = a1[1];
  v4 = v2 < 0;
  if (v2 >= 0)
    v5 = a1;
  else
    v5 = (uint64_t *)*a1;
  if (!v4)
    v3 = *((unsigned __int8 *)a1 + 23);
  v6 = *((unsigned __int8 *)a2 + 23);
  if ((v6 & 0x80u) == 0)
    v7 = a2;
  else
    v7 = *(unsigned __int16 **)a2;
  if ((v6 & 0x80u) != 0)
    v6 = *((_QWORD *)a2 + 1);
  if (v3 < v6)
    return 0;
  if (!v6)
    return 1;
  v9 = -(uint64_t)v6;
  v10 = (uint64_t)v5 + 2 * v3;
  do
  {
    v11 = *v7++;
    result = v11 == *(unsigned __int16 *)(v10 + 2 * v9);
    v12 = v11 != *(unsigned __int16 *)(v10 + 2 * v9) || v9 == -1;
    ++v9;
  }
  while (!v12);
  return result;
}

BOOL morphun::util::StringUtils::startsWith(unsigned __int16 *a1, unsigned __int16 *a2)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  _BOOL8 result;
  unsigned __int16 *v7;
  unsigned __int16 *v8;
  unint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  BOOL v15;

  v2 = *((char *)a1 + 23);
  if (v2 >= 0)
    v3 = *((unsigned __int8 *)a1 + 23);
  else
    v3 = *((_QWORD *)a1 + 1);
  v4 = *((unsigned __int8 *)a2 + 23);
  v5 = (char)v4;
  if ((v4 & 0x80u) != 0)
    v4 = *((_QWORD *)a2 + 1);
  if (v3 < v4)
    return 0;
  if (v5 >= 0)
    v7 = a2;
  else
    v7 = *(unsigned __int16 **)a2;
  if (v2 >= 0)
    v8 = a1;
  else
    v8 = *(unsigned __int16 **)a1;
  if (!v4)
    return 1;
  v9 = v4 - 1;
  do
  {
    v11 = *v8++;
    v10 = v11;
    v13 = *v7++;
    v12 = v13;
    v15 = v9-- != 0;
    result = v12 == v10;
  }
  while (v12 == v10 && v15);
  return result;
}

uint64_t morphun::util::StringUtils::codePointAt(uint64_t a1, int a2)
{
  uint64_t v3;
  int v4;

  v3 = *(_QWORD *)(a1 + 8);
  if (*(char *)(a1 + 23) >= 0)
  {
    v4 = *(unsigned __int8 *)(a1 + 23);
  }
  else
  {
    a1 = *(_QWORD *)a1;
    v4 = v3;
  }
  return morphun::util::StringViewUtils::codePointAt(a1, v4, a2);
}

uint64_t mgcc_toSpeakableString(uint64_t a1)
{
  morphun::exception::NullPointerException *exception;

  if (!a1)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1);
}

void sub_1CB501724(_Unwind_Exception *a1, int a2)
{
  const std::exception *v2;
  void *v3;
  const void **v6;
  __CFError **v7;

  __cxa_free_exception(v3);
  if (a2 == 1)
  {
    v6 = (const void **)__cxa_begin_catch(a1);
    morphun::util::CFUtils::convert(v6, v2, v7);
    __cxa_end_catch();
    JUMPOUT(0x1CB5016E8);
  }
  _Unwind_Resume(a1);
}

uint64_t mgcc_destroy(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
  return result;
}

uint64_t **com::apple::siri::tokenizer::data::config_pl::getContent@<X0>(uint64_t **a1@<X8>)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v3 = xmmword_1E8686A40;
  v4 = 0x1CB73E8CALL;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

void morphun::exception::IllegalArgumentException::~IllegalArgumentException(std::exception *this)
{
  morphun::exception::Throwable::~Throwable(this);
  JUMPOUT(0x1D179D2ECLL);
}

double morphun::exception::IllegalArgumentException::IllegalArgumentException(morphun::exception::IllegalArgumentException *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_QWORD *)this = &off_1E8673120;
  return result;
}

{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_QWORD *)this = &off_1E8673120;
  return result;
}

_QWORD *morphun::exception::IllegalArgumentException::IllegalArgumentException(uint64_t a1, __int128 *a2)
{
  _QWORD *result;

  result = (_QWORD *)morphun::exception::Throwable::Throwable(a1, a2);
  *result = &off_1E8673120;
  return result;
}

{
  _QWORD *result;

  result = (_QWORD *)morphun::exception::Throwable::Throwable(a1, a2);
  *result = &off_1E8673120;
  return result;
}

void morphun::grammar::synthesis::EnGrammarSynthesizer_CaseLookupFunction::~EnGrammarSynthesizer_CaseLookupFunction(char **this)
{
  *this = (char *)&off_1E866E8C8;
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(this[2]);
}

{
  *this = (char *)&off_1E866E8C8;
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(this[2]);
  JUMPOUT(0x1D179D2ECLL);
}

morphun::grammar::synthesis::GrammemeConstants *morphun::grammar::synthesis::EnGrammarSynthesizer_CaseLookupFunction::getFeatureValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int32_t v4;
  const UChar *v5;
  uint64_t v6;
  uint64_t v7;
  const UChar *v8;
  int32_t v9;
  morphun::analysis::filter::NormalizeFontVariantsFilter *v10;
  unint64_t v11;
  _QWORD *v12;
  void *v13;
  std::basic_string<char16_t>::size_type v14;
  unint64_t v15;
  int v16;
  BOOL v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  char *p_p;
  char *v22;
  int v23;
  int v24;
  uint64_t v26;
  char *v27;
  char *v28;
  int v29;
  int v30;
  uint64_t v32;
  morphun::grammar::synthesis::GrammemeConstants *v33;
  __int128 *v35;
  void *__p;
  unint64_t v37;
  uint64_t v38;
  void *v39;
  unint64_t v40;
  uint64_t v41;

  v39 = 0;
  v40 = 0;
  v41 = 0;
  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
  v4 = *(unsigned __int8 *)(v3 + 23);
  v5 = *(const UChar **)v3;
  v6 = *(_QWORD *)(v3 + 8);
  v7 = morphun::util::LocaleUtils::ENGLISH((morphun::util::LocaleUtils *)v3);
  if ((v4 & 0x80u) == 0)
    v8 = (const UChar *)v3;
  else
    v8 = v5;
  if ((v4 & 0x80u) == 0)
    v9 = v4;
  else
    v9 = v6;
  v10 = (morphun::analysis::filter::NormalizeFontVariantsFilter *)morphun::util::StringViewUtils::lowercase((uint64_t)&v39, v8, v9, v7);
  v11 = HIBYTE(v41);
  if (v41 < 0)
    v11 = v40;
  if (v11 < 3)
    goto LABEL_49;
  __p = 0;
  v37 = 0;
  v38 = 0;
  v12 = (_QWORD *)morphun::analysis::filter::NormalizeFontVariantsFilter::SINGLE_QUOTES(v10);
  if (v41 >= 0)
    v13 = &v39;
  else
    v13 = v39;
  if (v41 >= 0)
    v14 = HIBYTE(v41);
  else
    v14 = v40;
  morphun::util::UnicodeSetUtils::replaceSetFromString((uint64_t)&__p, v12, (uint64_t)v13, v14, L"'", 1uLL);
  v15 = HIBYTE(v38);
  v16 = SHIBYTE(v38);
  if (v38 < 0)
    v15 = v37;
  v17 = v15 >= 2;
  v18 = v15 - 2;
  if (!v17)
    goto LABEL_19;
  v20 = 0;
  p_p = (char *)__p;
  if (v38 >= 0)
    p_p = (char *)&__p;
  v22 = &p_p[2 * v18];
  do
  {
    v23 = *(unsigned __int16 *)&v22[v20 * 2];
    v24 = (unsigned __int16)aS_3[v20];
  }
  while (v24 == v23 && v20++ != 1);
  if (v24 != v23)
  {
    v26 = 0;
    v27 = (char *)__p;
    if (v38 >= 0)
      v27 = (char *)&__p;
    v28 = &v27[2 * v18];
    do
    {
      v29 = *(unsigned __int16 *)&v28[v26 * 2];
      v30 = (unsigned __int16)word_1CB735C06[v26];
    }
    while (v30 == v29 && v26++ != 1);
    if (v30 != v29)
    {
LABEL_19:
      if (SHIBYTE(v38) < 0)
      {
        v19 = (char *)__p;
        if (v37 != 3)
        {
LABEL_48:
          operator delete(v19);
          goto LABEL_49;
        }
      }
      else
      {
        if (SHIBYTE(v38) != 3)
          goto LABEL_49;
        v19 = (char *)&__p;
      }
      v32 = 0;
      while (aIts[v32] == *(_WORD *)&v19[v32 * 2])
      {
        if (++v32 == 3)
          goto LABEL_45;
      }
LABEL_46:
      if (v16 < 0)
      {
        v19 = (char *)__p;
        goto LABEL_48;
      }
LABEL_49:
      v33 = 0;
      goto LABEL_50;
    }
  }
LABEL_45:
  if (a1 + 16 != std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a1 + 8, (unsigned __int16 *)&__p))goto LABEL_46;
  v33 = (morphun::grammar::synthesis::GrammemeConstants *)operator new();
  v35 = (__int128 *)morphun::grammar::synthesis::GrammemeConstants::CASE_GENITIVE(v33);
  morphun::dialog::SpeakableString::SpeakableString(v33, v35);
  if (SHIBYTE(v38) < 0)
    operator delete(__p);
LABEL_50:
  if (SHIBYTE(v41) < 0)
    operator delete(v39);
  return v33;
}

void sub_1CB501B54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  uint64_t v20;

  MEMORY[0x1D179D2EC](v20, 0x10B3C40F7FF9C27);
  if (a14 < 0)
    operator delete(__p);
  if (a20 < 0)
    operator delete(a15);
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<std::basic_string<char16_t>>::__emplace_unique_key_args<std::basic_string<char16_t>,std::basic_string<char16_t> const&>(uint64_t **a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t *result;
  uint64_t **v6;
  uint64_t *v7;
  uint64_t v8;

  result = std::__tree<std::basic_string<char16_t>>::__find_equal<std::basic_string<char16_t>>((uint64_t)a1, &v8, a2);
  if (!*result)
  {
    v6 = (uint64_t **)result;
    std::__tree<std::basic_string<char16_t>>::__construct_node<std::basic_string<char16_t> const&>((uint64_t)&v7, (uint64_t)a1, a3);
    return std::__tree<std::u16string_view>::__insert_node_at(a1, v8, v6, v7);
  }
  return result;
}

void morphun::analysis::tokenizer::MorphologicalWordToken::toString(morphun::analysis::tokenizer::MorphologicalWordToken *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  uint64_t v2;
  char *v3;
  unsigned __int8 *v4;
  std::basic_string<char16_t>::size_type v5;
  int v6;
  void *v7;
  std::basic_string<char16_t> *v8;
  std::basic_string<char16_t>::size_type size;
  int v10;
  const std::basic_string<char16_t>::value_type *v11;
  std::basic_string<char16_t>::size_type v12;
  int v13;
  void *v14;
  std::basic_string<char16_t> *v15;
  std::basic_string<char16_t>::size_type v16;
  char *v17;
  int v18;
  int v19;
  void *v20;
  std::basic_string<char16_t> *v21;
  std::basic_string<char16_t>::size_type v22;
  void **v23;
  std::basic_string<char16_t>::size_type v24;
  int v25;
  int v26;
  void *v27;
  std::basic_string<char16_t> *v28;
  std::basic_string<char16_t>::size_type v29;
  void **v30;
  std::basic_string<char16_t>::size_type v31;
  int v32;
  const std::basic_string<char16_t>::value_type *v33;
  std::basic_string<char16_t>::size_type v34;
  void **v35;
  std::basic_string<char16_t>::size_type v36;
  int v37;
  const std::basic_string<char16_t>::value_type *v38;
  std::basic_string<char16_t>::size_type v39;
  void **v40;
  std::basic_string<char16_t>::size_type v41;
  morphun::util::StringUtils *v42;
  int v43;
  void *v44;
  std::basic_string<char16_t> *v45;
  std::basic_string<char16_t>::size_type v46;
  void **v47;
  std::basic_string<char16_t>::size_type v48;
  std::basic_string<char16_t> *v49;
  std::basic_string<char16_t>::size_type v50;
  void **v51;
  std::basic_string<char16_t>::size_type v52;
  void *__p[2];
  unsigned __int8 v56;
  void *v57[2];
  unsigned __int8 v58;
  std::basic_string<char16_t> v59;
  void *v60[2];
  unsigned __int8 v61;
  void *v62[2];
  unsigned __int8 v63;
  void *v64[2];
  unsigned __int8 v65;
  std::basic_string<char16_t> v66;
  void *v67[2];
  unsigned __int8 v68;
  std::basic_string<char16_t> v69;
  std::basic_string<char16_t> __dst;
  std::basic_string<char16_t> v71;
  std::basic_string<char16_t> v72;
  std::basic_string<char16_t> v73;
  std::basic_string<char16_t> v74;
  std::basic_string<char16_t> v75;
  std::basic_string<char16_t> v76;
  std::basic_string<char16_t> v77;
  std::basic_string<char16_t> v78;
  std::basic_string<char16_t> v79;
  std::basic_string<char16_t> v80;
  std::basic_string<char16_t> v81;
  std::basic_string<char16_t> v82;

  memset(&v82, 0, sizeof(v82));
  v2 = *((_QWORD *)this + 12);
  v3 = (char *)*((_QWORD *)this + 13);
  if ((char *)v2 != v3)
  {
    v4 = (unsigned __int8 *)(v2 + 47);
    do
    {
      morphun::util::StringUtils::to_u16string(*(morphun::util::StringUtils **)(v4 - 39), &v75);
      std::basic_string<char16_t>::insert(&v75, (std::basic_string<char16_t>::size_type)L"{surfaceFormGrammemes=", (const std::basic_string<char16_t>::value_type *)0x16, v5);
      v76 = v75;
      memset(&v75, 0, sizeof(v75));
      std::basic_string<char16_t>::append(&v76, (const std::basic_string<char16_t>::value_type *)",", 0x11uLL);
      v77 = v76;
      memset(&v76, 0, sizeof(v76));
      morphun::util::StringUtils::to_u16string(*(morphun::util::StringUtils **)(v4 - 31), &v74);
      v6 = SHIBYTE(v74.__r_.__value_.__r.__words[2]);
      v7 = (void *)v74.__r_.__value_.__r.__words[0];
      if ((v74.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v8 = &v74;
      else
        v8 = (std::basic_string<char16_t> *)v74.__r_.__value_.__r.__words[0];
      if ((v74.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        size = HIBYTE(v74.__r_.__value_.__r.__words[2]);
      else
        size = v74.__r_.__value_.__l.__size_;
      std::basic_string<char16_t>::append(&v77, (const std::basic_string<char16_t>::value_type *)v8, size);
      v78 = v77;
      memset(&v77, 0, sizeof(v77));
      std::basic_string<char16_t>::append(&v78, (const std::basic_string<char16_t>::value_type *)",", 8uLL);
      v79 = v78;
      memset(&v78, 0, sizeof(v78));
      v10 = (char)*v4;
      if (v10 >= 0)
        v11 = (const std::basic_string<char16_t>::value_type *)(v4 - 23);
      else
        v11 = *(const std::basic_string<char16_t>::value_type **)(v4 - 23);
      if (v10 >= 0)
        v12 = *v4;
      else
        v12 = *(_QWORD *)(v4 - 15);
      std::basic_string<char16_t>::append(&v79, v11, v12);
      v80 = v79;
      memset(&v79, 0, sizeof(v79));
      std::basic_string<char16_t>::append(&v80, (const std::basic_string<char16_t>::value_type *)"}", 1uLL);
      v81 = v80;
      memset(&v80, 0, sizeof(v80));
      v13 = SHIBYTE(v81.__r_.__value_.__r.__words[2]);
      v14 = (void *)v81.__r_.__value_.__r.__words[0];
      if ((v81.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v15 = &v81;
      else
        v15 = (std::basic_string<char16_t> *)v81.__r_.__value_.__r.__words[0];
      if ((v81.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v16 = HIBYTE(v81.__r_.__value_.__r.__words[2]);
      else
        v16 = v81.__r_.__value_.__l.__size_;
      std::basic_string<char16_t>::append(&v82, (const std::basic_string<char16_t>::value_type *)v15, v16);
      if (v13 < 0)
        operator delete(v14);
      if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v80.__r_.__value_.__l.__data_);
      if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v79.__r_.__value_.__l.__data_);
      if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v78.__r_.__value_.__l.__data_);
        if (v6 < 0)
LABEL_38:
          operator delete(v7);
      }
      else if (v6 < 0)
      {
        goto LABEL_38;
      }
      if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v77.__r_.__value_.__l.__data_);
      if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v76.__r_.__value_.__l.__data_);
      if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v75.__r_.__value_.__l.__data_);
      v17 = (char *)(v4 + 1);
      v4 += 48;
    }
    while (v17 != v3);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"MorphologicalWordToken{begin=");
  v18 = (*(uint64_t (**)(morphun::analysis::tokenizer::MorphologicalWordToken *))(*(_QWORD *)this + 24))(this);
  morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)v18, &v69);
  v19 = SHIBYTE(v69.__r_.__value_.__r.__words[2]);
  v20 = (void *)v69.__r_.__value_.__r.__words[0];
  if ((v69.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v21 = &v69;
  else
    v21 = (std::basic_string<char16_t> *)v69.__r_.__value_.__r.__words[0];
  if ((v69.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v22 = HIBYTE(v69.__r_.__value_.__r.__words[2]);
  else
    v22 = v69.__r_.__value_.__l.__size_;
  std::basic_string<char16_t>::append(&__dst, (const std::basic_string<char16_t>::value_type *)v21, v22);
  v71 = __dst;
  memset(&__dst, 0, sizeof(__dst));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v67, (char *)L", end=");
  if ((v68 & 0x80u) == 0)
    v23 = v67;
  else
    v23 = (void **)v67[0];
  if ((v68 & 0x80u) == 0)
    v24 = v68;
  else
    v24 = (std::basic_string<char16_t>::size_type)v67[1];
  std::basic_string<char16_t>::append(&v71, (const std::basic_string<char16_t>::value_type *)v23, v24);
  v72 = v71;
  memset(&v71, 0, sizeof(v71));
  v25 = (*(uint64_t (**)(morphun::analysis::tokenizer::MorphologicalWordToken *))(*(_QWORD *)this + 32))(this);
  morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)v25, &v66);
  v26 = SHIBYTE(v66.__r_.__value_.__r.__words[2]);
  v27 = (void *)v66.__r_.__value_.__r.__words[0];
  if ((v66.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v28 = &v66;
  else
    v28 = (std::basic_string<char16_t> *)v66.__r_.__value_.__r.__words[0];
  if ((v66.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v29 = HIBYTE(v66.__r_.__value_.__r.__words[2]);
  else
    v29 = v66.__r_.__value_.__l.__size_;
  std::basic_string<char16_t>::append(&v72, (const std::basic_string<char16_t>::value_type *)v28, v29);
  v73 = v72;
  memset(&v72, 0, sizeof(v72));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v64, ",");
  if ((v65 & 0x80u) == 0)
    v30 = v64;
  else
    v30 = (void **)v64[0];
  if ((v65 & 0x80u) == 0)
    v31 = v65;
  else
    v31 = (std::basic_string<char16_t>::size_type)v64[1];
  std::basic_string<char16_t>::append(&v73, (const std::basic_string<char16_t>::value_type *)v30, v31);
  v74 = v73;
  memset(&v73, 0, sizeof(v73));
  v32 = *((char *)this + 39);
  if (v32 >= 0)
    v33 = (const std::basic_string<char16_t>::value_type *)((char *)this + 16);
  else
    v33 = (const std::basic_string<char16_t>::value_type *)*((_QWORD *)this + 2);
  if (v32 >= 0)
    v34 = *((unsigned __int8 *)this + 39);
  else
    v34 = *((_QWORD *)this + 3);
  std::basic_string<char16_t>::append(&v74, v33, v34);
  v75 = v74;
  memset(&v74, 0, sizeof(v74));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v62, "'");
  if ((v63 & 0x80u) == 0)
    v35 = v62;
  else
    v35 = (void **)v62[0];
  if ((v63 & 0x80u) == 0)
    v36 = v63;
  else
    v36 = (std::basic_string<char16_t>::size_type)v62[1];
  std::basic_string<char16_t>::append(&v75, (const std::basic_string<char16_t>::value_type *)v35, v36);
  v76 = v75;
  memset(&v75, 0, sizeof(v75));
  v37 = *((char *)this + 63);
  if (v37 >= 0)
    v38 = (const std::basic_string<char16_t>::value_type *)((char *)this + 40);
  else
    v38 = (const std::basic_string<char16_t>::value_type *)*((_QWORD *)this + 5);
  if (v37 >= 0)
    v39 = *((unsigned __int8 *)this + 63);
  else
    v39 = *((_QWORD *)this + 6);
  std::basic_string<char16_t>::append(&v76, v38, v39);
  v77 = v76;
  memset(&v76, 0, sizeof(v76));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v60, (char *)L"', grammemes=");
  if ((v61 & 0x80u) == 0)
    v40 = v60;
  else
    v40 = (void **)v60[0];
  if ((v61 & 0x80u) == 0)
    v41 = v61;
  else
    v41 = (std::basic_string<char16_t>::size_type)v60[1];
  std::basic_string<char16_t>::append(&v77, (const std::basic_string<char16_t>::value_type *)v40, v41);
  v78 = v77;
  memset(&v77, 0, sizeof(v77));
  v42 = (morphun::util::StringUtils *)(*(uint64_t (**)(morphun::analysis::tokenizer::MorphologicalWordToken *))(*(_QWORD *)this + 56))(this);
  morphun::util::StringUtils::to_u16string(v42, &v59);
  v43 = SHIBYTE(v59.__r_.__value_.__r.__words[2]);
  v44 = (void *)v59.__r_.__value_.__r.__words[0];
  if ((v59.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v45 = &v59;
  else
    v45 = (std::basic_string<char16_t> *)v59.__r_.__value_.__r.__words[0];
  if ((v59.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v46 = HIBYTE(v59.__r_.__value_.__r.__words[2]);
  else
    v46 = v59.__r_.__value_.__l.__size_;
  std::basic_string<char16_t>::append(&v78, (const std::basic_string<char16_t>::value_type *)v45, v46);
  v79 = v78;
  memset(&v78, 0, sizeof(v78));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v57, (char *)L", lemmaMappings={");
  if ((v58 & 0x80u) == 0)
    v47 = v57;
  else
    v47 = (void **)v57[0];
  if ((v58 & 0x80u) == 0)
    v48 = v58;
  else
    v48 = (std::basic_string<char16_t>::size_type)v57[1];
  std::basic_string<char16_t>::append(&v79, (const std::basic_string<char16_t>::value_type *)v47, v48);
  v80 = v79;
  memset(&v79, 0, sizeof(v79));
  if ((v82.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v49 = &v82;
  else
    v49 = (std::basic_string<char16_t> *)v82.__r_.__value_.__r.__words[0];
  if ((v82.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v50 = HIBYTE(v82.__r_.__value_.__r.__words[2]);
  else
    v50 = v82.__r_.__value_.__l.__size_;
  std::basic_string<char16_t>::append(&v80, (const std::basic_string<char16_t>::value_type *)v49, v50);
  v81 = v80;
  memset(&v80, 0, sizeof(v80));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"}}");
  if ((v56 & 0x80u) == 0)
    v51 = __p;
  else
    v51 = (void **)__p[0];
  if ((v56 & 0x80u) == 0)
    v52 = v56;
  else
    v52 = (std::basic_string<char16_t>::size_type)__p[1];
  std::basic_string<char16_t>::append(&v81, (const std::basic_string<char16_t>::value_type *)v51, v52);
  *a2 = v81;
  memset(&v81, 0, sizeof(v81));
  if ((char)v56 < 0)
  {
    operator delete(__p[0]);
    if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v81.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v80.__r_.__value_.__l.__data_);
  if ((char)v58 < 0)
    operator delete(v57[0]);
  if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v79.__r_.__value_.__l.__data_);
    if ((v43 & 0x80000000) == 0)
      goto LABEL_120;
  }
  else if ((v43 & 0x80000000) == 0)
  {
    goto LABEL_120;
  }
  operator delete(v44);
LABEL_120:
  if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v78.__r_.__value_.__l.__data_);
  if ((char)v61 < 0)
    operator delete(v60[0]);
  if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v77.__r_.__value_.__l.__data_);
  if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v76.__r_.__value_.__l.__data_);
  if ((char)v63 < 0)
    operator delete(v62[0]);
  if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v75.__r_.__value_.__l.__data_);
  if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v74.__r_.__value_.__l.__data_);
  if ((char)v65 < 0)
    operator delete(v64[0]);
  if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v73.__r_.__value_.__l.__data_);
    if ((v26 & 0x80000000) == 0)
      goto LABEL_138;
  }
  else if ((v26 & 0x80000000) == 0)
  {
    goto LABEL_138;
  }
  operator delete(v27);
LABEL_138:
  if (SHIBYTE(v72.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v72.__r_.__value_.__l.__data_);
  if ((char)v68 < 0)
    operator delete(v67[0]);
  if (SHIBYTE(v71.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v71.__r_.__value_.__l.__data_);
    if ((v19 & 0x80000000) == 0)
      goto LABEL_144;
  }
  else if ((v19 & 0x80000000) == 0)
  {
    goto LABEL_144;
  }
  operator delete(v20);
LABEL_144:
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v82.__r_.__value_.__l.__data_);
}

void sub_1CB502380(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *a38,uint64_t a39,int a40,__int16 a41,char a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52,uint64_t a53,uint64_t a54,uint64_t a55,void *a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,void *a62,uint64_t a63)
{
  char a67;
  void *a69;
  char a72;
  void *a73;
  char a74;
  void *a75;
  char a76;
  void *a77;
  char a78;
  void *a79;
  char a80;
  void *a81;
  char a82;
  void *v82;
  void *v83;
  void *v84;
  int v85;
  int v86;
  int v87;
  uint64_t v88;

  if (a16 < 0)
    operator delete(__p);
  if (*(char *)(v88 - 121) < 0)
    operator delete(*(void **)(v88 - 144));
  if (*(char *)(v88 - 153) < 0)
    operator delete(*(void **)(v88 - 176));
  if (a22 < 0)
    operator delete(a17);
  if (*(char *)(v88 - 185) < 0)
    operator delete(*(void **)(v88 - 208));
  if (v87 < 0)
    operator delete(v84);
  if (*(char *)(v88 - 217) < 0)
    operator delete(*(void **)(v88 - 240));
  if (a31 < 0)
    operator delete(a26);
  if (a82 < 0)
    operator delete(a81);
  if (a80 < 0)
    operator delete(a79);
  if (a37 < 0)
    operator delete(a32);
  if (a78 < 0)
    operator delete(a77);
  if (a76 < 0)
    operator delete(a75);
  if (a43 < 0)
    operator delete(a38);
  if (a74 < 0)
    operator delete(a73);
  if (v86 < 0)
    operator delete(v83);
  if (a72 < 0)
    operator delete(a69);
  if (a52 < 0)
    operator delete(a47);
  if (a67 < 0)
    operator delete(a62);
  if (v85 < 0)
    operator delete(v82);
  if (a61 < 0)
    operator delete(a56);
  if (*(char *)(v88 - 89) < 0)
    operator delete(*(void **)(v88 - 112));
  _Unwind_Resume(a1);
}

void morphun::analysis::tokenizer::MorphologicalWordToken::~MorphologicalWordToken(void **this)
{
  void **v2;

  *this = &off_1E8672EA8;
  v2 = this + 12;
  std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__destroy_vector::operator()[abi:ne180100](&v2);
  morphun::Token::~Token(this, (void **)&off_1E8669DB8);
}

{
  void **v2;

  *this = &off_1E8672EA8;
  v2 = this + 12;
  std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__destroy_vector::operator()[abi:ne180100](&v2);
  morphun::Token::~Token(this, (void **)&off_1E8669DB8);
  JUMPOUT(0x1D179D2ECLL);
}

morphun::Token *morphun::analysis::tokenizer::MorphologicalWordToken::newInstance(morphun::analysis::tokenizer::MorphologicalWordToken *this, int a2)
{
  morphun::Token *v4;
  int v5;
  int v6;
  void *v7;
  char *v8;
  void *v9;
  int v10;
  void *v11;
  unint64_t v12;
  int v13;
  void *v14;
  unint64_t v15;

  v4 = (morphun::Token *)operator new();
  v5 = (*(uint64_t (**)(morphun::analysis::tokenizer::MorphologicalWordToken *))(*(_QWORD *)this + 24))(this);
  v6 = (*(uint64_t (**)(morphun::analysis::tokenizer::MorphologicalWordToken *))(*(_QWORD *)this + 32))(this);
  v9 = (void *)*((_QWORD *)this + 2);
  v8 = (char *)this + 16;
  v7 = v9;
  v10 = v8[23];
  if (v10 >= 0)
    v11 = v8;
  else
    v11 = v7;
  if (v10 >= 0)
    v12 = v8[23];
  else
    v12 = *((_QWORD *)v8 + 1);
  v13 = v8[47];
  if (v13 >= 0)
    v14 = v8 + 24;
  else
    v14 = (void *)*((_QWORD *)v8 + 3);
  if (v13 >= 0)
    v15 = v8[47];
  else
    v15 = *((_QWORD *)v8 + 4);
  morphun::analysis::tokenizer::MorphologicalWordToken::MorphologicalWordToken(v4, v5 - a2, v6 - a2, v11, v12, v14, v15, v8[48], *((_QWORD *)v8 + 9), (uint64_t *)v8 + 10);
  return v4;
}

void sub_1CB5027BC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10B3C4057596481);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::tokenizer::MorphologicalWordToken::getGrammemes(morphun::analysis::tokenizer::MorphologicalWordToken *this)
{
  return *((_QWORD *)this + 11);
}

uint64_t morphun::analysis::tokenizer::MorphologicalWordToken::getLemmaMappings(morphun::analysis::tokenizer::MorphologicalWordToken *this)
{
  return (uint64_t)this + 96;
}

morphun::Token *morphun::analysis::tokenizer::MorphologicalWordToken::MorphologicalWordToken(morphun::Token *a1, int a2, int a3, void *__src, unint64_t a5, void *a6, unint64_t a7, char a8, uint64_t a9, uint64_t *a10)
{
  morphun::Token *v11;

  *(_QWORD *)a1 = &off_1E86646D8;
  v11 = morphun::Token::Token(a1, (uint64_t *)&off_1E8669DB8, a2, a3, __src, a5, a6, a7, a8);
  *(_QWORD *)v11 = &off_1E8672EA8;
  *((_QWORD *)v11 + 11) = a9;
  *((_QWORD *)v11 + 13) = 0;
  *((_QWORD *)v11 + 14) = 0;
  *((_QWORD *)v11 + 12) = 0;
  std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__init_with_size[abi:ne180100]<morphun::analysis::tokenattributes::LemmaMapping*,morphun::analysis::tokenattributes::LemmaMapping*>((_QWORD *)v11 + 12, *a10, a10[1], 0xAAAAAAAAAAAAAAABLL * ((a10[1] - *a10) >> 4));
  return a1;
}

void sub_1CB502890(_Unwind_Exception *a1)
{
  void **v1;

  morphun::Token::~Token(v1, (void **)&off_1E8669DB8);
  _Unwind_Resume(a1);
}

_QWORD *std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__init_with_size[abi:ne180100]<morphun::analysis::tokenattributes::LemmaMapping*,morphun::analysis::tokenattributes::LemmaMapping*>(_QWORD *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;

  if (a4)
  {
    v6 = result;
    std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__vallocate[abi:ne180100](result, a4);
    result = (_QWORD *)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<morphun::analysis::tokenattributes::LemmaMapping>,morphun::analysis::tokenattributes::LemmaMapping*,morphun::analysis::tokenattributes::LemmaMapping*,morphun::analysis::tokenattributes::LemmaMapping*>(a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_1CB50290C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

morphun::Token *morphun::analysis::tokenizer::MorphologicalWordToken::MorphologicalWordToken(morphun::Token *a1, uint64_t *a2, int a3, int a4, void *a5, unint64_t a6, void *a7, unint64_t a8, char a9, uint64_t a10, uint64_t *a11)
{
  morphun::Token *v13;
  uint64_t v14;
  uint64_t v15;

  v13 = morphun::Token::Token(a1, a2 + 2, a3, a4, a5, a6, a7, a8, a9);
  v14 = a2[1];
  *(_QWORD *)v13 = v14;
  *(_QWORD *)((char *)v13 + *(_QWORD *)(v14 - 64)) = a2[5];
  *(_QWORD *)((char *)v13 + *(_QWORD *)(*(_QWORD *)v13 - 40)) = a2[6];
  v15 = *a2;
  *(_QWORD *)v13 = *a2;
  *(_QWORD *)((char *)v13 + *(_QWORD *)(v15 - 64)) = a2[7];
  *(_QWORD *)((char *)v13 + *(_QWORD *)(*(_QWORD *)v13 - 40)) = a2[8];
  *((_QWORD *)v13 + 12) = 0;
  v13 = (morphun::Token *)((char *)v13 + 96);
  *((_QWORD *)v13 - 1) = a10;
  *((_QWORD *)v13 + 1) = 0;
  *((_QWORD *)v13 + 2) = 0;
  std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__init_with_size[abi:ne180100]<morphun::analysis::tokenattributes::LemmaMapping*,morphun::analysis::tokenattributes::LemmaMapping*>(v13, *a11, a11[1], 0xAAAAAAAAAAAAAAABLL * ((a11[1] - *a11) >> 4));
  return a1;
}

void sub_1CB5029F0(_Unwind_Exception *a1)
{
  void **v1;
  void **v2;

  morphun::Token::~Token(v1, v2);
  _Unwind_Resume(a1);
}

void `virtual thunk to'morphun::analysis::tokenizer::MorphologicalWordToken::toString(morphun::analysis::tokenizer::MorphologicalWordToken *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  morphun::analysis::tokenizer::MorphologicalWordToken::toString((morphun::analysis::tokenizer::MorphologicalWordToken *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 24)), a2);
}

std::basic_string<char16_t> *morphun::util::StringViewUtils::replace(std::basic_string<char16_t> *a1, uint64_t a2, std::basic_string<char16_t>::size_type a3, unsigned __int16 *a4, unint64_t a5, __int16 *a6, unint64_t a7)
{
  unint64_t v14;
  unint64_t v15;
  __int16 *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  std::basic_string<char16_t>::size_type v20;
  std::basic_string<char16_t>::size_type v21;
  __int16 *v22;
  uint64_t v23;
  std::basic_string<char16_t> *v24;
  uint64_t v25;
  uint64_t v26;
  std::basic_string<char16_t>::size_type v27;
  std::basic_string<char16_t>::size_type v28;

  if (*(char *)(npc<std::basic_string<char16_t>>((uint64_t)a1) + 23) < 0)
    v14 = (a1->__r_.__value_.__r.__words[2] & 0x7FFFFFFFFFFFFFFFLL) - 1;
  else
    v14 = 10;
  if (a3 >= v14 && a5 <= a7)
    std::basic_string<char16_t>::reserve(a1, a3);
  v15 = 0;
  v16 = &a6[a7];
  while (1)
  {
    v17 = std::u16string_view::find[abi:ne180100](a2, a3, a4, a5, v15);
    v22 = (__int16 *)(a2 + 2 * v15);
    if (v17 == -1)
      break;
    v23 = v17;
    v24 = std::basic_string<char16_t>::append<char16_t const*,0>(a1, v22, (__int16 *)(a2 + 2 * v17), v18, v19, v20, v21);
    std::basic_string<char16_t>::append<char16_t const*,0>(v24, a6, v16, v25, v26, v27, v28);
    v15 = v23 + a5;
  }
  return std::basic_string<char16_t>::append<char16_t const*,0>(a1, v22, (__int16 *)(a2 + 2 * a3), v18, v19, v20, v21);
}

void sub_1CB502B44(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t std::u16string_view::find[abi:ne180100](uint64_t a1, unint64_t a2, unsigned __int16 *a3, uint64_t a4, unint64_t a5)
{
  unsigned __int16 *v5;
  unsigned __int16 *v6;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;

  if (a2 < a5)
    return -1;
  if (a4)
  {
    v5 = (unsigned __int16 *)(a1 + 2 * a5);
    v6 = (unsigned __int16 *)(a1 + 2 * a2);
    for (i = v6 - v5; i >= a4; i = v6 - v5)
    {
      if (i - a4 == -1)
        break;
      v9 = i + 1;
      while (*v5 != *a3)
      {
        ++v5;
        if (a4 == --v9)
          goto LABEL_5;
      }
      v10 = 0;
      while (a3[v10] == v5[v10])
      {
        if (a4 == ++v10)
          goto LABEL_6;
      }
      ++v5;
    }
LABEL_5:
    v5 = (unsigned __int16 *)(a1 + 2 * a2);
LABEL_6:
    if (v5 == v6)
      return -1;
    else
      return ((uint64_t)v5 - a1) >> 1;
  }
  return a5;
}

std::basic_string<char16_t> *std::basic_string<char16_t>::append<char16_t const*,0>(std::basic_string<char16_t> *this, __int16 *a2, __int16 *a3, uint64_t a4, uint64_t a5, std::basic_string<char16_t>::size_type a6, std::basic_string<char16_t>::size_type a7)
{
  __int16 *v8;
  unint64_t v10;
  uint64_t v11;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t>::size_type v13;
  std::basic_string<char16_t> *v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  void *v18;
  const std::basic_string<char16_t>::value_type *v19;
  std::basic_string<char16_t>::size_type v20;
  std::basic_string<char16_t> *v21;
  __int16 *v22;
  __int16 v23;
  std::basic_string<char16_t>::size_type v24;
  _QWORD v26[2];
  unsigned __int8 v27;

  v8 = a2;
  LODWORD(v10) = SHIBYTE(this->__r_.__value_.__r.__words[2]);
  if ((v10 & 0x80000000) != 0)
  {
    v11 = (char *)a3 - (char *)a2;
    if (a3 == a2)
      return this;
    size = this->__r_.__value_.__l.__size_;
    v15 = this->__r_.__value_.__r.__words[2];
    v13 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
    v14 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
    v10 = HIBYTE(v15);
  }
  else
  {
    v11 = (char *)a3 - (char *)a2;
    if (a3 == a2)
      return this;
    size = HIBYTE(this->__r_.__value_.__r.__words[2]);
    v13 = 10;
    v14 = this;
  }
  v16 = v11 >> 1;
  if (v14 > (std::basic_string<char16_t> *)v8 || &v14->__r_.__value_.__s.__data_[size + 1] <= v8)
  {
    if (v13 - size < v16)
    {
      std::basic_string<char16_t>::__grow_by(this, v13, size - v13 + v16, size, size, a6, a7);
      this->__r_.__value_.__l.__size_ = size;
      LOBYTE(v10) = *((_BYTE *)&this->__r_.__value_.__s + 23);
    }
    v21 = this;
    if ((v10 & 0x80) != 0)
      v21 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
    v22 = (__int16 *)((char *)v21 + 2 * size);
    while (v8 != a3)
    {
      v23 = *v8++;
      *v22++ = v23;
    }
    *v22 = 0;
    v24 = v16 + size;
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
      this->__r_.__value_.__l.__size_ = v24;
    else
      *((_BYTE *)&this->__r_.__value_.__s + 23) = v24 & 0x7F;
  }
  else
  {
    std::basic_string<char16_t>::__init_with_size[abi:ne180100]<char16_t const*,char16_t const*>(v26, v8, a3, v16);
    v17 = (char)v27;
    v18 = (void *)v26[0];
    if ((v27 & 0x80u) == 0)
      v19 = (const std::basic_string<char16_t>::value_type *)v26;
    else
      v19 = (const std::basic_string<char16_t>::value_type *)v26[0];
    if ((v27 & 0x80u) == 0)
      v20 = v27;
    else
      v20 = v26[1];
    std::basic_string<char16_t>::append(this, v19, v20);
    if (v17 < 0)
      operator delete(v18);
  }
  return this;
}

void sub_1CB502D60(_Unwind_Exception *exception_object)
{
  void *v1;
  int v2;

  if (v2 < 0)
    operator delete(v1);
  _Unwind_Resume(exception_object);
}

_QWORD *std::basic_string<char16_t>::__init_with_size[abi:ne180100]<char16_t const*,char16_t const*>(_QWORD *result, __int16 *a2, __int16 *a3, unint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;

  if (a4 >= 0x7FFFFFFFFFFFFFF8)
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  v7 = result;
  if (a4 > 0xA)
  {
    v8 = (a4 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((a4 | 3) != 0xB)
      v8 = a4 | 3;
    result = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v8 + 1);
    v7[1] = a4;
    v7[2] = v9 | 0x8000000000000000;
    *v7 = result;
    v7 = result;
  }
  else
  {
    *((_BYTE *)result + 23) = a4;
  }
  while (a2 != a3)
  {
    v10 = *a2++;
    *(_WORD *)v7 = v10;
    v7 = (_QWORD *)((char *)v7 + 2);
  }
  *(_WORD *)v7 = 0;
  return result;
}

uint64_t morphun::util::StringViewUtils::trim(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;

  if ((int)a2 < 1)
  {
    v3 = 0;
  }
  else
  {
    v2 = 0;
    while (*(unsigned __int16 *)(a1 + 2 * v2) <= 0x20u)
    {
      if (a2 == ++v2)
      {
        v3 = a2;
        goto LABEL_8;
      }
    }
    v3 = v2;
  }
LABEL_8:
  v4 = (int)a2;
  do
  {
    if (v4 <= (int)v3)
      break;
    v5 = v4--;
  }
  while (*(unsigned __int16 *)(a1 - 2 + 2 * v5) < 0x21u);
  if (a2 < v3)
    std::__throw_out_of_range[abi:ne180100]("string_view::substr");
  return a1 + 2 * v3;
}

uint64_t morphun::util::StringViewUtils::isAllLowerCase(uint64_t a1, uint64_t a2)
{
  int v2;
  int v4;
  unsigned int v5;
  BOOL v6;
  uint64_t result;
  int v8;

  if (!a2)
    return 0;
  v2 = a2;
  if ((int)a2 < 1)
    return 1;
  v4 = 0;
  do
  {
    v5 = morphun::util::StringViewUtils::codePointAt(a1, v2, v4);
    v6 = v5 == MEMORY[0x1D179D634]();
    result = v6;
    if (!v6)
      break;
    result = 1;
    v8 = v5 < 0x10000 ? 1 : 2;
    v4 += v8;
  }
  while (v4 < v2);
  return result;
}

uint64_t morphun::util::StringViewUtils::isAllUpperCase(uint64_t a1, uint64_t a2)
{
  int v2;
  int v4;
  unsigned int v5;
  BOOL v6;
  uint64_t result;
  int v8;

  if (!a2)
    return 0;
  v2 = a2;
  if ((int)a2 < 1)
    return 1;
  v4 = 0;
  do
  {
    v5 = morphun::util::StringViewUtils::codePointAt(a1, v2, v4);
    v6 = v5 == MEMORY[0x1D179D640]();
    result = v6;
    if (!v6)
      break;
    result = 1;
    v8 = v5 < 0x10000 ? 1 : 2;
    v4 += v8;
  }
  while (v4 < v2);
  return result;
}

std::basic_string<char16_t> *morphun::util::StringViewUtils::capitalizeFirst@<X0>(UChar *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unsigned int v8;
  int v9;
  const UChar *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  std::basic_string<char16_t>::size_type v14;
  std::basic_string<char16_t>::size_type v15;
  uint64_t v16;

  if (a2 < 2)
  {
    if (a2 == 1)
    {
      *(_QWORD *)a4 = 0;
      *(_QWORD *)(a4 + 8) = 0;
      *(_QWORD *)(a4 + 16) = 0;
      return (std::basic_string<char16_t> *)morphun::util::StringViewUtils::uppercase(a4, a1, 1, a3);
    }
    return (std::basic_string<char16_t> *)std::basic_string<char16_t>::__init_with_size[abi:ne180100]<char16_t const*,char16_t const*>((_QWORD *)a4, (__int16 *)a1, (__int16 *)&a1[a2], (uint64_t)(2 * a2) >> 1);
  }
  v8 = morphun::util::StringViewUtils::codePointAt((uint64_t)a1, a2, 0);
  if (u_isupper(v8))
    return (std::basic_string<char16_t> *)std::basic_string<char16_t>::__init_with_size[abi:ne180100]<char16_t const*,char16_t const*>((_QWORD *)a4, (__int16 *)a1, (__int16 *)&a1[a2], (uint64_t)(2 * a2) >> 1);
  *(_QWORD *)a4 = 0;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  morphun::util::StringUtils::appendCodePoint((std::basic_string<char16_t> *)a4, v8);
  v9 = *(char *)(a4 + 23);
  if (v9 >= 0)
    v10 = (const UChar *)a4;
  else
    v10 = *(const UChar **)a4;
  if (v9 >= 0)
    LODWORD(v11) = *(unsigned __int8 *)(a4 + 23);
  else
    v11 = *(_QWORD *)(a4 + 8);
  morphun::util::StringViewUtils::uppercase(a4, v10, v11, a3);
  v16 = 2;
  if (v8 < 0x10000)
    v16 = 1;
  return std::basic_string<char16_t>::append<char16_t const*,0>((std::basic_string<char16_t> *)a4, (__int16 *)&a1[v16], (__int16 *)&a1[a2], v12, v13, v14, v15);
}

void sub_1CB5030C4(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t morphun::util::StringViewUtils::uppercase(uint64_t a1, const UChar *a2, int32_t a3, uint64_t a4)
{
  std::basic_string<char16_t> *v8;
  UChar *v9;
  const char *v10;
  int32_t v11;
  int32_t v12;
  UErrorCode v13;
  UChar *v14;
  const char *v15;
  uint64_t v16;
  UErrorCode v18;
  morphun::exception::ICUException *exception;
  UErrorCode pErrorCode;

  v8 = (std::basic_string<char16_t> *)npc<std::basic_string<char16_t>>(a1);
  std::basic_string<char16_t>::resize(v8, a3, 0);
  pErrorCode = U_ZERO_ERROR;
  v9 = (UChar *)npc<std::basic_string<char16_t>>(a1);
  if (*(char *)(a1 + 23) < 0)
    v9 = *(UChar **)a1;
  if (*(char *)(a4 + 127) >= 0)
    v10 = (const char *)(a4 + 104);
  else
    v10 = *(const char **)(a4 + 104);
  v11 = u_strToUpper(v9, a3, a2, a3, v10, &pErrorCode);
  v12 = v11;
  v13 = pErrorCode;
  if (pErrorCode == U_BUFFER_OVERFLOW_ERROR)
  {
    std::basic_string<char16_t>::resize((std::basic_string<char16_t> *)a1, v11, 0);
    pErrorCode = U_ZERO_ERROR;
    v14 = (UChar *)a1;
    if (*(char *)(a1 + 23) < 0)
      v14 = *(UChar **)a1;
    if (*(char *)(a4 + 127) >= 0)
      v15 = (const char *)(a4 + 104);
    else
      v15 = *(const char **)(a4 + 104);
    v12 = u_strToUpper(v14, v12, a2, a3, v15, &pErrorCode);
    v13 = pErrorCode;
  }
  if (v13 >= U_ILLEGAL_ARGUMENT_ERROR)
  {
    v18 = v13;
    exception = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::ICUException::ICUException(exception, v18);
  }
  if (*(char *)(a1 + 23) < 0)
    v16 = *(_QWORD *)(a1 + 8);
  else
    LODWORD(v16) = *(unsigned __int8 *)(a1 + 23);
  if (v12 != (_DWORD)v16)
    std::basic_string<char16_t>::resize((std::basic_string<char16_t> *)a1, v12, 0);
  return a1;
}

void sub_1CB503240(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::string *morphun::util::StringViewUtils::convert(std::string *this, uint64_t a2, int a3)
{
  int v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  std::string::size_type v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  morphun::exception::NullPointerException *exception;
  std::string::value_type __s[4];
  char v18;

  if (!this)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  if ((SHIBYTE(this->__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    this->__r_.__value_.__s.__data_[0] = 0;
    *((_BYTE *)&this->__r_.__value_.__s + 23) = 0;
LABEL_5:
    v6 = 22;
    goto LABEL_6;
  }
  *this->__r_.__value_.__l.__data_ = 0;
  this->__r_.__value_.__l.__size_ = 0;
  if ((SHIBYTE(this->__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    goto LABEL_5;
  v6 = LODWORD(this->__r_.__value_.__r.__words[2]) - 1;
LABEL_6:
  if (v6 < a3)
    std::string::reserve(this, a3);
  v18 = 0;
  *(_DWORD *)__s = 0;
  if (a3 >= 1)
  {
    v7 = 0;
    while (1)
    {
      v8 = v7 + 1;
      v9 = *(unsigned __int16 *)(a2 + 2 * v7);
      if ((v9 & 0xFC00) == 0xD800 && (_DWORD)v8 != a3)
        break;
      if (v9 > 0x7F)
      {
        if (v9 <= 0x7FF)
        {
          __s[0] = (v9 >> 6) | 0xC0;
          v14 = 1;
LABEL_23:
          v11 = v14 + 1;
          __s[v14] = v9 & 0x3F | 0x80;
          goto LABEL_24;
        }
LABEL_21:
        __s[0] = (v9 >> 12) | 0xE0;
        v13 = 1;
LABEL_22:
        v14 = v13 + 1;
        *(_BYTE *)((unint64_t)__s | v13) = (v9 >> 6) & 0x3F | 0x80;
        goto LABEL_23;
      }
      __s[0] = *(_WORD *)(a2 + 2 * v7);
      v11 = 1;
LABEL_24:
      std::string::append(this, __s, v11);
      v7 = v8;
      if ((int)v8 >= a3)
        return this;
    }
    v12 = *(unsigned __int16 *)(a2 + 2 * v8);
    if ((v12 & 0xFC00) != 0xDC00)
      goto LABEL_21;
    LODWORD(v8) = v7 + 2;
    v9 = v12 + (v9 << 10) - 56613888;
    __s[0] = (v9 >> 18) | 0xF0;
    __s[1] = (v9 >> 12) & 0x3F | 0x80;
    v13 = 2;
    goto LABEL_22;
  }
  return this;
}

void sub_1CB503410(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::util::StringViewUtils::to_string(uint64_t a1@<X0>, int a2@<W1>, std::string *a3@<X8>)
{
  std::string __p;

  memset(&__p, 0, sizeof(__p));
  morphun::util::StringViewUtils::convert(&__p, a1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(a3, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    *a3 = __p;
  }
}

void sub_1CB503498(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void morphun::util::StringViewUtils::to_u16string(const char *a1@<X0>, int32_t a2@<W1>, std::basic_string<char16_t> *a3@<X8>)
{
  void *__p[2];
  std::basic_string<char16_t>::size_type v5;

  __p[0] = 0;
  __p[1] = 0;
  v5 = 0;
  morphun::util::StringViewUtils::convert((uint64_t)__p, a1, a2);
  if (SHIBYTE(v5) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a3, (const std::basic_string<char16_t>::value_type *)__p[0], (std::basic_string<char16_t>::size_type)__p[1]);
    if (SHIBYTE(v5) < 0)
      operator delete(__p[0]);
  }
  else
  {
    *(_OWORD *)&a3->__r_.__value_.__l.__data_ = *(_OWORD *)__p;
    a3->__r_.__value_.__r.__words[2] = v5;
  }
}

void sub_1CB503528(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL morphun::util::StringViewUtils::endsWith(uint64_t a1, unint64_t a2, unsigned __int16 *a3, unint64_t a4)
{
  _BOOL8 result;
  uint64_t v5;
  uint64_t v6;
  int v7;
  BOOL v8;

  if (a2 < a4)
    return 0;
  if (!a4)
    return 1;
  v5 = -(uint64_t)a4;
  v6 = a1 + 2 * a2;
  do
  {
    v7 = *a3++;
    result = v7 == *(unsigned __int16 *)(v6 + 2 * v5);
    v8 = v7 != *(unsigned __int16 *)(v6 + 2 * v5) || v5 == -1;
    ++v5;
  }
  while (!v8);
  return result;
}

uint64_t morphun::util::StringViewUtils::startsWith(unsigned __int16 *a1, unint64_t a2, unsigned __int16 *a3, unint64_t a4)
{
  _BOOL8 v4;
  unint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  BOOL v11;
  BOOL v12;

  if (a2 < a4)
    return 0;
  if (!a4)
    return 1;
  v5 = a4 - 1;
  do
  {
    v7 = *a1++;
    v6 = v7;
    v9 = *a3++;
    v8 = v9;
    v11 = v5-- != 0;
    v12 = v8 == v6;
    v4 = v8 == v6;
  }
  while (v12 && v11);
  return v4;
}

uint64_t morphun::util::StringViewUtils::split@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned __int16 *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  __int16 *v15;
  __int16 *v16;

  v10 = 0;
  v11 = 0;
  *a5 = 0;
  a5[1] = 0;
  a5[2] = 0;
  while (1)
  {
    v12 = std::u16string_view::find[abi:ne180100](a1, a2, a3, a4, v11);
    if (v12 == -1)
      break;
    v13 = v12;
    v15 = (__int16 *)(a1 + 2 * v12);
    v16 = (__int16 *)(a1 + 2 * v11);
    if ((unint64_t)v10 >= a5[2])
    {
      v10 = (_QWORD *)std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<char16_t const*,char16_t const*>(a5, &v16, &v15);
    }
    else
    {
      std::basic_string<char16_t>::__init_with_size[abi:ne180100]<char16_t const*,char16_t const*>(v10, (__int16 *)(a1 + 2 * v11), (__int16 *)(a1 + 2 * v12), (uint64_t)(2 * v12 - 2 * v11) >> 1);
      v10 += 3;
      a5[1] = (uint64_t)v10;
    }
    a5[1] = (uint64_t)v10;
    v11 = v13 + a4;
  }
  v15 = (__int16 *)(a1 + 2 * a2);
  v16 = (__int16 *)(a1 + 2 * v11);
  if ((unint64_t)v10 >= a5[2])
  {
    result = std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<char16_t const*,char16_t const*>(a5, &v16, &v15);
  }
  else
  {
    std::basic_string<char16_t>::__init_with_size[abi:ne180100]<char16_t const*,char16_t const*>(v10, (__int16 *)(a1 + 2 * v11), (__int16 *)(a1 + 2 * a2), (uint64_t)(2 * a2 - 2 * v11) >> 1);
    result = (uint64_t)(v10 + 3);
    a5[1] = (uint64_t)(v10 + 3);
  }
  a5[1] = result;
  return result;
}

void sub_1CB5036E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<char16_t const*,char16_t const*>(uint64_t *a1, __int16 **a2, __int16 **a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;
  uint64_t *v17;

  v3 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
  v8 = a1 + 2;
  if (0x5555555555555556 * ((a1[2] - *a1) >> 3) > v4)
    v4 = 0x5555555555555556 * ((a1[2] - *a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - *a1) >> 3) >= 0x555555555555555)
    v9 = 0xAAAAAAAAAAAAAAALL;
  else
    v9 = v4;
  v17 = v8;
  if (v9)
    v9 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v9);
  else
    v10 = 0;
  v13 = v9;
  v14 = (_QWORD *)(v9 + 24 * v3);
  v15 = v14;
  v16 = v9 + 24 * v10;
  std::basic_string<char16_t>::__init_with_size[abi:ne180100]<char16_t const*,char16_t const*>(v14, *a2, *a3, *a3 - *a2);
  v15 = v14 + 3;
  std::vector<std::basic_string<char16_t>>::__swap_out_circular_buffer(a1, &v13);
  v11 = a1[1];
  std::__split_buffer<std::basic_string<char16_t>>::~__split_buffer((uint64_t)&v13);
  return v11;
}

void sub_1CB503810(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<std::basic_string<char16_t>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

std::basic_string<char16_t> *morphun::util::StringViewUtils::join@<X0>(std::basic_string<char16_t>::value_type *__s@<X1>, std::basic_string<char16_t>::size_type __n@<X2>, std::basic_string<char16_t> *result@<X0>, uint64_t a4@<X8>)
{
  std::basic_string<char16_t>::size_type v4;
  std::basic_string<char16_t>::size_type size;
  uint64_t v9;
  int v10;
  const std::basic_string<char16_t>::value_type *v11;
  std::basic_string<char16_t>::size_type v12;

  *(_QWORD *)a4 = 0;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  v4 = result->__r_.__value_.__r.__words[0];
  size = result->__r_.__value_.__l.__size_;
  if (result->__r_.__value_.__r.__words[0] != size)
  {
    do
    {
      v9 = *(unsigned __int8 *)(a4 + 23);
      if ((v9 & 0x80u) != 0)
        v9 = *(_QWORD *)(a4 + 8);
      if (v9)
        std::basic_string<char16_t>::append((std::basic_string<char16_t> *)a4, __s, __n);
      v10 = *(char *)(v4 + 23);
      if (v10 >= 0)
        v11 = (const std::basic_string<char16_t>::value_type *)v4;
      else
        v11 = *(const std::basic_string<char16_t>::value_type **)v4;
      if (v10 >= 0)
        v12 = *(unsigned __int8 *)(v4 + 23);
      else
        v12 = *(_QWORD *)(v4 + 8);
      result = std::basic_string<char16_t>::append((std::basic_string<char16_t> *)a4, v11, v12);
      v4 += 24;
    }
    while (v4 != size);
  }
  return result;
}

void sub_1CB5038C0(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

UChar *morphun::util::StringViewUtils::strdup(const UChar *a1)
{
  int32_t v2;
  UChar *v3;

  v2 = u_strlen(a1) + 1;
  v3 = (UChar *)operator new[]();
  u_memcpy(v3, a1, v2);
  return v3;
}

uint64_t **com::apple::siri::tokenizer::data::config_sv::getContent@<X0>(uint64_t **a1@<X8>)
{
  _OWORD v3[3];
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v3[0] = xmmword_1E8676870;
  v3[1] = *(_OWORD *)&off_1E8676880;
  v3[2] = xmmword_1E8676890;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 2);
}

uint64_t **com::apple::siri::tokenizer::data::config_iw::getContent@<X0>(uint64_t **a1@<X8>)
{
  __int128 v3;
  const char *v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v3 = xmmword_1E86768A0;
  v4 = "h";
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

uint64_t **com::apple::siri::tokenizer::data::config_sk::getContent@<X0>(uint64_t **a1@<X8>)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v3 = xmmword_1E8686A40;
  v4 = 0x1CB73E8CALL;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

CFArrayRef mloc_getSupportedLocalesList(morphun::util::LocaleUtils *a1)
{
  __int16 v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  const void **v5;
  size_t v6;
  const morphun::util::ULocale *v7;
  _QWORD *v8;
  uint64_t v9;
  CFLocaleRef v10;
  _QWORD *v11;
  _QWORD **v12;
  BOOL v13;
  CFArrayRef v14;
  _QWORD **v16;
  _QWORD *v17;
  __int16 v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  morphun::util::LocaleUtils::getSupportedLocaleList(a1, (uint64_t)&v16);
  v1 = v18;
  MEMORY[0x1E0C80A78](v2);
  v5 = (const void **)((char *)&v16 - v4);
  if (v3 >= 0x200)
    v6 = 512;
  else
    v6 = v3;
  bzero((char *)&v16 - v4, v6);
  v8 = v16;
  if (v16 != &v17)
  {
    v9 = 0;
    do
    {
      v10 = morphun::util::CFUtils::convert((morphun::util::CFUtils *)(v8 + 4), v7);
      v5[v9] = v10;
      CFRelease(v10);
      v11 = (_QWORD *)v8[1];
      if (v11)
      {
        do
        {
          v12 = (_QWORD **)v11;
          v11 = (_QWORD *)*v11;
        }
        while (v11);
      }
      else
      {
        do
        {
          v12 = (_QWORD **)v8[2];
          v13 = *v12 == v8;
          v8 = v12;
        }
        while (!v13);
      }
      ++v9;
      v8 = v12;
    }
    while (v12 != &v17);
  }
  v14 = CFArrayCreate(0, v5, v1, &mloc_getSupportedLocalesList::callbacks);
  std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(v17);
  return v14;
}

void sub_1CB503BB8(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(*(_QWORD **)(v1 - 72));
  _Unwind_Resume(a1);
}

void mloc_array_release(const __CFAllocator *a1, CFTypeRef cf)
{
  CFRelease(cf);
}

CFLocaleRef mloc_createValidRegionAwareLanguage(const __CFLocale *a1, const __CFLocale *a2)
{
  const morphun::util::ULocale *v3;
  CFLocaleRef v4;
  void *v6[16];
  void *v7[16];
  void *v8[16];

  morphun::util::CFUtils::convert((morphun::util::CFUtils *)v7, a1);
  morphun::util::CFUtils::convert((morphun::util::CFUtils *)v6, a2);
  morphun::util::LocaleUtils::createValidRegionAwareLanguage((morphun::util::LocaleUtils *)v7, (const morphun::util::ULocale *)v6, (morphun::util::ULocale *)v8);
  v4 = morphun::util::CFUtils::convert((morphun::util::CFUtils *)v8, v3);
  return v4;
}

void sub_1CB503C70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  uint64_t v25;

  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::ArGrammarSynthesizer_PronounLookupFunction::~ArGrammarSynthesizer_PronounLookupFunction(morphun::grammar::synthesis::ArGrammarSynthesizer_PronounLookupFunction *this)
{
  *(_QWORD *)this = &off_1E866ED20;
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*((_QWORD **)this + 7));
}

{
  *(_QWORD *)this = &off_1E866ED20;
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*((_QWORD **)this + 7));
  JUMPOUT(0x1D179D2ECLL);
}

_QWORD *morphun::grammar::synthesis::ArGrammarSynthesizer_PronounLookupFunction::getArticle(uint64_t a1, uint64_t a2, char a3, char a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  BOOL v10;
  uint64_t *v11;
  uint64_t v12;
  std::allocator<char16_t> *v13;
  __int128 v14;
  int v15;
  std::basic_string<char16_t>::size_type v16;
  std::basic_string<char16_t> *v17;
  std::basic_string<char16_t>::size_type v18;
  char v19;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t> *p_str;
  morphun::lang::StringFilterUtil *v22;
  uint64_t v23;
  char *v24;
  _QWORD *v25;
  std::basic_string<char16_t> *v26;
  std::basic_string<char16_t>::size_type v27;
  uint64_t v28;
  std::basic_string<char16_t> *v29;
  int v30;
  int v31;
  std::basic_string<char16_t> *v33;
  std::basic_string<char16_t> *v34;
  uint64_t v35;
  int v36;
  int v37;
  _QWORD *v39;
  std::basic_string<char16_t> *v40;
  int v41;
  std::basic_string<char16_t> v43;
  std::basic_string<char16_t> __str;
  _QWORD v45[3];

  v45[2] = *MEMORY[0x1E0C80C00];
  v6 = a1 + 56;
  v5 = *(_QWORD *)(a1 + 56);
  if (!v5)
    goto LABEL_11;
  v7 = a3 & 0xF | (16 * (a4 & 0xF)) | ((a5 & 0xF) << 8);
  v8 = a1 + 56;
  do
  {
    v9 = *(_DWORD *)(v5 + 32);
    v10 = v9 < v7;
    if (v9 >= v7)
      v11 = (uint64_t *)v5;
    else
      v11 = (uint64_t *)(v5 + 8);
    if (!v10)
      v8 = v5;
    v5 = *v11;
  }
  while (*v11);
  if (v8 == v6 || v7 < *(_DWORD *)(v8 + 32))
LABEL_11:
    v8 = a1 + 56;
  v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
  if (*(char *)(v12 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&__str, *(const std::basic_string<char16_t>::value_type **)v12, *(_QWORD *)(v12 + 8));
  }
  else
  {
    v14 = *(_OWORD *)v12;
    __str.__r_.__value_.__r.__words[2] = *(_QWORD *)(v12 + 16);
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v14;
  }
  v15 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v15 = __str.__r_.__value_.__r.__words[1];
  v16 = (v15 - 1);
  if ((int)v16 >= 2)
  {
    v17 = (__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? &__str
        : (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
    if (v17->__r_.__value_.__s.__data_[v16] == 1577)
    {
      std::basic_string<char16_t>::basic_string(&v43, &__str, 0, v16, v13);
      std::basic_string<char16_t>::append(&v43, word_1CB6EF9F4, 1uLL);
      v45[0] = v43.__r_.__value_.__l.__size_;
      v18 = v43.__r_.__value_.__r.__words[0];
      *(_QWORD *)((char *)v45 + 7) = *(std::basic_string<char16_t>::size_type *)((char *)&v43.__r_.__value_.__r.__words[1]
                                                                               + 7);
      v19 = HIBYTE(v43.__r_.__value_.__r.__words[2]);
      memset(&v43, 0, sizeof(v43));
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(__str.__r_.__value_.__l.__data_);
        __str.__r_.__value_.__r.__words[0] = v18;
        __str.__r_.__value_.__l.__size_ = v45[0];
        *(std::basic_string<char16_t>::size_type *)((char *)&__str.__r_.__value_.__r.__words[1] + 7) = *(_QWORD *)((char *)v45 + 7);
        *((_BYTE *)&__str.__r_.__value_.__s + 23) = v19;
        if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v43.__r_.__value_.__l.__data_);
      }
      else
      {
        __str.__r_.__value_.__r.__words[0] = v18;
        __str.__r_.__value_.__l.__size_ = v45[0];
        *(std::basic_string<char16_t>::size_type *)((char *)&__str.__r_.__value_.__r.__words[1] + 7) = *(_QWORD *)((char *)v45 + 7);
        *((_BYTE *)&__str.__r_.__value_.__s + 23) = v19;
      }
    }
  }
  if (v8 != v6)
  {
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    {
      size = __str.__r_.__value_.__l.__size_;
      if (!__str.__r_.__value_.__l.__size_)
        goto LABEL_70;
      p_str = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
    }
    else
    {
      size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      if (!*((_BYTE *)&__str.__r_.__value_.__s + 23))
        goto LABEL_70;
      p_str = &__str;
    }
    v22 = (morphun::lang::StringFilterUtil *)morphun::util::StringViewUtils::trim((uint64_t)p_str, size);
    if (!v23)
      goto LABEL_38;
    v24 = (char *)v22;
    while (*(_WORD *)v24 != 32)
    {
      v24 += 2;
      if (!--v23)
        goto LABEL_38;
    }
    if (v24 - (char *)v22 == -2)
    {
LABEL_38:
      v25 = (_QWORD *)morphun::lang::StringFilterUtil::LATIN_SCRIPT(v22);
      v26 = &__str;
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v26 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
      if (!MEMORY[0x1D179D958](*v25, (unsigned __int16)v26->__r_.__value_.__s.__data_[0]))
      {
        v27 = (__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
            ? HIBYTE(__str.__r_.__value_.__r.__words[2])
            : __str.__r_.__value_.__l.__size_;
        if (v27 < 2)
          goto LABEL_56;
        v28 = 0;
        v29 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
        if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v29 = &__str;
        do
        {
          v30 = (unsigned __int16)v29->__r_.__value_.__s.__data_[v28];
          v31 = (unsigned __int16)word_1CB73D976[v28];
        }
        while (v31 == v30 && v28++ != 1);
        if (v31 != v30)
        {
LABEL_56:
          if (v27)
          {
            v33 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
            v34 = &__str;
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
              v34 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
            if (v34->__r_.__value_.__s.__data_[v27 - 1] == 1610)
            {
              if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
              {
                if (__str.__r_.__value_.__l.__size_ != 3)
                  goto LABEL_68;
              }
              else
              {
                if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) != 3)
                  goto LABEL_68;
                v33 = &__str;
              }
              v35 = 0;
              do
              {
                v36 = (unsigned __int16)v33->__r_.__value_.__s.__data_[v35];
                v37 = (unsigned __int16)word_1CB735D18[v35];
              }
              while (v37 == v36 && v35++ != 2);
              if (v37 != v36)
              {
LABEL_68:
                if (!std::operator==[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>(word_1CB735D20, (unsigned __int16 *)&__str))goto LABEL_70;
              }
            }
          }
          std::basic_string<char16_t>::append(&__str, *(const std::basic_string<char16_t>::value_type **)(v8 + 40), *(_QWORD *)(v8 + 48));
        }
      }
    }
  }
LABEL_70:
  v39 = (_QWORD *)operator new();
  *v39 = &off_1E866AD28;
  v40 = (std::basic_string<char16_t> *)(v39 + 1);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v40, __str.__r_.__value_.__l.__data_, __str.__r_.__value_.__l.__size_);
    v41 = SHIBYTE(__str.__r_.__value_.__r.__words[2]);
    v39[4] = 0;
    if (v41 < 0)
      operator delete(__str.__r_.__value_.__l.__data_);
  }
  else
  {
    *(_OWORD *)&v40->__r_.__value_.__l.__data_ = *(_OWORD *)&__str.__r_.__value_.__l.__data_;
    v39[3] = *((_QWORD *)&__str.__r_.__value_.__l + 2);
    v39[4] = 0;
  }
  return v39;
}

void sub_1CB5040C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
    operator delete(__p);
  if (a21 < 0)
    operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t std::operator==[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>(_WORD *a1, unsigned __int16 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  BOOL v11;
  BOOL v12;
  _BOOL8 v13;

  if (*a1)
  {
    v2 = 0;
    do
      v3 = v2 + 1;
    while (a1[++v2]);
  }
  else
  {
    v3 = 0;
  }
  if (*((char *)a2 + 23) < 0)
  {
    if (v3 == *((_QWORD *)a2 + 1))
    {
      if (v3 == -1)
        std::basic_string<char16_t>::__throw_out_of_range[abi:ne180100]();
      a2 = *(unsigned __int16 **)a2;
      if (v3)
        goto LABEL_9;
      return 1;
    }
    return 0;
  }
  if (v3 != *((unsigned __int8 *)a2 + 23))
    return 0;
  if (!v3)
    return 1;
LABEL_9:
  v5 = v3 - 1;
  do
  {
    v7 = *a2++;
    v6 = v7;
    v9 = (unsigned __int16)*a1++;
    v8 = v9;
    v11 = v5-- != 0;
    v12 = v8 == v6;
    v13 = v8 == v6;
  }
  while (v12 && v11);
  return v13;
}

uint64_t *std::map<int,std::u16string_view>::map[abi:ne180100](uint64_t *a1, _QWORD *a2)
{
  uint64_t *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  BOOL v8;

  a1[1] = 0;
  v3 = a1 + 1;
  a1[2] = 0;
  *a1 = (uint64_t)(a1 + 1);
  v4 = a2 + 1;
  v5 = (_QWORD *)*a2;
  if ((_QWORD *)*a2 != a2 + 1)
  {
    do
    {
      std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_hint_unique_key_args<int,std::pair<int const,std::u16string_view> const&>(a1, v3, *((_DWORD *)v5 + 8), (uint64_t)(v5 + 4));
      v6 = (_QWORD *)v5[1];
      if (v6)
      {
        do
        {
          v7 = v6;
          v6 = (_QWORD *)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          v7 = (_QWORD *)v5[2];
          v8 = *v7 == (_QWORD)v5;
          v5 = v7;
        }
        while (!v8);
      }
      v5 = v7;
    }
    while (v7 != v4);
  }
  return a1;
}

void sub_1CB50426C(_Unwind_Exception *a1)
{
  _QWORD **v1;

  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

void morphun::Token::toString(morphun::Token *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  const __int16 *v6;
  std::basic_string<char16_t>::size_type v7;
  std::basic_string<char16_t> *v8;
  std::basic_string<char16_t>::size_type size;
  int v10;
  void *v11;
  std::basic_string<char16_t> *v12;
  std::basic_string<char16_t>::size_type v13;
  void **v14;
  std::basic_string<char16_t>::size_type v15;
  int v16;
  void *v17;
  std::basic_string<char16_t> *v18;
  std::basic_string<char16_t>::size_type v19;
  void **v20;
  std::basic_string<char16_t>::size_type v21;
  int v22;
  const std::basic_string<char16_t>::value_type *v23;
  std::basic_string<char16_t>::size_type v24;
  void **v25;
  std::basic_string<char16_t>::size_type v26;
  const std::basic_string<char16_t>::value_type *v27;
  char *v28;
  const std::basic_string<char16_t>::value_type *v29;
  int v30;
  const std::basic_string<char16_t>::value_type *v31;
  std::basic_string<char16_t>::size_type v32;
  void **v33;
  std::basic_string<char16_t>::size_type v34;
  void *__p[2];
  unsigned __int8 v36;
  void *v37[2];
  unsigned __int8 v38;
  void *v39[2];
  unsigned __int8 v40;
  std::basic_string<char16_t> v41;
  void *v42[2];
  unsigned __int8 v43;
  std::basic_string<char16_t> v44;
  std::basic_string<char16_t> __dst;
  std::basic_string<char16_t> v46;
  std::basic_string<char16_t> v47;
  std::basic_string<char16_t> v48;
  std::basic_string<char16_t> v49;
  std::basic_string<char16_t> v50;
  std::basic_string<char16_t> v51;
  std::basic_string<char16_t> v52;
  std::basic_string<char16_t> v53;
  std::basic_string<char16_t> v54;

  memset(&v54, 0, sizeof(v54));
  if (!this)
    goto LABEL_16;
  {
    *((_BYTE *)&v54.__r_.__value_.__s + 23) = 4;
    v4 = 0x72006F0057;
LABEL_4:
    v5 = v4 & 0xFFFFFFFFFFFFLL | 0x64000000000000;
LABEL_7:
    v54.__r_.__value_.__r.__words[0] = v5;
    v54.__r_.__value_.__s.__data_[4] = 0;
    goto LABEL_18;
  }
  {
    *((_BYTE *)&v54.__r_.__value_.__s + 23) = 4;
    v5 = 0x6C006900610054;
    goto LABEL_7;
  }
  {
    *((_BYTE *)&v54.__r_.__value_.__s + 23) = 4;
    v4 = 0x6100650048;
    goto LABEL_4;
  }
  {
    {
      *((_BYTE *)&v54.__r_.__value_.__s + 23) = 5;
      LODWORD(v54.__r_.__value_.__r.__words[1]) = 112;
      v6 = L"Group";
      goto LABEL_17;
    }
    {
      std::basic_string<char16_t>::__assign_external(&v54, L"OverSizedToken", 0xEuLL);
      goto LABEL_18;
    }
LABEL_16:
    *((_BYTE *)&v54.__r_.__value_.__s + 23) = 5;
    LODWORD(v54.__r_.__value_.__r.__words[1]) = 110;
    v6 = (const __int16 *)"T";
    goto LABEL_17;
  }
  *((_BYTE *)&v54.__r_.__value_.__s + 23) = 5;
  LODWORD(v54.__r_.__value_.__r.__words[1]) = 109;
  v6 = L"Delim";
LABEL_17:
  v54.__r_.__value_.__r.__words[0] = *(_QWORD *)v6;
LABEL_18:
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "{");
  if ((v54.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v8 = &v54;
  else
    v8 = (std::basic_string<char16_t> *)v54.__r_.__value_.__r.__words[0];
  if ((v54.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v54.__r_.__value_.__r.__words[2]);
  else
    size = v54.__r_.__value_.__l.__size_;
  std::basic_string<char16_t>::insert(&__dst, (std::basic_string<char16_t>::size_type)v8, (const std::basic_string<char16_t>::value_type *)size, v7);
  v46 = __dst;
  memset(&__dst, 0, sizeof(__dst));
  morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)*((int *)this + 2), &v44);
  v10 = SHIBYTE(v44.__r_.__value_.__r.__words[2]);
  v11 = (void *)v44.__r_.__value_.__r.__words[0];
  if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v12 = &v44;
  else
    v12 = (std::basic_string<char16_t> *)v44.__r_.__value_.__r.__words[0];
  if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v13 = HIBYTE(v44.__r_.__value_.__r.__words[2]);
  else
    v13 = v44.__r_.__value_.__l.__size_;
  std::basic_string<char16_t>::append(&v46, (const std::basic_string<char16_t>::value_type *)v12, v13);
  v47 = v46;
  memset(&v46, 0, sizeof(v46));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v42, (char *)L", end=");
  if ((v43 & 0x80u) == 0)
    v14 = v42;
  else
    v14 = (void **)v42[0];
  if ((v43 & 0x80u) == 0)
    v15 = v43;
  else
    v15 = (std::basic_string<char16_t>::size_type)v42[1];
  std::basic_string<char16_t>::append(&v47, (const std::basic_string<char16_t>::value_type *)v14, v15);
  v48 = v47;
  memset(&v47, 0, sizeof(v47));
  morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)*((int *)this + 3), &v41);
  v16 = SHIBYTE(v41.__r_.__value_.__r.__words[2]);
  v17 = (void *)v41.__r_.__value_.__r.__words[0];
  if ((v41.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v18 = &v41;
  else
    v18 = (std::basic_string<char16_t> *)v41.__r_.__value_.__r.__words[0];
  if ((v41.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v19 = HIBYTE(v41.__r_.__value_.__r.__words[2]);
  else
    v19 = v41.__r_.__value_.__l.__size_;
  std::basic_string<char16_t>::append(&v48, (const std::basic_string<char16_t>::value_type *)v18, v19);
  v49 = v48;
  memset(&v48, 0, sizeof(v48));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v39, ",");
  if ((v40 & 0x80u) == 0)
    v20 = v39;
  else
    v20 = (void **)v39[0];
  if ((v40 & 0x80u) == 0)
    v21 = v40;
  else
    v21 = (std::basic_string<char16_t>::size_type)v39[1];
  std::basic_string<char16_t>::append(&v49, (const std::basic_string<char16_t>::value_type *)v20, v21);
  v50 = v49;
  memset(&v49, 0, sizeof(v49));
  v22 = *((char *)this + 39);
  if (v22 >= 0)
    v23 = (const std::basic_string<char16_t>::value_type *)((char *)this + 16);
  else
    v23 = (const std::basic_string<char16_t>::value_type *)*((_QWORD *)this + 2);
  if (v22 >= 0)
    v24 = *((unsigned __int8 *)this + 39);
  else
    v24 = *((_QWORD *)this + 3);
  std::basic_string<char16_t>::append(&v50, v23, v24);
  v51 = v50;
  memset(&v50, 0, sizeof(v50));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v37, "'");
  if ((v38 & 0x80u) == 0)
    v25 = v37;
  else
    v25 = (void **)v37[0];
  if ((v38 & 0x80u) == 0)
    v26 = v38;
  else
    v26 = (std::basic_string<char16_t>::size_type)v37[1];
  std::basic_string<char16_t>::append(&v51, (const std::basic_string<char16_t>::value_type *)v25, v26);
  v52 = v51;
  memset(&v51, 0, sizeof(v51));
  v29 = (const std::basic_string<char16_t>::value_type *)*((_QWORD *)this + 5);
  v28 = (char *)this + 40;
  v27 = v29;
  v30 = v28[23];
  if (v30 >= 0)
    v31 = (const std::basic_string<char16_t>::value_type *)v28;
  else
    v31 = v27;
  if (v30 >= 0)
    v32 = v28[23];
  else
    v32 = *((_QWORD *)v28 + 1);
  std::basic_string<char16_t>::append(&v52, v31, v32);
  v53 = v52;
  memset(&v52, 0, sizeof(v52));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "'");
  if ((v36 & 0x80u) == 0)
    v33 = __p;
  else
    v33 = (void **)__p[0];
  if ((v36 & 0x80u) == 0)
    v34 = v36;
  else
    v34 = (std::basic_string<char16_t>::size_type)__p[1];
  std::basic_string<char16_t>::append(&v53, (const std::basic_string<char16_t>::value_type *)v33, v34);
  *a2 = v53;
  memset(&v53, 0, sizeof(v53));
  if ((char)v36 < 0)
  {
    operator delete(__p[0]);
    if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v53.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v52.__r_.__value_.__l.__data_);
  if ((char)v38 < 0)
    operator delete(v37[0]);
  if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v51.__r_.__value_.__l.__data_);
  if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v50.__r_.__value_.__l.__data_);
  if ((char)v40 < 0)
    operator delete(v39[0]);
  if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v49.__r_.__value_.__l.__data_);
    if ((v16 & 0x80000000) == 0)
      goto LABEL_87;
  }
  else if ((v16 & 0x80000000) == 0)
  {
    goto LABEL_87;
  }
  operator delete(v17);
LABEL_87:
  if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v48.__r_.__value_.__l.__data_);
  if ((char)v43 < 0)
    operator delete(v42[0]);
  if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v47.__r_.__value_.__l.__data_);
    if ((v10 & 0x80000000) == 0)
      goto LABEL_93;
  }
  else if ((v10 & 0x80000000) == 0)
  {
    goto LABEL_93;
  }
  operator delete(v11);
LABEL_93:
  if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v46.__r_.__value_.__l.__data_);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v54.__r_.__value_.__l.__data_);
}

void sub_1CB5047F0(_Unwind_Exception *a1)
{
  uint64_t v1;

  if (*(char *)(v1 - 81) < 0)
    operator delete(*(void **)(v1 - 104));
  _Unwind_Resume(a1);
}

unint64_t morphun::Token::hashCode(morphun::Token *this)
{
  char *v1;
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (char *)*((_QWORD *)this + 2);
  v1 = (char *)this + 16;
  v2 = v3;
  v4 = *((_QWORD *)v1 + 1);
  if (v1[23] >= 0)
  {
    v5 = v1[23];
  }
  else
  {
    v1 = v2;
    v5 = v4;
  }
  return std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100]((uint64_t *)v1, 2 * v5);
}

uint64_t morphun::Token::operator==(uint64_t a1, uint64_t a2)
{
  uint64_t Type;
  _BOOL4 v5;
  _BOOL4 v6;
  uint64_t result;

  if (a1 == a2)
    return 1;
  Type = mtok_getType((const void *)a1);
  if (Type != mtok_getType((const void *)a2))
    return 0;
  if (*(_DWORD *)(a1 + 12) - *(_DWORD *)(a1 + 8) != *(_DWORD *)(a2 + 12) - *(_DWORD *)(a2 + 8))
    return 0;
  if ((*(_BYTE *)(a1 + 64) != 0) != (*(_BYTE *)(a2 + 64) != 0))
    return 0;
  {
    return 0;
  }
  result = std::operator==[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((unsigned __int16 *)(a1 + 40), (unsigned __int16 *)(a2 + 40));
  if ((_DWORD)result)
    return std::operator==[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((unsigned __int16 *)(a1 + 16), (unsigned __int16 *)(a2 + 16));
  return result;
}

uint64_t morphun::Token::getLength(morphun::Token *this)
{
  return (*((_DWORD *)this + 3) - *((_DWORD *)this + 2));
}

uint64_t morphun::Token::isSignificant(morphun::Token *this)
{
  return *((unsigned __int8 *)this + 64);
}

const void *morphun::Token::isHead(const void *this)
{
  if (this)
  return this;
}

const void *morphun::Token::isTail(const void *this)
{
  if (this)
  return this;
}

uint64_t morphun::Token::isWhitespace(morphun::Token *this)
{
  return *((unsigned __int8 *)this + 65);
}

uint64_t morphun::Token::getCleanValue(morphun::Token *this)
{
  return (uint64_t)this + 40;
}

uint64_t morphun::Token::getValue(morphun::Token *this)
{
  return (uint64_t)this + 16;
}

uint64_t morphun::Token::operator!=(uint64_t a1, uint64_t a2)
{
  return morphun::Token::operator==(a1, a2) ^ 1;
}

unint64_t morphun::Token::operator()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  int v5;
  uint64_t *v6;
  uint64_t v7;

  v4 = *(uint64_t **)(a2 + 16);
  v2 = a2 + 16;
  v3 = v4;
  v5 = *(char *)(v2 + 23);
  if (v5 >= 0)
    v6 = (uint64_t *)v2;
  else
    v6 = v3;
  if (v5 >= 0)
    v7 = *(unsigned __int8 *)(v2 + 23);
  else
    v7 = *(_QWORD *)(v2 + 8);
  return std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100](v6, 2 * v7);
}

uint64_t `virtual thunk to'morphun::Token::getStartChar(morphun::Token *this)
{
  return *(unsigned int *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 48) + 8);
}

uint64_t `virtual thunk to'morphun::Token::getEndChar(morphun::Token *this)
{
  return *(unsigned int *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 56) + 12);
}

uint64_t morphun::Token::getPrevious(morphun::Token *this)
{
  return *((_QWORD *)this + 9);
}

uint64_t morphun::Token::setPrevious(uint64_t this, morphun::Token *a2)
{
  *(_QWORD *)(this + 72) = a2;
  return this;
}

uint64_t morphun::Token::getNext(morphun::Token *this)
{
  return *((_QWORD *)this + 10);
}

uint64_t morphun::Token::setNext(uint64_t this, morphun::Token *a2)
{
  *(_QWORD *)(this + 80) = a2;
  return this;
}

void `virtual thunk to'morphun::Token::toString(morphun::Token *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  morphun::Token::toString((morphun::Token *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 24)), a2);
}

void morphun::Token_OverSizedToken::~Token_OverSizedToken(void **this)
{
  morphun::Token::~Token(this, (void **)&off_1E8667108);
}

{
  morphun::Token::~Token(this, (void **)&off_1E8667108);
  JUMPOUT(0x1D179D2ECLL);
}

morphun::Token *morphun::Token_OverSizedToken::newInstance(morphun::Token_OverSizedToken *this, int a2)
{
  morphun::Token *v4;
  int v5;
  int v6;
  unint64_t *v7;
  unint64_t v8;
  unint64_t *v9;
  int v10;
  unint64_t *v11;
  unint64_t v12;
  int v13;
  void *v14;
  unint64_t v15;

  v4 = (morphun::Token *)operator new();
  v5 = (*(uint64_t (**)(morphun::Token_OverSizedToken *))(*(_QWORD *)this + 24))(this);
  v6 = (*(uint64_t (**)(morphun::Token_OverSizedToken *))(*(_QWORD *)this + 32))(this);
  v7 = (unint64_t *)*((_QWORD *)this + 2);
  v8 = *((_QWORD *)this + 3);
  v9 = (unint64_t *)((char *)this + 16);
  v10 = *((char *)v9 + 23);
  if (v10 >= 0)
    v11 = v9;
  else
    v11 = v7;
  if (v10 >= 0)
    v12 = *((unsigned __int8 *)v9 + 23);
  else
    v12 = v8;
  v13 = *((char *)v9 + 47);
  if (v13 >= 0)
    v14 = v9 + 3;
  else
    v14 = (void *)v9[3];
  if (v13 >= 0)
    v15 = *((unsigned __int8 *)v9 + 47);
  else
    v15 = v9[4];
  *(_QWORD *)v4 = &off_1E8657058;
  morphun::Token::Token(v4, (uint64_t *)&off_1E8667108, v5 - a2, v6 - a2, v11, v12, v14, v15, 1);
  *(_QWORD *)v4 = &off_1E866A598;
  return v4;
}

void sub_1CB504D80(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10B3C405B5873CALL);
  _Unwind_Resume(a1);
}

morphun::Token *morphun::Token_OverSizedToken::Token_OverSizedToken(morphun::Token *a1, int a2, int a3, void *__src, unint64_t a5, void *a6, unint64_t a7)
{
  morphun::Token *result;

  *(_QWORD *)a1 = &off_1E8657058;
  result = morphun::Token::Token(a1, (uint64_t *)&off_1E8667108, a2, a3, __src, a5, a6, a7, 1);
  *(_QWORD *)result = &off_1E866A598;
  return result;
}

morphun::Token *morphun::Token_OverSizedToken::Token_OverSizedToken(morphun::Token *a1, uint64_t *a2, int a3, int a4, void *a5, unint64_t a6)
{
  morphun::Token *result;
  uint64_t v8;

  result = morphun::Token::Token(a1, a2 + 1, a3, a4, a5, a6, a5, a6, 1);
  v8 = *a2;
  *(_QWORD *)result = *a2;
  *(_QWORD *)((char *)result + *(_QWORD *)(v8 - 64)) = a2[4];
  *(_QWORD *)((char *)result + *(_QWORD *)(*(_QWORD *)result - 40)) = a2[5];
  return result;
}

morphun::Token *morphun::Token_OverSizedToken::Token_OverSizedToken(morphun::Token *a1, uint64_t *a2, int a3, int a4, void *a5, unint64_t a6, void *a7, unint64_t a8)
{
  morphun::Token *result;
  uint64_t v10;

  result = morphun::Token::Token(a1, a2 + 1, a3, a4, a5, a6, a7, a8, 1);
  v10 = *a2;
  *(_QWORD *)result = *a2;
  *(_QWORD *)((char *)result + *(_QWORD *)(v10 - 64)) = a2[4];
  *(_QWORD *)((char *)result + *(_QWORD *)(*(_QWORD *)result - 40)) = a2[5];
  return result;
}

morphun::Token *morphun::Token_OverSizedToken::Token_OverSizedToken(morphun::Token *a1, int a2, int a3, void *__src, unint64_t a5)
{
  morphun::Token *result;

  *(_QWORD *)a1 = &off_1E8657058;
  result = morphun::Token::Token(a1, (uint64_t *)&off_1E8667108, a2, a3, __src, a5, __src, a5, 1);
  *(_QWORD *)result = &off_1E866A598;
  return result;
}

void morphun::dialog::language::IsCommonConceptFactory::~IsCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1E8655E90);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1E8655E90);
  JUMPOUT(0x1D179D2ECLL);
}

BOOL morphun::readConfig(const void **a1, uint64_t a2)
{
  std::basic_string<char16_t> *p_p;
  std::basic_string<char16_t>::size_type size;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  std::basic_string<char16_t> v9;
  std::basic_string<char16_t> __p;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  std::operator+<char16_t>((uint64_t)&v9, L"/com/apple/siri/tokenizer/data/config_", a1);
  std::basic_string<char16_t>::append(&v9, (const std::basic_string<char16_t>::value_type *)".", 0xBuLL);
  __p = v9;
  memset(&v9, 0, sizeof(v9));
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  morphun::resources::DataResource::getProperties(&v11, (uint64_t *)p_p, size, 1);
  npc<std::map<std::u16string_view,char16_t const*>>(a2);
  v5 = a2 + 8;
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*(_QWORD **)(a2 + 8));
  v6 = v12;
  *(_QWORD *)a2 = v11;
  *(_QWORD *)(a2 + 8) = v6;
  v7 = v13;
  *(_QWORD *)(a2 + 16) = v13;
  if (v7)
  {
    v6[2] = v5;
    v11 = &v12;
    v12 = 0;
    v13 = 0;
    v6 = 0;
  }
  else
  {
    *(_QWORD *)a2 = v5;
  }
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(v6);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v9.__r_.__value_.__l.__data_);
  return *(_QWORD *)(a2 + 16) != 0;
}

void sub_1CB505058(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;

  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*(_QWORD **)(v21 - 32));
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::u16string_view,char16_t const*>>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB5050E0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

morphun::Tokenizer *morphun::TokenizerFactory::createTokenizerObject(void (***a1)(std::basic_string<char16_t> *__return_ptr, _QWORD), uint64_t a2)
{
  _QWORD *v4;
  int v5;
  const UChar *v6;
  int v7;
  int v8;
  uint64_t v9;
  int32_t v10;
  std::basic_string<char16_t>::size_type v11;
  std::basic_string<char16_t> *p_p;
  _QWORD *exception;
  std::basic_string<char16_t>::size_type v14;
  std::basic_string<char16_t>::size_type v15;
  std::basic_string<char16_t> *v16;
  std::basic_string<char16_t>::size_type size;
  morphun::Tokenizer *v18;
  const morphun::tokenizer::TokenExtractor *v19;
  uint64_t v20;
  std::basic_string<char16_t> v22;
  std::basic_string<char16_t> v23;
  std::basic_string<char16_t> __p;

  v4 = std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(a2, (unsigned __int16 *)"t", 0x1EuLL);
  if ((_QWORD *)(a2 + 8) == v4)
  {
LABEL_10:
    (**a1)(&v23, a1);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&__p, L"Error creating tokenizer for locale ", &v23, v11);
    if (morphun::util::gLogLevel <= 4)
    {
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        p_p = &__p;
      else
        p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
      morphun::util::logToTopOfStackLogger((morphun::util *)4, 0, (uint64_t)p_p);
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v23.__r_.__value_.__l.__data_);
    exception = __cxa_allocate_exception(0x38uLL);
    (**a1)(&v23, a1);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&__p, L"Error creating tokenizer for locale ", &v23, v14);
    morphun::exception::Throwable::Throwable((uint64_t)exception, (__int128 *)&__p);
    *exception = &off_1E8673220;
  }
  v5 = 0;
  v6 = (const UChar *)v4[6];
  v7 = 12;
  while (1)
  {
    v8 = v5 + v7;
    if (v5 + v7 < 0 != __OFADD__(v5, v7))
      ++v8;
    v9 = (uint64_t)v8 >> 1;
    v10 = u_strcmp(v6, *((const UChar **)&morphun::TokenizerFactory::createTokenizerObject(morphun::util::ULocale const&,std::map<std::u16string_view,char16_t const*> const&)::TOKENIZER_CONSTRUCTORS+ 2 * (v8 >> 1)));
    if (v10 < 0)
    {
      v7 = v9 - 1;
      goto LABEL_9;
    }
    if (!v10)
      break;
    v5 = v9 + 1;
LABEL_9:
    if (v5 > v7)
      goto LABEL_10;
  }
  if (morphun::util::gLogLevel <= 2)
  {
    (**a1)(&v22, a1);
    std::basic_string<char16_t>::insert(&v22, (std::basic_string<char16_t>::size_type)"T", (const std::basic_string<char16_t>::value_type *)0x12, v15);
    v23 = v22;
    memset(&v22, 0, sizeof(v22));
    std::basic_string<char16_t>::append(&v23, word_1CB73E876, 0x29uLL);
    __p = v23;
    memset(&v23, 0, sizeof(v23));
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v16 = &__p;
    else
      v16 = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      size = __p.__r_.__value_.__l.__size_;
    morphun::util::Logger::infoComponent((uint64_t)"T", v16, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v23.__r_.__value_.__l.__data_);
    if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v22.__r_.__value_.__l.__data_);
  }
  v18 = (morphun::Tokenizer *)operator new();
  v19 = (const morphun::tokenizer::TokenExtractor *)(*((uint64_t (**)(_QWORD, uint64_t))&morphun::TokenizerFactory::createTokenizerObject(morphun::util::ULocale const&,std::map<std::u16string_view,char16_t const*> const&)::TOKENIZER_CONSTRUCTORS
                                                     + 2 * v9
                                                     + 1))(a1, a2);
  morphun::Tokenizer::Tokenizer(v18, v19);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, "i");
  v20 = (*(uint64_t (**)(morphun::Tokenizer *, std::basic_string<char16_t> *))(*(_QWORD *)v18 + 24))(v18, &__p);
  if (v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v20 + 16))(v20);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return v18;
}

void sub_1CB5053EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0)
    operator delete(__p);
  if (a21 < 0)
    operator delete(a16);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t *std::__tree<std::__value_type<std::string,morphun::Tokenizer const*>,std::__map_value_compare<std::string,std::__value_type<std::string,morphun::Tokenizer const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,morphun::Tokenizer const*>>>::__emplace_unique_key_args<std::string,std::string const&,morphun::Tokenizer const*&>(uint64_t **a1, _QWORD *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t *v7;
  uint64_t **v8;
  _QWORD *v10;
  uint64_t **v11;
  uint64_t *result;
  uint64_t *v13;
  std::string *v14;
  uint64_t *v15;

  v8 = a1 + 1;
  v7 = a1[1];
  if (v7)
  {
    while (1)
    {
      while (1)
      {
        v8 = (uint64_t **)v7;
        v10 = v7 + 4;
        if (!std::less<std::string>::operator()[abi:ne180100](a2, v7 + 4))
          break;
        v7 = *v8;
        v11 = v8;
        if (!*v8)
          goto LABEL_9;
      }
      result = (uint64_t *)std::less<std::string>::operator()[abi:ne180100](v10, a2);
      if (!(_DWORD)result)
        break;
      v11 = v8 + 1;
      v7 = v8[1];
      if (!v7)
        goto LABEL_9;
    }
  }
  else
  {
    v11 = a1 + 1;
LABEL_9:
    v13 = (uint64_t *)operator new(0x40uLL);
    v14 = (std::string *)(v13 + 4);
    if (*(char *)(a3 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(v14, *(const std::string::value_type **)a3, *(_QWORD *)(a3 + 8));
    }
    else
    {
      *(_OWORD *)&v14->__r_.__value_.__l.__data_ = *(_OWORD *)a3;
      v13[6] = *(_QWORD *)(a3 + 16);
    }
    v13[7] = *a4;
    *v13 = 0;
    v13[1] = 0;
    v13[2] = (uint64_t)v8;
    *v11 = v13;
    v15 = (uint64_t *)**a1;
    if (v15)
    {
      *a1 = v15;
      v13 = *v11;
    }
    result = std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v13);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  return result;
}

void sub_1CB5055F8(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::util::AttributeFactory::~AttributeFactory(morphun::analysis::util::AttributeFactory *this)
{
  *(_QWORD *)this = &off_1E8671F10;
  std::__hash_table<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>>>::~__hash_table((uint64_t)this + 8);
}

{
  *(_QWORD *)this = &off_1E8671F10;
  std::__hash_table<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>>>::~__hash_table((uint64_t)this + 8);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::analysis::util::AttributeFactory::createAttributeInstance(morphun::analysis::util::AttributeFactory *this, const std::type_info *a2)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *exception;
  const char *v7;
  int32_t v8;
  std::basic_string<char16_t>::size_type v9;
  std::basic_string<char16_t> v10;
  __int128 v11;

  v3 = std::__hash_table<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>>>::find<std::type_index>((_QWORD *)this + 1, a2->__type_name);
  if (!v3)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    v7 = (const char *)(a2->__type_name & 0x7FFFFFFFFFFFFFFFLL);
    v8 = strlen(v7);
    morphun::util::StringViewUtils::to_u16string(v7, v8, &v10);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v11, "C", &v10, v9);
    morphun::exception::Throwable::Throwable((uint64_t)exception, &v11);
    *exception = &off_1E8673120;
  }
  v4 = v3[6];
  if (!v4)
    std::__throw_bad_function_call[abi:ne180100]();
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 48))(v4);
}

void sub_1CB50575C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  void *v20;
  int v21;

  if (a20 < 0)
    operator delete(__p);
  if (a14 < 0)
  {
    operator delete(a9);
    if ((v21 & 1) == 0)
LABEL_8:
      _Unwind_Resume(a1);
  }
  else if (!v21)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v20);
  goto LABEL_8;
}

_QWORD *std::__hash_table<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>>>::find<std::type_index>(_QWORD *a1, uint64_t a2)
{
  unint64_t v3;
  unsigned __int8 *v4;
  uint64_t v5;
  unsigned int v6;
  int8x8_t v7;
  uint8x8_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;

  v3 = a2;
  if (a2 < 0)
  {
    v4 = (unsigned __int8 *)(a2 & 0x7FFFFFFFFFFFFFFFLL);
    v5 = 5381;
    do
    {
      v3 = v5;
      v6 = *v4++;
      v5 = (33 * v5) ^ v6;
    }
    while (v6);
  }
  v7 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v7)
    return 0;
  v8 = (uint8x8_t)vcnt_s8(v7);
  v8.i16[0] = vaddlv_u8(v8);
  v9 = v8.u32[0];
  if (v8.u32[0] > 1uLL)
  {
    v10 = v3;
    if (v3 >= *(_QWORD *)&v7)
      v10 = v3 % *(_QWORD *)&v7;
  }
  else
  {
    v10 = (*(_QWORD *)&v7 - 1) & v3;
  }
  v11 = *(_QWORD **)(*a1 + 8 * v10);
  if (!v11)
    return 0;
  v12 = (_QWORD *)*v11;
  if (*v11)
  {
    do
    {
      v13 = v12[1];
      if (v3 == v13)
      {
        if (std::type_info::operator==[abi:ne180100](*(_QWORD *)(v12[2] + 8), a2))
          return v12;
      }
      else
      {
        if (v9 > 1)
        {
          if (v13 >= *(_QWORD *)&v7)
            v13 %= *(_QWORD *)&v7;
        }
        else
        {
          v13 &= *(_QWORD *)&v7 - 1;
        }
        if (v13 != v10)
          return 0;
      }
      v12 = (_QWORD *)*v12;
    }
    while (v12);
  }
  return v12;
}

void std::__throw_bad_function_call[abi:ne180100]()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
}

void std::bad_function_call::~bad_function_call(std::bad_function_call *this)
{
  std::exception::~exception(this);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t std::__hash_table<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>>>::~__hash_table(uint64_t a1)
{
  void *v2;

  std::__hash_table<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>>>::__deallocate_node(*(_QWORD **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void std::__hash_table<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>>>::__deallocate_node(_QWORD *__p)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  if (__p)
  {
    v1 = __p;
    while (1)
    {
      v2 = (_QWORD *)*v1;
      v3 = (_QWORD *)v1[6];
      if (v3 == v1 + 3)
        break;
      if (v3)
      {
        v4 = 5;
LABEL_7:
        (*(void (**)(void))(*v3 + 8 * v4))();
      }
      operator delete(v1);
      v1 = v2;
      if (!v2)
        return;
    }
    v3 = v1 + 3;
    v4 = 4;
    goto LABEL_7;
  }
}

double morphun::analysis::util::AttributeFactory::AttributeFactory(morphun::analysis::util::AttributeFactory *this, uint64_t *a2)
{
  uint64_t v2;
  double result;

  v2 = *a2;
  *(_QWORD *)this = *a2;
  *(_QWORD *)((char *)this + *(_QWORD *)(v2 - 40)) = a2[1];
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *((_DWORD *)this + 10) = 1065353216;
  return result;
}

double morphun::analysis::util::AttributeFactory::AttributeFactory(morphun::analysis::util::AttributeFactory *this)
{
  double result;

  *(_QWORD *)this = &off_1E8671F10;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 1065353216;
  return result;
}

void morphun::analysis::util::AttributeFactory::~AttributeFactory(morphun::analysis::util::AttributeFactory *this, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_QWORD *)this = *a2;
  *(_QWORD *)((char *)this + *(_QWORD *)(v2 - 40)) = a2[1];
  std::__hash_table<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>>>::~__hash_table((uint64_t)this + 8);
}

void `virtual thunk to'morphun::analysis::util::AttributeFactory::~AttributeFactory(morphun::analysis::util::AttributeFactory *this)
{
  _QWORD *v1;

  v1 = (_QWORD *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 32));
  *v1 = &off_1E8671F10;
  std::__hash_table<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>>>::~__hash_table((uint64_t)(v1 + 1));
}

{
  _QWORD *v1;

  v1 = (_QWORD *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 32));
  *v1 = &off_1E8671F10;
  std::__hash_table<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>>>::~__hash_table((uint64_t)(v1 + 1));
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::analysis::util::AttributeFactory::DEFAULT_ATTRIBUTE_FACTORY(morphun::analysis::util::AttributeFactory *this)
{
  unsigned __int8 v1;
  morphun::analysis::util::AttributeFactory_DefaultAttributeFactory *v3;

  if ((v1 & 1) == 0
  {
    v3 = (morphun::analysis::util::AttributeFactory_DefaultAttributeFactory *)operator new();
    morphun::analysis::util::AttributeFactory_DefaultAttributeFactory::AttributeFactory_DefaultAttributeFactory(v3);
    morphun::analysis::util::AttributeFactory::DEFAULT_ATTRIBUTE_FACTORY(void)::DEFAULT_ATTRIBUTE_FACTORY_ = (uint64_t)v3;
  }
  return morphun::analysis::util::AttributeFactory::DEFAULT_ATTRIBUTE_FACTORY(void)::DEFAULT_ATTRIBUTE_FACTORY_;
}

void sub_1CB505B28(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10A1C40EA59D502);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::util::AttributeFactory::getStaticImplementation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *i;
  _QWORD *v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  unsigned int v12;

  v4 = operator new();
  v5 = v4;
  *(_OWORD *)(v4 + 8) = 0u;
  v6 = v4 + 8;
  *(_OWORD *)(v4 + 24) = 0u;
  *(_DWORD *)(v4 + 40) = 1065353216;
  *(_QWORD *)v4 = &off_1E86721F0;
  *(_QWORD *)(v4 + 48) = a1;
  if (v4 + 8 != a2)
  {
    *(_DWORD *)(v4 + 40) = *(_DWORD *)(a2 + 32);
    for (i = *(_QWORD **)(a2 + 16); i; i = (_QWORD *)*i)
    {
      v8 = operator new(0x38uLL);
      *v8 = 0;
      v8[1] = 0;
      v8[2] = i[2];
      std::__function::__value_func<morphun::analysis::util::AttributeImpl * ()(void)>::__value_func[abi:ne180100]((uint64_t)(v8 + 3), (uint64_t)(i + 3));
      v9 = *(_QWORD *)(v8[2] + 8);
      if (v9 < 0)
      {
        v10 = (unsigned __int8 *)(v9 & 0x7FFFFFFFFFFFFFFFLL);
        v11 = 5381;
        do
        {
          v9 = v11;
          v12 = *v10++;
          v11 = (33 * v11) ^ v12;
        }
        while (v12);
      }
      v8[1] = v9;
      std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::__node_insert_multi(v6, v8);
    }
  }
  return v5;
}

void sub_1CB505C4C(_Unwind_Exception *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;

  std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,void *>>>::operator()[abi:ne180100](1, v3);
  *v1 = &off_1E8662420;
  std::__hash_table<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>>>::~__hash_table(v2);
  MEMORY[0x1D179D2EC](v1, 0x10E1C402C2AC9EFLL);
  _Unwind_Resume(a1);
}

void morphun::tokenizer::dictionary::SegmentValidator::~SegmentValidator(morphun::tokenizer::dictionary::SegmentValidator *this)
{
  JUMPOUT(0x1D179D2ECLL);
}

void sub_1CB505D00(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

morphun::Tokenizer *mtok_createTokenizer(const __CFLocale *a1)
{
  const morphun::util::ULocale *v1;
  morphun::Tokenizer *Tokenizer;
  void *v4[16];

  morphun::util::CFUtils::convert((morphun::util::CFUtils *)v4, a1);
  Tokenizer = morphun::TokenizerFactory::createTokenizer((morphun::TokenizerFactory *)v4, v1);
  return Tokenizer;
}

void sub_1CB505D6C(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  const std::exception *v9;
  const void **v12;
  __CFError **v13;

  if (a2 == 1)
  {
    v12 = (const void **)__cxa_begin_catch(a1);
    morphun::util::CFUtils::convert(v12, v9, v13);
    __cxa_end_catch();
    JUMPOUT(0x1CB505D54);
  }
  _Unwind_Resume(a1);
}

uint64_t mtok_createTokenChain(uint64_t a1, const __CFString *a2)
{
  uint64_t v4;
  std::basic_string<char16_t> __p;

  npc<morphun::Tokenizer const>(a1);
  morphun::util::CFUtils::to_u16string(&__p, a2);
  v4 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(_QWORD *)a1 + 24))(a1, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return v4;
}

void sub_1CB505E38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  const std::exception *v15;
  const void **v18;
  __CFError **v19;

  if (a15 < 0)
    operator delete(__p);
  if (a2 == 1)
  {
    v18 = (const void **)__cxa_begin_catch(exception_object);
    morphun::util::CFUtils::convert(v18, v15, v19);
    __cxa_end_catch();
    JUMPOUT(0x1CB505E20);
  }
  _Unwind_Resume(exception_object);
}

uint64_t npc<morphun::Tokenizer const>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB505EDC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t mtok_destroy(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
  return result;
}

uint64_t mtok_getMaxInputSize(uint64_t a1)
{
  return *(unsigned int *)(npc<morphun::Tokenizer const>(a1) + 36);
}

uint64_t mtok_setMaxInputSize(uint64_t a1, int a2)
{
  uint64_t result;

  result = npc<morphun::Tokenizer>(a1);
  *(_DWORD *)(result + 36) = a2;
  return result;
}

void sub_1CB50600C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t mtok_getMaxTokens(uint64_t a1)
{
  return *(unsigned int *)(npc<morphun::Tokenizer const>(a1) + 32);
}

void mtok_setMaxTokens(uint64_t a1, int a2)
{
  morphun::Tokenizer *v3;

  v3 = (morphun::Tokenizer *)npc<morphun::Tokenizer>(a1);
  morphun::Tokenizer::setMaxTokens(v3, a2);
}

uint64_t mtok_setStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = npc<morphun::Tokenizer>(a1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 32))(v3, a2);
}

void morphun::analysis::stemmer::DeStemFilter::~DeStemFilter(morphun::analysis::stemmer::DeStemFilter *this)
{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1E8669958);
}

{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1E8669958);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::analysis::stemmer::DeStemFilter::incrementToken(morphun::analysis::stemmer::DeStemFilter *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  const UChar *v8;
  const std::basic_string<char16_t> *v9;
  unint64_t v10;
  uint64_t v11;
  const UChar *v12;
  _QWORD *v13;
  _QWORD *v14;
  std::basic_string<char16_t> *v15;
  int v16;
  int v17;
  int v18;
  const UChar *v19;
  int v20;
  int v21;
  unsigned int v22;
  BOOL v23;
  int v24;
  BOOL v25;
  morphun::exception::NullPointerException *exception;
  uint64_t v28[3];
  unint64_t v29;

  v2 = *((_QWORD *)this + 12);
  if (!v2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  if ((_DWORD)v3)
  {
    v4 = *((_QWORD *)this + 14);
    if (!v4 || ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 56))(v4) & 1) == 0)
    {
      v5 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
      v6 = (char *)v5 + *(_QWORD *)(*v5 - 96);
      if (v6[23] < 0)
      {
        v8 = *(const UChar **)v6;
        v7 = *((_QWORD *)v6 + 1);
      }
      else
      {
        v7 = v6[23];
        v8 = (const UChar *)((char *)v5 + *(_QWORD *)(*v5 - 96));
      }
      morphun::dictionary::DictionaryMetaData::getPropertyValues(*((_QWORD *)this + 15), v8, v7, (unsigned __int16 *)"l", 5uLL, v28);
      v9 = (const std::basic_string<char16_t> *)v28[0];
      if (v28[0] != v28[1])
      {
        if (*(char *)(v28[0] + 23) < 0)
          v10 = *(_QWORD *)(v28[0] + 8);
        else
          v10 = *(unsigned __int8 *)(v28[0] + 23);
        if (v10 >= 2)
        {
          v13 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
          std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v13 + *(_QWORD *)(*v13 - 96)), v9);
        }
        goto LABEL_47;
      }
      v29 = 0;
      if (v6[23] < 0)
      {
        v12 = *(const UChar **)v6;
        v11 = *((_QWORD *)v6 + 1);
      }
      else
      {
        v11 = v6[23];
        v12 = (const UChar *)v6;
      }
      if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*((_QWORD *)this + 15), (uint64_t)&v29, v12, v11)&& (*((_QWORD *)this + 16) & v29) != 0)
      {
        goto LABEL_47;
      }
      v14 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
      v15 = (std::basic_string<char16_t> *)((char *)v14 + *(_QWORD *)(*v14 - 96));
      v16 = v6[23];
      if (v16 >= 0)
        v17 = v6[23];
      else
        v17 = *((_DWORD *)v6 + 2);
      if (v17 < 5)
      {
        v18 = v17;
LABEL_46:
        std::basic_string<char16_t>::resize(v15, v18, 0);
LABEL_47:
        v29 = (unint64_t)v28;
        std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v29);
        return v3;
      }
      if (v16 >= 0)
        v19 = (const UChar *)v6;
      else
        v19 = *(const UChar **)v6;
      v20 = v19[v17 - 1];
      v21 = v19[v17 - 2];
      if (v17 < 7)
      {
        if (v17 != 6)
          goto LABEL_41;
      }
      else
      {
        v18 = v17 - 3;
        if (v19[v17 - 3] == 110 && v21 == 101 && v20 == 110)
          goto LABEL_46;
      }
      if (v21 == 101)
      {
        v18 = v17 - 2;
        if ((v20 - 114) < 2)
          goto LABEL_46;
        if (v20 != 101)
        {
          if (v20 == 110)
            v18 = v17 - 2;
          else
            v18 = v17;
          goto LABEL_46;
        }
LABEL_45:
        v18 = v17 - 1;
        goto LABEL_46;
      }
      if (v21 == 115)
      {
        v18 = v17 - 2;
        if (v20 == 101)
          goto LABEL_46;
      }
LABEL_41:
      v22 = v20 - 101;
      v23 = v22 > 0xE;
      v24 = (1 << v22) & 0x6201;
      v25 = v23 || v24 == 0;
      v18 = v17;
      if (v25)
        goto LABEL_46;
      goto LABEL_45;
    }
  }
  return v3;
}

void sub_1CB5063F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  a12 = (void **)&a9;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&a12);
  _Unwind_Resume(a1);
}

void *morphun::analysis::stemmer::DeStemFilter::reset(morphun::analysis::stemmer::DeStemFilter *this)
{
  uint64_t v2;
  void *result;

  v2 = npc<morphun::analysis::TokenStream>(*((_QWORD *)this + 12));
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
  result = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::KeywordAttribute>((uint64_t)this);
  *((_QWORD *)this + 14) = result;
  return result;
}

void sub_1CB5064A0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t **com::apple::siri::tokenizer::data::config_is::getContent@<X0>(uint64_t **a1@<X8>)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v3 = xmmword_1E8686A40;
  v4 = 0x1CB73E8CALL;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

uint64_t *morphun::analysis::tokenattributes::CharTermAttribute::CharTermAttribute(uint64_t *this, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *this = *a2;
  *(uint64_t *)((char *)this + *(_QWORD *)(v2 - 88)) = a2[1];
  *(uint64_t *)((char *)this + *(_QWORD *)(*this - 56)) = a2[2];
  *(uint64_t *)((char *)this + *(_QWORD *)(*this - 40)) = a2[3];
  return this;
}

_QWORD *morphun::analysis::tokenattributes::CharTermAttribute::CharTermAttribute(_QWORD *this, const morphun::analysis::tokenattributes::CharTermAttribute *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)a2;
  *this = *(_QWORD *)a2;
  *(_QWORD *)((char *)this + *(_QWORD *)(v2 - 88)) = *((_QWORD *)a2 + 1);
  *(_QWORD *)((char *)this + *(_QWORD *)(*this - 56)) = *((_QWORD *)a2 + 2);
  *(_QWORD *)((char *)this + *(_QWORD *)(*this - 40)) = *((_QWORD *)a2 + 3);
  return this;
}

void morphun::grammar::synthesis::PtGrammarSynthesizer_ArticleLookupFunction::~PtGrammarSynthesizer_ArticleLookupFunction(void **this)
{
  void *v2;

  *this = &off_1E866F298;
  if (*((char *)this + 695) < 0)
    operator delete(this[84]);
  if (*((char *)this + 671) < 0)
    operator delete(this[81]);
  if (*((char *)this + 647) < 0)
    operator delete(this[78]);
  if (*((char *)this + 623) < 0)
    operator delete(this[75]);
  if (*((char *)this + 599) < 0)
    operator delete(this[72]);
  if (*((char *)this + 575) < 0)
    operator delete(this[69]);
  if (*((char *)this + 551) < 0)
    operator delete(this[66]);
  morphun::grammar::synthesis::PtGrammarSynthesizer_GenericLookupFunction::~PtGrammarSynthesizer_GenericLookupFunction((morphun::grammar::synthesis::PtGrammarSynthesizer_GenericLookupFunction *)(this + 39));
  morphun::grammar::synthesis::PtGrammarSynthesizer_GenericLookupFunction::~PtGrammarSynthesizer_GenericLookupFunction((morphun::grammar::synthesis::PtGrammarSynthesizer_GenericLookupFunction *)(this + 12));
  v2 = this[4];
  this[4] = 0;
  if (v2)
    (*(void (**)(void *))(*(_QWORD *)v2 + 16))(v2);
}

{
  morphun::grammar::synthesis::PtGrammarSynthesizer_ArticleLookupFunction::~PtGrammarSynthesizer_ArticleLookupFunction(this);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::grammar::synthesis::PtGrammarSynthesizer_ArticleLookupFunction::getFeatureValue(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unsigned __int16 *v8;
  int Count;
  uint64_t v10;
  unsigned __int16 *v11;
  int Gender;
  _QWORD *v16;
  uint64_t (*v17)(_QWORD *, uint64_t, _QWORD *);
  void *__p[2];
  char v19;

  if (a1[9])
  {
    v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 32))(a2);
    if (v4)
      return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*a1 + 32))(a1, a2, v4);
  }
  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
  v7 = a1[10];
  npc<morphun::dialog::SemanticFeature const>(v7);
  v8 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 32))(a2, v7);
  Count = morphun::grammar::synthesis::PtGrammarSynthesizer::getCount(v8);
  if (!Count)
  {
    morphun::grammar::synthesis::PtGrammarSynthesizer_GenericLookupFunction::determine((uint64_t)(a1 + 12), v6, __p);
    Count = morphun::grammar::synthesis::PtGrammarSynthesizer::getCount((unsigned __int16 *)__p);
    if (v19 < 0)
      operator delete(__p[0]);
  }
  v10 = a1[11];
  npc<morphun::dialog::SemanticFeature const>(v10);
  v11 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 32))(a2, v10);
  Gender = morphun::grammar::synthesis::PtGrammarSynthesizer::getGender(v11);
  if (!Gender)
  {
    morphun::grammar::synthesis::PtGrammarSynthesizer_GenericLookupFunction::determine((uint64_t)(a1 + 39), v6, __p);
    Gender = morphun::grammar::synthesis::PtGrammarSynthesizer::getGender((unsigned __int16 *)__p);
    if (v19 < 0)
      operator delete(__p[0]);
  }
  if (Count == 1 && Gender == 1)
  {
    v16 = a1 + 75;
  }
  else if (Count == 1 && Gender == 2)
  {
    v16 = a1 + 78;
  }
  else if (Count == 2 && Gender == 1)
  {
    v16 = a1 + 81;
  }
  else if (Count == 2 && Gender == 2)
  {
    v16 = a1 + 84;
  }
  else
  {
    if (Count != 1)
    {
      v17 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD *))(*a1 + 32);
      if (Count == 2)
        v16 = a1 + 72;
      else
        v16 = a1 + 66;
      return v17(a1, a2, v16);
    }
    v16 = a1 + 69;
  }
  v17 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD *))(*a1 + 32);
  return v17(a1, a2, v16);
}

void sub_1CB506864(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1CB5068C8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::basic_string<char16_t> *morphun::grammar::synthesis::PtGrammarSynthesizer_ArticleLookupFunction::PtGrammarSynthesizer_ArticleLookupFunction(std::basic_string<char16_t> *a1, uint64_t a2, uint64_t a3, __int128 *a4, __int128 *a5, __int128 *a6, __int128 *a7, __int128 *a8, __int128 *a9, __int128 *a10)
{
  uint64_t v17;
  morphun::dialog::DefaultArticleLookupFunction *v18;
  morphun::dictionary::DictionaryMetaData *v19;
  const morphun::util::ULocale *v20;
  morphun::util::LocaleUtils *Dictionary;
  morphun::TokenizerFactory *v22;
  const morphun::util::ULocale *v23;
  morphun::Tokenizer *Tokenizer;
  std::basic_string<char16_t>::size_type v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  morphun::grammar::synthesis::GrammemeConstants *v29;
  std::basic_string<char16_t>::size_type v30;
  morphun::grammar::synthesis::GrammemeConstants *v31;
  std::basic_string<char16_t>::size_type v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  morphun::grammar::synthesis::GrammemeConstants *v37;
  uint64_t i;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  morphun::grammar::synthesis::GrammemeConstants *v43;
  uint64_t j;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t data;
  uint64_t v53;
  __int128 v54;
  uint64_t *BinaryProperties;
  morphun::grammar::synthesis::GrammemeConstants *v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t *v60;
  morphun::grammar::synthesis::GrammemeConstants *v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  uint64_t *v65;
  morphun::grammar::synthesis::GrammemeConstants *v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t *v70;
  morphun::exception::NullPointerException *exception;
  std::basic_string<char16_t> *p_p;
  char v75;
  std::basic_string<char16_t> __p;
  std::basic_string<char16_t> v77;
  std::basic_string<char16_t> v78;
  __int128 v79;

  *((_QWORD *)&v79 + 1) = *MEMORY[0x1E0C80C00];
  a1->__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&off_1E865DCE0;
  v17 = *(unsigned __int8 *)(a3 + 23);
  if ((v17 & 0x80u) != 0)
    v17 = *(_QWORD *)(a3 + 8);
  v18 = morphun::dialog::DefaultArticleLookupFunction::DefaultArticleLookupFunction((morphun::dialog::DefaultArticleLookupFunction *)a1, (const morphun::dialog::SemanticFeatureModel *)&off_1E86685A8, a2, v17 != 0, 1);
  a1->__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&off_1E866F298;
  v19 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::PORTUGUESE(v18);
  Dictionary = (morphun::util::LocaleUtils *)morphun::dictionary::DictionaryMetaData::createDictionary(v19, v20);
  if (!Dictionary)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  a1[1].__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)Dictionary;
  v22 = (morphun::TokenizerFactory *)morphun::util::LocaleUtils::PORTUGUESE(Dictionary);
  Tokenizer = morphun::TokenizerFactory::createTokenizer(v22, v23);
  *(_OWORD *)&a1[1].__r_.__value_.__r.__words[2] = 0u;
  *(_OWORD *)&a1[2].__r_.__value_.__r.__words[1] = 0u;
  a1[1].__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)Tokenizer;
  v25 = *(unsigned __int8 *)(a3 + 23);
  if ((v25 & 0x80u) != 0)
    v25 = *(_QWORD *)(a3 + 8);
  if (v25)
  {
    v26 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a2 + 8, (unsigned __int16 *)a3);
    if (a2 + 16 == v26)
      v25 = 0;
    else
      v25 = *(_QWORD *)(v26 + 56);
  }
  a1[3].__r_.__value_.__r.__words[0] = v25;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"count");
  v27 = a2 + 8;
  v28 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a2 + 8, (unsigned __int16 *)&__p);
  v29 = (morphun::grammar::synthesis::GrammemeConstants *)(a2 + 16);
  if (v29 == (morphun::grammar::synthesis::GrammemeConstants *)v28)
    v30 = 0;
  else
    v30 = *(_QWORD *)(v28 + 56);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  a1[3].__r_.__value_.__l.__size_ = v30;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"gender");
  v31 = (morphun::grammar::synthesis::GrammemeConstants *)std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v27, (unsigned __int16 *)&__p);
  if (v29 == v31)
    v32 = 0;
  else
    v32 = *((_QWORD *)v31 + 7);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  a1[3].__r_.__value_.__r.__words[2] = v32;
  v33 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v31);
  if (*(char *)(v33 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&__p, *(const std::basic_string<char16_t>::value_type **)v33, *(_QWORD *)(v33 + 8));
  }
  else
  {
    v34 = *(_OWORD *)v33;
    __p.__r_.__value_.__r.__words[2] = *(_QWORD *)(v33 + 16);
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v34;
  }
  v35 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v33);
  if (*(char *)(v35 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v77, *(const std::basic_string<char16_t>::value_type **)v35, *(_QWORD *)(v35 + 8));
  }
  else
  {
    v36 = *(_OWORD *)v35;
    v77.__r_.__value_.__r.__words[2] = *(_QWORD *)(v35 + 16);
    *(_OWORD *)&v77.__r_.__value_.__l.__data_ = v36;
  }
  memset(&v78, 0, sizeof(v78));
  v75 = 0;
  v78.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x30uLL);
  v78.__r_.__value_.__l.__size_ = v78.__r_.__value_.__r.__words[0];
  v78.__r_.__value_.__r.__words[2] = v78.__r_.__value_.__r.__words[0] + 48;
  v78.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v78.__r_.__value_.__r.__words[2], (__int128 *)&__p, (__int128 *)&v78, (std::basic_string<char16_t> *)v78.__r_.__value_.__l.__data_);
  morphun::grammar::synthesis::PtGrammarSynthesizer_GenericLookupFunction::PtGrammarSynthesizer_GenericLookupFunction((morphun::util::LocaleUtils *)&a1[4], (uint64_t *)&v78);
  p_p = &v78;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_p);
  for (i = 0; i != -6; i -= 3)
  {
    if (SHIBYTE(v77.__r_.__value_.__r.__words[i + 2]) < 0)
      operator delete(*(void **)((char *)&__p + i * 8 + 24));
  }
  v39 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(v37);
  if (*(char *)(v39 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&__p, *(const std::basic_string<char16_t>::value_type **)v39, *(_QWORD *)(v39 + 8));
  }
  else
  {
    v40 = *(_OWORD *)v39;
    __p.__r_.__value_.__r.__words[2] = *(_QWORD *)(v39 + 16);
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v40;
  }
  v41 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE((morphun::grammar::synthesis::GrammemeConstants *)v39);
  if (*(char *)(v41 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v77, *(const std::basic_string<char16_t>::value_type **)v41, *(_QWORD *)(v41 + 8));
  }
  else
  {
    v42 = *(_OWORD *)v41;
    v77.__r_.__value_.__r.__words[2] = *(_QWORD *)(v41 + 16);
    *(_OWORD *)&v77.__r_.__value_.__l.__data_ = v42;
  }
  memset(&v78, 0, sizeof(v78));
  p_p = &v78;
  v75 = 0;
  v78.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x30uLL);
  v78.__r_.__value_.__l.__size_ = v78.__r_.__value_.__r.__words[0];
  v78.__r_.__value_.__r.__words[2] = v78.__r_.__value_.__r.__words[0] + 48;
  v78.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v78.__r_.__value_.__r.__words[2], (__int128 *)&__p, (__int128 *)&v78, (std::basic_string<char16_t> *)v78.__r_.__value_.__l.__data_);
  morphun::grammar::synthesis::PtGrammarSynthesizer_GenericLookupFunction::PtGrammarSynthesizer_GenericLookupFunction((morphun::util::LocaleUtils *)&a1[13], (uint64_t *)&v78);
  p_p = &v78;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_p);
  for (j = 0; j != -6; j -= 3)
  {
    if (SHIBYTE(v77.__r_.__value_.__r.__words[j + 2]) < 0)
      operator delete(*(void **)((char *)&__p + j * 8 + 24));
  }
  if (*((char *)a4 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a1 + 22, *(const std::basic_string<char16_t>::value_type **)a4, *((_QWORD *)a4 + 1));
  }
  else
  {
    v45 = *a4;
    a1[22].__r_.__value_.__r.__words[2] = *((_QWORD *)a4 + 2);
    *(_OWORD *)&a1[22].__r_.__value_.__l.__data_ = v45;
  }
  if (*((char *)a5 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a1 + 23, *(const std::basic_string<char16_t>::value_type **)a5, *((_QWORD *)a5 + 1));
  }
  else
  {
    v46 = *a5;
    a1[23].__r_.__value_.__r.__words[2] = *((_QWORD *)a5 + 2);
    *(_OWORD *)&a1[23].__r_.__value_.__l.__data_ = v46;
  }
  if (*((char *)a6 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a1 + 24, *(const std::basic_string<char16_t>::value_type **)a6, *((_QWORD *)a6 + 1));
  }
  else
  {
    v47 = *a6;
    a1[24].__r_.__value_.__r.__words[2] = *((_QWORD *)a6 + 2);
    *(_OWORD *)&a1[24].__r_.__value_.__l.__data_ = v47;
  }
  if (*((char *)a7 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a1 + 25, *(const std::basic_string<char16_t>::value_type **)a7, *((_QWORD *)a7 + 1));
  }
  else
  {
    v48 = *a7;
    a1[25].__r_.__value_.__r.__words[2] = *((_QWORD *)a7 + 2);
    *(_OWORD *)&a1[25].__r_.__value_.__l.__data_ = v48;
  }
  if (*((char *)a8 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a1 + 26, *(const std::basic_string<char16_t>::value_type **)a8, *((_QWORD *)a8 + 1));
  }
  else
  {
    v49 = *a8;
    a1[26].__r_.__value_.__r.__words[2] = *((_QWORD *)a8 + 2);
    *(_OWORD *)&a1[26].__r_.__value_.__l.__data_ = v49;
  }
  if (*((char *)a9 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a1 + 27, *(const std::basic_string<char16_t>::value_type **)a9, *((_QWORD *)a9 + 1));
  }
  else
  {
    v50 = *a9;
    a1[27].__r_.__value_.__r.__words[2] = *((_QWORD *)a9 + 2);
    *(_OWORD *)&a1[27].__r_.__value_.__l.__data_ = v50;
  }
  if (*((char *)a10 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a1 + 28, *(const std::basic_string<char16_t>::value_type **)a10, *((_QWORD *)a10 + 1));
  }
  else
  {
    v51 = *a10;
    a1[28].__r_.__value_.__r.__words[2] = *((_QWORD *)a10 + 2);
    *(_OWORD *)&a1[28].__r_.__value_.__l.__data_ = v51;
  }
  data = (uint64_t)a1[1].__r_.__value_.__l.__data_;
  v53 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE(v43);
  if (*(char *)(v53 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v78, *(const std::basic_string<char16_t>::value_type **)v53, *(_QWORD *)(v53 + 8));
  }
  else
  {
    v54 = *(_OWORD *)v53;
    v78.__r_.__value_.__r.__words[2] = *(_QWORD *)(v53 + 16);
    *(_OWORD *)&v78.__r_.__value_.__l.__data_ = v54;
  }
  memset(&__p, 0, sizeof(__p));
  p_p = &__p;
  v75 = 0;
  __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x18uLL);
  __p.__r_.__value_.__l.__size_ = __p.__r_.__value_.__r.__words[0];
  __p.__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[0] + 24;
  __p.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&__p.__r_.__value_.__r.__words[2], (__int128 *)&v78, &v79, (std::basic_string<char16_t> *)__p.__r_.__value_.__l.__data_);
  BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(data, (uint64_t *)&a1[1].__r_.__value_.__r.__words[2], (uint64_t *)&__p);
  morphun::util::Validate::notNull<long long>((uint64_t)BinaryProperties);
  p_p = &__p;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_p);
  if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v78.__r_.__value_.__l.__data_);
  v57 = (uint64_t)a1[1].__r_.__value_.__l.__data_;
  v58 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(v56);
  if (*(char *)(v58 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v78, *(const std::basic_string<char16_t>::value_type **)v58, *(_QWORD *)(v58 + 8));
  }
  else
  {
    v59 = *(_OWORD *)v58;
    v78.__r_.__value_.__r.__words[2] = *(_QWORD *)(v58 + 16);
    *(_OWORD *)&v78.__r_.__value_.__l.__data_ = v59;
  }
  memset(&__p, 0, sizeof(__p));
  p_p = &__p;
  v75 = 0;
  __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x18uLL);
  __p.__r_.__value_.__l.__size_ = __p.__r_.__value_.__r.__words[0];
  __p.__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[0] + 24;
  __p.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&__p.__r_.__value_.__r.__words[2], (__int128 *)&v78, &v79, (std::basic_string<char16_t> *)__p.__r_.__value_.__l.__data_);
  v60 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v57, (uint64_t *)&a1[2], (uint64_t *)&__p);
  morphun::util::Validate::notNull<long long>((uint64_t)v60);
  p_p = &__p;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_p);
  if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v78.__r_.__value_.__l.__data_);
  v62 = (uint64_t)a1[1].__r_.__value_.__l.__data_;
  v63 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v61);
  if (*(char *)(v63 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v78, *(const std::basic_string<char16_t>::value_type **)v63, *(_QWORD *)(v63 + 8));
  }
  else
  {
    v64 = *(_OWORD *)v63;
    v78.__r_.__value_.__r.__words[2] = *(_QWORD *)(v63 + 16);
    *(_OWORD *)&v78.__r_.__value_.__l.__data_ = v64;
  }
  memset(&__p, 0, sizeof(__p));
  p_p = &__p;
  v75 = 0;
  __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x18uLL);
  __p.__r_.__value_.__l.__size_ = __p.__r_.__value_.__r.__words[0];
  __p.__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[0] + 24;
  __p.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&__p.__r_.__value_.__r.__words[2], (__int128 *)&v78, &v79, (std::basic_string<char16_t> *)__p.__r_.__value_.__l.__data_);
  v65 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v62, (uint64_t *)&a1[2].__r_.__value_.__l.__size_, (uint64_t *)&__p);
  morphun::util::Validate::notNull<long long>((uint64_t)v65);
  p_p = &__p;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_p);
  if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v78.__r_.__value_.__l.__data_);
  v67 = (uint64_t)a1[1].__r_.__value_.__l.__data_;
  v68 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(v66);
  if (*(char *)(v68 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v78, *(const std::basic_string<char16_t>::value_type **)v68, *(_QWORD *)(v68 + 8));
  }
  else
  {
    v69 = *(_OWORD *)v68;
    v78.__r_.__value_.__r.__words[2] = *(_QWORD *)(v68 + 16);
    *(_OWORD *)&v78.__r_.__value_.__l.__data_ = v69;
  }
  memset(&__p, 0, sizeof(__p));
  p_p = &__p;
  v75 = 0;
  __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x18uLL);
  __p.__r_.__value_.__l.__size_ = __p.__r_.__value_.__r.__words[0];
  __p.__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[0] + 24;
  __p.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&__p.__r_.__value_.__r.__words[2], (__int128 *)&v78, &v79, (std::basic_string<char16_t> *)__p.__r_.__value_.__l.__data_);
  v70 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v67, (uint64_t *)&a1[2].__r_.__value_.__r.__words[2], (uint64_t *)&__p);
  morphun::util::Validate::notNull<long long>((uint64_t)v70);
  p_p = &__p;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_p);
  if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v78.__r_.__value_.__l.__data_);
  return a1;
}

void sub_1CB5070E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **a9, void **a10, morphun::grammar::synthesis::PtGrammarSynthesizer_GenericLookupFunction *a11, morphun::grammar::synthesis::PtGrammarSynthesizer_GenericLookupFunction *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  uint64_t v33;
  void **v34;
  void **v35;
  void **v36;
  void **v37;
  uint64_t v39;

  if (*(char *)(v33 + 671) < 0)
    operator delete(*v34);
  if (*(char *)(v33 + 647) < 0)
    operator delete(*v37);
  if (*(char *)(v33 + 623) < 0)
    operator delete(*v36);
  if (*(char *)(v33 + 599) < 0)
    operator delete(*v35);
  if (*(char *)(v33 + 575) < 0)
    operator delete(*a9);
  if (*(char *)(v33 + 551) < 0)
    operator delete(*a10);
  morphun::grammar::synthesis::PtGrammarSynthesizer_GenericLookupFunction::~PtGrammarSynthesizer_GenericLookupFunction(a11);
  morphun::grammar::synthesis::PtGrammarSynthesizer_GenericLookupFunction::~PtGrammarSynthesizer_GenericLookupFunction(a12);
  v39 = *(_QWORD *)(v33 + 32);
  *(_QWORD *)(v33 + 32) = 0;
  if (v39)
    (*(void (**)(uint64_t))(*(_QWORD *)v39 + 16))(v39);
  _Unwind_Resume(a1);
}

void morphun::analysis::DefaultAnalyzerFactory::~DefaultAnalyzerFactory(morphun::analysis::DefaultAnalyzerFactory *this)
{
}

{
  JUMPOUT(0x1D179D2ECLL);
}

void std::unique_ptr<std::__tree_node<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  void **v1;

  v1 = *(void ***)a1;
  *(_QWORD *)a1 = 0;
  if (v1)
  {
    if (*(_BYTE *)(a1 + 16))
    operator delete(v1);
  }
}

BOOL std::less<morphun::util::ULocale>::operator()[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  const void *v3;
  const void *v4;
  int v5;
  uint64_t v6;
  const void *v7;
  const void *v8;
  int v9;
  size_t v10;
  size_t v11;
  const void *v12;
  size_t v13;
  int v14;

  v4 = *(const void **)(a1 + 104);
  v2 = a1 + 104;
  v3 = v4;
  v5 = *(char *)(v2 + 23);
  v8 = *(const void **)(a2 + 104);
  v6 = a2 + 104;
  v7 = v8;
  v9 = *(char *)(v6 + 23);
  if (v9 >= 0)
    v10 = *(unsigned __int8 *)(v6 + 23);
  else
    v10 = *(_QWORD *)(v6 + 8);
  if (v9 >= 0)
    v7 = (const void *)v6;
  if (v5 >= 0)
    v11 = *(unsigned __int8 *)(v2 + 23);
  else
    v11 = *(_QWORD *)(v2 + 8);
  if (v5 >= 0)
    v12 = (const void *)v2;
  else
    v12 = v3;
  if (v11 >= v10)
    v13 = v10;
  else
    v13 = v11;
  v14 = memcmp(v7, v12, v13);
  if (v14)
    return v14 < 0;
  else
    return v10 < v11;
}

morphun::analysis::Analyzer *morphun::analysis::constructor<morphun::analysis::ArAnalyzer>(const morphun::util::ULocale *a1, uint64_t a2)
{
  morphun::analysis::Analyzer *v4;

  v4 = (morphun::analysis::Analyzer *)operator new();
  *(_QWORD *)v4 = &off_1E866A910;
  morphun::analysis::ConfigurableAnalyzer::ConfigurableAnalyzer(v4, (uint64_t *)&off_1E8668CB0, a1, 0, a2);
  *(_QWORD *)v4 = &off_1E8670048;
  return v4;
}

void sub_1CB5074D4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

morphun::analysis::Analyzer *morphun::analysis::constructor<morphun::analysis::MinimalAnalyzer>(const morphun::util::ULocale *a1, uint64_t a2)
{
  morphun::analysis::Analyzer *v4;

  v4 = (morphun::analysis::Analyzer *)operator new();
  *(_QWORD *)v4 = &off_1E866A910;
  morphun::analysis::ConfigurableAnalyzer::ConfigurableAnalyzer(v4, (uint64_t *)&off_1E8669130, a1, 0, a2);
  *(_QWORD *)v4 = &off_1E8670DC8;
  return v4;
}

void sub_1CB507570(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

morphun::analysis::Analyzer *morphun::analysis::constructor<morphun::analysis::DaAnalyzer>(const morphun::util::ULocale *a1, uint64_t a2)
{
  morphun::analysis::Analyzer *v4;
  unsigned __int8 v5;
  uint64_t SnowballStopwordSet;
  void *__p[2];
  char v9;

  v4 = (morphun::analysis::Analyzer *)operator new();
  *(_QWORD *)v4 = &off_1E866A910;
  if ((v5 & 1) == 0
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"danish_stop.txt");
    SnowballStopwordSet = morphun::analysis::util::StopwordAnalyzerBase::loadSnowballStopwordSet((const void **)__p);
    if (v9 < 0)
      operator delete(__p[0]);
    morphun::analysis::DaAnalyzer::DEFAULT_STOP_SET(void)::DEFAULT_STOP_SET_ = SnowballStopwordSet;
  }
  morphun::analysis::ConfigurableAnalyzer::ConfigurableAnalyzer(v4, (uint64_t *)&off_1E8668CF0, a1, morphun::analysis::DaAnalyzer::DEFAULT_STOP_SET(void)::DEFAULT_STOP_SET_, a2);
  *(_QWORD *)v4 = &off_1E8670108;
  return v4;
}

void sub_1CB507684(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  if (a15 < 0)
    operator delete(__p);
  MEMORY[0x1D179D2EC](v15, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

morphun::analysis::Analyzer *morphun::analysis::constructor<morphun::analysis::DeAnalyzer>(const morphun::util::ULocale *a1, uint64_t a2)
{
  morphun::analysis::Analyzer *v4;
  unsigned __int8 v5;
  uint64_t SnowballStopwordSet;
  void *__p[2];
  char v9;

  v4 = (morphun::analysis::Analyzer *)operator new();
  *(_QWORD *)v4 = &off_1E866A910;
  if ((v5 & 1) == 0
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"german_stop.txt");
    SnowballStopwordSet = morphun::analysis::util::StopwordAnalyzerBase::loadSnowballStopwordSet((const void **)__p);
    if (v9 < 0)
      operator delete(__p[0]);
    morphun::analysis::DeAnalyzer::DEFAULT_STOP_SET(void)::DEFAULT_STOP_SET_ = SnowballStopwordSet;
  }
  morphun::analysis::ConfigurableAnalyzer::ConfigurableAnalyzer(v4, (uint64_t *)&off_1E8668D30, a1, morphun::analysis::DeAnalyzer::DEFAULT_STOP_SET(void)::DEFAULT_STOP_SET_, a2);
  *(_QWORD *)v4 = &off_1E86701C8;
  return v4;
}

void sub_1CB5077C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  if (a15 < 0)
    operator delete(__p);
  MEMORY[0x1D179D2EC](v15, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

morphun::analysis::Analyzer *morphun::analysis::constructor<morphun::analysis::EnAnalyzer>(const morphun::util::ULocale *a1, uint64_t a2)
{
  morphun::analysis::Analyzer *v4;
  unsigned __int8 v5;
  uint64_t *v7;
  uint64_t v8;
  _QWORD v9[3];
  _QWORD v10[3];
  _QWORD v11[3];
  _QWORD v12[3];
  _QWORD v13[3];
  _QWORD v14[3];
  _QWORD v15[3];
  _QWORD v16[3];
  _QWORD v17[3];
  _QWORD v18[3];
  _QWORD v19[3];
  _QWORD v20[3];
  _QWORD v21[3];
  _QWORD v22[3];
  _QWORD v23[3];
  _QWORD v24[3];
  _QWORD v25[3];
  _QWORD v26[3];
  _QWORD v27[3];
  _QWORD v28[3];
  _QWORD v29[3];
  _QWORD v30[3];
  _QWORD v31[3];
  _QWORD v32[3];
  _QWORD v33[3];
  _QWORD v34[3];
  _QWORD v35[3];
  _QWORD v36[3];
  _QWORD v37[3];
  _QWORD v38[3];
  _QWORD v39[3];
  _QWORD v40[3];
  _QWORD v41[4];

  v41[3] = *MEMORY[0x1E0C80C00];
  v4 = (morphun::analysis::Analyzer *)operator new();
  *(_QWORD *)v4 = &off_1E866A910;
  if ((v5 & 1) == 0
  {
    v7 = (uint64_t *)operator new();
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v9, "a");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v10, "a");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v11, (char *)L"and");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v12, (char *)L"are");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v13, (char *)word_1CB73CF56);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v14, (char *)L"at");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v15, "b");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v16, (char *)L"but");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v17, (char *)L"by");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v18, "f");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v19, "i");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v20, "i");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v21, (char *)L"into");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v22, (char *)L"is");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v23, "i");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v24, (char *)L"no");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v25, "n");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v26, "o");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v27, (char *)L"on");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v28, (char *)L"or");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v29, "s");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v30, (char *)L"that");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v31, "t");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v32, (char *)L"their");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v33, "t");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v34, (char *)L"there");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v35, (char *)L"these");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v36, "t");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v37, (char *)L"this");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v38, "t");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v39, (char *)L"was");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v40, (char *)L"will");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v41, "w");
    std::set<std::basic_string<char16_t>>::set[abi:ne180100](v7, (unsigned __int16 *)v9, 33);
    v8 = 99;
    do
    {
      if (SHIBYTE(v9[v8 - 1]) < 0)
        operator delete((void *)v9[v8 - 3]);
      v8 -= 3;
    }
    while (v8 * 8);
    morphun::analysis::EnAnalyzer::DEFAULT_STOP_SET(void)::DEFAULT_STOP_SET_ = (uint64_t)v7;
  }
  morphun::analysis::ConfigurableAnalyzer::ConfigurableAnalyzer(v4, (uint64_t *)&off_1E8668D70, a1, morphun::analysis::EnAnalyzer::DEFAULT_STOP_SET(void)::DEFAULT_STOP_SET_, a2);
  *(_QWORD *)v4 = &off_1E8670288;
  return v4;
}

void sub_1CB507C34(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v5 = 792;
  while (1)
  {
    if (*(char *)(v3 + v5 - 1) < 0)
      operator delete(*(void **)(v3 + v5 - 24));
    v5 -= 24;
    if (!v5)
    {
      MEMORY[0x1D179D2EC](v2, 0x1020C4062D53EE8);
      MEMORY[0x1D179D2EC](v1, 0x10F3C403D3B7C4FLL);
      _Unwind_Resume(a1);
    }
  }
}

morphun::analysis::Analyzer *morphun::analysis::constructor<morphun::analysis::EsAnalyzer>(const morphun::util::ULocale *a1, uint64_t a2)
{
  morphun::analysis::Analyzer *v4;
  unsigned __int8 v5;
  uint64_t SnowballStopwordSet;
  void *__p[2];
  char v9;

  v4 = (morphun::analysis::Analyzer *)operator new();
  *(_QWORD *)v4 = &off_1E866A910;
  if ((v5 & 1) == 0
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "s");
    SnowballStopwordSet = morphun::analysis::util::StopwordAnalyzerBase::loadSnowballStopwordSet((const void **)__p);
    if (v9 < 0)
      operator delete(__p[0]);
    morphun::analysis::EsAnalyzer::DEFAULT_STOP_SET(void)::DEFAULT_STOP_SET_ = SnowballStopwordSet;
  }
  morphun::analysis::ConfigurableAnalyzer::ConfigurableAnalyzer(v4, (uint64_t *)&off_1E8668DB0, a1, morphun::analysis::EsAnalyzer::DEFAULT_STOP_SET(void)::DEFAULT_STOP_SET_, a2);
  *(_QWORD *)v4 = &off_1E8670348;
  return v4;
}

void sub_1CB507DCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  if (a15 < 0)
    operator delete(__p);
  MEMORY[0x1D179D2EC](v15, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

morphun::analysis::Analyzer *morphun::analysis::constructor<morphun::analysis::FiAnalyzer>(const morphun::util::ULocale *a1, uint64_t a2)
{
  morphun::analysis::Analyzer *v4;
  unsigned __int8 v5;
  uint64_t SnowballStopwordSet;
  void *__p[2];
  char v9;

  v4 = (morphun::analysis::Analyzer *)operator new();
  *(_QWORD *)v4 = &off_1E866A910;
  if ((v5 & 1) == 0
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "f");
    SnowballStopwordSet = morphun::analysis::util::StopwordAnalyzerBase::loadSnowballStopwordSet((const void **)__p);
    if (v9 < 0)
      operator delete(__p[0]);
    morphun::analysis::FiAnalyzer::DEFAULT_STOP_SET(void)::DEFAULT_STOP_SET_ = SnowballStopwordSet;
  }
  morphun::analysis::ConfigurableAnalyzer::ConfigurableAnalyzer(v4, (uint64_t *)&off_1E8668DF0, a1, morphun::analysis::FiAnalyzer::DEFAULT_STOP_SET(void)::DEFAULT_STOP_SET_, a2);
  *(_QWORD *)v4 = &off_1E8670408;
  return v4;
}

void sub_1CB507F0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  if (a15 < 0)
    operator delete(__p);
  MEMORY[0x1D179D2EC](v15, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

morphun::analysis::Analyzer *morphun::analysis::constructor<morphun::analysis::FrAnalyzer>(const morphun::util::ULocale *a1, uint64_t a2)
{
  morphun::analysis::Analyzer *v4;
  unsigned __int8 v5;
  morphun::analysis::FrAnalyzer *v7;

  v4 = (morphun::analysis::Analyzer *)operator new();
  *(_QWORD *)v4 = &off_1E866A910;
  if ((v5 & 1) == 0)
  {
    if ((_DWORD)v7)
    {
      morphun::analysis::FrAnalyzer::DEFAULT_STOP_SET(void)::DEFAULT_STOP_SET_ = (uint64_t)morphun::analysis::FrAnalyzer::loadStopwordSet(v7);
    }
  }
  morphun::analysis::ConfigurableAnalyzer::ConfigurableAnalyzer(v4, (uint64_t *)&off_1E8668E30, a1, morphun::analysis::FrAnalyzer::DEFAULT_STOP_SET(void)::DEFAULT_STOP_SET_, a2);
  *(_QWORD *)v4 = &off_1E86704C8;
  return v4;
}

void sub_1CB508014(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

morphun::analysis::Analyzer *morphun::analysis::constructor<morphun::analysis::HeAnalyzer>(const morphun::util::ULocale *a1, uint64_t a2)
{
  morphun::analysis::Analyzer *v4;

  v4 = (morphun::analysis::Analyzer *)operator new();
  *(_QWORD *)v4 = &off_1E866A910;
  morphun::analysis::ConfigurableAnalyzer::ConfigurableAnalyzer(v4, (uint64_t *)&off_1E8668E70, a1, 0, a2);
  *(_QWORD *)v4 = &off_1E8670588;
  return v4;
}

void sub_1CB5080C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

morphun::analysis::Analyzer *morphun::analysis::constructor<morphun::analysis::ItAnalyzer>(const morphun::util::ULocale *a1, uint64_t a2)
{
  morphun::analysis::Analyzer *v4;
  unsigned __int8 v5;
  uint64_t SnowballStopwordSet;
  void *__p[2];
  char v9;

  v4 = (morphun::analysis::Analyzer *)operator new();
  *(_QWORD *)v4 = &off_1E866A910;
  if ((v5 & 1) == 0
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "i");
    SnowballStopwordSet = morphun::analysis::util::StopwordAnalyzerBase::loadSnowballStopwordSet((const void **)__p);
    if (v9 < 0)
      operator delete(__p[0]);
    morphun::analysis::ItAnalyzer::DEFAULT_STOP_SET(void)::DEFAULT_STOP_SET_ = SnowballStopwordSet;
  }
  morphun::analysis::ConfigurableAnalyzer::ConfigurableAnalyzer(v4, (uint64_t *)&off_1E8668EB0, a1, morphun::analysis::ItAnalyzer::DEFAULT_STOP_SET(void)::DEFAULT_STOP_SET_, a2);
  *(_QWORD *)v4 = &off_1E8670648;
  return v4;
}

void sub_1CB5081D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  if (a15 < 0)
    operator delete(__p);
  MEMORY[0x1D179D2EC](v15, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

morphun::analysis::Analyzer *morphun::analysis::constructor<morphun::analysis::JaAnalyzer>(const morphun::util::ULocale *a1, uint64_t a2)
{
  morphun::analysis::Analyzer *v4;

  v4 = (morphun::analysis::Analyzer *)operator new();
  *(_QWORD *)v4 = &off_1E866A910;
  morphun::analysis::ConfigurableAnalyzer::ConfigurableAnalyzer(v4, (uint64_t *)&off_1E8668EF0, a1, 0, a2);
  *(_QWORD *)v4 = &off_1E8670708;
  return v4;
}

void sub_1CB5082A0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

morphun::analysis::Analyzer *morphun::analysis::constructor<morphun::analysis::NbAnalyzer>(const morphun::util::ULocale *a1, uint64_t a2)
{
  morphun::analysis::Analyzer *v4;
  unsigned __int8 v5;
  uint64_t SnowballStopwordSet;
  void *__p[2];
  char v9;

  v4 = (morphun::analysis::Analyzer *)operator new();
  *(_QWORD *)v4 = &off_1E866A910;
  if ((v5 & 1) == 0
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"norwegian_stop.txt");
    SnowballStopwordSet = morphun::analysis::util::StopwordAnalyzerBase::loadSnowballStopwordSet((const void **)__p);
    if (v9 < 0)
      operator delete(__p[0]);
    morphun::analysis::NbAnalyzer::DEFAULT_STOP_SET(void)::DEFAULT_STOP_SET_ = SnowballStopwordSet;
  }
  morphun::analysis::ConfigurableAnalyzer::ConfigurableAnalyzer(v4, (uint64_t *)&off_1E8668F30, a1, morphun::analysis::NbAnalyzer::DEFAULT_STOP_SET(void)::DEFAULT_STOP_SET_, a2);
  *(_QWORD *)v4 = &off_1E86707C8;
  return v4;
}

void sub_1CB5083B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  if (a15 < 0)
    operator delete(__p);
  MEMORY[0x1D179D2EC](v15, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

morphun::analysis::Analyzer *morphun::analysis::constructor<morphun::analysis::NlAnalyzer>(const morphun::util::ULocale *a1, uint64_t a2)
{
  morphun::analysis::Analyzer *v4;
  unsigned __int8 v5;
  uint64_t SnowballStopwordSet;
  void *__p[2];
  char v9;

  v4 = (morphun::analysis::Analyzer *)operator new();
  *(_QWORD *)v4 = &off_1E866A910;
  if ((v5 & 1) == 0
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"dutch_stop.txt");
    SnowballStopwordSet = morphun::analysis::util::StopwordAnalyzerBase::loadSnowballStopwordSet((const void **)__p);
    if (v9 < 0)
      operator delete(__p[0]);
    morphun::analysis::NlAnalyzer::DEFAULT_STOP_SET(void)::DEFAULT_STOP_SET_ = SnowballStopwordSet;
  }
  morphun::analysis::ConfigurableAnalyzer::ConfigurableAnalyzer(v4, (uint64_t *)&off_1E8668F70, a1, morphun::analysis::NlAnalyzer::DEFAULT_STOP_SET(void)::DEFAULT_STOP_SET_, a2);
  *(_QWORD *)v4 = &off_1E8670888;
  return v4;
}

void sub_1CB5084F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  if (a15 < 0)
    operator delete(__p);
  MEMORY[0x1D179D2EC](v15, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

morphun::analysis::Analyzer *morphun::analysis::constructor<morphun::analysis::PtBrAnalyzer>(const morphun::util::ULocale *a1, uint64_t a2)
{
  morphun::analysis::Analyzer *v4;
  unsigned __int8 v5;
  uint64_t StopwordSet;
  void *__p[2];
  char v9;
  void *v10[2];
  char v11;
  void *__dst[2];
  char v13;

  v4 = (morphun::analysis::Analyzer *)operator new();
  *(_QWORD *)v4 = &off_1E866A910;
  if ((v5 & 1) == 0
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, "/");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v10, "b");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"#");
    StopwordSet = morphun::analysis::util::StopwordAnalyzerBase::loadStopwordSet((const void **)__dst, (const void **)v10, (uint64_t)__p);
    if (v9 < 0)
      operator delete(__p[0]);
    if (v11 < 0)
      operator delete(v10[0]);
    if (v13 < 0)
      operator delete(__dst[0]);
    morphun::analysis::PtBrAnalyzer::DEFAULT_STOP_SET(void)::DEFAULT_STOP_SET_ = StopwordSet;
  }
  morphun::analysis::ConfigurableAnalyzer::ConfigurableAnalyzer(v4, (uint64_t *)&off_1E86690C0, a1, morphun::analysis::PtBrAnalyzer::DEFAULT_STOP_SET(void)::DEFAULT_STOP_SET_, a2);
  *(_QWORD *)v4 = &off_1E8670C48;
  return v4;
}

void sub_1CB50867C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  uint64_t v27;

  if (a15 < 0)
    operator delete(__p);
  if (a21 < 0)
    operator delete(a16);
  if (a27 < 0)
    operator delete(a22);
  MEMORY[0x1D179D2EC](v27, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

morphun::analysis::Analyzer *morphun::analysis::constructor<morphun::analysis::RuAnalyzer>(const morphun::util::ULocale *a1, uint64_t a2)
{
  morphun::analysis::Analyzer *v4;
  unsigned __int8 v5;
  uint64_t SnowballStopwordSet;
  void *__p[2];
  char v9;

  v4 = (morphun::analysis::Analyzer *)operator new();
  *(_QWORD *)v4 = &off_1E866A910;
  if ((v5 & 1) == 0
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"russian_stop.txt");
    SnowballStopwordSet = morphun::analysis::util::StopwordAnalyzerBase::loadSnowballStopwordSet((const void **)__p);
    if (v9 < 0)
      operator delete(__p[0]);
    morphun::analysis::RuAnalyzer::DEFAULT_STOP_SET(void)::DEFAULT_STOP_SET_ = SnowballStopwordSet;
  }
  morphun::analysis::ConfigurableAnalyzer::ConfigurableAnalyzer(v4, (uint64_t *)&off_1E8668FB0, a1, morphun::analysis::RuAnalyzer::DEFAULT_STOP_SET(void)::DEFAULT_STOP_SET_, a2);
  *(_QWORD *)v4 = &off_1E8670948;
  return v4;
}

void sub_1CB5087EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  if (a15 < 0)
    operator delete(__p);
  MEMORY[0x1D179D2EC](v15, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

morphun::analysis::Analyzer *morphun::analysis::constructor<morphun::analysis::SvAnalyzer>(const morphun::util::ULocale *a1, uint64_t a2)
{
  morphun::analysis::Analyzer *v4;
  unsigned __int8 v5;
  uint64_t SnowballStopwordSet;
  void *__p[2];
  char v9;

  v4 = (morphun::analysis::Analyzer *)operator new();
  *(_QWORD *)v4 = &off_1E866A910;
  if ((v5 & 1) == 0
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "s");
    SnowballStopwordSet = morphun::analysis::util::StopwordAnalyzerBase::loadSnowballStopwordSet((const void **)__p);
    if (v9 < 0)
      operator delete(__p[0]);
    morphun::analysis::SvAnalyzer::DEFAULT_STOP_SET(void)::DEFAULT_STOP_SET_ = SnowballStopwordSet;
  }
  morphun::analysis::ConfigurableAnalyzer::ConfigurableAnalyzer(v4, (uint64_t *)&off_1E8668FF0, a1, morphun::analysis::SvAnalyzer::DEFAULT_STOP_SET(void)::DEFAULT_STOP_SET_, a2);
  *(_QWORD *)v4 = &off_1E8670A08;
  return v4;
}

void sub_1CB50892C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  if (a15 < 0)
    operator delete(__p);
  MEMORY[0x1D179D2EC](v15, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

morphun::analysis::Analyzer *morphun::analysis::constructor<morphun::analysis::ZhAnalyzer>(const morphun::util::ULocale *a1, uint64_t a2)
{
  morphun::analysis::Analyzer *v4;

  v4 = (morphun::analysis::Analyzer *)operator new();
  *(_QWORD *)v4 = &off_1E866A910;
  morphun::analysis::ConfigurableAnalyzer::ConfigurableAnalyzer(v4, (uint64_t *)&off_1E8669030, a1, 0, a2);
  *(_QWORD *)v4 = &off_1E8670AC8;
  return v4;
}

void sub_1CB5089F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

void morphun::analysis::DefaultAnalyzerFactory::~DefaultAnalyzerFactory(morphun::analysis::DefaultAnalyzerFactory *this, uint64_t *a2)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  void *v6;

  v3 = *a2;
  *(_QWORD *)this = *a2;
  *(_QWORD *)((char *)this + *(_QWORD *)(v3 - 40)) = a2[3];
  v4 = (_QWORD *)*((_QWORD *)this + 30);
  v5 = (_QWORD *)*((_QWORD *)this + 31);
  while (v4 != v5)
  {
    if (*v4)
      (*(void (**)(_QWORD))(*(_QWORD *)*v4 + 16))(*v4);
    ++v4;
  }
  std::mutex::~mutex((std::mutex *)((char *)this + 272));
  v6 = (void *)*((_QWORD *)this + 30);
  if (v6)
  {
    *((_QWORD *)this + 31) = v6;
    operator delete(v6);
  }
  std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::destroy(*((void ***)this + 28));
  *((_QWORD *)this + 1) = &off_1E8660FC0;
  morphun::analysis::Analyzer::~Analyzer((morphun::analysis::DefaultAnalyzerFactory *)((char *)this + 8), (uint64_t *)&off_1E8669140);
}

void std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::destroy(void **a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::destroy(*a1);
    std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::destroy(a1[1]);
    operator delete(a1);
  }
}

morphun::analysis::DefaultAnalyzerFactory *morphun::analysis::DefaultAnalyzerFactory::DefaultAnalyzerFactory(morphun::analysis::DefaultAnalyzerFactory *this, uint64_t *a2)
{
  return morphun::analysis::DefaultAnalyzerFactory::DefaultAnalyzerFactory(this, a2, (morphun::util::StringUtils *)0xAA);
}

morphun::analysis::DefaultAnalyzerFactory *morphun::analysis::DefaultAnalyzerFactory::DefaultAnalyzerFactory(morphun::analysis::DefaultAnalyzerFactory *this, uint64_t *a2, morphun::util::StringUtils *a3)
{
  uint64_t v5;
  uint64_t v6;
  const morphun::util::ULocale *v7;
  _QWORD *exception;
  std::basic_string<char16_t>::size_type v10;
  std::basic_string<char16_t> v11;
  __int128 v12;

  v5 = a2[1];
  *(_QWORD *)this = v5;
  *(_QWORD *)((char *)this + *(_QWORD *)(v5 - 40)) = a2[2];
  v6 = *a2;
  *(_QWORD *)this = *a2;
  *(_QWORD *)((char *)this + *(_QWORD *)(v6 - 40)) = a2[3];
  v7 = (const morphun::util::ULocale *)morphun::util::LocaleUtils::ENGLISH(this);
  *((_QWORD *)this + 1) = &off_1E866A910;
  morphun::analysis::ConfigurableAnalyzer::ConfigurableAnalyzer((morphun::analysis::DefaultAnalyzerFactory *)((char *)this + 8), (uint64_t *)&off_1E8669130, v7, 0, (uint64_t)a3);
  *((_QWORD *)this + 1) = &off_1E8670DC8;
  *((_QWORD *)this + 30) = 0;
  *((_QWORD *)this + 28) = 0;
  *((_QWORD *)this + 29) = 0;
  *((_QWORD *)this + 27) = (char *)this + 224;
  *((_QWORD *)this + 31) = 0;
  *((_QWORD *)this + 32) = 0;
  *((_QWORD *)this + 33) = a3;
  *((_QWORD *)this + 34) = 850045863;
  *(_OWORD *)((char *)this + 280) = 0u;
  *(_OWORD *)((char *)this + 296) = 0u;
  *(_OWORD *)((char *)this + 312) = 0u;
  *((_QWORD *)this + 41) = 0;
  if ((unint64_t)a3 >= 0x2000)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string(a3, &v11);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v12, "U", &v11, v10);
    morphun::exception::Throwable::Throwable((uint64_t)exception, &v12);
    *exception = &off_1E8673120;
  }
  return this;
}

void sub_1CB508C6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void ***a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  uint64_t v22;
  void **v23;
  void *v24;
  int v25;
  void *v27;

  if (a22 < 0)
    operator delete(__p);
  if (a16 < 0)
  {
    operator delete(a11);
    if ((v25 & 1) == 0)
    {
LABEL_8:
      std::mutex::~mutex((std::mutex *)(a9 + 32));
      v27 = *(void **)a9;
      if (*(_QWORD *)a9)
      {
        *(_QWORD *)(v22 + 248) = v27;
        operator delete(v27);
      }
      std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::destroy(*a10);
      morphun::analysis::MinimalAnalyzer::~MinimalAnalyzer(v23);
      _Unwind_Resume(a1);
    }
  }
  else if (!v25)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v24);
  goto LABEL_8;
}

morphun::analysis::DefaultAnalyzerFactory *morphun::analysis::DefaultAnalyzerFactory::DefaultAnalyzerFactory(morphun::analysis::DefaultAnalyzerFactory *this)
{
  return morphun::analysis::DefaultAnalyzerFactory::DefaultAnalyzerFactory(this, (morphun::util::StringUtils *)0xAA);
}

morphun::analysis::DefaultAnalyzerFactory *morphun::analysis::DefaultAnalyzerFactory::DefaultAnalyzerFactory(morphun::analysis::DefaultAnalyzerFactory *this, morphun::util::StringUtils *a2)
{
  const morphun::util::ULocale *v4;
  _QWORD *exception;
  std::basic_string<char16_t>::size_type v7;
  std::basic_string<char16_t> v8;
  __int128 v9;

  *(_QWORD *)this = &off_1E8671B68;
  v4 = (const morphun::util::ULocale *)morphun::util::LocaleUtils::ENGLISH(this);
  *((_QWORD *)this + 1) = &off_1E866A910;
  morphun::analysis::ConfigurableAnalyzer::ConfigurableAnalyzer((morphun::analysis::DefaultAnalyzerFactory *)((char *)this + 8), (uint64_t *)&off_1E8669130, v4, 0, (uint64_t)a2);
  *((_QWORD *)this + 1) = &off_1E8670DC8;
  *((_QWORD *)this + 30) = 0;
  *((_QWORD *)this + 28) = 0;
  *((_QWORD *)this + 29) = 0;
  *((_QWORD *)this + 27) = (char *)this + 224;
  *((_QWORD *)this + 31) = 0;
  *((_QWORD *)this + 32) = 0;
  *((_QWORD *)this + 33) = a2;
  *((_QWORD *)this + 34) = 850045863;
  *(_OWORD *)((char *)this + 280) = 0u;
  *(_OWORD *)((char *)this + 296) = 0u;
  *(_OWORD *)((char *)this + 312) = 0u;
  *((_QWORD *)this + 41) = 0;
  if ((unint64_t)a2 >= 0x2000)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string(a2, &v8);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v9, "U", &v8, v7);
    morphun::exception::Throwable::Throwable((uint64_t)exception, &v9);
    *exception = &off_1E8673120;
  }
  return this;
}

void sub_1CB508E38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void ***a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  void **v22;
  uint64_t v23;
  void *v24;
  int v25;
  void *v27;

  if (a22 < 0)
    operator delete(__p);
  if (a16 < 0)
  {
    operator delete(a11);
    if ((v25 & 1) == 0)
    {
LABEL_8:
      std::mutex::~mutex((std::mutex *)(a9 + 32));
      v27 = *(void **)a9;
      if (*(_QWORD *)a9)
      {
        *(_QWORD *)(v23 + 248) = v27;
        operator delete(v27);
      }
      std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::destroy(*a10);
      morphun::analysis::MinimalAnalyzer::~MinimalAnalyzer(v22);
      _Unwind_Resume(a1);
    }
  }
  else if (!v25)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v24);
  goto LABEL_8;
}

morphun::analysis::DefaultAnalyzerFactory *morphun::analysis::DefaultAnalyzerFactory::DefaultAnalyzerFactory(morphun::analysis::DefaultAnalyzerFactory *a1, uint64_t *a2, morphun::util::StringUtils **a3)
{
  return morphun::analysis::DefaultAnalyzerFactory::DefaultAnalyzerFactory(a1, a2, *a3);
}

morphun::analysis::DefaultAnalyzerFactory *morphun::analysis::DefaultAnalyzerFactory::DefaultAnalyzerFactory(morphun::analysis::DefaultAnalyzerFactory *a1, morphun::util::StringUtils **a2)
{
  return morphun::analysis::DefaultAnalyzerFactory::DefaultAnalyzerFactory(a1, *a2);
}

void `virtual thunk to'morphun::analysis::DefaultAnalyzerFactory::~DefaultAnalyzerFactory(morphun::analysis::DefaultAnalyzerFactory *this)
{
}

{
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::analysis::DefaultAnalyzerFactory::DEFAULT_FEATURE_CONFIG(morphun::analysis::DefaultAnalyzerFactory *this)
{
  unsigned __int8 v1;
  uint64_t result;
  _QWORD *v3;
  morphun::exception::NullPointerException *exception;

  if ((v1 & 1) == 0
  {
    v3 = (_QWORD *)operator new();
    *v3 = 170;
    morphun::analysis::DefaultAnalyzerFactory::DEFAULT_FEATURE_CONFIG(void)::DEFAULT_FEATURE_CONFIG_ = (uint64_t)v3;
  }
  result = morphun::analysis::DefaultAnalyzerFactory::DEFAULT_FEATURE_CONFIG(void)::DEFAULT_FEATURE_CONFIG_;
  if (!morphun::analysis::DefaultAnalyzerFactory::DEFAULT_FEATURE_CONFIG(void)::DEFAULT_FEATURE_CONFIG_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB508FC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::DefaultAnalyzerFactory::getDefaultInstance(morphun::analysis::DefaultAnalyzerFactory *this)
{
  unsigned __int8 v1;
  morphun::analysis::DefaultAnalyzerFactory *v3;

  if ((v1 & 1) == 0
  {
    v3 = (morphun::analysis::DefaultAnalyzerFactory *)operator new();
    morphun::analysis::DefaultAnalyzerFactory::DefaultAnalyzerFactory(v3, (morphun::util::StringUtils *)0xAA);
    morphun::analysis::DefaultAnalyzerFactory::getDefaultInstance(void)::DEFAULT_FACTORY_ = (uint64_t)v3;
  }
  return morphun::analysis::DefaultAnalyzerFactory::getDefaultInstance(void)::DEFAULT_FACTORY_;
}

void sub_1CB509068(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10F3C40F4CE41AFLL);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::NlGrammarSynthesizer_InflectorPatternChain::~NlGrammarSynthesizer_InflectorPatternChain(morphun::grammar::synthesis::NlGrammarSynthesizer_InflectorPatternChain *this)
{
  morphun::grammar::synthesis::NlGrammarSynthesizer_InflectorPatternChain::~NlGrammarSynthesizer_InflectorPatternChain(this);
  JUMPOUT(0x1D179D2ECLL);
}

{
  _QWORD *v2;
  _QWORD *v3;

  *(_QWORD *)this = &off_1E866F248;
  v2 = (_QWORD *)*((_QWORD *)this + 1);
  v3 = (_QWORD *)*((_QWORD *)this + 2);
  if (v2 != v3)
  {
    do
    {
      if (*v2)
        (*(void (**)(_QWORD))(*(_QWORD *)*v2 + 16))(*v2);
      ++v2;
    }
    while (v2 != v3);
    v2 = (_QWORD *)*((_QWORD *)this + 1);
  }
  if (v2)
  {
    *((_QWORD *)this + 2) = v2;
    operator delete(v2);
  }
}

double morphun::dialog::SemanticValue::toString@<D0>(morphun::dialog::SemanticValue *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  char *v4;
  char *v5;
  const std::basic_string<char16_t>::value_type *v6;
  const std::basic_string<char16_t>::value_type *v7;
  int v8;
  const std::basic_string<char16_t>::value_type *v9;
  std::basic_string<char16_t>::size_type v10;
  double result;
  std::basic_string<char16_t> v12;

  std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v12, (const void **)((char *)this + *(_QWORD *)(*(_QWORD *)this - 40)), 35);
  v4 = (char *)this + *(_QWORD *)(*(_QWORD *)this - 40);
  v7 = (const std::basic_string<char16_t>::value_type *)*((_QWORD *)v4 + 3);
  v5 = v4 + 24;
  v6 = v7;
  v8 = v5[23];
  if (v8 >= 0)
    v9 = (const std::basic_string<char16_t>::value_type *)v5;
  else
    v9 = v6;
  if (v8 >= 0)
    v10 = v5[23];
  else
    v10 = *((_QWORD *)v5 + 1);
  std::basic_string<char16_t>::append(&v12, v9, v10);
  result = *(double *)&v12.__r_.__value_.__l.__data_;
  *a2 = v12;
  return result;
}

void sub_1CB5091BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void morphun::dialog::SemanticValue::~SemanticValue(void **this)
{
  if (*((char *)this + 55) < 0)
    operator delete(this[4]);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
}

{
  morphun::dialog::SemanticValue::~SemanticValue(this);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t *morphun::dialog::SemanticValue::SemanticValue(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *result = *a2;
  *(uint64_t *)((char *)result + *(_QWORD *)(v2 - 48)) = a2[1];
  return result;
}

uint64_t morphun::dialog::SemanticValue::SemanticValue(uint64_t a1, __int128 *a2, __int128 *a3)
{
  std::pair<std::basic_string<char16_t>,std::basic_string<char16_t>>::pair[abi:ne180100]<true,0>((std::basic_string<char16_t> *)(a1 + 8), a2, a3);
  *(_QWORD *)a1 = &off_1E866AAC0;
  return a1;
}

std::basic_string<char16_t> *std::pair<std::basic_string<char16_t>,std::basic_string<char16_t>>::pair[abi:ne180100]<true,0>(std::basic_string<char16_t> *this, __int128 *a2, __int128 *a3)
{
  __int128 v5;
  std::basic_string<char16_t> *v6;
  __int128 v7;

  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(this, *(const std::basic_string<char16_t>::value_type **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v5 = *a2;
    this->__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v5;
  }
  v6 = this + 1;
  if (*((char *)a3 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v6, *(const std::basic_string<char16_t>::value_type **)a3, *((_QWORD *)a3 + 1));
  }
  else
  {
    v7 = *a3;
    this[1].__r_.__value_.__r.__words[2] = *((_QWORD *)a3 + 2);
    *(_OWORD *)&v6->__r_.__value_.__l.__data_ = v7;
  }
  return this;
}

void sub_1CB509300(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void `virtual thunk to'morphun::dialog::SemanticValue::~SemanticValue(morphun::dialog::SemanticValue *this)
{
  morphun::dialog::SemanticValue::~SemanticValue((void **)((char *)this + *(_QWORD *)(*(_QWORD *)this - 32)));
}

{
  morphun::dialog::SemanticValue::~SemanticValue((void **)((char *)this + *(_QWORD *)(*(_QWORD *)this - 32)));
  JUMPOUT(0x1D179D2ECLL);
}

double `virtual thunk to'morphun::dialog::SemanticValue::toString@<D0>(morphun::dialog::SemanticValue *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  return morphun::dialog::SemanticValue::toString((morphun::dialog::SemanticValue *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 24)), a2);
}

void morphun::analysis::filter::PunctuationFilter::~PunctuationFilter(morphun::analysis::filter::PunctuationFilter *this)
{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1E86696F8);
}

{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1E86696F8);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::analysis::filter::PunctuationFilter::incrementToken(morphun::analysis::filter::PunctuationFilter *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  int v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  std::basic_string<char16_t>::size_type v20;
  std::basic_string<char16_t>::size_type size;
  _QWORD *v22;
  morphun::exception::NullPointerException *exception;
  std::basic_string<char16_t> __str;

  while (2)
  {
    v2 = *((_QWORD *)this + 12);
    if (!v2)
    {
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
    v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
    if ((_DWORD)v3)
    {
      v4 = *((_QWORD *)this + 14);
      if (!v4 || ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 56))(v4) & 1) == 0)
      {
        v5 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
        v6 = (char *)v5 + *(_QWORD *)(*v5 - 96);
        if (v6[23] < 0)
          v7 = *((_QWORD *)v6 + 1);
        else
          LODWORD(v7) = v6[23];
        v8 = 0;
        do
        {
          if (v8 >= (int)v7)
            return 1;
          v9 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
          v10 = (uint64_t)v9 + *(_QWORD *)(*v9 - 96);
          if (*(char *)(v10 + 23) < 0)
          {
            v12 = v10;
            v10 = *(_QWORD *)v10;
            v11 = *(_QWORD *)(v12 + 8);
          }
          else
          {
            LODWORD(v11) = *(unsigned __int8 *)(v10 + 23);
          }
          v13 = morphun::util::StringViewUtils::codePointAt(v10, v11, v8);
          v14 = MEMORY[0x1D179D958](**((_QWORD **)this + 16), v13);
          if (v13 < 0x10000)
            v15 = 1;
          else
            v15 = 2;
          v8 += v15;
        }
        while (!v14);
        npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
        if (uset_containsAllCodePoints())
        {
          v16 = 2;
          goto LABEL_29;
        }
        memset(&__str, 0, sizeof(__str));
        v17 = (_QWORD *)*((_QWORD *)this + 15);
        v18 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
        v19 = (uint64_t)v18 + *(_QWORD *)(*v18 - 96);
        if (*(char *)(v19 + 23) < 0)
        {
          v19 = *(_QWORD *)v19;
          v20 = *(_QWORD *)((char *)v18 + *(_QWORD *)(*v18 - 96) + 8);
        }
        else
        {
          v20 = *(unsigned __int8 *)(v19 + 23);
        }
        morphun::util::UnicodeSetUtils::removeSetFromString((uint64_t)&__str, v17, v19, v20);
        if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
        else
          size = __str.__r_.__value_.__l.__size_;
        if (size)
        {
          v22 = (_QWORD *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((_QWORD *)this + 13));
          std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v22 + *(_QWORD *)(*v22 - 96)), &__str);
          v16 = 0;
          if ((*((_BYTE *)&__str.__r_.__value_.__s + 23) & 0x80) == 0)
            goto LABEL_28;
        }
        else
        {
          v16 = 2;
          if ((*((_BYTE *)&__str.__r_.__value_.__s + 23) & 0x80) == 0)
          {
LABEL_28:
            if (size)
              return v3;
LABEL_29:
            if (v16)
              continue;
            return v3;
          }
        }
        operator delete(__str.__r_.__value_.__l.__data_);
        goto LABEL_28;
      }
    }
    return v3;
  }
}

void sub_1CB5095AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;

  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

void *morphun::analysis::filter::PunctuationFilter::reset(morphun::analysis::filter::PunctuationFilter *this)
{
  uint64_t v2;
  void *result;

  v2 = npc<morphun::analysis::TokenStream>(*((_QWORD *)this + 12));
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
  result = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::KeywordAttribute>((uint64_t)this);
  *((_QWORD *)this + 14) = result;
  return result;
}

void sub_1CB509658(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

morphun::analysis::filter::PunctuationFilter *morphun::analysis::filter::PunctuationFilter::PunctuationFilter(morphun::analysis::filter::PunctuationFilter *this, morphun::analysis::TokenStream *a2, int a3)
{
  morphun::analysis::util::AttributeSource *v6;
  unsigned __int8 v7;
  morphun::dictionary::PhraseProperties *v8;
  _QWORD *v10;

  *(_QWORD *)this = &off_1E866A910;
  v6 = morphun::analysis::util::AttributeSource::AttributeSource(this, (morphun::analysis::util::AttributeSource *)&off_1E8669708, (uint64_t)a2);
  *(_QWORD *)v6 = &off_1E86723C8;
  *((_QWORD *)v6 + 13) = 0;
  *((_QWORD *)v6 + 14) = 0;
  *((_QWORD *)v6 + 12) = a2;
  if (a3)
  {
    if ((v7 & 1) == 0
    {
      v10 = (_QWORD *)operator new();
      icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v10);
      MEMORY[0x1D179D970](*v10);
      morphun::analysis::filter::PunctuationFilter::INTRATOKEN_PUNCTUATION(void)::INTRATOKEN_PUNCTUATION_ = (uint64_t)v10;
    }
    v8 = (morphun::dictionary::PhraseProperties *)morphun::analysis::filter::PunctuationFilter::INTRATOKEN_PUNCTUATION(void)::INTRATOKEN_PUNCTUATION_;
  }
  else
  {
    v8 = (morphun::dictionary::PhraseProperties *)morphun::dictionary::PhraseProperties::PUNCTUATION(v6);
  }
  *((_QWORD *)this + 15) = v8;
  *((_QWORD *)this + 16) = morphun::dictionary::PhraseProperties::PUNCTUATION(v8);
  *((_QWORD *)this + 13) = morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::CharTermAttribute>((uint64_t)this);
  return this;
}

void sub_1CB509760(_Unwind_Exception *a1)
{
  morphun::analysis::TokenFilter *v1;
  uint64_t v2;

  MEMORY[0x1D179D2EC](v2, 0x1020C405F07FB98);
  morphun::analysis::TokenFilter::~TokenFilter(v1, (uint64_t *)&off_1E86696F8);
  _Unwind_Resume(a1);
}

void morphun::analysis::fi::FinnishMorphology_InflectionAnalysis::~FinnishMorphology_InflectionAnalysis(void **this)
{
  morphun::analysis::fi::FinnishMorphology_InflectionAnalysis::~FinnishMorphology_InflectionAnalysis(this);
  JUMPOUT(0x1D179D2ECLL);
}

{
  if (*((char *)this + 111) < 0)
    operator delete(this[11]);
  morphun::util::lemmatization::InflectionIdentifier::~InflectionIdentifier(this + 4);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
}

uint64_t morphun::analysis::fi::FinnishMorphology_InflectionAnalysis::FinnishMorphology_InflectionAnalysis(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  *(_QWORD *)a1 = &off_1E8656720;
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v3 = *a2;
    *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 2);
    *(_OWORD *)(a1 + 8) = v3;
  }
  v7 = 0uLL;
  v8 = 0;
  v5 = 0uLL;
  v6 = 0;
  morphun::util::lemmatization::InflectionIdentifier::InflectionIdentifier(a1 + 32, &v7, &v5);
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  return a1;
}

void sub_1CB5098B8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

uint64_t morphun::analysis::fi::FinnishMorphology_InflectionAnalysis::FinnishMorphology_InflectionAnalysis(uint64_t a1, __int128 *a2, uint64_t a3, __int128 *a4)
{
  __int128 v7;
  std::basic_string<char16_t> *v8;
  __int128 v9;

  *(_QWORD *)a1 = &off_1E8656720;
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v7 = *a2;
    *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 2);
    *(_OWORD *)(a1 + 8) = v7;
  }
  morphun::util::lemmatization::InflectionIdentifier::InflectionIdentifier(a1 + 32, (__int128 *)(a3 + 8), (__int128 *)(a3 + 32));
  v8 = (std::basic_string<char16_t> *)(a1 + 88);
  if (*((char *)a4 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v8, *(const std::basic_string<char16_t>::value_type **)a4, *((_QWORD *)a4 + 1));
  }
  else
  {
    v9 = *a4;
    *(_QWORD *)(a1 + 104) = *((_QWORD *)a4 + 2);
    *(_OWORD *)&v8->__r_.__value_.__l.__data_ = v9;
  }
  *(_BYTE *)(a1 + 112) = 1;
  return a1;
}

void sub_1CB50998C(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;
  void **v3;

  morphun::util::lemmatization::InflectionIdentifier::~InflectionIdentifier(v3);
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::UkCommonConceptFactory::~UkCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1E8667CD8);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1E8667CD8);
  JUMPOUT(0x1D179D2ECLL);
}

const void **morphun::util::CFUtils::convert(const void **this, const std::exception *a2, __CFError **a3)
{
  const char *v4;
  const __CFString *v5;

  if (a2)
  {
    v4 = (const char *)(*((uint64_t (**)(const void **, const std::exception *, __CFError **))*this + 2))(this, a2, a3);
    v5 = CFStringCreateWithCString(0, v4, 0x8000100u);
    a2->__vftable = (std::exception_vtbl *)CFErrorCreate(0, v5, 0, 0);
    return morphun::util::AutoCRelease<__CFString const*,&(CFRelease)>::~AutoCRelease((const void **)&v5);
  }
  return this;
}

void sub_1CB509A5C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  morphun::util::AutoCRelease<__CFString const*,&(CFRelease)>::~AutoCRelease((const void **)va);
  _Unwind_Resume(a1);
}

const void **morphun::util::AutoCRelease<__CFString const*,&(CFRelease)>::~AutoCRelease(const void **a1)
{
  const void *v2;

  v2 = *a1;
  if (v2)
    CFRelease(v2);
  return a1;
}

void morphun::util::CFUtils::to_u16string(std::basic_string<char16_t> *this, const __CFString *a2)
{
  CFIndex Length;
  UniChar *v5;
  CFRange v6;

  this->__r_.__value_.__r.__words[0] = 0;
  this->__r_.__value_.__l.__size_ = 0;
  this->__r_.__value_.__r.__words[2] = 0;
  npc<__CFString const>((uint64_t)a2);
  Length = CFStringGetLength(a2);
  std::basic_string<char16_t>::resize(this, Length, 0);
  npc<__CFString const>((uint64_t)a2);
  if ((this->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v5 = (UniChar *)this;
  else
    v5 = (UniChar *)this->__r_.__value_.__r.__words[0];
  v6.location = 0;
  v6.length = Length;
  CFStringGetCharacters(a2, v6, v5);
}

void sub_1CB509B1C(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t npc<__CFString const>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB509B7C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::util::CFUtils::to_string(std::string *this, const __CFString *a2)
{
  CFIndex Length;
  UInt8 *v5;
  UInt8 *v6;
  CFIndex usedBufLen;
  CFRange v8;
  CFRange v9;

  this->__r_.__value_.__r.__words[0] = 0;
  this->__r_.__value_.__l.__size_ = 0;
  this->__r_.__value_.__r.__words[2] = 0;
  npc<__CFString const>((uint64_t)a2);
  Length = CFStringGetLength(a2);
  std::string::resize(this, Length, 0);
  npc<__CFString const>((uint64_t)a2);
  if ((this->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v5 = (UInt8 *)this;
  else
    v5 = (UInt8 *)this->__r_.__value_.__r.__words[0];
  v8.location = 0;
  v8.length = Length;
  if (CFStringGetBytes(a2, v8, 0x8000100u, 0, 0, v5, Length, 0) != Length)
  {
    usedBufLen = 4 * Length;
    std::string::resize(this, 4 * Length, 0);
    npc<__CFString const>((uint64_t)a2);
    if ((this->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v6 = (UInt8 *)this;
    else
      v6 = (UInt8 *)this->__r_.__value_.__r.__words[0];
    v9.location = 0;
    v9.length = Length;
    CFStringGetBytes(a2, v9, 0x8000100u, 0, 0, v6, 4 * Length, &usedBufLen);
    std::string::resize(this, usedBufLen, 0);
  }
}

void sub_1CB509CA0(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void morphun::util::CFUtils::convert(morphun::util::CFUtils *this, const __CFLocale *a2)
{
  const __CFString *v3;
  morphun::exception::NullPointerException *exception;
  void *__p[2];
  uint64_t v6;
  void *v7[2];
  uint64_t v8;
  void *v9[2];
  uint64_t v10;
  std::string v11;

  if (!a2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  v3 = (const __CFString *)MEMORY[0x1D179CF68](a2);
  morphun::util::CFUtils::to_string(&v11, v3);
  v9[0] = 0;
  v9[1] = 0;
  v10 = 0;
  v7[0] = 0;
  v7[1] = 0;
  v8 = 0;
  __p[0] = 0;
  __p[1] = 0;
  v6 = 0;
  morphun::util::ULocale::ULocale((uint64_t)this, (uint64_t)&v11, (uint64_t)v9, (uint64_t)v7, (uint64_t)__p);
  if (SHIBYTE(v6) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v8) < 0)
    operator delete(v7[0]);
  if (SHIBYTE(v10) < 0)
    operator delete(v9[0]);
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v11.__r_.__value_.__l.__data_);
}

void sub_1CB509D94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  void *v26;

  __cxa_free_exception(v26);
  _Unwind_Resume(a1);
}

CFLocaleRef morphun::util::CFUtils::convert(morphun::util::CFUtils *this, const morphun::util::ULocale *a2)
{
  char *v2;
  const UInt8 *v3;
  const UInt8 *v4;
  int v5;
  const UInt8 *v6;
  CFIndex v7;
  CFLocaleRef v8;
  const __CFString *v10;

  v4 = (const UInt8 *)*((_QWORD *)this + 13);
  v2 = (char *)this + 104;
  v3 = v4;
  v5 = v2[23];
  if (v5 >= 0)
    v6 = (const UInt8 *)v2;
  else
    v6 = v3;
  if (v5 >= 0)
    v7 = v2[23];
  else
    v7 = *((_QWORD *)v2 + 1);
  v10 = CFStringCreateWithBytes(0, v6, v7, 0x8000100u, 0);
  v8 = CFLocaleCreate(0, v10);
  morphun::util::AutoCRelease<__CFString const*,&(CFRelease)>::~AutoCRelease((const void **)&v10);
  return v8;
}

void sub_1CB509E60(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  morphun::util::AutoCRelease<__CFString const*,&(CFRelease)>::~AutoCRelease((const void **)va);
  _Unwind_Resume(a1);
}

void morphun::analysis::filter::NormalizeFontVariantsFilter::~NormalizeFontVariantsFilter(morphun::analysis::filter::NormalizeFontVariantsFilter *this)
{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1E8669878);
}

{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1E8669878);
  JUMPOUT(0x1D179D2ECLL);
}

void sub_1CB509EF0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::filter::DOUBLE_QUOTES(morphun::analysis::filter *this)
{
  unsigned __int8 v1;
  _QWORD *v3;

  if ((v1 & 1) == 0
  {
    v3 = (_QWORD *)operator new();
    icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v3);
    MEMORY[0x1D179D970](*v3);
    morphun::analysis::filter::DOUBLE_QUOTES(void)::DOUBLE_QUOTES_ = (uint64_t)v3;
  }
  return npc<icu4cxx::UnicodeSet const>(morphun::analysis::filter::DOUBLE_QUOTES(void)::DOUBLE_QUOTES_);
}

void sub_1CB509F8C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::filter::NormalizeFontVariantsFilter::SINGLE_QUOTES(morphun::analysis::filter::NormalizeFontVariantsFilter *this)
{
  unsigned __int8 v1;
  _QWORD *v3;

  if ((v1 & 1) == 0
  {
    v3 = (_QWORD *)operator new();
    icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v3);
    MEMORY[0x1D179D970](*v3);
    morphun::analysis::filter::NormalizeFontVariantsFilter::SINGLE_QUOTES(void)::SINGLE_QUOTES_ = (uint64_t)v3;
  }
  return npc<icu4cxx::UnicodeSet const>(morphun::analysis::filter::NormalizeFontVariantsFilter::SINGLE_QUOTES(void)::SINGLE_QUOTES_);
}

void sub_1CB50A04C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

void sub_1CB50A0C8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::filter::createMappableChars(morphun::analysis::filter *this)
{
  uint64_t v1;
  morphun::analysis::filter::NormalizeFontVariantsFilter *v2;
  _QWORD *v3;
  morphun::analysis::filter *v4;
  _QWORD *v5;

  v1 = operator new();
  *(_BYTE *)(v1 + 8) = 1;
  v2 = (morphun::analysis::filter::NormalizeFontVariantsFilter *)uset_openEmpty();
  *(_QWORD *)v1 = v2;
  v3 = (_QWORD *)morphun::analysis::filter::NormalizeFontVariantsFilter::SINGLE_QUOTES(v2);
  v4 = (morphun::analysis::filter *)MEMORY[0x1D179D910](v2, *v3);
  v5 = (_QWORD *)morphun::analysis::filter::DOUBLE_QUOTES(v4);
  MEMORY[0x1D179D910](v2, *v5);
  uset_addAllCodePoints();
  MEMORY[0x1D179D970](v2);
  return v1;
}

void sub_1CB50A164(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

void morphun::transliteration::MLTransliterator::~MLTransliterator(void **this)
{
  morphun::transliteration::MLTransliterator::~MLTransliterator(this);
  JUMPOUT(0x1D179D2ECLL);
}

{
  *this = &off_1E866A438;
  QuasarCPDecTranslator_delete();
  *this = &off_1E8656EB0;
}

uint64_t morphun::transliteration::MLTransliterator::transliterate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  std::basic_string<char16_t>::value_type *v9;
  std::basic_string<char16_t>::value_type v10;
  std::basic_string<char16_t>::size_type size;
  BOOL v12;
  std::basic_string<char16_t> *v13;
  int v14;
  unsigned __int8 v15;
  std::mutex *v16;
  char *v17;
  int32_t v18;
  std::basic_string<char16_t> *v19;
  std::basic_string<char16_t>::size_type v20;
  int isAllLowerCase;
  std::basic_string<char16_t> *p_str;
  int32_t v23;
  std::basic_string<char16_t> *p_p;
  std::basic_string<char16_t>::size_type v25;
  uint64_t result;
  morphun::exception::NullPointerException *v27;
  uint64_t v28;
  morphun::exception::NullPointerException *exception;
  std::basic_string<char16_t> __p;
  std::basic_string<char16_t> __str;
  std::basic_string<char16_t> v32;
  std::string v33;

  if (a3 && *(_QWORD *)(a1 + 136))
  {
    memset(&v33, 0, sizeof(v33));
    memset(&v32, 0, sizeof(v32));
    v8 = 2 * a3;
    std::basic_string<char16_t>::reserve(&v32, 2 * a3);
    v9 = (std::basic_string<char16_t>::value_type *)a2;
    do
    {
      v10 = *v9;
      size = HIBYTE(v32.__r_.__value_.__r.__words[2]);
      if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        size = v32.__r_.__value_.__l.__size_;
      if (size)
        v12 = (v10 & 0xFC00) == 56320;
      else
        v12 = 1;
      if (!v12)
        std::basic_string<char16_t>::push_back(&v32, 32);
      std::basic_string<char16_t>::push_back(&v32, v10);
      ++v9;
      v8 -= 2;
    }
    while (v8);
    if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v13 = &v32;
    else
      v13 = (std::basic_string<char16_t> *)v32.__r_.__value_.__r.__words[0];
    if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v14 = HIBYTE(v32.__r_.__value_.__r.__words[2]);
    else
      v14 = v32.__r_.__value_.__r.__words[1];
    morphun::util::StringViewUtils::convert(&v33, (uint64_t)v13, v14);
    if ((v15 & 1) == 0
    {
      v28 = operator new();
      *(_QWORD *)v28 = 850045863;
      *(_OWORD *)(v28 + 8) = 0u;
      *(_OWORD *)(v28 + 24) = 0u;
      *(_OWORD *)(v28 + 40) = 0u;
      *(_QWORD *)(v28 + 56) = 0;
      morphun::transliteration::MLTransliterator::transliterate(std::u16string_view,std::basic_string<char16_t> *)const::mutex = v28;
    }
    v16 = (std::mutex *)morphun::transliteration::MLTransliterator::transliterate(std::u16string_view,std::basic_string<char16_t> *)const::mutex;
    if (!morphun::transliteration::MLTransliterator::transliterate(std::u16string_view,std::basic_string<char16_t> *)const::mutex)
    {
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
    std::mutex::lock((std::mutex *)morphun::transliteration::MLTransliterator::transliterate(std::u16string_view,std::basic_string<char16_t> *)const::mutex);
    v17 = (char *)QuasarCPDecTranslator_translate();
    std::mutex::unlock(v16);
    if (v17)
    {
      v18 = strlen(v17);
      morphun::util::StringViewUtils::convert((uint64_t)&v32, v17, v18);
      memset(&__str, 0, sizeof(__str));
      if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v19 = &v32;
      else
        v19 = (std::basic_string<char16_t> *)v32.__r_.__value_.__r.__words[0];
      if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v20 = HIBYTE(v32.__r_.__value_.__r.__words[2]);
      else
        v20 = v32.__r_.__value_.__l.__size_;
      morphun::util::StringViewUtils::replace(&__str, (uint64_t)v19, v20, (unsigned __int16 *)&word_1CB73EE14, 1uLL, &word_1CB73EB86, 0);
      memset(&__p, 0, sizeof(__p));
      isAllLowerCase = morphun::util::StringViewUtils::isAllLowerCase(a2, a3);
      if (isAllLowerCase)
      {
        if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          p_str = &__str;
        else
          p_str = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
        if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v23 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
        else
          v23 = __str.__r_.__value_.__r.__words[1];
        morphun::util::StringViewUtils::lowercase((uint64_t)&__p, (const UChar *)p_str, v23, a1 + 8);
      }
      else
      {
        std::basic_string<char16_t>::operator=(&__p, &__str);
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        p_p = &__p;
      else
        p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v25 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        v25 = __p.__r_.__value_.__l.__size_;
      morphun::transliteration::Transliterator::matchCase(a1, a4, (std::basic_string<char16_t>::value_type *)p_p, v25, a2, a3, isAllLowerCase);
      free(v17);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__str.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v32.__r_.__value_.__l.__data_);
    if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v33.__r_.__value_.__l.__data_);
      if (v17)
        return 1;
    }
    else if (v17)
    {
      return 1;
    }
  }
  if (!a4)
  {
    v27 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(v27);
  }
  result = 0;
  if (*(char *)(a4 + 23) < 0)
  {
    **(_WORD **)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
  }
  else
  {
    *(_WORD *)a4 = 0;
    *(_BYTE *)(a4 + 23) = 0;
  }
  return result;
}

void sub_1CB50A504(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a26 < 0)
    operator delete(__p);
  if (a32 < 0)
    operator delete(a27);
  _Unwind_Resume(a1);
}

uint64_t **com::apple::siri::tokenizer::data::config_yue_Hant::getContent@<X0>(uint64_t **a1@<X8>)
{
  _OWORD v3[3];
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v3[0] = xmmword_1E86768B8;
  v3[1] = *(_OWORD *)&off_1E86768C8;
  v3[2] = xmmword_1E86768D8;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 2);
}

void morphun::dialog::language::BgCommonConceptFactory::~BgCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1E8667618);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1E8667618);
  JUMPOUT(0x1D179D2ECLL);
}

void morphun::grammar::synthesis::DaGrammarSynthesizer_ArticleLookupFunction::~DaGrammarSynthesizer_ArticleLookupFunction(morphun::grammar::synthesis::DaGrammarSynthesizer_ArticleLookupFunction *this)
{
  morphun::grammar::synthesis::DaGrammarSynthesizer_ArticleLookupFunction::~DaGrammarSynthesizer_ArticleLookupFunction(this);
  JUMPOUT(0x1D179D2ECLL);
}

{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  *(_QWORD *)this = &off_1E866EDA8;
  *((_QWORD *)this + 46) = &off_1E866B2F8;
  v2 = (void *)*((_QWORD *)this + 68);
  if (v2)
  {
    *((_QWORD *)this + 69) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 66);
  *((_QWORD *)this + 66) = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 16))(v3);
  *((_QWORD *)this + 47) = &off_1E8671C00;
  *((_QWORD *)this + 20) = &off_1E866B2F8;
  v4 = (void *)*((_QWORD *)this + 42);
  if (v4)
  {
    *((_QWORD *)this + 43) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 40);
  *((_QWORD *)this + 40) = 0;
  if (v5)
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 16))(v5);
  *((_QWORD *)this + 21) = &off_1E8671C00;
}

uint64_t morphun::grammar::synthesis::DaGrammarSynthesizer_ArticleLookupFunction::getFeatureValue(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  unsigned __int16 *v5;
  int Count;
  _QWORD *FeatureValue;
  _QWORD *v8;
  unsigned __int16 *v9;
  _QWORD *v10;
  uint64_t v11;
  unsigned __int16 *v12;
  int Gender;
  _QWORD *v14;
  _QWORD *v15;
  unsigned __int16 *v16;

  v4 = a1[4];
  npc<morphun::dialog::SemanticFeature const>(v4);
  v5 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 32))(a2, v4);
  Count = morphun::grammar::synthesis::DaGrammarSynthesizer::getCount(v5);
  if (!Count)
  {
    FeatureValue = morphun::dialog::DictionaryLookupFunction::getFeatureValue((uint64_t)(a1 + 20), a2);
    if (!FeatureValue)
      goto LABEL_6;
    v8 = FeatureValue;
    v9 = (unsigned __int16 *)(*(uint64_t (**)(_QWORD *))(*FeatureValue + 32))(FeatureValue);
    Count = morphun::grammar::synthesis::DaGrammarSynthesizer::getCount(v9);
    (*(void (**)(_QWORD *))(*v8 + 16))(v8);
  }
  if (Count != 2)
  {
LABEL_6:
    v11 = a1[3];
    npc<morphun::dialog::SemanticFeature const>(v11);
    v12 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 32))(a2, v11);
    Gender = morphun::grammar::synthesis::DaGrammarSynthesizer::getGender(v12);
    if (!Gender)
    {
      v14 = morphun::dialog::DictionaryLookupFunction::getFeatureValue((uint64_t)(a1 + 46), a2);
      if (!v14)
        goto LABEL_11;
      v15 = v14;
      v16 = (unsigned __int16 *)(*(uint64_t (**)(_QWORD *))(*v14 + 32))(v14);
      Gender = morphun::grammar::synthesis::DaGrammarSynthesizer::getGender(v16);
      (*(void (**)(_QWORD *))(*v15 + 16))(v15);
    }
    if (Gender == 2)
    {
      v10 = a1 + 10;
      return (*(uint64_t (**)(_QWORD *, uint64_t, _QWORD *))(*a1 + 40))(a1, a2, v10);
    }
LABEL_11:
    v10 = a1 + 5;
    return (*(uint64_t (**)(_QWORD *, uint64_t, _QWORD *))(*a1 + 40))(a1, a2, v10);
  }
  v10 = a1 + 15;
  return (*(uint64_t (**)(_QWORD *, uint64_t, _QWORD *))(*a1 + 40))(a1, a2, v10);
}

void sub_1CB50A80C(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void sub_1CB50A870(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

morphun::grammar::synthesis::DaGrammarSynthesizer_ArticleLookupFunction *morphun::grammar::synthesis::DaGrammarSynthesizer_ArticleLookupFunction::DaGrammarSynthesizer_ArticleLookupFunction(morphun::grammar::synthesis::DaGrammarSynthesizer_ArticleLookupFunction *a1, const morphun::dialog::SemanticFeatureModel *a2, char a3, __int128 *a4, __int128 *a5, __int128 *a6)
{
  _QWORD v12[5];
  _QWORD v13[5];
  _QWORD v14[5];

  morphun::dialog::SpeakableString::SpeakableString(v14, a4);
  morphun::dialog::SpeakableString::SpeakableString(v13, a5);
  morphun::dialog::SpeakableString::SpeakableString(v12, a6);
  morphun::grammar::synthesis::DaGrammarSynthesizer_ArticleLookupFunction::DaGrammarSynthesizer_ArticleLookupFunction(a1, a2, a3, (const morphun::dialog::SpeakableString *)v14, (const morphun::dialog::SpeakableString *)v13, (const morphun::dialog::SpeakableString *)v12);
  return a1;
}

void sub_1CB50AA28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  va_list va1;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v9 = va_arg(va2, _QWORD);
  v11 = va_arg(va2, _QWORD);
  v12 = va_arg(va2, _QWORD);
  v13 = va_arg(va2, _QWORD);
  v14 = va_arg(va2, _QWORD);
  _Unwind_Resume(a1);
}

morphun::grammar::synthesis::DaGrammarSynthesizer_ArticleLookupFunction *morphun::grammar::synthesis::DaGrammarSynthesizer_ArticleLookupFunction::DaGrammarSynthesizer_ArticleLookupFunction(morphun::grammar::synthesis::DaGrammarSynthesizer_ArticleLookupFunction *this, const morphun::dialog::SemanticFeatureModel *a2, char a3, const morphun::dialog::SpeakableString *a4, const morphun::dialog::SpeakableString *a5, const morphun::dialog::SpeakableString *a6)
{
  morphun::dialog::SpeakableString *v11;
  morphun::grammar::synthesis::GrammemeConstants *v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  morphun::util::LocaleUtils *v17;
  uint64_t i;
  morphun::grammar::synthesis::GrammemeConstants *v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t j;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  std::basic_string<char16_t> *v32;
  std::basic_string<char16_t> *v33;
  std::basic_string<char16_t> *v34;
  std::basic_string<char16_t> **v35;
  char v36;
  std::basic_string<char16_t> __dst;
  std::basic_string<char16_t> v38;
  __int128 v39;

  *((_QWORD *)&v39 + 1) = *MEMORY[0x1E0C80C00];
  *(_QWORD *)this = &off_1E865D5B8;
  morphun::dialog::DefaultArticleLookupFunction::DefaultArticleLookupFunction(this, (const morphun::dialog::SemanticFeatureModel *)&off_1E8668368, (uint64_t)a2, a3, 1);
  *(_QWORD *)this = &off_1E866EDA8;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = 0;
  morphun::dialog::SpeakableString::SpeakableString((morphun::grammar::synthesis::DaGrammarSynthesizer_ArticleLookupFunction *)((char *)this + 40), a4);
  morphun::dialog::SpeakableString::SpeakableString((morphun::grammar::synthesis::DaGrammarSynthesizer_ArticleLookupFunction *)((char *)this + 80), a5);
  v11 = morphun::dialog::SpeakableString::SpeakableString((morphun::grammar::synthesis::DaGrammarSynthesizer_ArticleLookupFunction *)((char *)this + 120), a6);
  v12 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::DANISH(v11);
  v13 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v12);
  if (*(char *)(v13 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&__dst, *(const std::basic_string<char16_t>::value_type **)v13, *(_QWORD *)(v13 + 8));
  }
  else
  {
    v14 = *(_OWORD *)v13;
    __dst.__r_.__value_.__r.__words[2] = *(_QWORD *)(v13 + 16);
    *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v14;
  }
  v15 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v13);
  if (*(char *)(v15 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v38, *(const std::basic_string<char16_t>::value_type **)v15, *(_QWORD *)(v15 + 8));
  }
  else
  {
    v16 = *(_OWORD *)v15;
    v38.__r_.__value_.__r.__words[2] = *(_QWORD *)(v15 + 16);
    *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v16;
  }
  v32 = 0;
  v33 = 0;
  v34 = 0;
  v35 = &v32;
  v36 = 0;
  v32 = (std::basic_string<char16_t> *)operator new(0x30uLL);
  v33 = v32;
  v34 = v32 + 2;
  v33 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v34, (__int128 *)&__dst, &v39, v32);
  morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction((uint64_t)this + 160, v12, (uint64_t *)&v32);
  v35 = &v32;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v35);
  for (i = 0; i != -6; i -= 3)
  {
    if (SHIBYTE(v38.__r_.__value_.__r.__words[i + 2]) < 0)
      operator delete(*(void **)((char *)&__dst + i * 8 + 24));
  }
  v19 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::DANISH(v17);
  v20 = morphun::grammar::synthesis::GrammemeConstants::GENDER_COMMON(v19);
  if (*(char *)(v20 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&__dst, *(const std::basic_string<char16_t>::value_type **)v20, *(_QWORD *)(v20 + 8));
  }
  else
  {
    v21 = *(_OWORD *)v20;
    __dst.__r_.__value_.__r.__words[2] = *(_QWORD *)(v20 + 16);
    *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v21;
  }
  v22 = morphun::grammar::synthesis::GrammemeConstants::GENDER_NEUTER((morphun::grammar::synthesis::GrammemeConstants *)v20);
  if (*(char *)(v22 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v38, *(const std::basic_string<char16_t>::value_type **)v22, *(_QWORD *)(v22 + 8));
  }
  else
  {
    v23 = *(_OWORD *)v22;
    v38.__r_.__value_.__r.__words[2] = *(_QWORD *)(v22 + 16);
    *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v23;
  }
  v32 = 0;
  v33 = 0;
  v34 = 0;
  v35 = &v32;
  v36 = 0;
  v32 = (std::basic_string<char16_t> *)operator new(0x30uLL);
  v33 = v32;
  v34 = v32 + 2;
  v33 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v34, (__int128 *)&__dst, &v39, v32);
  morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction((uint64_t)this + 368, v19, (uint64_t *)&v32);
  v35 = &v32;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v35);
  for (j = 0; j != -6; j -= 3)
  {
    if (SHIBYTE(v38.__r_.__value_.__r.__words[j + 2]) < 0)
      operator delete(*(void **)((char *)&__dst + j * 8 + 24));
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"gender");
  v25 = (char *)a2 + 8;
  v26 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)a2 + 8, (unsigned __int16 *)&__dst);
  v27 = (char *)a2 + 16;
  if (v27 == (char *)v26)
    v28 = 0;
  else
    v28 = *(_QWORD *)(v26 + 56);
  *((_QWORD *)this + 3) = v28;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"count");
  v29 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)v25, (unsigned __int16 *)&__dst);
  if (v27 == (char *)v29)
    v30 = 0;
  else
    v30 = *(_QWORD *)(v29 + 56);
  *((_QWORD *)this + 4) = v30;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  return this;
}

void sub_1CB50ADE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  morphun::dialog::SpeakableString *v20;
  morphun::dialog::SpeakableString *v21;
  morphun::dialog::SpeakableString *v22;
  morphun::dialog::DictionaryLookupFunction *v23;
  morphun::dialog::DictionaryLookupFunction *v24;

  morphun::dialog::DictionaryLookupFunction::~DictionaryLookupFunction(v24);
  morphun::dialog::DictionaryLookupFunction::~DictionaryLookupFunction(v23);
  _Unwind_Resume(a1);
}

void sub_1CB50AF2C()
{
  JUMPOUT(0x1CB50AF24);
}

uint64_t morphun::grammar::synthesis::FrGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::FrGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  std::basic_string<char16_t> *v15;
  std::basic_string<char16_t> *v16;
  std::basic_string<char16_t> *v17;
  std::basic_string<char16_t> *v18;
  morphun::grammar::synthesis::FrGrammarSynthesizer_GenderLookupFunction *v19;
  morphun::grammar::synthesis::FrGrammarSynthesizer_CountLookupFunction *v20;
  morphun::util::LocaleUtils *v21;
  const morphun::util::ULocale *v22;
  uint64_t i;
  uint64_t j;
  uint64_t v25;
  morphun::dictionary::DictionaryMetaData *v26;
  const morphun::util::ULocale *v27;
  _QWORD *Dictionary;
  uint64_t *v29;
  uint64_t k;
  uint64_t *v31;
  uint64_t *v32;
  morphun::TokenizerFactory *v33;
  const morphun::util::ULocale *v34;
  morphun::Tokenizer *Tokenizer;
  morphun::grammar::synthesis::GrammemeConstants *v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  morphun::grammar::synthesis::GrammemeConstants *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  morphun::grammar::synthesis::GrammemeConstants *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  morphun::grammar::synthesis::GrammemeConstants *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t *v90;
  uint64_t m;
  _QWORD *v92;
  uint64_t v93;
  uint64_t *BinaryProperties;
  uint64_t n;
  uint64_t v96;
  uint64_t *v97;
  uint64_t ii;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t result;
  morphun::exception::NullPointerException *exception;
  _QWORD *v113;
  morphun::grammar::synthesis::FrGrammarSynthesizer *v114;
  uint64_t *v115;
  morphun::dictionary::DictionaryMetaData *v116;
  _QWORD *v117;
  uint64_t v118[3];
  void *v119[2];
  char v120;
  void *v121[2];
  char v122;
  void *v123[2];
  char v124;
  __int128 v125;
  uint64_t v126;
  void *v127[2];
  char v128;
  __int128 v129;
  uint64_t v130;
  _QWORD v131[3];
  void *__p[2];
  char v133;
  __int128 __dst;
  _QWORD *v135;
  morphun::grammar::synthesis::GrammemeConstants *v136;
  _QWORD *v137;
  _QWORD *v138;
  __int128 v139;
  _QWORD *v140;
  _QWORD *v141;
  _QWORD *v142;
  _QWORD v143[10];
  _QWORD v144[3];
  __int128 v145;
  _QWORD v146[5];

  v146[3] = *MEMORY[0x1E0C80C00];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"defArticle");
  v3 = (_QWORD *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, (char *)&word_1CB73EB86);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v125, (char *)&word_1CB73EB86);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v123, "l");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v121, "l");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v119, "l");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "l");
  morphun::grammar::synthesis::FrGrammarSynthesizer_ArticleLookupFunction::FrGrammarSynthesizer_ArticleLookupFunction((uint64_t)v3, (uint64_t)this, 0, 0, 1, 0, &v129, &v125, (__int128 *)v123, (__int128 *)v121, (__int128 *)v119, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v3 + *(_QWORD *)(*v3 - 56)));
  if (v133 < 0)
    operator delete(__p[0]);
  if (v120 < 0)
    operator delete(v119[0]);
  if (v122 < 0)
    operator delete(v121[0]);
  if (v124 < 0)
    operator delete(v123[0]);
  if (SHIBYTE(v126) < 0)
    operator delete((void *)v125);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v135) < 0)
    operator delete((void *)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "w");
  v4 = (_QWORD *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, (char *)&word_1CB73EB86);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v125, (char *)&word_1CB73EB86);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v123, "l");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v121, "l");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v119, "l");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "l");
  morphun::grammar::synthesis::FrGrammarSynthesizer_ArticleLookupFunction::FrGrammarSynthesizer_ArticleLookupFunction((uint64_t)v4, (uint64_t)this, 0, 0, 1, (char *)L"defArticle", &v129, &v125, (__int128 *)v123, (__int128 *)v121, (__int128 *)v119, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v4 + *(_QWORD *)(*v4 - 56)));
  if (v133 < 0)
    operator delete(__p[0]);
  if (v120 < 0)
    operator delete(v119[0]);
  if (v122 < 0)
    operator delete(v121[0]);
  if (v124 < 0)
    operator delete(v123[0]);
  if (SHIBYTE(v126) < 0)
    operator delete((void *)v125);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v135) < 0)
    operator delete((void *)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "i");
  v5 = (_QWORD *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, (char *)&word_1CB73EB86);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v125, (char *)&word_1CB73EB86);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v123, "u");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v121, (char *)L"une");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v119, (char *)&word_1CB73EB86);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "d");
  morphun::grammar::synthesis::FrGrammarSynthesizer_ArticleLookupFunction::FrGrammarSynthesizer_ArticleLookupFunction((uint64_t)v5, (uint64_t)this, 0, 0, 1, 0, &v129, &v125, (__int128 *)v123, (__int128 *)v121, (__int128 *)v119, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v5 + *(_QWORD *)(*v5 - 56)));
  if (v133 < 0)
    operator delete(__p[0]);
  if (v120 < 0)
    operator delete(v119[0]);
  if (v122 < 0)
    operator delete(v121[0]);
  if (v124 < 0)
    operator delete(v123[0]);
  if (SHIBYTE(v126) < 0)
    operator delete((void *)v125);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v135) < 0)
    operator delete((void *)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"withIndefArticle");
  v6 = (_QWORD *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, (char *)&word_1CB73EB86);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v125, (char *)&word_1CB73EB86);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v123, "u");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v121, (char *)L"une");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v119, (char *)&word_1CB73EB86);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "d");
  morphun::grammar::synthesis::FrGrammarSynthesizer_ArticleLookupFunction::FrGrammarSynthesizer_ArticleLookupFunction((uint64_t)v6, (uint64_t)this, 1, 0, 1, "i", &v129, &v125, (__int128 *)v123, (__int128 *)v121, (__int128 *)v119, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v6 + *(_QWORD *)(*v6 - 56)));
  if (v133 < 0)
    operator delete(__p[0]);
  if (v120 < 0)
    operator delete(v119[0]);
  if (v122 < 0)
    operator delete(v121[0]);
  if (v124 < 0)
    operator delete(v123[0]);
  if (SHIBYTE(v126) < 0)
    operator delete((void *)v125);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v135) < 0)
    operator delete((void *)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "a");
  v7 = (_QWORD *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, byte_1CB737906);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v125, (char *)&word_1CB73EB86);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v123, (char *)L"au ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v121, byte_1CB7378F0);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v119, byte_1CB7378DE);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"aux ");
  morphun::grammar::synthesis::FrGrammarSynthesizer_ArticleLookupFunction::FrGrammarSynthesizer_ArticleLookupFunction((uint64_t)v7, (uint64_t)this, 0, 0, 1, 0, &v129, &v125, (__int128 *)v123, (__int128 *)v121, (__int128 *)v119, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v7 + *(_QWORD *)(*v7 - 56)));
  if (v133 < 0)
    operator delete(__p[0]);
  if (v120 < 0)
    operator delete(v119[0]);
  if (v122 < 0)
    operator delete(v121[0]);
  if (v124 < 0)
    operator delete(v123[0]);
  if (SHIBYTE(v126) < 0)
    operator delete((void *)v125);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v135) < 0)
    operator delete((void *)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"withAPrepArticle");
  v8 = (_QWORD *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, byte_1CB737906);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v125, (char *)&word_1CB73EB86);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v123, (char *)L"au ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v121, byte_1CB7378F0);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v119, byte_1CB7378DE);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"aux ");
  morphun::grammar::synthesis::FrGrammarSynthesizer_ArticleLookupFunction::FrGrammarSynthesizer_ArticleLookupFunction((uint64_t)v8, (uint64_t)this, 0, 1, 1, "a", &v129, &v125, (__int128 *)v123, (__int128 *)v121, (__int128 *)v119, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v8 + *(_QWORD *)(*v8 - 56)));
  if (v133 < 0)
    operator delete(__p[0]);
  if (v120 < 0)
    operator delete(v119[0]);
  if (v122 < 0)
    operator delete(v121[0]);
  if (v124 < 0)
    operator delete(v123[0]);
  if (SHIBYTE(v126) < 0)
    operator delete((void *)v125);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v135) < 0)
    operator delete((void *)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "d");
  v9 = (_QWORD *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, (char *)&word_1CB73E0E6);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v125, "d");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v123, (char *)L"du ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v121, (char *)L"de la ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v119, (char *)aDeL);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "d");
  morphun::grammar::synthesis::FrGrammarSynthesizer_ArticleLookupFunction::FrGrammarSynthesizer_ArticleLookupFunction((uint64_t)v9, (uint64_t)this, 0, 0, 1, 0, &v129, &v125, (__int128 *)v123, (__int128 *)v121, (__int128 *)v119, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v9 + *(_QWORD *)(*v9 - 56)));
  if (v133 < 0)
    operator delete(__p[0]);
  if (v120 < 0)
    operator delete(v119[0]);
  if (v122 < 0)
    operator delete(v121[0]);
  if (v124 < 0)
    operator delete(v123[0]);
  if (SHIBYTE(v126) < 0)
    operator delete((void *)v125);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v135) < 0)
    operator delete((void *)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"withDePrepArticle");
  v10 = (_QWORD *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, (char *)&word_1CB73E0E6);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v125, "d");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v123, (char *)L"du ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v121, (char *)L"de la ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v119, (char *)aDeL);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "d");
  morphun::grammar::synthesis::FrGrammarSynthesizer_ArticleLookupFunction::FrGrammarSynthesizer_ArticleLookupFunction((uint64_t)v10, (uint64_t)this, 0, 1, 1, "d", &v129, &v125, (__int128 *)v123, (__int128 *)v121, (__int128 *)v119, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v10 + *(_QWORD *)(*v10 - 56)));
  if (v133 < 0)
    operator delete(__p[0]);
  if (v120 < 0)
    operator delete(v119[0]);
  if (v122 < 0)
    operator delete(v121[0]);
  if (v124 < 0)
    operator delete(v123[0]);
  if (SHIBYTE(v126) < 0)
    operator delete((void *)v125);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v135) < 0)
    operator delete((void *)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "d");
  v11 = (_QWORD *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, (char *)L"ce");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v125, (char *)&word_1CB73EB86);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v123, (char *)L"ce");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v121, "c");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v119, (char *)L"cet");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "c");
  morphun::grammar::synthesis::FrGrammarSynthesizer_ArticleLookupFunction::FrGrammarSynthesizer_ArticleLookupFunction((uint64_t)v11, (uint64_t)this, 0, 0, 0, 0, &v129, &v125, (__int128 *)v123, (__int128 *)v121, (__int128 *)v119, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v11 + *(_QWORD *)(*v11 - 56)));
  if (v133 < 0)
    operator delete(__p[0]);
  if (v120 < 0)
    operator delete(v119[0]);
  if (v122 < 0)
    operator delete(v121[0]);
  if (v124 < 0)
    operator delete(v123[0]);
  if (SHIBYTE(v126) < 0)
    operator delete((void *)v125);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v135) < 0)
    operator delete((void *)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"withDemonArticle");
  v12 = (_QWORD *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, (char *)L"ce");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v125, (char *)&word_1CB73EB86);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v123, (char *)L"ce");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v121, "c");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v119, (char *)L"cet");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "c");
  morphun::grammar::synthesis::FrGrammarSynthesizer_ArticleLookupFunction::FrGrammarSynthesizer_ArticleLookupFunction((uint64_t)v12, (uint64_t)this, 1, 0, 0, "d", &v129, &v125, (__int128 *)v123, (__int128 *)v121, (__int128 *)v119, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v12 + *(_QWORD *)(*v12 - 56)));
  if (v133 < 0)
    operator delete(__p[0]);
  if (v120 < 0)
    operator delete(v119[0]);
  if (v122 < 0)
    operator delete(v121[0]);
  if (v124 < 0)
    operator delete(v123[0]);
  if (SHIBYTE(v126) < 0)
    operator delete((void *)v125);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v135) < 0)
    operator delete((void *)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"genitiveArticle");
  v13 = (_QWORD *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, (char *)&word_1CB73E0E6);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v125, (char *)&word_1CB73EB86);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v123, (char *)&word_1CB73E0E6);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v121, (char *)L"de la ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v119, (char *)aDeL);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "d");
  morphun::grammar::synthesis::FrGrammarSynthesizer_ArticleLookupFunction::FrGrammarSynthesizer_ArticleLookupFunction((uint64_t)v13, (uint64_t)this, 0, 0, 1, 0, &v129, &v125, (__int128 *)v123, (__int128 *)v121, (__int128 *)v119, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v13 + *(_QWORD *)(*v13 - 56)));
  if (v133 < 0)
    operator delete(__p[0]);
  if (v120 < 0)
    operator delete(v119[0]);
  if (v122 < 0)
    operator delete(v121[0]);
  if (v124 < 0)
    operator delete(v123[0]);
  if (SHIBYTE(v126) < 0)
    operator delete((void *)v125);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v135) < 0)
    operator delete((void *)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"withGenitiveArticle");
  v14 = (_QWORD *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, (char *)&word_1CB73E0E6);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v125, (char *)&word_1CB73EB86);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v123, (char *)&word_1CB73E0E6);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v121, (char *)L"de la ");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v119, (char *)aDeL);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "d");
  morphun::grammar::synthesis::FrGrammarSynthesizer_ArticleLookupFunction::FrGrammarSynthesizer_ArticleLookupFunction((uint64_t)v14, (uint64_t)this, 0, 1, 1, (char *)L"genitiveArticle", &v129, &v125, (__int128 *)v123, (__int128 *)v121, (__int128 *)v119, (__int128 *)__p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v14 + *(_QWORD *)(*v14 - 56)));
  if (v133 < 0)
    operator delete(__p[0]);
  if (v120 < 0)
    operator delete(v119[0]);
  if (v122 < 0)
    operator delete(v121[0]);
  if (v124 < 0)
    operator delete(v123[0]);
  if (SHIBYTE(v126) < 0)
    operator delete((void *)v125);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v135) < 0)
    operator delete((void *)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"dePrep");
  v15 = (std::basic_string<char16_t> *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, (char *)&word_1CB73EB86);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v125, (char *)&word_1CB73E0E6);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v123, "d");
  morphun::grammar::synthesis::FrGrammarSynthesizer_ArticleElidedFunction::FrGrammarSynthesizer_ArticleElidedFunction(v15, (uint64_t)this, 0, &v129, &v125, (__int128 *)v123);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v15 + *(_QWORD *)(v15->__r_.__value_.__r.__words[0] - 56)));
  if (v124 < 0)
    operator delete(v123[0]);
  if (SHIBYTE(v126) < 0)
    operator delete((void *)v125);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v135) < 0)
    operator delete((void *)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "w");
  v16 = (std::basic_string<char16_t> *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, (char *)&word_1CB73EB86);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v125, (char *)&word_1CB73E0E6);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v123, "d");
  morphun::grammar::synthesis::FrGrammarSynthesizer_ArticleElidedFunction::FrGrammarSynthesizer_ArticleElidedFunction(v16, (uint64_t)this, (uint64_t)L"dePrep", &v129, &v125, (__int128 *)v123);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v16 + *(_QWORD *)(v16->__r_.__value_.__r.__words[0] - 56)));
  if (v124 < 0)
    operator delete(v123[0]);
  if (SHIBYTE(v126) < 0)
    operator delete((void *)v125);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v135) < 0)
    operator delete((void *)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"que");
  v17 = (std::basic_string<char16_t> *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, (char *)&word_1CB73EB86);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v125, "q");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v123, "q");
  morphun::grammar::synthesis::FrGrammarSynthesizer_ArticleElidedFunction::FrGrammarSynthesizer_ArticleElidedFunction(v17, (uint64_t)this, 0, &v129, &v125, (__int128 *)v123);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v17 + *(_QWORD *)(v17->__r_.__value_.__r.__words[0] - 56)));
  if (v124 < 0)
    operator delete(v123[0]);
  if (SHIBYTE(v126) < 0)
    operator delete((void *)v125);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v135) < 0)
    operator delete((void *)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"withQue");
  v18 = (std::basic_string<char16_t> *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, (char *)&word_1CB73EB86);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v125, "q");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v123, "q");
  morphun::grammar::synthesis::FrGrammarSynthesizer_ArticleElidedFunction::FrGrammarSynthesizer_ArticleElidedFunction(v18, (uint64_t)this, (uint64_t)L"que", &v129, &v125, (__int128 *)v123);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v18 + *(_QWORD *)(v18->__r_.__value_.__r.__words[0] - 56)));
  if (v124 < 0)
    operator delete(v123[0]);
  if (SHIBYTE(v126) < 0)
    operator delete((void *)v125);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v135) < 0)
    operator delete((void *)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"gender");
  v19 = (morphun::grammar::synthesis::FrGrammarSynthesizer_GenderLookupFunction *)operator new();
  morphun::grammar::synthesis::FrGrammarSynthesizer_GenderLookupFunction::FrGrammarSynthesizer_GenderLookupFunction(v19);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::grammar::synthesis::FrGrammarSynthesizer_GenderLookupFunction *)((char *)v19+ *(_QWORD *)(*(_QWORD *)v19 - 56)));
  if (SHIBYTE(v135) < 0)
    operator delete((void *)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"count");
  v20 = (morphun::grammar::synthesis::FrGrammarSynthesizer_CountLookupFunction *)operator new();
  morphun::grammar::synthesis::FrGrammarSynthesizer_CountLookupFunction::FrGrammarSynthesizer_CountLookupFunction(v20);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::grammar::synthesis::FrGrammarSynthesizer_CountLookupFunction *)((char *)v20+ *(_QWORD *)(*(_QWORD *)v20 - 56)));
  if (SHIBYTE(v135) < 0)
    operator delete((void *)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v125, "d");
  v21 = (morphun::util::LocaleUtils *)operator new();
  v22 = (const morphun::util::ULocale *)morphun::util::LocaleUtils::FRENCH(v21);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"defArticle");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v136, "d");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v139, "a");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v141, (char *)L"genitiveArticle");
  std::set<std::basic_string<char16_t>>::set[abi:ne180100]((uint64_t *)v123, (unsigned __int16 *)&__dst, 4);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, "d");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v131, (char *)&word_1CB73E0E6);
  std::set<std::basic_string<char16_t>>::set[abi:ne180100]((uint64_t *)v121, (unsigned __int16 *)&v129, 2);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "i");
  std::set<std::basic_string<char16_t>>::set[abi:ne180100]((uint64_t *)v119, (unsigned __int16 *)__p, 1);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v127, byte_1CB737906);
  std::set<std::basic_string<char16_t>>::set[abi:ne180100](v118, (unsigned __int16 *)v127, 1);
  morphun::dialog::ArticleDetectionFunction::ArticleDetectionFunction((uint64_t)v21, v22, (uint64_t)v123, (uint64_t)v121, (uint64_t)v119, (uint64_t)v118);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&v125, (morphun::util::LocaleUtils *)((char *)v21 + *(_QWORD *)(*(_QWORD *)v21 - 56)));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy((char *)v118[1]);
  if (v128 < 0)
    operator delete(v127[0]);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy((char *)v119[1]);
  if (v133 < 0)
    operator delete(__p[0]);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy((char *)v121[1]);
  for (i = 0; i != -6; i -= 3)
  {
    if (SHIBYTE(v131[i + 2]) < 0)
      operator delete((void *)v131[i]);
  }
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy((char *)v123[1]);
  for (j = 0; j != -12; j -= 3)
  {
    if (SHIBYTE(v143[j]) < 0)
      operator delete((&v141)[j]);
  }
  if (SHIBYTE(v126) < 0)
    operator delete((void *)v125);
  v25 = operator new();
  *(_QWORD *)v25 = &off_1E866E410;
  v117 = (_QWORD *)v25;
  v26 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::FRENCH((morphun::util::LocaleUtils *)v25);
  Dictionary = morphun::dictionary::DictionaryMetaData::createDictionary(v26, v27);
  if (!Dictionary)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  *(_QWORD *)(v25 + 16) = 0;
  *(_QWORD *)(v25 + 8) = Dictionary;
  *(_QWORD *)(v25 + 24) = 0;
  *(_QWORD *)(v25 + 32) = 0;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "w");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, (char *)L"withIndefArticle");
  morphun::dialog::DefinitenessDisplayFunction::DefinitenessDisplayFunction((_QWORD *)(v25 + 40), this, (unsigned __int16 *)&__dst, L"defArticle", 10, (unsigned __int16 *)&v129, (unsigned __int16 *)"i", 12);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  if (SHIBYTE(v135) < 0)
    operator delete((void *)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"de");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v136, "d");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v139, (char *)L"du");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v141, "d");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v144, (char *)L"en");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v145, byte_1CB73A402);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v146, "p");
  v29 = std::set<std::basic_string<char16_t>>::set[abi:ne180100]((uint64_t *)(v25 + 128), (unsigned __int16 *)&__dst, 7);
  for (k = 0; k != -21; k -= 3)
  {
    if (SHIBYTE(v146[k + 2]) < 0)
      operator delete((void *)v146[k]);
  }
  *(_OWORD *)(v25 + 152) = 0u;
  v31 = (uint64_t *)(v25 + 152);
  *(_OWORD *)(v25 + 168) = 0u;
  v32 = (uint64_t *)(v25 + 168);
  v33 = (morphun::TokenizerFactory *)morphun::util::LocaleUtils::FRENCH((morphun::util::LocaleUtils *)v29);
  Tokenizer = morphun::TokenizerFactory::createTokenizer(v33, v34);
  v113 = (_QWORD *)(v25 + 16);
  v114 = this;
  *(_QWORD *)(v25 + 184) = Tokenizer;
  v36 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::FRENCH(Tokenizer);
  v115 = v32;
  v37 = morphun::grammar::synthesis::GrammemeConstants::POS_NOUN(v36);
  v38 = *(char *)(v37 + 23);
  if (v38 >= 0)
    v39 = v37;
  else
    v39 = *(_QWORD *)v37;
  if (v38 >= 0)
    v40 = *(unsigned __int8 *)(v37 + 23);
  else
    v40 = *(_QWORD *)(v37 + 8);
  v41 = morphun::grammar::synthesis::GrammemeConstants::POS_ADJECTIVE((morphun::grammar::synthesis::GrammemeConstants *)v37);
  v42 = *(char *)(v41 + 23);
  if (v42 >= 0)
    v43 = v41;
  else
    v43 = *(_QWORD *)v41;
  if (v42 >= 0)
    v44 = *(unsigned __int8 *)(v41 + 23);
  else
    v44 = *(_QWORD *)(v41 + 8);
  v45 = morphun::grammar::synthesis::GrammemeConstants::POS_VERB((morphun::grammar::synthesis::GrammemeConstants *)v41);
  v116 = v36;
  v46 = *(unsigned __int8 *)(v45 + 23);
  v47 = *(_QWORD *)v45;
  v48 = *(_QWORD *)(v45 + 8);
  v49 = (morphun::grammar::synthesis::GrammemeConstants *)operator new(0x30uLL);
  *((_QWORD *)&__dst + 1) = (char *)v49 + 48;
  v135 = (_QWORD *)((char *)v49 + 48);
  if ((v46 & 0x80u) == 0)
    v50 = v45;
  else
    v50 = v47;
  if ((v46 & 0x80u) == 0)
    v51 = v46;
  else
    v51 = v48;
  *(_QWORD *)v49 = v39;
  *((_QWORD *)v49 + 1) = v40;
  *((_QWORD *)v49 + 2) = v43;
  *((_QWORD *)v49 + 3) = v44;
  *((_QWORD *)v49 + 4) = v50;
  *((_QWORD *)v49 + 5) = v51;
  *(_QWORD *)&__dst = v49;
  v52 = morphun::grammar::synthesis::GrammemeConstants::PERSON_THIRD(v49);
  v53 = *(char *)(v52 + 23);
  if (v53 >= 0)
    v54 = v52;
  else
    v54 = *(_QWORD *)v52;
  if (v53 >= 0)
    v55 = *(unsigned __int8 *)(v52 + 23);
  else
    v55 = *(_QWORD *)(v52 + 8);
  v56 = morphun::grammar::synthesis::GrammemeConstants::PERSON_FIRST((morphun::grammar::synthesis::GrammemeConstants *)v52);
  v57 = *(char *)(v56 + 23);
  if (v57 >= 0)
    v58 = v56;
  else
    v58 = *(_QWORD *)v56;
  if (v57 >= 0)
    v59 = *(unsigned __int8 *)(v56 + 23);
  else
    v59 = *(_QWORD *)(v56 + 8);
  v60 = morphun::grammar::synthesis::GrammemeConstants::PERSON_SECOND((morphun::grammar::synthesis::GrammemeConstants *)v56);
  v61 = *(unsigned __int8 *)(v60 + 23);
  v63 = *(_QWORD *)v60;
  v62 = *(_QWORD *)(v60 + 8);
  v136 = 0;
  v137 = 0;
  v138 = 0;
  v64 = (morphun::grammar::synthesis::GrammemeConstants *)operator new(0x30uLL);
  v137 = (_QWORD *)((char *)v64 + 48);
  v138 = (_QWORD *)((char *)v64 + 48);
  if ((v61 & 0x80u) == 0)
    v65 = v60;
  else
    v65 = v63;
  if ((v61 & 0x80u) == 0)
    v66 = v61;
  else
    v66 = v62;
  *(_QWORD *)v64 = v54;
  *((_QWORD *)v64 + 1) = v55;
  *((_QWORD *)v64 + 2) = v58;
  *((_QWORD *)v64 + 3) = v59;
  *((_QWORD *)v64 + 4) = v65;
  *((_QWORD *)v64 + 5) = v66;
  v136 = v64;
  v67 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v64);
  v68 = *(char *)(v67 + 23);
  if (v68 >= 0)
    v69 = v67;
  else
    v69 = *(_QWORD *)v67;
  if (v68 >= 0)
    v70 = *(unsigned __int8 *)(v67 + 23);
  else
    v70 = *(_QWORD *)(v67 + 8);
  v71 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v67);
  v72 = *(unsigned __int8 *)(v71 + 23);
  v73 = *(_QWORD *)v71;
  v74 = *(_QWORD *)(v71 + 8);
  v139 = 0uLL;
  v140 = 0;
  v75 = (morphun::grammar::synthesis::GrammemeConstants *)operator new(0x20uLL);
  *((_QWORD *)&v139 + 1) = (char *)v75 + 32;
  v140 = (_QWORD *)((char *)v75 + 32);
  if ((v72 & 0x80u) == 0)
    v76 = v71;
  else
    v76 = v73;
  if ((v72 & 0x80u) == 0)
    v77 = v72;
  else
    v77 = v74;
  *(_QWORD *)v75 = v69;
  *((_QWORD *)v75 + 1) = v70;
  *((_QWORD *)v75 + 2) = v76;
  *((_QWORD *)v75 + 3) = v77;
  *(_QWORD *)&v139 = v75;
  v78 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(v75);
  v79 = *(char *)(v78 + 23);
  if (v79 >= 0)
    v80 = v78;
  else
    v80 = *(_QWORD *)v78;
  if (v79 >= 0)
    v81 = *(unsigned __int8 *)(v78 + 23);
  else
    v81 = *(_QWORD *)(v78 + 8);
  v82 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE((morphun::grammar::synthesis::GrammemeConstants *)v78);
  v83 = *(unsigned __int8 *)(v82 + 23);
  v85 = *(_QWORD *)v82;
  v84 = *(_QWORD *)(v82 + 8);
  v141 = 0;
  v142 = 0;
  v143[0] = 0;
  v86 = operator new(0x20uLL);
  v142 = v86 + 4;
  v143[0] = v86 + 4;
  if ((v83 & 0x80u) == 0)
    v87 = v82;
  else
    v87 = v85;
  if ((v83 & 0x80u) == 0)
    v88 = v83;
  else
    v88 = v84;
  *v86 = v80;
  v86[1] = v81;
  v86[2] = v87;
  v86[3] = v88;
  v141 = v86;
  v130 = 0;
  v129 = 0uLL;
  *(_QWORD *)&v125 = &v129;
  BYTE8(v125) = 0;
  *(_QWORD *)&v129 = operator new(0x60uLL);
  *((_QWORD *)&v129 + 1) = v129;
  v130 = v129 + 96;
  *((_QWORD *)&v129 + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<std::u16string_view>>,std::vector<std::u16string_view> const*,std::vector<std::u16string_view> const*,std::vector<std::u16string_view>*>((uint64_t)&v130, (uint64_t)&__dst, (uint64_t)v144, (_QWORD *)v129);
  v125 = 0uLL;
  v126 = 0;
  morphun::dialog::DictionaryLookupInflector::DictionaryLookupInflector(v117 + 24, v116, (uint64_t)&v129, (uint64_t **)&v125, 1);
  v89 = v31 + 1;
  v90 = v31 + 3;
  v123[0] = &v125;
  std::vector<std::vector<std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100]((void ***)v123);
  *(_QWORD *)&v125 = &v129;
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v125);
  for (m = 0; m != -12; m -= 3)
  {
    v92 = (&v141)[m];
    if (v92)
    {
      v143[m - 1] = v92;
      operator delete(v92);
    }
  }
  v93 = v117[1];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"noun");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v136, "a");
  v129 = 0uLL;
  v130 = 0;
  *(_QWORD *)&v125 = &v129;
  BYTE8(v125) = 0;
  *(_QWORD *)&v129 = operator new(0x30uLL);
  *((_QWORD *)&v129 + 1) = v129;
  v130 = v129 + 48;
  *((_QWORD *)&v129 + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v130, &__dst, &v139, (std::basic_string<char16_t> *)v129);
  BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v93, v31, (uint64_t *)&v129);
  morphun::util::Validate::notNull<long long>((uint64_t)BinaryProperties);
  *(_QWORD *)&v125 = &v129;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v125);
  for (n = 0; n != -6; n -= 3)
  {
    if (SHIBYTE((&v138)[n]) < 0)
      operator delete(*(morphun::grammar::synthesis::GrammemeConstants **)((char *)&v136 + n * 8));
  }
  v96 = v117[1];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "a");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v136, "p");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v139, (char *)L"proper-noun");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v141, "p");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v144, (char *)L"adposition");
  v129 = 0uLL;
  v130 = 0;
  *(_QWORD *)&v125 = &v129;
  BYTE8(v125) = 0;
  *(_QWORD *)&v129 = operator new(0x78uLL);
  *((_QWORD *)&v129 + 1) = v129;
  v130 = v129 + 120;
  *((_QWORD *)&v129 + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v130, &__dst, &v145, (std::basic_string<char16_t> *)v129);
  v97 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v96, v89, (uint64_t *)&v129);
  morphun::util::Validate::notNull<long long>((uint64_t)v97);
  *(_QWORD *)&v125 = &v129;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v125);
  for (ii = 0; ii != -15; ii -= 3)
  {
    if (SHIBYTE(v144[ii + 2]) < 0)
      operator delete((void *)v144[ii]);
  }
  v99 = v117[1];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, "a");
  __dst = 0uLL;
  v135 = 0;
  *(_QWORD *)&v125 = &__dst;
  BYTE8(v125) = 0;
  *(_QWORD *)&__dst = operator new(0x18uLL);
  *((_QWORD *)&__dst + 1) = __dst;
  v135 = (_QWORD *)(__dst + 24);
  *((_QWORD *)&__dst + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v135, &v129, (__int128 *)v131, (std::basic_string<char16_t> *)__dst);
  v100 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v99, v115, (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v100);
  *(_QWORD *)&v125 = &__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v125);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  v101 = v117[1];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, (char *)L"verb");
  __dst = 0uLL;
  v135 = 0;
  *(_QWORD *)&v125 = &__dst;
  BYTE8(v125) = 0;
  *(_QWORD *)&__dst = operator new(0x18uLL);
  *((_QWORD *)&__dst + 1) = __dst;
  v135 = (_QWORD *)(__dst + 24);
  *((_QWORD *)&__dst + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v135, &v129, (__int128 *)v131, (std::basic_string<char16_t> *)__dst);
  v102 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v101, v90, (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v102);
  *(_QWORD *)&v125 = &__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v125);
  if (SHIBYTE(v130) < 0)
    operator delete((void *)v129);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"count");
  v103 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)v114 + 8, (unsigned __int16 *)&__dst);
  v104 = (char *)v114 + 16;
  if ((morphun::grammar::synthesis::FrGrammarSynthesizer *)((char *)v114 + 16) == (morphun::grammar::synthesis::FrGrammarSynthesizer *)v103)
    v105 = 0;
  else
    v105 = *(_QWORD *)(v103 + 56);
  *v113 = v105;
  if (SHIBYTE(v135) < 0)
    operator delete((void *)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"gender");
  v106 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)v114 + 8, (unsigned __int16 *)&__dst);
  if (v104 == (char *)v106)
    v107 = 0;
  else
    v107 = *(_QWORD *)(v106 + 56);
  v117[3] = v107;
  if (SHIBYTE(v135) < 0)
    operator delete((void *)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "p");
  v108 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)v114 + 8, (unsigned __int16 *)&__dst);
  if (v104 == (char *)v108)
    v109 = 0;
  else
    v109 = *(_QWORD *)(v108 + 56);
  v117[4] = v109;
  if (SHIBYTE(v135) < 0)
    operator delete((void *)__dst);
  v110 = *(_QWORD *)(*v117 - 56);
  result = *((_QWORD *)v114 + 29);
  if (result)
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
  *((_QWORD *)v114 + 29) = (char *)v117 + v110;
  return result;
}

void sub_1CB50CE5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, morphun::dialog::DefinitenessDisplayFunction *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  void *v18;

  __cxa_free_exception(v18);
  MEMORY[0x1D179D2EC](a18, 0x10F3C4056A24F47);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::FrGrammarSynthesizer::getCount(unsigned __int16 *a1)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  uint64_t *v9;
  morphun::grammar::synthesis::GrammemeConstants *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t i;
  std::basic_string<char16_t> v17;
  int v18;
  std::basic_string<char16_t> v19;
  int v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  if ((v2 & 1) == 0
  {
    v11 = (morphun::grammar::synthesis::GrammemeConstants *)operator new();
    v12 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v11);
    if (*(char *)(v12 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v17, *(const std::basic_string<char16_t>::value_type **)v12, *(_QWORD *)(v12 + 8));
    }
    else
    {
      v13 = *(_OWORD *)v12;
      v17.__r_.__value_.__r.__words[2] = *(_QWORD *)(v12 + 16);
      *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v13;
    }
    v18 = 1;
    v14 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v12);
    if (*(char *)(v14 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v19, *(const std::basic_string<char16_t>::value_type **)v14, *(_QWORD *)(v14 + 8));
    }
    else
    {
      v15 = *(_OWORD *)v14;
      v19.__r_.__value_.__r.__words[2] = *(_QWORD *)(v14 + 16);
      *(_OWORD *)&v19.__r_.__value_.__l.__data_ = v15;
    }
    v20 = 2;
    std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FrGrammarSynthesizer::Count>::map[abi:ne180100]((uint64_t **)v11, (__int128 *)&v17, 2);
    for (i = 0; i != -8; i -= 4)
    {
      if (SHIBYTE(v19.__r_.__value_.__r.__words[i + 2]) < 0)
        operator delete(*(void **)((char *)&v19.__r_.__value_.__l.__data_ + i * 8));
    }
    morphun::grammar::synthesis::FrGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap = (uint64_t)v11;
  }
  if (!a1)
    return 0;
  v3 = morphun::grammar::synthesis::FrGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FrGrammarSynthesizer::Count>>(morphun::grammar::synthesis::FrGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap);
  v6 = *(_QWORD *)(v3 + 8);
  v4 = v3 + 8;
  v5 = v6;
  if (!v6)
    goto LABEL_10;
  v7 = v4;
  do
  {
    v8 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v5 + 32), a1);
    v9 = (uint64_t *)(v5 + 8);
    if (!v8)
    {
      v9 = (uint64_t *)v5;
      v7 = v5;
    }
    v5 = *v9;
  }
  while (*v9);
  if (v7 == v4 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v7 + 32)))
LABEL_10:
    v7 = v4;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FrGrammarSynthesizer::Count>>(morphun::grammar::synthesis::FrGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v7)
    return 0;
  else
    return *(unsigned int *)(v7 + 56);
}

void sub_1CB50D7E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  uint64_t v14;

  if (a14 < 0)
    operator delete(__p);
  MEMORY[0x1D179D2EC](v14, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FrGrammarSynthesizer::Count>::map[abi:ne180100](uint64_t **a1, __int128 *a2, uint64_t a3)
{
  uint64_t *v4;
  __int128 *v5;
  __int128 *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  BOOL v11;
  char **v12;
  char **v13;
  char *v14;
  unsigned __int16 *v15;
  char *v16;
  std::basic_string<char16_t> *v17;
  __int128 v18;
  uint64_t *v19;

  a1[1] = 0;
  v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    v5 = a2;
    v6 = &a2[2 * a3];
    while (1)
    {
      v7 = a1[1];
      v8 = v4;
      if (*a1 != v4)
      {
        v9 = a1[1];
        v10 = v4;
        if (v7)
        {
          do
          {
            v8 = v9;
            v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            v8 = (uint64_t *)v10[2];
            v11 = *v8 == (_QWORD)v10;
            v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break;
      }
      v12 = (char **)v4;
      v13 = (char **)v4;
      if (!v7)
        goto LABEL_19;
      v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        v12 = (char **)v8;
LABEL_19:
        v16 = (char *)operator new(0x40uLL);
        v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((_QWORD *)v5 + 1));
        }
        else
        {
          v18 = *v5;
          *((_QWORD *)v16 + 6) = *((_QWORD *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(_QWORD *)v16 = 0;
        *((_QWORD *)v16 + 1) = 0;
        *((_QWORD *)v16 + 2) = v12;
        *v13 = v16;
        v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6)
        return a1;
    }
    v12 = (char **)v4;
    v13 = (char **)v4;
    if (v7)
    {
      v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          v12 = (char **)v14;
          v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break;
          v14 = *v12;
          v13 = v12;
          if (!*v12)
            goto LABEL_19;
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5))
          goto LABEL_25;
        v13 = v12 + 1;
        v14 = v12[1];
        if (!v14)
          goto LABEL_19;
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1CB50DA0C(_Unwind_Exception *a1)
{
  void *v1;
  char **v2;

  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FrGrammarSynthesizer::Count>>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB50DA78(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::FrGrammarSynthesizer::getGender(unsigned __int16 *a1)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  uint64_t *v9;
  morphun::grammar::synthesis::GrammemeConstants *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t i;
  std::basic_string<char16_t> v17;
  int v18;
  std::basic_string<char16_t> v19;
  int v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  if ((v2 & 1) == 0
  {
    v11 = (morphun::grammar::synthesis::GrammemeConstants *)operator new();
    v12 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(v11);
    if (*(char *)(v12 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v17, *(const std::basic_string<char16_t>::value_type **)v12, *(_QWORD *)(v12 + 8));
    }
    else
    {
      v13 = *(_OWORD *)v12;
      v17.__r_.__value_.__r.__words[2] = *(_QWORD *)(v12 + 16);
      *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v13;
    }
    v18 = 1;
    v14 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE((morphun::grammar::synthesis::GrammemeConstants *)v12);
    if (*(char *)(v14 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v19, *(const std::basic_string<char16_t>::value_type **)v14, *(_QWORD *)(v14 + 8));
    }
    else
    {
      v15 = *(_OWORD *)v14;
      v19.__r_.__value_.__r.__words[2] = *(_QWORD *)(v14 + 16);
      *(_OWORD *)&v19.__r_.__value_.__l.__data_ = v15;
    }
    v20 = 2;
    std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FrGrammarSynthesizer::Gender>::map[abi:ne180100]((uint64_t **)v11, (__int128 *)&v17, 2);
    for (i = 0; i != -8; i -= 4)
    {
      if (SHIBYTE(v19.__r_.__value_.__r.__words[i + 2]) < 0)
        operator delete(*(void **)((char *)&v19.__r_.__value_.__l.__data_ + i * 8));
    }
    morphun::grammar::synthesis::FrGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap = (uint64_t)v11;
  }
  if (!a1)
    return 0;
  v3 = morphun::grammar::synthesis::FrGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FrGrammarSynthesizer::Gender>>(morphun::grammar::synthesis::FrGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap);
  v6 = *(_QWORD *)(v3 + 8);
  v4 = v3 + 8;
  v5 = v6;
  if (!v6)
    goto LABEL_10;
  v7 = v4;
  do
  {
    v8 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v5 + 32), a1);
    v9 = (uint64_t *)(v5 + 8);
    if (!v8)
    {
      v9 = (uint64_t *)v5;
      v7 = v5;
    }
    v5 = *v9;
  }
  while (*v9);
  if (v7 == v4 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v7 + 32)))
LABEL_10:
    v7 = v4;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FrGrammarSynthesizer::Gender>>(morphun::grammar::synthesis::FrGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v7)
    return 0;
  else
    return *(unsigned int *)(v7 + 56);
}

void sub_1CB50DC68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  uint64_t v14;

  if (a14 < 0)
    operator delete(__p);
  MEMORY[0x1D179D2EC](v14, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FrGrammarSynthesizer::Gender>::map[abi:ne180100](uint64_t **a1, __int128 *a2, uint64_t a3)
{
  uint64_t *v4;
  __int128 *v5;
  __int128 *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  BOOL v11;
  char **v12;
  char **v13;
  char *v14;
  unsigned __int16 *v15;
  char *v16;
  std::basic_string<char16_t> *v17;
  __int128 v18;
  uint64_t *v19;

  a1[1] = 0;
  v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    v5 = a2;
    v6 = &a2[2 * a3];
    while (1)
    {
      v7 = a1[1];
      v8 = v4;
      if (*a1 != v4)
      {
        v9 = a1[1];
        v10 = v4;
        if (v7)
        {
          do
          {
            v8 = v9;
            v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            v8 = (uint64_t *)v10[2];
            v11 = *v8 == (_QWORD)v10;
            v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break;
      }
      v12 = (char **)v4;
      v13 = (char **)v4;
      if (!v7)
        goto LABEL_19;
      v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        v12 = (char **)v8;
LABEL_19:
        v16 = (char *)operator new(0x40uLL);
        v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((_QWORD *)v5 + 1));
        }
        else
        {
          v18 = *v5;
          *((_QWORD *)v16 + 6) = *((_QWORD *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(_QWORD *)v16 = 0;
        *((_QWORD *)v16 + 1) = 0;
        *((_QWORD *)v16 + 2) = v12;
        *v13 = v16;
        v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6)
        return a1;
    }
    v12 = (char **)v4;
    v13 = (char **)v4;
    if (v7)
    {
      v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          v12 = (char **)v14;
          v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break;
          v14 = *v12;
          v13 = v12;
          if (!*v12)
            goto LABEL_19;
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5))
          goto LABEL_25;
        v13 = v12 + 1;
        v14 = v12[1];
        if (!v14)
          goto LABEL_19;
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1CB50DE8C(_Unwind_Exception *a1)
{
  void *v1;
  char **v2;

  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FrGrammarSynthesizer::Gender>>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB50DEF8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t *std::set<std::u16string_view>::set[abi:ne180100](uint64_t *a1, uint64_t a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = (uint64_t)(a1 + 1);
  std::set<std::u16string_view>::insert[abi:ne180100]<std::__tree_const_iterator<std::u16string_view,std::__tree_node<std::u16string_view,void *> *,long>>(a1, *(_QWORD **)a2, (_QWORD *)(a2 + 8));
  return a1;
}

void sub_1CB50DF48(_Unwind_Exception *a1)
{
  _QWORD **v1;

  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

uint64_t *std::set<std::u16string_view>::insert[abi:ne180100]<std::__tree_const_iterator<std::u16string_view,std::__tree_node<std::u16string_view,void *> *,long>>(uint64_t *result, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v4;
  uint64_t **v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  BOOL v9;

  if (a2 != a3)
  {
    v4 = a2;
    v5 = (uint64_t **)result;
    v6 = result + 1;
    do
    {
      result = std::__tree<std::u16string_view>::__emplace_hint_unique_key_args<std::u16string_view,std::u16string_view const&>(v5, v6, (unsigned __int16 *)v4[4], v4[5], (_OWORD *)v4 + 2);
      v7 = (_QWORD *)v4[1];
      if (v7)
      {
        do
        {
          v8 = v7;
          v7 = (_QWORD *)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          v8 = (_QWORD *)v4[2];
          v9 = *v8 == (_QWORD)v4;
          v4 = v8;
        }
        while (!v9);
      }
      v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

void morphun::tokenizer::dictionary::GermanicDecompounder::~GermanicDecompounder(char **this)
{
  char *v2;
  char *v3;

  morphun::dictionary::metadata::MarisaTrie<int>::~MarisaTrie((uint64_t)(this + 28));
  morphun::util::MemoryMappedFile::~MemoryMappedFile((morphun::util::MemoryMappedFile *)(this + 24));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(this[21]);
  v2 = this[17];
  if (v2)
  {
    this[18] = v2;
    operator delete(v2);
  }
  v3 = this[14];
  if (v3)
  {
    this[15] = v3;
    operator delete(v3);
  }
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(this[12]);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(this[9]);
}

void morphun::tokenizer::dictionary::GermanicDecompounder::analyze(int *a1, uint64_t *a2, uint64_t *a3, int a4, int a5, uint64_t **a6)
{
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  __n128 v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  unint64_t *v32;
  unint64_t v33;
  char *v34;
  __int128 v35;
  int64x2_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  unint64_t *v42;
  unint64_t v43;
  int v44;
  int v45;
  _QWORD *v46;
  __int128 v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  float v57;
  uint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  std::__shared_weak_count *v62;
  unint64_t *v63;
  unint64_t v64;
  float v65;
  uint64_t v66;
  uint64_t v67;
  std::__shared_weak_count *v68;
  unint64_t *v69;
  unint64_t v70;
  __n128 v71;
  unint64_t v72;
  unint64_t *v73;
  unint64_t v74;
  std::__shared_weak_count *v75;
  unint64_t *v76;
  unint64_t v77;
  unint64_t *v78;
  unint64_t v79;
  std::__shared_weak_count *v80;
  unint64_t *v81;
  unint64_t v82;
  std::__shared_weak_count *v83;
  unint64_t *v84;
  unint64_t v85;
  std::__shared_weak_count *v86;
  unint64_t *v87;
  unint64_t v88;
  morphun::exception::NullPointerException *exception;
  uint64_t v90;
  int v91;
  int v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98[2];
  __int128 v99;
  __int128 v100;
  __int128 v101;
  uint64_t v102;
  std::__shared_weak_count *v103;
  uint64_t v104[3];

  v12 = *a3;
  v13 = (std::__shared_weak_count *)a2[1];
  v104[0] = *a2;
  v104[1] = (uint64_t)v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v15 = __ldxr(p_shared_owners);
    while (__stxr(v15 + 1, p_shared_owners));
    v16.n128_f32[0] = morphun::tokenizer::dictionary::Segment::tie(v12, v104);
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v13->__on_zero_shared)(v13, v16);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  else
  {
    morphun::tokenizer::dictionary::Segment::tie(v12, v104);
  }
  if (!a6)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  v19 = a6[1];
  v18 = (unint64_t)a6[2];
  if ((unint64_t)v19 >= v18)
  {
    v24 = *a6;
    v25 = ((char *)v19 - (char *)*a6) >> 4;
    v26 = v25 + 1;
    if ((unint64_t)(v25 + 1) >> 60)
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    v27 = v18 - (_QWORD)v24;
    if (v27 >> 3 > v26)
      v26 = v27 >> 3;
    if ((unint64_t)v27 >= 0x7FFFFFFFFFFFFFF0)
      v28 = 0xFFFFFFFFFFFFFFFLL;
    else
      v28 = v26;
    if (v28 >> 60)
      std::__throw_bad_array_new_length[abi:ne180100]();
    v29 = (char *)operator new(16 * v28);
    v30 = &v29[16 * v25];
    v31 = *(_OWORD *)a3;
    *(_OWORD *)v30 = *(_OWORD *)a3;
    if (*((_QWORD *)&v31 + 1))
    {
      v32 = (unint64_t *)(*((_QWORD *)&v31 + 1) + 8);
      do
        v33 = __ldxr(v32);
      while (__stxr(v33 + 1, v32));
      v24 = *a6;
      v19 = a6[1];
    }
    if (v19 == v24)
    {
      v36 = vdupq_n_s64((unint64_t)v19);
      v34 = &v29[16 * v25];
    }
    else
    {
      v34 = &v29[16 * v25];
      do
      {
        v35 = *((_OWORD *)v19 - 1);
        v19 -= 2;
        *((_OWORD *)v34 - 1) = v35;
        v34 -= 16;
        *v19 = 0;
        v19[1] = 0;
      }
      while (v19 != v24);
      v36 = *(int64x2_t *)a6;
    }
    v23 = (uint64_t *)(v30 + 16);
    *a6 = (uint64_t *)v34;
    a6[1] = (uint64_t *)(v30 + 16);
    a6[2] = (uint64_t *)&v29[16 * v28];
    v37 = v36.i64[1];
    v38 = (void *)v36.i64[0];
    while ((void *)v37 != v38)
      v37 = std::shared_ptr<morphun::analysis::util::AttributeImpl>::~shared_ptr[abi:ne180100](v37 - 16);
    if (v38)
      operator delete(v38);
  }
  else
  {
    *v19 = *a3;
    v20 = a3[1];
    v19[1] = v20;
    if (v20)
    {
      v21 = (unint64_t *)(v20 + 8);
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
    }
    v23 = v19 + 2;
  }
  a6[1] = v23;
  v39 = *a3;
  if (!*(_BYTE *)(*a3 + 55)
    && !*(_BYTE *)(v39 + 56)
    && *(float *)(v39 + 48) <= (float)a1[94]
    && *(_DWORD *)(v39 + 84) <= a1[91])
  {
    v94 = *(_QWORD *)(v39 + 8);
    v95 = *(_QWORD *)v39;
    v102 = 0;
    v103 = 0;
    v101 = 0uLL;
    v40 = *(_QWORD *)(v39 + 40);
    if (!v40)
      LODWORD(v40) = *(_DWORD *)(v39 + 20) - *(_DWORD *)(v39 + 24);
    v41 = a1[93];
    if (v41 <= (int)v40 - v41)
    {
      v93 = (uint64_t)(a1 + 46);
      v92 = v40 - v41;
      v91 = v40 - v41 + 1;
      v90 = (uint64_t)(a1 + 74);
      while (1)
      {
        if (v41 >= a1[92])
        {
LABEL_119:
          v83 = (std::__shared_weak_count *)*((_QWORD *)&v101 + 1);
          if (*((_QWORD *)&v101 + 1))
          {
            v84 = (unint64_t *)(*((_QWORD *)&v101 + 1) + 8);
            do
              v85 = __ldaxr(v84);
            while (__stlxr(v85 - 1, v84));
            if (!v85)
            {
              ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
              std::__shared_weak_count::__release_weak(v83);
            }
          }
          goto LABEL_124;
        }
        if ((_QWORD)v101)
        {
          v100 = v101;
          if (*((_QWORD *)&v101 + 1))
          {
            v42 = (unint64_t *)(*((_QWORD *)&v101 + 1) + 8);
            do
              v43 = __ldxr(v42);
            while (__stxr(v43 + 1, v42));
          }
        }
        else
        {
          v45 = *(_DWORD *)(*a3 + 24);
          v44 = *(_DWORD *)(*a3 + 28);
          v46 = operator new(0x88uLL);
          v46[2] = 0;
          *v46 = &off_1E8673AA8;
          v46[1] = 0;
          *(_QWORD *)&v100 = morphun::tokenizer::dictionary::Segment::Segment((uint64_t)(v46 + 3), (uint64_t)a1, v93, v95, v94, a4, v41 + a4, v45, v44);
          *((_QWORD *)&v100 + 1) = v46;
        }
        v47 = 0uLL;
        if (v41 < v92)
        {
          std::allocate_shared[abi:ne180100]<morphun::tokenizer::dictionary::Segment,std::allocator<morphun::tokenizer::dictionary::Segment>,morphun::tokenizer::dictionary::DictionaryTokenizerConfig const&,morphun::tokenizer::trie::SerializedTrie const&,std::u16string_view &,int &,int &,void>((uint64_t *)&v99, (uint64_t)a1, v93, v95, v94, a4, v41 + a4 + 1);
          v47 = v99;
        }
        v99 = 0uLL;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v101 + 1);
        v101 = v47;
        if (v48)
        {
          v49 = (unint64_t *)&v48->__shared_owners_;
          do
            v50 = __ldaxr(v49);
          while (__stlxr(v50 - 1, v49));
          if (!v50)
          {
            ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
            std::__shared_weak_count::__release_weak(v48);
          }
        }
        v51 = (std::__shared_weak_count *)*((_QWORD *)&v99 + 1);
        if (*((_QWORD *)&v99 + 1))
        {
          v52 = (unint64_t *)(*((_QWORD *)&v99 + 1) + 8);
          do
            v53 = __ldaxr(v52);
          while (__stlxr(v53 - 1, v52));
          if (!v53)
          {
            ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
            std::__shared_weak_count::__release_weak(v51);
          }
        }
        std::allocate_shared[abi:ne180100]<morphun::tokenizer::dictionary::Segment,std::allocator<morphun::tokenizer::dictionary::Segment>,morphun::tokenizer::dictionary::DictionaryTokenizerConfig const&,morphun::tokenizer::trie::SerializedTrie const&,std::u16string_view &,int &,int &,void>((uint64_t *)&v99, (uint64_t)a1, v93, v95, v94, v41 + a4, *(_DWORD *)(*a3 + 8));
        v54 = v100;
        v55 = v102;
        v56 = v101;
        npc<morphun::tokenizer::dictionary::Segment>(v100);
        if (!a5)
          break;
        if (!*(_BYTE *)(v54 + 54))
          goto LABEL_68;
LABEL_73:
        std::shared_ptr<morphun::tokenizer::dictionary::Segment>::operator=[abi:ne180100](&v102, v100, *((uint64_t *)&v100 + 1));
        v59 = (std::__shared_weak_count *)*((_QWORD *)&v99 + 1);
        if (*((_QWORD *)&v99 + 1))
        {
          v60 = (unint64_t *)(*((_QWORD *)&v99 + 1) + 8);
          do
            v61 = __ldaxr(v60);
          while (__stlxr(v61 - 1, v60));
          if (!v61)
          {
            ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
            std::__shared_weak_count::__release_weak(v59);
          }
        }
        v62 = (std::__shared_weak_count *)*((_QWORD *)&v100 + 1);
        if (*((_QWORD *)&v100 + 1))
        {
          v63 = (unint64_t *)(*((_QWORD *)&v100 + 1) + 8);
          do
            v64 = __ldaxr(v63);
          while (__stlxr(v64 - 1, v63));
          if (!v64)
          {
            ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
            std::__shared_weak_count::__release_weak(v62);
          }
        }
        if (++v41 == v91)
          goto LABEL_119;
      }
      if ((*(_DWORD *)(v54 + 28) & 0x80000000) != 0)
        morphun::tokenizer::dictionary::SegmentFuger::detachFugenelement(v90, v54);
LABEL_68:
      npc<morphun::tokenizer::dictionary::Segment>(v54);
      v57 = *(float *)(v54 + 48);
      npc<morphun::tokenizer::dictionary::Segment>(v54);
      v58 = *(_QWORD *)(v54 + 40);
      if (!v58)
        LODWORD(v58) = *(_DWORD *)(v54 + 20) - *(_DWORD *)(v54 + 24);
      if ((int)v58 >= a1[83] || (npc<morphun::tokenizer::dictionary::Segment>(v54), *(_BYTE *)(v54 + 52)))
      {
        npc<morphun::tokenizer::dictionary::Segment>(v54);
        if (!*(_BYTE *)(v54 + 53))
        {
          if (v57 >= (float)a1[84]
            || v55
            && v56
            && (v65 = (float)a1[82], v57 >= (float)(*(float *)(v55 + 48) + v65))
            && v57 >= (float)(*(float *)(v56 + 48) + v65))
          {
            v66 = v99;
            morphun::tokenizer::dictionary::SegmentFuger::detachFugenelement(v90, v99);
            npc<morphun::tokenizer::dictionary::Segment>(v66);
            v67 = *(_QWORD *)(v66 + 40);
            if (!v67)
              LODWORD(v67) = *(_DWORD *)(v66 + 20) - *(_DWORD *)(v66 + 24);
            if ((int)v67 >= a1[83] || (npc<morphun::tokenizer::dictionary::Segment>(v66), *(_BYTE *)(v66 + 52)))
            {
              npc<morphun::tokenizer::dictionary::Segment>(v66);
              if (!*(_BYTE *)(v66 + 53))
              {
                v68 = (std::__shared_weak_count *)a2[1];
                v98[0] = *a2;
                v98[1] = (uint64_t)v68;
                if (v68)
                {
                  v69 = (unint64_t *)&v68->__shared_owners_;
                  do
                    v70 = __ldxr(v69);
                  while (__stxr(v70 + 1, v69));
                  v71.n128_f32[0] = morphun::tokenizer::dictionary::Segment::tie(v54, v98);
                  do
                    v72 = __ldaxr(v69);
                  while (__stlxr(v72 - 1, v69));
                  if (!v72)
                  {
                    ((void (*)(std::__shared_weak_count *, __n128))v68->__on_zero_shared)(v68, v71);
                    std::__shared_weak_count::__release_weak(v68);
                  }
                }
                else
                {
                  v71.n128_f32[0] = morphun::tokenizer::dictionary::Segment::tie(v54, v98);
                }
                v97 = v100;
                if (*((_QWORD *)&v100 + 1))
                {
                  v73 = (unint64_t *)(*((_QWORD *)&v100 + 1) + 8);
                  do
                    v74 = __ldxr(v73);
                  while (__stxr(v74 + 1, v73));
                }
                v75 = (std::__shared_weak_count *)*((_QWORD *)&v99 + 1);
                v96 = v99;
                if (*((_QWORD *)&v99 + 1))
                {
                  v76 = (unint64_t *)(*((_QWORD *)&v99 + 1) + 8);
                  do
                    v77 = __ldxr(v76);
                  while (__stxr(v77 + 1, v76));
                }
                morphun::tokenizer::dictionary::GermanicDecompounder::analyze(a1, &v97, &v96, (v41 + a4), 0, a6, v71);
                if (v75)
                {
                  v78 = (unint64_t *)&v75->__shared_owners_;
                  do
                    v79 = __ldaxr(v78);
                  while (__stlxr(v79 - 1, v78));
                  if (!v79)
                  {
                    ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
                    std::__shared_weak_count::__release_weak(v75);
                  }
                }
                v80 = (std::__shared_weak_count *)*((_QWORD *)&v97 + 1);
                if (*((_QWORD *)&v97 + 1))
                {
                  v81 = (unint64_t *)(*((_QWORD *)&v97 + 1) + 8);
                  do
                    v82 = __ldaxr(v81);
                  while (__stlxr(v82 - 1, v81));
                  if (!v82)
                  {
                    ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
                    std::__shared_weak_count::__release_weak(v80);
                  }
                }
              }
            }
          }
        }
      }
      goto LABEL_73;
    }
LABEL_124:
    v86 = v103;
    if (v103)
    {
      v87 = (unint64_t *)&v103->__shared_owners_;
      do
        v88 = __ldaxr(v87);
      while (__stlxr(v88 - 1, v87));
      if (!v88)
      {
        ((void (*)(std::__shared_weak_count *))v86->__on_zero_shared)(v86);
        std::__shared_weak_count::__release_weak(v86);
      }
    }
  }
}

void sub_1CB50E794(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,char a25,uint64_t a26,char a27)
{
  uint64_t v27;

  std::shared_ptr<morphun::analysis::util::AttributeImpl>::~shared_ptr[abi:ne180100]((uint64_t)&a17);
  std::shared_ptr<morphun::analysis::util::AttributeImpl>::~shared_ptr[abi:ne180100]((uint64_t)&a19);
  std::shared_ptr<morphun::analysis::util::AttributeImpl>::~shared_ptr[abi:ne180100]((uint64_t)&a23);
  std::shared_ptr<morphun::analysis::util::AttributeImpl>::~shared_ptr[abi:ne180100]((uint64_t)&a25);
  std::shared_ptr<morphun::analysis::util::AttributeImpl>::~shared_ptr[abi:ne180100]((uint64_t)&a27);
  std::shared_ptr<morphun::analysis::util::AttributeImpl>::~shared_ptr[abi:ne180100](v27 - 136);
  _Unwind_Resume(a1);
}

uint64_t std::allocate_shared[abi:ne180100]<morphun::tokenizer::dictionary::Segment,std::allocator<morphun::tokenizer::dictionary::Segment>,morphun::tokenizer::dictionary::DictionaryTokenizerConfig const&,morphun::tokenizer::trie::SerializedTrie const&,std::u16string_view &,int &,int &,void>(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, int a6, int a7)
{
  _QWORD *v14;
  uint64_t result;

  v14 = operator new(0x88uLL);
  v14[1] = 0;
  v14[2] = 0;
  *v14 = &off_1E8673AA8;
  result = morphun::tokenizer::dictionary::Segment::Segment((uint64_t)(v14 + 3), a2, a3, a4, a5, a6, a7, a6, -1);
  *a1 = result;
  a1[1] = (uint64_t)v14;
  return result;
}

void sub_1CB50E8AC(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<morphun::tokenizer::dictionary::Segment>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_1E8673AA8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<morphun::tokenizer::dictionary::Segment>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_1E8673AA8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t std::__shared_ptr_emplace<morphun::tokenizer::dictionary::Segment>::__on_zero_shared(uint64_t a1)
{
  return std::shared_ptr<morphun::analysis::util::AttributeImpl>::~shared_ptr[abi:ne180100](a1 + 88);
}

void morphun::tokenizer::TokenExtractor::~TokenExtractor(morphun::tokenizer::TokenExtractor *this)
{
}

{
  JUMPOUT(0x1D179D2ECLL);
}

char *morphun::tokenizer::TokenExtractor::createIterator()
{
  _QWORD *v0;

  v0 = (_QWORD *)operator new();
  morphun::tokenizer::ICUTokenExtractorIterator::ICUTokenExtractorIterator((uint64_t)v0);
  return (char *)v0 + *(_QWORD *)(*v0 - 64);
}

void sub_1CB50E9A4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10A1C4047070A01);
  _Unwind_Resume(a1);
}

uint64_t morphun::tokenizer::TokenExtractor::normalize(uint64_t a1, uint64_t a2, const UChar *a3, int32_t a4)
{
  return morphun::util::StringViewUtils::lowercase(a2, a3, a4, a1 + 8);
}

void morphun::tokenizer::TokenExtractor::~TokenExtractor(morphun::tokenizer::TokenExtractor *this, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  URegularExpression **v5;

  v3 = *a2;
  *(_QWORD *)this = *a2;
  *(_QWORD *)((char *)this + *(_QWORD *)(v3 - 40)) = a2[1];
  v4 = *((_QWORD *)this + 17);
  if (v4)
  {
    std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*(_QWORD **)(v4 + 8));
    MEMORY[0x1D179D2EC](v4, 0x1020C4062D53EE8);
  }
  v5 = (URegularExpression **)*((_QWORD *)this + 18);
  if (v5)
  {
    icu4cxx::RegularExpression::~RegularExpression(v5);
    MEMORY[0x1D179D2EC]();
  }
}

void icu4cxx::RegularExpression::~RegularExpression(URegularExpression **this)
{
  if (*((_BYTE *)this + 8))
    uregex_close(*this);
}

BOOL morphun::tokenizer::TokenExtractor::isIndivisibleWordNormalized(uint64_t a1, uint64_t a2, const UChar *a3, uint64_t a4)
{
  const UChar *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int16 *v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  BOOL v15;
  _BOOL8 result;

  v5 = a3;
  v6 = morphun::util::StringViewUtils::lowercase(a1, a3, a4, a2);
  v7 = *(unsigned __int8 *)(v6 + 23);
  if ((v7 & 0x80u) == 0)
    v8 = (unsigned __int16 *)v6;
  else
    v8 = *(unsigned __int16 **)v6;
  if ((v7 & 0x80u) != 0)
    v7 = *(_QWORD *)(v6 + 8);
  if (v7 != a4)
    return 0;
  if (!v7)
    return 1;
  v9 = v7 - 1;
  do
  {
    v11 = *v8++;
    v10 = v11;
    v13 = *v5++;
    v12 = v13;
    v15 = v9-- != 0;
    result = v12 == v10;
  }
  while (v12 == v10 && v15);
  return result;
}

uint64_t morphun::tokenizer::TokenExtractor::createWordsToNotSplit(uint64_t a1, uint64_t a2, uint64_t (*a3)(void **, uint64_t, _WORD *, unint64_t))
{
  _QWORD *v6;
  char *v7;
  void *p_p;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  _WORD *String;
  uint64_t v13;
  uint64_t v14;
  _WORD *v17;
  unint64_t v18;
  void *v19;
  unint64_t v20;
  _QWORD *exception;
  const std::basic_string<char16_t>::value_type *v23;
  std::basic_string<char16_t>::size_type v24;
  _QWORD v25[2];
  unsigned __int8 v26;
  std::basic_string<char16_t> v27;
  std::basic_string<char16_t> v28;
  __int128 v29;
  void *__p;
  unint64_t v31;
  const char *v32;
  uint64_t v33;
  _WORD *v34;
  uint64_t v35;
  int v36;
  int v37;
  void *v38[2];
  uint64_t v39;
  const void *__dst[2];
  unsigned __int8 v41;

  v6 = std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(a2, (unsigned __int16 *)"t", 0x1CuLL);
  if ((_QWORD *)(a2 + 8) == v6)
    return 0;
  v7 = (char *)v6[6];
  if (!*(_WORD *)v7)
    return 0;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, v7);
  if (morphun::util::gLogLevel <= 1)
  {
    std::operator+<char16_t>((uint64_t)&__p, L"Loading non-decompound list from ", __dst);
    if (morphun::util::gLogLevel <= 1)
    {
      if (SHIBYTE(v32) >= 0)
        p_p = &__p;
      else
        p_p = __p;
      morphun::util::logToTopOfStackLogger((morphun::util *)1, 0, (uint64_t)p_p);
    }
    if (SHIBYTE(v32) < 0)
      operator delete(__p);
  }
  v38[0] = 0;
  v38[1] = 0;
  v39 = 0;
  v9 = operator new();
  *(_QWORD *)(v9 + 16) = 0;
  *(_QWORD *)(v9 + 8) = 0;
  *(_QWORD *)v9 = v9 + 8;
  if ((v41 & 0x80u) == 0)
    v10 = (uint64_t *)__dst;
  else
    v10 = (uint64_t *)__dst[0];
  if ((v41 & 0x80u) == 0)
    v11 = v41;
  else
    v11 = (unint64_t)__dst[1];
  String = (_WORD *)morphun::resources::DataResource::getString(v10, v11, 0);
  if (*String)
  {
    v13 = 0;
    do
      v14 = v13 + 1;
    while (String[++v13]);
  }
  else
  {
    v14 = 0;
  }
  __p = 0;
  v31 = 0;
  v32 = "\n";
  v33 = 1;
  v34 = String;
  v35 = v14;
  v36 = v14;
  v37 = 0;
  if ((int)v14 >= 1)
    morphun::util::DelimitedStringIterator::getNext((UChar *)&__p);
  while (v37 < v36 || v31 != 0)
  {
    v17 = (_WORD *)morphun::util::StringViewUtils::trim((uint64_t)__p, v31);
    v19 = v17;
    v20 = v18;
    *(_QWORD *)&v29 = v17;
    *((_QWORD *)&v29 + 1) = v18;
    if (v18 && *v17 != 35)
    {
      if ((a3(v38, a1, v17, v18) & 1) == 0)
      {
        exception = __cxa_allocate_exception(0x38uLL);
        std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v27, (char *)L"String should already be normalized: ");
        std::basic_string<char16_t>::basic_string<std::u16string_view,0>(v25, v19, v20);
        if ((v26 & 0x80u) == 0)
          v23 = (const std::basic_string<char16_t>::value_type *)v25;
        else
          v23 = (const std::basic_string<char16_t>::value_type *)v25[0];
        if ((v26 & 0x80u) == 0)
          v24 = v26;
        else
          v24 = v25[1];
        std::basic_string<char16_t>::append(&v27, v23, v24);
        v28 = v27;
        memset(&v27, 0, sizeof(v27));
        morphun::exception::Throwable::Throwable((uint64_t)exception, (__int128 *)&v28);
        *exception = &off_1E8673220;
      }
      std::__tree<std::u16string_view>::__emplace_unique_key_args<std::u16string_view,std::u16string_view const&>((uint64_t **)v9, (unsigned __int16 *)v19, v20, &v29);
    }
    morphun::util::DelimitedStringIterator::operator++((morphun::util::DelimitedStringIterator *)&__p);
  }
  if (SHIBYTE(v39) < 0)
    operator delete(v38[0]);
  if ((char)v41 < 0)
    operator delete((void *)__dst[0]);
  return v9;
}

void sub_1CB50EDF0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  __break(1u);
}

void sub_1CB50EF34(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a25 < 0)
    operator delete(__p);
  __cxa_end_catch();
  JUMPOUT(0x1CB50EF58);
}

uint64_t *morphun::tokenizer::TokenExtractor::TokenExtractor(uint64_t *a1, uint64_t *a2, morphun::util::ULocale *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  std::basic_string<char16_t>::size_type v11;
  uint64_t v12;
  uint64_t v13;
  std::basic_string<char16_t> *p_p;
  int32_t v15;
  _QWORD *exception;
  _OWORD *v18;
  std::basic_string<char16_t> __dst;
  std::basic_string<char16_t> v20;
  std::basic_string<char16_t> __p;

  v8 = *a2;
  *a1 = *a2;
  *(uint64_t *)((char *)a1 + *(_QWORD *)(v8 - 40)) = a2[1];
  morphun::util::ULocale::ULocale((morphun::util::ULocale *)(a1 + 1), a3);
  a1[17] = a5;
  a1[18] = 0;
  if (a5 && !*(_QWORD *)(a5 + 16))
  {
    exception = __cxa_allocate_exception(0x38uLL);
    v18 = operator new(0x30uLL);
    __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v18;
    *(_OWORD *)&__p.__r_.__value_.__r.__words[1] = xmmword_1CB5DD540;
    *v18 = xmmword_1CB73D216;
    v18[1] = unk_1CB73D226;
    *(_OWORD *)((char *)v18 + 28) = unk_1CB73D232;
    *((_WORD *)v18 + 22) = 0;
    morphun::exception::Throwable::Throwable((uint64_t)exception, (__int128 *)&__p);
    *exception = &off_1E8673120;
  }
  v9 = std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(a4, L"tokenizer.decompound", 0x14uLL);
  if ((_QWORD *)(a4 + 8) != v9)
  {
    v10 = (char *)v9[6];
    if (*(_WORD *)v10)
    {
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, v10);
      std::basic_string<char16_t>::insert(&__dst, (std::basic_string<char16_t>::size_type)L"^(", (const std::basic_string<char16_t>::value_type *)2, v11);
      v20 = __dst;
      memset(&__dst, 0, sizeof(__dst));
      std::basic_string<char16_t>::append(&v20, (const std::basic_string<char16_t>::value_type *)")", 2uLL);
      __p = v20;
      memset(&v20, 0, sizeof(v20));
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__dst.__r_.__value_.__l.__data_);
      v12 = operator new();
      v13 = v12;
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        p_p = &__p;
      else
        p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v15 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        v15 = __p.__r_.__value_.__r.__words[1];
      icu4cxx::RegularExpression::RegularExpression(v12, (UChar *)p_p, v15, 2u);
      a1[18] = v13;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  morphun::tokenizer::TokenUtil::isSignificant((unsigned __int16 *)"A", 1uLL);
  return a1;
}

void sub_1CB50F15C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  void **v28;
  void *v29;
  int v30;

  if (a28 < 0)
  {
    operator delete(__p);
    if ((v30 & 1) == 0)
    {
LABEL_6:
      _Unwind_Resume(a1);
    }
  }
  else if (!v30)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v29);
  goto LABEL_6;
}

uint64_t icu4cxx::RegularExpression::RegularExpression(uint64_t a1, UChar *pattern, int32_t patternLength, uint32_t flags)
{
  UErrorCode v5;
  morphun::exception::ICUException *exception;
  UErrorCode status;

  *(_BYTE *)(a1 + 8) = 1;
  status = U_ZERO_ERROR;
  *(_QWORD *)a1 = uregex_open(pattern, patternLength, flags, 0, &status);
  v5 = status;
  if (status >= U_ILLEGAL_ARGUMENT_ERROR)
  {
    exception = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::ICUException::ICUException(exception, v5);
  }
  return a1;
}

void sub_1CB50F29C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::tokenizer::TokenExtractor::getRequiredKeyAsPath(uint64_t a1, morphun::util::ResourceLocator *a2, uint64_t a3, unsigned __int16 *a4, unint64_t a5)
{
  _QWORD *v10;
  _QWORD *v11;
  _WORD *v12;
  const std::basic_string<char16_t>::value_type *v13;
  std::basic_string<char16_t>::size_type v14;
  const std::basic_string<char16_t>::value_type *v15;
  uint64_t v16;
  std::basic_string<char16_t>::size_type v17;
  int v19;
  uint64_t v20;
  uint64_t v21;
  std::basic_string<char16_t> *p_dst;
  void **v23;
  _QWORD *exception;
  stat v25;
  void *v26[2];
  unsigned __int8 v27;
  std::basic_string<char16_t> __dst;

  v10 = std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(a3, a4, a5);
  if ((_QWORD *)(a3 + 8) == v10 || (v11 = v10, (v12 = (_WORD *)v10[6]) == 0) || !*v12)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string<std::u16string_view,0>(&__dst, a4, a5);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v25, &__dst, (std::basic_string<char16_t>::value_type *)" ");
    morphun::exception::Throwable::Throwable((uint64_t)exception, (__int128 *)&v25.st_dev);
    *exception = &off_1E8673220;
  }
  morphun::util::ResourceLocator::getRootForLocale(a2, &__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v26, (char *)L"/tokenizer");
  if ((v27 & 0x80u) == 0)
    v13 = (const std::basic_string<char16_t>::value_type *)v26;
  else
    v13 = (const std::basic_string<char16_t>::value_type *)v26[0];
  if ((v27 & 0x80u) == 0)
    v14 = v27;
  else
    v14 = (std::basic_string<char16_t>::size_type)v26[1];
  std::basic_string<char16_t>::append(&__dst, v13, v14);
  *(_OWORD *)&v25.st_dev = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
  *(_QWORD *)&v25.st_uid = *((_QWORD *)&__dst.__r_.__value_.__l + 2);
  memset(&__dst, 0, sizeof(__dst));
  v15 = (const std::basic_string<char16_t>::value_type *)v11[6];
  if (*v15)
  {
    v16 = 0;
    do
      v17 = v16 + 1;
    while (v15[++v16]);
  }
  else
  {
    v17 = 0;
  }
  std::basic_string<char16_t>::append((std::basic_string<char16_t> *)&v25, v15, v17);
  *(_OWORD *)a1 = *(_OWORD *)&v25.st_dev;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)&v25.st_uid;
  memset(&v25, 0, 24);
  if ((char)v27 < 0)
    operator delete(v26[0]);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  memset(&__dst, 0, sizeof(__dst));
  v19 = *(char *)(a1 + 23);
  if (v19 >= 0)
    v20 = a1;
  else
    v20 = *(_QWORD *)a1;
  if (v19 >= 0)
    LODWORD(v21) = *(unsigned __int8 *)(a1 + 23);
  else
    v21 = *(_QWORD *)(a1 + 8);
  morphun::util::StringViewUtils::convert((std::string *)&__dst, v20, v21);
  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_dst = &__dst;
  else
    p_dst = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
  if (stat((const char *)p_dst, &v25))
  {
    std::operator+<char16_t>((uint64_t)v26, "P", (const void **)a1);
    if (morphun::util::gLogLevel <= 4)
    {
      if ((v27 & 0x80u) == 0)
        v23 = v26;
      else
        v23 = (void **)v26[0];
      morphun::util::logToTopOfStackLogger((morphun::util *)4, 0, (uint64_t)v23);
    }
    if ((char)v27 < 0)
      operator delete(v26[0]);
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
}

void sub_1CB50F510(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  uint64_t v14;
  uint64_t v15;

  if (*(char *)(v15 - 89) < 0)
    operator delete(*(void **)(v15 - 112));
  if (*(char *)(v15 - 65) < 0)
    operator delete(*(void **)(v15 - 88));
  if (*(char *)(v14 + 23) < 0)
    operator delete(*(void **)v14);
  _Unwind_Resume(exception_object);
}

void morphun::exception::NullPointerException::~NullPointerException(std::exception *this)
{
  morphun::exception::Throwable::~Throwable(this);
  JUMPOUT(0x1D179D2ECLL);
}

morphun::exception::NullPointerException *morphun::exception::NullPointerException::NullPointerException(morphun::exception::NullPointerException *this)
{
  void *__p[2];
  char v4;

  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"NullPointerException");
  morphun::exception::Throwable::Throwable((uint64_t)this, (__int128 *)__p);
  *(_QWORD *)this = &off_1E8673000;
  if (v4 < 0)
    operator delete(__p[0]);
  *(_QWORD *)this = &off_1E8673090;
  return this;
}

void sub_1CB50F690(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *morphun::exception::NullPointerException::NullPointerException(uint64_t a1, __int128 *a2)
{
  _QWORD *result;

  result = (_QWORD *)morphun::exception::Throwable::Throwable(a1, a2);
  *result = &off_1E8673090;
  return result;
}

{
  _QWORD *result;

  result = (_QWORD *)morphun::exception::Throwable::Throwable(a1, a2);
  *result = &off_1E8673090;
  return result;
}

void morphun::grammar::synthesis::FrGrammarSynthesizer_CountLookupFunction::~FrGrammarSynthesizer_CountLookupFunction(morphun::grammar::synthesis::FrGrammarSynthesizer_CountLookupFunction *this)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  *(_QWORD *)this = &off_1E866E9E0;
  v2 = *((_QWORD *)this + 26);
  *((_QWORD *)this + 26) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
  *(_QWORD *)this = &off_1E865CEF8;
  v3 = (void *)*((_QWORD *)this + 22);
  if (v3)
  {
    *((_QWORD *)this + 23) = v3;
    operator delete(v3);
  }
  v4 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  *((_QWORD *)this + 1) = &off_1E8671C00;
}

{
  morphun::grammar::synthesis::FrGrammarSynthesizer_CountLookupFunction::~FrGrammarSynthesizer_CountLookupFunction(this);
  JUMPOUT(0x1D179D2ECLL);
}

void morphun::grammar::synthesis::FrGrammarSynthesizer_CountLookupFunction::determine(uint64_t *a1@<X0>, uint64_t a2@<X1>, std::basic_string<char16_t> *a3@<X8>)
{
  _BOOL4 v6;
  uint64_t v7;
  char v8;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t>::size_type v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  std::basic_string<char16_t>::size_type v17;
  uint64_t v18;
  int v19;
  std::basic_string<char16_t> *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  morphun::grammar::synthesis::GrammemeConstants *CombinedBinaryType;
  BOOL v25;
  std::basic_string<char16_t>::size_type v26;
  std::basic_string<char16_t> *v27;
  int v28;
  uint64_t v29;
  morphun::exception::NullPointerException *exception;
  morphun::exception::NullPointerException *v31;
  __n128 __p;
  char v33;
  char v34;
  std::basic_string<char16_t> v35;
  void *v36[2];
  int64_t v37;
  unsigned __int8 v38;

  morphun::grammar::synthesis::FrGrammarSynthesizer_CountLookupFunction::determineWord((uint64_t)v36, a1, a2);
  if (v38)
  {
    if ((SHIBYTE(v37) & 0x80000000) == 0)
    {
      *(_OWORD *)&a3->__r_.__value_.__l.__data_ = *(_OWORD *)v36;
      a3->__r_.__value_.__r.__words[2] = v37;
      return;
    }
    std::basic_string<char16_t>::__init_copy_ctor_external(a3, (const std::basic_string<char16_t>::value_type *)v36[0], (std::basic_string<char16_t>::size_type)v36[1]);
    v6 = 1;
    goto LABEL_56;
  }
  if (*(char *)(a2 + 23) < 0)
    std::basic_string<char16_t>::__init_copy_ctor_external(&v35, *(const std::basic_string<char16_t>::value_type **)a2, *(_QWORD *)(a2 + 8));
  else
    v35 = *(std::basic_string<char16_t> *)a2;
  v7 = HIBYTE(v35.__r_.__value_.__r.__words[2]);
  v8 = HIBYTE(v35.__r_.__value_.__r.__words[2]);
  size = v35.__r_.__value_.__l.__size_;
  if ((v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v10 = HIBYTE(v35.__r_.__value_.__r.__words[2]);
  else
    v10 = v35.__r_.__value_.__l.__size_;
  if (v10)
  {
    v11 = a1[26];
    if (!v11
      || (v12 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(_QWORD *)v11 + 24))(v11, &v35),
          (v13 = v12) == 0))
    {
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
    v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 104))(v12);
    if (!v14 || (v15 = *(_QWORD *)(v14 + 80)) == 0)
    {
      v31 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(v31);
    }
    std::basic_string<char16_t>::operator=(&v35, (const std::basic_string<char16_t> *)(v15 + 16));
    v17 = HIBYTE(v35.__r_.__value_.__r.__words[2]);
    if ((v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v17 = v35.__r_.__value_.__l.__size_;
    v18 = *(unsigned __int8 *)(a2 + 23);
    if ((v18 & 0x80u) != 0)
      v18 = *(_QWORD *)(a2 + 8);
    if (v17 != v18)
    {
      morphun::grammar::synthesis::FrGrammarSynthesizer_CountLookupFunction::determineWord((uint64_t)&__p, a1, (uint64_t)&v35);
      v16 = std::__optional_storage_base<std::basic_string<char16_t>,false>::__assign_from[abi:ne180100]<std::__optional_move_assign_base<std::basic_string<char16_t>,false>>((uint64_t)v36, &__p);
      if (v34 && v33 < 0)
        operator delete((void *)__p.n128_u64[0]);
      v19 = v38;
      if (v38)
      {
        if (SHIBYTE(v37) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(a3, (const std::basic_string<char16_t>::value_type *)v36[0], (std::basic_string<char16_t>::size_type)v36[1]);
        }
        else
        {
          *(_OWORD *)&a3->__r_.__value_.__l.__data_ = *(_OWORD *)v36;
          a3->__r_.__value_.__r.__words[2] = v37;
        }
        (*(void (**)(uint64_t))(*(_QWORD *)v13 + 16))(v13);
        goto LABEL_53;
      }
    }
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v13 + 16))(v13, v16);
    v7 = HIBYTE(v35.__r_.__value_.__r.__words[2]);
    size = v35.__r_.__value_.__l.__size_;
    v8 = HIBYTE(v35.__r_.__value_.__r.__words[2]);
  }
  if (v8 >= 0)
    v20 = &v35;
  else
    v20 = (std::basic_string<char16_t> *)v35.__r_.__value_.__r.__words[0];
  if (v8 >= 0)
    v21 = v7;
  else
    v21 = size;
  v22 = a1[27];
  v23 = a1[28];
  __p.n128_u64[0] = 0;
  CombinedBinaryType = (morphun::grammar::synthesis::GrammemeConstants *)morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v22, (uint64_t)&__p, (const UChar *)v20, v21);
  if (CombinedBinaryType)
    v25 = (__p.n128_u64[0] & v23) == v23;
  else
    v25 = 0;
  if (v25)
  {
    v26 = HIBYTE(v35.__r_.__value_.__r.__words[2]);
    if ((v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v26 = v35.__r_.__value_.__l.__size_;
    if (!v26)
      goto LABEL_47;
    v27 = &v35;
    if ((v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v27 = (std::basic_string<char16_t> *)v35.__r_.__value_.__r.__words[0];
    v28 = (unsigned __int16)v27->__r_.__value_.__s.__data_[v26 - 1];
    if (v28 == 120 || v28 == 115)
      v29 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(CombinedBinaryType);
    else
LABEL_47:
      v29 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(CombinedBinaryType);
    if (*(char *)(v29 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(a3, *(const std::basic_string<char16_t>::value_type **)v29, *(_QWORD *)(v29 + 8));
      v19 = 0;
    }
    else
    {
      v19 = 0;
      *(_OWORD *)&a3->__r_.__value_.__l.__data_ = *(_OWORD *)v29;
      a3->__r_.__value_.__r.__words[2] = *(_QWORD *)(v29 + 16);
    }
  }
  else
  {
    v19 = 0;
    a3->__r_.__value_.__r.__words[0] = 0;
    a3->__r_.__value_.__l.__size_ = 0;
    a3->__r_.__value_.__r.__words[2] = 0;
  }
LABEL_53:
  if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v35.__r_.__value_.__l.__data_);
  v6 = v37 < 0;
  if (v19)
  {
LABEL_56:
    if (v6)
      operator delete(v36[0]);
  }
}

void sub_1CB50FB04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  uint64_t v25;

  (*(void (**)(uint64_t))(*(_QWORD *)v25 + 16))(v25);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::FrGrammarSynthesizer_CountLookupFunction::determineWord(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  void *v6;
  int v7;
  int v8;
  const UChar *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  morphun::grammar::synthesis::GrammemeConstants *CombinedBinaryType;
  BOOL v14;
  int v15;
  const UChar *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  void *__p[2];
  uint64_t v31;
  uint64_t v32[4];
  void **v33;

  v3 = a3;
  morphun::dialog::DictionaryLookupFunction::determine((uint64_t)a2, a3, __p);
  v6 = (void *)HIBYTE(v31);
  v7 = SHIBYTE(v31);
  if (v31 < 0)
    v6 = __p[1];
  if (v6)
  {
    *(_OWORD *)a1 = *(_OWORD *)__p;
    *(_QWORD *)(a1 + 16) = v31;
    __p[1] = 0;
    v31 = 0;
    __p[0] = 0;
    *(_BYTE *)(a1 + 24) = 1;
    return;
  }
  v8 = *(char *)(v3 + 23);
  if (v8 >= 0)
    v9 = (const UChar *)v3;
  else
    v9 = *(const UChar **)v3;
  if (v8 >= 0)
    v10 = *(unsigned __int8 *)(v3 + 23);
  else
    v10 = *(_QWORD *)(v3 + 8);
  v11 = a2[27];
  v12 = a2[30];
  v32[0] = 0;
  CombinedBinaryType = (morphun::grammar::synthesis::GrammemeConstants *)morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v11, (uint64_t)v32, v9, v10);
  if (CombinedBinaryType)
    v14 = (v32[0] & v12) == v12;
  else
    v14 = 0;
  if (v14)
    goto LABEL_24;
  v15 = *(char *)(v3 + 23);
  if (v15 >= 0)
    v16 = (const UChar *)v3;
  else
    v16 = *(const UChar **)v3;
  if (v15 >= 0)
    v17 = *(unsigned __int8 *)(v3 + 23);
  else
    v17 = *(_QWORD *)(v3 + 8);
  v18 = a2[27];
  v19 = a2[29];
  v32[0] = 0;
  if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v18, (uint64_t)v32, v16, v17)
    && (v32[0] & v19) == v19)
  {
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    v20 = 1;
    *(_QWORD *)(a1 + 16) = 0;
    goto LABEL_39;
  }
  v22 = *(_QWORD *)(v3 + 8);
  if (*(char *)(v3 + 23) >= 0)
  {
    v23 = *(unsigned __int8 *)(v3 + 23);
  }
  else
  {
    v3 = *(_QWORD *)v3;
    v23 = v22;
  }
  v24 = a2[27];
  v25 = a2[28];
  v32[0] = 0;
  if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v24, (uint64_t)v32, (const UChar *)v3, v23)
    && (v32[0] & v25) == v25)
  {
    morphun::dictionary::DictionaryMetaData::getPropertyValues(a2[27], (const UChar *)v3, v23, (unsigned __int16 *)"i", 0xAuLL, v32);
    if (0xAAAAAAAAAAAAAAABLL * ((v32[1] - v32[0]) >> 3) >= 2)
    {
      v33 = (void **)v32;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v33);
    }
    else
    {
      v26 = a2[27];
      v27 = a2[31];
      v33 = 0;
      v28 = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v26, (uint64_t)&v33, (const UChar *)v3, v23);
      v29 = (unint64_t)v33;
      v33 = (void **)v32;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v33);
      if (v28 && (v29 & v27) == v27)
      {
LABEL_24:
        v21 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(CombinedBinaryType);
        if (*(char *)(v21 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)a1, *(const std::basic_string<char16_t>::value_type **)v21, *(_QWORD *)(v21 + 8));
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)v21;
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(v21 + 16);
        }
        v20 = 1;
        goto LABEL_39;
      }
    }
  }
  v20 = 0;
  *(_BYTE *)a1 = 0;
LABEL_39:
  *(_BYTE *)(a1 + 24) = v20;
  if (v7 < 0)
    operator delete(__p[0]);
}

void sub_1CB50FDE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char *a15)
{
  int v15;

  a15 = &a12;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a15);
  if (v15 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

morphun::grammar::synthesis::FrGrammarSynthesizer_CountLookupFunction *morphun::grammar::synthesis::FrGrammarSynthesizer_CountLookupFunction::FrGrammarSynthesizer_CountLookupFunction(morphun::grammar::synthesis::FrGrammarSynthesizer_CountLookupFunction *this)
{
  const morphun::util::ULocale *v2;
  uint64_t i;
  morphun::util::LocaleUtils *v4;
  uint64_t j;
  morphun::TokenizerFactory *v6;
  const morphun::util::ULocale *v7;
  morphun::Tokenizer *Tokenizer;
  uint64_t v9;
  morphun::dictionary::Inflector *v10;
  const morphun::util::ULocale *v11;
  uint64_t v12;
  uint64_t *BinaryProperties;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t k;
  std::basic_string<char16_t> *v22;
  std::basic_string<char16_t> *v23;
  __int128 *v24;
  std::basic_string<char16_t> *p_dst;
  std::basic_string<char16_t> *v26;
  void **p_data;
  std::basic_string<char16_t> **v28;
  char v29;
  __int128 __p;
  uint64_t v31;
  _QWORD v32[3];
  __int128 __dst;
  uint64_t v34;
  _QWORD v35[3];
  __int128 v36;

  *(_QWORD *)&v36 = *MEMORY[0x1E0C80C00];
  *(_QWORD *)this = &off_1E865CEA0;
  v2 = (const morphun::util::ULocale *)morphun::util::LocaleUtils::FRENCH(this);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"singular");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v35, "p");
  p_dst = 0;
  v26 = 0;
  p_data = 0;
  *(_QWORD *)&__p = &p_dst;
  BYTE8(__p) = 0;
  p_dst = (std::basic_string<char16_t> *)operator new(0x30uLL);
  v26 = p_dst;
  p_data = (void **)&p_dst[2].__r_.__value_.__l.__data_;
  v26 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&p_data, &__dst, &v36, p_dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"noun");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v32, "a");
  v22 = 0;
  v23 = 0;
  v24 = 0;
  v28 = &v22;
  v29 = 0;
  v22 = (std::basic_string<char16_t> *)operator new(0x30uLL);
  v23 = v22;
  v24 = (__int128 *)&v22[2];
  v23 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v24, &__p, &__dst, v22);
  morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction((uint64_t)this, (uint64_t *)off_1E8668110, v2, (uint64_t *)&p_dst, (__int128 **)&v22);
  v28 = &v22;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v28);
  for (i = 0; i != -6; i -= 3)
  {
    if (SHIBYTE(v32[i + 2]) < 0)
      operator delete((void *)v32[i]);
  }
  *(_QWORD *)&__p = &p_dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  for (j = 0; j != -6; j -= 3)
  {
    if (SHIBYTE(v35[j + 2]) < 0)
      operator delete((void *)v35[j]);
  }
  *(_QWORD *)this = &off_1E866E9E0;
  v6 = (morphun::TokenizerFactory *)morphun::util::LocaleUtils::FRENCH(v4);
  Tokenizer = morphun::TokenizerFactory::createTokenizer(v6, v7);
  *((_OWORD *)this + 14) = 0u;
  v9 = *((_QWORD *)this + 2);
  *((_QWORD *)this + 26) = Tokenizer;
  *((_QWORD *)this + 27) = v9;
  *((_OWORD *)this + 15) = 0u;
  v10 = (morphun::dictionary::Inflector *)morphun::util::LocaleUtils::FRENCH(Tokenizer);
  *((_QWORD *)this + 32) = morphun::dictionary::Inflector::getInflector(v10, v11);
  v12 = *((_QWORD *)this + 27);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"noun");
  __dst = 0uLL;
  v34 = 0;
  p_dst = (std::basic_string<char16_t> *)&__dst;
  LOBYTE(v26) = 0;
  *(_QWORD *)&__dst = operator new(0x18uLL);
  *((_QWORD *)&__dst + 1) = __dst;
  v34 = __dst + 24;
  *((_QWORD *)&__dst + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v34, &__p, (__int128 *)v32, (std::basic_string<char16_t> *)__dst);
  BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v12, (uint64_t *)this + 28, (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)BinaryProperties);
  p_dst = (std::basic_string<char16_t> *)&__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_dst);
  if (SHIBYTE(v31) < 0)
    operator delete((void *)__p);
  v14 = *((_QWORD *)this + 27);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"proper-noun");
  __dst = 0uLL;
  v34 = 0;
  p_dst = (std::basic_string<char16_t> *)&__dst;
  LOBYTE(v26) = 0;
  *(_QWORD *)&__dst = operator new(0x18uLL);
  *((_QWORD *)&__dst + 1) = __dst;
  v34 = __dst + 24;
  *((_QWORD *)&__dst + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v34, &__p, (__int128 *)v32, (std::basic_string<char16_t> *)__dst);
  v15 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v14, (uint64_t *)this + 29, (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v15);
  p_dst = (std::basic_string<char16_t> *)&__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_dst);
  if (SHIBYTE(v31) < 0)
    operator delete((void *)__p);
  v16 = *((_QWORD *)this + 27);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, "a");
  __dst = 0uLL;
  v34 = 0;
  p_dst = (std::basic_string<char16_t> *)&__dst;
  LOBYTE(v26) = 0;
  *(_QWORD *)&__dst = operator new(0x18uLL);
  *((_QWORD *)&__dst + 1) = __dst;
  v34 = __dst + 24;
  *((_QWORD *)&__dst + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v34, &__p, (__int128 *)v32, (std::basic_string<char16_t> *)__dst);
  v17 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v16, (uint64_t *)this + 30, (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v17);
  p_dst = (std::basic_string<char16_t> *)&__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_dst);
  if (SHIBYTE(v31) < 0)
    operator delete((void *)__p);
  v18 = *((_QWORD *)this + 27);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "p");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v35, (char *)L"singular");
  __p = 0uLL;
  v31 = 0;
  p_dst = (std::basic_string<char16_t> *)&__p;
  LOBYTE(v26) = 0;
  *(_QWORD *)&__p = operator new(0x30uLL);
  *((_QWORD *)&__p + 1) = __p;
  v31 = __p + 48;
  *((_QWORD *)&__p + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v31, &__dst, &v36, (std::basic_string<char16_t> *)__p);
  v19 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v18, (uint64_t *)this + 31, (uint64_t *)&__p);
  morphun::util::Validate::notNull<long long>((uint64_t)v19);
  p_dst = (std::basic_string<char16_t> *)&__p;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_dst);
  for (k = 0; k != -6; k -= 3)
  {
    if (SHIBYTE(v35[k + 2]) < 0)
      operator delete((void *)v35[k]);
  }
  return this;
}

void sub_1CB5102A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  morphun::dialog::DictionaryLookupFunction *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a13);
  v26 = 0;
  v27 = v24 - 104;
  while (1)
  {
    if (*(char *)(v27 + v26 + 47) < 0)
      operator delete(*(void **)(v27 + v26 + 24));
    v26 -= 24;
    if (v26 == -48)
    {
      v28 = *((_QWORD *)v23 + 26);
      *((_QWORD *)v23 + 26) = 0;
      if (v28)
        (*(void (**)(uint64_t))(*(_QWORD *)v28 + 16))(v28);
      morphun::dialog::DictionaryLookupFunction::~DictionaryLookupFunction(v23, (uint64_t *)off_1E8668110);
      _Unwind_Resume(a1);
    }
  }
}

void sub_1CB510478()
{
  JUMPOUT(0x1CB510460);
}

void morphun::tokenizer::locale::de::DeTokenExtractorIterator::~DeTokenExtractorIterator(morphun::tokenizer::locale::de::DeTokenExtractorIterator *this)
{
  void *v2;

  *(_QWORD *)this = &off_1E8673728;
  v2 = (void *)*((_QWORD *)this + 10);
  if (v2)
  {
    *((_QWORD *)this + 11) = v2;
    operator delete(v2);
  }
  if (*((char *)this + 79) < 0)
    operator delete(*((void **)this + 7));
  morphun::tokenizer::ICUTokenExtractorIterator::~ICUTokenExtractorIterator((morphun::tokenizer::locale::de::DeTokenExtractorIterator *)((char *)this + 16));
}

{
  morphun::tokenizer::locale::de::DeTokenExtractorIterator::~DeTokenExtractorIterator(this);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::tokenizer::locale::de::DeTokenExtractorIterator::getNextBoundary(morphun::tokenizer::locale::de::DeTokenExtractorIterator *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char **v8;
  uint64_t v9;
  unsigned __int16 *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int *v16;
  int v17;
  int v18;
  int v19;
  char *v20;
  int *v22;
  int *v23;
  uint64_t v24;
  char *v25;
  int v26;
  unint64_t v27;
  int *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  BOOL v32;
  unint64_t v33;
  uint64_t v34;
  int *v35;
  int v36;
  int v37;
  unint64_t v38;
  int *v39;
  int *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  int *v46;
  int v47;
  int v48;
  unint64_t v49;
  _DWORD *v50;
  int *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  int *v57;
  int v58;
  uint64_t v59;
  _OWORD v61[32];
  uint64_t v62;

  v62 = *MEMORY[0x1E0C80C00];
  v2 = *((int *)this + 26);
  v3 = *((_QWORD *)this + 10);
  if ((int)v2 >= (int)((unint64_t)(*((_QWORD *)this + 11) - v3) >> 2))
  {
    *((_QWORD *)this + 11) = v3;
    *((_DWORD *)this + 26) = 0;
    v5 = ubrk_next();
    if ((_DWORD)v5 == -1)
    {
      return 0xFFFFFFFFLL;
    }
    else
    {
      v4 = v5;
      v6 = *((int *)this + 27);
      v7 = (v5 - v6);
      if ((int)v7 >= 6)
      {
        while (uscript_hasScript() || uscript_hasScript())
        {
          if (++v6 >= (int)v4)
          {
            v8 = (char **)((char *)this + 56);
            morphun::tokenizer::locale::de::titleCase((uint64_t)this + 56, *((_QWORD *)this + 5), *((_QWORD *)this + 6), *((_DWORD *)this + 27), v7);
            v9 = *((_QWORD *)this + 1);
            if (!v9
              || ((*((_BYTE *)this + 79) & 0x80) != 0
                ? (v10 = (unsigned __int16 *)*((_QWORD *)this + 7), v11 = *((_QWORD *)this + 8))
                : (v10 = (unsigned __int16 *)((char *)this + 56), v11 = *((unsigned __int8 *)this + 79)),
                  (_QWORD *)(v9 + 8) == std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(*((_QWORD *)this + 1), v10, v11)))
            {
              memset(v61, 0, sizeof(v61));
              v12 = germantok_tokenize();
              v13 = v12;
              if (v12 > 1 || v12 == 1 && *((_QWORD *)&v61[0] + 1) != v7)
              {
                v14 = 0;
                v15 = 0;
                do
                {
                  v16 = (int *)&v61[v14];
                  v17 = *v16;
                  v18 = v16[2];
                  ++v14;
                  v19 = v7;
                  if (v14 < v13)
                  {
                    v19 = v61[v14];
                    if (v18 + v17 > v19)
                      v18 = v19 - v17;
                  }
                  if (v18 + v17 < v19)
                  {
                    v20 = (char *)this + 56;
                    if (*((char *)this + 79) < 0)
                      v20 = *v8;
                    if (*(_WORD *)&v20[2 * v19 - 2] == 115 && v14 < v13)
                      --v19;
                    v18 = v19 - v17;
                  }
                  v22 = (int *)*((_QWORD *)this + 11);
                  if (v17 > v15)
                  {
                    v23 = (int *)*((_QWORD *)this + 10);
                    if (v23 != v22 && v17 - v15 <= 6)
                      *((_QWORD *)this + 11) = --v22;
                    v24 = (v17 - 1);
                    if (v17 >= 1)
                    {
                      v25 = (char *)this + 56;
                      if (*((char *)this + 79) < 0)
                        v25 = *v8;
                      if (*(_WORD *)&v25[2 * v24] == 115)
                      {
                        v26 = v24 + *((_DWORD *)this + 27);
                        v27 = *((_QWORD *)this + 12);
                        if ((unint64_t)v22 >= v27)
                        {
                          v29 = v22 - v23;
                          v30 = v29 + 1;
                          if ((unint64_t)(v29 + 1) >> 62)
                            std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
                          v31 = v27 - (_QWORD)v23;
                          if (v31 >> 1 > v30)
                            v30 = v31 >> 1;
                          v32 = (unint64_t)v31 >= 0x7FFFFFFFFFFFFFFCLL;
                          v33 = 0x3FFFFFFFFFFFFFFFLL;
                          if (!v32)
                            v33 = v30;
                          if (v33)
                          {
                            v33 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(v33);
                            v23 = (int *)*((_QWORD *)this + 10);
                            v22 = (int *)*((_QWORD *)this + 11);
                          }
                          else
                          {
                            v34 = 0;
                          }
                          v35 = (int *)(v33 + 4 * v29);
                          *v35 = v26;
                          v28 = v35 + 1;
                          while (v22 != v23)
                          {
                            v36 = *--v22;
                            *--v35 = v36;
                          }
                          *((_QWORD *)this + 10) = v35;
                          *((_QWORD *)this + 11) = v28;
                          *((_QWORD *)this + 12) = v33 + 4 * v34;
                          if (v23)
                            operator delete(v23);
                        }
                        else
                        {
                          *v22 = v26;
                          v28 = v22 + 1;
                        }
                        *((_QWORD *)this + 11) = v28;
                        v22 = v28;
                      }
                    }
                    v37 = *((_DWORD *)this + 27) + v17;
                    v38 = *((_QWORD *)this + 12);
                    if ((unint64_t)v22 >= v38)
                    {
                      v40 = (int *)*((_QWORD *)this + 10);
                      v41 = v22 - v40;
                      v42 = v41 + 1;
                      if ((unint64_t)(v41 + 1) >> 62)
                        std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
                      v43 = v38 - (_QWORD)v40;
                      if (v43 >> 1 > v42)
                        v42 = v43 >> 1;
                      v32 = (unint64_t)v43 >= 0x7FFFFFFFFFFFFFFCLL;
                      v44 = 0x3FFFFFFFFFFFFFFFLL;
                      if (!v32)
                        v44 = v42;
                      if (v44)
                      {
                        v44 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(v44);
                        v40 = (int *)*((_QWORD *)this + 10);
                        v22 = (int *)*((_QWORD *)this + 11);
                      }
                      else
                      {
                        v45 = 0;
                      }
                      v46 = (int *)(v44 + 4 * v41);
                      *v46 = v37;
                      v39 = v46 + 1;
                      while (v22 != v40)
                      {
                        v47 = *--v22;
                        *--v46 = v47;
                      }
                      *((_QWORD *)this + 10) = v46;
                      *((_QWORD *)this + 11) = v39;
                      *((_QWORD *)this + 12) = v44 + 4 * v45;
                      if (v40)
                        operator delete(v40);
                    }
                    else
                    {
                      *v22 = v37;
                      v39 = v22 + 1;
                    }
                    *((_QWORD *)this + 11) = v39;
                    v22 = v39;
                  }
                  v15 = v18 + v17;
                  v48 = v18 + v17 + *((_DWORD *)this + 27);
                  v49 = *((_QWORD *)this + 12);
                  if ((unint64_t)v22 >= v49)
                  {
                    v51 = (int *)*((_QWORD *)this + 10);
                    v52 = v22 - v51;
                    v53 = v52 + 1;
                    if ((unint64_t)(v52 + 1) >> 62)
                      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
                    v54 = v49 - (_QWORD)v51;
                    if (v54 >> 1 > v53)
                      v53 = v54 >> 1;
                    v32 = (unint64_t)v54 >= 0x7FFFFFFFFFFFFFFCLL;
                    v55 = 0x3FFFFFFFFFFFFFFFLL;
                    if (!v32)
                      v55 = v53;
                    if (v55)
                    {
                      v55 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(v55);
                      v51 = (int *)*((_QWORD *)this + 10);
                      v22 = (int *)*((_QWORD *)this + 11);
                    }
                    else
                    {
                      v56 = 0;
                    }
                    v57 = (int *)(v55 + 4 * v52);
                    *v57 = v48;
                    v50 = v57 + 1;
                    while (v22 != v51)
                    {
                      v58 = *--v22;
                      *--v57 = v58;
                    }
                    *((_QWORD *)this + 10) = v57;
                    *((_QWORD *)this + 11) = v50;
                    *((_QWORD *)this + 12) = v55 + 4 * v56;
                    if (v51)
                      operator delete(v51);
                  }
                  else
                  {
                    *v22 = v48;
                    v50 = v22 + 1;
                  }
                  *((_QWORD *)this + 11) = v50;
                }
                while (v14 != v13);
                v59 = *((int *)this + 26);
                *((_DWORD *)this + 26) = v59 + 1;
                v4 = *(unsigned int *)(*((_QWORD *)this + 10) + 4 * v59);
              }
            }
            break;
          }
        }
      }
      *((_DWORD *)this + 27) = v4;
    }
  }
  else
  {
    *((_DWORD *)this + 26) = v2 + 1;
    return *(unsigned int *)(v3 + 4 * v2);
  }
  return v4;
}

uint64_t morphun::tokenizer::locale::de::DeTokenExtractorIterator::reset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  *(_QWORD *)(a1 + 40) = a2;
  *(_QWORD *)(a1 + 48) = a3;
  *(_DWORD *)(a1 + 108) = 0;
  result = morphun::tokenizer::ICUTokenExtractorIterator::reset();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a1 + 80);
  *(_DWORD *)(a1 + 104) = 0;
  return result;
}

void morphun::tokenizer::locale::de::titleCase(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  std::basic_string<char16_t>::value_type v9;
  uint64_t v10;
  unsigned __int16 *v11;
  unsigned int v12;
  std::basic_string<char16_t>::value_type v13;

  if (*(char *)(npc<std::basic_string<char16_t>>(a1) + 23) < 0)
  {
    **(_WORD **)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
  }
  else
  {
    *(_WORD *)a1 = 0;
    *(_BYTE *)(a1 + 23) = 0;
  }
  if (a5 >= 1)
  {
    v9 = MEMORY[0x1D179D640](*(unsigned __int16 *)(a2 + 2 * a4));
    std::basic_string<char16_t>::push_back((std::basic_string<char16_t> *)a1, v9);
    if (a5 != 1)
    {
      v10 = a5 - 1;
      v11 = (unsigned __int16 *)(a2 + 2 * a4 + 2);
      do
      {
        npc<std::basic_string<char16_t>>(a1);
        v12 = *v11++;
        v13 = MEMORY[0x1D179D634](v12);
        std::basic_string<char16_t>::push_back((std::basic_string<char16_t> *)a1, v13);
        --v10;
      }
      while (v10);
    }
  }
}

void sub_1CB510B18(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

BOOL morphun::tokenizer::locale::de::DeTokenExtractorIterator::isIndivisibleWordNormalized(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned __int16 *v5;
  _BOOL8 result;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  BOOL v16;

  v5 = (unsigned __int16 *)a3;
  morphun::tokenizer::locale::de::titleCase(a1, a3, a4, 0, a4);
  result = 0;
  v8 = *(unsigned __int8 *)(a1 + 23);
  if ((v8 & 0x80u) == 0)
    v9 = (unsigned __int16 *)a1;
  else
    v9 = *(unsigned __int16 **)a1;
  if ((v8 & 0x80u) != 0)
    v8 = *(_QWORD *)(a1 + 8);
  if (v8 == a4)
  {
    if (a4)
    {
      v10 = a4 - 1;
      do
      {
        v12 = *v9++;
        v11 = v12;
        v14 = *v5++;
        v13 = v14;
        v16 = v10-- != 0;
        result = v13 == v11;
      }
      while (v13 == v11 && v16);
    }
    else
    {
      return 1;
    }
  }
  return result;
}

void morphun::dictionary::Inflector_InflectionPattern::constrain(unint64_t *a1, uint64_t a2, uint64_t *a3, int a4)
{
  uint64_t ValuesOfTypes;
  uint64_t v8;
  _QWORD *v9;
  int i;
  uint64_t v11;
  unint64_t v12;
  __int128 v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;

  ValuesOfTypes = morphun::dictionary::DictionaryMetaData_MMappedDictionary::getValuesOfTypes(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 184), a3);
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  if (*(__int16 *)(a2 + 18) >= 1)
  {
    v8 = ValuesOfTypes;
    v9 = 0;
    for (i = 0; i < *(__int16 *)(a2 + 18); ++i)
    {
      morphun::dictionary::Inflector_InflectionPattern::getInflectionAtPosition((morphun::dictionary::Inflector_InflectionPattern *)&v24, a2, i);
      v11 = v25 & v8;
      if (a4)
      {
        if (v11 == v25)
          goto LABEL_7;
      }
      else if (v11 == v8)
      {
LABEL_7:
        v12 = a1[2];
        if ((unint64_t)v9 >= v12)
        {
          v15 = (_QWORD *)*a1;
          v16 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)((uint64_t)v9 - *a1) >> 3);
          v17 = v16 + 1;
          if (v16 + 1 > 0xAAAAAAAAAAAAAAALL)
            std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
          v18 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v12 - (_QWORD)v15) >> 3);
          if (2 * v18 > v17)
            v17 = 2 * v18;
          if (v18 >= 0x555555555555555)
            v19 = 0xAAAAAAAAAAAAAAALL;
          else
            v19 = v17;
          if (v19)
            v19 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v19);
          else
            v20 = 0;
          v21 = v19 + 24 * v16;
          *(_OWORD *)v21 = v24;
          *(_QWORD *)(v21 + 16) = v25;
          v22 = v21;
          if (v9 != v15)
          {
            do
            {
              v23 = *(_OWORD *)(v9 - 3);
              *(_QWORD *)(v22 - 8) = *(v9 - 1);
              *(_OWORD *)(v22 - 24) = v23;
              v22 -= 24;
              v9 -= 3;
            }
            while (v9 != v15);
            v9 = (_QWORD *)*a1;
          }
          v14 = (_QWORD *)(v21 + 24);
          *a1 = v22;
          a1[1] = v21 + 24;
          a1[2] = v19 + 24 * v20;
          if (v9)
            operator delete(v9);
        }
        else
        {
          v13 = v24;
          v9[2] = v25;
          *(_OWORD *)v9 = v13;
          v14 = v9 + 3;
        }
        a1[1] = (unint64_t)v14;
        v9 = v14;
      }
    }
  }
}

void sub_1CB510D7C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v2;

  if (v2)
  {
    *(_QWORD *)(v1 + 8) = v2;
    operator delete(v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::dictionary::Inflector_InflectionPattern::getInflectionAtPosition(morphun::dictionary::Inflector_InflectionPattern *this, uint64_t a2, int a3)
{
  unint64_t v5;
  int Value;
  uint64_t result;
  uint64_t v8;
  _QWORD *exception;
  __int128 __dst;

  if (*(__int16 *)(a2 + 18) <= a3)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"index too large for getInflectionAtPosition");
    morphun::exception::Throwable::Throwable((uint64_t)exception, &__dst);
    *exception = &off_1E86731C0;
  }
  v5 = morphun::dictionary::metadata::CompressedArray<long long>::read(*(_QWORD *)(a2 + 32) + 192, *(_DWORD *)(a2 + 24) + a3);
  Value = morphun::dictionary::metadata::CompressedArray<int>::extractValue(v5, 0, *(unsigned __int8 *)(*(_QWORD *)(a2 + 32) + 224));
  result = morphun::dictionary::metadata::CompressedArray<int>::extractValue(v5 >> *(_BYTE *)(*(_QWORD *)(a2 + 32) + 224), 0, *(unsigned __int8 *)(*(_QWORD *)(a2 + 32) + 225));
  v8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 136) + 8 * Value);
  *(_QWORD *)this = a2;
  *((_DWORD *)this + 2) = result;
  *((_QWORD *)this + 2) = v8;
  return result;
}

void sub_1CB510E98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

uint64_t morphun::dictionary::metadata::CompressedArray<long long>::read(uint64_t a1, int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  char v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *exception;
  __int128 __dst;

  v2 = *(_DWORD *)(a1 + 4);
  v3 = v2 * a2;
  v4 = v2 * a2 + 63;
  if (v2 * a2 >= 0)
    v4 = v2 * a2;
  v5 = v2 + v3;
  v6 = v5 - 1;
  v7 = v5 + 62;
  if (v6 >= 0)
    v7 = v6;
  if (a2 < 0 || (v8 = v7 >> 6, v8 > *(_DWORD *)a1))
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"Invalid CompressedArray index");
    morphun::exception::Throwable::Throwable((uint64_t)exception, &__dst);
    *exception = &off_1E86731C0;
  }
  v9 = v4 >> 6;
  v10 = v3 - (v4 & 0xC0);
  v11 = (_QWORD *)(*(_QWORD *)(a1 + 8) + 8 * (v4 >> 6));
  v12 = *v11 >> v10;
  if (v9 != v8)
    v12 |= v11[1] << -v10;
  return v12 & *(_QWORD *)(a1 + 16);
}

void sub_1CB510FC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

uint64_t morphun::dictionary::metadata::CompressedArray<int>::extractValue(unint64_t a1, int a2, int a3)
{
  _QWORD *exception;
  __int128 __dst;

  if ((a3 + a2) >= 0x41)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"Illegal start or length value");
    morphun::exception::Throwable::Throwable((uint64_t)exception, &__dst);
    *exception = &off_1E86731C0;
  }
  return (a1 >> a2) & ~(-1 << a3);
}

void sub_1CB511098(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

void morphun::dictionary::Inflector_InflectionPattern::selectLemmaInflection(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t **a4)
{
  int *v7;
  std::basic_string<char16_t> *v8;
  unint64_t v9;
  int v10;
  __int32 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  int64_t v16;
  uint64_t v17;
  uint8x8_t v18;
  uint64_t v19;
  uint8x8_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  std::basic_string<char16_t> *v27;
  unint64_t v28;
  int *v29;
  __int128 v30;
  int *v31;
  int *v32;
  std::basic_string<char16_t>::size_type v33;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t>::size_type v35;
  std::basic_string<char16_t>::size_type v36;
  __int128 v37;
  char v38;
  _BYTE *v39;
  __int32 v40;
  std::basic_string<char16_t> v41;
  std::basic_string<char16_t> __p;

  if (!*(_WORD *)(a2 + 18))
  {
    *a1 = 0;
    a1[24] = 0;
    return;
  }
  if (*(__int16 *)(a2 + 18) < 1)
  {
    v7 = 0;
    goto LABEL_57;
  }
  v39 = a1;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = -1;
  v13 = 65281;
  do
  {
    morphun::dictionary::Inflector_InflectionPattern::getInflectionAtPosition((morphun::dictionary::Inflector_InflectionPattern *)&__p, a2, v10);
    v14 = *a4;
    v15 = a4[1];
    if (*a4 == v15)
    {
      v16 = 0;
    }
    else
    {
      v16 = 0;
      do
      {
        v17 = *v14++;
        v16 = ((v17 & __p.__r_.__value_.__r.__words[2]) != 0) | (unint64_t)(2 * v16);
      }
      while (v14 != v15);
    }
    if (v16 >= v12)
    {
      v18 = (uint8x8_t)vcnt_s8((int8x8_t)__p.__r_.__value_.__r.__words[2]);
      v18.i16[0] = vaddlv_u8(v18);
      v19 = -v18.i32[0];
      v20 = (uint8x8_t)vcnt_s8((int8x8_t)(__p.__r_.__value_.__r.__words[2] & a3));
      v20.i16[0] = vaddlv_u8(v20);
      if (v12 < v16)
        goto LABEL_11;
      if ((__int16)v11 > v20.i16[0] || (__int16)v11 >= v20.i16[0] && (int)v19 < (__int16)v13)
        goto LABEL_37;
      if ((__int16)v11 < v20.i16[0] || (int)v19 > (__int16)v13)
      {
LABEL_11:
        v8 = (std::basic_string<char16_t> *)v7;
        v12 = v16;
        v11 = v20.i32[0];
        v13 = v19;
      }
      if ((unint64_t)v8 >= v9)
      {
        v40 = v11;
        v22 = a3;
        v23 = v13;
        v24 = 0xAAAAAAAAAAAAAAABLL * (((char *)v8 - (char *)v7) >> 3) + 1;
        if (v24 > 0xAAAAAAAAAAAAAAALL)
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        if (0x5555555555555556 * ((uint64_t)(v9 - (_QWORD)v7) >> 3) > v24)
          v24 = 0x5555555555555556 * ((uint64_t)(v9 - (_QWORD)v7) >> 3);
        if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v9 - (_QWORD)v7) >> 3) >= 0x555555555555555)
          v25 = 0xAAAAAAAAAAAAAAALL;
        else
          v25 = v24;
        if (v25)
          v25 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v25);
        else
          v26 = 0;
        v27 = (std::basic_string<char16_t> *)(v25 + 8 * (((char *)v8 - (char *)v7) >> 3));
        *v27 = __p;
        if (v8 == (std::basic_string<char16_t> *)v7)
        {
          v29 = (int *)(v25 + 8 * (((char *)v8 - (char *)v7) >> 3));
        }
        else
        {
          v28 = v25 + 8 * (((char *)v8 - (char *)v7) >> 3);
          do
          {
            v29 = (int *)(v28 - 24);
            v30 = *(_OWORD *)&v8[-1].__r_.__value_.__l.__data_;
            *(_QWORD *)(v28 - 8) = *((_QWORD *)&v8[-1].__r_.__value_.__l + 2);
            *(_OWORD *)(v28 - 24) = v30;
            --v8;
            v28 -= 24;
          }
          while (v8 != (std::basic_string<char16_t> *)v7);
        }
        v9 = v25 + 24 * v26;
        v8 = v27 + 1;
        if (v7)
          operator delete(v7);
        v7 = v29;
        v13 = v23;
        a3 = v22;
        v11 = v40;
      }
      else
      {
        v21 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
        v8->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
        *(_OWORD *)&v8->__r_.__value_.__l.__data_ = v21;
        ++v8;
      }
    }
LABEL_37:
    ++v10;
  }
  while (v10 < *(__int16 *)(a2 + 18));
  if (v7 == (int *)v8)
    goto LABEL_55;
  v31 = v7 + 6;
  v32 = v7;
  if (v7 + 6 != (int *)v8)
  {
    v32 = v7;
    do
    {
      morphun::dictionary::metadata::StringContainer::getString(*(morphun::dictionary::metadata::StringContainer **)(*(_QWORD *)v31 + 40), v31[2], &__p);
      v33 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      size = __p.__r_.__value_.__l.__size_;
      morphun::dictionary::metadata::StringContainer::getString(*(morphun::dictionary::metadata::StringContainer **)(*(_QWORD *)v32 + 40), v32[2], &v41);
      if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0)
      {
        v35 = v41.__r_.__value_.__l.__size_;
        operator delete(v41.__r_.__value_.__l.__data_);
      }
      else
      {
        v35 = HIBYTE(v41.__r_.__value_.__r.__words[2]);
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      if ((v33 & 0x80u) == 0)
        v36 = v33;
      else
        v36 = size;
      if (v36 < v35)
        v32 = v31;
      v31 += 6;
    }
    while (v31 != (int *)v8);
  }
  if (v32 == (int *)v8)
  {
LABEL_55:
    a1 = v39;
LABEL_57:
    v38 = 0;
    *a1 = 0;
    goto LABEL_58;
  }
  v37 = *(_OWORD *)v32;
  a1 = v39;
  *((_QWORD *)v39 + 2) = *((_QWORD *)v32 + 2);
  *(_OWORD *)v39 = v37;
  v38 = 1;
LABEL_58:
  a1[24] = v38;
  if (v7)
    operator delete(v7);
}

void sub_1CB51140C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  void *v19;

  if (v19)
    operator delete(v19);
  _Unwind_Resume(exception_object);
}

void morphun::dictionary::Inflector_InflectionPattern::reinflect(_BYTE *__dst, uint64_t a2, uint64_t a3, uint64_t a4, char *__src, unint64_t a6)
{
  unint64_t v6;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint8x8_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int8x8_t v22;
  uint64_t v23;
  std::basic_string<char16_t> *p_str;
  std::basic_string<char16_t>::size_type size;
  uint64_t v26;
  int v27;
  BOOL v28;
  uint8x8_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  std::basic_string<char16_t> *v33;
  std::basic_string<char16_t>::size_type v34;
  void **v35;
  std::basic_string<char16_t>::size_type v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  std::string *v41;
  int32_t v42;
  int v43;
  void *v44;
  std::basic_string<char16_t> *v45;
  std::basic_string<char16_t>::size_type v46;
  std::basic_string<char16_t> *v47;
  uint64_t v48;
  uint8x8_t v49;
  uint64_t v50;
  std::basic_string<char16_t>::size_type v52;
  std::basic_string<char16_t> *p_dsta;
  uint64_t v54;
  uint64_t v55;
  std::basic_string<char16_t> *v56;
  std::basic_string<char16_t>::size_type v57;
  void *v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  char *v65;
  std::string v66;
  std::basic_string<char16_t> v67;
  std::basic_string<char16_t> v68;
  void *__p[2];
  unsigned __int8 v70;
  std::basic_string<char16_t> v71;
  std::basic_string<char16_t> v72;
  std::basic_string<char16_t> v73;
  std::basic_string<char16_t> v74;
  std::basic_string<char16_t> v75;
  std::basic_string<char16_t> v76;
  std::basic_string<char16_t> v77;
  std::basic_string<char16_t> __str;
  std::basic_string<char16_t> __dsta;
  std::basic_string<char16_t> v80;

  v6 = a6;
  v8 = __dst;
  if (!a4 || (v9 = a4, v10 = a3, (a4 & ~a3) == 0))
  {
    if (a6 > 0x7FFFFFFFFFFFFFF7)
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    if (a6 >= 0xB)
    {
      v11 = (a6 & 0xFFFFFFFFFFFFFFFCLL) + 4;
      if ((a6 | 3) != 0xB)
        v11 = a6 | 3;
      v12 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v11 + 1);
      v8[1] = v6;
      v8[2] = v13 | 0x8000000000000000;
      *v8 = v12;
      v8 = v12;
    }
    else
    {
      __dst[23] = a6;
      if (!a6)
        goto LABEL_11;
    }
    memmove(v8, __src, 2 * v6);
LABEL_11:
    *((_WORD *)v8 + v6) = 0;
    return;
  }
  v14 = a2;
  memset(&v80, 0, sizeof(v80));
  if (*(__int16 *)(a2 + 18) < 1)
    goto LABEL_104;
  v15 = 0;
  v16 = 0;
  v17 = (uint8x8_t)vcnt_s8((int8x8_t)a4);
  v17.i16[0] = vaddlv_u8(v17);
  v62 = v17.u32[0];
  v18 = &__src[2 * a6];
  v19 = -1;
  v64 = 0xFFFFFFFFLL;
  v65 = v18;
  do
  {
    v20 = v14;
    morphun::dictionary::Inflector_InflectionPattern::getInflectionAtPosition((morphun::dictionary::Inflector_InflectionPattern *)&__dsta, v14, v15);
    v21 = __dsta.__r_.__value_.__r.__words[2];
    morphun::dictionary::metadata::StringContainer::getString(*(morphun::dictionary::metadata::StringContainer **)(__dsta.__r_.__value_.__r.__words[0] + 40), __dsta.__r_.__value_.__r.__words[1], &__str);
    v22 = (int8x8_t)(v21 & v10);
    if (!v10 || *(_QWORD *)&v22 == v21)
    {
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      {
        size = __str.__r_.__value_.__l.__size_;
        v23 = __str.__r_.__value_.__s.__data_[4];
        if ((int)v23 <= (__int16)v16)
          goto LABEL_30;
        p_str = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
      }
      else
      {
        v23 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
        if (HIBYTE(__str.__r_.__value_.__r.__words[2]) <= (__int16)v16)
          goto LABEL_30;
        p_str = &__str;
        size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      }
      if (v6 >= size)
      {
        if (size)
        {
          v26 = -(uint64_t)size;
          do
          {
            v27 = (unsigned __int16)p_str->__r_.__value_.__s.__data_[0];
            p_str = (std::basic_string<char16_t> *)((char *)p_str + 2);
            v28 = v27 == *(unsigned __int16 *)&v18[2 * v26];
            if (v27 != *(unsigned __int16 *)&v18[2 * v26])
              break;
            ++v26;
          }
          while (v26);
          if (v28)
            v16 = v23;
          else
            v16 = v16;
        }
        else
        {
          v16 = v23;
        }
      }
    }
LABEL_30:
    if ((v9 & ~v21) != 0)
    {
      v31 = v19;
      goto LABEL_88;
    }
    v29 = (uint8x8_t)vcnt_s8(v22);
    v29.i16[0] = vaddlv_u8(v29);
    v30 = v29.u32[0];
    if (morphun::util::gLogLevel <= 0)
    {
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v72, (char *)L"reinflect result candidate suffix: ");
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
        std::basic_string<char16_t>::__init_copy_ctor_external(&v71, __str.__r_.__value_.__l.__data_, __str.__r_.__value_.__l.__size_);
      else
        v71 = __str;
      v32 = SHIBYTE(v71.__r_.__value_.__r.__words[2]);
      v61 = (void *)v71.__r_.__value_.__r.__words[0];
      if ((v71.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v33 = &v71;
      else
        v33 = (std::basic_string<char16_t> *)v71.__r_.__value_.__r.__words[0];
      if ((v71.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v34 = HIBYTE(v71.__r_.__value_.__r.__words[2]);
      else
        v34 = v71.__r_.__value_.__l.__size_;
      std::basic_string<char16_t>::append(&v72, (const std::basic_string<char16_t>::value_type *)v33, v34);
      v73 = v72;
      memset(&v72, 0, sizeof(v72));
      v63 = v32;
      std::basic_string<char16_t>::append(&v73, L" , inflectionGrammemes: [", 0x19uLL);
      v74 = v73;
      memset(&v73, 0, sizeof(v73));
      morphun::dictionary::DictionaryMetaData_MMappedDictionary::getTypesOfValues(*(morphun::dictionary::DictionaryMetaData_MMappedDictionary **)(*(_QWORD *)(v20 + 32) + 184), v21, (uint64_t *)&v68);
      morphun::util::StringViewUtils::join(L", ", 2uLL, &v68, (uint64_t)__p);
      if ((v70 & 0x80u) == 0)
        v35 = __p;
      else
        v35 = (void **)__p[0];
      if ((v70 & 0x80u) == 0)
        v36 = v70;
      else
        v36 = (std::basic_string<char16_t>::size_type)__p[1];
      std::basic_string<char16_t>::append(&v74, (const std::basic_string<char16_t>::value_type *)v35, v36);
      v37 = v9;
      v75 = v74;
      memset(&v74, 0, sizeof(v74));
      std::basic_string<char16_t>::append(&v75, L"], Number of matches with existing grammemes: ", 0x2EuLL);
      v38 = v16;
      v76 = v75;
      memset(&v75, 0, sizeof(v75));
      std::to_string(&v66, v30);
      v39 = v19;
      v40 = v6;
      if ((v66.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v41 = &v66;
      else
        v41 = (std::string *)v66.__r_.__value_.__r.__words[0];
      if ((v66.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v42 = HIBYTE(v66.__r_.__value_.__r.__words[2]);
      else
        v42 = v66.__r_.__value_.__r.__words[1];
      morphun::util::StringViewUtils::to_u16string((const char *)v41, v42, &v67);
      v43 = SHIBYTE(v67.__r_.__value_.__r.__words[2]);
      v44 = (void *)v67.__r_.__value_.__r.__words[0];
      if ((v67.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v45 = &v67;
      else
        v45 = (std::basic_string<char16_t> *)v67.__r_.__value_.__r.__words[0];
      if ((v67.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v46 = HIBYTE(v67.__r_.__value_.__r.__words[2]);
      else
        v46 = v67.__r_.__value_.__l.__size_;
      std::basic_string<char16_t>::append(&v76, (const std::basic_string<char16_t>::value_type *)v45, v46);
      v77 = v76;
      memset(&v76, 0, sizeof(v76));
      if (morphun::util::gLogLevel <= 0)
      {
        if ((v77.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v47 = &v77;
        else
          v47 = (std::basic_string<char16_t> *)v77.__r_.__value_.__r.__words[0];
        morphun::util::logToTopOfStackLogger(0, 0, (uint64_t)v47);
      }
      if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v77.__r_.__value_.__l.__data_);
        if (v43 < 0)
          goto LABEL_93;
      }
      else
      {
        if ((v43 & 0x80000000) == 0)
          goto LABEL_67;
LABEL_93:
        operator delete(v44);
      }
LABEL_67:
      if (SHIBYTE(v66.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v66.__r_.__value_.__l.__data_);
      v6 = v40;
      v19 = v39;
      if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v76.__r_.__value_.__l.__data_);
      v16 = v38;
      if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v75.__r_.__value_.__l.__data_);
      v9 = v37;
      if ((char)v70 < 0)
        operator delete(__p[0]);
      v67.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v68;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v67);
      v10 = a3;
      if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v74.__r_.__value_.__l.__data_);
      if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v73.__r_.__value_.__l.__data_);
        if (v63 < 0)
          goto LABEL_95;
      }
      else
      {
        if ((v63 & 0x80000000) == 0)
          goto LABEL_79;
LABEL_95:
        operator delete(v61);
      }
LABEL_79:
      if (SHIBYTE(v72.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v72.__r_.__value_.__l.__data_);
    }
    v48 = v19;
    if (v19 <= v30)
    {
      v49 = (uint8x8_t)vcnt_s8((int8x8_t)v21);
      v49.i16[0] = vaddlv_u8(v49);
      v50 = v49.u32[0] - v62;
      v31 = v48;
      if (v48 != v30 || v64 > v50)
      {
        std::basic_string<char16_t>::operator=(&v80, &__str);
        v64 = v50;
        v31 = v30;
      }
    }
    else
    {
      v31 = v19;
    }
LABEL_88:
    v14 = v20;
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__str.__r_.__value_.__l.__data_);
    ++v15;
    v19 = v31;
    v18 = v65;
  }
  while (v15 < *(__int16 *)(v20 + 18));
  v8 = __dst;
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v6 >= v6 - (unsigned __int16)v16)
      v52 = v6 - (unsigned __int16)v16;
    else
      v52 = v6;
    if (v52 > 0x7FFFFFFFFFFFFFF7)
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    if (v52 >= 0xB)
    {
      v54 = (v52 & 0xFFFFFFFFFFFFFFFCLL) + 4;
      if ((v52 | 3) != 0xB)
        v54 = v52 | 3;
      p_dsta = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v54 + 1);
      __dsta.__r_.__value_.__l.__size_ = v52;
      __dsta.__r_.__value_.__r.__words[2] = v55 | 0x8000000000000000;
      __dsta.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)p_dsta;
    }
    else
    {
      *((_BYTE *)&__dsta.__r_.__value_.__s + 23) = v52;
      p_dsta = &__dsta;
      if (!v52)
      {
LABEL_109:
        p_dsta->__r_.__value_.__s.__data_[v52] = 0;
        if ((v80.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v56 = &v80;
        else
          v56 = (std::basic_string<char16_t> *)v80.__r_.__value_.__r.__words[0];
        if ((v80.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v57 = HIBYTE(v80.__r_.__value_.__r.__words[2]);
        else
          v57 = v80.__r_.__value_.__l.__size_;
        std::basic_string<char16_t>::append(&__dsta, (const std::basic_string<char16_t>::value_type *)v56, v57);
        *(std::basic_string<char16_t> *)__dst = __dsta;
        goto LABEL_116;
      }
    }
    memmove(p_dsta, __src, 2 * v52);
    goto LABEL_109;
  }
LABEL_104:
  *v8 = 0;
  v8[1] = 0;
  v8[2] = 0;
LABEL_116:
  if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v80.__r_.__value_.__l.__data_);
}

void sub_1CB511A5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50,uint64_t a51,void *a52,uint64_t a53,int a54,__int16 a55,char a56,char a57)
{
  uint64_t v57;

  if (*(char *)(v57 - 113) < 0)
    operator delete(*(void **)(v57 - 136));
  if (*(char *)(v57 - 89) < 0)
    operator delete(*(void **)(v57 - 112));
  _Unwind_Resume(exception_object);
}

_QWORD *morphun::dictionary::metadata::MarisaTrie<int>::getKey(std::basic_string<char16_t> *a1, marisa::Trie *this, int a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;

  a1->__r_.__value_.__r.__words[0] = 0;
  a1->__r_.__value_.__l.__size_ = 0;
  a1->__r_.__value_.__r.__words[2] = 0;
  v8 = 0u;
  v6 = 0u;
  v7 = (unint64_t)a3;
  marisa::Trie::reverse_lookup(this, (marisa::Agent **)&v6);
  morphun::dictionary::metadata::CharsetConverter::decode((uint64_t)this + 8, a1, *((uint64_t *)&v7 + 1), v8);
  return marisa::scoped_ptr<marisa::grimoire::trie::State>::~scoped_ptr((_QWORD *)&v8 + 1);
}

void sub_1CB511C34(_Unwind_Exception *a1)
{
  uint64_t v1;
  _QWORD *v2;

  marisa::scoped_ptr<marisa::grimoire::trie::State>::~scoped_ptr(v2);
  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(a1);
}

BOOL morphun::dictionary::Inflector_InflectionPattern::containsPartsOfSpeech(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4;
  BOOL v5;
  unsigned __int16 *v6;
  unint64_t v7;
  int IdentifierIfAvailable;
  uint64_t v9;

  v4 = *(char *)(a3 + 23);
  v5 = v4 < 0;
  if (v4 >= 0)
    v6 = (unsigned __int16 *)a3;
  else
    v6 = *(unsigned __int16 **)a3;
  if (v5)
    v7 = *(_QWORD *)(a3 + 8);
  else
    v7 = *(unsigned __int8 *)(a3 + 23);
  IdentifierIfAvailable = morphun::dictionary::metadata::StringArrayContainer::getIdentifierIfAvailable(a2 + 144, v6, v7);
  v9 = 1 << IdentifierIfAvailable;
  if (IdentifierIfAvailable < 0)
    v9 = 0;
  return (v9 & a1) != 0;
}

uint64_t **com::apple::siri::tokenizer::data::config_ar::getContent@<X0>(uint64_t **a1@<X8>)
{
  _OWORD v3[12];
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v3[8] = xmmword_1E8676968;
  v3[9] = *(_OWORD *)&off_1E8676978;
  v3[10] = xmmword_1E8676988;
  v3[11] = unk_1E8676998;
  v3[4] = xmmword_1E8676928;
  v3[5] = unk_1E8676938;
  v3[6] = xmmword_1E8676948;
  v3[7] = unk_1E8676958;
  v3[0] = xmmword_1E86768E8;
  v3[1] = *(_OWORD *)&off_1E86768F8;
  v3[2] = xmmword_1E8676908;
  v3[3] = *(_OWORD *)&off_1E8676918;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 8);
}

void morphun::transliteration::BidirectionalStringMap::~BidirectionalStringMap(morphun::transliteration::BidirectionalStringMap *this)
{
  morphun::transliteration::BidirectionalStringMap::~BidirectionalStringMap(this);
  JUMPOUT(0x1D179D2ECLL);
}

{
  uint64_t v2;
  marisa::grimoire::trie::LoudsTrie **v3;

  *(_QWORD *)this = &off_1E866A468;
  v2 = *((_QWORD *)this + 18);
  if (v2)
  {
    v3 = morphun::dictionary::metadata::MarisaTrie<int>::~MarisaTrie(v2);
    MEMORY[0x1D179D2EC](v3, 0x10B0C402125A480);
  }
  morphun::dictionary::metadata::MarisaTrie<int>::~MarisaTrie((uint64_t)this + 80);
  icu4cxx::UnicodeSet::~UnicodeSet((morphun::transliteration::BidirectionalStringMap *)((char *)this + 64));
  icu4cxx::UnicodeSet::~UnicodeSet((morphun::transliteration::BidirectionalStringMap *)((char *)this + 48));
  morphun::util::MemoryMappedFile::~MemoryMappedFile((morphun::transliteration::BidirectionalStringMap *)((char *)this + 8));
}

void morphun::transliteration::BidirectionalStringMap::getFromUnicodeSetPattern(std::basic_string<char16_t> *this, morphun::util::MemoryMappedFile *a2)
{
  uint64_t v3;
  unint64_t v5;
  std::basic_string<char16_t> *v6;
  std::basic_string<char16_t>::size_type v7;
  _QWORD *exception;
  std::basic_string<char16_t>::size_type v9;
  std::basic_string<char16_t> *v10;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t> v12;
  std::basic_string<char16_t> v13;
  std::basic_string<char16_t> v14;
  std::basic_string<char16_t> v15;
  std::basic_string<char16_t> v16;

  v3 = *((_QWORD *)a2 + 2);
  if ((unint64_t)(*((_QWORD *)a2 + 1) - v3) <= 3)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)4, &v13);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v14, "I", &v13, v9);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v15, &v14, (std::basic_string<char16_t>::value_type *)" ");
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(*((_DWORD *)a2 + 2) - *((_DWORD *)a2 + 4)), &v12);
    if ((v12.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v10 = &v12;
    else
      v10 = (std::basic_string<char16_t> *)v12.__r_.__value_.__r.__words[0];
    if ((v12.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v12.__r_.__value_.__r.__words[2]);
    else
      size = v12.__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::append(&v15, (const std::basic_string<char16_t>::value_type *)v10, size);
    v16 = v15;
    memset(&v15, 0, sizeof(v15));
    morphun::exception::Throwable::Throwable((uint64_t)exception, (__int128 *)&v16);
    *exception = &off_1E8672FA0;
  }
  v5 = *(unsigned int *)(*(_QWORD *)a2 + v3);
  *((_QWORD *)a2 + 2) = v3 + 4;
  v15.__r_.__value_.__r.__words[0] = 0;
  morphun::util::MemoryMappedFile::read<char const*>(a2, &v15, v5);
  memset(&v16, 0, sizeof(v16));
  this->__r_.__value_.__l.__size_ = 0;
  this->__r_.__value_.__r.__words[2] = 0;
  this->__r_.__value_.__r.__words[0] = 0;
  morphun::util::StringViewUtils::convert((uint64_t)&v16, (const char *)v15.__r_.__value_.__l.__data_, v5);
  if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v6 = &v16;
  else
    v6 = (std::basic_string<char16_t> *)v16.__r_.__value_.__r.__words[0];
  if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v7 = HIBYTE(v16.__r_.__value_.__r.__words[2]);
  else
    v7 = v16.__r_.__value_.__l.__size_;
  morphun::util::StringViewUtils::replace(this, (uint64_t)v6, v7, word_1CB72F6A0, 1uLL, &word_1CB73EB86, 0);
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v16.__r_.__value_.__l.__data_);
}

void sub_1CB511F8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  void *v29;
  void *v30;
  int v31;
  int v32;
  uint64_t v33;

  if (*(char *)(v33 - 57) < 0)
    operator delete(*(void **)(v33 - 80));
  if (v32 < 0)
    operator delete(v30);
  if (a29 < 0)
    operator delete(__p);
  if (a23 < 0)
    operator delete(a18);
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v31 & 1) == 0)
LABEL_14:
      _Unwind_Resume(a1);
  }
  else if (!v31)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v29);
  goto LABEL_14;
}

_QWORD *morphun::util::MemoryMappedFile::read<signed char>(_QWORD *result, _BYTE *a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *exception;
  std::basic_string<char16_t>::size_type v5;
  std::basic_string<char16_t> *v6;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t> v8;
  std::basic_string<char16_t> v9;
  std::basic_string<char16_t> v10;
  std::basic_string<char16_t> v11;
  std::basic_string<char16_t> v12;

  v2 = result;
  v3 = result[2];
  if (result[1] == v3)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)1, &v9);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v10, "I", &v9, v5);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v11, &v10, (std::basic_string<char16_t>::value_type *)" ");
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(*((_DWORD *)v2 + 2) - *((_DWORD *)v2 + 4)), &v8);
    if ((v8.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v6 = &v8;
    else
      v6 = (std::basic_string<char16_t> *)v8.__r_.__value_.__r.__words[0];
    if ((v8.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v8.__r_.__value_.__r.__words[2]);
    else
      size = v8.__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::append(&v11, (const std::basic_string<char16_t>::value_type *)v6, size);
    v12 = v11;
    memset(&v11, 0, sizeof(v11));
    morphun::exception::Throwable::Throwable((uint64_t)exception, (__int128 *)&v12);
    *exception = &off_1E8672FA0;
  }
  *a2 = *(_BYTE *)(*result + v3);
  ++result[2];
  return result;
}

void sub_1CB51218C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  void *v29;
  void *v30;
  int v31;
  int v32;
  uint64_t v33;

  if (*(char *)(v33 - 57) < 0)
    operator delete(*(void **)(v33 - 80));
  if (v32 < 0)
    operator delete(v30);
  if (a29 < 0)
    operator delete(__p);
  if (a23 < 0)
    operator delete(a18);
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v31 & 1) == 0)
LABEL_14:
      _Unwind_Resume(a1);
  }
  else if (!v31)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v29);
  goto LABEL_14;
}

uint64_t morphun::transliteration::BidirectionalStringMap::BidirectionalStringMap(uint64_t a1, const void **a2)
{
  morphun::util::MemoryMappedFile *v4;
  _QWORD *v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *exception;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  std::basic_string<char16_t>::size_type v17;
  std::basic_string<char16_t> *v18;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t> v20;
  std::basic_string<char16_t> v21;
  std::basic_string<char16_t> __s1;
  std::basic_string<char16_t> v23;
  std::basic_string<char16_t> __dst;

  *(_QWORD *)a1 = &off_1E866A468;
  v4 = (morphun::util::MemoryMappedFile *)(a1 + 8);
  v5 = (_QWORD *)morphun::util::MemoryMappedFile::MemoryMappedFile(a1 + 8, (uint64_t)a2);
  __s1.__r_.__value_.__r.__words[0] = 0;
  morphun::util::MemoryMappedFile::read<char const*>(v5, &__s1, 8uLL);
  if (strncmp((const char *)__s1.__r_.__value_.__l.__data_, "MORPHTM", 8uLL))
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::operator+<char16_t>((uint64_t)&v23, "I", a2);
    std::basic_string<char16_t>::append(&v23, L" has an invalid header", 0x16uLL);
    __dst = v23;
    memset(&v23, 0, sizeof(v23));
    morphun::exception::Throwable::Throwable((uint64_t)exception, (__int128 *)&__dst);
    *exception = &off_1E8672FA0;
  }
  __dst.__r_.__value_.__r.__words[0] = 0;
  morphun::util::MemoryMappedFile::read<long long>(v4, &__dst);
  if (__dst.__r_.__value_.__r.__words[0] != 1)
  {
    v13 = __cxa_allocate_exception(0x38uLL);
    std::operator+<char16_t>((uint64_t)&v23, "I", a2);
    std::basic_string<char16_t>::append(&v23, (const std::basic_string<char16_t>::value_type *)" ", 0x1CuLL);
    __dst = v23;
    memset(&v23, 0, sizeof(v23));
    morphun::exception::Throwable::Throwable((uint64_t)v13, (__int128 *)&__dst);
    *v13 = &off_1E86731F0;
  }
  __dst.__r_.__value_.__s.__data_[0] = 0;
  morphun::util::MemoryMappedFile::read<short>(v4, &__dst);
  if (__dst.__r_.__value_.__s.__data_[0] != 1)
  {
    v14 = __cxa_allocate_exception(0x38uLL);
    std::operator+<char16_t>((uint64_t)&v23, "I", a2);
    std::basic_string<char16_t>::append(&v23, L" was built for a different architecture", 0x27uLL);
    __dst = v23;
    memset(&v23, 0, sizeof(v23));
    morphun::exception::Throwable::Throwable((uint64_t)v14, (__int128 *)&__dst);
    *v14 = &off_1E8672FA0;
  }
  LOBYTE(__dst.__r_.__value_.__l.__data_) = 0;
  morphun::util::MemoryMappedFile::read<signed char>(v4, &__dst);
  if (LOBYTE(__dst.__r_.__value_.__l.__data_) - 3 <= 0xFFFFFFFD)
  {
    v15 = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "U");
    morphun::exception::Throwable::Throwable((uint64_t)v15, (__int128 *)&__dst);
    *v15 = &off_1E8672FA0;
  }
  *(_BYTE *)(a1 + 40) = __dst.__r_.__value_.__l.__data_;
  v6 = *(_QWORD *)(a1 + 24);
  if (*(_QWORD *)(a1 + 16) == v6)
  {
    v16 = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)1, &v21);
    std::basic_string<char16_t>::insert(&v21, (std::basic_string<char16_t>::size_type)"I", (const std::basic_string<char16_t>::value_type *)0x23, v17);
    __s1 = v21;
    memset(&v21, 0, sizeof(v21));
    std::basic_string<char16_t>::append(&__s1, (const std::basic_string<char16_t>::value_type *)" ", 0x13uLL);
    v23 = __s1;
    memset(&__s1, 0, sizeof(__s1));
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(*(_DWORD *)(a1 + 16) - *(_DWORD *)(a1 + 24)), &v20);
    if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v18 = &v20;
    else
      v18 = (std::basic_string<char16_t> *)v20.__r_.__value_.__r.__words[0];
    if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v20.__r_.__value_.__r.__words[2]);
    else
      size = v20.__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::append(&v23, (const std::basic_string<char16_t>::value_type *)v18, size);
    __dst = v23;
    memset(&v23, 0, sizeof(v23));
    morphun::exception::Throwable::Throwable((uint64_t)v16, (__int128 *)&__dst);
    *v16 = &off_1E8672FA0;
  }
  v7 = *(_BYTE *)(*(_QWORD *)(a1 + 8) + v6);
  *(_QWORD *)(a1 + 24) = v6 + 1;
  morphun::util::MemoryMappedFile::read<char const*>(v4, &__dst, 4uLL);
  *(_BYTE *)(a1 + 41) = v7;
  morphun::transliteration::BidirectionalStringMap::getFromUnicodeSetPattern(&__dst, v4);
  v8 = (_QWORD *)(a1 + 48);
  icu4cxx::UnicodeSet::UnicodeSet(a1 + 48);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  morphun::transliteration::BidirectionalStringMap::getFromUnicodeSetPattern(&__dst, v4);
  icu4cxx::UnicodeSet::UnicodeSet(a1 + 64);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  morphun::dictionary::metadata::MarisaTrie<int>::MarisaTrie(a1 + 80, v4);
  if (*(_BYTE *)(a1 + 40) == 2)
  {
    v9 = operator new();
    morphun::dictionary::metadata::MarisaTrie<int>::MarisaTrie(v9, v4);
    v10 = v9;
  }
  else
  {
    v9 = 0;
    v10 = a1 + 80;
  }
  *(_QWORD *)(a1 + 144) = v9;
  *(_QWORD *)(a1 + 152) = v10;
  if ((*(_BYTE *)(a1 + 41) & 1) != 0)
    MEMORY[0x1D179D94C](*v8, 2);
  MEMORY[0x1D179D970](*v8);
  return a1;
}

void sub_1CB512728(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  morphun::util::MemoryMappedFile *v30;
  void *v31;
  void *v32;
  int v33;
  int v34;
  uint64_t v35;

  if (*(char *)(v35 - 57) < 0)
    operator delete(*(void **)(v35 - 80));
  if (v34 < 0)
    operator delete(v31);
  if (a30 < 0)
    operator delete(__p);
  if (a23 < 0)
    operator delete(a18);
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v33 & 1) == 0)
    {
LABEL_14:
      morphun::util::MemoryMappedFile::~MemoryMappedFile(v30);
      _Unwind_Resume(a1);
    }
  }
  else if (!v33)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v32);
  goto LABEL_14;
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer_ArticleLookupFunction::getFeatureValue(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v8;
  unsigned __int16 *v9;
  morphun::grammar::synthesis::ItGrammarSynthesizer *PossessiveAdjectiveCount;
  _QWORD *v11;
  unsigned __int16 *v12;
  int PossessiveAdjectivePerson;
  unsigned __int16 *v14;
  uint64_t Count;
  unsigned __int16 *v16;
  uint64_t Gender;
  uint64_t v18;
  BOOL v19;
  uint64_t PossessiveAdjective;
  unint64_t v21;
  const void *v22;
  unint64_t v23;
  void **p_dst;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int16 *v28;
  unint64_t v29;
  uint64_t InflectedPossessiveAdjectiveValue;
  unint64_t v31;
  std::basic_string<char16_t>::size_type v32;
  const void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  std::basic_string<char16_t>::size_type size;
  int v38;
  const std::basic_string<char16_t>::value_type *v39;
  std::basic_string<char16_t>::size_type v40;
  std::basic_string<char16_t> *v41;
  uint64_t v42;
  int v43;
  unsigned __int16 *v44;
  unint64_t v45;
  morphun::grammar::synthesis::ItGrammarSynthesizer *v46;
  _BOOL8 v49;
  uint64_t v50;
  unint64_t v51;
  std::basic_string<char16_t> *v52;
  void **v53;
  int v54;
  std::basic_string<char16_t> v55;
  void *__p;
  std::basic_string<char16_t> v57;
  uint64_t v58;
  std::basic_string<char16_t> v59;
  unsigned __int16 *__dst;
  unint64_t v61;
  int64_t v62;

  if (a1[3])
  {
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 32))(a2);
    if (v6)
      return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*a1 + 32))(a1, a2, v6);
  }
  v8 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, a1[7]);
  if ((_QWORD *)(a3 + 8) == v8)
    v9 = 0;
  else
    v9 = (unsigned __int16 *)(v8 + 13);
  PossessiveAdjectiveCount = (morphun::grammar::synthesis::ItGrammarSynthesizer *)morphun::grammar::synthesis::ItGrammarSynthesizer::getPossessiveAdjectiveCount(v9);
  v11 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, a1[6]);
  if ((_QWORD *)(a3 + 8) == v11)
    v12 = 0;
  else
    v12 = (unsigned __int16 *)(v11 + 13);
  PossessiveAdjectivePerson = morphun::grammar::synthesis::ItGrammarSynthesizer::getPossessiveAdjectivePerson(v12);
  v14 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)a2 + 32))(a2, a1[4]);
  Count = morphun::grammar::synthesis::ItGrammarSynthesizer::getCount(v14);
  v16 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)a2 + 32))(a2, a1[5]);
  Gender = morphun::grammar::synthesis::ItGrammarSynthesizer::getGender(v16);
  v18 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
  if ((_DWORD)Count)
    v19 = (_DWORD)Gender == 0;
  else
    v19 = 1;
  if (v19)
  {
    if (!(_DWORD)Count)
    {
      morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction::determine(a1 + 8, v18, (uint64_t)&__p);
      Count = morphun::grammar::synthesis::ItGrammarSynthesizer::getCount((unsigned __int16 *)&__p);
      if (SHIBYTE(v57.__r_.__value_.__r.__words[1]) < 0)
        operator delete(__p);
    }
    if (!(_DWORD)Gender)
    {
      morphun::grammar::synthesis::ItGrammarSynthesizer_GenderLookupFunction::determine(a1 + 37, v18, (uint64_t)&__p);
      Gender = morphun::grammar::synthesis::ItGrammarSynthesizer::getGender((unsigned __int16 *)&__p);
      if (SHIBYTE(v57.__r_.__value_.__r.__words[1]) < 0)
        operator delete(__p);
    }
  }
  if ((_DWORD)PossessiveAdjectiveCount && PossessiveAdjectivePerson)
  {
    PossessiveAdjective = morphun::grammar::synthesis::ItGrammarSynthesizer::getPossessiveAdjective(PossessiveAdjectiveCount, PossessiveAdjectivePerson);
    if (v21 > 0x7FFFFFFFFFFFFFF7)
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    v22 = (const void *)PossessiveAdjective;
    v23 = v21;
    v54 = PossessiveAdjectivePerson;
    if (v21 >= 0xB)
    {
      v26 = (v21 & 0xFFFFFFFFFFFFFFFCLL) + 4;
      if ((v21 | 3) != 0xB)
        v26 = v21 | 3;
      p_dst = (void **)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v26 + 1);
      v61 = v23;
      v62 = v27 | 0x8000000000000000;
      __dst = (unsigned __int16 *)p_dst;
    }
    else
    {
      HIBYTE(v62) = v21;
      p_dst = (void **)&__dst;
      if (!v21)
      {
LABEL_32:
        *((_WORD *)p_dst + v23) = 0;
        if (v62 >= 0)
          v28 = (unsigned __int16 *)&__dst;
        else
          v28 = __dst;
        if (v62 >= 0)
          v29 = HIBYTE(v62);
        else
          v29 = v61;
        InflectedPossessiveAdjectiveValue = morphun::grammar::synthesis::ItGrammarSynthesizer::getInflectedPossessiveAdjectiveValue(v28, v29, Gender, Count);
        v32 = v31;
        if (v31 > 0x7FFFFFFFFFFFFFF7)
          std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
        v33 = (const void *)InflectedPossessiveAdjectiveValue;
        if (v31 >= 0xB)
        {
          v35 = (v31 & 0xFFFFFFFFFFFFFFFCLL) + 4;
          if ((v31 | 3) != 0xB)
            v35 = v31 | 3;
          v34 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v35 + 1);
          v59.__r_.__value_.__l.__size_ = v32;
          v59.__r_.__value_.__r.__words[2] = v36 | 0x8000000000000000;
          v59.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v34;
        }
        else
        {
          *((_BYTE *)&v59.__r_.__value_.__s + 23) = v31;
          v34 = &v59;
          if (!v31)
            goto LABEL_46;
        }
        memmove(v34, v33, 2 * v32);
LABEL_46:
        *((_WORD *)v34 + v32) = 0;
        size = HIBYTE(v59.__r_.__value_.__r.__words[2]);
        if ((v59.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          size = v59.__r_.__value_.__l.__size_;
        if (size)
          std::basic_string<char16_t>::append(&v59, &word_1CB73EE14, 1uLL);
        v38 = *(char *)(v18 + 23);
        if (v38 >= 0)
          v39 = (const std::basic_string<char16_t>::value_type *)v18;
        else
          v39 = *(const std::basic_string<char16_t>::value_type **)v18;
        if (v38 >= 0)
          v40 = *(unsigned __int8 *)(v18 + 23);
        else
          v40 = *(_QWORD *)(v18 + 8);
        v41 = std::basic_string<char16_t>::append(&v59, v39, v40);
        v42 = morphun::grammar::synthesis::ItGrammarSynthesizer::WORDSWITHPOSSESSIVEWITHOUTARTICLE((morphun::grammar::synthesis::ItGrammarSynthesizer *)v41);
        v43 = *(char *)(v18 + 23);
        if (v43 >= 0)
          v44 = (unsigned __int16 *)v18;
        else
          v44 = *(unsigned __int16 **)v18;
        if (v43 >= 0)
          v45 = *(unsigned __int8 *)(v18 + 23);
        else
          v45 = *(_QWORD *)(v18 + 8);
        v46 = (morphun::grammar::synthesis::ItGrammarSynthesizer *)std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(v42, v44, v45);
        v49 = (morphun::grammar::synthesis::ItGrammarSynthesizer *)(morphun::grammar::synthesis::ItGrammarSynthesizer::WORDSWITHPOSSESSIVEWITHOUTARTICLE(v46)
                                                                  + 8) == v46
           || ((_DWORD)Count != 1 || (_DWORD)PossessiveAdjectiveCount == 2) && v54 == 3;
        if (a1[3])
        {
          morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue((uint64_t)&__p, (__int128 *)&v59, a3);
          v25 = (_QWORD *)(*(uint64_t (**)(_QWORD *, void **, _BOOL8, uint64_t, uint64_t))(*a1 + 72))(a1, &__p, v49, Count, Gender);
        }
        else
        {
          morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue((uint64_t)&__p, (__int128 *)&v59, a3);
          v50 = (*(uint64_t (**)(_QWORD *, void **, _BOOL8, uint64_t, uint64_t))(*a1 + 72))(a1, &__p, v49, Count, Gender);
          v25 = (_QWORD *)operator new();
          if (v62 >= 0)
            v51 = HIBYTE(v62);
          else
            v51 = v61;
          v52 = &v55;
          std::basic_string<char16_t>::basic_string[abi:ne180100]((uint64_t)&v55, v51 + 1);
          if ((v55.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
            v52 = (std::basic_string<char16_t> *)v55.__r_.__value_.__r.__words[0];
          if (v51)
          {
            if (v62 >= 0)
              v53 = (void **)&__dst;
            else
              v53 = (void **)__dst;
            memmove(v52, v53, 2 * v51);
          }
          *(_DWORD *)((char *)&v52->__r_.__value_.__l.__data_ + 2 * v51) = 32;
          __p = &off_1E866AD28;
          if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0)
            std::basic_string<char16_t>::__init_copy_ctor_external(&v57, v55.__r_.__value_.__l.__data_, v55.__r_.__value_.__l.__size_);
          else
            v57 = v55;
          v58 = 0;
          morphun::dialog::SpeakableString::operator+(v50, (uint64_t)&__p, v25);
          if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v55.__r_.__value_.__l.__data_);
          if (v50)
            (*(void (**)(uint64_t))(*(_QWORD *)v50 + 16))(v50);
        }
        if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v59.__r_.__value_.__l.__data_);
        if (SHIBYTE(v62) < 0)
          operator delete(__dst);
        return (uint64_t)v25;
      }
    }
    memmove(p_dst, v22, 2 * v23);
    goto LABEL_32;
  }
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(*a1 + 72))(a1, a2, 1, Count, Gender);
}

void sub_1CB512E38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  if (a16 < 0)
    operator delete(__p);
  MEMORY[0x1D179D2EC](v32, 0x10B3C40F7FF9C27);
  if (v33)
    (*(void (**)(uint64_t))(*(_QWORD *)v33 + 16))(v33);
  if (a32 < 0)
    operator delete(a27);
  if (*(char *)(v34 - 81) < 0)
    operator delete(*(void **)(v34 - 104));
  _Unwind_Resume(a1);
}

_QWORD *morphun::grammar::synthesis::ItGrammarSynthesizer_ArticleLookupFunction::ItGrammarSynthesizer_ArticleLookupFunction(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  morphun::dialog::DefaultArticleLookupFunction *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  morphun::grammar::synthesis::ItGrammarSynthesizer *v17;
  unsigned __int16 *v18;
  uint64_t v19;
  uint64_t v20;
  morphun::grammar::synthesis::ItGrammarSynthesizer *v21;
  unsigned __int16 *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *__p[2];
  char v29;

  v8 = *(unsigned __int8 *)(a4 + 23);
  if ((v8 & 0x80u) != 0)
    v8 = *(_QWORD *)(a4 + 8);
  v9 = morphun::dialog::DefaultArticleLookupFunction::DefaultArticleLookupFunction((morphun::dialog::DefaultArticleLookupFunction *)a1, (const morphun::dialog::SemanticFeatureModel *)(a2 + 1), a3, v8 != 0, 0);
  v10 = *a2;
  *(_QWORD *)v9 = *a2;
  *(_QWORD *)((char *)v9 + *(_QWORD *)(v10 - 56)) = a2[4];
  *(_QWORD *)((char *)v9 + *(_QWORD *)(*(_QWORD *)v9 - 40)) = a2[5];
  *((_QWORD *)v9 + 3) = 0;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"count");
  v11 = a3 + 8;
  v12 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a3 + 8, (unsigned __int16 *)__p);
  v13 = a3 + 16;
  if (a3 + 16 == v12)
    v14 = 0;
  else
    v14 = *(_QWORD *)(v12 + 56);
  npc<morphun::dialog::SemanticFeature const>(v14);
  if (v29 < 0)
    operator delete(__p[0]);
  a1[4] = v14;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"gender");
  v15 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v11, (unsigned __int16 *)__p);
  if (v13 == v15)
    v16 = 0;
  else
    v16 = *(_QWORD *)(v15 + 56);
  v17 = (morphun::grammar::synthesis::ItGrammarSynthesizer *)npc<morphun::dialog::SemanticFeature const>(v16);
  if (v29 < 0)
    operator delete(__p[0]);
  a1[5] = v16;
  v18 = (unsigned __int16 *)morphun::grammar::synthesis::ItGrammarSynthesizer::POSSESSIVE_ADJECTIVE_PERSON(v17);
  v19 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v11, v18);
  if (v13 == v19)
    v20 = 0;
  else
    v20 = *(_QWORD *)(v19 + 56);
  v21 = (morphun::grammar::synthesis::ItGrammarSynthesizer *)npc<morphun::dialog::SemanticFeature const>(v20);
  a1[6] = v21;
  v22 = (unsigned __int16 *)morphun::grammar::synthesis::ItGrammarSynthesizer::POSSESSIVE_ADJECTIVE_COUNT(v21);
  v23 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v11, v22);
  if (v13 == v23)
    v24 = 0;
  else
    v24 = *(_QWORD *)(v23 + 56);
  a1[7] = npc<morphun::dialog::SemanticFeature const>(v24);
  morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction::ItGrammarSynthesizer_CountLookupFunction((morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction *)(a1 + 8));
  morphun::grammar::synthesis::ItGrammarSynthesizer_GenderLookupFunction::ItGrammarSynthesizer_GenderLookupFunction((morphun::grammar::synthesis::ItGrammarSynthesizer_GenderLookupFunction *)(a1 + 37));
  v25 = *(unsigned __int8 *)(a4 + 23);
  if ((v25 & 0x80u) != 0)
    v25 = *(_QWORD *)(a4 + 8);
  if (v25)
  {
    v26 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v11, (unsigned __int16 *)a4);
    if (v13 == v26)
      v25 = 0;
    else
      v25 = *(_QWORD *)(v26 + 56);
  }
  a1[3] = v25;
  return a1;
}

void sub_1CB5130F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction *v15;

  morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction::~ItGrammarSynthesizer_CountLookupFunction(v15);
  _Unwind_Resume(a1);
}

void sub_1CB513178(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::PtBrAnalyzer::~PtBrAnalyzer(void **this)
{
  *this = &off_1E8660DD8;
  morphun::analysis::Analyzer::~Analyzer((morphun::analysis::Analyzer *)this, (uint64_t *)&off_1E86690D0);
}

{
  *this = &off_1E8660DD8;
  morphun::analysis::Analyzer::~Analyzer((morphun::analysis::Analyzer *)this, (uint64_t *)&off_1E86690D0);
  JUMPOUT(0x1D179D2ECLL);
}

morphun::analysis::util::FilteringTokenFilter *morphun::analysis::PtBrAnalyzer::addStopFilter(morphun::analysis::PtBrAnalyzer *this, morphun::analysis::TokenStream *a2)
{
  morphun::analysis::util::FilteringTokenFilter *v4;

  v4 = (morphun::analysis::util::FilteringTokenFilter *)operator new();
  morphun::analysis::core::StopFilter::StopFilter(v4, (uint64_t)a2, *((_QWORD *)this + 8));
  return v4;
}

void sub_1CB513278(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10F1C40C2748A64);
  _Unwind_Resume(a1);
}

morphun::analysis::util::AttributeSource *morphun::analysis::PtBrAnalyzer::addWordNormalizationFilter(morphun::analysis::PtBrAnalyzer *this, morphun::analysis::TokenStream *a2)
{
  uint64_t v3;
  morphun::analysis::util::AttributeSource *v4;
  morphun::dictionary::DictionaryMetaData *v5;
  uint64_t i;
  morphun::analysis::util::AttributeSource *v7;
  std::basic_string<char16_t> *v9;
  std::basic_string<char16_t> *v10;
  std::basic_string<char16_t> *v11;
  std::basic_string<char16_t> **v12;
  char v13;
  void *__p[2];
  char v15;
  _QWORD v16[3];
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x1E0C80C00];
  v3 = operator new();
  *(_QWORD *)v3 = &off_1E866A910;
  v4 = morphun::analysis::util::AttributeSource::AttributeSource((morphun::analysis::util::AttributeSource *)v3, (morphun::analysis::util::AttributeSource *)&off_1E8669420, (uint64_t)a2);
  *(_QWORD *)v3 = &off_1E8661CE0;
  *(_QWORD *)(v3 + 96) = a2;
  v5 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::PORTUGUESE(v4);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"noun");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v16, "a");
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = &v9;
  v13 = 0;
  v9 = (std::basic_string<char16_t> *)operator new(0x30uLL);
  v10 = v9;
  v11 = v9 + 2;
  v10 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v11, (__int128 *)__p, &v17, v9);
  morphun::analysis::stemmer::DictionaryGenderedNounLemmatizer::DictionaryGenderedNounLemmatizer(v3 + 104, (uint64_t *)&off_1E8669440, v5, (uint64_t *)&v9);
  v12 = &v9;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v12);
  for (i = 0; i != -6; i -= 3)
  {
    if (SHIBYTE(v16[i + 2]) < 0)
      operator delete((void *)v16[i]);
  }
  *(_QWORD *)v3 = &off_1E8671CA0;
  *(_QWORD *)(v3 + 104) = &unk_1E8671D00;
  *(_OWORD *)(v3 + 432) = 0u;
  *(_OWORD *)(v3 + 448) = 0u;
  *(_QWORD *)(v3 + 432) = morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::CharTermAttribute>(v3);
  v7 = (morphun::analysis::util::AttributeSource *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)word_1CB73E630);
  morphun::analysis::filter::AmpersandToAndFilter::AmpersandToAndFilter(v7, v3, (__int128 *)__p);
  if (v15 < 0)
    operator delete(__p[0]);
  return v7;
}

void sub_1CB51347C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  uint64_t v19;

  if (a19 < 0)
    operator delete(__p);
  MEMORY[0x1D179D2EC](v19, 0x10F3C40C7D8954FLL);
  _Unwind_Resume(a1);
}

void sub_1CB513560()
{
  JUMPOUT(0x1CB513540);
}

_QWORD *morphun::util::MemoryMappedFile::read<long long *>(_QWORD *result, _QWORD *a2, unint64_t a3)
{
  int v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *exception;
  std::basic_string<char16_t>::size_type v7;
  std::basic_string<char16_t> *v8;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t> v10;
  std::basic_string<char16_t> v11;
  std::basic_string<char16_t> v12;
  std::basic_string<char16_t> v13;
  std::basic_string<char16_t> v14;

  v3 = a3;
  v4 = result;
  v5 = result[2];
  if (result[1] - v5 < a3)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)v3, &v11);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v12, "I", &v11, v7);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v13, &v12, (std::basic_string<char16_t>::value_type *)" ");
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(*((_DWORD *)v4 + 2) - *((_DWORD *)v4 + 4)), &v10);
    if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v8 = &v10;
    else
      v8 = (std::basic_string<char16_t> *)v10.__r_.__value_.__r.__words[0];
    if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v10.__r_.__value_.__r.__words[2]);
    else
      size = v10.__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::append(&v13, (const std::basic_string<char16_t>::value_type *)v8, size);
    v14 = v13;
    memset(&v13, 0, sizeof(v13));
    morphun::exception::Throwable::Throwable((uint64_t)exception, (__int128 *)&v14);
    *exception = &off_1E8672FA0;
  }
  *a2 = *result + v5;
  result[2] = v5 + a3;
  return result;
}

void sub_1CB5136A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  void *v29;
  void *v30;
  int v31;
  int v32;
  uint64_t v33;

  if (*(char *)(v33 - 57) < 0)
    operator delete(*(void **)(v33 - 80));
  if (v32 < 0)
    operator delete(v30);
  if (a29 < 0)
    operator delete(__p);
  if (a23 < 0)
    operator delete(a18);
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v31 & 1) == 0)
LABEL_14:
      _Unwind_Resume(a1);
  }
  else if (!v31)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v29);
  goto LABEL_14;
}

_QWORD *morphun::util::MemoryMappedFile::read<int *>(_QWORD *result, _QWORD *a2, unint64_t a3)
{
  int v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *exception;
  std::basic_string<char16_t>::size_type v7;
  std::basic_string<char16_t> *v8;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t> v10;
  std::basic_string<char16_t> v11;
  std::basic_string<char16_t> v12;
  std::basic_string<char16_t> v13;
  std::basic_string<char16_t> v14;

  v3 = a3;
  v4 = result;
  v5 = result[2];
  if (result[1] - v5 < a3)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)v3, &v11);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v12, "I", &v11, v7);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v13, &v12, (std::basic_string<char16_t>::value_type *)" ");
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(*((_DWORD *)v4 + 2) - *((_DWORD *)v4 + 4)), &v10);
    if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v8 = &v10;
    else
      v8 = (std::basic_string<char16_t> *)v10.__r_.__value_.__r.__words[0];
    if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v10.__r_.__value_.__r.__words[2]);
    else
      size = v10.__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::append(&v13, (const std::basic_string<char16_t>::value_type *)v8, size);
    v14 = v13;
    memset(&v13, 0, sizeof(v13));
    morphun::exception::Throwable::Throwable((uint64_t)exception, (__int128 *)&v14);
    *exception = &off_1E8672FA0;
  }
  *a2 = *result + v5;
  result[2] = v5 + a3;
  return result;
}

void sub_1CB513884(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  void *v29;
  void *v30;
  int v31;
  int v32;
  uint64_t v33;

  if (*(char *)(v33 - 57) < 0)
    operator delete(*(void **)(v33 - 80));
  if (v32 < 0)
    operator delete(v30);
  if (a29 < 0)
    operator delete(__p);
  if (a23 < 0)
    operator delete(a18);
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v31 & 1) == 0)
LABEL_14:
      _Unwind_Resume(a1);
  }
  else if (!v31)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v29);
  goto LABEL_14;
}

void morphun::dictionary::Inflector_MMappedDictionary::~Inflector_MMappedDictionary(morphun::dictionary::Inflector_MMappedDictionary *this)
{
  uint64_t v2;
  uint64_t v3;

  if (*((_BYTE *)this + 392))
  {
    v2 = *((_QWORD *)this + 47);
    if (v2)
      MEMORY[0x1D179D2D4](v2, 0x1000C8000313F17);
  }
  morphun::dictionary::metadata::MarisaTrie<int>::~MarisaTrie((uint64_t)this + 304);
  morphun::dictionary::metadata::MarisaTrie<int>::~MarisaTrie((uint64_t)this + 240);
  if (*((_BYTE *)this + 216))
  {
    v3 = *((_QWORD *)this + 25);
    if (v3)
      MEMORY[0x1D179D2D4](v3, 0x1000C8000313F17);
  }
  marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr((marisa::grimoire::trie::LoudsTrie **)this + 19);
}

uint64_t morphun::dictionary::Inflector_MMappedDictionary::getInflectionPattern(morphun::dictionary::Inflector_MMappedDictionary *this, uint64_t a2, int a3)
{
  int v6;
  unint64_t v7;
  __int16 Value;
  unint64_t v9;
  int v10;
  unint64_t v11;
  int v12;
  uint64_t result;
  uint64_t v14;

  v6 = morphun::dictionary::metadata::CompressedArray<int>::read(a2 + 264, a3);
  v7 = morphun::dictionary::metadata::CompressedArray<long long>::read(a2 + 192, v6);
  Value = morphun::dictionary::metadata::CompressedArray<short>::extractValue(v7, *(unsigned __int8 *)(a2 + 403));
  v9 = v7 >> *(_BYTE *)(a2 + 403);
  v10 = morphun::dictionary::metadata::CompressedArray<short>::extractValue(v9, *(unsigned __int8 *)(a2 + 402));
  v11 = v9 >> *(_BYTE *)(a2 + 402);
  v12 = morphun::dictionary::metadata::CompressedArray<short>::extractValue(v11, *(unsigned __int8 *)(a2 + 401));
  result = morphun::dictionary::metadata::CompressedArray<int>::extractValue(v11 >> *(_BYTE *)(a2 + 401), 0, *(unsigned __int8 *)(a2 + 400));
  v14 = *(_QWORD *)(*(_QWORD *)(a2 + 136) + 8 * v12);
  *(_DWORD *)this = a3;
  *((_DWORD *)this + 1) = result;
  *((_QWORD *)this + 1) = v14;
  *((_WORD *)this + 8) = v10;
  *((_WORD *)this + 9) = Value;
  *((_DWORD *)this + 5) = v6 + 1;
  *((_DWORD *)this + 6) = v6 + 1 + v10;
  *((_QWORD *)this + 4) = a2;
  *((_QWORD *)this + 5) = a2 + 144;
  return result;
}

uint64_t morphun::dictionary::metadata::CompressedArray<short>::extractValue(__int16 a1, unsigned int a2)
{
  _QWORD *exception;
  __int128 __dst;

  if (a2 >= 0x41)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"Illegal start or length value");
    morphun::exception::Throwable::Throwable((uint64_t)exception, &__dst);
    *exception = &off_1E86731C0;
  }
  return (__int16)(a1 & ~(unsigned __int16)(-1 << a2));
}

void sub_1CB513B3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

uint64_t morphun::grammar::synthesis::EnGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::EnGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  morphun::grammar::synthesis::EnGrammarSynthesizer_CountLookupFunction *v6;
  uint64_t v7;
  morphun::util::LocaleUtils *String;
  uint64_t v9;
  _QWORD *v10;
  int32_t v13;
  const UChar *v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t **v19;
  uint64_t v20;
  int v21;
  int v22;
  morphun::util::LocaleUtils *v24;
  const morphun::util::ULocale *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  std::basic_string<char16_t>::size_type v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  std::basic_string<char16_t>::size_type v34;
  uint64_t v35;
  std::basic_string<char16_t>::size_type v36;
  uint64_t v37;
  std::basic_string<char16_t>::size_type v38;
  std::basic_string<char16_t> *v39;
  uint64_t v40;
  std::basic_string<char16_t>::size_type v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  morphun::grammar::synthesis::GrammemeConstants *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t i;
  _QWORD *v69;
  morphun::util::LocaleUtils *v70;
  morphun::dictionary::Inflector *v71;
  const morphun::util::ULocale *v72;
  morphun::util::LocaleUtils *Inflector;
  morphun::TokenizerFactory *v74;
  const morphun::util::ULocale *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  const morphun::dialog::SemanticFeature *v79;
  uint64_t DefaultFeatureFunction;
  morphun::grammar::synthesis::GrammemeConstants *v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  uint64_t *BinaryProperties;
  morphun::grammar::synthesis::GrammemeConstants *v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t result;
  morphun::grammar::synthesis::GrammemeConstants *v105;
  morphun::grammar::synthesis::EnGrammarSynthesizer *v106;
  char **v107;
  char *v108[2];
  uint64_t v109[3];
  void *__p;
  char *v111;
  uint64_t v112;
  void *v113[2];
  char v114;
  std::basic_string<char16_t> v115;
  __int128 v116;
  std::basic_string<char16_t> *v117;
  int v118;
  int v119;
  std::basic_string<char16_t> *p_dst;
  unint64_t v121;
  uint64_t v122;
  std::basic_string<char16_t> *__dst;
  std::basic_string<char16_t> *v124;
  const char *v125;
  uint64_t v126;
  morphun::util::LocaleUtils *v127;
  _QWORD *v128;
  unint64_t v129;
  _QWORD *v130;
  _QWORD *v131;
  uint64_t v132;

  v132 = *MEMORY[0x1E0C80C00];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "i");
  v3 = (_QWORD *)operator new();
  morphun::grammar::synthesis::EnGrammarSynthesizer_ArticleLookupFunction::EnGrammarSynthesizer_ArticleLookupFunction(v3, (uint64_t)this, 0);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v3 + *(_QWORD *)(*v3 - 56)));
  if (SHIBYTE(v125) < 0)
    operator delete(__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"withIndefArticle");
  v4 = (_QWORD *)operator new();
  morphun::grammar::synthesis::EnGrammarSynthesizer_ArticleLookupFunction::EnGrammarSynthesizer_ArticleLookupFunction(v4, (uint64_t)this, "i");
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v4 + *(_QWORD *)(*v4 - 56)));
  if (SHIBYTE(v125) < 0)
    operator delete(__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"defArticle");
  v5 = (_QWORD *)operator new();
  morphun::grammar::synthesis::EnGrammarSynthesizer_ArticleLookupFunction::EnGrammarSynthesizer_ArticleLookupFunction(v5, (uint64_t)this, 0);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v5 + *(_QWORD *)(*v5 - 56)));
  if (SHIBYTE(v125) < 0)
    operator delete(__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"count");
  v6 = (morphun::grammar::synthesis::EnGrammarSynthesizer_CountLookupFunction *)operator new();
  morphun::grammar::synthesis::EnGrammarSynthesizer_CountLookupFunction::EnGrammarSynthesizer_CountLookupFunction(v6);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::grammar::synthesis::EnGrammarSynthesizer_CountLookupFunction *)((char *)v6+ *(_QWORD *)(*(_QWORD *)v6 - 56)));
  if (SHIBYTE(v125) < 0)
    operator delete(__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, "c");
  v7 = operator new();
  *(_QWORD *)v7 = &off_1E866E8C8;
  *(_QWORD *)(v7 + 16) = 0;
  *(_QWORD *)(v7 + 8) = v7 + 16;
  *(_QWORD *)(v7 + 24) = 0;
  String = (morphun::util::LocaleUtils *)morphun::resources::DataResource::getString(qword_1CB64290A, 0x4BuLL, 0);
  if (*(_WORD *)String)
  {
    v9 = 0;
    do
      v10 = (_QWORD *)(v9 + 1);
    while (*((unsigned __int16 *)String + ++v9));
  }
  else
  {
    v10 = 0;
  }
  v106 = this;
  __dst = 0;
  v124 = 0;
  v125 = "\n";
  v126 = 1;
  v127 = String;
  v128 = v10;
  v129 = v10;
  if ((int)v10 >= 1)
    String = (morphun::util::LocaleUtils *)morphun::util::DelimitedStringIterator::getNext((UChar *)&__dst);
  while (SHIDWORD(v129) < (int)v129 || v124 != 0)
  {
    *(_OWORD *)&v115.__r_.__value_.__l.__data_ = 0uLL;
    v115.__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)L",";
    *(_QWORD *)&v116 = 1;
    *((_QWORD *)&v116 + 1) = __dst;
    v117 = v124;
    v118 = (int)v124;
    v119 = 0;
    if ((int)v124 < 1)
    {
      v13 = 0;
      v14 = 0;
    }
    else
    {
      String = (morphun::util::LocaleUtils *)morphun::util::DelimitedStringIterator::getNext((UChar *)&v115);
      v13 = v115.__r_.__value_.__r.__words[1];
      v14 = (const UChar *)v115.__r_.__value_.__r.__words[0];
    }
    p_dst = 0;
    v121 = 0;
    v122 = 0;
    v15 = morphun::util::LocaleUtils::ROOT(String);
    morphun::util::StringViewUtils::lowercase((uint64_t)&p_dst, v14, v13, v15);
    v16 = HIBYTE(v122);
    v17 = v121;
    if (v122 >= 0)
      v17 = HIBYTE(v122);
    if (v17 >= 2)
    {
      v18 = 0;
      v19 = (uint64_t **)p_dst;
      if (v122 >= 0)
        v19 = (uint64_t **)&p_dst;
      v20 = (uint64_t)v19 + 2 * v17 - 4;
      do
      {
        v21 = *(unsigned __int16 *)(v20 + v18 * 2);
        v22 = (unsigned __int16)aS_3[v18];
      }
      while (v22 == v21 && v18++ != 1);
      if (v22 == v21)
      {
        std::__tree<std::basic_string<char16_t>>::__emplace_unique_key_args<std::basic_string<char16_t>,std::basic_string<char16_t> const&>((uint64_t **)(v7 + 8), (unsigned __int16 *)&p_dst, (uint64_t)&p_dst);
        v16 = HIBYTE(v122);
      }
    }
    if (v16 < 0)
      operator delete(p_dst);
    String = morphun::util::DelimitedStringIterator::operator++((morphun::util::DelimitedStringIterator *)&__dst);
  }
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__p, (morphun::dialog::DefaultFeatureFunction *)v7);
  if (SHIBYTE(v112) < 0)
    operator delete(__p);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "d");
  v24 = (morphun::util::LocaleUtils *)operator new();
  v25 = (const morphun::util::ULocale *)morphun::util::LocaleUtils::ENGLISH(v24);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&p_dst, (char *)L"defArticle");
  std::set<std::basic_string<char16_t>>::set[abi:ne180100]((uint64_t *)&v115, (unsigned __int16 *)&p_dst, 1);
  v111 = 0;
  v112 = 0;
  __p = &v111;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v113, "i");
  std::set<std::basic_string<char16_t>>::set[abi:ne180100](v109, (unsigned __int16 *)v113, 1);
  v108[0] = 0;
  v108[1] = 0;
  v107 = v108;
  morphun::dialog::ArticleDetectionFunction::ArticleDetectionFunction((uint64_t)v24, v25, (uint64_t)&v115, (uint64_t)&__p, (uint64_t)v109, (uint64_t)&v107);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&__dst, (morphun::util::LocaleUtils *)((char *)v24 + *(_QWORD *)(*(_QWORD *)v24 - 56)));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(v108[0]);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy((char *)v109[1]);
  if (v114 < 0)
    operator delete(v113[0]);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(v111);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy((char *)v115.__r_.__value_.__l.__size_);
  if (SHIBYTE(v122) < 0)
    operator delete(p_dst);
  if (SHIBYTE(v125) < 0)
    operator delete(__dst);
  v26 = operator new();
  *(_QWORD *)v26 = &off_1E866E2C8;
  *(_OWORD *)(v26 + 8) = 0u;
  *(_OWORD *)(v26 + 24) = 0u;
  v105 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::ENGLISH((morphun::util::LocaleUtils *)v26);
  v27 = morphun::grammar::synthesis::GrammemeConstants::POS_NOUN(v105);
  v28 = *(char *)(v27 + 23);
  if (v28 >= 0)
    v29 = v27;
  else
    v29 = *(_QWORD *)v27;
  if (v28 >= 0)
    v30 = *(unsigned __int8 *)(v27 + 23);
  else
    v30 = *(_QWORD *)(v27 + 8);
  v31 = morphun::grammar::synthesis::GrammemeConstants::POS_ADJECTIVE((morphun::grammar::synthesis::GrammemeConstants *)v27);
  v32 = *(char *)(v31 + 23);
  if (v32 >= 0)
    v33 = v31;
  else
    v33 = *(_QWORD *)v31;
  if (v32 >= 0)
    v34 = *(unsigned __int8 *)(v31 + 23);
  else
    v34 = *(_QWORD *)(v31 + 8);
  v35 = morphun::grammar::synthesis::GrammemeConstants::POS_VERB((morphun::grammar::synthesis::GrammemeConstants *)v31);
  v36 = *(unsigned __int8 *)(v35 + 23);
  v37 = *(_QWORD *)v35;
  v38 = *(_QWORD *)(v35 + 8);
  v39 = (std::basic_string<char16_t> *)operator new(0x30uLL);
  v124 = v39 + 2;
  v125 = (const char *)&v39[2];
  if ((v36 & 0x80u) == 0)
    v40 = v35;
  else
    v40 = v37;
  if ((v36 & 0x80u) == 0)
    v41 = v36;
  else
    v41 = v38;
  v39->__r_.__value_.__r.__words[0] = v29;
  v39->__r_.__value_.__l.__size_ = v30;
  v39->__r_.__value_.__r.__words[2] = v33;
  v39[1].__r_.__value_.__r.__words[0] = v34;
  v39[1].__r_.__value_.__l.__size_ = v40;
  v39[1].__r_.__value_.__r.__words[2] = v41;
  __dst = v39;
  v42 = morphun::grammar::synthesis::GrammemeConstants::PERSON_THIRD((morphun::grammar::synthesis::GrammemeConstants *)v39);
  v43 = *(char *)(v42 + 23);
  if (v43 >= 0)
    v44 = v42;
  else
    v44 = *(_QWORD *)v42;
  if (v43 >= 0)
    v45 = *(unsigned __int8 *)(v42 + 23);
  else
    v45 = *(_QWORD *)(v42 + 8);
  v46 = morphun::grammar::synthesis::GrammemeConstants::PERSON_FIRST((morphun::grammar::synthesis::GrammemeConstants *)v42);
  v47 = *(char *)(v46 + 23);
  if (v47 >= 0)
    v48 = v46;
  else
    v48 = *(_QWORD *)v46;
  if (v47 >= 0)
    v49 = *(unsigned __int8 *)(v46 + 23);
  else
    v49 = *(_QWORD *)(v46 + 8);
  v50 = morphun::grammar::synthesis::GrammemeConstants::PERSON_SECOND((morphun::grammar::synthesis::GrammemeConstants *)v46);
  v51 = *(unsigned __int8 *)(v50 + 23);
  v53 = *(_QWORD *)v50;
  v52 = *(_QWORD *)(v50 + 8);
  v126 = 0;
  v127 = 0;
  v128 = 0;
  v54 = (morphun::grammar::synthesis::GrammemeConstants *)operator new(0x30uLL);
  v127 = (morphun::grammar::synthesis::GrammemeConstants *)((char *)v54 + 48);
  v128 = (_QWORD *)((char *)v54 + 48);
  if ((v51 & 0x80u) == 0)
    v55 = v50;
  else
    v55 = v53;
  if ((v51 & 0x80u) == 0)
    v56 = v51;
  else
    v56 = v52;
  *(_QWORD *)v54 = v44;
  *((_QWORD *)v54 + 1) = v45;
  *((_QWORD *)v54 + 2) = v48;
  *((_QWORD *)v54 + 3) = v49;
  *((_QWORD *)v54 + 4) = v55;
  *((_QWORD *)v54 + 5) = v56;
  v126 = (uint64_t)v54;
  v57 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v54);
  v58 = *(char *)(v57 + 23);
  if (v58 >= 0)
    v59 = v57;
  else
    v59 = *(_QWORD *)v57;
  if (v58 >= 0)
    v60 = *(unsigned __int8 *)(v57 + 23);
  else
    v60 = *(_QWORD *)(v57 + 8);
  v61 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v57);
  v62 = *(unsigned __int8 *)(v61 + 23);
  v64 = *(_QWORD *)v61;
  v63 = *(_QWORD *)(v61 + 8);
  v129 = 0;
  v130 = 0;
  v131 = 0;
  v65 = operator new(0x20uLL);
  v130 = v65 + 4;
  v131 = v65 + 4;
  if ((v62 & 0x80u) == 0)
    v66 = v61;
  else
    v66 = v64;
  if ((v62 & 0x80u) == 0)
    v67 = v62;
  else
    v67 = v63;
  *v65 = v59;
  v65[1] = v60;
  v65[2] = v66;
  v65[3] = v67;
  v129 = (unint64_t)v65;
  memset(&v115, 0, sizeof(v115));
  p_dst = &v115;
  LOBYTE(v121) = 0;
  v115.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x48uLL);
  v115.__r_.__value_.__l.__size_ = v115.__r_.__value_.__r.__words[0];
  v115.__r_.__value_.__r.__words[2] = v115.__r_.__value_.__r.__words[0] + 72;
  v115.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<std::u16string_view>>,std::vector<std::u16string_view> const*,std::vector<std::u16string_view> const*,std::vector<std::u16string_view>*>((uint64_t)&v115.__r_.__value_.__r.__words[2], (uint64_t)&__dst, (uint64_t)&v132, v115.__r_.__value_.__l.__data_);
  p_dst = 0;
  v121 = 0;
  v122 = 0;
  morphun::dialog::DictionaryLookupInflector::DictionaryLookupInflector((uint64_t *)(v26 + 40), v105, (uint64_t)&v115, (uint64_t **)&p_dst, 1);
  __p = &p_dst;
  std::vector<std::vector<std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  p_dst = &v115;
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_dst);
  for (i = 0; i != -9; i -= 3)
  {
    v69 = *(_QWORD **)((char *)&v129 + i * 8);
    if (v69)
    {
      (&v130)[i] = v69;
      operator delete(v69);
    }
  }
  *(_QWORD *)(v26 + 272) = *(_QWORD *)(v26 + 48);
  *(_OWORD *)(v26 + 280) = 0u;
  *(_OWORD *)(v26 + 296) = 0u;
  icu4cxx::UnicodeSet::UnicodeSet(v26 + 312);
  v70 = (morphun::util::LocaleUtils *)icu4cxx::UnicodeSet::UnicodeSet(v26 + 328);
  v71 = (morphun::dictionary::Inflector *)morphun::util::LocaleUtils::ENGLISH(v70);
  Inflector = (morphun::util::LocaleUtils *)morphun::dictionary::Inflector::getInflector(v71, v72);
  *(_QWORD *)(v26 + 344) = Inflector;
  v74 = (morphun::TokenizerFactory *)morphun::util::LocaleUtils::ENGLISH(Inflector);
  *(_QWORD *)(v26 + 352) = morphun::TokenizerFactory::createTokenizer(v74, v75);
  morphun::dialog::StaticArticleLookupFunction::StaticArticleLookupFunction(v26 + 360, (uint64_t)v106, (char *)L"defArticle", "t");
  v76 = *(_QWORD *)(*(_QWORD *)(v26 + 360) - 56);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"withIndefArticle");
  v77 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)v106 + 8, (unsigned __int16 *)&__dst);
  v78 = (char *)v106 + 16;
  if ((morphun::grammar::synthesis::EnGrammarSynthesizer *)((char *)v106 + 16) == (morphun::grammar::synthesis::EnGrammarSynthesizer *)v77)
    v79 = 0;
  else
    v79 = *(const morphun::dialog::SemanticFeature **)(v77 + 56);
  npc<morphun::dialog::SemanticFeature const>((uint64_t)v79);
  DefaultFeatureFunction = morphun::dialog::SemanticFeatureModel::getDefaultFeatureFunction(v106, v79);
  v81 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::dialog::DefinitenessDisplayFunction::DefinitenessDisplayFunction((_QWORD *)(v26 + 440), (uint64_t)v106, v26 + 360 + v76, L"defArticle", 10, DefaultFeatureFunction, (unsigned __int16 *)"i", 12);
  if (SHIBYTE(v125) < 0)
    operator delete(__dst);
  v82 = *(_QWORD *)(v26 + 272);
  v83 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(v81);
  if (*(char *)(v83 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v115, *(const std::basic_string<char16_t>::value_type **)v83, *(_QWORD *)(v83 + 8));
  }
  else
  {
    v84 = *(_OWORD *)v83;
    v115.__r_.__value_.__r.__words[2] = *(_QWORD *)(v83 + 16);
    *(_OWORD *)&v115.__r_.__value_.__l.__data_ = v84;
  }
  __dst = 0;
  v124 = 0;
  v125 = 0;
  p_dst = (std::basic_string<char16_t> *)&__dst;
  LOBYTE(v121) = 0;
  __dst = (std::basic_string<char16_t> *)operator new(0x18uLL);
  v124 = __dst;
  v125 = (const char *)&__dst[1];
  v124 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v125, (__int128 *)&v115, &v116, __dst);
  BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v82, (uint64_t *)(v26 + 280), (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)BinaryProperties);
  p_dst = (std::basic_string<char16_t> *)&__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_dst);
  if (SHIBYTE(v115.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v115.__r_.__value_.__l.__data_);
  v87 = *(_QWORD *)(v26 + 272);
  v88 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v86);
  if (*(char *)(v88 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v115, *(const std::basic_string<char16_t>::value_type **)v88, *(_QWORD *)(v88 + 8));
  }
  else
  {
    v89 = *(_OWORD *)v88;
    v115.__r_.__value_.__r.__words[2] = *(_QWORD *)(v88 + 16);
    *(_OWORD *)&v115.__r_.__value_.__l.__data_ = v89;
  }
  __dst = 0;
  v124 = 0;
  v125 = 0;
  p_dst = (std::basic_string<char16_t> *)&__dst;
  LOBYTE(v121) = 0;
  __dst = (std::basic_string<char16_t> *)operator new(0x18uLL);
  v124 = __dst;
  v125 = (const char *)&__dst[1];
  v124 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v125, (__int128 *)&v115, &v116, __dst);
  v90 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v87, (uint64_t *)(v26 + 288), (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v90);
  p_dst = (std::basic_string<char16_t> *)&__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_dst);
  if (SHIBYTE(v115.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v115.__r_.__value_.__l.__data_);
  v91 = *(_QWORD *)(v26 + 272);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v115, (char *)L"adposition");
  __dst = 0;
  v124 = 0;
  v125 = 0;
  p_dst = (std::basic_string<char16_t> *)&__dst;
  LOBYTE(v121) = 0;
  __dst = (std::basic_string<char16_t> *)operator new(0x18uLL);
  v124 = __dst;
  v125 = (const char *)&__dst[1];
  v124 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v125, (__int128 *)&v115, &v116, __dst);
  v92 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v91, (uint64_t *)(v26 + 296), (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v92);
  p_dst = (std::basic_string<char16_t> *)&__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_dst);
  if (SHIBYTE(v115.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v115.__r_.__value_.__l.__data_);
  v93 = *(_QWORD *)(v26 + 272);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v115, "a");
  __dst = 0;
  v124 = 0;
  v125 = 0;
  p_dst = (std::basic_string<char16_t> *)&__dst;
  LOBYTE(v121) = 0;
  __dst = (std::basic_string<char16_t> *)operator new(0x18uLL);
  v124 = __dst;
  v125 = (const char *)&__dst[1];
  v124 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v125, (__int128 *)&v115, &v116, __dst);
  v94 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v93, (uint64_t *)(v26 + 304), (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v94);
  p_dst = (std::basic_string<char16_t> *)&__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_dst);
  if (SHIBYTE(v115.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v115.__r_.__value_.__l.__data_);
  MEMORY[0x1D179D970](*(_QWORD *)(v26 + 312));
  MEMORY[0x1D179D970](*(_QWORD *)(v26 + 328));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"count");
  v95 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)v106 + 8, (unsigned __int16 *)&__dst);
  if (v78 == (char *)v95)
    v96 = 0;
  else
    v96 = *(_QWORD *)(v95 + 56);
  *(_QWORD *)(v26 + 8) = v96;
  if (SHIBYTE(v125) < 0)
    operator delete(__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "c");
  v97 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)v106 + 8, (unsigned __int16 *)&__dst);
  if (v78 == (char *)v97)
    v98 = 0;
  else
    v98 = *(_QWORD *)(v97 + 56);
  *(_QWORD *)(v26 + 16) = v98;
  if (SHIBYTE(v125) < 0)
    operator delete(__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"speak");
  v99 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)v106 + 8, (unsigned __int16 *)&__dst);
  if (v78 == (char *)v99)
    v100 = 0;
  else
    v100 = *(_QWORD *)(v99 + 56);
  *(_QWORD *)(v26 + 24) = v100;
  if (SHIBYTE(v125) < 0)
    operator delete(__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "p");
  v101 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)v106 + 8, (unsigned __int16 *)&__dst);
  if (v78 == (char *)v101)
    v102 = 0;
  else
    v102 = *(_QWORD *)(v101 + 56);
  *(_QWORD *)(v26 + 32) = v102;
  if (SHIBYTE(v125) < 0)
    operator delete(__dst);
  v103 = *(_QWORD *)(*(_QWORD *)v26 - 56);
  result = *((_QWORD *)v106 + 29);
  if (result)
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
  *((_QWORD *)v106 + 29) = v26 + v103;
  return result;
}

void sub_1CB5147A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, morphun::dialog::DefinitenessDisplayFunction *a10, morphun::dialog::DictionaryLookupInflector *a11, uint64_t a12, icu4cxx::UnicodeSet *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38)
{
  uint64_t v38;

  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*(char **)(v38 + 16));
  MEMORY[0x1D179D2EC](v38, 0x10A1C40A4A8B666);
  if (a26 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t morphun::lang::StringFilterUtil::LATIN_SCRIPT(morphun::lang::StringFilterUtil *this)
{
  unsigned __int8 v1;
  _QWORD *v3;

  if ((v1 & 1) == 0
  {
    v3 = (_QWORD *)operator new();
    icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v3);
    MEMORY[0x1D179D970](*v3);
    morphun::lang::StringFilterUtil::LATIN_SCRIPT(void)::LATIN_SCRIPT_ = (uint64_t)v3;
  }
  return npc<icu4cxx::UnicodeSet const>(morphun::lang::StringFilterUtil::LATIN_SCRIPT(void)::LATIN_SCRIPT_);
}

void sub_1CB514B50(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

void sub_1CB514BCC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::lang::StringFilterUtil::CYRILLIC_SCRIPT(morphun::lang::StringFilterUtil *this)
{
  unsigned __int8 v1;
  _QWORD *v3;

  if ((v1 & 1) == 0
  {
    v3 = (_QWORD *)operator new();
    icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v3);
    MEMORY[0x1D179D970](*v3);
    morphun::lang::StringFilterUtil::CYRILLIC_SCRIPT(void)::CYRILLIC_SCRIPT_ = (uint64_t)v3;
  }
  return npc<icu4cxx::UnicodeSet const>(morphun::lang::StringFilterUtil::CYRILLIC_SCRIPT(void)::CYRILLIC_SCRIPT_);
}

void sub_1CB514C68(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t morphun::lang::StringFilterUtil::ARABIC_SCRIPT(morphun::lang::StringFilterUtil *this)
{
  unsigned __int8 v1;
  _QWORD *v3;

  if ((v1 & 1) == 0
  {
    v3 = (_QWORD *)operator new();
    icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v3);
    MEMORY[0x1D179D970](*v3);
    morphun::lang::StringFilterUtil::ARABIC_SCRIPT(void)::ARABIC_SCRIPT_ = (uint64_t)v3;
  }
  return npc<icu4cxx::UnicodeSet const>(morphun::lang::StringFilterUtil::ARABIC_SCRIPT(void)::ARABIC_SCRIPT_);
}

void sub_1CB514D28(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t morphun::lang::StringFilterUtil::HEBREW_SCRIPT(morphun::lang::StringFilterUtil *this)
{
  unsigned __int8 v1;
  _QWORD *v3;

  if ((v1 & 1) == 0
  {
    v3 = (_QWORD *)operator new();
    icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v3);
    MEMORY[0x1D179D970](*v3);
    morphun::lang::StringFilterUtil::HEBREW_SCRIPT(void)::HEBREW_SCRIPT_ = (uint64_t)v3;
  }
  return npc<icu4cxx::UnicodeSet const>(morphun::lang::StringFilterUtil::HEBREW_SCRIPT(void)::HEBREW_SCRIPT_);
}

void sub_1CB514DE8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t morphun::lang::StringFilterUtil::HAN_SCRIPT(morphun::lang::StringFilterUtil *this)
{
  unsigned __int8 v1;
  _QWORD *v3;

  if ((v1 & 1) == 0
  {
    v3 = (_QWORD *)operator new();
    icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v3);
    MEMORY[0x1D179D970](*v3);
    morphun::lang::StringFilterUtil::HAN_SCRIPT(void)::HAN_SCRIPT_ = (uint64_t)v3;
  }
  return npc<icu4cxx::UnicodeSet const>(morphun::lang::StringFilterUtil::HAN_SCRIPT(void)::HAN_SCRIPT_);
}

void sub_1CB514EA8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t morphun::lang::StringFilterUtil::HANGUL_SCRIPT(morphun::lang::StringFilterUtil *this)
{
  unsigned __int8 v1;
  _QWORD *v3;

  if ((v1 & 1) == 0
  {
    v3 = (_QWORD *)operator new();
    icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v3);
    MEMORY[0x1D179D970](*v3);
    morphun::lang::StringFilterUtil::HANGUL_SCRIPT(void)::HANGUL_SCRIPT_ = (uint64_t)v3;
  }
  return npc<icu4cxx::UnicodeSet const>(morphun::lang::StringFilterUtil::HANGUL_SCRIPT(void)::HANGUL_SCRIPT_);
}

void sub_1CB514F68(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t morphun::lang::StringFilterUtil::NON_WHITESPACE_SEPARATED_SCRIPTS(morphun::lang::StringFilterUtil *this)
{
  unsigned __int8 v1;
  _QWORD *v3;

  if ((v1 & 1) == 0
  {
    v3 = (_QWORD *)operator new();
    icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v3);
    MEMORY[0x1D179D970](*v3);
    morphun::lang::StringFilterUtil::NON_WHITESPACE_SEPARATED_SCRIPTS(void)::NON_WHITESPACE_SEPARATED_SCRIPTS_ = (uint64_t)v3;
  }
  return npc<icu4cxx::UnicodeSet const>(morphun::lang::StringFilterUtil::NON_WHITESPACE_SEPARATED_SCRIPTS(void)::NON_WHITESPACE_SEPARATED_SCRIPTS_);
}

void sub_1CB515028(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

void morphun::lang::StringFilterUtil::filteredUnaccent(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, std::basic_string<char16_t> *a4@<X8>)
{
  int v6;
  int v7;
  int v10;
  char v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::basic_string<char16_t>::size_type v16;
  int v17;
  unsigned __int8 v18;
  std::basic_string<char16_t> *p_p;
  std::basic_string<char16_t>::size_type size;
  unsigned __int8 v21;
  std::basic_string<char16_t> *v22;
  std::basic_string<char16_t>::size_type v23;
  int v24;
  icu4cxx::Normalizer2 *v25;
  icu4cxx::Normalizer2 *v26;
  std::basic_string<char16_t> __p;
  std::basic_string<char16_t> __s;
  std::basic_string<char16_t> v29;
  std::basic_string<char16_t> v30;

  v6 = *(char *)(a3 + 23);
  if (v6 >= 0)
    v7 = *(unsigned __int8 *)(a3 + 23);
  else
    v7 = *(_DWORD *)(a3 + 8);
  memset(&v30, 0, sizeof(v30));
  if (v7 < 1)
  {
LABEL_63:
    if ((v6 & 0x80) != 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(a4, *(const std::basic_string<char16_t>::value_type **)a3, *(_QWORD *)(a3 + 8));
    }
    else
    {
      *(_OWORD *)&a4->__r_.__value_.__l.__data_ = *(_OWORD *)a3;
      a4->__r_.__value_.__r.__words[2] = *(_QWORD *)(a3 + 16);
    }
    goto LABEL_67;
  }
  v10 = 0;
  v11 = 1;
  do
  {
    while (1)
    {
      v12 = *(char *)(a3 + 23);
      v13 = v12 >= 0 ? a3 : *(_QWORD *)a3;
      if (v12 >= 0)
        LODWORD(v14) = *(unsigned __int8 *)(a3 + 23);
      else
        v14 = *(_QWORD *)(a3 + 8);
      v15 = morphun::util::StringViewUtils::codePointAt(v13, v14, v10);
      if (!MEMORY[0x1D179D958](*a1, v15))
        break;
      if ((v11 & 1) != 0)
        std::basic_string<char16_t>::assign(&v30, (const std::basic_string<char16_t> *)a3, 0, v10);
      memset(&v29, 0, sizeof(v29));
      morphun::util::StringUtils::appendCodePoint(&v29, v15);
      memset(&__s, 0, sizeof(__s));
      {
        v25 = (icu4cxx::Normalizer2 *)operator new();
        icu4cxx::Normalizer2::getNFDInstance(v25);
        morphun::lang::NFD(void)::NFD_ = (uint64_t)v25;
      }
      npc<icu4cxx::Normalizer2>(morphun::lang::NFD(void)::NFD_);
      morphun::dictionary::PhraseProperties::normalize((uint64_t)&v29, (uint64_t)&__p);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        p_p = &__p;
      else
        p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        size = __p.__r_.__value_.__l.__size_;
      morphun::util::UnicodeSetUtils::removeSetFromString((uint64_t)&__s, a2, (uint64_t)p_p, size);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      if ((*((_BYTE *)&__s.__r_.__value_.__s + 23) & 0x80) != 0)
      {
        if (__s.__r_.__value_.__l.__size_ > 1)
        {
LABEL_37:
          {
            v26 = (icu4cxx::Normalizer2 *)operator new();
            icu4cxx::Normalizer2::getNFCInstance(v26);
            morphun::lang::NFC(void)::NFC_ = (uint64_t)v26;
          }
          npc<icu4cxx::Normalizer2>(morphun::lang::NFC(void)::NFC_);
          morphun::dictionary::PhraseProperties::normalize((uint64_t)&__s, (uint64_t)&__p);
          goto LABEL_40;
        }
        std::basic_string<char16_t>::__init_copy_ctor_external(&__p, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
      }
      else
      {
        if (HIBYTE(__s.__r_.__value_.__r.__words[2]) >= 2u)
          goto LABEL_37;
        __p = __s;
      }
LABEL_40:
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v22 = &__p;
      else
        v22 = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v23 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        v23 = __p.__r_.__value_.__l.__size_;
      std::basic_string<char16_t>::append(&v30, (const std::basic_string<char16_t>::value_type *)v22, v23);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__s.__r_.__value_.__l.__data_);
      if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v29.__r_.__value_.__l.__data_);
      v11 = 0;
      if (v15 < 0x10000)
        v24 = 1;
      else
        v24 = 2;
      v10 += v24;
      if (v10 >= v7)
        goto LABEL_65;
    }
    v16 = HIBYTE(v30.__r_.__value_.__r.__words[2]);
    if ((v30.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v16 = v30.__r_.__value_.__l.__size_;
    if (v16)
      morphun::util::StringUtils::appendCodePoint(&v30, v15);
    if (v15 < 0x10000)
      v17 = 1;
    else
      v17 = 2;
    v10 += v17;
  }
  while (v10 < v7);
  if ((v11 & 1) != 0)
  {
    LOBYTE(v6) = *(_BYTE *)(a3 + 23);
    goto LABEL_63;
  }
LABEL_65:
  *a4 = v30;
  memset(&v30, 0, sizeof(v30));
LABEL_67:
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v30.__r_.__value_.__l.__data_);
}

void sub_1CB5153A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  uint64_t v32;

  MEMORY[0x1D179D2EC](v32, 0x1020C405F07FB98);
  if (a20 < 0)
    operator delete(__p);
  if (a26 < 0)
    operator delete(a21);
  if (a32 < 0)
    operator delete(a27);
  _Unwind_Resume(a1);
}

uint64_t icu4cxx::Normalizer2::getNFDInstance(icu4cxx::Normalizer2 *this)
{
  uint64_t result;

  result = unorm2_getNFDInstance();
  *(_QWORD *)this = result;
  *((_BYTE *)this + 8) = 0;
  return result;
}

void sub_1CB5154E8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<icu4cxx::Normalizer2>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB515540(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t icu4cxx::Normalizer2::getNFCInstance(icu4cxx::Normalizer2 *this)
{
  uint64_t result;

  result = unorm2_getNFCInstance();
  *(_QWORD *)this = result;
  *((_BYTE *)this + 8) = 0;
  return result;
}

void sub_1CB5155C4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::lang::StringFilterUtil::NFD_VOLATILE_CHARACTERS(morphun::lang::StringFilterUtil *this)
{
  unsigned __int8 v1;
  _QWORD *v3;

  if ((v1 & 1) == 0
  {
    v3 = (_QWORD *)operator new();
    icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v3);
    MEMORY[0x1D179D970](*v3);
    morphun::lang::StringFilterUtil::NFD_VOLATILE_CHARACTERS(void)::NFD_VOLATILE_CHARACTERS_ = (uint64_t)v3;
  }
  return npc<icu4cxx::UnicodeSet const>(morphun::lang::StringFilterUtil::NFD_VOLATILE_CHARACTERS(void)::NFD_VOLATILE_CHARACTERS_);
}

void sub_1CB515660(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t morphun::lang::StringFilterUtil::COMBINING_DIACRITICAL_MARKS(morphun::lang::StringFilterUtil *this)
{
  unsigned __int8 v1;
  _QWORD *v3;

  if ((v1 & 1) == 0
  {
    v3 = (_QWORD *)operator new();
    icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v3);
    MEMORY[0x1D179D970](*v3);
    morphun::lang::StringFilterUtil::COMBINING_DIACRITICAL_MARKS(void)::COMBINING_DIACRITICAL_MARKS_ = (uint64_t)v3;
  }
  return npc<icu4cxx::UnicodeSet const>(morphun::lang::StringFilterUtil::COMBINING_DIACRITICAL_MARKS(void)::COMBINING_DIACRITICAL_MARKS_);
}

void sub_1CB515720(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

morphun::lang::StringFilterUtil *morphun::lang::StringFilterUtil::getSetSingleton(morphun::lang::StringFilterUtil *this, icu4cxx::UnicodeSet *a2)
{
  unsigned __int8 v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t **v6;
  uint64_t **v7;
  unint64_t v8;
  BOOL v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t **v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  _QWORD *v18;

  {
    v18 = (_QWORD *)operator new();
    v18[2] = 0;
    v18[1] = 0;
    *v18 = v18 + 1;
    morphun::lang::SET_SINGLETONS(void)::setSingletons_ = (uint64_t)v18;
  }
  v4 = morphun::lang::SET_SINGLETONS(void)::setSingletons_;
  npc<std::map<icu4cxx::UnicodeSet const*,icu4cxx::UnicodeSet const*>>(morphun::lang::SET_SINGLETONS(void)::setSingletons_);
  v6 = (uint64_t **)(v4 + 8);
  v5 = *(_QWORD **)(v4 + 8);
  if (!v5)
    goto LABEL_13;
  v7 = (uint64_t **)(v4 + 8);
  do
  {
    v8 = v5[4];
    v9 = v8 >= (unint64_t)this;
    if (v8 >= (unint64_t)this)
      v10 = v5;
    else
      v10 = v5 + 1;
    if (v9)
      v7 = (uint64_t **)v5;
    v5 = (_QWORD *)*v10;
  }
  while (*v10);
  if (v7 != v6 && v7[4] <= (uint64_t *)this)
  {
    npc<std::map<icu4cxx::UnicodeSet const*,icu4cxx::UnicodeSet const*>>(v4);
    if (this)
    {
      icu4cxx::UnicodeSet::~UnicodeSet(this);
      MEMORY[0x1D179D2EC]();
    }
    return (morphun::lang::StringFilterUtil *)v7[5];
  }
  else
  {
LABEL_13:
    npc<std::map<icu4cxx::UnicodeSet const*,icu4cxx::UnicodeSet const*>>(v4);
    morphun::util::Validate::notNull<icu4cxx::UnicodeSet>((uint64_t)this);
    MEMORY[0x1D179D970](*(_QWORD *)this);
    npc<std::map<icu4cxx::UnicodeSet const*,icu4cxx::UnicodeSet const*>>(v4);
    v11 = *(uint64_t **)(v4 + 8);
    v12 = (uint64_t **)(v4 + 8);
    if (v11)
    {
      while (1)
      {
        while (1)
        {
          v12 = (uint64_t **)v11;
          v13 = v11[4];
          if (v13 <= (unint64_t)this)
            break;
          v11 = *v12;
          v6 = v12;
          if (!*v12)
            goto LABEL_20;
        }
        if (v13 >= (unint64_t)this)
          break;
        v11 = v12[1];
        if (!v11)
        {
          v6 = v12 + 1;
          goto LABEL_20;
        }
      }
    }
    else
    {
LABEL_20:
      v14 = (uint64_t *)operator new(0x30uLL);
      v14[4] = (uint64_t)this;
      v14[5] = (uint64_t)this;
      *v14 = 0;
      v14[1] = 0;
      v14[2] = (uint64_t)v12;
      *v6 = v14;
      v15 = **(_QWORD **)v4;
      if (v15)
      {
        *(_QWORD *)v4 = v15;
        v16 = *v6;
      }
      else
      {
        v16 = v14;
      }
      std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*(uint64_t **)(v4 + 8), v16);
      ++*(_QWORD *)(v4 + 16);
    }
  }
  return this;
}

void sub_1CB515900(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<icu4cxx::UnicodeSet const*,icu4cxx::UnicodeSet const*>>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB51595C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

morphun::lang::StringFilterUtil *morphun::lang::StringFilterUtil::getExemplarCharacters(morphun::lang::StringFilterUtil *this, const morphun::util::ULocale *a2)
{
  unsigned __int8 v3;
  std::mutex *v4;
  std::mutex *v5;
  unsigned __int8 v6;
  uint64_t v7;
  _QWORD *v8;
  morphun::lang::StringFilterUtil *SetSingleton;
  morphun::lang::StringFilterUtil *v10;
  icu4cxx::UnicodeSet *v11;
  uint64_t **v12;
  uint64_t v14;
  _QWORD *v15;
  morphun::lang::StringFilterUtil *v16;
  int v17;

  if ((v3 & 1) == 0
  {
    v14 = operator new();
    *(_QWORD *)v14 = 850045863;
    *(_OWORD *)(v14 + 8) = 0u;
    *(_OWORD *)(v14 + 24) = 0u;
    *(_OWORD *)(v14 + 40) = 0u;
    *(_QWORD *)(v14 + 56) = 0;
    morphun::lang::StringFilterUtil::getExemplarCharacters(morphun::util::ULocale const&)::functionMutex = v14;
  }
  v4 = (std::mutex *)morphun::lang::StringFilterUtil::getExemplarCharacters(morphun::util::ULocale const&)::functionMutex;
  v5 = (std::mutex *)npc<std::mutex>(morphun::lang::StringFilterUtil::getExemplarCharacters(morphun::util::ULocale const&)::functionMutex);
  std::mutex::lock(v5);
  if ((v6 & 1) == 0
  {
    v15 = (_QWORD *)operator new();
    v15[2] = 0;
    v15[1] = 0;
    *v15 = v15 + 1;
    morphun::lang::StringFilterUtil::getExemplarCharacters(morphun::util::ULocale const&)::exemplarCache = (uint64_t)v15;
  }
  v7 = npc<std::map<morphun::util::ULocale,icu4cxx::UnicodeSet const*>>(morphun::lang::StringFilterUtil::getExemplarCharacters(morphun::util::ULocale const&)::exemplarCache);
  v8 = std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::find<morphun::util::ULocale>(v7, (uint64_t)this);
  if ((_QWORD *)(npc<std::map<morphun::util::ULocale,icu4cxx::UnicodeSet const*>>(morphun::lang::StringFilterUtil::getExemplarCharacters(morphun::util::ULocale const&)::exemplarCache)
                + 8) == v8)
  {
    v10 = (morphun::lang::StringFilterUtil *)operator new();
    *((_BYTE *)v10 + 8) = 1;
    *(_QWORD *)v10 = uset_openEmpty();
    v17 = 0;
    ulocdata_open();
    ulocdata_getExemplarSet();
    ulocdata_close();
    SetSingleton = morphun::lang::StringFilterUtil::getSetSingleton(v10, v11);
    v16 = SetSingleton;
    v12 = (uint64_t **)npc<std::map<morphun::util::ULocale,icu4cxx::UnicodeSet const*>>(morphun::lang::StringFilterUtil::getExemplarCharacters(morphun::util::ULocale const&)::exemplarCache);
    std::__tree<std::__value_type<morphun::util::ULocale,icu4cxx::UnicodeSet const*>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,icu4cxx::UnicodeSet const*>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,icu4cxx::UnicodeSet const*>>>::__emplace_unique_key_args<morphun::util::ULocale,morphun::util::ULocale const&,icu4cxx::UnicodeSet const*&>(v12, (uint64_t)this, this, (uint64_t *)&v16);
    npc<icu4cxx::UnicodeSet const>((uint64_t)SetSingleton);
  }
  else
  {
    SetSingleton = (morphun::lang::StringFilterUtil *)v8[20];
    npc<icu4cxx::UnicodeSet const>((uint64_t)SetSingleton);
  }
  std::mutex::unlock(v4);
  return SetSingleton;
}

void sub_1CB515BA0(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<std::mutex>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB515C60(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<morphun::util::ULocale,icu4cxx::UnicodeSet const*>>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB515CB8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<morphun::util::ULocale,icu4cxx::UnicodeSet const*>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,icu4cxx::UnicodeSet const*>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,icu4cxx::UnicodeSet const*>>>::__emplace_unique_key_args<morphun::util::ULocale,morphun::util::ULocale const&,icu4cxx::UnicodeSet const*&>(uint64_t **a1, uint64_t a2, const morphun::util::ULocale *a3, uint64_t *a4)
{
  uint64_t *v7;
  uint64_t **v8;
  uint64_t **v9;
  uint64_t **v10;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  _QWORD v15[2];
  char v16;

  v8 = a1 + 1;
  v7 = a1[1];
  v9 = a1 + 1;
  v10 = a1 + 1;
  if (v7)
  {
    while (1)
    {
      while (1)
      {
        v9 = (uint64_t **)v7;
        v12 = (uint64_t)(v7 + 4);
        if (!std::less<morphun::util::ULocale>::operator()[abi:ne180100](a2, (uint64_t)(v7 + 4)))
          break;
        v7 = *v9;
        v10 = v9;
        if (!*v9)
          goto LABEL_7;
      }
      if (!std::less<morphun::util::ULocale>::operator()[abi:ne180100](v12, a2))
        break;
      v10 = v9 + 1;
      v7 = v9[1];
      if (!v7)
        goto LABEL_7;
    }
  }
  else
  {
LABEL_7:
    v13 = (uint64_t *)operator new(0xA8uLL);
    v15[0] = v13;
    v15[1] = v8;
    v16 = 0;
    morphun::util::ULocale::ULocale((morphun::util::ULocale *)(v13 + 4), a3);
    v13[20] = *a4;
    v16 = 1;
    *v13 = 0;
    v13[1] = 0;
    v13[2] = (uint64_t)v9;
    *v10 = v13;
    v14 = (uint64_t *)**a1;
    if (v14)
    {
      *a1 = v14;
      v13 = *v10;
    }
    std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v13);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
    v15[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,void *>>>>::reset[abi:ne180100]((uint64_t)v15);
  }
}

void sub_1CB515DE0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::unique_ptr<std::__tree_node<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,void *>>>>::reset[abi:ne180100]((uint64_t)va);
  _Unwind_Resume(a1);
}

morphun::lang::StringFilterUtil *morphun::lang::StringFilterUtil::getNfdVolatileForeignExemplarCharacters(morphun::lang::StringFilterUtil *this, const morphun::util::ULocale *a2)
{
  unsigned __int8 v3;
  std::mutex *v4;
  std::mutex *v5;
  unsigned __int8 v6;
  uint64_t **v7;
  morphun::lang::StringFilterUtil *v8;
  morphun::lang::StringFilterUtil *SetSingleton;
  _QWORD *v10;
  const morphun::util::ULocale *v11;
  morphun::lang::StringFilterUtil *ExemplarCharacters;
  morphun::lang::StringFilterUtil *v13;
  icu4cxx::UnicodeSet *v14;
  uint64_t v16;
  _QWORD *v17;
  morphun::lang::StringFilterUtil *v18;
  uint64_t v19;
  char v20;

  if ((v3 & 1) == 0
  {
    v16 = operator new();
    *(_QWORD *)v16 = 850045863;
    *(_OWORD *)(v16 + 8) = 0u;
    *(_OWORD *)(v16 + 24) = 0u;
    *(_OWORD *)(v16 + 40) = 0u;
    *(_QWORD *)(v16 + 56) = 0;
    morphun::lang::StringFilterUtil::getNfdVolatileForeignExemplarCharacters(morphun::util::ULocale const&)::functionMutex = v16;
  }
  v4 = (std::mutex *)morphun::lang::StringFilterUtil::getNfdVolatileForeignExemplarCharacters(morphun::util::ULocale const&)::functionMutex;
  v5 = (std::mutex *)npc<std::mutex>(morphun::lang::StringFilterUtil::getNfdVolatileForeignExemplarCharacters(morphun::util::ULocale const&)::functionMutex);
  std::mutex::lock(v5);
  if ((v6 & 1) == 0
  {
    v17 = (_QWORD *)operator new();
    v17[2] = 0;
    v17[1] = 0;
    *v17 = v17 + 1;
    morphun::lang::NfdVolatileForeignExemplarCache(void)::NfdVolatileForeignExemplarCache_ = (uint64_t)v17;
  }
  v7 = (uint64_t **)morphun::lang::NfdVolatileForeignExemplarCache(void)::NfdVolatileForeignExemplarCache_;
  npc<std::map<morphun::util::ULocale,icu4cxx::UnicodeSet const*>>(morphun::lang::NfdVolatileForeignExemplarCache(void)::NfdVolatileForeignExemplarCache_);
  v8 = (morphun::lang::StringFilterUtil *)std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::find<morphun::util::ULocale>((uint64_t)v7, (uint64_t)this);
  if (v7 + 1 == (uint64_t **)v8)
  {
    v10 = (_QWORD *)morphun::lang::StringFilterUtil::NFD_VOLATILE_CHARACTERS(v8);
    v19 = MEMORY[0x1D179D934](*v10);
    v20 = 1;
    ExemplarCharacters = morphun::lang::StringFilterUtil::getExemplarCharacters(this, v11);
    MEMORY[0x1D179D9AC](v19, *(_QWORD *)ExemplarCharacters);
    v13 = (morphun::lang::StringFilterUtil *)operator new();
    *((_BYTE *)v13 + 8) = 1;
    *(_QWORD *)v13 = MEMORY[0x1D179D928](v19);
    *((_BYTE *)v13 + 8) = 1;
    SetSingleton = morphun::lang::StringFilterUtil::getSetSingleton(v13, v14);
    v18 = SetSingleton;
    npc<std::map<morphun::util::ULocale,icu4cxx::UnicodeSet const*>>((uint64_t)v7);
    std::__tree<std::__value_type<morphun::util::ULocale,icu4cxx::UnicodeSet const*>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,icu4cxx::UnicodeSet const*>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,icu4cxx::UnicodeSet const*>>>::__emplace_unique_key_args<morphun::util::ULocale,morphun::util::ULocale const&,icu4cxx::UnicodeSet const*&>(v7, (uint64_t)this, this, (uint64_t *)&v18);
    npc<icu4cxx::UnicodeSet const>((uint64_t)SetSingleton);
    icu4cxx::UnicodeSet::~UnicodeSet((icu4cxx::UnicodeSet *)&v19);
  }
  else
  {
    SetSingleton = (morphun::lang::StringFilterUtil *)*((_QWORD *)v8 + 20);
    npc<icu4cxx::UnicodeSet const>((uint64_t)SetSingleton);
  }
  std::mutex::unlock(v4);
  return SetSingleton;
}

void sub_1CB515FE8(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void morphun::lang::StringFilterUtil::stripNonNativeAccents(morphun::lang::StringFilterUtil *a1@<X0>, const morphun::util::ULocale *a2@<X1>, std::basic_string<char16_t> *a3@<X8>)
{
  morphun::lang::StringFilterUtil *NfdVolatileForeignExemplarCharacters;
  _QWORD *v6;

  NfdVolatileForeignExemplarCharacters = morphun::lang::StringFilterUtil::getNfdVolatileForeignExemplarCharacters(a1, a2);
  v6 = (_QWORD *)morphun::lang::StringFilterUtil::COMBINING_DIACRITICAL_MARKS(NfdVolatileForeignExemplarCharacters);
  morphun::lang::StringFilterUtil::filteredUnaccent(NfdVolatileForeignExemplarCharacters, v6, (uint64_t)a2, a3);
}

uint64_t morphun::lang::StringFilterUtil::unaccent(morphun::lang *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  morphun::lang *v4;
  int v5;
  int v6;
  _QWORD *v7;
  std::basic_string<char16_t> *p_p;
  std::basic_string<char16_t>::size_type size;
  UErrorCode v11;
  morphun::exception::ICUException *exception;
  std::basic_string<char16_t> __p;
  int v14;

  v2 = (uint64_t)a1;
  v14 = 0;
  if (*(char *)(a2 + 23) >= 0)
    LODWORD(v3) = *(unsigned __int8 *)(a2 + 23);
  else
    v3 = *(_QWORD *)(a2 + 8);
  memset(&__p, 0, sizeof(__p));
  if ((int)v3 >= 1)
  {
    std::basic_string<char16_t>::resize(&__p, v3, 0);
    morphun::lang::NFD_NORMALIZER(v4);
    a1 = (morphun::lang *)unorm2_normalize();
    v5 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v5 = __p.__r_.__value_.__r.__words[1];
    if ((_DWORD)a1 != v5)
      std::basic_string<char16_t>::resize(&__p, (int)a1, 0);
    v6 = v14;
    if (v14 == 15)
    {
      v14 = 0;
      morphun::lang::NFD_NORMALIZER(a1);
      a1 = (morphun::lang *)unorm2_normalize();
      v6 = v14;
    }
    if (v6 >= 1)
    {
      v11 = v6;
      exception = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::ICUException::ICUException(exception, v11);
    }
  }
  v7 = (_QWORD *)morphun::lang::StringFilterUtil::COMBINING_DIACRITICAL_MARKS(a1);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  morphun::util::UnicodeSetUtils::removeSetFromString(v2, v7, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return v2;
}

void sub_1CB516248(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;

  __cxa_free_exception(v14);
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t morphun::lang::NFD_NORMALIZER(morphun::lang *this)
{
  unsigned __int8 v1;
  morphun::lang *v3;

  if ((v1 & 1) == 0)
  {
    if ((_DWORD)v3)
    {
      morphun::lang::NFD_NORMALIZER(void)::NFD_NORMALIZER_ = morphun::lang::getNFDInstance(v3);
    }
  }
  return morphun::lang::NFD_NORMALIZER(void)::NFD_NORMALIZER_;
}

void sub_1CB5162CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t morphun::lang::getNFDInstance(morphun::lang *this)
{
  return unorm2_getNFDInstance();
}

void sub_1CB516348(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

BOOL morphun::lang::StringFilterUtil::hasAccents(uint64_t a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int16 *p_p;
  unsigned __int16 *v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  _BOOL8 v11;
  void *__p;
  uint64_t v15;
  uint64_t v16;

  __p = 0;
  v15 = 0;
  v16 = 0;
  morphun::lang::StringFilterUtil::unaccent((morphun::lang *)&__p, a1);
  v2 = *(char *)(a1 + 23);
  if (v2 >= 0)
    v3 = *(unsigned __int8 *)(a1 + 23);
  else
    v3 = *(_QWORD *)(a1 + 8);
  v4 = HIBYTE(v16);
  if (v16 < 0)
    v4 = v15;
  if (v3 == v4)
  {
    if (!v3)
    {
      v11 = 0;
      if ((SHIBYTE(v16) & 0x80000000) == 0)
        return v11;
      goto LABEL_22;
    }
    p_p = (unsigned __int16 *)__p;
    if (v16 >= 0)
      p_p = (unsigned __int16 *)&__p;
    if (v2 >= 0)
      v6 = (unsigned __int16 *)a1;
    else
      v6 = *(unsigned __int16 **)a1;
    v7 = v3 - 1;
    do
    {
      v9 = *v6++;
      v8 = v9;
      v10 = *p_p++;
      v11 = v10 != v8;
    }
    while (v10 == v8 && v7-- != 0);
  }
  else
  {
    v11 = 1;
  }
  if (SHIBYTE(v16) < 0)
LABEL_22:
    operator delete(__p);
  return v11;
}

void sub_1CB516428(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL morphun::lang::StringFilterUtil::equalIgnoreCaseAndAllAccents(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  const UChar *v6;
  uint64_t v7;
  int v8;
  const UChar *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  unsigned __int16 *v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  int v19;
  BOOL v21;
  _BOOL8 v22;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *__p[2];
  uint64_t v31;
  void *v32[2];
  uint64_t v33;

  v32[0] = 0;
  v32[1] = 0;
  v33 = 0;
  __p[0] = 0;
  __p[1] = 0;
  v31 = 0;
  v5 = *(char *)(a1 + 23);
  if (v5 >= 0)
    v6 = (const UChar *)a1;
  else
    v6 = *(const UChar **)a1;
  if (v5 >= 0)
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 23);
  else
    v7 = *(_QWORD *)(a1 + 8);
  morphun::util::StringViewUtils::lowercase((uint64_t)v32, v6, v7, a3);
  v8 = *(char *)(a2 + 23);
  if (v8 >= 0)
    v9 = (const UChar *)a2;
  else
    v9 = *(const UChar **)a2;
  if (v8 >= 0)
    LODWORD(v10) = *(unsigned __int8 *)(a2 + 23);
  else
    v10 = *(_QWORD *)(a2 + 8);
  morphun::util::StringViewUtils::lowercase((uint64_t)__p, v9, v10, a3);
  v27 = 0;
  v28 = 0;
  v29 = 0;
  v24 = 0;
  v25 = 0;
  v26 = 0;
  morphun::lang::StringFilterUtil::unaccent((morphun::lang *)&v27, (uint64_t)v32);
  morphun::lang::StringFilterUtil::unaccent((morphun::lang *)&v24, (uint64_t)__p);
  if (v29 >= 0)
    v11 = HIBYTE(v29);
  else
    v11 = v28;
  v12 = HIBYTE(v26);
  if (v26 < 0)
    v12 = v25;
  if (v11 != v12)
  {
    v22 = 0;
    goto LABEL_32;
  }
  if (v11)
  {
    v13 = (unsigned __int16 *)v24;
    if (v26 >= 0)
      v13 = (unsigned __int16 *)&v24;
    v14 = (unsigned __int16 *)v27;
    if (v29 >= 0)
      v14 = (unsigned __int16 *)&v27;
    v15 = v11 - 1;
    do
    {
      v17 = *v14++;
      v16 = v17;
      v19 = *v13++;
      v18 = v19;
      v21 = v15-- != 0;
      v22 = v18 == v16;
    }
    while (v18 == v16 && v21);
LABEL_32:
    if ((SHIBYTE(v26) & 0x80000000) == 0)
      goto LABEL_33;
LABEL_40:
    operator delete(v24);
    if ((v29 & 0x8000000000000000) == 0)
      goto LABEL_34;
    goto LABEL_41;
  }
  v22 = 1;
  if (SHIBYTE(v26) < 0)
    goto LABEL_40;
LABEL_33:
  if ((v29 & 0x8000000000000000) == 0)
    goto LABEL_34;
LABEL_41:
  operator delete(v27);
LABEL_34:
  if (SHIBYTE(v31) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v33) < 0)
    operator delete(v32[0]);
  return v22;
}

void sub_1CB5165BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  uint64_t v26;

  if (a14 < 0)
    operator delete(__p);
  if (a20 < 0)
    operator delete(a15);
  if (a26 < 0)
    operator delete(a21);
  if (*(char *)(v26 - 17) < 0)
    operator delete(*(void **)(v26 - 40));
  _Unwind_Resume(exception_object);
}

BOOL morphun::lang::StringFilterUtil::hasNonWhitespaceSeparableCharacter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(unsigned __int8 *)(a1 + 23);
  if ((v1 & 0x80u) != 0)
    v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v3 = (_QWORD *)morphun::lang::StringFilterUtil::NON_WHITESPACE_SEPARATED_SCRIPTS((morphun::lang::StringFilterUtil *)a1);
  v4 = *(char *)(a1 + 23);
  if (v4 >= 0)
    v5 = a1;
  else
    v5 = *(_QWORD *)a1;
  if (v4 >= 0)
    LODWORD(v6) = *(unsigned __int8 *)(a1 + 23);
  else
    v6 = *(_QWORD *)(a1 + 8);
  return morphun::util::UnicodeSetUtils::containsSome(v3, v5, v6);
}

BOOL morphun::lang::StringFilterUtil::isFirstNonWhitespaceSeparableCharacter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(unsigned __int8 *)(a1 + 23);
  if ((v1 & 0x80u) != 0)
    v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v3 = (_QWORD *)morphun::lang::StringFilterUtil::NON_WHITESPACE_SEPARATED_SCRIPTS((morphun::lang::StringFilterUtil *)a1);
  v4 = *(char *)(a1 + 23);
  if (v4 >= 0)
    v5 = a1;
  else
    v5 = *(_QWORD *)a1;
  if (v4 >= 0)
    LODWORD(v6) = *(unsigned __int8 *)(a1 + 23);
  else
    v6 = *(_QWORD *)(a1 + 8);
  v7 = morphun::util::StringViewUtils::codePointAt(v5, v6, 0);
  return MEMORY[0x1D179D958](*v3, v7) != 0;
}

void morphun::analysis::filter::ContractionExpandingFilter::~ContractionExpandingFilter(void **this)
{
  void **v2;

  *this = &off_1E86725A8;
  v2 = this + 33;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v2);
  std::__tree<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>>>::destroy(this[15]);
  morphun::analysis::TokenFilter::~TokenFilter((morphun::analysis::TokenFilter *)this, (uint64_t *)&off_1E8669838);
}

{
  void **v2;

  *this = &off_1E86725A8;
  v2 = this + 33;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v2);
  std::__tree<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>>>::destroy(this[15]);
  morphun::analysis::TokenFilter::~TokenFilter((morphun::analysis::TokenFilter *)this, (uint64_t *)&off_1E8669838);
  JUMPOUT(0x1D179D2ECLL);
}

void sub_1CB516828(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

morphun::analysis::filter::ContractionExpandingFilter *morphun::analysis::filter::ContractionExpandingFilter::ContractionExpandingFilter(morphun::analysis::filter::ContractionExpandingFilter *this, morphun::analysis::TokenStream *a2, const char **a3)
{
  morphun::analysis::util::AttributeSource *v6;

  *(_QWORD *)this = &off_1E866A910;
  v6 = morphun::analysis::util::AttributeSource::AttributeSource(this, (morphun::analysis::util::AttributeSource *)&off_1E8669848, (uint64_t)a2);
  *(_QWORD *)v6 = &off_1E86725A8;
  *((_QWORD *)v6 + 12) = a2;
  *((_QWORD *)v6 + 13) = 0;
  morphun::analysis::filter::LanguageExpansion::LanguageExpansion((morphun::analysis::util::AttributeSource *)((char *)v6 + 112), a3);
  *((_QWORD *)this + 33) = 0;
  *((_QWORD *)this + 34) = 0;
  *((_QWORD *)this + 35) = 0;
  morphun::util::ULocale::ULocale((morphun::analysis::filter::ContractionExpandingFilter *)((char *)this + 288), (const morphun::util::ULocale *)a3);
  *((_QWORD *)this + 13) = morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::CharTermAttribute>((uint64_t)this);
  return this;
}

void sub_1CB5168D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  morphun::analysis::TokenFilter *v10;
  void **v11;
  void **v12;

  a10 = (uint64_t)v10 + 264;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a10);
  morphun::analysis::filter::LanguageExpansion::~LanguageExpansion(v11);
  morphun::analysis::TokenFilter::~TokenFilter(v10, (uint64_t *)&off_1E8669838);
  _Unwind_Resume(a1);
}

uint64_t morphun::tokenizer::locale::nb::NbTokenizer::createTokenExtractor(morphun::util::ULocale *a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  __int128 v7[2];
  int v8;
  uint64_t v9;
  int v10;
  _QWORD *v11;
  _QWORD *v12;
  void *v13;
  void *v14;
  void *__p;
  void *v16;
  char *v17;
  _QWORD v18[3];
  _QWORD v19[3];
  _QWORD **v20;
  _QWORD *v21[2];
  _QWORD v22[3];
  _OWORD v23[2];
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v4 = operator new();
  v23[0] = xmmword_1E8675BD8;
  v23[1] = *(_OWORD *)&off_1E8675BE8;
  std::set<std::u16string_view>::set[abi:ne180100]((uint64_t)v22, (uint64_t)v23, 2);
  v21[0] = 0;
  v21[1] = 0;
  v20 = v21;
  memset(v19, 0, sizeof(v19));
  v5 = operator new(0x20uLL);
  v18[1] = v5 + 2;
  v18[2] = v5 + 2;
  *v5 = xmmword_1E86866A8;
  v5[1] = *(_OWORD *)&off_1E86866B8;
  v18[0] = v5;
  morphun::tokenizer::dictionary::DictionaryTokenizerConfig::DictionaryTokenizerConfig((uint64_t)v7, v22, &v20, (uint64_t)v19, (uint64_t)v18);
  operator delete(v5);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(v21[0]);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy((_QWORD *)v22[1]);
  *((_QWORD *)&v7[0] + 1) = 0x300000002;
  v8 = 4000;
  v9 = 0x3F19999A3E800000;
  v10 = 20;
  morphun::tokenizer::GermanicWordAndDelimiterTokenExtractor::GermanicWordAndDelimiterTokenExtractor(v4, a1, a2, v7);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(v17);
  if (__p)
  {
    v16 = __p;
    operator delete(__p);
  }
  if (v13)
  {
    v14 = v13;
    operator delete(v13);
  }
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(v12);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(v11);
  return v4;
}

void sub_1CB516AB0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  morphun::tokenizer::locale::da::DaDictionaryTokenizerConfig::~DaDictionaryTokenizerConfig((char **)va);
  MEMORY[0x1D179D2EC](v2, 0x10F3C4092900CF8);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction::~ItGrammarSynthesizer_CountLookupFunction(morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction *this)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  *(_QWORD *)this = &off_1E866EAB0;
  v2 = *((_QWORD *)this + 26);
  *((_QWORD *)this + 26) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
  *(_QWORD *)this = &off_1E865D068;
  v3 = (void *)*((_QWORD *)this + 22);
  if (v3)
  {
    *((_QWORD *)this + 23) = v3;
    operator delete(v3);
  }
  v4 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  *((_QWORD *)this + 1) = &off_1E8671C00;
}

{
  morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction::~ItGrammarSynthesizer_CountLookupFunction(this);
  JUMPOUT(0x1D179D2ECLL);
}

void morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction::determine(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  const UChar *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  morphun::grammar::synthesis::GrammemeConstants *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  unint64_t v29;
  std::basic_string<char16_t>::size_type size;
  int v31;
  std::basic_string<char16_t> *v32;
  int v33;
  const std::basic_string<char16_t> *v34;
  morphun::exception::NullPointerException *exception;
  morphun::exception::NullPointerException *v36;
  morphun::exception::NullPointerException *v37;
  __int128 v38;
  std::basic_string<char16_t> v39;

  morphun::dialog::DictionaryLookupFunction::determine((uint64_t)a1, a2, (_QWORD *)a3);
  v6 = *(unsigned __int8 *)(a3 + 23);
  LOBYTE(v7) = v6;
  v8 = *(_QWORD *)(a3 + 8);
  if ((v6 & 0x80u) == 0)
    v9 = *(unsigned __int8 *)(a3 + 23);
  else
    v9 = *(_QWORD *)(a3 + 8);
  if (!v9)
  {
    v10 = *(unsigned __int8 *)(a2 + 23);
    if ((v10 & 0x80u) != 0)
      v10 = *(_QWORD *)(a2 + 8);
    if (v10)
    {
      v11 = a1[26];
      if (!v11
        || (v12 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v11 + 24))(v11, a2), (v13 = v12) == 0))
      {
        exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
        morphun::exception::NullPointerException::NullPointerException(exception);
      }
      v38 = *(_OWORD *)(v12 + 8);
      v14 = *((_QWORD *)&v38 + 1);
      if (*((_QWORD *)&v38 + 1))
LABEL_11:
        v14 = *(_QWORD *)(v14 + 80);
      while (v14 != (_QWORD)v38)
      {
        if ((_QWORD)v38
        {
          v15 = *(char *)(v38 + 63);
          v16 = v15 >= 0 ? (const UChar *)(v38 + 40) : *(const UChar **)(v38 + 40);
          v17 = v15 >= 0 ? *(unsigned __int8 *)(v38 + 63) : *(_QWORD *)(v38 + 48);
          v18 = a1[27];
          v19 = a1[28];
          v39.__r_.__value_.__r.__words[0] = 0;
          if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v18, (uint64_t)&v39, v16, v17)
            && (v39.__r_.__value_.__r.__words[0] & v19) == v19)
          {
            morphun::dialog::DictionaryLookupFunction::determine((uint64_t)a1, v38 + 16, &v39);
            if ((char)v6 < 0)
              operator delete(*(void **)a3);
            *(_OWORD *)a3 = *(_OWORD *)&v39.__r_.__value_.__l.__data_;
            v22 = v39.__r_.__value_.__r.__words[2];
            *(_QWORD *)(a3 + 16) = *((_QWORD *)&v39.__r_.__value_.__l + 2);
            v6 = HIBYTE(v22);
            v8 = *(_QWORD *)(a3 + 8);
            v7 = HIBYTE(v22);
            break;
          }
        }
        npc<morphun::Token const>(v38);
        *((_QWORD *)&v21 + 1) = *((_QWORD *)&v38 + 1);
        *(_QWORD *)&v21 = *(_QWORD *)(v38 + 80);
        v38 = v21;
        v14 = *(_QWORD *)(v13 + 16);
        if (v14)
          goto LABEL_11;
      }
      if ((v7 & 0x80u) == 0)
        v23 = v6;
      else
        v23 = v8;
      if (!v23)
      {
        v38 = *(_OWORD *)(v13 + 8);
        v27 = *((_QWORD *)&v38 + 1);
        if (!*((_QWORD *)&v38 + 1))
          goto LABEL_44;
LABEL_43:
        v27 = *(_QWORD *)(v27 + 80);
LABEL_44:
        while (v27 != (_QWORD)v38)
        {
          if ((_QWORD)v38
          {
            morphun::dialog::DictionaryLookupFunction::determine((uint64_t)a1, v38 + 16, &v39);
            if ((v7 & 0x80) != 0)
              operator delete(*(void **)a3);
            *(_OWORD *)a3 = *(_OWORD *)&v39.__r_.__value_.__l.__data_;
            v29 = v39.__r_.__value_.__r.__words[2];
            *(_QWORD *)(a3 + 16) = *((_QWORD *)&v39.__r_.__value_.__l + 2);
            v6 = HIBYTE(v29);
            v8 = *(_QWORD *)(a3 + 8);
            v7 = HIBYTE(v29);
            break;
          }
          npc<morphun::Token const>(v38);
          *((_QWORD *)&v28 + 1) = *((_QWORD *)&v38 + 1);
          *(_QWORD *)&v28 = *(_QWORD *)(v38 + 80);
          v38 = v28;
          v27 = *(_QWORD *)(v13 + 16);
          if (v27)
            goto LABEL_43;
        }
      }
      if ((v7 & 0x80u) == 0)
        v24 = v6;
      else
        v24 = v8;
      if (v24)
        goto LABEL_66;
      v25 = (morphun::grammar::synthesis::GrammemeConstants *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v13 + 104))(v13);
      if (!v25)
      {
        v36 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
        morphun::exception::NullPointerException::NullPointerException(v36);
      }
      v26 = *((_QWORD *)v25 + 10);
      if (!v26)
      {
        v37 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
        morphun::exception::NullPointerException::NullPointerException(v37);
      }
      if (*(char *)(v26 + 63) < 0)
        std::basic_string<char16_t>::__init_copy_ctor_external(&v39, *(const std::basic_string<char16_t>::value_type **)(v26 + 40), *(_QWORD *)(v26 + 48));
      else
        v39 = *(std::basic_string<char16_t> *)(v26 + 40);
      size = HIBYTE(v39.__r_.__value_.__r.__words[2]);
      v31 = SHIBYTE(v39.__r_.__value_.__r.__words[2]);
      if ((v39.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        size = v39.__r_.__value_.__l.__size_;
      if (!size)
      {
LABEL_64:
        if (v31 < 0)
          operator delete(v39.__r_.__value_.__l.__data_);
LABEL_66:
        (*(void (**)(uint64_t))(*(_QWORD *)v13 + 16))(v13);
        return;
      }
      v32 = &v39;
      if ((v39.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v32 = (std::basic_string<char16_t> *)v39.__r_.__value_.__r.__words[0];
      v33 = (unsigned __int16)v32->__r_.__value_.__s.__data_[size - 1];
      if (v33 != 111)
      {
        if (v33 == 105)
        {
          v34 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(v25);
          goto LABEL_63;
        }
        if (v33 != 97)
          goto LABEL_64;
      }
      v34 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v25);
LABEL_63:
      std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)a3, v34);
      goto LABEL_64;
    }
  }
}

void sub_1CB516F80(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
  if ((*(_BYTE *)(v1 + 23) & 0x80) != 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(a1);
}

morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction *morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction::ItGrammarSynthesizer_CountLookupFunction(morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction *this)
{
  morphun::grammar::synthesis::GrammemeConstants *v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  morphun::util::LocaleUtils *v7;
  uint64_t i;
  morphun::TokenizerFactory *v9;
  const morphun::util::ULocale *v10;
  morphun::Tokenizer *Tokenizer;
  uint64_t v12;
  uint64_t *BinaryProperties;
  void **p_p;
  char v16;
  std::basic_string<char16_t> v17;
  std::basic_string<char16_t> v18;
  __int128 __p;
  uint64_t v20;
  __int128 v21;

  *(_QWORD *)&v21 = *MEMORY[0x1E0C80C00];
  *(_QWORD *)this = &off_1E865D010;
  v2 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::ITALIAN(this);
  v3 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v2);
  if (*(char *)(v3 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v17, *(const std::basic_string<char16_t>::value_type **)v3, *(_QWORD *)(v3 + 8));
  }
  else
  {
    v4 = *(_OWORD *)v3;
    v17.__r_.__value_.__r.__words[2] = *(_QWORD *)(v3 + 16);
    *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v4;
  }
  v5 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v3);
  if (*(char *)(v5 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v18, *(const std::basic_string<char16_t>::value_type **)v5, *(_QWORD *)(v5 + 8));
  }
  else
  {
    v6 = *(_OWORD *)v5;
    v18.__r_.__value_.__r.__words[2] = *(_QWORD *)(v5 + 16);
    *(_OWORD *)&v18.__r_.__value_.__l.__data_ = v6;
  }
  __p = 0uLL;
  v20 = 0;
  v16 = 0;
  *(_QWORD *)&__p = operator new(0x30uLL);
  *((_QWORD *)&__p + 1) = __p;
  v20 = __p + 48;
  *((_QWORD *)&__p + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v20, (__int128 *)&v17, &__p, (std::basic_string<char16_t> *)__p);
  morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction((uint64_t)this, (uint64_t *)off_1E8668190, v2, (uint64_t *)&__p);
  p_p = (void **)&__p;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&p_p);
  for (i = 0; i != -6; i -= 3)
  {
    if (SHIBYTE(v18.__r_.__value_.__r.__words[i + 2]) < 0)
      operator delete(*(void **)((char *)&v17 + i * 8 + 24));
  }
  *(_QWORD *)this = &off_1E866EAB0;
  v9 = (morphun::TokenizerFactory *)morphun::util::LocaleUtils::ITALIAN(v7);
  Tokenizer = morphun::TokenizerFactory::createTokenizer(v9, v10);
  *((_QWORD *)this + 28) = 0;
  v12 = *((_QWORD *)this + 2);
  *((_QWORD *)this + 26) = Tokenizer;
  *((_QWORD *)this + 27) = v12;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"noun");
  memset(&v17, 0, sizeof(v17));
  p_p = (void **)&v17;
  v16 = 0;
  v17.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x18uLL);
  v17.__r_.__value_.__l.__size_ = v17.__r_.__value_.__r.__words[0];
  v17.__r_.__value_.__r.__words[2] = v17.__r_.__value_.__r.__words[0] + 24;
  v17.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v17.__r_.__value_.__r.__words[2], &__p, &v21, (std::basic_string<char16_t> *)v17.__r_.__value_.__l.__data_);
  BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v12, (uint64_t *)this + 28, (uint64_t *)&v17);
  morphun::util::Validate::notNull<long long>((uint64_t)BinaryProperties);
  p_p = (void **)&v17;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&p_p);
  if (SHIBYTE(v20) < 0)
    operator delete((void *)__p);
  return this;
}

void sub_1CB517228(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  morphun::dialog::DictionaryLookupFunction *v25;
  uint64_t v27;

  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a9);
  if (a25 < 0)
    operator delete(__p);
  v27 = *((_QWORD *)v25 + 26);
  *((_QWORD *)v25 + 26) = 0;
  if (v27)
    (*(void (**)(uint64_t))(*(_QWORD *)v27 + 16))(v27);
  morphun::dialog::DictionaryLookupFunction::~DictionaryLookupFunction(v25, (uint64_t *)off_1E8668190);
  _Unwind_Resume(a1);
}

uint64_t **com::apple::siri::tokenizer::data::config_zh_Hans::getContent@<X0>(uint64_t **a1@<X8>)
{
  _OWORD v3[3];
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v3[0] = xmmword_1E86769A8;
  v3[1] = *(_OWORD *)&off_1E86769B8;
  v3[2] = xmmword_1E86769C8;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 2);
}

uint64_t morphun::analysis::util::StopwordAnalyzerBase::getStopwordSet(morphun::analysis::util::StopwordAnalyzerBase *this)
{
  return *((_QWORD *)this + 8);
}

morphun::analysis::Analyzer *morphun::analysis::util::StopwordAnalyzerBase::StopwordAnalyzerBase(morphun::analysis::Analyzer *a1, uint64_t *a2, uint64_t a3)
{
  morphun::analysis::Analyzer *result;
  uint64_t v6;

  result = morphun::analysis::Analyzer::Analyzer(a1, a2 + 1);
  v6 = *a2;
  *(_QWORD *)result = *a2;
  *(_QWORD *)((char *)result + *(_QWORD *)(v6 - 40)) = a2[3];
  *((_QWORD *)result + 8) = a3;
  return result;
}

morphun::analysis::Analyzer *morphun::analysis::util::StopwordAnalyzerBase::StopwordAnalyzerBase(morphun::analysis::util::StopwordAnalyzerBase *this, uint64_t *a2)
{
  morphun::analysis::Analyzer *result;
  uint64_t v4;

  result = morphun::analysis::Analyzer::Analyzer(this, a2 + 1);
  v4 = *a2;
  *(_QWORD *)result = *a2;
  *(_QWORD *)((char *)result + *(_QWORD *)(v4 - 40)) = a2[3];
  *((_QWORD *)result + 8) = 0;
  return result;
}

void morphun::analysis::util::StopwordAnalyzerBase::~StopwordAnalyzerBase(morphun::analysis::util::StopwordAnalyzerBase *this, uint64_t a2)
{
  morphun::analysis::Analyzer::~Analyzer(this, (uint64_t *)(a2 + 8));
}

uint64_t morphun::analysis::util::StopwordAnalyzerBase::loadStopwordSet(const void **a1, const void **a2, uint64_t a3)
{
  uint64_t *v4;
  unint64_t v5;
  _WORD *String;
  uint64_t v7;
  uint64_t v8;
  int v10;
  unsigned __int16 *v11;
  uint64_t v12;
  void *__p[2];
  unsigned __int8 v15;

  std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)__p, a1, a2);
  if ((v15 & 0x80u) == 0)
    v4 = (uint64_t *)__p;
  else
    v4 = (uint64_t *)__p[0];
  if ((v15 & 0x80u) == 0)
    v5 = v15;
  else
    v5 = (unint64_t)__p[1];
  String = (_WORD *)morphun::resources::DataResource::getString(v4, v5, 0);
  if ((char)v15 < 0)
    operator delete(__p[0]);
  if (*String)
  {
    v7 = 0;
    do
      v8 = v7 + 1;
    while (String[++v7]);
  }
  else
  {
    v8 = 0;
  }
  v10 = *(char *)(a3 + 23);
  if (v10 >= 0)
    v11 = (unsigned __int16 *)a3;
  else
    v11 = *(unsigned __int16 **)a3;
  if (v10 >= 0)
    v12 = *(unsigned __int8 *)(a3 + 23);
  else
    v12 = *(_QWORD *)(a3 + 8);
  return morphun::analysis::util::WordlistLoader::getWordSet((uint64_t)String, v8, v11, v12);
}

void sub_1CB5174CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t morphun::analysis::util::StopwordAnalyzerBase::loadSnowballStopwordSet(const void **a1)
{
  uint64_t *v1;
  unint64_t v2;
  _WORD *String;
  uint64_t v4;
  uint64_t v5;
  void *__p[2];
  unsigned __int8 v9;

  std::operator+<char16_t>((uint64_t)__p, "/", a1);
  if ((v9 & 0x80u) == 0)
    v1 = (uint64_t *)__p;
  else
    v1 = (uint64_t *)__p[0];
  if ((v9 & 0x80u) == 0)
    v2 = v9;
  else
    v2 = (unint64_t)__p[1];
  String = (_WORD *)morphun::resources::DataResource::getString(v1, v2, 0);
  if ((char)v9 < 0)
    operator delete(__p[0]);
  if (*String)
  {
    v4 = 0;
    do
      v5 = v4 + 1;
    while (String[++v4]);
  }
  else
  {
    v5 = 0;
  }
  return morphun::analysis::util::WordlistLoader::getWordSet((uint64_t)String, v5, (unsigned __int16 *)"|", 1);
}

void sub_1CB517590(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::ItGrammarSynthesizer_IndefiniteArticleLookupFunction::~ItGrammarSynthesizer_IndefiniteArticleLookupFunction(morphun::grammar::synthesis::ItGrammarSynthesizer_IndefiniteArticleLookupFunction *this)
{
  morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction *v1;

  *(_QWORD *)this = &off_1E865F028;
  v1 = (morphun::grammar::synthesis::ItGrammarSynthesizer_IndefiniteArticleLookupFunction *)((char *)this + 64);
  morphun::grammar::synthesis::ItGrammarSynthesizer_GenderLookupFunction::~ItGrammarSynthesizer_GenderLookupFunction((morphun::grammar::synthesis::ItGrammarSynthesizer_IndefiniteArticleLookupFunction *)((char *)this + 296));
  morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction::~ItGrammarSynthesizer_CountLookupFunction(v1);
}

{
  morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction *v1;

  *(_QWORD *)this = &off_1E865F028;
  v1 = (morphun::grammar::synthesis::ItGrammarSynthesizer_IndefiniteArticleLookupFunction *)((char *)this + 64);
  morphun::grammar::synthesis::ItGrammarSynthesizer_GenderLookupFunction::~ItGrammarSynthesizer_GenderLookupFunction((morphun::grammar::synthesis::ItGrammarSynthesizer_IndefiniteArticleLookupFunction *)((char *)this + 296));
  morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction::~ItGrammarSynthesizer_CountLookupFunction(v1);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer_IndefiniteArticleLookupFunction::getArticle(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  morphun::util::LocaleUtils *v9;
  unsigned __int16 *v10;
  uint64_t v11;
  morphun::dictionary::DictionaryMetaData *v12;
  morphun::dictionary::DictionaryMetaData *v13;
  uint64_t v14;
  void *__p[2];
  uint64_t v17;

  v9 = (morphun::util::LocaleUtils *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
  v10 = (unsigned __int16 *)v9;
  if (a5 == 2)
  {
    if (a4 == 2)
    {
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "d");
      v11 = (*(uint64_t (**)(uint64_t, uint64_t, void **))(*(_QWORD *)a1 + 32))(a1, a2, __p);
    }
    else
    {
      v13 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::ITALIAN(v9);
      if (morphun::dictionary::PhraseProperties::isStartsWithVowel(v13, (uint64_t)v10))
        std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)aUn_0);
      else
        std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"una ");
      v11 = (*(uint64_t (**)(uint64_t, uint64_t, void **))(*(_QWORD *)a1 + 32))(a1, a2, __p);
    }
  }
  else if (a4 == 2)
  {
    v12 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::ITALIAN(v9);
    if ((morphun::dictionary::PhraseProperties::isStartsWithVowel(v12, (uint64_t)v10) & 1) != 0
      || morphun::grammar::synthesis::ItGrammarSynthesizer::startsWithConsonantSubset(v10))
    {
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"degli ");
      v11 = (*(uint64_t (**)(uint64_t, uint64_t, void **))(*(_QWORD *)a1 + 32))(a1, a2, __p);
    }
    else
    {
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "d");
      v11 = (*(uint64_t (**)(uint64_t, uint64_t, void **))(*(_QWORD *)a1 + 32))(a1, a2, __p);
    }
  }
  else if (morphun::grammar::synthesis::ItGrammarSynthesizer::startsWithConsonantSubset((unsigned __int16 *)v9))
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "u");
    v11 = (*(uint64_t (**)(uint64_t, uint64_t, void **))(*(_QWORD *)a1 + 32))(a1, a2, __p);
  }
  else if (a4 == 1 && a5 == 1)
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"un ");
    v11 = (*(uint64_t (**)(uint64_t, uint64_t, void **))(*(_QWORD *)a1 + 32))(a1, a2, __p);
  }
  else
  {
    __p[0] = 0;
    __p[1] = 0;
    v17 = 0;
    v11 = (*(uint64_t (**)(uint64_t, uint64_t, void **))(*(_QWORD *)a1 + 32))(a1, a2, __p);
  }
  v14 = v11;
  if (SHIBYTE(v17) < 0)
    operator delete(__p[0]);
  return v14;
}

void sub_1CB51785C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t **com::apple::siri::tokenizer::data::config_he::getContent@<X0>(uint64_t **a1@<X8>)
{
  _OWORD v3[4];
  const char *v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v3[2] = xmmword_1E86769F8;
  v3[3] = *(_OWORD *)&off_1E8676A08;
  v4 = "(";
  v3[0] = xmmword_1E86769D8;
  v3[1] = unk_1E86769E8;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 3);
}

uint64_t morphun::dictionary::PhraseProperties::RIEUL_END_TAG(morphun::dictionary::PhraseProperties *this)
{
  unsigned __int8 v1;
  uint64_t result;
  _QWORD *v3;
  morphun::exception::NullPointerException *exception;

  if ((v1 & 1) == 0
  {
    v3 = (_QWORD *)operator new();
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v3, (char *)L"rieul-end");
    morphun::dictionary::PhraseProperties::RIEUL_END_TAG(void)::RIEUL_END_TAG_ = (uint64_t)v3;
  }
  result = morphun::dictionary::PhraseProperties::RIEUL_END_TAG(void)::RIEUL_END_TAG_;
  if (!morphun::dictionary::PhraseProperties::RIEUL_END_TAG(void)::RIEUL_END_TAG_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB5179B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_START(morphun::dictionary::PhraseProperties *this)
{
  unsigned __int8 v1;
  _QWORD *v3;
  std::basic_string<char16_t>::size_type v4;
  std::basic_string<char16_t> __dst;
  std::basic_string<char16_t> v6;
  void *__p;
  char v8;

  if ((v1 & 1) == 0
  {
    v3 = (_QWORD *)operator new();
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)morphun::dictionary::DEFAULT_VOWEL_STR);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v6, L"[", &__dst, v4);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&__p, &v6, L"]");
    icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v3);
    MEMORY[0x1D179D94C](*v3, 2);
    MEMORY[0x1D179D970](*v3);
    if (v8 < 0)
      operator delete(__p);
    if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v6.__r_.__value_.__l.__data_);
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__dst.__r_.__value_.__l.__data_);
    morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_START(void)::DEFAULT_VOWELS_START_ = (uint64_t)v3;
  }
  return npc<icu4cxx::UnicodeSet const>(morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_START(void)::DEFAULT_VOWELS_START_);
}

void sub_1CB517B28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  uint64_t v27;

  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  MEMORY[0x1D179D2EC](v27, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

void sub_1CB517C0C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::PhraseProperties::FRENCH_VOWELS_START(morphun::dictionary::PhraseProperties *this)
{
  unsigned __int8 v1;
  _QWORD *v3;
  std::basic_string<char16_t>::size_type v4;
  std::basic_string<char16_t> __dst;
  std::basic_string<char16_t> v6;
  void *__p;
  char v8;

  if ((v1 & 1) == 0
  {
    v3 = (_QWORD *)operator new();
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)morphun::dictionary::DEFAULT_VOWEL_STR);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v6, L"[h", &__dst, v4);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&__p, &v6, L"]");
    icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v3);
    MEMORY[0x1D179D94C](*v3, 2);
    MEMORY[0x1D179D970](*v3);
    if (v8 < 0)
      operator delete(__p);
    if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v6.__r_.__value_.__l.__data_);
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__dst.__r_.__value_.__l.__data_);
    morphun::dictionary::PhraseProperties::FRENCH_VOWELS_START(void)::FRENCH_VOWELS_START_ = (uint64_t)v3;
  }
  return npc<icu4cxx::UnicodeSet const>(morphun::dictionary::PhraseProperties::FRENCH_VOWELS_START(void)::FRENCH_VOWELS_START_);
}

void sub_1CB517D50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  uint64_t v27;

  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  MEMORY[0x1D179D2EC](v27, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_END(morphun::dictionary::PhraseProperties *this)
{
  unsigned __int8 v1;
  _QWORD *v3;
  std::basic_string<char16_t>::size_type v4;
  std::basic_string<char16_t> __dst;
  std::basic_string<char16_t> v6;
  void *__p;
  char v8;

  if ((v1 & 1) == 0
  {
    v3 = (_QWORD *)operator new();
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)morphun::dictionary::DEFAULT_VOWEL_STR);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v6, "[", &__dst, v4);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&__p, &v6, L"]");
    icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v3);
    MEMORY[0x1D179D94C](*v3, 2);
    MEMORY[0x1D179D970](*v3);
    if (v8 < 0)
      operator delete(__p);
    if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v6.__r_.__value_.__l.__data_);
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__dst.__r_.__value_.__l.__data_);
    morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_END(void)::DEFAULT_VOWELS_END_ = (uint64_t)v3;
  }
  return npc<icu4cxx::UnicodeSet const>(morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_END(void)::DEFAULT_VOWELS_END_);
}

void sub_1CB517F20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  uint64_t v27;

  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  MEMORY[0x1D179D2EC](v27, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::PhraseProperties::I_LETTER(morphun::dictionary::PhraseProperties *this)
{
  unsigned __int8 v1;
  _QWORD *v3;

  if ((v1 & 1) == 0
  {
    v3 = (_QWORD *)operator new();
    icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v3);
    MEMORY[0x1D179D94C](*v3, 2);
    MEMORY[0x1D179D970](*v3);
    morphun::dictionary::PhraseProperties::I_LETTER(void)::I_LETTER_ = (uint64_t)v3;
  }
  return npc<icu4cxx::UnicodeSet const>(morphun::dictionary::PhraseProperties::I_LETTER(void)::I_LETTER_);
}

void sub_1CB518054(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::PhraseProperties::J_LETTER(morphun::dictionary::PhraseProperties *this)
{
  unsigned __int8 v1;
  _QWORD *v3;

  if ((v1 & 1) == 0
  {
    v3 = (_QWORD *)operator new();
    icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v3);
    MEMORY[0x1D179D94C](*v3, 2);
    MEMORY[0x1D179D970](*v3);
    morphun::dictionary::PhraseProperties::J_LETTER(void)::J_LETTER_ = (uint64_t)v3;
  }
  return npc<icu4cxx::UnicodeSet const>(morphun::dictionary::PhraseProperties::J_LETTER(void)::J_LETTER_);
}

void sub_1CB518120(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::PhraseProperties::DEFAULT_MATCHABLE_SET(morphun::dictionary::PhraseProperties *this)
{
  unsigned __int8 v1;
  _QWORD *v3;

  if ((v1 & 1) == 0
  {
    v3 = (_QWORD *)operator new();
    icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v3);
    MEMORY[0x1D179D970](*v3);
    morphun::dictionary::PhraseProperties::DEFAULT_MATCHABLE_SET(void)::DEFAULT_MATCHABLE_SET_ = (uint64_t)v3;
  }
  return npc<icu4cxx::UnicodeSet const>(morphun::dictionary::PhraseProperties::DEFAULT_MATCHABLE_SET(void)::DEFAULT_MATCHABLE_SET_);
}

void sub_1CB5181E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::PhraseProperties::PUNCTUATION(morphun::dictionary::PhraseProperties *this)
{
  unsigned __int8 v1;
  _QWORD *v3;

  if ((v1 & 1) == 0
  {
    v3 = (_QWORD *)operator new();
    icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v3);
    MEMORY[0x1D179D970](*v3);
    morphun::dictionary::PhraseProperties::PUNCTUATION(void)::PUNCTUATION_ = (uint64_t)v3;
  }
  return npc<icu4cxx::UnicodeSet const>(morphun::dictionary::PhraseProperties::PUNCTUATION(void)::PUNCTUATION_);
}

void sub_1CB5182A0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::PhraseProperties::isStartsWithVowel(morphun::dictionary::DictionaryMetaData *a1, uint64_t a2)
{
  _QWORD *Dictionary;
  uint64_t v5;
  int v6;
  const UChar *v7;
  uint64_t v8;
  morphun::util::LocaleUtils *CombinedBinaryType;
  uint64_t *BinaryProperties;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v14;
  size_t v15;
  uint64_t v16;
  int v17;
  unsigned __int8 *v18;
  unsigned __int8 *v19;
  unsigned __int8 *v20;
  unsigned __int8 *v21;
  void **p_s1;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  int v27;
  BOOL v29;
  _BOOL4 v30;
  morphun::dictionary::PhraseProperties *v31;
  uint64_t v32;
  int v33;
  _WORD *v34;
  morphun::dictionary::PhraseProperties *v35;
  _QWORD *v36;
  morphun::dictionary::PhraseProperties *v37;
  _QWORD *v38;
  void *__p[2];
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  std::basic_string<char16_t> *v44;
  std::basic_string<char16_t> *v45;
  _QWORD v46[11];
  void *__s1;
  size_t __n;
  unsigned __int8 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 __dst;
  uint64_t v54;
  __int128 v55;

  *(_QWORD *)&v55 = *MEMORY[0x1E0C80C00];
  Dictionary = morphun::dictionary::DictionaryMetaData::createDictionary(a1, (const morphun::util::ULocale *)a2);
  v5 = npc<morphun::dictionary::DictionaryMetaData const>((uint64_t)Dictionary);
  v51 = 0;
  v52 = 0;
  v50 = 0;
  v6 = *(char *)(a2 + 23);
  if (v6 >= 0)
    v7 = (const UChar *)a2;
  else
    v7 = *(const UChar **)a2;
  if (v6 >= 0)
    v8 = *(unsigned __int8 *)(a2 + 23);
  else
    v8 = *(_QWORD *)(a2 + 8);
  CombinedBinaryType = (morphun::util::LocaleUtils *)morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v5, (uint64_t)&v50, v7, v8);
  if (CombinedBinaryType)
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)&morphun::dialog::VOWEL_START);
    v44 = 0;
    v45 = 0;
    v46[0] = 0;
    LOBYTE(v42) = 0;
    v44 = (std::basic_string<char16_t> *)operator new(0x18uLL);
    v45 = v44;
    v46[0] = v44 + 1;
    v45 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)v46, &__dst, &v55, v44);
    BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties((uint64_t)Dictionary, &v52, (uint64_t *)&v44);
    v41 = &v44;
    std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v41);
    if (SHIBYTE(v54) < 0)
      operator delete((void *)__dst);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)&morphun::dialog::CONSONANT_START);
    v44 = 0;
    v45 = 0;
    v46[0] = 0;
    v41 = &v44;
    LOBYTE(v42) = 0;
    v44 = (std::basic_string<char16_t> *)operator new(0x18uLL);
    v45 = v44;
    v46[0] = v44 + 1;
    v45 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)v46, &__dst, &v55, v44);
    v11 = morphun::dictionary::DictionaryMetaData::getBinaryProperties((uint64_t)Dictionary, &v51, (uint64_t *)&v44);
    v41 = &v44;
    std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v41);
    if (SHIBYTE(v54) < 0)
      operator delete((void *)__dst);
    if ((unint64_t)v11 | (unint64_t)BinaryProperties)
    {
      v12 = v51 & v50;
      if ((v52 & v50) != 0)
      {
        if (!v12)
          return 1;
      }
      else if (v12)
      {
        return 0;
      }
    }
  }
  v14 = morphun::util::LocaleUtils::FRENCH(CombinedBinaryType);
  __dst = 0uLL;
  v54 = 0;
  v41 = 0;
  v42 = 0;
  v43 = 0;
  __p[0] = 0;
  __p[1] = 0;
  v40 = 0;
  morphun::util::ULocale::ULocale((uint64_t)&v44, (uint64_t)a1 + 8, (uint64_t)&__dst, (uint64_t)&v41, (uint64_t)__p);
  if ((v49 & 0x80u) == 0)
    v15 = v49;
  else
    v15 = __n;
  v16 = *(unsigned __int8 *)(v14 + 127);
  v17 = (char)v16;
  if ((v16 & 0x80u) != 0)
    v16 = *(_QWORD *)(v14 + 112);
  if (v15 == v16)
  {
    v20 = *(unsigned __int8 **)(v14 + 104);
    v19 = (unsigned __int8 *)(v14 + 104);
    v18 = v20;
    if (v17 >= 0)
      v21 = v19;
    else
      v21 = v18;
    if ((v49 & 0x80) != 0)
    {
      v30 = memcmp(__s1, v21, __n) == 0;
    }
    else if (v49)
    {
      p_s1 = &__s1;
      v23 = v49 - 1;
      do
      {
        v25 = *(unsigned __int8 *)p_s1;
        p_s1 = (void **)((char *)p_s1 + 1);
        v24 = v25;
        v27 = *v21++;
        v26 = v27;
        v29 = v23-- != 0;
        v30 = v24 == v26;
      }
      while (v24 == v26 && v29);
    }
    else
    {
      v30 = 1;
    }
  }
  else
  {
    v30 = 0;
  }
  if (SHIBYTE(v40) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v43) < 0)
    operator delete(v41);
  if ((SHIBYTE(v54) & 0x80000000) == 0)
  {
    if (v30)
      goto LABEL_44;
LABEL_54:
    v37 = (morphun::dictionary::PhraseProperties *)morphun::dictionary::PhraseProperties::DEFAULT_MATCHABLE_SET(v31);
    v38 = (_QWORD *)morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_START(v37);
    v44 = 0;
    v45 = 0;
    v46[0] = 0;
    return morphun::dictionary::PhraseProperties::isStartsWithUnicodeSets(a2, v37, v38, (uint64_t **)&v44);
  }
  operator delete((void *)__dst);
  if (!v30)
    goto LABEL_54;
LABEL_44:
  if (v50)
  {
    v32 = *(unsigned __int8 *)(a2 + 23);
    v33 = (char)v32;
    if ((v32 & 0x80u) != 0)
      v32 = *(_QWORD *)(a2 + 8);
    if (v32)
    {
      v34 = *(_WORD **)a2;
      if (v33 >= 0)
        v34 = (_WORD *)a2;
      if (*v34 == 72)
        return 0;
    }
  }
  v35 = (morphun::dictionary::PhraseProperties *)morphun::dictionary::PhraseProperties::DEFAULT_MATCHABLE_SET(v31);
  v36 = (_QWORD *)morphun::dictionary::PhraseProperties::FRENCH_VOWELS_START(v35);
  v44 = 0;
  v45 = 0;
  v46[0] = 0;
  return morphun::dictionary::PhraseProperties::isStartsWithUnicodeSets(a2, v35, v36, (uint64_t **)&v44);
}

void sub_1CB518664(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;

  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a16);
  if (*(char *)(v23 - 73) < 0)
    operator delete(*(void **)(v23 - 96));
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::dictionary::DictionaryMetaData const>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB518730(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::PhraseProperties::isStartsWithUnicodeSets(uint64_t a1, _QWORD *a2, _QWORD *a3, uint64_t **a4)
{
  int FirstUsableIndex;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  int v14;
  int v15;
  uint64_t *v16;
  _QWORD *v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  std::basic_string<char16_t> *appended;
  void *p_p;
  int v30;
  uint64_t v31;
  _BOOL8 v32;
  void *__p;
  uint64_t v35;
  unsigned __int8 v36;
  std::basic_string<char16_t> v37;

  FirstUsableIndex = morphun::dictionary::PhraseProperties::getFirstUsableIndex(a1, a2);
  if (FirstUsableIndex < 0)
    return 0;
  v8 = FirstUsableIndex;
  if (*a4 != a4[1])
  {
    v9 = *(char *)(a1 + 23);
    if (v9 >= 0)
      v10 = a1;
    else
      v10 = *(_QWORD *)a1;
    if (v9 >= 0)
      LODWORD(v11) = *(unsigned __int8 *)(a1 + 23);
    else
      v11 = *(_QWORD *)(a1 + 8);
    v12 = morphun::util::StringViewUtils::codePointAt(v10, v11, v8);
    if (MEMORY[0x1D179D958](*a3, v12))
    {
      v13 = *a4;
      v14 = *(char *)(a1 + 23) >= 0 ? *(unsigned __int8 *)(a1 + 23) : *(_DWORD *)(a1 + 8);
      v15 = v8 + 1;
      while (1)
      {
        v16 = a4[1];
        if (v13 == v16 || v15 >= v14)
          break;
        v19 = *v13++;
        v18 = (_QWORD *)v19;
        npc<icu4cxx::UnicodeSet const>(v19);
        v20 = *(char *)(a1 + 23);
        if (v20 >= 0)
          v21 = a1;
        else
          v21 = *(_QWORD *)a1;
        if (v20 >= 0)
          LODWORD(v22) = *(unsigned __int8 *)(a1 + 23);
        else
          v22 = *(_QWORD *)(a1 + 8);
        v23 = morphun::util::StringViewUtils::codePointAt(v21, v22, v15++);
        if (!MEMORY[0x1D179D958](*v18, v23))
          return 0;
      }
      if (v13 == v16)
        return 1;
    }
    return 0;
  }
  memset(&v37, 0, sizeof(v37));
  v24 = *(char *)(a1 + 23);
  if (v24 >= 0)
    v25 = a1;
  else
    v25 = *(_QWORD *)a1;
  if (v24 >= 0)
    LODWORD(v26) = *(unsigned __int8 *)(a1 + 23);
  else
    v26 = *(_QWORD *)(a1 + 8);
  v27 = morphun::util::StringViewUtils::codePointAt(v25, v26, v8);
  appended = morphun::util::StringUtils::appendCodePoint(&v37, v27);
  morphun::dictionary::NFKD((morphun::dictionary *)appended);
  morphun::dictionary::PhraseProperties::normalize((uint64_t)&v37, (uint64_t)&__p);
  if ((v36 & 0x80u) == 0)
    p_p = &__p;
  else
    p_p = __p;
  if ((v36 & 0x80u) == 0)
    v30 = v36;
  else
    v30 = v35;
  v31 = morphun::util::StringViewUtils::codePointAt((uint64_t)p_p, v30, 0);
  v32 = MEMORY[0x1D179D958](*a3, v31) != 0;
  if ((char)v36 < 0)
    operator delete(__p);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  return v32;
}

void sub_1CB5188F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
    operator delete(__p);
  if (a20 < 0)
    operator delete(a15);
  _Unwind_Resume(exception_object);
}

uint64_t morphun::dictionary::PhraseProperties::getFirstUsableIndex(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (*(char *)(a1 + 23) < 0)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (!v4)
      return 0xFFFFFFFFLL;
  }
  else
  {
    LODWORD(v4) = *(unsigned __int8 *)(a1 + 23);
    if (!*(_BYTE *)(a1 + 23))
      return 0xFFFFFFFFLL;
  }
  if ((int)v4 < 1)
    return 0xFFFFFFFFLL;
  v5 = 0;
  while (1)
  {
    v6 = *(char *)(a1 + 23);
    v7 = v6 >= 0 ? a1 : *(_QWORD *)a1;
    if (v6 >= 0)
      LODWORD(v8) = *(unsigned __int8 *)(a1 + 23);
    else
      v8 = *(_QWORD *)(a1 + 8);
    v9 = morphun::util::StringViewUtils::codePointAt(v7, v8, v5);
    if (MEMORY[0x1D179D958](*a2, v9))
      break;
    v5 = (v5 + 1);
    if ((_DWORD)v4 == (_DWORD)v5)
      return 0xFFFFFFFFLL;
  }
  return v5;
}

uint64_t morphun::dictionary::NFKD(morphun::dictionary *this)
{
  unsigned __int8 v1;
  uint64_t result;
  icu4cxx::Normalizer2 *v3;
  morphun::exception::NullPointerException *exception;

  {
    v3 = (icu4cxx::Normalizer2 *)operator new();
    icu4cxx::Normalizer2::getNFKDInstance(v3);
    morphun::dictionary::NFKD(void)::NFKD_ = (uint64_t)v3;
  }
  result = morphun::dictionary::NFKD(void)::NFKD_;
  if (!morphun::dictionary::NFKD(void)::NFKD_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB518A5C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

void morphun::dictionary::PhraseProperties::normalize(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  int v4;
  int v5;

  if (*(char *)(a1 + 23) >= 0)
    LODWORD(v3) = *(unsigned __int8 *)(a1 + 23);
  else
    v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  if ((int)v3 >= 1)
  {
    std::basic_string<char16_t>::resize((std::basic_string<char16_t> *)a2, v3, 0);
    v4 = unorm2_normalize();
    v5 = *(unsigned __int8 *)(a2 + 23);
    if ((v5 & 0x80u) != 0)
      v5 = *(_DWORD *)(a2 + 8);
    if (v4 != v5)
      std::basic_string<char16_t>::resize((std::basic_string<char16_t> *)a2, v4, 0);
  }
}

void sub_1CB518C08(_Unwind_Exception *a1)
{
  uint64_t v1;
  void *v2;

  __cxa_free_exception(v2);
  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(a1);
}

uint64_t icu4cxx::Normalizer2::getNFKDInstance(icu4cxx::Normalizer2 *this)
{
  uint64_t result;

  result = unorm2_getNFKDInstance();
  *(_QWORD *)this = result;
  *((_BYTE *)this + 8) = 0;
  return result;
}

void sub_1CB518CA4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::PhraseProperties::isEndsWithVowel(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  const morphun::util::ULocale *v5;
  _QWORD *Dictionary;
  morphun::dictionary::PhraseProperties *v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;
  std::basic_string<char16_t>::size_type v11;
  uint64_t *BinaryProperties;
  morphun::dictionary::PhraseProperties *v13;
  uint64_t v14;
  __int128 v15;
  uint64_t *v16;
  unsigned __int8 **v17;
  morphun::util::LocaleUtils *CombinedBinaryType;
  uint64_t i;
  const UChar *v20;
  uint64_t v21;
  uint64_t isEndsWithUnicodeSets;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  const void **v29;
  unsigned __int8 *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  const void **v36;
  unsigned __int8 *v37;
  _QWORD *v38;
  uint64_t v39;
  morphun::dictionary::PhraseProperties *v40;
  morphun::dictionary::PhraseProperties *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v46;
  uint64_t v47;
  void *__p;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  void **p_dst;
  char v54;
  __int128 v55;
  _QWORD *v56;
  std::basic_string<char16_t> v57;
  __int128 __dst;
  uint64_t v59;
  __int128 v60;

  *(_QWORD *)&v60 = *MEMORY[0x1E0C80C00];
  v4 = (_QWORD *)morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_END((morphun::dictionary::PhraseProperties *)a1);
  v51 = MEMORY[0x1D179D928](*v4);
  v52 = 1;
  Dictionary = morphun::dictionary::DictionaryMetaData::createDictionary((morphun::dictionary::DictionaryMetaData *)a1, v5);
  v7 = (morphun::dictionary::PhraseProperties *)npc<morphun::dictionary::DictionaryMetaData const>((uint64_t)Dictionary);
  __p = 0;
  v49 = 0;
  v50 = 0;
  v8 = (_QWORD *)morphun::dictionary::PhraseProperties::PUNCTUATION(v7);
  v9 = *(char *)(a2 + 23);
  if (v9 >= 0)
    v10 = a2;
  else
    v10 = *(_QWORD *)a2;
  if (v9 >= 0)
    v11 = *(unsigned __int8 *)(a2 + 23);
  else
    v11 = *(_QWORD *)(a2 + 8);
  morphun::util::UnicodeSetUtils::removeSetFromString((uint64_t)&__p, v8, v10, v11);
  v46 = 0;
  v47 = 0;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)&morphun::dialog::VOWEL_END);
  v55 = 0uLL;
  v56 = 0;
  p_dst = (void **)&v55;
  v54 = 0;
  *(_QWORD *)&v55 = operator new(0x18uLL);
  *((_QWORD *)&v55 + 1) = v55;
  v56 = (_QWORD *)(v55 + 24);
  *((_QWORD *)&v55 + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v56, &__dst, &v60, (std::basic_string<char16_t> *)v55);
  BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties((uint64_t)Dictionary, &v47, (uint64_t *)&v55);
  p_dst = (void **)&v55;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&p_dst);
  if (SHIBYTE(v59) < 0)
    operator delete((void *)__dst);
  v13 = (morphun::dictionary::PhraseProperties *)std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v55, (char *)&morphun::dialog::CONSONANT_END);
  v14 = morphun::dictionary::PhraseProperties::RIEUL_END_TAG(v13);
  if (*(char *)(v14 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v57, *(const std::basic_string<char16_t>::value_type **)v14, *(_QWORD *)(v14 + 8));
  }
  else
  {
    v15 = *(_OWORD *)v14;
    v57.__r_.__value_.__r.__words[2] = *(_QWORD *)(v14 + 16);
    *(_OWORD *)&v57.__r_.__value_.__l.__data_ = v15;
  }
  __dst = 0uLL;
  v59 = 0;
  p_dst = (void **)&__dst;
  v54 = 0;
  *(_QWORD *)&__dst = operator new(0x30uLL);
  *((_QWORD *)&__dst + 1) = __dst;
  v59 = __dst + 48;
  *((_QWORD *)&__dst + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v59, &v55, &__dst, (std::basic_string<char16_t> *)__dst);
  v16 = morphun::dictionary::DictionaryMetaData::getBinaryProperties((uint64_t)Dictionary, &v46, (uint64_t *)&__dst);
  v17 = (unsigned __int8 **)(a1 + 8);
  p_dst = (void **)&__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&p_dst);
  for (i = 0; i != -6; i -= 3)
  {
    if (SHIBYTE(v57.__r_.__value_.__r.__words[i + 2]) < 0)
      operator delete(*(void **)((char *)&v57.__r_.__value_.__l.__data_ + i * 8));
  }
  if (!((unint64_t)v16 | (unint64_t)BinaryProperties))
    goto LABEL_28;
  *(_QWORD *)&v55 = 0;
  v20 = v50 >= 0 ? (const UChar *)&__p : (const UChar *)__p;
  v21 = v50 >= 0 ? HIBYTE(v50) : v49;
  CombinedBinaryType = (morphun::util::LocaleUtils *)morphun::dictionary::DictionaryMetaData::getCombinedBinaryType((uint64_t)Dictionary, (uint64_t)&v55, v20, v21);
  if (!CombinedBinaryType)
    goto LABEL_28;
  isEndsWithUnicodeSets = (v47 & (unint64_t)v55) != 0;
  v23 = v46 & v55;
  if ((v47 & (unint64_t)v55) == 0)
  {
    if (v23)
      goto LABEL_64;
LABEL_28:
    v24 = morphun::util::LocaleUtils::TURKISH(CombinedBinaryType);
    v25 = *(unsigned __int8 *)(v24 + 31);
    if ((v25 & 0x80u) == 0)
      v26 = *(unsigned __int8 *)(v24 + 31);
    else
      v26 = *(_QWORD *)(v24 + 16);
    v27 = *(unsigned __int8 *)(a1 + 31);
    v28 = (char)v27;
    if ((v27 & 0x80u) != 0)
      v27 = *(_QWORD *)(a1 + 16);
    if (v26 != v27)
      goto LABEL_43;
    v29 = (const void **)(v24 + 8);
    if (v28 >= 0)
      v30 = (unsigned __int8 *)(a1 + 8);
    else
      v30 = *v17;
    if ((v25 & 0x80) != 0)
    {
      v24 = memcmp(*v29, v30, *(_QWORD *)(v24 + 16));
      if ((_DWORD)v24)
        goto LABEL_43;
    }
    else if (*(_BYTE *)(v24 + 31))
    {
      while (*(unsigned __int8 *)v29 == *v30)
      {
        v29 = (const void **)((char *)v29 + 1);
        ++v30;
        if (!--v25)
          goto LABEL_57;
      }
LABEL_43:
      v31 = morphun::util::LocaleUtils::DUTCH((morphun::util::LocaleUtils *)v24);
      v32 = *(unsigned __int8 *)(v31 + 31);
      if ((v32 & 0x80u) == 0)
        v33 = *(unsigned __int8 *)(v31 + 31);
      else
        v33 = *(_QWORD *)(v31 + 16);
      v34 = *(unsigned __int8 *)(a1 + 31);
      v35 = (char)v34;
      if ((v34 & 0x80u) != 0)
        v34 = *(_QWORD *)(a1 + 16);
      if (v33 == v34)
      {
        v36 = (const void **)(v31 + 8);
        if (v35 >= 0)
          v37 = (unsigned __int8 *)(a1 + 8);
        else
          v37 = *v17;
        if ((v32 & 0x80) == 0)
        {
          if (*(_BYTE *)(v31 + 31))
          {
            while (*(unsigned __int8 *)v36 == *v37)
            {
              v36 = (const void **)((char *)v36 + 1);
              ++v37;
              if (!--v32)
                goto LABEL_61;
            }
            goto LABEL_63;
          }
LABEL_61:
          v40 = (morphun::dictionary::PhraseProperties *)morphun::dictionary::PhraseProperties::DEFAULT_MATCHABLE_SET((morphun::dictionary::PhraseProperties *)v31);
          v41 = (morphun::dictionary::PhraseProperties *)morphun::dictionary::PhraseProperties::I_LETTER(v40);
          v42 = morphun::dictionary::PhraseProperties::J_LETTER(v41);
          v43 = operator new(8uLL);
          *v43 = v42;
          *((_QWORD *)&v55 + 1) = v43 + 1;
          v56 = v43 + 1;
          *(_QWORD *)&v55 = v43;
          LOBYTE(v40) = morphun::dictionary::PhraseProperties::isEndsWithUnicodeSets(a2, v40, v41, (uint64_t **)&v55);
          operator delete(v43);
          if ((v40 & 1) != 0)
          {
            isEndsWithUnicodeSets = 1;
            goto LABEL_64;
          }
          goto LABEL_63;
        }
        v31 = memcmp(*v36, v37, *(_QWORD *)(v31 + 16));
        if (!(_DWORD)v31)
          goto LABEL_61;
      }
LABEL_63:
      v44 = (_QWORD *)morphun::dictionary::PhraseProperties::DEFAULT_MATCHABLE_SET((morphun::dictionary::PhraseProperties *)v31);
      v55 = 0uLL;
      v56 = 0;
      isEndsWithUnicodeSets = morphun::dictionary::PhraseProperties::isEndsWithUnicodeSets(a2, v44, &v51, (uint64_t **)&v55);
      goto LABEL_64;
    }
LABEL_57:
    v38 = (_QWORD *)morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_START((morphun::dictionary::PhraseProperties *)v24);
    v39 = MEMORY[0x1D179D928](*v38);
    *(_QWORD *)&v55 = v39;
    BYTE8(v55) = 1;
    if (v52)
      uset_close();
    v51 = v39;
    v52 = 1;
    *(_QWORD *)&v55 = 0;
    BYTE8(v55) = 0;
    icu4cxx::UnicodeSet::~UnicodeSet((icu4cxx::UnicodeSet *)&v55);
    goto LABEL_63;
  }
  if (v23)
    goto LABEL_28;
LABEL_64:
  if (SHIBYTE(v50) < 0)
    operator delete(__p);
  icu4cxx::UnicodeSet::~UnicodeSet((icu4cxx::UnicodeSet *)&v51);
  return isEndsWithUnicodeSets;
}

void sub_1CB519124(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a2)
    __clang_call_terminate(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t morphun::dictionary::PhraseProperties::isEndsWithUnicodeSets(uint64_t a1, _QWORD *a2, _QWORD *a3, uint64_t **a4)
{
  int LastUsableIndex;
  int v9;
  uint64_t *v10;
  uint64_t *v11;
  int v12;
  uint64_t *v13;
  _QWORD *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  std::basic_string<char16_t> *appended;
  int v29;
  void *p_p;
  int v31;
  uint64_t v32;
  void *__p;
  uint64_t v35;
  unsigned __int8 v36;
  std::basic_string<char16_t> v37;

  LastUsableIndex = morphun::dictionary::PhraseProperties::getLastUsableIndex(a1, a2);
  if (LastUsableIndex < 0)
    goto LABEL_44;
  v9 = LastUsableIndex;
  v10 = a4[1];
  if (*a4 != v10)
  {
    v11 = v10 - 1;
    while (1)
    {
      v12 = v9;
      v13 = v11;
      v14 = (_QWORD *)*v11;
      npc<icu4cxx::UnicodeSet const>(*v11);
      v15 = *(char *)(a1 + 23);
      v16 = v15 >= 0 ? a1 : *(_QWORD *)a1;
      if (v15 >= 0)
        LODWORD(v17) = *(unsigned __int8 *)(a1 + 23);
      else
        v17 = *(_QWORD *)(a1 + 8);
      v18 = morphun::util::StringViewUtils::codePointAt(v16, v17, v12);
      if (!MEMORY[0x1D179D958](*v14, v18))
        goto LABEL_44;
      v9 = v12 - 1;
      v11 = v13 - 1;
      if (v13 == *a4 || v12 <= 0)
      {
        if (v13 == *a4 && v12 >= 1)
        {
          v20 = *(char *)(a1 + 23);
          v21 = v20 >= 0 ? a1 : *(_QWORD *)a1;
          if (v20 >= 0)
            LODWORD(v22) = *(unsigned __int8 *)(a1 + 23);
          else
            v22 = *(_QWORD *)(a1 + 8);
          v23 = morphun::util::StringViewUtils::codePointAt(v21, v22, v9);
          if (MEMORY[0x1D179D958](*a3, v23))
          {
            LOBYTE(a3) = 1;
            return a3 & 1;
          }
        }
        goto LABEL_44;
      }
    }
  }
  memset(&v37, 0, sizeof(v37));
  v24 = *(char *)(a1 + 23);
  if (v24 >= 0)
    v25 = a1;
  else
    v25 = *(_QWORD *)a1;
  if (v24 >= 0)
    LODWORD(v26) = *(unsigned __int8 *)(a1 + 23);
  else
    v26 = *(_QWORD *)(a1 + 8);
  v27 = morphun::util::StringViewUtils::codePointAt(v25, v26, v9);
  appended = morphun::util::StringUtils::appendCodePoint(&v37, v27);
  morphun::dictionary::NFKD((morphun::dictionary *)appended);
  morphun::dictionary::PhraseProperties::normalize((uint64_t)&v37, (uint64_t)&__p);
  v29 = morphun::dictionary::PhraseProperties::getLastUsableIndex((uint64_t)&__p, a2);
  if ((v29 & 0x80000000) == 0)
  {
    if ((v36 & 0x80u) == 0)
      p_p = &__p;
    else
      p_p = __p;
    if ((v36 & 0x80u) == 0)
      v31 = v36;
    else
      v31 = v35;
    v32 = morphun::util::StringViewUtils::codePointAt((uint64_t)p_p, v31, v29);
    LOBYTE(a3) = MEMORY[0x1D179D958](*a3, v32) != 0;
  }
  if ((char)v36 < 0)
    operator delete(__p);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v37.__r_.__value_.__l.__data_);
    if ((v29 & 0x80000000) == 0)
      return a3 & 1;
    goto LABEL_44;
  }
  if (v29 < 0)
LABEL_44:
    LOBYTE(a3) = 0;
  return a3 & 1;
}

void sub_1CB5193E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t morphun::dictionary::PhraseProperties::getLastUsableIndex(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(char *)(a1 + 23) < 0)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4)
    {
LABEL_5:
      while (1)
      {
        v4 = (v4 - 1);
        if ((int)v4 < 0)
          break;
        v5 = *(char *)(a1 + 23);
        if (v5 >= 0)
          v6 = a1;
        else
          v6 = *(_QWORD *)a1;
        if (v5 >= 0)
          LODWORD(v7) = *(unsigned __int8 *)(a1 + 23);
        else
          v7 = *(_QWORD *)(a1 + 8);
        v8 = morphun::util::StringViewUtils::codePointAt(v6, v7, v4);
        if (MEMORY[0x1D179D958](*a2, v8))
          return v4;
      }
    }
  }
  else
  {
    LODWORD(v4) = *(unsigned __int8 *)(a1 + 23);
    if (*(_BYTE *)(a1 + 23))
      goto LABEL_5;
  }
  return 0xFFFFFFFFLL;
}

morphun::analysis::filter::LanguageExpansion *morphun::analysis::filter::LanguageExpansion::LanguageExpansion(morphun::analysis::filter::LanguageExpansion *this, const char **a2)
{
  morphun::analysis::filter::LanguageExpansion *v3;
  char *v4;
  const char *v5;
  const char *v6;
  const char *v7;
  int v8;
  const char *v9;
  uint64_t v10;
  int32_t v11;
  std::basic_string<char16_t>::size_type v12;
  int32_t v13;
  morphun::util::LocaleUtils *v14;
  uint64_t v15;
  std::basic_string<char16_t> *v16;
  int32_t v17;
  std::basic_string<char16_t> *p_p;
  std::basic_string<char16_t>::size_type size;
  _WORD *String;
  uint64_t v21;
  uint64_t v22;
  std::basic_string<char16_t> *v24;
  const UChar *v26;
  unint64_t v27;
  char *v28;
  char *v29;
  unint64_t v30;
  void **v32;
  unint64_t v33;
  const UChar *v34;
  unint64_t v35;
  const UChar *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  const UChar **v41;
  unint64_t v42;
  char *v43;
  uint64_t **v44;
  uint64_t *v45;
  uint64_t **v46;
  unint64_t v47;
  unint64_t v48;
  unsigned __int16 *v49;
  unint64_t v50;
  const UChar *v51;
  unsigned int v52;
  unsigned int v53;
  unsigned __int16 *v54;
  const UChar *v55;
  unsigned int v56;
  unsigned int v57;
  uint64_t *v58;
  uint64_t v59;
  _QWORD *exception;
  std::basic_string<char16_t> *v62;
  std::basic_string<char16_t>::size_type v63;
  const std::basic_string<char16_t>::value_type *v64;
  std::basic_string<char16_t>::size_type v65;
  unint64_t v66;
  const UChar *v67;
  const std::basic_string<char16_t>::value_type **p_dst;
  uint64_t v69;
  uint64_t v70;
  const std::basic_string<char16_t>::value_type *v71;
  std::basic_string<char16_t>::size_type v72;
  morphun::analysis::filter::LanguageExpansion *v73;
  uint64_t **v74;
  std::basic_string<char16_t> v75;
  std::basic_string<char16_t> __p;
  void *v77[2];
  uint64_t v78;
  const std::basic_string<char16_t>::value_type *__dst;
  std::basic_string<char16_t>::size_type v80;
  int64_t v81;
  _QWORD v82[2];
  unsigned __int8 v83;
  std::basic_string<char16_t> v84;
  std::basic_string<char16_t> v85;
  std::basic_string<char16_t> v86;
  std::basic_string<char16_t> v87;
  const UChar *v88;
  unint64_t v89;
  const __int16 *v90;
  uint64_t v91;
  __int128 v92;
  int v93;
  int v94;
  std::basic_string<char16_t> v95;
  uint64_t v96;
  _WORD *v97;
  uint64_t v98;
  int v99;
  int v100;
  void *v101;
  unint64_t v102;
  uint64_t v103;

  v3 = this;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  v74 = (uint64_t **)((char *)this + 8);
  *(_QWORD *)this = (char *)this + 8;
  v4 = (char *)this + 24;
  morphun::util::ULocale::ULocale((morphun::analysis::filter::LanguageExpansion *)((char *)this + 24), (const morphun::util::ULocale *)a2);
  v77[0] = 0;
  v77[1] = 0;
  v78 = 0;
  v7 = a2[1];
  v6 = (const char *)(a2 + 1);
  v5 = v7;
  v8 = v6[23];
  if (v8 >= 0)
    v9 = v6;
  else
    v9 = v5;
  if (v8 >= 0)
    LODWORD(v10) = *((unsigned __int8 *)v6 + 23);
  else
    v10 = *((_QWORD *)v6 + 1);
  morphun::util::StringViewUtils::to_u16string(v9, v10, &v95);
  v11 = HIBYTE(v95.__r_.__value_.__r.__words[2]);
  v12 = v95.__r_.__value_.__r.__words[0];
  v13 = v95.__r_.__value_.__r.__words[1];
  v15 = morphun::util::LocaleUtils::ROOT(v14);
  if ((v11 & 0x80u) == 0)
    v16 = &v95;
  else
    v16 = (std::basic_string<char16_t> *)v12;
  if ((v11 & 0x80u) == 0)
    v17 = v11;
  else
    v17 = v13;
  morphun::util::StringViewUtils::lowercase((uint64_t)v77, (const UChar *)v16, v17, v15);
  if (SHIBYTE(v95.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v95.__r_.__value_.__l.__data_);
  std::operator+<char16_t>((uint64_t)&v75, L"/com/apple/siri/morphology/analysis/filter/contractionExpandingTable_", (const void **)v77);
  std::basic_string<char16_t>::append(&v75, L".csv", 4uLL);
  __p = v75;
  memset(&v75, 0, sizeof(v75));
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  String = (_WORD *)morphun::resources::DataResource::getString((uint64_t *)p_p, size, 1);
  if (String)
  {
    v101 = 0;
    v102 = 0;
    v103 = 0;
    if (*String)
    {
      v21 = 0;
      do
        v22 = v21 + 1;
      while (String[++v21]);
    }
    else
    {
      v22 = 0;
    }
    v73 = v3;
    *(_OWORD *)&v95.__r_.__value_.__l.__data_ = 0uLL;
    v95.__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)"\n";
    v96 = 1;
    v97 = String;
    v98 = v22;
    v99 = v22;
    v100 = 0;
    if ((int)v22 >= 1)
      morphun::util::DelimitedStringIterator::getNext((UChar *)&v95);
    while (1)
    {
      if (v100 >= v99 && v95.__r_.__value_.__l.__size_ == 0)
      {
        if (SHIBYTE(v103) < 0)
          operator delete(v101);
        v3 = v73;
        goto LABEL_111;
      }
      v88 = 0;
      v89 = 0;
      v90 = L",";
      v91 = 1;
      v92 = *(_OWORD *)&v95.__r_.__value_.__l.__data_;
      v93 = v95.__r_.__value_.__r.__words[1];
      v94 = 0;
      if (SLODWORD(v95.__r_.__value_.__r.__words[1]) >= 1)
        morphun::util::DelimitedStringIterator::getNext((UChar *)&v88);
      v26 = 0;
      v27 = 0;
      v28 = 0;
      v29 = 0;
      v30 = 0;
      while (v94 < v93 || v89 != 0)
      {
        morphun::util::StringViewUtils::lowercase((uint64_t)&v101, v88, v89, (uint64_t)v4);
        if (v103 >= 0)
          v32 = &v101;
        else
          v32 = (void **)v101;
        if (v103 >= 0)
          v33 = HIBYTE(v103);
        else
          v33 = v102;
        if (v33 != v89)
          goto LABEL_118;
        v34 = v88;
        if (v33)
        {
          v35 = v33;
          v36 = v88;
          while (*v36 == *(unsigned __int16 *)v32)
          {
            v32 = (void **)((char *)v32 + 2);
            ++v36;
            if (!--v35)
              goto LABEL_58;
          }
LABEL_118:
          exception = __cxa_allocate_exception(0x38uLL);
          std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v84, (char *)L"String needs to be lowercased in ");
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v62 = &__p;
          else
            v62 = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v63 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          else
            v63 = __p.__r_.__value_.__l.__size_;
          std::basic_string<char16_t>::append(&v84, (const std::basic_string<char16_t>::value_type *)v62, v63);
          v85 = v84;
          memset(&v84, 0, sizeof(v84));
          std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v82, (char *)L": ");
          if ((v83 & 0x80u) == 0)
            v64 = (const std::basic_string<char16_t>::value_type *)v82;
          else
            v64 = (const std::basic_string<char16_t>::value_type *)v82[0];
          if ((v83 & 0x80u) == 0)
            v65 = v83;
          else
            v65 = v82[1];
          std::basic_string<char16_t>::append(&v85, v64, v65);
          v86 = v85;
          memset(&v85, 0, sizeof(v85));
          v66 = v89;
          if (v89 >= 0x7FFFFFFFFFFFFFF8)
            std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
          v67 = v88;
          if (v89 >= 0xB)
          {
            v69 = (v89 & 0xFFFFFFFFFFFFFFFCLL) + 4;
            if ((v89 | 3) != 0xB)
              v69 = v89 | 3;
            p_dst = (const std::basic_string<char16_t>::value_type **)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v69 + 1);
            v80 = v66;
            v81 = v70 | 0x8000000000000000;
            __dst = (const std::basic_string<char16_t>::value_type *)p_dst;
          }
          else
          {
            HIBYTE(v81) = v89;
            p_dst = &__dst;
            if (!v89)
            {
LABEL_139:
              *((_WORD *)p_dst + v66) = 0;
              if (v81 >= 0)
                v71 = (const std::basic_string<char16_t>::value_type *)&__dst;
              else
                v71 = __dst;
              if (v81 >= 0)
                v72 = HIBYTE(v81);
              else
                v72 = v80;
              std::basic_string<char16_t>::append(&v86, v71, v72);
              v87 = v86;
              memset(&v86, 0, sizeof(v86));
              morphun::exception::Throwable::Throwable((uint64_t)exception, (__int128 *)&v87);
              *exception = &off_1E8673220;
            }
          }
          memmove(p_dst, v67, 2 * v66);
          goto LABEL_139;
        }
LABEL_58:
        if (v27)
        {
          if ((unint64_t)v29 >= v30)
          {
            v37 = (v29 - v28) >> 4;
            v38 = v37 + 1;
            if ((unint64_t)(v37 + 1) >> 60)
              std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
            if ((uint64_t)(v30 - (_QWORD)v28) >> 3 > v38)
              v38 = (uint64_t)(v30 - (_QWORD)v28) >> 3;
            if (v30 - (unint64_t)v28 >= 0x7FFFFFFFFFFFFFF0)
              v39 = 0xFFFFFFFFFFFFFFFLL;
            else
              v39 = v38;
            if (v39)
              v39 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::u16string_view>>(v39);
            else
              v40 = 0;
            v41 = (const UChar **)(v39 + 16 * v37);
            *v41 = v34;
            v41[1] = (const UChar *)v33;
            if (v29 == v28)
            {
              v43 = (char *)(v39 + 16 * v37);
            }
            else
            {
              v42 = v39 + 16 * v37;
              do
              {
                v43 = (char *)(v42 - 16);
                *(_OWORD *)(v42 - 16) = *((_OWORD *)v29 - 1);
                v29 -= 16;
                v42 -= 16;
              }
              while (v29 != v28);
            }
            v30 = v39 + 16 * v40;
            v29 = (char *)(v41 + 2);
            if (v28)
              operator delete(v28);
            v28 = v43;
          }
          else
          {
            *(_QWORD *)v29 = v88;
            *((_QWORD *)v29 + 1) = v33;
            v29 += 16;
          }
        }
        else
        {
          v26 = v88;
          v27 = v33;
        }
        morphun::util::DelimitedStringIterator::operator++((morphun::util::DelimitedStringIterator *)&v88);
      }
      v44 = v74;
      v45 = *v74;
      v46 = v74;
      if (!*v74)
        goto LABEL_102;
      v46 = v74;
      while (1)
      {
        while (1)
        {
          v44 = (uint64_t **)v45;
          v47 = v45[5];
          if (v47 >= v27)
            v48 = v27;
          else
            v48 = v47;
          if (v48)
          {
            v49 = (unsigned __int16 *)v44[4];
            v50 = v48;
            v51 = v26;
            do
            {
              v52 = *v51;
              v53 = *v49;
              if (v52 < v53)
                goto LABEL_91;
              if (v53 < v52)
                goto LABEL_93;
              ++v51;
              ++v49;
            }
            while (--v50);
          }
          if (v27 >= v47)
            break;
LABEL_91:
          v45 = *v44;
          v46 = v44;
          if (!*v44)
            goto LABEL_102;
        }
LABEL_93:
        if (v48)
        {
          v54 = (unsigned __int16 *)v44[4];
          v55 = v26;
          do
          {
            v56 = *v54;
            v57 = *v55;
            if (v56 < v57)
              goto LABEL_99;
            if (v57 < v56)
              goto LABEL_101;
            ++v54;
            ++v55;
          }
          while (--v48);
        }
        if (v47 >= v27)
          break;
LABEL_99:
        v46 = v44 + 1;
        v45 = v44[1];
        if (!v45)
          goto LABEL_102;
      }
LABEL_101:
      if (!v44)
      {
LABEL_102:
        v58 = (uint64_t *)operator new(0x48uLL);
        v58[6] = 0;
        v58[4] = (uint64_t)v26;
        v58[5] = v27;
        v58[7] = 0;
        v58[8] = 0;
        std::vector<std::u16string_view>::__init_with_size[abi:ne180100]<std::u16string_view*,std::u16string_view*>(v58 + 6, v28, (uint64_t)v29, (v29 - v28) >> 4);
        *v58 = 0;
        v58[1] = 0;
        v58[2] = (uint64_t)v44;
        *v46 = v58;
        v59 = **(_QWORD **)v73;
        if (v59)
        {
          *(_QWORD *)v73 = v59;
          v58 = *v46;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*((uint64_t **)v73 + 1), v58);
        ++*((_QWORD *)v73 + 2);
      }
      if (v28)
        operator delete(v28);
      morphun::util::DelimitedStringIterator::operator++((morphun::util::DelimitedStringIterator *)&v95);
    }
  }
  std::operator+<char16_t>((uint64_t)&v95, L"ExpansionTable does not exist: ", (const void **)&__p.__r_.__value_.__l.__data_);
  if (morphun::util::gLogLevel <= 1)
  {
    if ((v95.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v24 = &v95;
    else
      v24 = (std::basic_string<char16_t> *)v95.__r_.__value_.__r.__words[0];
    morphun::util::logToTopOfStackLogger((morphun::util *)1, 0, (uint64_t)v24);
  }
  if (SHIBYTE(v95.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v95.__r_.__value_.__l.__data_);
LABEL_111:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v75.__r_.__value_.__l.__data_);
  if (SHIBYTE(v78) < 0)
    operator delete(v77[0]);
  return v3;
}

void sub_1CB519B64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _QWORD **a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  void **v30;
  uint64_t v31;

  if (*(char *)(v31 - 153) < 0)
    operator delete(*(void **)(v31 - 176));
  if (a23 < 0)
    operator delete(__p);
  if (a17 < 0)
    operator delete(a12);
  if (a30 < 0)
    operator delete(a25);
  std::__tree<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>>>::destroy(*a11);
  _Unwind_Resume(a1);
}

void morphun::tokenizer::RegexSplitIterator::~RegexSplitIterator(morphun::tokenizer::RegexSplitIterator *this)
{
  icu4cxx::RegularExpression::~RegularExpression((URegularExpression **)this + 8);
  if (*((char *)this + 63) < 0)
    operator delete(*((void **)this + 5));
}

{
  morphun::tokenizer::RegexSplitIterator::~RegexSplitIterator(this);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::tokenizer::RegexSplitIterator::getNextBoundary(morphun::tokenizer::RegexSplitIterator *this)
{
  int v2;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  UErrorCode v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  unint64_t v12;
  unsigned __int16 *v13;
  int32_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  int32_t v18;
  UErrorCode v19;
  UErrorCode v20;
  morphun::exception::ICUException *exception;
  UErrorCode status;
  UErrorCode v23;

  v2 = *((_DWORD *)this + 58);
  if (*((_DWORD *)this + 57) < v2)
    return morphun::tokenizer::RegexSplitIterator::getNextRegexBoundary(this);
  *((_DWORD *)this + 56) = v2;
  result = (*(uint64_t (**)(_QWORD))(**((_QWORD **)this + 4) + 24))(*((_QWORD *)this + 4));
  *((_DWORD *)this + 58) = result;
  v4 = *((int *)this + 56);
  v5 = (result - v4);
  if ((int)v5 < 2)
    goto LABEL_19;
  status = U_ZERO_ERROR;
  utext_openUChars((UText *)((char *)this + 80), (const UChar *)(*((_QWORD *)this + 2) + 2 * v4), v5, &status);
  if (status >= U_ILLEGAL_ARGUMENT_ERROR)
  {
    v20 = status;
    exception = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::ICUException::ICUException(exception, v20);
    goto LABEL_26;
  }
  v23 = U_ZERO_ERROR;
  uregex_setUText(*((URegularExpression **)this + 8), (UText *)((char *)this + 80), &v23);
  v6 = v23;
  if (v23 >= U_ILLEGAL_ARGUMENT_ERROR
    || (v23 = U_ZERO_ERROR,
        v7 = uregex_find(*((URegularExpression **)this + 8), 0, &v23),
        v6 = v23,
        v23 >= U_ILLEGAL_ARGUMENT_ERROR))
  {
    exception = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::ICUException::ICUException(exception, v6);
    goto LABEL_26;
  }
  if (!v7)
    goto LABEL_18;
  v8 = *((_QWORD *)this + 1);
  if (*(_QWORD *)(v8 + 136))
  {
    v9 = *((int *)this + 56);
    v10 = *((_QWORD *)this + 3);
    v11 = v10 >= v9;
    v12 = v10 - v9;
    if (!v11)
      std::__throw_out_of_range[abi:ne180100]("string_view::substr");
    v13 = (unsigned __int16 *)((char *)this + 40);
    v14 = v12 >= v5 ? v5 : v12;
    morphun::util::StringViewUtils::lowercase((uint64_t)this + 40, (const UChar *)(*((_QWORD *)this + 2) + 2 * v9), v14, v8 + 8);
    v15 = npc<std::set<std::u16string_view>>(*(_QWORD *)(*((_QWORD *)this + 1) + 136));
    if (*((char *)this + 63) < 0)
    {
      v13 = (unsigned __int16 *)*((_QWORD *)this + 5);
      v16 = *((_QWORD *)this + 6);
    }
    else
    {
      v16 = *((unsigned __int8 *)this + 63);
    }
    v17 = std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(v15, v13, v16);
    if ((_QWORD *)(npc<std::set<std::u16string_view>>(*(_QWORD *)(*((_QWORD *)this + 1) + 136)) + 8) != v17)
    {
LABEL_18:
      result = *((unsigned int *)this + 58);
LABEL_19:
      *((_DWORD *)this + 57) = result;
      return result;
    }
  }
  v23 = U_ZERO_ERROR;
  v18 = uregex_groupCount(*((URegularExpression **)this + 8), &v23);
  v19 = v23;
  if (v23 >= U_ILLEGAL_ARGUMENT_ERROR)
  {
    exception = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::ICUException::ICUException(exception, v19);
LABEL_26:
  }
  *((_DWORD *)this + 59) = 1;
  *((_DWORD *)this + 60) = v18;
  return morphun::tokenizer::RegexSplitIterator::getNextRegexBoundary(this);
}

void sub_1CB519FA0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

double morphun::tokenizer::RegexSplitIterator::reset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;

  *(_QWORD *)(a1 + 16) = a2;
  *(_QWORD *)(a1 + 24) = a3;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *(_OWORD *)(a1 + 224) = xmmword_1CB5DD560;
  *(_DWORD *)(a1 + 240) = -1;
  return result;
}

uint64_t morphun::tokenizer::RegexSplitIterator::getNextRegexBoundary(morphun::tokenizer::RegexSplitIterator *this)
{
  int32_t v2;
  int32_t v3;
  UErrorCode v4;
  uint64_t result;
  int v6;
  int v7;
  morphun::exception::ICUException *exception;
  UErrorCode status;

  v2 = *((_DWORD *)this + 59);
  if (v2 > *((_DWORD *)this + 60))
  {
LABEL_7:
    result = *((unsigned int *)this + 58);
  }
  else
  {
    while (1)
    {
      status = U_ZERO_ERROR;
      v3 = uregex_end(*((URegularExpression **)this + 8), v2, &status);
      v4 = status;
      if (status >= U_ILLEGAL_ARGUMENT_ERROR)
      {
        exception = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
        morphun::exception::ICUException::ICUException(exception, v4);
      }
      if (v3 >= 1)
      {
        result = (*((_DWORD *)this + 56) + v3);
        if ((int)result < *((_DWORD *)this + 58) && *((_DWORD *)this + 57) < (int)result)
          break;
      }
      v6 = *((_DWORD *)this + 59);
      v7 = *((_DWORD *)this + 60);
      v2 = v6 + 1;
      *((_DWORD *)this + 59) = v6 + 1;
      if (v6 >= v7)
        goto LABEL_7;
    }
  }
  *((_DWORD *)this + 57) = result;
  return result;
}

void sub_1CB51A098(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<std::set<std::u16string_view>>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB51A0F0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

icu4cxx::RegularExpression *icu4cxx::RegularExpression::RegularExpression(icu4cxx::RegularExpression *this, const icu4cxx::RegularExpression *regexp)
{
  UErrorCode v3;
  morphun::exception::ICUException *exception;
  UErrorCode status;

  *((_BYTE *)this + 8) = 1;
  status = U_ZERO_ERROR;
  *(_QWORD *)this = uregex_clone(regexp, &status);
  *((_BYTE *)this + 8) = 1;
  v3 = status;
  if (status >= U_ILLEGAL_ARGUMENT_ERROR)
  {
    exception = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::ICUException::ICUException(exception, v3);
  }
  return this;
}

void sub_1CB51A188(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::tokenizer::RegexSplitIterator::RegexSplitIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __int128 v8;
  const icu4cxx::RegularExpression **v9;
  URegularExpression *v11;
  char v12;

  *(_QWORD *)a1 = &off_1E8673388;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = a3;
  *(_QWORD *)(a1 + 24) = a4;
  *(_QWORD *)(a1 + 32) = a5;
  *(_BYTE *)(a1 + 72) = 0;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 80) = xmmword_1CB5DD570;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  v8 = xmmword_1CB5DD560;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = xmmword_1CB5DD560;
  *(_DWORD *)(a1 + 240) = -1;
  v9 = *(const icu4cxx::RegularExpression ***)(a2 + 144);
  if (v9)
  {
    icu4cxx::RegularExpression::RegularExpression((icu4cxx::RegularExpression *)&v11, *v9);
    if (*(_BYTE *)(a1 + 72))
      uregex_close(*(URegularExpression **)(a1 + 64));
    *(_QWORD *)(a1 + 64) = v11;
    *(_BYTE *)(a1 + 72) = v12;
    v11 = 0;
    v12 = 0;
    icu4cxx::RegularExpression::~RegularExpression(&v11);
    v8 = xmmword_1CB5DD560;
  }
  *(_QWORD *)(a1 + 16) = a3;
  *(_QWORD *)(a1 + 24) = a4;
  *(_OWORD *)(a1 + 224) = v8;
  *(_DWORD *)(a1 + 240) = -1;
  return a1;
}

void morphun::dialog::language::FiCommonConceptFactory::~FiCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1E8667818);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1E8667818);
  JUMPOUT(0x1D179D2ECLL);
}

morphun::dialog::GrammaticalCountConcept *morphun::dialog::language::FiCommonConceptFactory::quantify(morphun::dialog::language::FiCommonConceptFactory *this, const morphun::dialog::NumberConcept *a2, const morphun::dialog::SemanticFeatureConceptBase *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned __int16 *v8;
  uint64_t v9;
  morphun::dialog::GrammaticalCountConcept *v10;
  _QWORD v12[5];
  std::basic_string<char16_t> __dst;

  if (!*((_QWORD *)this + 49))
    return (morphun::dialog::GrammaticalCountConcept *)morphun::dialog::CommonConceptFactoryImpl::quantify(this, a2, a3);
  npc<morphun::dialog::SemanticFeatureConceptBase const>((uint64_t)a3);
  v6 = *((_QWORD *)this + 49);
  npc<morphun::dialog::SemanticFeature const>(v6);
  v7 = (*(uint64_t (**)(const morphun::dialog::SemanticFeatureConceptBase *, uint64_t))(*(_QWORD *)a3 + 104))(a3, v6);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "c");
  if (v7)
  {
    v8 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 32))(v7);
    v9 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)this + 400, v8);
    if ((morphun::dialog::language::FiCommonConceptFactory *)((char *)this + 408) != (morphun::dialog::language::FiCommonConceptFactory *)v9)
      std::basic_string<char16_t>::operator=(&__dst, (const std::basic_string<char16_t> *)(v9 + 56));
  }
  if (morphun::dialog::language::FiCommonConceptFactory::shouldUsePlural(this, a3))
    std::basic_string<char16_t>::append(&__dst, L"-plural", 7uLL);
  (*(void (**)(_QWORD *__return_ptr, const morphun::dialog::NumberConcept *, std::basic_string<char16_t> *))(*(_QWORD *)a2 + 200))(v12, a2, &__dst);
  v10 = morphun::dialog::CommonConceptFactoryImpl::quantify(this, a2, (const morphun::dialog::SpeakableString *)v12, a3);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  if (v7)
    (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
  return v10;
}

void sub_1CB51A418(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  uint64_t v19;

  if (a19 < 0)
    operator delete(__p);
  if (v19)
    (*(void (**)(uint64_t))(*(_QWORD *)v19 + 16))(v19);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::language::FiCommonConceptFactory::quantifyType@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, const morphun::dialog::SemanticFeatureConceptBase *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  int v6;
  uint64_t v11;
  uint64_t v12;
  _BOOL4 shouldUsePlural;
  uint64_t v14;
  morphun::grammar::synthesis::GrammemeConstants *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  unsigned __int16 *v24;
  unsigned __int16 *v25;
  char v26;
  uint64_t v27;
  morphun::grammar::synthesis::GrammemeConstants *v28;
  uint64_t v29;
  uint64_t v30;
  std::basic_string<char16_t> __p;
  uint64_t (**v32)(morphun::dialog::SpeakableString *__hidden);
  std::basic_string<char16_t> v33;
  uint64_t v34;
  _QWORD v35[5];

  v6 = a5;
  if (!a1[49])
    return morphun::dialog::CommonConceptFactoryImpl::quantifyType(a1, a2, (uint64_t)a3, a4, a5);
  v11 = (*(uint64_t (**)(const morphun::dialog::SemanticFeatureConceptBase *))(*(_QWORD *)a3 + 104))(a3);
  v12 = (*(uint64_t (**)(const morphun::dialog::SemanticFeatureConceptBase *))(*(_QWORD *)a3 + 128))(a3);
  npc<morphun::dialog::SemanticFeatureConceptBase>(v12);
  shouldUsePlural = morphun::dialog::language::FiCommonConceptFactory::shouldUsePlural((morphun::dialog::language::FiCommonConceptFactory *)a1, a3);
  v14 = a1[47];
  v15 = (morphun::grammar::synthesis::GrammemeConstants *)npc<morphun::dialog::SemanticFeature const>(v14);
  if (shouldUsePlural)
    v16 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(v15);
  else
    v16 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v12 + 64))(v12, v14, v16);
  if (v11)
  {
    v18 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 32))(v11);
    v19 = morphun::grammar::synthesis::GrammemeConstants::CASE_NOMINATIVE((morphun::grammar::synthesis::GrammemeConstants *)v18);
    v20 = *(unsigned __int8 *)(v18 + 23);
    v21 = (char)v20;
    if ((v20 & 0x80u) != 0)
      v20 = *(_QWORD *)(v18 + 8);
    v22 = *(unsigned __int8 *)(v19 + 23);
    v23 = (char)v22;
    if ((v22 & 0x80u) != 0)
      v22 = *(_QWORD *)(v19 + 8);
    if (v20 != v22)
      goto LABEL_26;
    if (v20)
    {
      if (v23 >= 0)
        v24 = (unsigned __int16 *)v19;
      else
        v24 = *(unsigned __int16 **)v19;
      if (v21 >= 0)
        v25 = (unsigned __int16 *)v18;
      else
        v25 = *(unsigned __int16 **)v18;
      while (*v24 == *v25)
      {
        ++v25;
        ++v24;
        if (!--v20)
          goto LABEL_21;
      }
      goto LABEL_26;
    }
  }
LABEL_21:
  v26 = v6 == 1 || shouldUsePlural;
  if ((v26 & 1) == 0)
  {
    v27 = a1[49];
    v28 = (morphun::grammar::synthesis::GrammemeConstants *)npc<morphun::dialog::SemanticFeature const>(v27);
    v29 = morphun::grammar::synthesis::GrammemeConstants::CASE_PARTITIVE(v28);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v12 + 64))(v12, v27, v29);
  }
LABEL_26:
  v30 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v12 + *(_QWORD *)(*(_QWORD *)v12 - 56)) + 24))(v12 + *(_QWORD *)(*(_QWORD *)v12 - 56));
  npc<morphun::dialog::SpeakableString>(v30);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)&word_1CB73EE14);
  v32 = &off_1E866AD28;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    std::basic_string<char16_t>::__init_copy_ctor_external(&v33, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  else
    v33 = __p;
  v34 = 0;
  morphun::dialog::SpeakableString::operator+(a2, (uint64_t)&v32, v35);
  morphun::dialog::SpeakableString::operator+((uint64_t)v35, v30, a6);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  (*(void (**)(uint64_t))(*(_QWORD *)v30 + 16))(v30);
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 16))(v12);
  if (v11)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11);
  return result;
}

void sub_1CB51A718(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a15 < 0)
    operator delete(__p);
  if (v23)
    (*(void (**)(uint64_t))(*(_QWORD *)v23 + 16))(v23);
  (*(void (**)(uint64_t))(*(_QWORD *)v22 + 16))(v22);
  if (v21)
    (*(void (**)(uint64_t))(*(_QWORD *)v21 + 16))(v21);
  _Unwind_Resume(a1);
}

void sub_1CB51A808(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::dialog::SemanticFeatureConceptBase>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB51A860(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

BOOL morphun::dialog::language::FiCommonConceptFactory::shouldUsePlural(morphun::dialog::language::FiCommonConceptFactory *this, const morphun::dialog::SemanticFeatureConceptBase *a2)
{
  uint64_t v4;
  uint64_t v5;
  morphun::grammar::synthesis::GrammemeConstants *v6;
  morphun::grammar::synthesis::GrammemeConstants *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  unsigned __int16 *v13;
  morphun::grammar::synthesis::GrammemeConstants *v14;
  _BOOL8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const std::basic_string<char16_t> *v19;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t> *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v29;
  std::basic_string<char16_t> *v30;
  std::basic_string<char16_t>::size_type v31;
  uint64_t v32;
  _QWORD *CombinedBinaryType;
  morphun::exception::NullPointerException *exception;
  uint64_t v37[3];
  std::basic_string<char16_t> v38;
  unint64_t v39;

  v4 = *((_QWORD *)this + 47);
  npc<morphun::dialog::SemanticFeature const>(v4);
  if ((*(unsigned int (**)(const morphun::dialog::SemanticFeatureConceptBase *, uint64_t))(*(_QWORD *)a2 + 56))(a2, v4))
  {
    v5 = *((_QWORD *)this + 47);
    npc<morphun::dialog::SemanticFeature const>(v5);
    v6 = (morphun::grammar::synthesis::GrammemeConstants *)(*(uint64_t (**)(const morphun::dialog::SemanticFeatureConceptBase *, uint64_t))(*(_QWORD *)a2 + 48))(a2, v5);
    if (!v6)
    {
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
    v7 = v6;
    v8 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(v6);
    v9 = *((unsigned __int8 *)v7 + 23);
    v10 = (char)v9;
    if ((v9 & 0x80u) != 0)
      v9 = *((_QWORD *)v7 + 1);
    v11 = *(unsigned __int8 *)(v8 + 23);
    v12 = (char)v11;
    if ((v11 & 0x80u) != 0)
      v11 = *(_QWORD *)(v8 + 8);
    if (v9 == v11)
    {
      if (!v9)
        return 1;
      if (v12 >= 0)
        v13 = (unsigned __int16 *)v8;
      else
        v13 = *(unsigned __int16 **)v8;
      if (v10 >= 0)
        v14 = v7;
      else
        v14 = *(morphun::grammar::synthesis::GrammemeConstants **)v7;
      while (*v13 == *(unsigned __int16 *)v14)
      {
        v14 = (morphun::grammar::synthesis::GrammemeConstants *)((char *)v14 + 2);
        ++v13;
        if (!--v9)
          return 1;
      }
    }
  }
  v16 = (*(uint64_t (**)(const morphun::dialog::SemanticFeatureConceptBase *))(*(_QWORD *)a2 + 128))(a2);
  v17 = npc<morphun::dialog::SemanticFeatureConceptBase>(v16);
  (*(void (**)(uint64_t))(*(_QWORD *)v17 + 96))(v17);
  memset(&v38, 0, sizeof(v38));
  v18 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v16 + *(_QWORD *)(*(_QWORD *)v16 - 56)) + 24))(v16 + *(_QWORD *)(*(_QWORD *)v16 - 56));
  npc<morphun::dialog::SpeakableString>(v18);
  if (v18)
  {
    v19 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v18 + 32))(v18);
    std::basic_string<char16_t>::operator=(&v38, v19);
  }
  if ((SHIBYTE(v38.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    size = HIBYTE(v38.__r_.__value_.__r.__words[2]);
    if (*((_BYTE *)&v38.__r_.__value_.__s + 23))
    {
      v21 = &v38;
      goto LABEL_25;
    }
LABEL_28:
    v15 = 0;
    if (!v18)
      goto LABEL_54;
    goto LABEL_53;
  }
  size = v38.__r_.__value_.__l.__size_;
  if (!v38.__r_.__value_.__l.__size_)
    goto LABEL_28;
  v21 = (std::basic_string<char16_t> *)v38.__r_.__value_.__r.__words[0];
LABEL_25:
  morphun::dictionary::DictionaryMetaData::getPropertyValues(*((_QWORD *)this + 94), (const UChar *)v21, size, (unsigned __int16 *)"i", 0xAuLL, v37);
  v22 = v37[0];
  if (v37[0] == v37[1])
    goto LABEL_40;
  if (*(char *)(v37[0] + 23) < 0)
  {
    v22 = *(_QWORD *)v37[0];
    v23 = *(_QWORD *)(v37[0] + 8);
  }
  else
  {
    v23 = *(unsigned __int8 *)(v37[0] + 23);
  }
  if (v23 < 5)
    goto LABEL_40;
  v24 = 0;
  v25 = v22 + 2 * v23 - 10;
  do
  {
    v26 = *(unsigned __int16 *)(v25 + v24 * 2);
    v27 = (unsigned __int16)aYks[v24];
  }
  while (v27 == v26 && v24++ != 4);
  if (v27 != v26)
  {
LABEL_40:
    v29 = *((_QWORD *)this + 94);
    if ((v38.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v30 = &v38;
    else
      v30 = (std::basic_string<char16_t> *)v38.__r_.__value_.__r.__words[0];
    if ((v38.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v31 = HIBYTE(v38.__r_.__value_.__r.__words[2]);
    else
      v31 = v38.__r_.__value_.__l.__size_;
    v32 = *((_QWORD *)this + 95);
    v39 = 0;
    CombinedBinaryType = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v29, (uint64_t)&v39, (const UChar *)v30, v31);
    v15 = (v32 & ~v39) == 0 && CombinedBinaryType != 0;
  }
  else
  {
    v15 = 1;
  }
  v39 = (unint64_t)v37;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v39);
  if (!v18)
    goto LABEL_54;
LABEL_53:
  (*(void (**)(uint64_t))(*(_QWORD *)v18 + 16))(v18);
LABEL_54:
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  (*(void (**)(uint64_t))(*(_QWORD *)v16 + 16))(v16);
  return v15;
}

void sub_1CB51AB30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18)
{
  void *v18;

  __cxa_free_exception(v18);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::dialog::SpeakableString>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB51ABF4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1CB51AC4C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t std::map<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>::map[abi:ne180100](uint64_t a1, _QWORD *a2)
{
  uint64_t **v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t **v7;
  uint64_t v8;
  uint64_t **v9;
  BOOL v10;
  unsigned int v11;
  uint64_t **v12;
  uint64_t **v13;
  _WORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  unsigned int v17;

  *(_QWORD *)(a1 + 8) = 0;
  v3 = (uint64_t **)(a1 + 8);
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = a1 + 8;
  v4 = a2 + 1;
  v5 = (_QWORD *)*a2;
  if ((_QWORD *)*a2 != a2 + 1)
  {
    do
    {
      v6 = *(uint64_t **)(a1 + 8);
      v7 = v3;
      if (*(uint64_t ***)a1 == v3)
        goto LABEL_8;
      v8 = *(_QWORD *)(a1 + 8);
      v9 = v3;
      if (v6)
      {
        do
        {
          v7 = (uint64_t **)v8;
          v8 = *(_QWORD *)(v8 + 8);
        }
        while (v8);
      }
      else
      {
        do
        {
          v7 = (uint64_t **)v9[2];
          v10 = *v7 == (uint64_t *)v9;
          v9 = v7;
        }
        while (v10);
      }
      v11 = *((unsigned __int16 *)v5 + 16);
      if (*((unsigned __int16 *)v7 + 16) < v11)
      {
LABEL_8:
        if (v6)
          v12 = v7;
        else
          v12 = v3;
        if (v6)
          v13 = v7 + 1;
        else
          v13 = v3;
      }
      else
      {
        v12 = v3;
        v13 = v3;
        if (v6)
        {
          v13 = v3;
          while (1)
          {
            while (1)
            {
              v12 = (uint64_t **)v6;
              v17 = *((unsigned __int16 *)v6 + 16);
              if (v11 >= v17)
                break;
              v6 = *v12;
              v13 = v12;
              if (!*v12)
                goto LABEL_15;
            }
            if (v17 >= v11)
              break;
            v13 = v12 + 1;
            v6 = v12[1];
            if (!v6)
              goto LABEL_15;
          }
        }
      }
      if (!*v13)
      {
LABEL_15:
        v14 = operator new(0x48uLL);
        v14[16] = *((_WORD *)v5 + 16);
        std::map<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>::map[abi:ne180100](v14 + 20, v5 + 5);
        *((_BYTE *)v14 + 64) = *((_BYTE *)v5 + 64);
        std::__tree<std::u16string_view>::__insert_node_at((uint64_t **)a1, (uint64_t)v12, v13, (uint64_t *)v14);
      }
      v15 = (_QWORD *)v5[1];
      if (v15)
      {
        do
        {
          v16 = v15;
          v15 = (_QWORD *)*v15;
        }
        while (v15);
      }
      else
      {
        do
        {
          v16 = (_QWORD *)v5[2];
          v10 = *v16 == (_QWORD)v5;
          v5 = v16;
        }
        while (!v10);
      }
      v5 = v16;
    }
    while (v16 != v4);
  }
  return a1;
}

void sub_1CB51ADE0(_Unwind_Exception *a1)
{
  _QWORD **v1;
  _QWORD **v2;

  std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,void *>>>::operator()[abi:ne180100](0, v1);
  std::__tree<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::__map_value_compare<char16_t,std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::less<char16_t>,true>,std::allocator<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::__map_value_compare<char16_t,std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::less<char16_t>,true>,std::allocator<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>>>::destroy(_QWORD *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::__map_value_compare<char16_t,std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::less<char16_t>,true>,std::allocator<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>>>::destroy(*a1);
    std::__tree<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::__map_value_compare<char16_t,std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::less<char16_t>,true>,std::allocator<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>>>::destroy(a1[1]);
    std::__tree<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::__map_value_compare<char16_t,std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::less<char16_t>,true>,std::allocator<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>>>::destroy(a1[6]);
    operator delete(a1);
  }
}

void std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,void *>>>::operator()[abi:ne180100](char a1, _QWORD **a2)
{
  if (a1)
  {
    std::__tree<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::__map_value_compare<char16_t,std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::less<char16_t>,true>,std::allocator<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>>>::destroy(a2[6]);
  }
  else if (!a2)
  {
    return;
  }
  operator delete(a2);
}

void morphun::dialog::language::CsCommonConceptFactory::~CsCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1E8667698);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1E8667698);
  JUMPOUT(0x1D179D2ECLL);
}

void morphun::exception::ExcessComplexityException::~ExcessComplexityException(std::exception *this)
{
  morphun::exception::Throwable::~Throwable(this);
  JUMPOUT(0x1D179D2ECLL);
}

double morphun::exception::ExcessComplexityException::ExcessComplexityException(morphun::exception::ExcessComplexityException *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_QWORD *)this = &off_1E8673190;
  return result;
}

{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_QWORD *)this = &off_1E8673190;
  return result;
}

uint64_t morphun::util::Logger::registerLogger(morphun::util *a1, morphun::util *a2)
{
  std::mutex *v4;
  morphun::util *v5;
  morphun::util ***v6;
  char *v7;
  morphun::util **v8;
  morphun::util **v9;
  unint64_t v10;
  morphun::util **v11;
  morphun::util **v12;
  morphun::util **v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  morphun::util **v20;
  uint64_t v21;
  char *v22;
  char *v23;
  morphun::util **v24;
  morphun::util **v25;
  morphun::util *v26;

  v4 = (std::mutex *)morphun::util::CLASS_MUTEX(a1);
  std::mutex::lock(v4);
  v6 = (morphun::util ***)morphun::util::LOGGER_CACHE(v5);
  npc<std::vector<std::pair<void *,void (*)(void *,MLogLevel,char16_t const*,char16_t const*)>>>((uint64_t)v6);
  if (!a2)
  {
    v13 = *v6;
    v12 = v6[1];
    while (v13 != v12)
    {
      if (*v13 == a1)
      {
        v25 = v13 + 2;
        if (v13 + 2 != v12)
        {
          do
          {
            v26 = v25[1];
            *(v25 - 2) = *v25;
            *(v25 - 1) = v26;
            v25 += 2;
          }
          while (v25 != v12);
          v13 = v25 - 2;
        }
        v6[1] = v13;
        goto LABEL_29;
      }
      v13 += 2;
    }
    goto LABEL_12;
  }
  v7 = (char *)*v6;
  v8 = v6[1];
  if (*v6 != v8)
  {
    v9 = *v6;
    while (*v9 != a1)
    {
      v9 += 2;
      if (v9 == v8)
        goto LABEL_6;
    }
LABEL_12:
    v14 = 0;
    goto LABEL_30;
  }
LABEL_6:
  v10 = (unint64_t)v6[2];
  if ((unint64_t)v8 >= v10)
  {
    v15 = ((char *)v8 - v7) >> 4;
    v16 = v15 + 1;
    if ((unint64_t)(v15 + 1) >> 60)
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    v17 = v10 - (_QWORD)v7;
    if (v17 >> 3 > v16)
      v16 = v17 >> 3;
    if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF0)
      v18 = 0xFFFFFFFFFFFFFFFLL;
    else
      v18 = v16;
    v19 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::u16string_view>>(v18);
    v20 = (morphun::util **)&v19[16 * v15];
    v22 = &v19[16 * v21];
    *v20 = a1;
    v20[1] = a2;
    v11 = v20 + 2;
    v24 = *v6;
    v23 = (char *)v6[1];
    if (v23 != (char *)*v6)
    {
      do
      {
        *((_OWORD *)v20 - 1) = *((_OWORD *)v23 - 1);
        v20 -= 2;
        v23 -= 16;
      }
      while (v23 != (char *)v24);
      v23 = (char *)*v6;
    }
    *v6 = v20;
    v6[1] = v11;
    v6[2] = (morphun::util **)v22;
    if (v23)
      operator delete(v23);
  }
  else
  {
    *v8 = a1;
    v8[1] = a2;
    v11 = v8 + 2;
  }
  v6[1] = v11;
LABEL_29:
  v14 = 1;
LABEL_30:
  std::mutex::unlock(v4);
  return v14;
}

void sub_1CB51B0B0(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::CLASS_MUTEX(morphun::util *this)
{
  unsigned __int8 v1;
  uint64_t result;
  uint64_t v3;
  morphun::exception::NullPointerException *exception;

  {
    v3 = operator new();
    *(_QWORD *)v3 = 850045863;
    *(_OWORD *)(v3 + 8) = 0u;
    *(_OWORD *)(v3 + 24) = 0u;
    *(_OWORD *)(v3 + 40) = 0u;
    *(_QWORD *)(v3 + 56) = 0;
    morphun::util::CLASS_MUTEX(void)::classMutex = v3;
  }
  result = morphun::util::CLASS_MUTEX(void)::classMutex;
  if (!morphun::util::CLASS_MUTEX(void)::classMutex)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB51B17C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LOGGER_CACHE(morphun::util *this)
{
  unsigned __int8 v1;
  morphun::util *v3;
  __int128 v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  {
    v3 = (morphun::util *)operator new();
    *(_QWORD *)&v4 = morphun::util::getOSLog(v3);
    *((_QWORD *)&v4 + 1) = morphun::util::logOS;
    std::vector<std::pair<void *,void (*)(void *,MLogLevel,char16_t const*,char16_t const*)>>::vector[abi:ne180100](v3, &v4, 1uLL);
    morphun::util::LOGGER_CACHE(void)::LOGGER_CACHE_ = (uint64_t)v3;
  }
  return morphun::util::LOGGER_CACHE(void)::LOGGER_CACHE_;
}

void sub_1CB51B268(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x20C40960023A9);
  _Unwind_Resume(a1);
}

uint64_t npc<std::vector<std::pair<void *,void (*)(void *,MLogLevel,char16_t const*,char16_t const*)>>>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB51B2E4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::getOSLog(morphun::util *this)
{
  unsigned __int8 v1;
  unint64_t v2;
  int v4;

  v2 = 0x1ED51B000uLL;
  if ((v1 & 1) == 0)
  {
    v2 = 0x1ED51B000;
    if (v4)
    {
      morphun::util::getOSLog(void)::log = (uint64_t)os_log_create("com.apple.morphun", "libmorphun");
      v2 = 0x1ED51B000;
    }
  }
  return *(_QWORD *)(v2 + 760);
}

void morphun::util::logOS(NSObject *a1, uint64_t a2, uint64_t a3, _WORD *a4)
{
  uint64_t v6;
  int v7;
  std::string *p_p;
  const char *v10;
  std::string *v11;
  std::string *v12;
  NSObject *v13;
  os_log_type_t v14;
  std::string *v15;
  std::string *v16;
  std::string __p;
  uint8_t buf[4];
  std::string *v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  memset(&__p, 0, sizeof(__p));
  if (*a4)
  {
    v6 = 0;
    do
      v7 = v6 + 1;
    while (a4[++v6]);
  }
  else
  {
    v7 = 0;
  }
  morphun::util::StringViewUtils::convert(&__p, (uint64_t)a4, v7);
  switch(a2)
  {
    case 0:
      if (os_log_type_enabled(a1, OS_LOG_TYPE_DEBUG))
      {
        p_p = &__p;
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        *(_DWORD *)buf = 136380675;
        v19 = p_p;
        v10 = "[TRACE] %{private}s";
        goto LABEL_23;
      }
      break;
    case 1:
      if (os_log_type_enabled(a1, OS_LOG_TYPE_DEBUG))
      {
        v15 = &__p;
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v15 = (std::string *)__p.__r_.__value_.__r.__words[0];
        *(_DWORD *)buf = 136380675;
        v19 = v15;
        v10 = "[DEBUG] %{private}s";
LABEL_23:
        v13 = a1;
        v14 = OS_LOG_TYPE_DEBUG;
        goto LABEL_29;
      }
      break;
    case 2:
      if (os_log_type_enabled(a1, OS_LOG_TYPE_INFO))
      {
        v11 = &__p;
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v11 = (std::string *)__p.__r_.__value_.__r.__words[0];
        *(_DWORD *)buf = 136446210;
        v19 = v11;
        v10 = "[INFO] %{public}s";
        goto LABEL_28;
      }
      break;
    case 3:
      if (os_log_type_enabled(a1, OS_LOG_TYPE_INFO))
      {
        v16 = &__p;
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v16 = (std::string *)__p.__r_.__value_.__r.__words[0];
        *(_DWORD *)buf = 136446210;
        v19 = v16;
        v10 = "[WARNING] %{public}s";
LABEL_28:
        v13 = a1;
        v14 = OS_LOG_TYPE_INFO;
        goto LABEL_29;
      }
      break;
    case 4:
      if (os_log_type_enabled(a1, OS_LOG_TYPE_ERROR))
      {
        v12 = &__p;
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v12 = (std::string *)__p.__r_.__value_.__r.__words[0];
        *(_DWORD *)buf = 136446210;
        v19 = v12;
        v10 = "[ERROR] %{public}s";
        v13 = a1;
        v14 = OS_LOG_TYPE_ERROR;
LABEL_29:
        _os_log_impl(&dword_1CB4BD000, v13, v14, v10, buf, 0xCu);
      }
      break;
    default:
      break;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_1CB51B5B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *std::vector<std::pair<void *,void (*)(void *,MLogLevel,char16_t const*,char16_t const*)>>::vector[abi:ne180100](_QWORD *a1, __int128 *a2, unint64_t a3)
{
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a3)
  {
    if (a3 >> 60)
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    v6 = std::__allocate_at_least[abi:ne180100]<std::allocator<std::u16string_view>>(a3);
    *a1 = v6;
    a1[1] = v6;
    a1[2] = &v6[v7];
    v8 = 16 * a3;
    do
    {
      v9 = *a2++;
      *v6++ = v9;
      v8 -= 16;
    }
    while (v8);
    a1[1] = v6;
  }
  return a1;
}

void sub_1CB51B648(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void morphun::util::logToTopOfStackLogger(morphun::util *a1, uint64_t a2, uint64_t a3)
{
  std::mutex *v6;
  morphun::util *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = (std::mutex *)morphun::util::CLASS_MUTEX(a1);
  std::mutex::lock(v6);
  v8 = morphun::util::LOGGER_CACHE(v7);
  v9 = (_QWORD *)npc<std::vector<std::pair<void *,void (*)(void *,MLogLevel,char16_t const*,char16_t const*)>>>(v8);
  v10 = v9[1];
  if (*v9 != v10)
    (*(void (**)(_QWORD, morphun::util *, uint64_t, uint64_t))(v10 - 8))(*(_QWORD *)(v10 - 16), a1, a2, a3);
  std::mutex::unlock(v6);
}

void sub_1CB51B6C8(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void morphun::util::Logger::infoComponent(uint64_t a1, void *__src, std::basic_string<char16_t>::size_type a3)
{
  std::basic_string<char16_t> *p_dst;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  int v10;
  const std::basic_string<char16_t>::value_type *v11;
  std::basic_string<char16_t>::size_type v12;
  std::basic_string<char16_t> *p_p;
  std::basic_string<char16_t> *v14;
  morphun::exception::NullPointerException *exception;
  std::basic_string<char16_t> __dst;
  std::basic_string<char16_t> v17;
  std::basic_string<char16_t> __p;

  if (morphun::util::gLogLevel > 2)
    return;
  if (a3 >= 0x7FFFFFFFFFFFFFF8)
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  if (a3 >= 0xB)
  {
    v7 = (a3 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((a3 | 3) != 0xB)
      v7 = a3 | 3;
    p_dst = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v7 + 1);
    __dst.__r_.__value_.__l.__size_ = a3;
    __dst.__r_.__value_.__r.__words[2] = v8 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)p_dst;
    goto LABEL_9;
  }
  *((_BYTE *)&__dst.__r_.__value_.__s + 23) = a3;
  p_dst = &__dst;
  if (a3)
LABEL_9:
    memmove(p_dst, __src, 2 * a3);
  p_dst->__r_.__value_.__s.__data_[a3] = 0;
  std::basic_string<char16_t>::append(&__dst, &word_1CB73EE14, 1uLL);
  v17 = __dst;
  memset(&__dst, 0, sizeof(__dst));
  {
    v14 = (std::basic_string<char16_t> *)operator new();
    morphun::util::generatePlatformString(v14);
    morphun::util::PLATFORM_STRING(void)::PLATFORM_STRING_ = (uint64_t)v14;
  }
  if (!morphun::util::PLATFORM_STRING(void)::PLATFORM_STRING_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  v10 = *(char *)(morphun::util::PLATFORM_STRING(void)::PLATFORM_STRING_ + 23);
  if (v10 >= 0)
    v11 = (const std::basic_string<char16_t>::value_type *)morphun::util::PLATFORM_STRING(void)::PLATFORM_STRING_;
  else
    v11 = *(const std::basic_string<char16_t>::value_type **)morphun::util::PLATFORM_STRING(void)::PLATFORM_STRING_;
  if (v10 >= 0)
    v12 = *(unsigned __int8 *)(morphun::util::PLATFORM_STRING(void)::PLATFORM_STRING_ + 23);
  else
    v12 = *(_QWORD *)(morphun::util::PLATFORM_STRING(void)::PLATFORM_STRING_ + 8);
  std::basic_string<char16_t>::append(&v17, v11, v12);
  __p = v17;
  memset(&v17, 0, sizeof(v17));
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
  morphun::util::logToTopOfStackLogger((morphun::util *)2, a1, (uint64_t)p_p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v17.__r_.__value_.__l.__data_);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
}

void sub_1CB51B8D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  uint64_t v28;

  MEMORY[0x1D179D2EC](v28, 0x1012C40EC159624);
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(a1);
}

void morphun::util::generatePlatformString(std::basic_string<char16_t> *this)
{
  const __CFAllocator *v2;
  __CFReadStream *v3;
  CFTypeID v4;
  const __CFString *Value;
  const std::basic_string<char16_t>::value_type *v6;
  std::basic_string<char16_t>::size_type v7;
  const __CFString *v8;
  std::basic_string<char16_t>::size_type v9;
  int v10;
  void *v11;
  const std::basic_string<char16_t>::value_type *p_p;
  std::basic_string<char16_t>::size_type v13;
  std::basic_string<char16_t>::size_type size;
  int32_t v15;
  int32_t v16;
  int v17;
  void *v18;
  std::basic_string<char16_t> *p_stream;
  std::basic_string<char16_t>::size_type v20;
  std::basic_string<char16_t>::size_type v21;
  char v22;
  int32_t v23;
  std::basic_string<char16_t>::size_type v24;
  int v25;
  void *v26;
  std::basic_string<char16_t> *p_dst;
  std::basic_string<char16_t>::size_type v28;
  std::basic_string<char16_t> *v29;
  std::basic_string<char16_t>::size_type v30;
  std::basic_string<char16_t> stream;
  std::basic_string<char16_t> v32;
  std::basic_string<char16_t> __dst;
  CFURLRef fileURL;
  std::basic_string<char16_t> v35;
  CFDictionaryRef theDict[2];
  utsname __p;
  uint64_t v38;

  v38 = *MEMORY[0x1E0C80C00];
  memset(&v35, 0, sizeof(v35));
  v2 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
  fileURL = CFURLCreateWithFileSystemPath((CFAllocatorRef)*MEMORY[0x1E0C9AE00], CFSTR("/System/Library/CoreServices/SystemVersion.plist"), kCFURLPOSIXPathStyle, 0);
  if (fileURL)
  {
    v32.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)CFDictionaryCreateMutable(v2, 0, MEMORY[0x1E0C9B390], MEMORY[0x1E0C9B3A0]);
    if (v32.__r_.__value_.__r.__words[0])
    {
      v3 = CFReadStreamCreateWithFile(v2, fileURL);
      stream.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v3;
      if (v3)
      {
        if (CFReadStreamOpen(v3))
        {
          theDict[0] = (CFDictionaryRef)CFPropertyListCreateWithStream(v2, (CFReadStreamRef)stream.__r_.__value_.__l.__data_, 0, 0, 0, 0);
          v4 = CFGetTypeID(theDict[0]);
          if (v4 == CFDictionaryGetTypeID())
          {
            Value = (const __CFString *)CFDictionaryGetValue(theDict[0], CFSTR("ProductName"));
            if (Value)
            {
              morphun::util::CFUtils::to_u16string((std::basic_string<char16_t> *)&__p, Value);
              v6 = __p.sysname[23] >= 0
                 ? (const std::basic_string<char16_t>::value_type *)&__p
                 : *(const std::basic_string<char16_t>::value_type **)__p.sysname;
              v7 = __p.sysname[23] >= 0 ? __p.sysname[23] : *(_QWORD *)&__p.sysname[8];
              std::basic_string<char16_t>::append(&v35, v6, v7);
              if (__p.sysname[23] < 0)
                operator delete(*(void **)__p.sysname);
            }
            v8 = (const __CFString *)CFDictionaryGetValue(theDict[0], CFSTR("ProductVersion"));
            if (v8)
            {
              morphun::util::CFUtils::to_u16string(&__dst, v8);
              std::basic_string<char16_t>::insert(&__dst, (std::basic_string<char16_t>::size_type)"-", (const std::basic_string<char16_t>::value_type *)1, v9);
              *(_QWORD *)&__p.sysname[16] = *((_QWORD *)&__dst.__r_.__value_.__l + 2);
              *(_OWORD *)__p.sysname = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
              memset(&__dst, 0, sizeof(__dst));
              v10 = __p.sysname[23];
              v11 = *(void **)__p.sysname;
              if (__p.sysname[23] >= 0)
                p_p = (const std::basic_string<char16_t>::value_type *)&__p;
              else
                p_p = *(const std::basic_string<char16_t>::value_type **)__p.sysname;
              if (__p.sysname[23] >= 0)
                v13 = HIBYTE(*(_QWORD *)&__p.sysname[16]);
              else
                v13 = *(_QWORD *)&__p.sysname[8];
              std::basic_string<char16_t>::append(&v35, p_p, v13);
              if (v10 < 0)
                operator delete(v11);
              if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
                operator delete(__dst.__r_.__value_.__l.__data_);
            }
          }
          morphun::util::AutoCRelease<void const*,&(CFRelease)>::~AutoCRelease((const void **)theDict);
        }
        CFReadStreamClose((CFReadStreamRef)stream.__r_.__value_.__l.__data_);
      }
      morphun::util::AutoCRelease<__CFReadStream *,&(CFRelease)>::~AutoCRelease((const void **)&stream.__r_.__value_.__l.__data_);
    }
    morphun::util::AutoCRelease<__CFDictionary *,&(CFRelease)>::~AutoCRelease((const void **)&v32.__r_.__value_.__l.__data_);
  }
  if (!uname(&__p))
  {
    size = HIBYTE(v35.__r_.__value_.__r.__words[2]);
    if ((v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      size = v35.__r_.__value_.__l.__size_;
    if (!size)
    {
      v15 = strlen(__p.sysname);
      morphun::util::StringViewUtils::to_u16string(__p.sysname, v15, &v32);
      std::basic_string<char16_t>::append(&v32, (const std::basic_string<char16_t>::value_type *)"-", 1uLL);
      __dst = v32;
      memset(&v32, 0, sizeof(v32));
      v16 = strlen(__p.release);
      morphun::util::StringViewUtils::to_u16string(__p.release, v16, &stream);
      v17 = SHIBYTE(stream.__r_.__value_.__r.__words[2]);
      v18 = (void *)stream.__r_.__value_.__r.__words[0];
      if ((stream.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        p_stream = &stream;
      else
        p_stream = (std::basic_string<char16_t> *)stream.__r_.__value_.__r.__words[0];
      if ((stream.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v20 = HIBYTE(stream.__r_.__value_.__r.__words[2]);
      else
        v20 = stream.__r_.__value_.__l.__size_;
      std::basic_string<char16_t>::append(&__dst, (const std::basic_string<char16_t>::value_type *)p_stream, v20);
      theDict[0] = (CFDictionaryRef)__dst.__r_.__value_.__l.__size_;
      v21 = __dst.__r_.__value_.__r.__words[0];
      *(CFDictionaryRef *)((char *)theDict + 7) = *(CFDictionaryRef *)((char *)&__dst.__r_.__value_.__r.__words[1] + 7);
      v22 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
      memset(&__dst, 0, sizeof(__dst));
      if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v35.__r_.__value_.__l.__data_);
      v35.__r_.__value_.__r.__words[0] = v21;
      v35.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)theDict[0];
      *(std::basic_string<char16_t>::size_type *)((char *)&v35.__r_.__value_.__r.__words[1] + 7) = *(std::basic_string<char16_t>::size_type *)((char *)theDict + 7);
      *((_BYTE *)&v35.__r_.__value_.__s + 23) = v22;
      if (v17 < 0)
        operator delete(v18);
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__dst.__r_.__value_.__l.__data_);
      if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v32.__r_.__value_.__l.__data_);
    }
    v23 = strlen(__p.machine);
    morphun::util::StringViewUtils::to_u16string(__p.machine, v23, &v32);
    std::basic_string<char16_t>::insert(&v32, (std::basic_string<char16_t>::size_type)"-", (const std::basic_string<char16_t>::value_type *)1, v24);
    __dst = v32;
    memset(&v32, 0, sizeof(v32));
    v25 = SHIBYTE(__dst.__r_.__value_.__r.__words[2]);
    v26 = (void *)__dst.__r_.__value_.__r.__words[0];
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_dst = &__dst;
    else
      p_dst = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v28 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    else
      v28 = __dst.__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::append(&v35, (const std::basic_string<char16_t>::value_type *)p_dst, v28);
    if (v25 < 0)
      operator delete(v26);
    if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v32.__r_.__value_.__l.__data_);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"Platform=");
  if ((v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v29 = &v35;
  else
    v29 = (std::basic_string<char16_t> *)v35.__r_.__value_.__r.__words[0];
  if ((v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v30 = HIBYTE(v35.__r_.__value_.__r.__words[2]);
  else
    v30 = v35.__r_.__value_.__l.__size_;
  std::basic_string<char16_t>::append(&__dst, (const std::basic_string<char16_t>::value_type *)v29, v30);
  *this = __dst;
  morphun::util::AutoCRelease<__CFURL const*,&(CFRelease)>::~AutoCRelease((const void **)&fileURL);
  if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v35.__r_.__value_.__l.__data_);
}

void sub_1CB51BD80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,const void *a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,const void *a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,__int16 a37,char a38,char a39)
{
  void *v39;
  int v40;

  if (v40 < 0)
    operator delete(v39);
  if (a23 < 0)
    operator delete(__p);
  morphun::util::AutoCRelease<void const*,&(CFRelease)>::~AutoCRelease(&a32);
  morphun::util::AutoCRelease<__CFReadStream *,&(CFRelease)>::~AutoCRelease((const void **)&a9);
  morphun::util::AutoCRelease<__CFDictionary *,&(CFRelease)>::~AutoCRelease((const void **)&a12);
  morphun::util::AutoCRelease<__CFURL const*,&(CFRelease)>::~AutoCRelease(&a25);
  if (a31 < 0)
    operator delete(a26);
  _Unwind_Resume(a1);
}

const void **morphun::util::AutoCRelease<void const*,&(CFRelease)>::~AutoCRelease(const void **a1)
{
  const void *v2;

  v2 = *a1;
  if (v2)
    CFRelease(v2);
  return a1;
}

const void **morphun::util::AutoCRelease<__CFReadStream *,&(CFRelease)>::~AutoCRelease(const void **a1)
{
  const void *v2;

  v2 = *a1;
  if (v2)
    CFRelease(v2);
  return a1;
}

const void **morphun::util::AutoCRelease<__CFDictionary *,&(CFRelease)>::~AutoCRelease(const void **a1)
{
  const void *v2;

  v2 = *a1;
  if (v2)
    CFRelease(v2);
  return a1;
}

const void **morphun::util::AutoCRelease<__CFURL const*,&(CFRelease)>::~AutoCRelease(const void **a1)
{
  const void *v2;

  v2 = *a1;
  if (v2)
    CFRelease(v2);
  return a1;
}

uint64_t **com::apple::siri::tokenizer::data::config_uk::getContent@<X0>(uint64_t **a1@<X8>)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v3 = xmmword_1E8686A40;
  v4 = 0x1CB73E8CALL;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

void morphun::grammar::synthesis::DeGrammarSynthesizer_ArticleLookupFunction::~DeGrammarSynthesizer_ArticleLookupFunction(morphun::grammar::synthesis::DeGrammarSynthesizer_ArticleLookupFunction *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E866EE28;
  v2 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*((_QWORD **)this + 15));
}

{
  morphun::grammar::synthesis::DeGrammarSynthesizer_ArticleLookupFunction::~DeGrammarSynthesizer_ArticleLookupFunction(this);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::grammar::synthesis::DeGrammarSynthesizer_ArticleLookupFunction::getFeatureValue(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unsigned __int16 *v5;
  unsigned int Case;
  uint64_t v7;
  unsigned __int16 *v8;
  int Count;
  uint64_t v10;
  unsigned __int16 *v11;
  int Gender;
  int v13;
  BOOL v14;
  uint64_t v15;
  __int128 v16;
  std::basic_string<char16_t> *p_p;
  std::basic_string<char16_t>::size_type size;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  const UChar *v26;
  const UChar *v27;
  int v28;
  const UChar *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  int v34;
  uint64_t *v35;
  int v36;
  BOOL v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  std::basic_string<char16_t>::size_type v42;
  const void *v43;
  std::basic_string<char16_t> *v44;
  uint64_t v45;
  uint64_t v46;
  morphun::exception::NullPointerException *exception;
  std::basic_string<char16_t> __p;
  uint64_t v49;

  v4 = a1[11];
  npc<morphun::dialog::SemanticFeature const>(v4);
  v5 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 32))(a2, v4);
  Case = morphun::grammar::synthesis::DeGrammarSynthesizer::getCase(v5);
  v7 = a1[12];
  npc<morphun::dialog::SemanticFeature const>(v7);
  v8 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 32))(a2, v7);
  Count = morphun::grammar::synthesis::DeGrammarSynthesizer::getCount(v8);
  v10 = a1[13];
  npc<morphun::dialog::SemanticFeature const>(v10);
  v11 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 32))(a2, v10);
  Gender = morphun::grammar::synthesis::DeGrammarSynthesizer::getGender(v11);
  v13 = Gender;
  v49 = 0;
  if (Count)
    v14 = Gender == 0;
  else
    v14 = 1;
  if (v14)
  {
    v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
    if (*(char *)(v15 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&__p, *(const std::basic_string<char16_t>::value_type **)v15, *(_QWORD *)(v15 + 8));
    }
    else
    {
      v16 = *(_OWORD *)v15;
      __p.__r_.__value_.__r.__words[2] = *(_QWORD *)(v15 + 16);
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v16;
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      size = __p.__r_.__value_.__l.__size_;
    if (!morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1[3], (uint64_t)&v49, (const UChar *)p_p, size))
    {
      v19 = a1[17];
      if (!v19)
      {
        exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
        morphun::exception::NullPointerException::NullPointerException(exception);
      }
      v20 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(_QWORD *)v19 + 24))(v19, &__p);
      if ((*(int (**)(uint64_t))(*(_QWORD *)v20 + 32))(v20) >= 2)
      {
        v21 = a1[3];
        v22 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v20 + 56))(v20);
        v23 = npc<morphun::Token>(v22);
        v24 = npc<morphun::Token>(*(_QWORD *)(v23 + 72));
        v27 = *(const UChar **)(v24 + 16);
        v25 = v24 + 16;
        v26 = v27;
        v28 = *(char *)(v25 + 23);
        if (v28 >= 0)
          v29 = (const UChar *)v25;
        else
          v29 = v26;
        if (v28 >= 0)
          v30 = *(unsigned __int8 *)(v25 + 23);
        else
          v30 = *(_QWORD *)(v25 + 8);
        morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v21, (uint64_t)&v49, v29, v30);
      }
      (*(void (**)(uint64_t))(*(_QWORD *)v20 + 16))(v20);
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (!Count)
    {
      if (v49 && (a1[10] & v49) == a1[9])
        LOBYTE(Count) = 2;
      else
        LOBYTE(Count) = 1;
    }
    if (!v13 && v49)
    {
      v31 = a1[7] & v49;
      if (v31 == a1[4])
      {
        LOBYTE(v13) = 2;
      }
      else if (v31 == a1[5])
      {
        LOBYTE(v13) = 1;
      }
      else if (v31 == a1[6])
      {
        LOBYTE(v13) = 3;
      }
      else
      {
        LOBYTE(v13) = 0;
      }
    }
  }
  if (Case <= 1)
    v32 = 1;
  else
    v32 = Case;
  v33 = a1[15];
  if (!v33)
    goto LABEL_55;
  v34 = Count & 0xF | (16 * (v13 & 0xF)) | ((v32 & 0xF) << 8);
  v35 = a1 + 15;
  do
  {
    v36 = *(_DWORD *)(v33 + 32);
    v37 = v36 < v34;
    if (v36 >= v34)
      v38 = (uint64_t *)v33;
    else
      v38 = (uint64_t *)(v33 + 8);
    if (!v37)
      v35 = (uint64_t *)v33;
    v33 = *v38;
  }
  while (*v38);
  if (v35 == a1 + 15 || v34 < *((_DWORD *)v35 + 8))
  {
LABEL_55:
    memset(&__p, 0, sizeof(__p));
    v39 = (*(uint64_t (**)(uint64_t *, uint64_t, std::basic_string<char16_t> *))(*a1 + 32))(a1, a2, &__p);
    goto LABEL_56;
  }
  v42 = v35[6];
  if (v42 >= 0x7FFFFFFFFFFFFFF8)
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  v43 = (const void *)v35[5];
  if (v42 >= 0xB)
  {
    v45 = (v42 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((v42 | 3) != 0xB)
      v45 = v42 | 3;
    v44 = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v45 + 1);
    __p.__r_.__value_.__l.__size_ = v42;
    __p.__r_.__value_.__r.__words[2] = v46 | 0x8000000000000000;
    __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v44;
  }
  else
  {
    *((_BYTE *)&__p.__r_.__value_.__s + 23) = v35[6];
    v44 = &__p;
    if (!v42)
      goto LABEL_67;
  }
  memmove(v44, v43, 2 * v42);
LABEL_67:
  v44->__r_.__value_.__s.__data_[v42] = 0;
  v39 = (*(uint64_t (**)(uint64_t *, uint64_t, std::basic_string<char16_t> *))(*a1 + 32))(a1, a2, &__p);
LABEL_56:
  v40 = v39;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return v40;
}

void sub_1CB51C3B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;

  __cxa_free_exception(v14);
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_1CB51C444(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1CB51C49C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::Validate::notNull<morphun::dialog::SemanticFeature const>(uint64_t result)
{
  _QWORD *exception;
  __int128 __dst;

  if (!result)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "I");
    morphun::exception::Throwable::Throwable((uint64_t)exception, &__dst);
    *exception = &off_1E8673090;
  }
  return result;
}

void sub_1CB51C534(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

uint64_t *morphun::grammar::synthesis::DeGrammarSynthesizer_ArticleLookupFunction::DeGrammarSynthesizer_ArticleLookupFunction(uint64_t *a1, uint64_t a2, char a3, _QWORD *a4)
{
  morphun::dialog::DefaultArticleLookupFunction *v7;
  morphun::dictionary::DictionaryMetaData *v8;
  const morphun::util::ULocale *v9;
  _QWORD *Dictionary;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  morphun::TokenizerFactory *v20;
  const morphun::util::ULocale *v21;
  morphun::Tokenizer *Tokenizer;
  uint64_t v23;
  uint64_t *BinaryProperties;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *exception;
  _QWORD *v35;
  void **p_p;
  char v37;
  __int128 __p;
  uint64_t v39;
  void *__dst[2];
  char v41;
  __int128 v42;

  *(_QWORD *)&v42 = *MEMORY[0x1E0C80C00];
  *a1 = (uint64_t)&off_1E865D688;
  v7 = morphun::dialog::DefaultArticleLookupFunction::DefaultArticleLookupFunction((morphun::dialog::DefaultArticleLookupFunction *)a1, (const morphun::dialog::SemanticFeatureModel *)&off_1E86683A8, a2, a3, 1);
  *a1 = (uint64_t)&off_1E866EE28;
  v8 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::GERMAN(v7);
  Dictionary = morphun::dictionary::DictionaryMetaData::createDictionary(v8, v9);
  if (!Dictionary)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, "I");
    morphun::exception::Throwable::Throwable((uint64_t)exception, &__p);
    *exception = &off_1E8673090;
  }
  *((_OWORD *)a1 + 2) = 0u;
  a1[3] = (uint64_t)Dictionary;
  *((_OWORD *)a1 + 3) = 0u;
  *((_OWORD *)a1 + 4) = 0u;
  a1[10] = 0;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, "c");
  v11 = a2 + 8;
  v12 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a2 + 8, (unsigned __int16 *)&__p);
  v13 = a2 + 16;
  if (a2 + 16 == v12)
    v14 = 0;
  else
    v14 = *(_QWORD *)(v12 + 56);
  morphun::util::Validate::notNull<morphun::dialog::SemanticFeature const>(v14);
  if (SHIBYTE(v39) < 0)
    operator delete((void *)__p);
  a1[11] = v14;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"count");
  v15 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v11, (unsigned __int16 *)&__p);
  if (v13 == v15)
    v16 = 0;
  else
    v16 = *(_QWORD *)(v15 + 56);
  morphun::util::Validate::notNull<morphun::dialog::SemanticFeature const>(v16);
  if (SHIBYTE(v39) < 0)
    operator delete((void *)__p);
  a1[12] = v16;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"gender");
  v17 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v11, (unsigned __int16 *)&__p);
  if (v13 == v17)
    v18 = 0;
  else
    v18 = *(_QWORD *)(v17 + 56);
  morphun::util::Validate::notNull<morphun::dialog::SemanticFeature const>(v18);
  if (SHIBYTE(v39) < 0)
    operator delete((void *)__p);
  a1[13] = v18;
  v19 = std::map<int,std::u16string_view>::map[abi:ne180100](a1 + 14, a4);
  v20 = (morphun::TokenizerFactory *)morphun::util::LocaleUtils::GERMAN((morphun::util::LocaleUtils *)v19);
  Tokenizer = morphun::TokenizerFactory::createTokenizer(v20, v21);
  if (!Tokenizer)
  {
    v35 = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, "I");
    morphun::exception::Throwable::Throwable((uint64_t)v35, &__p);
    *v35 = &off_1E8673090;
  }
  a1[17] = (uint64_t)Tokenizer;
  v23 = a1[3];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, (char *)L"feminine");
  __p = 0uLL;
  v39 = 0;
  v37 = 0;
  *(_QWORD *)&__p = operator new(0x18uLL);
  *((_QWORD *)&__p + 1) = __p;
  v39 = __p + 24;
  *((_QWORD *)&__p + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v39, (__int128 *)__dst, &v42, (std::basic_string<char16_t> *)__p);
  BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v23, a1 + 4, (uint64_t *)&__p);
  morphun::util::Validate::notNull<long long>((uint64_t)BinaryProperties);
  p_p = (void **)&__p;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&p_p);
  if (v41 < 0)
    operator delete(__dst[0]);
  v25 = a1[3];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, "m");
  __p = 0uLL;
  v39 = 0;
  p_p = (void **)&__p;
  v37 = 0;
  *(_QWORD *)&__p = operator new(0x18uLL);
  *((_QWORD *)&__p + 1) = __p;
  v39 = __p + 24;
  *((_QWORD *)&__p + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v39, (__int128 *)__dst, &v42, (std::basic_string<char16_t> *)__p);
  v26 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v25, a1 + 5, (uint64_t *)&__p);
  morphun::util::Validate::notNull<long long>((uint64_t)v26);
  p_p = (void **)&__p;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&p_p);
  if (v41 < 0)
    operator delete(__dst[0]);
  v27 = a1[3];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, "n");
  __p = 0uLL;
  v39 = 0;
  p_p = (void **)&__p;
  v37 = 0;
  *(_QWORD *)&__p = operator new(0x18uLL);
  *((_QWORD *)&__p + 1) = __p;
  v39 = __p + 24;
  *((_QWORD *)&__p + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v39, (__int128 *)__dst, &v42, (std::basic_string<char16_t> *)__p);
  v28 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v27, a1 + 6, (uint64_t *)&__p);
  morphun::util::Validate::notNull<long long>((uint64_t)v28);
  p_p = (void **)&__p;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&p_p);
  if (v41 < 0)
    operator delete(__dst[0]);
  v29 = a1[3];
  a1[7] = a1[5] | a1[4] | a1[6];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, (char *)L"singular");
  __p = 0uLL;
  v39 = 0;
  p_p = (void **)&__p;
  v37 = 0;
  *(_QWORD *)&__p = operator new(0x18uLL);
  *((_QWORD *)&__p + 1) = __p;
  v39 = __p + 24;
  *((_QWORD *)&__p + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v39, (__int128 *)__dst, &v42, (std::basic_string<char16_t> *)__p);
  v30 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v29, a1 + 8, (uint64_t *)&__p);
  morphun::util::Validate::notNull<long long>((uint64_t)v30);
  p_p = (void **)&__p;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&p_p);
  if (v41 < 0)
    operator delete(__dst[0]);
  v31 = a1[3];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, "p");
  __p = 0uLL;
  v39 = 0;
  p_p = (void **)&__p;
  v37 = 0;
  *(_QWORD *)&__p = operator new(0x18uLL);
  *((_QWORD *)&__p + 1) = __p;
  v39 = __p + 24;
  *((_QWORD *)&__p + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v39, (__int128 *)__dst, &v42, (std::basic_string<char16_t> *)__p);
  v32 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v31, a1 + 9, (uint64_t *)&__p);
  morphun::util::Validate::notNull<long long>((uint64_t)v32);
  p_p = (void **)&__p;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&p_p);
  if (v41 < 0)
    operator delete(__dst[0]);
  a1[10] = a1[9] | a1[8];
  return a1;
}

void sub_1CB51CAF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  uint64_t v23;
  void *v24;
  int v25;

  if (a17 < 0)
  {
    operator delete(__p);
    if ((v25 & 1) == 0)
    {
LABEL_6:
      std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*(_QWORD **)(v23 + 120));
      _Unwind_Resume(a1);
    }
  }
  else if (!v25)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v24);
  goto LABEL_6;
}

uint64_t *morphun::tokenizer::locale::de::DeTokenizer::createTokenExtractor(morphun::util::ULocale *a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t WordsToNotSplit;

  v4 = (uint64_t *)operator new();
  *v4 = (uint64_t)&off_1E8673778;
  WordsToNotSplit = morphun::tokenizer::TokenExtractor::createWordsToNotSplit((uint64_t)a1, a2, (uint64_t (*)(void **, uint64_t, _WORD *, unint64_t))morphun::tokenizer::locale::de::DeTokenExtractorIterator::isIndivisibleWordNormalized);
  morphun::tokenizer::TokenExtractor::TokenExtractor(v4, (uint64_t *)&off_1E8669E98, a1, a2, WordsToNotSplit);
  *v4 = (uint64_t)&off_1E8673778;
  return v4;
}

void sub_1CB51CCE8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10F3C40049B2901);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::CaCommonConceptFactory::~CaCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1E8667658);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1E8667658);
  JUMPOUT(0x1D179D2ECLL);
}

void morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveInflectionPattern::~NlGrammarSynthesizer_NlAdjectiveInflectionPattern(morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveInflectionPattern *this)
{
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveInflectionPattern::isSupported(uint64_t a1, const void **a2, uint64_t a3)
{
  void *__p[2];
  char v8;

  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 40))(a1) & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 56))(a1, a3);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"not a adjective or not in dictionary");
  morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern::logUnsupportedInflection(a2, (uint64_t)__p);
  if (v8 < 0)
    operator delete(__p[0]);
  return 0;
}

void sub_1CB51CDF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveInflectionPattern::inflect(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t Declension;
  std::basic_string<char16_t> __p;

  if (((*(uint64_t (**)(uint64_t *))(*a1 + 24))(a1) & 1) != 0)
  {
    morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__p, a3, a1[1]);
    Declension = morphun::grammar::synthesis::NlGrammarSynthesizer::getDeclension((unsigned __int16 *)&__p);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*a1 + 80))(a1, a2, Declension);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
  }
}

void sub_1CB51CEA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveInflectionPattern::inflectWithDeclension(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, std::basic_string<char16_t> *a4@<X8>)
{
  if (a3 == 2)
  {
    if (*(char *)(a2 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(a4, *(const std::basic_string<char16_t>::value_type **)a2, *(_QWORD *)(a2 + 8));
    }
    else
    {
      *(_OWORD *)&a4->__r_.__value_.__l.__data_ = *(_OWORD *)a2;
      a4->__r_.__value_.__r.__words[2] = *(_QWORD *)(a2 + 16);
    }
  }
  else if (a3 == 1)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a1 + 88))(a1);
  }
  else
  {
    a4->__r_.__value_.__r.__words[0] = 0;
    a4->__r_.__value_.__l.__size_ = 0;
    a4->__r_.__value_.__r.__words[2] = 0;
  }
}

void morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveInflectionPattern::heuristicDeclensionInflection(morphun::dictionary::PhraseProperties *a1@<X0>, const std::basic_string<char16_t>::value_type *a2@<X1>, uint64_t a3@<X8>)
{
  std::basic_string<char16_t> *v3;
  std::basic_string<char16_t>::size_type v5;
  std::basic_string<char16_t>::size_type size;
  uint64_t v7;
  std::basic_string<char16_t>::size_type v8;
  int v9;
  int v10;
  std::basic_string<char16_t>::size_type v12;
  std::basic_string<char16_t> *v13;
  std::basic_string<char16_t>::size_type v14;
  std::basic_string<char16_t>::size_type v15;
  std::basic_string<char16_t> *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  morphun::dictionary::PhraseProperties *v21;
  BOOL v22;
  BOOL v23;
  _QWORD *v24;
  std::allocator<char16_t> *v25;
  int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  BOOL v33;
  _QWORD *v34;
  morphun::dictionary::PhraseProperties *v35;
  std::basic_string<char16_t>::size_type v36;
  std::basic_string<char16_t> *v37;
  _QWORD *v38;
  morphun::dictionary::PhraseProperties *v39;
  _QWORD *v40;
  std::basic_string<char16_t> v41;
  std::basic_string<char16_t> v42;

  v3 = (std::basic_string<char16_t> *)a2;
  v5 = *((unsigned __int8 *)a2 + 23);
  if (*((char *)a2 + 23) < 0)
  {
    a2 = *(const std::basic_string<char16_t>::value_type **)a2;
    size = v3->__r_.__value_.__l.__size_;
    if (size < 2)
    {
LABEL_74:
      std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)a3, a2, size);
      return;
    }
  }
  else
  {
    if (v5 <= 1)
    {
LABEL_21:
      *(_OWORD *)a3 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
      v14 = v3->__r_.__value_.__r.__words[2];
LABEL_22:
      *(_QWORD *)(a3 + 16) = v14;
      return;
    }
    size = *((unsigned __int8 *)a2 + 23);
  }
  v7 = 0;
  v8 = size - 2;
  do
  {
    v9 = (unsigned __int16)a2[size - 2 + v7];
    v10 = (unsigned __int16)aEn_0[v7];
  }
  while (v10 == v9 && v7++ != 1);
  if (v10 == v9
    || ((v5 & 0x80u) == 0 ? (v12 = v5) : (v12 = v3->__r_.__value_.__l.__size_),
        v12
     && ((v5 & 0x80u) == 0 ? (v13 = v3) : (v13 = (std::basic_string<char16_t> *)v3->__r_.__value_.__r.__words[0]),
         v13->__r_.__value_.__s.__data_[v12 - 1] == 101)))
  {
    if ((v5 & 0x80) == 0)
      goto LABEL_21;
    a2 = (const std::basic_string<char16_t>::value_type *)v3->__r_.__value_.__r.__words[0];
    size = v3->__r_.__value_.__l.__size_;
    goto LABEL_74;
  }
  if (size < 3)
    goto LABEL_61;
  v15 = size - 1;
  if ((v5 & 0x80u) == 0)
    v16 = v3;
  else
    v16 = (std::basic_string<char16_t> *)v3->__r_.__value_.__r.__words[0];
  v17 = (unsigned __int16)v16->__r_.__value_.__s.__data_[v15];
  v18 = (unsigned __int16)v16->__r_.__value_.__s.__data_[v8];
  v19 = (unsigned __int16)v16->__r_.__value_.__s.__data_[size - 3];
  v20 = (_QWORD *)morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_START(a1);
  v21 = (morphun::dictionary::PhraseProperties *)MEMORY[0x1D179D958](*v20, v19);
  v22 = (_DWORD)v19 != (_DWORD)v18 || (_DWORD)v21 == 0;
  if (v22
    && ((_DWORD)v19 != 105 || (_DWORD)v18 != 106)
    && ((_DWORD)v19 != 101 || (_DWORD)v18 != 105)
    && ((_DWORD)v19 != 105 || (_DWORD)v18 != 101)
    && ((_DWORD)v19 != 111 || (_DWORD)v18 != 101)
    && ((_DWORD)v19 != 97 ? (v23 = (_DWORD)v19 == 111) : (v23 = 1), !v23 || (_DWORD)v18 != 117)
    || (v24 = (_QWORD *)morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_START(v21),
        v21 = (morphun::dictionary::PhraseProperties *)MEMORY[0x1D179D958](*v24, v17),
        (_DWORD)v21))
  {
    v26 = SHIBYTE(v3->__r_.__value_.__r.__words[2]);
    v27 = v3->__r_.__value_.__l.__size_;
    if (v26 >= 0)
      v27 = HIBYTE(v3->__r_.__value_.__r.__words[2]);
    if (v27 < 2)
      goto LABEL_87;
    v28 = 0;
    v29 = v26 >= 0 ? (uint64_t)v3 : v3->__r_.__value_.__r.__words[0];
    v30 = v29 + 2 * v27 - 4;
    do
    {
      v31 = *(unsigned __int16 *)(v30 + v28);
      v32 = *(unsigned __int16 *)&aI_5[v28];
      v33 = v32 != v31 || v28 == 2;
      v28 += 2;
    }
    while (!v33);
    if (v32 != v31)
    {
LABEL_87:
      v34 = (_QWORD *)morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_START(v21);
      v35 = (morphun::dictionary::PhraseProperties *)MEMORY[0x1D179D958](*v34, v19);
      if (!(_DWORD)v35)
      {
        v38 = (_QWORD *)morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_START(v35);
        v39 = (morphun::dictionary::PhraseProperties *)MEMORY[0x1D179D958](*v38, v18);
        if ((_DWORD)v39)
        {
          v40 = (_QWORD *)morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_START(v39);
          if (!MEMORY[0x1D179D958](*v40, v17))
          {
            std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v42, (const void **)&v3->__r_.__value_.__l.__data_, v17);
            std::basic_string<char16_t>::push_back(&v42, 101);
            *(_OWORD *)a3 = *(_OWORD *)&v42.__r_.__value_.__l.__data_;
            v14 = v42.__r_.__value_.__r.__words[2];
            goto LABEL_22;
          }
        }
      }
    }
LABEL_61:
    if ((v3->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v36 = HIBYTE(v3->__r_.__value_.__r.__words[2]);
    else
      v36 = v3->__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::basic_string[abi:ne180100](a3, v36 + 1);
    if (*(char *)(a3 + 23) < 0)
      a3 = *(_QWORD *)a3;
    if (v36)
    {
      if ((v3->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v37 = v3;
      else
        v37 = (std::basic_string<char16_t> *)v3->__r_.__value_.__r.__words[0];
      memmove((void *)a3, v37, 2 * v36);
    }
    *(_DWORD *)(a3 + 2 * v36) = 101;
    return;
  }
  if ((_DWORD)v17 == 115)
    LOWORD(v17) = 122;
  if ((_DWORD)v19 == (_DWORD)v18)
    std::basic_string<char16_t>::basic_string(&v41, v3, 0, v8, v25);
  else
    std::basic_string<char16_t>::basic_string(&v41, v3, 0, v15, v25);
  std::basic_string<char16_t>::push_back(&v41, v17);
  v42 = v41;
  memset(&v41, 0, sizeof(v41));
  std::basic_string<char16_t>::push_back(&v42, 101);
  *(std::basic_string<char16_t> *)a3 = v42;
  memset(&v42, 0, sizeof(v42));
  if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v41.__r_.__value_.__l.__data_);
}

void sub_1CB51D2C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *morphun::dialog::SemanticConcept::toString@<X0>(morphun::dialog::SemanticConcept *this@<X0>, _QWORD *a2@<X8>)
{
  return morphun::dialog::SemanticConcept::toString(this, a2);
}

{
  void (***v3)(_QWORD);
  void (***v4)(_QWORD);

  v3 = (void (***)(_QWORD))(*(uint64_t (**)(morphun::dialog::SemanticConcept *))(*(_QWORD *)this + 144))(this);
  if (!v3)
    return std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(a2, "n");
  v4 = v3;
  (**v3)(v3);
  return (_QWORD *)((uint64_t (*)(_QWORD))(*v4)[2])(v4);
}

void morphun::dialog::SemanticConcept::~SemanticConcept(morphun::dialog::SemanticConcept *this)
{
}

{
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::dialog::SemanticConcept::toSpeakableString(morphun::dialog::SemanticConcept *this)
{
  return (*(uint64_t (**)(morphun::dialog::SemanticConcept *, _QWORD))(*(_QWORD *)this + 144))(this, *((unsigned __int8 *)this + 160));
}

BOOL morphun::dialog::SemanticConcept::isExists(morphun::dialog::SemanticConcept *this)
{
  uint64_t CurrentValue;
  uint64_t v3;

  v3 = 0;
  CurrentValue = morphun::dialog::SemanticConcept::getCurrentValue((uint64_t)this, &v3);
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 16))(v3);
  return CurrentValue != 0;
}

void sub_1CB51D3C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 16))(a10);
  _Unwind_Resume(exception_object);
}

_QWORD *morphun::dialog::SemanticConcept::getFeatureValue(morphun::dialog::SemanticConcept *this, const morphun::dialog::SemanticFeature *a2)
{
  uint64_t CurrentValue;
  uint64_t v5;
  __int128 *v6;
  _QWORD *v7;
  uint64_t v8;
  morphun::dialog::SemanticFeatureModel *v9;
  uint64_t DefaultFeatureFunction;
  uint64_t FirstPossibleValue;
  __int128 *v12;
  uint64_t v14;

  v14 = 0;
  CurrentValue = morphun::dialog::SemanticConcept::getCurrentValue((uint64_t)this, &v14);
  v5 = CurrentValue;
  if (!CurrentValue)
    goto LABEL_9;
  v6 = (__int128 *)(*(uint64_t (**)(uint64_t, const morphun::dialog::SemanticFeature *))(*(_QWORD *)CurrentValue
                                                                                                + 32))(CurrentValue, a2);
  if (v6)
  {
    v7 = (_QWORD *)operator new();
    morphun::dialog::SpeakableString::SpeakableString(v7, v6);
    goto LABEL_10;
  }
  v8 = (*(uint64_t (**)(morphun::dialog::SemanticConcept *))(*(_QWORD *)this + 40))(this);
  v9 = (morphun::dialog::SemanticFeatureModel *)npc<morphun::dialog::SemanticFeatureModel const>(v8);
  DefaultFeatureFunction = morphun::dialog::SemanticFeatureModel::getDefaultFeatureFunction(v9, a2);
  if (DefaultFeatureFunction)
  {
    v7 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t, char *))(*(_QWORD *)DefaultFeatureFunction + 24))(DefaultFeatureFunction, v5, (char *)this + 16);
    goto LABEL_10;
  }
  FirstPossibleValue = morphun::dialog::SemanticConcept::getFirstPossibleValue((uint64_t)this, &v14);
  if (FirstPossibleValue
    && (v12 = (__int128 *)(*(uint64_t (**)(uint64_t, const morphun::dialog::SemanticFeature *))(*(_QWORD *)FirstPossibleValue + 32))(FirstPossibleValue, a2)) != 0)
  {
    v7 = (_QWORD *)operator new();
    morphun::dialog::SpeakableString::SpeakableString(v7, v12);
  }
  else
  {
LABEL_9:
    v7 = 0;
  }
LABEL_10:
  if (v14)
    (*(void (**)(uint64_t))(*(_QWORD *)v14 + 16))(v14);
  return v7;
}

void sub_1CB51D510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  MEMORY[0x1D179D2EC](v10, 0x10B3C40F7FF9C27);
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 16))(a10);
  _Unwind_Resume(a1);
}

morphun::dialog::SemanticConcept *morphun::dialog::SemanticConcept::clone(morphun::dialog::SemanticConcept *this)
{
  morphun::dialog::SemanticConcept *v2;

  v2 = (morphun::dialog::SemanticConcept *)operator new();
  morphun::dialog::SemanticConcept::SemanticConcept(v2, this);
  return v2;
}

void sub_1CB51D5A8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10F3C40C09A0546);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::SemanticConcept::getSemanticValue(morphun::dialog::SemanticConcept *this)
{
  return (uint64_t)this + *(_QWORD *)(*((_QWORD *)this + 5) - 40) + 64;
}

_QWORD *morphun::dialog::SemanticConcept::toSpeakableStringDefault(morphun::dialog::SemanticConcept *this, int a2)
{
  uint64_t CurrentValue;
  uint64_t v5;
  const std::basic_string<char16_t> *v6;
  std::basic_string<char16_t>::size_type size;
  uint64_t v8;
  _QWORD *v9;
  std::basic_string<char16_t>::size_type v10;
  std::basic_string<char16_t> *v11;
  morphun::exception::NullPointerException *exception;
  uint64_t v14;
  std::basic_string<char16_t> v15;

  memset(&v15, 0, sizeof(v15));
  v14 = 0;
  CurrentValue = morphun::dialog::SemanticConcept::getCurrentValue((uint64_t)this, &v14);
  v5 = CurrentValue;
  if (CurrentValue)
  {
    v6 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)CurrentValue + 24))(CurrentValue);
    std::basic_string<char16_t>::operator=(&v15, v6);
    size = HIBYTE(v15.__r_.__value_.__r.__words[2]);
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      size = v15.__r_.__value_.__l.__size_;
    if (size)
    {
      if (!(*(uint64_t (**)(morphun::dialog::SemanticConcept *))(*(_QWORD *)this + 120))(this))
      {
        exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
        morphun::exception::NullPointerException::NullPointerException(exception);
      }
      v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      if (v8)
      {
        v9 = (_QWORD *)operator new();
        morphun::dialog::SpeakableString::SpeakableString((uint64_t)v9, (__int128 *)&v15, v8);
        goto LABEL_17;
      }
      goto LABEL_12;
    }
LABEL_14:
    v9 = 0;
    goto LABEL_17;
  }
  if (!a2)
    goto LABEL_14;
  std::basic_string<char16_t>::operator=(&v15, (const std::basic_string<char16_t> *)((char *)this + *(_QWORD *)(*((_QWORD *)this + 5) - 40) + 64));
  v10 = HIBYTE(v15.__r_.__value_.__r.__words[2]);
  if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v10 = v15.__r_.__value_.__l.__size_;
  if (!v10)
    goto LABEL_14;
LABEL_12:
  v9 = (_QWORD *)operator new();
  *v9 = &off_1E866AD28;
  v11 = (std::basic_string<char16_t> *)(v9 + 1);
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v11, v15.__r_.__value_.__l.__data_, v15.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v11->__r_.__value_.__l.__data_ = *(_OWORD *)&v15.__r_.__value_.__l.__data_;
    v9[3] = *((_QWORD *)&v15.__r_.__value_.__l + 2);
  }
  v9[4] = 0;
LABEL_17:
  if (v14)
    (*(void (**)(uint64_t))(*(_QWORD *)v14 + 16))(v14);
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v15.__r_.__value_.__l.__data_);
  return v9;
}

void sub_1CB51D79C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  MEMORY[0x1D179D2EC](v15, 0x10B3C40F7FF9C27);
  if (a9)
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 16))(a9);
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::SemanticConcept::getCurrentValue(uint64_t a1, uint64_t *a2)
{
  uint64_t FirstPossibleValue;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  FirstPossibleValue = morphun::dialog::SemanticConcept::getFirstPossibleValue(a1, a2);
  if (!FirstPossibleValue)
    goto LABEL_8;
  v4 = FirstPossibleValue;
  v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)FirstPossibleValue + 24))(FirstPossibleValue);
  v6 = *(unsigned __int8 *)(v5 + 23);
  if ((v6 & 0x80u) != 0)
    v6 = *(_QWORD *)(v5 + 8);
  if (!v6)
  {
    if (!*(_BYTE *)(a1 + 160))
      return 0;
LABEL_8:
    v7 = *(unsigned __int8 *)(a1 + 127);
    if ((v7 & 0x80u) != 0)
      v7 = *(_QWORD *)(a1 + 112);
    if (v7)
      return a1 + 96;
    else
      return 0;
  }
  return v4;
}

uint64_t morphun::dialog::SemanticConcept::getFirstPossibleValue(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  std::basic_string<char16_t> *v11;
  std::basic_string<char16_t>::size_type v12;
  int v13;
  uint64_t v14;
  int v15;
  unsigned __int16 *v16;
  std::basic_string<char16_t>::value_type *size;
  _QWORD *v18;
  _QWORD *v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *exception;
  std::basic_string<char16_t>::size_type v27;
  std::basic_string<char16_t> v28;
  std::basic_string<char16_t> v29;
  uint64_t v30;
  std::basic_string<char16_t> *v31;
  char v32;
  std::basic_string<char16_t>::size_type *p_size;
  std::basic_string<char16_t> v34;
  uint64_t v35[3];
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v4 = *(_QWORD *)(a1 + 152);
  if (v4)
  {
    v5 = *(_QWORD *)(v4 + 8);
    v6 = *(_QWORD *)(v4 + 16);
    if (v5 != v6)
    {
      v7 = (_QWORD *)(a1 + 24);
      do
      {
        v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
        std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100](&p_size, v8);
        v9 = *(_QWORD **)(a1 + 16);
        if (v9 == v7)
        {
          std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy((void **)v34.__r_.__value_.__l.__data_);
          return v5;
        }
        v10 = 1;
        do
        {
          v11 = (std::basic_string<char16_t> *)std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>((uint64_t)&p_size, (uint64_t)(v9 + 4));
          if (&v34 != v11)
          {
            v12 = HIBYTE(v11[5].__r_.__value_.__r.__words[0]);
            v13 = (char)v12;
            if ((v12 & 0x80u) != 0)
              v12 = v11[4].__r_.__value_.__r.__words[2];
            v14 = *((unsigned __int8 *)v9 + 127);
            v15 = (char)v14;
            if ((v14 & 0x80u) != 0)
              v14 = v9[14];
            if (v12 == v14)
            {
              if (!v12)
                goto LABEL_23;
              if (v15 >= 0)
                v16 = (unsigned __int16 *)(v9 + 13);
              else
                v16 = (unsigned __int16 *)v9[13];
              if (v13 >= 0)
                size = &v11[4].__r_.__value_.__s.__data_[4];
              else
                size = (std::basic_string<char16_t>::value_type *)v11[4].__r_.__value_.__l.__size_;
              while (*v16 == (unsigned __int16)*size)
              {
                ++size;
                ++v16;
                if (!--v12)
                  goto LABEL_23;
              }
            }
          }
          v10 = 0;
LABEL_23:
          v18 = (_QWORD *)v9[1];
          if (v18)
          {
            do
            {
              v19 = v18;
              v18 = (_QWORD *)*v18;
            }
            while (v18);
          }
          else
          {
            do
            {
              v19 = (_QWORD *)v9[2];
              v20 = *v19 == (_QWORD)v9;
              v9 = v19;
            }
            while (!v20);
          }
          v9 = v19;
        }
        while (v19 != v7);
        std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy((void **)v34.__r_.__value_.__l.__data_);
        if ((v10 & 1) != 0)
          return v5;
        v5 += 56;
      }
      while (v5 != v6);
    }
  }
  v21 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 40))(a1);
  v22 = npc<morphun::dialog::SemanticFeatureModel const>(v21);
  v5 = *(_QWORD *)(v22 + 232);
  if (v5)
  {
    v23 = *(_QWORD *)(a1 + 152);
    if (v23)
    {
      v5 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v5 + 24))(*(_QWORD *)(v22 + 232), v23, a1 + 16, 1);
      if (!v5)
        return v5;
      goto LABEL_41;
    }
    if (!*(_BYTE *)(a1 + 160))
    {
      exception = __cxa_allocate_exception(0x38uLL);
      morphun::dialog::SemanticValue::toString((morphun::dialog::SemanticValue *)(a1 + 40), &v28);
      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v29, L"Display data is missing for \"", &v28, v27);
      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&p_size, &v29, (std::basic_string<char16_t>::value_type *)"\"");
      morphun::exception::Throwable::Throwable((uint64_t)exception, (__int128 *)&p_size);
      *exception = &off_1E86730F0;
    }
    p_size = (std::basic_string<char16_t>::size_type *)&off_1E866B6A0;
    if (*(char *)(a1 + 127) < 0)
      std::basic_string<char16_t>::__init_copy_ctor_external(&v34, *(const std::basic_string<char16_t>::value_type **)(a1 + 104), *(_QWORD *)(a1 + 112));
    else
      v34 = *(std::basic_string<char16_t> *)(a1 + 104);
    std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100](v35, a1 + 128);
    memset(&v28, 0, sizeof(v28));
    v31 = &v28;
    v32 = 0;
    v28.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x38uLL);
    v28.__r_.__value_.__l.__size_ = v28.__r_.__value_.__r.__words[0];
    v28.__r_.__value_.__r.__words[2] = v28.__r_.__value_.__r.__words[0] + 56;
    v28.__r_.__value_.__l.__size_ = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<morphun::dialog::SemanticFeatureModel_DisplayValue>,morphun::dialog::SemanticFeatureModel_DisplayValue const*,morphun::dialog::SemanticFeatureModel_DisplayValue const*,morphun::dialog::SemanticFeatureModel_DisplayValue*>((uint64_t)&p_size, (uint64_t)&v36, (uint64_t)v28.__r_.__value_.__l.__data_);
    v29.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&off_1E866B660;
    *(_OWORD *)&v29.__r_.__value_.__r.__words[1] = 0uLL;
    v30 = 0;
    std::vector<morphun::dialog::SemanticFeatureModel_DisplayValue>::__init_with_size[abi:ne180100]<morphun::dialog::SemanticFeatureModel_DisplayValue*,morphun::dialog::SemanticFeatureModel_DisplayValue*>(&v29.__r_.__value_.__l.__size_, (uint64_t)v28.__r_.__value_.__l.__data_, v28.__r_.__value_.__l.__size_, 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v28.__r_.__value_.__l.__size_ - v28.__r_.__value_.__r.__words[0]) >> 3));
    v31 = &v28;
    std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100]((void ***)&v31);
    v5 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *, uint64_t, uint64_t))(*(_QWORD *)v5 + 24))(v5, &v29, a1 + 16, 1);
    v29.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&off_1E866B660;
    p_size = &v29.__r_.__value_.__l.__size_;
    std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_size);
    if (v5)
    {
LABEL_41:
      v24 = *a2;
      *a2 = v5;
      if (v24)
        (*(void (**)(uint64_t))(*(_QWORD *)v24 + 16))(v24);
    }
  }
  return v5;
}

void sub_1CB51DC34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,void *a26,int a27,__int16 a28,char a29,char a30,int a31,__int16 a32,char a33,char a34)
{
  int v34;
  void *v35;

  if (a30 < 0)
    operator delete(__p);
  if (a21 < 0)
    operator delete(a16);
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v34 & 1) == 0)
LABEL_10:
      _Unwind_Resume(a1);
  }
  else if (!v34)
  {
    goto LABEL_10;
  }
  __cxa_free_exception(v35);
  goto LABEL_10;
}

uint64_t npc<morphun::dialog::SemanticFeatureModel const>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB51DD6C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<morphun::dialog::SemanticFeatureModel_DisplayValue>,morphun::dialog::SemanticFeatureModel_DisplayValue const*,morphun::dialog::SemanticFeatureModel_DisplayValue const*,morphun::dialog::SemanticFeatureModel_DisplayValue*>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    v6 = 0;
    do
    {
      std::allocator<morphun::dialog::SemanticFeatureModel_DisplayValue>::construct[abi:ne180100]<morphun::dialog::SemanticFeatureModel_DisplayValue,morphun::dialog::SemanticFeatureModel_DisplayValue const&>(a3 + v6, a1 + v6);
      v6 += 56;
    }
    while (a1 + v6 != a2);
    a3 += v6;
  }
  return a3;
}

_QWORD *std::allocator<morphun::dialog::SemanticFeatureModel_DisplayValue>::construct[abi:ne180100]<morphun::dialog::SemanticFeatureModel_DisplayValue,morphun::dialog::SemanticFeatureModel_DisplayValue const&>(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = &off_1E866B6A0;
  if (*(char *)(a2 + 31) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)(a2 + 8), *(_QWORD *)(a2 + 16));
  }
  else
  {
    v4 = *(_OWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = v4;
  }
  return std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100]((_QWORD *)(a1 + 32), a2 + 32);
}

void sub_1CB51DE88(_Unwind_Exception *exception_object)
{
  void **v1;
  uint64_t v2;

  if (*(char *)(v2 + 31) < 0)
    operator delete(*v1);
  _Unwind_Resume(exception_object);
}

morphun::dialog::SemanticConcept *morphun::dialog::SemanticConcept::SemanticConcept(morphun::dialog::SemanticConcept *this, const morphun::dialog::SemanticConcept *a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *((_QWORD *)a2 + 1);
  *(_QWORD *)this = &off_1E86573B8;
  *((_QWORD *)this + 1) = v4;
  std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100]((_QWORD *)this + 2, (uint64_t)a2 + 16);
  *(_QWORD *)this = &off_1E866ABF8;
  std::pair<std::basic_string<char16_t>,std::basic_string<char16_t>>::pair[abi:ne180100]((std::basic_string<char16_t> *)this + 2, (__int128 *)((char *)a2 + *(_QWORD *)(*((_QWORD *)a2 + 5) - 40) + 40));
  *((_QWORD *)this + 5) = &off_1E866AAC0;
  *((_QWORD *)this + 12) = &off_1E866B6A0;
  if (*((char *)a2 + 127) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)((char *)this + 104), *((const std::basic_string<char16_t>::value_type **)a2 + 13), *((_QWORD *)a2 + 14));
  }
  else
  {
    v5 = *(_OWORD *)((char *)a2 + 104);
    *((_QWORD *)this + 15) = *((_QWORD *)a2 + 15);
    *(_OWORD *)((char *)this + 104) = v5;
  }
  std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100]((_QWORD *)this + 16, (uint64_t)a2 + 128);
  *((_QWORD *)this + 19) = *((_QWORD *)a2 + 19);
  *((_BYTE *)this + 160) = *((_BYTE *)a2 + 160);
  return this;
}

void sub_1CB51DF70(_Unwind_Exception *a1)
{
  uint64_t v1;

  morphun::dialog::SemanticValue::~SemanticValue((void **)(v1 + 40));
  morphun::dialog::SemanticFeatureConceptBase::~SemanticFeatureConceptBase((void ***)v1, (void ***)off_1E86672A0);
  _Unwind_Resume(a1);
}

void morphun::dialog::SemanticConcept::~SemanticConcept(morphun::dialog::SemanticConcept *this, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  *(_QWORD *)this = *a2;
  *(_QWORD *)((char *)this + *(_QWORD *)(v4 - 72)) = a2[5];
  *(_QWORD *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 56)) = a2[6];
  *(_QWORD *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 40)) = a2[7];
  morphun::dialog::SemanticValue::~SemanticValue((void **)this + 5);
  v5 = a2[1];
  *(_QWORD *)this = v5;
  *(_QWORD *)((char *)this + *(_QWORD *)(v5 - 72)) = a2[2];
  *(_QWORD *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 56)) = a2[3];
  *(_QWORD *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 40)) = a2[4];
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(*((void ***)this + 3));
}

void sub_1CB51E0C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 16))(v1);
  _Unwind_Resume(a1);
}

std::basic_string<char16_t> *morphun::dialog::SemanticConcept::SemanticConcept(std::basic_string<char16_t> *this, const morphun::dialog::SemanticFeatureModel *a2, const morphun::dialog::SemanticValue *a3, _QWORD *a4, char a5)
{
  std::basic_string<char16_t>::size_type v9;
  uint64_t v10;
  _QWORD *DisplayData;
  _QWORD *exception;
  std::basic_string<char16_t>::size_type v14;
  std::basic_string<char16_t> v15;
  std::basic_string<char16_t> v16;
  __int128 v17;

  v9 = *((_QWORD *)a2 + 1);
  this->__r_.__value_.__r.__words[0] = v9;
  *(std::basic_string<char16_t>::size_type *)((char *)this->__r_.__value_.__r.__words + *(_QWORD *)(v9 - 72)) = *((_QWORD *)a2 + 2);
  *(std::basic_string<char16_t>::size_type *)((char *)this->__r_.__value_.__r.__words
                                            + *(_QWORD *)(this->__r_.__value_.__r.__words[0] - 56)) = *((_QWORD *)a2 + 3);
  *(std::basic_string<char16_t>::size_type *)((char *)this->__r_.__value_.__r.__words
                                            + *(_QWORD *)(this->__r_.__value_.__r.__words[0] - 40)) = *((_QWORD *)a2 + 4);
  this[1].__r_.__value_.__l.__size_ = 0;
  this[1].__r_.__value_.__r.__words[0] = 0;
  this->__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)a3;
  this->__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)&this[1];
  v10 = *(_QWORD *)a2;
  this->__r_.__value_.__r.__words[0] = *(_QWORD *)a2;
  *(std::basic_string<char16_t>::size_type *)((char *)this->__r_.__value_.__r.__words + *(_QWORD *)(v10 - 72)) = *((_QWORD *)a2 + 5);
  *(std::basic_string<char16_t>::size_type *)((char *)this->__r_.__value_.__r.__words
                                            + *(_QWORD *)(this->__r_.__value_.__r.__words[0] - 56)) = *((_QWORD *)a2 + 6);
  *(std::basic_string<char16_t>::size_type *)((char *)this->__r_.__value_.__r.__words
                                            + *(_QWORD *)(this->__r_.__value_.__r.__words[0] - 40)) = *((_QWORD *)a2 + 7);
  std::pair<std::basic_string<char16_t>,std::basic_string<char16_t>>::pair[abi:ne180100](this + 2, (__int128 *)((char *)a4 + *(_QWORD *)(*a4 - 40)));
  this[1].__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)&off_1E866AAC0;
  morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue((uint64_t)&this[4], (__int128 *)((char *)a4 + *(_QWORD *)(*a4 - 40) + 24));
  npc<morphun::dialog::SemanticFeatureModel const>((uint64_t)a3);
  DisplayData = morphun::dialog::SemanticFeatureModel::getDisplayData((uint64_t)a3, a4);
  this[6].__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)DisplayData;
  LOBYTE(this[6].__r_.__value_.__r.__words[2]) = a5;
  if ((a5 & 1) == 0 && (!DisplayData || DisplayData[1] == DisplayData[2]))
  {
    exception = __cxa_allocate_exception(0x38uLL);
    (*(void (**)(std::basic_string<char16_t> *__return_ptr, _QWORD *))*a4)(&v15, a4);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v16, L"Display data is missing for semantic value \"", &v15, v14);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v17, &v16, (std::basic_string<char16_t>::value_type *)"\"");
    morphun::exception::Throwable::Throwable((uint64_t)exception, &v17);
    *exception = &off_1E8673120;
  }
  return this;
}

void sub_1CB51E290(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  uint64_t v27;
  void ***v28;
  morphun::dialog::SemanticFeatureModel_DisplayValue *v29;
  void *v30;
  int v31;

  if (a27 < 0)
    operator delete(__p);
  if (a21 < 0)
    operator delete(a16);
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v31 & 1) == 0)
    {
LABEL_10:
      morphun::dialog::SemanticValue::~SemanticValue((void **)(v27 + 40));
      morphun::dialog::SemanticFeatureConceptBase::~SemanticFeatureConceptBase((void ***)v27, v28);
      _Unwind_Resume(a1);
    }
  }
  else if (!v31)
  {
    goto LABEL_10;
  }
  __cxa_free_exception(v30);
  goto LABEL_10;
}

std::basic_string<char16_t> *morphun::dialog::SemanticConcept::SemanticConcept(std::basic_string<char16_t> *this, const morphun::dialog::SemanticFeatureModel *a2, const morphun::dialog::SemanticValue *a3, char a4)
{
  _QWORD *DisplayData;
  _QWORD *exception;
  std::basic_string<char16_t>::size_type v11;
  std::basic_string<char16_t> v12;
  std::basic_string<char16_t> v13;
  __int128 v14;

  this[1].__r_.__value_.__l.__size_ = 0;
  this[1].__r_.__value_.__r.__words[0] = 0;
  this->__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)a2;
  this->__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)&this[1];
  this->__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&off_1E866ABF8;
  std::pair<std::basic_string<char16_t>,std::basic_string<char16_t>>::pair[abi:ne180100](this + 2, (__int128 *)((char *)a3 + *(_QWORD *)(*(_QWORD *)a3 - 40)));
  this[1].__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)&off_1E866AAC0;
  morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue((uint64_t)&this[4], (__int128 *)((char *)a3 + *(_QWORD *)(*(_QWORD *)a3 - 40) + 24));
  npc<morphun::dialog::SemanticFeatureModel const>((uint64_t)a2);
  DisplayData = morphun::dialog::SemanticFeatureModel::getDisplayData((uint64_t)a2, a3);
  this[6].__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)DisplayData;
  LOBYTE(this[6].__r_.__value_.__r.__words[2]) = a4;
  if ((a4 & 1) == 0 && (!DisplayData || DisplayData[1] == DisplayData[2]))
  {
    exception = __cxa_allocate_exception(0x38uLL);
    (**(void (***)(std::basic_string<char16_t> *__return_ptr, const morphun::dialog::SemanticValue *))a3)(&v12, a3);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v13, L"Display data is missing for semantic value \"", &v12, v11);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v14, &v13, (std::basic_string<char16_t>::value_type *)"\"");
    morphun::exception::Throwable::Throwable((uint64_t)exception, &v14);
    *exception = &off_1E8673120;
  }
  return this;
}

void sub_1CB51E494(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  uint64_t v27;
  morphun::dialog::SemanticFeatureModel_DisplayValue *v28;
  void *v29;
  int v30;

  if (a27 < 0)
    operator delete(__p);
  if (a21 < 0)
    operator delete(a16);
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v30 & 1) == 0)
    {
LABEL_10:
      morphun::dialog::SemanticValue::~SemanticValue((void **)(v27 + 40));
      morphun::dialog::SemanticFeatureConceptBase::~SemanticFeatureConceptBase((void ***)v27, (void ***)off_1E86672A0);
      _Unwind_Resume(a1);
    }
  }
  else if (!v30)
  {
    goto LABEL_10;
  }
  __cxa_free_exception(v29);
  goto LABEL_10;
}

morphun::dialog::SemanticConcept *morphun::dialog::SemanticConcept::SemanticConcept(morphun::dialog::SemanticConcept *this, const morphun::dialog::SemanticConcept *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)this = v6;
  *(_QWORD *)((char *)this + *(_QWORD *)(v6 - 72)) = *((_QWORD *)a2 + 2);
  *(_QWORD *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 56)) = *((_QWORD *)a2 + 3);
  *(_QWORD *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 40)) = *((_QWORD *)a2 + 4);
  *((_QWORD *)this + 1) = *(_QWORD *)(a3 + 8);
  std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100]((_QWORD *)this + 2, a3 + 16);
  v7 = *(_QWORD *)a2;
  *(_QWORD *)this = *(_QWORD *)a2;
  *(_QWORD *)((char *)this + *(_QWORD *)(v7 - 72)) = *((_QWORD *)a2 + 5);
  *(_QWORD *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 56)) = *((_QWORD *)a2 + 6);
  *(_QWORD *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 40)) = *((_QWORD *)a2 + 7);
  std::pair<std::basic_string<char16_t>,std::basic_string<char16_t>>::pair[abi:ne180100]((std::basic_string<char16_t> *)this + 2, (__int128 *)(a3 + 40 + *(_QWORD *)(*(_QWORD *)(a3 + 40) - 40)));
  *((_QWORD *)this + 5) = &off_1E866AAC0;
  *((_QWORD *)this + 12) = &off_1E866B6A0;
  if (*(char *)(a3 + 127) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)((char *)this + 104), *(const std::basic_string<char16_t>::value_type **)(a3 + 104), *(_QWORD *)(a3 + 112));
  }
  else
  {
    v8 = *(_OWORD *)(a3 + 104);
    *((_QWORD *)this + 15) = *(_QWORD *)(a3 + 120);
    *(_OWORD *)((char *)this + 104) = v8;
  }
  std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100]((_QWORD *)this + 16, a3 + 128);
  *((_QWORD *)this + 19) = *(_QWORD *)(a3 + 152);
  *((_BYTE *)this + 160) = *(_BYTE *)(a3 + 160);
  return this;
}

void sub_1CB51E67C(_Unwind_Exception *a1)
{
  uint64_t v1;
  void ***v2;

  morphun::dialog::SemanticValue::~SemanticValue((void **)(v1 + 40));
  morphun::dialog::SemanticFeatureConceptBase::~SemanticFeatureConceptBase((void ***)v1, v2);
  _Unwind_Resume(a1);
}

void `virtual thunk to'morphun::dialog::SemanticConcept::~SemanticConcept(morphun::dialog::SemanticConcept *this)
{
}

{
  JUMPOUT(0x1D179D2ECLL);
}

BOOL `virtual thunk to'morphun::dialog::SemanticConcept::isExists(morphun::dialog::SemanticConcept *this)
{
  return morphun::dialog::SemanticConcept::isExists((morphun::dialog::SemanticConcept *)((char *)this
                                                                                       + *(_QWORD *)(*(_QWORD *)this - 64)));
}

uint64_t `virtual thunk to'morphun::dialog::SemanticConcept::toSpeakableString(morphun::dialog::SemanticConcept *this)
{
  return (*(uint64_t (**)(char *, _QWORD))(*(_QWORD *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 48))
                                                   + 144))((char *)this + *(_QWORD *)(*(_QWORD *)this - 48), *((unsigned __int8 *)this + *(_QWORD *)(*(_QWORD *)this - 48) + 160));
}

_QWORD *`virtual thunk to'morphun::dialog::SemanticConcept::toString@<X0>(morphun::dialog::SemanticConcept *this@<X0>, _QWORD *a2@<X8>)
{
  return morphun::dialog::SemanticConcept::toString((morphun::dialog::SemanticConcept *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 24)), a2);
}

BOOL morphun::dialog::SemanticConcept::operator==(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  unsigned __int16 *v11;
  unsigned __int16 *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  unsigned __int16 **v17;
  unsigned __int16 *v18;
  unsigned __int16 *v19;
  unsigned __int16 *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _BOOL8 result;
  _QWORD *v26;
  _QWORD *v27;
  BOOL v28;
  _QWORD *v29;
  _QWORD *v30;

  if (a2 == a1)
    return 1;
  v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 40))(a1);
  if (v4 != (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 40))(a2))
    return 0;
  v5 = a1 + 40 + *(_QWORD *)(*(_QWORD *)(a1 + 40) - 40);
  v6 = a2 + 40 + *(_QWORD *)(*(_QWORD *)(a2 + 40) - 40);
  v7 = *(unsigned __int8 *)(v5 + 23);
  v8 = (char)v7;
  if ((v7 & 0x80u) != 0)
    v7 = *(_QWORD *)(v5 + 8);
  v9 = *(unsigned __int8 *)(v6 + 23);
  v10 = (char)v9;
  if ((v9 & 0x80u) != 0)
    v9 = *(_QWORD *)(v6 + 8);
  if (v7 != v9)
    return 0;
  if (v7)
  {
    if (v10 >= 0)
      v11 = (unsigned __int16 *)(a2 + 40 + *(_QWORD *)(*(_QWORD *)(a2 + 40) - 40));
    else
      v11 = *(unsigned __int16 **)v6;
    if (v8 >= 0)
      v12 = (unsigned __int16 *)(a1 + 40 + *(_QWORD *)(*(_QWORD *)(a1 + 40) - 40));
    else
      v12 = *(unsigned __int16 **)v5;
    while (*v11 == *v12)
    {
      ++v12;
      ++v11;
      if (!--v7)
        goto LABEL_17;
    }
    return 0;
  }
LABEL_17:
  v13 = *(unsigned __int8 *)(v5 + 47);
  v14 = (char)v13;
  if ((v13 & 0x80u) != 0)
    v13 = *(_QWORD *)(v5 + 32);
  v15 = *(unsigned __int8 *)(v6 + 47);
  v16 = (char)v15;
  if ((v15 & 0x80u) != 0)
    v15 = *(_QWORD *)(v6 + 32);
  if (v13 != v15)
    return 0;
  if (v13)
  {
    v17 = (unsigned __int16 **)(v5 + 24);
    v18 = (unsigned __int16 *)(v6 + 24);
    v19 = *(unsigned __int16 **)(v6 + 24);
    if (v16 < 0)
      v18 = v19;
    v20 = *v17;
    if (v14 >= 0)
      v20 = (unsigned __int16 *)v17;
    while (*v18 == *v20)
    {
      ++v20;
      ++v18;
      if (!--v13)
        goto LABEL_29;
    }
    return 0;
  }
LABEL_29:
  if (*(unsigned __int8 *)(a1 + 160) != *(unsigned __int8 *)(a2 + 160))
    return 0;
  v21 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 120))(a1);
  if (v21 != (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 120))(a2)
    || *(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32))
  {
    return 0;
  }
  v22 = *(_QWORD **)(a1 + 16);
  v23 = (_QWORD *)(a1 + 24);
  if (v22 == v23)
    return 1;
  v24 = *(_QWORD **)(a2 + 16);
  do
  {
    result = std::__equal_to::operator()[abi:ne180100]<std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>,std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>>((uint64_t)(v22 + 4), (uint64_t)(v24 + 4));
    if (!result)
      break;
    v26 = (_QWORD *)v22[1];
    v27 = v22;
    if (v26)
    {
      do
      {
        v22 = v26;
        v26 = (_QWORD *)*v26;
      }
      while (v26);
    }
    else
    {
      do
      {
        v22 = (_QWORD *)v27[2];
        v28 = *v22 == (_QWORD)v27;
        v27 = v22;
      }
      while (!v28);
    }
    v29 = (_QWORD *)v24[1];
    if (v29)
    {
      do
      {
        v30 = v29;
        v29 = (_QWORD *)*v29;
      }
      while (v29);
    }
    else
    {
      do
      {
        v30 = (_QWORD *)v24[2];
        v28 = *v30 == (_QWORD)v24;
        v24 = v30;
      }
      while (!v28);
    }
    v24 = v30;
  }
  while (v22 != v23);
  return result;
}

BOOL std::__equal_to::operator()[abi:ne180100]<std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>,std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>>(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unsigned __int16 *v9;
  unsigned __int16 *v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  BOOL v17;

  result = morphun::dialog::SemanticFeature::operator==(a1, a2);
  if (result)
  {
    v5 = *(char *)(a1 + 95);
    v6 = *(_QWORD *)(a1 + 80);
    if (v5 >= 0)
      v6 = *(unsigned __int8 *)(a1 + 95);
    v7 = *(unsigned __int8 *)(a2 + 95);
    v8 = (char)v7;
    if ((v7 & 0x80u) != 0)
      v7 = *(_QWORD *)(a2 + 80);
    if (v6 == v7)
    {
      if (v6)
      {
        if (v8 >= 0)
          v9 = (unsigned __int16 *)(a2 + 72);
        else
          v9 = *(unsigned __int16 **)(a2 + 72);
        if (v5 >= 0)
          v10 = (unsigned __int16 *)(a1 + 72);
        else
          v10 = *(unsigned __int16 **)(a1 + 72);
        v11 = v6 - 1;
        do
        {
          v13 = *v10++;
          v12 = v13;
          v15 = *v9++;
          v14 = v15;
          v17 = v11-- != 0;
          result = v14 == v12;
        }
        while (v14 == v12 && v17);
      }
      else
      {
        return 1;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

BOOL morphun::dialog::SemanticConcept::operator!=(uint64_t a1, uint64_t a2)
{
  return !morphun::dialog::SemanticConcept::operator==(a1, a2);
}

void morphun::grammar::synthesis::BgGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::BgGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  morphun::util::LocaleUtils *v3;
  morphun::grammar::synthesis::GrammemeConstants *v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t i;
  morphun::util::LocaleUtils *v12;
  morphun::grammar::synthesis::GrammemeConstants *v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t j;
  std::basic_string<char16_t> *v19;
  std::basic_string<char16_t> *v20;
  std::basic_string<char16_t> *v21;
  void *__p[2];
  char v23;
  std::basic_string<char16_t> **v24;
  char v25;
  std::basic_string<char16_t> v26;
  std::basic_string<char16_t> v27;
  std::basic_string<char16_t> v28;
  __int128 v29;

  *(_QWORD *)&v29 = *MEMORY[0x1E0C80C00];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"gender");
  v3 = (morphun::util::LocaleUtils *)operator new();
  v4 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::BULGARIAN(v3);
  v5 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(v4);
  if (*(char *)(v5 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v26, *(const std::basic_string<char16_t>::value_type **)v5, *(_QWORD *)(v5 + 8));
  }
  else
  {
    v6 = *(_OWORD *)v5;
    v26.__r_.__value_.__r.__words[2] = *(_QWORD *)(v5 + 16);
    *(_OWORD *)&v26.__r_.__value_.__l.__data_ = v6;
  }
  v7 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE((morphun::grammar::synthesis::GrammemeConstants *)v5);
  if (*(char *)(v7 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v27, *(const std::basic_string<char16_t>::value_type **)v7, *(_QWORD *)(v7 + 8));
  }
  else
  {
    v8 = *(_OWORD *)v7;
    v27.__r_.__value_.__r.__words[2] = *(_QWORD *)(v7 + 16);
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = v8;
  }
  v9 = morphun::grammar::synthesis::GrammemeConstants::GENDER_NEUTER((morphun::grammar::synthesis::GrammemeConstants *)v7);
  if (*(char *)(v9 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v28, *(const std::basic_string<char16_t>::value_type **)v9, *(_QWORD *)(v9 + 8));
  }
  else
  {
    v10 = *(_OWORD *)v9;
    v28.__r_.__value_.__r.__words[2] = *(_QWORD *)(v9 + 16);
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = v10;
  }
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v24 = &v19;
  v25 = 0;
  v19 = (std::basic_string<char16_t> *)operator new(0x48uLL);
  v20 = v19;
  v21 = v19 + 3;
  v20 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v21, (__int128 *)&v26, &v29, v19);
  morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction((uint64_t)v3, v4, (uint64_t *)&v19);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)__p, (morphun::util::LocaleUtils *)((char *)v3 + *(_QWORD *)(*(_QWORD *)v3 - 56)));
  v24 = &v19;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v24);
  for (i = 0; i != -9; i -= 3)
  {
    if (SHIBYTE(v28.__r_.__value_.__r.__words[i + 2]) < 0)
      operator delete(*(void **)((char *)&v28.__r_.__value_.__l.__data_ + i * 8));
  }
  if (v23 < 0)
    operator delete(__p[0]);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"count");
  v12 = (morphun::util::LocaleUtils *)operator new();
  v13 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::BULGARIAN(v12);
  v14 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v13);
  if (*(char *)(v14 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v26, *(const std::basic_string<char16_t>::value_type **)v14, *(_QWORD *)(v14 + 8));
  }
  else
  {
    v15 = *(_OWORD *)v14;
    v26.__r_.__value_.__r.__words[2] = *(_QWORD *)(v14 + 16);
    *(_OWORD *)&v26.__r_.__value_.__l.__data_ = v15;
  }
  v16 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v14);
  if (*(char *)(v16 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v27, *(const std::basic_string<char16_t>::value_type **)v16, *(_QWORD *)(v16 + 8));
  }
  else
  {
    v17 = *(_OWORD *)v16;
    v27.__r_.__value_.__r.__words[2] = *(_QWORD *)(v16 + 16);
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = v17;
  }
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v24 = &v19;
  v25 = 0;
  v19 = (std::basic_string<char16_t> *)operator new(0x30uLL);
  v20 = v19;
  v21 = v19 + 2;
  v20 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v21, (__int128 *)&v26, (__int128 *)&v28, v19);
  morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction((uint64_t)v12, v13, (uint64_t *)&v19);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)__p, (morphun::util::LocaleUtils *)((char *)v12 + *(_QWORD *)(*(_QWORD *)v12 - 56)));
  v24 = &v19;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v24);
  for (j = 0; j != -6; j -= 3)
  {
    if (SHIBYTE(v27.__r_.__value_.__r.__words[j + 2]) < 0)
      operator delete(*(void **)((char *)&v26 + j * 8 + 24));
  }
  if (v23 < 0)
    operator delete(__p[0]);
}

void sub_1CB51EDA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  uint64_t v31;
  uint64_t v33;

  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a18);
  v33 = 0;
  while (1)
  {
    if (*(&a31 + v33) < 0)
      operator delete(*(void **)((char *)&a26 + v33));
    v33 -= 24;
    if (v33 == -48)
    {
      MEMORY[0x1D179D2EC](v31, 0x10F3C40BE507067);
      if (a17 < 0)
        operator delete(__p);
      _Unwind_Resume(a1);
    }
  }
}

uint64_t **com::apple::siri::tokenizer::data::config_wuu::getContent@<X0>(uint64_t **a1@<X8>)
{
  __int128 v3;
  const __int16 *v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v3 = xmmword_1E8686980;
  v4 = L"zh_Hans";
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

void morphun::analysis::tokenattributes::KeywordAttributeImpl::~KeywordAttributeImpl(morphun::analysis::tokenattributes::KeywordAttributeImpl *this)
{
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t `covariant return thunk to'morphun::analysis::tokenattributes::KeywordAttributeImpl::clone(morphun::analysis::tokenattributes::KeywordAttributeImpl *this)
{
  char *v1;
  uint64_t result;

  v1 = (char *)this + *(_QWORD *)(*(_QWORD *)this - 48);
  result = operator new();
  *(_QWORD *)result = &off_1E8671178;
  *(_QWORD *)(result + 8) = &unk_1E8671238;
  *(_BYTE *)(result + 16) = v1[16];
  return result;
}

BOOL morphun::analysis::tokenattributes::KeywordAttributeImpl::equals(uint64_t (***this)(morphun::Object *__hidden this), uint64_t (***a2)(morphun::Object *__hidden this))
{
  if (this == a2)
    return 1;
  if (*a2 == &off_1E8671178)
    return *((unsigned __int8 *)this + 16) == *((unsigned __int8 *)a2 + 16);
  return 0;
}

uint64_t morphun::analysis::tokenattributes::KeywordAttributeImpl::hashCode(morphun::analysis::tokenattributes::KeywordAttributeImpl *this)
{
  if (*((_BYTE *)this + 16))
    return 31;
  else
    return 37;
}

uint64_t morphun::analysis::tokenattributes::KeywordAttributeImpl::operator()(uint64_t a1, uint64_t a2)
{
  if (*(uint64_t (***)(morphun::Object *__hidden))a2 != &off_1E8671178)
    __cxa_bad_cast();
  if (*(_BYTE *)(a2 + 16))
    return 31;
  else
    return 37;
}

uint64_t morphun::analysis::tokenattributes::KeywordAttributeImpl::clear(uint64_t this)
{
  *(_BYTE *)(this + 16) = 0;
  return this;
}

uint64_t morphun::analysis::tokenattributes::KeywordAttributeImpl::clone(morphun::analysis::tokenattributes::KeywordAttributeImpl *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E8671178;
  *(_QWORD *)(result + 8) = &unk_1E8671238;
  *(_BYTE *)(result + 16) = *((_BYTE *)this + 16);
  return result;
}

uint64_t morphun::analysis::tokenattributes::KeywordAttributeImpl::copyTo(morphun::analysis::tokenattributes::KeywordAttributeImpl *this, morphun::analysis::util::AttributeImpl *lpsrc)
{
  void *v3;
  morphun::exception::NullPointerException *exception;
  char *v6;

  if (!lpsrc)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  if (!v3)
  {
    v6 = (char *)__cxa_allocate_exception(0x38uLL);
    *(_OWORD *)(v6 + 8) = 0u;
    *(_OWORD *)(v6 + 24) = 0u;
    *(_OWORD *)(v6 + 40) = 0u;
    *(_QWORD *)v6 = &off_1E8673060;
  }
  return (*(uint64_t (**)(void *, _QWORD))(*(_QWORD *)v3 + 64))(v3, *((unsigned __int8 *)this + 16));
}

void sub_1CB51F164(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::tokenattributes::KeywordAttributeImpl::reflectWith(morphun::analysis::tokenattributes::KeywordAttributeImpl *this, morphun::analysis::util::AttributeReflector *a2)
{
  __int16 *v4;
  morphun::exception::NullPointerException *exception;
  void *__p[2];
  char v7;
  void *__dst[2];
  char v9;

  if (!a2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, (char *)L"keyword");
  if (*((_BYTE *)this + 16))
    v4 = &word_1CB73E1D2;
  else
    v4 = L"false";
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)v4);
  if (v7 < 0)
    operator delete(__p[0]);
  if (v9 < 0)
    operator delete(__dst[0]);
}

void sub_1CB51F240(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  void *v20;

  __cxa_free_exception(v20);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::tokenattributes::KeywordAttributeImpl::isKeyword(morphun::analysis::tokenattributes::KeywordAttributeImpl *this)
{
  return *((unsigned __int8 *)this + 16);
}

uint64_t morphun::analysis::tokenattributes::KeywordAttributeImpl::setKeyword(uint64_t this, char a2)
{
  *(_BYTE *)(this + 16) = a2;
  return this;
}

void `non-virtual thunk to'morphun::analysis::tokenattributes::KeywordAttributeImpl::~KeywordAttributeImpl(morphun::analysis::tokenattributes::KeywordAttributeImpl *this)
{
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t `non-virtual thunk to'morphun::analysis::tokenattributes::KeywordAttributeImpl::isKeyword(morphun::analysis::tokenattributes::KeywordAttributeImpl *this)
{
  return *((unsigned __int8 *)this + 8);
}

uint64_t `non-virtual thunk to'morphun::analysis::tokenattributes::KeywordAttributeImpl::setKeyword(uint64_t this, char a2)
{
  *(_BYTE *)(this + 8) = a2;
  return this;
}

uint64_t morphun::analysis::tokenattributes::KeywordAttributeImpl::create(morphun::analysis::tokenattributes::KeywordAttributeImpl *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E8671178;
  *(_QWORD *)(result + 8) = &unk_1E8671238;
  *(_BYTE *)(result + 16) = 0;
  return result;
}

uint64_t morphun::analysis::util::WordlistLoader::getWordSet(uint64_t a1, uint64_t a2, unsigned __int16 *a3, uint64_t a4)
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const void *v16;
  char *v17;
  char *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t **v22;
  unint64_t v23;
  const void *v26;
  unint64_t v27;
  __int16 *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  unint64_t v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;

  v8 = operator new();
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)(v8 + 8) = 0;
  *(_QWORD *)v8 = v8 + 8;
  v34 = 0;
  v35 = 0;
  v36 = "\n";
  v37 = 1;
  v38 = a1;
  v39 = a2;
  v40 = a2;
  v41 = 0;
  if ((int)a2 >= 1)
    morphun::util::DelimitedStringIterator::getNext((UChar *)&v34);
  while (1)
  {
    v9 = v35;
    if (v41 >= v40 && v35 == 0)
      break;
    v11 = v34;
    v12 = std::u16string_view::find[abi:ne180100](v34, v35, a3, a4, 0);
    if (v12 == -1)
      v13 = v9;
    else
      v13 = v12;
    v14 = morphun::util::StringViewUtils::trim(v11, v13);
    v26 = 0;
    v27 = 0;
    v28 = &word_1CB73EE14;
    v29 = 1;
    v30 = v14;
    v31 = v15;
    v32 = v15;
    v33 = 0;
    if ((int)v15 >= 1)
      morphun::util::DelimitedStringIterator::getNext((UChar *)&v26);
    while (1)
    {
      v23 = v27;
      if (v33 >= v32 && v27 == 0)
        break;
      if (v27)
      {
        v16 = v26;
        v17 = (char *)operator new(0x38uLL);
        v18 = v17;
        if (v23 >= 0x7FFFFFFFFFFFFFF8)
          std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
        if (v23 >= 0xB)
        {
          v20 = (v23 & 0xFFFFFFFFFFFFFFFCLL) + 4;
          if ((v23 | 3) != 0xB)
            v20 = v23 | 3;
          v19 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v20 + 1);
          *((_QWORD *)v18 + 5) = v23;
          *((_QWORD *)v18 + 6) = v21 | 0x8000000000000000;
          *((_QWORD *)v18 + 4) = v19;
        }
        else
        {
          v17[55] = v23;
          v19 = v17 + 32;
        }
        memmove(v19, v16, 2 * v23);
        *((_WORD *)v19 + v23) = 0;
        v22 = (uint64_t **)std::__tree<std::basic_string<char16_t>>::__find_equal<std::basic_string<char16_t>>(v8, &v42, (unsigned __int16 *)v18 + 16);
        if (*v22)
          std::__tree_node_destructor<std::allocator<std::__tree_node<std::basic_string<char16_t>,void *>>>::operator()[abi:ne180100](1, (void **)v18);
        else
          std::__tree<std::u16string_view>::__insert_node_at((uint64_t **)v8, v42, v22, (uint64_t *)v18);
      }
      morphun::util::DelimitedStringIterator::operator++((morphun::util::DelimitedStringIterator *)&v26);
    }
    morphun::util::DelimitedStringIterator::operator++((morphun::util::DelimitedStringIterator *)&v34);
  }
  return v8;
}

void sub_1CB51F4FC(_Unwind_Exception *a1)
{
  void **v1;

  std::__tree_node_destructor<std::allocator<std::__tree_node<std::basic_string<char16_t>,void *>>>::operator()[abi:ne180100](0, v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::transliteration::TransliteratorFactory::createTransliterator(morphun::transliteration::TransliteratorFactory *this, const morphun::util::ULocale *a2, const morphun::util::ULocale *a3)
{
  unsigned __int8 v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t **v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  const void **v15;
  unsigned __int8 **v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  unsigned __int8 *v21;
  unsigned __int8 *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  const void **v29;
  unsigned __int8 *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  const void **v36;
  unsigned __int8 *v37;
  morphun::util::LocaleUtils *Code;
  uint64_t v40;
  uint64_t v41;
  char **v42;
  const std::basic_string<char16_t>::value_type *v43;
  std::basic_string<char16_t>::size_type v44;
  const std::basic_string<char16_t>::value_type *v45;
  std::basic_string<char16_t>::size_type v46;
  int v47;
  const char *v48;
  uint64_t v49;
  int v50;
  void *v51;
  std::basic_string<char16_t> *v52;
  std::basic_string<char16_t>::size_type v53;
  const std::basic_string<char16_t>::value_type *p_p;
  std::basic_string<char16_t>::size_type v55;
  morphun::util::LocaleUtils *v56;
  morphun::lang::StringFilterUtil *v57;
  const morphun::util::ULocale *v58;
  morphun::lang::StringFilterUtil *ExemplarCharacters;
  uint64_t *v60;
  uint64_t **v61;
  uint64_t **v62;
  const void **v63;
  char *v64;
  uint64_t *v65;
  std::string *v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t i;
  const std::basic_string<char16_t>::value_type *v73;
  std::basic_string<char16_t>::size_type v74;
  const std::basic_string<char16_t>::value_type *v75;
  std::basic_string<char16_t>::size_type v76;
  int v77;
  const char *v78;
  uint64_t v79;
  int v80;
  void *v81;
  std::basic_string<char16_t> *v82;
  std::basic_string<char16_t>::size_type v83;
  const std::basic_string<char16_t>::value_type *v84;
  std::basic_string<char16_t>::size_type v85;
  _QWORD *v86;
  std::basic_string<char16_t> *v87;
  int v88;
  std::string *v89;
  __int128 v90;
  int v91;
  const std::string::value_type *v92;
  std::string::size_type v93;
  std::string *v94;
  __int128 v95;
  std::string *v96;
  __int128 v97;
  std::basic_string<char16_t> *v98;
  std::basic_string<char16_t> *v99;
  int32_t v100;
  std::basic_string<char16_t>::size_type v101;
  std::basic_string<char16_t> *v102;
  morphun::util::LocaleUtils *v103;
  const morphun::util::ULocale *v104;
  const morphun::util::ULocale *v105;
  morphun::lang::StringFilterUtil *v106;
  uint64_t v107;
  morphun::exception::NullPointerException *exception;
  _QWORD *v109;
  _QWORD *v110;
  __n128 v111;
  std::basic_string<char16_t> *v112;
  std::basic_string<char16_t>::size_type size;
  std::mutex *v114;
  std::string v115;
  std::string v116;
  uint64_t *v117;
  char *v118[2];
  int v119;
  void *__p;
  std::basic_string<char16_t>::size_type v121;
  unsigned __int8 v122;
  std::basic_string<char16_t> v123;
  void *v124;
  std::basic_string<char16_t>::size_type v125;
  unsigned __int8 v126;
  void *v127;
  std::basic_string<char16_t>::size_type v128;
  unsigned __int8 v129;
  std::basic_string<char16_t> v130;
  std::basic_string<char16_t> v131;
  std::basic_string<char16_t> v132;
  std::basic_string<char16_t> v133;
  uint64_t v134;
  stat __dst;
  uint64_t v136;

  v136 = *MEMORY[0x1E0C80C00];
  if ((v5 & 1) == 0
  {
    v107 = operator new();
    *(_QWORD *)v107 = 850045863;
    *(_OWORD *)(v107 + 8) = 0u;
    *(_OWORD *)(v107 + 24) = 0u;
    *(_OWORD *)(v107 + 40) = 0u;
    *(_QWORD *)(v107 + 56) = 0;
    morphun::transliteration::CLASS_MUTEX(void)::classMutex = v107;
  }
  if (!morphun::transliteration::CLASS_MUTEX(void)::classMutex)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  v114 = (std::mutex *)morphun::transliteration::CLASS_MUTEX(void)::classMutex;
  std::mutex::lock((std::mutex *)morphun::transliteration::CLASS_MUTEX(void)::classMutex);
  if (*((char *)this + 127) < 0)
    std::string::__init_copy_ctor_external(&v115, *((const std::string::value_type **)this + 13), *((_QWORD *)this + 14));
  else
    v115 = *(std::string *)((char *)this + 104);
  if (*((char *)a2 + 127) < 0)
    std::string::__init_copy_ctor_external(&v116, *((const std::string::value_type **)a2 + 13), *((_QWORD *)a2 + 14));
  else
    v116 = *(std::string *)((char *)a2 + 104);
  if ((v6 & 1) == 0
  {
    v109 = (_QWORD *)operator new();
    v109[2] = 0;
    v109[1] = 0;
    *v109 = v109 + 1;
    morphun::transliteration::TRANSLITERATOR_CACHE(void)::TRANSLITERATOR_CACHE_ = (uint64_t)v109;
  }
  v7 = morphun::transliteration::TRANSLITERATOR_CACHE(void)::TRANSLITERATOR_CACHE_;
  npc<std::map<std::pair<std::string,std::string>,morphun::transliteration::Transliterator *>>(morphun::transliteration::TRANSLITERATOR_CACHE(void)::TRANSLITERATOR_CACHE_);
  v8 = (uint64_t **)(v7 + 8);
  v9 = *(_QWORD *)(v7 + 8);
  if (!v9)
    goto LABEL_17;
  v10 = v7 + 8;
  do
  {
    v11 = std::less<std::pair<std::string,std::string>>::operator()[abi:ne180100]((const void **)(v9 + 32), (const void **)&v115.__r_.__value_.__l.__data_);
    v12 = (uint64_t *)(v9 + 8);
    if (!v11)
    {
      v12 = (uint64_t *)v9;
      v10 = v9;
    }
    v9 = *v12;
  }
  while (*v12);
  if ((uint64_t **)v10 == v8
    || std::less<std::pair<std::string,std::string>>::operator()[abi:ne180100]((const void **)&v115.__r_.__value_.__l.__data_, (const void **)(v10 + 32)))
  {
LABEL_17:
    v10 = v7 + 8;
  }
  v13 = npc<std::map<std::pair<std::string,std::string>,morphun::transliteration::Transliterator *>>(v7);
  if (v8 != (uint64_t **)v10)
  {
    v14 = *(_QWORD *)(v10 + 80);
    goto LABEL_142;
  }
  v15 = (const void **)((char *)this + 8);
  v16 = (unsigned __int8 **)((char *)a2 + 8);
  v17 = *((unsigned __int8 *)this + 31);
  if ((v17 & 0x80u) == 0)
    v18 = *((unsigned __int8 *)this + 31);
  else
    v18 = *((_QWORD *)this + 2);
  v19 = *((unsigned __int8 *)a2 + 31);
  v20 = (char)v19;
  if ((v19 & 0x80u) != 0)
    v19 = *((_QWORD *)a2 + 2);
  if (v18 == v19)
  {
    if (v20 >= 0)
      v21 = (unsigned __int8 *)a2 + 8;
    else
      v21 = *v16;
    if ((v17 & 0x80) != 0)
    {
      v13 = memcmp(*v15, v21, *((_QWORD *)this + 2));
      if ((_DWORD)v13)
        goto LABEL_36;
    }
    else if (*((_BYTE *)this + 31))
    {
      v22 = (unsigned __int8 *)this + 8;
      while (*v22 == *v21)
      {
        ++v22;
        ++v21;
        if (!--v17)
          goto LABEL_34;
      }
      goto LABEL_36;
    }
LABEL_34:
    v23 = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"Can't transliterate from locale to itself.");
    morphun::exception::Throwable::Throwable((uint64_t)v23, (__int128 *)&__dst.st_dev);
    *v23 = &off_1E8673120;
  }
LABEL_36:
  v24 = morphun::util::LocaleUtils::ENGLISH((morphun::util::LocaleUtils *)v13);
  v25 = *(unsigned __int8 *)(v24 + 31);
  if ((v25 & 0x80u) == 0)
    v26 = *(unsigned __int8 *)(v24 + 31);
  else
    v26 = *(_QWORD *)(v24 + 16);
  v27 = *((unsigned __int8 *)a2 + 31);
  v28 = (char)v27;
  if ((v27 & 0x80u) != 0)
    v27 = *((_QWORD *)a2 + 2);
  if (v26 != v27)
    goto LABEL_51;
  v29 = (const void **)(v24 + 8);
  if (v28 >= 0)
    v30 = (unsigned __int8 *)a2 + 8;
  else
    v30 = *v16;
  if ((v25 & 0x80) != 0)
  {
    v24 = memcmp(*v29, v30, *(_QWORD *)(v24 + 16));
    if ((_DWORD)v24)
      goto LABEL_51;
  }
  else if (*(_BYTE *)(v24 + 31))
  {
    while (*(unsigned __int8 *)v29 == *v30)
    {
      v29 = (const void **)((char *)v29 + 1);
      ++v30;
      if (!--v25)
        goto LABEL_65;
    }
LABEL_51:
    v31 = morphun::util::LocaleUtils::ROOT((morphun::util::LocaleUtils *)v24);
    v32 = *(unsigned __int8 *)(v31 + 31);
    if ((v32 & 0x80u) == 0)
      v33 = *(unsigned __int8 *)(v31 + 31);
    else
      v33 = *(_QWORD *)(v31 + 16);
    v34 = *((unsigned __int8 *)this + 31);
    v35 = (char)v34;
    if ((v34 & 0x80u) != 0)
      v34 = *((_QWORD *)this + 2);
    if (v33 != v34)
      goto LABEL_264;
    v36 = (const void **)(v31 + 8);
    if (v35 >= 0)
      v37 = (unsigned __int8 *)this + 8;
    else
      v37 = (unsigned __int8 *)*v15;
    if ((v32 & 0x80) != 0)
    {
      v31 = memcmp(*v36, v37, *(_QWORD *)(v31 + 16));
      if ((_DWORD)v31)
        goto LABEL_264;
    }
    else if (*(_BYTE *)(v31 + 31))
    {
      while (*(unsigned __int8 *)v36 == *v37)
      {
        v36 = (const void **)((char *)v36 + 1);
        ++v37;
        if (!--v32)
          goto LABEL_73;
      }
LABEL_264:
      v110 = __cxa_allocate_exception(0x38uLL);
      (**(void (***)(std::basic_string<char16_t> *__return_ptr, morphun::transliteration::TransliteratorFactory *))this)(&v131, this);
      v111 = std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v132, &v131, (std::basic_string<char16_t>::value_type *)"-");
      (**(void (***)(std::basic_string<char16_t> *__return_ptr, const morphun::util::ULocale *, __n128))a2)(&v130, a2, v111);
      if ((v130.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v112 = &v130;
      else
        v112 = (std::basic_string<char16_t> *)v130.__r_.__value_.__r.__words[0];
      if ((v130.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        size = HIBYTE(v130.__r_.__value_.__r.__words[2]);
      else
        size = v130.__r_.__value_.__l.__size_;
      std::basic_string<char16_t>::append(&v132, (const std::basic_string<char16_t>::value_type *)v112, size);
      v133 = v132;
      memset(&v132, 0, sizeof(v132));
      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&__dst, &v133, L" is not a supported language combination for transliteration.");
      morphun::exception::Throwable::Throwable((uint64_t)v110, (__int128 *)&__dst.st_dev);
      *v110 = &off_1E8673120;
    }
LABEL_73:
    v41 = morphun::util::LocaleUtils::RUSSIAN((morphun::util::LocaleUtils *)v31);
    if (*(char *)(v41 + 31) < 0)
    {
      std::string::__init_copy_ctor_external((std::string *)&__dst, *(const std::string::value_type **)(v41 + 8), *(_QWORD *)(v41 + 16));
    }
    else
    {
      *(_OWORD *)&__dst.st_dev = *(_OWORD *)(v41 + 8);
      *(_QWORD *)&__dst.st_uid = *(_QWORD *)(v41 + 24);
    }
    std::set<std::string>::set[abi:ne180100](&v117, (__int128 *)&__dst.st_dev, 1);
    if (SHIBYTE(__dst.st_gid) < 0)
      operator delete(*(void **)&__dst.st_dev);
    v42 = (char **)std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::find<std::string>((uint64_t)&v117, (_QWORD *)a2 + 1);
    if (v118 == v42)
    {
      std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v42);
      goto LABEL_264;
    }
    v14 = operator new();
    *(_QWORD *)v14 = &off_1E8656F88;
    morphun::util::ULocale::ULocale((morphun::util::ULocale *)(v14 + 8), a2);
    *(_QWORD *)v14 = &off_1E866A538;
    morphun::util::ResourceLocator::getRootForLocale(a2, &v130);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v127, (char *)L"/transliteration/");
    if ((v129 & 0x80u) == 0)
      v43 = (const std::basic_string<char16_t>::value_type *)&v127;
    else
      v43 = (const std::basic_string<char16_t>::value_type *)v127;
    if ((v129 & 0x80u) == 0)
      v44 = v129;
    else
      v44 = v128;
    std::basic_string<char16_t>::append(&v130, v43, v44);
    v131 = v130;
    memset(&v130, 0, sizeof(v130));
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v124, "t");
    if ((v126 & 0x80u) == 0)
      v45 = (const std::basic_string<char16_t>::value_type *)&v124;
    else
      v45 = (const std::basic_string<char16_t>::value_type *)v124;
    if ((v126 & 0x80u) == 0)
      v46 = v126;
    else
      v46 = v125;
    std::basic_string<char16_t>::append(&v131, v45, v46);
    v132 = v131;
    memset(&v131, 0, sizeof(v131));
    v47 = *((char *)a2 + 31);
    if (v47 >= 0)
      v48 = (char *)a2 + 8;
    else
      v48 = (const char *)*((_QWORD *)a2 + 1);
    if (v47 >= 0)
      LODWORD(v49) = *((unsigned __int8 *)a2 + 31);
    else
      v49 = *((_QWORD *)a2 + 2);
    morphun::util::StringViewUtils::to_u16string(v48, v49, &v123);
    v50 = SHIBYTE(v123.__r_.__value_.__r.__words[2]);
    v51 = (void *)v123.__r_.__value_.__r.__words[0];
    if ((v123.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v52 = &v123;
    else
      v52 = (std::basic_string<char16_t> *)v123.__r_.__value_.__r.__words[0];
    if ((v123.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v53 = HIBYTE(v123.__r_.__value_.__r.__words[2]);
    else
      v53 = v123.__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::append(&v132, (const std::basic_string<char16_t>::value_type *)v52, v53);
    v133 = v132;
    memset(&v132, 0, sizeof(v132));
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L".bist");
    if ((v122 & 0x80u) == 0)
      p_p = (const std::basic_string<char16_t>::value_type *)&__p;
    else
      p_p = (const std::basic_string<char16_t>::value_type *)__p;
    if ((v122 & 0x80u) == 0)
      v55 = v122;
    else
      v55 = v121;
    std::basic_string<char16_t>::append(&v133, p_p, v55);
    *(_OWORD *)&__dst.st_dev = *(_OWORD *)&v133.__r_.__value_.__l.__data_;
    *(_QWORD *)&__dst.st_uid = *((_QWORD *)&v133.__r_.__value_.__l + 2);
    memset(&v133, 0, sizeof(v133));
    morphun::transliteration::BidirectionalStringMap::BidirectionalStringMap(v14 + 136, (const void **)&__dst);
    if (SHIBYTE(__dst.st_gid) < 0)
      operator delete(*(void **)&__dst.st_dev);
    if ((char)v122 < 0)
      operator delete(__p);
    if (SHIBYTE(v133.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v133.__r_.__value_.__l.__data_);
      if ((v50 & 0x80000000) == 0)
        goto LABEL_115;
    }
    else if ((v50 & 0x80000000) == 0)
    {
LABEL_115:
      if (SHIBYTE(v132.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v132.__r_.__value_.__l.__data_);
      if ((char)v126 < 0)
        operator delete(v124);
      if (SHIBYTE(v131.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v131.__r_.__value_.__l.__data_);
      if ((char)v129 < 0)
        operator delete(v127);
      if (SHIBYTE(v130.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v130.__r_.__value_.__l.__data_);
      *(_BYTE *)(v14 + 304) = 1;
      *(_QWORD *)(v14 + 296) = uset_openEmpty();
      morphun::transliteration::ICUScriptTransliterator::ICUScriptTransliterator((morphun::transliteration::ICUScriptTransliterator *)(v14 + 312), this, a2);
      v56 = (morphun::util::LocaleUtils *)MEMORY[0x1D179D910](*(_QWORD *)(v14 + 296), *(_QWORD *)(v14 + 200));
      v57 = (morphun::lang::StringFilterUtil *)morphun::util::LocaleUtils::ENGLISH(v56);
      ExemplarCharacters = morphun::lang::StringFilterUtil::getExemplarCharacters(v57, v58);
      MEMORY[0x1D179D910](*(_QWORD *)(v14 + 296), *(_QWORD *)ExemplarCharacters);
      MEMORY[0x1D179D970](*(_QWORD *)(v14 + 296));
      goto LABEL_126;
    }
    operator delete(v51);
    goto LABEL_115;
  }
LABEL_65:
  v119 = 0;
  v134 = -1;
  Code = (morphun::util::LocaleUtils *)uscript_getCode();
  if ((_DWORD)Code)
  {
    if ((_DWORD)Code != 1 || (_DWORD)v134 != 25)
    {
      v40 = morphun::util::LocaleUtils::JAPANESE(Code);
      if (*(char *)(v40 + 31) < 0)
      {
        std::string::__init_copy_ctor_external((std::string *)&__dst, *(const std::string::value_type **)(v40 + 8), *(_QWORD *)(v40 + 16));
      }
      else
      {
        *(_OWORD *)&__dst.st_dev = *(_OWORD *)(v40 + 8);
        *(_QWORD *)&__dst.st_uid = *(_QWORD *)(v40 + 24);
      }
      v69 = morphun::util::LocaleUtils::HEBREW((morphun::util::LocaleUtils *)v40);
      if (*(char *)(v69 + 31) < 0)
      {
        std::string::__init_copy_ctor_external((std::string *)&__dst.st_rdev, *(const std::string::value_type **)(v69 + 8), *(_QWORD *)(v69 + 16));
      }
      else
      {
        *(_OWORD *)&__dst.st_rdev = *(_OWORD *)(v69 + 8);
        __dst.st_atimespec.tv_nsec = *(_QWORD *)(v69 + 24);
      }
      v70 = morphun::util::LocaleUtils::RUSSIAN((morphun::util::LocaleUtils *)v69);
      if (*(char *)(v70 + 31) < 0)
      {
        std::string::__init_copy_ctor_external((std::string *)&__dst.st_mtimespec, *(const std::string::value_type **)(v70 + 8), *(_QWORD *)(v70 + 16));
      }
      else
      {
        __dst.st_mtimespec = *(timespec *)(v70 + 8);
        __dst.st_ctimespec.tv_sec = *(_QWORD *)(v70 + 24);
      }
      v71 = morphun::util::LocaleUtils::ARABIC((morphun::util::LocaleUtils *)v70);
      if (*(char *)(v71 + 31) < 0)
      {
        std::string::__init_copy_ctor_external((std::string *)&__dst.st_ctimespec.tv_nsec, *(const std::string::value_type **)(v71 + 8), *(_QWORD *)(v71 + 16));
      }
      else
      {
        *(_OWORD *)&__dst.st_ctimespec.tv_nsec = *(_OWORD *)(v71 + 8);
        __dst.st_birthtimespec.tv_nsec = *(_QWORD *)(v71 + 24);
      }
      std::set<std::string>::set[abi:ne180100](&v117, (__int128 *)&__dst.st_dev, 4);
      for (i = 0; i != -96; i -= 24)
      {
        if (*((char *)&__dst.st_birthtimespec.tv_nsec + i + 7) < 0)
          operator delete(*(void **)((char *)&__dst.st_ctimespec.tv_nsec + i));
      }
      if (v118 == std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::find<std::string>((uint64_t)&v117, (_QWORD *)this + 1))
      {
        v14 = operator new();
        morphun::transliteration::ICUScriptTransliterator::ICUScriptTransliterator((morphun::transliteration::ICUScriptTransliterator *)v14, this, a2);
      }
      else
      {
        v14 = operator new();
        *(_QWORD *)v14 = &off_1E8656F40;
        morphun::util::ULocale::ULocale((morphun::util::ULocale *)(v14 + 8), a2);
        *(_QWORD *)v14 = &off_1E866A4F0;
        morphun::util::ResourceLocator::getRootForLocale(this, &v130);
        std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v127, "/");
        if ((v129 & 0x80u) == 0)
          v73 = (const std::basic_string<char16_t>::value_type *)&v127;
        else
          v73 = (const std::basic_string<char16_t>::value_type *)v127;
        if ((v129 & 0x80u) == 0)
          v74 = v129;
        else
          v74 = v128;
        std::basic_string<char16_t>::append(&v130, v73, v74);
        v131 = v130;
        memset(&v130, 0, sizeof(v130));
        std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v124, "t");
        if ((v126 & 0x80u) == 0)
          v75 = (const std::basic_string<char16_t>::value_type *)&v124;
        else
          v75 = (const std::basic_string<char16_t>::value_type *)v124;
        if ((v126 & 0x80u) == 0)
          v76 = v126;
        else
          v76 = v125;
        std::basic_string<char16_t>::append(&v131, v75, v76);
        v132 = v131;
        memset(&v131, 0, sizeof(v131));
        v77 = *((char *)this + 31);
        if (v77 >= 0)
          v78 = (char *)this + 8;
        else
          v78 = (const char *)*((_QWORD *)this + 1);
        if (v77 >= 0)
          LODWORD(v79) = *((unsigned __int8 *)this + 31);
        else
          v79 = *((_QWORD *)this + 2);
        morphun::util::StringViewUtils::to_u16string(v78, v79, &v123);
        v80 = SHIBYTE(v123.__r_.__value_.__r.__words[2]);
        v81 = (void *)v123.__r_.__value_.__r.__words[0];
        if ((v123.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v82 = &v123;
        else
          v82 = (std::basic_string<char16_t> *)v123.__r_.__value_.__r.__words[0];
        if ((v123.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v83 = HIBYTE(v123.__r_.__value_.__r.__words[2]);
        else
          v83 = v123.__r_.__value_.__l.__size_;
        std::basic_string<char16_t>::append(&v132, (const std::basic_string<char16_t>::value_type *)v82, v83);
        v133 = v132;
        memset(&v132, 0, sizeof(v132));
        std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L".bist");
        if ((v122 & 0x80u) == 0)
          v84 = (const std::basic_string<char16_t>::value_type *)&__p;
        else
          v84 = (const std::basic_string<char16_t>::value_type *)__p;
        if ((v122 & 0x80u) == 0)
          v85 = v122;
        else
          v85 = v121;
        std::basic_string<char16_t>::append(&v133, v84, v85);
        *(_OWORD *)&__dst.st_dev = *(_OWORD *)&v133.__r_.__value_.__l.__data_;
        *(_QWORD *)&__dst.st_uid = *((_QWORD *)&v133.__r_.__value_.__l + 2);
        memset(&v133, 0, sizeof(v133));
        morphun::transliteration::BidirectionalStringMap::BidirectionalStringMap(v14 + 136, (const void **)&__dst);
        if (SHIBYTE(__dst.st_gid) < 0)
          operator delete(*(void **)&__dst.st_dev);
        if ((char)v122 < 0)
          operator delete(__p);
        if (SHIBYTE(v133.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v133.__r_.__value_.__l.__data_);
        if (v80 < 0)
          operator delete(v81);
        if (SHIBYTE(v132.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v132.__r_.__value_.__l.__data_);
        if ((char)v126 < 0)
          operator delete(v124);
        if (SHIBYTE(v131.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v131.__r_.__value_.__l.__data_);
        if ((char)v129 < 0)
          operator delete(v127);
        if (SHIBYTE(v130.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v130.__r_.__value_.__l.__data_);
        *(_BYTE *)(v14 + 304) = 1;
        v86 = (_QWORD *)(v14 + 296);
        *(_QWORD *)(v14 + 296) = uset_openEmpty();
        *(_QWORD *)(v14 + 312) = &off_1E8656EB0;
        morphun::util::ULocale::ULocale((morphun::util::ULocale *)(v14 + 320), a2);
        *(_QWORD *)(v14 + 312) = &off_1E866A438;
        *(_QWORD *)(v14 + 448) = 0;
        QuasarC_setLogLevel();
        morphun::util::ResourceLocator::getRootForLocale(this, &v130);
        if ((v130.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v87 = &v130;
        else
          v87 = (std::basic_string<char16_t> *)v130.__r_.__value_.__r.__words[0];
        if ((v130.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v88 = HIBYTE(v130.__r_.__value_.__r.__words[2]);
        else
          v88 = v130.__r_.__value_.__r.__words[1];
        morphun::util::StringViewUtils::to_string((uint64_t)v87, v88, (std::string *)&v131);
        v89 = std::string::append((std::string *)&v131, "/transliteration/");
        v90 = *(_OWORD *)&v89->__r_.__value_.__l.__data_;
        v132.__r_.__value_.__r.__words[2] = v89->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v132.__r_.__value_.__l.__data_ = v90;
        v89->__r_.__value_.__l.__size_ = 0;
        v89->__r_.__value_.__r.__words[2] = 0;
        v89->__r_.__value_.__r.__words[0] = 0;
        v91 = *((char *)this + 31);
        if (v91 >= 0)
          v92 = (char *)this + 8;
        else
          v92 = (const std::string::value_type *)*((_QWORD *)this + 1);
        if (v91 >= 0)
          v93 = *((unsigned __int8 *)this + 31);
        else
          v93 = *((_QWORD *)this + 2);
        v94 = std::string::append((std::string *)&v132, v92, v93);
        v95 = *(_OWORD *)&v94->__r_.__value_.__l.__data_;
        *(_QWORD *)&__dst.st_uid = *((_QWORD *)&v94->__r_.__value_.__l + 2);
        *(_OWORD *)&__dst.st_dev = v95;
        v94->__r_.__value_.__l.__size_ = 0;
        v94->__r_.__value_.__r.__words[2] = 0;
        v94->__r_.__value_.__r.__words[0] = 0;
        v96 = std::string::append((std::string *)&__dst, "/config.json");
        v97 = *(_OWORD *)&v96->__r_.__value_.__l.__data_;
        v133.__r_.__value_.__r.__words[2] = v96->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v133.__r_.__value_.__l.__data_ = v97;
        v96->__r_.__value_.__l.__size_ = 0;
        v96->__r_.__value_.__r.__words[2] = 0;
        v96->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(__dst.st_gid) < 0)
          operator delete(*(void **)&__dst.st_dev);
        if (SHIBYTE(v132.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v132.__r_.__value_.__l.__data_);
        if (SHIBYTE(v131.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v131.__r_.__value_.__l.__data_);
        if (SHIBYTE(v130.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v130.__r_.__value_.__l.__data_);
        QuasarCSystemConfig_new();
        if ((v133.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v98 = &v133;
        else
          v98 = (std::basic_string<char16_t> *)v133.__r_.__value_.__r.__words[0];
        if (stat((const char *)v98, &__dst) || QuasarCSystemConfig_readJsonFile())
        {
          if ((v133.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v99 = &v133;
          else
            v99 = (std::basic_string<char16_t> *)v133.__r_.__value_.__r.__words[0];
          if ((v133.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v100 = HIBYTE(v133.__r_.__value_.__r.__words[2]);
          else
            v100 = v133.__r_.__value_.__r.__words[1];
          morphun::util::StringViewUtils::to_u16string((const char *)v99, v100, &v131);
          std::basic_string<char16_t>::insert(&v131, (std::basic_string<char16_t>::size_type)L"Failed to read ", (const std::basic_string<char16_t>::value_type *)0xF, v101);
          v132 = v131;
          memset(&v131, 0, sizeof(v131));
          if (morphun::util::gLogLevel <= 1)
          {
            if ((v132.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              v102 = &v132;
            else
              v102 = (std::basic_string<char16_t> *)v132.__r_.__value_.__r.__words[0];
            morphun::util::logToTopOfStackLogger((morphun::util *)1, 0, (uint64_t)v102);
          }
          if (SHIBYTE(v132.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v132.__r_.__value_.__l.__data_);
          if (SHIBYTE(v131.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v131.__r_.__value_.__l.__data_);
        }
        else
        {
          *(_QWORD *)(v14 + 448) = QuasarCPDecTranslator_new();
        }
        v103 = (morphun::util::LocaleUtils *)QuasarCSystemConfig_delete();
        if (SHIBYTE(v133.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v133.__r_.__value_.__l.__data_);
        v104 = (const morphun::util::ULocale *)morphun::util::LocaleUtils::ENGLISH(v103);
        morphun::transliteration::ICUScriptTransliterator::ICUScriptTransliterator((morphun::transliteration::ICUScriptTransliterator *)(v14 + 456), this, v104);
        *(_BYTE *)(v14 + 640) = (*(_BYTE *)(v14 + 177) & 1) == 0;
        MEMORY[0x1D179D910](*(_QWORD *)(v14 + 296), *(_QWORD *)(v14 + 184));
        v106 = morphun::lang::StringFilterUtil::getExemplarCharacters(this, v105);
        MEMORY[0x1D179D910](*v86, *(_QWORD *)v106);
        MEMORY[0x1D179D970](*v86);
      }
LABEL_126:
      std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(v118[0]);
      goto LABEL_127;
    }
  }
  v14 = 0;
LABEL_127:
  npc<std::map<std::pair<std::string,std::string>,morphun::transliteration::Transliterator *>>(v7);
  v60 = *v8;
  v61 = (uint64_t **)(v7 + 8);
  v62 = (uint64_t **)(v7 + 8);
  if (*v8)
  {
    while (1)
    {
      while (1)
      {
        v61 = (uint64_t **)v60;
        v63 = (const void **)(v60 + 4);
        if (!std::less<std::pair<std::string,std::string>>::operator()[abi:ne180100]((const void **)&v115.__r_.__value_.__l.__data_, (const void **)v60 + 4))break;
        v60 = *v61;
        v62 = v61;
        if (!*v61)
          goto LABEL_133;
      }
      if (!std::less<std::pair<std::string,std::string>>::operator()[abi:ne180100](v63, (const void **)&v115.__r_.__value_.__l.__data_))break;
      v62 = v61 + 1;
      v60 = v61[1];
      if (!v60)
        goto LABEL_133;
    }
  }
  else
  {
LABEL_133:
    v64 = (char *)operator new(0x58uLL);
    v65 = (uint64_t *)v64;
    *(_QWORD *)&__dst.st_dev = v64;
    __dst.st_ino = v7 + 8;
    LOBYTE(__dst.st_uid) = 0;
    if (SHIBYTE(v115.__r_.__value_.__r.__words[2]) < 0)
      std::string::__init_copy_ctor_external((std::string *)(v64 + 32), v115.__r_.__value_.__l.__data_, v115.__r_.__value_.__l.__size_);
    else
      *(std::string *)(v64 + 32) = v115;
    v66 = (std::string *)(v65 + 7);
    if (SHIBYTE(v116.__r_.__value_.__r.__words[2]) < 0)
    {
      std::string::__init_copy_ctor_external(v66, v116.__r_.__value_.__l.__data_, v116.__r_.__value_.__l.__size_);
    }
    else
    {
      *(_OWORD *)&v66->__r_.__value_.__l.__data_ = *(_OWORD *)&v116.__r_.__value_.__l.__data_;
      v65[9] = v116.__r_.__value_.__r.__words[2];
    }
    v65[10] = v14;
    LOBYTE(__dst.st_uid) = 1;
    *v65 = 0;
    v65[1] = 0;
    v65[2] = (uint64_t)v61;
    *v62 = v65;
    v67 = **(_QWORD **)v7;
    if (v67)
    {
      *(_QWORD *)v7 = v67;
      v65 = *v62;
    }
    std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*(uint64_t **)(v7 + 8), v65);
    ++*(_QWORD *)(v7 + 16);
    *(_QWORD *)&__dst.st_dev = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::string>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100]((uint64_t *)&__dst.st_dev);
  }
LABEL_142:
  if (SHIBYTE(v116.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v116.__r_.__value_.__l.__data_);
  if (SHIBYTE(v115.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v115.__r_.__value_.__l.__data_);
  std::mutex::unlock(v114);
  return v14;
}

void sub_1CB5204F0(_Unwind_Exception *a1, uint64_t a2, morphun::util::ULocale *a3, uint64_t a4, std::mutex *a5, ...)
{
  va_list va;

  va_start(va, a5);
  std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::~pair((uint64_t)va);
  std::mutex::unlock(a5);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::pair<std::string,std::string>,morphun::transliteration::Transliterator *>>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB520AC4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t std::less<std::pair<std::string,std::string>>::operator()[abi:ne180100](const void **a1, const void **a2)
{
  int v4;
  int v5;
  size_t v6;
  const void *v7;
  size_t v8;
  const void *v9;
  size_t v10;
  int v11;
  BOOL v12;
  int v14;
  BOOL v15;
  const void **v16;
  const void **v17;
  const void **v18;
  int v19;
  const void **v20;
  const void **v21;
  const void **v22;
  int v23;
  size_t v24;
  const void **v25;
  size_t v26;
  const void **v27;
  size_t v28;
  int v29;

  v4 = *((char *)a2 + 23);
  v5 = *((char *)a1 + 23);
  if (v5 >= 0)
    v6 = *((unsigned __int8 *)a1 + 23);
  else
    v6 = (size_t)a1[1];
  if (v5 >= 0)
    v7 = a1;
  else
    v7 = *a1;
  if (v4 >= 0)
    v8 = *((unsigned __int8 *)a2 + 23);
  else
    v8 = (size_t)a2[1];
  if (v4 >= 0)
    v9 = a2;
  else
    v9 = *a2;
  if (v8 >= v6)
    v10 = v6;
  else
    v10 = v8;
  v11 = memcmp(v7, v9, v10);
  v12 = v6 < v8;
  if (v11)
    v12 = v11 < 0;
  if (v12)
    return 1;
  v14 = memcmp(v9, v7, v10);
  v15 = v8 < v6;
  if (v14)
    v15 = v14 < 0;
  if (v15)
    return 0;
  v18 = (const void **)a2[3];
  v17 = a2 + 3;
  v16 = v18;
  v19 = *((char *)v17 + 23);
  v22 = (const void **)a1[3];
  v21 = a1 + 3;
  v20 = v22;
  v23 = *((char *)v21 + 23);
  if (v23 >= 0)
    v24 = *((unsigned __int8 *)v21 + 23);
  else
    v24 = (size_t)v21[1];
  if (v23 >= 0)
    v25 = v21;
  else
    v25 = v20;
  if (v19 >= 0)
    v26 = *((unsigned __int8 *)v17 + 23);
  else
    v26 = (size_t)v17[1];
  if (v19 >= 0)
    v27 = v17;
  else
    v27 = v16;
  if (v26 >= v24)
    v28 = v24;
  else
    v28 = v26;
  v29 = memcmp(v25, v27, v28);
  if (v29)
    return v29 < 0;
  else
    return v24 < v26;
}

uint64_t **std::set<std::string>::set[abi:ne180100](uint64_t **a1, __int128 *a2, uint64_t a3)
{
  uint64_t *v4;
  __int128 *v5;
  __int128 *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  BOOL v11;
  uint64_t **v12;
  uint64_t **v13;
  uint64_t *v14;
  _QWORD *v15;
  uint64_t *v16;
  std::string *v17;
  __int128 v18;
  uint64_t *v19;

  a1[1] = 0;
  v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    v5 = a2;
    v6 = (__int128 *)((char *)a2 + 24 * a3);
    while (1)
    {
      v7 = a1[1];
      v8 = v4;
      if (*a1 != v4)
      {
        v9 = a1[1];
        v10 = v4;
        if (v7)
        {
          do
          {
            v8 = v9;
            v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            v8 = (uint64_t *)v10[2];
            v11 = *v8 == (_QWORD)v10;
            v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::string>::operator()[abi:ne180100](v8 + 4, v5))
          break;
      }
      v12 = (uint64_t **)v4;
      v13 = (uint64_t **)v4;
      if (!v7)
        goto LABEL_19;
      v13 = (uint64_t **)(v8 + 1);
      if (!v8[1])
      {
        v12 = (uint64_t **)v8;
LABEL_19:
        v16 = (uint64_t *)operator new(0x38uLL);
        v17 = (std::string *)(v16 + 4);
        if (*((char *)v5 + 23) < 0)
        {
          std::string::__init_copy_ctor_external(v17, *(const std::string::value_type **)v5, *((_QWORD *)v5 + 1));
        }
        else
        {
          v18 = *v5;
          v16[6] = *((_QWORD *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *v16 = 0;
        v16[1] = 0;
        v16[2] = (uint64_t)v12;
        *v13 = v16;
        v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 = (__int128 *)((char *)v5 + 24);
      if (v5 == v6)
        return a1;
    }
    v12 = (uint64_t **)v4;
    v13 = (uint64_t **)v4;
    if (v7)
    {
      v14 = v7;
      while (1)
      {
        while (1)
        {
          v12 = (uint64_t **)v14;
          v15 = v14 + 4;
          if (!std::less<std::string>::operator()[abi:ne180100](v5, v14 + 4))
            break;
          v14 = *v12;
          v13 = v12;
          if (!*v12)
            goto LABEL_19;
        }
        if (!std::less<std::string>::operator()[abi:ne180100](v15, v5))
          goto LABEL_25;
        v13 = v12 + 1;
        v14 = v12[1];
        if (!v14)
          goto LABEL_19;
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1CB520D94(_Unwind_Exception *a1)
{
  void *v1;
  char **v2;

  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

void morphun::util::ResourceLocator::getDirectoryFromEnvironment(morphun::util::ResourceLocator *this@<X0>, const char *a2@<X1>, std::basic_string<char16_t> *a3@<X8>)
{
  char *v6;
  const char *v7;
  int32_t v8;
  int32_t v9;
  std::basic_string<char16_t>::size_type size;
  char v11;
  std::basic_string<char16_t> *p_str;
  uint64_t v13;
  int v14;
  std::basic_string<char16_t>::size_type v15;
  std::basic_string<char16_t>::size_type v16;
  std::basic_string<char16_t> *v17;
  char v18;
  uint64_t v19;
  char v20;
  std::basic_string<char16_t> *v21;
  std::basic_string<char16_t>::size_type v22;
  uint64_t v23;
  void **v24;
  std::basic_string<char16_t>::size_type v25;
  uint64_t v26;
  char *v27;
  int v28;
  int v29;
  int v30;
  void *__p[2];
  unsigned __int8 v33;
  std::basic_string<char16_t> __str;
  Dl_info v35;
  _QWORD v36[3];

  v36[2] = *MEMORY[0x1E0C80C00];
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  v6 = getenv((const char *)this);
  if (v6)
  {
    v7 = v6;
    if (*v6)
    {
      v8 = strlen(v6);
      morphun::util::StringViewUtils::to_u16string(v7, v8, (std::basic_string<char16_t> *)&v35);
      *(_OWORD *)&a3->__r_.__value_.__l.__data_ = *(_OWORD *)&v35.dli_fname;
      a3->__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)v35.dli_sname;
    }
  }
  else
  {
    dladdr(a2, &v35);
    if (v35.dli_fname && *v35.dli_fname)
    {
      v9 = strlen(v35.dli_fname);
      morphun::util::StringViewUtils::to_u16string(v35.dli_fname, v9, &__str);
      size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      v11 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      p_str = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        size = __str.__r_.__value_.__l.__size_;
      else
        p_str = &__str;
      if (size)
      {
        v13 = size;
        while (v13 * 2)
        {
          v14 = (unsigned __int16)p_str->__r_.__value_.__s.__data_[--v13];
          if (v14 == 47)
          {
            if (v13 != -1)
            {
              v15 = (v13 * 2) >> 1;
              do
              {
                std::basic_string<char16_t>::resize(&__str, v15, 0);
                v16 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
                if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                  v16 = __str.__r_.__value_.__l.__size_;
                if (!v16)
                  break;
                v17 = (__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                    ? &__str
                    : (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
                --v15;
              }
              while (v17->__r_.__value_.__s.__data_[v16 - 1] == 47);
              v18 = 0;
              v19 = 0;
              v36[0] = L"/usr/local/lib";
              v36[1] = "/";
              while (1)
              {
                v20 = v18;
                std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)v36[v19]);
                v22 = __str.__r_.__value_.__l.__size_;
                v21 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
                if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                {
                  v21 = &__str;
                  v22 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
                }
                v23 = v33;
                if ((v33 & 0x80u) == 0)
                  v24 = __p;
                else
                  v24 = (void **)__p[0];
                if ((v33 & 0x80u) != 0)
                  v23 = (uint64_t)__p[1];
                v25 = v22 - v23;
                if (v22 >= v23)
                {
                  if (!v23)
                    break;
                  v26 = -v23;
                  v27 = (char *)v21 + 2 * v22;
                  do
                  {
                    v28 = *(unsigned __int16 *)&v27[2 * v26];
                    v30 = *(unsigned __int16 *)v24;
                    v24 = (void **)((char *)v24 + 2);
                    v29 = v30;
                  }
                  while (v30 == v28 && v26++ != -1);
                  if (v29 == v28)
                    break;
                }
                if ((char)v33 < 0)
                  operator delete(__p[0]);
                v18 = 1;
                v19 = 1;
                if ((v20 & 1) != 0)
                  goto LABEL_45;
              }
              std::basic_string<char16_t>::assign(a3, &__str, 0, v25);
              if ((char)v33 < 0)
                operator delete(__p[0]);
LABEL_45:
              v11 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
            }
            break;
          }
        }
      }
      if (v11 < 0)
        operator delete(__str.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1CB52101C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;

  if (a15 < 0)
    operator delete(__p);
  if (a21 < 0)
    operator delete(a16);
  if (*(char *)(v21 + 23) < 0)
    operator delete(*(void **)v21);
  _Unwind_Resume(exception_object);
}

uint64_t morphun::util::ResourceLocator::APPLE_FRAMEWORKS_ROOT_DIRECTORY(morphun::util::ResourceLocator *this)
{
  unsigned __int8 v1;
  std::basic_string<char16_t> *p_p;
  UChar *v4;
  std::basic_string<char16_t> __p;

  if ((v1 & 1) == 0
  {
    morphun::util::ResourceLocator::getDirectoryFromEnvironment((morphun::util::ResourceLocator *)"APPLE_FRAMEWORKS_ROOT", (const char *)MEMORY[0x1E0C98BC0], &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
    v4 = morphun::util::StringViewUtils::strdup((const UChar *)p_p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    morphun::util::ResourceLocator::APPLE_FRAMEWORKS_ROOT_DIRECTORY(void)::APPLE_FRAMEWORKS_ROOT_DIRECTORY_ = (uint64_t)v4;
  }
  return morphun::util::ResourceLocator::APPLE_FRAMEWORKS_ROOT_DIRECTORY(void)::APPLE_FRAMEWORKS_ROOT_DIRECTORY_;
}

void sub_1CB52111C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::ResourceLocator::MORPHUN_ROOT_DIRECTORY(morphun::util::ResourceLocator *this)
{
  unsigned __int8 v1;
  std::basic_string<char16_t> *p_p;
  UChar *v4;
  std::basic_string<char16_t> __p;

  if ((v1 & 1) == 0
  {
    morphun::util::ResourceLocator::getDirectoryFromEnvironment((morphun::util::ResourceLocator *)"MORPHUN_ROOT", (const char *)morphun::util::ResourceLocator::getDirectoryFromEnvironment, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
    v4 = morphun::util::StringViewUtils::strdup((const UChar *)p_p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    morphun::util::ResourceLocator::MORPHUN_ROOT_DIRECTORY(void)::MORPHUN_ROOT_DIRECTORY_ = (uint64_t)v4;
  }
  return morphun::util::ResourceLocator::MORPHUN_ROOT_DIRECTORY(void)::MORPHUN_ROOT_DIRECTORY_;
}

void sub_1CB5211F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

double morphun::util::ResourceLocator::getRootForLocale@<D0>(morphun::util::ResourceLocator *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  morphun::util::ResourceLocator *v4;
  char v5;
  int32_t v6;
  std::string *p_p;
  double result;
  _WORD *v9;
  std::basic_string<char16_t>::size_type v10;
  uint64_t v11;
  const std::basic_string<char16_t>::value_type *v12;
  std::basic_string<char16_t> v14;
  std::string __p;

  morphun::resources::DataRegistrationService::getDataPathForLocale(this, &__p);
  v5 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    v6 = __p.__r_.__value_.__r.__words[1];
    if (__p.__r_.__value_.__l.__size_)
    {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
LABEL_6:
      morphun::util::StringViewUtils::to_u16string((const char *)p_p, v6, a2);
      if ((*((_BYTE *)&__p.__r_.__value_.__s + 23) & 0x80) == 0)
        return result;
      goto LABEL_7;
    }
  }
  else if (*((_BYTE *)&__p.__r_.__value_.__s + 23))
  {
    v6 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    p_p = &__p;
    goto LABEL_6;
  }
  v9 = (_WORD *)morphun::util::ResourceLocator::MORPHUN_ROOT_DIRECTORY(v4);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v14, (char *)L"/usr/share/morphun");
  if (*v9)
  {
    v11 = 0;
    do
      v12 = (const std::basic_string<char16_t>::value_type *)(v11 + 1);
    while (v9[++v11]);
  }
  else
  {
    v12 = 0;
  }
  std::basic_string<char16_t>::insert(&v14, (std::basic_string<char16_t>::size_type)v9, v12, v10);
  result = *(double *)&v14.__r_.__value_.__l.__data_;
  *a2 = v14;
  if (v5 < 0)
LABEL_7:
    operator delete(__p.__r_.__value_.__l.__data_);
  return result;
}

void sub_1CB5212F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  char v20;

  if (a14 < 0)
    operator delete(__p);
  if (v20 < 0)
    operator delete(a15);
  _Unwind_Resume(exception_object);
}

void morphun::analysis::stemmer::NlLemmaFilter::~NlLemmaFilter(morphun::analysis::stemmer::NlLemmaFilter *this)
{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1E8669C78);
}

{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1E8669C78);
  JUMPOUT(0x1D179D2ECLL);
}

std::basic_string<char16_t>::size_type morphun::analysis::stemmer::NlLemmaFilter::stem(int a1, std::basic_string<char16_t> *this, uint64_t a3, uint64_t a4, std::allocator<char16_t> *a5)
{
  int v5;
  std::basic_string<char16_t>::size_type size;
  unsigned int v7;
  std::basic_string<char16_t>::size_type v8;
  uint64_t v10;
  std::basic_string<char16_t> *v11;
  int v12;
  int v13;
  std::basic_string<char16_t>::size_type v15;
  uint64_t v17;
  int v18;
  std::basic_string<char16_t> *v19;
  std::basic_string<char16_t> *v20;
  unsigned __int8 v21;
  _QWORD *v22;
  std::basic_string<char16_t>::size_type v23;
  std::basic_string<char16_t> *v24;
  _BOOL4 isVowelAtIndex;
  std::basic_string<char16_t> *v26;
  int v27;
  std::basic_string<char16_t>::size_type v28;
  BOOL v29;
  unsigned int v30;
  std::basic_string<char16_t> *v31;
  int v32;
  __int16 v33;
  std::basic_string<char16_t>::value_type v34;
  std::basic_string<char16_t>::size_type v35;
  std::basic_string<char16_t> *v36;
  std::basic_string<char16_t> *v37;
  int v38;
  const std::basic_string<char16_t>::value_type *v39;
  _QWORD *v40;
  std::basic_string<char16_t> __str;

  v5 = SHIBYTE(this->__r_.__value_.__r.__words[2]);
  if (v5 >= 0)
    size = HIBYTE(this->__r_.__value_.__r.__words[2]);
  else
    size = this->__r_.__value_.__l.__size_;
  v7 = size - 4;
  if ((int)size < 4)
    return size;
  if (size >= 9)
  {
    v10 = 0;
    v11 = v5 >= 0 ? this : (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
    do
    {
      v12 = (unsigned __int16)v11->__r_.__value_.__s.__data_[size - 5 + v10];
      v13 = (unsigned __int16)aHeden[v10];
    }
    while (v13 == v12 && v10++ != 4);
    if (v13 == v12
      && v11->__r_.__value_.__s.__data_[(size - 6)] != 99
      && v11->__r_.__value_.__s.__data_[(size - 7)] != 115)
    {
      std::basic_string<char16_t>::replace(this, (size - 3), 3uLL, (const std::basic_string<char16_t>::value_type *)"i", 2uLL);
      if ((this->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        return HIBYTE(this->__r_.__value_.__r.__words[2]);
      else
        return LODWORD(this->__r_.__value_.__r.__words[1]);
    }
  }
  memset(&__str, 0, sizeof(__str));
  morphun::analysis::stemmer::NlLemmaFilter::guessDiminutive((uint64_t)&__str, (uint64_t)this, size, a4, a5);
  v15 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v15 = __str.__r_.__value_.__l.__size_;
  if (v15)
  {
    std::basic_string<char16_t>::operator=(this, &__str);
LABEL_22:
    if ((this->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v8 = HIBYTE(this->__r_.__value_.__r.__words[2]);
    else
      v8 = LODWORD(this->__r_.__value_.__r.__words[1]);
    goto LABEL_25;
  }
  v17 = (size - 1);
  v18 = SHIBYTE(this->__r_.__value_.__r.__words[2]);
  v19 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
  if (v18 >= 0)
    v20 = this;
  else
    v20 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
  if (v20->__r_.__value_.__s.__data_[v17] != 110)
  {
LABEL_45:
    if ((v18 & 0x80u) == 0)
      v19 = this;
    if (v19->__r_.__value_.__s.__data_[v17] == 115)
    {
      if (v19->__r_.__value_.__s.__data_[(size - 2)] == 39)
        v8 = (size - 2);
      else
        v8 = v17;
    }
    else if ((v18 & 0x80u) == 0)
    {
      v8 = v18;
    }
    else
    {
      v8 = LODWORD(this->__r_.__value_.__r.__words[1]);
    }
    goto LABEL_25;
  }
  if ((v21 & 1) == 0
  {
    v40 = (_QWORD *)operator new();
    icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v40);
    MEMORY[0x1D179D970](*v40);
    morphun::analysis::stemmer::NlLemmaFilter::E_SET(void)::E_SET_ = (uint64_t)v40;
  }
  v22 = (_QWORD *)npc<icu4cxx::UnicodeSet const>(morphun::analysis::stemmer::NlLemmaFilter::E_SET(void)::E_SET_);
  v23 = (size - 2);
  if ((this->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v24 = this;
  else
    v24 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
  if (!MEMORY[0x1D179D958](*v22, (unsigned __int16)v24->__r_.__value_.__s.__data_[v23]))
  {
    LOBYTE(v18) = *((_BYTE *)&this->__r_.__value_.__s + 23);
    v19 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
    goto LABEL_45;
  }
  v8 = (size - 3);
  isVowelAtIndex = morphun::analysis::stemmer::NlLemmaFilter::isVowelAtIndex((uint64_t *)this, size - 3);
  if ((this->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v26 = this;
  else
    v26 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
  v27 = (unsigned __int16)v26->__r_.__value_.__s.__data_[v8];
  if (isVowelAtIndex)
  {
    if (v27 != 105)
    {
      v8 = (size - 2);
      goto LABEL_25;
    }
    v8 = (size - 2);
    if (v26->__r_.__value_.__s.__data_[v23] != 235)
      goto LABEL_25;
    std::basic_string<char16_t>::replace(this, (size - 2), 2uLL, word_1CB73E630, 1uLL);
    goto LABEL_22;
  }
  if (v27 != (unsigned __int16)v26->__r_.__value_.__s.__data_[v7] && v27 != 39)
  {
    v28 = (size - 3);
    v29 = size >= 5;
    v30 = size - 5;
    if (v29
      && morphun::analysis::stemmer::NlLemmaFilter::isVowelAtIndex((uint64_t *)this, v7)
      && (!morphun::analysis::stemmer::NlLemmaFilter::isVowelAtIndex((uint64_t *)this, v30)
       || morphun::analysis::stemmer::NlLemmaFilter::shouldElongateVowel((uint64_t *)this, v30)))
    {
      if ((this->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v31 = this;
      else
        v31 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
      v32 = (unsigned __int16)v31->__r_.__value_.__s.__data_[v8];
      if (v32 == 118)
        v33 = 102;
      else
        v33 = v32;
      if (v32 == 122)
        v34 = 115;
      else
        v34 = v33;
      std::basic_string<char16_t>::resize(this, v8, 0);
      v35 = HIBYTE(this->__r_.__value_.__r.__words[2]);
      if ((v35 & 0x80u) == 0)
        v36 = this;
      else
        v36 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
      if ((v35 & 0x80u) != 0)
        v35 = this->__r_.__value_.__l.__size_;
      std::basic_string<char16_t>::push_back(this, v36->__r_.__value_.__s.__data_[v35 - 1]);
      std::basic_string<char16_t>::push_back(this, v34);
    }
    else
    {
      if ((this->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v37 = this;
      else
        v37 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
      v38 = (unsigned __int16)v37->__r_.__value_.__s.__data_[v8];
      if (v38 == 122)
      {
        v39 = "s";
      }
      else
      {
        v8 = v23;
        if (v38 != 118)
          goto LABEL_25;
        v39 = L"f";
      }
      std::basic_string<char16_t>::replace(this, v28, 3uLL, v39, 1uLL);
    }
    goto LABEL_22;
  }
LABEL_25:
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  return v8;
}

void sub_1CB52174C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  MEMORY[0x1D179D2EC](v15, 0x1020C405F07FB98);
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void morphun::analysis::stemmer::NlLemmaFilter::getLemmaForTermAt(uint64_t a1@<X0>, uint64_t a2@<X1>, std::basic_string<char16_t> *a3@<X2>, std::basic_string<char16_t>::size_type a4@<X3>, std::basic_string<char16_t> *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  int v13;
  const UChar *v14;
  uint64_t v15;
  uint64_t v16;
  std::allocator<char16_t> *v17;
  unsigned int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  const UChar *v22;
  uint64_t v23;
  uint64_t v24;

  v23 = 0;
  v12 = *(_QWORD *)(a1 + 136);
  v13 = *(char *)(a2 + 23);
  if (v13 >= 0)
    v14 = (const UChar *)a2;
  else
    v14 = *(const UChar **)a2;
  if (v13 >= 0)
    v15 = *(unsigned __int8 *)(a2 + 23);
  else
    v15 = *(_QWORD *)(a2 + 8);
  morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v12, (uint64_t)&v23, v14, v15);
  if ((*(_QWORD *)(a1 + 160) & v23) != 0)
    goto LABEL_8;
  *(_QWORD *)a6 = 0;
  *(_QWORD *)(a6 + 8) = 0;
  *(_QWORD *)(a6 + 16) = 0;
  if (*(char *)(a2 + 23) >= 0)
    v18 = *(unsigned __int8 *)(a2 + 23);
  else
    v18 = *(_DWORD *)(a2 + 8);
  morphun::analysis::stemmer::NlLemmaFilter::guessDiminutive(a6, a2, v18, v16, v17);
  v19 = *(char *)(a6 + 23);
  if (v19 >= 0)
    v20 = *(unsigned __int8 *)(a6 + 23);
  else
    v20 = *(_QWORD *)(a6 + 8);
  if (!v20)
  {
LABEL_22:
    if ((v19 & 0x80) != 0)
      operator delete(*(void **)a6);
LABEL_8:
    morphun::analysis::stemmer::DictionaryLookupLemmaFilter::getLemmaForTermAt(a1, (const std::basic_string<char16_t> *)a2, a3, a4, a5, (std::basic_string<char16_t> *)a6);
    return;
  }
  v21 = *(_QWORD *)(a1 + 136);
  if (v19 >= 0)
    v22 = (const UChar *)a6;
  else
    v22 = *(const UChar **)a6;
  v24 = 0;
  if (!morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v21, (uint64_t)&v24, v22, v20))
  {
    LOBYTE(v19) = *(_BYTE *)(a6 + 23);
    goto LABEL_22;
  }
}

void sub_1CB5218B0(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void morphun::analysis::stemmer::NlLemmaFilter::guessDiminutive(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, std::allocator<char16_t> *a5)
{
  std::basic_string<char16_t>::size_type size;
  uint64_t v8;
  std::basic_string<char16_t> *p_str;
  uint64_t v10;
  int v11;
  int v12;
  std::basic_string<char16_t>::size_type v14;
  uint64_t v15;
  std::basic_string<char16_t> *v16;
  uint64_t v17;
  int v18;
  int v19;
  int v21;
  std::basic_string<char16_t>::size_type v22;
  uint64_t v23;
  int v24;
  _QWORD *v25;
  std::basic_string<char16_t> *v26;
  int v27;
  std::basic_string<char16_t> *v28;
  uint64_t v29;
  std::basic_string<char16_t> *v30;
  _BOOL8 isVowelAtIndex;
  std::basic_string<char16_t> *v32;
  _QWORD *v33;
  std::basic_string<char16_t> *v34;
  std::basic_string<char16_t> __p;
  __int128 v36;
  uint64_t v37;
  std::basic_string<char16_t> __str;

  if (*(char *)(a2 + 23) < 0)
    std::basic_string<char16_t>::__init_copy_ctor_external(&__str, *(const std::basic_string<char16_t>::value_type **)a2, *(_QWORD *)(a2 + 8));
  else
    __str = *(std::basic_string<char16_t> *)a2;
  size = __str.__r_.__value_.__l.__size_;
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  if (size >= 3)
  {
    v8 = 0;
    p_str = &__str;
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      p_str = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
    v10 = (uint64_t)p_str + 2 * size - 6;
    do
    {
      v11 = *(unsigned __int16 *)(v10 + v8 * 2);
      v12 = (unsigned __int16)aJes[v8];
    }
    while (v12 == v11 && v8++ != 2);
    if (v12 == v11)
      std::basic_string<char16_t>::resize(&__str, (int)--a3, 0);
  }
  if ((int)a3 < 3)
    goto LABEL_48;
  v14 = __str.__r_.__value_.__l.__size_;
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v14 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  if (v14 < 2)
    goto LABEL_48;
  v15 = 0;
  v16 = &__str;
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v16 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
  v17 = (uint64_t)v16 + 2 * v14 - 4;
  do
  {
    v18 = *(unsigned __int16 *)(v17 + v15 * 2);
    v19 = (unsigned __int16)word_1CB7389C2[v15];
  }
  while (v19 == v18 && v15++ != 1);
  if (v19 != v18)
    goto LABEL_48;
  if (a3 <= 3)
  {
    v22 = 0;
    v21 = (unsigned __int16)v16->__r_.__value_.__s.__data_[0];
    goto LABEL_35;
  }
  v21 = (unsigned __int16)v16->__r_.__value_.__s.__data_[a3 - 3];
  if (v21 == 112)
  {
    if (v16->__r_.__value_.__s.__data_[a3 - 4] == 109)
    {
LABEL_33:
      npc<std::basic_string<char16_t>>(a1);
      v22 = a3 - 3;
LABEL_47:
      std::basic_string<char16_t>::assign((std::basic_string<char16_t> *)a1, &__str, 0, v22);
      goto LABEL_48;
    }
LABEL_46:
    npc<std::basic_string<char16_t>>(a1);
    v22 = a3 - 2;
    goto LABEL_47;
  }
  v23 = a3 - 5;
  if (a3 < 5)
  {
    if (v21 != 116)
      goto LABEL_54;
LABEL_52:
    v22 = a3 - 4;
    v24 = (unsigned __int16)v16->__r_.__value_.__s.__data_[v22];
    if (v24 == 39)
      goto LABEL_36;
    if (a3 >= 8 && v24 == 101)
    {
      v25 = (_QWORD *)morphun::analysis::stemmer::NlLemmaFilter::BLNMRP_SET((morphun::analysis::stemmer::NlLemmaFilter *)a1);
      v26 = &__str;
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v26 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
      v27 = MEMORY[0x1D179D958](*v25, (unsigned __int16)v26->__r_.__value_.__s.__data_[v23]);
      v28 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
      if (v27)
      {
        v29 = a3 - 6;
        goto LABEL_61;
      }
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v30 = &__str;
      else
        v30 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
      if (v30->__r_.__value_.__s.__data_[v23] == 103)
      {
        v29 = a3 - 6;
        if (v30->__r_.__value_.__s.__data_[v29] == 110)
        {
LABEL_61:
          if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v28 = &__str;
          if (v28->__r_.__value_.__s.__data_[v29] == v28->__r_.__value_.__s.__data_[v23]
            && morphun::analysis::stemmer::NlLemmaFilter::isVowelAtIndex((uint64_t *)&__str, a3 - 7))
          {
            npc<std::basic_string<char16_t>>(a1);
            v22 = a3 - 5;
            goto LABEL_47;
          }
          goto LABEL_36;
        }
      }
    }
    isVowelAtIndex = morphun::analysis::stemmer::NlLemmaFilter::isVowelAtIndex((uint64_t *)&__str, a3 - 4);
    if (!isVowelAtIndex)
    {
      v33 = (_QWORD *)morphun::analysis::stemmer::NlLemmaFilter::LRN_SET((morphun::analysis::stemmer::NlLemmaFilter *)isVowelAtIndex);
      v34 = &__str;
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v34 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
      if (MEMORY[0x1D179D958](*v33, (unsigned __int16)v34->__r_.__value_.__s.__data_[v22]))
        goto LABEL_33;
      goto LABEL_48;
    }
    if (a3 < 5)
      goto LABEL_33;
    v32 = &__str;
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v32 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
    if (v32->__r_.__value_.__s.__data_[v22] != v32->__r_.__value_.__s.__data_[a3 - 5])
      goto LABEL_33;
LABEL_36:
    npc<std::basic_string<char16_t>>(a1);
    goto LABEL_47;
  }
  if (v21 == 116)
    goto LABEL_52;
  if (v21 != 107)
  {
LABEL_54:
    v22 = a3 - 3;
LABEL_35:
    if (v21 != 39)
      goto LABEL_46;
    goto LABEL_36;
  }
  if (v16->__r_.__value_.__s.__data_[a3 - 4] != 110 || v16->__r_.__value_.__s.__data_[v23] != 105)
    goto LABEL_46;
  std::basic_string<char16_t>::basic_string(&__p, &__str, 0, a3 - 3, a5);
  std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v36, &__p, word_1CB738488);
  npc<std::basic_string<char16_t>>(a1);
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  *(_OWORD *)a1 = v36;
  *(_QWORD *)(a1 + 16) = v37;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
LABEL_48:
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
}

void sub_1CB521C64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a20 < 0)
    operator delete(__p);
  if (a14 < 0)
    operator delete(a9);
  if (a26 < 0)
    operator delete(a21);
  _Unwind_Resume(exception_object);
}

void sub_1CB521CF8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::stemmer::NlLemmaFilter::BLNMRP_SET(morphun::analysis::stemmer::NlLemmaFilter *this)
{
  unsigned __int8 v1;
  _QWORD *v3;

  if ((v1 & 1) == 0
  {
    v3 = (_QWORD *)operator new();
    icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v3);
    MEMORY[0x1D179D970](*v3);
    morphun::analysis::stemmer::NlLemmaFilter::BLNMRP_SET(void)::BLNMRP_SET_ = (uint64_t)v3;
  }
  return npc<icu4cxx::UnicodeSet const>(morphun::analysis::stemmer::NlLemmaFilter::BLNMRP_SET(void)::BLNMRP_SET_);
}

void sub_1CB521D94(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

BOOL morphun::analysis::stemmer::NlLemmaFilter::isVowelAtIndex(uint64_t *a1, int a2)
{
  unsigned __int8 v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v8;
  _QWORD *v9;

  if ((v4 & 1) == 0
  {
    v9 = (_QWORD *)operator new();
    icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v9);
    MEMORY[0x1D179D970](*v9);
    morphun::analysis::stemmer::NlLemmaFilter::AEIOU_SET(void)::AEIOU_SET_ = (uint64_t)v9;
  }
  v5 = (_QWORD *)npc<icu4cxx::UnicodeSet const>(morphun::analysis::stemmer::NlLemmaFilter::AEIOU_SET(void)::AEIOU_SET_);
  if (*((char *)a1 + 23) >= 0)
    v6 = a1;
  else
    v6 = (uint64_t *)*a1;
  if (MEMORY[0x1D179D958](*v5, *((unsigned __int16 *)v6 + a2)))
    return 1;
  if (a2 >= 1)
  {
    v8 = *((char *)a1 + 23) >= 0 ? (uint64_t)a1 : *a1;
    if (*(_WORD *)(v8 + 2 * a2) == 106)
      return *(unsigned __int16 *)(v8 + 2 * (a2 - 1)) == 105;
  }
  return 0;
}

void sub_1CB521ECC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::stemmer::NlLemmaFilter::LRN_SET(morphun::analysis::stemmer::NlLemmaFilter *this)
{
  unsigned __int8 v1;
  _QWORD *v3;

  if ((v1 & 1) == 0
  {
    v3 = (_QWORD *)operator new();
    icu4cxx::UnicodeSet::UnicodeSet((uint64_t)v3);
    MEMORY[0x1D179D970](*v3);
    morphun::analysis::stemmer::NlLemmaFilter::LRN_SET(void)::LRN_SET_ = (uint64_t)v3;
  }
  return npc<icu4cxx::UnicodeSet const>(morphun::analysis::stemmer::NlLemmaFilter::LRN_SET(void)::LRN_SET_);
}

void sub_1CB521F8C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

void sub_1CB522008(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::stemmer::NlLemmaFilter::shouldElongateVowel(uint64_t *a1, unsigned int a2)
{
  unsigned int v2;
  int v3;
  int v4;
  uint64_t *v5;
  int v6;
  char v7;

  v2 = a2 + 1;
  v3 = *((unsigned __int8 *)a1 + 23);
  v4 = (char)v3;
  if ((v3 & 0x80u) != 0)
    v3 = *((_DWORD *)a1 + 2);
  if ((int)v2 >= v3)
    goto LABEL_12;
  if (v4 >= 0)
    v5 = a1;
  else
    v5 = (uint64_t *)*a1;
  v6 = *((unsigned __int16 *)v5 + a2);
  if (v6 == 117)
  {
    v7 = *((unsigned __int16 *)v5 + v2) == 101;
    return v7 & 1;
  }
  if (v6 == 105)
  {
    if (*((_WORD *)v5 + v2) == 97)
      v7 = -1;
    else
      v7 = 0;
  }
  else
  {
LABEL_12:
    v7 = 0;
  }
  return v7 & 1;
}

void morphun::dialog::InflectableStringConcept::toString(morphun::dialog::InflectableStringConcept *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  morphun::dialog::SpeakableString::toString((morphun::dialog::InflectableStringConcept *)((char *)this + 40), a2);
}

void morphun::dialog::InflectableStringConcept::~InflectableStringConcept(void ***this)
{
}

{
  JUMPOUT(0x1D179D2ECLL);
}

_QWORD *morphun::dialog::InflectableStringConcept::toSpeakableString(morphun::dialog::InflectableStringConcept *this)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 *v5;
  _QWORD v7[7];
  char v8;

  morphun::dialog::InflectableStringConcept::getDisplayValue(this, 1, (uint64_t)v7);
  if (!v8)
    return 0;
  v2 = (*(uint64_t (**)(morphun::dialog::InflectableStringConcept *))(*(_QWORD *)this + 120))(this);
  npc<morphun::dialog::SemanticFeature const>(v2);
  v3 = (*(uint64_t (**)(_QWORD *, uint64_t))(v7[0] + 32))(v7, v2);
  v4 = (_QWORD *)operator new();
  v5 = (__int128 *)(*(uint64_t (**)(_QWORD *))(v7[0] + 24))(v7);
  if (v3)
    morphun::dialog::SpeakableString::SpeakableString((uint64_t)v4, v5, v3);
  else
    morphun::dialog::SpeakableString::SpeakableString(v4, v5);
  if (v8)
  return v4;
}

void sub_1CB5221D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  uint64_t v16;

  MEMORY[0x1D179D2EC](v16, 0x10B3C40F7FF9C27);
  if (a16)
  _Unwind_Resume(a1);
}

BOOL morphun::dialog::InflectableStringConcept::isExists(morphun::dialog::InflectableStringConcept *this)
{
  int v1;
  _BYTE v3[56];
  unsigned __int8 v4;

  morphun::dialog::InflectableStringConcept::getDisplayValue(this, 0, (uint64_t)v3);
  v1 = v4;
  if (v4)
  return v1 != 0;
}

_QWORD *morphun::dialog::InflectableStringConcept::getFeatureValue(morphun::dialog::InflectableStringConcept *this, const morphun::dialog::SemanticFeature *a2)
{
  uint64_t v4;
  __int128 *v5;
  _QWORD *v6;
  uint64_t v7;
  morphun::dialog::SemanticFeatureModel *v8;
  uint64_t DefaultFeatureFunction;
  uint64_t v10;
  _BYTE v12[56];
  char v13;

  v4 = (*(uint64_t (**)(morphun::dialog::InflectableStringConcept *))(*(_QWORD *)this + 48))(this);
  if (v4)
  {
    v5 = (__int128 *)v4;
    v6 = (_QWORD *)operator new();
    morphun::dialog::SpeakableString::SpeakableString(v6, v5);
  }
  else
  {
    v7 = (*(uint64_t (**)(morphun::dialog::InflectableStringConcept *))(*(_QWORD *)this + 40))(this);
    v8 = (morphun::dialog::SemanticFeatureModel *)npc<morphun::dialog::SemanticFeatureModel const>(v7);
    DefaultFeatureFunction = morphun::dialog::SemanticFeatureModel::getDefaultFeatureFunction(v8, a2);
    if (DefaultFeatureFunction
      && (v10 = DefaultFeatureFunction,
          morphun::dialog::InflectableStringConcept::getDisplayValue(this, 1, (uint64_t)v12),
          v13))
    {
      v6 = (_QWORD *)(*(uint64_t (**)(uint64_t, _BYTE *, char *))(*(_QWORD *)v10 + 24))(v10, v12, (char *)this + 16);
      if (v13)
    }
    else
    {
      return 0;
    }
  }
  return v6;
}

void sub_1CB52234C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  if (a16)
  _Unwind_Resume(exception_object);
}

morphun::dialog::InflectableStringConcept *morphun::dialog::InflectableStringConcept::clone(morphun::dialog::InflectableStringConcept *this)
{
  morphun::dialog::InflectableStringConcept *v2;

  v2 = (morphun::dialog::InflectableStringConcept *)operator new();
  morphun::dialog::InflectableStringConcept::InflectableStringConcept(v2, this);
  return v2;
}

void sub_1CB5223D4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10F3C4018BE3501);
  _Unwind_Resume(a1);
}

morphun::dialog::InflectableStringConcept *morphun::dialog::InflectableStringConcept::InflectableStringConcept(morphun::dialog::InflectableStringConcept *this, const morphun::dialog::InflectableStringConcept *a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *((_QWORD *)a2 + 1);
  *(_QWORD *)this = &off_1E86578B8;
  *((_QWORD *)this + 1) = v4;
  std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100]((_QWORD *)this + 2, (uint64_t)a2 + 16);
  *(_QWORD *)this = &off_1E866B370;
  morphun::dialog::SpeakableString::SpeakableString((morphun::dialog::InflectableStringConcept *)((char *)this + 40), (const morphun::dialog::InflectableStringConcept *)((char *)a2 + 40));
  *((_QWORD *)this + 10) = &off_1E866B6A0;
  if (*((char *)a2 + 111) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)((char *)this + 88), *((const std::basic_string<char16_t>::value_type **)a2 + 11), *((_QWORD *)a2 + 12));
  }
  else
  {
    v5 = *(_OWORD *)((char *)a2 + 88);
    *((_QWORD *)this + 13) = *((_QWORD *)a2 + 13);
    *(_OWORD *)((char *)this + 88) = v5;
  }
  std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100]((_QWORD *)this + 14, (uint64_t)a2 + 112);
  return this;
}

void sub_1CB5224A0(_Unwind_Exception *a1)
{
  void ***v1;
  morphun::dialog::SpeakableString *v2;

  morphun::dialog::SemanticFeatureConceptBase::~SemanticFeatureConceptBase(v1, (void ***)off_1E8667460);
  _Unwind_Resume(a1);
}

void sub_1CB522530(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::dialog::InflectableStringConcept::getDisplayValue(morphun::dialog::InflectableStringConcept *this@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  const morphun::dialog::SemanticFeature *v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  char *v13;
  _BYTE *v14;
  char *v15;
  uint64_t (**v16)(morphun::Object *__hidden);
  _QWORD v17[3];
  void ***v18;
  void **v19[2];
  char **v20;
  char v21;
  void **v22[7];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v6 = (*(uint64_t (**)(morphun::dialog::InflectableStringConcept *))(*(_QWORD *)this + 40))(this);
  v7 = *(_QWORD *)(npc<morphun::dialog::SemanticFeatureModel const>(v6) + 232);
  if (v7 && *((_QWORD *)this + 4))
  {
    v19[0] = 0;
    v19[1] = 0;
    v18 = v19;
    if (*((_QWORD *)this + 9))
    {
      v8 = (const morphun::dialog::SemanticFeature *)(*(uint64_t (**)(morphun::dialog::InflectableStringConcept *))(*(_QWORD *)this + 120))(this);
      npc<morphun::dialog::SemanticFeature const>((uint64_t)v8);
      if (*((_QWORD *)this + 9))
        v9 = (__int128 *)*((_QWORD *)this + 9);
      else
        v9 = (__int128 *)((char *)this + 48);
      std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__emplace_unique_key_args<morphun::dialog::SemanticFeature,morphun::dialog::SemanticFeature const&,std::basic_string<char16_t> const&>((uint64_t **)&v18, (uint64_t)v8, v8, v9);
    }
    morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue((uint64_t)v22, (__int128 *)this + 3, (uint64_t)&v18);
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v20 = &v13;
    v21 = 0;
    v13 = (char *)operator new(0x38uLL);
    v14 = v13;
    v15 = v13 + 56;
    v14 = (_BYTE *)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<morphun::dialog::SemanticFeatureModel_DisplayValue>,morphun::dialog::SemanticFeatureModel_DisplayValue const*,morphun::dialog::SemanticFeatureModel_DisplayValue const*,morphun::dialog::SemanticFeatureModel_DisplayValue*>((uint64_t)v22, (uint64_t)&v23, (uint64_t)v13);
    v16 = &off_1E866B660;
    memset(v17, 0, sizeof(v17));
    std::vector<morphun::dialog::SemanticFeatureModel_DisplayValue>::__init_with_size[abi:ne180100]<morphun::dialog::SemanticFeatureModel_DisplayValue*,morphun::dialog::SemanticFeatureModel_DisplayValue*>(v17, (uint64_t)v13, (uint64_t)v14, 0x6DB6DB6DB6DB6DB7 * ((v14 - v13) >> 3));
    v20 = &v13;
    std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100]((void ***)&v20);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t (***)(morphun::Object *__hidden), char *, uint64_t))(*(_QWORD *)v7 + 24))(v7, &v16, (char *)this + 16, a2);
    v11 = v10;
    if (v10)
    {
      *(_QWORD *)a3 = &off_1E866B6A0;
      if (*(char *)(v10 + 31) < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a3 + 8), *(const std::basic_string<char16_t>::value_type **)(v10 + 8), *(_QWORD *)(v10 + 16));
      }
      else
      {
        v12 = *(_OWORD *)(v10 + 8);
        *(_QWORD *)(a3 + 24) = *(_QWORD *)(v10 + 24);
        *(_OWORD *)(a3 + 8) = v12;
      }
      std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100]((_QWORD *)(a3 + 32), v11 + 32);
      *(_BYTE *)(a3 + 56) = 1;
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11);
      v16 = &off_1E866B660;
      v22[0] = (void **)v17;
      std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100](v22);
      std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(v19[0]);
      return;
    }
    v16 = &off_1E866B660;
    v22[0] = (void **)v17;
    std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100](v22);
    std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(v19[0]);
  }
  if ((_DWORD)a2)
  {
    *(_QWORD *)a3 = &off_1E866B6A0;
    if (*((char *)this + 111) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a3 + 8), *((const std::basic_string<char16_t>::value_type **)this + 11), *((_QWORD *)this + 12));
    }
    else
    {
      *(_OWORD *)(a3 + 8) = *(_OWORD *)((char *)this + 88);
      *(_QWORD *)(a3 + 24) = *((_QWORD *)this + 13);
    }
    std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100]((_QWORD *)(a3 + 32), (uint64_t)this + 112);
    *(_BYTE *)(a3 + 56) = 1;
  }
  else
  {
    *(_BYTE *)a3 = 0;
    *(_BYTE *)(a3 + 56) = 0;
  }
}

void sub_1CB5227F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  (*(void (**)(uint64_t))(*(_QWORD *)v13 + 16))(v13);
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(a10);
  _Unwind_Resume(a1);
}

void sub_1CB5228F8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__emplace_unique_key_args<morphun::dialog::SemanticFeature,morphun::dialog::SemanticFeature const&,std::basic_string<char16_t> const&>(uint64_t **a1, uint64_t a2, const morphun::dialog::SemanticFeature *a3, __int128 *a4)
{
  uint64_t **v7;
  uint64_t **v8;
  uint64_t *v9;
  _QWORD v10[2];
  char v11;
  uint64_t v12;

  v7 = (uint64_t **)std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__find_equal<morphun::dialog::SemanticFeature>((uint64_t)a1, &v12, a2);
  if (!*v7)
  {
    v8 = v7;
    v9 = (uint64_t *)operator new(0x80uLL);
    v10[1] = a1 + 1;
    std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>::pair[abi:ne180100]<true,0>((morphun::dialog::SemanticFeature *)(v9 + 4), a3, a4);
    v11 = 1;
    std::__tree<std::u16string_view>::__insert_node_at(a1, v12, v8, v9);
    v10[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100]((uint64_t)v10);
  }
}

void sub_1CB5229B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::unique_ptr<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

morphun::dialog::SemanticFeature *std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>::pair[abi:ne180100]<true,0>(morphun::dialog::SemanticFeature *a1, const morphun::dialog::SemanticFeature *a2, __int128 *a3)
{
  std::basic_string<char16_t> *v5;
  __int128 v6;

  v5 = (std::basic_string<char16_t> *)((char *)morphun::dialog::SemanticFeature::SemanticFeature(a1, a2) + 72);
  if (*((char *)a3 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v5, *(const std::basic_string<char16_t>::value_type **)a3, *((_QWORD *)a3 + 1));
  }
  else
  {
    v6 = *a3;
    v5->__r_.__value_.__r.__words[2] = *((_QWORD *)a3 + 2);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  return a1;
}

void sub_1CB522A14(_Unwind_Exception *a1)
{
  morphun::dialog::SemanticFeature *v1;

  _Unwind_Resume(a1);
}

void morphun::dialog::InflectableStringConcept::~InflectableStringConcept(void ***this, void ***a2)
{
  void **v4;
  void **v5;

  v4 = *a2;
  *this = *a2;
  *(_QWORD *)((char *)*(v4 - 9) + (_QWORD)this) = a2[5];
  *(_QWORD *)((char *)*(*this - 7) + (_QWORD)this) = a2[6];
  *(_QWORD *)((char *)*(*this - 5) + (_QWORD)this) = a2[7];
  v5 = a2[1];
  *this = v5;
  *(_QWORD *)((char *)*(v5 - 9) + (_QWORD)this) = a2[2];
  *(_QWORD *)((char *)*(*this - 7) + (_QWORD)this) = a2[3];
  *(_QWORD *)((char *)*(*this - 5) + (_QWORD)this) = a2[4];
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(this[3]);
}

morphun::dialog::InflectableStringConcept *morphun::dialog::InflectableStringConcept::InflectableStringConcept(morphun::dialog::InflectableStringConcept *this, const morphun::dialog::SemanticFeatureModel *a2, const morphun::dialog::SpeakableString *a3, const morphun::dialog::SpeakableString *a4)
{
  uint64_t v6;
  uint64_t v7;
  const morphun::dialog::SemanticFeature *SpeakFeature;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)this = v6;
  *(_QWORD *)((char *)this + *(_QWORD *)(v6 - 72)) = *((_QWORD *)a2 + 2);
  *(_QWORD *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 56)) = *((_QWORD *)a2 + 3);
  *(_QWORD *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 40)) = *((_QWORD *)a2 + 4);
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 1) = a3;
  *((_QWORD *)this + 2) = (char *)this + 24;
  v7 = *(_QWORD *)a2;
  *(_QWORD *)this = *(_QWORD *)a2;
  *(_QWORD *)((char *)this + *(_QWORD *)(v7 - 72)) = *((_QWORD *)a2 + 5);
  *(_QWORD *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 56)) = *((_QWORD *)a2 + 6);
  *(_QWORD *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 40)) = *((_QWORD *)a2 + 7);
  morphun::dialog::SpeakableString::SpeakableString((morphun::dialog::InflectableStringConcept *)((char *)this + 40), a4);
  SpeakFeature = (const morphun::dialog::SemanticFeature *)morphun::dialog::SemanticFeatureConceptBase::getSpeakFeature(this);
  npc<morphun::dialog::SemanticFeature const>((uint64_t)SpeakFeature);
  morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue((uint64_t **)this + 10, a4, SpeakFeature);
  return this;
}

void sub_1CB522BC4(_Unwind_Exception *a1)
{
  void ***v1;
  void ***v2;

  morphun::dialog::SemanticFeatureConceptBase::~SemanticFeatureConceptBase(v1, v2);
  _Unwind_Resume(a1);
}

morphun::dialog::InflectableStringConcept *morphun::dialog::InflectableStringConcept::InflectableStringConcept(morphun::dialog::InflectableStringConcept *this, const morphun::dialog::SemanticFeatureModel *a2, const morphun::dialog::SpeakableString *a3)
{
  const morphun::dialog::SemanticFeature *SpeakFeature;

  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 1) = a2;
  *((_QWORD *)this + 2) = (char *)this + 24;
  *(_QWORD *)this = &off_1E866B370;
  morphun::dialog::SpeakableString::SpeakableString((morphun::dialog::InflectableStringConcept *)((char *)this + 40), a3);
  SpeakFeature = (const morphun::dialog::SemanticFeature *)morphun::dialog::SemanticFeatureConceptBase::getSpeakFeature(this);
  npc<morphun::dialog::SemanticFeature const>((uint64_t)SpeakFeature);
  morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue((uint64_t **)this + 10, a3, SpeakFeature);
  return this;
}

void sub_1CB522C6C(_Unwind_Exception *a1)
{
  void ***v1;

  morphun::dialog::SemanticFeatureConceptBase::~SemanticFeatureConceptBase(v1, (void ***)off_1E8667460);
  _Unwind_Resume(a1);
}

morphun::dialog::InflectableStringConcept *morphun::dialog::InflectableStringConcept::InflectableStringConcept(morphun::dialog::InflectableStringConcept *this, const morphun::dialog::InflectableStringConcept *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)this = v6;
  *(_QWORD *)((char *)this + *(_QWORD *)(v6 - 72)) = *((_QWORD *)a2 + 2);
  *(_QWORD *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 56)) = *((_QWORD *)a2 + 3);
  *(_QWORD *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 40)) = *((_QWORD *)a2 + 4);
  *((_QWORD *)this + 1) = *(_QWORD *)(a3 + 8);
  std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100]((_QWORD *)this + 2, a3 + 16);
  v7 = *(_QWORD *)a2;
  *(_QWORD *)this = *(_QWORD *)a2;
  *(_QWORD *)((char *)this + *(_QWORD *)(v7 - 72)) = *((_QWORD *)a2 + 5);
  *(_QWORD *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 56)) = *((_QWORD *)a2 + 6);
  *(_QWORD *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 40)) = *((_QWORD *)a2 + 7);
  morphun::dialog::SpeakableString::SpeakableString((morphun::dialog::InflectableStringConcept *)((char *)this + 40), (const morphun::dialog::SpeakableString *)(a3 + 40));
  *((_QWORD *)this + 10) = &off_1E866B6A0;
  if (*(char *)(a3 + 111) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)((char *)this + 88), *(const std::basic_string<char16_t>::value_type **)(a3 + 88), *(_QWORD *)(a3 + 96));
  }
  else
  {
    v8 = *(_OWORD *)(a3 + 88);
    *((_QWORD *)this + 13) = *(_QWORD *)(a3 + 104);
    *(_OWORD *)((char *)this + 88) = v8;
  }
  std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100]((_QWORD *)this + 14, a3 + 112);
  return this;
}

void sub_1CB522DB0(_Unwind_Exception *a1)
{
  void ***v1;
  void ***v2;
  morphun::dialog::SpeakableString *v3;

  morphun::dialog::SemanticFeatureConceptBase::~SemanticFeatureConceptBase(v1, v2);
  _Unwind_Resume(a1);
}

void `virtual thunk to'morphun::dialog::InflectableStringConcept::~InflectableStringConcept(morphun::dialog::InflectableStringConcept *this)
{
}

{
  JUMPOUT(0x1D179D2ECLL);
}

BOOL `virtual thunk to'morphun::dialog::InflectableStringConcept::isExists(morphun::dialog::InflectableStringConcept *this)
{
  return morphun::dialog::InflectableStringConcept::isExists((morphun::dialog::InflectableStringConcept *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 64)));
}

void `virtual thunk to'morphun::dialog::InflectableStringConcept::toString(morphun::dialog::InflectableStringConcept *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  morphun::dialog::SpeakableString::toString((morphun::dialog::InflectableStringConcept *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 24) + 40), a2);
}

_QWORD *`virtual thunk to'morphun::dialog::InflectableStringConcept::toSpeakableString(morphun::dialog::InflectableStringConcept *this)
{
  return morphun::dialog::InflectableStringConcept::toSpeakableString((morphun::dialog::InflectableStringConcept *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 48)));
}

void morphun::analysis::stemmer::HeLemmaFilter::~HeLemmaFilter(morphun::analysis::stemmer::HeLemmaFilter *this)
{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1E8669C28);
}

{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1E8669C28);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::analysis::stemmer::HeLemmaFilter::stem(int a1, std::basic_string<char16_t> *this)
{
  std::basic_string<char16_t>::size_type size;
  int v4;
  std::basic_string<char16_t>::size_type v5;
  uint64_t v6;
  std::basic_string<char16_t> *v7;
  char *v8;
  int v9;
  int v10;
  unsigned __int16 *v12;
  const std::basic_string<char16_t>::value_type *v13;
  std::basic_string<char16_t> *v14;
  std::basic_string<char16_t>::size_type v15;
  std::basic_string<char16_t>::size_type v16;
  std::basic_string<char16_t>::size_type v17;
  unsigned int v18;
  char v19;
  std::basic_string<char16_t>::size_type v20;
  std::basic_string<char16_t>::size_type v21;
  std::basic_string<char16_t> *v22;

  size = HIBYTE(this->__r_.__value_.__r.__words[2]);
  v4 = (char)size;
  if ((size & 0x80u) != 0)
    size = this->__r_.__value_.__l.__size_;
  v5 = size - 2;
  if (size < 2)
    goto LABEL_15;
  v6 = 0;
  v7 = v4 >= 0 ? this : (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
  v8 = (char *)v7 + 2 * v5;
  do
  {
    v9 = *(unsigned __int16 *)&v8[v6 * 2];
    v10 = (unsigned __int16)word_1CB73EF9E[v6];
  }
  while (v10 == v9 && v6++ != 1);
  if (v10 == v9)
  {
    std::basic_string<char16_t>::resize(this, v5, 0);
    morphun::analysis::stemmer::HeLemmaFilter::replaceSuffix((uint64_t)this, word_1CB736F34, 1uLL, word_1CB736F38, 1uLL);
    morphun::analysis::stemmer::HeLemmaFilter::replaceSuffix((uint64_t)this, word_1CB736F3C, 1uLL, word_1CB73EE10, 1uLL);
    morphun::analysis::stemmer::HeLemmaFilter::replaceSuffix((uint64_t)this, word_1CB736F40, 1uLL, word_1CB736F44, 1uLL);
    morphun::analysis::stemmer::HeLemmaFilter::replaceSuffix((uint64_t)this, word_1CB736F48, 1uLL, word_1CB736F4C, 1uLL);
    v12 = (unsigned __int16 *)&unk_1CB736F50;
    v13 = (const std::basic_string<char16_t>::value_type *)&unk_1CB736F54;
    v14 = this;
    v15 = 1;
    v16 = 1;
  }
  else
  {
LABEL_15:
    morphun::analysis::stemmer::HeLemmaFilter::replaceSuffix((uint64_t)this, word_1CB73EF8C, 3uLL, word_1CB73EF86, 2uLL);
    v12 = (unsigned __int16 *)&unk_1CB73EF94;
    v13 = &word_1CB73EF70;
    v14 = this;
    v15 = 4;
    v16 = 2;
  }
  morphun::analysis::stemmer::HeLemmaFilter::replaceSuffix((uint64_t)v14, v12, v15, v13, v16);
  v18 = HIBYTE(this->__r_.__value_.__r.__words[2]);
  v19 = v18;
  v20 = this->__r_.__value_.__l.__size_;
  if ((v18 & 0x80u) == 0)
    v21 = HIBYTE(this->__r_.__value_.__r.__words[2]);
  else
    v21 = this->__r_.__value_.__l.__size_;
  if (v21)
  {
    v22 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
    if ((v18 & 0x80u) == 0)
      v22 = this;
    if (v22->__r_.__value_.__s.__data_[0] == 1492)
    {
      std::basic_string<char16_t>::erase(this, 0, v17);
      v18 = HIBYTE(this->__r_.__value_.__r.__words[2]);
      v20 = this->__r_.__value_.__l.__size_;
      v19 = HIBYTE(this->__r_.__value_.__r.__words[2]);
    }
  }
  if (v19 >= 0)
    return v18;
  else
    return v20;
}

std::basic_string<char16_t> *morphun::analysis::stemmer::HeLemmaFilter::replaceSuffix(uint64_t a1, unsigned __int16 *a2, std::basic_string<char16_t>::size_type a3, const std::basic_string<char16_t>::value_type *a4, std::basic_string<char16_t>::size_type a5)
{
  std::basic_string<char16_t> *result;
  std::basic_string<char16_t>::size_type v10;
  std::basic_string<char16_t> *v11;
  std::basic_string<char16_t>::size_type size;
  uint64_t v13;
  char *v14;
  int v15;
  int v16;
  int v17;
  morphun::exception::NullPointerException *exception;

  result = (std::basic_string<char16_t> *)npc<std::basic_string<char16_t>>(a1);
  v10 = HIBYTE(result->__r_.__value_.__r.__words[2]);
  if (SHIBYTE(result->__r_.__value_.__r.__words[2]) < 0)
  {
    v11 = (std::basic_string<char16_t> *)result->__r_.__value_.__r.__words[0];
    size = result->__r_.__value_.__l.__size_;
  }
  else
  {
    v11 = result;
    size = HIBYTE(result->__r_.__value_.__r.__words[2]);
  }
  if (size < a3)
    return result;
  if (!a3)
    goto LABEL_14;
  v13 = -(uint64_t)a3;
  v14 = (char *)v11 + 2 * size;
  do
  {
    v15 = *(unsigned __int16 *)&v14[2 * v13];
    v17 = *a2++;
    v16 = v17;
  }
  while (v17 == v15 && v13++ != -1);
  if (v16 == v15)
  {
    if (!result)
    {
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
LABEL_14:
    if ((v10 & 0x80) != 0)
      v10 = result->__r_.__value_.__l.__size_;
    return std::basic_string<char16_t>::replace(result, v10 - a3, a3, a4, a5);
  }
  return result;
}

void sub_1CB52313C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1CB523194(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::exception::Throwable::~Throwable(std::exception *this)
{
  morphun::exception::Throwable::~Throwable(this);
  JUMPOUT(0x1D179D2ECLL);
}

{
  this->__vftable = (std::exception_vtbl *)&off_1E86732B0;
  if (SHIBYTE(this[6].__vftable) < 0)
    operator delete(this[4].__vftable);
  if (SHIBYTE(this[3].__vftable) < 0)
    operator delete(this[1].__vftable);
  std::exception::~exception(this);
}

uint64_t morphun::exception::Throwable::what(morphun::exception::Throwable *this)
{
  uint64_t result;

  result = (uint64_t)this + 32;
  if (*((char *)this + 55) < 0)
    return *(_QWORD *)result;
  return result;
}

uint64_t morphun::exception::Throwable::getMessage(morphun::exception::Throwable *this)
{
  return (uint64_t)this + 8;
}

double morphun::exception::Throwable::Throwable(morphun::exception::Throwable *this)
{
  double result;

  *(_QWORD *)this = &off_1E86732B0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E86732B0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

uint64_t morphun::exception::Throwable::Throwable(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  int v5;
  const std::basic_string<char16_t>::value_type *v6;
  uint64_t v7;

  *(_QWORD *)a1 = &off_1E86732B0;
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v4 = *a2;
    *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 2);
    *(_OWORD *)(a1 + 8) = v4;
  }
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  v5 = *((char *)a2 + 23);
  if (v5 >= 0)
    v6 = (const std::basic_string<char16_t>::value_type *)a2;
  else
    v6 = *(const std::basic_string<char16_t>::value_type **)a2;
  if (v5 >= 0)
    LODWORD(v7) = *((unsigned __int8 *)a2 + 23);
  else
    v7 = *((_QWORD *)a2 + 1);
  morphun::util::StringViewUtils::convert((std::string *)(a1 + 32), (uint64_t)v6, v7);
  return a1;
}

void sub_1CB523310(_Unwind_Exception *a1)
{
  std::exception *v1;

  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *morphun::tokenizer::locale::ar::ArTokenizer::createTokenExtractor(morphun::util::ULocale *a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t WordsToNotSplit;
  uint64_t v7;
  uint64_t *v8;
  std::basic_string<char16_t> *v9;
  int v10;
  void *v11;
  std::basic_string<char16_t> *v12;
  std::basic_string<char16_t>::size_type size;
  int v14;
  void *v15;
  std::basic_string<char16_t> *p_src;
  std::basic_string<char16_t>::size_type v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  std::basic_string<char16_t> *v23;
  int v24;
  void *v25;
  std::basic_string<char16_t> *v26;
  std::basic_string<char16_t>::size_type v27;
  int v28;
  void *v29;
  std::basic_string<char16_t> *v30;
  std::basic_string<char16_t>::size_type v31;
  _QWORD *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  unint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  std::basic_string<char16_t> *v61;
  int v62;
  void *v63;
  std::basic_string<char16_t> *v64;
  std::basic_string<char16_t>::size_type v65;
  int v66;
  void *v67;
  std::basic_string<char16_t> *v68;
  std::basic_string<char16_t>::size_type v69;
  _QWORD *v70;
  uint64_t v71;
  const UChar *v72;
  uint64_t v73;
  int32_t v74;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  std::basic_string<char16_t>::size_type v79;
  std::basic_string<char16_t>::size_type v80;
  _QWORD *v81;
  std::basic_string<char16_t>::size_type v82;
  std::basic_string<char16_t> *p_dst;
  int v85;
  void *v86;
  std::basic_string<char16_t> *v87;
  std::basic_string<char16_t>::size_type v88;
  int v89;
  void *v90;
  std::basic_string<char16_t> *v91;
  std::basic_string<char16_t>::size_type v92;
  _QWORD *v93;
  const UChar *v94;
  uint64_t v95;
  int32_t v96;
  std::basic_string<char16_t>::size_type v98;
  std::basic_string<char16_t> *v99;
  std::basic_string<char16_t>::size_type v100;
  const void *v102;
  void *v103;
  std::basic_string<char16_t>::size_type v104;
  uint64_t v105;
  std::basic_string<char16_t> *v106;
  std::basic_string<char16_t>::size_type v107;
  _QWORD *v108;
  _WORD *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v113;
  _WORD *v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v119;
  uint64_t **v120;
  uint64_t v121;
  _QWORD *v122;
  std::basic_string<char16_t> v123;
  std::basic_string<char16_t> v124;
  std::basic_string<char16_t> __src;
  uint64_t v126;
  std::basic_string<char16_t> *v127;
  std::basic_string<char16_t>::size_type v128;
  int v129;
  int v130;
  std::basic_string<char16_t> v131;
  std::basic_string<char16_t> __dst;

  v4 = operator new();
  v5 = (_QWORD *)morphun::lang::StringFilterUtil::ARABIC_SCRIPT((morphun::lang::StringFilterUtil *)v4);
  *(_QWORD *)v4 = &off_1E866A910;
  WordsToNotSplit = morphun::tokenizer::TokenExtractor::createWordsToNotSplit((uint64_t)a1, a2, (uint64_t (*)(void **, uint64_t, _WORD *, unint64_t))morphun::tokenizer::TokenExtractor::isIndivisibleWordNormalized);
  morphun::tokenizer::TokenExtractor::TokenExtractor((uint64_t *)v4, (uint64_t *)&off_1E8669E58, a1, a2, WordsToNotSplit);
  *(_QWORD *)v4 = &off_1E8673630;
  *(_BYTE *)(v4 + 160) = 1;
  v7 = MEMORY[0x1D179D928](*v5);
  *(_QWORD *)(v4 + 176) = 0;
  v119 = (_QWORD *)v4;
  *(_QWORD *)(v4 + 168) = v4 + 176;
  v4 += 168;
  *(_QWORD *)(v4 - 16) = v7;
  *(_BYTE *)(v4 - 8) = 1;
  *(_QWORD *)(v4 + 16) = 0;
  *(_BYTE *)(v4 + 24) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  v8 = (uint64_t *)(v4 + 32);
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  v120 = (uint64_t **)v4;
  *(_QWORD *)(v4 + 80) = 0;
  v9 = (std::basic_string<char16_t> *)std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v131, "t");
  std::basic_string<char16_t>::append(v9, L".", 1uLL);
  __dst = v131;
  memset(&v131, 0, sizeof(v131));
  morphun::util::StringUtils::to_u16string(0, &v124);
  v10 = SHIBYTE(v124.__r_.__value_.__r.__words[2]);
  v11 = (void *)v124.__r_.__value_.__r.__words[0];
  if ((v124.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v12 = &v124;
  else
    v12 = (std::basic_string<char16_t> *)v124.__r_.__value_.__r.__words[0];
  if ((v124.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v124.__r_.__value_.__r.__words[2]);
  else
    size = v124.__r_.__value_.__l.__size_;
  std::basic_string<char16_t>::append(&__dst, (const std::basic_string<char16_t>::value_type *)v12, size);
  __src = __dst;
  memset(&__dst, 0, sizeof(__dst));
  v14 = SHIBYTE(__src.__r_.__value_.__r.__words[2]);
  v15 = (void *)__src.__r_.__value_.__r.__words[0];
  if ((__src.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_src = &__src;
  else
    p_src = (std::basic_string<char16_t> *)__src.__r_.__value_.__r.__words[0];
  if ((__src.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v17 = HIBYTE(__src.__r_.__value_.__r.__words[2]);
  else
    v17 = __src.__r_.__value_.__l.__size_;
  v18 = std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(a2, (unsigned __int16 *)p_src, v17);
  if (v14 < 0)
  {
    operator delete(v15);
    if ((v10 & 0x80000000) == 0)
      goto LABEL_15;
LABEL_49:
    operator delete(v11);
    goto LABEL_15;
  }
  if (v10 < 0)
    goto LABEL_49;
LABEL_15:
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  if (SHIBYTE(v131.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v131.__r_.__value_.__l.__data_);
  v121 = a2;
  v122 = (_QWORD *)(a2 + 8);
  if ((_QWORD *)(a2 + 8) == v18)
    goto LABEL_136;
  v19 = -1;
  v20 = 32;
  do
  {
    v21 = v20;
    v22 = v19;
    v23 = (std::basic_string<char16_t> *)std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v131, "t");
    std::basic_string<char16_t>::append(v23, L".", 1uLL);
    __dst = v131;
    memset(&v131, 0, sizeof(v131));
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(v22 + 2), &v124);
    v24 = SHIBYTE(v124.__r_.__value_.__r.__words[2]);
    v25 = (void *)v124.__r_.__value_.__r.__words[0];
    if ((v124.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v26 = &v124;
    else
      v26 = (std::basic_string<char16_t> *)v124.__r_.__value_.__r.__words[0];
    if ((v124.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v27 = HIBYTE(v124.__r_.__value_.__r.__words[2]);
    else
      v27 = v124.__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::append(&__dst, (const std::basic_string<char16_t>::value_type *)v26, v27);
    __src = __dst;
    memset(&__dst, 0, sizeof(__dst));
    v28 = SHIBYTE(__src.__r_.__value_.__r.__words[2]);
    v29 = (void *)__src.__r_.__value_.__r.__words[0];
    if ((__src.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v30 = &__src;
    else
      v30 = (std::basic_string<char16_t> *)__src.__r_.__value_.__r.__words[0];
    if ((__src.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v31 = HIBYTE(__src.__r_.__value_.__r.__words[2]);
    else
      v31 = __src.__r_.__value_.__l.__size_;
    v32 = std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(v121, (unsigned __int16 *)v30, v31);
    if (v28 < 0)
    {
      operator delete(v29);
      if ((v24 & 0x80000000) == 0)
        goto LABEL_35;
    }
    else if ((v24 & 0x80000000) == 0)
    {
      goto LABEL_35;
    }
    operator delete(v25);
LABEL_35:
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__dst.__r_.__value_.__l.__data_);
    if (SHIBYTE(v131.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v131.__r_.__value_.__l.__data_);
    v20 = v21 + 32;
    v19 = v22 + 1;
  }
  while (v122 != v32);
  v33 = v22 + 2;
  v35 = v119[25];
  v34 = v119[26];
  v36 = (v34 - v35) >> 5;
  if (v36 > v19)
  {
    v37 = v121;
    if (v33 < v36)
    {
      v38 = v35 + 32 * v33;
      if (v34 != v38)
      {
        do
        {
          v39 = v34 - 32;
          std::__tree<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::__map_value_compare<char16_t,std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::less<char16_t>,true>,std::allocator<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>>>::destroy(*(_QWORD **)(v34 - 24));
          v34 = v39;
        }
        while (v39 != v38);
      }
      v119[26] = v38;
    }
    goto LABEL_75;
  }
  v40 = v119[27];
  if (v33 - v36 <= (v40 - v34) >> 5)
  {
    v59 = 32 * v36;
    v60 = v34 + 32 * (v33 - v36);
    v37 = v121;
    do
    {
      *(_QWORD *)(v34 + 8) = 0;
      *(_QWORD *)(v34 + 16) = 0;
      *(_QWORD *)v34 = v34 + 8;
      *(_BYTE *)(v34 + 24) = 0;
      v34 += 32;
      v59 += 32;
    }
    while (v21 != v59);
    v119[26] = v60;
    goto LABEL_75;
  }
  v41 = (v40 - v35) >> 4;
  if (v41 <= v33)
    v41 = v22 + 2;
  if ((unint64_t)(v40 - v35) >= 0x7FFFFFFFFFFFFFE0)
    v42 = 0x7FFFFFFFFFFFFFFLL;
  else
    v42 = v41;
  v37 = v121;
  if (v42 >> 59)
    std::__throw_bad_array_new_length[abi:ne180100]();
  v43 = (char *)operator new(32 * v42);
  v44 = &v43[32 * v36];
  v45 = &v43[32 * v33];
  v46 = v21 - 32 * v36;
  v47 = v44;
  do
  {
    *((_QWORD *)v47 + 2) = 0;
    *((_QWORD *)v47 + 1) = 0;
    *(_QWORD *)v47 = v47 + 8;
    v47[24] = 0;
    v47 += 32;
    v46 -= 32;
  }
  while (v46);
  v48 = &v43[32 * v42];
  v50 = (char *)v119[25];
  v49 = (char *)v119[26];
  if (v49 == v50)
  {
    v119[25] = v44;
    v119[26] = v45;
    v119[27] = v48;
    if (!v49)
      goto LABEL_75;
    goto LABEL_74;
  }
  v51 = 0;
  do
  {
    v52 = &v44[v51];
    *((_QWORD *)v52 - 4) = *(_QWORD *)&v49[v51 - 32];
    v53 = &v49[v51 - 24];
    v54 = *(_QWORD *)v53;
    *(_QWORD *)&v44[v51 - 24] = *(_QWORD *)v53;
    v55 = (uint64_t)&v44[v51 - 24];
    v56 = *(_QWORD *)&v49[v51 - 16];
    *((_QWORD *)v52 - 2) = v56;
    if (v56)
    {
      *(_QWORD *)(v54 + 16) = v55;
      *(_QWORD *)&v49[v51 - 32] = v53;
      *(_QWORD *)v53 = 0;
      *(_QWORD *)&v49[v51 - 16] = 0;
    }
    else
    {
      *((_QWORD *)v52 - 4) = v55;
    }
    v44[v51 - 8] = v49[v51 - 8];
    v51 -= 32;
  }
  while (&v49[v51] != v50);
  v57 = (char *)v119[25];
  v49 = (char *)v119[26];
  v119[25] = &v44[v51];
  v119[26] = v45;
  v119[27] = v48;
  if (v49 != v57)
  {
    do
    {
      v58 = v49 - 32;
      std::__tree<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::__map_value_compare<char16_t,std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::less<char16_t>,true>,std::allocator<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>>>::destroy(*((_QWORD **)v49 - 3));
      v49 = v58;
    }
    while (v58 != v57);
    v49 = v57;
  }
  if (v49)
LABEL_74:
    operator delete(v49);
LABEL_75:
  v61 = (std::basic_string<char16_t> *)std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v131, "t");
  std::basic_string<char16_t>::append(v61, L".", 1uLL);
  __dst = v131;
  memset(&v131, 0, sizeof(v131));
  morphun::util::StringUtils::to_u16string(0, &v124);
  v62 = SHIBYTE(v124.__r_.__value_.__r.__words[2]);
  v63 = (void *)v124.__r_.__value_.__r.__words[0];
  if ((v124.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v64 = &v124;
  else
    v64 = (std::basic_string<char16_t> *)v124.__r_.__value_.__r.__words[0];
  if ((v124.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v65 = HIBYTE(v124.__r_.__value_.__r.__words[2]);
  else
    v65 = v124.__r_.__value_.__l.__size_;
  std::basic_string<char16_t>::append(&__dst, (const std::basic_string<char16_t>::value_type *)v64, v65);
  __src = __dst;
  memset(&__dst, 0, sizeof(__dst));
  v66 = SHIBYTE(__src.__r_.__value_.__r.__words[2]);
  v67 = (void *)__src.__r_.__value_.__r.__words[0];
  if ((__src.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v68 = &__src;
  else
    v68 = (std::basic_string<char16_t> *)__src.__r_.__value_.__r.__words[0];
  if ((__src.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v69 = HIBYTE(__src.__r_.__value_.__r.__words[2]);
  else
    v69 = __src.__r_.__value_.__l.__size_;
  v70 = std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(v37, (unsigned __int16 *)v68, v69);
  if (v66 < 0)
  {
    operator delete(v67);
    if (v62 < 0)
      goto LABEL_142;
  }
  else
  {
    if ((v62 & 0x80000000) == 0)
      goto LABEL_89;
LABEL_142:
    operator delete(v63);
  }
LABEL_89:
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  if (SHIBYTE(v131.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v131.__r_.__value_.__l.__data_);
  if (v122 != v70)
  {
    v71 = 0;
    do
    {
      memset(&__dst, 0, sizeof(__dst));
      v72 = (const UChar *)v70[6];
      if (*v72)
      {
        v73 = 0;
        do
          v74 = v73 + 1;
        while (v72[++v73]);
      }
      else
      {
        v74 = 0;
      }
      morphun::util::StringViewUtils::lowercase((uint64_t)&__dst, v72, v74, (uint64_t)(v119 + 1));
      *(_OWORD *)&__src.__r_.__value_.__r.__words[1] = 0uLL;
      __src.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&__src.__r_.__value_.__l.__size_;
      LOBYTE(v126) = 0;
      v76 = *v8;
      v77 = *v8 + 32 * v71;
      v78 = v77 + 8;
      std::__tree<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::__map_value_compare<char16_t,std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::less<char16_t>,true>,std::allocator<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>>>::destroy(*(_QWORD **)(v77 + 8));
      *(_QWORD *)v77 = __src.__r_.__value_.__r.__words[0];
      v79 = __src.__r_.__value_.__l.__size_;
      *(_QWORD *)(v77 + 8) = __src.__r_.__value_.__l.__size_;
      v80 = __src.__r_.__value_.__r.__words[2];
      *(_QWORD *)(v77 + 16) = *((_QWORD *)&__src.__r_.__value_.__l + 2);
      if (v80)
      {
        v81 = 0;
        *(_QWORD *)(v79 + 16) = v78;
        __src.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&__src.__r_.__value_.__l.__size_;
        *(_OWORD *)&__src.__r_.__value_.__r.__words[1] = 0uLL;
      }
      else
      {
        *(_QWORD *)v77 = v78;
        v81 = (_QWORD *)__src.__r_.__value_.__l.__size_;
      }
      *(_BYTE *)(v76 + 32 * v71 + 24) = v126;
      std::__tree<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::__map_value_compare<char16_t,std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::less<char16_t>,true>,std::allocator<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>>>::destroy(v81);
      v82 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
      p_dst = &__dst;
      if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      {
        v82 = __dst.__r_.__value_.__l.__size_;
        p_dst = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
      }
      *(_OWORD *)&__src.__r_.__value_.__l.__data_ = 0uLL;
      __src.__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)L",";
      v126 = 1;
      v127 = p_dst;
      v128 = v82;
      v129 = v82;
      v130 = 0;
      if ((int)v82 >= 1)
        morphun::util::DelimitedStringIterator::getNext((UChar *)&__src);
      while (v130 < v129 || __src.__r_.__value_.__l.__size_ != 0)
      {
        morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor::addPrefix((uint64_t **)(*v8 + 32 * v71), (unsigned __int16 *)__src.__r_.__value_.__l.__data_, __src.__r_.__value_.__l.__size_);
        morphun::util::DelimitedStringIterator::operator++((morphun::util::DelimitedStringIterator *)&__src);
      }
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v124, "t");
      std::basic_string<char16_t>::append(&v124, L".", 1uLL);
      ++v71;
      v131 = v124;
      memset(&v124, 0, sizeof(v124));
      morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(int)v71, &v123);
      v85 = SHIBYTE(v123.__r_.__value_.__r.__words[2]);
      v86 = (void *)v123.__r_.__value_.__r.__words[0];
      if ((v123.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v87 = &v123;
      else
        v87 = (std::basic_string<char16_t> *)v123.__r_.__value_.__r.__words[0];
      if ((v123.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v88 = HIBYTE(v123.__r_.__value_.__r.__words[2]);
      else
        v88 = v123.__r_.__value_.__l.__size_;
      std::basic_string<char16_t>::append(&v131, (const std::basic_string<char16_t>::value_type *)v87, v88);
      __src = v131;
      memset(&v131, 0, sizeof(v131));
      v89 = SHIBYTE(__src.__r_.__value_.__r.__words[2]);
      v90 = (void *)__src.__r_.__value_.__r.__words[0];
      if ((__src.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v91 = &__src;
      else
        v91 = (std::basic_string<char16_t> *)__src.__r_.__value_.__r.__words[0];
      if ((__src.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v92 = HIBYTE(__src.__r_.__value_.__r.__words[2]);
      else
        v92 = __src.__r_.__value_.__l.__size_;
      v70 = std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(v121, (unsigned __int16 *)v91, v92);
      if (v89 < 0)
      {
        operator delete(v90);
        if (v85 < 0)
LABEL_135:
          operator delete(v86);
      }
      else if (v85 < 0)
      {
        goto LABEL_135;
      }
      if (SHIBYTE(v131.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v131.__r_.__value_.__l.__data_);
      if (SHIBYTE(v124.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v124.__r_.__value_.__l.__data_);
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__dst.__r_.__value_.__l.__data_);
    }
    while (v122 != v70);
  }
LABEL_136:
  v93 = std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(v121, (unsigned __int16 *)"t", 0x12uLL);
  if (v122 == v93)
    goto LABEL_174;
  memset(&v131, 0, sizeof(v131));
  v94 = (const UChar *)v93[6];
  if (*v94)
  {
    v95 = 0;
    do
      v96 = v95 + 1;
    while (v94[++v95]);
  }
  else
  {
    v96 = 0;
  }
  morphun::util::StringViewUtils::lowercase((uint64_t)&v131, v94, v96, (uint64_t)(v119 + 1));
  v98 = HIBYTE(v131.__r_.__value_.__r.__words[2]);
  if ((v131.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v99 = &v131;
  else
    v99 = (std::basic_string<char16_t> *)v131.__r_.__value_.__r.__words[0];
  if ((v131.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v98 = v131.__r_.__value_.__l.__size_;
  *(_OWORD *)&__src.__r_.__value_.__l.__data_ = 0uLL;
  __src.__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)L",";
  v126 = 1;
  v127 = v99;
  v128 = v98;
  v129 = v98;
  v130 = 0;
  if ((int)v98 >= 1)
    morphun::util::DelimitedStringIterator::getNext((UChar *)&__src);
  while (2)
  {
    v100 = __src.__r_.__value_.__l.__size_;
    if (v130 < v129 || __src.__r_.__value_.__l.__size_ != 0)
    {
      if (__src.__r_.__value_.__l.__size_ >= 0x7FFFFFFFFFFFFFF8)
        std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
      v102 = (const void *)__src.__r_.__value_.__r.__words[0];
      if (__src.__r_.__value_.__l.__size_ >= 0xB)
      {
        v104 = (__src.__r_.__value_.__l.__size_ & 0xFFFFFFFFFFFFFFFCLL) + 4;
        if ((__src.__r_.__value_.__l.__size_ | 3) != 0xB)
          v104 = __src.__r_.__value_.__l.__size_ | 3;
        v103 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v104 + 1);
        __dst.__r_.__value_.__l.__size_ = v100;
        __dst.__r_.__value_.__r.__words[2] = v105 | 0x8000000000000000;
        __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v103;
      }
      else
      {
        *((_BYTE *)&__dst.__r_.__value_.__s + 23) = __src.__r_.__value_.__r.__words[1];
        v103 = &__dst;
        if (!__src.__r_.__value_.__l.__size_)
          goto LABEL_163;
      }
      memmove(v103, v102, 2 * v100);
LABEL_163:
      *((_WORD *)v103 + v100) = 0;
      morphun::util::StringUtils::reverse((uint64_t)&__dst);
      if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v106 = &__dst;
      else
        v106 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
      if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v107 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
      else
        v107 = __dst.__r_.__value_.__l.__size_;
      morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor::addPrefix(v120, (unsigned __int16 *)v106, v107);
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__dst.__r_.__value_.__l.__data_);
      morphun::util::DelimitedStringIterator::operator++((morphun::util::DelimitedStringIterator *)&__src);
      continue;
    }
    break;
  }
  if (SHIBYTE(v131.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v131.__r_.__value_.__l.__data_);
LABEL_174:
  v108 = std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(v121, L"tokenizer.normalize", 0x13uLL);
  if (v122 != v108)
  {
    v109 = (_WORD *)v108[6];
    if (*v109)
    {
      v110 = 0;
      do
        v111 = v110 + 1;
      while (v109[++v110]);
    }
    else
    {
      v111 = 0;
    }
    v119[28] = v109;
    v119[29] = v111;
  }
  v113 = std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(v121, L"tokenizer.replace", 0x11uLL);
  if (v122 != v113)
  {
    v114 = (_WORD *)v113[6];
    if (*v114)
    {
      v115 = 0;
      do
        v116 = v115 + 1;
      while (v114[++v115]);
    }
    else
    {
      v116 = 0;
    }
    v119[30] = v114;
    v119[31] = v116;
  }
  return v119;
}

void sub_1CB523DAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _QWORD **a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  uint64_t v23;

  if (*(char *)(v23 - 121) < 0)
    operator delete(*(void **)(v23 - 144));
  std::vector<morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  std::__tree<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::__map_value_compare<char16_t,std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::less<char16_t>,true>,std::allocator<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>>>::destroy(*a10);
  icu4cxx::UnicodeSet::~UnicodeSet((icu4cxx::UnicodeSet *)(a11 + 152));
  morphun::tokenizer::TokenExtractor::~TokenExtractor((morphun::tokenizer::TokenExtractor *)a11, (uint64_t *)&off_1E8669E58);
  MEMORY[0x1D179D2EC](a11, 0x10F3C40C2C6248CLL);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::JaCommonConceptFactory::~JaCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1E8667998);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1E8667998);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::dialog::language::JaCommonConceptFactory::createOrList(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::basic_string<char16_t> __p;
  uint64_t (**v8)(morphun::dialog::SpeakableString *__hidden);
  std::basic_string<char16_t> v9;
  uint64_t v10;
  std::basic_string<char16_t> v11;
  uint64_t (**v12)(morphun::dialog::SpeakableString *__hidden);
  std::basic_string<char16_t> v13;
  uint64_t v14;
  std::basic_string<char16_t> __dst;
  uint64_t (**v16)(morphun::dialog::SpeakableString *__hidden);
  std::basic_string<char16_t> v17;
  uint64_t v18;

  v2 = morphun::dialog::CommonConceptFactoryImpl::createOrList(a1, a2);
  npc<morphun::dialog::SemanticConceptList>(v2);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "~0_0o0");
  v16 = &off_1E866AD28;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    std::basic_string<char16_t>::__init_copy_ctor_external(&v17, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
  else
    v17 = __dst;
  v18 = 0;
  v3 = (*(uint64_t (**)(uint64_t, uint64_t (***)(morphun::dialog::SpeakableString *__hidden)))(*(_QWORD *)v2 + 152))(v2, &v16);
  npc<morphun::dialog::SemanticConceptList>(v3);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v11, byte_1CB738700);
  v12 = &off_1E866AD28;
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
    std::basic_string<char16_t>::__init_copy_ctor_external(&v13, v11.__r_.__value_.__l.__data_, v11.__r_.__value_.__l.__size_);
  else
    v13 = v11;
  v14 = 0;
  v4 = (*(uint64_t (**)(uint64_t, uint64_t (***)(morphun::dialog::SpeakableString *__hidden)))(*(_QWORD *)v3 + 168))(v3, &v12);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)&word_1CB73EB86);
  v8 = &off_1E866AD28;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    std::basic_string<char16_t>::__init_copy_ctor_external(&v9, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  else
    v9 = __p;
  v10 = 0;
  v5 = (*(uint64_t (**)(uint64_t, uint64_t (***)(morphun::dialog::SpeakableString *__hidden)))(*(_QWORD *)v4 + 184))(v4, &v8);
  npc<morphun::dialog::SemanticConceptList>(v5);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v11.__r_.__value_.__l.__data_);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  return v5;
}

void sub_1CB5240EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,char a26)
{
  uint64_t v26;

  if (a14 < 0)
    operator delete(__p);
  if (a25 < 0)
    operator delete(a20);
  if (*(char *)(v26 - 57) < 0)
    operator delete(*(void **)(v26 - 80));
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::language::JaCommonConceptFactory::createAndList(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::basic_string<char16_t> __p;
  uint64_t (**v8)(morphun::dialog::SpeakableString *__hidden);
  std::basic_string<char16_t> v9;
  uint64_t v10;
  std::basic_string<char16_t> v11;
  uint64_t (**v12)(morphun::dialog::SpeakableString *__hidden);
  std::basic_string<char16_t> v13;
  uint64_t v14;
  std::basic_string<char16_t> __dst;
  uint64_t (**v16)(morphun::dialog::SpeakableString *__hidden);
  std::basic_string<char16_t> v17;
  uint64_t v18;

  v2 = morphun::dialog::CommonConceptFactoryImpl::createAndList(a1, a2);
  npc<morphun::dialog::SemanticConceptList>(v2);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "h0");
  v16 = &off_1E866AD28;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    std::basic_string<char16_t>::__init_copy_ctor_external(&v17, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
  else
    v17 = __dst;
  v18 = 0;
  v3 = (*(uint64_t (**)(uint64_t, uint64_t (***)(morphun::dialog::SpeakableString *__hidden)))(*(_QWORD *)v2 + 152))(v2, &v16);
  npc<morphun::dialog::SemanticConceptList>(v3);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v11, byte_1CB738700);
  v12 = &off_1E866AD28;
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
    std::basic_string<char16_t>::__init_copy_ctor_external(&v13, v11.__r_.__value_.__l.__data_, v11.__r_.__value_.__l.__size_);
  else
    v13 = v11;
  v14 = 0;
  v4 = (*(uint64_t (**)(uint64_t, uint64_t (***)(morphun::dialog::SpeakableString *__hidden)))(*(_QWORD *)v3 + 168))(v3, &v12);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)&word_1CB73EB86);
  v8 = &off_1E866AD28;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    std::basic_string<char16_t>::__init_copy_ctor_external(&v9, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  else
    v9 = __p;
  v10 = 0;
  v5 = (*(uint64_t (**)(uint64_t, uint64_t (***)(morphun::dialog::SpeakableString *__hidden)))(*(_QWORD *)v4 + 184))(v4, &v8);
  npc<morphun::dialog::SemanticConceptList>(v5);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v11.__r_.__value_.__l.__data_);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  return v5;
}

void sub_1CB52433C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,char a26)
{
  uint64_t v26;

  if (a14 < 0)
    operator delete(__p);
  if (a25 < 0)
    operator delete(a20);
  if (*(char *)(v26 - 57) < 0)
    operator delete(*(void **)(v26 - 80));
  _Unwind_Resume(a1);
}

void morphun::dialog::language::JaCommonConceptFactory::quote(const morphun::dialog::SpeakableString *a1@<X1>, uint64_t a2@<X8>)
{
  const void **v5;
  __int128 v6;
  int v7;
  const void **v8;
  uint64_t v9;
  void *v10;
  std::basic_string<char16_t> v11;
  std::basic_string<char16_t> v12;

  if ((*(unsigned int (**)(const morphun::dialog::SpeakableString *))(*(_QWORD *)a1 + 48))(a1))
  {
    v5 = (const void **)(*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(_QWORD *)a1 + 32))(a1);
    std::operator+<char16_t>((uint64_t)&v12, word_1CB73E782, v5);
    std::basic_string<char16_t>::append(&v12, word_1CB73E786, 1uLL);
    v6 = *(_OWORD *)&v12.__r_.__value_.__l.__data_;
    LODWORD(v11.__r_.__value_.__l.__data_) = v12.__r_.__value_.__r.__words[2];
    *(_DWORD *)((char *)v11.__r_.__value_.__r.__words + 3) = *(_DWORD *)((char *)&v12.__r_.__value_.__r.__words[2] + 3);
    v7 = SHIBYTE(v12.__r_.__value_.__r.__words[2]);
    memset(&v12, 0, sizeof(v12));
    *(_QWORD *)a2 = &off_1E866AD28;
    if (v7 < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a2 + 8), (const std::basic_string<char16_t>::value_type *)v6, *((std::basic_string<char16_t>::size_type *)&v6 + 1));
      *(_QWORD *)(a2 + 32) = 0;
      operator delete((void *)v6);
    }
    else
    {
      *(_OWORD *)(a2 + 8) = v6;
      *(_DWORD *)(a2 + 24) = v11.__r_.__value_.__l.__data_;
      *(_DWORD *)(a2 + 27) = *(_DWORD *)((char *)v11.__r_.__value_.__r.__words + 3);
      *(_BYTE *)(a2 + 31) = v7;
      *(_QWORD *)(a2 + 32) = 0;
    }
    if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0)
    {
      v10 = (void *)v12.__r_.__value_.__r.__words[0];
      goto LABEL_11;
    }
  }
  else
  {
    v8 = (const void **)(*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(_QWORD *)a1 + 32))(a1);
    std::operator+<char16_t>((uint64_t)&v11, word_1CB73E782, v8);
    std::basic_string<char16_t>::append(&v11, word_1CB73E786, 1uLL);
    v12 = v11;
    memset(&v11, 0, sizeof(v11));
    v9 = (*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(_QWORD *)a1 + 40))(a1);
    morphun::dialog::SpeakableString::SpeakableString(a2, (__int128 *)&v12, v9);
    if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v12.__r_.__value_.__l.__data_);
    if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
    {
      v10 = (void *)v11.__r_.__value_.__r.__words[0];
LABEL_11:
      operator delete(v10);
    }
  }
}

void sub_1CB524554(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  void *v21;

  operator delete(v21);
  if (a21 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::JaCommonConceptFactory::quantifiedJoin(uint64_t a1@<X1>, uint64_t a2@<X2>, __int128 *a3@<X3>, _QWORD *a4@<X8>)
{
  _QWORD v7[5];
  _QWORD v8[5];

  morphun::dialog::SpeakableString::SpeakableString(v7, a3);
  morphun::dialog::SpeakableString::operator+(a1, (uint64_t)v7, v8);
  morphun::dialog::SpeakableString::operator+((uint64_t)v8, a2, a4);
}

void sub_1CB52462C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  _Unwind_Resume(a1);
}

void sub_1CB5246A4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::FiAnalyzer::~FiAnalyzer(void **this)
{
  *this = &off_1E865FDA8;
  morphun::analysis::Analyzer::~Analyzer((morphun::analysis::Analyzer *)this, (uint64_t *)&off_1E8668E00);
}

{
  *this = &off_1E865FDA8;
  morphun::analysis::Analyzer::~Analyzer((morphun::analysis::Analyzer *)this, (uint64_t *)&off_1E8668E00);
  JUMPOUT(0x1D179D2ECLL);
}

morphun::analysis::util::FilteringTokenFilter *morphun::analysis::FiAnalyzer::addStopFilter(morphun::analysis::FiAnalyzer *this, morphun::analysis::TokenStream *a2)
{
  morphun::analysis::util::FilteringTokenFilter *v4;

  v4 = (morphun::analysis::util::FilteringTokenFilter *)operator new();
  morphun::analysis::core::StopFilter::StopFilter(v4, (uint64_t)a2, *((_QWORD *)this + 8));
  return v4;
}

void sub_1CB5247A4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10F1C40C2748A64);
  _Unwind_Resume(a1);
}

morphun::analysis::util::AttributeSource *morphun::analysis::FiAnalyzer::addWordNormalizationFilter(morphun::analysis::FiAnalyzer *this, morphun::analysis::TokenStream *a2)
{
  uint64_t v3;
  morphun::analysis::util::AttributeSource *v4;
  morphun::dictionary::DictionaryMetaData *v5;
  const morphun::util::ULocale *v6;
  morphun::analysis::fi::FinnishMorphology *Dictionary;
  morphun::analysis::util::AttributeSource *v8;
  morphun::exception::NullPointerException *exception;
  void *__p[2];
  char v12;

  v3 = operator new();
  *(_QWORD *)v3 = &off_1E866A910;
  v4 = morphun::analysis::util::AttributeSource::AttributeSource((morphun::analysis::util::AttributeSource *)v3, (morphun::analysis::util::AttributeSource *)&off_1E8669BF0, (uint64_t)a2);
  *(_QWORD *)v3 = &off_1E8672B10;
  *(_QWORD *)(v3 + 96) = a2;
  *(_QWORD *)(v3 + 104) = 0;
  v5 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::FINNISH(v4);
  Dictionary = (morphun::analysis::fi::FinnishMorphology *)morphun::dictionary::DictionaryMetaData::createDictionary(v5, v6);
  if (!Dictionary)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  *(_QWORD *)(v3 + 200) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 112) = Dictionary;
  *(_QWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 248) = 0;
  *(_OWORD *)(v3 + 120) = 0u;
  *(_OWORD *)(v3 + 136) = 0u;
  *(_OWORD *)(v3 + 152) = 0u;
  *(_OWORD *)(v3 + 168) = 0u;
  *(_OWORD *)(v3 + 180) = 0u;
  *(_QWORD *)(v3 + 208) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_DWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 104) = morphun::analysis::fi::FinnishMorphology::getInstance(Dictionary);
  *(_QWORD *)(v3 + 120) = morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::CharTermAttribute>(v3);
  *(_QWORD *)(v3 + 128) = morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::OffsetAttribute>(v3);
  v8 = (morphun::analysis::util::AttributeSource *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "j");
  morphun::analysis::filter::AmpersandToAndFilter::AmpersandToAndFilter(v8, v3, (__int128 *)__p);
  if (v12 < 0)
    operator delete(__p[0]);
  return v8;
}

void sub_1CB524914(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  morphun::analysis::TokenFilter *v15;
  void *v16;

  __cxa_free_exception(v16);
  morphun::analysis::TokenFilter::~TokenFilter(v15, (uint64_t *)&off_1E8669BE0);
  MEMORY[0x1D179D2EC](v15, 0x10F3C40F653F602);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::EsGrammarSynthesizer_EsDisplayFunction::~EsGrammarSynthesizer_EsDisplayFunction(morphun::grammar::synthesis::EsGrammarSynthesizer_EsDisplayFunction *this)
{
  uint64_t v2;
  void **v3;

  *(_QWORD *)this = &off_1E866E320;
  v2 = *((_QWORD *)this + 48);
  *((_QWORD *)this + 48) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
  v3 = (void **)((char *)this + 120);
  std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__destroy_vector::operator()[abi:ne180100](&v3);
  *((_QWORD *)this + 4) = &off_1E866B550;
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 13));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 10));
}

{
  morphun::grammar::synthesis::EsGrammarSynthesizer_EsDisplayFunction::~EsGrammarSynthesizer_EsDisplayFunction(this);
  JUMPOUT(0x1D179D2ECLL);
}

morphun::dialog::SemanticFeatureModel_DisplayValue *morphun::grammar::synthesis::EsGrammarSynthesizer_EsDisplayFunction::getDisplayValue(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t TheBestDisplayValue;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  morphun::dialog::SemanticFeatureModel_DisplayValue *v11;
  std::basic_string<char16_t>::size_type size;
  std::allocator<char16_t> *v13;
  std::basic_string<char16_t>::size_type v14;
  std::basic_string<char16_t> *p_str;
  char **v16;
  unsigned __int16 *i;
  std::basic_string<char16_t>::size_type v18;
  unsigned __int16 *v19;
  std::basic_string<char16_t>::size_type v20;
  std::basic_string<char16_t>::size_type v21;
  std::basic_string<char16_t>::size_type v22;
  std::basic_string<char16_t> *v23;
  int v24;
  int v25;
  int v26;
  int v27;
  BOOL v29;
  char *v30;
  uint64_t v31;
  std::basic_string<char16_t>::size_type v32;
  _OWORD *v33;
  _BOOL4 hasAnyFeatures;
  uint64_t v35;
  uint64_t v36;
  const morphun::Token *v37;
  std::basic_string<char16_t> *v38;
  std::basic_string<char16_t>::size_type v39;
  std::basic_string<char16_t> *v40;
  std::basic_string<char16_t>::size_type v41;
  __n128 v42;
  void *v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  _OWORD *v49;
  int v50;
  const std::basic_string<char16_t>::value_type *v51;
  std::basic_string<char16_t>::size_type v52;
  int v53;
  const UChar *v54;
  uint64_t v55;
  int v56;
  const std::basic_string<char16_t>::value_type *v57;
  std::basic_string<char16_t>::size_type v58;
  int v59;
  void *v60;
  unint64_t v61;
  std::basic_string<char16_t> *v62;
  std::basic_string<char16_t>::size_type v63;
  int v64;
  uint64_t v65;
  uint64_t j;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  const std::basic_string<char16_t> *v70;
  morphun::dialog::SemanticFeatureModel_DisplayValue *v71;
  morphun::exception::NullPointerException *exception;
  __int128 v74;
  uint64_t v75;
  std::basic_string<char16_t> __p;
  char v77;
  std::basic_string<char16_t> v78;
  char v79;
  _QWORD v80[3];
  std::basic_string<char16_t> __str;
  std::basic_string<char16_t> v82;
  uint64_t v83;
  std::basic_string<char16_t> v84;
  std::basic_string<char16_t> v85;
  char v86;
  void *v87;
  char v88;

  TheBestDisplayValue = morphun::grammar::synthesis::GrammarSynthesizerUtil::getTheBestDisplayValue(*(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), a3);
  if (!TheBestDisplayValue)
    return 0;
  v8 = TheBestDisplayValue;
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)TheBestDisplayValue + 24))(TheBestDisplayValue);
  if (*(char *)(v9 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&__str, *(const std::basic_string<char16_t>::value_type **)v9, *(_QWORD *)(v9 + 8));
  }
  else
  {
    v10 = *(_OWORD *)v9;
    __str.__r_.__value_.__r.__words[2] = *(_QWORD *)(v9 + 16);
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v10;
  }
  size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = __str.__r_.__value_.__l.__size_;
  if (!size)
  {
    v11 = 0;
    if ((*((_BYTE *)&__str.__r_.__value_.__s + 23) & 0x80) != 0)
      goto LABEL_146;
    return v11;
  }
  morphun::grammar::synthesis::GrammarSynthesizerUtil::mergeConstraintsWithDisplayValue(v80, v8, a3);
  v14 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  p_str = &__str;
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
  {
    v14 = __str.__r_.__value_.__l.__size_;
    p_str = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
  }
  v16 = *(char ***)(a1 + 120);
LABEL_12:
  if (v16 == *(char ***)(a1 + 128))
  {
    v30 = 0;
    i = 0;
    goto LABEL_49;
  }
  for (i = (unsigned __int16 *)v16[1]; ; i += 24)
  {
    if (i == (unsigned __int16 *)v16[2])
    {
      v16 += 4;
      goto LABEL_12;
    }
    v18 = *((unsigned __int8 *)i + 23);
    if (*((char *)i + 23) < 0)
    {
      v20 = *((_QWORD *)i + 1);
      if (!v20)
        continue;
      v19 = *(unsigned __int16 **)i;
    }
    else
    {
      if (!*((_BYTE *)i + 23))
        continue;
      v19 = i;
      v20 = *((unsigned __int8 *)i + 23);
    }
    if (v14 >= v20)
    {
      v21 = *((unsigned __int8 *)i + 23);
      v22 = v20 - 1;
      v23 = p_str;
      do
      {
        v25 = (unsigned __int16)v23->__r_.__value_.__s.__data_[0];
        v23 = (std::basic_string<char16_t> *)((char *)v23 + 2);
        v24 = v25;
        v27 = *v19++;
        v26 = v27;
        v29 = v22-- != 0;
      }
      while (v26 == v24 && v29);
      if (v26 == v24)
      {
        v30 = *v16;
        v31 = (*v16)[9];
        if (!(*v16)[9])
          break;
        if ((v18 & 0x80) != 0)
        {
          v21 = *((_QWORD *)i + 1);
          if (v14 <= v21)
            break;
        }
        else if (v14 <= v18)
        {
          break;
        }
        if (p_str->__r_.__value_.__s.__data_[v21] == 32)
          break;
      }
    }
  }
  if (v30 && i)
  {
    if ((v18 & 0x80) != 0)
      v18 = *((_QWORD *)i + 1);
    if ((uint64_t)v14 >= (uint64_t)(v18 + v31))
      v32 = v18 + v31;
    else
      v32 = v14;
    std::basic_string<char16_t>::basic_string(&v85, &__str, v32, 0xFFFFFFFFFFFFFFFFLL, v13);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__str.__r_.__value_.__l.__data_);
    __str = v85;
  }
LABEL_49:
  LOBYTE(v78.__r_.__value_.__l.__data_) = 0;
  v79 = 0;
  v74 = *(_OWORD *)(a1 + 8);
  v33 = operator new(0x10uLL);
  *v33 = v74;
  hasAnyFeatures = morphun::grammar::synthesis::GrammarSynthesizerUtil::hasAnyFeatures(a3, (uint64_t)v33, (uint64_t)(v33 + 1));
  operator delete(v33);
  if (!hasAnyFeatures)
    goto LABEL_131;
  v35 = *(_QWORD *)(a1 + 384);
  if (!v35)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  v36 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(_QWORD *)v35 + 24))(v35, &__str);
  npc<morphun::TokenChain>(v36);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v36 + 32))(v36) == 1)
  {
    __p.__r_.__value_.__r.__words[0] = 0;
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v38 = &__str;
    else
      v38 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v39 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    else
      v39 = __str.__r_.__value_.__l.__size_;
    morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(_QWORD *)(a1 + 144), (uint64_t)&__p, (const UChar *)v38, v39);
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v40 = &__str;
    else
      v40 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v41 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    else
      v41 = __str.__r_.__value_.__l.__size_;
    morphun::grammar::synthesis::EsGrammarSynthesizer_EsDisplayFunction::inflectWord((uint64_t)&v85, (uint64_t *)a1, v40, v41, (uint64_t)__p.__r_.__value_.__l.__data_, a3, a4);
    v42 = std::__optional_storage_base<std::basic_string<char16_t>,false>::__assign_from[abi:ne180100]<std::__optional_move_assign_base<std::basic_string<char16_t>,false>>((uint64_t)&v78, (__n128 *)&v85);
    if (v86 && SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0)
    {
      v43 = (void *)v85.__r_.__value_.__r.__words[0];
      goto LABEL_126;
    }
    goto LABEL_127;
  }
  memset(&v84, 0, sizeof(v84));
  v44 = *(_OWORD *)(v36 + 8);
  v45 = *(_QWORD *)(v36 + 16);
  if (v45)
    v46 = *(_QWORD *)(v45 + 80);
  else
    v46 = 0;
  v47 = 0;
  while (2)
  {
    v75 = *((_QWORD *)&v44 + 1);
    v48 = v44;
    if (v46 == (_QWORD)v44)
    {
      __p = v84;
      v77 = 1;
      goto LABEL_123;
    }
    v49 = (_OWORD *)(v44 + 16);
    if (v47 & 1 | !morphun::grammar::synthesis::GrammarSynthesizerUtil::checkSignificantTokenForInflection((morphun::grammar::synthesis::GrammarSynthesizerUtil *)v44, v37))
    {
      v50 = *(char *)(v48 + 39);
      if (v50 >= 0)
        v51 = (const std::basic_string<char16_t>::value_type *)(v48 + 16);
      else
        v51 = *(const std::basic_string<char16_t>::value_type **)(v48 + 16);
      if (v50 >= 0)
        v52 = *(unsigned __int8 *)(v48 + 39);
      else
        v52 = *(_QWORD *)(v48 + 24);
      std::basic_string<char16_t>::append(&v84, v51, v52);
      goto LABEL_120;
    }
    v83 = 0;
    v53 = *(char *)(v48 + 39);
    if (v53 >= 0)
      v54 = (const UChar *)(v48 + 16);
    else
      v54 = *(const UChar **)(v48 + 16);
    if (v53 >= 0)
      v55 = *(unsigned __int8 *)(v48 + 39);
    else
      v55 = *(_QWORD *)(v48 + 24);
    morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(_QWORD *)(a1 + 144), (uint64_t)&v83, v54, v55);
    if ((*(_QWORD *)(a1 + 424) & v83) != 0)
    {
      v56 = *(char *)(v48 + 39);
      if (v56 >= 0)
        v57 = (const std::basic_string<char16_t>::value_type *)(v48 + 16);
      else
        v57 = *(const std::basic_string<char16_t>::value_type **)(v48 + 16);
      if (v56 >= 0)
        v58 = *(unsigned __int8 *)(v48 + 39);
      else
        v58 = *(_QWORD *)(v48 + 24);
      std::basic_string<char16_t>::append(&v84, v57, v58);
      v47 = 1;
      goto LABEL_120;
    }
    v59 = *(char *)(v48 + 39);
    if (v59 >= 0)
      v60 = (void *)(v48 + 16);
    else
      v60 = *(void **)(v48 + 16);
    if (v59 >= 0)
      v61 = *(unsigned __int8 *)(v48 + 39);
    else
      v61 = *(_QWORD *)(v48 + 24);
    morphun::grammar::synthesis::EsGrammarSynthesizer_EsDisplayFunction::inflectWord((uint64_t)&v85, (uint64_t *)a1, v60, v61, v83, a3, a4);
    if (*(char *)(v48 + 39) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v82, *(const std::basic_string<char16_t>::value_type **)(v48 + 16), *(_QWORD *)(v48 + 24));
    }
    else
    {
      *(_OWORD *)&v82.__r_.__value_.__l.__data_ = *v49;
      v82.__r_.__value_.__r.__words[2] = *(_QWORD *)(v48 + 32);
    }
    if (v86)
    {
      std::basic_string<char16_t>::operator=(&v82, &v85);
      goto LABEL_106;
    }
    if (a4)
    {
LABEL_106:
      if ((v82.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v62 = &v82;
      else
        v62 = (std::basic_string<char16_t> *)v82.__r_.__value_.__r.__words[0];
      if ((v82.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v63 = HIBYTE(v82.__r_.__value_.__r.__words[2]);
      else
        v63 = v82.__r_.__value_.__l.__size_;
      std::basic_string<char16_t>::append(&v84, (const std::basic_string<char16_t>::value_type *)v62, v63);
      v64 = 1;
    }
    else
    {
      v64 = 0;
    }
    if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v82.__r_.__value_.__l.__data_);
    if (v86 && SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v85.__r_.__value_.__l.__data_);
    if (v64)
    {
      v47 = 0;
LABEL_120:
      npc<morphun::Token const>(v48);
      *((_QWORD *)&v44 + 1) = v75;
      *(_QWORD *)&v44 = *(_QWORD *)(v48 + 80);
      continue;
    }
    break;
  }
  LOBYTE(__p.__r_.__value_.__l.__data_) = 0;
  v77 = 0;
  if (SHIBYTE(v84.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v84.__r_.__value_.__l.__data_);
LABEL_123:
  v42 = std::__optional_storage_base<std::basic_string<char16_t>,false>::__assign_from[abi:ne180100]<std::__optional_move_assign_base<std::basic_string<char16_t>,false>>((uint64_t)&v78, (__n128 *)&__p);
  if (v77 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    v43 = (void *)__p.__r_.__value_.__r.__words[0];
LABEL_126:
    operator delete(v43);
  }
LABEL_127:
  if (v79)
  {
    std::basic_string<char16_t>::operator=(&__str, &v78);
    goto LABEL_130;
  }
  if (a4)
  {
LABEL_130:
    (*(void (**)(uint64_t))(*(_QWORD *)v36 + 16))(v36);
LABEL_131:
    if (v30)
    {
      std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100](&__p, (uint64_t)v80);
      v65 = *((_QWORD *)i + 3);
      for (j = *((_QWORD *)i + 4); v65 != j; v65 += 32)
      {
        if (*(_QWORD *)v65)
        {
          std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>::pair[abi:ne180100]<true,0>((morphun::dialog::SemanticFeature *)&v85, *(const morphun::dialog::SemanticFeature **)v65, (__int128 *)(v65 + 8));
          std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__emplace_unique_key_args<morphun::dialog::SemanticFeature,std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>>((uint64_t **)&__p, (uint64_t)&v85, (uint64_t)&v85);
          if (v88 < 0)
            operator delete(v87);
        }
      }
      v67 = *(_QWORD *)(*(_QWORD *)v30 - 56);
      v68 = operator new();
      morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue(v68, (__int128 *)&__str, (uint64_t)&__p);
      *(_OWORD *)&v85.__r_.__value_.__r.__words[1] = 0uLL;
      v85.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v85.__r_.__value_.__l.__size_;
      v69 = (*(uint64_t (**)(char *, uint64_t, std::basic_string<char16_t> *))(*(_QWORD *)&v30[v67] + 24))(&v30[v67], v68, &v85);
      std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy((void **)v85.__r_.__value_.__l.__size_);
      if (v69)
      {
        v70 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v69 + 32))(v69);
        std::basic_string<char16_t>::operator=(&__str, v70);
        (*(void (**)(uint64_t))(*(_QWORD *)v69 + 16))(v69);
      }
      (*(void (**)(uint64_t))(*(_QWORD *)v68 + 16))(v68);
      std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy((void **)__p.__r_.__value_.__l.__size_);
    }
    v71 = (morphun::dialog::SemanticFeatureModel_DisplayValue *)operator new();
    morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue((uint64_t)v71, (__int128 *)&__str, (uint64_t)v80);
    v11 = morphun::dialog::DefinitenessDisplayFunction::addDefiniteness((uint64_t *)(a1 + 32), v71, a3);
  }
  else
  {
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v36 + 16))(v36, v42);
    v11 = 0;
  }
  if (v79 && SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v78.__r_.__value_.__l.__data_);
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy((void **)v80[1]);
  if ((*((_BYTE *)&__str.__r_.__value_.__s + 23) & 0x80) != 0)
LABEL_146:
    operator delete(__str.__r_.__value_.__l.__data_);
  return v11;
}

void sub_1CB525178(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22,uint64_t a23,void **a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45)
{
  uint64_t v45;

  (*(void (**)(uint64_t))(*(_QWORD *)v45 + 16))(v45);
  if (a22 && a21 < 0)
    operator delete(__p);
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(a24);
  if (a31 < 0)
    operator delete(a26);
  _Unwind_Resume(a1);
}

void sub_1CB525348(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::EsGrammarSynthesizer_EsDisplayFunction::inflectWord(uint64_t a1, uint64_t *a2, void *a3, unint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  int v17;
  std::basic_string<char16_t>::size_type v18;
  std::basic_string<char16_t> *p_dst;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  std::basic_string<char16_t> *v23;
  morphun::grammar::synthesis::GrammemeConstants *v24;
  int v25;
  void *v26;
  std::basic_string<char16_t>::size_type v27;
  uint64_t v28;
  std::allocator<char16_t> *v29;
  uint64_t v30;
  int v31;
  unsigned __int16 *v32;
  std::basic_string<char16_t>::size_type v33;
  std::basic_string<char16_t> *v34;
  std::basic_string<char16_t>::size_type v35;
  std::basic_string<char16_t> *v36;
  uint64_t v37;
  std::allocator<char16_t> *v38;
  uint64_t v39;
  int v40;
  unsigned __int16 *v41;
  std::basic_string<char16_t>::size_type v42;
  std::basic_string<char16_t> *v43;
  std::basic_string<char16_t>::size_type v44;
  morphun::grammar::synthesis::GrammemeConstants *v45;
  uint64_t v46;
  std::basic_string<char16_t>::size_type size;
  uint64_t v48;
  int v49;
  unsigned __int16 *v50;
  std::basic_string<char16_t> *v51;
  std::basic_string<char16_t>::size_type v52;
  int v53;
  int v54;
  int v55;
  int v56;
  BOOL v58;
  _BOOL4 v59;
  std::basic_string<char16_t>::size_type v60;
  std::basic_string<char16_t> *v61;
  int v62;
  std::basic_string<char16_t>::size_type v63;
  uint64_t v64;
  std::allocator<char16_t> *v65;
  std::basic_string<char16_t>::size_type v66;
  std::basic_string<char16_t> *v67;
  std::basic_string<char16_t> *v68;
  std::basic_string<char16_t>::size_type v69;
  std::basic_string<char16_t>::size_type v70;
  std::basic_string<char16_t> *v71;
  std::basic_string<char16_t> *v72;
  uint64_t v73;
  std::basic_string<char16_t> *v74;
  uint64_t v75;
  int v76;
  int v77;
  std::basic_string<char16_t>::size_type v79;
  std::basic_string<char16_t> *v80;
  std::basic_string<char16_t> *v81;
  uint64_t v82;
  std::basic_string<char16_t> *v83;
  uint64_t v84;
  int v85;
  int v86;
  std::basic_string<char16_t>::size_type v88;
  std::basic_string<char16_t> *v89;
  std::basic_string<char16_t> *v90;
  uint64_t v91;
  std::basic_string<char16_t> *v92;
  uint64_t v93;
  int v94;
  int v95;
  BOOL v96;
  std::basic_string<char16_t> *v97;
  std::basic_string<char16_t>::size_type v98;
  uint64_t v99;
  std::basic_string<char16_t> *v100;
  char *v101;
  int v102;
  int v103;
  std::basic_string<char16_t> *v105;
  std::basic_string<char16_t>::size_type v106;
  uint64_t v107;
  std::basic_string<char16_t> *v108;
  char *v109;
  int v110;
  int v111;
  std::basic_string<char16_t> *v113;
  std::basic_string<char16_t> *v114;
  int v115;
  std::basic_string<char16_t> v116;
  std::basic_string<char16_t> v117;
  std::basic_string<char16_t> __dst;
  void *__p[2];
  std::basic_string<char16_t>::size_type v120;
  unsigned __int8 v121;
  std::basic_string<char16_t> v122;
  std::basic_string<char16_t> v123;
  std::basic_string<char16_t> v124;

  v14 = (uint64_t *)operator new(0x10uLL);
  *(_OWORD *)v14 = *(_OWORD *)(a2 + 1);
  morphun::grammar::synthesis::GrammarSynthesizerUtil::convertToStringConstraints((uint64_t)&v123, a6, v14, v14 + 2);
  operator delete(v14);
  v15 = a2[3];
  v16 = (uint64_t *)operator new(8uLL);
  *v16 = v15;
  morphun::grammar::synthesis::GrammarSynthesizerUtil::convertToStringConstraints((uint64_t)&v122, a6, v16, v16 + 1);
  operator delete(v16);
  morphun::dialog::DictionaryLookupInflector::inflect((uint64_t)__p, (uint64_t)(a2 + 19), a3, a4, &v123, &v122);
  v17 = v121;
  if (!v121)
  {
    if ((a7 & 1) == 0)
    {
      *(_BYTE *)a1 = 0;
      *(_BYTE *)(a1 + 24) = 0;
      goto LABEL_191;
    }
    if (a4 >= 0x7FFFFFFFFFFFFFF8)
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    if (a4 >= 0xB)
    {
      v20 = (a4 & 0xFFFFFFFFFFFFFFFCLL) + 4;
      if ((a4 | 3) != 0xB)
        v20 = a4 | 3;
      p_dst = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v20 + 1);
      __dst.__r_.__value_.__l.__size_ = a4;
      __dst.__r_.__value_.__r.__words[2] = v21 | 0x8000000000000000;
      __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)p_dst;
    }
    else
    {
      *((_BYTE *)&__dst.__r_.__value_.__s + 23) = a4;
      p_dst = &__dst;
      if (!a4)
      {
LABEL_15:
        p_dst->__r_.__value_.__s.__data_[a4] = 0;
        if (a5)
          goto LABEL_186;
        v22 = a2[2];
        npc<morphun::dialog::SemanticFeature const>(v22);
        if ((_QWORD *)(a6 + 8) == std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a6, v22))
        {
LABEL_59:
          morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v124, a6, a2[1]);
          v46 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(v45);
          if ((v124.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            size = HIBYTE(v124.__r_.__value_.__r.__words[2]);
          else
            size = v124.__r_.__value_.__l.__size_;
          v48 = *(unsigned __int8 *)(v46 + 23);
          v49 = (char)v48;
          if ((v48 & 0x80u) != 0)
            v48 = *(_QWORD *)(v46 + 8);
          if (size == v48)
          {
            if (!size)
            {
              v59 = 1;
              if ((SHIBYTE(v124.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              {
LABEL_81:
                if (v59)
                {
                  v60 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
                  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                    v60 = __dst.__r_.__value_.__l.__size_;
                  if (v60)
                  {
                    v61 = &__dst;
                    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                      v61 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                    v62 = (unsigned __int16)v61->__r_.__value_.__s.__data_[v60 - 1];
                    if (v62 == 120 || v62 == 115)
                    {
                      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
                      {
                        std::basic_string<char16_t>::__init_copy_ctor_external(&v117, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
                        goto LABEL_183;
                      }
                      *(_OWORD *)&v117.__r_.__value_.__l.__data_ = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
                      v63 = __dst.__r_.__value_.__r.__words[2];
LABEL_113:
                      v117.__r_.__value_.__r.__words[2] = v63;
LABEL_183:
                      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
                        operator delete(__dst.__r_.__value_.__l.__data_);
                      __dst = v117;
                      goto LABEL_186;
                    }
                  }
                  v64 = morphun::util::LocaleUtils::SPANISH((morphun::util::LocaleUtils *)v46);
                  if (morphun::dictionary::PhraseProperties::isEndsWithVowel(v64, (uint64_t)&__dst))
                  {
                    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                      v66 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
                    else
                      v66 = __dst.__r_.__value_.__l.__size_;
                    v67 = &v117;
                    std::basic_string<char16_t>::basic_string[abi:ne180100]((uint64_t)&v117, v66 + 1);
                    if ((v117.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                      v67 = (std::basic_string<char16_t> *)v117.__r_.__value_.__r.__words[0];
                    if (v66)
                    {
                      if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                        v68 = &__dst;
                      else
                        v68 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                      memmove(v67, v68, 2 * v66);
                    }
                    *(_DWORD *)((char *)&v67->__r_.__value_.__l.__data_ + 2 * v66) = 115;
                    goto LABEL_183;
                  }
                  v69 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
                  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                    v69 = __dst.__r_.__value_.__l.__size_;
                  if (v69)
                  {
                    v70 = v69 - 1;
                    v71 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                      v71 = &__dst;
                    if (v71->__r_.__value_.__s.__data_[v70] == 122)
                    {
                      v72 = std::basic_string<char16_t>::basic_string(&v124, &__dst, 0, v70, v65);
                      std::basic_string<char16_t>::append(v72, (const std::basic_string<char16_t>::value_type *)"c", 3uLL);
LABEL_112:
                      *(_OWORD *)&v117.__r_.__value_.__l.__data_ = *(_OWORD *)&v124.__r_.__value_.__l.__data_;
                      v63 = v124.__r_.__value_.__r.__words[2];
                      goto LABEL_113;
                    }
                    if (v69 >= 3)
                    {
                      v91 = 0;
                      v92 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                      if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                        v92 = &__dst;
                      v93 = (uint64_t)v92 + 2 * v69 - 6;
                      do
                      {
                        v94 = *(unsigned __int16 *)(v93 + v91);
                        v95 = *(unsigned __int16 *)&aI_6[v91];
                        v96 = v95 != v94 || v91 == 4;
                        v91 += 2;
                      }
                      while (!v96);
                      if (v95 == v94)
                      {
                        v97 = std::basic_string<char16_t>::basic_string(&v124, &__dst, 0, v69 - 2, v65);
                        std::basic_string<char16_t>::append(v97, L"ones", 4uLL);
                        goto LABEL_112;
                      }
                    }
                    v114 = &__dst;
                    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                      v114 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                    v115 = (unsigned __int16)v114->__r_.__value_.__s.__data_[v70];
                    if (v115 == 103)
                    {
                      std::basic_string<char16_t>::basic_string(&v124, &__dst, 0, v70, v65);
                      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v117, &v124, L"gues");
LABEL_193:
                      if (SHIBYTE(v124.__r_.__value_.__r.__words[2]) < 0)
                        operator delete(v124.__r_.__value_.__l.__data_);
                      goto LABEL_183;
                    }
                    if (v115 == 99)
                    {
                      std::basic_string<char16_t>::basic_string(&v124, &__dst, 0, v70, v65);
                      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v117, &v124, (std::basic_string<char16_t>::value_type *)"q");
                      goto LABEL_193;
                    }
                  }
                  std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v117, (const void **)&__dst.__r_.__value_.__l.__data_, L"es");
                  goto LABEL_183;
                }
LABEL_186:
                *(_OWORD *)a1 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
                v18 = __dst.__r_.__value_.__r.__words[2];
                goto LABEL_187;
              }
LABEL_80:
              operator delete(v124.__r_.__value_.__l.__data_);
              goto LABEL_81;
            }
            if (v49 >= 0)
              v50 = (unsigned __int16 *)v46;
            else
              v50 = *(unsigned __int16 **)v46;
            v51 = (std::basic_string<char16_t> *)v124.__r_.__value_.__r.__words[0];
            if ((v124.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              v51 = &v124;
            v52 = size - 1;
            do
            {
              v54 = (unsigned __int16)v51->__r_.__value_.__s.__data_[0];
              v51 = (std::basic_string<char16_t> *)((char *)v51 + 2);
              v53 = v54;
              v56 = *v50++;
              v55 = v56;
              v58 = v52-- != 0;
              v59 = v55 == v53;
            }
            while (v55 == v53 && v58);
          }
          else
          {
            v59 = 0;
          }
          if ((SHIBYTE(v124.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            goto LABEL_81;
          goto LABEL_80;
        }
        v23 = &v116;
        morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v116, a6, a2[2]);
        v25 = SHIBYTE(v116.__r_.__value_.__r.__words[2]);
        v26 = (void *)v116.__r_.__value_.__r.__words[0];
        if ((v116.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        {
          v27 = HIBYTE(v116.__r_.__value_.__r.__words[2]);
        }
        else
        {
          v27 = v116.__r_.__value_.__l.__size_;
          v23 = (std::basic_string<char16_t> *)v116.__r_.__value_.__r.__words[0];
        }
        v28 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(v24);
        v30 = *(unsigned __int8 *)(v28 + 23);
        v31 = (char)v30;
        if ((v30 & 0x80u) != 0)
          v30 = *(_QWORD *)(v28 + 8);
        if (v27 == v30)
        {
          if (v27)
          {
            if (v31 >= 0)
              v32 = (unsigned __int16 *)v28;
            else
              v32 = *(unsigned __int16 **)v28;
            v33 = v27;
            v34 = v23;
            while (*v32 == (unsigned __int16)v34->__r_.__value_.__s.__data_[0])
            {
              v34 = (std::basic_string<char16_t> *)((char *)v34 + 2);
              ++v32;
              if (!--v33)
                goto LABEL_30;
            }
          }
          else
          {
LABEL_30:
            v35 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
            if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
              v35 = __dst.__r_.__value_.__l.__size_;
            if (v35)
            {
              v36 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
              if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                v36 = &__dst;
              if (v36->__r_.__value_.__s.__data_[v35 - 1] != 111)
              {
                if (v35 < 2)
                  goto LABEL_125;
                v73 = 0;
                v74 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                  v74 = &__dst;
                v75 = (uint64_t)v74 + 2 * v35 - 4;
                do
                {
                  v76 = *(unsigned __int16 *)(v75 + v73 * 2);
                  v77 = (unsigned __int16)word_1CB73CF92[v73];
                }
                while (v77 == v76 && v73++ != 1);
                if (v77 != v76)
                {
LABEL_125:
                  v79 = v35 - 1;
                  v80 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                    v80 = &__dst;
                  if (v80->__r_.__value_.__s.__data_[v79] == 97)
                  {
                    v81 = std::basic_string<char16_t>::basic_string(&v124, &__dst, 0, v79, v29);
                    std::basic_string<char16_t>::append(v81, (const std::basic_string<char16_t>::value_type *)"o", 1uLL);
LABEL_176:
                    *(_OWORD *)&v117.__r_.__value_.__l.__data_ = *(_OWORD *)&v124.__r_.__value_.__l.__data_;
                    v44 = v124.__r_.__value_.__r.__words[2];
                    goto LABEL_53;
                  }
                  v98 = v35 - 2;
                  if (v35 >= 2)
                  {
                    v99 = 0;
                    v100 = &__dst;
                    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                      v100 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                    v101 = (char *)v100 + 2 * v98;
                    do
                    {
                      v102 = *(unsigned __int16 *)&v101[v99 * 2];
                      v103 = (unsigned __int16)word_1CB73CF56[v99];
                    }
                    while (v103 == v102 && v99++ != 1);
                    if (v103 == v102)
                    {
                      v105 = std::basic_string<char16_t>::basic_string(&v124, &__dst, 0, v98, v29);
                      std::basic_string<char16_t>::append(v105, word_1CB73CF92, 2uLL);
                      goto LABEL_176;
                    }
                  }
                }
              }
            }
          }
        }
        v37 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE((morphun::grammar::synthesis::GrammemeConstants *)v28);
        v39 = *(unsigned __int8 *)(v37 + 23);
        v40 = (char)v39;
        if ((v39 & 0x80u) != 0)
          v39 = *(_QWORD *)(v37 + 8);
        if (v27 == v39)
        {
          if (v27)
          {
            if (v40 >= 0)
              v41 = (unsigned __int16 *)v37;
            else
              v41 = *(unsigned __int16 **)v37;
            while (*v41 == (unsigned __int16)v23->__r_.__value_.__s.__data_[0])
            {
              v23 = (std::basic_string<char16_t> *)((char *)v23 + 2);
              ++v41;
              if (!--v27)
                goto LABEL_45;
            }
            goto LABEL_51;
          }
LABEL_45:
          v42 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
          if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
            v42 = __dst.__r_.__value_.__l.__size_;
          if (v42)
          {
            v43 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
            if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              v43 = &__dst;
            if (v43->__r_.__value_.__s.__data_[v42 - 1] != 97)
            {
              if (v42 < 2)
                goto LABEL_139;
              v82 = 0;
              v83 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
              if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                v83 = &__dst;
              v84 = (uint64_t)v83 + 2 * v42 - 4;
              do
              {
                v85 = *(unsigned __int16 *)(v84 + v82 * 2);
                v86 = (unsigned __int16)word_1CB73CF56[v82];
              }
              while (v86 == v85 && v82++ != 1);
              if (v86 != v85)
              {
LABEL_139:
                v88 = v42 - 1;
                v89 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                  v89 = &__dst;
                if (v89->__r_.__value_.__s.__data_[v88] == 111)
                {
                  v90 = std::basic_string<char16_t>::basic_string(&v124, &__dst, 0, v88, v38);
                  std::basic_string<char16_t>::append(v90, (const std::basic_string<char16_t>::value_type *)"a", 1uLL);
                  goto LABEL_176;
                }
                v106 = v42 - 2;
                if (v42 >= 2)
                {
                  v107 = 0;
                  v108 = &__dst;
                  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                    v108 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                  v109 = (char *)v108 + 2 * v106;
                  do
                  {
                    v110 = *(unsigned __int16 *)&v109[v107 * 2];
                    v111 = (unsigned __int16)word_1CB73CF92[v107];
                  }
                  while (v111 == v110 && v107++ != 1);
                  if (v111 == v110)
                  {
                    v113 = std::basic_string<char16_t>::basic_string(&v124, &__dst, 0, v106, v38);
                    std::basic_string<char16_t>::append(v113, word_1CB73CF56, 2uLL);
                    goto LABEL_176;
                  }
                }
              }
            }
          }
        }
LABEL_51:
        if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(&v117, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
          goto LABEL_55;
        }
        *(_OWORD *)&v117.__r_.__value_.__l.__data_ = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
        v44 = __dst.__r_.__value_.__r.__words[2];
LABEL_53:
        v117.__r_.__value_.__r.__words[2] = v44;
LABEL_55:
        if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__dst.__r_.__value_.__l.__data_);
        __dst = v117;
        if (v25 < 0)
          operator delete(v26);
        goto LABEL_59;
      }
    }
    memmove(p_dst, a3, 2 * a4);
    goto LABEL_15;
  }
  if ((SHIBYTE(v120) & 0x80000000) == 0)
  {
    *(_OWORD *)a1 = *(_OWORD *)__p;
    v18 = v120;
LABEL_187:
    *(_QWORD *)(a1 + 16) = v18;
    goto LABEL_188;
  }
  std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)a1, (const std::basic_string<char16_t>::value_type *)__p[0], (std::basic_string<char16_t>::size_type)__p[1]);
LABEL_188:
  *(_BYTE *)(a1 + 24) = 1;
  if (v17 && SHIBYTE(v120) < 0)
    operator delete(__p[0]);
LABEL_191:
  __p[0] = &v122;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
  __p[0] = &v123;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
}

void sub_1CB525C18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,char a30)
{
  void *v30;
  int v31;
  int v32;
  uint64_t v33;

  if (*(char *)(v33 - 81) < 0)
    operator delete(*(void **)(v33 - 104));
  if (v31 < 0)
    operator delete(v30);
  if (a22 < 0)
    operator delete(__p);
  if (v32)
  {
    if (a28 < 0)
      operator delete(a23);
  }
  a23 = &a30;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a23);
  a23 = (char *)(v33 - 128);
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a23);
  _Unwind_Resume(a1);
}

uint64_t **com::apple::siri::tokenizer::data::config_ko::getContent@<X0>(uint64_t **a1@<X8>)
{
  __int128 v3;
  const char *v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v3 = xmmword_1E8676A40;
  v4 = "c";
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

void morphun::grammar::synthesis::ArGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::ArGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  uint64_t *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  morphun::grammar::synthesis::GrammemeConstants *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  morphun::grammar::synthesis::GrammemeConstants *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  morphun::grammar::synthesis::GrammemeConstants *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t i;
  void *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *BinaryProperties;
  uint64_t j;
  uint64_t v79;
  uint64_t *v80;
  char *v81;
  uint64_t v82;
  morphun::grammar::synthesis::ArGrammarSynthesizer_ArticleLookupFunction *v83;
  morphun::grammar::synthesis::ArGrammarSynthesizer_ArticleLookupFunction *v84;
  morphun::grammar::synthesis::ArGrammarSynthesizer_ArticleLookupFunction *v85;
  uint64_t *v86;
  morphun::util::LocaleUtils *v87;
  morphun::grammar::synthesis::GrammemeConstants *v88;
  uint64_t v89;
  __int128 v90;
  uint64_t v91;
  __int128 v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  __int128 v96;
  uint64_t v97;
  __int128 v98;
  uint64_t k;
  uint64_t m;
  morphun::util::LocaleUtils *v101;
  morphun::grammar::synthesis::GrammemeConstants *v102;
  uint64_t v103;
  __int128 v104;
  uint64_t v105;
  __int128 v106;
  uint64_t v107;
  __int128 v108;
  uint64_t v109;
  __int128 v110;
  uint64_t v111;
  __int128 v112;
  uint64_t v113;
  __int128 v114;
  uint64_t n;
  uint64_t ii;
  uint64_t *v117;
  morphun::grammar::synthesis *v118;
  uint64_t *v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  uint64_t *v124;
  morphun::grammar::synthesis::GrammemeConstants *v125;
  uint64_t v126;
  uint64_t v127;
  __int128 v128;
  uint64_t v129;
  __int128 v130;
  unsigned __int8 v131;
  uint64_t v132;
  __int128 v133;
  uint64_t *v134;
  morphun::grammar::synthesis *v135;
  uint64_t jj;
  uint64_t v137;
  uint64_t *v138;
  uint64_t *v139;
  _QWORD *v140;
  morphun::grammar::synthesis::ArGrammarSynthesizer *v141;
  morphun::grammar::synthesis::GrammemeConstants *v142;
  std::basic_string<char16_t> *v143;
  std::basic_string<char16_t> *v144;
  std::basic_string<char16_t> *v145;
  std::basic_string<char16_t> *p_dst;
  std::basic_string<char16_t> *v147;
  void **p_data;
  void *v149[2];
  char v150;
  std::basic_string<char16_t> **v151;
  char v152;
  std::basic_string<char16_t> *p_p;
  _QWORD *v154;
  uint64_t v155;
  std::basic_string<char16_t> __p;
  std::basic_string<char16_t> v157;
  std::basic_string<char16_t> v158;
  uint64_t v159;
  std::basic_string<char16_t> __dst;
  std::basic_string<char16_t> v161;
  std::basic_string<char16_t> v162;
  __int128 v163;
  _QWORD *v164;
  uint64_t v165;

  v165 = *MEMORY[0x1E0C80C00];
  v3 = (uint64_t *)operator new();
  *v3 = (uint64_t)&off_1E866E160;
  v142 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::ARABIC((morphun::util::LocaleUtils *)v3);
  v4 = morphun::grammar::synthesis::GrammemeConstants::POS_NOUN(v142);
  v5 = *(char *)(v4 + 23);
  if (v5 >= 0)
    v6 = v4;
  else
    v6 = *(_QWORD *)v4;
  if (v5 >= 0)
    v7 = *(unsigned __int8 *)(v4 + 23);
  else
    v7 = *(_QWORD *)(v4 + 8);
  v8 = morphun::grammar::synthesis::GrammemeConstants::POS_ADJECTIVE((morphun::grammar::synthesis::GrammemeConstants *)v4);
  v9 = *(char *)(v8 + 23);
  if (v9 >= 0)
    v10 = v8;
  else
    v10 = *(_QWORD *)v8;
  if (v9 >= 0)
    v11 = *(unsigned __int8 *)(v8 + 23);
  else
    v11 = *(_QWORD *)(v8 + 8);
  v12 = morphun::grammar::synthesis::GrammemeConstants::POS_VERB((morphun::grammar::synthesis::GrammemeConstants *)v8);
  v13 = *(unsigned __int8 *)(v12 + 23);
  v14 = *(_QWORD *)v12;
  v15 = *(_QWORD *)(v12 + 8);
  v16 = (morphun::grammar::synthesis::GrammemeConstants *)operator new(0x30uLL);
  v141 = this;
  __dst.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)v16 + 48;
  __dst.__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)v16 + 48;
  if ((v13 & 0x80u) == 0)
    v17 = v12;
  else
    v17 = v14;
  if ((v13 & 0x80u) == 0)
    v18 = v13;
  else
    v18 = v15;
  *(_QWORD *)v16 = v6;
  *((_QWORD *)v16 + 1) = v7;
  *((_QWORD *)v16 + 2) = v10;
  *((_QWORD *)v16 + 3) = v11;
  *((_QWORD *)v16 + 4) = v17;
  *((_QWORD *)v16 + 5) = v18;
  __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v16;
  v19 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(v16);
  v20 = *(char *)(v19 + 23);
  if (v20 >= 0)
    v21 = v19;
  else
    v21 = *(_QWORD *)v19;
  if (v20 >= 0)
    v22 = *(unsigned __int8 *)(v19 + 23);
  else
    v22 = *(_QWORD *)(v19 + 8);
  v23 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE((morphun::grammar::synthesis::GrammemeConstants *)v19);
  v24 = *(unsigned __int8 *)(v23 + 23);
  v25 = *(_QWORD *)v23;
  v26 = *(_QWORD *)(v23 + 8);
  v161.__r_.__value_.__r.__words[0] = 0;
  v27 = (morphun::grammar::synthesis::GrammemeConstants *)operator new(0x20uLL);
  v161.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)v27 + 32;
  v161.__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)v27 + 32;
  if ((v24 & 0x80u) == 0)
    v28 = v23;
  else
    v28 = v25;
  if ((v24 & 0x80u) == 0)
    v29 = v24;
  else
    v29 = v26;
  *(_QWORD *)v27 = v21;
  *((_QWORD *)v27 + 1) = v22;
  *((_QWORD *)v27 + 2) = v28;
  *((_QWORD *)v27 + 3) = v29;
  v161.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v27;
  v30 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v27);
  v31 = *(char *)(v30 + 23);
  if (v31 >= 0)
    v32 = v30;
  else
    v32 = *(_QWORD *)v30;
  if (v31 >= 0)
    v33 = *(unsigned __int8 *)(v30 + 23);
  else
    v33 = *(_QWORD *)(v30 + 8);
  v34 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_DUAL((morphun::grammar::synthesis::GrammemeConstants *)v30);
  v35 = *(char *)(v34 + 23);
  if (v35 >= 0)
    v36 = v34;
  else
    v36 = *(_QWORD *)v34;
  if (v35 >= 0)
    v37 = *(unsigned __int8 *)(v34 + 23);
  else
    v37 = *(_QWORD *)(v34 + 8);
  v38 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v34);
  v39 = *(unsigned __int8 *)(v38 + 23);
  v41 = *(_QWORD *)v38;
  v40 = *(_QWORD *)(v38 + 8);
  v162.__r_.__value_.__r.__words[0] = 0;
  v42 = (morphun::grammar::synthesis::GrammemeConstants *)operator new(0x30uLL);
  v162.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)v42 + 48;
  v162.__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)v42 + 48;
  if ((v39 & 0x80u) == 0)
    v43 = v38;
  else
    v43 = v41;
  if ((v39 & 0x80u) == 0)
    v44 = v39;
  else
    v44 = v40;
  *(_QWORD *)v42 = v32;
  *((_QWORD *)v42 + 1) = v33;
  *((_QWORD *)v42 + 2) = v36;
  *((_QWORD *)v42 + 3) = v37;
  *((_QWORD *)v42 + 4) = v43;
  *((_QWORD *)v42 + 5) = v44;
  v162.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v42;
  v45 = morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_INDEFINITE(v42);
  v46 = *(char *)(v45 + 23);
  if (v46 >= 0)
    v47 = v45;
  else
    v47 = *(_QWORD *)v45;
  if (v46 >= 0)
    v48 = *(unsigned __int8 *)(v45 + 23);
  else
    v48 = *(_QWORD *)(v45 + 8);
  v49 = morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_CONSTRUCT((morphun::grammar::synthesis::GrammemeConstants *)v45);
  v50 = *(char *)(v49 + 23);
  if (v50 >= 0)
    v51 = v49;
  else
    v51 = *(_QWORD *)v49;
  if (v50 >= 0)
    v52 = *(unsigned __int8 *)(v49 + 23);
  else
    v52 = *(_QWORD *)(v49 + 8);
  v53 = morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_DEFINITE((morphun::grammar::synthesis::GrammemeConstants *)v49);
  v54 = *(unsigned __int8 *)(v53 + 23);
  v56 = *(_QWORD *)v53;
  v55 = *(_QWORD *)(v53 + 8);
  *(_QWORD *)&v163 = 0;
  v57 = operator new(0x30uLL);
  *((_QWORD *)&v163 + 1) = v57 + 6;
  v164 = v57 + 6;
  if ((v54 & 0x80u) == 0)
    v58 = v53;
  else
    v58 = v56;
  if ((v54 & 0x80u) == 0)
    v59 = v54;
  else
    v59 = v55;
  *v57 = v47;
  v57[1] = v48;
  v57[2] = v51;
  v57[3] = v52;
  v57[4] = v58;
  v57[5] = v59;
  *(_QWORD *)&v163 = v57;
  memset(&__p, 0, sizeof(__p));
  __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x60uLL);
  __p.__r_.__value_.__l.__size_ = __p.__r_.__value_.__r.__words[0];
  __p.__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[0] + 96;
  v60 = (uint64_t)v141;
  __p.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<std::u16string_view>>,std::vector<std::u16string_view> const*,std::vector<std::u16string_view> const*,std::vector<std::u16string_view>*>((uint64_t)&__p.__r_.__value_.__r.__words[2], (uint64_t)&__dst, (uint64_t)&v165, __p.__r_.__value_.__l.__data_);
  p_p = 0;
  v154 = 0;
  v155 = 0;
  morphun::dialog::DictionaryLookupInflector::DictionaryLookupInflector(v3 + 1, v142, (uint64_t)&__p, (uint64_t **)&p_p, 0);
  v149[0] = &p_p;
  std::vector<std::vector<std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100]((void ***)v149);
  p_p = &__p;
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_p);
  for (i = 0; i != -96; i -= 24)
  {
    v62 = *(void **)((char *)&v163 + i);
    if (v62)
    {
      *(_QWORD *)((char *)&v163 + i + 8) = v62;
      operator delete(v62);
    }
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "c");
  v63 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)v141 + 8, (unsigned __int16 *)&__dst);
  v64 = (char *)v141 + 16;
  if ((morphun::grammar::synthesis::ArGrammarSynthesizer *)((char *)v141 + 16) == (morphun::grammar::synthesis::ArGrammarSynthesizer *)v63)
    v65 = 0;
  else
    v65 = *(_QWORD *)(v63 + 56);
  npc<morphun::dialog::SemanticFeature const>(v65);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  v3[30] = v65;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"count");
  v66 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)v141 + 8, (unsigned __int16 *)&__dst);
  if (v64 == (char *)v66)
    v67 = 0;
  else
    v67 = *(_QWORD *)(v66 + 56);
  npc<morphun::dialog::SemanticFeature const>(v67);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  v3[31] = v67;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"gender");
  v68 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)v141 + 8, (unsigned __int16 *)&__dst);
  if (v64 == (char *)v68)
    v69 = 0;
  else
    v69 = *(_QWORD *)(v68 + 56);
  npc<morphun::dialog::SemanticFeature const>(v69);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  v3[32] = v69;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "d");
  v70 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)v141 + 8, (unsigned __int16 *)&__dst);
  if (v64 == (char *)v70)
    v71 = 0;
  else
    v71 = *(_QWORD *)(v70 + 56);
  npc<morphun::dialog::SemanticFeature const>(v71);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  v3[33] = v71;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"countPronoun");
  v72 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)v141 + 8, (unsigned __int16 *)&__dst);
  if (v64 == (char *)v72)
    v73 = 0;
  else
    v73 = *(_QWORD *)(v72 + 56);
  npc<morphun::dialog::SemanticFeature const>(v73);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  v3[34] = v73;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "g");
  v74 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)v141 + 8, (unsigned __int16 *)&__dst);
  if (v64 == (char *)v74)
    v75 = 0;
  else
    v75 = *(_QWORD *)(v74 + 56);
  npc<morphun::dialog::SemanticFeature const>(v75);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  v3[35] = v75;
  v76 = v3[2];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"noun");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v161, "a");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v162, (char *)L"verb");
  memset(&__p, 0, sizeof(__p));
  p_p = &__p;
  LOBYTE(v154) = 0;
  __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x48uLL);
  __p.__r_.__value_.__l.__size_ = __p.__r_.__value_.__r.__words[0];
  __p.__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[0] + 72;
  __p.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&__p.__r_.__value_.__r.__words[2], (__int128 *)&__dst, &v163, (std::basic_string<char16_t> *)__p.__r_.__value_.__l.__data_);
  BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v76, v3 + 36, (uint64_t *)&__p);
  morphun::util::Validate::notNull<long long>((uint64_t)BinaryProperties);
  p_p = &__p;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_p);
  for (j = 0; j != -9; j -= 3)
  {
    if (SHIBYTE(v162.__r_.__value_.__r.__words[j + 2]) < 0)
      operator delete(*(void **)((char *)&v162.__r_.__value_.__l.__data_ + j * 8));
  }
  v79 = v3[2];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"verb");
  memset(&__dst, 0, sizeof(__dst));
  p_p = &__dst;
  LOBYTE(v154) = 0;
  __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x18uLL);
  __dst.__r_.__value_.__l.__size_ = __dst.__r_.__value_.__r.__words[0];
  __dst.__r_.__value_.__r.__words[2] = __dst.__r_.__value_.__r.__words[0] + 24;
  __dst.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&__dst.__r_.__value_.__r.__words[2], (__int128 *)&__p, (__int128 *)&v157, (std::basic_string<char16_t> *)__dst.__r_.__value_.__l.__data_);
  v80 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v79, v3 + 37, (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v80);
  p_p = &__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v81 = (char *)v3 + *(_QWORD *)(*v3 - 56);
  v82 = *((_QWORD *)v141 + 29);
  if (v82)
    (*(void (**)(uint64_t))(*(_QWORD *)v82 + 16))(v82);
  *((_QWORD *)v141 + 29) = v81;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"withWithPrep");
  v83 = (morphun::grammar::synthesis::ArGrammarSynthesizer_ArticleLookupFunction *)operator new();
  *(_QWORD *)v83 = &off_1E865EB48;
  morphun::grammar::synthesis::ArGrammarSynthesizer_ArticleLookupFunction::ArGrammarSynthesizer_ArticleLookupFunction(v83, (const morphun::dialog::SemanticFeatureModel *)&off_1E86689C8, (uint64_t)v141);
  *(_QWORD *)v83 = &off_1E866F9B8;
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)v141, (unsigned __int16 *)&__dst, v83);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "w");
  v84 = (morphun::grammar::synthesis::ArGrammarSynthesizer_ArticleLookupFunction *)operator new();
  *(_QWORD *)v84 = &off_1E865E650;
  morphun::grammar::synthesis::ArGrammarSynthesizer_ArticleLookupFunction::ArGrammarSynthesizer_ArticleLookupFunction(v84, (const morphun::dialog::SemanticFeatureModel *)&off_1E8668880, (uint64_t)v141);
  *(_QWORD *)v84 = &off_1E866F780;
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)v141, (unsigned __int16 *)&__dst, v84);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "w");
  v85 = (morphun::grammar::synthesis::ArGrammarSynthesizer_ArticleLookupFunction *)operator new();
  *(_QWORD *)v85 = &off_1E865E4F8;
  morphun::grammar::synthesis::ArGrammarSynthesizer_ArticleLookupFunction::ArGrammarSynthesizer_ArticleLookupFunction(v85, (const morphun::dialog::SemanticFeatureModel *)&off_1E8668828, (uint64_t)v141);
  *(_QWORD *)v85 = &off_1E866F6F8;
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)v141, (unsigned __int16 *)&__dst, v85);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  v154 = 0;
  v155 = 0;
  p_p = (std::basic_string<char16_t> *)&v154;
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>((uint64_t **)&p_p, 273, word_1CB73C986);
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>((uint64_t **)&p_p, 289, word_1CB73C986);
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>((uint64_t **)&p_p, 275, word_1CB736FE8);
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>((uint64_t **)&p_p, 291, word_1CB736FE8);
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>((uint64_t **)&p_p, 529, word_1CB736FEE);
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>((uint64_t **)&p_p, 545, word_1CB736FEE);
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>((uint64_t **)&p_p, 530, word_1CB736FF2);
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>((uint64_t **)&p_p, 546, word_1CB736FF2);
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>((uint64_t **)&p_p, 531, word_1CB736FFA);
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>((uint64_t **)&p_p, 547, word_1CB737000);
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>((uint64_t **)&p_p, 785, word_1CB737006);
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>((uint64_t **)&p_p, 801, word_1CB73700A);
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>((uint64_t **)&p_p, 786, word_1CB737010);
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>((uint64_t **)&p_p, 802, word_1CB737010);
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>((uint64_t **)&p_p, 787, word_1CB737018);
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>((uint64_t **)&p_p, 803, word_1CB73701E);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"withPossessivePron");
  v86 = (uint64_t *)operator new();
  *v86 = (uint64_t)&off_1E865D4E8;
  morphun::grammar::synthesis::ArGrammarSynthesizer_ArticleLookupFunction::ArGrammarSynthesizer_ArticleLookupFunction((morphun::grammar::synthesis::ArGrammarSynthesizer_ArticleLookupFunction *)v86, (const morphun::dialog::SemanticFeatureModel *)&off_1E8668310, (uint64_t)v141);
  *v86 = (uint64_t)&off_1E866ED20;
  std::map<int,std::u16string_view>::map[abi:ne180100](v86 + 6, &p_p);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)v141, (unsigned __int16 *)&__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v86 + *(_QWORD *)(*v86 - 56)));
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v149, (char *)L"gender");
  v87 = (morphun::util::LocaleUtils *)operator new();
  v88 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::ARABIC(v87);
  v89 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(v88);
  if (*(char *)(v89 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&__p, *(const std::basic_string<char16_t>::value_type **)v89, *(_QWORD *)(v89 + 8));
  }
  else
  {
    v90 = *(_OWORD *)v89;
    __p.__r_.__value_.__r.__words[2] = *(_QWORD *)(v89 + 16);
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v90;
  }
  v91 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE((morphun::grammar::synthesis::GrammemeConstants *)v89);
  if (*(char *)(v91 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v157, *(const std::basic_string<char16_t>::value_type **)v91, *(_QWORD *)(v91 + 8));
  }
  else
  {
    v92 = *(_OWORD *)v91;
    v157.__r_.__value_.__r.__words[2] = *(_QWORD *)(v91 + 16);
    *(_OWORD *)&v157.__r_.__value_.__l.__data_ = v92;
  }
  p_dst = 0;
  v147 = 0;
  p_data = 0;
  __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&p_dst;
  LOBYTE(__dst.__r_.__value_.__r.__words[1]) = 0;
  p_dst = (std::basic_string<char16_t> *)operator new(0x30uLL);
  v147 = p_dst;
  p_data = (void **)&p_dst[2].__r_.__value_.__l.__data_;
  v147 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&p_data, (__int128 *)&__p, (__int128 *)&v158, p_dst);
  v93 = morphun::grammar::synthesis::GrammemeConstants::POS_NOUN((morphun::grammar::synthesis::GrammemeConstants *)v147);
  if (*(char *)(v93 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&__dst, *(const std::basic_string<char16_t>::value_type **)v93, *(_QWORD *)(v93 + 8));
  }
  else
  {
    v94 = *(_OWORD *)v93;
    __dst.__r_.__value_.__r.__words[2] = *(_QWORD *)(v93 + 16);
    *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v94;
  }
  v95 = morphun::grammar::synthesis::GrammemeConstants::POS_ADJECTIVE((morphun::grammar::synthesis::GrammemeConstants *)v93);
  if (*(char *)(v95 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v161, *(const std::basic_string<char16_t>::value_type **)v95, *(_QWORD *)(v95 + 8));
  }
  else
  {
    v96 = *(_OWORD *)v95;
    v161.__r_.__value_.__r.__words[2] = *(_QWORD *)(v95 + 16);
    *(_OWORD *)&v161.__r_.__value_.__l.__data_ = v96;
  }
  v97 = morphun::grammar::synthesis::GrammemeConstants::POS_VERB((morphun::grammar::synthesis::GrammemeConstants *)v95);
  if (*(char *)(v97 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v162, *(const std::basic_string<char16_t>::value_type **)v97, *(_QWORD *)(v97 + 8));
  }
  else
  {
    v98 = *(_OWORD *)v97;
    v162.__r_.__value_.__r.__words[2] = *(_QWORD *)(v97 + 16);
    *(_OWORD *)&v162.__r_.__value_.__l.__data_ = v98;
  }
  v143 = 0;
  v144 = 0;
  v145 = 0;
  v151 = &v143;
  v152 = 0;
  v143 = (std::basic_string<char16_t> *)operator new(0x48uLL);
  v144 = v143;
  v145 = v143 + 3;
  v144 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v145, (__int128 *)&__dst, &v163, v143);
  morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction((uint64_t)v87, v88, (uint64_t *)&p_dst, (__int128 **)&v143);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)v141, (unsigned __int16 *)v149, (morphun::util::LocaleUtils *)((char *)v87 + *(_QWORD *)(*(_QWORD *)v87 - 56)));
  v151 = &v143;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v151);
  for (k = 0; k != -9; k -= 3)
  {
    if (SHIBYTE(v162.__r_.__value_.__r.__words[k + 2]) < 0)
      operator delete(*(void **)((char *)&v162.__r_.__value_.__l.__data_ + k * 8));
  }
  __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&p_dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__dst);
  for (m = 0; m != -6; m -= 3)
  {
    if (SHIBYTE(v157.__r_.__value_.__r.__words[m + 2]) < 0)
      operator delete(*(void **)((char *)&__p + m * 8 + 24));
  }
  if (v150 < 0)
    operator delete(v149[0]);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v149, (char *)L"count");
  v101 = (morphun::util::LocaleUtils *)operator new();
  v102 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::ARABIC(v101);
  v103 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v102);
  if (*(char *)(v103 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&__dst, *(const std::basic_string<char16_t>::value_type **)v103, *(_QWORD *)(v103 + 8));
  }
  else
  {
    v104 = *(_OWORD *)v103;
    __dst.__r_.__value_.__r.__words[2] = *(_QWORD *)(v103 + 16);
    *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v104;
  }
  v105 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v103);
  if (*(char *)(v105 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v161, *(const std::basic_string<char16_t>::value_type **)v105, *(_QWORD *)(v105 + 8));
  }
  else
  {
    v106 = *(_OWORD *)v105;
    v161.__r_.__value_.__r.__words[2] = *(_QWORD *)(v105 + 16);
    *(_OWORD *)&v161.__r_.__value_.__l.__data_ = v106;
  }
  v107 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_DUAL((morphun::grammar::synthesis::GrammemeConstants *)v105);
  if (*(char *)(v107 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v162, *(const std::basic_string<char16_t>::value_type **)v107, *(_QWORD *)(v107 + 8));
  }
  else
  {
    v108 = *(_OWORD *)v107;
    v162.__r_.__value_.__r.__words[2] = *(_QWORD *)(v107 + 16);
    *(_OWORD *)&v162.__r_.__value_.__l.__data_ = v108;
  }
  p_dst = 0;
  v147 = 0;
  p_data = 0;
  __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&p_dst;
  LOBYTE(__p.__r_.__value_.__r.__words[1]) = 0;
  p_dst = (std::basic_string<char16_t> *)operator new(0x48uLL);
  v147 = p_dst;
  p_data = (void **)&p_dst[3].__r_.__value_.__l.__data_;
  v147 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&p_data, (__int128 *)&__dst, &v163, p_dst);
  v109 = morphun::grammar::synthesis::GrammemeConstants::POS_NOUN((morphun::grammar::synthesis::GrammemeConstants *)v147);
  if (*(char *)(v109 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&__p, *(const std::basic_string<char16_t>::value_type **)v109, *(_QWORD *)(v109 + 8));
  }
  else
  {
    v110 = *(_OWORD *)v109;
    __p.__r_.__value_.__r.__words[2] = *(_QWORD *)(v109 + 16);
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v110;
  }
  v111 = morphun::grammar::synthesis::GrammemeConstants::POS_ADJECTIVE((morphun::grammar::synthesis::GrammemeConstants *)v109);
  if (*(char *)(v111 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v157, *(const std::basic_string<char16_t>::value_type **)v111, *(_QWORD *)(v111 + 8));
  }
  else
  {
    v112 = *(_OWORD *)v111;
    v157.__r_.__value_.__r.__words[2] = *(_QWORD *)(v111 + 16);
    *(_OWORD *)&v157.__r_.__value_.__l.__data_ = v112;
  }
  v113 = morphun::grammar::synthesis::GrammemeConstants::POS_VERB((morphun::grammar::synthesis::GrammemeConstants *)v111);
  if (*(char *)(v113 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v158, *(const std::basic_string<char16_t>::value_type **)v113, *(_QWORD *)(v113 + 8));
  }
  else
  {
    v114 = *(_OWORD *)v113;
    v158.__r_.__value_.__r.__words[2] = *(_QWORD *)(v113 + 16);
    *(_OWORD *)&v158.__r_.__value_.__l.__data_ = v114;
  }
  v143 = 0;
  v144 = 0;
  v145 = 0;
  v151 = &v143;
  v152 = 0;
  v143 = (std::basic_string<char16_t> *)operator new(0x48uLL);
  v144 = v143;
  v145 = v143 + 3;
  v144 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v145, (__int128 *)&__p, (__int128 *)&v159, v143);
  morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction((uint64_t)v101, v102, (uint64_t *)&p_dst, (__int128 **)&v143);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)v141, (unsigned __int16 *)v149, (morphun::util::LocaleUtils *)((char *)v101 + *(_QWORD *)(*(_QWORD *)v101 - 56)));
  v151 = &v143;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v151);
  for (n = 0; n != -9; n -= 3)
  {
    if (SHIBYTE(v158.__r_.__value_.__r.__words[n + 2]) < 0)
      operator delete(*(void **)((char *)&v158.__r_.__value_.__l.__data_ + n * 8));
  }
  __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&p_dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  for (ii = 0; ii != -9; ii -= 3)
  {
    if (SHIBYTE(v162.__r_.__value_.__r.__words[ii + 2]) < 0)
      operator delete(*(void **)((char *)&v162.__r_.__value_.__l.__data_ + ii * 8));
  }
  if (v150 < 0)
    operator delete(v149[0]);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v149, "d");
  v117 = (uint64_t *)operator new();
  *v117 = (uint64_t)&off_1E8655C58;
  v118 = (morphun::grammar::synthesis *)morphun::util::LocaleUtils::ARABIC((morphun::util::LocaleUtils *)v117);
  v119 = (uint64_t *)morphun::grammar::synthesis::DEFINITENESS_VALUES(v118);
  morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction((uint64_t)v117, (uint64_t *)off_1E8655F50, v118, v119);
  *v117 = (uint64_t)&off_1E8656538;
  v120 = std::map<int,std::u16string_view>::map[abi:ne180100](v117 + 26, &p_p);
  v117[29] = 0;
  v117[30] = 0;
  v117[31] = 0;
  v121 = v117[2];
  v122 = morphun::grammar::synthesis::GrammemeConstants::POS_PROPER_NOUN((morphun::grammar::synthesis::GrammemeConstants *)v120);
  if (*(char *)(v122 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&__p, *(const std::basic_string<char16_t>::value_type **)v122, *(_QWORD *)(v122 + 8));
  }
  else
  {
    v123 = *(_OWORD *)v122;
    __p.__r_.__value_.__r.__words[2] = *(_QWORD *)(v122 + 16);
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v123;
  }
  memset(&__dst, 0, sizeof(__dst));
  p_dst = &__dst;
  LOBYTE(v147) = 0;
  __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x18uLL);
  __dst.__r_.__value_.__l.__size_ = __dst.__r_.__value_.__r.__words[0];
  __dst.__r_.__value_.__r.__words[2] = __dst.__r_.__value_.__r.__words[0] + 24;
  __dst.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&__dst.__r_.__value_.__r.__words[2], (__int128 *)&__p, (__int128 *)&v157, (std::basic_string<char16_t> *)__dst.__r_.__value_.__l.__data_);
  v124 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v121, v117 + 29, (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v124);
  p_dst = &__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_dst);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v126 = v117[2];
  v127 = morphun::grammar::synthesis::GrammemeConstants::POS_NOUN(v125);
  if (*(char *)(v127 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&__dst, *(const std::basic_string<char16_t>::value_type **)v127, *(_QWORD *)(v127 + 8));
  }
  else
  {
    v128 = *(_OWORD *)v127;
    __dst.__r_.__value_.__r.__words[2] = *(_QWORD *)(v127 + 16);
    *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v128;
  }
  v129 = morphun::grammar::synthesis::GrammemeConstants::POS_ADJECTIVE((morphun::grammar::synthesis::GrammemeConstants *)v127);
  if (*(char *)(v129 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v161, *(const std::basic_string<char16_t>::value_type **)v129, *(_QWORD *)(v129 + 8));
  }
  else
  {
    v130 = *(_OWORD *)v129;
    v161.__r_.__value_.__r.__words[2] = *(_QWORD *)(v129 + 16);
    *(_OWORD *)&v161.__r_.__value_.__l.__data_ = v130;
  }
  if ((v131 & 1) == 0
  {
    v140 = (_QWORD *)operator new();
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v140, "p");
    morphun::grammar::synthesis::GrammemeConstants::POS_PARTICLE(void)::POS_PARTICLE_ = (uint64_t)v140;
    v60 = (uint64_t)v141;
  }
  v132 = npc<std::basic_string<char16_t>>(morphun::grammar::synthesis::GrammemeConstants::POS_PARTICLE(void)::POS_PARTICLE_);
  if (*(char *)(v132 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v162, *(const std::basic_string<char16_t>::value_type **)v132, *(_QWORD *)(v132 + 8));
  }
  else
  {
    v133 = *(_OWORD *)v132;
    v162.__r_.__value_.__r.__words[2] = *(_QWORD *)(v132 + 16);
    *(_OWORD *)&v162.__r_.__value_.__l.__data_ = v133;
  }
  memset(&__p, 0, sizeof(__p));
  p_dst = &__p;
  LOBYTE(v147) = 0;
  __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x48uLL);
  __p.__r_.__value_.__l.__size_ = __p.__r_.__value_.__r.__words[0];
  __p.__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[0] + 72;
  __p.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&__p.__r_.__value_.__r.__words[2], (__int128 *)&__dst, &v163, (std::basic_string<char16_t> *)__p.__r_.__value_.__l.__data_);
  v134 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v126, v117 + 31, (uint64_t *)&__p);
  morphun::util::Validate::notNull<long long>((uint64_t)v134);
  p_dst = &__p;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_dst);
  for (jj = 0; jj != -9; jj -= 3)
  {
    if (SHIBYTE(v162.__r_.__value_.__r.__words[jj + 2]) < 0)
      operator delete(*(void **)((char *)&v162.__r_.__value_.__l.__data_ + jj * 8));
  }
  v137 = v117[2];
  v138 = (uint64_t *)morphun::grammar::synthesis::DEFINITENESS_VALUES(v135);
  v139 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v137, v117 + 30, v138);
  morphun::util::Validate::notNull<long long>((uint64_t)v139);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName(v60, (unsigned __int16 *)v149, (morphun::dialog::DefaultFeatureFunction *)((char *)v117 + *(_QWORD *)(*v117 - 56)));
  if (v150 < 0)
    operator delete(v149[0]);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(v154);
}

void sub_1CB526F94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, morphun::dialog::DictionaryLookupInflector *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,_QWORD *a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  morphun::dialog::DictionaryLookupFunction *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  MEMORY[0x1D179D2EC](v37, 0x1012C40EC159624);
  while (1)
  {
    if (*(char *)(v36 - 1) < 0)
      operator delete(*(void **)(v36 - 24));
    v36 -= 24;
    if (v36 == v38 - 192)
    {
      std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*((_QWORD **)v35 + 27));
      morphun::dialog::DictionaryLookupFunction::~DictionaryLookupFunction(v35, (uint64_t *)off_1E8655F50);
      MEMORY[0x1D179D2EC](v35, 0x10F3C4048E31FC7);
      if (a24 < 0)
        operator delete(__p);
      std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(a28);
      _Unwind_Resume(a1);
    }
  }
}

void std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>(uint64_t **a1, int a2, _WORD *a3)
{
  _DWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t **v10;
  uint64_t *v11;
  uint64_t **v12;
  int v13;

  v6 = operator new(0x38uLL);
  v6[8] = a2;
  *((_QWORD *)v6 + 5) = a3;
  if (*a3)
  {
    v7 = 0;
    do
      v8 = v7 + 1;
    while (a3[++v7]);
  }
  else
  {
    v8 = 0;
  }
  *((_QWORD *)v6 + 6) = v8;
  v10 = a1 + 1;
  v11 = a1[1];
  if (v11)
  {
    do
    {
      while (1)
      {
        v12 = (uint64_t **)v11;
        v13 = *((_DWORD *)v11 + 8);
        if (v13 <= a2)
          break;
        v11 = *v12;
        v10 = v12;
        if (!*v12)
          goto LABEL_15;
      }
      if (v13 >= a2)
      {
        operator delete(v6);
        return;
      }
      v11 = v12[1];
    }
    while (v11);
    v10 = v12 + 1;
  }
  else
  {
    v12 = a1 + 1;
  }
LABEL_15:
  std::__tree<std::u16string_view>::__insert_node_at(a1, (uint64_t)v12, v10, (uint64_t *)v6);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ArGrammarSynthesizer::PronounCount>>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB5276D4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ArGrammarSynthesizer::Person>>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB52772C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ArGrammarSynthesizer::PronounGender>>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB527784(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::EnAnalyzer::~EnAnalyzer(void **this)
{
  *this = &off_1E865FA98;
  morphun::analysis::Analyzer::~Analyzer((morphun::analysis::Analyzer *)this, (uint64_t *)&off_1E8668D80);
}

{
  *this = &off_1E865FA98;
  morphun::analysis::Analyzer::~Analyzer((morphun::analysis::Analyzer *)this, (uint64_t *)&off_1E8668D80);
  JUMPOUT(0x1D179D2ECLL);
}

morphun::analysis::util::FilteringTokenFilter *morphun::analysis::EnAnalyzer::addStopFilter(morphun::analysis::EnAnalyzer *this, morphun::analysis::TokenStream *a2)
{
  morphun::analysis::util::FilteringTokenFilter *v4;

  v4 = (morphun::analysis::util::FilteringTokenFilter *)operator new();
  morphun::analysis::core::StopFilter::StopFilter(v4, (uint64_t)a2, *((_QWORD *)this + 8));
  return v4;
}

void sub_1CB527884(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10F1C40C2748A64);
  _Unwind_Resume(a1);
}

morphun::analysis::util::AttributeSource *morphun::analysis::EnAnalyzer::addWordNormalizationFilter(const char **this, morphun::analysis::TokenStream *a2)
{
  morphun::analysis::filter::ContractionExpandingFilter *v4;
  morphun::analysis::util::AttributeSource *v5;
  uint64_t i;
  morphun::util::LocaleUtils *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  std::basic_string<char16_t>::size_type v11;
  uint64_t v12;
  std::basic_string<char16_t>::size_type v13;
  std::basic_string<char16_t>::size_type v14;
  uint64_t v15;
  std::basic_string<char16_t> *v16;
  std::basic_string<char16_t> *v17;
  uint64_t v18;
  std::basic_string<char16_t>::size_type v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  morphun::grammar::synthesis::GrammemeConstants *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  uint64_t j;
  uint64_t k;
  _QWORD *v52;
  morphun::analysis::util::AttributeSource *v53;
  morphun::grammar::synthesis::GrammemeConstants *v55;
  uint64_t v56;
  void **v57[3];
  std::basic_string<char16_t> *v58;
  std::basic_string<char16_t> *v59;
  std::basic_string<char16_t> *v60;
  uint64_t *v61[3];
  morphun::grammar::synthesis::GrammemeConstants *v62;
  morphun::grammar::synthesis::GrammemeConstants *v63;
  _QWORD *v64;
  std::basic_string<char16_t> *v65;
  std::basic_string<char16_t>::size_type *p_size;
  std::basic_string<char16_t>::size_type *v67;
  void ***v68;
  std::basic_string<char16_t> v69;
  std::basic_string<char16_t> v70;
  __int128 __dst;
  _QWORD *v72;
  _QWORD *v73;
  _QWORD *v74;
  _QWORD *v75;
  __int128 v76;

  *(_QWORD *)&v76 = *MEMORY[0x1E0C80C00];
  v4 = (morphun::analysis::filter::ContractionExpandingFilter *)operator new();
  morphun::analysis::filter::ContractionExpandingFilter::ContractionExpandingFilter(v4, a2, this + 10);
  v5 = (morphun::analysis::util::AttributeSource *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"'s");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v73, (char *)word_1CB73E1EE);
  memset(&v69, 0, sizeof(v69));
  LOBYTE(p_size) = 0;
  v69.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x30uLL);
  v69.__r_.__value_.__l.__size_ = v69.__r_.__value_.__r.__words[0];
  v69.__r_.__value_.__r.__words[2] = v69.__r_.__value_.__r.__words[0] + 48;
  v69.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v69.__r_.__value_.__r.__words[2], &__dst, &v76, (std::basic_string<char16_t> *)v69.__r_.__value_.__l.__data_);
  morphun::analysis::filter::SuffixFilter::SuffixFilter(v5, (uint64_t)v4, (__int128 **)&v69);
  v65 = &v69;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v65);
  for (i = 0; i != -6; i -= 3)
  {
    if (SHIBYTE((&v75)[i]) < 0)
      operator delete((&v73)[i]);
  }
  v7 = (morphun::util::LocaleUtils *)operator new();
  v56 = (uint64_t)v5;
  *(_QWORD *)v7 = &off_1E866A910;
  v55 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::ENGLISH(v7);
  v8 = morphun::grammar::synthesis::GrammemeConstants::VERBTYPE_INFINITIVE(v55);
  v9 = *(char *)(v8 + 23);
  if (v9 >= 0)
    v10 = v8;
  else
    v10 = *(_QWORD *)v8;
  if (v9 >= 0)
    v11 = *(unsigned __int8 *)(v8 + 23);
  else
    v11 = *(_QWORD *)(v8 + 8);
  v12 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR((morphun::grammar::synthesis::GrammemeConstants *)v8);
  v13 = *(unsigned __int8 *)(v12 + 23);
  v15 = *(_QWORD *)v12;
  v14 = *(_QWORD *)(v12 + 8);
  v16 = (std::basic_string<char16_t> *)operator new(0x20uLL);
  v17 = v16;
  p_size = &v16[1].__r_.__value_.__l.__size_;
  v67 = &v16[1].__r_.__value_.__l.__size_;
  if ((v13 & 0x80u) == 0)
    v18 = v12;
  else
    v18 = v15;
  if ((v13 & 0x80u) == 0)
    v19 = v13;
  else
    v19 = v14;
  v16->__r_.__value_.__r.__words[0] = v10;
  v16->__r_.__value_.__l.__size_ = v11;
  v16->__r_.__value_.__r.__words[2] = v18;
  v16[1].__r_.__value_.__r.__words[0] = v19;
  v65 = v16;
  v20 = morphun::grammar::synthesis::GrammemeConstants::POS_NOUN((morphun::grammar::synthesis::GrammemeConstants *)v16);
  v21 = *(char *)(v20 + 23);
  if (v21 >= 0)
    v22 = v20;
  else
    v22 = *(_QWORD *)v20;
  if (v21 >= 0)
    v23 = *(unsigned __int8 *)(v20 + 23);
  else
    v23 = *(_QWORD *)(v20 + 8);
  v24 = morphun::grammar::synthesis::GrammemeConstants::POS_ADJECTIVE((morphun::grammar::synthesis::GrammemeConstants *)v20);
  v25 = *(char *)(v24 + 23);
  if (v25 >= 0)
    v26 = v24;
  else
    v26 = *(_QWORD *)v24;
  if (v25 >= 0)
    v27 = *(unsigned __int8 *)(v24 + 23);
  else
    v27 = *(_QWORD *)(v24 + 8);
  v28 = morphun::grammar::synthesis::GrammemeConstants::POS_PROPER_NOUN((morphun::grammar::synthesis::GrammemeConstants *)v24);
  v29 = *(unsigned __int8 *)(v28 + 23);
  v30 = *(_QWORD *)v28;
  v31 = *(_QWORD *)(v28 + 8);
  v32 = (morphun::grammar::synthesis::GrammemeConstants *)operator new(0x30uLL);
  *((_QWORD *)&__dst + 1) = (char *)v32 + 48;
  v72 = (_QWORD *)((char *)v32 + 48);
  if ((v29 & 0x80u) == 0)
    v33 = v28;
  else
    v33 = v30;
  if ((v29 & 0x80u) == 0)
    v34 = v29;
  else
    v34 = v31;
  *(_QWORD *)v32 = v22;
  *((_QWORD *)v32 + 1) = v23;
  *((_QWORD *)v32 + 2) = v26;
  *((_QWORD *)v32 + 3) = v27;
  *((_QWORD *)v32 + 4) = v33;
  *((_QWORD *)v32 + 5) = v34;
  *(_QWORD *)&__dst = v32;
  v35 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v32);
  v36 = *(char *)(v35 + 23);
  if (v36 >= 0)
    v37 = v35;
  else
    v37 = *(_QWORD *)v35;
  if (v36 >= 0)
    v38 = *(unsigned __int8 *)(v35 + 23);
  else
    v38 = *(_QWORD *)(v35 + 8);
  v39 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v35);
  v40 = *(unsigned __int8 *)(v39 + 23);
  v41 = *(_QWORD *)v39;
  v42 = *(_QWORD *)(v39 + 8);
  v73 = 0;
  v74 = 0;
  v75 = 0;
  v43 = operator new(0x20uLL);
  v74 = v43 + 4;
  v75 = v43 + 4;
  if ((v40 & 0x80u) == 0)
    v44 = v39;
  else
    v44 = v41;
  if ((v40 & 0x80u) == 0)
    v45 = v40;
  else
    v45 = v42;
  *v43 = v37;
  v43[1] = v38;
  v43[2] = v44;
  v43[3] = v45;
  v73 = v43;
  v63 = 0;
  v64 = 0;
  v62 = 0;
  v69.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v62;
  LOBYTE(v69.__r_.__value_.__r.__words[1]) = 0;
  v62 = (morphun::grammar::synthesis::GrammemeConstants *)operator new(0x30uLL);
  v63 = v62;
  v64 = (_QWORD *)((char *)v62 + 48);
  v63 = (morphun::grammar::synthesis::GrammemeConstants *)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<std::u16string_view>>,std::vector<std::u16string_view> const*,std::vector<std::u16string_view> const*,std::vector<std::u16string_view>*>((uint64_t)&v64, (uint64_t)&__dst, (uint64_t)&v76, v62);
  memset(v61, 0, sizeof(v61));
  v46 = morphun::grammar::synthesis::GrammemeConstants::POS_NOUN(v63);
  if (*(char *)(v46 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v69, *(const std::basic_string<char16_t>::value_type **)v46, *(_QWORD *)(v46 + 8));
  }
  else
  {
    v47 = *(_OWORD *)v46;
    v69.__r_.__value_.__r.__words[2] = *(_QWORD *)(v46 + 16);
    *(_OWORD *)&v69.__r_.__value_.__l.__data_ = v47;
  }
  v48 = morphun::grammar::synthesis::GrammemeConstants::POS_PROPER_NOUN((morphun::grammar::synthesis::GrammemeConstants *)v46);
  if (*(char *)(v48 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v70, *(const std::basic_string<char16_t>::value_type **)v48, *(_QWORD *)(v48 + 8));
  }
  else
  {
    v49 = *(_OWORD *)v48;
    v70.__r_.__value_.__r.__words[2] = *(_QWORD *)(v48 + 16);
    *(_OWORD *)&v70.__r_.__value_.__l.__data_ = v49;
  }
  v58 = 0;
  v59 = 0;
  v60 = 0;
  v58 = (std::basic_string<char16_t> *)operator new(0x30uLL);
  v59 = v58;
  v60 = v58 + 2;
  v59 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v60, (__int128 *)&v69, &__dst, v58);
  memset(v57, 0, sizeof(v57));
  morphun::analysis::stemmer::StemmableDictionaryLookupLemmaFilter::StemmableDictionaryLookupLemmaFilter((uint64_t)v7, (uint64_t *)&off_1E8669998, v56, v55, (uint64_t *)&v65, (uint64_t)&v62, v61, 3, (uint64_t *)&v58, (uint64_t *)v57);
  v68 = v57;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v68);
  v57[0] = (void **)&v58;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](v57);
  for (j = 0; j != -6; j -= 3)
  {
    if (SHIBYTE(v70.__r_.__value_.__r.__words[j + 2]) < 0)
      operator delete(*(void **)((char *)&v69 + j * 8 + 24));
  }
  v69.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v61;
  std::vector<std::vector<std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v69);
  v69.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v62;
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v69);
  for (k = 0; k != -6; k -= 3)
  {
    v52 = (&v73)[k];
    if (v52)
    {
      (&v74)[k] = v52;
      operator delete(v52);
    }
  }
  operator delete(v17);
  *(_QWORD *)v7 = &off_1E8672798;
  v53 = (morphun::analysis::util::AttributeSource *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"and");
  morphun::analysis::filter::AmpersandToAndFilter::AmpersandToAndFilter(v53, (uint64_t)v7, &__dst);
  if (SHIBYTE(v72) < 0)
    operator delete((void *)__dst);
  return v53;
}

void sub_1CB527D9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  uint64_t v34;
  uint64_t v35;

  if (*(char *)(v35 - 121) < 0)
    operator delete(*(void **)(v35 - 144));
  MEMORY[0x1D179D2EC](v34, 0x10F3C40C7D8954FLL);
  _Unwind_Resume(a1);
}

void morphun::Token_Explicit::toString(morphun::Token_Explicit *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  int v4;
  void *v5;
  std::basic_string<char16_t> *v6;
  std::basic_string<char16_t>::size_type size;
  void **v8;
  std::basic_string<char16_t>::size_type v9;
  int v10;
  void *v11;
  std::basic_string<char16_t> *v12;
  std::basic_string<char16_t>::size_type v13;
  void **v14;
  std::basic_string<char16_t>::size_type v15;
  int v16;
  const std::basic_string<char16_t>::value_type *v17;
  std::basic_string<char16_t>::size_type v18;
  void **v19;
  std::basic_string<char16_t>::size_type v20;
  int v21;
  const std::basic_string<char16_t>::value_type *v22;
  std::basic_string<char16_t>::size_type v23;
  void **v24;
  std::basic_string<char16_t>::size_type v25;
  void (***v26)(void **__return_ptr);
  void **v27;
  std::basic_string<char16_t>::size_type v28;
  void **v29;
  std::basic_string<char16_t>::size_type v30;
  const std::basic_string<char16_t>::value_type *v31;
  char *v32;
  const std::basic_string<char16_t>::value_type *v33;
  int v34;
  const std::basic_string<char16_t>::value_type *v35;
  std::basic_string<char16_t>::size_type v36;
  void **v37;
  std::basic_string<char16_t>::size_type v38;
  void *__p[2];
  unsigned __int8 v40;
  void *v41[2];
  unsigned __int8 v42;
  void *v43[2];
  unsigned __int8 v44;
  void *v45[2];
  unsigned __int8 v46;
  void *v47[2];
  unsigned __int8 v48;
  void *v49[2];
  unsigned __int8 v50;
  std::basic_string<char16_t> v51;
  void *v52[2];
  unsigned __int8 v53;
  std::basic_string<char16_t> v54;
  std::basic_string<char16_t> __dst;
  std::basic_string<char16_t> v56;
  std::basic_string<char16_t> v57;
  std::basic_string<char16_t> v58;
  std::basic_string<char16_t> v59;
  std::basic_string<char16_t> v60;
  std::basic_string<char16_t> v61;
  std::basic_string<char16_t> v62;
  std::basic_string<char16_t> v63;
  std::basic_string<char16_t> v64;
  std::basic_string<char16_t> v65;
  std::basic_string<char16_t> v66;

  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"Explicit{begin=");
  morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)*((int *)this + 2), &v54);
  v4 = SHIBYTE(v54.__r_.__value_.__r.__words[2]);
  v5 = (void *)v54.__r_.__value_.__r.__words[0];
  if ((v54.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v6 = &v54;
  else
    v6 = (std::basic_string<char16_t> *)v54.__r_.__value_.__r.__words[0];
  if ((v54.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v54.__r_.__value_.__r.__words[2]);
  else
    size = v54.__r_.__value_.__l.__size_;
  std::basic_string<char16_t>::append(&__dst, (const std::basic_string<char16_t>::value_type *)v6, size);
  v56 = __dst;
  memset(&__dst, 0, sizeof(__dst));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v52, (char *)L", end=");
  if ((v53 & 0x80u) == 0)
    v8 = v52;
  else
    v8 = (void **)v52[0];
  if ((v53 & 0x80u) == 0)
    v9 = v53;
  else
    v9 = (std::basic_string<char16_t>::size_type)v52[1];
  std::basic_string<char16_t>::append(&v56, (const std::basic_string<char16_t>::value_type *)v8, v9);
  v57 = v56;
  memset(&v56, 0, sizeof(v56));
  morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)*((int *)this + 3), &v51);
  v10 = SHIBYTE(v51.__r_.__value_.__r.__words[2]);
  v11 = (void *)v51.__r_.__value_.__r.__words[0];
  if ((v51.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v12 = &v51;
  else
    v12 = (std::basic_string<char16_t> *)v51.__r_.__value_.__r.__words[0];
  if ((v51.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v13 = HIBYTE(v51.__r_.__value_.__r.__words[2]);
  else
    v13 = v51.__r_.__value_.__l.__size_;
  std::basic_string<char16_t>::append(&v57, (const std::basic_string<char16_t>::value_type *)v12, v13);
  v58 = v57;
  memset(&v57, 0, sizeof(v57));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v49, ",");
  if ((v50 & 0x80u) == 0)
    v14 = v49;
  else
    v14 = (void **)v49[0];
  if ((v50 & 0x80u) == 0)
    v15 = v50;
  else
    v15 = (std::basic_string<char16_t>::size_type)v49[1];
  std::basic_string<char16_t>::append(&v58, (const std::basic_string<char16_t>::value_type *)v14, v15);
  v59 = v58;
  memset(&v58, 0, sizeof(v58));
  v16 = *((char *)this + 39);
  if (v16 >= 0)
    v17 = (const std::basic_string<char16_t>::value_type *)((char *)this + 16);
  else
    v17 = (const std::basic_string<char16_t>::value_type *)*((_QWORD *)this + 2);
  if (v16 >= 0)
    v18 = *((unsigned __int8 *)this + 39);
  else
    v18 = *((_QWORD *)this + 3);
  std::basic_string<char16_t>::append(&v59, v17, v18);
  v60 = v59;
  memset(&v59, 0, sizeof(v59));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v47, "'");
  if ((v48 & 0x80u) == 0)
    v19 = v47;
  else
    v19 = (void **)v47[0];
  if ((v48 & 0x80u) == 0)
    v20 = v48;
  else
    v20 = (std::basic_string<char16_t>::size_type)v47[1];
  std::basic_string<char16_t>::append(&v60, (const std::basic_string<char16_t>::value_type *)v19, v20);
  v61 = v60;
  memset(&v60, 0, sizeof(v60));
  v21 = *((char *)this + 63);
  if (v21 >= 0)
    v22 = (const std::basic_string<char16_t>::value_type *)((char *)this + 40);
  else
    v22 = (const std::basic_string<char16_t>::value_type *)*((_QWORD *)this + 5);
  if (v21 >= 0)
    v23 = *((unsigned __int8 *)this + 63);
  else
    v23 = *((_QWORD *)this + 6);
  std::basic_string<char16_t>::append(&v61, v22, v23);
  v62 = v61;
  memset(&v61, 0, sizeof(v61));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v45, "'");
  if ((v46 & 0x80u) == 0)
    v24 = v45;
  else
    v24 = (void **)v45[0];
  if ((v46 & 0x80u) == 0)
    v25 = v46;
  else
    v25 = (std::basic_string<char16_t>::size_type)v45[1];
  std::basic_string<char16_t>::append(&v62, (const std::basic_string<char16_t>::value_type *)v24, v25);
  v63 = v62;
  memset(&v62, 0, sizeof(v62));
  if ((*(uint64_t (**)(morphun::Token_Explicit *))(*(_QWORD *)this + 56))(this))
  {
    v26 = (void (***)(void **__return_ptr))(*(uint64_t (**)(morphun::Token_Explicit *))(*(_QWORD *)this + 56))(this);
    (**v26)(v43);
  }
  else
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v43, "n");
  }
  if ((v44 & 0x80u) == 0)
    v27 = v43;
  else
    v27 = (void **)v43[0];
  if ((v44 & 0x80u) == 0)
    v28 = v44;
  else
    v28 = (std::basic_string<char16_t>::size_type)v43[1];
  std::basic_string<char16_t>::append(&v63, (const std::basic_string<char16_t>::value_type *)v27, v28);
  v64 = v63;
  memset(&v63, 0, sizeof(v63));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v41, (char *)L"}, label='");
  if ((v42 & 0x80u) == 0)
    v29 = v41;
  else
    v29 = (void **)v41[0];
  if ((v42 & 0x80u) == 0)
    v30 = v42;
  else
    v30 = (std::basic_string<char16_t>::size_type)v41[1];
  std::basic_string<char16_t>::append(&v64, (const std::basic_string<char16_t>::value_type *)v29, v30);
  v65 = v64;
  memset(&v64, 0, sizeof(v64));
  v33 = (const std::basic_string<char16_t>::value_type *)*((_QWORD *)this + 12);
  v32 = (char *)this + 96;
  v31 = v33;
  v34 = v32[23];
  if (v34 >= 0)
    v35 = (const std::basic_string<char16_t>::value_type *)v32;
  else
    v35 = v31;
  if (v34 >= 0)
    v36 = v32[23];
  else
    v36 = *((_QWORD *)v32 + 1);
  std::basic_string<char16_t>::append(&v65, v35, v36);
  v66 = v65;
  memset(&v65, 0, sizeof(v65));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "'");
  if ((v40 & 0x80u) == 0)
    v37 = __p;
  else
    v37 = (void **)__p[0];
  if ((v40 & 0x80u) == 0)
    v38 = v40;
  else
    v38 = (std::basic_string<char16_t>::size_type)__p[1];
  std::basic_string<char16_t>::append(&v66, (const std::basic_string<char16_t>::value_type *)v37, v38);
  *a2 = v66;
  memset(&v66, 0, sizeof(v66));
  if ((char)v40 < 0)
  {
    operator delete(__p[0]);
    if (SHIBYTE(v66.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v66.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v65.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v65.__r_.__value_.__l.__data_);
  if ((char)v42 < 0)
    operator delete(v41[0]);
  if (SHIBYTE(v64.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v64.__r_.__value_.__l.__data_);
  if ((char)v44 < 0)
    operator delete(v43[0]);
  if (SHIBYTE(v63.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v63.__r_.__value_.__l.__data_);
  if ((char)v46 < 0)
    operator delete(v45[0]);
  if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v62.__r_.__value_.__l.__data_);
  if (SHIBYTE(v61.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v61.__r_.__value_.__l.__data_);
  if ((char)v48 < 0)
    operator delete(v47[0]);
  if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v60.__r_.__value_.__l.__data_);
  if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v59.__r_.__value_.__l.__data_);
  if ((char)v50 < 0)
    operator delete(v49[0]);
  if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v58.__r_.__value_.__l.__data_);
    if ((v10 & 0x80000000) == 0)
      goto LABEL_105;
  }
  else if ((v10 & 0x80000000) == 0)
  {
    goto LABEL_105;
  }
  operator delete(v11);
LABEL_105:
  if (SHIBYTE(v57.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v57.__r_.__value_.__l.__data_);
  if ((char)v53 < 0)
    operator delete(v52[0]);
  if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v56.__r_.__value_.__l.__data_);
    if ((v4 & 0x80000000) == 0)
      goto LABEL_111;
  }
  else if ((v4 & 0x80000000) == 0)
  {
    goto LABEL_111;
  }
  operator delete(v5);
LABEL_111:
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
}

void sub_1CB5284F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,uint64_t a46,uint64_t a47,void *a48,uint64_t a49,int a50,__int16 a51,char a52,char a53,uint64_t a54,uint64_t a55,uint64_t a56,void *a57,uint64_t a58,int a59,__int16 a60,char a61,char a62,void *a63)
{
  char a68;
  void *a70;
  char a72;
  void *a73;
  char a74;
  void *a75;
  char a76;
  void *a77;
  char a78;
  void *v78;
  void *v79;
  int v80;
  int v81;
  uint64_t v82;

  if (a14 < 0)
    operator delete(__p);
  if (*(char *)(v82 - 73) < 0)
    operator delete(*(void **)(v82 - 96));
  if (*(char *)(v82 - 105) < 0)
    operator delete(*(void **)(v82 - 128));
  if (a20 < 0)
    operator delete(a15);
  if (*(char *)(v82 - 137) < 0)
    operator delete(*(void **)(v82 - 160));
  if (a26 < 0)
    operator delete(a21);
  if (*(char *)(v82 - 169) < 0)
    operator delete(*(void **)(v82 - 192));
  if (a32 < 0)
    operator delete(a27);
  if (*(char *)(v82 - 201) < 0)
    operator delete(*(void **)(v82 - 224));
  if (*(char *)(v82 - 233) < 0)
    operator delete(*(void **)(v82 - 256));
  if (a38 < 0)
    operator delete(a33);
  if (a78 < 0)
    operator delete(a77);
  if (a76 < 0)
    operator delete(a75);
  if (a44 < 0)
    operator delete(a39);
  if (a74 < 0)
    operator delete(a73);
  if (v81 < 0)
    operator delete(v79);
  if (a72 < 0)
    operator delete(a70);
  if (a53 < 0)
    operator delete(a48);
  if (a68 < 0)
    operator delete(a63);
  if (v80 < 0)
    operator delete(v78);
  if (a62 < 0)
    operator delete(a57);
  _Unwind_Resume(a1);
}

void morphun::Token_Explicit::~Token_Explicit(void **this)
{
  *this = &off_1E866A3C8;
  if (*((char *)this + 119) < 0)
    operator delete(this[12]);
  morphun::Token_Group::~Token_Group((morphun::Token_Group *)this, (void **)&off_1E86670B0);
}

{
  *this = &off_1E866A3C8;
  if (*((char *)this + 119) < 0)
    operator delete(this[12]);
  morphun::Token_Group::~Token_Group((morphun::Token_Group *)this, (void **)&off_1E86670B0);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::Token_Explicit::newInstance(morphun::Token_Explicit *this, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  char *v8;
  unint64_t v9;
  int v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;

  v4 = operator new();
  v5 = (*(uint64_t (**)(morphun::Token_Explicit *))(*(_QWORD *)this + 24))(this);
  v6 = (*(uint64_t (**)(morphun::Token_Explicit *))(*(_QWORD *)this + 32))(this);
  v7 = *((char *)this + 39);
  if (v7 >= 0)
    v8 = (char *)this + 16;
  else
    v8 = (char *)*((_QWORD *)this + 2);
  if (v7 >= 0)
    v9 = *((unsigned __int8 *)this + 39);
  else
    v9 = *((_QWORD *)this + 3);
  v10 = *((char *)this + 63);
  if (v10 >= 0)
    v11 = (char *)this + 40;
  else
    v11 = (char *)*((_QWORD *)this + 5);
  if (v10 >= 0)
    v12 = *((unsigned __int8 *)this + 63);
  else
    v12 = *((_QWORD *)this + 6);
  v13 = morphun::Token_Group::cloneSubTokens(this, a2);
  v14 = (*(uint64_t (**)(morphun::Token_Explicit *))(*(_QWORD *)this + 64))(this);
  v15 = *(unsigned __int8 *)(v14 + 23);
  if ((v15 & 0x80u) == 0)
    v16 = (void *)v14;
  else
    v16 = *(void **)v14;
  if ((v15 & 0x80u) != 0)
    v15 = *(_QWORD *)(v14 + 8);
  morphun::Token_Explicit::Token_Explicit(v4, v5 - a2, v6 - a2, v8, v9, v11, v12, v13, v16, v15);
  return v4;
}

void sub_1CB5288B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10B3C40F5E5B515);
  _Unwind_Resume(a1);
}

uint64_t morphun::Token_Explicit::getLabel(morphun::Token_Explicit *this)
{
  return (uint64_t)this + 96;
}

uint64_t morphun::Token_Explicit::Token_Explicit(uint64_t a1, int a2, int a3, void *__src, unint64_t a5, void *a6, unint64_t a7, uint64_t a8, void *__srca, unint64_t a10)
{
  morphun::Token *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = &off_1E8656E60;
  v12 = morphun::Token::Token((morphun::Token *)a1, (uint64_t *)&off_1E86670B8, a2, a3, __src, a5, a6, a7, 1);
  *((_QWORD *)v12 + 11) = a8;
  *(_QWORD *)v12 = &off_1E866A3C8;
  if (a10 >= 0x7FFFFFFFFFFFFFF8)
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  if (a10 >= 0xB)
  {
    v14 = (a10 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((a10 | 3) != 0xB)
      v14 = a10 | 3;
    v13 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v14 + 1);
    *(_QWORD *)(a1 + 104) = a10;
    *(_QWORD *)(a1 + 112) = v15 | 0x8000000000000000;
    *(_QWORD *)(a1 + 96) = v13;
  }
  else
  {
    v13 = (void *)(a1 + 96);
    *(_BYTE *)(a1 + 119) = a10;
    if (!a10)
      goto LABEL_9;
  }
  memmove(v13, __srca, 2 * a10);
LABEL_9:
  *((_WORD *)v13 + a10) = 0;
  return a1;
}

void sub_1CB5289C8(_Unwind_Exception *a1)
{
  morphun::Token_Group *v1;

  morphun::Token_Group::~Token_Group(v1, (void **)&off_1E86670B0);
  _Unwind_Resume(a1);
}

uint64_t morphun::Token_Explicit::Token_Explicit(uint64_t a1, uint64_t *a2, int a3, int a4, void *a5, unint64_t a6, void *a7, unint64_t a8, uint64_t a9, void *__src, unint64_t a11)
{
  morphun::Token *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;

  v13 = morphun::Token::Token((morphun::Token *)a1, a2 + 2, a3, a4, a5, a6, a7, a8, 1);
  v14 = a2[1];
  *(_QWORD *)v13 = v14;
  *(_QWORD *)((char *)v13 + *(_QWORD *)(v14 - 64)) = a2[5];
  *(_QWORD *)((char *)v13 + *(_QWORD *)(*(_QWORD *)v13 - 40)) = a2[6];
  *((_QWORD *)v13 + 11) = a9;
  v15 = *a2;
  *(_QWORD *)v13 = *a2;
  *(_QWORD *)((char *)v13 + *(_QWORD *)(v15 - 64)) = a2[7];
  *(_QWORD *)((char *)v13 + *(_QWORD *)(*(_QWORD *)v13 - 40)) = a2[8];
  if (a11 >= 0x7FFFFFFFFFFFFFF8)
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  if (a11 >= 0xB)
  {
    v17 = (a11 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((a11 | 3) != 0xB)
      v17 = a11 | 3;
    v16 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v17 + 1);
    *(_QWORD *)(a1 + 104) = a11;
    *(_QWORD *)(a1 + 112) = v18 | 0x8000000000000000;
    *(_QWORD *)(a1 + 96) = v16;
  }
  else
  {
    v16 = (void *)(a1 + 96);
    *(_BYTE *)(a1 + 119) = a11;
    if (!a11)
      goto LABEL_9;
  }
  memmove(v16, __src, 2 * a11);
LABEL_9:
  *((_WORD *)v16 + a11) = 0;
  return a1;
}

void sub_1CB528AF4(_Unwind_Exception *a1)
{
  morphun::Token_Group *v1;
  void **v2;

  morphun::Token_Group::~Token_Group(v1, v2);
  _Unwind_Resume(a1);
}

void `virtual thunk to'morphun::Token_Explicit::toString(morphun::Token_Explicit *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  morphun::Token_Explicit::toString((morphun::Token_Explicit *)((char *)this + *(_QWORD *)(*(_QWORD *)this - 24)), a2);
}

void morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures::~LanguageGrammarFeatures_GrammarFeatures(void **this)
{
}

{
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures::compareTo(uint64_t a1, uint64_t a2)
{
  unsigned __int16 *v2;
  unsigned __int16 *v3;
  unsigned __int16 *v4;
  int v5;
  BOOL v6;
  unsigned __int16 *v7;
  unint64_t v8;
  unsigned __int16 *v9;
  unint64_t v10;
  unint64_t v11;
  unsigned int v12;
  unsigned int v13;

  v4 = *(unsigned __int16 **)(a2 + 8);
  v2 = (unsigned __int16 *)(a2 + 8);
  v3 = v4;
  v5 = *((char *)v2 + 23);
  v6 = v5 < 0;
  if (v5 >= 0)
    v7 = v2;
  else
    v7 = v3;
  if (v6)
    v8 = *((_QWORD *)v2 + 1);
  else
    v8 = *((unsigned __int8 *)v2 + 23);
  if (*(char *)(a1 + 31) < 0)
  {
    v9 = *(unsigned __int16 **)(a1 + 8);
    v10 = *(_QWORD *)(a1 + 16);
  }
  else
  {
    v9 = (unsigned __int16 *)(a1 + 8);
    v10 = *(unsigned __int8 *)(a1 + 31);
  }
  if (v8 >= v10)
    v11 = v10;
  else
    v11 = v8;
  if (v11)
  {
    while (1)
    {
      v12 = *v9;
      v13 = *v7;
      if (v12 < v13)
        return 0xFFFFFFFFLL;
      if (v13 < v12)
        return 1;
      ++v9;
      ++v7;
      if (!--v11)
        goto LABEL_17;
    }
  }
  else
  {
LABEL_17:
    if (v10 < v8)
      return 0xFFFFFFFFLL;
    else
      return v8 < v10;
  }
}

void morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures::~LanguageGrammarFeatures_GrammarFeatures(void **this, void **a2)
{
  _QWORD *v3;
  void **v4;

  v3 = *a2;
  *this = *a2;
  *(void **)((char *)this + *(v3 - 5)) = a2[1];
  v4 = this + 4;
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100](&v4);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
}

uint64_t morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures::LanguageGrammarFeatures_GrammarFeatures(uint64_t a1, uint64_t *a2, __int128 *a3, uint64_t *a4)
{
  uint64_t v6;
  __int128 v7;

  v6 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + *(_QWORD *)(v6 - 40)) = a2[1];
  if (*((char *)a3 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)a3, *((_QWORD *)a3 + 1));
  }
  else
  {
    v7 = *a3;
    *(_QWORD *)(a1 + 24) = *((_QWORD *)a3 + 2);
    *(_OWORD *)(a1 + 8) = v7;
  }
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__init_with_size[abi:ne180100]<morphun::lang::features::LanguageGrammarFeatures_Feature*,morphun::lang::features::LanguageGrammarFeatures_Feature*>(a1 + 32, *a4, a4[1], 0x6DB6DB6DB6DB6DB7 * ((a4[1] - *a4) >> 3));
  return a1;
}

void sub_1CB528CD8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

uint64_t std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__init_with_size[abi:ne180100]<morphun::lang::features::LanguageGrammarFeatures_Feature*,morphun::lang::features::LanguageGrammarFeatures_Feature*>(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const std::basic_string<char16_t>::value_type **v10;
  __int128 v11;

  if (a4)
  {
    if (a4 >= 0x492492492492493)
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    v6 = (_QWORD *)result;
    result = (uint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<morphun::dialog::SemanticFeatureModel_DisplayValue>>(a4);
    v7 = result;
    *v6 = result;
    v6[1] = result;
    v6[2] = result + 56 * v8;
    if (a2 != a3)
    {
      v9 = 0;
      do
      {
        *(_QWORD *)(v7 + v9) = &off_1E866A638;
        v10 = (const std::basic_string<char16_t>::value_type **)(a2 + v9 + 8);
        if (*(char *)(a2 + v9 + 31) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(v7 + v9 + 8), *v10, *(_QWORD *)(a2 + v9 + 16));
        }
        else
        {
          v11 = *(_OWORD *)v10;
          *(_QWORD *)(v7 + v9 + 24) = *(_QWORD *)(a2 + v9 + 24);
          *(_OWORD *)(v7 + v9 + 8) = v11;
        }
        result = std::map<std::basic_string<char16_t>,std::basic_string<char16_t>>::map[abi:ne180100](v7 + v9 + 32, (_QWORD *)(a2 + v9 + 32));
        v9 += 56;
      }
      while (a2 + v9 != a3);
      v7 += v9;
    }
    v6[1] = v7;
  }
  return result;
}

void sub_1CB528E00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

uint64_t std::map<std::basic_string<char16_t>,std::basic_string<char16_t>>::map[abi:ne180100](uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  unsigned __int16 *v4;
  unsigned __int16 *v5;
  unsigned __int16 *v6;
  unsigned __int16 *v7;
  BOOL v8;

  *(_QWORD *)(a1 + 8) = 0;
  v3 = a1 + 8;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = a1 + 8;
  v4 = (unsigned __int16 *)(a2 + 1);
  v5 = (unsigned __int16 *)*a2;
  if ((_QWORD *)*a2 != a2 + 1)
  {
    do
    {
      std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::__emplace_hint_unique_key_args<std::basic_string<char16_t>,std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>> const&>((uint64_t **)a1, v3, v5 + 16, (__int128 *)v5 + 2);
      v6 = (unsigned __int16 *)*((_QWORD *)v5 + 1);
      if (v6)
      {
        do
        {
          v7 = v6;
          v6 = *(unsigned __int16 **)v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          v7 = (unsigned __int16 *)*((_QWORD *)v5 + 2);
          v8 = *(_QWORD *)v7 == (_QWORD)v5;
          v5 = v7;
        }
        while (!v8);
      }
      v5 = v7;
    }
    while (v7 != v4);
  }
  return a1;
}

void sub_1CB528EF8(_Unwind_Exception *a1)
{
  _QWORD **v1;

  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures::LanguageGrammarFeatures_GrammarFeatures(uint64_t a1, __int128 *a2, uint64_t *a3)
{
  __int128 v5;

  *(_QWORD *)a1 = &off_1E866A6D0;
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v5 = *a2;
    *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 2);
    *(_OWORD *)(a1 + 8) = v5;
  }
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__init_with_size[abi:ne180100]<morphun::lang::features::LanguageGrammarFeatures_Feature*,morphun::lang::features::LanguageGrammarFeatures_Feature*>(a1 + 32, *a3, a3[1], 0x6DB6DB6DB6DB6DB7 * ((a3[1] - *a3) >> 3));
  return a1;
}

void sub_1CB528FA4(_Unwind_Exception *exception_object)
{
  void **v1;
  uint64_t v2;

  if (*(char *)(v2 + 31) < 0)
    operator delete(*v1);
  _Unwind_Resume(exception_object);
}

void `virtual thunk to'morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures::~LanguageGrammarFeatures_GrammarFeatures(morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures *this)
{
}

{
  JUMPOUT(0x1D179D2ECLL);
}

void morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures::getName(morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  if (*((char *)this + 31) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a2, *((const std::basic_string<char16_t>::value_type **)this + 1), *((_QWORD *)this + 2));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 8);
    a2->__r_.__value_.__r.__words[2] = *((_QWORD *)this + 3);
  }
}

uint64_t morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures::getValues@<X0>(morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures *this@<X0>, _QWORD *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__init_with_size[abi:ne180100]<morphun::lang::features::LanguageGrammarFeatures_Feature*,morphun::lang::features::LanguageGrammarFeatures_Feature*>((uint64_t)a2, *((_QWORD *)this + 4), *((_QWORD *)this + 5), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*((_QWORD *)this + 5) - *((_QWORD *)this + 4)) >> 3));
}

BOOL morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures::operator<(uint64_t a1, uint64_t a2)
{
  unsigned __int16 *v2;
  unsigned __int16 *v3;
  unsigned __int16 *v4;
  int v5;
  BOOL v6;
  unsigned __int16 *v7;
  unint64_t v8;
  unsigned __int16 *v9;
  unint64_t v10;
  unint64_t v11;
  unsigned int v12;
  unsigned int v13;
  BOOL v14;

  v4 = *(unsigned __int16 **)(a2 + 8);
  v2 = (unsigned __int16 *)(a2 + 8);
  v3 = v4;
  v5 = *((char *)v2 + 23);
  v6 = v5 < 0;
  if (v5 >= 0)
    v7 = v2;
  else
    v7 = v3;
  if (v6)
    v8 = *((_QWORD *)v2 + 1);
  else
    v8 = *((unsigned __int8 *)v2 + 23);
  if (*(char *)(a1 + 31) < 0)
  {
    v9 = *(unsigned __int16 **)(a1 + 8);
    v10 = *(_QWORD *)(a1 + 16);
  }
  else
  {
    v9 = (unsigned __int16 *)(a1 + 8);
    v10 = *(unsigned __int8 *)(a1 + 31);
  }
  if (v8 >= v10)
    v11 = v10;
  else
    v11 = v8;
  if (v11)
  {
    while (1)
    {
      v12 = *v9;
      v13 = *v7;
      if (v13 != v12)
        break;
      ++v9;
      ++v7;
      if (!--v11)
        goto LABEL_16;
    }
    v14 = v12 >= v13;
  }
  else
  {
LABEL_16:
    v14 = v10 >= v8;
  }
  return !v14;
}

uint64_t **com::apple::siri::tokenizer::data::config_es::getContent@<X0>(uint64_t **a1@<X8>)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v3 = xmmword_1E8686A40;
  v4 = 0x1CB73E8CALL;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

uint64_t morphun::grammar::synthesis::EsGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::EsGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  _QWORD *v3;
  int v4;
  _QWORD *v5;
  int v6;
  _QWORD *v7;
  int v8;
  _QWORD *v9;
  int v10;
  _QWORD *v11;
  int v12;
  _QWORD *v13;
  int v14;
  _QWORD *v15;
  int v16;
  _QWORD *v17;
  int v18;
  _QWORD *v19;
  int v20;
  _QWORD *v21;
  int v22;
  morphun::grammar::synthesis::GrammemeConstants *v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t i;
  morphun::grammar::synthesis::GrammemeConstants *v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t j;
  morphun::util::LocaleUtils *v35;
  const morphun::util::ULocale *v36;
  uint64_t k;
  uint64_t m;
  _QWORD *v39;
  _QWORD *v40;
  _OWORD *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  const morphun::dialog::SemanticFeature *v45;
  const void *DefaultFeatureFunction;
  void *v47;
  void *v48;
  _QWORD *v49;
  unint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  __int128 *v69;
  __int128 v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  morphun::util::LocaleUtils *v76;
  morphun::dictionary::DictionaryMetaData *v77;
  const morphun::util::ULocale *v78;
  morphun::util::LocaleUtils *Dictionary;
  morphun::grammar::synthesis::GrammemeConstants *v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  morphun::grammar::synthesis::GrammemeConstants *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  morphun::grammar::synthesis::GrammemeConstants *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  morphun::grammar::synthesis::GrammemeConstants *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t n;
  _QWORD *v134;
  morphun::TokenizerFactory *v135;
  const morphun::util::ULocale *v136;
  uint64_t v137;
  uint64_t *BinaryProperties;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t *v144;
  uint64_t v145;
  uint64_t *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t result;
  morphun::exception::NullPointerException *exception;
  morphun::exception::NullPointerException *v156;
  _QWORD *v157;
  _QWORD *v158;
  morphun::grammar::synthesis::EsGrammarSynthesizer *v159;
  char *v160;
  _QWORD *v161;
  _OWORD *v162;
  char *v163;
  _QWORD *v164;
  char **v165;
  char *v166[2];
  _OWORD v167[2];
  __int128 v168;
  void **v169;
  char *v170;
  void *v171[2];
  char *v172;
  void *__p[2];
  char v174;
  __int128 v175;
  __int128 *v176;
  _QWORD v177[3];
  _BYTE __dst[40];
  _QWORD *v179;
  __int128 v180;
  _QWORD *v181;
  _QWORD *v182;
  _QWORD *v183;
  _QWORD *v184;
  _QWORD v185[4];

  v185[1] = *MEMORY[0x1E0C80C00];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, (char *)L"defArticle");
  v3 = (_QWORD *)operator new();
  morphun::grammar::synthesis::EsGrammarSynthesizer_ArticleLookupFunction::EsGrammarSynthesizer_ArticleLookupFunction((uint64_t)v3, (uint64_t)this, 0, (uint64_t)L"el", 2, (uint64_t)&unk_1CB73B4FE, 2, v4, (uint64_t)L"los", 3, (uint64_t)L"las", 3, 1);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v3 + *(_QWORD *)(*v3 - 56)));
  if ((__dst[23] & 0x80000000) != 0)
    operator delete(*(void **)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, "w");
  v5 = (_QWORD *)operator new();
  morphun::grammar::synthesis::EsGrammarSynthesizer_ArticleLookupFunction::EsGrammarSynthesizer_ArticleLookupFunction((uint64_t)v5, (uint64_t)this, (char *)L"defArticle", (uint64_t)L"el", 2, (uint64_t)&unk_1CB73B4FE, 2, v6, (uint64_t)L"los", 3, (uint64_t)L"las", 3, 1);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v5 + *(_QWORD *)(*v5 - 56)));
  if ((__dst[23] & 0x80000000) != 0)
    operator delete(*(void **)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, "i");
  v7 = (_QWORD *)operator new();
  morphun::grammar::synthesis::EsGrammarSynthesizer_ArticleLookupFunction::EsGrammarSynthesizer_ArticleLookupFunction((uint64_t)v7, (uint64_t)this, 0, (uint64_t)"u", 2, (uint64_t)L"una", 3, v8, (uint64_t)L"unos", 4, (uint64_t)"u", 4, 1);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v7 + *(_QWORD *)(*v7 - 56)));
  if ((__dst[23] & 0x80000000) != 0)
    operator delete(*(void **)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, (char *)L"withIndefArticle");
  v9 = (_QWORD *)operator new();
  morphun::grammar::synthesis::EsGrammarSynthesizer_ArticleLookupFunction::EsGrammarSynthesizer_ArticleLookupFunction((uint64_t)v9, (uint64_t)this, "i", (uint64_t)"u", 2, (uint64_t)L"una", 3, v10, (uint64_t)L"unos", 4, (uint64_t)"u", 4, 1);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v9 + *(_QWORD *)(*v9 - 56)));
  if ((__dst[23] & 0x80000000) != 0)
    operator delete(*(void **)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, "d");
  v11 = (_QWORD *)operator new();
  morphun::grammar::synthesis::EsGrammarSynthesizer_ArticleLookupFunction::EsGrammarSynthesizer_ArticleLookupFunction((uint64_t)v11, (uint64_t)this, 0, (uint64_t)L"del", 3, (uint64_t)L"de la", 5, v12, (uint64_t)L"de los", 6, (uint64_t)"d", 6, 1);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v11 + *(_QWORD *)(*v11 - 56)));
  if ((__dst[23] & 0x80000000) != 0)
    operator delete(*(void **)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, (char *)L"withDePrepArticle");
  v13 = (_QWORD *)operator new();
  morphun::grammar::synthesis::EsGrammarSynthesizer_ArticleLookupFunction::EsGrammarSynthesizer_ArticleLookupFunction((uint64_t)v13, (uint64_t)this, "d", (uint64_t)L"del", 3, (uint64_t)L"de la", 5, v14, (uint64_t)L"de los", 6, (uint64_t)"d", 6, 1);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v13 + *(_QWORD *)(*v13 - 56)));
  if ((__dst[23] & 0x80000000) != 0)
    operator delete(*(void **)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, "a");
  v15 = (_QWORD *)operator new();
  morphun::grammar::synthesis::EsGrammarSynthesizer_ArticleLookupFunction::EsGrammarSynthesizer_ArticleLookupFunction((uint64_t)v15, (uint64_t)this, 0, (uint64_t)L"al", 2, (uint64_t)"a", 4, v16, (uint64_t)L"a los", 5, (uint64_t)L"a las", 5, 1);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v15 + *(_QWORD *)(*v15 - 56)));
  if ((__dst[23] & 0x80000000) != 0)
    operator delete(*(void **)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, (char *)L"withAPrepArticle");
  v17 = (_QWORD *)operator new();
  morphun::grammar::synthesis::EsGrammarSynthesizer_ArticleLookupFunction::EsGrammarSynthesizer_ArticleLookupFunction((uint64_t)v17, (uint64_t)this, "a", (uint64_t)L"al", 2, (uint64_t)"a", 4, v18, (uint64_t)L"a los", 5, (uint64_t)L"a las", 5, 1);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v17 + *(_QWORD *)(*v17 - 56)));
  if ((__dst[23] & 0x80000000) != 0)
    operator delete(*(void **)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, "d");
  v19 = (_QWORD *)operator new();
  morphun::grammar::synthesis::EsGrammarSynthesizer_ArticleLookupFunction::EsGrammarSynthesizer_ArticleLookupFunction((uint64_t)v19, (uint64_t)this, 0, (uint64_t)L"este", 4, (uint64_t)"e", 4, v20, (uint64_t)L"estos", 5, (uint64_t)L"estas", 5, 0);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v19 + *(_QWORD *)(*v19 - 56)));
  if ((__dst[23] & 0x80000000) != 0)
    operator delete(*(void **)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, (char *)L"withDemAdj");
  v21 = (_QWORD *)operator new();
  morphun::grammar::synthesis::EsGrammarSynthesizer_ArticleLookupFunction::EsGrammarSynthesizer_ArticleLookupFunction((uint64_t)v21, (uint64_t)this, "d", (uint64_t)L"este", 4, (uint64_t)"e", 4, v22, (uint64_t)L"estos", 5, (uint64_t)L"estas", 5, 0);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)__dst, (morphun::dialog::DefaultFeatureFunction *)((char *)v21 + *(_QWORD *)(*v21 - 56)));
  if ((__dst[23] & 0x80000000) != 0)
    operator delete(*(void **)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v175, (char *)L"count");
  v23 = (morphun::grammar::synthesis::GrammemeConstants *)operator new();
  v24 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v23);
  if (*(char *)(v24 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)__dst, *(const std::basic_string<char16_t>::value_type **)v24, *(_QWORD *)(v24 + 8));
  }
  else
  {
    v25 = *(_OWORD *)v24;
    *(_QWORD *)&__dst[16] = *(_QWORD *)(v24 + 16);
    *(_OWORD *)__dst = v25;
  }
  v26 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v24);
  if (*(char *)(v26 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)&__dst[24], *(const std::basic_string<char16_t>::value_type **)v26, *(_QWORD *)(v26 + 8));
  }
  else
  {
    v27 = *(_OWORD *)v26;
    v179 = *(_QWORD **)(v26 + 16);
    *(_OWORD *)&__dst[24] = v27;
  }
  v171[0] = 0;
  v171[1] = 0;
  v172 = 0;
  v169 = v171;
  LOBYTE(v170) = 0;
  v171[0] = operator new(0x30uLL);
  v171[1] = v171[0];
  v172 = (char *)v171[0] + 48;
  v171[1] = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v172, (__int128 *)__dst, &v180, (std::basic_string<char16_t> *)v171[0]);
  morphun::grammar::synthesis::EsGrammarSynthesizer_CountGenderLookupFunction::EsGrammarSynthesizer_CountGenderLookupFunction((uint64_t)v23, 1, (uint64_t *)v171);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&v175, (morphun::grammar::synthesis::GrammemeConstants *)((char *)v23 + *(_QWORD *)(*(_QWORD *)v23 - 56)));
  v169 = v171;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v169);
  for (i = 0; i != -6; i -= 3)
  {
    if (SHIBYTE((&v179)[i]) < 0)
      operator delete(*(void **)&__dst[i * 8 + 24]);
  }
  if (SHIBYTE(v176) < 0)
    operator delete((void *)v175);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v175, (char *)L"gender");
  v29 = (morphun::grammar::synthesis::GrammemeConstants *)operator new();
  v30 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE(v29);
  if (*(char *)(v30 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)__dst, *(const std::basic_string<char16_t>::value_type **)v30, *(_QWORD *)(v30 + 8));
  }
  else
  {
    v31 = *(_OWORD *)v30;
    *(_QWORD *)&__dst[16] = *(_QWORD *)(v30 + 16);
    *(_OWORD *)__dst = v31;
  }
  v32 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE((morphun::grammar::synthesis::GrammemeConstants *)v30);
  if (*(char *)(v32 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)&__dst[24], *(const std::basic_string<char16_t>::value_type **)v32, *(_QWORD *)(v32 + 8));
  }
  else
  {
    v33 = *(_OWORD *)v32;
    v179 = *(_QWORD **)(v32 + 16);
    *(_OWORD *)&__dst[24] = v33;
  }
  v171[0] = 0;
  v171[1] = 0;
  v172 = 0;
  v169 = v171;
  LOBYTE(v170) = 0;
  v171[0] = operator new(0x30uLL);
  v171[1] = v171[0];
  v172 = (char *)v171[0] + 48;
  v171[1] = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v172, (__int128 *)__dst, &v180, (std::basic_string<char16_t> *)v171[0]);
  morphun::grammar::synthesis::EsGrammarSynthesizer_CountGenderLookupFunction::EsGrammarSynthesizer_CountGenderLookupFunction((uint64_t)v29, 0, (uint64_t *)v171);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)&v175, (morphun::grammar::synthesis::GrammemeConstants *)((char *)v29 + *(_QWORD *)(*(_QWORD *)v29 - 56)));
  v169 = v171;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v169);
  for (j = 0; j != -6; j -= 3)
  {
    if (SHIBYTE((&v179)[j]) < 0)
      operator delete(*(void **)&__dst[j * 8 + 24]);
  }
  if (SHIBYTE(v176) < 0)
    operator delete((void *)v175);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v171, "d");
  v35 = (morphun::util::LocaleUtils *)operator new();
  v36 = (const morphun::util::ULocale *)morphun::util::LocaleUtils::SPANISH(v35);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, (char *)L"defArticle");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst[24], "d");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v180, "a");
  std::set<std::basic_string<char16_t>>::set[abi:ne180100]((uint64_t *)&v169, (unsigned __int16 *)__dst, 3);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v175, "a");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v177, (char *)L"de");
  std::set<std::basic_string<char16_t>>::set[abi:ne180100]((uint64_t *)&v168, (unsigned __int16 *)&v175, 2);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "i");
  std::set<std::basic_string<char16_t>>::set[abi:ne180100]((uint64_t *)v167, (unsigned __int16 *)__p, 1);
  v166[0] = 0;
  v166[1] = 0;
  v165 = v166;
  morphun::dialog::ArticleDetectionFunction::ArticleDetectionFunction((uint64_t)v35, v36, (uint64_t)&v169, (uint64_t)&v168, (uint64_t)v167, (uint64_t)&v165);
  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName((uint64_t)this, (unsigned __int16 *)v171, (morphun::util::LocaleUtils *)((char *)v35 + *(_QWORD *)(*(_QWORD *)v35 - 56)));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(v166[0]);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)&v167[0] + 1));
  if (v174 < 0)
    operator delete(__p[0]);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)&v168 + 1));
  for (k = 0; k != -6; k -= 3)
  {
    if (SHIBYTE(v177[k + 2]) < 0)
      operator delete((void *)v177[k]);
  }
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(v170);
  for (m = 0; m != -9; m -= 3)
  {
    if (SHIBYTE((&v181)[m]) < 0)
      operator delete(*(void **)((char *)&v180 + m * 8));
  }
  if (SHIBYTE(v172) < 0)
    operator delete(v171[0]);
  v39 = (_QWORD *)operator new();
  *v39 = &off_1E866E320;
  v39[1] = 0;
  v40 = v39 + 1;
  v39[2] = 0;
  v39[3] = 0;
  v164 = v39;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, "w");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v175, (char *)L"withIndefArticle");
  morphun::dialog::DefinitenessDisplayFunction::DefinitenessDisplayFunction(v164 + 4, this, (unsigned __int16 *)__dst, L"defArticle", 10, (unsigned __int16 *)&v175, (unsigned __int16 *)"i", 12);
  if (SHIBYTE(v176) < 0)
    operator delete((void *)v175);
  if ((__dst[23] & 0x80000000) != 0)
    operator delete(*(void **)__dst);
  v157 = v40;
  v41 = operator new(0x20uLL);
  v42 = 0;
  v43 = (char *)this + 8;
  v162 = v41;
  v163 = (char *)this + 16;
  *v41 = xmmword_1E8676A20;
  v41[1] = *(_OWORD *)&off_1E8676A30;
  v164[16] = 0;
  v164[17] = 0;
  v164[15] = 0;
  v158 = v164 + 15;
  v159 = this;
  v160 = (char *)this + 8;
  do
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, *((char **)v41 + v42));
    v44 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)v43, (unsigned __int16 *)__dst);
    if (v163 == (char *)v44
      || (v45 = *(const morphun::dialog::SemanticFeature **)(v44 + 56)) == 0
    {
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
    v48 = v47;
    if ((__dst[23] & 0x80000000) != 0)
      operator delete(*(void **)__dst);
    (*(void (**)(void **__return_ptr, void *, morphun::grammar::synthesis::EsGrammarSynthesizer *))(*(_QWORD *)v48 + 56))(v171, v48, this);
    v49 = v164;
    v51 = (_QWORD *)v164[16];
    v50 = v164[17];
    if ((unint64_t)v51 >= v50)
    {
      v53 = (_QWORD *)*v158;
      v54 = ((uint64_t)v51 - *v158) >> 5;
      v55 = v54 + 1;
      if ((unint64_t)(v54 + 1) >> 59)
        std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
      v56 = v50 - (_QWORD)v53;
      if (v56 >> 4 > v55)
        v55 = v56 >> 4;
      if ((unint64_t)v56 >= 0x7FFFFFFFFFFFFFE0)
        v57 = 0x7FFFFFFFFFFFFFFLL;
      else
        v57 = v55;
      *(_QWORD *)&__dst[32] = v164 + 17;
      if (v57 >> 59)
        std::__throw_bad_array_new_length[abi:ne180100]();
      v58 = (char *)operator new(32 * v57);
      v59 = &v58[32 * v54];
      *(_QWORD *)__dst = v58;
      *(_QWORD *)&__dst[8] = v59;
      *(_QWORD *)v59 = v48;
      *(_OWORD *)(v59 + 8) = *(_OWORD *)v171;
      *((_QWORD *)v59 + 3) = v172;
      v171[0] = 0;
      v171[1] = 0;
      v172 = 0;
      *(_QWORD *)&__dst[16] = v59 + 32;
      *(_QWORD *)&__dst[24] = &v58[32 * v57];
      *(_QWORD *)&v168 = v59;
      *((_QWORD *)&v168 + 1) = v59;
      v167[0] = v168;
      *(_QWORD *)&v175 = v164 + 17;
      *((_QWORD *)&v175 + 1) = v167;
      v176 = &v168;
      LOBYTE(v177[0]) = 0;
      while (v51 != v53)
      {
        v60 = *(v51 - 4);
        v51 -= 4;
        *((_QWORD *)v59 - 3) = 0;
        v61 = v59 - 24;
        *((_QWORD *)v59 - 4) = v60;
        *((_QWORD *)v61 + 1) = 0;
        *((_QWORD *)v61 + 2) = 0;
        v63 = v51[1];
        v62 = v51[2];
        v169 = (void **)(v59 - 24);
        LOBYTE(v170) = 0;
        if (v62 != v63)
        {
          v64 = 0xAAAAAAAAAAAAAAABLL * ((v62 - v63) >> 4);
          if (v64 >= 0x555555555555556)
            std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
          v65 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>(v64);
          v66 = 0;
          *((_QWORD *)v59 - 3) = v65;
          *((_QWORD *)v59 - 2) = v65;
          *((_QWORD *)v59 - 1) = &v65[48 * v67];
          do
          {
            v68 = &v65[v66];
            v69 = (__int128 *)(v63 + v66);
            if (*(char *)(v63 + v66 + 23) < 0)
            {
              std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)&v65[v66], *(const std::basic_string<char16_t>::value_type **)v69, *((_QWORD *)v69 + 1));
            }
            else
            {
              v70 = *v69;
              *((_QWORD *)v68 + 2) = *((_QWORD *)v69 + 2);
              *(_OWORD *)v68 = v70;
            }
            v71 = &v65[v66];
            *((_QWORD *)v71 + 3) = 0;
            *((_QWORD *)v71 + 4) = 0;
            v72 = (uint64_t)&v65[v66 + 24];
            *(_QWORD *)(v72 + 16) = 0;
            std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>::__init_with_size[abi:ne180100]<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>*,std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>*>(v72, *(_QWORD *)(v63 + v66 + 24), *(_QWORD *)(v63 + v66 + 32), (uint64_t)(*(_QWORD *)(v63 + v66 + 32) - *(_QWORD *)(v63 + v66 + 24)) >> 5);
            v66 += 48;
          }
          while (v63 + v66 != v62);
          *((_QWORD *)v59 - 2) = &v65[v66];
          v59 = (char *)*((_QWORD *)&v168 + 1);
        }
        v59 -= 32;
        *((_QWORD *)&v168 + 1) = v59;
      }
      LOBYTE(v177[0]) = 1;
      std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>,std::reverse_iterator<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)&v175);
      v49 = v164;
      v73 = v164[17];
      v161 = *(_QWORD **)&__dst[16];
      v74 = *(_OWORD *)&__dst[16];
      v75 = *(_OWORD *)(v164 + 15);
      v164[15] = v59;
      *(_OWORD *)&__dst[8] = v75;
      *((_OWORD *)v164 + 8) = v74;
      *(_QWORD *)&__dst[24] = v73;
      *(_QWORD *)__dst = v75;
      std::__split_buffer<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::~__split_buffer((uint64_t)__dst);
      v52 = v161;
      this = v159;
      v43 = v160;
    }
    else
    {
      *v51 = v48;
      v51[1] = 0;
      v51[2] = 0;
      v51[3] = 0;
      *(_OWORD *)(v51 + 1) = *(_OWORD *)v171;
      v51[3] = v172;
      v171[0] = 0;
      v171[1] = 0;
      v172 = 0;
      v52 = v51 + 4;
      v164[16] = v51 + 4;
    }
    v49[16] = v52;
    *(_QWORD *)__dst = v171;
    std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>::__destroy_vector::operator()[abi:ne180100]((void ***)__dst);
    ++v42;
    v41 = v162;
  }
  while (v42 != 4);
  operator delete(v162);
  v77 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::SPANISH(v76);
  Dictionary = (morphun::util::LocaleUtils *)morphun::dictionary::DictionaryMetaData::createDictionary(v77, v78);
  if (!Dictionary)
  {
    v156 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(v156);
  }
  v164[18] = Dictionary;
  v80 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::SPANISH(Dictionary);
  v81 = morphun::grammar::synthesis::GrammemeConstants::POS_NOUN(v80);
  v82 = *(char *)(v81 + 23);
  if (v82 >= 0)
    v83 = v81;
  else
    v83 = *(_QWORD *)v81;
  if (v82 >= 0)
    v84 = *(unsigned __int8 *)(v81 + 23);
  else
    v84 = *(_QWORD *)(v81 + 8);
  v85 = morphun::grammar::synthesis::GrammemeConstants::POS_ADJECTIVE((morphun::grammar::synthesis::GrammemeConstants *)v81);
  v86 = *(char *)(v85 + 23);
  if (v86 >= 0)
    v87 = v85;
  else
    v87 = *(_QWORD *)v85;
  if (v86 >= 0)
    v88 = *(unsigned __int8 *)(v85 + 23);
  else
    v88 = *(_QWORD *)(v85 + 8);
  v89 = morphun::grammar::synthesis::GrammemeConstants::POS_VERB((morphun::grammar::synthesis::GrammemeConstants *)v85);
  v90 = *(unsigned __int8 *)(v89 + 23);
  v91 = *(_QWORD *)v89;
  v92 = *(_QWORD *)(v89 + 8);
  v93 = (morphun::grammar::synthesis::GrammemeConstants *)operator new(0x30uLL);
  *(_QWORD *)&__dst[8] = (char *)v93 + 48;
  *(_QWORD *)&__dst[16] = (char *)v93 + 48;
  if ((v90 & 0x80u) == 0)
    v94 = v89;
  else
    v94 = v91;
  if ((v90 & 0x80u) == 0)
    v95 = v90;
  else
    v95 = v92;
  *(_QWORD *)v93 = v83;
  *((_QWORD *)v93 + 1) = v84;
  *((_QWORD *)v93 + 2) = v87;
  *((_QWORD *)v93 + 3) = v88;
  *((_QWORD *)v93 + 4) = v94;
  *((_QWORD *)v93 + 5) = v95;
  *(_QWORD *)__dst = v93;
  v96 = morphun::grammar::synthesis::GrammemeConstants::PERSON_THIRD(v93);
  v97 = *(char *)(v96 + 23);
  if (v97 >= 0)
    v98 = v96;
  else
    v98 = *(_QWORD *)v96;
  if (v97 >= 0)
    v99 = *(unsigned __int8 *)(v96 + 23);
  else
    v99 = *(_QWORD *)(v96 + 8);
  v100 = morphun::grammar::synthesis::GrammemeConstants::PERSON_FIRST((morphun::grammar::synthesis::GrammemeConstants *)v96);
  v101 = *(char *)(v100 + 23);
  if (v101 >= 0)
    v102 = v100;
  else
    v102 = *(_QWORD *)v100;
  if (v101 >= 0)
    v103 = *(unsigned __int8 *)(v100 + 23);
  else
    v103 = *(_QWORD *)(v100 + 8);
  v104 = morphun::grammar::synthesis::GrammemeConstants::PERSON_SECOND((morphun::grammar::synthesis::GrammemeConstants *)v100);
  v105 = *(unsigned __int8 *)(v104 + 23);
  v106 = *(_QWORD *)v104;
  v107 = *(_QWORD *)(v104 + 8);
  *(_QWORD *)&__dst[24] = 0;
  *(_QWORD *)&__dst[32] = 0;
  v179 = 0;
  v108 = (morphun::grammar::synthesis::GrammemeConstants *)operator new(0x30uLL);
  *(_QWORD *)&__dst[32] = (char *)v108 + 48;
  v179 = (_QWORD *)((char *)v108 + 48);
  if ((v105 & 0x80u) == 0)
    v109 = v104;
  else
    v109 = v106;
  if ((v105 & 0x80u) == 0)
    v110 = v105;
  else
    v110 = v107;
  *(_QWORD *)v108 = v98;
  *((_QWORD *)v108 + 1) = v99;
  *((_QWORD *)v108 + 2) = v102;
  *((_QWORD *)v108 + 3) = v103;
  *((_QWORD *)v108 + 4) = v109;
  *((_QWORD *)v108 + 5) = v110;
  *(_QWORD *)&__dst[24] = v108;
  v111 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v108);
  v112 = *(char *)(v111 + 23);
  if (v112 >= 0)
    v113 = v111;
  else
    v113 = *(_QWORD *)v111;
  if (v112 >= 0)
    v114 = *(unsigned __int8 *)(v111 + 23);
  else
    v114 = *(_QWORD *)(v111 + 8);
  v115 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v111);
  v116 = *(unsigned __int8 *)(v115 + 23);
  v117 = *(_QWORD *)v115;
  v118 = *(_QWORD *)(v115 + 8);
  v180 = 0uLL;
  v181 = 0;
  v119 = (morphun::grammar::synthesis::GrammemeConstants *)operator new(0x20uLL);
  *((_QWORD *)&v180 + 1) = (char *)v119 + 32;
  v181 = (_QWORD *)((char *)v119 + 32);
  if ((v116 & 0x80u) == 0)
    v120 = v115;
  else
    v120 = v117;
  if ((v116 & 0x80u) == 0)
    v121 = v116;
  else
    v121 = v118;
  *(_QWORD *)v119 = v113;
  *((_QWORD *)v119 + 1) = v114;
  *((_QWORD *)v119 + 2) = v120;
  *((_QWORD *)v119 + 3) = v121;
  *(_QWORD *)&v180 = v119;
  v122 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(v119);
  v123 = *(char *)(v122 + 23);
  if (v123 >= 0)
    v124 = v122;
  else
    v124 = *(_QWORD *)v122;
  if (v123 >= 0)
    v125 = *(unsigned __int8 *)(v122 + 23);
  else
    v125 = *(_QWORD *)(v122 + 8);
  v126 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE((morphun::grammar::synthesis::GrammemeConstants *)v122);
  v127 = *(unsigned __int8 *)(v126 + 23);
  v128 = *(_QWORD *)v126;
  v129 = *(_QWORD *)(v126 + 8);
  v182 = 0;
  v183 = 0;
  v184 = 0;
  v130 = operator new(0x20uLL);
  v183 = v130 + 4;
  v184 = v130 + 4;
  if ((v127 & 0x80u) == 0)
    v131 = v126;
  else
    v131 = v128;
  if ((v127 & 0x80u) == 0)
    v132 = v127;
  else
    v132 = v129;
  *v130 = v124;
  v130[1] = v125;
  v130[2] = v131;
  v130[3] = v132;
  v182 = v130;
  v176 = 0;
  v175 = 0uLL;
  v171[0] = &v175;
  LOBYTE(v171[1]) = 0;
  *(_QWORD *)&v175 = operator new(0x60uLL);
  *((_QWORD *)&v175 + 1) = v175;
  v176 = (__int128 *)(v175 + 96);
  *((_QWORD *)&v175 + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<std::u16string_view>>,std::vector<std::u16string_view> const*,std::vector<std::u16string_view> const*,std::vector<std::u16string_view>*>((uint64_t)&v176, (uint64_t)__dst, (uint64_t)v185, (_QWORD *)v175);
  v171[0] = 0;
  v171[1] = 0;
  v172 = 0;
  morphun::dialog::DictionaryLookupInflector::DictionaryLookupInflector(v164 + 19, v80, (uint64_t)&v175, (uint64_t **)v171, 1);
  v169 = v171;
  std::vector<std::vector<std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100](&v169);
  v171[0] = &v175;
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100]((void ***)v171);
  for (n = 0; n != -12; n -= 3)
  {
    v134 = (&v182)[n];
    if (v134)
    {
      (&v183)[n] = v134;
      operator delete(v134);
    }
  }
  v135 = (morphun::TokenizerFactory *)morphun::util::LocaleUtils::SPANISH((morphun::util::LocaleUtils *)v134);
  v164[48] = morphun::TokenizerFactory::createTokenizer(v135, v136);
  v164[53] = 0;
  *(_OWORD *)(v164 + 49) = 0u;
  *(_OWORD *)(v164 + 51) = 0u;
  v137 = v164[18];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v175, (char *)L"singular");
  memset(__dst, 0, 24);
  v171[0] = __dst;
  LOBYTE(v171[1]) = 0;
  *(_QWORD *)__dst = operator new(0x18uLL);
  *(_QWORD *)&__dst[8] = *(_QWORD *)__dst;
  *(_QWORD *)&__dst[16] = *(_QWORD *)__dst + 24;
  *(_QWORD *)&__dst[8] = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&__dst[16], &v175, (__int128 *)v177, *(std::basic_string<char16_t> **)__dst);
  BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v137, v164 + 49, (uint64_t *)__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)BinaryProperties);
  v171[0] = __dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)v171);
  if (SHIBYTE(v176) < 0)
    operator delete((void *)v175);
  v139 = v164[18];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v175, "p");
  memset(__dst, 0, 24);
  v171[0] = __dst;
  LOBYTE(v171[1]) = 0;
  *(_QWORD *)__dst = operator new(0x18uLL);
  *(_QWORD *)&__dst[8] = *(_QWORD *)__dst;
  *(_QWORD *)&__dst[16] = *(_QWORD *)__dst + 24;
  *(_QWORD *)&__dst[8] = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&__dst[16], &v175, (__int128 *)v177, *(std::basic_string<char16_t> **)__dst);
  v140 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v139, v164 + 50, (uint64_t *)__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v140);
  v171[0] = __dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)v171);
  if (SHIBYTE(v176) < 0)
    operator delete((void *)v175);
  v141 = v164[18];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v175, "m");
  memset(__dst, 0, 24);
  v171[0] = __dst;
  LOBYTE(v171[1]) = 0;
  *(_QWORD *)__dst = operator new(0x18uLL);
  *(_QWORD *)&__dst[8] = *(_QWORD *)__dst;
  *(_QWORD *)&__dst[16] = *(_QWORD *)__dst + 24;
  *(_QWORD *)&__dst[8] = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&__dst[16], &v175, (__int128 *)v177, *(std::basic_string<char16_t> **)__dst);
  v142 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v141, v164 + 51, (uint64_t *)__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v142);
  v171[0] = __dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)v171);
  if (SHIBYTE(v176) < 0)
    operator delete((void *)v175);
  v143 = v164[18];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v175, (char *)L"feminine");
  memset(__dst, 0, 24);
  v171[0] = __dst;
  LOBYTE(v171[1]) = 0;
  *(_QWORD *)__dst = operator new(0x18uLL);
  *(_QWORD *)&__dst[8] = *(_QWORD *)__dst;
  *(_QWORD *)&__dst[16] = *(_QWORD *)__dst + 24;
  *(_QWORD *)&__dst[8] = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&__dst[16], &v175, (__int128 *)v177, *(std::basic_string<char16_t> **)__dst);
  v144 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v143, v164 + 52, (uint64_t *)__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v144);
  v171[0] = __dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)v171);
  if (SHIBYTE(v176) < 0)
    operator delete((void *)v175);
  v145 = v164[18];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v175, (char *)L"adposition");
  memset(__dst, 0, 24);
  v171[0] = __dst;
  LOBYTE(v171[1]) = 0;
  *(_QWORD *)__dst = operator new(0x18uLL);
  *(_QWORD *)&__dst[8] = *(_QWORD *)__dst;
  *(_QWORD *)&__dst[16] = *(_QWORD *)__dst + 24;
  *(_QWORD *)&__dst[8] = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&__dst[16], &v175, (__int128 *)v177, *(std::basic_string<char16_t> **)__dst);
  v146 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v145, v164 + 53, (uint64_t *)__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v146);
  v171[0] = __dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)v171);
  if (SHIBYTE(v176) < 0)
    operator delete((void *)v175);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, (char *)L"count");
  v147 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)v160, (unsigned __int16 *)__dst);
  if (v163 == (char *)v147)
    v148 = 0;
  else
    v148 = *(_QWORD *)(v147 + 56);
  *v157 = v148;
  if ((__dst[23] & 0x80000000) != 0)
    operator delete(*(void **)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, (char *)L"gender");
  v149 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)v160, (unsigned __int16 *)__dst);
  if (v163 == (char *)v149)
    v150 = 0;
  else
    v150 = *(_QWORD *)(v149 + 56);
  v164[2] = v150;
  if ((__dst[23] & 0x80000000) != 0)
    operator delete(*(void **)__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, "p");
  v151 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)v160, (unsigned __int16 *)__dst);
  if (v163 == (char *)v151)
    v152 = 0;
  else
    v152 = *(_QWORD *)(v151 + 56);
  v164[3] = v152;
  if ((__dst[23] & 0x80000000) != 0)
    operator delete(*(void **)__dst);
  v153 = *(_QWORD *)(*v164 - 56);
  result = *((_QWORD *)v159 + 29);
  if (result)
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
  *((_QWORD *)v159 + 29) = (char *)v164 + v153;
  return result;
}

void sub_1CB52A6EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char **a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *__p,uint64_t a46,int a47,__int16 a48,char a49,char a50)
{
  void *v50;
  uint64_t v51;

  __cxa_free_exception(v50);
  *(_QWORD *)(v51 - 208) = a16;
  std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v51 - 208));
  morphun::dialog::DefinitenessDisplayFunction::~DefinitenessDisplayFunction(a14);
  MEMORY[0x1D179D2EC](a25, 0x10F3C4029A517A0);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::EsGrammarSynthesizer::getCount(unsigned __int16 *a1)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  uint64_t *v9;
  morphun::grammar::synthesis::GrammemeConstants *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t i;
  std::basic_string<char16_t> v17;
  int v18;
  std::basic_string<char16_t> v19;
  int v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  if ((v2 & 1) == 0
  {
    v11 = (morphun::grammar::synthesis::GrammemeConstants *)operator new();
    v12 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v11);
    if (*(char *)(v12 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v17, *(const std::basic_string<char16_t>::value_type **)v12, *(_QWORD *)(v12 + 8));
    }
    else
    {
      v13 = *(_OWORD *)v12;
      v17.__r_.__value_.__r.__words[2] = *(_QWORD *)(v12 + 16);
      *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v13;
    }
    v18 = 1;
    v14 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v12);
    if (*(char *)(v14 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v19, *(const std::basic_string<char16_t>::value_type **)v14, *(_QWORD *)(v14 + 8));
    }
    else
    {
      v15 = *(_OWORD *)v14;
      v19.__r_.__value_.__r.__words[2] = *(_QWORD *)(v14 + 16);
      *(_OWORD *)&v19.__r_.__value_.__l.__data_ = v15;
    }
    v20 = 2;
    std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::EsGrammarSynthesizer::Count>::map[abi:ne180100]((uint64_t **)v11, (__int128 *)&v17, 2);
    for (i = 0; i != -8; i -= 4)
    {
      if (SHIBYTE(v19.__r_.__value_.__r.__words[i + 2]) < 0)
        operator delete(*(void **)((char *)&v19.__r_.__value_.__l.__data_ + i * 8));
    }
    morphun::grammar::synthesis::EsGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap = (uint64_t)v11;
  }
  if (!a1)
    return 0;
  v3 = morphun::grammar::synthesis::EsGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::EsGrammarSynthesizer::Count>>(morphun::grammar::synthesis::EsGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap);
  v6 = *(_QWORD *)(v3 + 8);
  v4 = v3 + 8;
  v5 = v6;
  if (!v6)
    goto LABEL_10;
  v7 = v4;
  do
  {
    v8 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v5 + 32), a1);
    v9 = (uint64_t *)(v5 + 8);
    if (!v8)
    {
      v9 = (uint64_t *)v5;
      v7 = v5;
    }
    v5 = *v9;
  }
  while (*v9);
  if (v7 == v4 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v7 + 32)))
LABEL_10:
    v7 = v4;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::EsGrammarSynthesizer::Count>>(morphun::grammar::synthesis::EsGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v7)
    return 0;
  else
    return *(unsigned int *)(v7 + 56);
}

void sub_1CB52AE68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  uint64_t v14;

  if (a14 < 0)
    operator delete(__p);
  MEMORY[0x1D179D2EC](v14, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::EsGrammarSynthesizer::Count>::map[abi:ne180100](uint64_t **a1, __int128 *a2, uint64_t a3)
{
  uint64_t *v4;
  __int128 *v5;
  __int128 *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  BOOL v11;
  char **v12;
  char **v13;
  char *v14;
  unsigned __int16 *v15;
  char *v16;
  std::basic_string<char16_t> *v17;
  __int128 v18;
  uint64_t *v19;

  a1[1] = 0;
  v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    v5 = a2;
    v6 = &a2[2 * a3];
    while (1)
    {
      v7 = a1[1];
      v8 = v4;
      if (*a1 != v4)
      {
        v9 = a1[1];
        v10 = v4;
        if (v7)
        {
          do
          {
            v8 = v9;
            v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            v8 = (uint64_t *)v10[2];
            v11 = *v8 == (_QWORD)v10;
            v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break;
      }
      v12 = (char **)v4;
      v13 = (char **)v4;
      if (!v7)
        goto LABEL_19;
      v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        v12 = (char **)v8;
LABEL_19:
        v16 = (char *)operator new(0x40uLL);
        v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((_QWORD *)v5 + 1));
        }
        else
        {
          v18 = *v5;
          *((_QWORD *)v16 + 6) = *((_QWORD *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(_QWORD *)v16 = 0;
        *((_QWORD *)v16 + 1) = 0;
        *((_QWORD *)v16 + 2) = v12;
        *v13 = v16;
        v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6)
        return a1;
    }
    v12 = (char **)v4;
    v13 = (char **)v4;
    if (v7)
    {
      v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          v12 = (char **)v14;
          v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break;
          v14 = *v12;
          v13 = v12;
          if (!*v12)
            goto LABEL_19;
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5))
          goto LABEL_25;
        v13 = v12 + 1;
        v14 = v12[1];
        if (!v14)
          goto LABEL_19;
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1CB52B08C(_Unwind_Exception *a1)
{
  void *v1;
  char **v2;

  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::EsGrammarSynthesizer::Count>>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB52B0F8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::EsGrammarSynthesizer::getGender(unsigned __int16 *a1)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  uint64_t *v9;
  morphun::grammar::synthesis::GrammemeConstants *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t i;
  std::basic_string<char16_t> v17;
  int v18;
  std::basic_string<char16_t> v19;
  int v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  if ((v2 & 1) == 0
  {
    v11 = (morphun::grammar::synthesis::GrammemeConstants *)operator new();
    v12 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(v11);
    if (*(char *)(v12 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v17, *(const std::basic_string<char16_t>::value_type **)v12, *(_QWORD *)(v12 + 8));
    }
    else
    {
      v13 = *(_OWORD *)v12;
      v17.__r_.__value_.__r.__words[2] = *(_QWORD *)(v12 + 16);
      *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v13;
    }
    v18 = 1;
    v14 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE((morphun::grammar::synthesis::GrammemeConstants *)v12);
    if (*(char *)(v14 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v19, *(const std::basic_string<char16_t>::value_type **)v14, *(_QWORD *)(v14 + 8));
    }
    else
    {
      v15 = *(_OWORD *)v14;
      v19.__r_.__value_.__r.__words[2] = *(_QWORD *)(v14 + 16);
      *(_OWORD *)&v19.__r_.__value_.__l.__data_ = v15;
    }
    v20 = 2;
    std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::EsGrammarSynthesizer::Gender>::map[abi:ne180100]((uint64_t **)v11, (__int128 *)&v17, 2);
    for (i = 0; i != -8; i -= 4)
    {
      if (SHIBYTE(v19.__r_.__value_.__r.__words[i + 2]) < 0)
        operator delete(*(void **)((char *)&v19.__r_.__value_.__l.__data_ + i * 8));
    }
    morphun::grammar::synthesis::EsGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap = (uint64_t)v11;
  }
  if (!a1)
    return 0;
  v3 = morphun::grammar::synthesis::EsGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::EsGrammarSynthesizer::Gender>>(morphun::grammar::synthesis::EsGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap);
  v6 = *(_QWORD *)(v3 + 8);
  v4 = v3 + 8;
  v5 = v6;
  if (!v6)
    goto LABEL_10;
  v7 = v4;
  do
  {
    v8 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v5 + 32), a1);
    v9 = (uint64_t *)(v5 + 8);
    if (!v8)
    {
      v9 = (uint64_t *)v5;
      v7 = v5;
    }
    v5 = *v9;
  }
  while (*v9);
  if (v7 == v4 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v7 + 32)))
LABEL_10:
    v7 = v4;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::EsGrammarSynthesizer::Gender>>(morphun::grammar::synthesis::EsGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v7)
    return 0;
  else
    return *(unsigned int *)(v7 + 56);
}

void sub_1CB52B2E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  uint64_t v14;

  if (a14 < 0)
    operator delete(__p);
  MEMORY[0x1D179D2EC](v14, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::EsGrammarSynthesizer::Gender>::map[abi:ne180100](uint64_t **a1, __int128 *a2, uint64_t a3)
{
  uint64_t *v4;
  __int128 *v5;
  __int128 *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  BOOL v11;
  char **v12;
  char **v13;
  char *v14;
  unsigned __int16 *v15;
  char *v16;
  std::basic_string<char16_t> *v17;
  __int128 v18;
  uint64_t *v19;

  a1[1] = 0;
  v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    v5 = a2;
    v6 = &a2[2 * a3];
    while (1)
    {
      v7 = a1[1];
      v8 = v4;
      if (*a1 != v4)
      {
        v9 = a1[1];
        v10 = v4;
        if (v7)
        {
          do
          {
            v8 = v9;
            v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            v8 = (uint64_t *)v10[2];
            v11 = *v8 == (_QWORD)v10;
            v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break;
      }
      v12 = (char **)v4;
      v13 = (char **)v4;
      if (!v7)
        goto LABEL_19;
      v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        v12 = (char **)v8;
LABEL_19:
        v16 = (char *)operator new(0x40uLL);
        v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((_QWORD *)v5 + 1));
        }
        else
        {
          v18 = *v5;
          *((_QWORD *)v16 + 6) = *((_QWORD *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(_QWORD *)v16 = 0;
        *((_QWORD *)v16 + 1) = 0;
        *((_QWORD *)v16 + 2) = v12;
        *v13 = v16;
        v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6)
        return a1;
    }
    v12 = (char **)v4;
    v13 = (char **)v4;
    if (v7)
    {
      v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          v12 = (char **)v14;
          v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break;
          v14 = *v12;
          v13 = v12;
          if (!*v12)
            goto LABEL_19;
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5))
          goto LABEL_25;
        v13 = v12 + 1;
        v14 = v12[1];
        if (!v14)
          goto LABEL_19;
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1CB52B50C(_Unwind_Exception *a1)
{
  void *v1;
  char **v2;

  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::EsGrammarSynthesizer::Gender>>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB52B578(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::Object::toString(morphun::Object *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  const char *v3;
  int32_t v4;
  void *__p[2];
  std::basic_string<char16_t>::size_type v6;

  __p[0] = 0;
  __p[1] = 0;
  v6 = 0;
  if (!this)
    __cxa_bad_typeid();
  v3 = (const char *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)this - 8) + 8) & 0x7FFFFFFFFFFFFFFFLL);
  v4 = strlen(v3);
  morphun::util::StringViewUtils::convert((uint64_t)__p, v3, v4);
  if (SHIBYTE(v6) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a2, (const std::basic_string<char16_t>::value_type *)__p[0], (std::basic_string<char16_t>::size_type)__p[1]);
    if (SHIBYTE(v6) < 0)
      operator delete(__p[0]);
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)__p;
    a2->__r_.__value_.__r.__words[2] = v6;
  }
}

void sub_1CB52B624(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void morphun::Object::~Object(morphun::Object *this)
{
  JUMPOUT(0x1D179D2ECLL);
}

void morphun::analysis::NlAnalyzer::~NlAnalyzer(void **this)
{
  *this = &off_1E86606D8;
  morphun::analysis::Analyzer::~Analyzer((morphun::analysis::Analyzer *)this, (uint64_t *)&off_1E8668F80);
}

{
  *this = &off_1E86606D8;
  morphun::analysis::Analyzer::~Analyzer((morphun::analysis::Analyzer *)this, (uint64_t *)&off_1E8668F80);
  JUMPOUT(0x1D179D2ECLL);
}

morphun::analysis::util::FilteringTokenFilter *morphun::analysis::NlAnalyzer::addStopFilter(morphun::analysis::NlAnalyzer *this, morphun::analysis::TokenStream *a2)
{
  morphun::analysis::util::FilteringTokenFilter *v4;

  v4 = (morphun::analysis::util::FilteringTokenFilter *)operator new();
  morphun::analysis::core::StopFilter::StopFilter(v4, (uint64_t)a2, *((_QWORD *)this + 8));
  return v4;
}

void sub_1CB52B748(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10F1C40C2748A64);
  _Unwind_Resume(a1);
}

morphun::analysis::util::AttributeSource *morphun::analysis::NlAnalyzer::addWordNormalizationFilter(morphun::analysis::NlAnalyzer *this, morphun::analysis::TokenStream *a2)
{
  morphun::analysis::util::AttributeSource *v4;
  uint64_t i;
  _QWORD *v6;
  uint64_t j;
  uint64_t v8;
  uint64_t *BinaryProperties;
  morphun::analysis::util::AttributeSource *v10;
  void **p_p;
  char v13;
  __int128 __dst;
  uint64_t v15;
  _QWORD v16[3];
  __int128 __p;
  uint64_t v18;
  __int128 v19;

  *(_QWORD *)&v19 = *MEMORY[0x1E0C80C00];
  v4 = (morphun::analysis::util::AttributeSource *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"'s");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v16, (char *)word_1CB73E1EE);
  __p = 0uLL;
  v18 = 0;
  v13 = 0;
  *(_QWORD *)&__p = operator new(0x30uLL);
  *((_QWORD *)&__p + 1) = __p;
  v18 = __p + 48;
  *((_QWORD *)&__p + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v18, &__dst, &__p, (std::basic_string<char16_t> *)__p);
  morphun::analysis::filter::SuffixFilter::SuffixFilter(v4, (uint64_t)a2, (__int128 **)&__p);
  p_p = (void **)&__p;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&p_p);
  for (i = 0; i != -6; i -= 3)
  {
    if (SHIBYTE(v16[i + 2]) < 0)
      operator delete((void *)v16[i]);
  }
  v6 = (_QWORD *)operator new();
  *v6 = &off_1E866A910;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"noun");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v16, "a");
  __p = 0uLL;
  v18 = 0;
  p_p = (void **)&__p;
  v13 = 0;
  *(_QWORD *)&__p = operator new(0x30uLL);
  *((_QWORD *)&__p + 1) = __p;
  v18 = __p + 48;
  *((_QWORD *)&__p + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v18, &__dst, &__p, (std::basic_string<char16_t> *)__p);
  morphun::analysis::stemmer::DictionaryLookupLemmaFilter::DictionaryLookupLemmaFilter((uint64_t)v6, (uint64_t *)&off_1E8669C70, (uint64_t)v4, (morphun::analysis::NlAnalyzer *)((char *)this + 80), 3, (uint64_t *)&__p);
  p_p = (void **)&__p;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&p_p);
  for (j = 0; j != -6; j -= 3)
  {
    if (SHIBYTE(v16[j + 2]) < 0)
      operator delete((void *)v16[j]);
  }
  *v6 = &off_1E8672BE0;
  v6[20] = 0;
  v8 = v6[17];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"diminutive");
  __dst = 0uLL;
  v15 = 0;
  p_p = (void **)&__dst;
  v13 = 0;
  *(_QWORD *)&__dst = operator new(0x18uLL);
  *((_QWORD *)&__dst + 1) = __dst;
  v15 = __dst + 24;
  *((_QWORD *)&__dst + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v15, &__p, &v19, (std::basic_string<char16_t> *)__dst);
  BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v8, v6 + 20, (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)BinaryProperties);
  p_p = (void **)&__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&p_p);
  if (SHIBYTE(v18) < 0)
    operator delete((void *)__p);
  v10 = (morphun::analysis::util::AttributeSource *)operator new();
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"en");
  morphun::analysis::filter::AmpersandToAndFilter::AmpersandToAndFilter(v10, (uint64_t)v6, &__dst);
  if (SHIBYTE(v15) < 0)
    operator delete((void *)__dst);
  return v10;
}

void sub_1CB52BA84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  uint64_t v25;

  if (a16 < 0)
    operator delete(__p);
  MEMORY[0x1D179D2EC](v25, 0x10F3C40C7D8954FLL);
  _Unwind_Resume(a1);
}

void morphun::analysis::MinimalAnalyzer::~MinimalAnalyzer(void **this)
{
  *this = &off_1E8660FC0;
  morphun::analysis::Analyzer::~Analyzer((morphun::analysis::Analyzer *)this, (uint64_t *)&off_1E8669140);
}

{
  *this = &off_1E8660FC0;
  morphun::analysis::Analyzer::~Analyzer((morphun::analysis::Analyzer *)this, (uint64_t *)&off_1E8669140);
  JUMPOUT(0x1D179D2ECLL);
}

morphun::analysis::Analyzer *morphun::analysis::MinimalAnalyzer::MinimalAnalyzer(morphun::analysis::MinimalAnalyzer *this, const morphun::util::ULocale *a2, const morphun::util::ULocale *a3, uint64_t a4)
{
  morphun::analysis::Analyzer *result;
  uint64_t v6;

  result = morphun::analysis::ConfigurableAnalyzer::ConfigurableAnalyzer(this, (uint64_t *)a2 + 1, a3, 0, a4);
  v6 = *(_QWORD *)a2;
  *(_QWORD *)result = *(_QWORD *)a2;
  *(_QWORD *)((char *)result + *(_QWORD *)(v6 - 40)) = *((_QWORD *)a2 + 7);
  return result;
}

morphun::analysis::Analyzer *morphun::analysis::MinimalAnalyzer::MinimalAnalyzer(morphun::analysis::MinimalAnalyzer *this, const morphun::util::ULocale *a2, uint64_t a3)
{
  morphun::analysis::Analyzer *result;

  *(_QWORD *)this = &off_1E866A910;
  result = morphun::analysis::ConfigurableAnalyzer::ConfigurableAnalyzer(this, (uint64_t *)&off_1E8669130, a2, 0, a3);
  *(_QWORD *)result = &off_1E8670DC8;
  return result;
}

void morphun::analysis::MinimalAnalyzer::~MinimalAnalyzer(void **this, _QWORD *a2)
{
  void *v4;

  v4 = (void *)a2[1];
  *this = v4;
  *(void **)((char *)this + *((_QWORD *)v4 - 5)) = (void *)a2[6];
  morphun::analysis::Analyzer::~Analyzer((morphun::analysis::Analyzer *)this, a2 + 3);
}

void `virtual thunk to'morphun::analysis::MinimalAnalyzer::~MinimalAnalyzer(morphun::analysis::MinimalAnalyzer *this)
{
  void **v1;

  v1 = (void **)((char *)this + *(_QWORD *)(*(_QWORD *)this - 32));
  *v1 = &off_1E8660FC0;
  morphun::analysis::Analyzer::~Analyzer((morphun::analysis::Analyzer *)v1, (uint64_t *)&off_1E8669140);
}

{
  morphun::analysis::MinimalAnalyzer::~MinimalAnalyzer((void **)((char *)this + *(_QWORD *)(*(_QWORD *)this - 32)));
}

void *mpron_toPronounConcept(const void *a1)
{
  void *result;
  _QWORD *exception;
  __int128 __dst;

  if (!a1
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"Object is not a PronounConcept");
    morphun::exception::Throwable::Throwable((uint64_t)exception, &__dst);
    *exception = &off_1E8673060;
  }
  return result;
}

void sub_1CB52BE84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  const std::exception *v15;
  void *v16;
  int v17;
  const void **v20;
  __CFError **v21;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
      goto LABEL_6;
  }
  else if (!v17)
  {
LABEL_6:
    if (a2 == 1)
    {
      v20 = (const void **)__cxa_begin_catch(exception_object);
      morphun::util::CFUtils::convert(v20, v15, v21);
      __cxa_end_catch();
      JUMPOUT(0x1CB52BE14);
    }
    _Unwind_Resume(exception_object);
  }
  __cxa_free_exception(v16);
  goto LABEL_6;
}

uint64_t mpron_createWithCustom(const morphun::dialog::SemanticFeatureModel *a1, const __CFArray *a2, const __CFDictionary *a3)
{
  CFIndex Count;
  CFIndex i;
  const void *ValueAtIndex;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t j;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  morphun::exception::NullPointerException *exception;
  __int128 v25;
  _BYTE v26[8];
  void **v27;
  _BYTE v28[24];
  void **v29;
  _BYTE v30[24];
  _BYTE *v31;

  memset(v28, 0, sizeof(v28));
  npc<morphun::dialog::SemanticFeatureModel const>((uint64_t)a1);
  morphun::dialog::SemanticUtils::to_constraintMap((morphun::dialog::SemanticUtils *)v26, a1, a3);
  Count = CFArrayGetCount(a2);
  if (Count >= 1)
  {
    for (i = 0; i != Count; ++i)
    {
      ValueAtIndex = CFArrayGetValueAtIndex(a2, i);
      if (!ValueAtIndex)
      {
        exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
        morphun::exception::NullPointerException::NullPointerException(exception);
      }
      v9 = *(_QWORD *)&v28[8];
      if (*(_QWORD *)&v28[8] >= *(_QWORD *)&v28[16])
      {
        v11 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(_QWORD *)&v28[8] - *(_QWORD *)v28) >> 3);
        v12 = v11 + 1;
        if ((unint64_t)(v11 + 1) > 0x492492492492492)
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        if (0xDB6DB6DB6DB6DB6ELL * ((uint64_t)(*(_QWORD *)&v28[16] - *(_QWORD *)v28) >> 3) > v12)
          v12 = 0xDB6DB6DB6DB6DB6ELL * ((uint64_t)(*(_QWORD *)&v28[16] - *(_QWORD *)v28) >> 3);
        if ((unint64_t)(0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(_QWORD *)&v28[16] - *(_QWORD *)v28) >> 3)) >= 0x249249249249249)
          v13 = 0x492492492492492;
        else
          v13 = v12;
        v31 = &v28[16];
        if (v13)
          v13 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<morphun::dialog::SemanticFeatureModel_DisplayValue>>(v13);
        else
          v14 = 0;
        v29 = (void **)v13;
        *(_QWORD *)v30 = v13 + 56 * v11;
        *(_QWORD *)&v30[8] = *(_QWORD *)v30;
        *(_QWORD *)&v30[16] = v13 + 56 * v14;
        std::allocator<morphun::dialog::SemanticFeatureModel_DisplayValue>::construct[abi:ne180100]<morphun::dialog::SemanticFeatureModel_DisplayValue,morphun::dialog::SemanticFeatureModel_DisplayValue const&>(*(uint64_t *)v30, (uint64_t)ValueAtIndex);
        v15 = *(_QWORD *)v30;
        *(_QWORD *)&v30[8] += 56;
        v16 = *(_OWORD *)v28;
        for (j = 56; ; j -= 56)
        {
          v18 = v15 + j;
          if (*((_QWORD *)&v16 + 1) + j - 56 == (_QWORD)v16)
            break;
          v19 = *((_QWORD *)&v16 + 1) + j - 112;
          std::allocator<morphun::dialog::SemanticFeatureModel_DisplayValue>::construct[abi:ne180100]<morphun::dialog::SemanticFeatureModel_DisplayValue,morphun::dialog::SemanticFeatureModel_DisplayValue const&>(v18 - 112, v19);
        }
        v20 = *(_QWORD *)&v28[16];
        v25 = *(_OWORD *)&v30[8];
        v21 = *(_OWORD *)v28;
        *(_QWORD *)v28 = v18 - 56;
        *(_OWORD *)v30 = v21;
        *(_OWORD *)&v28[8] = v25;
        *(_QWORD *)&v30[16] = v20;
        v29 = (void **)v21;
        std::__split_buffer<morphun::dialog::SemanticFeatureModel_DisplayValue>::~__split_buffer((uint64_t)&v29);
        v10 = v25;
      }
      else
      {
        std::allocator<morphun::dialog::SemanticFeatureModel_DisplayValue>::construct[abi:ne180100]<morphun::dialog::SemanticFeatureModel_DisplayValue,morphun::dialog::SemanticFeatureModel_DisplayValue const&>(*(uint64_t *)&v28[8], (uint64_t)ValueAtIndex);
        v10 = v9 + 56;
      }
      *(_QWORD *)&v28[8] = v10;
    }
  }
  v22 = operator new();
  morphun::dialog::PronounConcept::PronounConcept(v22, (uint64_t)a1, (uint64_t *)v28, (uint64_t)v26);
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(v27);
  v29 = (void **)v28;
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100](&v29);
  return v22;
}

void sub_1CB52C188(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::exception *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char *a14, void **a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char a20)
{
  uint64_t v20;
  const void **v23;
  __CFError **v24;

  MEMORY[0x1D179D2EC](v20, 0x10E1C4055CA4715);
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(a15);
  a14 = &a17;
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100]((void ***)&a14);
  if (a2 == 1)
  {
    v23 = (const void **)__cxa_begin_catch(a1);
    morphun::util::CFUtils::convert(v23, a9, v24);
    __cxa_end_catch();
    JUMPOUT(0x1CB52C130);
  }
  _Unwind_Resume(a1);
}

void sub_1CB52C2C4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__split_buffer<morphun::dialog::SemanticFeatureModel_DisplayValue>::~__split_buffer(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    v4 = *(_QWORD *)(i - 56);
    *(_QWORD *)(a1 + 16) = i - 56;
    (*(void (**)(void))(v4 + 8))();
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t mpron_createWithDefaults(const morphun::dialog::SemanticFeatureModel *a1, const __CFDictionary *a2)
{
  uint64_t v4;
  _BYTE v6[8];
  void **v7;

  npc<morphun::dialog::SemanticFeatureModel const>((uint64_t)a1);
  morphun::dialog::SemanticUtils::to_constraintMap((morphun::dialog::SemanticUtils *)v6, a1, a2);
  v4 = operator new();
  morphun::dialog::PronounConcept::PronounConcept(v4, (uint64_t)a1, (uint64_t)v6);
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(v7);
  return v4;
}

void sub_1CB52C3A4(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void **a11)
{
  const std::exception *v11;
  uint64_t v12;
  uint64_t v13;
  const void **v16;
  __CFError **v17;

  v13 = v12;
  MEMORY[0x1D179D2EC](v13, 0x10E1C4055CA4715);
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(a11);
  if (a2 == 1)
  {
    v16 = (const void **)__cxa_begin_catch(a1);
    morphun::util::CFUtils::convert(v16, v11, v17);
    __cxa_end_catch();
    JUMPOUT(0x1CB52C38CLL);
  }
  _Unwind_Resume(a1);
}

uint64_t mpron_createFromInitialPronoun(uint64_t a1, const __CFString *a2)
{
  uint64_t v4;
  std::basic_string<char16_t> *p_p;
  std::basic_string<char16_t>::size_type size;
  std::basic_string<char16_t> __p;

  v4 = operator new();
  npc<morphun::dialog::SemanticFeatureModel const>(a1);
  morphun::util::CFUtils::to_u16string(&__p, a2);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  morphun::dialog::PronounConcept::PronounConcept(v4, a1, (UChar *)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return v4;
}

void sub_1CB52C4C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  const std::exception *v15;
  uint64_t v16;
  const void **v19;
  __CFError **v20;

  if (a15 < 0)
    operator delete(__p);
  MEMORY[0x1D179D2EC](v16, 0x10E1C4055CA4715);
  if (a2 == 1)
  {
    v19 = (const void **)__cxa_begin_catch(a1);
    morphun::util::CFUtils::convert(v19, v15, v20);
    __cxa_end_catch();
    JUMPOUT(0x1CB52C4ACLL);
  }
  _Unwind_Resume(a1);
}

uint64_t mpron_destroy(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
  return result;
}

void morphun::dialog::SemanticFeatureModel_DisplayData::~SemanticFeatureModel_DisplayData(morphun::dialog::SemanticFeatureModel_DisplayData *this)
{
  void **v1;

  *(_QWORD *)this = &off_1E866B660;
  v1 = (void **)((char *)this + 8);
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100](&v1);
}

{
  void **v1;

  *(_QWORD *)this = &off_1E866B660;
  v1 = (void **)((char *)this + 8);
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100](&v1);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t *morphun::dialog::SemanticFeatureModel_DisplayData::SemanticFeatureModel_DisplayData(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v4;

  v4 = *a2;
  *a1 = *a2;
  *(uint64_t *)((char *)a1 + *(_QWORD *)(v4 - 40)) = a2[1];
  a1[2] = 0;
  a1[3] = 0;
  a1[1] = 0;
  std::vector<morphun::dialog::SemanticFeatureModel_DisplayValue>::__init_with_size[abi:ne180100]<morphun::dialog::SemanticFeatureModel_DisplayValue*,morphun::dialog::SemanticFeatureModel_DisplayValue*>(a1 + 1, *a3, a3[1], 0x6DB6DB6DB6DB6DB7 * ((a3[1] - *a3) >> 3));
  return a1;
}

_QWORD *morphun::dialog::SemanticFeatureModel_DisplayData::SemanticFeatureModel_DisplayData(_QWORD *a1, uint64_t *a2)
{
  *a1 = &off_1E866B660;
  a1[2] = 0;
  a1[3] = 0;
  a1[1] = 0;
  std::vector<morphun::dialog::SemanticFeatureModel_DisplayValue>::__init_with_size[abi:ne180100]<morphun::dialog::SemanticFeatureModel_DisplayValue*,morphun::dialog::SemanticFeatureModel_DisplayValue*>(a1 + 1, *a2, a2[1], 0x6DB6DB6DB6DB6DB7 * ((a2[1] - *a2) >> 3));
  return a1;
}

void morphun::dialog::SemanticFeatureModel_DisplayData::~SemanticFeatureModel_DisplayData(morphun::dialog::SemanticFeatureModel_DisplayData *this, uint64_t *a2)
{
  uint64_t v2;
  void **v3;

  v2 = *a2;
  *(_QWORD *)this = *a2;
  *(_QWORD *)((char *)this + *(_QWORD *)(v2 - 40)) = a2[1];
  v3 = (void **)((char *)this + 8);
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100](&v3);
}

void `virtual thunk to'morphun::dialog::SemanticFeatureModel_DisplayData::~SemanticFeatureModel_DisplayData(morphun::dialog::SemanticFeatureModel_DisplayData *this)
{
  char *v1;
  void **v2;

  v1 = (char *)this + *(_QWORD *)(*(_QWORD *)this - 32);
  *(_QWORD *)v1 = &off_1E866B660;
  v2 = (void **)(v1 + 8);
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100](&v2);
}

{
  char *v1;
  void **v2;

  v1 = (char *)this + *(_QWORD *)(*(_QWORD *)this - 32);
  *(_QWORD *)v1 = &off_1E866B660;
  v2 = (void **)(v1 + 8);
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100](&v2);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::dialog::SemanticFeatureModel_DisplayData::getValues(morphun::dialog::SemanticFeatureModel_DisplayData *this)
{
  return (uint64_t)this + 8;
}

unint64_t morphun::dialog::SemanticFeatureModel_DisplayData::hashCode(morphun::dialog::SemanticFeatureModel_DisplayData *this)
{
  return morphun::dialog::SemanticFeatureModel_DisplayData::operator()((uint64_t)this, (uint64_t)this);
}

unint64_t morphun::dialog::SemanticFeatureModel_DisplayData::operator()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  int v8;
  uint64_t *v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  if (v2 == v3)
    return 0;
  v4 = 0;
  do
  {
    v7 = *(uint64_t **)(v2 + 8);
    v6 = v2 + 8;
    v5 = v7;
    v8 = *(char *)(v6 + 23);
    if (v8 >= 0)
      v9 = (uint64_t *)v6;
    else
      v9 = v5;
    if (v8 >= 0)
      v10 = *(unsigned __int8 *)(v6 + 23);
    else
      v10 = *(_QWORD *)(v6 + 8);
    v4 ^= (v4 << 6)
        + (v4 >> 2)
        + 2654435769u
        + std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100](v9, 2 * v10);
    v2 = v6 + 48;
  }
  while (v2 != v3);
  return v4;
}

BOOL morphun::dialog::SemanticFeatureModel_DisplayData::operator==(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL8 result;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 8);
  if (v3 - v2 != *(_QWORD *)(a2 + 16) - v4)
    return 0;
  if (v2 == v3)
    return 1;
  do
  {
    result = morphun::dialog::SemanticFeatureModel_DisplayValue::operator==(v2, v4);
    if (!result)
      break;
    v2 += 56;
    v4 += 56;
  }
  while (v2 != v3);
  return result;
}

BOOL morphun::dialog::SemanticFeatureModel_DisplayData::operator!=(uint64_t a1, uint64_t a2)
{
  return !morphun::dialog::SemanticFeatureModel_DisplayData::operator==(a1, a2);
}

uint64_t **com::apple::siri::tokenizer::data::config_bg::getContent@<X0>(uint64_t **a1@<X8>)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v3 = xmmword_1E8686A40;
  v4 = 0x1CB73E8CALL;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

void morphun::dialog::DefinitenessDisplayFunction::~DefinitenessDisplayFunction(char **this)
{
  *this = (char *)&off_1E866B550;
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(this[9]);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(this[6]);
}

{
  *this = (char *)&off_1E866B550;
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(this[9]);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(this[6]);
  JUMPOUT(0x1D179D2ECLL);
}

morphun::dialog::SemanticFeatureModel_DisplayValue *morphun::dialog::DefinitenessDisplayFunction::addDefiniteness(uint64_t *a1, morphun::dialog::SemanticFeatureModel_DisplayValue *a2, uint64_t a3)
{
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  int ArticlePrefixLength;
  const std::basic_string<char16_t> *v10;
  std::allocator<char16_t> *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  unsigned __int16 *v19;
  unsigned __int16 *v20;
  uint64_t v21;
  const morphun::dialog::SpeakableString *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  unsigned __int16 *v28;
  unsigned __int16 *v29;
  uint64_t v30;
  char v31;
  const std::basic_string<char16_t> *v33;
  std::allocator<char16_t> *v34;
  const std::basic_string<char16_t> *v35;
  std::basic_string<char16_t> v36;
  std::basic_string<char16_t> __p;

  if (!a2)
    return 0;
  v5 = a1;
  v6 = a1[1];
  npc<morphun::dialog::SemanticFeature const>(v6);
  v7 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, v6);
  if ((_QWORD *)(a3 + 8) == v7)
    return a2;
  v8 = v7;
  memset(&__p, 0, sizeof(__p));
  ArticlePrefixLength = morphun::dialog::DefinitenessDisplayFunction::getArticlePrefixLength((uint64_t)a2, v5 + 5);
  if (ArticlePrefixLength < 1)
  {
    v12 = morphun::dialog::DefinitenessDisplayFunction::getArticlePrefixLength((uint64_t)a2, v5 + 8);
    if (v12 < 1)
    {
      v35 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(morphun::dialog::SemanticFeatureModel_DisplayValue *))(*(_QWORD *)a2 + 24))(a2);
      std::basic_string<char16_t>::operator=(&__p, v35);
      goto LABEL_8;
    }
    v33 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(morphun::dialog::SemanticFeatureModel_DisplayValue *))(*(_QWORD *)a2 + 24))(a2);
    std::basic_string<char16_t>::basic_string(&v36, v33, v12, 0xFFFFFFFFFFFFFFFFLL, v34);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    v10 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(morphun::dialog::SemanticFeatureModel_DisplayValue *))(*(_QWORD *)a2 + 24))(a2);
    std::basic_string<char16_t>::basic_string(&v36, v10, ArticlePrefixLength, 0xFFFFFFFFFFFFFFFFLL, v11);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    v12 = 0;
  }
  __p = v36;
LABEL_8:
  v13 = (*(uint64_t (**)(morphun::dialog::SemanticFeatureModel_DisplayValue *))(*(_QWORD *)a2 + 40))(a2);
  v14 = morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue((uint64_t)&v36, (__int128 *)&__p, v13);
  if (ArticlePrefixLength <= 0)
  {
    v14 = morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_DEFINITE((morphun::grammar::synthesis::GrammemeConstants *)v14);
    v15 = *((unsigned __int8 *)v8 + 127);
    v16 = (char)v15;
    if ((v15 & 0x80u) != 0)
      v15 = v8[14];
    v17 = *(unsigned __int8 *)(v14 + 23);
    v18 = (char)v17;
    if ((v17 & 0x80u) != 0)
      v17 = *(_QWORD *)(v14 + 8);
    if (v15 == v17)
    {
      if (!v15)
      {
LABEL_23:
        v21 = npc<morphun::dialog::DefaultFeatureFunction const>(v5[3]);
        v22 = (const morphun::dialog::SpeakableString *)(*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *, uint64_t))(*(_QWORD *)v21 + 24))(v21, &v36, a3);
        if (v22)
          goto LABEL_42;
        goto LABEL_43;
      }
      if (v18 >= 0)
        v19 = (unsigned __int16 *)v14;
      else
        v19 = *(unsigned __int16 **)v14;
      if (v16 >= 0)
        v20 = (unsigned __int16 *)(v8 + 13);
      else
        v20 = (unsigned __int16 *)v8[13];
      while (*v19 == *v20)
      {
        ++v20;
        ++v19;
        if (!--v15)
          goto LABEL_23;
      }
    }
  }
  if (v12 <= 0)
  {
    v23 = morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_INDEFINITE((morphun::grammar::synthesis::GrammemeConstants *)v14);
    v24 = *((unsigned __int8 *)v8 + 127);
    v25 = (char)v24;
    if ((v24 & 0x80u) != 0)
      v24 = v8[14];
    v26 = *(unsigned __int8 *)(v23 + 23);
    v27 = (char)v26;
    if ((v26 & 0x80u) != 0)
      v26 = *(_QWORD *)(v23 + 8);
    if (v24 == v26)
    {
      if (v24)
      {
        if (v27 >= 0)
          v28 = (unsigned __int16 *)v23;
        else
          v28 = *(unsigned __int16 **)v23;
        if (v25 >= 0)
          v29 = (unsigned __int16 *)(v8 + 13);
        else
          v29 = (unsigned __int16 *)v8[13];
        while (*v28 == *v29)
        {
          ++v29;
          ++v28;
          if (!--v24)
            goto LABEL_41;
        }
        goto LABEL_43;
      }
LABEL_41:
      v30 = npc<morphun::dialog::DefaultFeatureFunction const>(v5[4]);
      v22 = (const morphun::dialog::SpeakableString *)(*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *, uint64_t))(*(_QWORD *)v30 + 24))(v30, &v36, a3);
      if (v22)
      {
LABEL_42:
        v5 = (uint64_t *)morphun::dialog::DefinitenessDisplayFunction::replaceDisplayValue((morphun::dialog::DefinitenessDisplayFunction *)v5, a2, v22);
        (*(void (**)(const morphun::dialog::SpeakableString *))(*(_QWORD *)v22 + 16))(v22);
        v31 = 0;
        goto LABEL_44;
      }
    }
  }
LABEL_43:
  v31 = 1;
LABEL_44:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((v31 & 1) == 0)
      return (morphun::dialog::SemanticFeatureModel_DisplayValue *)v5;
    return a2;
  }
  if ((v31 & 1) != 0)
    return a2;
  return (morphun::dialog::SemanticFeatureModel_DisplayValue *)v5;
}

void sub_1CB52CCDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  uint64_t v22;

  (*(void (**)(uint64_t))(*(_QWORD *)v22 + 16))(v22);
  if (a22 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_1CB52CD84(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

unint64_t morphun::dialog::DefinitenessDisplayFunction::getArticlePrefixLength(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  int32_t v4;
  const UChar *v5;
  uint64_t v6;
  uint64_t v7;
  const UChar *v8;
  int32_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;
  unsigned __int16 *p_p;
  unint64_t v15;
  unint64_t v16;
  unsigned __int16 *v17;
  unint64_t v18;
  unsigned __int16 *v19;
  _QWORD *v20;
  _QWORD *v21;
  BOOL v22;
  void *__p;
  unint64_t v25;
  uint64_t v26;

  __p = 0;
  v25 = 0;
  v26 = 0;
  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1);
  v4 = *(unsigned __int8 *)(v3 + 23);
  v5 = *(const UChar **)v3;
  v6 = *(_QWORD *)(v3 + 8);
  v7 = morphun::util::LocaleUtils::ROOT((morphun::util::LocaleUtils *)v3);
  if ((v4 & 0x80u) == 0)
    v8 = (const UChar *)v3;
  else
    v8 = v5;
  if ((v4 & 0x80u) == 0)
    v9 = v4;
  else
    v9 = v6;
  morphun::util::StringViewUtils::lowercase((uint64_t)&__p, v8, v9, v7);
  v12 = (_QWORD *)*a2;
  v11 = a2 + 1;
  v10 = v12;
  if (v12 != v11)
  {
    p_p = (unsigned __int16 *)__p;
    v13 = v25;
    if (v26 >= 0)
    {
      v13 = HIBYTE(v26);
      p_p = (unsigned __int16 *)&__p;
    }
    do
    {
      v15 = *((unsigned __int8 *)v10 + 55);
      if (*((char *)v10 + 55) < 0)
      {
        v16 = v10[5];
        if (v16 < v13)
        {
LABEL_14:
          if (!v16)
            goto LABEL_30;
          if (v16 == -1)
            std::basic_string<char16_t>::__throw_out_of_range[abi:ne180100]();
          if ((v15 & 0x80u) == 0)
            v17 = (unsigned __int16 *)(v10 + 4);
          else
            v17 = (unsigned __int16 *)v10[4];
          v18 = v16;
          v19 = p_p;
          while (*v17 == *v19)
          {
            ++v19;
            ++v17;
            if (!--v18)
              goto LABEL_30;
          }
        }
      }
      else
      {
        v16 = *((unsigned __int8 *)v10 + 55);
        if (v13 > v15)
          goto LABEL_14;
      }
      v20 = (_QWORD *)v10[1];
      if (v20)
      {
        do
        {
          v21 = v20;
          v20 = (_QWORD *)*v20;
        }
        while (v20);
      }
      else
      {
        do
        {
          v21 = (_QWORD *)v10[2];
          v22 = *v21 == (_QWORD)v10;
          v10 = v21;
        }
        while (!v22);
      }
      v10 = v21;
    }
    while (v21 != v11);
  }
  v16 = 0xFFFFFFFFLL;
LABEL_30:
  if (v26 < 0)
    operator delete(__p);
  return v16;
}

void sub_1CB52CEFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t npc<morphun::dialog::DefaultFeatureFunction const>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB52CF60(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::DefinitenessDisplayFunction::replaceDisplayValue(morphun::dialog::DefinitenessDisplayFunction *this, morphun::dialog::SemanticFeatureModel_DisplayValue *a2, const morphun::dialog::SpeakableString *a3)
{
  uint64_t v6;
  const std::basic_string<char16_t> *v7;
  const morphun::dialog::SemanticFeature *v8;
  uint64_t *v9;
  uint64_t v10;
  __int128 *v11;
  uint64_t *v13[3];
  const morphun::dialog::SemanticFeature *v14;

  v6 = (*(uint64_t (**)(morphun::dialog::SemanticFeatureModel_DisplayValue *))(*(_QWORD *)a2 + 40))(a2);
  std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100](v13, v6);
  if (((*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(_QWORD *)a3 + 48))(a3) & 1) == 0)
  {
    v7 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(_QWORD *)a3 + 40))(a3);
    v8 = (const morphun::dialog::SemanticFeature *)*((_QWORD *)this + 2);
    npc<morphun::dialog::SemanticFeature const>((uint64_t)v8);
    v14 = v8;
    v9 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__emplace_unique_key_args<morphun::dialog::SemanticFeature,std::piecewise_construct_t const&,std::tuple<morphun::dialog::SemanticFeature const&>,std::tuple<>>(v13, (uint64_t)v8, &v14);
    std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)(v9 + 13), v7);
  }
  v10 = operator new();
  v11 = (__int128 *)(*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(_QWORD *)a3 + 32))(a3);
  morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue(v10, v11, (uint64_t)v13);
  (*(void (**)(morphun::dialog::SemanticFeatureModel_DisplayValue *))(*(_QWORD *)a2 + 16))(a2);
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy((void **)v13[1]);
  return v10;
}

void sub_1CB52D070(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(a10);
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__emplace_unique_key_args<morphun::dialog::SemanticFeature,std::piecewise_construct_t const&,std::tuple<morphun::dialog::SemanticFeature const&>,std::tuple<>>(uint64_t **a1, uint64_t a2, const morphun::dialog::SemanticFeature **a3)
{
  uint64_t **v5;
  uint64_t *v6;
  uint64_t **v7;
  _QWORD v9[2];
  char v10;
  uint64_t v11;

  v5 = (uint64_t **)std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__find_equal<morphun::dialog::SemanticFeature>((uint64_t)a1, &v11, a2);
  v6 = *v5;
  if (!*v5)
  {
    v7 = v5;
    v6 = (uint64_t *)operator new(0x80uLL);
    v9[0] = v6;
    v9[1] = a1 + 1;
    v10 = 0;
    morphun::dialog::SemanticFeature::SemanticFeature((morphun::dialog::SemanticFeature *)(v6 + 4), *a3);
    v6[13] = 0;
    v6[14] = 0;
    v6[15] = 0;
    v10 = 1;
    std::__tree<std::u16string_view>::__insert_node_at(a1, v11, v7, v6);
    v9[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100]((uint64_t)v9);
  }
  return v6;
}

void sub_1CB52D150(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::unique_ptr<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void morphun::dialog::DefinitenessDisplayFunction::getArticles(uint64_t a1, morphun::lang::features::LanguageGrammarFeatures *a2, unsigned __int16 *a3, uint64_t a4)
{
  _QWORD **v7;
  std::basic_string<char16_t>::size_type size;
  _BOOL4 v9;
  BOOL v10;
  std::basic_string<char16_t> *v11;
  uint64_t v12;
  unsigned __int16 *v13;
  int v14;
  int v15;
  int v16;
  int v17;
  BOOL v19;
  _QWORD *v20;
  _QWORD **v21;
  std::basic_string<char16_t>::size_type v22;
  std::basic_string<char16_t>::size_type v23;
  const std::basic_string<char16_t>::value_type *v24;
  std::basic_string<char16_t>::size_type v25;
  std::basic_string<char16_t>::size_type v26;
  std::basic_string<char16_t> *v27;
  BOOL v28;
  std::basic_string<char16_t>::size_type v29;
  std::basic_string<char16_t>::size_type v30;
  int v31;
  uint64_t v32;
  std::basic_string<char16_t>::size_type v33;
  std::basic_string<char16_t> v35;
  std::basic_string<char16_t> __p;
  std::basic_string<char16_t> v37;
  _QWORD **v38;
  _QWORD *v39[2];

  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = a1 + 8;
  morphun::lang::features::LanguageGrammarFeatures::getLanguageGrammarFeatures(a2, &v37);
  morphun::lang::features::LanguageGrammarFeatures::getFeatures((morphun::lang::features::LanguageGrammarFeatures *)&v37, (uint64_t)&v38);
  v37.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&off_1E866A5F8;
  v7 = v38;
  if (v38 == v39)
    goto LABEL_63;
  while (1)
  {
    if (*((char *)v7 + 63) < 0)
      std::basic_string<char16_t>::__init_copy_ctor_external(&v37, (const std::basic_string<char16_t>::value_type *)v7[5], (std::basic_string<char16_t>::size_type)v7[6]);
    else
      v37 = *(std::basic_string<char16_t> *)(v7 + 5);
    size = HIBYTE(v37.__r_.__value_.__r.__words[2]);
    if ((v37.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      size = v37.__r_.__value_.__l.__size_;
    v9 = size == a4;
    v10 = size != a4 || a4 == 0;
    if (!v10)
    {
      v11 = (std::basic_string<char16_t> *)v37.__r_.__value_.__r.__words[0];
      if ((v37.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v11 = &v37;
      v12 = a4 - 1;
      v13 = a3;
      do
      {
        v15 = (unsigned __int16)v11->__r_.__value_.__s.__data_[0];
        v11 = (std::basic_string<char16_t> *)((char *)v11 + 2);
        v14 = v15;
        v17 = *v13++;
        v16 = v17;
        v19 = v12-- != 0;
        v9 = v16 == v14;
      }
      while (v16 == v14 && v19);
    }
    if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v37.__r_.__value_.__l.__data_);
    if (v9)
      break;
    v20 = v7[1];
    if (v20)
    {
      do
      {
        v21 = (_QWORD **)v20;
        v20 = (_QWORD *)*v20;
      }
      while (v20);
    }
    else
    {
      do
      {
        v21 = (_QWORD **)v7[2];
        v10 = *v21 == v7;
        v7 = v21;
      }
      while (!v10);
    }
    v7 = v21;
    if (v21 == v39)
      goto LABEL_63;
  }
  memset(&v37, 0, sizeof(v37));
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__init_with_size[abi:ne180100]<morphun::lang::features::LanguageGrammarFeatures_Feature*,morphun::lang::features::LanguageGrammarFeatures_Feature*>((uint64_t)&v37, (uint64_t)v7[8], (uint64_t)v7[9], 0x6DB6DB6DB6DB6DB7 * (v7[9] - v7[8]));
  v23 = v37.__r_.__value_.__l.__size_;
  v22 = v37.__r_.__value_.__r.__words[0];
  if (v37.__r_.__value_.__r.__words[0] == v37.__r_.__value_.__l.__size_)
  {
    v24 = &word_1CB73EE14;
    goto LABEL_50;
  }
  v24 = &word_1CB73EE14;
  while (1)
  {
    (*(void (**)(std::basic_string<char16_t> *__return_ptr, std::basic_string<char16_t>::size_type))(*(_QWORD *)v22 + 24))(&__p, v22);
    v25 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v25 = __p.__r_.__value_.__l.__size_;
    if (v25)
    {
      (*(void (**)(std::basic_string<char16_t> *__return_ptr, std::basic_string<char16_t>::size_type))(*(_QWORD *)v22 + 24))(&v35, v22);
      v26 = v35.__r_.__value_.__l.__size_;
      if ((v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v27 = &v35;
      else
        v27 = (std::basic_string<char16_t> *)v35.__r_.__value_.__r.__words[0];
      if ((v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v26 = HIBYTE(v35.__r_.__value_.__r.__words[2]);
      v28 = v27->__r_.__value_.__s.__data_[v26 - 1] == 32;
      if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v35.__r_.__value_.__l.__data_);
      if ((*((_BYTE *)&__p.__r_.__value_.__s + 23) & 0x80) != 0)
LABEL_42:
        operator delete(__p.__r_.__value_.__l.__data_);
    }
    else
    {
      v28 = 0;
      if ((*((_BYTE *)&__p.__r_.__value_.__s + 23) & 0x80) != 0)
        goto LABEL_42;
    }
    if (v28)
      break;
    v22 += 56;
    if (v22 == v23)
      goto LABEL_50;
  }
  v24 = &word_1CB73EB86;
LABEL_50:
  __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v37;
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  memset(&v37, 0, sizeof(v37));
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__init_with_size[abi:ne180100]<morphun::lang::features::LanguageGrammarFeatures_Feature*,morphun::lang::features::LanguageGrammarFeatures_Feature*>((uint64_t)&v37, (uint64_t)v7[8], (uint64_t)v7[9], 0x6DB6DB6DB6DB6DB7 * (v7[9] - v7[8]));
  v30 = v37.__r_.__value_.__l.__size_;
  v29 = v37.__r_.__value_.__r.__words[0];
  if (v37.__r_.__value_.__r.__words[0] != v37.__r_.__value_.__l.__size_)
  {
    v31 = *(unsigned __int16 *)v24;
    do
    {
      (*(void (**)(std::basic_string<char16_t> *__return_ptr, std::basic_string<char16_t>::size_type))(*(_QWORD *)v29 + 24))(&v35, v29);
      if (v31)
      {
        v32 = 0;
        do
          v33 = v32 + 1;
        while (v24[++v32]);
      }
      else
      {
        v33 = 0;
      }
      std::basic_string<char16_t>::append(&v35, v24, v33);
      __p = v35;
      memset(&v35, 0, sizeof(v35));
      std::__tree<std::basic_string<char16_t>>::__emplace_unique_key_args<std::basic_string<char16_t>,std::basic_string<char16_t>>((uint64_t **)a1, (unsigned __int16 *)&__p, (uint64_t)&__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v35.__r_.__value_.__l.__data_);
      v29 += 56;
    }
    while (v29 != v30);
  }
  __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v37;
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
LABEL_63:
  std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(v39[0]);
}

void sub_1CB52D4E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23)
{
  char **v23;
  uint64_t v24;

  std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(*(_QWORD **)(v24 - 96));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v23);
  _Unwind_Resume(a1);
}

_QWORD *morphun::dialog::DefinitenessDisplayFunction::DefinitenessDisplayFunction(_QWORD *a1, uint64_t a2, uint64_t a3, unsigned __int16 *a4, uint64_t a5, uint64_t a6, unsigned __int16 *a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  morphun::lang::features::LanguageGrammarFeatures *v19;
  void *__p[2];
  char v23;

  *a1 = &off_1E866B550;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "d");
  v15 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a2 + 8, (unsigned __int16 *)__p);
  if (a2 + 16 == v15)
    v16 = 0;
  else
    v16 = *(_QWORD *)(v15 + 56);
  if (v23 < 0)
    operator delete(__p[0]);
  a1[1] = v16;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"speak");
  v17 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a2 + 8, (unsigned __int16 *)__p);
  if (a2 + 16 == v17)
    v18 = 0;
  else
    v18 = *(_QWORD *)(v17 + 56);
  if (v23 < 0)
    operator delete(__p[0]);
  a1[2] = v18;
  a1[3] = a3;
  v19 = (morphun::lang::features::LanguageGrammarFeatures *)(a2 + 104);
  a1[4] = a6;
  morphun::dialog::DefinitenessDisplayFunction::getArticles((uint64_t)(a1 + 5), v19, a4, a5);
  morphun::dialog::DefinitenessDisplayFunction::getArticles((uint64_t)(a1 + 8), v19, a7, a8);
  return a1;
}

void sub_1CB52D6C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*(char **)(v1 + 48));
  _Unwind_Resume(a1);
}

_QWORD *morphun::dialog::DefinitenessDisplayFunction::DefinitenessDisplayFunction(_QWORD *a1, morphun::dialog::SemanticFeatureModel *a2, unsigned __int16 *a3, unsigned __int16 *a4, uint64_t a5, unsigned __int16 *a6, unsigned __int16 *a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  const morphun::dialog::SemanticFeature *v17;
  uint64_t DefaultFeatureFunction;
  uint64_t v19;
  const morphun::dialog::SemanticFeature *v20;
  uint64_t v21;

  v15 = (uint64_t)a2 + 8;
  v16 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)a2 + 8, a3);
  if ((morphun::dialog::SemanticFeatureModel *)((char *)a2 + 16) == (morphun::dialog::SemanticFeatureModel *)v16)
    v17 = 0;
  else
    v17 = *(const morphun::dialog::SemanticFeature **)(v16 + 56);
  npc<morphun::dialog::SemanticFeature const>((uint64_t)v17);
  DefaultFeatureFunction = morphun::dialog::SemanticFeatureModel::getDefaultFeatureFunction(a2, v17);
  v19 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v15, a6);
  if ((morphun::dialog::SemanticFeatureModel *)((char *)a2 + 16) == (morphun::dialog::SemanticFeatureModel *)v19)
    v20 = 0;
  else
    v20 = *(const morphun::dialog::SemanticFeature **)(v19 + 56);
  npc<morphun::dialog::SemanticFeature const>((uint64_t)v20);
  v21 = morphun::dialog::SemanticFeatureModel::getDefaultFeatureFunction(a2, v20);
  return morphun::dialog::DefinitenessDisplayFunction::DefinitenessDisplayFunction(a1, (uint64_t)a2, DefaultFeatureFunction, a4, a5, v21, a7, a8);
}

void morphun::exception::ICUException::~ICUException(std::exception *this)
{
  morphun::exception::Throwable::~Throwable(this);
  JUMPOUT(0x1D179D2ECLL);
}

morphun::exception::ICUException *morphun::exception::ICUException::ICUException(morphun::exception::ICUException *this, UErrorCode code)
{
  const char *v3;
  int32_t v4;
  std::basic_string<char16_t> __p;

  v3 = u_errorName(code);
  v4 = strlen(v3);
  morphun::util::StringViewUtils::to_u16string(v3, v4, &__p);
  morphun::exception::Throwable::Throwable((uint64_t)this, (__int128 *)&__p);
  *(_QWORD *)this = &off_1E8673000;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  *(_QWORD *)this = &off_1E8672FD0;
  return this;
}

void sub_1CB52D864(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *morphun::exception::ICUException::ICUException(_QWORD *a1, UErrorCode code, uint64_t a3)
{
  const char *v5;
  int32_t v6;
  int v7;
  const std::basic_string<char16_t>::value_type *v8;
  std::basic_string<char16_t>::size_type v9;
  std::basic_string<char16_t> v11;
  std::basic_string<char16_t> v12;
  std::basic_string<char16_t> __p;

  v5 = u_errorName(code);
  v6 = strlen(v5);
  morphun::util::StringViewUtils::to_u16string(v5, v6, &v11);
  std::basic_string<char16_t>::append(&v11, L": ", 2uLL);
  v12 = v11;
  memset(&v11, 0, sizeof(v11));
  v7 = *(char *)(a3 + 23);
  if (v7 >= 0)
    v8 = (const std::basic_string<char16_t>::value_type *)a3;
  else
    v8 = *(const std::basic_string<char16_t>::value_type **)a3;
  if (v7 >= 0)
    v9 = *(unsigned __int8 *)(a3 + 23);
  else
    v9 = *(_QWORD *)(a3 + 8);
  std::basic_string<char16_t>::append(&v12, v8, v9);
  __p = v12;
  memset(&v12, 0, sizeof(v12));
  morphun::exception::Throwable::Throwable((uint64_t)a1, (__int128 *)&__p);
  *a1 = &off_1E8673000;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v12.__r_.__value_.__l.__data_);
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v11.__r_.__value_.__l.__data_);
  *a1 = &off_1E8672FD0;
  return a1;
}

void sub_1CB52D990(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0)
    operator delete(__p);
  if (a21 < 0)
    operator delete(a16);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t **com::apple::siri::tokenizer::data::config_pt::getContent@<X0>(uint64_t **a1@<X8>)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v3 = xmmword_1E8686A40;
  v4 = 0x1CB73E8CALL;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

void morphun::dictionary::metadata::CharsetConverter::~CharsetConverter(morphun::dictionary::metadata::CharsetConverter *this)
{
}

{
  JUMPOUT(0x1D179D2ECLL);
}

void morphun::dictionary::metadata::CharsetConverter::~CharsetConverter(morphun::dictionary::metadata::CharsetConverter *this, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_QWORD *)this = *a2;
  *(_QWORD *)((char *)this + *(_QWORD *)(v2 - 40)) = a2[1];
  ucnv_close();
}

morphun::dictionary::metadata::CharsetConverter *morphun::dictionary::metadata::CharsetConverter::CharsetConverter(morphun::dictionary::metadata::CharsetConverter *this, const char *a2, const char *a3)
{
  uint64_t v5;
  _QWORD *exception;
  UErrorCode v8;
  int32_t v9;
  std::basic_string<char16_t>::size_type v10;
  std::basic_string<char16_t> v11;
  _BYTE v12[28];
  int v13;

  v5 = *(_QWORD *)a2;
  *(_QWORD *)this = *(_QWORD *)a2;
  *(_QWORD *)((char *)this + *(_QWORD *)(v5 - 40)) = *((_QWORD *)a2 + 1);
  v13 = 0;
  npc<char const>((uint64_t)a3);
  *((_QWORD *)this + 1) = ucnv_open();
  if (v13 >= 1)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    v8 = v13;
    v9 = strlen(a3);
    morphun::util::StringViewUtils::to_u16string(a3, v9, &v11);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)v12, "C", &v11, v10);
    morphun::exception::ICUException::ICUException(exception, v8, (uint64_t)v12);
  }
  return this;
}

void sub_1CB52DBA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  void *v21;
  int v22;

  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v22 & 1) == 0)
LABEL_8:
      _Unwind_Resume(a1);
  }
  else if (!v22)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v21);
  goto LABEL_8;
}

uint64_t npc<char const>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB52DC4C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

morphun::dictionary::metadata::CharsetConverter *morphun::dictionary::metadata::CharsetConverter::CharsetConverter(morphun::dictionary::metadata::CharsetConverter *this, const char *a2)
{
  _QWORD *exception;
  UErrorCode v6;
  int32_t v7;
  std::basic_string<char16_t>::size_type v8;
  std::basic_string<char16_t> v9;
  _BYTE v10[28];
  int v11;

  *(_QWORD *)this = &off_1E866A238;
  v11 = 0;
  npc<char const>((uint64_t)a2);
  *((_QWORD *)this + 1) = ucnv_open();
  if (v11 >= 1)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    v6 = v11;
    v7 = strlen(a2);
    morphun::util::StringViewUtils::to_u16string(a2, v7, &v9);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)v10, "C", &v9, v8);
    morphun::exception::ICUException::ICUException(exception, v6, (uint64_t)v10);
  }
  return this;
}

void sub_1CB52DD38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  void *v21;
  int v22;

  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v22 & 1) == 0)
LABEL_8:
      _Unwind_Resume(a1);
  }
  else if (!v22)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v21);
  goto LABEL_8;
}

void `virtual thunk to'morphun::dictionary::metadata::CharsetConverter::~CharsetConverter(morphun::dictionary::metadata::CharsetConverter *this)
{
}

{
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::dictionary::metadata::CharsetConverter::encode(uint64_t a1, std::string *a2, uint64_t a3, int a4)
{
  int v6;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  ucnv_safeClone();
  npc<std::string>((uint64_t)a2);
  std::string::resize(a2, a4 + 8, 0);
  v6 = ucnv_fromUChars();
  if (a4 + 8 != v6)
    std::string::resize(a2, v6, 0);
  return ucnv_close();
}

void sub_1CB52DFCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;
  char v17;

  if (a16 < 0)
    operator delete(__p);
  if ((v17 & 1) != 0)
    __cxa_free_exception(v16);
  _Unwind_Resume(exception_object);
}

uint64_t npc<std::string>(uint64_t result)
{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1CB52E064(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::metadata::CharsetConverter::decode(uint64_t a1, std::basic_string<char16_t> *a2, uint64_t a3, int a4)
{
  int v6;

  ucnv_safeClone();
  npc<std::basic_string<char16_t>>((uint64_t)a2);
  std::basic_string<char16_t>::resize(a2, a4, 0);
  v6 = ucnv_toUChars();
  std::basic_string<char16_t>::resize(a2, v6, 0);
  return ucnv_close();
}

void sub_1CB52E248(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;
  char v17;

  if (a16 < 0)
    operator delete(__p);
  if ((v17 & 1) != 0)
    __cxa_free_exception(v16);
  _Unwind_Resume(exception_object);
}

void sub_1CB52E2E0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::util::AttributeRegistrationReflector::~AttributeRegistrationReflector(morphun::analysis::util::AttributeRegistrationReflector *this)
{
  *(_QWORD *)this = &off_1E86720F0;
  std::shared_ptr<morphun::analysis::util::AttributeImpl>::~shared_ptr[abi:ne180100]((uint64_t)this + 16);
}

{
  *(_QWORD *)this = &off_1E86720F0;
  std::shared_ptr<morphun::analysis::util::AttributeImpl>::~shared_ptr[abi:ne180100]((uint64_t)this + 16);
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::analysis::util::AttributeRegistrationReflector::reflect(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)a1 + 32))(a1, a2, a3, 0);
}

void morphun::analysis::util::AttributeRegistrationReflector::reflect(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  morphun::exception::NullPointerException *exception;
  uint64_t v10[2];

  v3 = a1[1];
  if (!v3)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  v4 = (std::__shared_weak_count *)a1[3];
  v10[0] = a1[2];
  v10[1] = (uint64_t)v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  morphun::analysis::util::AttributeSource::addAttributeImpl(v3, v10, a2);
  if (v4)
  {
    v7 = (unint64_t *)&v4->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_1CB52E434(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t *morphun::analysis::util::AttributeRegistrationReflector::AttributeRegistrationReflector(uint64_t *result, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v4 = *a2;
  *result = *a2;
  *(uint64_t *)((char *)result + *(_QWORD *)(v4 - 64)) = a2[1];
  *(uint64_t *)((char *)result + *(_QWORD *)(*result - 40)) = a2[2];
  v6 = *a4;
  v5 = a4[1];
  result[1] = a3;
  result[2] = v6;
  result[3] = v5;
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

_QWORD *morphun::analysis::util::AttributeRegistrationReflector::AttributeRegistrationReflector(_QWORD *result, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  *result = &off_1E86720F0;
  result[1] = a2;
  v3 = a3[1];
  result[2] = *a3;
  result[3] = v3;
  if (v3)
  {
    v4 = (unint64_t *)(v3 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void `virtual thunk to'morphun::analysis::util::AttributeRegistrationReflector::reflect(_QWORD *a1, uint64_t a2)
{
  morphun::analysis::util::AttributeRegistrationReflector::reflect((_QWORD *)((char *)a1 + *(_QWORD *)(*a1 - 56)), a2);
}

uint64_t `virtual thunk to'morphun::analysis::util::AttributeRegistrationReflector::reflect(char *a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, _QWORD))(*(_QWORD *)&a1[*(_QWORD *)(*(_QWORD *)a1 - 48)]
                                                                     + 32))(&a1[*(_QWORD *)(*(_QWORD *)a1 - 48)], a2, a3, 0);
}

uint64_t mdv_create(morphun::dialog::SemanticFeatureModel *a1, const __CFString *a2, const __CFDictionary *a3)
{
  uint64_t v4;
  morphun::exception::NullPointerException *exception;
  std::basic_string<char16_t> __p;
  _BYTE v8[8];
  void **v9;

  if (!a1)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  morphun::dialog::SemanticUtils::to_constraintMap((morphun::dialog::SemanticUtils *)v8, a1, a3);
  v4 = operator new();
  morphun::util::CFUtils::to_u16string(&__p, a2);
  morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue(v4, (__int128 *)&__p, (uint64_t)v8);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(v9);
  return v4;
}

void sub_1CB52E5C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16)
{
  const std::exception *v16;
  void *v17;
  const void **v20;
  __CFError **v21;

  __cxa_free_exception(v17);
  if (a2 == 1)
  {
    v20 = (const void **)__cxa_begin_catch(a1);
    morphun::util::CFUtils::convert(v20, v16, v21);
    __cxa_end_catch();
    JUMPOUT(0x1CB52E57CLL);
  }
  _Unwind_Resume(a1);
}

uint64_t mdv_destroy(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
  return result;
}

void morphun::dialog::SemanticFeature::~SemanticFeature(morphun::dialog::SemanticFeature *this)
{
}

{
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::dialog::SemanticFeature::getType(morphun::dialog::SemanticFeature *this)
{
  return *((unsigned int *)this + 2);
}

uint64_t morphun::dialog::SemanticFeature::getName(morphun::dialog::SemanticFeature *this)
{
  return (uint64_t)this + 16;
}

uint64_t morphun::dialog::SemanticFeature::getBoundedValues(morphun::dialog::SemanticFeature *this)
{
  return (uint64_t)this + 40;
}

uint64_t morphun::dialog::SemanticFeature::isAliased(morphun::dialog::SemanticFeature *this)
{
  return *((unsigned __int8 *)this + 64);
}

void morphun::dialog::SemanticFeature::~SemanticFeature(morphun::dialog::SemanticFeature *this, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)this = *a2;
  *(_QWORD *)((char *)this + *(_QWORD *)(v3 - 40)) = a2[1];
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 6));
  if (*((char *)this + 39) < 0)
    operator delete(*((void **)this + 2));
}

uint64_t morphun::dialog::SemanticFeature::SemanticFeature(uint64_t a1, uint64_t *a2, std::basic_string<char16_t> *__str, int a4, uint64_t a5, int a6)
{
  char v6;
  uint64_t v10;
  uint64_t v11;
  _QWORD *exception;
  std::basic_string<char16_t> *v14;
  std::basic_string<char16_t>::size_type size;
  _QWORD *v16;
  std::basic_string<char16_t> v17;
  std::basic_string<char16_t> __dst;
  std::basic_string<char16_t> v19;
  __int128 v20;

  v6 = a6;
  v10 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + *(_QWORD *)(v10 - 40)) = a2[1];
  *(_QWORD *)(a1 + 48) = 0;
  v11 = a1 + 48;
  *(_DWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 40) = a1 + 48;
  *(_BYTE *)(a1 + 64) = 0;
  if (a4 != 1)
  {
    if (*(_QWORD *)(a5 + 16))
    {
      exception = __cxa_allocate_exception(0x38uLL);
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"Features of type ");
      morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)a4, &v17);
      if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v14 = &v17;
      else
        v14 = (std::basic_string<char16_t> *)v17.__r_.__value_.__r.__words[0];
      if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        size = HIBYTE(v17.__r_.__value_.__r.__words[2]);
      else
        size = v17.__r_.__value_.__l.__size_;
      std::basic_string<char16_t>::append(&__dst, (const std::basic_string<char16_t>::value_type *)v14, size);
      v19 = __dst;
      memset(&__dst, 0, sizeof(__dst));
      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v20, &v19, L" do not support bounded values!");
      morphun::exception::Throwable::Throwable((uint64_t)exception, &v20);
      *exception = &off_1E8673120;
    }
    if (a6)
    {
      v16 = __cxa_allocate_exception(0x38uLL);
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v20, (char *)L"Only bounded features can have aliases");
      morphun::exception::Throwable::Throwable((uint64_t)v16, &v20);
      *v16 = &off_1E8673120;
    }
  }
  std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)(a1 + 16), __str);
  *(_DWORD *)(a1 + 8) = a4;
  if (v11 - 8 != a5)
    std::__tree<std::basic_string<char16_t>>::__assign_multi<std::__tree_const_iterator<std::basic_string<char16_t>,std::__tree_node<std::basic_string<char16_t>,void *> *,long>>((_QWORD *)(v11 - 8), *(_QWORD **)a5, (_QWORD *)(a5 + 8));
  *(_BYTE *)(a1 + 64) = v6;
  return a1;
}

void sub_1CB52E8F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  uint64_t v29;
  void **v30;
  void *v31;
  void *v32;
  int v33;
  int v34;

  if (a29 < 0)
    operator delete(__p);
  if (a23 < 0)
    operator delete(a18);
  if (v33 < 0)
    operator delete(v32);
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v34 & 1) == 0)
    {
LABEL_12:
      std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*(char **)(v29 + 48));
      if (*(char *)(v29 + 39) < 0)
        operator delete(*v30);
      _Unwind_Resume(a1);
    }
  }
  else if (!v34)
  {
    goto LABEL_12;
  }
  __cxa_free_exception(v31);
  goto LABEL_12;
}

_QWORD *std::__tree<std::basic_string<char16_t>>::__assign_multi<std::__tree_const_iterator<std::basic_string<char16_t>,std::__tree_node<std::basic_string<char16_t>,void *> *,long>>(_QWORD *result, _QWORD *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t **v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t **v12;
  uint64_t **v13;
  _QWORD *v14;
  BOOL v15;
  unsigned __int16 *v16;
  uint64_t *v17;
  uint64_t **v18;
  uint64_t **v19;
  _QWORD *v20;
  _QWORD *v21;
  unsigned __int16 *v22;
  uint64_t *v23;
  unsigned __int16 *v24;

  v5 = (uint64_t)result;
  if (result[2])
  {
    v6 = *result;
    v8 = (uint64_t **)(result + 1);
    v7 = result[1];
    *result = result + 1;
    *(_QWORD *)(v7 + 16) = 0;
    result[1] = 0;
    result[2] = 0;
    if (*(_QWORD *)(v6 + 8))
      v9 = *(uint64_t **)(v6 + 8);
    else
      v9 = (uint64_t *)v6;
    v22 = (unsigned __int16 *)result;
    v23 = v9;
    v24 = (unsigned __int16 *)v9;
    if (v9)
    {
      v23 = std::__tree<std::basic_string<char16_t>>::_DetachedTreeCache::__detach_next((uint64_t)v9);
      if (a2 != a3)
      {
        v10 = a2;
        do
        {
          std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)(v9 + 4), (const std::basic_string<char16_t> *)(v10 + 4));
          v11 = *v8;
          v12 = (uint64_t **)(v5 + 8);
          v13 = (uint64_t **)(v5 + 8);
          if (*v8)
          {
            do
            {
              while (1)
              {
                v12 = (uint64_t **)v11;
                if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v24 + 16, (unsigned __int16 *)v11 + 16))break;
                v11 = *v12;
                v13 = v12;
                if (!*v12)
                  goto LABEL_14;
              }
              v11 = v12[1];
            }
            while (v11);
            v13 = v12 + 1;
          }
LABEL_14:
          std::__tree<std::u16string_view>::__insert_node_at((uint64_t **)v5, (uint64_t)v12, v13, (uint64_t *)v24);
          v9 = v23;
          v24 = (unsigned __int16 *)v23;
          if (v23)
            v23 = std::__tree<std::basic_string<char16_t>>::_DetachedTreeCache::__detach_next((uint64_t)v23);
          v14 = (_QWORD *)v10[1];
          if (v14)
          {
            do
            {
              a2 = v14;
              v14 = (_QWORD *)*v14;
            }
            while (v14);
          }
          else
          {
            do
            {
              a2 = (_QWORD *)v10[2];
              v15 = *a2 == (_QWORD)v10;
              v10 = a2;
            }
            while (!v15);
          }
          if (!v9)
            break;
          v10 = a2;
        }
        while (a2 != a3);
      }
    }
    result = (_QWORD *)std::__tree<std::basic_string<char16_t>>::_DetachedTreeCache::~_DetachedTreeCache[abi:ne180100]((uint64_t)&v22);
  }
  if (a2 != a3)
  {
    do
    {
      std::__tree<std::basic_string<char16_t>>::__construct_node<std::basic_string<char16_t> const&>((uint64_t)&v22, v5, (uint64_t)(a2 + 4));
      v16 = v22;
      v17 = *(uint64_t **)(v5 + 8);
      v18 = (uint64_t **)(v5 + 8);
      v19 = (uint64_t **)(v5 + 8);
      if (v17)
      {
        do
        {
          while (1)
          {
            v18 = (uint64_t **)v17;
            if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v16 + 16, (unsigned __int16 *)v17 + 16))break;
            v17 = *v18;
            v19 = v18;
            if (!*v18)
              goto LABEL_31;
          }
          v17 = v18[1];
        }
        while (v17);
        v19 = v18 + 1;
      }
LABEL_31:
      result = std::__tree<std::u16string_view>::__insert_node_at((uint64_t **)v5, (uint64_t)v18, v19, (uint64_t *)v16);
      v20 = (_QWORD *)a2[1];
      if (v20)
      {
        do
        {
          v21 = v20;
          v20 = (_QWORD *)*v20;
        }
        while (v20);
      }
      else
      {
        do
        {
          v21 = (_QWORD *)a2[2];
          v15 = *v21 == (_QWORD)a2;
          a2 = v21;
        }
        while (!v15);
      }
      a2 = v21;
    }
    while (v21 != a3);
  }
  return result;
}

void sub_1CB52EBD0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__tree<std::basic_string<char16_t>>::_DetachedTreeCache::~_DetachedTreeCache[abi:ne180100]((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *std::__tree<std::basic_string<char16_t>>::_DetachedTreeCache::__detach_next(uint64_t a1)
{
  _QWORD *result;
  _QWORD *v3;
  _QWORD *v4;

  result = *(_QWORD **)(a1 + 16);
  if (result)
  {
    v3 = (_QWORD *)*result;
    if (*result == a1)
    {
      *result = 0;
      while (1)
      {
        v4 = (_QWORD *)result[1];
        if (!v4)
          break;
        do
        {
          result = v4;
          v4 = (_QWORD *)*v4;
        }
        while (v4);
      }
    }
    else
    {
      for (result[1] = 0; v3; v3 = (_QWORD *)result[1])
      {
        do
        {
          result = v3;
          v3 = (_QWORD *)*v3;
        }
        while (v3);
      }
    }
  }
  return result;
}

uint64_t std::__tree<std::basic_string<char16_t>>::_DetachedTreeCache::~_DetachedTreeCache[abi:ne180100](uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*(char **)(a1 + 16));
  v2 = *(_QWORD *)(a1 + 8);
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 16);
    if (v3)
    {
      do
      {
        v2 = v3;
        v3 = *(_QWORD *)(v3 + 16);
      }
      while (v3);
      *(_QWORD *)(a1 + 8) = v2;
    }
    std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy((char *)v2);
  }
  return a1;
}

uint64_t morphun::dialog::SemanticFeature::SemanticFeature(uint64_t a1, const std::basic_string<char16_t> *a2, int a3, _QWORD *a4, int a5)
{
  char v5;
  _QWORD *v9;
  _QWORD *exception;
  std::basic_string<char16_t> *v12;
  std::basic_string<char16_t>::size_type size;
  _QWORD *v14;
  std::basic_string<char16_t> v15;
  std::basic_string<char16_t> __dst;
  std::basic_string<char16_t> v17;
  __int128 v18;

  v5 = a5;
  *(_QWORD *)a1 = &off_1E866ACB8;
  *(_QWORD *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 40) = a1 + 48;
  v9 = (_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 56) = 0;
  *(_BYTE *)(a1 + 64) = 0;
  if (a3 != 1)
  {
    if (a4[2])
    {
      exception = __cxa_allocate_exception(0x38uLL);
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"Features of type ");
      morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)a3, &v15);
      if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v12 = &v15;
      else
        v12 = (std::basic_string<char16_t> *)v15.__r_.__value_.__r.__words[0];
      if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        size = HIBYTE(v15.__r_.__value_.__r.__words[2]);
      else
        size = v15.__r_.__value_.__l.__size_;
      std::basic_string<char16_t>::append(&__dst, (const std::basic_string<char16_t>::value_type *)v12, size);
      v17 = __dst;
      memset(&__dst, 0, sizeof(__dst));
      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v18, &v17, L" do not support bounded values!");
      morphun::exception::Throwable::Throwable((uint64_t)exception, &v18);
      *exception = &off_1E8673120;
    }
    if (a5)
    {
      v14 = __cxa_allocate_exception(0x38uLL);
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v18, (char *)L"Only bounded features can have aliases");
      morphun::exception::Throwable::Throwable((uint64_t)v14, &v18);
      *v14 = &off_1E8673120;
    }
  }
  std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)(a1 + 16), a2);
  *(_DWORD *)(a1 + 8) = a3;
  if (v9 != a4)
    std::__tree<std::basic_string<char16_t>>::__assign_multi<std::__tree_const_iterator<std::basic_string<char16_t>,std::__tree_node<std::basic_string<char16_t>,void *> *,long>>(v9, (_QWORD *)*a4, a4 + 1);
  *(_BYTE *)(a1 + 64) = v5;
  return a1;
}

void sub_1CB52EE4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  void **v29;
  uint64_t v30;
  void *v31;
  void *v32;
  int v33;
  int v34;

  if (a29 < 0)
    operator delete(__p);
  if (a23 < 0)
    operator delete(a18);
  if (v33 < 0)
    operator delete(v32);
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v34 & 1) == 0)
    {
LABEL_12:
      std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*(char **)(v30 + 48));
      if (*(char *)(v30 + 39) < 0)
        operator delete(*v29);
      _Unwind_Resume(a1);
    }
  }
  else if (!v34)
  {
    goto LABEL_12;
  }
  __cxa_free_exception(v31);
  goto LABEL_12;
}

morphun::dialog::SemanticFeature *morphun::dialog::SemanticFeature::SemanticFeature(morphun::dialog::SemanticFeature *this, const morphun::dialog::SemanticFeature *a2, uint64_t a3)
{
  uint64_t v5;
  __int128 v6;

  v5 = *(_QWORD *)a2;
  *(_QWORD *)this = *(_QWORD *)a2;
  *(_QWORD *)((char *)this + *(_QWORD *)(v5 - 40)) = *((_QWORD *)a2 + 1);
  *((_DWORD *)this + 2) = *(_DWORD *)(a3 + 8);
  if (*(char *)(a3 + 39) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)((char *)this + 16), *(const std::basic_string<char16_t>::value_type **)(a3 + 16), *(_QWORD *)(a3 + 24));
  }
  else
  {
    v6 = *(_OWORD *)(a3 + 16);
    *((_QWORD *)this + 4) = *(_QWORD *)(a3 + 32);
    *((_OWORD *)this + 1) = v6;
  }
  std::set<std::basic_string<char16_t>>::set[abi:ne180100]((uint64_t *)this + 5, a3 + 40);
  *((_BYTE *)this + 64) = *(_BYTE *)(a3 + 64);
  return this;
}

void sub_1CB52EFB4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 39) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

morphun::dialog::SemanticFeature *morphun::dialog::SemanticFeature::SemanticFeature(morphun::dialog::SemanticFeature *this, const morphun::dialog::SemanticFeature *a2)
{
  __int128 v4;

  *(_QWORD *)this = &off_1E866ACB8;
  *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
  if (*((char *)a2 + 39) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)((char *)this + 16), *((const std::basic_string<char16_t>::value_type **)a2 + 2), *((_QWORD *)a2 + 3));
  }
  else
  {
    v4 = *((_OWORD *)a2 + 1);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_OWORD *)this + 1) = v4;
  }
  std::set<std::basic_string<char16_t>>::set[abi:ne180100]((uint64_t *)this + 5, (uint64_t)a2 + 40);
  *((_BYTE *)this + 64) = *((_BYTE *)a2 + 64);
  return this;
}

void sub_1CB52F054(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 39) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void `virtual thunk to'morphun::dialog::SemanticFeature::~SemanticFeature(morphun::dialog::SemanticFeature *this)
{
}

{
  JUMPOUT(0x1D179D2ECLL);
}

uint64_t morphun::dialog::SemanticFeature::noValue(const std::basic_string<char16_t> *a1)
{
  uint64_t v2;
  char **v4;
  char *v5[2];

  v2 = operator new();
  v5[0] = 0;
  v5[1] = 0;
  v4 = v5;
  morphun::dialog::SemanticFeature::SemanticFeature(v2, a1, 0, &v4, 0);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(v5[0]);
  return v2;
}

void sub_1CB52F130(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char *a11)
{
  uint64_t v11;

  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(a11);
  MEMORY[0x1D179D2EC](v11, 0x10B3C40130681FCLL);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::SemanticFeature::boundedValue(const std::basic_string<char16_t> *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = operator new();
  morphun::dialog::SemanticFeature::SemanticFeature(v4, a1, 1, a2, 0);
  return v4;
}

void sub_1CB52F1B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D179D2EC](v1, 0x10B3C40130681FCLL);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::SemanticFeature::unboundedValue(const std::basic_string<char16_t> *a1)
{
  uint64_t v2;
  char **v4;
  char *v5[2];

  v2 = operator new();
  v5[0] = 0;
  v5[1] = 0;
  v4 = v5;
  morphun::dialog::SemanticFeature::SemanticFeature(v2, a1, 2, &v4, 0);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(v5[0]);
  return v2;
}

void sub_1CB52F24C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char *a11)
{
  uint64_t v11;

  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(a11);
  MEMORY[0x1D179D2EC](v11, 0x10B3C40130681FCLL);
  _Unwind_Resume(a1);
}

BOOL morphun::dialog::SemanticFeature::operator<(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  int v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  unsigned __int16 *v7;
  unsigned __int16 *v8;
  unsigned __int16 *v9;
  unsigned __int16 *v10;
  unsigned __int16 *v11;
  unsigned __int16 *v12;
  unsigned __int16 *v13;
  unsigned __int16 *v14;
  unsigned int v15;
  unsigned int v16;
  BOOL v17;

  v2 = *(unsigned __int8 *)(a2 + 39);
  v3 = (char)v2;
  if ((v2 & 0x80u) != 0)
    v2 = *(_QWORD *)(a2 + 24);
  v4 = *(unsigned __int8 *)(a1 + 39);
  v5 = (char)v4;
  if ((v4 & 0x80u) != 0)
    v4 = *(_QWORD *)(a1 + 24);
  if (v2 >= v4)
    v6 = v4;
  else
    v6 = v2;
  if (v6)
  {
    v9 = *(unsigned __int16 **)(a1 + 16);
    v7 = (unsigned __int16 *)(a1 + 16);
    v8 = v9;
    if (v5 >= 0)
      v10 = v7;
    else
      v10 = v8;
    v13 = *(unsigned __int16 **)(a2 + 16);
    v11 = (unsigned __int16 *)(a2 + 16);
    v12 = v13;
    if (v3 >= 0)
      v14 = v11;
    else
      v14 = v12;
    while (1)
    {
      v15 = *v10;
      v16 = *v14;
      if (v16 != v15)
        break;
      ++v10;
      ++v14;
      if (!--v6)
        goto LABEL_17;
    }
    v17 = v15 >= v16;
  }
  else
  {
LABEL_17:
    v17 = v4 >= v2;
  }
  return !v17;
}

