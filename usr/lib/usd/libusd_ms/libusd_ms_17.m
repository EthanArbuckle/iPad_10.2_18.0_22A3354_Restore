void sub_20C510AE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  uint64_t v51;

  sub_20C45C87C((uint64_t)&a19);
  sub_20C031968((_QWORD *)(v51 - 248));
  sub_20BFD1A18(&a46);
  *(_QWORD *)(v51 - 248) = &a48;
  sub_20C45BB28((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C510F28(uint64_t a1, uint64_t a2, pxrInternal__aapl__pxrReserved__::PcpNodeRef *a3, uint64_t *a4, pxrInternal__aapl__pxrReserved__::SdfPath *a5, const pxrInternal__aapl__pxrReserved__::TfToken *a6, uint64_t *a7)
{
  uint64_t v12;
  uint64_t *LayerStack;
  pxrInternal__aapl__pxrReserved__::PcpLayerStack *v14;
  uint64_t Identifier;
  uint64_t (***v16)(_QWORD, uint64_t);
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v17;
  uint64_t (**v18)(_QWORD, uint64_t);
  uint64_t (*v19)(_QWORD, uint64_t);
  __int128 v20;
  uint64_t (*v21)(_QWORD, uint64_t);
  uint64_t (*v22)(_QWORD, uint64_t);
  __int128 v23;
  uint64_t (*v24)(_QWORD, uint64_t);
  uint64_t (**v25)(_QWORD, uint64_t);
  uint64_t (*v26)(_QWORD, uint64_t);
  __int128 v27;
  uint64_t (*v28)(_QWORD, uint64_t);
  uint64_t (*v29)(_QWORD, uint64_t);
  __int128 v30;
  uint64_t (*v31)(_QWORD, uint64_t);
  uint64_t v33;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v34;
  int v35;
  int v36;
  __int128 v37;
  void *v38[2];
  uint64_t (*v39)(_QWORD, uint64_t);
  void *__p[2];
  uint64_t (*v41)(_QWORD, uint64_t);

  v12 = sub_20C45A368((uint64_t (****)(_QWORD, uint64_t))a1, a4, a5, a6, a7);
  if ((_DWORD)v12)
  {
    *(_BYTE *)(a1 + 40) = 1;
    LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack(a3);
    v14 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_20C1FE500(LayerStack);
    Identifier = pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetIdentifier(v14);
    v16 = *(uint64_t (****)(_QWORD, uint64_t))a1;
    v17 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)*a4;
    v33 = a2;
    v34 = v17;
    sub_20BF1DD04((uint64_t *)&v34);
    sub_20BFD6E54(&v35, a5);
    sub_20BFD6EA4(&v36, (_DWORD *)a5 + 1);
    v37 = *(_OWORD *)a3;
    pxrInternal__aapl__pxrReserved__::SdfAssetPath::SdfAssetPath((pxrInternal__aapl__pxrReserved__::SdfAssetPath *)v38);
    v18 = v16[1];
    v19 = v18[2];
    v20 = *(_OWORD *)v18;
    v21 = v39;
    *(_OWORD *)v18 = *(_OWORD *)v38;
    v18[2] = v21;
    *(_OWORD *)v38 = v20;
    v39 = v19;
    v22 = v18[5];
    v23 = *(_OWORD *)(v18 + 3);
    v24 = v41;
    *(_OWORD *)(v18 + 3) = *(_OWORD *)__p;
    v18[5] = v24;
    *(_OWORD *)__p = v23;
    v41 = v22;
    sub_20C42B5F8(&v33, (const pxrInternal__aapl__pxrReserved__::ArResolverContext *)(Identifier + 32), (uint64_t)v38, 1, 0);
    v25 = v16[1];
    v26 = v25[2];
    v27 = *(_OWORD *)v25;
    v28 = v39;
    *(_OWORD *)v25 = *(_OWORD *)v38;
    v25[2] = v28;
    *(_OWORD *)v38 = v27;
    v39 = v26;
    v29 = v25[5];
    v30 = *(_OWORD *)(v25 + 3);
    v31 = v41;
    *(_OWORD *)(v25 + 3) = *(_OWORD *)__p;
    v25[5] = v31;
    *(_OWORD *)__p = v30;
    v41 = v29;
    if (SHIBYTE(v29) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v39) < 0)
      operator delete(v38[0]);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v36);
    sub_20BFD265C(&v35);
    sub_20C103234(&v34);
  }
  return v12;
}

void sub_20C5110E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v23;
  _DWORD *v24;
  _DWORD *v25;

  if (a23 < 0)
    operator delete(__p);
  sub_20C96B564((uint64_t)&a15);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v25);
  sub_20BFD265C(v24);
  sub_20C103234(v23);
  _Unwind_Resume(a1);
}

BOOL sub_20C511130(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, int a5, uint64_t a6, uint64_t a7)
{
  char v14;
  BOOL i;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  unint64_t PrimDefinition;
  _BOOL8 v22;
  _QWORD v24[2];
  int v25;
  int v26;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v25);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v26);
  v14 = 0;
  for (i = 1;
        ;
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a6))
  {
    v16 = *(_QWORD *)(a6 + 16);
    v17 = *(_QWORD *)(a6 + 24);
    if (v16 == *(_QWORD *)(a6 + 32) && v17 == *(_QWORD *)(a6 + 40))
      break;
    if (i)
    {
      sub_20C453680(a6, a2, (int *)v24);
      sub_20BFD3EBC(&v25, (int *)v24);
      sub_20BFD3F10(&v26, (int *)v24 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v24 + 1);
      sub_20BFD265C(v24);
      v16 = *(_QWORD *)(a6 + 16);
      v17 = *(_QWORD *)(a6 + 24);
    }
    v19 = *(_QWORD *)a1;
    v24[0] = v16;
    v24[1] = v17;
    v20 = sub_20C510F28(a7, v19, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v24, *(uint64_t **)(a6 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v25, a3, a4);
    if (*(_BYTE *)(a7 + 40))
      goto LABEL_15;
    v14 |= v20;
  }
  if (a5)
  {
    PrimDefinition = atomic_load((unint64_t *)(*(_QWORD *)(a1 + 24) + 56));
    if (!PrimDefinition)
      PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition(*(pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo **)(a1 + 24));
    *(_BYTE *)(a7 + 40) = sub_20C45A220(PrimDefinition, a2, a3, a4, *(uint64_t (****)(_QWORD, uint64_t))a7);
  }
  if ((v14 & 1) != 0)
  {
LABEL_15:
    v22 = 1;
    goto LABEL_17;
  }
  v22 = *(_BYTE *)(a7 + 40) != 0;
LABEL_17:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v26);
  sub_20BFD265C(&v25);
  return v22;
}

void sub_20C5112AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C5112D4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, char a4, uint64_t a5, uint64_t a6)
{
  BOOL i;
  _QWORD *v9;
  int HasField;
  int v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void ***v26;
  uint64_t v27;
  uint64_t *v28;
  _BYTE v35[8];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v43;
  int v44;
  int v45;
  uint64_t v46;
  void **v47;
  void ***v48;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v49;
  int v50;
  int v51;
  uint64_t v52;
  void **v53[3];
  __int16 v54;
  int v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  void **v60;
  _BYTE v61[16];
  void ***v62;
  _BYTE v63[24];
  _BYTE v64[24];
  _BYTE v65[24];
  _BYTE v66[24];
  _QWORD v67[5];

  v67[3] = *MEMORY[0x24BDAC8D0];
  v57 = 0;
  v58 = 0;
  v59 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v55);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v56);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, (int *)&v60);
      sub_20BFD3EBC(&v55, (int *)&v60);
      sub_20BFD3F10(&v56, (int *)&v60 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v60 + 1);
      sub_20BFD265C(&v60);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v60);
    v9 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a5 + 48));
    LOWORD(v50) = 0;
    v48 = &v60;
    v49 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D30;
    v47 = (void **)&unk_24C52BEB0;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v9, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v55, a3, (uint64_t (***)(_QWORD, uint64_t))&v47);
    if ((_BYTE)v50)
      v11 = 0;
    else
      v11 = HasField;
    if (v11 == 1)
    {
      v12 = v58;
      if (v58 >= v59)
      {
        v13 = sub_20C45CF44(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C02F650(v58, (uint64_t)&v60);
        v13 = v12 + 152;
      }
      v58 = v13;
    }
    v47 = (void **)v67;
    sub_20BDE5038(&v47);
    v47 = (void **)v66;
    sub_20BDE5038(&v47);
    v47 = (void **)v65;
    sub_20BDE5038(&v47);
    v47 = (void **)v64;
    sub_20BDE5038(&v47);
    v47 = (void **)v63;
    sub_20BDE5038(&v47);
    v47 = (void **)v61;
    sub_20BDE5038(&v47);
  }
  if ((a4 & 1) != 0)
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v60);
    v53[2] = (void **)&stru_24C524D30;
    v54 = 0;
    v53[0] = (void **)&unk_24C52BEB0;
    v53[1] = (void **)&v60;
    LODWORD(v42) = 0;
    v43 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v44);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v45);
    v46 = 0;
    sub_20C4535E0((uint64_t)&v47, (uint64_t)v53, (uint64_t)&v42);
    if ((v46 & 7) != 0)
    {
      v14 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v45);
    sub_20BFD265C(&v44);
    if (v43)
      sub_20C35C614(v43);
    v42 = 0;
    v16 = sub_20C45B318(a1, a2, a3, &v42, (uint64_t)&v47);
    if ((v42 & 7) != 0)
    {
      v17 = (unsigned int *)(v42 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
    if (v16)
    {
      v19 = v58;
      if (v58 >= v59)
      {
        v20 = sub_20C45CF44(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C02F650(v58, (uint64_t)&v60);
        v20 = v19 + 152;
      }
      v58 = v20;
    }
    if ((v52 & 7) != 0)
    {
      v21 = (unsigned int *)(v52 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v51);
    sub_20BFD265C(&v50);
    if (v49)
      sub_20C35C614(v49);
    v47 = (void **)v67;
    sub_20BDE5038(&v47);
    v47 = (void **)v66;
    sub_20BDE5038(&v47);
    v47 = (void **)v65;
    sub_20BDE5038(&v47);
    v47 = (void **)v64;
    sub_20BDE5038(&v47);
    v47 = (void **)v63;
    sub_20BDE5038(&v47);
    v47 = (void **)v61;
    sub_20BDE5038(&v47);
  }
  v23 = v57;
  v24 = v58;
  if (v57 != v58)
  {
    v47 = 0;
    v48 = 0;
    v25 = v58;
    v49 = 0;
    while (1)
    {
      v25 -= 152;
      v62 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations(v25, (uint64_t *)&v47, (uint64_t)&v60);
      v26 = v62;
      if (v62 == &v60)
        break;
      if (v62)
      {
        v27 = 5;
LABEL_43:
        ((void (*)(void))(*v26)[v27])();
      }
      if (v25 == v23)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v60);
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetExplicitItems(v28, (uint64_t)&v47);
        sub_20C02F650((uint64_t)v35, (uint64_t)&v60);
        sub_20C45D304(*(_QWORD *)a6, (uint64_t)v35);
        *(_BYTE *)(a6 + 40) = 1;
        v53[0] = (void **)&v41;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v40;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v39;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v38;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v37;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v36;
        sub_20BDE5038(v53);
        v53[0] = (void **)v67;
        sub_20BDE5038(v53);
        v53[0] = (void **)v66;
        sub_20BDE5038(v53);
        v53[0] = (void **)v65;
        sub_20BDE5038(v53);
        v53[0] = (void **)v64;
        sub_20BDE5038(v53);
        v53[0] = (void **)v63;
        sub_20BDE5038(v53);
        v53[0] = (void **)v61;
        sub_20BDE5038(v53);
        v60 = (void **)&v47;
        sub_20BDE5038(&v60);
        goto LABEL_46;
      }
    }
    v26 = &v60;
    v27 = 4;
    goto LABEL_43;
  }
LABEL_46:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v56);
  sub_20BFD265C(&v55);
  v60 = (void **)&v57;
  sub_20C45D378(&v60);
  return v23 != v24;
}

void sub_20C51182C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45CEE4((uint64_t)&a38);
  sub_20C020EAC((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C45D378((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_20C511948(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, char a4, uint64_t a5, uint64_t a6)
{
  BOOL i;
  _QWORD *v9;
  int HasField;
  int v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  void ***v26;
  uint64_t v27;
  unsigned __int8 *v28;
  _BYTE v35[8];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t *v47;
  void ***v48;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v49;
  int v50;
  int v51;
  uint64_t v52;
  void **v53[3];
  __int16 v54;
  int v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  void **v60;
  _BYTE v61[16];
  void ***v62;
  _BYTE v63[24];
  _BYTE v64[24];
  _BYTE v65[24];
  _BYTE v66[24];
  _QWORD v67[5];

  v67[3] = *MEMORY[0x24BDAC8D0];
  v57 = 0;
  v58 = 0;
  v59 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v55);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v56);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, (int *)&v60);
      sub_20BFD3EBC(&v55, (int *)&v60);
      sub_20BFD3F10(&v56, (int *)&v60 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v60 + 1);
      sub_20BFD265C(&v60);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v60);
    v9 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a5 + 48));
    LOWORD(v50) = 0;
    v48 = &v60;
    v49 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D40;
    v47 = (uint64_t *)&unk_24C539538;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v9, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v55, a3, (uint64_t (***)(_QWORD, uint64_t))&v47);
    if ((_BYTE)v50)
      v11 = 0;
    else
      v11 = HasField;
    if (v11 == 1)
    {
      v12 = v58;
      if (v58 >= v59)
      {
        v13 = sub_20C45D45C(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C0366AC(v58, (uint64_t)&v60);
        v13 = v12 + 152;
      }
      v58 = v13;
    }
    v47 = v67;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v66;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v65;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v47);
  }
  if ((a4 & 1) != 0)
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v60);
    v53[2] = (void **)&stru_24C524D40;
    v54 = 0;
    v53[0] = (void **)&unk_24C539538;
    v53[1] = (void **)&v60;
    LODWORD(v42) = 0;
    v43 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v44);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v45);
    v46 = 0;
    sub_20C4535E0((uint64_t)&v47, (uint64_t)v53, (uint64_t)&v42);
    if ((v46 & 7) != 0)
    {
      v14 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v45);
    sub_20BFD265C(&v44);
    if (v43)
      sub_20C35C614(v43);
    v42 = 0;
    v16 = sub_20C45B318(a1, a2, a3, &v42, (uint64_t)&v47);
    if ((v42 & 7) != 0)
    {
      v17 = (unsigned int *)(v42 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
    if (v16)
    {
      v19 = v58;
      if (v58 >= v59)
      {
        v20 = sub_20C45D45C(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C0366AC(v58, (uint64_t)&v60);
        v20 = v19 + 152;
      }
      v58 = v20;
    }
    if ((v52 & 7) != 0)
    {
      v21 = (unsigned int *)(v52 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v51);
    sub_20BFD265C(&v50);
    if (v49)
      sub_20C35C614(v49);
    v47 = v67;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v66;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v65;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v47);
  }
  v23 = v57;
  v24 = v58;
  if (v57 != v58)
  {
    v47 = 0;
    v48 = 0;
    v25 = (_QWORD *)v58;
    v49 = 0;
    while (1)
    {
      v25 -= 19;
      v62 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations(v25, &v47, (uint64_t)&v60);
      v26 = v62;
      if (v62 == &v60)
        break;
      if (v62)
      {
        v27 = 5;
LABEL_43:
        ((void (*)(void))(*v26)[v27])();
      }
      if (v25 == (_QWORD *)v23)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v60);
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SetExplicitItems(v28, &v47);
        sub_20C0366AC((uint64_t)v35, (uint64_t)&v60);
        sub_20C45D578(*(_QWORD *)a6, (uint64_t)v35);
        *(_BYTE *)(a6 + 40) = 1;
        v53[0] = (void **)&v41;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v40;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v39;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v38;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v37;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v36;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v67;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v66;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v65;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v64;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v63;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v61;
        sub_20BEEB2B8(v53);
        v60 = (void **)&v47;
        sub_20BEEB2B8(&v60);
        goto LABEL_46;
      }
    }
    v26 = &v60;
    v27 = 4;
    goto LABEL_43;
  }
LABEL_46:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v56);
  sub_20BFD265C(&v55);
  v60 = (void **)&v57;
  sub_20C451A98(&v60);
  return v23 != v24;
}

void sub_20C511EA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45D3FC((uint64_t)&a38);
  sub_20C03507C((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C451A98((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C511FBC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, int a4, uint64_t a5)
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v10;
  unsigned __int8 v11;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v12;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t v14;
  BOOL i;
  _QWORD *v17;
  int HasField;
  int v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  BOOL j;
  _QWORD *v25;
  int v26;
  int v27;
  unint64_t v28;
  uint64_t v29;
  unsigned int *v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int *v33;
  unsigned int v34;
  unint64_t v35;
  uint64_t v36;
  BOOL k;
  _QWORD *v39;
  int v40;
  int v41;
  unint64_t v42;
  uint64_t v43;
  unsigned int *v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int *v47;
  unsigned int v48;
  unint64_t v49;
  uint64_t v50;
  BOOL m;
  _QWORD *v53;
  int v54;
  int v55;
  unint64_t v56;
  uint64_t v57;
  unsigned int *v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int *v61;
  unsigned int v62;
  unint64_t v63;
  uint64_t v64;
  unsigned int *v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int *v69;
  unsigned int v70;
  unint64_t v71;
  uint64_t v72;
  unsigned int *v73;
  unsigned int v74;
  uint64_t v75;
  _QWORD *v76;
  void ***v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int *v80;
  unsigned int v81;
  uint64_t v82;
  _QWORD *v83;
  void ***v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int *v87;
  unsigned int v88;
  uint64_t v89;
  _QWORD *v90;
  void ***v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int *v94;
  unsigned int v95;
  uint64_t v96;
  _QWORD *v97;
  void ***v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v102;
  _BYTE v103[16];
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t (**v109)(_QWORD, uint64_t);
  void *v110;
  std::type_info *v111;
  int v112;
  int v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *v120;
  void *v121;
  void *__p;
  void *v123;
  uint64_t v124;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v125;
  int v126;
  int v127;
  uint64_t v128;
  void *v129;
  void ***v130;
  std::type_info *v131;
  __int16 v132;
  int v133;
  int v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  void **v138;
  void *v139;
  void *v140;
  void ***v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  void *v150;
  void *v151;
  uint64_t v152;

  v152 = *MEMORY[0x24BDAC8D0];
  v10 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  v11 = atomic_load((unsigned __int8 *)&qword_2549891E0);
  if ((v11 & 1) == 0 && __cxa_guard_acquire(&qword_2549891E0))
  {
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &unk_2549891D8, &dword_20BDBC000);
    __cxa_guard_release(&qword_2549891E0);
  }
  if (*(int *)a1 < 2)
    v12 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_2549891D8;
  else
    v12 = sub_20C398E78((_DWORD *)a1);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v10);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103, PrimIndex, 1);
  if (!sub_20C513A90((uint64_t)v10, v12, a2, a3, a4, (uint64_t)v103, a5))
    return 0;
  v14 = *(_QWORD *)(*(_QWORD *)a5 + 16);
  v102 = a5;
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524CF0))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (i = 1;
          v104 != v106 || v105 != v107;
          i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (i)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v138);
      v17 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524CF0;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C5399F0;
      HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v17, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v19 = 0;
      else
        v19 = HasField;
      if (v19 == 1)
      {
        v20 = v136;
        if (v136 >= v137)
        {
          v21 = sub_20C45B3D8(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C031ADC(v136, (uint64_t)&v138);
          v21 = v20 + 152;
        }
        v136 = v21;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524CF0;
      v132 = 0;
      v129 = &unk_24C5399F0;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v30 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v31 = __ldxr(v30);
        while (__stlxr(v31 - 2, v30));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v32 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v33 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v34 = __ldxr(v33);
        while (__stlxr(v34 - 2, v33));
      }
      if (v32)
      {
        v35 = v136;
        if (v136 >= v137)
        {
          v36 = sub_20C45B3D8(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C031ADC(v136, (uint64_t)&v138);
          v36 = v35 + 152;
        }
        v136 = v36;
      }
      if ((v114 & 7) != 0)
      {
        v73 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v74 = __ldxr(v73);
        while (__stlxr(v74 - 2, v73));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v75 = v135;
    v76 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 == v136)
      goto LABEL_392;
    v129 = 0;
    v130 = 0;
    v131 = 0;
    while (1)
    {
      v76 -= 19;
      v141 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations(v76, (int **)&v129, (uint64_t)&v138);
      v77 = v141;
      if (v141 == &v138)
        break;
      if (v141)
      {
        v78 = 5;
LABEL_198:
        ((void (*)(void))(*v77)[v78])();
      }
      if (v76 == (_QWORD *)v75)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v138);
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SetExplicitItems(v79, (uint64_t)&v129);
        sub_20C031ADC((uint64_t)&v109, (uint64_t)&v138);
        sub_20C45BAB4(*(_QWORD *)v102, (uint64_t)&v109);
        *(_BYTE *)(v102 + 40) = 1;
        if (__p)
        {
          v123 = __p;
          operator delete(__p);
        }
        if (v120)
        {
          v121 = v120;
          operator delete(v120);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v110)
        {
          v111 = (std::type_info *)v110;
          operator delete(v110);
        }
        if (v150)
        {
          v151 = v150;
          operator delete(v150);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v139)
        {
          v140 = v139;
          operator delete(v139);
        }
        if (v129)
        {
          v130 = (void ***)v129;
          operator delete(v129);
        }
        goto LABEL_392;
      }
    }
    v77 = &v138;
    v78 = 4;
    goto LABEL_198;
  }
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D00))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (j = 1;
          v104 != v106 || v105 != v107;
          j = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (j)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v138);
      v25 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524D00;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A28;
      v26 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v25, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v27 = 0;
      else
        v27 = v26;
      if (v27 == 1)
      {
        v28 = v136;
        if (v136 >= v137)
        {
          v29 = sub_20C45BC0C(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C03298C(v136, (uint64_t)&v138);
          v29 = v28 + 152;
        }
        v136 = v29;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524D00;
      v132 = 0;
      v129 = &unk_24C539A28;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v44 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v45 = __ldxr(v44);
        while (__stlxr(v45 - 2, v44));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v46 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v47 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v48 = __ldxr(v47);
        while (__stlxr(v48 - 2, v47));
      }
      if (v46)
      {
        v49 = v136;
        if (v136 >= v137)
        {
          v50 = sub_20C45BC0C(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C03298C(v136, (uint64_t)&v138);
          v50 = v49 + 152;
        }
        v136 = v50;
      }
      if ((v114 & 7) != 0)
      {
        v80 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v81 = __ldxr(v80);
        while (__stlxr(v81 - 2, v80));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v82 = v135;
    v83 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 == v136)
      goto LABEL_392;
    v129 = 0;
    v130 = 0;
    v131 = 0;
    while (1)
    {
      v83 -= 19;
      v141 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations(v83, (uint64_t **)&v129, (uint64_t)&v138);
      v84 = v141;
      if (v141 == &v138)
        break;
      if (v141)
      {
        v85 = 5;
LABEL_255:
        ((void (*)(void))(*v84)[v85])();
      }
      if (v83 == (_QWORD *)v82)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v138);
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetExplicitItems(v86, (uint64_t)&v129);
        sub_20C03298C((uint64_t)&v109, (uint64_t)&v138);
        sub_20C45C1A0(*(_QWORD *)v102, (uint64_t)&v109);
        *(_BYTE *)(v102 + 40) = 1;
        if (__p)
        {
          v123 = __p;
          operator delete(__p);
        }
        if (v120)
        {
          v121 = v120;
          operator delete(v120);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v110)
        {
          v111 = (std::type_info *)v110;
          operator delete(v110);
        }
        if (v150)
        {
          v151 = v150;
          operator delete(v150);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v139)
        {
          v140 = v139;
          operator delete(v139);
        }
        if (v129)
        {
          v130 = (void ***)v129;
          operator delete(v129);
        }
        goto LABEL_392;
      }
    }
    v84 = &v138;
    v85 = 4;
    goto LABEL_255;
  }
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D10))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (k = 1;
          v104 != v106 || v105 != v107;
          k = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (k)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v138);
      v39 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524D10;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A60;
      v40 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v39, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v41 = 0;
      else
        v41 = v40;
      if (v41 == 1)
      {
        v42 = v136;
        if (v136 >= v137)
        {
          v43 = sub_20C45C274(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C033524(v136, (uint64_t)&v138);
          v43 = v42 + 152;
        }
        v136 = v43;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524D10;
      v132 = 0;
      v129 = &unk_24C539A60;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v58 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v59 = __ldxr(v58);
        while (__stlxr(v59 - 2, v58));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v60 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v61 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v62 = __ldxr(v61);
        while (__stlxr(v62 - 2, v61));
      }
      if (v60)
      {
        v63 = v136;
        if (v136 >= v137)
        {
          v64 = sub_20C45C274(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C033524(v136, (uint64_t)&v138);
          v64 = v63 + 152;
        }
        v136 = v64;
      }
      if ((v114 & 7) != 0)
      {
        v87 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v88 = __ldxr(v87);
        while (__stlxr(v88 - 2, v87));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v89 = v135;
    v90 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 == v136)
      goto LABEL_392;
    v129 = 0;
    v130 = 0;
    v131 = 0;
    while (1)
    {
      v90 -= 19;
      v141 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations(v90, (int **)&v129, (uint64_t)&v138);
      v91 = v141;
      if (v141 == &v138)
        break;
      if (v141)
      {
        v92 = 5;
LABEL_310:
        ((void (*)(void))(*v91)[v92])();
      }
      if (v90 == (_QWORD *)v89)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v138);
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SetExplicitItems(v93, (uint64_t)&v129);
        sub_20C033524((uint64_t)&v109, (uint64_t)&v138);
        sub_20C45C808(*(_QWORD *)v102, (uint64_t)&v109);
        *(_BYTE *)(v102 + 40) = 1;
        if (__p)
        {
          v123 = __p;
          operator delete(__p);
        }
        if (v120)
        {
          v121 = v120;
          operator delete(v120);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v110)
        {
          v111 = (std::type_info *)v110;
          operator delete(v110);
        }
        if (v150)
        {
          v151 = v150;
          operator delete(v150);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v139)
        {
          v140 = v139;
          operator delete(v139);
        }
        if (v129)
        {
          v130 = (void ***)v129;
          operator delete(v129);
        }
        goto LABEL_392;
      }
    }
    v91 = &v138;
    v92 = 4;
    goto LABEL_310;
  }
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D20))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (m = 1;
          v104 != v106 || v105 != v107;
          m = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (m)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v138);
      v53 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524D20;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A98;
      v54 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v53, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v55 = 0;
      else
        v55 = v54;
      if (v55 == 1)
      {
        v56 = v136;
        if (v136 >= v137)
        {
          v57 = sub_20C45C8DC(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C0340F4(v136, (uint64_t)&v138);
          v57 = v56 + 152;
        }
        v136 = v57;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524D20;
      v132 = 0;
      v129 = &unk_24C539A98;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v66 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v67 = __ldxr(v66);
        while (__stlxr(v67 - 2, v66));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v68 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v69 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v70 = __ldxr(v69);
        while (__stlxr(v70 - 2, v69));
      }
      if (v68)
      {
        v71 = v136;
        if (v136 >= v137)
        {
          v72 = sub_20C45C8DC(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C0340F4(v136, (uint64_t)&v138);
          v72 = v71 + 152;
        }
        v136 = v72;
      }
      if ((v114 & 7) != 0)
      {
        v94 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v95 = __ldxr(v94);
        while (__stlxr(v95 - 2, v94));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v96 = v135;
    v97 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 != v136)
    {
      v129 = 0;
      v130 = 0;
      v131 = 0;
      while (1)
      {
        v97 -= 19;
        v141 = 0;
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations(v97, (uint64_t **)&v129, (uint64_t)&v138);
        v98 = v141;
        if (v141 == &v138)
          break;
        if (v141)
        {
          v99 = 5;
LABEL_364:
          ((void (*)(void))(*v98)[v99])();
        }
        if (v97 == (_QWORD *)v96)
        {
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v138);
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SetExplicitItems(v100, (uint64_t)&v129);
          sub_20C0340F4((uint64_t)&v109, (uint64_t)&v138);
          sub_20C45CE70(*(_QWORD *)v102, (uint64_t)&v109);
          *(_BYTE *)(v102 + 40) = 1;
          if (__p)
          {
            v123 = __p;
            operator delete(__p);
          }
          if (v120)
          {
            v121 = v120;
            operator delete(v120);
          }
          if (v118)
          {
            v119 = v118;
            operator delete(v118);
          }
          if (v116)
          {
            v117 = v116;
            operator delete(v116);
          }
          if (v114)
          {
            v115 = v114;
            operator delete(v114);
          }
          if (v110)
          {
            v111 = (std::type_info *)v110;
            operator delete(v110);
          }
          if (v150)
          {
            v151 = v150;
            operator delete(v150);
          }
          if (v148)
          {
            v149 = v148;
            operator delete(v148);
          }
          if (v146)
          {
            v147 = v146;
            operator delete(v146);
          }
          if (v144)
          {
            v145 = v144;
            operator delete(v144);
          }
          if (v142)
          {
            v143 = v142;
            operator delete(v142);
          }
          if (v139)
          {
            v140 = v139;
            operator delete(v139);
          }
          if (v129)
          {
            v130 = (void ***)v129;
            operator delete(v129);
          }
          goto LABEL_392;
        }
      }
      v98 = &v138;
      v99 = 4;
      goto LABEL_364;
    }
LABEL_392:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v134);
    sub_20BFD265C(&v133);
    v138 = (void **)&v135;
    sub_20C45BB28(&v138);
  }
  else
  {
    if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D30))
      return sub_20C513C34((uint64_t)v10, v12, a2, a4, (uint64_t)v103, a5);
    if (!sub_20BDE150C(v14, (uint64_t)&stru_24C524D40))
      return 1;
    return sub_20C5142A8((uint64_t)v10, v12, a2, a4, (uint64_t)v103, a5);
  }
  return v22;
}

void sub_20C513494(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  uint64_t v51;

  sub_20C45C87C((uint64_t)&a19);
  sub_20C031968((_QWORD *)(v51 - 248));
  sub_20BFD1A18(&a46);
  *(_QWORD *)(v51 - 248) = &a48;
  sub_20C45BB28((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C5138DC(uint64_t a1, uint64_t a2, pxrInternal__aapl__pxrReserved__::PcpNodeRef *a3, uint64_t *a4, pxrInternal__aapl__pxrReserved__::SdfPath *a5, const pxrInternal__aapl__pxrReserved__::TfToken *a6, uint64_t *a7)
{
  uint64_t v12;
  uint64_t *LayerStack;
  pxrInternal__aapl__pxrReserved__::PcpLayerStack *v14;
  uint64_t Identifier;
  uint64_t (***v16)(_QWORD, uint64_t);
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v17;
  uint64_t (**v18)(_QWORD, uint64_t);
  uint64_t v19;
  __int128 v20;
  uint64_t (*v21)(_QWORD, uint64_t);
  uint64_t (*v22)(_QWORD, uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t (**v25)(_QWORD, uint64_t);
  uint64_t v26;
  uint64_t (*v27)(_QWORD, uint64_t);
  __int128 v28;
  uint64_t (*v29)(_QWORD, uint64_t);
  uint64_t (*v30)(_QWORD, uint64_t);
  uint64_t v32;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v33;
  int v34;
  int v35;
  __int128 v36;
  __int128 v37;
  uint64_t (*v38)(_QWORD, uint64_t);
  uint64_t (*v39)(_QWORD, uint64_t);
  uint64_t (*v40)(_QWORD, uint64_t);

  v12 = sub_20C45A368((uint64_t (****)(_QWORD, uint64_t))a1, a4, a5, a6, a7);
  if ((_DWORD)v12)
  {
    *(_BYTE *)(a1 + 40) = 1;
    LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack(a3);
    v14 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_20C1FE500(LayerStack);
    Identifier = pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetIdentifier(v14);
    v16 = *(uint64_t (****)(_QWORD, uint64_t))a1;
    v17 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)*a4;
    v32 = a2;
    v33 = v17;
    sub_20BF1DD04((uint64_t *)&v33);
    sub_20BFD6E54(&v34, a5);
    sub_20BFD6EA4(&v35, (_DWORD *)a5 + 1);
    v36 = *(_OWORD *)a3;
    v18 = v16[1];
    v19 = (uint64_t)v18[4];
    v18[4] = 0;
    v40 = (uint64_t (*)(_QWORD, uint64_t))v19;
    v20 = *(_OWORD *)v18;
    *v18 = 0;
    v18[1] = 0;
    v21 = v18[2];
    v22 = v18[3];
    v18[2] = 0;
    v18[3] = 0;
    v37 = v20;
    v38 = v21;
    v39 = v22;
    sub_20C00ACF8((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v37, v23, v24);
    sub_20C42B5F8(&v32, (const pxrInternal__aapl__pxrReserved__::ArResolverContext *)(Identifier + 32), (uint64_t)v40, v37, 0);
    v25 = v16[1];
    v26 = (uint64_t)v25[4];
    v27 = v38;
    v25[4] = v40;
    v40 = (uint64_t (*)(_QWORD, uint64_t))v26;
    v28 = *(_OWORD *)v25;
    *(_OWORD *)v25 = v37;
    v29 = v25[2];
    v30 = v25[3];
    v25[2] = v27;
    v25[3] = v39;
    v37 = v28;
    v38 = v29;
    v39 = v30;
    sub_20C00A724(&v37);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v35);
    sub_20BFD265C(&v34);
    sub_20C103234(&v33);
  }
  return v12;
}

void sub_20C513A5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v7;
  _DWORD *v8;
  _DWORD *v9;
  va_list va;

  va_start(va, a7);
  sub_20C00A724((uint64_t *)va);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v9);
  sub_20BFD265C(v8);
  sub_20C103234(v7);
  _Unwind_Resume(a1);
}

BOOL sub_20C513A90(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, int a5, uint64_t a6, uint64_t a7)
{
  char v14;
  BOOL i;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  unint64_t PrimDefinition;
  _BOOL8 v22;
  _QWORD v24[2];
  int v25;
  int v26;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v25);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v26);
  v14 = 0;
  for (i = 1;
        ;
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a6))
  {
    v16 = *(_QWORD *)(a6 + 16);
    v17 = *(_QWORD *)(a6 + 24);
    if (v16 == *(_QWORD *)(a6 + 32) && v17 == *(_QWORD *)(a6 + 40))
      break;
    if (i)
    {
      sub_20C453680(a6, a2, (int *)v24);
      sub_20BFD3EBC(&v25, (int *)v24);
      sub_20BFD3F10(&v26, (int *)v24 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v24 + 1);
      sub_20BFD265C(v24);
      v16 = *(_QWORD *)(a6 + 16);
      v17 = *(_QWORD *)(a6 + 24);
    }
    v19 = *(_QWORD *)a1;
    v24[0] = v16;
    v24[1] = v17;
    v20 = sub_20C5138DC(a7, v19, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v24, *(uint64_t **)(a6 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v25, a3, a4);
    if (*(_BYTE *)(a7 + 40))
      goto LABEL_15;
    v14 |= v20;
  }
  if (a5)
  {
    PrimDefinition = atomic_load((unint64_t *)(*(_QWORD *)(a1 + 24) + 56));
    if (!PrimDefinition)
      PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition(*(pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo **)(a1 + 24));
    *(_BYTE *)(a7 + 40) = sub_20C45A220(PrimDefinition, a2, a3, a4, *(uint64_t (****)(_QWORD, uint64_t))a7);
  }
  if ((v14 & 1) != 0)
  {
LABEL_15:
    v22 = 1;
    goto LABEL_17;
  }
  v22 = *(_BYTE *)(a7 + 40) != 0;
LABEL_17:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v26);
  sub_20BFD265C(&v25);
  return v22;
}

void sub_20C513C0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C513C34(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, char a4, uint64_t a5, uint64_t a6)
{
  BOOL i;
  _QWORD *v9;
  int HasField;
  int v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void ***v26;
  uint64_t v27;
  uint64_t *v28;
  _BYTE v35[8];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v43;
  int v44;
  int v45;
  uint64_t v46;
  void **v47;
  void ***v48;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v49;
  int v50;
  int v51;
  uint64_t v52;
  void **v53[3];
  __int16 v54;
  int v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  void **v60;
  _BYTE v61[16];
  void ***v62;
  _BYTE v63[24];
  _BYTE v64[24];
  _BYTE v65[24];
  _BYTE v66[24];
  _QWORD v67[5];

  v67[3] = *MEMORY[0x24BDAC8D0];
  v57 = 0;
  v58 = 0;
  v59 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v55);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v56);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, (int *)&v60);
      sub_20BFD3EBC(&v55, (int *)&v60);
      sub_20BFD3F10(&v56, (int *)&v60 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v60 + 1);
      sub_20BFD265C(&v60);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v60);
    v9 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a5 + 48));
    LOWORD(v50) = 0;
    v48 = &v60;
    v49 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D30;
    v47 = (void **)&unk_24C52BEB0;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v9, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v55, a3, (uint64_t (***)(_QWORD, uint64_t))&v47);
    if ((_BYTE)v50)
      v11 = 0;
    else
      v11 = HasField;
    if (v11 == 1)
    {
      v12 = v58;
      if (v58 >= v59)
      {
        v13 = sub_20C45CF44(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C02F650(v58, (uint64_t)&v60);
        v13 = v12 + 152;
      }
      v58 = v13;
    }
    v47 = (void **)v67;
    sub_20BDE5038(&v47);
    v47 = (void **)v66;
    sub_20BDE5038(&v47);
    v47 = (void **)v65;
    sub_20BDE5038(&v47);
    v47 = (void **)v64;
    sub_20BDE5038(&v47);
    v47 = (void **)v63;
    sub_20BDE5038(&v47);
    v47 = (void **)v61;
    sub_20BDE5038(&v47);
  }
  if ((a4 & 1) != 0)
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v60);
    v53[2] = (void **)&stru_24C524D30;
    v54 = 0;
    v53[0] = (void **)&unk_24C52BEB0;
    v53[1] = (void **)&v60;
    LODWORD(v42) = 0;
    v43 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v44);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v45);
    v46 = 0;
    sub_20C4535E0((uint64_t)&v47, (uint64_t)v53, (uint64_t)&v42);
    if ((v46 & 7) != 0)
    {
      v14 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v45);
    sub_20BFD265C(&v44);
    if (v43)
      sub_20C35C614(v43);
    v42 = 0;
    v16 = sub_20C45B318(a1, a2, a3, &v42, (uint64_t)&v47);
    if ((v42 & 7) != 0)
    {
      v17 = (unsigned int *)(v42 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
    if (v16)
    {
      v19 = v58;
      if (v58 >= v59)
      {
        v20 = sub_20C45CF44(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C02F650(v58, (uint64_t)&v60);
        v20 = v19 + 152;
      }
      v58 = v20;
    }
    if ((v52 & 7) != 0)
    {
      v21 = (unsigned int *)(v52 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v51);
    sub_20BFD265C(&v50);
    if (v49)
      sub_20C35C614(v49);
    v47 = (void **)v67;
    sub_20BDE5038(&v47);
    v47 = (void **)v66;
    sub_20BDE5038(&v47);
    v47 = (void **)v65;
    sub_20BDE5038(&v47);
    v47 = (void **)v64;
    sub_20BDE5038(&v47);
    v47 = (void **)v63;
    sub_20BDE5038(&v47);
    v47 = (void **)v61;
    sub_20BDE5038(&v47);
  }
  v23 = v57;
  v24 = v58;
  if (v57 != v58)
  {
    v47 = 0;
    v48 = 0;
    v25 = v58;
    v49 = 0;
    while (1)
    {
      v25 -= 152;
      v62 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations(v25, (uint64_t *)&v47, (uint64_t)&v60);
      v26 = v62;
      if (v62 == &v60)
        break;
      if (v62)
      {
        v27 = 5;
LABEL_43:
        ((void (*)(void))(*v26)[v27])();
      }
      if (v25 == v23)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v60);
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetExplicitItems(v28, (uint64_t)&v47);
        sub_20C02F650((uint64_t)v35, (uint64_t)&v60);
        sub_20C45D304(*(_QWORD *)a6, (uint64_t)v35);
        *(_BYTE *)(a6 + 40) = 1;
        v53[0] = (void **)&v41;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v40;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v39;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v38;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v37;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v36;
        sub_20BDE5038(v53);
        v53[0] = (void **)v67;
        sub_20BDE5038(v53);
        v53[0] = (void **)v66;
        sub_20BDE5038(v53);
        v53[0] = (void **)v65;
        sub_20BDE5038(v53);
        v53[0] = (void **)v64;
        sub_20BDE5038(v53);
        v53[0] = (void **)v63;
        sub_20BDE5038(v53);
        v53[0] = (void **)v61;
        sub_20BDE5038(v53);
        v60 = (void **)&v47;
        sub_20BDE5038(&v60);
        goto LABEL_46;
      }
    }
    v26 = &v60;
    v27 = 4;
    goto LABEL_43;
  }
LABEL_46:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v56);
  sub_20BFD265C(&v55);
  v60 = (void **)&v57;
  sub_20C45D378(&v60);
  return v23 != v24;
}

void sub_20C51418C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45CEE4((uint64_t)&a38);
  sub_20C020EAC((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C45D378((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_20C5142A8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, char a4, uint64_t a5, uint64_t a6)
{
  BOOL i;
  _QWORD *v9;
  int HasField;
  int v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  void ***v26;
  uint64_t v27;
  unsigned __int8 *v28;
  _BYTE v35[8];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t *v47;
  void ***v48;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v49;
  int v50;
  int v51;
  uint64_t v52;
  void **v53[3];
  __int16 v54;
  int v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  void **v60;
  _BYTE v61[16];
  void ***v62;
  _BYTE v63[24];
  _BYTE v64[24];
  _BYTE v65[24];
  _BYTE v66[24];
  _QWORD v67[5];

  v67[3] = *MEMORY[0x24BDAC8D0];
  v57 = 0;
  v58 = 0;
  v59 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v55);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v56);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, (int *)&v60);
      sub_20BFD3EBC(&v55, (int *)&v60);
      sub_20BFD3F10(&v56, (int *)&v60 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v60 + 1);
      sub_20BFD265C(&v60);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v60);
    v9 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a5 + 48));
    LOWORD(v50) = 0;
    v48 = &v60;
    v49 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D40;
    v47 = (uint64_t *)&unk_24C539538;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v9, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v55, a3, (uint64_t (***)(_QWORD, uint64_t))&v47);
    if ((_BYTE)v50)
      v11 = 0;
    else
      v11 = HasField;
    if (v11 == 1)
    {
      v12 = v58;
      if (v58 >= v59)
      {
        v13 = sub_20C45D45C(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C0366AC(v58, (uint64_t)&v60);
        v13 = v12 + 152;
      }
      v58 = v13;
    }
    v47 = v67;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v66;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v65;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v47);
  }
  if ((a4 & 1) != 0)
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v60);
    v53[2] = (void **)&stru_24C524D40;
    v54 = 0;
    v53[0] = (void **)&unk_24C539538;
    v53[1] = (void **)&v60;
    LODWORD(v42) = 0;
    v43 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v44);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v45);
    v46 = 0;
    sub_20C4535E0((uint64_t)&v47, (uint64_t)v53, (uint64_t)&v42);
    if ((v46 & 7) != 0)
    {
      v14 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v45);
    sub_20BFD265C(&v44);
    if (v43)
      sub_20C35C614(v43);
    v42 = 0;
    v16 = sub_20C45B318(a1, a2, a3, &v42, (uint64_t)&v47);
    if ((v42 & 7) != 0)
    {
      v17 = (unsigned int *)(v42 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
    if (v16)
    {
      v19 = v58;
      if (v58 >= v59)
      {
        v20 = sub_20C45D45C(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C0366AC(v58, (uint64_t)&v60);
        v20 = v19 + 152;
      }
      v58 = v20;
    }
    if ((v52 & 7) != 0)
    {
      v21 = (unsigned int *)(v52 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v51);
    sub_20BFD265C(&v50);
    if (v49)
      sub_20C35C614(v49);
    v47 = v67;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v66;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v65;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v47);
  }
  v23 = v57;
  v24 = v58;
  if (v57 != v58)
  {
    v47 = 0;
    v48 = 0;
    v25 = (_QWORD *)v58;
    v49 = 0;
    while (1)
    {
      v25 -= 19;
      v62 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations(v25, &v47, (uint64_t)&v60);
      v26 = v62;
      if (v62 == &v60)
        break;
      if (v62)
      {
        v27 = 5;
LABEL_43:
        ((void (*)(void))(*v26)[v27])();
      }
      if (v25 == (_QWORD *)v23)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v60);
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SetExplicitItems(v28, &v47);
        sub_20C0366AC((uint64_t)v35, (uint64_t)&v60);
        sub_20C45D578(*(_QWORD *)a6, (uint64_t)v35);
        *(_BYTE *)(a6 + 40) = 1;
        v53[0] = (void **)&v41;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v40;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v39;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v38;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v37;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v36;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v67;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v66;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v65;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v64;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v63;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v61;
        sub_20BEEB2B8(v53);
        v60 = (void **)&v47;
        sub_20BEEB2B8(&v60);
        goto LABEL_46;
      }
    }
    v26 = &v60;
    v27 = 4;
    goto LABEL_43;
  }
LABEL_46:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v56);
  sub_20BFD265C(&v55);
  v60 = (void **)&v57;
  sub_20C451A98(&v60);
  return v23 != v24;
}

void sub_20C514800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45D3FC((uint64_t)&a38);
  sub_20C03507C((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C451A98((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C51491C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, int a4, uint64_t a5)
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v10;
  unsigned __int8 v11;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v12;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t v14;
  BOOL i;
  _QWORD *v17;
  int HasField;
  int v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  BOOL j;
  _QWORD *v25;
  int v26;
  int v27;
  unint64_t v28;
  uint64_t v29;
  unsigned int *v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int *v33;
  unsigned int v34;
  unint64_t v35;
  uint64_t v36;
  BOOL k;
  _QWORD *v39;
  int v40;
  int v41;
  unint64_t v42;
  uint64_t v43;
  unsigned int *v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int *v47;
  unsigned int v48;
  unint64_t v49;
  uint64_t v50;
  BOOL m;
  _QWORD *v53;
  int v54;
  int v55;
  unint64_t v56;
  uint64_t v57;
  unsigned int *v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int *v61;
  unsigned int v62;
  unint64_t v63;
  uint64_t v64;
  unsigned int *v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int *v69;
  unsigned int v70;
  unint64_t v71;
  uint64_t v72;
  unsigned int *v73;
  unsigned int v74;
  uint64_t v75;
  _QWORD *v76;
  void ***v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int *v80;
  unsigned int v81;
  uint64_t v82;
  _QWORD *v83;
  void ***v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int *v87;
  unsigned int v88;
  uint64_t v89;
  _QWORD *v90;
  void ***v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int *v94;
  unsigned int v95;
  uint64_t v96;
  _QWORD *v97;
  void ***v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v102;
  _BYTE v103[16];
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t (**v109)(_QWORD, uint64_t);
  void *v110;
  std::type_info *v111;
  int v112;
  int v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *v120;
  void *v121;
  void *__p;
  void *v123;
  uint64_t v124;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v125;
  int v126;
  int v127;
  uint64_t v128;
  void *v129;
  void ***v130;
  std::type_info *v131;
  __int16 v132;
  int v133;
  int v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  void **v138;
  void *v139;
  void *v140;
  void ***v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  void *v150;
  void *v151;
  uint64_t v152;

  v152 = *MEMORY[0x24BDAC8D0];
  v10 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  v11 = atomic_load((unsigned __int8 *)&qword_2549891F0);
  if ((v11 & 1) == 0 && __cxa_guard_acquire(&qword_2549891F0))
  {
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &unk_2549891E8, &dword_20BDBC000);
    __cxa_guard_release(&qword_2549891F0);
  }
  if (*(int *)a1 < 2)
    v12 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_2549891E8;
  else
    v12 = sub_20C398E78((_DWORD *)a1);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v10);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103, PrimIndex, 1);
  if (!sub_20C5162DC((uint64_t)v10, v12, a2, a3, a4, (uint64_t)v103, a5))
    return 0;
  v14 = *(_QWORD *)(*(_QWORD *)a5 + 16);
  v102 = a5;
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524CF0))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (i = 1;
          v104 != v106 || v105 != v107;
          i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (i)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v138);
      v17 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524CF0;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C5399F0;
      HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v17, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v19 = 0;
      else
        v19 = HasField;
      if (v19 == 1)
      {
        v20 = v136;
        if (v136 >= v137)
        {
          v21 = sub_20C45B3D8(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C031ADC(v136, (uint64_t)&v138);
          v21 = v20 + 152;
        }
        v136 = v21;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524CF0;
      v132 = 0;
      v129 = &unk_24C5399F0;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v30 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v31 = __ldxr(v30);
        while (__stlxr(v31 - 2, v30));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v32 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v33 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v34 = __ldxr(v33);
        while (__stlxr(v34 - 2, v33));
      }
      if (v32)
      {
        v35 = v136;
        if (v136 >= v137)
        {
          v36 = sub_20C45B3D8(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C031ADC(v136, (uint64_t)&v138);
          v36 = v35 + 152;
        }
        v136 = v36;
      }
      if ((v114 & 7) != 0)
      {
        v73 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v74 = __ldxr(v73);
        while (__stlxr(v74 - 2, v73));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v75 = v135;
    v76 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 == v136)
      goto LABEL_392;
    v129 = 0;
    v130 = 0;
    v131 = 0;
    while (1)
    {
      v76 -= 19;
      v141 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations(v76, (int **)&v129, (uint64_t)&v138);
      v77 = v141;
      if (v141 == &v138)
        break;
      if (v141)
      {
        v78 = 5;
LABEL_198:
        ((void (*)(void))(*v77)[v78])();
      }
      if (v76 == (_QWORD *)v75)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v138);
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SetExplicitItems(v79, (uint64_t)&v129);
        sub_20C031ADC((uint64_t)&v109, (uint64_t)&v138);
        sub_20C45BAB4(*(_QWORD *)v102, (uint64_t)&v109);
        *(_BYTE *)(v102 + 40) = 1;
        if (__p)
        {
          v123 = __p;
          operator delete(__p);
        }
        if (v120)
        {
          v121 = v120;
          operator delete(v120);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v110)
        {
          v111 = (std::type_info *)v110;
          operator delete(v110);
        }
        if (v150)
        {
          v151 = v150;
          operator delete(v150);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v139)
        {
          v140 = v139;
          operator delete(v139);
        }
        if (v129)
        {
          v130 = (void ***)v129;
          operator delete(v129);
        }
        goto LABEL_392;
      }
    }
    v77 = &v138;
    v78 = 4;
    goto LABEL_198;
  }
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D00))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (j = 1;
          v104 != v106 || v105 != v107;
          j = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (j)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v138);
      v25 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524D00;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A28;
      v26 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v25, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v27 = 0;
      else
        v27 = v26;
      if (v27 == 1)
      {
        v28 = v136;
        if (v136 >= v137)
        {
          v29 = sub_20C45BC0C(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C03298C(v136, (uint64_t)&v138);
          v29 = v28 + 152;
        }
        v136 = v29;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524D00;
      v132 = 0;
      v129 = &unk_24C539A28;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v44 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v45 = __ldxr(v44);
        while (__stlxr(v45 - 2, v44));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v46 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v47 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v48 = __ldxr(v47);
        while (__stlxr(v48 - 2, v47));
      }
      if (v46)
      {
        v49 = v136;
        if (v136 >= v137)
        {
          v50 = sub_20C45BC0C(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C03298C(v136, (uint64_t)&v138);
          v50 = v49 + 152;
        }
        v136 = v50;
      }
      if ((v114 & 7) != 0)
      {
        v80 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v81 = __ldxr(v80);
        while (__stlxr(v81 - 2, v80));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v82 = v135;
    v83 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 == v136)
      goto LABEL_392;
    v129 = 0;
    v130 = 0;
    v131 = 0;
    while (1)
    {
      v83 -= 19;
      v141 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations(v83, (uint64_t **)&v129, (uint64_t)&v138);
      v84 = v141;
      if (v141 == &v138)
        break;
      if (v141)
      {
        v85 = 5;
LABEL_255:
        ((void (*)(void))(*v84)[v85])();
      }
      if (v83 == (_QWORD *)v82)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v138);
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetExplicitItems(v86, (uint64_t)&v129);
        sub_20C03298C((uint64_t)&v109, (uint64_t)&v138);
        sub_20C45C1A0(*(_QWORD *)v102, (uint64_t)&v109);
        *(_BYTE *)(v102 + 40) = 1;
        if (__p)
        {
          v123 = __p;
          operator delete(__p);
        }
        if (v120)
        {
          v121 = v120;
          operator delete(v120);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v110)
        {
          v111 = (std::type_info *)v110;
          operator delete(v110);
        }
        if (v150)
        {
          v151 = v150;
          operator delete(v150);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v139)
        {
          v140 = v139;
          operator delete(v139);
        }
        if (v129)
        {
          v130 = (void ***)v129;
          operator delete(v129);
        }
        goto LABEL_392;
      }
    }
    v84 = &v138;
    v85 = 4;
    goto LABEL_255;
  }
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D10))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (k = 1;
          v104 != v106 || v105 != v107;
          k = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (k)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v138);
      v39 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524D10;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A60;
      v40 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v39, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v41 = 0;
      else
        v41 = v40;
      if (v41 == 1)
      {
        v42 = v136;
        if (v136 >= v137)
        {
          v43 = sub_20C45C274(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C033524(v136, (uint64_t)&v138);
          v43 = v42 + 152;
        }
        v136 = v43;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524D10;
      v132 = 0;
      v129 = &unk_24C539A60;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v58 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v59 = __ldxr(v58);
        while (__stlxr(v59 - 2, v58));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v60 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v61 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v62 = __ldxr(v61);
        while (__stlxr(v62 - 2, v61));
      }
      if (v60)
      {
        v63 = v136;
        if (v136 >= v137)
        {
          v64 = sub_20C45C274(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C033524(v136, (uint64_t)&v138);
          v64 = v63 + 152;
        }
        v136 = v64;
      }
      if ((v114 & 7) != 0)
      {
        v87 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v88 = __ldxr(v87);
        while (__stlxr(v88 - 2, v87));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v89 = v135;
    v90 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 == v136)
      goto LABEL_392;
    v129 = 0;
    v130 = 0;
    v131 = 0;
    while (1)
    {
      v90 -= 19;
      v141 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations(v90, (int **)&v129, (uint64_t)&v138);
      v91 = v141;
      if (v141 == &v138)
        break;
      if (v141)
      {
        v92 = 5;
LABEL_310:
        ((void (*)(void))(*v91)[v92])();
      }
      if (v90 == (_QWORD *)v89)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v138);
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SetExplicitItems(v93, (uint64_t)&v129);
        sub_20C033524((uint64_t)&v109, (uint64_t)&v138);
        sub_20C45C808(*(_QWORD *)v102, (uint64_t)&v109);
        *(_BYTE *)(v102 + 40) = 1;
        if (__p)
        {
          v123 = __p;
          operator delete(__p);
        }
        if (v120)
        {
          v121 = v120;
          operator delete(v120);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v110)
        {
          v111 = (std::type_info *)v110;
          operator delete(v110);
        }
        if (v150)
        {
          v151 = v150;
          operator delete(v150);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v139)
        {
          v140 = v139;
          operator delete(v139);
        }
        if (v129)
        {
          v130 = (void ***)v129;
          operator delete(v129);
        }
        goto LABEL_392;
      }
    }
    v91 = &v138;
    v92 = 4;
    goto LABEL_310;
  }
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D20))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (m = 1;
          v104 != v106 || v105 != v107;
          m = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (m)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v138);
      v53 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524D20;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A98;
      v54 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v53, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v55 = 0;
      else
        v55 = v54;
      if (v55 == 1)
      {
        v56 = v136;
        if (v136 >= v137)
        {
          v57 = sub_20C45C8DC(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C0340F4(v136, (uint64_t)&v138);
          v57 = v56 + 152;
        }
        v136 = v57;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524D20;
      v132 = 0;
      v129 = &unk_24C539A98;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v66 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v67 = __ldxr(v66);
        while (__stlxr(v67 - 2, v66));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v68 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v69 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v70 = __ldxr(v69);
        while (__stlxr(v70 - 2, v69));
      }
      if (v68)
      {
        v71 = v136;
        if (v136 >= v137)
        {
          v72 = sub_20C45C8DC(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C0340F4(v136, (uint64_t)&v138);
          v72 = v71 + 152;
        }
        v136 = v72;
      }
      if ((v114 & 7) != 0)
      {
        v94 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v95 = __ldxr(v94);
        while (__stlxr(v95 - 2, v94));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v96 = v135;
    v97 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 != v136)
    {
      v129 = 0;
      v130 = 0;
      v131 = 0;
      while (1)
      {
        v97 -= 19;
        v141 = 0;
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations(v97, (uint64_t **)&v129, (uint64_t)&v138);
        v98 = v141;
        if (v141 == &v138)
          break;
        if (v141)
        {
          v99 = 5;
LABEL_364:
          ((void (*)(void))(*v98)[v99])();
        }
        if (v97 == (_QWORD *)v96)
        {
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v138);
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SetExplicitItems(v100, (uint64_t)&v129);
          sub_20C0340F4((uint64_t)&v109, (uint64_t)&v138);
          sub_20C45CE70(*(_QWORD *)v102, (uint64_t)&v109);
          *(_BYTE *)(v102 + 40) = 1;
          if (__p)
          {
            v123 = __p;
            operator delete(__p);
          }
          if (v120)
          {
            v121 = v120;
            operator delete(v120);
          }
          if (v118)
          {
            v119 = v118;
            operator delete(v118);
          }
          if (v116)
          {
            v117 = v116;
            operator delete(v116);
          }
          if (v114)
          {
            v115 = v114;
            operator delete(v114);
          }
          if (v110)
          {
            v111 = (std::type_info *)v110;
            operator delete(v110);
          }
          if (v150)
          {
            v151 = v150;
            operator delete(v150);
          }
          if (v148)
          {
            v149 = v148;
            operator delete(v148);
          }
          if (v146)
          {
            v147 = v146;
            operator delete(v146);
          }
          if (v144)
          {
            v145 = v144;
            operator delete(v144);
          }
          if (v142)
          {
            v143 = v142;
            operator delete(v142);
          }
          if (v139)
          {
            v140 = v139;
            operator delete(v139);
          }
          if (v129)
          {
            v130 = (void ***)v129;
            operator delete(v129);
          }
          goto LABEL_392;
        }
      }
      v98 = &v138;
      v99 = 4;
      goto LABEL_364;
    }
LABEL_392:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v134);
    sub_20BFD265C(&v133);
    v138 = (void **)&v135;
    sub_20C45BB28(&v138);
  }
  else
  {
    if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D30))
      return sub_20C51647C((uint64_t)v10, v12, a2, a4, (uint64_t)v103, a5);
    if (!sub_20BDE150C(v14, (uint64_t)&stru_24C524D40))
      return 1;
    return sub_20C516AF0((uint64_t)v10, v12, a2, a4, (uint64_t)v103, a5);
  }
  return v22;
}

void sub_20C515DF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  uint64_t v51;

  sub_20C45C87C((uint64_t)&a19);
  sub_20C031968((_QWORD *)(v51 - 248));
  sub_20BFD1A18(&a46);
  *(_QWORD *)(v51 - 248) = &a48;
  sub_20C45BB28((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C51623C(uint64_t a1, pxrInternal__aapl__pxrReserved__::PcpNodeRef *a2, uint64_t *a3, pxrInternal__aapl__pxrReserved__::SdfPath *a4, const pxrInternal__aapl__pxrReserved__::TfToken *a5, uint64_t *a6)
{
  uint64_t v9;
  double v10;
  uint64_t (***v11)(_QWORD, uint64_t);
  uint64_t *v12;
  uint64_t v13;
  double v15[2];
  uint64_t v16;

  v9 = sub_20C45A368((uint64_t (****)(_QWORD, uint64_t))a1, a3, a4, a5, a6);
  if ((_DWORD)v9)
  {
    *(_BYTE *)(a1 + 40) = 1;
    v15[0] = sub_20C44B9D4(a2, a3);
    v15[1] = v10;
    v11 = *(uint64_t (****)(_QWORD, uint64_t))a1;
    if (!pxrInternal__aapl__pxrReserved__::SdfLayerOffset::IsIdentity((pxrInternal__aapl__pxrReserved__::SdfLayerOffset *)v15))
    {
      v12 = (uint64_t *)v11[1];
      v13 = *v12;
      *v12 = 0;
      v16 = v13;
      *(double *)v11[1] = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::operator*(v15, (double *)&v16);
    }
  }
  return v9;
}

BOOL sub_20C5162DC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, int a5, uint64_t a6, uint64_t a7)
{
  char v14;
  BOOL i;
  uint64_t v16;
  uint64_t v17;
  char v19;
  unint64_t PrimDefinition;
  _BOOL8 v21;
  _QWORD v23[2];
  int v24;
  int v25;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v24);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v25);
  v14 = 0;
  for (i = 1;
        ;
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a6))
  {
    v16 = *(_QWORD *)(a6 + 16);
    v17 = *(_QWORD *)(a6 + 24);
    if (v16 == *(_QWORD *)(a6 + 32) && v17 == *(_QWORD *)(a6 + 40))
      break;
    if (i)
    {
      sub_20C453680(a6, a2, (int *)v23);
      sub_20BFD3EBC(&v24, (int *)v23);
      sub_20BFD3F10(&v25, (int *)v23 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v23 + 1);
      sub_20BFD265C(v23);
      v16 = *(_QWORD *)(a6 + 16);
      v17 = *(_QWORD *)(a6 + 24);
    }
    v23[0] = v16;
    v23[1] = v17;
    v19 = sub_20C51623C(a7, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v23, *(uint64_t **)(a6 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v24, a3, a4);
    if (*(_BYTE *)(a7 + 40))
      goto LABEL_15;
    v14 |= v19;
  }
  if (a5)
  {
    PrimDefinition = atomic_load((unint64_t *)(*(_QWORD *)(a1 + 24) + 56));
    if (!PrimDefinition)
      PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition(*(pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo **)(a1 + 24));
    *(_BYTE *)(a7 + 40) = sub_20C45A220(PrimDefinition, a2, a3, a4, *(uint64_t (****)(_QWORD, uint64_t))a7);
  }
  if ((v14 & 1) != 0)
  {
LABEL_15:
    v21 = 1;
    goto LABEL_17;
  }
  v21 = *(_BYTE *)(a7 + 40) != 0;
LABEL_17:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v25);
  sub_20BFD265C(&v24);
  return v21;
}

void sub_20C516454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C51647C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, char a4, uint64_t a5, uint64_t a6)
{
  BOOL i;
  _QWORD *v9;
  int HasField;
  int v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void ***v26;
  uint64_t v27;
  uint64_t *v28;
  _BYTE v35[8];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v43;
  int v44;
  int v45;
  uint64_t v46;
  void **v47;
  void ***v48;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v49;
  int v50;
  int v51;
  uint64_t v52;
  void **v53[3];
  __int16 v54;
  int v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  void **v60;
  _BYTE v61[16];
  void ***v62;
  _BYTE v63[24];
  _BYTE v64[24];
  _BYTE v65[24];
  _BYTE v66[24];
  _QWORD v67[5];

  v67[3] = *MEMORY[0x24BDAC8D0];
  v57 = 0;
  v58 = 0;
  v59 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v55);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v56);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, (int *)&v60);
      sub_20BFD3EBC(&v55, (int *)&v60);
      sub_20BFD3F10(&v56, (int *)&v60 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v60 + 1);
      sub_20BFD265C(&v60);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v60);
    v9 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a5 + 48));
    LOWORD(v50) = 0;
    v48 = &v60;
    v49 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D30;
    v47 = (void **)&unk_24C52BEB0;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v9, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v55, a3, (uint64_t (***)(_QWORD, uint64_t))&v47);
    if ((_BYTE)v50)
      v11 = 0;
    else
      v11 = HasField;
    if (v11 == 1)
    {
      v12 = v58;
      if (v58 >= v59)
      {
        v13 = sub_20C45CF44(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C02F650(v58, (uint64_t)&v60);
        v13 = v12 + 152;
      }
      v58 = v13;
    }
    v47 = (void **)v67;
    sub_20BDE5038(&v47);
    v47 = (void **)v66;
    sub_20BDE5038(&v47);
    v47 = (void **)v65;
    sub_20BDE5038(&v47);
    v47 = (void **)v64;
    sub_20BDE5038(&v47);
    v47 = (void **)v63;
    sub_20BDE5038(&v47);
    v47 = (void **)v61;
    sub_20BDE5038(&v47);
  }
  if ((a4 & 1) != 0)
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v60);
    v53[2] = (void **)&stru_24C524D30;
    v54 = 0;
    v53[0] = (void **)&unk_24C52BEB0;
    v53[1] = (void **)&v60;
    LODWORD(v42) = 0;
    v43 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v44);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v45);
    v46 = 0;
    sub_20C4535E0((uint64_t)&v47, (uint64_t)v53, (uint64_t)&v42);
    if ((v46 & 7) != 0)
    {
      v14 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v45);
    sub_20BFD265C(&v44);
    if (v43)
      sub_20C35C614(v43);
    v42 = 0;
    v16 = sub_20C45B318(a1, a2, a3, &v42, (uint64_t)&v47);
    if ((v42 & 7) != 0)
    {
      v17 = (unsigned int *)(v42 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
    if (v16)
    {
      v19 = v58;
      if (v58 >= v59)
      {
        v20 = sub_20C45CF44(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C02F650(v58, (uint64_t)&v60);
        v20 = v19 + 152;
      }
      v58 = v20;
    }
    if ((v52 & 7) != 0)
    {
      v21 = (unsigned int *)(v52 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v51);
    sub_20BFD265C(&v50);
    if (v49)
      sub_20C35C614(v49);
    v47 = (void **)v67;
    sub_20BDE5038(&v47);
    v47 = (void **)v66;
    sub_20BDE5038(&v47);
    v47 = (void **)v65;
    sub_20BDE5038(&v47);
    v47 = (void **)v64;
    sub_20BDE5038(&v47);
    v47 = (void **)v63;
    sub_20BDE5038(&v47);
    v47 = (void **)v61;
    sub_20BDE5038(&v47);
  }
  v23 = v57;
  v24 = v58;
  if (v57 != v58)
  {
    v47 = 0;
    v48 = 0;
    v25 = v58;
    v49 = 0;
    while (1)
    {
      v25 -= 152;
      v62 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations(v25, (uint64_t *)&v47, (uint64_t)&v60);
      v26 = v62;
      if (v62 == &v60)
        break;
      if (v62)
      {
        v27 = 5;
LABEL_43:
        ((void (*)(void))(*v26)[v27])();
      }
      if (v25 == v23)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v60);
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetExplicitItems(v28, (uint64_t)&v47);
        sub_20C02F650((uint64_t)v35, (uint64_t)&v60);
        sub_20C45D304(*(_QWORD *)a6, (uint64_t)v35);
        *(_BYTE *)(a6 + 40) = 1;
        v53[0] = (void **)&v41;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v40;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v39;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v38;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v37;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v36;
        sub_20BDE5038(v53);
        v53[0] = (void **)v67;
        sub_20BDE5038(v53);
        v53[0] = (void **)v66;
        sub_20BDE5038(v53);
        v53[0] = (void **)v65;
        sub_20BDE5038(v53);
        v53[0] = (void **)v64;
        sub_20BDE5038(v53);
        v53[0] = (void **)v63;
        sub_20BDE5038(v53);
        v53[0] = (void **)v61;
        sub_20BDE5038(v53);
        v60 = (void **)&v47;
        sub_20BDE5038(&v60);
        goto LABEL_46;
      }
    }
    v26 = &v60;
    v27 = 4;
    goto LABEL_43;
  }
LABEL_46:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v56);
  sub_20BFD265C(&v55);
  v60 = (void **)&v57;
  sub_20C45D378(&v60);
  return v23 != v24;
}

void sub_20C5169D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45CEE4((uint64_t)&a38);
  sub_20C020EAC((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C45D378((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_20C516AF0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, char a4, uint64_t a5, uint64_t a6)
{
  BOOL i;
  _QWORD *v9;
  int HasField;
  int v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  void ***v26;
  uint64_t v27;
  unsigned __int8 *v28;
  _BYTE v35[8];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t *v47;
  void ***v48;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v49;
  int v50;
  int v51;
  uint64_t v52;
  void **v53[3];
  __int16 v54;
  int v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  void **v60;
  _BYTE v61[16];
  void ***v62;
  _BYTE v63[24];
  _BYTE v64[24];
  _BYTE v65[24];
  _BYTE v66[24];
  _QWORD v67[5];

  v67[3] = *MEMORY[0x24BDAC8D0];
  v57 = 0;
  v58 = 0;
  v59 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v55);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v56);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, (int *)&v60);
      sub_20BFD3EBC(&v55, (int *)&v60);
      sub_20BFD3F10(&v56, (int *)&v60 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v60 + 1);
      sub_20BFD265C(&v60);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v60);
    v9 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a5 + 48));
    LOWORD(v50) = 0;
    v48 = &v60;
    v49 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D40;
    v47 = (uint64_t *)&unk_24C539538;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v9, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v55, a3, (uint64_t (***)(_QWORD, uint64_t))&v47);
    if ((_BYTE)v50)
      v11 = 0;
    else
      v11 = HasField;
    if (v11 == 1)
    {
      v12 = v58;
      if (v58 >= v59)
      {
        v13 = sub_20C45D45C(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C0366AC(v58, (uint64_t)&v60);
        v13 = v12 + 152;
      }
      v58 = v13;
    }
    v47 = v67;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v66;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v65;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v47);
  }
  if ((a4 & 1) != 0)
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v60);
    v53[2] = (void **)&stru_24C524D40;
    v54 = 0;
    v53[0] = (void **)&unk_24C539538;
    v53[1] = (void **)&v60;
    LODWORD(v42) = 0;
    v43 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v44);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v45);
    v46 = 0;
    sub_20C4535E0((uint64_t)&v47, (uint64_t)v53, (uint64_t)&v42);
    if ((v46 & 7) != 0)
    {
      v14 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v45);
    sub_20BFD265C(&v44);
    if (v43)
      sub_20C35C614(v43);
    v42 = 0;
    v16 = sub_20C45B318(a1, a2, a3, &v42, (uint64_t)&v47);
    if ((v42 & 7) != 0)
    {
      v17 = (unsigned int *)(v42 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
    if (v16)
    {
      v19 = v58;
      if (v58 >= v59)
      {
        v20 = sub_20C45D45C(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C0366AC(v58, (uint64_t)&v60);
        v20 = v19 + 152;
      }
      v58 = v20;
    }
    if ((v52 & 7) != 0)
    {
      v21 = (unsigned int *)(v52 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v51);
    sub_20BFD265C(&v50);
    if (v49)
      sub_20C35C614(v49);
    v47 = v67;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v66;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v65;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v47);
  }
  v23 = v57;
  v24 = v58;
  if (v57 != v58)
  {
    v47 = 0;
    v48 = 0;
    v25 = (_QWORD *)v58;
    v49 = 0;
    while (1)
    {
      v25 -= 19;
      v62 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations(v25, &v47, (uint64_t)&v60);
      v26 = v62;
      if (v62 == &v60)
        break;
      if (v62)
      {
        v27 = 5;
LABEL_43:
        ((void (*)(void))(*v26)[v27])();
      }
      if (v25 == (_QWORD *)v23)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v60);
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SetExplicitItems(v28, &v47);
        sub_20C0366AC((uint64_t)v35, (uint64_t)&v60);
        sub_20C45D578(*(_QWORD *)a6, (uint64_t)v35);
        *(_BYTE *)(a6 + 40) = 1;
        v53[0] = (void **)&v41;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v40;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v39;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v38;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v37;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v36;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v67;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v66;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v65;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v64;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v63;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v61;
        sub_20BEEB2B8(v53);
        v60 = (void **)&v47;
        sub_20BEEB2B8(&v60);
        goto LABEL_46;
      }
    }
    v26 = &v60;
    v27 = 4;
    goto LABEL_43;
  }
LABEL_46:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v56);
  sub_20BFD265C(&v55);
  v60 = (void **)&v57;
  sub_20C451A98(&v60);
  return v23 != v24;
}

void sub_20C517048(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45D3FC((uint64_t)&a38);
  sub_20C03507C((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C451A98((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C517164(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, int a4, uint64_t a5)
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v10;
  unsigned __int8 v11;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v12;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t v14;
  BOOL i;
  _QWORD *v17;
  int HasField;
  int v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  BOOL j;
  _QWORD *v25;
  int v26;
  int v27;
  unint64_t v28;
  uint64_t v29;
  unsigned int *v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int *v33;
  unsigned int v34;
  unint64_t v35;
  uint64_t v36;
  BOOL k;
  _QWORD *v39;
  int v40;
  int v41;
  unint64_t v42;
  uint64_t v43;
  unsigned int *v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int *v47;
  unsigned int v48;
  unint64_t v49;
  uint64_t v50;
  BOOL m;
  _QWORD *v53;
  int v54;
  int v55;
  unint64_t v56;
  uint64_t v57;
  unsigned int *v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int *v61;
  unsigned int v62;
  unint64_t v63;
  uint64_t v64;
  unsigned int *v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int *v69;
  unsigned int v70;
  unint64_t v71;
  uint64_t v72;
  unsigned int *v73;
  unsigned int v74;
  uint64_t v75;
  _QWORD *v76;
  void ***v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int *v80;
  unsigned int v81;
  uint64_t v82;
  _QWORD *v83;
  void ***v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int *v87;
  unsigned int v88;
  uint64_t v89;
  _QWORD *v90;
  void ***v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int *v94;
  unsigned int v95;
  uint64_t v96;
  _QWORD *v97;
  void ***v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v102;
  _BYTE v103[16];
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t (**v109)(_QWORD, uint64_t);
  void *v110;
  std::type_info *v111;
  int v112;
  int v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *v120;
  void *v121;
  void *__p;
  void *v123;
  uint64_t v124;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v125;
  int v126;
  int v127;
  uint64_t v128;
  void *v129;
  void ***v130;
  std::type_info *v131;
  __int16 v132;
  int v133;
  int v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  void **v138;
  void *v139;
  void *v140;
  void ***v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  void *v150;
  void *v151;
  uint64_t v152;

  v152 = *MEMORY[0x24BDAC8D0];
  v10 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  v11 = atomic_load((unsigned __int8 *)&qword_254989200);
  if ((v11 & 1) == 0 && __cxa_guard_acquire(&qword_254989200))
  {
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &unk_2549891F8, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989200);
  }
  if (*(int *)a1 < 2)
    v12 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_2549891F8;
  else
    v12 = sub_20C398E78((_DWORD *)a1);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v10);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103, PrimIndex, 1);
  if (!sub_20C518BCC((uint64_t)v10, v12, a2, a3, a4, (uint64_t)v103, a5))
    return 0;
  v14 = *(_QWORD *)(*(_QWORD *)a5 + 16);
  v102 = a5;
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524CF0))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (i = 1;
          v104 != v106 || v105 != v107;
          i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (i)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v138);
      v17 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524CF0;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C5399F0;
      HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v17, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v19 = 0;
      else
        v19 = HasField;
      if (v19 == 1)
      {
        v20 = v136;
        if (v136 >= v137)
        {
          v21 = sub_20C45B3D8(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C031ADC(v136, (uint64_t)&v138);
          v21 = v20 + 152;
        }
        v136 = v21;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524CF0;
      v132 = 0;
      v129 = &unk_24C5399F0;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v30 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v31 = __ldxr(v30);
        while (__stlxr(v31 - 2, v30));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v32 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v33 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v34 = __ldxr(v33);
        while (__stlxr(v34 - 2, v33));
      }
      if (v32)
      {
        v35 = v136;
        if (v136 >= v137)
        {
          v36 = sub_20C45B3D8(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C031ADC(v136, (uint64_t)&v138);
          v36 = v35 + 152;
        }
        v136 = v36;
      }
      if ((v114 & 7) != 0)
      {
        v73 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v74 = __ldxr(v73);
        while (__stlxr(v74 - 2, v73));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v75 = v135;
    v76 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 == v136)
      goto LABEL_392;
    v129 = 0;
    v130 = 0;
    v131 = 0;
    while (1)
    {
      v76 -= 19;
      v141 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations(v76, (int **)&v129, (uint64_t)&v138);
      v77 = v141;
      if (v141 == &v138)
        break;
      if (v141)
      {
        v78 = 5;
LABEL_198:
        ((void (*)(void))(*v77)[v78])();
      }
      if (v76 == (_QWORD *)v75)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v138);
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SetExplicitItems(v79, (uint64_t)&v129);
        sub_20C031ADC((uint64_t)&v109, (uint64_t)&v138);
        sub_20C45BAB4(*(_QWORD *)v102, (uint64_t)&v109);
        *(_BYTE *)(v102 + 40) = 1;
        if (__p)
        {
          v123 = __p;
          operator delete(__p);
        }
        if (v120)
        {
          v121 = v120;
          operator delete(v120);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v110)
        {
          v111 = (std::type_info *)v110;
          operator delete(v110);
        }
        if (v150)
        {
          v151 = v150;
          operator delete(v150);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v139)
        {
          v140 = v139;
          operator delete(v139);
        }
        if (v129)
        {
          v130 = (void ***)v129;
          operator delete(v129);
        }
        goto LABEL_392;
      }
    }
    v77 = &v138;
    v78 = 4;
    goto LABEL_198;
  }
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D00))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (j = 1;
          v104 != v106 || v105 != v107;
          j = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (j)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v138);
      v25 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524D00;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A28;
      v26 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v25, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v27 = 0;
      else
        v27 = v26;
      if (v27 == 1)
      {
        v28 = v136;
        if (v136 >= v137)
        {
          v29 = sub_20C45BC0C(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C03298C(v136, (uint64_t)&v138);
          v29 = v28 + 152;
        }
        v136 = v29;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524D00;
      v132 = 0;
      v129 = &unk_24C539A28;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v44 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v45 = __ldxr(v44);
        while (__stlxr(v45 - 2, v44));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v46 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v47 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v48 = __ldxr(v47);
        while (__stlxr(v48 - 2, v47));
      }
      if (v46)
      {
        v49 = v136;
        if (v136 >= v137)
        {
          v50 = sub_20C45BC0C(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C03298C(v136, (uint64_t)&v138);
          v50 = v49 + 152;
        }
        v136 = v50;
      }
      if ((v114 & 7) != 0)
      {
        v80 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v81 = __ldxr(v80);
        while (__stlxr(v81 - 2, v80));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v82 = v135;
    v83 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 == v136)
      goto LABEL_392;
    v129 = 0;
    v130 = 0;
    v131 = 0;
    while (1)
    {
      v83 -= 19;
      v141 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations(v83, (uint64_t **)&v129, (uint64_t)&v138);
      v84 = v141;
      if (v141 == &v138)
        break;
      if (v141)
      {
        v85 = 5;
LABEL_255:
        ((void (*)(void))(*v84)[v85])();
      }
      if (v83 == (_QWORD *)v82)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v138);
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetExplicitItems(v86, (uint64_t)&v129);
        sub_20C03298C((uint64_t)&v109, (uint64_t)&v138);
        sub_20C45C1A0(*(_QWORD *)v102, (uint64_t)&v109);
        *(_BYTE *)(v102 + 40) = 1;
        if (__p)
        {
          v123 = __p;
          operator delete(__p);
        }
        if (v120)
        {
          v121 = v120;
          operator delete(v120);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v110)
        {
          v111 = (std::type_info *)v110;
          operator delete(v110);
        }
        if (v150)
        {
          v151 = v150;
          operator delete(v150);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v139)
        {
          v140 = v139;
          operator delete(v139);
        }
        if (v129)
        {
          v130 = (void ***)v129;
          operator delete(v129);
        }
        goto LABEL_392;
      }
    }
    v84 = &v138;
    v85 = 4;
    goto LABEL_255;
  }
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D10))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (k = 1;
          v104 != v106 || v105 != v107;
          k = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (k)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v138);
      v39 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524D10;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A60;
      v40 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v39, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v41 = 0;
      else
        v41 = v40;
      if (v41 == 1)
      {
        v42 = v136;
        if (v136 >= v137)
        {
          v43 = sub_20C45C274(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C033524(v136, (uint64_t)&v138);
          v43 = v42 + 152;
        }
        v136 = v43;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524D10;
      v132 = 0;
      v129 = &unk_24C539A60;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v58 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v59 = __ldxr(v58);
        while (__stlxr(v59 - 2, v58));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v60 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v61 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v62 = __ldxr(v61);
        while (__stlxr(v62 - 2, v61));
      }
      if (v60)
      {
        v63 = v136;
        if (v136 >= v137)
        {
          v64 = sub_20C45C274(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C033524(v136, (uint64_t)&v138);
          v64 = v63 + 152;
        }
        v136 = v64;
      }
      if ((v114 & 7) != 0)
      {
        v87 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v88 = __ldxr(v87);
        while (__stlxr(v88 - 2, v87));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v89 = v135;
    v90 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 == v136)
      goto LABEL_392;
    v129 = 0;
    v130 = 0;
    v131 = 0;
    while (1)
    {
      v90 -= 19;
      v141 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations(v90, (int **)&v129, (uint64_t)&v138);
      v91 = v141;
      if (v141 == &v138)
        break;
      if (v141)
      {
        v92 = 5;
LABEL_310:
        ((void (*)(void))(*v91)[v92])();
      }
      if (v90 == (_QWORD *)v89)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v138);
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SetExplicitItems(v93, (uint64_t)&v129);
        sub_20C033524((uint64_t)&v109, (uint64_t)&v138);
        sub_20C45C808(*(_QWORD *)v102, (uint64_t)&v109);
        *(_BYTE *)(v102 + 40) = 1;
        if (__p)
        {
          v123 = __p;
          operator delete(__p);
        }
        if (v120)
        {
          v121 = v120;
          operator delete(v120);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v110)
        {
          v111 = (std::type_info *)v110;
          operator delete(v110);
        }
        if (v150)
        {
          v151 = v150;
          operator delete(v150);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v139)
        {
          v140 = v139;
          operator delete(v139);
        }
        if (v129)
        {
          v130 = (void ***)v129;
          operator delete(v129);
        }
        goto LABEL_392;
      }
    }
    v91 = &v138;
    v92 = 4;
    goto LABEL_310;
  }
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D20))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (m = 1;
          v104 != v106 || v105 != v107;
          m = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (m)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v138);
      v53 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524D20;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A98;
      v54 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v53, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v55 = 0;
      else
        v55 = v54;
      if (v55 == 1)
      {
        v56 = v136;
        if (v136 >= v137)
        {
          v57 = sub_20C45C8DC(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C0340F4(v136, (uint64_t)&v138);
          v57 = v56 + 152;
        }
        v136 = v57;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524D20;
      v132 = 0;
      v129 = &unk_24C539A98;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v66 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v67 = __ldxr(v66);
        while (__stlxr(v67 - 2, v66));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v68 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v69 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v70 = __ldxr(v69);
        while (__stlxr(v70 - 2, v69));
      }
      if (v68)
      {
        v71 = v136;
        if (v136 >= v137)
        {
          v72 = sub_20C45C8DC(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C0340F4(v136, (uint64_t)&v138);
          v72 = v71 + 152;
        }
        v136 = v72;
      }
      if ((v114 & 7) != 0)
      {
        v94 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v95 = __ldxr(v94);
        while (__stlxr(v95 - 2, v94));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v96 = v135;
    v97 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 != v136)
    {
      v129 = 0;
      v130 = 0;
      v131 = 0;
      while (1)
      {
        v97 -= 19;
        v141 = 0;
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations(v97, (uint64_t **)&v129, (uint64_t)&v138);
        v98 = v141;
        if (v141 == &v138)
          break;
        if (v141)
        {
          v99 = 5;
LABEL_364:
          ((void (*)(void))(*v98)[v99])();
        }
        if (v97 == (_QWORD *)v96)
        {
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v138);
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SetExplicitItems(v100, (uint64_t)&v129);
          sub_20C0340F4((uint64_t)&v109, (uint64_t)&v138);
          sub_20C45CE70(*(_QWORD *)v102, (uint64_t)&v109);
          *(_BYTE *)(v102 + 40) = 1;
          if (__p)
          {
            v123 = __p;
            operator delete(__p);
          }
          if (v120)
          {
            v121 = v120;
            operator delete(v120);
          }
          if (v118)
          {
            v119 = v118;
            operator delete(v118);
          }
          if (v116)
          {
            v117 = v116;
            operator delete(v116);
          }
          if (v114)
          {
            v115 = v114;
            operator delete(v114);
          }
          if (v110)
          {
            v111 = (std::type_info *)v110;
            operator delete(v110);
          }
          if (v150)
          {
            v151 = v150;
            operator delete(v150);
          }
          if (v148)
          {
            v149 = v148;
            operator delete(v148);
          }
          if (v146)
          {
            v147 = v146;
            operator delete(v146);
          }
          if (v144)
          {
            v145 = v144;
            operator delete(v144);
          }
          if (v142)
          {
            v143 = v142;
            operator delete(v142);
          }
          if (v139)
          {
            v140 = v139;
            operator delete(v139);
          }
          if (v129)
          {
            v130 = (void ***)v129;
            operator delete(v129);
          }
          goto LABEL_392;
        }
      }
      v98 = &v138;
      v99 = 4;
      goto LABEL_364;
    }
LABEL_392:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v134);
    sub_20BFD265C(&v133);
    v138 = (void **)&v135;
    sub_20C45BB28(&v138);
  }
  else
  {
    if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D30))
      return sub_20C518D6C((uint64_t)v10, v12, a2, a4, (uint64_t)v103, a5);
    if (!sub_20BDE150C(v14, (uint64_t)&stru_24C524D40))
      return 1;
    return sub_20C5193E0((uint64_t)v10, v12, a2, a4, (uint64_t)v103, a5);
  }
  return v22;
}

void sub_20C51863C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  uint64_t v51;

  sub_20C45C87C((uint64_t)&a19);
  sub_20C031968((_QWORD *)(v51 - 248));
  sub_20BFD1A18(&a46);
  *(_QWORD *)(v51 - 248) = &a48;
  sub_20C45BB28((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C518A84(uint64_t a1, pxrInternal__aapl__pxrReserved__::PcpNodeRef *a2, uint64_t *a3, pxrInternal__aapl__pxrReserved__::SdfPath *a4, const pxrInternal__aapl__pxrReserved__::TfToken *a5, uint64_t *a6)
{
  uint64_t v9;
  double v10;
  uint64_t (***v11)(_QWORD, uint64_t);
  uint64_t v12;
  char *v13;
  uint64_t (**v14)(_QWORD, uint64_t);
  double *v15;
  __int128 v16;
  uint64_t (*v17)(_QWORD, uint64_t);
  uint64_t (*v18)(_QWORD, uint64_t);
  double *v19;
  uint64_t v20;
  char *v21;
  double *v22;
  double *v23;
  uint64_t (**v24)(_QWORD, uint64_t);
  double *v25;
  __int128 v26;
  uint64_t (*v27)(_QWORD, uint64_t);
  uint64_t (*v28)(_QWORD, uint64_t);
  uint64_t (*v29)(_QWORD, uint64_t);
  double v31[2];
  __int128 v32;
  uint64_t (*v33)(_QWORD, uint64_t);
  uint64_t (*v34)(_QWORD, uint64_t);
  double *v35;

  v9 = sub_20C45A368((uint64_t (****)(_QWORD, uint64_t))a1, a3, a4, a5, a6);
  if ((_DWORD)v9)
  {
    *(_BYTE *)(a1 + 40) = 1;
    v31[0] = sub_20C44B9D4(a2, a3);
    v31[1] = v10;
    v11 = *(uint64_t (****)(_QWORD, uint64_t))a1;
    if (!pxrInternal__aapl__pxrReserved__::SdfLayerOffset::IsIdentity((pxrInternal__aapl__pxrReserved__::SdfLayerOffset *)v31))
    {
      v14 = v11[1];
      v15 = (double *)v14[4];
      v14[4] = 0;
      v35 = v15;
      v16 = *(_OWORD *)v14;
      *v14 = 0;
      v14[1] = 0;
      v17 = v14[2];
      v18 = v14[3];
      v14[2] = 0;
      v14[3] = 0;
      v32 = v16;
      v33 = v17;
      v34 = v18;
      sub_20C00783C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v32, v12, v13);
      v19 = v35;
      sub_20C00783C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v32, v20, v21);
      v22 = v35;
      v23 = &v35[v32];
      if (v19 != v23)
      {
        do
        {
          *v19 = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::operator*(v31, v19);
          ++v19;
        }
        while (v19 != v23);
        v22 = v35;
      }
      v24 = v11[1];
      v25 = (double *)v24[4];
      v24[4] = (uint64_t (*)(_QWORD, uint64_t))v22;
      v35 = v25;
      v26 = *(_OWORD *)v24;
      v27 = v33;
      *(_OWORD *)v24 = v32;
      v28 = v24[2];
      v29 = v24[3];
      v24[2] = v27;
      v24[3] = v34;
      v32 = v26;
      v33 = v28;
      v34 = v29;
      sub_20BF5618C((uint64_t)&v32);
    }
  }
  return v9;
}

void sub_20C518BB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20BF5618C((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C518BCC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, int a5, uint64_t a6, uint64_t a7)
{
  char v14;
  BOOL i;
  uint64_t v16;
  uint64_t v17;
  char v19;
  unint64_t PrimDefinition;
  _BOOL8 v21;
  _QWORD v23[2];
  int v24;
  int v25;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v24);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v25);
  v14 = 0;
  for (i = 1;
        ;
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a6))
  {
    v16 = *(_QWORD *)(a6 + 16);
    v17 = *(_QWORD *)(a6 + 24);
    if (v16 == *(_QWORD *)(a6 + 32) && v17 == *(_QWORD *)(a6 + 40))
      break;
    if (i)
    {
      sub_20C453680(a6, a2, (int *)v23);
      sub_20BFD3EBC(&v24, (int *)v23);
      sub_20BFD3F10(&v25, (int *)v23 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v23 + 1);
      sub_20BFD265C(v23);
      v16 = *(_QWORD *)(a6 + 16);
      v17 = *(_QWORD *)(a6 + 24);
    }
    v23[0] = v16;
    v23[1] = v17;
    v19 = sub_20C518A84(a7, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v23, *(uint64_t **)(a6 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v24, a3, a4);
    if (*(_BYTE *)(a7 + 40))
      goto LABEL_15;
    v14 |= v19;
  }
  if (a5)
  {
    PrimDefinition = atomic_load((unint64_t *)(*(_QWORD *)(a1 + 24) + 56));
    if (!PrimDefinition)
      PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition(*(pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo **)(a1 + 24));
    *(_BYTE *)(a7 + 40) = sub_20C45A220(PrimDefinition, a2, a3, a4, *(uint64_t (****)(_QWORD, uint64_t))a7);
  }
  if ((v14 & 1) != 0)
  {
LABEL_15:
    v21 = 1;
    goto LABEL_17;
  }
  v21 = *(_BYTE *)(a7 + 40) != 0;
LABEL_17:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v25);
  sub_20BFD265C(&v24);
  return v21;
}

void sub_20C518D44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C518D6C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, char a4, uint64_t a5, uint64_t a6)
{
  BOOL i;
  _QWORD *v9;
  int HasField;
  int v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void ***v26;
  uint64_t v27;
  uint64_t *v28;
  _BYTE v35[8];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v43;
  int v44;
  int v45;
  uint64_t v46;
  void **v47;
  void ***v48;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v49;
  int v50;
  int v51;
  uint64_t v52;
  void **v53[3];
  __int16 v54;
  int v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  void **v60;
  _BYTE v61[16];
  void ***v62;
  _BYTE v63[24];
  _BYTE v64[24];
  _BYTE v65[24];
  _BYTE v66[24];
  _QWORD v67[5];

  v67[3] = *MEMORY[0x24BDAC8D0];
  v57 = 0;
  v58 = 0;
  v59 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v55);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v56);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, (int *)&v60);
      sub_20BFD3EBC(&v55, (int *)&v60);
      sub_20BFD3F10(&v56, (int *)&v60 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v60 + 1);
      sub_20BFD265C(&v60);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v60);
    v9 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a5 + 48));
    LOWORD(v50) = 0;
    v48 = &v60;
    v49 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D30;
    v47 = (void **)&unk_24C52BEB0;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v9, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v55, a3, (uint64_t (***)(_QWORD, uint64_t))&v47);
    if ((_BYTE)v50)
      v11 = 0;
    else
      v11 = HasField;
    if (v11 == 1)
    {
      v12 = v58;
      if (v58 >= v59)
      {
        v13 = sub_20C45CF44(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C02F650(v58, (uint64_t)&v60);
        v13 = v12 + 152;
      }
      v58 = v13;
    }
    v47 = (void **)v67;
    sub_20BDE5038(&v47);
    v47 = (void **)v66;
    sub_20BDE5038(&v47);
    v47 = (void **)v65;
    sub_20BDE5038(&v47);
    v47 = (void **)v64;
    sub_20BDE5038(&v47);
    v47 = (void **)v63;
    sub_20BDE5038(&v47);
    v47 = (void **)v61;
    sub_20BDE5038(&v47);
  }
  if ((a4 & 1) != 0)
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v60);
    v53[2] = (void **)&stru_24C524D30;
    v54 = 0;
    v53[0] = (void **)&unk_24C52BEB0;
    v53[1] = (void **)&v60;
    LODWORD(v42) = 0;
    v43 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v44);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v45);
    v46 = 0;
    sub_20C4535E0((uint64_t)&v47, (uint64_t)v53, (uint64_t)&v42);
    if ((v46 & 7) != 0)
    {
      v14 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v45);
    sub_20BFD265C(&v44);
    if (v43)
      sub_20C35C614(v43);
    v42 = 0;
    v16 = sub_20C45B318(a1, a2, a3, &v42, (uint64_t)&v47);
    if ((v42 & 7) != 0)
    {
      v17 = (unsigned int *)(v42 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
    if (v16)
    {
      v19 = v58;
      if (v58 >= v59)
      {
        v20 = sub_20C45CF44(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C02F650(v58, (uint64_t)&v60);
        v20 = v19 + 152;
      }
      v58 = v20;
    }
    if ((v52 & 7) != 0)
    {
      v21 = (unsigned int *)(v52 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v51);
    sub_20BFD265C(&v50);
    if (v49)
      sub_20C35C614(v49);
    v47 = (void **)v67;
    sub_20BDE5038(&v47);
    v47 = (void **)v66;
    sub_20BDE5038(&v47);
    v47 = (void **)v65;
    sub_20BDE5038(&v47);
    v47 = (void **)v64;
    sub_20BDE5038(&v47);
    v47 = (void **)v63;
    sub_20BDE5038(&v47);
    v47 = (void **)v61;
    sub_20BDE5038(&v47);
  }
  v23 = v57;
  v24 = v58;
  if (v57 != v58)
  {
    v47 = 0;
    v48 = 0;
    v25 = v58;
    v49 = 0;
    while (1)
    {
      v25 -= 152;
      v62 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations(v25, (uint64_t *)&v47, (uint64_t)&v60);
      v26 = v62;
      if (v62 == &v60)
        break;
      if (v62)
      {
        v27 = 5;
LABEL_43:
        ((void (*)(void))(*v26)[v27])();
      }
      if (v25 == v23)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v60);
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetExplicitItems(v28, (uint64_t)&v47);
        sub_20C02F650((uint64_t)v35, (uint64_t)&v60);
        sub_20C45D304(*(_QWORD *)a6, (uint64_t)v35);
        *(_BYTE *)(a6 + 40) = 1;
        v53[0] = (void **)&v41;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v40;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v39;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v38;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v37;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v36;
        sub_20BDE5038(v53);
        v53[0] = (void **)v67;
        sub_20BDE5038(v53);
        v53[0] = (void **)v66;
        sub_20BDE5038(v53);
        v53[0] = (void **)v65;
        sub_20BDE5038(v53);
        v53[0] = (void **)v64;
        sub_20BDE5038(v53);
        v53[0] = (void **)v63;
        sub_20BDE5038(v53);
        v53[0] = (void **)v61;
        sub_20BDE5038(v53);
        v60 = (void **)&v47;
        sub_20BDE5038(&v60);
        goto LABEL_46;
      }
    }
    v26 = &v60;
    v27 = 4;
    goto LABEL_43;
  }
LABEL_46:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v56);
  sub_20BFD265C(&v55);
  v60 = (void **)&v57;
  sub_20C45D378(&v60);
  return v23 != v24;
}

void sub_20C5192C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45CEE4((uint64_t)&a38);
  sub_20C020EAC((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C45D378((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_20C5193E0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, char a4, uint64_t a5, uint64_t a6)
{
  BOOL i;
  _QWORD *v9;
  int HasField;
  int v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  void ***v26;
  uint64_t v27;
  unsigned __int8 *v28;
  _BYTE v35[8];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t *v47;
  void ***v48;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v49;
  int v50;
  int v51;
  uint64_t v52;
  void **v53[3];
  __int16 v54;
  int v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  void **v60;
  _BYTE v61[16];
  void ***v62;
  _BYTE v63[24];
  _BYTE v64[24];
  _BYTE v65[24];
  _BYTE v66[24];
  _QWORD v67[5];

  v67[3] = *MEMORY[0x24BDAC8D0];
  v57 = 0;
  v58 = 0;
  v59 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v55);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v56);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, (int *)&v60);
      sub_20BFD3EBC(&v55, (int *)&v60);
      sub_20BFD3F10(&v56, (int *)&v60 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v60 + 1);
      sub_20BFD265C(&v60);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v60);
    v9 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a5 + 48));
    LOWORD(v50) = 0;
    v48 = &v60;
    v49 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D40;
    v47 = (uint64_t *)&unk_24C539538;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v9, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v55, a3, (uint64_t (***)(_QWORD, uint64_t))&v47);
    if ((_BYTE)v50)
      v11 = 0;
    else
      v11 = HasField;
    if (v11 == 1)
    {
      v12 = v58;
      if (v58 >= v59)
      {
        v13 = sub_20C45D45C(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C0366AC(v58, (uint64_t)&v60);
        v13 = v12 + 152;
      }
      v58 = v13;
    }
    v47 = v67;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v66;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v65;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v47);
  }
  if ((a4 & 1) != 0)
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v60);
    v53[2] = (void **)&stru_24C524D40;
    v54 = 0;
    v53[0] = (void **)&unk_24C539538;
    v53[1] = (void **)&v60;
    LODWORD(v42) = 0;
    v43 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v44);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v45);
    v46 = 0;
    sub_20C4535E0((uint64_t)&v47, (uint64_t)v53, (uint64_t)&v42);
    if ((v46 & 7) != 0)
    {
      v14 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v45);
    sub_20BFD265C(&v44);
    if (v43)
      sub_20C35C614(v43);
    v42 = 0;
    v16 = sub_20C45B318(a1, a2, a3, &v42, (uint64_t)&v47);
    if ((v42 & 7) != 0)
    {
      v17 = (unsigned int *)(v42 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
    if (v16)
    {
      v19 = v58;
      if (v58 >= v59)
      {
        v20 = sub_20C45D45C(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C0366AC(v58, (uint64_t)&v60);
        v20 = v19 + 152;
      }
      v58 = v20;
    }
    if ((v52 & 7) != 0)
    {
      v21 = (unsigned int *)(v52 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v51);
    sub_20BFD265C(&v50);
    if (v49)
      sub_20C35C614(v49);
    v47 = v67;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v66;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v65;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v47);
  }
  v23 = v57;
  v24 = v58;
  if (v57 != v58)
  {
    v47 = 0;
    v48 = 0;
    v25 = (_QWORD *)v58;
    v49 = 0;
    while (1)
    {
      v25 -= 19;
      v62 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations(v25, &v47, (uint64_t)&v60);
      v26 = v62;
      if (v62 == &v60)
        break;
      if (v62)
      {
        v27 = 5;
LABEL_43:
        ((void (*)(void))(*v26)[v27])();
      }
      if (v25 == (_QWORD *)v23)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v60);
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SetExplicitItems(v28, &v47);
        sub_20C0366AC((uint64_t)v35, (uint64_t)&v60);
        sub_20C45D578(*(_QWORD *)a6, (uint64_t)v35);
        *(_BYTE *)(a6 + 40) = 1;
        v53[0] = (void **)&v41;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v40;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v39;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v38;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v37;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v36;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v67;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v66;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v65;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v64;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v63;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v61;
        sub_20BEEB2B8(v53);
        v60 = (void **)&v47;
        sub_20BEEB2B8(&v60);
        goto LABEL_46;
      }
    }
    v26 = &v60;
    v27 = 4;
    goto LABEL_43;
  }
LABEL_46:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v56);
  sub_20BFD265C(&v55);
  v60 = (void **)&v57;
  sub_20C451A98(&v60);
  return v23 != v24;
}

void sub_20C519938(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45D3FC((uint64_t)&a38);
  sub_20C03507C((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C451A98((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C519A54(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, int a4, uint64_t a5)
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v10;
  unsigned __int8 v11;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v12;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t v14;
  BOOL i;
  _QWORD *v17;
  int HasField;
  int v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  BOOL j;
  _QWORD *v25;
  int v26;
  int v27;
  unint64_t v28;
  uint64_t v29;
  unsigned int *v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int *v33;
  unsigned int v34;
  unint64_t v35;
  uint64_t v36;
  BOOL k;
  _QWORD *v39;
  int v40;
  int v41;
  unint64_t v42;
  uint64_t v43;
  unsigned int *v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int *v47;
  unsigned int v48;
  unint64_t v49;
  uint64_t v50;
  BOOL m;
  _QWORD *v53;
  int v54;
  int v55;
  unint64_t v56;
  uint64_t v57;
  unsigned int *v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int *v61;
  unsigned int v62;
  unint64_t v63;
  uint64_t v64;
  unsigned int *v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int *v69;
  unsigned int v70;
  unint64_t v71;
  uint64_t v72;
  unsigned int *v73;
  unsigned int v74;
  uint64_t v75;
  _QWORD *v76;
  void ***v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int *v80;
  unsigned int v81;
  uint64_t v82;
  _QWORD *v83;
  void ***v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int *v87;
  unsigned int v88;
  uint64_t v89;
  _QWORD *v90;
  void ***v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int *v94;
  unsigned int v95;
  uint64_t v96;
  _QWORD *v97;
  void ***v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v102;
  _BYTE v103[16];
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t (**v109)(_QWORD, uint64_t);
  void *v110;
  std::type_info *v111;
  int v112;
  int v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *v120;
  void *v121;
  void *__p;
  void *v123;
  uint64_t v124;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v125;
  int v126;
  int v127;
  uint64_t v128;
  void *v129;
  void ***v130;
  std::type_info *v131;
  __int16 v132;
  int v133;
  int v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  void **v138;
  void *v139;
  void *v140;
  void ***v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  void *v150;
  void *v151;
  uint64_t v152;

  v152 = *MEMORY[0x24BDAC8D0];
  v10 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  v11 = atomic_load((unsigned __int8 *)&qword_254989210);
  if ((v11 & 1) == 0 && __cxa_guard_acquire(&qword_254989210))
  {
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &unk_254989208, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989210);
  }
  if (*(int *)a1 < 2)
    v12 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_254989208;
  else
    v12 = sub_20C398E78((_DWORD *)a1);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v10);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103, PrimIndex, 1);
  if (!sub_20C51C214((uint64_t)v10, v12, a2, a3, a4, (uint64_t)v103, a5))
    return 0;
  v14 = *(_QWORD *)(*(_QWORD *)a5 + 16);
  v102 = a5;
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524CF0))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (i = 1;
          v104 != v106 || v105 != v107;
          i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (i)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v138);
      v17 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524CF0;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C5399F0;
      HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v17, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v19 = 0;
      else
        v19 = HasField;
      if (v19 == 1)
      {
        v20 = v136;
        if (v136 >= v137)
        {
          v21 = sub_20C45B3D8(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C031ADC(v136, (uint64_t)&v138);
          v21 = v20 + 152;
        }
        v136 = v21;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524CF0;
      v132 = 0;
      v129 = &unk_24C5399F0;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v30 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v31 = __ldxr(v30);
        while (__stlxr(v31 - 2, v30));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v32 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v33 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v34 = __ldxr(v33);
        while (__stlxr(v34 - 2, v33));
      }
      if (v32)
      {
        v35 = v136;
        if (v136 >= v137)
        {
          v36 = sub_20C45B3D8(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C031ADC(v136, (uint64_t)&v138);
          v36 = v35 + 152;
        }
        v136 = v36;
      }
      if ((v114 & 7) != 0)
      {
        v73 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v74 = __ldxr(v73);
        while (__stlxr(v74 - 2, v73));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v75 = v135;
    v76 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 == v136)
      goto LABEL_392;
    v129 = 0;
    v130 = 0;
    v131 = 0;
    while (1)
    {
      v76 -= 19;
      v141 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations(v76, (int **)&v129, (uint64_t)&v138);
      v77 = v141;
      if (v141 == &v138)
        break;
      if (v141)
      {
        v78 = 5;
LABEL_198:
        ((void (*)(void))(*v77)[v78])();
      }
      if (v76 == (_QWORD *)v75)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v138);
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SetExplicitItems(v79, (uint64_t)&v129);
        sub_20C031ADC((uint64_t)&v109, (uint64_t)&v138);
        sub_20C45BAB4(*(_QWORD *)v102, (uint64_t)&v109);
        *(_BYTE *)(v102 + 40) = 1;
        if (__p)
        {
          v123 = __p;
          operator delete(__p);
        }
        if (v120)
        {
          v121 = v120;
          operator delete(v120);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v110)
        {
          v111 = (std::type_info *)v110;
          operator delete(v110);
        }
        if (v150)
        {
          v151 = v150;
          operator delete(v150);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v139)
        {
          v140 = v139;
          operator delete(v139);
        }
        if (v129)
        {
          v130 = (void ***)v129;
          operator delete(v129);
        }
        goto LABEL_392;
      }
    }
    v77 = &v138;
    v78 = 4;
    goto LABEL_198;
  }
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D00))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (j = 1;
          v104 != v106 || v105 != v107;
          j = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (j)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v138);
      v25 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524D00;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A28;
      v26 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v25, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v27 = 0;
      else
        v27 = v26;
      if (v27 == 1)
      {
        v28 = v136;
        if (v136 >= v137)
        {
          v29 = sub_20C45BC0C(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C03298C(v136, (uint64_t)&v138);
          v29 = v28 + 152;
        }
        v136 = v29;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524D00;
      v132 = 0;
      v129 = &unk_24C539A28;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v44 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v45 = __ldxr(v44);
        while (__stlxr(v45 - 2, v44));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v46 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v47 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v48 = __ldxr(v47);
        while (__stlxr(v48 - 2, v47));
      }
      if (v46)
      {
        v49 = v136;
        if (v136 >= v137)
        {
          v50 = sub_20C45BC0C(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C03298C(v136, (uint64_t)&v138);
          v50 = v49 + 152;
        }
        v136 = v50;
      }
      if ((v114 & 7) != 0)
      {
        v80 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v81 = __ldxr(v80);
        while (__stlxr(v81 - 2, v80));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v82 = v135;
    v83 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 == v136)
      goto LABEL_392;
    v129 = 0;
    v130 = 0;
    v131 = 0;
    while (1)
    {
      v83 -= 19;
      v141 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations(v83, (uint64_t **)&v129, (uint64_t)&v138);
      v84 = v141;
      if (v141 == &v138)
        break;
      if (v141)
      {
        v85 = 5;
LABEL_255:
        ((void (*)(void))(*v84)[v85])();
      }
      if (v83 == (_QWORD *)v82)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v138);
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetExplicitItems(v86, (uint64_t)&v129);
        sub_20C03298C((uint64_t)&v109, (uint64_t)&v138);
        sub_20C45C1A0(*(_QWORD *)v102, (uint64_t)&v109);
        *(_BYTE *)(v102 + 40) = 1;
        if (__p)
        {
          v123 = __p;
          operator delete(__p);
        }
        if (v120)
        {
          v121 = v120;
          operator delete(v120);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v110)
        {
          v111 = (std::type_info *)v110;
          operator delete(v110);
        }
        if (v150)
        {
          v151 = v150;
          operator delete(v150);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v139)
        {
          v140 = v139;
          operator delete(v139);
        }
        if (v129)
        {
          v130 = (void ***)v129;
          operator delete(v129);
        }
        goto LABEL_392;
      }
    }
    v84 = &v138;
    v85 = 4;
    goto LABEL_255;
  }
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D10))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (k = 1;
          v104 != v106 || v105 != v107;
          k = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (k)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v138);
      v39 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524D10;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A60;
      v40 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v39, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v41 = 0;
      else
        v41 = v40;
      if (v41 == 1)
      {
        v42 = v136;
        if (v136 >= v137)
        {
          v43 = sub_20C45C274(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C033524(v136, (uint64_t)&v138);
          v43 = v42 + 152;
        }
        v136 = v43;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524D10;
      v132 = 0;
      v129 = &unk_24C539A60;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v58 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v59 = __ldxr(v58);
        while (__stlxr(v59 - 2, v58));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v60 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v61 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v62 = __ldxr(v61);
        while (__stlxr(v62 - 2, v61));
      }
      if (v60)
      {
        v63 = v136;
        if (v136 >= v137)
        {
          v64 = sub_20C45C274(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C033524(v136, (uint64_t)&v138);
          v64 = v63 + 152;
        }
        v136 = v64;
      }
      if ((v114 & 7) != 0)
      {
        v87 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v88 = __ldxr(v87);
        while (__stlxr(v88 - 2, v87));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v89 = v135;
    v90 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 == v136)
      goto LABEL_392;
    v129 = 0;
    v130 = 0;
    v131 = 0;
    while (1)
    {
      v90 -= 19;
      v141 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations(v90, (int **)&v129, (uint64_t)&v138);
      v91 = v141;
      if (v141 == &v138)
        break;
      if (v141)
      {
        v92 = 5;
LABEL_310:
        ((void (*)(void))(*v91)[v92])();
      }
      if (v90 == (_QWORD *)v89)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v138);
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SetExplicitItems(v93, (uint64_t)&v129);
        sub_20C033524((uint64_t)&v109, (uint64_t)&v138);
        sub_20C45C808(*(_QWORD *)v102, (uint64_t)&v109);
        *(_BYTE *)(v102 + 40) = 1;
        if (__p)
        {
          v123 = __p;
          operator delete(__p);
        }
        if (v120)
        {
          v121 = v120;
          operator delete(v120);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v110)
        {
          v111 = (std::type_info *)v110;
          operator delete(v110);
        }
        if (v150)
        {
          v151 = v150;
          operator delete(v150);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v139)
        {
          v140 = v139;
          operator delete(v139);
        }
        if (v129)
        {
          v130 = (void ***)v129;
          operator delete(v129);
        }
        goto LABEL_392;
      }
    }
    v91 = &v138;
    v92 = 4;
    goto LABEL_310;
  }
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D20))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (m = 1;
          v104 != v106 || v105 != v107;
          m = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (m)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v138);
      v53 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524D20;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A98;
      v54 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v53, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v55 = 0;
      else
        v55 = v54;
      if (v55 == 1)
      {
        v56 = v136;
        if (v136 >= v137)
        {
          v57 = sub_20C45C8DC(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C0340F4(v136, (uint64_t)&v138);
          v57 = v56 + 152;
        }
        v136 = v57;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524D20;
      v132 = 0;
      v129 = &unk_24C539A98;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v66 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v67 = __ldxr(v66);
        while (__stlxr(v67 - 2, v66));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v68 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v69 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v70 = __ldxr(v69);
        while (__stlxr(v70 - 2, v69));
      }
      if (v68)
      {
        v71 = v136;
        if (v136 >= v137)
        {
          v72 = sub_20C45C8DC(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C0340F4(v136, (uint64_t)&v138);
          v72 = v71 + 152;
        }
        v136 = v72;
      }
      if ((v114 & 7) != 0)
      {
        v94 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v95 = __ldxr(v94);
        while (__stlxr(v95 - 2, v94));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v96 = v135;
    v97 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 != v136)
    {
      v129 = 0;
      v130 = 0;
      v131 = 0;
      while (1)
      {
        v97 -= 19;
        v141 = 0;
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations(v97, (uint64_t **)&v129, (uint64_t)&v138);
        v98 = v141;
        if (v141 == &v138)
          break;
        if (v141)
        {
          v99 = 5;
LABEL_364:
          ((void (*)(void))(*v98)[v99])();
        }
        if (v97 == (_QWORD *)v96)
        {
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v138);
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SetExplicitItems(v100, (uint64_t)&v129);
          sub_20C0340F4((uint64_t)&v109, (uint64_t)&v138);
          sub_20C45CE70(*(_QWORD *)v102, (uint64_t)&v109);
          *(_BYTE *)(v102 + 40) = 1;
          if (__p)
          {
            v123 = __p;
            operator delete(__p);
          }
          if (v120)
          {
            v121 = v120;
            operator delete(v120);
          }
          if (v118)
          {
            v119 = v118;
            operator delete(v118);
          }
          if (v116)
          {
            v117 = v116;
            operator delete(v116);
          }
          if (v114)
          {
            v115 = v114;
            operator delete(v114);
          }
          if (v110)
          {
            v111 = (std::type_info *)v110;
            operator delete(v110);
          }
          if (v150)
          {
            v151 = v150;
            operator delete(v150);
          }
          if (v148)
          {
            v149 = v148;
            operator delete(v148);
          }
          if (v146)
          {
            v147 = v146;
            operator delete(v146);
          }
          if (v144)
          {
            v145 = v144;
            operator delete(v144);
          }
          if (v142)
          {
            v143 = v142;
            operator delete(v142);
          }
          if (v139)
          {
            v140 = v139;
            operator delete(v139);
          }
          if (v129)
          {
            v130 = (void ***)v129;
            operator delete(v129);
          }
          goto LABEL_392;
        }
      }
      v98 = &v138;
      v99 = 4;
      goto LABEL_364;
    }
LABEL_392:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v134);
    sub_20BFD265C(&v133);
    v138 = (void **)&v135;
    sub_20C45BB28(&v138);
  }
  else
  {
    if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D30))
      return sub_20C51C3B0((uint64_t)v10, v12, a2, a4, (uint64_t)v103, a5);
    if (!sub_20BDE150C(v14, (uint64_t)&stru_24C524D40))
      return 1;
    return sub_20C51CA24((uint64_t)v10, v12, a2, a4, (uint64_t)v103, a5);
  }
  return v22;
}

void sub_20C51AF2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  uint64_t v51;

  sub_20C45C87C((uint64_t)&a19);
  sub_20C031968((_QWORD *)(v51 - 248));
  sub_20BFD1A18(&a46);
  *(_QWORD *)(v51 - 248) = &a48;
  sub_20C45BB28((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

void sub_20C51B374(_BYTE *a1, uint64_t a2, _QWORD *a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, _QWORD *a5)
{
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __int128 *v15;
  __int128 v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void **v35;
  __int128 v36;
  __int128 *v37;
  uint64_t v38;
  unint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  void *v49[2];
  _OWORD v50[2];
  std::string v51[2];
  void *__p[2];
  char *v53;
  __int128 v54;
  uint64_t v55;
  std::string v56;
  std::string v57;
  void **v58[7];

  memset(v51, 0, sizeof(v51));
  *(_OWORD *)v49 = 0u;
  memset(v50, 0, sizeof(v50));
  v48 = 0;
  v46 = 0u;
  v47 = 0u;
  v10 = *(_QWORD *)a1;
  v11 = strcmp((const char *)(0x800000020CAC1850 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 16) + 8) & 0x7FFFFFFFFFFFFFFFLL));
  v12 = *(_QWORD *)(v10 + 8);
  if (v11)
  {
    sub_20C281C04((uint64_t)&v46, (__int128 *)v12);
  }
  else
  {
    if (v49 != (void **)v12)
    {
      sub_20BE8B37C((char *)v49, *(char **)v12, *(_QWORD *)(v12 + 8), (uint64_t)(*(_QWORD *)(v12 + 8) - *(_QWORD *)v12) >> 2);
      sub_20C147074((uint64_t)v50 + 8, *(_QWORD *)(v12 + 24), *(_QWORD *)(v12 + 32), (uint64_t)(*(_QWORD *)(v12 + 32) - *(_QWORD *)(v12 + 24)) >> 5);
      sub_20C14723C((uint64_t)v51, *(_QWORD *)(v12 + 48), *(_QWORD *)(v12 + 56), (uint64_t)(*(_QWORD *)(v12 + 56) - *(_QWORD *)(v12 + 48)) >> 6);
    }
    std::string::operator=(&v51[1], (const std::string *)(v12 + 72));
  }
  if (sub_20C45A220(a2, a3, a4, a5, *(uint64_t (****)(_QWORD, uint64_t))a1))
  {
    a1[40] = 1;
    if (v11)
    {
      v15 = *(__int128 **)(*(_QWORD *)a1 + 8);
      v16 = v15[1];
      v43 = *v15;
      v44 = v16;
      v17 = *((_QWORD *)v15 + 4);
      v45 = v17;
      if (v17)
      {
        v18 = (unint64_t *)(v17 - 16);
        if (*((_QWORD *)&v44 + 1))
          v18 = (unint64_t *)*((_QWORD *)&v44 + 1);
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
      }
      if ((_QWORD)v43 == (_QWORD)v46)
      {
        sub_20C00EEBC((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v46, v13, v14);
        v20 = v48;
        sub_20C00EEBC((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v46, v21, v22);
        v23 = v48;
        v24 = v46;
        sub_20C00EEBC((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v43, v25, v26);
        v27 = v45;
        sub_20C00EEBC((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v46, v28, v29);
        v30 = v23 + 96 * v24;
        if (v20 != v30)
        {
          v31 = 0;
          v32 = v48;
          do
          {
            sub_20C466210(v20 + v31, (const std::string *)(v27 + v31), (uint64_t)__p);
            v33 = *(void **)(v32 + v31);
            if (v33)
            {
              *(_QWORD *)(v32 + v31 + 8) = v33;
              operator delete(v33);
            }
            v34 = v32 + v31;
            *(_OWORD *)v34 = *(_OWORD *)__p;
            *(_QWORD *)(v34 + 16) = v53;
            __p[0] = 0;
            __p[1] = 0;
            v53 = 0;
            sub_20C00BC18((void **)(v32 + v31 + 24));
            *(_OWORD *)(v34 + 24) = v54;
            *(_QWORD *)(v34 + 40) = v55;
            v54 = 0uLL;
            v55 = 0;
            sub_20C00BCC0((void **)(v32 + v31 + 48));
            *(std::string *)(v34 + 48) = v56;
            memset(&v56, 0, sizeof(v56));
            v35 = (void **)(v32 + v31 + 72);
            if (*(char *)(v32 + v31 + 95) < 0)
              operator delete(*v35);
            v36 = *(_OWORD *)&v57.__r_.__value_.__l.__data_;
            *(_QWORD *)(v34 + 88) = *((_QWORD *)&v57.__r_.__value_.__l + 2);
            *(_OWORD *)v35 = v36;
            *((_BYTE *)&v57.__r_.__value_.__s + 23) = 0;
            v57.__r_.__value_.__s.__data_[0] = 0;
            v58[0] = (void **)&v56;
            sub_20C00E25C(v58);
            v58[0] = (void **)&v54;
            sub_20C00D5A8(v58);
            if (__p[0])
            {
              __p[1] = __p[0];
              operator delete(__p[0]);
            }
            v31 += 96;
          }
          while (v20 + v31 != v30);
        }
      }
      v37 = *(__int128 **)(*(_QWORD *)a1 + 8);
      v38 = *((_QWORD *)v37 + 4);
      v39 = v47;
      *((_QWORD *)v37 + 4) = v48;
      v48 = v38;
      v40 = *v37;
      *v37 = v46;
      v41 = *((_QWORD *)v37 + 2);
      v42 = *((_QWORD *)v37 + 3);
      v37[1] = __PAIR128__(*((unint64_t *)&v47 + 1), v39);
      v46 = v40;
      *(_QWORD *)&v47 = v41;
      *((_QWORD *)&v47 + 1) = v42;
      sub_20C00E910(&v43);
    }
    else
    {
      pxrInternal__aapl__pxrReserved__::SdfPathExpression::ComposeOver((uint64_t)v49, *(const std::string **)(*(_QWORD *)a1 + 8), (uint64_t)__p);
      if (v49[0])
      {
        v49[1] = v49[0];
        operator delete(v49[0]);
      }
      *(_OWORD *)v49 = *(_OWORD *)__p;
      *(_QWORD *)&v50[0] = v53;
      __p[1] = 0;
      v53 = 0;
      __p[0] = 0;
      sub_20C00BC18((void **)v50 + 1);
      *(_OWORD *)((char *)v50 + 8) = v54;
      *((_QWORD *)&v50[1] + 1) = v55;
      v55 = 0;
      v54 = 0uLL;
      sub_20C00BCC0((void **)&v51[0].__r_.__value_.__l.__data_);
      v51[0] = v56;
      memset(&v56, 0, sizeof(v56));
      if (SHIBYTE(v51[1].__r_.__value_.__r.__words[2]) < 0)
        operator delete(v51[1].__r_.__value_.__l.__data_);
      v51[1] = v57;
      *((_BYTE *)&v57.__r_.__value_.__s + 23) = 0;
      v57.__r_.__value_.__s.__data_[0] = 0;
      *(_QWORD *)&v43 = &v56;
      sub_20C00E25C((void ***)&v43);
      *(_QWORD *)&v43 = &v54;
      sub_20C00D5A8((void ***)&v43);
      if (__p[0])
      {
        __p[1] = __p[0];
        operator delete(__p[0]);
      }
      __p[0] = *(void **)(*(_QWORD *)a1 + 8);
      __p[1] = (char *)__p[0] + 24;
      v53 = (char *)__p[0] + 48;
      *(_QWORD *)&v54 = (char *)__p[0] + 72;
      *(_QWORD *)&v43 = v49;
      *((_QWORD *)&v43 + 1) = (char *)v50 + 8;
      *(_QWORD *)&v44 = v51;
      *((_QWORD *)&v44 + 1) = &v51[1];
      sub_20C1D2620((uint64_t **)__p, (uint64_t)&v43);
    }
  }
  sub_20C00E910(&v46);
  if (SHIBYTE(v51[1].__r_.__value_.__r.__words[2]) < 0)
    operator delete(v51[1].__r_.__value_.__l.__data_);
  __p[0] = v51;
  sub_20C00E25C((void ***)__p);
  __p[0] = (char *)v50 + 8;
  sub_20C00D5A8((void ***)__p);
  if (v49[0])
  {
    v49[1] = v49[0];
    operator delete(v49[0]);
  }
}

void sub_20C51B7F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  sub_20C00E910((uint64_t *)va);
  sub_20C00BBB0((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C51B838(uint64_t *a1, pxrInternal__aapl__pxrReserved__::PcpNodeRef *a2, uint64_t *a3, pxrInternal__aapl__pxrReserved__::SdfPath *a4, const pxrInternal__aapl__pxrReserved__::TfToken *a5, uint64_t *a6)
{
  uint64_t v11;
  int v12;
  const std::string *v13;
  uint64_t v14;
  uint64_t (***v15)(_QWORD, uint64_t);
  const char *v16;
  uint64_t (**v17)(_QWORD, uint64_t);
  uint64_t (*v18)(_QWORD, uint64_t);
  __int128 v19;
  uint64_t (*v20)(_QWORD, uint64_t);
  uint64_t (*v21)(_QWORD, uint64_t);
  pxrInternal__aapl__pxrReserved__::UsdPrim *v22;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v23;
  unsigned int *v24;
  unsigned int v25;
  pxrInternal__aapl__pxrReserved__::PcpMapExpression::_Node **v26;
  const char *v27;
  char *v28;
  void *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t (*v35)(_QWORD, uint64_t);
  uint64_t v36;
  uint64_t (***v37)(_QWORD, uint64_t);
  void *v38;
  void **v39;
  __int128 v40;
  uint64_t (**v41)(_QWORD, uint64_t);
  uint64_t (*v42)(_QWORD, uint64_t);
  __int128 v43;
  unint64_t v44;
  uint64_t (*v45)(_QWORD, uint64_t);
  uint64_t (*v46)(_QWORD, uint64_t);
  uint64_t v47;
  char *v48;
  pxrInternal__aapl__pxrReserved__::PcpMapExpression::_Node **MapToRoot;
  const char *v50;
  char *v51;
  void *v52;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v53;
  unsigned int *v54;
  unsigned int v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  unint64_t *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  void **v76;
  __int128 v77;
  __int128 *v78;
  uint64_t v79;
  unint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int v85;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  void *v90[2];
  _OWORD v91[2];
  std::string v92[2];
  void **v93[3];
  void *__p[2];
  _BYTE v95[24];
  uint64_t v96;
  std::string v97;
  std::string v98;
  void **v99;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v100;
  std::string *v101;
  unint64_t v102;
  void **v103[9];
  __int128 v104;
  _OWORD v105[2];
  std::string v106[4];

  memset(v92, 0, sizeof(v92));
  *(_OWORD *)v90 = 0u;
  memset(v91, 0, sizeof(v91));
  v89 = 0;
  v87 = 0u;
  v88 = 0u;
  v11 = *a1;
  v12 = strcmp((const char *)(0x800000020CAC1850 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(*(_QWORD *)(*a1 + 16) + 8) & 0x7FFFFFFFFFFFFFFFLL));
  v13 = *(const std::string **)(v11 + 8);
  if (v12)
  {
    sub_20C281C04((uint64_t)&v87, *(__int128 **)(v11 + 8));
  }
  else
  {
    if (v90 != (void **)v13)
    {
      sub_20BE8B37C((char *)v90, v13->__r_.__value_.__l.__data_, v13->__r_.__value_.__l.__size_, (uint64_t)(v13->__r_.__value_.__l.__size_ - v13->__r_.__value_.__r.__words[0]) >> 2);
      sub_20C147074((uint64_t)v91 + 8, (uint64_t)v13[1].__r_.__value_.__l.__data_, v13[1].__r_.__value_.__l.__size_, (uint64_t)(v13[1].__r_.__value_.__l.__size_ - v13[1].__r_.__value_.__r.__words[0]) >> 5);
      sub_20C14723C((uint64_t)v92, (uint64_t)v13[2].__r_.__value_.__l.__data_, v13[2].__r_.__value_.__l.__size_, (uint64_t)(v13[2].__r_.__value_.__l.__size_ - v13[2].__r_.__value_.__r.__words[0]) >> 6);
    }
    std::string::operator=(&v92[1], v13 + 3);
  }
  v14 = sub_20C45A368((uint64_t (****)(_QWORD, uint64_t))a1, a3, a4, a5, a6);
  if ((_DWORD)v14)
  {
    v15 = (uint64_t (***)(_QWORD, uint64_t))*a1;
    v16 = (const char *)(*(_QWORD *)(*(_QWORD *)(*a1 + 16) + 8) & 0x7FFFFFFFFFFFFFFFLL);
    if (!strcmp((const char *)(0x800000020CAC1850 & 0x7FFFFFFFFFFFFFFFLL), v16))
    {
      v85 = v14;
      memset(v106, 0, 48);
      v104 = 0u;
      memset(v105, 0, sizeof(v105));
      __p[0] = v15[1];
      __p[1] = (char *)__p[0] + 24;
      *(_QWORD *)v95 = (char *)__p[0] + 48;
      *(_QWORD *)&v95[8] = (char *)__p[0] + 72;
      v99 = (void **)&v104;
      v100 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)((char *)v105 + 8);
      v101 = v106;
      v102 = (unint64_t)&v106[1];
      sub_20C1D2620((uint64_t **)__p, (uint64_t)&v99);
      MapToRoot = (pxrInternal__aapl__pxrReserved__::PcpMapExpression::_Node **)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetMapToRoot(a2);
      v52 = pxrInternal__aapl__pxrReserved__::PcpMapExpression::Evaluate(MapToRoot, v50, v51);
      sub_20C35C4F8((uint64_t)&v99, a1 + 2, (_DWORD *)a1 + 6);
      pxrInternal__aapl__pxrReserved__::UsdPrim::_GetProtoToInstancePathMap((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v99, v53, (uint64_t *)v93);
      sub_20C42C3A8(&v104, (uint64_t)v52, (uint64_t)v93, (uint64_t)__p);
      if ((_QWORD)v104)
      {
        *((_QWORD *)&v104 + 1) = v104;
        operator delete((void *)v104);
      }
      v104 = *(_OWORD *)__p;
      *(_QWORD *)&v105[0] = *(_QWORD *)v95;
      __p[1] = 0;
      *(_QWORD *)v95 = 0;
      __p[0] = 0;
      sub_20C00BC18((void **)v105 + 1);
      *(_OWORD *)((char *)v105 + 8) = *(_OWORD *)&v95[8];
      *((_QWORD *)&v105[1] + 1) = v96;
      *(_QWORD *)&v95[16] = 0;
      v96 = 0;
      *(_QWORD *)&v95[8] = 0;
      sub_20C00BCC0((void **)&v106[0].__r_.__value_.__l.__data_);
      v106[0] = v97;
      memset(&v97, 0, sizeof(v97));
      if (SHIBYTE(v106[1].__r_.__value_.__r.__words[2]) < 0)
        operator delete(v106[1].__r_.__value_.__l.__data_);
      v106[1] = v98;
      *((_BYTE *)&v98.__r_.__value_.__s + 23) = 0;
      v98.__r_.__value_.__s.__data_[0] = 0;
      v103[0] = (void **)&v97;
      sub_20C00E25C(v103);
      v103[0] = (void **)&v95[8];
      sub_20C00D5A8(v103);
      if (__p[0])
      {
        __p[1] = __p[0];
        operator delete(__p[0]);
      }
      v103[0] = (void **)v93;
      sub_20C22D004(v103);
      if ((v102 & 7) != 0)
      {
        v54 = (unsigned int *)(v102 & 0xFFFFFFFFFFFFFFF8);
        do
          v55 = __ldxr(v54);
        while (__stlxr(v55 - 2, v54));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v101 + 1);
      sub_20BFD265C(&v101);
      if (v100)
        sub_20C35C614(v100);
      __p[0] = v15[1];
      __p[1] = (char *)__p[0] + 24;
      *(_QWORD *)v95 = (char *)__p[0] + 48;
      *(_QWORD *)&v95[8] = (char *)__p[0] + 72;
      v99 = (void **)&v104;
      v100 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)((char *)v105 + 8);
      v101 = v106;
      v102 = (unint64_t)&v106[1];
      sub_20C1D2620((uint64_t **)__p, (uint64_t)&v99);
      if (SHIBYTE(v106[1].__r_.__value_.__r.__words[2]) < 0)
        operator delete(v106[1].__r_.__value_.__l.__data_);
      __p[0] = v106;
      sub_20C00E25C((void ***)__p);
      __p[0] = (char *)v105 + 8;
      sub_20C00D5A8((void ***)__p);
      if ((_QWORD)v104)
      {
        *((_QWORD *)&v104 + 1) = v104;
        operator delete((void *)v104);
      }
    }
    else
    {
      if (strcmp((const char *)(0x800000020CAC1888 & 0x7FFFFFFFFFFFFFFFLL), v16))
        goto LABEL_63;
      *(_QWORD *)&v95[8] = 0;
      v17 = v15[1];
      v18 = v17[4];
      v17[4] = 0;
      *(_QWORD *)&v95[16] = v18;
      v19 = *(_OWORD *)v17;
      v20 = v17[2];
      v21 = v17[3];
      v17[1] = 0;
      v17[2] = 0;
      *v17 = 0;
      v17[3] = *(uint64_t (**)(_QWORD, uint64_t))&v95[8];
      *(_OWORD *)__p = v19;
      *(_QWORD *)v95 = v20;
      *(_QWORD *)&v95[8] = v21;
      v22 = (pxrInternal__aapl__pxrReserved__::UsdPrim *)sub_20C35C4F8((uint64_t)&v104, a1 + 2, (_DWORD *)a1 + 6);
      pxrInternal__aapl__pxrReserved__::UsdPrim::_GetProtoToInstancePathMap(v22, v23, (uint64_t *)&v99);
      if ((BYTE8(v105[0]) & 7) != 0)
      {
        v24 = (unsigned int *)(*((_QWORD *)&v105[0] + 1) & 0xFFFFFFFFFFFFFFF8);
        do
          v25 = __ldxr(v24);
        while (__stlxr(v25 - 2, v24));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v105 + 1);
      sub_20BFD265C(v105);
      if (*((_QWORD *)&v104 + 1))
        sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v104 + 1));
      v26 = (pxrInternal__aapl__pxrReserved__::PcpMapExpression::_Node **)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetMapToRoot(a2);
      v29 = pxrInternal__aapl__pxrReserved__::PcpMapExpression::Evaluate(v26, v27, v28);
      sub_20C00EEBC((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)__p, v30, v31);
      v85 = v14;
      v32 = *(_QWORD *)&v95[16];
      sub_20C00EEBC((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)__p, v33, v34);
      v35 = *(uint64_t (**)(_QWORD, uint64_t))&v95[16];
      v36 = *(_QWORD *)&v95[16] + 96 * (uint64_t)__p[0];
      v37 = v15;
      if (v32 != v36)
      {
        do
        {
          sub_20C42C3A8((_QWORD *)v32, (uint64_t)v29, (uint64_t)&v99, (uint64_t)&v104);
          v38 = *(void **)v32;
          if (*(_QWORD *)v32)
          {
            *(_QWORD *)(v32 + 8) = v38;
            operator delete(v38);
            *(_QWORD *)v32 = 0;
            *(_QWORD *)(v32 + 8) = 0;
            *(_QWORD *)(v32 + 16) = 0;
          }
          *(_OWORD *)v32 = v104;
          *(_QWORD *)(v32 + 16) = *(_QWORD *)&v105[0];
          v104 = 0uLL;
          *(_QWORD *)&v105[0] = 0;
          sub_20C00BC18((void **)(v32 + 24));
          *(_OWORD *)(v32 + 24) = *(_OWORD *)((char *)v105 + 8);
          *(_QWORD *)(v32 + 40) = *((_QWORD *)&v105[1] + 1);
          memset((char *)v105 + 8, 0, 24);
          sub_20C00BCC0((void **)(v32 + 48));
          *(std::string *)(v32 + 48) = v106[0];
          memset(v106, 0, 24);
          v39 = (void **)(v32 + 72);
          if (*(char *)(v32 + 95) < 0)
            operator delete(*v39);
          v40 = *(_OWORD *)&v106[1].__r_.__value_.__l.__data_;
          *(_QWORD *)(v32 + 88) = *((_QWORD *)&v106[1].__r_.__value_.__l + 2);
          *(_OWORD *)v39 = v40;
          *((_BYTE *)&v106[1].__r_.__value_.__s + 23) = 0;
          v106[1].__r_.__value_.__s.__data_[0] = 0;
          v93[0] = (void **)v106;
          sub_20C00E25C(v93);
          v93[0] = (void **)v105 + 1;
          sub_20C00D5A8(v93);
          if ((_QWORD)v104)
          {
            *((_QWORD *)&v104 + 1) = v104;
            operator delete((void *)v104);
          }
          v32 += 96;
        }
        while (v32 != v36);
        v35 = *(uint64_t (**)(_QWORD, uint64_t))&v95[16];
      }
      v41 = v37[1];
      v42 = v41[4];
      v41[4] = v35;
      *(_QWORD *)&v95[16] = v42;
      v43 = *(_OWORD *)v41;
      v44 = *(_QWORD *)v95;
      *(_OWORD *)v41 = *(_OWORD *)__p;
      v45 = v41[2];
      v46 = v41[3];
      *((_OWORD *)v41 + 1) = __PAIR128__(*(unint64_t *)&v95[8], v44);
      *(_OWORD *)__p = v43;
      *(_QWORD *)v95 = v45;
      *(_QWORD *)&v95[8] = v46;
      *(_QWORD *)&v104 = &v99;
      sub_20C22D004((void ***)&v104);
      sub_20C00E910(__p);
    }
    if (v12)
    {
      v56 = *(_QWORD *)(*a1 + 8);
      v57 = *(_OWORD *)(v56 + 16);
      *(_OWORD *)__p = *(_OWORD *)v56;
      *(_OWORD *)v95 = v57;
      v58 = *(_QWORD *)(v56 + 32);
      *(_QWORD *)&v95[16] = v58;
      if (v58)
      {
        v59 = (unint64_t *)(v58 - 16);
        if (*(_QWORD *)&v95[8])
          v59 = *(unint64_t **)&v95[8];
        do
          v60 = __ldxr(v59);
        while (__stxr(v60 + 1, v59));
      }
      if (__p[0] == (void *)v87)
      {
        sub_20C00EEBC((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v87, v47, v48);
        v61 = v89;
        sub_20C00EEBC((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v87, v62, v63);
        v64 = v89;
        v65 = v87;
        sub_20C00EEBC((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)__p, v66, v67);
        v68 = *(_QWORD *)&v95[16];
        sub_20C00EEBC((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v87, v69, v70);
        v71 = v64 + 96 * v65;
        if (v61 != v71)
        {
          v72 = 0;
          v73 = v89;
          do
          {
            sub_20C466210(v61 + v72, (const std::string *)(v68 + v72), (uint64_t)&v104);
            v74 = *(void **)(v73 + v72);
            if (v74)
            {
              *(_QWORD *)(v73 + v72 + 8) = v74;
              operator delete(v74);
            }
            v75 = v73 + v72;
            *(_OWORD *)v75 = v104;
            *(_QWORD *)(v75 + 16) = *(_QWORD *)&v105[0];
            v104 = 0uLL;
            *(_QWORD *)&v105[0] = 0;
            sub_20C00BC18((void **)(v73 + v72 + 24));
            *(_OWORD *)(v75 + 24) = *(_OWORD *)((char *)v105 + 8);
            *(_QWORD *)(v75 + 40) = *((_QWORD *)&v105[1] + 1);
            memset((char *)v105 + 8, 0, 24);
            sub_20C00BCC0((void **)(v73 + v72 + 48));
            *(std::string *)(v75 + 48) = v106[0];
            memset(v106, 0, 24);
            v76 = (void **)(v73 + v72 + 72);
            if (*(char *)(v73 + v72 + 95) < 0)
              operator delete(*v76);
            v77 = *(_OWORD *)&v106[1].__r_.__value_.__l.__data_;
            *(_QWORD *)(v75 + 88) = *((_QWORD *)&v106[1].__r_.__value_.__l + 2);
            *(_OWORD *)v76 = v77;
            *((_BYTE *)&v106[1].__r_.__value_.__s + 23) = 0;
            v106[1].__r_.__value_.__s.__data_[0] = 0;
            v99 = (void **)v106;
            sub_20C00E25C(&v99);
            v99 = (void **)v105 + 1;
            sub_20C00D5A8(&v99);
            if ((_QWORD)v104)
            {
              *((_QWORD *)&v104 + 1) = v104;
              operator delete((void *)v104);
            }
            v72 += 96;
          }
          while (v61 + v72 != v71);
        }
      }
      v78 = *(__int128 **)(*a1 + 8);
      v79 = *((_QWORD *)v78 + 4);
      v80 = v88;
      *((_QWORD *)v78 + 4) = v89;
      v89 = v79;
      v81 = *v78;
      *v78 = v87;
      v82 = *((_QWORD *)v78 + 2);
      v83 = *((_QWORD *)v78 + 3);
      v78[1] = __PAIR128__(*((unint64_t *)&v88 + 1), v80);
      v87 = v81;
      *(_QWORD *)&v88 = v82;
      *((_QWORD *)&v88 + 1) = v83;
      sub_20C00E910(__p);
    }
    else
    {
      pxrInternal__aapl__pxrReserved__::SdfPathExpression::ComposeOver((uint64_t)v90, *(const std::string **)(*a1 + 8), (uint64_t)&v104);
      if (v90[0])
      {
        v90[1] = v90[0];
        operator delete(v90[0]);
      }
      *(_OWORD *)v90 = v104;
      *(_QWORD *)&v91[0] = *(_QWORD *)&v105[0];
      *(_QWORD *)&v105[0] = 0;
      v104 = 0uLL;
      sub_20C00BC18((void **)v91 + 1);
      *(_OWORD *)((char *)v91 + 8) = *(_OWORD *)((char *)v105 + 8);
      *((_QWORD *)&v91[1] + 1) = *((_QWORD *)&v105[1] + 1);
      memset((char *)v105 + 8, 0, 24);
      sub_20C00BCC0((void **)&v92[0].__r_.__value_.__l.__data_);
      v92[0] = v106[0];
      memset(v106, 0, 24);
      if (SHIBYTE(v92[1].__r_.__value_.__r.__words[2]) < 0)
        operator delete(v92[1].__r_.__value_.__l.__data_);
      v92[1] = v106[1];
      *((_BYTE *)&v106[1].__r_.__value_.__s + 23) = 0;
      v106[1].__r_.__value_.__s.__data_[0] = 0;
      __p[0] = v106;
      sub_20C00E25C((void ***)__p);
      __p[0] = (char *)v105 + 8;
      sub_20C00D5A8((void ***)__p);
      if ((_QWORD)v104)
      {
        *((_QWORD *)&v104 + 1) = v104;
        operator delete((void *)v104);
      }
      *(_QWORD *)&v104 = *(_QWORD *)(*a1 + 8);
      *((_QWORD *)&v104 + 1) = v104 + 24;
      *(_QWORD *)&v105[0] = v104 + 48;
      *((_QWORD *)&v105[0] + 1) = v104 + 72;
      __p[0] = v90;
      __p[1] = (char *)v91 + 8;
      *(_QWORD *)v95 = v92;
      *(_QWORD *)&v95[8] = &v92[1];
      sub_20C1D2620((uint64_t **)&v104, (uint64_t)__p);
    }
    v14 = v85;
  }
LABEL_63:
  sub_20C00E910(&v87);
  if (SHIBYTE(v92[1].__r_.__value_.__r.__words[2]) < 0)
    operator delete(v92[1].__r_.__value_.__l.__data_);
  *(_QWORD *)&v104 = v92;
  sub_20C00E25C((void ***)&v104);
  *(_QWORD *)&v104 = (char *)v91 + 8;
  sub_20C00D5A8((void ***)&v104);
  if (v90[0])
  {
    v90[1] = v90[0];
    operator delete(v90[0]);
  }
  return v14;
}

void sub_20C51C144(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  sub_20C00E910((uint64_t *)va);
  sub_20C00BBB0((uint64_t)va1);
  _Unwind_Resume(a1);
}

BOOL sub_20C51C214(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, int a5, uint64_t a6, uint64_t a7)
{
  char v14;
  BOOL i;
  uint64_t v16;
  uint64_t v17;
  char v19;
  unint64_t *v20;
  unint64_t PrimDefinition;
  _BOOL8 v22;
  _QWORD v24[2];
  int v25;
  int v26;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v25);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v26);
  v14 = 0;
  for (i = 1;
        ;
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a6))
  {
    v16 = *(_QWORD *)(a6 + 16);
    v17 = *(_QWORD *)(a6 + 24);
    if (v16 == *(_QWORD *)(a6 + 32) && v17 == *(_QWORD *)(a6 + 40))
      break;
    if (i)
    {
      sub_20C453680(a6, a2, (int *)v24);
      sub_20BFD3EBC(&v25, (int *)v24);
      sub_20BFD3F10(&v26, (int *)v24 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v24 + 1);
      sub_20BFD265C(v24);
      v16 = *(_QWORD *)(a6 + 16);
      v17 = *(_QWORD *)(a6 + 24);
    }
    v24[0] = v16;
    v24[1] = v17;
    v19 = sub_20C51B838((uint64_t *)a7, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v24, *(uint64_t **)(a6 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v25, a3, a4);
    if (*(_BYTE *)(a7 + 40))
      goto LABEL_15;
    v14 |= v19;
  }
  if (a5)
  {
    v20 = *(unint64_t **)(a1 + 24);
    PrimDefinition = atomic_load(v20 + 7);
    if (!PrimDefinition)
      PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v20);
    sub_20C51B374((_BYTE *)a7, PrimDefinition, a2, a3, a4);
  }
  if ((v14 & 1) != 0)
  {
LABEL_15:
    v22 = 1;
    goto LABEL_17;
  }
  v22 = *(_BYTE *)(a7 + 40) != 0;
LABEL_17:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v26);
  sub_20BFD265C(&v25);
  return v22;
}

void sub_20C51C388(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C51C3B0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, char a4, uint64_t a5, uint64_t a6)
{
  BOOL i;
  _QWORD *v9;
  int HasField;
  int v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void ***v26;
  uint64_t v27;
  uint64_t *v28;
  _BYTE v35[8];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v43;
  int v44;
  int v45;
  uint64_t v46;
  void **v47;
  void ***v48;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v49;
  int v50;
  int v51;
  uint64_t v52;
  void **v53[3];
  __int16 v54;
  int v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  void **v60;
  _BYTE v61[16];
  void ***v62;
  _BYTE v63[24];
  _BYTE v64[24];
  _BYTE v65[24];
  _BYTE v66[24];
  _QWORD v67[5];

  v67[3] = *MEMORY[0x24BDAC8D0];
  v57 = 0;
  v58 = 0;
  v59 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v55);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v56);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, (int *)&v60);
      sub_20BFD3EBC(&v55, (int *)&v60);
      sub_20BFD3F10(&v56, (int *)&v60 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v60 + 1);
      sub_20BFD265C(&v60);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v60);
    v9 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a5 + 48));
    LOWORD(v50) = 0;
    v48 = &v60;
    v49 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D30;
    v47 = (void **)&unk_24C52BEB0;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v9, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v55, a3, (uint64_t (***)(_QWORD, uint64_t))&v47);
    if ((_BYTE)v50)
      v11 = 0;
    else
      v11 = HasField;
    if (v11 == 1)
    {
      v12 = v58;
      if (v58 >= v59)
      {
        v13 = sub_20C45CF44(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C02F650(v58, (uint64_t)&v60);
        v13 = v12 + 152;
      }
      v58 = v13;
    }
    v47 = (void **)v67;
    sub_20BDE5038(&v47);
    v47 = (void **)v66;
    sub_20BDE5038(&v47);
    v47 = (void **)v65;
    sub_20BDE5038(&v47);
    v47 = (void **)v64;
    sub_20BDE5038(&v47);
    v47 = (void **)v63;
    sub_20BDE5038(&v47);
    v47 = (void **)v61;
    sub_20BDE5038(&v47);
  }
  if ((a4 & 1) != 0)
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v60);
    v53[2] = (void **)&stru_24C524D30;
    v54 = 0;
    v53[0] = (void **)&unk_24C52BEB0;
    v53[1] = (void **)&v60;
    LODWORD(v42) = 0;
    v43 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v44);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v45);
    v46 = 0;
    sub_20C4535E0((uint64_t)&v47, (uint64_t)v53, (uint64_t)&v42);
    if ((v46 & 7) != 0)
    {
      v14 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v45);
    sub_20BFD265C(&v44);
    if (v43)
      sub_20C35C614(v43);
    v42 = 0;
    v16 = sub_20C45B318(a1, a2, a3, &v42, (uint64_t)&v47);
    if ((v42 & 7) != 0)
    {
      v17 = (unsigned int *)(v42 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
    if (v16)
    {
      v19 = v58;
      if (v58 >= v59)
      {
        v20 = sub_20C45CF44(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C02F650(v58, (uint64_t)&v60);
        v20 = v19 + 152;
      }
      v58 = v20;
    }
    if ((v52 & 7) != 0)
    {
      v21 = (unsigned int *)(v52 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v51);
    sub_20BFD265C(&v50);
    if (v49)
      sub_20C35C614(v49);
    v47 = (void **)v67;
    sub_20BDE5038(&v47);
    v47 = (void **)v66;
    sub_20BDE5038(&v47);
    v47 = (void **)v65;
    sub_20BDE5038(&v47);
    v47 = (void **)v64;
    sub_20BDE5038(&v47);
    v47 = (void **)v63;
    sub_20BDE5038(&v47);
    v47 = (void **)v61;
    sub_20BDE5038(&v47);
  }
  v23 = v57;
  v24 = v58;
  if (v57 != v58)
  {
    v47 = 0;
    v48 = 0;
    v25 = v58;
    v49 = 0;
    while (1)
    {
      v25 -= 152;
      v62 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations(v25, (uint64_t *)&v47, (uint64_t)&v60);
      v26 = v62;
      if (v62 == &v60)
        break;
      if (v62)
      {
        v27 = 5;
LABEL_43:
        ((void (*)(void))(*v26)[v27])();
      }
      if (v25 == v23)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v60);
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetExplicitItems(v28, (uint64_t)&v47);
        sub_20C02F650((uint64_t)v35, (uint64_t)&v60);
        sub_20C45D304(*(_QWORD *)a6, (uint64_t)v35);
        *(_BYTE *)(a6 + 40) = 1;
        v53[0] = (void **)&v41;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v40;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v39;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v38;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v37;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v36;
        sub_20BDE5038(v53);
        v53[0] = (void **)v67;
        sub_20BDE5038(v53);
        v53[0] = (void **)v66;
        sub_20BDE5038(v53);
        v53[0] = (void **)v65;
        sub_20BDE5038(v53);
        v53[0] = (void **)v64;
        sub_20BDE5038(v53);
        v53[0] = (void **)v63;
        sub_20BDE5038(v53);
        v53[0] = (void **)v61;
        sub_20BDE5038(v53);
        v60 = (void **)&v47;
        sub_20BDE5038(&v60);
        goto LABEL_46;
      }
    }
    v26 = &v60;
    v27 = 4;
    goto LABEL_43;
  }
LABEL_46:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v56);
  sub_20BFD265C(&v55);
  v60 = (void **)&v57;
  sub_20C45D378(&v60);
  return v23 != v24;
}

void sub_20C51C908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45CEE4((uint64_t)&a38);
  sub_20C020EAC((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C45D378((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_20C51CA24(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, char a4, uint64_t a5, uint64_t a6)
{
  BOOL i;
  _QWORD *v9;
  int HasField;
  int v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  void ***v26;
  uint64_t v27;
  unsigned __int8 *v28;
  _BYTE v35[8];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t *v47;
  void ***v48;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v49;
  int v50;
  int v51;
  uint64_t v52;
  void **v53[3];
  __int16 v54;
  int v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  void **v60;
  _BYTE v61[16];
  void ***v62;
  _BYTE v63[24];
  _BYTE v64[24];
  _BYTE v65[24];
  _BYTE v66[24];
  _QWORD v67[5];

  v67[3] = *MEMORY[0x24BDAC8D0];
  v57 = 0;
  v58 = 0;
  v59 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v55);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v56);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, (int *)&v60);
      sub_20BFD3EBC(&v55, (int *)&v60);
      sub_20BFD3F10(&v56, (int *)&v60 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v60 + 1);
      sub_20BFD265C(&v60);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v60);
    v9 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a5 + 48));
    LOWORD(v50) = 0;
    v48 = &v60;
    v49 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D40;
    v47 = (uint64_t *)&unk_24C539538;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v9, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v55, a3, (uint64_t (***)(_QWORD, uint64_t))&v47);
    if ((_BYTE)v50)
      v11 = 0;
    else
      v11 = HasField;
    if (v11 == 1)
    {
      v12 = v58;
      if (v58 >= v59)
      {
        v13 = sub_20C45D45C(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C0366AC(v58, (uint64_t)&v60);
        v13 = v12 + 152;
      }
      v58 = v13;
    }
    v47 = v67;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v66;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v65;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v47);
  }
  if ((a4 & 1) != 0)
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v60);
    v53[2] = (void **)&stru_24C524D40;
    v54 = 0;
    v53[0] = (void **)&unk_24C539538;
    v53[1] = (void **)&v60;
    LODWORD(v42) = 0;
    v43 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v44);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v45);
    v46 = 0;
    sub_20C4535E0((uint64_t)&v47, (uint64_t)v53, (uint64_t)&v42);
    if ((v46 & 7) != 0)
    {
      v14 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v45);
    sub_20BFD265C(&v44);
    if (v43)
      sub_20C35C614(v43);
    v42 = 0;
    v16 = sub_20C45B318(a1, a2, a3, &v42, (uint64_t)&v47);
    if ((v42 & 7) != 0)
    {
      v17 = (unsigned int *)(v42 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
    if (v16)
    {
      v19 = v58;
      if (v58 >= v59)
      {
        v20 = sub_20C45D45C(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C0366AC(v58, (uint64_t)&v60);
        v20 = v19 + 152;
      }
      v58 = v20;
    }
    if ((v52 & 7) != 0)
    {
      v21 = (unsigned int *)(v52 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v51);
    sub_20BFD265C(&v50);
    if (v49)
      sub_20C35C614(v49);
    v47 = v67;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v66;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v65;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v47);
  }
  v23 = v57;
  v24 = v58;
  if (v57 != v58)
  {
    v47 = 0;
    v48 = 0;
    v25 = (_QWORD *)v58;
    v49 = 0;
    while (1)
    {
      v25 -= 19;
      v62 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations(v25, &v47, (uint64_t)&v60);
      v26 = v62;
      if (v62 == &v60)
        break;
      if (v62)
      {
        v27 = 5;
LABEL_43:
        ((void (*)(void))(*v26)[v27])();
      }
      if (v25 == (_QWORD *)v23)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v60);
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SetExplicitItems(v28, &v47);
        sub_20C0366AC((uint64_t)v35, (uint64_t)&v60);
        sub_20C45D578(*(_QWORD *)a6, (uint64_t)v35);
        *(_BYTE *)(a6 + 40) = 1;
        v53[0] = (void **)&v41;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v40;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v39;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v38;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v37;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v36;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v67;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v66;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v65;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v64;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v63;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v61;
        sub_20BEEB2B8(v53);
        v60 = (void **)&v47;
        sub_20BEEB2B8(&v60);
        goto LABEL_46;
      }
    }
    v26 = &v60;
    v27 = 4;
    goto LABEL_43;
  }
LABEL_46:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v56);
  sub_20BFD265C(&v55);
  v60 = (void **)&v57;
  sub_20C451A98(&v60);
  return v23 != v24;
}

void sub_20C51CF7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45D3FC((uint64_t)&a38);
  sub_20C03507C((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C451A98((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C51D098(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, int a4, uint64_t a5)
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v10;
  unsigned __int8 v11;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v12;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t v14;
  BOOL i;
  _QWORD *v17;
  int HasField;
  int v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  BOOL j;
  _QWORD *v25;
  int v26;
  int v27;
  unint64_t v28;
  uint64_t v29;
  unsigned int *v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int *v33;
  unsigned int v34;
  unint64_t v35;
  uint64_t v36;
  BOOL k;
  _QWORD *v39;
  int v40;
  int v41;
  unint64_t v42;
  uint64_t v43;
  unsigned int *v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int *v47;
  unsigned int v48;
  unint64_t v49;
  uint64_t v50;
  BOOL m;
  _QWORD *v53;
  int v54;
  int v55;
  unint64_t v56;
  uint64_t v57;
  unsigned int *v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int *v61;
  unsigned int v62;
  unint64_t v63;
  uint64_t v64;
  unsigned int *v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int *v69;
  unsigned int v70;
  unint64_t v71;
  uint64_t v72;
  unsigned int *v73;
  unsigned int v74;
  uint64_t v75;
  _QWORD *v76;
  void ***v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int *v80;
  unsigned int v81;
  uint64_t v82;
  _QWORD *v83;
  void ***v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int *v87;
  unsigned int v88;
  uint64_t v89;
  _QWORD *v90;
  void ***v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int *v94;
  unsigned int v95;
  uint64_t v96;
  _QWORD *v97;
  void ***v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v102;
  _BYTE v103[16];
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t (**v109)(_QWORD, uint64_t);
  void *v110;
  std::type_info *v111;
  int v112;
  int v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *v120;
  void *v121;
  void *__p;
  void *v123;
  uint64_t v124;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v125;
  int v126;
  int v127;
  uint64_t v128;
  void *v129;
  void ***v130;
  std::type_info *v131;
  __int16 v132;
  int v133;
  int v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  void **v138;
  void *v139;
  void *v140;
  void ***v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  void *v150;
  void *v151;
  uint64_t v152;

  v152 = *MEMORY[0x24BDAC8D0];
  v10 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  v11 = atomic_load((unsigned __int8 *)&qword_254989220);
  if ((v11 & 1) == 0 && __cxa_guard_acquire(&qword_254989220))
  {
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &unk_254989218, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989220);
  }
  if (*(int *)a1 < 2)
    v12 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_254989218;
  else
    v12 = sub_20C398E78((_DWORD *)a1);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v10);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103, PrimIndex, 1);
  if (!sub_20C51E9B8((uint64_t)v10, v12, a2, a3, a4, (uint64_t)v103, a5))
    return 0;
  v14 = *(_QWORD *)(*(_QWORD *)a5 + 16);
  v102 = a5;
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524CF0))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (i = 1;
          v104 != v106 || v105 != v107;
          i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (i)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v138);
      v17 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524CF0;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C5399F0;
      HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v17, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v19 = 0;
      else
        v19 = HasField;
      if (v19 == 1)
      {
        v20 = v136;
        if (v136 >= v137)
        {
          v21 = sub_20C45B3D8(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C031ADC(v136, (uint64_t)&v138);
          v21 = v20 + 152;
        }
        v136 = v21;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524CF0;
      v132 = 0;
      v129 = &unk_24C5399F0;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v30 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v31 = __ldxr(v30);
        while (__stlxr(v31 - 2, v30));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v32 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v33 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v34 = __ldxr(v33);
        while (__stlxr(v34 - 2, v33));
      }
      if (v32)
      {
        v35 = v136;
        if (v136 >= v137)
        {
          v36 = sub_20C45B3D8(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C031ADC(v136, (uint64_t)&v138);
          v36 = v35 + 152;
        }
        v136 = v36;
      }
      if ((v114 & 7) != 0)
      {
        v73 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v74 = __ldxr(v73);
        while (__stlxr(v74 - 2, v73));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v75 = v135;
    v76 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 == v136)
      goto LABEL_392;
    v129 = 0;
    v130 = 0;
    v131 = 0;
    while (1)
    {
      v76 -= 19;
      v141 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations(v76, (int **)&v129, (uint64_t)&v138);
      v77 = v141;
      if (v141 == &v138)
        break;
      if (v141)
      {
        v78 = 5;
LABEL_198:
        ((void (*)(void))(*v77)[v78])();
      }
      if (v76 == (_QWORD *)v75)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v138);
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SetExplicitItems(v79, (uint64_t)&v129);
        sub_20C031ADC((uint64_t)&v109, (uint64_t)&v138);
        sub_20C45BAB4(*(_QWORD *)v102, (uint64_t)&v109);
        *(_BYTE *)(v102 + 40) = 1;
        if (__p)
        {
          v123 = __p;
          operator delete(__p);
        }
        if (v120)
        {
          v121 = v120;
          operator delete(v120);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v110)
        {
          v111 = (std::type_info *)v110;
          operator delete(v110);
        }
        if (v150)
        {
          v151 = v150;
          operator delete(v150);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v139)
        {
          v140 = v139;
          operator delete(v139);
        }
        if (v129)
        {
          v130 = (void ***)v129;
          operator delete(v129);
        }
        goto LABEL_392;
      }
    }
    v77 = &v138;
    v78 = 4;
    goto LABEL_198;
  }
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D00))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (j = 1;
          v104 != v106 || v105 != v107;
          j = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (j)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v138);
      v25 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524D00;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A28;
      v26 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v25, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v27 = 0;
      else
        v27 = v26;
      if (v27 == 1)
      {
        v28 = v136;
        if (v136 >= v137)
        {
          v29 = sub_20C45BC0C(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C03298C(v136, (uint64_t)&v138);
          v29 = v28 + 152;
        }
        v136 = v29;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524D00;
      v132 = 0;
      v129 = &unk_24C539A28;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v44 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v45 = __ldxr(v44);
        while (__stlxr(v45 - 2, v44));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v46 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v47 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v48 = __ldxr(v47);
        while (__stlxr(v48 - 2, v47));
      }
      if (v46)
      {
        v49 = v136;
        if (v136 >= v137)
        {
          v50 = sub_20C45BC0C(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C03298C(v136, (uint64_t)&v138);
          v50 = v49 + 152;
        }
        v136 = v50;
      }
      if ((v114 & 7) != 0)
      {
        v80 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v81 = __ldxr(v80);
        while (__stlxr(v81 - 2, v80));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v82 = v135;
    v83 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 == v136)
      goto LABEL_392;
    v129 = 0;
    v130 = 0;
    v131 = 0;
    while (1)
    {
      v83 -= 19;
      v141 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations(v83, (uint64_t **)&v129, (uint64_t)&v138);
      v84 = v141;
      if (v141 == &v138)
        break;
      if (v141)
      {
        v85 = 5;
LABEL_255:
        ((void (*)(void))(*v84)[v85])();
      }
      if (v83 == (_QWORD *)v82)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v138);
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetExplicitItems(v86, (uint64_t)&v129);
        sub_20C03298C((uint64_t)&v109, (uint64_t)&v138);
        sub_20C45C1A0(*(_QWORD *)v102, (uint64_t)&v109);
        *(_BYTE *)(v102 + 40) = 1;
        if (__p)
        {
          v123 = __p;
          operator delete(__p);
        }
        if (v120)
        {
          v121 = v120;
          operator delete(v120);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v110)
        {
          v111 = (std::type_info *)v110;
          operator delete(v110);
        }
        if (v150)
        {
          v151 = v150;
          operator delete(v150);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v139)
        {
          v140 = v139;
          operator delete(v139);
        }
        if (v129)
        {
          v130 = (void ***)v129;
          operator delete(v129);
        }
        goto LABEL_392;
      }
    }
    v84 = &v138;
    v85 = 4;
    goto LABEL_255;
  }
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D10))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (k = 1;
          v104 != v106 || v105 != v107;
          k = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (k)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v138);
      v39 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524D10;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A60;
      v40 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v39, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v41 = 0;
      else
        v41 = v40;
      if (v41 == 1)
      {
        v42 = v136;
        if (v136 >= v137)
        {
          v43 = sub_20C45C274(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C033524(v136, (uint64_t)&v138);
          v43 = v42 + 152;
        }
        v136 = v43;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524D10;
      v132 = 0;
      v129 = &unk_24C539A60;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v58 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v59 = __ldxr(v58);
        while (__stlxr(v59 - 2, v58));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v60 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v61 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v62 = __ldxr(v61);
        while (__stlxr(v62 - 2, v61));
      }
      if (v60)
      {
        v63 = v136;
        if (v136 >= v137)
        {
          v64 = sub_20C45C274(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C033524(v136, (uint64_t)&v138);
          v64 = v63 + 152;
        }
        v136 = v64;
      }
      if ((v114 & 7) != 0)
      {
        v87 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v88 = __ldxr(v87);
        while (__stlxr(v88 - 2, v87));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v89 = v135;
    v90 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 == v136)
      goto LABEL_392;
    v129 = 0;
    v130 = 0;
    v131 = 0;
    while (1)
    {
      v90 -= 19;
      v141 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations(v90, (int **)&v129, (uint64_t)&v138);
      v91 = v141;
      if (v141 == &v138)
        break;
      if (v141)
      {
        v92 = 5;
LABEL_310:
        ((void (*)(void))(*v91)[v92])();
      }
      if (v90 == (_QWORD *)v89)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v138);
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SetExplicitItems(v93, (uint64_t)&v129);
        sub_20C033524((uint64_t)&v109, (uint64_t)&v138);
        sub_20C45C808(*(_QWORD *)v102, (uint64_t)&v109);
        *(_BYTE *)(v102 + 40) = 1;
        if (__p)
        {
          v123 = __p;
          operator delete(__p);
        }
        if (v120)
        {
          v121 = v120;
          operator delete(v120);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v110)
        {
          v111 = (std::type_info *)v110;
          operator delete(v110);
        }
        if (v150)
        {
          v151 = v150;
          operator delete(v150);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v139)
        {
          v140 = v139;
          operator delete(v139);
        }
        if (v129)
        {
          v130 = (void ***)v129;
          operator delete(v129);
        }
        goto LABEL_392;
      }
    }
    v91 = &v138;
    v92 = 4;
    goto LABEL_310;
  }
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D20))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (m = 1;
          v104 != v106 || v105 != v107;
          m = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (m)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v138);
      v53 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524D20;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A98;
      v54 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v53, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v55 = 0;
      else
        v55 = v54;
      if (v55 == 1)
      {
        v56 = v136;
        if (v136 >= v137)
        {
          v57 = sub_20C45C8DC(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C0340F4(v136, (uint64_t)&v138);
          v57 = v56 + 152;
        }
        v136 = v57;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524D20;
      v132 = 0;
      v129 = &unk_24C539A98;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v66 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v67 = __ldxr(v66);
        while (__stlxr(v67 - 2, v66));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v68 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v69 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v70 = __ldxr(v69);
        while (__stlxr(v70 - 2, v69));
      }
      if (v68)
      {
        v71 = v136;
        if (v136 >= v137)
        {
          v72 = sub_20C45C8DC(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C0340F4(v136, (uint64_t)&v138);
          v72 = v71 + 152;
        }
        v136 = v72;
      }
      if ((v114 & 7) != 0)
      {
        v94 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v95 = __ldxr(v94);
        while (__stlxr(v95 - 2, v94));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v96 = v135;
    v97 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 != v136)
    {
      v129 = 0;
      v130 = 0;
      v131 = 0;
      while (1)
      {
        v97 -= 19;
        v141 = 0;
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations(v97, (uint64_t **)&v129, (uint64_t)&v138);
        v98 = v141;
        if (v141 == &v138)
          break;
        if (v141)
        {
          v99 = 5;
LABEL_364:
          ((void (*)(void))(*v98)[v99])();
        }
        if (v97 == (_QWORD *)v96)
        {
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v138);
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SetExplicitItems(v100, (uint64_t)&v129);
          sub_20C0340F4((uint64_t)&v109, (uint64_t)&v138);
          sub_20C45CE70(*(_QWORD *)v102, (uint64_t)&v109);
          *(_BYTE *)(v102 + 40) = 1;
          if (__p)
          {
            v123 = __p;
            operator delete(__p);
          }
          if (v120)
          {
            v121 = v120;
            operator delete(v120);
          }
          if (v118)
          {
            v119 = v118;
            operator delete(v118);
          }
          if (v116)
          {
            v117 = v116;
            operator delete(v116);
          }
          if (v114)
          {
            v115 = v114;
            operator delete(v114);
          }
          if (v110)
          {
            v111 = (std::type_info *)v110;
            operator delete(v110);
          }
          if (v150)
          {
            v151 = v150;
            operator delete(v150);
          }
          if (v148)
          {
            v149 = v148;
            operator delete(v148);
          }
          if (v146)
          {
            v147 = v146;
            operator delete(v146);
          }
          if (v144)
          {
            v145 = v144;
            operator delete(v144);
          }
          if (v142)
          {
            v143 = v142;
            operator delete(v142);
          }
          if (v139)
          {
            v140 = v139;
            operator delete(v139);
          }
          if (v129)
          {
            v130 = (void ***)v129;
            operator delete(v129);
          }
          goto LABEL_392;
        }
      }
      v98 = &v138;
      v99 = 4;
      goto LABEL_364;
    }
LABEL_392:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v134);
    sub_20BFD265C(&v133);
    v138 = (void **)&v135;
    sub_20C45BB28(&v138);
  }
  else
  {
    if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D30))
      return sub_20C51EB54((uint64_t)v10, v12, a2, a4, (uint64_t)v103, a5);
    if (!sub_20BDE150C(v14, (uint64_t)&stru_24C524D40))
      return 1;
    return sub_20C51F1C8((uint64_t)v10, v12, a2, a4, (uint64_t)v103, a5);
  }
  return v22;
}

void sub_20C51E570(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  uint64_t v51;

  sub_20C45C87C((uint64_t)&a19);
  sub_20C031968((_QWORD *)(v51 - 248));
  sub_20BFD1A18(&a46);
  *(_QWORD *)(v51 - 248) = &a48;
  sub_20C45BB28((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_20C51E9B8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, int a5, uint64_t a6, uint64_t a7)
{
  char v14;
  BOOL i;
  uint64_t v16;
  uint64_t v17;
  char v19;
  unint64_t *v20;
  unint64_t PrimDefinition;
  _BOOL8 v22;
  _QWORD v24[2];
  int v25;
  int v26;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v25);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v26);
  v14 = 0;
  for (i = 1;
        ;
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a6))
  {
    v16 = *(_QWORD *)(a6 + 16);
    v17 = *(_QWORD *)(a6 + 24);
    if (v16 == *(_QWORD *)(a6 + 32) && v17 == *(_QWORD *)(a6 + 40))
      break;
    if (i)
    {
      sub_20C453680(a6, a2, (int *)v24);
      sub_20BFD3EBC(&v25, (int *)v24);
      sub_20BFD3F10(&v26, (int *)v24 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v24 + 1);
      sub_20BFD265C(v24);
      v16 = *(_QWORD *)(a6 + 16);
      v17 = *(_QWORD *)(a6 + 24);
    }
    v24[0] = v16;
    v24[1] = v17;
    v19 = sub_20C51B838((uint64_t *)a7, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v24, *(uint64_t **)(a6 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v25, a3, a4);
    if (*(_BYTE *)(a7 + 40))
      goto LABEL_15;
    v14 |= v19;
  }
  if (a5)
  {
    v20 = *(unint64_t **)(a1 + 24);
    PrimDefinition = atomic_load(v20 + 7);
    if (!PrimDefinition)
      PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v20);
    sub_20C51B374((_BYTE *)a7, PrimDefinition, a2, a3, a4);
  }
  if ((v14 & 1) != 0)
  {
LABEL_15:
    v22 = 1;
    goto LABEL_17;
  }
  v22 = *(_BYTE *)(a7 + 40) != 0;
LABEL_17:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v26);
  sub_20BFD265C(&v25);
  return v22;
}

void sub_20C51EB2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C51EB54(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, char a4, uint64_t a5, uint64_t a6)
{
  BOOL i;
  _QWORD *v9;
  int HasField;
  int v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void ***v26;
  uint64_t v27;
  uint64_t *v28;
  _BYTE v35[8];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v43;
  int v44;
  int v45;
  uint64_t v46;
  void **v47;
  void ***v48;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v49;
  int v50;
  int v51;
  uint64_t v52;
  void **v53[3];
  __int16 v54;
  int v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  void **v60;
  _BYTE v61[16];
  void ***v62;
  _BYTE v63[24];
  _BYTE v64[24];
  _BYTE v65[24];
  _BYTE v66[24];
  _QWORD v67[5];

  v67[3] = *MEMORY[0x24BDAC8D0];
  v57 = 0;
  v58 = 0;
  v59 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v55);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v56);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, (int *)&v60);
      sub_20BFD3EBC(&v55, (int *)&v60);
      sub_20BFD3F10(&v56, (int *)&v60 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v60 + 1);
      sub_20BFD265C(&v60);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v60);
    v9 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a5 + 48));
    LOWORD(v50) = 0;
    v48 = &v60;
    v49 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D30;
    v47 = (void **)&unk_24C52BEB0;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v9, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v55, a3, (uint64_t (***)(_QWORD, uint64_t))&v47);
    if ((_BYTE)v50)
      v11 = 0;
    else
      v11 = HasField;
    if (v11 == 1)
    {
      v12 = v58;
      if (v58 >= v59)
      {
        v13 = sub_20C45CF44(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C02F650(v58, (uint64_t)&v60);
        v13 = v12 + 152;
      }
      v58 = v13;
    }
    v47 = (void **)v67;
    sub_20BDE5038(&v47);
    v47 = (void **)v66;
    sub_20BDE5038(&v47);
    v47 = (void **)v65;
    sub_20BDE5038(&v47);
    v47 = (void **)v64;
    sub_20BDE5038(&v47);
    v47 = (void **)v63;
    sub_20BDE5038(&v47);
    v47 = (void **)v61;
    sub_20BDE5038(&v47);
  }
  if ((a4 & 1) != 0)
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v60);
    v53[2] = (void **)&stru_24C524D30;
    v54 = 0;
    v53[0] = (void **)&unk_24C52BEB0;
    v53[1] = (void **)&v60;
    LODWORD(v42) = 0;
    v43 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v44);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v45);
    v46 = 0;
    sub_20C4535E0((uint64_t)&v47, (uint64_t)v53, (uint64_t)&v42);
    if ((v46 & 7) != 0)
    {
      v14 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v45);
    sub_20BFD265C(&v44);
    if (v43)
      sub_20C35C614(v43);
    v42 = 0;
    v16 = sub_20C45B318(a1, a2, a3, &v42, (uint64_t)&v47);
    if ((v42 & 7) != 0)
    {
      v17 = (unsigned int *)(v42 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
    if (v16)
    {
      v19 = v58;
      if (v58 >= v59)
      {
        v20 = sub_20C45CF44(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C02F650(v58, (uint64_t)&v60);
        v20 = v19 + 152;
      }
      v58 = v20;
    }
    if ((v52 & 7) != 0)
    {
      v21 = (unsigned int *)(v52 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v51);
    sub_20BFD265C(&v50);
    if (v49)
      sub_20C35C614(v49);
    v47 = (void **)v67;
    sub_20BDE5038(&v47);
    v47 = (void **)v66;
    sub_20BDE5038(&v47);
    v47 = (void **)v65;
    sub_20BDE5038(&v47);
    v47 = (void **)v64;
    sub_20BDE5038(&v47);
    v47 = (void **)v63;
    sub_20BDE5038(&v47);
    v47 = (void **)v61;
    sub_20BDE5038(&v47);
  }
  v23 = v57;
  v24 = v58;
  if (v57 != v58)
  {
    v47 = 0;
    v48 = 0;
    v25 = v58;
    v49 = 0;
    while (1)
    {
      v25 -= 152;
      v62 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations(v25, (uint64_t *)&v47, (uint64_t)&v60);
      v26 = v62;
      if (v62 == &v60)
        break;
      if (v62)
      {
        v27 = 5;
LABEL_43:
        ((void (*)(void))(*v26)[v27])();
      }
      if (v25 == v23)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v60);
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetExplicitItems(v28, (uint64_t)&v47);
        sub_20C02F650((uint64_t)v35, (uint64_t)&v60);
        sub_20C45D304(*(_QWORD *)a6, (uint64_t)v35);
        *(_BYTE *)(a6 + 40) = 1;
        v53[0] = (void **)&v41;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v40;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v39;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v38;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v37;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v36;
        sub_20BDE5038(v53);
        v53[0] = (void **)v67;
        sub_20BDE5038(v53);
        v53[0] = (void **)v66;
        sub_20BDE5038(v53);
        v53[0] = (void **)v65;
        sub_20BDE5038(v53);
        v53[0] = (void **)v64;
        sub_20BDE5038(v53);
        v53[0] = (void **)v63;
        sub_20BDE5038(v53);
        v53[0] = (void **)v61;
        sub_20BDE5038(v53);
        v60 = (void **)&v47;
        sub_20BDE5038(&v60);
        goto LABEL_46;
      }
    }
    v26 = &v60;
    v27 = 4;
    goto LABEL_43;
  }
LABEL_46:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v56);
  sub_20BFD265C(&v55);
  v60 = (void **)&v57;
  sub_20C45D378(&v60);
  return v23 != v24;
}

void sub_20C51F0AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45CEE4((uint64_t)&a38);
  sub_20C020EAC((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C45D378((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_20C51F1C8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, char a4, uint64_t a5, uint64_t a6)
{
  BOOL i;
  _QWORD *v9;
  int HasField;
  int v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  void ***v26;
  uint64_t v27;
  unsigned __int8 *v28;
  _BYTE v35[8];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t *v47;
  void ***v48;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v49;
  int v50;
  int v51;
  uint64_t v52;
  void **v53[3];
  __int16 v54;
  int v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  void **v60;
  _BYTE v61[16];
  void ***v62;
  _BYTE v63[24];
  _BYTE v64[24];
  _BYTE v65[24];
  _BYTE v66[24];
  _QWORD v67[5];

  v67[3] = *MEMORY[0x24BDAC8D0];
  v57 = 0;
  v58 = 0;
  v59 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v55);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v56);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, (int *)&v60);
      sub_20BFD3EBC(&v55, (int *)&v60);
      sub_20BFD3F10(&v56, (int *)&v60 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v60 + 1);
      sub_20BFD265C(&v60);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v60);
    v9 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a5 + 48));
    LOWORD(v50) = 0;
    v48 = &v60;
    v49 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D40;
    v47 = (uint64_t *)&unk_24C539538;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v9, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v55, a3, (uint64_t (***)(_QWORD, uint64_t))&v47);
    if ((_BYTE)v50)
      v11 = 0;
    else
      v11 = HasField;
    if (v11 == 1)
    {
      v12 = v58;
      if (v58 >= v59)
      {
        v13 = sub_20C45D45C(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C0366AC(v58, (uint64_t)&v60);
        v13 = v12 + 152;
      }
      v58 = v13;
    }
    v47 = v67;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v66;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v65;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v47);
  }
  if ((a4 & 1) != 0)
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v60);
    v53[2] = (void **)&stru_24C524D40;
    v54 = 0;
    v53[0] = (void **)&unk_24C539538;
    v53[1] = (void **)&v60;
    LODWORD(v42) = 0;
    v43 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v44);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v45);
    v46 = 0;
    sub_20C4535E0((uint64_t)&v47, (uint64_t)v53, (uint64_t)&v42);
    if ((v46 & 7) != 0)
    {
      v14 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v45);
    sub_20BFD265C(&v44);
    if (v43)
      sub_20C35C614(v43);
    v42 = 0;
    v16 = sub_20C45B318(a1, a2, a3, &v42, (uint64_t)&v47);
    if ((v42 & 7) != 0)
    {
      v17 = (unsigned int *)(v42 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
    if (v16)
    {
      v19 = v58;
      if (v58 >= v59)
      {
        v20 = sub_20C45D45C(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C0366AC(v58, (uint64_t)&v60);
        v20 = v19 + 152;
      }
      v58 = v20;
    }
    if ((v52 & 7) != 0)
    {
      v21 = (unsigned int *)(v52 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v51);
    sub_20BFD265C(&v50);
    if (v49)
      sub_20C35C614(v49);
    v47 = v67;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v66;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v65;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v47);
  }
  v23 = v57;
  v24 = v58;
  if (v57 != v58)
  {
    v47 = 0;
    v48 = 0;
    v25 = (_QWORD *)v58;
    v49 = 0;
    while (1)
    {
      v25 -= 19;
      v62 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations(v25, &v47, (uint64_t)&v60);
      v26 = v62;
      if (v62 == &v60)
        break;
      if (v62)
      {
        v27 = 5;
LABEL_43:
        ((void (*)(void))(*v26)[v27])();
      }
      if (v25 == (_QWORD *)v23)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v60);
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SetExplicitItems(v28, &v47);
        sub_20C0366AC((uint64_t)v35, (uint64_t)&v60);
        sub_20C45D578(*(_QWORD *)a6, (uint64_t)v35);
        *(_BYTE *)(a6 + 40) = 1;
        v53[0] = (void **)&v41;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v40;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v39;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v38;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v37;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v36;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v67;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v66;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v65;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v64;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v63;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v61;
        sub_20BEEB2B8(v53);
        v60 = (void **)&v47;
        sub_20BEEB2B8(&v60);
        goto LABEL_46;
      }
    }
    v26 = &v60;
    v27 = 4;
    goto LABEL_43;
  }
LABEL_46:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v56);
  sub_20BFD265C(&v55);
  v60 = (void **)&v57;
  sub_20C451A98(&v60);
  return v23 != v24;
}

void sub_20C51F720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45D3FC((uint64_t)&a38);
  sub_20C03507C((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C451A98((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C51F83C(uint64_t a1, _QWORD *a2)
{
  sub_20C0E7DF0(a2, *(_QWORD *)(a1 + 8));
  return 1;
}

uint64_t sub_20C51F860(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  double *v9;
  double *v10;
  double *v11;
  _QWORD *v12;
  double *v13;
  double *v14;
  BOOL v15;
  _QWORD *v16;
  _QWORD *v17;

  result = sub_20BFEB19C(a2);
  if ((_DWORD)result)
  {
    v6 = *((_QWORD *)a2 + 1);
    if ((v6 & 4) != 0)
      v7 = (_QWORD *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v6 & 0xFFFFFFFFFFFFFFF8)
                                                                                            + 168))(a2);
    else
      v7 = *(_QWORD **)a2;
    v8 = *(_QWORD **)(a1 + 8);
    if (v7[2] == v8[2])
    {
      v11 = (double *)*v7;
      v9 = (double *)(v7 + 1);
      v10 = v11;
      if (v11 == v9)
        return 1;
      v12 = (_QWORD *)*v8;
      while (v10[4] == *((double *)v12 + 4))
      {
        result = pxrInternal__aapl__pxrReserved__::SdfUnregisteredValue::operator==((pxrInternal__aapl__pxrReserved__::VtValue *)(v10 + 5), (std::type_info *)(v12 + 5), v5);
        if (!(_DWORD)result)
          return result;
        v13 = (double *)*((_QWORD *)v10 + 1);
        v14 = v10;
        if (v13)
        {
          do
          {
            v10 = v13;
            v13 = *(double **)v13;
          }
          while (v13);
        }
        else
        {
          do
          {
            v10 = (double *)*((_QWORD *)v14 + 2);
            v15 = *(_QWORD *)v10 == (_QWORD)v14;
            v14 = v10;
          }
          while (!v15);
        }
        v16 = (_QWORD *)v12[1];
        if (v16)
        {
          do
          {
            v17 = v16;
            v16 = (_QWORD *)*v16;
          }
          while (v16);
        }
        else
        {
          do
          {
            v17 = (_QWORD *)v12[2];
            v15 = *v17 == (_QWORD)v12;
            v12 = v17;
          }
          while (!v15);
        }
        v12 = v17;
        if (v10 == v9)
          return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_20C51F970(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, int a4, _BYTE *a5)
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v10;
  unsigned __int8 v11;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v12;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t v14;
  BOOL i;
  _QWORD *v17;
  int HasField;
  int v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  BOOL j;
  _QWORD *v25;
  int v26;
  int v27;
  unint64_t v28;
  uint64_t v29;
  unsigned int *v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int *v33;
  unsigned int v34;
  unint64_t v35;
  uint64_t v36;
  BOOL k;
  _QWORD *v39;
  int v40;
  int v41;
  unint64_t v42;
  uint64_t v43;
  unsigned int *v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int *v47;
  unsigned int v48;
  unint64_t v49;
  uint64_t v50;
  BOOL m;
  _QWORD *v53;
  int v54;
  int v55;
  unint64_t v56;
  uint64_t v57;
  unsigned int *v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int *v61;
  unsigned int v62;
  unint64_t v63;
  uint64_t v64;
  unsigned int *v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int *v69;
  unsigned int v70;
  unint64_t v71;
  uint64_t v72;
  unsigned int *v73;
  unsigned int v74;
  uint64_t v75;
  _QWORD *v76;
  void ***v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int *v80;
  unsigned int v81;
  uint64_t v82;
  _QWORD *v83;
  void ***v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int *v87;
  unsigned int v88;
  uint64_t v89;
  _QWORD *v90;
  void ***v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int *v94;
  unsigned int v95;
  uint64_t v96;
  _QWORD *v97;
  void ***v98;
  uint64_t v99;
  uint64_t v100;
  _BYTE *v102;
  _BYTE v103[16];
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t (**v109)(_QWORD, uint64_t);
  void *v110;
  std::type_info *v111;
  int v112;
  int v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *v120;
  void *v121;
  void *__p;
  void *v123;
  uint64_t v124;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v125;
  int v126;
  int v127;
  uint64_t v128;
  void *v129;
  void ***v130;
  std::type_info *v131;
  __int16 v132;
  int v133;
  int v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  void **v138;
  void *v139;
  void *v140;
  void ***v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  void *v150;
  void *v151;
  uint64_t v152;

  v152 = *MEMORY[0x24BDAC8D0];
  v10 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  v11 = atomic_load((unsigned __int8 *)&qword_254989230);
  if ((v11 & 1) == 0 && __cxa_guard_acquire(&qword_254989230))
  {
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &unk_254989228, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989230);
  }
  if (*(int *)a1 < 2)
    v12 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_254989228;
  else
    v12 = sub_20C398E78((_DWORD *)a1);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v10);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103, PrimIndex, 1);
  if (!sub_20C521664((uint64_t *)v10, v12, a2, a3, a4, (uint64_t)v103, a5))
    return 0;
  v14 = *(_QWORD *)(*(_QWORD *)a5 + 16);
  v102 = a5;
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524CF0))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (i = 1;
          v104 != v106 || v105 != v107;
          i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (i)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v138);
      v17 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524CF0;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C5399F0;
      HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v17, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v19 = 0;
      else
        v19 = HasField;
      if (v19 == 1)
      {
        v20 = v136;
        if (v136 >= v137)
        {
          v21 = sub_20C45B3D8(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C031ADC(v136, (uint64_t)&v138);
          v21 = v20 + 152;
        }
        v136 = v21;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524CF0;
      v132 = 0;
      v129 = &unk_24C5399F0;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v30 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v31 = __ldxr(v30);
        while (__stlxr(v31 - 2, v30));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v32 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v33 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v34 = __ldxr(v33);
        while (__stlxr(v34 - 2, v33));
      }
      if (v32)
      {
        v35 = v136;
        if (v136 >= v137)
        {
          v36 = sub_20C45B3D8(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C031ADC(v136, (uint64_t)&v138);
          v36 = v35 + 152;
        }
        v136 = v36;
      }
      if ((v114 & 7) != 0)
      {
        v73 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v74 = __ldxr(v73);
        while (__stlxr(v74 - 2, v73));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v75 = v135;
    v76 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 == v136)
      goto LABEL_392;
    v129 = 0;
    v130 = 0;
    v131 = 0;
    while (1)
    {
      v76 -= 19;
      v141 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations(v76, (int **)&v129, (uint64_t)&v138);
      v77 = v141;
      if (v141 == &v138)
        break;
      if (v141)
      {
        v78 = 5;
LABEL_198:
        ((void (*)(void))(*v77)[v78])();
      }
      if (v76 == (_QWORD *)v75)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v138);
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SetExplicitItems(v79, (uint64_t)&v129);
        sub_20C031ADC((uint64_t)&v109, (uint64_t)&v138);
        sub_20C45BAB4(*(_QWORD *)v102, (uint64_t)&v109);
        v102[40] = 1;
        if (__p)
        {
          v123 = __p;
          operator delete(__p);
        }
        if (v120)
        {
          v121 = v120;
          operator delete(v120);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v110)
        {
          v111 = (std::type_info *)v110;
          operator delete(v110);
        }
        if (v150)
        {
          v151 = v150;
          operator delete(v150);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v139)
        {
          v140 = v139;
          operator delete(v139);
        }
        if (v129)
        {
          v130 = (void ***)v129;
          operator delete(v129);
        }
        goto LABEL_392;
      }
    }
    v77 = &v138;
    v78 = 4;
    goto LABEL_198;
  }
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D00))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (j = 1;
          v104 != v106 || v105 != v107;
          j = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (j)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v138);
      v25 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524D00;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A28;
      v26 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v25, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v27 = 0;
      else
        v27 = v26;
      if (v27 == 1)
      {
        v28 = v136;
        if (v136 >= v137)
        {
          v29 = sub_20C45BC0C(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C03298C(v136, (uint64_t)&v138);
          v29 = v28 + 152;
        }
        v136 = v29;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524D00;
      v132 = 0;
      v129 = &unk_24C539A28;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v44 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v45 = __ldxr(v44);
        while (__stlxr(v45 - 2, v44));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v46 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v47 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v48 = __ldxr(v47);
        while (__stlxr(v48 - 2, v47));
      }
      if (v46)
      {
        v49 = v136;
        if (v136 >= v137)
        {
          v50 = sub_20C45BC0C(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C03298C(v136, (uint64_t)&v138);
          v50 = v49 + 152;
        }
        v136 = v50;
      }
      if ((v114 & 7) != 0)
      {
        v80 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v81 = __ldxr(v80);
        while (__stlxr(v81 - 2, v80));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v82 = v135;
    v83 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 == v136)
      goto LABEL_392;
    v129 = 0;
    v130 = 0;
    v131 = 0;
    while (1)
    {
      v83 -= 19;
      v141 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations(v83, (uint64_t **)&v129, (uint64_t)&v138);
      v84 = v141;
      if (v141 == &v138)
        break;
      if (v141)
      {
        v85 = 5;
LABEL_255:
        ((void (*)(void))(*v84)[v85])();
      }
      if (v83 == (_QWORD *)v82)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v138);
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetExplicitItems(v86, (uint64_t)&v129);
        sub_20C03298C((uint64_t)&v109, (uint64_t)&v138);
        sub_20C45C1A0(*(_QWORD *)v102, (uint64_t)&v109);
        v102[40] = 1;
        if (__p)
        {
          v123 = __p;
          operator delete(__p);
        }
        if (v120)
        {
          v121 = v120;
          operator delete(v120);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v110)
        {
          v111 = (std::type_info *)v110;
          operator delete(v110);
        }
        if (v150)
        {
          v151 = v150;
          operator delete(v150);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v139)
        {
          v140 = v139;
          operator delete(v139);
        }
        if (v129)
        {
          v130 = (void ***)v129;
          operator delete(v129);
        }
        goto LABEL_392;
      }
    }
    v84 = &v138;
    v85 = 4;
    goto LABEL_255;
  }
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D10))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (k = 1;
          v104 != v106 || v105 != v107;
          k = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (k)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v138);
      v39 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524D10;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A60;
      v40 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v39, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v41 = 0;
      else
        v41 = v40;
      if (v41 == 1)
      {
        v42 = v136;
        if (v136 >= v137)
        {
          v43 = sub_20C45C274(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C033524(v136, (uint64_t)&v138);
          v43 = v42 + 152;
        }
        v136 = v43;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524D10;
      v132 = 0;
      v129 = &unk_24C539A60;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v58 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v59 = __ldxr(v58);
        while (__stlxr(v59 - 2, v58));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v60 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v61 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v62 = __ldxr(v61);
        while (__stlxr(v62 - 2, v61));
      }
      if (v60)
      {
        v63 = v136;
        if (v136 >= v137)
        {
          v64 = sub_20C45C274(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C033524(v136, (uint64_t)&v138);
          v64 = v63 + 152;
        }
        v136 = v64;
      }
      if ((v114 & 7) != 0)
      {
        v87 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v88 = __ldxr(v87);
        while (__stlxr(v88 - 2, v87));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v89 = v135;
    v90 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 == v136)
      goto LABEL_392;
    v129 = 0;
    v130 = 0;
    v131 = 0;
    while (1)
    {
      v90 -= 19;
      v141 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations(v90, (int **)&v129, (uint64_t)&v138);
      v91 = v141;
      if (v141 == &v138)
        break;
      if (v141)
      {
        v92 = 5;
LABEL_310:
        ((void (*)(void))(*v91)[v92])();
      }
      if (v90 == (_QWORD *)v89)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v138);
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SetExplicitItems(v93, (uint64_t)&v129);
        sub_20C033524((uint64_t)&v109, (uint64_t)&v138);
        sub_20C45C808(*(_QWORD *)v102, (uint64_t)&v109);
        v102[40] = 1;
        if (__p)
        {
          v123 = __p;
          operator delete(__p);
        }
        if (v120)
        {
          v121 = v120;
          operator delete(v120);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v110)
        {
          v111 = (std::type_info *)v110;
          operator delete(v110);
        }
        if (v150)
        {
          v151 = v150;
          operator delete(v150);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v139)
        {
          v140 = v139;
          operator delete(v139);
        }
        if (v129)
        {
          v130 = (void ***)v129;
          operator delete(v129);
        }
        goto LABEL_392;
      }
    }
    v91 = &v138;
    v92 = 4;
    goto LABEL_310;
  }
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D20))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (m = 1;
          v104 != v106 || v105 != v107;
          m = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (m)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v138);
      v53 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524D20;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A98;
      v54 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v53, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v55 = 0;
      else
        v55 = v54;
      if (v55 == 1)
      {
        v56 = v136;
        if (v136 >= v137)
        {
          v57 = sub_20C45C8DC(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C0340F4(v136, (uint64_t)&v138);
          v57 = v56 + 152;
        }
        v136 = v57;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524D20;
      v132 = 0;
      v129 = &unk_24C539A98;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v66 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v67 = __ldxr(v66);
        while (__stlxr(v67 - 2, v66));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v68 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v69 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v70 = __ldxr(v69);
        while (__stlxr(v70 - 2, v69));
      }
      if (v68)
      {
        v71 = v136;
        if (v136 >= v137)
        {
          v72 = sub_20C45C8DC(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C0340F4(v136, (uint64_t)&v138);
          v72 = v71 + 152;
        }
        v136 = v72;
      }
      if ((v114 & 7) != 0)
      {
        v94 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v95 = __ldxr(v94);
        while (__stlxr(v95 - 2, v94));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v96 = v135;
    v97 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 != v136)
    {
      v129 = 0;
      v130 = 0;
      v131 = 0;
      while (1)
      {
        v97 -= 19;
        v141 = 0;
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations(v97, (uint64_t **)&v129, (uint64_t)&v138);
        v98 = v141;
        if (v141 == &v138)
          break;
        if (v141)
        {
          v99 = 5;
LABEL_364:
          ((void (*)(void))(*v98)[v99])();
        }
        if (v97 == (_QWORD *)v96)
        {
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v138);
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SetExplicitItems(v100, (uint64_t)&v129);
          sub_20C0340F4((uint64_t)&v109, (uint64_t)&v138);
          sub_20C45CE70(*(_QWORD *)v102, (uint64_t)&v109);
          v102[40] = 1;
          if (__p)
          {
            v123 = __p;
            operator delete(__p);
          }
          if (v120)
          {
            v121 = v120;
            operator delete(v120);
          }
          if (v118)
          {
            v119 = v118;
            operator delete(v118);
          }
          if (v116)
          {
            v117 = v116;
            operator delete(v116);
          }
          if (v114)
          {
            v115 = v114;
            operator delete(v114);
          }
          if (v110)
          {
            v111 = (std::type_info *)v110;
            operator delete(v110);
          }
          if (v150)
          {
            v151 = v150;
            operator delete(v150);
          }
          if (v148)
          {
            v149 = v148;
            operator delete(v148);
          }
          if (v146)
          {
            v147 = v146;
            operator delete(v146);
          }
          if (v144)
          {
            v145 = v144;
            operator delete(v144);
          }
          if (v142)
          {
            v143 = v142;
            operator delete(v142);
          }
          if (v139)
          {
            v140 = v139;
            operator delete(v139);
          }
          if (v129)
          {
            v130 = (void ***)v129;
            operator delete(v129);
          }
          goto LABEL_392;
        }
      }
      v98 = &v138;
      v99 = 4;
      goto LABEL_364;
    }
LABEL_392:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v134);
    sub_20BFD265C(&v133);
    v138 = (void **)&v135;
    sub_20C45BB28(&v138);
  }
  else
  {
    if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D30))
      return sub_20C521804((uint64_t)v10, v12, a2, a4, (uint64_t)v103, (uint64_t)a5);
    if (!sub_20BDE150C(v14, (uint64_t)&stru_24C524D40))
      return 1;
    return sub_20C521E78((uint64_t)v10, v12, a2, a4, (uint64_t)v103, (uint64_t)a5);
  }
  return v22;
}

void sub_20C520E48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  uint64_t v51;

  sub_20C45C87C((uint64_t)&a19);
  sub_20C031968((_QWORD *)(v51 - 248));
  sub_20BFD1A18(&a46);
  *(_QWORD *)(v51 - 248) = &a48;
  sub_20C45BB28((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

void sub_20C521290(_BYTE *a1, uint64_t a2, _QWORD *a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, _QWORD *a5)
{
  uint64_t v10;
  _QWORD **v11;

  pxrInternal__aapl__pxrReserved__::VtDictionary::VtDictionary((pxrInternal__aapl__pxrReserved__::VtDictionary *)&v11, *(const pxrInternal__aapl__pxrReserved__::VtDictionary **)(*(_QWORD *)a1 + 8));
  if (sub_20C45A220(a2, a3, a4, a5, *(uint64_t (****)(_QWORD, uint64_t))a1))
  {
    a1[40] = 1;
    v10 = *(_QWORD *)a1;
    if (!strcmp((const char *)(0x800000020CAC17A0 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 16) + 8) & 0x7FFFFFFFFFFFFFFFLL)))
    {
      pxrInternal__aapl__pxrReserved__::VtDictionaryOverRecursive((pxrInternal__aapl__pxrReserved__ *)&v11, *(const char ***)(v10 + 8), 0);
      pxrInternal__aapl__pxrReserved__::VtDictionary::swap(*(uint64_t **)(*(_QWORD *)a1 + 8), (pxrInternal__aapl__pxrReserved__::VtDictionary *)&v11);
    }
  }
  sub_20BF49F14(&v11, 0);
}

void sub_20C521360(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BF49F14((_QWORD ***)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C521378(uint64_t a1, uint64_t a2, pxrInternal__aapl__pxrReserved__::PcpNodeRef *a3, uint64_t *a4, pxrInternal__aapl__pxrReserved__::SdfPath *a5, const pxrInternal__aapl__pxrReserved__::TfToken *a6, uint64_t *a7)
{
  uint64_t v14;
  uint64_t *LayerStack;
  pxrInternal__aapl__pxrReserved__::PcpLayerStack *v16;
  uint64_t Identifier;
  uint64_t *v18;
  unsigned int *v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t (***v22)(_QWORD, uint64_t);
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v23;
  char v24;
  int v25;
  uint64_t v26;
  unsigned int *v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v31;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v32;
  int v33;
  int v34;
  __int128 v35;
  _BYTE v36[24];
  uint64_t v37;
  _QWORD **v38;
  _QWORD **v39;
  uint64_t v40;
  uint64_t *v41;
  char *v42;
  _BYTE **v43;
  uint64_t v44;
  char v45;
  _BYTE *v46;

  pxrInternal__aapl__pxrReserved__::VtDictionary::VtDictionary((pxrInternal__aapl__pxrReserved__::VtDictionary *)&v38, *(const pxrInternal__aapl__pxrReserved__::VtDictionary **)(*(_QWORD *)a1 + 8));
  v14 = sub_20C45A368((uint64_t (****)(_QWORD, uint64_t))a1, a4, a5, a6, a7);
  if ((_DWORD)v14)
  {
    LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack(a3);
    v16 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_20C1FE500(LayerStack);
    Identifier = pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetIdentifier(v16);
    sub_20C1034E8(&v40, a4);
    sub_20C466E9C((uint64_t)v36, a3, &v40);
    v18 = v41;
    if (v41)
    {
      v19 = (unsigned int *)(v41 + 1);
      do
      {
        v20 = __ldxr(v19);
        v21 = v20 - 1;
      }
      while (__stlxr(v21, v19));
      if (!v21)
        (*(void (**)(uint64_t *))(*v18 + 8))(v18);
    }
    v22 = *(uint64_t (****)(_QWORD, uint64_t))a1;
    v23 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)*a4;
    v31 = a2;
    v32 = v23;
    sub_20BF1DD04((uint64_t *)&v32);
    sub_20BFD6E54(&v33, a5);
    sub_20BFD6EA4(&v34, (_DWORD *)a5 + 1);
    v35 = *(_OWORD *)a3;
    v24 = *(_BYTE *)(a1 + 41);
    v25 = strcmp((const char *)(0x800000020CAC17A0 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)v22[2][1] & 0x7FFFFFFFFFFFFFFFLL));
    if (!v25)
    {
      v39 = 0;
      pxrInternal__aapl__pxrReserved__::VtDictionary::swap((uint64_t *)v22[1], (pxrInternal__aapl__pxrReserved__::VtDictionary *)&v39);
      v46 = v36;
      v45 = v24;
      v40 = Identifier + 32;
      v41 = &v31;
      v42 = &v45;
      v43 = &v46;
      v44 = a1 + 8;
      sub_20C467028((pxrInternal__aapl__pxrReserved__::VtDictionary *)&v39, (uint64_t)&v40);
      pxrInternal__aapl__pxrReserved__::VtDictionary::swap((uint64_t *)v22[1], (pxrInternal__aapl__pxrReserved__::VtDictionary *)&v39);
      sub_20BF49F14(&v39, 0);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v34);
    sub_20BFD265C(&v33);
    sub_20C103234(&v32);
    if (!v25)
    {
      pxrInternal__aapl__pxrReserved__::VtDictionaryOverRecursive((pxrInternal__aapl__pxrReserved__ *)&v38, *(const char ***)(*(_QWORD *)a1 + 8), 0);
      pxrInternal__aapl__pxrReserved__::VtDictionary::swap(*(uint64_t **)(*(_QWORD *)a1 + 8), (pxrInternal__aapl__pxrReserved__::VtDictionary *)&v38);
    }
    v26 = v37;
    if (v37)
    {
      v27 = (unsigned int *)(v37 + 8);
      do
      {
        v28 = __ldxr(v27);
        v29 = v28 - 1;
      }
      while (__stlxr(v29, v27));
      if (!v29)
        (*(void (**)(uint64_t))(*(_QWORD *)v26 + 8))(v26);
    }
  }
  sub_20BF49F14(&v38, 0);
  return v14;
}

void sub_20C5215B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int *a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  va_list va;

  va_start(va, a13);
  if (a10)
  {
    v14 = a10 + 2;
    do
    {
      v15 = __ldxr(v14);
      v16 = v15 - 1;
    }
    while (__stlxr(v16, v14));
    if (!v16)
      (*(void (**)(unsigned int *))(*(_QWORD *)a10 + 8))(a10);
  }
  sub_20BF49F14((_QWORD ***)va, 0);
  _Unwind_Resume(a1);
}

BOOL sub_20C521664(uint64_t *a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, int a5, uint64_t a6, _BYTE *a7)
{
  char v14;
  BOOL i;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  unint64_t *v21;
  unint64_t PrimDefinition;
  _BOOL8 v23;
  _QWORD v25[2];
  int v26;
  int v27;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v26);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v27);
  v14 = 0;
  for (i = 1;
        ;
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a6))
  {
    v16 = *(_QWORD *)(a6 + 16);
    v17 = *(_QWORD *)(a6 + 24);
    if (v16 == *(_QWORD *)(a6 + 32) && v17 == *(_QWORD *)(a6 + 40))
      break;
    if (i)
    {
      sub_20C453680(a6, a2, (int *)v25);
      sub_20BFD3EBC(&v26, (int *)v25);
      sub_20BFD3F10(&v27, (int *)v25 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v25 + 1);
      sub_20BFD265C(v25);
      v16 = *(_QWORD *)(a6 + 16);
      v17 = *(_QWORD *)(a6 + 24);
    }
    v19 = *a1;
    v25[0] = v16;
    v25[1] = v17;
    v20 = sub_20C521378((uint64_t)a7, v19, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v25, *(uint64_t **)(a6 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v26, a3, a4);
    if (a7[40])
      goto LABEL_15;
    v14 |= v20;
  }
  if (a5)
  {
    v21 = (unint64_t *)a1[3];
    PrimDefinition = atomic_load(v21 + 7);
    if (!PrimDefinition)
      PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v21);
    sub_20C521290(a7, PrimDefinition, a2, a3, a4);
  }
  if ((v14 & 1) != 0)
  {
LABEL_15:
    v23 = 1;
    goto LABEL_17;
  }
  v23 = a7[40] != 0;
LABEL_17:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v27);
  sub_20BFD265C(&v26);
  return v23;
}

void sub_20C5217DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C521804(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, char a4, uint64_t a5, uint64_t a6)
{
  BOOL i;
  _QWORD *v9;
  int HasField;
  int v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void ***v26;
  uint64_t v27;
  uint64_t *v28;
  _BYTE v35[8];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v43;
  int v44;
  int v45;
  uint64_t v46;
  void **v47;
  void ***v48;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v49;
  int v50;
  int v51;
  uint64_t v52;
  void **v53[3];
  __int16 v54;
  int v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  void **v60;
  _BYTE v61[16];
  void ***v62;
  _BYTE v63[24];
  _BYTE v64[24];
  _BYTE v65[24];
  _BYTE v66[24];
  _QWORD v67[5];

  v67[3] = *MEMORY[0x24BDAC8D0];
  v57 = 0;
  v58 = 0;
  v59 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v55);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v56);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, (int *)&v60);
      sub_20BFD3EBC(&v55, (int *)&v60);
      sub_20BFD3F10(&v56, (int *)&v60 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v60 + 1);
      sub_20BFD265C(&v60);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v60);
    v9 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a5 + 48));
    LOWORD(v50) = 0;
    v48 = &v60;
    v49 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D30;
    v47 = (void **)&unk_24C52BEB0;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v9, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v55, a3, (uint64_t (***)(_QWORD, uint64_t))&v47);
    if ((_BYTE)v50)
      v11 = 0;
    else
      v11 = HasField;
    if (v11 == 1)
    {
      v12 = v58;
      if (v58 >= v59)
      {
        v13 = sub_20C45CF44(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C02F650(v58, (uint64_t)&v60);
        v13 = v12 + 152;
      }
      v58 = v13;
    }
    v47 = (void **)v67;
    sub_20BDE5038(&v47);
    v47 = (void **)v66;
    sub_20BDE5038(&v47);
    v47 = (void **)v65;
    sub_20BDE5038(&v47);
    v47 = (void **)v64;
    sub_20BDE5038(&v47);
    v47 = (void **)v63;
    sub_20BDE5038(&v47);
    v47 = (void **)v61;
    sub_20BDE5038(&v47);
  }
  if ((a4 & 1) != 0)
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v60);
    v53[2] = (void **)&stru_24C524D30;
    v54 = 0;
    v53[0] = (void **)&unk_24C52BEB0;
    v53[1] = (void **)&v60;
    LODWORD(v42) = 0;
    v43 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v44);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v45);
    v46 = 0;
    sub_20C4535E0((uint64_t)&v47, (uint64_t)v53, (uint64_t)&v42);
    if ((v46 & 7) != 0)
    {
      v14 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v45);
    sub_20BFD265C(&v44);
    if (v43)
      sub_20C35C614(v43);
    v42 = 0;
    v16 = sub_20C45B318(a1, a2, a3, &v42, (uint64_t)&v47);
    if ((v42 & 7) != 0)
    {
      v17 = (unsigned int *)(v42 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
    if (v16)
    {
      v19 = v58;
      if (v58 >= v59)
      {
        v20 = sub_20C45CF44(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C02F650(v58, (uint64_t)&v60);
        v20 = v19 + 152;
      }
      v58 = v20;
    }
    if ((v52 & 7) != 0)
    {
      v21 = (unsigned int *)(v52 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v51);
    sub_20BFD265C(&v50);
    if (v49)
      sub_20C35C614(v49);
    v47 = (void **)v67;
    sub_20BDE5038(&v47);
    v47 = (void **)v66;
    sub_20BDE5038(&v47);
    v47 = (void **)v65;
    sub_20BDE5038(&v47);
    v47 = (void **)v64;
    sub_20BDE5038(&v47);
    v47 = (void **)v63;
    sub_20BDE5038(&v47);
    v47 = (void **)v61;
    sub_20BDE5038(&v47);
  }
  v23 = v57;
  v24 = v58;
  if (v57 != v58)
  {
    v47 = 0;
    v48 = 0;
    v25 = v58;
    v49 = 0;
    while (1)
    {
      v25 -= 152;
      v62 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations(v25, (uint64_t *)&v47, (uint64_t)&v60);
      v26 = v62;
      if (v62 == &v60)
        break;
      if (v62)
      {
        v27 = 5;
LABEL_43:
        ((void (*)(void))(*v26)[v27])();
      }
      if (v25 == v23)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v60);
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetExplicitItems(v28, (uint64_t)&v47);
        sub_20C02F650((uint64_t)v35, (uint64_t)&v60);
        sub_20C45D304(*(_QWORD *)a6, (uint64_t)v35);
        *(_BYTE *)(a6 + 40) = 1;
        v53[0] = (void **)&v41;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v40;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v39;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v38;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v37;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v36;
        sub_20BDE5038(v53);
        v53[0] = (void **)v67;
        sub_20BDE5038(v53);
        v53[0] = (void **)v66;
        sub_20BDE5038(v53);
        v53[0] = (void **)v65;
        sub_20BDE5038(v53);
        v53[0] = (void **)v64;
        sub_20BDE5038(v53);
        v53[0] = (void **)v63;
        sub_20BDE5038(v53);
        v53[0] = (void **)v61;
        sub_20BDE5038(v53);
        v60 = (void **)&v47;
        sub_20BDE5038(&v60);
        goto LABEL_46;
      }
    }
    v26 = &v60;
    v27 = 4;
    goto LABEL_43;
  }
LABEL_46:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v56);
  sub_20BFD265C(&v55);
  v60 = (void **)&v57;
  sub_20C45D378(&v60);
  return v23 != v24;
}

void sub_20C521D5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45CEE4((uint64_t)&a38);
  sub_20C020EAC((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C45D378((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_20C521E78(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, char a4, uint64_t a5, uint64_t a6)
{
  BOOL i;
  _QWORD *v9;
  int HasField;
  int v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  void ***v26;
  uint64_t v27;
  unsigned __int8 *v28;
  _BYTE v35[8];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t *v47;
  void ***v48;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v49;
  int v50;
  int v51;
  uint64_t v52;
  void **v53[3];
  __int16 v54;
  int v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  void **v60;
  _BYTE v61[16];
  void ***v62;
  _BYTE v63[24];
  _BYTE v64[24];
  _BYTE v65[24];
  _BYTE v66[24];
  _QWORD v67[5];

  v67[3] = *MEMORY[0x24BDAC8D0];
  v57 = 0;
  v58 = 0;
  v59 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v55);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v56);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, (int *)&v60);
      sub_20BFD3EBC(&v55, (int *)&v60);
      sub_20BFD3F10(&v56, (int *)&v60 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v60 + 1);
      sub_20BFD265C(&v60);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v60);
    v9 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a5 + 48));
    LOWORD(v50) = 0;
    v48 = &v60;
    v49 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D40;
    v47 = (uint64_t *)&unk_24C539538;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v9, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v55, a3, (uint64_t (***)(_QWORD, uint64_t))&v47);
    if ((_BYTE)v50)
      v11 = 0;
    else
      v11 = HasField;
    if (v11 == 1)
    {
      v12 = v58;
      if (v58 >= v59)
      {
        v13 = sub_20C45D45C(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C0366AC(v58, (uint64_t)&v60);
        v13 = v12 + 152;
      }
      v58 = v13;
    }
    v47 = v67;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v66;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v65;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v47);
  }
  if ((a4 & 1) != 0)
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v60);
    v53[2] = (void **)&stru_24C524D40;
    v54 = 0;
    v53[0] = (void **)&unk_24C539538;
    v53[1] = (void **)&v60;
    LODWORD(v42) = 0;
    v43 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v44);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v45);
    v46 = 0;
    sub_20C4535E0((uint64_t)&v47, (uint64_t)v53, (uint64_t)&v42);
    if ((v46 & 7) != 0)
    {
      v14 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v45);
    sub_20BFD265C(&v44);
    if (v43)
      sub_20C35C614(v43);
    v42 = 0;
    v16 = sub_20C45B318(a1, a2, a3, &v42, (uint64_t)&v47);
    if ((v42 & 7) != 0)
    {
      v17 = (unsigned int *)(v42 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
    if (v16)
    {
      v19 = v58;
      if (v58 >= v59)
      {
        v20 = sub_20C45D45C(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C0366AC(v58, (uint64_t)&v60);
        v20 = v19 + 152;
      }
      v58 = v20;
    }
    if ((v52 & 7) != 0)
    {
      v21 = (unsigned int *)(v52 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v51);
    sub_20BFD265C(&v50);
    if (v49)
      sub_20C35C614(v49);
    v47 = v67;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v66;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v65;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v47);
  }
  v23 = v57;
  v24 = v58;
  if (v57 != v58)
  {
    v47 = 0;
    v48 = 0;
    v25 = (_QWORD *)v58;
    v49 = 0;
    while (1)
    {
      v25 -= 19;
      v62 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations(v25, &v47, (uint64_t)&v60);
      v26 = v62;
      if (v62 == &v60)
        break;
      if (v62)
      {
        v27 = 5;
LABEL_43:
        ((void (*)(void))(*v26)[v27])();
      }
      if (v25 == (_QWORD *)v23)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v60);
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SetExplicitItems(v28, &v47);
        sub_20C0366AC((uint64_t)v35, (uint64_t)&v60);
        sub_20C45D578(*(_QWORD *)a6, (uint64_t)v35);
        *(_BYTE *)(a6 + 40) = 1;
        v53[0] = (void **)&v41;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v40;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v39;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v38;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v37;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v36;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v67;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v66;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v65;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v64;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v63;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v61;
        sub_20BEEB2B8(v53);
        v60 = (void **)&v47;
        sub_20BEEB2B8(&v60);
        goto LABEL_46;
      }
    }
    v26 = &v60;
    v27 = 4;
    goto LABEL_43;
  }
LABEL_46:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v56);
  sub_20BFD265C(&v55);
  v60 = (void **)&v57;
  sub_20C451A98(&v60);
  return v23 != v24;
}

void sub_20C5223D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45D3FC((uint64_t)&a38);
  sub_20C03507C((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C451A98((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C5224EC(uint64_t a1, uint64_t a2)
{
  sub_20BF4D0C4(a2, *(const void *****)(a1 + 8));
  return 1;
}

uint64_t sub_20C522510(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result;
  char *v5;
  uint64_t v6;
  _QWORD **v7;

  result = sub_20BF4A73C(a2);
  if ((_DWORD)result)
  {
    v6 = *((_QWORD *)a2 + 1);
    if ((v6 & 4) != 0)
      v7 = (_QWORD **)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v6 & 0xFFFFFFFFFFFFFFF8)
                                                                                             + 168))(a2);
    else
      v7 = *(_QWORD ***)a2;
    return pxrInternal__aapl__pxrReserved__::operator==(v7, *(uint64_t **)(a1 + 8), v5);
  }
  return result;
}

void sub_20C52256C(void **a1@<X8>, uint64_t a2, void **a3)
{
  a3 = a1;
  sub_20C00E25C(&a3);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCacheRequest::_DataDeleter::operator()(int a1, void **__p)
{
  void *v3;

  if (__p)
  {
    v3 = *__p;
    if (*__p)
    {
      __p[1] = v3;
      operator delete(v3);
    }
    operator delete(__p);
  }
}

pxrInternal__aapl__pxrReserved__::UsdStageCache *pxrInternal__aapl__pxrReserved__::UsdStageCache::UsdStageCache(pxrInternal__aapl__pxrReserved__::UsdStageCache *this)
{
  _OWORD *v2;

  v2 = operator new(0xA8uLL);
  *v2 = 0u;
  v2[1] = 0u;
  *((_DWORD *)v2 + 8) = 1065353216;
  *(_OWORD *)((char *)v2 + 40) = 0u;
  *(_OWORD *)((char *)v2 + 56) = 0u;
  *((_DWORD *)v2 + 18) = 1065353216;
  v2[5] = 0u;
  v2[6] = 0u;
  *((_DWORD *)v2 + 28) = 1065353216;
  *(_OWORD *)((char *)v2 + 120) = 0u;
  *(_OWORD *)((char *)v2 + 136) = 0u;
  *(_OWORD *)((char *)v2 + 152) = 0u;
  *(_QWORD *)this = v2;
  *((_QWORD *)this + 1) = 850045863;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_QWORD *)this + 8) = 0;
  return this;
}

{
  _OWORD *v2;

  v2 = operator new(0xA8uLL);
  *v2 = 0u;
  v2[1] = 0u;
  *((_DWORD *)v2 + 8) = 1065353216;
  *(_OWORD *)((char *)v2 + 40) = 0u;
  *(_OWORD *)((char *)v2 + 56) = 0u;
  *((_DWORD *)v2 + 18) = 1065353216;
  v2[5] = 0u;
  v2[6] = 0u;
  *((_DWORD *)v2 + 28) = 1065353216;
  *(_OWORD *)((char *)v2 + 120) = 0u;
  *(_OWORD *)((char *)v2 + 136) = 0u;
  *(_OWORD *)((char *)v2 + 152) = 0u;
  *(_QWORD *)this = v2;
  *((_QWORD *)this + 1) = 850045863;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_QWORD *)this + 8) = 0;
  return this;
}

pxrInternal__aapl__pxrReserved__::UsdStageCache *pxrInternal__aapl__pxrReserved__::UsdStageCache::UsdStageCache(pxrInternal__aapl__pxrReserved__::UsdStageCache *this, const pxrInternal__aapl__pxrReserved__::UsdStageCache *a2)
{
  std::mutex *v4;
  _QWORD *v5;
  uint64_t v6;

  *(_QWORD *)this = 0;
  *((_QWORD *)this + 1) = 850045863;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_QWORD *)this + 8) = 0;
  v4 = (std::mutex *)((char *)a2 + 8);
  std::mutex::lock((std::mutex *)((char *)a2 + 8));
  v5 = operator new(0xA8uLL);
  sub_20C525C54(v5, *(_QWORD *)a2);
  v6 = *(_QWORD *)this;
  *(_QWORD *)this = v5;
  if (v6)
    sub_20C527B40((uint64_t)this, v6);
  std::mutex::unlock(v4);
  return this;
}

void sub_20C522724(_Unwind_Exception *a1)
{
  uint64_t *v1;
  std::mutex *v2;
  std::mutex *v3;
  void *v4;
  uint64_t v6;

  operator delete(v4);
  std::mutex::unlock(v3);
  std::mutex::~mutex(v2);
  v6 = *v1;
  *v1 = 0;
  if (v6)
    sub_20C527B40((uint64_t)v1, v6);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCache::~UsdStageCache(pxrInternal__aapl__pxrReserved__::UsdStageCache *this)
{
  uint64_t v2;

  std::mutex::~mutex((std::mutex *)((char *)this + 8));
  v2 = *(_QWORD *)this;
  *(_QWORD *)this = 0;
  if (v2)
    sub_20C527B40((uint64_t)this, v2);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCache::swap(pxrInternal__aapl__pxrReserved__::UsdStageCache *this, pxrInternal__aapl__pxrReserved__::UsdStageCache *a2)
{
  std::mutex *v4;
  uint64_t v5;
  const pxrInternal__aapl__pxrReserved__::UsdStageCache *v6;
  const pxrInternal__aapl__pxrReserved__::UsdStageCache *v7;
  const char *v8;
  char *v9;
  void *v10;
  void *p_p;
  void *__p;
  char v13;
  void *v14;
  char v15;

  if (this != a2)
  {
    v4 = (std::mutex *)((char *)this + 8);
    std::mutex::lock((std::mutex *)((char *)this + 8));
    std::mutex::lock((std::mutex *)((char *)a2 + 8));
    v5 = *(_QWORD *)this;
    *(_QWORD *)this = *(_QWORD *)a2;
    *(_QWORD *)a2 = v5;
    std::mutex::unlock((std::mutex *)((char *)a2 + 8));
    std::mutex::unlock(v4);
    if (sub_20C286E00(11))
    {
      pxrInternal__aapl__pxrReserved__::UsdDescribe(this, v6);
      pxrInternal__aapl__pxrReserved__::UsdDescribe(a2, v7);
      if (v15 >= 0)
        v10 = &v14;
      else
        v10 = v14;
      if (v13 >= 0)
        p_p = &__p;
      else
        p_p = __p;
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"swapped %s with %s\n", v8, v9, v10, p_p);
      if (v13 < 0)
        operator delete(__p);
      if (v15 < 0)
        operator delete(v14);
    }
  }
}

void sub_20C5228A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a16 < 0)
    operator delete(__p);
  if (a22 < 0)
    operator delete(a17);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdDescribe(pxrInternal__aapl__pxrReserved__ *this, const pxrInternal__aapl__pxrReserved__::UsdStageCache *a2)
{
  const char *v3;
  char *v4;
  unint64_t v5;
  const char *v6;
  char *v7;
  _QWORD *v8;
  void *p_p;
  std::mutex *v10;
  uint64_t v11;
  const char *v12;
  char *v13;
  void *v14;
  _QWORD v15[2];
  char v16;
  void *__p;
  char v18;
  void *v19[2];
  unsigned __int8 v20;

  pxrInternal__aapl__pxrReserved__::UsdStageCache::GetDebugName(this, (uint64_t)v19);
  if ((v20 & 0x80u) == 0)
    v5 = v20;
  else
    v5 = (unint64_t)v19[1];
  if (v5)
  {
    pxrInternal__aapl__pxrReserved__::UsdStageCache::GetDebugName(this, (uint64_t)v15);
    if (v16 >= 0)
      v8 = v15;
    else
      v8 = (_QWORD *)v15[0];
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"\"%s\"", v6, v7, v8);
  }
  else
  {
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%p", v3, v4, this);
  }
  if (v18 >= 0)
    p_p = &__p;
  else
    p_p = __p;
  v10 = (std::mutex *)((char *)this + 8);
  std::mutex::lock((std::mutex *)((char *)this + 8));
  v11 = *(_QWORD *)(*(_QWORD *)this + 24);
  std::mutex::unlock(v10);
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"stage cache %s (size=%zu)", v12, v13, p_p, v11);
  if (!v5)
  {
    if ((v18 & 0x80000000) == 0)
      goto LABEL_21;
    v14 = __p;
    goto LABEL_20;
  }
  if (v18 < 0)
    operator delete(__p);
  if (v16 < 0)
  {
    v14 = (void *)v15[0];
LABEL_20:
    operator delete(v14);
  }
LABEL_21:
  if ((char)v20 < 0)
    operator delete(v19[0]);
}

void sub_20C522A18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a29 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStageCache::operator=(uint64_t a1, pxrInternal__aapl__pxrReserved__ *a2)
{
  const pxrInternal__aapl__pxrReserved__::UsdStageCache *v4;
  const pxrInternal__aapl__pxrReserved__::UsdStageCache *v5;
  const char *v6;
  char *v7;
  void **v8;
  void *p_p;
  void *v10;
  void *__p;
  char v13;
  void *v14[2];
  char v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  if ((pxrInternal__aapl__pxrReserved__ *)a1 != a2)
  {
    if (sub_20C286E00(11))
    {
      pxrInternal__aapl__pxrReserved__::UsdDescribe((pxrInternal__aapl__pxrReserved__ *)a1, v4);
      pxrInternal__aapl__pxrReserved__::UsdDescribe(a2, v5);
      v8 = v14;
      if (v15 < 0)
        v8 = (void **)v14[0];
      if (v13 >= 0)
        p_p = &__p;
      else
        p_p = __p;
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"assigning %s from %s\n", v6, v7, v8, p_p);
      if (v13 < 0)
        operator delete(__p);
      if (v15 < 0)
        operator delete(v14[0]);
    }
    pxrInternal__aapl__pxrReserved__::UsdStageCache::UsdStageCache((pxrInternal__aapl__pxrReserved__::UsdStageCache *)v14, a2);
    std::mutex::lock((std::mutex *)(a1 + 8));
    v10 = *(void **)a1;
    *(void **)a1 = v14[0];
    v14[0] = v10;
    std::mutex::unlock((std::mutex *)(a1 + 8));
    pxrInternal__aapl__pxrReserved__::UsdStageCache::~UsdStageCache((pxrInternal__aapl__pxrReserved__::UsdStageCache *)v14);
  }
  return a1;
}

void sub_20C522BA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a17 < 0)
    operator delete(__p);
  if (a23 < 0)
    operator delete(a18);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCache::GetAllStages(pxrInternal__aapl__pxrReserved__::UsdStageCache *this@<X0>, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter ***a2@<X8>)
{
  std::mutex *v4;
  uint64_t v5;
  uint64_t **v6;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v7;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v8;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v9[2];

  v4 = (std::mutex *)((char *)this + 8);
  std::mutex::lock((std::mutex *)((char *)this + 8));
  v5 = *(_QWORD *)this;
  sub_20C527B9C(a2, *(_QWORD *)(v5 + 24));
  v6 = *(uint64_t ***)(v5 + 56);
  if (v6)
  {
    v7 = *a2;
    do
    {
      v9[0] = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)v6[2];
      sub_20BF1DD04((uint64_t *)v9);
      v8 = *v7;
      *v7 = v9[0];
      v9[0] = 0;
      sub_20BF1D8F4((int)v7, v8);
      sub_20C455C74(v9);
      v6 = (uint64_t **)*v6;
      ++v7;
    }
    while (v6);
  }
  std::mutex::unlock(v4);
}

void sub_20C522C88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  std::mutex *v10;

  std::mutex::unlock(v10);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStageCache::Size(pxrInternal__aapl__pxrReserved__::UsdStageCache *this)
{
  std::mutex *v2;
  uint64_t v3;

  v2 = (std::mutex *)((char *)this + 8);
  std::mutex::lock((std::mutex *)((char *)this + 8));
  v3 = *(_QWORD *)(*(_QWORD *)this + 24);
  std::mutex::unlock(v2);
  return v3;
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **pxrInternal__aapl__pxrReserved__::UsdStageCache::RequestStage@<X0>(uint64_t a1@<X0>, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a2@<X1>, uint64_t a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v6;
  std::mutex *v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  int v12;
  _QWORD *v13;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v23;
  char *v24;
  char *v25;
  char *v26;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v27;
  int v28;
  unint64_t *Instance;
  unint64_t v30;
  unint64_t v31;
  unsigned int ***v32;
  unsigned int **v33;
  unsigned int **v34;
  unsigned int *v35;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v36;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  _BYTE *v43;
  _BYTE *v44;
  int64_t v45;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v47;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v48[4];
  char v49;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v50;
  unint64_t v51;
  unsigned int v52;
  uint64_t v53;

  v52 = 0;
  v6 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)&v53;
  v53 = 0;
  v7 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  v8 = (_QWORD *)(*(_QWORD *)a1 + 56);
  while (1)
  {
    v8 = (_QWORD *)*v8;
    if (!v8)
      break;
    if ((*(unsigned int (**)(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *, _QWORD *))(*(_QWORD *)a2 + 16))(a2, v8 + 2))
    {
      *(_QWORD *)a3 = v8[2];
      sub_20BF1DD04((uint64_t *)a3);
      *(_BYTE *)(a3 + 8) = 0;
      std::mutex::unlock(v7);
      return sub_20C455C74(v6);
    }
  }
  v9 = *(uint64_t **)(*(_QWORD *)a1 + 120);
  v10 = *(uint64_t **)(*(_QWORD *)a1 + 128);
  while (v9 != v10)
  {
    v11 = *v9;
    if ((*(unsigned int (**)(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *, uint64_t))(*(_QWORD *)a2 + 24))(a2, *v9))
    {
      pxrInternal__aapl__pxrReserved__::UsdStageCacheRequest::_Subscribe(v11, &v52);
      break;
    }
    ++v9;
  }
  v12 = atomic_load(&v52);
  if (v12 <= 0)
  {
    v13 = *(_QWORD **)a1;
    v14 = *(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter ***)(*(_QWORD *)a1 + 128);
    v15 = *(_QWORD *)(*(_QWORD *)a1 + 136);
    if ((unint64_t)v14 >= v15)
    {
      v17 = v13[15];
      v18 = ((uint64_t)v14 - v17) >> 3;
      if ((unint64_t)(v18 + 1) >> 61)
        sub_20BDDF694();
      v19 = v15 - v17;
      v20 = v19 >> 2;
      if (v19 >> 2 <= (unint64_t)(v18 + 1))
        v20 = v18 + 1;
      if ((unint64_t)v19 >= 0x7FFFFFFFFFFFFFF8)
        v21 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v21 = v20;
      if (v21)
        v22 = (char *)sub_20BDDF6A8(*(_QWORD *)a1 + 136, v21);
      else
        v22 = 0;
      v23 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)&v22[8 * v18];
      v24 = &v22[8 * v21];
      *v23 = a2;
      v16 = v23 + 1;
      v26 = (char *)v13[15];
      v25 = (char *)v13[16];
      if (v25 != v26)
      {
        do
        {
          v27 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)*((_QWORD *)v25 - 1);
          v25 -= 8;
          *--v23 = v27;
        }
        while (v25 != v26);
        v25 = (char *)v13[15];
      }
      v13[15] = v23;
      v13[16] = v16;
      v13[17] = v24;
      if (v25)
        operator delete(v25);
    }
    else
    {
      *v14 = a2;
      v16 = v14 + 1;
    }
    v13[16] = v16;
  }
  std::mutex::unlock(v7);
  v28 = atomic_load(&v52);
  if (v28 < 1)
  {
    v47 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)&v53;
    pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v51);
    (*(void (**)(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **__return_ptr, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *))(*(_QWORD *)a2 + 32))(&v50, a2);
    if (v50)
      goto LABEL_37;
    Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
    if (!Instance)
      Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
    v30 = v51;
    v31 = atomic_load(Instance + 18);
    if (v30 >= v31
      || pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v51, (pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr *)Instance))
    {
      v48[0] = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)"usd/stageCache.cpp";
      v48[1] = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)"RequestStage";
      v48[2] = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)420;
      v48[3] = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)"std::pair<UsdStageRefPtr, BOOL> pxrIn"
                                                                                   "ternal__aapl__pxrReserved__::UsdStage"
                                                                                   "Cache::RequestStage(UsdStageCacheRequest &&)";
      v49 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v48, 3, (pxrInternal__aapl__pxrReserved__ *)"UsdStageCacheRequest failed to manufacture a valid stage.", &v53);
    }
    if (v50)
LABEL_37:
      pxrInternal__aapl__pxrReserved__::UsdStageCache::Insert(a1, (uint64_t *)&v50);
    std::mutex::lock(v7);
    v32 = (unsigned int ***)*((_QWORD *)a2 + 1);
    if (v32)
    {
      v33 = *v32;
      v34 = v32[1];
      if (*v32 != v34)
      {
        do
        {
          v35 = *v33;
          v37 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)(*v33 + 2);
          v36 = *v37;
          *v37 = v50;
          sub_20BF1DD04((uint64_t *)&v50);
          sub_20BF1D8F4((int)v37, v36);
          atomic_store(2u, v35);
          ++v33;
        }
        while (v33 != v34);
      }
    }
    v38 = *(_QWORD *)a1;
    v39 = *(_QWORD **)(*(_QWORD *)a1 + 120);
    v40 = *(_QWORD **)(*(_QWORD *)a1 + 128);
    v48[0] = a2;
    v41 = sub_20BEBD100(v39, v40, v48);
    v42 = v41;
    v6 = v47;
    if (*(_QWORD *)(*(_QWORD *)a1 + 128) != (_QWORD)v41)
    {
      v43 = *(_BYTE **)(*(_QWORD *)a1 + 128);
      v44 = *(_BYTE **)(v38 + 128);
      v45 = v44 - v43;
      if (v44 != v43)
        memmove(v41, v43, v44 - v43);
      *(_QWORD *)(v38 + 128) = (char *)v42 + v45;
    }
    std::mutex::unlock(v7);
    *(_QWORD *)a3 = v50;
    sub_20BF1DD04((uint64_t *)a3);
    *(_BYTE *)(a3 + 8) = 1;
    sub_20C455C74(&v50);
    pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v51);
  }
  else
  {
    sub_20C523214((uint64_t)&v52, (uint64_t *)v48);
    *(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)a3 = v48[0];
    v48[0] = 0;
    *(_BYTE *)(a3 + 8) = 0;
    sub_20C455C74(v48);
  }
  return sub_20C455C74(v6);
}

void sub_20C523090(_Unwind_Exception *a1, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v8;
  va_list va;
  va_list va1;

  va_start(va1, a7);
  va_start(va, a7);
  v8 = va_arg(va1, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *);
  sub_20C455C74((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)va);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)va1);
  sub_20C455C74(a2);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCacheRequest::_Subscribe(uint64_t a1, unsigned int *a2)
{
  void **v3;
  unint64_t v5;
  unsigned int **v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  unsigned int **v13;
  char *v14;
  char *v15;
  char *v16;
  unsigned int *v17;

  v3 = *(void ***)(a1 + 8);
  if (!v3)
  {
    v3 = (void **)operator new(0x18uLL);
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    *(_QWORD *)(a1 + 8) = v3;
  }
  v5 = (unint64_t)v3[2];
  v6 = (unsigned int **)v3[1];
  if ((unint64_t)v6 >= v5)
  {
    v8 = ((char *)v6 - (_BYTE *)*v3) >> 3;
    if ((unint64_t)(v8 + 1) >> 61)
      sub_20BDDF694();
    v9 = v5 - (_QWORD)*v3;
    v10 = v9 >> 2;
    if (v9 >> 2 <= (unint64_t)(v8 + 1))
      v10 = v8 + 1;
    if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFF8)
      v11 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v11 = v10;
    if (v11)
      v12 = (char *)sub_20BDDF6A8((uint64_t)(v3 + 2), v11);
    else
      v12 = 0;
    v13 = (unsigned int **)&v12[8 * v8];
    v14 = &v12[8 * v11];
    *v13 = a2;
    v7 = v13 + 1;
    v16 = (char *)*v3;
    v15 = (char *)v3[1];
    if (v15 != *v3)
    {
      do
      {
        v17 = (unsigned int *)*((_QWORD *)v15 - 1);
        v15 -= 8;
        *--v13 = v17;
      }
      while (v15 != v16);
      v15 = (char *)*v3;
    }
    *v3 = v13;
    v3[1] = v7;
    v3[2] = v14;
    if (v15)
      operator delete(v15);
  }
  else
  {
    *v6 = a2;
    v7 = v6 + 1;
  }
  v3[1] = v7;
  atomic_store(1u, a2);
}

uint64_t sub_20C523214@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unsigned int v4;

  while (1)
  {
    v4 = atomic_load((unsigned int *)a1);
    if (v4 != 1)
      break;
    sched_yield();
  }
  *a2 = *(_QWORD *)(a1 + 8);
  return sub_20BF1DD04(a2);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStageCache::Insert(uint64_t a1, uint64_t *a2)
{
  std::mutex *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  char v11;
  pxrInternal__aapl__pxrReserved__::UsdStage *v12;
  const char *v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  _QWORD v18[4];
  char v19;
  char v20;
  char *v21;
  const char *v22;
  uint64_t v23;
  const char *v24;
  char v25;
  unint64_t v26;

  if (*a2)
  {
    sub_20C524AF0((uint64_t)v18, a1, (uint64_t)"inserted");
    v4 = (std::mutex *)(a1 + 8);
    std::mutex::lock((std::mutex *)(a1 + 8));
    v5 = *(_QWORD *)a1;
    v6 = sub_20BEB4074((_QWORD *)(v5 + 40), a2);
    if (v6)
    {
      v7 = v6[3];
    }
    else
    {
      do
      {
        v8 = __ldaxr(&qword_25473D070);
        v9 = v8 + 1;
      }
      while (__stlxr(v9, &qword_25473D070));
      v26 = v9;
      sub_20C526E6C(v5 + 40, a2, a2, &v26);
      if ((v10 & 1) == 0)
      {
        v21 = "usd/stageCache.cpp";
        v22 = "Insert";
        v23 = 102;
        v24 = "std::pair<Id, BOOL> pxrInternal__aapl__pxrReserved__::(anonymous namespace)::StageContainer::Insert(const "
              "UsdStageRefPtr &)";
        v25 = 0;
        pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v21, "_byStage.emplace(stage, id).second", 0);
      }
      sub_20C527150(v5, &v26, &v26, a2);
      if ((v11 & 1) == 0)
      {
        v21 = "usd/stageCache.cpp";
        v22 = "Insert";
        v23 = 103;
        v24 = "std::pair<Id, BOOL> pxrInternal__aapl__pxrReserved__::(anonymous namespace)::StageContainer::Insert(const "
              "UsdStageRefPtr &)";
        v25 = 0;
        pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v21, "_byId.emplace(id, stage).second", 0);
      }
      v12 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C39A7A8(a2);
      pxrInternal__aapl__pxrReserved__::UsdStage::GetRootLayer(v12, (uint64_t *)&v21);
      sub_20C527434((_QWORD *)(v5 + 80), (uint64_t)&v21, a2);
      v13 = v22;
      if (v22)
      {
        v14 = (unsigned int *)(v22 + 8);
        do
        {
          v15 = __ldxr(v14);
          v16 = v15 - 1;
        }
        while (__stlxr(v16, v14));
        if (!v16)
          (*(void (**)(const char *))(*(_QWORD *)v13 + 8))(v13);
      }
      v7 = v26;
      if (v20)
        sub_20C524B3C((uint64_t)v18, a2, v26);
    }
    std::mutex::unlock(v4);
    sub_20C524C80((uint64_t)v18);
  }
  else
  {
    v18[0] = "usd/stageCache.cpp";
    v18[1] = "Insert";
    v18[2] = 649;
    v18[3] = "UsdStageCache::Id pxrInternal__aapl__pxrReserved__::UsdStageCache::Insert(const UsdStageRefPtr &)";
    v19 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v18, 1, (pxrInternal__aapl__pxrReserved__ *)"Inserted null stage in cache");
    return -1;
  }
  return v7;
}

void sub_20C52345C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  std::mutex *v16;

  if (a16)
    sub_20C96B340(a16);
  std::mutex::unlock(v16);
  sub_20C524C80((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCache::Find(pxrInternal__aapl__pxrReserved__ *a1@<X0>, void *a2@<X1>, pxrInternal__aapl__pxrReserved__ **a3@<X8>)
{
  std::mutex *v5;
  void **v6;
  pxrInternal__aapl__pxrReserved__ *v7;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v8;
  pxrInternal__aapl__pxrReserved__ *v9;
  const char *v10;
  char *v11;
  void **v12;
  void **v13;
  const pxrInternal__aapl__pxrReserved__::UsdStageCache *v14;
  const char *v15;
  char *v16;
  void *v17;
  void *p_p;
  void *__p;
  char v20;
  void *v21;
  char v22;
  void *v23[2];
  char v24;
  void *v25[2];
  char v26;
  void *v27;

  v27 = a2;
  *a3 = 0;
  v5 = (std::mutex *)((char *)a1 + 8);
  std::mutex::lock((std::mutex *)((char *)a1 + 8));
  v6 = (void **)sub_20C527C88(*(_QWORD **)a1, &v27);
  if (v6)
  {
    v25[0] = v6[3];
    sub_20BF1DD04((uint64_t *)v25);
    v7 = (pxrInternal__aapl__pxrReserved__ *)v25[0];
  }
  else
  {
    v7 = 0;
    v25[0] = 0;
  }
  v8 = *a3;
  *a3 = v7;
  sub_20BF1DD04((uint64_t *)v25);
  sub_20BF1D8F4((int)a3, v8);
  sub_20C455C74((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)v25);
  std::mutex::unlock(v5);
  if (sub_20C286E00(11))
  {
    v9 = *a3;
    if (*a3)
    {
      pxrInternal__aapl__pxrReserved__::UsdDescribe(a3, v23);
      if (v24 >= 0)
        v12 = v23;
      else
        v12 = (void **)v23[0];
      v13 = v25;
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"found %s", v10, v11, v12);
      if (v26 < 0)
        v13 = (void **)v25[0];
    }
    else
    {
      v13 = (void **)"failed to find stage";
    }
    __p = v27;
    sub_20C526D4C();
    pxrInternal__aapl__pxrReserved__::UsdDescribe(a1, v14);
    v17 = &v21;
    if (v22 < 0)
      v17 = v21;
    if (v20 >= 0)
      p_p = &__p;
    else
      p_p = __p;
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"%s for id=%s in %s\n", v15, v16, v13, v17, p_p);
    if (v20 < 0)
      operator delete(__p);
    if (v22 < 0)
      operator delete(v21);
    if (v9)
    {
      if (v26 < 0)
        operator delete(v25[0]);
      if (v24 < 0)
        operator delete(v23[0]);
    }
  }
}

void sub_20C52364C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v35;

  if (a29 < 0)
    operator delete(__p);
  sub_20C455C74(v35);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCache::FindOneMatching(pxrInternal__aapl__pxrReserved__ *a1@<X0>, uint64_t *a2@<X1>, pxrInternal__aapl__pxrReserved__ **a3@<X8>)
{
  std::mutex *v6;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v7;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v8;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v9;
  pxrInternal__aapl__pxrReserved__ *v10;
  const char *v11;
  char *v12;
  void **v13;
  const char *v14;
  const pxrInternal__aapl__pxrReserved__::UsdStageCache *v15;
  int v16;
  const char *v17;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v18;
  uint64_t Identifier;
  const char *v20;
  char *v21;
  uint64_t v22;
  const char *v23;
  char *v24;
  void *p_p;
  void *__p;
  char v27;
  void *v28;
  char v29;
  void *v30[2];
  char v31;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v32[2];
  char v33;

  *a3 = 0;
  v6 = (std::mutex *)((char *)a1 + 8);
  std::mutex::lock((std::mutex *)((char *)a1 + 8));
  v7 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)sub_20C203534((_QWORD *)(*(_QWORD *)a1 + 80), (uint64_t)a2);
  if (v7)
  {
    v32[0] = v7[4];
    sub_20BF1DD04((uint64_t *)v32);
    v8 = v32[0];
  }
  else
  {
    v8 = 0;
    v32[0] = 0;
  }
  v9 = *a3;
  *a3 = v8;
  sub_20BF1DD04((uint64_t *)v32);
  sub_20BF1D8F4((int)a3, v9);
  sub_20C455C74(v32);
  std::mutex::unlock(v6);
  if (!sub_20C286E00(11))
    return;
  v10 = *a3;
  if (*a3)
  {
    pxrInternal__aapl__pxrReserved__::UsdDescribe(a3, v30);
    if (v31 >= 0)
      v13 = v30;
    else
      v13 = (void **)v30[0];
    v14 = (const char *)v32;
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"found %s", v11, v12, v13);
    if (v33 < 0)
      v14 = (const char *)v32[0];
    if (*a3)
    {
      v16 = 0;
      v17 = "";
      goto LABEL_21;
    }
  }
  else
  {
    v14 = "failed to find stage";
  }
  v18 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(a2);
  Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v18);
  if (*(char *)(Identifier + 23) >= 0)
    v22 = Identifier;
  else
    v22 = *(_QWORD *)Identifier;
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)" @%s@", v20, v21, v22);
  if (v29 >= 0)
    v17 = (const char *)&v28;
  else
    v17 = (const char *)v28;
  v16 = 1;
LABEL_21:
  pxrInternal__aapl__pxrReserved__::UsdDescribe(a1, v15);
  if (v27 >= 0)
    p_p = &__p;
  else
    p_p = __p;
  pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"%s by rootLayer%s in %s\n", v23, v24, v14, v17, p_p);
  if (v27 < 0)
  {
    operator delete(__p);
    if (!v16)
      goto LABEL_30;
LABEL_28:
    if (v29 < 0)
      operator delete(v28);
    goto LABEL_30;
  }
  if (v16)
    goto LABEL_28;
LABEL_30:
  if (v10)
  {
    if (v33 < 0)
      operator delete(v32[0]);
    if (v31 < 0)
      operator delete(v30[0]);
  }
}

void sub_20C5238EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v30;

  if (a30 < 0)
    operator delete(__p);
  sub_20C455C74(v30);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCache::FindOneMatching(pxrInternal__aapl__pxrReserved__ *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, pxrInternal__aapl__pxrReserved__ **a4@<X8>)
{
  std::mutex *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t *v12;
  pxrInternal__aapl__pxrReserved__::UsdStage *v13;
  _BOOL4 v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  unsigned int v18;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v19;
  pxrInternal__aapl__pxrReserved__ *v20;
  const char *v21;
  char *v22;
  void **v23;
  const char *v24;
  const pxrInternal__aapl__pxrReserved__::UsdStageCache *v25;
  int v26;
  int v27;
  const char *v28;
  const char *v29;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v30;
  uint64_t Identifier;
  const char *v32;
  char *v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t *);
  pxrInternal__aapl__pxrReserved__::SdfLayer *v36;
  uint64_t v37;
  const char *v38;
  char *v39;
  uint64_t v40;
  const char *v41;
  char *v42;
  void *p_p;
  void *__p;
  char v45;
  void *v46;
  char v47;
  void *v48;
  char v49;
  void *v50[2];
  char v51;
  char *v52;
  uint64_t v53;
  char v54;

  *a4 = 0;
  v8 = (std::mutex *)((char *)a1 + 8);
  std::mutex::lock((std::mutex *)((char *)a1 + 8));
  v9 = sub_20C527D58((_QWORD *)(*(_QWORD *)a1 + 80), (uint64_t)a2);
  v11 = v10;
  while (v9 != v11)
  {
    v12 = v9 + 4;
    v13 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C39A7A8(v9 + 4);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetSessionLayer(v13, (uint64_t *)&v52);
    v14 = sub_20BEB560C((uint64_t)&v52, (uint64_t)a3);
    v15 = v53;
    if (v53)
    {
      v16 = (unsigned int *)(v53 + 8);
      do
      {
        v17 = __ldxr(v16);
        v18 = v17 - 1;
      }
      while (__stlxr(v18, v16));
      if (!v18)
        (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
    }
    if (v14)
    {
      v19 = *a4;
      *a4 = (pxrInternal__aapl__pxrReserved__ *)*v12;
      sub_20BF1DD04(v12);
      sub_20BF1D8F4((int)a4, v19);
      break;
    }
    v9 = (_QWORD *)*v9;
  }
  std::mutex::unlock(v8);
  if (sub_20C286E00(11))
  {
    v20 = *a4;
    if (*a4)
    {
      pxrInternal__aapl__pxrReserved__::UsdDescribe(a4, v50);
      if (v51 >= 0)
        v23 = v50;
      else
        v23 = (void **)v50[0];
      v24 = (const char *)&v52;
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"found %s", v21, v22, v23);
      if (v54 < 0)
        v24 = v52;
      if (*a4)
      {
        v26 = 0;
        v27 = 0;
        v28 = "";
        v29 = "";
        goto LABEL_37;
      }
    }
    else
    {
      v24 = "failed to find stage";
    }
    v30 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(a2);
    Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v30);
    if (*(char *)(Identifier + 23) >= 0)
      v34 = Identifier;
    else
      v34 = *(_QWORD *)Identifier;
    v28 = (const char *)&v48;
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)" @%s@", v32, v33, v34);
    if (v49 < 0)
      v28 = (const char *)v48;
    if (*a4)
    {
      v27 = 0;
      v29 = "";
    }
    else
    {
      v35 = sub_20BFD2F78(a3);
      if (v25 & 1 | (unint64_t)v35)
      {
        v36 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(a3);
        v37 = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v36);
        if (*(char *)(v37 + 23) >= 0)
          v40 = v37;
        else
          v40 = *(_QWORD *)v37;
        pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)" @%s@", v38, v39, v40);
        if (v47 >= 0)
          v29 = (const char *)&v46;
        else
          v29 = (const char *)v46;
        v26 = 1;
        v27 = 1;
LABEL_37:
        pxrInternal__aapl__pxrReserved__::UsdDescribe(a1, v25);
        if (v45 >= 0)
          p_p = &__p;
        else
          p_p = __p;
        pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"%s by rootLayer%s, sessionLayer%s in %s\n", v41, v42, v24, v28, v29, p_p);
        if (v45 < 0)
        {
          operator delete(__p);
          if (!v27)
            goto LABEL_46;
        }
        else if (!v27)
        {
LABEL_46:
          if (v26 && v49 < 0)
            operator delete(v48);
          if (v20)
          {
            if (v54 < 0)
              operator delete(v52);
            if (v51 < 0)
              operator delete(v50[0]);
          }
          return;
        }
        if (v47 < 0)
          operator delete(v46);
        goto LABEL_46;
      }
      v27 = 0;
      v29 = " <null>";
    }
    v26 = 1;
    goto LABEL_37;
  }
}

{
  std::mutex *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  pxrInternal__aapl__pxrReserved__::UsdStage *v12;
  int v13;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v14;
  pxrInternal__aapl__pxrReserved__ *v15;
  const char *v16;
  char *v17;
  void **v18;
  void **v19;
  const pxrInternal__aapl__pxrReserved__::UsdStageCache *v20;
  int v21;
  const char *v22;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v23;
  uint64_t Identifier;
  const char *v25;
  char *v26;
  uint64_t v27;
  const char *v28;
  char *v29;
  void *p_p;
  void *__p;
  char v32;
  void *v33;
  char v34;
  void *v35[2];
  char v36;
  void *v37[2];
  char v38;

  *a4 = 0;
  v8 = (std::mutex *)((char *)a1 + 8);
  std::mutex::lock((std::mutex *)((char *)a1 + 8));
  v9 = sub_20C527D58((_QWORD *)(*(_QWORD *)a1 + 80), (uint64_t)a2);
  v11 = v10;
  if (v9 != v10)
  {
    while (1)
    {
      v12 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C39A7A8(v9 + 4);
      pxrInternal__aapl__pxrReserved__::UsdStage::GetPathResolverContext(v12, (uint64_t)v37);
      v13 = pxrInternal__aapl__pxrReserved__::ArResolverContext::operator==((uint64_t *)v37, a3);
      v35[0] = v37;
      sub_20BDE9EB0((void ***)v35);
      if (v13)
        break;
      v9 = (_QWORD *)*v9;
      if (v9 == v11)
        goto LABEL_6;
    }
    v14 = *a4;
    *a4 = (pxrInternal__aapl__pxrReserved__ *)v9[4];
    sub_20BF1DD04(v9 + 4);
    sub_20BF1D8F4((int)a4, v14);
  }
LABEL_6:
  std::mutex::unlock(v8);
  if (sub_20C286E00(11))
  {
    v15 = *a4;
    if (*a4)
    {
      pxrInternal__aapl__pxrReserved__::UsdDescribe(a4, v35);
      if (v36 >= 0)
        v18 = v35;
      else
        v18 = (void **)v35[0];
      v19 = v37;
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"found %s", v16, v17, v18);
      if (v38 < 0)
        v19 = (void **)v37[0];
      if (*a4)
      {
        v21 = 0;
        v22 = "";
        goto LABEL_23;
      }
    }
    else
    {
      v19 = (void **)"failed to find stage";
    }
    v23 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(a2);
    Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v23);
    if (*(char *)(Identifier + 23) >= 0)
      v27 = Identifier;
    else
      v27 = *(_QWORD *)Identifier;
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)" @%s@", v25, v26, v27);
    if (v34 >= 0)
      v22 = (const char *)&v33;
    else
      v22 = (const char *)v33;
    v21 = 1;
LABEL_23:
    pxrInternal__aapl__pxrReserved__::UsdDescribe(a1, v20);
    if (v32 >= 0)
      p_p = &__p;
    else
      p_p = __p;
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"%s by rootLayer%s, pathResolverContext in %s\n", v28, v29, v19, v22, p_p);
    if (v32 < 0)
    {
      operator delete(__p);
      if (!v21)
        goto LABEL_32;
    }
    else if (!v21)
    {
LABEL_32:
      if (v15)
      {
        if (v38 < 0)
          operator delete(v37[0]);
        if (v36 < 0)
          operator delete(v35[0]);
      }
      return;
    }
    if (v34 < 0)
      operator delete(v33);
    goto LABEL_32;
  }
}

void sub_20C523C84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v37;
  uint64_t v38;
  uint64_t v39;

  if (a31 < 0)
    operator delete(__p);
  if (v38)
  {
    if (*(char *)(v39 - 81) < 0)
      operator delete(*(void **)(v39 - 104));
    if (a37 < 0)
      operator delete(a32);
  }
  sub_20C455C74(v37);
  _Unwind_Resume(a1);
}

void sub_20C523FB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v36;

  if (a30 < 0)
    operator delete(__p);
  sub_20C455C74(v36);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCache::FindOneMatching(pxrInternal__aapl__pxrReserved__ *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, pxrInternal__aapl__pxrReserved__ **a5@<X8>)
{
  std::mutex *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  pxrInternal__aapl__pxrReserved__::UsdStage *v13;
  pxrInternal__aapl__pxrReserved__::UsdStage *v14;
  int v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int v19;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v20;
  pxrInternal__aapl__pxrReserved__ *v21;
  const char *v22;
  char *v23;
  void *v24;
  const pxrInternal__aapl__pxrReserved__::UsdStageCache *v25;
  const char *v26;
  int v27;
  int v28;
  void **v29;
  const char *v30;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v31;
  uint64_t Identifier;
  const char *v33;
  char *v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t *);
  pxrInternal__aapl__pxrReserved__::SdfLayer *v37;
  uint64_t v38;
  const char *v39;
  char *v40;
  uint64_t v41;
  const char *v42;
  char *v43;
  void *p_p;
  void *__p;
  char v47;
  void *v48;
  char v49;
  void *v50[2];
  char v51;
  void *v52;
  uint64_t v53;
  char v54;
  void *v55[2];
  char v56;

  *a5 = 0;
  v9 = (std::mutex *)((char *)a1 + 8);
  std::mutex::lock((std::mutex *)((char *)a1 + 8));
  v10 = sub_20C527D58((_QWORD *)(*(_QWORD *)a1 + 80), (uint64_t)a2);
  v12 = v11;
  if (v10 != v11)
  {
    while (1)
    {
      v13 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C39A7A8(v10 + 4);
      pxrInternal__aapl__pxrReserved__::UsdStage::GetSessionLayer(v13, (uint64_t *)&v52);
      if (sub_20BEB560C((uint64_t)&v52, (uint64_t)a3))
      {
        v14 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C39A7A8(v10 + 4);
        pxrInternal__aapl__pxrReserved__::UsdStage::GetPathResolverContext(v14, (uint64_t)v55);
        v15 = pxrInternal__aapl__pxrReserved__::ArResolverContext::operator==((uint64_t *)v55, a4);
        v50[0] = v55;
        sub_20BDE9EB0((void ***)v50);
      }
      else
      {
        v15 = 0;
      }
      v16 = v53;
      if (v53)
      {
        v17 = (unsigned int *)(v53 + 8);
        do
        {
          v18 = __ldxr(v17);
          v19 = v18 - 1;
        }
        while (__stlxr(v19, v17));
        if (!v19)
          (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
      }
      if (v15)
        break;
      v10 = (_QWORD *)*v10;
      if (v10 == v12)
        goto LABEL_14;
    }
    v20 = *a5;
    *a5 = (pxrInternal__aapl__pxrReserved__ *)v10[4];
    sub_20BF1DD04(v10 + 4);
    sub_20BF1D8F4((int)a5, v20);
  }
LABEL_14:
  std::mutex::unlock(v9);
  if (sub_20C286E00(11))
  {
    v21 = *a5;
    if (*a5)
    {
      pxrInternal__aapl__pxrReserved__::UsdDescribe(a5, &v52);
      if (v54 >= 0)
        v24 = &v52;
      else
        v24 = v52;
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"found %s", v22, v23, v24);
      if (v56 >= 0)
        v26 = (const char *)v55;
      else
        v26 = (const char *)v55[0];
      if (*a5)
      {
        v27 = 0;
        v28 = 0;
        v29 = (void **)"";
        v30 = "";
        goto LABEL_42;
      }
    }
    else
    {
      v26 = "failed to find stage";
    }
    v31 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(a2);
    Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v31);
    if (*(char *)(Identifier + 23) >= 0)
      v35 = Identifier;
    else
      v35 = *(_QWORD *)Identifier;
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)" @%s@", v33, v34, v35);
    if (v51 >= 0)
      v29 = v50;
    else
      v29 = (void **)v50[0];
    if (*a5)
    {
      v28 = 0;
      v30 = "";
    }
    else
    {
      v36 = sub_20BFD2F78(a3);
      if (v25 & 1 | (unint64_t)v36)
      {
        v37 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(a3);
        v38 = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v37);
        if (*(char *)(v38 + 23) >= 0)
          v41 = v38;
        else
          v41 = *(_QWORD *)v38;
        pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)" @%s@", v39, v40, v41);
        if (v49 >= 0)
          v30 = (const char *)&v48;
        else
          v30 = (const char *)v48;
        v27 = 1;
        v28 = 1;
LABEL_42:
        pxrInternal__aapl__pxrReserved__::UsdDescribe(a1, v25);
        if (v47 >= 0)
          p_p = &__p;
        else
          p_p = __p;
        pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"%s by rootLayer%s, sessionLayer%s, pathResolverContext in %s\n", v42, v43, v26, v29, v30, p_p);
        if (v47 < 0)
        {
          operator delete(__p);
          if (!v28)
            goto LABEL_51;
        }
        else if (!v28)
        {
LABEL_51:
          if (v27 && v51 < 0)
            operator delete(v50[0]);
          if (v21)
          {
            if (v56 < 0)
              operator delete(v55[0]);
            if (v54 < 0)
              operator delete(v52);
          }
          return;
        }
        if (v49 < 0)
          operator delete(v48);
        goto LABEL_51;
      }
      v28 = 0;
      v30 = " <null>";
    }
    v27 = 1;
    goto LABEL_42;
  }
}

void sub_20C5243A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38)
{
  uint64_t v38;
  uint64_t v39;

  if (a32 < 0)
    operator delete(__p);
  if (v38)
  {
    if (*(char *)(v39 - 89) < 0)
      operator delete(*(void **)(v39 - 112));
    if (a38 < 0)
      operator delete(a33);
  }
  sub_20C455C74(a14);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCache::FindAllMatching(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  std::mutex *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;

  v6 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  v7 = (_QWORD *)(*(_QWORD *)a1 + 80);
  a3[1] = 0;
  a3[2] = 0;
  *a3 = 0;
  v8 = sub_20C527D58(v7, a2);
  v10 = v9;
  while (v8 != v10)
  {
    sub_20C52455C(a3, v8 + 4);
    v8 = (_QWORD *)*v8;
  }
  std::mutex::unlock(v6);
}

void sub_20C524538(_Unwind_Exception *a1, uint64_t a2, ...)
{
  std::mutex *v2;
  va_list va;

  va_start(va, a2);
  sub_20C527C18((void ***)va);
  std::mutex::unlock(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_20C52455C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t result;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;

  v6 = a1[2];
  v4 = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(uint64_t **)(v4 - 8);
  if ((unint64_t)v7 >= v6)
  {
    v10 = ((uint64_t)v7 - *a1) >> 3;
    if ((unint64_t)(v10 + 1) >> 61)
      sub_20BDDF694();
    v11 = v5 - *a1;
    v12 = v11 >> 2;
    if (v11 >> 2 <= (unint64_t)(v10 + 1))
      v12 = v10 + 1;
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      v13 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v13 = v12;
    v19 = v4;
    if (v13)
      v14 = (uint64_t *)sub_20BDDF6A8(v4, v13);
    else
      v14 = 0;
    v15 = v14;
    v16 = &v14[v10];
    v17 = v16;
    v18 = &v14[v13];
    *v16 = *a2;
    sub_20BF1DD04(&v14[v10]);
    ++v17;
    sub_20C527DB4(a1, &v15);
    v9 = (uint64_t *)a1[1];
    result = sub_20C527EBC((uint64_t)&v15);
  }
  else
  {
    *v7 = *a2;
    result = sub_20BF1DD04(v7);
    v9 = v7 + 1;
    a1[1] = (uint64_t)(v7 + 1);
  }
  a1[1] = (uint64_t)v9;
  return result;
}

void sub_20C524654(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v10 + 8) = v11;
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCache::FindAllMatching(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  std::mutex *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  pxrInternal__aapl__pxrReserved__::UsdStage *v13;
  _BOOL4 v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;

  v8 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  v9 = (_QWORD *)(*(_QWORD *)a1 + 80);
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  v10 = sub_20C527D58(v9, a2);
  v12 = v11;
  while (v10 != v12)
  {
    v13 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C39A7A8(v10 + 4);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetSessionLayer(v13, &v19);
    v14 = sub_20BEB560C((uint64_t)&v19, a3);
    v15 = v20;
    if (v20)
    {
      v16 = (unsigned int *)(v20 + 8);
      do
      {
        v17 = __ldxr(v16);
        v18 = v17 - 1;
      }
      while (__stlxr(v18, v16));
      if (!v18)
        (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
    }
    if (v14)
      sub_20C52455C(a4, v10 + 4);
    v10 = (_QWORD *)*v10;
  }
  std::mutex::unlock(v8);
}

void sub_20C524760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  std::mutex *v9;

  sub_20C527C18(&a9);
  std::mutex::unlock(v9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCache::FindAllMatching(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  std::mutex *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *i;
  pxrInternal__aapl__pxrReserved__::UsdStage *v13;
  int v14;
  uint64_t v15[3];
  void **v16;

  v8 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  v9 = (_QWORD *)(*(_QWORD *)a1 + 80);
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  v10 = sub_20C527D58(v9, a2);
  for (i = v11; v10 != i; v10 = (_QWORD *)*v10)
  {
    v13 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C39A7A8(v10 + 4);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPathResolverContext(v13, (uint64_t)v15);
    v14 = pxrInternal__aapl__pxrReserved__::ArResolverContext::operator==(v15, a3);
    v16 = (void **)v15;
    sub_20BDE9EB0(&v16);
    if (v14)
      sub_20C52455C(a4, v10 + 4);
  }
  std::mutex::unlock(v8);
}

void sub_20C524890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  std::mutex *v9;

  sub_20C527C18(&a9);
  std::mutex::unlock(v9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCache::FindAllMatching(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X8>)
{
  std::mutex *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *i;
  pxrInternal__aapl__pxrReserved__::UsdStage *v15;
  pxrInternal__aapl__pxrReserved__::UsdStage *v16;
  int v17;
  uint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22[3];
  uint64_t v23;
  uint64_t v24;
  void **v25;

  v10 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  v11 = (_QWORD *)(*(_QWORD *)a1 + 80);
  a5[1] = 0;
  a5[2] = 0;
  *a5 = 0;
  v12 = sub_20C527D58(v11, a2);
  for (i = v13; v12 != i; v12 = (_QWORD *)*v12)
  {
    v15 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C39A7A8(v12 + 4);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetSessionLayer(v15, &v23);
    if (sub_20BEB560C((uint64_t)&v23, a3))
    {
      v16 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C39A7A8(v12 + 4);
      pxrInternal__aapl__pxrReserved__::UsdStage::GetPathResolverContext(v16, (uint64_t)v22);
      v17 = pxrInternal__aapl__pxrReserved__::ArResolverContext::operator==(v22, a4);
      v25 = (void **)v22;
      sub_20BDE9EB0(&v25);
    }
    else
    {
      v17 = 0;
    }
    v18 = v24;
    if (v24)
    {
      v19 = (unsigned int *)(v24 + 8);
      do
      {
        v20 = __ldxr(v19);
        v21 = v20 - 1;
      }
      while (__stlxr(v21, v19));
      if (!v21)
        (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
    }
    if (v17)
      sub_20C52455C(a5, v12 + 4);
  }
  std::mutex::unlock(v10);
}

void sub_20C524A04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  std::mutex *v9;

  sub_20C527C18(&a9);
  std::mutex::unlock(v9);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStageCache::GetId(uint64_t a1, _QWORD *a2)
{
  std::mutex *v4;
  _QWORD *v5;
  uint64_t v6;

  v4 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  v5 = sub_20BEDA270((_QWORD *)(*(_QWORD *)a1 + 40), a2);
  if (v5)
    v6 = v5[3];
  else
    v6 = -1;
  std::mutex::unlock(v4);
  return v6;
}

void sub_20C524ADC(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C524AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = a2;
  *(_QWORD *)(a1 + 32) = a3;
  *(_BYTE *)(a1 + 40) = sub_20C286E00(11);
  return a1;
}

void sub_20C524B28(_Unwind_Exception *a1)
{
  void **v1;

  sub_20C526E14(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C524B3C(uint64_t result, uint64_t *a2, uint64_t a3)
{
  uint64_t *v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t *v14;
  _QWORD v15[2];
  uint64_t *v16;
  char *v17;
  uint64_t v18;

  if (*(_BYTE *)(result + 40))
  {
    v5 = (uint64_t *)result;
    v6 = *(_QWORD *)(result + 16);
    v7 = *(uint64_t **)(result + 8);
    if ((unint64_t)v7 >= v6)
    {
      v9 = ((uint64_t)v7 - *(_QWORD *)result) >> 4;
      if ((unint64_t)(v9 + 1) >> 60)
        sub_20BDDF694();
      v10 = v6 - *(_QWORD *)result;
      v11 = v10 >> 3;
      if (v10 >> 3 <= (unint64_t)(v9 + 1))
        v11 = v9 + 1;
      if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF0)
        v12 = 0xFFFFFFFFFFFFFFFLL;
      else
        v12 = v11;
      v18 = result + 16;
      if (v12)
      {
        if (v12 >> 60)
          sub_20BDDF5B4();
        v13 = (char *)operator new(16 * v12);
      }
      else
      {
        v13 = 0;
      }
      v14 = (uint64_t *)&v13[16 * v9];
      v15[0] = v13;
      v15[1] = v14;
      v16 = v14;
      v17 = &v13[16 * v12];
      *v14 = *a2;
      sub_20BF1DD04(v14);
      v14[1] = a3;
      v16 += 2;
      sub_20C5275A4(v5, v15);
      v8 = (uint64_t *)v5[1];
      result = sub_20C52767C((uint64_t)v15);
    }
    else
    {
      *v7 = *a2;
      result = sub_20BF1DD04(v7);
      v7[1] = a3;
      v8 = v7 + 2;
      v5[1] = (uint64_t)(v7 + 2);
    }
    v5[1] = (uint64_t)v8;
  }
  return result;
}

void sub_20C524C60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v10 + 8) = v11;
  _Unwind_Resume(exception_object);
}

void **sub_20C524C80(uint64_t a1)
{
  unint64_t v2;
  const pxrInternal__aapl__pxrReserved__::UsdStageCache *v3;
  void **v4;
  uint64_t v5;
  int v6;
  void **v7;
  const char *v8;
  char *v9;
  void **v10;
  void *p_p;
  const pxrInternal__aapl__pxrReserved__::UsdStageCache *v12;
  const char *v13;
  char *v14;
  void **v15;
  pxrInternal__aapl__pxrReserved__ **v16;
  pxrInternal__aapl__pxrReserved__ **v17;
  int v18;
  void **v19;
  const char *v20;
  char *v21;
  void **v22;
  void **v23;
  void *__p;
  char v26;
  void *v27[2];
  char v28;
  void *v29[2];
  char v30;
  uint64_t v31;

  if (*(_BYTE *)(a1 + 40))
  {
    v2 = *(_QWORD *)(a1 + 8) - *(_QWORD *)a1;
    if (v2 == 16)
    {
      if (sub_20C286E00(11))
      {
        v4 = v29;
        pxrInternal__aapl__pxrReserved__::UsdDescribe(*(pxrInternal__aapl__pxrReserved__ **)(a1 + 24), v3);
        if (v30 < 0)
          v4 = (void **)v29[0];
        v5 = *(_QWORD *)(a1 + 32);
        pxrInternal__aapl__pxrReserved__::UsdDescribe(*(pxrInternal__aapl__pxrReserved__ ***)a1, v27);
        v6 = v28;
        v7 = (void **)v27[0];
        v31 = *(_QWORD *)(*(_QWORD *)a1 + 8);
        sub_20C526D4C();
        v10 = v27;
        if (v6 < 0)
          v10 = v7;
        if (v26 >= 0)
          p_p = &__p;
        else
          p_p = __p;
        pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"%s %s %s (id=%s)\n", v8, v9, v4, v5, v10, p_p);
        if (v26 < 0)
          operator delete(__p);
        if (v28 < 0)
          operator delete(v27[0]);
        if (v30 < 0)
          operator delete(v29[0]);
      }
    }
    else if (v2 >= 0x11)
    {
      if (sub_20C286E00(11))
      {
        pxrInternal__aapl__pxrReserved__::UsdDescribe(*(pxrInternal__aapl__pxrReserved__ **)(a1 + 24), v12);
        v15 = v30 >= 0 ? v29 : (void **)v29[0];
        pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"%s %s %zu entries:\n", v13, v14, v15, *(_QWORD *)(a1 + 32), (uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 4);
        if (v30 < 0)
          operator delete(v29[0]);
      }
      v16 = *(pxrInternal__aapl__pxrReserved__ ***)a1;
      v17 = *(pxrInternal__aapl__pxrReserved__ ***)(a1 + 8);
      if (*(pxrInternal__aapl__pxrReserved__ ***)a1 != v17)
      {
        do
        {
          if (sub_20C286E00(11))
          {
            pxrInternal__aapl__pxrReserved__::UsdDescribe(v16, v29);
            v18 = v30;
            v19 = (void **)v29[0];
            __p = v16[1];
            sub_20C526D4C();
            if (v18 >= 0)
              v22 = v29;
            else
              v22 = v19;
            if (v28 >= 0)
              v23 = v27;
            else
              v23 = (void **)v27[0];
            pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"      %s (id=%s)\n", v20, v21, v22, v23);
            if (v28 < 0)
              operator delete(v27[0]);
            if (v30 < 0)
              operator delete(v29[0]);
          }
          v16 += 2;
        }
        while (v16 != v17);
      }
    }
  }
  return sub_20C526E14((void **)a1);
}

void sub_20C524EA8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0)
    operator delete(__p);
  sub_20BDC12F4(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdStageCache::Erase(uint64_t a1, uint64_t a2)
{
  std::mutex *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _BYTE v8[48];
  uint64_t v9;
  _QWORD v10[4];
  char v11;
  uint64_t v12;

  v9 = a2;
  sub_20C524AF0((uint64_t)v8, a1, (uint64_t)"erased");
  v3 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  if (v8[40])
  {
    v4 = sub_20C527C88(*(_QWORD **)a1, &v9);
    if (v4)
      sub_20C524B3C((uint64_t)v8, v4 + 3, v4[2]);
  }
  v5 = *(_QWORD **)a1;
  v12 = v9;
  v6 = sub_20C527838(v5, &v12);
  if (v6)
  {
    sub_20C5276C8((uint64_t)v5, v6 + 3);
    if (sub_20C527964(v5 + 5, v6 + 3) != 1)
    {
      v10[0] = "usd/stageCache.cpp";
      v10[1] = "Erase";
      v10[2] = 127;
      v10[3] = "BOOL pxrInternal__aapl__pxrReserved__::(anonymous namespace)::StageContainer::Erase(const Id)";
      v11 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v10, "_byStage.erase(it->second) == 1", 0);
    }
    sub_20BEB587C(v5, v6, (uint64_t)v10);
    sub_20C5260B0((uint64_t)v10, 0);
  }
  std::mutex::unlock(v3);
  sub_20C524C80((uint64_t)v8);
  return v6 != 0;
}

void sub_20C525040(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::mutex *v10;

  std::mutex::unlock(v10);
  sub_20C524C80((uint64_t)&a10);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdStageCache::Erase(uint64_t a1, uint64_t *a2)
{
  std::mutex *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _BYTE v10[48];
  _QWORD v11[4];
  char v12;

  sub_20C524AF0((uint64_t)v10, a1, (uint64_t)"erased");
  v4 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  if (v10[40])
  {
    v5 = sub_20BEDA270((_QWORD *)(*(_QWORD *)a1 + 40), a2);
    if (v5)
      sub_20C524B3C((uint64_t)v10, v5 + 2, v5[3]);
  }
  v6 = *(_QWORD **)a1;
  v7 = (_QWORD *)(*(_QWORD *)a1 + 40);
  v8 = sub_20BEB4074(v7, a2);
  if (v8)
  {
    sub_20C5276C8((uint64_t)v6, a2);
    if (sub_20C5279B0(v6, v8 + 3) != 1)
    {
      v11[0] = "usd/stageCache.cpp";
      v11[1] = "Erase";
      v11[2] = 115;
      v11[3] = "BOOL pxrInternal__aapl__pxrReserved__::(anonymous namespace)::StageContainer::Erase(const UsdStageRefPtr &)";
      v12 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v11, "_byId.erase(it->second) == 1", 0);
    }
    sub_20BEB587C(v7, v8, (uint64_t)v11);
    sub_20C5264BC((uint64_t)v11, 0);
  }
  std::mutex::unlock(v4);
  sub_20C524C80((uint64_t)v10);
  return v8 != 0;
}

void sub_20C5251A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::mutex *v10;

  std::mutex::unlock(v10);
  sub_20C524C80((uint64_t)&a10);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStageCache::EraseAll(uint64_t a1, uint64_t a2)
{
  std::mutex *v4;
  _QWORD *v5;
  int v6;
  pxrInternal__aapl__pxrReserved__ **v7;
  pxrInternal__aapl__pxrReserved__ **v8;
  pxrInternal__aapl__pxrReserved__ **v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  pxrInternal__aapl__pxrReserved__ *v13;
  void **v14;
  uint64_t v16[5];
  unsigned __int8 v17;
  void *__p[2];
  char v19;
  char *v20;
  const char *v21;
  uint64_t v22;
  const char *v23;
  char v24;

  sub_20C524AF0((uint64_t)v16, a1, (uint64_t)"erased");
  v4 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  v5 = *(_QWORD **)a1;
  v6 = v17;
  v7 = (pxrInternal__aapl__pxrReserved__ **)sub_20C527908(v5 + 10, a2);
  v9 = v8;
  if (v7 == v8)
  {
    v10 = 0;
  }
  else
  {
    v10 = 0;
    do
    {
      v11 = sub_20BEB4074(v5 + 5, v7 + 4);
      v12 = v11;
      if (v11)
      {
        if (v6)
          sub_20C5279FC(v16, v11 + 2, v11 + 3);
        if (sub_20C5279B0(v5, v12 + 3) != 1)
        {
          v20 = "usd/stageCache.cpp";
          v21 = "_EraseAllIf";
          v22 = 215;
          v23 = "size_t pxrInternal__aapl__pxrReserved__::(anonymous namespace)::StageContainer::_EraseAllIf(const SdfLay"
                "erHandle &, ConditionFn &&, vector<Entry> *) [ConditionFn = (lambda at /Library/Caches/com.apple.xbs/Sou"
                "rces/USDLib/USD/pxr/usd/usd/stageCache.cpp:135:28)]";
          v24 = 0;
          pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v20, "_byId.erase(byStageIt->second) == 1", 0);
        }
        sub_20BEB587C(v5 + 5, v12, (uint64_t)&v20);
        sub_20C5264BC((uint64_t)&v20, 0);
        v13 = *v7;
        sub_20BEB587C(v5 + 10, v7, (uint64_t)&v20);
        sub_20C526BC4((uint64_t)&v20, 0);
        ++v10;
        v7 = (pxrInternal__aapl__pxrReserved__ **)v13;
      }
      else
      {
        v20 = "usd/stageCache.cpp";
        v21 = "_EraseAllIf";
        v22 = 206;
        v23 = "size_t pxrInternal__aapl__pxrReserved__::(anonymous namespace)::StageContainer::_EraseAllIf(const SdfLayer"
              "Handle &, ConditionFn &&, vector<Entry> *) [ConditionFn = (lambda at /Library/Caches/com.apple.xbs/Sources"
              "/USDLib/USD/pxr/usd/usd/stageCache.cpp:135:28)]";
        v24 = 0;
        pxrInternal__aapl__pxrReserved__::UsdDescribe(v7 + 4, __p);
        v14 = __p;
        if (v19 < 0)
          v14 = (void **)__p[0];
        pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v20, 1, (pxrInternal__aapl__pxrReserved__ *)"Internal StageCache is out of sync. Cannot locate ID for stage '%s'.Skipping erase of incomplete element.", (const char *)v14);
        if (v19 < 0)
          operator delete(__p[0]);
        v7 = (pxrInternal__aapl__pxrReserved__ **)*v7;
      }
    }
    while (v7 != v9);
  }
  std::mutex::unlock(v4);
  sub_20C524C80((uint64_t)v16);
  return v10;
}

void sub_20C5253D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::mutex *a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  std::mutex::unlock(a10);
  sub_20C524C80((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStageCache::EraseAll(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::mutex *v6;
  _QWORD *v7;
  int v8;
  pxrInternal__aapl__pxrReserved__ *v9;
  pxrInternal__aapl__pxrReserved__ *v10;
  pxrInternal__aapl__pxrReserved__ *v11;
  uint64_t v12;
  pxrInternal__aapl__pxrReserved__::UsdStage *v13;
  _BOOL4 v14;
  const char *v15;
  unsigned int *v16;
  unsigned int v17;
  unsigned int v18;
  _QWORD *v19;
  _QWORD *v20;
  pxrInternal__aapl__pxrReserved__ *v21;
  void **v22;
  std::mutex *v24;
  uint64_t v25[5];
  unsigned __int8 v26;
  void *__p[2];
  char v28;
  char *v29;
  const char *v30;
  uint64_t v31;
  const char *v32;
  char v33;

  sub_20C524AF0((uint64_t)v25, a1, (uint64_t)"erased");
  v6 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  v7 = *(_QWORD **)a1;
  v8 = v26;
  v24 = v6;
  v9 = (pxrInternal__aapl__pxrReserved__ *)sub_20C527908(v7 + 10, a2);
  v11 = v10;
  if (v9 != v10)
  {
    v12 = 0;
    while (1)
    {
      v13 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C39A7A8((uint64_t *)v9 + 4);
      pxrInternal__aapl__pxrReserved__::UsdStage::GetSessionLayer(v13, (uint64_t *)&v29);
      v14 = sub_20BEB560C((uint64_t)&v29, a3);
      v15 = v30;
      if (v30)
      {
        v16 = (unsigned int *)(v30 + 8);
        do
        {
          v17 = __ldxr(v16);
          v18 = v17 - 1;
        }
        while (__stlxr(v18, v16));
        if (!v18)
          (*(void (**)(const char *))(*(_QWORD *)v15 + 8))(v15);
      }
      if (v14)
      {
        v19 = sub_20BEB4074(v7 + 5, (_QWORD *)v9 + 4);
        v20 = v19;
        if (v19)
        {
          if (v8)
            sub_20C5279FC(v25, v19 + 2, v19 + 3);
          if (sub_20C5279B0(v7, v20 + 3) != 1)
          {
            v29 = "usd/stageCache.cpp";
            v30 = "_EraseAllIf";
            v31 = 215;
            v32 = "size_t pxrInternal__aapl__pxrReserved__::(anonymous namespace)::StageContainer::_EraseAllIf(const SdfL"
                  "ayerHandle &, ConditionFn &&, vector<Entry> *) [ConditionFn = (lambda at /Library/Caches/com.apple.xbs"
                  "/Sources/USDLib/USD/pxr/usd/usd/stageCache.cpp:143:27)]";
            v33 = 0;
            pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v29, "_byId.erase(byStageIt->second) == 1", 0);
          }
          sub_20BEB587C(v7 + 5, v20, (uint64_t)&v29);
          sub_20C5264BC((uint64_t)&v29, 0);
          v21 = *(pxrInternal__aapl__pxrReserved__ **)v9;
          sub_20BEB587C(v7 + 10, v9, (uint64_t)&v29);
          sub_20C526BC4((uint64_t)&v29, 0);
          ++v12;
          v9 = v21;
          goto LABEL_20;
        }
        v29 = "usd/stageCache.cpp";
        v30 = "_EraseAllIf";
        v31 = 206;
        v32 = "size_t pxrInternal__aapl__pxrReserved__::(anonymous namespace)::StageContainer::_EraseAllIf(const SdfLayer"
              "Handle &, ConditionFn &&, vector<Entry> *) [ConditionFn = (lambda at /Library/Caches/com.apple.xbs/Sources"
              "/USDLib/USD/pxr/usd/usd/stageCache.cpp:143:27)]";
        v33 = 0;
        pxrInternal__aapl__pxrReserved__::UsdDescribe((pxrInternal__aapl__pxrReserved__ **)v9 + 4, __p);
        v22 = __p;
        if (v28 < 0)
          v22 = (void **)__p[0];
        pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v29, 1, (pxrInternal__aapl__pxrReserved__ *)"Internal StageCache is out of sync. Cannot locate ID for stage '%s'.Skipping erase of incomplete element.", (const char *)v22);
        if (v28 < 0)
          operator delete(__p[0]);
      }
      v9 = *(pxrInternal__aapl__pxrReserved__ **)v9;
LABEL_20:
      if (v9 == v11)
        goto LABEL_23;
    }
  }
  v12 = 0;
LABEL_23:
  std::mutex::unlock(v24);
  sub_20C524C80((uint64_t)v25);
  return v12;
}

void sub_20C525668(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::mutex *a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24)
{
  std::mutex::unlock(a10);
  sub_20C524C80((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStageCache::EraseAll(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  std::mutex *v8;
  _QWORD *v9;
  pxrInternal__aapl__pxrReserved__ *v10;
  pxrInternal__aapl__pxrReserved__ *v11;
  pxrInternal__aapl__pxrReserved__ *v12;
  uint64_t v13;
  pxrInternal__aapl__pxrReserved__::UsdStage *v14;
  pxrInternal__aapl__pxrReserved__::UsdStage *v15;
  int v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  unsigned int v20;
  _QWORD *v21;
  _QWORD *v22;
  pxrInternal__aapl__pxrReserved__ *v23;
  const char *p_p;
  std::mutex *v26;
  int v27;
  uint64_t v28[5];
  unsigned __int8 v29;
  void *__p;
  uint64_t v31;
  char v32;
  char *v33;
  const char *v34;
  uint64_t v35;
  const char *v36;
  char v37;
  char **v38;

  sub_20C524AF0((uint64_t)v28, a1, (uint64_t)"erased");
  v8 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  v9 = *(_QWORD **)a1;
  v27 = v29;
  v26 = v8;
  v10 = (pxrInternal__aapl__pxrReserved__ *)sub_20C527908(v9 + 10, a2);
  v12 = v11;
  if (v10 != v11)
  {
    v13 = 0;
    while (1)
    {
      v14 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C39A7A8((uint64_t *)v10 + 4);
      pxrInternal__aapl__pxrReserved__::UsdStage::GetSessionLayer(v14, (uint64_t *)&__p);
      if (sub_20BEB560C((uint64_t)&__p, a3))
      {
        v15 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C39A7A8((uint64_t *)v10 + 4);
        pxrInternal__aapl__pxrReserved__::UsdStage::GetPathResolverContext(v15, (uint64_t)&v33);
        v16 = pxrInternal__aapl__pxrReserved__::ArResolverContext::operator==((uint64_t *)&v33, a4);
        v38 = &v33;
        sub_20BDE9EB0((void ***)&v38);
      }
      else
      {
        v16 = 0;
      }
      v17 = v31;
      if (v31)
      {
        v18 = (unsigned int *)(v31 + 8);
        do
        {
          v19 = __ldxr(v18);
          v20 = v19 - 1;
        }
        while (__stlxr(v20, v18));
        if (!v20)
          (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
      }
      if (v16)
      {
        v21 = sub_20BEB4074(v9 + 5, (_QWORD *)v10 + 4);
        v22 = v21;
        if (v21)
        {
          if (v27)
            sub_20C5279FC(v28, v21 + 2, v21 + 3);
          if (sub_20C5279B0(v9, v22 + 3) != 1)
          {
            v33 = "usd/stageCache.cpp";
            v34 = "_EraseAllIf";
            v35 = 215;
            v36 = "size_t pxrInternal__aapl__pxrReserved__::(anonymous namespace)::StageContainer::_EraseAllIf(const SdfL"
                  "ayerHandle &, ConditionFn &&, vector<Entry> *) [ConditionFn = (lambda at /Library/Caches/com.apple.xbs"
                  "/Sources/USDLib/USD/pxr/usd/usd/stageCache.cpp:154:27)]";
            v37 = 0;
            pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v33, "_byId.erase(byStageIt->second) == 1", 0);
          }
          sub_20BEB587C(v9 + 5, v22, (uint64_t)&v33);
          sub_20C5264BC((uint64_t)&v33, 0);
          v23 = *(pxrInternal__aapl__pxrReserved__ **)v10;
          sub_20BEB587C(v9 + 10, v10, (uint64_t)&v33);
          sub_20C526BC4((uint64_t)&v33, 0);
          ++v13;
          v10 = v23;
          goto LABEL_23;
        }
        v33 = "usd/stageCache.cpp";
        v34 = "_EraseAllIf";
        v35 = 206;
        v36 = "size_t pxrInternal__aapl__pxrReserved__::(anonymous namespace)::StageContainer::_EraseAllIf(const SdfLayer"
              "Handle &, ConditionFn &&, vector<Entry> *) [ConditionFn = (lambda at /Library/Caches/com.apple.xbs/Sources"
              "/USDLib/USD/pxr/usd/usd/stageCache.cpp:154:27)]";
        v37 = 0;
        pxrInternal__aapl__pxrReserved__::UsdDescribe((pxrInternal__aapl__pxrReserved__ **)v10 + 4, &__p);
        p_p = (const char *)&__p;
        if (v32 < 0)
          p_p = (const char *)__p;
        pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v33, 1, (pxrInternal__aapl__pxrReserved__ *)"Internal StageCache is out of sync. Cannot locate ID for stage '%s'.Skipping erase of incomplete element.", p_p);
        if (v32 < 0)
          operator delete(__p);
      }
      v10 = *(pxrInternal__aapl__pxrReserved__ **)v10;
LABEL_23:
      if (v10 == v12)
        goto LABEL_26;
    }
  }
  v13 = 0;
LABEL_26:
  std::mutex::unlock(v26);
  sub_20C524C80((uint64_t)v28);
  return v13;
}

void sub_20C525958(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::mutex *a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,char a24)
{
  std::mutex::unlock(a10);
  sub_20C524C80((uint64_t)&a12);
  _Unwind_Resume(a1);
}

void **pxrInternal__aapl__pxrReserved__::UsdStageCache::Clear(pxrInternal__aapl__pxrReserved__::UsdStageCache *this)
{
  _OWORD *v2;
  uint64_t v3;
  _QWORD *i;
  _BYTE v6[48];
  _QWORD v7[2];
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  sub_20C524AF0((uint64_t)v6, (uint64_t)this, (uint64_t)"cleared");
  v2 = operator new(0xA8uLL);
  *v2 = 0u;
  v2[1] = 0u;
  *((_DWORD *)v2 + 8) = 1065353216;
  *(_OWORD *)((char *)v2 + 40) = 0u;
  *(_OWORD *)((char *)v2 + 56) = 0u;
  *((_DWORD *)v2 + 18) = 1065353216;
  v2[5] = 0u;
  v2[6] = 0u;
  *((_DWORD *)v2 + 28) = 1065353216;
  *(_OWORD *)((char *)v2 + 120) = 0u;
  *(_OWORD *)((char *)v2 + 136) = 0u;
  *(_OWORD *)((char *)v2 + 152) = 0u;
  v7[0] = v2;
  v7[1] = 850045863;
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0;
  std::mutex::lock((std::mutex *)((char *)this + 8));
  v3 = *(_QWORD *)this;
  if (v6[40])
  {
    for (i = (_QWORD *)(v3 + 56); ; sub_20C524B3C((uint64_t)v6, i + 2, i[3]))
    {
      i = (_QWORD *)*i;
      if (!i)
        break;
    }
    v3 = *(_QWORD *)this;
  }
  *(_QWORD *)this = v7[0];
  v7[0] = v3;
  std::mutex::unlock((std::mutex *)((char *)this + 8));
  pxrInternal__aapl__pxrReserved__::UsdStageCache::~UsdStageCache((pxrInternal__aapl__pxrReserved__::UsdStageCache *)v7);
  return sub_20C524C80((uint64_t)v6);
}

void sub_20C525B04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  pxrInternal__aapl__pxrReserved__::UsdStageCache::~UsdStageCache((pxrInternal__aapl__pxrReserved__::UsdStageCache *)&a15);
  sub_20C524C80((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCache::SetDebugName(uint64_t a1, const std::string *a2)
{
  std::mutex *v4;

  v4 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  std::string::operator=((std::string *)(*(_QWORD *)a1 + 144), a2);
  std::mutex::unlock(v4);
}

void sub_20C525B88(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCache::GetDebugName(pxrInternal__aapl__pxrReserved__::UsdStageCache *this@<X0>, uint64_t a2@<X8>)
{
  std::mutex *v4;
  uint64_t v5;
  __int128 v6;

  v4 = (std::mutex *)((char *)this + 8);
  std::mutex::lock((std::mutex *)((char *)this + 8));
  v5 = *(_QWORD *)this;
  if (*(char *)(*(_QWORD *)this + 167) < 0)
  {
    sub_20BDDBFAC((_BYTE *)a2, *(void **)(v5 + 144), *(_QWORD *)(v5 + 152));
  }
  else
  {
    v6 = *(_OWORD *)(v5 + 144);
    *(_QWORD *)(a2 + 16) = *(_QWORD *)(v5 + 160);
    *(_OWORD *)a2 = v6;
  }
  std::mutex::unlock(v4);
}

void sub_20C525C00(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCacheRequest::~UsdStageCacheRequest(pxrInternal__aapl__pxrReserved__::UsdStageCacheRequest *this)
{
  void **v1;

  v1 = (void **)*((_QWORD *)this + 1);
  *(_QWORD *)this = off_24C53B9F0;
  *((_QWORD *)this + 1) = 0;
  if (v1)
    pxrInternal__aapl__pxrReserved__::UsdStageCacheRequest::_DataDeleter::operator()((int)this, v1);
}

_QWORD *sub_20C525C54(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE *v5;
  __int128 v6;

  v4 = sub_20C525D68((uint64_t)a1, a2);
  sub_20C526168(v4 + 40, a2 + 40);
  sub_20C526574((uint64_t)(a1 + 10), a2 + 80);
  a1[15] = 0;
  a1[16] = 0;
  a1[17] = 0;
  sub_20C526CD4(a1 + 15, *(const void **)(a2 + 120), *(_QWORD *)(a2 + 128), (uint64_t)(*(_QWORD *)(a2 + 128) - *(_QWORD *)(a2 + 120)) >> 3);
  v5 = a1 + 18;
  if (*(char *)(a2 + 167) < 0)
  {
    sub_20BDDBFAC(v5, *(void **)(a2 + 144), *(_QWORD *)(a2 + 152));
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 144);
    a1[20] = *(_QWORD *)(a2 + 160);
    *(_OWORD *)v5 = v6;
  }
  return a1;
}

void sub_20C525CEC(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;
  void *v4;

  v4 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 128) = v4;
    operator delete(v4);
  }
  sub_20C525D38(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C525D38(uint64_t a1)
{
  sub_20C526C60(a1 + 80);
  sub_20C526500(a1 + 40);
  return sub_20C5260F4(a1);
}

uint64_t sub_20C525D68(uint64_t a1, uint64_t a2)
{
  _QWORD *i;

  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  sub_20BDEC6E0(a1, *(_QWORD *)(a2 + 8));
  for (i = *(_QWORD **)(a2 + 16); i; i = (_QWORD *)*i)
    sub_20C525DDC(a1, i + 2, i + 2);
  return a1;
}

void sub_20C525DC4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C5260F4(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C525DDC(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  unint64_t v3;
  unint64_t v5;
  unint64_t v6;
  uint8x8_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  float v11;
  float v12;
  _BOOL8 v13;
  unint64_t v14;
  unint64_t v15;
  size_t v16;
  _QWORD *v17;
  unint64_t v18;
  _QWORD v20[3];

  v5 = bswap64(0x9E3779B97F4A7C55 * ~*a2);
  v6 = *(_QWORD *)(a1 + 8);
  if (v6)
  {
    v7 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
    v7.i16[0] = vaddlv_u8(v7);
    if (v7.u32[0] > 1uLL)
    {
      v3 = v5;
      if (v5 >= v6)
        v3 = v5 % v6;
    }
    else
    {
      v3 = (v6 - 1) & v5;
    }
    v8 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
    if (v8)
    {
      v9 = (_QWORD *)*v8;
      if (*v8)
      {
        do
        {
          v10 = v9[1];
          if (v10 == v5)
          {
            if (v9[2] == *a2)
              return v9;
          }
          else
          {
            if (v7.u32[0] > 1uLL)
            {
              if (v10 >= v6)
                v10 %= v6;
            }
            else
            {
              v10 &= v6 - 1;
            }
            if (v10 != v3)
              break;
          }
          v9 = (_QWORD *)*v9;
        }
        while (v9);
      }
    }
  }
  sub_20C52603C(a1, v5, a3, (uint64_t)v20);
  v11 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v12 = *(float *)(a1 + 32);
  if (!v6 || (float)(v12 * (float)v6) < v11)
  {
    v13 = 1;
    if (v6 >= 3)
      v13 = (v6 & (v6 - 1)) != 0;
    v14 = v13 | (2 * v6);
    v15 = vcvtps_u32_f32(v11 / v12);
    if (v14 <= v15)
      v16 = v15;
    else
      v16 = v14;
    sub_20BDEC6E0(a1, v16);
    v6 = *(_QWORD *)(a1 + 8);
    if ((v6 & (v6 - 1)) != 0)
    {
      if (v5 >= v6)
        v3 = v5 % v6;
      else
        v3 = v5;
    }
    else
    {
      v3 = (v6 - 1) & v5;
    }
  }
  v17 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v17)
  {
    *(_QWORD *)v20[0] = *v17;
    *v17 = v20[0];
  }
  else
  {
    *(_QWORD *)v20[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v20[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v3) = a1 + 16;
    if (*(_QWORD *)v20[0])
    {
      v18 = *(_QWORD *)(*(_QWORD *)v20[0] + 8);
      if ((v6 & (v6 - 1)) != 0)
      {
        if (v18 >= v6)
          v18 %= v6;
      }
      else
      {
        v18 &= v6 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v18) = v20[0];
    }
  }
  v9 = (_QWORD *)v20[0];
  v20[0] = 0;
  ++*(_QWORD *)(a1 + 24);
  sub_20C5260B0((uint64_t)v20, 0);
  return v9;
}

void sub_20C526024(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C5260B0((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C52603C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t result;

  v7 = a1 + 16;
  v8 = operator new(0x20uLL);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *v8 = 0;
  v8[1] = a2;
  v9 = a3[1];
  v8[2] = *a3;
  v8[3] = v9;
  result = sub_20BF1DD04(v8 + 3);
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_20C526098(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C5260B0(v1, 0);
  _Unwind_Resume(a1);
}

void sub_20C5260B0(uint64_t a1, uint64_t a2)
{
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v2;

  v2 = *(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter ***)a1;
  *(_QWORD *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      sub_20C455C74(v2 + 3);
    operator delete(v2);
  }
}

uint64_t sub_20C5260F4(uint64_t a1)
{
  void *v2;

  sub_20C52612C(a1, *(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter ***)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_20C52612C(uint64_t a1, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **a2)
{
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v2;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v3;

  if (a2)
  {
    v2 = a2;
    do
    {
      v3 = *v2;
      sub_20C455C74(v2 + 3);
      operator delete(v2);
      v2 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)v3;
    }
    while (v3);
  }
}

uint64_t sub_20C526168(uint64_t a1, uint64_t a2)
{
  _QWORD *i;

  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  sub_20BDEC6E0(a1, *(_QWORD *)(a2 + 8));
  for (i = *(_QWORD **)(a2 + 16); i; i = (_QWORD *)*i)
    sub_20C5261DC(a1, i + 2, i + 2);
  return a1;
}

void sub_20C5261C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C526500(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C5261DC(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  unint64_t v3;
  unint64_t v5;
  unint64_t v6;
  uint8x8_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  float v11;
  float v12;
  _BOOL8 v13;
  unint64_t v14;
  unint64_t v15;
  size_t v16;
  _QWORD *v17;
  unint64_t v18;
  _QWORD v20[3];

  v5 = bswap64(0x9E3779B97F4A7C55 * *a2);
  v6 = *(_QWORD *)(a1 + 8);
  if (v6)
  {
    v7 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
    v7.i16[0] = vaddlv_u8(v7);
    if (v7.u32[0] > 1uLL)
    {
      v3 = v5;
      if (v5 >= v6)
        v3 = v5 % v6;
    }
    else
    {
      v3 = v5 & (v6 - 1);
    }
    v8 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
    if (v8)
    {
      v9 = (_QWORD *)*v8;
      if (*v8)
      {
        do
        {
          v10 = v9[1];
          if (v10 == v5)
          {
            if (v9[2] == *a2)
              return v9;
          }
          else
          {
            if (v7.u32[0] > 1uLL)
            {
              if (v10 >= v6)
                v10 %= v6;
            }
            else
            {
              v10 &= v6 - 1;
            }
            if (v10 != v3)
              break;
          }
          v9 = (_QWORD *)*v9;
        }
        while (v9);
      }
    }
  }
  sub_20C526438(a1, v5, a3, (uint64_t)v20);
  v11 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v12 = *(float *)(a1 + 32);
  if (!v6 || (float)(v12 * (float)v6) < v11)
  {
    v13 = 1;
    if (v6 >= 3)
      v13 = (v6 & (v6 - 1)) != 0;
    v14 = v13 | (2 * v6);
    v15 = vcvtps_u32_f32(v11 / v12);
    if (v14 <= v15)
      v16 = v15;
    else
      v16 = v14;
    sub_20BDEC6E0(a1, v16);
    v6 = *(_QWORD *)(a1 + 8);
    if ((v6 & (v6 - 1)) != 0)
    {
      if (v5 >= v6)
        v3 = v5 % v6;
      else
        v3 = v5;
    }
    else
    {
      v3 = (v6 - 1) & v5;
    }
  }
  v17 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v17)
  {
    *(_QWORD *)v20[0] = *v17;
    *v17 = v20[0];
  }
  else
  {
    *(_QWORD *)v20[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v20[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v3) = a1 + 16;
    if (*(_QWORD *)v20[0])
    {
      v18 = *(_QWORD *)(*(_QWORD *)v20[0] + 8);
      if ((v6 & (v6 - 1)) != 0)
      {
        if (v18 >= v6)
          v18 %= v6;
      }
      else
      {
        v18 &= v6 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v18) = v20[0];
    }
  }
  v9 = (_QWORD *)v20[0];
  v20[0] = 0;
  ++*(_QWORD *)(a1 + 24);
  sub_20C5264BC((uint64_t)v20, 0);
  return v9;
}

void sub_20C526420(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C5264BC((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C526438@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;

  v7 = a1 + 16;
  v8 = operator new(0x20uLL);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *v8 = 0;
  v8[1] = a2;
  v8[2] = *a3;
  result = sub_20BF1DD04(v8 + 2);
  v8[3] = a3[1];
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_20C5264A4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C5264BC(v1, 0);
  _Unwind_Resume(a1);
}

void sub_20C5264BC(uint64_t a1, uint64_t a2)
{
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v2;

  v2 = *(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter ***)a1;
  *(_QWORD *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      sub_20C455C74(v2 + 2);
    operator delete(v2);
  }
}

uint64_t sub_20C526500(uint64_t a1)
{
  void *v2;

  sub_20C526538(a1, *(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter ***)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_20C526538(uint64_t a1, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **a2)
{
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v2;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v3;

  if (a2)
  {
    v2 = a2;
    do
    {
      v3 = *v2;
      sub_20C455C74(v2 + 2);
      operator delete(v2);
      v2 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)v3;
    }
    while (v3);
  }
}

uint64_t sub_20C526574(uint64_t a1, uint64_t a2)
{
  _QWORD *i;

  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  sub_20C5265E4(a1, *(_QWORD *)(a2 + 8));
  for (i = *(_QWORD **)(a2 + 16); i; i = (_QWORD *)*i)
    sub_20C526874((_QWORD *)a1, i + 2);
  return a1;
}

void sub_20C5265CC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C526C60(v1);
  _Unwind_Resume(a1);
}

void sub_20C5265E4(uint64_t a1, size_t __n)
{
  size_t prime;
  int8x8_t v4;
  unint64_t v5;
  uint8x8_t v6;
  uint64_t v7;

  if (__n == 1)
  {
    prime = 2;
  }
  else
  {
    prime = __n;
    if ((__n & (__n - 1)) != 0)
      prime = std::__next_prime(__n);
  }
  v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(_QWORD *)&v4)
    goto LABEL_16;
  if (prime < *(_QWORD *)&v4)
  {
    v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(_QWORD *)&v4 < 3uLL || (v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      v5 = std::__next_prime(v5);
    }
    else
    {
      v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2)
        v5 = v7;
    }
    if (prime <= v5)
      prime = v5;
    if (prime < *(_QWORD *)&v4)
LABEL_16:
      sub_20C5266C0(a1, prime);
  }
}

void sub_20C5266C0(uint64_t a1, unint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint8x8_t v9;
  unint64_t v10;
  void *v11;
  _QWORD *i;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _BOOL4 v16;
  _QWORD *v17;

  if (a2)
  {
    if (a2 >> 61)
      sub_20BDDF5B4();
    v4 = operator new(8 * a2);
    v5 = *(void **)a1;
    *(_QWORD *)a1 = v4;
    if (v5)
      operator delete(v5);
    v6 = 0;
    *(_QWORD *)(a1 + 8) = a2;
    do
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    v7 = *(_QWORD **)(a1 + 16);
    if (v7)
    {
      v8 = v7[1];
      v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      v10 = v9.u32[0];
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2)
          v8 %= a2;
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v8) = a1 + 16;
      for (i = (_QWORD *)*v7; *v7; i = (_QWORD *)*v7)
      {
        v13 = i[1];
        if (v10 > 1)
        {
          if (v13 >= a2)
            v13 %= a2;
        }
        else
        {
          v13 &= a2 - 1;
        }
        if (v13 == v8)
        {
          v7 = i;
        }
        else if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v13))
        {
          v14 = (_QWORD *)*i;
          if (*i)
          {
            v15 = i;
            while (1)
            {
              v16 = sub_20BEB560C((uint64_t)(i + 2), (uint64_t)(v14 + 2));
              v17 = (_QWORD *)*v15;
              if (!v16)
                break;
              v14 = (_QWORD *)*v17;
              v15 = (_QWORD *)*v15;
              if (!*v17)
                goto LABEL_31;
            }
            v14 = (_QWORD *)*v15;
            v17 = v15;
          }
          else
          {
            v17 = i;
          }
LABEL_31:
          *v7 = v14;
          *v17 = **(_QWORD **)(*(_QWORD *)a1 + 8 * v13);
          **(_QWORD **)(*(_QWORD *)a1 + 8 * v13) = i;
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)a1 + 8 * v13) = v7;
          v7 = i;
          v8 = v13;
        }
      }
    }
  }
  else
  {
    v11 = *(void **)a1;
    *(_QWORD *)a1 = 0;
    if (v11)
      operator delete(v11);
    *(_QWORD *)(a1 + 8) = 0;
  }
}

_QWORD *sub_20C526874(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v3;
  _QWORD *v5[3];

  sub_20C5268DC((uint64_t)a1, a2, (uint64_t)v5);
  v3 = sub_20C526984(a1, v5[0]);
  v5[0] = 0;
  sub_20C526BC4((uint64_t)v5, 0);
  return v3;
}

void sub_20C5268C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C526BC4((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C5268DC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t *result;
  unint64_t v8;
  uint64_t v9;

  v5 = a1 + 16;
  v6 = operator new(0x28uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  *v6 = 0;
  v6[1] = 0;
  sub_20C5269FC(v6 + 2, a2);
  *(_BYTE *)(a3 + 16) = 1;
  result = v6 + 3;
  v8 = v6[3];
  if (v8)
  {
    v9 = sub_20BEB47BC(result);
    result = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    v8 = 0x9E3779B97F4A7C55 * (_QWORD)result;
  }
  v6[1] = bswap64(v8);
  return result;
}

void sub_20C52696C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C526BC4(v1, 0);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C526984(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;

  v4 = a2[3];
  if (v4)
  {
    v5 = sub_20BEB47BC(a2 + 3);
    v4 = 0x9E3779B97F4A7C55 * (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 16))(v5);
  }
  v6 = bswap64(v4);
  a2[1] = v6;
  v7 = sub_20C526A64((uint64_t)a1, v6, (uint64_t)(a2 + 2));
  sub_20BEC5B54(a1, a2, v7);
  return a2;
}

_QWORD *sub_20C5269FC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  if (v3)
  {
    v4 = (unsigned int *)(v3 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a1[2] = a2[2];
  sub_20BF1DD04(a1 + 2);
  return a1;
}

void sub_20C526A4C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  if (v3)
    sub_20C96B4E8(v3);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20C526A64(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v6;
  float v7;
  float v8;
  _BOOL8 v9;
  unint64_t v10;
  unint64_t v11;
  size_t v12;
  uint8x8_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  _BOOL4 v21;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v8 = *(float *)(a1 + 32);
  if (!v6 || (float)(v8 * (float)v6) < v7)
  {
    v9 = 1;
    if (v6 >= 3)
      v9 = (v6 & (v6 - 1)) != 0;
    v10 = v9 | (2 * v6);
    v11 = vcvtps_u32_f32(v7 / v8);
    if (v10 <= v11)
      v12 = v11;
    else
      v12 = v10;
    sub_20C5265E4(a1, v12);
    v6 = *(_QWORD *)(a1 + 8);
  }
  v13 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
  v13.i16[0] = vaddlv_u8(v13);
  v14 = v13.u32[0];
  if (v13.u32[0] > 1uLL)
  {
    v15 = a2;
    if (v6 <= a2)
      v15 = a2 % v6;
  }
  else
  {
    v15 = (v6 - 1) & a2;
  }
  v16 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v15);
  if (v16)
  {
    v17 = (_QWORD *)*v16;
    if (*v16)
    {
      v18 = 0;
      do
      {
        v19 = v17[1];
        if (v14 > 1)
        {
          v20 = v17[1];
          if (v19 >= v6)
            v20 = v19 % v6;
        }
        else
        {
          v20 = v19 & (v6 - 1);
        }
        if (v20 != v15)
          break;
        v21 = v19 == a2 && sub_20BEB560C((uint64_t)(v17 + 2), a3);
        if ((v18 & !v21 & 1) != 0)
          break;
        v18 |= v21;
        v16 = (_QWORD *)*v16;
        v17 = (_QWORD *)*v16;
      }
      while (*v16);
    }
  }
  return v16;
}

void sub_20C526BC4(uint64_t a1, uint64_t a2)
{
  void *v2;

  v2 = *(void **)a1;
  *(_QWORD *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      sub_20C526C08((uint64_t)v2 + 16);
    operator delete(v2);
  }
}

uint64_t sub_20C526C08(uint64_t a1)
{
  uint64_t result;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;

  sub_20C455C74((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)(a1 + 16));
  result = *(_QWORD *)(a1 + 8);
  if (result)
  {
    v3 = (unsigned int *)(result + 8);
    do
    {
      v4 = __ldxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  return result;
}

uint64_t sub_20C526C60(uint64_t a1)
{
  void *v2;

  sub_20C526C98(a1, *(_QWORD **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_20C526C98(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;

  if (a2)
  {
    v2 = a2;
    do
    {
      v3 = (_QWORD *)*v2;
      sub_20C526C08((uint64_t)(v2 + 2));
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

_QWORD *sub_20C526CD4(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = sub_20BDDF654(result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_20C526D30(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C526D4C()
{
  _QWORD v1[11];
  char v2;
  uint64_t v3;

  sub_20BDDE5E0((uint64_t)v1);
  std::ostream::operator<<();
  std::stringbuf::str();
  v1[0] = *MEMORY[0x24BEDB800];
  *(_QWORD *)((char *)v1 + *(_QWORD *)(v1[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB800] + 24);
  v1[1] = MEMORY[0x24BEDB848] + 16;
  if (v2 < 0)
    operator delete((void *)v1[9]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x212B92EB0](&v3);
}

void sub_20C526E00(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BDDE6CC((uint64_t)va);
  _Unwind_Resume(a1);
}

void **sub_20C526E14(void **a1)
{
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v2;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v3;
  void *v4;

  v2 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)*a1;
  if (*a1)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)a1[1];
    v4 = v2;
    if (v3 != v2)
    {
      do
        v3 = sub_20C455C74(v3 - 2);
      while (v3 != v2);
      v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

_QWORD *sub_20C526E6C(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4)
{
  unint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint8x8_t v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  float v12;
  float v13;
  _BOOL8 v14;
  unint64_t v15;
  unint64_t v16;
  size_t v17;
  _QWORD *v18;
  unint64_t v19;
  _QWORD v21[3];

  v6 = bswap64(0x9E3779B97F4A7C55 * *a2);
  v7 = *(_QWORD *)(a1 + 8);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v4 = v6;
      if (v6 >= v7)
        v4 = v6 % v7;
    }
    else
    {
      v4 = v6 & (v7 - 1);
    }
    v9 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
    if (v9)
    {
      v10 = (_QWORD *)*v9;
      if (*v9)
      {
        do
        {
          v11 = v10[1];
          if (v11 == v6)
          {
            if (v10[2] == *a2)
              return v10;
          }
          else
          {
            if (v8.u32[0] > 1uLL)
            {
              if (v11 >= v7)
                v11 %= v7;
            }
            else
            {
              v11 &= v7 - 1;
            }
            if (v11 != v4)
              break;
          }
          v10 = (_QWORD *)*v10;
        }
        while (v10);
      }
    }
  }
  sub_20C5270C8(a1, v6, a3, a4, (uint64_t)v21);
  v12 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v13 = *(float *)(a1 + 32);
  if (!v7 || (float)(v13 * (float)v7) < v12)
  {
    v14 = 1;
    if (v7 >= 3)
      v14 = (v7 & (v7 - 1)) != 0;
    v15 = v14 | (2 * v7);
    v16 = vcvtps_u32_f32(v12 / v13);
    if (v15 <= v16)
      v17 = v16;
    else
      v17 = v15;
    sub_20BDEC6E0(a1, v17);
    v7 = *(_QWORD *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v6 >= v7)
        v4 = v6 % v7;
      else
        v4 = v6;
    }
    else
    {
      v4 = (v7 - 1) & v6;
    }
  }
  v18 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v18)
  {
    *(_QWORD *)v21[0] = *v18;
    *v18 = v21[0];
  }
  else
  {
    *(_QWORD *)v21[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v21[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = a1 + 16;
    if (*(_QWORD *)v21[0])
    {
      v19 = *(_QWORD *)(*(_QWORD *)v21[0] + 8);
      if ((v7 & (v7 - 1)) != 0)
      {
        if (v19 >= v7)
          v19 %= v7;
      }
      else
      {
        v19 &= v7 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v19) = v21[0];
    }
  }
  v10 = (_QWORD *)v21[0];
  v21[0] = 0;
  ++*(_QWORD *)(a1 + 24);
  sub_20C5264BC((uint64_t)v21, 0);
  return v10;
}

void sub_20C5270B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C5264BC((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C5270C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t result;

  v9 = a1 + 16;
  v10 = operator new(0x20uLL);
  *(_QWORD *)a5 = v10;
  *(_QWORD *)(a5 + 8) = v9;
  *(_BYTE *)(a5 + 16) = 0;
  *v10 = 0;
  v10[1] = a2;
  v10[2] = *a3;
  result = sub_20BF1DD04(v10 + 2);
  v10[3] = *a4;
  *(_BYTE *)(a5 + 16) = 1;
  return result;
}

void sub_20C527138(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C5264BC(v1, 0);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C527150(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4)
{
  unint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint8x8_t v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  float v12;
  float v13;
  _BOOL8 v14;
  unint64_t v15;
  unint64_t v16;
  size_t v17;
  _QWORD *v18;
  unint64_t v19;
  _QWORD v21[3];

  v6 = bswap64(0x9E3779B97F4A7C55 * ~*a2);
  v7 = *(_QWORD *)(a1 + 8);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v4 = v6;
      if (v6 >= v7)
        v4 = v6 % v7;
    }
    else
    {
      v4 = (v7 - 1) & v6;
    }
    v9 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
    if (v9)
    {
      v10 = (_QWORD *)*v9;
      if (*v9)
      {
        do
        {
          v11 = v10[1];
          if (v11 == v6)
          {
            if (v10[2] == *a2)
              return v10;
          }
          else
          {
            if (v8.u32[0] > 1uLL)
            {
              if (v11 >= v7)
                v11 %= v7;
            }
            else
            {
              v11 &= v7 - 1;
            }
            if (v11 != v4)
              break;
          }
          v10 = (_QWORD *)*v10;
        }
        while (v10);
      }
    }
  }
  sub_20C5273B0(a1, v6, a3, a4, (uint64_t)v21);
  v12 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v13 = *(float *)(a1 + 32);
  if (!v7 || (float)(v13 * (float)v7) < v12)
  {
    v14 = 1;
    if (v7 >= 3)
      v14 = (v7 & (v7 - 1)) != 0;
    v15 = v14 | (2 * v7);
    v16 = vcvtps_u32_f32(v12 / v13);
    if (v15 <= v16)
      v17 = v16;
    else
      v17 = v15;
    sub_20BDEC6E0(a1, v17);
    v7 = *(_QWORD *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v6 >= v7)
        v4 = v6 % v7;
      else
        v4 = v6;
    }
    else
    {
      v4 = (v7 - 1) & v6;
    }
  }
  v18 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v18)
  {
    *(_QWORD *)v21[0] = *v18;
    *v18 = v21[0];
  }
  else
  {
    *(_QWORD *)v21[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v21[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = a1 + 16;
    if (*(_QWORD *)v21[0])
    {
      v19 = *(_QWORD *)(*(_QWORD *)v21[0] + 8);
      if ((v7 & (v7 - 1)) != 0)
      {
        if (v19 >= v7)
          v19 %= v7;
      }
      else
      {
        v19 &= v7 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v19) = v21[0];
    }
  }
  v10 = (_QWORD *)v21[0];
  v21[0] = 0;
  ++*(_QWORD *)(a1 + 24);
  sub_20C5260B0((uint64_t)v21, 0);
  return v10;
}

void sub_20C527398(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C5260B0((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C5273B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t result;

  v9 = a1 + 16;
  v10 = operator new(0x20uLL);
  *(_QWORD *)a5 = v10;
  *(_QWORD *)(a5 + 8) = v9;
  *(_BYTE *)(a5 + 16) = 0;
  *v10 = 0;
  v10[1] = a2;
  v10[2] = *a3;
  v10[3] = *a4;
  result = sub_20BF1DD04(v10 + 3);
  *(_BYTE *)(a5 + 16) = 1;
  return result;
}

void sub_20C52741C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C5260B0(v1, 0);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C527434(_QWORD *a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v4;
  _QWORD *v6[3];

  sub_20C52749C((uint64_t)a1, a2, a3, (uint64_t)v6);
  v4 = sub_20C526984(a1, v6[0]);
  v6[0] = 0;
  sub_20C526BC4((uint64_t)v6, 0);
  return v4;
}

void sub_20C527484(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C526BC4((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C52749C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t *result;
  unint64_t v10;
  uint64_t v11;

  v7 = a1 + 16;
  v8 = operator new(0x28uLL);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *v8 = 0;
  v8[1] = 0;
  sub_20C527554((uint64_t)(v8 + 2), a2, a3);
  *(_BYTE *)(a4 + 16) = 1;
  result = v8 + 3;
  v10 = v8[3];
  if (v10)
  {
    v11 = sub_20BEB47BC(result);
    result = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11);
    v10 = 0x9E3779B97F4A7C55 * (_QWORD)result;
  }
  v8[1] = bswap64(v10);
  return result;
}

void sub_20C52753C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C526BC4(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C527554(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a1 + 16) = *a3;
  sub_20BF1DD04((uint64_t *)(a1 + 16));
  return a1;
}

void sub_20C52758C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  if (v3)
    sub_20C96B4E8(v3);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_20C5275A4(uint64_t *result, _QWORD *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = result;
  v5 = *result;
  v4 = result[1];
  v6 = a2[1];
  if (v4 != *result)
  {
    v7 = 0;
    do
    {
      *(_QWORD *)(v6 + v7 - 16) = *(_QWORD *)(v4 + v7 - 16);
      result = (uint64_t *)sub_20BF1DD04((uint64_t *)(v6 + v7 - 16));
      *(_QWORD *)(v6 + v7 - 8) = *(_QWORD *)(v4 + v7 - 8);
      v7 -= 16;
    }
    while (v4 + v7 != v5);
    v6 += v7;
  }
  a2[1] = v6;
  v8 = *v3;
  *v3 = v6;
  a2[1] = v8;
  v9 = v3[1];
  v3[1] = a2[2];
  a2[2] = v9;
  v10 = v3[2];
  v3[2] = a2[3];
  a2[3] = v10;
  *a2 = a2[1];
  return result;
}

void sub_20C52765C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;

  for (; v2; v2 += 16)
    sub_20C455C74((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)(v1 + v2));
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C52767C(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 16;
    sub_20C455C74((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)(i - 16));
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void sub_20C5276C8(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  pxrInternal__aapl__pxrReserved__::UsdStage *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  const char *v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int v11;
  void **v12;
  void *__p[2];
  char v14;
  char *v15;
  const char *v16;
  uint64_t v17;
  const char *v18;
  char v19;

  v3 = (_QWORD *)(a1 + 80);
  v4 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C39A7A8(a2);
  pxrInternal__aapl__pxrReserved__::UsdStage::GetRootLayer(v4, (uint64_t *)&v15);
  v5 = sub_20C527908(v3, (uint64_t)&v15);
  v7 = v6;
  v8 = v16;
  if (v16)
  {
    v9 = (unsigned int *)(v16 + 8);
    do
    {
      v10 = __ldxr(v9);
      v11 = v10 - 1;
    }
    while (__stlxr(v11, v9));
    if (!v11)
      (*(void (**)(const char *))(*(_QWORD *)v8 + 8))(v8);
  }
  if (v5 != v7)
  {
    while (v5[4] != *a2)
    {
      v5 = (_QWORD *)*v5;
      if (v5 == v7)
        goto LABEL_12;
    }
  }
  if (v5 == v7)
  {
LABEL_12:
    v15 = "usd/stageCache.cpp";
    v16 = "_EraseRootLayerEntry";
    v17 = 186;
    v18 = "void pxrInternal__aapl__pxrReserved__::(anonymous namespace)::StageContainer::_EraseRootLayerEntry(const UsdStageRefPtr &)";
    v19 = 0;
    pxrInternal__aapl__pxrReserved__::UsdDescribe((pxrInternal__aapl__pxrReserved__ **)a2, __p);
    if (v14 >= 0)
      v12 = __p;
    else
      v12 = (void **)__p[0];
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v15, 1, (pxrInternal__aapl__pxrReserved__ *)"Internal StageCache is out of sync.Cannot find root layer entry for stage '%s'.Skipping erase of incomplete element.", (const char *)v12);
    if (v14 < 0)
      operator delete(__p[0]);
  }
  else
  {
    sub_20BEB587C(v3, v5, (uint64_t)&v15);
    sub_20C526BC4((uint64_t)&v15, 0);
  }
}

void sub_20C527808(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20C527838(_QWORD *a1, _QWORD *a2)
{
  int8x8_t v2;
  unint64_t v3;
  uint8x8_t v4;
  unint64_t v5;
  _QWORD *v6;
  _QWORD *result;
  unint64_t v8;

  v2 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v2)
    return 0;
  v3 = bswap64(0x9E3779B97F4A7C55 * ~*a2);
  v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    v5 = v3;
    if (v3 >= *(_QWORD *)&v2)
      v5 = v3 % *(_QWORD *)&v2;
  }
  else
  {
    v5 = (*(_QWORD *)&v2 - 1) & v3;
  }
  v6 = *(_QWORD **)(*a1 + 8 * v5);
  if (!v6)
    return 0;
  result = (_QWORD *)*v6;
  if (*v6)
  {
    do
    {
      v8 = result[1];
      if (v8 == v3)
      {
        if (result[2] == *a2)
          return result;
      }
      else
      {
        if (v4.u32[0] > 1uLL)
        {
          if (v8 >= *(_QWORD *)&v2)
            v8 %= *(_QWORD *)&v2;
        }
        else
        {
          v8 &= *(_QWORD *)&v2 - 1;
        }
        if (v8 != v5)
          return 0;
      }
      result = (_QWORD *)*result;
    }
    while (result);
  }
  return result;
}

_QWORD *sub_20C527908(_QWORD *a1, uint64_t a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;

  v3 = sub_20BEB5714(a1, a2);
  v4 = v3;
  if (v3)
  {
    v5 = v3;
    do
      v5 = (_QWORD *)*v5;
    while (v5 && sub_20BEB560C((uint64_t)(v5 + 2), a2));
  }
  return v4;
}

uint64_t sub_20C527964(_QWORD *a1, _QWORD *a2)
{
  uint64_t result;
  _BYTE v4[24];

  result = (uint64_t)sub_20BEB4074(a1, a2);
  if (result)
  {
    sub_20BEB587C(a1, (_QWORD *)result, (uint64_t)v4);
    sub_20C5264BC((uint64_t)v4, 0);
    return 1;
  }
  return result;
}

uint64_t sub_20C5279B0(_QWORD *a1, _QWORD *a2)
{
  uint64_t result;
  _BYTE v4[24];

  result = (uint64_t)sub_20C527838(a1, a2);
  if (result)
  {
    sub_20BEB587C(a1, (_QWORD *)result, (uint64_t)v4);
    sub_20C5260B0((uint64_t)v4, 0);
    return 1;
  }
  return result;
}

uint64_t sub_20C5279FC(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD v18[2];
  uint64_t *v19;
  char *v20;
  uint64_t *v21;

  v6 = a1[2];
  v7 = (uint64_t *)a1[1];
  if ((unint64_t)v7 >= v6)
  {
    v11 = ((uint64_t)v7 - *a1) >> 4;
    if ((unint64_t)(v11 + 1) >> 60)
      sub_20BDDF694();
    v12 = v6 - *a1;
    v13 = v12 >> 3;
    if (v12 >> 3 <= (unint64_t)(v11 + 1))
      v13 = v11 + 1;
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF0)
      v14 = 0xFFFFFFFFFFFFFFFLL;
    else
      v14 = v13;
    v21 = a1 + 2;
    if (v14)
    {
      if (v14 >> 60)
        sub_20BDDF5B4();
      v15 = (char *)operator new(16 * v14);
    }
    else
    {
      v15 = 0;
    }
    v16 = (uint64_t *)&v15[16 * v11];
    v18[0] = v15;
    v18[1] = v16;
    v19 = v16;
    v20 = &v15[16 * v14];
    v17 = *a3;
    *v16 = *a2;
    sub_20BF1DD04(v16);
    v16[1] = v17;
    v19 += 2;
    sub_20C5275A4(a1, v18);
    v10 = (uint64_t *)a1[1];
    result = sub_20C52767C((uint64_t)v18);
  }
  else
  {
    v8 = *a3;
    *v7 = *a2;
    result = sub_20BF1DD04(v7);
    v7[1] = v8;
    v10 = v7 + 2;
    a1[1] = (uint64_t)(v7 + 2);
  }
  a1[1] = (uint64_t)v10;
  return result;
}

void sub_20C527B20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v10 + 8) = v11;
  _Unwind_Resume(exception_object);
}

void sub_20C527B40(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;

  if (a2)
  {
    if (*(char *)(a2 + 167) < 0)
      operator delete(*(void **)(a2 + 144));
    v3 = *(void **)(a2 + 120);
    if (v3)
    {
      *(_QWORD *)(a2 + 128) = v3;
      operator delete(v3);
    }
    sub_20C526C60(a2 + 80);
    sub_20C526500(a2 + 40);
    v4 = (void *)sub_20C5260F4(a2);
    operator delete(v4);
  }
}

_QWORD *sub_20C527B9C(_QWORD *a1, unint64_t a2)
{
  char *v4;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_20BDDF654(a1, a2);
    v4 = (char *)a1[1];
    bzero(v4, 8 * a2);
    a1[1] = &v4[8 * a2];
  }
  return a1;
}

void sub_20C527C04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  sub_20C527C18(&a9);
  _Unwind_Resume(a1);
}

void sub_20C527C18(void ***a1)
{
  void **v1;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v2;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v4;
  void *v5;

  v1 = *a1;
  v2 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)**a1;
  if (v2)
  {
    v4 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)v1[1];
    v5 = v2;
    if (v4 != v2)
    {
      do
        v4 = sub_20C455C74(v4 - 1);
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

_QWORD *sub_20C527C88(_QWORD *a1, _QWORD *a2)
{
  int8x8_t v2;
  unint64_t v3;
  uint8x8_t v4;
  unint64_t v5;
  _QWORD *v6;
  _QWORD *result;
  unint64_t v8;

  v2 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v2)
    return 0;
  v3 = bswap64(0x9E3779B97F4A7C55 * ~*a2);
  v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    v5 = v3;
    if (v3 >= *(_QWORD *)&v2)
      v5 = v3 % *(_QWORD *)&v2;
  }
  else
  {
    v5 = (*(_QWORD *)&v2 - 1) & v3;
  }
  v6 = *(_QWORD **)(*a1 + 8 * v5);
  if (!v6)
    return 0;
  result = (_QWORD *)*v6;
  if (*v6)
  {
    do
    {
      v8 = result[1];
      if (v3 == v8)
      {
        if (result[2] == *a2)
          return result;
      }
      else
      {
        if (v4.u32[0] > 1uLL)
        {
          if (v8 >= *(_QWORD *)&v2)
            v8 %= *(_QWORD *)&v2;
        }
        else
        {
          v8 &= *(_QWORD *)&v2 - 1;
        }
        if (v8 != v5)
          return 0;
      }
      result = (_QWORD *)*result;
    }
    while (result);
  }
  return result;
}

_QWORD *sub_20C527D58(_QWORD *a1, uint64_t a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;

  v3 = sub_20C203534(a1, a2);
  v4 = v3;
  if (v3)
  {
    v5 = v3;
    do
      v5 = (_QWORD *)*v5;
    while (v5 && sub_20BEB560C((uint64_t)(v5 + 2), a2));
  }
  return v4;
}

uint64_t sub_20C527DB4(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_20C527E28((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_20C527E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;

  v10 = 0;
  v11 = a7 - 8;
  while (a3 + v10 != a5)
  {
    v12 = (uint64_t *)(v11 + v10);
    *v12 = *(_QWORD *)(a3 + v10 - 8);
    v10 -= 8;
    sub_20BF1DD04(v12);
  }
  return a6;
}

uint64_t sub_20C527EBC(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 8;
    sub_20C455C74((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)(i - 8));
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void sub_20C527F08()
{
  void *__p;
  uint64_t v1;
  uint64_t v2;
  void *v3[2];
  char v4;

  sub_20BDDC0E4(v3, "UsdBlockStageCaches");
  __p = 0;
  v1 = 0;
  v2 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C53BA28, 0, (uint64_t)v3, (uint64_t)&__p);
  if (SHIBYTE(v2) < 0)
    operator delete(__p);
  if (v4 < 0)
    operator delete(v3[0]);
  sub_20BDDC0E4(v3, "UsdBlockStageCachePopulation");
  __p = 0;
  v1 = 0;
  v2 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C53BA28, 1, (uint64_t)v3, (uint64_t)&__p);
  if (SHIBYTE(v2) < 0)
    operator delete(__p);
  if (v4 < 0)
    operator delete(v3[0]);
  sub_20BDDC0E4(v3, "Usd_NoBlock");
  __p = 0;
  v1 = 0;
  v2 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C53BA28, 2, (uint64_t)v3, (uint64_t)&__p);
  if (SHIBYTE(v2) < 0)
    operator delete(__p);
  if (v4 < 0)
    operator delete(v3[0]);
}

void sub_20C528018(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
    operator delete(__p);
  if (a20 < 0)
    operator delete(a15);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCacheContext::_GetReadOnlyCaches(char **a1@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v3 = (uint64_t *)sub_20C528490();
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  sub_20BE8BBC4((void **)a1, (v3[1] - *v3) >> 3);
  v4 = *v3;
  v5 = v3[1];
  if (v5 != *v3)
  {
    do
    {
      v7 = *(_QWORD *)(v5 - 8);
      v5 -= 8;
      v6 = v7;
      v8 = *(_DWORD *)(v7 + 12);
      if (v8 != 1)
      {
        if (!v8)
          return;
        if (*(_BYTE *)(v6 + 8))
        {
          v10 = a1[1];
          v9 = (unint64_t)a1[2];
          if ((unint64_t)v10 >= v9)
          {
            v12 = (v10 - *a1) >> 3;
            if ((unint64_t)(v12 + 1) >> 61)
              sub_20BDDF694();
            v13 = v9 - (_QWORD)*a1;
            v14 = v13 >> 2;
            if (v13 >> 2 <= (unint64_t)(v12 + 1))
              v14 = v12 + 1;
            if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8)
              v15 = 0x1FFFFFFFFFFFFFFFLL;
            else
              v15 = v14;
            if (v15)
              v16 = (char *)sub_20BDDF6A8((uint64_t)(a1 + 2), v15);
            else
              v16 = 0;
            v17 = &v16[8 * v12];
            *(_QWORD *)v17 = *(_QWORD *)v6;
            v11 = v17 + 8;
            v19 = *a1;
            v18 = a1[1];
            if (v18 != *a1)
            {
              do
              {
                v20 = *((_QWORD *)v18 - 1);
                v18 -= 8;
                *((_QWORD *)v17 - 1) = v20;
                v17 -= 8;
              }
              while (v18 != v19);
              v18 = *a1;
            }
            *a1 = v17;
            a1[1] = v11;
            a1[2] = &v16[8 * v15];
            if (v18)
              operator delete(v18);
          }
          else
          {
            *(_QWORD *)v10 = *(_QWORD *)v6;
            v11 = v10 + 8;
          }
          a1[1] = v11;
          v4 = *v3;
        }
      }
    }
    while (v5 != v4);
  }
}

void sub_20C528198(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCacheContext::_GetReadableCaches(char **a1@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v3 = (uint64_t *)sub_20C528490();
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  sub_20BE8BBC4((void **)a1, (v3[1] - *v3) >> 3);
  v4 = *v3;
  v5 = v3[1];
  if (v5 != *v3)
  {
    do
    {
      v7 = *(_QWORD *)(v5 - 8);
      v5 -= 8;
      v6 = (_QWORD *)v7;
      v8 = *(_DWORD *)(v7 + 12);
      if (v8 != 1)
      {
        if (!v8)
          return;
        v10 = a1[1];
        v9 = (unint64_t)a1[2];
        if ((unint64_t)v10 >= v9)
        {
          v12 = (v10 - *a1) >> 3;
          if ((unint64_t)(v12 + 1) >> 61)
            sub_20BDDF694();
          v13 = v9 - (_QWORD)*a1;
          v14 = v13 >> 2;
          if (v13 >> 2 <= (unint64_t)(v12 + 1))
            v14 = v12 + 1;
          if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8)
            v15 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v15 = v14;
          if (v15)
            v16 = (char *)sub_20BDDF6A8((uint64_t)(a1 + 2), v15);
          else
            v16 = 0;
          v17 = &v16[8 * v12];
          *(_QWORD *)v17 = *v6;
          v11 = v17 + 8;
          v19 = *a1;
          v18 = a1[1];
          if (v18 != *a1)
          {
            do
            {
              v20 = *((_QWORD *)v18 - 1);
              v18 -= 8;
              *((_QWORD *)v17 - 1) = v20;
              v17 -= 8;
            }
            while (v18 != v19);
            v18 = *a1;
          }
          *a1 = v17;
          a1[1] = v11;
          a1[2] = &v16[8 * v15];
          if (v18)
            operator delete(v18);
        }
        else
        {
          *(_QWORD *)v10 = *v6;
          v11 = v10 + 8;
        }
        a1[1] = v11;
        v4 = *v3;
      }
    }
    while (v5 != v4);
  }
}

void sub_20C528300(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCacheContext::_GetWritableCaches(char **a1@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v3 = (uint64_t *)sub_20C528490();
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  sub_20BE8BBC4((void **)a1, (v3[1] - *v3) >> 3);
  v4 = *v3;
  v5 = v3[1];
  if (v5 != *v3)
  {
    do
    {
      v7 = *(_QWORD *)(v5 - 8);
      v5 -= 8;
      v6 = v7;
      if (*(_DWORD *)(v7 + 12) < 2u)
        break;
      if (!*(_BYTE *)(v6 + 8))
      {
        v9 = a1[1];
        v8 = (unint64_t)a1[2];
        if ((unint64_t)v9 >= v8)
        {
          v11 = (v9 - *a1) >> 3;
          if ((unint64_t)(v11 + 1) >> 61)
            sub_20BDDF694();
          v12 = v8 - (_QWORD)*a1;
          v13 = v12 >> 2;
          if (v12 >> 2 <= (unint64_t)(v11 + 1))
            v13 = v11 + 1;
          if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8)
            v14 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v14 = v13;
          if (v14)
            v15 = (char *)sub_20BDDF6A8((uint64_t)(a1 + 2), v14);
          else
            v15 = 0;
          v16 = &v15[8 * v11];
          *(_QWORD *)v16 = *(_QWORD *)v6;
          v10 = v16 + 8;
          v18 = *a1;
          v17 = a1[1];
          if (v17 != *a1)
          {
            do
            {
              v19 = *((_QWORD *)v17 - 1);
              v17 -= 8;
              *((_QWORD *)v16 - 1) = v19;
              v16 -= 8;
            }
            while (v17 != v18);
            v17 = *a1;
          }
          *a1 = v16;
          a1[1] = v10;
          a1[2] = &v15[8 * v14];
          if (v17)
            operator delete(v17);
        }
        else
        {
          *(_QWORD *)v9 = *(_QWORD *)v6;
          v10 = v9 + 8;
        }
        a1[1] = v10;
        v4 = *v3;
      }
    }
    while (v5 != v4);
  }
}

void sub_20C52846C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C528490()
{
  uint64_t result;
  _QWORD *v2;
  _QWORD *v4;
  char v5;

  if (!atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::Tf_ExportedStackedStorage<pxrInternal__aapl__pxrReserved__::UsdStageCacheContext,true>::value))
  {
    v2 = operator new(0x60uLL);
    sub_20C528530(v2);
    while (!__ldaxr((unint64_t *)&pxrInternal__aapl__pxrReserved__::Tf_ExportedStackedStorage<pxrInternal__aapl__pxrReserved__::UsdStageCacheContext,true>::value))
    {
      if (!__stlxr((unint64_t)v2, (unint64_t *)&pxrInternal__aapl__pxrReserved__::Tf_ExportedStackedStorage<pxrInternal__aapl__pxrReserved__::UsdStageCacheContext,true>::value))goto LABEL_2;
    }
    __clrex();
    v4 = sub_20C528718(v2);
    operator delete(v4);
  }
LABEL_2:
  v5 = 0;
  result = sub_20BEB5B80((unint64_t *)pxrInternal__aapl__pxrReserved__::Tf_ExportedStackedStorage<pxrInternal__aapl__pxrReserved__::UsdStageCacheContext,true>::value, &v5);
  if (!*(_BYTE *)(result + 24))
    *(_BYTE *)(result + 24) = 1;
  return result;
}

void sub_20C52851C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C528530(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t i;

  *a1 = &unk_24C51AE78;
  __dmb(0xBu);
  a1[1] = 0;
  __dmb(0xBu);
  a1[2] = 0;
  *a1 = &unk_24C53BA48;
  v2 = (_QWORD *)tbb::internal::allocate_via_handler_v3((tbb::internal *)8);
  *v2 = &unk_24C53BAA8;
  a1[3] = v2;
  for (i = 9; i != 12; ++i)
    a1[i] = 0;
  a1[7] = 0;
  a1[6] = 0;
  a1[8] = a1 + 9;
  a1[5] = sub_20C5286F8;
  return a1;
}

void sub_20C5285CC(_Unwind_Exception *a1)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_20C5285D4(uint64_t a1)
{
  tbb::internal::concurrent_vector_base_v3 *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = tbb::internal::concurrent_vector_base_v3::internal_grow_by((tbb::internal::concurrent_vector_base_v3 *)(a1 + 40), 1, (void *)0x80, (void (*)(void *, const void *, unint64_t))tbb::concurrent_vector<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::Tf_StackedStorageType<pxrInternal__aapl__pxrReserved__::UsdStageCacheContext,true>::_StackHolder>,128ul>,tbb::cache_aligned_allocator<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::Tf_StackedStorageType<pxrInternal__aapl__pxrReserved__::UsdStageCacheContext,true>::_StackHolder>,128ul>>>::initialize_array, 0);
  v3 = sub_20BEB4B94((unint64_t)v2);
  v4 = *(_QWORD *)(a1 + 64);
  __dmb(0xBu);
  v5 = *(_QWORD *)(v4 + 8 * v3) + (((_QWORD)v2 - ((1 << v3) & 0x1FFFFFFFFFFFFFELL)) << 7);
  (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 24) + 32))(*(_QWORD *)(a1 + 24), v5);
  *(_BYTE *)(v5 + 32) = 1;
  return v5;
}

uint64_t sub_20C528658(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return tbb::internal::NFS_Allocate((unint64_t)(a2 + 7) >> 3, 8, 0, a4);
}

uint64_t sub_20C52866C(int a1, tbb::internal *this)
{
  return tbb::internal::NFS_Free(this, this);
}

void sub_20C528678(_QWORD *a1)
{
  _QWORD *v1;

  v1 = sub_20C528718(a1);
  operator delete(v1);
}

_QWORD *sub_20C52868C()
{
  _QWORD *result;

  result = (_QWORD *)tbb::internal::allocate_via_handler_v3((tbb::internal *)8);
  *result = &unk_24C53BAA8;
  return result;
}

uint64_t sub_20C5286B4(uint64_t a1)
{
  void *v2;

  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 16))(a1);
  return tbb::internal::deallocate_via_handler_v3(a1, v2);
}

void sub_20C5286E8(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 16) = 0;
}

uint64_t sub_20C5286F8(int a1, tbb::internal *this, uint64_t a3, void *a4)
{
  return tbb::internal::NFS_Allocate((unint64_t)this, 128, 0, a4);
}

void tbb::concurrent_vector<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::Tf_StackedStorageType<pxrInternal__aapl__pxrReserved__::UsdStageCacheContext,true>::_StackHolder>,128ul>,tbb::cache_aligned_allocator<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::Tf_StackedStorageType<pxrInternal__aapl__pxrReserved__::UsdStageCacheContext,true>::_StackHolder>,128ul>>>::initialize_array(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
    bzero(a1, a3 << 7);
}

_QWORD *sub_20C528718(_QWORD *a1)
{
  uint64_t v2;

  *a1 = &unk_24C53BA48;
  v2 = a1[3];
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  sub_20BEB4954((uint64_t)a1);
  sub_20C528780(a1 + 4);
  *a1 = &unk_24C51AE78;
  return a1;
}

unint64_t *sub_20C528780(unint64_t *a1)
{
  tbb::internal::concurrent_vector_base_v3 *v2;
  _QWORD *v3;
  unint64_t v4;
  void *v5;

  v2 = (tbb::internal::concurrent_vector_base_v3 *)(a1 + 1);
  v3 = (_QWORD *)a1[4];
  v4 = tbb::internal::concurrent_vector_base_v3::internal_clear((tbb::internal::concurrent_vector_base_v3 *)(a1 + 1), (void (*)(void *, unint64_t))tbb::concurrent_vector<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::Tf_StackedStorageType<pxrInternal__aapl__pxrReserved__::UsdStageCacheContext,true>::_StackHolder>,128ul>,tbb::cache_aligned_allocator<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::Tf_StackedStorageType<pxrInternal__aapl__pxrReserved__::UsdStageCacheContext,true>::_StackHolder>,128ul>>>::destroy_array);
  sub_20BEB4AD0((uint64_t)a1, v3, v4, a1[2]);
  tbb::internal::concurrent_vector_base_v3::~concurrent_vector_base_v3(v2, v5);
  return a1;
}

void tbb::concurrent_vector<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::Tf_StackedStorageType<pxrInternal__aapl__pxrReserved__::UsdStageCacheContext,true>::_StackHolder>,128ul>,tbb::cache_aligned_allocator<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::Tf_StackedStorageType<pxrInternal__aapl__pxrReserved__::UsdStageCacheContext,true>::_StackHolder>,128ul>>>::destroy_array(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  if (a2)
  {
    v2 = a2;
    v3 = a1 + (a2 << 7) - 128;
    do
    {
      if (*(_BYTE *)(v3 + 32))
      {
        v4 = *(void **)v3;
        if (*(_QWORD *)v3)
        {
          *(_QWORD *)(v3 + 8) = v4;
          operator delete(v4);
        }
        *(_BYTE *)(v3 + 32) = 0;
      }
      v3 -= 128;
      --v2;
    }
    while (v2);
  }
}

void sub_20C528830()
{
  void *__p;
  uint64_t v1;
  uint64_t v2;
  void *v3[2];
  char v4;

  sub_20BDDC0E4(v3, "UsdStageLoadRules::AllRule");
  __p = 0;
  v1 = 0;
  v2 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C53BB30, 0, (uint64_t)v3, (uint64_t)&__p);
  if (SHIBYTE(v2) < 0)
    operator delete(__p);
  if (v4 < 0)
    operator delete(v3[0]);
  sub_20BDDC0E4(v3, "UsdStageLoadRules::OnlyRule");
  __p = 0;
  v1 = 0;
  v2 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C53BB30, 1, (uint64_t)v3, (uint64_t)&__p);
  if (SHIBYTE(v2) < 0)
    operator delete(__p);
  if (v4 < 0)
    operator delete(v3[0]);
  sub_20BDDC0E4(v3, "UsdStageLoadRules::NoneRule");
  __p = 0;
  v1 = 0;
  v2 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C53BB30, 2, (uint64_t)v3, (uint64_t)&__p);
  if (SHIBYTE(v2) < 0)
    operator delete(__p);
  if (v4 < 0)
    operator delete(v3[0]);
}

void sub_20C528940(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
    operator delete(__p);
  if (a20 < 0)
    operator delete(a15);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::LoadNone@<X0>(pxrInternal__aapl__pxrReserved__::UsdStageLoadRules *this@<X0>, uint64_t *a2@<X8>)
{
  _DWORD *v3;
  unint64_t v4;
  uint64_t result;
  int v6[3];

  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  v3 = (_DWORD *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(this);
  v6[0] = 2;
  v4 = a2[1];
  if (v4 >= a2[2])
  {
    result = sub_20C529970(a2, v3, v6);
  }
  else
  {
    sub_20BFD6E54((_DWORD *)a2[1], v3);
    sub_20BFD6EA4((_DWORD *)(v4 + 4), v3 + 1);
    *(_DWORD *)(v4 + 8) = 2;
    result = v4 + 12;
  }
  a2[1] = result;
  return result;
}

void sub_20C5289FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C33CEF4((void ***)va);
  _Unwind_Resume(a1);
}

_DWORD *pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::LoadWithDescendants(char **this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  int *v4;
  int *v5;
  int *v6;
  int v8;
  _DWORD v9[2];

  v4 = (int *)sub_20C528AD4(*this, this[1], a2);
  v6 = sub_20C340BD8((uint64_t)this, v4, v5);
  sub_20BFD6E54(&v8, a2);
  sub_20BFD6EA4(v9, (_DWORD *)a2 + 1);
  v9[1] = 0;
  sub_20C528BCC((uint64_t *)this, v6, &v8);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v9);
  return sub_20BFD265C(&v8);
}

void sub_20C528AC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  sub_20C528D64(&a9);
  _Unwind_Resume(a1);
}

char *sub_20C528AD4(char *a1, char *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3)
{
  char *v3;
  char *v5;
  unint64_t v6;
  pxrInternal__aapl__pxrReserved__::SdfPath *v7;
  int v8;
  unint64_t v9;
  char *v10;

  v3 = a2;
  if (a2 != a1)
  {
    v5 = a1;
    v6 = 0xAAAAAAAAAAAAAAABLL * ((a2 - a1) >> 2);
    do
    {
      v7 = (pxrInternal__aapl__pxrReserved__::SdfPath *)&v5[12 * (v6 >> 1)];
      v8 = sub_20BFD758C(v7, a3);
      if (v8)
        v6 += ~(v6 >> 1);
      else
        v6 >>= 1;
      if (v8)
        v5 = (char *)v7 + 12;
    }
    while (v6);
    if (v5 != v3)
    {
      v9 = 0xAAAAAAAAAAAAAAABLL * ((v3 - v5) >> 2);
      v10 = v5;
      do
      {
        if (pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix((pxrInternal__aapl__pxrReserved__::SdfPath *)&v10[12 * (v9 >> 1)], a3))
        {
          v10 += 12 * (v9 >> 1) + 12;
          v9 += ~(v9 >> 1);
        }
        else
        {
          v9 >>= 1;
        }
      }
      while (v9);
      return v5;
    }
  }
  return v3;
}

int *sub_20C528BCC(uint64_t *a1, int *a2, int *a3)
{
  int *v4;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  void *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v4 = a2;
  v7 = *a1;
  v6 = a1[1];
  v8 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)a2 - *a1) >> 2);
  v11 = a1[2];
  v9 = (uint64_t)(a1 + 2);
  v10 = v11;
  if (v6 >= v11)
  {
    v12 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v6 - v7) >> 2) + 1;
    if (v12 > 0x1555555555555555)
      sub_20BDDF694();
    v13 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v10 - v7) >> 2);
    if (2 * v13 > v12)
      v12 = 2 * v13;
    if (v13 >= 0xAAAAAAAAAAAAAAALL)
      v14 = 0x1555555555555555;
    else
      v14 = v12;
    v21 = v9;
    if (v14)
      v15 = (char *)sub_20C152228(v9, v14);
    else
      v15 = 0;
    v17 = v15;
    v18 = &v15[12 * v8];
    v19 = v18;
    v20 = &v15[12 * v14];
    sub_20C529AFC(&v17, a3);
    v4 = (int *)sub_20C3410F4((uint64_t)a1, &v17, v4);
    sub_20C341490(&v17);
  }
  else if (a2 == (int *)v6)
  {
    sub_20BFD38A4(a2, a3);
    sub_20BFD38DC(v4 + 1, a3 + 1);
    *(_DWORD *)(v7 + 12 * v8 + 8) = a3[2];
    a1[1] = (uint64_t)(v4 + 3);
  }
  else
  {
    sub_20C340ED0((uint64_t)a1, (uint64_t)a2, v6, (uint64_t)(a2 + 3));
    sub_20BFD3EBC(v4, a3);
    sub_20BFD3F10(v4 + 1, a3 + 1);
    *(_DWORD *)(v7 + 12 * v8 + 8) = a3[2];
  }
  return v4;
}

void sub_20C528D50(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C341490((void **)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_20C528D64(_DWORD *a1)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a1 + 1);
  return sub_20BFD265C(a1);
}

_DWORD *pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::LoadWithoutDescendants(char **this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  int *v4;
  int *v5;
  int *v6;
  int v8;
  _DWORD v9[2];

  v4 = (int *)sub_20C528AD4(*this, this[1], a2);
  v6 = sub_20C340BD8((uint64_t)this, v4, v5);
  sub_20BFD6E54(&v8, a2);
  sub_20BFD6EA4(v9, (_DWORD *)a2 + 1);
  v9[1] = 1;
  sub_20C528BCC((uint64_t *)this, v6, &v8);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v9);
  return sub_20BFD265C(&v8);
}

void sub_20C528E3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  sub_20C528D64(&a9);
  _Unwind_Resume(a1);
}

int *pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::Unload(char **this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  int *v4;
  int *v5;
  int *v6;
  int v8;

  v4 = (int *)sub_20C528AD4(*this, this[1], a2);
  v6 = sub_20C340BD8((uint64_t)this, v4, v5);
  v8 = 2;
  return sub_20C340C64((uint64_t *)this, v6, a2, &v8);
}

int *pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::LoadAndUnload(int *this, _QWORD *a2, _QWORD *a3, int a4)
{
  char **v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  BOOL v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v15;
  _QWORD *v16;
  _QWORD *v17;

  v6 = (char **)this;
  v7 = a3 + 1;
  v8 = (_QWORD *)*a3;
  if ((_QWORD *)*a3 != a3 + 1)
  {
    do
    {
      this = pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::Unload(v6, (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v8 + 28));
      v9 = (_QWORD *)v8[1];
      if (v9)
      {
        do
        {
          v10 = v9;
          v9 = (_QWORD *)*v9;
        }
        while (v9);
      }
      else
      {
        do
        {
          v10 = (_QWORD *)v8[2];
          v11 = *v10 == (_QWORD)v8;
          v8 = v10;
        }
        while (!v11);
      }
      v8 = v10;
    }
    while (v10 != v7);
  }
  v14 = (_QWORD *)*a2;
  v12 = a2 + 1;
  v13 = v14;
  if (v14 != v12)
  {
    do
    {
      v15 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v13 + 28);
      if (a4 == 1)
      {
        this = pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::LoadWithoutDescendants(v6, v15);
      }
      else if (!a4)
      {
        this = pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::LoadWithDescendants(v6, v15);
      }
      v16 = (_QWORD *)v13[1];
      if (v16)
      {
        do
        {
          v17 = v16;
          v16 = (_QWORD *)*v16;
        }
        while (v16);
      }
      else
      {
        do
        {
          v17 = (_QWORD *)v13[2];
          v11 = *v17 == (_QWORD)v13;
          v13 = v17;
        }
        while (!v11);
      }
      v13 = v17;
    }
    while (v17 != v12);
  }
  return this;
}

int *pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::AddRule(uint64_t a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, int a3)
{
  int *result;
  int v7;

  v7 = a3;
  result = (int *)pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::_LowerBound((char **)a1, a2);
  if (*(int **)(a1 + 8) == result || *(_QWORD *)result != *(_QWORD *)a2)
    return sub_20C340C64((uint64_t *)a1, result, a2, &v7);
  result[2] = a3;
  return result;
}

char *pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::_LowerBound(char **this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  char *result;
  char *v3;
  unint64_t v5;
  pxrInternal__aapl__pxrReserved__::SdfPath *v6;
  int v7;

  v3 = *this;
  result = this[1];
  if (result != v3)
  {
    v5 = 0xAAAAAAAAAAAAAAABLL * ((result - v3) >> 2);
    do
    {
      v6 = (pxrInternal__aapl__pxrReserved__::SdfPath *)&v3[12 * (v5 >> 1)];
      v7 = sub_20BFD758C(v6, a2);
      if (v7)
        v5 += ~(v5 >> 1);
      else
        v5 >>= 1;
      if (v7)
        v3 = (char *)v6 + 12;
    }
    while (v5);
    return v3;
  }
  return result;
}

{
  char *result;
  char *v3;
  unint64_t v5;
  pxrInternal__aapl__pxrReserved__::SdfPath *v6;
  int v7;

  v3 = *this;
  result = this[1];
  if (result != v3)
  {
    v5 = 0xAAAAAAAAAAAAAAABLL * ((result - v3) >> 2);
    do
    {
      v6 = (pxrInternal__aapl__pxrReserved__::SdfPath *)&v3[12 * (v5 >> 1)];
      v7 = sub_20BFD758C(v6, a2);
      if (v7)
        v5 += ~(v5 >> 1);
      else
        v5 >>= 1;
      if (v7)
        v3 = (char *)v6 + 12;
    }
    while (v5);
    return v3;
  }
  return result;
}

_DWORD *pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::SetRules(_DWORD *result, _DWORD **a2)
{
  if (result != (_DWORD *)a2)
    return sub_20C33E154((uint64_t)result, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * (a2[1] - *a2));
  return result;
}

void pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::Minimize(pxrInternal__aapl__pxrReserved__::UsdStageLoadRules *this)
{
  _DWORD *v1;
  _DWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  BOOL HasPrefix;
  char *v13;
  int v14;
  _DWORD *v15;
  _DWORD *v16;
  _DWORD *i;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  int v26;
  int v27;
  void *__p;
  char *v29;
  char *v30;
  char v31;

  v2 = *(_DWORD **)this;
  v1 = (_DWORD *)*((_QWORD *)this + 1);
  if (*(_DWORD **)this != v1)
  {
    if (!v2[2])
    {
      v4 = (_QWORD *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(this);
      v5 = *(_QWORD *)v2;
      v2 = *(_DWORD **)this;
      v1 = (_DWORD *)*((_QWORD *)this + 1);
      if (v5 == *v4)
      {
        sub_20C340E5C((uint64_t)&__p, v2 + 3, *((int **)this + 1), *(int **)this);
        v1 = v6;
        v7 = (_DWORD *)*((_QWORD *)this + 1);
        if (v7 != v6)
        {
          do
          {
            v7 -= 3;
            sub_20C33CF78((uint64_t)this + 16, v7);
          }
          while (v7 != v1);
        }
        *((_QWORD *)this + 1) = v1;
        v2 = *(_DWORD **)this;
      }
    }
    if (0xAAAAAAAAAAAAAAABLL * (v1 - v2) >= 2)
    {
      __p = 0;
      v29 = 0;
      v30 = 0;
      sub_20BFD6E54(&v26, v2);
      sub_20BFD6EA4(&v27, v2 + 1);
      v8 = *(_QWORD *)this;
      if (*((_QWORD *)this + 1) != *(_QWORD *)this)
      {
        v9 = 0;
        do
        {
          v10 = (char *)__p;
          v11 = v29;
          if (__p == v29)
          {
LABEL_13:
            v14 = 0;
            v13 = v10;
          }
          else
          {
            while (1)
            {
              HasPrefix = pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix((pxrInternal__aapl__pxrReserved__::SdfPath *)(v8 + 12 * v9), (const pxrInternal__aapl__pxrReserved__::SdfPath *)(*(_QWORD *)this+ 12 * *((_QWORD *)v11 - 1)));
              v10 = (char *)__p;
              v13 = v29;
              if (HasPrefix)
                break;
              v11 = v29 - 8;
              v29 -= 8;
              if (__p == v13 - 8)
                goto LABEL_13;
            }
            if (__p == v29)
              v14 = 0;
            else
              v14 = *(_DWORD *)(*(_QWORD *)this + 12 * *((_QWORD *)v29 - 1) + 8);
          }
          if (*(_DWORD *)(v8 + 12 * v9 + 8) == v14)
          {
            sub_20C340E5C((uint64_t)&v31, (int *)(*(_QWORD *)this + 12 * v9 + 12), *((int **)this + 1), (int *)(*(_QWORD *)this + 12 * v9));
            v16 = v15;
            for (i = (_DWORD *)*((_QWORD *)this + 1); i != v16; sub_20C33CF78((uint64_t)this + 16, i))
              i -= 3;
            *((_QWORD *)this + 1) = v16;
            --v9;
          }
          else
          {
            if (v13 >= v30)
            {
              v19 = (v13 - v10) >> 3;
              v20 = v19 + 1;
              if ((unint64_t)(v19 + 1) >> 61)
                sub_20BDDF694();
              v21 = v30 - v10;
              if ((v30 - v10) >> 2 > v20)
                v20 = v21 >> 2;
              if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFF8)
                v22 = 0x1FFFFFFFFFFFFFFFLL;
              else
                v22 = v20;
              if (v22)
              {
                v23 = (char *)sub_20BDDF6A8((uint64_t)&v30, v22);
                v10 = (char *)__p;
                v13 = v29;
              }
              else
              {
                v23 = 0;
              }
              v24 = &v23[8 * v19];
              *(_QWORD *)v24 = v9;
              v18 = v24 + 8;
              while (v13 != v10)
              {
                v25 = *((_QWORD *)v13 - 1);
                v13 -= 8;
                *((_QWORD *)v24 - 1) = v25;
                v24 -= 8;
              }
              __p = v24;
              v29 = v18;
              v30 = &v23[8 * v22];
              if (v10)
                operator delete(v10);
            }
            else
            {
              *(_QWORD *)v13 = v9;
              v18 = v13 + 8;
            }
            v29 = v18;
            v16 = (_DWORD *)*((_QWORD *)this + 1);
          }
          ++v9;
          v8 = *(_QWORD *)this;
        }
        while (v9 != 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v16 - *(_QWORD *)this) >> 2));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v27);
      sub_20BFD265C(&v26);
      if (__p)
      {
        v29 = (char *)__p;
        operator delete(__p);
      }
    }
  }
}

void sub_20C5293B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, void *__p, uint64_t a12)
{
  sub_20BFD1A18(&a10);
  if (__p)
  {
    a12 = (uint64_t)__p;
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::IsLoaded(char **this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  return pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::GetEffectiveRuleForPath(this, a2) != 2;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::GetEffectiveRuleForPath(char **this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  char *v4;
  char *v5;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v6;
  char *v7;
  int v8;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v14;

  v4 = *this;
  v5 = this[1];
  if (v4 != v5)
  {
    v6 = sub_20C529C48(v4, v5, a2, 0);
    v7 = this[1];
    if (v7 != (char *)v6)
    {
      v8 = *((_DWORD *)v6 + 2);
      if (v8)
      {
        if (v8 != 1 || *(_QWORD *)v6 != *(_QWORD *)a2)
        {
          v10 = sub_20C528AD4((char *)v6 + 12, v7, a2);
          if (v10 == v11)
            return 2;
          v12 = v10;
          v13 = v11;
LABEL_10:
          if (*((_DWORD *)v12 + 2) >= 2u)
          {
            v14 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)v12;
            while (1)
            {
              v12 += 12;
              if (v12 == v13)
                return 2;
              if (!pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix((pxrInternal__aapl__pxrReserved__::SdfPath *)v12, v14))goto LABEL_10;
            }
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

BOOL pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::IsLoadedWithAllDescendants(char **this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  char *v4;
  char *v5;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v6;
  char *v7;
  _BOOL8 result;
  char *v9;
  char *v10;
  char *v11;
  int v12;
  BOOL v13;

  v4 = *this;
  v5 = this[1];
  if (v4 == v5)
    return 1;
  v6 = sub_20C529C48(v4, v5, a2, 0);
  v7 = this[1];
  if (v7 != (char *)v6 && *((_DWORD *)v6 + 2))
    return 0;
  v9 = sub_20C528AD4(*this, v7, a2);
  if (v9 == v10)
    return 1;
  v11 = v9 + 12;
  do
  {
    v12 = *((_DWORD *)v11 - 1);
    result = v12 == 0;
    if (v12)
      v13 = 1;
    else
      v13 = v11 == v10;
    v11 += 12;
  }
  while (!v13);
  return result;
}

BOOL pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::IsLoadedWithNoDescendants(char **this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  char *v2;
  char *v3;
  unint64_t v6;
  pxrInternal__aapl__pxrReserved__::SdfPath *v7;
  int v8;
  char *v9;
  char *v10;
  int v11;

  v3 = *this;
  v2 = this[1];
  if (*this == v2)
    return 0;
  v6 = 0xAAAAAAAAAAAAAAABLL * ((v2 - v3) >> 2);
  do
  {
    v7 = (pxrInternal__aapl__pxrReserved__::SdfPath *)&v3[12 * (v6 >> 1)];
    v8 = sub_20BFD758C(v7, a2);
    if (v8)
      v6 += ~(v6 >> 1);
    else
      v6 >>= 1;
    if (v8)
      v3 = (char *)v7 + 12;
  }
  while (v6);
  v9 = this[1];
  if (v3 == v9 || *(_QWORD *)v3 != *(_QWORD *)a2 || *((_DWORD *)v3 + 2) != 1)
    return 0;
  v10 = v3 + 12;
  while (v10 != v9)
  {
    v11 = *((_DWORD *)v10 + 2);
    v10 += 12;
    if (v11 != 2)
      return !pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix((pxrInternal__aapl__pxrReserved__::SdfPath *)(v10 - 12), a2);
  }
  return 1;
}

BOOL pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::operator==(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL8 result;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  if (v2 - *a1 != a2[1] - *a2)
    return 0;
  if (v3 == v2)
    return 1;
  do
  {
    result = *(_QWORD *)v3 == *(_QWORD *)v4 && *(_DWORD *)(v3 + 8) == *(_DWORD *)(v4 + 8);
    v3 += 12;
    v4 += 12;
  }
  while (result && v3 != v2);
  return result;
}

_QWORD *pxrInternal__aapl__pxrReserved__::operator<<(_QWORD *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  int v6;
  const char *v7;
  const char *v8;
  const char *v9;
  size_t v10;
  _QWORD *v11;

  v3 = sub_20BDDC1C8(a1, (uint64_t)"(<", 2);
  v4 = pxrInternal__aapl__pxrReserved__::operator<<(v3, a2);
  v5 = sub_20BDDC1C8(v4, (uint64_t)">, ", 3);
  v6 = *((_DWORD *)a2 + 2);
  v7 = "OnlyRule";
  v8 = "<invalid value>";
  if (v6 == 2)
    v8 = "NoneRule";
  if (v6 != 1)
    v7 = v8;
  if (v6)
    v9 = v7;
  else
    v9 = "AllRule";
  v10 = strlen(v9);
  v11 = sub_20BDDC1C8(v5, (uint64_t)v9, v10);
  return sub_20BDDC1C8(v11, (uint64_t)")", 1);
}

{
  _QWORD *v3;
  _QWORD *v4;

  v3 = sub_20BDDC1C8(a1, (uint64_t)"HdPrimOriginSchema::OriginPath(", 31);
  v4 = pxrInternal__aapl__pxrReserved__::operator<<(v3, a2);
  return sub_20BDDC1C8(v4, (uint64_t)")", 1);
}

{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;

  v4 = sub_20BDDC1C8(a1, (uint64_t)"RenderVar \n", 11);
  v5 = sub_20BDDC1C8(v4, (uint64_t)"    varPath : ", 14);
  v6 = pxrInternal__aapl__pxrReserved__::operator<<(v5, a2);
  v7 = sub_20BDDC1C8(v6, (uint64_t)"    namespacedSettings", 22);
  pxrInternal__aapl__pxrReserved__::operator<<(v7, (_QWORD **)a2 + 6);
  return a1;
}

_QWORD *pxrInternal__aapl__pxrReserved__::operator<<(_QWORD *a1, pxrInternal__aapl__pxrReserved__::SdfPath **a2)
{
  _QWORD *v3;
  _QWORD *v4;

  v3 = sub_20BDDC1C8(a1, (uint64_t)"UsdStageLoadRules(", 18);
  v4 = sub_20C529844(v3, a2);
  return sub_20BDDC1C8(v4, (uint64_t)")", 1);
}

_QWORD *sub_20C529844(_QWORD *a1, pxrInternal__aapl__pxrReserved__::SdfPath **a2)
{
  pxrInternal__aapl__pxrReserved__::SdfPath *v4;
  pxrInternal__aapl__pxrReserved__::SdfPath *v5;
  _QWORD *v6;

  sub_20BDDC1C8(a1, (uint64_t)"[ ", 2);
  v4 = *a2;
  v5 = a2[1];
  if (*a2 != v5)
  {
    do
    {
      v6 = pxrInternal__aapl__pxrReserved__::operator<<(a1, v4);
      sub_20BDDC1C8(v6, (uint64_t)" ", 1);
      v4 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v4 + 12);
    }
    while (v4 != v5);
  }
  sub_20BDDC1C8(a1, (uint64_t)"]", 1);
  return a1;
}

unint64_t sub_20C5298F0(uint64_t a1, uint64_t a2)
{
  unsigned int *v3;
  int64_t v4;
  unint64_t v5;
  unsigned int *v6;
  uint64_t v8;
  char v9;

  v8 = 0;
  v9 = 0;
  v3 = *(unsigned int **)a2;
  v4 = *(_QWORD *)(a2 + 8) - (_QWORD)v3;
  if (v4)
  {
    v5 = 0xAAAAAAAAAAAAAAABLL * (v4 >> 2);
    do
    {
      --v5;
      v6 = v3 + 3;
      sub_20C529E78((uint64_t)&v8, v3);
      v3 = v6;
    }
    while (v5);
    v4 = 0x9E3779B97F4A7C55 * v8;
  }
  return bswap64(v4);
}

uint64_t sub_20C529970(uint64_t *a1, _DWORD *a2, _DWORD *a3)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void *v16[5];

  v4 = *a1;
  v5 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 2);
  v6 = v5 + 1;
  if (v5 + 1 > 0x1555555555555555)
    sub_20BDDF694();
  v9 = (uint64_t)(a1 + 2);
  v10 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v4) >> 2);
  if (2 * v10 > v6)
    v6 = 2 * v10;
  if (v10 >= 0xAAAAAAAAAAAAAAALL)
    v11 = 0x1555555555555555;
  else
    v11 = v6;
  v16[4] = a1 + 2;
  if (v11)
    v12 = (char *)sub_20C152228(v9, v11);
  else
    v12 = 0;
  v13 = &v12[12 * v5];
  v16[0] = v12;
  v16[1] = v13;
  v16[3] = &v12[12 * v11];
  sub_20BFD6E54(v13, a2);
  sub_20BFD6EA4((_DWORD *)v13 + 1, a2 + 1);
  *((_DWORD *)v13 + 2) = *a3;
  v16[2] = v13 + 12;
  sub_20C529A88(a1, v16);
  v14 = a1[1];
  sub_20C341490(v16);
  return v14;
}

void sub_20C529A74(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C341490((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C529A88(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_20C3412B0((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

_DWORD *sub_20C529AFC(_QWORD *a1, _DWORD *a2)
{
  int *v4;
  int *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _DWORD *result;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  v4 = (int *)a1[2];
  if (v4 == (int *)a1[3])
  {
    v5 = (int *)a1[1];
    if ((unint64_t)v5 <= *a1)
    {
      if (v4 == (int *)*a1)
        v10 = 1;
      else
        v10 = 0x5555555555555556 * (((uint64_t)v4 - *a1) >> 2);
      v11 = v10 >> 2;
      v12 = a1[4];
      v20 = a1[4];
      *(_QWORD *)&v18 = sub_20C152228(v12, v10);
      *((_QWORD *)&v18 + 1) = v18 + 12 * v11;
      *(_QWORD *)&v19 = *((_QWORD *)&v18 + 1);
      *((_QWORD *)&v19 + 1) = v18 + 12 * v13;
      sub_20C341228(&v18, a1[1], 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[2] - a1[1]) >> 2));
      v14 = v19;
      v15 = *(_OWORD *)a1;
      v16 = *((_OWORD *)a1 + 1);
      *(_OWORD *)a1 = v18;
      *((_OWORD *)a1 + 1) = v14;
      v18 = v15;
      v19 = v16;
      sub_20C341490((void **)&v18);
      v4 = (int *)a1[2];
    }
    else
    {
      v6 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v5 - *a1) >> 2);
      if (v6 >= -1)
        v7 = v6 + 1;
      else
        v7 = v6 + 2;
      v8 = -3 * (v7 >> 1);
      sub_20C340E5C((uint64_t)&v18, v5, v4, &v5[-3 * (v7 >> 1)]);
      v4 = v9;
      a1[1] += 4 * v8;
      a1[2] = v9;
    }
  }
  sub_20BFD38A4(v4, a2);
  result = sub_20BFD38DC(v4 + 1, a2 + 1);
  v4[2] = a2[2];
  a1[2] += 12;
  return result;
}

void sub_20C529C34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_20C341490(&a9);
  _Unwind_Resume(a1);
}

const pxrInternal__aapl__pxrReserved__::SdfPath *sub_20C529C48(char *a1, char *a2, pxrInternal__aapl__pxrReserved__::SdfPath *this, char a4)
{
  const pxrInternal__aapl__pxrReserved__::SdfPath *v7;
  unint64_t v9;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v10;
  pxrInternal__aapl__pxrReserved__::SdfPath *v11;
  int v12;
  unint64_t v13;
  pxrInternal__aapl__pxrReserved__::SdfPath *v14;
  int v15;
  int v17;
  int v18;
  uint64_t v19;

  if (a1 == a2)
    return (const pxrInternal__aapl__pxrReserved__::SdfPath *)a1;
  v9 = 0xAAAAAAAAAAAAAAABLL * ((a2 - a1) >> 2);
  v10 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)a1;
  do
  {
    v11 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v10 + 12 * (v9 >> 1));
    v12 = sub_20BFD758C(v11, this);
    if (v12)
      v9 += ~(v9 >> 1);
    else
      v9 >>= 1;
    if (v12)
      v10 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v11 + 12);
  }
  while (v9);
  if ((a4 & 1) != 0
    || v10 == (const pxrInternal__aapl__pxrReserved__::SdfPath *)a2
    || *(_QWORD *)v10 != *(_QWORD *)this)
  {
    if (v10 == (const pxrInternal__aapl__pxrReserved__::SdfPath *)a1)
    {
      return (const pxrInternal__aapl__pxrReserved__::SdfPath *)a2;
    }
    else
    {
      v7 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v10 - 12);
      if (pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix(this, (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v10 - 12)))
      {
        return (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v10 - 12);
      }
      else
      {
        pxrInternal__aapl__pxrReserved__::SdfPath::GetCommonPrefix(this, v7, (int *)&v19);
        while (1)
        {
          if (v7 == (const pxrInternal__aapl__pxrReserved__::SdfPath *)a1)
          {
            v10 = v7;
          }
          else
          {
            v13 = 0xAAAAAAAAAAAAAAABLL * ((v7 - (const pxrInternal__aapl__pxrReserved__::SdfPath *)a1) >> 2);
            v10 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)a1;
            do
            {
              v14 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v10 + 12 * (v13 >> 1));
              v15 = sub_20BFD758C(v14, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v19);
              if (v15)
                v13 += ~(v13 >> 1);
              else
                v13 >>= 1;
              if (v15)
                v10 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v14 + 12);
            }
            while (v13);
            if (v10 != v7 && *(_QWORD *)v10 == v19)
              goto LABEL_35;
          }
          if (v10 == (const pxrInternal__aapl__pxrReserved__::SdfPath *)a1)
          {
            v10 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)a2;
            goto LABEL_35;
          }
          v7 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v10 - 12);
          if (pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix((pxrInternal__aapl__pxrReserved__::SdfPath *)&v19, (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v10 - 12)))
          {
            break;
          }
          pxrInternal__aapl__pxrReserved__::SdfPath::GetCommonPrefix((pxrInternal__aapl__pxrReserved__::SdfPath *)&v19, (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v10 - 12), &v17);
          sub_20BFD3EBC((int *)&v19, &v17);
          sub_20BFD3F10((int *)&v19 + 1, &v18);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v18);
          sub_20BFD265C(&v17);
        }
        v10 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v10 - 12);
LABEL_35:
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v19 + 1);
        sub_20BFD265C(&v19);
      }
    }
  }
  return v10;
}

void sub_20C529E5C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C529E78(uint64_t a1, unsigned int *a2)
{
  uint64_t result;
  uint64_t v5;

  result = sub_20BFD84AC(a1, a2);
  v5 = a2[2];
  if (*(_BYTE *)(a1 + 8))
    v5 += (unint64_t)(*(_QWORD *)a1 + v5 + (*(_QWORD *)a1 + v5) * (*(_QWORD *)a1 + v5)) >> 1;
  else
    *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)a1 = v5;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::UsdStagePopulationMask(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::_ValidateAndNormalize((pxrInternal__aapl__pxrReserved__::SdfPath **)a1);
  return a1;
}

void sub_20C529F14(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD6F90((void ***)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::_ValidateAndNormalize(pxrInternal__aapl__pxrReserved__::SdfPath **this)
{
  pxrInternal__aapl__pxrReserved__::SdfPath *v2;
  pxrInternal__aapl__pxrReserved__::SdfPath *v3;
  const char *Text;
  _QWORD v5[4];
  char v6;

  v2 = *this;
  v3 = this[1];
  while (1)
  {
    if (v2 == v3)
    {
      pxrInternal__aapl__pxrReserved__::SdfPath::RemoveDescendentPaths((uint64_t)this);
      return;
    }
    if (!pxrInternal__aapl__pxrReserved__::SdfPath::IsAbsolutePath(v2)
      || !pxrInternal__aapl__pxrReserved__::SdfPath::IsAbsoluteRootOrPrimPath(v2))
    {
      break;
    }
    v2 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v2 + 8);
  }
  v5[0] = "usd/stagePopulationMask.cpp";
  v5[1] = "_ValidateAndNormalize";
  v5[2] = 258;
  v5[3] = "void pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::_ValidateAndNormalize()";
  v6 = 0;
  Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText(v2);
  pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v5, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid path <%s>; must be an absolute prim path or the absolute root path",
    Text);
}

unint64_t pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::Union@<X0>(pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7;
  unint64_t v8;
  unint64_t result;
  char *v10;
  char *v11;
  pxrInternal__aapl__pxrReserved__::SdfPath *v12;
  pxrInternal__aapl__pxrReserved__::SdfPath *v13;
  unint64_t v14;
  unint64_t v15;
  int v16;
  unint64_t v17;
  unint64_t v18;

  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  v7 = *((_QWORD *)this + 1) - *(_QWORD *)this;
  if ((uint64_t)(*((_QWORD *)a2 + 1) - *(_QWORD *)a2) >> 3 >= (unint64_t)(v7 >> 3))
    v8 = v7 >> 3;
  else
    v8 = (uint64_t)(*((_QWORD *)a2 + 1) - *(_QWORD *)a2) >> 3;
  result = (unint64_t)sub_20C0B8D74((uint64_t *)a3, v8);
  v11 = *(char **)this;
  v10 = (char *)*((_QWORD *)this + 1);
  v13 = *(pxrInternal__aapl__pxrReserved__::SdfPath **)a2;
  v12 = (pxrInternal__aapl__pxrReserved__::SdfPath *)*((_QWORD *)a2 + 1);
  while (v11 != v10)
  {
    if (v13 == v12)
      return (unint64_t)sub_20C031044((uint64_t *)a3, *(int **)(a3 + 8), v11, v10, (v10 - v11) >> 3);
    if (pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix(v13, (const pxrInternal__aapl__pxrReserved__::SdfPath *)v11))
    {
      v14 = *(_QWORD *)(a3 + 8);
      if (v14 >= *(_QWORD *)(a3 + 16))
      {
        result = sub_20BFD7890((uint64_t *)a3, v11);
      }
      else
      {
        sub_20BFD6E54(*(_DWORD **)(a3 + 8), v11);
        sub_20BFD6EA4((_DWORD *)(v14 + 4), (_DWORD *)v11 + 1);
        result = v14 + 8;
      }
      *(_QWORD *)(a3 + 8) = result;
      while (1)
      {
        v13 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v13 + 8);
        if (v13 == v12)
          break;
        result = pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix(v13, (const pxrInternal__aapl__pxrReserved__::SdfPath *)v11);
        if ((result & 1) == 0)
          goto LABEL_19;
      }
      v13 = v12;
LABEL_19:
      v11 += 8;
    }
    else if (pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix((pxrInternal__aapl__pxrReserved__::SdfPath *)v11, v13))
    {
      v15 = *(_QWORD *)(a3 + 8);
      if (v15 >= *(_QWORD *)(a3 + 16))
      {
        result = sub_20BFD7890((uint64_t *)a3, v13);
      }
      else
      {
        sub_20BFD6E54(*(_DWORD **)(a3 + 8), v13);
        sub_20BFD6EA4((_DWORD *)(v15 + 4), (_DWORD *)v13 + 1);
        result = v15 + 8;
      }
      *(_QWORD *)(a3 + 8) = result;
      while (1)
      {
        v11 += 8;
        if (v11 == v10)
          break;
        result = pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix((pxrInternal__aapl__pxrReserved__::SdfPath *)v11, v13);
        if ((result & 1) == 0)
          goto LABEL_29;
      }
      v11 = v10;
LABEL_29:
      v13 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v13 + 8);
    }
    else
    {
      v16 = sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)v11, v13);
      v18 = *(_QWORD *)(a3 + 8);
      v17 = *(_QWORD *)(a3 + 16);
      if (v16)
      {
        if (v18 >= v17)
        {
          result = sub_20BFD7890((uint64_t *)a3, v11);
        }
        else
        {
          sub_20BFD6E54(*(_DWORD **)(a3 + 8), v11);
          sub_20BFD6EA4((_DWORD *)(v18 + 4), (_DWORD *)v11 + 1);
          result = v18 + 8;
        }
        v11 += 8;
      }
      else
      {
        if (v18 >= v17)
        {
          result = sub_20BFD7890((uint64_t *)a3, v13);
        }
        else
        {
          sub_20BFD6E54(*(_DWORD **)(a3 + 8), v13);
          sub_20BFD6EA4((_DWORD *)(v18 + 4), (_DWORD *)v13 + 1);
          result = v18 + 8;
        }
        v13 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v13 + 8);
      }
      *(_QWORD *)(a3 + 8) = result;
    }
  }
  if (v13 != v12)
    return (unint64_t)sub_20C031044((uint64_t *)a3, *(int **)(a3 + 8), v13, v12, (v12 - v13) >> 3);
  return result;
}

void sub_20C52A22C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD6F90((void ***)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::GetUnion(pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *this@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, uint64_t a3@<X8>)
{
  const char *Text;
  char *v7;
  const char *v8;
  uint64_t v9;
  const char *v10;
  char v11;
  char **v12;

  if (!pxrInternal__aapl__pxrReserved__::SdfPath::IsAbsolutePath(a2)
    || !pxrInternal__aapl__pxrReserved__::SdfPath::IsAbsoluteRootOrPrimPath(a2))
  {
    v7 = "usd/stagePopulationMask.cpp";
    v8 = "GetUnion";
    v9 = 95;
    v10 = "UsdStagePopulationMask pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::GetUnion(const SdfPath &) const";
    v11 = 0;
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText(a2);
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v7, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid path <%s>; must be an absolute prim path or the absolute root path",
      Text);
  }
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v8 = (const char *)sub_20BFD7890((uint64_t *)&v7, a2);
  pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::Union(this, (const pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *)&v7, a3);
  v12 = &v7;
  sub_20BFD6F90((void ***)&v12);
}

void sub_20C52A334(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 40) = v1;
  sub_20BFD6F90((void ***)(v2 - 40));
  _Unwind_Resume(a1);
}

unint64_t pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::Intersection@<X0>(pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7;
  unint64_t v8;
  unint64_t result;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v10;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v11;
  pxrInternal__aapl__pxrReserved__::SdfPath *v12;
  pxrInternal__aapl__pxrReserved__::SdfPath *v13;
  unint64_t v14;
  unint64_t v15;

  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  v7 = *((_QWORD *)this + 1) - *(_QWORD *)this;
  if ((uint64_t)(*((_QWORD *)a2 + 1) - *(_QWORD *)a2) >> 3 >= (unint64_t)(v7 >> 3))
    v8 = v7 >> 3;
  else
    v8 = (uint64_t)(*((_QWORD *)a2 + 1) - *(_QWORD *)a2) >> 3;
  result = (unint64_t)sub_20C0B8D74(a3, v8);
  v10 = *(const pxrInternal__aapl__pxrReserved__::SdfPath **)this;
  v11 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)*((_QWORD *)this + 1);
  if (*(const pxrInternal__aapl__pxrReserved__::SdfPath **)this != v11)
  {
    v12 = *(pxrInternal__aapl__pxrReserved__::SdfPath **)a2;
    v13 = (pxrInternal__aapl__pxrReserved__::SdfPath *)*((_QWORD *)a2 + 1);
    do
    {
      if (v12 == v13)
        break;
      if (pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix(v12, v10))
      {
        while (1)
        {
          v14 = a3[1];
          if (v14 >= a3[2])
          {
            result = sub_20BFD7890(a3, v12);
          }
          else
          {
            sub_20BFD6E54((_DWORD *)a3[1], v12);
            sub_20BFD6EA4((_DWORD *)(v14 + 4), (_DWORD *)v12 + 1);
            result = v14 + 8;
          }
          v12 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v12 + 8);
          a3[1] = result;
          if (v12 == v13)
            break;
          result = pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix(v12, v10);
          if ((result & 1) == 0)
            goto LABEL_22;
        }
        v12 = v13;
LABEL_22:
        v10 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v10 + 8);
      }
      else if (pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix(v10, v12))
      {
        while (1)
        {
          v15 = a3[1];
          if (v15 >= a3[2])
          {
            result = sub_20BFD7890(a3, v10);
          }
          else
          {
            sub_20BFD6E54((_DWORD *)a3[1], v10);
            sub_20BFD6EA4((_DWORD *)(v15 + 4), (_DWORD *)v10 + 1);
            result = v15 + 8;
          }
          v10 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v10 + 8);
          a3[1] = result;
          if (v10 == v11)
            break;
          result = pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix(v10, v12);
          if ((result & 1) == 0)
            goto LABEL_27;
        }
        v10 = v11;
LABEL_27:
        v12 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v12 + 8);
      }
      else
      {
        result = sub_20BFD758C(v10, v12);
        if ((_DWORD)result)
          v10 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v10 + 8);
        else
          v12 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v12 + 8);
      }
    }
    while (v10 != v11);
  }
  return result;
}

void sub_20C52A4E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD6F90((void ***)va);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::Includes(pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *this, const pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  BOOL v7;
  uint64_t v9;
  uint64_t v10;
  void **v11;

  pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::Union(this, a2, (uint64_t)&v9);
  v3 = *(uint64_t **)this;
  if (v10 - v9 == *((_QWORD *)this + 1) - *(_QWORD *)this)
  {
    if (v9 == v10)
    {
      v6 = 1;
    }
    else
    {
      v4 = v9 + 8;
      do
      {
        v5 = *v3++;
        v6 = *(_QWORD *)(v4 - 8) == v5;
        v7 = *(_QWORD *)(v4 - 8) != v5 || v4 == v10;
        v4 += 8;
      }
      while (!v7);
    }
  }
  else
  {
    v6 = 0;
  }
  v11 = (void **)&v9;
  sub_20BFD6F90(&v11);
  return v6;
}

BOOL pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::Includes(pxrInternal__aapl__pxrReserved__::SdfPath **this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  pxrInternal__aapl__pxrReserved__::SdfPath *v2;
  pxrInternal__aapl__pxrReserved__::SdfPath *v3;
  unint64_t v6;
  pxrInternal__aapl__pxrReserved__::SdfPath *v7;
  int v8;
  pxrInternal__aapl__pxrReserved__::SdfPath *v9;
  pxrInternal__aapl__pxrReserved__::SdfPath *v10;

  v3 = *this;
  v2 = this[1];
  if (*this == v2)
    return 0;
  v6 = (v2 - v3) >> 3;
  do
  {
    v7 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v3 + 8 * (v6 >> 1));
    v8 = sub_20BFD758C(v7, a2);
    if (v8)
      v6 += ~(v6 >> 1);
    else
      v6 >>= 1;
    if (v8)
      v3 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v7 + 8);
  }
  while (v6);
  v9 = *this;
  if (v3 == this[1])
    v10 = 0;
  else
    v10 = v3;
  if (v3 != v9
    && pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix(a2, (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v3 - 8)))
  {
    return 1;
  }
  return v10 && pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix(v10, a2);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::IncludesSubtree(pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  return sub_20C52A694((uint64_t)this, a2) & 1;
}

uint64_t sub_20C52A694(uint64_t a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  uint64_t v2;
  _QWORD *v3;
  unint64_t v6;
  pxrInternal__aapl__pxrReserved__::SdfPath *v7;
  int v8;
  _QWORD *v9;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v10;
  BOOL v11;
  uint64_t result;

  v3 = *(_QWORD **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)a1 == v2)
  {
LABEL_18:
    LODWORD(result) = 0;
    return result;
  }
  v6 = (v2 - (uint64_t)v3) >> 3;
  do
  {
    v7 = (pxrInternal__aapl__pxrReserved__::SdfPath *)&v3[v6 >> 1];
    v8 = sub_20BFD758C(v7, a2);
    if (v8)
      v6 += ~(v6 >> 1);
    else
      v6 >>= 1;
    if (v8)
      v3 = (_QWORD *)((char *)v7 + 8);
  }
  while (v6);
  v9 = *(_QWORD **)a1;
  if (v3 == *(_QWORD **)a1)
    v10 = 0;
  else
    v10 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v3 - 1);
  if (v3)
    v11 = v3 == *(_QWORD **)(a1 + 8);
  else
    v11 = 1;
  if (v11)
  {
    if (v3 != v9)
    {
LABEL_23:
      LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix(a2, v10);
      return result;
    }
    goto LABEL_18;
  }
  LODWORD(result) = *v3 == *(_QWORD *)a2;
  if (*v3 != *(_QWORD *)a2 && v3 != v9)
    goto LABEL_23;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::GetIncludedChildNames(uint64_t a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t a3)
{
  char *v6;
  char *i;
  uint64_t v8;
  uint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  pxrInternal__aapl__pxrReserved__::SdfPath *v12;
  pxrInternal__aapl__pxrReserved__::SdfPath *j;
  _BOOL4 v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  _QWORD *v21;
  uint64_t v22;
  unsigned int *v23;
  unsigned int v24;
  char *v25;
  unsigned int *v26;
  unsigned int v27;
  _QWORD v29[4];
  char v30;
  uint64_t v31;
  uint64_t v32;

  v6 = *(char **)a3;
  for (i = *(char **)(a3 + 8); i != v6; i -= 8)
  {
    v9 = *((_QWORD *)i - 1);
    v8 = v9;
    if ((v9 & 7) != 0)
    {
      v10 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
      do
        v11 = __ldxr(v10);
      while (__stlxr(v11 - 2, v10));
    }
  }
  *(_QWORD *)(a3 + 8) = v6;
  if ((sub_20C52A694(a1, a2) & 1) != 0)
    return 1;
  for (j = v12;
        j != *(pxrInternal__aapl__pxrReserved__::SdfPath **)(a1 + 8);
        j = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)j + 8))
  {
    if (!pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix(j, a2))
      return *(_QWORD *)a3 != *(_QWORD *)(a3 + 8);
    sub_20BFD6E54(v29, j);
    sub_20BFD6EA4((_DWORD *)v29 + 1, (_DWORD *)j + 1);
    while (1)
    {
      v14 = pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(v29);
      v15 = v14;
      if (!v14)
        break;
      pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)v29, &v32);
      v16 = v32;
      v17 = *(_QWORD *)a2;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v32 + 1);
      sub_20BFD265C(&v32);
      if (v16 == v17)
      {
        v18 = *(_QWORD *)pxrInternal__aapl__pxrReserved__::SdfPath::GetNameToken((pxrInternal__aapl__pxrReserved__::SdfPath *)v29);
        v31 = v18;
        if ((v18 & 7) != 0)
        {
          v19 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
          do
            v20 = __ldxr(v19);
          while (__stxr(v20 + 2, v19));
          if ((v20 & 1) == 0)
            v31 = (uint64_t)v19;
        }
        break;
      }
      pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)v29, &v32);
      sub_20BFD3EBC((int *)v29, (int *)&v32);
      sub_20BFD3F10((int *)v29 + 1, (int *)&v32 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v32 + 1);
      sub_20BFD265C(&v32);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v29 + 1);
    sub_20BFD265C(v29);
    if (v15)
    {
      if (v31)
        goto LABEL_24;
    }
    else
    {
      v31 = 0;
    }
    v29[0] = "usd/stagePopulationMask.cpp";
    v29[1] = "GetIncludedChildNames";
    v29[2] = 228;
    v29[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::GetIncludedChildNames(const SdfPath &, std::"
             "vector<TfToken> *) const";
    v30 = 0;
    if ((pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v29, "!childName.IsEmpty()", 0) & 1) != 0)
    {
LABEL_24:
      v21 = *(_QWORD **)(a3 + 8);
      if (*(_QWORD **)a3 == v21 || (*(v21 - 1) & 0xFFFFFFFFFFFFFFF8) != (v31 & 0xFFFFFFFFFFFFFFF8))
      {
        if ((unint64_t)v21 >= *(_QWORD *)(a3 + 16))
        {
          v25 = sub_20BFCA068((char **)a3, &v31);
        }
        else
        {
          v22 = v31;
          *v21 = v31;
          if ((v22 & 7) != 0)
          {
            v23 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
            do
              v24 = __ldxr(v23);
            while (__stxr(v24 + 2, v23));
            if ((v24 & 1) == 0)
              *v21 &= 0xFFFFFFFFFFFFFFF8;
          }
          v25 = (char *)(v21 + 1);
        }
        *(_QWORD *)(a3 + 8) = v25;
      }
    }
    if ((v31 & 7) != 0)
    {
      v26 = (unsigned int *)(v31 & 0xFFFFFFFFFFFFFFF8);
      do
        v27 = __ldxr(v26);
      while (__stlxr(v27 - 2, v26));
    }
  }
  return *(_QWORD *)a3 != *(_QWORD *)(a3 + 8);
}

void sub_20C52AA14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  unsigned int *v15;
  unsigned int v16;

  if ((a15 & 7) != 0)
  {
    v15 = (unsigned int *)(a15 & 0xFFFFFFFFFFFFFFF8);
    do
      v16 = __ldxr(v15);
    while (__stlxr(v16 - 2, v15));
  }
  _Unwind_Resume(exception_object);
}

_QWORD *pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::GetPaths@<X0>(pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *this@<X0>, _QWORD *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return sub_20BFD6D38(a2, *(_DWORD **)this, *((_DWORD **)this + 1), (uint64_t)(*((_QWORD *)this + 1) - *(_QWORD *)this) >> 3);
}

_QWORD *pxrInternal__aapl__pxrReserved__::operator<<(_QWORD *a1, _DWORD **a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  pxrInternal__aapl__pxrReserved__::SdfPath *v7[3];
  char v8;
  pxrInternal__aapl__pxrReserved__::SdfPath **v9;

  v3 = sub_20BDDC1C8(a1, (uint64_t)"UsdStagePopulationMask(", 23);
  memset(v7, 0, sizeof(v7));
  sub_20BFD6D38(v7, *a2, a2[1], ((char *)a2[1] - (char *)*a2) >> 3);
  v4 = sub_20C0D84C0(v3, v7);
  v8 = 41;
  v5 = sub_20BDDC1C8(v4, (uint64_t)&v8, 1);
  v9 = v7;
  sub_20BFD6F90((void ***)&v9);
  return v5;
}

void sub_20C52AB20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_20BFD6F90((void ***)va);
  _Unwind_Resume(a1);
}

unint64_t pxrInternal__aapl__pxrReserved__::hash_value(unsigned int **a1)
{
  char v2;

  return sub_20C030B60((uint64_t)&v2, a1);
}

void pxrInternal__aapl__pxrReserved__::UsdTimeCodeTokens_StaticTokenType::~UsdTimeCodeTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::UsdTimeCodeTokens_StaticTokenType *this)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int *v5;
  unsigned int v6;
  void **v7;

  v7 = (void **)((char *)this + 16);
  sub_20BEEB2B8(&v7);
  v2 = *((_QWORD *)this + 1);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  if ((*(_QWORD *)this & 7) != 0)
  {
    v5 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
}

pxrInternal__aapl__pxrReserved__::UsdTimeCodeTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::UsdTimeCodeTokens_StaticTokenType::UsdTimeCodeTokens_StaticTokenType(unsigned int **this)
{
  unsigned int **v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int **v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int *v20;
  unsigned int *v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v2 = (unsigned int **)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "DEFAULT", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2, "EARLIEST", 0);
  v3 = *this;
  v20 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v20 = v4;
  }
  v6 = *v2;
  v21 = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      v21 = v7;
  }
  this[2] = 0;
  this[3] = 0;
  this[4] = 0;
  v9 = (unsigned int *)operator new(0x10uLL);
  v10 = 0;
  this[2] = v9;
  this[3] = v9;
  this[4] = v9 + 4;
  do
  {
    v11 = (&v20)[v10];
    *(_QWORD *)v9 = v11;
    if ((v11 & 7) != 0)
    {
      v12 = (unsigned int *)((unint64_t)v11 & 0xFFFFFFFFFFFFFFF8);
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 2, v12));
      if ((v13 & 1) == 0)
        *(_QWORD *)v9 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v10;
    v9 += 2;
  }
  while (v10 != 2);
  v14 = (unsigned int **)&v22;
  this[3] = v9;
  do
  {
    v16 = (uint64_t)*--v14;
    v15 = v16;
    if ((v16 & 7) != 0)
    {
      v17 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
  }
  while (v14 != &v20);
  return (pxrInternal__aapl__pxrReserved__::UsdTimeCodeTokens_StaticTokenType *)this;
}

void sub_20C52AD5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  _QWORD *v14;
  _QWORD *v15;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int *v22;
  unsigned int v23;
  unsigned int *v24;
  unsigned int v25;

  sub_20BEEB2B8(&a10);
  v17 = &a14;
  while (1)
  {
    v19 = *--v17;
    v18 = v19;
    if ((v19 & 7) != 0)
    {
      v20 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stlxr(v21 - 2, v20));
    }
    if (v17 == (uint64_t *)&a12)
    {
      if ((*v15 & 7) != 0)
      {
        v22 = (unsigned int *)(*v15 & 0xFFFFFFFFFFFFFFF8);
        do
          v23 = __ldxr(v22);
        while (__stlxr(v23 - 2, v22));
      }
      if ((*v14 & 7) != 0)
      {
        v24 = (unsigned int *)(*v14 & 0xFFFFFFFFFFFFFFF8);
        do
          v25 = __ldxr(v24);
        while (__stlxr(v25 - 2, v24));
      }
      _Unwind_Resume(a1);
    }
  }
}

uint64_t *pxrInternal__aapl__pxrReserved__::operator>>(uint64_t *a1, double *a2)
{
  unsigned int **v4;
  unsigned int **v5;
  double v6;
  unint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  uint64_t v11;
  std::string __str;

  memset(&__str, 0, sizeof(__str));
  sub_20C52AFFC(a1, (uint64_t)&__str);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v11);
  v4 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdTimeCodeTokens);
  if (!v4)
    v4 = sub_20C52B228(&pxrInternal__aapl__pxrReserved__::UsdTimeCodeTokens);
  if ((v11 & 0xFFFFFFFFFFFFFFF8) == ((unint64_t)*v4 & 0xFFFFFFFFFFFFFFF8))
  {
    v7 = 0x7FF8000000000000;
  }
  else
  {
    v5 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdTimeCodeTokens);
    if (!v5)
      v5 = sub_20C52B228(&pxrInternal__aapl__pxrReserved__::UsdTimeCodeTokens);
    if ((v11 & 0xFFFFFFFFFFFFFFF8) != ((unint64_t)v5[1] & 0xFFFFFFFFFFFFFFF8))
    {
      v6 = std::stod(&__str, 0);
      goto LABEL_11;
    }
    v7 = 0xFFEFFFFFFFFFFFFFLL;
  }
  v6 = *(double *)&v7;
LABEL_11:
  *a2 = v6;
  if ((v11 & 7) != 0)
  {
    v8 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  return a1;
}

void sub_20C52AF94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  unsigned int *v16;
  unsigned int v17;

  if ((a9 & 7) != 0)
  {
    v16 = (unsigned int *)(a9 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_20C52AFFC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const std::locale::facet *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _BYTE *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  std::locale v19;
  char v20;

  MEMORY[0x212B92AF0](&v20, a1, 0);
  if (!v20)
    return a1;
  if (*(char *)(a2 + 23) < 0)
  {
    **(_BYTE **)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
  }
  else
  {
    *(_BYTE *)a2 = 0;
    *(_BYTE *)(a2 + 23) = 0;
  }
  v4 = *(_QWORD *)(*a1 - 24);
  v5 = *(uint64_t *)((char *)a1 + v4 + 24);
  if (v5 <= 1)
    v6 = 1;
  else
    v6 = *(uint64_t *)((char *)a1 + v4 + 24);
  std::ios_base::getloc((const std::ios_base *)((char *)a1 + v4));
  v7 = std::locale::use_facet(&v19, MEMORY[0x24BEDB350]);
  std::locale::~locale(&v19);
  v8 = 0;
  v9 = a1 + 5;
  if (v5 >= 1)
    v10 = v6;
  else
    v10 = 0x7FFFFFFFFFFFFFF7;
  while (1)
  {
    v11 = *(_QWORD **)((char *)v9 + *(_QWORD *)(*a1 - 24));
    v12 = (_BYTE *)v11[3];
    if (v12 == (_BYTE *)v11[4])
      break;
    LOBYTE(v13) = *v12;
LABEL_14:
    if ((v13 & 0x80) == 0 && (*((_DWORD *)&v7[1].~facet + v13) & 0x4000) != 0)
    {
      v16 = 0;
      goto LABEL_23;
    }
    std::string::push_back((std::string *)a2, v13);
    v14 = *(_QWORD **)((char *)v9 + *(_QWORD *)(*a1 - 24));
    v15 = v14[3];
    if (v15 == v14[4])
      (*(void (**)(_QWORD *))(*v14 + 80))(v14);
    else
      v14[3] = v15 + 1;
    if (v10 == ++v8)
    {
      v16 = 0;
      v17 = *a1;
      *(uint64_t *)((char *)a1 + *(_QWORD *)(*a1 - 24) + 24) = 0;
      goto LABEL_25;
    }
  }
  v13 = (*(uint64_t (**)(_QWORD *))(*v11 + 72))(v11);
  if (v13 != -1)
    goto LABEL_14;
  v16 = 2;
LABEL_23:
  v17 = *a1;
  *(uint64_t *)((char *)a1 + *(_QWORD *)(*a1 - 24) + 24) = 0;
  if (!v8)
    v16 |= 4u;
LABEL_25:
  std::ios_base::clear((std::ios_base *)((char *)a1 + *(_QWORD *)(v17 - 24)), *(_DWORD *)((char *)a1 + *(_QWORD *)(v17 - 24) + 32) | v16);
  return a1;
}

void sub_20C52B1B0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::locale a9)
{
  _QWORD *v9;
  uint64_t v11;

  std::locale::~locale(&a9);
  __cxa_begin_catch(a1);
  v11 = *v9;
  *(_DWORD *)((char *)v9 + *(_QWORD *)(*v9 - 24) + 32) |= 1u;
  if ((*((_BYTE *)v9 + *(_QWORD *)(v11 - 24) + 36) & 1) == 0)
  {
    __cxa_end_catch();
    JUMPOUT(0x20C52B17CLL);
  }
  __cxa_rethrow();
}

void sub_20C52B214(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

unsigned int **sub_20C52B228(unint64_t *a1)
{
  unsigned int **result;
  void *v4;

  result = sub_20C52B270();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::UsdTimeCodeTokens_StaticTokenType::~UsdTimeCodeTokens_StaticTokenType((pxrInternal__aapl__pxrReserved__::UsdTimeCodeTokens_StaticTokenType *)result);
    operator delete(v4);
  }
  return (unsigned int **)atomic_load(a1);
}

unsigned int **sub_20C52B270()
{
  unsigned int **v0;

  v0 = (unsigned int **)operator new(0x28uLL);
  pxrInternal__aapl__pxrReserved__::UsdTimeCodeTokens_StaticTokenType::UsdTimeCodeTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C52B29C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::UsdTokensType *pxrInternal__aapl__pxrReserved__::UsdTokensType::UsdTokensType(pxrInternal__aapl__pxrReserved__::UsdTokensType *this)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  uint64_t v26;
  unsigned int *v27;
  unsigned int v28;
  uint64_t v29;
  unsigned int *v30;
  unsigned int v31;
  uint64_t v32;
  unsigned int *v33;
  unsigned int v34;
  uint64_t v35;
  unsigned int *v36;
  unsigned int v37;
  uint64_t v38;
  unsigned int *v39;
  unsigned int v40;
  uint64_t v41;
  unsigned int *v42;
  unsigned int v43;
  uint64_t v44;
  unsigned int *v45;
  unsigned int v46;
  uint64_t v47;
  unsigned int *v48;
  unsigned int v49;
  uint64_t v50;
  unsigned int *v51;
  unsigned int v52;
  uint64_t v53;
  unsigned int *v54;
  unsigned int v55;
  uint64_t v56;
  unsigned int *v57;
  unsigned int v58;
  uint64_t v59;
  unsigned int *v60;
  unsigned int v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int *v65;
  unsigned int v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int *v70;
  unsigned int v71;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v94 = *MEMORY[0x24BDAC8D0];
  v73 = (uint64_t *)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "apiSchemas", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v73, "clips", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 16, "clipSets", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 24, "collection", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 32, "collection:__INSTANCE_NAME__", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 40, "collection:__INSTANCE_NAME__:excludes", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 48, "collection:__INSTANCE_NAME__:expansionRule", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 56, "collection:__INSTANCE_NAME__:includeRoot", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 64, "collection:__INSTANCE_NAME__:includes", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 72, "collection:__INSTANCE_NAME__:membershipExpression", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 80, "exclude", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 88, "expandPrims", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 96, "expandPrimsAndProperties", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 104, "explicitOnly", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 112, "fallbackPrimTypes", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 120, "APISchemaBase", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 128, "ClipsAPI", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 136, "CollectionAPI", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 144, "ModelAPI", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 152, "Typed", 0);
  v2 = *(_QWORD *)this;
  v74 = v2;
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 2, v3));
    if ((v4 & 1) == 0)
      v74 &= 0xFFFFFFFFFFFFFFF8;
  }
  v5 = *v73;
  v75 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v75 &= 0xFFFFFFFFFFFFFFF8;
  }
  v8 = *((_QWORD *)this + 2);
  v76 = v8;
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 2, v9));
    if ((v10 & 1) == 0)
      v76 &= 0xFFFFFFFFFFFFFFF8;
  }
  v11 = *((_QWORD *)this + 3);
  v77 = v11;
  if ((v11 & 7) != 0)
  {
    v12 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 2, v12));
    if ((v13 & 1) == 0)
      v77 &= 0xFFFFFFFFFFFFFFF8;
  }
  v14 = *((_QWORD *)this + 4);
  v78 = v14;
  if ((v14 & 7) != 0)
  {
    v15 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 2, v15));
    if ((v16 & 1) == 0)
      v78 &= 0xFFFFFFFFFFFFFFF8;
  }
  v17 = *((_QWORD *)this + 5);
  v79 = v17;
  if ((v17 & 7) != 0)
  {
    v18 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 2, v18));
    if ((v19 & 1) == 0)
      v79 &= 0xFFFFFFFFFFFFFFF8;
  }
  v20 = *((_QWORD *)this + 6);
  v80 = v20;
  if ((v20 & 7) != 0)
  {
    v21 = (unsigned int *)(v20 & 0xFFFFFFFFFFFFFFF8);
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 2, v21));
    if ((v22 & 1) == 0)
      v80 &= 0xFFFFFFFFFFFFFFF8;
  }
  v23 = *((_QWORD *)this + 7);
  v81 = v23;
  if ((v23 & 7) != 0)
  {
    v24 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 2, v24));
    if ((v25 & 1) == 0)
      v81 &= 0xFFFFFFFFFFFFFFF8;
  }
  v26 = *((_QWORD *)this + 8);
  v82 = v26;
  if ((v26 & 7) != 0)
  {
    v27 = (unsigned int *)(v26 & 0xFFFFFFFFFFFFFFF8);
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 2, v27));
    if ((v28 & 1) == 0)
      v82 &= 0xFFFFFFFFFFFFFFF8;
  }
  v29 = *((_QWORD *)this + 9);
  v83 = v29;
  if ((v29 & 7) != 0)
  {
    v30 = (unsigned int *)(v29 & 0xFFFFFFFFFFFFFFF8);
    do
      v31 = __ldxr(v30);
    while (__stxr(v31 + 2, v30));
    if ((v31 & 1) == 0)
      v83 &= 0xFFFFFFFFFFFFFFF8;
  }
  v32 = *((_QWORD *)this + 10);
  v84 = v32;
  if ((v32 & 7) != 0)
  {
    v33 = (unsigned int *)(v32 & 0xFFFFFFFFFFFFFFF8);
    do
      v34 = __ldxr(v33);
    while (__stxr(v34 + 2, v33));
    if ((v34 & 1) == 0)
      v84 &= 0xFFFFFFFFFFFFFFF8;
  }
  v35 = *((_QWORD *)this + 11);
  v85 = v35;
  if ((v35 & 7) != 0)
  {
    v36 = (unsigned int *)(v35 & 0xFFFFFFFFFFFFFFF8);
    do
      v37 = __ldxr(v36);
    while (__stxr(v37 + 2, v36));
    if ((v37 & 1) == 0)
      v85 &= 0xFFFFFFFFFFFFFFF8;
  }
  v38 = *((_QWORD *)this + 12);
  v86 = v38;
  if ((v38 & 7) != 0)
  {
    v39 = (unsigned int *)(v38 & 0xFFFFFFFFFFFFFFF8);
    do
      v40 = __ldxr(v39);
    while (__stxr(v40 + 2, v39));
    if ((v40 & 1) == 0)
      v86 &= 0xFFFFFFFFFFFFFFF8;
  }
  v41 = *((_QWORD *)this + 13);
  v87 = v41;
  if ((v41 & 7) != 0)
  {
    v42 = (unsigned int *)(v41 & 0xFFFFFFFFFFFFFFF8);
    do
      v43 = __ldxr(v42);
    while (__stxr(v43 + 2, v42));
    if ((v43 & 1) == 0)
      v87 &= 0xFFFFFFFFFFFFFFF8;
  }
  v44 = *((_QWORD *)this + 14);
  v88 = v44;
  if ((v44 & 7) != 0)
  {
    v45 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v46 = __ldxr(v45);
    while (__stxr(v46 + 2, v45));
    if ((v46 & 1) == 0)
      v88 &= 0xFFFFFFFFFFFFFFF8;
  }
  v47 = *((_QWORD *)this + 15);
  v89 = v47;
  if ((v47 & 7) != 0)
  {
    v48 = (unsigned int *)(v47 & 0xFFFFFFFFFFFFFFF8);
    do
      v49 = __ldxr(v48);
    while (__stxr(v49 + 2, v48));
    if ((v49 & 1) == 0)
      v89 &= 0xFFFFFFFFFFFFFFF8;
  }
  v50 = *((_QWORD *)this + 16);
  v90 = v50;
  if ((v50 & 7) != 0)
  {
    v51 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v52 = __ldxr(v51);
    while (__stxr(v52 + 2, v51));
    if ((v52 & 1) == 0)
      v90 &= 0xFFFFFFFFFFFFFFF8;
  }
  v53 = *((_QWORD *)this + 17);
  v91 = v53;
  if ((v53 & 7) != 0)
  {
    v54 = (unsigned int *)(v53 & 0xFFFFFFFFFFFFFFF8);
    do
      v55 = __ldxr(v54);
    while (__stxr(v55 + 2, v54));
    if ((v55 & 1) == 0)
      v91 &= 0xFFFFFFFFFFFFFFF8;
  }
  v56 = *((_QWORD *)this + 18);
  v92 = v56;
  if ((v56 & 7) != 0)
  {
    v57 = (unsigned int *)(v56 & 0xFFFFFFFFFFFFFFF8);
    do
      v58 = __ldxr(v57);
    while (__stxr(v58 + 2, v57));
    if ((v58 & 1) == 0)
      v92 &= 0xFFFFFFFFFFFFFFF8;
  }
  v59 = *((_QWORD *)this + 19);
  v93 = v59;
  if ((v59 & 7) != 0)
  {
    v60 = (unsigned int *)(v59 & 0xFFFFFFFFFFFFFFF8);
    do
      v61 = __ldxr(v60);
    while (__stxr(v61 + 2, v60));
    if ((v61 & 1) == 0)
      v93 &= 0xFFFFFFFFFFFFFFF8;
  }
  *((_QWORD *)this + 20) = 0;
  *((_QWORD *)this + 21) = 0;
  *((_QWORD *)this + 22) = 0;
  v62 = operator new(0xA0uLL);
  v63 = 0;
  *((_QWORD *)this + 20) = v62;
  *((_QWORD *)this + 21) = v62;
  *((_QWORD *)this + 22) = v62 + 20;
  do
  {
    v64 = *(&v74 + v63);
    *v62 = v64;
    if ((v64 & 7) != 0)
    {
      v65 = (unsigned int *)(v64 & 0xFFFFFFFFFFFFFFF8);
      do
        v66 = __ldxr(v65);
      while (__stxr(v66 + 2, v65));
      if ((v66 & 1) == 0)
        *v62 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v63;
    ++v62;
  }
  while (v63 != 20);
  v67 = &v94;
  *((_QWORD *)this + 21) = v62;
  do
  {
    v69 = *--v67;
    v68 = v69;
    if ((v69 & 7) != 0)
    {
      v70 = (unsigned int *)(v68 & 0xFFFFFFFFFFFFFFF8);
      do
        v71 = __ldxr(v70);
      while (__stlxr(v71 - 2, v70));
    }
  }
  while (v67 != &v74);
  return this;
}

void sub_20C52B9DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, _QWORD *a11, _QWORD *a12, _QWORD *a13, _QWORD *a14, _QWORD *a15, _QWORD *a16, _QWORD *a17, _QWORD *a18, _QWORD *a19, _QWORD *a20,void **a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int *v56;
  unsigned int v57;
  unsigned int *v58;
  unsigned int v59;
  unsigned int *v60;
  unsigned int v61;
  unsigned int *v62;
  unsigned int v63;
  unsigned int *v64;
  unsigned int v65;
  unsigned int *v66;
  unsigned int v67;
  unsigned int *v68;
  unsigned int v69;
  unsigned int *v70;
  unsigned int v71;
  unsigned int *v72;
  unsigned int v73;
  unsigned int *v74;
  unsigned int v75;
  unsigned int *v76;
  unsigned int v77;
  unsigned int *v78;
  unsigned int v79;
  unsigned int *v80;
  unsigned int v81;
  unsigned int *v82;
  unsigned int v83;
  unsigned int *v84;
  unsigned int v85;
  unsigned int *v86;
  unsigned int v87;
  unsigned int *v88;
  unsigned int v89;
  unsigned int *v90;
  unsigned int v91;
  unsigned int *v92;
  unsigned int v93;
  unsigned int *v94;
  unsigned int v95;
  unsigned int *v96;
  unsigned int v97;

  sub_20BEEB2B8(&a21);
  v53 = (char *)&a43;
  while (1)
  {
    v55 = *((_QWORD *)v53 - 1);
    v53 -= 8;
    v54 = v55;
    if ((v55 & 7) != 0)
    {
      v56 = (unsigned int *)(v54 & 0xFFFFFFFFFFFFFFF8);
      do
        v57 = __ldxr(v56);
      while (__stlxr(v57 - 2, v56));
    }
    if (v53 == &a23)
    {
      if ((*v44 & 7) != 0)
      {
        v58 = (unsigned int *)(*v44 & 0xFFFFFFFFFFFFFFF8);
        do
          v59 = __ldxr(v58);
        while (__stlxr(v59 - 2, v58));
      }
      if ((*v52 & 7) != 0)
      {
        v60 = (unsigned int *)(*v52 & 0xFFFFFFFFFFFFFFF8);
        do
          v61 = __ldxr(v60);
        while (__stlxr(v61 - 2, v60));
      }
      if ((*v51 & 7) != 0)
      {
        v62 = (unsigned int *)(*v51 & 0xFFFFFFFFFFFFFFF8);
        do
          v63 = __ldxr(v62);
        while (__stlxr(v63 - 2, v62));
      }
      if ((*v50 & 7) != 0)
      {
        v64 = (unsigned int *)(*v50 & 0xFFFFFFFFFFFFFFF8);
        do
          v65 = __ldxr(v64);
        while (__stlxr(v65 - 2, v64));
      }
      if ((*v49 & 7) != 0)
      {
        v66 = (unsigned int *)(*v49 & 0xFFFFFFFFFFFFFFF8);
        do
          v67 = __ldxr(v66);
        while (__stlxr(v67 - 2, v66));
      }
      if ((*v48 & 7) != 0)
      {
        v68 = (unsigned int *)(*v48 & 0xFFFFFFFFFFFFFFF8);
        do
          v69 = __ldxr(v68);
        while (__stlxr(v69 - 2, v68));
      }
      if ((*v47 & 7) != 0)
      {
        v70 = (unsigned int *)(*v47 & 0xFFFFFFFFFFFFFFF8);
        do
          v71 = __ldxr(v70);
        while (__stlxr(v71 - 2, v70));
      }
      if ((*v46 & 7) != 0)
      {
        v72 = (unsigned int *)(*v46 & 0xFFFFFFFFFFFFFFF8);
        do
          v73 = __ldxr(v72);
        while (__stlxr(v73 - 2, v72));
      }
      if ((*v45 & 7) != 0)
      {
        v74 = (unsigned int *)(*v45 & 0xFFFFFFFFFFFFFFF8);
        do
          v75 = __ldxr(v74);
        while (__stlxr(v75 - 2, v74));
      }
      if ((*a11 & 7) != 0)
      {
        v76 = (unsigned int *)(*a11 & 0xFFFFFFFFFFFFFFF8);
        do
          v77 = __ldxr(v76);
        while (__stlxr(v77 - 2, v76));
      }
      if ((*a12 & 7) != 0)
      {
        v78 = (unsigned int *)(*a12 & 0xFFFFFFFFFFFFFFF8);
        do
          v79 = __ldxr(v78);
        while (__stlxr(v79 - 2, v78));
      }
      if ((*a13 & 7) != 0)
      {
        v80 = (unsigned int *)(*a13 & 0xFFFFFFFFFFFFFFF8);
        do
          v81 = __ldxr(v80);
        while (__stlxr(v81 - 2, v80));
      }
      if ((*a14 & 7) != 0)
      {
        v82 = (unsigned int *)(*a14 & 0xFFFFFFFFFFFFFFF8);
        do
          v83 = __ldxr(v82);
        while (__stlxr(v83 - 2, v82));
      }
      if ((*a15 & 7) != 0)
      {
        v84 = (unsigned int *)(*a15 & 0xFFFFFFFFFFFFFFF8);
        do
          v85 = __ldxr(v84);
        while (__stlxr(v85 - 2, v84));
      }
      if ((*a16 & 7) != 0)
      {
        v86 = (unsigned int *)(*a16 & 0xFFFFFFFFFFFFFFF8);
        do
          v87 = __ldxr(v86);
        while (__stlxr(v87 - 2, v86));
      }
      if ((*a17 & 7) != 0)
      {
        v88 = (unsigned int *)(*a17 & 0xFFFFFFFFFFFFFFF8);
        do
          v89 = __ldxr(v88);
        while (__stlxr(v89 - 2, v88));
      }
      if ((*a18 & 7) != 0)
      {
        v90 = (unsigned int *)(*a18 & 0xFFFFFFFFFFFFFFF8);
        do
          v91 = __ldxr(v90);
        while (__stlxr(v91 - 2, v90));
      }
      if ((*a19 & 7) != 0)
      {
        v92 = (unsigned int *)(*a19 & 0xFFFFFFFFFFFFFFF8);
        do
          v93 = __ldxr(v92);
        while (__stlxr(v93 - 2, v92));
      }
      if ((*a20 & 7) != 0)
      {
        v94 = (unsigned int *)(*a20 & 0xFFFFFFFFFFFFFFF8);
        do
          v95 = __ldxr(v94);
        while (__stlxr(v95 - 2, v94));
      }
      if ((*v43 & 7) != 0)
      {
        v96 = (unsigned int *)(*v43 & 0xFFFFFFFFFFFFFFF8);
        do
          v97 = __ldxr(v96);
        while (__stlxr(v97 - 2, v96));
      }
      _Unwind_Resume(a1);
    }
  }
}

void sub_20C52BD08()
{
  JUMPOUT(0x20C52BB78);
}

void sub_20C52BD10()
{
  JUMPOUT(0x20C52BB9CLL);
}

void sub_20C52BD18()
{
  JUMPOUT(0x20C52BBC0);
}

void sub_20C52BD20()
{
  JUMPOUT(0x20C52BBE4);
}

void sub_20C52BD28()
{
  JUMPOUT(0x20C52BC08);
}

void sub_20C52BD30()
{
  JUMPOUT(0x20C52BC2CLL);
}

void sub_20C52BD38()
{
  JUMPOUT(0x20C52BC50);
}

void sub_20C52BD40()
{
  JUMPOUT(0x20C52BC74);
}

void sub_20C52BD48()
{
  JUMPOUT(0x20C52BC98);
}

void sub_20C52BD50()
{
  JUMPOUT(0x20C52BCBCLL);
}

void sub_20C52BD58()
{
  JUMPOUT(0x20C52BCE0);
}

void pxrInternal__aapl__pxrReserved__::UsdTyped::~UsdTyped(pxrInternal__aapl__pxrReserved__::UsdTyped *this)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::~UsdSchemaBase(this);
  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdTyped::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t (*v6)(uint64_t *);
  char v7;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;

  v6 = sub_20C369024(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v13);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53BB50;
    if ((v16 & 7) != 0)
    {
      v9 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
  }
  else
  {
    v13 = "usd/typed.cpp";
    v14 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Get";
    v15 = 51;
    v16 = (unint64_t)"static UsdTyped pxrInternal__aapl__pxrReserved__::UsdTyped::Get(const UsdStagePtr &, const SdfPath &)";
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v13, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v13) = 1;
    v14 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v15);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v15 + 1);
    v16 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53BB50;
    if ((v16 & 7) != 0)
    {
      v11 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stlxr(v12 - 2, v11));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v15 + 1);
  sub_20BFD265C(&v15);
  if (v14)
    sub_20C35C614(v14);
}

void sub_20C52BEF0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdTyped::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdTyped *this)
{
  return 1;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdTyped::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdTyped *this)
{
  unsigned __int8 v1;
  const std::type_info *v3;
  char *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_254989240);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_254989240))
  {
    __cxa_guard_release(&qword_254989240);
  }
  return &qword_254989238;
}

void sub_20C52BF7C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989240);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdTyped::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdTyped *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::UsdTyped *v3;
  const std::type_info *v4;
  char *v5;

  v1 = atomic_load((unsigned __int8 *)&qword_254989250);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::UsdTyped *)__cxa_guard_acquire(&qword_254989250);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::UsdTyped::_GetStaticTfType(v3);
      byte_254989248 = sub_20C35BD7C((char *)&qword_254989238, v4, v5);
      __cxa_guard_release(&qword_254989250);
    }
  }
  return byte_254989248;
}

void sub_20C52BFF8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989250);
  _Unwind_Resume(a1);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdTyped::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdTyped *this)
{
  pxrInternal__aapl__pxrReserved__::UsdTyped::_GetStaticTfType(this);
  return &qword_254989238;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdTyped::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdTyped *this)
{
  int v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  uint64_t **v5;

  v1 = (int)this;
  v2 = atomic_load((unsigned __int8 *)&qword_254989270);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254989270))
  {
    qword_254989258 = 0;
    unk_254989260 = 0;
    qword_254989268 = 0;
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_254989258, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989270);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254989290);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254989290))
  {
    v5 = (uint64_t **)sub_20C35BEDC();
    qword_254989278 = 0;
    unk_254989280 = 0;
    qword_254989288 = 0;
    sub_20BFE538C(&qword_254989278, *v5, v5[1], v5[1] - *v5);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_254989278, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989290);
  }
  if (v1)
    return &qword_254989278;
  else
    return &qword_254989258;
}

void sub_20C52C128(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989290);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible(pxrInternal__aapl__pxrReserved__::UsdTyped *this)
{
  const pxrInternal__aapl__pxrReserved__::TfType *v2;
  uint64_t IsA;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v7;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  int v9;
  int v10;
  uint64_t v11;

  if (!pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_IsCompatible(this))
    return 0;
  sub_20C35C4F8((uint64_t)&v7, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v2 = (const pxrInternal__aapl__pxrReserved__::TfType *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::UsdTyped *))(*(_QWORD *)this + 40))(this);
  IsA = pxrInternal__aapl__pxrReserved__::UsdPrim::IsA((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v7, v2);
  if ((v11 & 7) != 0)
  {
    v4 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v10);
  sub_20BFD265C(&v9);
  if (v8)
    sub_20C35C614(v8);
  return IsA;
}

void sub_20C52C1EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C52C200()
{
  uint64_t *v0;
  void *__p[2];
  char v4;
  void *v5[3];
  uint64_t v6;
  int v7;

  sub_20BEB59B0((uint64_t)&v6, (uint64_t)"Tf", (uint64_t)"TfType::Define");
  sub_20C35C468((unint64_t **)v5);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p, (char **)v5, 0);
  if (v4 < 0)
    operator delete(__p[0]);
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_20C52C2D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  uint64_t v16;

  if (a14 < 0)
    operator delete(__p);
  if (a15)
    operator delete(a15);
  sub_20BEB24F4(v16 - 32);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType::~UsdUsdFileFormatTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *this)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  void **v13;

  v13 = (void **)((char *)this + 32);
  sub_20BEEB2B8(&v13);
  v2 = *((_QWORD *)this + 3);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *((_QWORD *)this + 2);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  v8 = *((_QWORD *)this + 1);
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  if ((*(_QWORD *)this & 7) != 0)
  {
    v11 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stlxr(v12 - 2, v11));
  }
}

pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType::UsdUsdFileFormatTokens_StaticTokenType(unsigned int **this)
{
  unsigned int **v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int *v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int *v18;
  unsigned int v19;
  unsigned int **v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int *v23;
  unsigned int v24;
  unsigned int *v26;
  unsigned int *v27;
  unsigned int *v28;
  unsigned int *v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v2 = (unsigned int **)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "usd", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2, "1.0", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this + 2, "usd", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this + 3, "format", 0);
  v3 = *this;
  v26 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v26 = v4;
  }
  v6 = *v2;
  v27 = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      v27 = v7;
  }
  v9 = this[2];
  v28 = v9;
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 2, v10));
    if ((v11 & 1) == 0)
      v28 = v10;
  }
  v12 = this[3];
  v29 = v12;
  if ((v12 & 7) != 0)
  {
    v13 = (unsigned int *)((unint64_t)v12 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 2, v13));
    if ((v14 & 1) == 0)
      v29 = v13;
  }
  this[4] = 0;
  this[5] = 0;
  this[6] = 0;
  v15 = (unsigned int *)operator new(0x20uLL);
  v16 = 0;
  this[4] = v15;
  this[5] = v15;
  this[6] = v15 + 8;
  do
  {
    v17 = (&v26)[v16];
    *(_QWORD *)v15 = v17;
    if ((v17 & 7) != 0)
    {
      v18 = (unsigned int *)((unint64_t)v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v19 = __ldxr(v18);
      while (__stxr(v19 + 2, v18));
      if ((v19 & 1) == 0)
        *(_QWORD *)v15 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v16;
    v15 += 2;
  }
  while (v16 != 4);
  v20 = (unsigned int **)&v30;
  this[5] = v15;
  do
  {
    v22 = (uint64_t)*--v20;
    v21 = v22;
    if ((v22 & 7) != 0)
    {
      v23 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
      do
        v24 = __ldxr(v23);
      while (__stlxr(v24 - 2, v23));
    }
  }
  while (v20 != &v26);
  return (pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *)this;
}

void sub_20C52C5F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  unsigned int *v26;
  unsigned int v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int *v30;
  unsigned int v31;
  unsigned int *v32;
  unsigned int v33;

  sub_20BEEB2B8(&a10);
  v21 = &a16;
  while (1)
  {
    v23 = *--v21;
    v22 = v23;
    if ((v23 & 7) != 0)
    {
      v24 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
      do
        v25 = __ldxr(v24);
      while (__stlxr(v25 - 2, v24));
    }
    if (v21 == (uint64_t *)&a12)
    {
      if ((*v19 & 7) != 0)
      {
        v26 = (unsigned int *)(*v19 & 0xFFFFFFFFFFFFFFF8);
        do
          v27 = __ldxr(v26);
        while (__stlxr(v27 - 2, v26));
      }
      if ((*v18 & 7) != 0)
      {
        v28 = (unsigned int *)(*v18 & 0xFFFFFFFFFFFFFFF8);
        do
          v29 = __ldxr(v28);
        while (__stlxr(v29 - 2, v28));
      }
      if ((*v17 & 7) != 0)
      {
        v30 = (unsigned int *)(*v17 & 0xFFFFFFFFFFFFFFF8);
        do
          v31 = __ldxr(v30);
        while (__stlxr(v31 - 2, v30));
      }
      if ((*v16 & 7) != 0)
      {
        v32 = (unsigned int *)(*v16 & 0xFFFFFFFFFFFFFFF8);
        do
          v33 = __ldxr(v32);
        while (__stlxr(v33 - 2, v32));
      }
      _Unwind_Resume(a1);
    }
  }
}

void sub_20C52C6D4()
{
  if (!atomic_load((unint64_t *)pxrInternal__aapl__pxrReserved__::USD_DEFAULT_FILE_FORMAT))
  {
    pxrInternal__aapl__pxrReserved__::Tf_InitializeEnvSetting<std::string>((uint64_t)&pxrInternal__aapl__pxrReserved__::USD_DEFAULT_FILE_FORMAT);
    atomic_load((unint64_t *)pxrInternal__aapl__pxrReserved__::USD_DEFAULT_FILE_FORMAT);
  }
}

uint64_t sub_20C52C718()
{
  uint64_t *v0;

  v0 = sub_20C52E480();
  return sub_20C52E5A0(v0);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::UsdUsdFileFormat(pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat *this)
{
  uint64_t *v2;
  pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *v3;
  pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *v4;
  pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *v5;
  uint64_t *EmptyString;
  uint64_t result;

  v2 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  if (!v2)
    v2 = (uint64_t *)sub_20C45695C(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  if (!v3)
    v3 = sub_20C45695C(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  v4 = (pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  if (!v4)
    v4 = sub_20C45695C(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  v5 = (pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  if (!v5)
    v5 = sub_20C45695C(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  if ((*(_QWORD *)v5 & 0xFFFFFFFFFFFFFFF8) != 0)
    EmptyString = (uint64_t *)((*(_QWORD *)v5 & 0xFFFFFFFFFFFFFFF8) + 16);
  else
    EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v5);
  result = pxrInternal__aapl__pxrReserved__::SdfFileFormat::SdfFileFormat((uint64_t)this, v2, (uint64_t *)v3 + 1, (uint64_t *)v4 + 2, (uint64_t)EmptyString);
  *(_QWORD *)this = off_24C53BBA8;
  return result;
}

void pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::~UsdUsdFileFormat(pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat *this)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::SdfFileFormat::~SdfFileFormat(this);
  operator delete(v1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::InitData(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(uint64_t *);
  char v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t result;
  unsigned int *v15;
  unsigned int v16;
  unsigned int v17;
  __int128 v18;
  __int128 v19;

  sub_20C52C964(a2, (uint64_t *)&v19);
  v3 = sub_20C0E9DAC(&v19);
  if (!(v4 & 1 | (unint64_t)v3))
  {
    sub_20C52CC94((uint64_t *)&v18);
    v5 = (unsigned int *)*((_QWORD *)&v19 + 1);
    v19 = v18;
    *((_QWORD *)&v18 + 1) = 0;
    if (v5)
    {
      v6 = v5 + 2;
      do
      {
        v7 = __ldxr(v6);
        v8 = v7 - 1;
      }
      while (__stlxr(v8, v6));
      if (!v8)
        (*(void (**)(unsigned int *))(*(_QWORD *)v5 + 8))(v5);
      v9 = *((_QWORD *)&v18 + 1);
      *(_QWORD *)&v18 = 0;
      if (*((_QWORD *)&v18 + 1))
      {
        v10 = (unsigned int *)(*((_QWORD *)&v18 + 1) + 8);
        do
        {
          v11 = __ldxr(v10);
          v12 = v11 - 1;
        }
        while (__stlxr(v12, v10));
        if (!v12)
          (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
      }
    }
  }
  v13 = sub_20BFCF6F4((uint64_t *)&v19);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v13 + 40))(v13, a2);
  result = *((_QWORD *)&v19 + 1);
  if (*((_QWORD *)&v19 + 1))
  {
    v15 = (unsigned int *)(*((_QWORD *)&v19 + 1) + 8);
    do
    {
      v16 = __ldxr(v15);
      v17 = v16 - 1;
    }
    while (__stlxr(v17, v15));
    if (!v17)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  return result;
}

void sub_20C52C928(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int *a12)
{
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;

  if (a12)
  {
    v13 = a12 + 2;
    do
    {
      v14 = __ldxr(v13);
      v15 = v14 - 1;
    }
    while (__stlxr(v15, v13));
    if (!v15)
      (*(void (**)(unsigned int *))(*(_QWORD *)a12 + 8))(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C52C964@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *v4;
  uint64_t *EmptyString;
  uint64_t result;
  uint64_t v7;
  unsigned __int8 *v8;
  pxrInternal__aapl__pxrReserved__::TfToken *v9;
  pxrInternal__aapl__pxrReserved__::SdfFileFormat *v10;
  pxrInternal__aapl__pxrReserved__::TfToken *v11;
  pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *v12;
  unint64_t v13;
  const char *v14;
  pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType *v15;
  unint64_t v16;
  const char *v17;
  pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType *v18;
  unint64_t v19;
  const char *v20;
  char v21;
  unint64_t v22;
  const char *v23;
  unsigned int v24;
  unsigned int *v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[4];
  char v32;

  v4 = (pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  if (!v4)
    v4 = sub_20C45695C(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  if ((*((_QWORD *)v4 + 3) & 0xFFFFFFFFFFFFFFF8) != 0)
    EmptyString = (uint64_t *)((*((_QWORD *)v4 + 3) & 0xFFFFFFFFFFFFFFF8) + 16);
  else
    EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v4);
  result = sub_20BDEEBA4(a1, (const void **)EmptyString);
  if (a1 + 8 != result)
  {
    v7 = result;
    v8 = (unsigned __int8 *)(result + 56);
    v9 = (pxrInternal__aapl__pxrReserved__::TfToken *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
    if (!v9)
      v9 = sub_20C27EB9C(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
    if (pxrInternal__aapl__pxrReserved__::TfToken::operator==(v9, v8))
    {
      v10 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
      if (!v10)
        v10 = sub_20C27EB9C(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
      return sub_20C52E6C8(v10, a2);
    }
    v11 = (pxrInternal__aapl__pxrReserved__::TfToken *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
    if (!v11)
      v11 = sub_20C52E780(&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
    if (pxrInternal__aapl__pxrReserved__::TfToken::operator==(v11, v8))
    {
      v10 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
      if (!v10)
        v10 = sub_20C52E780(&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
      return sub_20C52E6C8(v10, a2);
    }
    v31[0] = "usd/usdFileFormat.cpp";
    v31[1] = "_GetFileFormatForArguments";
    v31[2] = 158;
    v31[3] = "SdfFileFormatConstPtr pxrInternal__aapl__pxrReserved__::_GetFileFormatForArguments(const SdfFileFormat::Fil"
             "eFormatArguments &)";
    v32 = 0;
    v12 = (pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
    if (!v12)
      v12 = sub_20C45695C(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
    v13 = *((_QWORD *)v12 + 3) & 0xFFFFFFFFFFFFFFF8;
    if (v13)
    {
      v14 = (const char *)(v13 + 16);
      if (*(char *)(v13 + 39) < 0)
        v14 = *(const char **)v14;
    }
    else
    {
      v14 = "";
    }
    if (*(char *)(v7 + 79) < 0)
      v8 = *(unsigned __int8 **)v8;
    v15 = (pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
    if (!v15)
      v15 = sub_20C27EB9C(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
    v16 = *(_QWORD *)v15 & 0xFFFFFFFFFFFFFFF8;
    if (v16)
    {
      v17 = (const char *)(v16 + 16);
      if (*(char *)(v16 + 39) < 0)
        v17 = *(const char **)v17;
    }
    else
    {
      v17 = "";
    }
    v18 = (pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
    if (!v18)
      v18 = sub_20C52E780(&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
    v19 = *(_QWORD *)v18 & 0xFFFFFFFFFFFFFFF8;
    if (v19)
    {
      v20 = (const char *)(v19 + 16);
      if (*(char *)(v19 + 39) < 0)
        v20 = *(const char **)v20;
    }
    else
    {
      v20 = "";
    }
    sub_20C52CC94(&v28);
    sub_20C52DD38(&v28, &v30);
    v21 = v30;
    v22 = v30 & 0xFFFFFFFFFFFFFFF8;
    if ((v30 & 0xFFFFFFFFFFFFFFF8) != 0)
    {
      v23 = (const char *)(v22 + 16);
      if (*(char *)(v22 + 39) < 0)
        v23 = *(const char **)v23;
    }
    else
    {
      v23 = "";
    }
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v31, 1, (pxrInternal__aapl__pxrReserved__ *)"'%s' argument was '%s', must be '%s' or '%s'. Defaulting to '%s'.", v14, (const char *)v8, v17, v20, v23);
    if ((v21 & 7) != 0)
    {
      do
        v24 = __ldxr((unsigned int *)v22);
      while (__stlxr(v24 - 2, (unsigned int *)v22));
    }
    result = v29;
    if (v29)
    {
      v25 = (unsigned int *)(v29 + 8);
      do
      {
        v26 = __ldxr(v25);
        v27 = v26 - 1;
      }
      while (__stlxr(v27, v25));
      if (!v27)
        result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
    }
  }
  *a2 = 0;
  a2[1] = 0;
  return result;
}

uint64_t sub_20C52CC94@<X0>(uint64_t *a1@<X8>)
{
  char *v3;
  pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType *v4;
  pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType *v5;
  unint64_t v6;
  const char *v7;
  pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType *v8;
  uint64_t result;
  char v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  const char *v14;
  uint64_t v15;
  const char *v16;
  char v17;
  uint64_t v18;

  if (!atomic_load((unint64_t *)pxrInternal__aapl__pxrReserved__::USD_DEFAULT_FILE_FORMAT))
  {
    pxrInternal__aapl__pxrReserved__::Tf_InitializeEnvSetting<std::string>((uint64_t)&pxrInternal__aapl__pxrReserved__::USD_DEFAULT_FILE_FORMAT);
    atomic_load((unint64_t *)pxrInternal__aapl__pxrReserved__::USD_DEFAULT_FILE_FORMAT);
  }
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v18);
  v4 = (pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  if (!v4)
    v4 = sub_20C27EB9C(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  if ((v18 & 0xFFFFFFFFFFFFFFF8) != (*(_QWORD *)v4 & 0xFFFFFFFFFFFFFFF8))
  {
    v5 = (pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
    if (!v5)
      v5 = sub_20C52E780(&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
    v6 = v18 & 0xFFFFFFFFFFFFFFF8;
    if ((v18 & 0xFFFFFFFFFFFFFFF8) != (*(_QWORD *)v5 & 0xFFFFFFFFFFFFFFF8))
    {
      v13 = "usd/usdFileFormat.cpp";
      v14 = "_GetDefaultFileFormat";
      v15 = 114;
      v16 = "SdfFileFormatConstPtr pxrInternal__aapl__pxrReserved__::_GetDefaultFileFormat()";
      v17 = 0;
      if (v6)
      {
        v7 = (const char *)(v6 + 16);
        if (*(char *)(v6 + 39) < 0)
          v7 = *(const char **)v7;
      }
      else
      {
        v7 = "";
      }
      pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v13, (pxrInternal__aapl__pxrReserved__ *)"Default file format '%s' set in USD_DEFAULT_FILE_FORMAT must be either 'usda' or 'usdc'. Falling back to 'usdc'", v3, v7);
      v8 = (pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
      if (!v8)
        v8 = sub_20C52E780(&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
      sub_20BF32220(&v18, v8);
    }
  }
  sub_20C52E6C8((pxrInternal__aapl__pxrReserved__::SdfFileFormat *)&v18, a1);
  result = (uint64_t)sub_20C0E9DAC(a1);
  if (!(v10 & 1 | (unint64_t)result))
  {
    v13 = "usd/usdFileFormat.cpp";
    v14 = "_GetDefaultFileFormat";
    v15 = 119;
    v16 = "SdfFileFormatConstPtr pxrInternal__aapl__pxrReserved__::_GetDefaultFileFormat()";
    v17 = 0;
    result = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v13, "defaultFormat", 0);
  }
  if ((v18 & 7) != 0)
  {
    v11 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stlxr(v12 - 2, v11));
  }
  return result;
}

void sub_20C52CE5C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int *v4;
  unsigned int *v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;

  v4 = *(unsigned int **)(v1 + 8);
  if (v4)
  {
    v5 = v4 + 2;
    do
    {
      v6 = __ldxr(v5);
      v7 = v6 - 1;
    }
    while (__stlxr(v7, v5));
    if (!v7)
      (*(void (**)(unsigned int *))(*(_QWORD *)v4 + 8))(v4);
  }
  v8 = *(_QWORD *)(v2 - 24);
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::_InitDetachedData@<X0>(uint64_t a1@<X1>, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **a2@<X8>)
{
  uint64_t (*v3)(uint64_t *);
  char v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t result;
  unsigned int *v15;
  unsigned int v16;
  unsigned int v17;
  __int128 v18;
  __int128 v19;

  sub_20C52C964(a1, (uint64_t *)&v19);
  v3 = sub_20C0E9DAC(&v19);
  if (!(v4 & 1 | (unint64_t)v3))
  {
    sub_20C52CC94((uint64_t *)&v18);
    v5 = (unsigned int *)*((_QWORD *)&v19 + 1);
    v19 = v18;
    *((_QWORD *)&v18 + 1) = 0;
    if (v5)
    {
      v6 = v5 + 2;
      do
      {
        v7 = __ldxr(v6);
        v8 = v7 - 1;
      }
      while (__stlxr(v8, v6));
      if (!v8)
        (*(void (**)(unsigned int *))(*(_QWORD *)v5 + 8))(v5);
      v9 = *((_QWORD *)&v18 + 1);
      *(_QWORD *)&v18 = 0;
      if (*((_QWORD *)&v18 + 1))
      {
        v10 = (unsigned int *)(*((_QWORD *)&v18 + 1) + 8);
        do
        {
          v11 = __ldxr(v10);
          v12 = v11 - 1;
        }
        while (__stlxr(v12, v10));
        if (!v12)
          (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
      }
    }
  }
  v13 = sub_20BFCF6F4((uint64_t *)&v19);
  pxrInternal__aapl__pxrReserved__::SdfFileFormat::InitDetachedData(v13, a2);
  result = *((_QWORD *)&v19 + 1);
  if (*((_QWORD *)&v19 + 1))
  {
    v15 = (unsigned int *)(*((_QWORD *)&v19 + 1) + 8);
    do
    {
      v16 = __ldxr(v15);
      v17 = v16 - 1;
    }
    while (__stlxr(v17, v15));
    if (!v17)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  return result;
}

void sub_20C52CFBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int *a12)
{
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;

  if (a12)
  {
    v13 = a12 + 2;
    do
    {
      v14 = __ldxr(v13);
      v15 = v14 - 1;
    }
    while (__stlxr(v15, v13));
    if (!v15)
      (*(void (**)(unsigned int *))(*(_QWORD *)a12 + 8))(a12);
  }
  _Unwind_Resume(exception_object);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::CanRead(pxrInternal__aapl__pxrReserved__ *a1, uint64_t a2)
{
  uint64_t *Resolver;
  uint64_t v4;
  _BOOL8 CanReadFromAsset;
  pxrInternal__aapl__pxrReserved__::SdfFileFormat *v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p[2];
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;

  Resolver = pxrInternal__aapl__pxrReserved__::ArGetResolver(a1);
  if (*(char *)(a2 + 23) < 0)
  {
    sub_20BDDBFAC(__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a2;
    v12 = *(_QWORD *)(a2 + 16);
  }
  pxrInternal__aapl__pxrReserved__::ArResolver::OpenAsset((uint64_t)Resolver);
  if (SHIBYTE(v12) < 0)
    operator delete(__p[0]);
  if (v13)
  {
    sub_20C52D12C();
    v4 = sub_20C52D248(qword_254989298);
    if ((pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::_CanReadFromAsset(v4, a2, (uint64_t)&v13) & 1) != 0)
    {
      CanReadFromAsset = 1;
    }
    else
    {
      sub_20C52D2EC();
      v6 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)sub_20C52D408(qword_2549892B0);
      CanReadFromAsset = pxrInternal__aapl__pxrReserved__::SdfTextFileFormat::_CanReadFromAsset(v6, a2, &v13);
    }
  }
  else
  {
    CanReadFromAsset = 0;
  }
  v7 = v14;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  return CanReadFromAsset;
}

void sub_20C52D100(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C52D12C()
{
  unsigned __int8 v0;
  pxrInternal__aapl__pxrReserved__::SdfFileFormat *v1;
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;

  v0 = atomic_load((unsigned __int8 *)&qword_2549892A8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2549892A8))
  {
    v1 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
    if (!v1)
      v1 = sub_20C52E780(&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
    sub_20C52E6C8(v1, &v6);
    sub_20C52E808((uint64_t)&v6, qword_254989298);
    v2 = v7;
    if (v7)
    {
      v3 = (unsigned int *)(v7 + 8);
      do
      {
        v4 = __ldxr(v3);
        v5 = v4 - 1;
      }
      while (__stlxr(v5, v3));
      if (!v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    }
    __cxa_atexit((void (*)(void *))sub_20C52E874, qword_254989298, &dword_20BDBC000);
    __cxa_guard_release(&qword_2549892A8);
  }
}

void sub_20C52D1FC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2549892A8);
  _Unwind_Resume(a1);
}

uint64_t sub_20C52D248(uint64_t *a1)
{
  uint64_t *v2;
  uint64_t v3;
  int v4;
  uint64_t result;
  BOOL v6;
  char *v7;
  _QWORD v8[4];
  char v9;

  v3 = a1[1];
  v2 = a1 + 1;
  if (!v3
    || ((v4 = *(unsigned __int8 *)(sub_20BEB47BC(v2) + 14), result = *a1, v4) ? (v6 = result == 0) : (v6 = 1), v6))
  {
    v7 = j__strrchr("/Library/Caches/com.apple.xbs/Sources/USDLib/USD/pxr/base/tf/weakPtrFacade.h", 47);
    v8[0] = sub_20BEB23F8((unint64_t)"/Library/Caches/com.apple.xbs/Sources/USDLib/USD/pxr/base/tf/weakPtrFacade.h", (uint64_t)v7, 0x2Fu);
    v8[1] = "operator->";
    v8[2] = 216;
    v8[3] = "DataType *pxrInternal__aapl__pxrReserved__::TfWeakPtrFacade<pxrInternal__aapl__pxrReserved__::TfWeakPtr, con"
            "st pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat>::operator->() const [PtrTemplate = pxrInternal__aapl"
            "__pxrReserved__::TfWeakPtr, Type = const pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat]";
    v9 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostNullSmartPtrDereferenceFatalError((uint64_t)v8, (pxrInternal__aapl__pxrReserved__ *)(0x800000020CAEB80DLL & 0x7FFFFFFFFFFFFFFFLL));
  }
  return result;
}

void sub_20C52D2EC()
{
  unsigned __int8 v0;
  pxrInternal__aapl__pxrReserved__::SdfFileFormat *v1;
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;

  v0 = atomic_load((unsigned __int8 *)&qword_2549892C0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2549892C0))
  {
    v1 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
    if (!v1)
      v1 = sub_20C27EB9C(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
    sub_20C52E6C8(v1, &v6);
    sub_20C52E978((uint64_t)&v6, qword_2549892B0);
    v2 = v7;
    if (v7)
    {
      v3 = (unsigned int *)(v7 + 8);
      do
      {
        v4 = __ldxr(v3);
        v5 = v4 - 1;
      }
      while (__stlxr(v5, v3));
      if (!v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    }
    __cxa_atexit((void (*)(void *))sub_20C52E9E4, qword_2549892B0, &dword_20BDBC000);
    __cxa_guard_release(&qword_2549892C0);
  }
}

void sub_20C52D3BC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2549892C0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C52D408(uint64_t *a1)
{
  uint64_t *v2;
  uint64_t v3;
  int v4;
  uint64_t result;
  BOOL v6;
  char *v7;
  _QWORD v8[4];
  char v9;

  v3 = a1[1];
  v2 = a1 + 1;
  if (!v3
    || ((v4 = *(unsigned __int8 *)(sub_20BEB47BC(v2) + 14), result = *a1, v4) ? (v6 = result == 0) : (v6 = 1), v6))
  {
    v7 = j__strrchr("/Library/Caches/com.apple.xbs/Sources/USDLib/USD/pxr/base/tf/weakPtrFacade.h", 47);
    v8[0] = sub_20BEB23F8((unint64_t)"/Library/Caches/com.apple.xbs/Sources/USDLib/USD/pxr/base/tf/weakPtrFacade.h", (uint64_t)v7, 0x2Fu);
    v8[1] = "operator->";
    v8[2] = 216;
    v8[3] = "DataType *pxrInternal__aapl__pxrReserved__::TfWeakPtrFacade<pxrInternal__aapl__pxrReserved__::TfWeakPtr, con"
            "st pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormat>::operator->() const [PtrTemplate = pxrInternal__aapl"
            "__pxrReserved__::TfWeakPtr, Type = const pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormat]";
    v9 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostNullSmartPtrDereferenceFatalError((uint64_t)v8, (pxrInternal__aapl__pxrReserved__ *)(0x800000020CAEB856 & 0x7FFFFFFFFFFFFFFFLL));
  }
  return result;
}

uint64_t sub_20C52D4B0(pxrInternal__aapl__pxrReserved__ *a1, pxrInternal__aapl__pxrReserved__::SdfLayer *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *Resolver;
  uint64_t v8;
  unint64_t *Instance;
  _QWORD *v10;
  _QWORD *v11;
  pxrInternal__aapl__pxrReserved__::SdfFileFormat *v12;
  uint64_t v13;
  unint64_t *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  pxrInternal__aapl__pxrReserved__::SdfFileFormat *v20;
  pxrInternal__aapl__pxrReserved__::SdfFileFormat *v21;
  std::__shared_weak_count *v22;
  unint64_t *p_shared_owners;
  unint64_t v24;
  void *__p[2];
  uint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  char v30;

  Resolver = pxrInternal__aapl__pxrReserved__::ArGetResolver(a1);
  if (*(char *)(a3 + 23) < 0)
  {
    sub_20BDDBFAC(__p, *(void **)a3, *(_QWORD *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a3;
    v27 = *(_QWORD *)(a3 + 16);
  }
  pxrInternal__aapl__pxrReserved__::ArResolver::OpenAsset((uint64_t)Resolver);
  if (SHIBYTE(v27) < 0)
    operator delete(__p[0]);
  if (!v28)
    goto LABEL_23;
  sub_20C52D12C();
  sub_20C52D2EC();
  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)__p);
  v8 = sub_20C52D248(qword_254989298);
  if ((pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::_ReadFromAsset(v8, a2, a3, (char *)&v28, a4, 0) & 1) == 0)
  {
    Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
    if (!Instance)
      Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
    v10 = sub_20BEC5244((unint64_t *)__p, 0);
    v30 = 0;
    v11 = (_QWORD *)sub_20BEB5B80(Instance + 19, &v30);
    if (v11 != v10)
      pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr::EraseRange(Instance, v10, v11);
    v12 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)sub_20C52D408(qword_2549892B0);
    if (!pxrInternal__aapl__pxrReserved__::SdfTextFileFormat::_ReadFromAsset(v12, a2, (const std::string *)a3, &v28, a4))
    {
      v14 = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
      if (!v14)
        v14 = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
      v15 = sub_20BEC5244((unint64_t *)__p, 0);
      v30 = 0;
      v16 = (_QWORD *)sub_20BEB5B80(v14 + 19, &v30);
      if (v16 != v15)
        pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr::EraseRange(v14, v15, v16);
      pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)__p);
      v17 = sub_20C52D248(qword_254989298);
      if (pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::_CanReadFromAsset(v17, a3, (uint64_t)&v28))
      {
        v18 = sub_20C52D248(qword_254989298);
        v19 = pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::_ReadFromAsset(v18, a2, a3, (char *)&v28, a4, 0);
LABEL_22:
        v13 = v19;
        goto LABEL_24;
      }
      v20 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)sub_20C52D408(qword_2549892B0);
      if (pxrInternal__aapl__pxrReserved__::SdfTextFileFormat::_CanReadFromAsset(v20, a3, &v28))
      {
        v21 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)sub_20C52D408(qword_2549892B0);
        v19 = pxrInternal__aapl__pxrReserved__::SdfTextFileFormat::_ReadFromAsset(v21, a2, (const std::string *)a3, &v28, a4);
        goto LABEL_22;
      }
LABEL_23:
      v13 = 0;
      goto LABEL_24;
    }
  }
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)__p);
  v13 = 1;
LABEL_24:
  v22 = v29;
  if (v29)
  {
    p_shared_owners = (unint64_t *)&v29->__shared_owners_;
    do
      v24 = __ldaxr(p_shared_owners);
    while (__stlxr(v24 - 1, p_shared_owners));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
  }
  return v13;
}

void sub_20C52D728(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_20C52D770(pxrInternal__aapl__pxrReserved__ *a1, pxrInternal__aapl__pxrReserved__::SdfLayer *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *Resolver;
  uint64_t v8;
  unint64_t *Instance;
  _QWORD *v10;
  _QWORD *v11;
  pxrInternal__aapl__pxrReserved__::SdfFileFormat *v12;
  uint64_t v13;
  unint64_t *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  pxrInternal__aapl__pxrReserved__::SdfFileFormat *v20;
  pxrInternal__aapl__pxrReserved__::SdfFileFormat *v21;
  std::__shared_weak_count *v22;
  unint64_t *p_shared_owners;
  unint64_t v24;
  void *__p[2];
  uint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  char v30;

  Resolver = pxrInternal__aapl__pxrReserved__::ArGetResolver(a1);
  if (*(char *)(a3 + 23) < 0)
  {
    sub_20BDDBFAC(__p, *(void **)a3, *(_QWORD *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a3;
    v27 = *(_QWORD *)(a3 + 16);
  }
  pxrInternal__aapl__pxrReserved__::ArResolver::OpenAsset((uint64_t)Resolver);
  if (SHIBYTE(v27) < 0)
    operator delete(__p[0]);
  if (!v28)
    goto LABEL_23;
  sub_20C52D12C();
  sub_20C52D2EC();
  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)__p);
  v8 = sub_20C52D248(qword_254989298);
  if ((pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::_ReadFromAsset(v8, a2, a3, (char *)&v28, a4, 1u) & 1) == 0)
  {
    Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
    if (!Instance)
      Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
    v10 = sub_20BEC5244((unint64_t *)__p, 0);
    v30 = 0;
    v11 = (_QWORD *)sub_20BEB5B80(Instance + 19, &v30);
    if (v11 != v10)
      pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr::EraseRange(Instance, v10, v11);
    v12 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)sub_20C52D408(qword_2549892B0);
    if (!pxrInternal__aapl__pxrReserved__::SdfTextFileFormat::_ReadFromAsset(v12, a2, (const std::string *)a3, &v28, a4))
    {
      v14 = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
      if (!v14)
        v14 = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
      v15 = sub_20BEC5244((unint64_t *)__p, 0);
      v30 = 0;
      v16 = (_QWORD *)sub_20BEB5B80(v14 + 19, &v30);
      if (v16 != v15)
        pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr::EraseRange(v14, v15, v16);
      pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)__p);
      v17 = sub_20C52D248(qword_254989298);
      if (pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::_CanReadFromAsset(v17, a3, (uint64_t)&v28))
      {
        v18 = sub_20C52D248(qword_254989298);
        v19 = pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::_ReadFromAsset(v18, a2, a3, (char *)&v28, a4, 1u);
LABEL_22:
        v13 = v19;
        goto LABEL_24;
      }
      v20 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)sub_20C52D408(qword_2549892B0);
      if (pxrInternal__aapl__pxrReserved__::SdfTextFileFormat::_CanReadFromAsset(v20, a3, &v28))
      {
        v21 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)sub_20C52D408(qword_2549892B0);
        v19 = pxrInternal__aapl__pxrReserved__::SdfTextFileFormat::_ReadFromAsset(v21, a2, (const std::string *)a3, &v28, a4);
        goto LABEL_22;
      }
LABEL_23:
      v13 = 0;
      goto LABEL_24;
    }
  }
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)__p);
  v13 = 1;
LABEL_24:
  v22 = v29;
  if (v29)
  {
    p_shared_owners = (unint64_t *)&v29->__shared_owners_;
    do
      v24 = __ldaxr(p_shared_owners);
    while (__stlxr(v24 - 1, p_shared_owners));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
  }
  return v13;
}

void sub_20C52D9E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a15);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::_GetUnderlyingFileFormatForLayer@<X0>(pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat *this@<X0>, const pxrInternal__aapl__pxrReserved__::SdfLayer *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t (*v4)(uint64_t *);
  char v5;
  unint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int v10;
  pxrInternal__aapl__pxrReserved__::SdfFileFormat *v11;
  uint64_t (*v12)(uint64_t *);
  char v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t (*v23)(uint64_t *);
  char v24;
  uint64_t v25;
  unsigned int *v26;
  unsigned int v27;
  uint64_t result;
  unsigned int *v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  pxrInternal__aapl__pxrReserved__::SdfFileFormat::_GetLayerData(&v32, this, a2);
  sub_20C52EAE8((uint64_t)&v32, &v36);
  v4 = sub_20C52EB54(&v36);
  v6 = v5 & 1 | (unint64_t)v4;
  v7 = v37;
  if (v37)
  {
    v8 = (unsigned int *)(v37 + 8);
    do
    {
      v9 = __ldxr(v8);
      v10 = v9 - 1;
    }
    while (__stlxr(v10, v8));
    if (!v10)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  }
  if (v6)
  {
    v11 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
    if (!v11)
      v11 = sub_20C52E780(&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
  }
  else
  {
    sub_20C52EBA8((uint64_t)&v32, &v36);
    v12 = sub_20C52EC14(&v36);
    v14 = v13 & 1 | (unint64_t)v12;
    v15 = v37;
    if (v37)
    {
      v16 = (unsigned int *)(v37 + 8);
      do
      {
        v17 = __ldxr(v16);
        v18 = v17 - 1;
      }
      while (__stlxr(v18, v16));
      if (!v18)
        (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
    }
    if (!v14)
    {
      v34 = 0;
      v35 = 0;
      goto LABEL_18;
    }
    v11 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
    if (!v11)
      v11 = sub_20C27EB9C(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  }
  sub_20C52E6C8(v11, &v34);
LABEL_18:
  v19 = v33;
  if (v33)
  {
    v20 = (unsigned int *)(v33 + 8);
    do
    {
      v21 = __ldxr(v20);
      v22 = v21 - 1;
    }
    while (__stlxr(v22, v20));
    if (!v22)
      (*(void (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
  }
  v23 = sub_20C0E9DAC(&v34);
  if (v24 & 1 | (unint64_t)v23)
  {
    v25 = v35;
    *a3 = v34;
    a3[1] = v25;
    if (v25)
    {
      v26 = (unsigned int *)(v25 + 8);
      do
        v27 = __ldxr(v26);
      while (__stxr(v27 + 1, v26));
    }
  }
  else
  {
    sub_20C52CC94(a3);
  }
  result = v35;
  if (v35)
  {
    v29 = (unsigned int *)(v35 + 8);
    do
    {
      v30 = __ldxr(v29);
      v31 = v30 - 1;
    }
    while (__stlxr(v31, v29));
    if (!v31)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  return result;
}

void sub_20C52DBD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, unsigned int *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  unsigned int *v15;
  unsigned int v16;
  unsigned int v17;

  if (a14)
    sub_20C96B408(a14);
  if (a10)
  {
    v15 = a10 + 2;
    do
    {
      v16 = __ldxr(v15);
      v17 = v16 - 1;
    }
    while (__stlxr(v17, v15));
    if (!v17)
      (*(void (**)(unsigned int *))(*(_QWORD *)a10 + 8))(a10);
  }
  _Unwind_Resume(exception_object);
}

pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::GetUnderlyingFormatForLayer@<X0>(pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat *this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *FileFormat;
  pxrInternal__aapl__pxrReserved__::SdfFileFormat *v6;
  const pxrInternal__aapl__pxrReserved__::SdfLayer *v7;
  _QWORD *FormatId;
  pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *result;
  unsigned int *v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *v14;

  FileFormat = (uint64_t *)pxrInternal__aapl__pxrReserved__::SdfLayer::GetFileFormat(this);
  v6 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)sub_20BFCF6F4(FileFormat);
  FormatId = (_QWORD *)pxrInternal__aapl__pxrReserved__::SdfFileFormat::GetFormatId(v6);
  result = (pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  if (!result)
    result = sub_20C45695C(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  if ((*FormatId & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)result & 0xFFFFFFFFFFFFFFF8))
  {
    pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::_GetUnderlyingFileFormatForLayer(this, v7, &v13);
    sub_20C52DD38(&v13, a2);
    result = v14;
    if (v14)
    {
      v10 = (unsigned int *)((char *)v14 + 8);
      do
      {
        v11 = __ldxr(v10);
        v12 = v11 - 1;
      }
      while (__stlxr(v12, v10));
      if (!v12)
        return (pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *))(*(_QWORD *)result + 8))(result);
    }
  }
  else
  {
    *a2 = 0;
  }
  return result;
}

void sub_20C52DD20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    sub_20C96B408(a10);
  _Unwind_Resume(exception_object);
}

pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType *sub_20C52DD38@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t (*v4)(uint64_t *);
  char v5;
  unsigned int *v6;
  pxrInternal__aapl__pxrReserved__::SdfFileFormat *v7;
  uint64_t *FormatId;
  uint64_t v9;
  unsigned int v10;
  pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType *result;
  unint64_t v12;
  uint64_t (*v13)(uint64_t *);
  const char *v14;
  char *v15;
  const char *v16;
  char *v17;
  char *v18;
  const char *v19;
  uint64_t v20;
  const char *v21;
  uint64_t v22;

  v4 = sub_20C0E9DAC(a1);
  v6 = (unsigned int *)(v5 & 1 | (unint64_t)v4);
  if (!v6)
    goto LABEL_6;
  v7 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)sub_20BFCF6F4(a1);
  FormatId = (uint64_t *)pxrInternal__aapl__pxrReserved__::SdfFileFormat::GetFormatId(v7);
  v9 = *FormatId;
  *a2 = *FormatId;
  if ((v9 & 7) != 0)
  {
    v6 = (unsigned int *)(v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v6);
    while (__stxr(v10 + 2, v6));
    if ((v10 & 1) == 0)
LABEL_6:
      *a2 = v6;
  }
  result = (pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  if (!result)
    result = sub_20C27EB9C(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) != (*(_QWORD *)result & 0xFFFFFFFFFFFFFFF8))
  {
    result = (pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
    if (!result)
      result = sub_20C52E780(&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
    v12 = *a2 & 0xFFFFFFFFFFFFFFF8;
    if (v12 != (*(_QWORD *)result & 0xFFFFFFFFFFFFFFF8))
    {
      v18 = "usd/usdFileFormat.cpp";
      v19 = "_GetFormatArgumentForFileFormat";
      v20 = 133;
      v21 = "TfToken pxrInternal__aapl__pxrReserved__::_GetFormatArgumentForFileFormat(const SdfFileFormatConstPtr &)";
      LOBYTE(v22) = 0;
      v13 = sub_20C0E9DAC(a1);
      if (v14 & 1 | (unint64_t)v13)
      {
        if (v12)
        {
          v16 = (const char *)(v12 + 16);
          if (*(char *)(v12 + 39) < 0)
            v16 = *(const char **)v16;
        }
        else
        {
          v16 = "";
        }
      }
      else
      {
        v16 = "<null>";
      }
      v17 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"Unhandled file format '%s'", v14, v15, v16, v18, v19, v20, v21, v22);
      return (pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType *)pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v18, "formatArg == UsdUsdaFileFormatTokens->Id || formatArg == UsdUsdcFileFormatTokens->Id", v17);
    }
  }
  return result;
}

void sub_20C52DEB0(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  v2 = *v1;
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::WriteToFile(uint64_t a1, pxrInternal__aapl__pxrReserved__::SdfLayer *a2, std::string *a3, uint64_t a4, uint64_t a5)
{
  uint64_t (*v8)(uint64_t *);
  char v9;
  std::string *RealPath;
  uint64_t v11;
  std::string::size_type size;
  std::string::size_type v13;
  char v14;
  const pxrInternal__aapl__pxrReserved__::SdfLayer *p_p;
  std::string *p_s1;
  unsigned int *v17;
  unsigned int *v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int *v22;
  unsigned int v23;
  unsigned int v24;
  uint64_t (*v25)(uint64_t *);
  char v26;
  unsigned int *v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int v30;
  std::string::size_type v31;
  unsigned int *v32;
  unsigned int v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int *v38;
  unsigned int v39;
  unsigned int v40;
  uint64_t v42[3];
  std::string __p;
  std::string __s1;
  __int128 v45;

  sub_20C52C964(a5, (uint64_t *)&v45);
  v8 = sub_20C0E9DAC(&v45);
  if (v9 & 1 | (unint64_t)v8)
    goto LABEL_33;
  RealPath = (std::string *)pxrInternal__aapl__pxrReserved__::SdfLayer::GetRealPath(a2);
  pxrInternal__aapl__pxrReserved__::TfRealPath(RealPath, 1, 0, &__s1);
  pxrInternal__aapl__pxrReserved__::TfRealPath(a3, 1, 0, &__p);
  v11 = HIBYTE(__s1.__r_.__value_.__r.__words[2]);
  if ((__s1.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__s1.__r_.__value_.__r.__words[2]);
  else
    size = __s1.__r_.__value_.__l.__size_;
  v13 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  v14 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v13 = __p.__r_.__value_.__l.__size_;
  if (size == v13)
  {
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = (const pxrInternal__aapl__pxrReserved__::SdfLayer *)&__p;
    else
      p_p = (const pxrInternal__aapl__pxrReserved__::SdfLayer *)__p.__r_.__value_.__r.__words[0];
    if ((*((_BYTE *)&__s1.__r_.__value_.__s + 23) & 0x80) == 0)
    {
      if (*((_BYTE *)&__s1.__r_.__value_.__s + 23))
      {
        p_s1 = &__s1;
        while (p_s1->__r_.__value_.__s.__data_[0] == *(unsigned __int8 *)p_p)
        {
          p_s1 = (std::string *)((char *)p_s1 + 1);
          p_p = (const pxrInternal__aapl__pxrReserved__::SdfLayer *)((char *)p_p + 1);
          if (!--v11)
            goto LABEL_18;
        }
        goto LABEL_29;
      }
      goto LABEL_18;
    }
    if (!memcmp(__s1.__r_.__value_.__l.__data_, p_p, __s1.__r_.__value_.__l.__size_))
    {
LABEL_18:
      pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::_GetUnderlyingFileFormatForLayer(a2, p_p, v42);
      v17 = (unsigned int *)*((_QWORD *)&v45 + 1);
      v45 = *(_OWORD *)v42;
      v42[1] = 0;
      if (v17)
      {
        v18 = v17 + 2;
        do
        {
          v19 = __ldxr(v18);
          v20 = v19 - 1;
        }
        while (__stlxr(v20, v18));
        if (!v20)
          (*(void (**)(unsigned int *))(*(_QWORD *)v17 + 8))(v17);
        v21 = v42[1];
        v42[0] = 0;
        if (v42[1])
        {
          v22 = (unsigned int *)(v42[1] + 8);
          do
          {
            v23 = __ldxr(v22);
            v24 = v23 - 1;
          }
          while (__stlxr(v24, v22));
          if (!v24)
            (*(void (**)(uint64_t))(*(_QWORD *)v21 + 8))(v21);
        }
      }
      v14 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
  }
LABEL_29:
  if (v14 < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(__s1.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__s1.__r_.__value_.__l.__data_);
LABEL_33:
  v25 = sub_20C0E9DAC(&v45);
  if (!(v26 & 1 | (unint64_t)v25))
  {
    sub_20C52CC94((uint64_t *)&__s1);
    v27 = (unsigned int *)*((_QWORD *)&v45 + 1);
    v45 = *(_OWORD *)&__s1.__r_.__value_.__l.__data_;
    __s1.__r_.__value_.__l.__size_ = 0;
    if (v27)
    {
      v28 = v27 + 2;
      do
      {
        v29 = __ldxr(v28);
        v30 = v29 - 1;
      }
      while (__stlxr(v30, v28));
      if (!v30)
        (*(void (**)(unsigned int *))(*(_QWORD *)v27 + 8))(v27);
      v31 = __s1.__r_.__value_.__l.__size_;
      __s1.__r_.__value_.__r.__words[0] = 0;
      if (__s1.__r_.__value_.__l.__size_)
      {
        v32 = (unsigned int *)(__s1.__r_.__value_.__l.__size_ + 8);
        do
        {
          v33 = __ldxr(v32);
          v34 = v33 - 1;
        }
        while (__stlxr(v34, v32));
        if (!v34)
          (*(void (**)(std::string::size_type))(*(_QWORD *)v31 + 8))(v31);
      }
    }
  }
  v35 = sub_20BFCF6F4((uint64_t *)&v45);
  *(_OWORD *)&__s1.__r_.__value_.__r.__words[1] = 0uLL;
  __s1.__r_.__value_.__r.__words[0] = (std::string::size_type)&__s1.__r_.__value_.__l.__size_;
  v36 = (*(uint64_t (**)(uint64_t, pxrInternal__aapl__pxrReserved__::SdfLayer *, std::string *, uint64_t, std::string *))(*(_QWORD *)v35 + 64))(v35, a2, a3, a4, &__s1);
  sub_20BDE9D48((uint64_t)&__s1, (_QWORD *)__s1.__r_.__value_.__l.__size_);
  v37 = *((_QWORD *)&v45 + 1);
  if (*((_QWORD *)&v45 + 1))
  {
    v38 = (unsigned int *)(*((_QWORD *)&v45 + 1) + 8);
    do
    {
      v39 = __ldxr(v38);
      v40 = v39 - 1;
    }
    while (__stlxr(v40, v38));
    if (!v40)
      (*(void (**)(uint64_t))(*(_QWORD *)v37 + 8))(v37);
  }
  return v36;
}

void sub_20C52E160(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  uint64_t v23;
  unsigned int *v25;
  unsigned int *v26;
  unsigned int v27;
  unsigned int v28;

  if (a17 < 0)
    operator delete(__p);
  if (a23 < 0)
    operator delete(a18);
  v25 = *(unsigned int **)(v23 - 40);
  if (v25)
  {
    v26 = v25 + 2;
    do
    {
      v27 = __ldxr(v26);
      v28 = v27 - 1;
    }
    while (__stlxr(v28, v26));
    if (!v28)
      (*(void (**)(unsigned int *))(*(_QWORD *)v25 + 8))(v25);
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::ReadFromString(int a1, pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat *this, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v12;
  uint64_t v13;

  pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::_GetUnderlyingFileFormatForLayer(this, this, &v12);
  v5 = sub_20BFCF6F4(&v12);
  v6 = (*(uint64_t (**)(uint64_t, pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat *, uint64_t))(*(_QWORD *)v5 + 72))(v5, this, a3);
  v7 = v13;
  if (v13)
  {
    v8 = (unsigned int *)(v13 + 8);
    do
    {
      v9 = __ldxr(v8);
      v10 = v9 - 1;
    }
    while (__stlxr(v10, v8));
    if (!v10)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  }
  return v6;
}

void sub_20C52E268(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    sub_20C96B408(a10);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::WriteToString(int a1, pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat *this, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v14;
  uint64_t v15;

  pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::_GetUnderlyingFileFormatForLayer(this, this, &v14);
  v7 = sub_20BFCF6F4(&v14);
  v8 = (*(uint64_t (**)(uint64_t, pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat *, uint64_t, uint64_t))(*(_QWORD *)v7 + 88))(v7, this, a3, a4);
  v9 = v15;
  if (v15)
  {
    v10 = (unsigned int *)(v15 + 8);
    do
    {
      v11 = __ldxr(v10);
      v12 = v11 - 1;
    }
    while (__stlxr(v12, v10));
    if (!v12)
      (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
  }
  return v8;
}

void sub_20C52E314(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    sub_20C96B408(a10);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::WriteToStream(uint64_t a1, pxrInternal__aapl__pxrReserved__::Sdf_Identity **a2, uint64_t a3, uint64_t a4)
{
  uint64_t **v7;
  const pxrInternal__aapl__pxrReserved__::SdfLayer *v8;
  pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int v19;
  pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v7 = (uint64_t **)sub_20BFD5244(a2);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetLayer(v7, (uint64_t *)&v21);
  if (*(_BYTE *)(sub_20BEB47BC(&v22) + 14))
    v9 = v21;
  else
    v9 = 0;
  pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::_GetUnderlyingFileFormatForLayer(v9, v8, &v23);
  v10 = sub_20BFCF6F4(&v23);
  v11 = (*(uint64_t (**)(uint64_t, pxrInternal__aapl__pxrReserved__::Sdf_Identity **, uint64_t, uint64_t))(*(_QWORD *)v10 + 80))(v10, a2, a3, a4);
  v12 = v24;
  if (v24)
  {
    v13 = (unsigned int *)(v24 + 8);
    do
    {
      v14 = __ldxr(v13);
      v15 = v14 - 1;
    }
    while (__stlxr(v15, v13));
    if (!v15)
      (*(void (**)(uint64_t))(*(_QWORD *)v12 + 8))(v12);
  }
  v16 = v22;
  if (v22)
  {
    v17 = (unsigned int *)(v22 + 8);
    do
    {
      v18 = __ldxr(v17);
      v19 = v18 - 1;
    }
    while (__stlxr(v19, v17));
    if (!v19)
      (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
  }
  return v11;
}

void sub_20C52E414(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, unsigned int *a10, uint64_t a11, unsigned int *a12)
{
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unsigned int v18;

  if (a12)
  {
    v13 = a12 + 2;
    do
    {
      v14 = __ldxr(v13);
      v15 = v14 - 1;
    }
    while (__stlxr(v15, v13));
    if (!v15)
      (*(void (**)(unsigned int *))(*(_QWORD *)a12 + 8))(a12);
  }
  if (a10)
  {
    v16 = a10 + 2;
    do
    {
      v17 = __ldxr(v16);
      v18 = v17 - 1;
    }
    while (__stlxr(v18, v16));
    if (!v18)
      (*(void (**)(unsigned int *))(*(_QWORD *)a10 + 8))(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_20C52E480()
{
  uint64_t *v0;
  void *__p[2];
  char v4;
  void *v5[3];
  uint64_t v6;
  int v7;

  sub_20BEB59B0((uint64_t)&v6, (uint64_t)"Tf", (uint64_t)"TfType::Define");
  sub_20C1BA13C((unint64_t **)v5);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p, (char **)v5, 0);
  if (v4 < 0)
    operator delete(__p[0]);
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_20C52E554(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  uint64_t v16;

  if (a14 < 0)
    operator delete(__p);
  if (a15)
    operator delete(a15);
  sub_20BEB24F4(v16 - 32);
  _Unwind_Resume(a1);
}

uint64_t sub_20C52E5A0(uint64_t *a1)
{
  _QWORD *v2;
  char *v3;
  uint64_t result;
  _QWORD *v5;

  v2 = operator new(8uLL);
  *v2 = &unk_24C53BC60;
  v5 = v2;
  pxrInternal__aapl__pxrReserved__::TfType::SetFactory(a1, (uint64_t *)&v5, v3);
  result = (uint64_t)v5;
  v5 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_20C52E604(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_20C52E630(pxrInternal__aapl__pxrReserved__::Sdf_FileFormatFactoryBase *a1)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::Sdf_FileFormatFactoryBase::~Sdf_FileFormatFactoryBase(a1);
  operator delete(v1);
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **sub_20C52E644@<X0>(pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat **a1@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat *v2;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v4;

  v2 = (pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat *)operator new(0x70uLL);
  pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::UsdUsdFileFormat(v2);
  *a1 = v2;
  v4 = 0;
  return sub_20C52E69C(&v4);
}

void sub_20C52E688(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **sub_20C52E69C(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **a1)
{
  sub_20BF1D8F4((int)a1, *a1);
  return a1;
}

uint64_t sub_20C52E6C8@<X0>(pxrInternal__aapl__pxrReserved__::SdfFileFormat *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  char v4;
  _QWORD v5[4];
  char v6;

  pxrInternal__aapl__pxrReserved__::SdfFileFormat::FindById(a1, a2);
  result = (uint64_t)sub_20C0E9DAC(a2);
  if (!(v4 & 1 | (unint64_t)result))
  {
    v5[0] = "usd/usdFileFormat.cpp";
    v5[1] = "_GetFileFormat";
    v5[2] = 62;
    v5[3] = "SdfFileFormatConstPtr pxrInternal__aapl__pxrReserved__::_GetFileFormat(const TfToken &)";
    v6 = 0;
    return pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v5, "fileFormat", 0);
  }
  return result;
}

void sub_20C52E744(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;

  v3 = *(unsigned int **)(v1 + 8);
  if (v3)
  {
    v4 = v3 + 2;
    do
    {
      v5 = __ldxr(v4);
      v6 = v5 - 1;
    }
    while (__stlxr(v6, v4));
    if (!v6)
      (*(void (**)(unsigned int *))(*(_QWORD *)v3 + 8))(v3);
  }
  _Unwind_Resume(exception_object);
}

pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType *sub_20C52E780(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C52E7C8();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType::~UsdUsdcFileFormatTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType *sub_20C52E7C8()
{
  pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType *)operator new(0x20uLL);
  pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType::UsdUsdcFileFormatTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C52E7F4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C52E808@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  int v6;
  const void *v7;
  BOOL v8;
  void *v9;

  v5 = *(_QWORD *)(a1 + 8);
  v4 = (uint64_t *)(a1 + 8);
  if (!v5
    || ((v6 = *(unsigned __int8 *)(sub_20BEB47BC(v4) + 14), v7 = *(const void **)a1, v6) ? (v8 = v7 == 0) : (v8 = 1),
        v8))
  {
    v9 = 0;
  }
  else
  {
  }
  return sub_20C52E8C0(a2, (uint64_t)v9);
}

uint64_t sub_20C52E874(uint64_t a1)
{
  unsigned int *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;

  v2 = *(unsigned int **)(a1 + 8);
  if (v2)
  {
    v3 = v2 + 2;
    do
    {
      v4 = __ldxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
      (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 8))(v2);
  }
  return a1;
}

_QWORD *sub_20C52E8C0(_QWORD *a1, uint64_t a2)
{
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v12;

  *a1 = a2;
  a1[1] = 0;
  if (a2)
  {
    sub_20BEB5AD8((unint64_t *)(a2 + 16), &v12);
    v3 = (unsigned int *)a1[1];
    a1[1] = v12;
    v12 = 0;
    if (v3)
    {
      v4 = v3 + 2;
      do
      {
        v5 = __ldxr(v4);
        v6 = v5 - 1;
      }
      while (__stlxr(v6, v4));
      if (!v6)
        (*(void (**)(unsigned int *))(*(_QWORD *)v3 + 8))(v3);
      v7 = v12;
      if (v12)
      {
        v8 = (unsigned int *)(v12 + 8);
        do
        {
          v9 = __ldxr(v8);
          v10 = v9 - 1;
        }
        while (__stlxr(v10, v8));
        if (!v10)
          (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
      }
    }
  }
  return a1;
}

void sub_20C52E960(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  if (v3)
    sub_20C96B408(v3);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20C52E978@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  int v6;
  const void *v7;
  BOOL v8;
  void *v9;

  v5 = *(_QWORD *)(a1 + 8);
  v4 = (uint64_t *)(a1 + 8);
  if (!v5
    || ((v6 = *(unsigned __int8 *)(sub_20BEB47BC(v4) + 14), v7 = *(const void **)a1, v6) ? (v8 = v7 == 0) : (v8 = 1),
        v8))
  {
    v9 = 0;
  }
  else
  {
  }
  return sub_20C52EA30(a2, (uint64_t)v9);
}

uint64_t sub_20C52E9E4(uint64_t a1)
{
  unsigned int *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;

  v2 = *(unsigned int **)(a1 + 8);
  if (v2)
  {
    v3 = v2 + 2;
    do
    {
      v4 = __ldxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
      (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 8))(v2);
  }
  return a1;
}

_QWORD *sub_20C52EA30(_QWORD *a1, uint64_t a2)
{
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v12;

  *a1 = a2;
  a1[1] = 0;
  if (a2)
  {
    sub_20BEB5AD8((unint64_t *)(a2 + 16), &v12);
    v3 = (unsigned int *)a1[1];
    a1[1] = v12;
    v12 = 0;
    if (v3)
    {
      v4 = v3 + 2;
      do
      {
        v5 = __ldxr(v4);
        v6 = v5 - 1;
      }
      while (__stlxr(v6, v4));
      if (!v6)
        (*(void (**)(unsigned int *))(*(_QWORD *)v3 + 8))(v3);
      v7 = v12;
      if (v12)
      {
        v8 = (unsigned int *)(v12 + 8);
        do
        {
          v9 = __ldxr(v8);
          v10 = v9 - 1;
        }
        while (__stlxr(v10, v8));
        if (!v10)
          (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
      }
    }
  }
  return a1;
}

void sub_20C52EAD0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  if (v3)
    sub_20C96B408(v3);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20C52EAE8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  int v6;
  const void *v7;
  BOOL v8;
  void *v9;

  v5 = *(_QWORD *)(a1 + 8);
  v4 = (uint64_t *)(a1 + 8);
  if (!v5
    || ((v6 = *(unsigned __int8 *)(sub_20BEB47BC(v4) + 14), v7 = *(const void **)a1, v6) ? (v8 = v7 == 0) : (v8 = 1),
        v8))
  {
    v9 = 0;
  }
  else
  {
  }
  return sub_20C52EC68(a2, (uint64_t)v9);
}

uint64_t (*sub_20C52EB54(_QWORD *a1))(uint64_t *a1)
{
  uint64_t *v2;
  uint64_t v3;
  int v4;
  BOOL v5;

  v3 = a1[1];
  v2 = a1 + 1;
  if (!v3)
    return 0;
  v4 = *(unsigned __int8 *)(sub_20BEB47BC(v2) + 14);
  if (*a1)
    v5 = v4 == 0;
  else
    v5 = 1;
  if (v5)
    return 0;
  else
    return sub_20C52ED20;
}

_QWORD *sub_20C52EBA8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  int v6;
  const void *v7;
  BOOL v8;
  void *v9;

  v5 = *(_QWORD *)(a1 + 8);
  v4 = (uint64_t *)(a1 + 8);
  if (!v5
    || ((v6 = *(unsigned __int8 *)(sub_20BEB47BC(v4) + 14), v7 = *(const void **)a1, v6) ? (v8 = v7 == 0) : (v8 = 1),
        v8))
  {
    v9 = 0;
  }
  else
  {
  }
  return sub_20C52ED60(a2, (uint64_t)v9);
}

uint64_t (*sub_20C52EC14(_QWORD *a1))(uint64_t *a1)
{
  uint64_t *v2;
  uint64_t v3;
  int v4;
  BOOL v5;

  v3 = a1[1];
  v2 = a1 + 1;
  if (!v3)
    return 0;
  v4 = *(unsigned __int8 *)(sub_20BEB47BC(v2) + 14);
  if (*a1)
    v5 = v4 == 0;
  else
    v5 = 1;
  if (v5)
    return 0;
  else
    return sub_20C52EE18;
}

_QWORD *sub_20C52EC68(_QWORD *a1, uint64_t a2)
{
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v12;

  *a1 = a2;
  a1[1] = 0;
  if (a2)
  {
    sub_20BEB5AD8((unint64_t *)(a2 + 16), &v12);
    v3 = (unsigned int *)a1[1];
    a1[1] = v12;
    v12 = 0;
    if (v3)
    {
      v4 = v3 + 2;
      do
      {
        v5 = __ldxr(v4);
        v6 = v5 - 1;
      }
      while (__stlxr(v6, v4));
      if (!v6)
        (*(void (**)(unsigned int *))(*(_QWORD *)v3 + 8))(v3);
      v7 = v12;
      if (v12)
      {
        v8 = (unsigned int *)(v12 + 8);
        do
        {
          v9 = __ldxr(v8);
          v10 = v9 - 1;
        }
        while (__stlxr(v10, v8));
        if (!v10)
          (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
      }
    }
  }
  return a1;
}

void sub_20C52ED08(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  if (v3)
    sub_20C96B408(v3);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C52ED20(uint64_t *a1)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = a1[1];
  v2 = a1 + 1;
  if (!v3)
    return 0;
  if (*(_BYTE *)(sub_20BEB47BC(v2) + 14))
    return *a1;
  return 0;
}

_QWORD *sub_20C52ED60(_QWORD *a1, uint64_t a2)
{
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v12;

  *a1 = a2;
  a1[1] = 0;
  if (a2)
  {
    sub_20BEB5AD8((unint64_t *)(a2 + 16), &v12);
    v3 = (unsigned int *)a1[1];
    a1[1] = v12;
    v12 = 0;
    if (v3)
    {
      v4 = v3 + 2;
      do
      {
        v5 = __ldxr(v4);
        v6 = v5 - 1;
      }
      while (__stlxr(v6, v4));
      if (!v6)
        (*(void (**)(unsigned int *))(*(_QWORD *)v3 + 8))(v3);
      v7 = v12;
      if (v12)
      {
        v8 = (unsigned int *)(v12 + 8);
        do
        {
          v9 = __ldxr(v8);
          v10 = v9 - 1;
        }
        while (__stlxr(v10, v8));
        if (!v10)
          (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
      }
    }
  }
  return a1;
}

void sub_20C52EE00(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  if (v3)
    sub_20C96B408(v3);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C52EE18(uint64_t *a1)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = a1[1];
  v2 = a1 + 1;
  if (!v3)
    return 0;
  if (*(_BYTE *)(sub_20BEB47BC(v2) + 14))
    return *a1;
  return 0;
}

void pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType::~UsdUsdaFileFormatTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType *this)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int *v5;
  unsigned int v6;
  void **v7;

  v7 = (void **)((char *)this + 16);
  sub_20BEEB2B8(&v7);
  v2 = *((_QWORD *)this + 1);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  if ((*(_QWORD *)this & 7) != 0)
  {
    v5 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
}

pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType::UsdUsdaFileFormatTokens_StaticTokenType(unsigned int **this)
{
  unsigned int **v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int **v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int *v20;
  unsigned int *v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v2 = (unsigned int **)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "usda", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2, "1.0", 0);
  v3 = *this;
  v20 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v20 = v4;
  }
  v6 = *v2;
  v21 = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      v21 = v7;
  }
  this[2] = 0;
  this[3] = 0;
  this[4] = 0;
  v9 = (unsigned int *)operator new(0x10uLL);
  v10 = 0;
  this[2] = v9;
  this[3] = v9;
  this[4] = v9 + 4;
  do
  {
    v11 = (&v20)[v10];
    *(_QWORD *)v9 = v11;
    if ((v11 & 7) != 0)
    {
      v12 = (unsigned int *)((unint64_t)v11 & 0xFFFFFFFFFFFFFFF8);
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 2, v12));
      if ((v13 & 1) == 0)
        *(_QWORD *)v9 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v10;
    v9 += 2;
  }
  while (v10 != 2);
  v14 = (unsigned int **)&v22;
  this[3] = v9;
  do
  {
    v16 = (uint64_t)*--v14;
    v15 = v16;
    if ((v16 & 7) != 0)
    {
      v17 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
  }
  while (v14 != &v20);
  return (pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType *)this;
}

void sub_20C52F058(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  _QWORD *v14;
  _QWORD *v15;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int *v22;
  unsigned int v23;
  unsigned int *v24;
  unsigned int v25;

  sub_20BEEB2B8(&a10);
  v17 = &a14;
  while (1)
  {
    v19 = *--v17;
    v18 = v19;
    if ((v19 & 7) != 0)
    {
      v20 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stlxr(v21 - 2, v20));
    }
    if (v17 == (uint64_t *)&a12)
    {
      if ((*v15 & 7) != 0)
      {
        v22 = (unsigned int *)(*v15 & 0xFFFFFFFFFFFFFFF8);
        do
          v23 = __ldxr(v22);
        while (__stlxr(v23 - 2, v22));
      }
      if ((*v14 & 7) != 0)
      {
        v24 = (unsigned int *)(*v14 & 0xFFFFFFFFFFFFFFF8);
        do
          v25 = __ldxr(v24);
        while (__stlxr(v25 - 2, v24));
      }
      _Unwind_Resume(a1);
    }
  }
}

uint64_t sub_20C52F0E8()
{
  uint64_t *v0;

  v0 = sub_20C52F1C0();
  return sub_20C52F2E0(v0);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormat::UsdUsdaFileFormat(pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormat *this)
{
  pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType *v2;
  pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType *v3;
  pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *v4;
  uint64_t result;

  v2 = (pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  if (!v2)
    v2 = sub_20C27EB9C(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  if (!v3)
    v3 = sub_20C27EB9C(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  v4 = (pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  if (!v4)
    v4 = sub_20C45695C(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  result = pxrInternal__aapl__pxrReserved__::SdfTextFileFormat::SdfTextFileFormat(this, v2, (pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType *)((char *)v3 + 8), (pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *)((char *)v4 + 16));
  *(_QWORD *)this = off_24C53BCA0;
  return result;
}

void pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormat::~UsdUsdaFileFormat(pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormat *this)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::SdfTextFileFormat::~SdfTextFileFormat(this);
  operator delete(v1);
}

uint64_t *sub_20C52F1C0()
{
  uint64_t *v0;
  void *__p[2];
  char v4;
  void *v5[3];
  uint64_t v6;
  int v7;

  sub_20BEB59B0((uint64_t)&v6, (uint64_t)"Tf", (uint64_t)"TfType::Define");
  sub_20C52F368((unint64_t **)v5);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p, (char **)v5, 0);
  if (v4 < 0)
    operator delete(__p[0]);
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_20C52F294(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  uint64_t v16;

  if (a14 < 0)
    operator delete(__p);
  if (a15)
    operator delete(a15);
  sub_20BEB24F4(v16 - 32);
  _Unwind_Resume(a1);
}

uint64_t sub_20C52F2E0(uint64_t *a1)
{
  _QWORD *v2;
  char *v3;
  uint64_t result;
  _QWORD *v5;

  v2 = operator new(8uLL);
  *v2 = &unk_24C53BD58;
  v5 = v2;
  pxrInternal__aapl__pxrReserved__::TfType::SetFactory(a1, (uint64_t *)&v5, v3);
  result = (uint64_t)v5;
  v5 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_20C52F344(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_20C52F368(unint64_t **a1@<X8>)
{
  unint64_t v2;
  unint64_t *v3;
  void *__p[2];
  char v5;

  v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  v3 = (unint64_t *)operator new(8uLL);
  *a1 = v3;
  *v3++ = v2;
  a1[1] = v3;
  a1[2] = v3;
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C52F3D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C52F3FC(pxrInternal__aapl__pxrReserved__::Sdf_FileFormatFactoryBase *a1)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::Sdf_FileFormatFactoryBase::~Sdf_FileFormatFactoryBase(a1);
  operator delete(v1);
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **sub_20C52F410@<X0>(pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormat **a1@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormat *v2;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v4;

  v2 = (pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormat *)operator new(0x70uLL);
  pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormat::UsdUsdaFileFormat(v2);
  *a1 = v2;
  v4 = 0;
  return sub_20C52F468(&v4);
}

void sub_20C52F454(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **sub_20C52F468(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **a1)
{
  sub_20BF1D8F4((int)a1, *a1);
  return a1;
}

void pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType::~UsdUsdcFileFormatTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType *this)
{
  unsigned int *v2;
  unsigned int v3;
  void **v4;

  v4 = (void **)((char *)this + 8);
  sub_20BEEB2B8(&v4);
  if ((*(_QWORD *)this & 7) != 0)
  {
    v2 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v3 = __ldxr(v2);
    while (__stlxr(v3 - 2, v2));
  }
}

{
  unsigned int *v2;
  unsigned int v3;
  void **v4;

  v4 = (void **)((char *)this + 8);
  sub_20BEEB2B8(&v4);
  if ((*(_QWORD *)this & 7) != 0)
  {
    v2 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v3 = __ldxr(v2);
    while (__stlxr(v3 - 2, v2));
  }
}

pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType::UsdUsdcFileFormatTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType *this)
{
  uint64_t *v2;
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  _QWORD *v6;
  _QWORD *v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = (uint64_t *)pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "usdc", 0);
  v3 = *v2;
  if ((*v2 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v3 &= 0xFFFFFFFFFFFFFFF8;
  }
  v2[1] = 0;
  v2[2] = 0;
  v2[3] = 0;
  v6 = operator new(8uLL);
  *((_QWORD *)this + 1) = v6;
  *((_QWORD *)this + 2) = v6;
  *v6 = v3;
  v7 = v6 + 1;
  *((_QWORD *)this + 3) = v6 + 1;
  if ((v3 & 7) != 0)
  {
    v8 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 2, v8));
    if ((v9 & 1) == 0)
      *v6 &= 0xFFFFFFFFFFFFFFF8;
    *((_QWORD *)this + 2) = v7;
    do
      v10 = __ldxr(v8);
    while (__stlxr(v10 - 2, v8));
  }
  else
  {
    *((_QWORD *)this + 2) = v7;
  }
  return this;
}

void sub_20C52F620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int *v13;
  unsigned int v14;

  v11 = v10;
  sub_20BEEB2B8(&a9);
  if ((v11 & 7) != 0)
  {
    v13 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  sub_20C96B3E4(v9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C52F664()
{
  uint64_t *v0;

  v0 = sub_20C52FF94();
  return sub_20C5300B4(v0);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::UsdUsdcFileFormat(pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat *this)
{
  pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat *v1;
  uint64_t *v2;
  uint64_t *SoftwareVersionToken;
  pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *v4;
  pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType *v5;
  uint64_t *EmptyString;
  uint64_t result;

  v1 = this;
  v2 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
  if (!v2)
  {
    this = sub_20C52E780(&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
    v2 = (uint64_t *)this;
  }
  SoftwareVersionToken = (uint64_t *)pxrInternal__aapl__pxrReserved__::Usd_CrateData::GetSoftwareVersionToken(this);
  v4 = (pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  if (!v4)
    v4 = sub_20C45695C(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  v5 = (pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
  if (!v5)
    v5 = sub_20C52E780(&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
  if ((*(_QWORD *)v5 & 0xFFFFFFFFFFFFFFF8) != 0)
    EmptyString = (uint64_t *)((*(_QWORD *)v5 & 0xFFFFFFFFFFFFFFF8) + 16);
  else
    EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v5);
  result = pxrInternal__aapl__pxrReserved__::SdfFileFormat::SdfFileFormat((uint64_t)v1, v2, SoftwareVersionToken, (uint64_t *)v4 + 2, (uint64_t)EmptyString);
  *(_QWORD *)v1 = off_24C53BD98;
  return result;
}

void pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::~UsdUsdcFileFormat(pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat *this)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::SdfFileFormat::~SdfFileFormat(this);
  operator delete(v1);
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::InitData@<X0>(pxrInternal__aapl__pxrReserved__::Usd_CrateData **a1@<X8>)
{
  pxrInternal__aapl__pxrReserved__::Usd_CrateData *v2;
  pxrInternal__aapl__pxrReserved__::SdfPath *v3;
  uint64_t v4;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v6;

  v2 = (pxrInternal__aapl__pxrReserved__::Usd_CrateData *)operator new(0x20uLL);
  v3 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::Usd_CrateData::Usd_CrateData(v2, 0);
  v4 = pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v3);
  (*(void (**)(pxrInternal__aapl__pxrReserved__::Usd_CrateData *, uint64_t, uint64_t))(*(_QWORD *)v2 + 64))(v2, v4, 7);
  *a1 = v2;
  v6 = 0;
  return sub_20C5301DC(&v6);
}

void sub_20C52F7CC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::_InitDetachedData@<X0>(pxrInternal__aapl__pxrReserved__::Usd_CrateData **a1@<X8>)
{
  pxrInternal__aapl__pxrReserved__::Usd_CrateData *v2;
  pxrInternal__aapl__pxrReserved__::SdfPath *v3;
  uint64_t v4;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v6;

  v2 = (pxrInternal__aapl__pxrReserved__::Usd_CrateData *)operator new(0x20uLL);
  v3 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::Usd_CrateData::Usd_CrateData(v2, 1);
  v4 = pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v3);
  (*(void (**)(pxrInternal__aapl__pxrReserved__::Usd_CrateData *, uint64_t, uint64_t))(*(_QWORD *)v2 + 64))(v2, v4, 7);
  *a1 = v2;
  v6 = 0;
  return sub_20C5301DC(&v6);
}

void sub_20C52F844(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::CanRead(uint64_t a1, uint64_t a2)
{
  return pxrInternal__aapl__pxrReserved__::Usd_CrateData::CanRead(a2);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::_CanReadFromAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return pxrInternal__aapl__pxrReserved__::Usd_CrateData::CanRead(a2, a3);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::Read(uint64_t a1, pxrInternal__aapl__pxrReserved__::SdfLayer *a2, uint64_t a3, uint64_t a4)
{
  char v5;

  v5 = 0;
  return sub_20C52F890(a1, a2, a3, a4, &v5);
}

uint64_t sub_20C52F890(uint64_t a1, pxrInternal__aapl__pxrReserved__::SdfLayer *this, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t FileFormatArguments;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v10;
  uint64_t v11;
  uint64_t v12;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v14;
  void *lpsrc;

  FileFormatArguments = pxrInternal__aapl__pxrReserved__::SdfLayer::GetFileFormatArguments(this);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)a1 + 40))(&lpsrc, a1, FileFormatArguments);
  v10 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)lpsrc;
  if (lpsrc)
  v14 = v10;
  sub_20BF1DD04((uint64_t *)&v14);
  if (v14
    && (v11 = sub_20C52FCC4((uint64_t *)&v14),
        (pxrInternal__aapl__pxrReserved__::Usd_CrateData::Open(v11, a3, *a5) & 1) != 0))
  {
    pxrInternal__aapl__pxrReserved__::SdfFileFormat::_SetLayerData(this, (uint64_t *)&lpsrc);
    v12 = 1;
  }
  else
  {
    v12 = 0;
  }
  sub_20C5301DC(&v14);
  sub_20C0EA270((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)&lpsrc);
  return v12;
}

void sub_20C52F960(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C0EA270((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::_ReadDetached(uint64_t a1, pxrInternal__aapl__pxrReserved__::SdfLayer *a2, uint64_t a3, uint64_t a4)
{
  char v5;

  v5 = 1;
  return sub_20C52F890(a1, a2, a3, a4, &v5);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::_ReadFromAsset(uint64_t a1, pxrInternal__aapl__pxrReserved__::SdfLayer *a2, uint64_t a3, char *a4, uint64_t a5, unsigned __int8 a6)
{
  unsigned __int8 v7;

  v7 = a6;
  return sub_20C52F9DC(a1, a2, a3, a5, a4, &v7);
}

uint64_t sub_20C52F9DC(uint64_t a1, pxrInternal__aapl__pxrReserved__::SdfLayer *this, uint64_t a3, uint64_t a4, char *a5, unsigned __int8 *a6)
{
  uint64_t FileFormatArguments;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v12;
  uint64_t v13;
  uint64_t v14;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v16;
  void *lpsrc;

  FileFormatArguments = pxrInternal__aapl__pxrReserved__::SdfLayer::GetFileFormatArguments(this);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)a1 + 40))(&lpsrc, a1, FileFormatArguments);
  v12 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)lpsrc;
  if (lpsrc)
  v16 = v12;
  sub_20BF1DD04((uint64_t *)&v16);
  if (v16
    && (v13 = sub_20C52FCC4((uint64_t *)&v16),
        (pxrInternal__aapl__pxrReserved__::Usd_CrateData::Open(v13, a3, a5, *a6) & 1) != 0))
  {
    pxrInternal__aapl__pxrReserved__::SdfFileFormat::_SetLayerData(this, (uint64_t *)&lpsrc);
    v14 = 1;
  }
  else
  {
    v14 = 0;
  }
  sub_20C5301DC(&v16);
  sub_20C0EA270((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)&lpsrc);
  return v14;
}

void sub_20C52FABC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C0EA270((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::WriteToFile(uint64_t a1, pxrInternal__aapl__pxrReserved__::SdfFileFormat *this, uint64_t a3)
{
  BOOL v5;
  void *v6;
  uint64_t v7;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v8;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  _QWORD **v17;
  _QWORD *v18[2];
  void *v19;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v20;
  void *lpsrc;
  uint64_t v22;

  pxrInternal__aapl__pxrReserved__::SdfFileFormat::_GetLayerData((uint64_t *)&lpsrc, this, this);
  if (v22
    && (*(_BYTE *)(sub_20BEB47BC(&v22) + 14) ? (v5 = lpsrc == 0) : (v5 = 1),
        !v5
  {
    v7 = pxrInternal__aapl__pxrReserved__::Usd_CrateData::Save((uint64_t)v6, a3);
  }
  else
  {
    v18[0] = 0;
    v18[1] = 0;
    v17 = v18;
    (*(void (**)(void **__return_ptr, uint64_t, _QWORD ***))(*(_QWORD *)a1 + 40))(&v19, a1, &v17);
    v8 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)v19;
    if (v19)
    v20 = v8;
    sub_20BF1DD04((uint64_t *)&v20);
    sub_20C0EA270((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)&v19);
    sub_20BDE9D48((uint64_t)&v17, v18[0]);
    v9 = v20;
    if (v20)
    {
      v10 = sub_20C52FCC4((uint64_t *)&v20);
      (*(void (**)(uint64_t, void **))(*(_QWORD *)v10 + 16))(v10, &lpsrc);
      v11 = sub_20C52FCC4((uint64_t *)&v20);
      LOBYTE(a3) = pxrInternal__aapl__pxrReserved__::Usd_CrateData::Save(v11, a3);
    }
    sub_20C5301DC(&v20);
    v7 = (v9 != 0) & a3;
  }
  v12 = v22;
  if (v22)
  {
    v13 = (unsigned int *)(v22 + 8);
    do
    {
      v14 = __ldxr(v13);
      v15 = v14 - 1;
    }
    while (__stlxr(v15, v13));
    if (!v15)
      (*(void (**)(uint64_t))(*(_QWORD *)v12 + 8))(v12);
  }
  return v7;
}

void sub_20C52FC54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, unsigned int *a19)
{
  unsigned int *v20;
  unsigned int v21;
  unsigned int v22;

  if (a19)
  {
    v20 = a19 + 2;
    do
    {
      v21 = __ldxr(v20);
      v22 = v21 - 1;
    }
    while (__stlxr(v22, v20));
    if (!v22)
      (*(void (**)(unsigned int *))(*(_QWORD *)a19 + 8))(a19);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C52FCC4(uint64_t *a1)
{
  uint64_t result;
  char *v2;
  _QWORD v3[4];
  char v4;

  result = *a1;
  if (!result)
  {
    v2 = j__strrchr("/Library/Caches/com.apple.xbs/Sources/USDLib/USD/pxr/base/tf/refPtr.h", 47);
    v3[0] = sub_20BEB23F8((unint64_t)"/Library/Caches/com.apple.xbs/Sources/USDLib/USD/pxr/base/tf/refPtr.h", (uint64_t)v2, 0x2Fu);
    v3[1] = "operator->";
    v3[2] = 953;
    v3[3] = "T *pxrInternal__aapl__pxrReserved__::TfRefPtr<pxrInternal__aapl__pxrReserved__::Usd_CrateData>::operator->()"
            " const [U = pxrInternal__aapl__pxrReserved__::Usd_CrateData]";
    v4 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostNullSmartPtrDereferenceFatalError((uint64_t)v3, (pxrInternal__aapl__pxrReserved__ *)(0x800000020CAEB9B9 & 0x7FFFFFFFFFFFFFFFLL));
  }
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::ReadFromString(uint64_t a1, uint64_t a2, uint64_t a3)
{
  pxrInternal__aapl__pxrReserved__::SdfFileFormat *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v13;
  uint64_t v14;

  v5 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  if (!v5)
    v5 = sub_20C27EB9C(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  pxrInternal__aapl__pxrReserved__::SdfFileFormat::FindById(v5, &v13);
  v6 = sub_20BFCF6F4(&v13);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v6 + 72))(v6, a2, a3);
  v8 = v14;
  if (v14)
  {
    v9 = (unsigned int *)(v14 + 8);
    do
    {
      v10 = __ldxr(v9);
      v11 = v10 - 1;
    }
    while (__stlxr(v11, v9));
    if (!v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
  }
  return v7;
}

void sub_20C52FDEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    sub_20C96B340(a10);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::WriteToString(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  pxrInternal__aapl__pxrReserved__::SdfFileFormat *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v15;
  uint64_t v16;

  v7 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  if (!v7)
    v7 = sub_20C27EB9C(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  pxrInternal__aapl__pxrReserved__::SdfFileFormat::FindById(v7, &v15);
  v8 = sub_20BFCF6F4(&v15);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v8 + 88))(v8, a2, a3, a4);
  v10 = v16;
  if (v16)
  {
    v11 = (unsigned int *)(v16 + 8);
    do
    {
      v12 = __ldxr(v11);
      v13 = v12 - 1;
    }
    while (__stlxr(v13, v11));
    if (!v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v10 + 8))(v10);
  }
  return v9;
}

void sub_20C52FEB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    sub_20C96B340(a10);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::WriteToStream(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  pxrInternal__aapl__pxrReserved__::SdfFileFormat *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v15;
  uint64_t v16;

  v7 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  if (!v7)
    v7 = sub_20C27EB9C(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  pxrInternal__aapl__pxrReserved__::SdfFileFormat::FindById(v7, &v15);
  v8 = sub_20BFCF6F4(&v15);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v8 + 80))(v8, a2, a3, a4);
  v10 = v16;
  if (v16)
  {
    v11 = (unsigned int *)(v16 + 8);
    do
    {
      v12 = __ldxr(v11);
      v13 = v12 - 1;
    }
    while (__stlxr(v13, v11));
    if (!v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v10 + 8))(v10);
  }
  return v9;
}

void sub_20C52FF7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    sub_20C96B340(a10);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_20C52FF94()
{
  uint64_t *v0;
  void *__p[2];
  char v4;
  void *v5[3];
  uint64_t v6;
  int v7;

  sub_20BEB59B0((uint64_t)&v6, (uint64_t)"Tf", (uint64_t)"TfType::Define");
  sub_20C1BA13C((unint64_t **)v5);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p, (char **)v5, 0);
  if (v4 < 0)
    operator delete(__p[0]);
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_20C530068(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  uint64_t v16;

  if (a14 < 0)
    operator delete(__p);
  if (a15)
    operator delete(a15);
  sub_20BEB24F4(v16 - 32);
  _Unwind_Resume(a1);
}

uint64_t sub_20C5300B4(uint64_t *a1)
{
  _QWORD *v2;
  char *v3;
  uint64_t result;
  _QWORD *v5;

  v2 = operator new(8uLL);
  *v2 = &unk_24C53BE50;
  v5 = v2;
  pxrInternal__aapl__pxrReserved__::TfType::SetFactory(a1, (uint64_t *)&v5, v3);
  result = (uint64_t)v5;
  v5 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_20C530118(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_20C530144(pxrInternal__aapl__pxrReserved__::Sdf_FileFormatFactoryBase *a1)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::Sdf_FileFormatFactoryBase::~Sdf_FileFormatFactoryBase(a1);
  operator delete(v1);
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **sub_20C530158@<X0>(pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat **a1@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat *v2;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v4;

  v2 = (pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat *)operator new(0x70uLL);
  pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::UsdUsdcFileFormat(v2);
  *a1 = v2;
  v4 = 0;
  return sub_20C5301B0(&v4);
}

void sub_20C53019C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **sub_20C5301B0(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **a1)
{
  sub_20BF1D8F4((int)a1, *a1);
  return a1;
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **sub_20C5301DC(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **a1)
{
  sub_20BF1D8F4((int)a1, *a1);
  return a1;
}

void pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens_StaticTokenType::~UsdUsdzFileFormatTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens_StaticTokenType *this)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  void **v10;

  v10 = (void **)((char *)this + 24);
  sub_20BEEB2B8(&v10);
  v2 = *((_QWORD *)this + 2);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *((_QWORD *)this + 1);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  if ((*(_QWORD *)this & 7) != 0)
  {
    v8 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens_StaticTokenType::UsdUsdzFileFormatTokens_StaticTokenType(unsigned int **this)
{
  unsigned int **v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int *v15;
  unsigned int v16;
  unsigned int **v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int *v23;
  unsigned int *v24;
  unsigned int *v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v2 = (unsigned int **)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "usdz", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2, "1.0", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this + 2, "usd", 0);
  v3 = *this;
  v23 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v23 = v4;
  }
  v6 = *v2;
  v24 = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      v24 = v7;
  }
  v9 = this[2];
  v25 = v9;
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 2, v10));
    if ((v11 & 1) == 0)
      v25 = v10;
  }
  this[3] = 0;
  this[4] = 0;
  this[5] = 0;
  v12 = (unsigned int *)operator new(0x18uLL);
  v13 = 0;
  this[3] = v12;
  this[4] = v12;
  this[5] = v12 + 6;
  do
  {
    v14 = (&v23)[v13];
    *(_QWORD *)v12 = v14;
    if ((v14 & 7) != 0)
    {
      v15 = (unsigned int *)((unint64_t)v14 & 0xFFFFFFFFFFFFFFF8);
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 2, v15));
      if ((v16 & 1) == 0)
        *(_QWORD *)v12 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v13;
    v12 += 2;
  }
  while (v13 != 3);
  v17 = (unsigned int **)&v26;
  this[4] = v12;
  do
  {
    v19 = (uint64_t)*--v17;
    v18 = v19;
    if ((v19 & 7) != 0)
    {
      v20 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stlxr(v21 - 2, v20));
    }
  }
  while (v17 != &v23);
  return (pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens_StaticTokenType *)this;
}

void sub_20C53046C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int *v23;
  unsigned int v24;
  unsigned int *v25;
  unsigned int v26;
  unsigned int *v27;
  unsigned int v28;

  sub_20BEEB2B8(&a9);
  v18 = &a14;
  while (1)
  {
    v20 = *--v18;
    v19 = v20;
    if ((v20 & 7) != 0)
    {
      v21 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    if (v18 == (uint64_t *)&a11)
    {
      if ((*v16 & 7) != 0)
      {
        v23 = (unsigned int *)(*v16 & 0xFFFFFFFFFFFFFFF8);
        do
          v24 = __ldxr(v23);
        while (__stlxr(v24 - 2, v23));
      }
      if ((*v15 & 7) != 0)
      {
        v25 = (unsigned int *)(*v15 & 0xFFFFFFFFFFFFFFF8);
        do
          v26 = __ldxr(v25);
        while (__stlxr(v26 - 2, v25));
      }
      if ((*v14 & 7) != 0)
      {
        v27 = (unsigned int *)(*v14 & 0xFFFFFFFFFFFFFFF8);
        do
          v28 = __ldxr(v27);
        while (__stlxr(v28 - 2, v27));
      }
      _Unwind_Resume(a1);
    }
  }
}

uint64_t sub_20C530524()
{
  uint64_t *v0;

  v0 = sub_20C530FB4();
  return sub_20C5310D4(v0);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat::UsdUsdzFileFormat(pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat *this)
{
  uint64_t *v2;
  unsigned int **v3;
  unsigned int **v4;
  pxrInternal__aapl__pxrReserved__::TfToken *v5;
  uint64_t *EmptyString;
  uint64_t result;

  v2 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens);
  if (!v2)
    v2 = (uint64_t *)sub_20C5311FC(&pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens);
  v3 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens);
  if (!v3)
    v3 = sub_20C5311FC(&pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens);
  v4 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens);
  if (!v4)
    v4 = sub_20C5311FC(&pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens);
  v5 = (pxrInternal__aapl__pxrReserved__::TfToken *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens);
  if (!v5)
    v5 = (pxrInternal__aapl__pxrReserved__::TfToken *)sub_20C5311FC(&pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens);
  if ((*(_QWORD *)v5 & 0xFFFFFFFFFFFFFFF8) != 0)
    EmptyString = (uint64_t *)((*(_QWORD *)v5 & 0xFFFFFFFFFFFFFFF8) + 16);
  else
    EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v5);
  result = pxrInternal__aapl__pxrReserved__::SdfFileFormat::SdfFileFormat((uint64_t)this, v2, (uint64_t *)v3 + 1, (uint64_t *)v4 + 2, (uint64_t)EmptyString);
  *(_QWORD *)this = off_24C53BE90;
  return result;
}

void pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat::~UsdUsdzFileFormat(pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat *this)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::SdfFileFormat::~SdfFileFormat(this);
  operator delete(v1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat::IsPackage(pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat *this)
{
  return 1;
}

void pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat::GetPackageRootLayerPath(pxrInternal__aapl__pxrReserved__::Usd_UsdzResolverCache *a1@<X1>, _QWORD *a2@<X8>)
{
  sub_20C530644(a1, a2);
}

void sub_20C530644(pxrInternal__aapl__pxrReserved__::Usd_UsdzResolverCache *a1@<X0>, _QWORD *a2@<X8>)
{
  unint64_t *Instance;
  unint64_t *v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *v10;
  void *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];

  Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::Usd_UsdzResolverCache::GetInstance(a1);
  pxrInternal__aapl__pxrReserved__::Usd_UsdzResolverCache::FindOrOpenZipFile(Instance, (__int128 *)a1, &v11);
  v15[0] = v13;
  v15[1] = v14;
  if (v14)
  {
    v5 = (unint64_t *)(v14 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  pxrInternal__aapl__pxrReserved__::UsdZipFile::~UsdZipFile((pxrInternal__aapl__pxrReserved__::UsdZipFile *)&v13);
  v7 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v15[0])
  {
    pxrInternal__aapl__pxrReserved__::UsdZipFile::begin((pxrInternal__aapl__pxrReserved__::UsdZipFile *)v15, &v11);
    pxrInternal__aapl__pxrReserved__::UsdZipFile::end(&v10);
    if (pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::operator==((_QWORD **)&v11, (_QWORD **)&v10))
    {
      *a2 = 0;
      a2[1] = 0;
      a2[2] = 0;
    }
    else
    {
      pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::operator*(&v11, a2);
    }
    pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::~Iterator(&v10);
    pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::~Iterator(&v11);
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  pxrInternal__aapl__pxrReserved__::UsdZipFile::~UsdZipFile((pxrInternal__aapl__pxrReserved__::UsdZipFile *)v15);
}

void sub_20C530754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  void *v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, void *);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::~Iterator((void **)va);
  pxrInternal__aapl__pxrReserved__::UsdZipFile::~UsdZipFile((pxrInternal__aapl__pxrReserved__::UsdZipFile *)va1);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat::CanRead(uint64_t a1, pxrInternal__aapl__pxrReserved__::Usd_UsdzResolverCache *a2)
{
  unint64_t v3;
  uint64_t (*v4)(uint64_t *);
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int v11;
  std::string __p;
  uint64_t v14;
  uint64_t v15;
  void *v16[2];
  unsigned __int8 v17;

  sub_20C530644(a2, v16);
  v3 = v17;
  if ((v17 & 0x80u) != 0)
    v3 = (unint64_t)v16[1];
  if (v3)
  {
    memset(&__p, 0, sizeof(__p));
    pxrInternal__aapl__pxrReserved__::SdfFileFormat::FindByExtension((uint64_t)v16, (uint64_t)&__p, &v14);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    v4 = sub_20C0E9DAC(&v14);
    if (v5 & 1 | (unint64_t)v4)
    {
      pxrInternal__aapl__pxrReserved__::ArJoinPackageRelativePath((uint64_t)a2, (uint64_t)v16, &__p);
      v6 = sub_20BFCF6F4(&v14);
      v7 = (*(uint64_t (**)(uint64_t, std::string *))(*(_QWORD *)v6 + 48))(v6, &__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
    }
    else
    {
      v7 = 0;
    }
    v8 = v15;
    if (v15)
    {
      v9 = (unsigned int *)(v15 + 8);
      do
      {
        v10 = __ldxr(v9);
        v11 = v10 - 1;
      }
      while (__stlxr(v11, v9));
      if (!v11)
        (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
    }
    if ((v17 & 0x80) != 0)
      goto LABEL_18;
  }
  else
  {
    v7 = 0;
    if ((v17 & 0x80) != 0)
LABEL_18:
      operator delete(v16[0]);
  }
  return v7;
}

void sub_20C5308A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, unsigned int *a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  unsigned int *v23;
  unsigned int v24;
  unsigned int v25;

  if (a16)
  {
    v23 = a16 + 2;
    do
    {
      v24 = __ldxr(v23);
      v25 = v24 - 1;
    }
    while (__stlxr(v25, v23));
    if (!v25)
      (*(void (**)(unsigned int *))(*(_QWORD *)a16 + 8))(a16);
  }
  if (a22 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C530920(uint64_t a1, uint64_t a2, pxrInternal__aapl__pxrReserved__::Usd_UsdzResolverCache *a3, uint64_t a4)
{
  unint64_t v7;
  uint64_t (*v8)(uint64_t *);
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  std::string __p;
  uint64_t v18;
  uint64_t v19;
  void *v20[2];
  unsigned __int8 v21;
  _BYTE v22[16];
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  pxrInternal__aapl__pxrReserved__::ArResolverScopedCache::ArResolverScopedCache((pxrInternal__aapl__pxrReserved__::ArResolverScopedCache *)v22);
  sub_20C530644(a3, v20);
  v7 = v21;
  if ((v21 & 0x80u) != 0)
    v7 = (unint64_t)v20[1];
  if (v7)
  {
    memset(&__p, 0, sizeof(__p));
    pxrInternal__aapl__pxrReserved__::SdfFileFormat::FindByExtension((uint64_t)v20, (uint64_t)&__p, &v18);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    v8 = sub_20C0E9DAC(&v18);
    if (v9 & 1 | (unint64_t)v8)
    {
      pxrInternal__aapl__pxrReserved__::ArJoinPackageRelativePath((uint64_t)a3, (uint64_t)v20, &__p);
      v10 = sub_20BFCF6F4(&v18);
      v11 = (*(uint64_t (**)(uint64_t, uint64_t, std::string *, uint64_t))(*(_QWORD *)v10 + 56))(v10, a2, &__p, a4);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
    }
    else
    {
      v11 = 0;
    }
    v12 = v19;
    if (v19)
    {
      v13 = (unsigned int *)(v19 + 8);
      do
      {
        v14 = __ldxr(v13);
        v15 = v14 - 1;
      }
      while (__stlxr(v15, v13));
      if (!v15)
        (*(void (**)(uint64_t))(*(_QWORD *)v12 + 8))(v12);
    }
    if ((v21 & 0x80) != 0)
      goto LABEL_18;
  }
  else
  {
    v11 = 0;
    if ((v21 & 0x80) != 0)
LABEL_18:
      operator delete(v20[0]);
  }
  pxrInternal__aapl__pxrReserved__::ArResolverScopedCache::~ArResolverScopedCache((pxrInternal__aapl__pxrReserved__::ArResolverScopedCache *)v22);
  return v11;
}

void sub_20C530A88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, unsigned int *a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  uint64_t v23;
  unsigned int *v25;
  unsigned int v26;
  unsigned int v27;

  if (a17)
  {
    v25 = a17 + 2;
    do
    {
      v26 = __ldxr(v25);
      v27 = v26 - 1;
    }
    while (__stlxr(v27, v25));
    if (!v27)
      (*(void (**)(unsigned int *))(*(_QWORD *)a17 + 8))(a17);
  }
  if (a23 < 0)
    operator delete(__p);
  pxrInternal__aapl__pxrReserved__::ArResolverScopedCache::~ArResolverScopedCache((pxrInternal__aapl__pxrReserved__::ArResolverScopedCache *)(v23 - 56));
  _Unwind_Resume(a1);
}

uint64_t sub_20C530B20(uint64_t a1, pxrInternal__aapl__pxrReserved__::SdfLayer *a2, pxrInternal__aapl__pxrReserved__::Usd_UsdzResolverCache *a3)
{
  unint64_t v5;
  uint64_t (*v6)(uint64_t *);
  char v7;
  uint64_t v8;
  uint64_t Detached;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  unsigned int v13;
  std::string __p;
  uint64_t v16;
  uint64_t v17;
  void *v18[2];
  unsigned __int8 v19;
  _BYTE v20[16];
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  pxrInternal__aapl__pxrReserved__::ArResolverScopedCache::ArResolverScopedCache((pxrInternal__aapl__pxrReserved__::ArResolverScopedCache *)v20);
  sub_20C530644(a3, v18);
  v5 = v19;
  if ((v19 & 0x80u) != 0)
    v5 = (unint64_t)v18[1];
  if (v5)
  {
    memset(&__p, 0, sizeof(__p));
    pxrInternal__aapl__pxrReserved__::SdfFileFormat::FindByExtension((uint64_t)v18, (uint64_t)&__p, &v16);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    v6 = sub_20C0E9DAC(&v16);
    if (v7 & 1 | (unint64_t)v6)
    {
      pxrInternal__aapl__pxrReserved__::ArJoinPackageRelativePath((uint64_t)a3, (uint64_t)v18, &__p);
      v8 = sub_20BFCF6F4(&v16);
      Detached = pxrInternal__aapl__pxrReserved__::SdfFileFormat::ReadDetached(v8, a2, (unsigned __int8 *)&__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
    }
    else
    {
      Detached = 0;
    }
    v10 = v17;
    if (v17)
    {
      v11 = (unsigned int *)(v17 + 8);
      do
      {
        v12 = __ldxr(v11);
        v13 = v12 - 1;
      }
      while (__stlxr(v13, v11));
      if (!v13)
        (*(void (**)(uint64_t))(*(_QWORD *)v10 + 8))(v10);
    }
    if ((v19 & 0x80) != 0)
      goto LABEL_18;
  }
  else
  {
    Detached = 0;
    if ((v19 & 0x80) != 0)
LABEL_18:
      operator delete(v18[0]);
  }
  pxrInternal__aapl__pxrReserved__::ArResolverScopedCache::~ArResolverScopedCache((pxrInternal__aapl__pxrReserved__::ArResolverScopedCache *)v20);
  return Detached;
}

void sub_20C530C80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, unsigned int *a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  uint64_t v23;
  unsigned int *v25;
  unsigned int v26;
  unsigned int v27;

  if (a17)
  {
    v25 = a17 + 2;
    do
    {
      v26 = __ldxr(v25);
      v27 = v26 - 1;
    }
    while (__stlxr(v27, v25));
    if (!v27)
      (*(void (**)(unsigned int *))(*(_QWORD *)a17 + 8))(a17);
  }
  if (a23 < 0)
    operator delete(__p);
  pxrInternal__aapl__pxrReserved__::ArResolverScopedCache::~ArResolverScopedCache((pxrInternal__aapl__pxrReserved__::ArResolverScopedCache *)(v23 - 56));
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat::WriteToFile()
{
  _QWORD v1[4];
  char v2;

  v1[0] = "usd/usdzFileFormat.cpp";
  v1[1] = "WriteToFile";
  v1[2] = 188;
  v1[3] = "virtual BOOL pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat::WriteToFile(const SdfLayer &, const std::str"
          "ing &, const std::string &, const FileFormatArguments &) const";
  v2 = 0;
  pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v1, 1, (pxrInternal__aapl__pxrReserved__ *)"Writing usdz layers is not allowed via this API.");
  return 0;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat::ReadFromString(uint64_t a1, uint64_t a2, uint64_t a3)
{
  pxrInternal__aapl__pxrReserved__::SdfFileFormat *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v13;
  uint64_t v14;

  v5 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  if (!v5)
    v5 = sub_20C27EB9C(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  pxrInternal__aapl__pxrReserved__::SdfFileFormat::FindById(v5, &v13);
  v6 = sub_20BFCF6F4(&v13);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v6 + 72))(v6, a2, a3);
  v8 = v14;
  if (v14)
  {
    v9 = (unsigned int *)(v14 + 8);
    do
    {
      v10 = __ldxr(v9);
      v11 = v10 - 1;
    }
    while (__stlxr(v11, v9));
    if (!v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
  }
  return v7;
}

void sub_20C530E0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    sub_20C96B340(a10);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat::WriteToString(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  pxrInternal__aapl__pxrReserved__::SdfFileFormat *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v15;
  uint64_t v16;

  v7 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  if (!v7)
    v7 = sub_20C27EB9C(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  pxrInternal__aapl__pxrReserved__::SdfFileFormat::FindById(v7, &v15);
  v8 = sub_20BFCF6F4(&v15);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v8 + 88))(v8, a2, a3, a4);
  v10 = v16;
  if (v16)
  {
    v11 = (unsigned int *)(v16 + 8);
    do
    {
      v12 = __ldxr(v11);
      v13 = v12 - 1;
    }
    while (__stlxr(v13, v11));
    if (!v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v10 + 8))(v10);
  }
  return v9;
}

void sub_20C530ED4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    sub_20C96B340(a10);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat::WriteToStream(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  pxrInternal__aapl__pxrReserved__::SdfFileFormat *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v15;
  uint64_t v16;

  v7 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  if (!v7)
    v7 = sub_20C27EB9C(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  pxrInternal__aapl__pxrReserved__::SdfFileFormat::FindById(v7, &v15);
  v8 = sub_20BFCF6F4(&v15);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v8 + 80))(v8, a2, a3, a4);
  v10 = v16;
  if (v16)
  {
    v11 = (unsigned int *)(v16 + 8);
    do
    {
      v12 = __ldxr(v11);
      v13 = v12 - 1;
    }
    while (__stlxr(v13, v11));
    if (!v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v10 + 8))(v10);
  }
  return v9;
}

void sub_20C530F9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    sub_20C96B340(a10);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_20C530FB4()
{
  uint64_t *v0;
  void *__p[2];
  char v4;
  void *v5[3];
  uint64_t v6;
  int v7;

  sub_20BEB59B0((uint64_t)&v6, (uint64_t)"Tf", (uint64_t)"TfType::Define");
  sub_20C1BA13C((unint64_t **)v5);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p, (char **)v5, 0);
  if (v4 < 0)
    operator delete(__p[0]);
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_20C531088(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  uint64_t v16;

  if (a14 < 0)
    operator delete(__p);
  if (a15)
    operator delete(a15);
  sub_20BEB24F4(v16 - 32);
  _Unwind_Resume(a1);
}

uint64_t sub_20C5310D4(uint64_t *a1)
{
  _QWORD *v2;
  char *v3;
  uint64_t result;
  _QWORD *v5;

  v2 = operator new(8uLL);
  *v2 = &unk_24C53BF48;
  v5 = v2;
  pxrInternal__aapl__pxrReserved__::TfType::SetFactory(a1, (uint64_t *)&v5, v3);
  result = (uint64_t)v5;
  v5 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_20C531138(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_20C531164(pxrInternal__aapl__pxrReserved__::Sdf_FileFormatFactoryBase *a1)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::Sdf_FileFormatFactoryBase::~Sdf_FileFormatFactoryBase(a1);
  operator delete(v1);
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **sub_20C531178@<X0>(pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat **a1@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat *v2;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v4;

  v2 = (pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat *)operator new(0x70uLL);
  pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat::UsdUsdzFileFormat(v2);
  *a1 = v2;
  v4 = 0;
  return sub_20C5311D0(&v4);
}

void sub_20C5311BC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **sub_20C5311D0(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **a1)
{
  sub_20BF1D8F4((int)a1, *a1);
  return a1;
}

unsigned int **sub_20C5311FC(unint64_t *a1)
{
  unsigned int **result;
  void *v4;

  result = sub_20C531244();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens_StaticTokenType::~UsdUsdzFileFormatTokens_StaticTokenType((pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens_StaticTokenType *)result);
    operator delete(v4);
  }
  return (unsigned int **)atomic_load(a1);
}

unsigned int **sub_20C531244()
{
  unsigned int **v0;

  v0 = (unsigned int **)operator new(0x30uLL);
  pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens_StaticTokenType::UsdUsdzFileFormatTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C531270(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdVariantSet::AddVariant(pxrInternal__aapl__pxrReserved__::UsdVariantSet *a1, __int128 *a2, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a3)
{
  int v3;
  void *v5;
  int IsDormant;
  uint64_t **v7;
  uint64_t Size;
  uint64_t v9;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v10;
  unint64_t v11;
  size_t v12;
  uint64_t v13;
  int v14;
  unsigned __int8 *v15;
  unsigned __int8 *v16;
  unsigned __int8 *v17;
  int v18;
  int v19;
  void *v21;
  int v22;
  void *v23;
  void *v24;
  void *__p;
  size_t __n;
  unsigned __int8 v28;
  unsigned int *v29;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v30[10];
  unsigned int *v31;

  pxrInternal__aapl__pxrReserved__::UsdVariantSet::_AddVariantSet(a1, a3, &v31);
  IsDormant = pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v31);
  if ((IsDormant & 1) != 0)
    goto LABEL_31;
  v7 = (uint64_t **)sub_20C0B3C54((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v31);
  pxrInternal__aapl__pxrReserved__::SdfVariantSetSpec::GetVariants(v7, (uint64_t)v30);
  pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantChildPolicy>::GetSize((uint64_t)v30);
  Size = pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantChildPolicy>::GetSize((uint64_t)v30);
  pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantChildPolicy>::GetSize((uint64_t)v30);
  if (!Size)
  {
LABEL_28:
    sub_20C18CB50((uint64_t)v30);
    pxrInternal__aapl__pxrReserved__::SdfVariantSpec::New((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v31, a2, v30);
    v3 = pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(v30) ^ 1;
    pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v24, (pxrInternal__aapl__pxrReserved__::SdfSpec *)v30);
    goto LABEL_31;
  }
  v9 = 0;
  while (1)
  {
    sub_20C18CBE8((uint64_t *)v30, v9, &v29);
    v10 = sub_20BFE8634((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v29);
    pxrInternal__aapl__pxrReserved__::SdfVariantSpec::GetName((pxrInternal__aapl__pxrReserved__::SdfVariantSpec *)v10, (uint64_t)&__p);
    v11 = v28;
    if ((v28 & 0x80u) == 0)
      v12 = v28;
    else
      v12 = __n;
    v13 = *((unsigned __int8 *)a2 + 23);
    v14 = (char)v13;
    if ((v13 & 0x80u) != 0)
      v13 = *((_QWORD *)a2 + 1);
    if (v12 != v13)
    {
      if ((v28 & 0x80) != 0)
        operator delete(__p);
      pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((void *)v11, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v29);
      goto LABEL_27;
    }
    if (v14 >= 0)
      v15 = (unsigned __int8 *)a2;
    else
      v15 = *(unsigned __int8 **)a2;
    if ((v28 & 0x80) != 0)
    {
      v21 = __p;
      v22 = memcmp(__p, v15, __n);
      operator delete(v21);
      pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v23, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v29);
      if (!v22)
        goto LABEL_30;
      goto LABEL_27;
    }
    if (!v28)
      break;
    v16 = 0;
    v17 = (unsigned __int8 *)(v28 - 1);
    do
    {
      v18 = *((unsigned __int8 *)&__p + (_QWORD)v16);
      v19 = v16[(_QWORD)v15];
    }
    while (v18 == v19 && v17 != v16++);
    pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v17, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v29);
    if (v18 == v19)
      goto LABEL_30;
LABEL_27:
    if (++v9 == Size)
      goto LABEL_28;
  }
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(0, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v29);
LABEL_30:
  sub_20C18CB50((uint64_t)v30);
  v3 = 1;
LABEL_31:
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v5, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v31);
  return (IsDormant ^ 1) & v3;
}

void sub_20C531448(_Unwind_Exception *a1@<X0>, void *a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  void *v9;
  va_list va;

  va_start(va, a7);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(a2, (pxrInternal__aapl__pxrReserved__::SdfSpec *)va);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v9, (pxrInternal__aapl__pxrReserved__::SdfSpec *)(v7 - 72));
  _Unwind_Resume(a1);
}

void *pxrInternal__aapl__pxrReserved__::UsdVariantSet::_AddVariantSet@<X0>(pxrInternal__aapl__pxrReserved__::UsdVariantSet *a1@<X0>, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2@<X1>, unsigned int **a3@<X8>)
{
  int v3;
  void *v6;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v7;
  unsigned __int8 **v8;
  uint64_t **v9;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v10;
  const std::type_info *v11;
  void *v12;
  unsigned int **v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int **v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  uint64_t v21;
  unsigned int *v22;
  unsigned int v23;
  unsigned int v24;
  std::__shared_weak_count_vtbl *v26;
  std::__shared_weak_count *v27;
  unsigned int *v28;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v29;
  void *__p;
  uint64_t v31;
  uint64_t v32;
  int v33;
  int v34;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v35;
  unsigned int *v36;

  v3 = (int)a2;
  *a3 = 0;
  pxrInternal__aapl__pxrReserved__::UsdVariantSet::_CreatePrimSpecForEditing(a1, a2, &v35);
  if ((pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(&v35) & 1) == 0)
  {
    v7 = sub_20C0B0CA4(&v35);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v7, &v36);
    v8 = (unsigned __int8 **)((char *)a1 + 32);
    __p = 0;
    v31 = 0;
    v32 = 0;
    pxrInternal__aapl__pxrReserved__::SdfPath::AppendVariantSelection(&v36, (uint64_t)v8, (uint64_t)&__p, &v33);
    if (SHIBYTE(v32) < 0)
      operator delete(__p);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v36 + 1);
    sub_20BFD265C(&v36);
    if (pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v33))
    {
      v9 = (uint64_t **)sub_20C0B0CA4(&v35);
      pxrInternal__aapl__pxrReserved__::SdfSpec::GetLayer(v9, (uint64_t *)&__p);
      v10 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650((uint64_t *)&__p);
      pxrInternal__aapl__pxrReserved__::SdfLayer::GetObjectAtPath(v10, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v33, &v29);
      if ((pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(&v29) & 1) != 0)
      {
        pxrInternal__aapl__pxrReserved__::SdfVariantSetSpec::New(&v35, (uint64_t)v8, (void **)&v36);
        pxrInternal__aapl__pxrReserved__::SdfSpec::operator=(a3, &v36);
        v13 = &v36;
      }
      else
      {
        if (pxrInternal__aapl__pxrReserved__::Sdf_CanCastToType(&v29, (const pxrInternal__aapl__pxrReserved__::SdfSpec *)&stru_24C527C98, v11))
        {
          v14 = (unsigned int *)v29;
          v36 = (unsigned int *)v29;
          if (v29)
          {
            do
              v15 = __ldaxr(v14);
            while (__stlxr(v15 + 1, v14));
            v14 = v36;
            v28 = v36;
            if (v36)
            {
              do
                v16 = __ldaxr(v14);
              while (__stlxr(v16 + 1, v14));
            }
          }
          else
          {
            v28 = 0;
          }
          pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v14, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v36);
        }
        else
        {
          v28 = 0;
        }
        pxrInternal__aapl__pxrReserved__::SdfSpec::operator=(a3, &v28);
        v13 = &v28;
      }
      pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v12, (pxrInternal__aapl__pxrReserved__::SdfSpec *)v13);
      pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)&v29);
      v17 = (unsigned int **)sub_20C0B0CA4(&v35);
      pxrInternal__aapl__pxrReserved__::SdfPrimSpec::GetVariantSetNameList(v17, &v26);
      sub_20C532404(&v26, v8, v3);
      v18 = v27;
      if (v27)
      {
        p_shared_owners = (unint64_t *)&v27->__shared_owners_;
        do
          v20 = __ldaxr(p_shared_owners);
        while (__stlxr(v20 - 1, p_shared_owners));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
      }
      v21 = v31;
      if (v31)
      {
        v22 = (unsigned int *)(v31 + 8);
        do
        {
          v23 = __ldxr(v22);
          v24 = v23 - 1;
        }
        while (__stlxr(v24, v22));
        if (!v24)
          (*(void (**)(uint64_t))(*(_QWORD *)v21 + 8))(v21);
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v34);
    }
    else
    {
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v34);
    }
    sub_20BFD265C(&v33);
  }
  return pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v6, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v35);
}

void sub_20C5316CC(_Unwind_Exception *a1@<X0>, void *a2@<X8>, uint64_t a3, uint64_t a4, char a5, int a6, __int16 a7, char a8, char a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, int a16)
{
  pxrInternal__aapl__pxrReserved__::SdfSpec *v16;
  uint64_t v17;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int v22;
  void *v23;
  void *v24;

  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(a2, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&a5);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)&a7);
  v19 = a11;
  if (a11)
  {
    v20 = (unsigned int *)(a11 + 8);
    do
    {
      v21 = __ldxr(v20);
      v22 = v21 - 1;
    }
    while (__stlxr(v22, v20));
    if (!v22)
      (*(void (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
  }
  sub_20BFD1A18(&a16);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v23, (pxrInternal__aapl__pxrReserved__::SdfSpec *)(v17 - 48));
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v24, v16);
  _Unwind_Resume(a1);
}

void sub_20C5317A4()
{
  JUMPOUT(0x20C531794);
}

void pxrInternal__aapl__pxrReserved__::UsdVariantSet::GetVariantNames(pxrInternal__aapl__pxrReserved__::UsdVariantSet *this@<X0>, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  _QWORD *v10;
  uint64_t v11;
  pxrInternal__aapl__pxrReserved__::SdfPath *Path;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t *LayerStack;
  _DWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  char **v26;
  char *v27[2];

  v27[0] = 0;
  v27[1] = 0;
  v26 = v27;
  v5 = (uint64_t *)sub_20C368FF0((uint64_t)this, a2);
  pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetNodeRange(v5, 6u, (uint64_t *)&v18);
  v25 = v19;
  v24 = v18;
  v20 = v19;
  v21 = v19;
  v22 = v18;
  v23 = v18;
  v8 = (char *)this + 32;
  while ((_QWORD)v21 != (_QWORD)v23 || *((_QWORD *)&v21 + 1) != *((_QWORD *)&v23 + 1))
  {
    v10 = sub_20C444D70(&v20, v6, v7);
    v11 = v10[3] - 1;
    *(_QWORD *)&v18 = v10[2];
    *((_QWORD *)&v18 + 1) = v11;
    Path = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v18);
    if (pxrInternal__aapl__pxrReserved__::SdfPath::IsPrimOrPrimVariantSelectionPath(Path))
    {
      *(_QWORD *)&v18 = sub_20C45A2E0(&v20, v13, v14);
      *((_QWORD *)&v18 + 1) = v15;
      LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v18);
      v17 = (_DWORD *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v18);
      pxrInternal__aapl__pxrReserved__::PcpComposeSiteVariantSetOptions(LayerStack, v17, (uint64_t)v8, (uint64_t **)&v26);
    }
    sub_20C444E44(&v20);
  }
  sub_20C222C00(a3, v26, v27);
  sub_20BDECAB8((uint64_t)&v26, v27[0]);
}

void sub_20C5318BC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BDECAB8(v1 - 56, *(char **)(v1 - 48));
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdVariantSet::HasAuthoredVariant(pxrInternal__aapl__pxrReserved__::UsdVariantSet *a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2)
{
  uint64_t v3;
  _BOOL8 v4;
  uint64_t v6;
  uint64_t v7;
  void **v8;

  pxrInternal__aapl__pxrReserved__::UsdVariantSet::GetVariantNames(a1, a2, &v6);
  v3 = sub_20C020210(v6, v7, (unsigned __int8 **)a2);
  v4 = v3 != v7;
  v8 = (void **)&v6;
  sub_20BDE5038(&v8);
  return v4;
}

void pxrInternal__aapl__pxrReserved__::UsdVariantSet::GetVariantSelection(pxrInternal__aapl__pxrReserved__::UsdVariantSet *this@<X0>, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v5;
  void *v6;
  size_t v7;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  uint64_t *v9;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v11;
  uint64_t v12;
  char v13;
  size_t v14;
  uint64_t v15;
  int v16;
  void **p_s1;
  uint64_t *v18;
  _QWORD v20[2];
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v21;
  int v22;
  int v23;
  void *__s1;
  size_t __n;
  void *v26;
  __int128 __p;
  uint64_t v28;

  v5 = (uint64_t *)sub_20C368FF0((uint64_t)this, a2);
  pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetNodeRange(v5, 6u, (uint64_t *)&__s1);
  v6 = __s1;
  v7 = __n;
  v9 = (uint64_t *)sub_20C368FF0((uint64_t)this, v8);
  pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetNodeRange(v9, 6u, (uint64_t *)&__s1);
  if (v6 == v26 && v7 == (_QWORD)__p)
  {
LABEL_32:
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
    return;
  }
  while (1)
  {
    __s1 = v6;
    __n = v7;
    if (pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetArcType((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&__s1) != 2)
      goto LABEL_24;
    v20[0] = v6;
    v20[1] = v7;
    pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetSite((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v20, (uint64_t)&v21);
    pxrInternal__aapl__pxrReserved__::SdfPath::GetVariantSelection((pxrInternal__aapl__pxrReserved__::SdfPath *)&v22, (uint64_t)&__s1);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v23);
    sub_20BFD265C(&v22);
    sub_20C2012CC(&v21);
    v12 = HIBYTE(v26);
    v13 = HIBYTE(v26);
    if (SHIBYTE(v26) >= 0)
      v14 = HIBYTE(v26);
    else
      v14 = __n;
    v15 = *((unsigned __int8 *)this + 55);
    v16 = (char)v15;
    if ((v15 & 0x80u) != 0)
      v15 = *((_QWORD *)this + 5);
    if (v14 == v15)
      break;
LABEL_22:
    if (SHIBYTE(v28) < 0)
    {
      operator delete((void *)__p);
      if ((HIBYTE(v26) & 0x80) != 0)
LABEL_31:
        operator delete(__s1);
    }
    else if (v13 < 0)
    {
      goto LABEL_31;
    }
LABEL_24:
    ++v7;
    v18 = (uint64_t *)sub_20C368FF0((uint64_t)this, v11);
    pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetNodeRange(v18, 6u, (uint64_t *)&__s1);
    if (v6 == v26 && v7 == (_QWORD)__p)
      goto LABEL_32;
  }
  if (v16 >= 0)
    v11 = (pxrInternal__aapl__pxrReserved__::UsdVariantSet *)((char *)this + 32);
  else
    v11 = (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)*((_QWORD *)this + 4);
  if ((SHIBYTE(v26) & 0x80000000) == 0)
  {
    if (!HIBYTE(v26))
      goto LABEL_33;
    p_s1 = &__s1;
    while (*(unsigned __int8 *)p_s1 == *(unsigned __int8 *)v11)
    {
      p_s1 = (void **)((char *)p_s1 + 1);
      v11 = (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)((char *)v11 + 1);
      if (!--v12)
        goto LABEL_33;
    }
    goto LABEL_22;
  }
  if (memcmp(__s1, v11, __n))
    goto LABEL_22;
LABEL_33:
  if (SHIBYTE(v28) < 0)
  {
    sub_20BDDBFAC((_BYTE *)a3, (void *)__p, *((unint64_t *)&__p + 1));
    if (SHIBYTE(v28) < 0)
      operator delete((void *)__p);
  }
  else
  {
    *(_OWORD *)a3 = __p;
    *(_QWORD *)(a3 + 16) = v28;
  }
  if (SHIBYTE(v26) < 0)
    operator delete(__s1);
}

void sub_20C531B40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20BE930F8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdVariantSet::HasAuthoredVariantSelection(uint64_t a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2)
{
  void **v3;
  uint64_t *v4;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  BOOL v9;
  uint64_t v10;
  uint64_t *LayerStack;
  pxrInternal__aapl__pxrReserved__::SdfPath *Path;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *__p[2];
  uint64_t v19;

  __p[0] = 0;
  __p[1] = 0;
  v19 = 0;
  if (a2)
    v3 = (void **)a2;
  else
    v3 = __p;
  v4 = (uint64_t *)sub_20C368FF0(a1, a2);
  pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetNodeRange(v4, 6u, &v14);
  v6 = v14;
  v7 = v15;
  do
  {
    v8 = (uint64_t *)sub_20C368FF0(a1, v5);
    pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetNodeRange(v8, 6u, &v14);
    v9 = v6 == v16 && v7 == v17;
    v10 = !v9;
    if (v9)
      break;
    v14 = v6;
    v15 = v7;
    LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v14);
    Path = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v14);
    ++v7;
  }
  while ((pxrInternal__aapl__pxrReserved__::PcpComposeSiteVariantSelection(LayerStack, Path, (const void **)(a1 + 32), (uint64_t)v3, 0, 0) & 1) == 0);
  if (SHIBYTE(v19) < 0)
    operator delete(__p[0]);
  return v10;
}

void sub_20C531C48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdVariantSet::SetVariantSelection(pxrInternal__aapl__pxrReserved__::UsdVariantSet *a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2)
{
  void *v4;
  int IsDormant;
  unsigned int **v6;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v8;

  pxrInternal__aapl__pxrReserved__::UsdVariantSet::_CreatePrimSpecForEditing(a1, a2, &v8);
  IsDormant = pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(&v8);
  if ((IsDormant & 1) == 0)
  {
    v6 = (unsigned int **)sub_20C0B0CA4(&v8);
    pxrInternal__aapl__pxrReserved__::SdfPrimSpec::SetVariantSelection(v6, (uint64_t)a1 + 32, (uint64_t)a2);
  }
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v4, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v8);
  return IsDormant ^ 1u;
}

void sub_20C531CD8(_Unwind_Exception *a1@<X0>, void *a2@<X8>, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(a2, (pxrInternal__aapl__pxrReserved__::SdfSpec *)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdVariantSet::_CreatePrimSpecForEditing@<X0>(pxrInternal__aapl__pxrReserved__::UsdVariantSet *this@<X0>, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2@<X1>, _QWORD *a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdStage *v5;
  uint64_t result;
  unsigned int *v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;

  pxrInternal__aapl__pxrReserved__::UsdObject::GetStage(this, a2, &v10);
  v5 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C348E08(&v10);
  pxrInternal__aapl__pxrReserved__::UsdStage::_CreatePrimSpecForEditing(v5, this, a3);
  result = v11;
  if (v11)
  {
    v7 = (unsigned int *)(v11 + 8);
    do
    {
      v8 = __ldxr(v7);
      v9 = v8 - 1;
    }
    while (__stlxr(v9, v7));
    if (!v9)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  return result;
}

void sub_20C531D5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    sub_20C96B0D8(a10);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdVariantSet::ClearVariantSelection(pxrInternal__aapl__pxrReserved__::UsdVariantSet *this)
{
  uint64_t v1;
  void *__p[2];
  uint64_t v4;

  __p[0] = 0;
  __p[1] = 0;
  v4 = 0;
  v1 = pxrInternal__aapl__pxrReserved__::UsdVariantSet::SetVariantSelection(this, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)__p);
  if (SHIBYTE(v4) < 0)
    operator delete(__p[0]);
  return v1;
}

void sub_20C531DBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdVariantSet::BlockVariantSelection(pxrInternal__aapl__pxrReserved__::UsdVariantSet *this, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2)
{
  void *v3;
  int IsDormant;
  unsigned int **v5;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v7;

  pxrInternal__aapl__pxrReserved__::UsdVariantSet::_CreatePrimSpecForEditing(this, a2, &v7);
  IsDormant = pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(&v7);
  if ((IsDormant & 1) == 0)
  {
    v5 = (unsigned int **)sub_20C0B0CA4(&v7);
    pxrInternal__aapl__pxrReserved__::SdfPrimSpec::BlockVariantSelection(v5, (uint64_t)this + 32);
  }
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v3, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v7);
  return IsDormant ^ 1u;
}

void sub_20C531E34(_Unwind_Exception *a1@<X0>, void *a2@<X8>, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(a2, (pxrInternal__aapl__pxrReserved__::SdfSpec *)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdVariantSet::GetVariantEditTarget@<X0>(uint64_t a1@<X0>, uint64_t *EditTarget@<X1>, uint64_t a3@<X8>)
{
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v6;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t *);
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v10;
  pxrInternal__aapl__pxrReserved__::UsdStage *v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  pxrInternal__aapl__pxrReserved__::UsdStage *v17;
  pxrInternal__aapl__pxrReserved__::UsdEditTarget *v18;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v19;
  uint64_t Identifier;
  const char *v21;
  pxrInternal__aapl__pxrReserved__::UsdStage *v22;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  unsigned int *v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  unsigned int *v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t result;
  unsigned int *v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  const char *v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  void *__dst[2];
  uint64_t v49;
  void *__p[2];
  uint64_t v51;
  __int128 v52;
  _BYTE v53[40];
  __int128 v54;
  uint64_t v55;

  v55 = *MEMORY[0x24BDAC8D0];
  pxrInternal__aapl__pxrReserved__::UsdEditTarget::UsdEditTarget((pxrInternal__aapl__pxrReserved__::UsdEditTarget *)&v52);
  pxrInternal__aapl__pxrReserved__::UsdVariantSet::GetVariantSelection((pxrInternal__aapl__pxrReserved__::UsdVariantSet *)a1, v6, (uint64_t)&v42);
  if (*(char *)(a1 + 55) < 0)
  {
    sub_20BDDBFAC(__dst, *(void **)(a1 + 32), *(_QWORD *)(a1 + 40));
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)(a1 + 32);
    v49 = *(_QWORD *)(a1 + 48);
  }
  *(_OWORD *)__p = v42;
  v51 = v43;
  v8 = *((_QWORD *)&v42 + 1);
  if (v43 >= 0)
    v8 = HIBYTE(v43);
  if (v8)
  {
    pxrInternal__aapl__pxrReserved__::UsdObject::GetStage((pxrInternal__aapl__pxrReserved__::UsdObject *)a1, v7, &v46);
    v9 = sub_20BFD2F78(EditTarget);
    if (!(v10 & 1 | (unint64_t)v9))
    {
      pxrInternal__aapl__pxrReserved__::UsdObject::GetStage((pxrInternal__aapl__pxrReserved__::UsdObject *)a1, v10, &v42);
      v11 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C348E08((uint64_t *)&v42);
      EditTarget = (uint64_t *)pxrInternal__aapl__pxrReserved__::UsdStage::GetEditTarget(v11);
      v12 = *((_QWORD *)&v42 + 1);
      if (*((_QWORD *)&v42 + 1))
      {
        v13 = (unsigned int *)(*((_QWORD *)&v42 + 1) + 8);
        do
        {
          v14 = __ldxr(v13);
          v15 = v14 - 1;
        }
        while (__stlxr(v15, v13));
        if (!v15)
          (*(void (**)(uint64_t))(*(_QWORD *)v12 + 8))(v12);
      }
    }
    v16 = sub_20C348E08(&v46);
    if (pxrInternal__aapl__pxrReserved__::UsdStage::HasLocalLayer(v16, EditTarget))
    {
      v17 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C348E08(&v46);
      v18 = (pxrInternal__aapl__pxrReserved__::UsdEditTarget *)pxrInternal__aapl__pxrReserved__::UsdStage::GetEditTarget(v17);
      sub_20C348EEC(a1, &v38);
      pxrInternal__aapl__pxrReserved__::UsdEditTarget::MapToSpecPath(v18, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v38, &v40);
      pxrInternal__aapl__pxrReserved__::SdfPath::AppendVariantSelection(&v40, (uint64_t)__dst, (uint64_t)__p, &v42);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v40 + 1);
      sub_20BFD265C(&v40);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v39);
      sub_20BFD265C(&v38);
      pxrInternal__aapl__pxrReserved__::UsdEditTarget::ForLocalDirectVariant((pxrInternal__aapl__pxrReserved__::SdfPath *)&v42, EditTarget, (pxrInternal__aapl__pxrReserved__::UsdEditTarget *)a3);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v42 + 1);
      sub_20BFD265C(&v42);
    }
    else
    {
      *(_QWORD *)&v42 = "usd/variantSets.cpp";
      *((_QWORD *)&v42 + 1) = "GetVariantEditTarget";
      v43 = 181;
      v44 = "UsdEditTarget pxrInternal__aapl__pxrReserved__::UsdVariantSet::GetVariantEditTarget(const SdfLayerHandle &) const";
      v45 = 0;
      v19 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(EditTarget);
      Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v19);
      if (*(char *)(Identifier + 23) >= 0)
        v21 = (const char *)Identifier;
      else
        v21 = *(const char **)Identifier;
      v22 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C348E08(&v46);
      pxrInternal__aapl__pxrReserved__::UsdStage::GetRootLayer(v22, &v40);
      v23 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(&v40);
      v24 = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v23);
      if (*(char *)(v24 + 23) >= 0)
        v25 = (const char *)v24;
      else
        v25 = *(const char **)v24;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v42, 1, (pxrInternal__aapl__pxrReserved__ *)"Layer %s is not a local layer of stage rooted at layer %s", v21, v25);
      v26 = v41;
      if (v41)
      {
        v27 = (unsigned int *)(v41 + 8);
        do
        {
          v28 = __ldxr(v27);
          v29 = v28 - 1;
        }
        while (__stlxr(v29, v27));
        if (!v29)
          (*(void (**)(uint64_t))(*(_QWORD *)v26 + 8))(v26);
      }
      *(_OWORD *)a3 = v52;
      v52 = 0uLL;
      sub_20C201ECC((_DWORD *)(a3 + 16), (uint64_t)v53);
      *(_OWORD *)(a3 + 56) = v54;
    }
    v30 = v47;
    if (v47)
    {
      v31 = (unsigned int *)(v47 + 8);
      do
      {
        v32 = __ldxr(v31);
        v33 = v32 - 1;
      }
      while (__stlxr(v33, v31));
      if (!v33)
        (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
    }
  }
  else
  {
    *(_OWORD *)a3 = v52;
    v52 = 0uLL;
    sub_20C201ECC((_DWORD *)(a3 + 16), (uint64_t)v53);
    *(_OWORD *)(a3 + 56) = v54;
  }
  if (SHIBYTE(v51) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v49) < 0)
    operator delete(__dst[0]);
  sub_20C2011B8((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)v53);
  result = *((_QWORD *)&v52 + 1);
  if (*((_QWORD *)&v52 + 1))
  {
    v35 = (unsigned int *)(*((_QWORD *)&v52 + 1) + 8);
    do
    {
      v36 = __ldxr(v35);
      v37 = v36 - 1;
    }
    while (__stlxr(v37, v35));
    if (!v37)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  return result;
}

void sub_20C5321B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,unsigned int *a26,char a27)
{
  uint64_t v27;
  unsigned int *v29;
  unsigned int v30;
  unsigned int v31;

  if (a26)
  {
    v29 = a26 + 2;
    do
    {
      v30 = __ldxr(v29);
      v31 = v30 - 1;
    }
    while (__stlxr(v31, v29));
    if (!v31)
      (*(void (**)(unsigned int *))(*(_QWORD *)a26 + 8))(a26);
  }
  sub_20BE930F8((uint64_t)&a27);
  sub_20C38B7B4(v27 - 128);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdVariantSet::GetVariantEditContext@<X0>(pxrInternal__aapl__pxrReserved__::UsdObject *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t result;
  unsigned int *v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[8];
  uint64_t v17;
  _QWORD v18[8];

  v18[7] = *MEMORY[0x24BDAC8D0];
  pxrInternal__aapl__pxrReserved__::UsdVariantSet::GetVariantEditTarget((uint64_t)a1, a2, (uint64_t)v16);
  pxrInternal__aapl__pxrReserved__::UsdObject::GetStage(a1, v5, &v14);
  sub_20C532E28(a3, (uint64_t)&v14, (uint64_t)v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unsigned int *)(v15 + 8);
    do
    {
      v8 = __ldxr(v7);
      v9 = v8 - 1;
    }
    while (__stlxr(v9, v7));
    if (!v9)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
  }
  sub_20C2011B8((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)v18);
  result = v17;
  if (v17)
  {
    v11 = (unsigned int *)(v17 + 8);
    do
    {
      v12 = __ldxr(v11);
      v13 = v12 - 1;
    }
    while (__stlxr(v13, v11));
    if (!v13)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  return result;
}

void sub_20C5323B4(_Unwind_Exception *a1, uint64_t a2, unsigned int *a3, ...)
{
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  va_list va;

  va_start(va, a3);
  if (a3)
  {
    v4 = a3 + 2;
    do
    {
      v5 = __ldxr(v4);
      v6 = v5 - 1;
    }
    while (__stlxr(v6, v4));
    if (!v6)
      (*(void (**)(unsigned int *))(*(_QWORD *)a3 + 8))(a3);
  }
  sub_20C38B7B4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20C532404(_QWORD *a1, unsigned __int8 **a2, int a3)
{
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  int v34;

  v32 = 0;
  v33 = 0;
  v34 = 0;
  switch(a3)
  {
    case 0:
      v6 = *a1;
      v5 = (std::__shared_weak_count *)a1[1];
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v8 = __ldxr(p_shared_owners);
        while (__stxr(v8 + 1, p_shared_owners));
      }
      v32 = v6;
      v9 = 1;
      goto LABEL_11;
    case 1:
      v10 = *a1;
      v5 = (std::__shared_weak_count *)a1[1];
      if (v5)
      {
        v11 = (unint64_t *)&v5->__shared_owners_;
        do
          v12 = __ldxr(v11);
        while (__stxr(v12 + 1, v11));
      }
      v9 = 0;
      v32 = v10;
LABEL_11:
      v13 = 4;
      goto LABEL_21;
    case 2:
      v14 = *a1;
      v5 = (std::__shared_weak_count *)a1[1];
      if (v5)
      {
        v15 = (unint64_t *)&v5->__shared_owners_;
        do
          v16 = __ldxr(v15);
        while (__stxr(v16 + 1, v15));
      }
      v32 = v14;
      v9 = 1;
      goto LABEL_20;
    case 3:
      v17 = *a1;
      v5 = (std::__shared_weak_count *)a1[1];
      if (v5)
      {
        v18 = (unint64_t *)&v5->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
      }
      v9 = 0;
      v32 = v17;
LABEL_20:
      v13 = 5;
LABEL_21:
      v33 = v5;
      v34 = v13;
      break;
    default:
      v9 = 0;
      break;
  }
  if (!sub_20BFE4690((uint64_t)a1)
    || (*(unsigned int (**)(_QWORD))(*(_QWORD *)*a1 + 16))(*a1))
  {
    v21 = *a1;
    v20 = (std::__shared_weak_count *)a1[1];
    if (v20)
    {
      v22 = (unint64_t *)&v20->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
    }
    v24 = v33;
    v32 = v21;
    v33 = v20;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
        std::__shared_weak_count::__release_weak(v24);
      }
    }
    v34 = 0;
  }
  if (sub_20BFE4704((uint64_t)&v32))
  {
    v27 = sub_20C18C7C4((uint64_t)&v32, a2);
    if (v27 != -1)
    {
      if ((v9 & 1) != 0)
        v28 = 0;
      else
        v28 = sub_20BFE4704((uint64_t)&v32) - 1;
      if (v27 == v28)
        goto LABEL_42;
      sub_20C18C808((unsigned int *)&v32, v27);
    }
    sub_20C532EB8((unsigned int *)&v32, v9 - 1, (__int128 *)a2);
  }
  else
  {
    sub_20C532EB8((unsigned int *)&v32, -1, (__int128 *)a2);
  }
LABEL_42:
  v29 = v33;
  if (v33)
  {
    v30 = (unint64_t *)&v33->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
}

void sub_20C53263C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdVariantSets::GetVariantSet(pxrInternal__aapl__pxrReserved__::UsdProperty *a1@<X0>, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2@<X1>, uint64_t a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::TfToken *v5;
  uint64_t *EmptyString;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  unsigned int v10;
  __int128 __p;
  uint64_t v12;
  unint64_t v13;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;

  if ((pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(a1, a2) & 1) != 0)
  {
    v5 = (pxrInternal__aapl__pxrReserved__::TfToken *)pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v13);
    if ((v13 & 0xFFFFFFFFFFFFFFF8) != 0)
      EmptyString = (uint64_t *)((v13 & 0xFFFFFFFFFFFFFFF8) + 16);
    else
      EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v5);
    pxrInternal__aapl__pxrReserved__::UsdPrim::GetVariantSet((uint64_t)a1, (__int128 *)EmptyString, a3);
    if ((v13 & 7) != 0)
    {
      v9 = (unsigned int *)(v13 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
  }
  else
  {
    v13 = (unint64_t)"usd/variantSets.cpp";
    v14 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"GetVariantSet";
    v15 = 237;
    v16 = (unint64_t)"UsdVariantSet pxrInternal__aapl__pxrReserved__::UsdVariantSets::GetVariantSet(const std::string &) const";
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v13, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid prim");
    LODWORD(v13) = 1;
    v14 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v15);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v15 + 1);
    v16 = 0;
    __p = 0uLL;
    v12 = 0;
    sub_20C3ADD0C(a3, (uint64_t)&v13, &__p);
    if (SHIBYTE(v12) < 0)
      operator delete((void *)__p);
    if ((v16 & 7) != 0)
    {
      v7 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stlxr(v8 - 2, v7));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v15 + 1);
    sub_20BFD265C(&v15);
    if (v14)
      sub_20C35C614(v14);
  }
}

void sub_20C5327C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15)
{
  if (a14 < 0)
    operator delete(__p);
  sub_20C35C2E0((uint64_t)&a15);
  _Unwind_Resume(a1);
}

void *pxrInternal__aapl__pxrReserved__::UsdVariantSets::AddVariantSet@<X0>(pxrInternal__aapl__pxrReserved__::UsdProperty *a1@<X0>, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2@<X1>, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a3@<X2>, pxrInternal__aapl__pxrReserved__::UsdVariantSet *a4@<X8>)
{
  void *v6;
  unsigned int *v8;

  pxrInternal__aapl__pxrReserved__::UsdVariantSets::GetVariantSet(a1, a2, (uint64_t)a4);
  pxrInternal__aapl__pxrReserved__::UsdVariantSet::_AddVariantSet(a4, a3, &v8);
  return pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v6, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v8);
}

void sub_20C532854(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C532868(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C532868(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  if (*(char *)(a1 + 55) < 0)
    operator delete(*(void **)(a1 + 32));
  v2 = *(_QWORD *)(a1 + 24);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_20BFD265C((_DWORD *)(a1 + 16));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

BOOL pxrInternal__aapl__pxrReserved__::UsdVariantSets::HasVariantSet(pxrInternal__aapl__pxrReserved__::UsdVariantSets *a1, unsigned __int8 **a2)
{
  uint64_t v3;
  _BOOL8 v4;
  uint64_t v6;
  uint64_t v7;
  void **v8;

  pxrInternal__aapl__pxrReserved__::UsdVariantSets::GetNames(a1, &v6);
  v3 = sub_20C020210(v6, v7, a2);
  v4 = v3 != v7;
  v8 = (void **)&v6;
  sub_20BDE5038(&v8);
  return v4;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdVariantSets::GetNames@<X0>(pxrInternal__aapl__pxrReserved__::UsdVariantSets *this@<X0>, _QWORD *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return pxrInternal__aapl__pxrReserved__::UsdVariantSets::GetNames((uint64_t)this, (uint64_t)a2);
}

void sub_20C532968(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BDE5038((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdVariantSets::GetNames(uint64_t a1, uint64_t a2)
{
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t i;
  uint64_t *LayerStack;
  pxrInternal__aapl__pxrReserved__::SdfPath *Path;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  __int128 v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void **v23;
  void **v24;
  __int128 v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char **v38;
  char *v39[2];
  void **v40[6];

  sub_20BDE5078((uint64_t *)a2);
  v39[0] = 0;
  v39[1] = 0;
  v37 = 0;
  v38 = v39;
  v35 = 0;
  v36 = 0;
  v5 = (uint64_t *)sub_20C368FF0(a1, v4);
  pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetNodeRange(v5, 6u, &v31);
  v6 = v32;
  v28 = v33;
  v29 = v31;
  v27 = v34;
  if (v31 != v33 || v32 != v34)
  {
    do
    {
      v30[0] = v29;
      v30[1] = v6;
      v8 = v35;
      for (i = v36; i != v8; i -= 24)
      {
        if (*(char *)(i - 1) < 0)
          operator delete(*(void **)(i - 24));
      }
      v36 = v8;
      LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v30);
      Path = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v30);
      pxrInternal__aapl__pxrReserved__::PcpComposeSiteVariantSets(LayerStack, Path, &v35);
      v12 = v35;
      v13 = v36;
      while (v12 != v13)
      {
        sub_20BE74FC0((uint64_t **)&v38, (const void **)v12, v12);
        if ((v14 & 1) != 0)
        {
          v15 = *(_QWORD *)(a2 + 8);
          v16 = *(_QWORD *)(a2 + 16);
          if (v15 >= v16)
          {
            v19 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v15 - *(_QWORD *)a2) >> 3);
            v20 = v19 + 1;
            if (v19 + 1 > 0xAAAAAAAAAAAAAAALL)
              sub_20BDDF694();
            v21 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v16 - *(_QWORD *)a2) >> 3);
            if (2 * v21 > v20)
              v20 = 2 * v21;
            if (v21 >= 0x555555555555555)
              v22 = 0xAAAAAAAAAAAAAAALL;
            else
              v22 = v20;
            v40[4] = (void **)(a2 + 16);
            if (v22)
              v23 = (void **)sub_20BDE4FF4(a2 + 16, v22);
            else
              v23 = 0;
            v24 = &v23[3 * v19];
            v40[0] = v23;
            v40[1] = v24;
            v40[3] = &v23[3 * v22];
            v25 = *(_OWORD *)v12;
            v24[2] = *(void **)(v12 + 16);
            *(_OWORD *)v24 = v25;
            *(_QWORD *)(v12 + 8) = 0;
            *(_QWORD *)(v12 + 16) = 0;
            *(_QWORD *)v12 = 0;
            v40[2] = v24 + 3;
            sub_20BDF34C0((uint64_t *)a2, v40);
            v18 = *(_QWORD *)(a2 + 8);
            sub_20BDF3648((uint64_t)v40);
          }
          else
          {
            v17 = *(_OWORD *)v12;
            *(_QWORD *)(v15 + 16) = *(_QWORD *)(v12 + 16);
            *(_OWORD *)v15 = v17;
            *(_QWORD *)(v12 + 8) = 0;
            *(_QWORD *)(v12 + 16) = 0;
            *(_QWORD *)v12 = 0;
            v18 = v15 + 24;
            *(_QWORD *)(a2 + 8) = v15 + 24;
          }
          *(_QWORD *)(a2 + 8) = v18;
        }
        v12 += 24;
      }
      ++v6;
    }
    while (v29 != v28 || v6 != v27);
  }
  v40[0] = (void **)&v35;
  sub_20BDE5038(v40);
  sub_20BDECAB8((uint64_t)&v38, v39[0]);
  return 1;
}

void sub_20C532BC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,char a22,char *a23)
{
  a13 = (void **)&a19;
  sub_20BDE5038(&a13);
  sub_20BDECAB8((uint64_t)&a22, a23);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdVariantSets::GetVariantSelection(pxrInternal__aapl__pxrReserved__::UsdProperty *a1@<X0>, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2@<X1>, uint64_t a3@<X8>)
{
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v4;
  unsigned int *v5;
  unsigned int v6;
  _BYTE v7[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  int v9;
  int v10;
  uint64_t v11;
  void *__p;
  char v13;

  pxrInternal__aapl__pxrReserved__::UsdVariantSets::GetVariantSet(a1, a2, (uint64_t)v7);
  pxrInternal__aapl__pxrReserved__::UsdVariantSet::GetVariantSelection((pxrInternal__aapl__pxrReserved__::UsdVariantSet *)v7, v4, a3);
  if (v13 < 0)
    operator delete(__p);
  if ((v11 & 7) != 0)
  {
    v5 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v10);
  sub_20BFD265C(&v9);
  if (v8)
    sub_20C35C614(v8);
}

void sub_20C532C98(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C532868((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdVariantSets::SetSelection(uint64_t a1, __int128 *a2, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a3)
{
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;
  _BYTE v8[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v9;
  int v10;
  int v11;
  uint64_t v12;
  void *__p;
  char v14;

  sub_20C3ADD0C((uint64_t)v8, a1, a2);
  v4 = pxrInternal__aapl__pxrReserved__::UsdVariantSet::SetVariantSelection((pxrInternal__aapl__pxrReserved__::UsdVariantSet *)v8, a3);
  if (v14 < 0)
    operator delete(__p);
  if ((v12 & 7) != 0)
  {
    v5 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v11);
  sub_20BFD265C(&v10);
  if (v9)
    sub_20C35C614(v9);
  return v4;
}

void sub_20C532D48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C532868((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdVariantSets::GetAllVariantSelections(pxrInternal__aapl__pxrReserved__::UsdVariantSets *this@<X0>, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t *LayerStack;
  pxrInternal__aapl__pxrReserved__::SdfPath *Path;
  _QWORD v13[2];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  a3[2] = 0;
  a3[1] = 0;
  *a3 = (uint64_t)(a3 + 1);
  v4 = (uint64_t *)sub_20C368FF0((uint64_t)this, a2);
  pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetNodeRange(v4, 6u, &v14);
  v6 = v14;
  v5 = v15;
  v7 = v16;
  if (v14 != v16 || v15 != v17)
  {
    v9 = v17 - 1;
    do
    {
      do
      {
        v10 = v5;
        v13[0] = v6;
        v13[1] = v5;
        LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v13);
        Path = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v13);
        pxrInternal__aapl__pxrReserved__::PcpComposeSiteVariantSelections(LayerStack, Path, a3, 0, 0);
        v5 = v10 + 1;
      }
      while (v6 != v7);
    }
    while (v9 != v10);
  }
}

void sub_20C532E0C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BDE9D48(v1, *(_QWORD **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t sub_20C532E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  v5 = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)a3;
  *(_QWORD *)(a1 + 24) = v5;
  if (v5)
  {
    v6 = (unsigned int *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  sub_20C20123C((_DWORD *)(a1 + 32), a3 + 16);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a3 + 56);
  return a1;
}

void sub_20C532E98(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *(_QWORD *)(v2 + 24);
  if (v4)
    sub_20C96B4E8(v4);
  sub_20C96B82C(v1);
  _Unwind_Resume(a1);
}

void sub_20C532EB8(unsigned int *a1, int a2, __int128 *a3)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD v8[3];
  void **v9;

  if (a2 == -1)
  {
    v5 = *(_QWORD *)a1;
    if (*(_QWORD *)a1)
    {
      v6 = (_QWORD *)(*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v5 + 112))(v5, a1[4]);
      a2 = -1431655765 * ((v6[1] - *v6) >> 3);
    }
    else
    {
      a2 = 0;
    }
  }
  v7 = a2;
  sub_20BED7D38(v8, 1uLL, a3);
  sub_20C18C900(a1, v7, 0, v8);
  v9 = (void **)v8;
  sub_20BDE5038(&v9);
}

void sub_20C532F60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20BDE5038((void ***)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdZipFile::Open(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *Resolver;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  void *__p[2];
  uint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  Resolver = pxrInternal__aapl__pxrReserved__::ArGetResolver((pxrInternal__aapl__pxrReserved__ *)a1);
  if (*(char *)(a1 + 23) < 0)
  {
    sub_20BDDBFAC(__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a1;
    v9 = *(_QWORD *)(a1 + 16);
  }
  pxrInternal__aapl__pxrReserved__::ArResolver::OpenAsset((uint64_t)Resolver);
  if (SHIBYTE(v9) < 0)
    operator delete(__p[0]);
  if (v10)
  {
    pxrInternal__aapl__pxrReserved__::UsdZipFile::Open(&v10, (uint64_t)a2);
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  v5 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
}

void sub_20C53304C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a16);
  _Unwind_Resume(a1);
}

_QWORD *pxrInternal__aapl__pxrReserved__::UsdZipFile::UsdZipFile(_QWORD *this)
{
  *this = 0;
  this[1] = 0;
  return this;
}

{
  *this = 0;
  this[1] = 0;
  return this;
}

void pxrInternal__aapl__pxrReserved__::UsdZipFile::Open(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  __int128 v12;
  uint64_t v13;
  const char *v14;
  char v15;

  v4 = *a1;
  if (v4)
  {
    (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v4 + 24))(&v10);
    if (v10)
    {
      v5 = operator new(0x100uLL);
      v6 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)*a1 + 16))(*a1);
      sub_20C534E10((uint64_t)v5, (uint64_t)&v10, v6);
      sub_20C5356D0(&v12, (uint64_t)v5);
      *(_OWORD *)a2 = v12;
    }
    else
    {
      *(_QWORD *)&v12 = "usd/zipFile.cpp";
      *((_QWORD *)&v12 + 1) = "Open";
      v13 = 598;
      v14 = "static UsdZipFile pxrInternal__aapl__pxrReserved__::UsdZipFile::Open(const std::shared_ptr<ArAsset> &)";
      v15 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v12, 3, (pxrInternal__aapl__pxrReserved__ *)"Could not retrieve buffer from asset");
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    v7 = v11;
    if (v11)
    {
      p_shared_owners = (unint64_t *)&v11->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  else
  {
    *(_QWORD *)&v12 = "usd/zipFile.cpp";
    *((_QWORD *)&v12 + 1) = "Open";
    v13 = 592;
    v14 = "static UsdZipFile pxrInternal__aapl__pxrReserved__::UsdZipFile::Open(const std::shared_ptr<ArAsset> &)";
    v15 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v12, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid asset");
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
  }
}

void sub_20C5331D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

__n128 pxrInternal__aapl__pxrReserved__::UsdZipFile::UsdZipFile(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  return result;
}

{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdZipFile::DumpContents(pxrInternal__aapl__pxrReserved__::UsdZipFile *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void **v8;
  void *__p[2];
  char v11;
  uint64_t v12;

  puts("    Offset\t      Comp\t    Uncomp\tName");
  puts("    ------\t      ----\t    ------\t----");
  if (*(_QWORD *)this && (sub_20C53382C(*(_QWORD *)this, &v12), (v2 = v12) != 0))
  {
    v3 = 0;
    do
    {
      v4 = *(_QWORD *)(v2 + 64);
      v5 = *(_QWORD *)(*(_QWORD *)v2 + 240);
      v6 = *(unsigned int *)(v2 + 36);
      v7 = *(unsigned int *)(v2 + 40);
      pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::operator->((uint64_t)&v12, (uint64_t)__p);
      if (v11 >= 0)
        v8 = __p;
      else
        v8 = (void **)__p[0];
      printf("%10zu\t%10zu\t%10zu\t%s\n", v4 - v5, v6, v7, (const char *)v8);
      if (v11 < 0)
        operator delete(__p[0]);
      pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::operator++((uint64_t)&v12);
      ++v3;
      v2 = v12;
    }
    while (v12);
  }
  else
  {
    v3 = 0;
  }
  puts("----------");
  return printf("%zu files total\n", v3);
}

void sub_20C53332C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdZipFile::begin@<X0>(pxrInternal__aapl__pxrReserved__::UsdZipFile *this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;

  result = *(_QWORD *)this;
  if (result)
    return sub_20C53382C(result, a2);
  *a2 = 0;
  return result;
}

void pxrInternal__aapl__pxrReserved__::UsdZipFile::end(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

BOOL pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::operator!=(_QWORD **a1, _QWORD **a2)
{
  _QWORD *v2;
  _QWORD *v3;
  _BOOL4 v4;
  BOOL v5;

  v2 = *a1;
  v3 = *a2;
  v4 = ((unint64_t)*a1 | (unint64_t)*a2) == 0;
  if (*a1)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
    v4 = *v2 == *v3 && v2[1] == v3[1];
  return !v4;
}

float pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::GetFileInfo@<S0>(pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator *this@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  *(_DWORD *)(a2 + 31) = 0;
  LODWORD(v2) = 0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  v3 = *(_QWORD *)this;
  if (*(_QWORD *)this)
  {
    *(_QWORD *)a2 = *(_QWORD *)(v3 + 64) - *(_QWORD *)(*(_QWORD *)v3 + 240);
    v2 = *(_QWORD *)(v3 + 36);
    *(_QWORD *)&v4 = v2;
    *((_QWORD *)&v4 + 1) = HIDWORD(v2);
    *(_OWORD *)(a2 + 8) = v4;
    *(_QWORD *)(a2 + 24) = *(unsigned int *)(v3 + 32);
    *(_WORD *)(a2 + 32) = *(_WORD *)(v3 + 24);
    *(_BYTE *)(a2 + 34) = *(_BYTE *)(v3 + 22) & 1;
  }
  return *(float *)&v2;
}

double pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::operator->@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;
  void *__p[2];
  uint64_t v5;

  if (!*(_QWORD *)a1)
  {
    __p[0] = 0;
    __p[1] = 0;
    v5 = 0;
    goto LABEL_6;
  }
  sub_20BDFC7D8(__p, *(void **)(*(_QWORD *)a1 + 48), *(unsigned __int16 *)(*(_QWORD *)a1 + 44));
  if ((SHIBYTE(v5) & 0x80000000) == 0)
  {
LABEL_6:
    result = *(double *)__p;
    *(_OWORD *)a2 = *(_OWORD *)__p;
    *(_QWORD *)(a2 + 16) = v5;
    return result;
  }
  sub_20BDDBFAC((_BYTE *)a2, __p[0], (unint64_t)__p[1]);
  if (SHIBYTE(v5) < 0)
    operator delete(__p[0]);
  return result;
}

void sub_20C533488(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::operator++(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  __int128 v6;
  _OWORD v8[3];
  uint64_t v9;
  uint64_t v10[2];
  uint64_t v11;

  v2 = *(_QWORD **)a1;
  if (*(_QWORD *)a1)
  {
    v4 = *(_QWORD *)(*v2 + 240);
    v3 = *(_QWORD *)(*v2 + 248);
    v10[0] = v4 + v2[9];
    v10[1] = v3;
    v11 = v4;
    sub_20C533A48(v10, (uint64_t)v8);
    v5 = *(_QWORD **)a1;
    if (LODWORD(v8[0]) == 67324752)
    {
      v5[1] = v5[9];
      v6 = v8[1];
      *((_OWORD *)v5 + 1) = v8[0];
      *((_OWORD *)v5 + 2) = v6;
      *((_OWORD *)v5 + 3) = v8[2];
      v5[8] = v9;
      *(_QWORD *)(*(_QWORD *)a1 + 72) = v10[0] - v11;
    }
    else
    {
      *(_QWORD *)a1 = 0;
      if (v5)
        operator delete(v5);
    }
  }
  return a1;
}

void pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::~Iterator(void **this)
{
  void *v2;

  v2 = *this;
  *this = 0;
  if (v2)
    operator delete(v2);
}

{
  void *v2;

  v2 = *this;
  *this = 0;
  if (v2)
    operator delete(v2);
}

_QWORD *pxrInternal__aapl__pxrReserved__::UsdZipFile::Find@<X0>(_QWORD **a1@<X0>, unsigned __int8 *a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *result;

  result = *a1;
  if (result)
    return (_QWORD *)sub_20C533598(result, a2, a3);
  *a3 = 0;
  return result;
}

uint64_t sub_20C533598@<X0>(_QWORD *a1@<X0>, unsigned __int8 *a2@<X1>, _QWORD *a3@<X8>)
{
  void *v6;
  _QWORD *v7;
  unsigned __int8 *v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _QWORD *v14;
  _OWORD **v15;
  unsigned __int8 *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  unsigned __int8 *v21;
  unsigned __int8 *v22;
  _OWORD *v23;
  _OWORD *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  unsigned __int8 *v28;
  uint64_t result;
  void *__p[2];
  char v31;
  void *v32;
  char v33;

  v6 = a1 + 9;
  __p[0] = a1 + 9;
  LOBYTE(__p[1]) = 1;
  MEMORY[0x212B92CDC](a1 + 9);
  v7 = a1 + 2;
  v8 = sub_20C535080(a1 + 2, a2);
  if (!v8)
  {
    v14 = (_QWORD *)a1[7];
    if (!v14 || *v14)
    {
      sub_20C535180((uint64_t)__p);
      v32 = v6;
      v33 = 1;
      MEMORY[0x212B92CF4](v6);
      v15 = (_OWORD **)a1[7];
      if (!v15)
      {
        sub_20C534FB0((uint64_t)a1);
        v15 = (_OWORD **)a1[7];
      }
      while (*v15)
      {
        sub_20BDFC7D8(__p, *((void **)*v15 + 6), *((unsigned __int16 *)*v15 + 22));
        v16 = sub_20C5351B4((uint64_t)v7, (unsigned __int8 *)__p, (__int128 *)__p, v15);
        if (v31 < 0)
          operator delete(__p[0]);
        pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::operator++((uint64_t)v15);
        v17 = a2[23];
        if ((v17 & 0x80u) == 0)
          v18 = a2[23];
        else
          v18 = *((_QWORD *)a2 + 1);
        v19 = v16[39];
        v20 = (char)v19;
        if ((v19 & 0x80u) != 0)
          v19 = *((_QWORD *)v16 + 3);
        if (v18 == v19)
        {
          if (v20 >= 0)
            v21 = v16 + 16;
          else
            v21 = (unsigned __int8 *)*((_QWORD *)v16 + 2);
          if ((v17 & 0x80) != 0)
          {
            if (!memcmp(*(const void **)a2, v21, *((_QWORD *)a2 + 1)))
            {
LABEL_28:
              v23 = (_OWORD *)*((_QWORD *)v16 + 5);
              if (v23)
              {
                v24 = operator new(0x50uLL);
                *v24 = *v23;
                v25 = v23[1];
                v26 = v23[2];
                v27 = v23[4];
                v24[3] = v23[3];
                v24[4] = v27;
                v24[1] = v25;
                v24[2] = v26;
              }
              else
              {
                v24 = 0;
              }
              *a3 = v24;
              return sub_20C53558C((uint64_t)&v32);
            }
          }
          else
          {
            if (!a2[23])
              goto LABEL_28;
            v22 = a2;
            while (*v22 == *v21)
            {
              ++v22;
              ++v21;
              if (!--v17)
                goto LABEL_28;
            }
          }
        }
      }
      sub_20C53558C((uint64_t)&v32);
      __p[0] = v6;
      LOBYTE(__p[1]) = 1;
      MEMORY[0x212B92CDC](v6);
      v28 = sub_20C535080(v7, a2);
      if (!v28)
      {
        result = sub_20C535180((uint64_t)__p);
        *a3 = 0;
        return result;
      }
      v9 = (_OWORD *)*((_QWORD *)v28 + 5);
      if (!v9)
        goto LABEL_33;
      v10 = operator new(0x50uLL);
      goto LABEL_4;
    }
LABEL_33:
    v10 = 0;
    goto LABEL_34;
  }
  v9 = (_OWORD *)*((_QWORD *)v8 + 5);
  if (!v9)
    goto LABEL_33;
  v10 = operator new(0x50uLL);
LABEL_4:
  *v10 = *v9;
  v11 = v9[1];
  v12 = v9[2];
  v13 = v9[4];
  v10[3] = v9[3];
  v10[4] = v13;
  v10[1] = v11;
  v10[2] = v12;
LABEL_34:
  *a3 = v10;
  return sub_20C535180((uint64_t)__p);
}

void sub_20C5337D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  sub_20C53558C((uint64_t)&a16);
  _Unwind_Resume(a1);
}

uint64_t sub_20C53382C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  _OWORD **v5;
  _OWORD *v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD *v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v17;
  char v18;

  v4 = a1 + 72;
  v17 = a1 + 72;
  v18 = 1;
  MEMORY[0x212B92CDC](a1 + 72);
  v5 = *(_OWORD ***)(a1 + 64);
  if (v5)
  {
    v6 = *v5;
    if (*v5)
    {
      v7 = operator new(0x50uLL);
      *v7 = *v6;
      v8 = v6[1];
      v9 = v6[2];
      v10 = v6[4];
      v7[3] = v6[3];
      v7[4] = v10;
      v7[1] = v8;
      v7[2] = v9;
    }
    else
    {
      v7 = 0;
    }
    *a2 = v7;
    return sub_20C535180((uint64_t)&v17);
  }
  else
  {
    sub_20C535180((uint64_t)&v17);
    v17 = v4;
    v18 = 1;
    MEMORY[0x212B92CF4](v4);
    sub_20C534FB0(a1);
    v11 = **(_OWORD ***)(a1 + 64);
    if (v11)
    {
      v12 = operator new(0x50uLL);
      *v12 = *v11;
      v13 = v11[1];
      v14 = v11[2];
      v15 = v11[4];
      v12[3] = v11[3];
      v12[4] = v15;
      v12[1] = v13;
      v12[2] = v14;
    }
    else
    {
      v12 = 0;
    }
    *a2 = v12;
    return sub_20C53558C((uint64_t)&v17);
  }
}

void sub_20C53391C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C535180((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::Iterator(_QWORD *this)
{
  *this = 0;
  return this;
}

{
  *this = 0;
  return this;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::Iterator(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  __int128 v11;
  _OWORD v13[3];
  uint64_t v14;
  uint64_t v15[2];
  uint64_t v16;

  *a1 = 0;
  v6 = *(_QWORD *)(a2 + 240);
  v7 = *(_QWORD *)(a2 + 248);
  v15[0] = v6 + a3;
  v15[1] = v7;
  v16 = v6;
  sub_20C533A48(v15, (uint64_t)v13);
  if (LODWORD(v13[0]) == 67324752)
  {
    v8 = operator new(0x50uLL);
    *v8 = 0;
    v8[1] = 0;
    *(_QWORD *)((char *)v8 + 22) = 0;
    v8[2] = 0;
    *((_OWORD *)v8 + 2) = 0u;
    *((_OWORD *)v8 + 3) = 0u;
    *((_OWORD *)v8 + 4) = 0u;
    v9 = (_QWORD *)*a1;
    *a1 = (uint64_t)v8;
    if (v9)
    {
      operator delete(v9);
      v8 = (_QWORD *)*a1;
    }
    *v8 = a2;
    v10 = (_QWORD *)*a1;
    v10[1] = a3;
    v11 = v13[1];
    *((_OWORD *)v10 + 1) = v13[0];
    *((_OWORD *)v10 + 2) = v11;
    *((_OWORD *)v10 + 3) = v13[2];
    v10[8] = v14;
    *(_QWORD *)(*a1 + 72) = v15[0] - v16;
  }
  return a1;
}

void sub_20C533A2C(_Unwind_Exception *exception_object)
{
  void **v1;
  void *v3;

  v3 = *v1;
  *v1 = 0;
  if (v3)
    operator delete(v3);
  _Unwind_Resume(exception_object);
}

double sub_20C533A48@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  double result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  v3 = *a1;
  v4 = a1[2];
  if ((unint64_t)(a1[1] - *a1 + v4) <= 0x1D)
    goto LABEL_2;
  *(_QWORD *)((char *)&v14 + 6) = 0;
  *(_QWORD *)&v14 = 0;
  v15 = 0u;
  v16 = 0u;
  v17 = 0;
  sub_20C5355C0((uint64_t)a1, &v14);
  if ((_DWORD)v14 == 67324752)
  {
    sub_20C535648((uint64_t)a1, (_WORD *)&v14 + 2);
    sub_20C535648((uint64_t)a1, (_WORD *)&v14 + 3);
    sub_20C535648((uint64_t)a1, (_WORD *)&v14 + 4);
    sub_20C535648((uint64_t)a1, (_WORD *)&v14 + 5);
    sub_20C535648((uint64_t)a1, (_WORD *)&v14 + 6);
    sub_20C5355C0((uint64_t)a1, &v15);
    sub_20C5355C0((uint64_t)a1, (_DWORD *)&v15 + 1);
    sub_20C5355C0((uint64_t)a1, (_DWORD *)&v15 + 2);
    sub_20C535648((uint64_t)a1, (_WORD *)&v15 + 6);
    sub_20C535648((uint64_t)a1, (_WORD *)&v15 + 7);
    v8 = *a1;
    v7 = a1[1];
    v9 = a1[2];
    if (v7 - *a1 + v9 < (unint64_t)WORD6(v15)
      || (*(_QWORD *)&v16 = *a1,
          v10 = v8 + WORD6(v15),
          *a1 = v10,
          v11 = v7 + v9,
          v11 - v10 < (unint64_t)HIWORD(v15))
      || (*((_QWORD *)&v16 + 1) = v10, v12 = v10 + HIWORD(v15), *a1 = v12, v11 - v12 < (unint64_t)DWORD1(v15)))
    {
LABEL_2:
      *(_QWORD *)(a2 + 48) = 0;
      result = 0.0;
      *(_OWORD *)(a2 + 16) = 0u;
      *(_OWORD *)(a2 + 32) = 0u;
      *(_OWORD *)a2 = 0u;
      return result;
    }
    *a1 = v12 + DWORD1(v15);
    v13 = v15;
    *(_OWORD *)a2 = v14;
    *(_OWORD *)(a2 + 16) = v13;
    result = *(double *)&v16;
    *(_OWORD *)(a2 + 32) = v16;
    *(_QWORD *)(a2 + 48) = v12;
  }
  else
  {
    *a1 = a1[2] + v3 - v4;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_QWORD *)(a2 + 48) = 0;
  }
  return result;
}

pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator *pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::Iterator(pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator *this, const pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator *a2)
{
  _OWORD *v3;
  _OWORD *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = *(_OWORD **)a2;
  if (*(_QWORD *)a2)
  {
    v4 = operator new(0x50uLL);
    *v4 = *v3;
    v5 = v3[4];
    v7 = v3[1];
    v6 = v3[2];
    v4[3] = v3[3];
    v4[4] = v5;
    v4[1] = v7;
    v4[2] = v6;
  }
  else
  {
    v4 = 0;
  }
  *(_QWORD *)this = v4;
  return this;
}

{
  _OWORD *v3;
  _OWORD *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = *(_OWORD **)a2;
  if (*(_QWORD *)a2)
  {
    v4 = operator new(0x50uLL);
    *v4 = *v3;
    v5 = v3[4];
    v7 = v3[1];
    v6 = v3[2];
    v4[3] = v3[3];
    v4[4] = v5;
    v4[1] = v7;
    v4[2] = v6;
  }
  else
  {
    v4 = 0;
  }
  *(_QWORD *)this = v4;
  return this;
}

_QWORD *pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::Iterator(_QWORD *result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *a2 = 0;
  *result = v2;
  return result;
}

{
  uint64_t v2;

  v2 = *a2;
  *a2 = 0;
  *result = v2;
  return result;
}

void **pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::operator=(void **a1, _OWORD **a2)
{
  _OWORD *v3;
  _OWORD *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  void *v8;

  v3 = *a2;
  if (*a2)
  {
    v4 = operator new(0x50uLL);
    *v4 = *v3;
    v5 = v3[4];
    v7 = v3[1];
    v6 = v3[2];
    v4[3] = v3[3];
    v4[4] = v5;
    v4[1] = v7;
    v4[2] = v6;
  }
  else
  {
    v4 = 0;
  }
  v8 = *a1;
  *a1 = v4;
  if (v8)
    operator delete(v8);
  return a1;
}

void **pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::operator=(void **a1, void **a2)
{
  void *v3;
  void *v4;

  v3 = *a2;
  *a2 = 0;
  v4 = *a1;
  *a1 = v3;
  if (v4)
    operator delete(v4);
  return a1;
}

_QWORD *pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::operator*@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  if (*result)
    return sub_20BDFC7D8(a2, *(void **)(*result + 48), *(unsigned __int16 *)(*result + 44));
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::operator++@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _OWORD *v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v4 = (_OWORD *)*a1;
  if (*a1)
  {
    v5 = operator new(0x50uLL);
    *v5 = *v4;
    v6 = v4[4];
    v8 = v4[1];
    v7 = v4[2];
    v5[3] = v4[3];
    v5[4] = v6;
    v5[1] = v8;
    v5[2] = v7;
  }
  else
  {
    v5 = 0;
  }
  *a2 = v5;
  return pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::operator++((uint64_t)a1);
}

void sub_20C533E20(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  void *v2;

  *v1 = 0;
  if (v2)
    operator delete(v2);
  _Unwind_Resume(exception_object);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::operator==(_QWORD **a1, _QWORD **a2)
{
  _QWORD *v2;
  _QWORD *v3;
  _BOOL8 result;
  BOOL v5;

  v2 = *a1;
  v3 = *a2;
  result = ((unint64_t)*a1 | (unint64_t)*a2) == 0;
  if (v2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
    return *v2 == *v3 && v2[1] == v3[1];
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::GetFile(pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator *this)
{
  if (*(_QWORD *)this)
    return *(_QWORD *)(*(_QWORD *)this + 64);
  else
    return 0;
}

void pxrInternal__aapl__pxrReserved__::UsdZipFileWriter::CreateNew(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unint64_t *Instance;
  unint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  unint64_t v14;

  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v14);
  pxrInternal__aapl__pxrReserved__::TfSafeOutputFile::Replace(a1, (uint64_t)&v9);
  Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  if (!Instance)
    Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  v5 = v14;
  v6 = atomic_load(Instance + 18);
  if (v5 >= v6
    || pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v14, (pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr *)Instance))
  {
    v7 = (char *)operator new(0x50uLL);
    *(_QWORD *)v7 = v9;
    *(_OWORD *)(v7 + 8) = v10;
    *((_QWORD *)v7 + 3) = v11;
    *((_QWORD *)&v10 + 1) = 0;
    v11 = 0;
    *((_OWORD *)v7 + 2) = v12;
    v8 = v13;
    v12 = 0uLL;
    v13 = 0;
    v9 = 0;
    *(_QWORD *)&v10 = 0;
    *((_QWORD *)v7 + 6) = v8;
    *((_QWORD *)v7 + 7) = 0;
    *((_QWORD *)v7 + 8) = 0;
    *((_QWORD *)v7 + 9) = 0;
  }
  else
  {
    v7 = 0;
  }
  *a2 = v7;
  pxrInternal__aapl__pxrReserved__::TfSafeOutputFile::~TfSafeOutputFile((pxrInternal__aapl__pxrReserved__::TfSafeOutputFile *)&v9);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v14);
}

void sub_20C533F7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  pxrInternal__aapl__pxrReserved__::TfSafeOutputFile::~TfSafeOutputFile((pxrInternal__aapl__pxrReserved__::TfSafeOutputFile *)&a9);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)(v9 - 24));
  _Unwind_Resume(a1);
}

_QWORD *pxrInternal__aapl__pxrReserved__::UsdZipFileWriter::UsdZipFileWriter(_QWORD *this)
{
  *this = 0;
  return this;
}

{
  *this = 0;
  return this;
}

_QWORD *pxrInternal__aapl__pxrReserved__::UsdZipFileWriter::UsdZipFileWriter(_QWORD *result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *a2 = 0;
  *result = v2;
  return result;
}

{
  uint64_t v2;

  v2 = *a2;
  *a2 = 0;
  *result = v2;
  return result;
}

{
  uint64_t v2;

  v2 = *a2;
  *a2 = 0;
  *result = v2;
  return result;
}

{
  uint64_t v2;

  v2 = *a2;
  *a2 = 0;
  *result = v2;
  return result;
}

pxrInternal__aapl__pxrReserved__::TfSafeOutputFile **pxrInternal__aapl__pxrReserved__::UsdZipFileWriter::operator=(pxrInternal__aapl__pxrReserved__::TfSafeOutputFile **a1, pxrInternal__aapl__pxrReserved__::TfSafeOutputFile **a2)
{
  pxrInternal__aapl__pxrReserved__::TfSafeOutputFile *v3;
  pxrInternal__aapl__pxrReserved__::TfSafeOutputFile *v4;

  if (a1 != a2)
  {
    v3 = *a2;
    *a2 = 0;
    v4 = *a1;
    *a1 = v3;
    if (v4)
      sub_20C535878((int)a1, v4);
  }
  return a1;
}

void pxrInternal__aapl__pxrReserved__::UsdZipFileWriter::~UsdZipFileWriter(pxrInternal__aapl__pxrReserved__::TfSafeOutputFile **this)
{
  pxrInternal__aapl__pxrReserved__::TfSafeOutputFile *v2;

  if (*this)
  {
    pxrInternal__aapl__pxrReserved__::UsdZipFileWriter::Save(this);
    v2 = *this;
    *this = 0;
    if (v2)
      sub_20C535878((int)this, v2);
  }
  else
  {
    *this = 0;
  }
}

BOOL pxrInternal__aapl__pxrReserved__::UsdZipFileWriter::Save(pxrInternal__aapl__pxrReserved__::TfSafeOutputFile **this)
{
  FILE **v1;
  FILE *v3;
  _DWORD *v4;
  _DWORD *v5;
  _QWORD *v6;
  int v7;
  unsigned int v8;
  int v9;
  pxrInternal__aapl__pxrReserved__::TfSafeOutputFile *v10;
  int v12;
  pxrInternal__aapl__pxrReserved__::TfSafeOutputFile *v13;
  _DWORD *v14;
  __int128 __ptr;
  size_t v16;
  size_t __nitems;
  int v18;
  __int16 v19;
  int v20;
  int v21;
  void *v22;
  void *v23;
  void *v24;
  _OWORD v25[4];
  int v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  v1 = (FILE **)*this;
  if (*this)
  {
    v13 = *this;
    v3 = *v1;
    v12 = MEMORY[0x212B933B4](*v1);
    v4 = (_DWORD *)*((_QWORD *)*this + 7);
    v14 = (_DWORD *)*((_QWORD *)*this + 8);
    if (v4 != v14)
    {
      v5 = v4 + 14;
      do
      {
        v6 = v5 - 14;
        v7 = *v5;
        v22 = 0;
        v23 = 0;
        v24 = 0;
        LODWORD(__ptr) = 33639248;
        WORD2(__ptr) = 0;
        *(_QWORD *)((char *)&__ptr + 6) = *(_QWORD *)(v5 - 7);
        HIWORD(__ptr) = *((_WORD *)v5 - 10);
        v16 = *((_QWORD *)v5 - 2);
        LODWORD(__nitems) = *(v5 - 2);
        WORD2(__nitems) = *((_WORD *)v5 - 2);
        v8 = *((unsigned __int16 *)v5 - 1);
        HIWORD(__nitems) = *((_WORD *)v5 - 1);
        v18 = 0;
        v19 = 0;
        v20 = 0;
        v21 = v7;
        if (*((char *)v5 - 33) < 0)
          v6 = (_QWORD *)*v6;
        v5 += 16;
        v22 = v6;
        v26 = 0;
        memset(v25, 0, sizeof(v25));
        v23 = sub_20C534CB8(v25, v8);
        v24 = 0;
        fwrite(&__ptr, 4uLL, 1uLL, v3);
        fwrite((char *)&__ptr + 4, 2uLL, 1uLL, v3);
        fwrite((char *)&__ptr + 6, 2uLL, 1uLL, v3);
        fwrite((char *)&__ptr + 8, 2uLL, 1uLL, v3);
        fwrite((char *)&__ptr + 10, 2uLL, 1uLL, v3);
        fwrite((char *)&__ptr + 12, 2uLL, 1uLL, v3);
        fwrite((char *)&__ptr + 14, 2uLL, 1uLL, v3);
        fwrite(&v16, 4uLL, 1uLL, v3);
        fwrite((char *)&v16 + 4, 4uLL, 1uLL, v3);
        fwrite(&__nitems, 4uLL, 1uLL, v3);
        fwrite((char *)&__nitems + 4, 2uLL, 1uLL, v3);
        fwrite((char *)&__nitems + 6, 2uLL, 1uLL, v3);
        fwrite(&v18, 2uLL, 1uLL, v3);
        fwrite((char *)&v18 + 2, 2uLL, 1uLL, v3);
        fwrite(&v19, 2uLL, 1uLL, v3);
        fwrite(&v20, 4uLL, 1uLL, v3);
        fwrite(&v21, 4uLL, 1uLL, v3);
        fwrite(v22, 1uLL, WORD2(__nitems), v3);
        fwrite(v23, 1uLL, HIWORD(__nitems), v3);
        fwrite(v24, 1uLL, (unsigned __int16)v18, v3);
      }
      while (v5 - 14 != v14);
    }
    v9 = MEMORY[0x212B933B4](v3);
    *(_QWORD *)&__ptr = 101010256;
    WORD4(__ptr) = (*((_DWORD *)*this + 16) - *((_DWORD *)*this + 14)) >> 6;
    WORD5(__ptr) = WORD4(__ptr);
    HIDWORD(__ptr) = v9 - v12;
    LODWORD(v16) = v12;
    WORD2(v16) = 0;
    __nitems = 0;
    fwrite(&__ptr, 4uLL, 1uLL, v3);
    fwrite((char *)&__ptr + 4, 2uLL, 1uLL, v3);
    fwrite((char *)&__ptr + 6, 2uLL, 1uLL, v3);
    fwrite((char *)&__ptr + 8, 2uLL, 1uLL, v3);
    fwrite((char *)&__ptr + 10, 2uLL, 1uLL, v3);
    fwrite((char *)&__ptr + 12, 4uLL, 1uLL, v3);
    fwrite(&v16, 4uLL, 1uLL, v3);
    fwrite((char *)&v16 + 4, 2uLL, 1uLL, v3);
    fwrite((const void *)__nitems, 1uLL, WORD2(v16), v3);
    pxrInternal__aapl__pxrReserved__::TfSafeOutputFile::Close(*this);
    v10 = *this;
    *this = 0;
    v1 = (FILE **)v13;
    if (v10)
      sub_20C535878((int)this, v10);
  }
  else
  {
    *(_QWORD *)&__ptr = "usd/zipFile.cpp";
    *((_QWORD *)&__ptr + 1) = "Save";
    v16 = 1031;
    __nitems = (size_t)"BOOL pxrInternal__aapl__pxrReserved__::UsdZipFileWriter::Save()";
    LOBYTE(v18) = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&__ptr, 1, (pxrInternal__aapl__pxrReserved__ *)"File is not open for writing");
  }
  return v1 != 0;
}

void pxrInternal__aapl__pxrReserved__::UsdZipFileWriter::AddFile(FILE ***a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  FILE **v9;
  FILE *v10;
  FILE *v11;
  std::string::size_type size;
  std::string *p_p;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  FILE *v17;
  double *v18;
  pxrInternal__aapl__pxrReserved__ *v19;
  tm *v20;
  int v21;
  unsigned __int8 *v22;
  unsigned int v23;
  uint64_t v24;
  unsigned int v25;
  int v26;
  const char *v27;
  void **v28;
  __int16 v29;
  int v30;
  char v31;
  __int16 v32;
  unsigned __int16 v33;
  std::string *v34;
  FILE **v35;
  FILE *v36;
  FILE *v37;
  __int128 v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  __int128 v45;
  FILE *p_read;
  char *v47;
  FILE *v48;
  char *v49;
  __int128 v50;
  __sbuf ub;
  __int128 v52;
  int64x2_t v53;
  FILE *v54;
  __sbuf __ptr;
  size_t __nitems[2];
  void *v57[2];
  void *v58;
  unsigned __int8 *v59;
  uint64_t v60;
  void *v61[2];
  uint64_t v62;
  std::string __p;
  time_t v64;
  int64x2_t v65;
  FILE *v66;
  _QWORD *v67;
  char v68[16];
  __int128 v69;
  __int128 v70;
  __int128 v71;
  int v72;
  uint64_t v73;

  v73 = *MEMORY[0x24BDAC8D0];
  if (!*a1)
  {
    *(_QWORD *)v68 = "usd/zipFile.cpp";
    *(_QWORD *)&v68[8] = "AddFile";
    *(_QWORD *)&v69 = 965;
    *((_QWORD *)&v69 + 1) = "std::string pxrInternal__aapl__pxrReserved__::UsdZipFileWriter::AddFile(const std::string &,"
                            " const std::string &)";
    LOBYTE(v70) = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v68, 1, (pxrInternal__aapl__pxrReserved__ *)"File is not open for writing");
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    return;
  }
  v7 = *(unsigned __int8 *)(a3 + 23);
  if ((v7 & 0x80u) != 0)
    v7 = *(_QWORD *)(a3 + 8);
  if (v7)
    v8 = a3;
  else
    v8 = a2;
  pxrInternal__aapl__pxrReserved__::TfNormPath(&__p, v8, 1);
  pxrInternal__aapl__pxrReserved__::TfStringTrimLeft("/", &__p, (std::string *)v68);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = *(_OWORD *)v68;
  __p.__r_.__value_.__r.__words[2] = v69;
  v9 = *a1;
  v10 = (*a1)[7];
  v11 = (*a1)[8];
  if (v10 == v11)
  {
LABEL_29:
    if (v10 != v11)
    {
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        *(std::string *)a4 = __p;
        return;
      }
      sub_20BDDBFAC((_BYTE *)a4, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
      goto LABEL_87;
    }
  }
  else
  {
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      size = __p.__r_.__value_.__l.__size_;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    do
    {
      v14 = *((unsigned __int8 *)&v10->_file + 5);
      if ((v14 & 0x80u) == 0)
        v15 = *((unsigned __int8 *)&v10->_file + 5);
      else
        v15 = *(_QWORD *)&v10->_r;
      if (v15 == size)
      {
        if ((v14 & 0x80) != 0)
        {
          if (!memcmp(v10->_p, p_p, *(_QWORD *)&v10->_r))
            goto LABEL_29;
        }
        else
        {
          if (!*((_BYTE *)&v10->_file + 5))
            goto LABEL_29;
          v16 = 0;
          while (*((unsigned __int8 *)&v10->_p + v16) == p_p->__r_.__value_.__s.__data_[v16])
          {
            if (v14 == ++v16)
              goto LABEL_29;
          }
        }
      }
      v10 = (FILE *)((char *)v10 + 64);
    }
    while (v10 != v11);
  }
  v17 = *v9;
  v61[0] = 0;
  v61[1] = 0;
  v62 = 0;
  pxrInternal__aapl__pxrReserved__::ArchMapFileReadOnly((const char *)a2, (uint64_t)v61, &v59);
  if (v59)
  {
    *((_WORD *)&__ptr._size + 2) = 0;
    __ptr._size = 0;
    *(_OWORD *)__nitems = 0u;
    *(_OWORD *)v57 = 0u;
    v58 = 0;
    __ptr._base = (unsigned __int8 *)0xA04034B50;
    *(_QWORD *)v68 = 0;
    if (*(char *)(a2 + 23) >= 0)
      v19 = (pxrInternal__aapl__pxrReserved__ *)a2;
    else
      v19 = *(pxrInternal__aapl__pxrReserved__ **)a2;
    pxrInternal__aapl__pxrReserved__::ArchGetModificationTime(v19, (double *)v68, v18);
    v64 = (uint64_t)*(double *)v68;
    v20 = localtime(&v64);
    v21 = v20->tm_mday | ((v20->tm_year << 9) + 24576) | (32 * v20->tm_mon + 32);
    HIWORD(__ptr._size) = (32 * LOWORD(v20->tm_min)) | (LOWORD(v20->tm_hour) << 11) | (v20->tm_sec / 2);
    *((_WORD *)&__ptr._size + 2) = v21;
    if (v60)
    {
      v22 = v59;
      v23 = -1;
      v24 = v60;
      do
      {
        v25 = *v22++;
        v23 = dword_20CAEBA90[v23 ^ v25] ^ (v23 >> 8);
        --v24;
      }
      while (v24);
      v26 = ~v23;
    }
    else
    {
      v26 = 0;
    }
    __nitems[0] = __PAIR64__(v60, v26);
    LODWORD(__nitems[1]) = v60;
    v29 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v29 = __p.__r_.__value_.__r.__words[1];
    WORD2(__nitems[1]) = v29;
    v30 = MEMORY[0x212B933B4](v17);
    v31 = v30 + BYTE4(__nitems[1]) + 30;
    if ((v31 & 0x3Fu) <= 0x3C)
      v32 = 64;
    else
      v32 = 128;
    if ((((_BYTE)v30 + BYTE4(__nitems[1]) + 30) & 0x3F) != 0)
      v33 = v32 - (v31 & 0x3F);
    else
      v33 = 0;
    HIWORD(__nitems[1]) = v33;
    v34 = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v34 = (std::string *)__p.__r_.__value_.__r.__words[0];
    v57[0] = v34;
    v72 = 0;
    v70 = 0u;
    v71 = 0u;
    *(_OWORD *)v68 = 0u;
    v69 = 0u;
    v57[1] = sub_20C534CB8(v68, v33);
    v58 = v59;
    fwrite(&__ptr, 4uLL, 1uLL, v17);
    fwrite((char *)&__ptr._base + 4, 2uLL, 1uLL, v17);
    fwrite((char *)&__ptr._base + 6, 2uLL, 1uLL, v17);
    fwrite(&__ptr._size, 2uLL, 1uLL, v17);
    fwrite((char *)&__ptr._size + 2, 2uLL, 1uLL, v17);
    fwrite(&__ptr._size + 1, 2uLL, 1uLL, v17);
    fwrite(__nitems, 4uLL, 1uLL, v17);
    fwrite((char *)__nitems + 4, 4uLL, 1uLL, v17);
    fwrite(&__nitems[1], 4uLL, 1uLL, v17);
    fwrite((char *)&__nitems[1] + 4, 2uLL, 1uLL, v17);
    fwrite((char *)&__nitems[1] + 6, 2uLL, 1uLL, v17);
    fwrite(v57[0], 1uLL, WORD2(__nitems[1]), v17);
    fwrite(v57[1], 1uLL, HIWORD(__nitems[1]), v17);
    fwrite(v58, 1uLL, HIDWORD(__nitems[0]), v17);
    v35 = *a1;
    v36 = (*a1)[8];
    v37 = v35[9];
    if (v36 >= v37)
    {
      v39 = (unint64_t)v35[7];
      v40 = (uint64_t)((uint64_t)v36 - v39) >> 6;
      v41 = v40 + 1;
      if ((unint64_t)(v40 + 1) >> 58)
        sub_20BDDF694();
      v42 = (uint64_t)v37 - v39;
      if (v42 >> 5 > v41)
        v41 = v42 >> 5;
      if ((unint64_t)v42 >= 0x7FFFFFFFFFFFFFC0)
        v43 = 0x3FFFFFFFFFFFFFFLL;
      else
        v43 = v41;
      v67 = v35 + 9;
      if (v43)
      {
        if (v43 >> 58)
          sub_20BDDF5B4();
        v44 = (char *)operator new(v43 << 6);
      }
      else
      {
        v44 = 0;
      }
      v47 = &v44[64 * v40];
      v64 = (time_t)v44;
      v65.i64[0] = (uint64_t)v47;
      v65.i64[1] = (uint64_t)v47;
      v66 = (FILE *)&v44[64 * v43];
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        sub_20BDDBFAC(v47, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
        v39 = (unint64_t)v35[7];
        v36 = v35[8];
        v49 = (char *)v65.i64[1];
        v48 = (FILE *)v65.i64[0];
      }
      else
      {
        *(std::string *)v47 = __p;
        v48 = (FILE *)v47;
        v49 = v47;
      }
      v50 = *(_OWORD *)__nitems;
      *(__sbuf *)(v47 + 24) = __ptr;
      *(_OWORD *)(v47 + 40) = v50;
      *((_DWORD *)v47 + 14) = v30;
      if (v36 == (FILE *)v39)
      {
        v53 = vdupq_n_s64(v39);
      }
      else
      {
        do
        {
          ub = v36[-1]._ub;
          v48[-1]._extra = v36[-1]._extra;
          v48[-1]._ub = ub;
          *(_QWORD *)&v36[-1]._ub._size = 0;
          v36[-1]._extra = 0;
          v36[-1]._ub._base = 0;
          v52 = *(_OWORD *)&v36[-1]._ur;
          *(_OWORD *)&v48[-1]._lb._size = *(_OWORD *)&v36[-1]._lb._size;
          *(_OWORD *)&v48[-1]._ur = v52;
          LODWORD(v48[-1]._offset) = v36[-1]._offset;
          v48 = (FILE *)((char *)v48 - 64);
          v36 = (FILE *)((char *)v36 - 64);
        }
        while (v36 != (FILE *)v39);
        v53 = *(int64x2_t *)(v35 + 7);
      }
      p_read = (FILE *)(v49 + 64);
      v35[7] = v48;
      v35[8] = (FILE *)(v49 + 64);
      v65 = v53;
      v54 = v35[9];
      v35[9] = v66;
      v66 = v54;
      v64 = v53.i64[0];
      sub_20C535818((uint64_t)&v64);
    }
    else
    {
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        sub_20BDDBFAC(v36, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
      }
      else
      {
        v38 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
        *(_QWORD *)&v36->_flags = *((_QWORD *)&__p.__r_.__value_.__l + 2);
        *(_OWORD *)&v36->_p = v38;
      }
      v45 = *(_OWORD *)__nitems;
      v36->_bf = __ptr;
      *(_OWORD *)&v36->_lbfsize = v45;
      LODWORD(v36->_close) = v30;
      p_read = (FILE *)&v36->_read;
      v35[8] = p_read;
    }
    v35[8] = p_read;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      sub_20BDDBFAC((_BYTE *)a4, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    else
      *(std::string *)a4 = __p;
  }
  else
  {
    *(_QWORD *)v68 = "usd/zipFile.cpp";
    *(_QWORD *)&v68[8] = "AddFile";
    *(_QWORD *)&v69 = 992;
    *((_QWORD *)&v69 + 1) = "std::string pxrInternal__aapl__pxrReserved__::UsdZipFileWriter::AddFile(const std::string &,"
                            " const std::string &)";
    LOBYTE(v70) = 0;
    if (*(char *)(a2 + 23) >= 0)
      v27 = (const char *)a2;
    else
      v27 = *(const char **)a2;
    v28 = v61;
    if (v62 < 0)
      v28 = (void **)v61[0];
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v68, 3, (pxrInternal__aapl__pxrReserved__ *)"Failed to map '%s': %s", v27, (const char *)v28);
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
  }
  sub_20BE99858((uint64_t)&v59, 0);
  if (SHIBYTE(v62) < 0)
    operator delete(v61[0]);
LABEL_87:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20C534C40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,char a32)
{
  sub_20C535818((uint64_t)&a32);
  sub_20BE99858((uint64_t)&a18, 0);
  if (a25 < 0)
    operator delete(__p);
  if (a31 < 0)
    operator delete(a26);
  _Unwind_Resume(a1);
}

_WORD *sub_20C534CB8(_WORD *a1, unsigned int a2)
{
  __int16 v2;
  const std::string::value_type *v5;
  char *v6;
  const char *v7;
  uint64_t v8;
  const char *v9;
  char v10;

  if (!a2)
    return 0;
  v2 = a2;
  if (a2 <= 3)
  {
    v6 = "usd/zipFile.cpp";
    v7 = "_PrepareExtraFieldPadding";
    v8 = 462;
    v9 = "const char *pxrInternal__aapl__pxrReserved__::(anonymous namespace)::_PrepareExtraFieldPadding(char (&)[68], uint16_t)";
    v10 = 0;
    v5 = "numPaddingBytes >= _HeaderSize";
LABEL_9:
    pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v6, v5, 0);
    goto LABEL_4;
  }
  if (a2 >= 0x45)
  {
    v6 = "usd/zipFile.cpp";
    v7 = "_PrepareExtraFieldPadding";
    v8 = 463;
    v9 = "const char *pxrInternal__aapl__pxrReserved__::(anonymous namespace)::_PrepareExtraFieldPadding(char (&)[68], uint16_t)";
    v10 = 0;
    v5 = "numPaddingBytes <= sizeof(extraFieldBuffer)";
    goto LABEL_9;
  }
LABEL_4:
  *a1 = 6534;
  a1[1] = v2 - 4;
  return a1;
}

void pxrInternal__aapl__pxrReserved__::UsdZipFileWriter::Discard(pxrInternal__aapl__pxrReserved__::TfSafeOutputFile **this)
{
  pxrInternal__aapl__pxrReserved__::TfSafeOutputFile *v2;
  pxrInternal__aapl__pxrReserved__::TfSafeOutputFile *v3;
  _QWORD v4[4];
  char v5;

  v2 = *this;
  if (v2)
  {
    pxrInternal__aapl__pxrReserved__::TfSafeOutputFile::Discard(v2);
    v3 = *this;
    *this = 0;
    if (v3)
      sub_20C535878((int)this, v3);
  }
  else
  {
    v4[0] = "usd/zipFile.cpp";
    v4[1] = "Discard";
    v4[2] = 1102;
    v4[3] = "void pxrInternal__aapl__pxrReserved__::UsdZipFileWriter::Discard()";
    v5 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v4, 1, (pxrInternal__aapl__pxrReserved__ *)"File is not open for writing");
  }
}

uint64_t sub_20C534E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_DWORD *)(a1 + 48) = 1065353216;
  *(_QWORD *)(a1 + 56) = 0;
  std::shared_timed_mutex::shared_timed_mutex((std::shared_timed_mutex *)(a1 + 72));
  *(_QWORD *)(a1 + 240) = *(_QWORD *)a1;
  *(_QWORD *)(a1 + 248) = a3;
  return a1;
}

void sub_20C534E88(_Unwind_Exception *a1)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *v1;
  uint64_t v2;
  void ***v3;
  void ***v4;
  void **v6;

  v6 = *v3;
  *v3 = 0;
  if (v6)
    sub_20C534EC0((int)v3, v6);
  sub_20C96BD74(v4);
  sub_20C534EF8(v2);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource(v1);
  _Unwind_Resume(a1);
}

void sub_20C534EC0(int a1, void **__p)
{
  void *v3;

  if (__p)
  {
    v3 = *__p;
    *__p = 0;
    if (v3)
      operator delete(v3);
    operator delete(__p);
  }
}

uint64_t sub_20C534EF8(uint64_t a1)
{
  void *v2;

  sub_20C534F30(a1, *(_QWORD **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_20C534F30(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;

  if (a2)
  {
    v2 = a2;
    do
    {
      v3 = (_QWORD *)*v2;
      sub_20C534F6C((uint64_t)(v2 + 2));
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

void sub_20C534F6C(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = 0;
  if (v2)
    operator delete(v2);
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
}

void sub_20C534FB0(uint64_t a1)
{
  uint64_t *v2;
  void **v3;
  _QWORD *v4;
  _OWORD *v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void **v10;
  _QWORD *v11;
  void **v12;

  v2 = (uint64_t *)operator new(8uLL);
  pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::Iterator(v2, a1, 0);
  v3 = *(void ***)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v2;
  if (v3)
    sub_20C534EC0(a1 + 64, v3);
  v4 = operator new(8uLL);
  v5 = **(_OWORD ***)(a1 + 64);
  if (v5)
  {
    v6 = operator new(0x50uLL);
    *v6 = *v5;
    v7 = v5[1];
    v8 = v5[2];
    v9 = v5[4];
    v6[3] = v5[3];
    v6[4] = v9;
    v6[1] = v7;
    v6[2] = v8;
  }
  else
  {
    v6 = 0;
  }
  *v4 = v6;
  v12 = *(void ***)(a1 + 56);
  v11 = (_QWORD *)(a1 + 56);
  v10 = v12;
  *v11 = v4;
  if (v12)
    sub_20C534EC0((int)v11, v10);
}

void sub_20C535068(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_20C535080(_QWORD *a1, unsigned __int8 *a2)
{
  unint64_t v4;
  int8x8_t v5;
  unint64_t v6;
  uint8x8_t v7;
  unint64_t v8;
  unint64_t v9;
  unsigned __int8 **v10;
  unsigned __int8 *v11;
  uint64_t v12;
  unint64_t v13;

  v4 = sub_20BEF33B4((uint64_t)(a1 + 3), (uint64_t)a2);
  v5 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v5)
    return 0;
  v6 = v4;
  v7 = (uint8x8_t)vcnt_s8(v5);
  v7.i16[0] = vaddlv_u8(v7);
  v8 = v7.u32[0];
  if (v7.u32[0] > 1uLL)
  {
    v9 = v4;
    if (v4 >= *(_QWORD *)&v5)
      v9 = v4 % *(_QWORD *)&v5;
  }
  else
  {
    v9 = (*(_QWORD *)&v5 - 1) & v4;
  }
  v10 = *(unsigned __int8 ***)(*a1 + 8 * v9);
  if (!v10)
    return 0;
  v11 = *v10;
  if (*v10)
  {
    v12 = (uint64_t)(a1 + 4);
    do
    {
      v13 = *((_QWORD *)v11 + 1);
      if (v13 == v6)
      {
        if ((sub_20BEB4EF8(v12, v11 + 16, a2) & 1) != 0)
          return v11;
      }
      else
      {
        if (v8 > 1)
        {
          if (v13 >= *(_QWORD *)&v5)
            v13 %= *(_QWORD *)&v5;
        }
        else
        {
          v13 &= *(_QWORD *)&v5 - 1;
        }
        if (v13 != v9)
          return 0;
      }
      v11 = *(unsigned __int8 **)v11;
    }
    while (v11);
  }
  return v11;
}

uint64_t sub_20C535180(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    MEMORY[0x212B92CE8](*(_QWORD *)a1);
  return a1;
}

unsigned __int8 *sub_20C5351B4(uint64_t a1, unsigned __int8 *a2, __int128 *a3, _OWORD **a4)
{
  unint64_t v4;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint8x8_t v13;
  unint64_t v14;
  unsigned __int8 **v15;
  unsigned __int8 *i;
  unint64_t v17;
  float v18;
  float v19;
  _BOOL8 v20;
  unint64_t v21;
  unint64_t v22;
  size_t v23;
  _QWORD *v24;
  unint64_t v25;
  _QWORD v27[3];

  v9 = (_QWORD *)(a1 + 24);
  v10 = sub_20BEF33B4(a1 + 24, (uint64_t)a2);
  v11 = v10;
  v12 = *(_QWORD *)(a1 + 8);
  if (v12)
  {
    v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    v14 = v13.u32[0];
    if (v13.u32[0] > 1uLL)
    {
      v4 = v10;
      if (v10 >= v12)
        v4 = v10 % v12;
    }
    else
    {
      v4 = (v12 - 1) & v10;
    }
    v15 = *(unsigned __int8 ***)(*(_QWORD *)a1 + 8 * v4);
    if (v15)
    {
      for (i = *v15; i; i = *(unsigned __int8 **)i)
      {
        v17 = *((_QWORD *)i + 1);
        if (v17 == v11)
        {
          if ((sub_20BEB4EF8(a1 + 32, i + 16, a2) & 1) != 0)
            return i;
        }
        else
        {
          if (v14 > 1)
          {
            if (v17 >= v12)
              v17 %= v12;
          }
          else
          {
            v17 &= v12 - 1;
          }
          if (v17 != v4)
            break;
        }
      }
    }
  }
  sub_20C53543C(a1, v11, a3, a4, (uint64_t)v27);
  v18 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v19 = *(float *)(a1 + 32);
  if (!v12 || (float)(v19 * (float)v12) < v18)
  {
    v20 = 1;
    if (v12 >= 3)
      v20 = (v12 & (v12 - 1)) != 0;
    v21 = v20 | (2 * v12);
    v22 = vcvtps_u32_f32(v18 / v19);
    if (v21 <= v22)
      v23 = v22;
    else
      v23 = v21;
    sub_20BDEC6E0(a1, v23);
    v12 = *(_QWORD *)(a1 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v11 >= v12)
        v4 = v11 % v12;
      else
        v4 = v11;
    }
    else
    {
      v4 = (v12 - 1) & v11;
    }
  }
  v24 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v24)
  {
    *(_QWORD *)v27[0] = *v24;
    *v24 = v27[0];
  }
  else
  {
    *(_QWORD *)v27[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v27[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = a1 + 16;
    if (*(_QWORD *)v27[0])
    {
      v25 = *(_QWORD *)(*(_QWORD *)v27[0] + 8);
      if ((v12 & (v12 - 1)) != 0)
      {
        if (v25 >= v12)
          v25 %= v12;
      }
      else
      {
        v25 &= v12 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v25) = v27[0];
    }
  }
  i = (unsigned __int8 *)v27[0];
  v27[0] = 0;
  ++*v9;
  sub_20C535548((uint64_t)v27, 0);
  return i;
}

void sub_20C535424(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20C535548((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C53543C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, _OWORD **a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t result;

  v9 = a1 + 16;
  v10 = operator new(0x30uLL);
  *(_QWORD *)a5 = v10;
  *(_QWORD *)(a5 + 8) = v9;
  *(_BYTE *)(a5 + 16) = 0;
  *v10 = 0;
  v10[1] = a2;
  result = sub_20C5354C0((uint64_t)(v10 + 2), a3, a4);
  *(_BYTE *)(a5 + 16) = 1;
  return result;
}

void sub_20C5354A8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C535548(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C5354C0(uint64_t a1, __int128 *a2, _OWORD **a3)
{
  __int128 v4;
  _OWORD *v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v4 = *a2;
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  *(_OWORD *)a1 = v4;
  *((_QWORD *)a2 + 1) = 0;
  *((_QWORD *)a2 + 2) = 0;
  *(_QWORD *)a2 = 0;
  v5 = *a3;
  if (*a3)
  {
    v6 = operator new(0x50uLL);
    *v6 = *v5;
    v7 = v5[1];
    v8 = v5[2];
    v9 = v5[4];
    v6[3] = v5[3];
    v6[4] = v9;
    v6[1] = v7;
    v6[2] = v8;
  }
  else
  {
    v6 = 0;
  }
  *(_QWORD *)(a1 + 24) = v6;
  return a1;
}

void sub_20C53552C(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void sub_20C535548(uint64_t a1, uint64_t a2)
{
  void *v2;

  v2 = *(void **)a1;
  *(_QWORD *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      sub_20C534F6C((uint64_t)v2 + 16);
    operator delete(v2);
  }
}

uint64_t sub_20C53558C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    MEMORY[0x212B92D00](*(_QWORD *)a1);
  return a1;
}

void sub_20C5355C0(uint64_t a1, _DWORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  _QWORD v5[4];
  char v6;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = v2 - *(_QWORD *)a1 + *(_QWORD *)(a1 + 16);
  if (v3 < 4 || v3 > v2)
  {
    v5[0] = "usd/zipFile.cpp";
    v5[1] = "Read";
    v5[2] = 80;
    v5[3] = "void pxrInternal__aapl__pxrReserved__::(anonymous namespace)::_InputStream::Read(T *) [T = unsigned int]";
    v6 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v5, 3, (pxrInternal__aapl__pxrReserved__ *)"Failed to read from zip input stream. Corrupt data.");
  }
  else
  {
    *a2 = **(_DWORD **)a1;
    *(_QWORD *)a1 += 4;
  }
}

void sub_20C535648(uint64_t a1, _WORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  _QWORD v5[4];
  char v6;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = v2 - *(_QWORD *)a1 + *(_QWORD *)(a1 + 16);
  if (v3 < 2 || v3 > v2)
  {
    v5[0] = "usd/zipFile.cpp";
    v5[1] = "Read";
    v5[2] = 80;
    v5[3] = "void pxrInternal__aapl__pxrReserved__::(anonymous namespace)::_InputStream::Read(T *) [T = unsigned short]";
    v6 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v5, 3, (pxrInternal__aapl__pxrReserved__ *)"Failed to read from zip input stream. Corrupt data.");
  }
  else
  {
    *a2 = **(_WORD **)a1;
    *(_QWORD *)a1 += 2;
  }
}

_QWORD *sub_20C5356D0(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;

  *a1 = a2;
  v4 = operator new(0x20uLL);
  *v4 = &unk_24C53BF88;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_20C535720(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  a10 = 0;
  if (v10)
    sub_20C5357A0((uint64_t)&a10, v10);
  _Unwind_Resume(exception_object);
}

void sub_20C535744(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_20C535758(uint64_t a1)
{
  sub_20C5357A0(a1 + 24, *(_QWORD *)(a1 + 24));
}

uint64_t sub_20C535760(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C53BFD8))
    return a1 + 24;
  else
    return 0;
}

void sub_20C5357A0(uint64_t a1, uint64_t a2)
{
  std::mutex *v3;
  void **v4;
  void **v5;
  void *v6;

  if (a2)
  {
    v3 = (std::mutex *)(a2 + 72);
    std::condition_variable::~condition_variable((std::condition_variable *)(a2 + 184));
    std::condition_variable::~condition_variable((std::condition_variable *)(a2 + 136));
    std::mutex::~mutex(v3);
    v4 = *(void ***)(a2 + 64);
    *(_QWORD *)(a2 + 64) = 0;
    if (v4)
      sub_20C534EC0(a2 + 64, v4);
    v5 = *(void ***)(a2 + 56);
    *(_QWORD *)(a2 + 56) = 0;
    if (v5)
      sub_20C534EC0(a2 + 56, v5);
    sub_20C534EF8(a2 + 16);
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)a2);
    operator delete(v6);
  }
}

uint64_t sub_20C535818(uint64_t a1)
{
  void **v2;
  void **v3;
  void **v4;

  v3 = *(void ***)(a1 + 8);
  v2 = *(void ***)(a1 + 16);
  if (v2 != v3)
  {
    do
    {
      v4 = v2 - 8;
      *(_QWORD *)(a1 + 16) = v2 - 8;
      if (*((char *)v2 - 41) < 0)
      {
        operator delete(*v4);
        v4 = *(void ***)(a1 + 16);
      }
      v2 = v4;
    }
    while (v4 != v3);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void sub_20C535878(int a1, pxrInternal__aapl__pxrReserved__::TfSafeOutputFile *this)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;

  if (this)
  {
    v3 = *((_QWORD *)this + 7);
    if (v3)
    {
      v4 = *((_QWORD *)this + 8);
      v5 = (void *)*((_QWORD *)this + 7);
      if (v4 != v3)
      {
        do
        {
          if (*(char *)(v4 - 41) < 0)
            operator delete(*(void **)(v4 - 64));
          v4 -= 64;
        }
        while (v4 != v3);
        v5 = (void *)*((_QWORD *)this + 7);
      }
      *((_QWORD *)this + 8) = v3;
      operator delete(v5);
    }
    pxrInternal__aapl__pxrReserved__::TfSafeOutputFile::~TfSafeOutputFile(this);
    operator delete(v6);
  }
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeom_GetPositionsVelocitiesAndAccelerations(pxrInternal__aapl__pxrReserved__::UsdAttribute *a1, pxrInternal__aapl__pxrReserved__::UsdAttribute *a2, pxrInternal__aapl__pxrReserved__::UsdAttribute *a3, uint64_t a4, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a5, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a6, double *a7, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a8, double a9, uint64_t a10)
{
  uint64_t v18;
  const char *v19;
  char *v20;
  const char *Text;
  char *v22;
  int v24;
  int v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  const char *v32;
  char *v33;
  const char *v34;
  char *v35;
  int v36;
  double v37;
  double v38;
  double v39;
  double v40;
  BOOL v41;
  const char *v42;
  char *v43;
  const char *v44;
  char *v45;
  int v46;
  int v47;
  char v48;
  char v49;
  char v50;
  double v51;
  double v52;
  double v53;
  char v54;
  char v55;
  char v56;
  double v57;
  double v58;
  char *v59;
  const char *v60;
  uint64_t v61;
  const char *v62;
  char v63;
  BOOL v64;
  double v65;
  double v66;
  double v67;
  _QWORD v68[2];
  _QWORD v69[4];

  v69[2] = *MEMORY[0x24BDAC8D0];
  v66 = 0.0;
  v67 = 0.0;
  v65 = 0.0;
  v64 = 0;
  if ((sub_20C535E8C(a1, &v67, &v66, &v65, &v64, a5, a9) & 1) == 0)
  {
    v59 = "usdGeom/samplingUtils.cpp";
    v60 = "UsdGeom_GetPositionsVelocitiesAndAccelerations";
    v61 = 184;
    v62 = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeom_GetPositionsVelocitiesAndAccelerations(const UsdAttribute &, co"
          "nst UsdAttribute &, const UsdAttribute &, UsdTimeCode, size_t, VtVec3fArray *, VtVec3fArray *, UsdTimeCode *, "
          "VtVec3fArray *, const UsdPrim &)";
    v63 = 0;
    sub_20C348EEC(a10, (int *)&v58);
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v58);
    pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v59, (pxrInternal__aapl__pxrReserved__ *)"%s -- no positions", v22, Text);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
    goto LABEL_6;
  }
  v18 = *(_QWORD *)a5;
  if (a4 && v18 != a4)
  {
    v59 = "usdGeom/samplingUtils.cpp";
    v60 = "UsdGeom_GetPositionsVelocitiesAndAccelerations";
    v61 = 195;
    v62 = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeom_GetPositionsVelocitiesAndAccelerations(const UsdAttribute &, co"
          "nst UsdAttribute &, const UsdAttribute &, UsdTimeCode, size_t, VtVec3fArray *, VtVec3fArray *, UsdTimeCode *, "
          "VtVec3fArray *, const UsdPrim &)";
    v63 = 0;
    sub_20C348EEC(a10, (int *)&v58);
    v19 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v58);
    pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v59, (pxrInternal__aapl__pxrReserved__ *)"%s -- found [%zu] positions, but expected [%zu]", v20, v19, *(_QWORD *)a5, a4);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
LABEL_6:
    sub_20BFD265C(&v58);
    return 0;
  }
  v57 = 0.0;
  v58 = 0.0;
  v56 = 1;
  v55 = 0;
  v54 = 0;
  if (!v64 || (sub_20C535E8C(a2, a7, &v58, &v57, (BOOL *)&v56, a6, a9) & 1) == 0)
    sub_20BF56210(a6);
  v24 = v56;
  v25 = v56 != 0;
  v27 = v65;
  v26 = v66;
  v28 = v67;
  v30 = v57;
  v29 = v58;
  v31 = *a7;
  v69[1] = off_24C51EC58;
  sub_20BF56B40(v69, (uint64_t)a6);
  LOBYTE(v25) = sub_20C536020(v25, (pxrInternal__aapl__pxrReserved__::VtValue *)v69, v18, &v55, &v54, v26, v27, v28, v29, v30, v31);
  sub_20BF4C2D8((uint64_t)v69);
  if ((v25 & 1) == 0)
  {
    if (!*(_QWORD *)a6 || v55)
    {
      if (!*(_QWORD *)a6 || !v55 || v54)
        goto LABEL_19;
      v59 = "usdGeom/samplingUtils.cpp";
      v60 = "UsdGeom_GetPositionsVelocitiesAndAccelerations";
      v61 = 241;
      v62 = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeom_GetPositionsVelocitiesAndAccelerations(const UsdAttribute &, "
            "const UsdAttribute &, const UsdAttribute &, UsdTimeCode, size_t, VtVec3fArray *, VtVec3fArray *, UsdTimeCode"
            " *, VtVec3fArray *, const UsdPrim &)";
      v63 = 0;
      sub_20C348EEC(a10, (int *)&v53);
      v34 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v53);
      pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v59, (pxrInternal__aapl__pxrReserved__ *)"%s -- found [%zu] velocities, but expected [%zu]", v35, v34, *(_QWORD *)a6, v18);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v53 + 1);
    }
    else
    {
      v59 = "usdGeom/samplingUtils.cpp";
      v60 = "UsdGeom_GetPositionsVelocitiesAndAccelerations";
      v61 = 233;
      v62 = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeom_GetPositionsVelocitiesAndAccelerations(const UsdAttribute &, "
            "const UsdAttribute &, const UsdAttribute &, UsdTimeCode, size_t, VtVec3fArray *, VtVec3fArray *, UsdTimeCode"
            " *, VtVec3fArray *, const UsdPrim &)";
      v63 = 0;
      sub_20C348EEC(a10, (int *)&v53);
      v32 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v53);
      pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v59, (pxrInternal__aapl__pxrReserved__ *)"%s -- velocity samples are not aligned with position samples", v33, v32);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v53 + 1);
    }
    sub_20BFD265C(&v53);
LABEL_19:
    sub_20BF56210(a6);
  }
  v52 = 0.0;
  v53 = 0.0;
  v51 = 0.0;
  v50 = 1;
  v49 = 0;
  v48 = 0;
  if (!v24 || !*(_QWORD *)a6 || (sub_20C535E8C(a3, &v53, &v52, &v51, (BOOL *)&v50, a8, a9) & 1) == 0)
    sub_20BF56210(a8);
  v36 = v50 != 0;
  v37 = *a7;
  v39 = v51;
  v38 = v52;
  v40 = v53;
  v68[1] = off_24C51EC58;
  sub_20BF56B40(v68, (uint64_t)a8);
  v41 = sub_20C536020(v36, (pxrInternal__aapl__pxrReserved__::VtValue *)v68, v18, &v49, &v48, v29, v30, v37, v38, v39, v40);
  sub_20BF4C2D8((uint64_t)v68);
  if (v41)
    return 1;
  if (!*(_QWORD *)a8 || v49)
  {
    if (!*(_QWORD *)a8 || !v49 || v48)
      goto LABEL_33;
    v59 = "usdGeom/samplingUtils.cpp";
    v60 = "UsdGeom_GetPositionsVelocitiesAndAccelerations";
    v61 = 290;
    v62 = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeom_GetPositionsVelocitiesAndAccelerations(const UsdAttribute &, co"
          "nst UsdAttribute &, const UsdAttribute &, UsdTimeCode, size_t, VtVec3fArray *, VtVec3fArray *, UsdTimeCode *, "
          "VtVec3fArray *, const UsdPrim &)";
    v63 = 0;
    sub_20C348EEC(a10, &v46);
    v44 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v46);
    pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v59, (pxrInternal__aapl__pxrReserved__ *)"%s -- found [%zu] accelerations, but expected [%zu]", v45, v44, *(_QWORD *)a8, v18);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v47);
  }
  else
  {
    v59 = "usdGeom/samplingUtils.cpp";
    v60 = "UsdGeom_GetPositionsVelocitiesAndAccelerations";
    v61 = 282;
    v62 = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeom_GetPositionsVelocitiesAndAccelerations(const UsdAttribute &, co"
          "nst UsdAttribute &, const UsdAttribute &, UsdTimeCode, size_t, VtVec3fArray *, VtVec3fArray *, UsdTimeCode *, "
          "VtVec3fArray *, const UsdPrim &)";
    v63 = 0;
    sub_20C348EEC(a10, &v46);
    v42 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v46);
    pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v59, (pxrInternal__aapl__pxrReserved__ *)"%s -- acceleration samples are not aligned with velocity samples", v43, v42);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v47);
  }
  sub_20BFD265C(&v46);
LABEL_33:
  sub_20BF56210(a8);
  return 1;
}

void sub_20C535E0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,char a32)
{
  if (a2)
    sub_20BDC12F4(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C535E8C(pxrInternal__aapl__pxrReserved__::UsdAttribute *this, double *a2, double *a3, double *a4, BOOL *a5, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a6, double a7)
{
  double v13;
  int v14;
  double v15;
  double v16;
  BOOL v18;
  double v19;
  double v20;
  double v21;

  v21 = a7;
  v19 = 0.0;
  v20 = 0.0;
  v18 = 0;
  if (pxrInternal__aapl__pxrReserved__::UsdAttribute::GetBracketingTimeSamples(this, a7, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v20, &v19, &v18))
  {
    v13 = v18 ? v20 : NAN;
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::GfVec3f>>((uint64_t)this, a6);
    if (v14)
    {
      v16 = v19;
      v15 = v20;
      if (vabdd_f64(v20, v19) >= 2.22044605e-16)
      {
LABEL_9:
        *a2 = v13;
        *a3 = v15;
        *a4 = v16;
        *a5 = v18;
        return 1;
      }
      if (pxrInternal__aapl__pxrReserved__::UsdAttribute::GetBracketingTimeSamples(this, v21 + 0.0000000044408921, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v20, &v19, &v18))
      {
        v16 = v19;
        v15 = v20;
        goto LABEL_9;
      }
    }
  }
  return 0;
}

BOOL sub_20C536020(int a1, pxrInternal__aapl__pxrReserved__::VtValue *this, uint64_t a3, _BYTE *a4, _BYTE *a5, double a6, double a7, double a8, double a9, double a10, double a11)
{
  if (!a1 || vabdd_f64(a6, a9) >= 2.22044605e-16)
  {
    *a5 = 1;
LABEL_7:
    *a4 = 0;
    goto LABEL_8;
  }
  *a4 = 1;
  *a5 = 1;
  if (vabdd_f64(a7, a10) >= 2.22044605e-16 || vabdd_f64(a8, a11) >= 2.22044605e-16)
    goto LABEL_7;
LABEL_8:
  if (pxrInternal__aapl__pxrReserved__::VtValue::_GetNumElements(this) != a3)
    *a5 = 0;
  return *a4 && *a5 != 0;
}

uint64_t sub_20C536138(pxrInternal__aapl__pxrReserved__::UsdAttribute *this, pxrInternal__aapl__pxrReserved__::UsdAttribute *a2, uint64_t a3, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a4, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a5, double *a6, uint64_t a7, double a8)
{
  double v16;
  int v17;
  double v18;
  double v19;
  _BOOL4 v20;
  uint64_t v21;
  const char *Text;
  char *v23;
  _BOOL4 v25;
  double v26;
  double v27;
  double v28;
  BOOL v29;
  const char *v30;
  char *v31;
  const char *v32;
  char *v33;
  __int16 v34;
  double v35;
  const char *v36;
  uint64_t v37;
  const char *v38;
  char v39;
  double v40;
  BOOL v41;
  double v42;
  double v43;
  _QWORD v44[3];

  v44[2] = *MEMORY[0x24BDAC8D0];
  v35 = a8;
  v42 = 0.0;
  v43 = 0.0;
  v41 = 0;
  if (!pxrInternal__aapl__pxrReserved__::UsdAttribute::GetBracketingTimeSamples(this, a8, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v43, &v42, &v41))return 0;
  v16 = v41 ? v43 : NAN;
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::GfQuatf>>((uint64_t)this, a4);
  if (!v17)
    return 0;
  v19 = v42;
  v18 = v43;
  if (vabdd_f64(v43, v42) < 2.22044605e-16)
  {
    v40 = v35 + 0.0000000044408921;
    if (!pxrInternal__aapl__pxrReserved__::UsdAttribute::GetBracketingTimeSamples(this, v35 + 0.0000000044408921, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v43, &v42, &v41))return 0;
    v19 = v42;
    v18 = v43;
  }
  v20 = v41;
  v21 = *(_QWORD *)a4;
  if (a3 && v21 != a3)
  {
    v35 = COERCE_DOUBLE("usdGeom/samplingUtils.cpp");
    v36 = "_UsdGeom_GetOrientationsAndAngularVelocities";
    v37 = 336;
    v38 = "BOOL pxrInternal__aapl__pxrReserved__::_UsdGeom_GetOrientationsAndAngularVelocities(const UsdAttribute &, cons"
          "t UsdAttribute &, UsdTimeCode, size_t, VtArray<QuatType> *, VtVec3fArray *, UsdTimeCode *, const UsdPrim &) [Q"
          "uatType = pxrInternal__aapl__pxrReserved__::GfQuatf]";
    v39 = 0;
    sub_20C348EEC(a7, (int *)&v43);
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v43);
    pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v35, (pxrInternal__aapl__pxrReserved__ *)"%s -- found [%zu] orientations, but expected [%zu]", v23, Text, *(_QWORD *)a4, a3);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v43 + 1);
    sub_20BFD265C(&v43);
    return 0;
  }
  v42 = 0.0;
  v43 = 0.0;
  v41 = 1;
  v34 = 0;
  if (!v20 || (sub_20C535E8C(a2, a6, &v43, &v42, &v41, a5, a8) & 1) == 0)
    sub_20BF56210(a5);
  v25 = v41;
  v27 = v42;
  v26 = v43;
  v28 = *a6;
  v44[1] = off_24C51EC58;
  sub_20BF56B40(v44, (uint64_t)a5);
  v29 = sub_20C536020(v25, (pxrInternal__aapl__pxrReserved__::VtValue *)v44, v21, (_BYTE *)&v34 + 1, &v34, v18, v19, v16, v26, v27, v28);
  sub_20BF4C2D8((uint64_t)v44);
  if (!v29)
  {
    if (!*(_QWORD *)a5 || HIBYTE(v34))
    {
      if (!*(_QWORD *)a5 || !HIBYTE(v34) || (_BYTE)v34)
        goto LABEL_25;
      v35 = COERCE_DOUBLE("usdGeom/samplingUtils.cpp");
      v36 = "_UsdGeom_GetOrientationsAndAngularVelocities";
      v37 = 382;
      v38 = "BOOL pxrInternal__aapl__pxrReserved__::_UsdGeom_GetOrientationsAndAngularVelocities(const UsdAttribute &, co"
            "nst UsdAttribute &, UsdTimeCode, size_t, VtArray<QuatType> *, VtVec3fArray *, UsdTimeCode *, const UsdPrim &"
            ") [QuatType = pxrInternal__aapl__pxrReserved__::GfQuatf]";
      v39 = 0;
      sub_20C348EEC(a7, (int *)&v40);
      v32 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v40);
      pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v35, (pxrInternal__aapl__pxrReserved__ *)"%s -- found [%zu] angular velocities, but expected [%zu]", v33, v32, *(_QWORD *)a5, v21);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v40 + 1);
    }
    else
    {
      v35 = COERCE_DOUBLE("usdGeom/samplingUtils.cpp");
      v36 = "_UsdGeom_GetOrientationsAndAngularVelocities";
      v37 = 374;
      v38 = "BOOL pxrInternal__aapl__pxrReserved__::_UsdGeom_GetOrientationsAndAngularVelocities(const UsdAttribute &, co"
            "nst UsdAttribute &, UsdTimeCode, size_t, VtArray<QuatType> *, VtVec3fArray *, UsdTimeCode *, const UsdPrim &"
            ") [QuatType = pxrInternal__aapl__pxrReserved__::GfQuatf]";
      v39 = 0;
      sub_20C348EEC(a7, (int *)&v40);
      v30 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v40);
      pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v35, (pxrInternal__aapl__pxrReserved__ *)"%s -- angular velocity samples are not aligned with orientation samples", v31, v30);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v40 + 1);
    }
    sub_20BFD265C(&v40);
LABEL_25:
    sub_20BF56210(a5);
  }
  return 1;
}

void sub_20C536524(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,char a21,int a22,__int16 a23,char a24,char a25)
{
  if (a2)
    sub_20BDC12F4(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C53657C(pxrInternal__aapl__pxrReserved__::UsdAttribute *this, pxrInternal__aapl__pxrReserved__::UsdAttribute *a2, uint64_t a3, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a4, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a5, double *a6, uint64_t a7, double a8)
{
  double v16;
  int v17;
  double v18;
  double v19;
  _BOOL4 v20;
  uint64_t v21;
  const char *Text;
  char *v23;
  _BOOL4 v25;
  double v26;
  double v27;
  double v28;
  BOOL v29;
  const char *v30;
  char *v31;
  const char *v32;
  char *v33;
  __int16 v34;
  double v35;
  const char *v36;
  uint64_t v37;
  const char *v38;
  char v39;
  double v40;
  BOOL v41;
  double v42;
  double v43;
  _QWORD v44[3];

  v44[2] = *MEMORY[0x24BDAC8D0];
  v35 = a8;
  v42 = 0.0;
  v43 = 0.0;
  v41 = 0;
  if (!pxrInternal__aapl__pxrReserved__::UsdAttribute::GetBracketingTimeSamples(this, a8, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v43, &v42, &v41))return 0;
  v16 = v41 ? v43 : NAN;
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::GfQuath>>((uint64_t)this, a4);
  if (!v17)
    return 0;
  v19 = v42;
  v18 = v43;
  if (vabdd_f64(v43, v42) < 2.22044605e-16)
  {
    v40 = v35 + 0.0000000044408921;
    if (!pxrInternal__aapl__pxrReserved__::UsdAttribute::GetBracketingTimeSamples(this, v35 + 0.0000000044408921, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v43, &v42, &v41))return 0;
    v19 = v42;
    v18 = v43;
  }
  v20 = v41;
  v21 = *(_QWORD *)a4;
  if (a3 && v21 != a3)
  {
    v35 = COERCE_DOUBLE("usdGeom/samplingUtils.cpp");
    v36 = "_UsdGeom_GetOrientationsAndAngularVelocities";
    v37 = 336;
    v38 = "BOOL pxrInternal__aapl__pxrReserved__::_UsdGeom_GetOrientationsAndAngularVelocities(const UsdAttribute &, cons"
          "t UsdAttribute &, UsdTimeCode, size_t, VtArray<QuatType> *, VtVec3fArray *, UsdTimeCode *, const UsdPrim &) [Q"
          "uatType = pxrInternal__aapl__pxrReserved__::GfQuath]";
    v39 = 0;
    sub_20C348EEC(a7, (int *)&v43);
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v43);
    pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v35, (pxrInternal__aapl__pxrReserved__ *)"%s -- found [%zu] orientations, but expected [%zu]", v23, Text, *(_QWORD *)a4, a3);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v43 + 1);
    sub_20BFD265C(&v43);
    return 0;
  }
  v42 = 0.0;
  v43 = 0.0;
  v41 = 1;
  v34 = 0;
  if (!v20 || (sub_20C535E8C(a2, a6, &v43, &v42, &v41, a5, a8) & 1) == 0)
    sub_20BF56210(a5);
  v25 = v41;
  v27 = v42;
  v26 = v43;
  v28 = *a6;
  v44[1] = off_24C51EC58;
  sub_20BF56B40(v44, (uint64_t)a5);
  v29 = sub_20C536020(v25, (pxrInternal__aapl__pxrReserved__::VtValue *)v44, v21, (_BYTE *)&v34 + 1, &v34, v18, v19, v16, v26, v27, v28);
  sub_20BF4C2D8((uint64_t)v44);
  if (!v29)
  {
    if (!*(_QWORD *)a5 || HIBYTE(v34))
    {
      if (!*(_QWORD *)a5 || !HIBYTE(v34) || (_BYTE)v34)
        goto LABEL_25;
      v35 = COERCE_DOUBLE("usdGeom/samplingUtils.cpp");
      v36 = "_UsdGeom_GetOrientationsAndAngularVelocities";
      v37 = 382;
      v38 = "BOOL pxrInternal__aapl__pxrReserved__::_UsdGeom_GetOrientationsAndAngularVelocities(const UsdAttribute &, co"
            "nst UsdAttribute &, UsdTimeCode, size_t, VtArray<QuatType> *, VtVec3fArray *, UsdTimeCode *, const UsdPrim &"
            ") [QuatType = pxrInternal__aapl__pxrReserved__::GfQuath]";
      v39 = 0;
      sub_20C348EEC(a7, (int *)&v40);
      v32 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v40);
      pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v35, (pxrInternal__aapl__pxrReserved__ *)"%s -- found [%zu] angular velocities, but expected [%zu]", v33, v32, *(_QWORD *)a5, v21);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v40 + 1);
    }
    else
    {
      v35 = COERCE_DOUBLE("usdGeom/samplingUtils.cpp");
      v36 = "_UsdGeom_GetOrientationsAndAngularVelocities";
      v37 = 374;
      v38 = "BOOL pxrInternal__aapl__pxrReserved__::_UsdGeom_GetOrientationsAndAngularVelocities(const UsdAttribute &, co"
            "nst UsdAttribute &, UsdTimeCode, size_t, VtArray<QuatType> *, VtVec3fArray *, UsdTimeCode *, const UsdPrim &"
            ") [QuatType = pxrInternal__aapl__pxrReserved__::GfQuath]";
      v39 = 0;
      sub_20C348EEC(a7, (int *)&v40);
      v30 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v40);
      pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v35, (pxrInternal__aapl__pxrReserved__ *)"%s -- angular velocity samples are not aligned with orientation samples", v31, v30);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v40 + 1);
    }
    sub_20BFD265C(&v40);
LABEL_25:
    sub_20BF56210(a5);
  }
  return 1;
}

void sub_20C536968(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,char a21,int a22,__int16 a23,char a24,char a25)
{
  if (a2)
    sub_20BDC12F4(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeom_GetScales(pxrInternal__aapl__pxrReserved__::UsdAttribute *a1, uint64_t a2, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a3, uint64_t a4, double a5)
{
  uint64_t v8;
  const char *Text;
  char *v10;
  int v12;
  int v13;
  _QWORD v14[4];
  char v15;
  uint64_t v16;
  double v17;
  BOOL v18;
  uint64_t v19;

  v19 = 0;
  v18 = 0;
  v16 = 0;
  v17 = 0.0;
  v8 = sub_20C535E8C(a1, (double *)&v19, &v17, (double *)&v16, &v18, a3, a5);
  if ((_DWORD)v8 && *(_QWORD *)a3 != a2)
  {
    v14[0] = "usdGeom/samplingUtils.cpp";
    v14[1] = "UsdGeom_GetScales";
    v14[2] = 473;
    v14[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeom_GetScales(const UsdAttribute &, const UsdTimeCode, size_t, V"
             "tVec3fArray *, const UsdPrim &)";
    v15 = 0;
    sub_20C348EEC(a4, &v12);
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v12);
    pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)v14, (pxrInternal__aapl__pxrReserved__ *)"%s -- found [%zu] scales, but expected [%zu]", v10, Text, *(_QWORD *)a3, a2);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
    sub_20BFD265C(&v12);
  }
  return v8;
}

void sub_20C536A9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

double pxrInternal__aapl__pxrReserved__::UsdGeom_CalculateTimeDelta(double a1, double a2, double a3)
{
  return (a1 - a2) / a3;
}

void sub_20C536B20()
{
  uint64_t v0;
  uint64_t v1;
  void *__p;
  uint64_t v3;
  uint64_t v4;
  void *v5[2];
  char v6;

  sub_20BDDC0E4(v5, "USDGEOM_EXTENT");
  __p = 0;
  v3 = 0;
  v4 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C53BFF0, 0, (uint64_t)v5, (uint64_t)&__p);
  if (SHIBYTE(v4) < 0)
    operator delete(__p);
  if (v6 < 0)
    operator delete(v5[0]);
  v0 = sub_20C536C44();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v0, "USDGEOM_EXTENT", "Reports when Boundable extents are computed dynamically because no cached authored attribute is present in the scene.");
  sub_20BDDC0E4(v5, "USDGEOM_BBOX");
  __p = 0;
  v3 = 0;
  v4 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C53BFF0, 1, (uint64_t)v5, (uint64_t)&__p);
  if (SHIBYTE(v4) < 0)
    operator delete(__p);
  if (v6 < 0)
    operator delete(v5[0]);
  v1 = sub_20C536C44();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v1 + 4, "USDGEOM_BBOX", "UsdGeom bounding box computation");
}

void sub_20C536C14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
    operator delete(__p);
  if (a20 < 0)
    operator delete(a15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C536C44()
{
  unsigned __int8 v0;
  _DWORD *v2;

  v0 = atomic_load((unsigned __int8 *)&qword_25473D0A0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25473D0A0))
  {
    v2 = operator new(0xCuLL);
    v2[2] = 0;
    *(_QWORD *)v2 = 0;
    qword_25473D098 = (uint64_t)v2;
    __cxa_guard_release(&qword_25473D0A0);
  }
  return qword_25473D098;
}

void sub_20C536CA8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25473D0A0);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *pxrInternal__aapl__pxrReserved__::UsdGeomTokensType::UsdGeomTokensType(pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *this)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  uint64_t v26;
  unsigned int *v27;
  unsigned int v28;
  uint64_t v29;
  unsigned int *v30;
  unsigned int v31;
  uint64_t v32;
  unsigned int *v33;
  unsigned int v34;
  uint64_t v35;
  unsigned int *v36;
  unsigned int v37;
  uint64_t v38;
  unsigned int *v39;
  unsigned int v40;
  uint64_t v41;
  unsigned int *v42;
  unsigned int v43;
  uint64_t v44;
  unsigned int *v45;
  unsigned int v46;
  uint64_t v47;
  unsigned int *v48;
  unsigned int v49;
  uint64_t v50;
  unsigned int *v51;
  unsigned int v52;
  uint64_t v53;
  unsigned int *v54;
  unsigned int v55;
  uint64_t v56;
  unsigned int *v57;
  unsigned int v58;
  uint64_t v59;
  unsigned int *v60;
  unsigned int v61;
  uint64_t v62;
  unsigned int *v63;
  unsigned int v64;
  uint64_t v65;
  unsigned int *v66;
  unsigned int v67;
  uint64_t v68;
  unsigned int *v69;
  unsigned int v70;
  uint64_t v71;
  unsigned int *v72;
  unsigned int v73;
  uint64_t v74;
  unsigned int *v75;
  unsigned int v76;
  uint64_t v77;
  unsigned int *v78;
  unsigned int v79;
  uint64_t v80;
  unsigned int *v81;
  unsigned int v82;
  uint64_t v83;
  unsigned int *v84;
  unsigned int v85;
  uint64_t v86;
  unsigned int *v87;
  unsigned int v88;
  uint64_t v89;
  unsigned int *v90;
  unsigned int v91;
  uint64_t v92;
  unsigned int *v93;
  unsigned int v94;
  uint64_t v95;
  unsigned int *v96;
  unsigned int v97;
  uint64_t v98;
  unsigned int *v99;
  unsigned int v100;
  uint64_t v101;
  unsigned int *v102;
  unsigned int v103;
  uint64_t v104;
  unsigned int *v105;
  unsigned int v106;
  uint64_t v107;
  unsigned int *v108;
  unsigned int v109;
  uint64_t v110;
  unsigned int *v111;
  unsigned int v112;
  uint64_t v113;
  unsigned int *v114;
  unsigned int v115;
  uint64_t v116;
  unsigned int *v117;
  unsigned int v118;
  uint64_t v119;
  unsigned int *v120;
  unsigned int v121;
  uint64_t v122;
  unsigned int *v123;
  unsigned int v124;
  uint64_t v125;
  unsigned int *v126;
  unsigned int v127;
  uint64_t v128;
  unsigned int *v129;
  unsigned int v130;
  uint64_t v131;
  unsigned int *v132;
  unsigned int v133;
  uint64_t v134;
  unsigned int *v135;
  unsigned int v136;
  uint64_t v137;
  unsigned int *v138;
  unsigned int v139;
  uint64_t v140;
  unsigned int *v141;
  unsigned int v142;
  uint64_t v143;
  unsigned int *v144;
  unsigned int v145;
  uint64_t v146;
  unsigned int *v147;
  unsigned int v148;
  uint64_t v149;
  unsigned int *v150;
  unsigned int v151;
  uint64_t v152;
  unsigned int *v153;
  unsigned int v154;
  uint64_t v155;
  unsigned int *v156;
  unsigned int v157;
  uint64_t v158;
  unsigned int *v159;
  unsigned int v160;
  uint64_t v161;
  unsigned int *v162;
  unsigned int v163;
  uint64_t v164;
  unsigned int *v165;
  unsigned int v166;
  uint64_t v167;
  unsigned int *v168;
  unsigned int v169;
  uint64_t v170;
  unsigned int *v171;
  unsigned int v172;
  uint64_t v173;
  unsigned int *v174;
  unsigned int v175;
  uint64_t v176;
  unsigned int *v177;
  unsigned int v178;
  uint64_t v179;
  unsigned int *v180;
  unsigned int v181;
  uint64_t v182;
  unsigned int *v183;
  unsigned int v184;
  uint64_t v185;
  unsigned int *v186;
  unsigned int v187;
  uint64_t v188;
  unsigned int *v189;
  unsigned int v190;
  uint64_t v191;
  unsigned int *v192;
  unsigned int v193;
  uint64_t v194;
  unsigned int *v195;
  unsigned int v196;
  uint64_t v197;
  unsigned int *v198;
  unsigned int v199;
  uint64_t v200;
  unsigned int *v201;
  unsigned int v202;
  uint64_t v203;
  unsigned int *v204;
  unsigned int v205;
  uint64_t v206;
  unsigned int *v207;
  unsigned int v208;
  uint64_t v209;
  unsigned int *v210;
  unsigned int v211;
  uint64_t v212;
  unsigned int *v213;
  unsigned int v214;
  uint64_t v215;
  unsigned int *v216;
  unsigned int v217;
  uint64_t v218;
  unsigned int *v219;
  unsigned int v220;
  uint64_t v221;
  unsigned int *v222;
  unsigned int v223;
  uint64_t v224;
  unsigned int *v225;
  unsigned int v226;
  uint64_t v227;
  unsigned int *v228;
  unsigned int v229;
  uint64_t v230;
  unsigned int *v231;
  unsigned int v232;
  uint64_t v233;
  unsigned int *v234;
  unsigned int v235;
  uint64_t v236;
  unsigned int *v237;
  unsigned int v238;
  uint64_t v239;
  unsigned int *v240;
  unsigned int v241;
  uint64_t v242;
  unsigned int *v243;
  unsigned int v244;
  uint64_t v245;
  unsigned int *v246;
  unsigned int v247;
  uint64_t v248;
  unsigned int *v249;
  unsigned int v250;
  uint64_t v251;
  unsigned int *v252;
  unsigned int v253;
  uint64_t v254;
  unsigned int *v255;
  unsigned int v256;
  uint64_t v257;
  unsigned int *v258;
  unsigned int v259;
  uint64_t v260;
  unsigned int *v261;
  unsigned int v262;
  uint64_t v263;
  unsigned int *v264;
  unsigned int v265;
  uint64_t v266;
  unsigned int *v267;
  unsigned int v268;
  uint64_t v269;
  unsigned int *v270;
  unsigned int v271;
  uint64_t v272;
  unsigned int *v273;
  unsigned int v274;
  uint64_t v275;
  unsigned int *v276;
  unsigned int v277;
  uint64_t v278;
  unsigned int *v279;
  unsigned int v280;
  uint64_t v281;
  unsigned int *v282;
  unsigned int v283;
  uint64_t v284;
  unsigned int *v285;
  unsigned int v286;
  uint64_t v287;
  unsigned int *v288;
  unsigned int v289;
  uint64_t v290;
  unsigned int *v291;
  unsigned int v292;
  uint64_t v293;
  unsigned int *v294;
  unsigned int v295;
  uint64_t v296;
  unsigned int *v297;
  unsigned int v298;
  uint64_t v299;
  unsigned int *v300;
  unsigned int v301;
  uint64_t v302;
  unsigned int *v303;
  unsigned int v304;
  uint64_t v305;
  unsigned int *v306;
  unsigned int v307;
  uint64_t v308;
  unsigned int *v309;
  unsigned int v310;
  uint64_t v311;
  unsigned int *v312;
  unsigned int v313;
  uint64_t v314;
  unsigned int *v315;
  unsigned int v316;
  uint64_t v317;
  unsigned int *v318;
  unsigned int v319;
  uint64_t v320;
  unsigned int *v321;
  unsigned int v322;
  uint64_t v323;
  unsigned int *v324;
  unsigned int v325;
  uint64_t v326;
  unsigned int *v327;
  unsigned int v328;
  uint64_t v329;
  unsigned int *v330;
  unsigned int v331;
  uint64_t v332;
  unsigned int *v333;
  unsigned int v334;
  uint64_t v335;
  unsigned int *v336;
  unsigned int v337;
  uint64_t v338;
  unsigned int *v339;
  unsigned int v340;
  uint64_t v341;
  unsigned int *v342;
  unsigned int v343;
  uint64_t v344;
  unsigned int *v345;
  unsigned int v346;
  uint64_t v347;
  unsigned int *v348;
  unsigned int v349;
  uint64_t v350;
  unsigned int *v351;
  unsigned int v352;
  uint64_t v353;
  unsigned int *v354;
  unsigned int v355;
  uint64_t v356;
  unsigned int *v357;
  unsigned int v358;
  uint64_t v359;
  unsigned int *v360;
  unsigned int v361;
  uint64_t v362;
  unsigned int *v363;
  unsigned int v364;
  uint64_t v365;
  unsigned int *v366;
  unsigned int v367;
  uint64_t v368;
  unsigned int *v369;
  unsigned int v370;
  uint64_t v371;
  unsigned int *v372;
  unsigned int v373;
  uint64_t v374;
  unsigned int *v375;
  unsigned int v376;
  uint64_t v377;
  unsigned int *v378;
  unsigned int v379;
  uint64_t v380;
  unsigned int *v381;
  unsigned int v382;
  uint64_t v383;
  unsigned int *v384;
  unsigned int v385;
  uint64_t v386;
  unsigned int *v387;
  unsigned int v388;
  uint64_t v389;
  unsigned int *v390;
  unsigned int v391;
  uint64_t v392;
  unsigned int *v393;
  unsigned int v394;
  uint64_t v395;
  unsigned int *v396;
  unsigned int v397;
  uint64_t v398;
  unsigned int *v399;
  unsigned int v400;
  uint64_t v401;
  unsigned int *v402;
  unsigned int v403;
  uint64_t v404;
  unsigned int *v405;
  unsigned int v406;
  uint64_t v407;
  unsigned int *v408;
  unsigned int v409;
  uint64_t v410;
  unsigned int *v411;
  unsigned int v412;
  uint64_t v413;
  unsigned int *v414;
  unsigned int v415;
  uint64_t v416;
  unsigned int *v417;
  unsigned int v418;
  uint64_t v419;
  unsigned int *v420;
  unsigned int v421;
  uint64_t v422;
  unsigned int *v423;
  unsigned int v424;
  uint64_t v425;
  unsigned int *v426;
  unsigned int v427;
  uint64_t v428;
  unsigned int *v429;
  unsigned int v430;
  uint64_t v431;
  unsigned int *v432;
  unsigned int v433;
  uint64_t v434;
  unsigned int *v435;
  unsigned int v436;
  uint64_t v437;
  unsigned int *v438;
  unsigned int v439;
  uint64_t v440;
  unsigned int *v441;
  unsigned int v442;
  uint64_t v443;
  unsigned int *v444;
  unsigned int v445;
  uint64_t v446;
  unsigned int *v447;
  unsigned int v448;
  uint64_t v449;
  unsigned int *v450;
  unsigned int v451;
  uint64_t v452;
  unsigned int *v453;
  unsigned int v454;
  uint64_t v455;
  unsigned int *v456;
  unsigned int v457;
  uint64_t v458;
  unsigned int *v459;
  unsigned int v460;
  uint64_t v461;
  unsigned int *v462;
  unsigned int v463;
  uint64_t v464;
  unsigned int *v465;
  unsigned int v466;
  uint64_t v467;
  unsigned int *v468;
  unsigned int v469;
  uint64_t v470;
  unsigned int *v471;
  unsigned int v472;
  uint64_t v473;
  unsigned int *v474;
  unsigned int v475;
  uint64_t v476;
  unsigned int *v477;
  unsigned int v478;
  uint64_t v479;
  unsigned int *v480;
  unsigned int v481;
  uint64_t v482;
  unsigned int *v483;
  unsigned int v484;
  uint64_t v485;
  unsigned int *v486;
  unsigned int v487;
  uint64_t v488;
  unsigned int *v489;
  unsigned int v490;
  uint64_t v491;
  unsigned int *v492;
  unsigned int v493;
  uint64_t v494;
  unsigned int *v495;
  unsigned int v496;
  uint64_t v497;
  unsigned int *v498;
  unsigned int v499;
  uint64_t v500;
  unsigned int *v501;
  unsigned int v502;
  uint64_t v503;
  unsigned int *v504;
  unsigned int v505;
  uint64_t v506;
  unsigned int *v507;
  unsigned int v508;
  uint64_t v509;
  unsigned int *v510;
  unsigned int v511;
  uint64_t v512;
  unsigned int *v513;
  unsigned int v514;
  uint64_t v515;
  unsigned int *v516;
  unsigned int v517;
  uint64_t v518;
  unsigned int *v519;
  unsigned int v520;
  uint64_t v521;
  unsigned int *v522;
  unsigned int v523;
  uint64_t v524;
  unsigned int *v525;
  unsigned int v526;
  uint64_t v527;
  unsigned int *v528;
  unsigned int v529;
  uint64_t v530;
  unsigned int *v531;
  unsigned int v532;
  uint64_t v533;
  unsigned int *v534;
  unsigned int v535;
  uint64_t v536;
  unsigned int *v537;
  unsigned int v538;
  uint64_t v539;
  unsigned int *v540;
  unsigned int v541;
  uint64_t v542;
  unsigned int *v543;
  unsigned int v544;
  uint64_t v545;
  unsigned int *v546;
  unsigned int v547;
  uint64_t v548;
  unsigned int *v549;
  unsigned int v550;
  uint64_t v551;
  unsigned int *v552;
  unsigned int v553;
  uint64_t v554;
  unsigned int *v555;
  unsigned int v556;
  uint64_t v557;
  unsigned int *v558;
  unsigned int v559;
  uint64_t v560;
  unsigned int *v561;
  unsigned int v562;
  uint64_t v563;
  unsigned int *v564;
  unsigned int v565;
  uint64_t v566;
  unsigned int *v567;
  unsigned int v568;
  uint64_t v569;
  unsigned int *v570;
  unsigned int v571;
  uint64_t v572;
  unsigned int *v573;
  unsigned int v574;
  uint64_t v575;
  unsigned int *v576;
  unsigned int v577;
  uint64_t v578;
  unsigned int *v579;
  unsigned int v580;
  uint64_t v581;
  unsigned int *v582;
  unsigned int v583;
  uint64_t v584;
  unsigned int *v585;
  unsigned int v586;
  uint64_t v587;
  unsigned int *v588;
  unsigned int v589;
  uint64_t v590;
  unsigned int *v591;
  unsigned int v592;
  uint64_t v593;
  unsigned int *v594;
  unsigned int v595;
  uint64_t v596;
  unsigned int *v597;
  unsigned int v598;
  uint64_t v599;
  unsigned int *v600;
  unsigned int v601;
  uint64_t v602;
  unsigned int *v603;
  unsigned int v604;
  _QWORD *v605;
  uint64_t v606;
  uint64_t v607;
  unsigned int *v608;
  unsigned int v609;
  uint64_t *v610;
  uint64_t v611;
  uint64_t v612;
  unsigned int *v613;
  unsigned int v614;
  uint64_t *v616;
  uint64_t v617;
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  uint64_t v632;
  uint64_t v633;
  uint64_t v634;
  uint64_t v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  uint64_t v639;
  uint64_t v640;
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  uint64_t v648;
  uint64_t v649;
  uint64_t v650;
  uint64_t v651;
  uint64_t v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  uint64_t v670;
  uint64_t v671;
  uint64_t v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  uint64_t v677;
  uint64_t v678;
  uint64_t v679;
  uint64_t v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t v683;
  uint64_t v684;
  uint64_t v685;
  uint64_t v686;
  uint64_t v687;
  uint64_t v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  uint64_t v692;
  uint64_t v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t v697;
  uint64_t v698;
  uint64_t v699;
  uint64_t v700;
  uint64_t v701;
  uint64_t v702;
  uint64_t v703;
  uint64_t v704;
  uint64_t v705;
  uint64_t v706;
  uint64_t v707;
  uint64_t v708;
  uint64_t v709;
  uint64_t v710;
  uint64_t v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  uint64_t v715;
  uint64_t v716;
  uint64_t v717;
  uint64_t v718;
  uint64_t v719;
  uint64_t v720;
  uint64_t v721;
  uint64_t v722;
  uint64_t v723;
  uint64_t v724;
  uint64_t v725;
  uint64_t v726;
  uint64_t v727;
  uint64_t v728;
  uint64_t v729;
  uint64_t v730;
  uint64_t v731;
  uint64_t v732;
  uint64_t v733;
  uint64_t v734;
  uint64_t v735;
  uint64_t v736;
  uint64_t v737;
  uint64_t v738;
  uint64_t v739;
  uint64_t v740;
  uint64_t v741;
  uint64_t v742;
  uint64_t v743;
  uint64_t v744;
  uint64_t v745;
  uint64_t v746;
  uint64_t v747;
  uint64_t v748;
  uint64_t v749;
  uint64_t v750;
  uint64_t v751;
  uint64_t v752;
  uint64_t v753;
  uint64_t v754;
  uint64_t v755;
  uint64_t v756;
  uint64_t v757;
  uint64_t v758;
  uint64_t v759;
  uint64_t v760;
  uint64_t v761;
  uint64_t v762;
  uint64_t v763;
  uint64_t v764;
  uint64_t v765;
  uint64_t v766;
  uint64_t v767;
  uint64_t v768;
  uint64_t v769;
  uint64_t v770;
  uint64_t v771;
  uint64_t v772;
  uint64_t v773;
  uint64_t v774;
  uint64_t v775;
  uint64_t v776;
  uint64_t v777;
  uint64_t v778;
  uint64_t v779;
  uint64_t v780;
  uint64_t v781;
  uint64_t v782;
  uint64_t v783;
  uint64_t v784;
  uint64_t v785;
  uint64_t v786;
  uint64_t v787;
  uint64_t v788;
  uint64_t v789;
  uint64_t v790;
  uint64_t v791;
  uint64_t v792;
  uint64_t v793;
  uint64_t v794;
  uint64_t v795;
  uint64_t v796;
  uint64_t v797;
  uint64_t v798;
  uint64_t v799;
  uint64_t v800;
  uint64_t v801;
  uint64_t v802;
  uint64_t v803;
  uint64_t v804;
  uint64_t v805;
  uint64_t v806;
  uint64_t v807;
  uint64_t v808;
  uint64_t v809;
  uint64_t v810;
  uint64_t v811;
  uint64_t v812;
  uint64_t v813;
  uint64_t v814;
  uint64_t v815;
  uint64_t v816;
  uint64_t v817;
  uint64_t v818;

  v818 = *MEMORY[0x24BDAC8D0];
  v616 = (uint64_t *)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "accelerations", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v616, "all", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 16, "angularVelocities", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 24, "axis", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 32, "basis", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 40, "bezier", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 48, "bilinear", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 56, "boundaries", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 64, "bounds", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 72, "box", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 80, "bspline", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 88, "cards", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 96, "catmullClark", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 104, "catmullRom", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 112, "clippingPlanes", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 120, "clippingRange", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 128, "closed", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 136, "constant", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 144, "cornerIndices", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 152, "cornerSharpnesses", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 160, "cornersOnly", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 168, "cornersPlus1", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 176, "cornersPlus2", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 184, "creaseIndices", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 192, "creaseLengths", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 200, "creaseSharpnesses", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 208, "cross", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 216, "cubic", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 224, "curveVertexCounts", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 232, "default", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 240, "doubleSided", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 248, "edge", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 256, "edgeAndCorner", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 264, "edgeOnly", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 272, "elementSize", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 280, "elementType", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 288, "exposure", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 296, "extent", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 304, "extentsHint", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 312, "face", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 320, "faceVarying", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 328, "faceVaryingLinearInterpolation", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 336, "faceVertexCounts", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 344, "faceVertexIndices", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 352, "familyName", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 360, "focalLength", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 368, "focusDistance", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 376, "fromTexture", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 384, "fStop", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 392, "guide", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 400, "guideVisibility", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 408, "height", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 416, "hermite", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 424, "holeIndices", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 432, "horizontalAperture", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 440, "horizontalApertureOffset", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 448, "ids", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 456, "inactiveIds", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 464, "indices", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 472, "inherited", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 480, "interpolateBoundary", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 488, "interpolation", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 496, "invisible", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 504, "invisibleIds", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 512, "knots", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 520, "left", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 528, "leftHanded", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 536, "length", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 544, "linear", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 552, "loop", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 560, "metersPerUnit", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 568, "model:applyDrawMode", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 576, "model:cardGeometry", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 584, "model:cardTextureXNeg", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 592, "model:cardTextureXPos", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 600, "model:cardTextureYNeg", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 608, "model:cardTextureYPos", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 616, "model:cardTextureZNeg", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 624, "model:cardTextureZPos", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 632, "model:drawMode", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 640, "model:drawModeColor", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 648, "mono", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 656, "motion:blurScale", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 664, "motion:nonlinearSampleCount", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 672, "motion:velocityScale", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 680, "none", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 688, "nonOverlapping", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 696, "nonperiodic", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 704, "normals", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 712, "open", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 720, "order", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 728, "orientation", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 736, "orientations", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 744, "orientationsf", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 752, "origin", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 760, "orthographic", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 768, "partition", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 776, "periodic", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 784, "perspective", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 792, "pinned", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 800, "pivot", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 808, "point", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 816, "points", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 824, "pointWeights", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 832, "positions", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 840, "power", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 848, "primvars:displayColor", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 856, "primvars:displayOpacity", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 864, "projection", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 872, "protoIndices", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 880, "prototypes", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 888, "proxy", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 896, "proxyPrim", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 904, "proxyVisibility", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 912, "purpose", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 920, "radius", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 928, "radiusBottom", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 936, "radiusTop", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 944, "ranges", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 952, "render", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 960, "renderVisibility", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 968, "right", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 976, "rightHanded", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 984, "scales", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 992, "shutter:close", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1000, "shutter:open", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1008, "size", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1016, "smooth", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1024, "stereoRole", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1032, "subdivisionScheme", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1040, "surfaceFaceVertexIndices", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1048, "tangents", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1056, "tetrahedron", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1064, "tetVertexIndices", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1072, "triangleSubdivisionRule", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1080, "trimCurve:counts", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1088, "trimCurve:knots", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1096, "trimCurve:orders", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1104, "trimCurve:points", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1112, "trimCurve:ranges", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1120, "trimCurve:vertexCounts", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1128, "type", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1136, "uForm", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1144, "uKnots", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1152, "unauthoredValuesIndex", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1160, "uniform", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1168, "unrestricted", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1176, "uOrder", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1184, "upAxis", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1192, "uRange", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1200, "uVertexCount", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1208, "varying", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1216, "velocities", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1224, "vertex", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1232, "verticalAperture", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1240, "verticalApertureOffset", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1248, "vForm", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1256, "visibility", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1264, "visible", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1272, "vKnots", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1280, "vOrder", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1288, "vRange", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1296, "vVertexCount", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1304, "width", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1312, "widths", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1320, "wrap", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1328, "X", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1336, "xformOpOrder", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1344, "Y", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1352, "Z", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1360, "BasisCurves", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1368, "Boundable", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1376, "Camera", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1384, "Capsule", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1392, "Capsule_1", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1400, "Cone", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1408, "Cube", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1416, "Curves", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1424, "Cylinder", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1432, "Cylinder_1", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1440, "GeomModelAPI", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1448, "GeomSubset", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1456, "Gprim", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1464, "HermiteCurves", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1472, "Imageable", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1480, "Mesh", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1488, "MotionAPI", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1496, "NurbsCurves", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1504, "NurbsPatch", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1512, "Plane", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1520, "PointBased", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1528, "PointInstancer", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1536, "Points", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1544, "PrimvarsAPI", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1552, "Scope", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1560, "Sphere", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1568, "TetMesh", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1576, "VisibilityAPI", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1584, "Xform", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1592, "Xformable", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1600, "XformCommonAPI", 0);
  v2 = *(_QWORD *)this;
  v617 = v2;
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 2, v3));
    if ((v4 & 1) == 0)
      v617 &= 0xFFFFFFFFFFFFFFF8;
  }
  v5 = *v616;
  v618 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v618 &= 0xFFFFFFFFFFFFFFF8;
  }
  v8 = *((_QWORD *)this + 2);
  v619 = v8;
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 2, v9));
    if ((v10 & 1) == 0)
      v619 &= 0xFFFFFFFFFFFFFFF8;
  }
  v11 = *((_QWORD *)this + 3);
  v620 = v11;
  if ((v11 & 7) != 0)
  {
    v12 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 2, v12));
    if ((v13 & 1) == 0)
      v620 &= 0xFFFFFFFFFFFFFFF8;
  }
  v14 = *((_QWORD *)this + 4);
  v621 = v14;
  if ((v14 & 7) != 0)
  {
    v15 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 2, v15));
    if ((v16 & 1) == 0)
      v621 &= 0xFFFFFFFFFFFFFFF8;
  }
  v17 = *((_QWORD *)this + 5);
  v622 = v17;
  if ((v17 & 7) != 0)
  {
    v18 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 2, v18));
    if ((v19 & 1) == 0)
      v622 &= 0xFFFFFFFFFFFFFFF8;
  }
  v20 = *((_QWORD *)this + 6);
  v623 = v20;
  if ((v20 & 7) != 0)
  {
    v21 = (unsigned int *)(v20 & 0xFFFFFFFFFFFFFFF8);
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 2, v21));
    if ((v22 & 1) == 0)
      v623 &= 0xFFFFFFFFFFFFFFF8;
  }
  v23 = *((_QWORD *)this + 7);
  v624 = v23;
  if ((v23 & 7) != 0)
  {
    v24 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 2, v24));
    if ((v25 & 1) == 0)
      v624 &= 0xFFFFFFFFFFFFFFF8;
  }
  v26 = *((_QWORD *)this + 8);
  v625 = v26;
  if ((v26 & 7) != 0)
  {
    v27 = (unsigned int *)(v26 & 0xFFFFFFFFFFFFFFF8);
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 2, v27));
    if ((v28 & 1) == 0)
      v625 &= 0xFFFFFFFFFFFFFFF8;
  }
  v29 = *((_QWORD *)this + 9);
  v626 = v29;
  if ((v29 & 7) != 0)
  {
    v30 = (unsigned int *)(v29 & 0xFFFFFFFFFFFFFFF8);
    do
      v31 = __ldxr(v30);
    while (__stxr(v31 + 2, v30));
    if ((v31 & 1) == 0)
      v626 &= 0xFFFFFFFFFFFFFFF8;
  }
  v32 = *((_QWORD *)this + 10);
  v627 = v32;
  if ((v32 & 7) != 0)
  {
    v33 = (unsigned int *)(v32 & 0xFFFFFFFFFFFFFFF8);
    do
      v34 = __ldxr(v33);
    while (__stxr(v34 + 2, v33));
    if ((v34 & 1) == 0)
      v627 &= 0xFFFFFFFFFFFFFFF8;
  }
  v35 = *((_QWORD *)this + 11);
  v628 = v35;
  if ((v35 & 7) != 0)
  {
    v36 = (unsigned int *)(v35 & 0xFFFFFFFFFFFFFFF8);
    do
      v37 = __ldxr(v36);
    while (__stxr(v37 + 2, v36));
    if ((v37 & 1) == 0)
      v628 &= 0xFFFFFFFFFFFFFFF8;
  }
  v38 = *((_QWORD *)this + 12);
  v629 = v38;
  if ((v38 & 7) != 0)
  {
    v39 = (unsigned int *)(v38 & 0xFFFFFFFFFFFFFFF8);
    do
      v40 = __ldxr(v39);
    while (__stxr(v40 + 2, v39));
    if ((v40 & 1) == 0)
      v629 &= 0xFFFFFFFFFFFFFFF8;
  }
  v41 = *((_QWORD *)this + 13);
  v630 = v41;
  if ((v41 & 7) != 0)
  {
    v42 = (unsigned int *)(v41 & 0xFFFFFFFFFFFFFFF8);
    do
      v43 = __ldxr(v42);
    while (__stxr(v43 + 2, v42));
    if ((v43 & 1) == 0)
      v630 &= 0xFFFFFFFFFFFFFFF8;
  }
  v44 = *((_QWORD *)this + 14);
  v631 = v44;
  if ((v44 & 7) != 0)
  {
    v45 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v46 = __ldxr(v45);
    while (__stxr(v46 + 2, v45));
    if ((v46 & 1) == 0)
      v631 &= 0xFFFFFFFFFFFFFFF8;
  }
  v47 = *((_QWORD *)this + 15);
  v632 = v47;
  if ((v47 & 7) != 0)
  {
    v48 = (unsigned int *)(v47 & 0xFFFFFFFFFFFFFFF8);
    do
      v49 = __ldxr(v48);
    while (__stxr(v49 + 2, v48));
    if ((v49 & 1) == 0)
      v632 &= 0xFFFFFFFFFFFFFFF8;
  }
  v50 = *((_QWORD *)this + 16);
  v633 = v50;
  if ((v50 & 7) != 0)
  {
    v51 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v52 = __ldxr(v51);
    while (__stxr(v52 + 2, v51));
    if ((v52 & 1) == 0)
      v633 &= 0xFFFFFFFFFFFFFFF8;
  }
  v53 = *((_QWORD *)this + 17);
  v634 = v53;
  if ((v53 & 7) != 0)
  {
    v54 = (unsigned int *)(v53 & 0xFFFFFFFFFFFFFFF8);
    do
      v55 = __ldxr(v54);
    while (__stxr(v55 + 2, v54));
    if ((v55 & 1) == 0)
      v634 &= 0xFFFFFFFFFFFFFFF8;
  }
  v56 = *((_QWORD *)this + 18);
  v635 = v56;
  if ((v56 & 7) != 0)
  {
    v57 = (unsigned int *)(v56 & 0xFFFFFFFFFFFFFFF8);
    do
      v58 = __ldxr(v57);
    while (__stxr(v58 + 2, v57));
    if ((v58 & 1) == 0)
      v635 &= 0xFFFFFFFFFFFFFFF8;
  }
  v59 = *((_QWORD *)this + 19);
  v636 = v59;
  if ((v59 & 7) != 0)
  {
    v60 = (unsigned int *)(v59 & 0xFFFFFFFFFFFFFFF8);
    do
      v61 = __ldxr(v60);
    while (__stxr(v61 + 2, v60));
    if ((v61 & 1) == 0)
      v636 &= 0xFFFFFFFFFFFFFFF8;
  }
  v62 = *((_QWORD *)this + 20);
  v637 = v62;
  if ((v62 & 7) != 0)
  {
    v63 = (unsigned int *)(v62 & 0xFFFFFFFFFFFFFFF8);
    do
      v64 = __ldxr(v63);
    while (__stxr(v64 + 2, v63));
    if ((v64 & 1) == 0)
      v637 &= 0xFFFFFFFFFFFFFFF8;
  }
  v65 = *((_QWORD *)this + 21);
  v638 = v65;
  if ((v65 & 7) != 0)
  {
    v66 = (unsigned int *)(v65 & 0xFFFFFFFFFFFFFFF8);
    do
      v67 = __ldxr(v66);
    while (__stxr(v67 + 2, v66));
    if ((v67 & 1) == 0)
      v638 &= 0xFFFFFFFFFFFFFFF8;
  }
  v68 = *((_QWORD *)this + 22);
  v639 = v68;
  if ((v68 & 7) != 0)
  {
    v69 = (unsigned int *)(v68 & 0xFFFFFFFFFFFFFFF8);
    do
      v70 = __ldxr(v69);
    while (__stxr(v70 + 2, v69));
    if ((v70 & 1) == 0)
      v639 &= 0xFFFFFFFFFFFFFFF8;
  }
  v71 = *((_QWORD *)this + 23);
  v640 = v71;
  if ((v71 & 7) != 0)
  {
    v72 = (unsigned int *)(v71 & 0xFFFFFFFFFFFFFFF8);
    do
      v73 = __ldxr(v72);
    while (__stxr(v73 + 2, v72));
    if ((v73 & 1) == 0)
      v640 &= 0xFFFFFFFFFFFFFFF8;
  }
  v74 = *((_QWORD *)this + 24);
  v641 = v74;
  if ((v74 & 7) != 0)
  {
    v75 = (unsigned int *)(v74 & 0xFFFFFFFFFFFFFFF8);
    do
      v76 = __ldxr(v75);
    while (__stxr(v76 + 2, v75));
    if ((v76 & 1) == 0)
      v641 &= 0xFFFFFFFFFFFFFFF8;
  }
  v77 = *((_QWORD *)this + 25);
  v642 = v77;
  if ((v77 & 7) != 0)
  {
    v78 = (unsigned int *)(v77 & 0xFFFFFFFFFFFFFFF8);
    do
      v79 = __ldxr(v78);
    while (__stxr(v79 + 2, v78));
    if ((v79 & 1) == 0)
      v642 &= 0xFFFFFFFFFFFFFFF8;
  }
  v80 = *((_QWORD *)this + 26);
  v643 = v80;
  if ((v80 & 7) != 0)
  {
    v81 = (unsigned int *)(v80 & 0xFFFFFFFFFFFFFFF8);
    do
      v82 = __ldxr(v81);
    while (__stxr(v82 + 2, v81));
    if ((v82 & 1) == 0)
      v643 &= 0xFFFFFFFFFFFFFFF8;
  }
  v83 = *((_QWORD *)this + 27);
  v644 = v83;
  if ((v83 & 7) != 0)
  {
    v84 = (unsigned int *)(v83 & 0xFFFFFFFFFFFFFFF8);
    do
      v85 = __ldxr(v84);
    while (__stxr(v85 + 2, v84));
    if ((v85 & 1) == 0)
      v644 &= 0xFFFFFFFFFFFFFFF8;
  }
  v86 = *((_QWORD *)this + 28);
  v645 = v86;
  if ((v86 & 7) != 0)
  {
    v87 = (unsigned int *)(v86 & 0xFFFFFFFFFFFFFFF8);
    do
      v88 = __ldxr(v87);
    while (__stxr(v88 + 2, v87));
    if ((v88 & 1) == 0)
      v645 &= 0xFFFFFFFFFFFFFFF8;
  }
  v89 = *((_QWORD *)this + 29);
  v646 = v89;
  if ((v89 & 7) != 0)
  {
    v90 = (unsigned int *)(v89 & 0xFFFFFFFFFFFFFFF8);
    do
      v91 = __ldxr(v90);
    while (__stxr(v91 + 2, v90));
    if ((v91 & 1) == 0)
      v646 &= 0xFFFFFFFFFFFFFFF8;
  }
  v92 = *((_QWORD *)this + 30);
  v647 = v92;
  if ((v92 & 7) != 0)
  {
    v93 = (unsigned int *)(v92 & 0xFFFFFFFFFFFFFFF8);
    do
      v94 = __ldxr(v93);
    while (__stxr(v94 + 2, v93));
    if ((v94 & 1) == 0)
      v647 &= 0xFFFFFFFFFFFFFFF8;
  }
  v95 = *((_QWORD *)this + 31);
  v648 = v95;
  if ((v95 & 7) != 0)
  {
    v96 = (unsigned int *)(v95 & 0xFFFFFFFFFFFFFFF8);
    do
      v97 = __ldxr(v96);
    while (__stxr(v97 + 2, v96));
    if ((v97 & 1) == 0)
      v648 &= 0xFFFFFFFFFFFFFFF8;
  }
  v98 = *((_QWORD *)this + 32);
  v649 = v98;
  if ((v98 & 7) != 0)
  {
    v99 = (unsigned int *)(v98 & 0xFFFFFFFFFFFFFFF8);
    do
      v100 = __ldxr(v99);
    while (__stxr(v100 + 2, v99));
    if ((v100 & 1) == 0)
      v649 &= 0xFFFFFFFFFFFFFFF8;
  }
  v101 = *((_QWORD *)this + 33);
  v650 = v101;
  if ((v101 & 7) != 0)
  {
    v102 = (unsigned int *)(v101 & 0xFFFFFFFFFFFFFFF8);
    do
      v103 = __ldxr(v102);
    while (__stxr(v103 + 2, v102));
    if ((v103 & 1) == 0)
      v650 &= 0xFFFFFFFFFFFFFFF8;
  }
  v104 = *((_QWORD *)this + 34);
  v651 = v104;
  if ((v104 & 7) != 0)
  {
    v105 = (unsigned int *)(v104 & 0xFFFFFFFFFFFFFFF8);
    do
      v106 = __ldxr(v105);
    while (__stxr(v106 + 2, v105));
    if ((v106 & 1) == 0)
      v651 &= 0xFFFFFFFFFFFFFFF8;
  }
  v107 = *((_QWORD *)this + 35);
  v652 = v107;
  if ((v107 & 7) != 0)
  {
    v108 = (unsigned int *)(v107 & 0xFFFFFFFFFFFFFFF8);
    do
      v109 = __ldxr(v108);
    while (__stxr(v109 + 2, v108));
    if ((v109 & 1) == 0)
      v652 &= 0xFFFFFFFFFFFFFFF8;
  }
  v110 = *((_QWORD *)this + 36);
  v653 = v110;
  if ((v110 & 7) != 0)
  {
    v111 = (unsigned int *)(v110 & 0xFFFFFFFFFFFFFFF8);
    do
      v112 = __ldxr(v111);
    while (__stxr(v112 + 2, v111));
    if ((v112 & 1) == 0)
      v653 &= 0xFFFFFFFFFFFFFFF8;
  }
  v113 = *((_QWORD *)this + 37);
  v654 = v113;
  if ((v113 & 7) != 0)
  {
    v114 = (unsigned int *)(v113 & 0xFFFFFFFFFFFFFFF8);
    do
      v115 = __ldxr(v114);
    while (__stxr(v115 + 2, v114));
    if ((v115 & 1) == 0)
      v654 &= 0xFFFFFFFFFFFFFFF8;
  }
  v116 = *((_QWORD *)this + 38);
  v655 = v116;
  if ((v116 & 7) != 0)
  {
    v117 = (unsigned int *)(v116 & 0xFFFFFFFFFFFFFFF8);
    do
      v118 = __ldxr(v117);
    while (__stxr(v118 + 2, v117));
    if ((v118 & 1) == 0)
      v655 &= 0xFFFFFFFFFFFFFFF8;
  }
  v119 = *((_QWORD *)this + 39);
  v656 = v119;
  if ((v119 & 7) != 0)
  {
    v120 = (unsigned int *)(v119 & 0xFFFFFFFFFFFFFFF8);
    do
      v121 = __ldxr(v120);
    while (__stxr(v121 + 2, v120));
    if ((v121 & 1) == 0)
      v656 &= 0xFFFFFFFFFFFFFFF8;
  }
  v122 = *((_QWORD *)this + 40);
  v657 = v122;
  if ((v122 & 7) != 0)
  {
    v123 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
    do
      v124 = __ldxr(v123);
    while (__stxr(v124 + 2, v123));
    if ((v124 & 1) == 0)
      v657 &= 0xFFFFFFFFFFFFFFF8;
  }
  v125 = *((_QWORD *)this + 41);
  v658 = v125;
  if ((v125 & 7) != 0)
  {
    v126 = (unsigned int *)(v125 & 0xFFFFFFFFFFFFFFF8);
    do
      v127 = __ldxr(v126);
    while (__stxr(v127 + 2, v126));
    if ((v127 & 1) == 0)
      v658 &= 0xFFFFFFFFFFFFFFF8;
  }
  v128 = *((_QWORD *)this + 42);
  v659 = v128;
  if ((v128 & 7) != 0)
  {
    v129 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
    do
      v130 = __ldxr(v129);
    while (__stxr(v130 + 2, v129));
    if ((v130 & 1) == 0)
      v659 &= 0xFFFFFFFFFFFFFFF8;
  }
  v131 = *((_QWORD *)this + 43);
  v660 = v131;
  if ((v131 & 7) != 0)
  {
    v132 = (unsigned int *)(v131 & 0xFFFFFFFFFFFFFFF8);
    do
      v133 = __ldxr(v132);
    while (__stxr(v133 + 2, v132));
    if ((v133 & 1) == 0)
      v660 &= 0xFFFFFFFFFFFFFFF8;
  }
  v134 = *((_QWORD *)this + 44);
  v661 = v134;
  if ((v134 & 7) != 0)
  {
    v135 = (unsigned int *)(v134 & 0xFFFFFFFFFFFFFFF8);
    do
      v136 = __ldxr(v135);
    while (__stxr(v136 + 2, v135));
    if ((v136 & 1) == 0)
      v661 &= 0xFFFFFFFFFFFFFFF8;
  }
  v137 = *((_QWORD *)this + 45);
  v662 = v137;
  if ((v137 & 7) != 0)
  {
    v138 = (unsigned int *)(v137 & 0xFFFFFFFFFFFFFFF8);
    do
      v139 = __ldxr(v138);
    while (__stxr(v139 + 2, v138));
    if ((v139 & 1) == 0)
      v662 &= 0xFFFFFFFFFFFFFFF8;
  }
  v140 = *((_QWORD *)this + 46);
  v663 = v140;
  if ((v140 & 7) != 0)
  {
    v141 = (unsigned int *)(v140 & 0xFFFFFFFFFFFFFFF8);
    do
      v142 = __ldxr(v141);
    while (__stxr(v142 + 2, v141));
    if ((v142 & 1) == 0)
      v663 &= 0xFFFFFFFFFFFFFFF8;
  }
  v143 = *((_QWORD *)this + 47);
  v664 = v143;
  if ((v143 & 7) != 0)
  {
    v144 = (unsigned int *)(v143 & 0xFFFFFFFFFFFFFFF8);
    do
      v145 = __ldxr(v144);
    while (__stxr(v145 + 2, v144));
    if ((v145 & 1) == 0)
      v664 &= 0xFFFFFFFFFFFFFFF8;
  }
  v146 = *((_QWORD *)this + 48);
  v665 = v146;
  if ((v146 & 7) != 0)
  {
    v147 = (unsigned int *)(v146 & 0xFFFFFFFFFFFFFFF8);
    do
      v148 = __ldxr(v147);
    while (__stxr(v148 + 2, v147));
    if ((v148 & 1) == 0)
      v665 &= 0xFFFFFFFFFFFFFFF8;
  }
  v149 = *((_QWORD *)this + 49);
  v666 = v149;
  if ((v149 & 7) != 0)
  {
    v150 = (unsigned int *)(v149 & 0xFFFFFFFFFFFFFFF8);
    do
      v151 = __ldxr(v150);
    while (__stxr(v151 + 2, v150));
    if ((v151 & 1) == 0)
      v666 &= 0xFFFFFFFFFFFFFFF8;
  }
  v152 = *((_QWORD *)this + 50);
  v667 = v152;
  if ((v152 & 7) != 0)
  {
    v153 = (unsigned int *)(v152 & 0xFFFFFFFFFFFFFFF8);
    do
      v154 = __ldxr(v153);
    while (__stxr(v154 + 2, v153));
    if ((v154 & 1) == 0)
      v667 &= 0xFFFFFFFFFFFFFFF8;
  }
  v155 = *((_QWORD *)this + 51);
  v668 = v155;
  if ((v155 & 7) != 0)
  {
    v156 = (unsigned int *)(v155 & 0xFFFFFFFFFFFFFFF8);
    do
      v157 = __ldxr(v156);
    while (__stxr(v157 + 2, v156));
    if ((v157 & 1) == 0)
      v668 &= 0xFFFFFFFFFFFFFFF8;
  }
  v158 = *((_QWORD *)this + 52);
  v669 = v158;
  if ((v158 & 7) != 0)
  {
    v159 = (unsigned int *)(v158 & 0xFFFFFFFFFFFFFFF8);
    do
      v160 = __ldxr(v159);
    while (__stxr(v160 + 2, v159));
    if ((v160 & 1) == 0)
      v669 &= 0xFFFFFFFFFFFFFFF8;
  }
  v161 = *((_QWORD *)this + 53);
  v670 = v161;
  if ((v161 & 7) != 0)
  {
    v162 = (unsigned int *)(v161 & 0xFFFFFFFFFFFFFFF8);
    do
      v163 = __ldxr(v162);
    while (__stxr(v163 + 2, v162));
    if ((v163 & 1) == 0)
      v670 &= 0xFFFFFFFFFFFFFFF8;
  }
  v164 = *((_QWORD *)this + 54);
  v671 = v164;
  if ((v164 & 7) != 0)
  {
    v165 = (unsigned int *)(v164 & 0xFFFFFFFFFFFFFFF8);
    do
      v166 = __ldxr(v165);
    while (__stxr(v166 + 2, v165));
    if ((v166 & 1) == 0)
      v671 &= 0xFFFFFFFFFFFFFFF8;
  }
  v167 = *((_QWORD *)this + 55);
  v672 = v167;
  if ((v167 & 7) != 0)
  {
    v168 = (unsigned int *)(v167 & 0xFFFFFFFFFFFFFFF8);
    do
      v169 = __ldxr(v168);
    while (__stxr(v169 + 2, v168));
    if ((v169 & 1) == 0)
      v672 &= 0xFFFFFFFFFFFFFFF8;
  }
  v170 = *((_QWORD *)this + 56);
  v673 = v170;
  if ((v170 & 7) != 0)
  {
    v171 = (unsigned int *)(v170 & 0xFFFFFFFFFFFFFFF8);
    do
      v172 = __ldxr(v171);
    while (__stxr(v172 + 2, v171));
    if ((v172 & 1) == 0)
      v673 &= 0xFFFFFFFFFFFFFFF8;
  }
  v173 = *((_QWORD *)this + 57);
  v674 = v173;
  if ((v173 & 7) != 0)
  {
    v174 = (unsigned int *)(v173 & 0xFFFFFFFFFFFFFFF8);
    do
      v175 = __ldxr(v174);
    while (__stxr(v175 + 2, v174));
    if ((v175 & 1) == 0)
      v674 &= 0xFFFFFFFFFFFFFFF8;
  }
  v176 = *((_QWORD *)this + 58);
  v675 = v176;
  if ((v176 & 7) != 0)
  {
    v177 = (unsigned int *)(v176 & 0xFFFFFFFFFFFFFFF8);
    do
      v178 = __ldxr(v177);
    while (__stxr(v178 + 2, v177));
    if ((v178 & 1) == 0)
      v675 &= 0xFFFFFFFFFFFFFFF8;
  }
  v179 = *((_QWORD *)this + 59);
  v676 = v179;
  if ((v179 & 7) != 0)
  {
    v180 = (unsigned int *)(v179 & 0xFFFFFFFFFFFFFFF8);
    do
      v181 = __ldxr(v180);
    while (__stxr(v181 + 2, v180));
    if ((v181 & 1) == 0)
      v676 &= 0xFFFFFFFFFFFFFFF8;
  }
  v182 = *((_QWORD *)this + 60);
  v677 = v182;
  if ((v182 & 7) != 0)
  {
    v183 = (unsigned int *)(v182 & 0xFFFFFFFFFFFFFFF8);
    do
      v184 = __ldxr(v183);
    while (__stxr(v184 + 2, v183));
    if ((v184 & 1) == 0)
      v677 &= 0xFFFFFFFFFFFFFFF8;
  }
  v185 = *((_QWORD *)this + 61);
  v678 = v185;
  if ((v185 & 7) != 0)
  {
    v186 = (unsigned int *)(v185 & 0xFFFFFFFFFFFFFFF8);
    do
      v187 = __ldxr(v186);
    while (__stxr(v187 + 2, v186));
    if ((v187 & 1) == 0)
      v678 &= 0xFFFFFFFFFFFFFFF8;
  }
  v188 = *((_QWORD *)this + 62);
  v679 = v188;
  if ((v188 & 7) != 0)
  {
    v189 = (unsigned int *)(v188 & 0xFFFFFFFFFFFFFFF8);
    do
      v190 = __ldxr(v189);
    while (__stxr(v190 + 2, v189));
    if ((v190 & 1) == 0)
      v679 &= 0xFFFFFFFFFFFFFFF8;
  }
  v191 = *((_QWORD *)this + 63);
  v680 = v191;
  if ((v191 & 7) != 0)
  {
    v192 = (unsigned int *)(v191 & 0xFFFFFFFFFFFFFFF8);
    do
      v193 = __ldxr(v192);
    while (__stxr(v193 + 2, v192));
    if ((v193 & 1) == 0)
      v680 &= 0xFFFFFFFFFFFFFFF8;
  }
  v194 = *((_QWORD *)this + 64);
  v681 = v194;
  if ((v194 & 7) != 0)
  {
    v195 = (unsigned int *)(v194 & 0xFFFFFFFFFFFFFFF8);
    do
      v196 = __ldxr(v195);
    while (__stxr(v196 + 2, v195));
    if ((v196 & 1) == 0)
      v681 &= 0xFFFFFFFFFFFFFFF8;
  }
  v197 = *((_QWORD *)this + 65);
  v682 = v197;
  if ((v197 & 7) != 0)
  {
    v198 = (unsigned int *)(v197 & 0xFFFFFFFFFFFFFFF8);
    do
      v199 = __ldxr(v198);
    while (__stxr(v199 + 2, v198));
    if ((v199 & 1) == 0)
      v682 &= 0xFFFFFFFFFFFFFFF8;
  }
  v200 = *((_QWORD *)this + 66);
  v683 = v200;
  if ((v200 & 7) != 0)
  {
    v201 = (unsigned int *)(v200 & 0xFFFFFFFFFFFFFFF8);
    do
      v202 = __ldxr(v201);
    while (__stxr(v202 + 2, v201));
    if ((v202 & 1) == 0)
      v683 &= 0xFFFFFFFFFFFFFFF8;
  }
  v203 = *((_QWORD *)this + 67);
  v684 = v203;
  if ((v203 & 7) != 0)
  {
    v204 = (unsigned int *)(v203 & 0xFFFFFFFFFFFFFFF8);
    do
      v205 = __ldxr(v204);
    while (__stxr(v205 + 2, v204));
    if ((v205 & 1) == 0)
      v684 &= 0xFFFFFFFFFFFFFFF8;
  }
  v206 = *((_QWORD *)this + 68);
  v685 = v206;
  if ((v206 & 7) != 0)
  {
    v207 = (unsigned int *)(v206 & 0xFFFFFFFFFFFFFFF8);
    do
      v208 = __ldxr(v207);
    while (__stxr(v208 + 2, v207));
    if ((v208 & 1) == 0)
      v685 &= 0xFFFFFFFFFFFFFFF8;
  }
  v209 = *((_QWORD *)this + 69);
  v686 = v209;
  if ((v209 & 7) != 0)
  {
    v210 = (unsigned int *)(v209 & 0xFFFFFFFFFFFFFFF8);
    do
      v211 = __ldxr(v210);
    while (__stxr(v211 + 2, v210));
    if ((v211 & 1) == 0)
      v686 &= 0xFFFFFFFFFFFFFFF8;
  }
  v212 = *((_QWORD *)this + 70);
  v687 = v212;
  if ((v212 & 7) != 0)
  {
    v213 = (unsigned int *)(v212 & 0xFFFFFFFFFFFFFFF8);
    do
      v214 = __ldxr(v213);
    while (__stxr(v214 + 2, v213));
    if ((v214 & 1) == 0)
      v687 &= 0xFFFFFFFFFFFFFFF8;
  }
  v215 = *((_QWORD *)this + 71);
  v688 = v215;
  if ((v215 & 7) != 0)
  {
    v216 = (unsigned int *)(v215 & 0xFFFFFFFFFFFFFFF8);
    do
      v217 = __ldxr(v216);
    while (__stxr(v217 + 2, v216));
    if ((v217 & 1) == 0)
      v688 &= 0xFFFFFFFFFFFFFFF8;
  }
  v218 = *((_QWORD *)this + 72);
  v689 = v218;
  if ((v218 & 7) != 0)
  {
    v219 = (unsigned int *)(v218 & 0xFFFFFFFFFFFFFFF8);
    do
      v220 = __ldxr(v219);
    while (__stxr(v220 + 2, v219));
    if ((v220 & 1) == 0)
      v689 &= 0xFFFFFFFFFFFFFFF8;
  }
  v221 = *((_QWORD *)this + 73);
  v690 = v221;
  if ((v221 & 7) != 0)
  {
    v222 = (unsigned int *)(v221 & 0xFFFFFFFFFFFFFFF8);
    do
      v223 = __ldxr(v222);
    while (__stxr(v223 + 2, v222));
    if ((v223 & 1) == 0)
      v690 &= 0xFFFFFFFFFFFFFFF8;
  }
  v224 = *((_QWORD *)this + 74);
  v691 = v224;
  if ((v224 & 7) != 0)
  {
    v225 = (unsigned int *)(v224 & 0xFFFFFFFFFFFFFFF8);
    do
      v226 = __ldxr(v225);
    while (__stxr(v226 + 2, v225));
    if ((v226 & 1) == 0)
      v691 &= 0xFFFFFFFFFFFFFFF8;
  }
  v227 = *((_QWORD *)this + 75);
  v692 = v227;
  if ((v227 & 7) != 0)
  {
    v228 = (unsigned int *)(v227 & 0xFFFFFFFFFFFFFFF8);
    do
      v229 = __ldxr(v228);
    while (__stxr(v229 + 2, v228));
    if ((v229 & 1) == 0)
      v692 &= 0xFFFFFFFFFFFFFFF8;
  }
  v230 = *((_QWORD *)this + 76);
  v693 = v230;
  if ((v230 & 7) != 0)
  {
    v231 = (unsigned int *)(v230 & 0xFFFFFFFFFFFFFFF8);
    do
      v232 = __ldxr(v231);
    while (__stxr(v232 + 2, v231));
    if ((v232 & 1) == 0)
      v693 &= 0xFFFFFFFFFFFFFFF8;
  }
  v233 = *((_QWORD *)this + 77);
  v694 = v233;
  if ((v233 & 7) != 0)
  {
    v234 = (unsigned int *)(v233 & 0xFFFFFFFFFFFFFFF8);
    do
      v235 = __ldxr(v234);
    while (__stxr(v235 + 2, v234));
    if ((v235 & 1) == 0)
      v694 &= 0xFFFFFFFFFFFFFFF8;
  }
  v236 = *((_QWORD *)this + 78);
  v695 = v236;
  if ((v236 & 7) != 0)
  {
    v237 = (unsigned int *)(v236 & 0xFFFFFFFFFFFFFFF8);
    do
      v238 = __ldxr(v237);
    while (__stxr(v238 + 2, v237));
    if ((v238 & 1) == 0)
      v695 &= 0xFFFFFFFFFFFFFFF8;
  }
  v239 = *((_QWORD *)this + 79);
  v696 = v239;
  if ((v239 & 7) != 0)
  {
    v240 = (unsigned int *)(v239 & 0xFFFFFFFFFFFFFFF8);
    do
      v241 = __ldxr(v240);
    while (__stxr(v241 + 2, v240));
    if ((v241 & 1) == 0)
      v696 &= 0xFFFFFFFFFFFFFFF8;
  }
  v242 = *((_QWORD *)this + 80);
  v697 = v242;
  if ((v242 & 7) != 0)
  {
    v243 = (unsigned int *)(v242 & 0xFFFFFFFFFFFFFFF8);
    do
      v244 = __ldxr(v243);
    while (__stxr(v244 + 2, v243));
    if ((v244 & 1) == 0)
      v697 &= 0xFFFFFFFFFFFFFFF8;
  }
  v245 = *((_QWORD *)this + 81);
  v698 = v245;
  if ((v245 & 7) != 0)
  {
    v246 = (unsigned int *)(v245 & 0xFFFFFFFFFFFFFFF8);
    do
      v247 = __ldxr(v246);
    while (__stxr(v247 + 2, v246));
    if ((v247 & 1) == 0)
      v698 &= 0xFFFFFFFFFFFFFFF8;
  }
  v248 = *((_QWORD *)this + 82);
  v699 = v248;
  if ((v248 & 7) != 0)
  {
    v249 = (unsigned int *)(v248 & 0xFFFFFFFFFFFFFFF8);
    do
      v250 = __ldxr(v249);
    while (__stxr(v250 + 2, v249));
    if ((v250 & 1) == 0)
      v699 &= 0xFFFFFFFFFFFFFFF8;
  }
  v251 = *((_QWORD *)this + 83);
  v700 = v251;
  if ((v251 & 7) != 0)
  {
    v252 = (unsigned int *)(v251 & 0xFFFFFFFFFFFFFFF8);
    do
      v253 = __ldxr(v252);
    while (__stxr(v253 + 2, v252));
    if ((v253 & 1) == 0)
      v700 &= 0xFFFFFFFFFFFFFFF8;
  }
  v254 = *((_QWORD *)this + 84);
  v701 = v254;
  if ((v254 & 7) != 0)
  {
    v255 = (unsigned int *)(v254 & 0xFFFFFFFFFFFFFFF8);
    do
      v256 = __ldxr(v255);
    while (__stxr(v256 + 2, v255));
    if ((v256 & 1) == 0)
      v701 &= 0xFFFFFFFFFFFFFFF8;
  }
  v257 = *((_QWORD *)this + 85);
  v702 = v257;
  if ((v257 & 7) != 0)
  {
    v258 = (unsigned int *)(v257 & 0xFFFFFFFFFFFFFFF8);
    do
      v259 = __ldxr(v258);
    while (__stxr(v259 + 2, v258));
    if ((v259 & 1) == 0)
      v702 &= 0xFFFFFFFFFFFFFFF8;
  }
  v260 = *((_QWORD *)this + 86);
  v703 = v260;
  if ((v260 & 7) != 0)
  {
    v261 = (unsigned int *)(v260 & 0xFFFFFFFFFFFFFFF8);
    do
      v262 = __ldxr(v261);
    while (__stxr(v262 + 2, v261));
    if ((v262 & 1) == 0)
      v703 &= 0xFFFFFFFFFFFFFFF8;
  }
  v263 = *((_QWORD *)this + 87);
  v704 = v263;
  if ((v263 & 7) != 0)
  {
    v264 = (unsigned int *)(v263 & 0xFFFFFFFFFFFFFFF8);
    do
      v265 = __ldxr(v264);
    while (__stxr(v265 + 2, v264));
    if ((v265 & 1) == 0)
      v704 &= 0xFFFFFFFFFFFFFFF8;
  }
  v266 = *((_QWORD *)this + 88);
  v705 = v266;
  if ((v266 & 7) != 0)
  {
    v267 = (unsigned int *)(v266 & 0xFFFFFFFFFFFFFFF8);
    do
      v268 = __ldxr(v267);
    while (__stxr(v268 + 2, v267));
    if ((v268 & 1) == 0)
      v705 &= 0xFFFFFFFFFFFFFFF8;
  }
  v269 = *((_QWORD *)this + 89);
  v706 = v269;
  if ((v269 & 7) != 0)
  {
    v270 = (unsigned int *)(v269 & 0xFFFFFFFFFFFFFFF8);
    do
      v271 = __ldxr(v270);
    while (__stxr(v271 + 2, v270));
    if ((v271 & 1) == 0)
      v706 &= 0xFFFFFFFFFFFFFFF8;
  }
  v272 = *((_QWORD *)this + 90);
  v707 = v272;
  if ((v272 & 7) != 0)
  {
    v273 = (unsigned int *)(v272 & 0xFFFFFFFFFFFFFFF8);
    do
      v274 = __ldxr(v273);
    while (__stxr(v274 + 2, v273));
    if ((v274 & 1) == 0)
      v707 &= 0xFFFFFFFFFFFFFFF8;
  }
  v275 = *((_QWORD *)this + 91);
  v708 = v275;
  if ((v275 & 7) != 0)
  {
    v276 = (unsigned int *)(v275 & 0xFFFFFFFFFFFFFFF8);
    do
      v277 = __ldxr(v276);
    while (__stxr(v277 + 2, v276));
    if ((v277 & 1) == 0)
      v708 &= 0xFFFFFFFFFFFFFFF8;
  }
  v278 = *((_QWORD *)this + 92);
  v709 = v278;
  if ((v278 & 7) != 0)
  {
    v279 = (unsigned int *)(v278 & 0xFFFFFFFFFFFFFFF8);
    do
      v280 = __ldxr(v279);
    while (__stxr(v280 + 2, v279));
    if ((v280 & 1) == 0)
      v709 &= 0xFFFFFFFFFFFFFFF8;
  }
  v281 = *((_QWORD *)this + 93);
  v710 = v281;
  if ((v281 & 7) != 0)
  {
    v282 = (unsigned int *)(v281 & 0xFFFFFFFFFFFFFFF8);
    do
      v283 = __ldxr(v282);
    while (__stxr(v283 + 2, v282));
    if ((v283 & 1) == 0)
      v710 &= 0xFFFFFFFFFFFFFFF8;
  }
  v284 = *((_QWORD *)this + 94);
  v711 = v284;
  if ((v284 & 7) != 0)
  {
    v285 = (unsigned int *)(v284 & 0xFFFFFFFFFFFFFFF8);
    do
      v286 = __ldxr(v285);
    while (__stxr(v286 + 2, v285));
    if ((v286 & 1) == 0)
      v711 &= 0xFFFFFFFFFFFFFFF8;
  }
  v287 = *((_QWORD *)this + 95);
  v712 = v287;
  if ((v287 & 7) != 0)
  {
    v288 = (unsigned int *)(v287 & 0xFFFFFFFFFFFFFFF8);
    do
      v289 = __ldxr(v288);
    while (__stxr(v289 + 2, v288));
    if ((v289 & 1) == 0)
      v712 &= 0xFFFFFFFFFFFFFFF8;
  }
  v290 = *((_QWORD *)this + 96);
  v713 = v290;
  if ((v290 & 7) != 0)
  {
    v291 = (unsigned int *)(v290 & 0xFFFFFFFFFFFFFFF8);
    do
      v292 = __ldxr(v291);
    while (__stxr(v292 + 2, v291));
    if ((v292 & 1) == 0)
      v713 &= 0xFFFFFFFFFFFFFFF8;
  }
  v293 = *((_QWORD *)this + 97);
  v714 = v293;
  if ((v293 & 7) != 0)
  {
    v294 = (unsigned int *)(v293 & 0xFFFFFFFFFFFFFFF8);
    do
      v295 = __ldxr(v294);
    while (__stxr(v295 + 2, v294));
    if ((v295 & 1) == 0)
      v714 &= 0xFFFFFFFFFFFFFFF8;
  }
  v296 = *((_QWORD *)this + 98);
  v715 = v296;
  if ((v296 & 7) != 0)
  {
    v297 = (unsigned int *)(v296 & 0xFFFFFFFFFFFFFFF8);
    do
      v298 = __ldxr(v297);
    while (__stxr(v298 + 2, v297));
    if ((v298 & 1) == 0)
      v715 &= 0xFFFFFFFFFFFFFFF8;
  }
  v299 = *((_QWORD *)this + 99);
  v716 = v299;
  if ((v299 & 7) != 0)
  {
    v300 = (unsigned int *)(v299 & 0xFFFFFFFFFFFFFFF8);
    do
      v301 = __ldxr(v300);
    while (__stxr(v301 + 2, v300));
    if ((v301 & 1) == 0)
      v716 &= 0xFFFFFFFFFFFFFFF8;
  }
  v302 = *((_QWORD *)this + 100);
  v717 = v302;
  if ((v302 & 7) != 0)
  {
    v303 = (unsigned int *)(v302 & 0xFFFFFFFFFFFFFFF8);
    do
      v304 = __ldxr(v303);
    while (__stxr(v304 + 2, v303));
    if ((v304 & 1) == 0)
      v717 &= 0xFFFFFFFFFFFFFFF8;
  }
  v305 = *((_QWORD *)this + 101);
  v718 = v305;
  if ((v305 & 7) != 0)
  {
    v306 = (unsigned int *)(v305 & 0xFFFFFFFFFFFFFFF8);
    do
      v307 = __ldxr(v306);
    while (__stxr(v307 + 2, v306));
    if ((v307 & 1) == 0)
      v718 &= 0xFFFFFFFFFFFFFFF8;
  }
  v308 = *((_QWORD *)this + 102);
  v719 = v308;
  if ((v308 & 7) != 0)
  {
    v309 = (unsigned int *)(v308 & 0xFFFFFFFFFFFFFFF8);
    do
      v310 = __ldxr(v309);
    while (__stxr(v310 + 2, v309));
    if ((v310 & 1) == 0)
      v719 &= 0xFFFFFFFFFFFFFFF8;
  }
  v311 = *((_QWORD *)this + 103);
  v720 = v311;
  if ((v311 & 7) != 0)
  {
    v312 = (unsigned int *)(v311 & 0xFFFFFFFFFFFFFFF8);
    do
      v313 = __ldxr(v312);
    while (__stxr(v313 + 2, v312));
    if ((v313 & 1) == 0)
      v720 &= 0xFFFFFFFFFFFFFFF8;
  }
  v314 = *((_QWORD *)this + 104);
  v721 = v314;
  if ((v314 & 7) != 0)
  {
    v315 = (unsigned int *)(v314 & 0xFFFFFFFFFFFFFFF8);
    do
      v316 = __ldxr(v315);
    while (__stxr(v316 + 2, v315));
    if ((v316 & 1) == 0)
      v721 &= 0xFFFFFFFFFFFFFFF8;
  }
  v317 = *((_QWORD *)this + 105);
  v722 = v317;
  if ((v317 & 7) != 0)
  {
    v318 = (unsigned int *)(v317 & 0xFFFFFFFFFFFFFFF8);
    do
      v319 = __ldxr(v318);
    while (__stxr(v319 + 2, v318));
    if ((v319 & 1) == 0)
      v722 &= 0xFFFFFFFFFFFFFFF8;
  }
  v320 = *((_QWORD *)this + 106);
  v723 = v320;
  if ((v320 & 7) != 0)
  {
    v321 = (unsigned int *)(v320 & 0xFFFFFFFFFFFFFFF8);
    do
      v322 = __ldxr(v321);
    while (__stxr(v322 + 2, v321));
    if ((v322 & 1) == 0)
      v723 &= 0xFFFFFFFFFFFFFFF8;
  }
  v323 = *((_QWORD *)this + 107);
  v724 = v323;
  if ((v323 & 7) != 0)
  {
    v324 = (unsigned int *)(v323 & 0xFFFFFFFFFFFFFFF8);
    do
      v325 = __ldxr(v324);
    while (__stxr(v325 + 2, v324));
    if ((v325 & 1) == 0)
      v724 &= 0xFFFFFFFFFFFFFFF8;
  }
  v326 = *((_QWORD *)this + 108);
  v725 = v326;
  if ((v326 & 7) != 0)
  {
    v327 = (unsigned int *)(v326 & 0xFFFFFFFFFFFFFFF8);
    do
      v328 = __ldxr(v327);
    while (__stxr(v328 + 2, v327));
    if ((v328 & 1) == 0)
      v725 &= 0xFFFFFFFFFFFFFFF8;
  }
  v329 = *((_QWORD *)this + 109);
  v726 = v329;
  if ((v329 & 7) != 0)
  {
    v330 = (unsigned int *)(v329 & 0xFFFFFFFFFFFFFFF8);
    do
      v331 = __ldxr(v330);
    while (__stxr(v331 + 2, v330));
    if ((v331 & 1) == 0)
      v726 &= 0xFFFFFFFFFFFFFFF8;
  }
  v332 = *((_QWORD *)this + 110);
  v727 = v332;
  if ((v332 & 7) != 0)
  {
    v333 = (unsigned int *)(v332 & 0xFFFFFFFFFFFFFFF8);
    do
      v334 = __ldxr(v333);
    while (__stxr(v334 + 2, v333));
    if ((v334 & 1) == 0)
      v727 &= 0xFFFFFFFFFFFFFFF8;
  }
  v335 = *((_QWORD *)this + 111);
  v728 = v335;
  if ((v335 & 7) != 0)
  {
    v336 = (unsigned int *)(v335 & 0xFFFFFFFFFFFFFFF8);
    do
      v337 = __ldxr(v336);
    while (__stxr(v337 + 2, v336));
    if ((v337 & 1) == 0)
      v728 &= 0xFFFFFFFFFFFFFFF8;
  }
  v338 = *((_QWORD *)this + 112);
  v729 = v338;
  if ((v338 & 7) != 0)
  {
    v339 = (unsigned int *)(v338 & 0xFFFFFFFFFFFFFFF8);
    do
      v340 = __ldxr(v339);
    while (__stxr(v340 + 2, v339));
    if ((v340 & 1) == 0)
      v729 &= 0xFFFFFFFFFFFFFFF8;
  }
  v341 = *((_QWORD *)this + 113);
  v730 = v341;
  if ((v341 & 7) != 0)
  {
    v342 = (unsigned int *)(v341 & 0xFFFFFFFFFFFFFFF8);
    do
      v343 = __ldxr(v342);
    while (__stxr(v343 + 2, v342));
    if ((v343 & 1) == 0)
      v730 &= 0xFFFFFFFFFFFFFFF8;
  }
  v344 = *((_QWORD *)this + 114);
  v731 = v344;
  if ((v344 & 7) != 0)
  {
    v345 = (unsigned int *)(v344 & 0xFFFFFFFFFFFFFFF8);
    do
      v346 = __ldxr(v345);
    while (__stxr(v346 + 2, v345));
    if ((v346 & 1) == 0)
      v731 &= 0xFFFFFFFFFFFFFFF8;
  }
  v347 = *((_QWORD *)this + 115);
  v732 = v347;
  if ((v347 & 7) != 0)
  {
    v348 = (unsigned int *)(v347 & 0xFFFFFFFFFFFFFFF8);
    do
      v349 = __ldxr(v348);
    while (__stxr(v349 + 2, v348));
    if ((v349 & 1) == 0)
      v732 &= 0xFFFFFFFFFFFFFFF8;
  }
  v350 = *((_QWORD *)this + 116);
  v733 = v350;
  if ((v350 & 7) != 0)
  {
    v351 = (unsigned int *)(v350 & 0xFFFFFFFFFFFFFFF8);
    do
      v352 = __ldxr(v351);
    while (__stxr(v352 + 2, v351));
    if ((v352 & 1) == 0)
      v733 &= 0xFFFFFFFFFFFFFFF8;
  }
  v353 = *((_QWORD *)this + 117);
  v734 = v353;
  if ((v353 & 7) != 0)
  {
    v354 = (unsigned int *)(v353 & 0xFFFFFFFFFFFFFFF8);
    do
      v355 = __ldxr(v354);
    while (__stxr(v355 + 2, v354));
    if ((v355 & 1) == 0)
      v734 &= 0xFFFFFFFFFFFFFFF8;
  }
  v356 = *((_QWORD *)this + 118);
  v735 = v356;
  if ((v356 & 7) != 0)
  {
    v357 = (unsigned int *)(v356 & 0xFFFFFFFFFFFFFFF8);
    do
      v358 = __ldxr(v357);
    while (__stxr(v358 + 2, v357));
    if ((v358 & 1) == 0)
      v735 &= 0xFFFFFFFFFFFFFFF8;
  }
  v359 = *((_QWORD *)this + 119);
  v736 = v359;
  if ((v359 & 7) != 0)
  {
    v360 = (unsigned int *)(v359 & 0xFFFFFFFFFFFFFFF8);
    do
      v361 = __ldxr(v360);
    while (__stxr(v361 + 2, v360));
    if ((v361 & 1) == 0)
      v736 &= 0xFFFFFFFFFFFFFFF8;
  }
  v362 = *((_QWORD *)this + 120);
  v737 = v362;
  if ((v362 & 7) != 0)
  {
    v363 = (unsigned int *)(v362 & 0xFFFFFFFFFFFFFFF8);
    do
      v364 = __ldxr(v363);
    while (__stxr(v364 + 2, v363));
    if ((v364 & 1) == 0)
      v737 &= 0xFFFFFFFFFFFFFFF8;
  }
  v365 = *((_QWORD *)this + 121);
  v738 = v365;
  if ((v365 & 7) != 0)
  {
    v366 = (unsigned int *)(v365 & 0xFFFFFFFFFFFFFFF8);
    do
      v367 = __ldxr(v366);
    while (__stxr(v367 + 2, v366));
    if ((v367 & 1) == 0)
      v738 &= 0xFFFFFFFFFFFFFFF8;
  }
  v368 = *((_QWORD *)this + 122);
  v739 = v368;
  if ((v368 & 7) != 0)
  {
    v369 = (unsigned int *)(v368 & 0xFFFFFFFFFFFFFFF8);
    do
      v370 = __ldxr(v369);
    while (__stxr(v370 + 2, v369));
    if ((v370 & 1) == 0)
      v739 &= 0xFFFFFFFFFFFFFFF8;
  }
  v371 = *((_QWORD *)this + 123);
  v740 = v371;
  if ((v371 & 7) != 0)
  {
    v372 = (unsigned int *)(v371 & 0xFFFFFFFFFFFFFFF8);
    do
      v373 = __ldxr(v372);
    while (__stxr(v373 + 2, v372));
    if ((v373 & 1) == 0)
      v740 &= 0xFFFFFFFFFFFFFFF8;
  }
  v374 = *((_QWORD *)this + 124);
  v741 = v374;
  if ((v374 & 7) != 0)
  {
    v375 = (unsigned int *)(v374 & 0xFFFFFFFFFFFFFFF8);
    do
      v376 = __ldxr(v375);
    while (__stxr(v376 + 2, v375));
    if ((v376 & 1) == 0)
      v741 &= 0xFFFFFFFFFFFFFFF8;
  }
  v377 = *((_QWORD *)this + 125);
  v742 = v377;
  if ((v377 & 7) != 0)
  {
    v378 = (unsigned int *)(v377 & 0xFFFFFFFFFFFFFFF8);
    do
      v379 = __ldxr(v378);
    while (__stxr(v379 + 2, v378));
    if ((v379 & 1) == 0)
      v742 &= 0xFFFFFFFFFFFFFFF8;
  }
  v380 = *((_QWORD *)this + 126);
  v743 = v380;
  if ((v380 & 7) != 0)
  {
    v381 = (unsigned int *)(v380 & 0xFFFFFFFFFFFFFFF8);
    do
      v382 = __ldxr(v381);
    while (__stxr(v382 + 2, v381));
    if ((v382 & 1) == 0)
      v743 &= 0xFFFFFFFFFFFFFFF8;
  }
  v383 = *((_QWORD *)this + 127);
  v744 = v383;
  if ((v383 & 7) != 0)
  {
    v384 = (unsigned int *)(v383 & 0xFFFFFFFFFFFFFFF8);
    do
      v385 = __ldxr(v384);
    while (__stxr(v385 + 2, v384));
    if ((v385 & 1) == 0)
      v744 &= 0xFFFFFFFFFFFFFFF8;
  }
  v386 = *((_QWORD *)this + 128);
  v745 = v386;
  if ((v386 & 7) != 0)
  {
    v387 = (unsigned int *)(v386 & 0xFFFFFFFFFFFFFFF8);
    do
      v388 = __ldxr(v387);
    while (__stxr(v388 + 2, v387));
    if ((v388 & 1) == 0)
      v745 &= 0xFFFFFFFFFFFFFFF8;
  }
  v389 = *((_QWORD *)this + 129);
  v746 = v389;
  if ((v389 & 7) != 0)
  {
    v390 = (unsigned int *)(v389 & 0xFFFFFFFFFFFFFFF8);
    do
      v391 = __ldxr(v390);
    while (__stxr(v391 + 2, v390));
    if ((v391 & 1) == 0)
      v746 &= 0xFFFFFFFFFFFFFFF8;
  }
  v392 = *((_QWORD *)this + 130);
  v747 = v392;
  if ((v392 & 7) != 0)
  {
    v393 = (unsigned int *)(v392 & 0xFFFFFFFFFFFFFFF8);
    do
      v394 = __ldxr(v393);
    while (__stxr(v394 + 2, v393));
    if ((v394 & 1) == 0)
      v747 &= 0xFFFFFFFFFFFFFFF8;
  }
  v395 = *((_QWORD *)this + 131);
  v748 = v395;
  if ((v395 & 7) != 0)
  {
    v396 = (unsigned int *)(v395 & 0xFFFFFFFFFFFFFFF8);
    do
      v397 = __ldxr(v396);
    while (__stxr(v397 + 2, v396));
    if ((v397 & 1) == 0)
      v748 &= 0xFFFFFFFFFFFFFFF8;
  }
  v398 = *((_QWORD *)this + 132);
  v749 = v398;
  if ((v398 & 7) != 0)
  {
    v399 = (unsigned int *)(v398 & 0xFFFFFFFFFFFFFFF8);
    do
      v400 = __ldxr(v399);
    while (__stxr(v400 + 2, v399));
    if ((v400 & 1) == 0)
      v749 &= 0xFFFFFFFFFFFFFFF8;
  }
  v401 = *((_QWORD *)this + 133);
  v750 = v401;
  if ((v401 & 7) != 0)
  {
    v402 = (unsigned int *)(v401 & 0xFFFFFFFFFFFFFFF8);
    do
      v403 = __ldxr(v402);
    while (__stxr(v403 + 2, v402));
    if ((v403 & 1) == 0)
      v750 &= 0xFFFFFFFFFFFFFFF8;
  }
  v404 = *((_QWORD *)this + 134);
  v751 = v404;
  if ((v404 & 7) != 0)
  {
    v405 = (unsigned int *)(v404 & 0xFFFFFFFFFFFFFFF8);
    do
      v406 = __ldxr(v405);
    while (__stxr(v406 + 2, v405));
    if ((v406 & 1) == 0)
      v751 &= 0xFFFFFFFFFFFFFFF8;
  }
  v407 = *((_QWORD *)this + 135);
  v752 = v407;
  if ((v407 & 7) != 0)
  {
    v408 = (unsigned int *)(v407 & 0xFFFFFFFFFFFFFFF8);
    do
      v409 = __ldxr(v408);
    while (__stxr(v409 + 2, v408));
    if ((v409 & 1) == 0)
      v752 &= 0xFFFFFFFFFFFFFFF8;
  }
  v410 = *((_QWORD *)this + 136);
  v753 = v410;
  if ((v410 & 7) != 0)
  {
    v411 = (unsigned int *)(v410 & 0xFFFFFFFFFFFFFFF8);
    do
      v412 = __ldxr(v411);
    while (__stxr(v412 + 2, v411));
    if ((v412 & 1) == 0)
      v753 &= 0xFFFFFFFFFFFFFFF8;
  }
  v413 = *((_QWORD *)this + 137);
  v754 = v413;
  if ((v413 & 7) != 0)
  {
    v414 = (unsigned int *)(v413 & 0xFFFFFFFFFFFFFFF8);
    do
      v415 = __ldxr(v414);
    while (__stxr(v415 + 2, v414));
    if ((v415 & 1) == 0)
      v754 &= 0xFFFFFFFFFFFFFFF8;
  }
  v416 = *((_QWORD *)this + 138);
  v755 = v416;
  if ((v416 & 7) != 0)
  {
    v417 = (unsigned int *)(v416 & 0xFFFFFFFFFFFFFFF8);
    do
      v418 = __ldxr(v417);
    while (__stxr(v418 + 2, v417));
    if ((v418 & 1) == 0)
      v755 &= 0xFFFFFFFFFFFFFFF8;
  }
  v419 = *((_QWORD *)this + 139);
  v756 = v419;
  if ((v419 & 7) != 0)
  {
    v420 = (unsigned int *)(v419 & 0xFFFFFFFFFFFFFFF8);
    do
      v421 = __ldxr(v420);
    while (__stxr(v421 + 2, v420));
    if ((v421 & 1) == 0)
      v756 &= 0xFFFFFFFFFFFFFFF8;
  }
  v422 = *((_QWORD *)this + 140);
  v757 = v422;
  if ((v422 & 7) != 0)
  {
    v423 = (unsigned int *)(v422 & 0xFFFFFFFFFFFFFFF8);
    do
      v424 = __ldxr(v423);
    while (__stxr(v424 + 2, v423));
    if ((v424 & 1) == 0)
      v757 &= 0xFFFFFFFFFFFFFFF8;
  }
  v425 = *((_QWORD *)this + 141);
  v758 = v425;
  if ((v425 & 7) != 0)
  {
    v426 = (unsigned int *)(v425 & 0xFFFFFFFFFFFFFFF8);
    do
      v427 = __ldxr(v426);
    while (__stxr(v427 + 2, v426));
    if ((v427 & 1) == 0)
      v758 &= 0xFFFFFFFFFFFFFFF8;
  }
  v428 = *((_QWORD *)this + 142);
  v759 = v428;
  if ((v428 & 7) != 0)
  {
    v429 = (unsigned int *)(v428 & 0xFFFFFFFFFFFFFFF8);
    do
      v430 = __ldxr(v429);
    while (__stxr(v430 + 2, v429));
    if ((v430 & 1) == 0)
      v759 &= 0xFFFFFFFFFFFFFFF8;
  }
  v431 = *((_QWORD *)this + 143);
  v760 = v431;
  if ((v431 & 7) != 0)
  {
    v432 = (unsigned int *)(v431 & 0xFFFFFFFFFFFFFFF8);
    do
      v433 = __ldxr(v432);
    while (__stxr(v433 + 2, v432));
    if ((v433 & 1) == 0)
      v760 &= 0xFFFFFFFFFFFFFFF8;
  }
  v434 = *((_QWORD *)this + 144);
  v761 = v434;
  if ((v434 & 7) != 0)
  {
    v435 = (unsigned int *)(v434 & 0xFFFFFFFFFFFFFFF8);
    do
      v436 = __ldxr(v435);
    while (__stxr(v436 + 2, v435));
    if ((v436 & 1) == 0)
      v761 &= 0xFFFFFFFFFFFFFFF8;
  }
  v437 = *((_QWORD *)this + 145);
  v762 = v437;
  if ((v437 & 7) != 0)
  {
    v438 = (unsigned int *)(v437 & 0xFFFFFFFFFFFFFFF8);
    do
      v439 = __ldxr(v438);
    while (__stxr(v439 + 2, v438));
    if ((v439 & 1) == 0)
      v762 &= 0xFFFFFFFFFFFFFFF8;
  }
  v440 = *((_QWORD *)this + 146);
  v763 = v440;
  if ((v440 & 7) != 0)
  {
    v441 = (unsigned int *)(v440 & 0xFFFFFFFFFFFFFFF8);
    do
      v442 = __ldxr(v441);
    while (__stxr(v442 + 2, v441));
    if ((v442 & 1) == 0)
      v763 &= 0xFFFFFFFFFFFFFFF8;
  }
  v443 = *((_QWORD *)this + 147);
  v764 = v443;
  if ((v443 & 7) != 0)
  {
    v444 = (unsigned int *)(v443 & 0xFFFFFFFFFFFFFFF8);
    do
      v445 = __ldxr(v444);
    while (__stxr(v445 + 2, v444));
    if ((v445 & 1) == 0)
      v764 &= 0xFFFFFFFFFFFFFFF8;
  }
  v446 = *((_QWORD *)this + 148);
  v765 = v446;
  if ((v446 & 7) != 0)
  {
    v447 = (unsigned int *)(v446 & 0xFFFFFFFFFFFFFFF8);
    do
      v448 = __ldxr(v447);
    while (__stxr(v448 + 2, v447));
    if ((v448 & 1) == 0)
      v765 &= 0xFFFFFFFFFFFFFFF8;
  }
  v449 = *((_QWORD *)this + 149);
  v766 = v449;
  if ((v449 & 7) != 0)
  {
    v450 = (unsigned int *)(v449 & 0xFFFFFFFFFFFFFFF8);
    do
      v451 = __ldxr(v450);
    while (__stxr(v451 + 2, v450));
    if ((v451 & 1) == 0)
      v766 &= 0xFFFFFFFFFFFFFFF8;
  }
  v452 = *((_QWORD *)this + 150);
  v767 = v452;
  if ((v452 & 7) != 0)
  {
    v453 = (unsigned int *)(v452 & 0xFFFFFFFFFFFFFFF8);
    do
      v454 = __ldxr(v453);
    while (__stxr(v454 + 2, v453));
    if ((v454 & 1) == 0)
      v767 &= 0xFFFFFFFFFFFFFFF8;
  }
  v455 = *((_QWORD *)this + 151);
  v768 = v455;
  if ((v455 & 7) != 0)
  {
    v456 = (unsigned int *)(v455 & 0xFFFFFFFFFFFFFFF8);
    do
      v457 = __ldxr(v456);
    while (__stxr(v457 + 2, v456));
    if ((v457 & 1) == 0)
      v768 &= 0xFFFFFFFFFFFFFFF8;
  }
  v458 = *((_QWORD *)this + 152);
  v769 = v458;
  if ((v458 & 7) != 0)
  {
    v459 = (unsigned int *)(v458 & 0xFFFFFFFFFFFFFFF8);
    do
      v460 = __ldxr(v459);
    while (__stxr(v460 + 2, v459));
    if ((v460 & 1) == 0)
      v769 &= 0xFFFFFFFFFFFFFFF8;
  }
  v461 = *((_QWORD *)this + 153);
  v770 = v461;
  if ((v461 & 7) != 0)
  {
    v462 = (unsigned int *)(v461 & 0xFFFFFFFFFFFFFFF8);
    do
      v463 = __ldxr(v462);
    while (__stxr(v463 + 2, v462));
    if ((v463 & 1) == 0)
      v770 &= 0xFFFFFFFFFFFFFFF8;
  }
  v464 = *((_QWORD *)this + 154);
  v771 = v464;
  if ((v464 & 7) != 0)
  {
    v465 = (unsigned int *)(v464 & 0xFFFFFFFFFFFFFFF8);
    do
      v466 = __ldxr(v465);
    while (__stxr(v466 + 2, v465));
    if ((v466 & 1) == 0)
      v771 &= 0xFFFFFFFFFFFFFFF8;
  }
  v467 = *((_QWORD *)this + 155);
  v772 = v467;
  if ((v467 & 7) != 0)
  {
    v468 = (unsigned int *)(v467 & 0xFFFFFFFFFFFFFFF8);
    do
      v469 = __ldxr(v468);
    while (__stxr(v469 + 2, v468));
    if ((v469 & 1) == 0)
      v772 &= 0xFFFFFFFFFFFFFFF8;
  }
  v470 = *((_QWORD *)this + 156);
  v773 = v470;
  if ((v470 & 7) != 0)
  {
    v471 = (unsigned int *)(v470 & 0xFFFFFFFFFFFFFFF8);
    do
      v472 = __ldxr(v471);
    while (__stxr(v472 + 2, v471));
    if ((v472 & 1) == 0)
      v773 &= 0xFFFFFFFFFFFFFFF8;
  }
  v473 = *((_QWORD *)this + 157);
  v774 = v473;
  if ((v473 & 7) != 0)
  {
    v474 = (unsigned int *)(v473 & 0xFFFFFFFFFFFFFFF8);
    do
      v475 = __ldxr(v474);
    while (__stxr(v475 + 2, v474));
    if ((v475 & 1) == 0)
      v774 &= 0xFFFFFFFFFFFFFFF8;
  }
  v476 = *((_QWORD *)this + 158);
  v775 = v476;
  if ((v476 & 7) != 0)
  {
    v477 = (unsigned int *)(v476 & 0xFFFFFFFFFFFFFFF8);
    do
      v478 = __ldxr(v477);
    while (__stxr(v478 + 2, v477));
    if ((v478 & 1) == 0)
      v775 &= 0xFFFFFFFFFFFFFFF8;
  }
  v479 = *((_QWORD *)this + 159);
  v776 = v479;
  if ((v479 & 7) != 0)
  {
    v480 = (unsigned int *)(v479 & 0xFFFFFFFFFFFFFFF8);
    do
      v481 = __ldxr(v480);
    while (__stxr(v481 + 2, v480));
    if ((v481 & 1) == 0)
      v776 &= 0xFFFFFFFFFFFFFFF8;
  }
  v482 = *((_QWORD *)this + 160);
  v777 = v482;
  if ((v482 & 7) != 0)
  {
    v483 = (unsigned int *)(v482 & 0xFFFFFFFFFFFFFFF8);
    do
      v484 = __ldxr(v483);
    while (__stxr(v484 + 2, v483));
    if ((v484 & 1) == 0)
      v777 &= 0xFFFFFFFFFFFFFFF8;
  }
  v485 = *((_QWORD *)this + 161);
  v778 = v485;
  if ((v485 & 7) != 0)
  {
    v486 = (unsigned int *)(v485 & 0xFFFFFFFFFFFFFFF8);
    do
      v487 = __ldxr(v486);
    while (__stxr(v487 + 2, v486));
    if ((v487 & 1) == 0)
      v778 &= 0xFFFFFFFFFFFFFFF8;
  }
  v488 = *((_QWORD *)this + 162);
  v779 = v488;
  if ((v488 & 7) != 0)
  {
    v489 = (unsigned int *)(v488 & 0xFFFFFFFFFFFFFFF8);
    do
      v490 = __ldxr(v489);
    while (__stxr(v490 + 2, v489));
    if ((v490 & 1) == 0)
      v779 &= 0xFFFFFFFFFFFFFFF8;
  }
  v491 = *((_QWORD *)this + 163);
  v780 = v491;
  if ((v491 & 7) != 0)
  {
    v492 = (unsigned int *)(v491 & 0xFFFFFFFFFFFFFFF8);
    do
      v493 = __ldxr(v492);
    while (__stxr(v493 + 2, v492));
    if ((v493 & 1) == 0)
      v780 &= 0xFFFFFFFFFFFFFFF8;
  }
  v494 = *((_QWORD *)this + 164);
  v781 = v494;
  if ((v494 & 7) != 0)
  {
    v495 = (unsigned int *)(v494 & 0xFFFFFFFFFFFFFFF8);
    do
      v496 = __ldxr(v495);
    while (__stxr(v496 + 2, v495));
    if ((v496 & 1) == 0)
      v781 &= 0xFFFFFFFFFFFFFFF8;
  }
  v497 = *((_QWORD *)this + 165);
  v782 = v497;
  if ((v497 & 7) != 0)
  {
    v498 = (unsigned int *)(v497 & 0xFFFFFFFFFFFFFFF8);
    do
      v499 = __ldxr(v498);
    while (__stxr(v499 + 2, v498));
    if ((v499 & 1) == 0)
      v782 &= 0xFFFFFFFFFFFFFFF8;
  }
  v500 = *((_QWORD *)this + 166);
  v783 = v500;
  if ((v500 & 7) != 0)
  {
    v501 = (unsigned int *)(v500 & 0xFFFFFFFFFFFFFFF8);
    do
      v502 = __ldxr(v501);
    while (__stxr(v502 + 2, v501));
    if ((v502 & 1) == 0)
      v783 &= 0xFFFFFFFFFFFFFFF8;
  }
  v503 = *((_QWORD *)this + 167);
  v784 = v503;
  if ((v503 & 7) != 0)
  {
    v504 = (unsigned int *)(v503 & 0xFFFFFFFFFFFFFFF8);
    do
      v505 = __ldxr(v504);
    while (__stxr(v505 + 2, v504));
    if ((v505 & 1) == 0)
      v784 &= 0xFFFFFFFFFFFFFFF8;
  }
  v506 = *((_QWORD *)this + 168);
  v785 = v506;
  if ((v506 & 7) != 0)
  {
    v507 = (unsigned int *)(v506 & 0xFFFFFFFFFFFFFFF8);
    do
      v508 = __ldxr(v507);
    while (__stxr(v508 + 2, v507));
    if ((v508 & 1) == 0)
      v785 &= 0xFFFFFFFFFFFFFFF8;
  }
  v509 = *((_QWORD *)this + 169);
  v786 = v509;
  if ((v509 & 7) != 0)
  {
    v510 = (unsigned int *)(v509 & 0xFFFFFFFFFFFFFFF8);
    do
      v511 = __ldxr(v510);
    while (__stxr(v511 + 2, v510));
    if ((v511 & 1) == 0)
      v786 &= 0xFFFFFFFFFFFFFFF8;
  }
  v512 = *((_QWORD *)this + 170);
  v787 = v512;
  if ((v512 & 7) != 0)
  {
    v513 = (unsigned int *)(v512 & 0xFFFFFFFFFFFFFFF8);
    do
      v514 = __ldxr(v513);
    while (__stxr(v514 + 2, v513));
    if ((v514 & 1) == 0)
      v787 &= 0xFFFFFFFFFFFFFFF8;
  }
  v515 = *((_QWORD *)this + 171);
  v788 = v515;
  if ((v515 & 7) != 0)
  {
    v516 = (unsigned int *)(v515 & 0xFFFFFFFFFFFFFFF8);
    do
      v517 = __ldxr(v516);
    while (__stxr(v517 + 2, v516));
    if ((v517 & 1) == 0)
      v788 &= 0xFFFFFFFFFFFFFFF8;
  }
  v518 = *((_QWORD *)this + 172);
  v789 = v518;
  if ((v518 & 7) != 0)
  {
    v519 = (unsigned int *)(v518 & 0xFFFFFFFFFFFFFFF8);
    do
      v520 = __ldxr(v519);
    while (__stxr(v520 + 2, v519));
    if ((v520 & 1) == 0)
      v789 &= 0xFFFFFFFFFFFFFFF8;
  }
  v521 = *((_QWORD *)this + 173);
  v790 = v521;
  if ((v521 & 7) != 0)
  {
    v522 = (unsigned int *)(v521 & 0xFFFFFFFFFFFFFFF8);
    do
      v523 = __ldxr(v522);
    while (__stxr(v523 + 2, v522));
    if ((v523 & 1) == 0)
      v790 &= 0xFFFFFFFFFFFFFFF8;
  }
  v524 = *((_QWORD *)this + 174);
  v791 = v524;
  if ((v524 & 7) != 0)
  {
    v525 = (unsigned int *)(v524 & 0xFFFFFFFFFFFFFFF8);
    do
      v526 = __ldxr(v525);
    while (__stxr(v526 + 2, v525));
    if ((v526 & 1) == 0)
      v791 &= 0xFFFFFFFFFFFFFFF8;
  }
  v527 = *((_QWORD *)this + 175);
  v792 = v527;
  if ((v527 & 7) != 0)
  {
    v528 = (unsigned int *)(v527 & 0xFFFFFFFFFFFFFFF8);
    do
      v529 = __ldxr(v528);
    while (__stxr(v529 + 2, v528));
    if ((v529 & 1) == 0)
      v792 &= 0xFFFFFFFFFFFFFFF8;
  }
  v530 = *((_QWORD *)this + 176);
  v793 = v530;
  if ((v530 & 7) != 0)
  {
    v531 = (unsigned int *)(v530 & 0xFFFFFFFFFFFFFFF8);
    do
      v532 = __ldxr(v531);
    while (__stxr(v532 + 2, v531));
    if ((v532 & 1) == 0)
      v793 &= 0xFFFFFFFFFFFFFFF8;
  }
  v533 = *((_QWORD *)this + 177);
  v794 = v533;
  if ((v533 & 7) != 0)
  {
    v534 = (unsigned int *)(v533 & 0xFFFFFFFFFFFFFFF8);
    do
      v535 = __ldxr(v534);
    while (__stxr(v535 + 2, v534));
    if ((v535 & 1) == 0)
      v794 &= 0xFFFFFFFFFFFFFFF8;
  }
  v536 = *((_QWORD *)this + 178);
  v795 = v536;
  if ((v536 & 7) != 0)
  {
    v537 = (unsigned int *)(v536 & 0xFFFFFFFFFFFFFFF8);
    do
      v538 = __ldxr(v537);
    while (__stxr(v538 + 2, v537));
    if ((v538 & 1) == 0)
      v795 &= 0xFFFFFFFFFFFFFFF8;
  }
  v539 = *((_QWORD *)this + 179);
  v796 = v539;
  if ((v539 & 7) != 0)
  {
    v540 = (unsigned int *)(v539 & 0xFFFFFFFFFFFFFFF8);
    do
      v541 = __ldxr(v540);
    while (__stxr(v541 + 2, v540));
    if ((v541 & 1) == 0)
      v796 &= 0xFFFFFFFFFFFFFFF8;
  }
  v542 = *((_QWORD *)this + 180);
  v797 = v542;
  if ((v542 & 7) != 0)
  {
    v543 = (unsigned int *)(v542 & 0xFFFFFFFFFFFFFFF8);
    do
      v544 = __ldxr(v543);
    while (__stxr(v544 + 2, v543));
    if ((v544 & 1) == 0)
      v797 &= 0xFFFFFFFFFFFFFFF8;
  }
  v545 = *((_QWORD *)this + 181);
  v798 = v545;
  if ((v545 & 7) != 0)
  {
    v546 = (unsigned int *)(v545 & 0xFFFFFFFFFFFFFFF8);
    do
      v547 = __ldxr(v546);
    while (__stxr(v547 + 2, v546));
    if ((v547 & 1) == 0)
      v798 &= 0xFFFFFFFFFFFFFFF8;
  }
  v548 = *((_QWORD *)this + 182);
  v799 = v548;
  if ((v548 & 7) != 0)
  {
    v549 = (unsigned int *)(v548 & 0xFFFFFFFFFFFFFFF8);
    do
      v550 = __ldxr(v549);
    while (__stxr(v550 + 2, v549));
    if ((v550 & 1) == 0)
      v799 &= 0xFFFFFFFFFFFFFFF8;
  }
  v551 = *((_QWORD *)this + 183);
  v800 = v551;
  if ((v551 & 7) != 0)
  {
    v552 = (unsigned int *)(v551 & 0xFFFFFFFFFFFFFFF8);
    do
      v553 = __ldxr(v552);
    while (__stxr(v553 + 2, v552));
    if ((v553 & 1) == 0)
      v800 &= 0xFFFFFFFFFFFFFFF8;
  }
  v554 = *((_QWORD *)this + 184);
  v801 = v554;
  if ((v554 & 7) != 0)
  {
    v555 = (unsigned int *)(v554 & 0xFFFFFFFFFFFFFFF8);
    do
      v556 = __ldxr(v555);
    while (__stxr(v556 + 2, v555));
    if ((v556 & 1) == 0)
      v801 &= 0xFFFFFFFFFFFFFFF8;
  }
  v557 = *((_QWORD *)this + 185);
  v802 = v557;
  if ((v557 & 7) != 0)
  {
    v558 = (unsigned int *)(v557 & 0xFFFFFFFFFFFFFFF8);
    do
      v559 = __ldxr(v558);
    while (__stxr(v559 + 2, v558));
    if ((v559 & 1) == 0)
      v802 &= 0xFFFFFFFFFFFFFFF8;
  }
  v560 = *((_QWORD *)this + 186);
  v803 = v560;
  if ((v560 & 7) != 0)
  {
    v561 = (unsigned int *)(v560 & 0xFFFFFFFFFFFFFFF8);
    do
      v562 = __ldxr(v561);
    while (__stxr(v562 + 2, v561));
    if ((v562 & 1) == 0)
      v803 &= 0xFFFFFFFFFFFFFFF8;
  }
  v563 = *((_QWORD *)this + 187);
  v804 = v563;
  if ((v563 & 7) != 0)
  {
    v564 = (unsigned int *)(v563 & 0xFFFFFFFFFFFFFFF8);
    do
      v565 = __ldxr(v564);
    while (__stxr(v565 + 2, v564));
    if ((v565 & 1) == 0)
      v804 &= 0xFFFFFFFFFFFFFFF8;
  }
  v566 = *((_QWORD *)this + 188);
  v805 = v566;
  if ((v566 & 7) != 0)
  {
    v567 = (unsigned int *)(v566 & 0xFFFFFFFFFFFFFFF8);
    do
      v568 = __ldxr(v567);
    while (__stxr(v568 + 2, v567));
    if ((v568 & 1) == 0)
      v805 &= 0xFFFFFFFFFFFFFFF8;
  }
  v569 = *((_QWORD *)this + 189);
  v806 = v569;
  if ((v569 & 7) != 0)
  {
    v570 = (unsigned int *)(v569 & 0xFFFFFFFFFFFFFFF8);
    do
      v571 = __ldxr(v570);
    while (__stxr(v571 + 2, v570));
    if ((v571 & 1) == 0)
      v806 &= 0xFFFFFFFFFFFFFFF8;
  }
  v572 = *((_QWORD *)this + 190);
  v807 = v572;
  if ((v572 & 7) != 0)
  {
    v573 = (unsigned int *)(v572 & 0xFFFFFFFFFFFFFFF8);
    do
      v574 = __ldxr(v573);
    while (__stxr(v574 + 2, v573));
    if ((v574 & 1) == 0)
      v807 &= 0xFFFFFFFFFFFFFFF8;
  }
  v575 = *((_QWORD *)this + 191);
  v808 = v575;
  if ((v575 & 7) != 0)
  {
    v576 = (unsigned int *)(v575 & 0xFFFFFFFFFFFFFFF8);
    do
      v577 = __ldxr(v576);
    while (__stxr(v577 + 2, v576));
    if ((v577 & 1) == 0)
      v808 &= 0xFFFFFFFFFFFFFFF8;
  }
  v578 = *((_QWORD *)this + 192);
  v809 = v578;
  if ((v578 & 7) != 0)
  {
    v579 = (unsigned int *)(v578 & 0xFFFFFFFFFFFFFFF8);
    do
      v580 = __ldxr(v579);
    while (__stxr(v580 + 2, v579));
    if ((v580 & 1) == 0)
      v809 &= 0xFFFFFFFFFFFFFFF8;
  }
  v581 = *((_QWORD *)this + 193);
  v810 = v581;
  if ((v581 & 7) != 0)
  {
    v582 = (unsigned int *)(v581 & 0xFFFFFFFFFFFFFFF8);
    do
      v583 = __ldxr(v582);
    while (__stxr(v583 + 2, v582));
    if ((v583 & 1) == 0)
      v810 &= 0xFFFFFFFFFFFFFFF8;
  }
  v584 = *((_QWORD *)this + 194);
  v811 = v584;
  if ((v584 & 7) != 0)
  {
    v585 = (unsigned int *)(v584 & 0xFFFFFFFFFFFFFFF8);
    do
      v586 = __ldxr(v585);
    while (__stxr(v586 + 2, v585));
    if ((v586 & 1) == 0)
      v811 &= 0xFFFFFFFFFFFFFFF8;
  }
  v587 = *((_QWORD *)this + 195);
  v812 = v587;
  if ((v587 & 7) != 0)
  {
    v588 = (unsigned int *)(v587 & 0xFFFFFFFFFFFFFFF8);
    do
      v589 = __ldxr(v588);
    while (__stxr(v589 + 2, v588));
    if ((v589 & 1) == 0)
      v812 &= 0xFFFFFFFFFFFFFFF8;
  }
  v590 = *((_QWORD *)this + 196);
  v813 = v590;
  if ((v590 & 7) != 0)
  {
    v591 = (unsigned int *)(v590 & 0xFFFFFFFFFFFFFFF8);
    do
      v592 = __ldxr(v591);
    while (__stxr(v592 + 2, v591));
    if ((v592 & 1) == 0)
      v813 &= 0xFFFFFFFFFFFFFFF8;
  }
  v593 = *((_QWORD *)this + 197);
  v814 = v593;
  if ((v593 & 7) != 0)
  {
    v594 = (unsigned int *)(v593 & 0xFFFFFFFFFFFFFFF8);
    do
      v595 = __ldxr(v594);
    while (__stxr(v595 + 2, v594));
    if ((v595 & 1) == 0)
      v814 &= 0xFFFFFFFFFFFFFFF8;
  }
  v596 = *((_QWORD *)this + 198);
  v815 = v596;
  if ((v596 & 7) != 0)
  {
    v597 = (unsigned int *)(v596 & 0xFFFFFFFFFFFFFFF8);
    do
      v598 = __ldxr(v597);
    while (__stxr(v598 + 2, v597));
    if ((v598 & 1) == 0)
      v815 &= 0xFFFFFFFFFFFFFFF8;
  }
  v599 = *((_QWORD *)this + 199);
  v816 = v599;
  if ((v599 & 7) != 0)
  {
    v600 = (unsigned int *)(v599 & 0xFFFFFFFFFFFFFFF8);
    do
      v601 = __ldxr(v600);
    while (__stxr(v601 + 2, v600));
    if ((v601 & 1) == 0)
      v816 &= 0xFFFFFFFFFFFFFFF8;
  }
  v602 = *((_QWORD *)this + 200);
  v817 = v602;
  if ((v602 & 7) != 0)
  {
    v603 = (unsigned int *)(v602 & 0xFFFFFFFFFFFFFFF8);
    do
      v604 = __ldxr(v603);
    while (__stxr(v604 + 2, v603));
    if ((v604 & 1) == 0)
      v817 &= 0xFFFFFFFFFFFFFFF8;
  }
  *((_QWORD *)this + 201) = 0;
  *((_QWORD *)this + 202) = 0;
  *((_QWORD *)this + 203) = 0;
  v605 = operator new(0x648uLL);
  v606 = 0;
  *((_QWORD *)this + 201) = v605;
  *((_QWORD *)this + 202) = v605;
  *((_QWORD *)this + 203) = v605 + 201;
  do
  {
    v607 = *(&v617 + v606);
    *v605 = v607;
    if ((v607 & 7) != 0)
    {
      v608 = (unsigned int *)(v607 & 0xFFFFFFFFFFFFFFF8);
      do
        v609 = __ldxr(v608);
      while (__stxr(v609 + 2, v608));
      if ((v609 & 1) == 0)
        *v605 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v606;
    ++v605;
  }
  while (v606 != 201);
  v610 = &v818;
  *((_QWORD *)this + 202) = v605;
  do
  {
    v612 = *--v610;
    v611 = v612;
    if ((v612 & 7) != 0)
    {
      v613 = (unsigned int *)(v611 & 0xFFFFFFFFFFFFFFF8);
      do
        v614 = __ldxr(v613);
      while (__stlxr(v614 - 2, v613));
    }
  }
  while (v610 != &v617);
  return this;
}

void sub_20C53AC80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _Unwind_Exception *exception_objecta, _QWORD *a11, _QWORD *a12, _QWORD *a13, _QWORD *a14, _QWORD *a15, _QWORD *a16, _QWORD *a17, _QWORD *a18, _QWORD *a19, _QWORD *a20,_QWORD *a21,_QWORD *a22,_QWORD *a23,_QWORD *a24,_QWORD *a25,_QWORD *a26,_QWORD *a27,_QWORD *a28,_QWORD *a29,_QWORD *a30,_QWORD *a31,_QWORD *a32,_QWORD *a33,_QWORD *a34,_QWORD *a35,_QWORD *a36,_QWORD *a37,_QWORD *a38,_QWORD *a39,_QWORD *a40,_QWORD *a41,_QWORD *a42,_QWORD *a43,_QWORD *a44,_QWORD *a45,_QWORD *a46,_QWORD *a47,_QWORD *a48,_QWORD *a49,_QWORD *a50,_QWORD *a51,_QWORD *a52,_QWORD *a53,_QWORD *a54,_QWORD *a55,_QWORD *a56,_QWORD *a57,_QWORD *a58,_QWORD *a59,_QWORD *a60,_QWORD *a61,_QWORD *a62,_QWORD *a63)
{
  _QWORD *a64;
  _QWORD *a65;
  _QWORD *a66;
  _QWORD *a67;
  _QWORD *a68;
  _QWORD *a69;
  _QWORD *a70;
  _QWORD *a71;
  _QWORD *a72;
  _QWORD *v72;
  _QWORD *v73;
  _QWORD *v74;
  _QWORD *v75;
  _QWORD *v76;
  _QWORD *v77;
  _QWORD *v78;
  _QWORD *v79;
  _QWORD *v80;
  _QWORD *v81;
  unint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int *v85;
  unsigned int v86;
  unsigned int *v87;
  unsigned int v88;
  unsigned int *v89;
  unsigned int v90;
  unsigned int *v91;
  unsigned int v92;
  unsigned int *v93;
  unsigned int v94;
  unsigned int *v95;
  unsigned int v96;
  unsigned int *v97;
  unsigned int v98;
  unsigned int *v99;
  unsigned int v100;
  unsigned int *v101;
  unsigned int v102;
  unsigned int *v103;
  unsigned int v104;
  unsigned int *v105;
  unsigned int v106;
  unsigned int *v107;
  unsigned int v108;
  unsigned int *v109;
  unsigned int v110;
  unsigned int *v111;
  unsigned int v112;
  unsigned int *v113;
  unsigned int v114;
  unsigned int *v115;
  unsigned int v116;
  unsigned int *v117;
  unsigned int v118;
  unsigned int *v119;
  unsigned int v120;
  unsigned int *v121;
  unsigned int v122;
  unsigned int *v123;
  unsigned int v124;
  unsigned int *v125;
  unsigned int v126;
  unsigned int *v127;
  unsigned int v128;
  unsigned int *v129;
  unsigned int v130;
  unsigned int *v131;
  unsigned int v132;
  unsigned int *v133;
  unsigned int v134;
  unsigned int *v135;
  unsigned int v136;
  unsigned int *v137;
  unsigned int v138;
  unsigned int *v139;
  unsigned int v140;
  unsigned int *v141;
  unsigned int v142;
  unsigned int *v143;
  unsigned int v144;
  unsigned int *v145;
  unsigned int v146;
  unsigned int *v147;
  unsigned int v148;
  unsigned int *v149;
  unsigned int v150;
  unsigned int *v151;
  unsigned int v152;
  unsigned int *v153;
  unsigned int v154;
  unsigned int *v155;
  unsigned int v156;
  unsigned int *v157;
  unsigned int v158;
  unsigned int *v159;
  unsigned int v160;
  unsigned int *v161;
  unsigned int v162;
  unsigned int *v163;
  unsigned int v164;
  unsigned int *v165;
  unsigned int v166;
  unsigned int *v167;
  unsigned int v168;
  unsigned int *v169;
  unsigned int v170;
  unsigned int *v171;
  unsigned int v172;
  unsigned int *v173;
  unsigned int v174;
  unsigned int *v175;
  unsigned int v176;
  unsigned int *v177;
  unsigned int v178;
  unsigned int *v179;
  unsigned int v180;
  unsigned int *v181;
  unsigned int v182;
  unsigned int *v183;
  unsigned int v184;
  unsigned int *v185;
  unsigned int v186;
  unsigned int *v187;
  unsigned int v188;
  unsigned int *v189;
  unsigned int v190;
  unsigned int *v191;
  unsigned int v192;
  unsigned int *v193;
  unsigned int v194;
  unsigned int *v195;
  unsigned int v196;
  unsigned int *v197;
  unsigned int v198;
  unsigned int *v199;
  unsigned int v200;
  unsigned int *v201;
  unsigned int v202;
  unsigned int *v203;
  unsigned int v204;
  unsigned int *v205;
  unsigned int v206;
  unsigned int *v207;
  unsigned int v208;
  unsigned int *v209;
  unsigned int v210;
  unsigned int *v211;
  unsigned int v212;
  unsigned int *v213;
  unsigned int v214;
  unsigned int *v215;
  unsigned int v216;
  unsigned int *v217;
  unsigned int v218;
  unsigned int *v219;
  unsigned int v220;
  unsigned int *v221;
  unsigned int v222;
  unsigned int *v223;
  unsigned int v224;
  unsigned int *v225;
  unsigned int v226;
  unsigned int *v227;
  unsigned int v228;
  uint64_t v229;
  unsigned int *v230;
  unsigned int v231;
  uint64_t v232;
  unsigned int *v233;
  unsigned int v234;
  uint64_t v235;
  unsigned int *v236;
  unsigned int v237;
  uint64_t v238;
  unsigned int *v239;
  unsigned int v240;
  uint64_t v241;
  unsigned int *v242;
  unsigned int v243;
  uint64_t v244;
  unsigned int *v245;
  unsigned int v246;
  uint64_t v247;
  unsigned int *v248;
  unsigned int v249;
  uint64_t v250;
  unsigned int *v251;
  unsigned int v252;
  uint64_t v253;
  unsigned int *v254;
  unsigned int v255;
  uint64_t v256;
  unsigned int *v257;
  unsigned int v258;
  uint64_t v259;
  unsigned int *v260;
  unsigned int v261;
  uint64_t v262;
  unsigned int *v263;
  unsigned int v264;
  uint64_t v265;
  unsigned int *v266;
  unsigned int v267;
  uint64_t v268;
  unsigned int *v269;
  unsigned int v270;
  uint64_t v271;
  unsigned int *v272;
  unsigned int v273;
  uint64_t v274;
  unsigned int *v275;
  unsigned int v276;
  uint64_t v277;
  unsigned int *v278;
  unsigned int v279;
  uint64_t v280;
  unsigned int *v281;
  unsigned int v282;
  uint64_t v283;
  unsigned int *v284;
  unsigned int v285;
  uint64_t v286;
  unsigned int *v287;
  unsigned int v288;
  uint64_t v289;
  unsigned int *v290;
  unsigned int v291;
  uint64_t v292;
  unsigned int *v293;
  unsigned int v294;
  uint64_t v295;
  unsigned int *v296;
  unsigned int v297;
  uint64_t v298;
  unsigned int *v299;
  unsigned int v300;
  uint64_t v301;
  unsigned int *v302;
  unsigned int v303;
  uint64_t v304;
  unsigned int *v305;
  unsigned int v306;
  uint64_t v307;
  unsigned int *v308;
  unsigned int v309;
  uint64_t v310;
  unsigned int *v311;
  unsigned int v312;
  uint64_t v313;
  unsigned int *v314;
  unsigned int v315;
  uint64_t v316;
  unsigned int *v317;
  unsigned int v318;
  uint64_t v319;
  unsigned int *v320;
  unsigned int v321;
  uint64_t v322;
  unsigned int *v323;
  unsigned int v324;
  uint64_t v325;
  unsigned int *v326;
  unsigned int v327;
  uint64_t v328;
  unsigned int *v329;
  unsigned int v330;
  uint64_t v331;
  unsigned int *v332;
  unsigned int v333;
  uint64_t v334;
  unsigned int *v335;
  unsigned int v336;
  uint64_t v337;
  unsigned int *v338;
  unsigned int v339;
  uint64_t v340;
  unsigned int *v341;
  unsigned int v342;
  uint64_t v343;
  unsigned int *v344;
  unsigned int v345;
  uint64_t v346;
  unsigned int *v347;
  unsigned int v348;
  uint64_t v349;
  unsigned int *v350;
  unsigned int v351;
  uint64_t v352;
  unsigned int *v353;
  unsigned int v354;
  uint64_t v355;
  unsigned int *v356;
  unsigned int v357;
  uint64_t v358;
  unsigned int *v359;
  unsigned int v360;
  uint64_t v361;
  unsigned int *v362;
  unsigned int v363;
  uint64_t v364;
  unsigned int *v365;
  unsigned int v366;
  uint64_t v367;
  unsigned int *v368;
  unsigned int v369;
  uint64_t v370;
  unsigned int *v371;
  unsigned int v372;
  uint64_t v373;
  unsigned int *v374;
  unsigned int v375;
  uint64_t v376;
  unsigned int *v377;
  unsigned int v378;
  uint64_t v379;
  unsigned int *v380;
  unsigned int v381;
  uint64_t v382;
  unsigned int *v383;
  unsigned int v384;
  uint64_t v385;
  unsigned int *v386;
  unsigned int v387;
  uint64_t v388;
  unsigned int *v389;
  unsigned int v390;
  uint64_t v391;
  unsigned int *v392;
  unsigned int v393;
  uint64_t v394;
  unsigned int *v395;
  unsigned int v396;
  uint64_t v397;
  unsigned int *v398;
  unsigned int v399;
  uint64_t v400;
  unsigned int *v401;
  unsigned int v402;
  uint64_t v403;
  unsigned int *v404;
  unsigned int v405;
  uint64_t v406;
  unsigned int *v407;
  unsigned int v408;
  uint64_t v409;
  unsigned int *v410;
  unsigned int v411;
  uint64_t v412;
  unsigned int *v413;
  unsigned int v414;
  uint64_t v415;
  unsigned int *v416;
  unsigned int v417;
  uint64_t v418;
  unsigned int *v419;
  unsigned int v420;
  uint64_t v421;
  unsigned int *v422;
  unsigned int v423;
  uint64_t v424;
  unsigned int *v425;
  unsigned int v426;
  uint64_t v427;
  unsigned int *v428;
  unsigned int v429;
  uint64_t v430;
  unsigned int *v431;
  unsigned int v432;
  uint64_t v433;
  unsigned int *v434;
  unsigned int v435;
  uint64_t v436;
  unsigned int *v437;
  unsigned int v438;
  uint64_t v439;
  unsigned int *v440;
  unsigned int v441;
  uint64_t v442;
  unsigned int *v443;
  unsigned int v444;
  uint64_t v445;
  unsigned int *v446;
  unsigned int v447;
  uint64_t v448;
  unsigned int *v449;
  unsigned int v450;
  uint64_t v451;
  unsigned int *v452;
  unsigned int v453;
  uint64_t v454;
  unsigned int *v455;
  unsigned int v456;
  uint64_t v457;
  unsigned int *v458;
  unsigned int v459;
  uint64_t v460;
  unsigned int *v461;
  unsigned int v462;
  uint64_t v463;
  unsigned int *v464;
  unsigned int v465;
  uint64_t v466;
  unsigned int *v467;
  unsigned int v468;
  uint64_t v469;
  unsigned int *v470;
  unsigned int v471;
  uint64_t v472;
  unsigned int *v473;
  unsigned int v474;
  uint64_t v475;
  unsigned int *v476;
  unsigned int v477;
  uint64_t v478;
  unsigned int *v479;
  unsigned int v480;
  uint64_t v481;
  unsigned int *v482;
  unsigned int v483;
  uint64_t v484;
  unsigned int *v485;
  unsigned int v486;
  uint64_t v487;
  unsigned int *v488;
  unsigned int v489;
  uint64_t v490;
  unsigned int *v491;
  unsigned int v492;
  uint64_t v493;
  unsigned int *v494;
  unsigned int v495;
  uint64_t v496;
  unsigned int *v497;
  unsigned int v498;
  uint64_t v499;
  unsigned int *v500;
  unsigned int v501;
  uint64_t v502;
  unsigned int *v503;
  unsigned int v504;
  uint64_t v505;
  unsigned int *v506;
  unsigned int v507;
  uint64_t v508;
  unsigned int *v509;
  unsigned int v510;
  uint64_t v511;
  unsigned int *v512;
  unsigned int v513;
  uint64_t v514;
  unsigned int *v515;
  unsigned int v516;
  uint64_t v517;
  unsigned int *v518;
  unsigned int v519;
  uint64_t v520;
  unsigned int *v521;
  unsigned int v522;
  uint64_t v523;
  unsigned int *v524;
  unsigned int v525;
  uint64_t v526;
  unsigned int *v527;
  unsigned int v528;
  uint64_t v529;
  unsigned int *v530;
  unsigned int v531;
  uint64_t v532;
  unsigned int *v533;
  unsigned int v534;
  uint64_t v535;
  unsigned int *v536;
  unsigned int v537;
  uint64_t v538;
  unsigned int *v539;
  unsigned int v540;
  uint64_t v541;
  unsigned int *v542;
  unsigned int v543;
  uint64_t v544;
  unsigned int *v545;
  unsigned int v546;
  uint64_t v547;
  unsigned int *v548;
  unsigned int v549;
  uint64_t v550;
  unsigned int *v551;
  unsigned int v552;
  uint64_t v553;
  unsigned int *v554;
  unsigned int v555;
  uint64_t v556;
  unsigned int *v557;
  unsigned int v558;
  uint64_t v559;
  unsigned int *v560;
  unsigned int v561;
  uint64_t v562;
  unsigned int *v563;
  unsigned int v564;
  uint64_t v565;
  unsigned int *v566;
  unsigned int v567;
  uint64_t v568;
  unsigned int *v569;
  unsigned int v570;
  uint64_t v571;
  unsigned int *v572;
  unsigned int v573;
  uint64_t v574;
  unsigned int *v575;
  unsigned int v576;
  uint64_t v577;
  unsigned int *v578;
  unsigned int v579;
  uint64_t v580;
  unsigned int *v581;
  unsigned int v582;
  uint64_t v583;
  unsigned int *v584;
  unsigned int v585;
  uint64_t v586;
  unsigned int *v587;
  unsigned int v588;
  uint64_t v589;
  unsigned int *v590;
  unsigned int v591;
  uint64_t v592;
  unsigned int *v593;
  unsigned int v594;
  uint64_t v595;
  unsigned int *v596;
  unsigned int v597;
  uint64_t v598;
  unsigned int *v599;
  unsigned int v600;
  uint64_t v601;
  unsigned int *v602;
  unsigned int v603;
  uint64_t v604;
  unsigned int *v605;
  unsigned int v606;
  uint64_t v607;
  unsigned int *v608;
  unsigned int v609;
  uint64_t v610;
  unsigned int *v611;
  unsigned int v612;
  uint64_t v613;
  unsigned int *v614;
  unsigned int v615;
  unsigned int *v616;
  unsigned int v617;

  sub_20BEEB2B8((void ***)&STACK[0x608]);
  v82 = &STACK[0xC60];
  while (1)
  {
    v84 = *--v82;
    v83 = v84;
    if ((v84 & 7) != 0)
    {
      v85 = (unsigned int *)(v83 & 0xFFFFFFFFFFFFFFF8);
      do
        v86 = __ldxr(v85);
      while (__stlxr(v86 - 2, v85));
    }
    if (v82 == &STACK[0x618])
    {
      if ((*v74 & 7) != 0)
      {
        v87 = (unsigned int *)(*v74 & 0xFFFFFFFFFFFFFFF8);
        do
          v88 = __ldxr(v87);
        while (__stlxr(v88 - 2, v87));
      }
      if ((*v73 & 7) != 0)
      {
        v89 = (unsigned int *)(*v73 & 0xFFFFFFFFFFFFFFF8);
        do
          v90 = __ldxr(v89);
        while (__stlxr(v90 - 2, v89));
      }
      if ((*v81 & 7) != 0)
      {
        v91 = (unsigned int *)(*v81 & 0xFFFFFFFFFFFFFFF8);
        do
          v92 = __ldxr(v91);
        while (__stlxr(v92 - 2, v91));
      }
      if ((*v80 & 7) != 0)
      {
        v93 = (unsigned int *)(*v80 & 0xFFFFFFFFFFFFFFF8);
        do
          v94 = __ldxr(v93);
        while (__stlxr(v94 - 2, v93));
      }
      if ((*v79 & 7) != 0)
      {
        v95 = (unsigned int *)(*v79 & 0xFFFFFFFFFFFFFFF8);
        do
          v96 = __ldxr(v95);
        while (__stlxr(v96 - 2, v95));
      }
      if ((*v78 & 7) != 0)
      {
        v97 = (unsigned int *)(*v78 & 0xFFFFFFFFFFFFFFF8);
        do
          v98 = __ldxr(v97);
        while (__stlxr(v98 - 2, v97));
      }
      if ((*v77 & 7) != 0)
      {
        v99 = (unsigned int *)(*v77 & 0xFFFFFFFFFFFFFFF8);
        do
          v100 = __ldxr(v99);
        while (__stlxr(v100 - 2, v99));
      }
      if ((*v76 & 7) != 0)
      {
        v101 = (unsigned int *)(*v76 & 0xFFFFFFFFFFFFFFF8);
        do
          v102 = __ldxr(v101);
        while (__stlxr(v102 - 2, v101));
      }
      if ((*v75 & 7) != 0)
      {
        v103 = (unsigned int *)(*v75 & 0xFFFFFFFFFFFFFFF8);
        do
          v104 = __ldxr(v103);
        while (__stlxr(v104 - 2, v103));
      }
      if ((*a11 & 7) != 0)
      {
        v105 = (unsigned int *)(*a11 & 0xFFFFFFFFFFFFFFF8);
        do
          v106 = __ldxr(v105);
        while (__stlxr(v106 - 2, v105));
      }
      if ((*a12 & 7) != 0)
      {
        v107 = (unsigned int *)(*a12 & 0xFFFFFFFFFFFFFFF8);
        do
          v108 = __ldxr(v107);
        while (__stlxr(v108 - 2, v107));
      }
      if ((*a13 & 7) != 0)
      {
        v109 = (unsigned int *)(*a13 & 0xFFFFFFFFFFFFFFF8);
        do
          v110 = __ldxr(v109);
        while (__stlxr(v110 - 2, v109));
      }
      if ((*a14 & 7) != 0)
      {
        v111 = (unsigned int *)(*a14 & 0xFFFFFFFFFFFFFFF8);
        do
          v112 = __ldxr(v111);
        while (__stlxr(v112 - 2, v111));
      }
      if ((*a15 & 7) != 0)
      {
        v113 = (unsigned int *)(*a15 & 0xFFFFFFFFFFFFFFF8);
        do
          v114 = __ldxr(v113);
        while (__stlxr(v114 - 2, v113));
      }
      if ((*a16 & 7) != 0)
      {
        v115 = (unsigned int *)(*a16 & 0xFFFFFFFFFFFFFFF8);
        do
          v116 = __ldxr(v115);
        while (__stlxr(v116 - 2, v115));
      }
      if ((*a17 & 7) != 0)
      {
        v117 = (unsigned int *)(*a17 & 0xFFFFFFFFFFFFFFF8);
        do
          v118 = __ldxr(v117);
        while (__stlxr(v118 - 2, v117));
      }
      if ((*a18 & 7) != 0)
      {
        v119 = (unsigned int *)(*a18 & 0xFFFFFFFFFFFFFFF8);
        do
          v120 = __ldxr(v119);
        while (__stlxr(v120 - 2, v119));
      }
      if ((*a19 & 7) != 0)
      {
        v121 = (unsigned int *)(*a19 & 0xFFFFFFFFFFFFFFF8);
        do
          v122 = __ldxr(v121);
        while (__stlxr(v122 - 2, v121));
      }
      if ((*a20 & 7) != 0)
      {
        v123 = (unsigned int *)(*a20 & 0xFFFFFFFFFFFFFFF8);
        do
          v124 = __ldxr(v123);
        while (__stlxr(v124 - 2, v123));
      }
      if ((*a21 & 7) != 0)
      {
        v125 = (unsigned int *)(*a21 & 0xFFFFFFFFFFFFFFF8);
        do
          v126 = __ldxr(v125);
        while (__stlxr(v126 - 2, v125));
      }
      if ((*a22 & 7) != 0)
      {
        v127 = (unsigned int *)(*a22 & 0xFFFFFFFFFFFFFFF8);
        do
          v128 = __ldxr(v127);
        while (__stlxr(v128 - 2, v127));
      }
      if ((*a23 & 7) != 0)
      {
        v129 = (unsigned int *)(*a23 & 0xFFFFFFFFFFFFFFF8);
        do
          v130 = __ldxr(v129);
        while (__stlxr(v130 - 2, v129));
      }
      if ((*a24 & 7) != 0)
      {
        v131 = (unsigned int *)(*a24 & 0xFFFFFFFFFFFFFFF8);
        do
          v132 = __ldxr(v131);
        while (__stlxr(v132 - 2, v131));
      }
      if ((*a25 & 7) != 0)
      {
        v133 = (unsigned int *)(*a25 & 0xFFFFFFFFFFFFFFF8);
        do
          v134 = __ldxr(v133);
        while (__stlxr(v134 - 2, v133));
      }
      if ((*a26 & 7) != 0)
      {
        v135 = (unsigned int *)(*a26 & 0xFFFFFFFFFFFFFFF8);
        do
          v136 = __ldxr(v135);
        while (__stlxr(v136 - 2, v135));
      }
      if ((*a27 & 7) != 0)
      {
        v137 = (unsigned int *)(*a27 & 0xFFFFFFFFFFFFFFF8);
        do
          v138 = __ldxr(v137);
        while (__stlxr(v138 - 2, v137));
      }
      if ((*a28 & 7) != 0)
      {
        v139 = (unsigned int *)(*a28 & 0xFFFFFFFFFFFFFFF8);
        do
          v140 = __ldxr(v139);
        while (__stlxr(v140 - 2, v139));
      }
      if ((*a29 & 7) != 0)
      {
        v141 = (unsigned int *)(*a29 & 0xFFFFFFFFFFFFFFF8);
        do
          v142 = __ldxr(v141);
        while (__stlxr(v142 - 2, v141));
      }
      if ((*a30 & 7) != 0)
      {
        v143 = (unsigned int *)(*a30 & 0xFFFFFFFFFFFFFFF8);
        do
          v144 = __ldxr(v143);
        while (__stlxr(v144 - 2, v143));
      }
      if ((*a31 & 7) != 0)
      {
        v145 = (unsigned int *)(*a31 & 0xFFFFFFFFFFFFFFF8);
        do
          v146 = __ldxr(v145);
        while (__stlxr(v146 - 2, v145));
      }
      if ((*a32 & 7) != 0)
      {
        v147 = (unsigned int *)(*a32 & 0xFFFFFFFFFFFFFFF8);
        do
          v148 = __ldxr(v147);
        while (__stlxr(v148 - 2, v147));
      }
      if ((*a33 & 7) != 0)
      {
        v149 = (unsigned int *)(*a33 & 0xFFFFFFFFFFFFFFF8);
        do
          v150 = __ldxr(v149);
        while (__stlxr(v150 - 2, v149));
      }
      if ((*a34 & 7) != 0)
      {
        v151 = (unsigned int *)(*a34 & 0xFFFFFFFFFFFFFFF8);
        do
          v152 = __ldxr(v151);
        while (__stlxr(v152 - 2, v151));
      }
      if ((*a35 & 7) != 0)
      {
        v153 = (unsigned int *)(*a35 & 0xFFFFFFFFFFFFFFF8);
        do
          v154 = __ldxr(v153);
        while (__stlxr(v154 - 2, v153));
      }
      if ((*a36 & 7) != 0)
      {
        v155 = (unsigned int *)(*a36 & 0xFFFFFFFFFFFFFFF8);
        do
          v156 = __ldxr(v155);
        while (__stlxr(v156 - 2, v155));
      }
      if ((*a37 & 7) != 0)
      {
        v157 = (unsigned int *)(*a37 & 0xFFFFFFFFFFFFFFF8);
        do
          v158 = __ldxr(v157);
        while (__stlxr(v158 - 2, v157));
      }
      if ((*a38 & 7) != 0)
      {
        v159 = (unsigned int *)(*a38 & 0xFFFFFFFFFFFFFFF8);
        do
          v160 = __ldxr(v159);
        while (__stlxr(v160 - 2, v159));
      }
      if ((*a39 & 7) != 0)
      {
        v161 = (unsigned int *)(*a39 & 0xFFFFFFFFFFFFFFF8);
        do
          v162 = __ldxr(v161);
        while (__stlxr(v162 - 2, v161));
      }
      if ((*a40 & 7) != 0)
      {
        v163 = (unsigned int *)(*a40 & 0xFFFFFFFFFFFFFFF8);
        do
          v164 = __ldxr(v163);
        while (__stlxr(v164 - 2, v163));
      }
      if ((*a41 & 7) != 0)
      {
        v165 = (unsigned int *)(*a41 & 0xFFFFFFFFFFFFFFF8);
        do
          v166 = __ldxr(v165);
        while (__stlxr(v166 - 2, v165));
      }
      if ((*a42 & 7) != 0)
      {
        v167 = (unsigned int *)(*a42 & 0xFFFFFFFFFFFFFFF8);
        do
          v168 = __ldxr(v167);
        while (__stlxr(v168 - 2, v167));
      }
      if ((*a43 & 7) != 0)
      {
        v169 = (unsigned int *)(*a43 & 0xFFFFFFFFFFFFFFF8);
        do
          v170 = __ldxr(v169);
        while (__stlxr(v170 - 2, v169));
      }
      if ((*a44 & 7) != 0)
      {
        v171 = (unsigned int *)(*a44 & 0xFFFFFFFFFFFFFFF8);
        do
          v172 = __ldxr(v171);
        while (__stlxr(v172 - 2, v171));
      }
      if ((*a45 & 7) != 0)
      {
        v173 = (unsigned int *)(*a45 & 0xFFFFFFFFFFFFFFF8);
        do
          v174 = __ldxr(v173);
        while (__stlxr(v174 - 2, v173));
      }
      if ((*a46 & 7) != 0)
      {
        v175 = (unsigned int *)(*a46 & 0xFFFFFFFFFFFFFFF8);
        do
          v176 = __ldxr(v175);
        while (__stlxr(v176 - 2, v175));
      }
      if ((*a47 & 7) != 0)
      {
        v177 = (unsigned int *)(*a47 & 0xFFFFFFFFFFFFFFF8);
        do
          v178 = __ldxr(v177);
        while (__stlxr(v178 - 2, v177));
      }
      if ((*a48 & 7) != 0)
      {
        v179 = (unsigned int *)(*a48 & 0xFFFFFFFFFFFFFFF8);
        do
          v180 = __ldxr(v179);
        while (__stlxr(v180 - 2, v179));
      }
      if ((*a49 & 7) != 0)
      {
        v181 = (unsigned int *)(*a49 & 0xFFFFFFFFFFFFFFF8);
        do
          v182 = __ldxr(v181);
        while (__stlxr(v182 - 2, v181));
      }
      if ((*a50 & 7) != 0)
      {
        v183 = (unsigned int *)(*a50 & 0xFFFFFFFFFFFFFFF8);
        do
          v184 = __ldxr(v183);
        while (__stlxr(v184 - 2, v183));
      }
      if ((*a51 & 7) != 0)
      {
        v185 = (unsigned int *)(*a51 & 0xFFFFFFFFFFFFFFF8);
        do
          v186 = __ldxr(v185);
        while (__stlxr(v186 - 2, v185));
      }
      if ((*a52 & 7) != 0)
      {
        v187 = (unsigned int *)(*a52 & 0xFFFFFFFFFFFFFFF8);
        do
          v188 = __ldxr(v187);
        while (__stlxr(v188 - 2, v187));
      }
      if ((*a53 & 7) != 0)
      {
        v189 = (unsigned int *)(*a53 & 0xFFFFFFFFFFFFFFF8);
        do
          v190 = __ldxr(v189);
        while (__stlxr(v190 - 2, v189));
      }
      if ((*a54 & 7) != 0)
      {
        v191 = (unsigned int *)(*a54 & 0xFFFFFFFFFFFFFFF8);
        do
          v192 = __ldxr(v191);
        while (__stlxr(v192 - 2, v191));
      }
      if ((*a55 & 7) != 0)
      {
        v193 = (unsigned int *)(*a55 & 0xFFFFFFFFFFFFFFF8);
        do
          v194 = __ldxr(v193);
        while (__stlxr(v194 - 2, v193));
      }
      if ((*a56 & 7) != 0)
      {
        v195 = (unsigned int *)(*a56 & 0xFFFFFFFFFFFFFFF8);
        do
          v196 = __ldxr(v195);
        while (__stlxr(v196 - 2, v195));
      }
      if ((*a57 & 7) != 0)
      {
        v197 = (unsigned int *)(*a57 & 0xFFFFFFFFFFFFFFF8);
        do
          v198 = __ldxr(v197);
        while (__stlxr(v198 - 2, v197));
      }
      if ((*a58 & 7) != 0)
      {
        v199 = (unsigned int *)(*a58 & 0xFFFFFFFFFFFFFFF8);
        do
          v200 = __ldxr(v199);
        while (__stlxr(v200 - 2, v199));
      }
      if ((*a59 & 7) != 0)
      {
        v201 = (unsigned int *)(*a59 & 0xFFFFFFFFFFFFFFF8);
        do
          v202 = __ldxr(v201);
        while (__stlxr(v202 - 2, v201));
      }
      if ((*a60 & 7) != 0)
      {
        v203 = (unsigned int *)(*a60 & 0xFFFFFFFFFFFFFFF8);
        do
          v204 = __ldxr(v203);
        while (__stlxr(v204 - 2, v203));
      }
      if ((*a61 & 7) != 0)
      {
        v205 = (unsigned int *)(*a61 & 0xFFFFFFFFFFFFFFF8);
        do
          v206 = __ldxr(v205);
        while (__stlxr(v206 - 2, v205));
      }
      if ((*a62 & 7) != 0)
      {
        v207 = (unsigned int *)(*a62 & 0xFFFFFFFFFFFFFFF8);
        do
          v208 = __ldxr(v207);
        while (__stlxr(v208 - 2, v207));
      }
      if ((*a63 & 7) != 0)
      {
        v209 = (unsigned int *)(*a63 & 0xFFFFFFFFFFFFFFF8);
        do
          v210 = __ldxr(v209);
        while (__stlxr(v210 - 2, v209));
      }
      if ((*a64 & 7) != 0)
      {
        v211 = (unsigned int *)(*a64 & 0xFFFFFFFFFFFFFFF8);
        do
          v212 = __ldxr(v211);
        while (__stlxr(v212 - 2, v211));
      }
      if ((*a65 & 7) != 0)
      {
        v213 = (unsigned int *)(*a65 & 0xFFFFFFFFFFFFFFF8);
        do
          v214 = __ldxr(v213);
        while (__stlxr(v214 - 2, v213));
      }
      if ((*a66 & 7) != 0)
      {
        v215 = (unsigned int *)(*a66 & 0xFFFFFFFFFFFFFFF8);
        do
          v216 = __ldxr(v215);
        while (__stlxr(v216 - 2, v215));
      }
      if ((*a67 & 7) != 0)
      {
        v217 = (unsigned int *)(*a67 & 0xFFFFFFFFFFFFFFF8);
        do
          v218 = __ldxr(v217);
        while (__stlxr(v218 - 2, v217));
      }
      if ((*a68 & 7) != 0)
      {
        v219 = (unsigned int *)(*a68 & 0xFFFFFFFFFFFFFFF8);
        do
          v220 = __ldxr(v219);
        while (__stlxr(v220 - 2, v219));
      }
      if ((*a69 & 7) != 0)
      {
        v221 = (unsigned int *)(*a69 & 0xFFFFFFFFFFFFFFF8);
        do
          v222 = __ldxr(v221);
        while (__stlxr(v222 - 2, v221));
      }
      if ((*a70 & 7) != 0)
      {
        v223 = (unsigned int *)(*a70 & 0xFFFFFFFFFFFFFFF8);
        do
          v224 = __ldxr(v223);
        while (__stlxr(v224 - 2, v223));
      }
      if ((*a71 & 7) != 0)
      {
        v225 = (unsigned int *)(*a71 & 0xFFFFFFFFFFFFFFF8);
        do
          v226 = __ldxr(v225);
        while (__stlxr(v226 - 2, v225));
      }
      if ((*a72 & 7) != 0)
      {
        v227 = (unsigned int *)(*a72 & 0xFFFFFFFFFFFFFFF8);
        do
          v228 = __ldxr(v227);
        while (__stlxr(v228 - 2, v227));
      }
      v229 = *(_QWORD *)STACK[0x200];
      if ((v229 & 7) != 0)
      {
        v230 = (unsigned int *)(v229 & 0xFFFFFFFFFFFFFFF8);
        do
          v231 = __ldxr(v230);
        while (__stlxr(v231 - 2, v230));
      }
      v232 = *(_QWORD *)STACK[0x208];
      if ((v232 & 7) != 0)
      {
        v233 = (unsigned int *)(v232 & 0xFFFFFFFFFFFFFFF8);
        do
          v234 = __ldxr(v233);
        while (__stlxr(v234 - 2, v233));
      }
      v235 = *(_QWORD *)STACK[0x210];
      if ((v235 & 7) != 0)
      {
        v236 = (unsigned int *)(v235 & 0xFFFFFFFFFFFFFFF8);
        do
          v237 = __ldxr(v236);
        while (__stlxr(v237 - 2, v236));
      }
      v238 = *(_QWORD *)STACK[0x218];
      if ((v238 & 7) != 0)
      {
        v239 = (unsigned int *)(v238 & 0xFFFFFFFFFFFFFFF8);
        do
          v240 = __ldxr(v239);
        while (__stlxr(v240 - 2, v239));
      }
      v241 = *(_QWORD *)STACK[0x220];
      if ((v241 & 7) != 0)
      {
        v242 = (unsigned int *)(v241 & 0xFFFFFFFFFFFFFFF8);
        do
          v243 = __ldxr(v242);
        while (__stlxr(v243 - 2, v242));
      }
      v244 = *(_QWORD *)STACK[0x228];
      if ((v244 & 7) != 0)
      {
        v245 = (unsigned int *)(v244 & 0xFFFFFFFFFFFFFFF8);
        do
          v246 = __ldxr(v245);
        while (__stlxr(v246 - 2, v245));
      }
      v247 = *(_QWORD *)STACK[0x230];
      if ((v247 & 7) != 0)
      {
        v248 = (unsigned int *)(v247 & 0xFFFFFFFFFFFFFFF8);
        do
          v249 = __ldxr(v248);
        while (__stlxr(v249 - 2, v248));
      }
      v250 = *(_QWORD *)STACK[0x238];
      if ((v250 & 7) != 0)
      {
        v251 = (unsigned int *)(v250 & 0xFFFFFFFFFFFFFFF8);
        do
          v252 = __ldxr(v251);
        while (__stlxr(v252 - 2, v251));
      }
      v253 = *(_QWORD *)STACK[0x240];
      if ((v253 & 7) != 0)
      {
        v254 = (unsigned int *)(v253 & 0xFFFFFFFFFFFFFFF8);
        do
          v255 = __ldxr(v254);
        while (__stlxr(v255 - 2, v254));
      }
      v256 = *(_QWORD *)STACK[0x248];
      if ((v256 & 7) != 0)
      {
        v257 = (unsigned int *)(v256 & 0xFFFFFFFFFFFFFFF8);
        do
          v258 = __ldxr(v257);
        while (__stlxr(v258 - 2, v257));
      }
      v259 = *(_QWORD *)STACK[0x250];
      if ((v259 & 7) != 0)
      {
        v260 = (unsigned int *)(v259 & 0xFFFFFFFFFFFFFFF8);
        do
          v261 = __ldxr(v260);
        while (__stlxr(v261 - 2, v260));
      }
      v262 = *(_QWORD *)STACK[0x258];
      if ((v262 & 7) != 0)
      {
        v263 = (unsigned int *)(v262 & 0xFFFFFFFFFFFFFFF8);
        do
          v264 = __ldxr(v263);
        while (__stlxr(v264 - 2, v263));
      }
      v265 = *(_QWORD *)STACK[0x260];
      if ((v265 & 7) != 0)
      {
        v266 = (unsigned int *)(v265 & 0xFFFFFFFFFFFFFFF8);
        do
          v267 = __ldxr(v266);
        while (__stlxr(v267 - 2, v266));
      }
      v268 = *(_QWORD *)STACK[0x268];
      if ((v268 & 7) != 0)
      {
        v269 = (unsigned int *)(v268 & 0xFFFFFFFFFFFFFFF8);
        do
          v270 = __ldxr(v269);
        while (__stlxr(v270 - 2, v269));
      }
      v271 = *(_QWORD *)STACK[0x270];
      if ((v271 & 7) != 0)
      {
        v272 = (unsigned int *)(v271 & 0xFFFFFFFFFFFFFFF8);
        do
          v273 = __ldxr(v272);
        while (__stlxr(v273 - 2, v272));
      }
      v274 = *(_QWORD *)STACK[0x278];
      if ((v274 & 7) != 0)
      {
        v275 = (unsigned int *)(v274 & 0xFFFFFFFFFFFFFFF8);
        do
          v276 = __ldxr(v275);
        while (__stlxr(v276 - 2, v275));
      }
      v277 = *(_QWORD *)STACK[0x280];
      if ((v277 & 7) != 0)
      {
        v278 = (unsigned int *)(v277 & 0xFFFFFFFFFFFFFFF8);
        do
          v279 = __ldxr(v278);
        while (__stlxr(v279 - 2, v278));
      }
      v280 = *(_QWORD *)STACK[0x288];
      if ((v280 & 7) != 0)
      {
        v281 = (unsigned int *)(v280 & 0xFFFFFFFFFFFFFFF8);
        do
          v282 = __ldxr(v281);
        while (__stlxr(v282 - 2, v281));
      }
      v283 = *(_QWORD *)STACK[0x290];
      if ((v283 & 7) != 0)
      {
        v284 = (unsigned int *)(v283 & 0xFFFFFFFFFFFFFFF8);
        do
          v285 = __ldxr(v284);
        while (__stlxr(v285 - 2, v284));
      }
      v286 = *(_QWORD *)STACK[0x298];
      if ((v286 & 7) != 0)
      {
        v287 = (unsigned int *)(v286 & 0xFFFFFFFFFFFFFFF8);
        do
          v288 = __ldxr(v287);
        while (__stlxr(v288 - 2, v287));
      }
      v289 = *(_QWORD *)STACK[0x2A0];
      if ((v289 & 7) != 0)
      {
        v290 = (unsigned int *)(v289 & 0xFFFFFFFFFFFFFFF8);
        do
          v291 = __ldxr(v290);
        while (__stlxr(v291 - 2, v290));
      }
      v292 = *(_QWORD *)STACK[0x2A8];
      if ((v292 & 7) != 0)
      {
        v293 = (unsigned int *)(v292 & 0xFFFFFFFFFFFFFFF8);
        do
          v294 = __ldxr(v293);
        while (__stlxr(v294 - 2, v293));
      }
      v295 = *(_QWORD *)STACK[0x2B0];
      if ((v295 & 7) != 0)
      {
        v296 = (unsigned int *)(v295 & 0xFFFFFFFFFFFFFFF8);
        do
          v297 = __ldxr(v296);
        while (__stlxr(v297 - 2, v296));
      }
      v298 = *(_QWORD *)STACK[0x2B8];
      if ((v298 & 7) != 0)
      {
        v299 = (unsigned int *)(v298 & 0xFFFFFFFFFFFFFFF8);
        do
          v300 = __ldxr(v299);
        while (__stlxr(v300 - 2, v299));
      }
      v301 = *(_QWORD *)STACK[0x2C0];
      if ((v301 & 7) != 0)
      {
        v302 = (unsigned int *)(v301 & 0xFFFFFFFFFFFFFFF8);
        do
          v303 = __ldxr(v302);
        while (__stlxr(v303 - 2, v302));
      }
      v304 = *(_QWORD *)STACK[0x2C8];
      if ((v304 & 7) != 0)
      {
        v305 = (unsigned int *)(v304 & 0xFFFFFFFFFFFFFFF8);
        do
          v306 = __ldxr(v305);
        while (__stlxr(v306 - 2, v305));
      }
      v307 = *(_QWORD *)STACK[0x2D0];
      if ((v307 & 7) != 0)
      {
        v308 = (unsigned int *)(v307 & 0xFFFFFFFFFFFFFFF8);
        do
          v309 = __ldxr(v308);
        while (__stlxr(v309 - 2, v308));
      }
      v310 = *(_QWORD *)STACK[0x2D8];
      if ((v310 & 7) != 0)
      {
        v311 = (unsigned int *)(v310 & 0xFFFFFFFFFFFFFFF8);
        do
          v312 = __ldxr(v311);
        while (__stlxr(v312 - 2, v311));
      }
      v313 = *(_QWORD *)STACK[0x2E0];
      if ((v313 & 7) != 0)
      {
        v314 = (unsigned int *)(v313 & 0xFFFFFFFFFFFFFFF8);
        do
          v315 = __ldxr(v314);
        while (__stlxr(v315 - 2, v314));
      }
      v316 = *(_QWORD *)STACK[0x2E8];
      if ((v316 & 7) != 0)
      {
        v317 = (unsigned int *)(v316 & 0xFFFFFFFFFFFFFFF8);
        do
          v318 = __ldxr(v317);
        while (__stlxr(v318 - 2, v317));
      }
      v319 = *(_QWORD *)STACK[0x2F0];
      if ((v319 & 7) != 0)
      {
        v320 = (unsigned int *)(v319 & 0xFFFFFFFFFFFFFFF8);
        do
          v321 = __ldxr(v320);
        while (__stlxr(v321 - 2, v320));
      }
      v322 = *(_QWORD *)STACK[0x2F8];
      if ((v322 & 7) != 0)
      {
        v323 = (unsigned int *)(v322 & 0xFFFFFFFFFFFFFFF8);
        do
          v324 = __ldxr(v323);
        while (__stlxr(v324 - 2, v323));
      }
      v325 = *(_QWORD *)STACK[0x300];
      if ((v325 & 7) != 0)
      {
        v326 = (unsigned int *)(v325 & 0xFFFFFFFFFFFFFFF8);
        do
          v327 = __ldxr(v326);
        while (__stlxr(v327 - 2, v326));
      }
      v328 = *(_QWORD *)STACK[0x308];
      if ((v328 & 7) != 0)
      {
        v329 = (unsigned int *)(v328 & 0xFFFFFFFFFFFFFFF8);
        do
          v330 = __ldxr(v329);
        while (__stlxr(v330 - 2, v329));
      }
      v331 = *(_QWORD *)STACK[0x310];
      if ((v331 & 7) != 0)
      {
        v332 = (unsigned int *)(v331 & 0xFFFFFFFFFFFFFFF8);
        do
          v333 = __ldxr(v332);
        while (__stlxr(v333 - 2, v332));
      }
      v334 = *(_QWORD *)STACK[0x318];
      if ((v334 & 7) != 0)
      {
        v335 = (unsigned int *)(v334 & 0xFFFFFFFFFFFFFFF8);
        do
          v336 = __ldxr(v335);
        while (__stlxr(v336 - 2, v335));
      }
      v337 = *(_QWORD *)STACK[0x320];
      if ((v337 & 7) != 0)
      {
        v338 = (unsigned int *)(v337 & 0xFFFFFFFFFFFFFFF8);
        do
          v339 = __ldxr(v338);
        while (__stlxr(v339 - 2, v338));
      }
      v340 = *(_QWORD *)STACK[0x328];
      if ((v340 & 7) != 0)
      {
        v341 = (unsigned int *)(v340 & 0xFFFFFFFFFFFFFFF8);
        do
          v342 = __ldxr(v341);
        while (__stlxr(v342 - 2, v341));
      }
      v343 = *(_QWORD *)STACK[0x330];
      if ((v343 & 7) != 0)
      {
        v344 = (unsigned int *)(v343 & 0xFFFFFFFFFFFFFFF8);
        do
          v345 = __ldxr(v344);
        while (__stlxr(v345 - 2, v344));
      }
      v346 = *(_QWORD *)STACK[0x338];
      if ((v346 & 7) != 0)
      {
        v347 = (unsigned int *)(v346 & 0xFFFFFFFFFFFFFFF8);
        do
          v348 = __ldxr(v347);
        while (__stlxr(v348 - 2, v347));
      }
      v349 = *(_QWORD *)STACK[0x340];
      if ((v349 & 7) != 0)
      {
        v350 = (unsigned int *)(v349 & 0xFFFFFFFFFFFFFFF8);
        do
          v351 = __ldxr(v350);
        while (__stlxr(v351 - 2, v350));
      }
      v352 = *(_QWORD *)STACK[0x348];
      if ((v352 & 7) != 0)
      {
        v353 = (unsigned int *)(v352 & 0xFFFFFFFFFFFFFFF8);
        do
          v354 = __ldxr(v353);
        while (__stlxr(v354 - 2, v353));
      }
      v355 = *(_QWORD *)STACK[0x350];
      if ((v355 & 7) != 0)
      {
        v356 = (unsigned int *)(v355 & 0xFFFFFFFFFFFFFFF8);
        do
          v357 = __ldxr(v356);
        while (__stlxr(v357 - 2, v356));
      }
      v358 = *(_QWORD *)STACK[0x358];
      if ((v358 & 7) != 0)
      {
        v359 = (unsigned int *)(v358 & 0xFFFFFFFFFFFFFFF8);
        do
          v360 = __ldxr(v359);
        while (__stlxr(v360 - 2, v359));
      }
      v361 = *(_QWORD *)STACK[0x360];
      if ((v361 & 7) != 0)
      {
        v362 = (unsigned int *)(v361 & 0xFFFFFFFFFFFFFFF8);
        do
          v363 = __ldxr(v362);
        while (__stlxr(v363 - 2, v362));
      }
      v364 = *(_QWORD *)STACK[0x368];
      if ((v364 & 7) != 0)
      {
        v365 = (unsigned int *)(v364 & 0xFFFFFFFFFFFFFFF8);
        do
          v366 = __ldxr(v365);
        while (__stlxr(v366 - 2, v365));
      }
      v367 = *(_QWORD *)STACK[0x370];
      if ((v367 & 7) != 0)
      {
        v368 = (unsigned int *)(v367 & 0xFFFFFFFFFFFFFFF8);
        do
          v369 = __ldxr(v368);
        while (__stlxr(v369 - 2, v368));
      }
      v370 = *(_QWORD *)STACK[0x378];
      if ((v370 & 7) != 0)
      {
        v371 = (unsigned int *)(v370 & 0xFFFFFFFFFFFFFFF8);
        do
          v372 = __ldxr(v371);
        while (__stlxr(v372 - 2, v371));
      }
      v373 = *(_QWORD *)STACK[0x380];
      if ((v373 & 7) != 0)
      {
        v374 = (unsigned int *)(v373 & 0xFFFFFFFFFFFFFFF8);
        do
          v375 = __ldxr(v374);
        while (__stlxr(v375 - 2, v374));
      }
      v376 = *(_QWORD *)STACK[0x388];
      if ((v376 & 7) != 0)
      {
        v377 = (unsigned int *)(v376 & 0xFFFFFFFFFFFFFFF8);
        do
          v378 = __ldxr(v377);
        while (__stlxr(v378 - 2, v377));
      }
      v379 = *(_QWORD *)STACK[0x390];
      if ((v379 & 7) != 0)
      {
        v380 = (unsigned int *)(v379 & 0xFFFFFFFFFFFFFFF8);
        do
          v381 = __ldxr(v380);
        while (__stlxr(v381 - 2, v380));
      }
      v382 = *(_QWORD *)STACK[0x398];
      if ((v382 & 7) != 0)
      {
        v383 = (unsigned int *)(v382 & 0xFFFFFFFFFFFFFFF8);
        do
          v384 = __ldxr(v383);
        while (__stlxr(v384 - 2, v383));
      }
      v385 = *(_QWORD *)STACK[0x3A0];
      if ((v385 & 7) != 0)
      {
        v386 = (unsigned int *)(v385 & 0xFFFFFFFFFFFFFFF8);
        do
          v387 = __ldxr(v386);
        while (__stlxr(v387 - 2, v386));
      }
      v388 = *(_QWORD *)STACK[0x3A8];
      if ((v388 & 7) != 0)
      {
        v389 = (unsigned int *)(v388 & 0xFFFFFFFFFFFFFFF8);
        do
          v390 = __ldxr(v389);
        while (__stlxr(v390 - 2, v389));
      }
      v391 = *(_QWORD *)STACK[0x3B0];
      if ((v391 & 7) != 0)
      {
        v392 = (unsigned int *)(v391 & 0xFFFFFFFFFFFFFFF8);
        do
          v393 = __ldxr(v392);
        while (__stlxr(v393 - 2, v392));
      }
      v394 = *(_QWORD *)STACK[0x3B8];
      if ((v394 & 7) != 0)
      {
        v395 = (unsigned int *)(v394 & 0xFFFFFFFFFFFFFFF8);
        do
          v396 = __ldxr(v395);
        while (__stlxr(v396 - 2, v395));
      }
      v397 = *(_QWORD *)STACK[0x3C0];
      if ((v397 & 7) != 0)
      {
        v398 = (unsigned int *)(v397 & 0xFFFFFFFFFFFFFFF8);
        do
          v399 = __ldxr(v398);
        while (__stlxr(v399 - 2, v398));
      }
      v400 = *(_QWORD *)STACK[0x3C8];
      if ((v400 & 7) != 0)
      {
        v401 = (unsigned int *)(v400 & 0xFFFFFFFFFFFFFFF8);
        do
          v402 = __ldxr(v401);
        while (__stlxr(v402 - 2, v401));
      }
      v403 = *(_QWORD *)STACK[0x3D0];
      if ((v403 & 7) != 0)
      {
        v404 = (unsigned int *)(v403 & 0xFFFFFFFFFFFFFFF8);
        do
          v405 = __ldxr(v404);
        while (__stlxr(v405 - 2, v404));
      }
      v406 = *(_QWORD *)STACK[0x3D8];
      if ((v406 & 7) != 0)
      {
        v407 = (unsigned int *)(v406 & 0xFFFFFFFFFFFFFFF8);
        do
          v408 = __ldxr(v407);
        while (__stlxr(v408 - 2, v407));
      }
      v409 = *(_QWORD *)STACK[0x3E0];
      if ((v409 & 7) != 0)
      {
        v410 = (unsigned int *)(v409 & 0xFFFFFFFFFFFFFFF8);
        do
          v411 = __ldxr(v410);
        while (__stlxr(v411 - 2, v410));
      }
      v412 = *(_QWORD *)STACK[0x3E8];
      if ((v412 & 7) != 0)
      {
        v413 = (unsigned int *)(v412 & 0xFFFFFFFFFFFFFFF8);
        do
          v414 = __ldxr(v413);
        while (__stlxr(v414 - 2, v413));
      }
      v415 = *(_QWORD *)STACK[0x3F0];
      if ((v415 & 7) != 0)
      {
        v416 = (unsigned int *)(v415 & 0xFFFFFFFFFFFFFFF8);
        do
          v417 = __ldxr(v416);
        while (__stlxr(v417 - 2, v416));
      }
      v418 = *(_QWORD *)STACK[0x3F8];
      if ((v418 & 7) != 0)
      {
        v419 = (unsigned int *)(v418 & 0xFFFFFFFFFFFFFFF8);
        do
          v420 = __ldxr(v419);
        while (__stlxr(v420 - 2, v419));
      }
      v421 = *(_QWORD *)STACK[0x400];
      if ((v421 & 7) != 0)
      {
        v422 = (unsigned int *)(v421 & 0xFFFFFFFFFFFFFFF8);
        do
          v423 = __ldxr(v422);
        while (__stlxr(v423 - 2, v422));
      }
      v424 = *(_QWORD *)STACK[0x408];
      if ((v424 & 7) != 0)
      {
        v425 = (unsigned int *)(v424 & 0xFFFFFFFFFFFFFFF8);
        do
          v426 = __ldxr(v425);
        while (__stlxr(v426 - 2, v425));
      }
      v427 = *(_QWORD *)STACK[0x410];
      if ((v427 & 7) != 0)
      {
        v428 = (unsigned int *)(v427 & 0xFFFFFFFFFFFFFFF8);
        do
          v429 = __ldxr(v428);
        while (__stlxr(v429 - 2, v428));
      }
      v430 = *(_QWORD *)STACK[0x418];
      if ((v430 & 7) != 0)
      {
        v431 = (unsigned int *)(v430 & 0xFFFFFFFFFFFFFFF8);
        do
          v432 = __ldxr(v431);
        while (__stlxr(v432 - 2, v431));
      }
      v433 = *(_QWORD *)STACK[0x420];
      if ((v433 & 7) != 0)
      {
        v434 = (unsigned int *)(v433 & 0xFFFFFFFFFFFFFFF8);
        do
          v435 = __ldxr(v434);
        while (__stlxr(v435 - 2, v434));
      }
      v436 = *(_QWORD *)STACK[0x428];
      if ((v436 & 7) != 0)
      {
        v437 = (unsigned int *)(v436 & 0xFFFFFFFFFFFFFFF8);
        do
          v438 = __ldxr(v437);
        while (__stlxr(v438 - 2, v437));
      }
      v439 = *(_QWORD *)STACK[0x430];
      if ((v439 & 7) != 0)
      {
        v440 = (unsigned int *)(v439 & 0xFFFFFFFFFFFFFFF8);
        do
          v441 = __ldxr(v440);
        while (__stlxr(v441 - 2, v440));
      }
      v442 = *(_QWORD *)STACK[0x438];
      if ((v442 & 7) != 0)
      {
        v443 = (unsigned int *)(v442 & 0xFFFFFFFFFFFFFFF8);
        do
          v444 = __ldxr(v443);
        while (__stlxr(v444 - 2, v443));
      }
      v445 = *(_QWORD *)STACK[0x440];
      if ((v445 & 7) != 0)
      {
        v446 = (unsigned int *)(v445 & 0xFFFFFFFFFFFFFFF8);
        do
          v447 = __ldxr(v446);
        while (__stlxr(v447 - 2, v446));
      }
      v448 = *(_QWORD *)STACK[0x448];
      if ((v448 & 7) != 0)
      {
        v449 = (unsigned int *)(v448 & 0xFFFFFFFFFFFFFFF8);
        do
          v450 = __ldxr(v449);
        while (__stlxr(v450 - 2, v449));
      }
      v451 = *(_QWORD *)STACK[0x450];
      if ((v451 & 7) != 0)
      {
        v452 = (unsigned int *)(v451 & 0xFFFFFFFFFFFFFFF8);
        do
          v453 = __ldxr(v452);
        while (__stlxr(v453 - 2, v452));
      }
      v454 = *(_QWORD *)STACK[0x458];
      if ((v454 & 7) != 0)
      {
        v455 = (unsigned int *)(v454 & 0xFFFFFFFFFFFFFFF8);
        do
          v456 = __ldxr(v455);
        while (__stlxr(v456 - 2, v455));
      }
      v457 = *(_QWORD *)STACK[0x460];
      if ((v457 & 7) != 0)
      {
        v458 = (unsigned int *)(v457 & 0xFFFFFFFFFFFFFFF8);
        do
          v459 = __ldxr(v458);
        while (__stlxr(v459 - 2, v458));
      }
      v460 = *(_QWORD *)STACK[0x468];
      if ((v460 & 7) != 0)
      {
        v461 = (unsigned int *)(v460 & 0xFFFFFFFFFFFFFFF8);
        do
          v462 = __ldxr(v461);
        while (__stlxr(v462 - 2, v461));
      }
      v463 = *(_QWORD *)STACK[0x470];
      if ((v463 & 7) != 0)
      {
        v464 = (unsigned int *)(v463 & 0xFFFFFFFFFFFFFFF8);
        do
          v465 = __ldxr(v464);
        while (__stlxr(v465 - 2, v464));
      }
      v466 = *(_QWORD *)STACK[0x478];
      if ((v466 & 7) != 0)
      {
        v467 = (unsigned int *)(v466 & 0xFFFFFFFFFFFFFFF8);
        do
          v468 = __ldxr(v467);
        while (__stlxr(v468 - 2, v467));
      }
      v469 = *(_QWORD *)STACK[0x480];
      if ((v469 & 7) != 0)
      {
        v470 = (unsigned int *)(v469 & 0xFFFFFFFFFFFFFFF8);
        do
          v471 = __ldxr(v470);
        while (__stlxr(v471 - 2, v470));
      }
      v472 = *(_QWORD *)STACK[0x488];
      if ((v472 & 7) != 0)
      {
        v473 = (unsigned int *)(v472 & 0xFFFFFFFFFFFFFFF8);
        do
          v474 = __ldxr(v473);
        while (__stlxr(v474 - 2, v473));
      }
      v475 = *(_QWORD *)STACK[0x490];
      if ((v475 & 7) != 0)
      {
        v476 = (unsigned int *)(v475 & 0xFFFFFFFFFFFFFFF8);
        do
          v477 = __ldxr(v476);
        while (__stlxr(v477 - 2, v476));
      }
      v478 = *(_QWORD *)STACK[0x498];
      if ((v478 & 7) != 0)
      {
        v479 = (unsigned int *)(v478 & 0xFFFFFFFFFFFFFFF8);
        do
          v480 = __ldxr(v479);
        while (__stlxr(v480 - 2, v479));
      }
      v481 = *(_QWORD *)STACK[0x4A0];
      if ((v481 & 7) != 0)
      {
        v482 = (unsigned int *)(v481 & 0xFFFFFFFFFFFFFFF8);
        do
          v483 = __ldxr(v482);
        while (__stlxr(v483 - 2, v482));
      }
      v484 = *(_QWORD *)STACK[0x4A8];
      if ((v484 & 7) != 0)
      {
        v485 = (unsigned int *)(v484 & 0xFFFFFFFFFFFFFFF8);
        do
          v486 = __ldxr(v485);
        while (__stlxr(v486 - 2, v485));
      }
      v487 = *(_QWORD *)STACK[0x4B0];
      if ((v487 & 7) != 0)
      {
        v488 = (unsigned int *)(v487 & 0xFFFFFFFFFFFFFFF8);
        do
          v489 = __ldxr(v488);
        while (__stlxr(v489 - 2, v488));
      }
      v490 = *(_QWORD *)STACK[0x4B8];
      if ((v490 & 7) != 0)
      {
        v491 = (unsigned int *)(v490 & 0xFFFFFFFFFFFFFFF8);
        do
          v492 = __ldxr(v491);
        while (__stlxr(v492 - 2, v491));
      }
      v493 = *(_QWORD *)STACK[0x4C0];
      if ((v493 & 7) != 0)
      {
        v494 = (unsigned int *)(v493 & 0xFFFFFFFFFFFFFFF8);
        do
          v495 = __ldxr(v494);
        while (__stlxr(v495 - 2, v494));
      }
      v496 = *(_QWORD *)STACK[0x4C8];
      if ((v496 & 7) != 0)
      {
        v497 = (unsigned int *)(v496 & 0xFFFFFFFFFFFFFFF8);
        do
          v498 = __ldxr(v497);
        while (__stlxr(v498 - 2, v497));
      }
      v499 = *(_QWORD *)STACK[0x4D0];
      if ((v499 & 7) != 0)
      {
        v500 = (unsigned int *)(v499 & 0xFFFFFFFFFFFFFFF8);
        do
          v501 = __ldxr(v500);
        while (__stlxr(v501 - 2, v500));
      }
      v502 = *(_QWORD *)STACK[0x4D8];
      if ((v502 & 7) != 0)
      {
        v503 = (unsigned int *)(v502 & 0xFFFFFFFFFFFFFFF8);
        do
          v504 = __ldxr(v503);
        while (__stlxr(v504 - 2, v503));
      }
      v505 = *(_QWORD *)STACK[0x4E0];
      if ((v505 & 7) != 0)
      {
        v506 = (unsigned int *)(v505 & 0xFFFFFFFFFFFFFFF8);
        do
          v507 = __ldxr(v506);
        while (__stlxr(v507 - 2, v506));
      }
      v508 = *(_QWORD *)STACK[0x4E8];
      if ((v508 & 7) != 0)
      {
        v509 = (unsigned int *)(v508 & 0xFFFFFFFFFFFFFFF8);
        do
          v510 = __ldxr(v509);
        while (__stlxr(v510 - 2, v509));
      }
      v511 = *(_QWORD *)STACK[0x4F0];
      if ((v511 & 7) != 0)
      {
        v512 = (unsigned int *)(v511 & 0xFFFFFFFFFFFFFFF8);
        do
          v513 = __ldxr(v512);
        while (__stlxr(v513 - 2, v512));
      }
      v514 = *(_QWORD *)STACK[0x4F8];
      if ((v514 & 7) != 0)
      {
        v515 = (unsigned int *)(v514 & 0xFFFFFFFFFFFFFFF8);
        do
          v516 = __ldxr(v515);
        while (__stlxr(v516 - 2, v515));
      }
      v517 = *(_QWORD *)STACK[0x500];
      if ((v517 & 7) != 0)
      {
        v518 = (unsigned int *)(v517 & 0xFFFFFFFFFFFFFFF8);
        do
          v519 = __ldxr(v518);
        while (__stlxr(v519 - 2, v518));
      }
      v520 = *(_QWORD *)STACK[0x508];
      if ((v520 & 7) != 0)
      {
        v521 = (unsigned int *)(v520 & 0xFFFFFFFFFFFFFFF8);
        do
          v522 = __ldxr(v521);
        while (__stlxr(v522 - 2, v521));
      }
      v523 = *(_QWORD *)STACK[0x510];
      if ((v523 & 7) != 0)
      {
        v524 = (unsigned int *)(v523 & 0xFFFFFFFFFFFFFFF8);
        do
          v525 = __ldxr(v524);
        while (__stlxr(v525 - 2, v524));
      }
      v526 = *(_QWORD *)STACK[0x518];
      if ((v526 & 7) != 0)
      {
        v527 = (unsigned int *)(v526 & 0xFFFFFFFFFFFFFFF8);
        do
          v528 = __ldxr(v527);
        while (__stlxr(v528 - 2, v527));
      }
      v529 = *(_QWORD *)STACK[0x520];
      if ((v529 & 7) != 0)
      {
        v530 = (unsigned int *)(v529 & 0xFFFFFFFFFFFFFFF8);
        do
          v531 = __ldxr(v530);
        while (__stlxr(v531 - 2, v530));
      }
      v532 = *(_QWORD *)STACK[0x528];
      if ((v532 & 7) != 0)
      {
        v533 = (unsigned int *)(v532 & 0xFFFFFFFFFFFFFFF8);
        do
          v534 = __ldxr(v533);
        while (__stlxr(v534 - 2, v533));
      }
      v535 = *(_QWORD *)STACK[0x530];
      if ((v535 & 7) != 0)
      {
        v536 = (unsigned int *)(v535 & 0xFFFFFFFFFFFFFFF8);
        do
          v537 = __ldxr(v536);
        while (__stlxr(v537 - 2, v536));
      }
      v538 = *(_QWORD *)STACK[0x538];
      if ((v538 & 7) != 0)
      {
        v539 = (unsigned int *)(v538 & 0xFFFFFFFFFFFFFFF8);
        do
          v540 = __ldxr(v539);
        while (__stlxr(v540 - 2, v539));
      }
      v541 = *(_QWORD *)STACK[0x540];
      if ((v541 & 7) != 0)
      {
        v542 = (unsigned int *)(v541 & 0xFFFFFFFFFFFFFFF8);
        do
          v543 = __ldxr(v542);
        while (__stlxr(v543 - 2, v542));
      }
      v544 = *(_QWORD *)STACK[0x548];
      if ((v544 & 7) != 0)
      {
        v545 = (unsigned int *)(v544 & 0xFFFFFFFFFFFFFFF8);
        do
          v546 = __ldxr(v545);
        while (__stlxr(v546 - 2, v545));
      }
      v547 = *(_QWORD *)STACK[0x550];
      if ((v547 & 7) != 0)
      {
        v548 = (unsigned int *)(v547 & 0xFFFFFFFFFFFFFFF8);
        do
          v549 = __ldxr(v548);
        while (__stlxr(v549 - 2, v548));
      }
      v550 = *(_QWORD *)STACK[0x558];
      if ((v550 & 7) != 0)
      {
        v551 = (unsigned int *)(v550 & 0xFFFFFFFFFFFFFFF8);
        do
          v552 = __ldxr(v551);
        while (__stlxr(v552 - 2, v551));
      }
      v553 = *(_QWORD *)STACK[0x560];
      if ((v553 & 7) != 0)
      {
        v554 = (unsigned int *)(v553 & 0xFFFFFFFFFFFFFFF8);
        do
          v555 = __ldxr(v554);
        while (__stlxr(v555 - 2, v554));
      }
      v556 = *(_QWORD *)STACK[0x568];
      if ((v556 & 7) != 0)
      {
        v557 = (unsigned int *)(v556 & 0xFFFFFFFFFFFFFFF8);
        do
          v558 = __ldxr(v557);
        while (__stlxr(v558 - 2, v557));
      }
      v559 = *(_QWORD *)STACK[0x570];
      if ((v559 & 7) != 0)
      {
        v560 = (unsigned int *)(v559 & 0xFFFFFFFFFFFFFFF8);
        do
          v561 = __ldxr(v560);
        while (__stlxr(v561 - 2, v560));
      }
      v562 = *(_QWORD *)STACK[0x578];
      if ((v562 & 7) != 0)
      {
        v563 = (unsigned int *)(v562 & 0xFFFFFFFFFFFFFFF8);
        do
          v564 = __ldxr(v563);
        while (__stlxr(v564 - 2, v563));
      }
      v565 = *(_QWORD *)STACK[0x580];
      if ((v565 & 7) != 0)
      {
        v566 = (unsigned int *)(v565 & 0xFFFFFFFFFFFFFFF8);
        do
          v567 = __ldxr(v566);
        while (__stlxr(v567 - 2, v566));
      }
      v568 = *(_QWORD *)STACK[0x588];
      if ((v568 & 7) != 0)
      {
        v569 = (unsigned int *)(v568 & 0xFFFFFFFFFFFFFFF8);
        do
          v570 = __ldxr(v569);
        while (__stlxr(v570 - 2, v569));
      }
      v571 = *(_QWORD *)STACK[0x590];
      if ((v571 & 7) != 0)
      {
        v572 = (unsigned int *)(v571 & 0xFFFFFFFFFFFFFFF8);
        do
          v573 = __ldxr(v572);
        while (__stlxr(v573 - 2, v572));
      }
      v574 = *(_QWORD *)STACK[0x598];
      if ((v574 & 7) != 0)
      {
        v575 = (unsigned int *)(v574 & 0xFFFFFFFFFFFFFFF8);
        do
          v576 = __ldxr(v575);
        while (__stlxr(v576 - 2, v575));
      }
      v577 = *(_QWORD *)STACK[0x5A0];
      if ((v577 & 7) != 0)
      {
        v578 = (unsigned int *)(v577 & 0xFFFFFFFFFFFFFFF8);
        do
          v579 = __ldxr(v578);
        while (__stlxr(v579 - 2, v578));
      }
      v580 = *(_QWORD *)STACK[0x5A8];
      if ((v580 & 7) != 0)
      {
        v581 = (unsigned int *)(v580 & 0xFFFFFFFFFFFFFFF8);
        do
          v582 = __ldxr(v581);
        while (__stlxr(v582 - 2, v581));
      }
      v583 = *(_QWORD *)STACK[0x5B0];
      if ((v583 & 7) != 0)
      {
        v584 = (unsigned int *)(v583 & 0xFFFFFFFFFFFFFFF8);
        do
          v585 = __ldxr(v584);
        while (__stlxr(v585 - 2, v584));
      }
      v586 = *(_QWORD *)STACK[0x5B8];
      if ((v586 & 7) != 0)
      {
        v587 = (unsigned int *)(v586 & 0xFFFFFFFFFFFFFFF8);
        do
          v588 = __ldxr(v587);
        while (__stlxr(v588 - 2, v587));
      }
      v589 = *(_QWORD *)STACK[0x5C0];
      if ((v589 & 7) != 0)
      {
        v590 = (unsigned int *)(v589 & 0xFFFFFFFFFFFFFFF8);
        do
          v591 = __ldxr(v590);
        while (__stlxr(v591 - 2, v590));
      }
      v592 = *(_QWORD *)STACK[0x5C8];
      if ((v592 & 7) != 0)
      {
        v593 = (unsigned int *)(v592 & 0xFFFFFFFFFFFFFFF8);
        do
          v594 = __ldxr(v593);
        while (__stlxr(v594 - 2, v593));
      }
      v595 = *(_QWORD *)STACK[0x5D0];
      if ((v595 & 7) != 0)
      {
        v596 = (unsigned int *)(v595 & 0xFFFFFFFFFFFFFFF8);
        do
          v597 = __ldxr(v596);
        while (__stlxr(v597 - 2, v596));
      }
      v598 = *(_QWORD *)STACK[0x5D8];
      if ((v598 & 7) != 0)
      {
        v599 = (unsigned int *)(v598 & 0xFFFFFFFFFFFFFFF8);
        do
          v600 = __ldxr(v599);
        while (__stlxr(v600 - 2, v599));
      }
      v601 = *(_QWORD *)STACK[0x5E0];
      if ((v601 & 7) != 0)
      {
        v602 = (unsigned int *)(v601 & 0xFFFFFFFFFFFFFFF8);
        do
          v603 = __ldxr(v602);
        while (__stlxr(v603 - 2, v602));
      }
      v604 = *(_QWORD *)STACK[0x5E8];
      if ((v604 & 7) != 0)
      {
        v605 = (unsigned int *)(v604 & 0xFFFFFFFFFFFFFFF8);
        do
          v606 = __ldxr(v605);
        while (__stlxr(v606 - 2, v605));
      }
      v607 = *(_QWORD *)STACK[0x5F0];
      if ((v607 & 7) != 0)
      {
        v608 = (unsigned int *)(v607 & 0xFFFFFFFFFFFFFFF8);
        do
          v609 = __ldxr(v608);
        while (__stlxr(v609 - 2, v608));
      }
      v610 = *(_QWORD *)STACK[0x5F8];
      if ((v610 & 7) != 0)
      {
        v611 = (unsigned int *)(v610 & 0xFFFFFFFFFFFFFFF8);
        do
          v612 = __ldxr(v611);
        while (__stlxr(v612 - 2, v611));
      }
      v613 = *(_QWORD *)STACK[0x600];
      if ((v613 & 7) != 0)
      {
        v614 = (unsigned int *)(v613 & 0xFFFFFFFFFFFFFFF8);
        do
          v615 = __ldxr(v614);
        while (__stlxr(v615 - 2, v614));
      }
      if ((*v72 & 7) != 0)
      {
        v616 = (unsigned int *)(*v72 & 0xFFFFFFFFFFFFFFF8);
        do
          v617 = __ldxr(v616);
        while (__stlxr(v617 - 2, v616));
      }
      _Unwind_Resume(a1);
    }
  }
}

void sub_20C53C920()
{
  JUMPOUT(0x20C53AE1CLL);
}

void sub_20C53C928()
{
  JUMPOUT(0x20C53AE40);
}

void sub_20C53C930()
{
  JUMPOUT(0x20C53AE64);
}

void sub_20C53C938()
{
  JUMPOUT(0x20C53AE88);
}

void sub_20C53C940()
{
  JUMPOUT(0x20C53AEACLL);
}

void sub_20C53C948()
{
  JUMPOUT(0x20C53AED0);
}

void sub_20C53C950()
{
  JUMPOUT(0x20C53AEF4);
}

void sub_20C53C958()
{
  JUMPOUT(0x20C53AF18);
}

void sub_20C53C960()
{
  JUMPOUT(0x20C53AF3CLL);
}

void sub_20C53C968()
{
  JUMPOUT(0x20C53AF60);
}

void sub_20C53C970()
{
  JUMPOUT(0x20C53AF84);
}

void sub_20C53C978()
{
  JUMPOUT(0x20C53AFA8);
}

void sub_20C53C980()
{
  JUMPOUT(0x20C53AFCCLL);
}

void sub_20C53C988()
{
  JUMPOUT(0x20C53AFF0);
}

void sub_20C53C990()
{
  JUMPOUT(0x20C53B014);
}

void sub_20C53C998()
{
  JUMPOUT(0x20C53B038);
}

void sub_20C53C9A0()
{
  JUMPOUT(0x20C53B05CLL);
}

void sub_20C53C9A8()
{
  JUMPOUT(0x20C53B080);
}

void sub_20C53C9B0()
{
  JUMPOUT(0x20C53B0A4);
}

void sub_20C53C9B8()
{
  JUMPOUT(0x20C53B0C8);
}

void sub_20C53C9C0()
{
  JUMPOUT(0x20C53B0ECLL);
}

void sub_20C53C9C8()
{
  JUMPOUT(0x20C53B110);
}

void sub_20C53C9D0()
{
  JUMPOUT(0x20C53B134);
}

void sub_20C53C9D8()
{
  JUMPOUT(0x20C53B158);
}

void sub_20C53C9E0()
{
  JUMPOUT(0x20C53B17CLL);
}

void sub_20C53C9E8()
{
  JUMPOUT(0x20C53B1A0);
}

void sub_20C53C9F0()
{
  JUMPOUT(0x20C53B1C4);
}

void sub_20C53C9F8()
{
  JUMPOUT(0x20C53B1E8);
}

void sub_20C53CA00()
{
  JUMPOUT(0x20C53B20CLL);
}

void sub_20C53CA08()
{
  JUMPOUT(0x20C53B230);
}

void sub_20C53CA10()
{
  JUMPOUT(0x20C53B254);
}

void sub_20C53CA18()
{
  JUMPOUT(0x20C53B278);
}

void sub_20C53CA20()
{
  JUMPOUT(0x20C53B29CLL);
}

void sub_20C53CA28()
{
  JUMPOUT(0x20C53B2C0);
}

void sub_20C53CA30()
{
  JUMPOUT(0x20C53B2E4);
}

void sub_20C53CA38()
{
  JUMPOUT(0x20C53B308);
}

void sub_20C53CA40()
{
  JUMPOUT(0x20C53B32CLL);
}

void sub_20C53CA48()
{
  JUMPOUT(0x20C53B350);
}

void sub_20C53CA50()
{
  JUMPOUT(0x20C53B374);
}

void sub_20C53CA58()
{
  JUMPOUT(0x20C53B398);
}

void sub_20C53CA60()
{
  JUMPOUT(0x20C53B3BCLL);
}

void sub_20C53CA68()
{
  JUMPOUT(0x20C53B3E0);
}

void sub_20C53CA70()
{
  JUMPOUT(0x20C53B404);
}

void sub_20C53CA78()
{
  JUMPOUT(0x20C53B428);
}

void sub_20C53CA80()
{
  JUMPOUT(0x20C53B44CLL);
}

void sub_20C53CA88()
{
  JUMPOUT(0x20C53B470);
}

void sub_20C53CA90()
{
  JUMPOUT(0x20C53B494);
}

void sub_20C53CA98()
{
  JUMPOUT(0x20C53B4B8);
}

void sub_20C53CAA0()
{
  JUMPOUT(0x20C53B4DCLL);
}

void sub_20C53CAA8()
{
  JUMPOUT(0x20C53B500);
}

void sub_20C53CAB0()
{
  JUMPOUT(0x20C53B524);
}

void sub_20C53CAB8()
{
  JUMPOUT(0x20C53B548);
}

void sub_20C53CAC0()
{
  JUMPOUT(0x20C53B56CLL);
}

void sub_20C53CAC8()
{
  JUMPOUT(0x20C53B590);
}

void sub_20C53CAD0()
{
  JUMPOUT(0x20C53B5B4);
}

void sub_20C53CAD8()
{
  JUMPOUT(0x20C53B5D8);
}

void sub_20C53CAE0()
{
  JUMPOUT(0x20C53B5FCLL);
}

void sub_20C53CAE8()
{
  JUMPOUT(0x20C53B620);
}

void sub_20C53CAF0()
{
  JUMPOUT(0x20C53B644);
}

void sub_20C53CAF8()
{
  JUMPOUT(0x20C53B668);
}

void sub_20C53CB00()
{
  JUMPOUT(0x20C53B68CLL);
}

void sub_20C53CB08()
{
  JUMPOUT(0x20C53B6B0);
}

void sub_20C53CB10()
{
  JUMPOUT(0x20C53B6D4);
}

void sub_20C53CB18()
{
  JUMPOUT(0x20C53B6F8);
}

void sub_20C53CB20()
{
  JUMPOUT(0x20C53B71CLL);
}

void sub_20C53CB28()
{
  JUMPOUT(0x20C53B740);
}

void sub_20C53CB30()
{
  JUMPOUT(0x20C53B764);
}

void sub_20C53CB38()
{
  JUMPOUT(0x20C53B788);
}

void sub_20C53CB40()
{
  JUMPOUT(0x20C53B7ACLL);
}

void sub_20C53CB48()
{
  JUMPOUT(0x20C53B7D0);
}

void sub_20C53CB50()
{
  JUMPOUT(0x20C53B7F4);
}

void sub_20C53CB58()
{
  JUMPOUT(0x20C53B818);
}

void sub_20C53CB60()
{
  JUMPOUT(0x20C53B83CLL);
}

void sub_20C53CB68()
{
  JUMPOUT(0x20C53B860);
}

void sub_20C53CB70()
{
  JUMPOUT(0x20C53B884);
}

void sub_20C53CB78()
{
  JUMPOUT(0x20C53B8A8);
}

void sub_20C53CB80()
{
  JUMPOUT(0x20C53B8CCLL);
}

void sub_20C53CB88()
{
  JUMPOUT(0x20C53B8F0);
}

void sub_20C53CB90()
{
  JUMPOUT(0x20C53B914);
}

void sub_20C53CB98()
{
  JUMPOUT(0x20C53B938);
}

void sub_20C53CBA0()
{
  JUMPOUT(0x20C53B95CLL);
}

void sub_20C53CBA8()
{
  JUMPOUT(0x20C53B980);
}

void sub_20C53CBB0()
{
  JUMPOUT(0x20C53B9A4);
}

void sub_20C53CBB8()
{
  JUMPOUT(0x20C53B9C8);
}

void sub_20C53CBC0()
{
  JUMPOUT(0x20C53B9ECLL);
}

void sub_20C53CBC8()
{
  JUMPOUT(0x20C53BA10);
}

void sub_20C53CBD0()
{
  JUMPOUT(0x20C53BA34);
}

void sub_20C53CBD8()
{
  JUMPOUT(0x20C53BA58);
}

void sub_20C53CBE0()
{
  JUMPOUT(0x20C53BA7CLL);
}

void sub_20C53CBE8()
{
  JUMPOUT(0x20C53BAA0);
}

void sub_20C53CBF0()
{
  JUMPOUT(0x20C53BAC4);
}

void sub_20C53CBF8()
{
  JUMPOUT(0x20C53BAE8);
}

void sub_20C53CC00()
{
  JUMPOUT(0x20C53BB0CLL);
}

void sub_20C53CC08()
{
  JUMPOUT(0x20C53BB30);
}

void sub_20C53CC10()
{
  JUMPOUT(0x20C53BB54);
}

void sub_20C53CC18()
{
  JUMPOUT(0x20C53BB78);
}

void sub_20C53CC20()
{
  JUMPOUT(0x20C53BB9CLL);
}

void sub_20C53CC28()
{
  JUMPOUT(0x20C53BBC0);
}

void sub_20C53CC30()
{
  JUMPOUT(0x20C53BBE4);
}

void sub_20C53CC38()
{
  JUMPOUT(0x20C53BC08);
}

void sub_20C53CC40()
{
  JUMPOUT(0x20C53BC2CLL);
}

void sub_20C53CC48()
{
  JUMPOUT(0x20C53BC50);
}

void sub_20C53CC50()
{
  JUMPOUT(0x20C53BC74);
}

void sub_20C53CC58()
{
  JUMPOUT(0x20C53BC98);
}

void sub_20C53CC60()
{
  JUMPOUT(0x20C53BCBCLL);
}

void sub_20C53CC68()
{
  JUMPOUT(0x20C53BCE0);
}

void sub_20C53CC70()
{
  JUMPOUT(0x20C53BD04);
}

void sub_20C53CC78()
{
  JUMPOUT(0x20C53BD28);
}

void sub_20C53CC80()
{
  JUMPOUT(0x20C53BD4CLL);
}

void sub_20C53CC88()
{
  JUMPOUT(0x20C53BD70);
}

void sub_20C53CC90()
{
  JUMPOUT(0x20C53BD94);
}

void sub_20C53CC98()
{
  JUMPOUT(0x20C53BDB8);
}

void sub_20C53CCA0()
{
  JUMPOUT(0x20C53BDDCLL);
}

void sub_20C53CCA8()
{
  JUMPOUT(0x20C53BE00);
}

void sub_20C53CCB0()
{
  JUMPOUT(0x20C53BE24);
}

void sub_20C53CCB8()
{
  JUMPOUT(0x20C53BE48);
}

void sub_20C53CCC0()
{
  JUMPOUT(0x20C53BE6CLL);
}

void sub_20C53CCC8()
{
  JUMPOUT(0x20C53BE90);
}

void sub_20C53CCD0()
{
  JUMPOUT(0x20C53BEB4);
}

void sub_20C53CCD8()
{
  JUMPOUT(0x20C53BED8);
}

void sub_20C53CCE0()
{
  JUMPOUT(0x20C53BEFCLL);
}

void sub_20C53CCE8()
{
  JUMPOUT(0x20C53BF20);
}

void sub_20C53CCF0()
{
  JUMPOUT(0x20C53BF44);
}

void sub_20C53CCF8()
{
  JUMPOUT(0x20C53BF68);
}

void sub_20C53CD00()
{
  JUMPOUT(0x20C53BF8CLL);
}

void sub_20C53CD08()
{
  JUMPOUT(0x20C53BFB0);
}

void sub_20C53CD10()
{
  JUMPOUT(0x20C53BFD4);
}

void sub_20C53CD18()
{
  JUMPOUT(0x20C53BFF8);
}

void sub_20C53CD20()
{
  JUMPOUT(0x20C53C01CLL);
}

void sub_20C53CD28()
{
  JUMPOUT(0x20C53C040);
}

void sub_20C53CD30()
{
  JUMPOUT(0x20C53C064);
}

void sub_20C53CD38()
{
  JUMPOUT(0x20C53C088);
}

void sub_20C53CD40()
{
  JUMPOUT(0x20C53C0ACLL);
}

void sub_20C53CD48()
{
  JUMPOUT(0x20C53C0D0);
}

void sub_20C53CD50()
{
  JUMPOUT(0x20C53C0F4);
}

void sub_20C53CD58()
{
  JUMPOUT(0x20C53C118);
}

void sub_20C53CD60()
{
  JUMPOUT(0x20C53C13CLL);
}

void sub_20C53CD68()
{
  JUMPOUT(0x20C53C160);
}

void sub_20C53CD70()
{
  JUMPOUT(0x20C53C184);
}

void sub_20C53CD78()
{
  JUMPOUT(0x20C53C1A8);
}

void sub_20C53CD80()
{
  JUMPOUT(0x20C53C1CCLL);
}

void sub_20C53CD88()
{
  JUMPOUT(0x20C53C1F0);
}

void sub_20C53CD90()
{
  JUMPOUT(0x20C53C214);
}

void sub_20C53CD98()
{
  JUMPOUT(0x20C53C238);
}

void sub_20C53CDA0()
{
  JUMPOUT(0x20C53C25CLL);
}

void sub_20C53CDA8()
{
  JUMPOUT(0x20C53C280);
}

void sub_20C53CDB0()
{
  JUMPOUT(0x20C53C2A4);
}

void sub_20C53CDB8()
{
  JUMPOUT(0x20C53C2C8);
}

void sub_20C53CDC0()
{
  JUMPOUT(0x20C53C2ECLL);
}

void sub_20C53CDC8()
{
  JUMPOUT(0x20C53C310);
}

void sub_20C53CDD0()
{
  JUMPOUT(0x20C53C334);
}

void sub_20C53CDD8()
{
  JUMPOUT(0x20C53C358);
}

void sub_20C53CDE0()
{
  JUMPOUT(0x20C53C37CLL);
}

void sub_20C53CDE8()
{
  JUMPOUT(0x20C53C3A0);
}

void sub_20C53CDF0()
{
  JUMPOUT(0x20C53C3C4);
}

void sub_20C53CDF8()
{
  JUMPOUT(0x20C53C3E8);
}

void sub_20C53CE00()
{
  JUMPOUT(0x20C53C40CLL);
}

void sub_20C53CE08()
{
  JUMPOUT(0x20C53C430);
}

void sub_20C53CE10()
{
  JUMPOUT(0x20C53C454);
}

void sub_20C53CE18()
{
  JUMPOUT(0x20C53C478);
}

void sub_20C53CE20()
{
  JUMPOUT(0x20C53C49CLL);
}

void sub_20C53CE28()
{
  JUMPOUT(0x20C53C4C0);
}

void sub_20C53CE30()
{
  JUMPOUT(0x20C53C4E4);
}

void sub_20C53CE38()
{
  JUMPOUT(0x20C53C508);
}

void sub_20C53CE40()
{
  JUMPOUT(0x20C53C52CLL);
}

void sub_20C53CE48()
{
  JUMPOUT(0x20C53C550);
}

void sub_20C53CE50()
{
  JUMPOUT(0x20C53C574);
}

void sub_20C53CE58()
{
  JUMPOUT(0x20C53C598);
}

void sub_20C53CE60()
{
  JUMPOUT(0x20C53C5BCLL);
}

void sub_20C53CE68()
{
  JUMPOUT(0x20C53C5E0);
}

void sub_20C53CE70()
{
  JUMPOUT(0x20C53C604);
}

void sub_20C53CE78()
{
  JUMPOUT(0x20C53C628);
}

void sub_20C53CE80()
{
  JUMPOUT(0x20C53C64CLL);
}

void sub_20C53CE88()
{
  JUMPOUT(0x20C53C670);
}

void sub_20C53CE90()
{
  JUMPOUT(0x20C53C694);
}

void sub_20C53CE98()
{
  JUMPOUT(0x20C53C6B8);
}

void sub_20C53CEA0()
{
  JUMPOUT(0x20C53C6DCLL);
}

void sub_20C53CEA8()
{
  JUMPOUT(0x20C53C700);
}

void sub_20C53CEB0()
{
  JUMPOUT(0x20C53C724);
}

void sub_20C53CEB8()
{
  JUMPOUT(0x20C53C748);
}

void sub_20C53CEC0()
{
  JUMPOUT(0x20C53C76CLL);
}

void sub_20C53CEC8()
{
  JUMPOUT(0x20C53C790);
}

void sub_20C53CED0()
{
  JUMPOUT(0x20C53C7B4);
}

void sub_20C53CED8()
{
  JUMPOUT(0x20C53C7D8);
}

void sub_20C53CEE0()
{
  JUMPOUT(0x20C53C7FCLL);
}

void sub_20C53CEE8()
{
  JUMPOUT(0x20C53C820);
}

void sub_20C53CEF0()
{
  JUMPOUT(0x20C53C844);
}

void sub_20C53CEF8()
{
  JUMPOUT(0x20C53C868);
}

void sub_20C53CF00()
{
  JUMPOUT(0x20C53C88CLL);
}

void sub_20C53CF08()
{
  JUMPOUT(0x20C53C8B0);
}

void sub_20C53CF10()
{
  JUMPOUT(0x20C53C8D4);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::UsdGeomBBoxCache(uint64_t a1, uint64_t **a2, char a3, char a4, double a5)
{
  uint64_t v10;

  v10 = pxrInternal__aapl__pxrReserved__::WorkDispatcher::WorkDispatcher((pxrInternal__aapl__pxrReserved__::WorkDispatcher *)a1);
  *(double *)(v10 + 336) = a5;
  *(_BYTE *)(v10 + 344) = 0;
  *(_BYTE *)(v10 + 352) = 0;
  *(_QWORD *)(v10 + 368) = 0;
  *(_QWORD *)(v10 + 376) = 0;
  *(_QWORD *)(v10 + 360) = 0;
  sub_20BFE538C((_QWORD *)(v10 + 360), *a2, a2[1], a2[1] - *a2);
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::UsdGeomXformCache(a1 + 384, a5);
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 448) = 0u;
  *(_DWORD *)(a1 + 464) = 1065353216;
  *(_BYTE *)(a1 + 472) = a3;
  *(_BYTE *)(a1 + 473) = a4;
  return a1;
}

void sub_20C53CFC4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  pxrInternal__aapl__pxrReserved__::WorkDispatcher *v2;
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  pxrInternal__aapl__pxrReserved__::WorkDispatcher::~WorkDispatcher(v2);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::UsdGeomBBoxCache(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = pxrInternal__aapl__pxrReserved__::WorkDispatcher::WorkDispatcher((pxrInternal__aapl__pxrReserved__::WorkDispatcher *)a1);
  *(_QWORD *)(v4 + 336) = *(_QWORD *)(a2 + 336);
  *(_OWORD *)(v4 + 344) = *(_OWORD *)(a2 + 344);
  *(_QWORD *)(v4 + 368) = 0;
  *(_QWORD *)(v4 + 376) = 0;
  *(_QWORD *)(v4 + 360) = 0;
  sub_20BFE538C((_QWORD *)(v4 + 360), *(uint64_t **)(a2 + 360), *(uint64_t **)(a2 + 368), (uint64_t)(*(_QWORD *)(a2 + 368) - *(_QWORD *)(a2 + 360)) >> 3);
  sub_20C5436A0(a1 + 384, a2 + 384);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  sub_20C548828(a1 + 432, a2 + 432);
  *(_BYTE *)(a1 + 472) = *(_BYTE *)(a2 + 472);
  return a1;
}

void sub_20C53D08C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  pxrInternal__aapl__pxrReserved__::WorkDispatcher *v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  sub_20C543484(v3);
  sub_20BEEB2B8((void ***)va);
  pxrInternal__aapl__pxrReserved__::WorkDispatcher::~WorkDispatcher(v2);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::operator=(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
    v4 = *(_QWORD *)(a2 + 344);
    *(_BYTE *)(a1 + 352) = *(_BYTE *)(a2 + 352);
    *(_QWORD *)(a1 + 344) = v4;
    sub_20C106430((_QWORD *)(a1 + 360), *(uint64_t **)(a2 + 360), *(uint64_t **)(a2 + 368), (uint64_t)(*(_QWORD *)(a2 + 368) - *(_QWORD *)(a2 + 360)) >> 3);
    *(_DWORD *)(a1 + 416) = *(_DWORD *)(a2 + 416);
    sub_20C543DF4((_QWORD *)(a1 + 384), *(_QWORD **)(a2 + 400), 0);
    *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
    *(_DWORD *)(a1 + 464) = *(_DWORD *)(a2 + 464);
    sub_20C548D68((_QWORD *)(a1 + 432), *(_QWORD **)(a2 + 448), 0);
    *(_BYTE *)(a1 + 472) = *(_BYTE *)(a2 + 472);
  }
  return a1;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeWorldBound(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2@<X1>, _OWORD *a3@<X8>)
{
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v6;
  const pxrInternal__aapl__pxrReserved__::UsdObject *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void **v12;
  void *__p[2];
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE __src[306];
  _QWORD **v22;
  _QWORD *v23[2];

  sub_20BEF4AA0((uint64_t)a3);
  if ((pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(a2, v6) & 1) != 0)
  {
    v23[0] = 0;
    v23[1] = 0;
    v22 = v23;
    if (pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_Resolve(this, (uint64_t)a2, (uint64_t)&v22))
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_GetCombinedBBoxForIncludedPurposes((uint64_t)this, (uint64_t)&v22, (pxrInternal__aapl__pxrReserved__::GfBBox3d *)__src);
      memcpy(a3, __src, 0x132uLL);
      v19 = 0u;
      v20 = 0u;
      v17 = 0u;
      v18 = 0u;
      v15 = 0u;
      v16 = 0u;
      *(_OWORD *)__p = 0u;
      v14 = 0u;
      pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalToWorldTransform((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)((char *)this + 384), a2, (uint64_t)__p);
      v8 = a3[8];
      *(_OWORD *)&__src[64] = a3[7];
      *(_OWORD *)&__src[80] = v8;
      v9 = a3[10];
      *(_OWORD *)&__src[96] = a3[9];
      *(_OWORD *)&__src[112] = v9;
      v10 = a3[4];
      *(_OWORD *)__src = a3[3];
      *(_OWORD *)&__src[16] = v10;
      v11 = a3[6];
      *(_OWORD *)&__src[32] = a3[5];
      *(_OWORD *)&__src[48] = v11;
      pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)__src, (double *)__p);
      pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)a3, (const pxrInternal__aapl__pxrReserved__::GfMatrix4d *)__src);
    }
    sub_20BF2B200((uint64_t)&v22, v23[0]);
  }
  else
  {
    *(_QWORD *)__src = "usdGeom/bboxCache.cpp";
    *(_QWORD *)&__src[8] = "ComputeWorldBound";
    *(_QWORD *)&__src[16] = 331;
    *(_QWORD *)&__src[24] = "GfBBox3d pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeWorldBound(const UsdPrim &)";
    __src[32] = 0;
    pxrInternal__aapl__pxrReserved__::UsdDescribe((uint64_t *)__p, a2, v7);
    if ((SBYTE7(v14) & 0x80u) == 0)
      v12 = __p;
    else
      v12 = (void **)__p[0];
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__src, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid prim: %s", (const char *)v12);
    if (SBYTE7(v14) < 0)
      operator delete(__p[0]);
  }
}

void sub_20C53D2CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  uint64_t v16;

  sub_20BF2B200(v16 - 56, *(_QWORD **)(v16 - 48));
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_Resolve(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *a1, uint64_t a2, uint64_t a3)
{
  unsigned int *v6;
  unsigned int v7;
  uint64_t EntriesForPrim;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _BOOL8 v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int *v15;
  unsigned int v16;
  uint64_t v18[4];
  void **v19;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[3];
  uint64_t (**v26[2])(_QWORD);

  memset(v25, 0, sizeof(v25));
  v18[0] = 0;
  sub_20C54519C((uint64_t)&v19, a2, v18);
  if ((v18[0] & 7) != 0)
  {
    v6 = (unsigned int *)(v18[0] & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  EntriesForPrim = pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_FindOrCreateEntriesForPrim(a1, (uint64_t *)&v19, v25);
  if (*(_BYTE *)(EntriesForPrim + 56))
  {
    if (EntriesForPrim != a3)
    {
      v9 = (_QWORD *)(EntriesForPrim + 8);
LABEL_10:
      sub_20C54B950((uint64_t **)a3, *(_QWORD **)EntriesForPrim, v9);
      goto LABEL_11;
    }
    goto LABEL_11;
  }
  v18[0] = (uint64_t)v25;
  v18[1] = (uint64_t)a1;
  v18[2] = a2;
  v18[3] = (uint64_t)&v19;
  v26[0] = (uint64_t (**)(_QWORD))off_24C53C040;
  v26[1] = (uint64_t (**)(_QWORD))v18;
  tbb::interface7::internal::isolate_within_arena(v26, 0);
  v10 = sub_20C547340((_QWORD *)a1 + 54, (uint64_t)&v19);
  v11 = v10;
  if (v10)
  {
    EntriesForPrim = (uint64_t)(v10 + 7);
    if (v11 + 7 != (_QWORD *)a3)
    {
      v9 = v11 + 8;
      goto LABEL_10;
    }
LABEL_11:
    v12 = *(_QWORD *)(a3 + 16) != 0;
    goto LABEL_12;
  }
  v12 = 0;
LABEL_12:
  if ((v24 & 7) != 0)
  {
    v13 = (unsigned int *)(v24 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  if ((v23 & 7) != 0)
  {
    v15 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
    do
      v16 = __ldxr(v15);
    while (__stlxr(v16 - 2, v15));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_20BFD265C(&v21);
  if (v20)
    sub_20C35C614(v20);
  v19 = (void **)v25;
  sub_20C546730(&v19);
  return v12;
}

void sub_20C53D47C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  sub_20C540D8C((uint64_t)&a13);
  a13 = (void **)&a18;
  sub_20C546730(&a13);
  _Unwind_Resume(a1);
}

double *pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_GetCombinedBBoxForIncludedPurposes@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, pxrInternal__aapl__pxrReserved__::GfBBox3d *a3@<X8>)
{
  double *result;
  _QWORD *v7;
  _QWORD *i;
  _BYTE __src[312];

  result = (double *)sub_20BEF4AA0((uint64_t)a3);
  v7 = *(_QWORD **)(a1 + 360);
  for (i = *(_QWORD **)(a1 + 368); v7 != i; ++v7)
  {
    result = (double *)sub_20C1299E8(a2, v7);
    if ((double *)(a2 + 8) != result && result[5] <= result[8] && result[6] <= result[9] && result[7] <= result[10])
    {
      pxrInternal__aapl__pxrReserved__::GfBBox3d::Combine(a3, (const pxrInternal__aapl__pxrReserved__::GfBBox3d *)(result + 5), (uint64_t)__src);
      result = (double *)memcpy(a3, __src, 0x132uLL);
    }
  }
  return result;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeRelativeBound(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2@<X1>, const pxrInternal__aapl__pxrReserved__::UsdPrim *a3@<X2>, _OWORD *a4@<X8>)
{
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  const pxrInternal__aapl__pxrReserved__::UsdObject *v9;
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  void **v15;
  _OWORD v16[8];
  _OWORD v17[8];
  void *__p[2];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE __src[306];
  _QWORD **v27;
  _QWORD *v28[2];

  sub_20BEF4AA0((uint64_t)a4);
  if ((pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(a2, v8) & 1) != 0)
  {
    v28[0] = 0;
    v28[1] = 0;
    v27 = v28;
    if (pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_Resolve(this, (uint64_t)a2, (uint64_t)&v27))
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_GetCombinedBBoxForIncludedPurposes((uint64_t)this, (uint64_t)&v27, (pxrInternal__aapl__pxrReserved__::GfBBox3d *)__src);
      memcpy(a4, __src, 0x132uLL);
      v24 = 0u;
      v25 = 0u;
      v22 = 0u;
      v23 = 0u;
      v20 = 0u;
      v21 = 0u;
      v10 = (pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)((char *)this + 384);
      *(_OWORD *)__p = 0u;
      v19 = 0u;
      pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalToWorldTransform(v10, a2, (uint64_t)__p);
      memset(v17, 0, sizeof(v17));
      pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalToWorldTransform(v10, a3, (uint64_t)v17);
      pxrInternal__aapl__pxrReserved__::GfMatrix4d::GetInverse((double *)v17, 0, 0.0, (uint64_t)__src);
      v16[4] = v22;
      v16[5] = v23;
      v16[6] = v24;
      v16[7] = v25;
      v16[0] = *(_OWORD *)__p;
      v16[1] = v19;
      v16[2] = v20;
      v16[3] = v21;
      pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)v16, (double *)__src);
      v11 = a4[8];
      *(_OWORD *)&__src[64] = a4[7];
      *(_OWORD *)&__src[80] = v11;
      v12 = a4[10];
      *(_OWORD *)&__src[96] = a4[9];
      *(_OWORD *)&__src[112] = v12;
      v13 = a4[4];
      *(_OWORD *)__src = a4[3];
      *(_OWORD *)&__src[16] = v13;
      v14 = a4[6];
      *(_OWORD *)&__src[32] = a4[5];
      *(_OWORD *)&__src[48] = v14;
      pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)__src, (double *)v16);
      pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)a4, (const pxrInternal__aapl__pxrReserved__::GfMatrix4d *)__src);
    }
    sub_20BF2B200((uint64_t)&v27, v28[0]);
  }
  else
  {
    *(_QWORD *)__src = "usdGeom/bboxCache.cpp";
    *(_QWORD *)&__src[8] = "ComputeRelativeBound";
    *(_QWORD *)&__src[16] = 353;
    *(_QWORD *)&__src[24] = "GfBBox3d pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeRelativeBound(const UsdP"
                            "rim &, const UsdPrim &)";
    __src[32] = 0;
    pxrInternal__aapl__pxrReserved__::UsdDescribe((uint64_t *)__p, a2, v9);
    if ((SBYTE7(v19) & 0x80u) == 0)
      v15 = __p;
    else
      v15 = (void **)__p[0];
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__src, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid prim: %s", (const char *)v15);
    if (SBYTE7(v19) < 0)
      operator delete(__p[0]);
  }
}

void sub_20C53D770(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void *__p,uint64_t a44,int a45,__int16 a46,char a47,char a48)
{
  uint64_t v48;

  sub_20BF2B200(v48 - 72, *(_QWORD **)(v48 - 64));
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeLocalBound(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2@<X1>, _OWORD *a3@<X8>)
{
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v6;
  const pxrInternal__aapl__pxrReserved__::UsdObject *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void **v12;
  void *__p[2];
  char v14;
  BOOL v15;
  _BYTE __src[306];
  _QWORD **v17;
  _QWORD *v18[2];

  sub_20BEF4AA0((uint64_t)a3);
  if ((pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(a2, v6) & 1) != 0)
  {
    v18[0] = 0;
    v18[1] = 0;
    v17 = v18;
    if (pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_Resolve(this, (uint64_t)a2, (uint64_t)&v17))
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_GetCombinedBBoxForIncludedPurposes((uint64_t)this, (uint64_t)&v17, (pxrInternal__aapl__pxrReserved__::GfBBox3d *)__src);
      memcpy(a3, __src, 0x132uLL);
      v15 = 0;
      pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalTransformation((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)((char *)this + 384), a2, &v15, __p);
      v8 = a3[8];
      *(_OWORD *)&__src[64] = a3[7];
      *(_OWORD *)&__src[80] = v8;
      v9 = a3[10];
      *(_OWORD *)&__src[96] = a3[9];
      *(_OWORD *)&__src[112] = v9;
      v10 = a3[4];
      *(_OWORD *)__src = a3[3];
      *(_OWORD *)&__src[16] = v10;
      v11 = a3[6];
      *(_OWORD *)&__src[32] = a3[5];
      *(_OWORD *)&__src[48] = v11;
      pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)__src, (double *)__p);
      pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)a3, (const pxrInternal__aapl__pxrReserved__::GfMatrix4d *)__src);
    }
    sub_20BF2B200((uint64_t)&v17, v18[0]);
  }
  else
  {
    *(_QWORD *)__src = "usdGeom/bboxCache.cpp";
    *(_QWORD *)&__src[8] = "ComputeLocalBound";
    *(_QWORD *)&__src[16] = 379;
    *(_QWORD *)&__src[24] = "GfBBox3d pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeLocalBound(const UsdPrim &)";
    __src[32] = 0;
    pxrInternal__aapl__pxrReserved__::UsdDescribe((uint64_t *)__p, a2, v7);
    if (v14 >= 0)
      v12 = __p;
    else
      v12 = (void **)__p[0];
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__src, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid prim: %s", (const char *)v12);
    if (v14 < 0)
      operator delete(__p[0]);
  }
}

void sub_20C53D914(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  sub_20BF2B200(v15 - 56, *(_QWORD **)(v15 - 48));
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeUntransformedBound(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2@<X1>, pxrInternal__aapl__pxrReserved__::GfBBox3d *a3@<X8>)
{
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v6;
  const pxrInternal__aapl__pxrReserved__::UsdObject *v7;
  void **v8;
  void *__p[2];
  char v10;
  char *v11;
  char *v12;
  uint64_t v13;
  const char *v14;
  char v15;
  _BYTE __src[312];

  sub_20BEF4AA0((uint64_t)__src);
  if ((pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(a2, v6) & 1) != 0)
  {
    v12 = 0;
    v13 = 0;
    v11 = (char *)&v12;
    if (pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_Resolve(this, (uint64_t)a2, (uint64_t)&v11))
      pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_GetCombinedBBoxForIncludedPurposes((uint64_t)this, (uint64_t)&v11, a3);
    else
      memcpy(a3, __src, 0x138uLL);
    sub_20BF2B200((uint64_t)&v11, v12);
  }
  else
  {
    v11 = "usdGeom/bboxCache.cpp";
    v12 = "ComputeUntransformedBound";
    v13 = 402;
    v14 = "GfBBox3d pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeUntransformedBound(const UsdPrim &)";
    v15 = 0;
    pxrInternal__aapl__pxrReserved__::UsdDescribe((uint64_t *)__p, a2, v7);
    if (v10 >= 0)
      v8 = __p;
    else
      v8 = (void **)__p[0];
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v11, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid prim: %s", (const char *)v8);
    if (v10 < 0)
      operator delete(__p[0]);
    memcpy(a3, __src, 0x138uLL);
  }
}

void sub_20C53DA6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeUntransformedBound@<X0>(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *a1@<X0>, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2@<X1>, _QWORD *a3@<X2>, _QWORD *a4@<X3>, pxrInternal__aapl__pxrReserved__::GfBBox3d *a5@<X8>)
{
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  const pxrInternal__aapl__pxrReserved__::UsdObject *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  BOOL v13;
  _QWORD *i;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  double *v18;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v19;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int *v27;
  unsigned int v28;
  const char *v29;
  pxrInternal__aapl__pxrReserved__::GfBBox3d *v31;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v37;
  int v38;
  int v39;
  uint64_t v40;
  _OWORD __src[20];
  _BYTE __dst[306];
  uint64_t v43;
  int v44;
  int v45;
  _BYTE v46[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  _QWORD v51[2];
  uint64_t v52;
  int v53;
  char v54;
  char v55;
  uint64_t v56[2];
  int v57;
  _DWORD v58[9];
  _OWORD v59[2];
  uint64_t v60;
  _OWORD v61[2];
  uint64_t v62;
  _BYTE v63[320];

  sub_20BEF4AA0((uint64_t)v63);
  if ((pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(a2, v8) & 1) != 0)
  {
    v62 = 0;
    memset(v61, 0, sizeof(v61));
    v10 = (_QWORD *)*a3;
    if ((_QWORD *)*a3 != a3 + 1)
    {
      do
      {
        pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v10 + 28), __dst);
        *sub_20C5494E8((uint64_t)v61, __dst) = 1;
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__dst[4]);
        sub_20BFD265C(__dst);
        v11 = (_QWORD *)v10[1];
        if (v11)
        {
          do
          {
            v12 = v11;
            v11 = (_QWORD *)*v11;
          }
          while (v11);
        }
        else
        {
          do
          {
            v12 = (_QWORD *)v10[2];
            v13 = *v12 == (_QWORD)v10;
            v10 = v12;
          }
          while (!v13);
        }
        v10 = v12;
      }
      while (v12 != a3 + 1);
    }
    v60 = 0;
    memset(v59, 0, sizeof(v59));
    for (i = (_QWORD *)a4[2]; i; i = (_QWORD *)*i)
    {
      pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)(i + 2), __dst);
      *sub_20C5494E8((uint64_t)v59, __dst) = 1;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__dst[4]);
      sub_20BFD265C(__dst);
    }
    sub_20BEF4AA0((uint64_t)a5);
    sub_20C549A40((uint64_t)v56, (uint64_t)a2);
    v31 = a5;
    sub_20C37ECB8(v56, (uint64_t)v51);
    while (1)
    {
      *(_QWORD *)__dst = v56[1];
      *(_QWORD *)&__dst[8] = v56;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&__dst[16]);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&__dst[20]);
      *(_DWORD *)&__dst[24] = 0;
      *(_WORD *)&__dst[28] = 0;
      if (v51[1] == *(_QWORD *)&__dst[8] && v51[0] == *(_QWORD *)__dst)
      {
        v15 = 1;
        if (v52 == *(_QWORD *)&__dst[16] && !v53 && !v54)
          v15 = v55 != 0;
      }
      else
      {
        v15 = 1;
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__dst[20]);
      sub_20BFD265C(&__dst[16]);
      if (!v15)
        break;
      sub_20C37ED84((uint64_t)v51, (uint64_t)v46);
      sub_20C348EEC((uint64_t)v46, &v44);
      if (sub_20C222ED4((uint64_t)a3, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v44))
      {
        pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator::PruneChildren((pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator *)v51);
      }
      else if (!sub_20C2CA694(v61, (unsigned int *)&v44) && !sub_20C2CA694(v59, (unsigned int *)&v44))
      {
        sub_20BFD6E54(&v43, &v44);
        sub_20BFD6EA4((_DWORD *)&v43 + 1, &v45);
        while (1)
        {
          sub_20C348EEC((uint64_t)a2, (int *)__dst);
          v16 = v43;
          v17 = *(_QWORD *)__dst;
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__dst[4]);
          sub_20BFD265C(__dst);
          if (v16 == v17)
            break;
          v18 = (double *)sub_20C0E70D0(a4, (unsigned int *)&v43);
          if (v18)
            goto LABEL_29;
          pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&v43, __dst);
          sub_20BFD3EBC((int *)&v43, (int *)__dst);
          sub_20BFD3F10((int *)&v43 + 1, (int *)&__dst[4]);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__dst[4]);
          sub_20BFD265C(__dst);
        }
        v18 = 0;
LABEL_29:
        sub_20BEF4AA0((uint64_t)__dst);
        if (v16 == v17)
        {
          pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeRelativeBound(a1, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v46, a2, __src);
          memcpy(__dst, __src, sizeof(__dst));
        }
        else
        {
          pxrInternal__aapl__pxrReserved__::UsdObject::GetStage(a2, v19, &v34);
          v20 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(&v34);
          pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v20, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v18 + 2), (uint64_t)v36);
          pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeRelativeBound(a1, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v46, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v36, __src);
          memcpy(__dst, __src, sizeof(__dst));
          if ((v40 & 7) != 0)
          {
            v21 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
            do
              v22 = __ldxr(v21);
            while (__stlxr(v22 - 2, v21));
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v39);
          sub_20BFD265C(&v38);
          if (v37)
            sub_20C35C614(v37);
          v23 = v35;
          if (v35)
          {
            v24 = (unsigned int *)(v35 + 8);
            do
            {
              v25 = __ldxr(v24);
              v26 = v25 - 1;
            }
            while (__stlxr(v26, v24));
            if (!v26)
              (*(void (**)(uint64_t))(*(_QWORD *)v23 + 8))(v23);
          }
          __src[4] = *(_OWORD *)&__dst[112];
          __src[5] = *(_OWORD *)&__dst[128];
          __src[6] = *(_OWORD *)&__dst[144];
          __src[7] = *(_OWORD *)&__dst[160];
          __src[0] = *(_OWORD *)&__dst[48];
          __src[1] = *(_OWORD *)&__dst[64];
          __src[2] = *(_OWORD *)&__dst[80];
          __src[3] = *(_OWORD *)&__dst[96];
          pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)__src, v18 + 3);
          pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)__dst, (const pxrInternal__aapl__pxrReserved__::GfMatrix4d *)__src);
        }
        pxrInternal__aapl__pxrReserved__::GfBBox3d::Combine(v31, (const pxrInternal__aapl__pxrReserved__::GfBBox3d *)__dst, (uint64_t)__src);
        memcpy(v31, __src, 0x132uLL);
        pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator::PruneChildren((pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator *)v51);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v43 + 1);
        sub_20BFD265C(&v43);
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v45);
      sub_20BFD265C(&v44);
      if ((v50 & 7) != 0)
      {
        v27 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
        do
          v28 = __ldxr(v27);
        while (__stlxr(v28 - 2, v27));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
      sub_20BFD265C(&v48);
      if (v47)
        sub_20C35C614(v47);
      pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator::increment((uint64_t)v51);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v52 + 1);
    sub_20BFD265C(&v52);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v58);
    sub_20BFD265C(&v57);
    sub_20C549B1C((uint64_t *)v59);
    return sub_20C549B1C((uint64_t *)v61);
  }
  else
  {
    *(_QWORD *)__dst = "usdGeom/bboxCache.cpp";
    *(_QWORD *)&__dst[8] = "_ComputeBoundWithOverridesHelper";
    *(_QWORD *)&__dst[16] = 424;
    *(_QWORD *)&__dst[24] = "GfBBox3d pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ComputeBoundWithOverridesHelpe"
                            "r(const UsdPrim &, const SdfPathSet &, const TransformType &, const TfHashMap<SdfPath, GfMat"
                            "rix4d, SdfPath::Hash> &) [TransformType = pxrInternal__aapl__pxrReserved__::(anonymous names"
                            "pace)::_IdentityTransform]";
    __dst[32] = 0;
    pxrInternal__aapl__pxrReserved__::UsdDescribe((uint64_t *)__src, a2, v9);
    if ((SBYTE7(__src[1]) & 0x80u) == 0)
      v29 = (const char *)__src;
    else
      v29 = *(const char **)&__src[0];
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__dst, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid prim: %s", v29);
    if (SBYTE7(__src[1]) < 0)
      operator delete(*(void **)&__src[0]);
    return (uint64_t *)memcpy(a5, v63, 0x138uLL);
  }
}

void sub_20C53E054(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, _DWORD *a12, _DWORD *a13, _DWORD *a14, uint64_t a15, uint64_t a16, uint64_t a17, _DWORD *a18, _DWORD *a19, _DWORD *a20,uint64_t a21,uint64_t a22,uint64_t a23,pxrInternal__aapl__pxrReserved__::Usd_PrimData *a24,uint64_t a25,uint64_t a26)
{
  _DWORD *v26;
  unsigned int *v28;
  unsigned int v29;
  unsigned int *v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int *v33;
  unsigned int v34;

  if ((a26 & 7) != 0)
  {
    v28 = (unsigned int *)(a26 & 0xFFFFFFFFFFFFFFF8);
    do
      v29 = __ldxr(v28);
    while (__stlxr(v29 - 2, v28));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a13);
  sub_20BFD265C(a12);
  if (a24)
    sub_20C35C614(a24);
  if (a22)
  {
    v30 = (unsigned int *)(a22 + 8);
    do
    {
      v31 = __ldxr(v30);
      v32 = v31 - 1;
    }
    while (__stlxr(v32, v30));
    if (!v32)
      (*(void (**)(uint64_t))(*(_QWORD *)a22 + 8))(a22);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a18);
  sub_20BFD265C(&STACK[0x308]);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v26);
  sub_20BFD265C(&STACK[0x310]);
  if ((STACK[0x330] & 7) != 0)
  {
    v33 = (unsigned int *)(STACK[0x330] & 0xFFFFFFFFFFFFFFF8);
    do
      v34 = __ldxr(v33);
    while (__stlxr(v34 - 2, v33));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a20);
  sub_20BFD265C(a19);
  if (STACK[0x320])
    sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)STACK[0x320]);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&STACK[0x34C]);
  sub_20BFD265C(a14);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&STACK[0x36C]);
  sub_20BFD265C(&STACK[0x368]);
  sub_20C549B1C((uint64_t *)&STACK[0x390]);
  sub_20C549B1C((uint64_t *)&STACK[0x3C0]);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C53E25C@<X0>(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *a1@<X0>, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2@<X1>, _QWORD *a3@<X2>, double *a4@<X3>, _QWORD *a5@<X4>, pxrInternal__aapl__pxrReserved__::GfBBox3d *a6@<X8>)
{
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v10;
  const pxrInternal__aapl__pxrReserved__::UsdObject *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  BOOL v15;
  _QWORD *i;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  double *v20;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v21;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v22;
  unsigned int *v23;
  unsigned int v24;
  uint64_t v25;
  unsigned int *v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int *v29;
  unsigned int v30;
  const char *v31;
  pxrInternal__aapl__pxrReserved__::GfBBox3d *v33;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v39;
  int v40;
  int v41;
  uint64_t v42;
  _OWORD __src[20];
  _BYTE __dst[306];
  uint64_t v45;
  int v46;
  int v47;
  _BYTE v48[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v49;
  int v50;
  int v51;
  uint64_t v52;
  _QWORD v53[2];
  uint64_t v54;
  int v55;
  char v56;
  char v57;
  uint64_t v58[2];
  int v59;
  _DWORD v60[9];
  _OWORD v61[2];
  uint64_t v62;
  _OWORD v63[2];
  uint64_t v64;
  _BYTE v65[320];

  sub_20BEF4AA0((uint64_t)v65);
  if ((pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(a2, v10) & 1) != 0)
  {
    v64 = 0;
    memset(v63, 0, sizeof(v63));
    v12 = (_QWORD *)*a3;
    if ((_QWORD *)*a3 != a3 + 1)
    {
      do
      {
        pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v12 + 28), __dst);
        *sub_20C5494E8((uint64_t)v63, __dst) = 1;
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__dst[4]);
        sub_20BFD265C(__dst);
        v13 = (_QWORD *)v12[1];
        if (v13)
        {
          do
          {
            v14 = v13;
            v13 = (_QWORD *)*v13;
          }
          while (v13);
        }
        else
        {
          do
          {
            v14 = (_QWORD *)v12[2];
            v15 = *v14 == (_QWORD)v12;
            v12 = v14;
          }
          while (!v15);
        }
        v12 = v14;
      }
      while (v14 != a3 + 1);
    }
    v62 = 0;
    memset(v61, 0, sizeof(v61));
    for (i = (_QWORD *)a5[2]; i; i = (_QWORD *)*i)
    {
      pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)(i + 2), __dst);
      *sub_20C5494E8((uint64_t)v61, __dst) = 1;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__dst[4]);
      sub_20BFD265C(__dst);
    }
    sub_20BEF4AA0((uint64_t)a6);
    sub_20C549A40((uint64_t)v58, (uint64_t)a2);
    v33 = a6;
    sub_20C37ECB8(v58, (uint64_t)v53);
    while (1)
    {
      *(_QWORD *)__dst = v58[1];
      *(_QWORD *)&__dst[8] = v58;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&__dst[16]);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&__dst[20]);
      *(_DWORD *)&__dst[24] = 0;
      *(_WORD *)&__dst[28] = 0;
      if (v53[1] == *(_QWORD *)&__dst[8] && v53[0] == *(_QWORD *)__dst)
      {
        v17 = 1;
        if (v54 == *(_QWORD *)&__dst[16] && !v55 && !v56)
          v17 = v57 != 0;
      }
      else
      {
        v17 = 1;
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__dst[20]);
      sub_20BFD265C(&__dst[16]);
      if (!v17)
        break;
      sub_20C37ED84((uint64_t)v53, (uint64_t)v48);
      sub_20C348EEC((uint64_t)v48, &v46);
      if (sub_20C222ED4((uint64_t)a3, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v46))
      {
        pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator::PruneChildren((pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator *)v53);
      }
      else if (!sub_20C2CA694(v63, (unsigned int *)&v46) && !sub_20C2CA694(v61, (unsigned int *)&v46))
      {
        sub_20BFD6E54(&v45, &v46);
        sub_20BFD6EA4((_DWORD *)&v45 + 1, &v47);
        while (1)
        {
          sub_20C348EEC((uint64_t)a2, (int *)__dst);
          v18 = v45;
          v19 = *(_QWORD *)__dst;
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__dst[4]);
          sub_20BFD265C(__dst);
          if (v18 == v19)
            break;
          v20 = (double *)sub_20C0E70D0(a5, (unsigned int *)&v45);
          if (v20)
            goto LABEL_29;
          pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&v45, __dst);
          sub_20BFD3EBC((int *)&v45, (int *)__dst);
          sub_20BFD3F10((int *)&v45 + 1, (int *)&__dst[4]);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__dst[4]);
          sub_20BFD265C(__dst);
        }
        v20 = 0;
LABEL_29:
        sub_20BEF4AA0((uint64_t)__dst);
        if (v18 == v19)
        {
          pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeRelativeBound(a1, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v48, a2, __src);
          memcpy(__dst, __src, sizeof(__dst));
          __src[4] = *(_OWORD *)&__dst[112];
          __src[5] = *(_OWORD *)&__dst[128];
          __src[6] = *(_OWORD *)&__dst[144];
          __src[7] = *(_OWORD *)&__dst[160];
          __src[0] = *(_OWORD *)&__dst[48];
          __src[1] = *(_OWORD *)&__dst[64];
          __src[2] = *(_OWORD *)&__dst[80];
          __src[3] = *(_OWORD *)&__dst[96];
          pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)__src, a4);
          pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)__dst, (const pxrInternal__aapl__pxrReserved__::GfMatrix4d *)__src);
        }
        else
        {
          pxrInternal__aapl__pxrReserved__::UsdObject::GetStage(a2, v21, &v36);
          v22 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(&v36);
          pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v22, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v20 + 2), (uint64_t)v38);
          pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeRelativeBound(a1, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v48, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v38, __src);
          memcpy(__dst, __src, sizeof(__dst));
          if ((v42 & 7) != 0)
          {
            v23 = (unsigned int *)(v42 & 0xFFFFFFFFFFFFFFF8);
            do
              v24 = __ldxr(v23);
            while (__stlxr(v24 - 2, v23));
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v41);
          sub_20BFD265C(&v40);
          if (v39)
            sub_20C35C614(v39);
          v25 = v37;
          if (v37)
          {
            v26 = (unsigned int *)(v37 + 8);
            do
            {
              v27 = __ldxr(v26);
              v28 = v27 - 1;
            }
            while (__stlxr(v28, v26));
            if (!v28)
              (*(void (**)(uint64_t))(*(_QWORD *)v25 + 8))(v25);
          }
          __src[4] = *(_OWORD *)&__dst[112];
          __src[5] = *(_OWORD *)&__dst[128];
          __src[6] = *(_OWORD *)&__dst[144];
          __src[7] = *(_OWORD *)&__dst[160];
          __src[0] = *(_OWORD *)&__dst[48];
          __src[1] = *(_OWORD *)&__dst[64];
          __src[2] = *(_OWORD *)&__dst[80];
          __src[3] = *(_OWORD *)&__dst[96];
          pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)__src, v20 + 3);
          pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)__dst, (const pxrInternal__aapl__pxrReserved__::GfMatrix4d *)__src);
        }
        pxrInternal__aapl__pxrReserved__::GfBBox3d::Combine(v33, (const pxrInternal__aapl__pxrReserved__::GfBBox3d *)__dst, (uint64_t)__src);
        memcpy(v33, __src, 0x132uLL);
        pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator::PruneChildren((pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator *)v53);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v45 + 1);
        sub_20BFD265C(&v45);
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v47);
      sub_20BFD265C(&v46);
      if ((v52 & 7) != 0)
      {
        v29 = (unsigned int *)(v52 & 0xFFFFFFFFFFFFFFF8);
        do
          v30 = __ldxr(v29);
        while (__stlxr(v30 - 2, v29));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v51);
      sub_20BFD265C(&v50);
      if (v49)
        sub_20C35C614(v49);
      pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator::increment((uint64_t)v53);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v54 + 1);
    sub_20BFD265C(&v54);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v60);
    sub_20BFD265C(&v59);
    sub_20C549B1C((uint64_t *)v61);
    return sub_20C549B1C((uint64_t *)v63);
  }
  else
  {
    *(_QWORD *)__dst = "usdGeom/bboxCache.cpp";
    *(_QWORD *)&__dst[8] = "_ComputeBoundWithOverridesHelper";
    *(_QWORD *)&__dst[16] = 424;
    *(_QWORD *)&__dst[24] = "GfBBox3d pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ComputeBoundWithOverridesHelpe"
                            "r(const UsdPrim &, const SdfPathSet &, const TransformType &, const TfHashMap<SdfPath, GfMat"
                            "rix4d, SdfPath::Hash> &) [TransformType = pxrInternal__aapl__pxrReserved__::GfMatrix4d]";
    __dst[32] = 0;
    pxrInternal__aapl__pxrReserved__::UsdDescribe((uint64_t *)__src, a2, v11);
    if ((SBYTE7(__src[1]) & 0x80u) == 0)
      v31 = (const char *)__src;
    else
      v31 = *(const char **)&__src[0];
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__dst, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid prim: %s", v31);
    if (SBYTE7(__src[1]) < 0)
      operator delete(*(void **)&__src[0]);
    return (uint64_t *)memcpy(a6, v65, 0x138uLL);
  }
}

void sub_20C53E864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  unsigned int *v16;
  unsigned int v17;
  unsigned int v18;
  va_list va;

  va_start(va, a15);
  sub_20C35C2E0((uint64_t)va);
  if (a15)
  {
    v16 = (unsigned int *)(a15 + 8);
    do
    {
      v17 = __ldxr(v16);
      v18 = v17 - 1;
    }
    while (__stlxr(v18, v16));
    if (!v18)
      (*(void (**)(uint64_t))(*(_QWORD *)a15 + 8))(a15);
  }
  sub_20BFD1A18(&STACK[0x308]);
  sub_20BFD1A18(&STACK[0x310]);
  sub_20C35C2E0((uint64_t)&STACK[0x318]);
  sub_20C37ED50((uint64_t)&STACK[0x338]);
  sub_20C37EDFC((uint64_t)&STACK[0x358]);
  sub_20C549B1C((uint64_t *)&STACK[0x390]);
  sub_20C549B1C((uint64_t *)&STACK[0x3C0]);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ComputePointInstanceBoundsHelper(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *this, const pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *a2, const uint64_t *a3, uint64_t a4, const pxrInternal__aapl__pxrReserved__::GfMatrix4d *a5, pxrInternal__aapl__pxrReserved__::GfBBox3d *a6)
{
  double v12;
  uint64_t v13;
  double v14;
  char v15;
  char v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int *v19;
  uint64_t v20;
  unint64_t v21;
  _BOOL8 v22;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v23;
  unsigned int *v24;
  unsigned int v25;
  const uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v29;
  __int128 *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  unsigned int *v41;
  unsigned int v42;
  uint64_t v43;
  unsigned int *v44;
  unsigned int v45;
  unsigned int v46;
  const char *v47;
  char *v48;
  unsigned int *v49;
  unsigned int v50;
  const char *Text;
  char *v52;
  unsigned int *v53;
  unsigned int v54;
  const char *v55;
  char *v56;
  unsigned int *v57;
  unsigned int v58;
  unsigned int *v59;
  unsigned int v60;
  const char *v62;
  char *v63;
  unsigned int *v64;
  unsigned int v65;
  __int128 v66;
  _OWORD v67[7];
  _OWORD __src[20];
  int v69;
  int v70;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v71;
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _OWORD v77[2];
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE v82[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v83;
  int v84;
  int v85;
  uint64_t v86;
  _OWORD v87[2];
  unsigned int *v88;

  v12 = *((double *)this + 42);
  v13 = 344;
  if (!*((_BYTE *)this + 352))
    v13 = 336;
  v14 = *(double *)((char *)this + v13);
  v88 = 0;
  memset(v87, 0, sizeof(v87));
  pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetProtoIndicesAttr(a2, (uint64_t)__src);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<int>>((uint64_t)__src, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v87);
  v16 = v15;
  if ((BYTE8(__src[1]) & 7) != 0)
  {
    v17 = (unsigned int *)(*((_QWORD *)&__src[1] + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v18 = __ldxr(v17);
    while (__stlxr(v18 - 2, v17));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&__src[1] + 1);
  sub_20BFD265C(&__src[1]);
  if (*((_QWORD *)&__src[0] + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&__src[0] + 1));
  if ((v16 & 1) != 0)
  {
    pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetPrototypesRel(a2, (uint64_t)v82);
    v79 = 0;
    v80 = 0;
    v81 = 0;
    if (!pxrInternal__aapl__pxrReserved__::UsdRelationship::GetTargets((uint64_t)v82, &v79) || v79 == v80)
    {
      *(_QWORD *)&__src[0] = "usdGeom/bboxCache.cpp";
      *((_QWORD *)&__src[0] + 1) = "_ComputePointInstanceBoundsHelper";
      *(_QWORD *)&__src[1] = 556;
      *((_QWORD *)&__src[1] + 1) = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ComputePointInstanceBoundsH"
                                   "elper(const UsdGeomPointInstancer &, const int64_t *, size_t, const GfMatrix4d &, GfBBox3d *)";
      LOBYTE(__src[2]) = 0;
      sub_20C35C4F8((uint64_t)&v66, (uint64_t *)a2 + 1, (_DWORD *)a2 + 4);
      sub_20C348EEC((uint64_t)&v66, (int *)v77);
      Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)v77);
      pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)__src, (pxrInternal__aapl__pxrReserved__ *)"%s -- no prototypes", v52, Text);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v77 + 1);
      sub_20BFD265C(v77);
      if ((BYTE8(v67[0]) & 7) != 0)
      {
        v53 = (unsigned int *)(*((_QWORD *)&v67[0] + 1) & 0xFFFFFFFFFFFFFFF8);
        do
          v54 = __ldxr(v53);
        while (__stlxr(v54 - 2, v53));
      }
    }
    else
    {
      if (!*(_QWORD *)&v87[0])
      {
LABEL_16:
        v78 = 0;
        memset(v77, 0, sizeof(v77));
        v22 = pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::ComputeInstanceTransformsAtTime(a2, (uint64_t)v77, 0, 1, v12, v14);
        if (v22)
        {
          sub_20C35C4F8((uint64_t)__src, (uint64_t *)a2 + 1, (_DWORD *)a2 + 4);
          pxrInternal__aapl__pxrReserved__::UsdObject::GetStage((pxrInternal__aapl__pxrReserved__::UsdObject *)__src, v23, &v75);
          if ((BYTE8(__src[1]) & 7) != 0)
          {
            v24 = (unsigned int *)(*((_QWORD *)&__src[1] + 1) & 0xFFFFFFFFFFFFFFF8);
            do
              v25 = __ldxr(v24);
            while (__stlxr(v25 - 2, v24));
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&__src[1] + 1);
          sub_20BFD265C(&__src[1]);
          if (*((_QWORD *)&__src[0] + 1))
            sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&__src[0] + 1));
          if (a4)
          {
            v26 = &a3[a4];
            do
            {
              v27 = (int)v88[*a3];
              v28 = v79;
              v29 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(&v75);
              pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v29, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v28 + 8 * v27), (uint64_t)&v69);
              pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeUntransformedBound(this, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v69, (pxrInternal__aapl__pxrReserved__::GfBBox3d *)__src);
              memcpy(a6, __src, 0x132uLL);
              v30 = (__int128 *)(v78 + (*a3 << 7));
              v31 = v30[3];
              v33 = *v30;
              v32 = v30[1];
              v67[1] = v30[2];
              v67[2] = v31;
              v66 = v33;
              v67[0] = v32;
              v34 = v30[7];
              v36 = v30[4];
              v35 = v30[5];
              v67[5] = v30[6];
              v67[6] = v34;
              v67[3] = v36;
              v67[4] = v35;
              pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)&v66, (double *)a5);
              v37 = *((_OWORD *)a6 + 8);
              __src[4] = *((_OWORD *)a6 + 7);
              __src[5] = v37;
              v38 = *((_OWORD *)a6 + 10);
              __src[6] = *((_OWORD *)a6 + 9);
              __src[7] = v38;
              v39 = *((_OWORD *)a6 + 4);
              __src[0] = *((_OWORD *)a6 + 3);
              __src[1] = v39;
              v40 = *((_OWORD *)a6 + 6);
              __src[2] = *((_OWORD *)a6 + 5);
              __src[3] = v40;
              pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)__src, (double *)&v66);
              pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices(a6, (const pxrInternal__aapl__pxrReserved__::GfMatrix4d *)__src);
              if ((v74 & 7) != 0)
              {
                v41 = (unsigned int *)(v74 & 0xFFFFFFFFFFFFFFF8);
                do
                  v42 = __ldxr(v41);
                while (__stlxr(v42 - 2, v41));
              }
              pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v73);
              sub_20BFD265C(&v72);
              if (v71)
                sub_20C35C614(v71);
              a6 = (pxrInternal__aapl__pxrReserved__::GfBBox3d *)((char *)a6 + 312);
              ++a3;
            }
            while (a3 != v26);
          }
          v43 = v76;
          if (v76)
          {
            v44 = (unsigned int *)(v76 + 8);
            do
            {
              v45 = __ldxr(v44);
              v46 = v45 - 1;
            }
            while (__stlxr(v46, v44));
            if (!v46)
              (*(void (**)(uint64_t))(*(_QWORD *)v43 + 8))(v43);
          }
        }
        else
        {
          *(_QWORD *)&__src[0] = "usdGeom/bboxCache.cpp";
          *((_QWORD *)&__src[0] + 1) = "_ComputePointInstanceBoundsHelper";
          *(_QWORD *)&__src[1] = 586;
          *((_QWORD *)&__src[1] + 1) = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ComputePointInstanceBou"
                                       "ndsHelper(const UsdGeomPointInstancer &, const int64_t *, size_t, const GfMatrix4"
                                       "d &, GfBBox3d *)";
          LOBYTE(__src[2]) = 0;
          sub_20C35C4F8((uint64_t)&v66, (uint64_t *)a2 + 1, (_DWORD *)a2 + 4);
          sub_20C348EEC((uint64_t)&v66, &v69);
          v55 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v69);
          pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)__src, (pxrInternal__aapl__pxrReserved__ *)"%s -- could not compute instance transforms", v56, v55);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v70);
          sub_20BFD265C(&v69);
          if ((BYTE8(v67[0]) & 7) != 0)
          {
            v57 = (unsigned int *)(*((_QWORD *)&v67[0] + 1) & 0xFFFFFFFFFFFFFFF8);
            do
              v58 = __ldxr(v57);
            while (__stlxr(v58 - 2, v57));
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v67 + 1);
          sub_20BFD265C(v67);
          if (*((_QWORD *)&v66 + 1))
            sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v66 + 1));
        }
        sub_20BF5618C((uint64_t)v77);
LABEL_53:
        *(_QWORD *)&__src[0] = &v79;
        sub_20BFD6F90((void ***)__src);
        if ((v86 & 7) != 0)
        {
          v59 = (unsigned int *)(v86 & 0xFFFFFFFFFFFFFFF8);
          do
            v60 = __ldxr(v59);
          while (__stlxr(v60 - 2, v59));
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v85);
        sub_20BFD265C(&v84);
        if (v83)
          sub_20C35C614(v83);
        goto LABEL_58;
      }
      v19 = v88;
      v20 = 4 * *(_QWORD *)&v87[0];
      while (1)
      {
        v21 = *v19;
        if ((v21 & 0x80000000) != 0 || (v80 - v79) >> 3 <= v21)
          break;
        ++v19;
        v20 -= 4;
        if (!v20)
          goto LABEL_16;
      }
      *(_QWORD *)&__src[0] = "usdGeom/bboxCache.cpp";
      *((_QWORD *)&__src[0] + 1) = "_ComputePointInstanceBoundsHelper";
      *(_QWORD *)&__src[1] = 567;
      *((_QWORD *)&__src[1] + 1) = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ComputePointInstanceBoundsH"
                                   "elper(const UsdGeomPointInstancer &, const int64_t *, size_t, const GfMatrix4d &, GfBBox3d *)";
      LOBYTE(__src[2]) = 0;
      sub_20C35C4F8((uint64_t)&v66, (uint64_t *)a2 + 1, (_DWORD *)a2 + 4);
      sub_20C348EEC((uint64_t)&v66, (int *)v77);
      v62 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)v77);
      pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)__src, (pxrInternal__aapl__pxrReserved__ *)"%s -- invalid prototype index: %d. Should be in [0, %zu)", v63, v62, v21, (v80 - v79) >> 3);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v77 + 1);
      sub_20BFD265C(v77);
      if ((BYTE8(v67[0]) & 7) != 0)
      {
        v64 = (unsigned int *)(*((_QWORD *)&v67[0] + 1) & 0xFFFFFFFFFFFFFFF8);
        do
          v65 = __ldxr(v64);
        while (__stlxr(v65 - 2, v64));
      }
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v67 + 1);
    sub_20BFD265C(v67);
    if (*((_QWORD *)&v66 + 1))
      sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v66 + 1));
    v22 = 0;
    goto LABEL_53;
  }
  *(_QWORD *)&__src[0] = "usdGeom/bboxCache.cpp";
  *((_QWORD *)&__src[0] + 1) = "_ComputePointInstanceBoundsHelper";
  *(_QWORD *)&__src[1] = 548;
  *((_QWORD *)&__src[1] + 1) = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ComputePointInstanceBoundsHelpe"
                               "r(const UsdGeomPointInstancer &, const int64_t *, size_t, const GfMatrix4d &, GfBBox3d *)";
  LOBYTE(__src[2]) = 0;
  sub_20C35C4F8((uint64_t)&v66, (uint64_t *)a2 + 1, (_DWORD *)a2 + 4);
  sub_20C348EEC((uint64_t)&v66, (int *)v77);
  v47 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)v77);
  pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)__src, (pxrInternal__aapl__pxrReserved__ *)"%s -- no prototype indices", v48, v47);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v77 + 1);
  sub_20BFD265C(v77);
  if ((BYTE8(v67[0]) & 7) != 0)
  {
    v49 = (unsigned int *)(*((_QWORD *)&v67[0] + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v50 = __ldxr(v49);
    while (__stlxr(v50 - 2, v49));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v67 + 1);
  sub_20BFD265C(v67);
  if (*((_QWORD *)&v66 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v66 + 1));
  v22 = 0;
LABEL_58:
  sub_20BF5618C((uint64_t)v87);
  return v22;
}

void sub_20C53F018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13)
{
  uint64_t v13;

  sub_20C35C2E0((uint64_t)&a13);
  a13 = (void **)(v13 - 200);
  sub_20BFD6F90(&a13);
  sub_20C377F1C(v13 - 176);
  sub_20BF5618C(v13 - 144);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputePointInstanceWorldBounds(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *this, const pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *a2, const uint64_t *a3, uint64_t a4, pxrInternal__aapl__pxrReserved__::GfBBox3d *a5)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *v10;
  _BOOL8 v11;
  unsigned int *v12;
  unsigned int v13;
  uint64_t v15;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v16;
  int v17;
  int v18;
  uint64_t v19;
  _BYTE v20[128];

  v10 = (pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)((char *)this + 384);
  sub_20C35C4F8((uint64_t)&v15, (uint64_t *)a2 + 1, (_DWORD *)a2 + 4);
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalToWorldTransform(v10, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v15, (uint64_t)v20);
  v11 = pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ComputePointInstanceBoundsHelper(this, a2, a3, a4, (const pxrInternal__aapl__pxrReserved__::GfMatrix4d *)v20, a5);
  if ((v19 & 7) != 0)
  {
    v12 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stlxr(v13 - 2, v12));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v18);
  sub_20BFD265C(&v17);
  if (v16)
    sub_20C35C614(v16);
  return v11;
}

void sub_20C53F248(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputePointInstanceRelativeBounds(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *this, const pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *a2, const uint64_t *a3, uint64_t a4, const pxrInternal__aapl__pxrReserved__::UsdPrim *a5, pxrInternal__aapl__pxrReserved__::GfBBox3d *a6)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *v12;
  unsigned int *v13;
  unsigned int v14;
  _OWORD v16[8];
  _OWORD v17[8];
  __int128 v18;
  _OWORD v19[7];
  _OWORD v20[8];

  v12 = (pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)((char *)this + 384);
  memset(v20, 0, sizeof(v20));
  sub_20C35C4F8((uint64_t)&v18, (uint64_t *)a2 + 1, (_DWORD *)a2 + 4);
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalToWorldTransform(v12, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v18, (uint64_t)v20);
  if ((BYTE8(v19[0]) & 7) != 0)
  {
    v13 = (unsigned int *)(*((_QWORD *)&v19[0] + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v19 + 1);
  sub_20BFD265C(v19);
  if (*((_QWORD *)&v18 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v18 + 1));
  v18 = 0u;
  memset(v19, 0, sizeof(v19));
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalToWorldTransform(v12, a5, (uint64_t)&v18);
  pxrInternal__aapl__pxrReserved__::GfMatrix4d::GetInverse((double *)&v18, 0, 0.0, (uint64_t)v16);
  v17[4] = v16[4];
  v17[5] = v16[5];
  v17[6] = v16[6];
  v17[7] = v16[7];
  v17[0] = v16[0];
  v17[1] = v16[1];
  v17[2] = v16[2];
  v17[3] = v16[3];
  pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)v17, (double *)v20);
  return pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ComputePointInstanceBoundsHelper(this, a2, a3, a4, (const pxrInternal__aapl__pxrReserved__::GfMatrix4d *)v17, a6);
}

void sub_20C53F3B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  sub_20C35C2E0((uint64_t)&a41);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputePointInstanceLocalBounds(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *this, const pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *a2, const uint64_t *a3, uint64_t a4, pxrInternal__aapl__pxrReserved__::GfBBox3d *a5)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *v10;
  _BOOL8 v11;
  unsigned int *v12;
  unsigned int v13;
  _BYTE v15[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v16;
  int v17;
  int v18;
  uint64_t v19;
  _OWORD v20[8];
  BOOL v21;

  v21 = 0;
  v10 = (pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)((char *)this + 384);
  sub_20C35C4F8((uint64_t)v15, (uint64_t *)a2 + 1, (_DWORD *)a2 + 4);
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalTransformation(v10, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v15, &v21, v20);
  v11 = pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ComputePointInstanceBoundsHelper(this, a2, a3, a4, (const pxrInternal__aapl__pxrReserved__::GfMatrix4d *)v20, a5);
  if ((v19 & 7) != 0)
  {
    v12 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stlxr(v13 - 2, v12));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v18);
  sub_20BFD265C(&v17);
  if (v16)
    sub_20C35C614(v16);
  return v11;
}

void sub_20C53F49C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputePointInstanceUntransformedBounds(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *this, const pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *a2, const uint64_t *a3, uint64_t a4, pxrInternal__aapl__pxrReserved__::GfBBox3d *a5)
{
  _BYTE v11[128];

  pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)v11, 1.0);
  return pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ComputePointInstanceBoundsHelper(this, a2, a3, a4, (const pxrInternal__aapl__pxrReserved__::GfMatrix4d *)v11, a5);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::Clear(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *this)
{
  const char *v2;
  char *v3;

  if (sub_20C53F55C(1))
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[BBox Cache] CLEARED\n", v2, v3);
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::Clear((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)((char *)this + 384));
  sub_20C549BD8((uint64_t)this + 432);
}

BOOL sub_20C53F55C(int a1)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_20C536C44();
  v3 = atomic_load((unsigned int *)(v2 + 4 * a1));
  if (!v3)
  {
    v5 = v2;
    v6 = sub_20C536C44();
    pxrInternal__aapl__pxrReserved__::TfDebug::_InitializeNode((void *)(v6 + 4 * a1), off_24C53C280[a1]);
    v3 = atomic_load((unsigned int *)(v5 + 4 * a1));
  }
  return v3 == 2;
}

uint64_t **pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::SetIncludedPurposes(uint64_t a1, uint64_t **a2)
{
  uint64_t **result;

  result = (uint64_t **)(a1 + 360);
  if (result != a2)
    return (uint64_t **)sub_20C106430(result, *a2, a2[1], a2[1] - *a2);
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::SetTime(uint64_t result, double a2)
{
  uint64_t v3;
  const char *v4;
  char *v5;
  uint64_t *i;
  _QWORD *v7;
  const char *v8;
  char *v9;
  void **v10;
  double v11;
  void *__p[2];
  char v13;
  double v14;

  v3 = result;
  v14 = a2;
  if (a2 != *(double *)(result + 336))
  {
    if (sub_20C53F55C(1))
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[BBox Cache] Setting time: %f  clearUnvarying: %s\n", v4, v5, *(_QWORD *)&a2, "false");
    for (i = *(uint64_t **)(v3 + 448); i; i = (uint64_t *)*i)
    {
      if (*((_BYTE *)i + 113))
      {
        v7 = (_QWORD *)i[8];
        *((_BYTE *)i + 112) = 0;
        sub_20BF2B200((uint64_t)(i + 7), v7);
        i[7] = (uint64_t)(i + 8);
        i[8] = 0;
        i[9] = 0;
        if (sub_20C53F55C(1))
        {
          pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext::ToString((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext *)(i + 2), (uint64_t)__p);
          if (v13 >= 0)
            v10 = __p;
          else
            v10 = (void **)__p[0];
          pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[BBox Cache] invalidating %s for time change\n", v8, v9, v10);
          if (v13 < 0)
            operator delete(__p[0]);
        }
      }
    }
    v11 = v14;
    *(double *)(v3 + 336) = v14;
    return pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::SetTime(v3 + 384, (uint64_t)v4, v5, v11);
  }
  return result;
}

void sub_20C53F764(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_DWORD *pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext::ToString@<X0>(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext *this@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  const char *v5;
  uint64_t *String;
  __int128 v7;
  const char *Text;
  const char *v9;
  char *v10;
  int v12;
  int v13;

  v3 = *((_QWORD *)this + 4);
  if (v3)
  {
    v4 = v3 & 0xFFFFFFFFFFFFFFF8;
    if (v4)
    {
      v5 = (const char *)(v4 + 16);
      if (*(char *)(v4 + 39) < 0)
        v5 = *(const char **)v5;
    }
    else
    {
      v5 = "";
    }
    sub_20C348EEC((uint64_t)this, &v12);
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v12);
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"[%s]%s", v9, v10, v5, Text);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  }
  else
  {
    sub_20C348EEC((uint64_t)this, &v12);
    String = pxrInternal__aapl__pxrReserved__::SdfPath::GetString((pxrInternal__aapl__pxrReserved__::SdfPath *)&v12);
    if (*((char *)String + 23) < 0)
    {
      sub_20BDDBFAC((_BYTE *)a2, (void *)*String, String[1]);
    }
    else
    {
      v7 = *(_OWORD *)String;
      *(_QWORD *)(a2 + 16) = String[2];
      *(_OWORD *)a2 = v7;
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  }
  return sub_20BFD265C(&v12);
}

void sub_20C53F854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ShouldIncludePrim(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *this, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2)
{
  uint64_t *StaticTfType;
  const pxrInternal__aapl__pxrReserved__::TfType *v5;
  uint64_t *SchemaInfo;
  char *v7;
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable *IsA;
  uint64_t *v9;
  const pxrInternal__aapl__pxrReserved__::TfType *v10;
  uint64_t *v11;
  char *v12;
  int v13;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  unint64_t v19;
  unint64_t v20;
  const char *v21;
  const char *v22;
  char *v23;
  void *p_p;
  unint64_t v25;
  const char *v26;
  _BOOL8 result;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v28;
  char *v29;
  const char *Text;
  uint64_t v31;
  unint64_t v32;
  const char *v33;
  unsigned int *v34;
  unsigned int v35;
  char v36;
  unsigned int *v37;
  unsigned int v38;
  int v39;
  void *__p;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[3];

  StaticTfType = pxrInternal__aapl__pxrReserved__::UsdTyped::_GetStaticTfType(this);
  SchemaInfo = pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry::FindSchemaInfo((pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry *)StaticTfType, v5);
  IsA = (pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)pxrInternal__aapl__pxrReserved__::UsdPrim::_IsA((uint64_t)a2, SchemaInfo, v7);
  if ((_DWORD)IsA)
  {
    v9 = pxrInternal__aapl__pxrReserved__::UsdGeomImageable::_GetStaticTfType(IsA);
    v11 = pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry::FindSchemaInfo((pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry *)v9, v10);
    if ((pxrInternal__aapl__pxrReserved__::UsdPrim::_IsA((uint64_t)a2, v11, v12) & 1) == 0)
    {
      result = sub_20C53F55C(1);
      if (!(_DWORD)result)
        return result;
      sub_20C348EEC((uint64_t)a2, (int *)&__p);
      Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&__p);
      v31 = *((_QWORD *)a2 + 1);
      if (!v31 || (*(_BYTE *)(v31 + 57) & 8) != 0)
        pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError((pxrInternal__aapl__pxrReserved__ *)v31, v28);
      v32 = **(_QWORD **)(v31 + 24) & 0xFFFFFFFFFFFFFFF8;
      if (v32)
      {
        v33 = (const char *)(v32 + 16);
        if (*(char *)(v32 + 39) < 0)
          v33 = *(const char **)v33;
      }
      else
      {
        v33 = "";
      }
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[BBox Cache] excluded, not IMAGEABLE type. prim: %s, primType: %s\n", (const char *)v28, v29, Text, v33);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&__p + 1);
      sub_20BFD265C(&__p);
      return 0;
    }
    if (!*((_BYTE *)this + 473))
    {
      pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v46, a2);
      v45 = 0;
      v46[0] = off_24C53C788;
      pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetVisibilityAttr((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)v46, (uint64_t)&__p);
      pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::TfToken>((uint64_t)&__p, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v45);
      if (v13)
      {
        v14 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
        if (!v14)
          v14 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
        v15 = v45;
        v16 = *((_QWORD *)v14 + 62);
        if ((v44 & 7) != 0)
        {
          v17 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
          do
            v18 = __ldxr(v17);
          while (__stlxr(v18 - 2, v17));
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
        v19 = v15 & 0xFFFFFFFFFFFFFFF8;
        v20 = v16 & 0xFFFFFFFFFFFFFFF8;
        sub_20BFD265C(&v42);
        if (v41)
          sub_20C35C614(v41);
        if (v19 == v20)
        {
          if (sub_20C53F55C(1))
          {
            sub_20C348EEC((uint64_t)a2, &v39);
            v21 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v39);
            sub_20C53FBD0((double *)this + 42);
            if (v43 >= 0)
              p_p = &__p;
            else
              p_p = __p;
            v25 = v45 & 0xFFFFFFFFFFFFFFF8;
            if ((v45 & 0xFFFFFFFFFFFFFFF8) != 0)
            {
              v26 = (const char *)(v25 + 16);
              if (*(char *)(v25 + 39) < 0)
                v26 = *(const char **)v26;
            }
            else
            {
              v26 = "";
            }
            pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[BBox Cache] excluded for VISIBILITY. prim: %s visibility at time %s: %s\n", v22, v23, v21, p_p, v26);
            if (SHIBYTE(v43) < 0)
              operator delete(__p);
            sub_20BFD1A18(&v39);
          }
          v36 = 0;
LABEL_35:
          if ((v45 & 7) != 0)
          {
            v37 = (unsigned int *)(v45 & 0xFFFFFFFFFFFFFFF8);
            do
              v38 = __ldxr(v37);
            while (__stlxr(v38 - 2, v37));
          }
          pxrInternal__aapl__pxrReserved__::UsdGeomImageable::~UsdGeomImageable((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)v46);
          return (v36 & 1) != 0;
        }
      }
      else
      {
        if ((v44 & 7) != 0)
        {
          v34 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
          do
            v35 = __ldxr(v34);
          while (__stlxr(v35 - 2, v34));
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
        sub_20BFD265C(&v42);
        if (v41)
          sub_20C35C614(v41);
      }
      v36 = 1;
      goto LABEL_35;
    }
  }
  return 1;
}

void sub_20C53FB3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,char a21)
{
  unsigned int *v22;
  unsigned int v23;

  if (a18 < 0)
    operator delete(__p);
  sub_20BFD1A18(&a12);
  if ((a20 & 7) != 0)
  {
    v22 = (unsigned int *)(a20 & 0xFFFFFFFFFFFFFFF8);
    do
      v23 = __ldxr(v22);
    while (__stlxr(v23 - 2, v22));
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::~UsdGeomImageable((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)&a21);
  _Unwind_Resume(a1);
}

uint64_t sub_20C53FBD0(double *a1)
{
  _QWORD v3[11];
  char v4;
  uint64_t v5;

  sub_20BDDE5E0((uint64_t)v3);
  pxrInternal__aapl__pxrReserved__::operator<<(v3, a1);
  std::stringbuf::str();
  v3[0] = *MEMORY[0x24BEDB800];
  *(_QWORD *)((char *)v3 + *(_QWORD *)(v3[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB800] + 24);
  v3[1] = MEMORY[0x24BEDB848] + 16;
  if (v4 < 0)
    operator delete((void *)v3[9]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x212B92EB0](&v5);
}

void sub_20C53FC84(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BDDE6CC((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_IsVarying(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *this, const pxrInternal__aapl__pxrReserved__::UsdAttribute *a2)
{
  double v3;
  BOOL v4;
  _BOOL8 result;
  BOOL v6;
  double v7;
  double v8;

  v3 = *((double *)this + 42);
  v7 = 0.0;
  v8 = 0.0;
  v6 = 0;
  v4 = !pxrInternal__aapl__pxrReserved__::UsdAttribute::GetBracketingTimeSamples(a2, v3 + 0.000001, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v8, &v7, &v6)|| !v6;
  result = 0;
  if (!v4)
  {
    if (v8 != v7)
      return 1;
    pxrInternal__aapl__pxrReserved__::UsdAttribute::GetBracketingTimeSamples(a2, v8 + 0.000001, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v8, &v7, &v6);
    if (v8 != v7)
      return 1;
    pxrInternal__aapl__pxrReserved__::UsdAttribute::GetBracketingTimeSamples(a2, v8 + -0.000001, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v8, &v7, &v6);
    if (v8 != v7)
      return 1;
  }
  return result;
}

BOOL pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_IsVarying(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *this, const pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *a2)
{
  double v3;
  BOOL v4;
  _BOOL8 result;
  BOOL v6;
  double v7;
  double v8;

  v3 = *((double *)this + 42);
  v7 = 0.0;
  v8 = 0.0;
  v6 = 0;
  v4 = !pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::GetBracketingTimeSamples(a2, v3 + 0.000001, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v8, &v7, &v6)|| !v6;
  result = 0;
  if (!v4)
  {
    if (v8 != v7)
      return 1;
    pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::GetBracketingTimeSamples(a2, v8 + 0.000001, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v8, &v7, &v6);
    if (v8 != v7)
      return 1;
    pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::GetBracketingTimeSamples(a2, v8 + -0.000001, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v8, &v7, &v6);
    if (v8 != v7)
      return 1;
  }
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ShouldPruneChildren(pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *a1, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2, uint64_t a3)
{
  uint64_t *StaticTfType;
  const pxrInternal__aapl__pxrReserved__::TfType *v6;
  uint64_t *SchemaInfo;
  char *v8;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v9;
  _BOOL8 v10;
  pxrInternal__aapl__pxrReserved__::SdfPath *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v16;
  int v17;
  unsigned int *v18;
  unsigned int v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _BYTE v23[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v24;
  int v25;
  int v26;
  uint64_t v27;

  if (*(_BYTE *)(a3 + 56))
    return 1;
  StaticTfType = pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::_GetStaticTfType(a1);
  SchemaInfo = pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry::FindSchemaInfo((pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry *)StaticTfType, v6);
  if ((pxrInternal__aapl__pxrReserved__::UsdPrim::_IsA((uint64_t)a2, SchemaInfo, v8) & 1) != 0)
    return 1;
  if (!*((_BYTE *)a1 + 472))
    return 0;
  if (!sub_20C544B9C((uint64_t)a2, v9))
    return 0;
  sub_20C348EEC((uint64_t)a2, (int *)&v20);
  v13 = (uint64_t *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v12);
  v14 = v20;
  v15 = *v13;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v20 + 1);
  sub_20BFD265C(&v20);
  if (v14 == v15)
    return 0;
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v20, a2);
  *((_QWORD *)&v21 + 1) = 0;
  *(_QWORD *)&v20 = off_24C53C890;
  pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetExtentsHintAttr((pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *)&v20, (uint64_t)v23);
  pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::~UsdGeomModelAPI((pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *)&v20);
  v22 = 0;
  v20 = 0u;
  v21 = 0u;
  v10 = pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)v23, v16)&& (pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::GfVec3f>>((uint64_t)v23, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v20), v17)&& (unint64_t)v20 > 1;
  sub_20BF5618C((uint64_t)&v20);
  if ((v27 & 7) != 0)
  {
    v18 = (unsigned int *)(v27 & 0xFFFFFFFFFFFFFFF8);
    do
      v19 = __ldxr(v18);
    while (__stlxr(v19 - 2, v18));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v26);
  sub_20BFD265C(&v25);
  if (v24)
    sub_20C35C614(v24);
  return v10;
}

void sub_20C53FFD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::~UsdGeomModelAPI((pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *)&a9);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_FindOrCreateEntriesForPrim(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6;
  _QWORD *v7;
  int v8;
  _BOOL4 v9;
  void **v10;
  const char *v11;
  char *v12;
  void **v13;
  const char *v14;
  char *v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t *v21;
  BOOL v22;
  unsigned int *v23;
  unsigned int v24;
  _QWORD *v25;
  int ShouldPruneChildren;
  unsigned int *v27;
  unsigned int v28;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v29;
  pxrInternal__aapl__pxrReserved__ *v30;
  uint64_t v31;
  unsigned int *v32;
  unsigned int v33;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v34;
  unsigned int *v35;
  unsigned int v36;
  uint64_t *v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  unsigned int *v42;
  unsigned int v43;
  unsigned int *v44;
  unsigned int v45;
  unsigned int *v46;
  unsigned int v47;
  unsigned int *v48;
  unsigned int v49;
  unsigned int *v50;
  unsigned int v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  pxrInternal__aapl__pxrReserved__ *v56[2];
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  void *__p[2];
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  int v69;
  char v70;
  char v71;
  void *v72[2];
  __int128 v73;
  int v74;
  void *v75[2];
  int v76;
  int v77;

  v6 = (uint64_t)a1 + 432;
  v75[0] = a2;
  v7 = sub_20C544BD4((uint64_t)a1 + 432, (uint64_t)a2, (uint64_t)&unk_20CAC184C, (uint64_t *)v75);
  v54 = (uint64_t)(v7 + 7);
  v8 = *((unsigned __int8 *)v7 + 112);
  v9 = sub_20C53F55C(1);
  if (v8)
  {
    if (v9)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext::ToString((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext *)a2, (uint64_t)v72);
      if ((SBYTE7(v73) & 0x80u) == 0)
        v10 = v72;
      else
        v10 = (void **)v72[0];
      pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_GetCombinedBBoxForIncludedPurposes((uint64_t)a1, v54, (pxrInternal__aapl__pxrReserved__::GfBBox3d *)v75);
      sub_20C54077C((uint64_t)v75);
      if (v64 >= 0)
        v13 = __p;
      else
        v13 = (void **)__p[0];
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[BBox Cache] hit: %s %s\n", v11, v12, v10, v13);
      if (SHIBYTE(v64) < 0)
        operator delete(__p[0]);
      if (SBYTE7(v73) < 0)
        operator delete(v72[0]);
    }
  }
  else
  {
    if (v9)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext::ToString((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext *)a2, (uint64_t)v75);
      v16 = v77 >= 0 ? v75 : (void **)v75[0];
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[BBox Cache] miss: %s\n", v14, v15, v16);
      if (SHIBYTE(v77) < 0)
        operator delete(v75[0]);
    }
    *((_BYTE *)v7 + 114) = pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ShouldIncludePrim(a1, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)a2);
    *(_OWORD *)v72 = 0u;
    v73 = 0u;
    v74 = 1065353216;
    __p[0] = 0;
    __p[1] = 0;
    LOBYTE(v64) = 0;
    v17 = sub_20C3C103C((uint64_t)__p, 0);
    *(_OWORD *)v56 = *(_OWORD *)v17;
    v57 = *(_QWORD *)(v17 + 16);
    *(_OWORD *)__p = *(_OWORD *)v56;
    LOBYTE(v64) = v57;
    v18 = sub_20C3C103C((uint64_t)__p, 6);
    v60 = *(_OWORD *)v18;
    v61 = *(_QWORD *)(v18 + 16);
    *(_OWORD *)__p = v60;
    LOBYTE(v64) = v61;
    v19 = sub_20C3C103C((uint64_t)__p, 0x100000005);
    v20 = *(_OWORD *)v19;
    v68 = *(_QWORD *)(v19 + 16);
    v67 = v20;
    sub_20C37F5FC((uint64_t)v75, (uint64_t)a2, &v67);
    v55 = a3;
    sub_20C37ECB8((uint64_t *)v75, (uint64_t)&v67);
    v21 = a2 + 4;
    v53 = (uint64_t)(a3 + 2);
    while (1)
    {
      __p[0] = v75[1];
      __p[1] = v75;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v64);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v64 + 1);
      LODWORD(v65) = 0;
      WORD2(v65) = 0;
      if (v67 == *(_OWORD *)__p)
      {
        v22 = 1;
        if (v68 == v64 && !v69 && !v70)
          v22 = v71 != 0;
      }
      else
      {
        v22 = 1;
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v64 + 1);
      sub_20BFD265C(&v64);
      if (!v22)
        break;
      sub_20C37ED84((uint64_t)&v67, (uint64_t)v56);
      sub_20C54519C((uint64_t)__p, (uint64_t)v56, v21);
      if ((v58 & 7) != 0)
      {
        v23 = (unsigned int *)(v58 & 0xFFFFFFFFFFFFFFF8);
        do
          v24 = __ldxr(v23);
        while (__stlxr(v24 - 2, v23));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v57 + 1);
      sub_20BFD265C(&v57);
      if (v56[1])
        sub_20C35C614(v56[1]);
      v56[0] = (pxrInternal__aapl__pxrReserved__ *)__p;
      v25 = sub_20C544BD4(v6, (uint64_t)__p, (uint64_t)&unk_20CAC184C, (uint64_t *)v56);
      sub_20C37ED84((uint64_t)&v67, (uint64_t)v56);
      ShouldPruneChildren = pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ShouldPruneChildren(a1, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v56, (uint64_t)(v25 + 7));
      if ((v58 & 7) != 0)
      {
        v27 = (unsigned int *)(v58 & 0xFFFFFFFFFFFFFFF8);
        do
          v28 = __ldxr(v27);
        while (__stlxr(v28 - 2, v27));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v57 + 1);
      sub_20BFD265C(&v57);
      if (v56[1])
        sub_20C35C614(v56[1]);
      if (ShouldPruneChildren)
      {
        pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator::PruneChildren((pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator *)&v67);
      }
      else
      {
        sub_20C37EEF4((uint64_t)&v67, (uint64_t)v56);
        v30 = v56[1];
        if (!v56[1] || (v31 = *((_QWORD *)v56[1] + 7), (v31 & 0x800) != 0))
        {
          pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(v56[1], v29);
          v31 = *((_QWORD *)v30 + 7);
        }
        if ((v58 & 7) != 0)
        {
          v32 = (unsigned int *)(v58 & 0xFFFFFFFFFFFFFFF8);
          do
            v33 = __ldxr(v32);
          while (__stlxr(v33 - 2, v32));
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v57 + 1);
        sub_20BFD265C(&v57);
        if (v56[1])
          sub_20C35C614(v56[1]);
        if ((v31 & 0x100) != 0)
        {
          sub_20C37EEF4((uint64_t)&v67, (uint64_t)v56);
          pxrInternal__aapl__pxrReserved__::UsdPrim::GetPrototype((pxrInternal__aapl__pxrReserved__::UsdPrim *)v56, v34, (uint64_t)&v60);
          if ((v58 & 7) != 0)
          {
            v35 = (unsigned int *)(v58 & 0xFFFFFFFFFFFFFFF8);
            do
              v36 = __ldxr(v35);
            while (__stlxr(v36 - 2, v35));
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v57 + 1);
          sub_20BFD265C(&v57);
          if (v56[1])
            sub_20C35C614(v56[1]);
          sub_20C540844((uint64_t)a1, (uint64_t)(v25 + 7), (uint64_t *)__p);
          v37 = (uint64_t *)sub_20C540D04((uint64_t)(v25 + 12));
          sub_20C54519C((uint64_t)v56, (uint64_t)&v60, v37);
          sub_20C54B60C((uint64_t)v72, (uint64_t)v56, (uint64_t)v56);
          if ((v38 & 1) != 0)
          {
            v39 = v55[1];
            if (v39 >= v55[2])
            {
              v40 = sub_20C548498(v55, (uint64_t)v56);
              v41 = v55;
            }
            else
            {
              sub_20C546560(v53, v55[1], (uint64_t)v56);
              v40 = v39 + 40;
              v41 = v55;
              v55[1] = v39 + 40;
            }
            v41[1] = v40;
          }
          pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator::PruneChildren((pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator *)&v67);
          if ((v59 & 7) != 0)
          {
            v42 = (unsigned int *)(v59 & 0xFFFFFFFFFFFFFFF8);
            do
              v43 = __ldxr(v42);
            while (__stlxr(v43 - 2, v42));
          }
          if ((v58 & 7) != 0)
          {
            v44 = (unsigned int *)(v58 & 0xFFFFFFFFFFFFFFF8);
            do
              v45 = __ldxr(v44);
            while (__stlxr(v45 - 2, v44));
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v57 + 1);
          sub_20BFD265C(&v57);
          if (v56[1])
            sub_20C35C614(v56[1]);
          if ((v62 & 7) != 0)
          {
            v46 = (unsigned int *)(v62 & 0xFFFFFFFFFFFFFFF8);
            do
              v47 = __ldxr(v46);
            while (__stlxr(v47 - 2, v46));
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v61 + 1);
          sub_20BFD265C(&v61);
          if (*((_QWORD *)&v60 + 1))
            sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v60 + 1));
        }
      }
      if ((v66 & 7) != 0)
      {
        v48 = (unsigned int *)(v66 & 0xFFFFFFFFFFFFFFF8);
        do
          v49 = __ldxr(v48);
        while (__stlxr(v49 - 2, v48));
      }
      if ((v65 & 7) != 0)
      {
        v50 = (unsigned int *)(v65 & 0xFFFFFFFFFFFFFFF8);
        do
          v51 = __ldxr(v50);
        while (__stlxr(v51 - 2, v50));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v64 + 1);
      sub_20BFD265C(&v64);
      if (__p[1])
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)__p[1]);
      pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator::increment((uint64_t)&v67);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v68 + 1);
    sub_20BFD265C(&v68);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v77);
    sub_20BFD265C(&v76);
    sub_20C545274((uint64_t)v72);
  }
  return v54;
}

void sub_20C540654(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,void *__p,uint64_t a52,int a53,__int16 a54,char a55,char a56)
{
  if (a56 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C54077C(uint64_t a1)
{
  _QWORD v3[11];
  char v4;
  uint64_t v5;

  sub_20BDDE5E0((uint64_t)v3);
  pxrInternal__aapl__pxrReserved__::operator<<(v3, a1);
  std::stringbuf::str();
  v3[0] = *MEMORY[0x24BEDB800];
  *(_QWORD *)((char *)v3 + *(_QWORD *)(v3[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB800] + 24);
  v3[1] = MEMORY[0x24BEDB848] + 16;
  if (v4 < 0)
    operator delete((void *)v3[9]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x212B92EB0](&v5);
}

void sub_20C540830(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BDDE6CC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20C540844(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;
  unsigned int v11;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v12;
  pxrInternal__aapl__pxrReserved__::SdfPath *v13;
  void **v14;
  void *v15;
  void *v16;
  const char *v17;
  char *v18;
  void **v19;
  unsigned int *v20;
  unsigned int v21;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  unsigned int *v26;
  unsigned int v27;
  unint64_t v28;
  unsigned int *v29;
  unsigned int v30;
  unsigned int *v31;
  unsigned int v32;
  _QWORD *v33;
  _QWORD *v34;
  unsigned int *v35;
  unsigned int v36;
  unsigned int *v37;
  unsigned int v38;
  unsigned int *v39;
  unsigned int v40;
  uint64_t v41;
  unsigned int *v42;
  unsigned int v43;
  unsigned int *v44;
  unsigned int v45;
  unsigned int *v46;
  unsigned int v47;
  unsigned int *v48;
  unsigned int v49;
  uint64_t v50;
  char v51;
  void *__p;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v59;
  int v60;
  int v61;
  uint64_t v62;
  _QWORD v63[3];

  v3 = (uint64_t *)(a2 + 40);
  if (*(_QWORD *)(a2 + 40))
    return;
  if (sub_20C3AD308((uint64_t)a3, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2))
  {
    v7 = a3[4];
    if (v7)
    {
      if ((v7 & 7) != 0)
      {
        v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
        do
          v9 = __ldxr(v8);
        while (__stxr(v9 + 2, v8));
        if ((v9 & 1) == 0)
          v7 &= 0xFFFFFFFFFFFFFFF8;
      }
      if ((*v3 & 7) != 0)
      {
        v10 = (unsigned int *)(*v3 & 0xFFFFFFFFFFFFFFF8);
        do
          v11 = __ldxr(v10);
        while (__stlxr(v11 - 2, v10));
      }
      *(_QWORD *)(a2 + 40) = v7;
      *(_BYTE *)(a2 + 48) = 1;
    }
    else
    {
      v22 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v22)
        v22 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      v23 = *((_QWORD *)v22 + 29);
      if ((v23 & 7) != 0)
      {
        v24 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
        do
          v25 = __ldxr(v24);
        while (__stxr(v25 + 2, v24));
        if ((v25 & 1) == 0)
          v23 &= 0xFFFFFFFFFFFFFFF8;
      }
      if ((*v3 & 7) != 0)
      {
        v26 = (unsigned int *)(*v3 & 0xFFFFFFFFFFFFFFF8);
        do
          v27 = __ldxr(v26);
        while (__stlxr(v27 - 2, v26));
      }
      *(_QWORD *)(a2 + 40) = v23;
      *(_BYTE *)(a2 + 48) = 0;
    }
    return;
  }
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v63, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)a3);
  v63[0] = off_24C53C788;
  sub_20C3AD22C((uint64_t)a3, (uint64_t)v58);
  if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)v58, v12))
  {
    sub_20C348EEC((uint64_t)v58, (int *)&__p);
    v14 = (void **)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v13);
    v15 = __p;
    v16 = *v14;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&__p + 1);
    sub_20BFD265C(&__p);
    if (v15 != v16)
    {
      sub_20C54519C((uint64_t)&__p, (uint64_t)v58, a3 + 4);
      v33 = sub_20C547340((_QWORD *)(a1 + 432), (uint64_t)&__p);
      v34 = v33;
      if (v33)
      {
        sub_20C540844(a1, v33 + 7, &__p);
        pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputePurposeInfo((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)v63, v34 + 12, (uint64_t)&v50);
        if (&v50 == v3)
        {
          v41 = v50;
          *(_BYTE *)(a2 + 48) = v51;
          if ((v41 & 7) != 0)
          {
            v42 = (unsigned int *)(v41 & 0xFFFFFFFFFFFFFFF8);
            do
              v43 = __ldxr(v42);
            while (__stlxr(v43 - 2, v42));
          }
        }
        else
        {
          if ((*v3 & 7) != 0)
          {
            v35 = (unsigned int *)(*v3 & 0xFFFFFFFFFFFFFFF8);
            do
              v36 = __ldxr(v35);
            while (__stlxr(v36 - 2, v35));
          }
          *(_QWORD *)(a2 + 40) = v50;
          v50 = 0;
          *(_BYTE *)(a2 + 48) = v51;
        }
        if ((v57 & 7) != 0)
        {
          v44 = (unsigned int *)(v57 & 0xFFFFFFFFFFFFFFF8);
          do
            v45 = __ldxr(v44);
          while (__stlxr(v45 - 2, v44));
        }
        if ((v56 & 7) != 0)
        {
          v46 = (unsigned int *)(v56 & 0xFFFFFFFFFFFFFFF8);
          do
            v47 = __ldxr(v46);
          while (__stlxr(v47 - 2, v46));
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v55);
        sub_20BFD265C(&v54);
        if (v53)
          sub_20C35C614(v53);
        if ((v62 & 7) != 0)
        {
          v48 = (unsigned int *)(v62 & 0xFFFFFFFFFFFFFFF8);
          do
            v49 = __ldxr(v48);
          while (__stlxr(v49 - 2, v48));
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v61);
        goto LABEL_44;
      }
      if ((v57 & 7) != 0)
      {
        v37 = (unsigned int *)(v57 & 0xFFFFFFFFFFFFFFF8);
        do
          v38 = __ldxr(v37);
        while (__stlxr(v38 - 2, v37));
      }
      if ((v56 & 7) != 0)
      {
        v39 = (unsigned int *)(v56 & 0xFFFFFFFFFFFFFFF8);
        do
          v40 = __ldxr(v39);
        while (__stlxr(v40 - 2, v39));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v55);
      sub_20BFD265C(&v54);
      if (v53)
        sub_20C35C614(v53);
    }
  }
  if (sub_20C53F55C(1))
  {
    pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext::ToString((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext *)a3, (uint64_t)&__p);
    v19 = v55 >= 0 ? &__p : (void **)__p;
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[BBox Cache] Computing purpose without cached parent for <%s>\n", v17, v18, v19);
    if (SHIBYTE(v55) < 0)
      operator delete(__p);
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputePurposeInfo((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)v63, (uint64_t)&__p);
  if (&__p == (void **)v3)
  {
    v28 = (unint64_t)__p;
    *(_BYTE *)(a2 + 48) = (_BYTE)v53;
    if ((v28 & 7) != 0)
    {
      v29 = (unsigned int *)(v28 & 0xFFFFFFFFFFFFFFF8);
      do
        v30 = __ldxr(v29);
      while (__stlxr(v30 - 2, v29));
    }
  }
  else
  {
    if ((*v3 & 7) != 0)
    {
      v20 = (unsigned int *)(*v3 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stlxr(v21 - 2, v20));
    }
    *(_QWORD *)(a2 + 40) = __p;
    __p = 0;
    *(_BYTE *)(a2 + 48) = (_BYTE)v53;
  }
  if ((v62 & 7) != 0)
  {
    v31 = (unsigned int *)(v62 & 0xFFFFFFFFFFFFFFF8);
    do
      v32 = __ldxr(v31);
    while (__stlxr(v32 - 2, v31));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v61);
LABEL_44:
  sub_20BFD265C(&v60);
  if (v59)
    sub_20C35C614(v59);
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::~UsdGeomImageable((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)v63);
}

void sub_20C540C8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,char a21)
{
  uint64_t v21;

  sub_20C540D8C((uint64_t)&__p);
  sub_20C35C2E0((uint64_t)&a21);
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::~UsdGeomImageable((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)(v21 - 72));
  _Unwind_Resume(a1);
}

uint64_t sub_20C540D04(uint64_t a1)
{
  unsigned __int8 v2;
  _QWORD *v4;

  v2 = atomic_load((unsigned __int8 *)&qword_25473D0B0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25473D0B0))
  {
    v4 = operator new(8uLL);
    *v4 = 0;
    qword_25473D0A8 = (uint64_t)v4;
    __cxa_guard_release(&qword_25473D0B0);
  }
  if (*(_BYTE *)(a1 + 8))
    return a1;
  else
    return qword_25473D0A8;
}

void sub_20C540D74(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25473D0B0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C540D8C(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *(_QWORD *)(a1 + 24);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_20BFD265C((_DWORD *)(a1 + 16));
  v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if (v8)
    sub_20C35C614(v8);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_GetBBoxFromExtentsHint(uint64_t a1, uint64_t a2, pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *this, uint64_t a4)
{
  pxrInternal__aapl__pxrReserved__::UsdProperty *Attribute;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v9;
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable *v10;
  uint64_t *String;
  const char *v12;
  char *v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  uint64_t v17;
  char *v18;
  _QWORD *OrderedPurposeTokens;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  float32x2_t v24;
  float v25;
  uint64_t v26;
  char *v27;
  double v28;
  float64x2_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t *v32;
  _DWORD *v33;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int *v37;
  unsigned int v38;
  uint64_t *v39;
  const char *v40;
  char *v41;
  uint64_t v42;
  unsigned int *v43;
  unsigned int v44;
  _OWORD __src[20];
  _OWORD v47[2];
  uint64_t v48;
  uint64_t *v49;

  v48 = 0;
  memset(v47, 0, sizeof(v47));
  Attribute = (pxrInternal__aapl__pxrReserved__::UsdProperty *)pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::GetAttribute(this);
  if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(Attribute, v9)
    && (pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::_Get<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::GfVec3f>>((uint64_t)this, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v47, *(double *)(a1 + 336)) & 1) != 0)
  {
    v10 = (pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)sub_20C53F55C(1);
    if ((_DWORD)v10)
    {
      sub_20C35C4F8((uint64_t)__src, (uint64_t *)(a2 + 8), (_DWORD *)(a2 + 16));
      sub_20C348EEC((uint64_t)__src, (int *)&v49);
      String = pxrInternal__aapl__pxrReserved__::SdfPath::GetString((pxrInternal__aapl__pxrReserved__::SdfPath *)&v49);
      if (*((char *)String + 23) >= 0)
        v14 = (uint64_t)String;
      else
        v14 = *String;
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[BBox Cache] Found cached extentsHint for model %s.\n", v12, v13, v14);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v49 + 1);
      sub_20BFD265C(&v49);
      if ((BYTE8(__src[1]) & 7) != 0)
      {
        v15 = (unsigned int *)(*((_QWORD *)&__src[1] + 1) & 0xFFFFFFFFFFFFFFF8);
        do
          v16 = __ldxr(v15);
        while (__stlxr(v16 - 2, v15));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&__src[1] + 1);
      sub_20BFD265C(&__src[1]);
      v10 = (pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)*((_QWORD *)&__src[0] + 1);
      if (*((_QWORD *)&__src[0] + 1))
        sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&__src[0] + 1));
    }
    OrderedPurposeTokens = pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetOrderedPurposeTokens(v10);
    if (OrderedPurposeTokens[1] != *OrderedPurposeTokens)
    {
      v20 = 0;
      v21 = 0;
      v22 = 0;
      v23 = 0;
      do
      {
        v21 += 2;
        if (v21 > *(_QWORD *)&v47[0])
          break;
        sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)v47, v17, v18);
        v24 = *(float32x2_t *)(v48 + v22);
        v25 = *(float *)(v48 + v22 + 8);
        sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)v47, v26, v27);
        v28 = *(float *)(v48 + v22 + 20);
        v29 = vcvtq_f64_f32(*(float32x2_t *)(v48 + v22 + 12));
        __src[0] = vcvtq_f64_f32(v24);
        *(double *)&__src[1] = v25;
        *(float64x2_t *)((char *)&__src[1] + 8) = v29;
        *((double *)&__src[2] + 1) = v28;
        pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)&__src[3], 1.0);
        pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)&__src[11], 1.0);
        LOWORD(__src[19]) = 0;
        v49 = (uint64_t *)(*OrderedPurposeTokens + v20);
        v30 = sub_20C54BCDC(a4, v49, (uint64_t)&unk_20CAC184C, &v49);
        v22 += 24;
        v20 += 8;
        ++v23;
        memcpy(v30 + 5, __src, 0x132uLL);
      }
      while (v23 < (uint64_t)(OrderedPurposeTokens[1] - *OrderedPurposeTokens) >> 3);
    }
    v31 = 1;
  }
  else
  {
    if (sub_20C53F55C(1))
    {
      v32 = (uint64_t *)(a2 + 8);
      v33 = (_DWORD *)(a2 + 16);
      sub_20C35C4F8((uint64_t)__src, v32, v33);
      v35 = *((_QWORD *)&__src[0] + 1);
      if (!*((_QWORD *)&__src[0] + 1) || (v36 = *(_QWORD *)(*((_QWORD *)&__src[0] + 1) + 56), (v36 & 0x800) != 0))
      {
        pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(*((pxrInternal__aapl__pxrReserved__ **)&__src[0] + 1), v34);
        v36 = *(_QWORD *)(v35 + 56);
      }
      if ((BYTE8(__src[1]) & 7) != 0)
      {
        v37 = (unsigned int *)(*((_QWORD *)&__src[1] + 1) & 0xFFFFFFFFFFFFFFF8);
        do
          v38 = __ldxr(v37);
        while (__stlxr(v38 - 2, v37));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&__src[1] + 1);
      sub_20BFD265C(&__src[1]);
      if (*((_QWORD *)&__src[0] + 1))
        sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&__src[0] + 1));
      if ((v36 & 2) == 0 && sub_20C53F55C(1))
      {
        sub_20C35C4F8((uint64_t)__src, v32, v33);
        sub_20C348EEC((uint64_t)__src, (int *)&v49);
        v39 = pxrInternal__aapl__pxrReserved__::SdfPath::GetString((pxrInternal__aapl__pxrReserved__::SdfPath *)&v49);
        if (*((char *)v39 + 23) >= 0)
          v42 = (uint64_t)v39;
        else
          v42 = *v39;
        pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[BBox Cache] MISSING extentsHint for UNLOADED model %s.\n", v40, v41, v42);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v49 + 1);
        sub_20BFD265C(&v49);
        if ((BYTE8(__src[1]) & 7) != 0)
        {
          v43 = (unsigned int *)(*((_QWORD *)&__src[1] + 1) & 0xFFFFFFFFFFFFFFF8);
          do
            v44 = __ldxr(v43);
          while (__stlxr(v44 - 2, v43));
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&__src[1] + 1);
        sub_20BFD265C(&__src[1]);
        if (*((_QWORD *)&__src[0] + 1))
          sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&__src[0] + 1));
      }
    }
    v31 = 0;
  }
  sub_20BF5618C((uint64_t)v47);
  return v31;
}

void sub_20C541180(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  va_list va;

  va_start(va, a3);
  sub_20C35C2E0((uint64_t)va);
  sub_20BF5618C(v3 - 160);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ResolvePrim(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4)
{
  _QWORD *v5;
  _QWORD *v6;
  int v7;
  _BOOL4 v8;
  void **v9;
  const char *v10;
  char *v11;
  void **v12;
  const char *v13;
  char *v14;
  int8x16_t *v15;
  unint64_t *v16;
  uint64_t v17;
  char *v18;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v19;
  pxrInternal__aapl__pxrReserved__::SdfPath *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  pxrInternal__aapl__pxrReserved__::UsdAttributeQuery **v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  uint64_t v29;
  pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *v30;
  pxrInternal__aapl__pxrReserved__::UsdProperty *Attribute;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v32;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v33;
  unsigned int *v34;
  unsigned int v35;
  pxrInternal__aapl__pxrReserved__::UsdProperty *v36;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v37;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v38;
  unsigned int *v39;
  unsigned int v40;
  pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *v41;
  pxrInternal__aapl__pxrReserved__::UsdProperty *v42;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v43;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v44;
  unsigned int *v45;
  unsigned int v46;
  pxrInternal__aapl__pxrReserved__::UsdProperty *v47;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v48;
  int IsDefined;
  pxrInternal__aapl__pxrReserved__::UsdProperty *v50;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v51;
  uint64_t *v52;
  uint64_t v53;
  char *v54;
  float32x2_t v55;
  float v56;
  uint64_t v57;
  char *v58;
  double v59;
  float64x2_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v65;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  unsigned int *v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  unsigned int *v84;
  unsigned int v85;
  unsigned int *v86;
  unsigned int v87;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v88;
  unint64_t v89;
  uint64_t v90;
  unsigned int *v91;
  unsigned int v92;
  unsigned int *v93;
  unsigned int v94;
  unsigned int *v95;
  unsigned int v96;
  unsigned int *v97;
  unsigned int v98;
  unsigned int *v99;
  unsigned int v100;
  unsigned int *v101;
  unsigned int v102;
  const char *v103;
  char *v104;
  void **v105;
  char *v106;
  char v107;
  unint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  const pxrInternal__aapl__pxrReserved__::UsdPrim *v113;
  unint64_t v114;
  char v115;
  _QWORD *v116;
  _QWORD *v117;
  uint64_t v118;
  _QWORD *v119;
  _QWORD *v120;
  _QWORD *v121;
  BOOL v122;
  unint64_t *v123;
  int8x16_t v124;
  int8x16_t v125;
  int8x16_t v126;
  int8x16_t v127;
  uint64_t *v128;
  int8x16_t v129;
  float64x2_t v130;
  float64x2_t v131;
  int8x16_t v132;
  unint64_t *v133;
  unint64_t *v134;
  _QWORD *v135;
  _QWORD *v136;
  _QWORD *v137;
  unsigned int *v138;
  unsigned int v139;
  void **v140;
  const char *v141;
  char *v142;
  void **v143;
  const char *v144;
  const char *v145;
  const char *v146;
  char *v147;
  char *v148;
  int v149;
  const char *Text;
  const char *v151;
  char *v152;
  char *v153;
  int v154;
  char v155;
  double *v156;
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *v157;
  float64x2_t v159;
  uint64_t v160;
  int8x16_t v161;
  float64x2_t v163;
  int v164;
  _QWORD *v165;
  int8x16_t v167;
  int8x16_t v168;
  int8x16_t v169;
  int8x16_t v170;
  int8x16_t v171;
  int8x16_t v172;
  int8x16_t v173;
  int8x16_t v174;
  void *v175[2];
  int8x16_t v176;
  int8x16_t v177;
  int8x16_t v178;
  int8x16_t v179;
  int8x16_t v180;
  int8x16_t v181;
  int8x16_t v182;
  uint64_t v183;
  uint64_t v184;
  BOOL v185[16];
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char v189[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v190;
  int v191;
  int v192;
  uint64_t v193;
  int8x16_t v194;
  __int128 v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  int v199;
  int v200;
  int8x16_t v201;
  uint64_t v202;
  uint64_t v203;
  int v204;
  int v205;
  __int128 v206;
  uint64_t v207;
  const pxrInternal__aapl__pxrReserved__::UsdPrim *v208;
  unint64_t v209;
  unint64_t v210;
  __int128 v211[8];
  void *v212[2];
  _OWORD v213[7];
  void (**v214)(pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *__hidden);
  uint64_t v215;
  int8x16_t __p[21];

  v165 = (_QWORD *)(a1 + 432);
  v5 = sub_20C547340((_QWORD *)(a1 + 432), a3);
  v6 = v5 + 7;
  if (!v5)
    v6 = 0;
  v160 = (uint64_t)v6;
  if (!v5)
  {
    __p[0].i64[0] = (uint64_t)"usdGeom/bboxCache.cpp";
    __p[0].i64[1] = (uint64_t)"_ResolvePrim";
    __p[1].i64[0] = 1181;
    __p[1].i64[1] = (uint64_t)"void pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ResolvePrim(_BBoxTask *, const _P"
                             "rimContext &, const GfMatrix4d &)";
    __p[2].i8[0] = 0;
    if ((pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)__p, "entry != NULL", 0) & 1) == 0)
      return;
  }
  v7 = *(unsigned __int8 *)(v160 + 56);
  v8 = sub_20C53F55C(1);
  if (v7)
  {
    if (v8)
    {
      v9 = v175;
      pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext::ToString((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext *)a3, (uint64_t)v175);
      if (v176.i8[7] < 0)
        v9 = (void **)v175[0];
      pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_GetCombinedBBoxForIncludedPurposes(a1, v160, (pxrInternal__aapl__pxrReserved__::GfBBox3d *)__p);
      sub_20C54077C((uint64_t)__p);
      if ((SBYTE7(v213[0]) & 0x80u) == 0)
        v12 = v212;
      else
        v12 = (void **)v212[0];
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[BBox Cache] Dependent cache hit: %s %s\n", v10, v11, v9, v12);
      goto LABEL_219;
    }
    return;
  }
  if (v8)
  {
    pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext::ToString((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext *)a3, (uint64_t)__p);
    v15 = __p[1].i8[7] >= 0 ? __p : (int8x16_t *)__p[0].i64[0];
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[BBox Cache] Dependent cache miss: %s\n", v13, v14, v15);
    if (__p[1].i8[7] < 0)
      operator delete((void *)__p[0].i64[0]);
  }
  v16 = *(unint64_t **)(a2 + 176);
  __p[0].i8[0] = 0;
  v157 = (pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *)sub_20BEB5B80(v16, __p);
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::SetTime((uint64_t)v157, v17, v18, *(double *)(a1 + 336));
  sub_20C542BE4(a1, v160, (uint64_t *)a3);
  if (*(_BYTE *)(a1 + 472) && sub_20C544B9C(a3, v19))
  {
    sub_20C348EEC(a3, __p[0].i32);
    v21 = (uint64_t *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v20);
    v22 = __p[0].i64[0];
    v23 = *v21;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__p[0].i32[1]);
    v24 = v22 != v23;
    sub_20BFD265C(__p);
  }
  else
  {
    v24 = 0;
  }
  v25 = (pxrInternal__aapl__pxrReserved__::UsdAttributeQuery **)(v160 + 24);
  if (!*(_QWORD *)(v160 + 24))
  {
    if (v24)
      v26 = 2;
    else
      v26 = 1;
    v27 = operator new[]((120 << v24) + 16);
    v28 = 0;
    *v27 = 120;
    v27[1] = v26;
    v29 = 120 * v26;
    do
    {
      pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::UsdAttributeQuery((pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *)&v27[v28 / 8 + 2]);
      v28 += 120;
    }
    while (v29 != v28);
    sub_20C543144(v25, (uint64_t)(v27 + 2));
    if (!v24)
      goto LABEL_42;
LABEL_31:
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v212, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)a3);
    *((_QWORD *)&v213[0] + 1) = 0;
    v212[0] = off_24C53C890;
    v30 = (pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *)((char *)*v25 + 120);
    Attribute = (pxrInternal__aapl__pxrReserved__::UsdProperty *)pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::GetAttribute(v30);
    if ((pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(Attribute, v32) & 1) == 0)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetExtentsHintAttr((pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *)v212, (uint64_t)v175);
      if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)v175, v33))
      {
        pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::UsdAttributeQuery((pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *)__p, (const pxrInternal__aapl__pxrReserved__::UsdAttribute *)v175);
        sub_20C547D2C((uint64_t)v30, (uint64_t)__p);
        sub_20C373B34((uint64_t)__p);
      }
      if ((v176.i8[8] & 7) != 0)
      {
        v34 = (unsigned int *)(v176.i64[1] & 0xFFFFFFFFFFFFFFF8);
        do
          v35 = __ldxr(v34);
        while (__stlxr(v35 - 2, v34));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v176.i32[1]);
      sub_20BFD265C(&v176);
      if (v175[1])
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v175[1]);
    }
    if (pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_GetBBoxFromExtentsHint(a1, (uint64_t)v212, v30, v160))
    {
      *(_BYTE *)(v160 + 56) = 1;
      *(_BYTE *)(v160 + 57) = pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_IsVarying((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)a1, v30);
      *(_BYTE *)(v160 + 58) = pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ShouldIncludePrim((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)a1, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)a3);
      pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::~UsdGeomModelAPI((pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *)v212);
      return;
    }
    pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::~UsdGeomModelAPI((pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *)v212);
    goto LABEL_42;
  }
  if (v24)
    goto LABEL_31;
LABEL_42:
  if (!*(_BYTE *)(v160 + 57))
  {
    pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::UsdAttributeQuery((pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *)v175);
    if (!*(_BYTE *)(a1 + 473))
    {
      v36 = (pxrInternal__aapl__pxrReserved__::UsdProperty *)pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *)v175);
      if ((pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(v36, v37) & 1) == 0)
      {
        pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v211, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)a3);
        *(_QWORD *)&v211[0] = off_24C53C788;
        if (*((_QWORD *)&v211[0] + 1)
          && (*(_BYTE *)(*((_QWORD *)&v211[0] + 1) + 57) & 8) == 0
          && pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible((pxrInternal__aapl__pxrReserved__::UsdTyped *)v211))
        {
          pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetVisibilityAttr((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)v211, (uint64_t)v212);
          if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)v212, v38))goto LABEL_49;
          __p[0].i64[0] = (uint64_t)"usdGeom/bboxCache.cpp";
          __p[0].i64[1] = (uint64_t)"_GetOrCreateVisibilityQuery";
          __p[1].i64[0] = 269;
          __p[1].i64[1] = (uint64_t)"const UsdAttributeQuery &pxrInternal__aapl__pxrReserved__::_GetOrCreateVisibilityQuer"
                                   "y(const UsdPrim &, UsdAttributeQuery *)";
          __p[2].i8[0] = 0;
          sub_20C348EEC(a3, v167.i32);
          Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v167);
          v153 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"Unable to get attribute '%s' on prim at path <%s>", v151, v152, "Visibility", Text);
          v154 = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)__p, "attr", v153);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v167.i32[1]);
          sub_20BFD265C(&v167);
          if (v154)
          {
LABEL_49:
            pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::UsdAttributeQuery((pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *)__p, (const pxrInternal__aapl__pxrReserved__::UsdAttribute *)v212);
            sub_20C547D2C((uint64_t)v175, (uint64_t)__p);
            sub_20C373B34((uint64_t)__p);
          }
          if ((BYTE8(v213[0]) & 7) != 0)
          {
            v39 = (unsigned int *)(*((_QWORD *)&v213[0] + 1) & 0xFFFFFFFFFFFFFFF8);
            do
              v40 = __ldxr(v39);
            while (__stlxr(v40 - 2, v39));
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v213 + 1);
          sub_20BFD265C(v213);
          if (v212[1])
            sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v212[1]);
        }
        pxrInternal__aapl__pxrReserved__::UsdGeomImageable::~UsdGeomImageable((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)v211);
      }
    }
    v41 = *v25;
    v42 = (pxrInternal__aapl__pxrReserved__::UsdProperty *)pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::GetAttribute(v41);
    if ((pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(v42, v43) & 1) == 0)
    {
      pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v211, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)a3);
      *(_QWORD *)&v211[0] = off_24C53C378;
      if (*((_QWORD *)&v211[0] + 1)
        && (*(_BYTE *)(*((_QWORD *)&v211[0] + 1) + 57) & 8) == 0
        && pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible((pxrInternal__aapl__pxrReserved__::UsdTyped *)v211))
      {
        pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::GetExtentAttr((pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *)v211, (uint64_t)v212);
        if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)v212, v44))goto LABEL_61;
        __p[0].i64[0] = (uint64_t)"usdGeom/bboxCache.cpp";
        __p[0].i64[1] = (uint64_t)"_GetOrCreateExtentQuery";
        __p[1].i64[0] = 268;
        __p[1].i64[1] = (uint64_t)"const UsdAttributeQuery &pxrInternal__aapl__pxrReserved__::_GetOrCreateExtentQuery(cons"
                                 "t UsdPrim &, UsdAttributeQuery *)";
        __p[2].i8[0] = 0;
        sub_20C348EEC(a3, v167.i32);
        v145 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v167);
        v148 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"Unable to get attribute '%s' on prim at path <%s>", v146, v147, "Extent", v145);
        v149 = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)__p, "attr", v148);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v167.i32[1]);
        sub_20BFD265C(&v167);
        if (v149)
        {
LABEL_61:
          pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::UsdAttributeQuery((pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *)__p, (const pxrInternal__aapl__pxrReserved__::UsdAttribute *)v212);
          sub_20C547D2C((uint64_t)v41, (uint64_t)__p);
          sub_20C373B34((uint64_t)__p);
        }
        if ((BYTE8(v213[0]) & 7) != 0)
        {
          v45 = (unsigned int *)(*((_QWORD *)&v213[0] + 1) & 0xFFFFFFFFFFFFFFF8);
          do
            v46 = __ldxr(v45);
          while (__stlxr(v46 - 2, v45));
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v213 + 1);
        sub_20BFD265C(v213);
        if (v212[1])
          sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v212[1]);
      }
      pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::~UsdGeomBoundable((pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *)v211);
    }
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)__p, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)a3);
    __p[0].i64[0] = (uint64_t)off_24C53D0E0;
    if (__p[0].i64[1]
      && (*(_BYTE *)(__p[0].i64[1] + 57) & 8) == 0
      && pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible((pxrInternal__aapl__pxrReserved__::UsdTyped *)__p)
      && (pxrInternal__aapl__pxrReserved__::UsdGeomXformable::TransformMightBeTimeVarying((pxrInternal__aapl__pxrReserved__::UsdGeomXformable *)__p) & 1) != 0
      || (v47 = (pxrInternal__aapl__pxrReserved__::UsdProperty *)pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::GetAttribute(v41),
          pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(v47, v48))
      && pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_IsVarying((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)a1, v41))
    {
      LOBYTE(IsDefined) = 1;
    }
    else
    {
      v50 = (pxrInternal__aapl__pxrReserved__::UsdProperty *)pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *)v175);
      IsDefined = pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(v50, v51);
      if (IsDefined)
        LOBYTE(IsDefined) = pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_IsVarying((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)a1, (const pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *)v175);
    }
    *(_BYTE *)(v160 + 57) = IsDefined;
    pxrInternal__aapl__pxrReserved__::UsdGeomXformable::~UsdGeomXformable((pxrInternal__aapl__pxrReserved__::UsdGeomXformable *)__p);
    sub_20C373B34((uint64_t)v175);
  }
  v156 = (double *)(a1 + 336);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v214, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)a3);
  v214 = off_24C53C378;
  if (v215
    && (*(_BYTE *)(v215 + 57) & 8) == 0
    && pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v214))
  {
    memset(__p, 0, 40);
    if (pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::ComputeExtent((pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *)&v214, v156, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)__p))
    {
      v175[0] = (void *)(v160 + 40);
      v52 = sub_20C54BCDC(v160, (_QWORD *)(v160 + 40), (uint64_t)&unk_20CAC184C, (uint64_t **)v175);
      sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)__p, v53, v54);
      v55 = *(float32x2_t *)__p[2].i64[0];
      v56 = *(float *)(__p[2].i64[0] + 8);
      sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)__p, v57, v58);
      v59 = *(float *)(__p[2].i64[0] + 20);
      v60 = vcvtq_f64_f32(*(float32x2_t *)(__p[2].i64[0] + 12));
      *(float64x2_t *)(v52 + 5) = vcvtq_f64_f32(v55);
      *((double *)v52 + 7) = v56;
      *((float64x2_t *)v52 + 4) = v60;
      *((double *)v52 + 10) = v59;
    }
    sub_20BF5618C((uint64_t)__p);
    goto LABEL_209;
  }
  pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)v212, 1.0);
  if (sub_20C5431B4((pxrInternal__aapl__pxrReserved__::UsdPrim *)a3))
  {
    pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalToWorldTransform(v157, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)a3, (uint64_t)__p);
    pxrInternal__aapl__pxrReserved__::GfMatrix4d::GetInverse((double *)__p[0].i64, 0, 0.0, (uint64_t)v211);
  }
  else
  {
    v61 = a4[5];
    v211[4] = a4[4];
    v211[5] = v61;
    v62 = a4[7];
    v211[6] = a4[6];
    v211[7] = v62;
    v63 = a4[1];
    v211[0] = *a4;
    v211[1] = v63;
    v64 = a4[3];
    v211[2] = a4[2];
    v211[3] = v64;
  }
  v209 = 0;
  v208 = 0;
  v210 = 0;
  sub_20C547E74((uint64_t)&v198);
  v197 = 0;
  v164 = sub_20C452420(a3, v65);
  if (v164)
  {
    pxrInternal__aapl__pxrReserved__::UsdPrim::GetPrototype((pxrInternal__aapl__pxrReserved__::UsdPrim *)a3, v66, (uint64_t)v175);
    v167 = 0uLL;
    v168.i8[0] = 0;
    v67 = sub_20C3C103C((uint64_t)&v167, 0);
    v194 = *(int8x16_t *)v67;
    *(_QWORD *)&v195 = *(_QWORD *)(v67 + 16);
    v167 = v194;
    v168.i8[0] = v195;
    v68 = sub_20C3C103C((uint64_t)&v167, 6);
    *(_OWORD *)v185 = *(_OWORD *)v68;
    v186 = *(_QWORD *)(v68 + 16);
    v167 = *(int8x16_t *)v185;
    v168.i8[0] = v186;
    v69 = (uint64_t *)sub_20C3C103C((uint64_t)&v167, 0x100000005);
    v71 = *v69;
    v70 = v69[1];
    v72 = v69[2];
    if (!pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v176)
      && ((v71 & 0x2000) != 0 || (v70 & 0x2000) == 0))
    {
      v71 |= 0x2000uLL;
      v70 &= ~0x2000uLL;
    }
    v167.i64[0] = v71;
    v167.i64[1] = v70;
    v168.i64[0] = v72;
    sub_20C3ADEFC((uint64_t)v175, v167.i64, (uint64_t)__p);
    v198 = __p[0].i64[0];
    sub_20BFD3EBC(&v199, &__p[0].i32[2]);
    sub_20BFD3F10(&v200, &__p[0].i32[3]);
    v201 = __p[1];
    LOBYTE(v202) = __p[2].i8[0];
    v203 = __p[2].i64[1];
    sub_20BFD3EBC(&v204, __p[3].i32);
    sub_20BFD3F10(&v205, &__p[3].i32[1]);
    v206 = *(__int128 *)((char *)&__p[3] + 8);
    LOBYTE(v207) = __p[4].i8[8];
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__p[3].i32[1]);
    sub_20BFD265C((int8x16_t *)__p[3].i32);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__p[0].i32[3]);
    sub_20BFD265C(&__p[0].i32[2]);
    v73 = (_QWORD *)sub_20C540D04(v160 + 40);
    sub_20BF32220(&v197, v73);
    if ((v176.i8[8] & 7) != 0)
    {
      v74 = (unsigned int *)(v176.i64[1] & 0xFFFFFFFFFFFFFFF8);
      do
        v75 = __ldxr(v74);
      while (__stlxr(v75 - 2, v74));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v176.i32[1]);
    sub_20BFD265C(&v176);
    if (v175[1])
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v175[1]);
  }
  else
  {
    v175[0] = 0;
    v175[1] = 0;
    v176.i8[0] = 0;
    v76 = sub_20C3C103C((uint64_t)v175, 0);
    v167 = *(int8x16_t *)v76;
    v168.i64[0] = *(_QWORD *)(v76 + 16);
    *(int8x16_t *)v175 = v167;
    v176.i8[0] = v168.i8[0];
    v77 = sub_20C3C103C((uint64_t)v175, 6);
    v194 = *(int8x16_t *)v77;
    *(_QWORD *)&v195 = *(_QWORD *)(v77 + 16);
    *(int8x16_t *)v175 = v194;
    v176.i8[0] = v195;
    v78 = sub_20C3C103C((uint64_t)v175, 0x100000005);
    v80 = *(_QWORD *)v78;
    v79 = *(_QWORD *)(v78 + 8);
    v81 = *(_QWORD *)(v78 + 16);
    if (!pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a3 + 16))
      && ((v80 & 0x2000) != 0 || (v79 & 0x2000) == 0))
    {
      v80 |= 0x2000uLL;
      v79 &= ~0x2000uLL;
    }
    v175[0] = (void *)v80;
    v175[1] = (void *)v79;
    v176.i64[0] = v81;
    sub_20C3ADEFC(a3, (uint64_t *)v175, (uint64_t)__p);
    v198 = __p[0].i64[0];
    sub_20BFD3EBC(&v199, &__p[0].i32[2]);
    sub_20BFD3F10(&v200, &__p[0].i32[3]);
    v201 = __p[1];
    LOBYTE(v202) = __p[2].i8[0];
    v203 = __p[2].i64[1];
    sub_20BFD3EBC(&v204, __p[3].i32);
    sub_20BFD3F10(&v205, &__p[3].i32[1]);
    v206 = *(__int128 *)((char *)&__p[3] + 8);
    LOBYTE(v207) = __p[4].i8[8];
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__p[3].i32[1]);
    sub_20BFD265C((int8x16_t *)__p[3].i32);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__p[0].i32[3]);
    sub_20BFD265C(&__p[0].i32[2]);
    sub_20BF32220(&v197, (_QWORD *)(a3 + 32));
  }
  v167.i64[0] = v198;
  sub_20BFD6E54(&v167.i32[2], &v199);
  sub_20BFD6EA4(&v167.i32[3], &v200);
  v168 = v201;
  v169.i64[0] = v202;
  v194.i64[0] = v203;
  sub_20BFD6E54(&v194.i32[2], &v204);
  sub_20BFD6EA4(&v194.i32[3], &v205);
  v195 = v206;
  v196 = v207;
  while (*(_OWORD *)&v167 != *(_OWORD *)&v194 || !sub_20C39FA44((uint64_t)&v168, (uint64_t)&v195))
  {
    sub_20C3ADDEC((uint64_t)&v167, (uint64_t)v189);
    sub_20C54519C((uint64_t)v185, (uint64_t)v189, &v197);
    v82 = sub_20C547340(v165, (uint64_t)v185);
    if (v82)
      v83 = v82 + 7;
    else
      v83 = 0;
    if (v82)
      goto LABEL_232;
    __p[0].i64[0] = (uint64_t)"usdGeom/bboxCache.cpp";
    __p[0].i64[1] = (uint64_t)"_ResolvePrim";
    __p[1].i64[0] = 1359;
    __p[1].i64[1] = (uint64_t)"void pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ResolvePrim(_BBoxTask *, const _P"
                             "rimContext &, const GfMatrix4d &)";
    __p[2].i8[0] = 0;
    pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext::ToString((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext *)v185, (uint64_t)v175);
    v105 = v175;
    if (v176.i8[7] < 0)
      v105 = (void **)v175[0];
    v106 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"Could not find prim <%s>in the bboxCache.", v103, v104, v105);
    v107 = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)__p, "childEntry", v106);
    if (v176.i8[7] < 0)
    {
      v155 = v107;
      operator delete(v175[0]);
      v107 = v155;
    }
    if ((v107 & 1) != 0)
    {
LABEL_232:
      if (!*((_BYTE *)v83 + 56))
        *((_BYTE *)v83 + 58) = pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ShouldIncludePrim((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)a1, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v189);
      if (*(_BYTE *)(a1 + 473) || *((_BYTE *)v83 + 58))
      {
        if (v164)
        {
          LODWORD(v175[0]) = 1;
          v175[1] = 0;
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v176);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v176.i32[1]);
          v176.i64[1] = 0;
          v177.i64[0] = 0;
          v183 = 0;
          v184 = 0;
          sub_20C547ED8((uint64_t)__p, (uint64_t)v185, (uint64_t)v175);
          sub_20C5432CC((uint64_t *)&v208, (uint64_t)__p);
          sub_20C54802C((uint64_t)__p);
          if ((v177.i8[0] & 7) != 0)
          {
            v84 = (unsigned int *)(v177.i64[0] & 0xFFFFFFFFFFFFFFF8);
            do
              v85 = __ldxr(v84);
            while (__stlxr(v85 - 2, v84));
          }
          if ((v176.i8[8] & 7) != 0)
          {
            v86 = (unsigned int *)(v176.i64[1] & 0xFFFFFFFFFFFFFFF8);
            do
              v87 = __ldxr(v86);
            while (__stlxr(v87 - 2, v86));
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v176.i32[1]);
          sub_20BFD265C(&v176);
          v88 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v175[1];
          if (v175[1])
            goto LABEL_132;
        }
        else
        {
          sub_20C54810C((uint64_t)__p, (uint64_t)v185, v211, a1, *(_QWORD *)(a2 + 176));
          v89 = v209;
          if (v209 >= v210)
          {
            v90 = sub_20C54C1F8((uint64_t *)&v208, (uint64_t)v185, (uint64_t)__p);
          }
          else
          {
            sub_20C547ED8(v209, (uint64_t)v185, (uint64_t)__p);
            v90 = v89 + 224;
          }
          v209 = v90;
          if ((__p[2].i8[0] & 7) != 0)
          {
            v91 = (unsigned int *)(__p[2].i64[0] & 0xFFFFFFFFFFFFFFF8);
            do
              v92 = __ldxr(v91);
            while (__stlxr(v92 - 2, v91));
          }
          if ((__p[1].i8[8] & 7) != 0)
          {
            v93 = (unsigned int *)(__p[1].i64[1] & 0xFFFFFFFFFFFFFFF8);
            do
              v94 = __ldxr(v93);
            while (__stlxr(v94 - 2, v93));
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__p[1].i32[1]);
          sub_20BFD265C((int8x16_t *)__p[1].i32);
          v88 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)__p[0].i64[1];
          if (__p[0].i64[1])
LABEL_132:
            sub_20C35C614(v88);
        }
      }
      else
      {
        pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v175, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v189);
        v175[0] = off_24C53C788;
        if (v175[1]
          && (*((_BYTE *)v175[1] + 57) & 8) == 0
          && pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible((pxrInternal__aapl__pxrReserved__::UsdTyped *)v175))
        {
          pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetVisibilityAttr((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)v175, (uint64_t)__p);
          *(_BYTE *)(v160 + 57) |= pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_IsVarying((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)a1, (const pxrInternal__aapl__pxrReserved__::UsdAttribute *)__p);
          if ((__p[1].i8[8] & 7) != 0)
          {
            v95 = (unsigned int *)(__p[1].i64[1] & 0xFFFFFFFFFFFFFFF8);
            do
              v96 = __ldxr(v95);
            while (__stlxr(v96 - 2, v95));
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__p[1].i32[1]);
          sub_20BFD265C((int8x16_t *)__p[1].i32);
          if (__p[0].i64[1])
            sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)__p[0].i64[1]);
        }
        pxrInternal__aapl__pxrReserved__::UsdGeomImageable::~UsdGeomImageable((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)v175);
      }
    }
    if ((v188 & 7) != 0)
    {
      v97 = (unsigned int *)(v188 & 0xFFFFFFFFFFFFFFF8);
      do
        v98 = __ldxr(v97);
      while (__stlxr(v98 - 2, v97));
    }
    if ((v187 & 7) != 0)
    {
      v99 = (unsigned int *)(v187 & 0xFFFFFFFFFFFFFFF8);
      do
        v100 = __ldxr(v99);
      while (__stlxr(v100 - 2, v99));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v186 + 1);
    sub_20BFD265C(&v186);
    if (*(_QWORD *)&v185[8])
      sub_20C35C614(*(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v185[8]);
    if ((v193 & 7) != 0)
    {
      v101 = (unsigned int *)(v193 & 0xFFFFFFFFFFFFFFF8);
      do
        v102 = __ldxr(v101);
      while (__stlxr(v102 - 2, v101));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v192);
    sub_20BFD265C(&v191);
    if (v190)
      sub_20C35C614(v190);
    sub_20C3ADE64((uint64_t)&v167);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v194.i32[3]);
  sub_20BFD265C(&v194.i32[2]);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v167.i32[3]);
  sub_20BFD265C(&v167.i32[2]);
  if ((v164 & 1) == 0)
  {
    v175[0] = &v208;
    __p[0].i64[0] = (uint64_t)off_24C53C250;
    __p[0].i64[1] = (uint64_t)v175;
    tbb::interface7::internal::isolate_within_arena(__p, 0);
    v108 = *(unint64_t **)(a2 + 176);
    __p[0].i8[0] = 0;
    v109 = sub_20BEB5B80(v108, __p);
    v112 = v109;
    if (v157 != (pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *)v109)
    {
      *((_DWORD *)v157 + 8) = *(_DWORD *)(v109 + 32);
      sub_20C543DF4(v157, *(_QWORD **)(v109 + 16), 0);
    }
    *((_QWORD *)v157 + 5) = *(_QWORD *)(v112 + 40);
    pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::SetTime((uint64_t)v157, v110, v111, *v156);
  }
  v113 = v208;
  v114 = v209;
  if (v208 != (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v209)
  {
    v115 = 0;
    v116 = (_QWORD *)(v160 + 8);
    do
    {
      while (1)
      {
        v117 = sub_20C547340(v165, (uint64_t)v113);
        v118 = v117 ? (uint64_t)(v117 + 7) : 0;
        if (!*(_BYTE *)(v118 + 56))
        {
          __p[0].i64[0] = (uint64_t)"usdGeom/bboxCache.cpp";
          __p[0].i64[1] = (uint64_t)"_ResolvePrim";
          __p[1].i64[0] = 1430;
          __p[1].i64[1] = (uint64_t)"void pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ResolvePrim(_BBoxTask *, co"
                                   "nst _PrimContext &, const GfMatrix4d &)";
          __p[2].i8[0] = 0;
          if ((pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)__p, "childEntry->isComplete", 0) & 1) == 0)
            break;
        }
        *(_BYTE *)(v160 + 57) |= *(_BYTE *)(v118 + 57);
        if (!*(_QWORD *)(v118 + 16))
          break;
        if ((v115 & 1) == 0)
        {
          pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalToWorldTransform(v157, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)a3, (uint64_t)v175);
          __p[4] = v179;
          __p[5] = v180;
          __p[6] = v181;
          __p[7] = v182;
          __p[0] = *(int8x16_t *)v175;
          __p[1] = v176;
          __p[2] = v177;
          __p[3] = v178;
          pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)__p[0].i64, (double *)v211);
          v213[3] = __p[4];
          v213[4] = __p[5];
          v213[5] = __p[6];
          v213[6] = __p[7];
          *(int8x16_t *)v212 = __p[0];
          v213[0] = __p[1];
          v213[1] = __p[2];
          v213[2] = __p[3];
          v119 = *(_QWORD **)v160;
          if (*(_QWORD **)v160 != v116)
          {
            do
            {
              pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)(v119 + 5), (const pxrInternal__aapl__pxrReserved__::GfMatrix4d *)v212);
              pxrInternal__aapl__pxrReserved__::GfBBox3d::ComputeAlignedRange((pxrInternal__aapl__pxrReserved__::GfBBox3d *)(v119 + 5), (uint64_t)v175);
              __p[0] = *(int8x16_t *)v175;
              __p[1] = v176;
              __p[2] = v177;
              pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)__p[3].i64, 1.0);
              pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)__p[11].i64, 1.0);
              __p[19].i16[0] = 0;
              memcpy(v119 + 5, __p, 0x132uLL);
              v120 = (_QWORD *)v119[1];
              if (v120)
              {
                do
                {
                  v121 = v120;
                  v120 = (_QWORD *)*v120;
                }
                while (v120);
              }
              else
              {
                do
                {
                  v121 = (_QWORD *)v119[2];
                  v122 = *v121 == (_QWORD)v119;
                  v119 = v121;
                }
                while (!v122);
              }
              v119 = v121;
            }
            while (v121 != v116);
          }
        }
        sub_20C54C31C(v194.i64, v118);
        if (v164)
        {
          v185[0] = 0;
          pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalTransformation(v157, v113, v185, &v167);
          __p[4] = v171;
          __p[5] = v172;
          __p[6] = v173;
          __p[7] = v174;
          __p[0] = v167;
          __p[1] = v168;
          __p[2] = v169;
          __p[3] = v170;
          pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)__p[0].i64, (double *)v212);
        }
        else
        {
          pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalToWorldTransform(v157, v113, (uint64_t)&v167);
          __p[4] = v171;
          __p[5] = v172;
          __p[6] = v173;
          __p[7] = v174;
          __p[0] = v167;
          __p[1] = v168;
          __p[2] = v169;
          __p[3] = v170;
          pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)__p[0].i64, (double *)v211);
        }
        v179 = __p[4];
        v180 = __p[5];
        v181 = __p[6];
        v182 = __p[7];
        *(int8x16_t *)v175 = __p[0];
        v176 = __p[1];
        v177 = __p[2];
        v178 = __p[3];
        v123 = (unint64_t *)v194.i64[0];
        if ((unint64_t *)v194.i64[0] != &v194.u64[1])
        {
          do
          {
            v124 = *(int8x16_t *)(v123 + 21);
            __p[4] = *(int8x16_t *)(v123 + 19);
            __p[5] = v124;
            v125 = *(int8x16_t *)(v123 + 25);
            __p[6] = *(int8x16_t *)(v123 + 23);
            __p[7] = v125;
            v126 = *(int8x16_t *)(v123 + 13);
            __p[0] = *(int8x16_t *)(v123 + 11);
            __p[1] = v126;
            v127 = *(int8x16_t *)(v123 + 17);
            __p[2] = *(int8x16_t *)(v123 + 15);
            __p[3] = v127;
            pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)__p[0].i64, (double *)v175);
            pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)(v123 + 5), (const pxrInternal__aapl__pxrReserved__::GfMatrix4d *)__p);
            __p[0].i64[0] = (uint64_t)(v123 + 4);
            v128 = sub_20C54BCDC(v160, v123 + 4, (uint64_t)&unk_20CAC184C, (uint64_t **)__p);
            v159 = *(float64x2_t *)(v128 + 5);
            v161 = *(int8x16_t *)(v128 + 7);
            v163 = *(float64x2_t *)(v128 + 9);
            pxrInternal__aapl__pxrReserved__::GfBBox3d::ComputeAlignedRange((pxrInternal__aapl__pxrReserved__::GfBBox3d *)(v123 + 5), (uint64_t)__p);
            v129 = vbslq_s8((int8x16_t)vcgtq_f64(v159, (float64x2_t)__p[0]), __p[0], (int8x16_t)v159);
            *(_QWORD *)&v130.f64[0] = __p[1].i64[0];
            *(_QWORD *)&v130.f64[1] = v161.i64[1];
            *(_QWORD *)&v131.f64[0] = v161.i64[0];
            *(_QWORD *)&v131.f64[1] = __p[1].i64[1];
            *(int8x16_t *)(v128 + 7) = vbslq_s8((int8x16_t)vcgtq_f64(v131, v130), __p[1], v161);
            v132 = vbslq_s8((int8x16_t)vcgtq_f64((float64x2_t)__p[2], v163), __p[2], (int8x16_t)v163);
            *(int8x16_t *)(v128 + 5) = v129;
            *(int8x16_t *)(v128 + 9) = v132;
            v133 = (unint64_t *)v123[1];
            if (v133)
            {
              do
              {
                v134 = v133;
                v133 = (unint64_t *)*v133;
              }
              while (v133);
            }
            else
            {
              do
              {
                v134 = (unint64_t *)v123[2];
                v122 = *v134 == (_QWORD)v123;
                v123 = v134;
              }
              while (!v122);
            }
            v123 = v134;
          }
          while (v134 != &v194.u64[1]);
        }
        sub_20BF2B200((uint64_t)&v194, (_QWORD *)v194.i64[1]);
        v113 = (const pxrInternal__aapl__pxrReserved__::UsdPrim *)((char *)v113 + 224);
        v115 = 1;
        if (v113 == (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v114)
          goto LABEL_198;
      }
      v113 = (const pxrInternal__aapl__pxrReserved__::UsdPrim *)((char *)v113 + 224);
    }
    while (v113 != (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v114);
    if ((v115 & 1) == 0)
      goto LABEL_205;
LABEL_198:
    memset(__p, 0, 128);
    pxrInternal__aapl__pxrReserved__::GfMatrix4d::GetInverse((double *)v212, 0, 0.0, (uint64_t)__p);
    v135 = *(_QWORD **)v160;
    if (*(_QWORD **)v160 != v116)
    {
      do
      {
        pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)(v135 + 5), (const pxrInternal__aapl__pxrReserved__::GfMatrix4d *)__p);
        v136 = (_QWORD *)v135[1];
        if (v136)
        {
          do
          {
            v137 = v136;
            v136 = (_QWORD *)*v136;
          }
          while (v136);
        }
        else
        {
          do
          {
            v137 = (_QWORD *)v135[2];
            v122 = *v137 == (_QWORD)v135;
            v135 = v137;
          }
          while (!v122);
        }
        v135 = v137;
      }
      while (v137 != v116);
    }
  }
LABEL_205:
  if ((v197 & 7) != 0)
  {
    v138 = (unsigned int *)(v197 & 0xFFFFFFFFFFFFFFF8);
    do
      v139 = __ldxr(v138);
    while (__stlxr(v139 - 2, v138));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v205);
  sub_20BFD265C(&v204);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v200);
  sub_20BFD265C(&v199);
  __p[0].i64[0] = (uint64_t)&v208;
  sub_20C54BF9C((void ***)__p);
LABEL_209:
  pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::~UsdGeomBoundable((pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *)&v214);
  *(_BYTE *)(v160 + 56) = 1;
  if (sub_20C53F55C(1))
  {
    v140 = v175;
    pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext::ToString((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext *)a3, (uint64_t)v175);
    if (v176.i8[7] < 0)
      v140 = (void **)v175[0];
    pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_GetCombinedBBoxForIncludedPurposes(a1, v160, (pxrInternal__aapl__pxrReserved__::GfBBox3d *)__p);
    sub_20C54077C((uint64_t)__p);
    if ((SBYTE7(v213[0]) & 0x80u) == 0)
      v143 = v212;
    else
      v143 = (void **)v212[0];
    if (*(_BYTE *)(v160 + 57))
      v144 = "true";
    else
      v144 = "false";
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[BBox Cache] resolved value: %s %s (varying: %s)\n", v141, v142, v140, v143, v144);
LABEL_219:
    if (SBYTE7(v213[0]) < 0)
      operator delete(v212[0]);
    if (v176.i8[7] < 0)
      operator delete(v175[0]);
  }
}

void sub_20C54289C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,void *__p)
{
  sub_20C372B54((uint64_t)&STACK[0x3A0]);
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::~UsdGeomImageable((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)&STACK[0x320]);
  sub_20C373B34((uint64_t)&__p);
  _Unwind_Resume(a1);
}

void sub_20C542BE4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  void **v3;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;
  unsigned int v11;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v12;
  pxrInternal__aapl__pxrReserved__::SdfPath *v13;
  void **v14;
  void *v15;
  void *v16;
  _QWORD *v17;
  unsigned int *v18;
  unsigned int v19;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v20;
  uint64_t v21;
  unsigned int *v22;
  unsigned int v23;
  unsigned int *v24;
  unsigned int v25;
  int v26;
  void **v27;
  const char *v28;
  char *v29;
  void **v30;
  void **v31;
  unsigned int *v32;
  unsigned int v33;
  unsigned int *v34;
  unsigned int v35;
  const char *v36;
  char *v37;
  void **v38;
  unsigned int *v39;
  unsigned int v40;
  unint64_t v41;
  unsigned int *v42;
  unsigned int v43;
  unsigned int *v44;
  unsigned int v45;
  unint64_t v46;
  unsigned int *v47;
  unsigned int v48;
  unsigned int *v49;
  unsigned int v50;
  unsigned int *v51;
  unsigned int v52;
  unsigned int *v53;
  unsigned int v54;
  void *__p[2];
  char v56;
  void *v57;
  char v58;
  char v59;
  void *v60;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE v66[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v67;
  int v68;
  int v69;
  uint64_t v70;
  _QWORD v71[3];

  v3 = (void **)(a2 + 40);
  if (*(_QWORD *)(a2 + 40))
    return;
  if (sub_20C3AD308((uint64_t)a3, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2))
  {
    v7 = a3[4];
    if (v7)
    {
      if ((v7 & 7) != 0)
      {
        v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
        do
          v9 = __ldxr(v8);
        while (__stxr(v9 + 2, v8));
        if ((v9 & 1) == 0)
          v7 &= 0xFFFFFFFFFFFFFFF8;
      }
      if (((unint64_t)*v3 & 7) != 0)
      {
        v10 = (unsigned int *)((unint64_t)*v3 & 0xFFFFFFFFFFFFFFF8);
        do
          v11 = __ldxr(v10);
        while (__stlxr(v11 - 2, v10));
      }
      *(_QWORD *)(a2 + 40) = v7;
      *(_BYTE *)(a2 + 48) = 1;
    }
    else
    {
      v20 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v20)
        v20 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      v21 = *((_QWORD *)v20 + 29);
      if ((v21 & 7) != 0)
      {
        v22 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 2, v22));
        if ((v23 & 1) == 0)
          v21 &= 0xFFFFFFFFFFFFFFF8;
      }
      if (((unint64_t)*v3 & 7) != 0)
      {
        v24 = (unsigned int *)((unint64_t)*v3 & 0xFFFFFFFFFFFFFFF8);
        do
          v25 = __ldxr(v24);
        while (__stlxr(v25 - 2, v24));
      }
      *(_QWORD *)(a2 + 40) = v21;
      *(_BYTE *)(a2 + 48) = 0;
    }
    return;
  }
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v71, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)a3);
  v71[0] = off_24C53C788;
  sub_20C3AD22C((uint64_t)a3, (uint64_t)v66);
  if (!pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)v66, v12))goto LABEL_51;
  sub_20C348EEC((uint64_t)v66, (int *)&v60);
  v14 = (void **)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v13);
  v15 = v60;
  v16 = *v14;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v60 + 1);
  sub_20BFD265C(&v60);
  if (v15 == v16)
    goto LABEL_51;
  sub_20C54519C((uint64_t)&v60, (uint64_t)v66, a3 + 4);
  v17 = sub_20C547340((_QWORD *)(a1 + 432), (uint64_t)&v60);
  if (!v17)
  {
LABEL_43:
    if ((v65 & 7) != 0)
    {
      v32 = (unsigned int *)(v65 & 0xFFFFFFFFFFFFFFF8);
      do
        v33 = __ldxr(v32);
      while (__stlxr(v33 - 2, v32));
    }
    if ((v64 & 7) != 0)
    {
      v34 = (unsigned int *)(v64 & 0xFFFFFFFFFFFFFFF8);
      do
        v35 = __ldxr(v34);
      while (__stlxr(v35 - 2, v34));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v63);
    sub_20BFD265C(&v62);
    if (v61)
      sub_20C35C614(v61);
LABEL_51:
    if (sub_20C53F55C(1))
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext::ToString((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext *)a3, (uint64_t)&v60);
      v38 = v63 >= 0 ? &v60 : (void **)v60;
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[BBox Cache] Computing purpose without cached parent for <%s>\n", v36, v37, v38);
      if (SHIBYTE(v63) < 0)
        operator delete(v60);
    }
    pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputePurposeInfo((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)v71, (uint64_t)&v60);
    if (&v60 == v3)
    {
      v41 = (unint64_t)v60;
      *(_BYTE *)(a2 + 48) = (_BYTE)v61;
      if ((v41 & 7) != 0)
      {
        v42 = (unsigned int *)(v41 & 0xFFFFFFFFFFFFFFF8);
        do
          v43 = __ldxr(v42);
        while (__stlxr(v43 - 2, v42));
      }
    }
    else
    {
      if (((unint64_t)*v3 & 7) != 0)
      {
        v39 = (unsigned int *)((unint64_t)*v3 & 0xFFFFFFFFFFFFFFF8);
        do
          v40 = __ldxr(v39);
        while (__stlxr(v40 - 2, v39));
      }
      *(_QWORD *)(a2 + 40) = v60;
      v60 = 0;
      *(_BYTE *)(a2 + 48) = (_BYTE)v61;
    }
    if ((v70 & 7) != 0)
    {
      v44 = (unsigned int *)(v70 & 0xFFFFFFFFFFFFFFF8);
      do
        v45 = __ldxr(v44);
      while (__stlxr(v45 - 2, v44));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v69);
    goto LABEL_69;
  }
  if (!v17[12])
  {
    if (sub_20C53F55C(1))
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext::ToString((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext *)a3, (uint64_t)&v57);
      v26 = v59;
      v27 = (void **)v57;
      pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext::ToString((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext *)&v60, (uint64_t)__p);
      v30 = &v57;
      if (v26 < 0)
        v30 = v27;
      if (v56 >= 0)
        v31 = __p;
      else
        v31 = (void **)__p[0];
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[BBox Cache] Computing purpose for <%s> before purposeof parent <%s> is cached\n", v28, v29, v30, v31);
      if (v56 < 0)
        operator delete(__p[0]);
      if (v59 < 0)
        operator delete(v57);
    }
    goto LABEL_43;
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputePurposeInfo((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)v71, v17 + 12, (uint64_t)&v57);
  if (&v57 == v3)
  {
    v46 = (unint64_t)v57;
    *(_BYTE *)(a2 + 48) = v58;
    if ((v46 & 7) != 0)
    {
      v47 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
      do
        v48 = __ldxr(v47);
      while (__stlxr(v48 - 2, v47));
    }
  }
  else
  {
    if (((unint64_t)*v3 & 7) != 0)
    {
      v18 = (unsigned int *)((unint64_t)*v3 & 0xFFFFFFFFFFFFFFF8);
      do
        v19 = __ldxr(v18);
      while (__stlxr(v19 - 2, v18));
    }
    *(_QWORD *)(a2 + 40) = v57;
    v57 = 0;
    *(_BYTE *)(a2 + 48) = v58;
  }
  if ((v65 & 7) != 0)
  {
    v49 = (unsigned int *)(v65 & 0xFFFFFFFFFFFFFFF8);
    do
      v50 = __ldxr(v49);
    while (__stlxr(v50 - 2, v49));
  }
  if ((v64 & 7) != 0)
  {
    v51 = (unsigned int *)(v64 & 0xFFFFFFFFFFFFFFF8);
    do
      v52 = __ldxr(v51);
    while (__stlxr(v52 - 2, v51));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v63);
  sub_20BFD265C(&v62);
  if (v61)
    sub_20C35C614(v61);
  if ((v70 & 7) != 0)
  {
    v53 = (unsigned int *)(v70 & 0xFFFFFFFFFFFFFFF8);
    do
      v54 = __ldxr(v53);
    while (__stlxr(v54 - 2, v53));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v69);
LABEL_69:
  sub_20BFD265C(&v68);
  if (v67)
    sub_20C35C614(v67);
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::~UsdGeomImageable((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)v71);
}

void sub_20C54308C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,char a31)
{
  uint64_t v31;

  if (a16 < 0)
    operator delete(__p);
  if (a22 < 0)
    operator delete(a17);
  sub_20C540D8C((uint64_t)&a23);
  sub_20C35C2E0((uint64_t)&a31);
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::~UsdGeomImageable((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)(v31 - 72));
  _Unwind_Resume(a1);
}

void sub_20C543144(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  __int128 v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  __int128 v7;

  sub_20C54BE84(&v7, a2);
  v3 = (std::__shared_weak_count *)a1[1];
  v4 = v7;
  *(_QWORD *)&v7 = *a1;
  *((_QWORD *)&v7 + 1) = v3;
  *(_OWORD *)a1 = v4;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

BOOL sub_20C5431B4(pxrInternal__aapl__pxrReserved__::UsdPrim *a1)
{
  const pxrInternal__aapl__pxrReserved__::TfToken *v1;
  unsigned int **v2;
  const pxrInternal__aapl__pxrReserved__::TfToken *v3;
  _BOOL8 IsA;
  unsigned int **v5;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v9;
  _QWORD v10[4];

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v10, a1);
  v10[3] = 0;
  v9 = 0;
  v10[0] = off_24C538548;
  if (pxrInternal__aapl__pxrReserved__::UsdModelAPI::GetKind((pxrInternal__aapl__pxrReserved__::UsdModelAPI *)v10, (pxrInternal__aapl__pxrReserved__::TfToken *)&v9))
  {
    v2 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::KindTokens);
    if (!v2)
      v2 = sub_20BFC9FE0(&pxrInternal__aapl__pxrReserved__::KindTokens);
    if (pxrInternal__aapl__pxrReserved__::KindRegistry::IsA((pxrInternal__aapl__pxrReserved__::KindRegistry *)&v9, (const pxrInternal__aapl__pxrReserved__::TfToken *)(v2 + 1), v1))
    {
      IsA = 1;
    }
    else
    {
      v5 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::KindTokens);
      if (!v5)
        v5 = sub_20BFC9FE0(&pxrInternal__aapl__pxrReserved__::KindTokens);
      IsA = pxrInternal__aapl__pxrReserved__::KindRegistry::IsA((pxrInternal__aapl__pxrReserved__::KindRegistry *)&v9, (const pxrInternal__aapl__pxrReserved__::TfToken *)(v5 + 4), v3);
    }
  }
  else
  {
    IsA = 0;
  }
  if ((v9 & 7) != 0)
  {
    v6 = (unsigned int *)(v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::UsdModelAPI::~UsdModelAPI((pxrInternal__aapl__pxrReserved__::UsdModelAPI *)v10);
  return IsA;
}

void sub_20C543298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  unsigned int *v4;
  unsigned int v5;
  va_list va;

  va_start(va, a3);
  if ((a3 & 7) != 0)
  {
    v4 = (unsigned int *)(a3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::UsdModelAPI::~UsdModelAPI((pxrInternal__aapl__pxrReserved__::UsdModelAPI *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C5432CC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = a1[2];
  v4 = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(_QWORD *)(v4 - 8);
  if (v7 >= v6)
  {
    v10 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v7 - *a1) >> 5);
    if ((unint64_t)(v10 + 1) > 0x124924924924924)
      sub_20BDDF694();
    v11 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v5 - *a1) >> 5);
    v12 = 2 * v11;
    if (2 * v11 <= v10 + 1)
      v12 = v10 + 1;
    if (v11 >= 0x92492492492492)
      v13 = 0x124924924924924;
    else
      v13 = v12;
    v19 = v4;
    if (v13)
      v14 = (char *)sub_20C54C164(v4, v13);
    else
      v14 = 0;
    v15 = v14;
    v16 = &v14[224 * v10];
    v18 = &v14[224 * v13];
    sub_20C54C00C((uint64_t)v16, a2);
    v17 = v16 + 224;
    sub_20C54C0E0(a1, &v15);
    v9 = a1[1];
    result = sub_20C54C1AC((uint64_t)&v15);
  }
  else
  {
    result = sub_20C54C00C(*(_QWORD *)(v4 - 8), a2);
    v9 = v7 + 224;
    a1[1] = v7 + 224;
  }
  a1[1] = v9;
  return result;
}

void sub_20C5433F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C54C1AC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C543404(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *(_QWORD *)(a1 + 24);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_20BFD265C((_DWORD *)(a1 + 16));
  v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if (v8)
    sub_20C35C614(v8);
  return a1;
}

uint64_t sub_20C543484(uint64_t a1)
{
  void *v2;

  sub_20C5434BC(a1, *(_QWORD **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_20C5434BC(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;

  if (a2)
  {
    v2 = a2;
    do
    {
      v3 = (_QWORD *)*v2;
      sub_20C5434F8((uint64_t)(v2 + 2));
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

void sub_20C5434F8(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;
  void **v6;

  v6 = (void **)(a1 + 32);
  sub_20C54356C(&v6);
  v2 = *(_QWORD *)(a1 + 24);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_20BFD265C((_DWORD *)(a1 + 16));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if (v5)
    sub_20C35C614(v5);
}

void sub_20C54356C(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        v4 = sub_20C5435DC(v4 - 136);
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t sub_20C5435DC(uint64_t a1)
{
  uint64_t v2;
  char v4;

  v2 = *(unsigned int *)(a1 + 120);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C53C000[v2])(&v4, a1);
  *(_DWORD *)(a1 + 120) = -1;
  return a1;
}

void sub_20C543634(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v6;

  v3 = *(_QWORD *)(a2 + 24);
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a2 + 20));
  sub_20BFD265C((_DWORD *)(a2 + 16));
  v6 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a2 + 8);
  if (v6)
    sub_20C35C614(v6);
}

uint64_t sub_20C543698(uint64_t a1, uint64_t a2)
{
  return sub_20C373B34(a2);
}

uint64_t sub_20C5436A0(uint64_t a1, uint64_t a2)
{
  _QWORD *i;

  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  sub_20BDEC6E0(a1, *(_QWORD *)(a2 + 8));
  for (i = *(_QWORD **)(a2 + 16); i; i = (_QWORD *)*i)
    sub_20C543714(a1, (uint64_t)(i + 2), (uint64_t)(i + 2));
  return a1;
}

void sub_20C5436FC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C543484(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C543714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  uint64_t **v10;
  uint64_t *i;
  unint64_t v12;
  float v13;
  float v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t v17;
  size_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t *v22;
  char v23;

  v22 = 0;
  v23 = 0;
  sub_20C3B0C60((uint64_t)&v22, (unsigned int *)a2, (_QWORD *)(a2 + 8), (unsigned int *)(a2 + 16), (_QWORD *)(a2 + 24));
  v7 = bswap64(0x9E3779B97F4A7C55 * (_QWORD)v22);
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      v3 = v7;
      if (v7 >= v8)
        v3 = v7 % v8;
    }
    else
    {
      v3 = (v8 - 1) & v7;
    }
    v10 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v3);
    if (v10)
    {
      for (i = *v10; i; i = (uint64_t *)*i)
      {
        v12 = i[1];
        if (v12 == v7)
        {
          if (*((_DWORD *)i + 4) == *(_DWORD *)a2
            && i[3] == *(_QWORD *)(a2 + 8)
            && i[4] == *(_QWORD *)(a2 + 16)
            && (i[5] & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)(a2 + 24) & 0xFFFFFFFFFFFFFFF8))
          {
            return i;
          }
        }
        else
        {
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= v8)
              v12 %= v8;
          }
          else
          {
            v12 &= v8 - 1;
          }
          if (v12 != v3)
            break;
        }
      }
    }
  }
  sub_20C5439D8(a1, v7, a3, (uint64_t)&v22);
  v13 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    v15 = 1;
    if (v8 >= 3)
      v15 = (v8 & (v8 - 1)) != 0;
    v16 = v15 | (2 * v8);
    v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17)
      v18 = v17;
    else
      v18 = v16;
    sub_20BDEC6E0(a1, v18);
    v8 = *(_QWORD *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8)
        v3 = v7 % v8;
      else
        v3 = v7;
    }
    else
    {
      v3 = (v8 - 1) & v7;
    }
  }
  v19 = *(uint64_t **)(*(_QWORD *)a1 + 8 * v3);
  if (v19)
  {
    *v22 = *v19;
    *v19 = (uint64_t)v22;
  }
  else
  {
    *v22 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v22;
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v3) = a1 + 16;
    if (*v22)
    {
      v20 = *(_QWORD *)(*v22 + 8);
      if ((v8 & (v8 - 1)) != 0)
      {
        if (v20 >= v8)
          v20 %= v8;
      }
      else
      {
        v20 &= v8 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v20) = v22;
    }
  }
  i = v22;
  v22 = 0;
  ++*(_QWORD *)(a1 + 24);
  sub_20C543DB0((uint64_t)&v22, 0);
  return i;
}

void sub_20C5439C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C543DB0((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C5439D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;

  v7 = a1 + 16;
  v8 = operator new(0xD8uLL);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *v8 = 0;
  v8[1] = a2;
  result = sub_20C543A4C((uint64_t)(v8 + 2), a3);
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_20C543A34(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C543DB0(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C543A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 48);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  sub_20BFD6E54((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_20BFD6EA4((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  if ((v7 & 7) != 0)
  {
    v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 2, v8));
    if ((v9 & 1) == 0)
      *(_QWORD *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  sub_20C543B58((_QWORD *)(a1 + 32), *(_QWORD *)(a2 + 32), *(_QWORD *)(a2 + 40), 0xF0F0F0F0F0F0F0F1 * ((uint64_t)(*(_QWORD *)(a2 + 40) - *(_QWORD *)(a2 + 32)) >> 3));
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v10 = *(_OWORD *)(a2 + 80);
  v11 = *(_OWORD *)(a2 + 96);
  v12 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v12;
  *(_OWORD *)(a1 + 80) = v10;
  *(_OWORD *)(a1 + 96) = v11;
  v13 = *(_OWORD *)(a2 + 144);
  v14 = *(_OWORD *)(a2 + 160);
  v15 = *(_OWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v14;
  *(_OWORD *)(a1 + 176) = v15;
  *(_OWORD *)(a1 + 144) = v13;
  return a1;
}

void sub_20C543B44(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C35C2E0(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C543B58(_QWORD *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;

  if (a4)
  {
    v6 = result;
    sub_20C543BDC(result, a4);
    result = (_QWORD *)sub_20C543C2C((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_20C543BBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  sub_20C54356C(&a9);
  _Unwind_Resume(a1);
}

char *sub_20C543BDC(_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >= 0x1E1E1E1E1E1E1E2)
    sub_20BDDF694();
  result = (char *)sub_20C381580((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[136 * v4];
  return result;
}

uint64_t sub_20C543C2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  int v9;

  if (a2 != a3)
  {
    v7 = 0;
    do
    {
      v8 = sub_20C543CC8(a4 + v7, a2 + v7);
      v9 = *(_DWORD *)(a2 + v7 + 128);
      *(_BYTE *)(v8 + 132) = *(_BYTE *)(a2 + v7 + 132);
      *(_DWORD *)(v8 + 128) = v9;
      v7 += 136;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_20C543CA4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  if (v2)
  {
    v4 = v1 - 136;
    do
    {
      sub_20C5435DC(v4 + v2);
      v2 -= 136;
    }
    while (v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C543CC8(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = 0;
  *(_DWORD *)(a1 + 120) = -1;
  sub_20C543D0C(a1, a2);
  return a1;
}

void sub_20C543CF8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C5435DC(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C543D0C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v3 = result;
  v4 = *(unsigned int *)(result + 120);
  if ((_DWORD)v4 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_24C53C000[v4])(&v7, result);
  *(_DWORD *)(v3 + 120) = -1;
  v5 = *(unsigned int *)(a2 + 120);
  if ((_DWORD)v5 != -1)
  {
    result = ((uint64_t (*)(char *, uint64_t, uint64_t))*(&off_24C53C010 + v5))(&v6, v3, a2);
    *(_DWORD *)(v3 + 120) = v5;
  }
  return result;
}

uint64_t sub_20C543D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20C37FE20(a2, a3);
}

uint64_t sub_20C543DA4(int a1, pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *this, pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *a3)
{
  return pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::UsdAttributeQuery(this, a3);
}

void sub_20C543DB0(uint64_t a1, uint64_t a2)
{
  void *v2;

  v2 = *(void **)a1;
  *(_QWORD *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      sub_20C5434F8((uint64_t)v2 + 16);
    operator delete(v2);
  }
}

void sub_20C543DF4(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t i;
  _QWORD *v8;
  BOOL v9;
  _QWORD *v10;
  BOOL v11;
  _QWORD v12[2];

  v4 = a2;
  v6 = a1[1];
  if (v6)
  {
    for (i = 0; i != v6; ++i)
      *(_QWORD *)(*a1 + 8 * i) = 0;
    v8 = (_QWORD *)a1[2];
    a1[2] = 0;
    a1[3] = 0;
    if (v8)
      v9 = a2 == a3;
    else
      v9 = 1;
    if (v9)
    {
      v10 = v8;
    }
    else
    {
      do
      {
        v12[0] = v8 + 2;
        v12[1] = v8 + 6;
        sub_20C543F94(v12, (uint64_t)(v4 + 2));
        v10 = (_QWORD *)*v8;
        sub_20C543F00(a1, (uint64_t)v8);
        v4 = (_QWORD *)*v4;
        if (v10)
          v11 = v4 == a3;
        else
          v11 = 1;
        v8 = v10;
      }
      while (!v11);
    }
    sub_20C5434BC((uint64_t)a1, v10);
  }
  while (v4 != a3)
  {
    sub_20C544A78(a1, (uint64_t)(v4 + 2));
    v4 = (_QWORD *)*v4;
  }
}

void sub_20C543ED0(void *a1)
{
  uint64_t v1;
  _QWORD *v2;

  __cxa_begin_catch(a1);
  sub_20C5434BC(v1, v2);
  __cxa_rethrow();
}

void sub_20C543EEC(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_20C543F00(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  char v9;

  v4 = a2 + 16;
  v8 = 0;
  v9 = 0;
  sub_20C3B0C60((uint64_t)&v8, (unsigned int *)(a2 + 16), (_QWORD *)(a2 + 24), (unsigned int *)(a2 + 32), (_QWORD *)(a2 + 40));
  v5 = bswap64(0x9E3779B97F4A7C55 * v8);
  *(_QWORD *)(a2 + 8) = v5;
  v6 = (_QWORD *)sub_20C54466C((uint64_t)a1, v5, v4);
  sub_20BEC5B54(a1, (_QWORD *)a2, v6);
  return a2;
}

_QWORD *sub_20C543F94(_QWORD *a1, uint64_t a2)
{
  _DWORD *v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v4 = (_DWORD *)*a1;
  *(_DWORD *)*a1 = *(_DWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 48);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)*((_QWORD *)v4 + 1);
  *((_QWORD *)v4 + 1) = v5;
  if (v8)
    sub_20C35C614(v8);
  sub_20C01A074(v4 + 4, (_DWORD *)(a2 + 16));
  sub_20C01A0C8(v4 + 5, (_DWORD *)(a2 + 20));
  sub_20BF32220((_QWORD *)v4 + 3, (_QWORD *)(a2 + 24));
  v9 = a1[1];
  if (v9 != a2 + 32)
    sub_20C544084(a1[1], *(_QWORD *)(a2 + 32), *(_QWORD *)(a2 + 40), 0xF0F0F0F0F0F0F0F1 * ((uint64_t)(*(_QWORD *)(a2 + 40) - *(_QWORD *)(a2 + 32)) >> 3));
  *(_BYTE *)(v9 + 24) = *(_BYTE *)(a2 + 56);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(a2 + 64);
  v10 = *(_OWORD *)(a2 + 80);
  v11 = *(_OWORD *)(a2 + 96);
  v12 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(v9 + 80) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v9 + 96) = v12;
  *(_OWORD *)(v9 + 48) = v10;
  *(_OWORD *)(v9 + 64) = v11;
  v13 = *(_OWORD *)(a2 + 144);
  v14 = *(_OWORD *)(a2 + 160);
  v15 = *(_OWORD *)(a2 + 176);
  *(_BYTE *)(v9 + 160) = *(_BYTE *)(a2 + 192);
  *(_OWORD *)(v9 + 128) = v14;
  *(_OWORD *)(v9 + 144) = v15;
  *(_OWORD *)(v9 + 112) = v13;
  return a1;
}

uint64_t sub_20C544084(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = a1 + 16;
  v9 = *(void **)a1;
  if (0xF0F0F0F0F0F0F0F1 * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 3) < a4)
  {
    sub_20C5441EC((void **)a1);
    if (a4 > 0x1E1E1E1E1E1E1E1)
      sub_20BDDF694();
    v10 = 0xE1E1E1E1E1E1E1E2 * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 3);
    if (v10 <= a4)
      v10 = a4;
    if (0xF0F0F0F0F0F0F0F1 * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 3) >= 0xF0F0F0F0F0F0F0)
      v11 = 0x1E1E1E1E1E1E1E1;
    else
      v11 = v10;
    sub_20C543BDC((_QWORD *)a1, v11);
    result = sub_20C543C2C(v8, a2, a3, *(_QWORD *)(a1 + 8));
    goto LABEL_11;
  }
  if (0xF0F0F0F0F0F0F0F1 * ((uint64_t)(*(_QWORD *)(a1 + 8) - (_QWORD)v9) >> 3) < a4)
  {
    v13 = a2 + 8 * ((uint64_t)(*(_QWORD *)(a1 + 8) - (_QWORD)v9) >> 3);
    sub_20C544248(a2, v13, (uint64_t)v9);
    result = sub_20C543C2C(v8, v13, a3, *(_QWORD *)(a1 + 8));
LABEL_11:
    *(_QWORD *)(a1 + 8) = result;
    return result;
  }
  sub_20C544248(a2, a3, (uint64_t)v9);
  v15 = v14;
  result = *(_QWORD *)(a1 + 8);
  if (result != v14)
  {
    do
      result = sub_20C5435DC(result - 136);
    while (result != v15);
  }
  *(_QWORD *)(a1 + 8) = v15;
  return result;
}

void sub_20C5441DC(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_20C5441E4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_20C5441EC(void **a1)
{
  void *v1;
  uint64_t v3;
  void *v4;

  v1 = *a1;
  if (*a1)
  {
    v3 = (uint64_t)a1[1];
    v4 = v1;
    if ((void *)v3 != v1)
    {
      do
        v3 = sub_20C5435DC(v3 - 136);
      while ((void *)v3 != v1);
      v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

uint64_t sub_20C544248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  int v6;

  v4 = a1;
  if (a1 == a2)
    return a1;
  v5 = a2;
  do
  {
    sub_20C5442B8(a3, v4);
    v6 = *(_DWORD *)(v4 + 128);
    *(_BYTE *)(a3 + 132) = *(_BYTE *)(v4 + 132);
    *(_DWORD *)(a3 + 128) = v6;
    a3 += 136;
    v4 += 136;
  }
  while (v4 != v5);
  return v5;
}

uint64_t sub_20C5442B8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = result;
  v3 = *(unsigned int *)(result + 120);
  v4 = *(unsigned int *)(a2 + 120);
  if ((_DWORD)v3 == -1)
  {
    if ((_DWORD)v4 == -1)
      return result;
  }
  else if ((_DWORD)v4 == -1)
  {
    result = ((uint64_t (*)(char *, uint64_t, uint64_t))off_24C53C000[v3])(&v6, result, a2);
    *(_DWORD *)(v2 + 120) = -1;
    return result;
  }
  v5 = result;
  return ((uint64_t (*)(uint64_t *, uint64_t, uint64_t))off_24C53C020[v4])(&v5, result, a2);
}

void sub_20C544344(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_20C544354(*a1, a2, a3);
}

uint64_t sub_20C54434C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_20C544568(*a1, a2, a3);
}

void sub_20C544354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  uint64_t v9[2];

  if (*(_DWORD *)(a1 + 120))
  {
    v9[0] = a1;
    v9[1] = a3;
    sub_20C5443F4(v9);
  }
  else
  {
    *(_DWORD *)a2 = *(_DWORD *)a3;
    v5 = *(_QWORD *)(a3 + 8);
    if (v5)
    {
      v6 = (unint64_t *)(v5 + 48);
      do
        v7 = __ldxr(v6);
      while (__stxr(v7 + 1, v6));
    }
    v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a2 + 8);
    *(_QWORD *)(a2 + 8) = v5;
    if (v8)
      sub_20C35C614(v8);
    sub_20C01A074((int *)(a2 + 16), (_DWORD *)(a3 + 16));
    sub_20C01A0C8((int *)(a2 + 20), (_DWORD *)(a3 + 20));
    sub_20BF32220((_QWORD *)(a2 + 24), (_QWORD *)(a3 + 24));
  }
}

void sub_20C5443F4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  unsigned int v10;
  int v11;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v12;
  int v13;
  int v14;
  uint64_t v15;

  v1 = *a1;
  v2 = a1[1];
  v11 = *(_DWORD *)v2;
  v3 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(v2 + 8);
  v12 = v3;
  if (v3)
  {
    v4 = (unint64_t *)((char *)v3 + 48);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  sub_20BFD6E54(&v13, (_DWORD *)(v2 + 16));
  sub_20BFD6EA4(&v14, (_DWORD *)(v2 + 20));
  v6 = *(_QWORD *)(v2 + 24);
  v15 = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      v15 &= 0xFFFFFFFFFFFFFFF8;
  }
  sub_20C544500(v1, (uint64_t)&v11);
  if ((v15 & 7) != 0)
  {
    v9 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v14);
  sub_20BFD265C(&v13);
  if (v12)
    sub_20C35C614(v12);
}

void sub_20C5444EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C372B54((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C544500(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  char v6;

  v4 = *(unsigned int *)(a1 + 120);
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, uint64_t))off_24C53C000[v4])(&v6, a1);
  *(_DWORD *)(a1 + 120) = -1;
  result = sub_20C38579C(a1, a2);
  *(_DWORD *)(a1 + 120) = 0;
  return result;
}

uint64_t sub_20C544568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD v4[2];

  if (*(_DWORD *)(a1 + 120) == 1)
    return pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::operator=(a2, a3);
  v4[0] = a1;
  v4[1] = a3;
  return sub_20C5445AC((uint64_t)v4);
}

uint64_t sub_20C5445AC(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[120];

  v1 = *(_QWORD *)a1;
  pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::UsdAttributeQuery((pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *)v3, *(const pxrInternal__aapl__pxrReserved__::UsdAttributeQuery **)(a1 + 8));
  sub_20C544600(v1, (uint64_t)v3);
  return sub_20C373B34((uint64_t)v3);
}

void sub_20C5445EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C373B34((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C544600(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  char v6;

  v4 = *(unsigned int *)(a1 + 120);
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, uint64_t))off_24C53C000[v4])(&v6, a1);
  *(_DWORD *)(a1 + 120) = -1;
  result = sub_20C373D44(a1, a2);
  *(_DWORD *)(a1 + 120) = 1;
  return result;
}

uint64_t sub_20C54466C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v6;
  float v7;
  float v8;
  uint64_t v9;
  _BOOL8 v10;
  size_t v11;
  unint64_t v12;
  size_t v13;
  uint8x8_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t result;
  unint64_t v19;
  unint64_t v20;
  _BOOL4 v21;
  int v22;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v8 = *(float *)(a1 + 32);
  if (!v6 || (float)(v8 * (float)v6) < v7)
  {
    v9 = 2 * v6;
    v10 = v6 < 3 || (v6 & (v6 - 1)) != 0;
    v11 = v10 | v9;
    v12 = vcvtps_u32_f32(v7 / v8);
    if (v11 <= v12)
      v13 = v12;
    else
      v13 = v11;
    sub_20C5447F4(a1, v13);
    v6 = *(_QWORD *)(a1 + 8);
  }
  v14 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
  v14.i16[0] = vaddlv_u8(v14);
  if (v14.u32[0] > 1uLL)
  {
    v15 = a2;
    if (v6 <= a2)
      v15 = a2 % v6;
  }
  else
  {
    v15 = (v6 - 1) & a2;
  }
  v16 = *(_QWORD *)(*(_QWORD *)a1 + 8 * v15);
  if (!v16)
    return 0;
  v17 = 0;
  do
  {
    result = v16;
    v16 = *(_QWORD *)v16;
    if (!v16)
      break;
    v19 = *(_QWORD *)(v16 + 8);
    if (v14.u32[0] > 1uLL)
    {
      v20 = *(_QWORD *)(v16 + 8);
      if (v19 >= v6)
        v20 = v19 % v6;
    }
    else
    {
      v20 = v19 & (v6 - 1);
    }
    if (v20 != v15)
      break;
    v21 = v19 == a2
       && *(_DWORD *)(v16 + 16) == *(_DWORD *)a3
       && *(_QWORD *)(v16 + 24) == *(_QWORD *)(a3 + 8)
       && *(_QWORD *)(v16 + 32) == *(_QWORD *)(a3 + 16)
       && (*(_QWORD *)(v16 + 40) & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)(a3 + 24) & 0xFFFFFFFFFFFFFFF8);
    v22 = v17 & !v21;
    v17 |= v21;
  }
  while (v22 != 1);
  return result;
}

void sub_20C5447F4(uint64_t a1, size_t __n)
{
  size_t prime;
  int8x8_t v4;
  unint64_t v5;
  uint8x8_t v6;
  uint64_t v7;

  if (__n == 1)
  {
    prime = 2;
  }
  else
  {
    prime = __n;
    if ((__n & (__n - 1)) != 0)
      prime = std::__next_prime(__n);
  }
  v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(_QWORD *)&v4)
    goto LABEL_16;
  if (prime < *(_QWORD *)&v4)
  {
    v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(_QWORD *)&v4 < 3uLL || (v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      v5 = std::__next_prime(v5);
    }
    else
    {
      v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2)
        v5 = v7;
    }
    if (prime <= v5)
      prime = v5;
    if (prime < *(_QWORD *)&v4)
LABEL_16:
      sub_20C5448D0(a1, prime);
  }
}

void sub_20C5448D0(uint64_t a1, unint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t **v7;
  unint64_t v8;
  uint8x8_t v9;
  void *v10;
  uint64_t *i;
  unint64_t v12;
  uint64_t *v13;
  _QWORD *v14;

  if (a2)
  {
    if (a2 >> 61)
      sub_20BDDF5B4();
    v4 = operator new(8 * a2);
    v5 = *(void **)a1;
    *(_QWORD *)a1 = v4;
    if (v5)
      operator delete(v5);
    v6 = 0;
    *(_QWORD *)(a1 + 8) = a2;
    do
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    v7 = *(uint64_t ***)(a1 + 16);
    if (v7)
    {
      v8 = (unint64_t)v7[1];
      v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2)
          v8 %= a2;
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v8) = a1 + 16;
      for (i = *v7; *v7; i = *v7)
      {
        v12 = i[1];
        if (v9.u32[0] > 1uLL)
        {
          if (v12 >= a2)
            v12 %= a2;
        }
        else
        {
          v12 &= a2 - 1;
        }
        if (v12 == v8)
        {
          v7 = (uint64_t **)i;
        }
        else
        {
          v13 = i;
          if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v12))
          {
            do
            {
              v14 = v13;
              v13 = (uint64_t *)*v13;
            }
            while (v13
                 && *((_DWORD *)i + 4) == *((_DWORD *)v13 + 4)
                 && i[3] == v13[3]
                 && i[4] == v13[4]
                 && (i[5] & 0xFFFFFFFFFFFFFFF8) == (v13[5] & 0xFFFFFFFFFFFFFFF8));
            *v7 = v13;
            *v14 = **(_QWORD **)(*(_QWORD *)a1 + 8 * v12);
            **(_QWORD **)(*(_QWORD *)a1 + 8 * v12) = i;
          }
          else
          {
            *(_QWORD *)(*(_QWORD *)a1 + 8 * v12) = v7;
            v7 = (uint64_t **)i;
            v8 = v12;
          }
        }
      }
    }
  }
  else
  {
    v10 = *(void **)a1;
    *(_QWORD *)a1 = 0;
    if (v10)
      operator delete(v10);
    *(_QWORD *)(a1 + 8) = 0;
  }
}

uint64_t sub_20C544A78(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5[3];

  sub_20C544AE0((uint64_t)a1, a2, (uint64_t)v5);
  v3 = sub_20C543F00(a1, v5[0]);
  v5[0] = 0;
  sub_20C543DB0((uint64_t)v5, 0);
  return v3;
}

void sub_20C544AC8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C543DB0((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C544AE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  void *v6;
  uint64_t result;
  uint64_t v8;
  char v9;

  v5 = a1 + 16;
  v6 = operator new(0xD8uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  sub_20C543A4C((uint64_t)v6 + 16, a2);
  *(_BYTE *)(a3 + 16) = 1;
  v8 = 0;
  v9 = 0;
  result = sub_20C3B0C60((uint64_t)&v8, (unsigned int *)v6 + 4, (_QWORD *)v6 + 3, (unsigned int *)v6 + 8, (_QWORD *)v6 + 5);
  *((_QWORD *)v6 + 1) = bswap64(0x9E3779B97F4A7C55 * v8);
  return result;
}

void sub_20C544B84(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C543DB0(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C544B9C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  if (!v2 || (v3 = *(_QWORD *)(v2 + 56), (v3 & 0x800) != 0))
  {
    pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(*(pxrInternal__aapl__pxrReserved__ **)(a1 + 8), a2);
    v3 = *(_QWORD *)(v2 + 56);
  }
  return (v3 >> 2) & 1;
}

_QWORD *sub_20C544BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  unint64_t v4;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  float v15;
  float v16;
  _BOOL8 v17;
  unint64_t v18;
  unint64_t v19;
  size_t v20;
  _QWORD *v21;
  unint64_t v22;
  _QWORD *v24;
  char v25;

  v24 = 0;
  v25 = 0;
  sub_20C544EE4((uint64_t)&v24, a2);
  v8 = bswap64(0x9E3779B97F4A7C55 * (_QWORD)v24);
  v9 = *(_QWORD *)(a1 + 8);
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    v11 = v10.u32[0];
    if (v10.u32[0] > 1uLL)
    {
      v4 = v8;
      if (v8 >= v9)
        v4 = v8 % v9;
    }
    else
    {
      v4 = (v9 - 1) & v8;
    }
    v12 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
    if (v12)
    {
      v13 = (_QWORD *)*v12;
      if (*v12)
      {
        do
        {
          v14 = v13[1];
          if (v14 == v8)
          {
            if (sub_20C544F44((uint64_t)(v13 + 2), a2))
              return v13;
          }
          else
          {
            if (v11 > 1)
            {
              if (v14 >= v9)
                v14 %= v9;
            }
            else
            {
              v14 &= v9 - 1;
            }
            if (v14 != v4)
              break;
          }
          v13 = (_QWORD *)*v13;
        }
        while (v13);
      }
    }
  }
  sub_20C544E78(a1, v8, a4, (uint64_t)&v24);
  v15 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v16 = *(float *)(a1 + 32);
  if (!v9 || (float)(v16 * (float)v9) < v15)
  {
    v17 = 1;
    if (v9 >= 3)
      v17 = (v9 & (v9 - 1)) != 0;
    v18 = v17 | (2 * v9);
    v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19)
      v20 = v19;
    else
      v20 = v18;
    sub_20BDEC6E0(a1, v20);
    v9 = *(_QWORD *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9)
        v4 = v8 % v9;
      else
        v4 = v8;
    }
    else
    {
      v4 = (v9 - 1) & v8;
    }
  }
  v21 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v21)
  {
    *v24 = *v21;
    *v21 = v24;
  }
  else
  {
    *v24 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v24;
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = a1 + 16;
    if (*v24)
    {
      v22 = *(_QWORD *)(*v24 + 8);
      if ((v9 & (v9 - 1)) != 0)
      {
        if (v22 >= v9)
          v22 %= v9;
      }
      else
      {
        v22 &= v9 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v22) = v24;
    }
  }
  v13 = v24;
  v24 = 0;
  ++*(_QWORD *)(a1 + 24);
  sub_20C54509C((uint64_t)&v24, 0);
  return v13;
}

void sub_20C544E60(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C54509C((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C544E78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;

  v7 = a1 + 16;
  v8 = operator new(0x78uLL);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *v8 = 0;
  v8[1] = a2;
  result = sub_20C544FB0((uint64_t)(v8 + 2), *a3);
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_20C544ECC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C54509C(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C544EE4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;

  result = sub_20C3B0C60(a1, (unsigned int *)a2, (_QWORD *)(a2 + 8), (unsigned int *)(a2 + 16), (_QWORD *)(a2 + 24));
  v5 = *(_QWORD *)(a2 + 32) & 0xFFFFFFFFFFFFFFF8;
  if (*(_BYTE *)(a1 + 8))
    v5 += (*(_QWORD *)a1 + v5 + (*(_QWORD *)a1 + v5) * (*(_QWORD *)a1 + v5)) >> 1;
  else
    *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)a1 = v5;
  return result;
}

BOOL sub_20C544F44(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)a1 == *(_DWORD *)a2
      && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
      && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16)
      && (*(_QWORD *)(a1 + 24) & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)(a2 + 24) & 0xFFFFFFFFFFFFFFF8)
      && (*(_QWORD *)(a1 + 32) & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)(a2 + 32) & 0xFFFFFFFFFFFFFFF8);
}

uint64_t sub_20C544FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 48);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  sub_20BFD6E54((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_20BFD6EA4((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  if ((v7 & 7) != 0)
  {
    v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 2, v8));
    if ((v9 & 1) == 0)
      *(_QWORD *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  v10 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v10;
  if ((v10 & 7) != 0)
  {
    v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 2, v11));
    if ((v12 & 1) == 0)
      *(_QWORD *)(a1 + 32) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 40) = a1 + 48;
  *(_WORD *)(a1 + 96) = 0;
  *(_BYTE *)(a1 + 98) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0;
  *(_BYTE *)(a1 + 88) = 0;
  return a1;
}

void sub_20C54509C(uint64_t a1, uint64_t a2)
{
  void *v2;

  v2 = *(void **)a1;
  *(_QWORD *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      sub_20C5450E0((uint64_t)v2 + 16);
    operator delete(v2);
  }
}

void sub_20C5450E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v12;

  v2 = a1 + 40;
  v3 = *(_QWORD *)(a1 + 80);
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 64));
  sub_20BF2B200(v2, *(_QWORD **)(a1 + 48));
  v6 = *(_QWORD *)(a1 + 32);
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stlxr(v8 - 2, v7));
  }
  v9 = *(_QWORD *)(a1 + 24);
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)(v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stlxr(v11 - 2, v10));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_20BFD265C((_DWORD *)(a1 + 16));
  v12 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if (v12)
    sub_20C35C614(v12);
}

uint64_t sub_20C54519C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 48);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  sub_20BFD6E54((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_20BFD6EA4((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  v9 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v9;
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)(v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 2, v10));
    if ((v11 & 1) == 0)
      *(_QWORD *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  v12 = *a3;
  *(_QWORD *)(a1 + 32) = *a3;
  if ((v12 & 7) != 0)
  {
    v13 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 2, v13));
    if ((v14 & 1) == 0)
      *(_QWORD *)(a1 + 32) &= 0xFFFFFFFFFFFFFFF8;
  }
  return a1;
}

uint64_t sub_20C545274(uint64_t a1)
{
  void *v2;

  sub_20C5452AC(a1, *(_QWORD **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_20C5452AC(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;

  if (a2)
  {
    v2 = a2;
    do
    {
      v3 = (_QWORD *)*v2;
      sub_20C5452E8((uint64_t)(v2 + 2));
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

void sub_20C5452E8(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *(_QWORD *)(a1 + 24);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_20BFD265C((_DWORD *)(a1 + 16));
  v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if (v8)
    sub_20C35C614(v8);
}

_QWORD *sub_20C545370(uint64_t a1)
{
  uint64_t ***v1;
  uint64_t **v2;
  uint64_t **v3;
  unint64_t *v4;
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *v5;
  uint64_t **v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  unint64_t *v8;
  unint64_t v9;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v10;
  uint64_t *v11;
  unsigned int *v12;
  unsigned int v13;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v15;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v16;
  unsigned int *v17;
  unsigned int v18;
  pxrInternal__aapl__pxrReserved__::UsdStage *v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int *v24;
  unsigned int v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  unsigned int *v29;
  unsigned int v30;
  unsigned int *v31;
  unsigned int v32;
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *v33;
  unsigned int *v34;
  unsigned int v35;
  uint64_t **v37;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v38;
  int v39;
  int v40;
  uint64_t *v41;
  uint64_t v42;
  __int128 v43;
  _QWORD v44[14];
  int v45;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v46;
  int v47;
  int v48;
  uint64_t *v49;
  unint64_t v50[12];
  _QWORD v51[2];

  v1 = *(uint64_t ****)(a1 + 8);
  v2 = *v1;
  v3 = v1[1];
  if (**v1 != (*v1)[1])
  {
    v37 = v1[1];
    sub_20C5458A8((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache **)&v37, v2);
  }
  v4 = sub_20C5477B0(v50);
  LOBYTE(v37) = 0;
  v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *)sub_20BEB5B80(v4, &v37);
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::Swap(v5, (pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *)(v3 + 48));
  v6 = v1[2];
  LODWORD(v37) = *(_DWORD *)v6;
  v7 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v6[1];
  v38 = v7;
  if (v7)
  {
    v8 = (unint64_t *)((char *)v7 + 48);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  sub_20BFD6E54(&v39, (_DWORD *)v6 + 4);
  sub_20BFD6EA4(&v40, (_DWORD *)v6 + 5);
  v11 = v6[3];
  v41 = v11;
  if ((v11 & 7) != 0)
  {
    v12 = (unsigned int *)((unint64_t)v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 2, v12));
    if ((v13 & 1) == 0)
      v41 = (uint64_t *)((unint64_t)v41 & 0xFFFFFFFFFFFFFFF8);
  }
  while (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v37, v10))
  {
    if (sub_20C5431B4((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v37))
    {
      v45 = (int)v37;
      v46 = v38;
      v38 = 0;
      v47 = v39;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=(&v39);
      v48 = v40;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=(&v40);
      v49 = v41;
      v41 = 0;
      goto LABEL_30;
    }
    sub_20C3AD22C((uint64_t)&v37, (uint64_t)&v43);
    LODWORD(v37) = v43;
    v15 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)*((_QWORD *)&v43 + 1);
    *((_QWORD *)&v43 + 1) = 0;
    v16 = v38;
    v38 = v15;
    if (v16)
      sub_20C35C614(v16);
    sub_20BFD3EBC(&v39, (int *)v44);
    sub_20BFD3F10(&v40, (int *)v44 + 1);
    if ((v41 & 7) != 0)
    {
      v17 = (unsigned int *)((unint64_t)v41 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
    v41 = (uint64_t *)v44[1];
    v44[1] = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v44 + 1);
    sub_20BFD265C(v44);
    if (*((_QWORD *)&v43 + 1))
      sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v43 + 1));
  }
  pxrInternal__aapl__pxrReserved__::UsdObject::GetStage((pxrInternal__aapl__pxrReserved__::UsdObject *)v6, v14, &v43);
  v19 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C348E08((uint64_t *)&v43);
  pxrInternal__aapl__pxrReserved__::UsdStage::GetPseudoRoot(v19, (uint64_t)&v45);
  v20 = *((_QWORD *)&v43 + 1);
  if (*((_QWORD *)&v43 + 1))
  {
    v21 = (unsigned int *)(*((_QWORD *)&v43 + 1) + 8);
    do
    {
      v22 = __ldxr(v21);
      v23 = v22 - 1;
    }
    while (__stlxr(v23, v21));
    if (!v23)
      (*(void (**)(uint64_t))(*(_QWORD *)v20 + 8))(v20);
  }
  if ((v41 & 7) != 0)
  {
    v24 = (unsigned int *)((unint64_t)v41 & 0xFFFFFFFFFFFFFFF8);
    do
      v25 = __ldxr(v24);
    while (__stlxr(v25 - 2, v24));
  }
LABEL_30:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v40);
  sub_20BFD265C(&v39);
  if (v38)
    sub_20C35C614(v38);
  v43 = 0u;
  memset(v44, 0, sizeof(v44));
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalToWorldTransform((pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *)(v3 + 48), (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v45, (uint64_t)&v37);
  pxrInternal__aapl__pxrReserved__::GfMatrix4d::GetInverse((double *)&v37, 0, 0.0, (uint64_t)&v43);
  sub_20C54810C((uint64_t)&v37, (uint64_t)v1[3], &v43, (uint64_t)v3, (uint64_t)v50);
  v26 = v3[32];
  v51[0] = 0;
  v51[1] = v26;
  v27 = tbb::internal::allocate_additional_child_of_proxy::allocate((tbb::internal::allocate_additional_child_of_proxy *)v51, 0xC8uLL);
  v28 = sub_20C54798C(v27, (uint64_t)&v37, (uint64_t)(v3 + 33));
  (***(void (****)(_QWORD, unint64_t, uint64_t))(v28 - 40))(*(_QWORD *)(v28 - 40), v27, v27 - 8);
  if ((v42 & 7) != 0)
  {
    v29 = (unsigned int *)(v42 & 0xFFFFFFFFFFFFFFF8);
    do
      v30 = __ldxr(v29);
    while (__stlxr(v30 - 2, v29));
  }
  if ((v41 & 7) != 0)
  {
    v31 = (unsigned int *)((unint64_t)v41 & 0xFFFFFFFFFFFFFFF8);
    do
      v32 = __ldxr(v31);
    while (__stlxr(v32 - 2, v31));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v40);
  sub_20BFD265C(&v39);
  if (v38)
    sub_20C35C614(v38);
  pxrInternal__aapl__pxrReserved__::WorkDispatcher::Wait((pxrInternal__aapl__pxrReserved__::WorkDispatcher *)v3);
  LOBYTE(v37) = 0;
  v33 = (pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *)sub_20BEB5B80(v50, &v37);
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::Swap(v33, (pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *)(v3 + 48));
  if ((v49 & 7) != 0)
  {
    v34 = (unsigned int *)((unint64_t)v49 & 0xFFFFFFFFFFFFFFF8);
    do
      v35 = __ldxr(v34);
    while (__stlxr(v35 - 2, v34));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v48);
  sub_20BFD265C(&v47);
  if (v46)
    sub_20C35C614(v46);
  return sub_20C547C20(v50);
}

void sub_20C545758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, pxrInternal__aapl__pxrReserved__::Usd_PrimData *a11, uint64_t a12, uint64_t a13)
{
  _DWORD *v13;
  _DWORD *v14;
  uint64_t v15;
  unsigned int *v17;
  unsigned int v18;

  if ((a13 & 7) != 0)
  {
    v17 = (unsigned int *)(a13 & 0xFFFFFFFFFFFFFFF8);
    do
      v18 = __ldxr(v17);
    while (__stlxr(v18 - 2, v17));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v14);
  sub_20BFD265C(v13);
  if (a11)
    sub_20C35C614(a11);
  sub_20C547C20((_QWORD *)(v15 - 192));
  _Unwind_Resume(a1);
}

uint64_t sub_20C5458A8(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache **a1, uint64_t **a2)
{
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *i;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *v7;
  pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *v9;
  _QWORD *v10;
  __int128 *v11;
  pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache **v12;
  __int128 v13;
  _QWORD v14[12];
  __int128 v15;
  __int128 v16;
  int v17;

  v15 = 0u;
  v16 = 0u;
  v17 = 1065353216;
  v3 = *a2;
  v4 = a2[1];
  while (v3 != v4)
  {
    sub_20C5459B8(a1, v3, (uint64_t)&v15);
    v3 += 5;
  }
  sub_20C5477B0(v14);
  for (i = (_QWORD *)v16; i; i = (_QWORD *)*i)
  {
    v6 = i[7];
    __dmb(0xBu);
    if (!v6)
    {
      v7 = *a1;
      *(_QWORD *)&v13 = sub_20C545D84;
      *((_QWORD *)&v13 + 1) = 0;
      v11 = &v15;
      v12 = a1;
      v9 = v7;
      v10 = v14;
      sub_20C545C7C((uint64_t)v7, &v13, (uint64_t *)&v12, (uint64_t)(i + 2), (uint64_t *)&v11, (uint64_t *)&v10, (uint64_t *)&v9);
    }
  }
  pxrInternal__aapl__pxrReserved__::WorkDispatcher::Wait(*a1);
  sub_20C547C20(v14);
  return sub_20C54773C((uint64_t)&v15);
}

void sub_20C545988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  sub_20C547C20((uint64_t *)va);
  sub_20C54773C(v7 - 96);
  _Unwind_Resume(a1);
}

void sub_20C5459B8(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache **a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v6;
  char v7;
  char v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int *v15;
  unsigned int v16;
  unint64_t v17;
  uint64_t v18;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *i;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  _OWORD v23[2];
  void **v24;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void **v37;

  memset(v23, 0, sizeof(v23));
  sub_20C54688C((uint64_t)&v24, (uint64_t)a2, (uint64_t)v23);
  sub_20C546988((uint64_t)&v31, (uint64_t)&v24);
  v6 = sub_20C546024(a3, (uint64_t)&v31, (uint64_t)&v31);
  v8 = v7;
  v37 = (void **)&v36;
  sub_20C546730(&v37);
  if ((v35 & 7) != 0)
  {
    v9 = (unsigned int *)(v35 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  if ((v34 & 7) != 0)
  {
    v11 = (unsigned int *)(v34 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stlxr(v12 - 2, v11));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v33 + 1);
  sub_20BFD265C(&v33);
  if (v32)
    sub_20C35C614(v32);
  v37 = (void **)&v30;
  sub_20C546730(&v37);
  if ((v29 & 7) != 0)
  {
    v13 = (unsigned int *)(v29 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  if ((v28 & 7) != 0)
  {
    v15 = (unsigned int *)(v28 & 0xFFFFFFFFFFFFFFF8);
    do
      v16 = __ldxr(v15);
    while (__stlxr(v16 - 2, v15));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v27);
  sub_20BFD265C(&v26);
  if (v25)
    sub_20C35C614(v25);
  v37 = (void **)v23 + 1;
  sub_20C546730(&v37);
  if (v8)
  {
    v31 = 0;
    v32 = 0;
    v33 = 0;
    pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_FindOrCreateEntriesForPrim(*a1, a2, &v31);
    v17 = 0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v32 - v31) >> 3);
    __dmb(0xBu);
    v6[7] = v17;
    v18 = v31;
    for (i = v32; (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v18 != i; v18 += 40)
    {
      sub_20C5459B8(a1, v18, a3);
      *(_QWORD *)&v23[0] = v18;
      v20 = sub_20C546A14(a3, v18, (uint64_t)&unk_20CAC184C, (uint64_t *)v23);
      v21 = v20[9];
      if (v21 >= v20[10])
      {
        v22 = sub_20C548498(v20 + 8, (uint64_t)a2);
      }
      else
      {
        sub_20C546560((uint64_t)(v20 + 10), v21, (uint64_t)a2);
        v22 = v21 + 40;
        v20[9] = v21 + 40;
      }
      v20[9] = v22;
    }
    v24 = (void **)&v31;
    sub_20C546730(&v24);
  }
}

void sub_20C545C10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void **a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  a14 = (void **)&a23;
  sub_20C546730(&a14);
  _Unwind_Resume(a1);
}

void sub_20C545C7C(uint64_t a1, __int128 *a2, uint64_t *a3, uint64_t a4, uint64_t *a5, uint64_t *a6, uint64_t *a7)
{
  uint64_t v11;
  unint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int *v15;
  unsigned int v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v17 = *a2;
  v18 = *a3;
  sub_20C54716C((uint64_t)&v19, a4);
  v11 = *a6;
  v25 = *a5;
  v26 = v11;
  v27 = *a7;
  v12 = sub_20C546E7C(a1, (uint64_t)&v17);
  (***(void (****)(_QWORD, unint64_t, uint64_t))(v12 - 40))(*(_QWORD *)(v12 - 40), v12, v12 - 8);
  if ((v24 & 7) != 0)
  {
    v13 = (unsigned int *)(v24 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  if ((v23 & 7) != 0)
  {
    v15 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
    do
      v16 = __ldxr(v15);
    while (__stlxr(v16 - 2, v15));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_20BFD265C(&v21);
  if (v20)
    sub_20C35C614(v20);
}

void sub_20C545D70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C546DFC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20C545D84(uint64_t *a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;
  unsigned int v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t i;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18[8];
  __int128 v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24[8];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;

  v27 = a4;
  v28 = a3;
  v26 = a5;
  pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)v18, 1.0);
  sub_20C54810C((uint64_t)&v19, a2, v18, *a1, a4);
  pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ResolvePrim(v25, (uint64_t)&v19, (uint64_t)&v19, v24);
  if ((v23 & 7) != 0)
  {
    v8 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
  if ((v22 & 7) != 0)
  {
    v10 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stlxr(v11 - 2, v10));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v21);
  sub_20BFD265C(&v20);
  if (*((_QWORD *)&v19 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v19 + 1));
  v12 = sub_20C547340(v28, a2);
  v13 = v12[8];
  for (i = v12[9]; v13 != i; v13 += 40)
  {
    v15 = sub_20C547340(v28, v13) + 7;
    do
    {
      v16 = __ldaxr(v15);
      v17 = v16 - 1;
    }
    while (__stlxr(v17, v15));
    if (!v17)
    {
      *(_QWORD *)&v19 = sub_20C545D84;
      *((_QWORD *)&v19 + 1) = 0;
      *(_QWORD *)&v18[0] = a1;
      sub_20C547238(v26, &v19, (uint64_t *)v18, v13, (uint64_t *)&v28, &v27, &v26);
    }
  }
}

void sub_20C545EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  sub_20C543404((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C545EF4(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  void **v10;

  v10 = (void **)(a1 + 48);
  sub_20C546730(&v10);
  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *(_QWORD *)(a1 + 24);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_20BFD265C((_DWORD *)(a1 + 16));
  v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if (v8)
    sub_20C35C614(v8);
  return a1;
}

uint64_t sub_20C545F8C(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  void **v10;

  v10 = (void **)(a1 + 48);
  sub_20C546730(&v10);
  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *(_QWORD *)(a1 + 24);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_20BFD265C((_DWORD *)(a1 + 16));
  v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if (v8)
    sub_20C35C614(v8);
  return a1;
}

_QWORD *sub_20C546024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;
  float v14;
  float v15;
  _BOOL8 v16;
  unint64_t v17;
  unint64_t v18;
  size_t v19;
  _QWORD *v20;
  unint64_t v21;
  _QWORD *v23;
  char v24;

  v23 = 0;
  v24 = 0;
  sub_20C544EE4((uint64_t)&v23, a2);
  v7 = bswap64(0x9E3779B97F4A7C55 * (_QWORD)v23);
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    v10 = v9.u32[0];
    if (v9.u32[0] > 1uLL)
    {
      v3 = v7;
      if (v7 >= v8)
        v3 = v7 % v8;
    }
    else
    {
      v3 = (v8 - 1) & v7;
    }
    v11 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
    if (v11)
    {
      v12 = (_QWORD *)*v11;
      if (*v11)
      {
        do
        {
          v13 = v12[1];
          if (v13 == v7)
          {
            if (sub_20C544F44((uint64_t)(v12 + 2), a2))
              return v12;
          }
          else
          {
            if (v10 > 1)
            {
              if (v13 >= v8)
                v13 %= v8;
            }
            else
            {
              v13 &= v8 - 1;
            }
            if (v13 != v3)
              break;
          }
          v12 = (_QWORD *)*v12;
        }
        while (v12);
      }
    }
  }
  sub_20C5462B0(a1, v7, a3, (uint64_t)&v23);
  v14 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v15 = *(float *)(a1 + 32);
  if (!v8 || (float)(v15 * (float)v8) < v14)
  {
    v16 = 1;
    if (v8 >= 3)
      v16 = (v8 & (v8 - 1)) != 0;
    v17 = v16 | (2 * v8);
    v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18)
      v19 = v18;
    else
      v19 = v17;
    sub_20BDEC6E0(a1, v19);
    v8 = *(_QWORD *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8)
        v3 = v7 % v8;
      else
        v3 = v7;
    }
    else
    {
      v3 = (v8 - 1) & v7;
    }
  }
  v20 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v20)
  {
    *v23 = *v20;
    *v20 = v23;
  }
  else
  {
    *v23 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v23;
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v3) = a1 + 16;
    if (*v23)
    {
      v21 = *(_QWORD *)(*v23 + 8);
      if ((v8 & (v8 - 1)) != 0)
      {
        if (v21 >= v8)
          v21 %= v8;
      }
      else
      {
        v21 &= v8 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v21) = v23;
    }
  }
  v12 = v23;
  v23 = 0;
  ++*(_QWORD *)(a1 + 24);
  sub_20C5467B4((uint64_t)&v23, 0);
  return v12;
}

void sub_20C546298(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C5467B4((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C5462B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;

  v7 = a1 + 16;
  v8 = operator new(0x58uLL);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *v8 = 0;
  v8[1] = a2;
  result = sub_20C546324((uint64_t)(v8 + 2), a3);
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_20C54630C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C5467B4(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C546324(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  uint64_t v13;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 48);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  sub_20BFD6E54((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_20BFD6EA4((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  if ((v7 & 7) != 0)
  {
    v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 2, v8));
    if ((v9 & 1) == 0)
      *(_QWORD *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  v10 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v10;
  if ((v10 & 7) != 0)
  {
    v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 2, v11));
    if ((v12 & 1) == 0)
      *(_QWORD *)(a1 + 32) &= 0xFFFFFFFFFFFFFFF8;
  }
  v13 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 40) = v13;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  sub_20C546434((_QWORD *)(a1 + 48), *(_QWORD *)(a2 + 48), *(_QWORD *)(a2 + 56), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a2 + 56) - *(_QWORD *)(a2 + 48)) >> 3));
  return a1;
}

void sub_20C546420(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C540D8C(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C546434(_QWORD *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;

  if (a4)
  {
    v6 = result;
    sub_20BED4B34(result, a4);
    result = (_QWORD *)sub_20C5464B8((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_20C546498(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  sub_20C546730(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C5464B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  _QWORD v9[3];
  char v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a4;
  v11 = a4;
  v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  v10 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      sub_20C546560(a1, v4, v6);
      v6 += 40;
      v4 = v12 + 40;
      v12 += 40;
    }
    while (v6 != a3);
  }
  v10 = 1;
  sub_20C546628((uint64_t)v9);
  return v4;
}

void sub_20C54654C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C546628((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_DWORD *sub_20C546560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  _DWORD *result;
  uint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;

  *(_DWORD *)a2 = *(_DWORD *)a3;
  v5 = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(a2 + 8) = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 48);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  sub_20BFD6E54((_DWORD *)(a2 + 16), (_DWORD *)(a3 + 16));
  result = sub_20BFD6EA4((_DWORD *)(a2 + 20), (_DWORD *)(a3 + 20));
  v9 = *(_QWORD *)(a3 + 24);
  *(_QWORD *)(a2 + 24) = v9;
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)(v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 2, v10));
    if ((v11 & 1) == 0)
      *(_QWORD *)(a2 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  v12 = *(_QWORD *)(a3 + 32);
  *(_QWORD *)(a2 + 32) = v12;
  if ((v12 & 7) != 0)
  {
    v13 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 2, v13));
    if ((v14 & 1) == 0)
      *(_QWORD *)(a2 + 32) &= 0xFFFFFFFFFFFFFFF8;
  }
  return result;
}

uint64_t sub_20C546628(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_20C54665C((uint64_t *)a1);
  return a1;
}

void sub_20C54665C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (uint64_t *)a1[1];
  v1 = (uint64_t *)a1[2];
  v3 = *v1;
  v4 = *v2;
  if (*v1 != *v2)
  {
    v5 = *a1;
    do
    {
      v3 -= 40;
      sub_20C5466AC(v5, v3);
    }
    while (v3 != v4);
  }
}

void sub_20C5466AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v9;

  v3 = *(_QWORD *)(a2 + 32);
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  v6 = *(_QWORD *)(a2 + 24);
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stlxr(v8 - 2, v7));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a2 + 20));
  sub_20BFD265C((_DWORD *)(a2 + 16));
  v9 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a2 + 8);
  if (v9)
    sub_20C35C614(v9);
}

void sub_20C546730(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 40;
        sub_20C5466AC((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_20C5467B4(uint64_t a1, uint64_t a2)
{
  void *v2;

  v2 = *(void **)a1;
  *(_QWORD *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      sub_20C5467F8((uint64_t)v2 + 16);
    operator delete(v2);
  }
}

void sub_20C5467F8(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  void **v9;

  v9 = (void **)(a1 + 48);
  sub_20C546730(&v9);
  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *(_QWORD *)(a1 + 24);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_20BFD265C((_DWORD *)(a1 + 16));
  v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if (v8)
    sub_20C35C614(v8);
}

uint64_t sub_20C54688C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 48);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  sub_20BFD6E54((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_20BFD6EA4((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  v9 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v9;
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)(v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 2, v10));
    if ((v11 & 1) == 0)
      *(_QWORD *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  v12 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v12;
  if ((v12 & 7) != 0)
  {
    v13 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 2, v13));
    if ((v14 & 1) == 0)
      *(_QWORD *)(a1 + 32) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(_QWORD *)(a1 + 40) = *(_QWORD *)a3;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a3 + 8);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a3 + 24);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  return a1;
}

uint64_t sub_20C546988(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  sub_20BFD38A4((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_20BFD38DC((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = 0;
  *(_QWORD *)(a2 + 64) = 0;
  return a1;
}

_QWORD *sub_20C546A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  unint64_t v4;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  float v15;
  float v16;
  _BOOL8 v17;
  unint64_t v18;
  unint64_t v19;
  size_t v20;
  _QWORD *v21;
  unint64_t v22;
  _QWORD *v24;
  char v25;

  v24 = 0;
  v25 = 0;
  sub_20C544EE4((uint64_t)&v24, a2);
  v8 = bswap64(0x9E3779B97F4A7C55 * (_QWORD)v24);
  v9 = *(_QWORD *)(a1 + 8);
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    v11 = v10.u32[0];
    if (v10.u32[0] > 1uLL)
    {
      v4 = v8;
      if (v8 >= v9)
        v4 = v8 % v9;
    }
    else
    {
      v4 = (v9 - 1) & v8;
    }
    v12 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
    if (v12)
    {
      v13 = (_QWORD *)*v12;
      if (*v12)
      {
        do
        {
          v14 = v13[1];
          if (v14 == v8)
          {
            if (sub_20C544F44((uint64_t)(v13 + 2), a2))
              return v13;
          }
          else
          {
            if (v11 > 1)
            {
              if (v14 >= v9)
                v14 %= v9;
            }
            else
            {
              v14 &= v9 - 1;
            }
            if (v14 != v4)
              break;
          }
          v13 = (_QWORD *)*v13;
        }
        while (v13);
      }
    }
  }
  sub_20C546CB8(a1, v8, a4, (uint64_t)&v24);
  v15 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v16 = *(float *)(a1 + 32);
  if (!v9 || (float)(v16 * (float)v9) < v15)
  {
    v17 = 1;
    if (v9 >= 3)
      v17 = (v9 & (v9 - 1)) != 0;
    v18 = v17 | (2 * v9);
    v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19)
      v20 = v19;
    else
      v20 = v18;
    sub_20BDEC6E0(a1, v20);
    v9 = *(_QWORD *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9)
        v4 = v8 % v9;
      else
        v4 = v8;
    }
    else
    {
      v4 = (v9 - 1) & v8;
    }
  }
  v21 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v21)
  {
    *v24 = *v21;
    *v21 = v24;
  }
  else
  {
    *v24 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v24;
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = a1 + 16;
    if (*v24)
    {
      v22 = *(_QWORD *)(*v24 + 8);
      if ((v9 & (v9 - 1)) != 0)
      {
        if (v22 >= v9)
          v22 %= v9;
      }
      else
      {
        v22 &= v9 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v22) = v24;
    }
  }
  v13 = v24;
  v24 = 0;
  ++*(_QWORD *)(a1 + 24);
  sub_20C5467B4((uint64_t)&v24, 0);
  return v13;
}

void sub_20C546CA0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C5467B4((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C546CB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;

  v7 = a1 + 16;
  v8 = operator new(0x58uLL);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *v8 = 0;
  v8[1] = a2;
  result = sub_20C546D24((uint64_t)(v8 + 2), *a3);
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_20C546D0C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C5467B4(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C546D24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 48);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  sub_20BFD6E54((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_20BFD6EA4((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  if ((v7 & 7) != 0)
  {
    v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 2, v8));
    if ((v9 & 1) == 0)
      *(_QWORD *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  v10 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v10;
  if ((v10 & 7) != 0)
  {
    v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 2, v11));
    if ((v12 & 1) == 0)
      *(_QWORD *)(a1 + 32) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return a1;
}

uint64_t sub_20C546DFC(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;

  v2 = *(_QWORD *)(a1 + 56);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *(_QWORD *)(a1 + 48);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 44));
  sub_20BFD265C((_DWORD *)(a1 + 40));
  v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 32);
  if (v8)
    sub_20C35C614(v8);
  return a1;
}

unint64_t sub_20C546E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[2];

  v4 = *(_QWORD *)(a1 + 256);
  v7[0] = 0;
  v7[1] = v4;
  v5 = tbb::internal::allocate_additional_child_of_proxy::allocate((tbb::internal::allocate_additional_child_of_proxy *)v7, 0x68uLL);
  *(_BYTE *)(v5 - 11) = 1;
  *(_QWORD *)v5 = &unk_24C53C080;
  *(_OWORD *)(v5 + 8) = *(_OWORD *)a2;
  *(_QWORD *)(v5 + 24) = *(_QWORD *)(a2 + 16);
  sub_20C5470D8(v5 + 32, a2 + 24);
  *(_QWORD *)(v5 + 72) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(v5 + 80) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(v5 + 88) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(v5 + 96) = a1 + 264;
  return v5;
}

uint64_t sub_20C546F18(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;

  *(_QWORD *)a1 = &unk_24C53C080;
  v2 = *(_QWORD *)(a1 + 64);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *(_QWORD *)(a1 + 56);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 52));
  sub_20BFD265C((_DWORD *)(a1 + 48));
  v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 40);
  if (v8)
    sub_20C35C614(v8);
  return a1;
}

void sub_20C546FA8(void *a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;

  *(_QWORD *)a1 = &unk_24C53C080;
  v2 = *((_QWORD *)a1 + 8);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *((_QWORD *)a1 + 7);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 13);
  sub_20BFD265C((_DWORD *)a1 + 12);
  v8 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)*((_QWORD *)a1 + 5);
  if (v8)
    sub_20C35C614(v8);
  operator delete(a1);
}

uint64_t sub_20C547038(uint64_t a1)
{
  unint64_t *Instance;
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;

  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  sub_20C547140(a1 + 8);
  Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  if (!Instance)
    Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  v3 = v6;
  v4 = atomic_load(Instance + 18);
  if (v3 < v4
    && !pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6, (pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr *)Instance))
  {
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::_TransportErrors(&v6, *(_QWORD *)(a1 + 96));
  }
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  return 0;
}

void sub_20C5470C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C5470D8(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  sub_20BFD38A4((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_20BFD38DC((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a2 + 32) = 0;
  return a1;
}

uint64_t sub_20C547140(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD *, uint64_t, _QWORD, _QWORD, _QWORD);
  _QWORD *v3;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD, _QWORD))a1;
  v3 = (_QWORD *)(*(_QWORD *)(a1 + 16) + (v1 >> 1));
  if ((v1 & 1) != 0)
    v2 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD, _QWORD))(*v3 + v2);
  return v2(v3, a1 + 24, *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80));
}

uint64_t sub_20C54716C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 48);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  sub_20BFD6E54((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_20BFD6EA4((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  if ((v7 & 7) != 0)
  {
    v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 2, v8));
    if ((v9 & 1) == 0)
      *(_QWORD *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  v10 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v10;
  if ((v10 & 7) != 0)
  {
    v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 2, v11));
    if ((v12 & 1) == 0)
      *(_QWORD *)(a1 + 32) &= 0xFFFFFFFFFFFFFFF8;
  }
  return a1;
}

void sub_20C547238(uint64_t a1, __int128 *a2, uint64_t *a3, uint64_t a4, uint64_t *a5, uint64_t *a6, uint64_t *a7)
{
  uint64_t v11;
  unint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int *v15;
  unsigned int v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v17 = *a2;
  v18 = *a3;
  sub_20C54716C((uint64_t)&v19, a4);
  v11 = *a6;
  v25 = *a5;
  v26 = v11;
  v27 = *a7;
  v12 = sub_20C5474E0(a1, (uint64_t)&v17);
  (***(void (****)(_QWORD, unint64_t, uint64_t))(v12 - 40))(*(_QWORD *)(v12 - 40), v12, v12 - 8);
  if ((v24 & 7) != 0)
  {
    v13 = (unsigned int *)(v24 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  if ((v23 & 7) != 0)
  {
    v15 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
    do
      v16 = __ldxr(v15);
    while (__stlxr(v16 - 2, v15));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_20BFD265C(&v21);
  if (v20)
    sub_20C35C614(v20);
}

void sub_20C54732C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C547460((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C547340(_QWORD *a1, uint64_t a2)
{
  int8x8_t v4;
  unint64_t v5;
  uint8x8_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v13;
  char v14;

  v13 = 0;
  v14 = 0;
  sub_20C544EE4((uint64_t)&v13, a2);
  v4 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v4)
    return 0;
  v5 = bswap64(0x9E3779B97F4A7C55 * v13);
  v6 = (uint8x8_t)vcnt_s8(v4);
  v6.i16[0] = vaddlv_u8(v6);
  v7 = v6.u32[0];
  if (v6.u32[0] > 1uLL)
  {
    v8 = v5;
    if (v5 >= *(_QWORD *)&v4)
      v8 = v5 % *(_QWORD *)&v4;
  }
  else
  {
    v8 = (*(_QWORD *)&v4 - 1) & v5;
  }
  v9 = *(_QWORD **)(*a1 + 8 * v8);
  if (!v9)
    return 0;
  v10 = (_QWORD *)*v9;
  if (*v9)
  {
    do
    {
      v11 = v10[1];
      if (v11 == v5)
      {
        if (sub_20C544F44((uint64_t)(v10 + 2), a2))
          return v10;
      }
      else
      {
        if (v7 > 1)
        {
          if (v11 >= *(_QWORD *)&v4)
            v11 %= *(_QWORD *)&v4;
        }
        else
        {
          v11 &= *(_QWORD *)&v4 - 1;
        }
        if (v11 != v8)
          return 0;
      }
      v10 = (_QWORD *)*v10;
    }
    while (v10);
  }
  return v10;
}

uint64_t sub_20C547460(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;

  v2 = *(_QWORD *)(a1 + 56);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *(_QWORD *)(a1 + 48);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 44));
  sub_20BFD265C((_DWORD *)(a1 + 40));
  v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 32);
  if (v8)
    sub_20C35C614(v8);
  return a1;
}

unint64_t sub_20C5474E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[2];

  v4 = *(_QWORD *)(a1 + 256);
  v7[0] = 0;
  v7[1] = v4;
  v5 = tbb::internal::allocate_additional_child_of_proxy::allocate((tbb::internal::allocate_additional_child_of_proxy *)v7, 0x68uLL);
  *(_BYTE *)(v5 - 11) = 1;
  *(_QWORD *)v5 = &unk_24C53C0C8;
  *(_OWORD *)(v5 + 8) = *(_OWORD *)a2;
  *(_QWORD *)(v5 + 24) = *(_QWORD *)(a2 + 16);
  sub_20C5470D8(v5 + 32, a2 + 24);
  *(_QWORD *)(v5 + 72) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(v5 + 80) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(v5 + 88) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(v5 + 96) = a1 + 264;
  return v5;
}

uint64_t sub_20C54757C(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;

  *(_QWORD *)a1 = &unk_24C53C0C8;
  v2 = *(_QWORD *)(a1 + 64);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *(_QWORD *)(a1 + 56);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 52));
  sub_20BFD265C((_DWORD *)(a1 + 48));
  v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 40);
  if (v8)
    sub_20C35C614(v8);
  return a1;
}

void sub_20C54760C(void *a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;

  *(_QWORD *)a1 = &unk_24C53C0C8;
  v2 = *((_QWORD *)a1 + 8);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *((_QWORD *)a1 + 7);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 13);
  sub_20BFD265C((_DWORD *)a1 + 12);
  v8 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)*((_QWORD *)a1 + 5);
  if (v8)
    sub_20C35C614(v8);
  operator delete(a1);
}

uint64_t sub_20C54769C(uint64_t a1)
{
  unint64_t *Instance;
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;

  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  sub_20C547140(a1 + 8);
  Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  if (!Instance)
    Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  v3 = v6;
  v4 = atomic_load(Instance + 18);
  if (v3 < v4
    && !pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6, (pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr *)Instance))
  {
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::_TransportErrors(&v6, *(_QWORD *)(a1 + 96));
  }
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  return 0;
}

void sub_20C547728(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C54773C(uint64_t a1)
{
  void *v2;

  sub_20C547774(a1, *(_QWORD **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_20C547774(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;

  if (a2)
  {
    v2 = a2;
    do
    {
      v3 = (_QWORD *)*v2;
      sub_20C5467F8((uint64_t)(v2 + 2));
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

_QWORD *sub_20C5477B0(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t i;

  *a1 = &unk_24C51AE78;
  __dmb(0xBu);
  a1[1] = 0;
  __dmb(0xBu);
  a1[2] = 0;
  *a1 = &unk_24C53C110;
  v2 = (_QWORD *)tbb::internal::allocate_via_handler_v3((tbb::internal *)8);
  *v2 = &unk_24C53C170;
  a1[3] = v2;
  for (i = 9; i != 12; ++i)
    a1[i] = 0;
  a1[7] = 0;
  a1[6] = 0;
  a1[8] = a1 + 9;
  a1[5] = sub_20C54796C;
  return a1;
}

void sub_20C54784C(_Unwind_Exception *a1)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_20C547854(uint64_t a1)
{
  tbb::internal::concurrent_vector_base_v3 *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = tbb::internal::concurrent_vector_base_v3::internal_grow_by((tbb::internal::concurrent_vector_base_v3 *)(a1 + 40), 1, (void *)0x80, (void (*)(void *, const void *, unint64_t))tbb::concurrent_vector<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::UsdGeomXformCache>,128ul>,tbb::cache_aligned_allocator<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::UsdGeomXformCache>,128ul>>>::initialize_array, 0);
  v3 = sub_20BEB4B94((unint64_t)v2);
  v4 = *(_QWORD *)(a1 + 64);
  __dmb(0xBu);
  v5 = *(_QWORD *)(v4 + 8 * v3) + (((_QWORD)v2 - ((1 << v3) & 0x1FFFFFFFFFFFFFELL)) << 7);
  (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 24) + 32))(*(_QWORD *)(a1 + 24), v5);
  *(_BYTE *)(v5 + 48) = 1;
  return v5;
}

uint64_t sub_20C5478D8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return tbb::internal::NFS_Allocate((unint64_t)(a2 + 7) >> 3, 8, 0, a4);
}

uint64_t sub_20C5478EC(int a1, tbb::internal *this)
{
  return tbb::internal::NFS_Free(this, this);
}

void sub_20C5478F4(_QWORD *a1)
{
  _QWORD *v1;

  v1 = sub_20C547C20(a1);
  operator delete(v1);
}

_QWORD *sub_20C547908()
{
  _QWORD *result;

  result = (_QWORD *)tbb::internal::allocate_via_handler_v3((tbb::internal *)8);
  *result = &unk_24C53C170;
  return result;
}

uint64_t sub_20C547930(uint64_t a1)
{
  void *v2;

  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 16))(a1);
  return tbb::internal::deallocate_via_handler_v3(a1, v2);
}

double sub_20C547964(int a1, pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *this)
{
  return pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::UsdGeomXformCache(this);
}

uint64_t sub_20C54796C(int a1, tbb::internal *this, uint64_t a3, void *a4)
{
  return tbb::internal::NFS_Allocate((unint64_t)this, 128, 0, a4);
}

void tbb::concurrent_vector<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::UsdGeomXformCache>,128ul>,tbb::cache_aligned_allocator<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::UsdGeomXformCache>,128ul>>>::initialize_array(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
    bzero(a1, a3 << 7);
}

uint64_t sub_20C54798C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_BYTE *)(a1 - 11) = 1;
  *(_QWORD *)a1 = &unk_24C53C208;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  sub_20BFD38A4((_DWORD *)(a1 + 24), (_DWORD *)(a2 + 16));
  sub_20BFD38DC((_DWORD *)(a1 + 28), (_DWORD *)(a2 + 20));
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a2 + 32) = 0;
  v6 = *(_OWORD *)(a2 + 56);
  v7 = *(_OWORD *)(a2 + 72);
  v8 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v7;
  v9 = *(_OWORD *)(a2 + 120);
  v10 = *(_OWORD *)(a2 + 136);
  v11 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 176) = v11;
  *(_OWORD *)(a1 + 128) = v9;
  *(_OWORD *)(a1 + 144) = v10;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 192) = a3;
  return a1;
}

uint64_t sub_20C547A54(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;

  *(_QWORD *)a1 = &unk_24C53C208;
  v2 = *(_QWORD *)(a1 + 40);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *(_QWORD *)(a1 + 32);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  if (v8)
    sub_20C35C614(v8);
  return a1;
}

void sub_20C547AE4(void *a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;

  *(_QWORD *)a1 = &unk_24C53C208;
  v2 = *((_QWORD *)a1 + 5);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *((_QWORD *)a1 + 4);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 7);
  sub_20BFD265C((_DWORD *)a1 + 6);
  v8 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)*((_QWORD *)a1 + 2);
  if (v8)
    sub_20C35C614(v8);
  operator delete(a1);
}

uint64_t sub_20C547B74(uint64_t a1)
{
  unint64_t *Instance;
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;

  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ResolvePrim(*(_QWORD *)(a1 + 176), a1 + 8, a1 + 8, (__int128 *)(a1 + 48));
  Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  if (!Instance)
    Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  v3 = v6;
  v4 = atomic_load(Instance + 18);
  if (v3 < v4
    && !pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6, (pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr *)Instance))
  {
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::_TransportErrors(&v6, *(_QWORD *)(a1 + 192));
  }
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  return 0;
}

void sub_20C547C0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C547C20(_QWORD *a1)
{
  uint64_t v2;

  *a1 = &unk_24C53C110;
  v2 = a1[3];
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  sub_20BEB4954((uint64_t)a1);
  sub_20C547C88(a1 + 4);
  *a1 = &unk_24C51AE78;
  return a1;
}

unint64_t *sub_20C547C88(unint64_t *a1)
{
  tbb::internal::concurrent_vector_base_v3 *v2;
  _QWORD *v3;
  unint64_t v4;
  void *v5;

  v2 = (tbb::internal::concurrent_vector_base_v3 *)(a1 + 1);
  v3 = (_QWORD *)a1[4];
  v4 = tbb::internal::concurrent_vector_base_v3::internal_clear((tbb::internal::concurrent_vector_base_v3 *)(a1 + 1), (void (*)(void *, unint64_t))tbb::concurrent_vector<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::UsdGeomXformCache>,128ul>,tbb::cache_aligned_allocator<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::UsdGeomXformCache>,128ul>>>::destroy_array);
  sub_20BEB4AD0((uint64_t)a1, v3, v4, a1[2]);
  tbb::internal::concurrent_vector_base_v3::~concurrent_vector_base_v3(v2, v5);
  return a1;
}

uint64_t tbb::concurrent_vector<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::UsdGeomXformCache>,128ul>,tbb::cache_aligned_allocator<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::UsdGeomXformCache>,128ul>>>::destroy_array(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  if (a2)
  {
    v2 = a2;
    result = result + (a2 << 7) - 128;
    do
    {
      if (*(_BYTE *)(result + 48))
      {
        result = sub_20C543484(result);
        *(_BYTE *)(result + 48) = 0;
      }
      result -= 128;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_20C547D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int *v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  __int128 v17;
  int v18;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *v19;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  if (v5)
    sub_20C35C614(v5);
  sub_20BFD3EBC((int *)(a1 + 16), (int *)(a2 + 16));
  sub_20BFD3F10((int *)(a1 + 20), (int *)(a2 + 20));
  if (a2 != a1)
  {
    v6 = *(_QWORD *)(a1 + 24);
    if ((v6 & 7) != 0)
    {
      v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stlxr(v8 - 2, v7));
    }
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a2 + 24) = 0;
  }
  v9 = *(unsigned int **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a2 + 40) = 0;
  if (v9)
  {
    v10 = v9 + 2;
    do
    {
      v11 = __ldxr(v10);
      v12 = v11 - 1;
    }
    while (__stlxr(v12, v10));
    if (!v12)
      (*(void (**)(unsigned int *))(*(_QWORD *)v9 + 8))(v9);
  }
  *(_QWORD *)(a2 + 32) = 0;
  v13 = *(unsigned int **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 56) = 0;
  if (v13)
  {
    v14 = v13 + 2;
    do
    {
      v15 = __ldxr(v14);
      v16 = v15 - 1;
    }
    while (__stlxr(v16, v14));
    if (!v16)
      (*(void (**)(unsigned int *))(*(_QWORD *)v13 + 8))(v13);
  }
  *(_QWORD *)(a2 + 48) = 0;
  v17 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v17;
  sub_20BFD3EBC((int *)(a1 + 96), (int *)(a2 + 96));
  sub_20BFD3F10((int *)(a1 + 100), (int *)(a2 + 100));
  v18 = *(_DWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 108) = *(_BYTE *)(a2 + 108);
  *(_DWORD *)(a1 + 104) = v18;
  v19 = *(pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource **)(a2 + 112);
  *(_QWORD *)(a2 + 112) = 0;
  sub_20BE7D37C((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource **)(a1 + 112), v19);
  return a1;
}

uint64_t sub_20C547E74(uint64_t a1)
{
  *(_QWORD *)a1 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 12));
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 48));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 52));
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_BYTE *)(a1 + 72) = 0;
  return a1;
}

uint64_t sub_20C547ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 48);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  sub_20BFD6E54((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_20BFD6EA4((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  v9 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v9;
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)(v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 2, v10));
    if ((v11 & 1) == 0)
      *(_QWORD *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  v12 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v12;
  if ((v12 & 7) != 0)
  {
    v13 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 2, v13));
    if ((v14 & 1) == 0)
      *(_QWORD *)(a1 + 32) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(_DWORD *)(a1 + 40) = *(_DWORD *)a3;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(a3 + 8) = 0;
  sub_20BFD38A4((_DWORD *)(a1 + 56), (_DWORD *)(a3 + 16));
  sub_20BFD38DC((_DWORD *)(a1 + 60), (_DWORD *)(a3 + 20));
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a3 + 24);
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a3 + 32);
  *(_QWORD *)(a3 + 32) = 0;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a3 + 40);
  v15 = *(_OWORD *)(a3 + 56);
  v16 = *(_OWORD *)(a3 + 72);
  v17 = *(_OWORD *)(a3 + 104);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a3 + 88);
  *(_OWORD *)(a1 + 144) = v17;
  *(_OWORD *)(a1 + 96) = v15;
  *(_OWORD *)(a1 + 112) = v16;
  v18 = *(_OWORD *)(a3 + 120);
  v19 = *(_OWORD *)(a3 + 136);
  v20 = *(_OWORD *)(a3 + 168);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a3 + 152);
  *(_OWORD *)(a1 + 208) = v20;
  *(_OWORD *)(a1 + 160) = v18;
  *(_OWORD *)(a1 + 176) = v19;
  return a1;
}

uint64_t sub_20C54802C(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  uint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v15;

  v2 = *(_QWORD *)(a1 + 72);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *(_QWORD *)(a1 + 64);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 60));
  sub_20BFD265C((_DWORD *)(a1 + 56));
  v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 48);
  if (v8)
    sub_20C35C614(v8);
  v9 = *(_QWORD *)(a1 + 32);
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)(v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stlxr(v11 - 2, v10));
  }
  v12 = *(_QWORD *)(a1 + 24);
  if ((v12 & 7) != 0)
  {
    v13 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_20BFD265C((_DWORD *)(a1 + 16));
  v15 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if (v15)
    sub_20C35C614(v15);
  return a1;
}

uint64_t sub_20C54810C(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v10 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 48);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  sub_20BFD6E54((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_20BFD6EA4((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  v13 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  if ((v13 & 7) != 0)
  {
    v14 = (unsigned int *)(v13 & 0xFFFFFFFFFFFFFFF8);
    do
      v15 = __ldxr(v14);
    while (__stxr(v15 + 2, v14));
    if ((v15 & 1) == 0)
      *(_QWORD *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  v16 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v16;
  if ((v16 & 7) != 0)
  {
    v17 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 2, v17));
    if ((v18 & 1) == 0)
      *(_QWORD *)(a1 + 32) &= 0xFFFFFFFFFFFFFFF8;
  }
  v19 = *a3;
  v20 = a3[1];
  v21 = a3[2];
  *(_OWORD *)(a1 + 88) = a3[3];
  *(_OWORD *)(a1 + 72) = v21;
  *(_OWORD *)(a1 + 56) = v20;
  *(_OWORD *)(a1 + 40) = v19;
  v22 = a3[4];
  v23 = a3[5];
  v24 = a3[6];
  *(_OWORD *)(a1 + 152) = a3[7];
  *(_OWORD *)(a1 + 136) = v24;
  *(_OWORD *)(a1 + 120) = v23;
  *(_OWORD *)(a1 + 104) = v22;
  *(_QWORD *)(a1 + 168) = a4;
  *(_QWORD *)(a1 + 176) = a5;
  return a1;
}

void sub_20C54822C(uint64_t a1)
{
  uint64_t **v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE v6[336];
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  v1 = *(uint64_t ***)(a1 + 8);
  pxrInternal__aapl__pxrReserved__::WorkDispatcher::WorkDispatcher((pxrInternal__aapl__pxrReserved__::WorkDispatcher *)v6);
  v2 = *v1;
  v3 = **v1;
  v4 = v2[1];
  while (v3 != v4)
  {
    if (*(_QWORD *)(v3 + 208))
    {
      v5 = sub_20C5482F8((uint64_t)v6, v3 + 40);
      (***(void (****)(_QWORD, unint64_t, uint64_t))(v5 - 40))(*(_QWORD *)(v5 - 40), v5, v5 - 8);
    }
    v3 += 224;
  }
  pxrInternal__aapl__pxrReserved__::WorkDispatcher::~WorkDispatcher((pxrInternal__aapl__pxrReserved__::WorkDispatcher *)v6);
}

void sub_20C5482D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  _Unwind_Resume(exception_object);
}

unint64_t sub_20C5482F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[2];

  v4 = *(_QWORD *)(a1 + 256);
  v7[0] = 0;
  v7[1] = v4;
  v5 = tbb::internal::allocate_additional_child_of_proxy::allocate((tbb::internal::allocate_additional_child_of_proxy *)v7, 0xC8uLL);
  sub_20C54836C(v5, a2, a1 + 264);
  return v5;
}

void sub_20C548350(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  tbb::task *v9;

  tbb::internal::allocate_additional_child_of_proxy::free((tbb::internal::allocate_additional_child_of_proxy *)&a9, v9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C54836C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  *(_BYTE *)(a1 - 11) = 1;
  *(_QWORD *)a1 = &unk_24C53C208;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 48);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  sub_20BFD6E54((_DWORD *)(a1 + 24), (_DWORD *)(a2 + 16));
  sub_20BFD6EA4((_DWORD *)(a1 + 28), (_DWORD *)(a2 + 20));
  v9 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v9;
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)(v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 2, v10));
    if ((v11 & 1) == 0)
      *(_QWORD *)(a1 + 32) &= 0xFFFFFFFFFFFFFFF8;
  }
  v12 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v12;
  if ((v12 & 7) != 0)
  {
    v13 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 2, v13));
    if ((v14 & 1) == 0)
      *(_QWORD *)(a1 + 40) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 40);
  v15 = *(_OWORD *)(a2 + 56);
  v16 = *(_OWORD *)(a2 + 72);
  v17 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 112) = v17;
  *(_OWORD *)(a1 + 64) = v15;
  *(_OWORD *)(a1 + 80) = v16;
  v18 = *(_OWORD *)(a2 + 120);
  v19 = *(_OWORD *)(a2 + 136);
  v20 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 176) = v20;
  *(_OWORD *)(a1 + 128) = v18;
  *(_OWORD *)(a1 + 144) = v19;
  *(_QWORD *)(a1 + 192) = a3;
  return a1;
}

uint64_t sub_20C548498(uint64_t *a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  void *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t *v14;

  v3 = 0xCCCCCCCCCCCCCCCDLL * ((a1[1] - *a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0x666666666666666)
    sub_20BDDF694();
  if (0x999999999999999ALL * ((a1[2] - *a1) >> 3) > v4)
    v4 = 0x999999999999999ALL * ((a1[2] - *a1) >> 3);
  if (0xCCCCCCCCCCCCCCCDLL * ((a1[2] - *a1) >> 3) >= 0x333333333333333)
    v6 = 0x666666666666666;
  else
    v6 = v4;
  v14 = a1 + 2;
  if (v6)
    v7 = (char *)sub_20BED4724((uint64_t)(a1 + 2), v6);
  else
    v7 = 0;
  v10 = v7;
  v11 = &v7[40 * v3];
  v13 = &v7[40 * v6];
  sub_20C546560((uint64_t)(a1 + 2), (uint64_t)v11, a2);
  v12 = v11 + 40;
  sub_20C5485A4(a1, &v10);
  v8 = a1[1];
  sub_20C5487B4(&v10);
  return v8;
}

void sub_20C548590(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C5487B4((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C5485A4(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_20C548618((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_20C548618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v11;
  _QWORD v13[3];
  char v14;
  __int128 v15;
  __int128 v16;

  v7 = a7;
  *(_QWORD *)&v16 = a6;
  *((_QWORD *)&v16 + 1) = a7;
  v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  v14 = 0;
  if (a3 == a5)
  {
    v11 = a6;
  }
  else
  {
    v9 = a3;
    do
    {
      v9 -= 40;
      sub_20C5486CC(a1, v7 - 40, v9);
      v7 = *((_QWORD *)&v16 + 1) - 40;
      *((_QWORD *)&v16 + 1) -= 40;
    }
    while (v9 != a5);
    v11 = v16;
  }
  v14 = 1;
  sub_20C548730((uint64_t)v13);
  return v11;
}

_DWORD *sub_20C5486CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *result;

  *(_DWORD *)a2 = *(_DWORD *)a3;
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(a3 + 8) = 0;
  sub_20BFD38A4((_DWORD *)(a2 + 16), (_DWORD *)(a3 + 16));
  result = sub_20BFD38DC((_DWORD *)(a2 + 20), (_DWORD *)(a3 + 20));
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a3 + 24);
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a3 + 32);
  *(_QWORD *)(a3 + 32) = 0;
  return result;
}

uint64_t sub_20C548730(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_20C548764((uint64_t *)a1);
  return a1;
}

void sub_20C548764(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(a1[2] + 8);
  v2 = *(_QWORD *)(a1[1] + 8);
  if (v1 != v2)
  {
    v3 = *a1;
    do
    {
      sub_20C5466AC(v3, v1);
      v1 += 40;
    }
    while (v1 != v2);
  }
}

void **sub_20C5487B4(void **a1)
{
  sub_20C5487E4(a1);
  if (*a1)
    operator delete(*a1);
  return a1;
}

void sub_20C5487E4(_QWORD *a1)
{
  uint64_t i;
  uint64_t v2;
  uint64_t v4;

  v2 = a1[1];
  for (i = a1[2]; i != v2; i = a1[2])
  {
    v4 = a1[4];
    a1[2] = i - 40;
    sub_20C5466AC(v4, i - 40);
  }
}

uint64_t sub_20C548828(uint64_t a1, uint64_t a2)
{
  _QWORD *i;

  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  sub_20BDEC6E0(a1, *(_QWORD *)(a2 + 8));
  for (i = *(_QWORD **)(a2 + 16); i; i = (_QWORD *)*i)
    sub_20C54889C(a1, (uint64_t)(i + 2), (uint64_t)(i + 2));
  return a1;
}

void sub_20C548884(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C548CF4(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C54889C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;
  float v14;
  float v15;
  _BOOL8 v16;
  unint64_t v17;
  unint64_t v18;
  size_t v19;
  _QWORD *v20;
  unint64_t v21;
  _QWORD *v23;
  char v24;

  v23 = 0;
  v24 = 0;
  sub_20C544EE4((uint64_t)&v23, a2);
  v7 = bswap64(0x9E3779B97F4A7C55 * (_QWORD)v23);
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    v10 = v9.u32[0];
    if (v9.u32[0] > 1uLL)
    {
      v3 = v7;
      if (v7 >= v8)
        v3 = v7 % v8;
    }
    else
    {
      v3 = (v8 - 1) & v7;
    }
    v11 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
    if (v11)
    {
      v12 = (_QWORD *)*v11;
      if (*v11)
      {
        do
        {
          v13 = v12[1];
          if (v13 == v7)
          {
            if (sub_20C544F44((uint64_t)(v12 + 2), a2))
              return v12;
          }
          else
          {
            if (v10 > 1)
            {
              if (v13 >= v8)
                v13 %= v8;
            }
            else
            {
              v13 &= v8 - 1;
            }
            if (v13 != v3)
              break;
          }
          v12 = (_QWORD *)*v12;
        }
        while (v12);
      }
    }
  }
  sub_20C548B28(a1, v7, a3, (uint64_t)&v23);
  v14 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v15 = *(float *)(a1 + 32);
  if (!v8 || (float)(v15 * (float)v8) < v14)
  {
    v16 = 1;
    if (v8 >= 3)
      v16 = (v8 & (v8 - 1)) != 0;
    v17 = v16 | (2 * v8);
    v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18)
      v19 = v18;
    else
      v19 = v17;
    sub_20BDEC6E0(a1, v19);
    v8 = *(_QWORD *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8)
        v3 = v7 % v8;
      else
        v3 = v7;
    }
    else
    {
      v3 = (v8 - 1) & v7;
    }
  }
  v20 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v20)
  {
    *v23 = *v20;
    *v20 = v23;
  }
  else
  {
    *v23 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v23;
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v3) = a1 + 16;
    if (*v23)
    {
      v21 = *(_QWORD *)(*v23 + 8);
      if ((v8 & (v8 - 1)) != 0)
      {
        if (v21 >= v8)
          v21 %= v8;
      }
      else
      {
        v21 &= v8 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v21) = v23;
    }
  }
  v12 = v23;
  v23 = 0;
  ++*(_QWORD *)(a1 + 24);
  sub_20C54509C((uint64_t)&v23, 0);
  return v12;
}

void sub_20C548B10(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C54509C((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C548B28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;

  v7 = a1 + 16;
  v8 = operator new(0x78uLL);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *v8 = 0;
  v8[1] = a2;
  result = sub_20C548B9C((uint64_t)(v8 + 2), a3);
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_20C548B84(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C54509C(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C548B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  __int16 v19;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 48);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  sub_20BFD6E54((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_20BFD6EA4((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  if ((v7 & 7) != 0)
  {
    v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 2, v8));
    if ((v9 & 1) == 0)
      *(_QWORD *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  v10 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v10;
  if ((v10 & 7) != 0)
  {
    v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 2, v11));
    if ((v12 & 1) == 0)
      *(_QWORD *)(a1 + 32) &= 0xFFFFFFFFFFFFFFF8;
  }
  sub_20C54C31C((uint64_t *)(a1 + 40), a2 + 40);
  v13 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v13;
  if (v13)
  {
    v14 = (unint64_t *)(v13 + 8);
    do
      v15 = __ldxr(v14);
    while (__stxr(v15 + 1, v14));
  }
  v16 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v16;
  if ((v16 & 7) != 0)
  {
    v17 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 2, v17));
    if ((v18 & 1) == 0)
      *(_QWORD *)(a1 + 80) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v19 = *(_WORD *)(a2 + 96);
  *(_BYTE *)(a1 + 98) = *(_BYTE *)(a2 + 98);
  *(_WORD *)(a1 + 96) = v19;
  return a1;
}

void sub_20C548CE0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C540D8C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C548CF4(uint64_t a1)
{
  void *v2;

  sub_20C548D2C(a1, *(_QWORD **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_20C548D2C(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;

  if (a2)
  {
    v2 = a2;
    do
    {
      v3 = (_QWORD *)*v2;
      sub_20C5450E0((uint64_t)(v2 + 2));
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

void sub_20C548D68(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t i;
  _QWORD *v8;
  BOOL v9;
  _QWORD *v10;
  BOOL v11;
  _QWORD v12[2];

  v4 = a2;
  v6 = a1[1];
  if (v6)
  {
    for (i = 0; i != v6; ++i)
      *(_QWORD *)(*a1 + 8 * i) = 0;
    v8 = (_QWORD *)a1[2];
    a1[2] = 0;
    a1[3] = 0;
    if (v8)
      v9 = a2 == a3;
    else
      v9 = 1;
    if (v9)
    {
      v10 = v8;
    }
    else
    {
      do
      {
        v12[0] = v8 + 2;
        v12[1] = v8 + 7;
        sub_20C548EFC((uint64_t)v12, (uint64_t)(v4 + 2));
        v10 = (_QWORD *)*v8;
        sub_20C548E74(a1, v8);
        v4 = (_QWORD *)*v4;
        if (v10)
          v11 = v4 == a3;
        else
          v11 = 1;
        v8 = v10;
      }
      while (!v11);
    }
    sub_20C548D2C((uint64_t)a1, v10);
  }
  while (v4 != a3)
  {
    sub_20C5493D0(a1, (uint64_t)(v4 + 2));
    v4 = (_QWORD *)*v4;
  }
}

void sub_20C548E44(void *a1)
{
  uint64_t v1;
  _QWORD *v2;

  __cxa_begin_catch(a1);
  sub_20C548D2C(v1, v2);
  __cxa_rethrow();
}

void sub_20C548E60(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

_QWORD *sub_20C548E74(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  char v9;

  v4 = (uint64_t)(a2 + 2);
  v8 = 0;
  v9 = 0;
  sub_20C544EE4((uint64_t)&v8, (uint64_t)(a2 + 2));
  v5 = bswap64(0x9E3779B97F4A7C55 * v8);
  a2[1] = v5;
  v6 = sub_20C548FE0((uint64_t)a1, v5, v4);
  sub_20BEC5B54(a1, a2, v6);
  return a2;
}

uint64_t sub_20C548EFC(uint64_t a1, uint64_t a2)
{
  _DWORD *v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  uint64_t v9;
  __int16 v10;

  v4 = *(_DWORD **)a1;
  **(_DWORD **)a1 = *(_DWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 48);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)*((_QWORD *)v4 + 1);
  *((_QWORD *)v4 + 1) = v5;
  if (v8)
    sub_20C35C614(v8);
  sub_20C01A074(v4 + 4, (_DWORD *)(a2 + 16));
  sub_20C01A0C8(v4 + 5, (_DWORD *)(a2 + 20));
  sub_20BF32220((_QWORD *)v4 + 3, (_QWORD *)(a2 + 24));
  sub_20BF32220((_QWORD *)v4 + 4, (_QWORD *)(a2 + 32));
  v9 = *(_QWORD *)(a1 + 8);
  if (v9 != a2 + 40)
    sub_20C54B950(*(uint64_t ***)(a1 + 8), *(_QWORD **)(a2 + 40), (_QWORD *)(a2 + 48));
  sub_20BDE881C((_QWORD *)(v9 + 24), (uint64_t *)(a2 + 64));
  sub_20BF32220((_QWORD *)(v9 + 40), (_QWORD *)(a2 + 80));
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(a2 + 88);
  v10 = *(_WORD *)(a2 + 96);
  *(_BYTE *)(v9 + 58) = *(_BYTE *)(a2 + 98);
  *(_WORD *)(v9 + 56) = v10;
  return a1;
}

_QWORD *sub_20C548FE0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v6;
  float v7;
  float v8;
  _BOOL8 v9;
  unint64_t v10;
  unint64_t v11;
  size_t v12;
  uint8x8_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  _BOOL4 v21;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v8 = *(float *)(a1 + 32);
  if (!v6 || (float)(v8 * (float)v6) < v7)
  {
    v9 = 1;
    if (v6 >= 3)
      v9 = (v6 & (v6 - 1)) != 0;
    v10 = v9 | (2 * v6);
    v11 = vcvtps_u32_f32(v7 / v8);
    if (v10 <= v11)
      v12 = v11;
    else
      v12 = v10;
    sub_20C549140(a1, v12);
    v6 = *(_QWORD *)(a1 + 8);
  }
  v13 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
  v13.i16[0] = vaddlv_u8(v13);
  v14 = v13.u32[0];
  if (v13.u32[0] > 1uLL)
  {
    v15 = a2;
    if (v6 <= a2)
      v15 = a2 % v6;
  }
  else
  {
    v15 = (v6 - 1) & a2;
  }
  v16 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v15);
  if (v16)
  {
    v17 = (_QWORD *)*v16;
    if (*v16)
    {
      v18 = 0;
      do
      {
        v19 = v17[1];
        if (v14 > 1)
        {
          v20 = v17[1];
          if (v19 >= v6)
            v20 = v19 % v6;
        }
        else
        {
          v20 = v19 & (v6 - 1);
        }
        if (v20 != v15)
          break;
        v21 = v19 == a2 && sub_20C544F44((uint64_t)(v17 + 2), a3);
        if ((v18 & !v21 & 1) != 0)
          break;
        v18 |= v21;
        v16 = (_QWORD *)*v16;
        v17 = (_QWORD *)*v16;
      }
      while (*v16);
    }
  }
  return v16;
}

void sub_20C549140(uint64_t a1, size_t __n)
{
  size_t prime;
  int8x8_t v4;
  unint64_t v5;
  uint8x8_t v6;
  uint64_t v7;

  if (__n == 1)
  {
    prime = 2;
  }
  else
  {
    prime = __n;
    if ((__n & (__n - 1)) != 0)
      prime = std::__next_prime(__n);
  }
  v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(_QWORD *)&v4)
    goto LABEL_16;
  if (prime < *(_QWORD *)&v4)
  {
    v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(_QWORD *)&v4 < 3uLL || (v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      v5 = std::__next_prime(v5);
    }
    else
    {
      v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2)
        v5 = v7;
    }
    if (prime <= v5)
      prime = v5;
    if (prime < *(_QWORD *)&v4)
LABEL_16:
      sub_20C54921C(a1, prime);
  }
}

void sub_20C54921C(uint64_t a1, unint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint8x8_t v9;
  unint64_t v10;
  void *v11;
  _QWORD *i;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _BOOL4 v16;
  _QWORD *v17;

  if (a2)
  {
    if (a2 >> 61)
      sub_20BDDF5B4();
    v4 = operator new(8 * a2);
    v5 = *(void **)a1;
    *(_QWORD *)a1 = v4;
    if (v5)
      operator delete(v5);
    v6 = 0;
    *(_QWORD *)(a1 + 8) = a2;
    do
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    v7 = *(_QWORD **)(a1 + 16);
    if (v7)
    {
      v8 = v7[1];
      v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      v10 = v9.u32[0];
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2)
          v8 %= a2;
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v8) = a1 + 16;
      for (i = (_QWORD *)*v7; *v7; i = (_QWORD *)*v7)
      {
        v13 = i[1];
        if (v10 > 1)
        {
          if (v13 >= a2)
            v13 %= a2;
        }
        else
        {
          v13 &= a2 - 1;
        }
        if (v13 == v8)
        {
          v7 = i;
        }
        else if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v13))
        {
          v14 = (_QWORD *)*i;
          if (*i)
          {
            v15 = i;
            while (1)
            {
              v16 = sub_20C544F44((uint64_t)(i + 2), (uint64_t)(v14 + 2));
              v17 = (_QWORD *)*v15;
              if (!v16)
                break;
              v14 = (_QWORD *)*v17;
              v15 = (_QWORD *)*v15;
              if (!*v17)
                goto LABEL_31;
            }
            v14 = (_QWORD *)*v15;
            v17 = v15;
          }
          else
          {
            v17 = i;
          }
LABEL_31:
          *v7 = v14;
          *v17 = **(_QWORD **)(*(_QWORD *)a1 + 8 * v13);
          **(_QWORD **)(*(_QWORD *)a1 + 8 * v13) = i;
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)a1 + 8 * v13) = v7;
          v7 = i;
          v8 = v13;
        }
      }
    }
  }
  else
  {
    v11 = *(void **)a1;
    *(_QWORD *)a1 = 0;
    if (v11)
      operator delete(v11);
    *(_QWORD *)(a1 + 8) = 0;
  }
}

_QWORD *sub_20C5493D0(_QWORD *a1, uint64_t a2)
{
  _QWORD *v3;
  _QWORD *v5[3];

  sub_20C549438((uint64_t)a1, a2, (uint64_t)v5);
  v3 = sub_20C548E74(a1, v5[0]);
  v5[0] = 0;
  sub_20C54509C((uint64_t)v5, 0);
  return v3;
}

void sub_20C549420(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C54509C((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C549438@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;
  char v9;

  v5 = a1 + 16;
  v6 = operator new(0x78uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  *v6 = 0;
  v6[1] = 0;
  sub_20C548B9C((uint64_t)(v6 + 2), a2);
  *(_BYTE *)(a3 + 16) = 1;
  v8 = 0;
  v9 = 0;
  result = sub_20C544EE4((uint64_t)&v8, (uint64_t)(v6 + 2));
  v6[1] = bswap64(0x9E3779B97F4A7C55 * v8);
  return result;
}

void sub_20C5494D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C54509C(v1, 0);
  _Unwind_Resume(a1);
}

char *sub_20C5494E8(uint64_t a1, _DWORD *a2)
{
  pxrInternal__aapl__pxrReserved__::SdfPath *v4;
  unsigned int v6;
  int v7;
  char v8;

  sub_20BFD6E54(&v6, a2);
  sub_20BFD6EA4(&v7, a2 + 1);
  v8 = 0;
  v4 = sub_20C549578(a1, &v6);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_20BFD265C(&v6);
  return (char *)v4 + 8;
}

void sub_20C549564(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  sub_20C5495C4(&a10);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::SdfPath *sub_20C549578(uint64_t a1, unsigned int *a2)
{
  pxrInternal__aapl__pxrReserved__::SdfPath *result;
  pxrInternal__aapl__pxrReserved__::SdfPath *v4;
  pxrInternal__aapl__pxrReserved__::SdfPath *v5[2];
  unsigned int *v6;

  v6 = a2;
  result = (pxrInternal__aapl__pxrReserved__::SdfPath *)sub_20C5496D4(a1, a2, (uint64_t *)&v6);
  v5[0] = result;
  v5[1] = v4;
  if ((_BYTE)v4)
  {
    sub_20C5495F0(a1, v5);
    return v5[0];
  }
  return result;
}

_DWORD *sub_20C5495C4(_DWORD *a1)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a1 + 1);
  return sub_20BFD265C(a1);
}

_DWORD *sub_20C5495F0(uint64_t a1, pxrInternal__aapl__pxrReserved__::SdfPath **a2)
{
  pxrInternal__aapl__pxrReserved__::SdfPath *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v8;
  int v9;
  char v10;
  int v11;
  int v12;

  v3 = *a2;
  pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath(*a2, &v11);
  if (pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v11))
  {
    sub_20BFD6E54(&v8, &v11);
    sub_20BFD6EA4(&v9, &v12);
    v10 = 0;
    v4 = sub_20C549578(a1, &v8);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
    sub_20BFD265C(&v8);
    v5 = *(_QWORD *)(v4 + 24);
    if (v5)
      v6 = v5 | 1;
    else
      v6 = v4;
    *((_QWORD *)v3 + 4) = v6;
    *(_QWORD *)(v4 + 24) = v3;
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v12);
  return sub_20BFD265C(&v11);
}

void sub_20C5496B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, int a13)
{
  sub_20C5495C4(&a11);
  sub_20BFD1A18(&a13);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C5496D4(uint64_t a1, unsigned int *a2, uint64_t *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _DWORD *v11;

  v6 = *(_QWORD *)(a1 + 32);
  if (!v6)
  {
    sub_20C549818((void **)a1);
    v6 = *(_QWORD *)(a1 + 32);
  }
  v7 = (_QWORD *)(*(_QWORD *)a1
                + 8
                * (bswap64(0x9E3779B97F4A7C55* (a2[1]+ ((a2[1] + (unint64_t)*a2 + (a2[1] + (unint64_t)*a2)* (a2[1] + (unint64_t)*a2)) >> 1))) & v6));
  v8 = (_QWORD *)*v7;
  if (*v7)
  {
    v9 = (_QWORD *)*v7;
    while (*v9 != *(_QWORD *)a2)
    {
      v9 = (_QWORD *)v9[2];
      if (!v9)
        goto LABEL_7;
    }
  }
  else
  {
LABEL_7:
    if (*(_QWORD *)(a1 + 24) > (unint64_t)((uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3))
    {
      sub_20C549818((void **)a1);
      v7 = (_QWORD *)(*(_QWORD *)a1
                    + 8
                    * (bswap64(0x9E3779B97F4A7C55* (a2[1]+ ((a2[1]+ (unint64_t)*a2+ (a2[1] + (unint64_t)*a2) * (a2[1] + (unint64_t)*a2)) >> 1))) & *(_QWORD *)(a1 + 32)));
      v8 = (_QWORD *)*v7;
    }
    v9 = operator new(0x28uLL);
    v10 = *a3;
    v11 = sub_20BFD6E54(v9, (_DWORD *)v10);
    sub_20BFD6EA4(v11 + 1, (_DWORD *)(v10 + 4));
    *((_BYTE *)v9 + 8) = *(_BYTE *)(v10 + 8);
    v9[3] = 0;
    v9[4] = 0;
    v9[2] = v8;
    *v7 = v9;
    ++*(_QWORD *)(a1 + 24);
  }
  return v9;
}

void sub_20C549818(void **a1)
{
  char *v2;
  unsigned __int8 v3;
  _QWORD *v4;
  _BOOL4 v5;
  unint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int *v10;
  unint64_t v11;
  unsigned int *v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  __int128 v17;
  void *v18;
  _QWORD *v19;
  unsigned int v20;
  uint64_t v21;
  int v22;

  sub_20BEB59B0((uint64_t)&v21, (uint64_t)"Sdf", (uint64_t)"SdfPathTable::_Grow");
  v3 = atomic_load(pxrInternal__aapl__pxrReserved__::TfMallocTag::_isInitialized);
  if ((v3 & 1) != 0)
  {
    v4 = pxrInternal__aapl__pxrReserved__::TfMallocTag::_Begin("void pxrInternal__aapl__pxrReserved__::SdfPathTable<BOOL>::_Grow() [MappedType = BOOL]", 0, v2);
    v5 = v4 != 0;
  }
  else
  {
    v4 = 0;
    v5 = 0;
  }
  v19 = v4;
  v20 = v5;
  v6 = (2 * (_QWORD)a1[4]) | 1;
  if (v6 <= 7)
    v6 = 7;
  a1[4] = (void *)v6;
  sub_20C5499CC(&v17, v6 + 1);
  v7 = a1[1];
  if (v7 != *a1)
  {
    v8 = 0;
    v9 = (v7 - (_BYTE *)*a1) >> 3;
    do
    {
      v10 = (unsigned int *)*((_QWORD *)*a1 + v8);
      if (v10)
      {
        v11 = (unint64_t)a1[4];
        do
        {
          v12 = (unsigned int *)*((_QWORD *)v10 + 2);
          v13 = bswap64(0x9E3779B97F4A7C55* (v10[1]+ ((v10[1]+ (unint64_t)*v10+ (v10[1] + (unint64_t)*v10) * (v10[1] + (unint64_t)*v10)) >> 1))) & v11;
          v14 = v17;
          *((_QWORD *)v10 + 2) = *(_QWORD *)(v17 + 8 * v13);
          *(_QWORD *)(v14 + 8 * v13) = v10;
          v10 = v12;
        }
        while (v12);
      }
      ++v8;
    }
    while (v8 != v9);
    v7 = *a1;
  }
  *(_OWORD *)a1 = v17;
  v15 = a1[2];
  a1[2] = v18;
  *(_QWORD *)&v17 = v7;
  v18 = v15;
  if (v7)
  {
    *((_QWORD *)&v17 + 1) = v7;
    operator delete(v7);
  }
  v20 = v5 - 1;
  if (v5)
  {
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End((uint64_t)v4);
    v20 = v5 | 0xFFFFFFFE;
  }
  while (v22--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v21);
}

void sub_20C5499A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_20BEB24F4((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C5499CC(_QWORD *a1, unint64_t a2)
{
  char *v4;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_20BDDF654(a1, a2);
    v4 = (char *)a1[1];
    bzero(v4, 8 * a2);
    a1[1] = &v4[8 * a2];
  }
  return a1;
}

void sub_20C549A24(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C549A40(uint64_t a1, uint64_t a2)
{
  pxrInternal__aapl__pxrReserved__ *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  BOOL v8;
  uint64_t v10;
  BOOL v12;
  _QWORD *UsdPrimDefaultPredicate;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 16));
  v4 = (pxrInternal__aapl__pxrReserved__ *)pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 20));
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 0;
  v5 = *(_QWORD *)(a2 + 8);
  if (!v5)
    goto LABEL_20;
  v6 = *(_QWORD *)(v5 + 40) & 7;
  v7 = *(_QWORD *)(v5 + 40) & 0xFFFFFFFFFFFFFFF8;
  if (v7)
    v8 = v6 == 0;
  else
    v8 = 0;
  if (v8)
    goto LABEL_21;
  if (!v6 || v7 == 0)
  {
LABEL_20:
    v7 = 0;
    goto LABEL_21;
  }
  while (1)
  {
    v10 = *(_QWORD *)(v7 + 40);
    v7 = v10 & 0xFFFFFFFFFFFFFFF8;
    if ((v10 & 7) == 0 && v7 != 0)
      break;
    if (v7)
      v12 = (v10 & 7) == 0;
    else
      v12 = 1;
    if (v12)
      goto LABEL_20;
  }
LABEL_21:
  UsdPrimDefaultPredicate = (_QWORD *)pxrInternal__aapl__pxrReserved__::GetUsdPrimDefaultPredicate(v4);
  sub_20C37F6C8(a1, v5, v7, (_DWORD *)(a2 + 16), UsdPrimDefaultPredicate);
  return a1;
}

void sub_20C549B08(_Unwind_Exception *a1)
{
  _DWORD *v1;

  sub_20BFD1A18(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C549B1C(uint64_t *a1)
{
  void *v2;

  sub_20C549B50(a1);
  v2 = (void *)*a1;
  if (*a1)
  {
    a1[1] = (uint64_t)v2;
    operator delete(v2);
  }
  return a1;
}

void sub_20C549B50(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _DWORD *v8;

  v2 = a1[1] - *a1;
  if (v2)
  {
    v3 = 0;
    v4 = v2 >> 3;
    do
    {
      v5 = *a1;
      v6 = *(_QWORD *)(*a1 + 8 * v3);
      if (v6)
      {
        do
        {
          v7 = *(_QWORD *)(v6 + 16);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(v6 + 4));
          v8 = sub_20BFD265C((_DWORD *)v6);
          operator delete(v8);
          v6 = v7;
        }
        while (v7);
        v5 = *a1;
      }
      *(_QWORD *)(v5 + 8 * v3++) = 0;
    }
    while (v3 != v4);
  }
  a1[3] = 0;
}

void sub_20C549BD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;

  if (*(_QWORD *)(a1 + 24))
  {
    sub_20C548D2C(a1, *(_QWORD **)(a1 + 16));
    *(_QWORD *)(a1 + 16) = 0;
    v2 = *(_QWORD *)(a1 + 8);
    if (v2)
    {
      for (i = 0; i != v2; ++i)
        *(_QWORD *)(*(_QWORD *)a1 + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 24) = 0;
  }
}

pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *sub_20C549C2C(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *result;
  void *v4;

  result = sub_20C549C74();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    v4 = (void *)sub_20C549CB4((uint64_t)result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *sub_20C549C74()
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)operator new(0x660uLL);
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType::UsdGeomTokensType(v0);
  return v0;
}

void sub_20C549CA0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C549CB4(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  uint64_t v26;
  unsigned int *v27;
  unsigned int v28;
  uint64_t v29;
  unsigned int *v30;
  unsigned int v31;
  uint64_t v32;
  unsigned int *v33;
  unsigned int v34;
  uint64_t v35;
  unsigned int *v36;
  unsigned int v37;
  uint64_t v38;
  unsigned int *v39;
  unsigned int v40;
  uint64_t v41;
  unsigned int *v42;
  unsigned int v43;
  uint64_t v44;
  unsigned int *v45;
  unsigned int v46;
  uint64_t v47;
  unsigned int *v48;
  unsigned int v49;
  uint64_t v50;
  unsigned int *v51;
  unsigned int v52;
  uint64_t v53;
  unsigned int *v54;
  unsigned int v55;
  uint64_t v56;
  unsigned int *v57;
  unsigned int v58;
  uint64_t v59;
  unsigned int *v60;
  unsigned int v61;
  uint64_t v62;
  unsigned int *v63;
  unsigned int v64;
  uint64_t v65;
  unsigned int *v66;
  unsigned int v67;
  uint64_t v68;
  unsigned int *v69;
  unsigned int v70;
  uint64_t v71;
  unsigned int *v72;
  unsigned int v73;
  uint64_t v74;
  unsigned int *v75;
  unsigned int v76;
  uint64_t v77;
  unsigned int *v78;
  unsigned int v79;
  uint64_t v80;
  unsigned int *v81;
  unsigned int v82;
  uint64_t v83;
  unsigned int *v84;
  unsigned int v85;
  uint64_t v86;
  unsigned int *v87;
  unsigned int v88;
  uint64_t v89;
  unsigned int *v90;
  unsigned int v91;
  uint64_t v92;
  unsigned int *v93;
  unsigned int v94;
  uint64_t v95;
  unsigned int *v96;
  unsigned int v97;
  uint64_t v98;
  unsigned int *v99;
  unsigned int v100;
  uint64_t v101;
  unsigned int *v102;
  unsigned int v103;
  uint64_t v104;
  unsigned int *v105;
  unsigned int v106;
  uint64_t v107;
  unsigned int *v108;
  unsigned int v109;
  uint64_t v110;
  unsigned int *v111;
  unsigned int v112;
  uint64_t v113;
  unsigned int *v114;
  unsigned int v115;
  uint64_t v116;
  unsigned int *v117;
  unsigned int v118;
  uint64_t v119;
  unsigned int *v120;
  unsigned int v121;
  uint64_t v122;
  unsigned int *v123;
  unsigned int v124;
  uint64_t v125;
  unsigned int *v126;
  unsigned int v127;
  uint64_t v128;
  unsigned int *v129;
  unsigned int v130;
  uint64_t v131;
  unsigned int *v132;
  unsigned int v133;
  uint64_t v134;
  unsigned int *v135;
  unsigned int v136;
  uint64_t v137;
  unsigned int *v138;
  unsigned int v139;
  uint64_t v140;
  unsigned int *v141;
  unsigned int v142;
  uint64_t v143;
  unsigned int *v144;
  unsigned int v145;
  uint64_t v146;
  unsigned int *v147;
  unsigned int v148;
  uint64_t v149;
  unsigned int *v150;
  unsigned int v151;
  uint64_t v152;
  unsigned int *v153;
  unsigned int v154;
  uint64_t v155;
  unsigned int *v156;
  unsigned int v157;
  uint64_t v158;
  unsigned int *v159;
  unsigned int v160;
  uint64_t v161;
  unsigned int *v162;
  unsigned int v163;
  uint64_t v164;
  unsigned int *v165;
  unsigned int v166;
  uint64_t v167;
  unsigned int *v168;
  unsigned int v169;
  uint64_t v170;
  unsigned int *v171;
  unsigned int v172;
  uint64_t v173;
  unsigned int *v174;
  unsigned int v175;
  uint64_t v176;
  unsigned int *v177;
  unsigned int v178;
  uint64_t v179;
  unsigned int *v180;
  unsigned int v181;
  uint64_t v182;
  unsigned int *v183;
  unsigned int v184;
  uint64_t v185;
  unsigned int *v186;
  unsigned int v187;
  uint64_t v188;
  unsigned int *v189;
  unsigned int v190;
  uint64_t v191;
  unsigned int *v192;
  unsigned int v193;
  uint64_t v194;
  unsigned int *v195;
  unsigned int v196;
  uint64_t v197;
  unsigned int *v198;
  unsigned int v199;
  uint64_t v200;
  unsigned int *v201;
  unsigned int v202;
  uint64_t v203;
  unsigned int *v204;
  unsigned int v205;
  uint64_t v206;
  unsigned int *v207;
  unsigned int v208;
  uint64_t v209;
  unsigned int *v210;
  unsigned int v211;
  uint64_t v212;
  unsigned int *v213;
  unsigned int v214;
  uint64_t v215;
  unsigned int *v216;
  unsigned int v217;
  uint64_t v218;
  unsigned int *v219;
  unsigned int v220;
  uint64_t v221;
  unsigned int *v222;
  unsigned int v223;
  uint64_t v224;
  unsigned int *v225;
  unsigned int v226;
  uint64_t v227;
  unsigned int *v228;
  unsigned int v229;
  uint64_t v230;
  unsigned int *v231;
  unsigned int v232;
  uint64_t v233;
  unsigned int *v234;
  unsigned int v235;
  uint64_t v236;
  unsigned int *v237;
  unsigned int v238;
  uint64_t v239;
  unsigned int *v240;
  unsigned int v241;
  uint64_t v242;
  unsigned int *v243;
  unsigned int v244;
  uint64_t v245;
  unsigned int *v246;
  unsigned int v247;
  uint64_t v248;
  unsigned int *v249;
  unsigned int v250;
  uint64_t v251;
  unsigned int *v252;
  unsigned int v253;
  uint64_t v254;
  unsigned int *v255;
  unsigned int v256;
  uint64_t v257;
  unsigned int *v258;
  unsigned int v259;
  uint64_t v260;
  unsigned int *v261;
  unsigned int v262;
  uint64_t v263;
  unsigned int *v264;
  unsigned int v265;
  uint64_t v266;
  unsigned int *v267;
  unsigned int v268;
  uint64_t v269;
  unsigned int *v270;
  unsigned int v271;
  uint64_t v272;
  unsigned int *v273;
  unsigned int v274;
  uint64_t v275;
  unsigned int *v276;
  unsigned int v277;
  uint64_t v278;
  unsigned int *v279;
  unsigned int v280;
  uint64_t v281;
  unsigned int *v282;
  unsigned int v283;
  uint64_t v284;
  unsigned int *v285;
  unsigned int v286;
  uint64_t v287;
  unsigned int *v288;
  unsigned int v289;
  uint64_t v290;
  unsigned int *v291;
  unsigned int v292;
  uint64_t v293;
  unsigned int *v294;
  unsigned int v295;
  uint64_t v296;
  unsigned int *v297;
  unsigned int v298;
  uint64_t v299;
  unsigned int *v300;
  unsigned int v301;
  uint64_t v302;
  unsigned int *v303;
  unsigned int v304;
  uint64_t v305;
  unsigned int *v306;
  unsigned int v307;
  uint64_t v308;
  unsigned int *v309;
  unsigned int v310;
  uint64_t v311;
  unsigned int *v312;
  unsigned int v313;
  uint64_t v314;
  unsigned int *v315;
  unsigned int v316;
  uint64_t v317;
  unsigned int *v318;
  unsigned int v319;
  uint64_t v320;
  unsigned int *v321;
  unsigned int v322;
  uint64_t v323;
  unsigned int *v324;
  unsigned int v325;
  uint64_t v326;
  unsigned int *v327;
  unsigned int v328;
  uint64_t v329;
  unsigned int *v330;
  unsigned int v331;
  uint64_t v332;
  unsigned int *v333;
  unsigned int v334;
  uint64_t v335;
  unsigned int *v336;
  unsigned int v337;
  uint64_t v338;
  unsigned int *v339;
  unsigned int v340;
  uint64_t v341;
  unsigned int *v342;
  unsigned int v343;
  uint64_t v344;
  unsigned int *v345;
  unsigned int v346;
  uint64_t v347;
  unsigned int *v348;
  unsigned int v349;
  uint64_t v350;
  unsigned int *v351;
  unsigned int v352;
  uint64_t v353;
  unsigned int *v354;
  unsigned int v355;
  uint64_t v356;
  unsigned int *v357;
  unsigned int v358;
  uint64_t v359;
  unsigned int *v360;
  unsigned int v361;
  uint64_t v362;
  unsigned int *v363;
  unsigned int v364;
  uint64_t v365;
  unsigned int *v366;
  unsigned int v367;
  uint64_t v368;
  unsigned int *v369;
  unsigned int v370;
  uint64_t v371;
  unsigned int *v372;
  unsigned int v373;
  uint64_t v374;
  unsigned int *v375;
  unsigned int v376;
  uint64_t v377;
  unsigned int *v378;
  unsigned int v379;
  uint64_t v380;
  unsigned int *v381;
  unsigned int v382;
  uint64_t v383;
  unsigned int *v384;
  unsigned int v385;
  uint64_t v386;
  unsigned int *v387;
  unsigned int v388;
  uint64_t v389;
  unsigned int *v390;
  unsigned int v391;
  uint64_t v392;
  unsigned int *v393;
  unsigned int v394;
  uint64_t v395;
  unsigned int *v396;
  unsigned int v397;
  uint64_t v398;
  unsigned int *v399;
  unsigned int v400;
  uint64_t v401;
  unsigned int *v402;
  unsigned int v403;
  uint64_t v404;
  unsigned int *v405;
  unsigned int v406;
  uint64_t v407;
  unsigned int *v408;
  unsigned int v409;
  uint64_t v410;
  unsigned int *v411;
  unsigned int v412;
  uint64_t v413;
  unsigned int *v414;
  unsigned int v415;
  uint64_t v416;
  unsigned int *v417;
  unsigned int v418;
  uint64_t v419;
  unsigned int *v420;
  unsigned int v421;
  uint64_t v422;
  unsigned int *v423;
  unsigned int v424;
  uint64_t v425;
  unsigned int *v426;
  unsigned int v427;
  uint64_t v428;
  unsigned int *v429;
  unsigned int v430;
  uint64_t v431;
  unsigned int *v432;
  unsigned int v433;
  uint64_t v434;
  unsigned int *v435;
  unsigned int v436;
  uint64_t v437;
  unsigned int *v438;
  unsigned int v439;
  uint64_t v440;
  unsigned int *v441;
  unsigned int v442;
  uint64_t v443;
  unsigned int *v444;
  unsigned int v445;
  uint64_t v446;
  unsigned int *v447;
  unsigned int v448;
  uint64_t v449;
  unsigned int *v450;
  unsigned int v451;
  uint64_t v452;
  unsigned int *v453;
  unsigned int v454;
  uint64_t v455;
  unsigned int *v456;
  unsigned int v457;
  uint64_t v458;
  unsigned int *v459;
  unsigned int v460;
  uint64_t v461;
  unsigned int *v462;
  unsigned int v463;
  uint64_t v464;
  unsigned int *v465;
  unsigned int v466;
  uint64_t v467;
  unsigned int *v468;
  unsigned int v469;
  uint64_t v470;
  unsigned int *v471;
  unsigned int v472;
  uint64_t v473;
  unsigned int *v474;
  unsigned int v475;
  uint64_t v476;
  unsigned int *v477;
  unsigned int v478;
  uint64_t v479;
  unsigned int *v480;
  unsigned int v481;
  uint64_t v482;
  unsigned int *v483;
  unsigned int v484;
  uint64_t v485;
  unsigned int *v486;
  unsigned int v487;
  uint64_t v488;
  unsigned int *v489;
  unsigned int v490;
  uint64_t v491;
  unsigned int *v492;
  unsigned int v493;
  uint64_t v494;
  unsigned int *v495;
  unsigned int v496;
  uint64_t v497;
  unsigned int *v498;
  unsigned int v499;
  uint64_t v500;
  unsigned int *v501;
  unsigned int v502;
  uint64_t v503;
  unsigned int *v504;
  unsigned int v505;
  uint64_t v506;
  unsigned int *v507;
  unsigned int v508;
  uint64_t v509;
  unsigned int *v510;
  unsigned int v511;
  uint64_t v512;
  unsigned int *v513;
  unsigned int v514;
  uint64_t v515;
  unsigned int *v516;
  unsigned int v517;
  uint64_t v518;
  unsigned int *v519;
  unsigned int v520;
  uint64_t v521;
  unsigned int *v522;
  unsigned int v523;
  uint64_t v524;
  unsigned int *v525;
  unsigned int v526;
  uint64_t v527;
  unsigned int *v528;
  unsigned int v529;
  uint64_t v530;
  unsigned int *v531;
  unsigned int v532;
  uint64_t v533;
  unsigned int *v534;
  unsigned int v535;
  uint64_t v536;
  unsigned int *v537;
  unsigned int v538;
  uint64_t v539;
  unsigned int *v540;
  unsigned int v541;
  uint64_t v542;
  unsigned int *v543;
  unsigned int v544;
  uint64_t v545;
  unsigned int *v546;
  unsigned int v547;
  uint64_t v548;
  unsigned int *v549;
  unsigned int v550;
  uint64_t v551;
  unsigned int *v552;
  unsigned int v553;
  uint64_t v554;
  unsigned int *v555;
  unsigned int v556;
  uint64_t v557;
  unsigned int *v558;
  unsigned int v559;
  uint64_t v560;
  unsigned int *v561;
  unsigned int v562;
  uint64_t v563;
  unsigned int *v564;
  unsigned int v565;
  uint64_t v566;
  unsigned int *v567;
  unsigned int v568;
  uint64_t v569;
  unsigned int *v570;
  unsigned int v571;
  uint64_t v572;
  unsigned int *v573;
  unsigned int v574;
  uint64_t v575;
  unsigned int *v576;
  unsigned int v577;
  uint64_t v578;
  unsigned int *v579;
  unsigned int v580;
  uint64_t v581;
  unsigned int *v582;
  unsigned int v583;
  uint64_t v584;
  unsigned int *v585;
  unsigned int v586;
  uint64_t v587;
  unsigned int *v588;
  unsigned int v589;
  uint64_t v590;
  unsigned int *v591;
  unsigned int v592;
  uint64_t v593;
  unsigned int *v594;
  unsigned int v595;
  uint64_t v596;
  unsigned int *v597;
  unsigned int v598;
  uint64_t v599;
  unsigned int *v600;
  unsigned int v601;
  unsigned int *v602;
  unsigned int v603;
  void **v605;

  v605 = (void **)(a1 + 1608);
  sub_20BEEB2B8(&v605);
  v2 = *(_QWORD *)(a1 + 1600);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *(_QWORD *)(a1 + 1592);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  v8 = *(_QWORD *)(a1 + 1584);
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  v11 = *(_QWORD *)(a1 + 1576);
  if ((v11 & 7) != 0)
  {
    v12 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stlxr(v13 - 2, v12));
  }
  v14 = *(_QWORD *)(a1 + 1568);
  if ((v14 & 7) != 0)
  {
    v15 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
    do
      v16 = __ldxr(v15);
    while (__stlxr(v16 - 2, v15));
  }
  v17 = *(_QWORD *)(a1 + 1560);
  if ((v17 & 7) != 0)
  {
    v18 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
    do
      v19 = __ldxr(v18);
    while (__stlxr(v19 - 2, v18));
  }
  v20 = *(_QWORD *)(a1 + 1552);
  if ((v20 & 7) != 0)
  {
    v21 = (unsigned int *)(v20 & 0xFFFFFFFFFFFFFFF8);
    do
      v22 = __ldxr(v21);
    while (__stlxr(v22 - 2, v21));
  }
  v23 = *(_QWORD *)(a1 + 1544);
  if ((v23 & 7) != 0)
  {
    v24 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
    do
      v25 = __ldxr(v24);
    while (__stlxr(v25 - 2, v24));
  }
  v26 = *(_QWORD *)(a1 + 1536);
  if ((v26 & 7) != 0)
  {
    v27 = (unsigned int *)(v26 & 0xFFFFFFFFFFFFFFF8);
    do
      v28 = __ldxr(v27);
    while (__stlxr(v28 - 2, v27));
  }
  v29 = *(_QWORD *)(a1 + 1528);
  if ((v29 & 7) != 0)
  {
    v30 = (unsigned int *)(v29 & 0xFFFFFFFFFFFFFFF8);
    do
      v31 = __ldxr(v30);
    while (__stlxr(v31 - 2, v30));
  }
  v32 = *(_QWORD *)(a1 + 1520);
  if ((v32 & 7) != 0)
  {
    v33 = (unsigned int *)(v32 & 0xFFFFFFFFFFFFFFF8);
    do
      v34 = __ldxr(v33);
    while (__stlxr(v34 - 2, v33));
  }
  v35 = *(_QWORD *)(a1 + 1512);
  if ((v35 & 7) != 0)
  {
    v36 = (unsigned int *)(v35 & 0xFFFFFFFFFFFFFFF8);
    do
      v37 = __ldxr(v36);
    while (__stlxr(v37 - 2, v36));
  }
  v38 = *(_QWORD *)(a1 + 1504);
  if ((v38 & 7) != 0)
  {
    v39 = (unsigned int *)(v38 & 0xFFFFFFFFFFFFFFF8);
    do
      v40 = __ldxr(v39);
    while (__stlxr(v40 - 2, v39));
  }
  v41 = *(_QWORD *)(a1 + 1496);
  if ((v41 & 7) != 0)
  {
    v42 = (unsigned int *)(v41 & 0xFFFFFFFFFFFFFFF8);
    do
      v43 = __ldxr(v42);
    while (__stlxr(v43 - 2, v42));
  }
  v44 = *(_QWORD *)(a1 + 1488);
  if ((v44 & 7) != 0)
  {
    v45 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v46 = __ldxr(v45);
    while (__stlxr(v46 - 2, v45));
  }
  v47 = *(_QWORD *)(a1 + 1480);
  if ((v47 & 7) != 0)
  {
    v48 = (unsigned int *)(v47 & 0xFFFFFFFFFFFFFFF8);
    do
      v49 = __ldxr(v48);
    while (__stlxr(v49 - 2, v48));
  }
  v50 = *(_QWORD *)(a1 + 1472);
  if ((v50 & 7) != 0)
  {
    v51 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v52 = __ldxr(v51);
    while (__stlxr(v52 - 2, v51));
  }
  v53 = *(_QWORD *)(a1 + 1464);
  if ((v53 & 7) != 0)
  {
    v54 = (unsigned int *)(v53 & 0xFFFFFFFFFFFFFFF8);
    do
      v55 = __ldxr(v54);
    while (__stlxr(v55 - 2, v54));
  }
  v56 = *(_QWORD *)(a1 + 1456);
  if ((v56 & 7) != 0)
  {
    v57 = (unsigned int *)(v56 & 0xFFFFFFFFFFFFFFF8);
    do
      v58 = __ldxr(v57);
    while (__stlxr(v58 - 2, v57));
  }
  v59 = *(_QWORD *)(a1 + 1448);
  if ((v59 & 7) != 0)
  {
    v60 = (unsigned int *)(v59 & 0xFFFFFFFFFFFFFFF8);
    do
      v61 = __ldxr(v60);
    while (__stlxr(v61 - 2, v60));
  }
  v62 = *(_QWORD *)(a1 + 1440);
  if ((v62 & 7) != 0)
  {
    v63 = (unsigned int *)(v62 & 0xFFFFFFFFFFFFFFF8);
    do
      v64 = __ldxr(v63);
    while (__stlxr(v64 - 2, v63));
  }
  v65 = *(_QWORD *)(a1 + 1432);
  if ((v65 & 7) != 0)
  {
    v66 = (unsigned int *)(v65 & 0xFFFFFFFFFFFFFFF8);
    do
      v67 = __ldxr(v66);
    while (__stlxr(v67 - 2, v66));
  }
  v68 = *(_QWORD *)(a1 + 1424);
  if ((v68 & 7) != 0)
  {
    v69 = (unsigned int *)(v68 & 0xFFFFFFFFFFFFFFF8);
    do
      v70 = __ldxr(v69);
    while (__stlxr(v70 - 2, v69));
  }
  v71 = *(_QWORD *)(a1 + 1416);
  if ((v71 & 7) != 0)
  {
    v72 = (unsigned int *)(v71 & 0xFFFFFFFFFFFFFFF8);
    do
      v73 = __ldxr(v72);
    while (__stlxr(v73 - 2, v72));
  }
  v74 = *(_QWORD *)(a1 + 1408);
  if ((v74 & 7) != 0)
  {
    v75 = (unsigned int *)(v74 & 0xFFFFFFFFFFFFFFF8);
    do
      v76 = __ldxr(v75);
    while (__stlxr(v76 - 2, v75));
  }
  v77 = *(_QWORD *)(a1 + 1400);
  if ((v77 & 7) != 0)
  {
    v78 = (unsigned int *)(v77 & 0xFFFFFFFFFFFFFFF8);
    do
      v79 = __ldxr(v78);
    while (__stlxr(v79 - 2, v78));
  }
  v80 = *(_QWORD *)(a1 + 1392);
  if ((v80 & 7) != 0)
  {
    v81 = (unsigned int *)(v80 & 0xFFFFFFFFFFFFFFF8);
    do
      v82 = __ldxr(v81);
    while (__stlxr(v82 - 2, v81));
  }
  v83 = *(_QWORD *)(a1 + 1384);
  if ((v83 & 7) != 0)
  {
    v84 = (unsigned int *)(v83 & 0xFFFFFFFFFFFFFFF8);
    do
      v85 = __ldxr(v84);
    while (__stlxr(v85 - 2, v84));
  }
  v86 = *(_QWORD *)(a1 + 1376);
  if ((v86 & 7) != 0)
  {
    v87 = (unsigned int *)(v86 & 0xFFFFFFFFFFFFFFF8);
    do
      v88 = __ldxr(v87);
    while (__stlxr(v88 - 2, v87));
  }
  v89 = *(_QWORD *)(a1 + 1368);
  if ((v89 & 7) != 0)
  {
    v90 = (unsigned int *)(v89 & 0xFFFFFFFFFFFFFFF8);
    do
      v91 = __ldxr(v90);
    while (__stlxr(v91 - 2, v90));
  }
  v92 = *(_QWORD *)(a1 + 1360);
  if ((v92 & 7) != 0)
  {
    v93 = (unsigned int *)(v92 & 0xFFFFFFFFFFFFFFF8);
    do
      v94 = __ldxr(v93);
    while (__stlxr(v94 - 2, v93));
  }
  v95 = *(_QWORD *)(a1 + 1352);
  if ((v95 & 7) != 0)
  {
    v96 = (unsigned int *)(v95 & 0xFFFFFFFFFFFFFFF8);
    do
      v97 = __ldxr(v96);
    while (__stlxr(v97 - 2, v96));
  }
  v98 = *(_QWORD *)(a1 + 1344);
  if ((v98 & 7) != 0)
  {
    v99 = (unsigned int *)(v98 & 0xFFFFFFFFFFFFFFF8);
    do
      v100 = __ldxr(v99);
    while (__stlxr(v100 - 2, v99));
  }
  v101 = *(_QWORD *)(a1 + 1336);
  if ((v101 & 7) != 0)
  {
    v102 = (unsigned int *)(v101 & 0xFFFFFFFFFFFFFFF8);
    do
      v103 = __ldxr(v102);
    while (__stlxr(v103 - 2, v102));
  }
  v104 = *(_QWORD *)(a1 + 1328);
  if ((v104 & 7) != 0)
  {
    v105 = (unsigned int *)(v104 & 0xFFFFFFFFFFFFFFF8);
    do
      v106 = __ldxr(v105);
    while (__stlxr(v106 - 2, v105));
  }
  v107 = *(_QWORD *)(a1 + 1320);
  if ((v107 & 7) != 0)
  {
    v108 = (unsigned int *)(v107 & 0xFFFFFFFFFFFFFFF8);
    do
      v109 = __ldxr(v108);
    while (__stlxr(v109 - 2, v108));
  }
  v110 = *(_QWORD *)(a1 + 1312);
  if ((v110 & 7) != 0)
  {
    v111 = (unsigned int *)(v110 & 0xFFFFFFFFFFFFFFF8);
    do
      v112 = __ldxr(v111);
    while (__stlxr(v112 - 2, v111));
  }
  v113 = *(_QWORD *)(a1 + 1304);
  if ((v113 & 7) != 0)
  {
    v114 = (unsigned int *)(v113 & 0xFFFFFFFFFFFFFFF8);
    do
      v115 = __ldxr(v114);
    while (__stlxr(v115 - 2, v114));
  }
  v116 = *(_QWORD *)(a1 + 1296);
  if ((v116 & 7) != 0)
  {
    v117 = (unsigned int *)(v116 & 0xFFFFFFFFFFFFFFF8);
    do
      v118 = __ldxr(v117);
    while (__stlxr(v118 - 2, v117));
  }
  v119 = *(_QWORD *)(a1 + 1288);
  if ((v119 & 7) != 0)
  {
    v120 = (unsigned int *)(v119 & 0xFFFFFFFFFFFFFFF8);
    do
      v121 = __ldxr(v120);
    while (__stlxr(v121 - 2, v120));
  }
  v122 = *(_QWORD *)(a1 + 1280);
  if ((v122 & 7) != 0)
  {
    v123 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
    do
      v124 = __ldxr(v123);
    while (__stlxr(v124 - 2, v123));
  }
  v125 = *(_QWORD *)(a1 + 1272);
  if ((v125 & 7) != 0)
  {
    v126 = (unsigned int *)(v125 & 0xFFFFFFFFFFFFFFF8);
    do
      v127 = __ldxr(v126);
    while (__stlxr(v127 - 2, v126));
  }
  v128 = *(_QWORD *)(a1 + 1264);
  if ((v128 & 7) != 0)
  {
    v129 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
    do
      v130 = __ldxr(v129);
    while (__stlxr(v130 - 2, v129));
  }
  v131 = *(_QWORD *)(a1 + 1256);
  if ((v131 & 7) != 0)
  {
    v132 = (unsigned int *)(v131 & 0xFFFFFFFFFFFFFFF8);
    do
      v133 = __ldxr(v132);
    while (__stlxr(v133 - 2, v132));
  }
  v134 = *(_QWORD *)(a1 + 1248);
  if ((v134 & 7) != 0)
  {
    v135 = (unsigned int *)(v134 & 0xFFFFFFFFFFFFFFF8);
    do
      v136 = __ldxr(v135);
    while (__stlxr(v136 - 2, v135));
  }
  v137 = *(_QWORD *)(a1 + 1240);
  if ((v137 & 7) != 0)
  {
    v138 = (unsigned int *)(v137 & 0xFFFFFFFFFFFFFFF8);
    do
      v139 = __ldxr(v138);
    while (__stlxr(v139 - 2, v138));
  }
  v140 = *(_QWORD *)(a1 + 1232);
  if ((v140 & 7) != 0)
  {
    v141 = (unsigned int *)(v140 & 0xFFFFFFFFFFFFFFF8);
    do
      v142 = __ldxr(v141);
    while (__stlxr(v142 - 2, v141));
  }
  v143 = *(_QWORD *)(a1 + 1224);
  if ((v143 & 7) != 0)
  {
    v144 = (unsigned int *)(v143 & 0xFFFFFFFFFFFFFFF8);
    do
      v145 = __ldxr(v144);
    while (__stlxr(v145 - 2, v144));
  }
  v146 = *(_QWORD *)(a1 + 1216);
  if ((v146 & 7) != 0)
  {
    v147 = (unsigned int *)(v146 & 0xFFFFFFFFFFFFFFF8);
    do
      v148 = __ldxr(v147);
    while (__stlxr(v148 - 2, v147));
  }
  v149 = *(_QWORD *)(a1 + 1208);
  if ((v149 & 7) != 0)
  {
    v150 = (unsigned int *)(v149 & 0xFFFFFFFFFFFFFFF8);
    do
      v151 = __ldxr(v150);
    while (__stlxr(v151 - 2, v150));
  }
  v152 = *(_QWORD *)(a1 + 1200);
  if ((v152 & 7) != 0)
  {
    v153 = (unsigned int *)(v152 & 0xFFFFFFFFFFFFFFF8);
    do
      v154 = __ldxr(v153);
    while (__stlxr(v154 - 2, v153));
  }
  v155 = *(_QWORD *)(a1 + 1192);
  if ((v155 & 7) != 0)
  {
    v156 = (unsigned int *)(v155 & 0xFFFFFFFFFFFFFFF8);
    do
      v157 = __ldxr(v156);
    while (__stlxr(v157 - 2, v156));
  }
  v158 = *(_QWORD *)(a1 + 1184);
  if ((v158 & 7) != 0)
  {
    v159 = (unsigned int *)(v158 & 0xFFFFFFFFFFFFFFF8);
    do
      v160 = __ldxr(v159);
    while (__stlxr(v160 - 2, v159));
  }
  v161 = *(_QWORD *)(a1 + 1176);
  if ((v161 & 7) != 0)
  {
    v162 = (unsigned int *)(v161 & 0xFFFFFFFFFFFFFFF8);
    do
      v163 = __ldxr(v162);
    while (__stlxr(v163 - 2, v162));
  }
  v164 = *(_QWORD *)(a1 + 1168);
  if ((v164 & 7) != 0)
  {
    v165 = (unsigned int *)(v164 & 0xFFFFFFFFFFFFFFF8);
    do
      v166 = __ldxr(v165);
    while (__stlxr(v166 - 2, v165));
  }
  v167 = *(_QWORD *)(a1 + 1160);
  if ((v167 & 7) != 0)
  {
    v168 = (unsigned int *)(v167 & 0xFFFFFFFFFFFFFFF8);
    do
      v169 = __ldxr(v168);
    while (__stlxr(v169 - 2, v168));
  }
  v170 = *(_QWORD *)(a1 + 1152);
  if ((v170 & 7) != 0)
  {
    v171 = (unsigned int *)(v170 & 0xFFFFFFFFFFFFFFF8);
    do
      v172 = __ldxr(v171);
    while (__stlxr(v172 - 2, v171));
  }
  v173 = *(_QWORD *)(a1 + 1144);
  if ((v173 & 7) != 0)
  {
    v174 = (unsigned int *)(v173 & 0xFFFFFFFFFFFFFFF8);
    do
      v175 = __ldxr(v174);
    while (__stlxr(v175 - 2, v174));
  }
  v176 = *(_QWORD *)(a1 + 1136);
  if ((v176 & 7) != 0)
  {
    v177 = (unsigned int *)(v176 & 0xFFFFFFFFFFFFFFF8);
    do
      v178 = __ldxr(v177);
    while (__stlxr(v178 - 2, v177));
  }
  v179 = *(_QWORD *)(a1 + 1128);
  if ((v179 & 7) != 0)
  {
    v180 = (unsigned int *)(v179 & 0xFFFFFFFFFFFFFFF8);
    do
      v181 = __ldxr(v180);
    while (__stlxr(v181 - 2, v180));
  }
  v182 = *(_QWORD *)(a1 + 1120);
  if ((v182 & 7) != 0)
  {
    v183 = (unsigned int *)(v182 & 0xFFFFFFFFFFFFFFF8);
    do
      v184 = __ldxr(v183);
    while (__stlxr(v184 - 2, v183));
  }
  v185 = *(_QWORD *)(a1 + 1112);
  if ((v185 & 7) != 0)
  {
    v186 = (unsigned int *)(v185 & 0xFFFFFFFFFFFFFFF8);
    do
      v187 = __ldxr(v186);
    while (__stlxr(v187 - 2, v186));
  }
  v188 = *(_QWORD *)(a1 + 1104);
  if ((v188 & 7) != 0)
  {
    v189 = (unsigned int *)(v188 & 0xFFFFFFFFFFFFFFF8);
    do
      v190 = __ldxr(v189);
    while (__stlxr(v190 - 2, v189));
  }
  v191 = *(_QWORD *)(a1 + 1096);
  if ((v191 & 7) != 0)
  {
    v192 = (unsigned int *)(v191 & 0xFFFFFFFFFFFFFFF8);
    do
      v193 = __ldxr(v192);
    while (__stlxr(v193 - 2, v192));
  }
  v194 = *(_QWORD *)(a1 + 1088);
  if ((v194 & 7) != 0)
  {
    v195 = (unsigned int *)(v194 & 0xFFFFFFFFFFFFFFF8);
    do
      v196 = __ldxr(v195);
    while (__stlxr(v196 - 2, v195));
  }
  v197 = *(_QWORD *)(a1 + 1080);
  if ((v197 & 7) != 0)
  {
    v198 = (unsigned int *)(v197 & 0xFFFFFFFFFFFFFFF8);
    do
      v199 = __ldxr(v198);
    while (__stlxr(v199 - 2, v198));
  }
  v200 = *(_QWORD *)(a1 + 1072);
  if ((v200 & 7) != 0)
  {
    v201 = (unsigned int *)(v200 & 0xFFFFFFFFFFFFFFF8);
    do
      v202 = __ldxr(v201);
    while (__stlxr(v202 - 2, v201));
  }
  v203 = *(_QWORD *)(a1 + 1064);
  if ((v203 & 7) != 0)
  {
    v204 = (unsigned int *)(v203 & 0xFFFFFFFFFFFFFFF8);
    do
      v205 = __ldxr(v204);
    while (__stlxr(v205 - 2, v204));
  }
  v206 = *(_QWORD *)(a1 + 1056);
  if ((v206 & 7) != 0)
  {
    v207 = (unsigned int *)(v206 & 0xFFFFFFFFFFFFFFF8);
    do
      v208 = __ldxr(v207);
    while (__stlxr(v208 - 2, v207));
  }
  v209 = *(_QWORD *)(a1 + 1048);
  if ((v209 & 7) != 0)
  {
    v210 = (unsigned int *)(v209 & 0xFFFFFFFFFFFFFFF8);
    do
      v211 = __ldxr(v210);
    while (__stlxr(v211 - 2, v210));
  }
  v212 = *(_QWORD *)(a1 + 1040);
  if ((v212 & 7) != 0)
  {
    v213 = (unsigned int *)(v212 & 0xFFFFFFFFFFFFFFF8);
    do
      v214 = __ldxr(v213);
    while (__stlxr(v214 - 2, v213));
  }
  v215 = *(_QWORD *)(a1 + 1032);
  if ((v215 & 7) != 0)
  {
    v216 = (unsigned int *)(v215 & 0xFFFFFFFFFFFFFFF8);
    do
      v217 = __ldxr(v216);
    while (__stlxr(v217 - 2, v216));
  }
  v218 = *(_QWORD *)(a1 + 1024);
  if ((v218 & 7) != 0)
  {
    v219 = (unsigned int *)(v218 & 0xFFFFFFFFFFFFFFF8);
    do
      v220 = __ldxr(v219);
    while (__stlxr(v220 - 2, v219));
  }
  v221 = *(_QWORD *)(a1 + 1016);
  if ((v221 & 7) != 0)
  {
    v222 = (unsigned int *)(v221 & 0xFFFFFFFFFFFFFFF8);
    do
      v223 = __ldxr(v222);
    while (__stlxr(v223 - 2, v222));
  }
  v224 = *(_QWORD *)(a1 + 1008);
  if ((v224 & 7) != 0)
  {
    v225 = (unsigned int *)(v224 & 0xFFFFFFFFFFFFFFF8);
    do
      v226 = __ldxr(v225);
    while (__stlxr(v226 - 2, v225));
  }
  v227 = *(_QWORD *)(a1 + 1000);
  if ((v227 & 7) != 0)
  {
    v228 = (unsigned int *)(v227 & 0xFFFFFFFFFFFFFFF8);
    do
      v229 = __ldxr(v228);
    while (__stlxr(v229 - 2, v228));
  }
  v230 = *(_QWORD *)(a1 + 992);
  if ((v230 & 7) != 0)
  {
    v231 = (unsigned int *)(v230 & 0xFFFFFFFFFFFFFFF8);
    do
      v232 = __ldxr(v231);
    while (__stlxr(v232 - 2, v231));
  }
  v233 = *(_QWORD *)(a1 + 984);
  if ((v233 & 7) != 0)
  {
    v234 = (unsigned int *)(v233 & 0xFFFFFFFFFFFFFFF8);
    do
      v235 = __ldxr(v234);
    while (__stlxr(v235 - 2, v234));
  }
  v236 = *(_QWORD *)(a1 + 976);
  if ((v236 & 7) != 0)
  {
    v237 = (unsigned int *)(v236 & 0xFFFFFFFFFFFFFFF8);
    do
      v238 = __ldxr(v237);
    while (__stlxr(v238 - 2, v237));
  }
  v239 = *(_QWORD *)(a1 + 968);
  if ((v239 & 7) != 0)
  {
    v240 = (unsigned int *)(v239 & 0xFFFFFFFFFFFFFFF8);
    do
      v241 = __ldxr(v240);
    while (__stlxr(v241 - 2, v240));
  }
  v242 = *(_QWORD *)(a1 + 960);
  if ((v242 & 7) != 0)
  {
    v243 = (unsigned int *)(v242 & 0xFFFFFFFFFFFFFFF8);
    do
      v244 = __ldxr(v243);
    while (__stlxr(v244 - 2, v243));
  }
  v245 = *(_QWORD *)(a1 + 952);
  if ((v245 & 7) != 0)
  {
    v246 = (unsigned int *)(v245 & 0xFFFFFFFFFFFFFFF8);
    do
      v247 = __ldxr(v246);
    while (__stlxr(v247 - 2, v246));
  }
  v248 = *(_QWORD *)(a1 + 944);
  if ((v248 & 7) != 0)
  {
    v249 = (unsigned int *)(v248 & 0xFFFFFFFFFFFFFFF8);
    do
      v250 = __ldxr(v249);
    while (__stlxr(v250 - 2, v249));
  }
  v251 = *(_QWORD *)(a1 + 936);
  if ((v251 & 7) != 0)
  {
    v252 = (unsigned int *)(v251 & 0xFFFFFFFFFFFFFFF8);
    do
      v253 = __ldxr(v252);
    while (__stlxr(v253 - 2, v252));
  }
  v254 = *(_QWORD *)(a1 + 928);
  if ((v254 & 7) != 0)
  {
    v255 = (unsigned int *)(v254 & 0xFFFFFFFFFFFFFFF8);
    do
      v256 = __ldxr(v255);
    while (__stlxr(v256 - 2, v255));
  }
  v257 = *(_QWORD *)(a1 + 920);
  if ((v257 & 7) != 0)
  {
    v258 = (unsigned int *)(v257 & 0xFFFFFFFFFFFFFFF8);
    do
      v259 = __ldxr(v258);
    while (__stlxr(v259 - 2, v258));
  }
  v260 = *(_QWORD *)(a1 + 912);
  if ((v260 & 7) != 0)
  {
    v261 = (unsigned int *)(v260 & 0xFFFFFFFFFFFFFFF8);
    do
      v262 = __ldxr(v261);
    while (__stlxr(v262 - 2, v261));
  }
  v263 = *(_QWORD *)(a1 + 904);
  if ((v263 & 7) != 0)
  {
    v264 = (unsigned int *)(v263 & 0xFFFFFFFFFFFFFFF8);
    do
      v265 = __ldxr(v264);
    while (__stlxr(v265 - 2, v264));
  }
  v266 = *(_QWORD *)(a1 + 896);
  if ((v266 & 7) != 0)
  {
    v267 = (unsigned int *)(v266 & 0xFFFFFFFFFFFFFFF8);
    do
      v268 = __ldxr(v267);
    while (__stlxr(v268 - 2, v267));
  }
  v269 = *(_QWORD *)(a1 + 888);
  if ((v269 & 7) != 0)
  {
    v270 = (unsigned int *)(v269 & 0xFFFFFFFFFFFFFFF8);
    do
      v271 = __ldxr(v270);
    while (__stlxr(v271 - 2, v270));
  }
  v272 = *(_QWORD *)(a1 + 880);
  if ((v272 & 7) != 0)
  {
    v273 = (unsigned int *)(v272 & 0xFFFFFFFFFFFFFFF8);
    do
      v274 = __ldxr(v273);
    while (__stlxr(v274 - 2, v273));
  }
  v275 = *(_QWORD *)(a1 + 872);
  if ((v275 & 7) != 0)
  {
    v276 = (unsigned int *)(v275 & 0xFFFFFFFFFFFFFFF8);
    do
      v277 = __ldxr(v276);
    while (__stlxr(v277 - 2, v276));
  }
  v278 = *(_QWORD *)(a1 + 864);
  if ((v278 & 7) != 0)
  {
    v279 = (unsigned int *)(v278 & 0xFFFFFFFFFFFFFFF8);
    do
      v280 = __ldxr(v279);
    while (__stlxr(v280 - 2, v279));
  }
  v281 = *(_QWORD *)(a1 + 856);
  if ((v281 & 7) != 0)
  {
    v282 = (unsigned int *)(v281 & 0xFFFFFFFFFFFFFFF8);
    do
      v283 = __ldxr(v282);
    while (__stlxr(v283 - 2, v282));
  }
  v284 = *(_QWORD *)(a1 + 848);
  if ((v284 & 7) != 0)
  {
    v285 = (unsigned int *)(v284 & 0xFFFFFFFFFFFFFFF8);
    do
      v286 = __ldxr(v285);
    while (__stlxr(v286 - 2, v285));
  }
  v287 = *(_QWORD *)(a1 + 840);
  if ((v287 & 7) != 0)
  {
    v288 = (unsigned int *)(v287 & 0xFFFFFFFFFFFFFFF8);
    do
      v289 = __ldxr(v288);
    while (__stlxr(v289 - 2, v288));
  }
  v290 = *(_QWORD *)(a1 + 832);
  if ((v290 & 7) != 0)
  {
    v291 = (unsigned int *)(v290 & 0xFFFFFFFFFFFFFFF8);
    do
      v292 = __ldxr(v291);
    while (__stlxr(v292 - 2, v291));
  }
  v293 = *(_QWORD *)(a1 + 824);
  if ((v293 & 7) != 0)
  {
    v294 = (unsigned int *)(v293 & 0xFFFFFFFFFFFFFFF8);
    do
      v295 = __ldxr(v294);
    while (__stlxr(v295 - 2, v294));
  }
  v296 = *(_QWORD *)(a1 + 816);
  if ((v296 & 7) != 0)
  {
    v297 = (unsigned int *)(v296 & 0xFFFFFFFFFFFFFFF8);
    do
      v298 = __ldxr(v297);
    while (__stlxr(v298 - 2, v297));
  }
  v299 = *(_QWORD *)(a1 + 808);
  if ((v299 & 7) != 0)
  {
    v300 = (unsigned int *)(v299 & 0xFFFFFFFFFFFFFFF8);
    do
      v301 = __ldxr(v300);
    while (__stlxr(v301 - 2, v300));
  }
  v302 = *(_QWORD *)(a1 + 800);
  if ((v302 & 7) != 0)
  {
    v303 = (unsigned int *)(v302 & 0xFFFFFFFFFFFFFFF8);
    do
      v304 = __ldxr(v303);
    while (__stlxr(v304 - 2, v303));
  }
  v305 = *(_QWORD *)(a1 + 792);
  if ((v305 & 7) != 0)
  {
    v306 = (unsigned int *)(v305 & 0xFFFFFFFFFFFFFFF8);
    do
      v307 = __ldxr(v306);
    while (__stlxr(v307 - 2, v306));
  }
  v308 = *(_QWORD *)(a1 + 784);
  if ((v308 & 7) != 0)
  {
    v309 = (unsigned int *)(v308 & 0xFFFFFFFFFFFFFFF8);
    do
      v310 = __ldxr(v309);
    while (__stlxr(v310 - 2, v309));
  }
  v311 = *(_QWORD *)(a1 + 776);
  if ((v311 & 7) != 0)
  {
    v312 = (unsigned int *)(v311 & 0xFFFFFFFFFFFFFFF8);
    do
      v313 = __ldxr(v312);
    while (__stlxr(v313 - 2, v312));
  }
  v314 = *(_QWORD *)(a1 + 768);
  if ((v314 & 7) != 0)
  {
    v315 = (unsigned int *)(v314 & 0xFFFFFFFFFFFFFFF8);
    do
      v316 = __ldxr(v315);
    while (__stlxr(v316 - 2, v315));
  }
  v317 = *(_QWORD *)(a1 + 760);
  if ((v317 & 7) != 0)
  {
    v318 = (unsigned int *)(v317 & 0xFFFFFFFFFFFFFFF8);
    do
      v319 = __ldxr(v318);
    while (__stlxr(v319 - 2, v318));
  }
  v320 = *(_QWORD *)(a1 + 752);
  if ((v320 & 7) != 0)
  {
    v321 = (unsigned int *)(v320 & 0xFFFFFFFFFFFFFFF8);
    do
      v322 = __ldxr(v321);
    while (__stlxr(v322 - 2, v321));
  }
  v323 = *(_QWORD *)(a1 + 744);
  if ((v323 & 7) != 0)
  {
    v324 = (unsigned int *)(v323 & 0xFFFFFFFFFFFFFFF8);
    do
      v325 = __ldxr(v324);
    while (__stlxr(v325 - 2, v324));
  }
  v326 = *(_QWORD *)(a1 + 736);
  if ((v326 & 7) != 0)
  {
    v327 = (unsigned int *)(v326 & 0xFFFFFFFFFFFFFFF8);
    do
      v328 = __ldxr(v327);
    while (__stlxr(v328 - 2, v327));
  }
  v329 = *(_QWORD *)(a1 + 728);
  if ((v329 & 7) != 0)
  {
    v330 = (unsigned int *)(v329 & 0xFFFFFFFFFFFFFFF8);
    do
      v331 = __ldxr(v330);
    while (__stlxr(v331 - 2, v330));
  }
  v332 = *(_QWORD *)(a1 + 720);
  if ((v332 & 7) != 0)
  {
    v333 = (unsigned int *)(v332 & 0xFFFFFFFFFFFFFFF8);
    do
      v334 = __ldxr(v333);
    while (__stlxr(v334 - 2, v333));
  }
  v335 = *(_QWORD *)(a1 + 712);
  if ((v335 & 7) != 0)
  {
    v336 = (unsigned int *)(v335 & 0xFFFFFFFFFFFFFFF8);
    do
      v337 = __ldxr(v336);
    while (__stlxr(v337 - 2, v336));
  }
  v338 = *(_QWORD *)(a1 + 704);
  if ((v338 & 7) != 0)
  {
    v339 = (unsigned int *)(v338 & 0xFFFFFFFFFFFFFFF8);
    do
      v340 = __ldxr(v339);
    while (__stlxr(v340 - 2, v339));
  }
  v341 = *(_QWORD *)(a1 + 696);
  if ((v341 & 7) != 0)
  {
    v342 = (unsigned int *)(v341 & 0xFFFFFFFFFFFFFFF8);
    do
      v343 = __ldxr(v342);
    while (__stlxr(v343 - 2, v342));
  }
  v344 = *(_QWORD *)(a1 + 688);
  if ((v344 & 7) != 0)
  {
    v345 = (unsigned int *)(v344 & 0xFFFFFFFFFFFFFFF8);
    do
      v346 = __ldxr(v345);
    while (__stlxr(v346 - 2, v345));
  }
  v347 = *(_QWORD *)(a1 + 680);
  if ((v347 & 7) != 0)
  {
    v348 = (unsigned int *)(v347 & 0xFFFFFFFFFFFFFFF8);
    do
      v349 = __ldxr(v348);
    while (__stlxr(v349 - 2, v348));
  }
  v350 = *(_QWORD *)(a1 + 672);
  if ((v350 & 7) != 0)
  {
    v351 = (unsigned int *)(v350 & 0xFFFFFFFFFFFFFFF8);
    do
      v352 = __ldxr(v351);
    while (__stlxr(v352 - 2, v351));
  }
  v353 = *(_QWORD *)(a1 + 664);
  if ((v353 & 7) != 0)
  {
    v354 = (unsigned int *)(v353 & 0xFFFFFFFFFFFFFFF8);
    do
      v355 = __ldxr(v354);
    while (__stlxr(v355 - 2, v354));
  }
  v356 = *(_QWORD *)(a1 + 656);
  if ((v356 & 7) != 0)
  {
    v357 = (unsigned int *)(v356 & 0xFFFFFFFFFFFFFFF8);
    do
      v358 = __ldxr(v357);
    while (__stlxr(v358 - 2, v357));
  }
  v359 = *(_QWORD *)(a1 + 648);
  if ((v359 & 7) != 0)
  {
    v360 = (unsigned int *)(v359 & 0xFFFFFFFFFFFFFFF8);
    do
      v361 = __ldxr(v360);
    while (__stlxr(v361 - 2, v360));
  }
  v362 = *(_QWORD *)(a1 + 640);
  if ((v362 & 7) != 0)
  {
    v363 = (unsigned int *)(v362 & 0xFFFFFFFFFFFFFFF8);
    do
      v364 = __ldxr(v363);
    while (__stlxr(v364 - 2, v363));
  }
  v365 = *(_QWORD *)(a1 + 632);
  if ((v365 & 7) != 0)
  {
    v366 = (unsigned int *)(v365 & 0xFFFFFFFFFFFFFFF8);
    do
      v367 = __ldxr(v366);
    while (__stlxr(v367 - 2, v366));
  }
  v368 = *(_QWORD *)(a1 + 624);
  if ((v368 & 7) != 0)
  {
    v369 = (unsigned int *)(v368 & 0xFFFFFFFFFFFFFFF8);
    do
      v370 = __ldxr(v369);
    while (__stlxr(v370 - 2, v369));
  }
  v371 = *(_QWORD *)(a1 + 616);
  if ((v371 & 7) != 0)
  {
    v372 = (unsigned int *)(v371 & 0xFFFFFFFFFFFFFFF8);
    do
      v373 = __ldxr(v372);
    while (__stlxr(v373 - 2, v372));
  }
  v374 = *(_QWORD *)(a1 + 608);
  if ((v374 & 7) != 0)
  {
    v375 = (unsigned int *)(v374 & 0xFFFFFFFFFFFFFFF8);
    do
      v376 = __ldxr(v375);
    while (__stlxr(v376 - 2, v375));
  }
  v377 = *(_QWORD *)(a1 + 600);
  if ((v377 & 7) != 0)
  {
    v378 = (unsigned int *)(v377 & 0xFFFFFFFFFFFFFFF8);
    do
      v379 = __ldxr(v378);
    while (__stlxr(v379 - 2, v378));
  }
  v380 = *(_QWORD *)(a1 + 592);
  if ((v380 & 7) != 0)
  {
    v381 = (unsigned int *)(v380 & 0xFFFFFFFFFFFFFFF8);
    do
      v382 = __ldxr(v381);
    while (__stlxr(v382 - 2, v381));
  }
  v383 = *(_QWORD *)(a1 + 584);
  if ((v383 & 7) != 0)
  {
    v384 = (unsigned int *)(v383 & 0xFFFFFFFFFFFFFFF8);
    do
      v385 = __ldxr(v384);
    while (__stlxr(v385 - 2, v384));
  }
  v386 = *(_QWORD *)(a1 + 576);
  if ((v386 & 7) != 0)
  {
    v387 = (unsigned int *)(v386 & 0xFFFFFFFFFFFFFFF8);
    do
      v388 = __ldxr(v387);
    while (__stlxr(v388 - 2, v387));
  }
  v389 = *(_QWORD *)(a1 + 568);
  if ((v389 & 7) != 0)
  {
    v390 = (unsigned int *)(v389 & 0xFFFFFFFFFFFFFFF8);
    do
      v391 = __ldxr(v390);
    while (__stlxr(v391 - 2, v390));
  }
  v392 = *(_QWORD *)(a1 + 560);
  if ((v392 & 7) != 0)
  {
    v393 = (unsigned int *)(v392 & 0xFFFFFFFFFFFFFFF8);
    do
      v394 = __ldxr(v393);
    while (__stlxr(v394 - 2, v393));
  }
  v395 = *(_QWORD *)(a1 + 552);
  if ((v395 & 7) != 0)
  {
    v396 = (unsigned int *)(v395 & 0xFFFFFFFFFFFFFFF8);
    do
      v397 = __ldxr(v396);
    while (__stlxr(v397 - 2, v396));
  }
  v398 = *(_QWORD *)(a1 + 544);
  if ((v398 & 7) != 0)
  {
    v399 = (unsigned int *)(v398 & 0xFFFFFFFFFFFFFFF8);
    do
      v400 = __ldxr(v399);
    while (__stlxr(v400 - 2, v399));
  }
  v401 = *(_QWORD *)(a1 + 536);
  if ((v401 & 7) != 0)
  {
    v402 = (unsigned int *)(v401 & 0xFFFFFFFFFFFFFFF8);
    do
      v403 = __ldxr(v402);
    while (__stlxr(v403 - 2, v402));
  }
  v404 = *(_QWORD *)(a1 + 528);
  if ((v404 & 7) != 0)
  {
    v405 = (unsigned int *)(v404 & 0xFFFFFFFFFFFFFFF8);
    do
      v406 = __ldxr(v405);
    while (__stlxr(v406 - 2, v405));
  }
  v407 = *(_QWORD *)(a1 + 520);
  if ((v407 & 7) != 0)
  {
    v408 = (unsigned int *)(v407 & 0xFFFFFFFFFFFFFFF8);
    do
      v409 = __ldxr(v408);
    while (__stlxr(v409 - 2, v408));
  }
  v410 = *(_QWORD *)(a1 + 512);
  if ((v410 & 7) != 0)
  {
    v411 = (unsigned int *)(v410 & 0xFFFFFFFFFFFFFFF8);
    do
      v412 = __ldxr(v411);
    while (__stlxr(v412 - 2, v411));
  }
  v413 = *(_QWORD *)(a1 + 504);
  if ((v413 & 7) != 0)
  {
    v414 = (unsigned int *)(v413 & 0xFFFFFFFFFFFFFFF8);
    do
      v415 = __ldxr(v414);
    while (__stlxr(v415 - 2, v414));
  }
  v416 = *(_QWORD *)(a1 + 496);
  if ((v416 & 7) != 0)
  {
    v417 = (unsigned int *)(v416 & 0xFFFFFFFFFFFFFFF8);
    do
      v418 = __ldxr(v417);
    while (__stlxr(v418 - 2, v417));
  }
  v419 = *(_QWORD *)(a1 + 488);
  if ((v419 & 7) != 0)
  {
    v420 = (unsigned int *)(v419 & 0xFFFFFFFFFFFFFFF8);
    do
      v421 = __ldxr(v420);
    while (__stlxr(v421 - 2, v420));
  }
  v422 = *(_QWORD *)(a1 + 480);
  if ((v422 & 7) != 0)
  {
    v423 = (unsigned int *)(v422 & 0xFFFFFFFFFFFFFFF8);
    do
      v424 = __ldxr(v423);
    while (__stlxr(v424 - 2, v423));
  }
  v425 = *(_QWORD *)(a1 + 472);
  if ((v425 & 7) != 0)
  {
    v426 = (unsigned int *)(v425 & 0xFFFFFFFFFFFFFFF8);
    do
      v427 = __ldxr(v426);
    while (__stlxr(v427 - 2, v426));
  }
  v428 = *(_QWORD *)(a1 + 464);
  if ((v428 & 7) != 0)
  {
    v429 = (unsigned int *)(v428 & 0xFFFFFFFFFFFFFFF8);
    do
      v430 = __ldxr(v429);
    while (__stlxr(v430 - 2, v429));
  }
  v431 = *(_QWORD *)(a1 + 456);
  if ((v431 & 7) != 0)
  {
    v432 = (unsigned int *)(v431 & 0xFFFFFFFFFFFFFFF8);
    do
      v433 = __ldxr(v432);
    while (__stlxr(v433 - 2, v432));
  }
  v434 = *(_QWORD *)(a1 + 448);
  if ((v434 & 7) != 0)
  {
    v435 = (unsigned int *)(v434 & 0xFFFFFFFFFFFFFFF8);
    do
      v436 = __ldxr(v435);
    while (__stlxr(v436 - 2, v435));
  }
  v437 = *(_QWORD *)(a1 + 440);
  if ((v437 & 7) != 0)
  {
    v438 = (unsigned int *)(v437 & 0xFFFFFFFFFFFFFFF8);
    do
      v439 = __ldxr(v438);
    while (__stlxr(v439 - 2, v438));
  }
  v440 = *(_QWORD *)(a1 + 432);
  if ((v440 & 7) != 0)
  {
    v441 = (unsigned int *)(v440 & 0xFFFFFFFFFFFFFFF8);
    do
      v442 = __ldxr(v441);
    while (__stlxr(v442 - 2, v441));
  }
  v443 = *(_QWORD *)(a1 + 424);
  if ((v443 & 7) != 0)
  {
    v444 = (unsigned int *)(v443 & 0xFFFFFFFFFFFFFFF8);
    do
      v445 = __ldxr(v444);
    while (__stlxr(v445 - 2, v444));
  }
  v446 = *(_QWORD *)(a1 + 416);
  if ((v446 & 7) != 0)
  {
    v447 = (unsigned int *)(v446 & 0xFFFFFFFFFFFFFFF8);
    do
      v448 = __ldxr(v447);
    while (__stlxr(v448 - 2, v447));
  }
  v449 = *(_QWORD *)(a1 + 408);
  if ((v449 & 7) != 0)
  {
    v450 = (unsigned int *)(v449 & 0xFFFFFFFFFFFFFFF8);
    do
      v451 = __ldxr(v450);
    while (__stlxr(v451 - 2, v450));
  }
  v452 = *(_QWORD *)(a1 + 400);
  if ((v452 & 7) != 0)
  {
    v453 = (unsigned int *)(v452 & 0xFFFFFFFFFFFFFFF8);
    do
      v454 = __ldxr(v453);
    while (__stlxr(v454 - 2, v453));
  }
  v455 = *(_QWORD *)(a1 + 392);
  if ((v455 & 7) != 0)
  {
    v456 = (unsigned int *)(v455 & 0xFFFFFFFFFFFFFFF8);
    do
      v457 = __ldxr(v456);
    while (__stlxr(v457 - 2, v456));
  }
  v458 = *(_QWORD *)(a1 + 384);
  if ((v458 & 7) != 0)
  {
    v459 = (unsigned int *)(v458 & 0xFFFFFFFFFFFFFFF8);
    do
      v460 = __ldxr(v459);
    while (__stlxr(v460 - 2, v459));
  }
  v461 = *(_QWORD *)(a1 + 376);
  if ((v461 & 7) != 0)
  {
    v462 = (unsigned int *)(v461 & 0xFFFFFFFFFFFFFFF8);
    do
      v463 = __ldxr(v462);
    while (__stlxr(v463 - 2, v462));
  }
  v464 = *(_QWORD *)(a1 + 368);
  if ((v464 & 7) != 0)
  {
    v465 = (unsigned int *)(v464 & 0xFFFFFFFFFFFFFFF8);
    do
      v466 = __ldxr(v465);
    while (__stlxr(v466 - 2, v465));
  }
  v467 = *(_QWORD *)(a1 + 360);
  if ((v467 & 7) != 0)
  {
    v468 = (unsigned int *)(v467 & 0xFFFFFFFFFFFFFFF8);
    do
      v469 = __ldxr(v468);
    while (__stlxr(v469 - 2, v468));
  }
  v470 = *(_QWORD *)(a1 + 352);
  if ((v470 & 7) != 0)
  {
    v471 = (unsigned int *)(v470 & 0xFFFFFFFFFFFFFFF8);
    do
      v472 = __ldxr(v471);
    while (__stlxr(v472 - 2, v471));
  }
  v473 = *(_QWORD *)(a1 + 344);
  if ((v473 & 7) != 0)
  {
    v474 = (unsigned int *)(v473 & 0xFFFFFFFFFFFFFFF8);
    do
      v475 = __ldxr(v474);
    while (__stlxr(v475 - 2, v474));
  }
  v476 = *(_QWORD *)(a1 + 336);
  if ((v476 & 7) != 0)
  {
    v477 = (unsigned int *)(v476 & 0xFFFFFFFFFFFFFFF8);
    do
      v478 = __ldxr(v477);
    while (__stlxr(v478 - 2, v477));
  }
  v479 = *(_QWORD *)(a1 + 328);
  if ((v479 & 7) != 0)
  {
    v480 = (unsigned int *)(v479 & 0xFFFFFFFFFFFFFFF8);
    do
      v481 = __ldxr(v480);
    while (__stlxr(v481 - 2, v480));
  }
  v482 = *(_QWORD *)(a1 + 320);
  if ((v482 & 7) != 0)
  {
    v483 = (unsigned int *)(v482 & 0xFFFFFFFFFFFFFFF8);
    do
      v484 = __ldxr(v483);
    while (__stlxr(v484 - 2, v483));
  }
  v485 = *(_QWORD *)(a1 + 312);
  if ((v485 & 7) != 0)
  {
    v486 = (unsigned int *)(v485 & 0xFFFFFFFFFFFFFFF8);
    do
      v487 = __ldxr(v486);
    while (__stlxr(v487 - 2, v486));
  }
  v488 = *(_QWORD *)(a1 + 304);
  if ((v488 & 7) != 0)
  {
    v489 = (unsigned int *)(v488 & 0xFFFFFFFFFFFFFFF8);
    do
      v490 = __ldxr(v489);
    while (__stlxr(v490 - 2, v489));
  }
  v491 = *(_QWORD *)(a1 + 296);
  if ((v491 & 7) != 0)
  {
    v492 = (unsigned int *)(v491 & 0xFFFFFFFFFFFFFFF8);
    do
      v493 = __ldxr(v492);
    while (__stlxr(v493 - 2, v492));
  }
  v494 = *(_QWORD *)(a1 + 288);
  if ((v494 & 7) != 0)
  {
    v495 = (unsigned int *)(v494 & 0xFFFFFFFFFFFFFFF8);
    do
      v496 = __ldxr(v495);
    while (__stlxr(v496 - 2, v495));
  }
  v497 = *(_QWORD *)(a1 + 280);
  if ((v497 & 7) != 0)
  {
    v498 = (unsigned int *)(v497 & 0xFFFFFFFFFFFFFFF8);
    do
      v499 = __ldxr(v498);
    while (__stlxr(v499 - 2, v498));
  }
  v500 = *(_QWORD *)(a1 + 272);
  if ((v500 & 7) != 0)
  {
    v501 = (unsigned int *)(v500 & 0xFFFFFFFFFFFFFFF8);
    do
      v502 = __ldxr(v501);
    while (__stlxr(v502 - 2, v501));
  }
  v503 = *(_QWORD *)(a1 + 264);
  if ((v503 & 7) != 0)
  {
    v504 = (unsigned int *)(v503 & 0xFFFFFFFFFFFFFFF8);
    do
      v505 = __ldxr(v504);
    while (__stlxr(v505 - 2, v504));
  }
  v506 = *(_QWORD *)(a1 + 256);
  if ((v506 & 7) != 0)
  {
    v507 = (unsigned int *)(v506 & 0xFFFFFFFFFFFFFFF8);
    do
      v508 = __ldxr(v507);
    while (__stlxr(v508 - 2, v507));
  }
  v509 = *(_QWORD *)(a1 + 248);
  if ((v509 & 7) != 0)
  {
    v510 = (unsigned int *)(v509 & 0xFFFFFFFFFFFFFFF8);
    do
      v511 = __ldxr(v510);
    while (__stlxr(v511 - 2, v510));
  }
  v512 = *(_QWORD *)(a1 + 240);
  if ((v512 & 7) != 0)
  {
    v513 = (unsigned int *)(v512 & 0xFFFFFFFFFFFFFFF8);
    do
      v514 = __ldxr(v513);
    while (__stlxr(v514 - 2, v513));
  }
  v515 = *(_QWORD *)(a1 + 232);
  if ((v515 & 7) != 0)
  {
    v516 = (unsigned int *)(v515 & 0xFFFFFFFFFFFFFFF8);
    do
      v517 = __ldxr(v516);
    while (__stlxr(v517 - 2, v516));
  }
  v518 = *(_QWORD *)(a1 + 224);
  if ((v518 & 7) != 0)
  {
    v519 = (unsigned int *)(v518 & 0xFFFFFFFFFFFFFFF8);
    do
      v520 = __ldxr(v519);
    while (__stlxr(v520 - 2, v519));
  }
  v521 = *(_QWORD *)(a1 + 216);
  if ((v521 & 7) != 0)
  {
    v522 = (unsigned int *)(v521 & 0xFFFFFFFFFFFFFFF8);
    do
      v523 = __ldxr(v522);
    while (__stlxr(v523 - 2, v522));
  }
  v524 = *(_QWORD *)(a1 + 208);
  if ((v524 & 7) != 0)
  {
    v525 = (unsigned int *)(v524 & 0xFFFFFFFFFFFFFFF8);
    do
      v526 = __ldxr(v525);
    while (__stlxr(v526 - 2, v525));
  }
  v527 = *(_QWORD *)(a1 + 200);
  if ((v527 & 7) != 0)
  {
    v528 = (unsigned int *)(v527 & 0xFFFFFFFFFFFFFFF8);
    do
      v529 = __ldxr(v528);
    while (__stlxr(v529 - 2, v528));
  }
  v530 = *(_QWORD *)(a1 + 192);
  if ((v530 & 7) != 0)
  {
    v531 = (unsigned int *)(v530 & 0xFFFFFFFFFFFFFFF8);
    do
      v532 = __ldxr(v531);
    while (__stlxr(v532 - 2, v531));
  }
  v533 = *(_QWORD *)(a1 + 184);
  if ((v533 & 7) != 0)
  {
    v534 = (unsigned int *)(v533 & 0xFFFFFFFFFFFFFFF8);
    do
      v535 = __ldxr(v534);
    while (__stlxr(v535 - 2, v534));
  }
  v536 = *(_QWORD *)(a1 + 176);
  if ((v536 & 7) != 0)
  {
    v537 = (unsigned int *)(v536 & 0xFFFFFFFFFFFFFFF8);
    do
      v538 = __ldxr(v537);
    while (__stlxr(v538 - 2, v537));
  }
  v539 = *(_QWORD *)(a1 + 168);
  if ((v539 & 7) != 0)
  {
    v540 = (unsigned int *)(v539 & 0xFFFFFFFFFFFFFFF8);
    do
      v541 = __ldxr(v540);
    while (__stlxr(v541 - 2, v540));
  }
  v542 = *(_QWORD *)(a1 + 160);
  if ((v542 & 7) != 0)
  {
    v543 = (unsigned int *)(v542 & 0xFFFFFFFFFFFFFFF8);
    do
      v544 = __ldxr(v543);
    while (__stlxr(v544 - 2, v543));
  }
  v545 = *(_QWORD *)(a1 + 152);
  if ((v545 & 7) != 0)
  {
    v546 = (unsigned int *)(v545 & 0xFFFFFFFFFFFFFFF8);
    do
      v547 = __ldxr(v546);
    while (__stlxr(v547 - 2, v546));
  }
  v548 = *(_QWORD *)(a1 + 144);
  if ((v548 & 7) != 0)
  {
    v549 = (unsigned int *)(v548 & 0xFFFFFFFFFFFFFFF8);
    do
      v550 = __ldxr(v549);
    while (__stlxr(v550 - 2, v549));
  }
  v551 = *(_QWORD *)(a1 + 136);
  if ((v551 & 7) != 0)
  {
    v552 = (unsigned int *)(v551 & 0xFFFFFFFFFFFFFFF8);
    do
      v553 = __ldxr(v552);
    while (__stlxr(v553 - 2, v552));
  }
  v554 = *(_QWORD *)(a1 + 128);
  if ((v554 & 7) != 0)
  {
    v555 = (unsigned int *)(v554 & 0xFFFFFFFFFFFFFFF8);
    do
      v556 = __ldxr(v555);
    while (__stlxr(v556 - 2, v555));
  }
  v557 = *(_QWORD *)(a1 + 120);
  if ((v557 & 7) != 0)
  {
    v558 = (unsigned int *)(v557 & 0xFFFFFFFFFFFFFFF8);
    do
      v559 = __ldxr(v558);
    while (__stlxr(v559 - 2, v558));
  }
  v560 = *(_QWORD *)(a1 + 112);
  if ((v560 & 7) != 0)
  {
    v561 = (unsigned int *)(v560 & 0xFFFFFFFFFFFFFFF8);
    do
      v562 = __ldxr(v561);
    while (__stlxr(v562 - 2, v561));
  }
  v563 = *(_QWORD *)(a1 + 104);
  if ((v563 & 7) != 0)
  {
    v564 = (unsigned int *)(v563 & 0xFFFFFFFFFFFFFFF8);
    do
      v565 = __ldxr(v564);
    while (__stlxr(v565 - 2, v564));
  }
  v566 = *(_QWORD *)(a1 + 96);
  if ((v566 & 7) != 0)
  {
    v567 = (unsigned int *)(v566 & 0xFFFFFFFFFFFFFFF8);
    do
      v568 = __ldxr(v567);
    while (__stlxr(v568 - 2, v567));
  }
  v569 = *(_QWORD *)(a1 + 88);
  if ((v569 & 7) != 0)
  {
    v570 = (unsigned int *)(v569 & 0xFFFFFFFFFFFFFFF8);
    do
      v571 = __ldxr(v570);
    while (__stlxr(v571 - 2, v570));
  }
  v572 = *(_QWORD *)(a1 + 80);
  if ((v572 & 7) != 0)
  {
    v573 = (unsigned int *)(v572 & 0xFFFFFFFFFFFFFFF8);
    do
      v574 = __ldxr(v573);
    while (__stlxr(v574 - 2, v573));
  }
  v575 = *(_QWORD *)(a1 + 72);
  if ((v575 & 7) != 0)
  {
    v576 = (unsigned int *)(v575 & 0xFFFFFFFFFFFFFFF8);
    do
      v577 = __ldxr(v576);
    while (__stlxr(v577 - 2, v576));
  }
  v578 = *(_QWORD *)(a1 + 64);
  if ((v578 & 7) != 0)
  {
    v579 = (unsigned int *)(v578 & 0xFFFFFFFFFFFFFFF8);
    do
      v580 = __ldxr(v579);
    while (__stlxr(v580 - 2, v579));
  }
  v581 = *(_QWORD *)(a1 + 56);
  if ((v581 & 7) != 0)
  {
    v582 = (unsigned int *)(v581 & 0xFFFFFFFFFFFFFFF8);
    do
      v583 = __ldxr(v582);
    while (__stlxr(v583 - 2, v582));
  }
  v584 = *(_QWORD *)(a1 + 48);
  if ((v584 & 7) != 0)
  {
    v585 = (unsigned int *)(v584 & 0xFFFFFFFFFFFFFFF8);
    do
      v586 = __ldxr(v585);
    while (__stlxr(v586 - 2, v585));
  }
  v587 = *(_QWORD *)(a1 + 40);
  if ((v587 & 7) != 0)
  {
    v588 = (unsigned int *)(v587 & 0xFFFFFFFFFFFFFFF8);
    do
      v589 = __ldxr(v588);
    while (__stlxr(v589 - 2, v588));
  }
  v590 = *(_QWORD *)(a1 + 32);
  if ((v590 & 7) != 0)
  {
    v591 = (unsigned int *)(v590 & 0xFFFFFFFFFFFFFFF8);
    do
      v592 = __ldxr(v591);
    while (__stlxr(v592 - 2, v591));
  }
  v593 = *(_QWORD *)(a1 + 24);
  if ((v593 & 7) != 0)
  {
    v594 = (unsigned int *)(v593 & 0xFFFFFFFFFFFFFFF8);
    do
      v595 = __ldxr(v594);
    while (__stlxr(v595 - 2, v594));
  }
  v596 = *(_QWORD *)(a1 + 16);
  if ((v596 & 7) != 0)
  {
    v597 = (unsigned int *)(v596 & 0xFFFFFFFFFFFFFFF8);
    do
      v598 = __ldxr(v597);
    while (__stlxr(v598 - 2, v597));
  }
  v599 = *(_QWORD *)(a1 + 8);
  if ((v599 & 7) != 0)
  {
    v600 = (unsigned int *)(v599 & 0xFFFFFFFFFFFFFFF8);
    do
      v601 = __ldxr(v600);
    while (__stlxr(v601 - 2, v600));
  }
  if ((*(_QWORD *)a1 & 7) != 0)
  {
    v602 = (unsigned int *)(*(_QWORD *)a1 & 0xFFFFFFFFFFFFFFF8);
    do
      v603 = __ldxr(v602);
    while (__stlxr(v603 - 2, v602));
  }
  return a1;
}

_QWORD *sub_20C54B60C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;
  float v14;
  float v15;
  _BOOL8 v16;
  unint64_t v17;
  unint64_t v18;
  size_t v19;
  _QWORD *v20;
  unint64_t v21;
  _QWORD *v23;
  char v24;

  v23 = 0;
  v24 = 0;
  sub_20C544EE4((uint64_t)&v23, a2);
  v7 = bswap64(0x9E3779B97F4A7C55 * (_QWORD)v23);
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    v10 = v9.u32[0];
    if (v9.u32[0] > 1uLL)
    {
      v3 = v7;
      if (v7 >= v8)
        v3 = v7 % v8;
    }
    else
    {
      v3 = (v8 - 1) & v7;
    }
    v11 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
    if (v11)
    {
      v12 = (_QWORD *)*v11;
      if (*v11)
      {
        do
        {
          v13 = v12[1];
          if (v13 == v7)
          {
            if (sub_20C544F44((uint64_t)(v12 + 2), a2))
              return v12;
          }
          else
          {
            if (v10 > 1)
            {
              if (v13 >= v8)
                v13 %= v8;
            }
            else
            {
              v13 &= v8 - 1;
            }
            if (v13 != v3)
              break;
          }
          v12 = (_QWORD *)*v12;
        }
        while (v12);
      }
    }
  }
  sub_20C54B898(a1, v7, a3, (uint64_t)&v23);
  v14 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v15 = *(float *)(a1 + 32);
  if (!v8 || (float)(v15 * (float)v8) < v14)
  {
    v16 = 1;
    if (v8 >= 3)
      v16 = (v8 & (v8 - 1)) != 0;
    v17 = v16 | (2 * v8);
    v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18)
      v19 = v18;
    else
      v19 = v17;
    sub_20BDEC6E0(a1, v19);
    v8 = *(_QWORD *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8)
        v3 = v7 % v8;
      else
        v3 = v7;
    }
    else
    {
      v3 = (v8 - 1) & v7;
    }
  }
  v20 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v20)
  {
    *v23 = *v20;
    *v20 = v23;
  }
  else
  {
    *v23 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v23;
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v3) = a1 + 16;
    if (*v23)
    {
      v21 = *(_QWORD *)(*v23 + 8);
      if ((v8 & (v8 - 1)) != 0)
      {
        if (v21 >= v8)
          v21 %= v8;
      }
      else
      {
        v21 &= v8 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v21) = v23;
    }
  }
  v12 = v23;
  v23 = 0;
  ++*(_QWORD *)(a1 + 24);
  sub_20C54B90C((uint64_t)&v23, 0);
  return v12;
}

void sub_20C54B880(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C54B90C((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

_DWORD *sub_20C54B898@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  _QWORD *v8;
  _DWORD *result;

  v7 = a1 + 16;
  v8 = operator new(0x38uLL);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *v8 = 0;
  v8[1] = a2;
  result = sub_20C546560(v7, (uint64_t)(v8 + 2), a3);
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_20C54B8F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C54B90C(v1, 0);
  _Unwind_Resume(a1);
}

void sub_20C54B90C(uint64_t a1, uint64_t a2)
{
  void *v2;

  v2 = *(void **)a1;
  *(_QWORD *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      sub_20C5452E8((uint64_t)v2 + 16);
    operator delete(v2);
  }
}

uint64_t **sub_20C54B950(uint64_t **result, _QWORD *a2, _QWORD *a3)
{
  uint64_t **v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  _QWORD *v9;
  _QWORD *v10;
  BOOL v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t **v14;
  uint64_t *v15;
  uint64_t *v16;

  v5 = result;
  if (result[2])
  {
    v6 = *result;
    v7 = result[1];
    *result = (uint64_t *)(result + 1);
    v7[2] = 0;
    result[1] = 0;
    result[2] = 0;
    if (v6[1])
      v8 = (uint64_t *)v6[1];
    else
      v8 = v6;
    v14 = result;
    v15 = v8;
    v16 = v8;
    if (v8)
    {
      v15 = sub_20BDFC6B0((uint64_t)v8);
      if (a2 != a3)
      {
        v9 = a2;
        do
        {
          sub_20BF32220(v8 + 4, v9 + 4);
          memcpy(v8 + 5, v9 + 5, 0x132uLL);
          sub_20C54BAC8(v5, v8);
          v8 = v15;
          v16 = v15;
          if (v15)
            v15 = sub_20BDFC6B0((uint64_t)v15);
          v10 = (_QWORD *)v9[1];
          if (v10)
          {
            do
            {
              a2 = v10;
              v10 = (_QWORD *)*v10;
            }
            while (v10);
          }
          else
          {
            do
            {
              a2 = (_QWORD *)v9[2];
              v11 = *a2 == (_QWORD)v9;
              v9 = a2;
            }
            while (!v11);
          }
          if (!v8)
            break;
          v9 = a2;
        }
        while (a2 != a3);
      }
    }
    result = (uint64_t **)sub_20C54BB3C((uint64_t)&v14);
  }
  if (a2 != a3)
  {
    do
    {
      result = (uint64_t **)sub_20C54BB90((uint64_t)v5, a2 + 4);
      v12 = (_QWORD *)a2[1];
      if (v12)
      {
        do
        {
          v13 = v12;
          v12 = (_QWORD *)*v12;
        }
        while (v12);
      }
      else
      {
        do
        {
          v13 = (_QWORD *)a2[2];
          v11 = *v13 == (_QWORD)a2;
          a2 = v13;
        }
        while (!v11);
      }
      a2 = v13;
    }
    while (v13 != a3);
  }
  return result;
}

void sub_20C54BAB4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C54BB3C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C54BAC8(uint64_t **a1, uint64_t *a2)
{
  uint64_t **v3;
  uint64_t *v4;
  uint64_t **v5;

  v3 = a1 + 1;
  v4 = a1[1];
  if (v4)
  {
    do
    {
      while (1)
      {
        v3 = (uint64_t **)v4;
        if ((a2[4] & 0xFFFFFFFFFFFFFFF8) >= (v4[4] & 0xFFFFFFFFFFFFFFF8))
          break;
        v4 = (uint64_t *)*v4;
        v5 = v3;
        if (!*v3)
          goto LABEL_8;
      }
      v4 = (uint64_t *)v4[1];
    }
    while (v4);
    v5 = v3 + 1;
  }
  else
  {
    v5 = a1 + 1;
  }
LABEL_8:
  sub_20BDDE1B4(a1, (uint64_t)v3, v5, a2);
  return a2;
}

uint64_t sub_20C54BB3C(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;

  sub_20BF2B200(*(_QWORD *)a1, *(_QWORD **)(a1 + 16));
  v2 = *(_QWORD **)(a1 + 8);
  if (v2)
  {
    v3 = (_QWORD *)v2[2];
    if (v3)
    {
      do
      {
        v2 = v3;
        v3 = (_QWORD *)v3[2];
      }
      while (v3);
      *(_QWORD *)(a1 + 8) = v2;
    }
    sub_20BF2B200(*(_QWORD *)a1, v2);
  }
  return a1;
}

uint64_t *sub_20C54BB90(uint64_t a1, uint64_t *a2)
{
  uint64_t **v3;
  uint64_t *v4;
  uint64_t **v5;
  uint64_t *v7;

  sub_20C54BC18(a1, a2, (uint64_t)&v7);
  v3 = (uint64_t **)(a1 + 8);
  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        v3 = (uint64_t **)v4;
        if ((v7[4] & 0xFFFFFFFFFFFFFFF8) >= (v4[4] & 0xFFFFFFFFFFFFFFF8))
          break;
        v4 = (uint64_t *)*v4;
        v5 = v3;
        if (!*v3)
          goto LABEL_8;
      }
      v4 = (uint64_t *)v4[1];
    }
    while (v4);
    v5 = v3 + 1;
  }
  else
  {
    v5 = (uint64_t **)(a1 + 8);
  }
LABEL_8:
  sub_20BDDE1B4((uint64_t **)a1, (uint64_t)v3, v5, v7);
  return v7;
}

void *sub_20C54BC18@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  void *result;

  v5 = a1 + 8;
  v6 = operator new(0x160uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  v7 = *a2;
  v6[4] = *a2;
  if ((v7 & 7) != 0)
  {
    v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 2, v8));
    if ((v9 & 1) == 0)
      v6[4] &= 0xFFFFFFFFFFFFFFF8;
  }
  result = memcpy(v6 + 5, a2 + 1, 0x138uLL);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_20C54BC9C(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;

  v3 = *(_QWORD **)a1;
  *(_QWORD *)a1 = a2;
  if (v3)
  {
    if (*(_BYTE *)(a1 + 16))
    {
      v4 = v3[4];
      if ((v4 & 7) != 0)
      {
        v5 = (unsigned int *)(v4 & 0xFFFFFFFFFFFFFFF8);
        do
          v6 = __ldxr(v5);
        while (__stlxr(v6 - 2, v5));
      }
    }
    operator delete(v3);
  }
}

uint64_t *sub_20C54BCDC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t **a4)
{
  uint64_t *v5;
  uint64_t **v6;
  unint64_t v7;
  uint64_t **v8;
  unint64_t v9;
  uint64_t *v11;

  v6 = (uint64_t **)(a1 + 8);
  v5 = *(uint64_t **)(a1 + 8);
  if (v5)
  {
    v7 = *a2 & 0xFFFFFFFFFFFFFFF8;
    while (1)
    {
      while (1)
      {
        v8 = (uint64_t **)v5;
        v9 = v5[4] & 0xFFFFFFFFFFFFFFF8;
        if (v7 >= v9)
          break;
        v5 = *v8;
        v6 = v8;
        if (!*v8)
          goto LABEL_10;
      }
      if (v9 >= v7)
        break;
      v5 = v8[1];
      if (!v5)
      {
        v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    v8 = (uint64_t **)(a1 + 8);
LABEL_10:
    sub_20C54BD9C(a1, a4, (uint64_t)&v11);
    sub_20BDDE1B4((uint64_t **)a1, (uint64_t)v8, v6, v11);
    return v11;
  }
  return (uint64_t *)v8;
}

uint64_t *sub_20C54BD9C@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t *result;

  v5 = a1 + 8;
  v6 = (uint64_t *)operator new(0x160uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  result = sub_20C54BE04(v6 + 4, *a2);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_20C54BDEC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C54BC9C(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C54BE04(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;

  v3 = *a2;
  *a1 = *a2;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      *a1 &= 0xFFFFFFFFFFFFFFF8;
  }
  sub_20BEF4AA0((uint64_t)(a1 + 1));
  return a1;
}

_QWORD *sub_20C54BE84(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;

  *a1 = a2;
  v4 = operator new(0x20uLL);
  *v4 = &unk_24C53C2A8;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_20C54BECC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  if (v1)
  {
    v3 = (void *)sub_20C373B34(v1);
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_20C54BEEC(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_20C54BF00(uint64_t a1)
{
  sub_20C54BF48(a1 + 24, *(_QWORD *)(a1 + 24));
}

uint64_t sub_20C54BF08(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C53C2F8))
    return a1 + 24;
  else
    return 0;
}

void sub_20C54BF48(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (a2)
  {
    v2 = (void *)(a2 - 16);
    v3 = *(_QWORD *)(a2 - 8);
    if (v3)
    {
      v4 = a2 - 120;
      v5 = 120 * v3;
      do
      {
        sub_20C373B34(v4 + v5);
        v5 -= 120;
      }
      while (v5);
    }
    operator delete[](v2);
  }
}

void sub_20C54BF9C(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        v4 = sub_20C54802C(v4 - 224);
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t sub_20C54C00C(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  sub_20BFD38A4((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_20BFD38DC((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a2 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 48) = 0;
  sub_20BFD38A4((_DWORD *)(a1 + 56), (_DWORD *)(a2 + 56));
  sub_20BFD38DC((_DWORD *)(a1 + 60), (_DWORD *)(a2 + 60));
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 72) = 0;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  v4 = *(_OWORD *)(a2 + 96);
  v5 = *(_OWORD *)(a2 + 112);
  v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  *(_OWORD *)(a1 + 96) = v4;
  *(_OWORD *)(a1 + 112) = v5;
  v7 = *(_OWORD *)(a2 + 160);
  v8 = *(_OWORD *)(a2 + 176);
  v9 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v9;
  *(_OWORD *)(a1 + 160) = v7;
  *(_OWORD *)(a1 + 176) = v8;
  return a1;
}

uint64_t sub_20C54C0E0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *a1;
  v4 = a1[1];
  result = a2[1];
  while (v4 != v5)
  {
    v4 -= 224;
    result = sub_20C54C00C(result - 224, v4);
  }
  a2[1] = result;
  v7 = *a1;
  *a1 = result;
  a2[1] = v7;
  v8 = a1[1];
  a1[1] = a2[2];
  a2[2] = v8;
  v9 = a1[2];
  a1[2] = a2[3];
  a2[3] = v9;
  *a2 = a2[1];
  return result;
}

void *sub_20C54C164(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x124924924924925)
    sub_20BDDF5B4();
  return operator new(224 * a2);
}

uint64_t sub_20C54C1AC(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 224;
    sub_20C54802C(i - 224);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_20C54C1F8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t *v19;

  v4 = *a1;
  v5 = 0x6DB6DB6DB6DB6DB7 * ((a1[1] - *a1) >> 5);
  v6 = v5 + 1;
  if ((unint64_t)(v5 + 1) > 0x124924924924924)
    sub_20BDDF694();
  v9 = (uint64_t)(a1 + 2);
  v10 = 0x6DB6DB6DB6DB6DB7 * ((a1[2] - v4) >> 5);
  if (2 * v10 > v6)
    v6 = 2 * v10;
  if (v10 >= 0x92492492492492)
    v11 = 0x124924924924924;
  else
    v11 = v6;
  v19 = a1 + 2;
  if (v11)
    v12 = (char *)sub_20C54C164(v9, v11);
  else
    v12 = 0;
  v15 = v12;
  v16 = &v12[224 * v5];
  v18 = &v12[224 * v11];
  sub_20C547ED8((uint64_t)v16, a2, a3);
  v17 = v16 + 224;
  sub_20C54C0E0(a1, &v15);
  v13 = a1[1];
  sub_20C54C1AC((uint64_t)&v15);
  return v13;
}

void sub_20C54C308(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C54C1AC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C54C31C(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_20C54C370(a1, *(_QWORD **)a2, (_QWORD *)(a2 + 8));
  return a1;
}

void sub_20C54C358(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BF2B200(v1, *(_QWORD **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_20C54C370(uint64_t *result, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v4;
  uint64_t **v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  BOOL v9;

  if (a2 != a3)
  {
    v4 = a2;
    v5 = (uint64_t **)result;
    v6 = result + 1;
    do
    {
      result = sub_20C54C3F4(v5, v6, v4 + 4, v4 + 4);
      v7 = (_QWORD *)v4[1];
      if (v7)
      {
        do
        {
          v8 = v7;
          v7 = (_QWORD *)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          v8 = (_QWORD *)v4[2];
          v9 = *v8 == (_QWORD)v4;
          v4 = v8;
        }
        while (!v9);
      }
      v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t *sub_20C54C3F4(uint64_t **a1, _QWORD *a2, _QWORD *a3, uint64_t *a4)
{
  uint64_t **v6;
  uint64_t *result;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = (uint64_t **)sub_20BFD2424(a1, a2, &v10, &v9, a3);
  result = *v6;
  if (!*v6)
  {
    sub_20C54BC18((uint64_t)a1, a4, (uint64_t)&v8);
    sub_20BDDE1B4(a1, v10, v6, v8);
    return v8;
  }
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget::UsdGeomConstraintTarget(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 48);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  sub_20BFD6E54((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_20BFD6EA4((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  if ((v7 & 7) != 0)
  {
    v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 2, v8));
    if ((v9 & 1) == 0)
      *(_QWORD *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  return a1;
}

BOOL pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget::IsValid(pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget *this, const pxrInternal__aapl__pxrReserved__::UsdAttribute *a2)
{
  unsigned __int8 v3;
  pxrInternal__aapl__pxrReserved__::UsdModelAPI *v4;
  unsigned __int8 *v5;
  pxrInternal__aapl__pxrReserved__::TfToken *v6;
  _BOOL8 v7;
  unsigned int *v8;
  unsigned int v9;
  const std::type_info *v11;
  char *v12;
  uint64_t TypeName;
  uint64_t v14[3];
  _BYTE v15[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v16;
  int v17;
  int v18;
  uint64_t v19;
  _QWORD v20[4];
  void **v21;

  if (!pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(this, a2))
    return 0;
  v3 = atomic_load((unsigned __int8 *)&qword_2549892D0);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2549892D0))
  {
    qword_2549892C8 = *(_QWORD *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_24C51BFE0, v11, v12);
    __cxa_guard_release(&qword_2549892D0);
  }
  sub_20C35C4F8((uint64_t)v15, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v4 = pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v20, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v15);
  v20[3] = 0;
  v20[0] = off_24C538548;
  if (pxrInternal__aapl__pxrReserved__::UsdModelAPI::IsModel(v4))
  {
    pxrInternal__aapl__pxrReserved__::UsdProperty::SplitName(this, v14);
    v5 = (unsigned __int8 *)v14[0];
    v6 = (pxrInternal__aapl__pxrReserved__::TfToken *)sub_20C54C6D4();
    if (pxrInternal__aapl__pxrReserved__::TfToken::operator==(v6, v5))
    {
      TypeName = pxrInternal__aapl__pxrReserved__::UsdAttribute::GetTypeName(this);
      v7 = *(_QWORD *)pxrInternal__aapl__pxrReserved__::SdfValueTypeName::GetType((pxrInternal__aapl__pxrReserved__::SdfValueTypeName *)&TypeName) == qword_2549892C8;
    }
    else
    {
      v7 = 0;
    }
    v21 = (void **)v14;
    sub_20BDE5038(&v21);
  }
  else
  {
    v7 = 0;
  }
  pxrInternal__aapl__pxrReserved__::UsdModelAPI::~UsdModelAPI((pxrInternal__aapl__pxrReserved__::UsdModelAPI *)v20);
  if ((v19 & 7) != 0)
  {
    v8 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v18);
  sub_20BFD265C(&v17);
  if (v16)
    sub_20C35C614(v16);
  return v7;
}

void sub_20C54C678(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2549892D0);
  _Unwind_Resume(a1);
}

unint64_t sub_20C54C6D4()
{
  char *v0;
  _QWORD *v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  _QWORD *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int **v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int *v20;
  unsigned int v21;
  unsigned int *v22;
  unsigned int v23;
  void **v24;
  char v25;
  unsigned int *v26;
  unsigned int *v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v0 = (char *)atomic_load(&qword_2549892D8);
  if (!v0)
  {
    v0 = (char *)operator new(0x28uLL);
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v0, "constraintTargets", 0);
    v2 = v0 + 8;
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v0 + 8, "constraintTargetIdentifier", 0);
    v3 = *(unsigned int **)v0;
    v26 = v3;
    if ((v3 & 7) != 0)
    {
      v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
      do
        v5 = __ldxr(v4);
      while (__stxr(v5 + 2, v4));
      if ((v5 & 1) == 0)
        v26 = v4;
    }
    v6 = (unsigned int *)*v2;
    v27 = v6;
    if ((v6 & 7) != 0)
    {
      v7 = (unsigned int *)((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 2, v7));
      if ((v8 & 1) == 0)
        v27 = v7;
    }
    *((_QWORD *)v0 + 2) = 0;
    *((_QWORD *)v0 + 3) = 0;
    *((_QWORD *)v0 + 4) = 0;
    v24 = (void **)(v0 + 16);
    v25 = 0;
    v9 = operator new(0x10uLL);
    v10 = 0;
    *((_QWORD *)v0 + 2) = v9;
    *((_QWORD *)v0 + 3) = v9;
    *((_QWORD *)v0 + 4) = v9 + 2;
    do
    {
      v11 = (&v26)[v10];
      *v9 = v11;
      if ((v11 & 7) != 0)
      {
        v12 = (unsigned int *)((unint64_t)v11 & 0xFFFFFFFFFFFFFFF8);
        do
          v13 = __ldxr(v12);
        while (__stxr(v13 + 2, v12));
        if ((v13 & 1) == 0)
          *v9 &= 0xFFFFFFFFFFFFFFF8;
      }
      ++v10;
      ++v9;
    }
    while (v10 != 2);
    v14 = (unsigned int **)&v28;
    *((_QWORD *)v0 + 3) = v9;
    do
    {
      v16 = (uint64_t)*--v14;
      v15 = v16;
      if ((v16 & 7) != 0)
      {
        v17 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
        do
          v18 = __ldxr(v17);
        while (__stlxr(v18 - 2, v17));
      }
    }
    while (v14 != &v26);
    while (!__ldaxr(&qword_2549892D8))
    {
      if (!__stlxr((unint64_t)v0, &qword_2549892D8))
        return (unint64_t)v0;
    }
    __clrex();
    v24 = (void **)(v0 + 16);
    sub_20BEEB2B8(&v24);
    if ((*v2 & 7) != 0)
    {
      v20 = (unsigned int *)(*v2 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stlxr(v21 - 2, v20));
    }
    if ((*(_QWORD *)v0 & 7) != 0)
    {
      v22 = (unsigned int *)(*(_QWORD *)v0 & 0xFFFFFFFFFFFFFFF8);
      do
        v23 = __ldxr(v22);
      while (__stlxr(v23 - 2, v22));
    }
    operator delete(v0);
    return atomic_load(&qword_2549892D8);
  }
  return (unint64_t)v0;
}

void sub_20C54C8E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  _QWORD *v14;
  _QWORD *v15;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int *v22;
  unsigned int v23;
  unsigned int *v24;
  unsigned int v25;

  sub_20BEEB2B8(&a10);
  v17 = &a14;
  while (1)
  {
    v19 = *--v17;
    v18 = v19;
    if ((v19 & 7) != 0)
    {
      v20 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stlxr(v21 - 2, v20));
    }
    if (v17 == (uint64_t *)&a12)
    {
      if ((*v15 & 7) != 0)
      {
        v22 = (unsigned int *)(*v15 & 0xFFFFFFFFFFFFFFF8);
        do
          v23 = __ldxr(v22);
        while (__stlxr(v23 - 2, v22));
      }
      if ((*v14 & 7) != 0)
      {
        v24 = (unsigned int *)(*v14 & 0xFFFFFFFFFFFFFFF8);
        do
          v25 = __ldxr(v24);
        while (__stlxr(v25 - 2, v24));
      }
      operator delete(v14);
      _Unwind_Resume(a1);
    }
  }
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget::GetIdentifier@<X0>(pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget *this@<X0>, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t result;
  unint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  uint64_t v9;

  *a3 = 0;
  result = pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(this, a2);
  if ((_DWORD)result)
  {
    v6 = sub_20C54C6D4();
    v9 = 0;
    result = sub_20C361F00((uint64_t)this, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)(v6 + 8), (uint64_t)a3, &v9);
    if ((v9 & 7) != 0)
    {
      v7 = (unsigned int *)(v9 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stlxr(v8 - 2, v7));
    }
  }
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget::SetIdentifier(pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2)
{
  uint64_t result;
  unint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v8;

  result = pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(this, a2);
  if ((_DWORD)result)
  {
    v5 = sub_20C54C6D4();
    v8 = 0;
    result = sub_20C361C9C((uint64_t)this, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)(v5 + 8), (uint64_t (**)(_QWORD, uint64_t))a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v8);
    if ((v8 & 7) != 0)
    {
      v6 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
      do
        v7 = __ldxr(v6);
      while (__stlxr(v7 - 2, v6));
    }
  }
  return result;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget::GetConstraintAttrName(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::TfToken *v4;
  uint64_t *EmptyString;
  size_t v6;
  std::string *v7;
  const void *v8;
  int v9;
  const std::string::value_type *v10;
  std::string::size_type v11;
  std::string *v12;
  __int128 v13;
  std::string v14;
  void *__p[2];
  std::string::size_type v16;

  v4 = (pxrInternal__aapl__pxrReserved__::TfToken *)sub_20C54C6D4();
  if ((*(_QWORD *)v4 & 0xFFFFFFFFFFFFFFF8) != 0)
    EmptyString = (uint64_t *)((*(_QWORD *)v4 & 0xFFFFFFFFFFFFFFF8) + 16);
  else
    EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v4);
  if (*((char *)EmptyString + 23) >= 0)
    v6 = *((unsigned __int8 *)EmptyString + 23);
  else
    v6 = EmptyString[1];
  v7 = &v14;
  sub_20BDF6BDC((uint64_t)&v14, v6 + 1);
  if ((v14.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v7 = (std::string *)v14.__r_.__value_.__r.__words[0];
  if (v6)
  {
    if (*((char *)EmptyString + 23) >= 0)
      v8 = EmptyString;
    else
      v8 = (const void *)*EmptyString;
    memmove(v7, v8, v6);
  }
  *(_WORD *)((char *)&v7->__r_.__value_.__l.__data_ + v6) = 58;
  v9 = *(char *)(a1 + 23);
  if (v9 >= 0)
    v10 = (const std::string::value_type *)a1;
  else
    v10 = *(const std::string::value_type **)a1;
  if (v9 >= 0)
    v11 = *(unsigned __int8 *)(a1 + 23);
  else
    v11 = *(_QWORD *)(a1 + 8);
  v12 = std::string::append(&v14, v10, v11);
  v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v16 = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)__p = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(a2);
  if (SHIBYTE(v16) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v14.__r_.__value_.__l.__data_);
}

void sub_20C54CBE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget::ComputeInWorldSpace(uint64_t a1@<X0>, pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v12;
  char v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  const char *v19;
  const char *Text;
  char *v21;
  unsigned int *v22;
  unsigned int v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  unsigned int *v28;
  unsigned int v29;
  int v30;
  int v31;
  uint64_t v32;
  _QWORD v33[4];
  char v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  _BYTE v51[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v52;
  int v53;
  int v54;
  uint64_t v55;

  if (pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget::IsValid((pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget *)a1, a2))
  {
    sub_20C35C4F8((uint64_t)v51, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
    pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)&v43, 1.0);
    if (a2)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::SetTime((uint64_t)a2, v8, v9, a4);
      pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalToWorldTransform(a2, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v51, (uint64_t)&v35);
      v47 = v39;
      v48 = v40;
      v49 = v41;
      v50 = v42;
      v43 = v35;
      v44 = v36;
      v45 = v37;
      v46 = v38;
    }
    else
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::UsdGeomXformCache((pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *)v33);
      pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::SetTime((uint64_t)v33, v10, v11, a4);
      pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalToWorldTransform((pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *)v33, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v51, (uint64_t)&v35);
      v47 = v39;
      v48 = v40;
      v49 = v41;
      v50 = v42;
      v43 = v35;
      v44 = v36;
      v45 = v37;
      v46 = v38;
      sub_20C543484((uint64_t)v33);
    }
    pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)&v35, 1.0);
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::GfMatrix4d>(a1, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v35);
    if ((v13 & 1) != 0)
    {
      v14 = v40;
      *(_OWORD *)(a3 + 64) = v39;
      *(_OWORD *)(a3 + 80) = v14;
      v15 = v42;
      *(_OWORD *)(a3 + 96) = v41;
      *(_OWORD *)(a3 + 112) = v15;
      v16 = v36;
      *(_OWORD *)a3 = v35;
      *(_OWORD *)(a3 + 16) = v16;
      v17 = v38;
      *(_OWORD *)(a3 + 32) = v37;
      *(_OWORD *)(a3 + 48) = v17;
      pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)a3, (double *)&v43);
    }
    else
    {
      v33[0] = "usdGeom/constraintTarget.cpp";
      v33[1] = "ComputeInWorldSpace";
      v33[2] = 135;
      v33[3] = "GfMatrix4d pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget::ComputeInWorldSpace(UsdTimeCode, Us"
               "dGeomXformCache *) const";
      v34 = 0;
      pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget::GetIdentifier((pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget *)a1, v12, &v32);
      v18 = v32 & 0xFFFFFFFFFFFFFFF8;
      if ((v32 & 0xFFFFFFFFFFFFFFF8) != 0)
      {
        v19 = (const char *)(v18 + 16);
        if (*(char *)(v18 + 39) < 0)
          v19 = *(const char **)v19;
      }
      else
      {
        v19 = "";
      }
      sub_20C348EEC(a1, &v30);
      Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v30);
      pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)v33, (pxrInternal__aapl__pxrReserved__ *)"Failed to get value of constraint target '%s' at path <%s>.", v21, v19, Text);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v31);
      sub_20BFD265C(&v30);
      if ((v32 & 7) != 0)
      {
        v22 = (unsigned int *)(v32 & 0xFFFFFFFFFFFFFFF8);
        do
          v23 = __ldxr(v22);
        while (__stlxr(v23 - 2, v22));
      }
      v24 = v40;
      *(_OWORD *)(a3 + 64) = v39;
      *(_OWORD *)(a3 + 80) = v24;
      v25 = v42;
      *(_OWORD *)(a3 + 96) = v41;
      *(_OWORD *)(a3 + 112) = v25;
      v26 = v36;
      *(_OWORD *)a3 = v35;
      *(_OWORD *)(a3 + 16) = v26;
      v27 = v38;
      *(_OWORD *)(a3 + 32) = v37;
      *(_OWORD *)(a3 + 48) = v27;
    }
    if ((v55 & 7) != 0)
    {
      v28 = (unsigned int *)(v55 & 0xFFFFFFFFFFFFFFF8);
      do
        v29 = __ldxr(v28);
      while (__stlxr(v29 - 2, v28));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
    sub_20BFD265C(&v53);
    if (v52)
      sub_20C35C614(v52);
  }
  else
  {
    *(_QWORD *)&v43 = "usdGeom/constraintTarget.cpp";
    *((_QWORD *)&v43 + 1) = "ComputeInWorldSpace";
    *(_QWORD *)&v44 = 116;
    *((_QWORD *)&v44 + 1) = "GfMatrix4d pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget::ComputeInWorldSpace(Us"
                            "dTimeCode, UsdGeomXformCache *) const";
    LOBYTE(v45) = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v43, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid constraint target.");
    pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal(a3, 1.0);
  }
}

void sub_20C54CEC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v5;
  va_list va;

  va_start(va, a5);
  sub_20C543484((uint64_t)va);
  sub_20C35C2E0(v5 - 80);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::UsdGeomXformCache(uint64_t result, double a2)
{
  *(_OWORD *)result = 0u;
  *(_OWORD *)(result + 16) = 0u;
  *(_DWORD *)(result + 32) = 1065353216;
  *(double *)(result + 40) = a2;
  return result;
}

{
  *(_OWORD *)result = 0u;
  *(_OWORD *)(result + 16) = 0u;
  *(_DWORD *)(result + 32) = 1065353216;
  *(double *)(result + 40) = a2;
  return result;
}

double pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::UsdGeomXformCache(pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  *((_DWORD *)this + 8) = 1065353216;
  *((_QWORD *)this + 5) = 0x7FF8000000000000;
  return result;
}

{
  double result;

  result = 0.0;
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  *((_DWORD *)this + 8) = 1065353216;
  *((_QWORD *)this + 5) = 0x7FF8000000000000;
  return result;
}

__n128 pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalToWorldTransform@<Q0>(pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *Ctm;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;

  Ctm = pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::_GetCtm(this, a2);
  v5 = *((_OWORD *)Ctm + 5);
  *(_OWORD *)(a3 + 64) = *((_OWORD *)Ctm + 4);
  *(_OWORD *)(a3 + 80) = v5;
  v6 = *((_OWORD *)Ctm + 7);
  *(_OWORD *)(a3 + 96) = *((_OWORD *)Ctm + 6);
  *(_OWORD *)(a3 + 112) = v6;
  v7 = *((_OWORD *)Ctm + 1);
  *(_OWORD *)a3 = *(_OWORD *)Ctm;
  *(_OWORD *)(a3 + 16) = v7;
  result = *((__n128 *)Ctm + 2);
  v9 = *((_OWORD *)Ctm + 3);
  *(__n128 *)(a3 + 32) = result;
  *(_OWORD *)(a3 + 48) = v9;
  return result;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::_GetCtm(pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *this, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2)
{
  unsigned __int8 v4;
  uint64_t *CacheEntryForPrim;
  uint64_t *v6;
  uint64_t *result;
  double *Ctm;
  unsigned int *v9;
  unsigned int v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v18;
  int v19;
  int v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;

  v4 = atomic_load((unsigned __int8 *)&qword_254989360);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254989360))
  {
    pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)&unk_2549892E0, 1.0);
    __cxa_guard_release(&qword_254989360);
  }
  if ((pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(a2, a2) & 1) == 0)
    return (uint64_t *)&unk_2549892E0;
  CacheEntryForPrim = pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::_GetCacheEntryForPrim(this, a2);
  v6 = CacheEntryForPrim;
  if (*((_BYTE *)CacheEntryForPrim + 160))
    return CacheEntryForPrim + 4;
  pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)&v30, 1.0);
  pxrInternal__aapl__pxrReserved__::UsdGeomXformable::XformQuery::GetLocalTransformation(v6, &v30, *((double *)this + 5));
  if (!*((_BYTE *)v6 + 24))
  {
    sub_20C3AD22C((uint64_t)a2, (uint64_t)&v17);
    Ctm = (double *)pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::_GetCtm(this, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v17);
    v26 = v34;
    v27 = v35;
    v28 = v36;
    v29 = v37;
    v22 = v30;
    v23 = v31;
    v24 = v32;
    v25 = v33;
    pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)&v22, Ctm);
    v34 = v26;
    v35 = v27;
    v36 = v28;
    v37 = v29;
    v30 = v22;
    v31 = v23;
    v32 = v24;
    v33 = v25;
    if ((v21 & 7) != 0)
    {
      v9 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
    sub_20BFD265C(&v19);
    if (v18)
      sub_20C35C614(v18);
  }
  v12 = v32;
  v11 = v33;
  v13 = v31;
  *((_OWORD *)v6 + 2) = v30;
  v15 = v36;
  v14 = v37;
  v16 = v34;
  *((_OWORD *)v6 + 7) = v35;
  *((_OWORD *)v6 + 8) = v15;
  result = v6 + 4;
  *((_OWORD *)v6 + 9) = v14;
  *((_OWORD *)v6 + 3) = v13;
  *((_OWORD *)v6 + 4) = v12;
  *((_OWORD *)v6 + 5) = v11;
  *((_OWORD *)v6 + 6) = v16;
  *((_BYTE *)v6 + 160) = 1;
  return result;
}

void sub_20C54D184(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989360);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetParentToWorldTransform(pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *Ctm;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  unsigned int *v10;
  unsigned int v11;
  uint64_t v12;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v13;
  int v14;
  int v15;
  uint64_t v16;

  sub_20C3AD22C((uint64_t)a2, (uint64_t)&v12);
  Ctm = pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::_GetCtm(this, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v12);
  v6 = *((_OWORD *)Ctm + 5);
  a3[4] = *((_OWORD *)Ctm + 4);
  a3[5] = v6;
  v7 = *((_OWORD *)Ctm + 7);
  a3[6] = *((_OWORD *)Ctm + 6);
  a3[7] = v7;
  v8 = *((_OWORD *)Ctm + 1);
  *a3 = *(_OWORD *)Ctm;
  a3[1] = v8;
  v9 = *((_OWORD *)Ctm + 3);
  a3[2] = *((_OWORD *)Ctm + 2);
  a3[3] = v9;
  if ((v16 & 7) != 0)
  {
    v10 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stlxr(v11 - 2, v10));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v15);
  sub_20BFD265C(&v14);
  if (v13)
    sub_20C35C614(v13);
}

void sub_20C54D254(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::TransformMightBeTimeVarying(pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *this, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2)
{
  uint64_t *CacheEntryForPrim;
  _QWORD v4[4];
  char v5;

  CacheEntryForPrim = pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::_GetCacheEntryForPrim(this, a2);
  if (CacheEntryForPrim)
    return pxrInternal__aapl__pxrReserved__::UsdGeomXformable::XformQuery::TransformMightBeTimeVarying((pxrInternal__aapl__pxrReserved__::UsdGeomXformable::XformQuery *)CacheEntryForPrim);
  v4[0] = "usdGeom/xformCache.cpp";
  v4[1] = "TransformMightBeTimeVarying";
  v4[2] = 66;
  v4[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::TransformMightBeTimeVarying(const UsdPrim &)";
  v5 = 0;
  if ((pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v4, "entry", 0) & 1) != 0)
    return pxrInternal__aapl__pxrReserved__::UsdGeomXformable::XformQuery::TransformMightBeTimeVarying((pxrInternal__aapl__pxrReserved__::UsdGeomXformable::XformQuery *)CacheEntryForPrim);
  else
    return 1;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::_GetCacheEntryForPrim(pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *this, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2)
{
  uint64_t *v4;
  char v5;
  char v6;
  unsigned int *v7;
  unsigned int v8;
  _OWORD v10[10];
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void **v16;

  v11 = 0;
  memset(v10, 0, sizeof(v10));
  sub_20C54DB9C((uint64_t)&v12, (uint64_t)a2, (uint64_t)v10);
  v4 = sub_20C543714((uint64_t)this, (uint64_t)&v12, (uint64_t)&v12);
  v6 = v5;
  v16 = (void **)&v15;
  sub_20C54356C(&v16);
  if ((v14 & 7) != 0)
  {
    v7 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stlxr(v8 - 2, v7));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v13 + 1);
  sub_20BFD265C(&v13);
  if (*((_QWORD *)&v12 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v12 + 1));
  v16 = (void **)v10;
  sub_20C54356C(&v16);
  if (v6)
  {
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v10, a2);
    *(_QWORD *)&v10[0] = off_24C53D0E0;
    if (*((_QWORD *)&v10[0] + 1)
      && (*(_BYTE *)(*((_QWORD *)&v10[0] + 1) + 57) & 8) == 0
      && pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible((pxrInternal__aapl__pxrReserved__::UsdTyped *)v10))
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomXformable::XformQuery::XformQuery((pxrInternal__aapl__pxrReserved__::UsdGeomXformable::XformQuery *)&v12, (const pxrInternal__aapl__pxrReserved__::UsdGeomXformable *)v10);
      sub_20C5441EC((void **)v4 + 6);
      *((_OWORD *)v4 + 3) = v12;
      v4[8] = v13;
      v13 = 0;
      v12 = 0uLL;
      *((_BYTE *)v4 + 72) = v14;
      v16 = (void **)&v12;
      sub_20C54356C(&v16);
    }
    pxrInternal__aapl__pxrReserved__::UsdGeomXformable::~UsdGeomXformable((pxrInternal__aapl__pxrReserved__::UsdGeomXformable *)v10);
    pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)(v4 + 10), 1.0);
    *((_BYTE *)v4 + 208) = 0;
  }
  return v4 + 6;
}

void sub_20C54D468(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomXformable::~UsdGeomXformable((pxrInternal__aapl__pxrReserved__::UsdGeomXformable *)&a9);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetResetXformStack(pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *this, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2)
{
  uint64_t *CacheEntryForPrim;
  _BOOL8 result;
  char v4;
  _QWORD v5[4];
  char v6;

  CacheEntryForPrim = pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::_GetCacheEntryForPrim(this, a2);
  if (CacheEntryForPrim)
    return *((_BYTE *)CacheEntryForPrim + 24) != 0;
  v5[0] = "usdGeom/xformCache.cpp";
  v5[1] = "GetResetXformStack";
  v5[2] = 80;
  v5[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetResetXformStack(const UsdPrim &)";
  v6 = 0;
  v4 = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v5, "entry", 0);
  result = 0;
  if ((v4 & 1) != 0)
    return *((_BYTE *)CacheEntryForPrim + 24) != 0;
  return result;
}

BOOL pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::IsAttributeIncludedInLocalTransform(pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *this, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3)
{
  char *v4;
  uint64_t *CacheEntryForPrim;
  _BOOL8 result;
  char v7;
  _QWORD v8[4];
  char v9;

  CacheEntryForPrim = pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::_GetCacheEntryForPrim(this, a2);
  if (CacheEntryForPrim)
    return pxrInternal__aapl__pxrReserved__::UsdGeomXformable::XformQuery::IsAttributeIncludedInLocalTransform((pxrInternal__aapl__pxrReserved__::UsdGeomXformable::XformQuery *)CacheEntryForPrim, a3, v4);
  v8[0] = "usdGeom/xformCache.cpp";
  v8[1] = "IsAttributeIncludedInLocalTransform";
  v8[2] = 93;
  v8[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::IsAttributeIncludedInLocalTransform(const UsdPrim &,"
          " const TfToken &)";
  v9 = 0;
  v7 = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v8, "entry", 0);
  result = 0;
  if ((v7 & 1) != 0)
    return pxrInternal__aapl__pxrReserved__::UsdGeomXformable::XformQuery::IsAttributeIncludedInLocalTransform((pxrInternal__aapl__pxrReserved__::UsdGeomXformable::XformQuery *)CacheEntryForPrim, a3, v4);
  return result;
}

uint64_t sub_20C54D5B8(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;
  void **v7;

  v7 = (void **)(a1 + 32);
  sub_20C54356C(&v7);
  v2 = *(_QWORD *)(a1 + 24);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_20BFD265C((_DWORD *)(a1 + 16));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalTransformation@<X0>(pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2@<X1>, BOOL *a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t *CacheEntryForPrim;
  uint64_t result;
  char v9;
  char *v10;
  const char *v11;
  uint64_t v12;
  const char *v13;
  char v14;

  if (a3)
  {
    CacheEntryForPrim = pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::_GetCacheEntryForPrim(this, a2);
    pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)a4, 1.0);
    if (CacheEntryForPrim
      || (v10 = "usdGeom/xformCache.cpp",
          v11 = "GetLocalTransformation",
          v12 = 125,
          v13 = "GfMatrix4d pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalTransformation(const UsdPrim &, BOOL *)",
          v14 = 0,
          result = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v10, "entry", 0),
          v9 = 0,
          (result & 1) != 0))
    {
      result = pxrInternal__aapl__pxrReserved__::UsdGeomXformable::XformQuery::GetLocalTransformation(CacheEntryForPrim, a4, *((double *)this + 5));
      v9 = *((_BYTE *)CacheEntryForPrim + 24);
    }
    *a3 = v9;
  }
  else
  {
    v10 = "usdGeom/xformCache.cpp";
    v11 = "GetLocalTransformation";
    v12 = 119;
    v13 = "GfMatrix4d pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalTransformation(const UsdPrim &, BOOL *)";
    v14 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v10, 1, (pxrInternal__aapl__pxrReserved__ *)"'resetsXformStack' pointer is null.");
    return pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)a4, 1.0);
  }
  return result;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::ComputeRelativeTransform(pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2@<X1>, pxrInternal__aapl__pxrReserved__::Usd_PrimData **a3@<X2>, BOOL *a4@<X3>, double *a5@<X8>)
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v10;
  unint64_t *v11;
  unint64_t v12;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v13;
  const char *v14;
  unsigned int *v15;
  unsigned int v16;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v17;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v18;
  unsigned int *v19;
  unsigned int v20;
  unsigned int *v21;
  unsigned int v22;
  __int128 v23;
  uint64_t v24;
  const char *v25;
  char v26;
  int v27;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v28;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v29;
  unint64_t v30;

  pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)a5, 1.0);
  if (a4)
  {
    v27 = *(_DWORD *)a2;
    v10 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)*((_QWORD *)a2 + 1);
    v28 = v10;
    if (v10)
    {
      v11 = (unint64_t *)((char *)v10 + 48);
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 1, v11));
    }
    sub_20BFD6E54(&v29, (_DWORD *)a2 + 4);
    sub_20BFD6EA4((_DWORD *)&v29 + 1, (_DWORD *)a2 + 5);
    v14 = (const char *)*((_QWORD *)a2 + 3);
    v30 = (unint64_t)v14;
    if ((v14 & 7) != 0)
    {
      v15 = (unsigned int *)((unint64_t)v14 & 0xFFFFFFFFFFFFFFF8);
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 2, v15));
      if ((v16 & 1) == 0)
        v30 &= 0xFFFFFFFFFFFFFFF8;
    }
    while (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v27, v13)&& (v27 != *(_DWORD *)a3|| v28 != a3[1]|| v29 != a3[2]|| (v30 & 0xFFFFFFFFFFFFFFF8) != ((unint64_t)a3[3] & 0xFFFFFFFFFFFFFFF8)))
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalTransformation(this, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v27, a4, &v23);
      pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=(a5, (double *)&v23);
      if (*a4)
        break;
      sub_20C3AD22C((uint64_t)&v27, (uint64_t)&v23);
      v27 = v23;
      v17 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)*((_QWORD *)&v23 + 1);
      *((_QWORD *)&v23 + 1) = 0;
      v18 = v28;
      v28 = v17;
      if (v18)
        sub_20C35C614(v18);
      sub_20BFD3EBC((int *)&v29, (int *)&v24);
      sub_20BFD3F10((int *)&v29 + 1, (int *)&v24 + 1);
      if ((v30 & 7) != 0)
      {
        v19 = (unsigned int *)(v30 & 0xFFFFFFFFFFFFFFF8);
        do
          v20 = __ldxr(v19);
        while (__stlxr(v20 - 2, v19));
      }
      v30 = (unint64_t)v25;
      v25 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v24 + 1);
      sub_20BFD265C(&v24);
      if (*((_QWORD *)&v23 + 1))
        sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v23 + 1));
    }
    if ((v30 & 7) != 0)
    {
      v21 = (unsigned int *)(v30 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v29 + 1);
    sub_20BFD265C(&v29);
    if (v28)
      sub_20C35C614(v28);
  }
  else
  {
    *(_QWORD *)&v23 = "usdGeom/xformCache.cpp";
    *((_QWORD *)&v23 + 1) = "ComputeRelativeTransform";
    v24 = 143;
    v25 = "GfMatrix4d pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::ComputeRelativeTransform(const UsdPrim &, cons"
          "t UsdPrim &, BOOL *)";
    v26 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v23, 1, (pxrInternal__aapl__pxrReserved__ *)"'resetXformStack' pointer is null.");
  }
}

void sub_20C54D9A4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C35C2E0(v1 - 96);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::SetTime(uint64_t result, uint64_t a2, char *a3, double a4)
{
  double *v5;
  uint64_t v6;
  uint64_t v7;

  v5 = (double *)(result + 40);
  if (a4 != *(double *)(result + 40))
  {
    v6 = *(_QWORD *)(result + 16);
    v7 = 0;
    if (v6)
    {
      do
      {
        *(_BYTE *)(*sub_20C54DA70(&v6, a2, a3) + 208) = 0;
        result = sub_20C54DAE8((uint64_t)&v6);
      }
      while (v6 != v7);
    }
    *v5 = a4;
  }
  return result;
}

_QWORD *sub_20C54DA70(_QWORD *result, uint64_t a2, char *a3)
{
  _QWORD v3[4];
  char v4;
  int v5;

  if (*result == result[1])
  {
    v3[0] = "tf/iterator.h";
    v3[1] = "operator->";
    v3[2] = 287;
    v3[3] = "Iterator &pxrInternal__aapl__pxrReserved__::TfIterator<pxrInternal__aapl__pxrReserved__::TfHashMap<pxrIntern"
            "al__aapl__pxrReserved__::UsdPrim, pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::_Entry, pxrInternal__"
            "aapl__pxrReserved__::TfHash>>::operator->() [T = pxrInternal__aapl__pxrReserved__::TfHashMap<pxrInternal__aa"
            "pl__pxrReserved__::UsdPrim, pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::_Entry, pxrInternal__aapl__"
            "pxrReserved__::TfHash>, Reverse = false]";
    v4 = 0;
    v5 = 4;
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper *)v3, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted", a3);
  }
  return result;
}

uint64_t sub_20C54DAE8(uint64_t a1)
{
  _QWORD v3[4];
  char v4;

  if (*(_QWORD *)a1 == *(_QWORD *)(a1 + 8))
  {
    v3[0] = "tf/iterator.h";
    v3[1] = "operator++";
    v3[2] = 250;
    v3[3] = "TfIterator<T, Reverse> &pxrInternal__aapl__pxrReserved__::TfIterator<pxrInternal__aapl__pxrReserved__::TfHas"
            "hMap<pxrInternal__aapl__pxrReserved__::UsdPrim, pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::_Entry,"
            " pxrInternal__aapl__pxrReserved__::TfHash>>::operator++() [T = pxrInternal__aapl__pxrReserved__::TfHashMap<p"
            "xrInternal__aapl__pxrReserved__::UsdPrim, pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::_Entry, pxrIn"
            "ternal__aapl__pxrReserved__::TfHash>, Reverse = false]";
    v4 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v3, 1, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted");
  }
  else
  {
    *(_QWORD *)a1 = **(_QWORD **)a1;
  }
  return a1;
}

double pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::Swap(pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *this, pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *a2)
{
  double result;

  sub_20BFDC9B4((uint64_t)this, (uint64_t)a2);
  result = *((double *)this + 5);
  *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
  *((double *)a2 + 5) = result;
  return result;
}

uint64_t sub_20C54DB9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 48);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  sub_20BFD6E54((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_20BFD6EA4((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  v9 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v9;
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)(v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 2, v10));
    if ((v11 & 1) == 0)
      *(_QWORD *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)a3;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a3 + 16);
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a3 + 24);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a3 + 32);
  v12 = *(_OWORD *)(a3 + 48);
  v13 = *(_OWORD *)(a3 + 64);
  v14 = *(_OWORD *)(a3 + 96);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(a1 + 128) = v14;
  *(_OWORD *)(a1 + 80) = v12;
  *(_OWORD *)(a1 + 96) = v13;
  v15 = *(_OWORD *)(a3 + 112);
  v16 = *(_OWORD *)(a3 + 128);
  v17 = *(_OWORD *)(a3 + 144);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a3 + 160);
  *(_OWORD *)(a1 + 160) = v16;
  *(_OWORD *)(a1 + 176) = v17;
  *(_OWORD *)(a1 + 144) = v15;
  return a1;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::Clear(pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *this)
{
  uint64_t v2;
  uint64_t i;

  if (*((_QWORD *)this + 3))
  {
    sub_20C5434BC((uint64_t)this, *((_QWORD **)this + 2));
    *((_QWORD *)this + 2) = 0;
    v2 = *((_QWORD *)this + 1);
    if (v2)
    {
      for (i = 0; i != v2; ++i)
        *(_QWORD *)(*(_QWORD *)this + 8 * i) = 0;
    }
    *((_QWORD *)this + 3) = 0;
  }
}

void sub_20C54DCEC()
{
  void *__p[2];
  char v1;

  sub_20C54FA54();
  sub_20BDDC0E4(__p, "BasisCurves");
  sub_20C54FB74((char *)__p);
  if (v1 < 0)
    operator delete(__p[0]);
}

void sub_20C54DD38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::~UsdGeomBasisCurves(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *this)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::UsdGeomCurves::~UsdGeomCurves(this);
  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t (*v6)(uint64_t *);
  char v7;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;

  v6 = sub_20C369024(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v13);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C320;
    if ((v16 & 7) != 0)
    {
      v9 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
  }
  else
  {
    v13 = "usdGeom/basisCurves.cpp";
    v14 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Get";
    v15 = 57;
    v16 = (unint64_t)"static UsdGeomBasisCurves pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::Get(const Us"
                            "dStagePtr &, const SdfPath &)";
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v13, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v13) = 1;
    v14 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v15);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v15 + 1);
    v16 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C320;
    if ((v16 & 7) != 0)
    {
      v11 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stlxr(v12 - 2, v11));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v15 + 1);
  sub_20BFD265C(&v15);
  if (v14)
    sub_20C35C614(v14);
}

void sub_20C54DEDC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::Define(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  unsigned __int8 v6;
  uint64_t (*v7)(uint64_t *);
  char v8;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int v13;
  char *v14;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;

  v6 = atomic_load((unsigned __int8 *)&qword_254989370);
  if ((v6 & 1) == 0 && __cxa_guard_acquire(&qword_254989370))
  {
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&qword_254989368, "BasisCurves");
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &qword_254989368, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989370);
  }
  v7 = sub_20C369024(a1);
  if (v8 & 1 | (unint64_t)v7)
  {
    v9 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::DefinePrim(v9, a2, &qword_254989368, (uint64_t)&v14);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v14);
    *(_QWORD *)a3 = off_24C53C320;
    if ((v17 & 7) != 0)
    {
      v10 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v11 = __ldxr(v10);
      while (__stlxr(v11 - 2, v10));
    }
  }
  else
  {
    v14 = "usdGeom/basisCurves.cpp";
    v15 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Define";
    v16 = 70;
    v17 = (unint64_t)"static UsdGeomBasisCurves pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::Define(const"
                            " UsdStagePtr &, const SdfPath &)";
    v18 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v14, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v14) = 1;
    v15 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v16);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v16 + 1);
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v14);
    *(_QWORD *)a3 = off_24C53C320;
    if ((v17 & 7) != 0)
    {
      v12 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v13 = __ldxr(v12);
      while (__stlxr(v13 - 2, v12));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v16 + 1);
  sub_20BFD265C(&v16);
  if (v15)
    sub_20C35C614(v15);
}

void sub_20C54E0CC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989370);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *this)
{
  return 3;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *this)
{
  unsigned __int8 v1;
  const std::type_info *v3;
  char *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_254989380);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_254989380))
  {
    __cxa_guard_release(&qword_254989380);
  }
  return &qword_254989378;
}

void sub_20C54E170(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989380);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *v3;
  const std::type_info *v4;
  char *v5;

  v1 = atomic_load((unsigned __int8 *)&qword_254989390);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *)__cxa_guard_acquire(&qword_254989390);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::_GetStaticTfType(v3);
      byte_254989388 = sub_20C35BD7C((char *)&qword_254989378, v4, v5);
      __cxa_guard_release(&qword_254989390);
    }
  }
  return byte_254989388;
}

void sub_20C54E1EC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989390);
  _Unwind_Resume(a1);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::_GetStaticTfType(this);
  return &qword_254989378;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::GetTypeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1128), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C54E2C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::CreateTypeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1128), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::GetBasisAttr(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 32), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C54E41C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::CreateBasisAttr(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 32), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::GetWrapAttr(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1320), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C54E574(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::CreateWrapAttr(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1320), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *this)
{
  int v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t *SchemaAttributeNames;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = (int)this;
  v26 = *MEMORY[0x24BDAC8D0];
  v2 = atomic_load((unsigned __int8 *)&qword_2549893B0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2549893B0))
  {
    v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5)
      v5 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v6 = *((_QWORD *)v5 + 141);
    v23 = v6;
    if ((v6 & 7) != 0)
    {
      v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 2, v7));
      if ((v8 & 1) == 0)
        v23 &= 0xFFFFFFFFFFFFFFF8;
    }
    v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9)
      v9 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v10 = *((_QWORD *)v9 + 4);
    v24 = v10;
    if ((v10 & 7) != 0)
    {
      v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 2, v11));
      if ((v12 & 1) == 0)
        v24 &= 0xFFFFFFFFFFFFFFF8;
    }
    v13 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v13)
      v13 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v14 = *((_QWORD *)v13 + 165);
    v25 = v14;
    if ((v14 & 7) != 0)
    {
      v15 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 2, v15));
      if ((v16 & 1) == 0)
        v25 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_20C374970(&qword_254989398, &v23, 3uLL);
    v17 = &v26;
    do
    {
      v19 = *--v17;
      v18 = v19;
      if ((v19 & 7) != 0)
      {
        v20 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
        do
          v21 = __ldxr(v20);
        while (__stlxr(v21 - 2, v20));
      }
    }
    while (v17 != &v23);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_254989398, &dword_20BDBC000);
    __cxa_guard_release(&qword_2549893B0);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_2549893D0);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2549893D0))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomCurves *)1);
    sub_20C54E90C((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_2549893B8, &dword_20BDBC000);
    __cxa_guard_release(&qword_2549893D0);
  }
  if (v1)
    return &qword_2549893B8;
  else
    return &qword_254989398;
}

void sub_20C54E87C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2549893B0);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C54E90C(uint64_t **a1)
{
  qword_2549893C0 = 0;
  unk_2549893C8 = 0;
  qword_2549893B8 = 0;
  sub_20BFC9A6C((char **)&qword_2549893B8, ((unk_2549893A0 - qword_254989398) >> 3) + a1[1] - *a1);
  sub_20C1292A0(&qword_2549893B8, (_QWORD *)qword_2549893C0, *a1, a1[1], a1[1] - *a1);
  return sub_20C1292A0(&qword_2549893B8, (_QWORD *)qword_2549893C0, (uint64_t *)qword_254989398, unk_2549893A0, (unk_2549893A0 - qword_254989398) >> 3);
}

void sub_20C54E9A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::ComputeInterpolationForSize(pxrInternal__aapl__pxrReserved__::UsdGeomCurves *a1@<X0>, uint64_t a2@<X1>, char **a3@<X3>, unsigned int **a4@<X8>)
{
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  char *v19;
  char *v20;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v21;
  unsigned int *v22;
  unsigned int *v23;
  unsigned int v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  __int128 v35;
  int64x2_t v36;
  char *v37;
  unsigned int *v38;
  unsigned int v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v41;
  unsigned int *v42;
  unsigned int *v43;
  unsigned int v44;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v45;
  uint64_t v46;
  unsigned int *v47;
  unsigned int v48;
  unint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  __int128 v62;
  int64x2_t v63;
  char *v64;
  uint64_t v65;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v66;
  unsigned int *v67;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v68;
  uint64_t v69;
  unsigned int *v70;
  unsigned int v71;
  unint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  __int128 v85;
  int64x2_t v86;
  char *v87;
  uint64_t v88;
  int *v89;
  uint64_t v90;
  uint64_t v91;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v92;
  unsigned int *v93;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v94;
  uint64_t v95;
  unsigned int *v96;
  unsigned int v97;
  unint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  __int128 v111;
  int64x2_t v112;
  char *v113;
  _OWORD v114[2];
  int *v115;
  uint64_t v116;
  int64x2_t v117;
  char *v118;
  _QWORD *v119;

  if (a3)
  {
    v8 = *a3;
    v9 = a3[1];
    if (v9 != *a3)
    {
      do
      {
        v11 = *((_QWORD *)v9 - 2);
        v9 -= 16;
        v10 = v11;
        if ((v11 & 7) != 0)
        {
          v12 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
          do
            v13 = __ldxr(v12);
          while (__stlxr(v13 - 2, v12));
        }
      }
      while (v9 != v8);
      a3[1] = v8;
    }
    if (a2 != 1)
    {
      v14 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v14)
        v14 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      v15 = *((_QWORD *)v14 + 17);
      if ((v15 & 7) != 0)
      {
        v16 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
        do
          v17 = __ldxr(v16);
        while (__stxr(v17 + 2, v16));
        if ((v17 & 1) == 0)
          v15 &= 0xFFFFFFFFFFFFFFF8;
      }
      v18 = (unint64_t)a3[2];
      v19 = a3[1];
      if ((unint64_t)v19 >= v18)
      {
        v25 = (v19 - *a3) >> 4;
        v26 = v25 + 1;
        if ((unint64_t)(v25 + 1) >> 60)
          sub_20BDDF694();
        v27 = v18 - (_QWORD)*a3;
        if (v27 >> 3 > v26)
          v26 = v27 >> 3;
        if ((unint64_t)v27 >= 0x7FFFFFFFFFFFFFF0)
          v28 = 0xFFFFFFFFFFFFFFFLL;
        else
          v28 = v26;
        v119 = a3 + 2;
        v29 = (char *)sub_20BDEA2F0((uint64_t)(a3 + 2), v28);
        v31 = &v29[16 * v25];
        *(_QWORD *)v31 = v15;
        *((_QWORD *)v31 + 1) = 1;
        v33 = *a3;
        v32 = a3[1];
        if (v32 == *a3)
        {
          v36 = vdupq_n_s64((unint64_t)v32);
          v34 = &v29[16 * v25];
        }
        else
        {
          v34 = &v29[16 * v25];
          do
          {
            v35 = *((_OWORD *)v32 - 1);
            v32 -= 16;
            *((_OWORD *)v34 - 1) = v35;
            v34 -= 16;
            *(_QWORD *)v32 = 0;
          }
          while (v32 != v33);
          v36 = *(int64x2_t *)a3;
        }
        v20 = v31 + 16;
        *a3 = v34;
        a3[1] = v31 + 16;
        v117 = v36;
        v37 = a3[2];
        a3[2] = &v29[16 * v30];
        v118 = v37;
        v116 = v36.i64[0];
        sub_20BF2A0F8((uint64_t)&v116);
      }
      else
      {
        *(_QWORD *)v19 = v15;
        *((_QWORD *)v19 + 1) = 1;
        v20 = v19 + 16;
      }
      a3[1] = v20;
LABEL_39:
      v115 = 0;
      memset(v114, 0, sizeof(v114));
      pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetCurveVertexCountsAttr(a1, (uint64_t)&v116);
      pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<int>>((uint64_t)&v116, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v114);
      if ((v118 & 7) != 0)
      {
        v38 = (unsigned int *)((unint64_t)v118 & 0xFFFFFFFFFFFFFFF8);
        do
          v39 = __ldxr(v38);
        while (__stlxr(v39 - 2, v38));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v117.i32[3]);
      sub_20BFD265C(&v117.i32[2]);
      if (v117.i64[0])
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v117.i64[0]);
      v40 = *(_QWORD *)&v114[0];
      if (*(_QWORD *)&v114[0] == a2)
      {
        v41 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
        if (!v41)
          v41 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
        v42 = (unsigned int *)*((_QWORD *)v41 + 145);
        *a4 = v42;
        if ((v42 & 7) == 0)
          goto LABEL_142;
        v43 = (unsigned int *)((unint64_t)v42 & 0xFFFFFFFFFFFFFFF8);
        do
          v44 = __ldxr(v43);
        while (__stxr(v44 + 2, v43));
      }
      else
      {
        if (a3)
        {
          v45 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
          if (!v45)
            v45 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
          v46 = *((_QWORD *)v45 + 145);
          if ((v46 & 7) != 0)
          {
            v47 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
            do
              v48 = __ldxr(v47);
            while (__stxr(v48 + 2, v47));
            if ((v48 & 1) == 0)
              v46 &= 0xFFFFFFFFFFFFFFF8;
          }
          v49 = (unint64_t)a3[2];
          v50 = a3[1];
          if ((unint64_t)v50 >= v49)
          {
            v52 = (v50 - *a3) >> 4;
            v53 = v52 + 1;
            if ((unint64_t)(v52 + 1) >> 60)
              sub_20BDDF694();
            v54 = v49 - (_QWORD)*a3;
            if (v54 >> 3 > v53)
              v53 = v54 >> 3;
            if ((unint64_t)v54 >= 0x7FFFFFFFFFFFFFF0)
              v55 = 0xFFFFFFFFFFFFFFFLL;
            else
              v55 = v53;
            v119 = a3 + 2;
            v56 = (char *)sub_20BDEA2F0((uint64_t)(a3 + 2), v55);
            v58 = &v56[16 * v52];
            *(_QWORD *)v58 = v46;
            *((_QWORD *)v58 + 1) = v40;
            v60 = *a3;
            v59 = a3[1];
            if (v59 == *a3)
            {
              v63 = vdupq_n_s64((unint64_t)v59);
              v61 = &v56[16 * v52];
            }
            else
            {
              v61 = &v56[16 * v52];
              do
              {
                v62 = *((_OWORD *)v59 - 1);
                v59 -= 16;
                *((_OWORD *)v61 - 1) = v62;
                v61 -= 16;
                *(_QWORD *)v59 = 0;
              }
              while (v59 != v60);
              v63 = *(int64x2_t *)a3;
            }
            v51 = v58 + 16;
            *a3 = v61;
            a3[1] = v58 + 16;
            v117 = v63;
            v64 = a3[2];
            a3[2] = &v56[16 * v57];
            v118 = v64;
            v116 = v63.i64[0];
            sub_20BF2A0F8((uint64_t)&v116);
          }
          else
          {
            *(_QWORD *)v50 = v46;
            *((_QWORD *)v50 + 1) = v40;
            v51 = v50 + 16;
          }
          a3[1] = v51;
        }
        v65 = sub_20C54F1B8(a1);
        if (v65 == a2)
        {
          v66 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
          if (!v66)
            v66 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
          v67 = (unsigned int *)*((_QWORD *)v66 + 151);
          *a4 = v67;
          if ((v67 & 7) == 0)
            goto LABEL_142;
          v43 = (unsigned int *)((unint64_t)v67 & 0xFFFFFFFFFFFFFFF8);
          do
            v44 = __ldxr(v43);
          while (__stxr(v44 + 2, v43));
        }
        else
        {
          if (a3)
          {
            v68 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
            if (!v68)
              v68 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
            v69 = *((_QWORD *)v68 + 151);
            if ((v69 & 7) != 0)
            {
              v70 = (unsigned int *)(v69 & 0xFFFFFFFFFFFFFFF8);
              do
                v71 = __ldxr(v70);
              while (__stxr(v71 + 2, v70));
              if ((v71 & 1) == 0)
                v69 &= 0xFFFFFFFFFFFFFFF8;
            }
            v72 = (unint64_t)a3[2];
            v73 = a3[1];
            if ((unint64_t)v73 >= v72)
            {
              v75 = (v73 - *a3) >> 4;
              v76 = v75 + 1;
              if ((unint64_t)(v75 + 1) >> 60)
                sub_20BDDF694();
              v77 = v72 - (_QWORD)*a3;
              if (v77 >> 3 > v76)
                v76 = v77 >> 3;
              if ((unint64_t)v77 >= 0x7FFFFFFFFFFFFFF0)
                v78 = 0xFFFFFFFFFFFFFFFLL;
              else
                v78 = v76;
              v119 = a3 + 2;
              v79 = (char *)sub_20BDEA2F0((uint64_t)(a3 + 2), v78);
              v81 = &v79[16 * v75];
              *(_QWORD *)v81 = v69;
              *((_QWORD *)v81 + 1) = v65;
              v83 = *a3;
              v82 = a3[1];
              if (v82 == *a3)
              {
                v86 = vdupq_n_s64((unint64_t)v82);
                v84 = &v79[16 * v75];
              }
              else
              {
                v84 = &v79[16 * v75];
                do
                {
                  v85 = *((_OWORD *)v82 - 1);
                  v82 -= 16;
                  *((_OWORD *)v84 - 1) = v85;
                  v84 -= 16;
                  *(_QWORD *)v82 = 0;
                }
                while (v82 != v83);
                v86 = *(int64x2_t *)a3;
              }
              v74 = v81 + 16;
              *a3 = v84;
              a3[1] = v81 + 16;
              v117 = v86;
              v87 = a3[2];
              a3[2] = &v79[16 * v80];
              v118 = v87;
              v116 = v86.i64[0];
              sub_20BF2A0F8((uint64_t)&v116);
            }
            else
            {
              *(_QWORD *)v73 = v69;
              *((_QWORD *)v73 + 1) = v65;
              v74 = v73 + 16;
            }
            a3[1] = v74;
          }
          if (*(_QWORD *)&v114[0])
          {
            v88 = 0;
            v89 = v115;
            v90 = 4 * *(_QWORD *)&v114[0];
            do
            {
              v91 = *v89++;
              v88 += v91;
              v90 -= 4;
            }
            while (v90);
          }
          else
          {
            v88 = 0;
          }
          if (v88 != a2)
          {
            if (a3)
            {
              v94 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
              if (!v94)
                v94 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
              v95 = *((_QWORD *)v94 + 153);
              if ((v95 & 7) != 0)
              {
                v96 = (unsigned int *)(v95 & 0xFFFFFFFFFFFFFFF8);
                do
                  v97 = __ldxr(v96);
                while (__stxr(v97 + 2, v96));
                if ((v97 & 1) == 0)
                  v95 &= 0xFFFFFFFFFFFFFFF8;
              }
              v98 = (unint64_t)a3[2];
              v99 = a3[1];
              if ((unint64_t)v99 >= v98)
              {
                v101 = (v99 - *a3) >> 4;
                v102 = v101 + 1;
                if ((unint64_t)(v101 + 1) >> 60)
                  sub_20BDDF694();
                v103 = v98 - (_QWORD)*a3;
                if (v103 >> 3 > v102)
                  v102 = v103 >> 3;
                if ((unint64_t)v103 >= 0x7FFFFFFFFFFFFFF0)
                  v104 = 0xFFFFFFFFFFFFFFFLL;
                else
                  v104 = v102;
                v119 = a3 + 2;
                v105 = (char *)sub_20BDEA2F0((uint64_t)(a3 + 2), v104);
                v107 = &v105[16 * v101];
                *(_QWORD *)v107 = v95;
                *((_QWORD *)v107 + 1) = v88;
                v109 = *a3;
                v108 = a3[1];
                if (v108 == *a3)
                {
                  v112 = vdupq_n_s64((unint64_t)v108);
                  v110 = &v105[16 * v101];
                }
                else
                {
                  v110 = &v105[16 * v101];
                  do
                  {
                    v111 = *((_OWORD *)v108 - 1);
                    v108 -= 16;
                    *((_OWORD *)v110 - 1) = v111;
                    v110 -= 16;
                    *(_QWORD *)v108 = 0;
                  }
                  while (v108 != v109);
                  v112 = *(int64x2_t *)a3;
                }
                v100 = v107 + 16;
                *a3 = v110;
                a3[1] = v107 + 16;
                v117 = v112;
                v113 = a3[2];
                a3[2] = &v105[16 * v106];
                v118 = v113;
                v116 = v112.i64[0];
                sub_20BF2A0F8((uint64_t)&v116);
              }
              else
              {
                *(_QWORD *)v99 = v95;
                *((_QWORD *)v99 + 1) = v88;
                v100 = v99 + 16;
              }
              v43 = 0;
              a3[1] = v100;
            }
            else
            {
              v43 = 0;
            }
LABEL_141:
            *a4 = v43;
LABEL_142:
            sub_20BF5618C((uint64_t)v114);
            return;
          }
          v92 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
          if (!v92)
            v92 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
          v93 = (unsigned int *)*((_QWORD *)v92 + 153);
          *a4 = v93;
          if ((v93 & 7) == 0)
            goto LABEL_142;
          v43 = (unsigned int *)((unint64_t)v93 & 0xFFFFFFFFFFFFFFF8);
          do
            v44 = __ldxr(v43);
          while (__stxr(v44 + 2, v43));
        }
      }
      if ((v44 & 1) != 0)
        goto LABEL_142;
      goto LABEL_141;
    }
  }
  else if (a2 != 1)
  {
    goto LABEL_39;
  }
  v21 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v21)
    v21 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v22 = (unsigned int *)*((_QWORD *)v21 + 17);
  *a4 = v22;
  if ((v22 & 7) != 0)
  {
    v23 = (unsigned int *)((unint64_t)v22 & 0xFFFFFFFFFFFFFFF8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 2, v23));
    if ((v24 & 1) == 0)
      *a4 = v23;
  }
}

void sub_20C54F0E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20BF5618C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C54F1B8(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *a1)
{
  unsigned int *v2;
  unsigned int v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v8;
  char *v9;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v10;
  unsigned int *v11;
  unsigned int v12;
  uint64_t v13;
  char *v14;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v15;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v16;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v17;
  unint64_t v18;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v19;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v20;
  int *v21;
  uint64_t v22;
  char *v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char *v29;
  int *v30;
  uint64_t v31;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v32;
  unsigned int *v33;
  unsigned int v34;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v35;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v36;
  int *v37;
  uint64_t v38;
  char *v39;
  int *v40;
  unint64_t v41;
  int *v42;
  uint64_t v43;
  char *v44;
  int *v45;
  uint64_t v46;
  unsigned int *v47;
  unsigned int v48;
  unsigned int *v49;
  unsigned int v50;
  uint64_t v52;
  char v53[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v54;
  int v55;
  int v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  int *v60;
  uint64_t v61;
  uint64_t v62;

  v61 = 0;
  v62 = 0;
  pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::GetTypeAttr(a1, (uint64_t)&v58);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::TfToken>((uint64_t)&v58, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v62);
  if ((BYTE8(v59) & 7) != 0)
  {
    v2 = (unsigned int *)(*((_QWORD *)&v59 + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v3 = __ldxr(v2);
    while (__stlxr(v3 - 2, v2));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v59 + 1);
  sub_20BFD265C(&v59);
  if (*((_QWORD *)&v58 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v58 + 1));
  pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::GetWrapAttr(a1, (uint64_t)&v58);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::TfToken>((uint64_t)&v58, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v61);
  if ((BYTE8(v59) & 7) != 0)
  {
    v4 = (unsigned int *)(*((_QWORD *)&v59 + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v59 + 1);
  sub_20BFD265C(&v59);
  if (*((_QWORD *)&v58 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v58 + 1));
  v60 = 0;
  v58 = 0u;
  v59 = 0u;
  pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetCurveVertexCountsAttr(a1, (uint64_t)v53);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<int>>((uint64_t)v53, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v58);
  if ((v57 & 7) != 0)
  {
    v6 = (unsigned int *)(v57 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v56);
  sub_20BFD265C(&v55);
  if (v54)
    sub_20C35C614(v54);
  v10 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v10)
    v10 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if ((v62 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v10 + 68) & 0xFFFFFFFFFFFFFFF8))
  {
    v19 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v19)
      v19 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if ((v61 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v19 + 87) & 0xFFFFFFFFFFFFFFF8))
      goto LABEL_44;
    v20 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v20)
      v20 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if ((v61 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v20 + 99) & 0xFFFFFFFFFFFFFFF8))
    {
LABEL_44:
      sub_20BF64FC4((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v58, v8, v9);
      v27 = v60;
      sub_20BF64FC4((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v58, v28, v29);
      v30 = &v60[v58];
      if (v27 != v30)
      {
        v25 = 0;
        do
        {
          v31 = *v27++;
          v25 += v31;
        }
        while (v27 != v30);
        goto LABEL_72;
      }
    }
    else
    {
      sub_20BF64FC4((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v58, v8, v9);
      v21 = v60;
      sub_20BF64FC4((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v58, v22, v23);
      v24 = &v60[v58];
      if (v21 != v24)
      {
        v25 = 0;
        do
        {
          v26 = *v21++;
          v25 += v26 + 1;
        }
        while (v21 != v24);
        goto LABEL_72;
      }
    }
    v25 = 0;
    goto LABEL_72;
  }
  v52 = 0;
  pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::GetBasisAttr(a1, (uint64_t)v53);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::TfToken>((uint64_t)v53, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v52);
  if ((v57 & 7) != 0)
  {
    v11 = (unsigned int *)(v57 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stlxr(v12 - 2, v11));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v56);
  sub_20BFD265C(&v55);
  if (v54)
    sub_20C35C614(v54);
  v15 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v15)
    v15 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if ((v52 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v15 + 5) & 0xFFFFFFFFFFFFFFF8))
  {
    v18 = 3;
  }
  else
  {
    v16 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v16)
      v16 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if ((v52 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v16 + 10) & 0xFFFFFFFFFFFFFFF8))
    {
      v18 = 1;
    }
    else
    {
      v17 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v17)
        v17 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      v18 = (v52 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v17 + 13) & 0xFFFFFFFFFFFFFFF8);
    }
  }
  v32 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v32)
    v32 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if ((v62 & 0xFFFFFFFFFFFFFFF8) != (*((_QWORD *)v32 + 27) & 0xFFFFFFFFFFFFFFF8))
    goto LABEL_52;
  v35 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v35)
    v35 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if ((v61 & 0xFFFFFFFFFFFFFFF8) != (*((_QWORD *)v35 + 87) & 0xFFFFFFFFFFFFFFF8))
  {
    v36 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v36)
      v36 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if ((v61 & 0xFFFFFFFFFFFFFFF8) != (*((_QWORD *)v36 + 99) & 0xFFFFFFFFFFFFFFF8))
    {
      sub_20BF64FC4((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v58, v13, v14);
      v37 = v60;
      sub_20BF64FC4((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v58, v38, v39);
      v40 = &v60[v58];
      if (v37 != v40)
      {
        v25 = 0;
        do
        {
          v41 = *v37++;
          v25 += v41 / v18;
        }
        while (v37 != v40);
        goto LABEL_53;
      }
LABEL_52:
      v25 = 0;
      goto LABEL_53;
    }
  }
  sub_20BF64FC4((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v58, v13, v14);
  v42 = v60;
  sub_20BF64FC4((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v58, v43, v44);
  v45 = &v60[v58];
  if (v42 == v45)
    goto LABEL_52;
  v25 = 0;
  do
  {
    v46 = *v42++;
    v25 += (v46 - 4) / v18 + 2;
  }
  while (v42 != v45);
LABEL_53:
  if ((v52 & 7) != 0)
  {
    v33 = (unsigned int *)(v52 & 0xFFFFFFFFFFFFFFF8);
    do
      v34 = __ldxr(v33);
    while (__stlxr(v34 - 2, v33));
  }
LABEL_72:
  sub_20BF5618C((uint64_t)&v58);
  if ((v61 & 7) != 0)
  {
    v47 = (unsigned int *)(v61 & 0xFFFFFFFFFFFFFFF8);
    do
      v48 = __ldxr(v47);
    while (__stlxr(v48 - 2, v47));
  }
  if ((v62 & 7) != 0)
  {
    v49 = (unsigned int *)(v62 & 0xFFFFFFFFFFFFFFF8);
    do
      v50 = __ldxr(v49);
    while (__stlxr(v50 - 2, v49));
  }
  return v25;
}

void sub_20C54F6BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  uint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  va_list va;

  va_start(va, a7);
  sub_20BF5618C((uint64_t)va);
  v9 = *(_QWORD *)(v7 - 48);
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)(v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stlxr(v11 - 2, v10));
  }
  v12 = *(_QWORD *)(v7 - 40);
  if ((v12 & 7) != 0)
  {
    v13 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::ComputeUniformDataSize(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *this, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a2)
{
  unsigned int *v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;
  _OWORD v11[2];
  uint64_t v12;

  v12 = 0;
  memset(v11, 0, sizeof(v11));
  pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetCurveVertexCountsAttr(this, (uint64_t)&v6);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<int>>((uint64_t)&v6, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v11);
  if ((v10 & 7) != 0)
  {
    v2 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v3 = __ldxr(v2);
    while (__stlxr(v3 - 2, v2));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
  v4 = *(_QWORD *)&v11[0];
  sub_20BF5618C((uint64_t)v11);
  return v4;
}

void sub_20C54F858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  sub_20C372B54((uint64_t)&a9);
  sub_20BF5618C((uint64_t)&a13);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::ComputeVaryingDataSize(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *this, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a2)
{
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v7;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  int v9;
  int v10;
  uint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  v13 = 0;
  memset(v12, 0, sizeof(v12));
  pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetCurveVertexCountsAttr(this, (uint64_t)&v7);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<int>>((uint64_t)&v7, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v12);
  if ((v11 & 7) != 0)
  {
    v3 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v10);
  sub_20BFD265C(&v9);
  if (v8)
    sub_20C35C614(v8);
  v5 = sub_20C54F1B8(this);
  sub_20BF5618C((uint64_t)v12);
  return v5;
}

void sub_20C54F934(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20BF5618C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::ComputeVertexDataSize(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *this, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a2)
{
  unsigned int *v2;
  unsigned int v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v10;
  int v11;
  int v12;
  uint64_t v13;
  _OWORD v14[2];
  int *v15;

  v15 = 0;
  memset(v14, 0, sizeof(v14));
  pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetCurveVertexCountsAttr(this, (uint64_t)&v9);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<int>>((uint64_t)&v9, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v14);
  if ((v13 & 7) != 0)
  {
    v2 = (unsigned int *)(v13 & 0xFFFFFFFFFFFFFFF8);
    do
      v3 = __ldxr(v2);
    while (__stlxr(v3 - 2, v2));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v12);
  sub_20BFD265C(&v11);
  if (v10)
    sub_20C35C614(v10);
  if (*(_QWORD *)&v14[0])
  {
    v4 = 0;
    v5 = v15;
    v6 = 4 * *(_QWORD *)&v14[0];
    do
    {
      v7 = *v5++;
      v4 += v7;
      v6 -= 4;
    }
    while (v6);
  }
  else
  {
    v4 = 0;
  }
  sub_20BF5618C((uint64_t)v14);
  return v4;
}

void sub_20C54FA2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  sub_20C372B54((uint64_t)&a9);
  sub_20BF5618C((uint64_t)&a13);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C54FA54()
{
  uint64_t *v0;
  void *__p[2];
  char v4;
  void *v5[3];
  uint64_t v6;
  int v7;

  sub_20BEB59B0((uint64_t)&v6, (uint64_t)"Tf", (uint64_t)"TfType::Define");
  sub_20C54FC24((unint64_t **)v5);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p, (char **)v5, 0);
  if (v4 < 0)
    operator delete(__p[0]);
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_20C54FB28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  uint64_t v16;

  if (a14 < 0)
    operator delete(__p);
  if (a15)
    operator delete(a15);
  sub_20BEB24F4(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_20C54FB74(char *a1)
{
  unint64_t v2;
  unint64_t v3;
  void *__p[2];
  char v5;

  v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  if (v5 < 0)
    operator delete(__p[0]);
  v3 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  if (v5 < 0)
    operator delete(__p[0]);
  pxrInternal__aapl__pxrReserved__::TfType::AddAlias((uint64_t *)&v3, v2, a1);
}

void sub_20C54FC04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C54FC24(unint64_t **a1@<X8>)
{
  unint64_t v2;
  unint64_t *v3;
  void *__p[2];
  char v5;

  v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  v3 = (unint64_t *)operator new(8uLL);
  *a1 = v3;
  *v3++ = v2;
  a1[1] = v3;
  a1[2] = v3;
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C54FC90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::~UsdGeomBoundable(pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *this)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::UsdGeomXformable::~UsdGeomXformable(this);
  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t (*v6)(uint64_t *);
  char v7;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;

  v6 = sub_20C369024(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v13);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C378;
    if ((v16 & 7) != 0)
    {
      v9 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
  }
  else
  {
    v13 = "usdGeom/boundable.cpp";
    v14 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Get";
    v15 = 51;
    v16 = (unint64_t)"static UsdGeomBoundable pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::Get(const UsdSta"
                            "gePtr &, const SdfPath &)";
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v13, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v13) = 1;
    v14 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v15);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v15 + 1);
    v16 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C378;
    if ((v16 & 7) != 0)
    {
      v11 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stlxr(v12 - 2, v11));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v15 + 1);
  sub_20BFD265C(&v15);
  if (v14)
    sub_20C35C614(v14);
}

void sub_20C54FE40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *this)
{
  return 2;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *this)
{
  unsigned __int8 v1;
  const std::type_info *v3;
  char *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_2549893E0);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_2549893E0))
  {
    __cxa_guard_release(&qword_2549893E0);
  }
  return &qword_2549893D8;
}

void sub_20C54FECC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2549893E0);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *v3;
  const std::type_info *v4;
  char *v5;

  v1 = atomic_load((unsigned __int8 *)&qword_2549893F0);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *)__cxa_guard_acquire(&qword_2549893F0);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::_GetStaticTfType(v3);
      byte_2549893E8 = sub_20C35BD7C((char *)&qword_2549893D8, v4, v5);
      __cxa_guard_release(&qword_2549893F0);
    }
  }
  return byte_2549893E8;
}

void sub_20C54FF48(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2549893F0);
  _Unwind_Resume(a1);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::_GetStaticTfType(this);
  return &qword_2549893D8;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::GetExtentAttr(pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 296), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C550020(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::CreateExtentAttr(pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 296), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 616), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *this)
{
  int v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  unsigned int v10;
  uint64_t *SchemaAttributeNames;
  uint64_t v12[2];

  v1 = (int)this;
  v12[1] = *MEMORY[0x24BDAC8D0];
  v2 = atomic_load((unsigned __int8 *)&qword_254989410);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254989410))
  {
    v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5)
      v5 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v6 = *((_QWORD *)v5 + 37);
    v12[0] = v6;
    if ((v6 & 7) != 0)
    {
      v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 2, v7));
      if ((v8 & 1) == 0)
        v12[0] = (uint64_t)v7;
    }
    sub_20C374970(&qword_2549893F8, v12, 1uLL);
    if ((v12[0] & 7) != 0)
    {
      v9 = (unsigned int *)(v12[0] & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_2549893F8, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989410);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254989430);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254989430))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomXformable::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomXformable *)1);
    sub_20C5502B0((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_254989418, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989430);
  }
  if (v1)
    return &qword_254989418;
  else
    return &qword_2549893F8;
}

void sub_20C550260(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989410);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C5502B0(uint64_t **a1)
{
  qword_254989420 = 0;
  unk_254989428 = 0;
  qword_254989418 = 0;
  sub_20BFC9A6C((char **)&qword_254989418, ((unk_254989400 - qword_2549893F8) >> 3) + a1[1] - *a1);
  sub_20C1292A0(&qword_254989418, (_QWORD *)qword_254989420, *a1, a1[1], a1[1] - *a1);
  return sub_20C1292A0(&qword_254989418, (_QWORD *)qword_254989420, (uint64_t *)qword_2549893F8, unk_254989400, (unk_254989400 - qword_2549893F8) >> 3);
}

void sub_20C550344(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::ComputeExtent(pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *a1, double *a2, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a3)
{
  unsigned int *v6;
  unsigned int v7;
  uint64_t *String;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  const char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  const char *v17;
  char *v18;
  uint64_t v19;
  int v21;
  int v22;
  char *v23;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  _BYTE v28[120];

  pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::GetExtentAttr(a1, (uint64_t)&v23);
  pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::UsdAttributeQuery((pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *)v28, (const pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v23);
  if ((v26 & 7) != 0)
  {
    v6 = (unsigned int *)(v26 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v25 + 1);
  sub_20BFD265C(&v25);
  if (v24)
    sub_20C35C614(v24);
  if (pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::HasAuthoredValue((pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *)v28)
    && pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::_Get<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::GfVec3f>>((uint64_t)v28, a3, *a2))
  {
    if (*(_QWORD *)a3 == 2)
    {
LABEL_19:
      v15 = 1;
      goto LABEL_26;
    }
    v23 = "usdGeom/boundable.cpp";
    v24 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"ComputeExtent";
    v25 = 163;
    v26 = (unint64_t)"BOOL pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::ComputeExtent(const UsdTimeCode &, VtVec3fArray *)";
    v27 = 0;
    sub_20C3630C0((uint64_t)a1, &v21);
    String = pxrInternal__aapl__pxrReserved__::SdfPath::GetString((pxrInternal__aapl__pxrReserved__::SdfPath *)&v21);
    if (*((char *)String + 23) >= 0)
      v10 = (uint64_t)String;
    else
      v10 = *String;
    pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v23, (pxrInternal__aapl__pxrReserved__ *)"[Boundable Extent] Authored extent for <%s> is of size %zu instead of 2.\n", v9, v10, *(_QWORD *)a3);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
    sub_20BFD265C(&v21);
  }
  if (sub_20C53F55C(0))
  {
    sub_20C3630C0((uint64_t)a1, &v23);
    v11 = pxrInternal__aapl__pxrReserved__::SdfPath::GetString((pxrInternal__aapl__pxrReserved__::SdfPath *)&v23);
    if (*((char *)v11 + 23) >= 0)
      v14 = (uint64_t)v11;
    else
      v14 = *v11;
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[Boundable Extent] WARNING: No valid extent authored for <%s>. Computing extent from source geometry data dynamically..\n", v12, v13, v14);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v23 + 1);
    sub_20BFD265C(&v23);
  }
  if ((pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::ComputeExtentFromPlugins((uint64_t)a1, (uint64_t)a2, (uint64_t)a3) & 1) != 0)goto LABEL_19;
  if (sub_20C53F55C(0))
  {
    sub_20C3630C0((uint64_t)a1, &v23);
    v16 = pxrInternal__aapl__pxrReserved__::SdfPath::GetString((pxrInternal__aapl__pxrReserved__::SdfPath *)&v23);
    if (*((char *)v16 + 23) >= 0)
      v19 = (uint64_t)v16;
    else
      v19 = *v16;
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[Boundable Extent] WARNING: Unable to compute extent for <%s>.\n", v17, v18, v19);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v23 + 1);
    sub_20BFD265C(&v23);
  }
  v15 = 0;
LABEL_26:
  sub_20C373B34((uint64_t)v28);
  return v15;
}

void sub_20C550568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_20C373B34((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C5505C4()
{
  uint64_t *v0;
  void *__p[2];
  char v4;
  void *v5[3];
  uint64_t v6;
  int v7;

  sub_20BEB59B0((uint64_t)&v6, (uint64_t)"Tf", (uint64_t)"TfType::Define");
  sub_20C5506E4((unint64_t **)v5);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p, (char **)v5, 0);
  if (v4 < 0)
    operator delete(__p[0]);
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_20C550698(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  uint64_t v16;

  if (a14 < 0)
    operator delete(__p);
  if (a15)
    operator delete(a15);
  sub_20BEB24F4(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_20C5506E4(unint64_t **a1@<X8>)
{
  unint64_t v2;
  unint64_t *v3;
  void *__p[2];
  char v5;

  v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  v3 = (unint64_t *)operator new(8uLL);
  *a1 = v3;
  *v3++ = v2;
  a1[1] = v3;
  a1[2] = v3;
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C550750(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C550778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t *v6;
  unint64_t v10;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v11;
  unsigned __int8 v12;
  const pxrInternal__aapl__pxrReserved__::UsdObject *v13;
  const char *v14;
  unsigned int *v15;
  unsigned int v16;
  uint64_t v17;
  pxrInternal__aapl__pxrReserved__ *v19;
  uint64_t v20;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v21;
  pxrInternal__aapl__pxrReserved__::TfType *v22;
  void *v23;
  char *v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t, void **);
  pxrInternal__aapl__pxrReserved__ *v26;
  unint64_t v27;
  const char *v28;
  char *v29;
  unsigned __int8 v30;
  char *v31;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v32;
  const char *p_p;
  char *i;
  uint64_t *v35;
  _BOOL8 v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t *);
  char v39;
  pxrInternal__aapl__pxrReserved__::PlugPlugin *v40;
  int v41;
  std::__shared_weak_count *v42;
  unint64_t *p_shared_owners;
  unint64_t v44;
  uint64_t TypeName;
  const char *v46;
  uint64_t v47;
  unsigned int *v48;
  unsigned int v49;
  unsigned int v50;
  char *v51;
  uint64_t v52;
  unsigned int *v53;
  unsigned int v54;
  void *v55;
  __int128 v56;
  const pxrInternal__aapl__pxrReserved__::UsdObject *v57;
  const char *v58;
  unsigned int *v59;
  unsigned int v60;
  const std::type_info *v61;
  _DWORD *v62;
  void *__p;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  std::__shared_weak_count *v68;
  char v69;
  char *v70;
  pxrInternal__aapl__pxrReserved__ *v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  unsigned int (*v75)(uint64_t, uint64_t, uint64_t, void **);
  void *v76[2];
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v6 = (uint64_t *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  if (v5
    && (*(_BYTE *)(v5 + 57) & 8) == 0
    && ((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 32))(a1) & 1) != 0)
  {
    v10 = sub_20C551158();
    v62 = (_DWORD *)(a1 + 16);
    sub_20C35C4F8((uint64_t)&v70, v6, (_DWORD *)(a1 + 16));
    while (1)
    {
      v12 = atomic_load((unsigned __int8 *)(v10 + 56));
      if ((v12 & 1) != 0)
        break;
      sched_yield();
    }
    v19 = v71;
    if (!v71 || (*((_BYTE *)v71 + 57) & 8) != 0)
      pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(v71, v11);
    v20 = *((_QWORD *)v19 + 3);
    pxrInternal__aapl__pxrReserved__::TfType::TfType((pxrInternal__aapl__pxrReserved__::TfType *)v76);
    v23 = *(void **)(v20 + 40);
    v22 = (pxrInternal__aapl__pxrReserved__::TfType *)(v20 + 40);
    if (v23 != v76[0])
    {
      v75 = 0;
      if (sub_20C55156C(v10, v22, &v75))
      {
        v25 = v75;
        goto LABEL_84;
      }
      __p = 0;
      v64 = 0;
      v65 = 0;
      pxrInternal__aapl__pxrReserved__::TfType::GetAllAncestorTypes(v22, &__p, v24);
      v30 = atomic_load((unsigned __int8 *)&qword_254989448);
      if ((v30 & 1) == 0 && __cxa_guard_acquire(&qword_254989448))
      {
        __cxa_guard_release(&qword_254989448);
      }
      v31 = (char *)__p;
      v32 = v64;
      if (__p != v64)
      {
        while (pxrInternal__aapl__pxrReserved__::TfType::IsA(v31, qword_254989440, v29))
        {
          v31 += 8;
          if (v31 == (char *)v32)
          {
            v31 = (char *)v32;
            goto LABEL_49;
          }
        }
        if (v31 != (char *)v32)
        {
          for (i = v31 + 8; i != (char *)v32; i += 8)
          {
            if (pxrInternal__aapl__pxrReserved__::TfType::IsA(i, qword_254989440, v29))
            {
              *(_QWORD *)v31 = *(_QWORD *)i;
              v31 += 8;
            }
          }
        }
      }
LABEL_49:
      v35 = (uint64_t *)__p;
      if (v31 != (char *)v64)
        v64 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v31;
      while (1)
      {
        if (v35 == (uint64_t *)v31)
        {
LABEL_79:
          v76[0] = 0;
          *(_WORD *)((char *)&v77 + 9) = 0;
          tbb::queuing_rw_mutex::scoped_lock::acquire((unint64_t)v76, (unint64_t *)(v10 + 8), 1);
          v51 = (char *)__p;
          if (__p != v31)
          {
            v52 = v10 + 16;
            do
            {
              sub_20C5515F8(v52, v51, v51, (uint64_t *)&v75);
              v51 += 8;
            }
            while (v51 != v31);
          }
          v25 = v75;
          sub_20C101968((tbb::queuing_rw_mutex::scoped_lock *)v76);
          if (__p)
          {
            v64 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)__p;
            operator delete(__p);
          }
          goto LABEL_84;
        }
        v36 = sub_20C55156C(v10, v35, &v75);
        if (v36)
          goto LABEL_78;
        pxrInternal__aapl__pxrReserved__::PlugRegistry::GetInstance((pxrInternal__aapl__pxrReserved__::PlugRegistry *)v36);
        v37 = *v35;
        sub_20BDDC0E4(v76, "implementsComputeExtent");
        pxrInternal__aapl__pxrReserved__::PlugRegistry::GetDataFromPluginMetaData(v37, (const void **)v76, (pxrInternal__aapl__pxrReserved__::JsValue *)&v67);
        if (SBYTE7(v77) < 0)
          operator delete(v76[0]);
        if (pxrInternal__aapl__pxrReserved__::JsValue::IsBool((pxrInternal__aapl__pxrReserved__::JsValue *)&v67)
          && pxrInternal__aapl__pxrReserved__::JsValue::GetBool((pxrInternal__aapl__pxrReserved__::JsValue *)&v67))
        {
          pxrInternal__aapl__pxrReserved__::PlugRegistry::GetPluginForType(*v35, &v79);
          v38 = sub_20BF46110(&v79);
          if (v39 & 1 | (unint64_t)v38)
          {
            v40 = (pxrInternal__aapl__pxrReserved__::PlugPlugin *)sub_20BF444D8(&v79);
            v41 = pxrInternal__aapl__pxrReserved__::PlugPlugin::Load(v40);
          }
          else
          {
            v76[0] = "usdGeom/boundableComputeExtent.cpp";
            v76[1] = "_LoadPluginForType";
            *(_QWORD *)&v77 = 186;
            *((_QWORD *)&v77 + 1) = "BOOL pxrInternal__aapl__pxrReserved__::(anonymous namespace)::_FunctionRegistry::_Lo"
                                    "adPluginForType(const TfType &) const";
            LOBYTE(v78) = 0;
            TypeName = pxrInternal__aapl__pxrReserved__::TfType::GetTypeName((pxrInternal__aapl__pxrReserved__::TfType *)v35);
            if (*(char *)(TypeName + 23) >= 0)
              v46 = (const char *)TypeName;
            else
              v46 = *(const char **)TypeName;
            pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v76, 1, (pxrInternal__aapl__pxrReserved__ *)"Could not find plugin for '%s'", v46);
            v41 = 0;
          }
          v47 = v80;
          if (v80)
          {
            v48 = (unsigned int *)(v80 + 8);
            do
            {
              v49 = __ldxr(v48);
              v50 = v49 - 1;
            }
            while (__stlxr(v50, v48));
            if (!v50)
              (*(void (**)(uint64_t))(*(_QWORD *)v47 + 8))(v47);
          }
        }
        else
        {
          v41 = 0;
        }
        v42 = v68;
        if (!v68)
          goto LABEL_64;
        p_shared_owners = (unint64_t *)&v68->__shared_owners_;
        do
          v44 = __ldaxr(p_shared_owners);
        while (__stlxr(v44 - 1, p_shared_owners));
        if (!v44)
        {
          ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
          std::__shared_weak_count::__release_weak(v42);
          if (!v41)
            goto LABEL_66;
        }
        else
        {
LABEL_64:
          if (!v41)
            goto LABEL_66;
        }
        if (sub_20C55156C(v10, v35, &v75))
        {
LABEL_78:
          v31 = (char *)v35;
          goto LABEL_79;
        }
LABEL_66:
        ++v35;
      }
    }
    v76[0] = "usdGeom/boundableComputeExtent.cpp";
    v76[1] = "GetComputeFunction";
    *(_QWORD *)&v77 = 102;
    *((_QWORD *)&v77 + 1) = "UsdGeomComputeExtentFunction pxrInternal__aapl__pxrReserved__::(anonymous namespace)::_Funct"
                            "ionRegistry::GetComputeFunction(const UsdPrim &)";
    LOBYTE(v78) = 0;
    v26 = v71;
    if (!v71 || (*((_BYTE *)v71 + 57) & 8) != 0)
      pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(v71, v21);
    v27 = **((_QWORD **)v26 + 3) & 0xFFFFFFFFFFFFFFF8;
    if (v27)
    {
      v28 = (const char *)(v27 + 16);
      if (*(char *)(v27 + 39) < 0)
        v28 = *(const char **)v28;
    }
    else
    {
      v28 = "";
    }
    pxrInternal__aapl__pxrReserved__::UsdDescribe((uint64_t *)&__p, (pxrInternal__aapl__pxrReserved__ *)&v70, v21);
    if (v65 >= 0)
      p_p = (const char *)&__p;
    else
      p_p = (const char *)__p;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v76, 1, (pxrInternal__aapl__pxrReserved__ *)"Could not find prim type '%s' for prim %s", v28, p_p);
    if (SHIBYTE(v65) < 0)
      operator delete(__p);
    v25 = 0;
LABEL_84:
    if ((v73 & 7) != 0)
    {
      v53 = (unsigned int *)(v73 & 0xFFFFFFFFFFFFFFF8);
      do
        v54 = __ldxr(v53);
      while (__stlxr(v54 - 2, v53));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v72 + 1);
    sub_20BFD265C(&v72);
    if (v71)
      sub_20C35C614(v71);
    v78 = 0;
    *(_OWORD *)v76 = 0u;
    v77 = 0u;
    if (v25 && v25(a1, a2, a3, v76))
    {
      v55 = v76[0];
      if (v76[0] == (void *)2)
      {
        if (v76 != (void **)a4)
        {
          sub_20BF5618C(a4);
          v56 = v77;
          *(_OWORD *)a4 = *(_OWORD *)v76;
          *(_OWORD *)(a4 + 16) = v56;
          *(_OWORD *)v76 = 0u;
          v77 = 0u;
          *(_QWORD *)(a4 + 32) = v78;
          v78 = 0;
        }
        v17 = 1;
        goto LABEL_106;
      }
      v70 = "usdGeom/boundableComputeExtent.cpp";
      v71 = (pxrInternal__aapl__pxrReserved__ *)"_ComputeExtentFromPlugins";
      v72 = 262;
      v73 = (unint64_t)"BOOL pxrInternal__aapl__pxrReserved__::_ComputeExtentFromPlugins(const UsdGeomBoundable &,"
                              " const UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)";
      v74 = 0;
      sub_20C35C4F8((uint64_t)&__p, v6, v62);
      pxrInternal__aapl__pxrReserved__::UsdDescribe((uint64_t *)&v67, (pxrInternal__aapl__pxrReserved__ *)&__p, v57);
      if (v69 >= 0)
        v58 = (const char *)&v67;
      else
        v58 = (const char *)v67;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v70, 1, (pxrInternal__aapl__pxrReserved__ *)"Plugin compute extent function produced an extent with %zu elements instead of 2 for %s", (size_t)v55, v58);
      if (v69 < 0)
        operator delete(v67);
      if ((v66 & 7) != 0)
      {
        v59 = (unsigned int *)(v66 & 0xFFFFFFFFFFFFFFF8);
        do
          v60 = __ldxr(v59);
        while (__stlxr(v60 - 2, v59));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v65 + 1);
      sub_20BFD265C(&v65);
      if (v64)
        sub_20C35C614(v64);
    }
    v17 = 0;
LABEL_106:
    sub_20BF5618C((uint64_t)v76);
    return v17;
  }
  v76[0] = "usdGeom/boundableComputeExtent.cpp";
  v76[1] = "_ComputeExtentFromPlugins";
  *(_QWORD *)&v77 = 246;
  *((_QWORD *)&v77 + 1) = "BOOL pxrInternal__aapl__pxrReserved__::_ComputeExtentFromPlugins(const UsdGeomBoundable &, con"
                          "st UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)";
  LOBYTE(v78) = 0;
  sub_20C35C4F8((uint64_t)&v70, v6, (_DWORD *)(a1 + 16));
  pxrInternal__aapl__pxrReserved__::UsdDescribe((uint64_t *)&__p, (pxrInternal__aapl__pxrReserved__ *)&v70, v13);
  if (v65 >= 0)
    v14 = (const char *)&__p;
  else
    v14 = (const char *)__p;
  pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v76, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid UsdGeomBoundable %s", v14);
  if (SHIBYTE(v65) < 0)
    operator delete(__p);
  if ((v73 & 7) != 0)
  {
    v15 = (unsigned int *)(v73 & 0xFFFFFFFFFFFFFFF8);
    do
      v16 = __ldxr(v15);
    while (__stlxr(v16 - 2, v15));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v72 + 1);
  sub_20BFD265C(&v72);
  if (v71)
    sub_20C35C614(v71);
  return 0;
}

void sub_20C550E74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  __cxa_guard_abort(&qword_254989448);
  if (__p)
    operator delete(__p);
  sub_20C35C2E0((uint64_t)&a25);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::ComputeExtentFromPlugins(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20C550778(a1, a2, 0, a3);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomRegisterComputeExtentFunction(pxrInternal__aapl__pxrReserved__::TfType *a1, std::type_info *a2, char *a3)
{
  uint64_t *v5;
  char *v6;
  unint64_t v7;
  char v8;
  char v9;
  char *v10;
  const char *v11;
  uint64_t v12;
  const char *v13;
  char v14;

  if ((pxrInternal__aapl__pxrReserved__::TfType::IsA((char *)a1, *v5, v6) & 1) != 0)
  {
    if (a2->__vftable)
    {
      v7 = sub_20C551158();
      v10 = 0;
      *(_WORD *)((char *)&v13 + 1) = 0;
      tbb::queuing_rw_mutex::scoped_lock::acquire((unint64_t)&v10, (unint64_t *)(v7 + 8), 1);
      sub_20C5515F8(v7 + 16, a1, a1, (uint64_t *)a2);
      v9 = v8;
      sub_20C101968((tbb::queuing_rw_mutex::scoped_lock *)&v10);
      if ((v9 & 1) == 0)
      {
        v10 = "usdGeom/boundableComputeExtent.cpp";
        v11 = "RegisterComputeFunction";
        v12 = 88;
        v13 = "void pxrInternal__aapl__pxrReserved__::(anonymous namespace)::_FunctionRegistry::RegisterComputeFunction(c"
              "onst TfType &, const UsdGeomComputeExtentFunction &)";
        v14 = 0;
        pxrInternal__aapl__pxrReserved__::TfType::GetTypeName(a1);
        pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v10, 1, (pxrInternal__aapl__pxrReserved__ *)"UsdGeomComputeExtentFunction already registered for prim type '%s'");
      }
    }
    else
    {
      v10 = "usdGeom/boundableComputeExtent.cpp";
      v11 = "UsdGeomRegisterComputeExtentFunction";
      v12 = 302;
      v13 = "void pxrInternal__aapl__pxrReserved__::UsdGeomRegisterComputeExtentFunction(const TfType &, const UsdGeomCom"
            "puteExtentFunction &)";
      v14 = 0;
      pxrInternal__aapl__pxrReserved__::TfType::GetTypeName(a1);
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v10, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid function registered for prim type '%s'");
    }
  }
  else
  {
    v10 = "usdGeom/boundableComputeExtent.cpp";
    v11 = "UsdGeomRegisterComputeExtentFunction";
    v12 = 295;
    v13 = "void pxrInternal__aapl__pxrReserved__::UsdGeomRegisterComputeExtentFunction(const TfType &, const UsdGeomCompu"
          "teExtentFunction &)";
    v14 = 0;
    pxrInternal__aapl__pxrReserved__::TfType::GetTypeName(a1);
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v10, 1, (pxrInternal__aapl__pxrReserved__ *)"Prim type '%s' must derive from UsdGeomBoundable");
  }
}

void sub_20C551144(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C101968((tbb::queuing_rw_mutex::scoped_lock *)va);
  _Unwind_Resume(a1);
}

unint64_t sub_20C551158()
{
  unint64_t v0;
  std::string *v2;
  __int128 v3;
  unsigned __int8 v4;
  _OWORD *v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  pxrInternal__aapl__pxrReserved__::TfRegistryManager *Instance;
  pxrInternal__aapl__pxrReserved__::TfNotice *v13;
  char *v14;
  void *v15;
  unsigned int *v16;
  unsigned int v17;
  unsigned int v18;
  char *v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int v22;
  unint64_t v23;
  unint64_t v24;
  std::string v25;
  uint64_t v26;
  int v27;
  unint64_t v28;
  char *v29;
  char v30[8];
  void *__p[2];
  uint64_t v32;
  const char *v33;
  char v34;
  int v35;

  v0 = atomic_load(&qword_254989438);
  if (!v0)
  {
    pxrInternal__aapl__pxrReserved__::ArchGetDemangled((pxrInternal__aapl__pxrReserved__ *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_117_FunctionRegistryE" & 0x7FFFFFFFFFFFFFFFLL), (uint64_t)&v25);
    v2 = std::string::insert(&v25, 0, "Create Singleton ");
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    v32 = v2->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v3;
    v2->__r_.__value_.__l.__size_ = 0;
    v2->__r_.__value_.__r.__words[2] = 0;
    v2->__r_.__value_.__r.__words[0] = 0;
    sub_20BEB4C0C((uint64_t)&v26, "Tf", "TfSingleton::_CreateInstance", (char *)__p);
    if (SHIBYTE(v32) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v25.__r_.__value_.__l.__data_);
    do
      v4 = __ldaxr(byte_254989450);
    while (__stlxr(1u, byte_254989450));
    if ((v4 & 1) != 0)
    {
      while (!atomic_load(&qword_254989438))
        sched_yield();
    }
    else
    {
      if (!atomic_load(&qword_254989438))
      {
        v8 = operator new(0x40uLL);
        v10 = (unint64_t)v8;
        *(_QWORD *)v8 = 0;
        __dmb(0xBu);
        v8[1] = 0u;
        *((_QWORD *)v8 + 1) = 0;
        v8[2] = 0u;
        *((_DWORD *)v8 + 12) = 1065353216;
        *((_BYTE *)v8 + 56) = 0;
        do
          v11 = __ldaxr(&qword_254989438);
        while (__stlxr((unint64_t)v8, &qword_254989438));
        if (v11)
        {
          __p[0] = "tf/instantiateSingleton.h";
          __p[1] = "SetInstanceConstructed";
          v32 = 56;
          v33 = "static void pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::(anonymous n"
                "amespace)::_FunctionRegistry>::SetInstanceConstructed(T &) [T = pxrInternal__aapl__pxrReserved__::(anony"
                "mous namespace)::_FunctionRegistry]";
          v34 = 0;
          v35 = 4;
          pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper *)__p, (pxrInternal__aapl__pxrReserved__ *)"this function may not be called after GetInstance() or another SetInstanceConstructed() has completed", v9);
        }
        Instance = (pxrInternal__aapl__pxrReserved__::TfRegistryManager *)pxrInternal__aapl__pxrReserved__::TfRegistryManager::GetInstance((pxrInternal__aapl__pxrReserved__::TfRegistryManager *)v8);
        atomic_store(1u, (unsigned __int8 *)(v10 + 56));
        v28 = v10;
        sub_20BEB5AD8((unint64_t *)v10, __p);
        v29 = (char *)__p[0];
        v25.__r_.__value_.__r.__words[0] = (std::string::size_type)sub_20C551838;
        v25.__r_.__value_.__l.__size_ = 0;
        v13 = (pxrInternal__aapl__pxrReserved__::TfNotice *)operator new(0x68uLL);
        __p[0] = off_24C51AF48;
        pxrInternal__aapl__pxrReserved__::TfType::TfType((pxrInternal__aapl__pxrReserved__::TfType *)v30);
        sub_20C5518BC((uint64_t)v13, &v28, &v25, (uint64_t)__p);
        (*(void (**)(pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr::_EmptyHolder *__hidden))__p[0])((pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr::_EmptyHolder *)__p);
        pxrInternal__aapl__pxrReserved__::TfNotice::_Register(v13, (char **)__p);
        v15 = __p[1];
        if (__p[1])
        {
          v16 = (unsigned int *)((char *)__p[1] + 8);
          do
          {
            v17 = __ldxr(v16);
            v18 = v17 - 1;
          }
          while (__stlxr(v18, v16));
          if (!v18)
            (*(void (**)(void *))(*(_QWORD *)v15 + 8))(v15);
        }
        v19 = v29;
        if (v29)
        {
          v20 = (unsigned int *)(v29 + 8);
          do
          {
            v21 = __ldxr(v20);
            v22 = v21 - 1;
          }
          while (__stlxr(v22, v20));
          if (!v22)
            (*(void (**)(char *))(*(_QWORD *)v19 + 8))(v19);
        }
        v23 = atomic_load(&qword_254989438);
        if (v23)
        {
          if (v10 != v23)
          {
            __p[0] = "tf/instantiateSingleton.h";
            __p[1] = "_CreateInstance";
            v32 = 84;
            v33 = "static T *pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::(anonymous n"
                  "amespace)::_FunctionRegistry>::_CreateInstance(std::atomic<T *> &) [T = pxrInternal__aapl__pxrReserved"
                  "__::(anonymous namespace)::_FunctionRegistry]";
            v34 = 0;
            v35 = 4;
            pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper *)__p, (pxrInternal__aapl__pxrReserved__ *)"race detected setting singleton instance", v14);
          }
        }
        else
        {
          do
            v24 = __ldaxr(&qword_254989438);
          while (__stlxr(v10, &qword_254989438));
          if (v24)
          {
            __p[0] = "tf/instantiateSingleton.h";
            __p[1] = "_CreateInstance";
            v32 = 88;
            v33 = "static T *pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::(anonymous n"
                  "amespace)::_FunctionRegistry>::_CreateInstance(std::atomic<T *> &) [T = pxrInternal__aapl__pxrReserved"
                  "__::(anonymous namespace)::_FunctionRegistry]";
            v34 = 0;
            v35 = 4;
            pxrInternal__aapl__pxrReserved__::Tf_DiagnosticLiteHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticLiteHelper *)__p, (pxrInternal__aapl__pxrReserved__ *)"Failed axiom: ' %s '", v14, "instance.exchange(newInst) == nullptr");
          }
        }
      }
      atomic_store(0, byte_254989450);
    }
    v0 = atomic_load(&qword_254989438);
    while (v27--)
      pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v26);
  }
  return v0;
}

void sub_20C55148C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, int a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  while (a18--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(a17);
  _Unwind_Resume(exception_object);
}

BOOL sub_20C55156C(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v6;
  _BOOL8 v7;
  _QWORD v9[3];
  __int16 v10;

  v9[0] = 0;
  v10 = 0;
  tbb::queuing_rw_mutex::scoped_lock::acquire((unint64_t)v9, (unint64_t *)(a1 + 8), 0);
  v6 = sub_20BEDA270((_QWORD *)(a1 + 16), a2);
  if (v6)
    *a3 = v6[3];
  v7 = v6 != 0;
  sub_20C101968((tbb::queuing_rw_mutex::scoped_lock *)v9);
  return v7;
}

void sub_20C5515E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C101968((tbb::queuing_rw_mutex::scoped_lock *)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C5515F8(uint64_t a1, _QWORD *a2, _QWORD *a3, uint64_t *a4)
{
  unint64_t v4;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  _QWORD **v11;
  _QWORD *i;
  unint64_t v13;
  uint64_t v14;
  float v15;
  float v16;
  _BOOL8 v17;
  unint64_t v18;
  unint64_t v19;
  size_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;

  v8 = bswap64(0x9E3779B97F4A7C55 * *a2);
  v9 = *(_QWORD *)(a1 + 8);
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      v4 = v8;
      if (v8 >= v9)
        v4 = v8 % v9;
    }
    else
    {
      v4 = v8 & (v9 - 1);
    }
    v11 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v4);
    if (v11)
    {
      for (i = *v11; i; i = (_QWORD *)*i)
      {
        v13 = i[1];
        if (v13 == v8)
        {
          if (i[2] == *a2)
            return i;
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9)
              v13 %= v9;
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v4)
            break;
        }
      }
    }
  }
  i = operator new(0x20uLL);
  *i = 0;
  i[1] = v8;
  v14 = *a4;
  i[2] = *a3;
  i[3] = v14;
  v15 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v16 = *(float *)(a1 + 32);
  if (!v9 || (float)(v16 * (float)v9) < v15)
  {
    v17 = 1;
    if (v9 >= 3)
      v17 = (v9 & (v9 - 1)) != 0;
    v18 = v17 | (2 * v9);
    v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19)
      v20 = v19;
    else
      v20 = v18;
    sub_20BDEC6E0(a1, v20);
    v9 = *(_QWORD *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9)
        v4 = v8 % v9;
      else
        v4 = v8;
    }
    else
    {
      v4 = (v9 - 1) & v8;
    }
  }
  v21 = *(_QWORD *)a1;
  v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v22)
  {
    *i = *v22;
LABEL_38:
    *v22 = i;
    goto LABEL_39;
  }
  *i = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = i;
  *(_QWORD *)(v21 + 8 * v4) = a1 + 16;
  if (*i)
  {
    v23 = *(_QWORD *)(*i + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v23 >= v9)
        v23 %= v9;
    }
    else
    {
      v23 &= v9 - 1;
    }
    v22 = (_QWORD *)(*(_QWORD *)a1 + 8 * v23);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_20C551824(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

tbb::queuing_rw_mutex::scoped_lock *sub_20C551838(uint64_t a1)
{
  uint64_t *v2;
  _QWORD *v3;
  _QWORD v5[3];
  __int16 v6;

  v5[0] = 0;
  v6 = 0;
  tbb::queuing_rw_mutex::scoped_lock::acquire((unint64_t)v5, (unint64_t *)(a1 + 8), 1);
  v2 = *(uint64_t **)(a1 + 32);
  if (v2)
  {
    v3 = (_QWORD *)(a1 + 16);
    do
    {
      if (v2[3])
        v2 = (uint64_t *)*v2;
      else
        v2 = (uint64_t *)sub_20BED9B98(v3, v2);
    }
    while (v2);
  }
  return sub_20C101968((tbb::queuing_rw_mutex::scoped_lock *)v5);
}

void sub_20C5518A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C101968((tbb::queuing_rw_mutex::scoped_lock *)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C5518BC(uint64_t a1, _QWORD *a2, _OWORD *a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;

  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_WORD *)(a1 + 32) = 1;
  *(_QWORD *)a1 = off_24C53C3E8;
  *(_QWORD *)(a1 + 8) = 0;
  v6 = a2[1];
  *(_QWORD *)(a1 + 40) = *a2;
  *(_QWORD *)(a1 + 48) = v6;
  if (v6)
  {
    v7 = (unsigned int *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a4 + 16))(a4, a1 + 56);
  *(_OWORD *)(a1 + 88) = *a3;
  return a1;
}

void sub_20C551934(_Unwind_Exception *a1, const void *a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(_QWORD *)(v2 + 48);
  if (v4)
    sub_20C96B36C(v4);
  pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase::~_DelivererBase((unsigned int **)v2, a2);
  _Unwind_Resume(a1);
}

void sub_20C551954(uint64_t a1)
{
  const void *v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;

  *(_QWORD *)a1 = off_24C53C3E8;
  (**(void (***)(uint64_t))(a1 + 56))(a1 + 56);
  v3 = *(unsigned int **)(a1 + 48);
  if (v3)
  {
    v4 = v3 + 2;
    do
    {
      v5 = __ldxr(v4);
      v6 = v5 - 1;
    }
    while (__stlxr(v6, v4));
    if (!v6)
      (*(void (**)(unsigned int *))(*(_QWORD *)v3 + 8))(v3);
  }
  pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase::~_DelivererBase((unsigned int **)a1, v2);
}

void sub_20C5519B8(uint64_t a1)
{
  const void *v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  void *v7;

  *(_QWORD *)a1 = off_24C53C3E8;
  (**(void (***)(uint64_t))(a1 + 56))(a1 + 56);
  v3 = *(unsigned int **)(a1 + 48);
  if (v3)
  {
    v4 = v3 + 2;
    do
    {
      v5 = __ldxr(v4);
      v6 = v5 - 1;
    }
    while (__stlxr(v6, v4));
    if (!v6)
      (*(void (**)(unsigned int *))(*(_QWORD *)v3 + 8))(v3);
  }
  pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase::~_DelivererBase((unsigned int **)a1, v2);
  operator delete(v7);
}

uint64_t sub_20C551A20(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  void (*v18)(_QWORD *, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v9 = a1[6];
  v8 = a1 + 6;
  if (!v9)
    return 0;
  v13 = v8 - 1;
  v14 = sub_20BEB47BC(v8);
  v15 = *v13;
  v16 = !*(_BYTE *)(v14 + 14) || v15 == 0;
  if (v16
    || (pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr::IsInvalid((pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr *)(a1 + 7)) & 1) != 0)
  {
    return 0;
  }
  if (*a7 != a7[1])
  {
    v25 = v15;
    v21 = (*(uint64_t (**)(uint64_t *))(*a1 + 40))(a1);
    v22 = sub_20C551DB4(v13);
    if (v21)
      v23 = a6;
    else
      v23 = MEMORY[0x24BEDB7C8];
    v24 = v21;
    v15 = v25;
    pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase::_BeginDelivery((uint64_t)a1, a2, v24, v23, v22, (uint64_t)&unk_24C53C3C0, a7);
  }
  v18 = (void (*)(_QWORD *, uint64_t))a1[11];
  v19 = a1[12];
  v20 = (_QWORD *)(v15 + (v19 >> 1));
  if ((v19 & 1) != 0)
    v18 = *(void (**)(_QWORD *, uint64_t))(*v20 + v18);
  v18(v20, a2);
  if (*a7 != a7[1])
    pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase::_EndDelivery((uint64_t)a1, a7);
  return 1;
}

uint64_t sub_20C551B38(uint64_t a1, const std::type_info *a2, char *a3)
{
  uint64_t v3;
  std::string *v4;
  __int128 v5;
  std::string *v6;
  __int128 v7;
  std::string v9;
  std::string v10;
  void *__p[2];
  std::string::size_type v12;
  _QWORD v13[4];
  char v14;
  int v15;

  pxrInternal__aapl__pxrReserved__::TfType::TfType((pxrInternal__aapl__pxrReserved__::TfType *)v13);
  if (v13[0] == v3)
  {
    v13[0] = "tf/notice.h";
    v13[1] = "GetNoticeType";
    v13[2] = 563;
    v13[3] = "virtual TfType pxrInternal__aapl__pxrReserved__::TfNotice::_StandardDeliverer<pxrInternal__aapl__pxrReserve"
             "d__::TfNotice::_Deliverer<pxrInternal__aapl__pxrReserved__::TfWeakPtr<pxrInternal__aapl__pxrReserved__::(an"
             "onymous namespace)::_FunctionRegistry>, pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr, void (pxrInternal__"
             "aapl__pxrReserved__::(anonymous namespace)::_FunctionRegistry::*)(const pxrInternal__aapl__pxrReserved__::P"
             "lugNotice::DidRegisterPlugins &), pxrInternal__aapl__pxrReserved__::PlugNotice::DidRegisterPlugins>>::GetNo"
             "ticeType() const [Derived = pxrInternal__aapl__pxrReserved__::TfNotice::_Deliverer<pxrInternal__aapl__pxrRe"
             "served__::TfWeakPtr<pxrInternal__aapl__pxrReserved__::(anonymous namespace)::_FunctionRegistry>, pxrInterna"
             "l__aapl__pxrReserved__::TfAnyWeakPtr, void (pxrInternal__aapl__pxrReserved__::(anonymous namespace)::_Funct"
             "ionRegistry::*)(const pxrInternal__aapl__pxrReserved__::PlugNotice::DidRegisterPlugins &), pxrInternal__aap"
             "l__pxrReserved__::PlugNotice::DidRegisterPlugins>]";
    v14 = 0;
    v15 = 4;
    pxrInternal__aapl__pxrReserved__::ArchGetDemangled((pxrInternal__aapl__pxrReserved__ *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__10PlugNotice18DidRegisterPluginsE" & 0x7FFFFFFFFFFFFFFFLL), (uint64_t)&v9);
    v4 = std::string::insert(&v9, 0, "notice type ");
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v10.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v10.__r_.__value_.__l.__data_ = v5;
    v4->__r_.__value_.__l.__size_ = 0;
    v4->__r_.__value_.__r.__words[2] = 0;
    v4->__r_.__value_.__r.__words[0] = 0;
    v6 = std::string::append(&v10, " undefined in the TfType system");
    v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v12 = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((uint64_t)v13, (uint64_t)__p);
    if (SHIBYTE(v12) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v10.__r_.__value_.__l.__data_);
    if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v9.__r_.__value_.__l.__data_);
  }
  return v3;
}

void sub_20C551C54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0)
    operator delete(__p);
  if (a21 < 0)
    operator delete(a16);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C551CA0(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  uint64_t result;
  pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr *v9;
  char IsInvalid;

  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1);
  result = pxrInternal__aapl__pxrReserved__::TfType::IsA(a2, v6, v7);
  if ((_DWORD)result)
  {
    v9 = (pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr *)(a1 + 56);
    IsInvalid = pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr::IsInvalid(v9);
    result = 0;
    if (a3)
    {
      if ((IsInvalid & 1) == 0)
        return pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr::GetWeakBase(v9) == a3;
    }
  }
  return result;
}

uint64_t sub_20C551D14(uint64_t a1)
{
  pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr *v1;

  v1 = (pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr *)(a1 + 56);
  if (pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr::operator BOOL(a1 + 56))
    return pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr::GetWeakBase(v1);
  else
    return 0;
}

void *sub_20C551D50(uint64_t a1)
{
  void *v2;

  v2 = operator new(0x68uLL);
  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1);
  sub_20C5518BC((uint64_t)v2, (_QWORD *)(a1 + 40), (_OWORD *)(a1 + 88), a1 + 56);
  return v2;
}

void sub_20C551DA0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C551DB4(uint64_t *a1)
{
  uint64_t *v2;
  uint64_t v3;
  int v4;
  uint64_t result;
  BOOL v6;
  char *v7;
  _QWORD v8[4];
  char v9;

  v3 = a1[1];
  v2 = a1 + 1;
  if (!v3
    || ((v4 = *(unsigned __int8 *)(sub_20BEB47BC(v2) + 14), result = *a1, v4) ? (v6 = result == 0) : (v6 = 1), v6))
  {
    v7 = j__strrchr("/Library/Caches/com.apple.xbs/Sources/USDLib/USD/pxr/base/tf/weakPtrFacade.h", 47);
    v8[0] = sub_20BEB23F8((unint64_t)"/Library/Caches/com.apple.xbs/Sources/USDLib/USD/pxr/base/tf/weakPtrFacade.h", (uint64_t)v7, 0x2Fu);
    v8[1] = "operator->";
    v8[2] = 216;
    v8[3] = "DataType *pxrInternal__aapl__pxrReserved__::TfWeakPtrFacade<pxrInternal__aapl__pxrReserved__::TfWeakPtr, pxr"
            "Internal__aapl__pxrReserved__::(anonymous namespace)::_FunctionRegistry>::operator->() const [PtrTemplate = "
            "pxrInternal__aapl__pxrReserved__::TfWeakPtr, Type = pxrInternal__aapl__pxrReserved__::(anonymous namespace):"
            ":_FunctionRegistry]";
    v9 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostNullSmartPtrDereferenceFatalError((uint64_t)v8, (pxrInternal__aapl__pxrReserved__ *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__9TfWeakPtrINS_12_GLOBAL__N_117_FunctionRegistryEEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
  return result;
}

void sub_20C551E50()
{
  void *__p[2];
  char v1;

  sub_20C555694();
  sub_20BDDC0E4(__p, "Camera");
  sub_20C5557B4((char *)__p);
  if (v1 < 0)
    operator delete(__p[0]);
}

void sub_20C551E9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::~UsdGeomCamera(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::UsdGeomXformable::~UsdGeomXformable(this);
  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t (*v6)(uint64_t *);
  char v7;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;

  v6 = sub_20C369024(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v13);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C460;
    if ((v16 & 7) != 0)
    {
      v9 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
  }
  else
  {
    v13 = "usdGeom/camera.cpp";
    v14 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Get";
    v15 = 57;
    v16 = (unint64_t)"static UsdGeomCamera pxrInternal__aapl__pxrReserved__::UsdGeomCamera::Get(const UsdStagePtr "
                            "&, const SdfPath &)";
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v13, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v13) = 1;
    v14 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v15);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v15 + 1);
    v16 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C460;
    if ((v16 & 7) != 0)
    {
      v11 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stlxr(v12 - 2, v11));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v15 + 1);
  sub_20BFD265C(&v15);
  if (v14)
    sub_20C35C614(v14);
}

void sub_20C552040(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::Define(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  unsigned __int8 v6;
  uint64_t (*v7)(uint64_t *);
  char v8;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int v13;
  char *v14;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;

  v6 = atomic_load((unsigned __int8 *)&qword_254989460);
  if ((v6 & 1) == 0 && __cxa_guard_acquire(&qword_254989460))
  {
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&qword_254989458, "Camera");
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &qword_254989458, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989460);
  }
  v7 = sub_20C369024(a1);
  if (v8 & 1 | (unint64_t)v7)
  {
    v9 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::DefinePrim(v9, a2, &qword_254989458, (uint64_t)&v14);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v14);
    *(_QWORD *)a3 = off_24C53C460;
    if ((v17 & 7) != 0)
    {
      v10 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v11 = __ldxr(v10);
      while (__stlxr(v11 - 2, v10));
    }
  }
  else
  {
    v14 = "usdGeom/camera.cpp";
    v15 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Define";
    v16 = 70;
    v17 = (unint64_t)"static UsdGeomCamera pxrInternal__aapl__pxrReserved__::UsdGeomCamera::Define(const UsdStageP"
                            "tr &, const SdfPath &)";
    v18 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v14, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v14) = 1;
    v15 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v16);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v16 + 1);
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v14);
    *(_QWORD *)a3 = off_24C53C460;
    if ((v17 & 7) != 0)
    {
      v12 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v13 = __ldxr(v12);
      while (__stlxr(v13 - 2, v12));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v16 + 1);
  sub_20BFD265C(&v16);
  if (v15)
    sub_20C35C614(v15);
}

void sub_20C552230(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989460);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCamera::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this)
{
  return 3;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCamera::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this)
{
  unsigned __int8 v1;
  const std::type_info *v3;
  char *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_254989470);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_254989470))
  {
    __cxa_guard_release(&qword_254989470);
  }
  return &qword_254989468;
}

void sub_20C5522D4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989470);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCamera::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::UsdGeomCamera *v3;
  const std::type_info *v4;
  char *v5;

  v1 = atomic_load((unsigned __int8 *)&qword_254989480);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomCamera *)__cxa_guard_acquire(&qword_254989480);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomCamera::_GetStaticTfType(v3);
      byte_254989478 = sub_20C35BD7C((char *)&qword_254989468, v4, v5);
      __cxa_guard_release(&qword_254989480);
    }
  }
  return byte_254989478;
}

void sub_20C552350(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989480);
  _Unwind_Resume(a1);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCamera::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomCamera::_GetStaticTfType(this);
  return &qword_254989468;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetProjectionAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 864), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C552428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::CreateProjectionAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 864), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetHorizontalApertureAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 432), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C552580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::CreateHorizontalApertureAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 432), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 56), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetVerticalApertureAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1232), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C5526D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::CreateVerticalApertureAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1232), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 56), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetHorizontalApertureOffsetAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 440), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C552830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::CreateHorizontalApertureOffsetAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 440), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 56), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetVerticalApertureOffsetAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1240), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C552988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::CreateVerticalApertureOffsetAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1240), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 56), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetFocalLengthAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 360), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C552AE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::CreateFocalLengthAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 360), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 56), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetClippingRangeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 120), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C552C38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::CreateClippingRangeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 120), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 152), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetClippingPlanesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 112), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C552D90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::CreateClippingPlanesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 112), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 624), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetFStopAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 384), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C552EE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::CreateFStopAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 384), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 56), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetFocusDistanceAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 368), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C553040(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::CreateFocusDistanceAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 368), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 56), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetStereoRoleAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1024), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C553198(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::CreateStereoRoleAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1024), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetShutterOpenAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1000), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C5532F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::CreateShutterOpenAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1000), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetShutterCloseAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 992), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C553448(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::CreateShutterCloseAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 992), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetExposureAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 288), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C5535A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::CreateExposureAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 288), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 56), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this)
{
  int v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v17;
  uint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v21;
  uint64_t v22;
  unsigned int *v23;
  unsigned int v24;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v25;
  uint64_t v26;
  unsigned int *v27;
  unsigned int v28;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v29;
  uint64_t v30;
  unsigned int *v31;
  unsigned int v32;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v33;
  uint64_t v34;
  unsigned int *v35;
  unsigned int v36;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v37;
  uint64_t v38;
  unsigned int *v39;
  unsigned int v40;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v41;
  uint64_t v42;
  unsigned int *v43;
  unsigned int v44;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v45;
  uint64_t v46;
  unsigned int *v47;
  unsigned int v48;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v49;
  uint64_t v50;
  unsigned int *v51;
  unsigned int v52;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v53;
  uint64_t v54;
  unsigned int *v55;
  unsigned int v56;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v57;
  uint64_t v58;
  unsigned int *v59;
  unsigned int v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int *v64;
  unsigned int v65;
  uint64_t *SchemaAttributeNames;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v1 = (int)this;
  v81 = *MEMORY[0x24BDAC8D0];
  v2 = atomic_load((unsigned __int8 *)&qword_2549894A0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2549894A0))
  {
    v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5)
      v5 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v6 = *((_QWORD *)v5 + 108);
    v67 = v6;
    if ((v6 & 7) != 0)
    {
      v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 2, v7));
      if ((v8 & 1) == 0)
        v67 &= 0xFFFFFFFFFFFFFFF8;
    }
    v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9)
      v9 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v10 = *((_QWORD *)v9 + 54);
    v68 = v10;
    if ((v10 & 7) != 0)
    {
      v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 2, v11));
      if ((v12 & 1) == 0)
        v68 &= 0xFFFFFFFFFFFFFFF8;
    }
    v13 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v13)
      v13 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v14 = *((_QWORD *)v13 + 154);
    v69 = v14;
    if ((v14 & 7) != 0)
    {
      v15 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 2, v15));
      if ((v16 & 1) == 0)
        v69 &= 0xFFFFFFFFFFFFFFF8;
    }
    v17 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v17)
      v17 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v18 = *((_QWORD *)v17 + 55);
    v70 = v18;
    if ((v18 & 7) != 0)
    {
      v19 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 2, v19));
      if ((v20 & 1) == 0)
        v70 &= 0xFFFFFFFFFFFFFFF8;
    }
    v21 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v21)
      v21 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v22 = *((_QWORD *)v21 + 155);
    v71 = v22;
    if ((v22 & 7) != 0)
    {
      v23 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
      do
        v24 = __ldxr(v23);
      while (__stxr(v24 + 2, v23));
      if ((v24 & 1) == 0)
        v71 &= 0xFFFFFFFFFFFFFFF8;
    }
    v25 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v25)
      v25 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v26 = *((_QWORD *)v25 + 45);
    v72 = v26;
    if ((v26 & 7) != 0)
    {
      v27 = (unsigned int *)(v26 & 0xFFFFFFFFFFFFFFF8);
      do
        v28 = __ldxr(v27);
      while (__stxr(v28 + 2, v27));
      if ((v28 & 1) == 0)
        v72 &= 0xFFFFFFFFFFFFFFF8;
    }
    v29 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v29)
      v29 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v30 = *((_QWORD *)v29 + 15);
    v73 = v30;
    if ((v30 & 7) != 0)
    {
      v31 = (unsigned int *)(v30 & 0xFFFFFFFFFFFFFFF8);
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 2, v31));
      if ((v32 & 1) == 0)
        v73 &= 0xFFFFFFFFFFFFFFF8;
    }
    v33 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v33)
      v33 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v34 = *((_QWORD *)v33 + 14);
    v74 = v34;
    if ((v34 & 7) != 0)
    {
      v35 = (unsigned int *)(v34 & 0xFFFFFFFFFFFFFFF8);
      do
        v36 = __ldxr(v35);
      while (__stxr(v36 + 2, v35));
      if ((v36 & 1) == 0)
        v74 &= 0xFFFFFFFFFFFFFFF8;
    }
    v37 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v37)
      v37 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v38 = *((_QWORD *)v37 + 48);
    v75 = v38;
    if ((v38 & 7) != 0)
    {
      v39 = (unsigned int *)(v38 & 0xFFFFFFFFFFFFFFF8);
      do
        v40 = __ldxr(v39);
      while (__stxr(v40 + 2, v39));
      if ((v40 & 1) == 0)
        v75 &= 0xFFFFFFFFFFFFFFF8;
    }
    v41 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v41)
      v41 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v42 = *((_QWORD *)v41 + 46);
    v76 = v42;
    if ((v42 & 7) != 0)
    {
      v43 = (unsigned int *)(v42 & 0xFFFFFFFFFFFFFFF8);
      do
        v44 = __ldxr(v43);
      while (__stxr(v44 + 2, v43));
      if ((v44 & 1) == 0)
        v76 &= 0xFFFFFFFFFFFFFFF8;
    }
    v45 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v45)
      v45 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v46 = *((_QWORD *)v45 + 128);
    v77 = v46;
    if ((v46 & 7) != 0)
    {
      v47 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
      do
        v48 = __ldxr(v47);
      while (__stxr(v48 + 2, v47));
      if ((v48 & 1) == 0)
        v77 &= 0xFFFFFFFFFFFFFFF8;
    }
    v49 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v49)
      v49 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v50 = *((_QWORD *)v49 + 125);
    v78 = v50;
    if ((v50 & 7) != 0)
    {
      v51 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
      do
        v52 = __ldxr(v51);
      while (__stxr(v52 + 2, v51));
      if ((v52 & 1) == 0)
        v78 &= 0xFFFFFFFFFFFFFFF8;
    }
    v53 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v53)
      v53 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v54 = *((_QWORD *)v53 + 124);
    v79 = v54;
    if ((v54 & 7) != 0)
    {
      v55 = (unsigned int *)(v54 & 0xFFFFFFFFFFFFFFF8);
      do
        v56 = __ldxr(v55);
      while (__stxr(v56 + 2, v55));
      if ((v56 & 1) == 0)
        v79 &= 0xFFFFFFFFFFFFFFF8;
    }
    v57 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v57)
      v57 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v58 = *((_QWORD *)v57 + 36);
    v80 = v58;
    if ((v58 & 7) != 0)
    {
      v59 = (unsigned int *)(v58 & 0xFFFFFFFFFFFFFFF8);
      do
        v60 = __ldxr(v59);
      while (__stxr(v60 + 2, v59));
      if ((v60 & 1) == 0)
        v80 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_20C374970(&qword_254989488, &v67, 0xEuLL);
    v61 = &v81;
    do
    {
      v63 = *--v61;
      v62 = v63;
      if ((v63 & 7) != 0)
      {
        v64 = (unsigned int *)(v62 & 0xFFFFFFFFFFFFFFF8);
        do
          v65 = __ldxr(v64);
        while (__stlxr(v65 - 2, v64));
      }
    }
    while (v61 != &v67);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_254989488, &dword_20BDBC000);
    __cxa_guard_release(&qword_2549894A0);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_2549894C0);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2549894C0))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomXformable::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomXformable *)1);
    sub_20C553CD4((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_2549894A8, &dword_20BDBC000);
    __cxa_guard_release(&qword_2549894C0);
  }
  if (v1)
    return &qword_2549894A8;
  else
    return &qword_254989488;
}

void sub_20C553C44(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2549894A0);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C553CD4(uint64_t **a1)
{
  qword_2549894B0 = 0;
  unk_2549894B8 = 0;
  qword_2549894A8 = 0;
  sub_20BFC9A6C((char **)&qword_2549894A8, ((*(_QWORD *)algn_254989490 - qword_254989488) >> 3) + a1[1] - *a1);
  sub_20C1292A0(&qword_2549894A8, (_QWORD *)qword_2549894B0, *a1, a1[1], a1[1] - *a1);
  return sub_20C1292A0(&qword_2549894A8, (_QWORD *)qword_2549894B0, (uint64_t *)qword_254989488, *(uint64_t **)algn_254989490, (*(_QWORD *)algn_254989490 - qword_254989488) >> 3);
}

void sub_20C553D68(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetCamera(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v6;
  _DWORD *v7;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  _QWORD *v9;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v10;
  char v11;
  uint64_t v12;
  int v13;
  unint64_t v14;
  const char *v15;
  unint64_t v16;
  const char *v17;
  const char *v18;
  char *v19;
  const char *Text;
  char *v21;
  unsigned int *v22;
  unsigned int v23;
  unsigned int *v24;
  unsigned int v25;
  unsigned int *v26;
  unsigned int v27;
  char *v28;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v29;
  unint64_t v30;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v31;
  const char *v32;
  int v33;
  unsigned int v34;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v35;
  uint64_t v36;
  unsigned int *v37;
  unsigned int v38;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v39;
  uint64_t v40;
  unsigned int *v41;
  unsigned int v42;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v43;
  uint64_t v44;
  unsigned int *v45;
  unsigned int v46;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v47;
  uint64_t v48;
  unsigned int *v49;
  unsigned int v50;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v51;
  uint64_t v52;
  unsigned int *v53;
  unsigned int v54;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v55;
  _QWORD *v56;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v57;
  char v58;
  unsigned __int8 v59;
  unint64_t v60;
  int v61;
  unint64_t v62;
  const char *v63;
  unint64_t v64;
  const char *v65;
  const char *v66;
  char *v67;
  int *v68;
  const char *v69;
  char *v70;
  unsigned int *v71;
  unsigned int v72;
  unsigned int *v73;
  unsigned int v74;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v75;
  _QWORD *v76;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v77;
  char v78;
  char v79;
  unint64_t v80;
  const char *v81;
  unint64_t v82;
  const char *v83;
  const char *v84;
  char *v85;
  const char *v86;
  char *v87;
  unsigned int *v88;
  unsigned int v89;
  unsigned int *v90;
  unsigned int v91;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v92;
  uint64_t v93;
  unsigned int *v94;
  unsigned int v95;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v96;
  uint64_t v97;
  unsigned int *v98;
  unsigned int v99;
  int v100;
  int v101;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v102;
  int v103;
  int v104;
  uint64_t v105;
  __int128 v106;
  __int128 v107;
  const void *v108;
  char v109;
  int v110;
  int v111;
  uint64_t v112;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  __int128 v117;
  __int128 v118;
  const void *v119;
  uint64_t v120;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v121;
  int v122;
  int v123;
  uint64_t v124;

  pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)&v106, 1.0);
  v112 = 0x497424003F800000;
  v117 = 0uLL;
  *(_QWORD *)&v118 = 0;
  pxrInternal__aapl__pxrReserved__::GfCamera::GfCamera(a3, &v106, 0, &v112, (uint64_t)&v117, 20.955, 15.2908, 0.0, 0.0, 50.0, 0.0, 0.0);
  if ((_QWORD)v117)
  {
    *((_QWORD *)&v117 + 1) = v117;
    operator delete((void *)v117);
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeLocalToWorldTransform(this, a2, (uint64_t)&v106);
  pxrInternal__aapl__pxrReserved__::GfCamera::SetTransform(a3, &v106);
  v6 = (uint64_t *)((char *)this + 8);
  v7 = (_DWORD *)((char *)this + 16);
  sub_20C35C4F8((uint64_t)&v112, v6, v7);
  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (_QWORD *)((char *)v8 + 864);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v112, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 864), (uint64_t)&v117);
  if ((pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v117, v10) & 1) != 0)
  {
    v120 = 0;
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::TfToken>((uint64_t)&v117, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v120);
    if ((v11 & 1) != 0)
    {
      v12 = v120;
      v13 = 1;
      goto LABEL_21;
    }
    *(_QWORD *)&v106 = "usdGeom/camera.cpp";
    *((_QWORD *)&v106 + 1) = "_GetValue";
    *(_QWORD *)&v107 = 417;
    *((_QWORD *)&v107 + 1) = "std::optional<T> pxrInternal__aapl__pxrReserved__::_GetValue(const UsdPrim &, const TfToken"
                             " &, const UsdTimeCode &) [T = pxrInternal__aapl__pxrReserved__::TfToken]";
    LOBYTE(v108) = 0;
    v16 = *v9 & 0xFFFFFFFFFFFFFFF8;
    if (v16)
    {
      v17 = (const char *)(v16 + 16);
      if (*(char *)(v16 + 39) < 0)
        v17 = *(const char **)v17;
    }
    else
    {
      v17 = "";
    }
    sub_20C348EEC((uint64_t)&v117, &v100);
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v100);
    pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v106, (pxrInternal__aapl__pxrReserved__ *)"Failed to extract value from attribute %s at <%s>.", v21, v17, Text);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v101);
    sub_20BFD265C(&v100);
    if ((v120 & 7) != 0)
    {
      v22 = (unsigned int *)(v120 & 0xFFFFFFFFFFFFFFF8);
      do
        v23 = __ldxr(v22);
      while (__stlxr(v23 - 2, v22));
    }
  }
  else
  {
    *(_QWORD *)&v106 = "usdGeom/camera.cpp";
    *((_QWORD *)&v106 + 1) = "_GetValue";
    *(_QWORD *)&v107 = 410;
    *((_QWORD *)&v107 + 1) = "std::optional<T> pxrInternal__aapl__pxrReserved__::_GetValue(const UsdPrim &, const TfToken"
                             " &, const UsdTimeCode &) [T = pxrInternal__aapl__pxrReserved__::TfToken]";
    LOBYTE(v108) = 0;
    v14 = *v9 & 0xFFFFFFFFFFFFFFF8;
    if (v14)
    {
      v15 = (const char *)(v14 + 16);
      if (*(char *)(v14 + 39) < 0)
        v15 = *(const char **)v15;
    }
    else
    {
      v15 = "";
    }
    sub_20C348EEC((uint64_t)&v112, (int *)&v120);
    v18 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v120);
    pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v106, (pxrInternal__aapl__pxrReserved__ *)"%s attribute on prim %s missing.", v19, v15, v18);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v120 + 1);
    sub_20BFD265C(&v120);
  }
  v12 = 0;
  v13 = 0;
LABEL_21:
  if ((BYTE8(v118) & 7) != 0)
  {
    v24 = (unsigned int *)(*((_QWORD *)&v118 + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v25 = __ldxr(v24);
    while (__stlxr(v25 - 2, v24));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v118 + 1);
  sub_20BFD265C(&v118);
  if (*((_QWORD *)&v117 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v117 + 1));
  if ((v115 & 7) != 0)
  {
    v26 = (unsigned int *)(v115 & 0xFFFFFFFFFFFFFFF8);
    do
      v27 = __ldxr(v26);
    while (__stlxr(v27 - 2, v26));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v114 + 1);
  sub_20BFD265C(&v114);
  if (v113)
    sub_20C35C614(v113);
  if (v13)
  {
    v29 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v29)
      v29 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v30 = v12 & 0xFFFFFFFFFFFFFFF8;
    if ((v12 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v29 + 95) & 0xFFFFFFFFFFFFFFF8))
    {
      v33 = 1;
    }
    else
    {
      v31 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v31)
        v31 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (v30 != (*((_QWORD *)v31 + 98) & 0xFFFFFFFFFFFFFFF8))
      {
        *(_QWORD *)&v106 = "usdGeom/camera.cpp";
        *((_QWORD *)&v106 + 1) = "_TokenToProjection";
        *(_QWORD *)&v107 = 433;
        *((_QWORD *)&v107 + 1) = "GfCamera::Projection pxrInternal__aapl__pxrReserved__::_TokenToProjection(const TfToken &)";
        LOBYTE(v108) = 0;
        if (v30)
        {
          v32 = (const char *)(v30 + 16);
          if (*(char *)(v30 + 39) < 0)
            v32 = *(const char **)v32;
        }
        else
        {
          v32 = "";
        }
        pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v106, (pxrInternal__aapl__pxrReserved__ *)"Unknown projection type %s", v28, v32);
      }
      v33 = 0;
    }
    LODWORD(v117) = v33;
    pxrInternal__aapl__pxrReserved__::GfCamera::SetProjection(a3, &v117);
    if ((v12 & 7) != 0)
    {
      do
        v34 = __ldxr((unsigned int *)v30);
      while (__stlxr(v34 - 2, (unsigned int *)v30));
    }
  }
  sub_20C35C4F8((uint64_t)&v106, v6, v7);
  v35 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v35)
    v35 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v36 = sub_20C554C64((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v106, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v35 + 432));
  if ((BYTE8(v107) & 7) != 0)
  {
    v37 = (unsigned int *)(*((_QWORD *)&v107 + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v38 = __ldxr(v37);
    while (__stlxr(v38 - 2, v37));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v107 + 1);
  sub_20BFD265C(&v107);
  if (*((_QWORD *)&v106 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v106 + 1));
  if ((v36 & 0xFF00000000) != 0)
    pxrInternal__aapl__pxrReserved__::GfCamera::SetHorizontalAperture(a3, *(float *)&v36);
  sub_20C35C4F8((uint64_t)&v106, v6, v7);
  v39 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v39)
    v39 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v40 = sub_20C554C64((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v106, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v39 + 1232));
  if ((BYTE8(v107) & 7) != 0)
  {
    v41 = (unsigned int *)(*((_QWORD *)&v107 + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v42 = __ldxr(v41);
    while (__stlxr(v42 - 2, v41));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v107 + 1);
  sub_20BFD265C(&v107);
  if (*((_QWORD *)&v106 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v106 + 1));
  if ((v40 & 0xFF00000000) != 0)
    pxrInternal__aapl__pxrReserved__::GfCamera::SetVerticalAperture(a3, *(float *)&v40);
  sub_20C35C4F8((uint64_t)&v106, v6, v7);
  v43 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v43)
    v43 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v44 = sub_20C554C64((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v106, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v43 + 440));
  if ((BYTE8(v107) & 7) != 0)
  {
    v45 = (unsigned int *)(*((_QWORD *)&v107 + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v46 = __ldxr(v45);
    while (__stlxr(v46 - 2, v45));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v107 + 1);
  sub_20BFD265C(&v107);
  if (*((_QWORD *)&v106 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v106 + 1));
  if ((v44 & 0xFF00000000) != 0)
    pxrInternal__aapl__pxrReserved__::GfCamera::SetHorizontalApertureOffset(a3, *(float *)&v44);
  sub_20C35C4F8((uint64_t)&v106, v6, v7);
  v47 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v47)
    v47 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v48 = sub_20C554C64((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v106, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v47 + 1240));
  if ((BYTE8(v107) & 7) != 0)
  {
    v49 = (unsigned int *)(*((_QWORD *)&v107 + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v50 = __ldxr(v49);
    while (__stlxr(v50 - 2, v49));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v107 + 1);
  sub_20BFD265C(&v107);
  if (*((_QWORD *)&v106 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v106 + 1));
  if ((v48 & 0xFF00000000) != 0)
    pxrInternal__aapl__pxrReserved__::GfCamera::SetVerticalApertureOffset(a3, *(float *)&v48);
  sub_20C35C4F8((uint64_t)&v106, v6, v7);
  v51 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v51)
    v51 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v52 = sub_20C554C64((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v106, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v51 + 360));
  if ((BYTE8(v107) & 7) != 0)
  {
    v53 = (unsigned int *)(*((_QWORD *)&v107 + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v54 = __ldxr(v53);
    while (__stlxr(v54 - 2, v53));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v107 + 1);
  sub_20BFD265C(&v107);
  if (*((_QWORD *)&v106 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v106 + 1));
  if ((v52 & 0xFF00000000) != 0)
    pxrInternal__aapl__pxrReserved__::GfCamera::SetFocalLength(a3, *(float *)&v52);
  sub_20C35C4F8((uint64_t)&v112, v6, v7);
  v55 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v55)
    v55 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v56 = (_QWORD *)((char *)v55 + 120);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v112, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v55 + 120), (uint64_t)&v117);
  if ((pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v117, v57) & 1) != 0)
  {
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::GfVec2f>((uint64_t)&v117, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v120);
    if ((v58 & 1) != 0)
    {
      v59 = v120;
      v60 = v120 & 0xFFFFFFFFFFFFFF00;
      v61 = 1;
      goto LABEL_108;
    }
    *(_QWORD *)&v106 = "usdGeom/camera.cpp";
    *((_QWORD *)&v106 + 1) = "_GetValue";
    *(_QWORD *)&v107 = 417;
    *((_QWORD *)&v107 + 1) = "std::optional<T> pxrInternal__aapl__pxrReserved__::_GetValue(const UsdPrim &, const TfToken"
                             " &, const UsdTimeCode &) [T = pxrInternal__aapl__pxrReserved__::GfVec2f]";
    LOBYTE(v108) = 0;
    v64 = *v56 & 0xFFFFFFFFFFFFFFF8;
    if (v64)
    {
      v65 = (const char *)(v64 + 16);
      if (*(char *)(v64 + 39) < 0)
        v65 = *(const char **)v65;
    }
    else
    {
      v65 = "";
    }
    sub_20C348EEC((uint64_t)&v117, &v100);
    v69 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v100);
    pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v106, (pxrInternal__aapl__pxrReserved__ *)"Failed to extract value from attribute %s at <%s>.", v70, v65, v69);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v101);
    v68 = &v100;
  }
  else
  {
    *(_QWORD *)&v106 = "usdGeom/camera.cpp";
    *((_QWORD *)&v106 + 1) = "_GetValue";
    *(_QWORD *)&v107 = 410;
    *((_QWORD *)&v107 + 1) = "std::optional<T> pxrInternal__aapl__pxrReserved__::_GetValue(const UsdPrim &, const TfToken"
                             " &, const UsdTimeCode &) [T = pxrInternal__aapl__pxrReserved__::GfVec2f]";
    LOBYTE(v108) = 0;
    v62 = *v56 & 0xFFFFFFFFFFFFFFF8;
    if (v62)
    {
      v63 = (const char *)(v62 + 16);
      if (*(char *)(v62 + 39) < 0)
        v63 = *(const char **)v63;
    }
    else
    {
      v63 = "";
    }
    sub_20C348EEC((uint64_t)&v112, (int *)&v120);
    v66 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v120);
    pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v106, (pxrInternal__aapl__pxrReserved__ *)"%s attribute on prim %s missing.", v67, v63, v66);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v120 + 1);
    v68 = (int *)&v120;
  }
  sub_20BFD265C(v68);
  v60 = 0;
  v61 = 0;
  v59 = 0;
LABEL_108:
  if ((BYTE8(v118) & 7) != 0)
  {
    v71 = (unsigned int *)(*((_QWORD *)&v118 + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v72 = __ldxr(v71);
    while (__stlxr(v72 - 2, v71));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v118 + 1);
  sub_20BFD265C(&v118);
  if (*((_QWORD *)&v117 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v117 + 1));
  if ((v115 & 7) != 0)
  {
    v73 = (unsigned int *)(v115 & 0xFFFFFFFFFFFFFFF8);
    do
      v74 = __ldxr(v73);
    while (__stlxr(v74 - 2, v73));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v114 + 1);
  sub_20BFD265C(&v114);
  if (v113)
    sub_20C35C614(v113);
  if (v61)
  {
    LODWORD(v106) = v60 & 0xFFFFFF00 | v59;
    DWORD1(v106) = HIDWORD(v60);
    pxrInternal__aapl__pxrReserved__::GfCamera::SetClippingRange(a3, &v106);
  }
  sub_20C35C4F8((uint64_t)&v100, v6, v7);
  v75 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v75)
    v75 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v76 = (_QWORD *)((char *)v75 + 112);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v100, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v75 + 112), (uint64_t)&v120);
  if ((pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v120, v77) & 1) != 0)
  {
    v119 = 0;
    v117 = 0u;
    v118 = 0u;
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::GfVec4f>>((uint64_t)&v120, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v117);
    if ((v78 & 1) != 0)
    {
      v106 = v117;
      v107 = v118;
      v117 = 0u;
      v118 = 0u;
      v108 = v119;
      v119 = 0;
      v79 = 1;
    }
    else
    {
      v112 = (uint64_t)"usdGeom/camera.cpp";
      v113 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"_GetValue";
      v114 = 417;
      v115 = (unint64_t)"std::optional<T> pxrInternal__aapl__pxrReserved__::_GetValue(const UsdPrim &, const TfTok"
                               "en &, const UsdTimeCode &) [T = pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aa"
                               "pl__pxrReserved__::GfVec4f>]";
      v116 = 0;
      v82 = *v76 & 0xFFFFFFFFFFFFFFF8;
      if (v82)
      {
        v83 = (const char *)(v82 + 16);
        if (*(char *)(v82 + 39) < 0)
          v83 = *(const char **)v83;
      }
      else
      {
        v83 = "";
      }
      sub_20C348EEC((uint64_t)&v120, &v110);
      v86 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v110);
      pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v112, (pxrInternal__aapl__pxrReserved__ *)"Failed to extract value from attribute %s at <%s>.", v87, v83, v86);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
      sub_20BFD265C(&v110);
      v79 = 0;
      LOBYTE(v106) = 0;
    }
    v109 = v79;
    sub_20BF5618C((uint64_t)&v117);
  }
  else
  {
    *(_QWORD *)&v117 = "usdGeom/camera.cpp";
    *((_QWORD *)&v117 + 1) = "_GetValue";
    *(_QWORD *)&v118 = 410;
    *((_QWORD *)&v118 + 1) = "std::optional<T> pxrInternal__aapl__pxrReserved__::_GetValue(const UsdPrim &, const TfToken"
                             " &, const UsdTimeCode &) [T = pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__"
                             "pxrReserved__::GfVec4f>]";
    LOBYTE(v119) = 0;
    v80 = *v76 & 0xFFFFFFFFFFFFFFF8;
    if (v80)
    {
      v81 = (const char *)(v80 + 16);
      if (*(char *)(v80 + 39) < 0)
        v81 = *(const char **)v81;
    }
    else
    {
      v81 = "";
    }
    sub_20C348EEC((uint64_t)&v100, (int *)&v112);
    v84 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v112);
    pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v117, (pxrInternal__aapl__pxrReserved__ *)"%s attribute on prim %s missing.", v85, v81, v84);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v112 + 1);
    sub_20BFD265C(&v112);
    LOBYTE(v106) = 0;
    v109 = 0;
  }
  if ((v124 & 7) != 0)
  {
    v88 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
    do
      v89 = __ldxr(v88);
    while (__stlxr(v89 - 2, v88));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v123);
  sub_20BFD265C(&v122);
  if (v121)
    sub_20C35C614(v121);
  if ((v105 & 7) != 0)
  {
    v90 = (unsigned int *)(v105 & 0xFFFFFFFFFFFFFFF8);
    do
      v91 = __ldxr(v90);
    while (__stlxr(v91 - 2, v90));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v104);
  sub_20BFD265C(&v103);
  if (v102)
    sub_20C35C614(v102);
  if (v109)
  {
    *(_QWORD *)&v118 = 0;
    v117 = 0uLL;
    sub_20C555868(&v117, v108, (uint64_t)v108 + 16 * v106, v106);
    pxrInternal__aapl__pxrReserved__::GfCamera::SetClippingPlanes(a3, (uint64_t)&v117);
    if ((_QWORD)v117)
    {
      *((_QWORD *)&v117 + 1) = v117;
      operator delete((void *)v117);
    }
  }
  sub_20C5558E0((uint64_t)&v106);
  sub_20C35C4F8((uint64_t)&v106, v6, v7);
  v92 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v92)
    v92 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v93 = sub_20C554C64((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v106, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v92 + 384));
  if ((BYTE8(v107) & 7) != 0)
  {
    v94 = (unsigned int *)(*((_QWORD *)&v107 + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v95 = __ldxr(v94);
    while (__stlxr(v95 - 2, v94));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v107 + 1);
  sub_20BFD265C(&v107);
  if (*((_QWORD *)&v106 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v106 + 1));
  if ((v93 & 0xFF00000000) != 0)
    pxrInternal__aapl__pxrReserved__::GfCamera::SetFStop(a3, *(float *)&v93);
  sub_20C35C4F8((uint64_t)&v106, v6, v7);
  v96 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v96)
    v96 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v97 = sub_20C554C64((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v106, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v96 + 368));
  if ((BYTE8(v107) & 7) != 0)
  {
    v98 = (unsigned int *)(*((_QWORD *)&v107 + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v99 = __ldxr(v98);
    while (__stlxr(v99 - 2, v98));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v107 + 1);
  sub_20BFD265C(&v107);
  if (*((_QWORD *)&v106 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v106 + 1));
  if ((v97 & 0xFF00000000) != 0)
    pxrInternal__aapl__pxrReserved__::GfCamera::SetFocusDistance(a3, *(float *)&v97);
}

void sub_20C554A44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  uint64_t v4;
  void *v6;
  va_list va;

  va_start(va, a3);
  sub_20BF5618C(v4 - 160);
  sub_20C372B54(v4 - 112);
  sub_20C35C2E0((uint64_t)va);
  v6 = *(void **)(v3 + 160);
  if (v6)
  {
    *(_QWORD *)(v3 + 168) = v6;
    operator delete(v6);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_20C554C64(pxrInternal__aapl__pxrReserved__::UsdPrim *a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2)
{
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v4;
  char v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  const char *v9;
  unint64_t v10;
  const char *v11;
  const char *v12;
  char *v13;
  const char *Text;
  char *v15;
  unsigned int *v16;
  unsigned int v17;
  unsigned int v19;
  int v20;
  int v21;
  char *v22;
  const char *v23;
  uint64_t v24;
  const char *v25;
  char v26;
  _BYTE v27[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v28;
  int v29;
  int v30;
  uint64_t v31;

  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute(a1, a2, (uint64_t)v27);
  if ((pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)v27, v4) & 1) != 0)
  {
    v19 = 0;
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<float>((uint64_t)v27, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v19);
    if ((v5 & 1) != 0)
    {
      v6 = 0x100000000;
      v7 = v19;
      goto LABEL_15;
    }
    v22 = "usdGeom/camera.cpp";
    v23 = "_GetValue";
    v24 = 417;
    v25 = "std::optional<T> pxrInternal__aapl__pxrReserved__::_GetValue(const UsdPrim &, const TfToken &, const UsdTimeCo"
          "de &) [T = float]";
    v26 = 0;
    v10 = *(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8;
    if (v10)
    {
      v11 = (const char *)(v10 + 16);
      if (*(char *)(v10 + 39) < 0)
        v11 = *(const char **)v11;
    }
    else
    {
      v11 = "";
    }
    sub_20C348EEC((uint64_t)v27, &v20);
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v20);
    pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v22, (pxrInternal__aapl__pxrReserved__ *)"Failed to extract value from attribute %s at <%s>.", v15, v11, Text);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v21);
  }
  else
  {
    v22 = "usdGeom/camera.cpp";
    v23 = "_GetValue";
    v24 = 410;
    v25 = "std::optional<T> pxrInternal__aapl__pxrReserved__::_GetValue(const UsdPrim &, const TfToken &, const UsdTimeCo"
          "de &) [T = float]";
    v26 = 0;
    v8 = *(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8;
    if (v8)
    {
      v9 = (const char *)(v8 + 16);
      if (*(char *)(v8 + 39) < 0)
        v9 = *(const char **)v9;
    }
    else
    {
      v9 = "";
    }
    sub_20C348EEC((uint64_t)a1, &v20);
    v12 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v20);
    pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v22, (pxrInternal__aapl__pxrReserved__ *)"%s attribute on prim %s missing.", v13, v9, v12);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v21);
  }
  sub_20BFD265C(&v20);
  v7 = 0;
  v6 = 0;
LABEL_15:
  if ((v31 & 7) != 0)
  {
    v16 = (unsigned int *)(v31 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v30);
  sub_20BFD265C(&v29);
  if (v28)
    sub_20C35C614(v28);
  return v6 & 0x100000000 | v7;
}

void sub_20C554E3C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C372B54(v1 - 64);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCamera::SetFromCamera(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this, const pxrInternal__aapl__pxrReserved__::GfCamera *a2, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a3)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomXformOp *v6;
  const pxrInternal__aapl__pxrReserved__::UsdAttribute *v7;
  uint64_t Projection;
  char *v9;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int v13;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v14;
  unsigned int *v15;
  unsigned int *v16;
  unsigned int v17;
  unsigned int *v18;
  unsigned int v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int *v22;
  unsigned int v23;
  unsigned int *v24;
  unsigned int v25;
  unsigned int *v26;
  unsigned int v27;
  unsigned int *v28;
  unsigned int v29;
  int v30;
  unsigned int *v31;
  unsigned int v32;
  uint64_t *ClippingPlanes;
  unsigned int *v34;
  unsigned int v35;
  unsigned int *v36;
  unsigned int v37;
  unsigned int *v38;
  unsigned int v39;
  unsigned int *v41;
  pxrInternal__aapl__pxrReserved__ *v42;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v43;
  int v44;
  int v45;
  uint64_t v46;
  _OWORD v47[8];
  _OWORD v48[8];
  _OWORD v49[8];
  __int128 v50;
  __int128 v51;
  uint64_t v52;

  memset(v49, 0, sizeof(v49));
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeParentToWorldTransform(this, a3, v47);
  pxrInternal__aapl__pxrReserved__::GfMatrix4d::GetInverse((double *)v47, 0, 0.0, (uint64_t)v49);
  pxrInternal__aapl__pxrReserved__::GfCamera::GetTransform(a2, (uint64_t)v47);
  v48[4] = v47[4];
  v48[5] = v47[5];
  v48[6] = v47[6];
  v48[7] = v47[7];
  v48[0] = v47[0];
  v48[1] = v47[1];
  v48[2] = v47[2];
  v48[3] = v47[3];
  pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)v48, (double *)v49);
  pxrInternal__aapl__pxrReserved__::UsdGeomXformable::MakeMatrixXform(this, (uint64_t)v47);
  v6 = (pxrInternal__aapl__pxrReserved__::UsdGeomXformOp *)sub_20C555914((uint64_t)v47);
  if ((pxrInternal__aapl__pxrReserved__::UsdGeomXformOp::IsXformOp(v6, v7) & 1) == 0)
    return sub_20C5435DC((uint64_t)v47);
  sub_20C555584((pxrInternal__aapl__pxrReserved__::UsdGeomXformOp *)v47, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v48, *(double *)a3);
  pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetProjectionAttr(this, (uint64_t)&v42);
  Projection = pxrInternal__aapl__pxrReserved__::GfCamera::GetProjection(a2);
  if ((_DWORD)Projection == 1)
  {
    v14 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v14)
      v14 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v15 = (unsigned int *)*((_QWORD *)v14 + 95);
    v41 = v15;
    if ((v15 & 7) == 0)
      goto LABEL_19;
    v12 = (unsigned int *)((unint64_t)v15 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 2, v12));
    goto LABEL_15;
  }
  if (!(_DWORD)Projection)
  {
    v10 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v10)
      v10 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v11 = (unsigned int *)*((_QWORD *)v10 + 98);
    v41 = v11;
    if ((v11 & 7) == 0)
      goto LABEL_19;
    v12 = (unsigned int *)((unint64_t)v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 2, v12));
LABEL_15:
    if ((v13 & 1) != 0)
      goto LABEL_19;
    goto LABEL_18;
  }
  *(_QWORD *)&v50 = "usdGeom/camera.cpp";
  *((_QWORD *)&v50 + 1) = "_ProjectionToToken";
  *(_QWORD *)&v51 = 449;
  *((_QWORD *)&v51 + 1) = "TfToken pxrInternal__aapl__pxrReserved__::_ProjectionToToken(GfCamera::Projection)";
  LOBYTE(v52) = 0;
  pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v50, (pxrInternal__aapl__pxrReserved__ *)"Unknown projection type %d", v9, Projection);
  v12 = 0;
LABEL_18:
  v41 = v12;
LABEL_19:
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Set<pxrInternal__aapl__pxrReserved__::TfToken>(&v42, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v41, *(double *)a3);
  if ((v41 & 7) != 0)
  {
    v16 = (unsigned int *)((unint64_t)v41 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if ((v46 & 7) != 0)
  {
    v18 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
    do
      v19 = __ldxr(v18);
    while (__stlxr(v19 - 2, v18));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v45);
  sub_20BFD265C(&v44);
  if (v43)
    sub_20C35C614(v43);
  pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetHorizontalApertureAttr(this, (uint64_t)&v50);
  LODWORD(v42) = pxrInternal__aapl__pxrReserved__::GfCamera::GetHorizontalAperture(a2);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Set<float>((pxrInternal__aapl__pxrReserved__ **)&v50, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v42, *(double *)a3);
  if ((BYTE8(v51) & 7) != 0)
  {
    v20 = (unsigned int *)(*((_QWORD *)&v51 + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v51 + 1);
  sub_20BFD265C(&v51);
  if (*((_QWORD *)&v50 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v50 + 1));
  pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetVerticalApertureAttr(this, (uint64_t)&v50);
  LODWORD(v42) = pxrInternal__aapl__pxrReserved__::GfCamera::GetVerticalAperture(a2);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Set<float>((pxrInternal__aapl__pxrReserved__ **)&v50, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v42, *(double *)a3);
  if ((BYTE8(v51) & 7) != 0)
  {
    v22 = (unsigned int *)(*((_QWORD *)&v51 + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v23 = __ldxr(v22);
    while (__stlxr(v23 - 2, v22));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v51 + 1);
  sub_20BFD265C(&v51);
  if (*((_QWORD *)&v50 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v50 + 1));
  pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetHorizontalApertureOffsetAttr(this, (uint64_t)&v50);
  LODWORD(v42) = pxrInternal__aapl__pxrReserved__::GfCamera::GetHorizontalApertureOffset(a2);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Set<float>((pxrInternal__aapl__pxrReserved__ **)&v50, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v42, *(double *)a3);
  if ((BYTE8(v51) & 7) != 0)
  {
    v24 = (unsigned int *)(*((_QWORD *)&v51 + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v25 = __ldxr(v24);
    while (__stlxr(v25 - 2, v24));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v51 + 1);
  sub_20BFD265C(&v51);
  if (*((_QWORD *)&v50 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v50 + 1));
  pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetVerticalApertureOffsetAttr(this, (uint64_t)&v50);
  LODWORD(v42) = pxrInternal__aapl__pxrReserved__::GfCamera::GetVerticalApertureOffset(a2);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Set<float>((pxrInternal__aapl__pxrReserved__ **)&v50, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v42, *(double *)a3);
  if ((BYTE8(v51) & 7) != 0)
  {
    v26 = (unsigned int *)(*((_QWORD *)&v51 + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v27 = __ldxr(v26);
    while (__stlxr(v27 - 2, v26));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v51 + 1);
  sub_20BFD265C(&v51);
  if (*((_QWORD *)&v50 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v50 + 1));
  pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetFocalLengthAttr(this, (uint64_t)&v50);
  LODWORD(v42) = pxrInternal__aapl__pxrReserved__::GfCamera::GetFocalLength(a2);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Set<float>((pxrInternal__aapl__pxrReserved__ **)&v50, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v42, *(double *)a3);
  if ((BYTE8(v51) & 7) != 0)
  {
    v28 = (unsigned int *)(*((_QWORD *)&v51 + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v29 = __ldxr(v28);
    while (__stlxr(v29 - 2, v28));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v51 + 1);
  sub_20BFD265C(&v51);
  if (*((_QWORD *)&v50 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v50 + 1));
  pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetClippingRangeAttr(this, (uint64_t)&v50);
  LODWORD(v42) = pxrInternal__aapl__pxrReserved__::GfCamera::GetClippingRange(a2);
  HIDWORD(v42) = v30;
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Set<pxrInternal__aapl__pxrReserved__::GfVec2f>((pxrInternal__aapl__pxrReserved__ **)&v50, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v42, *(double *)a3);
  if ((BYTE8(v51) & 7) != 0)
  {
    v31 = (unsigned int *)(*((_QWORD *)&v51 + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v32 = __ldxr(v31);
    while (__stlxr(v32 - 2, v31));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v51 + 1);
  sub_20BFD265C(&v51);
  if (*((_QWORD *)&v50 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v50 + 1));
  pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetClippingPlanesAttr(this, (uint64_t)&v42);
  ClippingPlanes = (uint64_t *)pxrInternal__aapl__pxrReserved__::GfCamera::GetClippingPlanes(a2);
  v52 = 0;
  v50 = 0u;
  v51 = 0u;
  sub_20C55596C((unint64_t *)&v50, *ClippingPlanes, ClippingPlanes[1]);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Set<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::GfVec4f>>(&v42, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v50, *(double *)a3);
  sub_20BF5618C((uint64_t)&v50);
  if ((v46 & 7) != 0)
  {
    v34 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
    do
      v35 = __ldxr(v34);
    while (__stlxr(v35 - 2, v34));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v45);
  sub_20BFD265C(&v44);
  if (v43)
    sub_20C35C614(v43);
  pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetFStopAttr(this, (uint64_t)&v50);
  LODWORD(v42) = pxrInternal__aapl__pxrReserved__::GfCamera::GetFStop(a2);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Set<float>((pxrInternal__aapl__pxrReserved__ **)&v50, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v42, *(double *)a3);
  if ((BYTE8(v51) & 7) != 0)
  {
    v36 = (unsigned int *)(*((_QWORD *)&v51 + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v37 = __ldxr(v36);
    while (__stlxr(v37 - 2, v36));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v51 + 1);
  sub_20BFD265C(&v51);
  if (*((_QWORD *)&v50 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v50 + 1));
  pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetFocusDistanceAttr(this, (uint64_t)&v50);
  LODWORD(v42) = pxrInternal__aapl__pxrReserved__::GfCamera::GetFocusDistance(a2);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Set<float>((pxrInternal__aapl__pxrReserved__ **)&v50, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v42, *(double *)a3);
  if ((BYTE8(v51) & 7) != 0)
  {
    v38 = (unsigned int *)(*((_QWORD *)&v51 + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v39 = __ldxr(v38);
    while (__stlxr(v39 - 2, v38));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v51 + 1);
  sub_20BFD265C(&v51);
  if (*((_QWORD *)&v50 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v50 + 1));
  return sub_20C5435DC((uint64_t)v47);
}

void sub_20C555494(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_20C5435DC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C555584(pxrInternal__aapl__pxrReserved__::UsdGeomXformOp *a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2, double a3)
{
  unint64_t v3;
  const char *v4;
  pxrInternal__aapl__pxrReserved__ **v7;
  unsigned int *v9;
  unsigned int v10;
  unint64_t v11;
  _QWORD v12[4];
  char v13;

  if (*((_BYTE *)a1 + 132))
  {
    v12[0] = "usdGeom/xformOp.h";
    v12[1] = "Set";
    v12[2] = 399;
    v12[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeomXformOp::Set(const T &, UsdTimeCode) const [T = pxrInternal__"
             "aapl__pxrReserved__::GfMatrix4d]";
    v13 = 0;
    pxrInternal__aapl__pxrReserved__::UsdGeomXformOp::GetOpName(a1, (unsigned int **)&v11);
    v3 = v11 & 0xFFFFFFFFFFFFFFF8;
    if ((v11 & 0xFFFFFFFFFFFFFFF8) != 0)
    {
      v4 = (const char *)(v3 + 16);
      if (*(char *)(v3 + 39) < 0)
        v4 = *(const char **)v4;
    }
    else
    {
      v4 = "";
    }
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v12, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot set a value on the inverse xformOp '%s'. Please set value on the paired non-inverse xformOp instead.", v4);
    if ((v11 & 7) != 0)
    {
      v9 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
    return 0;
  }
  else
  {
    v7 = (pxrInternal__aapl__pxrReserved__ **)sub_20C555914((uint64_t)a1);
    return pxrInternal__aapl__pxrReserved__::UsdAttribute::_Set<pxrInternal__aapl__pxrReserved__::GfMatrix4d>(v7, a2, a3);
  }
}

uint64_t *sub_20C555694()
{
  uint64_t *v0;
  void *__p[2];
  char v4;
  void *v5[3];
  uint64_t v6;
  int v7;

  sub_20BEB59B0((uint64_t)&v6, (uint64_t)"Tf", (uint64_t)"TfType::Define");
  sub_20C5506E4((unint64_t **)v5);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p, (char **)v5, 0);
  if (v4 < 0)
    operator delete(__p[0]);
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_20C555768(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  uint64_t v16;

  if (a14 < 0)
    operator delete(__p);
  if (a15)
    operator delete(a15);
  sub_20BEB24F4(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_20C5557B4(char *a1)
{
  unint64_t v2;
  unint64_t v3;
  void *__p[2];
  char v5;

  v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  if (v5 < 0)
    operator delete(__p[0]);
  v3 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  if (v5 < 0)
    operator delete(__p[0]);
  pxrInternal__aapl__pxrReserved__::TfType::AddAlias((uint64_t *)&v3, v2, a1);
}

void sub_20C555844(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20C555868(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = sub_20BE90F0C(result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_20C5558C4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C5558E0(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 40))
    sub_20BF5618C(a1);
  return a1;
}

uint64_t sub_20C555914(uint64_t a1)
{
  uint64_t v1;
  char v3;
  char *v4;

  v1 = *(unsigned int *)(a1 + 120);
  if ((_DWORD)v1 == -1)
    sub_20BF1C1FC();
  v4 = &v3;
  return ((uint64_t (*)(char **, uint64_t))*(&off_24C53C4A8 + v1))(&v4, a1);
}

uint64_t sub_20C55595C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_20C555964(int a1, pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *this)
{
  return pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::GetAttribute(this);
}

void sub_20C55596C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  __int128 **v6[2];
  uint64_t v7;
  uint64_t v8;

  v7 = a3;
  v8 = a2;
  sub_20BF56210(a1);
  v6[0] = (__int128 **)&v8;
  v6[1] = (__int128 **)&v7;
  sub_20C5559C8(a1, (a3 - a2) >> 4, v6);
}

void sub_20C5559C8(unint64_t *a1, unint64_t a2, __int128 ***a3)
{
  unint64_t v3;
  unint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t *v10;
  uint64_t v11;
  __int128 *v12;
  __int128 *v13;
  uint64_t v14;
  __int128 v15;
  unint64_t *v16;
  unint64_t *v17;
  __int128 *v18;
  __int128 *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  uint64_t v23;
  unint64_t *v24;
  __int128 v25;
  __int128 *v26;
  __int128 *v27;
  uint64_t v28;
  __int128 v29;

  v3 = *a1;
  if (*a1 == a2)
    return;
  if (!a2)
    goto LABEL_20;
  v7 = (unint64_t *)a1[4];
  if (!v7)
  {
    if (16 * a2 / a2 == 16)
    {
      v17 = sub_20BF5D558((uint64_t)a1, a2);
      v16 = v17;
      v18 = **a3;
      v19 = *a3[1];
      if (v18 != v19)
      {
        v20 = 0;
        do
        {
          *(_OWORD *)&v17[v20 / 8] = v18[v20 / 0x10];
          v20 += 16;
        }
        while (&v18[v20 / 0x10] != v19);
      }
      goto LABEL_32;
    }
LABEL_20:
    sub_20BF56210(a1);
    return;
  }
  if (a1[3])
  {
LABEL_22:
    if (v3 >= a2)
      v21 = a2;
    else
      v21 = *a1;
    v22 = sub_20BF5D558((uint64_t)a1, a2);
    v16 = v22;
    if (v21)
    {
      v23 = 16 * v21;
      v24 = v22;
      do
      {
        v25 = *(_OWORD *)v7;
        v7 += 2;
        *(_OWORD *)v24 = v25;
        v24 += 2;
        v23 -= 16;
      }
      while (v23);
    }
    if (v3 < a2)
    {
      v26 = **a3;
      v27 = *a3[1];
      if (v26 != v27)
      {
        v28 = 2 * v3;
        do
        {
          v29 = *v26++;
          *(_OWORD *)&v22[v28] = v29;
          v28 += 2;
        }
        while (v26 != v27);
      }
    }
    goto LABEL_32;
  }
  v8 = atomic_load(v7 - 2);
  if (v8 != 1)
  {
    v7 = (unint64_t *)a1[4];
    goto LABEL_22;
  }
  if (v3 < a2)
  {
    v9 = a1[4];
    if (*(_QWORD *)(v9 - 8) < a2)
    {
      v10 = sub_20BF5D558((uint64_t)a1, a2);
      v7 = v10;
      if (v3)
      {
        v11 = 0;
        do
        {
          *(_OWORD *)&v10[v11] = *(_OWORD *)(v9 + v11 * 8);
          v11 += 2;
        }
        while (2 * v3 != v11);
      }
    }
    v12 = **a3;
    v13 = *a3[1];
    if (v12 != v13)
    {
      v14 = 2 * v3;
      do
      {
        v15 = *v12++;
        *(_OWORD *)&v7[v14] = v15;
        v14 += 2;
      }
      while (v12 != v13);
    }
  }
  v16 = v7;
LABEL_32:
  if (v16 != (unint64_t *)a1[4])
  {
    sub_20BF5618C((uint64_t)a1);
    a1[4] = (unint64_t)v16;
  }
  *a1 = a2;
}

void sub_20C555BA8()
{
  void *__p[2];
  char v1;

  sub_20C556D48();
  sub_20BDDC0E4(__p, "Capsule");
  sub_20C556E68((char *)__p);
  if (v1 < 0)
    operator delete(__p[0]);
}

void sub_20C555BF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::~UsdGeomCapsule(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *this)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim(this);
  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t (*v6)(uint64_t *);
  char v7;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;

  v6 = sub_20C369024(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v13);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C4C8;
    if ((v16 & 7) != 0)
    {
      v9 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
  }
  else
  {
    v13 = "usdGeom/capsule.cpp";
    v14 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Get";
    v15 = 57;
    v16 = (unint64_t)"static UsdGeomCapsule pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::Get(const UsdStagePt"
                            "r &, const SdfPath &)";
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v13, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v13) = 1;
    v14 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v15);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v15 + 1);
    v16 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C4C8;
    if ((v16 & 7) != 0)
    {
      v11 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stlxr(v12 - 2, v11));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v15 + 1);
  sub_20BFD265C(&v15);
  if (v14)
    sub_20C35C614(v14);
}

void sub_20C555D98(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::Define(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  unsigned __int8 v6;
  uint64_t (*v7)(uint64_t *);
  char v8;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int v13;
  char *v14;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;

  v6 = atomic_load((unsigned __int8 *)&qword_2549894D0);
  if ((v6 & 1) == 0 && __cxa_guard_acquire(&qword_2549894D0))
  {
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&qword_2549894C8, "Capsule");
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &qword_2549894C8, &dword_20BDBC000);
    __cxa_guard_release(&qword_2549894D0);
  }
  v7 = sub_20C369024(a1);
  if (v8 & 1 | (unint64_t)v7)
  {
    v9 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::DefinePrim(v9, a2, &qword_2549894C8, (uint64_t)&v14);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v14);
    *(_QWORD *)a3 = off_24C53C4C8;
    if ((v17 & 7) != 0)
    {
      v10 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v11 = __ldxr(v10);
      while (__stlxr(v11 - 2, v10));
    }
  }
  else
  {
    v14 = "usdGeom/capsule.cpp";
    v15 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Define";
    v16 = 70;
    v17 = (unint64_t)"static UsdGeomCapsule pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::Define(const UsdStag"
                            "ePtr &, const SdfPath &)";
    v18 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v14, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v14) = 1;
    v15 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v16);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v16 + 1);
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v14);
    *(_QWORD *)a3 = off_24C53C4C8;
    if ((v17 & 7) != 0)
    {
      v12 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v13 = __ldxr(v12);
      while (__stlxr(v13 - 2, v12));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v16 + 1);
  sub_20BFD265C(&v16);
  if (v15)
    sub_20C35C614(v15);
}

void sub_20C555F88(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2549894D0);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *this)
{
  return 3;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *this)
{
  unsigned __int8 v1;
  const std::type_info *v3;
  char *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_2549894E0);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_2549894E0))
  {
    __cxa_guard_release(&qword_2549894E0);
  }
  return &qword_2549894D8;
}

void sub_20C55602C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2549894E0);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *v3;
  const std::type_info *v4;
  char *v5;

  v1 = atomic_load((unsigned __int8 *)&qword_2549894F0);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *)__cxa_guard_acquire(&qword_2549894F0);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::_GetStaticTfType(v3);
      byte_2549894E8 = sub_20C35BD7C((char *)&qword_2549894D8, v4, v5);
      __cxa_guard_release(&qword_2549894F0);
    }
  }
  return byte_2549894E8;
}

void sub_20C5560A8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2549894F0);
  _Unwind_Resume(a1);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::_GetStaticTfType(this);
  return &qword_2549894D8;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::GetHeightAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 408), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C556180(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::CreateHeightAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 408), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::GetRadiusAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 920), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C5562D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::CreateRadiusAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 920), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::GetAxisAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 24), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C556430(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::CreateAxisAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 24), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::GetExtentAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 296), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C556588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::CreateExtentAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 296), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 616), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *this)
{
  int v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v17;
  uint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  uint64_t *SchemaAttributeNames;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = (int)this;
  v31 = *MEMORY[0x24BDAC8D0];
  v2 = atomic_load((unsigned __int8 *)&qword_254989510);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254989510))
  {
    v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5)
      v5 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v6 = *((_QWORD *)v5 + 51);
    v27 = v6;
    if ((v6 & 7) != 0)
    {
      v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 2, v7));
      if ((v8 & 1) == 0)
        v27 &= 0xFFFFFFFFFFFFFFF8;
    }
    v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9)
      v9 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v10 = *((_QWORD *)v9 + 115);
    v28 = v10;
    if ((v10 & 7) != 0)
    {
      v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 2, v11));
      if ((v12 & 1) == 0)
        v28 &= 0xFFFFFFFFFFFFFFF8;
    }
    v13 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v13)
      v13 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v14 = *((_QWORD *)v13 + 3);
    v29 = v14;
    if ((v14 & 7) != 0)
    {
      v15 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 2, v15));
      if ((v16 & 1) == 0)
        v29 &= 0xFFFFFFFFFFFFFFF8;
    }
    v17 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v17)
      v17 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v18 = *((_QWORD *)v17 + 37);
    v30 = v18;
    if ((v18 & 7) != 0)
    {
      v19 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 2, v19));
      if ((v20 & 1) == 0)
        v30 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_20C374970(&qword_2549894F8, &v27, 4uLL);
    v21 = &v31;
    do
    {
      v23 = *--v21;
      v22 = v23;
      if ((v23 & 7) != 0)
      {
        v24 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
        do
          v25 = __ldxr(v24);
        while (__stlxr(v25 - 2, v24));
      }
    }
    while (v21 != &v27);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_2549894F8, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989510);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254989530);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254989530))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)1);
    sub_20C556974((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_254989518, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989530);
  }
  if (v1)
    return &qword_254989518;
  else
    return &qword_2549894F8;
}

void sub_20C5568E4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989510);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C556974(uint64_t **a1)
{
  qword_254989520 = 0;
  unk_254989528 = 0;
  qword_254989518 = 0;
  sub_20BFC9A6C((char **)&qword_254989518, ((unk_254989500 - qword_2549894F8) >> 3) + a1[1] - *a1);
  sub_20C1292A0(&qword_254989518, (_QWORD *)qword_254989520, *a1, a1[1], a1[1] - *a1);
  return sub_20C1292A0(&qword_254989518, (_QWORD *)qword_254989520, (uint64_t *)qword_2549894F8, unk_254989500, (unk_254989500 - qword_2549894F8) >> 3);
}

void sub_20C556A08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::ComputeExtent(_QWORD *a1, unint64_t *a2, double a3, double a4)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  float32_t v11;
  float32x2_t *v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  float32x2_t v17;
  float v18;
  float32x2_t *v19;

  v18 = 0.0;
  v17 = 0;
  v19 = &v17;
  sub_20BF5AD04(a2, 2uLL, (uint64_t **)&v19);
  v10 = sub_20C556AE0(a1, (float *)&v17, a3, a4);
  if ((_DWORD)v10)
  {
    v11 = -v18;
    sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a2, v8, v9);
    v12 = (float32x2_t *)a2[4];
    *v12 = vneg_f32(v17);
    v12[1].f32[0] = v11;
    sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a2, v13, v14);
    v15 = a2[4];
    *(float32x2_t *)(v15 + 12) = v17;
    *(float *)(v15 + 20) = v18;
  }
  return v10;
}

uint64_t sub_20C556AE0(_QWORD *a1, float *a2, double a3, double a4)
{
  double v7;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  float v9;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v10;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v11;
  uint64_t result;
  float v13;
  float v14;

  v7 = a3 * 0.5 + a4;
  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = v7;
  if ((*a1 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v8 + 166) & 0xFFFFFFFFFFFFFFF8))
  {
    v13 = a4;
    v14 = v9;
    v9 = v13;
  }
  else
  {
    v10 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v10)
      v10 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if ((*a1 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v10 + 168) & 0xFFFFFFFFFFFFFFF8))
    {
      v14 = a4;
      v13 = v9;
      v9 = v14;
    }
    else
    {
      v11 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v11)
        v11 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if ((*a1 & 0xFFFFFFFFFFFFFFF8) != (*((_QWORD *)v11 + 169) & 0xFFFFFFFFFFFFFFF8))
        return 0;
      v14 = a4;
      v13 = v14;
    }
  }
  *a2 = v14;
  a2[1] = v13;
  result = 1;
  a2[2] = v9;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::ComputeExtent(_QWORD *a1, const pxrInternal__aapl__pxrReserved__::GfMatrix4d *a2, unint64_t *a3, double a4, double a5)
{
  uint64_t v10;
  float32x2_t v11;
  float32_t v12;
  float32x2_t v13;
  uint64_t v14;
  char *v15;
  float32x2_t *v16;
  float v17;
  float32x2_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  float64x2_t v23;
  double v24;
  float64x2_t v25;
  double v26;
  _OWORD v27[19];
  char v28;
  _BYTE v29[12];

  DWORD2(v27[0]) = 0;
  *(_QWORD *)&v27[0] = 0;
  *(_QWORD *)&v23.f64[0] = v27;
  sub_20BF5AD04(a3, 2uLL, (uint64_t **)&v23);
  v10 = sub_20C556AE0(a1, (float *)v29, a4, a5);
  if ((_DWORD)v10)
  {
    v11 = (float32x2_t)vrev64_s32(*(int32x2_t *)v29);
    v11.f32[0] = -*(float *)&v29[8];
    v27[0] = vcvtq_f64_f32(vneg_f32(*(float32x2_t *)v29));
    v27[1] = vcvtq_f64_f32(v11);
    v27[2] = vcvtq_f64_f32(*(float32x2_t *)&v29[4]);
    pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)v27, a2);
    v28 = 0;
    pxrInternal__aapl__pxrReserved__::GfBBox3d::ComputeAlignedRange((pxrInternal__aapl__pxrReserved__::GfBBox3d *)v27, (uint64_t)&v23);
    v12 = v24;
    v13 = vcvt_f32_f64(v23);
    sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a3, v14, v15);
    v16 = (float32x2_t *)a3[4];
    *v16 = v13;
    v16[1].f32[0] = v12;
    v17 = v26;
    v18 = vcvt_f32_f64(v25);
    sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a3, v19, v20);
    v21 = a3[4];
    *(float32x2_t *)(v21 + 12) = v18;
    *(float *)(v21 + 20) = v17;
  }
  return v10;
}

void sub_20C556D10(uint64_t a1, const std::type_info *a2, char *a3)
{
  pxrInternal__aapl__pxrReserved__::TfType *v3;
  char *v4;
  std::type_info var8;

  var8.__vftable = (std::type_info_vtbl *)sub_20C556FA8;
  pxrInternal__aapl__pxrReserved__::UsdGeomRegisterComputeExtentFunction(v3, &var8, v4);
}

uint64_t *sub_20C556D48()
{
  uint64_t *v0;
  void *__p[2];
  char v4;
  void *v5[3];
  uint64_t v6;
  int v7;

  sub_20BEB59B0((uint64_t)&v6, (uint64_t)"Tf", (uint64_t)"TfType::Define");
  sub_20C556F18((unint64_t **)v5);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p, (char **)v5, 0);
  if (v4 < 0)
    operator delete(__p[0]);
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_20C556E1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  uint64_t v16;

  if (a14 < 0)
    operator delete(__p);
  if (a15)
    operator delete(a15);
  sub_20BEB24F4(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_20C556E68(char *a1)
{
  unint64_t v2;
  unint64_t v3;
  void *__p[2];
  char v5;

  v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  if (v5 < 0)
    operator delete(__p[0]);
  v3 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  if (v5 < 0)
    operator delete(__p[0]);
  pxrInternal__aapl__pxrReserved__::TfType::AddAlias((uint64_t *)&v3, v2, a1);
}

void sub_20C556EF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C556F18(unint64_t **a1@<X8>)
{
  unint64_t v2;
  unint64_t *v3;
  void *__p[2];
  char v5;

  v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  v3 = (unint64_t *)operator new(8uLL);
  *a1 = v3;
  *v3++ = v2;
  a1[1] = v3;
  a1[2] = v3;
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C556F84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C556FA8(pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a1, uint64_t a2, const pxrInternal__aapl__pxrReserved__::GfMatrix4d *a3, unint64_t *a4)
{
  char v6;
  char v7;
  unsigned int *v8;
  unsigned int v9;
  char v10;
  char v11;
  unsigned int *v12;
  unsigned int v13;
  char v14;
  char v15;
  unsigned int *v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v23;
  double v24;
  double v25;
  char *v26;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  void (**v31)(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *__hidden);
  uint64_t v32;

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v31, a1);
  v31 = off_24C53C4C8;
  if (!v32
    || (*(_BYTE *)(v32 + 57) & 8) != 0
    || (pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v31) & 1) == 0)
  {
    v26 = "usdGeom/capsule.cpp";
    v27 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"_ComputeExtentForCapsule";
    v28 = 290;
    v29 = (unint64_t)"BOOL pxrInternal__aapl__pxrReserved__::_ComputeExtentForCapsule(const UsdGeomBoundable &, co"
                            "nst UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)";
    v30 = 0;
    if ((pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v26, "capsuleSchema", 0) & 1) == 0)
      goto LABEL_32;
  }
  v25 = 0.0;
  pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::GetHeightAttr((pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *)&v31, (uint64_t)&v26);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<double>((uint64_t)&v26, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v25);
  v7 = v6;
  if ((v29 & 7) != 0)
  {
    v8 = (unsigned int *)(v29 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v28 + 1);
  sub_20BFD265C(&v28);
  if (v27)
    sub_20C35C614(v27);
  if ((v7 & 1) == 0)
    goto LABEL_32;
  v24 = 0.0;
  pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::GetRadiusAttr((pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *)&v31, (uint64_t)&v26);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<double>((uint64_t)&v26, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v24);
  v11 = v10;
  if ((v29 & 7) != 0)
  {
    v12 = (unsigned int *)(v29 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stlxr(v13 - 2, v12));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v28 + 1);
  sub_20BFD265C(&v28);
  if (v27)
    sub_20C35C614(v27);
  if ((v11 & 1) != 0)
  {
    v23 = 0;
    pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::GetAxisAttr((pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *)&v31, (uint64_t)&v26);
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::TfToken>((uint64_t)&v26, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v23);
    v15 = v14;
    if ((v29 & 7) != 0)
    {
      v16 = (unsigned int *)(v29 & 0xFFFFFFFFFFFFFFF8);
      do
        v17 = __ldxr(v16);
      while (__stlxr(v17 - 2, v16));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v28 + 1);
    sub_20BFD265C(&v28);
    if (v27)
      sub_20C35C614(v27);
    if ((v15 & 1) != 0)
    {
      if (a3)
        v18 = pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::ComputeExtent(&v23, a3, a4, v25, v24);
      else
        v18 = pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::ComputeExtent(&v23, a4, v25, v24);
      v19 = v18;
    }
    else
    {
      v19 = 0;
    }
    if ((v23 & 7) != 0)
    {
      v20 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stlxr(v21 - 2, v20));
    }
  }
  else
  {
LABEL_32:
    v19 = 0;
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)&v31);
  return v19;
}

void sub_20C5571F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)va);
  _Unwind_Resume(a1);
}

void sub_20C557274()
{
  void *__p[2];
  char v1;

  sub_20C5585E4();
  sub_20BDDC0E4(__p, "Capsule_1");
  sub_20C558704((char *)__p);
  if (v1 < 0)
    operator delete(__p[0]);
}

void sub_20C5572C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::~UsdGeomCapsule_1(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim(this);
  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t (*v6)(uint64_t *);
  char v7;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;

  v6 = sub_20C369024(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v13);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C520;
    if ((v16 & 7) != 0)
    {
      v9 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
  }
  else
  {
    v13 = "usdGeom/capsule_1.cpp";
    v14 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Get";
    v15 = 57;
    v16 = (unint64_t)"static UsdGeomCapsule_1 pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::Get(const UsdSta"
                            "gePtr &, const SdfPath &)";
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v13, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v13) = 1;
    v14 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v15);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v15 + 1);
    v16 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C520;
    if ((v16 & 7) != 0)
    {
      v11 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stlxr(v12 - 2, v11));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v15 + 1);
  sub_20BFD265C(&v15);
  if (v14)
    sub_20C35C614(v14);
}

void sub_20C557464(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::Define(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  unsigned __int8 v6;
  uint64_t (*v7)(uint64_t *);
  char v8;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int v13;
  char *v14;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;

  v6 = atomic_load((unsigned __int8 *)&qword_254989540);
  if ((v6 & 1) == 0 && __cxa_guard_acquire(&qword_254989540))
  {
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&qword_254989538, "Capsule_1");
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &qword_254989538, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989540);
  }
  v7 = sub_20C369024(a1);
  if (v8 & 1 | (unint64_t)v7)
  {
    v9 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::DefinePrim(v9, a2, &qword_254989538, (uint64_t)&v14);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v14);
    *(_QWORD *)a3 = off_24C53C520;
    if ((v17 & 7) != 0)
    {
      v10 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v11 = __ldxr(v10);
      while (__stlxr(v11 - 2, v10));
    }
  }
  else
  {
    v14 = "usdGeom/capsule_1.cpp";
    v15 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Define";
    v16 = 70;
    v17 = (unint64_t)"static UsdGeomCapsule_1 pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::Define(const Usd"
                            "StagePtr &, const SdfPath &)";
    v18 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v14, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v14) = 1;
    v15 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v16);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v16 + 1);
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v14);
    *(_QWORD *)a3 = off_24C53C520;
    if ((v17 & 7) != 0)
    {
      v12 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v13 = __ldxr(v12);
      while (__stlxr(v13 - 2, v12));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v16 + 1);
  sub_20BFD265C(&v16);
  if (v15)
    sub_20C35C614(v15);
}

void sub_20C557654(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989540);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this)
{
  return 3;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this)
{
  unsigned __int8 v1;
  const std::type_info *v3;
  char *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_254989550);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_254989550))
  {
    __cxa_guard_release(&qword_254989550);
  }
  return &qword_254989548;
}

void sub_20C5576F8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989550);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *v3;
  const std::type_info *v4;
  char *v5;

  v1 = atomic_load((unsigned __int8 *)&qword_254989560);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *)__cxa_guard_acquire(&qword_254989560);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::_GetStaticTfType(v3);
      byte_254989558 = sub_20C35BD7C((char *)&qword_254989548, v4, v5);
      __cxa_guard_release(&qword_254989560);
    }
  }
  return byte_254989558;
}

void sub_20C557774(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989560);
  _Unwind_Resume(a1);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::_GetStaticTfType(this);
  return &qword_254989548;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::GetHeightAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 408), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C55784C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::CreateHeightAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 408), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::GetRadiusTopAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 936), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C5579A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::CreateRadiusTopAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 936), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::GetRadiusBottomAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 928), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C557AFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::CreateRadiusBottomAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 928), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::GetAxisAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 24), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C557C54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::CreateAxisAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 24), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::GetExtentAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 296), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C557DAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::CreateExtentAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 296), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 616), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this)
{
  int v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v17;
  uint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v21;
  uint64_t v22;
  unsigned int *v23;
  unsigned int v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int *v28;
  unsigned int v29;
  uint64_t *SchemaAttributeNames;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = (int)this;
  v36 = *MEMORY[0x24BDAC8D0];
  v2 = atomic_load((unsigned __int8 *)&qword_254989580);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254989580))
  {
    v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5)
      v5 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v6 = *((_QWORD *)v5 + 51);
    v31 = v6;
    if ((v6 & 7) != 0)
    {
      v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 2, v7));
      if ((v8 & 1) == 0)
        v31 &= 0xFFFFFFFFFFFFFFF8;
    }
    v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9)
      v9 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v10 = *((_QWORD *)v9 + 117);
    v32 = v10;
    if ((v10 & 7) != 0)
    {
      v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 2, v11));
      if ((v12 & 1) == 0)
        v32 &= 0xFFFFFFFFFFFFFFF8;
    }
    v13 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v13)
      v13 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v14 = *((_QWORD *)v13 + 116);
    v33 = v14;
    if ((v14 & 7) != 0)
    {
      v15 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 2, v15));
      if ((v16 & 1) == 0)
        v33 &= 0xFFFFFFFFFFFFFFF8;
    }
    v17 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v17)
      v17 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v18 = *((_QWORD *)v17 + 3);
    v34 = v18;
    if ((v18 & 7) != 0)
    {
      v19 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 2, v19));
      if ((v20 & 1) == 0)
        v34 &= 0xFFFFFFFFFFFFFFF8;
    }
    v21 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v21)
      v21 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v22 = *((_QWORD *)v21 + 37);
    v35 = v22;
    if ((v22 & 7) != 0)
    {
      v23 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
      do
        v24 = __ldxr(v23);
      while (__stxr(v24 + 2, v23));
      if ((v24 & 1) == 0)
        v35 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_20C374970(&qword_254989568, &v31, 5uLL);
    v25 = &v36;
    do
    {
      v27 = *--v25;
      v26 = v27;
      if ((v27 & 7) != 0)
      {
        v28 = (unsigned int *)(v26 & 0xFFFFFFFFFFFFFFF8);
        do
          v29 = __ldxr(v28);
        while (__stlxr(v29 - 2, v28));
      }
    }
    while (v25 != &v31);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_254989568, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989580);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_2549895A0);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2549895A0))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)1);
    sub_20C5581EC((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_254989588, &dword_20BDBC000);
    __cxa_guard_release(&qword_2549895A0);
  }
  if (v1)
    return &qword_254989588;
  else
    return &qword_254989568;
}

void sub_20C55815C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989580);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C5581EC(uint64_t **a1)
{
  qword_254989590 = 0;
  unk_254989598 = 0;
  qword_254989588 = 0;
  sub_20BFC9A6C((char **)&qword_254989588, ((*(_QWORD *)algn_254989570 - qword_254989568) >> 3) + a1[1] - *a1);
  sub_20C1292A0(&qword_254989588, (_QWORD *)qword_254989590, *a1, a1[1], a1[1] - *a1);
  return sub_20C1292A0(&qword_254989588, (_QWORD *)qword_254989590, (uint64_t *)qword_254989568, *(uint64_t **)algn_254989570, (*(_QWORD *)algn_254989570 - qword_254989568) >> 3);
}

void sub_20C558280(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::ComputeExtent(_QWORD *a1, unint64_t *a2, double a3, double a4, double a5)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  float32_t v13;
  float32x2_t *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  float32x2_t v19;
  float v20;
  float32x2_t *v21;

  v20 = 0.0;
  v19 = 0;
  v21 = &v19;
  sub_20BF5AD04(a2, 2uLL, (uint64_t **)&v21);
  v12 = sub_20C558368(a1, (float *)&v19, a3, a4, a5);
  if ((_DWORD)v12)
  {
    v13 = -v20;
    sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a2, v10, v11);
    v14 = (float32x2_t *)a2[4];
    *v14 = vneg_f32(v19);
    v14[1].f32[0] = v13;
    sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a2, v15, v16);
    v17 = a2[4];
    *(float32x2_t *)(v17 + 12) = v19;
    *(float *)(v17 + 20) = v20;
  }
  return v12;
}

uint64_t sub_20C558368(_QWORD *a1, float *a2, double a3, double a4, double a5)
{
  double v7;
  double v8;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v9;
  float v10;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v11;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v12;
  uint64_t result;
  float v14;
  float v15;

  if (a4 >= a5)
    v7 = a4;
  else
    v7 = a5;
  v8 = a3 * 0.5 + v7;
  v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v9)
    v9 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v10 = v8;
  if ((*a1 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v9 + 166) & 0xFFFFFFFFFFFFFFF8))
  {
    v14 = v7;
    v15 = v10;
    v10 = v14;
  }
  else
  {
    v11 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v11)
      v11 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if ((*a1 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v11 + 168) & 0xFFFFFFFFFFFFFFF8))
    {
      v15 = v7;
      v14 = v10;
      v10 = v15;
    }
    else
    {
      v12 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v12)
        v12 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if ((*a1 & 0xFFFFFFFFFFFFFFF8) != (*((_QWORD *)v12 + 169) & 0xFFFFFFFFFFFFFFF8))
        return 0;
      v15 = v7;
      v14 = v15;
    }
  }
  *a2 = v15;
  a2[1] = v14;
  result = 1;
  a2[2] = v10;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::ComputeExtent(_QWORD *a1, const pxrInternal__aapl__pxrReserved__::GfMatrix4d *a2, unint64_t *a3, double a4, double a5, double a6)
{
  uint64_t v12;
  float32x2_t v13;
  float32_t v14;
  float32x2_t v15;
  uint64_t v16;
  char *v17;
  float32x2_t *v18;
  float v19;
  float32x2_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  float64x2_t v25;
  double v26;
  float64x2_t v27;
  double v28;
  _OWORD v29[19];
  char v30;
  _BYTE v31[12];

  DWORD2(v29[0]) = 0;
  *(_QWORD *)&v29[0] = 0;
  *(_QWORD *)&v25.f64[0] = v29;
  sub_20BF5AD04(a3, 2uLL, (uint64_t **)&v25);
  v12 = sub_20C558368(a1, (float *)v31, a4, a5, a6);
  if ((_DWORD)v12)
  {
    v13 = (float32x2_t)vrev64_s32(*(int32x2_t *)v31);
    v13.f32[0] = -*(float *)&v31[8];
    v29[0] = vcvtq_f64_f32(vneg_f32(*(float32x2_t *)v31));
    v29[1] = vcvtq_f64_f32(v13);
    v29[2] = vcvtq_f64_f32(*(float32x2_t *)&v31[4]);
    pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)v29, a2);
    v30 = 0;
    pxrInternal__aapl__pxrReserved__::GfBBox3d::ComputeAlignedRange((pxrInternal__aapl__pxrReserved__::GfBBox3d *)v29, (uint64_t)&v25);
    v14 = v26;
    v15 = vcvt_f32_f64(v25);
    sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a3, v16, v17);
    v18 = (float32x2_t *)a3[4];
    *v18 = v15;
    v18[1].f32[0] = v14;
    v19 = v28;
    v20 = vcvt_f32_f64(v27);
    sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a3, v21, v22);
    v23 = a3[4];
    *(float32x2_t *)(v23 + 12) = v20;
    *(float *)(v23 + 20) = v19;
  }
  return v12;
}

void sub_20C5585AC(uint64_t a1, const std::type_info *a2, char *a3)
{
  pxrInternal__aapl__pxrReserved__::TfType *v3;
  char *v4;
  std::type_info var8;

  var8.__vftable = (std::type_info_vtbl *)sub_20C5587B8;
  pxrInternal__aapl__pxrReserved__::UsdGeomRegisterComputeExtentFunction(v3, &var8, v4);
}

uint64_t *sub_20C5585E4()
{
  uint64_t *v0;
  void *__p[2];
  char v4;
  void *v5[3];
  uint64_t v6;
  int v7;

  sub_20BEB59B0((uint64_t)&v6, (uint64_t)"Tf", (uint64_t)"TfType::Define");
  sub_20C556F18((unint64_t **)v5);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p, (char **)v5, 0);
  if (v4 < 0)
    operator delete(__p[0]);
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_20C5586B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  uint64_t v16;

  if (a14 < 0)
    operator delete(__p);
  if (a15)
    operator delete(a15);
  sub_20BEB24F4(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_20C558704(char *a1)
{
  unint64_t v2;
  unint64_t v3;
  void *__p[2];
  char v5;

  v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  if (v5 < 0)
    operator delete(__p[0]);
  v3 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  if (v5 < 0)
    operator delete(__p[0]);
  pxrInternal__aapl__pxrReserved__::TfType::AddAlias((uint64_t *)&v3, v2, a1);
}

void sub_20C558794(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C5587B8(pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a1, uint64_t a2, const pxrInternal__aapl__pxrReserved__::GfMatrix4d *a3, unint64_t *a4)
{
  char v6;
  char v7;
  unsigned int *v8;
  unsigned int v9;
  char v10;
  char v11;
  unsigned int *v12;
  unsigned int v13;
  char v14;
  char v15;
  unsigned int *v16;
  unsigned int v17;
  char v18;
  char v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  uint64_t v27;
  double v28;
  double v29;
  double v30;
  char *v31;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  void (**v36)(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *__hidden);
  uint64_t v37;

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v36, a1);
  v36 = off_24C53C520;
  if (!v37
    || (*(_BYTE *)(v37 + 57) & 8) != 0
    || (pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v36) & 1) == 0)
  {
    v31 = "usdGeom/capsule_1.cpp";
    v32 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"_ComputeExtentForCapsule";
    v33 = 311;
    v34 = (unint64_t)"BOOL pxrInternal__aapl__pxrReserved__::_ComputeExtentForCapsule(const UsdGeomBoundable &, co"
                            "nst UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)";
    v35 = 0;
    if ((pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v31, "capsuleSchema", 0) & 1) == 0)
      goto LABEL_38;
  }
  v30 = 0.0;
  pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::GetHeightAttr((pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *)&v36, (uint64_t)&v31);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<double>((uint64_t)&v31, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v30);
  v7 = v6;
  if ((v34 & 7) != 0)
  {
    v8 = (unsigned int *)(v34 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v33 + 1);
  sub_20BFD265C(&v33);
  if (v32)
    sub_20C35C614(v32);
  if ((v7 & 1) == 0)
    goto LABEL_38;
  v29 = 0.0;
  pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::GetRadiusTopAttr((pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *)&v36, (uint64_t)&v31);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<double>((uint64_t)&v31, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v29);
  v11 = v10;
  if ((v34 & 7) != 0)
  {
    v12 = (unsigned int *)(v34 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stlxr(v13 - 2, v12));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v33 + 1);
  sub_20BFD265C(&v33);
  if (v32)
    sub_20C35C614(v32);
  if ((v11 & 1) == 0)
    goto LABEL_38;
  v28 = 0.0;
  pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::GetRadiusBottomAttr((pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *)&v36, (uint64_t)&v31);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<double>((uint64_t)&v31, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v28);
  v15 = v14;
  if ((v34 & 7) != 0)
  {
    v16 = (unsigned int *)(v34 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v33 + 1);
  sub_20BFD265C(&v33);
  if (v32)
    sub_20C35C614(v32);
  if ((v15 & 1) != 0)
  {
    v27 = 0;
    pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::GetAxisAttr((pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *)&v36, (uint64_t)&v31);
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::TfToken>((uint64_t)&v31, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v27);
    v19 = v18;
    if ((v34 & 7) != 0)
    {
      v20 = (unsigned int *)(v34 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stlxr(v21 - 2, v20));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v33 + 1);
    sub_20BFD265C(&v33);
    if (v32)
      sub_20C35C614(v32);
    if ((v19 & 1) != 0)
    {
      if (a3)
        v22 = pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::ComputeExtent(&v27, a3, a4, v30, v29, v28);
      else
        v22 = pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::ComputeExtent(&v27, a4, v30, v29, v28);
      v23 = v22;
    }
    else
    {
      v23 = 0;
    }
    if ((v27 & 7) != 0)
    {
      v24 = (unsigned int *)(v27 & 0xFFFFFFFFFFFFFFF8);
      do
        v25 = __ldxr(v24);
      while (__stlxr(v25 - 2, v24));
    }
  }
  else
  {
LABEL_38:
    v23 = 0;
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)&v36);
  return v23;
}

void sub_20C558A74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)va);
  _Unwind_Resume(a1);
}

void sub_20C558AFC()
{
  void *__p[2];
  char v1;

  sub_20C559CAC();
  sub_20BDDC0E4(__p, "Cone");
  sub_20C559DCC((char *)__p);
  if (v1 < 0)
    operator delete(__p[0]);
}

void sub_20C558B48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCone::~UsdGeomCone(pxrInternal__aapl__pxrReserved__::UsdGeomCone *this)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim(this);
  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCone::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t (*v6)(uint64_t *);
  char v7;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;

  v6 = sub_20C369024(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v13);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C578;
    if ((v16 & 7) != 0)
    {
      v9 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
  }
  else
  {
    v13 = "usdGeom/cone.cpp";
    v14 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Get";
    v15 = 57;
    v16 = (unint64_t)"static UsdGeomCone pxrInternal__aapl__pxrReserved__::UsdGeomCone::Get(const UsdStagePtr &, const SdfPath &)";
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v13, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v13) = 1;
    v14 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v15);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v15 + 1);
    v16 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C578;
    if ((v16 & 7) != 0)
    {
      v11 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stlxr(v12 - 2, v11));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v15 + 1);
  sub_20BFD265C(&v15);
  if (v14)
    sub_20C35C614(v14);
}

void sub_20C558CEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCone::Define(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  unsigned __int8 v6;
  uint64_t (*v7)(uint64_t *);
  char v8;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int v13;
  char *v14;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;

  v6 = atomic_load((unsigned __int8 *)&qword_2549895B0);
  if ((v6 & 1) == 0 && __cxa_guard_acquire(&qword_2549895B0))
  {
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&qword_2549895A8, "Cone");
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &qword_2549895A8, &dword_20BDBC000);
    __cxa_guard_release(&qword_2549895B0);
  }
  v7 = sub_20C369024(a1);
  if (v8 & 1 | (unint64_t)v7)
  {
    v9 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::DefinePrim(v9, a2, &qword_2549895A8, (uint64_t)&v14);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v14);
    *(_QWORD *)a3 = off_24C53C578;
    if ((v17 & 7) != 0)
    {
      v10 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v11 = __ldxr(v10);
      while (__stlxr(v11 - 2, v10));
    }
  }
  else
  {
    v14 = "usdGeom/cone.cpp";
    v15 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Define";
    v16 = 70;
    v17 = (unint64_t)"static UsdGeomCone pxrInternal__aapl__pxrReserved__::UsdGeomCone::Define(const UsdStagePtr &"
                            ", const SdfPath &)";
    v18 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v14, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v14) = 1;
    v15 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v16);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v16 + 1);
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v14);
    *(_QWORD *)a3 = off_24C53C578;
    if ((v17 & 7) != 0)
    {
      v12 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v13 = __ldxr(v12);
      while (__stlxr(v13 - 2, v12));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v16 + 1);
  sub_20BFD265C(&v16);
  if (v15)
    sub_20C35C614(v15);
}

void sub_20C558EDC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2549895B0);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCone::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomCone *this)
{
  return 3;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCone::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCone *this)
{
  unsigned __int8 v1;
  const std::type_info *v3;
  char *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_2549895C0);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_2549895C0))
  {
    __cxa_guard_release(&qword_2549895C0);
  }
  return &qword_2549895B8;
}

void sub_20C558F80(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2549895C0);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCone::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomCone *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::UsdGeomCone *v3;
  const std::type_info *v4;
  char *v5;

  v1 = atomic_load((unsigned __int8 *)&qword_2549895D0);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomCone *)__cxa_guard_acquire(&qword_2549895D0);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomCone::_GetStaticTfType(v3);
      byte_2549895C8 = sub_20C35BD7C((char *)&qword_2549895B8, v4, v5);
      __cxa_guard_release(&qword_2549895D0);
    }
  }
  return byte_2549895C8;
}

void sub_20C558FFC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2549895D0);
  _Unwind_Resume(a1);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCone::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCone *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomCone::_GetStaticTfType(this);
  return &qword_2549895B8;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCone::GetHeightAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCone *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 408), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C5590D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCone::CreateHeightAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCone *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 408), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCone::GetRadiusAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCone *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 920), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C55922C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCone::CreateRadiusAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCone *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 920), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCone::GetAxisAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCone *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 24), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C559384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCone::CreateAxisAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCone *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 24), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCone::GetExtentAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCone *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 296), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C5594DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCone::CreateExtentAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCone *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 296), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 616), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCone::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomCone *this)
{
  int v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v17;
  uint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  uint64_t *SchemaAttributeNames;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = (int)this;
  v31 = *MEMORY[0x24BDAC8D0];
  v2 = atomic_load((unsigned __int8 *)&qword_2549895F0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2549895F0))
  {
    v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5)
      v5 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v6 = *((_QWORD *)v5 + 51);
    v27 = v6;
    if ((v6 & 7) != 0)
    {
      v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 2, v7));
      if ((v8 & 1) == 0)
        v27 &= 0xFFFFFFFFFFFFFFF8;
    }
    v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9)
      v9 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v10 = *((_QWORD *)v9 + 115);
    v28 = v10;
    if ((v10 & 7) != 0)
    {
      v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 2, v11));
      if ((v12 & 1) == 0)
        v28 &= 0xFFFFFFFFFFFFFFF8;
    }
    v13 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v13)
      v13 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v14 = *((_QWORD *)v13 + 3);
    v29 = v14;
    if ((v14 & 7) != 0)
    {
      v15 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 2, v15));
      if ((v16 & 1) == 0)
        v29 &= 0xFFFFFFFFFFFFFFF8;
    }
    v17 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v17)
      v17 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v18 = *((_QWORD *)v17 + 37);
    v30 = v18;
    if ((v18 & 7) != 0)
    {
      v19 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 2, v19));
      if ((v20 & 1) == 0)
        v30 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_20C374970(&qword_2549895D8, &v27, 4uLL);
    v21 = &v31;
    do
    {
      v23 = *--v21;
      v22 = v23;
      if ((v23 & 7) != 0)
      {
        v24 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
        do
          v25 = __ldxr(v24);
        while (__stlxr(v25 - 2, v24));
      }
    }
    while (v21 != &v27);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_2549895D8, &dword_20BDBC000);
    __cxa_guard_release(&qword_2549895F0);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254989610);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254989610))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)1);
    sub_20C5598C8((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_2549895F8, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989610);
  }
  if (v1)
    return &qword_2549895F8;
  else
    return &qword_2549895D8;
}

void sub_20C559838(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2549895F0);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C5598C8(uint64_t **a1)
{
  qword_254989600 = 0;
  unk_254989608 = 0;
  qword_2549895F8 = 0;
  sub_20BFC9A6C((char **)&qword_2549895F8, ((unk_2549895E0 - qword_2549895D8) >> 3) + a1[1] - *a1);
  sub_20C1292A0(&qword_2549895F8, (_QWORD *)qword_254989600, *a1, a1[1], a1[1] - *a1);
  return sub_20C1292A0(&qword_2549895F8, (_QWORD *)qword_254989600, (uint64_t *)qword_2549895D8, unk_2549895E0, (unk_2549895E0 - qword_2549895D8) >> 3);
}

void sub_20C55995C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCone::ComputeExtent(_QWORD *a1, unint64_t *a2, double a3, double a4)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  float32_t v11;
  float32x2_t *v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  float32x2_t v17;
  float v18;
  float32x2_t *v19;

  v18 = 0.0;
  v17 = 0;
  v19 = &v17;
  sub_20BF5AD04(a2, 2uLL, (uint64_t **)&v19);
  v10 = sub_20C559A34(a1, (float *)&v17, a3, a4);
  if ((_DWORD)v10)
  {
    v11 = -v18;
    sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a2, v8, v9);
    v12 = (float32x2_t *)a2[4];
    *v12 = vneg_f32(v17);
    v12[1].f32[0] = v11;
    sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a2, v13, v14);
    v15 = a2[4];
    *(float32x2_t *)(v15 + 12) = v17;
    *(float *)(v15 + 20) = v18;
  }
  return v10;
}

uint64_t sub_20C559A34(_QWORD *a1, float *a2, double a3, double a4)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v9;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v10;
  uint64_t result;
  float v12;
  float v13;
  float v14;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if ((*a1 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v8 + 166) & 0xFFFFFFFFFFFFFFF8))
  {
    v12 = a3 * 0.5;
    v13 = a4;
    v14 = v13;
  }
  else
  {
    v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9)
      v9 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if ((*a1 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v9 + 168) & 0xFFFFFFFFFFFFFFF8))
    {
      v12 = a4;
      v13 = a3 * 0.5;
      v14 = v12;
    }
    else
    {
      v10 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v10)
        v10 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if ((*a1 & 0xFFFFFFFFFFFFFFF8) != (*((_QWORD *)v10 + 169) & 0xFFFFFFFFFFFFFFF8))
        return 0;
      v12 = a4;
      v14 = a3 * 0.5;
      v13 = v12;
    }
  }
  *a2 = v12;
  a2[1] = v13;
  result = 1;
  a2[2] = v14;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCone::ComputeExtent(_QWORD *a1, const pxrInternal__aapl__pxrReserved__::GfMatrix4d *a2, unint64_t *a3, double a4, double a5)
{
  uint64_t v10;
  float32x2_t v11;
  float32_t v12;
  float32x2_t v13;
  uint64_t v14;
  char *v15;
  float32x2_t *v16;
  float v17;
  float32x2_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  float64x2_t v23;
  double v24;
  float64x2_t v25;
  double v26;
  _OWORD v27[19];
  char v28;
  _BYTE v29[12];

  DWORD2(v27[0]) = 0;
  *(_QWORD *)&v27[0] = 0;
  *(_QWORD *)&v23.f64[0] = v27;
  sub_20BF5AD04(a3, 2uLL, (uint64_t **)&v23);
  v10 = sub_20C559A34(a1, (float *)v29, a4, a5);
  if ((_DWORD)v10)
  {
    v11 = (float32x2_t)vrev64_s32(*(int32x2_t *)v29);
    v11.f32[0] = -*(float *)&v29[8];
    v27[0] = vcvtq_f64_f32(vneg_f32(*(float32x2_t *)v29));
    v27[1] = vcvtq_f64_f32(v11);
    v27[2] = vcvtq_f64_f32(*(float32x2_t *)&v29[4]);
    pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)v27, a2);
    v28 = 0;
    pxrInternal__aapl__pxrReserved__::GfBBox3d::ComputeAlignedRange((pxrInternal__aapl__pxrReserved__::GfBBox3d *)v27, (uint64_t)&v23);
    v12 = v24;
    v13 = vcvt_f32_f64(v23);
    sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a3, v14, v15);
    v16 = (float32x2_t *)a3[4];
    *v16 = v13;
    v16[1].f32[0] = v12;
    v17 = v26;
    v18 = vcvt_f32_f64(v25);
    sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a3, v19, v20);
    v21 = a3[4];
    *(float32x2_t *)(v21 + 12) = v18;
    *(float *)(v21 + 20) = v17;
  }
  return v10;
}

void sub_20C559C74(uint64_t a1, const std::type_info *a2, char *a3)
{
  pxrInternal__aapl__pxrReserved__::TfType *v3;
  char *v4;
  std::type_info var8;

  var8.__vftable = (std::type_info_vtbl *)sub_20C559E80;
  pxrInternal__aapl__pxrReserved__::UsdGeomRegisterComputeExtentFunction(v3, &var8, v4);
}

uint64_t *sub_20C559CAC()
{
  uint64_t *v0;
  void *__p[2];
  char v4;
  void *v5[3];
  uint64_t v6;
  int v7;

  sub_20BEB59B0((uint64_t)&v6, (uint64_t)"Tf", (uint64_t)"TfType::Define");
  sub_20C556F18((unint64_t **)v5);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p, (char **)v5, 0);
  if (v4 < 0)
    operator delete(__p[0]);
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_20C559D80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  uint64_t v16;

  if (a14 < 0)
    operator delete(__p);
  if (a15)
    operator delete(a15);
  sub_20BEB24F4(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_20C559DCC(char *a1)
{
  unint64_t v2;
  unint64_t v3;
  void *__p[2];
  char v5;

  v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  if (v5 < 0)
    operator delete(__p[0]);
  v3 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  if (v5 < 0)
    operator delete(__p[0]);
  pxrInternal__aapl__pxrReserved__::TfType::AddAlias((uint64_t *)&v3, v2, a1);
}

void sub_20C559E5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C559E80(pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a1, uint64_t a2, const pxrInternal__aapl__pxrReserved__::GfMatrix4d *a3, unint64_t *a4)
{
  char v6;
  char v7;
  unsigned int *v8;
  unsigned int v9;
  char v10;
  char v11;
  unsigned int *v12;
  unsigned int v13;
  char v14;
  char v15;
  unsigned int *v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v23;
  double v24;
  double v25;
  char *v26;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  void (**v31)(pxrInternal__aapl__pxrReserved__::UsdGeomCone *__hidden);
  uint64_t v32;

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v31, a1);
  v31 = off_24C53C578;
  if (!v32
    || (*(_BYTE *)(v32 + 57) & 8) != 0
    || (pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v31) & 1) == 0)
  {
    v26 = "usdGeom/cone.cpp";
    v27 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"_ComputeExtentForCone";
    v28 = 286;
    v29 = (unint64_t)"BOOL pxrInternal__aapl__pxrReserved__::_ComputeExtentForCone(const UsdGeomBoundable &, const"
                            " UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)";
    v30 = 0;
    if ((pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v26, "coneSchema", 0) & 1) == 0)
      goto LABEL_32;
  }
  v25 = 0.0;
  pxrInternal__aapl__pxrReserved__::UsdGeomCone::GetHeightAttr((pxrInternal__aapl__pxrReserved__::UsdGeomCone *)&v31, (uint64_t)&v26);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<double>((uint64_t)&v26, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v25);
  v7 = v6;
  if ((v29 & 7) != 0)
  {
    v8 = (unsigned int *)(v29 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v28 + 1);
  sub_20BFD265C(&v28);
  if (v27)
    sub_20C35C614(v27);
  if ((v7 & 1) == 0)
    goto LABEL_32;
  v24 = 0.0;
  pxrInternal__aapl__pxrReserved__::UsdGeomCone::GetRadiusAttr((pxrInternal__aapl__pxrReserved__::UsdGeomCone *)&v31, (uint64_t)&v26);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<double>((uint64_t)&v26, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v24);
  v11 = v10;
  if ((v29 & 7) != 0)
  {
    v12 = (unsigned int *)(v29 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stlxr(v13 - 2, v12));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v28 + 1);
  sub_20BFD265C(&v28);
  if (v27)
    sub_20C35C614(v27);
  if ((v11 & 1) != 0)
  {
    v23 = 0;
    pxrInternal__aapl__pxrReserved__::UsdGeomCone::GetAxisAttr((pxrInternal__aapl__pxrReserved__::UsdGeomCone *)&v31, (uint64_t)&v26);
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::TfToken>((uint64_t)&v26, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v23);
    v15 = v14;
    if ((v29 & 7) != 0)
    {
      v16 = (unsigned int *)(v29 & 0xFFFFFFFFFFFFFFF8);
      do
        v17 = __ldxr(v16);
      while (__stlxr(v17 - 2, v16));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v28 + 1);
    sub_20BFD265C(&v28);
    if (v27)
      sub_20C35C614(v27);
    if ((v15 & 1) != 0)
    {
      if (a3)
        v18 = pxrInternal__aapl__pxrReserved__::UsdGeomCone::ComputeExtent(&v23, a3, a4, v25, v24);
      else
        v18 = pxrInternal__aapl__pxrReserved__::UsdGeomCone::ComputeExtent(&v23, a4, v25, v24);
      v19 = v18;
    }
    else
    {
      v19 = 0;
    }
    if ((v23 & 7) != 0)
    {
      v20 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stlxr(v21 - 2, v20));
    }
  }
  else
  {
LABEL_32:
    v19 = 0;
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)&v31);
  return v19;
}

void sub_20C55A0D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)va);
  _Unwind_Resume(a1);
}

void sub_20C55A14C()
{
  void *__p[2];
  char v1;

  sub_20C55ADF0();
  sub_20BDDC0E4(__p, "Cube");
  sub_20C55AF10((char *)__p);
  if (v1 < 0)
    operator delete(__p[0]);
}

void sub_20C55A198(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCube::~UsdGeomCube(pxrInternal__aapl__pxrReserved__::UsdGeomCube *this)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim(this);
  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCube::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t (*v6)(uint64_t *);
  char v7;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;

  v6 = sub_20C369024(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v13);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C5D0;
    if ((v16 & 7) != 0)
    {
      v9 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
  }
  else
  {
    v13 = "usdGeom/cube.cpp";
    v14 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Get";
    v15 = 57;
    v16 = (unint64_t)"static UsdGeomCube pxrInternal__aapl__pxrReserved__::UsdGeomCube::Get(const UsdStagePtr &, const SdfPath &)";
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v13, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v13) = 1;
    v14 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v15);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v15 + 1);
    v16 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C5D0;
    if ((v16 & 7) != 0)
    {
      v11 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stlxr(v12 - 2, v11));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v15 + 1);
  sub_20BFD265C(&v15);
  if (v14)
    sub_20C35C614(v14);
}

void sub_20C55A33C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCube::Define(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  unsigned __int8 v6;
  uint64_t (*v7)(uint64_t *);
  char v8;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int v13;
  char *v14;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;

  v6 = atomic_load((unsigned __int8 *)&qword_254989620);
  if ((v6 & 1) == 0 && __cxa_guard_acquire(&qword_254989620))
  {
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&qword_254989618, "Cube");
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &qword_254989618, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989620);
  }
  v7 = sub_20C369024(a1);
  if (v8 & 1 | (unint64_t)v7)
  {
    v9 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::DefinePrim(v9, a2, &qword_254989618, (uint64_t)&v14);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v14);
    *(_QWORD *)a3 = off_24C53C5D0;
    if ((v17 & 7) != 0)
    {
      v10 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v11 = __ldxr(v10);
      while (__stlxr(v11 - 2, v10));
    }
  }
  else
  {
    v14 = "usdGeom/cube.cpp";
    v15 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Define";
    v16 = 70;
    v17 = (unint64_t)"static UsdGeomCube pxrInternal__aapl__pxrReserved__::UsdGeomCube::Define(const UsdStagePtr &"
                            ", const SdfPath &)";
    v18 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v14, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v14) = 1;
    v15 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v16);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v16 + 1);
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v14);
    *(_QWORD *)a3 = off_24C53C5D0;
    if ((v17 & 7) != 0)
    {
      v12 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v13 = __ldxr(v12);
      while (__stlxr(v13 - 2, v12));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v16 + 1);
  sub_20BFD265C(&v16);
  if (v15)
    sub_20C35C614(v15);
}

void sub_20C55A52C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989620);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCube::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomCube *this)
{
  return 3;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCube::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCube *this)
{
  unsigned __int8 v1;
  const std::type_info *v3;
  char *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_254989630);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_254989630))
  {
    __cxa_guard_release(&qword_254989630);
  }
  return &qword_254989628;
}

void sub_20C55A5D0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989630);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCube::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomCube *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::UsdGeomCube *v3;
  const std::type_info *v4;
  char *v5;

  v1 = atomic_load((unsigned __int8 *)&qword_254989640);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomCube *)__cxa_guard_acquire(&qword_254989640);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomCube::_GetStaticTfType(v3);
      byte_254989638 = sub_20C35BD7C((char *)&qword_254989628, v4, v5);
      __cxa_guard_release(&qword_254989640);
    }
  }
  return byte_254989638;
}

void sub_20C55A64C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989640);
  _Unwind_Resume(a1);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCube::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCube *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomCube::_GetStaticTfType(this);
  return &qword_254989628;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCube::GetSizeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCube *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1008), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C55A724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCube::CreateSizeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCube *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1008), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCube::GetExtentAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCube *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 296), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C55A87C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCube::CreateExtentAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCube *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 296), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 616), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCube::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomCube *this)
{
  int v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v9;
  unsigned int *v10;
  unsigned int *v11;
  unsigned int v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  uint64_t *SchemaAttributeNames;
  uint64_t v19;
  unsigned int *v20;
  uint64_t v21;

  v1 = (int)this;
  v21 = *MEMORY[0x24BDAC8D0];
  v2 = atomic_load((unsigned __int8 *)&qword_254989660);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254989660))
  {
    v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5)
      v5 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v6 = *((_QWORD *)v5 + 126);
    v19 = v6;
    if ((v6 & 7) != 0)
    {
      v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 2, v7));
      if ((v8 & 1) == 0)
        v19 = (uint64_t)v7;
    }
    v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9)
      v9 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v10 = (unsigned int *)*((_QWORD *)v9 + 37);
    v20 = v10;
    if ((v10 & 7) != 0)
    {
      v11 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 2, v11));
      if ((v12 & 1) == 0)
        v20 = v11;
    }
    sub_20C374970(&qword_254989648, &v19, 2uLL);
    v13 = &v21;
    do
    {
      v15 = *--v13;
      v14 = v15;
      if ((v15 & 7) != 0)
      {
        v16 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
        do
          v17 = __ldxr(v16);
        while (__stlxr(v17 - 2, v16));
      }
    }
    while (v13 != &v19);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_254989648, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989660);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254989680);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254989680))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)1);
    sub_20C55AB94((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_254989668, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989680);
  }
  if (v1)
    return &qword_254989668;
  else
    return &qword_254989648;
}

void sub_20C55AB10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  unsigned int *v11;
  unsigned int v12;

  if ((a10 & 7) != 0)
  {
    v11 = (unsigned int *)(a10 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stlxr(v12 - 2, v11));
  }
  __cxa_guard_abort(&qword_254989660);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C55AB94(uint64_t **a1)
{
  qword_254989670 = 0;
  unk_254989678 = 0;
  qword_254989668 = 0;
  sub_20BFC9A6C((char **)&qword_254989668, ((*(_QWORD *)algn_254989650 - qword_254989648) >> 3) + a1[1] - *a1);
  sub_20C1292A0(&qword_254989668, (_QWORD *)qword_254989670, *a1, a1[1], a1[1] - *a1);
  return sub_20C1292A0(&qword_254989668, (_QWORD *)qword_254989670, (uint64_t *)qword_254989648, *(uint64_t **)algn_254989650, (*(_QWORD *)algn_254989650 - qword_254989648) >> 3);
}

void sub_20C55AC28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCube::ComputeExtent(unint64_t *a1, double a2)
{
  float v4;
  uint64_t v5;
  char *v6;
  float *v7;
  uint64_t v8;
  char *v9;
  _DWORD *v10;
  uint64_t v12;
  int v13;
  uint64_t *v14;

  v13 = 0;
  v12 = 0;
  v14 = &v12;
  sub_20BF5AD04(a1, 2uLL, &v14);
  v4 = a2 * -0.5;
  sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a1, v5, v6);
  v7 = (float *)a1[4];
  *v7 = v4;
  v7[1] = v4;
  v7[2] = v4;
  *(float *)&a2 = a2 * 0.5;
  sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a1, v8, v9);
  v10 = (_DWORD *)a1[4];
  v10[3] = LODWORD(a2);
  v10[4] = LODWORD(a2);
  v10[5] = LODWORD(a2);
  return 1;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCube::ComputeExtent(const pxrInternal__aapl__pxrReserved__::GfMatrix4d *a1, unint64_t *a2, double a3)
{
  float32x2_t v6;
  uint64_t v7;
  char *v8;
  float32x2_t *v9;
  float32x2_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  float64x2_t v15;
  double v16;
  float64x2_t v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  char v25;

  LODWORD(v20) = 0;
  v19 = 0.0;
  *(_QWORD *)&v15.f64[0] = &v19;
  sub_20BF5AD04(a2, 2uLL, (uint64_t **)&v15);
  v19 = a3 * -0.5;
  v20 = a3 * -0.5;
  v21 = a3 * -0.5;
  v22 = a3 * 0.5;
  v23 = a3 * 0.5;
  v24 = a3 * 0.5;
  pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)&v19, a1);
  v25 = 0;
  pxrInternal__aapl__pxrReserved__::GfBBox3d::ComputeAlignedRange((pxrInternal__aapl__pxrReserved__::GfBBox3d *)&v19, (uint64_t)&v15);
  *(float *)&a3 = v16;
  v6 = vcvt_f32_f64(v15);
  sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a2, v7, v8);
  v9 = (float32x2_t *)a2[4];
  *v9 = v6;
  v9[1].i32[0] = LODWORD(a3);
  *(float *)&a3 = v18;
  v10 = vcvt_f32_f64(v17);
  sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a2, v11, v12);
  v13 = a2[4];
  *(float32x2_t *)(v13 + 12) = v10;
  *(_DWORD *)(v13 + 20) = LODWORD(a3);
  return 1;
}

void sub_20C55ADB8(uint64_t a1, const std::type_info *a2, char *a3)
{
  pxrInternal__aapl__pxrReserved__::TfType *v3;
  char *v4;
  std::type_info var8;

  var8.__vftable = (std::type_info_vtbl *)sub_20C55AFC4;
  pxrInternal__aapl__pxrReserved__::UsdGeomRegisterComputeExtentFunction(v3, &var8, v4);
}

uint64_t *sub_20C55ADF0()
{
  uint64_t *v0;
  void *__p[2];
  char v4;
  void *v5[3];
  uint64_t v6;
  int v7;

  sub_20BEB59B0((uint64_t)&v6, (uint64_t)"Tf", (uint64_t)"TfType::Define");
  sub_20C556F18((unint64_t **)v5);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p, (char **)v5, 0);
  if (v4 < 0)
    operator delete(__p[0]);
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_20C55AEC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  uint64_t v16;

  if (a14 < 0)
    operator delete(__p);
  if (a15)
    operator delete(a15);
  sub_20BEB24F4(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_20C55AF10(char *a1)
{
  unint64_t v2;
  unint64_t v3;
  void *__p[2];
  char v5;

  v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  if (v5 < 0)
    operator delete(__p[0]);
  v3 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  if (v5 < 0)
    operator delete(__p[0]);
  pxrInternal__aapl__pxrReserved__::TfType::AddAlias((uint64_t *)&v3, v2, a1);
}

void sub_20C55AFA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C55AFC4(pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a1, uint64_t a2, const pxrInternal__aapl__pxrReserved__::GfMatrix4d *a3, unint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  double v11;
  char *v12;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  void (**v17)(pxrInternal__aapl__pxrReserved__::UsdGeomCube *__hidden);
  uint64_t v18;

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v17, a1);
  v17 = off_24C53C5D0;
  if (v18
    && (*(_BYTE *)(v18 + 57) & 8) == 0
    && (pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v17) & 1) != 0
    || (v12 = "usdGeom/cube.cpp",
        v13 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"_ComputeExtentForCube",
        v14 = 223,
        v15 = (unint64_t)"BOOL pxrInternal__aapl__pxrReserved__::_ComputeExtentForCube(const UsdGeomBoundable &, c"
                                "onst UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)",
        v16 = 0,
        (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v12, "cubeSchema", 0) & 1) != 0))
  {
    v11 = 0.0;
    pxrInternal__aapl__pxrReserved__::UsdGeomCube::GetSizeAttr((pxrInternal__aapl__pxrReserved__::UsdGeomCube *)&v17, (uint64_t)&v12);
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<double>((uint64_t)&v12, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v11);
    v7 = v6;
    if ((v15 & 7) != 0)
    {
      v8 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
      do
        v9 = __ldxr(v8);
      while (__stlxr(v9 - 2, v8));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v14 + 1);
    sub_20BFD265C(&v14);
    if (v13)
      sub_20C35C614(v13);
    if ((v7 & 1) != 0)
    {
      if (a3)
        pxrInternal__aapl__pxrReserved__::UsdGeomCube::ComputeExtent(a3, a4, v11);
      else
        pxrInternal__aapl__pxrReserved__::UsdGeomCube::ComputeExtent(a4, v11);
    }
  }
  else
  {
    v7 = 0;
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)&v17);
  return v7;
}

void sub_20C55B108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCurves::~UsdGeomCurves(pxrInternal__aapl__pxrReserved__::UsdGeomCurves *this)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::~UsdGeomPointBased(this);
  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCurves::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t (*v6)(uint64_t *);
  char v7;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;

  v6 = sub_20C369024(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v13);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C628;
    if ((v16 & 7) != 0)
    {
      v9 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
  }
  else
  {
    v13 = "usdGeom/curves.cpp";
    v14 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Get";
    v15 = 51;
    v16 = (unint64_t)"static UsdGeomCurves pxrInternal__aapl__pxrReserved__::UsdGeomCurves::Get(const UsdStagePtr "
                            "&, const SdfPath &)";
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v13, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v13) = 1;
    v14 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v15);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v15 + 1);
    v16 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C628;
    if ((v16 & 7) != 0)
    {
      v11 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stlxr(v12 - 2, v11));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v15 + 1);
  sub_20BFD265C(&v15);
  if (v14)
    sub_20C35C614(v14);
}

void sub_20C55B2C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCurves::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomCurves *this)
{
  return 2;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCurves::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCurves *this)
{
  unsigned __int8 v1;
  const std::type_info *v3;
  char *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_254989690);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_254989690))
  {
    __cxa_guard_release(&qword_254989690);
  }
  return &qword_254989688;
}

void sub_20C55B354(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989690);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCurves::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomCurves *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::UsdGeomCurves *v3;
  const std::type_info *v4;
  char *v5;

  v1 = atomic_load((unsigned __int8 *)&qword_2549896A0);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomCurves *)__cxa_guard_acquire(&qword_2549896A0);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomCurves::_GetStaticTfType(v3);
      byte_254989698 = sub_20C35BD7C((char *)&qword_254989688, v4, v5);
      __cxa_guard_release(&qword_2549896A0);
    }
  }
  return byte_254989698;
}

void sub_20C55B3D0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2549896A0);
  _Unwind_Resume(a1);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCurves::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCurves *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomCurves::_GetStaticTfType(this);
  return &qword_254989688;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetCurveVertexCountsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCurves *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 224), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C55B4A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCurves::CreateCurveVertexCountsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCurves *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 224), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 464), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetWidthsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCurves *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1312), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C55B600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCurves::CreateWidthsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCurves *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1312), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 512), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomCurves *this)
{
  int v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v9;
  unsigned int *v10;
  unsigned int *v11;
  unsigned int v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  uint64_t *SchemaAttributeNames;
  uint64_t v19;
  unsigned int *v20;
  uint64_t v21;

  v1 = (int)this;
  v21 = *MEMORY[0x24BDAC8D0];
  v2 = atomic_load((unsigned __int8 *)&qword_2549896C0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2549896C0))
  {
    v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5)
      v5 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v6 = *((_QWORD *)v5 + 28);
    v19 = v6;
    if ((v6 & 7) != 0)
    {
      v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 2, v7));
      if ((v8 & 1) == 0)
        v19 = (uint64_t)v7;
    }
    v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9)
      v9 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v10 = (unsigned int *)*((_QWORD *)v9 + 164);
    v20 = v10;
    if ((v10 & 7) != 0)
    {
      v11 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 2, v11));
      if ((v12 & 1) == 0)
        v20 = v11;
    }
    sub_20C374970(&qword_2549896A8, &v19, 2uLL);
    v13 = &v21;
    do
    {
      v15 = *--v13;
      v14 = v15;
      if ((v15 & 7) != 0)
      {
        v16 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
        do
          v17 = __ldxr(v16);
        while (__stlxr(v17 - 2, v16));
      }
    }
    while (v13 != &v19);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_2549896A8, &dword_20BDBC000);
    __cxa_guard_release(&qword_2549896C0);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_2549896E0);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2549896E0))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *)1);
    sub_20C55B918((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_2549896C8, &dword_20BDBC000);
    __cxa_guard_release(&qword_2549896E0);
  }
  if (v1)
    return &qword_2549896C8;
  else
    return &qword_2549896A8;
}

void sub_20C55B894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  unsigned int *v11;
  unsigned int v12;

  if ((a10 & 7) != 0)
  {
    v11 = (unsigned int *)(a10 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stlxr(v12 - 2, v11));
  }
  __cxa_guard_abort(&qword_2549896C0);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C55B918(uint64_t **a1)
{
  qword_2549896D0 = 0;
  unk_2549896D8 = 0;
  qword_2549896C8 = 0;
  sub_20BFC9A6C((char **)&qword_2549896C8, ((*(_QWORD *)algn_2549896B0 - qword_2549896A8) >> 3) + a1[1] - *a1);
  sub_20C1292A0(&qword_2549896C8, (_QWORD *)qword_2549896D0, *a1, a1[1], a1[1] - *a1);
  return sub_20C1292A0(&qword_2549896C8, (_QWORD *)qword_2549896D0, (uint64_t *)qword_2549896A8, *(uint64_t **)algn_2549896B0, (*(_QWORD *)algn_2549896B0 - qword_2549896A8) >> 3);
}

void sub_20C55B9AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetWidthsInterpolation(pxrInternal__aapl__pxrReserved__::UsdGeomCurves *this@<X0>, unsigned int **a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  _BOOL4 v4;
  unsigned int *v5;
  unsigned int v6;
  unsigned int *v7;
  unsigned int v8;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v9;
  unsigned int *v10;
  unsigned int *v11;
  unsigned int v12;
  unsigned int *v13;
  unsigned int v14;
  uint64_t v15;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v16;
  int v17;
  int v18;
  uint64_t v19;
  unsigned int *v20;
  uint64_t v21;

  v20 = 0;
  pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetWidthsAttr(this, (uint64_t)&v15);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v21 = 0;
  v4 = sub_20C361F00((uint64_t)&v15, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 488), (uint64_t)&v20, &v21);
  if ((v21 & 7) != 0)
  {
    v5 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
  if ((v19 & 7) != 0)
  {
    v7 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stlxr(v8 - 2, v7));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v18);
  sub_20BFD265C(&v17);
  if (v16)
    sub_20C35C614(v16);
  if (v4)
  {
    *a2 = v20;
    v20 = 0;
  }
  else
  {
    v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9)
      v9 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v10 = (unsigned int *)*((_QWORD *)v9 + 153);
    *a2 = v10;
    if ((v10 & 7) != 0)
    {
      v11 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 2, v11));
      if ((v12 & 1) == 0)
        *a2 = v11;
    }
  }
  if ((v20 & 7) != 0)
  {
    v13 = (unsigned int *)((unint64_t)v20 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
}

void sub_20C55BB18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  unsigned int *v14;
  unsigned int v15;

  if ((a13 & 7) != 0)
  {
    v14 = (unsigned int *)(a13 & 0xFFFFFFFFFFFFFFF8);
    do
      v15 = __ldxr(v14);
    while (__stlxr(v15 - 2, v14));
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCurves::SetWidthsInterpolation(pxrInternal__aapl__pxrReserved__::UsdGeomCurves *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unint64_t v10;
  const char *v11;
  uint64_t *String;
  const char *v13;
  unsigned int *v14;
  unsigned int v15;
  uint64_t v17;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v18;
  int v19;
  int v20;
  uint64_t v21;
  int v22;
  int v23;
  char *v24;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v25;
  uint64_t v26;
  unint64_t v27;
  char v28;

  if (pxrInternal__aapl__pxrReserved__::UsdGeomPrimvar::IsValidInterpolation(a2, a2))
  {
    pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetWidthsAttr(this, (uint64_t)&v24);
    v4 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v4)
      v4 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v17 = 0;
    v5 = sub_20C361C9C((uint64_t)&v24, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v4 + 488), (uint64_t (**)(_QWORD, uint64_t))a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v17);
    if ((v17 & 7) != 0)
    {
      v6 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v7 = __ldxr(v6);
      while (__stlxr(v7 - 2, v6));
    }
    if ((v27 & 7) != 0)
    {
      v8 = (unsigned int *)(v27 & 0xFFFFFFFFFFFFFFF8);
      do
        v9 = __ldxr(v8);
      while (__stlxr(v9 - 2, v8));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v26 + 1);
    sub_20BFD265C(&v26);
    if (v25)
      sub_20C35C614(v25);
  }
  else
  {
    v24 = "usdGeom/curves.cpp";
    v25 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"SetWidthsInterpolation";
    v26 = 194;
    v27 = (unint64_t)"BOOL pxrInternal__aapl__pxrReserved__::UsdGeomCurves::SetWidthsInterpolation(const TfToken &)";
    v28 = 0;
    v10 = *(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8;
    if (v10)
    {
      v11 = (const char *)(v10 + 16);
      if (*(char *)(v10 + 39) < 0)
        v11 = *(const char **)v11;
    }
    else
    {
      v11 = "";
    }
    sub_20C35C4F8((uint64_t)&v17, (uint64_t *)this + 1, (_DWORD *)this + 4);
    sub_20C348EEC((uint64_t)&v17, &v22);
    String = pxrInternal__aapl__pxrReserved__::SdfPath::GetString((pxrInternal__aapl__pxrReserved__::SdfPath *)&v22);
    if (*((char *)String + 23) >= 0)
      v13 = (const char *)String;
    else
      v13 = (const char *)*String;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v24, 1, (pxrInternal__aapl__pxrReserved__ *)"Attempt to set invalid interpolation \"%s\" for widths attr on prim %s", v11, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v23);
    sub_20BFD265C(&v22);
    if ((v21 & 7) != 0)
    {
      v14 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
    sub_20BFD265C(&v19);
    if (v18)
      sub_20C35C614(v18);
    return 0;
  }
  return v5;
}

void sub_20C55BD5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_20C372B54((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCurves::ComputeExtent(_QWORD *a1, uint64_t *a2, unint64_t *a3, int32x2_t a4)
{
  uint64_t v5;
  float *v6;
  float *v7;
  float v8;
  uint64_t v9;
  float *v10;
  float v11;
  float v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  float32x2_t *v16;
  float32x2_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  int32x2_t v22;

  v5 = *a2;
  if (*a2)
  {
    v6 = (float *)a2[4];
    if (v5 != 1)
    {
      v7 = v6 + 1;
      v8 = *v6;
      v9 = 4 * v5 - 4;
      v10 = v6 + 1;
      do
      {
        v11 = *v10++;
        v12 = v11;
        if (v8 < v11)
        {
          v8 = v12;
          v6 = v7;
        }
        v7 = v10;
        v9 -= 4;
      }
      while (v9);
    }
    *(float *)a4.i32 = *v6 * 0.5;
  }
  else
  {
    a4.i32[0] = 0;
  }
  v22 = a4;
  v15 = pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::ComputeExtent(a1, a3);
  if ((_DWORD)v15)
  {
    sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a3, v13, v14);
    v16 = (float32x2_t *)a3[4];
    v17 = (float32x2_t)vdup_lane_s32(v22, 0);
    *v16 = vsub_f32(*v16, v17);
    v16[1].f32[0] = v16[1].f32[0] - *(float *)v22.i32;
    sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a3, v18, v19);
    v20 = a3[4];
    *(float32x2_t *)(v20 + 12) = vadd_f32(v17, *(float32x2_t *)(v20 + 12));
    *(float *)(v20 + 20) = *(float *)v22.i32 + *(float *)(v20 + 20);
  }
  return v15;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCurves::ComputeExtent(uint64_t *a1, uint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v6;
  float *v7;
  float *v8;
  float v9;
  uint64_t v10;
  float *v11;
  float v12;
  float v13;
  double v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  float *v22;
  uint64_t v23;
  char *v24;
  float *v25;
  float v26;
  uint64_t v27;
  char *v28;
  float *v29;
  uint64_t v30;
  char *v31;
  float *v32;
  float v33;
  _QWORD v35[3];
  _OWORD v36[8];
  unint64_t v37[4];
  float *v38;

  v6 = *a2;
  if (*a2)
  {
    v7 = (float *)a2[4];
    if (v6 != 1)
    {
      v8 = v7 + 1;
      v9 = *v7;
      v10 = 4 * v6 - 4;
      v11 = v7 + 1;
      do
      {
        v12 = *v11++;
        v13 = v12;
        if (v9 < v12)
        {
          v9 = v13;
          v7 = v8;
        }
        v8 = v11;
        v10 -= 4;
      }
      while (v10);
    }
    v14 = *v7 * 0.5;
  }
  else
  {
    v14 = 0.0;
  }
  if (!pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::ComputeExtent(a1, (float64x2_t *)a3, a4))
    return 0;
  v38 = 0;
  v15 = *(_OWORD *)(a3 + 80);
  v36[4] = *(_OWORD *)(a3 + 64);
  v36[5] = v15;
  v16 = *(_OWORD *)(a3 + 112);
  v36[6] = *(_OWORD *)(a3 + 96);
  memset(v37, 0, sizeof(v37));
  v36[7] = v16;
  v17 = *(_OWORD *)(a3 + 16);
  v36[0] = *(_OWORD *)a3;
  v36[1] = v17;
  v18 = *(_OWORD *)(a3 + 48);
  v36[2] = *(_OWORD *)(a3 + 32);
  v36[3] = v18;
  memset(v35, 0, sizeof(v35));
  pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetTranslateOnly((uint64_t)v36, (uint64_t)v35);
  v21 = pxrInternal__aapl__pxrReserved__::UsdGeomSphere::ComputeExtent((const pxrInternal__aapl__pxrReserved__::GfMatrix4d *)v36, v37, v14);
  if ((v21 & 1) != 0)
  {
    sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)v37, v19, v20);
    v22 = v38;
    sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a4, v23, v24);
    v25 = (float *)a4[4];
    v26 = v25[1];
    *v25 = *v22 + *v25;
    v25[1] = v22[1] + v26;
    v25[2] = v22[2] + v25[2];
    sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)v37, v27, v28);
    v29 = v38;
    sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a4, v30, v31);
    v32 = (float *)a4[4];
    v33 = v32[4];
    v32[3] = v29[3] + v32[3];
    v32[4] = v29[4] + v33;
    v32[5] = v29[5] + v32[5];
  }
  sub_20BF5618C((uint64_t)v37);
  return v21;
}

void sub_20C55C05C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BF5618C(v1 - 96);
  _Unwind_Resume(a1);
}

void sub_20C55C078(uint64_t a1, const std::type_info *a2, char *a3)
{
  pxrInternal__aapl__pxrReserved__::TfType *v3;
  char *v4;
  std::type_info var8;

  var8.__vftable = (std::type_info_vtbl *)sub_20C55C328;
  pxrInternal__aapl__pxrReserved__::UsdGeomRegisterComputeExtentFunction(v3, &var8, v4);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetCurveCount(pxrInternal__aapl__pxrReserved__::UsdGeomCurves *a1)
{
  uint64_t v1;
  unsigned int *v2;
  unsigned int v3;
  _OWORD v5[2];
  uint64_t v6;
  _BYTE v7[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  int v9;
  int v10;
  uint64_t v11;

  pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetCurveVertexCountsAttr(a1, (uint64_t)v7);
  v6 = 0;
  memset(v5, 0, sizeof(v5));
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<int>>((uint64_t)v7, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v5);
  v1 = *(_QWORD *)&v5[0];
  sub_20BF5618C((uint64_t)v5);
  if ((v11 & 7) != 0)
  {
    v2 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v3 = __ldxr(v2);
    while (__stlxr(v3 - 2, v2));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v10);
  sub_20BFD265C(&v9);
  if (v8)
    sub_20C35C614(v8);
  return v1;
}

void sub_20C55C158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  sub_20BF5618C((uint64_t)&a9);
  sub_20C372B54((uint64_t)&a15);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C55C178()
{
  uint64_t *v0;
  void *__p[2];
  char v4;
  void *v5[3];
  uint64_t v6;
  int v7;

  sub_20BEB59B0((uint64_t)&v6, (uint64_t)"Tf", (uint64_t)"TfType::Define");
  sub_20C55C298((unint64_t **)v5);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p, (char **)v5, 0);
  if (v4 < 0)
    operator delete(__p[0]);
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_20C55C24C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  uint64_t v16;

  if (a14 < 0)
    operator delete(__p);
  if (a15)
    operator delete(a15);
  sub_20BEB24F4(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_20C55C298(unint64_t **a1@<X8>)
{
  unint64_t v2;
  unint64_t *v3;
  void *__p[2];
  char v5;

  v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  v3 = (unint64_t *)operator new(8uLL);
  *a1 = v3;
  *v3++ = v2;
  a1[1] = v3;
  a1[2] = v3;
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C55C304(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C55C328(pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase *v6;
  char v7;
  char v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  int32x2_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v18;
  int v19;
  int v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  void (**v28)(pxrInternal__aapl__pxrReserved__::UsdGeomCurves *__hidden);
  uint64_t v29;

  v6 = pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v28, a1);
  v28 = off_24C53C628;
  if (v29
    && (*(_BYTE *)(v29 + 57) & 8) == 0
    && (pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible(v6) & 1) != 0
    || (*(_QWORD *)&v25 = "usdGeom/curves.cpp",
        *((_QWORD *)&v25 + 1) = "_ComputeExtentForCurves",
        *(_QWORD *)&v26 = 278,
        *((_QWORD *)&v26 + 1) = "BOOL pxrInternal__aapl__pxrReserved__::_ComputeExtentForCurves(const UsdGeomBoundable &,"
                                " const UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)",
        LOBYTE(v27) = 0,
        (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v25, "curves", 0) & 1) != 0))
  {
    v27 = 0;
    v25 = 0u;
    v26 = 0u;
    pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::GetPointsAttr((pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *)&v28, (uint64_t)&v22);
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::GfVec3f>>((uint64_t)&v22, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v25);
    v8 = v7;
    if ((BYTE8(v23) & 7) != 0)
    {
      v9 = (unsigned int *)(*((_QWORD *)&v23 + 1) & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v23 + 1);
    sub_20BFD265C(&v23);
    if (*((_QWORD *)&v22 + 1))
      sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v22 + 1));
    if ((v8 & 1) != 0)
    {
      v24 = 0;
      v22 = 0u;
      v23 = 0u;
      pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetWidthsAttr((pxrInternal__aapl__pxrReserved__::UsdGeomCurves *)&v28, (uint64_t)&v17);
      pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<float>>((uint64_t)&v17, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v22);
      if ((v21 & 7) != 0)
      {
        v11 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
        do
          v12 = __ldxr(v11);
        while (__stlxr(v12 - 2, v11));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_20BFD265C(&v19);
      if (v18)
        sub_20C35C614(v18);
      if (a3)
        v14 = pxrInternal__aapl__pxrReserved__::UsdGeomCurves::ComputeExtent((uint64_t *)&v25, (uint64_t *)&v22, a3, a4);
      else
        v14 = pxrInternal__aapl__pxrReserved__::UsdGeomCurves::ComputeExtent(&v25, (uint64_t *)&v22, a4, v13);
      v15 = v14;
      sub_20BF5618C((uint64_t)&v22);
    }
    else
    {
      v15 = 0;
    }
    sub_20BF5618C((uint64_t)&v25);
  }
  else
  {
    v15 = 0;
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::~UsdGeomPointBased((pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *)&v28);
  return v15;
}

void sub_20C55C508(_Unwind_Exception *a1)
{
  uint64_t v1;

  pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::~UsdGeomPointBased((pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *)(v1 - 72));
  _Unwind_Resume(a1);
}

void sub_20C55C57C()
{
  void *__p[2];
  char v1;

  sub_20C55D604();
  sub_20BDDC0E4(__p, "Cylinder");
  sub_20C55D724((char *)__p);
  if (v1 < 0)
    operator delete(__p[0]);
}

void sub_20C55C5C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::~UsdGeomCylinder(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *this)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim(this);
  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t (*v6)(uint64_t *);
  char v7;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;

  v6 = sub_20C369024(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v13);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C680;
    if ((v16 & 7) != 0)
    {
      v9 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
  }
  else
  {
    v13 = "usdGeom/cylinder.cpp";
    v14 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Get";
    v15 = 57;
    v16 = (unint64_t)"static UsdGeomCylinder pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::Get(const UsdStage"
                            "Ptr &, const SdfPath &)";
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v13, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v13) = 1;
    v14 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v15);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v15 + 1);
    v16 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C680;
    if ((v16 & 7) != 0)
    {
      v11 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stlxr(v12 - 2, v11));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v15 + 1);
  sub_20BFD265C(&v15);
  if (v14)
    sub_20C35C614(v14);
}

void sub_20C55C76C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::Define(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  unsigned __int8 v6;
  uint64_t (*v7)(uint64_t *);
  char v8;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int v13;
  char *v14;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;

  v6 = atomic_load((unsigned __int8 *)&qword_2549896F0);
  if ((v6 & 1) == 0 && __cxa_guard_acquire(&qword_2549896F0))
  {
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&qword_2549896E8, "Cylinder");
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &qword_2549896E8, &dword_20BDBC000);
    __cxa_guard_release(&qword_2549896F0);
  }
  v7 = sub_20C369024(a1);
  if (v8 & 1 | (unint64_t)v7)
  {
    v9 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::DefinePrim(v9, a2, &qword_2549896E8, (uint64_t)&v14);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v14);
    *(_QWORD *)a3 = off_24C53C680;
    if ((v17 & 7) != 0)
    {
      v10 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v11 = __ldxr(v10);
      while (__stlxr(v11 - 2, v10));
    }
  }
  else
  {
    v14 = "usdGeom/cylinder.cpp";
    v15 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Define";
    v16 = 70;
    v17 = (unint64_t)"static UsdGeomCylinder pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::Define(const UsdSt"
                            "agePtr &, const SdfPath &)";
    v18 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v14, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v14) = 1;
    v15 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v16);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v16 + 1);
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v14);
    *(_QWORD *)a3 = off_24C53C680;
    if ((v17 & 7) != 0)
    {
      v12 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v13 = __ldxr(v12);
      while (__stlxr(v13 - 2, v12));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v16 + 1);
  sub_20BFD265C(&v16);
  if (v15)
    sub_20C35C614(v15);
}

void sub_20C55C95C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2549896F0);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *this)
{
  return 3;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *this)
{
  unsigned __int8 v1;
  const std::type_info *v3;
  char *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_254989700);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_254989700))
  {
    __cxa_guard_release(&qword_254989700);
  }
  return &qword_2549896F8;
}

void sub_20C55CA00(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989700);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *v3;
  const std::type_info *v4;
  char *v5;

  v1 = atomic_load((unsigned __int8 *)&qword_254989710);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *)__cxa_guard_acquire(&qword_254989710);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::_GetStaticTfType(v3);
      byte_254989708 = sub_20C35BD7C((char *)&qword_2549896F8, v4, v5);
      __cxa_guard_release(&qword_254989710);
    }
  }
  return byte_254989708;
}

void sub_20C55CA7C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989710);
  _Unwind_Resume(a1);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::_GetStaticTfType(this);
  return &qword_2549896F8;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::GetHeightAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 408), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C55CB54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::CreateHeightAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 408), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::GetRadiusAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 920), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C55CCAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::CreateRadiusAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 920), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::GetAxisAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 24), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C55CE04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::CreateAxisAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 24), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::GetExtentAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 296), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C55CF5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::CreateExtentAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 296), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 616), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *this)
{
  int v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v17;
  uint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  uint64_t *SchemaAttributeNames;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = (int)this;
  v31 = *MEMORY[0x24BDAC8D0];
  v2 = atomic_load((unsigned __int8 *)&qword_254989730);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254989730))
  {
    v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5)
      v5 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v6 = *((_QWORD *)v5 + 51);
    v27 = v6;
    if ((v6 & 7) != 0)
    {
      v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 2, v7));
      if ((v8 & 1) == 0)
        v27 &= 0xFFFFFFFFFFFFFFF8;
    }
    v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9)
      v9 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v10 = *((_QWORD *)v9 + 115);
    v28 = v10;
    if ((v10 & 7) != 0)
    {
      v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 2, v11));
      if ((v12 & 1) == 0)
        v28 &= 0xFFFFFFFFFFFFFFF8;
    }
    v13 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v13)
      v13 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v14 = *((_QWORD *)v13 + 3);
    v29 = v14;
    if ((v14 & 7) != 0)
    {
      v15 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 2, v15));
      if ((v16 & 1) == 0)
        v29 &= 0xFFFFFFFFFFFFFFF8;
    }
    v17 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v17)
      v17 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v18 = *((_QWORD *)v17 + 37);
    v30 = v18;
    if ((v18 & 7) != 0)
    {
      v19 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 2, v19));
      if ((v20 & 1) == 0)
        v30 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_20C374970(&qword_254989718, &v27, 4uLL);
    v21 = &v31;
    do
    {
      v23 = *--v21;
      v22 = v23;
      if ((v23 & 7) != 0)
      {
        v24 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
        do
          v25 = __ldxr(v24);
        while (__stlxr(v25 - 2, v24));
      }
    }
    while (v21 != &v27);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_254989718, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989730);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254989750);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254989750))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)1);
    sub_20C55D348((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_254989738, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989750);
  }
  if (v1)
    return &qword_254989738;
  else
    return &qword_254989718;
}

void sub_20C55D2B8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989730);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C55D348(uint64_t **a1)
{
  qword_254989740 = 0;
  unk_254989748 = 0;
  qword_254989738 = 0;
  sub_20BFC9A6C((char **)&qword_254989738, ((unk_254989720 - qword_254989718) >> 3) + a1[1] - *a1);
  sub_20C1292A0(&qword_254989738, (_QWORD *)qword_254989740, *a1, a1[1], a1[1] - *a1);
  return sub_20C1292A0(&qword_254989738, (_QWORD *)qword_254989740, (uint64_t *)qword_254989718, unk_254989720, (unk_254989720 - qword_254989718) >> 3);
}

void sub_20C55D3DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::ComputeExtent(_QWORD *a1, unint64_t *a2, double a3, double a4)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  float32_t v11;
  float32x2_t *v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  float32x2_t v17;
  float v18;
  float32x2_t *v19;

  v18 = 0.0;
  v17 = 0;
  v19 = &v17;
  sub_20BF5AD04(a2, 2uLL, (uint64_t **)&v19);
  v10 = sub_20C559A34(a1, (float *)&v17, a3, a4);
  if ((_DWORD)v10)
  {
    v11 = -v18;
    sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a2, v8, v9);
    v12 = (float32x2_t *)a2[4];
    *v12 = vneg_f32(v17);
    v12[1].f32[0] = v11;
    sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a2, v13, v14);
    v15 = a2[4];
    *(float32x2_t *)(v15 + 12) = v17;
    *(float *)(v15 + 20) = v18;
  }
  return v10;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::ComputeExtent(_QWORD *a1, const pxrInternal__aapl__pxrReserved__::GfMatrix4d *a2, unint64_t *a3, double a4, double a5)
{
  uint64_t v10;
  float32x2_t v11;
  float32_t v12;
  float32x2_t v13;
  uint64_t v14;
  char *v15;
  float32x2_t *v16;
  float v17;
  float32x2_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  float64x2_t v23;
  double v24;
  float64x2_t v25;
  double v26;
  _OWORD v27[19];
  char v28;
  _BYTE v29[12];

  DWORD2(v27[0]) = 0;
  *(_QWORD *)&v27[0] = 0;
  *(_QWORD *)&v23.f64[0] = v27;
  sub_20BF5AD04(a3, 2uLL, (uint64_t **)&v23);
  v10 = sub_20C559A34(a1, (float *)v29, a4, a5);
  if ((_DWORD)v10)
  {
    v11 = (float32x2_t)vrev64_s32(*(int32x2_t *)v29);
    v11.f32[0] = -*(float *)&v29[8];
    v27[0] = vcvtq_f64_f32(vneg_f32(*(float32x2_t *)v29));
    v27[1] = vcvtq_f64_f32(v11);
    v27[2] = vcvtq_f64_f32(*(float32x2_t *)&v29[4]);
    pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)v27, a2);
    v28 = 0;
    pxrInternal__aapl__pxrReserved__::GfBBox3d::ComputeAlignedRange((pxrInternal__aapl__pxrReserved__::GfBBox3d *)v27, (uint64_t)&v23);
    v12 = v24;
    v13 = vcvt_f32_f64(v23);
    sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a3, v14, v15);
    v16 = (float32x2_t *)a3[4];
    *v16 = v13;
    v16[1].f32[0] = v12;
    v17 = v26;
    v18 = vcvt_f32_f64(v25);
    sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a3, v19, v20);
    v21 = a3[4];
    *(float32x2_t *)(v21 + 12) = v18;
    *(float *)(v21 + 20) = v17;
  }
  return v10;
}

void sub_20C55D5CC(uint64_t a1, const std::type_info *a2, char *a3)
{
  pxrInternal__aapl__pxrReserved__::TfType *v3;
  char *v4;
  std::type_info var8;

  var8.__vftable = (std::type_info_vtbl *)sub_20C55D7D8;
  pxrInternal__aapl__pxrReserved__::UsdGeomRegisterComputeExtentFunction(v3, &var8, v4);
}

uint64_t *sub_20C55D604()
{
  uint64_t *v0;
  void *__p[2];
  char v4;
  void *v5[3];
  uint64_t v6;
  int v7;

  sub_20BEB59B0((uint64_t)&v6, (uint64_t)"Tf", (uint64_t)"TfType::Define");
  sub_20C556F18((unint64_t **)v5);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p, (char **)v5, 0);
  if (v4 < 0)
    operator delete(__p[0]);
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_20C55D6D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  uint64_t v16;

  if (a14 < 0)
    operator delete(__p);
  if (a15)
    operator delete(a15);
  sub_20BEB24F4(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_20C55D724(char *a1)
{
  unint64_t v2;
  unint64_t v3;
  void *__p[2];
  char v5;

  v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  if (v5 < 0)
    operator delete(__p[0]);
  v3 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  if (v5 < 0)
    operator delete(__p[0]);
  pxrInternal__aapl__pxrReserved__::TfType::AddAlias((uint64_t *)&v3, v2, a1);
}

void sub_20C55D7B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C55D7D8(pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a1, uint64_t a2, const pxrInternal__aapl__pxrReserved__::GfMatrix4d *a3, unint64_t *a4)
{
  char v6;
  char v7;
  unsigned int *v8;
  unsigned int v9;
  char v10;
  char v11;
  unsigned int *v12;
  unsigned int v13;
  char v14;
  char v15;
  unsigned int *v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v23;
  double v24;
  double v25;
  char *v26;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  void (**v31)(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *__hidden);
  uint64_t v32;

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v31, a1);
  v31 = off_24C53C680;
  if (!v32
    || (*(_BYTE *)(v32 + 57) & 8) != 0
    || (pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v31) & 1) == 0)
  {
    v26 = "usdGeom/cylinder.cpp";
    v27 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"_ComputeExtentForCylinder";
    v28 = 286;
    v29 = (unint64_t)"BOOL pxrInternal__aapl__pxrReserved__::_ComputeExtentForCylinder(const UsdGeomBoundable &, c"
                            "onst UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)";
    v30 = 0;
    if ((pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v26, "cylinderSchema", 0) & 1) == 0)
      goto LABEL_32;
  }
  v25 = 0.0;
  pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::GetHeightAttr((pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *)&v31, (uint64_t)&v26);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<double>((uint64_t)&v26, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v25);
  v7 = v6;
  if ((v29 & 7) != 0)
  {
    v8 = (unsigned int *)(v29 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v28 + 1);
  sub_20BFD265C(&v28);
  if (v27)
    sub_20C35C614(v27);
  if ((v7 & 1) == 0)
    goto LABEL_32;
  v24 = 0.0;
  pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::GetRadiusAttr((pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *)&v31, (uint64_t)&v26);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<double>((uint64_t)&v26, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v24);
  v11 = v10;
  if ((v29 & 7) != 0)
  {
    v12 = (unsigned int *)(v29 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stlxr(v13 - 2, v12));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v28 + 1);
  sub_20BFD265C(&v28);
  if (v27)
    sub_20C35C614(v27);
  if ((v11 & 1) != 0)
  {
    v23 = 0;
    pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::GetAxisAttr((pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *)&v31, (uint64_t)&v26);
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::TfToken>((uint64_t)&v26, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v23);
    v15 = v14;
    if ((v29 & 7) != 0)
    {
      v16 = (unsigned int *)(v29 & 0xFFFFFFFFFFFFFFF8);
      do
        v17 = __ldxr(v16);
      while (__stlxr(v17 - 2, v16));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v28 + 1);
    sub_20BFD265C(&v28);
    if (v27)
      sub_20C35C614(v27);
    if ((v15 & 1) != 0)
    {
      if (a3)
        v18 = pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::ComputeExtent(&v23, a3, a4, v25, v24);
      else
        v18 = pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::ComputeExtent(&v23, a4, v25, v24);
      v19 = v18;
    }
    else
    {
      v19 = 0;
    }
    if ((v23 & 7) != 0)
    {
      v20 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stlxr(v21 - 2, v20));
    }
  }
  else
  {
LABEL_32:
    v19 = 0;
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)&v31);
  return v19;
}

void sub_20C55DA28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)va);
  _Unwind_Resume(a1);
}

void sub_20C55DAA4()
{
  void *__p[2];
  char v1;

  sub_20C55EE24();
  sub_20BDDC0E4(__p, "Cylinder_1");
  sub_20C55EF44((char *)__p);
  if (v1 < 0)
    operator delete(__p[0]);
}

void sub_20C55DAF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::~UsdGeomCylinder_1(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim(this);
  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t (*v6)(uint64_t *);
  char v7;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;

  v6 = sub_20C369024(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v13);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C6D8;
    if ((v16 & 7) != 0)
    {
      v9 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
  }
  else
  {
    v13 = "usdGeom/cylinder_1.cpp";
    v14 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Get";
    v15 = 57;
    v16 = (unint64_t)"static UsdGeomCylinder_1 pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::Get(const UsdS"
                            "tagePtr &, const SdfPath &)";
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v13, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v13) = 1;
    v14 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v15);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v15 + 1);
    v16 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C6D8;
    if ((v16 & 7) != 0)
    {
      v11 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stlxr(v12 - 2, v11));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v15 + 1);
  sub_20BFD265C(&v15);
  if (v14)
    sub_20C35C614(v14);
}

void sub_20C55DC94(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::Define(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  unsigned __int8 v6;
  uint64_t (*v7)(uint64_t *);
  char v8;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int v13;
  char *v14;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;

  v6 = atomic_load((unsigned __int8 *)&qword_254989760);
  if ((v6 & 1) == 0 && __cxa_guard_acquire(&qword_254989760))
  {
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&qword_254989758, "Cylinder_1");
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &qword_254989758, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989760);
  }
  v7 = sub_20C369024(a1);
  if (v8 & 1 | (unint64_t)v7)
  {
    v9 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::DefinePrim(v9, a2, &qword_254989758, (uint64_t)&v14);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v14);
    *(_QWORD *)a3 = off_24C53C6D8;
    if ((v17 & 7) != 0)
    {
      v10 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v11 = __ldxr(v10);
      while (__stlxr(v11 - 2, v10));
    }
  }
  else
  {
    v14 = "usdGeom/cylinder_1.cpp";
    v15 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Define";
    v16 = 70;
    v17 = (unint64_t)"static UsdGeomCylinder_1 pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::Define(const U"
                            "sdStagePtr &, const SdfPath &)";
    v18 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v14, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v14) = 1;
    v15 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v16);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v16 + 1);
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v14);
    *(_QWORD *)a3 = off_24C53C6D8;
    if ((v17 & 7) != 0)
    {
      v12 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v13 = __ldxr(v12);
      while (__stlxr(v13 - 2, v12));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v16 + 1);
  sub_20BFD265C(&v16);
  if (v15)
    sub_20C35C614(v15);
}

void sub_20C55DE84(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989760);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this)
{
  return 3;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this)
{
  unsigned __int8 v1;
  const std::type_info *v3;
  char *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_254989770);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_254989770))
  {
    __cxa_guard_release(&qword_254989770);
  }
  return &qword_254989768;
}

void sub_20C55DF28(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989770);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *v3;
  const std::type_info *v4;
  char *v5;

  v1 = atomic_load((unsigned __int8 *)&qword_254989780);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *)__cxa_guard_acquire(&qword_254989780);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::_GetStaticTfType(v3);
      byte_254989778 = sub_20C35BD7C((char *)&qword_254989768, v4, v5);
      __cxa_guard_release(&qword_254989780);
    }
  }
  return byte_254989778;
}

void sub_20C55DFA4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989780);
  _Unwind_Resume(a1);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::_GetStaticTfType(this);
  return &qword_254989768;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::GetHeightAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 408), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C55E07C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::CreateHeightAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 408), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::GetRadiusTopAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 936), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C55E1D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::CreateRadiusTopAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 936), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::GetRadiusBottomAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 928), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C55E32C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::CreateRadiusBottomAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 928), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::GetAxisAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 24), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C55E484(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::CreateAxisAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 24), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::GetExtentAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 296), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C55E5DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::CreateExtentAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 296), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 616), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this)
{
  int v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v17;
  uint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v21;
  uint64_t v22;
  unsigned int *v23;
  unsigned int v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int *v28;
  unsigned int v29;
  uint64_t *SchemaAttributeNames;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = (int)this;
  v36 = *MEMORY[0x24BDAC8D0];
  v2 = atomic_load((unsigned __int8 *)&qword_2549897A0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2549897A0))
  {
    v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5)
      v5 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v6 = *((_QWORD *)v5 + 51);
    v31 = v6;
    if ((v6 & 7) != 0)
    {
      v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 2, v7));
      if ((v8 & 1) == 0)
        v31 &= 0xFFFFFFFFFFFFFFF8;
    }
    v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9)
      v9 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v10 = *((_QWORD *)v9 + 117);
    v32 = v10;
    if ((v10 & 7) != 0)
    {
      v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 2, v11));
      if ((v12 & 1) == 0)
        v32 &= 0xFFFFFFFFFFFFFFF8;
    }
    v13 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v13)
      v13 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v14 = *((_QWORD *)v13 + 116);
    v33 = v14;
    if ((v14 & 7) != 0)
    {
      v15 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 2, v15));
      if ((v16 & 1) == 0)
        v33 &= 0xFFFFFFFFFFFFFFF8;
    }
    v17 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v17)
      v17 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v18 = *((_QWORD *)v17 + 3);
    v34 = v18;
    if ((v18 & 7) != 0)
    {
      v19 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 2, v19));
      if ((v20 & 1) == 0)
        v34 &= 0xFFFFFFFFFFFFFFF8;
    }
    v21 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v21)
      v21 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v22 = *((_QWORD *)v21 + 37);
    v35 = v22;
    if ((v22 & 7) != 0)
    {
      v23 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
      do
        v24 = __ldxr(v23);
      while (__stxr(v24 + 2, v23));
      if ((v24 & 1) == 0)
        v35 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_20C374970(&qword_254989788, &v31, 5uLL);
    v25 = &v36;
    do
    {
      v27 = *--v25;
      v26 = v27;
      if ((v27 & 7) != 0)
      {
        v28 = (unsigned int *)(v26 & 0xFFFFFFFFFFFFFFF8);
        do
          v29 = __ldxr(v28);
        while (__stlxr(v29 - 2, v28));
      }
    }
    while (v25 != &v31);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_254989788, &dword_20BDBC000);
    __cxa_guard_release(&qword_2549897A0);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_2549897C0);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2549897C0))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)1);
    sub_20C55EA1C((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_2549897A8, &dword_20BDBC000);
    __cxa_guard_release(&qword_2549897C0);
  }
  if (v1)
    return &qword_2549897A8;
  else
    return &qword_254989788;
}

void sub_20C55E98C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2549897A0);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C55EA1C(uint64_t **a1)
{
  qword_2549897B0 = 0;
  unk_2549897B8 = 0;
  qword_2549897A8 = 0;
  sub_20BFC9A6C((char **)&qword_2549897A8, ((*(_QWORD *)algn_254989790 - qword_254989788) >> 3) + a1[1] - *a1);
  sub_20C1292A0(&qword_2549897A8, (_QWORD *)qword_2549897B0, *a1, a1[1], a1[1] - *a1);
  return sub_20C1292A0(&qword_2549897A8, (_QWORD *)qword_2549897B0, (uint64_t *)qword_254989788, *(uint64_t **)algn_254989790, (*(_QWORD *)algn_254989790 - qword_254989788) >> 3);
}

void sub_20C55EAB0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::ComputeExtent(_QWORD *a1, unint64_t *a2, double a3, double a4, double a5)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  float32_t v13;
  float32x2_t *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  float32x2_t v19;
  float v20;
  float32x2_t *v21;

  v20 = 0.0;
  v19 = 0;
  v21 = &v19;
  sub_20BF5AD04(a2, 2uLL, (uint64_t **)&v21);
  v12 = sub_20C55EB98(a1, (float *)&v19, a3, a4, a5);
  if ((_DWORD)v12)
  {
    v13 = -v20;
    sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a2, v10, v11);
    v14 = (float32x2_t *)a2[4];
    *v14 = vneg_f32(v19);
    v14[1].f32[0] = v13;
    sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a2, v15, v16);
    v17 = a2[4];
    *(float32x2_t *)(v17 + 12) = v19;
    *(float *)(v17 + 20) = v20;
  }
  return v12;
}

uint64_t sub_20C55EB98(_QWORD *a1, float *a2, double a3, double a4, double a5)
{
  double v8;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v9;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v10;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v11;
  uint64_t result;
  float v13;
  float v14;
  float v15;

  if (a4 >= a5)
    v8 = a4;
  else
    v8 = a5;
  v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v9)
    v9 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if ((*a1 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v9 + 166) & 0xFFFFFFFFFFFFFFF8))
  {
    v13 = a3 * 0.5;
    v14 = v8;
    v15 = v14;
  }
  else
  {
    v10 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v10)
      v10 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if ((*a1 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v10 + 168) & 0xFFFFFFFFFFFFFFF8))
    {
      v13 = v8;
      v14 = a3 * 0.5;
      v15 = v13;
    }
    else
    {
      v11 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v11)
        v11 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if ((*a1 & 0xFFFFFFFFFFFFFFF8) != (*((_QWORD *)v11 + 169) & 0xFFFFFFFFFFFFFFF8))
        return 0;
      v13 = v8;
      v15 = a3 * 0.5;
      v14 = v13;
    }
  }
  *a2 = v13;
  a2[1] = v14;
  result = 1;
  a2[2] = v15;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::ComputeExtent(_QWORD *a1, const pxrInternal__aapl__pxrReserved__::GfMatrix4d *a2, unint64_t *a3, double a4, double a5, double a6)
{
  uint64_t v12;
  float32x2_t v13;
  float32_t v14;
  float32x2_t v15;
  uint64_t v16;
  char *v17;
  float32x2_t *v18;
  float v19;
  float32x2_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  float64x2_t v25;
  double v26;
  float64x2_t v27;
  double v28;
  _OWORD v29[19];
  char v30;
  _BYTE v31[12];

  DWORD2(v29[0]) = 0;
  *(_QWORD *)&v29[0] = 0;
  *(_QWORD *)&v25.f64[0] = v29;
  sub_20BF5AD04(a3, 2uLL, (uint64_t **)&v25);
  v12 = sub_20C55EB98(a1, (float *)v31, a4, a5, a6);
  if ((_DWORD)v12)
  {
    v13 = (float32x2_t)vrev64_s32(*(int32x2_t *)v31);
    v13.f32[0] = -*(float *)&v31[8];
    v29[0] = vcvtq_f64_f32(vneg_f32(*(float32x2_t *)v31));
    v29[1] = vcvtq_f64_f32(v13);
    v29[2] = vcvtq_f64_f32(*(float32x2_t *)&v31[4]);
    pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)v29, a2);
    v30 = 0;
    pxrInternal__aapl__pxrReserved__::GfBBox3d::ComputeAlignedRange((pxrInternal__aapl__pxrReserved__::GfBBox3d *)v29, (uint64_t)&v25);
    v14 = v26;
    v15 = vcvt_f32_f64(v25);
    sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a3, v16, v17);
    v18 = (float32x2_t *)a3[4];
    *v18 = v15;
    v18[1].f32[0] = v14;
    v19 = v28;
    v20 = vcvt_f32_f64(v27);
    sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a3, v21, v22);
    v23 = a3[4];
    *(float32x2_t *)(v23 + 12) = v20;
    *(float *)(v23 + 20) = v19;
  }
  return v12;
}

void sub_20C55EDEC(uint64_t a1, const std::type_info *a2, char *a3)
{
  pxrInternal__aapl__pxrReserved__::TfType *v3;
  char *v4;
  std::type_info var8;

  var8.__vftable = (std::type_info_vtbl *)sub_20C55EFF8;
  pxrInternal__aapl__pxrReserved__::UsdGeomRegisterComputeExtentFunction(v3, &var8, v4);
}

uint64_t *sub_20C55EE24()
{
  uint64_t *v0;
  void *__p[2];
  char v4;
  void *v5[3];
  uint64_t v6;
  int v7;

  sub_20BEB59B0((uint64_t)&v6, (uint64_t)"Tf", (uint64_t)"TfType::Define");
  sub_20C556F18((unint64_t **)v5);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p, (char **)v5, 0);
  if (v4 < 0)
    operator delete(__p[0]);
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_20C55EEF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  uint64_t v16;

  if (a14 < 0)
    operator delete(__p);
  if (a15)
    operator delete(a15);
  sub_20BEB24F4(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_20C55EF44(char *a1)
{
  unint64_t v2;
  unint64_t v3;
  void *__p[2];
  char v5;

  v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  if (v5 < 0)
    operator delete(__p[0]);
  v3 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  if (v5 < 0)
    operator delete(__p[0]);
  pxrInternal__aapl__pxrReserved__::TfType::AddAlias((uint64_t *)&v3, v2, a1);
}

void sub_20C55EFD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C55EFF8(pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a1, uint64_t a2, const pxrInternal__aapl__pxrReserved__::GfMatrix4d *a3, unint64_t *a4)
{
  char v6;
  char v7;
  unsigned int *v8;
  unsigned int v9;
  char v10;
  char v11;
  unsigned int *v12;
  unsigned int v13;
  char v14;
  char v15;
  unsigned int *v16;
  unsigned int v17;
  char v18;
  char v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  uint64_t v27;
  double v28;
  double v29;
  double v30;
  char *v31;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  void (**v36)(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *__hidden);
  uint64_t v37;

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v36, a1);
  v36 = off_24C53C6D8;
  if (!v37
    || (*(_BYTE *)(v37 + 57) & 8) != 0
    || (pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v36) & 1) == 0)
  {
    v31 = "usdGeom/cylinder_1.cpp";
    v32 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"_ComputeExtentForCylinder";
    v33 = 306;
    v34 = (unint64_t)"BOOL pxrInternal__aapl__pxrReserved__::_ComputeExtentForCylinder(const UsdGeomBoundable &, c"
                            "onst UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)";
    v35 = 0;
    if ((pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v31, "cylinderSchema", 0) & 1) == 0)
      goto LABEL_38;
  }
  v30 = 0.0;
  pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::GetHeightAttr((pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *)&v36, (uint64_t)&v31);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<double>((uint64_t)&v31, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v30);
  v7 = v6;
  if ((v34 & 7) != 0)
  {
    v8 = (unsigned int *)(v34 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v33 + 1);
  sub_20BFD265C(&v33);
  if (v32)
    sub_20C35C614(v32);
  if ((v7 & 1) == 0)
    goto LABEL_38;
  v29 = 0.0;
  pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::GetRadiusTopAttr((pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *)&v36, (uint64_t)&v31);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<double>((uint64_t)&v31, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v29);
  v11 = v10;
  if ((v34 & 7) != 0)
  {
    v12 = (unsigned int *)(v34 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stlxr(v13 - 2, v12));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v33 + 1);
  sub_20BFD265C(&v33);
  if (v32)
    sub_20C35C614(v32);
  if ((v11 & 1) == 0)
    goto LABEL_38;
  v28 = 0.0;
  pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::GetRadiusBottomAttr((pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *)&v36, (uint64_t)&v31);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<double>((uint64_t)&v31, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v28);
  v15 = v14;
  if ((v34 & 7) != 0)
  {
    v16 = (unsigned int *)(v34 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v33 + 1);
  sub_20BFD265C(&v33);
  if (v32)
    sub_20C35C614(v32);
  if ((v15 & 1) != 0)
  {
    v27 = 0;
    pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::GetAxisAttr((pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *)&v36, (uint64_t)&v31);
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::TfToken>((uint64_t)&v31, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v27);
    v19 = v18;
    if ((v34 & 7) != 0)
    {
      v20 = (unsigned int *)(v34 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stlxr(v21 - 2, v20));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v33 + 1);
    sub_20BFD265C(&v33);
    if (v32)
      sub_20C35C614(v32);
    if ((v19 & 1) != 0)
    {
      if (a3)
        v22 = pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::ComputeExtent(&v27, a3, a4, v30, v29, v28);
      else
        v22 = pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::ComputeExtent(&v27, a4, v30, v29, v28);
      v23 = v22;
    }
    else
    {
      v23 = 0;
    }
    if ((v27 & 7) != 0)
    {
      v24 = (unsigned int *)(v27 & 0xFFFFFFFFFFFFFFF8);
      do
        v25 = __ldxr(v24);
      while (__stlxr(v25 - 2, v24));
    }
  }
  else
  {
LABEL_38:
    v23 = 0;
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)&v36);
  return v23;
}

void sub_20C55F2B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)va);
  _Unwind_Resume(a1);
}

void sub_20C55F33C()
{
  void *__p[2];
  char v1;

  sub_20C560028();
  sub_20BDDC0E4(__p, "HermiteCurves");
  sub_20C560148((char *)__p);
  if (v1 < 0)
    operator delete(__p[0]);
}

void sub_20C55F388(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::~UsdGeomHermiteCurves(pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves *this)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::UsdGeomCurves::~UsdGeomCurves(this);
  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t (*v6)(uint64_t *);
  char v7;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;

  v6 = sub_20C369024(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v13);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C730;
    if ((v16 & 7) != 0)
    {
      v9 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
  }
  else
  {
    v13 = "usdGeom/hermiteCurves.cpp";
    v14 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Get";
    v15 = 57;
    v16 = (unint64_t)"static UsdGeomHermiteCurves pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::Get(cons"
                            "t UsdStagePtr &, const SdfPath &)";
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v13, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v13) = 1;
    v14 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v15);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v15 + 1);
    v16 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C730;
    if ((v16 & 7) != 0)
    {
      v11 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stlxr(v12 - 2, v11));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v15 + 1);
  sub_20BFD265C(&v15);
  if (v14)
    sub_20C35C614(v14);
}

void sub_20C55F52C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::Define(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  unsigned __int8 v6;
  uint64_t (*v7)(uint64_t *);
  char v8;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int v13;
  char *v14;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;

  v6 = atomic_load((unsigned __int8 *)&qword_2549897D0);
  if ((v6 & 1) == 0 && __cxa_guard_acquire(&qword_2549897D0))
  {
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&qword_2549897C8, "HermiteCurves");
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &qword_2549897C8, &dword_20BDBC000);
    __cxa_guard_release(&qword_2549897D0);
  }
  v7 = sub_20C369024(a1);
  if (v8 & 1 | (unint64_t)v7)
  {
    v9 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::DefinePrim(v9, a2, &qword_2549897C8, (uint64_t)&v14);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v14);
    *(_QWORD *)a3 = off_24C53C730;
    if ((v17 & 7) != 0)
    {
      v10 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v11 = __ldxr(v10);
      while (__stlxr(v11 - 2, v10));
    }
  }
  else
  {
    v14 = "usdGeom/hermiteCurves.cpp";
    v15 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Define";
    v16 = 70;
    v17 = (unint64_t)"static UsdGeomHermiteCurves pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::Define(c"
                            "onst UsdStagePtr &, const SdfPath &)";
    v18 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v14, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v14) = 1;
    v15 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v16);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v16 + 1);
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v14);
    *(_QWORD *)a3 = off_24C53C730;
    if ((v17 & 7) != 0)
    {
      v12 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v13 = __ldxr(v12);
      while (__stlxr(v13 - 2, v12));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v16 + 1);
  sub_20BFD265C(&v16);
  if (v15)
    sub_20C35C614(v15);
}

void sub_20C55F71C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2549897D0);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves *this)
{
  return 3;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves *this)
{
  unsigned __int8 v1;
  const std::type_info *v3;
  char *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_2549897E0);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_2549897E0))
  {
    __cxa_guard_release(&qword_2549897E0);
  }
  return &qword_2549897D8;
}

void sub_20C55F7C0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2549897E0);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves *v3;
  const std::type_info *v4;
  char *v5;

  v1 = atomic_load((unsigned __int8 *)&qword_2549897F0);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves *)__cxa_guard_acquire(&qword_2549897F0);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::_GetStaticTfType(v3);
      byte_2549897E8 = sub_20C35BD7C((char *)&qword_2549897D8, v4, v5);
      __cxa_guard_release(&qword_2549897F0);
    }
  }
  return byte_2549897E8;
}

void sub_20C55F83C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2549897F0);
  _Unwind_Resume(a1);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::_GetStaticTfType(this);
  return &qword_2549897D8;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::GetTangentsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1048), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C55F914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::CreateTangentsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1048), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 688), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves *this)
{
  int v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  unsigned int v10;
  uint64_t *SchemaAttributeNames;
  uint64_t v12[2];

  v1 = (int)this;
  v12[1] = *MEMORY[0x24BDAC8D0];
  v2 = atomic_load((unsigned __int8 *)&qword_254989810);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254989810))
  {
    v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5)
      v5 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v6 = *((_QWORD *)v5 + 131);
    v12[0] = v6;
    if ((v6 & 7) != 0)
    {
      v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 2, v7));
      if ((v8 & 1) == 0)
        v12[0] = (uint64_t)v7;
    }
    sub_20C374970(&qword_2549897F8, v12, 1uLL);
    if ((v12[0] & 7) != 0)
    {
      v9 = (unsigned int *)(v12[0] & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_2549897F8, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989810);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254989830);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254989830))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomCurves *)1);
    sub_20C55FBA4((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_254989818, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989830);
  }
  if (v1)
    return &qword_254989818;
  else
    return &qword_2549897F8;
}

void sub_20C55FB54(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989810);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C55FBA4(uint64_t **a1)
{
  qword_254989820 = 0;
  unk_254989828 = 0;
  qword_254989818 = 0;
  sub_20BFC9A6C((char **)&qword_254989818, ((unk_254989800 - qword_2549897F8) >> 3) + a1[1] - *a1);
  sub_20C1292A0(&qword_254989818, (_QWORD *)qword_254989820, *a1, a1[1], a1[1] - *a1);
  return sub_20C1292A0(&qword_254989818, (_QWORD *)qword_254989820, (uint64_t *)qword_2549897F8, unk_254989800, (unk_254989800 - qword_2549897F8) >> 3);
}

void sub_20C55FC38(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::PointAndTangentArrays::PointAndTangentArrays(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t i;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v20;
  const char *v21;
  uint64_t v22;
  const char *v23;
  char v24;
  char **v25;

  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  v3 = *a2;
  if (*a2)
  {
    if ((v3 & 1) != 0)
    {
      v20 = "usdGeom/hermiteCurves.cpp";
      v21 = "PointAndTangentArrays";
      v22 = 175;
      v23 = "pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::PointAndTangentArrays::PointAndTangentArrays(const V"
            "tArray<GfVec3f> &)";
      v24 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v20, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot separate odd-shaped interleaved points and tangents data.");
    }
    else
    {
      LODWORD(v21) = 0;
      v20 = 0;
      v25 = &v20;
      sub_20BF5AD04((unint64_t *)a1, v3 >> 1, (uint64_t **)&v25);
      v5 = *a2 >> 1;
      LODWORD(v21) = 0;
      v20 = 0;
      v25 = &v20;
      sub_20BF5AD04((unint64_t *)(a1 + 40), v5, (uint64_t **)&v25);
      v6 = (uint64_t *)a2[4];
      sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a1, v7, v8);
      v9 = *(_QWORD *)(a1 + 32);
      sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)(a1 + 40), v10, v11);
      for (i = *(_QWORD *)(a1 + 72); v6 != (uint64_t *)(a2[4] + 12 * *a2); v6 += 3)
      {
        v15 = *v6;
        *(_DWORD *)(v9 + 8) = *((_DWORD *)v6 + 2);
        *(_QWORD *)v9 = v15;
        v9 += 12;
        v16 = *(uint64_t *)((char *)v6 + 12);
        *(_DWORD *)(i + 8) = *((_DWORD *)v6 + 5);
        *(_QWORD *)i = v16;
        i += 12;
      }
      sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a1, v12, v13);
      if (v9 != *(_QWORD *)(a1 + 32) + 12 * *(_QWORD *)a1)
      {
        v20 = "usdGeom/hermiteCurves.cpp";
        v21 = "PointAndTangentArrays";
        v22 = 191;
        v23 = "pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::PointAndTangentArrays::PointAndTangentArrays(const"
              " VtArray<GfVec3f> &)";
        v24 = 0;
        pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v20, "pointsIt == _points.end()", 0);
      }
      sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)(a1 + 40), v17, v18);
      if (i != *(_QWORD *)(a1 + 72) + 12 * *(_QWORD *)(a1 + 40))
      {
        v20 = "usdGeom/hermiteCurves.cpp";
        v21 = "PointAndTangentArrays";
        v22 = 192;
        v23 = "pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::PointAndTangentArrays::PointAndTangentArrays(const"
              " VtArray<GfVec3f> &)";
        v24 = 0;
        pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v20, "tangentsIt == _tangents.end()", 0);
      }
    }
  }
  return a1;
}

void sub_20C55FE60(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_20BF5618C(v2);
  sub_20BF5618C(v1);
  _Unwind_Resume(a1);
}

double pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::PointAndTangentArrays::Interleave@<D0>(pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::PointAndTangentArrays *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *i;
  double result;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  const char *v16;
  uint64_t v17;
  const char *v18;
  char v19;

  if (*(_QWORD *)this)
  {
    v4 = (pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)sub_20BF5AB98(a2, 2 * *(_QWORD *)this);
    sub_20BF5AFC0(v4, v5, v6);
    v9 = *(_QWORD *)(a2 + 32);
    v10 = (uint64_t *)*((_QWORD *)this + 4);
    for (i = (uint64_t *)*((_QWORD *)this + 9); ; i = (uint64_t *)((char *)i + 12))
    {
      sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a2, v7, v8);
      if (v9 == *(_QWORD *)(a2 + 32) + 12 * *(_QWORD *)a2)
        break;
      v13 = *v10;
      *(_DWORD *)(v9 + 8) = *((_DWORD *)v10 + 2);
      *(_QWORD *)v9 = v13;
      v10 = (uint64_t *)((char *)v10 + 12);
      v14 = *i;
      *(_DWORD *)(v9 + 20) = *((_DWORD *)i + 2);
      *(_QWORD *)(v9 + 12) = v14;
      v9 += 24;
    }
    if (v10 != (uint64_t *)(*((_QWORD *)this + 4) + 12 * *(_QWORD *)this))
    {
      v15 = "usdGeom/hermiteCurves.cpp";
      v16 = "Interleave";
      v17 = 212;
      v18 = "VtVec3fArray pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::PointAndTangentArrays::Interleave() const";
      v19 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v15, "pointsIt == GetPoints().cend()", 0);
    }
    if (i != (uint64_t *)(*((_QWORD *)this + 9) + 12 * *((_QWORD *)this + 5)))
    {
      v15 = "usdGeom/hermiteCurves.cpp";
      v16 = "Interleave";
      v17 = 213;
      v18 = "VtVec3fArray pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::PointAndTangentArrays::Interleave() const";
      v19 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v15, "tangentsIt == GetTangents().cend()", 0);
    }
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

void sub_20C560004(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BF5618C(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C560028()
{
  uint64_t *v0;
  void *__p[2];
  char v4;
  void *v5[3];
  uint64_t v6;
  int v7;

  sub_20BEB59B0((uint64_t)&v6, (uint64_t)"Tf", (uint64_t)"TfType::Define");
  sub_20C54FC24((unint64_t **)v5);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p, (char **)v5, 0);
  if (v4 < 0)
    operator delete(__p[0]);
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_20C5600FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  uint64_t v16;

  if (a14 < 0)
    operator delete(__p);
  if (a15)
    operator delete(a15);
  sub_20BEB24F4(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_20C560148(char *a1)
{
  unint64_t v2;
  unint64_t v3;
  void *__p[2];
  char v5;

  v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  if (v5 < 0)
    operator delete(__p[0]);
  v3 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  if (v5 < 0)
    operator delete(__p[0]);
  pxrInternal__aapl__pxrReserved__::TfType::AddAlias((uint64_t *)&v3, v2, a1);
}

void sub_20C5601D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::~UsdGeomImageable(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::UsdTyped::~UsdTyped(this);
  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t (*v6)(uint64_t *);
  char v7;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;

  v6 = sub_20C369024(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v13);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C788;
    if ((v16 & 7) != 0)
    {
      v9 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
  }
  else
  {
    v13 = "usdGeom/imageable.cpp";
    v14 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Get";
    v15 = 51;
    v16 = (unint64_t)"static UsdGeomImageable pxrInternal__aapl__pxrReserved__::UsdGeomImageable::Get(const UsdSta"
                            "gePtr &, const SdfPath &)";
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v13, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v13) = 1;
    v14 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v15);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v15 + 1);
    v16 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C788;
    if ((v16 & 7) != 0)
    {
      v11 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stlxr(v12 - 2, v11));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v15 + 1);
  sub_20BFD265C(&v15);
  if (v14)
    sub_20C35C614(v14);
}

void sub_20C560388(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomImageable::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this)
{
  return 2;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomImageable::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this)
{
  unsigned __int8 v1;
  const std::type_info *v3;
  char *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_254989840);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_254989840))
  {
    __cxa_guard_release(&qword_254989840);
  }
  return &qword_254989838;
}

void sub_20C560414(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989840);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomImageable::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable *v3;
  const std::type_info *v4;
  char *v5;

  v1 = atomic_load((unsigned __int8 *)&qword_254989850);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)__cxa_guard_acquire(&qword_254989850);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomImageable::_GetStaticTfType(v3);
      byte_254989848 = sub_20C35BD7C((char *)&qword_254989838, v4, v5);
      __cxa_guard_release(&qword_254989850);
    }
  }
  return byte_254989848;
}

void sub_20C560490(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989850);
  _Unwind_Resume(a1);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomImageable::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::_GetStaticTfType(this);
  return &qword_254989838;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetVisibilityAttr(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1256), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C560568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::CreateVisibilityAttr(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1256), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetPurposeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 912), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C5606C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::CreatePurposeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 912), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetProxyPrimRel(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetRelationship((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 896), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C560818(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::CreateProxyPrimRel(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, pxrInternal__aapl__pxrReserved__::UsdRelationship *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::CreateRelationship((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 896), 0, a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C5608D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this)
{
  int v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v9;
  unsigned int *v10;
  unsigned int *v11;
  unsigned int v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  uint64_t *SchemaAttributeNames;
  uint64_t v19;
  unsigned int *v20;
  uint64_t v21;

  v1 = (int)this;
  v21 = *MEMORY[0x24BDAC8D0];
  v2 = atomic_load((unsigned __int8 *)&qword_254989870);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254989870))
  {
    v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5)
      v5 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v6 = *((_QWORD *)v5 + 157);
    v19 = v6;
    if ((v6 & 7) != 0)
    {
      v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 2, v7));
      if ((v8 & 1) == 0)
        v19 = (uint64_t)v7;
    }
    v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9)
      v9 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v10 = (unsigned int *)*((_QWORD *)v9 + 114);
    v20 = v10;
    if ((v10 & 7) != 0)
    {
      v11 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 2, v11));
      if ((v12 & 1) == 0)
        v20 = v11;
    }
    sub_20C374970(&qword_254989858, &v19, 2uLL);
    v13 = &v21;
    do
    {
      v15 = *--v13;
      v14 = v15;
      if ((v15 & 7) != 0)
      {
        v16 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
        do
          v17 = __ldxr(v16);
        while (__stlxr(v17 - 2, v16));
      }
    }
    while (v13 != &v19);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_254989858, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989870);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254989890);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254989890))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdTyped::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdTyped *)1);
    sub_20C560B54((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_254989878, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989890);
  }
  if (v1)
    return &qword_254989878;
  else
    return &qword_254989858;
}

void sub_20C560AD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  unsigned int *v11;
  unsigned int v12;

  if ((a10 & 7) != 0)
  {
    v11 = (unsigned int *)(a10 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stlxr(v12 - 2, v11));
  }
  __cxa_guard_abort(&qword_254989870);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C560B54(uint64_t **a1)
{
  qword_254989880 = 0;
  unk_254989888 = 0;
  qword_254989878 = 0;
  sub_20BFC9A6C((char **)&qword_254989878, ((unk_254989860 - qword_254989858) >> 3) + a1[1] - *a1);
  sub_20C1292A0(&qword_254989878, (_QWORD *)qword_254989880, *a1, a1[1], a1[1] - *a1);
  return sub_20C1292A0(&qword_254989878, (_QWORD *)qword_254989880, (uint64_t *)qword_254989858, unk_254989860, (unk_254989860 - qword_254989858) >> 3);
}

void sub_20C560BE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::CreatePrimvar(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, const pxrInternal__aapl__pxrReserved__::SdfValueTypeName *a3@<X2>, const pxrInternal__aapl__pxrReserved__::TfToken *a4@<X3>, int a5@<W4>, pxrInternal__aapl__pxrReserved__::UsdGeomPrimvar *a6@<X8>)
{
  unsigned int *v11;
  unsigned int v12;
  uint64_t v13;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  int v15;
  int v16;
  uint64_t v17;
  _QWORD v18[4];

  sub_20C35C4F8((uint64_t)&v13, (uint64_t *)this + 1, (_DWORD *)this + 4);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v18, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
  v18[3] = 0;
  v18[0] = off_24C53CE78;
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::CreatePrimvar((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)v18, a2, a3, a4, a5, a6);
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::~UsdGeomPrimvarsAPI((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)v18);
  if ((v17 & 7) != 0)
  {
    v11 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stlxr(v12 - 2, v11));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v16);
  sub_20BFD265C(&v15);
  if (v14)
    sub_20C35C614(v14);
}

void sub_20C560CE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::~UsdGeomPrimvarsAPI((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)&a13);
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetPrimvar(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdGeomPrimvar *a3@<X8>)
{
  unsigned int *v5;
  unsigned int v6;
  uint64_t v7;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  int v9;
  int v10;
  uint64_t v11;
  _QWORD v12[4];

  sub_20C35C4F8((uint64_t)&v7, (uint64_t *)this + 1, (_DWORD *)this + 4);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v12, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v7);
  v12[3] = 0;
  v12[0] = off_24C53CE78;
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::GetPrimvar((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)v12, a2, a3);
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::~UsdGeomPrimvarsAPI((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)v12);
  if ((v11 & 7) != 0)
  {
    v5 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v10);
  sub_20BFD265C(&v9);
  if (v8)
    sub_20C35C614(v8);
}

void sub_20C560DBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::~UsdGeomPrimvarsAPI((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)&a13);
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetPrimvars(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, uint64_t *a2@<X8>)
{
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v6;
  int v7;
  int v8;
  uint64_t v9;
  _QWORD v10[4];

  sub_20C35C4F8((uint64_t)&v5, (uint64_t *)this + 1, (_DWORD *)this + 4);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v10, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v5);
  v10[3] = 0;
  v10[0] = off_24C53CE78;
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::GetPrimvars((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)v10, a2);
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::~UsdGeomPrimvarsAPI((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)v10);
  if ((v9 & 7) != 0)
  {
    v3 = (unsigned int *)(v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v8);
  sub_20BFD265C(&v7);
  if (v6)
    sub_20C35C614(v6);
}

void sub_20C560E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::~UsdGeomPrimvarsAPI((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)&a13);
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetAuthoredPrimvars(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, uint64_t *a2@<X8>)
{
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v6;
  int v7;
  int v8;
  uint64_t v9;
  _QWORD v10[4];

  sub_20C35C4F8((uint64_t)&v5, (uint64_t *)this + 1, (_DWORD *)this + 4);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v10, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v5);
  v10[3] = 0;
  v10[0] = off_24C53CE78;
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::GetAuthoredPrimvars((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)v10, a2);
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::~UsdGeomPrimvarsAPI((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)v10);
  if ((v9 & 7) != 0)
  {
    v3 = (unsigned int *)(v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v8);
  sub_20BFD265C(&v7);
  if (v6)
    sub_20C35C614(v6);
}

void sub_20C560F5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::~UsdGeomPrimvarsAPI((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)&a13);
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomImageable::HasPrimvar(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2)
{
  uint64_t HasPrimvar;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v7;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  int v9;
  int v10;
  uint64_t v11;
  _QWORD v12[4];

  sub_20C35C4F8((uint64_t)&v7, (uint64_t *)this + 1, (_DWORD *)this + 4);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v12, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v7);
  v12[3] = 0;
  v12[0] = off_24C53CE78;
  HasPrimvar = pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::HasPrimvar((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)v12, a2);
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::~UsdGeomPrimvarsAPI((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)v12);
  if ((v11 & 7) != 0)
  {
    v4 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v10);
  sub_20BFD265C(&v9);
  if (v8)
    sub_20C35C614(v8);
  return HasPrimvar;
}

void sub_20C561034(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::~UsdGeomPrimvarsAPI((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)&a13);
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetOrderedPurposeTokens(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int *v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v1 = atomic_load((unsigned __int8 *)&qword_2549898B0);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_2549898B0))
  {
    v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v3)
      v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v4 = *((_QWORD *)v3 + 29);
    v24 = v4;
    if ((v4 & 7) != 0)
    {
      v5 = (unsigned int *)(v4 & 0xFFFFFFFFFFFFFFF8);
      do
        v6 = __ldxr(v5);
      while (__stxr(v6 + 2, v5));
      if ((v6 & 1) == 0)
        v24 &= 0xFFFFFFFFFFFFFFF8;
    }
    v7 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v7)
      v7 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v8 = *((_QWORD *)v7 + 119);
    v25 = v8;
    if ((v8 & 7) != 0)
    {
      v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 2, v9));
      if ((v10 & 1) == 0)
        v25 &= 0xFFFFFFFFFFFFFFF8;
    }
    v11 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v11)
      v11 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v12 = *((_QWORD *)v11 + 111);
    v26 = v12;
    if ((v12 & 7) != 0)
    {
      v13 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 2, v13));
      if ((v14 & 1) == 0)
        v26 &= 0xFFFFFFFFFFFFFFF8;
    }
    v15 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v15)
      v15 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v16 = *((_QWORD *)v15 + 49);
    v27 = v16;
    if ((v16 & 7) != 0)
    {
      v17 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stxr(v18 + 2, v17));
      if ((v18 & 1) == 0)
        v27 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_20C374970(qword_254989898, &v24, 4uLL);
    v19 = &v28;
    do
    {
      v21 = *--v19;
      v20 = v21;
      if ((v21 & 7) != 0)
      {
        v22 = (unsigned int *)(v20 & 0xFFFFFFFFFFFFFFF8);
        do
          v23 = __ldxr(v22);
        while (__stlxr(v23 - 2, v22));
      }
    }
    while (v19 != &v24);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, qword_254989898, &dword_20BDBC000);
    __cxa_guard_release(&qword_2549898B0);
  }
  return qword_254989898;
}

void sub_20C56128C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2549898B0);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeVisibility(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a2@<X1>, unsigned int **a3@<X8>)
{
  unsigned int *v5;
  unsigned int v6;
  uint64_t v7;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  int v9;
  int v10;
  uint64_t v11;

  sub_20C35C4F8((uint64_t)&v7, (uint64_t *)this + 1, (_DWORD *)this + 4);
  sub_20C5613AC((const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v7, (uint64_t)a2, a3);
  if ((v11 & 7) != 0)
  {
    v5 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v10);
  sub_20BFD265C(&v9);
  if (v8)
    sub_20C35C614(v8);
}

void sub_20C561398(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20C5613AC(const pxrInternal__aapl__pxrReserved__::UsdPrim *a1@<X0>, uint64_t a2@<X1>, unsigned int **a3@<X8>)
{
  unsigned int *v6;
  unsigned int v7;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int v13;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v14;
  unsigned int *v15;
  unsigned int *v16;
  unsigned int v17;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v18;
  unsigned int *v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int *v22;
  unsigned int v23;
  uint64_t v24;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v25;
  int v26;
  int v27;
  uint64_t v28;
  void (**v29)(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *__hidden);
  uint64_t v30;
  uint64_t v31;

  v31 = 0;
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v29, a1);
  v29 = off_24C53C788;
  if (!v30
    || (*(_BYTE *)(v30 + 57) & 8) != 0
    || !pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v29))
  {
    goto LABEL_12;
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetVisibilityAttr((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)&v29, (uint64_t)&v24);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::TfToken>((uint64_t)&v24, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v31);
  if ((v28 & 7) != 0)
  {
    v6 = (unsigned int *)(v28 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v27);
  sub_20BFD265C(&v26);
  if (v25)
    sub_20C35C614(v25);
  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if ((v31 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v8 + 62) & 0xFFFFFFFFFFFFFFF8))
  {
    v18 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v18)
      v18 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v19 = (unsigned int *)*((_QWORD *)v18 + 62);
    *a3 = v19;
    if ((v19 & 7) != 0)
    {
      v20 = (unsigned int *)((unint64_t)v19 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stxr(v21 + 2, v20));
      if ((v21 & 1) == 0)
        *a3 = v20;
    }
    pxrInternal__aapl__pxrReserved__::UsdTyped::~UsdTyped((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v29);
  }
  else
  {
LABEL_12:
    pxrInternal__aapl__pxrReserved__::UsdTyped::~UsdTyped((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v29);
    sub_20C3AD22C((uint64_t)a1, (uint64_t)&v24);
    if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v24, v9))
    {
      sub_20C5613AC(&v24, a2);
      if ((v28 & 7) != 0)
      {
        v10 = (unsigned int *)(v28 & 0xFFFFFFFFFFFFFFF8);
        do
          v11 = __ldxr(v10);
        while (__stlxr(v11 - 2, v10));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v27);
      sub_20BFD265C(&v26);
      if (v25)
        sub_20C35C614(v25);
    }
    else
    {
      if ((v28 & 7) != 0)
      {
        v12 = (unsigned int *)(v28 & 0xFFFFFFFFFFFFFFF8);
        do
          v13 = __ldxr(v12);
        while (__stlxr(v13 - 2, v12));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v27);
      sub_20BFD265C(&v26);
      if (v25)
        sub_20C35C614(v25);
      v14 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v14)
        v14 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      v15 = (unsigned int *)*((_QWORD *)v14 + 59);
      *a3 = v15;
      if ((v15 & 7) != 0)
      {
        v16 = (unsigned int *)((unint64_t)v15 & 0xFFFFFFFFFFFFFFF8);
        do
          v17 = __ldxr(v16);
        while (__stxr(v17 + 2, v16));
        if ((v17 & 1) == 0)
          *a3 = v16;
      }
    }
  }
  if ((v31 & 7) != 0)
  {
    v22 = (unsigned int *)(v31 & 0xFFFFFFFFFFFFFFF8);
    do
      v23 = __ldxr(v22);
    while (__stlxr(v23 - 2, v22));
  }
}

void sub_20C56161C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;

  v14 = *(_QWORD *)(v13 - 40);
  if ((v14 & 7) != 0)
  {
    v15 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
    do
      v16 = __ldxr(v15);
    while (__stlxr(v16 - 2, v15));
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetPurposeVisibilityAttr(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, uint64_t a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v6;
  unsigned int *v7;
  unsigned int v8;
  uint64_t v9;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v10;
  int v11;
  int v12;
  uint64_t v13;
  void (**v14)(pxrInternal__aapl__pxrReserved__::UsdGeomVisibilityAPI *__hidden);
  uint64_t v15;
  uint64_t v16;

  v6 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v6)
    v6 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v6 + 29) & 0xFFFFFFFFFFFFFFF8))
  {
    pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetVisibilityAttr(this, a3);
  }
  else
  {
    sub_20C35C4F8((uint64_t)&v9, (uint64_t *)this + 1, (_DWORD *)this + 4);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v14, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    v16 = 0;
    v14 = off_24C53D030;
    if ((v13 & 7) != 0)
    {
      v7 = (unsigned int *)(v13 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stlxr(v8 - 2, v7));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v12);
    sub_20BFD265C(&v11);
    if (v10)
      sub_20C35C614(v10);
    if (v15
      && (*(_BYTE *)(v15 + 57) & 8) == 0
      && ((unsigned int (*)(pxrInternal__aapl__pxrReserved__::UsdAPISchemaBase *))v14[4])((pxrInternal__aapl__pxrReserved__::UsdAPISchemaBase *)&v14))
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomVisibilityAPI::GetPurposeVisibilityAttr((pxrInternal__aapl__pxrReserved__::UsdGeomVisibilityAPI *)&v14, a2, a3);
      pxrInternal__aapl__pxrReserved__::UsdGeomVisibilityAPI::~UsdGeomVisibilityAPI((pxrInternal__aapl__pxrReserved__::UsdGeomVisibilityAPI *)&v14);
    }
    else
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomVisibilityAPI::~UsdGeomVisibilityAPI((pxrInternal__aapl__pxrReserved__::UsdGeomVisibilityAPI *)&v14);
      *(_DWORD *)a3 = 3;
      *(_QWORD *)(a3 + 8) = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a3 + 16));
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a3 + 20));
      *(_QWORD *)(a3 + 24) = 0;
    }
  }
}

void sub_20C5617F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  pxrInternal__aapl__pxrReserved__::UsdGeomVisibilityAPI::~UsdGeomVisibilityAPI((pxrInternal__aapl__pxrReserved__::UsdGeomVisibilityAPI *)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeEffectiveVisibility(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a3@<X2>, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  unsigned int *v9;
  unint64_t v10;
  unsigned int v11;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v12;
  unsigned int *v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v18;
  uint64_t v19;
  unint64_t v20;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v21;
  int v22;
  int v23;
  uint64_t v24;

  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeVisibility(this, a3, (unsigned int **)&v20);
  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (unsigned int *)(v20 & 0xFFFFFFFFFFFFFFF8);
  v10 = *((_QWORD *)v8 + 62) & 0xFFFFFFFFFFFFFFF8;
  if ((v20 & 7) != 0)
  {
    do
      v11 = __ldxr(v9);
    while (__stlxr(v11 - 2, v9));
  }
  v12 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (v9 == (unsigned int *)v10)
  {
    if (!v12)
      v12 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v15 = *((_QWORD *)v12 + 62);
    *(_QWORD *)a4 = v15;
    if ((v15 & 7) != 0)
    {
      v16 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
      do
        v17 = __ldxr(v16);
      while (__stxr(v17 + 2, v16));
LABEL_25:
      if ((v17 & 1) == 0)
        *(_QWORD *)a4 = v16;
    }
  }
  else
  {
    if (!v12)
      v12 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) != (*((_QWORD *)v12 + 29) & 0xFFFFFFFFFFFFFFF8))
    {
      sub_20C35C4F8((uint64_t)&v20, (uint64_t *)this + 1, (_DWORD *)this + 4);
      sub_20C561A14((const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v20, a2, (uint64_t)a3, a4);
      if ((v24 & 7) != 0)
      {
        v13 = (unsigned int *)(v24 & 0xFFFFFFFFFFFFFFF8);
        do
          v14 = __ldxr(v13);
        while (__stlxr(v14 - 2, v13));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v23);
      sub_20BFD265C(&v22);
      if (v21)
        sub_20C35C614(v21);
      return;
    }
    v18 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v18)
      v18 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v19 = *((_QWORD *)v18 + 158);
    *(_QWORD *)a4 = v19;
    if ((v19 & 7) != 0)
    {
      v16 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
      do
        v17 = __ldxr(v16);
      while (__stxr(v17 + 2, v16));
      goto LABEL_25;
    }
  }
}

void sub_20C5619D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  unsigned int *v9;
  unsigned int v10;

  if ((a9 & 7) != 0)
  {
    v9 = (unsigned int *)(a9 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  _Unwind_Resume(exception_object);
}

void sub_20C561A14(const pxrInternal__aapl__pxrReserved__::UsdPrim *a1@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, uint64_t a3@<X2>, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a4@<X8>)
{
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  char v9;
  char v10;
  char v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int *v14;
  unsigned int v15;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v16;
  int IsDefined;
  char v18;
  unsigned int *v19;
  unsigned int v20;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v21;
  unint64_t v22;
  unint64_t v23;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v24;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v25;
  unint64_t v26;
  const char *v27;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v28;
  uint64_t v29;
  unsigned int *v30;
  unsigned int v31;
  uint64_t v32;
  unsigned int *v33;
  const char *Text;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v35;
  uint64_t v36;
  unsigned int *v37;
  char *v38;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  void (**v43)(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *__hidden);
  uint64_t v44;

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v43, a1);
  v43 = off_24C53C788;
  if (v44
    && (*(_BYTE *)(v44 + 57) & 8) == 0
    && pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v43))
  {
    *(_QWORD *)a4 = 0;
    pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetPurposeVisibilityAttr((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)&v43, a2, (uint64_t)&v38);
    if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v38, v8)&& pxrInternal__aapl__pxrReserved__::UsdAttribute::HasAuthoredValue((pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v38)&& (pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::TfToken>((uint64_t)&v38, a4), (v9 & 1) != 0))
    {
      v10 = 0;
      v11 = 1;
    }
    else
    {
      v11 = 0;
      v10 = 1;
    }
    if ((v41 & 7) != 0)
    {
      v12 = (unsigned int *)(v41 & 0xFFFFFFFFFFFFFFF8);
      do
        v13 = __ldxr(v12);
      while (__stlxr(v13 - 2, v12));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v40 + 1);
    sub_20BFD265C(&v40);
    if (v39)
      sub_20C35C614(v39);
    if ((v11 & 1) == 0 && (*(_QWORD *)a4 & 7) != 0)
    {
      v14 = (unsigned int *)(*(_QWORD *)a4 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    if ((v10 & 1) == 0)
    {
      pxrInternal__aapl__pxrReserved__::UsdTyped::~UsdTyped((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v43);
      return;
    }
  }
  pxrInternal__aapl__pxrReserved__::UsdTyped::~UsdTyped((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v43);
  sub_20C3AD22C((uint64_t)a1, (uint64_t)&v38);
  IsDefined = pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v38, v16);
  v18 = IsDefined;
  if (IsDefined)
    sub_20C561A14(&v38, a2, a3);
  if ((v41 & 7) != 0)
  {
    v19 = (unsigned int *)(v41 & 0xFFFFFFFFFFFFFFF8);
    do
      v20 = __ldxr(v19);
    while (__stlxr(v20 - 2, v19));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v40 + 1);
  sub_20BFD265C(&v40);
  if (v39)
    sub_20C35C614(v39);
  if ((v18 & 1) == 0)
  {
    v21 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v21)
      v21 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v22 = *(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8;
    v23 = *((_QWORD *)v21 + 49) & 0xFFFFFFFFFFFFFFF8;
    v24 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (v22 == v23)
    {
      if (!v24)
        v24 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      v32 = *((_QWORD *)v24 + 62);
      *(_QWORD *)a4 = v32;
      if ((v32 & 7) != 0)
      {
        v33 = (unsigned int *)(v32 & 0xFFFFFFFFFFFFFFF8);
        do
          v31 = __ldxr(v33);
        while (__stxr(v31 + 2, v33));
        goto LABEL_58;
      }
    }
    else
    {
      if (!v24)
        v24 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v24 + 111) & 0xFFFFFFFFFFFFFFF8))
        goto LABEL_39;
      v25 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v25)
        v25 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      v26 = *(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8;
      if (v26 == (*((_QWORD *)v25 + 119) & 0xFFFFFFFFFFFFFFF8))
      {
LABEL_39:
        v28 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
        if (!v28)
          v28 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
        v29 = *((_QWORD *)v28 + 59);
        *(_QWORD *)a4 = v29;
        if ((v29 & 7) != 0)
        {
          v30 = (unsigned int *)(v29 & 0xFFFFFFFFFFFFFFF8);
          do
            v31 = __ldxr(v30);
          while (__stxr(v31 + 2, v30));
          goto LABEL_58;
        }
      }
      else
      {
        v38 = "usdGeom/imageable.cpp";
        v39 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"_ComputePurposeVisibility";
        v40 = 315;
        v41 = (unint64_t)"TfToken pxrInternal__aapl__pxrReserved__::_ComputePurposeVisibility(const UsdPrim &, con"
                                "st TfToken &, const UsdTimeCode &)";
        v42 = 0;
        if (v26)
        {
          v27 = (const char *)(v26 + 16);
          if (*(char *)(v26 + 39) < 0)
            v27 = *(const char **)v27;
        }
        else
        {
          v27 = "";
        }
        sub_20C348EEC((uint64_t)a1, (int *)&v43);
        Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v43);
        pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v38, 1, (pxrInternal__aapl__pxrReserved__ *)"Unexpected purpose '%s' computing purpose visibility for <%s>.", v27, Text);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v43 + 1);
        sub_20BFD265C(&v43);
        v35 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
        if (!v35)
          v35 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
        v36 = *((_QWORD *)v35 + 62);
        *(_QWORD *)a4 = v36;
        if ((v36 & 7) != 0)
        {
          v37 = (unsigned int *)(v36 & 0xFFFFFFFFFFFFFFF8);
          do
            v31 = __ldxr(v37);
          while (__stxr(v31 + 2, v37));
LABEL_58:
          if ((v31 & 1) == 0)
            *(_QWORD *)a4 &= 0xFFFFFFFFFFFFFFF8;
        }
      }
    }
  }
}

void sub_20C561DC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  _QWORD *v8;
  unsigned int *v10;
  unsigned int v11;
  va_list va;

  va_start(va, a8);
  if ((*v8 & 7) != 0)
  {
    v10 = (unsigned int *)(*v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stlxr(v11 - 2, v10));
  }
  pxrInternal__aapl__pxrReserved__::UsdTyped::~UsdTyped((pxrInternal__aapl__pxrReserved__::UsdTyped *)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::MakeVisible(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a2)
{
  unsigned int *v4;
  unsigned int v5;
  _BYTE v6[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;
  char v11;

  v11 = 0;
  sub_20C561EDC(this, (double *)a2);
  sub_20C35C4F8((uint64_t)v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  sub_20C562040((uint64_t)v6, (double *)a2, &v11);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C561EC8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C561EDC(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *a1, double *a2)
{
  int v4;
  int v5;
  unsigned int *v6;
  unsigned int v7;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  uint64_t result;
  unsigned int *v10;
  unsigned int v11;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v12;
  _BYTE v13[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;

  v18 = 0;
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetVisibilityAttr(a1, (uint64_t)v13);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::TfToken>((uint64_t)v13, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v18);
  v5 = v4;
  if ((v17 & 7) != 0)
  {
    v6 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v16);
  sub_20BFD265C(&v15);
  if (v14)
    sub_20C35C614(v14);
  if (!v5)
    goto LABEL_10;
  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if ((v18 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v8 + 62) & 0xFFFFFFFFFFFFFFF8))
  {
    v12 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v12)
      v12 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    sub_20C564878(a1, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v12 + 472), a2);
    result = 1;
  }
  else
  {
LABEL_10:
    result = 0;
  }
  if ((v18 & 7) != 0)
  {
    v10 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stlxr(v11 - 2, v10));
  }
  return result;
}

void sub_20C561FFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  unsigned int *v14;
  unsigned int v15;

  if ((a14 & 7) != 0)
  {
    v14 = (unsigned int *)(a14 & 0xFFFFFFFFFFFFFFF8);
    do
      v15 = __ldxr(v14);
    while (__stlxr(v15 - 2, v14));
  }
  _Unwind_Resume(exception_object);
}

void sub_20C562040(uint64_t a1, double *a2, _BYTE *a3)
{
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v6;
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase *v7;
  uint64_t v8;
  uint64_t *UsdPrimAllPrimsPredicate;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v14;
  unsigned int *v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  void (**v19)(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *__hidden);
  uint64_t v20;
  int v21;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  __int128 v41;
  uint64_t v42;
  void (**v43)(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *__hidden);
  uint64_t v44;
  char v45[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v46;
  int v47;
  int v48;
  uint64_t v49;

  sub_20C3AD22C(a1, (uint64_t)v45);
  if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)v45, v6))
  {
    sub_20C562040(v45, a2, a3);
    v7 = pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v43, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v45);
    v43 = off_24C53C788;
    if (v44)
    {
      if ((*(_BYTE *)(v44 + 57) & 8) == 0)
      {
        if (pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible(v7))
        {
          v8 = sub_20C561EDC((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)&v43, a2);
          if ((v8 & 1) != 0 || *a3)
          {
            *a3 = 1;
            UsdPrimAllPrimsPredicate = pxrInternal__aapl__pxrReserved__::GetUsdPrimAllPrimsPredicate((pxrInternal__aapl__pxrReserved__ *)v8);
            v11 = *UsdPrimAllPrimsPredicate;
            v10 = UsdPrimAllPrimsPredicate[1];
            v12 = UsdPrimAllPrimsPredicate[2];
            if (!pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v47)
              && ((v11 & 0x2000) != 0 || (v10 & 0x2000) == 0))
            {
              v11 |= 0x2000uLL;
              v10 &= ~0x2000uLL;
            }
            v29 = v11;
            v30 = v10;
            *(_QWORD *)&v31 = v12;
            sub_20C3ADEFC((uint64_t)v45, &v29, (uint64_t)&v33);
            v29 = v33;
            sub_20BFD6E54(&v30, &v34);
            sub_20BFD6EA4((_DWORD *)&v30 + 1, &v35);
            v31 = v36;
            v32 = v37;
            v25 = v38;
            sub_20BFD6E54(&v26, &v39);
            sub_20BFD6EA4((_DWORD *)&v26 + 1, &v40);
            v27 = v41;
            v28 = v42;
            while (v29 != v25 || v30 != v26 || !sub_20C39FA44((uint64_t)&v31, (uint64_t)&v27))
            {
              sub_20C3ADDEC((uint64_t)&v29, (uint64_t)&v21);
              if (v21 != *(_DWORD *)a1
                || v22 != *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8)
                || v23 != *(_QWORD *)(a1 + 16)
                || (v13 = v24, (v24 & 0xFFFFFFFFFFFFFFF8) != (*(_QWORD *)(a1 + 24) & 0xFFFFFFFFFFFFFFF8)))
              {
                pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v19, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v21);
                v19 = off_24C53C788;
                if (v20
                  && (*(_BYTE *)(v20 + 57) & 8) == 0
                  && pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v19))
                {
                  v14 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
                  if (!v14)
                    v14 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
                  sub_20C564878((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)&v19, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v14 + 496), a2);
                }
                pxrInternal__aapl__pxrReserved__::UsdTyped::~UsdTyped((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v19);
                v13 = v24;
              }
              if ((v13 & 7) != 0)
              {
                v15 = (unsigned int *)(v13 & 0xFFFFFFFFFFFFFFF8);
                do
                  v16 = __ldxr(v15);
                while (__stlxr(v16 - 2, v15));
              }
              pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v23 + 1);
              sub_20BFD265C(&v23);
              if (v22)
                sub_20C35C614(v22);
              sub_20C3ADE64((uint64_t)&v29);
            }
            pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v26 + 1);
            sub_20BFD265C(&v26);
            pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v30 + 1);
            sub_20BFD265C(&v30);
            pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v40);
            sub_20BFD265C(&v39);
            pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v35);
            sub_20BFD265C(&v34);
          }
        }
      }
    }
    pxrInternal__aapl__pxrReserved__::UsdTyped::~UsdTyped((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v43);
  }
  if ((v49 & 7) != 0)
  {
    v17 = (unsigned int *)(v49 & 0xFFFFFFFFFFFFFFF8);
    do
      v18 = __ldxr(v17);
    while (__stlxr(v18 - 2, v17));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v48);
  sub_20BFD265C(&v47);
  if (v46)
    sub_20C35C614(v46);
}

void sub_20C5623B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  pxrInternal__aapl__pxrReserved__::UsdTyped::~UsdTyped((pxrInternal__aapl__pxrReserved__::UsdTyped *)(v1 - 144));
  sub_20C35C2E0(v1 - 120);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::MakeInvisible(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a2)
{
  int v3;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v4;
  std::type_info_vtbl *v5;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  unsigned int v10;
  pxrInternal__aapl__pxrReserved__ *v11;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v12;
  int v13;
  int v14;
  uint64_t v15;
  std::type_info v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v16.__type_name = 0;
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::CreateVisibilityAttr(this, &v16, 0, (uint64_t)&v11);
  sub_20BF4C2D8((uint64_t)&v16);
  v16.__vftable = 0;
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::TfToken>((uint64_t)&v11, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v16);
  if (!v3)
    goto LABEL_5;
  v4 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v4)
    v4 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v5 = v16.__vftable;
  if (((unint64_t)v16.__vftable & 0xFFFFFFFFFFFFFFF8) != (*((_QWORD *)v4 + 62) & 0xFFFFFFFFFFFFFFF8))
  {
LABEL_5:
    v6 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v6)
      v6 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Set<pxrInternal__aapl__pxrReserved__::TfToken>(&v11, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v6 + 496), *(double *)a2);
    v5 = v16.__vftable;
  }
  if ((v5 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stlxr(v8 - 2, v7));
  }
  if ((v15 & 7) != 0)
  {
    v9 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v14);
  sub_20BFD265C(&v13);
  if (v12)
    sub_20C35C614(v12);
}

void sub_20C56256C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (a2)
    sub_20BDC12F4(exception_object);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputePurpose(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputePurposeInfo(this, (uint64_t)&v3);
  *a2 = v3;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputePurposeInfo(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;
  unsigned int *v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int *v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int *v19;
  unsigned int v20;
  uint64_t v21;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_20C562804(this, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v27);
  v4 = v27;
  if (v27)
  {
    *(_QWORD *)a2 = v27;
    if ((v4 & 7) != 0)
    {
      v5 = (unsigned int *)(v4 & 0xFFFFFFFFFFFFFFF8);
      do
        v6 = __ldxr(v5);
      while (__stxr(v6 + 2, v5));
      if ((v6 & 1) == 0)
        *(_QWORD *)a2 = v5;
    }
    *(_BYTE *)(a2 + 8) = 1;
  }
  else
  {
    sub_20C35C4F8((uint64_t)&v21, (uint64_t *)this + 1, (_DWORD *)this + 4);
    sub_20C562910((uint64_t)&v21, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v26);
    if ((v25 & 7) != 0)
    {
      v7 = (unsigned int *)(v25 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stlxr(v8 - 2, v7));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v24);
    sub_20BFD265C(&v23);
    if (v22)
      sub_20C35C614(v22);
    v9 = v26;
    if (v26)
    {
      *(_QWORD *)a2 = v26;
      if ((v9 & 7) != 0)
      {
        v10 = (unsigned int *)(v9 & 0xFFFFFFFFFFFFFFF8);
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 2, v10));
        if ((v11 & 1) == 0)
          *(_QWORD *)a2 = v10;
      }
      *(_BYTE *)(a2 + 8) = 1;
    }
    else
    {
      sub_20C562AEC(this, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v21);
      v12 = v21;
      *(_QWORD *)a2 = v21;
      if ((v12 & 7) != 0)
      {
        v13 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 2, v13));
        if ((v14 & 1) == 0)
          *(_QWORD *)a2 = v13;
      }
      *(_BYTE *)(a2 + 8) = 0;
      if ((v21 & 7) != 0)
      {
        v15 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
        do
          v16 = __ldxr(v15);
        while (__stlxr(v16 - 2, v15));
      }
    }
    if ((v26 & 7) != 0)
    {
      v17 = (unsigned int *)(v26 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
  }
  if ((v27 & 7) != 0)
  {
    v19 = (unsigned int *)(v27 & 0xFFFFFFFFFFFFFFF8);
    do
      v20 = __ldxr(v19);
    while (__stlxr(v20 - 2, v19));
  }
}

void sub_20C56279C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  unsigned int *v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;

  if ((a13 & 7) != 0)
  {
    v14 = (unsigned int *)(a13 & 0xFFFFFFFFFFFFFFF8);
    do
      v15 = __ldxr(v14);
    while (__stlxr(v15 - 2, v14));
  }
  if ((a14 & 7) != 0)
  {
    v16 = (unsigned int *)(a14 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  _Unwind_Resume(exception_object);
}

void sub_20C562804(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *a1@<X0>, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2@<X8>)
{
  uint64_t v3;
  _BOOL4 HasAuthoredValue;
  BOOL v6;
  unsigned int *v7;
  unsigned int v8;
  uint64_t v9;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v10;
  int v11;
  int v12;
  uint64_t v13;

  v3 = *((_QWORD *)a1 + 1);
  if (!v3
    || (*(_BYTE *)(v3 + 57) & 8) != 0
    || !(*(unsigned int (**)(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *))(*(_QWORD *)a1 + 32))(a1))
  {
    goto LABEL_12;
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetPurposeAttr(a1, (uint64_t)&v9);
  HasAuthoredValue = pxrInternal__aapl__pxrReserved__::UsdAttribute::HasAuthoredValue((pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v9);
  v6 = HasAuthoredValue;
  if (HasAuthoredValue)
  {
    *(_QWORD *)a2 = 0;
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::TfToken>((uint64_t)&v9, a2);
  }
  if ((v13 & 7) != 0)
  {
    v7 = (unsigned int *)(v13 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stlxr(v8 - 2, v7));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v12);
  sub_20BFD265C(&v11);
  if (v10)
    sub_20C35C614(v10);
  if (!v6)
LABEL_12:
    *(_QWORD *)a2 = 0;
}

void sub_20C5628D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  unsigned int *v11;
  unsigned int v12;

  if ((*v9 & 7) != 0)
  {
    v11 = (unsigned int *)(*v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stlxr(v12 - 2, v11));
  }
  sub_20C372B54((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20C562910(uint64_t a1@<X0>, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2@<X8>)
{
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v3;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;
  unsigned int v11;
  void (**v12)(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *__hidden);
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v13;
  int v14;
  int v15;
  uint64_t v16;
  int v17;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v18;
  int v19;
  int v20;
  uint64_t v21;

  sub_20C3AD22C(a1, (uint64_t)&v17);
  while (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v17, v3))
  {
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v12, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v17);
    v12 = off_24C53C788;
    sub_20C562804((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)&v12, a2);
    pxrInternal__aapl__pxrReserved__::UsdTyped::~UsdTyped((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v12);
    if (*(_QWORD *)a2)
      goto LABEL_16;
    sub_20C3AD22C((uint64_t)&v17, (uint64_t)&v12);
    v17 = (int)v12;
    v4 = v13;
    v13 = 0;
    v5 = v18;
    v18 = v4;
    if (v5)
      sub_20C35C614(v5);
    sub_20BFD3EBC(&v19, &v14);
    sub_20BFD3F10(&v20, &v15);
    if ((v21 & 7) != 0)
    {
      v6 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
      do
        v7 = __ldxr(v6);
      while (__stlxr(v7 - 2, v6));
    }
    v21 = v16;
    v16 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v15);
    sub_20BFD265C(&v14);
    if (v13)
      sub_20C35C614(v13);
    if ((*(_QWORD *)a2 & 7) != 0)
    {
      v8 = (unsigned int *)(*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8);
      do
        v9 = __ldxr(v8);
      while (__stlxr(v9 - 2, v8));
    }
  }
  *(_QWORD *)a2 = 0;
LABEL_16:
  if ((v21 & 7) != 0)
  {
    v10 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stlxr(v11 - 2, v10));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
  sub_20BFD265C(&v19);
  if (v18)
    sub_20C35C614(v18);
}

void sub_20C562A9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  _QWORD *v5;
  unsigned int *v7;
  unsigned int v8;
  va_list va;

  va_start(va, a5);
  if ((*v5 & 7) != 0)
  {
    v7 = (unsigned int *)(*v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stlxr(v8 - 2, v7));
  }
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20C562AEC(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *a1@<X0>, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  uint64_t v11;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v12;
  int v13;
  int v14;
  uint64_t v15;

  v4 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v4)
    v4 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v5 = *((_QWORD *)v4 + 29);
  *(_QWORD *)a2 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      *(_QWORD *)a2 = v6;
  }
  v8 = *((_QWORD *)a1 + 1);
  if (v8
    && (*(_BYTE *)(v8 + 57) & 8) == 0
    && (*(unsigned int (**)(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *))(*(_QWORD *)a1 + 32))(a1))
  {
    pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetPurposeAttr(a1, (uint64_t)&v11);
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::TfToken>((uint64_t)&v11, a2);
    if ((v15 & 7) != 0)
    {
      v9 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v14);
    sub_20BFD265C(&v13);
    if (v12)
      sub_20C35C614(v12);
  }
}

void sub_20C562BF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  unsigned int *v11;
  unsigned int v12;

  sub_20C372B54((uint64_t)&a9);
  if ((*v9 & 7) != 0)
  {
    v11 = (unsigned int *)(*v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stlxr(v12 - 2, v11));
  }
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputePurposeInfo(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  char v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  unsigned int *v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  unsigned int *v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;

  sub_20C562804(a1, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v21);
  v6 = v21;
  if (v21)
  {
    *(_QWORD *)a3 = v21;
    if ((v6 & 7) != 0)
    {
      v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 2, v7));
      if ((v8 & 1) == 0)
        *(_QWORD *)a3 = v7;
    }
    v9 = 1;
LABEL_15:
    *(_BYTE *)(a3 + 8) = v9;
    goto LABEL_16;
  }
  if (*((_BYTE *)a2 + 8))
  {
    v10 = *a2;
    *(_QWORD *)a3 = *a2;
    if ((v10 & 7) != 0)
    {
      v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 2, v11));
      if ((v12 & 1) == 0)
        *(_QWORD *)a3 = v11;
    }
    v9 = *((_BYTE *)a2 + 8);
    goto LABEL_15;
  }
  sub_20C562AEC(a1, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v20);
  v15 = v20;
  *(_QWORD *)a3 = v20;
  if ((v15 & 7) != 0)
  {
    v16 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 2, v16));
    if ((v17 & 1) == 0)
      *(_QWORD *)a3 = v16;
  }
  *(_BYTE *)(a3 + 8) = 0;
  if ((v20 & 7) != 0)
  {
    v18 = (unsigned int *)(v20 & 0xFFFFFFFFFFFFFFF8);
    do
      v19 = __ldxr(v18);
    while (__stlxr(v19 - 2, v18));
  }
LABEL_16:
  if ((v21 & 7) != 0)
  {
    v13 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeProxyPrim(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, pxrInternal__aapl__pxrReserved__::UsdPrim *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v5;
  unsigned int *v6;
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v10;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v11;
  unint64_t *v12;
  unint64_t v13;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v15;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v16;
  unsigned int *v17;
  unsigned int v18;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v19;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v20;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v21;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v22;
  unsigned int *v23;
  unsigned int v24;
  unsigned int v25;
  const char *Text;
  char *v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int *v30;
  unsigned int v31;
  unsigned int *v32;
  unsigned int v33;
  unsigned int *v34;
  unsigned int v35;
  unsigned int *v36;
  unsigned int v37;
  unsigned int *v38;
  unsigned int v39;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v40;
  const char *v41;
  const char *v42;
  char *v43;
  unint64_t v44;
  const char *v45;
  unsigned int *v46;
  unsigned int v47;
  unsigned int *v48;
  unsigned int v49;
  unsigned int *v50;
  unsigned int v51;
  pxrInternal__aapl__pxrReserved__::SdfPath **v54;
  int v55;
  int v56;
  pxrInternal__aapl__pxrReserved__::SdfPath **v57;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v58;
  uint64_t v59;
  const char *v60;
  char v61;
  uint64_t v62;
  int v63;
  int v64;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v65;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v70;
  int v71;
  int v72;
  uint64_t v73;
  pxrInternal__aapl__pxrReserved__::SdfPath *v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v78;
  int v79;
  int v80;
  const char *v81;
  _BYTE v82[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v83;
  int v84;
  int v85;
  uint64_t v86;
  int v87;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v88;
  int v89;
  int v90;
  uint64_t v91;
  int v92[6];

  v87 = 1;
  v88 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v89);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v90);
  v91 = 0;
  sub_20C35C4F8((uint64_t)v82, (uint64_t *)this + 1, (_DWORD *)this + 4);
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputePurposeInfo(this, (uint64_t)&v57);
  v54 = v57;
  sub_20C35C4F8((uint64_t)&v77, (uint64_t *)this + 1, (_DWORD *)this + 4);
  while (1)
  {
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v57, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v77);
    v57 = (pxrInternal__aapl__pxrReserved__::SdfPath **)off_24C53C788;
    pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputePurposeInfo((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)&v57, (uint64_t)&v69);
    v4 = v69;
    v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5)
      v5 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v6 = (unsigned int *)(v4 & 0xFFFFFFFFFFFFFFF8);
    v7 = *((_QWORD *)v5 + 119);
    if ((v4 & 7) != 0)
    {
      do
        v8 = __ldxr(v6);
      while (__stlxr(v8 - 2, v6));
    }
    v9 = v7 & 0xFFFFFFFFFFFFFFF8;
    pxrInternal__aapl__pxrReserved__::UsdTyped::~UsdTyped((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v57);
    if (v6 != (unsigned int *)v9)
      break;
    v87 = v77;
    v11 = v78;
    if (v78)
    {
      v12 = (unint64_t *)((char *)v78 + 48);
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
    }
    v14 = v88;
    v88 = v11;
    if (v14)
      sub_20C35C614(v14);
    sub_20C01A074(&v89, &v79);
    sub_20C01A0C8(&v90, &v80);
    sub_20BF32220(&v91, &v81);
    sub_20C3AD22C((uint64_t)&v77, (uint64_t)&v57);
    v77 = (int)v57;
    v15 = v58;
    v58 = 0;
    v16 = v78;
    v78 = v15;
    if (v16)
      sub_20C35C614(v16);
    sub_20BFD3EBC(&v79, (int *)&v59);
    sub_20BFD3F10(&v80, (int *)&v59 + 1);
    if ((v81 & 7) != 0)
    {
      v17 = (unsigned int *)((unint64_t)v81 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
    v81 = v60;
    v60 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v59 + 1);
    sub_20BFD265C(&v59);
    if (v58)
      sub_20C35C614(v58);
  }
  if (!pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v87, v10))goto LABEL_45;
  v74 = 0;
  v75 = 0;
  v76 = 0;
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v57, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v87);
  v57 = (pxrInternal__aapl__pxrReserved__::SdfPath **)off_24C53C788;
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetProxyPrimRel((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)&v57, (uint64_t)&v69);
  pxrInternal__aapl__pxrReserved__::UsdTyped::~UsdTyped((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v57);
  if (!pxrInternal__aapl__pxrReserved__::UsdRelationship::GetForwardedTargets((pxrInternal__aapl__pxrReserved__::UsdObject *)&v69, (uint64_t *)&v74))
  {
LABEL_39:
    if ((v73 & 7) != 0)
    {
      v30 = (unsigned int *)(v73 & 0xFFFFFFFFFFFFFFF8);
      do
        v31 = __ldxr(v30);
      while (__stlxr(v31 - 2, v30));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v72);
    sub_20BFD265C(&v71);
    if (v70)
      sub_20C35C614(v70);
    v57 = &v74;
    sub_20BFD6F90((void ***)&v57);
LABEL_45:
    *(_DWORD *)a3 = 1;
    *(_QWORD *)(a3 + 8) = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a3 + 16));
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a3 + 20));
    *(_QWORD *)(a3 + 24) = 0;
    goto LABEL_46;
  }
  if (v75 - (_QWORD)v74 != 8)
  {
    if ((unint64_t)(v75 - (_QWORD)v74) >= 9)
    {
      v57 = (pxrInternal__aapl__pxrReserved__::SdfPath **)"usdGeom/imageable.cpp";
      v58 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"ComputeProxyPrim";
      v59 = 561;
      v60 = "UsdPrim pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeProxyPrim(UsdPrim *) const";
      v61 = 0;
      sub_20C348EEC((uint64_t)&v87, &v63);
      Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v63);
      pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v57, (pxrInternal__aapl__pxrReserved__ *)"Found multiple targets for proxyPrim rel on prim <%s>", v27, Text);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v64);
      sub_20BFD265C(&v63);
    }
    goto LABEL_39;
  }
  pxrInternal__aapl__pxrReserved__::UsdObject::GetStage((pxrInternal__aapl__pxrReserved__::UsdObject *)v82, v19, &v57);
  v20 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08((uint64_t *)&v57);
  pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v20, v74, (uint64_t)&v63);
  v22 = v58;
  if (v58)
  {
    v23 = (unsigned int *)((char *)v58 + 8);
    do
    {
      v24 = __ldxr(v23);
      v25 = v24 - 1;
    }
    while (__stlxr(v25, v23));
    if (!v25)
      (*(void (**)(pxrInternal__aapl__pxrReserved__::Usd_PrimData *))(*(_QWORD *)v22 + 8))(v22);
  }
  if (!pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v63, v21))
  {
    if ((v68 & 7) != 0)
    {
      v28 = (unsigned int *)(v68 & 0xFFFFFFFFFFFFFFF8);
      do
        v29 = __ldxr(v28);
      while (__stlxr(v29 - 2, v28));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v67);
    sub_20BFD265C(&v66);
    if (v65)
      sub_20C35C614(v65);
    goto LABEL_39;
  }
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v57, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v63);
  v57 = (pxrInternal__aapl__pxrReserved__::SdfPath **)off_24C53C788;
  if (v58
    && (*((_BYTE *)v58 + 57) & 8) == 0
    && pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v57))
  {
    pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputePurposeInfo((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)&v57, (uint64_t)v92);
    v62 = *(_QWORD *)v92;
  }
  else
  {
    sub_20C562910((uint64_t)&v63, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v62);
  }
  pxrInternal__aapl__pxrReserved__::UsdTyped::~UsdTyped((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v57);
  v40 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v40)
    v40 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if ((v62 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v40 + 111) & 0xFFFFFFFFFFFFFFF8))
  {
    if (a2)
      sub_20C5636AC((uint64_t)a2, (uint64_t)&v87);
    *(_DWORD *)a3 = v63;
    *(_QWORD *)(a3 + 8) = v65;
    v65 = 0;
    sub_20BFD38A4((_DWORD *)(a3 + 16), &v66);
    sub_20BFD38DC((_DWORD *)(a3 + 20), &v67);
    *(_QWORD *)(a3 + 24) = v68;
    v68 = 0;
  }
  else
  {
    v57 = (pxrInternal__aapl__pxrReserved__::SdfPath **)"usdGeom/imageable.cpp";
    v58 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"ComputeProxyPrim";
    v59 = 550;
    v60 = "UsdPrim pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeProxyPrim(UsdPrim *) const";
    v61 = 0;
    sub_20C348EEC((uint64_t)&v63, v92);
    v41 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)v92);
    sub_20C348EEC((uint64_t)&v87, &v55);
    v42 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v55);
    v44 = v62 & 0xFFFFFFFFFFFFFFF8;
    if ((v62 & 0xFFFFFFFFFFFFFFF8) != 0)
    {
      v45 = (const char *)(v44 + 16);
      if (*(char *)(v44 + 39) < 0)
        v45 = *(const char **)v45;
    }
    else
    {
      v45 = "";
    }
    pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v57, (pxrInternal__aapl__pxrReserved__ *)"Prim <%s>, targeted as proxyPrim of prim <%s> should have purpose 'proxy' but has '%s' instead.", v43, v41, v42, v45);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v56);
    sub_20BFD265C(&v55);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v92[1]);
    sub_20BFD265C(v92);
    *(_DWORD *)a3 = 1;
    *(_QWORD *)(a3 + 8) = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a3 + 16));
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a3 + 20));
    *(_QWORD *)(a3 + 24) = 0;
  }
  if ((v62 & 7) != 0)
  {
    v46 = (unsigned int *)(v62 & 0xFFFFFFFFFFFFFFF8);
    do
      v47 = __ldxr(v46);
    while (__stlxr(v47 - 2, v46));
  }
  if ((v68 & 7) != 0)
  {
    v48 = (unsigned int *)(v68 & 0xFFFFFFFFFFFFFFF8);
    do
      v49 = __ldxr(v48);
    while (__stlxr(v49 - 2, v48));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v67);
  sub_20BFD265C(&v66);
  if (v65)
    sub_20C35C614(v65);
  if ((v73 & 7) != 0)
  {
    v50 = (unsigned int *)(v73 & 0xFFFFFFFFFFFFFFF8);
    do
      v51 = __ldxr(v50);
    while (__stlxr(v51 - 2, v50));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v72);
  sub_20BFD265C(&v71);
  if (v70)
    sub_20C35C614(v70);
  v57 = &v74;
  sub_20BFD6F90((void ***)&v57);
LABEL_46:
  if ((v81 & 7) != 0)
  {
    v32 = (unsigned int *)((unint64_t)v81 & 0xFFFFFFFFFFFFFFF8);
    do
      v33 = __ldxr(v32);
    while (__stlxr(v33 - 2, v32));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v80);
  sub_20BFD265C(&v79);
  if (v78)
    sub_20C35C614(v78);
  if ((v54 & 7) != 0)
  {
    v34 = (unsigned int *)((unint64_t)v54 & 0xFFFFFFFFFFFFFFF8);
    do
      v35 = __ldxr(v34);
    while (__stlxr(v35 - 2, v34));
  }
  if ((v86 & 7) != 0)
  {
    v36 = (unsigned int *)(v86 & 0xFFFFFFFFFFFFFFF8);
    do
      v37 = __ldxr(v36);
    while (__stlxr(v37 - 2, v36));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v85);
  sub_20BFD265C(&v84);
  if (v83)
    sub_20C35C614(v83);
  if ((v91 & 7) != 0)
  {
    v38 = (unsigned int *)(v91 & 0xFFFFFFFFFFFFFFF8);
    do
      v39 = __ldxr(v38);
    while (__stlxr(v39 - 2, v38));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v90);
  sub_20BFD265C(&v89);
  if (v88)
    sub_20C35C614(v88);
}

void sub_20C5634F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,void **a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  uint64_t v33;
  unsigned int *v35;
  unsigned int v36;
  unsigned int *v37;
  unsigned int v38;

  if ((a24 & 7) != 0)
  {
    v35 = (unsigned int *)(a24 & 0xFFFFFFFFFFFFFFF8);
    do
      v36 = __ldxr(v35);
    while (__stlxr(v36 - 2, v35));
  }
  sub_20C35C2E0((uint64_t)&a25);
  sub_20C377F1C((uint64_t)&a29);
  a29 = (void **)&a33;
  sub_20BFD6F90(&a29);
  sub_20C35C2E0(v33 - 200);
  if ((a15 & 7) != 0)
  {
    v37 = (unsigned int *)(a15 & 0xFFFFFFFFFFFFFFF8);
    do
      v38 = __ldxr(v37);
    while (__stlxr(v38 - 2, v37));
  }
  sub_20C35C2E0(v33 - 168);
  sub_20C35C2E0(v33 - 136);
  _Unwind_Resume(a1);
}

uint64_t sub_20C5636AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 48);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  if (v7)
    sub_20C35C614(v7);
  sub_20C01A074((int *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_20C01A0C8((int *)(a1 + 20), (_DWORD *)(a2 + 20));
  sub_20BF32220((_QWORD *)(a1 + 24), (_QWORD *)(a2 + 24));
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomImageable::SetProxyPrim(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2)
{
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;
  pxrInternal__aapl__pxrReserved__::SdfPath **v8;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v9;
  int v10;
  int v11;
  uint64_t v12;
  pxrInternal__aapl__pxrReserved__::SdfPath *v13;
  pxrInternal__aapl__pxrReserved__::SdfPath *v14;
  char *v15;
  int v16;
  int v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  if (!pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(a2, a2))
    return 0;
  sub_20C348EEC((uint64_t)a2, &v16);
  v13 = 0;
  v14 = 0;
  v15 = 0;
  v8 = &v13;
  LOBYTE(v9) = 0;
  v13 = (pxrInternal__aapl__pxrReserved__::SdfPath *)operator new(8uLL);
  v14 = v13;
  v15 = (char *)v13 + 8;
  v14 = (pxrInternal__aapl__pxrReserved__::SdfPath *)sub_20BFD6DBC((uint64_t)&v15, &v16, &v18, v13);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v17);
  sub_20BFD265C(&v16);
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::CreateProxyPrimRel(this, (pxrInternal__aapl__pxrReserved__::UsdRelationship *)&v8);
  v4 = pxrInternal__aapl__pxrReserved__::UsdRelationship::SetTargets((pxrInternal__aapl__pxrReserved__::UsdRelationship *)&v8, &v13);
  if ((v12 & 7) != 0)
  {
    v5 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v11);
  sub_20BFD265C(&v10);
  if (v9)
    sub_20C35C614(v9);
  v8 = &v13;
  sub_20BFD6F90((void ***)&v8);
  return v4;
}

void sub_20C56386C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15)
{
  if (a2)
    sub_20BDC12F4(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomImageable::SetProxyPrim(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this, const pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a2)
{
  uint64_t v2;
  uint64_t *v3;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  pxrInternal__aapl__pxrReserved__::SdfPath **v12;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v13;
  int v14;
  int v15;
  uint64_t v16;
  pxrInternal__aapl__pxrReserved__::SdfPath *v17;
  pxrInternal__aapl__pxrReserved__::SdfPath *v18;
  _QWORD v19[2];
  char v20;
  int v21;
  int v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v3 = (uint64_t *)((char *)a2 + 8);
  v2 = *((_QWORD *)a2 + 1);
  if (!v2
    || (*(_BYTE *)(v2 + 57) & 8) != 0
    || !(*(unsigned int (**)(const pxrInternal__aapl__pxrReserved__::UsdSchemaBase *))(*(_QWORD *)a2 + 32))(a2))
  {
    return 0;
  }
  sub_20C35C4F8((uint64_t)&v12, v3, (_DWORD *)a2 + 4);
  sub_20C348EEC((uint64_t)&v12, &v21);
  v17 = 0;
  v18 = 0;
  v19[0] = 0;
  v19[1] = &v17;
  v20 = 0;
  v17 = (pxrInternal__aapl__pxrReserved__::SdfPath *)operator new(8uLL);
  v18 = v17;
  v19[0] = (char *)v17 + 8;
  v18 = (pxrInternal__aapl__pxrReserved__::SdfPath *)sub_20BFD6DBC((uint64_t)v19, &v21, &v23, v17);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_20BFD265C(&v21);
  if ((v16 & 7) != 0)
  {
    v6 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v15);
  sub_20BFD265C(&v14);
  if (v13)
    sub_20C35C614(v13);
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::CreateProxyPrimRel(this, (pxrInternal__aapl__pxrReserved__::UsdRelationship *)&v12);
  v8 = pxrInternal__aapl__pxrReserved__::UsdRelationship::SetTargets((pxrInternal__aapl__pxrReserved__::UsdRelationship *)&v12, &v17);
  if ((v16 & 7) != 0)
  {
    v9 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v15);
  sub_20BFD265C(&v14);
  if (v13)
    sub_20C35C614(v13);
  v12 = &v17;
  sub_20BFD6F90((void ***)&v12);
  return v8;
}

void sub_20C563A84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, char a17)
{
  if (a2)
    sub_20BDC12F4(exception_object);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeWorldBound(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a2@<X1>, const pxrInternal__aapl__pxrReserved__::TfToken *a3@<X2>, const pxrInternal__aapl__pxrReserved__::TfToken *a4@<X3>, const pxrInternal__aapl__pxrReserved__::TfToken *a5@<X4>, const pxrInternal__aapl__pxrReserved__::TfToken *a6@<X5>, _OWORD *a7@<X8>)
{
  double v10;
  unsigned int *v11;
  unsigned int v12;
  const char *Text;
  unsigned int *v14;
  unsigned int v15;
  _QWORD v16[3];
  void **v17;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v18;
  int v19;
  int v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t *v24;
  uint64_t *v25;
  void **v26[4];
  char v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[7];

  v30[6] = *MEMORY[0x24BDAC8D0];
  sub_20C563DD0((uint64_t *)a3, (uint64_t *)a4, (uint64_t *)a5, (uint64_t *)a6, (uint64_t)&v24);
  if (v24 == v25)
  {
    v26[0] = (void **)"usdGeom/imageable.cpp";
    v26[1] = (void **)"ComputeWorldBound";
    v26[2] = (void **)621;
    v26[3] = (void **)"GfBBox3d pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeWorldBound(const UsdTimeCode &"
                      ", const TfToken &, const TfToken &, const TfToken &, const TfToken &) const";
    v27 = 0;
    sub_20C35C4F8((uint64_t)&v17, (uint64_t *)this + 1, (_DWORD *)this + 4);
    sub_20C348EEC((uint64_t)&v17, &v22);
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v22);
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v26, 1, (pxrInternal__aapl__pxrReserved__ *)"Must include at least one purpose when computing bounds for prim at path <%s>.  See UsdGeomImageable::GetPurposeAttr().", Text);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v23);
    sub_20BFD265C(&v22);
    if ((v21 & 7) != 0)
    {
      v14 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
    sub_20BFD265C(&v19);
    if (v18)
      sub_20C35C614(v18);
    sub_20BEF4AA0((uint64_t)a7);
  }
  else
  {
    v10 = *(double *)a2;
    memset(v16, 0, sizeof(v16));
    sub_20BFE538C(v16, v24, v25, v25 - v24);
    pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::UsdGeomBBoxCache(v26, v16, 0, 0, v10);
    sub_20C35C4F8((uint64_t)&v17, (uint64_t *)this + 1, (_DWORD *)this + 4);
    pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeWorldBound((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)v26, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v17, a7);
    if ((v21 & 7) != 0)
    {
      v11 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stlxr(v12 - 2, v11));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
    sub_20BFD265C(&v19);
    if (v18)
      sub_20C35C614(v18);
    sub_20C548CF4((uint64_t)v30);
    sub_20C543484((uint64_t)&v29);
    v17 = (void **)&v28;
    sub_20BEEB2B8(&v17);
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::~WorkDispatcher((pxrInternal__aapl__pxrReserved__::WorkDispatcher *)v26);
    v17 = (void **)v16;
    sub_20BEEB2B8(&v17);
  }
  v26[0] = (void **)&v24;
  sub_20BEEB2B8(v26);
}

void sub_20C563D34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,void **a22)
{
  a22 = (void **)&a19;
  sub_20BEEB2B8(&a22);
  _Unwind_Resume(a1);
}

void sub_20C563DC8()
{
  JUMPOUT(0x20C563DC0);
}

char *sub_20C563DD0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  char *result;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;

  *(_QWORD *)a5 = 0;
  *(_QWORD *)(a5 + 8) = 0;
  *(_QWORD *)(a5 + 16) = 0;
  if (*a1)
  {
    result = sub_20BFCA068((char **)a5, a1);
    *(_QWORD *)(a5 + 8) = result;
  }
  else
  {
    result = 0;
  }
  v10 = *a2;
  if (*a2)
  {
    if ((unint64_t)result >= *(_QWORD *)(a5 + 16))
    {
      result = sub_20BFCA068((char **)a5, a2);
    }
    else
    {
      *(_QWORD *)result = v10;
      if ((v10 & 7) != 0)
      {
        v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
        do
          v12 = __ldxr(v11);
        while (__stxr(v12 + 2, v11));
        if ((v12 & 1) == 0)
          *(_QWORD *)result &= 0xFFFFFFFFFFFFFFF8;
      }
      result += 8;
    }
    *(_QWORD *)(a5 + 8) = result;
  }
  v13 = *a3;
  if (*a3)
  {
    if ((unint64_t)result >= *(_QWORD *)(a5 + 16))
    {
      result = sub_20BFCA068((char **)a5, a3);
    }
    else
    {
      *(_QWORD *)result = v13;
      if ((v13 & 7) != 0)
      {
        v14 = (unsigned int *)(v13 & 0xFFFFFFFFFFFFFFF8);
        do
          v15 = __ldxr(v14);
        while (__stxr(v15 + 2, v14));
        if ((v15 & 1) == 0)
          *(_QWORD *)result &= 0xFFFFFFFFFFFFFFF8;
      }
      result += 8;
    }
    *(_QWORD *)(a5 + 8) = result;
  }
  v16 = *a4;
  if (*a4)
  {
    if ((unint64_t)result >= *(_QWORD *)(a5 + 16))
    {
      result = sub_20BFCA068((char **)a5, a4);
    }
    else
    {
      *(_QWORD *)result = v16;
      if ((v16 & 7) != 0)
      {
        v17 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
        do
          v18 = __ldxr(v17);
        while (__stxr(v18 + 2, v17));
        if ((v18 & 1) == 0)
          *(_QWORD *)result &= 0xFFFFFFFFFFFFFFF8;
      }
      result += 8;
    }
    *(_QWORD *)(a5 + 8) = result;
  }
  return result;
}

void sub_20C563F44(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

void sub_20C563F5C(void **a1)
{
  void **v2;

  sub_20C548CF4((uint64_t)(a1 + 54));
  sub_20C543484((uint64_t)(a1 + 48));
  v2 = a1 + 45;
  sub_20BEEB2B8(&v2);
  pxrInternal__aapl__pxrReserved__::WorkDispatcher::~WorkDispatcher((pxrInternal__aapl__pxrReserved__::WorkDispatcher *)a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeLocalBound(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a2@<X1>, const pxrInternal__aapl__pxrReserved__::TfToken *a3@<X2>, const pxrInternal__aapl__pxrReserved__::TfToken *a4@<X3>, const pxrInternal__aapl__pxrReserved__::TfToken *a5@<X4>, const pxrInternal__aapl__pxrReserved__::TfToken *a6@<X5>, _OWORD *a7@<X8>)
{
  double v10;
  unsigned int *v11;
  unsigned int v12;
  const char *Text;
  unsigned int *v14;
  unsigned int v15;
  _QWORD v16[3];
  void **v17;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v18;
  int v19;
  int v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t *v24;
  uint64_t *v25;
  void **v26[4];
  char v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[7];

  v30[6] = *MEMORY[0x24BDAC8D0];
  sub_20C563DD0((uint64_t *)a3, (uint64_t *)a4, (uint64_t *)a5, (uint64_t *)a6, (uint64_t)&v24);
  if (v24 == v25)
  {
    v26[0] = (void **)"usdGeom/imageable.cpp";
    v26[1] = (void **)"ComputeLocalBound";
    v26[2] = (void **)641;
    v26[3] = (void **)"GfBBox3d pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeLocalBound(const UsdTimeCode &"
                      ", const TfToken &, const TfToken &, const TfToken &, const TfToken &) const";
    v27 = 0;
    sub_20C35C4F8((uint64_t)&v17, (uint64_t *)this + 1, (_DWORD *)this + 4);
    sub_20C348EEC((uint64_t)&v17, &v22);
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v22);
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v26, 1, (pxrInternal__aapl__pxrReserved__ *)"Must include at least one purpose when computing bounds for prim at path <%s>.  See UsdGeomImageable::GetPurposeAttr().", Text);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v23);
    sub_20BFD265C(&v22);
    if ((v21 & 7) != 0)
    {
      v14 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
    sub_20BFD265C(&v19);
    if (v18)
      sub_20C35C614(v18);
    sub_20BEF4AA0((uint64_t)a7);
  }
  else
  {
    v10 = *(double *)a2;
    memset(v16, 0, sizeof(v16));
    sub_20BFE538C(v16, v24, v25, v25 - v24);
    pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::UsdGeomBBoxCache(v26, v16, 0, 0, v10);
    sub_20C35C4F8((uint64_t)&v17, (uint64_t *)this + 1, (_DWORD *)this + 4);
    pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeLocalBound((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)v26, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v17, a7);
    if ((v21 & 7) != 0)
    {
      v11 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stlxr(v12 - 2, v11));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
    sub_20BFD265C(&v19);
    if (v18)
      sub_20C35C614(v18);
    sub_20C548CF4((uint64_t)v30);
    sub_20C543484((uint64_t)&v29);
    v17 = (void **)&v28;
    sub_20BEEB2B8(&v17);
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::~WorkDispatcher((pxrInternal__aapl__pxrReserved__::WorkDispatcher *)v26);
    v17 = (void **)v16;
    sub_20BEEB2B8(&v17);
  }
  v26[0] = (void **)&v24;
  sub_20BEEB2B8(v26);
}

void sub_20C5641D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,void **a22)
{
  a22 = (void **)&a19;
  sub_20BEEB2B8(&a22);
  _Unwind_Resume(a1);
}

void sub_20C56426C()
{
  JUMPOUT(0x20C564264);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeUntransformedBound(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a2@<X1>, const pxrInternal__aapl__pxrReserved__::TfToken *a3@<X2>, const pxrInternal__aapl__pxrReserved__::TfToken *a4@<X3>, const pxrInternal__aapl__pxrReserved__::TfToken *a5@<X4>, const pxrInternal__aapl__pxrReserved__::TfToken *a6@<X5>, pxrInternal__aapl__pxrReserved__::GfBBox3d *a7@<X8>)
{
  double v10;
  unsigned int *v11;
  unsigned int v12;
  const char *Text;
  unsigned int *v14;
  unsigned int v15;
  _QWORD v16[3];
  void **v17;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v18;
  int v19;
  int v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t *v24;
  uint64_t *v25;
  void **v26[4];
  char v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[7];

  v30[6] = *MEMORY[0x24BDAC8D0];
  sub_20C563DD0((uint64_t *)a3, (uint64_t *)a4, (uint64_t *)a5, (uint64_t *)a6, (uint64_t)&v24);
  if (v24 == v25)
  {
    v26[0] = (void **)"usdGeom/imageable.cpp";
    v26[1] = (void **)"ComputeUntransformedBound";
    v26[2] = (void **)661;
    v26[3] = (void **)"GfBBox3d pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeUntransformedBound(const UsdTi"
                      "meCode &, const TfToken &, const TfToken &, const TfToken &, const TfToken &) const";
    v27 = 0;
    sub_20C35C4F8((uint64_t)&v17, (uint64_t *)this + 1, (_DWORD *)this + 4);
    sub_20C348EEC((uint64_t)&v17, &v22);
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v22);
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v26, 1, (pxrInternal__aapl__pxrReserved__ *)"Must include at least one purpose when computing bounds for prim at path <%s>.  See UsdGeomImageable::GetPurposeAttr().", Text);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v23);
    sub_20BFD265C(&v22);
    if ((v21 & 7) != 0)
    {
      v14 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
    sub_20BFD265C(&v19);
    if (v18)
      sub_20C35C614(v18);
    sub_20BEF4AA0((uint64_t)a7);
  }
  else
  {
    v10 = *(double *)a2;
    memset(v16, 0, sizeof(v16));
    sub_20BFE538C(v16, v24, v25, v25 - v24);
    pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::UsdGeomBBoxCache(v26, v16, 0, 0, v10);
    sub_20C35C4F8((uint64_t)&v17, (uint64_t *)this + 1, (_DWORD *)this + 4);
    pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeUntransformedBound((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)v26, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v17, a7);
    if ((v21 & 7) != 0)
    {
      v11 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stlxr(v12 - 2, v11));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
    sub_20BFD265C(&v19);
    if (v18)
      sub_20C35C614(v18);
    sub_20C548CF4((uint64_t)v30);
    sub_20C543484((uint64_t)&v29);
    v17 = (void **)&v28;
    sub_20BEEB2B8(&v17);
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::~WorkDispatcher((pxrInternal__aapl__pxrReserved__::WorkDispatcher *)v26);
    v17 = (void **)v16;
    sub_20BEEB2B8(&v17);
  }
  v26[0] = (void **)&v24;
  sub_20BEEB2B8(v26);
}

void sub_20C5644A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,void **a22)
{
  a22 = (void **)&a19;
  sub_20BEEB2B8(&a22);
  _Unwind_Resume(a1);
}

void sub_20C564538()
{
  JUMPOUT(0x20C564530);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeLocalToWorldTransform@<X0>(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a2@<X1>, uint64_t a3@<X8>)
{
  unsigned int *v5;
  unsigned int v6;
  uint64_t v8;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v9;
  int v10;
  int v11;
  uint64_t v12;
  _BYTE v13[48];

  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::UsdGeomXformCache((uint64_t)v13, *(double *)a2);
  sub_20C35C4F8((uint64_t)&v8, (uint64_t *)this + 1, (_DWORD *)this + 4);
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalToWorldTransform((pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *)v13, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v8, a3);
  if ((v12 & 7) != 0)
  {
    v5 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v11);
  sub_20BFD265C(&v10);
  if (v9)
    sub_20C35C614(v9);
  return sub_20C543484((uint64_t)v13);
}

void sub_20C5645E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  sub_20C35C2E0((uint64_t)&a9);
  sub_20C543484((uint64_t)&a13);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeParentToWorldTransform@<X0>(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a2@<X1>, _OWORD *a3@<X8>)
{
  unsigned int *v5;
  unsigned int v6;
  uint64_t v8;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v9;
  int v10;
  int v11;
  uint64_t v12;
  _BYTE v13[48];

  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::UsdGeomXformCache((uint64_t)v13, *(double *)a2);
  sub_20C35C4F8((uint64_t)&v8, (uint64_t *)this + 1, (_DWORD *)this + 4);
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetParentToWorldTransform((pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *)v13, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v8, a3);
  if ((v12 & 7) != 0)
  {
    v5 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v11);
  sub_20BFD265C(&v10);
  if (v9)
    sub_20C35C614(v9);
  return sub_20C543484((uint64_t)v13);
}

void sub_20C5646A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  sub_20C35C2E0((uint64_t)&a9);
  sub_20C543484((uint64_t)&a13);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C5646C8()
{
  uint64_t *v0;
  void *__p[2];
  char v4;
  void *v5[3];
  uint64_t v6;
  int v7;

  sub_20BEB59B0((uint64_t)&v6, (uint64_t)"Tf", (uint64_t)"TfType::Define");
  sub_20C5647E8((unint64_t **)v5);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p, (char **)v5, 0);
  if (v4 < 0)
    operator delete(__p[0]);
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_20C56479C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  uint64_t v16;

  if (a14 < 0)
    operator delete(__p);
  if (a15)
    operator delete(a15);
  sub_20BEB24F4(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_20C5647E8(unint64_t **a1@<X8>)
{
  unint64_t v2;
  unint64_t *v3;
  void *__p[2];
  char v5;

  v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  v3 = (unint64_t *)operator new(8uLL);
  *a1 = v3;
  *v3++ = v2;
  a1[1] = v3;
  a1[2] = v3;
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C564854(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C564878(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2, double *a3)
{
  unsigned int *v5;
  unsigned int v6;
  pxrInternal__aapl__pxrReserved__ *v8;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v9;
  int v10;
  int v11;
  uint64_t v12;
  std::type_info v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v13.__type_name = 0;
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::CreateVisibilityAttr(a1, &v13, 0, (uint64_t)&v8);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Set<pxrInternal__aapl__pxrReserved__::TfToken>(&v8, a2, *a3);
  if ((v12 & 7) != 0)
  {
    v5 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v11);
  sub_20BFD265C(&v10);
  if (v9)
    sub_20C35C614(v9);
  return sub_20BF4C2D8((uint64_t)&v13);
}

void sub_20C564938(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  if (a2)
    sub_20BDC12F4(exception_object);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::~UsdGeomBoundable(this);
  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGprim::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t (*v6)(uint64_t *);
  char v7;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;

  v6 = sub_20C369024(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v13);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C7E0;
    if ((v16 & 7) != 0)
    {
      v9 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
  }
  else
  {
    v13 = "usdGeom/gprim.cpp";
    v14 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Get";
    v15 = 51;
    v16 = (unint64_t)"static UsdGeomGprim pxrInternal__aapl__pxrReserved__::UsdGeomGprim::Get(const UsdStagePtr &,"
                            " const SdfPath &)";
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v13, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v13) = 1;
    v14 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v15);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v15 + 1);
    v16 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C7E0;
    if ((v16 & 7) != 0)
    {
      v11 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stlxr(v12 - 2, v11));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v15 + 1);
  sub_20BFD265C(&v15);
  if (v14)
    sub_20C35C614(v14);
}

void sub_20C564AF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomGprim::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this)
{
  return 2;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomGprim::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this)
{
  unsigned __int8 v1;
  const std::type_info *v3;
  char *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_2549898C0);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_2549898C0))
  {
    __cxa_guard_release(&qword_2549898C0);
  }
  return &qword_2549898B8;
}

void sub_20C564B84(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2549898C0);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomGprim::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim *v3;
  const std::type_info *v4;
  char *v5;

  v1 = atomic_load((unsigned __int8 *)&qword_2549898D0);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)__cxa_guard_acquire(&qword_2549898D0);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomGprim::_GetStaticTfType(v3);
      byte_2549898C8 = sub_20C35BD7C((char *)&qword_2549898B8, v4, v5);
      __cxa_guard_release(&qword_2549898D0);
    }
  }
  return byte_2549898C8;
}

void sub_20C564C00(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2549898D0);
  _Unwind_Resume(a1);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomGprim::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::_GetStaticTfType(this);
  return &qword_2549898B8;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetDisplayColorAttr(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 848), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C564CD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGprim::CreateDisplayColorAttr(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 848), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 736), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetDisplayOpacityAttr(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 856), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C564E30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGprim::CreateDisplayOpacityAttr(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 856), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 512), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetDoubleSidedAttr(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 240), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C564F88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGprim::CreateDoubleSidedAttr(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 240), v9, 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetOrientationAttr(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 728), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C5650E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGprim::CreateOrientationAttr(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 728), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this)
{
  int v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v17;
  uint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  uint64_t *SchemaAttributeNames;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = (int)this;
  v31 = *MEMORY[0x24BDAC8D0];
  v2 = atomic_load((unsigned __int8 *)&qword_2549898F0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2549898F0))
  {
    v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5)
      v5 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v6 = *((_QWORD *)v5 + 106);
    v27 = v6;
    if ((v6 & 7) != 0)
    {
      v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 2, v7));
      if ((v8 & 1) == 0)
        v27 &= 0xFFFFFFFFFFFFFFF8;
    }
    v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9)
      v9 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v10 = *((_QWORD *)v9 + 107);
    v28 = v10;
    if ((v10 & 7) != 0)
    {
      v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 2, v11));
      if ((v12 & 1) == 0)
        v28 &= 0xFFFFFFFFFFFFFFF8;
    }
    v13 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v13)
      v13 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v14 = *((_QWORD *)v13 + 30);
    v29 = v14;
    if ((v14 & 7) != 0)
    {
      v15 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 2, v15));
      if ((v16 & 1) == 0)
        v29 &= 0xFFFFFFFFFFFFFFF8;
    }
    v17 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v17)
      v17 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v18 = *((_QWORD *)v17 + 91);
    v30 = v18;
    if ((v18 & 7) != 0)
    {
      v19 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 2, v19));
      if ((v20 & 1) == 0)
        v30 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_20C374970(&qword_2549898D8, &v27, 4uLL);
    v21 = &v31;
    do
    {
      v23 = *--v21;
      v22 = v23;
      if ((v23 & 7) != 0)
      {
        v24 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
        do
          v25 = __ldxr(v24);
        while (__stlxr(v25 - 2, v24));
      }
    }
    while (v21 != &v27);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_2549898D8, &dword_20BDBC000);
    __cxa_guard_release(&qword_2549898F0);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254989910);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254989910))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *)1);
    sub_20C5654CC((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_2549898F8, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989910);
  }
  if (v1)
    return &qword_2549898F8;
  else
    return &qword_2549898D8;
}

void sub_20C56543C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2549898F0);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C5654CC(uint64_t **a1)
{
  qword_254989900 = 0;
  unk_254989908 = 0;
  qword_2549898F8 = 0;
  sub_20BFC9A6C((char **)&qword_2549898F8, ((unk_2549898E0 - qword_2549898D8) >> 3) + a1[1] - *a1);
  sub_20C1292A0(&qword_2549898F8, (_QWORD *)qword_254989900, *a1, a1[1], a1[1] - *a1);
  return sub_20C1292A0(&qword_2549898F8, (_QWORD *)qword_254989900, (uint64_t *)qword_2549898D8, unk_2549898E0, (unk_2549898E0 - qword_2549898D8) >> 3);
}

void sub_20C565560(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetDisplayColorPrimvar(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this@<X0>, pxrInternal__aapl__pxrReserved__::UsdGeomPrimvar *a2@<X8>)
{
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v6;
  int v7;
  int v8;
  uint64_t v9;

  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetDisplayColorAttr(this, (uint64_t)&v5);
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvar::UsdGeomPrimvar(a2, (const pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v5);
  if ((v9 & 7) != 0)
  {
    v3 = (unsigned int *)(v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v8);
  sub_20BFD265C(&v7);
  if (v6)
    sub_20C35C614(v6);
}

void sub_20C5655FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C372B54((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGprim::CreateDisplayColorPrimvar(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, int a3@<W2>, pxrInternal__aapl__pxrReserved__::UsdGeomPrimvar *a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v7;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v8;
  unsigned int *v9;
  unsigned int v10;
  uint64_t v11;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v12;
  int v13;
  int v14;
  uint64_t v15;
  _QWORD v16[4];

  sub_20C35C4F8((uint64_t)&v11, (uint64_t *)this + 1, (_DWORD *)this + 4);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v16, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v11);
  v16[3] = 0;
  v16[0] = off_24C53CE78;
  v7 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v7)
    v7 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v8 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v8)
    v8 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::CreatePrimvar((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)v16, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v7 + 848), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v8 + 736), a2, a3, a4);
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::~UsdGeomPrimvarsAPI((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)v16);
  if ((v15 & 7) != 0)
  {
    v9 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v14);
  sub_20BFD265C(&v13);
  if (v12)
    sub_20C35C614(v12);
}

void sub_20C565720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::~UsdGeomPrimvarsAPI((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)&a13);
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetDisplayOpacityPrimvar(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this@<X0>, pxrInternal__aapl__pxrReserved__::UsdGeomPrimvar *a2@<X8>)
{
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v6;
  int v7;
  int v8;
  uint64_t v9;

  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetDisplayOpacityAttr(this, (uint64_t)&v5);
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvar::UsdGeomPrimvar(a2, (const pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v5);
  if ((v9 & 7) != 0)
  {
    v3 = (unsigned int *)(v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v8);
  sub_20BFD265C(&v7);
  if (v6)
    sub_20C35C614(v6);
}

void sub_20C5657C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C372B54((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGprim::CreateDisplayOpacityPrimvar(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, int a3@<W2>, pxrInternal__aapl__pxrReserved__::UsdGeomPrimvar *a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v7;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v8;
  unsigned int *v9;
  unsigned int v10;
  uint64_t v11;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v12;
  int v13;
  int v14;
  uint64_t v15;
  _QWORD v16[4];

  sub_20C35C4F8((uint64_t)&v11, (uint64_t *)this + 1, (_DWORD *)this + 4);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v16, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v11);
  v16[3] = 0;
  v16[0] = off_24C53CE78;
  v7 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v7)
    v7 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v8 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v8)
    v8 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::CreatePrimvar((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)v16, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v7 + 856), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v8 + 512), a2, a3, a4);
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::~UsdGeomPrimvarsAPI((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)v16);
  if ((v15 & 7) != 0)
  {
    v9 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v14);
  sub_20BFD265C(&v13);
  if (v12)
    sub_20C35C614(v12);
}

void sub_20C5658E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::~UsdGeomPrimvarsAPI((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)&a13);
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C565908()
{
  uint64_t *v0;
  void *__p[2];
  char v4;
  void *v5[3];
  uint64_t v6;
  int v7;

  sub_20BEB59B0((uint64_t)&v6, (uint64_t)"Tf", (uint64_t)"TfType::Define");
  sub_20C565A28((unint64_t **)v5);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p, (char **)v5, 0);
  if (v4 < 0)
    operator delete(__p[0]);
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_20C5659DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  uint64_t v16;

  if (a14 < 0)
    operator delete(__p);
  if (a15)
    operator delete(a15);
  sub_20BEB24F4(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_20C565A28(unint64_t **a1@<X8>)
{
  unint64_t v2;
  unint64_t *v3;
  void *__p[2];
  char v5;

  v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  v3 = (unint64_t *)operator new(8uLL);
  *a1 = v3;
  *v3++ = v2;
  a1[1] = v3;
  a1[2] = v3;
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C565A94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C565AB8()
{
  void *__p[2];
  char v1;

  sub_20C567860();
  sub_20BDDC0E4(__p, "Mesh");
  sub_20C567980((char *)__p);
  if (v1 < 0)
    operator delete(__p[0]);
}

void sub_20C565B04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::~UsdGeomMesh(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::~UsdGeomPointBased(this);
  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t (*v6)(uint64_t *);
  char v7;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;

  v6 = sub_20C369024(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v13);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C838;
    if ((v16 & 7) != 0)
    {
      v9 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
  }
  else
  {
    v13 = "usdGeom/mesh.cpp";
    v14 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Get";
    v15 = 57;
    v16 = (unint64_t)"static UsdGeomMesh pxrInternal__aapl__pxrReserved__::UsdGeomMesh::Get(const UsdStagePtr &, const SdfPath &)";
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v13, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v13) = 1;
    v14 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v15);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v15 + 1);
    v16 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C838;
    if ((v16 & 7) != 0)
    {
      v11 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stlxr(v12 - 2, v11));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v15 + 1);
  sub_20BFD265C(&v15);
  if (v14)
    sub_20C35C614(v14);
}

void sub_20C565CA8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::Define(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  unsigned __int8 v6;
  uint64_t (*v7)(uint64_t *);
  char v8;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int v13;
  char *v14;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;

  v6 = atomic_load((unsigned __int8 *)&qword_254989920);
  if ((v6 & 1) == 0 && __cxa_guard_acquire(&qword_254989920))
  {
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&qword_254989918, "Mesh");
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &qword_254989918, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989920);
  }
  v7 = sub_20C369024(a1);
  if (v8 & 1 | (unint64_t)v7)
  {
    v9 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::DefinePrim(v9, a2, &qword_254989918, (uint64_t)&v14);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v14);
    *(_QWORD *)a3 = off_24C53C838;
    if ((v17 & 7) != 0)
    {
      v10 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v11 = __ldxr(v10);
      while (__stlxr(v11 - 2, v10));
    }
  }
  else
  {
    v14 = "usdGeom/mesh.cpp";
    v15 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Define";
    v16 = 70;
    v17 = (unint64_t)"static UsdGeomMesh pxrInternal__aapl__pxrReserved__::UsdGeomMesh::Define(const UsdStagePtr &"
                            ", const SdfPath &)";
    v18 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v14, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v14) = 1;
    v15 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v16);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v16 + 1);
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v14);
    *(_QWORD *)a3 = off_24C53C838;
    if ((v17 & 7) != 0)
    {
      v12 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v13 = __ldxr(v12);
      while (__stlxr(v13 - 2, v12));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v16 + 1);
  sub_20BFD265C(&v16);
  if (v15)
    sub_20C35C614(v15);
}

void sub_20C565E98(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989920);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomMesh::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this)
{
  return 3;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomMesh::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this)
{
  unsigned __int8 v1;
  const std::type_info *v3;
  char *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_254989930);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_254989930))
  {
    __cxa_guard_release(&qword_254989930);
  }
  return &qword_254989928;
}

void sub_20C565F3C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989930);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomMesh::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::UsdGeomMesh *v3;
  const std::type_info *v4;
  char *v5;

  v1 = atomic_load((unsigned __int8 *)&qword_254989940);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomMesh *)__cxa_guard_acquire(&qword_254989940);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomMesh::_GetStaticTfType(v3);
      byte_254989938 = sub_20C35BD7C((char *)&qword_254989928, v4, v5);
      __cxa_guard_release(&qword_254989940);
    }
  }
  return byte_254989938;
}

void sub_20C565FB8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989940);
  _Unwind_Resume(a1);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomMesh::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomMesh::_GetStaticTfType(this);
  return &qword_254989928;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::GetFaceVertexIndicesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 344), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C566090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::CreateFaceVertexIndicesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 344), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 464), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::GetFaceVertexCountsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 336), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C5661E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::CreateFaceVertexCountsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 336), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 464), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::GetSubdivisionSchemeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1032), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C566340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::CreateSubdivisionSchemeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1032), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::GetInterpolateBoundaryAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 480), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C566498(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::CreateInterpolateBoundaryAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 480), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::GetFaceVaryingLinearInterpolationAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 328), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C5665F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::CreateFaceVaryingLinearInterpolationAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 328), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::GetTriangleSubdivisionRuleAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1072), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C566748(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::CreateTriangleSubdivisionRuleAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1072), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::GetHoleIndicesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 424), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C5668A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::CreateHoleIndicesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 424), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 464), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::GetCornerIndicesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 144), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C5669F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::CreateCornerIndicesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 144), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 464), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::GetCornerSharpnessesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 152), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C566B50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::CreateCornerSharpnessesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 152), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 512), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::GetCreaseIndicesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 184), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C566CA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::CreateCreaseIndicesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 184), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 464), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::GetCreaseLengthsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 192), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C566E00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::CreateCreaseLengthsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 192), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 464), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::GetCreaseSharpnessesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 200), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C566F58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::CreateCreaseSharpnessesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 200), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 512), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomMesh::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this)
{
  int v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v17;
  uint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v21;
  uint64_t v22;
  unsigned int *v23;
  unsigned int v24;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v25;
  uint64_t v26;
  unsigned int *v27;
  unsigned int v28;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v29;
  uint64_t v30;
  unsigned int *v31;
  unsigned int v32;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v33;
  uint64_t v34;
  unsigned int *v35;
  unsigned int v36;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v37;
  uint64_t v38;
  unsigned int *v39;
  unsigned int v40;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v41;
  uint64_t v42;
  unsigned int *v43;
  unsigned int v44;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v45;
  uint64_t v46;
  unsigned int *v47;
  unsigned int v48;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v49;
  uint64_t v50;
  unsigned int *v51;
  unsigned int v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int *v56;
  unsigned int v57;
  uint64_t *SchemaAttributeNames;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v1 = (int)this;
  v71 = *MEMORY[0x24BDAC8D0];
  v2 = atomic_load((unsigned __int8 *)&qword_254989960);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254989960))
  {
    v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5)
      v5 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v6 = *((_QWORD *)v5 + 43);
    v59 = v6;
    if ((v6 & 7) != 0)
    {
      v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 2, v7));
      if ((v8 & 1) == 0)
        v59 &= 0xFFFFFFFFFFFFFFF8;
    }
    v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9)
      v9 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v10 = *((_QWORD *)v9 + 42);
    v60 = v10;
    if ((v10 & 7) != 0)
    {
      v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 2, v11));
      if ((v12 & 1) == 0)
        v60 &= 0xFFFFFFFFFFFFFFF8;
    }
    v13 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v13)
      v13 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v14 = *((_QWORD *)v13 + 129);
    v61 = v14;
    if ((v14 & 7) != 0)
    {
      v15 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 2, v15));
      if ((v16 & 1) == 0)
        v61 &= 0xFFFFFFFFFFFFFFF8;
    }
    v17 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v17)
      v17 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v18 = *((_QWORD *)v17 + 60);
    v62 = v18;
    if ((v18 & 7) != 0)
    {
      v19 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 2, v19));
      if ((v20 & 1) == 0)
        v62 &= 0xFFFFFFFFFFFFFFF8;
    }
    v21 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v21)
      v21 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v22 = *((_QWORD *)v21 + 41);
    v63 = v22;
    if ((v22 & 7) != 0)
    {
      v23 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
      do
        v24 = __ldxr(v23);
      while (__stxr(v24 + 2, v23));
      if ((v24 & 1) == 0)
        v63 &= 0xFFFFFFFFFFFFFFF8;
    }
    v25 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v25)
      v25 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v26 = *((_QWORD *)v25 + 134);
    v64 = v26;
    if ((v26 & 7) != 0)
    {
      v27 = (unsigned int *)(v26 & 0xFFFFFFFFFFFFFFF8);
      do
        v28 = __ldxr(v27);
      while (__stxr(v28 + 2, v27));
      if ((v28 & 1) == 0)
        v64 &= 0xFFFFFFFFFFFFFFF8;
    }
    v29 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v29)
      v29 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v30 = *((_QWORD *)v29 + 53);
    v65 = v30;
    if ((v30 & 7) != 0)
    {
      v31 = (unsigned int *)(v30 & 0xFFFFFFFFFFFFFFF8);
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 2, v31));
      if ((v32 & 1) == 0)
        v65 &= 0xFFFFFFFFFFFFFFF8;
    }
    v33 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v33)
      v33 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v34 = *((_QWORD *)v33 + 18);
    v66 = v34;
    if ((v34 & 7) != 0)
    {
      v35 = (unsigned int *)(v34 & 0xFFFFFFFFFFFFFFF8);
      do
        v36 = __ldxr(v35);
      while (__stxr(v36 + 2, v35));
      if ((v36 & 1) == 0)
        v66 &= 0xFFFFFFFFFFFFFFF8;
    }
    v37 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v37)
      v37 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v38 = *((_QWORD *)v37 + 19);
    v67 = v38;
    if ((v38 & 7) != 0)
    {
      v39 = (unsigned int *)(v38 & 0xFFFFFFFFFFFFFFF8);
      do
        v40 = __ldxr(v39);
      while (__stxr(v40 + 2, v39));
      if ((v40 & 1) == 0)
        v67 &= 0xFFFFFFFFFFFFFFF8;
    }
    v41 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v41)
      v41 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v42 = *((_QWORD *)v41 + 23);
    v68 = v42;
    if ((v42 & 7) != 0)
    {
      v43 = (unsigned int *)(v42 & 0xFFFFFFFFFFFFFFF8);
      do
        v44 = __ldxr(v43);
      while (__stxr(v44 + 2, v43));
      if ((v44 & 1) == 0)
        v68 &= 0xFFFFFFFFFFFFFFF8;
    }
    v45 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v45)
      v45 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v46 = *((_QWORD *)v45 + 24);
    v69 = v46;
    if ((v46 & 7) != 0)
    {
      v47 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
      do
        v48 = __ldxr(v47);
      while (__stxr(v48 + 2, v47));
      if ((v48 & 1) == 0)
        v69 &= 0xFFFFFFFFFFFFFFF8;
    }
    v49 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v49)
      v49 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v50 = *((_QWORD *)v49 + 25);
    v70 = v50;
    if ((v50 & 7) != 0)
    {
      v51 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
      do
        v52 = __ldxr(v51);
      while (__stxr(v52 + 2, v51));
      if ((v52 & 1) == 0)
        v70 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_20C374970(&qword_254989948, &v59, 0xCuLL);
    v53 = &v71;
    do
    {
      v55 = *--v53;
      v54 = v55;
      if ((v55 & 7) != 0)
      {
        v56 = (unsigned int *)(v54 & 0xFFFFFFFFFFFFFFF8);
        do
          v57 = __ldxr(v56);
        while (__stlxr(v57 - 2, v56));
      }
    }
    while (v53 != &v59);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_254989948, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989960);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254989980);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254989980))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *)1);
    sub_20C5675E4((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_254989968, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989980);
  }
  if (v1)
    return &qword_254989968;
  else
    return &qword_254989948;
}

void sub_20C567554(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989960);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C5675E4(uint64_t **a1)
{
  qword_254989970 = 0;
  unk_254989978 = 0;
  qword_254989968 = 0;
  sub_20BFC9A6C((char **)&qword_254989968, ((*(_QWORD *)algn_254989950 - qword_254989948) >> 3) + a1[1] - *a1);
  sub_20C1292A0(&qword_254989968, (_QWORD *)qword_254989970, *a1, a1[1], a1[1] - *a1);
  return sub_20C1292A0(&qword_254989968, (_QWORD *)qword_254989970, (uint64_t *)qword_254989948, *(uint64_t **)algn_254989950, (*(_QWORD *)algn_254989950 - qword_254989948) >> 3);
}

void sub_20C567678(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomMesh::ValidateTopology(uint64_t *a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int *v10;
  uint64_t v11;
  uint64_t result;
  __int128 v13;
  uint64_t v14;

  if (*(_QWORD *)a2)
  {
    LODWORD(v5) = 0;
    v6 = *(int **)(a2 + 32);
    v7 = 4 * *(_QWORD *)a2;
    do
    {
      v8 = *v6++;
      v5 = v8 + (int)v5;
      v7 -= 4;
    }
    while (v7);
    v9 = *a1;
    if (*a1 == v5)
    {
      if ((_DWORD)v5)
      {
        v10 = (unsigned int *)a1[4];
        v11 = 4 * v5;
        while ((*v10 & 0x80000000) == 0 && (int)*v10 < (unint64_t)a3)
        {
          ++v10;
          v11 -= 4;
          if (!v11)
            return 1;
        }
        if (a4)
        {
          pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Out of range face vertex index %d: Vertex must be in the range [0,%zu).", (const char *)a2, a3, *v10, a3);
          goto LABEL_15;
        }
        return 0;
      }
      return 1;
    }
  }
  else
  {
    v9 = *a1;
    if (!*a1)
      return 1;
    v5 = 0;
  }
  if (!a4)
    return 0;
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Sum of faceVertexCounts [%zu] != size of faceVertexIndices [%zu].", (const char *)a2, a3, v5, v9);
LABEL_15:
  if (*(char *)(a4 + 23) < 0)
    operator delete(*(void **)a4);
  result = 0;
  *(_OWORD *)a4 = v13;
  *(_QWORD *)(a4 + 16) = v14;
  return result;
}

BOOL pxrInternal__aapl__pxrReserved__::UsdGeomMesh::IsSharpnessInfinite(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this, float a2)
{
  return a2 >= 10.0;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomMesh::GetFaceCount(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *a1)
{
  uint64_t v1;
  unsigned int *v2;
  unsigned int v3;
  _OWORD v5[2];
  uint64_t v6;
  _BYTE v7[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  int v9;
  int v10;
  uint64_t v11;

  pxrInternal__aapl__pxrReserved__::UsdGeomMesh::GetFaceVertexCountsAttr(a1, (uint64_t)v7);
  v6 = 0;
  memset(v5, 0, sizeof(v5));
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<int>>((uint64_t)v7, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v5);
  v1 = *(_QWORD *)&v5[0];
  sub_20BF5618C((uint64_t)v5);
  if ((v11 & 7) != 0)
  {
    v2 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v3 = __ldxr(v2);
    while (__stlxr(v3 - 2, v2));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v10);
  sub_20BFD265C(&v9);
  if (v8)
    sub_20C35C614(v8);
  return v1;
}

void sub_20C567840(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  sub_20BF5618C((uint64_t)&a9);
  sub_20C372B54((uint64_t)&a15);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C567860()
{
  uint64_t *v0;
  void *__p[2];
  char v4;
  void *v5[3];
  uint64_t v6;
  int v7;

  sub_20BEB59B0((uint64_t)&v6, (uint64_t)"Tf", (uint64_t)"TfType::Define");
  sub_20C55C298((unint64_t **)v5);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p, (char **)v5, 0);
  if (v4 < 0)
    operator delete(__p[0]);
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_20C567934(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  uint64_t v16;

  if (a14 < 0)
    operator delete(__p);
  if (a15)
    operator delete(a15);
  sub_20BEB24F4(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_20C567980(char *a1)
{
  unint64_t v2;
  unint64_t v3;
  void *__p[2];
  char v5;

  v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  if (v5 < 0)
    operator delete(__p[0]);
  v3 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  if (v5 < 0)
    operator delete(__p[0]);
  pxrInternal__aapl__pxrReserved__::TfType::AddAlias((uint64_t *)&v3, v2, a1);
}

void sub_20C567A10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGetStageUpAxis(uint64_t *a1@<X0>, unsigned int **a2@<X8>)
{
  uint64_t (*v4)(uint64_t *);
  char v5;
  pxrInternal__aapl__pxrReserved__::UsdStage *v6;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v7;
  pxrInternal__aapl__pxrReserved__::UsdStage *v8;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v9;
  _QWORD v10[4];
  char v11;

  v4 = sub_20C369024(a1);
  if (v5 & 1 | (unint64_t)v4)
  {
    v6 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C348E08(a1);
    v7 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v7)
      v7 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (pxrInternal__aapl__pxrReserved__::UsdStage::HasAuthoredMetadata(v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v7 + 1184)))
    {
      *a2 = 0;
      v8 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C348E08(a1);
      v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v9)
        v9 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      sub_20C44FB10(v8, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v9 + 1184), a2);
    }
    else
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomGetFallbackUpAxis(a2);
    }
  }
  else
  {
    v10[0] = "usdGeom/metrics.cpp";
    v10[1] = "UsdGeomGetStageUpAxis";
    v10[2] = 54;
    v10[3] = "TfToken pxrInternal__aapl__pxrReserved__::UsdGeomGetStageUpAxis(const UsdStageWeakPtr &)";
    v11 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v10, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid UsdStage");
    *a2 = 0;
  }
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGetFallbackUpAxis(unsigned int **a1@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase *Instance;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::VtValue *Fallback;
  pxrInternal__aapl__pxrReserved__::PlugRegistry *v10;
  unsigned int *v11;
  unsigned int v12;
  pxrInternal__aapl__pxrReserved__::PlugRegistry *v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  const void ***v20;
  _QWORD *v21;
  const void ***JsObject;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v23;
  unint64_t String;
  __int128 v25;
  uint64_t v26;
  const char *v27;
  unint64_t v28;
  const char *v29;
  int v30;
  uint64_t v31;
  const char *v32;
  unint64_t v33;
  const char *v34;
  int v35;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v36;
  _QWORD *v37;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v38;
  unint64_t v39;
  const char *v40;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v41;
  std::string *v42;
  uint64_t v43;
  const char *v44;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v45;
  unint64_t v46;
  const char *v47;
  uint64_t v48;
  const char *v49;
  unint64_t v50;
  const char *v51;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v52;
  unint64_t v53;
  const char *v54;
  void **v55;
  char v56;
  uint64_t v57;
  unint64_t v58;
  const char *v59;
  unsigned int *v60;
  unsigned int v61;
  std::__shared_weak_count *v62;
  unint64_t *p_shared_owners;
  unint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  uint64_t v68;
  unsigned int *v69;
  unsigned int v70;
  unsigned int v71;
  uint64_t *v72;
  unsigned int *v73;
  unsigned int v74;
  unsigned int *v75;
  unsigned int v76;
  unsigned int *v78;
  unsigned int v79;
  uint64_t v80;
  void *__p[2];
  uint64_t v82;
  uint64_t v83;
  std::__shared_weak_count *v84;
  uint64_t v85[3];
  void **v86;
  const char *v87;
  uint64_t v88;
  const char *v89;
  char v90;
  unint64_t *v91;
  std::__shared_weak_count *v92;
  uint64_t v93[3];
  uint64_t v94;
  uint64_t v95;
  __int128 i;
  __int128 v97;
  uint64_t v98;
  std::string v99;
  _QWORD v100[3];

  v3 = (uint64_t *)atomic_load(&qword_254989988);
  if (v3)
    goto LABEL_2;
  v3 = (uint64_t *)operator new(8uLL);
  *v3 = 0;
  v100[0] = 0;
  memset(&v99, 0, sizeof(v99));
  Instance = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
  if (!Instance)
    Instance = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  Fallback = (pxrInternal__aapl__pxrReserved__::VtValue *)pxrInternal__aapl__pxrReserved__::SdfSchemaBase::GetFallback(Instance, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1184));
  v10 = (pxrInternal__aapl__pxrReserved__::PlugRegistry *)sub_20BFB46E8(Fallback);
  v98 = *(_QWORD *)v10;
  if ((v98 & 7) != 0)
  {
    v11 = (unsigned int *)(v98 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 2, v11));
    if ((v12 & 1) == 0)
      v98 &= 0xFFFFFFFFFFFFFFF8;
  }
  v13 = (pxrInternal__aapl__pxrReserved__::PlugRegistry *)pxrInternal__aapl__pxrReserved__::PlugRegistry::GetInstance(v10);
  pxrInternal__aapl__pxrReserved__::PlugRegistry::GetAllPlugins((uint64_t *)&v97, v13);
  for (i = v97; (_QWORD)i != *((_QWORD *)&i + 1); sub_20C568BCC(&i))
  {
    v16 = (uint64_t *)sub_20C5689A8((uint64_t *)&i, v14, v15);
    v17 = v16[1];
    v94 = *v16;
    v95 = v17;
    if (v17)
    {
      v18 = (unsigned int *)(v17 + 8);
      do
        v19 = __ldxr(v18);
      while (__stxr(v19 + 1, v18));
    }
    v20 = (const void ***)sub_20BF444D8(&v94);
    pxrInternal__aapl__pxrReserved__::PlugPlugin::GetMetadata(v20, v93);
    pxrInternal__aapl__pxrReserved__::JsValue::JsValue((pxrInternal__aapl__pxrReserved__::JsValue *)&v91);
    v21 = (_QWORD *)sub_20C568A24();
    if (!sub_20C568C48((pxrInternal__aapl__pxrReserved__::TfToken *)v93, v21, &v91))
    {
LABEL_112:
      v30 = 0;
      goto LABEL_113;
    }
    if (!pxrInternal__aapl__pxrReserved__::JsValue::IsObject((pxrInternal__aapl__pxrReserved__::JsValue *)&v91))
    {
      v86 = (void **)"usdGeom/metrics.cpp";
      v87 = "_fallbackUpAxis_Tf_StaticDataFactoryImpl";
      v88 = 107;
      v89 = "void pxrInternal__aapl__pxrReserved__::_fallbackUpAxis_Tf_StaticDataFactoryImpl(std::remove_const_t<TfToken> *)";
      v90 = 0;
      v26 = sub_20BF444D8(&v94);
      v27 = (const char *)(v26 + 8);
      if (*(char *)(v26 + 31) < 0)
        v27 = *(const char **)v27;
      v28 = *(_QWORD *)sub_20C568A24() & 0xFFFFFFFFFFFFFFF8;
      if (v28)
      {
        v29 = (const char *)(v28 + 16);
        if (*(char *)(v28 + 39) < 0)
          v29 = *(const char **)v29;
      }
      else
      {
        v29 = "";
      }
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v86, 1, (pxrInternal__aapl__pxrReserved__ *)"%s[%s] was not a dictionary in plugInfo.json file.", v27, v29);
      v30 = 4;
      goto LABEL_113;
    }
    JsObject = (const void ***)pxrInternal__aapl__pxrReserved__::JsValue::GetJsObject(&v91);
    sub_20BF1BE5C(v85, JsObject);
    pxrInternal__aapl__pxrReserved__::JsValue::JsValue((pxrInternal__aapl__pxrReserved__::JsValue *)&v83);
    v23 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v23)
      v23 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!sub_20C568C48((pxrInternal__aapl__pxrReserved__::TfToken *)v85, (_QWORD *)v23 + 148, &v83))
    {
LABEL_105:
      v30 = 0;
      goto LABEL_106;
    }
    if (!pxrInternal__aapl__pxrReserved__::JsValue::IsString((pxrInternal__aapl__pxrReserved__::JsValue *)&v83))
    {
      v86 = (void **)"usdGeom/metrics.cpp";
      v87 = "_fallbackUpAxis_Tf_StaticDataFactoryImpl";
      v88 = 122;
      v89 = "void pxrInternal__aapl__pxrReserved__::_fallbackUpAxis_Tf_StaticDataFactoryImpl(std::remove_const_t<TfToken> *)";
      v90 = 0;
      v31 = sub_20BF444D8(&v94);
      v32 = (const char *)(v31 + 8);
      if (*(char *)(v31 + 31) < 0)
        v32 = *(const char **)v32;
      v33 = *(_QWORD *)sub_20C568A24() & 0xFFFFFFFFFFFFFFF8;
      if (v33)
      {
        v34 = (const char *)(v33 + 16);
        if (*(char *)(v33 + 39) < 0)
          v34 = *(const char **)v34;
      }
      else
      {
        v34 = "";
      }
      v38 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v38)
        v38 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      v39 = *((_QWORD *)v38 + 148) & 0xFFFFFFFFFFFFFFF8;
      if (v39)
      {
        v40 = (const char *)(v39 + 16);
        if (*(char *)(v39 + 39) < 0)
          v40 = *(const char **)v40;
      }
      else
      {
        v40 = "";
      }
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v86, 1, (pxrInternal__aapl__pxrReserved__ *)"%s[%s][%s] was not a string.", v32, v34, v40);
      v30 = 4;
      goto LABEL_106;
    }
    String = pxrInternal__aapl__pxrReserved__::JsValue::GetString((pxrInternal__aapl__pxrReserved__::JsValue *)&v83);
    if (*(char *)(String + 23) < 0)
    {
      sub_20BDDBFAC(__p, *(void **)String, *(_QWORD *)(String + 8));
    }
    else
    {
      v25 = *(_OWORD *)String;
      v82 = *(_QWORD *)(String + 16);
      *(_OWORD *)__p = v25;
    }
    v80 = 0;
    if (SHIBYTE(v82) < 0)
    {
      if (__p[1] != (void *)1)
        goto LABEL_76;
      v35 = *(unsigned __int8 *)__p[0];
    }
    else
    {
      if (SHIBYTE(v82) != 1)
        goto LABEL_76;
      v35 = LOBYTE(__p[0]);
    }
    if (v35 == 89)
    {
      v36 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v36)
        v36 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      v37 = (_QWORD *)((char *)v36 + 1344);
    }
    else
    {
      if (v35 != 90)
      {
LABEL_76:
        v86 = (void **)"usdGeom/metrics.cpp";
        v87 = "_fallbackUpAxis_Tf_StaticDataFactoryImpl";
        v88 = 139;
        v89 = "void pxrInternal__aapl__pxrReserved__::_fallbackUpAxis_Tf_StaticDataFactoryImpl(std::remove_const_t<TfToken> *)";
        v90 = 0;
        v48 = sub_20BF444D8(&v94);
        v49 = (const char *)(v48 + 8);
        if (*(char *)(v48 + 31) < 0)
          v49 = *(const char **)v49;
        v50 = *(_QWORD *)sub_20C568A24() & 0xFFFFFFFFFFFFFFF8;
        if (v50)
        {
          v51 = (const char *)(v50 + 16);
          if (*(char *)(v50 + 39) < 0)
            v51 = *(const char **)v51;
        }
        else
        {
          v51 = "";
        }
        v52 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
        if (!v52)
          v52 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
        v53 = *((_QWORD *)v52 + 148) & 0xFFFFFFFFFFFFFFF8;
        if (v53)
        {
          v54 = (const char *)(v53 + 16);
          if (*(char *)(v53 + 39) < 0)
            v54 = *(const char **)v54;
        }
        else
        {
          v54 = "";
        }
        v55 = __p;
        if (v82 < 0)
          v55 = (void **)__p[0];
        pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v86, 1, (pxrInternal__aapl__pxrReserved__ *)"%s[%s][%s] had value \"%s\", but only \"Y\" and \"Z\" are allowed.", v49, v51, v54, (const char *)v55);
        v56 = 0;
        v30 = 4;
        goto LABEL_99;
      }
      v41 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v41)
        v41 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      v37 = (_QWORD *)((char *)v41 + 1352);
    }
    sub_20BF32220(&v80, v37);
    if (!v100[0])
    {
      v57 = sub_20BF444D8(&v94);
      std::string::operator=(&v99, (const std::string *)(v57 + 8));
      sub_20BF32220(v100, &v80);
LABEL_92:
      v30 = 0;
      v56 = 1;
      goto LABEL_99;
    }
    if ((v100[0] & 0xFFFFFFFFFFFFFFF8) == (v80 & 0xFFFFFFFFFFFFFFF8))
      goto LABEL_92;
    v86 = (void **)"usdGeom/metrics.cpp";
    v87 = "_fallbackUpAxis_Tf_StaticDataFactoryImpl";
    v88 = 151;
    v89 = "void pxrInternal__aapl__pxrReserved__::_fallbackUpAxis_Tf_StaticDataFactoryImpl(std::remove_const_t<TfToken> *)";
    v90 = 0;
    if ((v99.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v42 = &v99;
    else
      v42 = (std::string *)v99.__r_.__value_.__r.__words[0];
    v43 = sub_20BF444D8(&v94);
    v44 = (const char *)(v43 + 8);
    if (*(char *)(v43 + 31) < 0)
      v44 = *(const char **)v44;
    v45 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v45)
      v45 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v46 = *((_QWORD *)v45 + 148) & 0xFFFFFFFFFFFFFFF8;
    if (v46)
    {
      v47 = (const char *)(v46 + 16);
      if (*(char *)(v46 + 39) < 0)
        v47 = *(const char **)v47;
    }
    else
    {
      v47 = "";
    }
    v58 = v98 & 0xFFFFFFFFFFFFFFF8;
    if ((v98 & 0xFFFFFFFFFFFFFFF8) != 0)
    {
      v59 = (const char *)(v58 + 16);
      if (*(char *)(v58 + 39) < 0)
        v59 = *(const char **)v59;
    }
    else
    {
      v59 = "";
    }
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v86, 1, (pxrInternal__aapl__pxrReserved__ *)"Plugins %s and %s provided different fallback values for %s.  Ignoring all plugins and using schema fallback of \"%s\"", (const char *)v42, v44, v47, v59);
    sub_20BF32220(v3, &v98);
    v56 = 0;
    v30 = 1;
LABEL_99:
    if ((v80 & 7) != 0)
    {
      v60 = (unsigned int *)(v80 & 0xFFFFFFFFFFFFFFF8);
      do
        v61 = __ldxr(v60);
      while (__stlxr(v61 - 2, v60));
    }
    if (SHIBYTE(v82) < 0)
      operator delete(__p[0]);
    if ((v56 & 1) != 0)
      goto LABEL_105;
LABEL_106:
    v62 = v84;
    if (v84)
    {
      p_shared_owners = (unint64_t *)&v84->__shared_owners_;
      do
        v64 = __ldaxr(p_shared_owners);
      while (__stlxr(v64 - 1, p_shared_owners));
      if (!v64)
      {
        ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
        std::__shared_weak_count::__release_weak(v62);
      }
    }
    sub_20BE78E5C((uint64_t)v85, (_QWORD *)v85[1]);
    if (!v30)
      goto LABEL_112;
LABEL_113:
    v65 = v92;
    if (v92)
    {
      v66 = (unint64_t *)&v92->__shared_owners_;
      do
        v67 = __ldaxr(v66);
      while (__stlxr(v67 - 1, v66));
      if (!v67)
      {
        ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
        std::__shared_weak_count::__release_weak(v65);
      }
    }
    sub_20BE78E5C((uint64_t)v93, (_QWORD *)v93[1]);
    v68 = v95;
    if (v95)
    {
      v69 = (unsigned int *)(v95 + 8);
      do
      {
        v70 = __ldxr(v69);
        v71 = v70 - 1;
      }
      while (__stlxr(v71, v69));
      if (!v71)
        (*(void (**)(uint64_t))(*(_QWORD *)v68 + 8))(v68);
    }
    if ((v30 | 4) != 4)
      goto LABEL_129;
  }
  if (v100[0])
    v72 = v100;
  else
    v72 = &v98;
  sub_20BF32220(v3, v72);
LABEL_129:
  v86 = (void **)&v97;
  sub_20BEB4844(&v86);
  if ((v98 & 7) != 0)
  {
    v73 = (unsigned int *)(v98 & 0xFFFFFFFFFFFFFFF8);
    do
      v74 = __ldxr(v73);
    while (__stlxr(v74 - 2, v73));
  }
  if (SHIBYTE(v99.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v99.__r_.__value_.__l.__data_);
  if ((v100[0] & 7) != 0)
  {
    v75 = (unsigned int *)(v100[0] & 0xFFFFFFFFFFFFFFF8);
    do
      v76 = __ldxr(v75);
    while (__stlxr(v76 - 2, v75));
  }
  while (!__ldaxr(&qword_254989988))
  {
    if (!__stlxr((unint64_t)v3, &qword_254989988))
      goto LABEL_2;
  }
  __clrex();
  if ((*v3 & 7) != 0)
  {
    v78 = (unsigned int *)(*v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v79 = __ldxr(v78);
    while (__stlxr(v79 - 2, v78));
  }
  operator delete(v3);
  v3 = (uint64_t *)atomic_load(&qword_254989988);
LABEL_2:
  v4 = *v3;
  *a1 = (unsigned int *)*v3;
  if ((v4 & 7) != 0)
  {
    v5 = (unsigned int *)(v4 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 2, v5));
    if ((v6 & 1) == 0)
      *a1 = v5;
  }
}

void sub_20C568300(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,std::__shared_weak_count *a22,char a23,_QWORD *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,std::__shared_weak_count *a32,char a33,_QWORD *a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint64_t v37;
  unsigned int *v39;
  unsigned int v40;
  unint64_t *p_shared_owners;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  uint64_t v46;
  unsigned int *v47;
  unsigned int v48;
  unsigned int v49;
  uint64_t v50;
  unsigned int *v51;
  unsigned int v52;
  uint64_t v53;
  unsigned int *v54;
  unsigned int v55;

  if ((a14 & 7) != 0)
  {
    v39 = (unsigned int *)(a14 & 0xFFFFFFFFFFFFFFF8);
    do
      v40 = __ldxr(v39);
    while (__stlxr(v40 - 2, v39));
  }
  if (a20 < 0)
    operator delete(__p);
  if (a22)
  {
    p_shared_owners = (unint64_t *)&a22->__shared_owners_;
    do
      v42 = __ldaxr(p_shared_owners);
    while (__stlxr(v42 - 1, p_shared_owners));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))a22->__on_zero_shared)(a22);
      std::__shared_weak_count::__release_weak(a22);
    }
  }
  sub_20BE78E5C((uint64_t)&a23, a24);
  v43 = a32;
  if (a32)
  {
    v44 = (unint64_t *)&a32->__shared_owners_;
    do
      v45 = __ldaxr(v44);
    while (__stlxr(v45 - 1, v44));
    if (!v45)
    {
      ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
      std::__shared_weak_count::__release_weak(v43);
    }
  }
  sub_20BE78E5C((uint64_t)&a33, a34);
  v46 = a37;
  if (a37)
  {
    v47 = (unsigned int *)(a37 + 8);
    do
    {
      v48 = __ldxr(v47);
      v49 = v48 - 1;
    }
    while (__stlxr(v49, v47));
    if (!v49)
      (*(void (**)(uint64_t))(*(_QWORD *)v46 + 8))(v46);
  }
  a26 = v37 - 160;
  sub_20BEB4844((void ***)&a26);
  v50 = *(_QWORD *)(v37 - 136);
  if ((v50 & 7) != 0)
  {
    v51 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v52 = __ldxr(v51);
    while (__stlxr(v52 - 2, v51));
  }
  if (*(char *)(v37 - 105) < 0)
    operator delete(*(void **)(v37 - 128));
  v53 = *(_QWORD *)(v37 - 104);
  if ((v53 & 7) != 0)
  {
    v54 = (unsigned int *)(v53 & 0xFFFFFFFFFFFFFFF8);
    do
      v55 = __ldxr(v54);
    while (__stlxr(v55 - 2, v54));
  }
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomSetStageUpAxis(uint64_t *a1, _QWORD *a2)
{
  uint64_t (*v4)(uint64_t *);
  char v5;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v6;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v7;
  unint64_t v8;
  const char *v9;
  pxrInternal__aapl__pxrReserved__::UsdStage *v10;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v11;
  char *v12;
  unsigned int *v13;
  unsigned int v14;
  uint64_t v15;
  pxrInternal__aapl__pxrReserved__::UsdStage *v16;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v17;
  uint64_t Identifier;
  const char *v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  const char *v28;
  uint64_t v29;
  const char *v30;
  char v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  v4 = sub_20C369024(a1);
  if (!(v5 & 1 | (unint64_t)v4))
  {
    v27 = "usdGeom/metrics.cpp";
    v28 = "UsdGeomSetStageUpAxis";
    v29 = 74;
    v30 = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeomSetStageUpAxis(const UsdStageWeakPtr &, const TfToken &)";
    v31 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v27, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid UsdStage");
    return 0;
  }
  v6 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v6)
    v6 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) != (*((_QWORD *)v6 + 168) & 0xFFFFFFFFFFFFFFF8))
  {
    v7 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v7)
      v7 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v8 = *a2 & 0xFFFFFFFFFFFFFFF8;
    if (v8 != (*((_QWORD *)v7 + 169) & 0xFFFFFFFFFFFFFFF8))
    {
      v27 = "usdGeom/metrics.cpp";
      v28 = "UsdGeomSetStageUpAxis";
      v29 = 82;
      v30 = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeomSetStageUpAxis(const UsdStageWeakPtr &, const TfToken &)";
      v31 = 0;
      if (v8)
      {
        v9 = (const char *)(v8 + 16);
        if (*(char *)(v8 + 39) < 0)
          v9 = *(const char **)v9;
      }
      else
      {
        v9 = "";
      }
      v16 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C348E08(a1);
      pxrInternal__aapl__pxrReserved__::UsdStage::GetRootLayer(v16, &v25);
      v17 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(&v25);
      Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v17);
      if (*(char *)(Identifier + 23) >= 0)
        v19 = (const char *)Identifier;
      else
        v19 = *(const char **)Identifier;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v27, 1, (pxrInternal__aapl__pxrReserved__ *)"UsdStage upAxis can only be set to \"Y\" or \"Z\", not attempted \"%s\" on stage %s.", v9, v19);
      v20 = v26;
      if (v26)
      {
        v21 = (unsigned int *)(v26 + 8);
        do
        {
          v22 = __ldxr(v21);
          v23 = v22 - 1;
        }
        while (__stlxr(v23, v21));
        if (!v23)
          (*(void (**)(uint64_t))(*(_QWORD *)v20 + 8))(v20);
      }
      return 0;
    }
  }
  v10 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C348E08(a1);
  v11 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v11)
    v11 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v12 = (char *)*a2;
  v27 = v12;
  v28 = (char *)&off_24C5207B8 + 1;
  if ((v12 & 7) != 0)
  {
    v13 = (unsigned int *)((unint64_t)v12 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 2, v13));
    if ((v14 & 1) == 0)
      v27 = (char *)v13;
  }
  v15 = pxrInternal__aapl__pxrReserved__::UsdStage::SetMetadata(v10, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v11 + 1184), (const pxrInternal__aapl__pxrReserved__::VtValue *)&v27);
  sub_20BF4C2D8((uint64_t)&v27);
  return v15;
}

void sub_20C5686FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20BF4C2D8((uint64_t)va);
  _Unwind_Resume(a1);
}

double pxrInternal__aapl__pxrReserved__::UsdGeomGetStageMetersPerUnit(uint64_t *a1)
{
  uint64_t (*v2)(uint64_t *);
  char v3;
  pxrInternal__aapl__pxrReserved__::UsdStage *v4;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v5;
  _QWORD v7[4];
  char v8;
  double v9;

  v9 = 0.01;
  v2 = sub_20C369024(a1);
  if (v3 & 1 | (unint64_t)v2)
  {
    v4 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C348E08(a1);
    v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5)
      v5 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    sub_20C44ECEC(v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v5 + 560), &v9);
    return v9;
  }
  else
  {
    v7[0] = "usdGeom/metrics.cpp";
    v7[1] = "UsdGeomGetStageMetersPerUnit";
    v7[2] = 190;
    v7[3] = "double pxrInternal__aapl__pxrReserved__::UsdGeomGetStageMetersPerUnit(const UsdStageWeakPtr &)";
    v8 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v7, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid UsdStage");
    return 0.01;
  }
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomStageHasAuthoredMetersPerUnit(uint64_t *a1)
{
  uint64_t (*v2)(uint64_t *);
  char v3;
  pxrInternal__aapl__pxrReserved__::UsdStage *v4;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v5;
  _QWORD v7[4];
  char v8;

  v2 = sub_20C369024(a1);
  if (v3 & 1 | (unint64_t)v2)
  {
    v4 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C348E08(a1);
    v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5)
      v5 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    return pxrInternal__aapl__pxrReserved__::UsdStage::HasAuthoredMetadata(v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v5 + 560));
  }
  else
  {
    v7[0] = "usdGeom/metrics.cpp";
    v7[1] = "UsdGeomStageHasAuthoredMetersPerUnit";
    v7[2] = 202;
    v7[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeomStageHasAuthoredMetersPerUnit(const UsdStageWeakPtr &)";
    v8 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v7, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid UsdStage");
    return 0;
  }
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomSetStageMetersPerUnit(uint64_t *a1, double a2)
{
  uint64_t (*v3)(uint64_t *);
  char v4;
  pxrInternal__aapl__pxrReserved__::UsdStage *v5;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v6;
  _QWORD v8[4];
  char v9;
  double v10;

  v10 = a2;
  v3 = sub_20C369024(a1);
  if (v4 & 1 | (unint64_t)v3)
  {
    v5 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C348E08(a1);
    v6 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v6)
      v6 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    return sub_20C44E24C(v5, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v6 + 560), &v10);
  }
  else
  {
    v8[0] = "usdGeom/metrics.cpp";
    v8[1] = "UsdGeomSetStageMetersPerUnit";
    v8[2] = 213;
    v8[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeomSetStageMetersPerUnit(const UsdStageWeakPtr &, double)";
    v9 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v8, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid UsdStage");
    return 0;
  }
}

BOOL pxrInternal__aapl__pxrReserved__::UsdGeomLinearUnitsAre(pxrInternal__aapl__pxrReserved__ *this, double a2, double a3, double a4)
{
  _BOOL8 result;
  double v5;

  result = 0;
  if (a2 > 0.0 && a3 > 0.0)
  {
    v5 = vabdd_f64(a2, a3);
    return v5 / a2 < a4 && v5 / a3 < a4;
  }
  return result;
}

uint64_t sub_20C5689A8(uint64_t *a1, uint64_t a2, char *a3)
{
  uint64_t result;
  _QWORD v5[4];
  char v6;
  int v7;

  result = *a1;
  if (result == a1[1])
  {
    v5[0] = "tf/iterator.h";
    v5[1] = "operator*";
    v5[2] = 271;
    v5[3] = "Reference pxrInternal__aapl__pxrReserved__::TfIterator<std::vector<pxrInternal__aapl__pxrReserved__::TfWeakP"
            "tr<pxrInternal__aapl__pxrReserved__::PlugPlugin>>>::operator*() [T = std::vector<pxrInternal__aapl__pxrReser"
            "ved__::TfWeakPtr<pxrInternal__aapl__pxrReserved__::PlugPlugin>>, Reverse = false]";
    v6 = 0;
    v7 = 4;
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper *)v5, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted", a3);
  }
  return result;
}

void sub_20C568A1C()
{
  JUMPOUT(0x20C5689CCLL);
}

unint64_t sub_20C568A24()
{
  char *v0;
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  _QWORD *v5;
  _QWORD *v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int *v11;
  unsigned int v12;
  void **v13;
  char v14;

  v0 = (char *)atomic_load(&qword_254989990);
  if (!v0)
  {
    v0 = (char *)operator new(0x20uLL);
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v0, "UsdGeomMetrics", 0);
    v2 = *(_QWORD *)v0;
    if ((*(_QWORD *)v0 & 7) != 0)
    {
      v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
      do
        v4 = __ldxr(v3);
      while (__stxr(v4 + 2, v3));
      if ((v4 & 1) == 0)
        v2 &= 0xFFFFFFFFFFFFFFF8;
    }
    *((_QWORD *)v0 + 1) = 0;
    *((_QWORD *)v0 + 2) = 0;
    *((_QWORD *)v0 + 3) = 0;
    v13 = (void **)(v0 + 8);
    v14 = 0;
    v5 = operator new(8uLL);
    *((_QWORD *)v0 + 1) = v5;
    *((_QWORD *)v0 + 2) = v5;
    *v5 = v2;
    v6 = v5 + 1;
    *((_QWORD *)v0 + 3) = v5 + 1;
    if ((v2 & 7) != 0)
    {
      v7 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 2, v7));
      if ((v8 & 1) == 0)
        *v5 &= 0xFFFFFFFFFFFFFFF8;
      *((_QWORD *)v0 + 2) = v6;
      do
        v9 = __ldxr(v7);
      while (__stlxr(v9 - 2, v7));
    }
    else
    {
      *((_QWORD *)v0 + 2) = v6;
    }
    while (!__ldaxr(&qword_254989990))
    {
      if (!__stlxr((unint64_t)v0, &qword_254989990))
        return (unint64_t)v0;
    }
    __clrex();
    v13 = (void **)(v0 + 8);
    sub_20BEEB2B8(&v13);
    if ((*(_QWORD *)v0 & 7) != 0)
    {
      v11 = (unsigned int *)(*(_QWORD *)v0 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stlxr(v12 - 2, v11));
    }
    operator delete(v0);
    return atomic_load(&qword_254989990);
  }
  return (unint64_t)v0;
}

void sub_20C568B6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  _QWORD *v9;
  uint64_t v10;
  unsigned int *v12;
  unsigned int v13;
  unsigned int *v14;
  unsigned int v15;

  sub_20BEEB2B8(&a9);
  if ((v10 & 7) != 0)
  {
    v12 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stlxr(v13 - 2, v12));
  }
  if ((*v9 & 7) != 0)
  {
    v14 = (unsigned int *)(*v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v15 = __ldxr(v14);
    while (__stlxr(v15 - 2, v14));
  }
  operator delete(v9);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C568BCC(_QWORD *a1)
{
  _QWORD v3[4];
  char v4;

  if (*a1 == a1[1])
  {
    v3[0] = "tf/iterator.h";
    v3[1] = "operator++";
    v3[2] = 250;
    v3[3] = "TfIterator<T, Reverse> &pxrInternal__aapl__pxrReserved__::TfIterator<std::vector<pxrInternal__aapl__pxrReser"
            "ved__::TfWeakPtr<pxrInternal__aapl__pxrReserved__::PlugPlugin>>>::operator++() [T = std::vector<pxrInternal_"
            "_aapl__pxrReserved__::TfWeakPtr<pxrInternal__aapl__pxrReserved__::PlugPlugin>>, Reverse = false]";
    v4 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v3, 1, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted");
  }
  else
  {
    *a1 += 16;
  }
  return a1;
}

BOOL sub_20C568C48(pxrInternal__aapl__pxrReserved__::TfToken *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t *EmptyString;
  uint64_t v6;
  uint64_t v7;
  char *v8;

  if ((*a2 & 0xFFFFFFFFFFFFFFF8) != 0)
    EmptyString = (uint64_t *)((*a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  else
    EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(a1);
  v6 = sub_20BDEEBA4((uint64_t)a1, (const void **)EmptyString);
  v7 = v6;
  v8 = (char *)a1 + 8;
  if (v8 != (char *)v6)
    sub_20BDE881C(a3, (uint64_t *)(v6 + 56));
  return v8 != (char *)v7;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::~UsdGeomModelAPI(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::UsdAPISchemaBase::~UsdAPISchemaBase(this);
  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t (*v6)(uint64_t *);
  char v7;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;

  v6 = sub_20C369024(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v13);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *((_QWORD *)a3 + 3) = 0;
    *(_QWORD *)a3 = off_24C53C890;
    if ((v16 & 7) != 0)
    {
      v9 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
  }
  else
  {
    v13 = "usdGeom/modelAPI.cpp";
    v14 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Get";
    v15 = 51;
    v16 = (unint64_t)"static UsdGeomModelAPI pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::Get(const UsdStage"
                            "Ptr &, const SdfPath &)";
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v13, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v13) = 1;
    v14 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v15);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v15 + 1);
    v16 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *((_QWORD *)a3 + 3) = 0;
    *(_QWORD *)a3 = off_24C53C890;
    if ((v16 & 7) != 0)
    {
      v11 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stlxr(v12 - 2, v11));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v15 + 1);
  sub_20BFD265C(&v15);
  if (v14)
    sub_20C35C614(v14);
}

void sub_20C568E4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this)
{
  return 5;
}

uint64_t sub_20C568E74(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *a1, uint64_t a2)
{
  const pxrInternal__aapl__pxrReserved__::TfType *v4;
  pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry *SchemaInfo;
  const std::type_info *v6;
  char *v7;
  pxrInternal__aapl__pxrReserved__::TfType *v9;
  uint64_t TypeName;
  const char *v11;
  _QWORD v12[4];
  char v13;

  pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::_GetStaticTfType(a1);
  SchemaInfo = (pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry *)pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry::FindSchemaInfo((pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry *)&qword_254989998, v4);
  if (SchemaInfo)
    return pxrInternal__aapl__pxrReserved__::UsdPrim::_CanApplySingleApplyAPI(a1, SchemaInfo, a2);
  v12[0] = "usd/prim.h";
  v12[1] = "CanApplyAPI";
  v12[2] = 1024;
  v12[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdPrim::CanApplyAPI(std::string *) const [SchemaType = pxrInternal__a"
           "apl__pxrReserved__::UsdGeomModelAPI]";
  v13 = 0;
  TypeName = pxrInternal__aapl__pxrReserved__::TfType::GetTypeName(v9);
  if (*(char *)(TypeName + 23) >= 0)
    v11 = (const char *)TypeName;
  else
    v11 = *(const char **)TypeName;
  pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v12, 1, (pxrInternal__aapl__pxrReserved__ *)"Class '%s' is not correctly registered with the UsdSchemaRegistry as a schema type. The schema may need to be regenerated.", v11);
  return 0;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::Apply(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a2@<X8>)
{
  unsigned int *v5;
  unsigned int v6;
  int v7;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  int v9;
  int v10;
  uint64_t v11;

  if (sub_20C56902C(this))
  {
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a2, this);
    *((_QWORD *)a2 + 3) = 0;
    *(_QWORD *)a2 = off_24C53C890;
  }
  else
  {
    v7 = 1;
    v8 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v9);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v10);
    v11 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a2, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v7);
    *((_QWORD *)a2 + 3) = 0;
    *(_QWORD *)a2 = off_24C53C890;
    if ((v11 & 7) != 0)
    {
      v5 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
      do
        v6 = __ldxr(v5);
      while (__stlxr(v6 - 2, v5));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v10);
    sub_20BFD265C(&v9);
    if (v8)
      sub_20C35C614(v8);
  }
}

void sub_20C569018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C56902C(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *a1)
{
  const pxrInternal__aapl__pxrReserved__::TfType *v2;
  const pxrInternal__aapl__pxrReserved__::TfToken *SchemaInfo;
  const std::type_info *v4;
  char *v5;
  pxrInternal__aapl__pxrReserved__::TfType *v7;
  uint64_t TypeName;
  const char *v9;
  _QWORD v10[4];
  char v11;

  pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::_GetStaticTfType(a1);
  SchemaInfo = (const pxrInternal__aapl__pxrReserved__::TfToken *)pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry::FindSchemaInfo((pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry *)&qword_254989998, v2);
  if (SchemaInfo)
    return pxrInternal__aapl__pxrReserved__::UsdPrim::_ApplySingleApplyAPI(a1, SchemaInfo);
  v10[0] = "usd/prim.h";
  v10[1] = "ApplyAPI";
  v10[2] = 1147;
  v10[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdPrim::ApplyAPI() const [SchemaType = pxrInternal__aapl__pxrReserved"
           "__::UsdGeomModelAPI]";
  v11 = 0;
  TypeName = pxrInternal__aapl__pxrReserved__::TfType::GetTypeName(v7);
  if (*(char *)(TypeName + 23) >= 0)
    v9 = (const char *)TypeName;
  else
    v9 = *(const char **)TypeName;
  pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v10, 1, (pxrInternal__aapl__pxrReserved__ *)"Class '%s' is not correctly registered with the UsdSchemaRegistry as a schema type. The schema may need to be regenerated.", v9);
  return 0;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this)
{
  unsigned __int8 v1;
  const std::type_info *v3;
  char *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_2549899A0);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_2549899A0))
  {
    __cxa_guard_release(&qword_2549899A0);
  }
  return &qword_254989998;
}

void sub_20C569148(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2549899A0);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *v3;
  const std::type_info *v4;
  char *v5;

  v1 = atomic_load((unsigned __int8 *)&qword_2549899B0);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *)__cxa_guard_acquire(&qword_2549899B0);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::_GetStaticTfType(v3);
      byte_2549899A8 = sub_20C35BD7C((char *)&qword_254989998, v4, v5);
      __cxa_guard_release(&qword_2549899B0);
    }
  }
  return byte_2549899A8;
}

void sub_20C5691C4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2549899B0);
  _Unwind_Resume(a1);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::_GetStaticTfType(this);
  return &qword_254989998;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetModelDrawModeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 632), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C56929C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::CreateModelDrawModeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 632), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetModelApplyDrawModeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 568), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C5693F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::CreateModelApplyDrawModeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 568), v9, 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetModelDrawModeColorAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 640), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C56954C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::CreateModelDrawModeColorAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 640), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 160), 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetModelCardGeometryAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 576), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C5696A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::CreateModelCardGeometryAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 576), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetModelCardTextureXPosAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 592), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C5697FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::CreateModelCardTextureXPosAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 592), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 96), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetModelCardTextureYPosAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 608), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C569954(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::CreateModelCardTextureYPosAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 608), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 96), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetModelCardTextureZPosAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 624), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C569AAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::CreateModelCardTextureZPosAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 624), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 96), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetModelCardTextureXNegAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 584), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C569C04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::CreateModelCardTextureXNegAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 584), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 96), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetModelCardTextureYNegAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 600), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C569D5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::CreateModelCardTextureYNegAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 600), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 96), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetModelCardTextureZNegAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 616), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C569EB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::CreateModelCardTextureZNegAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 616), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 96), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this)
{
  int v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v17;
  uint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v21;
  uint64_t v22;
  unsigned int *v23;
  unsigned int v24;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v25;
  uint64_t v26;
  unsigned int *v27;
  unsigned int v28;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v29;
  uint64_t v30;
  unsigned int *v31;
  unsigned int v32;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v33;
  uint64_t v34;
  unsigned int *v35;
  unsigned int v36;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v37;
  uint64_t v38;
  unsigned int *v39;
  unsigned int v40;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v41;
  uint64_t v42;
  unsigned int *v43;
  unsigned int v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int *v48;
  unsigned int v49;
  uint64_t *SchemaAttributeNames;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v1 = (int)this;
  v61 = *MEMORY[0x24BDAC8D0];
  v2 = atomic_load((unsigned __int8 *)&qword_2549899D0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2549899D0))
  {
    v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5)
      v5 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v6 = *((_QWORD *)v5 + 79);
    v51 = v6;
    if ((v6 & 7) != 0)
    {
      v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 2, v7));
      if ((v8 & 1) == 0)
        v51 &= 0xFFFFFFFFFFFFFFF8;
    }
    v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9)
      v9 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v10 = *((_QWORD *)v9 + 71);
    v52 = v10;
    if ((v10 & 7) != 0)
    {
      v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 2, v11));
      if ((v12 & 1) == 0)
        v52 &= 0xFFFFFFFFFFFFFFF8;
    }
    v13 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v13)
      v13 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v14 = *((_QWORD *)v13 + 80);
    v53 = v14;
    if ((v14 & 7) != 0)
    {
      v15 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 2, v15));
      if ((v16 & 1) == 0)
        v53 &= 0xFFFFFFFFFFFFFFF8;
    }
    v17 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v17)
      v17 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v18 = *((_QWORD *)v17 + 72);
    v54 = v18;
    if ((v18 & 7) != 0)
    {
      v19 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 2, v19));
      if ((v20 & 1) == 0)
        v54 &= 0xFFFFFFFFFFFFFFF8;
    }
    v21 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v21)
      v21 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v22 = *((_QWORD *)v21 + 74);
    v55 = v22;
    if ((v22 & 7) != 0)
    {
      v23 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
      do
        v24 = __ldxr(v23);
      while (__stxr(v24 + 2, v23));
      if ((v24 & 1) == 0)
        v55 &= 0xFFFFFFFFFFFFFFF8;
    }
    v25 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v25)
      v25 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v26 = *((_QWORD *)v25 + 76);
    v56 = v26;
    if ((v26 & 7) != 0)
    {
      v27 = (unsigned int *)(v26 & 0xFFFFFFFFFFFFFFF8);
      do
        v28 = __ldxr(v27);
      while (__stxr(v28 + 2, v27));
      if ((v28 & 1) == 0)
        v56 &= 0xFFFFFFFFFFFFFFF8;
    }
    v29 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v29)
      v29 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v30 = *((_QWORD *)v29 + 78);
    v57 = v30;
    if ((v30 & 7) != 0)
    {
      v31 = (unsigned int *)(v30 & 0xFFFFFFFFFFFFFFF8);
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 2, v31));
      if ((v32 & 1) == 0)
        v57 &= 0xFFFFFFFFFFFFFFF8;
    }
    v33 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v33)
      v33 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v34 = *((_QWORD *)v33 + 73);
    v58 = v34;
    if ((v34 & 7) != 0)
    {
      v35 = (unsigned int *)(v34 & 0xFFFFFFFFFFFFFFF8);
      do
        v36 = __ldxr(v35);
      while (__stxr(v36 + 2, v35));
      if ((v36 & 1) == 0)
        v58 &= 0xFFFFFFFFFFFFFFF8;
    }
    v37 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v37)
      v37 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v38 = *((_QWORD *)v37 + 75);
    v59 = v38;
    if ((v38 & 7) != 0)
    {
      v39 = (unsigned int *)(v38 & 0xFFFFFFFFFFFFFFF8);
      do
        v40 = __ldxr(v39);
      while (__stxr(v40 + 2, v39));
      if ((v40 & 1) == 0)
        v59 &= 0xFFFFFFFFFFFFFFF8;
    }
    v41 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v41)
      v41 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v42 = *((_QWORD *)v41 + 77);
    v60 = v42;
    if ((v42 & 7) != 0)
    {
      v43 = (unsigned int *)(v42 & 0xFFFFFFFFFFFFFFF8);
      do
        v44 = __ldxr(v43);
      while (__stxr(v44 + 2, v43));
      if ((v44 & 1) == 0)
        v60 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_20C374970(&qword_2549899B8, &v51, 0xAuLL);
    v45 = &v61;
    do
    {
      v47 = *--v45;
      v46 = v47;
      if ((v47 & 7) != 0)
      {
        v48 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
        do
          v49 = __ldxr(v48);
        while (__stlxr(v49 - 2, v48));
      }
    }
    while (v45 != &v51);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_2549899B8, &dword_20BDBC000);
    __cxa_guard_release(&qword_2549899D0);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_2549899F0);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2549899F0))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdAPISchemaBase::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdAPISchemaBase *)1);
    sub_20C56A498((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_2549899D8, &dword_20BDBC000);
    __cxa_guard_release(&qword_2549899F0);
  }
  if (v1)
    return &qword_2549899D8;
  else
    return &qword_2549899B8;
}

void sub_20C56A408(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2549899D0);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C56A498(uint64_t **a1)
{
  qword_2549899E0 = 0;
  unk_2549899E8 = 0;
  qword_2549899D8 = 0;
  sub_20BFC9A6C((char **)&qword_2549899D8, ((unk_2549899C0 - qword_2549899B8) >> 3) + a1[1] - *a1);
  sub_20C1292A0(&qword_2549899D8, (_QWORD *)qword_2549899E0, *a1, a1[1], a1[1] - *a1);
  return sub_20C1292A0(&qword_2549899D8, (_QWORD *)qword_2549899E0, (uint64_t *)qword_2549899B8, unk_2549899C0, (unk_2549899C0 - qword_2549899B8) >> 3);
}

void sub_20C56A52C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetExtentsHint(uint64_t a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  uint64_t v12;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v13;
  int v14;
  int v15;
  uint64_t v16;
  _BYTE v17[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v18;
  int v19;
  int v20;
  uint64_t v21;

  sub_20C35C4F8((uint64_t)&v12, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v12, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 304), (uint64_t)v17);
  if ((v16 & 7) != 0)
  {
    v4 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v15);
  sub_20BFD265C(&v14);
  if (v13)
    sub_20C35C614(v13);
  if ((pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)v17, v6) & 1) != 0)
  {
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::GfVec3f>>((uint64_t)v17, a2);
    v8 = v7;
  }
  else
  {
    v8 = 0;
  }
  if ((v21 & 7) != 0)
  {
    v9 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
  sub_20BFD265C(&v19);
  if (v18)
    sub_20C35C614(v18);
  return v8;
}

void sub_20C56A668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::SetExtentsHint(uint64_t a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2, double *a3)
{
  unint64_t v6;
  _QWORD *OrderedPurposeTokens;
  BOOL v8;
  uint64_t v9;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v11;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v12;
  unsigned int *v13;
  unsigned int v14;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v15;
  unsigned int *v16;
  unsigned int v17;
  _BYTE v18[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v19;
  int v20;
  int v21;
  uint64_t v22;
  pxrInternal__aapl__pxrReserved__ *v23;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v24;
  uint64_t v25;
  unint64_t v26;
  char v27;

  v6 = *(_QWORD *)a2;
  OrderedPurposeTokens = pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetOrderedPurposeTokens((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)a1);
  v8 = v6 >= 2 && (v6 & 1) == 0;
  if (v8 && v6 <= (uint64_t)(OrderedPurposeTokens[1] - *OrderedPurposeTokens) >> 2)
  {
    sub_20C35C4F8((uint64_t)v18, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
    v11 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v11)
      v11 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v12 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
    if (!v12)
      v12 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
    pxrInternal__aapl__pxrReserved__::UsdPrim::CreateAttribute((uint64_t)v18, (uint64_t *)v11 + 38, (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v12 + 616), 0, 0, (uint64_t)&v23);
    if ((v22 & 7) != 0)
    {
      v13 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
      do
        v14 = __ldxr(v13);
      while (__stlxr(v14 - 2, v13));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v21);
    sub_20BFD265C(&v20);
    if (v19)
      sub_20C35C614(v19);
    if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v23, v15))v9 = pxrInternal__aapl__pxrReserved__::UsdAttribute::_Set<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::GfVec3f>>(&v23, a2, *a3);
    else
      v9 = 0;
    if ((v26 & 7) != 0)
    {
      v16 = (unsigned int *)(v26 & 0xFFFFFFFFFFFFFFF8);
      do
        v17 = __ldxr(v16);
      while (__stlxr(v17 - 2, v16));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v25 + 1);
    sub_20BFD265C(&v25);
    if (v24)
      sub_20C35C614(v24);
  }
  else
  {
    v23 = (pxrInternal__aapl__pxrReserved__ *)"usdGeom/modelAPI.cpp";
    v24 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"SetExtentsHint";
    v25 = 354;
    v26 = (unint64_t)"BOOL pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::SetExtentsHint(const VtVec3fArray &,"
                            " const UsdTimeCode &) const";
    v27 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v23, 1, (pxrInternal__aapl__pxrReserved__ *)"invalid extents size (%zu) - must be an even number >= 2 and <= 2 * UsdGeomImageable::GetOrderedPurposeTokens().size() (%zu)", v6, (uint64_t)(OrderedPurposeTokens[1] - *OrderedPurposeTokens) >> 2);
    return 0;
  }
  return v9;
}

void sub_20C56A860(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetExtentsHintAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 304), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C56A930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::ComputeExtentsHint(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  unsigned __int8 v7;
  uint64_t *v8;
  _DWORD *v9;
  unsigned int *v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  int v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int *v34;
  unsigned int v35;
  uint64_t v36;
  char *v37;
  double v38;
  float32_t v39;
  float32x2_t *v40;
  double v41;
  uint64_t v42;
  char *v43;
  float32_t v44;
  float32x2_t *v45;
  uint64_t v46;
  char *v47;
  int32x2_t *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable *v53;
  uint64_t *v54;
  float64x2_t v55;
  float64x2_t v56;
  void ***v57;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v58;
  int v59;
  int v60;
  uint64_t v61;
  void **v62;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  float64x2_t v67;
  double v68;
  float64x2_t v69;
  double v70;
  uint64_t *v71[3];
  void (**v72)(pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *__hidden);
  uint64_t v73;

  v7 = atomic_load((unsigned __int8 *)&qword_254989A00);
  if ((v7 & 1) == 0)
  {
    v53 = (pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)__cxa_guard_acquire(&qword_254989A00);
    if ((_DWORD)v53)
    {
      qword_2549899F8 = (uint64_t)pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetOrderedPurposeTokens(v53);
      __cxa_guard_release(&qword_254989A00);
    }
  }
  if (*(_QWORD *)qword_2549899F8 != *(_QWORD *)(qword_2549899F8 + 8)
    || (v62 = (void **)"usdGeom/modelAPI.cpp",
        v63 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"ComputeExtentsHint",
        v64 = 378,
        v65 = (unint64_t)"VtVec3fArray pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::ComputeExtentsHint(UsdGe"
                                "omBBoxCache &) const",
        v66 = 0,
        v52 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"we have no purpose!", (const char *)a2, a3), (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v62, "!purposeTokens.empty()", v52) & 1) != 0))
  {
    *(_QWORD *)(a4 + 32) = 0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    v8 = (uint64_t *)((char *)this + 8);
    v9 = (_DWORD *)((char *)this + 16);
    v54 = v8;
    sub_20C35C4F8((uint64_t)&v62, v8, v9);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v72, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v62);
    v72 = off_24C53C378;
    if ((v65 & 7) != 0)
    {
      v10 = (unsigned int *)(v65 & 0xFFFFFFFFFFFFFFF8);
      do
        v11 = __ldxr(v10);
      while (__stlxr(v11 - 2, v10));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v64 + 1);
    sub_20BFD265C(&v64);
    if (v63)
      sub_20C35C614(v63);
    if (v73
      && (*(_BYTE *)(v73 + 57) & 8) == 0
      && ((unsigned int (*)(pxrInternal__aapl__pxrReserved__::UsdTyped *))v72[4])((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v72))
    {
      v62 = (void **)*((_QWORD *)a2 + 42);
      if (pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::ComputeExtentFromPlugins((uint64_t)&v72, (uint64_t)&v62, a4)&& *(_QWORD *)a4)
      {
        v12 = (uint64_t)(*(_QWORD *)(qword_2549899F8 + 8) - *(_QWORD *)qword_2549899F8) >> 2;
        LODWORD(v63) = 0;
        v62 = 0;
        *(_QWORD *)&v67.f64[0] = &v62;
        sub_20BF5AD04((unint64_t *)a4, v12, (uint64_t **)&v67);
        if (*(_QWORD *)(qword_2549899F8 + 8) - *(_QWORD *)qword_2549899F8 != 8)
        {
          v15 = 0;
          v16 = 1;
          do
          {
            sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a4, v13, v14);
            v17 = *(uint64_t **)(a4 + 32);
            sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a4, v18, v19);
            v20 = *(_QWORD *)(a4 + 32) + v15;
            v21 = *v17;
            *(_DWORD *)(v20 + 32) = *((_DWORD *)v17 + 2);
            *(_QWORD *)(v20 + 24) = v21;
            sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a4, v22, v23);
            v24 = *(_QWORD *)(a4 + 32);
            sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a4, v25, v26);
            v27 = *(_QWORD *)(a4 + 32) + v15;
            v28 = *(_DWORD *)(v24 + 20);
            *(_QWORD *)(v27 + 36) = *(_QWORD *)(v24 + 12);
            *(_DWORD *)(v27 + 44) = v28;
            ++v16;
            v15 += 24;
          }
          while (v16 != (uint64_t)(*(_QWORD *)(qword_2549899F8 + 8) - *(_QWORD *)qword_2549899F8) >> 3);
        }
      }
      else
      {
        LODWORD(v63) = 0;
        v62 = 0;
        *(_QWORD *)&v67.f64[0] = &v62;
        sub_20BF5AD04((unint64_t *)a4, 2uLL, (uint64_t **)&v67);
        sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a4, v46, v47);
        v48 = *(int32x2_t **)(a4 + 32);
        *v48 = vdup_n_s32(0x7F7FFFFFu);
        v48[1].i32[0] = 2139095039;
        sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a4, v49, v50);
        v51 = *(_QWORD *)(a4 + 32);
        *(_QWORD *)(v51 + 12) = 0x80000000800000;
        *(_DWORD *)(v51 + 20) = -8388609;
      }
    }
    else
    {
      v29 = (uint64_t)(*(_QWORD *)(qword_2549899F8 + 8) - *(_QWORD *)qword_2549899F8) >> 2;
      LODWORD(v63) = 0;
      v62 = 0;
      *(_QWORD *)&v67.f64[0] = &v62;
      sub_20BF5AD04((unint64_t *)a4, v29, (uint64_t **)&v67);
      sub_20C143C84(v71, 1uLL);
      v30 = *(_QWORD *)(qword_2549899F8 + 8) - *(_QWORD *)qword_2549899F8;
      if (v30)
      {
        v31 = 0;
        v32 = 0;
        v33 = v30 >> 3;
        do
        {
          sub_20BF32220(v71[0], (_QWORD *)(*(_QWORD *)qword_2549899F8 + 8 * v31));
          pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::SetIncludedPurposes((uint64_t)a2, v71);
          sub_20C35C4F8((uint64_t)&v57, v54, v9);
          pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeUntransformedBound(a2, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v57, (pxrInternal__aapl__pxrReserved__::GfBBox3d *)&v62);
          pxrInternal__aapl__pxrReserved__::GfBBox3d::ComputeAlignedRange((pxrInternal__aapl__pxrReserved__::GfBBox3d *)&v62, (uint64_t)&v67);
          if ((v61 & 7) != 0)
          {
            v34 = (unsigned int *)(v61 & 0xFFFFFFFFFFFFFFF8);
            do
              v35 = __ldxr(v34);
            while (__stlxr(v35 - 2, v34));
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v60);
          sub_20BFD265C(&v59);
          if (v58)
            sub_20C35C614(v58);
          v55 = v67;
          v38 = v68;
          sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a4, v36, v37);
          v39 = v38;
          v40 = (float32x2_t *)(*(_QWORD *)(a4 + 32) + 24 * v31);
          *v40 = vcvt_f32_f64(v55);
          v40[1].f32[0] = v39;
          v56 = v69;
          v41 = v70;
          sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a4, v42, v43);
          v44 = v41;
          v45 = (float32x2_t *)(*(_QWORD *)(a4 + 32) + 12 * ((2 * v31) | 1));
          *v45 = vcvt_f32_f64(v56);
          v45[1].f32[0] = v44;
          if (v67.f64[0] > v69.f64[0] || v67.f64[1] > v69.f64[1] || (v30 = v31, v68 > v70))
            v30 = v32;
          ++v31;
          v32 = v30;
        }
        while (v31 != v33);
      }
      LODWORD(v63) = 0;
      v62 = 0;
      v57 = &v62;
      sub_20BF5AD04((unint64_t *)a4, 2 * v30 + 2, (uint64_t **)&v57);
      v62 = (void **)v71;
      sub_20BEEB2B8(&v62);
    }
    pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::~UsdGeomBoundable((pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *)&v72);
  }
  else
  {
    *(_QWORD *)(a4 + 32) = 0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
}

void sub_20C56AE0C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989A00);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetConstraintTarget(uint64_t a1@<X0>, uint64_t a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget *a3@<X8>)
{
  unsigned int *v5;
  unsigned int v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  unsigned int v10;
  _BYTE v11[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v12;
  int v13;
  int v14;
  uint64_t v15;
  _BYTE v16[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;

  pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget::GetConstraintAttrName(a2, (uint64_t)&v21);
  sub_20C35C4F8((uint64_t)v11, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)v11, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v21, (uint64_t)v16);
  pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget::UsdGeomConstraintTarget(a3, (const pxrInternal__aapl__pxrReserved__::UsdAttribute *)v16);
  if ((v20 & 7) != 0)
  {
    v5 = (unsigned int *)(v20 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v19);
  sub_20BFD265C(&v18);
  if (v17)
    sub_20C35C614(v17);
  if ((v15 & 7) != 0)
  {
    v7 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stlxr(v8 - 2, v7));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v14);
  sub_20BFD265C(&v13);
  if (v12)
    sub_20C35C614(v12);
  if ((v21 & 7) != 0)
  {
    v9 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
}

void sub_20C56AFB4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;
  uint64_t v7;
  va_list va;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v7 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  sub_20C372B54((uint64_t)va1);
  sub_20C35C2E0((uint64_t)va);
  v4 = *(_QWORD *)(v2 - 24);
  if ((v4 & 7) != 0)
  {
    v5 = (unsigned int *)(v4 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::CreateConstraintTarget(uint64_t a1@<X0>, uint64_t a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget *a3@<X8>)
{
  uint64_t *v5;
  _DWORD *v6;
  unsigned int *v7;
  unsigned int v8;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v9;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v10;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v11;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int *v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int *v19;
  unsigned int v20;
  _BYTE v21[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v22;
  int v23;
  int v24;
  uint64_t v25;
  int v26;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v27;
  int v28;
  int v29;
  uint64_t v30;
  int v31;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;

  pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget::GetConstraintAttrName(a2, (uint64_t)&v36);
  v5 = (uint64_t *)(a1 + 8);
  v6 = (_DWORD *)(a1 + 16);
  sub_20C35C4F8((uint64_t)&v26, v5, v6);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v26, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v36, (uint64_t)&v31);
  if ((v30 & 7) != 0)
  {
    v7 = (unsigned int *)(v30 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stlxr(v8 - 2, v7));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
  sub_20BFD265C(&v28);
  if (v27)
    sub_20C35C614(v27);
  if ((pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v31, v9) & 1) == 0)
  {
    sub_20C35C4F8((uint64_t)v21, v5, v6);
    v10 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
    if (!v10)
      v10 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
    pxrInternal__aapl__pxrReserved__::UsdPrim::CreateAttribute((uint64_t)v21, &v36, (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v10 + 360), 0, 0, (uint64_t)&v26);
    v31 = v26;
    v11 = v27;
    v27 = 0;
    v12 = v32;
    v32 = v11;
    if (v12)
      sub_20C35C614(v12);
    sub_20BFD3EBC(&v33, &v28);
    sub_20BFD3F10(&v34, &v29);
    if ((v35 & 7) != 0)
    {
      v13 = (unsigned int *)(v35 & 0xFFFFFFFFFFFFFFF8);
      do
        v14 = __ldxr(v13);
      while (__stlxr(v14 - 2, v13));
    }
    v35 = v30;
    v30 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
    sub_20BFD265C(&v28);
    if (v27)
      sub_20C35C614(v27);
    if ((v25 & 7) != 0)
    {
      v15 = (unsigned int *)(v25 & 0xFFFFFFFFFFFFFFF8);
      do
        v16 = __ldxr(v15);
      while (__stlxr(v16 - 2, v15));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v24);
    sub_20BFD265C(&v23);
    if (v22)
      sub_20C35C614(v22);
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget::UsdGeomConstraintTarget(a3, (const pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v31);
  if ((v35 & 7) != 0)
  {
    v17 = (unsigned int *)(v35 & 0xFFFFFFFFFFFFFFF8);
    do
      v18 = __ldxr(v17);
    while (__stlxr(v18 - 2, v17));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v34);
  sub_20BFD265C(&v33);
  if (v32)
    sub_20C35C614(v32);
  if ((v36 & 7) != 0)
  {
    v19 = (unsigned int *)(v36 & 0xFFFFFFFFFFFFFFF8);
    do
      v20 = __ldxr(v19);
    while (__stlxr(v20 - 2, v19));
  }
}

void sub_20C56B238(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;
  uint64_t v7;
  va_list va;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v7 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  sub_20C35C2E0((uint64_t)va);
  sub_20C372B54((uint64_t)va1);
  v4 = *(_QWORD *)(v2 - 40);
  if ((v4 & 7) != 0)
  {
    v5 = (unsigned int *)(v4 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetConstraintTargets(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, uint64_t *a2@<X8>)
{
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  char *v6;
  const pxrInternal__aapl__pxrReserved__::UsdAttribute *v7;
  const pxrInternal__aapl__pxrReserved__::UsdAttribute *v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  __int128 i;
  void **v14;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19[4];

  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  sub_20C35C4F8((uint64_t)&v14, (uint64_t *)this + 1, (_DWORD *)this + 4);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttributes((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v14, v19);
  if ((v18 & 7) != 0)
  {
    v3 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v17);
  sub_20BFD265C(&v16);
  if (v15)
    sub_20C35C614(v15);
  for (i = *(_OWORD *)v19; (_QWORD)i != *((_QWORD *)&i + 1); sub_20C56B558(&i))
  {
    v7 = (const pxrInternal__aapl__pxrReserved__::UsdAttribute *)sub_20C56B47C((uint64_t *)&i, v5, v6);
    pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget::UsdGeomConstraintTarget((pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget *)&v14, v7);
    if (pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget::IsValid((pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget *)&v14, v8))
    {
      v9 = a2[1];
      if (v9 >= a2[2])
      {
        v10 = sub_20C56BDA4(a2, (uint64_t)&v14);
      }
      else
      {
        sub_20C37F2BC((uint64_t)(a2 + 2), a2[1], (uint64_t)&v14);
        v10 = v9 + 32;
        a2[1] = v9 + 32;
      }
      a2[1] = v10;
    }
    if ((v18 & 7) != 0)
    {
      v11 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stlxr(v12 - 2, v11));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v17);
    sub_20BFD265C(&v16);
    if (v15)
      sub_20C35C614(v15);
  }
  v14 = (void **)v19;
  sub_20C3AEE3C(&v14);
}

void sub_20C56B418(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20C35C2E0((uint64_t)va);
  sub_20C56BCBC((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C56B47C(uint64_t *a1, uint64_t a2, char *a3)
{
  uint64_t result;
  _QWORD v5[4];
  char v6;
  int v7;

  result = *a1;
  if (result == a1[1])
  {
    v5[0] = "tf/iterator.h";
    v5[1] = "operator*";
    v5[2] = 271;
    v5[3] = "Reference pxrInternal__aapl__pxrReserved__::TfIterator<const std::vector<pxrInternal__aapl__pxrReserved__::U"
            "sdAttribute>>::operator*() [T = const std::vector<pxrInternal__aapl__pxrReserved__::UsdAttribute>, Reverse = false]";
    v6 = 0;
    v7 = 4;
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper *)v5, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted", a3);
  }
  return result;
}

void sub_20C56B4F0()
{
  JUMPOUT(0x20C56B4A0);
}

uint64_t sub_20C56B4F8(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  v2 = *(_QWORD *)(a1 + 24);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_20BFD265C((_DWORD *)(a1 + 16));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

_QWORD *sub_20C56B558(_QWORD *a1)
{
  _QWORD v3[4];
  char v4;

  if (*a1 == a1[1])
  {
    v3[0] = "tf/iterator.h";
    v3[1] = "operator++";
    v3[2] = 250;
    v3[3] = "TfIterator<T, Reverse> &pxrInternal__aapl__pxrReserved__::TfIterator<const std::vector<pxrInternal__aapl__px"
            "rReserved__::UsdAttribute>>::operator++() [T = const std::vector<pxrInternal__aapl__pxrReserved__::UsdAttrib"
            "ute>, Reverse = false]";
    v4 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v3, 1, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted");
  }
  else
  {
    *a1 += 32;
  }
  return a1;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::ComputeModelDrawMode(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, unsigned int **a2@<X1>, unsigned int **a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int v9;
  uint64_t *v10;
  _DWORD *v11;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v12;
  unsigned int *v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  unsigned int *v21;
  unsigned int *v22;
  unsigned int v23;
  unsigned int *v24;
  unsigned int v25;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v26;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v27;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v28;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v29;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v30;
  unsigned int *v31;
  unsigned int v32;
  unsigned int *v33;
  unsigned int v34;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v35;
  unsigned int *v36;
  unsigned int *v37;
  unsigned int v38;
  unsigned int *v39;
  unsigned int v40;
  int v41;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v42;
  int v43;
  int v44;
  uint64_t v45;
  int v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  unsigned int *v51;

  v6 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v6)
    v6 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v7 = (unsigned int *)*((_QWORD *)v6 + 59);
  v51 = v7;
  if ((v7 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v7 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 2, v8));
    if ((v9 & 1) == 0)
      v51 = (unsigned int *)((unint64_t)v51 & 0xFFFFFFFFFFFFFFF8);
  }
  v10 = (uint64_t *)((char *)this + 8);
  v11 = (_DWORD *)((char *)this + 16);
  sub_20C35C4F8((uint64_t)&v46, v10, v11);
  if (sub_20C56BA20((const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v46, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v51))
  {
    v12 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v12)
      v12 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v13 = v51;
    v14 = *((_QWORD *)v12 + 59);
    if ((v50 & 7) != 0)
    {
      v15 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
      do
        v16 = __ldxr(v15);
      while (__stlxr(v16 - 2, v15));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
    v17 = (unint64_t)v13 & 0xFFFFFFFFFFFFFFF8;
    v18 = v14 & 0xFFFFFFFFFFFFFFF8;
    sub_20BFD265C(&v48);
    if (v47)
      sub_20C35C614(v47);
    if (v17 != v18)
    {
      *a3 = v51;
      v51 = 0;
      goto LABEL_62;
    }
  }
  else
  {
    if ((v50 & 7) != 0)
    {
      v19 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
      do
        v20 = __ldxr(v19);
      while (__stlxr(v20 - 2, v19));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
    sub_20BFD265C(&v48);
    if (v47)
      sub_20C35C614(v47);
  }
  v21 = *a2;
  if (*a2)
  {
    *a3 = v21;
    if ((v21 & 7) != 0)
    {
      v22 = (unsigned int *)((unint64_t)v21 & 0xFFFFFFFFFFFFFFF8);
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 2, v22));
LABEL_55:
      if ((v23 & 1) == 0)
        *a3 = v22;
    }
  }
  else
  {
    sub_20C35C4F8((uint64_t)&v41, v10, v11);
    sub_20C3AD22C((uint64_t)&v41, (uint64_t)&v46);
    if ((v45 & 7) != 0)
    {
      v24 = (unsigned int *)(v45 & 0xFFFFFFFFFFFFFFF8);
      do
        v25 = __ldxr(v24);
      while (__stlxr(v25 - 2, v24));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v44);
    sub_20BFD265C(&v43);
    v27 = v42;
    if (v42)
LABEL_32:
      sub_20C35C614(v27);
    while ((pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v46, v26) & 1) != 0)
    {
      if (sub_20C56BA20((const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v46, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v51))
      {
        v28 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
        if (!v28)
          v28 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
        if (((unint64_t)v51 & 0xFFFFFFFFFFFFFFF8) != (*((_QWORD *)v28 + 59) & 0xFFFFFFFFFFFFFFF8))
        {
          *a3 = v51;
          v51 = 0;
          if ((v50 & 7) != 0)
          {
            v37 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
            do
              v38 = __ldxr(v37);
            while (__stlxr(v38 - 2, v37));
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
          sub_20BFD265C(&v48);
          if (v47)
            sub_20C35C614(v47);
          goto LABEL_62;
        }
      }
      sub_20C3AD22C((uint64_t)&v46, (uint64_t)&v41);
      v46 = v41;
      v29 = v42;
      v42 = 0;
      v30 = v47;
      v47 = v29;
      if (v30)
        sub_20C35C614(v30);
      sub_20BFD3EBC(&v48, &v43);
      sub_20BFD3F10(&v49, &v44);
      if ((v50 & 7) != 0)
      {
        v31 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
        do
          v32 = __ldxr(v31);
        while (__stlxr(v32 - 2, v31));
      }
      v50 = v45;
      v45 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v44);
      sub_20BFD265C(&v43);
      v27 = v42;
      if (v42)
        goto LABEL_32;
    }
    if ((v50 & 7) != 0)
    {
      v33 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
      do
        v34 = __ldxr(v33);
      while (__stlxr(v34 - 2, v33));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
    sub_20BFD265C(&v48);
    if (v47)
      sub_20C35C614(v47);
    v35 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v35)
      v35 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v36 = (unsigned int *)*((_QWORD *)v35 + 29);
    *a3 = v36;
    if ((v36 & 7) != 0)
    {
      v22 = (unsigned int *)((unint64_t)v36 & 0xFFFFFFFFFFFFFFF8);
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 2, v22));
      goto LABEL_55;
    }
  }
LABEL_62:
  if ((v51 & 7) != 0)
  {
    v39 = (unsigned int *)((unint64_t)v51 & 0xFFFFFFFFFFFFFFF8);
    do
      v40 = __ldxr(v39);
    while (__stlxr(v40 - 2, v39));
  }
}

void sub_20C56B9B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  unsigned int *v18;
  unsigned int v19;

  if ((a18 & 7) != 0)
  {
    v18 = (unsigned int *)(a18 & 0xFFFFFFFFFFFFFFF8);
    do
      v19 = __ldxr(v18);
    while (__stlxr(v19 - 2, v18));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C56BA20(const pxrInternal__aapl__pxrReserved__::UsdPrim *a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2)
{
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v4;
  char IsDefined;
  unsigned int *v6;
  unsigned int v7;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  uint64_t v14;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v15;
  int v16;
  int v17;
  uint64_t v18;
  void (**v19)(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *__hidden);
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v20;
  int v21;
  int v22;
  uint64_t v23;

  if (!sub_20C544B9C((uint64_t)a1, a2))
    return 0;
  sub_20C3AD22C((uint64_t)a1, (uint64_t)&v19);
  IsDefined = pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v19, v4);
  if ((v23 & 7) != 0)
  {
    v6 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_20BFD265C(&v21);
  if (v20)
    sub_20C35C614(v20);
  if ((IsDefined & 1) == 0)
    return 0;
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v19, a1);
  v23 = 0;
  v19 = off_24C53C890;
  pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetModelDrawModeAttr((pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *)&v19, (uint64_t)&v14);
  if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v14, v8))
  {
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::TfToken>((uint64_t)&v14, a2);
    v10 = v9;
  }
  else
  {
    v10 = 0;
  }
  if ((v18 & 7) != 0)
  {
    v11 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stlxr(v12 - 2, v11));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v17);
  sub_20BFD265C(&v16);
  if (v15)
    sub_20C35C614(v15);
  pxrInternal__aapl__pxrReserved__::UsdAPISchemaBase::~UsdAPISchemaBase((pxrInternal__aapl__pxrReserved__::UsdAPISchemaBase *)&v19);
  return v10;
}

void sub_20C56BB60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  pxrInternal__aapl__pxrReserved__::UsdAPISchemaBase::~UsdAPISchemaBase((pxrInternal__aapl__pxrReserved__::UsdAPISchemaBase *)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C56BB98()
{
  uint64_t *v0;
  void *__p[2];
  char v4;
  void *v5[3];
  uint64_t v6;
  int v7;

  sub_20BEB59B0((uint64_t)&v6, (uint64_t)"Tf", (uint64_t)"TfType::Define");
  sub_20C368F60((unint64_t **)v5);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p, (char **)v5, 0);
  if (v4 < 0)
    operator delete(__p[0]);
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_20C56BC6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  uint64_t v16;

  if (a14 < 0)
    operator delete(__p);
  if (a15)
    operator delete(a15);
  sub_20BEB24F4(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_20C56BCBC(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 32;
        sub_20C56BD40((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_20C56BD40(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v6;

  v3 = *(_QWORD *)(a2 + 24);
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a2 + 20));
  sub_20BFD265C((_DWORD *)(a2 + 16));
  v6 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a2 + 8);
  if (v6)
    sub_20C35C614(v6);
}

uint64_t sub_20C56BDA4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  void *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t *v15;

  v3 = (a1[1] - *a1) >> 5;
  v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) >> 59)
    sub_20BDDF694();
  v6 = a1[2] - *a1;
  if (v6 >> 4 > v4)
    v4 = v6 >> 4;
  if ((unint64_t)v6 >= 0x7FFFFFFFFFFFFFE0)
    v7 = 0x7FFFFFFFFFFFFFFLL;
  else
    v7 = v4;
  v15 = a1 + 2;
  if (v7)
    v8 = (char *)sub_20BED2F10((uint64_t)(a1 + 2), v7);
  else
    v8 = 0;
  v11 = v8;
  v12 = &v8[32 * v3];
  v14 = &v8[32 * v7];
  sub_20C37F2BC((uint64_t)(a1 + 2), (uint64_t)v12, a2);
  v13 = v12 + 32;
  sub_20C56BE90(a1, &v11);
  v9 = a1[1];
  sub_20C56C03C(&v11);
  return v9;
}

void sub_20C56BE7C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C56C03C((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C56BE90(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_20C56BF04((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_20C56BF04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v11;
  _QWORD v13[3];
  char v14;
  __int128 v15;
  __int128 v16;

  v7 = a7;
  *(_QWORD *)&v16 = a6;
  *((_QWORD *)&v16 + 1) = a7;
  v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  v14 = 0;
  if (a3 == a5)
  {
    v11 = a6;
  }
  else
  {
    v9 = a3;
    do
    {
      v9 -= 32;
      sub_20C3AE790(a1, v7 - 32, v9);
      v7 = *((_QWORD *)&v16 + 1) - 32;
      *((_QWORD *)&v16 + 1) -= 32;
    }
    while (v9 != a5);
    v11 = v16;
  }
  v14 = 1;
  sub_20C56BFB8((uint64_t)v13);
  return v11;
}

uint64_t sub_20C56BFB8(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_20C56BFEC((uint64_t *)a1);
  return a1;
}

void sub_20C56BFEC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(a1[2] + 8);
  v2 = *(_QWORD *)(a1[1] + 8);
  if (v1 != v2)
  {
    v3 = *a1;
    do
    {
      sub_20C56BD40(v3, v1);
      v1 += 32;
    }
    while (v1 != v2);
  }
}

void **sub_20C56C03C(void **a1)
{
  sub_20C56C06C(a1);
  if (*a1)
    operator delete(*a1);
  return a1;
}

void sub_20C56C06C(_QWORD *a1)
{
  uint64_t i;
  uint64_t v2;
  uint64_t v4;

  v2 = a1[1];
  for (i = a1[2]; i != v2; i = a1[2])
  {
    v4 = a1[4];
    a1[2] = i - 32;
    sub_20C56BD40(v4, i - 32);
  }
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::~UsdGeomMotionAPI(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *this)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::UsdAPISchemaBase::~UsdAPISchemaBase(this);
  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t (*v6)(uint64_t *);
  char v7;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;

  v6 = sub_20C369024(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v13);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *((_QWORD *)a3 + 3) = 0;
    *(_QWORD *)a3 = off_24C53C8E8;
    if ((v16 & 7) != 0)
    {
      v9 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
  }
  else
  {
    v13 = "usdGeom/motionAPI.cpp";
    v14 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Get";
    v15 = 51;
    v16 = (unint64_t)"static UsdGeomMotionAPI pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::Get(const UsdSta"
                            "gePtr &, const SdfPath &)";
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v13, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v13) = 1;
    v14 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v15);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v15 + 1);
    v16 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *((_QWORD *)a3 + 3) = 0;
    *(_QWORD *)a3 = off_24C53C8E8;
    if ((v16 & 7) != 0)
    {
      v11 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stlxr(v12 - 2, v11));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v15 + 1);
  sub_20BFD265C(&v15);
  if (v14)
    sub_20C35C614(v14);
}

void sub_20C56C244(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *this)
{
  return 5;
}

uint64_t sub_20C56C26C(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *a1, uint64_t a2)
{
  const pxrInternal__aapl__pxrReserved__::TfType *v4;
  pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry *SchemaInfo;
  const std::type_info *v6;
  char *v7;
  pxrInternal__aapl__pxrReserved__::TfType *v9;
  uint64_t TypeName;
  const char *v11;
  _QWORD v12[4];
  char v13;

  pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::_GetStaticTfType(a1);
  SchemaInfo = (pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry *)pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry::FindSchemaInfo((pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry *)&qword_254989A08, v4);
  if (SchemaInfo)
    return pxrInternal__aapl__pxrReserved__::UsdPrim::_CanApplySingleApplyAPI(a1, SchemaInfo, a2);
  v12[0] = "usd/prim.h";
  v12[1] = "CanApplyAPI";
  v12[2] = 1024;
  v12[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdPrim::CanApplyAPI(std::string *) const [SchemaType = pxrInternal__a"
           "apl__pxrReserved__::UsdGeomMotionAPI]";
  v13 = 0;
  TypeName = pxrInternal__aapl__pxrReserved__::TfType::GetTypeName(v9);
  if (*(char *)(TypeName + 23) >= 0)
    v11 = (const char *)TypeName;
  else
    v11 = *(const char **)TypeName;
  pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v12, 1, (pxrInternal__aapl__pxrReserved__ *)"Class '%s' is not correctly registered with the UsdSchemaRegistry as a schema type. The schema may need to be regenerated.", v11);
  return 0;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::Apply(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *this@<X0>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a2@<X8>)
{
  unsigned int *v5;
  unsigned int v6;
  int v7;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  int v9;
  int v10;
  uint64_t v11;

  if (sub_20C56C424(this))
  {
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a2, this);
    *((_QWORD *)a2 + 3) = 0;
    *(_QWORD *)a2 = off_24C53C8E8;
  }
  else
  {
    v7 = 1;
    v8 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v9);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v10);
    v11 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a2, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v7);
    *((_QWORD *)a2 + 3) = 0;
    *(_QWORD *)a2 = off_24C53C8E8;
    if ((v11 & 7) != 0)
    {
      v5 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
      do
        v6 = __ldxr(v5);
      while (__stlxr(v6 - 2, v5));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v10);
    sub_20BFD265C(&v9);
    if (v8)
      sub_20C35C614(v8);
  }
}

void sub_20C56C410(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C56C424(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *a1)
{
  const pxrInternal__aapl__pxrReserved__::TfType *v2;
  const pxrInternal__aapl__pxrReserved__::TfToken *SchemaInfo;
  const std::type_info *v4;
  char *v5;
  pxrInternal__aapl__pxrReserved__::TfType *v7;
  uint64_t TypeName;
  const char *v9;
  _QWORD v10[4];
  char v11;

  pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::_GetStaticTfType(a1);
  SchemaInfo = (const pxrInternal__aapl__pxrReserved__::TfToken *)pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry::FindSchemaInfo((pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry *)&qword_254989A08, v2);
  if (SchemaInfo)
    return pxrInternal__aapl__pxrReserved__::UsdPrim::_ApplySingleApplyAPI(a1, SchemaInfo);
  v10[0] = "usd/prim.h";
  v10[1] = "ApplyAPI";
  v10[2] = 1147;
  v10[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdPrim::ApplyAPI() const [SchemaType = pxrInternal__aapl__pxrReserved"
           "__::UsdGeomMotionAPI]";
  v11 = 0;
  TypeName = pxrInternal__aapl__pxrReserved__::TfType::GetTypeName(v7);
  if (*(char *)(TypeName + 23) >= 0)
    v9 = (const char *)TypeName;
  else
    v9 = *(const char **)TypeName;
  pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v10, 1, (pxrInternal__aapl__pxrReserved__ *)"Class '%s' is not correctly registered with the UsdSchemaRegistry as a schema type. The schema may need to be regenerated.", v9);
  return 0;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *this)
{
  unsigned __int8 v1;
  const std::type_info *v3;
  char *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_254989A10);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_254989A10))
  {
    __cxa_guard_release(&qword_254989A10);
  }
  return &qword_254989A08;
}

void sub_20C56C540(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989A10);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *v3;
  const std::type_info *v4;
  char *v5;

  v1 = atomic_load((unsigned __int8 *)&qword_254989A20);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *)__cxa_guard_acquire(&qword_254989A20);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::_GetStaticTfType(v3);
      byte_254989A18 = sub_20C35BD7C((char *)&qword_254989A08, v4, v5);
      __cxa_guard_release(&qword_254989A20);
    }
  }
  return byte_254989A18;
}

void sub_20C56C5BC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989A20);
  _Unwind_Resume(a1);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::_GetStaticTfType(this);
  return &qword_254989A08;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::GetMotionBlurScaleAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 656), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C56C694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::CreateMotionBlurScaleAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 656), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 56), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::GetVelocityScaleAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 672), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C56C7EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::CreateVelocityScaleAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 672), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 56), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::GetNonlinearSampleCountAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 664), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C56C944(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::CreateNonlinearSampleCountAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 664), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 16), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *this)
{
  int v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t *SchemaAttributeNames;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = (int)this;
  v26 = *MEMORY[0x24BDAC8D0];
  v2 = atomic_load((unsigned __int8 *)&qword_254989A40);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254989A40))
  {
    v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5)
      v5 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v6 = *((_QWORD *)v5 + 82);
    v23 = v6;
    if ((v6 & 7) != 0)
    {
      v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 2, v7));
      if ((v8 & 1) == 0)
        v23 &= 0xFFFFFFFFFFFFFFF8;
    }
    v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9)
      v9 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v10 = *((_QWORD *)v9 + 84);
    v24 = v10;
    if ((v10 & 7) != 0)
    {
      v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 2, v11));
      if ((v12 & 1) == 0)
        v24 &= 0xFFFFFFFFFFFFFFF8;
    }
    v13 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v13)
      v13 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v14 = *((_QWORD *)v13 + 83);
    v25 = v14;
    if ((v14 & 7) != 0)
    {
      v15 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 2, v15));
      if ((v16 & 1) == 0)
        v25 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_20C374970(&qword_254989A28, &v23, 3uLL);
    v17 = &v26;
    do
    {
      v19 = *--v17;
      v18 = v19;
      if ((v19 & 7) != 0)
      {
        v20 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
        do
          v21 = __ldxr(v20);
        while (__stlxr(v21 - 2, v20));
      }
    }
    while (v17 != &v23);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_254989A28, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989A40);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254989A60);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254989A60))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdAPISchemaBase::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdAPISchemaBase *)1);
    sub_20C56CCDC((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_254989A48, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989A60);
  }
  if (v1)
    return &qword_254989A48;
  else
    return &qword_254989A28;
}

void sub_20C56CC4C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989A40);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C56CCDC(uint64_t **a1)
{
  qword_254989A50 = 0;
  unk_254989A58 = 0;
  qword_254989A48 = 0;
  sub_20BFC9A6C((char **)&qword_254989A48, ((*(_QWORD *)algn_254989A30 - qword_254989A28) >> 3) + a1[1] - *a1);
  sub_20C1292A0(&qword_254989A48, (_QWORD *)qword_254989A50, *a1, a1[1], a1[1] - *a1);
  return sub_20C1292A0(&qword_254989A48, (_QWORD *)qword_254989A50, (uint64_t *)qword_254989A28, *(uint64_t **)algn_254989A30, (*(_QWORD *)algn_254989A30 - qword_254989A28) >> 3);
}

void sub_20C56CD70(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

float pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::ComputeVelocityScale(uint64_t a1)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v1;
  float v2;
  unsigned int *v3;
  unsigned int v4;
  int v6;
  int v7;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  int v9;
  int v10;
  uint64_t v11;

  sub_20C35C4F8((uint64_t)&v7, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
  v1 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v1)
    v1 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v6 = 1065353216;
  v2 = sub_20C56CE6C(&v7, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v1 + 672), (float *)&v6);
  if ((v11 & 7) != 0)
  {
    v3 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v10);
  sub_20BFD265C(&v9);
  if (v8)
    sub_20C35C614(v8);
  return v2;
}

void sub_20C56CE50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

float sub_20C56CE6C(int *a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, float *a3)
{
  float v3;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  unint64_t *v8;
  unint64_t v9;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  pxrInternal__aapl__pxrReserved__::UsdStage *v14;
  pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *v15;
  unsigned int *v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  const pxrInternal__aapl__pxrReserved__::TfType *v20;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *SchemaInfo;
  int v22;
  char v23;
  unsigned int *v24;
  unsigned int v25;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v26;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int *v30;
  unsigned int v31;
  unsigned int *v32;
  unsigned int v33;
  uint64_t v35;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v36;
  int v37;
  int v38;
  uint64_t v39;
  float v40;
  int v41;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v46;
  uint64_t v47;
  uint64_t v48;

  v45 = *a1;
  v7 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)*((_QWORD *)a1 + 1);
  v46 = v7;
  if (v7)
  {
    v8 = (unint64_t *)((char *)v7 + 48);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  sub_20BFD6E54(&v47, a1 + 4);
  sub_20BFD6EA4((_DWORD *)&v47 + 1, a1 + 5);
  v11 = *((_QWORD *)a1 + 3);
  v48 = v11;
  if ((v11 & 7) != 0)
  {
    v12 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 2, v12));
    if ((v13 & 1) == 0)
      v48 &= 0xFFFFFFFFFFFFFFF8;
  }
  pxrInternal__aapl__pxrReserved__::UsdObject::GetStage((pxrInternal__aapl__pxrReserved__::UsdObject *)&v45, v10, &v35);
  v14 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C348E08(&v35);
  pxrInternal__aapl__pxrReserved__::UsdStage::GetPseudoRoot(v14, (uint64_t)&v41);
  v15 = v36;
  if (v36)
  {
    v16 = (unsigned int *)((char *)v36 + 8);
    do
    {
      v17 = __ldxr(v16);
      v18 = v17 - 1;
    }
    while (__stlxr(v18, v16));
    if (!v18)
      v15 = (pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *))(*(_QWORD *)v15 + 8))(v15);
  }
  v40 = *a3;
  while (1)
  {
    if (v45 == v41 && v46 == v42 && v47 == v43)
    {
      v19 = v44;
      if ((v48 & 0xFFFFFFFFFFFFFFF8) == (v44 & 0xFFFFFFFFFFFFFFF8))
        break;
    }
    pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::_GetStaticTfType(v15);
    SchemaInfo = (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry::FindSchemaInfo((pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry *)&qword_254989A08, v20);
    if (pxrInternal__aapl__pxrReserved__::UsdPrim::_HasAPI((uint64_t)&v45, SchemaInfo))
    {
      pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v45, a2, (uint64_t)&v35);
      if (pxrInternal__aapl__pxrReserved__::UsdAttribute::HasAuthoredValue((pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v35))
      {
        pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<float>((uint64_t)&v35, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v40);
        if (v22)
          v3 = v40;
        v23 = v22 ^ 1;
      }
      else
      {
        v23 = 1;
      }
      if ((v39 & 7) != 0)
      {
        v24 = (unsigned int *)(v39 & 0xFFFFFFFFFFFFFFF8);
        do
          v25 = __ldxr(v24);
        while (__stlxr(v25 - 2, v24));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v38);
      sub_20BFD265C(&v37);
      if (v36)
        sub_20C35C614(v36);
      if ((v23 & 1) == 0)
      {
        v19 = v44;
        goto LABEL_39;
      }
    }
    sub_20C3AD22C((uint64_t)&v45, (uint64_t)&v35);
    v45 = v35;
    v26 = v36;
    v36 = 0;
    v27 = v46;
    v46 = v26;
    if (v27)
      sub_20C35C614(v27);
    sub_20BFD3EBC((int *)&v47, &v37);
    sub_20BFD3F10((int *)&v47 + 1, &v38);
    if ((v48 & 7) != 0)
    {
      v28 = (unsigned int *)(v48 & 0xFFFFFFFFFFFFFFF8);
      do
        v29 = __ldxr(v28);
      while (__stlxr(v29 - 2, v28));
    }
    v48 = v39;
    v39 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v38);
    sub_20BFD265C(&v37);
    v15 = v36;
    if (v36)
      sub_20C35C614(v36);
  }
  v3 = v40;
LABEL_39:
  if ((v19 & 7) != 0)
  {
    v30 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
    do
      v31 = __ldxr(v30);
    while (__stlxr(v31 - 2, v30));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v43 + 1);
  sub_20BFD265C(&v43);
  if (v42)
    sub_20C35C614(v42);
  if ((v48 & 7) != 0)
  {
    v32 = (unsigned int *)(v48 & 0xFFFFFFFFFFFFFFF8);
    do
      v33 = __ldxr(v32);
    while (__stlxr(v33 - 2, v32));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v47 + 1);
  sub_20BFD265C(&v47);
  if (v46)
    sub_20C35C614(v46);
  return v3;
}

void sub_20C56D1B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

unint64_t pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::ComputeNonlinearSampleCount(uint64_t a1)
{
  unint64_t v1;
  unint64_t *v2;
  unint64_t v3;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v4;
  unsigned int *v5;
  unsigned int v6;
  pxrInternal__aapl__pxrReserved__::UsdStage *v7;
  const pxrInternal__aapl__pxrReserved__::TfToken *v8;
  pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  const pxrInternal__aapl__pxrReserved__::TfType *v14;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *SchemaInfo;
  int v16;
  char v17;
  unsigned int *v18;
  unsigned int v19;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v20;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v21;
  unsigned int *v22;
  unsigned int v23;
  unsigned int *v24;
  unsigned int v25;
  unsigned int *v26;
  unsigned int v27;
  unsigned int *v28;
  unsigned int v29;
  int v31;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v37;
  int v38;
  int v39;
  uint64_t v40;
  unsigned int v41;
  int v42;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  uint64_t v48;
  uint64_t v49;

  sub_20C35C4F8((uint64_t)&v31, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
  v1 = atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v1)
    v1 = (unint64_t)sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v46 = v31;
  v47 = v32;
  if (v32)
  {
    v2 = (unint64_t *)((char *)v32 + 48);
    do
      v3 = __ldxr(v2);
    while (__stxr(v3 + 1, v2));
  }
  sub_20BFD6E54(&v48, &v33);
  sub_20BFD6EA4((_DWORD *)&v48 + 1, &v34);
  v49 = v35;
  if ((v35 & 7) != 0)
  {
    v5 = (unsigned int *)(v35 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 2, v5));
    if ((v6 & 1) == 0)
      v49 &= 0xFFFFFFFFFFFFFFF8;
  }
  pxrInternal__aapl__pxrReserved__::UsdObject::GetStage((pxrInternal__aapl__pxrReserved__::UsdObject *)&v46, v4, &v36);
  v7 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C348E08(&v36);
  pxrInternal__aapl__pxrReserved__::UsdStage::GetPseudoRoot(v7, (uint64_t)&v42);
  v8 = (const pxrInternal__aapl__pxrReserved__::TfToken *)(v1 + 664);
  v9 = v37;
  if (v37)
  {
    v10 = (unsigned int *)((char *)v37 + 8);
    do
    {
      v11 = __ldxr(v10);
      v12 = v11 - 1;
    }
    while (__stlxr(v12, v10));
    if (!v12)
      v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *))(*(_QWORD *)v9 + 8))(v9);
  }
  v41 = 3;
  while (1)
  {
    if (v46 == v42 && v47 == v43 && v48 == v44)
    {
      v13 = v45;
      if ((v49 & 0xFFFFFFFFFFFFFFF8) == (v45 & 0xFFFFFFFFFFFFFFF8))
        break;
    }
    pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::_GetStaticTfType(v9);
    SchemaInfo = (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry::FindSchemaInfo((pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry *)&qword_254989A08, v14);
    if (pxrInternal__aapl__pxrReserved__::UsdPrim::_HasAPI((uint64_t)&v46, SchemaInfo))
    {
      pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v46, v8, (uint64_t)&v36);
      if (pxrInternal__aapl__pxrReserved__::UsdAttribute::HasAuthoredValue((pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v36))
      {
        pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<int>((uint64_t)&v36, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v41);
        if (v16)
          v1 = v41;
        else
          v1 = v1;
        v17 = v16 ^ 1;
      }
      else
      {
        v17 = 1;
      }
      if ((v40 & 7) != 0)
      {
        v18 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
        do
          v19 = __ldxr(v18);
        while (__stlxr(v19 - 2, v18));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v39);
      sub_20BFD265C(&v38);
      if (v37)
        sub_20C35C614(v37);
      if ((v17 & 1) == 0)
      {
        v13 = v45;
        goto LABEL_42;
      }
    }
    sub_20C3AD22C((uint64_t)&v46, (uint64_t)&v36);
    v46 = v36;
    v20 = v37;
    v37 = 0;
    v21 = v47;
    v47 = v20;
    if (v21)
      sub_20C35C614(v21);
    sub_20BFD3EBC((int *)&v48, &v38);
    sub_20BFD3F10((int *)&v48 + 1, &v39);
    if ((v49 & 7) != 0)
    {
      v22 = (unsigned int *)(v49 & 0xFFFFFFFFFFFFFFF8);
      do
        v23 = __ldxr(v22);
      while (__stlxr(v23 - 2, v22));
    }
    v49 = v40;
    v40 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v39);
    sub_20BFD265C(&v38);
    v9 = v37;
    if (v37)
      sub_20C35C614(v37);
  }
  v1 = v41;
LABEL_42:
  if ((v13 & 7) != 0)
  {
    v24 = (unsigned int *)(v13 & 0xFFFFFFFFFFFFFFF8);
    do
      v25 = __ldxr(v24);
    while (__stlxr(v25 - 2, v24));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v44 + 1);
  sub_20BFD265C(&v44);
  if (v43)
    sub_20C35C614(v43);
  if ((v49 & 7) != 0)
  {
    v26 = (unsigned int *)(v49 & 0xFFFFFFFFFFFFFFF8);
    do
      v27 = __ldxr(v26);
    while (__stlxr(v27 - 2, v26));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v48 + 1);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  if ((v35 & 7) != 0)
  {
    v28 = (unsigned int *)(v35 & 0xFFFFFFFFFFFFFFF8);
    do
      v29 = __ldxr(v28);
    while (__stlxr(v29 - 2, v28));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v34);
  sub_20BFD265C(&v33);
  if (v32)
    sub_20C35C614(v32);
  return v1;
}

void sub_20C56D5E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

float pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::ComputeMotionBlurScale(uint64_t a1)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v1;
  float v2;
  unsigned int *v3;
  unsigned int v4;
  int v6;
  int v7;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  int v9;
  int v10;
  uint64_t v11;

  sub_20C35C4F8((uint64_t)&v7, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
  v1 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v1)
    v1 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v6 = 1065353216;
  v2 = sub_20C56CE6C(&v7, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v1 + 656), (float *)&v6);
  if ((v11 & 7) != 0)
  {
    v3 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v10);
  sub_20BFD265C(&v9);
  if (v8)
    sub_20C35C614(v8);
  return v2;
}

void sub_20C56D73C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C56D758()
{
  uint64_t *v0;
  void *__p[2];
  char v4;
  void *v5[3];
  uint64_t v6;
  int v7;

  sub_20BEB59B0((uint64_t)&v6, (uint64_t)"Tf", (uint64_t)"TfType::Define");
  sub_20C368F60((unint64_t **)v5);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p, (char **)v5, 0);
  if (v4 < 0)
    operator delete(__p[0]);
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_20C56D82C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  uint64_t v16;

  if (a14 < 0)
    operator delete(__p);
  if (a15)
    operator delete(a15);
  sub_20BEB24F4(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_20C56D87C()
{
  void *__p[2];
  char v1;

  sub_20C56E6FC();
  sub_20BDDC0E4(__p, "NurbsCurves");
  sub_20C56E81C((char *)__p);
  if (v1 < 0)
    operator delete(__p[0]);
}

void sub_20C56D8C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::~UsdGeomNurbsCurves(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *this)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::UsdGeomCurves::~UsdGeomCurves(this);
  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t (*v6)(uint64_t *);
  char v7;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;

  v6 = sub_20C369024(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v13);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C940;
    if ((v16 & 7) != 0)
    {
      v9 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
  }
  else
  {
    v13 = "usdGeom/nurbsCurves.cpp";
    v14 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Get";
    v15 = 57;
    v16 = (unint64_t)"static UsdGeomNurbsCurves pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::Get(const Us"
                            "dStagePtr &, const SdfPath &)";
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v13, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v13) = 1;
    v14 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v15);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v15 + 1);
    v16 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C940;
    if ((v16 & 7) != 0)
    {
      v11 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stlxr(v12 - 2, v11));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v15 + 1);
  sub_20BFD265C(&v15);
  if (v14)
    sub_20C35C614(v14);
}

void sub_20C56DA6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::Define(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  unsigned __int8 v6;
  uint64_t (*v7)(uint64_t *);
  char v8;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int v13;
  char *v14;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;

  v6 = atomic_load((unsigned __int8 *)&qword_254989A70);
  if ((v6 & 1) == 0 && __cxa_guard_acquire(&qword_254989A70))
  {
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&qword_254989A68, "NurbsCurves");
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &qword_254989A68, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989A70);
  }
  v7 = sub_20C369024(a1);
  if (v8 & 1 | (unint64_t)v7)
  {
    v9 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::DefinePrim(v9, a2, &qword_254989A68, (uint64_t)&v14);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v14);
    *(_QWORD *)a3 = off_24C53C940;
    if ((v17 & 7) != 0)
    {
      v10 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v11 = __ldxr(v10);
      while (__stlxr(v11 - 2, v10));
    }
  }
  else
  {
    v14 = "usdGeom/nurbsCurves.cpp";
    v15 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Define";
    v16 = 70;
    v17 = (unint64_t)"static UsdGeomNurbsCurves pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::Define(const"
                            " UsdStagePtr &, const SdfPath &)";
    v18 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v14, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v14) = 1;
    v15 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v16);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v16 + 1);
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v14);
    *(_QWORD *)a3 = off_24C53C940;
    if ((v17 & 7) != 0)
    {
      v12 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v13 = __ldxr(v12);
      while (__stlxr(v13 - 2, v12));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v16 + 1);
  sub_20BFD265C(&v16);
  if (v15)
    sub_20C35C614(v15);
}

void sub_20C56DC5C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989A70);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *this)
{
  return 3;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *this)
{
  unsigned __int8 v1;
  const std::type_info *v3;
  char *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_254989A80);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_254989A80))
  {
    __cxa_guard_release(&qword_254989A80);
  }
  return &qword_254989A78;
}

void sub_20C56DD00(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989A80);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *v3;
  const std::type_info *v4;
  char *v5;

  v1 = atomic_load((unsigned __int8 *)&qword_254989A90);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *)__cxa_guard_acquire(&qword_254989A90);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::_GetStaticTfType(v3);
      byte_254989A88 = sub_20C35BD7C((char *)&qword_254989A78, v4, v5);
      __cxa_guard_release(&qword_254989A90);
    }
  }
  return byte_254989A88;
}

void sub_20C56DD7C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989A90);
  _Unwind_Resume(a1);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::_GetStaticTfType(this);
  return &qword_254989A78;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::GetOrderAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 720), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C56DE54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::CreateOrderAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 720), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 464), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::GetKnotsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 512), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C56DFAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::CreateKnotsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 512), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 520), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::GetRangesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 944), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C56E104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::CreateRangesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 944), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 632), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::GetPointWeightsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 824), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C56E25C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::CreatePointWeightsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 824), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 520), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *this)
{
  int v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v17;
  uint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  uint64_t *SchemaAttributeNames;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = (int)this;
  v31 = *MEMORY[0x24BDAC8D0];
  v2 = atomic_load((unsigned __int8 *)&qword_254989AB0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254989AB0))
  {
    v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5)
      v5 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v6 = *((_QWORD *)v5 + 90);
    v27 = v6;
    if ((v6 & 7) != 0)
    {
      v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 2, v7));
      if ((v8 & 1) == 0)
        v27 &= 0xFFFFFFFFFFFFFFF8;
    }
    v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9)
      v9 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v10 = *((_QWORD *)v9 + 64);
    v28 = v10;
    if ((v10 & 7) != 0)
    {
      v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 2, v11));
      if ((v12 & 1) == 0)
        v28 &= 0xFFFFFFFFFFFFFFF8;
    }
    v13 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v13)
      v13 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v14 = *((_QWORD *)v13 + 118);
    v29 = v14;
    if ((v14 & 7) != 0)
    {
      v15 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 2, v15));
      if ((v16 & 1) == 0)
        v29 &= 0xFFFFFFFFFFFFFFF8;
    }
    v17 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v17)
      v17 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v18 = *((_QWORD *)v17 + 103);
    v30 = v18;
    if ((v18 & 7) != 0)
    {
      v19 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 2, v19));
      if ((v20 & 1) == 0)
        v30 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_20C374970(&qword_254989A98, &v27, 4uLL);
    v21 = &v31;
    do
    {
      v23 = *--v21;
      v22 = v23;
      if ((v23 & 7) != 0)
      {
        v24 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
        do
          v25 = __ldxr(v24);
        while (__stlxr(v25 - 2, v24));
      }
    }
    while (v21 != &v27);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_254989A98, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989AB0);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254989AD0);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254989AD0))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomCurves *)1);
    sub_20C56E648((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_254989AB8, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989AD0);
  }
  if (v1)
    return &qword_254989AB8;
  else
    return &qword_254989A98;
}

void sub_20C56E5B8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989AB0);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C56E648(uint64_t **a1)
{
  qword_254989AC0 = 0;
  unk_254989AC8 = 0;
  qword_254989AB8 = 0;
  sub_20BFC9A6C((char **)&qword_254989AB8, ((unk_254989AA0 - qword_254989A98) >> 3) + a1[1] - *a1);
  sub_20C1292A0(&qword_254989AB8, (_QWORD *)qword_254989AC0, *a1, a1[1], a1[1] - *a1);
  return sub_20C1292A0(&qword_254989AB8, (_QWORD *)qword_254989AC0, (uint64_t *)qword_254989A98, unk_254989AA0, (unk_254989AA0 - qword_254989A98) >> 3);
}

void sub_20C56E6DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C56E6FC()
{
  uint64_t *v0;
  void *__p[2];
  char v4;
  void *v5[3];
  uint64_t v6;
  int v7;

  sub_20BEB59B0((uint64_t)&v6, (uint64_t)"Tf", (uint64_t)"TfType::Define");
  sub_20C54FC24((unint64_t **)v5);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p, (char **)v5, 0);
  if (v4 < 0)
    operator delete(__p[0]);
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_20C56E7D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  uint64_t v16;

  if (a14 < 0)
    operator delete(__p);
  if (a15)
    operator delete(a15);
  sub_20BEB24F4(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_20C56E81C(char *a1)
{
  unint64_t v2;
  unint64_t v3;
  void *__p[2];
  char v5;

  v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  if (v5 < 0)
    operator delete(__p[0]);
  v3 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  if (v5 < 0)
    operator delete(__p[0]);
  pxrInternal__aapl__pxrReserved__::TfType::AddAlias((uint64_t *)&v3, v2, a1);
}

void sub_20C56E8AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C56E8D0()
{
  void *__p[2];
  char v1;

  sub_20C570D0C();
  sub_20BDDC0E4(__p, "NurbsPatch");
  sub_20C570E2C((char *)__p);
  if (v1 < 0)
    operator delete(__p[0]);
}

void sub_20C56E91C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::~UsdGeomNurbsPatch(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::~UsdGeomPointBased(this);
  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t (*v6)(uint64_t *);
  char v7;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;

  v6 = sub_20C369024(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v13);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C998;
    if ((v16 & 7) != 0)
    {
      v9 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
  }
  else
  {
    v13 = "usdGeom/nurbsPatch.cpp";
    v14 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Get";
    v15 = 57;
    v16 = (unint64_t)"static UsdGeomNurbsPatch pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::Get(const UsdS"
                            "tagePtr &, const SdfPath &)";
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v13, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v13) = 1;
    v14 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v15);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v15 + 1);
    v16 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C998;
    if ((v16 & 7) != 0)
    {
      v11 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stlxr(v12 - 2, v11));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v15 + 1);
  sub_20BFD265C(&v15);
  if (v14)
    sub_20C35C614(v14);
}

void sub_20C56EAC0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::Define(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  unsigned __int8 v6;
  uint64_t (*v7)(uint64_t *);
  char v8;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int v13;
  char *v14;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;

  v6 = atomic_load((unsigned __int8 *)&qword_254989AE0);
  if ((v6 & 1) == 0 && __cxa_guard_acquire(&qword_254989AE0))
  {
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&qword_254989AD8, "NurbsPatch");
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &qword_254989AD8, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989AE0);
  }
  v7 = sub_20C369024(a1);
  if (v8 & 1 | (unint64_t)v7)
  {
    v9 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::DefinePrim(v9, a2, &qword_254989AD8, (uint64_t)&v14);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v14);
    *(_QWORD *)a3 = off_24C53C998;
    if ((v17 & 7) != 0)
    {
      v10 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v11 = __ldxr(v10);
      while (__stlxr(v11 - 2, v10));
    }
  }
  else
  {
    v14 = "usdGeom/nurbsPatch.cpp";
    v15 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Define";
    v16 = 70;
    v17 = (unint64_t)"static UsdGeomNurbsPatch pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::Define(const U"
                            "sdStagePtr &, const SdfPath &)";
    v18 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v14, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v14) = 1;
    v15 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v16);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v16 + 1);
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v14);
    *(_QWORD *)a3 = off_24C53C998;
    if ((v17 & 7) != 0)
    {
      v12 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v13 = __ldxr(v12);
      while (__stlxr(v13 - 2, v12));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v16 + 1);
  sub_20BFD265C(&v16);
  if (v15)
    sub_20C35C614(v15);
}

void sub_20C56ECB0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989AE0);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this)
{
  return 3;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this)
{
  unsigned __int8 v1;
  const std::type_info *v3;
  char *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_254989AF0);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_254989AF0))
  {
    __cxa_guard_release(&qword_254989AF0);
  }
  return &qword_254989AE8;
}

void sub_20C56ED54(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989AF0);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *v3;
  const std::type_info *v4;
  char *v5;

  v1 = atomic_load((unsigned __int8 *)&qword_254989B00);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *)__cxa_guard_acquire(&qword_254989B00);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::_GetStaticTfType(v3);
      byte_254989AF8 = sub_20C35BD7C((char *)&qword_254989AE8, v4, v5);
      __cxa_guard_release(&qword_254989B00);
    }
  }
  return byte_254989AF8;
}

void sub_20C56EDD0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989B00);
  _Unwind_Resume(a1);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::_GetStaticTfType(this);
  return &qword_254989AE8;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::GetUVertexCountAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1200), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C56EEA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::CreateUVertexCountAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1200), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 16), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::GetVVertexCountAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1296), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C56F000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::CreateVVertexCountAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1296), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 16), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::GetUOrderAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1176), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C56F158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::CreateUOrderAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1176), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 16), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::GetVOrderAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1280), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C56F2B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::CreateVOrderAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1280), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 16), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::GetUKnotsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1144), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C56F408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::CreateUKnotsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1144), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 520), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::GetVKnotsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1272), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C56F560(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::CreateVKnotsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1272), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 520), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::GetUFormAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1136), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C56F6B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::CreateUFormAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1136), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::GetVFormAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1248), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C56F810(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::CreateVFormAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1248), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::GetURangeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1192), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C56F968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::CreateURangeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1192), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 176), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::GetVRangeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1288), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C56FAC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::CreateVRangeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1288), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 176), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::GetPointWeightsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 824), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C56FC18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::CreatePointWeightsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 824), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 520), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::GetTrimCurveCountsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1080), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C56FD70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::CreateTrimCurveCountsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1080), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 464), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::GetTrimCurveOrdersAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1096), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C56FEC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::CreateTrimCurveOrdersAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1096), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 464), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::GetTrimCurveVertexCountsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1120), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C570020(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::CreateTrimCurveVertexCountsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1120), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 464), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::GetTrimCurveKnotsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1088), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C570178(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::CreateTrimCurveKnotsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1088), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 520), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::GetTrimCurveRangesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1112), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C5702D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::CreateTrimCurveRangesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1112), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 632), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::GetTrimCurvePointsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1104), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C570428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::CreateTrimCurvePointsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1104), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 640), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsPatch *this)
{
  int v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v17;
  uint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v21;
  uint64_t v22;
  unsigned int *v23;
  unsigned int v24;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v25;
  uint64_t v26;
  unsigned int *v27;
  unsigned int v28;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v29;
  uint64_t v30;
  unsigned int *v31;
  unsigned int v32;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v33;
  uint64_t v34;
  unsigned int *v35;
  unsigned int v36;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v37;
  uint64_t v38;
  unsigned int *v39;
  unsigned int v40;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v41;
  uint64_t v42;
  unsigned int *v43;
  unsigned int v44;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v45;
  uint64_t v46;
  unsigned int *v47;
  unsigned int v48;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v49;
  uint64_t v50;
  unsigned int *v51;
  unsigned int v52;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v53;
  uint64_t v54;
  unsigned int *v55;
  unsigned int v56;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v57;
  uint64_t v58;
  unsigned int *v59;
  unsigned int v60;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v61;
  uint64_t v62;
  unsigned int *v63;
  unsigned int v64;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v65;
  uint64_t v66;
  unsigned int *v67;
  unsigned int v68;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v69;
  uint64_t v70;
  unsigned int *v71;
  unsigned int v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int *v76;
  unsigned int v77;
  uint64_t *SchemaAttributeNames;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v1 = (int)this;
  v96 = *MEMORY[0x24BDAC8D0];
  v2 = atomic_load((unsigned __int8 *)&qword_254989B20);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254989B20))
  {
    v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5)
      v5 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v6 = *((_QWORD *)v5 + 150);
    v79 = v6;
    if ((v6 & 7) != 0)
    {
      v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 2, v7));
      if ((v8 & 1) == 0)
        v79 &= 0xFFFFFFFFFFFFFFF8;
    }
    v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9)
      v9 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v10 = *((_QWORD *)v9 + 162);
    v80 = v10;
    if ((v10 & 7) != 0)
    {
      v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 2, v11));
      if ((v12 & 1) == 0)
        v80 &= 0xFFFFFFFFFFFFFFF8;
    }
    v13 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v13)
      v13 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v14 = *((_QWORD *)v13 + 147);
    v81 = v14;
    if ((v14 & 7) != 0)
    {
      v15 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 2, v15));
      if ((v16 & 1) == 0)
        v81 &= 0xFFFFFFFFFFFFFFF8;
    }
    v17 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v17)
      v17 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v18 = *((_QWORD *)v17 + 160);
    v82 = v18;
    if ((v18 & 7) != 0)
    {
      v19 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 2, v19));
      if ((v20 & 1) == 0)
        v82 &= 0xFFFFFFFFFFFFFFF8;
    }
    v21 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v21)
      v21 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v22 = *((_QWORD *)v21 + 143);
    v83 = v22;
    if ((v22 & 7) != 0)
    {
      v23 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
      do
        v24 = __ldxr(v23);
      while (__stxr(v24 + 2, v23));
      if ((v24 & 1) == 0)
        v83 &= 0xFFFFFFFFFFFFFFF8;
    }
    v25 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v25)
      v25 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v26 = *((_QWORD *)v25 + 159);
    v84 = v26;
    if ((v26 & 7) != 0)
    {
      v27 = (unsigned int *)(v26 & 0xFFFFFFFFFFFFFFF8);
      do
        v28 = __ldxr(v27);
      while (__stxr(v28 + 2, v27));
      if ((v28 & 1) == 0)
        v84 &= 0xFFFFFFFFFFFFFFF8;
    }
    v29 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v29)
      v29 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v30 = *((_QWORD *)v29 + 142);
    v85 = v30;
    if ((v30 & 7) != 0)
    {
      v31 = (unsigned int *)(v30 & 0xFFFFFFFFFFFFFFF8);
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 2, v31));
      if ((v32 & 1) == 0)
        v85 &= 0xFFFFFFFFFFFFFFF8;
    }
    v33 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v33)
      v33 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v34 = *((_QWORD *)v33 + 156);
    v86 = v34;
    if ((v34 & 7) != 0)
    {
      v35 = (unsigned int *)(v34 & 0xFFFFFFFFFFFFFFF8);
      do
        v36 = __ldxr(v35);
      while (__stxr(v36 + 2, v35));
      if ((v36 & 1) == 0)
        v86 &= 0xFFFFFFFFFFFFFFF8;
    }
    v37 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v37)
      v37 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v38 = *((_QWORD *)v37 + 149);
    v87 = v38;
    if ((v38 & 7) != 0)
    {
      v39 = (unsigned int *)(v38 & 0xFFFFFFFFFFFFFFF8);
      do
        v40 = __ldxr(v39);
      while (__stxr(v40 + 2, v39));
      if ((v40 & 1) == 0)
        v87 &= 0xFFFFFFFFFFFFFFF8;
    }
    v41 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v41)
      v41 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v42 = *((_QWORD *)v41 + 161);
    v88 = v42;
    if ((v42 & 7) != 0)
    {
      v43 = (unsigned int *)(v42 & 0xFFFFFFFFFFFFFFF8);
      do
        v44 = __ldxr(v43);
      while (__stxr(v44 + 2, v43));
      if ((v44 & 1) == 0)
        v88 &= 0xFFFFFFFFFFFFFFF8;
    }
    v45 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v45)
      v45 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v46 = *((_QWORD *)v45 + 103);
    v89 = v46;
    if ((v46 & 7) != 0)
    {
      v47 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
      do
        v48 = __ldxr(v47);
      while (__stxr(v48 + 2, v47));
      if ((v48 & 1) == 0)
        v89 &= 0xFFFFFFFFFFFFFFF8;
    }
    v49 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v49)
      v49 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v50 = *((_QWORD *)v49 + 135);
    v90 = v50;
    if ((v50 & 7) != 0)
    {
      v51 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
      do
        v52 = __ldxr(v51);
      while (__stxr(v52 + 2, v51));
      if ((v52 & 1) == 0)
        v90 &= 0xFFFFFFFFFFFFFFF8;
    }
    v53 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v53)
      v53 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v54 = *((_QWORD *)v53 + 137);
    v91 = v54;
    if ((v54 & 7) != 0)
    {
      v55 = (unsigned int *)(v54 & 0xFFFFFFFFFFFFFFF8);
      do
        v56 = __ldxr(v55);
      while (__stxr(v56 + 2, v55));
      if ((v56 & 1) == 0)
        v91 &= 0xFFFFFFFFFFFFFFF8;
    }
    v57 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v57)
      v57 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v58 = *((_QWORD *)v57 + 140);
    v92 = v58;
    if ((v58 & 7) != 0)
    {
      v59 = (unsigned int *)(v58 & 0xFFFFFFFFFFFFFFF8);
      do
        v60 = __ldxr(v59);
      while (__stxr(v60 + 2, v59));
      if ((v60 & 1) == 0)
        v92 &= 0xFFFFFFFFFFFFFFF8;
    }
    v61 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v61)
      v61 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v62 = *((_QWORD *)v61 + 136);
    v93 = v62;
    if ((v62 & 7) != 0)
    {
      v63 = (unsigned int *)(v62 & 0xFFFFFFFFFFFFFFF8);
      do
        v64 = __ldxr(v63);
      while (__stxr(v64 + 2, v63));
      if ((v64 & 1) == 0)
        v93 &= 0xFFFFFFFFFFFFFFF8;
    }
    v65 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v65)
      v65 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v66 = *((_QWORD *)v65 + 139);
    v94 = v66;
    if ((v66 & 7) != 0)
    {
      v67 = (unsigned int *)(v66 & 0xFFFFFFFFFFFFFFF8);
      do
        v68 = __ldxr(v67);
      while (__stxr(v68 + 2, v67));
      if ((v68 & 1) == 0)
        v94 &= 0xFFFFFFFFFFFFFFF8;
    }
    v69 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v69)
      v69 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v70 = *((_QWORD *)v69 + 138);
    v95 = v70;
    if ((v70 & 7) != 0)
    {
      v71 = (unsigned int *)(v70 & 0xFFFFFFFFFFFFFFF8);
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 2, v71));
      if ((v72 & 1) == 0)
        v95 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_20C374970(&qword_254989B08, &v79, 0x11uLL);
    v73 = &v96;
    do
    {
      v75 = *--v73;
      v74 = v75;
      if ((v75 & 7) != 0)
      {
        v76 = (unsigned int *)(v74 & 0xFFFFFFFFFFFFFFF8);
        do
          v77 = __ldxr(v76);
        while (__stlxr(v77 - 2, v76));
      }
    }
    while (v73 != &v79);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_254989B08, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989B20);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254989B40);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254989B40))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *)1);
    sub_20C570C58((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_254989B28, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989B40);
  }
  if (v1)
    return &qword_254989B28;
  else
    return &qword_254989B08;
}

void sub_20C570BC8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989B20);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C570C58(uint64_t **a1)
{
  qword_254989B30 = 0;
  unk_254989B38 = 0;
  qword_254989B28 = 0;
  sub_20BFC9A6C((char **)&qword_254989B28, ((*(_QWORD *)algn_254989B10 - qword_254989B08) >> 3) + a1[1] - *a1);
  sub_20C1292A0(&qword_254989B28, (_QWORD *)qword_254989B30, *a1, a1[1], a1[1] - *a1);
  return sub_20C1292A0(&qword_254989B28, (_QWORD *)qword_254989B30, (uint64_t *)qword_254989B08, *(uint64_t **)algn_254989B10, (*(_QWORD *)algn_254989B10 - qword_254989B08) >> 3);
}

void sub_20C570CEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C570D0C()
{
  uint64_t *v0;
  void *__p[2];
  char v4;
  void *v5[3];
  uint64_t v6;
  int v7;

  sub_20BEB59B0((uint64_t)&v6, (uint64_t)"Tf", (uint64_t)"TfType::Define");
  sub_20C55C298((unint64_t **)v5);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p, (char **)v5, 0);
  if (v4 < 0)
    operator delete(__p[0]);
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_20C570DE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  uint64_t v16;

  if (a14 < 0)
    operator delete(__p);
  if (a15)
    operator delete(a15);
  sub_20BEB24F4(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_20C570E2C(char *a1)
{
  unint64_t v2;
  unint64_t v3;
  void *__p[2];
  char v5;

  v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  if (v5 < 0)
    operator delete(__p[0]);
  v3 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  if (v5 < 0)
    operator delete(__p[0]);
  pxrInternal__aapl__pxrReserved__::TfType::AddAlias((uint64_t *)&v3, v2, a1);
}

void sub_20C570EBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C570EE0()
{
  void *__p[2];
  char v1;

  sub_20C57222C();
  sub_20BDDC0E4(__p, "Plane");
  sub_20C57234C((char *)__p);
  if (v1 < 0)
    operator delete(__p[0]);
}

void sub_20C570F2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPlane::~UsdGeomPlane(pxrInternal__aapl__pxrReserved__::UsdGeomPlane *this)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim(this);
  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPlane::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t (*v6)(uint64_t *);
  char v7;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;

  v6 = sub_20C369024(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v13);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C9F0;
    if ((v16 & 7) != 0)
    {
      v9 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
  }
  else
  {
    v13 = "usdGeom/plane.cpp";
    v14 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Get";
    v15 = 57;
    v16 = (unint64_t)"static UsdGeomPlane pxrInternal__aapl__pxrReserved__::UsdGeomPlane::Get(const UsdStagePtr &,"
                            " const SdfPath &)";
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v13, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v13) = 1;
    v14 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v15);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v15 + 1);
    v16 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53C9F0;
    if ((v16 & 7) != 0)
    {
      v11 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stlxr(v12 - 2, v11));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v15 + 1);
  sub_20BFD265C(&v15);
  if (v14)
    sub_20C35C614(v14);
}

void sub_20C5710D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPlane::Define(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  unsigned __int8 v6;
  uint64_t (*v7)(uint64_t *);
  char v8;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int v13;
  char *v14;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;

  v6 = atomic_load((unsigned __int8 *)&qword_254989B50);
  if ((v6 & 1) == 0 && __cxa_guard_acquire(&qword_254989B50))
  {
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&qword_254989B48, "Plane");
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &qword_254989B48, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989B50);
  }
  v7 = sub_20C369024(a1);
  if (v8 & 1 | (unint64_t)v7)
  {
    v9 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::DefinePrim(v9, a2, &qword_254989B48, (uint64_t)&v14);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v14);
    *(_QWORD *)a3 = off_24C53C9F0;
    if ((v17 & 7) != 0)
    {
      v10 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v11 = __ldxr(v10);
      while (__stlxr(v11 - 2, v10));
    }
  }
  else
  {
    v14 = "usdGeom/plane.cpp";
    v15 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Define";
    v16 = 70;
    v17 = (unint64_t)"static UsdGeomPlane pxrInternal__aapl__pxrReserved__::UsdGeomPlane::Define(const UsdStagePtr"
                            " &, const SdfPath &)";
    v18 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v14, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v14) = 1;
    v15 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v16);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v16 + 1);
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v14);
    *(_QWORD *)a3 = off_24C53C9F0;
    if ((v17 & 7) != 0)
    {
      v12 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v13 = __ldxr(v12);
      while (__stlxr(v13 - 2, v12));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v16 + 1);
  sub_20BFD265C(&v16);
  if (v15)
    sub_20C35C614(v15);
}

void sub_20C5712C0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989B50);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPlane::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomPlane *this)
{
  return 3;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomPlane::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomPlane *this)
{
  unsigned __int8 v1;
  const std::type_info *v3;
  char *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_254989B60);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_254989B60))
  {
    __cxa_guard_release(&qword_254989B60);
  }
  return &qword_254989B58;
}

void sub_20C571364(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989B60);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPlane::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomPlane *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::UsdGeomPlane *v3;
  const std::type_info *v4;
  char *v5;

  v1 = atomic_load((unsigned __int8 *)&qword_254989B70);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomPlane *)__cxa_guard_acquire(&qword_254989B70);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomPlane::_GetStaticTfType(v3);
      byte_254989B68 = sub_20C35BD7C((char *)&qword_254989B58, v4, v5);
      __cxa_guard_release(&qword_254989B70);
    }
  }
  return byte_254989B68;
}

void sub_20C5713E0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989B70);
  _Unwind_Resume(a1);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomPlane::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomPlane *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomPlane::_GetStaticTfType(this);
  return &qword_254989B58;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPlane::GetDoubleSidedAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPlane *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 240), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C5714B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPlane::CreateDoubleSidedAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPlane *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 240), v9, 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPlane::GetWidthAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPlane *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1304), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C571610(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPlane::CreateWidthAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPlane *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1304), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPlane::GetLengthAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPlane *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 536), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C571768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPlane::CreateLengthAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPlane *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 536), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPlane::GetAxisAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPlane *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 24), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C5718C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPlane::CreateAxisAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPlane *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 24), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPlane::GetExtentAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPlane *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 296), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C571A18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPlane::CreateExtentAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPlane *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 296), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 616), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomPlane::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomPlane *this)
{
  int v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v17;
  uint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v21;
  uint64_t v22;
  unsigned int *v23;
  unsigned int v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int *v28;
  unsigned int v29;
  uint64_t *SchemaAttributeNames;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = (int)this;
  v36 = *MEMORY[0x24BDAC8D0];
  v2 = atomic_load((unsigned __int8 *)&qword_254989B90);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254989B90))
  {
    v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5)
      v5 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v6 = *((_QWORD *)v5 + 30);
    v31 = v6;
    if ((v6 & 7) != 0)
    {
      v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 2, v7));
      if ((v8 & 1) == 0)
        v31 &= 0xFFFFFFFFFFFFFFF8;
    }
    v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9)
      v9 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v10 = *((_QWORD *)v9 + 163);
    v32 = v10;
    if ((v10 & 7) != 0)
    {
      v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 2, v11));
      if ((v12 & 1) == 0)
        v32 &= 0xFFFFFFFFFFFFFFF8;
    }
    v13 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v13)
      v13 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v14 = *((_QWORD *)v13 + 67);
    v33 = v14;
    if ((v14 & 7) != 0)
    {
      v15 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 2, v15));
      if ((v16 & 1) == 0)
        v33 &= 0xFFFFFFFFFFFFFFF8;
    }
    v17 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v17)
      v17 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v18 = *((_QWORD *)v17 + 3);
    v34 = v18;
    if ((v18 & 7) != 0)
    {
      v19 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 2, v19));
      if ((v20 & 1) == 0)
        v34 &= 0xFFFFFFFFFFFFFFF8;
    }
    v21 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v21)
      v21 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v22 = *((_QWORD *)v21 + 37);
    v35 = v22;
    if ((v22 & 7) != 0)
    {
      v23 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
      do
        v24 = __ldxr(v23);
      while (__stxr(v24 + 2, v23));
      if ((v24 & 1) == 0)
        v35 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_20C374970(&qword_254989B78, &v31, 5uLL);
    v25 = &v36;
    do
    {
      v27 = *--v25;
      v26 = v27;
      if ((v27 & 7) != 0)
      {
        v28 = (unsigned int *)(v26 & 0xFFFFFFFFFFFFFFF8);
        do
          v29 = __ldxr(v28);
        while (__stlxr(v29 - 2, v28));
      }
    }
    while (v25 != &v31);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_254989B78, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989B90);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254989BB0);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254989BB0))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)1);
    sub_20C571E58((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_254989B98, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989BB0);
  }
  if (v1)
    return &qword_254989B98;
  else
    return &qword_254989B78;
}

void sub_20C571DC8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989B90);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C571E58(uint64_t **a1)
{
  qword_254989BA0 = 0;
  unk_254989BA8 = 0;
  qword_254989B98 = 0;
  sub_20BFC9A6C((char **)&qword_254989B98, ((unk_254989B80 - qword_254989B78) >> 3) + a1[1] - *a1);
  sub_20C1292A0(&qword_254989B98, (_QWORD *)qword_254989BA0, *a1, a1[1], a1[1] - *a1);
  return sub_20C1292A0(&qword_254989B98, (_QWORD *)qword_254989BA0, (uint64_t *)qword_254989B78, unk_254989B80, (unk_254989B80 - qword_254989B78) >> 3);
}

void sub_20C571EEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPlane::ComputeExtent(_QWORD *a1, unint64_t *a2, double a3, double a4)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  float32_t v11;
  float32x2_t *v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  float32x2_t v17;
  float v18;
  float32x2_t *v19;

  v18 = 0.0;
  v17 = 0;
  v19 = &v17;
  sub_20BF5AD04(a2, 2uLL, (uint64_t **)&v19);
  v10 = sub_20C571FC4(a1, (float *)&v17, a3, a4);
  if ((_DWORD)v10)
  {
    v11 = -v18;
    sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a2, v8, v9);
    v12 = (float32x2_t *)a2[4];
    *v12 = vneg_f32(v17);
    v12[1].f32[0] = v11;
    sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a2, v13, v14);
    v15 = a2[4];
    *(float32x2_t *)(v15 + 12) = v17;
    *(float *)(v15 + 20) = v18;
  }
  return v10;
}

uint64_t sub_20C571FC4(_QWORD *a1, float *a2, double a3, double a4)
{
  double v6;
  double v7;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  float v9;
  float v10;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v11;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v12;
  uint64_t result;
  float v14;
  float v15;

  v6 = a3 * 0.5;
  v7 = a4 * 0.5;
  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = v6;
  v10 = v7;
  if ((*a1 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v8 + 166) & 0xFFFFFFFFFFFFFFF8))
  {
    v14 = 0.0;
    v15 = v10;
  }
  else
  {
    v11 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v11)
      v11 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if ((*a1 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v11 + 168) & 0xFFFFFFFFFFFFFFF8))
    {
      v15 = 0.0;
      v14 = v9;
      v9 = v10;
    }
    else
    {
      v12 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v12)
        v12 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if ((*a1 & 0xFFFFFFFFFFFFFFF8) != (*((_QWORD *)v12 + 169) & 0xFFFFFFFFFFFFFFF8))
        return 0;
      v14 = v9;
      v15 = v10;
      v9 = 0.0;
    }
  }
  *a2 = v14;
  a2[1] = v15;
  result = 1;
  a2[2] = v9;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPlane::ComputeExtent(_QWORD *a1, const pxrInternal__aapl__pxrReserved__::GfMatrix4d *a2, unint64_t *a3, double a4, double a5)
{
  uint64_t v10;
  float32x2_t v11;
  float32_t v12;
  float32x2_t v13;
  uint64_t v14;
  char *v15;
  float32x2_t *v16;
  float v17;
  float32x2_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  float64x2_t v23;
  double v24;
  float64x2_t v25;
  double v26;
  _OWORD v27[19];
  char v28;
  _BYTE v29[12];

  DWORD2(v27[0]) = 0;
  *(_QWORD *)&v27[0] = 0;
  *(_QWORD *)&v23.f64[0] = v27;
  sub_20BF5AD04(a3, 2uLL, (uint64_t **)&v23);
  v10 = sub_20C571FC4(a1, (float *)v29, a4, a5);
  if ((_DWORD)v10)
  {
    v11 = (float32x2_t)vrev64_s32(*(int32x2_t *)v29);
    v11.f32[0] = -*(float *)&v29[8];
    v27[0] = vcvtq_f64_f32(vneg_f32(*(float32x2_t *)v29));
    v27[1] = vcvtq_f64_f32(v11);
    v27[2] = vcvtq_f64_f32(*(float32x2_t *)&v29[4]);
    pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)v27, a2);
    v28 = 0;
    pxrInternal__aapl__pxrReserved__::GfBBox3d::ComputeAlignedRange((pxrInternal__aapl__pxrReserved__::GfBBox3d *)v27, (uint64_t)&v23);
    v12 = v24;
    v13 = vcvt_f32_f64(v23);
    sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a3, v14, v15);
    v16 = (float32x2_t *)a3[4];
    *v16 = v13;
    v16[1].f32[0] = v12;
    v17 = v26;
    v18 = vcvt_f32_f64(v25);
    sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a3, v19, v20);
    v21 = a3[4];
    *(float32x2_t *)(v21 + 12) = v18;
    *(float *)(v21 + 20) = v17;
  }
  return v10;
}

void sub_20C5721F4(uint64_t a1, const std::type_info *a2, char *a3)
{
  pxrInternal__aapl__pxrReserved__::TfType *v3;
  char *v4;
  std::type_info var8;

  var8.__vftable = (std::type_info_vtbl *)sub_20C572400;
  pxrInternal__aapl__pxrReserved__::UsdGeomRegisterComputeExtentFunction(v3, &var8, v4);
}

uint64_t *sub_20C57222C()
{
  uint64_t *v0;
  void *__p[2];
  char v4;
  void *v5[3];
  uint64_t v6;
  int v7;

  sub_20BEB59B0((uint64_t)&v6, (uint64_t)"Tf", (uint64_t)"TfType::Define");
  sub_20C556F18((unint64_t **)v5);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p, (char **)v5, 0);
  if (v4 < 0)
    operator delete(__p[0]);
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_20C572300(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  uint64_t v16;

  if (a14 < 0)
    operator delete(__p);
  if (a15)
    operator delete(a15);
  sub_20BEB24F4(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_20C57234C(char *a1)
{
  unint64_t v2;
  unint64_t v3;
  void *__p[2];
  char v5;

  v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  if (v5 < 0)
    operator delete(__p[0]);
  v3 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p);
  if (v5 < 0)
    operator delete(__p[0]);
  pxrInternal__aapl__pxrReserved__::TfType::AddAlias((uint64_t *)&v3, v2, a1);
}

void sub_20C5723DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C572400(pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a1, uint64_t a2, const pxrInternal__aapl__pxrReserved__::GfMatrix4d *a3, unint64_t *a4)
{
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase *v6;
  char v7;
  char v8;
  unsigned int *v9;
  unsigned int v10;
  char v11;
  char v12;
  unsigned int *v13;
  unsigned int v14;
  char v15;
  char v16;
  unsigned int *v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v24;
  double v25;
  double v26;
  char *v27;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  void (**v32)(pxrInternal__aapl__pxrReserved__::UsdGeomPlane *__hidden);
  uint64_t v33;

  v6 = pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v32, a1);
  v32 = off_24C53C9F0;
  if (!v33
    || (*(_BYTE *)(v33 + 57) & 8) != 0
    || (pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible(v6) & 1) == 0)
  {
    v27 = "usdGeom/plane.cpp";
    v28 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"_ComputeExtentForPlane";
    v29 = 306;
    v30 = (unint64_t)"BOOL pxrInternal__aapl__pxrReserved__::_ComputeExtentForPlane(const UsdGeomBoundable &, cons"
                            "t UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)";
    v31 = 0;
    if ((pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v27, "planeSchema", 0) & 1) == 0)
      goto LABEL_32;
  }
  v26 = 0.0;
  pxrInternal__aapl__pxrReserved__::UsdGeomPlane::GetWidthAttr((pxrInternal__aapl__pxrReserved__::UsdGeomPlane *)&v32, (uint64_t)&v27);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<double>((uint64_t)&v27, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v26);
  v8 = v7;
  if ((v30 & 7) != 0)
  {
    v9 = (unsigned int *)(v30 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v29 + 1);
  sub_20BFD265C(&v29);
  if (v28)
    sub_20C35C614(v28);
  if ((v8 & 1) == 0)
    goto LABEL_32;
  v25 = 0.0;
  pxrInternal__aapl__pxrReserved__::UsdGeomPlane::GetLengthAttr((pxrInternal__aapl__pxrReserved__::UsdGeomPlane *)&v32, (uint64_t)&v27);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<double>((uint64_t)&v27, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v25);
  v12 = v11;
  if ((v30 & 7) != 0)
  {
    v13 = (unsigned int *)(v30 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v29 + 1);
  sub_20BFD265C(&v29);
  if (v28)
    sub_20C35C614(v28);
  if ((v12 & 1) != 0)
  {
    v24 = 0;
    pxrInternal__aapl__pxrReserved__::UsdGeomPlane::GetAxisAttr((pxrInternal__aapl__pxrReserved__::UsdGeomPlane *)&v32, (uint64_t)&v27);
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::TfToken>((uint64_t)&v27, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v24);
    v16 = v15;
    if ((v30 & 7) != 0)
    {
      v17 = (unsigned int *)(v30 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v29 + 1);
    sub_20BFD265C(&v29);
    if (v28)
      sub_20C35C614(v28);
    if ((v16 & 1) != 0)
    {
      if (a3)
        v19 = pxrInternal__aapl__pxrReserved__::UsdGeomPlane::ComputeExtent(&v24, a3, a4, v26, v25);
      else
        v19 = pxrInternal__aapl__pxrReserved__::UsdGeomPlane::ComputeExtent(&v24, a4, v26, v25);
      v20 = v19;
    }
    else
    {
      v20 = 0;
    }
    if ((v24 & 7) != 0)
    {
      v21 = (unsigned int *)(v24 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
  }
  else
  {
LABEL_32:
    v20 = 0;
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)&v32);
  return v20;
}

void sub_20C57264C(_Unwind_Exception *a1)
{
  uint64_t v1;

  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)(v1 - 56));
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::~UsdGeomPointBased(pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *this)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim(this);
  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t (*v6)(uint64_t *);
  char v7;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;

  v6 = sub_20C369024(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v13);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53CA48;
    if ((v16 & 7) != 0)
    {
      v9 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
  }
  else
  {
    v13 = "usdGeom/pointBased.cpp";
    v14 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Get";
    v15 = 51;
    v16 = (unint64_t)"static UsdGeomPointBased pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::Get(const UsdS"
                            "tagePtr &, const SdfPath &)";
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v13, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v13) = 1;
    v14 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v15);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v15 + 1);
    v16 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53CA48;
    if ((v16 & 7) != 0)
    {
      v11 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stlxr(v12 - 2, v11));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v15 + 1);
  sub_20BFD265C(&v15);
  if (v14)
    sub_20C35C614(v14);
}

void sub_20C572854(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *this)
{
  return 2;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *this)
{
  unsigned __int8 v1;
  const std::type_info *v3;
  char *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_254989BC0);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_254989BC0))
  {
    __cxa_guard_release(&qword_254989BC0);
  }
  return &qword_254989BB8;
}

void sub_20C5728E0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989BC0);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *v3;
  const std::type_info *v4;
  char *v5;

  v1 = atomic_load((unsigned __int8 *)&qword_254989BD0);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *)__cxa_guard_acquire(&qword_254989BD0);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::_GetStaticTfType(v3);
      byte_254989BC8 = sub_20C35BD7C((char *)&qword_254989BB8, v4, v5);
      __cxa_guard_release(&qword_254989BD0);
    }
  }
  return byte_254989BC8;
}

void sub_20C57295C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989BD0);
  _Unwind_Resume(a1);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::_GetStaticTfType(this);
  return &qword_254989BB8;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::GetPointsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 816), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C572A34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::CreatePointsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 816), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 664), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::GetVelocitiesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1216), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C572B8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::CreateVelocitiesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1216), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 688), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::GetAccelerationsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, v3, a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C572CE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::CreateAccelerationsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, v8, (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 688), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::GetNormalsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 704), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C572E3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::CreateNormalsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 704), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 712), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *this)
{
  int v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v17;
  uint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  uint64_t *SchemaAttributeNames;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = (int)this;
  v31 = *MEMORY[0x24BDAC8D0];
  v2 = atomic_load((unsigned __int8 *)&qword_254989BF0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254989BF0))
  {
    v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5)
      v5 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v6 = *((_QWORD *)v5 + 102);
    v27 = v6;
    if ((v6 & 7) != 0)
    {
      v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 2, v7));
      if ((v8 & 1) == 0)
        v27 &= 0xFFFFFFFFFFFFFFF8;
    }
    v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9)
      v9 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v10 = *((_QWORD *)v9 + 152);
    v28 = v10;
    if ((v10 & 7) != 0)
    {
      v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 2, v11));
      if ((v12 & 1) == 0)
        v28 &= 0xFFFFFFFFFFFFFFF8;
    }
    v13 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v13)
      v13 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v14 = *(_QWORD *)v13;
    v29 = v14;
    if ((v14 & 7) != 0)
    {
      v15 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 2, v15));
      if ((v16 & 1) == 0)
        v29 &= 0xFFFFFFFFFFFFFFF8;
    }
    v17 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v17)
      v17 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v18 = *((_QWORD *)v17 + 88);
    v30 = v18;
    if ((v18 & 7) != 0)
    {
      v19 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 2, v19));
      if ((v20 & 1) == 0)
        v30 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_20C374970(&qword_254989BD8, &v27, 4uLL);
    v21 = &v31;
    do
    {
      v23 = *--v21;
      v22 = v23;
      if ((v23 & 7) != 0)
      {
        v24 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
        do
          v25 = __ldxr(v24);
        while (__stlxr(v25 - 2, v24));
      }
    }
    while (v21 != &v27);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_254989BD8, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989BF0);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254989C10);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254989C10))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)1);
    sub_20C573228((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_254989BF8, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989C10);
  }
  if (v1)
    return &qword_254989BF8;
  else
    return &qword_254989BD8;
}

void sub_20C573198(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989BF0);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C573228(uint64_t **a1)
{
  qword_254989C00 = 0;
  unk_254989C08 = 0;
  qword_254989BF8 = 0;
  sub_20BFC9A6C((char **)&qword_254989BF8, ((unk_254989BE0 - qword_254989BD8) >> 3) + a1[1] - *a1);
  sub_20C1292A0(&qword_254989BF8, (_QWORD *)qword_254989C00, *a1, a1[1], a1[1] - *a1);
  return sub_20C1292A0(&qword_254989BF8, (_QWORD *)qword_254989C00, (uint64_t *)qword_254989BD8, unk_254989BE0, (unk_254989BE0 - qword_254989BD8) >> 3);
}

void sub_20C5732BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::GetNormalsInterpolation(pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *this@<X0>, unsigned int **a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  _BOOL4 v4;
  unsigned int *v5;
  unsigned int v6;
  unsigned int *v7;
  unsigned int v8;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v9;
  unsigned int *v10;
  unsigned int *v11;
  unsigned int v12;
  unsigned int *v13;
  unsigned int v14;
  uint64_t v15;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v16;
  int v17;
  int v18;
  uint64_t v19;
  unsigned int *v20;
  uint64_t v21;

  v20 = 0;
  pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::GetNormalsAttr(this, (uint64_t)&v15);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v21 = 0;
  v4 = sub_20C361F00((uint64_t)&v15, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 488), (uint64_t)&v20, &v21);
  if ((v21 & 7) != 0)
  {
    v5 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
  if ((v19 & 7) != 0)
  {
    v7 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stlxr(v8 - 2, v7));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v18);
  sub_20BFD265C(&v17);
  if (v16)
    sub_20C35C614(v16);
  if (v4)
  {
    *a2 = v20;
    v20 = 0;
  }
  else
  {
    v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9)
      v9 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v10 = (unsigned int *)*((_QWORD *)v9 + 153);
    *a2 = v10;
    if ((v10 & 7) != 0)
    {
      v11 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 2, v11));
      if ((v12 & 1) == 0)
        *a2 = v11;
    }
  }
  if ((v20 & 7) != 0)
  {
    v13 = (unsigned int *)((unint64_t)v20 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
}

void sub_20C573428(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  unsigned int *v14;
  unsigned int v15;

  if ((a13 & 7) != 0)
  {
    v14 = (unsigned int *)(a13 & 0xFFFFFFFFFFFFFFF8);
    do
      v15 = __ldxr(v14);
    while (__stlxr(v15 - 2, v14));
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::SetNormalsInterpolation(pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unint64_t v10;
  const char *v11;
  uint64_t *String;
  const char *v13;
  unsigned int *v14;
  unsigned int v15;
  uint64_t v17;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v18;
  int v19;
  int v20;
  uint64_t v21;
  int v22;
  int v23;
  char *v24;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v25;
  uint64_t v26;
  unint64_t v27;
  char v28;

  if (pxrInternal__aapl__pxrReserved__::UsdGeomPrimvar::IsValidInterpolation(a2, a2))
  {
    pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::GetNormalsAttr(this, (uint64_t)&v24);
    v4 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v4)
      v4 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v17 = 0;
    v5 = sub_20C361C9C((uint64_t)&v24, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v4 + 488), (uint64_t (**)(_QWORD, uint64_t))a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v17);
    if ((v17 & 7) != 0)
    {
      v6 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v7 = __ldxr(v6);
      while (__stlxr(v7 - 2, v6));
    }
    if ((v27 & 7) != 0)
    {
      v8 = (unsigned int *)(v27 & 0xFFFFFFFFFFFFFFF8);
      do
        v9 = __ldxr(v8);
      while (__stlxr(v9 - 2, v8));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v26 + 1);
    sub_20BFD265C(&v26);
    if (v25)
      sub_20C35C614(v25);
  }
  else
  {
    v24 = "usdGeom/pointBased.cpp";
    v25 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"SetNormalsInterpolation";
    v26 = 233;
    v27 = (unint64_t)"BOOL pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::SetNormalsInterpolation(const TfToken &)";
    v28 = 0;
    v10 = *(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8;
    if (v10)
    {
      v11 = (const char *)(v10 + 16);
      if (*(char *)(v10 + 39) < 0)
        v11 = *(const char **)v11;
    }
    else
    {
      v11 = "";
    }
    sub_20C35C4F8((uint64_t)&v17, (uint64_t *)this + 1, (_DWORD *)this + 4);
    sub_20C348EEC((uint64_t)&v17, &v22);
    String = pxrInternal__aapl__pxrReserved__::SdfPath::GetString((pxrInternal__aapl__pxrReserved__::SdfPath *)&v22);
    if (*((char *)String + 23) >= 0)
      v13 = (const char *)String;
    else
      v13 = (const char *)*String;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v24, 1, (pxrInternal__aapl__pxrReserved__ *)"Attempt to set invalid interpolation \"%s\" for normals attr on prim %s", v11, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v23);
    sub_20BFD265C(&v22);
    if ((v21 & 7) != 0)
    {
      v14 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
    sub_20BFD265C(&v19);
    if (v18)
      sub_20C35C614(v18);
    return 0;
  }
  return v5;
}

void sub_20C57366C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_20C372B54((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::ComputeExtent(_QWORD *a1, unint64_t *a2)
{
  pxrInternal__aapl__pxrReserved__ *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  unint64_t initial_auto_partitioner_divisor;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  float *v17;
  double v18;
  double v19;
  float v20;
  double v21;
  float v22;
  float v23;
  float *v24;
  float v25;
  uint64_t v26;
  char *v27;
  float v28;
  float v29;
  float v30;
  float *v31;
  _QWORD *v33;
  char v34;
  int64x2_t v35;
  __int128 v36;
  int64x2_t v37;
  _QWORD *v38;
  uint64_t *v39[3];
  int64x2_t v40;
  __int128 v41;
  int64x2_t v42;
  tbb::task_group_context *v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  int v47;
  uint64_t v48;

  v48 = *MEMORY[0x24BDAC8D0];
  v33 = a1;
  v45 = 0;
  v44 = 0;
  v39[0] = &v44;
  sub_20BF5AD04(a2, 2uLL, v39);
  v35 = vdupq_n_s64(0x47EFFFFFE0000000uLL);
  v36 = xmmword_20CA5AAF0;
  v37 = vdupq_n_s64(0xC7EFFFFFE0000000);
  v7 = *a1;
  if (*a1)
  {
    if (pxrInternal__aapl__pxrReserved__::WorkHasConcurrency(v4))
    {
      LODWORD(v44) = 0;
      v46 = 65539;
      v47 = 55;
      tbb::task_group_context::init((uint64_t)&v44, v5, (uint64_t)v6, v8);
      v40 = v35;
      v41 = v36;
      v38 = &v33;
      v39[0] = (uint64_t *)&v35;
      v39[1] = (uint64_t *)&v38;
      v39[2] = (uint64_t *)&v34;
      v42 = v37;
      v43 = (tbb::task_group_context *)&v44;
      v9 = tbb::internal::allocate_root_with_context_proxy::allocate(&v43, 0x40uLL);
      *(_BYTE *)(v9 - 11) = 1;
      *(_QWORD *)v9 = &off_24C53CAA0;
      *(_QWORD *)(v9 + 8) = v39;
      *(_QWORD *)(v9 + 16) = v7;
      *(_OWORD *)(v9 + 24) = xmmword_20CAECFF0;
      initial_auto_partitioner_divisor = tbb::internal::get_initial_auto_partitioner_divisor((tbb::internal *)v9);
      *(_DWORD *)(v9 + 48) = 0;
      *(_BYTE *)(v9 + 52) = 5;
      *(_QWORD *)(v9 + 40) = (initial_auto_partitioner_divisor >> 1) & 0x7FFFFFFFFFFFFFFELL;
      *(_BYTE *)(v9 + 56) = 0;
      (*(void (**)(_QWORD, unint64_t, unint64_t))(**(_QWORD **)(v9 - 40) + 16))(*(_QWORD *)(v9 - 40), v9, v9 - 8);
      v12 = *(double *)&v40.i64[1];
      v11 = *(double *)v40.i64;
      v13 = *((double *)&v41 + 1);
      v14 = *(double *)&v41;
      v15 = *(double *)&v42.i64[1];
      v16 = *(double *)v42.i64;
      tbb::task_group_context::~task_group_context((tbb::task_group_context *)&v44);
    }
    else
    {
      v17 = (float *)(a1[4] + 8);
      v14 = 3.40282347e38;
      v15 = -3.40282347e38;
      v16 = -3.40282347e38;
      v13 = -3.40282347e38;
      v12 = 3.40282347e38;
      v11 = 3.40282347e38;
      do
      {
        v18 = *(v17 - 2);
        v19 = *(v17 - 1);
        v20 = *v17;
        v17 += 3;
        v21 = v20;
        if (v11 > v18)
          v11 = v18;
        if (v12 > v19)
          v12 = v19;
        if (v14 > v21)
          v14 = v21;
        if (v13 < v18)
          v13 = v18;
        if (v16 < v19)
          v16 = v19;
        if (v15 < v21)
          v15 = v21;
        --v7;
      }
      while (v7);
    }
  }
  else
  {
    v13 = -3.40282347e38;
    v11 = 3.40282347e38;
    v12 = 3.40282347e38;
    v14 = 3.40282347e38;
    v16 = -3.40282347e38;
    v15 = -3.40282347e38;
  }
  sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a2, v5, v6);
  v22 = v11;
  v23 = v12;
  v24 = (float *)a2[4];
  v25 = v14;
  *v24 = v22;
  v24[1] = v23;
  v24[2] = v25;
  sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a2, v26, v27);
  v28 = v13;
  v29 = v16;
  v30 = v15;
  v31 = (float *)a2[4];
  v31[3] = v28;
  v31[4] = v29;
  v31[5] = v30;
  return 1;
}

void sub_20C573960(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,int a28,__int16 a29,char a30,char a31)
{
  tbb::task *v31;

  tbb::internal::allocate_root_with_context_proxy::free((tbb::internal::allocate_root_with_context_proxy *)&a27, v31);
  tbb::task_group_context::~task_group_context((tbb::task_group_context *)&a29);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::ComputeExtent(uint64_t *a1, float64x2_t *a2, unint64_t *a3)
{
  pxrInternal__aapl__pxrReserved__ *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  unint64_t initial_auto_partitioner_divisor;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  double v22;
  float v23;
  double v24;
  float v25;
  double v26;
  float v27;
  float v28;
  float *v29;
  float v30;
  uint64_t v31;
  char *v32;
  float v33;
  float v34;
  float v35;
  float *v36;
  _QWORD v38[2];
  char v39;
  int64x2_t v40;
  __int128 v41;
  int64x2_t v42;
  _QWORD *v43;
  uint64_t *v44[3];
  int64x2_t v45;
  __int128 v46;
  int64x2_t v47;
  tbb::task_group_context *v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;

  v53 = *MEMORY[0x24BDAC8D0];
  v38[0] = a1;
  v38[1] = a2;
  v50 = 0;
  v49 = 0;
  v44[0] = &v49;
  sub_20BF5AD04(a3, 2uLL, v44);
  v40 = vdupq_n_s64(0x47EFFFFFE0000000uLL);
  v41 = xmmword_20CA5AAF0;
  v42 = vdupq_n_s64(0xC7EFFFFFE0000000);
  v9 = *a1;
  if (*a1)
  {
    if (pxrInternal__aapl__pxrReserved__::WorkHasConcurrency(v6))
    {
      LODWORD(v49) = 0;
      v51 = 65539;
      v52 = 55;
      tbb::task_group_context::init((uint64_t)&v49, v10, v11, v12);
      v45 = v40;
      v46 = v41;
      v43 = v38;
      v44[0] = (uint64_t *)&v40;
      v44[1] = (uint64_t *)&v43;
      v44[2] = (uint64_t *)&v39;
      v47 = v42;
      v48 = (tbb::task_group_context *)&v49;
      v13 = tbb::internal::allocate_root_with_context_proxy::allocate(&v48, 0x40uLL);
      *(_BYTE *)(v13 - 11) = 1;
      *(_QWORD *)v13 = &off_24C53CB30;
      *(_QWORD *)(v13 + 8) = v44;
      *(_QWORD *)(v13 + 16) = v9;
      *(_OWORD *)(v13 + 24) = xmmword_20CAECFF0;
      initial_auto_partitioner_divisor = tbb::internal::get_initial_auto_partitioner_divisor((tbb::internal *)v13);
      *(_DWORD *)(v13 + 48) = 0;
      *(_BYTE *)(v13 + 52) = 5;
      *(_QWORD *)(v13 + 40) = (initial_auto_partitioner_divisor >> 1) & 0x7FFFFFFFFFFFFFFELL;
      *(_BYTE *)(v13 + 56) = 0;
      (*(void (**)(_QWORD, unint64_t, unint64_t))(**(_QWORD **)(v13 - 40) + 16))(*(_QWORD *)(v13 - 40), v13, v13 - 8);
      v16 = *(double *)&v45.i64[1];
      v15 = *(double *)v45.i64;
      v17 = *((double *)&v46 + 1);
      v18 = *(double *)&v46;
      v19 = *(double *)&v47.i64[1];
      v20 = *(double *)v47.i64;
      tbb::task_group_context::~task_group_context((tbb::task_group_context *)&v49);
    }
    else
    {
      v21 = 0;
      v18 = 3.40282347e38;
      v19 = -3.40282347e38;
      v20 = -3.40282347e38;
      v17 = -3.40282347e38;
      v16 = 3.40282347e38;
      v15 = 3.40282347e38;
      do
      {
        v22 = sub_20C575548(a2, (float *)(a1[4] + v21)).f32[0];
        v24 = v23;
        v26 = v25;
        if (v15 > v22)
          v15 = v22;
        if (v16 > v24)
          v16 = v24;
        if (v18 > v26)
          v18 = v26;
        if (v17 < v22)
          v17 = v22;
        if (v20 < v24)
          v20 = v24;
        if (v19 < v26)
          v19 = v26;
        v21 += 12;
        --v9;
      }
      while (v9);
    }
  }
  else
  {
    v17 = -3.40282347e38;
    v15 = 3.40282347e38;
    v16 = 3.40282347e38;
    v18 = 3.40282347e38;
    v20 = -3.40282347e38;
    v19 = -3.40282347e38;
  }
  sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a3, v7, v8);
  v27 = v15;
  v28 = v16;
  v29 = (float *)a3[4];
  v30 = v18;
  *v29 = v27;
  v29[1] = v28;
  v29[2] = v30;
  sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a3, v31, v32);
  v33 = v17;
  v34 = v20;
  v35 = v19;
  v36 = (float *)a3[4];
  v36[3] = v33;
  v36[4] = v34;
  v36[5] = v35;
  return 1;
}

void sub_20C573C40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,int a30,__int16 a31,char a32,char a33)
{
  tbb::task *v33;

  tbb::internal::allocate_root_with_context_proxy::free((tbb::internal::allocate_root_with_context_proxy *)&a29, v33);
  tbb::task_group_context::~task_group_context((tbb::task_group_context *)&a31);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::ComputePointsAtTime(uint64_t a1, uint64_t a2, double a3, double a4)
{
  void **v8;
  uint64_t v9;
  void **v11[3];
  __int128 *v12;
  __int128 *v13;
  uint64_t v14;

  v12 = 0;
  v13 = 0;
  v14 = 0;
  v8 = (void **)operator new(8uLL);
  *(double *)v8 = a3;
  v11[1] = v8 + 1;
  v11[2] = v8 + 1;
  v11[0] = v8;
  v9 = pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::ComputePointsAtTimes(a1, (uint64_t *)&v12, (uint64_t *)v11, a4);
  if ((v9 & 1) != 0)
  {
    if (v13 == v12)
      sub_20C575678();
    sub_20C284DC8(a2, v12);
  }
  operator delete(v8);
  v11[0] = (void **)&v12;
  sub_20C5755EC(v11);
  return v9;
}

void sub_20C573D3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, uint64_t a10, uint64_t a11, char a12)
{
  a9 = (void **)&a12;
  sub_20C5755EC(&a9);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::ComputePointsAtTimes(uint64_t a1, uint64_t *a2, uint64_t *a3, double a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t PositionsVelocitiesAndAccelerations;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int *v15;
  unsigned int v16;
  unint64_t v17;
  uint64_t v18;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  __int128 *v25;
  int v26;
  uint64_t v27;
  unsigned int *v28;
  unsigned int v29;
  BOOL v30;
  unsigned int *v31;
  unsigned int v32;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v33;
  unsigned int *v34;
  unsigned int v35;
  unsigned int v36;
  uint64_t v39;
  unsigned int v40;
  uint64_t v41;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v48;
  int v49;
  int v50;
  uint64_t v51;
  __int128 *v52;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE v56[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v57;
  int v58;
  int v59;
  uint64_t v60;
  _OWORD v61[2];
  uint64_t v62;
  double v63;
  _OWORD v64[2];
  uint64_t v65;
  _OWORD v66[2];
  uint64_t v67;

  v5 = a3[1];
  v41 = *a3;
  v39 = v5 - *a3;
  if (v5 != *a3)
  {
    v6 = *a3;
    do
      v6 += 8;
    while (v6 != v5);
  }
  v67 = 0;
  memset(v66, 0, sizeof(v66));
  v65 = 0;
  memset(v64, 0, sizeof(v64));
  v63 = 0.0;
  v62 = 0;
  memset(v61, 0, sizeof(v61));
  v7 = a1;
  pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::GetPointsAttr((pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *)a1, (uint64_t)&v44);
  pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::GetVelocitiesAttr((pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *)a1, (uint64_t)v56);
  pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::GetAccelerationsAttr((pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *)a1, (uint64_t)&v52);
  sub_20C35C4F8((uint64_t)&v47, (uint64_t *)(v7 + 8), (_DWORD *)(v7 + 16));
  PositionsVelocitiesAndAccelerations = pxrInternal__aapl__pxrReserved__::UsdGeom_GetPositionsVelocitiesAndAccelerations((pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v44, (pxrInternal__aapl__pxrReserved__::UsdAttribute *)v56, (pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v52, 0, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v66, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v64, &v63, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v61, a4, (uint64_t)&v47);
  if ((v51 & 7) != 0)
  {
    v9 = (unsigned int *)(v51 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v50);
  sub_20BFD265C(&v49);
  if (v48)
    sub_20C35C614(v48);
  if ((v55 & 7) != 0)
  {
    v11 = (unsigned int *)(v55 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stlxr(v12 - 2, v11));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v54 + 1);
  sub_20BFD265C(&v54);
  if (v53)
    sub_20C35C614(v53);
  if ((v60 & 7) != 0)
  {
    v13 = (unsigned int *)(v60 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v59);
  sub_20BFD265C(&v58);
  if (v57)
    sub_20C35C614(v57);
  if ((BYTE8(v45) & 7) != 0)
  {
    v15 = (unsigned int *)(*((_QWORD *)&v45 + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v16 = __ldxr(v15);
    while (__stlxr(v16 - 2, v15));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v45 + 1);
  sub_20BFD265C(&v45);
  if (*((_QWORD *)&v44 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v44 + 1));
  if ((PositionsVelocitiesAndAccelerations & 1) != 0)
  {
    v17 = v39 >> 3;
    v18 = *(_QWORD *)&v66[0];
    if (*(_QWORD *)&v66[0])
    {
      sub_20C35C4F8((uint64_t)&v44, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
      pxrInternal__aapl__pxrReserved__::UsdObject::GetStage((pxrInternal__aapl__pxrReserved__::UsdObject *)&v44, v19, &v47);
      if ((BYTE8(v45) & 7) != 0)
      {
        v20 = (unsigned int *)(*((_QWORD *)&v45 + 1) & 0xFFFFFFFFFFFFFFF8);
        do
          v21 = __ldxr(v20);
        while (__stlxr(v21 - 2, v20));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v45 + 1);
      v40 = PositionsVelocitiesAndAccelerations;
      sub_20BFD265C(&v45);
      if (*((_QWORD *)&v44 + 1))
        sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v44 + 1));
      v52 = 0;
      v53 = 0;
      v54 = 0;
      sub_20C574410((uint64_t *)&v52, v17);
      if (v41 != v5)
      {
        v22 = 0;
        v23 = *(_QWORD *)&v64[0];
        if (v17 <= 1)
          v17 = 1;
        do
        {
          v24 = *(double *)(*a3 + 8 * v22);
          v25 = v52;
          if (!v23)
          {
            v46 = 0;
            v44 = 0u;
            v45 = 0u;
            pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::GetPointsAttr((pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *)v7, (uint64_t)v56);
            pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::GfVec3f>>((uint64_t)v56, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v44);
            if (v26)
            {
              v27 = v44;
              if ((v60 & 7) != 0)
              {
                v28 = (unsigned int *)(v60 & 0xFFFFFFFFFFFFFFF8);
                do
                  v29 = __ldxr(v28);
                while (__stlxr(v29 - 2, v28));
              }
              pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v59);
              sub_20BFD265C(&v58);
              if (v57)
                sub_20C35C614(v57);
              v30 = v27 == v18;
              v7 = a1;
              if (v30)
                sub_20C284DC8((uint64_t)v66, &v44);
            }
            else
            {
              if ((v60 & 7) != 0)
              {
                v31 = (unsigned int *)(v60 & 0xFFFFFFFFFFFFFFF8);
                do
                  v32 = __ldxr(v31);
                while (__stlxr(v32 - 2, v31));
              }
              pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v59);
              sub_20BFD265C(&v58);
              if (v57)
                sub_20C35C614(v57);
            }
            sub_20BF5618C((uint64_t)&v44);
          }
          pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::ComputePointsAtTime((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)((char *)v25 + 40 * v22++), &v47, (uint64_t *)v66, (uint64_t *)v64, (uint64_t *)v61, v24, v63);
        }
        while (v22 != v17);
      }
      if (&v52 != (__int128 **)a2)
        sub_20C575A90(a2, v52, (__int128 *)v53, 0xCCCCCCCCCCCCCCCDLL * ((v53 - (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v52) >> 3));
      *(_QWORD *)&v44 = &v52;
      sub_20C5755EC((void ***)&v44);
      v33 = v48;
      PositionsVelocitiesAndAccelerations = v40;
      if (v48)
      {
        v34 = (unsigned int *)((char *)v48 + 8);
        do
        {
          v35 = __ldxr(v34);
          v36 = v35 - 1;
        }
        while (__stlxr(v36, v34));
        if (!v36)
          (*(void (**)(pxrInternal__aapl__pxrReserved__::Usd_PrimData *))(*(_QWORD *)v33 + 8))(v33);
      }
    }
    else
    {
      sub_20C57562C((uint64_t)a2, *a2);
      sub_20C574410(a2, v17);
    }
  }
  sub_20BF5618C((uint64_t)v61);
  sub_20BF5618C((uint64_t)v64);
  sub_20BF5618C((uint64_t)v66);
  return PositionsVelocitiesAndAccelerations;
}

void sub_20C5742C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  uint64_t v33;

  sub_20BF5618C((uint64_t)&a33);
  sub_20BF5618C(v33 - 192);
  sub_20BF5618C(v33 - 144);
  _Unwind_Resume(a1);
}

void sub_20C574410(uint64_t *a1, unint64_t a2)
{
  unint64_t v2;
  BOOL v3;
  unint64_t v4;

  v2 = 0xCCCCCCCCCCCCCCCDLL * ((a1[1] - *a1) >> 3);
  v3 = a2 >= v2;
  v4 = a2 - v2;
  if (v4 != 0 && v3)
  {
    sub_20C57568C(a1, v4);
  }
  else if (!v3)
  {
    sub_20C57562C((uint64_t)a1, *a1 + 40 * a2);
  }
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::ComputePointsAtTime(pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, double a6, double a7)
{
  unint64_t v13;
  pxrInternal__aapl__pxrReserved__::PcpCache **v14;
  double TimeCodesPerSecond;
  pxrInternal__aapl__pxrReserved__ *v16;
  uint64_t v17;
  char *v18;
  void *v19;
  unint64_t v20;
  unint64_t initial_auto_partitioner_divisor;
  uint64_t v22;
  float32x2_t *v23;
  float32x2_t v24;
  float v25;
  float32x2_t *v26;
  float32x2_t v27;
  float v28;
  float32x2_t *v29;
  float v30;
  float v31;
  pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *v32;
  float32x2_t *v33;
  uint64_t *v35[5];
  double v36;
  pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *v37;
  tbb::task_group_context *v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  v37 = a1;
  v13 = *a3;
  v14 = (pxrInternal__aapl__pxrReserved__::PcpCache **)sub_20C348E08(a2);
  TimeCodesPerSecond = pxrInternal__aapl__pxrReserved__::UsdStage::GetTimeCodesPerSecond(v14);
  v36 = pxrInternal__aapl__pxrReserved__::UsdGeom_CalculateTimeDelta(a6, a7, TimeCodesPerSecond);
  v40 = 0;
  v39 = 0;
  v35[0] = &v39;
  sub_20BF5AD04((unint64_t *)a1, v13, v35);
  v35[0] = (uint64_t *)&v36;
  v35[1] = a3;
  v35[2] = a4;
  v35[3] = a5;
  v35[4] = (uint64_t *)&v37;
  if (v13)
  {
    if (pxrInternal__aapl__pxrReserved__::WorkHasConcurrency(v16))
    {
      LODWORD(v39) = 0;
      v41 = 65539;
      v42 = 55;
      tbb::task_group_context::init((uint64_t)&v39, v17, (uint64_t)v18, v19);
      v38 = (tbb::task_group_context *)&v39;
      v20 = tbb::internal::allocate_root_with_context_proxy::allocate(&v38, 0x38uLL);
      *(_BYTE *)(v20 - 11) = 1;
      *(_QWORD *)v20 = &off_24C53CBC0;
      *(_QWORD *)(v20 + 8) = v13;
      *(_OWORD *)(v20 + 16) = xmmword_20CA59F70;
      *(_QWORD *)(v20 + 32) = v35;
      initial_auto_partitioner_divisor = tbb::internal::get_initial_auto_partitioner_divisor((tbb::internal *)v20);
      *(_DWORD *)(v20 + 48) = 0;
      *(_BYTE *)(v20 + 52) = 5;
      *(_QWORD *)(v20 + 40) = (initial_auto_partitioner_divisor >> 1) & 0x7FFFFFFFFFFFFFFELL;
      (*(void (**)(_QWORD, unint64_t, unint64_t))(**(_QWORD **)(v20 - 40) + 16))(*(_QWORD *)(v20 - 40), v20, v20 - 8);
      tbb::task_group_context::~task_group_context((tbb::task_group_context *)&v39);
    }
    else
    {
      v22 = 0;
      do
      {
        v23 = (float32x2_t *)(a3[4] + v22);
        v24 = *v23;
        v25 = v23[1].f32[0];
        if (*a4)
        {
          v26 = (float32x2_t *)(a4[4] + v22);
          v27 = *v26;
          v28 = v26[1].f32[0];
          if (*a5)
          {
            v29 = (float32x2_t *)(a5[4] + v22);
            v30 = v36 * v29[1].f32[0];
            v27 = vadd_f32(v27, vmul_f32(vcvt_f32_f64(vmulq_n_f64(vcvtq_f64_f32(*v29), v36)), (float32x2_t)0x3F0000003F000000));
            v28 = v28 + (float)(v30 * 0.5);
          }
          v31 = v36 * v28;
          v24 = vadd_f32(v24, vcvt_f32_f64(vmulq_n_f64(vcvtq_f64_f32(v27), v36)));
          v25 = v25 + v31;
        }
        v32 = v37;
        sub_20BF5AFC0(v37, v17, v18);
        v33 = (float32x2_t *)(*((_QWORD *)v32 + 4) + v22);
        *v33 = v24;
        v33[1].f32[0] = v25;
        v22 += 12;
        --v13;
      }
      while (v13);
    }
  }
  return 1;
}

void sub_20C5746A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, int a18, __int16 a19, char a20,char a21)
{
  tbb::task *v21;

  tbb::internal::allocate_root_with_context_proxy::free((tbb::internal::allocate_root_with_context_proxy *)&a17, v21);
  tbb::task_group_context::~task_group_context((tbb::task_group_context *)&a19);
  _Unwind_Resume(a1);
}

void sub_20C5746E4(uint64_t a1, const std::type_info *a2, char *a3)
{
  pxrInternal__aapl__pxrReserved__::TfType *v3;
  char *v4;
  std::type_info var8;

  var8.__vftable = (std::type_info_vtbl *)sub_20C574840;
  pxrInternal__aapl__pxrReserved__::UsdGeomRegisterComputeExtentFunction(v3, &var8, v4);
}

uint64_t *sub_20C57471C()
{
  uint64_t *v0;
  void *__p[2];
  char v4;
  void *v5[3];
  uint64_t v6;
  int v7;

  sub_20BEB59B0((uint64_t)&v6, (uint64_t)"Tf", (uint64_t)"TfType::Define");
  sub_20C556F18((unint64_t **)v5);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((__int128 *)__p, (char **)v5, 0);
  if (v4 < 0)
    operator delete(__p[0]);
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_20C5747F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  uint64_t v16;

  if (a14 < 0)
    operator delete(__p);
  if (a15)
    operator delete(a15);
  sub_20BEB24F4(v16 - 32);
  _Unwind_Resume(a1);
}

uint64_t sub_20C574840(pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a1, uint64_t a2, float64x2_t *a3, unint64_t *a4)
{
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  uint64_t v12;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v13;
  int v14;
  int v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  void (**v20)(pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *__hidden);
  uint64_t v21;

  v6 = pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v20, a1);
  v20 = off_24C53CA48;
  if (v21
    && (*(_BYTE *)(v21 + 57) & 8) == 0
    && (pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible(v6) & 1) != 0
    || (*(_QWORD *)&v17 = "usdGeom/pointBased.cpp",
        *((_QWORD *)&v17 + 1) = "_ComputeExtentForPointBased",
        *(_QWORD *)&v18 = 300,
        *((_QWORD *)&v18 + 1) = "BOOL pxrInternal__aapl__pxrReserved__::_ComputeExtentForPointBased(const UsdGeomBoundabl"
                                "e &, const UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)",
        LOBYTE(v19) = 0,
        (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v17, "pointBased", 0) & 1) != 0))
  {
    v19 = 0;
    v17 = 0u;
    v18 = 0u;
    pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::GetPointsAttr((pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *)&v20, (uint64_t)&v12);
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::GfVec3f>>((uint64_t)&v12, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v17);
    v8 = v7;
    if ((v16 & 7) != 0)
    {
      v9 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v15);
    sub_20BFD265C(&v14);
    if (v13)
      sub_20C35C614(v13);
    if ((v8 & 1) != 0)
    {
      if (a3)
        pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::ComputeExtent((uint64_t *)&v17, a3, a4);
      else
        pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::ComputeExtent(&v17, a4);
    }
    sub_20BF5618C((uint64_t)&v17);
  }
  else
  {
    v8 = 0;
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)&v20);
  return v8;
}

void sub_20C574994(_Unwind_Exception *a1)
{
  uint64_t v1;

  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)(v1 - 56));
  _Unwind_Resume(a1);
}

uint64_t sub_20C5749E4(tbb::internal::allocate_continuation_proxy *this)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  __int128 **v6;
  uint64_t v7;
  __int128 *v8;
  __int128 v9;
  __int128 v10;
  __int128 *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  unsigned int v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned int v25;
  unsigned __int8 v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v36[16];
  __int128 v37;
  uint64_t v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  if (!*((_QWORD *)this + 5))
  {
    *((_QWORD *)this + 5) = 1;
    if (*((char *)this - 11) < 0)
    {
      v2 = *((_QWORD *)this - 4);
      if (*(int *)(v2 - 24) >= 2)
      {
        __dmb(0xBu);
        *(_BYTE *)(v2 + 8) = 1;
        v3 = *((unsigned __int8 *)this + 52);
        if (v3 <= 1)
          LOBYTE(v3) = 1;
        *((_BYTE *)this + 52) = v3 + 1;
      }
    }
  }
  if (*((_BYTE *)this + 56) == 2)
  {
    v4 = *((_QWORD *)this - 4);
    v5 = *(_QWORD *)(v4 + 16);
    __dmb(0xBu);
    if (!v5)
    {
      v6 = (__int128 **)*((_QWORD *)this + 1);
      *(_QWORD *)(v4 + 24) = *v6;
      v7 = v4 + 24;
      *(_QWORD *)(v7 + 8) = v6[1];
      *(_QWORD *)(v7 + 16) = v6[2];
      v8 = *v6;
      v9 = *v8;
      v10 = v8[1];
      *(_OWORD *)(v7 + 56) = v8[2];
      *(_OWORD *)(v7 + 40) = v10;
      *(_OWORD *)(v7 + 24) = v9;
      *((_QWORD *)this + 1) = v7;
      *(_BYTE *)(v7 - 15) = 1;
    }
  }
  v11 = (__int128 *)((char *)this + 16);
  v12 = *((_QWORD *)this + 4);
  v13 = *((_QWORD *)this + 2) - *((_QWORD *)this + 3);
  if (v12 < v13)
  {
    v14 = *((_QWORD *)this + 5);
    if (v14 > 1)
      goto LABEL_15;
    if (v14 && *((_BYTE *)this + 52))
    {
      --*((_BYTE *)this + 52);
      *((_QWORD *)this + 5) = 0;
LABEL_15:
      while (1)
      {
        v15 = tbb::internal::allocate_continuation_proxy::allocate(this, 0x60uLL);
        *((_QWORD *)this - 4) = v15;
        *(_QWORD *)(v15 - 24) = 2;
        v16 = tbb::internal::allocate_child_proxy::allocate((tbb::internal::allocate_child_proxy *)v15, 0x40uLL);
        v17 = *((_BYTE *)this + 56);
        *(_BYTE *)(v15 - 11) = 1;
        *(_QWORD *)v15 = &unk_24C520F68;
        __dmb(0xBu);
        *(_BYTE *)(v15 + 8) = 0;
        *(_QWORD *)v15 = &off_24C53CAE8;
        *(_BYTE *)(v15 + 9) = 0;
        *(_BYTE *)(v15 + 10) = v17;
        *(_QWORD *)(v15 + 16) = 0;
        *(_BYTE *)(v16 - 11) = 1;
        *(_QWORD *)v16 = &off_24C53CAA0;
        *(_QWORD *)(v16 + 8) = *((_QWORD *)this + 1);
        *(_QWORD *)(v16 + 16) = *((_QWORD *)this + 2);
        v18 = *((_QWORD *)this + 3) + ((*((_QWORD *)this + 2) - *((_QWORD *)this + 3)) >> 1);
        *((_QWORD *)this + 2) = v18;
        *(_QWORD *)(v16 + 24) = v18;
        *(_QWORD *)(v16 + 32) = *((_QWORD *)this + 4);
        v19 = *((_QWORD *)this + 5) >> 1;
        *((_QWORD *)this + 5) = v19;
        *(_QWORD *)(v16 + 40) = v19;
        *(_DWORD *)(v16 + 48) = 2;
        *(_BYTE *)(v16 + 52) = *((_BYTE *)this + 52);
        *(_BYTE *)(v16 + 56) = 2;
        *((_BYTE *)this + 56) = 1;
        (***(void (****)(_QWORD, unint64_t, uint64_t))(v16 - 40))(*(_QWORD *)(v16 - 40), v16, v16 - 8);
        v12 = *((_QWORD *)this + 4);
        v13 = *((_QWORD *)this + 2) - *((_QWORD *)this + 3);
        if (v12 >= v13)
          break;
        v20 = *((_QWORD *)this + 5);
        if (v20 <= 1)
        {
          if (!v20 || !*((_BYTE *)this + 52))
            break;
          --*((_BYTE *)this + 52);
          *((_QWORD *)this + 5) = 0;
        }
      }
    }
  }
  if (v12 < v13 && *((_BYTE *)this + 52))
  {
    *(_DWORD *)v36 = 0x10000;
    v37 = *v11;
    v38 = *((_QWORD *)this + 4);
    while (1)
    {
      sub_20C15C670(v36, *((unsigned __int8 *)this + 52));
      v21 = *(_BYTE *)(*((_QWORD *)this - 4) + 8);
      __dmb(0xBu);
      if ((v21 & 1) != 0)
      {
        v23 = *((_BYTE *)this + 52) + 1;
        *((_BYTE *)this + 52) = v23;
        v24 = v36[2];
        if (v36[2] >= 2u)
        {
          v25 = v36[1];
          v26 = v36[v36[1] + 3];
          v27 = tbb::internal::allocate_continuation_proxy::allocate(this, 0x60uLL);
          *((_QWORD *)this - 4) = v27;
          *(_QWORD *)(v27 - 24) = 2;
          v28 = tbb::internal::allocate_child_proxy::allocate((tbb::internal::allocate_child_proxy *)v27, 0x40uLL);
          v29 = (char *)&v37 + 24 * v25;
          v30 = *((_BYTE *)this + 56);
          *(_BYTE *)(v27 - 11) = 1;
          *(_QWORD *)v27 = &unk_24C520F68;
          __dmb(0xBu);
          *(_BYTE *)(v27 + 8) = 0;
          *(_QWORD *)v27 = &off_24C53CAE8;
          *(_BYTE *)(v27 + 9) = 0;
          *(_BYTE *)(v27 + 10) = v30;
          *(_QWORD *)(v27 + 16) = 0;
          *(_BYTE *)(v28 - 11) = 1;
          *(_QWORD *)v28 = &off_24C53CAA0;
          *(_QWORD *)(v28 + 8) = *((_QWORD *)this + 1);
          v31 = *(_OWORD *)v29;
          *(_QWORD *)(v28 + 32) = *((_QWORD *)v29 + 2);
          *(_OWORD *)(v28 + 16) = v31;
          v32 = *((_QWORD *)this + 5) >> 1;
          *((_QWORD *)this + 5) = v32;
          *(_QWORD *)(v28 + 40) = v32;
          *(_DWORD *)(v28 + 48) = 2;
          LOBYTE(v32) = *((_BYTE *)this + 52);
          *(_BYTE *)(v28 + 56) = 2;
          *(_BYTE *)(v28 + 52) = v32 - v26;
          *((_BYTE *)this + 56) = 1;
          (***(void (****)(_QWORD, unint64_t, uint64_t))(v28 - 40))(*(_QWORD *)(v28 - 40), v28, v28 - 8);
          v24 = --v36[2];
          v36[1] = (v36[1] + 1) & 7;
          goto LABEL_30;
        }
        v22 = v36[0];
        if (v36[v36[0] + 3] < v23
          && *((_QWORD *)&v37 + 3 * v36[0] + 2) < *((_QWORD *)&v37 + 3 * v36[0]) - *((_QWORD *)&v37 + 3 * v36[0] + 1))
        {
          goto LABEL_30;
        }
      }
      else
      {
        v22 = v36[0];
      }
      sub_20C574EE0((uint64_t)this, (_QWORD *)&v37 + 3 * v22);
      v24 = --v36[2];
      v36[0] = (v36[0] - 1) & 7;
LABEL_30:
      if (!v24 || tbb::task_group_context::is_group_execution_cancelled(*((tbb::task_group_context **)this - 7)))
        goto LABEL_34;
    }
  }
  sub_20C574EE0((uint64_t)this, (_QWORD *)this + 2);
LABEL_34:
  if (*((_BYTE *)this + 56) == 1)
  {
    v33 = *((_QWORD *)this - 4);
    v34 = *((_QWORD *)this + 1);
    __dmb(0xBu);
    *(_QWORD *)(v33 + 16) = v34;
  }
  return 0;
}

_QWORD *sub_20C574E54(_QWORD *result)
{
  *result = &off_24C53CAE8;
  return result;
}

uint64_t sub_20C574E68(uint64_t a1)
{
  uint64_t v1;
  float64x2_t v2;
  float64x2_t v3;
  int8x16_t v4;
  int8x16_t v5;
  uint64_t v6;
  uint64_t v7;

  if (*(_BYTE *)(a1 + 9))
  {
    v1 = *(_QWORD *)(a1 + 16);
    v2.f64[0] = *(float64_t *)(a1 + 64);
    v2.f64[1] = *(float64_t *)(v1 + 48);
    v3.f64[0] = *(float64_t *)(v1 + 40);
    v3.f64[1] = *(float64_t *)(a1 + 72);
    v4 = vbslq_s8((int8x16_t)vcgtq_f64(v3, v2), *(int8x16_t *)(a1 + 64), *(int8x16_t *)(v1 + 40));
    v5 = vbslq_s8((int8x16_t)vcgtq_f64(*(float64x2_t *)(a1 + 80), *(float64x2_t *)(v1 + 56)), *(int8x16_t *)(a1 + 80), *(int8x16_t *)(v1 + 56));
    *(int8x16_t *)(v1 + 24) = vbslq_s8((int8x16_t)vcgtq_f64(*(float64x2_t *)(v1 + 24), *(float64x2_t *)(a1 + 48)), *(int8x16_t *)(a1 + 48), *(int8x16_t *)(v1 + 24));
    *(int8x16_t *)(v1 + 40) = v4;
    *(int8x16_t *)(v1 + 56) = v5;
  }
  if (*(_BYTE *)(a1 + 10) == 1)
  {
    v6 = *(_QWORD *)(a1 - 32);
    v7 = *(_QWORD *)(a1 + 16);
    __dmb(0xBu);
    *(_QWORD *)(v6 + 16) = v7;
  }
  return 0;
}

uint64_t sub_20C574EE0(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  float64x2_t v4;
  int8x16_t v5;
  float64x2_t v6;
  uint64_t v7;
  float *v8;
  float64x2_t v9;
  float64x2_t v10;
  float64x2_t v11;
  float64x2_t v12;
  int8x16_t v13;

  v2 = *(_QWORD *)(result + 8);
  v3 = a2[1];
  v4 = *(float64x2_t *)(v2 + 24);
  v5 = *(int8x16_t *)(v2 + 40);
  v6 = *(float64x2_t *)(v2 + 56);
  v7 = *a2 - v3;
  if (*a2 != v3)
  {
    v8 = (float *)(*(_QWORD *)(***(_QWORD ***)(v2 + 8) + 32) + 12 * v3 + 8);
    do
    {
      v9 = vcvtq_f64_f32(*(float32x2_t *)(v8 - 2));
      v10 = (float64x2_t)vextq_s8((int8x16_t)v9, (int8x16_t)v9, 8uLL);
      v11.f64[1] = v10.f64[1];
      *(_QWORD *)&v12.f64[1] = v5.i64[1];
      *(_QWORD *)&v11.f64[0] = v5.i64[0];
      v12.f64[0] = *v8;
      v4 = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v4, v9), (int8x16_t)v9, (int8x16_t)v4);
      v13.i64[1] = *(_QWORD *)&v10.f64[1];
      *(double *)v13.i64 = v12.f64[0];
      v5 = vbslq_s8((int8x16_t)vcgtq_f64(v11, v12), v13, v5);
      v10.f64[1] = v12.f64[0];
      v6 = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v10, v6), (int8x16_t)v10, (int8x16_t)v6);
      v8 += 3;
      --v7;
    }
    while (v7);
  }
  *(float64x2_t *)(v2 + 24) = v4;
  *(int8x16_t *)(v2 + 40) = v5;
  *(float64x2_t *)(v2 + 56) = v6;
  return result;
}

uint64_t sub_20C574F84(tbb::internal::allocate_continuation_proxy *this)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  __int128 **v6;
  uint64_t v7;
  __int128 *v8;
  __int128 v9;
  __int128 v10;
  __int128 *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  unsigned int v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned int v25;
  unsigned __int8 v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v36[16];
  __int128 v37;
  uint64_t v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  if (!*((_QWORD *)this + 5))
  {
    *((_QWORD *)this + 5) = 1;
    if (*((char *)this - 11) < 0)
    {
      v2 = *((_QWORD *)this - 4);
      if (*(int *)(v2 - 24) >= 2)
      {
        __dmb(0xBu);
        *(_BYTE *)(v2 + 8) = 1;
        v3 = *((unsigned __int8 *)this + 52);
        if (v3 <= 1)
          LOBYTE(v3) = 1;
        *((_BYTE *)this + 52) = v3 + 1;
      }
    }
  }
  if (*((_BYTE *)this + 56) == 2)
  {
    v4 = *((_QWORD *)this - 4);
    v5 = *(_QWORD *)(v4 + 16);
    __dmb(0xBu);
    if (!v5)
    {
      v6 = (__int128 **)*((_QWORD *)this + 1);
      *(_QWORD *)(v4 + 24) = *v6;
      v7 = v4 + 24;
      *(_QWORD *)(v7 + 8) = v6[1];
      *(_QWORD *)(v7 + 16) = v6[2];
      v8 = *v6;
      v9 = *v8;
      v10 = v8[1];
      *(_OWORD *)(v7 + 56) = v8[2];
      *(_OWORD *)(v7 + 40) = v10;
      *(_OWORD *)(v7 + 24) = v9;
      *((_QWORD *)this + 1) = v7;
      *(_BYTE *)(v7 - 15) = 1;
    }
  }
  v11 = (__int128 *)((char *)this + 16);
  v12 = *((_QWORD *)this + 4);
  v13 = *((_QWORD *)this + 2) - *((_QWORD *)this + 3);
  if (v12 < v13)
  {
    v14 = *((_QWORD *)this + 5);
    if (v14 > 1)
      goto LABEL_15;
    if (v14 && *((_BYTE *)this + 52))
    {
      --*((_BYTE *)this + 52);
      *((_QWORD *)this + 5) = 0;
LABEL_15:
      while (1)
      {
        v15 = tbb::internal::allocate_continuation_proxy::allocate(this, 0x60uLL);
        *((_QWORD *)this - 4) = v15;
        *(_QWORD *)(v15 - 24) = 2;
        v16 = tbb::internal::allocate_child_proxy::allocate((tbb::internal::allocate_child_proxy *)v15, 0x40uLL);
        v17 = *((_BYTE *)this + 56);
        *(_BYTE *)(v15 - 11) = 1;
        *(_QWORD *)v15 = &unk_24C520F68;
        __dmb(0xBu);
        *(_BYTE *)(v15 + 8) = 0;
        *(_QWORD *)v15 = &off_24C53CB78;
        *(_BYTE *)(v15 + 9) = 0;
        *(_BYTE *)(v15 + 10) = v17;
        *(_QWORD *)(v15 + 16) = 0;
        *(_BYTE *)(v16 - 11) = 1;
        *(_QWORD *)v16 = &off_24C53CB30;
        *(_QWORD *)(v16 + 8) = *((_QWORD *)this + 1);
        *(_QWORD *)(v16 + 16) = *((_QWORD *)this + 2);
        v18 = *((_QWORD *)this + 3) + ((*((_QWORD *)this + 2) - *((_QWORD *)this + 3)) >> 1);
        *((_QWORD *)this + 2) = v18;
        *(_QWORD *)(v16 + 24) = v18;
        *(_QWORD *)(v16 + 32) = *((_QWORD *)this + 4);
        v19 = *((_QWORD *)this + 5) >> 1;
        *((_QWORD *)this + 5) = v19;
        *(_QWORD *)(v16 + 40) = v19;
        *(_DWORD *)(v16 + 48) = 2;
        *(_BYTE *)(v16 + 52) = *((_BYTE *)this + 52);
        *(_BYTE *)(v16 + 56) = 2;
        *((_BYTE *)this + 56) = 1;
        (***(void (****)(_QWORD, unint64_t, uint64_t))(v16 - 40))(*(_QWORD *)(v16 - 40), v16, v16 - 8);
        v12 = *((_QWORD *)this + 4);
        v13 = *((_QWORD *)this + 2) - *((_QWORD *)this + 3);
        if (v12 >= v13)
          break;
        v20 = *((_QWORD *)this + 5);
        if (v20 <= 1)
        {
          if (!v20 || !*((_BYTE *)this + 52))
            break;
          --*((_BYTE *)this + 52);
          *((_QWORD *)this + 5) = 0;
        }
      }
    }
  }
  if (v12 < v13 && *((_BYTE *)this + 52))
  {
    *(_DWORD *)v36 = 0x10000;
    v37 = *v11;
    v38 = *((_QWORD *)this + 4);
    while (1)
    {
      sub_20C15C670(v36, *((unsigned __int8 *)this + 52));
      v21 = *(_BYTE *)(*((_QWORD *)this - 4) + 8);
      __dmb(0xBu);
      if ((v21 & 1) == 0)
        break;
      v24 = *((_BYTE *)this + 52) + 1;
      *((_BYTE *)this + 52) = v24;
      v23 = v36[2];
      if (v36[2] < 2u)
      {
        v22 = v36[0];
        if (v36[v36[0] + 3] < v24
          && *((_QWORD *)&v37 + 3 * v36[0] + 2) < *((_QWORD *)&v37 + 3 * v36[0]) - *((_QWORD *)&v37 + 3 * v36[0] + 1))
        {
          goto LABEL_30;
        }
        goto LABEL_25;
      }
      v25 = v36[1];
      v26 = v36[v36[1] + 3];
      v27 = tbb::internal::allocate_continuation_proxy::allocate(this, 0x60uLL);
      *((_QWORD *)this - 4) = v27;
      *(_QWORD *)(v27 - 24) = 2;
      v28 = tbb::internal::allocate_child_proxy::allocate((tbb::internal::allocate_child_proxy *)v27, 0x40uLL);
      v29 = (char *)&v37 + 24 * v25;
      v30 = *((_BYTE *)this + 56);
      *(_BYTE *)(v27 - 11) = 1;
      *(_QWORD *)v27 = &unk_24C520F68;
      __dmb(0xBu);
      *(_BYTE *)(v27 + 8) = 0;
      *(_QWORD *)v27 = &off_24C53CB78;
      *(_BYTE *)(v27 + 9) = 0;
      *(_BYTE *)(v27 + 10) = v30;
      *(_QWORD *)(v27 + 16) = 0;
      *(_BYTE *)(v28 - 11) = 1;
      *(_QWORD *)v28 = &off_24C53CB30;
      *(_QWORD *)(v28 + 8) = *((_QWORD *)this + 1);
      v31 = *(_OWORD *)v29;
      *(_QWORD *)(v28 + 32) = *((_QWORD *)v29 + 2);
      *(_OWORD *)(v28 + 16) = v31;
      v32 = *((_QWORD *)this + 5) >> 1;
      *((_QWORD *)this + 5) = v32;
      *(_QWORD *)(v28 + 40) = v32;
      *(_DWORD *)(v28 + 48) = 2;
      LOBYTE(v32) = *((_BYTE *)this + 52);
      *(_BYTE *)(v28 + 56) = 2;
      *(_BYTE *)(v28 + 52) = v32 - v26;
      *((_BYTE *)this + 56) = 1;
      (***(void (****)(_QWORD, unint64_t, uint64_t))(v28 - 40))(*(_QWORD *)(v28 - 40), v28, v28 - 8);
      v23 = --v36[2];
      v36[1] = (v36[1] + 1) & 7;
LABEL_30:
      if (!v23 || tbb::task_group_context::is_group_execution_cancelled(*((tbb::task_group_context **)this - 7)))
        goto LABEL_34;
    }
    v22 = v36[0];
LABEL_25:
    sub_20C575480((uint64_t)this, (_QWORD *)&v37 + 3 * v22);
    v23 = --v36[2];
    v36[0] = (v36[0] - 1) & 7;
    goto LABEL_30;
  }
  sub_20C575480((uint64_t)this, (_QWORD *)this + 2);
LABEL_34:
  if (*((_BYTE *)this + 56) == 1)
  {
    v33 = *((_QWORD *)this - 4);
    v34 = *((_QWORD *)this + 1);
    __dmb(0xBu);
    *(_QWORD *)(v33 + 16) = v34;
  }
  return 0;
}

_QWORD *sub_20C5753F4(_QWORD *result)
{
  *result = &off_24C53CB78;
  return result;
}

uint64_t sub_20C575408(uint64_t a1)
{
  uint64_t v1;
  float64x2_t v2;
  float64x2_t v3;
  int8x16_t v4;
  int8x16_t v5;
  uint64_t v6;
  uint64_t v7;

  if (*(_BYTE *)(a1 + 9))
  {
    v1 = *(_QWORD *)(a1 + 16);
    v2.f64[0] = *(float64_t *)(a1 + 64);
    v2.f64[1] = *(float64_t *)(v1 + 48);
    v3.f64[0] = *(float64_t *)(v1 + 40);
    v3.f64[1] = *(float64_t *)(a1 + 72);
    v4 = vbslq_s8((int8x16_t)vcgtq_f64(v3, v2), *(int8x16_t *)(a1 + 64), *(int8x16_t *)(v1 + 40));
    v5 = vbslq_s8((int8x16_t)vcgtq_f64(*(float64x2_t *)(a1 + 80), *(float64x2_t *)(v1 + 56)), *(int8x16_t *)(a1 + 80), *(int8x16_t *)(v1 + 56));
    *(int8x16_t *)(v1 + 24) = vbslq_s8((int8x16_t)vcgtq_f64(*(float64x2_t *)(v1 + 24), *(float64x2_t *)(a1 + 48)), *(int8x16_t *)(a1 + 48), *(int8x16_t *)(v1 + 24));
    *(int8x16_t *)(v1 + 40) = v4;
    *(int8x16_t *)(v1 + 56) = v5;
  }
  if (*(_BYTE *)(a1 + 10) == 1)
  {
    v6 = *(_QWORD *)(a1 - 32);
    v7 = *(_QWORD *)(a1 + 16);
    __dmb(0xBu);
    *(_QWORD *)(v6 + 16) = v7;
  }
  return 0;
}

void sub_20C575480(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  float64x2_t **v11;
  uint64_t v12;
  double v13;
  float v14;
  double v15;
  float v16;
  double v17;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = a2[1];
  v5 = *(double *)(v2 + 24);
  v4 = *(double *)(v2 + 32);
  v7 = *(double *)(v2 + 40);
  v6 = *(double *)(v2 + 48);
  v9 = *(double *)(v2 + 56);
  v8 = *(double *)(v2 + 64);
  v10 = *a2 - v3;
  if (*a2 != v3)
  {
    v11 = **(float64x2_t ****)(v2 + 8);
    v12 = 12 * v3;
    do
    {
      v13 = sub_20C575548(v11[1], (float *)(*(_QWORD *)&(*v11)[2].f64[0] + v12)).f32[0];
      v15 = v14;
      v17 = v16;
      if (v5 > v13)
        v5 = v13;
      if (v4 > v15)
        v4 = v15;
      if (v7 > v17)
        v7 = v17;
      if (v6 < v13)
        v6 = v13;
      if (v9 < v15)
        v9 = v15;
      if (v8 < v17)
        v8 = v17;
      v12 += 12;
      --v10;
    }
    while (v10);
  }
  *(double *)(v2 + 24) = v5;
  *(double *)(v2 + 32) = v4;
  *(double *)(v2 + 40) = v7;
  *(double *)(v2 + 48) = v6;
  *(double *)(v2 + 56) = v9;
  *(double *)(v2 + 64) = v8;
}

float32x2_t sub_20C575548(float64x2_t *a1, float *a2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[2];
  v5 = a1[7].f64[1] + a1[1].f64[1] * v2 + a1[3].f64[1] * v3 + a1[5].f64[1] * v4;
  if (v5 == 0.0)
    v6 = 1.0;
  else
    v6 = 1.0 / v5;
  return vcvt_f32_f64(vmulq_n_f64(vaddq_f64(a1[6], vaddq_f64(vaddq_f64(vmulq_n_f64(*a1, v2), vmulq_n_f64(a1[2], v3)), vmulq_n_f64(a1[4], v4))), v6));
}

void sub_20C5755EC(void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    sub_20C57562C((uint64_t)v2, (uint64_t)*v2);
    operator delete(**a1);
  }
}

void sub_20C57562C(uint64_t a1, uint64_t a2)
{
  uint64_t i;

  for (i = *(_QWORD *)(a1 + 8); i != a2; sub_20BF5618C(i))
    i -= 40;
  *(_QWORD *)(a1 + 8) = a2;
}

void sub_20C575678()
{
  sub_20BEB9194("vector");
}

void sub_20C57568C(uint64_t *a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  size_t v13;
  size_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = a1[2];
  v4 = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(_QWORD *)(v4 - 8);
  if (0xCCCCCCCCCCCCCCCDLL * ((v6 - v7) >> 3) >= a2)
  {
    if (a2)
    {
      v13 = 40 * ((40 * a2 - 40) / 0x28) + 40;
      bzero(*(void **)(v4 - 8), v13);
      v7 += v13;
    }
    a1[1] = v7;
  }
  else
  {
    v8 = 0xCCCCCCCCCCCCCCCDLL * ((v7 - *a1) >> 3);
    v9 = v8 + a2;
    if (v8 + a2 > 0x666666666666666)
      sub_20BDDF694();
    v10 = 0xCCCCCCCCCCCCCCCDLL * ((v5 - *a1) >> 3);
    if (2 * v10 > v9)
      v9 = 2 * v10;
    if (v10 >= 0x333333333333333)
      v11 = 0x666666666666666;
    else
      v11 = v9;
    v19 = v4;
    if (v11)
      v12 = (char *)sub_20BED4724(v4, v11);
    else
      v12 = 0;
    v15 = v12;
    v16 = &v12[40 * v8];
    v18 = &v12[40 * v11];
    v14 = 40 * ((40 * a2 - 40) / 0x28) + 40;
    bzero(v16, v14);
    v17 = &v16[v14];
    sub_20C5757F0(a1, &v15);
    sub_20C575A1C((uint64_t)&v15);
  }
}

void sub_20C5757DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C575A1C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C5757F0(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_20C575864((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_20C575864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v14[3];
  char v15;
  __int128 v16;
  __int128 v17;

  v7 = a7;
  *(_QWORD *)&v17 = a6;
  *((_QWORD *)&v17 + 1) = a7;
  v16 = v17;
  v14[0] = a1;
  v14[1] = &v16;
  v14[2] = &v17;
  if (a3 == a5)
  {
    v12 = a6;
  }
  else
  {
    do
    {
      v8 = *(_OWORD *)(a3 - 40);
      *(_OWORD *)(v7 - 24) = *(_OWORD *)(a3 - 24);
      *(_OWORD *)(v7 - 40) = v8;
      v9 = *(_QWORD *)(a3 - 8);
      *(_QWORD *)(v7 - 8) = v9;
      if (v9)
      {
        v10 = (unint64_t *)(v9 - 16);
        if (*(_QWORD *)(v7 - 16))
          v10 = *(unint64_t **)(v7 - 16);
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        v7 = *((_QWORD *)&v17 + 1);
      }
      a3 -= 40;
      v7 -= 40;
      *((_QWORD *)&v17 + 1) = v7;
    }
    while (a3 != a5);
    v12 = v17;
  }
  v15 = 1;
  sub_20C575924((uint64_t)v14);
  return v12;
}

uint64_t sub_20C575924(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_20C575958((uint64_t *)a1);
  return a1;
}

uint64_t sub_20C575958(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[8];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[8];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v1 = (uint64_t *)a1[2];
  v3 = *v1;
  v2 = v1[1];
  v15 = v3;
  v16 = v2;
  v17 = v3;
  v18 = v2;
  v4 = *a1;
  v5 = (uint64_t *)a1[1];
  v7 = *v5;
  v6 = v5[1];
  v10 = v7;
  v11 = v6;
  v12 = v7;
  v13 = v6;
  return sub_20C5759CC(v4, (uint64_t)v14, (uint64_t)v9);
}

uint64_t sub_20C5759CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  for (result = *(_QWORD *)(a2 + 32); result != *(_QWORD *)(a3 + 32); *(_QWORD *)(a2 + 32) = result)
  {
    sub_20BF5618C(result);
    result = *(_QWORD *)(a2 + 32) + 40;
  }
  return result;
}

uint64_t sub_20C575A1C(uint64_t a1)
{
  sub_20C575A50(a1, *(_QWORD *)(a1 + 8));
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void sub_20C575A50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  while (1)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 == a2)
      break;
    *(_QWORD *)(a1 + 16) = v4 - 40;
    sub_20BF5618C(v4 - 40);
  }
}

void sub_20C575A90(uint64_t *a1, __int128 *a2, __int128 *a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __int128 *v13;
  uint64_t v14;

  v8 = (uint64_t)(a1 + 2);
  v9 = *a1;
  if (0xCCCCCCCCCCCCCCCDLL * ((a1[2] - *a1) >> 3) < a4)
  {
    sub_20C575BE8(a1);
    if (a4 > 0x666666666666666)
      sub_20BDDF694();
    v10 = 0x999999999999999ALL * ((a1[2] - *a1) >> 3);
    if (v10 <= a4)
      v10 = a4;
    if (0xCCCCCCCCCCCCCCCDLL * ((a1[2] - *a1) >> 3) >= 0x333333333333333)
      v11 = 0x666666666666666;
    else
      v11 = v10;
    sub_20BED4B34(a1, v11);
    v12 = sub_20C575C20(v8, (uint64_t)a2, (uint64_t)a3, a1[1]);
    goto LABEL_11;
  }
  if (0xCCCCCCCCCCCCCCCDLL * ((a1[1] - v9) >> 3) < a4)
  {
    v13 = (__int128 *)((char *)a2 + 8 * ((a1[1] - v9) >> 3));
    sub_20C575D34(a2, v13, v9);
    v12 = sub_20C575C20(v8, (uint64_t)v13, (uint64_t)a3, a1[1]);
LABEL_11:
    a1[1] = v12;
    return;
  }
  sub_20C575D34(a2, a3, v9);
  sub_20C57562C((uint64_t)a1, v14);
}

void sub_20C575BD8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_20C575BE0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_20C575BE8(uint64_t *a1)
{
  if (*a1)
  {
    sub_20C57562C((uint64_t)a1, *a1);
    operator delete((void *)*a1);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

uint64_t sub_20C575C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD v10[3];
  char v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a4;
  v13 = a4;
  v12 = a4;
  v10[0] = a1;
  v10[1] = &v12;
  v10[2] = &v13;
  while (a2 != a3)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)v4 = *(_OWORD *)a2;
    *(_OWORD *)(v4 + 16) = v5;
    v6 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(v4 + 32) = v6;
    if (v6)
    {
      v7 = (unint64_t *)(v6 - 16);
      if (*(_QWORD *)(v4 + 24))
        v7 = *(unint64_t **)(v4 + 24);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 1, v7));
      v4 = v13;
    }
    a2 += 40;
    v4 += 40;
    v13 = v4;
  }
  v11 = 1;
  sub_20C575CC0((uint64_t)v10);
  return v4;
}

uint64_t sub_20C575CC0(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_20C575CF4(a1);
  return a1;
}

void sub_20C575CF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = **(_QWORD **)(a1 + 16);
  v2 = **(_QWORD **)(a1 + 8);
  while (v1 != v2)
  {
    v1 -= 40;
    sub_20BF5618C(v1);
  }
}

__int128 *sub_20C575D34(__int128 *a1, __int128 *a2, uint64_t a3)
{
  __int128 *v4;

  v4 = a1;
  if (a1 != a2)
  {
    do
    {
      sub_20C284DC8(a3, v4);
      v4 = (__int128 *)((char *)v4 + 40);
      a3 += 40;
    }
    while (v4 != a2);
    return a2;
  }
  return v4;
}

uint64_t sub_20C575D98(tbb::internal::allocate_continuation_proxy *this, uint64_t a2, char *a3)
{
  uint64_t v4;
  unsigned int v5;
  __int128 *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _BYTE *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  char v16;
  unsigned int v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned int v20;
  unsigned __int8 v21;
  _BYTE *v22;
  unint64_t v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  unsigned __int8 v28[16];
  __int128 v29;
  uint64_t v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  if (!*((_QWORD *)this + 5))
  {
    *((_QWORD *)this + 5) = 1;
    if (*((char *)this - 11) < 0)
    {
      v4 = *((_QWORD *)this - 4);
      if (*(int *)(v4 - 24) >= 2)
      {
        __dmb(0xBu);
        *(_BYTE *)(v4 + 8) = 1;
        v5 = *((unsigned __int8 *)this + 52);
        if (v5 <= 1)
          LOBYTE(v5) = 1;
        *((_BYTE *)this + 52) = v5 + 1;
      }
    }
  }
  v6 = (__int128 *)((char *)this + 8);
  v7 = *((_QWORD *)this + 3);
  v8 = *((_QWORD *)this + 1) - *((_QWORD *)this + 2);
  if (v7 < v8)
  {
    v9 = *((_QWORD *)this + 5);
    if (v9 > 1)
      goto LABEL_12;
    if (v9 && *((_BYTE *)this + 52))
    {
      --*((_BYTE *)this + 52);
      *((_QWORD *)this + 5) = 0;
LABEL_12:
      while (1)
      {
        v10 = (_BYTE *)tbb::internal::allocate_continuation_proxy::allocate(this, 0x10uLL);
        *(v10 - 11) = 1;
        *(_QWORD *)v10 = &unk_24C520F68;
        __dmb(0xBu);
        v10[8] = 0;
        *((_QWORD *)this - 4) = v10;
        *((_QWORD *)v10 - 3) = 2;
        v11 = tbb::internal::allocate_child_proxy::allocate((tbb::internal::allocate_child_proxy *)v10, 0x38uLL);
        *(_BYTE *)(v11 - 11) = 1;
        *(_QWORD *)v11 = &off_24C53CBC0;
        *(_QWORD *)(v11 + 8) = *((_QWORD *)this + 1);
        v12 = *((_QWORD *)this + 2) + ((*((_QWORD *)this + 1) - *((_QWORD *)this + 2)) >> 1);
        *((_QWORD *)this + 1) = v12;
        *(_QWORD *)(v11 + 16) = v12;
        *(_OWORD *)(v11 + 24) = *(_OWORD *)((char *)this + 24);
        v13 = *((_QWORD *)this + 5) >> 1;
        *((_QWORD *)this + 5) = v13;
        *(_QWORD *)(v11 + 40) = v13;
        *(_DWORD *)(v11 + 48) = 2;
        *(_BYTE *)(v11 + 52) = *((_BYTE *)this + 52);
        (***(void (****)(_QWORD, unint64_t, uint64_t))(v11 - 40))(*(_QWORD *)(v11 - 40), v11, v11 - 8);
        v7 = *((_QWORD *)this + 3);
        v8 = *((_QWORD *)this + 1) - *((_QWORD *)this + 2);
        if (v7 >= v8)
          break;
        v14 = *((_QWORD *)this + 5);
        if (v14 <= 1)
        {
          if (!v14 || !*((_BYTE *)this + 52))
            break;
          --*((_BYTE *)this + 52);
          *((_QWORD *)this + 5) = 0;
        }
      }
    }
  }
  if (v7 < v8 && *((_BYTE *)this + 52))
  {
    *(_DWORD *)v28 = 0x10000;
    v29 = *v6;
    v30 = *((_QWORD *)this + 3);
    while (1)
    {
      sub_20C15C670(v28, *((unsigned __int8 *)this + 52));
      v16 = *(_BYTE *)(*((_QWORD *)this - 4) + 8);
      __dmb(0xBu);
      if ((v16 & 1) == 0)
        break;
      v19 = *((_BYTE *)this + 52) + 1;
      *((_BYTE *)this + 52) = v19;
      v18 = v28[2];
      if (v28[2] < 2u)
      {
        v17 = v28[0];
        if (v28[v28[0] + 3] < v19
          && *((_QWORD *)&v29 + 3 * v28[0] + 2) < *((_QWORD *)&v29 + 3 * v28[0]) - *((_QWORD *)&v29 + 3 * v28[0] + 1))
        {
          goto LABEL_27;
        }
        goto LABEL_22;
      }
      v20 = v28[1];
      v21 = v28[v28[1] + 3];
      v22 = (_BYTE *)tbb::internal::allocate_continuation_proxy::allocate(this, 0x10uLL);
      *(v22 - 11) = 1;
      *(_QWORD *)v22 = &unk_24C520F68;
      __dmb(0xBu);
      v22[8] = 0;
      *((_QWORD *)this - 4) = v22;
      *((_QWORD *)v22 - 3) = 2;
      v23 = tbb::internal::allocate_child_proxy::allocate((tbb::internal::allocate_child_proxy *)v22, 0x38uLL);
      v24 = (char *)&v29 + 24 * v20;
      *(_BYTE *)(v23 - 11) = 1;
      *(_QWORD *)v23 = &off_24C53CBC0;
      v25 = *(_OWORD *)v24;
      *(_QWORD *)(v23 + 24) = *((_QWORD *)v24 + 2);
      *(_OWORD *)(v23 + 8) = v25;
      *(_QWORD *)(v23 + 32) = *((_QWORD *)this + 4);
      v26 = *((_QWORD *)this + 5) >> 1;
      *((_QWORD *)this + 5) = v26;
      *(_QWORD *)(v23 + 40) = v26;
      *(_DWORD *)(v23 + 48) = 2;
      *(_BYTE *)(v23 + 52) = *((_BYTE *)this + 52) - v21;
      (***(void (****)(_QWORD, unint64_t, uint64_t))(v23 - 40))(*(_QWORD *)(v23 - 40), v23, v23 - 8);
      v18 = --v28[2];
      v28[1] = (v28[1] + 1) & 7;
LABEL_27:
      if (!v18 || tbb::task_group_context::is_group_execution_cancelled(*((tbb::task_group_context **)this - 7)))
        return 0;
    }
    v17 = v28[0];
LABEL_22:
    sub_20C576138((uint64_t)this, (_QWORD *)&v29 + 3 * v17, v15);
    v18 = --v28[2];
    v28[0] = (v28[0] - 1) & 7;
    goto LABEL_27;
  }
  sub_20C576138((uint64_t)this, (_QWORD *)this + 1, a3);
  return 0;
}

void sub_20C576138(uint64_t a1, _QWORD *a2, char *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  float32x2_t *v8;
  float32x2_t v9;
  float v10;
  float32x2_t *v11;
  float32x2_t v12;
  float v13;
  _QWORD *v14;
  double v15;
  float32x2_t *v16;
  float v17;
  float v18;
  pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *v19;
  float32x2_t *v20;

  v3 = a2[1];
  v4 = *a2 - v3;
  if (*a2 > v3)
  {
    v5 = *(_QWORD *)(a1 + 32);
    v6 = 12 * v3;
    do
    {
      v7 = *(_QWORD **)(v5 + 16);
      v8 = (float32x2_t *)(*(_QWORD *)(*(_QWORD *)(v5 + 8) + 32) + v6);
      v9 = *v8;
      v10 = v8[1].f32[0];
      if (*v7)
      {
        v11 = (float32x2_t *)(v7[4] + v6);
        v12 = *v11;
        v13 = v11[1].f32[0];
        v14 = *(_QWORD **)(v5 + 24);
        v15 = **(double **)v5;
        if (*v14)
        {
          v16 = (float32x2_t *)(v14[4] + v6);
          v17 = v15 * v16[1].f32[0];
          v12 = vadd_f32(v12, vmul_f32(vcvt_f32_f64(vmulq_n_f64(vcvtq_f64_f32(*v16), v15)), (float32x2_t)0x3F0000003F000000));
          v13 = v13 + (float)(v17 * 0.5);
        }
        v18 = v15 * v13;
        v9 = vadd_f32(v9, vcvt_f32_f64(vmulq_n_f64(vcvtq_f64_f32(v12), v15)));
        v10 = v10 + v18;
      }
      v19 = **(pxrInternal__aapl__pxrReserved__::Vt_ArrayBase ***)(v5 + 32);
      sub_20BF5AFC0(v19, (uint64_t)a2, a3);
      v20 = (float32x2_t *)(*((_QWORD *)v19 + 4) + v6);
      *v20 = v9;
      v20[1].f32[0] = v10;
      v6 += 12;
      --v4;
    }
    while (v4);
  }
}

void sub_20C57624C()
{
  void *__p[2];
  char v1;

  sub_20C57E364();
  sub_20BDDC0E4(__p, "PointInstancer");
  sub_20C57E484((char *)__p);
  if (v1 < 0)
    operator delete(__p[0]);
}

void sub_20C576298(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::~UsdGeomPointInstancer(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::~UsdGeomBoundable(this);
  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t (*v6)(uint64_t *);
  char v7;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;

  v6 = sub_20C369024(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v13);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53CC08;
    if ((v16 & 7) != 0)
    {
      v9 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
  }
  else
  {
    v13 = "usdGeom/pointInstancer.cpp";
    v14 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Get";
    v15 = 57;
    v16 = (unint64_t)"static UsdGeomPointInstancer pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::Get(co"
                            "nst UsdStagePtr &, const SdfPath &)";
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v13, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v13) = 1;
    v14 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v15);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v15 + 1);
    v16 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13);
    *(_QWORD *)a3 = off_24C53CC08;
    if ((v16 & 7) != 0)
    {
      v11 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stlxr(v12 - 2, v11));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v15 + 1);
  sub_20BFD265C(&v15);
  if (v14)
    sub_20C35C614(v14);
}

void sub_20C57643C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::Define(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  unsigned __int8 v6;
  uint64_t (*v7)(uint64_t *);
  char v8;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int v13;
  char *v14;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;

  v6 = atomic_load((unsigned __int8 *)&qword_254989C20);
  if ((v6 & 1) == 0 && __cxa_guard_acquire(&qword_254989C20))
  {
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&qword_254989C18, "PointInstancer");
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &qword_254989C18, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989C20);
  }
  v7 = sub_20C369024(a1);
  if (v8 & 1 | (unint64_t)v7)
  {
    v9 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::DefinePrim(v9, a2, &qword_254989C18, (uint64_t)&v14);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v14);
    *(_QWORD *)a3 = off_24C53CC08;
    if ((v17 & 7) != 0)
    {
      v10 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v11 = __ldxr(v10);
      while (__stlxr(v11 - 2, v10));
    }
  }
  else
  {
    v14 = "usdGeom/pointInstancer.cpp";
    v15 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"Define";
    v16 = 70;
    v17 = (unint64_t)"static UsdGeomPointInstancer pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::Define"
                            "(const UsdStagePtr &, const SdfPath &)";
    v18 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v14, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v14) = 1;
    v15 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v16);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v16 + 1);
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v14);
    *(_QWORD *)a3 = off_24C53CC08;
    if ((v17 & 7) != 0)
    {
      v12 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v13 = __ldxr(v12);
      while (__stlxr(v13 - 2, v12));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v16 + 1);
  sub_20BFD265C(&v16);
  if (v15)
    sub_20C35C614(v15);
}

void sub_20C57662C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989C20);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this)
{
  return 3;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this)
{
  unsigned __int8 v1;
  const std::type_info *v3;
  char *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_254989C30);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_254989C30))
  {
    __cxa_guard_release(&qword_254989C30);
  }
  return &qword_254989C28;
}

void sub_20C5766D0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989C30);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *v3;
  const std::type_info *v4;
  char *v5;

  v1 = atomic_load((unsigned __int8 *)&qword_254989C40);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *)__cxa_guard_acquire(&qword_254989C40);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::_GetStaticTfType(v3);
      byte_254989C38 = sub_20C35BD7C((char *)&qword_254989C28, v4, v5);
      __cxa_guard_release(&qword_254989C40);
    }
  }
  return byte_254989C38;
}

void sub_20C57674C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989C40);
  _Unwind_Resume(a1);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::_GetStaticTfType(this);
  return &qword_254989C28;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetProtoIndicesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 872), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C576824(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::CreateProtoIndicesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 872), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 464), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetIdsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 448), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C57697C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::CreateIdsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 448), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 488), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetPositionsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 832), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C576AD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::CreatePositionsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 832), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 664), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetOrientationsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 736), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C576C2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::CreateOrientationsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 736), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 776), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetOrientationsfAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 744), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C576D84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::CreateOrientationsfAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 744), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 784), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetScalesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 984), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C576EDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::CreateScalesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 984), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 616), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetVelocitiesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1216), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C577034(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::CreateVelocitiesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1216), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 688), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetAccelerationsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, v3, a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C57718C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::CreateAccelerationsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, v8, (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 688), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetAngularVelocitiesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 16), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C5772E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::CreateAngularVelocitiesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 16), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 688), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetInvisibleIdsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 504), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C57743C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::CreateInvisibleIdsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *v9;

  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9)
    v9 = sub_20BFE6DD0((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 504), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 488), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetPrototypesRel(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetRelationship((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 880), a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C577594(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::CreatePrototypesRel(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this@<X0>, pxrInternal__aapl__pxrReserved__::UsdRelationship *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  sub_20C35C4F8((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  pxrInternal__aapl__pxrReserved__::UsdPrim::CreateRelationship((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 880), 0, a2);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C577654(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this)
{
  int v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v17;
  uint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v21;
  uint64_t v22;
  unsigned int *v23;
  unsigned int v24;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v25;
  uint64_t v26;
  unsigned int *v27;
  unsigned int v28;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v29;
  uint64_t v30;
  unsigned int *v31;
  unsigned int v32;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v33;
  uint64_t v34;
  unsigned int *v35;
  unsigned int v36;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v37;
  uint64_t v38;
  unsigned int *v39;
  unsigned int v40;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v41;
  uint64_t v42;
  unsigned int *v43;
  unsigned int v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int *v48;
  unsigned int v49;
  uint64_t *SchemaAttributeNames;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v1 = (int)this;
  v61 = *MEMORY[0x24BDAC8D0];
  v2 = atomic_load((unsigned __int8 *)&qword_254989C60);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254989C60))
  {
    v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5)
      v5 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v6 = *((_QWORD *)v5 + 109);
    v51 = v6;
    if ((v6 & 7) != 0)
    {
      v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 2, v7));
      if ((v8 & 1) == 0)
        v51 &= 0xFFFFFFFFFFFFFFF8;
    }
    v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9)
      v9 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v10 = *((_QWORD *)v9 + 56);
    v52 = v10;
    if ((v10 & 7) != 0)
    {
      v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 2, v11));
      if ((v12 & 1) == 0)
        v52 &= 0xFFFFFFFFFFFFFFF8;
    }
    v13 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v13)
      v13 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v14 = *((_QWORD *)v13 + 104);
    v53 = v14;
    if ((v14 & 7) != 0)
    {
      v15 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 2, v15));
      if ((v16 & 1) == 0)
        v53 &= 0xFFFFFFFFFFFFFFF8;
    }
    v17 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v17)
      v17 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v18 = *((_QWORD *)v17 + 92);
    v54 = v18;
    if ((v18 & 7) != 0)
    {
      v19 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 2, v19));
      if ((v20 & 1) == 0)
        v54 &= 0xFFFFFFFFFFFFFFF8;
    }
    v21 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v21)
      v21 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v22 = *((_QWORD *)v21 + 93);
    v55 = v22;
    if ((v22 & 7) != 0)
    {
      v23 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
      do
        v24 = __ldxr(v23);
      while (__stxr(v24 + 2, v23));
      if ((v24 & 1) == 0)
        v55 &= 0xFFFFFFFFFFFFFFF8;
    }
    v25 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v25)
      v25 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v26 = *((_QWORD *)v25 + 123);
    v56 = v26;
    if ((v26 & 7) != 0)
    {
      v27 = (unsigned int *)(v26 & 0xFFFFFFFFFFFFFFF8);
      do
        v28 = __ldxr(v27);
      while (__stxr(v28 + 2, v27));
      if ((v28 & 1) == 0)
        v56 &= 0xFFFFFFFFFFFFFFF8;
    }
    v29 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v29)
      v29 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v30 = *((_QWORD *)v29 + 152);
    v57 = v30;
    if ((v30 & 7) != 0)
    {
      v31 = (unsigned int *)(v30 & 0xFFFFFFFFFFFFFFF8);
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 2, v31));
      if ((v32 & 1) == 0)
        v57 &= 0xFFFFFFFFFFFFFFF8;
    }
    v33 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v33)
      v33 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v34 = *(_QWORD *)v33;
    v58 = v34;
    if ((v34 & 7) != 0)
    {
      v35 = (unsigned int *)(v34 & 0xFFFFFFFFFFFFFFF8);
      do
        v36 = __ldxr(v35);
      while (__stxr(v36 + 2, v35));
      if ((v36 & 1) == 0)
        v58 &= 0xFFFFFFFFFFFFFFF8;
    }
    v37 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v37)
      v37 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v38 = *((_QWORD *)v37 + 2);
    v59 = v38;
    if ((v38 & 7) != 0)
    {
      v39 = (unsigned int *)(v38 & 0xFFFFFFFFFFFFFFF8);
      do
        v40 = __ldxr(v39);
      while (__stxr(v40 + 2, v39));
      if ((v40 & 1) == 0)
        v59 &= 0xFFFFFFFFFFFFFFF8;
    }
    v41 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v41)
      v41 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    v42 = *((_QWORD *)v41 + 63);
    v60 = v42;
    if ((v42 & 7) != 0)
    {
      v43 = (unsigned int *)(v42 & 0xFFFFFFFFFFFFFFF8);
      do
        v44 = __ldxr(v43);
      while (__stxr(v44 + 2, v43));
      if ((v44 & 1) == 0)
        v60 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_20C374970(&qword_254989C48, &v51, 0xAuLL);
    v45 = &v61;
    do
    {
      v47 = *--v45;
      v46 = v47;
      if ((v47 & 7) != 0)
      {
        v48 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
        do
          v49 = __ldxr(v48);
        while (__stlxr(v49 - 2, v48));
      }
    }
    while (v45 != &v51);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_254989C48, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989C60);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254989C80);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254989C80))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *)1);
    sub_20C577B9C((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_20C1984B4, &qword_254989C68, &dword_20BDBC000);
    __cxa_guard_release(&qword_254989C80);
  }
  if (v1)
    return &qword_254989C68;
  else
    return &qword_254989C48;
}

void sub_20C577B0C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254989C60);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C577B9C(uint64_t **a1)
{
  qword_254989C70 = 0;
  unk_254989C78 = 0;
  qword_254989C68 = 0;
  sub_20BFC9A6C((char **)&qword_254989C68, ((*(_QWORD *)algn_254989C50 - qword_254989C48) >> 3) + a1[1] - *a1);
  sub_20C1292A0(&qword_254989C68, (_QWORD *)qword_254989C70, *a1, a1[1], a1[1] - *a1);
  return sub_20C1292A0(&qword_254989C68, (_QWORD *)qword_254989C70, (uint64_t *)qword_254989C48, *(uint64_t **)algn_254989C50, (*(_QWORD *)algn_254989C50 - qword_254989C48) >> 3);
}

void sub_20C577C30(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

void sub_20C577C50()
{
  if (!atomic_load((unint64_t *)pxrInternal__aapl__pxrReserved__::USDGEOM_POINTINSTANCER_NEW_APPLYOPS))
  {
    pxrInternal__aapl__pxrReserved__::Tf_InitializeEnvSetting<BOOL>((uint64_t)&pxrInternal__aapl__pxrReserved__::USDGEOM_POINTINSTANCER_NEW_APPLYOPS);
    atomic_load((unint64_t *)pxrInternal__aapl__pxrReserved__::USDGEOM_POINTINSTANCER_NEW_APPLYOPS);
  }
}

void sub_20C577C94()
{
  void *__p;
  uint64_t v1;
  uint64_t v2;
  void *v3[2];
  char v4;

  sub_20BDDC0E4(v3, "UsdGeomPointInstancer::IncludeProtoXform");
  __p = 0;
  v1 = 0;
  v2 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C53CC50, 0, (uint64_t)v3, (uint64_t)&__p);
  if (SHIBYTE(v2) < 0)
    operator delete(__p);
  if (v4 < 0)
    operator delete(v3[0]);
  sub_20BDDC0E4(v3, "UsdGeomPointInstancer::ExcludeProtoXform");
  __p = 0;
  v1 = 0;
  v2 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C53CC50, 1, (uint64_t)v3, (uint64_t)&__p);
  if (SHIBYTE(v2) < 0)
    operator delete(__p);
  if (v4 < 0)
    operator delete(v3[0]);
  sub_20BDDC0E4(v3, "UsdGeomPointInstancer::ApplyMask");
  __p = 0;
  v1 = 0;
  v2 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C53CC60, 0, (uint64_t)v3, (uint64_t)&__p);
  if (SHIBYTE(v2) < 0)
    operator delete(__p);
  if (v4 < 0)
    operator delete(v3[0]);
  sub_20BDDC0E4(v3, "UsdGeomPointInstancer::IgnoreMask");
  __p = 0;
  v1 = 0;
  v2 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C53CC60, 1, (uint64_t)v3, (uint64_t)&__p);
  if (SHIBYTE(v2) < 0)
    operator delete(__p);
  if (v4 < 0)
    operator delete(v3[0]);
}

void sub_20C577DF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
    operator delete(__p);
  if (a20 < 0)
    operator delete(a15);
  _Unwind_Resume(exception_object);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::UsesOrientationsf(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this, pxrInternal__aapl__pxrReserved__::UsdAttribute *a2)
{
  uint64_t v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  unsigned int v10;
  uint64_t v11;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v12;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  int v20;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v21;
  int v22;
  int v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetOrientationsfAttr(this, (uint64_t)&v25);
  *(_DWORD *)a2 = v25;
  v4 = *((_QWORD *)&v25 + 1);
  *((_QWORD *)&v25 + 1) = 0;
  v5 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = v4;
  if (v5)
    sub_20C35C614(v5);
  sub_20BFD3EBC((int *)a2 + 4, (int *)&v26);
  sub_20BFD3F10((int *)a2 + 5, (int *)&v26 + 1);
  if (&v25 == (__int128 *)a2)
  {
    if ((BYTE8(v26) & 7) != 0)
    {
      v9 = (unsigned int *)(*((_QWORD *)&v26 + 1) & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
  }
  else
  {
    v6 = *((_QWORD *)a2 + 3);
    if ((v6 & 7) != 0)
    {
      v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stlxr(v8 - 2, v7));
    }
    *((_QWORD *)a2 + 3) = *((_QWORD *)&v26 + 1);
    *((_QWORD *)&v26 + 1) = 0;
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v26 + 1);
  sub_20BFD265C(&v26);
  if (*((_QWORD *)&v25 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v25 + 1));
  v27 = 0;
  v25 = 0u;
  v26 = 0u;
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::GfQuatf>>((uint64_t)a2, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v25);
  v11 = v25;
  if (!(_QWORD)v25)
  {
    pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetOrientationsAttr(this, (uint64_t)&v20);
    *(_DWORD *)a2 = v20;
    v12 = v21;
    v21 = 0;
    v13 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)*((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v12;
    if (v13)
      sub_20C35C614(v13);
    sub_20BFD3EBC((int *)a2 + 4, &v22);
    sub_20BFD3F10((int *)a2 + 5, &v23);
    if (&v20 == (int *)a2)
    {
      if ((v24 & 7) != 0)
      {
        v17 = (unsigned int *)(v24 & 0xFFFFFFFFFFFFFFF8);
        do
          v18 = __ldxr(v17);
        while (__stlxr(v18 - 2, v17));
      }
    }
    else
    {
      v14 = *((_QWORD *)a2 + 3);
      if ((v14 & 7) != 0)
      {
        v15 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
        do
          v16 = __ldxr(v15);
        while (__stlxr(v16 - 2, v15));
      }
      *((_QWORD *)a2 + 3) = v24;
      v24 = 0;
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v23);
    sub_20BFD265C(&v22);
    if (v21)
      sub_20C35C614(v21);
  }
  sub_20BF5618C((uint64_t)&v25);
  return v11 != 0;
}

void sub_20C578034(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20BF5618C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancerApplyNewStyleListOps(pxrInternal__aapl__pxrReserved__ *this)
{
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)atomic_load((unint64_t *)pxrInternal__aapl__pxrReserved__::USDGEOM_POINTINSTANCER_NEW_APPLYOPS);
  if (!v1)
  {
    pxrInternal__aapl__pxrReserved__::Tf_InitializeEnvSetting<BOOL>((uint64_t)&pxrInternal__aapl__pxrReserved__::USDGEOM_POINTINSTANCER_NEW_APPLYOPS);
    v1 = (unsigned __int8 *)atomic_load((unint64_t *)pxrInternal__aapl__pxrReserved__::USDGEOM_POINTINSTANCER_NEW_APPLYOPS);
  }
  return *v1;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancerSetOrMergeOverOp(uint64_t **a1, int a2, pxrInternal__aapl__pxrReserved__::UsdObject *a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4)
{
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  pxrInternal__aapl__pxrReserved__::UsdStage *v9;
  _QWORD *EditTarget;
  _QWORD *v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v15;
  void *v16;
  _BYTE *v17;
  void **v18;
  uint64_t v19;
  unint64_t *v20;
  uint64_t v21;
  uint64_t *v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *i;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  _BYTE *v38;
  void *v39;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v40;
  uint64_t v41;
  unsigned int *v42;
  unsigned int v43;
  unsigned int *v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *j;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  _BYTE *v60;
  char *v61;
  unsigned int v62;
  uint64_t v63;
  unsigned int *v64;
  unsigned int v65;
  unsigned int v66;
  uint64_t v67;
  unsigned int *v68;
  unsigned int v69;
  unsigned int v70;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(_QWORD, uint64_t);
  void *v76[2];
  void **v77;
  void *v78[2];
  uint64_t v79;
  void *v80[2];
  uint64_t v81;
  void *v82[2];
  uint64_t v83;
  __int128 v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  void *v100;
  void *__p;
  char *v102;
  unint64_t v103;
  void *v104;
  __int128 v105;
  void **v106;
  __int128 v107;
  uint64_t v108;
  __int128 v109;
  uint64_t v110;
  __int128 v111;
  uint64_t v112;
  __int128 v113;
  uint64_t v114;
  __int128 v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _DWORD v119[10];
  __int128 v120;
  unint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t **v124;
  uint64_t v125;

  v125 = *MEMORY[0x24BDAC8D0];
  pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v88);
  pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v75);
  pxrInternal__aapl__pxrReserved__::UsdObject::GetStage(a3, v8, &v73);
  v9 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C348E08(&v73);
  EditTarget = (_QWORD *)pxrInternal__aapl__pxrReserved__::UsdStage::GetEditTarget(v9);
  v11 = EditTarget;
  v12 = EditTarget[1];
  v117 = *EditTarget;
  v118 = v12;
  if (v12)
  {
    v13 = (unsigned int *)(v12 + 8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  sub_20C20123C(v119, (uint64_t)(EditTarget + 2));
  v120 = *(_OWORD *)(v11 + 7);
  sub_20C348EEC((uint64_t)a3, (int *)&v104);
  pxrInternal__aapl__pxrReserved__::UsdEditTarget::GetPrimSpecForScenePath((pxrInternal__aapl__pxrReserved__::UsdEditTarget *)&v117, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v104, &v72);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v104 + 1);
  sub_20BFD265C(&v104);
  if ((pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(&v72) & 1) == 0)
  {
    v15 = sub_20C0B0CA4(&v72);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetInfo(v15, a4, &v104);
    if (sub_20BFE4F9C((pxrInternal__aapl__pxrReserved__::VtValue *)&v104))
    {
      if ((v105 & 4) != 0)
        v16 = (void *)(*(uint64_t (**)(void **))((v105 & 0xFFFFFFFFFFFFFFF8) + 168))(&v104);
      else
        v16 = v104;
      sub_20C31D30C((char *)&v75, (uint64_t)v16);
    }
    sub_20BF4C2D8((uint64_t)&v104);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetItems((uint64_t)&v88, (uint64_t)a1, a2);
  v17 = (_BYTE *)atomic_load((unint64_t *)pxrInternal__aapl__pxrReserved__::USDGEOM_POINTINSTANCER_NEW_APPLYOPS);
  if (!v17)
  {
    pxrInternal__aapl__pxrReserved__::Tf_InitializeEnvSetting<BOOL>((uint64_t)&pxrInternal__aapl__pxrReserved__::USDGEOM_POINTINSTANCER_NEW_APPLYOPS);
    v17 = (_BYTE *)atomic_load((unint64_t *)pxrInternal__aapl__pxrReserved__::USDGEOM_POINTINSTANCER_NEW_APPLYOPS);
  }
  if (*v17)
  {
    if ((_BYTE)v75)
    {
      sub_20C03298C((uint64_t)&v104, (uint64_t)&v75);
LABEL_56:
      LOBYTE(v75) = (_BYTE)v104;
      if (v76[0])
      {
        v76[1] = v76[0];
        operator delete(v76[0]);
      }
      *(_OWORD *)v76 = v105;
      v77 = v106;
      v106 = 0;
      v105 = 0uLL;
      if (v78[0])
      {
        v78[1] = v78[0];
        operator delete(v78[0]);
      }
      *(_OWORD *)v78 = v107;
      v79 = v108;
      v108 = 0;
      v107 = 0uLL;
      if (v80[0])
      {
        v80[1] = v80[0];
        operator delete(v80[0]);
      }
      *(_OWORD *)v80 = v109;
      v81 = v110;
      v110 = 0;
      v109 = 0uLL;
      if (v82[0])
      {
        v82[1] = v82[0];
        operator delete(v82[0]);
      }
      *(_OWORD *)v82 = v111;
      v83 = v112;
      v112 = 0;
      v111 = 0uLL;
      if ((_QWORD)v84)
      {
        *((_QWORD *)&v84 + 1) = v84;
        operator delete((void *)v84);
      }
      v84 = v113;
      v85 = v114;
      v114 = 0;
      v113 = 0uLL;
      v39 = (void *)v86;
      if ((_QWORD)v86)
      {
        *((_QWORD *)&v86 + 1) = v86;
        operator delete((void *)v86);
        v39 = (void *)v113;
      }
      v86 = v115;
      v87 = v116;
      v116 = 0;
      v115 = 0uLL;
      if (v39)
      {
        *((_QWORD *)&v113 + 1) = v39;
        operator delete(v39);
      }
      if ((_QWORD)v111)
      {
        *((_QWORD *)&v111 + 1) = v111;
        operator delete((void *)v111);
      }
      if ((_QWORD)v109)
      {
        *((_QWORD *)&v109 + 1) = v109;
        operator delete((void *)v109);
      }
      if ((_QWORD)v107)
      {
        *((_QWORD *)&v107 + 1) = v107;
        operator delete((void *)v107);
      }
      if ((_QWORD)v105)
      {
        *((_QWORD *)&v105 + 1) = v105;
        operator delete((void *)v105);
      }
      v40 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v40)
        v40 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations(&v88, &v104, (uint64_t)&v75);
      v121 = 0;
      v41 = sub_20C57E6BC((uint64_t)a3, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v40 + 456), (uint64_t (**)(_QWORD, uint64_t))&v104, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v121);
      if ((v121 & 7) != 0)
      {
        v42 = (unsigned int *)(v121 & 0xFFFFFFFFFFFFFFF8);
        do
          v43 = __ldxr(v42);
        while (__stlxr(v43 - 2, v42));
      }
      sub_20C394EF4((uint64_t)&v104);
      goto LABEL_130;
    }
    __p = 0;
    v102 = 0;
    v103 = 0;
    v124 = 0;
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations(&v75, (uint64_t **)&__p, (uint64_t)&v121);
    v20 = (unint64_t *)v124;
    if (v124 == (uint64_t **)&v121)
    {
      v21 = 4;
      v20 = &v121;
    }
    else
    {
      if (!v124)
      {
LABEL_52:
        std::__sort<std::__less<long long,long long> &,long long *>();
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v104);
        v122 = 0;
        v123 = 0;
        v121 = 0;
        sub_20C57E644(&v121, __p, (uint64_t)v102, (v102 - (_BYTE *)__p) >> 3);
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetPrependedItems((uint64_t)&v104, (uint64_t)&v121);
        if (v121)
        {
          v122 = (_QWORD *)v121;
          operator delete((void *)v121);
        }
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetDeletedItems((uint64_t)&v104, (uint64_t)&v84);
        if (__p)
        {
          v102 = (char *)__p;
          operator delete(__p);
        }
        goto LABEL_56;
      }
      v21 = 5;
    }
    (*(void (**)(void))(*v20 + 8 * v21))();
    goto LABEL_52;
  }
  if ((_BYTE)v75)
  {
    v121 = 0;
    v122 = 0;
    v123 = 0;
    sub_20C032914(&v121, v76[0], (uint64_t)v76[1], ((char *)v76[1] - (char *)v76[0]) >> 3);
    v106 = 0;
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations(&v88, (uint64_t **)&v121, (uint64_t)&v104);
    v18 = v106;
    if (v106 == &v104)
    {
      v19 = 4;
      v18 = &v104;
    }
    else
    {
      if (!v106)
      {
LABEL_86:
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetExplicitItems((uint64_t)&v75, (uint64_t)&v121);
        v22 = (uint64_t *)v121;
        if (!v121)
          goto LABEL_127;
        v122 = (_QWORD *)v121;
        goto LABEL_126;
      }
      v19 = 5;
    }
    (*((void (**)(void))*v18 + v19))();
    goto LABEL_86;
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ComposeOperations((uint64_t)&v75, (uint64_t)&v88, a2);
  if (a2 != 1)
  {
    if (a2 != 2)
      goto LABEL_127;
    v104 = 0;
    v105 = 0uLL;
    sub_20C032914(&v104, v78[0], (uint64_t)v78[1], ((char *)v78[1] - (char *)v78[0]) >> 3);
    v22 = (uint64_t *)v104;
    if (v104 == (void *)v105)
      goto LABEL_124;
    sub_20C57E7C8((uint64_t)&v121, *a1, a1[1]);
    __p = 0;
    v102 = 0;
    v103 = 0;
    sub_20BE7E950(&__p, (uint64_t)(v105 - (_QWORD)v104) >> 3);
    v23 = v104;
    v24 = (_QWORD *)v105;
    if (v104 == (void *)v105)
    {
      v38 = v104;
    }
    else
    {
      do
      {
        v25 = *v23;
        for (i = v122; i; i = (_QWORD *)*i)
        {
          v27 = i[4];
          if (v25 >= v27)
          {
            if (v27 >= v25)
              goto LABEL_48;
            ++i;
          }
        }
        v28 = v102;
        if ((unint64_t)v102 >= v103)
        {
          v30 = (char *)__p;
          v31 = (v102 - (_BYTE *)__p) >> 3;
          v32 = v31 + 1;
          if ((unint64_t)(v31 + 1) >> 61)
            sub_20BDDF694();
          v33 = v103 - (_QWORD)__p;
          if ((uint64_t)(v103 - (_QWORD)__p) >> 2 > v32)
            v32 = v33 >> 2;
          if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFF8)
            v34 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v34 = v32;
          if (v34)
          {
            v35 = (char *)sub_20BDDF6A8((uint64_t)&v103, v34);
            v30 = (char *)__p;
            v28 = v102;
          }
          else
          {
            v35 = 0;
          }
          v36 = &v35[8 * v31];
          *(_QWORD *)v36 = v25;
          v29 = v36 + 8;
          while (v28 != v30)
          {
            v37 = *((_QWORD *)v28 - 1);
            v28 -= 8;
            *((_QWORD *)v36 - 1) = v37;
            v36 -= 8;
          }
          __p = v36;
          v102 = v29;
          v103 = (unint64_t)&v35[8 * v34];
          if (v30)
            operator delete(v30);
        }
        else
        {
          *(_QWORD *)v102 = v25;
          v29 = v28 + 8;
        }
        v102 = v29;
LABEL_48:
        ++v23;
      }
      while (v23 != v24);
      v23 = v104;
      v38 = (_BYTE *)v105;
    }
    v61 = (char *)__p;
    if (v102 - (_BYTE *)__p == v38 - (_BYTE *)v23)
      goto LABEL_121;
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetAddedItems((uint64_t)&v75, (uint64_t)&__p);
    goto LABEL_120;
  }
  v104 = 0;
  v105 = 0uLL;
  sub_20C032914(&v104, (const void *)v84, *((uint64_t *)&v84 + 1), (uint64_t)(*((_QWORD *)&v84 + 1) - v84) >> 3);
  v22 = (uint64_t *)v104;
  if (v104 != (void *)v105)
  {
    sub_20C57E7C8((uint64_t)&v121, *a1, a1[1]);
    __p = 0;
    v102 = 0;
    v103 = 0;
    sub_20BE7E950(&__p, (uint64_t)(v105 - (_QWORD)v104) >> 3);
    v45 = v104;
    v46 = (_QWORD *)v105;
    if (v104 == (void *)v105)
    {
      v60 = v104;
    }
    else
    {
      do
      {
        v47 = *v45;
        for (j = v122; j; j = (_QWORD *)*j)
        {
          v49 = j[4];
          if (v47 >= v49)
          {
            if (v49 >= v47)
              goto LABEL_112;
            ++j;
          }
        }
        v50 = v102;
        if ((unint64_t)v102 >= v103)
        {
          v52 = (char *)__p;
          v53 = (v102 - (_BYTE *)__p) >> 3;
          v54 = v53 + 1;
          if ((unint64_t)(v53 + 1) >> 61)
            sub_20BDDF694();
          v55 = v103 - (_QWORD)__p;
          if ((uint64_t)(v103 - (_QWORD)__p) >> 2 > v54)
            v54 = v55 >> 2;
          if ((unint64_t)v55 >= 0x7FFFFFFFFFFFFFF8)
            v56 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v56 = v54;
          if (v56)
          {
            v57 = (char *)sub_20BDDF6A8((uint64_t)&v103, v56);
            v52 = (char *)__p;
            v50 = v102;
          }
          else
          {
            v57 = 0;
          }
          v58 = &v57[8 * v53];
          *(_QWORD *)v58 = v47;
          v51 = v58 + 8;
          while (v50 != v52)
          {
            v59 = *((_QWORD *)v50 - 1);
            v50 -= 8;
            *((_QWORD *)v58 - 1) = v59;
            v58 -= 8;
          }
          __p = v58;
          v102 = v51;
          v103 = (unint64_t)&v57[8 * v56];
          if (v52)
            operator delete(v52);
        }
        else
        {
          *(_QWORD *)v102 = v47;
          v51 = v50 + 8;
        }
        v102 = v51;
LABEL_112:
        ++v45;
      }
      while (v45 != v46);
      v45 = v104;
      v60 = (_BYTE *)v105;
    }
    v61 = (char *)__p;
    if (v102 - (_BYTE *)__p == v60 - (_BYTE *)v45)
      goto LABEL_121;
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetDeletedItems((uint64_t)&v75, (uint64_t)&__p);
LABEL_120:
    v61 = (char *)__p;
LABEL_121:
    if (v61)
    {
      v102 = v61;
      operator delete(v61);
    }
    sub_20BE6100C((uint64_t)&v121, v122);
    v22 = (uint64_t *)v104;
  }
LABEL_124:
  if (!v22)
    goto LABEL_127;
  *(_QWORD *)&v105 = v22;
LABEL_126:
  operator delete(v22);
LABEL_127:
  v104 = 0;
  v41 = sub_20C57E6BC((uint64_t)a3, a4, &v75, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v104);
  v44 = (unsigned int *)v104;
  if ((v104 & 7) != 0)
  {
    v44 = (unsigned int *)((unint64_t)v104 & 0xFFFFFFFFFFFFFFF8);
    do
      v62 = __ldxr(v44);
    while (__stlxr(v62 - 2, v44));
  }
LABEL_130:
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v44, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v72);
  sub_20C2011B8((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)v119);
  v63 = v118;
  if (v118)
  {
    v64 = (unsigned int *)(v118 + 8);
    do
    {
      v65 = __ldxr(v64);
      v66 = v65 - 1;
    }
    while (__stlxr(v66, v64));
    if (!v66)
      (*(void (**)(uint64_t))(*(_QWORD *)v63 + 8))(v63);
  }
  v67 = v74;
  if (v74)
  {
    v68 = (unsigned int *)(v74 + 8);
    do
    {
      v69 = __ldxr(v68);
      v70 = v69 - 1;
    }
    while (__stlxr(v70, v68));
    if (!v70)
      (*(void (**)(uint64_t))(*(_QWORD *)v67 + 8))(v67);
  }
  if ((_QWORD)v86)
  {
    *((_QWORD *)&v86 + 1) = v86;
    operator delete((void *)v86);
  }
  if ((_QWORD)v84)
  {
    *((_QWORD *)&v84 + 1) = v84;
    operator delete((void *)v84);
  }
  if (v82[0])
  {
    v82[1] = v82[0];
    operator delete(v82[0]);
  }
  if (v80[0])
  {
    v80[1] = v80[0];
    operator delete(v80[0]);
  }
  if (v78[0])
  {
    v78[1] = v78[0];
    operator delete(v78[0]);
  }
  if (v76[0])
  {
    v76[1] = v76[0];
    operator delete(v76[0]);
  }
  if (v99)
  {
    v100 = v99;
    operator delete(v99);
  }
  if (v97)
  {
    v98 = v97;
    operator delete(v97);
  }
  if (v95)
  {
    v96 = v95;
    operator delete(v95);
  }
  if (v93)
  {
    v94 = v93;
    operator delete(v93);
  }
  if (v91)
  {
    v92 = v91;
    operator delete(v91);
  }
  if (v89)
  {
    v90 = v89;
    operator delete(v89);
  }
  return v41;
}

void sub_20C578A54(_Unwind_Exception *a1@<X0>, void *a2@<X8>, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,uint64_t a47,void *__p,uint64_t a49,uint64_t a50,uint64_t a51)
{
  uint64_t v51;
  uint64_t v53;
  unsigned int *v54;
  unsigned int v55;
  unsigned int v56;

  if (__p)
  {
    a49 = (uint64_t)__p;
    operator delete(__p);
  }
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(a2, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&a4);
  sub_20C38B7B4(v51 - 200);
  v53 = a6;
  if (a6)
  {
    v54 = (unsigned int *)(a6 + 8);
    do
    {
      v55 = __ldxr(v54);
      v56 = v55 - 1;
    }
    while (__stlxr(v56, v54));
    if (!v56)
      (*(void (**)(uint64_t))(*(_QWORD *)v53 + 8))(v53);
  }
  sub_20C031968(&a7);
  sub_20C031968(&a26);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::ActivateId(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this, uint64_t a2)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v3;
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;
  uint64_t v8;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v9;
  int v10;
  int v11;
  uint64_t v12;
  void *__p[3];
  uint64_t v14;

  v14 = a2;
  sub_20C57EA74(__p, 1uLL, &v14);
  sub_20C35C4F8((uint64_t)&v8, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3)
    v3 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v4 = pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancerSetOrMergeOverOp((uint64_t **)__p, 2, (pxrInternal__aapl__pxrReserved__::UsdObject *)&v8, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 456));
  if ((v12 & 7) != 0)
  {
    v5 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v11);
  sub_20BFD265C(&v10);
  if (v9)
    sub_20C35C614(v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  return v4;
}

void sub_20C578D8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  sub_20C35C2E0((uint64_t)&a9);
  if (__p)
  {
    a14 = (uint64_t)__p;
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::ActivateIds(uint64_t a1, unint64_t *a2)
{
  const void *v3;
  unint64_t v4;
  uint64_t v5;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  _BYTE v11[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v12;
  int v13;
  int v14;
  uint64_t v15;
  void *__p;
  void *v17;
  uint64_t v18;

  v3 = (const void *)a2[4];
  v4 = *a2;
  v5 = (uint64_t)v3 + 8 * *a2;
  v17 = 0;
  v18 = 0;
  __p = 0;
  sub_20C0327E8(&__p, v3, v5, v4);
  sub_20C35C4F8((uint64_t)v11, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
  v6 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v6)
    v6 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v7 = pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancerSetOrMergeOverOp((uint64_t **)&__p, 2, (pxrInternal__aapl__pxrReserved__::UsdObject *)v11, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v6 + 456));
  if ((v15 & 7) != 0)
  {
    v8 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v14);
  sub_20BFD265C(&v13);
  if (v12)
    sub_20C35C614(v12);
  if (__p)
  {
    v17 = __p;
    operator delete(__p);
  }
  return v7;
}

void sub_20C578E9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  sub_20C35C2E0((uint64_t)&a10);
  if (__p)
  {
    a15 = (uint64_t)__p;
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::ActivateAllIds(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v2;
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int v7;
  void *__p;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD, uint64_t);
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;

  pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v13);
  __p = 0;
  v10 = 0;
  v11 = 0;
  pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetExplicitItems((uint64_t)&v13, (uint64_t)&__p);
  if (__p)
  {
    v10 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)__p;
    operator delete(__p);
  }
  sub_20C35C4F8((uint64_t)&__p, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v2 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v2)
    v2 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v26 = 0;
  v3 = sub_20C57E6BC((uint64_t)&__p, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v2 + 456), &v13, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v26);
  if ((v26 & 7) != 0)
  {
    v4 = (unsigned int *)(v26 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  if ((v12 & 7) != 0)
  {
    v6 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_20BFD265C(&v11);
  if (v10)
    sub_20C35C614(v10);
  if (v24)
  {
    v25 = v24;
    operator delete(v24);
  }
  if (v22)
  {
    v23 = v22;
    operator delete(v22);
  }
  if (v20)
  {
    v21 = v20;
    operator delete(v20);
  }
  if (v18)
  {
    v19 = v18;
    operator delete(v18);
  }
  if (v16)
  {
    v17 = v16;
    operator delete(v16);
  }
  if (v14)
  {
    v15 = v14;
    operator delete(v14);
  }
  return v3;
}

void sub_20C57902C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  sub_20C35C2E0((uint64_t)&__p);
  sub_20C031968(&a13);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::DeactivateId(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this, uint64_t a2)
{
  _BYTE *v3;
  int v4;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  uint64_t v10;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v11;
  int v12;
  int v13;
  uint64_t v14;
  void *__p[3];
  uint64_t v16;

  v16 = a2;
  sub_20C57EA74(__p, 1uLL, &v16);
  v3 = (_BYTE *)atomic_load((unint64_t *)pxrInternal__aapl__pxrReserved__::USDGEOM_POINTINSTANCER_NEW_APPLYOPS);
  if (!v3)
  {
    pxrInternal__aapl__pxrReserved__::Tf_InitializeEnvSetting<BOOL>((uint64_t)&pxrInternal__aapl__pxrReserved__::USDGEOM_POINTINSTANCER_NEW_APPLYOPS);
    v3 = (_BYTE *)atomic_load((unint64_t *)pxrInternal__aapl__pxrReserved__::USDGEOM_POINTINSTANCER_NEW_APPLYOPS);
  }
  if (*v3)
    v4 = 5;
  else
    v4 = 1;
  sub_20C35C4F8((uint64_t)&v10, (uint64_t *)this + 1, (_DWORD *)this + 4);
  v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v5)
    v5 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v6 = pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancerSetOrMergeOverOp((uint64_t **)__p, v4, (pxrInternal__aapl__pxrReserved__::UsdObject *)&v10, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v5 + 456));
  if ((v14 & 7) != 0)
  {
    v7 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stlxr(v8 - 2, v7));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  sub_20BFD265C(&v12);
  if (v11)
    sub_20C35C614(v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  return v6;
}

void sub_20C5791A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::DeactivateIds(uint64_t a1, unint64_t *a2)
{
  const void *v3;
  unint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  int v7;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v8;
  uint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  _BYTE v13[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  int v15;
  int v16;
  uint64_t v17;
  void *__p;
  void *v19;
  uint64_t v20;

  v3 = (const void *)a2[4];
  v4 = *a2;
  v5 = (uint64_t)v3 + 8 * *a2;
  v19 = 0;
  v20 = 0;
  __p = 0;
  sub_20C0327E8(&__p, v3, v5, v4);
  v6 = (_BYTE *)atomic_load((unint64_t *)pxrInternal__aapl__pxrReserved__::USDGEOM_POINTINSTANCER_NEW_APPLYOPS);
  if (!v6)
  {
    pxrInternal__aapl__pxrReserved__::Tf_InitializeEnvSetting<BOOL>((uint64_t)&pxrInternal__aapl__pxrReserved__::USDGEOM_POINTINSTANCER_NEW_APPLYOPS);
    v6 = (_BYTE *)atomic_load((unint64_t *)pxrInternal__aapl__pxrReserved__::USDGEOM_POINTINSTANCER_NEW_APPLYOPS);
  }
  if (*v6)
    v7 = 5;
  else
    v7 = 1;
  sub_20C35C4F8((uint64_t)v13, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
  v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8)
    v8 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v9 = pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancerSetOrMergeOverOp((uint64_t **)&__p, v7, (pxrInternal__aapl__pxrReserved__::UsdObject *)v13, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 456));
  if ((v17 & 7) != 0)
  {
    v10 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stlxr(v11 - 2, v10));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v16);
  sub_20BFD265C(&v15);
  if (v14)
    sub_20C35C614(v14);
  if (__p)
  {
    v19 = __p;
    operator delete(__p);
  }
  return v9;
}

void sub_20C5792EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::VisId(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this, uint64_t a2, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a3)
{
  uint64_t v5;
  uint64_t v7[5];
  _QWORD v8[2];

  v8[1] = *MEMORY[0x24BDAC8D0];
  v8[0] = a2;
  sub_20C5796A8((uint64_t)v7, (uint64_t)v8, 1);
  v5 = pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::VisIds(this, v7, (double *)a3);
  sub_20BF5618C((uint64_t)v7);
  return v5;
}

void sub_20C5793A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2)
    sub_20BDC12F4(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::VisIds(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *a1, uint64_t *a2, double *a3)
{
  char v6;
  char v7;
  unsigned int *v8;
  unsigned int v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  pxrInternal__aapl__pxrReserved__ **v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD **v21;
  BOOL v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  _QWORD **v27;
  _QWORD *v28[2];
  pxrInternal__aapl__pxrReserved__ *v29;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v30;
  int v31;
  int v32;
  uint64_t v33;
  _OWORD v34[2];
  uint64_t *v35;
  std::type_info v36;
  uint64_t v37;

  v37 = *MEMORY[0x24BDAC8D0];
  v35 = 0;
  memset(v34, 0, sizeof(v34));
  pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetInvisibleIdsAttr(a1, (uint64_t)&v29);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<long long>>((uint64_t)&v29, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v34);
  v7 = v6;
  if ((v33 & 7) != 0)
  {
    v8 = (unsigned int *)(v33 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v32);
  sub_20BFD265C(&v31);
  if (v30)
    sub_20C35C614(v30);
  if ((v7 & 1) != 0)
  {
    sub_20C0046D4((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)v34, v10, v11);
    v12 = v35;
    sub_20C0046D4((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)v34, v13, v14);
    sub_20C57ED30((uint64_t)&v27, v12, &v35[*(_QWORD *)&v34[0]]);
    v15 = *a2;
    if (*a2)
    {
      v16 = 0;
      v17 = (pxrInternal__aapl__pxrReserved__ **)a2[4];
      v18 = 8 * v15;
      do
      {
        v29 = *v17;
        v16 += sub_20C57EDB0((uint64_t)&v27, (uint64_t *)&v29);
        ++v17;
        v18 -= 8;
      }
      while (v18);
      if (v16)
      {
        sub_20BF56210(v34);
        sub_20C5796F4((unint64_t *)v34, (unint64_t)v28[1]);
        v19 = v27;
        if (v27 != v28)
        {
          do
          {
            v29 = (pxrInternal__aapl__pxrReserved__ *)v19[4];
            sub_20C57EE28((uint64_t)v34, &v29);
            v20 = (_QWORD *)v19[1];
            if (v20)
            {
              do
              {
                v21 = (_QWORD **)v20;
                v20 = (_QWORD *)*v20;
              }
              while (v20);
            }
            else
            {
              do
              {
                v21 = (_QWORD **)v19[2];
                v22 = *v21 == v19;
                v19 = v21;
              }
              while (!v22);
            }
            v19 = v21;
          }
          while (v21 != v28);
        }
      }
    }
    v36.__type_name = 0;
    pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::CreateInvisibleIdsAttr(a1, &v36, 0, (uint64_t)&v29);
    v23 = pxrInternal__aapl__pxrReserved__::UsdAttribute::_Set<pxrInternal__aapl__pxrReserved__::VtArray<long long>>(&v29, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v34, *a3);
    if ((v33 & 7) != 0)
    {
      v24 = (unsigned int *)(v33 & 0xFFFFFFFFFFFFFFF8);
      do
        v25 = __ldxr(v24);
      while (__stlxr(v25 - 2, v24));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v32);
    sub_20BFD265C(&v31);
    if (v30)
      sub_20C35C614(v30);
    sub_20BF4C2D8((uint64_t)&v36);
    sub_20BE6100C((uint64_t)&v27, v28[0]);
  }
  else
  {
    v23 = 1;
  }
  sub_20BF5618C((uint64_t)v34);
  return v23;
}

void sub_20C579620(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD *);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  sub_20BE6100C((uint64_t)va, v5);
  sub_20BF5618C((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C5796A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  sub_20C57EAF4((unint64_t *)a1, a2, a2 + 8 * a3);
  return a1;
}

void sub_20C5796DC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BF5618C(v1);
  _Unwind_Resume(a1);
}

void sub_20C5796F4(unint64_t *a1, unint64_t a2)
{
  unint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t i;

  v3 = a1[4];
  if (!v3)
  {
    if (!a2)
      return;
    v7 = sub_20C004638((uint64_t)a1, a2);
    goto LABEL_12;
  }
  if (a1[3])
    v4 = a1;
  else
    v4 = (unint64_t *)(v3 - 8);
  if (*v4 < a2)
  {
    v5 = *a1;
    v6 = sub_20C004638((uint64_t)a1, a2);
    v7 = v6;
    if (v5)
    {
      for (i = 0; i != v5; ++i)
        v6[i] = *(_QWORD *)(v3 + i * 8);
    }
LABEL_12:
    sub_20BF5618C((uint64_t)a1);
    a1[4] = (unint64_t)v7;
  }
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::VisAllIds(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a2)
{
  _BOOL4 HasAuthoredValue;
  unsigned int *v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  pxrInternal__aapl__pxrReserved__ *v11;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v12;
  int v13;
  int v14;
  uint64_t v15;
  _BYTE v16[40];
  std::type_info v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  sub_20C003FC4((uint64_t)v16, 0);
  pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetInvisibleIdsAttr(this, (uint64_t)&v11);
  HasAuthoredValue = pxrInternal__aapl__pxrReserved__::UsdAttribute::HasAuthoredValue((pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v11);
  if ((v15 & 7) != 0)
  {
    v5 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v14);
  sub_20BFD265C(&v13);
  if (v12)
    sub_20C35C614(v12);
  if (HasAuthoredValue)
  {
    v17.__type_name = 0;
    pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::CreateInvisibleIdsAttr(this, &v17, 0, (uint64_t)&v11);
    v7 = pxrInternal__aapl__pxrReserved__::UsdAttribute::_Set<pxrInternal__aapl__pxrReserved__::VtArray<long long>>(&v11, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v16, *(double *)a2);
    if ((v15 & 7) != 0)
    {
      v8 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
      do
        v9 = __ldxr(v8);
      while (__stlxr(v9 - 2, v8));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v14);
    sub_20BFD265C(&v13);
    if (v12)
      sub_20C35C614(v12);
    sub_20BF4C2D8((uint64_t)&v17);
  }
  else
  {
    v7 = 1;
  }
  sub_20BF5618C((uint64_t)v16);
  return v7;
}

void sub_20C5798D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_20BDC12F4(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::InvisId(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this, uint64_t a2, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a3)
{
  uint64_t v5;
  uint64_t v7[5];
  _QWORD v8[2];

  v8[1] = *MEMORY[0x24BDAC8D0];
  v8[0] = a2;
  sub_20C5796A8((uint64_t)v7, (uint64_t)v8, 1);
  v5 = pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::InvisIds(this, v7, (double *)a3);
  sub_20BF5618C((uint64_t)v7);
  return v5;
}

void sub_20C5799CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2)
    sub_20BDC12F4(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::InvisIds(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *a1, uint64_t *a2, double *a3)
{
  char v6;
  char v7;
  unsigned int *v8;
  unsigned int v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  pxrInternal__aapl__pxrReserved__ **v16;
  pxrInternal__aapl__pxrReserved__ **v17;
  pxrInternal__aapl__pxrReserved__ *v18;
  _QWORD *v19;
  _QWORD **v20;
  _QWORD *v21;
  _QWORD **v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  unsigned int *v26;
  unsigned int v27;
  char v29[8];
  _QWORD *v30[2];
  pxrInternal__aapl__pxrReserved__ *v31;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v32;
  int v33;
  int v34;
  uint64_t v35;
  _OWORD v36[2];
  uint64_t *v37;
  std::type_info v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  v37 = 0;
  memset(v36, 0, sizeof(v36));
  pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetInvisibleIdsAttr(a1, (uint64_t)&v31);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<long long>>((uint64_t)&v31, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v36);
  v7 = v6;
  if ((v35 & 7) != 0)
  {
    v8 = (unsigned int *)(v35 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v34);
  sub_20BFD265C(&v33);
  if (v32)
    sub_20C35C614(v32);
  if ((v7 & 1) != 0)
  {
    sub_20C0046D4((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)v36, v10, v11);
    v12 = v37;
    sub_20C0046D4((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)v36, v13, v14);
    sub_20C57ED30((uint64_t)v29, v12, &v37[*(_QWORD *)&v36[0]]);
    v15 = *a2;
    if (*a2)
    {
      v16 = (pxrInternal__aapl__pxrReserved__ **)a2[4];
      v17 = &v16[v15];
      do
      {
        v18 = *v16;
        v31 = *v16;
        v19 = v30[0];
        if (!v30[0])
          goto LABEL_18;
        v20 = v30;
        do
        {
          v21 = v19;
          v22 = v20;
          v23 = v19[4];
          v24 = v19 + 1;
          if (v23 >= (uint64_t)v18)
          {
            v24 = v21;
            v20 = (_QWORD **)v21;
          }
          v19 = (_QWORD *)*v24;
        }
        while (v19);
        if (v20 == v30)
          goto LABEL_18;
        if (v23 < (uint64_t)v18)
          v21 = v22;
        if ((uint64_t)v18 < v21[4])
LABEL_18:
          sub_20C57EE28((uint64_t)v36, &v31);
        ++v16;
      }
      while (v16 != v17);
    }
    v38.__type_name = 0;
    pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::CreateInvisibleIdsAttr(a1, &v38, 0, (uint64_t)&v31);
    v25 = pxrInternal__aapl__pxrReserved__::UsdAttribute::_Set<pxrInternal__aapl__pxrReserved__::VtArray<long long>>(&v31, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v36, *a3);
    if ((v35 & 7) != 0)
    {
      v26 = (unsigned int *)(v35 & 0xFFFFFFFFFFFFFFF8);
      do
        v27 = __ldxr(v26);
      while (__stlxr(v27 - 2, v26));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v34);
    sub_20BFD265C(&v33);
    if (v32)
      sub_20C35C614(v32);
    sub_20BF4C2D8((uint64_t)&v38);
    sub_20BE6100C((uint64_t)v29, v30[0]);
  }
  else
  {
    v25 = 1;
  }
  sub_20BF5618C((uint64_t)v36);
  return v25;
}

void sub_20C579C18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_20BDC12F4(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::ComputeMaskAtTime(uint64_t a1@<X0>, unint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  char v20;
  char v21;
  unsigned int *v22;
  unsigned int v23;
  char v24;
  char v25;
  unsigned int *v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t i;
  unint64_t v30;
  char v31;
  uint64_t *v32;
  uint64_t *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD **v36;
  _QWORD *v37;
  _QWORD **v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v43;
  int v44;
  int v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t *v50;
  _QWORD *v51[2];
  uint64_t *v52;
  uint64_t *v53;
  uint64_t v54;
  _BYTE v55[8];
  void *v56;
  _BYTE *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *__p;
  void *v67;
  _OWORD v68[2];
  uint64_t *v69;
  _OWORD v70[2];
  uint64_t v71;

  v71 = 0;
  memset(v70, 0, sizeof(v70));
  v69 = 0;
  memset(v68, 0, sizeof(v68));
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)a3 = 0;
  pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)v55);
  sub_20C35C4F8((uint64_t)&v47, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
  v6 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v6)
    v6 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v42 = 0;
  sub_20C57EF8C((uint64_t)&v47, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v6 + 456), (uint64_t)v55, &v42);
  if ((v42 & 7) != 0)
  {
    v7 = (unsigned int *)(v42 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stlxr(v8 - 2, v7));
  }
  if ((BYTE8(v48) & 7) != 0)
  {
    v9 = (unsigned int *)(*((_QWORD *)&v48 + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v48 + 1);
  sub_20BFD265C(&v48);
  if (*((_QWORD *)&v47 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v47 + 1));
  v52 = 0;
  v53 = 0;
  v54 = 0;
  sub_20C032914(&v52, v56, (uint64_t)v57, (v57 - (_BYTE *)v56) >> 3);
  pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetInvisibleIdsAttr((pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *)a1, (uint64_t)&v47);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<long long>>((uint64_t)&v47, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v68);
  if ((BYTE8(v48) & 7) != 0)
  {
    v11 = (unsigned int *)(*((_QWORD *)&v48 + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stlxr(v12 - 2, v11));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v48 + 1);
  sub_20BFD265C(&v48);
  if (*((_QWORD *)&v47 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v47 + 1));
  v13 = v53;
  if (v53 == v52 && !*(_QWORD *)&v68[0])
    goto LABEL_57;
  sub_20C57F020((uint64_t)&v50, v52, v53);
  sub_20C0046D4((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)v68, v14, v15);
  v16 = v69;
  sub_20C0046D4((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)v68, v17, v18);
  v19 = &v69[*(_QWORD *)&v68[0]];
  while (v16 != v19)
  {
    sub_20C57E848(&v50, v51, v16, v16);
    ++v16;
  }
  if (a2)
  {
LABEL_41:
    sub_20BE6B5DC((char **)a3, *a2);
    v30 = *a2;
    if (!*a2)
      goto LABEL_55;
    v31 = 0;
    v32 = (uint64_t *)a2[4];
    v33 = &v32[v30];
    do
    {
      v34 = v51[0];
      if (!v51[0])
        goto LABEL_52;
      v35 = *v32;
      v36 = v51;
      do
      {
        v37 = v34;
        v38 = v36;
        v39 = v34[4];
        v40 = v34 + 1;
        if (v39 >= v35)
        {
          v40 = v37;
          v36 = (_QWORD **)v37;
        }
        v34 = (_QWORD *)*v40;
      }
      while (v34);
      if (v36 == v51)
        goto LABEL_52;
      if (v39 < v35)
        v37 = v38;
      if (v35 < v37[4])
LABEL_52:
        v36 = v51;
      LOBYTE(v47) = v36 == v51;
      sub_20C57A248(a3, &v47);
      v31 |= v36 != v51;
      ++v32;
    }
    while (v32 != v33);
    if ((v31 & 1) == 0)
LABEL_55:
      sub_20BE69C4C(a3, 0, 0);
    sub_20BE6100C((uint64_t)&v50, v51[0]);
    v13 = v52;
LABEL_57:
    if (!v13)
      goto LABEL_60;
    v53 = v13;
    v41 = v13;
    goto LABEL_59;
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetIdsAttr((pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *)a1, (uint64_t)&v47);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<long long>>((uint64_t)&v47, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v70);
  v21 = v20;
  if ((BYTE8(v48) & 7) != 0)
  {
    v22 = (unsigned int *)(*((_QWORD *)&v48 + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v23 = __ldxr(v22);
    while (__stlxr(v23 - 2, v22));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v48 + 1);
  sub_20BFD265C(&v48);
  if (*((_QWORD *)&v47 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v47 + 1));
  if ((v21 & 1) != 0)
  {
    a2 = (unint64_t *)v70;
    goto LABEL_41;
  }
  v49 = 0;
  v47 = 0u;
  v48 = 0u;
  pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetProtoIndicesAttr((pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *)a1, (uint64_t)&v42);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<int>>((uint64_t)&v42, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v47);
  v25 = v24;
  if ((v46 & 7) != 0)
  {
    v26 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
    do
      v27 = __ldxr(v26);
    while (__stlxr(v27 - 2, v26));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v45);
  sub_20BFD265C(&v44);
  if (v43)
    sub_20C35C614(v43);
  if ((v25 & 1) != 0)
  {
    v28 = v47;
    sub_20C5796F4((unint64_t *)v70, v47);
    if (v28)
    {
      for (i = 0; i != v28; ++i)
      {
        v42 = i;
        sub_20C080498((uint64_t)v70, &v42);
      }
    }
    a2 = (unint64_t *)v70;
  }
  else
  {
    a2 = 0;
  }
  sub_20BF5618C((uint64_t)&v47);
  if ((v25 & 1) != 0)
    goto LABEL_41;
  sub_20BE6100C((uint64_t)&v50, v51[0]);
  v41 = v52;
  if (v52)
  {
    v53 = v52;
LABEL_59:
    operator delete(v41);
  }
LABEL_60:
  if (__p)
  {
    v67 = __p;
    operator delete(__p);
  }
  if (v64)
  {
    v65 = v64;
    operator delete(v64);
  }
  if (v62)
  {
    v63 = v62;
    operator delete(v62);
  }
  if (v60)
  {
    v61 = v60;
    operator delete(v60);
  }
  if (v58)
  {
    v59 = v58;
    operator delete(v58);
  }
  if (v56)
  {
    v57 = v56;
    operator delete(v56);
  }
  sub_20BF5618C((uint64_t)v68);
  sub_20BF5618C((uint64_t)v70);
}

void sub_20C57A128(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,uint64_t a23,uint64_t a24)
{
  void **v24;
  uint64_t v25;

  sub_20C35C2E0((uint64_t)&a13);
  sub_20C031968(&a24);
  if (*v24)
    operator delete(*v24);
  sub_20BF5618C(v25 - 176);
  sub_20BF5618C(v25 - 128);
  _Unwind_Resume(a1);
}

void sub_20C57A248(uint64_t a1, _BYTE *a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  if (v4 == v5 << 6)
  {
    if ((uint64_t)(v4 + 1) < 0)
      sub_20BDDF694();
    v6 = v5 << 7;
    if (v6 <= (v4 & 0xFFFFFFFFFFFFFFC0) + 64)
      v6 = (v4 & 0xFFFFFFFFFFFFFFC0) + 64;
    if (v4 <= 0x3FFFFFFFFFFFFFFELL)
      v7 = v6;
    else
      v7 = 0x7FFFFFFFFFFFFFFFLL;
    sub_20BE6B5DC((char **)a1, v7);
    v4 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)(a1 + 8) = v4 + 1;
  v8 = *(char **)a1;
  v9 = v4 >> 6;
  v10 = 1 << v4;
  if (*a2)
    v11 = *(_QWORD *)&v8[8 * v9] | v10;
  else
    v11 = *(_QWORD *)&v8[8 * v9] & ~v10;
  *(_QWORD *)&v8[8 * v9] = v11;
}

BOOL pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::_GetProtoIndicesForInstanceTransforms(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *this, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2, double a3)
{
  BOOL BracketingTimeSamples;
  unsigned int *v7;
  unsigned int v8;
  char v9;
  char v10;
  unsigned int *v11;
  unsigned int v12;
  _BYTE v14[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v15;
  int v16;
  int v17;
  uint64_t v18;
  BOOL v19;
  double v20;
  double v21;

  v20 = 0.0;
  v21 = 0.0;
  v19 = 0;
  pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetProtoIndicesAttr(this, (uint64_t)v14);
  BracketingTimeSamples = pxrInternal__aapl__pxrReserved__::UsdAttribute::GetBracketingTimeSamples((pxrInternal__aapl__pxrReserved__::UsdAttribute *)v14, a3, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v21, &v20, &v19);
  if ((v18 & 7) != 0)
  {
    v7 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stlxr(v8 - 2, v7));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v17);
  sub_20BFD265C(&v16);
  if (v15)
    sub_20C35C614(v15);
  if (!BracketingTimeSamples)
    return 0;
  pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetProtoIndicesAttr(this, (uint64_t)v14);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<int>>((uint64_t)v14, a2);
  v10 = v9;
  if ((v18 & 7) != 0)
  {
    v11 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stlxr(v12 - 2, v11));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v17);
  sub_20BFD265C(&v16);
  if (v15)
    sub_20C35C614(v15);
  return (v10 & 1) != 0;
}

void sub_20C57A494(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C372B54((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::_GetPrototypePathsForInstanceTransforms(uint64_t a1, uint64_t *a2, char **a3)
{
  char *v6;
  char *v7;
  unsigned int *v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  const char *Text;
  char *v18;
  unsigned int *v19;
  unsigned int v20;
  const char *v22;
  char *v23;
  unsigned int *v24;
  unsigned int v25;
  _BYTE v26[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v27;
  int v28;
  int v29;
  uint64_t v30;
  int v31;
  int v32;
  char **v33;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char *v38;
  char *v39;
  uint64_t v40;

  v38 = 0;
  v39 = 0;
  v40 = 0;
  pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetPrototypesRel((pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *)a1, (uint64_t)&v33);
  if (!pxrInternal__aapl__pxrReserved__::UsdRelationship::GetTargets((uint64_t)&v33, (uint64_t *)&v38))
  {
    if ((v36 & 7) != 0)
    {
      v15 = (unsigned int *)(v36 & 0xFFFFFFFFFFFFFFF8);
      do
        v16 = __ldxr(v15);
      while (__stlxr(v16 - 2, v15));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v35 + 1);
    sub_20BFD265C(&v35);
    if (v34)
      sub_20C35C614(v34);
    goto LABEL_21;
  }
  v6 = v38;
  v7 = v39;
  if ((v36 & 7) != 0)
  {
    v8 = (unsigned int *)(v36 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v35 + 1);
  sub_20BFD265C(&v35);
  if (v34)
    sub_20C35C614(v34);
  if (v6 == v7)
  {
LABEL_21:
    v33 = (char **)"usdGeom/pointInstancer.cpp";
    v34 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"_GetPrototypePathsForInstanceTransforms";
    v35 = 690;
    v36 = (unint64_t)"BOOL pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::_GetPrototypePathsForInstanceT"
                            "ransforms(const VtIntArray &, SdfPathVector *) const";
    v37 = 0;
    sub_20C35C4F8((uint64_t)v26, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
    sub_20C348EEC((uint64_t)v26, &v31);
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v31);
    pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v33, (pxrInternal__aapl__pxrReserved__ *)"%s -- no prototypes", v18, Text);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v32);
    sub_20BFD265C(&v31);
    if ((v30 & 7) != 0)
    {
      v19 = (unsigned int *)(v30 & 0xFFFFFFFFFFFFFFF8);
      do
        v20 = __ldxr(v19);
      while (__stlxr(v20 - 2, v19));
    }
    goto LABEL_24;
  }
  v10 = *a2;
  if (!*a2)
  {
LABEL_13:
    if (&v38 != a3)
      sub_20C0E29B0((uint64_t)a3, v38, v39, (v39 - v38) >> 3);
    v14 = 1;
    goto LABEL_27;
  }
  v11 = (unsigned int *)a2[4];
  v12 = 4 * v10;
  while (1)
  {
    v13 = *v11;
    if ((v13 & 0x80000000) != 0 || (v39 - v38) >> 3 <= v13)
      break;
    ++v11;
    v12 -= 4;
    if (!v12)
      goto LABEL_13;
  }
  v33 = (char **)"usdGeom/pointInstancer.cpp";
  v34 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"_GetPrototypePathsForInstanceTransforms";
  v35 = 700;
  v36 = (unint64_t)"BOOL pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::_GetPrototypePathsForInstanceTra"
                          "nsforms(const VtIntArray &, SdfPathVector *) const";
  v37 = 0;
  sub_20C35C4F8((uint64_t)v26, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
  sub_20C348EEC((uint64_t)v26, &v31);
  v22 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v31);
  pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v33, (pxrInternal__aapl__pxrReserved__ *)"%s -- invalid prototype index: %d. Should be in [0, %zu)", v23, v22, *v11, (v39 - v38) >> 3);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v32);
  sub_20BFD265C(&v31);
  if ((v30 & 7) != 0)
  {
    v24 = (unsigned int *)(v30 & 0xFFFFFFFFFFFFFFF8);
    do
      v25 = __ldxr(v24);
    while (__stlxr(v25 - 2, v24));
  }
LABEL_24:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
  sub_20BFD265C(&v28);
  if (v27)
    sub_20C35C614(v27);
  v14 = 0;
LABEL_27:
  v33 = &v38;
  sub_20BFD6F90((void ***)&v33);
  return v14;
}

void sub_20C57A78C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void **a17)
{
  uint64_t v17;

  sub_20C35C2E0((uint64_t)&a12);
  a17 = (void **)(v17 - 72);
  sub_20BFD6F90(&a17);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::_ComputePointInstancerAttributesPreamble(uint64_t a1, int a2, int a3, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a4, char **a5, uint64_t a6, double a7)
{
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  const char *Text;
  char *v17;
  unsigned int *v18;
  unsigned int v19;
  _BYTE v20[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v21;
  int v22;
  int v23;
  uint64_t v24;
  int v25;
  int v26;
  char *v27;
  __int128 v28;
  const char *v29;
  char v30;

  result = pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::_GetProtoIndicesForInstanceTransforms((pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *)a1, a4, a7);
  if ((_DWORD)result)
  {
    v14 = *(_QWORD *)a4;
    if (a2
      || (result = pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::_GetPrototypePathsForInstanceTransforms(a1, (uint64_t *)a4, a5), (_DWORD)result))
    {
      if (a3)
      {
        return 1;
      }
      else
      {
        pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::ComputeMaskAtTime(a1, 0, (uint64_t)&v27);
        if (*(_QWORD *)a6)
        {
          operator delete(*(void **)a6);
          *(_QWORD *)a6 = 0;
          *(_QWORD *)(a6 + 8) = 0;
          *(_QWORD *)(a6 + 16) = 0;
        }
        *(_QWORD *)a6 = v27;
        v15 = v28;
        *(_OWORD *)(a6 + 8) = v28;
        result = 1;
        if (v15 && v15 != v14)
        {
          v27 = "usdGeom/pointInstancer.cpp";
          *(_QWORD *)&v28 = "_ComputePointInstancerAttributesPreamble";
          *((_QWORD *)&v28 + 1) = 743;
          v29 = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::_ComputePointInstancerAttributesPreamble(c"
                "onst UsdTimeCode, const ProtoXformInclusion, const MaskApplication, VtIntArray *, SdfPathVector *, std::"
                "vector<BOOL> *) const";
          v30 = 0;
          sub_20C35C4F8((uint64_t)v20, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
          sub_20C348EEC((uint64_t)v20, &v25);
          Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v25);
          pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v27, (pxrInternal__aapl__pxrReserved__ *)"%s -- found mask of size [%zu], but expected size [%zu]", v17, Text, *(_QWORD *)(a6 + 8), v14);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v26);
          sub_20BFD265C(&v25);
          if ((v24 & 7) != 0)
          {
            v18 = (unsigned int *)(v24 & 0xFFFFFFFFFFFFFFF8);
            do
              v19 = __ldxr(v18);
            while (__stlxr(v19 - 2, v18));
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v23);
          sub_20BFD265C(&v22);
          if (v21)
            sub_20C35C614(v21);
          return 0;
        }
      }
    }
  }
  return result;
}

void sub_20C57A9A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::ComputeInstanceTransformsAtTime(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *a1, uint64_t a2, int a3, int a4, double a5, double a6)
{
  double *v12;
  _BOOL8 v13;
  void *__p;
  void *v16;
  double *v17;
  __int128 *v18;
  __int128 *v19;
  uint64_t v20;

  v18 = 0;
  v19 = 0;
  v20 = 0;
  v12 = (double *)operator new(8uLL);
  __p = v12;
  *v12 = a5;
  v16 = v12 + 1;
  v17 = v12 + 1;
  v13 = pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::ComputeInstanceTransformsAtTimes(a1, (uint64_t *)&v18, (uint64_t *)&__p, a3, a4, a6);
  if (v13)
  {
    if (v19 == v18)
      sub_20C575678();
    sub_20C282748(a2, v18);
  }
  if (__p)
  {
    v16 = __p;
    operator delete(__p);
  }
  __p = &v18;
  sub_20C57F0A0((void ***)&__p);
  return v13;
}

void sub_20C57AA90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char *__p, uint64_t a10, uint64_t a11, char a12)
{
  __p = &a12;
  sub_20C57F0A0((void ***)&__p);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::ComputeInstanceTransformsAtTimes(pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *a1, uint64_t *a2, uint64_t *a3, int a4, int a5, double a6)
{
  unint64_t *v12;
  unint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  _BOOL8 v16;
  unsigned int *v17;
  unsigned int v18;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v19;
  unint64_t *v20;
  unint64_t v21;
  unsigned int *v22;
  unsigned int v23;
  unsigned int *v24;
  unsigned int v25;
  unsigned int *v26;
  unsigned int v27;
  int v29;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v30;
  int v31;
  int v32;
  uint64_t v33;
  int v34;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v35;
  int v36;
  int v37;
  uint64_t v38;
  int v39;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v40;
  int v41;
  int v42;
  uint64_t v43;

  v39 = 3;
  v40 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v41);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v42);
  v43 = 0;
  if (pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::UsesOrientationsf(a1, (pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v39))
  {
    v34 = v39;
    v35 = v40;
    if (v40)
    {
      v12 = (unint64_t *)((char *)v40 + 48);
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
    }
    sub_20BFD6E54(&v36, &v41);
    sub_20BFD6EA4(&v37, &v42);
    v38 = v43;
    if ((v43 & 7) != 0)
    {
      v14 = (unsigned int *)(v43 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 2, v14));
      if ((v15 & 1) == 0)
        v38 &= 0xFFFFFFFFFFFFFFF8;
    }
    v16 = sub_20C57ADA0((uint64_t)a1, a2, a3, a4, a5, (uint64_t)&v34, a6);
    if ((v38 & 7) != 0)
    {
      v17 = (unsigned int *)(v38 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v37);
    sub_20BFD265C(&v36);
    v19 = v35;
    if (!v35)
      goto LABEL_28;
LABEL_27:
    sub_20C35C614(v19);
    goto LABEL_28;
  }
  v29 = v39;
  v30 = v40;
  if (v40)
  {
    v20 = (unint64_t *)((char *)v40 + 48);
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
  }
  sub_20BFD6E54(&v31, &v41);
  sub_20BFD6EA4(&v32, &v42);
  v33 = v43;
  if ((v43 & 7) != 0)
  {
    v22 = (unsigned int *)(v43 & 0xFFFFFFFFFFFFFFF8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 2, v22));
    if ((v23 & 1) == 0)
      v33 &= 0xFFFFFFFFFFFFFFF8;
  }
  v16 = sub_20C57B8B4((uint64_t)a1, a2, a3, a4, a5, (uint64_t)&v29, a6);
  if ((v33 & 7) != 0)
  {
    v24 = (unsigned int *)(v33 & 0xFFFFFFFFFFFFFFF8);
    do
      v25 = __ldxr(v24);
    while (__stlxr(v25 - 2, v24));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v32);
  sub_20BFD265C(&v31);
  v19 = v30;
  if (v30)
    goto LABEL_27;
LABEL_28:
  if ((v43 & 7) != 0)
  {
    v26 = (unsigned int *)(v43 & 0xFFFFFFFFFFFFFFF8);
    do
      v27 = __ldxr(v26);
    while (__stlxr(v27 - 2, v26));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v42);
  sub_20BFD265C(&v41);
  if (v40)
    sub_20C35C614(v40);
  return v16;
}

void sub_20C57AD68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  sub_20C372B54((uint64_t)&a9);
  sub_20C372B54((uint64_t)&a17);
  _Unwind_Resume(a1);
}

BOOL sub_20C57ADA0(uint64_t a1, uint64_t *a2, uint64_t *a3, int a4, int a5, uint64_t a6, double a7)
{
  uint64_t v8;
  uint64_t v9;
  pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *v10;
  uint64_t v11;
  char PositionsVelocitiesAndAccelerations;
  unsigned int *v13;
  unsigned int v14;
  unsigned int *v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int *v19;
  unsigned int v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int *v23;
  unsigned int v24;
  unsigned int *v25;
  unsigned int v26;
  unsigned int *v27;
  unsigned int v28;
  unint64_t v29;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v30;
  unsigned int *v31;
  unsigned int v32;
  BOOL v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  __int128 *v38;
  int v39;
  uint64_t v40;
  unsigned int *v41;
  unsigned int v42;
  BOOL v43;
  unsigned int *v44;
  unsigned int v45;
  int v46;
  uint64_t v47;
  unsigned int *v48;
  unsigned int v49;
  unsigned int *v50;
  unsigned int v51;
  int v52;
  int v53;
  uint64_t v54;
  unsigned int *v55;
  unsigned int v56;
  unsigned int v57;
  uint64_t v60;
  uint64_t v61;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 *v77;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v78;
  uint64_t v79;
  uint64_t v80;
  void *__p[3];
  char *v82[3];
  double v83;
  _OWORD v84[2];
  uint64_t v85;
  _OWORD v86[2];
  uint64_t v87;
  _OWORD v88[2];
  uint64_t v89;
  _OWORD v90[2];
  uint64_t v91;
  double v92;
  _OWORD v93[2];
  uint64_t v94;
  _OWORD v95[2];
  uint64_t v96;
  _OWORD v97[2];
  uint64_t v98;

  v8 = a3[1];
  v61 = *a3;
  v60 = v8 - *a3;
  v65 = v8;
  if (v8 != *a3)
  {
    v9 = *a3;
    do
      v9 += 8;
    while (v9 != v8);
  }
  v98 = 0;
  memset(v97, 0, sizeof(v97));
  v96 = 0;
  memset(v95, 0, sizeof(v95));
  v94 = 0;
  memset(v93, 0, sizeof(v93));
  v92 = 0.0;
  v91 = 0;
  memset(v90, 0, sizeof(v90));
  v89 = 0;
  memset(v88, 0, sizeof(v88));
  v87 = 0;
  memset(v86, 0, sizeof(v86));
  v85 = 0;
  memset(v84, 0, sizeof(v84));
  v83 = 0.0;
  memset(v82, 0, sizeof(v82));
  memset(__p, 0, sizeof(__p));
  v10 = (pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *)a1;
  if ((pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::_ComputePointInstancerAttributesPreamble(a1, a4, a5, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v97, v82, (uint64_t)__p, a7) & 1) == 0)goto LABEL_101;
  v11 = *(_QWORD *)&v97[0];
  pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetPositionsAttr((pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *)a1, (uint64_t)&v72);
  pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetVelocitiesAttr((pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *)a1, (uint64_t)&v69);
  pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetAccelerationsAttr((pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *)a1, (uint64_t)&v66);
  sub_20C35C4F8((uint64_t)&v77, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
  PositionsVelocitiesAndAccelerations = pxrInternal__aapl__pxrReserved__::UsdGeom_GetPositionsVelocitiesAndAccelerations((pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v72, (pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v69, (pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v66, v11, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v95, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v93, &v92, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v90, a7, (uint64_t)&v77);
  if ((v80 & 7) != 0)
  {
    v13 = (unsigned int *)(v80 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v79 + 1);
  sub_20BFD265C(&v79);
  if (v78)
    sub_20C35C614(v78);
  if ((BYTE8(v67) & 7) != 0)
  {
    v15 = (unsigned int *)(*((_QWORD *)&v67 + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v16 = __ldxr(v15);
    while (__stlxr(v16 - 2, v15));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v67 + 1);
  sub_20BFD265C(&v67);
  if (*((_QWORD *)&v66 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v66 + 1));
  if ((BYTE8(v70) & 7) != 0)
  {
    v17 = (unsigned int *)(*((_QWORD *)&v70 + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v18 = __ldxr(v17);
    while (__stlxr(v18 - 2, v17));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v70 + 1);
  sub_20BFD265C(&v70);
  if (*((_QWORD *)&v69 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v69 + 1));
  if ((BYTE8(v73) & 7) != 0)
  {
    v19 = (unsigned int *)(*((_QWORD *)&v73 + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v20 = __ldxr(v19);
    while (__stlxr(v20 - 2, v19));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v73 + 1);
  sub_20BFD265C(&v73);
  if (*((_QWORD *)&v72 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v72 + 1));
  if ((PositionsVelocitiesAndAccelerations & 1) != 0)
  {
    pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetScalesAttr((pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *)a1, (uint64_t)&v72);
    sub_20C35C4F8((uint64_t)&v69, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
    pxrInternal__aapl__pxrReserved__::UsdGeom_GetScales((pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v72, v11, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v88, (uint64_t)&v69, a7);
    if ((BYTE8(v70) & 7) != 0)
    {
      v21 = (unsigned int *)(*((_QWORD *)&v70 + 1) & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v70 + 1);
    sub_20BFD265C(&v70);
    if (*((_QWORD *)&v69 + 1))
      sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v69 + 1));
    if ((BYTE8(v73) & 7) != 0)
    {
      v23 = (unsigned int *)(*((_QWORD *)&v73 + 1) & 0xFFFFFFFFFFFFFFF8);
      do
        v24 = __ldxr(v23);
      while (__stlxr(v24 - 2, v23));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v73 + 1);
    sub_20BFD265C(&v73);
    if (*((_QWORD *)&v72 + 1))
      sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v72 + 1));
    pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetAngularVelocitiesAttr((pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *)a1, (uint64_t)&v72);
    sub_20C35C4F8((uint64_t)&v69, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
    pxrInternal__aapl__pxrReserved__::UsdGeom_GetOrientationsAndAngularVelocities(a6, &v72, v11, v86, v84, &v83, &v69, a7);
    if ((BYTE8(v70) & 7) != 0)
    {
      v25 = (unsigned int *)(*((_QWORD *)&v70 + 1) & 0xFFFFFFFFFFFFFFF8);
      do
        v26 = __ldxr(v25);
      while (__stlxr(v26 - 2, v25));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v70 + 1);
    sub_20BFD265C(&v70);
    if (*((_QWORD *)&v69 + 1))
      sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v69 + 1));
    if ((BYTE8(v73) & 7) != 0)
    {
      v27 = (unsigned int *)(*((_QWORD *)&v73 + 1) & 0xFFFFFFFFFFFFFFF8);
      do
        v28 = __ldxr(v27);
      while (__stlxr(v28 - 2, v27));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v73 + 1);
    v29 = v60 >> 3;
    sub_20BFD265C(&v73);
    if (*((_QWORD *)&v72 + 1))
      sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v72 + 1));
    if (v11)
    {
      sub_20C35C4F8((uint64_t)&v72, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
      pxrInternal__aapl__pxrReserved__::UsdObject::GetStage((pxrInternal__aapl__pxrReserved__::UsdObject *)&v72, v30, &v75);
      if ((BYTE8(v73) & 7) != 0)
      {
        v31 = (unsigned int *)(*((_QWORD *)&v73 + 1) & 0xFFFFFFFFFFFFFFF8);
        do
          v32 = __ldxr(v31);
        while (__stlxr(v32 - 2, v31));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v73 + 1);
      sub_20BFD265C(&v73);
      if (*((_QWORD *)&v72 + 1))
        sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v72 + 1));
      v77 = 0;
      v78 = 0;
      v79 = 0;
      sub_20C57F12C((uint64_t *)&v77, v29);
      v33 = (*(_QWORD *)&v93[0] | *(_QWORD *)&v84[0]) == 0;
      if (v61 == v65)
      {
LABEL_93:
        if (&v77 != (__int128 **)a2)
          sub_20C57F56C(a2, v77, (__int128 *)v78, 0xCCCCCCCCCCCCCCCDLL * ((v78 - (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v77) >> 3));
        v34 = 1;
      }
      else
      {
        v34 = 0;
        v35 = 0;
        if (v29 <= 1)
          v36 = 1;
        else
          v36 = v60 >> 3;
        while (1)
        {
          v37 = *(double *)(*a3 + 8 * v35);
          v38 = v77;
          if (v33)
          {
            v74 = 0;
            v72 = 0u;
            v73 = 0u;
            pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetPositionsAttr(v10, (uint64_t)&v69);
            pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::GfVec3f>>((uint64_t)&v69, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v72);
            if (v39)
            {
              v40 = v72;
              if ((BYTE8(v70) & 7) != 0)
              {
                v41 = (unsigned int *)(*((_QWORD *)&v70 + 1) & 0xFFFFFFFFFFFFFFF8);
                do
                  v42 = __ldxr(v41);
                while (__stlxr(v42 - 2, v41));
              }
              pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v70 + 1);
              sub_20BFD265C(&v70);
              if (*((_QWORD *)&v69 + 1))
                sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v69 + 1));
              v43 = v40 == v11;
              v10 = (pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *)a1;
              if (v43)
                sub_20C284DC8((uint64_t)v95, &v72);
            }
            else
            {
              if ((BYTE8(v70) & 7) != 0)
              {
                v44 = (unsigned int *)(*((_QWORD *)&v70 + 1) & 0xFFFFFFFFFFFFFFF8);
                do
                  v45 = __ldxr(v44);
                while (__stlxr(v45 - 2, v44));
              }
              pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v70 + 1);
              sub_20BFD265C(&v70);
              if (*((_QWORD *)&v69 + 1))
                sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v69 + 1));
            }
            v71 = 0;
            v69 = 0u;
            v70 = 0u;
            pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetScalesAttr(v10, (uint64_t)&v66);
            pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::GfVec3f>>((uint64_t)&v66, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v69);
            if (v46)
            {
              v47 = v69;
              if ((BYTE8(v67) & 7) != 0)
              {
                v48 = (unsigned int *)(*((_QWORD *)&v67 + 1) & 0xFFFFFFFFFFFFFFF8);
                do
                  v49 = __ldxr(v48);
                while (__stlxr(v49 - 2, v48));
              }
              pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v67 + 1);
              sub_20BFD265C(&v67);
              if (*((_QWORD *)&v66 + 1))
                sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v66 + 1));
              v43 = v47 == v11;
              v10 = (pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *)a1;
              if (v43)
                sub_20C284DC8((uint64_t)v88, &v69);
            }
            else
            {
              if ((BYTE8(v67) & 7) != 0)
              {
                v50 = (unsigned int *)(*((_QWORD *)&v67 + 1) & 0xFFFFFFFFFFFFFFF8);
                do
                  v51 = __ldxr(v50);
                while (__stlxr(v51 - 2, v50));
              }
              pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v67 + 1);
              sub_20BFD265C(&v67);
              if (*((_QWORD *)&v66 + 1))
                sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v66 + 1));
            }
            v68 = 0;
            v66 = 0u;
            v67 = 0u;
            pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::GfQuatf>>(a6, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v66);
            if ((_QWORD)v66 == v11)
              v53 = v52;
            else
              v53 = 0;
            if (v53 == 1)
              sub_20C282F34((uint64_t)v86, &v66);
            sub_20BF5618C((uint64_t)&v66);
            sub_20BF5618C((uint64_t)&v69);
            sub_20BF5618C((uint64_t)&v72);
          }
          if ((sub_20C57C3E0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)((char *)v38 + 40 * v35), &v75, (pxrInternal__aapl__pxrReserved__ **)v97, (uint64_t)v95, (uint64_t)v93, (uint64_t)v90, (uint64_t)v88, (uint64_t)v86, v37, v92, v83, (uint64_t)v84, (uint64_t *)v82, __p) & 1) == 0)break;
          v34 = ++v35 >= v29;
          if (v35 == v36)
            goto LABEL_93;
        }
      }
      *(_QWORD *)&v72 = &v77;
      sub_20C57F0A0((void ***)&v72);
      v54 = v76;
      if (v76)
      {
        v55 = (unsigned int *)(v76 + 8);
        do
        {
          v56 = __ldxr(v55);
          v57 = v56 - 1;
        }
        while (__stlxr(v57, v55));
        if (!v57)
          (*(void (**)(uint64_t))(*(_QWORD *)v54 + 8))(v54);
      }
    }
    else
    {
      sub_20C57F0E0((uint64_t)a2, *a2);
      sub_20C57F12C(a2, v29);
      v34 = 1;
    }
  }
  else
  {
LABEL_101:
    v34 = 0;
  }
  if (__p[0])
    operator delete(__p[0]);
  *(_QWORD *)&v72 = v82;
  sub_20BFD6F90((void ***)&v72);
  sub_20BF5618C((uint64_t)v84);
  sub_20BF5618C((uint64_t)v86);
  sub_20BF5618C((uint64_t)v88);
  sub_20BF5618C((uint64_t)v90);
  sub_20BF5618C((uint64_t)v93);
  sub_20BF5618C((uint64_t)v95);
  sub_20BF5618C((uint64_t)v97);
  return v34;
}

void sub_20C57B684(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,void *__p,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  char a69;
  uint64_t v69;
  uint64_t v71;
  unsigned int *v72;
  unsigned int v73;
  unsigned int v74;

  a33 = (uint64_t)&a40;
  sub_20C57F0A0((void ***)&a33);
  v71 = a39;
  if (a39)
  {
    v72 = (unsigned int *)(a39 + 8);
    do
    {
      v73 = __ldxr(v72);
      v74 = v73 - 1;
    }
    while (__stlxr(v74, v72));
    if (!v74)
      (*(void (**)(uint64_t))(*(_QWORD *)v71 + 8))(v71);
  }
  if (__p)
    operator delete(__p);
  a33 = (uint64_t)&a47;
  sub_20BFD6F90((void ***)&a33);
  sub_20BF5618C((uint64_t)&a51);
  sub_20BF5618C((uint64_t)&a57);
  sub_20BF5618C((uint64_t)&a63);
  sub_20BF5618C((uint64_t)&a69);
  sub_20BF5618C(v69 - 240);
  sub_20BF5618C(v69 - 192);
  sub_20BF5618C(v69 - 144);
  _Unwind_Resume(a1);
}

BOOL sub_20C57B8B4(uint64_t a1, uint64_t *a2, uint64_t *a3, int a4, int a5, uint64_t a6, double a7)
{
  uint64_t v8;
  uint64_t v9;
  pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *v10;
  uint64_t v11;
  char PositionsVelocitiesAndAccelerations;
  unsigned int *v13;
  unsigned int v14;
  unsigned int *v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int *v19;
  unsigned int v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int *v23;
  unsigned int v24;
  unsigned int *v25;
  unsigned int v26;
  unsigned int *v27;
  unsigned int v28;
  unint64_t v29;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v30;
  unsigned int *v31;
  unsigned int v32;
  BOOL v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  __int128 *v38;
  int v39;
  uint64_t v40;
  unsigned int *v41;
  unsigned int v42;
  BOOL v43;
  unsigned int *v44;
  unsigned int v45;
  int v46;
  uint64_t v47;
  unsigned int *v48;
  unsigned int v49;
  unsigned int *v50;
  unsigned int v51;
  int v52;
  int v53;
  uint64_t v54;
  unsigned int *v55;
  unsigned int v56;
  unsigned int v57;
  uint64_t v60;
  uint64_t v61;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 *v77;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v78;
  uint64_t v79;
  uint64_t v80;
  void *__p[3];
  char *v82[3];
  double v83;
  _OWORD v84[2];
  uint64_t v85;
  _OWORD v86[2];
  uint64_t v87;
  _OWORD v88[2];
  uint64_t v89;
  _OWORD v90[2];
  uint64_t v91;
  double v92;
  _OWORD v93[2];
  uint64_t v94;
  _OWORD v95[2];
  uint64_t v96;
  _OWORD v97[2];
  uint64_t v98;

  v8 = a3[1];
  v61 = *a3;
  v60 = v8 - *a3;
  v65 = v8;
  if (v8 != *a3)
  {
    v9 = *a3;
    do
      v9 += 8;
    while (v9 != v8);
  }
  v98 = 0;
  memset(v97, 0, sizeof(v97));
  v96 = 0;
  memset(v95, 0, sizeof(v95));
  v94 = 0;
  memset(v93, 0, sizeof(v93));
  v92 = 0.0;
  v91 = 0;
  memset(v90, 0, sizeof(v90));
  v89 = 0;
  memset(v88, 0, sizeof(v88));
  v87 = 0;
  memset(v86, 0, sizeof(v86));
  v85 = 0;
  memset(v84, 0, sizeof(v84));
  v83 = 0.0;
  memset(v82, 0, sizeof(v82));
  memset(__p, 0, sizeof(__p));
  v10 = (pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *)a1;
  if ((pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::_ComputePointInstancerAttributesPreamble(a1, a4, a5, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v97, v82, (uint64_t)__p, a7) & 1) == 0)goto LABEL_101;
  v11 = *(_QWORD *)&v97[0];
  pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetPositionsAttr((pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *)a1, (uint64_t)&v72);
  pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetVelocitiesAttr((pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *)a1, (uint64_t)&v69);
  pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetAccelerationsAttr((pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *)a1, (uint64_t)&v66);
  sub_20C35C4F8((uint64_t)&v77, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
  PositionsVelocitiesAndAccelerations = pxrInternal__aapl__pxrReserved__::UsdGeom_GetPositionsVelocitiesAndAccelerations((pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v72, (pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v69, (pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v66, v11, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v95, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v93, &v92, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v90, a7, (uint64_t)&v77);
  if ((v80 & 7) != 0)
  {
    v13 = (unsigned int *)(v80 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v79 + 1);
  sub_20BFD265C(&v79);
  if (v78)
    sub_20C35C614(v78);
  if ((BYTE8(v67) & 7) != 0)
  {
    v15 = (unsigned int *)(*((_QWORD *)&v67 + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v16 = __ldxr(v15);
    while (__stlxr(v16 - 2, v15));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v67 + 1);
  sub_20BFD265C(&v67);
  if (*((_QWORD *)&v66 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v66 + 1));
  if ((BYTE8(v70) & 7) != 0)
  {
    v17 = (unsigned int *)(*((_QWORD *)&v70 + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v18 = __ldxr(v17);
    while (__stlxr(v18 - 2, v17));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v70 + 1);
  sub_20BFD265C(&v70);
  if (*((_QWORD *)&v69 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v69 + 1));
  if ((BYTE8(v73) & 7) != 0)
  {
    v19 = (unsigned int *)(*((_QWORD *)&v73 + 1) & 0xFFFFFFFFFFFFFFF8);
    do
      v20 = __ldxr(v19);
    while (__stlxr(v20 - 2, v19));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v73 + 1);
  sub_20BFD265C(&v73);
  if (*((_QWORD *)&v72 + 1))
    sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v72 + 1));
  if ((PositionsVelocitiesAndAccelerations & 1) != 0)
  {
    pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetScalesAttr((pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *)a1, (uint64_t)&v72);
    sub_20C35C4F8((uint64_t)&v69, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
    pxrInternal__aapl__pxrReserved__::UsdGeom_GetScales((pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v72, v11, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v88, (uint64_t)&v69, a7);
    if ((BYTE8(v70) & 7) != 0)
    {
      v21 = (unsigned int *)(*((_QWORD *)&v70 + 1) & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v70 + 1);
    sub_20BFD265C(&v70);
    if (*((_QWORD *)&v69 + 1))
      sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v69 + 1));
    if ((BYTE8(v73) & 7) != 0)
    {
      v23 = (unsigned int *)(*((_QWORD *)&v73 + 1) & 0xFFFFFFFFFFFFFFF8);
      do
        v24 = __ldxr(v23);
      while (__stlxr(v24 - 2, v23));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v73 + 1);
    sub_20BFD265C(&v73);
    if (*((_QWORD *)&v72 + 1))
      sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v72 + 1));
    pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetAngularVelocitiesAttr((pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *)a1, (uint64_t)&v72);
    sub_20C35C4F8((uint64_t)&v69, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
    pxrInternal__aapl__pxrReserved__::UsdGeom_GetOrientationsAndAngularVelocities(a6, &v72, v11, v86, v84, &v83, &v69, a7);
    if ((BYTE8(v70) & 7) != 0)
    {
      v25 = (unsigned int *)(*((_QWORD *)&v70 + 1) & 0xFFFFFFFFFFFFFFF8);
      do
        v26 = __ldxr(v25);
      while (__stlxr(v26 - 2, v25));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v70 + 1);
    sub_20BFD265C(&v70);
    if (*((_QWORD *)&v69 + 1))
      sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v69 + 1));
    if ((BYTE8(v73) & 7) != 0)
    {
      v27 = (unsigned int *)(*((_QWORD *)&v73 + 1) & 0xFFFFFFFFFFFFFFF8);
      do
        v28 = __ldxr(v27);
      while (__stlxr(v28 - 2, v27));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v73 + 1);
    v29 = v60 >> 3;
    sub_20BFD265C(&v73);
    if (*((_QWORD *)&v72 + 1))
      sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v72 + 1));
    if (v11)
    {
      sub_20C35C4F8((uint64_t)&v72, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
      pxrInternal__aapl__pxrReserved__::UsdObject::GetStage((pxrInternal__aapl__pxrReserved__::UsdObject *)&v72, v30, &v75);
      if ((BYTE8(v73) & 7) != 0)
      {
        v31 = (unsigned int *)(*((_QWORD *)&v73 + 1) & 0xFFFFFFFFFFFFFFF8);
        do
          v32 = __ldxr(v31);
        while (__stlxr(v32 - 2, v31));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v73 + 1);
      sub_20BFD265C(&v73);
      if (*((_QWORD *)&v72 + 1))
        sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v72 + 1));
      v77 = 0;
      v78 = 0;
      v79 = 0;
      sub_20C57F12C((uint64_t *)&v77, v29);
      v33 = (*(_QWORD *)&v93[0] | *(_QWORD *)&v84[0]) == 0;
      if (v61 == v65)
      {
LABEL_93:
        if (&v77 != (__int128 **)a2)
          sub_20C57F56C(a2, v77, (__int128 *)v78, 0xCCCCCCCCCCCCCCCDLL * ((v78 - (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v77) >> 3));
        v34 = 1;
      }
      else
      {
        v34 = 0;
        v35 = 0;
        if (v29 <= 1)
          v36 = 1;
        else
          v36 = v60 >> 3;
        while (1)
        {
          v37 = *(double *)(*a3 + 8 * v35);
          v38 = v77;
          if (v33)
          {
            v74 = 0;
            v72 = 0u;
            v73 = 0u;
            pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetPositionsAttr(v10, (uint64_t)&v69);
            pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::GfVec3f>>((uint64_t)&v69, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v72);
            if (v39)
            {
              v40 = v72;
              if ((BYTE8(v70) & 7) != 0)
              {
                v41 = (unsigned int *)(*((_QWORD *)&v70 + 1) & 0xFFFFFFFFFFFFFFF8);
                do
                  v42 = __ldxr(v41);
                while (__stlxr(v42 - 2, v41));
              }
              pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v70 + 1);
              sub_20BFD265C(&v70);
              if (*((_QWORD *)&v69 + 1))
                sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v69 + 1));
              v43 = v40 == v11;
              v10 = (pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *)a1;
              if (v43)
                sub_20C284DC8((uint64_t)v95, &v72);
            }
            else
            {
              if ((BYTE8(v70) & 7) != 0)
              {
                v44 = (unsigned int *)(*((_QWORD *)&v70 + 1) & 0xFFFFFFFFFFFFFFF8);
                do
                  v45 = __ldxr(v44);
                while (__stlxr(v45 - 2, v44));
              }
              pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v70 + 1);
              sub_20BFD265C(&v70);
              if (*((_QWORD *)&v69 + 1))
                sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v69 + 1));
            }
            v71 = 0;
            v69 = 0u;
            v70 = 0u;
            pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetScalesAttr(v10, (uint64_t)&v66);
            pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::GfVec3f>>((uint64_t)&v66, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v69);
            if (v46)
            {
              v47 = v69;
              if ((BYTE8(v67) & 7) != 0)
              {
                v48 = (unsigned int *)(*((_QWORD *)&v67 + 1) & 0xFFFFFFFFFFFFFFF8);
                do
                  v49 = __ldxr(v48);
                while (__stlxr(v49 - 2, v48));
              }
              pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v67 + 1);
              sub_20BFD265C(&v67);
              if (*((_QWORD *)&v66 + 1))
                sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v66 + 1));
              v43 = v47 == v11;
              v10 = (pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *)a1;
              if (v43)
                sub_20C284DC8((uint64_t)v88, &v69);
            }
            else
            {
              if ((BYTE8(v67) & 7) != 0)
              {
                v50 = (unsigned int *)(*((_QWORD *)&v67 + 1) & 0xFFFFFFFFFFFFFFF8);
                do
                  v51 = __ldxr(v50);
                while (__stlxr(v51 - 2, v50));
              }
              pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v67 + 1);
              sub_20BFD265C(&v67);
              if (*((_QWORD *)&v66 + 1))
                sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v66 + 1));
            }
            v68 = 0;
            v66 = 0u;
            v67 = 0u;
            pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::GfQuath>>(a6, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v66);
            if ((_QWORD)v66 == v11)
              v53 = v52;
            else
              v53 = 0;
            if (v53 == 1)
              sub_20C282B2C((uint64_t)v86, &v66);
            sub_20BF5618C((uint64_t)&v66);
            sub_20BF5618C((uint64_t)&v69);
            sub_20BF5618C((uint64_t)&v72);
          }
          if ((sub_20C57C6B4((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)((char *)v38 + 40 * v35), &v75, (pxrInternal__aapl__pxrReserved__ **)v97, (uint64_t)v95, (uint64_t)v93, (uint64_t)v90, (uint64_t)v88, (uint64_t)v86, v37, v92, v83, (uint64_t)v84, (uint64_t *)v82, __p) & 1) == 0)break;
          v34 = ++v35 >= v29;
          if (v35 == v36)
            goto LABEL_93;
        }
      }
      *(_QWORD *)&v72 = &v77;
      sub_20C57F0A0((void ***)&v72);
      v54 = v76;
      if (v76)
      {
        v55 = (unsigned int *)(v76 + 8);
        do
        {
          v56 = __ldxr(v55);
          v57 = v56 - 1;
        }
        while (__stlxr(v57, v55));
        if (!v57)
          (*(void (**)(uint64_t))(*(_QWORD *)v54 + 8))(v54);
      }
    }
    else
    {
      sub_20C57F0E0((uint64_t)a2, *a2);
      sub_20C57F12C(a2, v29);
      v34 = 1;
    }
  }
  else
  {
LABEL_101:
    v34 = 0;
  }
  if (__p[0])
    operator delete(__p[0]);
  *(_QWORD *)&v72 = v82;
  sub_20BFD6F90((void ***)&v72);
  sub_20BF5618C((uint64_t)v84);
  sub_20BF5618C((uint64_t)v86);
  sub_20BF5618C((uint64_t)v88);
  sub_20BF5618C((uint64_t)v90);
  sub_20BF5618C((uint64_t)v93);
  sub_20BF5618C((uint64_t)v95);
  sub_20BF5618C((uint64_t)v97);
  return v34;
}

void sub_20C57C198(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,void *__p,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  char a69;
  uint64_t v69;
  uint64_t v71;
  unsigned int *v72;
  unsigned int v73;
  unsigned int v74;

  a33 = (uint64_t)&a40;
  sub_20C57F0A0((void ***)&a33);
  v71 = a39;
  if (a39)
  {
    v72 = (unsigned int *)(a39 + 8);
    do
    {
      v73 = __ldxr(v72);
      v74 = v73 - 1;
    }
    while (__stlxr(v74, v72));
    if (!v74)
      (*(void (**)(uint64_t))(*(_QWORD *)v71 + 8))(v71);
  }
  if (__p)
    operator delete(__p);
  a33 = (uint64_t)&a47;
  sub_20BFD6F90((void ***)&a33);
  sub_20BF5618C((uint64_t)&a51);
  sub_20BF5618C((uint64_t)&a57);
  sub_20BF5618C((uint64_t)&a63);
  sub_20BF5618C((uint64_t)&a69);
  sub_20BF5618C(v69 - 240);
  sub_20BF5618C(v69 - 192);
  sub_20BF5618C(v69 - 144);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::ComputeInstanceTransformsAtTime(pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *a1, uint64_t *a2, pxrInternal__aapl__pxrReserved__ **a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, uint64_t a12, uint64_t *a13, _QWORD *a14)
{
  return sub_20C57C3E0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

{
  return sub_20C57C6B4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_20C57C3E0(pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *a1, uint64_t *a2, pxrInternal__aapl__pxrReserved__ **a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, uint64_t a12, uint64_t *a13, _QWORD *a14)
{
  pxrInternal__aapl__pxrReserved__ *v23;
  pxrInternal__aapl__pxrReserved__::PcpCache **v24;
  double TimeCodesPerSecond;
  uint64_t v26;
  unint64_t v27;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v28;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v29;
  _OWORD *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  unsigned int *v37;
  unsigned int v38;
  uint64_t v39;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  BOOL v51;
  _BYTE v52[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v53;
  int v54;
  int v55;
  uint64_t v56;
  _BYTE v57[48];
  void *__p[3];
  double v59;
  double v60;
  pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *v61;
  __int128 v62[9];

  *(_QWORD *)&v42 = a5;
  *((_QWORD *)&v42 + 1) = a6;
  v61 = a1;
  v23 = *a3;
  v24 = (pxrInternal__aapl__pxrReserved__::PcpCache **)sub_20C348E08(a2);
  TimeCodesPerSecond = pxrInternal__aapl__pxrReserved__::UsdStage::GetTimeCodesPerSecond(v24);
  v60 = pxrInternal__aapl__pxrReserved__::UsdGeom_CalculateTimeDelta(a9, a10, TimeCodesPerSecond);
  v59 = pxrInternal__aapl__pxrReserved__::UsdGeom_CalculateTimeDelta(a9, a11, TimeCodesPerSecond);
  memset(v62, 0, 128);
  *(_QWORD *)&v43 = v62;
  sub_20BF5F980((unint64_t *)a1, (unint64_t)v23, (__int128 **)&v43);
  pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)v62, 1.0);
  sub_20C57FA18(__p, (a13[1] - *a13) >> 3, v62);
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::UsdGeomXformCache((uint64_t)v57, a9);
  v26 = *a13;
  if (a13[1] != *a13)
  {
    v27 = 0;
    do
    {
      v28 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a2);
      pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v28, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v26 + 8 * v27), (uint64_t)v52);
      if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)v52, v29))
      {
        v51 = 0;
        pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalTransformation((pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *)v57, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v52, &v51, &v43);
        v30 = (char *)__p[0] + 128 * v27;
        v31 = v43;
        v32 = v44;
        v33 = v46;
        v30[2] = v45;
        v30[3] = v33;
        v30[1] = v32;
        v34 = v50;
        v35 = v48;
        v36 = v47;
        v30[6] = v49;
        v30[7] = v34;
        v30[4] = v36;
        v30[5] = v35;
        *v30 = v31;
      }
      if ((v56 & 7) != 0)
      {
        v37 = (unsigned int *)(v56 & 0xFFFFFFFFFFFFFFF8);
        do
          v38 = __ldxr(v37);
        while (__stlxr(v38 - 2, v37));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v55);
      sub_20BFD265C(&v54);
      if (v53)
        sub_20C35C614(v53);
      ++v27;
      v26 = *a13;
    }
    while (v27 < (a13[1] - *a13) >> 3);
  }
  *(_QWORD *)&v43 = a14;
  *((_QWORD *)&v43 + 1) = &v60;
  *(_QWORD *)&v44 = &v59;
  *((_QWORD *)&v44 + 1) = a7;
  *(_QWORD *)&v45 = a8;
  *((_QWORD *)&v45 + 1) = a4;
  v46 = v42;
  *(_QWORD *)&v47 = a12;
  *((_QWORD *)&v47 + 1) = __p;
  *(_QWORD *)&v48 = a3;
  *((_QWORD *)&v48 + 1) = a13;
  *(_QWORD *)&v49 = &v61;
  sub_20C57FB28(v23, (uint64_t)&v43, 1);
  v39 = sub_20C57F86C(a14, v61, (char *)1);
  sub_20C543484((uint64_t)v57);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  return v39;
}

void sub_20C57C654(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *__p,uint64_t a40)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C57C6B4(pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *a1, uint64_t *a2, pxrInternal__aapl__pxrReserved__ **a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, uint64_t a12, uint64_t *a13, _QWORD *a14)
{
  pxrInternal__aapl__pxrReserved__ *v23;
  pxrInternal__aapl__pxrReserved__::PcpCache **v24;
  double TimeCodesPerSecond;
  uint64_t v26;
  unint64_t v27;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v28;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v29;
  _OWORD *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  unsigned int *v37;
  unsigned int v38;
  uint64_t v39;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  BOOL v51;
  _BYTE v52[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v53;
  int v54;
  int v55;
  uint64_t v56;
  _BYTE v57[48];
  void *__p[3];
  double v59;
  double v60;
  pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *v61;
  __int128 v62[9];

  *(_QWORD *)&v42 = a5;
  *((_QWORD *)&v42 + 1) = a6;
  v61 = a1;
  v23 = *a3;
  v24 = (pxrInternal__aapl__pxrReserved__::PcpCache **)sub_20C348E08(a2);
  TimeCodesPerSecond = pxrInternal__aapl__pxrReserved__::UsdStage::GetTimeCodesPerSecond(v24);
  v60 = pxrInternal__aapl__pxrReserved__::UsdGeom_CalculateTimeDelta(a9, a10, TimeCodesPerSecond);
  v59 = pxrInternal__aapl__pxrReserved__::UsdGeom_CalculateTimeDelta(a9, a11, TimeCodesPerSecond);
  memset(v62, 0, 128);
  *(_QWORD *)&v43 = v62;
  sub_20BF5F980((unint64_t *)a1, (unint64_t)v23, (__int128 **)&v43);
  pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)v62, 1.0);
  sub_20C57FA18(__p, (a13[1] - *a13) >> 3, v62);
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::UsdGeomXformCache((uint64_t)v57, a9);
  v26 = *a13;
  if (a13[1] != *a13)
  {
    v27 = 0;
    do
    {
      v28 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(a2);
      pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v28, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v26 + 8 * v27), (uint64_t)v52);
      if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)v52, v29))
      {
        v51 = 0;
        pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalTransformation((pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *)v57, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v52, &v51, &v43);
        v30 = (char *)__p[0] + 128 * v27;
        v31 = v43;
        v32 = v44;
        v33 = v46;
        v30[2] = v45;
        v30[3] = v33;
        v30[1] = v32;
        v34 = v50;
        v35 = v48;
        v36 = v47;
        v30[6] = v49;
        v30[7] = v34;
        v30[4] = v36;
        v30[5] = v35;
        *v30 = v31;
      }
      if ((v56 & 7) != 0)
      {
        v37 = (unsigned int *)(v56 & 0xFFFFFFFFFFFFFFF8);
        do
          v38 = __ldxr(v37);
        while (__stlxr(v38 - 2, v37));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v55);
      sub_20BFD265C(&v54);
      if (v53)
        sub_20C35C614(v53);
      ++v27;
      v26 = *a13;
    }
    while (v27 < (a13[1] - *a13) >> 3);
  }
  *(_QWORD *)&v43 = a14;
  *((_QWORD *)&v43 + 1) = &v60;
  *(_QWORD *)&v44 = &v59;
  *((_QWORD *)&v44 + 1) = a7;
  *(_QWORD *)&v45 = a8;
  *((_QWORD *)&v45 + 1) = a4;
  v46 = v42;
  *(_QWORD *)&v47 = a12;
  *((_QWORD *)&v47 + 1) = __p;
  *(_QWORD *)&v48 = a3;
  *((_QWORD *)&v48 + 1) = a13;
  *(_QWORD *)&v49 = &v61;
  sub_20C580508(v23, (uint64_t)&v43, 1);
  v39 = sub_20C57F86C(a14, v61, (char *)1);
  sub_20C543484((uint64_t)v57);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  return v39;
}

void sub_20C57C928(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *__p,uint64_t a40)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::_ComputeExtentAtTimePreamble(uint64_t a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  char v10;
  char v11;
  unsigned int *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  unint64_t v20;
  const char *Text;
  char *v22;
  unsigned int *v23;
  unsigned int v24;
  const char *v25;
  char *v26;
  unsigned int *v27;
  unsigned int v28;
  unsigned int *v29;
  unsigned int v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  const char *v41;
  char *v42;
  unsigned int *v43;
  unsigned int v44;
  const char *v45;
  char *v46;
  unsigned int *v47;
  unsigned int v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v54;
  int v55;
  int v56;
  uint64_t v57;
  char *v58;
  __int128 v59;
  unint64_t v60;
  char v61;

  pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetProtoIndicesAttr((pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *)a1, (uint64_t)&v58);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<int>>((uint64_t)&v58, a2);
  v11 = v10;
  if ((v60 & 7) != 0)
  {
    v12 = (unsigned int *)(v60 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stlxr(v13 - 2, v12));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v59 + 3);
  sub_20BFD265C((_DWORD *)&v59 + 2);
  if ((_QWORD)v59)
    sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v59);
  if ((v11 & 1) == 0)
  {
    v58 = "usdGeom/pointInstancer.cpp";
    *(_QWORD *)&v59 = "_ComputeExtentAtTimePreamble";
    *((_QWORD *)&v59 + 1) = 1136;
    v60 = (unint64_t)"BOOL pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::_ComputeExtentAtTimePreamble(U"
                            "sdTimeCode, VtIntArray *, std::vector<BOOL> *, UsdRelationship *, SdfPathVector *) const";
    v61 = 0;
    sub_20C35C4F8((uint64_t)v53, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
    sub_20C348EEC((uint64_t)v53, (int *)&v51);
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v51);
    pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v58, (pxrInternal__aapl__pxrReserved__ *)"%s -- no prototype indices", v22, Text);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v51 + 1);
    sub_20BFD265C(&v51);
    if ((v57 & 7) != 0)
    {
      v23 = (unsigned int *)(v57 & 0xFFFFFFFFFFFFFFF8);
      do
        v24 = __ldxr(v23);
      while (__stlxr(v24 - 2, v23));
    }
    goto LABEL_42;
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::ComputeMaskAtTime(a1, 0, (uint64_t)&v58);
  if (*(_QWORD *)a3)
  {
    operator delete(*(void **)a3);
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
  }
  *(_QWORD *)a3 = v58;
  v14 = v59;
  *(_OWORD *)(a3 + 8) = v59;
  if (v14 && v14 != *(_QWORD *)a2)
  {
    v58 = "usdGeom/pointInstancer.cpp";
    *(_QWORD *)&v59 = "_ComputeExtentAtTimePreamble";
    *((_QWORD *)&v59 + 1) = 1145;
    v60 = (unint64_t)"BOOL pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::_ComputeExtentAtTimePreamble(U"
                            "sdTimeCode, VtIntArray *, std::vector<BOOL> *, UsdRelationship *, SdfPathVector *) const";
    v61 = 0;
    sub_20C35C4F8((uint64_t)v53, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
    sub_20C348EEC((uint64_t)v53, (int *)&v51);
    v25 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v51);
    pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v58, (pxrInternal__aapl__pxrReserved__ *)"%s -- mask.size() [%zu] != protoIndices.size() [%zu]", v26, v25, *(_QWORD *)(a3 + 8), *(_QWORD *)a2);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v51 + 1);
    sub_20BFD265C(&v51);
    if ((v57 & 7) != 0)
    {
      v27 = (unsigned int *)(v57 & 0xFFFFFFFFFFFFFFF8);
      do
        v28 = __ldxr(v27);
      while (__stlxr(v28 - 2, v27));
    }
    goto LABEL_42;
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetPrototypesRel((pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *)a1, (uint64_t)&v58);
  *(_DWORD *)a4 = (_DWORD)v58;
  v15 = v59;
  *(_QWORD *)&v59 = 0;
  v16 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a4 + 8);
  *(_QWORD *)(a4 + 8) = v15;
  if (v16)
    sub_20C35C614(v16);
  sub_20BFD3EBC((int *)(a4 + 16), (int *)&v59 + 2);
  sub_20BFD3F10((int *)(a4 + 20), (int *)&v59 + 3);
  if (&v58 == (char **)a4)
  {
    v20 = v60;
  }
  else
  {
    v17 = *(_QWORD *)(a4 + 24);
    if ((v17 & 7) != 0)
    {
      v18 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v19 = __ldxr(v18);
      while (__stlxr(v19 - 2, v18));
    }
    v20 = 0;
    *(_QWORD *)(a4 + 24) = v60;
    v60 = 0;
  }
  if ((v20 & 7) != 0)
  {
    v29 = (unsigned int *)(v20 & 0xFFFFFFFFFFFFFFF8);
    do
      v30 = __ldxr(v29);
    while (__stlxr(v30 - 2, v29));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v59 + 3);
  sub_20BFD265C((_DWORD *)&v59 + 2);
  if ((_QWORD)v59)
    sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v59);
  if (!pxrInternal__aapl__pxrReserved__::UsdRelationship::GetTargets(a4, a5) || *a5 == a5[1])
  {
    v58 = "usdGeom/pointInstancer.cpp";
    *(_QWORD *)&v59 = "_ComputeExtentAtTimePreamble";
    *((_QWORD *)&v59 + 1) = 1152;
    v60 = (unint64_t)"BOOL pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::_ComputeExtentAtTimePreamble(U"
                            "sdTimeCode, VtIntArray *, std::vector<BOOL> *, UsdRelationship *, SdfPathVector *) const";
    v61 = 0;
    sub_20C35C4F8((uint64_t)v53, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
    sub_20C348EEC((uint64_t)v53, (int *)&v51);
    v41 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v51);
    pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v58, (pxrInternal__aapl__pxrReserved__ *)"%s -- no prototypes", v42, v41);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v51 + 1);
    sub_20BFD265C(&v51);
    if ((v57 & 7) != 0)
    {
      v43 = (unsigned int *)(v57 & 0xFFFFFFFFFFFFFFF8);
      do
        v44 = __ldxr(v43);
      while (__stlxr(v44 - 2, v43));
    }
LABEL_42:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v56);
    goto LABEL_43;
  }
  sub_20BF64FC4(a2, v31, v32);
  v33 = *((_QWORD *)a2 + 4);
  sub_20BF64FC4(a2, v34, v35);
  v38 = *((_QWORD *)a2 + 4) + 4 * *(_QWORD *)a2;
  v51 = v33;
  v52 = v38;
  if (v33 == v38)
    return 1;
  while (1)
  {
    v39 = *(unsigned int *)sub_20C002CA8(&v51, v36, v37);
    if ((v39 & 0x80000000) != 0 || v39 >= (a5[1] - *a5) >> 3)
      break;
    sub_20C002D24(&v51);
    if (v51 == v52)
      return 1;
  }
  v58 = "usdGeom/pointInstancer.cpp";
  *(_QWORD *)&v59 = "_ComputeExtentAtTimePreamble";
  *((_QWORD *)&v59 + 1) = 1164;
  v60 = (unint64_t)"BOOL pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::_ComputeExtentAtTimePreamble(Usd"
                          "TimeCode, VtIntArray *, std::vector<BOOL> *, UsdRelationship *, SdfPathVector *) const";
  v61 = 0;
  sub_20C35C4F8((uint64_t)v53, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
  sub_20C348EEC((uint64_t)v53, &v49);
  v45 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v49);
  pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v58, (pxrInternal__aapl__pxrReserved__ *)"%s -- invalid prototype index: %d. Should be in [0, %zu)", v46, v45, v39, (a5[1] - *a5) >> 3);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v50);
  sub_20BFD265C(&v49);
  if ((v57 & 7) != 0)
  {
    v47 = (unsigned int *)(v57 & 0xFFFFFFFFFFFFFFF8);
    do
      v48 = __ldxr(v47);
    while (__stlxr(v48 - 2, v47));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v56);
LABEL_43:
  sub_20BFD265C(&v55);
  if (v54)
    sub_20C35C614(v54);
  return 0;
}

void sub_20C57CE88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::_ComputeExtentFromTransforms(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, double a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9)
{
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v12;
  unsigned int *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  const char *v18;
  char *v19;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v20;
  uint64_t v21;
  unsigned int *v22;
  unsigned int v23;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v24;
  uint64_t v25;
  unsigned int *v26;
  unsigned int v27;
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *v28;
  uint64_t v29;
  unsigned int *v30;
  unsigned int v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int *v35;
  unsigned int v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int *v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v44;
  _BYTE *v45;
  _BYTE *v46;
  _BYTE *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  unsigned int *v56;
  unsigned int v57;
  pxrInternal__aapl__pxrReserved__ *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  unint64_t v63;
  unint64_t initial_auto_partitioner_divisor;
  int64x2_t v65;
  int64x2_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  double v73;
  double v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  char *v78;
  float32_t v79;
  float32x2_t *v80;
  uint64_t v81;
  char *v82;
  float v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int *v86;
  unsigned int v87;
  unsigned int v88;
  uint64_t v90;
  float64x2_t v93;
  float64x2_t v95;
  char v96;
  void **p_p;
  int64x2_t v98;
  __int128 v99;
  int64x2_t v100;
  _QWORD v101[6];
  void *__p;
  _BYTE *v103;
  _QWORD *v104;
  _QWORD *v105;
  _QWORD *v106;
  _BYTE *v107;
  _BYTE *v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void ***p_p_p;
  int64x2_t *v114;
  void ****p_p_p_p;
  char *v116;
  float64x2_t v117;
  _OWORD v118[2];
  tbb::task_group_context *v119;
  _BYTE __src[312];
  char v121[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v122;
  int v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD v128[9];

  v128[6] = *MEMORY[0x24BDAC8D0];
  v112 = a9;
  sub_20C35C4F8((uint64_t)v121, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
  pxrInternal__aapl__pxrReserved__::UsdObject::GetStage((pxrInternal__aapl__pxrReserved__::UsdObject *)v121, v12, &v110);
  v90 = a2;
  if ((v125 & 7) != 0)
  {
    v13 = (unsigned int *)(v125 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v124);
  sub_20BFD265C(&v123);
  if (v122)
    sub_20C35C614(v122);
  v16 = *a7;
  v15 = a7[1];
  if (*a3 <= (v15 - *a7) >> 3)
  {
    v17 = sub_20C53F55C(1);
    v16 = *a7;
    v15 = a7[1];
    if (v17)
    {
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Number of prototypes (%zu) is >= numberof instances (%zu). May be inefficient.", v18, v19, (v15 - v16) >> 3, *a3);
      v16 = *a7;
      v15 = a7[1];
    }
  }
  v107 = 0;
  v108 = 0;
  v109 = 0;
  sub_20C57D948((void **)&v107, (v15 - v16) >> 3);
  v20 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v20)
    v20 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v21 = *((_QWORD *)v20 + 29);
  *(_QWORD *)__src = v21;
  if ((v21 & 7) != 0)
  {
    v22 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 2, v22));
    if ((v23 & 1) == 0)
      *(_QWORD *)__src &= 0xFFFFFFFFFFFFFFF8;
  }
  v24 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v24)
    v24 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v25 = *((_QWORD *)v24 + 111);
  *(_QWORD *)&__src[8] = v25;
  if ((v25 & 7) != 0)
  {
    v26 = (unsigned int *)(v25 & 0xFFFFFFFFFFFFFFF8);
    do
      v27 = __ldxr(v26);
    while (__stxr(v27 + 2, v26));
    if ((v27 & 1) == 0)
      *(_QWORD *)&__src[8] &= 0xFFFFFFFFFFFFFFF8;
  }
  v28 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v28)
    v28 = sub_20C549C2C(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  v29 = *((_QWORD *)v28 + 119);
  *(_QWORD *)&__src[16] = v29;
  if ((v29 & 7) != 0)
  {
    v30 = (unsigned int *)(v29 & 0xFFFFFFFFFFFFFFF8);
    do
      v31 = __ldxr(v30);
    while (__stxr(v31 + 2, v30));
    if ((v31 & 1) == 0)
      *(_QWORD *)&__src[16] &= 0xFFFFFFFFFFFFFFF8;
  }
  v104 = 0;
  v105 = 0;
  v106 = 0;
  v114 = (int64x2_t *)&v104;
  LOBYTE(p_p_p_p) = 0;
  v32 = operator new(0x18uLL);
  v33 = 0;
  v104 = v32;
  v105 = v32;
  v106 = v32 + 3;
  do
  {
    v34 = *(_QWORD *)&__src[8 * v33];
    *v32 = v34;
    if ((v34 & 7) != 0)
    {
      v35 = (unsigned int *)(v34 & 0xFFFFFFFFFFFFFFF8);
      do
        v36 = __ldxr(v35);
      while (__stxr(v36 + 2, v35));
      if ((v36 & 1) == 0)
        *v32 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v33;
    ++v32;
  }
  while (v33 != 3);
  v105 = v32;
  pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::UsdGeomBBoxCache(v121, &v104, 0, 0, a5);
  v37 = &__src[24];
  v114 = (int64x2_t *)&v104;
  sub_20BEEB2B8((void ***)&v114);
  do
  {
    v39 = *((_QWORD *)v37 - 1);
    v37 -= 8;
    v38 = v39;
    if ((v39 & 7) != 0)
    {
      v40 = (unsigned int *)(v38 & 0xFFFFFFFFFFFFFFF8);
      do
        v41 = __ldxr(v40);
      while (__stlxr(v41 - 2, v40));
    }
  }
  while (v37 != __src);
  v42 = *a7;
  if (a7[1] != *a7)
  {
    v43 = 0;
    do
    {
      v44 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08(&v110);
      pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v44, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v42 + 8 * v43), (uint64_t)&v114);
      pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeUntransformedBound((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)v121, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v114, (pxrInternal__aapl__pxrReserved__::GfBBox3d *)__src);
      v45 = v108;
      if ((unint64_t)v108 >= v109)
      {
        v47 = v107;
        v48 = 0x6F96F96F96F96F97 * ((v108 - v107) >> 3);
        v49 = v48 + 1;
        if ((unint64_t)(v48 + 1) > 0xD20D20D20D20D2)
          sub_20BDDF694();
        if (0xDF2DF2DF2DF2DF2ELL * ((uint64_t)(v109 - (_QWORD)v107) >> 3) > v49)
          v49 = 0xDF2DF2DF2DF2DF2ELL * ((uint64_t)(v109 - (_QWORD)v107) >> 3);
        if ((unint64_t)(0x6F96F96F96F96F97 * ((uint64_t)(v109 - (_QWORD)v107) >> 3)) >= 0x69069069069069)
          v50 = 0xD20D20D20D20D2;
        else
          v50 = v49;
        if (v50)
        {
          v51 = (char *)sub_20C580EF0((uint64_t)&v109, v50);
          v53 = v52;
          v45 = v108;
          v47 = v107;
        }
        else
        {
          v51 = 0;
          v53 = 0;
        }
        v54 = &v51[312 * v48];
        memcpy(v54, __src, 0x138uLL);
        v55 = v54;
        while (v45 != v47)
        {
          v45 -= 312;
          v55 -= 312;
          memcpy(v55, v45, 0x132uLL);
        }
        v46 = v54 + 312;
        v107 = v55;
        v108 = v46;
        v109 = (unint64_t)&v51[312 * v53];
        if (v47)
          operator delete(v47);
      }
      else
      {
        memcpy(v108, __src, 0x138uLL);
        v46 = v45 + 312;
      }
      v108 = v46;
      if ((LOBYTE(v117.f64[0]) & 7) != 0)
      {
        v56 = (unsigned int *)(*(_QWORD *)&v117.f64[0] & 0xFFFFFFFFFFFFFFF8);
        do
          v57 = __ldxr(v56);
        while (__stlxr(v57 - 2, v56));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v116 + 1);
      sub_20BFD265C(&v116);
      if (p_p_p_p)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)p_p_p_p);
      ++v43;
      v42 = *a7;
    }
    while (v43 < (a7[1] - *a7) >> 3);
  }
  v58 = (pxrInternal__aapl__pxrReserved__ *)sub_20C580F38(&__p, *a3);
  v101[0] = a4;
  v101[1] = a3;
  v101[2] = &v112;
  v101[3] = &v107;
  v101[4] = a8;
  v101[5] = &__p;
  v59 = *a3;
  if (*a3)
  {
    if (pxrInternal__aapl__pxrReserved__::WorkHasConcurrency(v58))
    {
      *(_DWORD *)__src = 0;
      *(_QWORD *)&__src[128] = 65539;
      *(_DWORD *)&__src[168] = 55;
      tbb::task_group_context::init((uint64_t)__src, v60, v61, v62);
      v114 = (int64x2_t *)__src;
      v63 = tbb::internal::allocate_root_with_context_proxy::allocate((tbb::task_group_context **)&v114, 0x38uLL);
      *(_BYTE *)(v63 - 11) = 1;
      *(_QWORD *)v63 = &off_24C53CD48;
      *(_QWORD *)(v63 + 8) = v59;
      *(_OWORD *)(v63 + 16) = xmmword_20CA59F70;
      *(_QWORD *)(v63 + 32) = v101;
      initial_auto_partitioner_divisor = tbb::internal::get_initial_auto_partitioner_divisor((tbb::internal *)v63);
      *(_DWORD *)(v63 + 48) = 0;
      *(_BYTE *)(v63 + 52) = 5;
      *(_QWORD *)(v63 + 40) = (initial_auto_partitioner_divisor >> 1) & 0x7FFFFFFFFFFFFFFELL;
      (*(void (**)(_QWORD, unint64_t, unint64_t))(**(_QWORD **)(v63 - 40) + 16))(*(_QWORD *)(v63 - 40), v63, v63 - 8);
      tbb::task_group_context::~task_group_context((tbb::task_group_context *)__src);
    }
    else
    {
      sub_20C581378((uint64_t)v101, 0, v59);
    }
  }
  v65 = vdupq_n_s64(0x47EFFFFFE0000000uLL);
  v98 = v65;
  v99 = xmmword_20CA5AAF0;
  v66 = vdupq_n_s64(0xC7EFFFFFE0000000);
  v100 = v66;
  p_p = &__p;
  if (v103 == __p)
  {
    v93 = (float64x2_t)v66;
    v95 = (float64x2_t)v65;
    v74 = -3.40282347e38;
    v73 = 3.40282347e38;
  }
  else
  {
    v70 = (v103 - (_BYTE *)__p) / 48;
    if (pxrInternal__aapl__pxrReserved__::WorkHasConcurrency(v58))
    {
      *(_DWORD *)__src = 0;
      *(_QWORD *)&__src[128] = 65539;
      *(_DWORD *)&__src[168] = 55;
      tbb::task_group_context::init((uint64_t)__src, v67, v68, v69);
      v117 = (float64x2_t)v98;
      p_p_p = &p_p;
      v114 = &v98;
      p_p_p_p = &p_p_p;
      v116 = &v96;
      v118[0] = v99;
      v118[1] = v100;
      v119 = (tbb::task_group_context *)__src;
      v71 = tbb::internal::allocate_root_with_context_proxy::allocate(&v119, 0x40uLL);
      *(_BYTE *)(v71 - 11) = 1;
      *(_QWORD *)v71 = &off_24C53CD90;
      *(_QWORD *)(v71 + 8) = &v114;
      *(_QWORD *)(v71 + 16) = v70;
      *(_OWORD *)(v71 + 24) = xmmword_20CAECFF0;
      v72 = tbb::internal::get_initial_auto_partitioner_divisor((tbb::internal *)v71);
      *(_DWORD *)(v71 + 48) = 0;
      *(_BYTE *)(v71 + 52) = 5;
      *(_QWORD *)(v71 + 40) = (v72 >> 1) & 0x7FFFFFFFFFFFFFFELL;
      *(_BYTE *)(v71 + 56) = 0;
      (*(void (**)(_QWORD, unint64_t, unint64_t))(**(_QWORD **)(v71 - 40) + 16))(*(_QWORD *)(v71 - 40), v71, v71 - 8);
      v73 = *(double *)v118;
      v93 = *(float64x2_t *)((char *)v118 + 8);
      v95 = v117;
      v74 = *((double *)&v118[1] + 1);
      tbb::task_group_context::~task_group_context((tbb::task_group_context *)__src);
    }
    else
    {
      v75 = 0;
      *(int64x2_t *)__src = v98;
      *(_OWORD *)&__src[16] = v99;
      *(int64x2_t *)&__src[32] = v100;
      do
      {
        sub_20BEF4754((uint64_t)__src, (uint64_t)*p_p + v75);
        v75 += 48;
        --v70;
      }
      while (v70);
      v73 = *(double *)&__src[16];
      v93 = *(float64x2_t *)&__src[24];
      v95 = *(float64x2_t *)__src;
      v74 = *(double *)&__src[40];
    }
  }
  sub_20BF5AB98((uint64_t)__src, 2uLL);
  if (__src != (_BYTE *)v90)
  {
    sub_20BF5618C(v90);
    v76 = *(_OWORD *)&__src[16];
    *(_OWORD *)v90 = *(_OWORD *)__src;
    *(_OWORD *)(v90 + 16) = v76;
    memset(__src, 0, 32);
    *(_QWORD *)(v90 + 32) = *(_QWORD *)&__src[32];
    *(_QWORD *)&__src[32] = 0;
  }
  sub_20BF5618C((uint64_t)__src);
  sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)v90, v77, v78);
  v79 = v73;
  v80 = *(float32x2_t **)(v90 + 32);
  *v80 = vcvt_f32_f64(v95);
  v80[1].f32[0] = v79;
  sub_20BF5AFC0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)v90, v81, v82);
  v83 = v74;
  v84 = *(_QWORD *)(v90 + 32);
  *(float32x2_t *)(v84 + 12) = vcvt_f32_f64(v93);
  *(float *)(v84 + 20) = v83;
  if (__p)
  {
    v103 = __p;
    operator delete(__p);
  }
  sub_20C548CF4((uint64_t)v128);
  sub_20C543484((uint64_t)&v127);
  *(_QWORD *)__src = &v126;
  sub_20BEEB2B8((void ***)__src);
  pxrInternal__aapl__pxrReserved__::WorkDispatcher::~WorkDispatcher((pxrInternal__aapl__pxrReserved__::WorkDispatcher *)v121);
  if (v107)
  {
    v108 = v107;
    operator delete(v107);
  }
  v85 = v111;
  if (v111)
  {
    v86 = (unsigned int *)(v111 + 8);
    do
    {
      v87 = __ldxr(v86);
      v88 = v87 - 1;
    }
    while (__stlxr(v88, v86));
    if (!v88)
      (*(void (**)(uint64_t))(*(_QWORD *)v85 + 8))(v85);
  }
  return 1;
}

